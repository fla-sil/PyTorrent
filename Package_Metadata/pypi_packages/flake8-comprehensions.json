{"info": {"author": "Adam Johnson", "author_email": "me@adamj.eu", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Flake8", "Intended Audience :: Developers", "License :: OSI Approved :: ISC License (ISCL)", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only"], "description": "=====================\nflake8-comprehensions\n=====================\n\n.. image:: https://img.shields.io/pypi/v/flake8-comprehensions.svg\n        :target: https://pypi.org/project/flake8-comprehensions/\n\n.. image:: https://img.shields.io/travis/adamchainz/flake8-comprehensions.svg\n        :target: https://travis-ci.org/adamchainz/flake8-comprehensions\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n\nA `flake8 <https://flake8.readthedocs.io/en/latest/index.html>`_ plugin that\nhelps you write better list/set/dict comprehensions.\n\nInstallation\n------------\n\nInstall from ``pip`` with:\n\n.. code-block:: sh\n\n     pip install flake8-comprehensions\n\nPython 3.5 to 3.8 supported.\n\nWhen installed it will automatically be run as part of ``flake8``; you can\ncheck it is being picked up with:\n\n.. code-block:: sh\n\n    $ flake8 --version\n    3.7.8 (flake8-comprehensions: 3.0.0, mccabe: 0.6.1, pycodestyle: 2.5.0, pyflakes: 2.1.1) CPython 3.8.0 on Linux\n\n\nRules\n-----\n\n==== ====\nCode Rule\n==== ====\nC400 Unnecessary generator - rewrite as a list comprehension.\nC401 Unnecessary generator - rewrite as a set comprehension.\nC402 Unnecessary generator - rewrite as a dict comprehension.\nC403 Unnecessary list comprehension - rewrite as a set comprehension.\nC404 Unnecessary list comprehension - rewrite as a dict comprehension.\nC405 Unnecessary (list/tuple) literal - rewrite as a set literal.\nC406 Unnecessary (list/tuple) literal - rewrite as a dict literal.\nC407 Unnecessary (dict/list) comprehension - '<builtin>' can take a generator.\nC408 Unnecessary (dict/list/tuple) call - rewrite as a literal.\nC409 Unnecessary (list/tuple) passed to tuple() - (remove the outer call to tuple()/rewrite as a tuple literal).\nC410 Unnecessary (list/tuple) passed to list() - (remove the outer call to list()/rewrite as a list literal).\nC411 Unnecessary list call - remove the outer call to list().\nC412 Unnecessary (dict/list/set) comprehension - 'in' can take a generator.\nC413 Unnecessary list call around sorted().\nC413 Unnecessary reversed call around sorted() - (use sorted(..., reverse=(True/False))/toggle reverse argument to sorted()).\nC414 Unnecessary (list/reversed/set/sorted/tuple) call within list/set/sorted/tuple().\nC415 Unnecessary subscript reversal of iterable within reversed/set/sorted().\nC416 Unnecessary (list/set) comprehension - rewrite using list/set().\n==== ====\n\nExamples\n--------\n\nC400-402: Unnecessary generator\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt's unnecessary to use ``list``, ``set``, or ``dict`` around a generator\nexpression, since there are equivalent comprehensions for these types. For\nexample:\n\n* Rewrite ``list(f(x) for x in foo)`` as ``[f(x) for x in foo]``\n* Rewrite ``set(f(x) for x in foo)`` as ``{f(x) for x in foo}``\n* Rewrite ``dict((x, f(x)) for x in foo)`` as ``{x: f(x) for x in foo}``\n\nC403-404: Unnecessary list comprehension\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt's unnecessary to use a list comprehension inside a call to ``set`` or\n``dict``, since there are equivalent comprehensions for these types. For\nexample:\n\n* Rewrite ``set([f(x) for x in foo])`` as ``{f(x) for x in foo}``\n* Rewrite ``dict([(x, f(x)) for x in foo])`` as ``{x: f(x) for x in foo}``\n\nC405-406,C409-410: Unnecessary list/tuple literal\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt's unnecessary to use a list or tuple literal within a call to ``tuple``,\n``list``, ``set``, or ``dict`` since there is literal syntax for these types.\nFor example:\n\n* Rewrite ``tuple([1, 2])`` or ``tuple((1, 2))`` as ``(1, 2)``\n* Rewrite ``tuple([])`` as ``()``\n* Rewrite ``list([1, 2])`` or ``list((1, 2))`` as ``[1, 2]``\n* Rewrite ``list([])`` as ``[]``\n* Rewrite ``set([1, 2])`` or ``set((1, 2))`` as ``{1, 2}``\n* Rewrite ``set([])`` as ``set()``\n* Rewrite ``dict([(1, 2)])`` or ``dict(((1, 2),))`` as ``{1: 2}``\n* Rewrite ``dict([])`` as ``{}``\n\nC407: Unnecessary list comprehension - '<builtin>' can take a generator\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt's unnecessary to pass a list comprehension to some builtins that can take\ngenerators instead. For example:\n\n* Rewrite ``sum([x ** 2 for x in range(10)])`` as\n  ``sum(x ** 2 for x in range(10))``\n* Rewrite ``all([foo.bar for foo in foos])`` as\n  ``all(foo.bar for foo in foos)``\n* Rewrite ``filter(lambda x: x % 2 == 0, [x ** 3 for x in range(10)])`` as\n  ``filter(lambda x: x % 2 == 0, (x ** 3 for x in range(10)))``\n\nThe list of builtins that are checked for are:\n\n* ``all``\n* ``any``\n* ``enumerate``\n* ``filter``\n* ``frozenset``\n* ``map``\n* ``max``\n* ``min``\n* ``sorted``\n* ``sum``\n* ``tuple``\n\nC408: Unnecessary (dict/list/tuple) call - rewrite as a literal.\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt's slower to call e.g. ``dict()`` than using the empty literal, because the\nname ``dict`` must be looked up in the global scope in case it has been\nrebound. Same for the other two basic types here. For example:\n\n* Rewrite ``dict()`` as ``{}``\n* Rewrite ``list()`` as ``[]``\n* Rewrite ``tuple()`` as ``()``\n\nC411: Unnecessary list call - remove the outer call to list().\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt's unnecessary to use a ``list`` around list comprehension, since it is\nequivalent without it. For example:\n\n* Rewrite ``list([f(x) for x in foo])`` as ``[f(x) for x in foo]``\n\nC412: Unnecessary (dict/list/set) comprehension - 'in' can take a generator.\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt's unnecessary to pass a dict/list/set comprehension to 'in' that can take a\ngenerator instead. For example:\n\n* Rewrite ``y in [f(x) for x in foo]`` as ``y in (f(x) for x in foo)``\n* Rewrite ``y in {x ** 2 for x in foo}`` as ``y in (x ** 2 for x in foo)``\n\nC413: Unnecessary list/reversed call around sorted().\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt's unnecessary to use ``list()`` around ``sorted()`` as it already returns a\nlist. It is also suboptimal to use ``reversed()`` around ``sorted()`` as the\nlatter has a ``reverse`` argument. For example:\n\n* Rewrite ``list(sorted([2, 3, 1]))`` as ``sorted([2, 3, 1])``\n* Rewrite ``reversed(sorted([2, 3, 1]))`` as ``sorted([2, 3, 1], reverse=True)``\n* Rewrite ``reversed(sorted([2, 3, 1], reverse=True))`` as ``sorted([2, 3, 1])``\n\nC414: Unnecessary (list/reversed/set/sorted/tuple) call within list/set/sorted/tuple().\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt's unnecessary to change the type of the iterable or change the order of\nelements within certain other function calls that will themselves define the\norder of the iterable or the type that is output. For example:\n\n* Rewrite ``list(list(iterable))`` as ``list(iterable)``\n* Rewrite ``list(tuple(iterable))`` as ``list(iterable)``\n* Rewrite ``tuple(list(iterable))`` as ``tuple(iterable)``\n* Rewrite ``tuple(tuple(iterable))`` as ``tuple(iterable)``\n* Rewrite ``set(set(iterable))`` as ``set(iterable)``\n* Rewrite ``set(list(iterable))`` as ``set(iterable)``\n* Rewrite ``set(tuple(iterable))`` as ``set(iterable)``\n* Rewrite ``set(sorted(iterable))`` as ``set(iterable)``\n* Rewrite ``set(reversed(iterable))`` as ``set(iterable)``\n* Rewrite ``sorted(list(iterable))`` as ``sorted(iterable)``\n* Rewrite ``sorted(tuple(iterable))`` as ``sorted(iterable)``\n* Rewrite ``sorted(sorted(iterable))`` as ``sorted(iterable)``\n* Rewrite ``sorted(reversed(iterable))`` as ``sorted(iterable)``\n\nC415: Unnecessary subscript reversal of iterable within reversed/set/sorted().\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt's unnecessary to reverse the order of an iterable using a ``[::-1]`` before\npassing it into ``set()`` which will randomize the order, ``sorted()`` which\nwill return a new sorted list, or ``reversed()`` which will effectively return\nthe original iterable. For example:\n\n* Rewrite ``set(iterable[::-1])`` as ``set(iterable)``\n* Rewrite ``sorted(iterable[::-1])`` as ``sorted(iterable, reverse=True)``\n* Rewrite ``reversed(iterable[::-1])`` as ``iterable``\n\nC416: Unnecessary (list/set) comprehension - rewrite using list/set().\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt's unnecessary to use a list comprehension if the elements are unchanged. The\niterable should be wrapped in ``list()`` or ``set()`` instead. For example:\n\n* Rewrite ``[x for x in iterable]`` as ``list(iterable)``\n* Rewrite ``{x for x in iterable}`` as ``set(iterable)``\n\n=======\nHistory\n=======\n\n3.2.2 (2020-01-20)\n------------------\n\n* Remove check for dict comprehensions in rule C407 as it would also change the\n  results for certain builtins such as ``sum()``.\n\n3.2.1 (2020-01-20)\n------------------\n\n* Remove check for set comprehensions in rule C407 as it would change the\n  results for certain builtins such as ``sum()``.\n\n3.2.0 (2020-01-20)\n------------------\n\n* Add ``filter`` and ``map`` to rule C407.\n* Check for dict and set comprehensions in rules C407 and C412.\n\n3.1.4 (2019-11-20)\n------------------\n\n* Remove the tuple/unpacking check from C416 to prevent false positives where\n  the type of the iterable is changed from some iterable to a tuple.\n\n3.1.3 (2019-11-19)\n------------------\n\n* Ensure the fix for false positives in ``C416`` rule for asynchronous\n  comprehensions runs on Python 3.6 too.\n\n3.1.2 (2019-11-18)\n------------------\n\n* Fix false positives in ``C416`` rule for list comprehensions returning\n  tuples.\n\n3.1.1 (2019-11-16)\n------------------\n\n* Fix false positives in ``C416`` rule for asynchronous comprehensions.\n\n3.1.0 (2019-11-15)\n------------------\n\n* Update Python support to 3.5-3.8.\n* Fix false positives for C404 for list comprehensions not directly creating\n  tuples.\n* Add ``C413`` rule that checks for unnecessary use of ``list()`` or\n  ``reversed()`` around ``sorted()``.\n* Add ``C414`` rule that checks for unnecessary use of the following:\n    * ``list()``, ``reversed()``, ``sorted()``, or ``tuple()``  within ``set``\n      or ``sorted()``\n    * ``list()`` or ``tuple()``  within ``list()`` or ``tuple()``\n    * ``set()``  within ``set``\n* Add ``C415`` rule that checks for unnecessary reversal of an iterable via\n  subscript within ``reversed()``, ``set()``, or ``sorted()``.\n* Add ``C416`` rule that checks for unnecessary list or set comprehensions that\n  can be rewritten using ``list()`` or ``set()``.\n\n3.0.1 (2019-10-28)\n------------------\n\n* Fix version display on ``flake8 --version`` (removing dependency on\n  ``cached-property``). Thanks to Jon Dufresne.\n\n3.0.0 (2019-10-25)\n------------------\n\n* Update Flake8 support to 3.0+ only. 3.0.0 was released in 2016 and the plugin\n  hasn't been tested with it since.\n\n2.3.0 (2019-10-25)\n------------------\n\n* Converted setuptools metadata to configuration file. This meant removing the\n  ``__version__`` attribute from the package. If you want to inspect the\n  installed version, use\n  ``importlib.metadata.version(\"flake8-comprehensions\")``\n  (`docs <https://docs.python.org/3.8/library/importlib.metadata.html#distribution-versions>`__ /\n  `backport <https://pypi.org/project/importlib-metadata/>`__).\n* Add dependencies on ``cached-property`` and ``importlib-metadata``.\n* Fix false negatives in ``C407`` for cases when ``enumerate`` and ``sum()``\n  are passed more than one argument.\n\n2.2.0 (2019-08-12)\n------------------\n\n* Update Python support to 3.5-3.7, as 3.4 has reached its end of life.\n* ``C412`` rule that complains about using list comprehension with ``in``.\n\n2.1.0 (2019-03-01)\n------------------\n\n* Add missing builtin ``enumerate`` to ``C407``.\n\n2.0.0 (2019-02-02)\n------------------\n\n* Drop Python 2 support, only Python 3.4+ is supported now.\n\n1.4.1 (2017-05-17)\n------------------\n\n* Fix false positives in ``C408`` for calls using ``*args`` or ``**kwargs``.\n\n1.4.0 (2017-05-14)\n------------------\n\n* Plugin now reserves the full ``C4XX`` code space rather than just ``C40X``\n* ``C408`` rule that complains about using ``tuple()``, ``list()``, or\n  ``dict()`` instead of a literal.\n* ``C409`` and ``C410`` rules that complain about an unnecessary list or tuple\n  that could be rewritten as a literal.\n* ``C411`` rule that complains about using list comprehension inside a\n  ``list()`` call.\n\n1.3.0 (2017-05-01)\n------------------\n\n* Don't allow installation with Flake8 3.2.0 which doesn't enable the plugin.\n  This bug was fixed in Flake8 3.2.1.\n* Prevent false positives of ``C402`` from generators of expressions that\n  aren't two-tuples.\n* ``C405`` and ``C406`` now also complain about unnecessary tuple literals.\n\n1.2.1 (2016-06-27)\n------------------\n\n* ``C407`` rule that complains about unnecessary list comprehensions inside\n  builtins that can work on generators.\n\n1.2.0 (2016-07-11)\n------------------\n\n* Split all rule codes by type. This allows granular selection of the rules in\n  flake8 configuration.\n\n1.1.1 (2016-04-06)\n------------------\n\n* Fix crash on method calls\n\n1.1.0 (2016-04-06)\n------------------\n\n* ``C401`` rule that complains about unnecessary list comprehensions inside\n  calls to ``set()`` or ``dict()``.\n* ``C402`` rule that complains about unnecessary list literals inside calls to\n  ``set()`` or ``dict()``.\n\n1.0.0 (2016-04-05)\n------------------\n\n* ``C400`` rule that complains about an unnecessary usage of a generator when a\n  list/set/dict comprehension would do.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adamchainz/flake8-comprehensions", "keywords": "flake8,comprehensions,list comprehension,set comprehension,dict comprehension", "license": "ISCL", "maintainer": "", "maintainer_email": "", "name": "flake8-comprehensions", "package_url": "https://pypi.org/project/flake8-comprehensions/", "platform": "", "project_url": "https://pypi.org/project/flake8-comprehensions/", "project_urls": {"Changelog": "https://github.com/adamchainz/flake8-comprehensions/blob/master/HISTORY.rst", "Homepage": "https://github.com/adamchainz/flake8-comprehensions"}, "release_url": "https://pypi.org/project/flake8-comprehensions/3.2.2/", "requires_dist": ["flake8 (!=3.2.0,<4,>=3.0)", "importlib-metadata ; python_version < \"3.8\""], "requires_python": ">=3.5", "summary": "A flake8 plugin to help you write better list/set/dict comprehensions.", "version": "3.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"flake8-comprehensions\">\n<h2>flake8-comprehensions</h2>\n<a href=\"https://pypi.org/project/flake8-comprehensions/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/flake8-comprehensions.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d99579ba5a510ee5da2e782fd58b42faf14c3046/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f666c616b65382d636f6d70726568656e73696f6e732e737667\"></a>\n<a href=\"https://travis-ci.org/adamchainz/flake8-comprehensions\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/adamchainz/flake8-comprehensions.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9f943fbb9b6e45aeea6efdb1b8436fe7d5ebc95/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6164616d636861696e7a2f666c616b65382d636f6d70726568656e73696f6e732e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/code%20style-black-000000.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<p>A <a href=\"https://flake8.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">flake8</a> plugin that\nhelps you write better list/set/dict comprehensions.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Install from <tt>pip</tt> with:</p>\n<pre>pip install flake8-comprehensions\n</pre>\n<p>Python 3.5 to 3.8 supported.</p>\n<p>When installed it will automatically be run as part of <tt>flake8</tt>; you can\ncheck it is being picked up with:</p>\n<pre>$ flake8 --version\n<span class=\"m\">3</span>.7.8 <span class=\"o\">(</span>flake8-comprehensions: <span class=\"m\">3</span>.0.0, mccabe: <span class=\"m\">0</span>.6.1, pycodestyle: <span class=\"m\">2</span>.5.0, pyflakes: <span class=\"m\">2</span>.1.1<span class=\"o\">)</span> CPython <span class=\"m\">3</span>.8.0 on Linux\n</pre>\n</div>\n<div id=\"rules\">\n<h3>Rules</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Code</th>\n<th>Rule</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>C400</td>\n<td>Unnecessary generator - rewrite as a list comprehension.</td>\n</tr>\n<tr><td>C401</td>\n<td>Unnecessary generator - rewrite as a set comprehension.</td>\n</tr>\n<tr><td>C402</td>\n<td>Unnecessary generator - rewrite as a dict comprehension.</td>\n</tr>\n<tr><td>C403</td>\n<td>Unnecessary list comprehension - rewrite as a set comprehension.</td>\n</tr>\n<tr><td>C404</td>\n<td>Unnecessary list comprehension - rewrite as a dict comprehension.</td>\n</tr>\n<tr><td>C405</td>\n<td>Unnecessary (list/tuple) literal - rewrite as a set literal.</td>\n</tr>\n<tr><td>C406</td>\n<td>Unnecessary (list/tuple) literal - rewrite as a dict literal.</td>\n</tr>\n<tr><td>C407</td>\n<td>Unnecessary (dict/list) comprehension - \u2018&lt;builtin&gt;\u2019 can take a generator.</td>\n</tr>\n<tr><td>C408</td>\n<td>Unnecessary (dict/list/tuple) call - rewrite as a literal.</td>\n</tr>\n<tr><td>C409</td>\n<td>Unnecessary (list/tuple) passed to tuple() - (remove the outer call to tuple()/rewrite as a tuple literal).</td>\n</tr>\n<tr><td>C410</td>\n<td>Unnecessary (list/tuple) passed to list() - (remove the outer call to list()/rewrite as a list literal).</td>\n</tr>\n<tr><td>C411</td>\n<td>Unnecessary list call - remove the outer call to list().</td>\n</tr>\n<tr><td>C412</td>\n<td>Unnecessary (dict/list/set) comprehension - \u2018in\u2019 can take a generator.</td>\n</tr>\n<tr><td>C413</td>\n<td>Unnecessary list call around sorted().</td>\n</tr>\n<tr><td>C413</td>\n<td>Unnecessary reversed call around sorted() - (use sorted(\u2026, reverse=(True/False))/toggle reverse argument to sorted()).</td>\n</tr>\n<tr><td>C414</td>\n<td>Unnecessary (list/reversed/set/sorted/tuple) call within list/set/sorted/tuple().</td>\n</tr>\n<tr><td>C415</td>\n<td>Unnecessary subscript reversal of iterable within reversed/set/sorted().</td>\n</tr>\n<tr><td>C416</td>\n<td>Unnecessary (list/set) comprehension - rewrite using list/set().</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<div id=\"c400-402-unnecessary-generator\">\n<h4>C400-402: Unnecessary generator</h4>\n<p>It\u2019s unnecessary to use <tt>list</tt>, <tt>set</tt>, or <tt>dict</tt> around a generator\nexpression, since there are equivalent comprehensions for these types. For\nexample:</p>\n<ul>\n<li>Rewrite <tt>list(f(x) for x in foo)</tt> as <tt>[f(x) for x in foo]</tt></li>\n<li>Rewrite <tt>set(f(x) for x in foo)</tt> as <tt>{f(x) for x in foo}</tt></li>\n<li>Rewrite <tt><span class=\"pre\">dict((x,</span> f(x)) for x in foo)</tt> as <tt>{x: f(x) for x in foo}</tt></li>\n</ul>\n</div>\n<div id=\"c403-404-unnecessary-list-comprehension\">\n<h4>C403-404: Unnecessary list comprehension</h4>\n<p>It\u2019s unnecessary to use a list comprehension inside a call to <tt>set</tt> or\n<tt>dict</tt>, since there are equivalent comprehensions for these types. For\nexample:</p>\n<ul>\n<li>Rewrite <tt><span class=\"pre\">set([f(x)</span> for x in foo])</tt> as <tt>{f(x) for x in foo}</tt></li>\n<li>Rewrite <tt><span class=\"pre\">dict([(x,</span> f(x)) for x in foo])</tt> as <tt>{x: f(x) for x in foo}</tt></li>\n</ul>\n</div>\n<div id=\"c405-406-c409-410-unnecessary-list-tuple-literal\">\n<h4>C405-406,C409-410: Unnecessary list/tuple literal</h4>\n<p>It\u2019s unnecessary to use a list or tuple literal within a call to <tt>tuple</tt>,\n<tt>list</tt>, <tt>set</tt>, or <tt>dict</tt> since there is literal syntax for these types.\nFor example:</p>\n<ul>\n<li>Rewrite <tt><span class=\"pre\">tuple([1,</span> 2])</tt> or <tt><span class=\"pre\">tuple((1,</span> 2))</tt> as <tt>(1, 2)</tt></li>\n<li>Rewrite <tt><span class=\"pre\">tuple([])</span></tt> as <tt>()</tt></li>\n<li>Rewrite <tt><span class=\"pre\">list([1,</span> 2])</tt> or <tt><span class=\"pre\">list((1,</span> 2))</tt> as <tt>[1, 2]</tt></li>\n<li>Rewrite <tt><span class=\"pre\">list([])</span></tt> as <tt>[]</tt></li>\n<li>Rewrite <tt><span class=\"pre\">set([1,</span> 2])</tt> or <tt><span class=\"pre\">set((1,</span> 2))</tt> as <tt>{1, 2}</tt></li>\n<li>Rewrite <tt><span class=\"pre\">set([])</span></tt> as <tt>set()</tt></li>\n<li>Rewrite <tt><span class=\"pre\">dict([(1,</span> <span class=\"pre\">2)])</span></tt> or <tt><span class=\"pre\">dict(((1,</span> <span class=\"pre\">2),))</span></tt> as <tt>{1: 2}</tt></li>\n<li>Rewrite <tt><span class=\"pre\">dict([])</span></tt> as <tt>{}</tt></li>\n</ul>\n</div>\n<div id=\"c407-unnecessary-list-comprehension-builtin-can-take-a-generator\">\n<h4>C407: Unnecessary list comprehension - \u2018&lt;builtin&gt;\u2019 can take a generator</h4>\n<p>It\u2019s unnecessary to pass a list comprehension to some builtins that can take\ngenerators instead. For example:</p>\n<ul>\n<li>Rewrite <tt><span class=\"pre\">sum([x</span> ** 2 for x in <span class=\"pre\">range(10)])</span></tt> as\n<tt>sum(x ** 2 for x in range(10))</tt></li>\n<li>Rewrite <tt><span class=\"pre\">all([foo.bar</span> for foo in foos])</tt> as\n<tt>all(foo.bar for foo in foos)</tt></li>\n<li>Rewrite <tt>filter(lambda x: x % 2 == 0, [x ** 3 for x in <span class=\"pre\">range(10)])</span></tt> as\n<tt>filter(lambda x: x % 2 == 0, (x ** 3 for x in <span class=\"pre\">range(10)))</span></tt></li>\n</ul>\n<p>The list of builtins that are checked for are:</p>\n<ul>\n<li><tt>all</tt></li>\n<li><tt>any</tt></li>\n<li><tt>enumerate</tt></li>\n<li><tt>filter</tt></li>\n<li><tt>frozenset</tt></li>\n<li><tt>map</tt></li>\n<li><tt>max</tt></li>\n<li><tt>min</tt></li>\n<li><tt>sorted</tt></li>\n<li><tt>sum</tt></li>\n<li><tt>tuple</tt></li>\n</ul>\n</div>\n<div id=\"c408-unnecessary-dict-list-tuple-call-rewrite-as-a-literal\">\n<h4>C408: Unnecessary (dict/list/tuple) call - rewrite as a literal.</h4>\n<p>It\u2019s slower to call e.g. <tt>dict()</tt> than using the empty literal, because the\nname <tt>dict</tt> must be looked up in the global scope in case it has been\nrebound. Same for the other two basic types here. For example:</p>\n<ul>\n<li>Rewrite <tt>dict()</tt> as <tt>{}</tt></li>\n<li>Rewrite <tt>list()</tt> as <tt>[]</tt></li>\n<li>Rewrite <tt>tuple()</tt> as <tt>()</tt></li>\n</ul>\n</div>\n<div id=\"c411-unnecessary-list-call-remove-the-outer-call-to-list\">\n<h4>C411: Unnecessary list call - remove the outer call to list().</h4>\n<p>It\u2019s unnecessary to use a <tt>list</tt> around list comprehension, since it is\nequivalent without it. For example:</p>\n<ul>\n<li>Rewrite <tt><span class=\"pre\">list([f(x)</span> for x in foo])</tt> as <tt>[f(x) for x in foo]</tt></li>\n</ul>\n</div>\n<div id=\"c412-unnecessary-dict-list-set-comprehension-in-can-take-a-generator\">\n<h4>C412: Unnecessary (dict/list/set) comprehension - \u2018in\u2019 can take a generator.</h4>\n<p>It\u2019s unnecessary to pass a dict/list/set comprehension to \u2018in\u2019 that can take a\ngenerator instead. For example:</p>\n<ul>\n<li>Rewrite <tt>y in [f(x) for x in foo]</tt> as <tt>y in (f(x) for x in foo)</tt></li>\n<li>Rewrite <tt>y in {x ** 2 for x in foo}</tt> as <tt>y in (x ** 2 for x in foo)</tt></li>\n</ul>\n</div>\n<div id=\"c413-unnecessary-list-reversed-call-around-sorted\">\n<h4>C413: Unnecessary list/reversed call around sorted().</h4>\n<p>It\u2019s unnecessary to use <tt>list()</tt> around <tt>sorted()</tt> as it already returns a\nlist. It is also suboptimal to use <tt>reversed()</tt> around <tt>sorted()</tt> as the\nlatter has a <tt>reverse</tt> argument. For example:</p>\n<ul>\n<li>Rewrite <tt><span class=\"pre\">list(sorted([2,</span> 3, <span class=\"pre\">1]))</span></tt> as <tt><span class=\"pre\">sorted([2,</span> 3, 1])</tt></li>\n<li>Rewrite <tt><span class=\"pre\">reversed(sorted([2,</span> 3, <span class=\"pre\">1]))</span></tt> as <tt><span class=\"pre\">sorted([2,</span> 3, 1], reverse=True)</tt></li>\n<li>Rewrite <tt><span class=\"pre\">reversed(sorted([2,</span> 3, 1], reverse=True))</tt> as <tt><span class=\"pre\">sorted([2,</span> 3, 1])</tt></li>\n</ul>\n</div>\n<div id=\"c414-unnecessary-list-reversed-set-sorted-tuple-call-within-list-set-sorted-tuple\">\n<h4>C414: Unnecessary (list/reversed/set/sorted/tuple) call within list/set/sorted/tuple().</h4>\n<p>It\u2019s unnecessary to change the type of the iterable or change the order of\nelements within certain other function calls that will themselves define the\norder of the iterable or the type that is output. For example:</p>\n<ul>\n<li>Rewrite <tt>list(list(iterable))</tt> as <tt>list(iterable)</tt></li>\n<li>Rewrite <tt>list(tuple(iterable))</tt> as <tt>list(iterable)</tt></li>\n<li>Rewrite <tt>tuple(list(iterable))</tt> as <tt>tuple(iterable)</tt></li>\n<li>Rewrite <tt>tuple(tuple(iterable))</tt> as <tt>tuple(iterable)</tt></li>\n<li>Rewrite <tt>set(set(iterable))</tt> as <tt>set(iterable)</tt></li>\n<li>Rewrite <tt>set(list(iterable))</tt> as <tt>set(iterable)</tt></li>\n<li>Rewrite <tt>set(tuple(iterable))</tt> as <tt>set(iterable)</tt></li>\n<li>Rewrite <tt>set(sorted(iterable))</tt> as <tt>set(iterable)</tt></li>\n<li>Rewrite <tt>set(reversed(iterable))</tt> as <tt>set(iterable)</tt></li>\n<li>Rewrite <tt>sorted(list(iterable))</tt> as <tt>sorted(iterable)</tt></li>\n<li>Rewrite <tt>sorted(tuple(iterable))</tt> as <tt>sorted(iterable)</tt></li>\n<li>Rewrite <tt>sorted(sorted(iterable))</tt> as <tt>sorted(iterable)</tt></li>\n<li>Rewrite <tt>sorted(reversed(iterable))</tt> as <tt>sorted(iterable)</tt></li>\n</ul>\n</div>\n<div id=\"c415-unnecessary-subscript-reversal-of-iterable-within-reversed-set-sorted\">\n<h4>C415: Unnecessary subscript reversal of iterable within reversed/set/sorted().</h4>\n<p>It\u2019s unnecessary to reverse the order of an iterable using a <tt><span class=\"pre\">[::-1]</span></tt> before\npassing it into <tt>set()</tt> which will randomize the order, <tt>sorted()</tt> which\nwill return a new sorted list, or <tt>reversed()</tt> which will effectively return\nthe original iterable. For example:</p>\n<ul>\n<li>Rewrite <tt><span class=\"pre\">set(iterable[::-1])</span></tt> as <tt>set(iterable)</tt></li>\n<li>Rewrite <tt><span class=\"pre\">sorted(iterable[::-1])</span></tt> as <tt>sorted(iterable, reverse=True)</tt></li>\n<li>Rewrite <tt><span class=\"pre\">reversed(iterable[::-1])</span></tt> as <tt>iterable</tt></li>\n</ul>\n</div>\n<div id=\"c416-unnecessary-list-set-comprehension-rewrite-using-list-set\">\n<h4>C416: Unnecessary (list/set) comprehension - rewrite using list/set().</h4>\n<p>It\u2019s unnecessary to use a list comprehension if the elements are unchanged. The\niterable should be wrapped in <tt>list()</tt> or <tt>set()</tt> instead. For example:</p>\n<ul>\n<li>Rewrite <tt>[x for x in iterable]</tt> as <tt>list(iterable)</tt></li>\n<li>Rewrite <tt>{x for x in iterable}</tt> as <tt>set(iterable)</tt></li>\n</ul>\n</div>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>3.2.2 (2020-01-20)</h3>\n<ul>\n<li>Remove check for dict comprehensions in rule C407 as it would also change the\nresults for certain builtins such as <tt>sum()</tt>.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>3.2.1 (2020-01-20)</h3>\n<ul>\n<li>Remove check for set comprehensions in rule C407 as it would change the\nresults for certain builtins such as <tt>sum()</tt>.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>3.2.0 (2020-01-20)</h3>\n<ul>\n<li>Add <tt>filter</tt> and <tt>map</tt> to rule C407.</li>\n<li>Check for dict and set comprehensions in rules C407 and C412.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>3.1.4 (2019-11-20)</h3>\n<ul>\n<li>Remove the tuple/unpacking check from C416 to prevent false positives where\nthe type of the iterable is changed from some iterable to a tuple.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>3.1.3 (2019-11-19)</h3>\n<ul>\n<li>Ensure the fix for false positives in <tt>C416</tt> rule for asynchronous\ncomprehensions runs on Python 3.6 too.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>3.1.2 (2019-11-18)</h3>\n<ul>\n<li>Fix false positives in <tt>C416</tt> rule for list comprehensions returning\ntuples.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>3.1.1 (2019-11-16)</h3>\n<ul>\n<li>Fix false positives in <tt>C416</tt> rule for asynchronous comprehensions.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>3.1.0 (2019-11-15)</h3>\n<ul>\n<li>Update Python support to 3.5-3.8.</li>\n<li>Fix false positives for C404 for list comprehensions not directly creating\ntuples.</li>\n<li>Add <tt>C413</tt> rule that checks for unnecessary use of <tt>list()</tt> or\n<tt>reversed()</tt> around <tt>sorted()</tt>.</li>\n<li><dl>\n<dt>Add <tt>C414</tt> rule that checks for unnecessary use of the following:</dt>\n<dd><ul>\n<li><tt>list()</tt>, <tt>reversed()</tt>, <tt>sorted()</tt>, or <tt>tuple()</tt>  within <tt>set</tt>\nor <tt>sorted()</tt></li>\n<li><tt>list()</tt> or <tt>tuple()</tt>  within <tt>list()</tt> or <tt>tuple()</tt></li>\n<li><tt>set()</tt>  within <tt>set</tt></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>Add <tt>C415</tt> rule that checks for unnecessary reversal of an iterable via\nsubscript within <tt>reversed()</tt>, <tt>set()</tt>, or <tt>sorted()</tt>.</li>\n<li>Add <tt>C416</tt> rule that checks for unnecessary list or set comprehensions that\ncan be rewritten using <tt>list()</tt> or <tt>set()</tt>.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>3.0.1 (2019-10-28)</h3>\n<ul>\n<li>Fix version display on <tt>flake8 <span class=\"pre\">--version</span></tt> (removing dependency on\n<tt><span class=\"pre\">cached-property</span></tt>). Thanks to Jon Dufresne.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>3.0.0 (2019-10-25)</h3>\n<ul>\n<li>Update Flake8 support to 3.0+ only. 3.0.0 was released in 2016 and the plugin\nhasn\u2019t been tested with it since.</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>2.3.0 (2019-10-25)</h3>\n<ul>\n<li>Converted setuptools metadata to configuration file. This meant removing the\n<tt>__version__</tt> attribute from the package. If you want to inspect the\ninstalled version, use\n<tt><span class=\"pre\">importlib.metadata.version(\"flake8-comprehensions\")</span></tt>\n(<a href=\"https://docs.python.org/3.8/library/importlib.metadata.html#distribution-versions\" rel=\"nofollow\">docs</a> /\n<a href=\"https://pypi.org/project/importlib-metadata/\" rel=\"nofollow\">backport</a>).</li>\n<li>Add dependencies on <tt><span class=\"pre\">cached-property</span></tt> and <tt><span class=\"pre\">importlib-metadata</span></tt>.</li>\n<li>Fix false negatives in <tt>C407</tt> for cases when <tt>enumerate</tt> and <tt>sum()</tt>\nare passed more than one argument.</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>2.2.0 (2019-08-12)</h3>\n<ul>\n<li>Update Python support to 3.5-3.7, as 3.4 has reached its end of life.</li>\n<li><tt>C412</tt> rule that complains about using list comprehension with <tt>in</tt>.</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>2.1.0 (2019-03-01)</h3>\n<ul>\n<li>Add missing builtin <tt>enumerate</tt> to <tt>C407</tt>.</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>2.0.0 (2019-02-02)</h3>\n<ul>\n<li>Drop Python 2 support, only Python 3.4+ is supported now.</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>1.4.1 (2017-05-17)</h3>\n<ul>\n<li>Fix false positives in <tt>C408</tt> for calls using <tt>*args</tt> or <tt>**kwargs</tt>.</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>1.4.0 (2017-05-14)</h3>\n<ul>\n<li>Plugin now reserves the full <tt>C4XX</tt> code space rather than just <tt>C40X</tt></li>\n<li><tt>C408</tt> rule that complains about using <tt>tuple()</tt>, <tt>list()</tt>, or\n<tt>dict()</tt> instead of a literal.</li>\n<li><tt>C409</tt> and <tt>C410</tt> rules that complain about an unnecessary list or tuple\nthat could be rewritten as a literal.</li>\n<li><tt>C411</tt> rule that complains about using list comprehension inside a\n<tt>list()</tt> call.</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>1.3.0 (2017-05-01)</h3>\n<ul>\n<li>Don\u2019t allow installation with Flake8 3.2.0 which doesn\u2019t enable the plugin.\nThis bug was fixed in Flake8 3.2.1.</li>\n<li>Prevent false positives of <tt>C402</tt> from generators of expressions that\naren\u2019t two-tuples.</li>\n<li><tt>C405</tt> and <tt>C406</tt> now also complain about unnecessary tuple literals.</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>1.2.1 (2016-06-27)</h3>\n<ul>\n<li><tt>C407</tt> rule that complains about unnecessary list comprehensions inside\nbuiltins that can work on generators.</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3>1.2.0 (2016-07-11)</h3>\n<ul>\n<li>Split all rule codes by type. This allows granular selection of the rules in\nflake8 configuration.</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3>1.1.1 (2016-04-06)</h3>\n<ul>\n<li>Fix crash on method calls</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3>1.1.0 (2016-04-06)</h3>\n<ul>\n<li><tt>C401</tt> rule that complains about unnecessary list comprehensions inside\ncalls to <tt>set()</tt> or <tt>dict()</tt>.</li>\n<li><tt>C402</tt> rule that complains about unnecessary list literals inside calls to\n<tt>set()</tt> or <tt>dict()</tt>.</li>\n</ul>\n</div>\n<div id=\"id22\">\n<h3>1.0.0 (2016-04-05)</h3>\n<ul>\n<li><tt>C400</tt> rule that complains about an unnecessary usage of a generator when a\nlist/set/dict comprehension would do.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6487794, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "00c1dd828734e3df758316a1a1c4e350", "sha256": "c90f61acc01ab213cd1429d3a8c81ca596427496f08ad86b38f67fa67add73c9"}, "downloads": -1, "filename": "flake8_comprehensions-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "00c1dd828734e3df758316a1a1c4e350", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4741, "upload_time": "2016-04-05T12:59:30", "upload_time_iso_8601": "2016-04-05T12:59:30.219169Z", "url": "https://files.pythonhosted.org/packages/8e/ed/3a985bed7af375270d4cf10c4dc15c9b876b071039936bbcd1a13503c540/flake8_comprehensions-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a688ad4c6db58756d703fad5b50d770", "sha256": "c5f777c996fb0152128e140f6fa919dfbd9080da2ab12f34041c6a705aae4918"}, "downloads": -1, "filename": "flake8-comprehensions-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6a688ad4c6db58756d703fad5b50d770", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4865, "upload_time": "2016-04-05T13:00:32", "upload_time_iso_8601": "2016-04-05T13:00:32.098189Z", "url": "https://files.pythonhosted.org/packages/4c/8e/f7fbc6b770c159d6796ab96f5eba01ad9c6526a94b29d45432708d232585/flake8-comprehensions-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "7231c8fa83a1724889e405ff54c18de9", "sha256": "d82b185ced11dc9277dc91e3bb083ce2e158844a22e4c4a0a18f638cd90a3f10"}, "downloads": -1, "filename": "flake8_comprehensions-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7231c8fa83a1724889e405ff54c18de9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5151, "upload_time": "2016-04-06T09:35:57", "upload_time_iso_8601": "2016-04-06T09:35:57.785675Z", "url": "https://files.pythonhosted.org/packages/47/7c/475869de8a2aa0913db30e79168fbceec0d6c27539d9e57e84c472be45ea/flake8_comprehensions-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b49800f150e0aefd80331fb4de57aeaa", "sha256": "9838cacae5918273aeef5be7533f8b1ba8f4386d0be2c47a07132dd5a2680542"}, "downloads": -1, "filename": "flake8-comprehensions-1.1.0.tar.gz", "has_sig": false, "md5_digest": "b49800f150e0aefd80331fb4de57aeaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5246, "upload_time": "2016-04-06T09:36:16", "upload_time_iso_8601": "2016-04-06T09:36:16.215279Z", "url": "https://files.pythonhosted.org/packages/d4/e1/984e4b6cfdab5d00114c330a0446b9f159597e621fa81a5e6646789f372b/flake8-comprehensions-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "1babaa8ac25f8cf08076f660c7b5c1f2", "sha256": "0dbd7ca0b8d873d0cd650ef8a5943e14a13b5f3f9eab1ca6e71aa0ab90f33ff0"}, "downloads": -1, "filename": "flake8_comprehensions-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1babaa8ac25f8cf08076f660c7b5c1f2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5202, "upload_time": "2016-04-06T11:37:45", "upload_time_iso_8601": "2016-04-06T11:37:45.654855Z", "url": "https://files.pythonhosted.org/packages/81/5b/8af9a97cbdf92b29fde2be6871100d245993a559e2a241996ede839fcacd/flake8_comprehensions-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cecea5527b11e35b5f2c8a65cd096fd", "sha256": "051f4a3e70dfb74630e0b36007f68ad03e0ee4b184ef65252d2e0c8a71d3add6"}, "downloads": -1, "filename": "flake8-comprehensions-1.1.1.tar.gz", "has_sig": false, "md5_digest": "0cecea5527b11e35b5f2c8a65cd096fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5403, "upload_time": "2016-04-06T11:37:52", "upload_time_iso_8601": "2016-04-06T11:37:52.976204Z", "url": "https://files.pythonhosted.org/packages/48/0b/cf7791832ff094a17bb0fd4a121453f3b142733ee199662c5e6355cc1584/flake8-comprehensions-1.1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "dec6c78fd88daaf54d1605377e65b55a", "sha256": "efdd365fc9e9e5773e93d9891a74efe014760a23de68420cb989bf2b7e951986"}, "downloads": -1, "filename": "flake8_comprehensions-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "dec6c78fd88daaf54d1605377e65b55a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5635, "upload_time": "2016-07-11T20:48:26", "upload_time_iso_8601": "2016-07-11T20:48:26.155389Z", "url": "https://files.pythonhosted.org/packages/e6/b7/f963b239c705a31536c4683f277b50e98eabee31670b2338534949cee071/flake8_comprehensions-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c67a4ec4cf8b62a6050c1cef93386ee4", "sha256": "7a13f0a85cb6f6a28decbd521c5f38eb98c7e20b843accc85e9f69a27e164583"}, "downloads": -1, "filename": "flake8-comprehensions-1.2.0.tar.gz", "has_sig": false, "md5_digest": "c67a4ec4cf8b62a6050c1cef93386ee4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5666, "upload_time": "2016-07-11T20:48:33", "upload_time_iso_8601": "2016-07-11T20:48:33.441721Z", "url": "https://files.pythonhosted.org/packages/83/1a/7590b2c0689a903af4b042b6341755a58c1d61ece2501cce6731fe454efb/flake8-comprehensions-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "0012441ebb3861d2088a63168144919f", "sha256": "45ca21e21148142657864a973431c85aeeb3112b81d96b86a1842ad018082127"}, "downloads": -1, "filename": "flake8_comprehensions-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0012441ebb3861d2088a63168144919f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 5786, "upload_time": "2016-07-27T22:33:24", "upload_time_iso_8601": "2016-07-27T22:33:24.681791Z", "url": "https://files.pythonhosted.org/packages/fc/0e/4f3186726b7636a901d5f6f87ceb49e1a5ea4e6e35151523eb224c596644/flake8_comprehensions-1.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcf9038ca3fb8d4ee21e60100a299ed2", "sha256": "8ab9e758ee664bf517dbfef76903b61533491ad9dbe40f93b8eb4e5190ec81e0"}, "downloads": -1, "filename": "flake8-comprehensions-1.2.1.tar.gz", "has_sig": false, "md5_digest": "fcf9038ca3fb8d4ee21e60100a299ed2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5870, "upload_time": "2016-07-27T22:33:21", "upload_time_iso_8601": "2016-07-27T22:33:21.778008Z", "url": "https://files.pythonhosted.org/packages/f5/c0/5cae7432d8686c33bf0fda9a9243937923d2bf2de5570e73226322bc3a99/flake8-comprehensions-1.2.1.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "aa051aa00845a9d70996e4535ddb8050", "sha256": "b2496205c06330992f7acad0f949e17146b2378749e86ae001ab368fb0b76118"}, "downloads": -1, "filename": "flake8_comprehensions-1.3.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "aa051aa00845a9d70996e4535ddb8050", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6551, "upload_time": "2017-05-01T21:10:39", "upload_time_iso_8601": "2017-05-01T21:10:39.851440Z", "url": "https://files.pythonhosted.org/packages/2a/46/253d553f1c050357f960a7ecd3f2a887e5e9bb56f7ef087a3797973da7cb/flake8_comprehensions-1.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "02d7418b4becb58803c4d00508c99c3e", "sha256": "009139c5d2a68e1f7d5550878bdf23c47cf57f0740f37afef542eb77d4298aeb"}, "downloads": -1, "filename": "flake8-comprehensions-1.3.0.tar.gz", "has_sig": true, "md5_digest": "02d7418b4becb58803c4d00508c99c3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6377, "upload_time": "2017-05-01T21:10:38", "upload_time_iso_8601": "2017-05-01T21:10:38.044921Z", "url": "https://files.pythonhosted.org/packages/ce/ce/496897a8937189520a38158871fe10d0e5542d2b9f2c3bb527c7635f8497/flake8-comprehensions-1.3.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "88e3038e5b1b5ff877cb736daa235e67", "sha256": "675a6ed0379875cc8a56344e19fa8f83cf2b52c178000f12d64dbb51d872b3e8"}, "downloads": -1, "filename": "flake8_comprehensions-1.4.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "88e3038e5b1b5ff877cb736daa235e67", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7657, "upload_time": "2017-05-14T09:20:02", "upload_time_iso_8601": "2017-05-14T09:20:02.522877Z", "url": "https://files.pythonhosted.org/packages/a2/2f/48f0a30128d68b1a77b7b06f98e2ed2bba6764b891242f76b5219cc41dae/flake8_comprehensions-1.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a85bd0a77b99f786e09ee3a722e940e", "sha256": "c0d58db575112447b3d2177532cf6ec971427a9332278960268a61fce7d66761"}, "downloads": -1, "filename": "flake8-comprehensions-1.4.0.tar.gz", "has_sig": true, "md5_digest": "8a85bd0a77b99f786e09ee3a722e940e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7385, "upload_time": "2017-05-14T09:19:59", "upload_time_iso_8601": "2017-05-14T09:19:59.759278Z", "url": "https://files.pythonhosted.org/packages/e2/8e/d5c771c6aef8849ec17943d77b2b175dbbed1e96fb686a8c890844d219fd/flake8-comprehensions-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "eb25f8f6340ce428d2a2521493a565bd", "sha256": "e4ccf1627f75f192eb7fde640f5edb81c98d04b1390df9d4145ffd7710bb1ef2"}, "downloads": -1, "filename": "flake8_comprehensions-1.4.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "eb25f8f6340ce428d2a2521493a565bd", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7851, "upload_time": "2017-05-17T15:21:26", "upload_time_iso_8601": "2017-05-17T15:21:26.063296Z", "url": "https://files.pythonhosted.org/packages/c2/18/eca565bc94a19d47e230dd08fc2a420f2dd2d4bc9f5994d5f856b340e73c/flake8_comprehensions-1.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2e5391c4cf7a04525f2aa38cadcbf1e", "sha256": "b83891fec0e680b07aa1fd92e53eb6993be29a0f3673a09badbe8da307c445e0"}, "downloads": -1, "filename": "flake8-comprehensions-1.4.1.tar.gz", "has_sig": true, "md5_digest": "d2e5391c4cf7a04525f2aa38cadcbf1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7603, "upload_time": "2017-05-17T15:21:23", "upload_time_iso_8601": "2017-05-17T15:21:23.843629Z", "url": "https://files.pythonhosted.org/packages/34/07/cd53c9ae3275f5f52c5ec196b36b3cd5a71e943b199cef18ffaaf4761338/flake8-comprehensions-1.4.1.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "184d1eee29e04d831c1071259c405e1e", "sha256": "e93f1053c778893bca368ee779bf5e5a3803fd19e2a32bd272325d010591cd84"}, "downloads": -1, "filename": "flake8_comprehensions-2.0.0-py3-none-any.whl", "has_sig": true, "md5_digest": "184d1eee29e04d831c1071259c405e1e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 5507, "upload_time": "2019-02-04T20:33:29", "upload_time_iso_8601": "2019-02-04T20:33:29.576264Z", "url": "https://files.pythonhosted.org/packages/73/fa/a56ee5539ece9b3dada446f9609c0f830cf62aa2b4cb4df55960d3a2a3b4/flake8_comprehensions-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ffa4bb39d2a5389381b36ce7f9d7c8f", "sha256": "912a831ff61975b394c3f5444dbc82d033730558574c45373893442f7e7e062d"}, "downloads": -1, "filename": "flake8-comprehensions-2.0.0.tar.gz", "has_sig": false, "md5_digest": "7ffa4bb39d2a5389381b36ce7f9d7c8f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 5764, "upload_time": "2019-02-02T19:32:21", "upload_time_iso_8601": "2019-02-02T19:32:21.324274Z", "url": "https://files.pythonhosted.org/packages/66/b3/393dcf78d7c3ed1fb36c7efd946087aba5b0fb16cf53e3a98868a156c319/flake8-comprehensions-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "5e0296c7839a4b948cd00699e24c6b9a", "sha256": "35f826956e87f230415cde9c3b8b454e785736cf5ff0be551c441b41b937f699"}, "downloads": -1, "filename": "flake8_comprehensions-2.1.0-py3-none-any.whl", "has_sig": true, "md5_digest": "5e0296c7839a4b948cd00699e24c6b9a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 5556, "upload_time": "2019-03-01T17:49:28", "upload_time_iso_8601": "2019-03-01T17:49:28.797316Z", "url": "https://files.pythonhosted.org/packages/6e/54/0386b02e13a8ca0b9970fae34e35b9bab9f8017cea49288047ced56118cf/flake8_comprehensions-2.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "06a12690c756bda3513ce4200dd0b4b2", "sha256": "f0b61d983d608790abf3664830d68efd3412265c2d10f6a4ba1a353274dbeb64"}, "downloads": -1, "filename": "flake8-comprehensions-2.1.0.tar.gz", "has_sig": true, "md5_digest": "06a12690c756bda3513ce4200dd0b4b2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 5814, "upload_time": "2019-03-01T17:49:30", "upload_time_iso_8601": "2019-03-01T17:49:30.537491Z", "url": "https://files.pythonhosted.org/packages/66/a5/bdd53689493bddcc02a7e5194006a1c6d00887b89ba4adf27f3f249739ff/flake8-comprehensions-2.1.0.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "849c31519e9d23e0c419a6fa435e5b39", "sha256": "7b174ded3d7e73edf587e942458b6c1a7c3456d512d9c435deae367236b9562c"}, "downloads": -1, "filename": "flake8_comprehensions-2.2.0-py3-none-any.whl", "has_sig": true, "md5_digest": "849c31519e9d23e0c419a6fa435e5b39", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 5836, "upload_time": "2019-08-12T07:56:41", "upload_time_iso_8601": "2019-08-12T07:56:41.702082Z", "url": "https://files.pythonhosted.org/packages/1e/5d/8e71c58199e70ee5e102212e4a6e8cd9ac6da004b03c1461c883cdbc3f83/flake8_comprehensions-2.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ddf2b07699cee8fc2fd1cd9262973011", "sha256": "e36fc12bd3833e0b34fe0639b7a817d32c86238987f532078c57eafdc7a8a219"}, "downloads": -1, "filename": "flake8-comprehensions-2.2.0.tar.gz", "has_sig": true, "md5_digest": "ddf2b07699cee8fc2fd1cd9262973011", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6256, "upload_time": "2019-08-12T07:56:44", "upload_time_iso_8601": "2019-08-12T07:56:44.370425Z", "url": "https://files.pythonhosted.org/packages/ae/eb/62f8b101788a2cef642118adff287a4051e64c1a51cbb8931c2a02a1ace8/flake8-comprehensions-2.2.0.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "bd76fdd9bdd4337976d53530c33db0f2", "sha256": "5ead5962307187a13359a1f108ab7c371c8a63343fb0dfa9fc97c30612a99561"}, "downloads": -1, "filename": "flake8_comprehensions-2.3.0-py3-none-any.whl", "has_sig": true, "md5_digest": "bd76fdd9bdd4337976d53530c33db0f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6265, "upload_time": "2019-10-25T17:45:54", "upload_time_iso_8601": "2019-10-25T17:45:54.831520Z", "url": "https://files.pythonhosted.org/packages/dc/cd/3b76abfb4f21e3c07253845fb8ad296cb3254024bf27683f60eb33ff9a48/flake8_comprehensions-2.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d685eade30f79158b3442ee7374fac8", "sha256": "1d731dcccbef1f9a68b54d6846cf4e45cd2fea397cb0b71c463aab965118f594"}, "downloads": -1, "filename": "flake8-comprehensions-2.3.0.tar.gz", "has_sig": true, "md5_digest": "1d685eade30f79158b3442ee7374fac8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6558, "upload_time": "2019-10-25T17:45:56", "upload_time_iso_8601": "2019-10-25T17:45:56.608441Z", "url": "https://files.pythonhosted.org/packages/47/0e/ed8ef789acbf519eda7cdc09a367b150175c669e60d01d0ebdd5faa177d1/flake8-comprehensions-2.3.0.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "09c5563f638ad75fc75302086c776412", "sha256": "60a3d8eb8f29b11ba7dd22a9ba3641b8a5f241fbc31287d00d398eafe823d16d"}, "downloads": -1, "filename": "flake8_comprehensions-3.0.0-py3-none-any.whl", "has_sig": true, "md5_digest": "09c5563f638ad75fc75302086c776412", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6323, "upload_time": "2019-10-25T18:33:33", "upload_time_iso_8601": "2019-10-25T18:33:33.362717Z", "url": "https://files.pythonhosted.org/packages/19/15/bbe16275edd5500a1aff2312f2225460d5a2f90f9b23b2af83452ed775f2/flake8_comprehensions-3.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0c21daaf8328fc28ac53e09fc0b41a4", "sha256": "f5ca4f2b8752dbe7e49fc430290761bb4bd030d47bc1ba39bcaa24b79b0c8672"}, "downloads": -1, "filename": "flake8-comprehensions-3.0.0.tar.gz", "has_sig": true, "md5_digest": "f0c21daaf8328fc28ac53e09fc0b41a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6635, "upload_time": "2019-10-25T18:33:35", "upload_time_iso_8601": "2019-10-25T18:33:35.578340Z", "url": "https://files.pythonhosted.org/packages/65/82/cc040f3e09fb795aab330e7e91653167a71dbe5a56d812069bd85dbd8076/flake8-comprehensions-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "e2097ecfcca687ef13377faeb61a3007", "sha256": "d3a8339e262205a15a4a84f6363eabb63e2dbd8292c4655366aaa0452eb28496"}, "downloads": -1, "filename": "flake8_comprehensions-3.0.1-py3-none-any.whl", "has_sig": true, "md5_digest": "e2097ecfcca687ef13377faeb61a3007", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6294, "upload_time": "2019-10-28T11:17:04", "upload_time_iso_8601": "2019-10-28T11:17:04.968048Z", "url": "https://files.pythonhosted.org/packages/76/1f/3a2eaf62799c2c7409db6eb71fb34b8ba64b4a0fcdbf26e1063349062825/flake8_comprehensions-3.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2cea429246aa01d1108e9fe10620d7e7", "sha256": "d1337979289e2877693b49a862c3e193a443833e2843e0e2450d54abd93aea9a"}, "downloads": -1, "filename": "flake8-comprehensions-3.0.1.tar.gz", "has_sig": true, "md5_digest": "2cea429246aa01d1108e9fe10620d7e7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6603, "upload_time": "2019-10-28T11:17:07", "upload_time_iso_8601": "2019-10-28T11:17:07.032248Z", "url": "https://files.pythonhosted.org/packages/f9/6e/b90d98de08e8696fc377e2d1fcd1cb1332fc6e60befcd47d32c0e893839d/flake8-comprehensions-3.0.1.tar.gz", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "c13bc99505ab13fe89d363d29c9f16ed", "sha256": "37426a2c82303f06af3f013d9ad943970843f74685502641a00a05622ff5b874"}, "downloads": -1, "filename": "flake8_comprehensions-3.1.0-py3-none-any.whl", "has_sig": true, "md5_digest": "c13bc99505ab13fe89d363d29c9f16ed", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7862, "upload_time": "2019-11-15T10:15:02", "upload_time_iso_8601": "2019-11-15T10:15:02.186445Z", "url": "https://files.pythonhosted.org/packages/fa/80/313eb630be9861bce8dfa93fddf15bcaa7de2e4fecce41b130b268f9fee5/flake8_comprehensions-3.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c09431436231b9e7a1f20dbb18d775d", "sha256": "2059d10cb35625b6cfc6d00ead00fcb7c5cb881931aea0dfa83f6a087fb9361d"}, "downloads": -1, "filename": "flake8-comprehensions-3.1.0.tar.gz", "has_sig": true, "md5_digest": "6c09431436231b9e7a1f20dbb18d775d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8457, "upload_time": "2019-11-15T10:15:04", "upload_time_iso_8601": "2019-11-15T10:15:04.642887Z", "url": "https://files.pythonhosted.org/packages/ac/56/3f3ab0cdf263e36bcaa6c549e16aeae266ac1944ed8f7b469189620dda60/flake8-comprehensions-3.1.0.tar.gz", "yanked": false}], "3.1.1": [{"comment_text": "", "digests": {"md5": "8f4ca6b4e7e94a2cfc004c656a66c029", "sha256": "2f73897575ce6d904c761d636ca1c6c33159abaac7ec7ee10fd9cc2189812e92"}, "downloads": -1, "filename": "flake8_comprehensions-3.1.1-py3-none-any.whl", "has_sig": true, "md5_digest": "8f4ca6b4e7e94a2cfc004c656a66c029", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7923, "upload_time": "2019-11-16T15:10:56", "upload_time_iso_8601": "2019-11-16T15:10:56.908597Z", "url": "https://files.pythonhosted.org/packages/13/17/bdcd298d20ea2c08f8008362e2496cc6d84d8e3fbbb21db5313ca35afa1c/flake8_comprehensions-3.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88970cfbee3b0d42477bf0af604a8eb2", "sha256": "b28537e05dde41ea865e4e36af86992a74bd053e1750170c90fc25500f9109bd"}, "downloads": -1, "filename": "flake8-comprehensions-3.1.1.tar.gz", "has_sig": true, "md5_digest": "88970cfbee3b0d42477bf0af604a8eb2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8526, "upload_time": "2019-11-16T15:10:58", "upload_time_iso_8601": "2019-11-16T15:10:58.781631Z", "url": "https://files.pythonhosted.org/packages/71/bb/13a7d4ca9fdc2a806965ec145bca27e05977bf3b5823f00cf5e61d11eb59/flake8-comprehensions-3.1.1.tar.gz", "yanked": false}], "3.1.2": [{"comment_text": "", "digests": {"md5": "787ab1a0fc04c5e839c55d4e620eca0a", "sha256": "b74aedd57105865979acd917c983e1be99a59eca47eabc1f8b70cda55e9c36a4"}, "downloads": -1, "filename": "flake8_comprehensions-3.1.2-py3-none-any.whl", "has_sig": true, "md5_digest": "787ab1a0fc04c5e839c55d4e620eca0a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7954, "upload_time": "2019-11-18T22:04:09", "upload_time_iso_8601": "2019-11-18T22:04:09.046014Z", "url": "https://files.pythonhosted.org/packages/2d/68/b0a78c990a185e95d7be3410befdbf69547a1e2fff2497e5001ba9303fbd/flake8_comprehensions-3.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "517348a1fd74f23fa1c564e622fefadd", "sha256": "11839fb059f3df2a5543867641f2ad2afe4ac86fea2d0b9eb5aa8ff93d880921"}, "downloads": -1, "filename": "flake8-comprehensions-3.1.2.tar.gz", "has_sig": true, "md5_digest": "517348a1fd74f23fa1c564e622fefadd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8570, "upload_time": "2019-11-18T22:04:11", "upload_time_iso_8601": "2019-11-18T22:04:11.139469Z", "url": "https://files.pythonhosted.org/packages/74/0a/9c6bed517f444e9712f9f0d3e9e6ce87e32b8a00c94ecf5fdd473b35b28f/flake8-comprehensions-3.1.2.tar.gz", "yanked": false}], "3.1.3": [{"comment_text": "", "digests": {"md5": "d301efefbd6c85a9a3f4131eb11c6673", "sha256": "80dfffb24e8a9a2a3cdf14dd78cd53522f9dd24ab628b26e01c80506201ac4ed"}, "downloads": -1, "filename": "flake8_comprehensions-3.1.3-py3-none-any.whl", "has_sig": true, "md5_digest": "d301efefbd6c85a9a3f4131eb11c6673", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7991, "upload_time": "2019-11-19T11:45:07", "upload_time_iso_8601": "2019-11-19T11:45:07.007606Z", "url": "https://files.pythonhosted.org/packages/77/3a/62fd76d26e328061bfe39d65fd68f651dcba135a6694e60b7ab6b9d54e69/flake8_comprehensions-3.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "470eefd926fbf8c76e6ce76ff8f43280", "sha256": "96b253fd836a2489a58b3fedbb0828b84dfaee323ec8431b3d8eaab376c0a58d"}, "downloads": -1, "filename": "flake8-comprehensions-3.1.3.tar.gz", "has_sig": true, "md5_digest": "470eefd926fbf8c76e6ce76ff8f43280", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8627, "upload_time": "2019-11-19T11:45:09", "upload_time_iso_8601": "2019-11-19T11:45:09.155599Z", "url": "https://files.pythonhosted.org/packages/40/1a/3d32d081eaaa8de984233ce146fd143083dad653bf295a4ccd27d7f35cc9/flake8-comprehensions-3.1.3.tar.gz", "yanked": false}], "3.1.4": [{"comment_text": "", "digests": {"md5": "ee068b2359bc022f8c3e627407787216", "sha256": "6de428c3ac67d3614d527456469c8a3d6638960e9ad7e1222358526a2507400a"}, "downloads": -1, "filename": "flake8_comprehensions-3.1.4-py3-none-any.whl", "has_sig": true, "md5_digest": "ee068b2359bc022f8c3e627407787216", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7925, "upload_time": "2019-11-20T17:05:26", "upload_time_iso_8601": "2019-11-20T17:05:26.367348Z", "url": "https://files.pythonhosted.org/packages/03/9f/d1aa16d81f879cfcd82902ff97b212819adb0ad3f496b74d5bfe266650b9/flake8_comprehensions-3.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "887af493107501ee7722eefd85032b4b", "sha256": "e3a8350a35d7bc71f8a1f64cf3c633a418a26b0edace2219d26ea4dd78ac21f3"}, "downloads": -1, "filename": "flake8-comprehensions-3.1.4.tar.gz", "has_sig": true, "md5_digest": "887af493107501ee7722eefd85032b4b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8576, "upload_time": "2019-11-20T17:05:28", "upload_time_iso_8601": "2019-11-20T17:05:28.256569Z", "url": "https://files.pythonhosted.org/packages/fb/36/22f1469bbfadb91765009d81900f69e341b77627c2a968360d2271d390fe/flake8-comprehensions-3.1.4.tar.gz", "yanked": false}], "3.2.0": [{"comment_text": "", "digests": {"md5": "93ea77da744835104d2d97d3fe019ce5", "sha256": "08863dd838262d518d21ad1ee1b3db0cc3d76097d747407fb32ea10e59c9ad44"}, "downloads": -1, "filename": "flake8_comprehensions-3.2.0-py3-none-any.whl", "has_sig": true, "md5_digest": "93ea77da744835104d2d97d3fe019ce5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 8196, "upload_time": "2020-01-20T09:40:41", "upload_time_iso_8601": "2020-01-20T09:40:41.555576Z", "url": "https://files.pythonhosted.org/packages/dd/ef/7b010a089a2bc267192aca2599c146b18c45ebd67cff47293423cdc37ed9/flake8_comprehensions-3.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "710593768748f9de32c7171a39cc3afa", "sha256": "98e821842ed5504834a41d9fe7cc45dcd0670d56e76486a6f9289ed2829e0178"}, "downloads": -1, "filename": "flake8-comprehensions-3.2.0.tar.gz", "has_sig": true, "md5_digest": "710593768748f9de32c7171a39cc3afa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11443, "upload_time": "2020-01-20T09:40:43", "upload_time_iso_8601": "2020-01-20T09:40:43.550215Z", "url": "https://files.pythonhosted.org/packages/bc/2e/81ac72cae13356c3e861878bedf215d6d7ff399ffe379bd88684acd8caa0/flake8-comprehensions-3.2.0.tar.gz", "yanked": false}], "3.2.1": [{"comment_text": "", "digests": {"md5": "8193218bacb3086c3efc9e30a73e6817", "sha256": "b75db60680becfbb82797ec516ab3dd408019267fe9343864cd7f9b26a6c31c7"}, "downloads": -1, "filename": "flake8_comprehensions-3.2.1-py3-none-any.whl", "has_sig": true, "md5_digest": "8193218bacb3086c3efc9e30a73e6817", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 8228, "upload_time": "2020-01-20T11:06:08", "upload_time_iso_8601": "2020-01-20T11:06:08.620036Z", "url": "https://files.pythonhosted.org/packages/53/fd/4403a257379efb578f951a49cfc1c88bc7197890fe145e2e5e0af67a3593/flake8_comprehensions-3.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87ce223e324297c045ab0b94c1374580", "sha256": "f8ae0b3ccc01aaee8739871b94744910347cc72831d88c217f8b35ef1f07cef5"}, "downloads": -1, "filename": "flake8-comprehensions-3.2.1.tar.gz", "has_sig": true, "md5_digest": "87ce223e324297c045ab0b94c1374580", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11550, "upload_time": "2020-01-20T11:06:10", "upload_time_iso_8601": "2020-01-20T11:06:10.483862Z", "url": "https://files.pythonhosted.org/packages/46/5f/d61c81e4375292e64ecdd70b5d7c4f2af03b8932ac3a9bde6df5e5c32a60/flake8-comprehensions-3.2.1.tar.gz", "yanked": false}], "3.2.2": [{"comment_text": "", "digests": {"md5": "76350690cd4b5e8c2ccddf808e4cfdeb", "sha256": "d08323aa801aef33477cd33f2f5ce3acb1aafd26803ab0d171d85d514c1273a2"}, "downloads": -1, "filename": "flake8_comprehensions-3.2.2-py3-none-any.whl", "has_sig": true, "md5_digest": "76350690cd4b5e8c2ccddf808e4cfdeb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 8185, "upload_time": "2020-01-20T15:22:16", "upload_time_iso_8601": "2020-01-20T15:22:16.592504Z", "url": "https://files.pythonhosted.org/packages/bd/33/794dc08a9152a1bfb1b4de3858b8fa1d6b04eff665fdcffbe36594b63b04/flake8_comprehensions-3.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "645e55becff47ec4089e65034be78dd4", "sha256": "e7db586bb6eb95afdfd87ed244c90e57ae1352db8ef0ad3012fca0200421e5df"}, "downloads": -1, "filename": "flake8-comprehensions-3.2.2.tar.gz", "has_sig": true, "md5_digest": "645e55becff47ec4089e65034be78dd4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11545, "upload_time": "2020-01-20T15:22:18", "upload_time_iso_8601": "2020-01-20T15:22:18.580763Z", "url": "https://files.pythonhosted.org/packages/8c/9b/26d0d2ab67e16500c8e68db07e66335f4a51fa1236a794e21ba670ac0dc4/flake8-comprehensions-3.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "76350690cd4b5e8c2ccddf808e4cfdeb", "sha256": "d08323aa801aef33477cd33f2f5ce3acb1aafd26803ab0d171d85d514c1273a2"}, "downloads": -1, "filename": "flake8_comprehensions-3.2.2-py3-none-any.whl", "has_sig": true, "md5_digest": "76350690cd4b5e8c2ccddf808e4cfdeb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 8185, "upload_time": "2020-01-20T15:22:16", "upload_time_iso_8601": "2020-01-20T15:22:16.592504Z", "url": "https://files.pythonhosted.org/packages/bd/33/794dc08a9152a1bfb1b4de3858b8fa1d6b04eff665fdcffbe36594b63b04/flake8_comprehensions-3.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "645e55becff47ec4089e65034be78dd4", "sha256": "e7db586bb6eb95afdfd87ed244c90e57ae1352db8ef0ad3012fca0200421e5df"}, "downloads": -1, "filename": "flake8-comprehensions-3.2.2.tar.gz", "has_sig": true, "md5_digest": "645e55becff47ec4089e65034be78dd4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11545, "upload_time": "2020-01-20T15:22:18", "upload_time_iso_8601": "2020-01-20T15:22:18.580763Z", "url": "https://files.pythonhosted.org/packages/8c/9b/26d0d2ab67e16500c8e68db07e66335f4a51fa1236a794e21ba670ac0dc4/flake8-comprehensions-3.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:03:25 2020"}