{"info": {"author": "SciencePi", "author_email": "sciancepi@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "## NsmPy Version 1.0.3: What's new and how do I use it?\nNsmPy is a big little python library designed to make scientific, mathematical, and numerical equations\neasier to grasp. This module, as of this version (release 1.0.3) only contains one datatype - matricies.\n(more will be comming soon hopefully.)\n\n#### Installation\nNsmPy is availiable via the pip command. However, there is one other library needed - NumPy.\nI highly recommend using NumPy version 1.16.1 because it is the most stable. Installing this \nversion will be covered in the installation steps.\n\nInstall with:\n```sh\n(mac/linux)\n#$ sudo pip uninstall numpy\n#$ sudo pip install numpy==1.16.1\n#$ sudo pip install nsmpy==1.0.2\n(PC)\n#C:> pip uninstall numpy\n#C:> pip install numpy==1.16.1\n#C:> pip install nsmpy==1.0.2\n```\n#### What's new?\nThis update does not add much to the library other than bug fixes.\ndatatype.\n#### Using the library\nThe NsmPy library offers lots of different features for the matrix datatype - you can run callbacks on the elements,\nyou can reshape matricies, and you can even treat the class like a list!\n\nFirst off, how do you create a matrix?\nIt's as simple as typing\n```python\nfrom nsmpy import matrix\nx = matrix([1,2,3,4],shape=(2,2))\n```\nJust like that we just created a 2x2 matrix! It's that simple!\nWe can also do matrix multiplication - a common mathematical practice when working with matricies. We can do this\nwith the following code:\n```python\nfrom nsmpy import matrix\nx = matrix([2,3,4,5],shape=(2,2))\ny = matrix([3,4,5,6],shape=(2,2))\n\nz = x.matrix_mult(y) # matrix_mult(n) -> matrix()\n```\nThat's it!\nWhen you actually compare this library to the NumPy library, you will see that it is a much better option for matricies.\nHere is an example of defining matricies in both modules.\nNumPy:\n```python\nmat = np.array([[2,2],\n                [2,2]])\n```\nNsmPy:\n```\nmat = matrix([2,2,2,2],(2,2))\n```\nAs you can see, the NumPy version, while being excellent, just doesn't look as good as the NsmPy version. It also is less\nefficient due to more typing being needed.\n#### Method documentation\n```\nmatrix(array, shape)                  -> matrix\nmatrix.reshape(new_shape)             -> matrix{new shape}\nmatrix.flatten()                      -> matrix{new shape}\nmatrix.add_element(element,new_shape) -> matrix{el+1, new shape}\nmatrix.get_type()                     -> dtype\nmatrix.matrix_mult(b_mat,a_mat=None)  -> matrix{new shape, new values}\nmatrix.as_numpy_array()               -> np.array(matrix)\nmatrix.multiply(mat_b,mat_a=None)     -> matrix{new values, a_matrix shape}\nmatrix.convert_to_list()              -> list{matrix elements}\nmatrix.inverse()                      -> matrix{inverse elements}\nmatrix.generate_identity(r,c,start)   -> matrix{identity matrix}\nmatrix.run_function_on_elements(func) -> matrix{other elements}\nmatrix.convert_type(new_type)         -> matrix{new type}\nmatrix.shape                          -> shape\nmatrix.as_array                       -> array-type matrix\nmatrix.temp                           -> nothing to see here\nmatrix.type                           -> the current matrix type.\n```\nHave fun!\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sciencepi/NsmPy", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "nsmpy", "package_url": "https://pypi.org/project/nsmpy/", "platform": "", "project_url": "https://pypi.org/project/nsmpy/", "project_urls": {"Homepage": "https://github.com/sciencepi/NsmPy"}, "release_url": "https://pypi.org/project/nsmpy/1.0.3/", "requires_dist": null, "requires_python": "", "summary": "", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>NsmPy Version 1.0.3: What's new and how do I use it?</h2>\n<p>NsmPy is a big little python library designed to make scientific, mathematical, and numerical equations\neasier to grasp. This module, as of this version (release 1.0.3) only contains one datatype - matricies.\n(more will be comming soon hopefully.)</p>\n<h4>Installation</h4>\n<p>NsmPy is availiable via the pip command. However, there is one other library needed - NumPy.\nI highly recommend using NumPy version 1.16.1 because it is the most stable. Installing this\nversion will be covered in the installation steps.</p>\n<p>Install with:</p>\n<pre><span class=\"o\">(</span>mac/linux<span class=\"o\">)</span>\n<span class=\"c1\">#$ sudo pip uninstall numpy</span>\n<span class=\"c1\">#$ sudo pip install numpy==1.16.1</span>\n<span class=\"c1\">#$ sudo pip install nsmpy==1.0.2</span>\n<span class=\"o\">(</span>PC<span class=\"o\">)</span>\n<span class=\"c1\">#C:&gt; pip uninstall numpy</span>\n<span class=\"c1\">#C:&gt; pip install numpy==1.16.1</span>\n<span class=\"c1\">#C:&gt; pip install nsmpy==1.0.2</span>\n</pre>\n<h4>What's new?</h4>\n<p>This update does not add much to the library other than bug fixes.\ndatatype.</p>\n<h4>Using the library</h4>\n<p>The NsmPy library offers lots of different features for the matrix datatype - you can run callbacks on the elements,\nyou can reshape matricies, and you can even treat the class like a list!</p>\n<p>First off, how do you create a matrix?\nIt's as simple as typing</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nsmpy</span> <span class=\"kn\">import</span> <span class=\"n\">matrix</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">matrix</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">],</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n</pre>\n<p>Just like that we just created a 2x2 matrix! It's that simple!\nWe can also do matrix multiplication - a common mathematical practice when working with matricies. We can do this\nwith the following code:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nsmpy</span> <span class=\"kn\">import</span> <span class=\"n\">matrix</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">matrix</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">],</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">matrix</span><span class=\"p\">([</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">],</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n\n<span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">matrix_mult</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"c1\"># matrix_mult(n) -&gt; matrix()</span>\n</pre>\n<p>That's it!\nWhen you actually compare this library to the NumPy library, you will see that it is a much better option for matricies.\nHere is an example of defining matricies in both modules.\nNumPy:</p>\n<pre><span class=\"n\">mat</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n                <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">]])</span>\n</pre>\n<p>NsmPy:</p>\n<pre><code>mat = matrix([2,2,2,2],(2,2))\n</code></pre>\n<p>As you can see, the NumPy version, while being excellent, just doesn't look as good as the NsmPy version. It also is less\nefficient due to more typing being needed.</p>\n<h4>Method documentation</h4>\n<pre><code>matrix(array, shape)                  -&gt; matrix\nmatrix.reshape(new_shape)             -&gt; matrix{new shape}\nmatrix.flatten()                      -&gt; matrix{new shape}\nmatrix.add_element(element,new_shape) -&gt; matrix{el+1, new shape}\nmatrix.get_type()                     -&gt; dtype\nmatrix.matrix_mult(b_mat,a_mat=None)  -&gt; matrix{new shape, new values}\nmatrix.as_numpy_array()               -&gt; np.array(matrix)\nmatrix.multiply(mat_b,mat_a=None)     -&gt; matrix{new values, a_matrix shape}\nmatrix.convert_to_list()              -&gt; list{matrix elements}\nmatrix.inverse()                      -&gt; matrix{inverse elements}\nmatrix.generate_identity(r,c,start)   -&gt; matrix{identity matrix}\nmatrix.run_function_on_elements(func) -&gt; matrix{other elements}\nmatrix.convert_type(new_type)         -&gt; matrix{new type}\nmatrix.shape                          -&gt; shape\nmatrix.as_array                       -&gt; array-type matrix\nmatrix.temp                           -&gt; nothing to see here\nmatrix.type                           -&gt; the current matrix type.\n</code></pre>\n<p>Have fun!</p>\n\n          </div>"}, "last_serial": 7067234, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "8f1145c7611da44e7b80d59c8e9281b5", "sha256": "94fb5b8bd29cf39b79de33b02bec8308ac9231e15b42676d92e8fdde02e32ebb"}, "downloads": -1, "filename": "nsmpy-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8f1145c7611da44e7b80d59c8e9281b5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3772, "upload_time": "2020-04-20T12:56:06", "upload_time_iso_8601": "2020-04-20T12:56:06.802729Z", "url": "https://files.pythonhosted.org/packages/8f/7e/21430ece5b26c4645db406caea9ce4946870fae9874255d9c29678777c73/nsmpy-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a6183b767b80ae6e6c87550972cfcda", "sha256": "2c78f03f9fea3cebc929f518068f8872f009844b7bd79553710f5682d24aaca2"}, "downloads": -1, "filename": "nsmpy-1.0.1.tar.gz", "has_sig": false, "md5_digest": "7a6183b767b80ae6e6c87550972cfcda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2327, "upload_time": "2020-04-20T12:56:08", "upload_time_iso_8601": "2020-04-20T12:56:08.031870Z", "url": "https://files.pythonhosted.org/packages/a9/1b/fdfeef066de7732e3a3663ef9987c9d0a1b4d41b7bec0a93aec4c719068c/nsmpy-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "869e6198ba980ca7f1509d7e88771257", "sha256": "c9d1037feb5c584cb6a3f3c13306a9044099455f1926b9d1b681ba4232cc4240"}, "downloads": -1, "filename": "nsmpy-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "869e6198ba980ca7f1509d7e88771257", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5407, "upload_time": "2020-04-21T11:01:56", "upload_time_iso_8601": "2020-04-21T11:01:56.139112Z", "url": "https://files.pythonhosted.org/packages/0b/52/607348c3826f41ce410fe9a9084088dc8fe4f1ff4eda11243a7c70622100/nsmpy-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3801e49dae4c7c13c77a2add18ec4fa3", "sha256": "aefb5c35a03bcb771cb3804f87af870a2c3160f8180d99a3a3da89d775711733"}, "downloads": -1, "filename": "nsmpy-1.0.2.tar.gz", "has_sig": false, "md5_digest": "3801e49dae4c7c13c77a2add18ec4fa3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4062, "upload_time": "2020-04-21T11:01:57", "upload_time_iso_8601": "2020-04-21T11:01:57.533808Z", "url": "https://files.pythonhosted.org/packages/f5/83/9336f26caa83761c18b57bfe3210f22c463d9239b4599f6045f183bad8d9/nsmpy-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "e70fea3949b3b9f66cdbe97f4ee21f04", "sha256": "6ba1874983596d0600d02c2063dd1fff56aa8da275dbe911bd2a164f700e1edb"}, "downloads": -1, "filename": "nsmpy-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e70fea3949b3b9f66cdbe97f4ee21f04", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5396, "upload_time": "2020-04-21T11:07:48", "upload_time_iso_8601": "2020-04-21T11:07:48.450253Z", "url": "https://files.pythonhosted.org/packages/9a/02/5e01e5dd6b40370861e1c67c51e74b37705b889cb92691a3800241973e57/nsmpy-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebab08f32eed7228035c14a1219a5dd1", "sha256": "f2b93a81f85ee2767b248aab67cd42bf93c5e7696ce0fcf9a05102931a56eb54"}, "downloads": -1, "filename": "nsmpy-1.0.3.tar.gz", "has_sig": false, "md5_digest": "ebab08f32eed7228035c14a1219a5dd1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4033, "upload_time": "2020-04-21T11:07:49", "upload_time_iso_8601": "2020-04-21T11:07:49.823813Z", "url": "https://files.pythonhosted.org/packages/5c/e3/b0e64086fc3272261215564955d90bf86eed76f69b7effaa6532a671bf6f/nsmpy-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e70fea3949b3b9f66cdbe97f4ee21f04", "sha256": "6ba1874983596d0600d02c2063dd1fff56aa8da275dbe911bd2a164f700e1edb"}, "downloads": -1, "filename": "nsmpy-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e70fea3949b3b9f66cdbe97f4ee21f04", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5396, "upload_time": "2020-04-21T11:07:48", "upload_time_iso_8601": "2020-04-21T11:07:48.450253Z", "url": "https://files.pythonhosted.org/packages/9a/02/5e01e5dd6b40370861e1c67c51e74b37705b889cb92691a3800241973e57/nsmpy-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebab08f32eed7228035c14a1219a5dd1", "sha256": "f2b93a81f85ee2767b248aab67cd42bf93c5e7696ce0fcf9a05102931a56eb54"}, "downloads": -1, "filename": "nsmpy-1.0.3.tar.gz", "has_sig": false, "md5_digest": "ebab08f32eed7228035c14a1219a5dd1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4033, "upload_time": "2020-04-21T11:07:49", "upload_time_iso_8601": "2020-04-21T11:07:49.823813Z", "url": "https://files.pythonhosted.org/packages/5c/e3/b0e64086fc3272261215564955d90bf86eed76f69b7effaa6532a671bf6f/nsmpy-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:25 2020"}