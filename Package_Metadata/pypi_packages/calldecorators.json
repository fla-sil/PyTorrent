{"info": {"author": "Steven Troxler", "author_email": "steven.troxler@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7"], "description": "Decorators, with the ability to use call arguments\n--------------------------------------------------\n\nBy using the `inspectcall` library, `calldecorators` decorators\ncan make use of call arguments to functions at runtime, and\npreserves function signature metadata (which is clobbered by most\ndecorators) so that this functionality works even when decorators\nare stacked.\n\nThe `error_context` decorator uses functionality from\n`tdxutil.exceptions.try_with_lazy_context` to wrap a function call\nin an error handler that can prepend contextual information to an\nerror without affecting the stacktrace. This allows errors raised\nb low-level code, which may not have enough information to construct\nerror messages indicating what was going on, to be made far more\ninformative.\n\nThe `debug` decorator wraps functions in a debugger post-mortem.\nThe debugger it uses is optionally configurable, you can\noptionally set a delay so that users can bypass via keyboard\ninterrupt, and you can optionally toggle the behavior on and\noff (for example, using global configuration).", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/stroxler/calldecorators", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "calldecorators", "package_url": "https://pypi.org/project/calldecorators/", "platform": "", "project_url": "https://pypi.org/project/calldecorators/", "project_urls": {"Homepage": "https://github.com/stroxler/calldecorators"}, "release_url": "https://pypi.org/project/calldecorators/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "Tools for working with container types, command data operations, and concise exception handling", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>By using the <cite>inspectcall</cite> library, <cite>calldecorators</cite> decorators\ncan make use of call arguments to functions at runtime, and\npreserves function signature metadata (which is clobbered by most\ndecorators) so that this functionality works even when decorators\nare stacked.</p>\n<p>The <cite>error_context</cite> decorator uses functionality from\n<cite>tdxutil.exceptions.try_with_lazy_context</cite> to wrap a function call\nin an error handler that can prepend contextual information to an\nerror without affecting the stacktrace. This allows errors raised\nb low-level code, which may not have enough information to construct\nerror messages indicating what was going on, to be made far more\ninformative.</p>\n<p>The <cite>debug</cite> decorator wraps functions in a debugger post-mortem.\nThe debugger it uses is optionally configurable, you can\noptionally set a delay so that users can bypass via keyboard\ninterrupt, and you can optionally toggle the behavior on and\noff (for example, using global configuration).</p>\n\n          </div>"}, "last_serial": 2211116, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4a15f922156d3a5cddcbbf48fd087ba3", "sha256": "dc4d34aca91b69af34d770e7504bccdfa310f6a3edca6a2612d2bb18ee35cc6c"}, "downloads": -1, "filename": "calldecorators-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4a15f922156d3a5cddcbbf48fd087ba3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2763, "upload_time": "2016-07-08T20:38:36", "upload_time_iso_8601": "2016-07-08T20:38:36.587759Z", "url": "https://files.pythonhosted.org/packages/21/b2/e9fe9227608b8d06093b31b806bc13c9a5db6cfa11525c88ae2e1141f22e/calldecorators-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "a68553e793d9f2db21d36b345107350a", "sha256": "5ad6c9acba6a38c435066a64327093cde4e5d7149d3a86bb387a79dc1c8854d3"}, "downloads": -1, "filename": "calldecorators-0.0.2.tar.gz", "has_sig": false, "md5_digest": "a68553e793d9f2db21d36b345107350a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2781, "upload_time": "2016-07-08T20:39:50", "upload_time_iso_8601": "2016-07-08T20:39:50.625781Z", "url": "https://files.pythonhosted.org/packages/17/d8/c8d8c261095f42f2abfc895ad21a6b9004a500a3a4fb39055f5d1c1cafb7/calldecorators-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "f12df513b818adf1dcabdfbf45e90eb1", "sha256": "03b85a4aef5263a658f3d672362c7e0e4117aea0ceb396765ca10c7ab0d53a50"}, "downloads": -1, "filename": "calldecorators-0.0.3.tar.gz", "has_sig": false, "md5_digest": "f12df513b818adf1dcabdfbf45e90eb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3678, "upload_time": "2016-07-08T23:56:43", "upload_time_iso_8601": "2016-07-08T23:56:43.661759Z", "url": "https://files.pythonhosted.org/packages/46/6f/81236ace53499d5e95c166bf51725a070d85046321be165ac1eabcd14e8e/calldecorators-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f12df513b818adf1dcabdfbf45e90eb1", "sha256": "03b85a4aef5263a658f3d672362c7e0e4117aea0ceb396765ca10c7ab0d53a50"}, "downloads": -1, "filename": "calldecorators-0.0.3.tar.gz", "has_sig": false, "md5_digest": "f12df513b818adf1dcabdfbf45e90eb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3678, "upload_time": "2016-07-08T23:56:43", "upload_time_iso_8601": "2016-07-08T23:56:43.661759Z", "url": "https://files.pythonhosted.org/packages/46/6f/81236ace53499d5e95c166bf51725a070d85046321be165ac1eabcd14e8e/calldecorators-0.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:37 2020"}