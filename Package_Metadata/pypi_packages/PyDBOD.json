{"info": {"author": "Miguel \u00c1ngel L\u00f3pez Robles", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "<div class=\"document\">\n\n<div class=\"documentwrapper\">\n\n<div class=\"bodywrapper\">\n\n<div class=\"body\" role=\"main\">\n\n<div class=\"section\" id=\"welcome-to-pydbod-s-documentation\">\n\n# Welcome to PyDBOD\u2019s documentation![\u00b6](#welcome-to-pydbod-s-documentation \"Enlazar permanentemente con este t\u00edtulo\")\n\n</div>\n\n<div class=\"section\" id=\"introduccion\">\n\n# Introduccion[\u00b6](#introduccion \"Enlazar permanentemente con este t\u00edtulo\")\n\nBienvenido a PyDBOD, la biblioteca de Python para la detecci\u00f3n de anomal\u00edas usando algoritmos basados en distancias. En esta bibliotica tienes una amplia selecci\u00f3n de algoritmos los cuales vamos a documentar a continuaci\u00f3n. El uso de todos se reduce a la creaci\u00f3n de un objeto de la clase respectiva y el uso del m\u00e9todo **fit_predict**.\n\nPara instalar el paquete o obtener una distribuci\u00f3n usar el repositorio en github o en PyPI:\n\n<https://github.com/miki97/TFG-OutlierDetection>\n\n<https://pypi.org/project/PyDBOD/>\n\n</div>\n\n<div class=\"section\" id=\"lof\">\n\n# LOF[\u00b6](#lof \"Enlazar permanentemente con este t\u00edtulo\")\n\nLocal Outlier Factor (LOF), o en espa\u00f1ol factor de valor at\u0131\u0301pico local, es una cuantificaci\u00f3n del valor at\u0131\u0301pico de un punto perteneciente al conjunto de datos. Esta cuantificaci\u00f3n es capaz de ajustar las variaciones en las densidades locales.\n\n<dl class=\"function\">\n\n<dt id=\"LOF\"> LOF <span class=\"sig-paren\">(</span>_k = 20_<span class=\"sig-paren\">)</span>[\u00b6](#LOF \"Enlazar permanentemente con esta definici\u00f3n\")</dt>\n\n<dd>\n\nConstructor para la creaci\u00f3n del objeto de la clase LOF.\n\n<dl class=\"field-list simple\">\n\n<dt class=\"field-odd\">Par\u00e1metros</dt>\n\n<dd class=\"field-odd\">\n\n**int** \u2013 k, n\u00famero de k vecinos a calcular\n\n</dd>\n\n<dt class=\"field-even\">Tipo del valor devuelto</dt>\n\n<dd class=\"field-even\">\n\nobjeto de la clase LOF\n\n</dd>\n\n</dl>\n\n</dd>\n\n</dl>\n\n<dl class=\"function\">\n\n<dt id=\"fit_predict\"> fit_predict<span class=\"sig-paren\">(</span>_data_<span class=\"sig-paren\">)</span>[\u00b6](#fit_predict \"Enlazar permanentemente con esta definici\u00f3n\")</dt>\n\n<dd>\n\nM\u00e9todo para aplicar el algoritmo LOF a una matriz de datos.\n\n<dl class=\"field-list simple\">\n\n<dt class=\"field-odd\">Par\u00e1metros</dt>\n\n<dd class=\"field-odd\">\n\n**numpy.array** \u2013 data, matriz de datos\n\n</dd>\n\n<dt class=\"field-even\">Tipo del valor devuelto</dt>\n\n<dd class=\"field-even\">\n\nnumpy.array de puntuaciones de anomal\u00eda\n\n</dd>\n\n</dl>\n\n</dd>\n\n</dl>\n\n</div>\n\n<div class=\"section\" id=\"loop\">\n\n# LOOP[\u00b6](#loop \"Enlazar permanentemente con este t\u00edtulo\")\n\nLocal Outlier Probability (LoOP), esta t\u00e9cnica combina varios conceptos. En primer lugar, la idea de localidad, los algoritmos basados en densidad como LOF. Por otro lado, LOCI con conceptos probabil\u0131\u0301sticos.\n\n<dl class=\"function\">\n\n<dt id=\"LOOP\"> LOOP <span class=\"sig-paren\">(</span>_k = 20_, _lamda=3_<span class=\"sig-paren\">)</span>[\u00b6](#LOOP \"Enlazar permanentemente con esta definici\u00f3n\")</dt>\n\n<dd>\n\nConstructor para la creaci\u00f3n del objeto de la clase LOOP.\n\n<dl class=\"field-list simple\">\n\n<dt class=\"field-odd\">Par\u00e1metros</dt>\n\n<dd class=\"field-odd\">\n\n*   **int** \u2013 k, n\u00famero de k vecinos a calcular\n\n*   **int** \u2013 lamda, p\u00e1rametro para regular la normalizaci\u00f3n\n\n</dd>\n\n<dt class=\"field-even\">Tipo del valor devuelto</dt>\n\n<dd class=\"field-even\">\n\nobjeto de la clase LOOP\n\n</dd>\n\n</dl>\n\n</dd>\n\n</dl>\n\n<dl class=\"function\">\n\n<dt> fit_predict <span class=\"sig-paren\">(</span>_data_<span class=\"sig-paren\">)</span></dt>\n\n<dd>\n\nM\u00e9todo para aplicar el algoritmo LOOP a una matriz de datos.\n\n<dl class=\"field-list simple\">\n\n<dt class=\"field-odd\">Par\u00e1metros</dt>\n\n<dd class=\"field-odd\">\n\n**numpy.array** \u2013 data, matriz de datos\n\n</dd>\n\n<dt class=\"field-even\">Tipo del valor devuelto</dt>\n\n<dd class=\"field-even\">\n\nnumpy.array de probabilidad anomalia [0-1]\n\n</dd>\n\n</dl>\n\n</dd>\n\n</dl>\n\n</div>\n\n<div class=\"section\" id=\"ldof\">\n\n# LDOF[\u00b6](#ldof \"Enlazar permanentemente con este t\u00edtulo\")\n\nLocal Outlier Probability (LoOP), utiliza la distancia relativa de un objeto a sus vecinos para medir la cantidad de objetos que se desv\u0131\u00edan de su vecindario disperso.\n\n<dl class=\"function\">\n\n<dt id=\"LDOF\"> LDOF <span class=\"sig-paren\">(</span>_k = 20_<span class=\"sig-paren\">)</span>[\u00b6](#LDOF \"Enlazar permanentemente con esta definici\u00f3n\")</dt>\n\n<dd>\n\nConstructor para la creaci\u00f3n del objeto de la clase LDOF.\n\n<dl class=\"field-list simple\">\n\n<dt class=\"field-odd\">Par\u00e1metros</dt>\n\n<dd class=\"field-odd\">\n\n**int** \u2013 k, n\u00famero de k vecinos a calcular\n\n</dd>\n\n<dt class=\"field-even\">Tipo del valor devuelto</dt>\n\n<dd class=\"field-even\">\n\nobjeto de la clase LOOP\n\n</dd>\n\n</dl>\n\n</dd>\n\n</dl>\n\n<dl class=\"function\">\n\n<dt> fit_predict <span class=\"sig-paren\">(</span>_data_<span class=\"sig-paren\">)</span></dt>\n\n<dd>\n\nM\u00e9todo para aplicar el algoritmo LDOF a una matriz de datos.\n\n<dl class=\"field-list simple\">\n\n<dt class=\"field-odd\">Par\u00e1metros</dt>\n\n<dd class=\"field-odd\">\n\n**numpy.array** \u2013 data, matriz de datos\n\n</dd>\n\n<dt class=\"field-even\">Tipo del valor devuelto</dt>\n\n<dd class=\"field-even\">\n\nnumpy.array de puntuaciones de anomal\u00eda\n\n</dd>\n\n</dl>\n\n</dd>\n\n</dl>\n\n</div>\n\n<div class=\"section\" id=\"pinn-lof\">\n\n# PINN-LOF[\u00b6](#pinn-lof \"Enlazar permanentemente con este t\u00edtulo\")\n\nProjection-Indexed Nearest-Neighbour (PINN), en este algoritmo se propone un m\u00e9todo de detecci\u00f3n de valores at\u0131\u0301picos locales proyectivo basado en LOF.\n\n<dl class=\"function\">\n\n<dt> PINN-LOF(k = 20, t=2, s=1, h=20) </dt>\n\n<dd>\n\nConstructor para la creaci\u00f3n del objeto de la clase PINN-LOF.\n\n<dl class=\"field-list simple\">\n\n<dt class=\"field-odd\">Par\u00e1metros</dt>\n\n<dd class=\"field-odd\">\n\n*   **int** \u2013 k, n\u00famero de k vecinos a calcular\n\n*   **int** \u2013 t, probabilidad de seleccion de caracteristicas para la proyecci\u00f3n\n\n*   **int** \u2013 s, probabilidad de selecci\u00f3n para la proyecci\u00f3n\n\n*   **int** \u2013 h, n\u00famero de k vecinos a calcular en la proyecci\u00f3n\n\n</dd>\n\n<dt class=\"field-even\">Tipo del valor devuelto</dt>\n\n<dd class=\"field-even\">\n\nobjeto de la clase PINN-LOF\n\n</dd>\n\n</dl>\n\n</dd>\n\n</dl>\n\n<dl class=\"function\">\n\n<dt> fit_predict <span class=\"sig-paren\">(</span>_data_<span class=\"sig-paren\">)</span></dt>\n\n<dd>\n\nM\u00e9todo para aplicar el algoritmo PINN-LOF a una matriz de datos.\n\n<dl class=\"field-list simple\">\n\n<dt class=\"field-odd\">Par\u00e1metros</dt>\n\n<dd class=\"field-odd\">\n\n**numpy.array** \u2013 data, matriz de datos\n\n</dd>\n\n<dt class=\"field-even\">Tipo del valor devuelto</dt>\n\n<dd class=\"field-even\">\n\nnumpy.array de puntuaciones de anomal\u00eda\n\n</dd>\n\n</dl>\n\n</dd>\n\n</dl>\n\n</div>\n\n<div class=\"section\" id=\"outres\">\n\n# OUTRES[\u00b6](#outres \"Enlazar permanentemente con este t\u00edtulo\")\n\nOutres es un algoritmo que propone desarrollar una puntuaci\u00f3n de anomal\u0131\u0301as basada en la desviaci\u00f3n de objetos en las proyecciones subespaciales. Para la selecci\u00f3n de dichos subespacios se analiza la uniformidad de los datos en ellos.\n\n<dl class=\"function\">\n\n<dt id=\"OUTRES\"> OUTRES <span class=\"sig-paren\">(</span>_epsilon=15_, _alpha=0.01_<span class=\"sig-paren\">)</span>[\u00b6](#OUTRES \"Enlazar permanentemente con esta definici\u00f3n\")</dt>\n\n<dd>\n\nConstructor para la creaci\u00f3n del objeto de la clase OUTRES.\n\n<dl class=\"field-list simple\">\n\n<dt class=\"field-odd\">Par\u00e1metros</dt>\n\n<dd class=\"field-odd\">\n\n*   **int** \u2013 epsilon, radio para la selecci\u00f3n del vecindario\n\n*   **float** \u2013 alpha, limite de uniformidad que se permite como interesante\n\n</dd>\n\n<dt class=\"field-even\">Tipo del valor devuelto</dt>\n\n<dd class=\"field-even\">\n\nobjeto de la clase OUTRES\n\n</dd>\n\n</dl>\n\n</dd>\n\n</dl>\n\n<dl class=\"function\">\n\n<dt> fit_predict <span class=\"sig-paren\">(</span>_data_<span class=\"sig-paren\">)</span></dt>\n\n<dd>\n\nM\u00e9todo para aplicar el algoritmo OUTRES a una matriz de datos.\n\n<dl class=\"field-list simple\">\n\n<dt class=\"field-odd\">Par\u00e1metros</dt>\n\n<dd class=\"field-odd\">\n\n**numpy.array** \u2013 data, matriz de datos\n\n</dd>\n\n<dt class=\"field-even\">Tipo del valor devuelto</dt>\n\n<dd class=\"field-even\">\n\nnumpy.array de puntuaciones de anomal\u00eda\n\n</dd>\n\n</dl>\n\n</dd>\n\n</dl>\n\n</div>\n\n<div class=\"section\" id=\"odin\">\n\n# ODIN[\u00b6](#odin \"Enlazar permanentemente con este t\u00edtulo\")\n\nOutlier Detection using Indegree Number (ODIN),es un algoritmo que hace uso del grafico de los k-vecinos m\u00e1s cercanos y usa el grado de los nodos para el calculo de anomal\u00edas\n\n<dl class=\"function\">\n\n<dt id=\"ODIN\"> ODIN <span class=\"sig-paren\">(</span>_k=20_, _t=0.01_<span class=\"sig-paren\">)</span>[\u00b6](#ODIN \"Enlazar permanentemente con esta definici\u00f3n\")</dt>\n\n<dd>\n\nConstructor para la creaci\u00f3n del objeto de la clase ODIN.\n\n<dl class=\"field-list simple\">\n\n<dt class=\"field-odd\">Par\u00e1metros</dt>\n\n<dd class=\"field-odd\">\n\n*   **int** \u2013 k, n\u00famero de k vecinos a calcular\n\n*   **int** \u2013 t, umbral de dicisi\u00f3n\n\n</dd>\n\n<dt class=\"field-even\">Tipo del valor devuelto</dt>\n\n<dd class=\"field-even\">\n\nobjeto de la clase ODIN\n\n</dd>\n\n</dl>\n\n</dd>\n\n</dl>\n\n<dl class=\"function\">\n\n<dt> fit_predict <span class=\"sig-paren\">(</span>_data_<span class=\"sig-paren\">)</span></dt>\n\n<dd>\n\nM\u00e9todo para aplicar el algoritmo ODIN a una matriz de datos.\n\n<dl class=\"field-list simple\">\n\n<dt class=\"field-odd\">Par\u00e1metros</dt>\n\n<dd class=\"field-odd\">\n\n**numpy.array** \u2013 data, matriz de datos\n\n</dd>\n\n<dt class=\"field-even\">Tipo del valor devuelto</dt>\n\n<dd class=\"field-even\">\n\nnumpy.array de decisi\u00f3n 1-0\n\n</dd>\n\n</dl>\n\n</dd>\n\n</dl>\n\n</div>\n\n<div class=\"section\" id=\"meandist\">\n\n# MeanDIST[\u00b6](#meandist \"Enlazar permanentemente con este t\u00edtulo\")\n\nEl algoritmo MeanDIST usa la la media de las distancias en su vecindario para ordenar a los v\u00e9rticesy seleccionar los que m\u00e1s se desvian.\n\n<dl class=\"function\">\n\n<dt id=\"MeanDIST\"> MeanDIST <span class=\"sig-paren\">(</span>_k=20_, _t=1.5_<span class=\"sig-paren\">)</span>[\u00b6](#MeanDIST \"Enlazar permanentemente con esta definici\u00f3n\")</dt>\n\n<dd>\n\nConstructor para la creaci\u00f3n del objeto de la clase MeanDIST.\n\n<dl class=\"field-list simple\">\n\n<dt class=\"field-odd\">Par\u00e1metros</dt>\n\n<dd class=\"field-odd\">\n\n*   **int** \u2013 k, n\u00famero de k vecinos a calcular\n\n*   **int** \u2013 t, par\u00e1matro para ampliar o reducir el umbral.\n\n</dd>\n\n<dt class=\"field-even\">Tipo del valor devuelto</dt>\n\n<dd class=\"field-even\">\n\nobjeto de la clase MeanDIST\n\n</dd>\n\n</dl>\n\n</dd>\n\n</dl>\n\n<dl class=\"function\">\n\n<dt> fit_predict <span class=\"sig-paren\">(</span>_data_<span class=\"sig-paren\">)</span></dt>\n\n<dd>\n\nM\u00e9todo para aplicar el algoritmo MeanDIST a una matriz de datos.\n\n<dl class=\"field-list simple\">\n\n<dt class=\"field-odd\">Par\u00e1metros</dt>\n\n<dd class=\"field-odd\">\n\n**numpy.array** \u2013 data, matriz de datos\n\n</dd>\n\n<dt class=\"field-even\">Tipo del valor devuelto</dt>\n\n<dd class=\"field-even\">\n\nnumpy.array de decisi\u00f3n 1-0\n\n</dd>\n\n</dl>\n\n</dd>\n\n</dl>\n\n</div>\n\n<div class=\"section\" id=\"kdist\">\n\n# KDIST[\u00b6](#kdist \"Enlazar permanentemente con este t\u00edtulo\")\n\nEl algoritmo KDIST el m\u00e1ximo de las distancias a sus k-vecinos m\u00e1s cercanos para ordenar a los v\u00e9rtices y seleccionar los que m\u00e1s se desvian.\n\n<dl class=\"function\">\n\n<dt id=\"KDIST\"> KDIST <span class=\"sig-paren\">(</span>_k=20_, _t=1.5_<span class=\"sig-paren\">)</span>[\u00b6](#KDIST \"Enlazar permanentemente con esta definici\u00f3n\")</dt>\n\n<dd>\n\nConstructor para la creaci\u00f3n del objeto de la clase KDIST.\n\n<dl class=\"field-list simple\">\n\n<dt class=\"field-odd\">Par\u00e1metros</dt>\n\n<dd class=\"field-odd\">\n\n*   **int** \u2013 k, n\u00famero de k vecinos a calcular\n\n*   **int** \u2013 t, par\u00e1matro para ampliar o reducir el umbral.\n\n</dd>\n\n<dt class=\"field-even\">Tipo del valor devuelto</dt>\n\n<dd class=\"field-even\">\n\nobjeto de la clase KDIST\n\n</dd>\n\n</dl>\n\n</dd>\n\n</dl>\n\n<dl class=\"function\">\n\n<dt> fit_predict <span class=\"sig-paren\">(</span>_data_<span class=\"sig-paren\">)</span></dt>\n\n<dd>\n\nM\u00e9todo para aplicar el algoritmo KDIST a una matriz de datos.\n\n<dl class=\"field-list simple\">\n\n<dt class=\"field-odd\">Par\u00e1metros</dt>\n\n<dd class=\"field-odd\">\n\n**numpy.array** \u2013 data, matriz de datos\n\n</dd>\n\n<dt class=\"field-even\">Tipo del valor devuelto</dt>\n\n<dd class=\"field-even\">\n\nnumpy.array de decisi\u00f3n 1-0\n\n</dd>\n\n</dl>\n\n</dd>\n\n</dl>\n\n<dl class=\"function\">\n\n<dt id=\"enumerate\"> enumerate <span class=\"sig-paren\">(</span>_sequence_<span class=\"optional\">[</span>, _start=0_<span class=\"optional\">]</span><span class=\"sig-paren\">)</span>[\u00b6](#enumerate \"Enlazar permanentemente con esta definici\u00f3n\")</dt>\n\n</dl>\n\n*   [<span class=\"std std-ref\">\u00cdndice</span>](genindex.html)\n\n*   [<span class=\"std std-ref\">\u00cdndice de M\u00f3dulos</span>](py-modindex.html)\n\n*   [<span class=\"std std-ref\">P\u00e1gina de B\u00fasqueda</span>](search.html)\n\n</div>\n\n</div>\n\n</div>\n\n</div>\n\n<div class=\"sphinxsidebar\" role=\"navigation\" aria-label=\"main navigation\">\n\n<div class=\"sphinxsidebarwrapper\">\n\n# [PyDBOD](#)\n\n### Navegaci\u00f3n\n\n<div class=\"relations\">\n\n### Related Topics\n\n*   [Documentation overview](#)\n\n</div>\n\n<div id=\"searchbox\" style=\"display: none\" role=\"search\">\n\n### B\u00fasqueda r\u00e1pida\n\n<div class=\"searchformwrapper\">\n\n<form class=\"search\" action=\"search.html\" method=\"get\"><input type=\"text\" name=\"q\"> <input type=\"submit\" value=\"Ir a\"></form>\n\n</div>\n\n</div>\n\n<script type=\"text/javascript\">$('#searchbox').show(0);</script></div>\n\n</div>\n\n</div>\n\n<div class=\"footer\">\u00a92019, Miguel \u00c1ngel L\u00f3pez Robles. | Powered by [Sphinx 2.0.1](http://sphinx-doc.org/) & [Alabaster 0.7.12](https://github.com/bitprophet/alabaster) | [Page source](_sources/index.rst.txt)</div>\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/miki97/TFG-OutlierDetection", "keywords": "", "license": "Licencia p\u00fablica general de GNU Versi\u00f3n 3", "maintainer": "", "maintainer_email": "", "name": "PyDBOD", "package_url": "https://pypi.org/project/PyDBOD/", "platform": "", "project_url": "https://pypi.org/project/PyDBOD/", "project_urls": {"Homepage": "https://github.com/miki97/TFG-OutlierDetection"}, "release_url": "https://pypi.org/project/PyDBOD/1.1/", "requires_dist": null, "requires_python": "", "summary": "A Distances Based Outlier Detector package", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<div>\n<div>\n<div>\n<div id=\"welcome-to-pydbod-s-documentation\">\n<h1>Welcome to PyDBOD\u2019s documentation<img alt=\"\u00b6\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a497bef8dc0bc8e8a3a55e3a9e4fdf5eb49c3273/2377656c636f6d652d746f2d707964626f642d732d646f63756d656e746174696f6e\"></h1>\n</div>\n<div id=\"introduccion\">\n<h1>Introduccion<a href=\"#introduccion\" rel=\"nofollow\" title=\"Enlazar permanentemente con este t\u00edtulo\">\u00b6</a></h1>\n<p>Bienvenido a PyDBOD, la biblioteca de Python para la detecci\u00f3n de anomal\u00edas usando algoritmos basados en distancias. En esta bibliotica tienes una amplia selecci\u00f3n de algoritmos los cuales vamos a documentar a continuaci\u00f3n. El uso de todos se reduce a la creaci\u00f3n de un objeto de la clase respectiva y el uso del m\u00e9todo <strong>fit_predict</strong>.</p>\n<p>Para instalar el paquete o obtener una distribuci\u00f3n usar el repositorio en github o en PyPI:</p>\n<p><a href=\"https://github.com/miki97/TFG-OutlierDetection\" rel=\"nofollow\">https://github.com/miki97/TFG-OutlierDetection</a></p>\n<p><a href=\"https://pypi.org/project/PyDBOD/\" rel=\"nofollow\">https://pypi.org/project/PyDBOD/</a></p>\n</div>\n<div id=\"lof\">\n<h1>LOF<a href=\"#lof\" rel=\"nofollow\" title=\"Enlazar permanentemente con este t\u00edtulo\">\u00b6</a></h1>\n<p>Local Outlier Factor (LOF), o en espa\u00f1ol factor de valor at\u0131\u0301pico local, es una cuantificaci\u00f3n del valor at\u0131\u0301pico de un punto perteneciente al conjunto de datos. Esta cuantificaci\u00f3n es capaz de ajustar las variaciones en las densidades locales.</p>\n<dl>\n<dt id=\"LOF\"> LOF <span class=\"sig-paren\">(</span>_k = 20_<span class=\"sig-paren\">)</span>[\u00b6](#LOF \"Enlazar permanentemente con esta definici\u00f3n\")</dt>\n<dd>\n<p>Constructor para la creaci\u00f3n del objeto de la clase LOF.</p>\n<dl>\n<dt>Par\u00e1metros</dt>\n<dd>\n<p><strong>int</strong> \u2013 k, n\u00famero de k vecinos a calcular</p>\n</dd>\n<dt>Tipo del valor devuelto</dt>\n<dd>\n<p>objeto de la clase LOF</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<dl>\n<dt id=\"fit_predict\"> fit_predict<span class=\"sig-paren\">(</span>_data_<span class=\"sig-paren\">)</span>[\u00b6](#fit_predict \"Enlazar permanentemente con esta definici\u00f3n\")</dt>\n<dd>\n<p>M\u00e9todo para aplicar el algoritmo LOF a una matriz de datos.</p>\n<dl>\n<dt>Par\u00e1metros</dt>\n<dd>\n<p><strong>numpy.array</strong> \u2013 data, matriz de datos</p>\n</dd>\n<dt>Tipo del valor devuelto</dt>\n<dd>\n<p>numpy.array de puntuaciones de anomal\u00eda</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</div>\n<div id=\"loop\">\n<h1>LOOP<a href=\"#loop\" rel=\"nofollow\" title=\"Enlazar permanentemente con este t\u00edtulo\">\u00b6</a></h1>\n<p>Local Outlier Probability (LoOP), esta t\u00e9cnica combina varios conceptos. En primer lugar, la idea de localidad, los algoritmos basados en densidad como LOF. Por otro lado, LOCI con conceptos probabil\u0131\u0301sticos.</p>\n<dl>\n<dt id=\"LOOP\"> LOOP <span class=\"sig-paren\">(</span>_k = 20_, _lamda=3_<span class=\"sig-paren\">)</span>[\u00b6](#LOOP \"Enlazar permanentemente con esta definici\u00f3n\")</dt>\n<dd>\n<p>Constructor para la creaci\u00f3n del objeto de la clase LOOP.</p>\n<dl>\n<dt>Par\u00e1metros</dt>\n<dd>\n<ul>\n<li>\n<p><strong>int</strong> \u2013 k, n\u00famero de k vecinos a calcular</p>\n</li>\n<li>\n<p><strong>int</strong> \u2013 lamda, p\u00e1rametro para regular la normalizaci\u00f3n</p>\n</li>\n</ul>\n</dd>\n<dt>Tipo del valor devuelto</dt>\n<dd>\n<p>objeto de la clase LOOP</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<dl>\n<dt> fit_predict <span class=\"sig-paren\">(</span>_data_<span class=\"sig-paren\">)</span></dt>\n<dd>\n<p>M\u00e9todo para aplicar el algoritmo LOOP a una matriz de datos.</p>\n<dl>\n<dt>Par\u00e1metros</dt>\n<dd>\n<p><strong>numpy.array</strong> \u2013 data, matriz de datos</p>\n</dd>\n<dt>Tipo del valor devuelto</dt>\n<dd>\n<p>numpy.array de probabilidad anomalia [0-1]</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</div>\n<div id=\"ldof\">\n<h1>LDOF<a href=\"#ldof\" rel=\"nofollow\" title=\"Enlazar permanentemente con este t\u00edtulo\">\u00b6</a></h1>\n<p>Local Outlier Probability (LoOP), utiliza la distancia relativa de un objeto a sus vecinos para medir la cantidad de objetos que se desv\u0131\u00edan de su vecindario disperso.</p>\n<dl>\n<dt id=\"LDOF\"> LDOF <span class=\"sig-paren\">(</span>_k = 20_<span class=\"sig-paren\">)</span>[\u00b6](#LDOF \"Enlazar permanentemente con esta definici\u00f3n\")</dt>\n<dd>\n<p>Constructor para la creaci\u00f3n del objeto de la clase LDOF.</p>\n<dl>\n<dt>Par\u00e1metros</dt>\n<dd>\n<p><strong>int</strong> \u2013 k, n\u00famero de k vecinos a calcular</p>\n</dd>\n<dt>Tipo del valor devuelto</dt>\n<dd>\n<p>objeto de la clase LOOP</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<dl>\n<dt> fit_predict <span class=\"sig-paren\">(</span>_data_<span class=\"sig-paren\">)</span></dt>\n<dd>\n<p>M\u00e9todo para aplicar el algoritmo LDOF a una matriz de datos.</p>\n<dl>\n<dt>Par\u00e1metros</dt>\n<dd>\n<p><strong>numpy.array</strong> \u2013 data, matriz de datos</p>\n</dd>\n<dt>Tipo del valor devuelto</dt>\n<dd>\n<p>numpy.array de puntuaciones de anomal\u00eda</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</div>\n<div id=\"pinn-lof\">\n<h1>PINN-LOF<a href=\"#pinn-lof\" rel=\"nofollow\" title=\"Enlazar permanentemente con este t\u00edtulo\">\u00b6</a></h1>\n<p>Projection-Indexed Nearest-Neighbour (PINN), en este algoritmo se propone un m\u00e9todo de detecci\u00f3n de valores at\u0131\u0301picos locales proyectivo basado en LOF.</p>\n<dl>\n<dt> PINN-LOF(k = 20, t=2, s=1, h=20) </dt>\n<dd>\n<p>Constructor para la creaci\u00f3n del objeto de la clase PINN-LOF.</p>\n<dl>\n<dt>Par\u00e1metros</dt>\n<dd>\n<ul>\n<li>\n<p><strong>int</strong> \u2013 k, n\u00famero de k vecinos a calcular</p>\n</li>\n<li>\n<p><strong>int</strong> \u2013 t, probabilidad de seleccion de caracteristicas para la proyecci\u00f3n</p>\n</li>\n<li>\n<p><strong>int</strong> \u2013 s, probabilidad de selecci\u00f3n para la proyecci\u00f3n</p>\n</li>\n<li>\n<p><strong>int</strong> \u2013 h, n\u00famero de k vecinos a calcular en la proyecci\u00f3n</p>\n</li>\n</ul>\n</dd>\n<dt>Tipo del valor devuelto</dt>\n<dd>\n<p>objeto de la clase PINN-LOF</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<dl>\n<dt> fit_predict <span class=\"sig-paren\">(</span>_data_<span class=\"sig-paren\">)</span></dt>\n<dd>\n<p>M\u00e9todo para aplicar el algoritmo PINN-LOF a una matriz de datos.</p>\n<dl>\n<dt>Par\u00e1metros</dt>\n<dd>\n<p><strong>numpy.array</strong> \u2013 data, matriz de datos</p>\n</dd>\n<dt>Tipo del valor devuelto</dt>\n<dd>\n<p>numpy.array de puntuaciones de anomal\u00eda</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</div>\n<div id=\"outres\">\n<h1>OUTRES<a href=\"#outres\" rel=\"nofollow\" title=\"Enlazar permanentemente con este t\u00edtulo\">\u00b6</a></h1>\n<p>Outres es un algoritmo que propone desarrollar una puntuaci\u00f3n de anomal\u0131\u0301as basada en la desviaci\u00f3n de objetos en las proyecciones subespaciales. Para la selecci\u00f3n de dichos subespacios se analiza la uniformidad de los datos en ellos.</p>\n<dl>\n<dt id=\"OUTRES\"> OUTRES <span class=\"sig-paren\">(</span>_epsilon=15_, _alpha=0.01_<span class=\"sig-paren\">)</span>[\u00b6](#OUTRES \"Enlazar permanentemente con esta definici\u00f3n\")</dt>\n<dd>\n<p>Constructor para la creaci\u00f3n del objeto de la clase OUTRES.</p>\n<dl>\n<dt>Par\u00e1metros</dt>\n<dd>\n<ul>\n<li>\n<p><strong>int</strong> \u2013 epsilon, radio para la selecci\u00f3n del vecindario</p>\n</li>\n<li>\n<p><strong>float</strong> \u2013 alpha, limite de uniformidad que se permite como interesante</p>\n</li>\n</ul>\n</dd>\n<dt>Tipo del valor devuelto</dt>\n<dd>\n<p>objeto de la clase OUTRES</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<dl>\n<dt> fit_predict <span class=\"sig-paren\">(</span>_data_<span class=\"sig-paren\">)</span></dt>\n<dd>\n<p>M\u00e9todo para aplicar el algoritmo OUTRES a una matriz de datos.</p>\n<dl>\n<dt>Par\u00e1metros</dt>\n<dd>\n<p><strong>numpy.array</strong> \u2013 data, matriz de datos</p>\n</dd>\n<dt>Tipo del valor devuelto</dt>\n<dd>\n<p>numpy.array de puntuaciones de anomal\u00eda</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</div>\n<div id=\"odin\">\n<h1>ODIN<a href=\"#odin\" rel=\"nofollow\" title=\"Enlazar permanentemente con este t\u00edtulo\">\u00b6</a></h1>\n<p>Outlier Detection using Indegree Number (ODIN),es un algoritmo que hace uso del grafico de los k-vecinos m\u00e1s cercanos y usa el grado de los nodos para el calculo de anomal\u00edas</p>\n<dl>\n<dt id=\"ODIN\"> ODIN <span class=\"sig-paren\">(</span>_k=20_, _t=0.01_<span class=\"sig-paren\">)</span>[\u00b6](#ODIN \"Enlazar permanentemente con esta definici\u00f3n\")</dt>\n<dd>\n<p>Constructor para la creaci\u00f3n del objeto de la clase ODIN.</p>\n<dl>\n<dt>Par\u00e1metros</dt>\n<dd>\n<ul>\n<li>\n<p><strong>int</strong> \u2013 k, n\u00famero de k vecinos a calcular</p>\n</li>\n<li>\n<p><strong>int</strong> \u2013 t, umbral de dicisi\u00f3n</p>\n</li>\n</ul>\n</dd>\n<dt>Tipo del valor devuelto</dt>\n<dd>\n<p>objeto de la clase ODIN</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<dl>\n<dt> fit_predict <span class=\"sig-paren\">(</span>_data_<span class=\"sig-paren\">)</span></dt>\n<dd>\n<p>M\u00e9todo para aplicar el algoritmo ODIN a una matriz de datos.</p>\n<dl>\n<dt>Par\u00e1metros</dt>\n<dd>\n<p><strong>numpy.array</strong> \u2013 data, matriz de datos</p>\n</dd>\n<dt>Tipo del valor devuelto</dt>\n<dd>\n<p>numpy.array de decisi\u00f3n 1-0</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</div>\n<div id=\"meandist\">\n<h1>MeanDIST<a href=\"#meandist\" rel=\"nofollow\" title=\"Enlazar permanentemente con este t\u00edtulo\">\u00b6</a></h1>\n<p>El algoritmo MeanDIST usa la la media de las distancias en su vecindario para ordenar a los v\u00e9rticesy seleccionar los que m\u00e1s se desvian.</p>\n<dl>\n<dt id=\"MeanDIST\"> MeanDIST <span class=\"sig-paren\">(</span>_k=20_, _t=1.5_<span class=\"sig-paren\">)</span>[\u00b6](#MeanDIST \"Enlazar permanentemente con esta definici\u00f3n\")</dt>\n<dd>\n<p>Constructor para la creaci\u00f3n del objeto de la clase MeanDIST.</p>\n<dl>\n<dt>Par\u00e1metros</dt>\n<dd>\n<ul>\n<li>\n<p><strong>int</strong> \u2013 k, n\u00famero de k vecinos a calcular</p>\n</li>\n<li>\n<p><strong>int</strong> \u2013 t, par\u00e1matro para ampliar o reducir el umbral.</p>\n</li>\n</ul>\n</dd>\n<dt>Tipo del valor devuelto</dt>\n<dd>\n<p>objeto de la clase MeanDIST</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<dl>\n<dt> fit_predict <span class=\"sig-paren\">(</span>_data_<span class=\"sig-paren\">)</span></dt>\n<dd>\n<p>M\u00e9todo para aplicar el algoritmo MeanDIST a una matriz de datos.</p>\n<dl>\n<dt>Par\u00e1metros</dt>\n<dd>\n<p><strong>numpy.array</strong> \u2013 data, matriz de datos</p>\n</dd>\n<dt>Tipo del valor devuelto</dt>\n<dd>\n<p>numpy.array de decisi\u00f3n 1-0</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</div>\n<div id=\"kdist\">\n<h1>KDIST<a href=\"#kdist\" rel=\"nofollow\" title=\"Enlazar permanentemente con este t\u00edtulo\">\u00b6</a></h1>\n<p>El algoritmo KDIST el m\u00e1ximo de las distancias a sus k-vecinos m\u00e1s cercanos para ordenar a los v\u00e9rtices y seleccionar los que m\u00e1s se desvian.</p>\n<dl>\n<dt id=\"KDIST\"> KDIST <span class=\"sig-paren\">(</span>_k=20_, _t=1.5_<span class=\"sig-paren\">)</span>[\u00b6](#KDIST \"Enlazar permanentemente con esta definici\u00f3n\")</dt>\n<dd>\n<p>Constructor para la creaci\u00f3n del objeto de la clase KDIST.</p>\n<dl>\n<dt>Par\u00e1metros</dt>\n<dd>\n<ul>\n<li>\n<p><strong>int</strong> \u2013 k, n\u00famero de k vecinos a calcular</p>\n</li>\n<li>\n<p><strong>int</strong> \u2013 t, par\u00e1matro para ampliar o reducir el umbral.</p>\n</li>\n</ul>\n</dd>\n<dt>Tipo del valor devuelto</dt>\n<dd>\n<p>objeto de la clase KDIST</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<dl>\n<dt> fit_predict <span class=\"sig-paren\">(</span>_data_<span class=\"sig-paren\">)</span></dt>\n<dd>\n<p>M\u00e9todo para aplicar el algoritmo KDIST a una matriz de datos.</p>\n<dl>\n<dt>Par\u00e1metros</dt>\n<dd>\n<p><strong>numpy.array</strong> \u2013 data, matriz de datos</p>\n</dd>\n<dt>Tipo del valor devuelto</dt>\n<dd>\n<p>numpy.array de decisi\u00f3n 1-0</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<dl>\n<dt id=\"enumerate\"> enumerate <span class=\"sig-paren\">(</span>_sequence_<span class=\"optional\">[</span>, _start=0_<span class=\"optional\">]</span><span class=\"sig-paren\">)</span>[\u00b6](#enumerate \"Enlazar permanentemente con esta definici\u00f3n\")</dt>\n</dl>\n<ul>\n<li>\n<p><a href=\"genindex.html\" rel=\"nofollow\"><span class=\"std std-ref\">\u00cdndice</span></a></p>\n</li>\n<li>\n<p><a href=\"py-modindex.html\" rel=\"nofollow\"><span class=\"std std-ref\">\u00cdndice de M\u00f3dulos</span></a></p>\n</li>\n<li>\n<p><a href=\"search.html\" rel=\"nofollow\"><span class=\"std std-ref\">P\u00e1gina de B\u00fasqueda</span></a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div>\n<div>\n<h1><a href=\"#\" rel=\"nofollow\">PyDBOD</a></h1>\n<h3>Navegaci\u00f3n</h3>\n<div>\n<h3>Related Topics</h3>\n<ul>\n<li><a href=\"#\" rel=\"nofollow\">Documentation overview</a></li>\n</ul>\n</div>\n<div id=\"searchbox\">\n<h3>B\u00fasqueda r\u00e1pida</h3>\n<div>\n&lt;form class=\"search\" action=\"search.html\" method=\"get\"&gt;&lt;input type=\"text\" name=\"q\"&gt; &lt;input type=\"submit\" value=\"Ir a\"&gt;&lt;/form&gt;\n</div>\n</div>\n&lt;script type=\"text/javascript\"&gt;$('#searchbox').show(0);&lt;/script&gt;</div>\n</div>\n</div>\n<div>\u00a92019, Miguel \u00c1ngel L\u00f3pez Robles. | Powered by [Sphinx 2.0.1](http://sphinx-doc.org/) &amp; [Alabaster 0.7.12](https://github.com/bitprophet/alabaster) | [Page source](_sources/index.rst.txt)</div>\n\n          </div>"}, "last_serial": 5745042, "releases": {"0.2.dev0": [{"comment_text": "", "digests": {"md5": "d50ffd7fecfd0df7125755b296ed1339", "sha256": "a9381a6620344c8eb88c03a3d504220dd618699423aa42c08bd49ea75c84b150"}, "downloads": -1, "filename": "PyDBOD-0.2.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "d50ffd7fecfd0df7125755b296ed1339", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19624, "upload_time": "2019-06-03T13:55:44", "upload_time_iso_8601": "2019-06-03T13:55:44.367005Z", "url": "https://files.pythonhosted.org/packages/47/52/eaeb92987c70f8398149ba5f1d03f2264aec5308707400b60baf35844db9/PyDBOD-0.2.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "209076178a7f0f02a7a08c6e59ef4361", "sha256": "aa0baac4072971446b4231daf17564d12a77fe21e015f94e655fc3ee218bd4a3"}, "downloads": -1, "filename": "PyDBOD-0.2.dev0.tar.gz", "has_sig": false, "md5_digest": "209076178a7f0f02a7a08c6e59ef4361", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91368, "upload_time": "2019-06-03T13:55:46", "upload_time_iso_8601": "2019-06-03T13:55:46.727216Z", "url": "https://files.pythonhosted.org/packages/55/5e/5b7b6d9c5b376559980532e837908f4e58594b224977cb78a70db9b48436/PyDBOD-0.2.dev0.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "1a725ee74a574031a89bcea5e59947bc", "sha256": "c5a8965095667a6af4b65943b8d1ac08d35a6afba125a12cbe0b404f3b768be3"}, "downloads": -1, "filename": "PyDBOD-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1a725ee74a574031a89bcea5e59947bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25779, "upload_time": "2019-08-28T17:50:20", "upload_time_iso_8601": "2019-08-28T17:50:20.404781Z", "url": "https://files.pythonhosted.org/packages/5c/25/a3ab54cb15f24df4197189bfeaf8c140104bb29f6dddcf57c6d2686e2bee/PyDBOD-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23113e56aca5f6de3d4bbde578ee4296", "sha256": "19bc129a4c98bf7a3751ed1d3d235c76d6468683de786adb69da461efe5e2382"}, "downloads": -1, "filename": "PyDBOD-1.0.tar.gz", "has_sig": false, "md5_digest": "23113e56aca5f6de3d4bbde578ee4296", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 104217, "upload_time": "2019-08-28T17:50:22", "upload_time_iso_8601": "2019-08-28T17:50:22.568305Z", "url": "https://files.pythonhosted.org/packages/ca/cb/7d36f4650f3e72a2fbd2a084b8662d7d3ef701d8eb9f59a7979d1f5ae5ef/PyDBOD-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "656117b9725203f163c5813046d9261f", "sha256": "704d97341b2695414e3a90ef9f114ae84cdd799d6319234ace1bde1ba1c1ee44"}, "downloads": -1, "filename": "PyDBOD-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "656117b9725203f163c5813046d9261f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25853, "upload_time": "2019-08-28T19:41:42", "upload_time_iso_8601": "2019-08-28T19:41:42.269287Z", "url": "https://files.pythonhosted.org/packages/8d/dc/420d8afdeee2f705024179f0a150b6e6073e974ccd820c8f43195fc0a876/PyDBOD-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6cafb5a254a5a134f54d47c973e9e30f", "sha256": "211fbb0bf3e92dbc612f6222733713b0b4f53bd432e93c36c664a738260fcdef"}, "downloads": -1, "filename": "PyDBOD-1.1.tar.gz", "has_sig": false, "md5_digest": "6cafb5a254a5a134f54d47c973e9e30f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 104455, "upload_time": "2019-08-28T19:41:44", "upload_time_iso_8601": "2019-08-28T19:41:44.100749Z", "url": "https://files.pythonhosted.org/packages/66/f2/9b657d0876f89e9210db2c3685103beb70cff48b7867fcb3e310a6805198/PyDBOD-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "656117b9725203f163c5813046d9261f", "sha256": "704d97341b2695414e3a90ef9f114ae84cdd799d6319234ace1bde1ba1c1ee44"}, "downloads": -1, "filename": "PyDBOD-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "656117b9725203f163c5813046d9261f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25853, "upload_time": "2019-08-28T19:41:42", "upload_time_iso_8601": "2019-08-28T19:41:42.269287Z", "url": "https://files.pythonhosted.org/packages/8d/dc/420d8afdeee2f705024179f0a150b6e6073e974ccd820c8f43195fc0a876/PyDBOD-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6cafb5a254a5a134f54d47c973e9e30f", "sha256": "211fbb0bf3e92dbc612f6222733713b0b4f53bd432e93c36c664a738260fcdef"}, "downloads": -1, "filename": "PyDBOD-1.1.tar.gz", "has_sig": false, "md5_digest": "6cafb5a254a5a134f54d47c973e9e30f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 104455, "upload_time": "2019-08-28T19:41:44", "upload_time_iso_8601": "2019-08-28T19:41:44.100749Z", "url": "https://files.pythonhosted.org/packages/66/f2/9b657d0876f89e9210db2c3685103beb70cff48b7867fcb3e310a6805198/PyDBOD-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:16 2020"}