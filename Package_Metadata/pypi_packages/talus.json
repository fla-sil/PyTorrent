{"info": {"author": "NSO / AURA", "author_email": "\"swiant@nso.edu\"", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "talus\n=========\n\n|codecov|\n\ntalus (noun) - ta\u00b7\u200blus | \u02c8t\u0101-l\u0259s: a slope formed especially by an accumulation of rock debris; Occasional habitat of the pika.\n\nA wrapper for connecting to RabbitMQ which constrains clients to a single purpose channel (producer or consumer) with healing for intermittent connectivity.\n\nFeatures\n--------\n\n- Guided separation of connections for producers and consumers\n\n- Re-establish connections to the server when lost\n\n- Constrained interface to support simple produce / consume use cases for direct exchanges\n\nInstallation\n------------\n\n.. code:: bash\n\n   pip install talus\n\nExamples\n--------\n\n**Creating a message class**\n\n.. code:: python\n\n     from talus.message import message_class\n\n     @message_class(routing_key=\"message.m\", queues=[\"message.q\"])\n     class MyMessage:\n         a: str\n\n**Consumer with defaults for connection and retry**\n\n.. code:: python\n\n     with DurableBlockingConsumerWrapper(consumer_queue='queue_name') as consumer:\n        for method, properties, body in consumer.consume_generator(auto_ack=True):\n            pass # DO Something with the message\n\n**Consumer specifying connection and retry data**\n\n.. code:: python\n\n     with DurableBlockingConsumerWrapper(consumer_queue='queue_name',\n        rabbitmq_host=\"localhost\",\n        rabbitmq_port5672,\n        rabbitmq_user='guest',\n        rabbitmq_pass='guest',\n        retry_delay=1,\n        retry_backoff=2,\n        retry_jitter=(1, 10),\n        retry_max_delay=300,\n        prefetch_count=1,\n        connection_name='consumer connection') as consumer:\n        for method, properties, body in consumer.consume_generator(auto_ack=True):\n            pass # DO Something with the message\n\n**Producer with defaults for connection and retry**\n\n.. code:: python\n\n     with DurableBlockingProducerWrapper(producer_queue_bindings=[{\"routing_key\": \"test.m\", \"bound_queue\": \"test.q\"}, MyMessage.binding()],\n        publish_exchange='amq.direct') as producer:\n        producer.post('test.m', {'key': 'value'})\n        producer.publish_message(MyMessage(a=\"s\")) # using the message class from an earlier example\n\n\n\n\n\n\n.. |codecov| image:: https://codecov.io/bb/dkistdc/interservice-bus-adapter/branch/master/graph/badge.svg\n   :target: https://codecov.io/bb/dkistdc/interservice-bus-adapter", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/dkistdc/interservice-bus-adapter/src/master/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "talus", "package_url": "https://pypi.org/project/talus/", "platform": "", "project_url": "https://pypi.org/project/talus/", "project_urls": {"Homepage": "https://bitbucket.org/dkistdc/interservice-bus-adapter/src/master/"}, "release_url": "https://pypi.org/project/talus/0.1.6/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A wrapper for connecting to RabbitMQ which constrains clients to a single purpose channel (producer or consumer) with healing for intermittent connectivity.", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://codecov.io/bb/dkistdc/interservice-bus-adapter\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2783c6388f2634ec9f0077e45122a7c4dfb97463/68747470733a2f2f636f6465636f762e696f2f62622f646b69737464632f696e746572736572766963652d6275732d616461707465722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p>talus (noun) - ta\u00b7\u200blus | \u02c8t\u0101-l\u0259s: a slope formed especially by an accumulation of rock debris; Occasional habitat of the pika.</p>\n<p>A wrapper for connecting to RabbitMQ which constrains clients to a single purpose channel (producer or consumer) with healing for intermittent connectivity.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Guided separation of connections for producers and consumers</li>\n<li>Re-establish connections to the server when lost</li>\n<li>Constrained interface to support simple produce / consume use cases for direct exchanges</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install talus\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p><strong>Creating a message class</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">talus.message</span> <span class=\"kn\">import</span> <span class=\"n\">message_class</span>\n\n<span class=\"nd\">@message_class</span><span class=\"p\">(</span><span class=\"n\">routing_key</span><span class=\"o\">=</span><span class=\"s2\">\"message.m\"</span><span class=\"p\">,</span> <span class=\"n\">queues</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"message.q\"</span><span class=\"p\">])</span>\n<span class=\"k\">class</span> <span class=\"nc\">MyMessage</span><span class=\"p\">:</span>\n    <span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n</pre>\n<p><strong>Consumer with defaults for connection and retry</strong></p>\n<pre><span class=\"k\">with</span> <span class=\"n\">DurableBlockingConsumerWrapper</span><span class=\"p\">(</span><span class=\"n\">consumer_queue</span><span class=\"o\">=</span><span class=\"s1\">'queue_name'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">consumer</span><span class=\"p\">:</span>\n   <span class=\"k\">for</span> <span class=\"n\">method</span><span class=\"p\">,</span> <span class=\"n\">properties</span><span class=\"p\">,</span> <span class=\"n\">body</span> <span class=\"ow\">in</span> <span class=\"n\">consumer</span><span class=\"o\">.</span><span class=\"n\">consume_generator</span><span class=\"p\">(</span><span class=\"n\">auto_ack</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n       <span class=\"k\">pass</span> <span class=\"c1\"># DO Something with the message</span>\n</pre>\n<p><strong>Consumer specifying connection and retry data</strong></p>\n<pre><span class=\"k\">with</span> <span class=\"n\">DurableBlockingConsumerWrapper</span><span class=\"p\">(</span><span class=\"n\">consumer_queue</span><span class=\"o\">=</span><span class=\"s1\">'queue_name'</span><span class=\"p\">,</span>\n   <span class=\"n\">rabbitmq_host</span><span class=\"o\">=</span><span class=\"s2\">\"localhost\"</span><span class=\"p\">,</span>\n   <span class=\"n\">rabbitmq_port5672</span><span class=\"p\">,</span>\n   <span class=\"n\">rabbitmq_user</span><span class=\"o\">=</span><span class=\"s1\">'guest'</span><span class=\"p\">,</span>\n   <span class=\"n\">rabbitmq_pass</span><span class=\"o\">=</span><span class=\"s1\">'guest'</span><span class=\"p\">,</span>\n   <span class=\"n\">retry_delay</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n   <span class=\"n\">retry_backoff</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n   <span class=\"n\">retry_jitter</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">),</span>\n   <span class=\"n\">retry_max_delay</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span>\n   <span class=\"n\">prefetch_count</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n   <span class=\"n\">connection_name</span><span class=\"o\">=</span><span class=\"s1\">'consumer connection'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">consumer</span><span class=\"p\">:</span>\n   <span class=\"k\">for</span> <span class=\"n\">method</span><span class=\"p\">,</span> <span class=\"n\">properties</span><span class=\"p\">,</span> <span class=\"n\">body</span> <span class=\"ow\">in</span> <span class=\"n\">consumer</span><span class=\"o\">.</span><span class=\"n\">consume_generator</span><span class=\"p\">(</span><span class=\"n\">auto_ack</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n       <span class=\"k\">pass</span> <span class=\"c1\"># DO Something with the message</span>\n</pre>\n<p><strong>Producer with defaults for connection and retry</strong></p>\n<pre><span class=\"k\">with</span> <span class=\"n\">DurableBlockingProducerWrapper</span><span class=\"p\">(</span><span class=\"n\">producer_queue_bindings</span><span class=\"o\">=</span><span class=\"p\">[{</span><span class=\"s2\">\"routing_key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"test.m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"bound_queue\"</span><span class=\"p\">:</span> <span class=\"s2\">\"test.q\"</span><span class=\"p\">},</span> <span class=\"n\">MyMessage</span><span class=\"o\">.</span><span class=\"n\">binding</span><span class=\"p\">()],</span>\n   <span class=\"n\">publish_exchange</span><span class=\"o\">=</span><span class=\"s1\">'amq.direct'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">producer</span><span class=\"p\">:</span>\n   <span class=\"n\">producer</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'test.m'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"s1\">'value'</span><span class=\"p\">})</span>\n   <span class=\"n\">producer</span><span class=\"o\">.</span><span class=\"n\">publish_message</span><span class=\"p\">(</span><span class=\"n\">MyMessage</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s2\">\"s\"</span><span class=\"p\">))</span> <span class=\"c1\"># using the message class from an earlier example</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7191067, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "2604e153cb49e15777ee8f761f6ddcbc", "sha256": "1d1ee2bf0720a05e6ec6c3de7f74602277ecfc478692fb2126c52cd5cfe065c8"}, "downloads": -1, "filename": "talus-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2604e153cb49e15777ee8f761f6ddcbc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10047, "upload_time": "2019-10-11T18:05:58", "upload_time_iso_8601": "2019-10-11T18:05:58.434094Z", "url": "https://files.pythonhosted.org/packages/66/00/649e79754825d6fd8831f3d39adb34050ac43a32a4b95f553ab731585734/talus-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "0f2f0de48f66b6c85ba42da98d9148e9", "sha256": "3f2eb1577a80387022fcb2e8b27c5e7aaeca64cd4f3d9afad4d438d5de6dd08c"}, "downloads": -1, "filename": "talus-0.0.2.tar.gz", "has_sig": false, "md5_digest": "0f2f0de48f66b6c85ba42da98d9148e9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10046, "upload_time": "2019-10-11T18:16:09", "upload_time_iso_8601": "2019-10-11T18:16:09.046783Z", "url": "https://files.pythonhosted.org/packages/7f/f6/db1a11107d43824cc093ee277279ffb8db2a4fee3c9cdf196e4423c8668f/talus-0.0.2.tar.gz", "yanked": false}], "0.0.2rc1": [{"comment_text": "", "digests": {"md5": "d335207bf473a59ac71db6953c2921a1", "sha256": "023fe29543e2d61503f8a874ae0952c7e2351acdc0c4a722b73844d243e1f8f6"}, "downloads": -1, "filename": "talus-0.0.2rc1.tar.gz", "has_sig": false, "md5_digest": "d335207bf473a59ac71db6953c2921a1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10051, "upload_time": "2019-10-11T18:14:23", "upload_time_iso_8601": "2019-10-11T18:14:23.706778Z", "url": "https://files.pythonhosted.org/packages/dc/52/7c95a9ce23d5a22cde015d7a5b5d4cddbcb12516487da9ac2992851c9645/talus-0.0.2rc1.tar.gz", "yanked": false}], "0.0.6rc1": [{"comment_text": "", "digests": {"md5": "612ad72a1d30afc473e4ce1d78e6472a", "sha256": "7e65a85b5ef2034db443e4972d86386ea4ba9a4563fb64661c9b258c01184174"}, "downloads": -1, "filename": "talus-0.0.6rc1.tar.gz", "has_sig": false, "md5_digest": "612ad72a1d30afc473e4ce1d78e6472a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13018, "upload_time": "2020-05-07T17:23:59", "upload_time_iso_8601": "2020-05-07T17:23:59.419389Z", "url": "https://files.pythonhosted.org/packages/66/22/aec230326b7005214271ba69b4dcf3ef762d09390cab8a653a4a1c4b9837/talus-0.0.6rc1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "74192c97226260be83afcdf6c8fca42a", "sha256": "e77ec7be1c94596c1b60b55b4518c77064b9e67acd4029f100a77f0af54d3152"}, "downloads": -1, "filename": "talus-0.1.0.tar.gz", "has_sig": false, "md5_digest": "74192c97226260be83afcdf6c8fca42a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10049, "upload_time": "2019-10-11T20:38:09", "upload_time_iso_8601": "2019-10-11T20:38:09.523933Z", "url": "https://files.pythonhosted.org/packages/a3/4f/9b8c0d8e8d4febf37ea3429ccb707a55f94ae17b36d1b01fbb0ce0a826f6/talus-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7fb68e47d00e56d649421af59fbb85dc", "sha256": "11fbb128a4151596dc3a18cc9a5fa1496b26cb0490b3614ed0ead06bcd54322a"}, "downloads": -1, "filename": "talus-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7fb68e47d00e56d649421af59fbb85dc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10066, "upload_time": "2020-02-20T18:20:41", "upload_time_iso_8601": "2020-02-20T18:20:41.486778Z", "url": "https://files.pythonhosted.org/packages/4b/d8/da2ccc59296f0850b3a832173433a6c97f149d3f0b49bbd106936cfcec82/talus-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c2c7c18bf8653e013000794e78080840", "sha256": "4a30ad211a7b90948e414e0cdffb8f80a1870381111e6ed9b6a540ce158d8e3d"}, "downloads": -1, "filename": "talus-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c2c7c18bf8653e013000794e78080840", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10343, "upload_time": "2020-04-02T19:44:32", "upload_time_iso_8601": "2020-04-02T19:44:32.217140Z", "url": "https://files.pythonhosted.org/packages/76/4f/3d40745e2558b1aee0141a35b73eb5f92a1f7ac6233e9dbd4a8d11546410/talus-0.1.2.tar.gz", "yanked": false}], "0.1.2rc1": [{"comment_text": "", "digests": {"md5": "19e266e374f1f4d5ff45fefc4282cbad", "sha256": "6b43851cd7d1124db5fcf0c21cbf26b0eb32b18235cf25acb0574f2dd34ed5b2"}, "downloads": -1, "filename": "talus-0.1.2rc1.tar.gz", "has_sig": false, "md5_digest": "19e266e374f1f4d5ff45fefc4282cbad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10071, "upload_time": "2020-04-01T20:45:16", "upload_time_iso_8601": "2020-04-01T20:45:16.744415Z", "url": "https://files.pythonhosted.org/packages/6f/4f/88341c3d278ab529bcfcdd4875d862a9e8641a1b8d2048250fcb7dd4fea8/talus-0.1.2rc1.tar.gz", "yanked": false}], "0.1.2rc2": [{"comment_text": "", "digests": {"md5": "c87f66c71dd6745c30542dd52d0af641", "sha256": "7278cbfdd42f5ed727876d5ae8420715283c893474b58b5217ab07e7d2e23962"}, "downloads": -1, "filename": "talus-0.1.2rc2.tar.gz", "has_sig": false, "md5_digest": "c87f66c71dd6745c30542dd52d0af641", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10345, "upload_time": "2020-04-02T16:42:21", "upload_time_iso_8601": "2020-04-02T16:42:21.370390Z", "url": "https://files.pythonhosted.org/packages/29/f2/41c38b41d7b0d4e61be21ade3fed68c4f2416cdc410f8d9fbfde3e063cb2/talus-0.1.2rc2.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "36dedef12fb168a999879e57cd39f8d5", "sha256": "e84ccb06b6aa29b76e43751de832e37e4f72b3bd5db58eea8402f61a2512aba4"}, "downloads": -1, "filename": "talus-0.1.4.tar.gz", "has_sig": false, "md5_digest": "36dedef12fb168a999879e57cd39f8d5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10359, "upload_time": "2020-04-13T21:59:33", "upload_time_iso_8601": "2020-04-13T21:59:33.908459Z", "url": "https://files.pythonhosted.org/packages/96/a0/5bb32ff92ebbb6156941c26c586423002414995bc67718e7604773745904/talus-0.1.4.tar.gz", "yanked": false}], "0.1.4rc1": [{"comment_text": "", "digests": {"md5": "a48903ce3aeff32f04fb68337f781df4", "sha256": "1b6ee15b4f57c78b75d85c59c9e0a1abd970735ec2ab8b0feef96b84cf915b1b"}, "downloads": -1, "filename": "talus-0.1.4rc1.tar.gz", "has_sig": false, "md5_digest": "a48903ce3aeff32f04fb68337f781df4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10363, "upload_time": "2020-04-13T21:58:32", "upload_time_iso_8601": "2020-04-13T21:58:32.872378Z", "url": "https://files.pythonhosted.org/packages/67/6a/734bc48c711c015c9d0177936190a0a70898015c7d1ab24975999c3b4564/talus-0.1.4rc1.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "4b13a7247b5081e2e941575a32e5bbbb", "sha256": "7d6a9965388ea77c75bd4a86eaa4b6a38d070ee575162839619a59f7b1606a39"}, "downloads": -1, "filename": "talus-0.1.5.tar.gz", "has_sig": false, "md5_digest": "4b13a7247b5081e2e941575a32e5bbbb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10356, "upload_time": "2020-04-17T15:50:50", "upload_time_iso_8601": "2020-04-17T15:50:50.181262Z", "url": "https://files.pythonhosted.org/packages/00/06/284c9583c0d01beeb69982b7e3843336baf2d44edbbeed9701bc51f28bf3/talus-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "36f60c2b638046d20d1ea7cfc253b718", "sha256": "1413fc9735db390b25151dc377b8b78918898c6811b2cb4c68db311c6dd23dfb"}, "downloads": -1, "filename": "talus-0.1.6.tar.gz", "has_sig": false, "md5_digest": "36f60c2b638046d20d1ea7cfc253b718", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13023, "upload_time": "2020-05-07T19:10:00", "upload_time_iso_8601": "2020-05-07T19:10:00.658079Z", "url": "https://files.pythonhosted.org/packages/95/2a/c1ac0372c08368eed5f7279b4c0c740a88ac2d44552b8967a43a935f9f3e/talus-0.1.6.tar.gz", "yanked": false}], "0.1.6rc1": [{"comment_text": "", "digests": {"md5": "319ec5720b5e494ed6174a1e294a0e9e", "sha256": "12dd131a85ec9512d52dde2219bdec1d79093bd1404eb2f304cea6b1bc7d56ff"}, "downloads": -1, "filename": "talus-0.1.6rc1.tar.gz", "has_sig": false, "md5_digest": "319ec5720b5e494ed6174a1e294a0e9e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13022, "upload_time": "2020-05-07T17:28:04", "upload_time_iso_8601": "2020-05-07T17:28:04.713353Z", "url": "https://files.pythonhosted.org/packages/a8/a8/9f3f444b05b790d8a16abfff3352973e3c969de13d080fda4a5f5d8d7207/talus-0.1.6rc1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "36f60c2b638046d20d1ea7cfc253b718", "sha256": "1413fc9735db390b25151dc377b8b78918898c6811b2cb4c68db311c6dd23dfb"}, "downloads": -1, "filename": "talus-0.1.6.tar.gz", "has_sig": false, "md5_digest": "36f60c2b638046d20d1ea7cfc253b718", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13023, "upload_time": "2020-05-07T19:10:00", "upload_time_iso_8601": "2020-05-07T19:10:00.658079Z", "url": "https://files.pythonhosted.org/packages/95/2a/c1ac0372c08368eed5f7279b4c0c740a88ac2d44552b8967a43a935f9f3e/talus-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:14 2020"}