{"info": {"author": "Joe McIntyre", "author_email": "j_h_mcintyre@yahoo.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Topic :: Software Development"], "description": "=====================\nJSON Validate Utility\n=====================\n\nPart of the\n`Using JSON Schema <http://usingjsonschema.github.io>`_\nproject.\n\n``jsonvalidate`` is a command line and library utility allowing JSON content\nto be validated using JSON Schema content from local or remote sources, and\nuse of custom schema storage and URI access.\n\nThe utility uses the\n`jsonschema <https://pypi.python.org/pypi/jsonschema>`_\nlibrary for the schema validation processing\n(`GitHub repo <https://github.com/Julian/jsonschema>`_).\n\nFor command line/script use, a console message is displayed and the process\nexits with 0 for success, 1 for failure.\n\n.. image:: https://travis-ci.org/usingjsonschema/ujs-jsonvalidate-python.svg?branch=master\n    :target: https://travis-ci.org/usingjsonschema/ujs-jsonvalidate-python\n\nCommand Line / Script Use\n-------------------------\n\nTo run the validation (command line or script), use the ``validate``\ncommand with a file name (path optional). For example, to check the file\n``example.json`` against the schema ``example_schema.json``, use,\n\n.. code:: bash\n\n    validate example.json example_schema.json\n\nLibrary Function Use\n--------------------\n\n**validate** (dataFile, schemaFile, refFiles, jsdbFile, callback)\n\n| Arguments:\n|     dataFile *String* File name of JSON data file (path optional)\n|     schemaFile *String* File name of JSON Schema file (path optional)\n|     refFiles *String[]* Array of file names for $ref files (path optional)\n|     jsdbFile *String* File name for JSDB file (path optional)\n|\n| Returns:\n|     code, data, message\n|\n|     - *code* is the validation result\n|     - *data* is the validated JSON content from dataFile\n|     - *message* is text message associated with the *code*\n\nFor example,\n\n.. code:: python\n\n    from jsonvalidate import validate, VALID\n\n    dataFile = \"example.json\"\n    schemaFile = \"example_schema.json\"\n    refFiles = [\"ref1_schema.json\", \"ref2_schema.json\"]\n    jsdbFile = None\n\n    code, data, message = validate (dataFile, schemaFile, refFiles, jsdbFile)\n    if code == VALID:\n        print (\"Valid JSON content\");\n    else:\n        print (\"Error: \" + str (message))\n\nInstallation\n------------\n\nThe program can be installed using ``pip``, with the command,\n\n.. code:: bash\n\n    pip install ujs-jsonvalidate\n\nLicense\n-------\n\nMIT", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/usingjsonschema/ujs-jsonvalidate-python", "keywords": "bookujs json json-schema", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "ujs-jsonvalidate", "package_url": "https://pypi.org/project/ujs-jsonvalidate/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ujs-jsonvalidate/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/usingjsonschema/ujs-jsonvalidate-python"}, "release_url": "https://pypi.org/project/ujs-jsonvalidate/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "JSON validation utility", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Part of the\n<a href=\"http://usingjsonschema.github.io\" rel=\"nofollow\">Using JSON Schema</a>\nproject.</p>\n<p><tt>jsonvalidate</tt> is a command line and library utility allowing JSON content\nto be validated using JSON Schema content from local or remote sources, and\nuse of custom schema storage and URI access.</p>\n<p>The utility uses the\n<a href=\"https://pypi.python.org/pypi/jsonschema\" rel=\"nofollow\">jsonschema</a>\nlibrary for the schema validation processing\n(<a href=\"https://github.com/Julian/jsonschema\" rel=\"nofollow\">GitHub repo</a>).</p>\n<p>For command line/script use, a console message is displayed and the process\nexits with 0 for success, 1 for failure.</p>\n<a href=\"https://travis-ci.org/usingjsonschema/ujs-jsonvalidate-python\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/usingjsonschema/ujs-jsonvalidate-python.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ba4915e851d1f6e0373c19906faac2cb18418983/68747470733a2f2f7472617669732d63692e6f72672f7573696e676a736f6e736368656d612f756a732d6a736f6e76616c69646174652d707974686f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"command-line-script-use\">\n<h2>Command Line / Script Use</h2>\n<p>To run the validation (command line or script), use the <tt>validate</tt>\ncommand with a file name (path optional). For example, to check the file\n<tt>example.json</tt> against the schema <tt>example_schema.json</tt>, use,</p>\n<pre>validate example.json example_schema.json\n</pre>\n</div>\n<div id=\"library-function-use\">\n<h2>Library Function Use</h2>\n<p><strong>validate</strong> (dataFile, schemaFile, refFiles, jsdbFile, callback)</p>\n<div>\n<div>Arguments:</div>\n<div>\n<div>dataFile <em>String</em> File name of JSON data file (path optional)</div>\n<div>schemaFile <em>String</em> File name of JSON Schema file (path optional)</div>\n<div>refFiles <em>String[]</em> Array of file names for $ref files (path optional)</div>\n<div>jsdbFile <em>String</em> File name for JSDB file (path optional)</div>\n<div><br></div>\n</div>\n<div>Returns:</div>\n<div>\n<div>code, data, message</div>\n<div><br></div>\n<div>- <em>code</em> is the validation result</div>\n<div>- <em>data</em> is the validated JSON content from dataFile</div>\n<div>- <em>message</em> is text message associated with the <em>code</em></div>\n</div>\n</div>\n<p>For example,</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">jsonvalidate</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span><span class=\"p\">,</span> <span class=\"n\">VALID</span>\n\n<span class=\"n\">dataFile</span> <span class=\"o\">=</span> <span class=\"s2\">\"example.json\"</span>\n<span class=\"n\">schemaFile</span> <span class=\"o\">=</span> <span class=\"s2\">\"example_schema.json\"</span>\n<span class=\"n\">refFiles</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"ref1_schema.json\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ref2_schema.json\"</span><span class=\"p\">]</span>\n<span class=\"n\">jsdbFile</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n<span class=\"n\">code</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">validate</span> <span class=\"p\">(</span><span class=\"n\">dataFile</span><span class=\"p\">,</span> <span class=\"n\">schemaFile</span><span class=\"p\">,</span> <span class=\"n\">refFiles</span><span class=\"p\">,</span> <span class=\"n\">jsdbFile</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">code</span> <span class=\"o\">==</span> <span class=\"n\">VALID</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Valid JSON content\"</span><span class=\"p\">);</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Error: \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span> <span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The program can be installed using <tt>pip</tt>, with the command,</p>\n<pre>pip install ujs-jsonvalidate\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT</p>\n</div>\n\n          </div>"}, "last_serial": 1155797, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9307afa59b37637436396085b8e37ccb", "sha256": "e033d6e95860bae7a3948e983b4f3b9a4a033f7496ad1e0d486805c302230b56"}, "downloads": -1, "filename": "ujs-jsonvalidate-0.1.0.zip", "has_sig": false, "md5_digest": "9307afa59b37637436396085b8e37ccb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10724, "upload_time": "2014-07-12T20:28:02", "upload_time_iso_8601": "2014-07-12T20:28:02.534440Z", "url": "https://files.pythonhosted.org/packages/f5/80/78cf137edafa40ebc60879f48955219616563a9d46ac72c597da76196890/ujs-jsonvalidate-0.1.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9307afa59b37637436396085b8e37ccb", "sha256": "e033d6e95860bae7a3948e983b4f3b9a4a033f7496ad1e0d486805c302230b56"}, "downloads": -1, "filename": "ujs-jsonvalidate-0.1.0.zip", "has_sig": false, "md5_digest": "9307afa59b37637436396085b8e37ccb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10724, "upload_time": "2014-07-12T20:28:02", "upload_time_iso_8601": "2014-07-12T20:28:02.534440Z", "url": "https://files.pythonhosted.org/packages/f5/80/78cf137edafa40ebc60879f48955219616563a9d46ac72c597da76196890/ujs-jsonvalidate-0.1.0.zip", "yanked": false}], "timestamp": "Fri May  8 03:41:22 2020"}