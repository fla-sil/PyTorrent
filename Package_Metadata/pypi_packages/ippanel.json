{"info": {"author": "Asghar Dadashzadeh", "author_email": "dev@ippanel.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "# IPPanel SMS api SDK\n\nThis repository contains open source Python client for `ippanel` api. Documentation can be found at: <http://docs.ippanel.com>.\n\n[![Build Status](https://travis-ci.org/ippanel/python-rest-sdk.svg?branch=master)](https://travis-ci.org/ippanel/python-rest-sdk)\n\n## Installation\n\nyou can install this package with either pip:\n\n```bash\npip install ippanel\n```\n\nor running bellow command after downloading source:\n\n```bash\npython setup.py install\n```\n\n## Examples\n\nFor using sdk, you have to create a client instance that gives you available methods on API\n\n```python\nfrom ippanel import Client\n\n# you api key that generated from panel\napi_key = \"api-key\"\n\n# create client instance\nsms = Client(api_key)\n\n...\n```\n\n### Credit check\n\n```python\n# return float64 type credit amount\ncredit = sms.get_credit()\n\n```\n\n### Send one to many\n\nFor sending sms, obviously you need `originator` number, `recipients` and `message`.\n\n```python\nbulk_id = sms.send(\n    \"+9810001\",          # originator\n    [\"98912xxxxxxx\"],    # recipients\n    \"ippanel is awesome\" # message\n)\n\n```\n\nIf send is successful, a unique tracking code returned and you can track your message status with that.\n\n### Get message summery\n\n```python\nbulk_id = \"message-tracking-code\"\n\nmessage = sms.get_message(bulk_id)\n\nprint(message.status)  # get message status\nprint(message.cost)    # get message cost\nprint(message.payback) # get message payback\n```\n\n### Get message delivery statuses\n\n```python\nbulk_id = \"message-tracking-code\"\n\nstatuses, pagination_info = sms.fetch_statuses(bulk_id, 0, 10)\n\n# you can loop in messages statuses list\nfor status in statuses {\n    print(\"Recipient: %s, Status: %s\" % (status.recipient, status.status))\n}\n\nprint(\"Total: \", pagination_info.total)\n```\n\n### Inbox fetch\n\nfetch inbox messages\n\n```python\nmessages, pagination_info = sms.fetch_inbox(0, 10)\n\nfor message in messages {\n    print(\"Received message %s from number %s in line %s\" % (message.message, message.sender, message.number))\n}\n```\n\n### Pattern create\n\nFor sending messages with predefined pattern(e.g. verification codes, ...), you hav to create a pattern. a pattern at least have a parameter. parameters defined with `%param_name%`.\n\n```python\npattern = sms.create_pattern(r\"%name% is awesome\", False)\n\nprint(pattern.code)\n```\n\n### Send with pattern\n\n```python\npattern_values = {\n    \"name\": \"IPPANEL\",\n}\n\nbulk_id = sms.send_pattern(\n    \"t2cfmnyo0c\",    # pattern code\n    \"+9810001\",      # originator\n    \"98912xxxxxxx\",  # recipient\n    pattern_values,  # pattern values\n)\n```\n\n### Error checking\n\n```python\nfrom ippanel import HTTPError, Error, ResponseCode\n\ntry:\n    bulk_id = sms.send(\"9810001\", [\"98912xxxxx\"], \"ippanel is awesome\")\nexcept Error as e: # ippanel sms error\n    print(\"Error handled => code: %s, message: %s\" % (e.code, e.message))\n    if e.code == ResponseCode.ErrUnprocessableEntity.value:\n        for field in e.message:\n            print(\"Field: %s , Errors: %s\" % (field, e.message[field]))\nexcept HTTPError as e: # http error like network error, not found, ...\n    print(\"Error handled => code: %s\" % (e))\n\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ippanel/python-rest-sdk", "keywords": "", "license": "BSD-2-Clause", "maintainer": "", "maintainer_email": "", "name": "ippanel", "package_url": "https://pypi.org/project/ippanel/", "platform": "", "project_url": "https://pypi.org/project/ippanel/", "project_urls": {"Homepage": "https://github.com/ippanel/python-rest-sdk"}, "release_url": "https://pypi.org/project/ippanel/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "ippanel sdk", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>IPPanel SMS api SDK</h1>\n<p>This repository contains open source Python client for <code>ippanel</code> api. Documentation can be found at: <a href=\"http://docs.ippanel.com\" rel=\"nofollow\">http://docs.ippanel.com</a>.</p>\n<p><a href=\"https://travis-ci.org/ippanel/python-rest-sdk\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/451c98a5dd11717586ffa4cd77bf0d00a0573957/68747470733a2f2f7472617669732d63692e6f72672f697070616e656c2f707974686f6e2d726573742d73646b2e7376673f6272616e63683d6d6173746572\"></a></p>\n<h2>Installation</h2>\n<p>you can install this package with either pip:</p>\n<pre>pip install ippanel\n</pre>\n<p>or running bellow command after downloading source:</p>\n<pre>python setup.py install\n</pre>\n<h2>Examples</h2>\n<p>For using sdk, you have to create a client instance that gives you available methods on API</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ippanel</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"c1\"># you api key that generated from panel</span>\n<span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"s2\">\"api-key\"</span>\n\n<span class=\"c1\"># create client instance</span>\n<span class=\"n\">sms</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">)</span>\n\n<span class=\"o\">...</span>\n</pre>\n<h3>Credit check</h3>\n<pre><span class=\"c1\"># return float64 type credit amount</span>\n<span class=\"n\">credit</span> <span class=\"o\">=</span> <span class=\"n\">sms</span><span class=\"o\">.</span><span class=\"n\">get_credit</span><span class=\"p\">()</span>\n</pre>\n<h3>Send one to many</h3>\n<p>For sending sms, obviously you need <code>originator</code> number, <code>recipients</code> and <code>message</code>.</p>\n<pre><span class=\"n\">bulk_id</span> <span class=\"o\">=</span> <span class=\"n\">sms</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"+9810001\"</span><span class=\"p\">,</span>          <span class=\"c1\"># originator</span>\n    <span class=\"p\">[</span><span class=\"s2\">\"98912xxxxxxx\"</span><span class=\"p\">],</span>    <span class=\"c1\"># recipients</span>\n    <span class=\"s2\">\"ippanel is awesome\"</span> <span class=\"c1\"># message</span>\n<span class=\"p\">)</span>\n</pre>\n<p>If send is successful, a unique tracking code returned and you can track your message status with that.</p>\n<h3>Get message summery</h3>\n<pre><span class=\"n\">bulk_id</span> <span class=\"o\">=</span> <span class=\"s2\">\"message-tracking-code\"</span>\n\n<span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">sms</span><span class=\"o\">.</span><span class=\"n\">get_message</span><span class=\"p\">(</span><span class=\"n\">bulk_id</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">)</span>  <span class=\"c1\"># get message status</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">cost</span><span class=\"p\">)</span>    <span class=\"c1\"># get message cost</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">payback</span><span class=\"p\">)</span> <span class=\"c1\"># get message payback</span>\n</pre>\n<h3>Get message delivery statuses</h3>\n<pre><span class=\"n\">bulk_id</span> <span class=\"o\">=</span> <span class=\"s2\">\"message-tracking-code\"</span>\n\n<span class=\"n\">statuses</span><span class=\"p\">,</span> <span class=\"n\">pagination_info</span> <span class=\"o\">=</span> <span class=\"n\">sms</span><span class=\"o\">.</span><span class=\"n\">fetch_statuses</span><span class=\"p\">(</span><span class=\"n\">bulk_id</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># you can loop in messages statuses list</span>\n<span class=\"k\">for</span> <span class=\"n\">status</span> <span class=\"ow\">in</span> <span class=\"n\">statuses</span> <span class=\"p\">{</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Recipient: </span><span class=\"si\">%s</span><span class=\"s2\">, Status: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">status</span><span class=\"o\">.</span><span class=\"n\">recipient</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Total: \"</span><span class=\"p\">,</span> <span class=\"n\">pagination_info</span><span class=\"o\">.</span><span class=\"n\">total</span><span class=\"p\">)</span>\n</pre>\n<h3>Inbox fetch</h3>\n<p>fetch inbox messages</p>\n<pre><span class=\"n\">messages</span><span class=\"p\">,</span> <span class=\"n\">pagination_info</span> <span class=\"o\">=</span> <span class=\"n\">sms</span><span class=\"o\">.</span><span class=\"n\">fetch_inbox</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">message</span> <span class=\"ow\">in</span> <span class=\"n\">messages</span> <span class=\"p\">{</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Received message </span><span class=\"si\">%s</span><span class=\"s2\"> from number </span><span class=\"si\">%s</span><span class=\"s2\"> in line </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Pattern create</h3>\n<p>For sending messages with predefined pattern(e.g. verification codes, ...), you hav to create a pattern. a pattern at least have a parameter. parameters defined with <code>%param_name%</code>.</p>\n<pre><span class=\"n\">pattern</span> <span class=\"o\">=</span> <span class=\"n\">sms</span><span class=\"o\">.</span><span class=\"n\">create_pattern</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"%name</span><span class=\"si\">% i</span><span class=\"s2\">s awesome\"</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"o\">.</span><span class=\"n\">code</span><span class=\"p\">)</span>\n</pre>\n<h3>Send with pattern</h3>\n<pre><span class=\"n\">pattern_values</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"IPPANEL\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">bulk_id</span> <span class=\"o\">=</span> <span class=\"n\">sms</span><span class=\"o\">.</span><span class=\"n\">send_pattern</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"t2cfmnyo0c\"</span><span class=\"p\">,</span>    <span class=\"c1\"># pattern code</span>\n    <span class=\"s2\">\"+9810001\"</span><span class=\"p\">,</span>      <span class=\"c1\"># originator</span>\n    <span class=\"s2\">\"98912xxxxxxx\"</span><span class=\"p\">,</span>  <span class=\"c1\"># recipient</span>\n    <span class=\"n\">pattern_values</span><span class=\"p\">,</span>  <span class=\"c1\"># pattern values</span>\n<span class=\"p\">)</span>\n</pre>\n<h3>Error checking</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ippanel</span> <span class=\"kn\">import</span> <span class=\"n\">HTTPError</span><span class=\"p\">,</span> <span class=\"n\">Error</span><span class=\"p\">,</span> <span class=\"n\">ResponseCode</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">bulk_id</span> <span class=\"o\">=</span> <span class=\"n\">sms</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s2\">\"9810001\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"98912xxxxx\"</span><span class=\"p\">],</span> <span class=\"s2\">\"ippanel is awesome\"</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">Error</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span> <span class=\"c1\"># ippanel sms error</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Error handled =&gt; code: </span><span class=\"si\">%s</span><span class=\"s2\">, message: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">code</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">))</span>\n    <span class=\"k\">if</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">code</span> <span class=\"o\">==</span> <span class=\"n\">ResponseCode</span><span class=\"o\">.</span><span class=\"n\">ErrUnprocessableEntity</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">field</span> <span class=\"ow\">in</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Field: </span><span class=\"si\">%s</span><span class=\"s2\"> , Errors: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">[</span><span class=\"n\">field</span><span class=\"p\">]))</span>\n<span class=\"k\">except</span> <span class=\"n\">HTTPError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span> <span class=\"c1\"># http error like network error, not found, ...</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Error handled =&gt; code: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">))</span>\n</pre>\n\n          </div>"}, "last_serial": 6653120, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "49e2e02fc4ed59f0238c78deb696e488", "sha256": "9c224c985d028ff7a1f5cb624737eddbd53e3b713843967b3aa37d129466a2c9"}, "downloads": -1, "filename": "ippanel-1.1.0.tar.gz", "has_sig": false, "md5_digest": "49e2e02fc4ed59f0238c78deb696e488", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6834, "upload_time": "2020-02-18T13:00:05", "upload_time_iso_8601": "2020-02-18T13:00:05.071891Z", "url": "https://files.pythonhosted.org/packages/5b/b4/7d6a42fe9ec033da2c9750ad548fb4c4edd5c92720fff25dc21b2a613b26/ippanel-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "49e2e02fc4ed59f0238c78deb696e488", "sha256": "9c224c985d028ff7a1f5cb624737eddbd53e3b713843967b3aa37d129466a2c9"}, "downloads": -1, "filename": "ippanel-1.1.0.tar.gz", "has_sig": false, "md5_digest": "49e2e02fc4ed59f0238c78deb696e488", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6834, "upload_time": "2020-02-18T13:00:05", "upload_time_iso_8601": "2020-02-18T13:00:05.071891Z", "url": "https://files.pythonhosted.org/packages/5b/b4/7d6a42fe9ec033da2c9750ad548fb4c4edd5c92720fff25dc21b2a613b26/ippanel-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:35 2020"}