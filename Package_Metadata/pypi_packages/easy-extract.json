{"info": {"author": "Fantomas42", "author_email": "fantomas42@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: System Administrators", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Topic :: Utilities"], "description": "Easy-extract\n============\n\n.. contents::\n\nEasy-extract try to be a simple and universal multipart unarchiver,\nit is designed to extract and repair collections of many archives format\n*(rar, zip, xtm)* in one command line.\n\nVery usefull when you grab on Usenet and you have many archives in differents directory.\n\nInstallation\n------------\n\nBefore you start using easy-extract, you must install these softwares :\n\n* unrar-free\n* 7zip-full\n* par2\n\nThen use easy_install: ::\n\n  $ easy_install easy-extract\n\nUsage\n-----\n\nUsage: easy_extract [options] [directory]...\n\nOptions:\n  --version          show program's version number and exit\n  -h, --help         show this help message and exit\n  -f, --force        Do not prompt confirmation message\n  -n, --not-repair   Do not try to repair archives on errors\n  -c, --repair-only  Do only a check and repair operation\n  -r, --recursive    Find archives recursively\n  -k, --keep         Do not delete archives on success\n  -x, --no-index     Do not index the extracted files\n\nSimply run **easy_extract** in the directory where the collections are: ::\n\n  $ easy_extract\n\nTo find archives recursively in a directory: ::\n\n  $ easy_extract -r my_archives/\n\nAll the archives found will be prompted, then confirm the extraction.\nGo make a coffee, the script will do the rest !\nEasy_extract will handle the repair if the archives are corrupted.\n\nCode\n----\n\nIf you want to reuse the code to find archives you can do something like that : ::\n\n  >>> from easy_extract.archive_finder import ArchiveFinder\n  >>> from easy_extract.archives.rar import RarArchive\n  >>> archive_finder = ArchiveFinder('./my_path/', recursive=True, archive_classes=[RarArchive,])\n  >>> archive_finder.archives\n  ... [<easy_extract.archives.rar.RarArchive object at 0x...>, <easy_extract.archives.rar.RarArchive object at 0x...>]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Fantomas42/easy-extract", "keywords": "extract,rar,zip,xtm,hjsplit", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "easy-extract", "package_url": "https://pypi.org/project/easy-extract/", "platform": "any", "project_url": "https://pypi.org/project/easy-extract/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Fantomas42/easy-extract"}, "release_url": "https://pypi.org/project/easy-extract/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "Easy extraction of archives collections", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#installation\" id=\"id1\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" id=\"id2\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#code\" id=\"id3\" rel=\"nofollow\">Code</a></li>\n</ul>\n</div>\n<p>Easy-extract try to be a simple and universal multipart unarchiver,\nit is designed to extract and repair collections of many archives format\n<em>(rar, zip, xtm)</em> in one command line.</p>\n<p>Very usefull when you grab on Usenet and you have many archives in differents directory.</p>\n<div id=\"installation\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Installation</a></h2>\n<p>Before you start using easy-extract, you must install these softwares :</p>\n<ul>\n<li>unrar-free</li>\n<li>7zip-full</li>\n<li>par2</li>\n</ul>\n<p>Then use easy_install:</p>\n<pre>$ easy_install easy-extract\n</pre>\n</div>\n<div id=\"usage\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Usage</a></h2>\n<p>Usage: easy_extract [options] [directory]\u2026</p>\n<dl>\n<dt>Options:</dt>\n<dd><table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">--version</span></kbd></td>\n<td>show program\u2019s version number and exit</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-h</span>, <span class=\"option\">--help</span></kbd></td>\n<td>show this help message and exit</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-f</span>, <span class=\"option\">--force</span></kbd></td>\n<td>Do not prompt confirmation message</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-n</span>, <span class=\"option\">--not-repair</span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Do not try to repair archives on errors</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-c</span>, <span class=\"option\">--repair-only</span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Do only a check and repair operation</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-r</span>, <span class=\"option\">--recursive</span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Find archives recursively</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-k</span>, <span class=\"option\">--keep</span></kbd></td>\n<td>Do not delete archives on success</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-x</span>, <span class=\"option\">--no-index</span></kbd></td>\n<td>Do not index the extracted files</td></tr>\n</tbody>\n</table>\n</dd>\n</dl>\n<p>Simply run <strong>easy_extract</strong> in the directory where the collections are:</p>\n<pre>$ easy_extract\n</pre>\n<p>To find archives recursively in a directory:</p>\n<pre>$ easy_extract -r my_archives/\n</pre>\n<p>All the archives found will be prompted, then confirm the extraction.\nGo make a coffee, the script will do the rest !\nEasy_extract will handle the repair if the archives are corrupted.</p>\n</div>\n<div id=\"code\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Code</a></h2>\n<p>If you want to reuse the code to find archives you can do something like that :</p>\n<pre>&gt;&gt;&gt; from easy_extract.archive_finder import ArchiveFinder\n&gt;&gt;&gt; from easy_extract.archives.rar import RarArchive\n&gt;&gt;&gt; archive_finder = ArchiveFinder('./my_path/', recursive=True, archive_classes=[RarArchive,])\n&gt;&gt;&gt; archive_finder.archives\n... [&lt;easy_extract.archives.rar.RarArchive object at 0x...&gt;, &lt;easy_extract.archives.rar.RarArchive object at 0x...&gt;]\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2170807, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "1134a8bfe5442af08d9d767dbfbc5df9", "sha256": "32438e8d0a7db69fec447482824bca441fa7375fec942af3b16737f01882b262"}, "downloads": -1, "filename": "easy_extract-0.1.0-py2.6.egg", "has_sig": false, "md5_digest": "1134a8bfe5442af08d9d767dbfbc5df9", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 12500, "upload_time": "2010-01-21T14:32:57", "upload_time_iso_8601": "2010-01-21T14:32:57.272312Z", "url": "https://files.pythonhosted.org/packages/20/48/7ecc59e43f375aeb171c63004df48cd755c4fb7c6cab4a383a204010a698/easy_extract-0.1.0-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e79c47bf8f0bf109fe3bee7527430800", "sha256": "d9335819eab2d772324c9ac6a61ae6903b1042cb7984f526258280a77662bff1"}, "downloads": -1, "filename": "easy-extract-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e79c47bf8f0bf109fe3bee7527430800", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9407, "upload_time": "2010-01-21T14:21:59", "upload_time_iso_8601": "2010-01-21T14:21:59.003751Z", "url": "https://files.pythonhosted.org/packages/f6/3a/98b264f7dbbb50d9932593ff49d77aa1be8ea1724867f8d8d1c6ec9aadbe/easy-extract-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "68735458997b90b5addd85c9919eaa46", "sha256": "eb81478da68be009444ca6f1f1382977bb1040f49e61938f19d6610e77843a1e"}, "downloads": -1, "filename": "easy_extract-0.1.1-py2.6.egg", "has_sig": false, "md5_digest": "68735458997b90b5addd85c9919eaa46", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 14178, "upload_time": "2010-09-11T19:36:37", "upload_time_iso_8601": "2010-09-11T19:36:37.256780Z", "url": "https://files.pythonhosted.org/packages/c7/6c/68b7cae593637c42c64e56abe57d4b9ad10a1c4aacaeb7619798cc2f4479/easy_extract-0.1.1-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7efeaea5a270eee3476f8a78b8058be6", "sha256": "a125f66566c96103a35abc39cc0985e82e55cb6133b0f54c1271e2a0f7e9b0a5"}, "downloads": -1, "filename": "easy-extract-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7efeaea5a270eee3476f8a78b8058be6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10228, "upload_time": "2010-09-11T19:36:36", "upload_time_iso_8601": "2010-09-11T19:36:36.604320Z", "url": "https://files.pythonhosted.org/packages/3d/41/b90c6c37e8fe40a71455f77756f82f0d36ec2e9dac7c977eb7fd84474157/easy-extract-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "9b5d7366b501dfb9da06e57cc0339ad5", "sha256": "6e3482fa2ed30fbc47813f313255b39d30100f82073f099da89c7deb5b655317"}, "downloads": -1, "filename": "easy-extract-0.1.2.tar.gz", "has_sig": false, "md5_digest": "9b5d7366b501dfb9da06e57cc0339ad5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6812, "upload_time": "2016-06-16T13:10:43", "upload_time_iso_8601": "2016-06-16T13:10:43.461448Z", "url": "https://files.pythonhosted.org/packages/27/f3/02671eea32541336eaf371b00531cbb73db3c7362645fc713be41cdbdd4e/easy-extract-0.1.2.tar.gz", "yanked": false}], "0.1.b": [{"comment_text": "", "digests": {"md5": "74014f7f261c9ace9781cd7f068d9c20", "sha256": "e5a54ec617119ff32db58a757fbe6de48b91a66a6c0ac37d31a435a1cf403b27"}, "downloads": -1, "filename": "easy-extract-0.1.b.tar.gz", "has_sig": false, "md5_digest": "74014f7f261c9ace9781cd7f068d9c20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9329, "upload_time": "2010-01-20T10:41:18", "upload_time_iso_8601": "2010-01-20T10:41:18.322180Z", "url": "https://files.pythonhosted.org/packages/5a/23/ff5486ef693d531cc15ae6601bff1f506f22049344dad5e74f371fba217c/easy-extract-0.1.b.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9b5d7366b501dfb9da06e57cc0339ad5", "sha256": "6e3482fa2ed30fbc47813f313255b39d30100f82073f099da89c7deb5b655317"}, "downloads": -1, "filename": "easy-extract-0.1.2.tar.gz", "has_sig": false, "md5_digest": "9b5d7366b501dfb9da06e57cc0339ad5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6812, "upload_time": "2016-06-16T13:10:43", "upload_time_iso_8601": "2016-06-16T13:10:43.461448Z", "url": "https://files.pythonhosted.org/packages/27/f3/02671eea32541336eaf371b00531cbb73db3c7362645fc713be41cdbdd4e/easy-extract-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:23 2020"}