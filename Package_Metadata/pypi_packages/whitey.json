{"info": {"author": "Rich Wareham", "author_email": "rjw57@cantab.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console :: Curses", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Topic :: Multimedia :: Video", "Topic :: Utilities"], "description": "``yt``: a command-line YouTube client\n=====================================\n\n``yt`` is a command-line front-end to YouTube which allows you to browse YouTube\nvideos and play them directly from the command-line. It uses ``youtube-dl`` and\n``mplayer`` or ``omxplayer`` to actually *play* the videos.\n\nThe combination of a text based interface and ``omxplayer`` makes ``yt`` a great\nYouTube client for the Raspberry Pi.\n\nUsage\n-----\n\nLaunch using ``mplayer`` with::\n\n    yt\n\nor, if you're using a Raspberry Pi, using ``omxplayer``::\n\n    pi-yt\n\nInstallation\n------------\n\nFrom PyPi (easier!)\n~~~~~~~~~~~~~~~~~~~\n\n::\n\n    # Install dependancies\n    sudo apt-get install youtube-dl\n    # Ensure using latest version of youtube-dl to keep up with YouTube API changes\n    sudo youtube-dl -U\n\n    # Install from PyPi\n    sudo apt-get install python-setuptools\n    sudo easy_install whitey\n\nFrom GitHub\n~~~~~~~~~~~\n\n::\n\n    # Install dependancies\n    sudo apt-get install youtube-dl\n    # Ensure using latest version of youtube-dl to keep up with YouTube API changes\n    sudo youtube-dl -U\n\n    # Install from GitHub\n    sudo apt-get install python-setuptools\n    git checkout git@github.com:rjw57/yt.git\n    cd yt\n    sudo python setup.py install\n\nOne line install for the Raspberry Pi\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    curl -L https://github.com/rjw57/yt/raw/master/tools/install-pi.sh | sh\n                        \nDependancies\n------------\n\n- youtube-dl\n- mplayer or omxplayer\n                        \nCommon problems\n---------------\n\nVideos don't play when selected in interface\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nMake sure you have the latest version of youtube-dl. youtube-dl has a self update\nmechanism::\n\n    sudo youtube-dl -U\n\nOmxplayer starts and terminates without playing video\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor high quality videos the default memory allocation on the Raspberry Pi doesn't\nprovide enough memory to the GPU.\n\nThe default 192M ARM, 64M GPU split can be changed to a 128M ARM, 128M GPU split\nusing raspi-config.\n\n::\n\n    sudo raspi-config\n    # Select memory-split\n    # Allocate 128M to the GPU\n        \nSee http://elinux.org/RPi_Advanced_Setup for more information.\n\nGetting more help\n~~~~~~~~~~~~~~~~~\n\nSee https://github.com/rg3/youtube-dl and https://github.com/huceke/omxplayer for\nmore detailed help.\n\nContributors\n------------\n\n- Rich Wareham\n    - Created ``yt``.\n\n- Calum J. Eadie\n    - Added OMXPlayer support and pi-yt entry point.\n\nCredits\n-------\n\n- `Distribute`_\n- `Buildout`_\n- `modern-package-template`_\n- `youtube-dl`_\n- `mplayer`_\n- `Omxplayer`_\n- Mark Baldridges's `\"HOWTO: YouTube on the Raspberry Pi - sans X)\"`_\n\n.. _Buildout: http://www.buildout.org/\n.. _Distribute: http://pypi.python.org/pypi/distribute\n.. _`modern-package-template`: http://pypi.python.org/pypi/modern-package-template\n.. _`youtube-dl`: http://rg3.github.com/youtube-dl/\n.. _`mplayer`: http://www.mplayerhq.hu/\n.. _`Omxplayer`: https://github.com/huceke/omxplayer\n.. _`\"HOWTO: YouTube on the Raspberry Pi - sans X)\"`: http://www.raspberrypi.org/phpBB3/viewtopic.php?p=97710&sid=fa3272a732353dc501cb96d38453b97c#p97710\n\n\n.. This is your project NEWS file which will contain the release notes.\n.. Example: http://www.python.org/download/releases/2.6/NEWS.txt\n.. The content of this file, along with README.rst, will appear in your\n.. project's PyPI page.\n\nNews\n====\n\n0.4 - 27/00/2013\n----------------------\n\n* Clarify licensing.\n* Add Trove classifiers in setup.py.\n\n0.3 - 21/02/2013\n----------------------\n\n* Added pi-yt entry point (Calum Eadie)\n\n\n0.2 - 29/10/2012\n----------------\n\n* Added command-line configuration of media player and OMXPlayer support (Calum Eadie)\n\n0.1 - 29/02/2012\n----------------\n\n* Initial version", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "", "license": "Apache-2.0", "maintainer": null, "maintainer_email": null, "name": "whitey", "package_url": "https://pypi.org/project/whitey/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/whitey/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/whitey/0.4/", "requires_dist": null, "requires_python": null, "summary": "Command-line YouTube client", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"yt-a-command-line-youtube-client\">\n<h2><tt>yt</tt>: a command-line YouTube client</h2>\n<p><tt>yt</tt> is a command-line front-end to YouTube which allows you to browse YouTube\nvideos and play them directly from the command-line. It uses <tt><span class=\"pre\">youtube-dl</span></tt> and\n<tt>mplayer</tt> or <tt>omxplayer</tt> to actually <em>play</em> the videos.</p>\n<p>The combination of a text based interface and <tt>omxplayer</tt> makes <tt>yt</tt> a great\nYouTube client for the Raspberry Pi.</p>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Launch using <tt>mplayer</tt> with:</p>\n<pre>yt\n</pre>\n<p>or, if you\u2019re using a Raspberry Pi, using <tt>omxplayer</tt>:</p>\n<pre>pi-yt\n</pre>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<div id=\"from-pypi-easier\">\n<h4>From PyPi (easier!)</h4>\n<pre># Install dependancies\nsudo apt-get install youtube-dl\n# Ensure using latest version of youtube-dl to keep up with YouTube API changes\nsudo youtube-dl -U\n\n# Install from PyPi\nsudo apt-get install python-setuptools\nsudo easy_install whitey\n</pre>\n</div>\n<div id=\"from-github\">\n<h4>From GitHub</h4>\n<pre># Install dependancies\nsudo apt-get install youtube-dl\n# Ensure using latest version of youtube-dl to keep up with YouTube API changes\nsudo youtube-dl -U\n\n# Install from GitHub\nsudo apt-get install python-setuptools\ngit checkout git@github.com:rjw57/yt.git\ncd yt\nsudo python setup.py install\n</pre>\n</div>\n<div id=\"one-line-install-for-the-raspberry-pi\">\n<h4>One line install for the Raspberry Pi</h4>\n<pre>curl -L https://github.com/rjw57/yt/raw/master/tools/install-pi.sh | sh\n</pre>\n</div>\n</div>\n<div id=\"dependancies\">\n<h3>Dependancies</h3>\n<ul>\n<li>youtube-dl</li>\n<li>mplayer or omxplayer</li>\n</ul>\n</div>\n<div id=\"common-problems\">\n<h3>Common problems</h3>\n<div id=\"videos-don-t-play-when-selected-in-interface\">\n<h4>Videos don\u2019t play when selected in interface</h4>\n<p>Make sure you have the latest version of youtube-dl. youtube-dl has a self update\nmechanism:</p>\n<pre>sudo youtube-dl -U\n</pre>\n</div>\n<div id=\"omxplayer-starts-and-terminates-without-playing-video\">\n<h4>Omxplayer starts and terminates without playing video</h4>\n<p>For high quality videos the default memory allocation on the Raspberry Pi doesn\u2019t\nprovide enough memory to the GPU.</p>\n<p>The default 192M ARM, 64M GPU split can be changed to a 128M ARM, 128M GPU split\nusing raspi-config.</p>\n<pre>sudo raspi-config\n# Select memory-split\n# Allocate 128M to the GPU\n</pre>\n<p>See <a href=\"http://elinux.org/RPi_Advanced_Setup\" rel=\"nofollow\">http://elinux.org/RPi_Advanced_Setup</a> for more information.</p>\n</div>\n<div id=\"getting-more-help\">\n<h4>Getting more help</h4>\n<p>See <a href=\"https://github.com/rg3/youtube-dl\" rel=\"nofollow\">https://github.com/rg3/youtube-dl</a> and <a href=\"https://github.com/huceke/omxplayer\" rel=\"nofollow\">https://github.com/huceke/omxplayer</a> for\nmore detailed help.</p>\n</div>\n</div>\n<div id=\"contributors\">\n<h3>Contributors</h3>\n<ul>\n<li><dl>\n<dt>Rich Wareham</dt>\n<dd><ul>\n<li>Created <tt>yt</tt>.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Calum J. Eadie</dt>\n<dd><ul>\n<li>Added OMXPlayer support and pi-yt entry point.</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<ul>\n<li><a href=\"http://pypi.python.org/pypi/distribute\" rel=\"nofollow\">Distribute</a></li>\n<li><a href=\"http://www.buildout.org/\" rel=\"nofollow\">Buildout</a></li>\n<li><a href=\"http://pypi.python.org/pypi/modern-package-template\" rel=\"nofollow\">modern-package-template</a></li>\n<li><a href=\"http://rg3.github.com/youtube-dl/\" rel=\"nofollow\">youtube-dl</a></li>\n<li><a href=\"http://www.mplayerhq.hu/\" rel=\"nofollow\">mplayer</a></li>\n<li><a href=\"https://github.com/huceke/omxplayer\" rel=\"nofollow\">Omxplayer</a></li>\n<li>Mark Baldridges\u2019s <a href=\"http://www.raspberrypi.org/phpBB3/viewtopic.php?p=97710&amp;sid=fa3272a732353dc501cb96d38453b97c#p97710\" rel=\"nofollow\">\u201cHOWTO: YouTube on the Raspberry Pi - sans X)\u201d</a></li>\n</ul>\n</div>\n</div>\n<div id=\"news\">\n<h2>News</h2>\n<div id=\"id1\">\n<h3>0.4 - 27/00/2013</h3>\n<ul>\n<li>Clarify licensing.</li>\n<li>Add Trove classifiers in setup.py.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.3 - 21/02/2013</h3>\n<ul>\n<li>Added pi-yt entry point (Calum Eadie)</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.2 - 29/10/2012</h3>\n<ul>\n<li>Added command-line configuration of media player and OMXPlayer support (Calum Eadie)</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1 - 29/02/2012</h3>\n<ul>\n<li>Initial version</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 875467, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d246aec9dcbbf5e4d6deeb8961d2b1df", "sha256": "5e3a9bf18f68b7777995d0508ca61f7ac22e8a5dc0b2382907a63ab7f526d47b"}, "downloads": -1, "filename": "whitey-0.1.tar.gz", "has_sig": false, "md5_digest": "d246aec9dcbbf5e4d6deeb8961d2b1df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5726, "upload_time": "2012-02-29T01:12:38", "upload_time_iso_8601": "2012-02-29T01:12:38.503215Z", "url": "https://files.pythonhosted.org/packages/e8/56/a8e84c8ea0c120d82cc5cb72f3d5787809ef5e5db626b67c5dbe4315f620/whitey-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "5f2e7f0602698edb2cca10901b377580", "sha256": "b512d0d7a0ec6b09c80433d595472f15e905d48cf4c825a8f059558284ff6075"}, "downloads": -1, "filename": "whitey-0.2.tar.gz", "has_sig": false, "md5_digest": "5f2e7f0602698edb2cca10901b377580", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7217, "upload_time": "2012-10-29T10:13:30", "upload_time_iso_8601": "2012-10-29T10:13:30.884480Z", "url": "https://files.pythonhosted.org/packages/d1/a4/ba2a7274d2e800cc0f460e0fa0999395af70384e834a29b87af9f8db4f73/whitey-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "a5f0496ed740d8bb5f3092b0b6df95c9", "sha256": "e3f7165b115e8f37e5764d50140728dc628d1405f3df0032abfb92042de095f7"}, "downloads": -1, "filename": "whitey-0.3.tar.gz", "has_sig": false, "md5_digest": "a5f0496ed740d8bb5f3092b0b6df95c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7393, "upload_time": "2013-03-21T19:30:03", "upload_time_iso_8601": "2013-03-21T19:30:03.742375Z", "url": "https://files.pythonhosted.org/packages/38/74/7d32eec254dc16befe6cf7faf48a6e50b5deed6c4df9378504ad7850d9db/whitey-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "ba4d2d783c84aef345a11f4934ebe4fd", "sha256": "35c5cdf2e26a66f56259fc68a25ab63839e149a14ba059d22d0dae2e54d24aba"}, "downloads": -1, "filename": "whitey-0.4.tar.gz", "has_sig": false, "md5_digest": "ba4d2d783c84aef345a11f4934ebe4fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8927, "upload_time": "2013-09-27T17:06:11", "upload_time_iso_8601": "2013-09-27T17:06:11.491905Z", "url": "https://files.pythonhosted.org/packages/79/00/928acd252b1e4189c5204ca55e89e2efc74f16767e075f7ae162d2d9d9cc/whitey-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba4d2d783c84aef345a11f4934ebe4fd", "sha256": "35c5cdf2e26a66f56259fc68a25ab63839e149a14ba059d22d0dae2e54d24aba"}, "downloads": -1, "filename": "whitey-0.4.tar.gz", "has_sig": false, "md5_digest": "ba4d2d783c84aef345a11f4934ebe4fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8927, "upload_time": "2013-09-27T17:06:11", "upload_time_iso_8601": "2013-09-27T17:06:11.491905Z", "url": "https://files.pythonhosted.org/packages/79/00/928acd252b1e4189c5204ca55e89e2efc74f16767e075f7ae162d2d9d9cc/whitey-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:29:38 2020"}