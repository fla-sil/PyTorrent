{"info": {"author": "Marcos Duarte", "author_email": "duartexyz@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# [pyversions](https://pypi.org/project/pyversions/)\n\nGet versions of imported modules in current session: pyversions.versions()\n\nDesigned particularly to work within a Jupyter notebook.  \nCall this function in a cell just after all modules/functions are imported.  \nThis function uses Python inspect module to get the caller's global namespace; it should work, if not, pass globals() as a parameter.\n\n## Installation\n\n```bash\npip install pyversions\n```\n\nOr\n\n```bash\nconda install -c duartexyz pyversions\n```\n\n## Examples\n\n```python\n>>> import pyversions\n>>> vs = pyversions.versions()\n\n>>> from pyversions import versions\n>>> versions();  # semicolon to avoid printing information twice\n```\n\n- [In a Jupyter notebook](https://github.com/demotu/pyversions/blob/master/docs/pyversions.ipynb)\n\n## Help\n\n```python\n\"\"\"\nGet versions of imported modules in current session: pyversions.versions()\n\nParameters\n----------\nglbs : globals(), optional (default=None)\n    Get all the imported modules from the passed globals() namespace.\nshow : bool, optional (default=True)\n    Whether to print information about environment and imported modules.\n\nReturns\n-------\ninfo : list of strings\n    list of strings with information about the current environment and\n    imported modules.\n\nNotes\n-----\nDesigned particularly to work within a Jupyter notebook.\nCall this function in a cell just after all modules/functions are imported.\nThis function uses Python inspect module to get the caller's global\nnamespace; it should work, if not, pass globals() as a parameter.\n\nBased on https://stackoverflow.com/questions/40428931\n\nExamples\n--------\n>>> import pyversions\n>>> vs = pyversions.versions()\n\n>>> from pyversions import versions\n>>> versions();  # semicolon to avoid printing information twice\n\n[In a Jupyter notebook](https://github.com/demotu/pyversions/blob/master/docs/pyversions.ipynb)  \n\nVersion history\n---------------\n'0.0.1' :\n    The first version\n\n\"\"\"\n```\n\n## How to cite this work\n\nHere is a suggestion to cite this GitHub repository:\n\n> Duarte, M. (2020) pyversions: A Python module to get versions of imported modules in current session. GitHub repository, <https://github.com/demotu/pyversions>.\n\nAnd a possible BibTeX entry:\n\n```tex\n@misc{Duarte2020,  \n    author = {Duarte, M.},\n    title = {pyversions: A Python module to get versions of imported modules in current session},  \n    year = {2020},  \n    publisher = {GitHub},  \n    journal = {GitHub repository},  \n    howpublished = {\\url{https://github.com/demotu/pyversions}}  \n}\n```\n\n## License\n\nThe non-software content of this project is licensed under a [Creative Commons Attribution 4.0 International License](http://creativecommons.org/licenses/by/4.0/), and the software code is licensed under the [MIT license](https://opensource.org/licenses/mit-license.php).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/demotu/pyversions", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyversions", "package_url": "https://pypi.org/project/pyversions/", "platform": "", "project_url": "https://pypi.org/project/pyversions/", "project_urls": {"Homepage": "https://github.com/demotu/pyversions"}, "release_url": "https://pypi.org/project/pyversions/0.0.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Get versions of all imported modules in current session", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><a href=\"https://pypi.org/project/pyversions/\" rel=\"nofollow\">pyversions</a></h1>\n<p>Get versions of imported modules in current session: pyversions.versions()</p>\n<p>Designed particularly to work within a Jupyter notebook.<br>\nCall this function in a cell just after all modules/functions are imported.<br>\nThis function uses Python inspect module to get the caller's global namespace; it should work, if not, pass globals() as a parameter.</p>\n<h2>Installation</h2>\n<pre>pip install pyversions\n</pre>\n<p>Or</p>\n<pre>conda install -c duartexyz pyversions\n</pre>\n<h2>Examples</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">pyversions</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">vs</span> <span class=\"o\">=</span> <span class=\"n\">pyversions</span><span class=\"o\">.</span><span class=\"n\">versions</span><span class=\"p\">()</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyversions</span> <span class=\"kn\">import</span> <span class=\"n\">versions</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">versions</span><span class=\"p\">();</span>  <span class=\"c1\"># semicolon to avoid printing information twice</span>\n</pre>\n<ul>\n<li><a href=\"https://github.com/demotu/pyversions/blob/master/docs/pyversions.ipynb\" rel=\"nofollow\">In a Jupyter notebook</a></li>\n</ul>\n<h2>Help</h2>\n<pre><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">Get versions of imported modules in current session: pyversions.versions()</span>\n\n<span class=\"sd\">Parameters</span>\n<span class=\"sd\">----------</span>\n<span class=\"sd\">glbs : globals(), optional (default=None)</span>\n<span class=\"sd\">    Get all the imported modules from the passed globals() namespace.</span>\n<span class=\"sd\">show : bool, optional (default=True)</span>\n<span class=\"sd\">    Whether to print information about environment and imported modules.</span>\n\n<span class=\"sd\">Returns</span>\n<span class=\"sd\">-------</span>\n<span class=\"sd\">info : list of strings</span>\n<span class=\"sd\">    list of strings with information about the current environment and</span>\n<span class=\"sd\">    imported modules.</span>\n\n<span class=\"sd\">Notes</span>\n<span class=\"sd\">-----</span>\n<span class=\"sd\">Designed particularly to work within a Jupyter notebook.</span>\n<span class=\"sd\">Call this function in a cell just after all modules/functions are imported.</span>\n<span class=\"sd\">This function uses Python inspect module to get the caller's global</span>\n<span class=\"sd\">namespace; it should work, if not, pass globals() as a parameter.</span>\n\n<span class=\"sd\">Based on https://stackoverflow.com/questions/40428931</span>\n\n<span class=\"sd\">Examples</span>\n<span class=\"sd\">--------</span>\n<span class=\"sd\">&gt;&gt;&gt; import pyversions</span>\n<span class=\"sd\">&gt;&gt;&gt; vs = pyversions.versions()</span>\n\n<span class=\"sd\">&gt;&gt;&gt; from pyversions import versions</span>\n<span class=\"sd\">&gt;&gt;&gt; versions();  # semicolon to avoid printing information twice</span>\n\n<span class=\"sd\">[In a Jupyter notebook](https://github.com/demotu/pyversions/blob/master/docs/pyversions.ipynb)  </span>\n\n<span class=\"sd\">Version history</span>\n<span class=\"sd\">---------------</span>\n<span class=\"sd\">'0.0.1' :</span>\n<span class=\"sd\">    The first version</span>\n\n<span class=\"sd\">\"\"\"</span>\n</pre>\n<h2>How to cite this work</h2>\n<p>Here is a suggestion to cite this GitHub repository:</p>\n<blockquote>\n<p>Duarte, M. (2020) pyversions: A Python module to get versions of imported modules in current session. GitHub repository, <a href=\"https://github.com/demotu/pyversions\" rel=\"nofollow\">https://github.com/demotu/pyversions</a>.</p>\n</blockquote>\n<p>And a possible BibTeX entry:</p>\n<pre>@misc<span class=\"nb\">{</span>Duarte2020,  \n    author = <span class=\"nb\">{</span>Duarte, M.<span class=\"nb\">}</span>,\n    title = <span class=\"nb\">{</span>pyversions: A Python module to get versions of imported modules in current session<span class=\"nb\">}</span>,  \n    year = <span class=\"nb\">{</span>2020<span class=\"nb\">}</span>,  \n    publisher = <span class=\"nb\">{</span>GitHub<span class=\"nb\">}</span>,  \n    journal = <span class=\"nb\">{</span>GitHub repository<span class=\"nb\">}</span>,  \n    howpublished = <span class=\"nb\">{</span><span class=\"k\">\\url</span><span class=\"nb\">{</span>https://github.com/demotu/pyversions<span class=\"nb\">}}</span>  \n<span class=\"nb\">}</span>\n</pre>\n<h2>License</h2>\n<p>The non-software content of this project is licensed under a <a href=\"http://creativecommons.org/licenses/by/4.0/\" rel=\"nofollow\">Creative Commons Attribution 4.0 International License</a>, and the software code is licensed under the <a href=\"https://opensource.org/licenses/mit-license.php\" rel=\"nofollow\">MIT license</a>.</p>\n\n          </div>"}, "last_serial": 6908466, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "bba466ff3d7c4136dad8a10f735d5e75", "sha256": "f3dcee187029189ec5c21c52d700a57e2ab645d6587ffa74ab68d158034cbe27"}, "downloads": -1, "filename": "pyversions-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "bba466ff3d7c4136dad8a10f735d5e75", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5417, "upload_time": "2020-03-29T19:50:49", "upload_time_iso_8601": "2020-03-29T19:50:49.957599Z", "url": "https://files.pythonhosted.org/packages/cd/11/0c80e49733d851518e288740125ced5896ea6899acc78bb132cc0d60aa94/pyversions-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ee1fb3c30b2e528dae458f391573d01", "sha256": "a04c22b3d88834a01fbc86f25068e64a2a772175c7e79cc19167ee7deaf85191"}, "downloads": -1, "filename": "pyversions-0.0.3.tar.gz", "has_sig": false, "md5_digest": "1ee1fb3c30b2e528dae458f391573d01", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3933, "upload_time": "2020-03-29T19:50:51", "upload_time_iso_8601": "2020-03-29T19:50:51.207411Z", "url": "https://files.pythonhosted.org/packages/ce/43/a28ed76376b3531e19920109e28f0bd7e68f740e3d9f56894a385c5e0ce8/pyversions-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bba466ff3d7c4136dad8a10f735d5e75", "sha256": "f3dcee187029189ec5c21c52d700a57e2ab645d6587ffa74ab68d158034cbe27"}, "downloads": -1, "filename": "pyversions-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "bba466ff3d7c4136dad8a10f735d5e75", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5417, "upload_time": "2020-03-29T19:50:49", "upload_time_iso_8601": "2020-03-29T19:50:49.957599Z", "url": "https://files.pythonhosted.org/packages/cd/11/0c80e49733d851518e288740125ced5896ea6899acc78bb132cc0d60aa94/pyversions-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ee1fb3c30b2e528dae458f391573d01", "sha256": "a04c22b3d88834a01fbc86f25068e64a2a772175c7e79cc19167ee7deaf85191"}, "downloads": -1, "filename": "pyversions-0.0.3.tar.gz", "has_sig": false, "md5_digest": "1ee1fb3c30b2e528dae458f391573d01", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3933, "upload_time": "2020-03-29T19:50:51", "upload_time_iso_8601": "2020-03-29T19:50:51.207411Z", "url": "https://files.pythonhosted.org/packages/ce/43/a28ed76376b3531e19920109e28f0bd7e68f740e3d9f56894a385c5e0ce8/pyversions-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:04 2020"}