{"info": {"author": "Huigang Chen, Totte Harinen, Jeong-Yoon Lee, Mike Yung, Zhenyu Zhao", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "<div align=\"center\">\n  <a href=\"https://github.com/uber/causalml\"><img width=\"380px\" height=\"140px\" src=\"https://raw.githubusercontent.com/uber/causalml/master/docs/_static/img/causalml_logo.png\"></a>\n</div>\n\n------------------------------------------------------\n\n[![PyPI Version](https://badge.fury.io/py/causalml.svg)](https://pypi.org/project/causalml/)\n[![Build Status](https://travis-ci.com/uber/causalml.svg?token=t7jFKh1sKGtbqHWp2sGn&branch=master)](https://travis-ci.com/uber/causalml)\n[![Documentation Status](https://readthedocs.org/projects/causalml/badge/?version=latest)](http://causalml.readthedocs.io/en/latest/?badge=latest)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/3015/badge)](https://bestpractices.coreinfrastructure.org/projects/3015)\n\n\n# Disclaimer\nThis project is stable and being incubated for long-term support. It may contain new experimental code, for which APIs are subject to change.\n\n# Causal ML: A Python Package for Uplift Modeling and Causal Inference with ML\n\n**Causal ML** is a Python package that provides a suite of uplift modeling and causal inference methods using machine learning algorithms based on recent\nresearch. It provides a standard interface that allows user to estimate the Conditional Average Treatment Effect (CATE) or Individual Treatment\n Effect (ITE) from experimental or observational data. Essentially, it estimates the causal impact of intervention `T` on outcome `Y` for users\n with observed features `X`, without strong assumptions on the model form. Typical use cases include\n\n* **Campaign targeting optimization**: An important lever to increase ROI in an advertising campaign is to target the ad to the set of customers who will have a favorable response in a given KPI such as engagement or sales. CATE identifies these customers by estimating the effect of the KPI from ad exposure at the individual level from A/B experiment or historical observational data.\n\n* **Personalized engagement**: A company has multiple options to interact with its customers such as different product choices in up-sell or messaging channels for communications. One can use CATE to estimate the heterogeneous treatment effect for each customer and treatment option combination for an optimal personalized recommendation system.\n\nThe package currently supports the following methods\n\n* **Tree-based algorithms**\n    * Uplift tree/random forests on KL divergence, Euclidean Distance, and Chi-Square\n    * Uplift tree/random forests on Contextual Treatment Selection\n* **Meta-learner algorithms**\n    * S-learner\n    * T-learner\n    * X-learner\n    * R-learner\n\n\n# Installation\n\n## Prerequisites\n\nInstall dependencies:\n```\n$ pip install -r requirements.txt\n```\n\nInstall from pip:\n\n```\n$ pip install causalml\n```\n\nInstall from source:\n\n```\n$ git clone https://github.com/uber/causalml.git\n$ cd causalml\n$ python setup.py build_ext --inplace\n$ python setup.py install\n```\n\n\n# Quick Start\n\n## Average Treatment Effect Estimation with S, T, X, and R Learners\n\n```python\nfrom causalml.inference.meta import LRSRegressor\nfrom causalml.inference.meta import XGBTRegressor, MLPTRegressor\nfrom causalml.inference.meta import BaseXRegressor\nfrom causalml.inference.meta import BaseRRegressor\nfrom xgboost import XGBRegressor\nfrom causalml.dataset import synthetic_data\n\ny, X, treatment, _, _, e = synthetic_data(mode=1, n=1000, p=5, sigma=1.0)\n\nlr = LRSRegressor()\nte, lb, ub = lr.estimate_ate(X, treatment, y)\nprint('Average Treatment Effect (Linear Regression): {:.2f} ({:.2f}, {:.2f})'.format(te[0], lb[0], ub[0]))\n\nxg = XGBTRegressor(random_state=42)\nte, lb, ub = xg.estimate_ate(X, treatment, y)\nprint('Average Treatment Effect (XGBoost): {:.2f} ({:.2f}, {:.2f})'.format(te[0], lb[0], ub[0]))\n\nnn = MLPTRegressor(hidden_layer_sizes=(10, 10),\n                 learning_rate_init=.1,\n                 early_stopping=True,\n                 random_state=42)\nte, lb, ub = nn.estimate_ate(X, treatment, y)\nprint('Average Treatment Effect (Neural Network (MLP)): {:.2f} ({:.2f}, {:.2f})'.format(te[0], lb[0], ub[0]))\n\nxl = BaseXRegressor(learner=XGBRegressor(random_state=42))\nte, lb, ub = xl.estimate_ate(X, e, treatment, y)\nprint('Average Treatment Effect (BaseXRegressor using XGBoost): {:.2f} ({:.2f}, {:.2f})'.format(te[0], lb[0], ub[0]))\n\nrl = BaseRRegressor(learner=XGBRegressor(random_state=42))\nte, lb, ub =  rl.estimate_ate(X=X, p=e, treatment=treatment, y=y)\nprint('Average Treatment Effect (BaseRRegressor using XGBoost): {:.2f} ({:.2f}, {:.2f})'.format(te[0], lb[0], ub[0]))\n```\n\nSee the [Meta-learner example notebook](https://github.com/uber/causalml/blob/master/examples/meta_learners_with_synthetic_data.ipynb) for details.\n\n\n## Interpretable Causal ML\n\nCausal ML provides methods to interpret the treatment effect models trained as follows:\n\n### Meta Learner Feature Importances\n\n```python\nfrom causalml.inference.meta import BaseSRegressor, BaseTRegressor, BaseXRegressor, BaseRRegressor\n\nslearner = BaseSRegressor(LGBMRegressor(), control_name='control')\nslearner.estimate_ate(X, w_multi, y)\nslearner_tau = slearner.fit_predict(X, w_multi, y)\n\nmodel_tau_feature = RandomForestRegressor()  # specify model for model_tau_feature\n\nslearner.get_importance(X=X, tau=slearner_tau, model_tau_feature=model_tau_feature,\n                        normalize=True, method='auto', features=feature_names)\n\n# Using the feature_importances_ method in the base learner (LGBMRegressor() in this example)\nslearner.plot_importance(X=X, tau=slearner_tau, normalize=True, method='auto')\n\n# Using eli5's PermutationImportance\nslearner.plot_importance(X=X, tau=slearner_tau, normalize=True, method='permutation')\n\n# Using SHAP\nshap_slearner = slearner.get_shap_values(X=X, tau=slearner_tau)\n\n# Plot shap values without specifying shap_dict\nslearner.plot_shap_values(X=X, tau=slearner_tau)\n\n# Plot shap values WITH specifying shap_dict\nslearner.plot_shap_values(shap_dict=shap_slearner)\n\n# interaction_idx set to 'auto' (searches for feature with greatest approximate interaction)\nslearner.plot_shap_dependence(treatment_group='treatment_A',\n                              feature_idx=1,\n                              X=X,\n                              tau=slearner_tau,\n                              interaction_idx='auto')\n```\n<div align=\"center\">\n  <img width=\"629px\" height=\"618px\" src=\"https://raw.githubusercontent.com/uber/causalml/master/docs/_static/img/shap_vis.png\">\n</div>\n\nSee the [feature interpretations example notebook](https://github.com/uber/causalml/blob/master/examples/feature_interpretations_example.ipynb) for details.\n\n### Uplift Tree Visualization\n\n```python\nfrom IPython.display import Image\nfrom causalml.inference.tree import UpliftTreeClassifier, UpliftRandomForestClassifier\nfrom causalml.inference.tree import uplift_tree_string, uplift_tree_plot\n\nuplift_model = UpliftTreeClassifier(max_depth=5, min_samples_leaf=200, min_samples_treatment=50,\n                                    n_reg=100, evaluationFunction='KL', control_name='control')\n\nuplift_model.fit(df[features].values,\n                 treatment=df['treatment_group_key'].values,\n                 y=df['conversion'].values)\n\ngraph = uplift_tree_plot(uplift_model.fitted_uplift_tree, features)\nImage(graph.create_png())\n```\n<div align=\"center\">\n  <img width=\"800px\" height=\"479px\" src=\"https://raw.githubusercontent.com/uber/causalml/master/docs/_static/img/uplift_tree_vis.png\">\n</div>\n\nSee the [Uplift Tree visualization example notebook](https://github.com/uber/causalml/blob/master/examples/uplift_tree_visualization.ipynb) for details.\n\n\n# Contributing\n\nWe welcome community contributors to the project. Before you start, please read our [code of conduct](https://github.com/uber/causalml/blob/master/CODE_OF_CONDUCT.md) and check out [contributing guidelines](./CONTRIBUTING.md) first.\n\n\n# Versioning\n\nWe document versions and changes in our [changelog](https://github.com/uber/causalml/blob/master/docs/changelog.rst).\n\n\n# License\n\nThis project is licensed under the Apache 2.0 License - see the [LICENSE](https://github.com/uber/causalml/blob/master/LICENSE) file for details.\n\n\n# References\n\n## Documentation\n* [Causal ML API documentation](https://causalml.readthedocs.io/en/latest/about.html)\n\n## Citation\nTo cite CausalML in publications, you can refer to the following sources:\n\nWhitepaper:\n[CausalML: Python Package for Causal Machine Learning](https://arxiv.org/abs/2002.11631)\n\nBibtex:\n> @misc{chen2020causalml,\n>    title={CausalML: Python Package for Causal Machine Learning},\n>    author={Huigang Chen and Totte Harinen and Jeong-Yoon Lee and Mike Yung and Zhenyu Zhao},\n>    year={2020},\n>    eprint={2002.11631},\n>    archivePrefix={arXiv},\n>    primaryClass={cs.CY}\n>}\n\n\n## Papers\n\n* Nicholas J Radcliffe and Patrick D Surry. Real-world uplift modelling with significance based uplift trees. White Paper TR-2011-1, Stochastic Solutions, 2011.\n* Yan Zhao, Xiao Fang, and David Simchi-Levi. Uplift modeling with multiple treatments and general response types. Proceedings of the 2017\nSIAM International Conference on Data Mining, SIAM, 2017.\n* S\u00f6ren R. K\u00fcnzel, Jasjeet S. Sekhon, Peter J. Bickel, and Bin Yu. Metalearners for estimating heterogeneous treatment effects using machine learning.\nProceedings of the National Academy of Sciences, 2019.\n* Xinkun Nie and Stefan Wager. Quasi-Oracle Estimation of Heterogeneous Treatment Effects. Atlantic Causal Inference Conference, 2018.\n\n## Related projects\n\n* [uplift](https://cran.r-project.org/web/packages/uplift/index.html): uplift models in R\n* [grf](https://cran.r-project.org/web/packages/grf/index.html): generalized random forests that include heterogeneous treatment effect estimation in R\n* [rlearner](https://github.com/xnie/rlearner): A R package that implements R-Learner\n* [DoWhy](https://github.com/Microsoft/dowhy):  Causal inference in Python based on Judea Pearl's do-calculus\n* [EconML](https://github.com/microsoft/EconML): A Python package that implements heterogeneous treatment effect estimators from econometrics and machine learning methods\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/uber/causalml", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "causalml", "package_url": "https://pypi.org/project/causalml/", "platform": "", "project_url": "https://pypi.org/project/causalml/", "project_urls": {"Homepage": "https://github.com/uber/causalml"}, "release_url": "https://pypi.org/project/causalml/0.7.1/", "requires_dist": ["setuptools (>=41.0.0)", "pip (>=10.0)", "numpy (>=0.16.0)", "scipy", "matplotlib", "pandas (>=0.24.1)", "scikit-learn (>=0.22.0)", "statsmodels (>=0.9.0)", "seaborn", "Cython (>=0.28.0)", "xgboost", "pydotplus", "tqdm", "shap", "dill", "lightgbm", "pygam", "packaging", "keras", "tensorflow"], "requires_python": ">=3.6", "summary": "Python Package for Uplift Modeling and Causal Inference with Machine Learning Algorithms", "version": "0.7.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n  <a href=\"https://github.com/uber/causalml\" rel=\"nofollow\"><img height=\"140px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/25e5a9cb614e029b29e34d4d2def03a2f9c726d1/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f756265722f63617573616c6d6c2f6d61737465722f646f63732f5f7374617469632f696d672f63617573616c6d6c5f6c6f676f2e706e67\" width=\"380px\"></a>\n</div>\n<hr>\n<p><a href=\"https://pypi.org/project/causalml/\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e91901586d8f92363e79534d9365cd7d9687dbeb/68747470733a2f2f62616467652e667572792e696f2f70792f63617573616c6d6c2e737667\"></a>\n<a href=\"https://travis-ci.com/uber/causalml\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7198c01f3f502c43bb7eefc6796e480c964c11de/68747470733a2f2f7472617669732d63692e636f6d2f756265722f63617573616c6d6c2e7376673f746f6b656e3d74376a464b6831734b477462714857703273476e266272616e63683d6d6173746572\"></a>\n<a href=\"http://causalml.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c51af725ed2207f5695c20e23d9a4ded9f63cc51/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f63617573616c6d6c2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://bestpractices.coreinfrastructure.org/projects/3015\" rel=\"nofollow\"><img alt=\"CII Best Practices\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea8b7d474521f0f687821cb990659ba48949abbd/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f333031352f6261646765\"></a></p>\n<h1>Disclaimer</h1>\n<p>This project is stable and being incubated for long-term support. It may contain new experimental code, for which APIs are subject to change.</p>\n<h1>Causal ML: A Python Package for Uplift Modeling and Causal Inference with ML</h1>\n<p><strong>Causal ML</strong> is a Python package that provides a suite of uplift modeling and causal inference methods using machine learning algorithms based on recent\nresearch. It provides a standard interface that allows user to estimate the Conditional Average Treatment Effect (CATE) or Individual Treatment\nEffect (ITE) from experimental or observational data. Essentially, it estimates the causal impact of intervention <code>T</code> on outcome <code>Y</code> for users\nwith observed features <code>X</code>, without strong assumptions on the model form. Typical use cases include</p>\n<ul>\n<li>\n<p><strong>Campaign targeting optimization</strong>: An important lever to increase ROI in an advertising campaign is to target the ad to the set of customers who will have a favorable response in a given KPI such as engagement or sales. CATE identifies these customers by estimating the effect of the KPI from ad exposure at the individual level from A/B experiment or historical observational data.</p>\n</li>\n<li>\n<p><strong>Personalized engagement</strong>: A company has multiple options to interact with its customers such as different product choices in up-sell or messaging channels for communications. One can use CATE to estimate the heterogeneous treatment effect for each customer and treatment option combination for an optimal personalized recommendation system.</p>\n</li>\n</ul>\n<p>The package currently supports the following methods</p>\n<ul>\n<li><strong>Tree-based algorithms</strong>\n<ul>\n<li>Uplift tree/random forests on KL divergence, Euclidean Distance, and Chi-Square</li>\n<li>Uplift tree/random forests on Contextual Treatment Selection</li>\n</ul>\n</li>\n<li><strong>Meta-learner algorithms</strong>\n<ul>\n<li>S-learner</li>\n<li>T-learner</li>\n<li>X-learner</li>\n<li>R-learner</li>\n</ul>\n</li>\n</ul>\n<h1>Installation</h1>\n<h2>Prerequisites</h2>\n<p>Install dependencies:</p>\n<pre><code>$ pip install -r requirements.txt\n</code></pre>\n<p>Install from pip:</p>\n<pre><code>$ pip install causalml\n</code></pre>\n<p>Install from source:</p>\n<pre><code>$ git clone https://github.com/uber/causalml.git\n$ cd causalml\n$ python setup.py build_ext --inplace\n$ python setup.py install\n</code></pre>\n<h1>Quick Start</h1>\n<h2>Average Treatment Effect Estimation with S, T, X, and R Learners</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">causalml.inference.meta</span> <span class=\"kn\">import</span> <span class=\"n\">LRSRegressor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">causalml.inference.meta</span> <span class=\"kn\">import</span> <span class=\"n\">XGBTRegressor</span><span class=\"p\">,</span> <span class=\"n\">MLPTRegressor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">causalml.inference.meta</span> <span class=\"kn\">import</span> <span class=\"n\">BaseXRegressor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">causalml.inference.meta</span> <span class=\"kn\">import</span> <span class=\"n\">BaseRRegressor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">xgboost</span> <span class=\"kn\">import</span> <span class=\"n\">XGBRegressor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">causalml.dataset</span> <span class=\"kn\">import</span> <span class=\"n\">synthetic_data</span>\n\n<span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">treatment</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"n\">synthetic_data</span><span class=\"p\">(</span><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">sigma</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n\n<span class=\"n\">lr</span> <span class=\"o\">=</span> <span class=\"n\">LRSRegressor</span><span class=\"p\">()</span>\n<span class=\"n\">te</span><span class=\"p\">,</span> <span class=\"n\">lb</span><span class=\"p\">,</span> <span class=\"n\">ub</span> <span class=\"o\">=</span> <span class=\"n\">lr</span><span class=\"o\">.</span><span class=\"n\">estimate_ate</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">treatment</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Average Treatment Effect (Linear Regression): </span><span class=\"si\">{:.2f}</span><span class=\"s1\"> (</span><span class=\"si\">{:.2f}</span><span class=\"s1\">, </span><span class=\"si\">{:.2f}</span><span class=\"s1\">)'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">te</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">lb</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">ub</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n\n<span class=\"n\">xg</span> <span class=\"o\">=</span> <span class=\"n\">XGBTRegressor</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"n\">te</span><span class=\"p\">,</span> <span class=\"n\">lb</span><span class=\"p\">,</span> <span class=\"n\">ub</span> <span class=\"o\">=</span> <span class=\"n\">xg</span><span class=\"o\">.</span><span class=\"n\">estimate_ate</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">treatment</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Average Treatment Effect (XGBoost): </span><span class=\"si\">{:.2f}</span><span class=\"s1\"> (</span><span class=\"si\">{:.2f}</span><span class=\"s1\">, </span><span class=\"si\">{:.2f}</span><span class=\"s1\">)'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">te</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">lb</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">ub</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n\n<span class=\"n\">nn</span> <span class=\"o\">=</span> <span class=\"n\">MLPTRegressor</span><span class=\"p\">(</span><span class=\"n\">hidden_layer_sizes</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">),</span>\n                 <span class=\"n\">learning_rate_init</span><span class=\"o\">=.</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n                 <span class=\"n\">early_stopping</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                 <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"n\">te</span><span class=\"p\">,</span> <span class=\"n\">lb</span><span class=\"p\">,</span> <span class=\"n\">ub</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">estimate_ate</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">treatment</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Average Treatment Effect (Neural Network (MLP)): </span><span class=\"si\">{:.2f}</span><span class=\"s1\"> (</span><span class=\"si\">{:.2f}</span><span class=\"s1\">, </span><span class=\"si\">{:.2f}</span><span class=\"s1\">)'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">te</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">lb</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">ub</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n\n<span class=\"n\">xl</span> <span class=\"o\">=</span> <span class=\"n\">BaseXRegressor</span><span class=\"p\">(</span><span class=\"n\">learner</span><span class=\"o\">=</span><span class=\"n\">XGBRegressor</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">))</span>\n<span class=\"n\">te</span><span class=\"p\">,</span> <span class=\"n\">lb</span><span class=\"p\">,</span> <span class=\"n\">ub</span> <span class=\"o\">=</span> <span class=\"n\">xl</span><span class=\"o\">.</span><span class=\"n\">estimate_ate</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">treatment</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Average Treatment Effect (BaseXRegressor using XGBoost): </span><span class=\"si\">{:.2f}</span><span class=\"s1\"> (</span><span class=\"si\">{:.2f}</span><span class=\"s1\">, </span><span class=\"si\">{:.2f}</span><span class=\"s1\">)'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">te</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">lb</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">ub</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n\n<span class=\"n\">rl</span> <span class=\"o\">=</span> <span class=\"n\">BaseRRegressor</span><span class=\"p\">(</span><span class=\"n\">learner</span><span class=\"o\">=</span><span class=\"n\">XGBRegressor</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">))</span>\n<span class=\"n\">te</span><span class=\"p\">,</span> <span class=\"n\">lb</span><span class=\"p\">,</span> <span class=\"n\">ub</span> <span class=\"o\">=</span>  <span class=\"n\">rl</span><span class=\"o\">.</span><span class=\"n\">estimate_ate</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">treatment</span><span class=\"o\">=</span><span class=\"n\">treatment</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Average Treatment Effect (BaseRRegressor using XGBoost): </span><span class=\"si\">{:.2f}</span><span class=\"s1\"> (</span><span class=\"si\">{:.2f}</span><span class=\"s1\">, </span><span class=\"si\">{:.2f}</span><span class=\"s1\">)'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">te</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">lb</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">ub</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n</pre>\n<p>See the <a href=\"https://github.com/uber/causalml/blob/master/examples/meta_learners_with_synthetic_data.ipynb\" rel=\"nofollow\">Meta-learner example notebook</a> for details.</p>\n<h2>Interpretable Causal ML</h2>\n<p>Causal ML provides methods to interpret the treatment effect models trained as follows:</p>\n<h3>Meta Learner Feature Importances</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">causalml.inference.meta</span> <span class=\"kn\">import</span> <span class=\"n\">BaseSRegressor</span><span class=\"p\">,</span> <span class=\"n\">BaseTRegressor</span><span class=\"p\">,</span> <span class=\"n\">BaseXRegressor</span><span class=\"p\">,</span> <span class=\"n\">BaseRRegressor</span>\n\n<span class=\"n\">slearner</span> <span class=\"o\">=</span> <span class=\"n\">BaseSRegressor</span><span class=\"p\">(</span><span class=\"n\">LGBMRegressor</span><span class=\"p\">(),</span> <span class=\"n\">control_name</span><span class=\"o\">=</span><span class=\"s1\">'control'</span><span class=\"p\">)</span>\n<span class=\"n\">slearner</span><span class=\"o\">.</span><span class=\"n\">estimate_ate</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">w_multi</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">slearner_tau</span> <span class=\"o\">=</span> <span class=\"n\">slearner</span><span class=\"o\">.</span><span class=\"n\">fit_predict</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">w_multi</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n<span class=\"n\">model_tau_feature</span> <span class=\"o\">=</span> <span class=\"n\">RandomForestRegressor</span><span class=\"p\">()</span>  <span class=\"c1\"># specify model for model_tau_feature</span>\n\n<span class=\"n\">slearner</span><span class=\"o\">.</span><span class=\"n\">get_importance</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">tau</span><span class=\"o\">=</span><span class=\"n\">slearner_tau</span><span class=\"p\">,</span> <span class=\"n\">model_tau_feature</span><span class=\"o\">=</span><span class=\"n\">model_tau_feature</span><span class=\"p\">,</span>\n                        <span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'auto'</span><span class=\"p\">,</span> <span class=\"n\">features</span><span class=\"o\">=</span><span class=\"n\">feature_names</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Using the feature_importances_ method in the base learner (LGBMRegressor() in this example)</span>\n<span class=\"n\">slearner</span><span class=\"o\">.</span><span class=\"n\">plot_importance</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">tau</span><span class=\"o\">=</span><span class=\"n\">slearner_tau</span><span class=\"p\">,</span> <span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'auto'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Using eli5's PermutationImportance</span>\n<span class=\"n\">slearner</span><span class=\"o\">.</span><span class=\"n\">plot_importance</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">tau</span><span class=\"o\">=</span><span class=\"n\">slearner_tau</span><span class=\"p\">,</span> <span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'permutation'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Using SHAP</span>\n<span class=\"n\">shap_slearner</span> <span class=\"o\">=</span> <span class=\"n\">slearner</span><span class=\"o\">.</span><span class=\"n\">get_shap_values</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">tau</span><span class=\"o\">=</span><span class=\"n\">slearner_tau</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Plot shap values without specifying shap_dict</span>\n<span class=\"n\">slearner</span><span class=\"o\">.</span><span class=\"n\">plot_shap_values</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">tau</span><span class=\"o\">=</span><span class=\"n\">slearner_tau</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Plot shap values WITH specifying shap_dict</span>\n<span class=\"n\">slearner</span><span class=\"o\">.</span><span class=\"n\">plot_shap_values</span><span class=\"p\">(</span><span class=\"n\">shap_dict</span><span class=\"o\">=</span><span class=\"n\">shap_slearner</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># interaction_idx set to 'auto' (searches for feature with greatest approximate interaction)</span>\n<span class=\"n\">slearner</span><span class=\"o\">.</span><span class=\"n\">plot_shap_dependence</span><span class=\"p\">(</span><span class=\"n\">treatment_group</span><span class=\"o\">=</span><span class=\"s1\">'treatment_A'</span><span class=\"p\">,</span>\n                              <span class=\"n\">feature_idx</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n                              <span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">X</span><span class=\"p\">,</span>\n                              <span class=\"n\">tau</span><span class=\"o\">=</span><span class=\"n\">slearner_tau</span><span class=\"p\">,</span>\n                              <span class=\"n\">interaction_idx</span><span class=\"o\">=</span><span class=\"s1\">'auto'</span><span class=\"p\">)</span>\n</pre>\n<div>\n  <img height=\"618px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d768273268e962451cb03c7face7f4c9e4fc10f/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f756265722f63617573616c6d6c2f6d61737465722f646f63732f5f7374617469632f696d672f736861705f7669732e706e67\" width=\"629px\">\n</div>\n<p>See the <a href=\"https://github.com/uber/causalml/blob/master/examples/feature_interpretations_example.ipynb\" rel=\"nofollow\">feature interpretations example notebook</a> for details.</p>\n<h3>Uplift Tree Visualization</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">IPython.display</span> <span class=\"kn\">import</span> <span class=\"n\">Image</span>\n<span class=\"kn\">from</span> <span class=\"nn\">causalml.inference.tree</span> <span class=\"kn\">import</span> <span class=\"n\">UpliftTreeClassifier</span><span class=\"p\">,</span> <span class=\"n\">UpliftRandomForestClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">causalml.inference.tree</span> <span class=\"kn\">import</span> <span class=\"n\">uplift_tree_string</span><span class=\"p\">,</span> <span class=\"n\">uplift_tree_plot</span>\n\n<span class=\"n\">uplift_model</span> <span class=\"o\">=</span> <span class=\"n\">UpliftTreeClassifier</span><span class=\"p\">(</span><span class=\"n\">max_depth</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">min_samples_leaf</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">min_samples_treatment</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>\n                                    <span class=\"n\">n_reg</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">evaluationFunction</span><span class=\"o\">=</span><span class=\"s1\">'KL'</span><span class=\"p\">,</span> <span class=\"n\">control_name</span><span class=\"o\">=</span><span class=\"s1\">'control'</span><span class=\"p\">)</span>\n\n<span class=\"n\">uplift_model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"n\">features</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">,</span>\n                 <span class=\"n\">treatment</span><span class=\"o\">=</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'treatment_group_key'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">,</span>\n                 <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'conversion'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">)</span>\n\n<span class=\"n\">graph</span> <span class=\"o\">=</span> <span class=\"n\">uplift_tree_plot</span><span class=\"p\">(</span><span class=\"n\">uplift_model</span><span class=\"o\">.</span><span class=\"n\">fitted_uplift_tree</span><span class=\"p\">,</span> <span class=\"n\">features</span><span class=\"p\">)</span>\n<span class=\"n\">Image</span><span class=\"p\">(</span><span class=\"n\">graph</span><span class=\"o\">.</span><span class=\"n\">create_png</span><span class=\"p\">())</span>\n</pre>\n<div>\n  <img height=\"479px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a33a6a59171e8a2ef64517389d8cdf6377b61859/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f756265722f63617573616c6d6c2f6d61737465722f646f63732f5f7374617469632f696d672f75706c6966745f747265655f7669732e706e67\" width=\"800px\">\n</div>\n<p>See the <a href=\"https://github.com/uber/causalml/blob/master/examples/uplift_tree_visualization.ipynb\" rel=\"nofollow\">Uplift Tree visualization example notebook</a> for details.</p>\n<h1>Contributing</h1>\n<p>We welcome community contributors to the project. Before you start, please read our <a href=\"https://github.com/uber/causalml/blob/master/CODE_OF_CONDUCT.md\" rel=\"nofollow\">code of conduct</a> and check out <a href=\"./CONTRIBUTING.md\" rel=\"nofollow\">contributing guidelines</a> first.</p>\n<h1>Versioning</h1>\n<p>We document versions and changes in our <a href=\"https://github.com/uber/causalml/blob/master/docs/changelog.rst\" rel=\"nofollow\">changelog</a>.</p>\n<h1>License</h1>\n<p>This project is licensed under the Apache 2.0 License - see the <a href=\"https://github.com/uber/causalml/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a> file for details.</p>\n<h1>References</h1>\n<h2>Documentation</h2>\n<ul>\n<li><a href=\"https://causalml.readthedocs.io/en/latest/about.html\" rel=\"nofollow\">Causal ML API documentation</a></li>\n</ul>\n<h2>Citation</h2>\n<p>To cite CausalML in publications, you can refer to the following sources:</p>\n<p>Whitepaper:\n<a href=\"https://arxiv.org/abs/2002.11631\" rel=\"nofollow\">CausalML: Python Package for Causal Machine Learning</a></p>\n<p>Bibtex:</p>\n<blockquote>\n<p>@misc{chen2020causalml,\ntitle={CausalML: Python Package for Causal Machine Learning},\nauthor={Huigang Chen and Totte Harinen and Jeong-Yoon Lee and Mike Yung and Zhenyu Zhao},\nyear={2020},\neprint={2002.11631},\narchivePrefix={arXiv},\nprimaryClass={cs.CY}\n}</p>\n</blockquote>\n<h2>Papers</h2>\n<ul>\n<li>Nicholas J Radcliffe and Patrick D Surry. Real-world uplift modelling with significance based uplift trees. White Paper TR-2011-1, Stochastic Solutions, 2011.</li>\n<li>Yan Zhao, Xiao Fang, and David Simchi-Levi. Uplift modeling with multiple treatments and general response types. Proceedings of the 2017\nSIAM International Conference on Data Mining, SIAM, 2017.</li>\n<li>S\u00f6ren R. K\u00fcnzel, Jasjeet S. Sekhon, Peter J. Bickel, and Bin Yu. Metalearners for estimating heterogeneous treatment effects using machine learning.\nProceedings of the National Academy of Sciences, 2019.</li>\n<li>Xinkun Nie and Stefan Wager. Quasi-Oracle Estimation of Heterogeneous Treatment Effects. Atlantic Causal Inference Conference, 2018.</li>\n</ul>\n<h2>Related projects</h2>\n<ul>\n<li><a href=\"https://cran.r-project.org/web/packages/uplift/index.html\" rel=\"nofollow\">uplift</a>: uplift models in R</li>\n<li><a href=\"https://cran.r-project.org/web/packages/grf/index.html\" rel=\"nofollow\">grf</a>: generalized random forests that include heterogeneous treatment effect estimation in R</li>\n<li><a href=\"https://github.com/xnie/rlearner\" rel=\"nofollow\">rlearner</a>: A R package that implements R-Learner</li>\n<li><a href=\"https://github.com/Microsoft/dowhy\" rel=\"nofollow\">DoWhy</a>:  Causal inference in Python based on Judea Pearl's do-calculus</li>\n<li><a href=\"https://github.com/microsoft/EconML\" rel=\"nofollow\">EconML</a>: A Python package that implements heterogeneous treatment effect estimators from econometrics and machine learning methods</li>\n</ul>\n\n          </div>"}, "last_serial": 7190691, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "d7fd318f695ba83d38317d7d34a1a030", "sha256": "d0c4d2a120703c8a54ff88e2589207d64ec626162a63d717a744da71e3ee2bbb"}, "downloads": -1, "filename": "causalml-0.2.0-cp36-cp36m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "d7fd318f695ba83d38317d7d34a1a030", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7", "size": 104576, "upload_time": "2019-08-12T22:37:06", "upload_time_iso_8601": "2019-08-12T22:37:06.240495Z", "url": "https://files.pythonhosted.org/packages/d3/f2/b6e8f361c77f66c7b606d8ad094268a00a36d6d4776ffec922b3260e46a9/causalml-0.2.0-cp36-cp36m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f88188e7af6c515282c39884b3ee17d3", "sha256": "68d20024edbb853ede392acc6348b32f5509061ad7f0891a1f55e1f7b6827aee"}, "downloads": -1, "filename": "causalml-0.2.0-py3.6-macosx-10.7-x86_64.egg", "has_sig": false, "md5_digest": "f88188e7af6c515282c39884b3ee17d3", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=2.7", "size": 163716, "upload_time": "2019-08-12T22:37:08", "upload_time_iso_8601": "2019-08-12T22:37:08.705147Z", "url": "https://files.pythonhosted.org/packages/46/e1/ac13f496296f3180e81b733382686b95fa02c5b61179918956ccb3a915f7/causalml-0.2.0-py3.6-macosx-10.7-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "55ac04b1dc90705db3a67fdae76c4ce6", "sha256": "7f0bd1033a335166b2a99f6a4786ef3bd5b2f86c747c9aad395c879b762b2212"}, "downloads": -1, "filename": "causalml-0.2.0.tar.gz", "has_sig": false, "md5_digest": "55ac04b1dc90705db3a67fdae76c4ce6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 119455, "upload_time": "2019-08-12T22:37:10", "upload_time_iso_8601": "2019-08-12T22:37:10.039131Z", "url": "https://files.pythonhosted.org/packages/82/4a/5146bf5a56a253a141f859184c6dd29d98aacc9989bd19a549598d8fecee/causalml-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "57fcf4ea9d517207626379a36e7413a5", "sha256": "f4c1f401005157a30e98068d4f8844c198b8d21c16e8ae88b0c526cd84e6b35a"}, "downloads": -1, "filename": "causalml-0.2.1-cp36-cp36m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "57fcf4ea9d517207626379a36e7413a5", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7", "size": 104628, "upload_time": "2019-08-13T22:40:51", "upload_time_iso_8601": "2019-08-13T22:40:51.647833Z", "url": "https://files.pythonhosted.org/packages/8a/17/955a80991cfbf3bc8b1fc849aa440dc696dd81d21303e56aa5f925a81a0b/causalml-0.2.1-cp36-cp36m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d06bca6ceb21d08a6328b8107aef8a5", "sha256": "af57d90e81cc8995d753c7c1d3c98050fdb061515fc1d054de6b59fbafd3a280"}, "downloads": -1, "filename": "causalml-0.2.1-py3.6-macosx-10.7-x86_64.egg", "has_sig": false, "md5_digest": "0d06bca6ceb21d08a6328b8107aef8a5", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=2.7", "size": 178070, "upload_time": "2019-08-13T22:40:53", "upload_time_iso_8601": "2019-08-13T22:40:53.626004Z", "url": "https://files.pythonhosted.org/packages/45/5a/9438c15ca351c56121f66e2152091f71ccf990234898e8d7e40819e4df70/causalml-0.2.1-py3.6-macosx-10.7-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "59d8257443ea156d0b227d19c512f70d", "sha256": "f4233dea7d68c5babe58ef698dc09f56973657b90be23a6c69a634f958ab8601"}, "downloads": -1, "filename": "causalml-0.2.1.tar.gz", "has_sig": false, "md5_digest": "59d8257443ea156d0b227d19c512f70d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 119588, "upload_time": "2019-08-13T22:40:55", "upload_time_iso_8601": "2019-08-13T22:40:55.278310Z", "url": "https://files.pythonhosted.org/packages/ea/fb/bccde20d5e7a85f123531a82b11ef67c58ed106d086a0260ede96ae5ff4f/causalml-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "7bd2cfbda89a47ae7d9d6dc2df8ae0c4", "sha256": "5c352b014cdac73f02763feaf0c2f34f0017a03c832990c8822ab3e496f1cf57"}, "downloads": -1, "filename": "causalml-0.2.2-cp36-cp36m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "7bd2cfbda89a47ae7d9d6dc2df8ae0c4", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7", "size": 104620, "upload_time": "2019-08-14T01:04:38", "upload_time_iso_8601": "2019-08-14T01:04:38.822810Z", "url": "https://files.pythonhosted.org/packages/31/57/559db2b2dbb5f4add9624d9d7159ef87414dfad4ed223ad3f911df6c48df/causalml-0.2.2-cp36-cp36m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f9a370e1f5c4472390d1de37ec8816f", "sha256": "0e453fba07be1068667bcc3a4d4ff2bf456cec5ca8dbeee9d6ff036feac2cc07"}, "downloads": -1, "filename": "causalml-0.2.2-py3.6-macosx-10.7-x86_64.egg", "has_sig": false, "md5_digest": "2f9a370e1f5c4472390d1de37ec8816f", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=2.7", "size": 178082, "upload_time": "2019-08-14T01:04:40", "upload_time_iso_8601": "2019-08-14T01:04:40.839882Z", "url": "https://files.pythonhosted.org/packages/2b/fd/5622b6abc96efbeb19d038d48d4f686c14ca245bfeedcbdf28ad9b0a85ff/causalml-0.2.2-py3.6-macosx-10.7-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed7e8f0d137b5e9ad5f05bb51ce20c12", "sha256": "f39b7f33af52493f1d586dca58a05169ca47bd4aaf30f762a1a49738bde9a717"}, "downloads": -1, "filename": "causalml-0.2.2.tar.gz", "has_sig": false, "md5_digest": "ed7e8f0d137b5e9ad5f05bb51ce20c12", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 119752, "upload_time": "2019-08-14T01:04:42", "upload_time_iso_8601": "2019-08-14T01:04:42.672505Z", "url": "https://files.pythonhosted.org/packages/f8/55/f4641b6287ef0425c495a8e846bc29a2a5ee7263d51aa0144fa5a9cf77a3/causalml-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "4a07894a9e4a3756ae39d9b42d000e7f", "sha256": "836590f3f5c5b97f2d7d14ae6683338a0bef1bb8ee5891b1e9c8830b5c71bb89"}, "downloads": -1, "filename": "causalml-0.2.3-cp36-cp36m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "4a07894a9e4a3756ae39d9b42d000e7f", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7", "size": 104620, "upload_time": "2019-08-14T01:24:13", "upload_time_iso_8601": "2019-08-14T01:24:13.702774Z", "url": "https://files.pythonhosted.org/packages/ba/f2/71ac0ea98e23af439f67aabe3ca03b70d99dd8fb40c5df51fdb5170a33ee/causalml-0.2.3-cp36-cp36m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f05251f4298006d6cc0fec65511a7e33", "sha256": "70bd6b7e0dbebf2cbe0fa34a324d785770a8ca00f1606d2b453cb965a12839f0"}, "downloads": -1, "filename": "causalml-0.2.3.tar.gz", "has_sig": false, "md5_digest": "f05251f4298006d6cc0fec65511a7e33", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 124088, "upload_time": "2019-08-14T01:23:07", "upload_time_iso_8601": "2019-08-14T01:23:07.379720Z", "url": "https://files.pythonhosted.org/packages/ab/bd/f14807ee35e9af387dc9d52540b84ec6fd8d3f5053493bc0d46de000f944/causalml-0.2.3.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "127220962e8801723c8d132a631224d9", "sha256": "489729b5da74e04a7f9d258da2ca98cefc336391bbf693df8eaf67734111d7ea"}, "downloads": -1, "filename": "causalml-0.3.0-cp36-cp36m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "127220962e8801723c8d132a631224d9", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7", "size": 113247, "upload_time": "2019-09-17T19:24:47", "upload_time_iso_8601": "2019-09-17T19:24:47.628989Z", "url": "https://files.pythonhosted.org/packages/e3/95/5d22109c8f429b4d7de2300ac9b62236cda837d0f24c4cfa96cae983628e/causalml-0.3.0-cp36-cp36m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00f51c8d1c0a7ac424a4c339ad343549", "sha256": "7d075ec635df1b4b16ed54f47544d50bed814596170935c2ac12ef6989d6871e"}, "downloads": -1, "filename": "causalml-0.3.0-py3.6-macosx-10.7-x86_64.egg", "has_sig": false, "md5_digest": "00f51c8d1c0a7ac424a4c339ad343549", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=2.7", "size": 202265, "upload_time": "2019-09-17T19:24:51", "upload_time_iso_8601": "2019-09-17T19:24:51.351877Z", "url": "https://files.pythonhosted.org/packages/c5/66/13c9d9fdc4ad0e3275c77990b3a0aab6c6a534df51c0b16e94dad3873ead/causalml-0.3.0-py3.6-macosx-10.7-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "34a58178b2f340c4f855f908aab2e511", "sha256": "8086f18aca029681b638f2c9628ce8b41ecf71a25c4ef1bed82052bfb5ea706d"}, "downloads": -1, "filename": "causalml-0.3.0.tar.gz", "has_sig": false, "md5_digest": "34a58178b2f340c4f855f908aab2e511", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 129737, "upload_time": "2019-09-17T19:24:53", "upload_time_iso_8601": "2019-09-17T19:24:53.254251Z", "url": "https://files.pythonhosted.org/packages/4f/a4/0a1a16595c056506416cdc822866db50f66478677536b0572781814235fd/causalml-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "d7fb4b477956106e1b3a2b1a76e5ff8f", "sha256": "6806972f78fb1eb7e0d0d9ca6b5cd7c0187ddfdf14fe534af9e88794637fbb69"}, "downloads": -1, "filename": "causalml-0.4.0-cp36-cp36m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "d7fb4b477956106e1b3a2b1a76e5ff8f", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7", "size": 125948, "upload_time": "2019-10-21T19:50:04", "upload_time_iso_8601": "2019-10-21T19:50:04.143735Z", "url": "https://files.pythonhosted.org/packages/f0/6a/0606901e60bca52f755f565eb328a1e4ddbc3e01958d7440829ec823295e/causalml-0.4.0-cp36-cp36m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b98be8f1cf7fd281b44a7c7ea87fc371", "sha256": "93c314211f9cf29064a0350349a5a26a08f73dbe7427c6acb24db3ebf8a0ab21"}, "downloads": -1, "filename": "causalml-0.4.0-cp37-cp37m-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "b98be8f1cf7fd281b44a7c7ea87fc371", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7", "size": 116408, "upload_time": "2019-10-29T18:29:30", "upload_time_iso_8601": "2019-10-29T18:29:30.326109Z", "url": "https://files.pythonhosted.org/packages/cc/c6/07a7f29afba29bce36eba074a49f6372f184b6d6a18e1a51602758302f56/causalml-0.4.0-cp37-cp37m-macosx_10_9_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dace8665f8d47422d876b28898c02810", "sha256": "7f4adcb5bd259d9df410790da8db32bc6d1d6c6ee5f576e3f8120a49234edd84"}, "downloads": -1, "filename": "causalml-0.4.0-py3.6-macosx-10.7-x86_64.egg", "has_sig": false, "md5_digest": "dace8665f8d47422d876b28898c02810", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=2.7", "size": 231867, "upload_time": "2019-10-21T19:50:06", "upload_time_iso_8601": "2019-10-21T19:50:06.638779Z", "url": "https://files.pythonhosted.org/packages/1c/b6/6a64e6b9f065b09f33dfdb174f0589517122f5f37d1351b8c9943d9139e9/causalml-0.4.0-py3.6-macosx-10.7-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "95431a94f0be80362234fc0998d3eaae", "sha256": "e96b61871e734177d368b261ba28289fbc95f36d2aefb273d7fae14613cd104e"}, "downloads": -1, "filename": "causalml-0.4.0.tar.gz", "has_sig": false, "md5_digest": "95431a94f0be80362234fc0998d3eaae", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 138520, "upload_time": "2019-10-21T19:50:08", "upload_time_iso_8601": "2019-10-21T19:50:08.762856Z", "url": "https://files.pythonhosted.org/packages/4e/92/fb9af85303fc6b54bf824c36572c30d9a503e9a70a043d1f135f9c03c1fc/causalml-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "7e0c975fafc1af5b7ec348a145941c41", "sha256": "eed5b0996d9f8efea745efdd76a4a2b1264b8f4335b033a35907d510e1696923"}, "downloads": -1, "filename": "causalml-0.5.0-cp36-cp36m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "7e0c975fafc1af5b7ec348a145941c41", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6", "size": 179005, "upload_time": "2019-11-26T17:29:15", "upload_time_iso_8601": "2019-11-26T17:29:15.023415Z", "url": "https://files.pythonhosted.org/packages/0d/b8/9aeba69e7dc18738fd034835c6908e317e387fc4479ff2becc970999ed77/causalml-0.5.0-cp36-cp36m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87dd0a287e4db36e63950ad2c9655b7e", "sha256": "1316092714e1e5364b962922e1f0090e0bf6c3003dd5d0b38b1b944ce95983fd"}, "downloads": -1, "filename": "causalml-0.5.0-py3.6-macosx-10.7-x86_64.egg", "has_sig": false, "md5_digest": "87dd0a287e4db36e63950ad2c9655b7e", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6", "size": 289577, "upload_time": "2019-11-26T17:29:16", "upload_time_iso_8601": "2019-11-26T17:29:16.848798Z", "url": "https://files.pythonhosted.org/packages/a1/39/271200def4339942cb43eb3bfcd35e85a65ec1fa40bc223deb9d736aac9d/causalml-0.5.0-py3.6-macosx-10.7-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8f307949df4f51e50b2c17d936faf2b", "sha256": "3a12f7ad505c7a2117b86445d2ae194cb97fe82ae32083cd047f1276595a09af"}, "downloads": -1, "filename": "causalml-0.5.0.tar.gz", "has_sig": false, "md5_digest": "a8f307949df4f51e50b2c17d936faf2b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3911041, "upload_time": "2019-11-26T17:29:19", "upload_time_iso_8601": "2019-11-26T17:29:19.499761Z", "url": "https://files.pythonhosted.org/packages/8d/22/cce4ae1c8979eefee8afba96653ff088ab5bcd61b98dcd4897c9340685ce/causalml-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "e2ecd01fd5d2dd16028848b1faf09b0e", "sha256": "819d31c4a2fdbbd16f500041ca73e24ee7a2d251f8f447fb65dc7dafabbe6b0a"}, "downloads": -1, "filename": "causalml-0.6.0-py3.6-macosx-10.7-x86_64.egg", "has_sig": false, "md5_digest": "e2ecd01fd5d2dd16028848b1faf09b0e", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6", "size": 294077, "upload_time": "2020-01-01T01:33:31", "upload_time_iso_8601": "2020-01-01T01:33:31.175134Z", "url": "https://files.pythonhosted.org/packages/5b/e9/7f1cea8d63a802ead86f35d4a027add03591f875d0c95e29440bf8445152/causalml-0.6.0-py3.6-macosx-10.7-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f0e2e97cf74cea30100c8bc3d92d487", "sha256": "5ab4be05c88b149bd5805bf5cb5d156ffd38bd5febb6caeb231038c17dee9692"}, "downloads": -1, "filename": "causalml-0.6.0.tar.gz", "has_sig": false, "md5_digest": "6f0e2e97cf74cea30100c8bc3d92d487", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4089927, "upload_time": "2020-01-01T01:35:39", "upload_time_iso_8601": "2020-01-01T01:35:39.058505Z", "url": "https://files.pythonhosted.org/packages/a9/18/17a651f10032b0d61e4cd0627f12606e00721e66fd0b34ceb56f7bb8ff1c/causalml-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "05f304a32d8fd9f1fc96df7c7da7f067", "sha256": "29142a8856f3da6cde8d25e28a6f085bb2e189d5be50d95746575bc3f46b8dda"}, "downloads": -1, "filename": "causalml-0.7.0-cp37-cp37m-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "05f304a32d8fd9f1fc96df7c7da7f067", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 195121, "upload_time": "2020-02-28T23:47:55", "upload_time_iso_8601": "2020-02-28T23:47:55.508380Z", "url": "https://files.pythonhosted.org/packages/c5/5c/3ade7f0fd72b72979e900af077a441966789d66c5dbdb4eee98ca63913eb/causalml-0.7.0-cp37-cp37m-macosx_10_9_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d76a79f427411eda5a7b5aabca1eea6", "sha256": "9b3d1ff05dca4fca43a735fdfc677a2099d14e984df6956d9714e78c823fd3f2"}, "downloads": -1, "filename": "causalml-0.7.0.tar.gz", "has_sig": false, "md5_digest": "3d76a79f427411eda5a7b5aabca1eea6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3529745, "upload_time": "2020-02-28T23:47:58", "upload_time_iso_8601": "2020-02-28T23:47:58.299194Z", "url": "https://files.pythonhosted.org/packages/14/ac/663245906867cb41e8f246efc27e8fa1b11e4a411bc32c9bb7ef8c6dcc55/causalml-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "f6c08f0f641f9c727dfea364d0f91da2", "sha256": "dad96a4b2c665ba38e98a0f0865a233aa48b6899bc4a0cebeeec9e181fe224dd"}, "downloads": -1, "filename": "causalml-0.7.1-cp37-cp37m-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "f6c08f0f641f9c727dfea364d0f91da2", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 195808, "upload_time": "2020-05-07T18:10:37", "upload_time_iso_8601": "2020-05-07T18:10:37.092396Z", "url": "https://files.pythonhosted.org/packages/18/cb/422be614ed01ecef9a31b5887ff19a92473918f96f5de0cb82ac2d2d9e9d/causalml-0.7.1-cp37-cp37m-macosx_10_9_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c0880621674eaa96f6e47124ce133e3", "sha256": "4e41966b1282d077dca88917a258af7f47e2b37672fbcfb4f1e7f946010db97f"}, "downloads": -1, "filename": "causalml-0.7.1-py3.7-macosx-10.9-x86_64.egg", "has_sig": false, "md5_digest": "8c0880621674eaa96f6e47124ce133e3", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 315075, "upload_time": "2020-05-07T18:10:38", "upload_time_iso_8601": "2020-05-07T18:10:38.563113Z", "url": "https://files.pythonhosted.org/packages/6e/80/59847dba39c44dc12fc43673eec7641989889b57607710fe97853d5d4385/causalml-0.7.1-py3.7-macosx-10.9-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7be61ffd7091721d56eaae64742d604", "sha256": "09078a36d6e1fbc4cb4fd532a1dac1b1ff40a0e7d9a5b018a3f0a229705c84a5"}, "downloads": -1, "filename": "causalml-0.7.1.tar.gz", "has_sig": false, "md5_digest": "f7be61ffd7091721d56eaae64742d604", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3825371, "upload_time": "2020-05-07T18:10:45", "upload_time_iso_8601": "2020-05-07T18:10:45.090106Z", "url": "https://files.pythonhosted.org/packages/be/36/0edb7725ed2e1e56c6f4df2ec67b6daad6332271f158e3220c9bc792c0a4/causalml-0.7.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f6c08f0f641f9c727dfea364d0f91da2", "sha256": "dad96a4b2c665ba38e98a0f0865a233aa48b6899bc4a0cebeeec9e181fe224dd"}, "downloads": -1, "filename": "causalml-0.7.1-cp37-cp37m-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "f6c08f0f641f9c727dfea364d0f91da2", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 195808, "upload_time": "2020-05-07T18:10:37", "upload_time_iso_8601": "2020-05-07T18:10:37.092396Z", "url": "https://files.pythonhosted.org/packages/18/cb/422be614ed01ecef9a31b5887ff19a92473918f96f5de0cb82ac2d2d9e9d/causalml-0.7.1-cp37-cp37m-macosx_10_9_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c0880621674eaa96f6e47124ce133e3", "sha256": "4e41966b1282d077dca88917a258af7f47e2b37672fbcfb4f1e7f946010db97f"}, "downloads": -1, "filename": "causalml-0.7.1-py3.7-macosx-10.9-x86_64.egg", "has_sig": false, "md5_digest": "8c0880621674eaa96f6e47124ce133e3", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 315075, "upload_time": "2020-05-07T18:10:38", "upload_time_iso_8601": "2020-05-07T18:10:38.563113Z", "url": "https://files.pythonhosted.org/packages/6e/80/59847dba39c44dc12fc43673eec7641989889b57607710fe97853d5d4385/causalml-0.7.1-py3.7-macosx-10.9-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7be61ffd7091721d56eaae64742d604", "sha256": "09078a36d6e1fbc4cb4fd532a1dac1b1ff40a0e7d9a5b018a3f0a229705c84a5"}, "downloads": -1, "filename": "causalml-0.7.1.tar.gz", "has_sig": false, "md5_digest": "f7be61ffd7091721d56eaae64742d604", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3825371, "upload_time": "2020-05-07T18:10:45", "upload_time_iso_8601": "2020-05-07T18:10:45.090106Z", "url": "https://files.pythonhosted.org/packages/be/36/0edb7725ed2e1e56c6f4df2ec67b6daad6332271f158e3220c9bc792c0a4/causalml-0.7.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:11 2020"}