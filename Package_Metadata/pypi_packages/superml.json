{"info": {"author": "Benjamin Wang", "author_email": "wlongxiang1119@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Intro\nTired of trying out all kinds of ML models when starting a new project. Try `superml`.\n\n`superml` is a shortcut to ML. A wrapper of scikit-learn, etc.\n\n# Getting Started\n\n## Classification\nThe `SuperClassifier` module currently supports:\n\n- \"SVM\"\n- \"LogisticRegression\"\n- \"KNN\"\n- \"RandomForest\"\n- \"AdaBoost\"\n- \"NaiveBayes\"\n\nIt is super easy to start by copy-paste:\n\n```python\nfrom sklearn import datasets\nfrom sklearn.model_selection import train_test_split\n\nfrom superml import SuperClassifier\nfrom superml import DEFAULT_CLASSIFIERS\n\n\nX, y = datasets.load_iris(return_X_y=True)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)\nsclf = SuperClassifier(classifiers=DEFAULT_CLASSIFIERS)\nsclf.fit(X_train, y_train)\nsclf.evaluate(X=X_test, y=y_test, print_report=True)\n```\n\nOutput right away:\n```\nSVM classification report: \n               precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        19\n           1       1.00      1.00      1.00        15\n           2       1.00      1.00      1.00        16\n\n    accuracy                           1.00        50\n   macro avg       1.00      1.00      1.00        50\nweighted avg       1.00      1.00      1.00        50\n\nLogisticRegression classification report: \n               precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        19\n           1       1.00      1.00      1.00        15\n           2       1.00      1.00      1.00        16\n\n    accuracy                           1.00        50\n   macro avg       1.00      1.00      1.00        50\nweighted avg       1.00      1.00      1.00        50\n\nKNN classification report: \n               precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        19\n           1       0.94      1.00      0.97        15\n           2       1.00      0.94      0.97        16\n\n    accuracy                           0.98        50\n   macro avg       0.98      0.98      0.98        50\nweighted avg       0.98      0.98      0.98        50\n\nRandomForest classification report: \n               precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        19\n           1       0.94      1.00      0.97        15\n           2       1.00      0.94      0.97        16\n\n    accuracy                           0.98        50\n   macro avg       0.98      0.98      0.98        50\nweighted avg       0.98      0.98      0.98        50\n\nAdaBoost classification report: \n               precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        19\n           1       0.79      1.00      0.88        15\n           2       1.00      0.75      0.86        16\n\n    accuracy                           0.92        50\n   macro avg       0.93      0.92      0.91        50\nweighted avg       0.94      0.92      0.92        50\n\nNaiveBayes classification report: \n               precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        19\n           1       0.93      0.93      0.93        15\n           2       0.94      0.94      0.94        16\n\n    accuracy                           0.96        50\n   macro avg       0.96      0.96      0.96        50\nweighted avg       0.96      0.96      0.96        50\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/wlongxiang/superml", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "superml", "package_url": "https://pypi.org/project/superml/", "platform": "", "project_url": "https://pypi.org/project/superml/", "project_urls": {"Homepage": "http://github.com/wlongxiang/superml"}, "release_url": "https://pypi.org/project/superml/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "`superml` is a shortcut to ML. A wrapper of scikit-learn, etc.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Intro</h1>\n<p>Tired of trying out all kinds of ML models when starting a new project. Try <code>superml</code>.</p>\n<p><code>superml</code> is a shortcut to ML. A wrapper of scikit-learn, etc.</p>\n<h1>Getting Started</h1>\n<h2>Classification</h2>\n<p>The <code>SuperClassifier</code> module currently supports:</p>\n<ul>\n<li>\"SVM\"</li>\n<li>\"LogisticRegression\"</li>\n<li>\"KNN\"</li>\n<li>\"RandomForest\"</li>\n<li>\"AdaBoost\"</li>\n<li>\"NaiveBayes\"</li>\n</ul>\n<p>It is super easy to start by copy-paste:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sklearn</span> <span class=\"kn\">import</span> <span class=\"n\">datasets</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">train_test_split</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">superml</span> <span class=\"kn\">import</span> <span class=\"n\">SuperClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">superml</span> <span class=\"kn\">import</span> <span class=\"n\">DEFAULT_CLASSIFIERS</span>\n\n\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">load_iris</span><span class=\"p\">(</span><span class=\"n\">return_X_y</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">X_test</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">y_test</span> <span class=\"o\">=</span> <span class=\"n\">train_test_split</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">test_size</span><span class=\"o\">=</span><span class=\"mf\">0.33</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"n\">sclf</span> <span class=\"o\">=</span> <span class=\"n\">SuperClassifier</span><span class=\"p\">(</span><span class=\"n\">classifiers</span><span class=\"o\">=</span><span class=\"n\">DEFAULT_CLASSIFIERS</span><span class=\"p\">)</span>\n<span class=\"n\">sclf</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n<span class=\"n\">sclf</span><span class=\"o\">.</span><span class=\"n\">evaluate</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">X_test</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y_test</span><span class=\"p\">,</span> <span class=\"n\">print_report</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Output right away:</p>\n<pre><code>SVM classification report: \n               precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        19\n           1       1.00      1.00      1.00        15\n           2       1.00      1.00      1.00        16\n\n    accuracy                           1.00        50\n   macro avg       1.00      1.00      1.00        50\nweighted avg       1.00      1.00      1.00        50\n\nLogisticRegression classification report: \n               precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        19\n           1       1.00      1.00      1.00        15\n           2       1.00      1.00      1.00        16\n\n    accuracy                           1.00        50\n   macro avg       1.00      1.00      1.00        50\nweighted avg       1.00      1.00      1.00        50\n\nKNN classification report: \n               precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        19\n           1       0.94      1.00      0.97        15\n           2       1.00      0.94      0.97        16\n\n    accuracy                           0.98        50\n   macro avg       0.98      0.98      0.98        50\nweighted avg       0.98      0.98      0.98        50\n\nRandomForest classification report: \n               precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        19\n           1       0.94      1.00      0.97        15\n           2       1.00      0.94      0.97        16\n\n    accuracy                           0.98        50\n   macro avg       0.98      0.98      0.98        50\nweighted avg       0.98      0.98      0.98        50\n\nAdaBoost classification report: \n               precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        19\n           1       0.79      1.00      0.88        15\n           2       1.00      0.75      0.86        16\n\n    accuracy                           0.92        50\n   macro avg       0.93      0.92      0.91        50\nweighted avg       0.94      0.92      0.92        50\n\nNaiveBayes classification report: \n               precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        19\n           1       0.93      0.93      0.93        15\n           2       0.94      0.94      0.94        16\n\n    accuracy                           0.96        50\n   macro avg       0.96      0.96      0.96        50\nweighted avg       0.96      0.96      0.96        50\n</code></pre>\n\n          </div>"}, "last_serial": 7100116, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c523dde0f3b9bc4b48fc29d28f48d03c", "sha256": "2428e6dd6548434482cd7ec425f1b63d8071683f7e1bbde7761da9c621833997"}, "downloads": -1, "filename": "superml-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c523dde0f3b9bc4b48fc29d28f48d03c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3965, "upload_time": "2020-04-25T15:49:55", "upload_time_iso_8601": "2020-04-25T15:49:55.860135Z", "url": "https://files.pythonhosted.org/packages/e2/f7/2d0a04bae7c7a8f92952f0d60f75eac967aea3506cb36dd36a8250da1ea2/superml-0.1.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c523dde0f3b9bc4b48fc29d28f48d03c", "sha256": "2428e6dd6548434482cd7ec425f1b63d8071683f7e1bbde7761da9c621833997"}, "downloads": -1, "filename": "superml-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c523dde0f3b9bc4b48fc29d28f48d03c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3965, "upload_time": "2020-04-25T15:49:55", "upload_time_iso_8601": "2020-04-25T15:49:55.860135Z", "url": "https://files.pythonhosted.org/packages/e2/f7/2d0a04bae7c7a8f92952f0d60f75eac967aea3506cb36dd36a8250da1ea2/superml-0.1.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:00:13 2020"}