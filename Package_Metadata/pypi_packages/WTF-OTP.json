{"info": {"author": "Hiroaki Yamamoto", "author_email": "hiroaki@hysoftware.net", "bugtrack_url": null, "classifiers": ["Framework :: Flask", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: CGI Tools/Libraries", "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# One-Time Password Field for WT-Forms\n\n[![Build Status]][Build Status Link]\n[![Maintainability]][Maintainability Link]\n[![Test Coverage]][Coverage Link]\n\n\n[Build Status]: https://travis-ci.org/hiroaki-yamamoto/WTF-OTP.svg?branch=master\n[Build Status Link]: https://travis-ci.org/hiroaki-yamamoto/WTF-OTP\n[Maintainability]: https://api.codeclimate.com/v1/badges/c03f10d1351fa391e1d2/maintainability\n[Maintainability Link]: https://codeclimate.com/github/hiroaki-yamamoto/WTF-OTP/maintainability\n[Test Coverage]: https://api.codeclimate.com/v1/badges/c03f10d1351fa391e1d2/test_coverage\n[Coverage Link]: https://codeclimate.com/github/hiroaki-yamamoto/WTF-OTP/test_coverage\n\n\n## What This?\n\nThis module has Google's [2 factor authentication fields] for [WT-Forms].\n\n[2 factor authentication fields]: https://github.com/google/google-authenticator\n[WT-Forms]: https://wtforms.readthedocs.org/\n\n## Features\n* Single-Page Application driven secret key generation.\n* **QRCode Generation**\n* Secret field and authentication validator that is based on [WTForms]\n\n[WT-Forms]: https://wtforms.readthedocs.org/\n\n## How to use\n\n### If you want QR Code:\nFirst, write the form to generate secret key and authenticate it:\n\n`form.py`\n```python\n#!/usr/bin/env python\n# coding=utf-8\n\nfrom flask_wtf import Form\nimport wtforms.fields as fld\nimport wtforms.fields.html5 as fld5\nimport wtforms.validators as vld\nfrom wtf_otp import OTPSecretKeyField, OTPCheck\n\nclass UserInfoForm(Form):\n  name = fld.StringField()\n  email = fld5.EmailField(validators=[\n    vld.InputRequired(), vld.Email()\n  ])\n  password = fld.PasswordField()\n  new_password = fld.PasswordField()\n  confirm_password = fld.PasswordField(validators=[\n    vld.EqualTo(\"new_password\")\n  ])\n  secret = OTPSecretKeyField(\n    qrcode_url=\"/qrcode\", validators=[vld.InputRequired()]\n  )\n\nclass LoginForm(Form):\n  email = fld5.EmailField(validators=[\n    vld.InputRequired(), vld.Email()\n  ])\n  passwrd = fld.PasswordField(validators=[\n    vld.InputRequired()\n  ])\n  auth = fld.IntegerField(validators=[\n    validators=[vld.InputRequired(), OTPCheck()]\n  ])\n```\n\nNext, write the app as usual. However, you want to add a new route of which\npath is \"/qrcode\" that generates the qrcode. Fortuantely, the sufficient\nfunction is provided. An instance of `OTPSecretKeyField` provides `qrcode`\nfunction:\n\n```python\nfrom .form import UserInfoForm\n\n# /qrcode is assigned to generate_qrcode.\ndef generate_qrcode(req, res):\n  form = UserInfoForm()\n  secret = req.args.get(\"secret\")\n  if not secret:\n      abort(404)\n  res.make_response(form.secret.qrcode(\n      secret, name=\"Test Example\", issuer_name=\"Test Corp\"\n  ))\n  resp.mimetype = \"image/svg+xml\"\n```\n\nNote that you can't get the instance by `UserInfoForm.secret`, because\n`UserInfoForm.secret` returns an instance of `UnboundField`.\n\n## If you don't want QRCode\nIf you don't want QRCode, just remove `qrcode_url` from the corresponding\nclasses and remove QRCode generation class.\n\n## More detail\nIf you want more detail, please refer [source code] and [example code].\n\n[source code]: wtf_otp\n[example code]: example\n\n## License (MIT License)\n\nThe MIT License (MIT)\nCopyright (c) 2016- Hiroaki Yamamoto\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hiroaki-yamamoto/WTF-OTP", "keywords": "WTForms WT-Forms OTP One Time Password", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "WTF-OTP", "package_url": "https://pypi.org/project/WTF-OTP/", "platform": "", "project_url": "https://pypi.org/project/WTF-OTP/", "project_urls": {"Homepage": "https://github.com/hiroaki-yamamoto/WTF-OTP"}, "release_url": "https://pypi.org/project/WTF-OTP/0.6.0/", "requires_dist": null, "requires_python": "", "summary": "One-Time Password for WTForms", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>One-Time Password Field for WT-Forms</h1>\n<p><a href=\"https://travis-ci.org/hiroaki-yamamoto/WTF-OTP\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0666d32e31c0a803f283a86a644dec965330db6/68747470733a2f2f7472617669732d63692e6f72672f6869726f616b692d79616d616d6f746f2f5754462d4f54502e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codeclimate.com/github/hiroaki-yamamoto/WTF-OTP/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0b7aca9aa87eaa039d5b28c3403e5b41deaee605/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f63303366313064313335316661333931653164322f6d61696e7461696e6162696c697479\"></a>\n<a href=\"https://codeclimate.com/github/hiroaki-yamamoto/WTF-OTP/test_coverage\" rel=\"nofollow\"><img alt=\"Test Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c6b0ab716bf9afa9f2a9b06e9305b5ba584fa9e9/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f63303366313064313335316661333931653164322f746573745f636f766572616765\"></a></p>\n<h2>What This?</h2>\n<p>This module has Google's <a href=\"https://github.com/google/google-authenticator\" rel=\"nofollow\">2 factor authentication fields</a> for <a href=\"https://wtforms.readthedocs.org/\" rel=\"nofollow\">WT-Forms</a>.</p>\n<h2>Features</h2>\n<ul>\n<li>Single-Page Application driven secret key generation.</li>\n<li><strong>QRCode Generation</strong></li>\n<li>Secret field and authentication validator that is based on [WTForms]</li>\n</ul>\n<h2>How to use</h2>\n<h3>If you want QR Code:</h3>\n<p>First, write the form to generate secret key and authenticate it:</p>\n<p><code>form.py</code></p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"c1\"># coding=utf-8</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">flask_wtf</span> <span class=\"kn\">import</span> <span class=\"n\">Form</span>\n<span class=\"kn\">import</span> <span class=\"nn\">wtforms.fields</span> <span class=\"k\">as</span> <span class=\"nn\">fld</span>\n<span class=\"kn\">import</span> <span class=\"nn\">wtforms.fields.html5</span> <span class=\"k\">as</span> <span class=\"nn\">fld5</span>\n<span class=\"kn\">import</span> <span class=\"nn\">wtforms.validators</span> <span class=\"k\">as</span> <span class=\"nn\">vld</span>\n<span class=\"kn\">from</span> <span class=\"nn\">wtf_otp</span> <span class=\"kn\">import</span> <span class=\"n\">OTPSecretKeyField</span><span class=\"p\">,</span> <span class=\"n\">OTPCheck</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">UserInfoForm</span><span class=\"p\">(</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n  <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">fld</span><span class=\"o\">.</span><span class=\"n\">StringField</span><span class=\"p\">()</span>\n  <span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"n\">fld5</span><span class=\"o\">.</span><span class=\"n\">EmailField</span><span class=\"p\">(</span><span class=\"n\">validators</span><span class=\"o\">=</span><span class=\"p\">[</span>\n    <span class=\"n\">vld</span><span class=\"o\">.</span><span class=\"n\">InputRequired</span><span class=\"p\">(),</span> <span class=\"n\">vld</span><span class=\"o\">.</span><span class=\"n\">Email</span><span class=\"p\">()</span>\n  <span class=\"p\">])</span>\n  <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">fld</span><span class=\"o\">.</span><span class=\"n\">PasswordField</span><span class=\"p\">()</span>\n  <span class=\"n\">new_password</span> <span class=\"o\">=</span> <span class=\"n\">fld</span><span class=\"o\">.</span><span class=\"n\">PasswordField</span><span class=\"p\">()</span>\n  <span class=\"n\">confirm_password</span> <span class=\"o\">=</span> <span class=\"n\">fld</span><span class=\"o\">.</span><span class=\"n\">PasswordField</span><span class=\"p\">(</span><span class=\"n\">validators</span><span class=\"o\">=</span><span class=\"p\">[</span>\n    <span class=\"n\">vld</span><span class=\"o\">.</span><span class=\"n\">EqualTo</span><span class=\"p\">(</span><span class=\"s2\">\"new_password\"</span><span class=\"p\">)</span>\n  <span class=\"p\">])</span>\n  <span class=\"n\">secret</span> <span class=\"o\">=</span> <span class=\"n\">OTPSecretKeyField</span><span class=\"p\">(</span>\n    <span class=\"n\">qrcode_url</span><span class=\"o\">=</span><span class=\"s2\">\"/qrcode\"</span><span class=\"p\">,</span> <span class=\"n\">validators</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">vld</span><span class=\"o\">.</span><span class=\"n\">InputRequired</span><span class=\"p\">()]</span>\n  <span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">LoginForm</span><span class=\"p\">(</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n  <span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"n\">fld5</span><span class=\"o\">.</span><span class=\"n\">EmailField</span><span class=\"p\">(</span><span class=\"n\">validators</span><span class=\"o\">=</span><span class=\"p\">[</span>\n    <span class=\"n\">vld</span><span class=\"o\">.</span><span class=\"n\">InputRequired</span><span class=\"p\">(),</span> <span class=\"n\">vld</span><span class=\"o\">.</span><span class=\"n\">Email</span><span class=\"p\">()</span>\n  <span class=\"p\">])</span>\n  <span class=\"n\">passwrd</span> <span class=\"o\">=</span> <span class=\"n\">fld</span><span class=\"o\">.</span><span class=\"n\">PasswordField</span><span class=\"p\">(</span><span class=\"n\">validators</span><span class=\"o\">=</span><span class=\"p\">[</span>\n    <span class=\"n\">vld</span><span class=\"o\">.</span><span class=\"n\">InputRequired</span><span class=\"p\">()</span>\n  <span class=\"p\">])</span>\n  <span class=\"n\">auth</span> <span class=\"o\">=</span> <span class=\"n\">fld</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">(</span><span class=\"n\">validators</span><span class=\"o\">=</span><span class=\"p\">[</span>\n    <span class=\"n\">validators</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">vld</span><span class=\"o\">.</span><span class=\"n\">InputRequired</span><span class=\"p\">(),</span> <span class=\"n\">OTPCheck</span><span class=\"p\">()]</span>\n  <span class=\"p\">])</span>\n</pre>\n<p>Next, write the app as usual. However, you want to add a new route of which\npath is \"/qrcode\" that generates the qrcode. Fortuantely, the sufficient\nfunction is provided. An instance of <code>OTPSecretKeyField</code> provides <code>qrcode</code>\nfunction:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">.form</span> <span class=\"kn\">import</span> <span class=\"n\">UserInfoForm</span>\n\n<span class=\"c1\"># /qrcode is assigned to generate_qrcode.</span>\n<span class=\"k\">def</span> <span class=\"nf\">generate_qrcode</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">res</span><span class=\"p\">):</span>\n  <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">UserInfoForm</span><span class=\"p\">()</span>\n  <span class=\"n\">secret</span> <span class=\"o\">=</span> <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"secret\"</span><span class=\"p\">)</span>\n  <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">secret</span><span class=\"p\">:</span>\n      <span class=\"n\">abort</span><span class=\"p\">(</span><span class=\"mi\">404</span><span class=\"p\">)</span>\n  <span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">make_response</span><span class=\"p\">(</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">secret</span><span class=\"o\">.</span><span class=\"n\">qrcode</span><span class=\"p\">(</span>\n      <span class=\"n\">secret</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Test Example\"</span><span class=\"p\">,</span> <span class=\"n\">issuer_name</span><span class=\"o\">=</span><span class=\"s2\">\"Test Corp\"</span>\n  <span class=\"p\">))</span>\n  <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">mimetype</span> <span class=\"o\">=</span> <span class=\"s2\">\"image/svg+xml\"</span>\n</pre>\n<p>Note that you can't get the instance by <code>UserInfoForm.secret</code>, because\n<code>UserInfoForm.secret</code> returns an instance of <code>UnboundField</code>.</p>\n<h2>If you don't want QRCode</h2>\n<p>If you don't want QRCode, just remove <code>qrcode_url</code> from the corresponding\nclasses and remove QRCode generation class.</p>\n<h2>More detail</h2>\n<p>If you want more detail, please refer <a href=\"wtf_otp\" rel=\"nofollow\">source code</a> and <a href=\"example\" rel=\"nofollow\">example code</a>.</p>\n<h2>License (MIT License)</h2>\n<p>The MIT License (MIT)\nCopyright (c) 2016- Hiroaki Yamamoto</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.</p>\n\n          </div>"}, "last_serial": 4429781, "releases": {"0.5.0": [], "0.5.1": [{"comment_text": "", "digests": {"md5": "fb13847d393437dbbfb2ddc758577ce2", "sha256": "ac1801e999226c47b53b8c0e0a08c88acfac30b9185ae78336fafb644806d003"}, "downloads": -1, "filename": "WTF-OTP-0.5.1.tar.gz", "has_sig": false, "md5_digest": "fb13847d393437dbbfb2ddc758577ce2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13126, "upload_time": "2016-07-15T00:13:09", "upload_time_iso_8601": "2016-07-15T00:13:09.736313Z", "url": "https://files.pythonhosted.org/packages/5f/0c/993e0554c1560d9d1795f44a82b0235822e41a758687b034ebdd80eada98/WTF-OTP-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "0f08fbb4df5b276a215ed046f5cee7ed", "sha256": "668472a18998a9375a25f4dd6e3529ac3dc8ee97c822716ce2128878d4f800df"}, "downloads": -1, "filename": "WTF-OTP-0.5.2.tar.gz", "has_sig": false, "md5_digest": "0f08fbb4df5b276a215ed046f5cee7ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13128, "upload_time": "2016-07-15T08:01:42", "upload_time_iso_8601": "2016-07-15T08:01:42.895772Z", "url": "https://files.pythonhosted.org/packages/e2/39/9123b7f799891e11c34b512d968773bdf5d1fbc68aa79424d1c7652d94da/WTF-OTP-0.5.2.tar.gz", "yanked": false}], "0.5.9": [{"comment_text": "", "digests": {"md5": "24e19aa794b3ac18ec8d98f5112f49ce", "sha256": "17578480317bd8b2afbd61aee3604d65f741d1ea331bf6cc0618b2f7267db47d"}, "downloads": -1, "filename": "WTF-OTP-0.5.9.tar.gz", "has_sig": false, "md5_digest": "24e19aa794b3ac18ec8d98f5112f49ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10900, "upload_time": "2018-10-30T02:09:19", "upload_time_iso_8601": "2018-10-30T02:09:19.276832Z", "url": "https://files.pythonhosted.org/packages/6e/2b/c4dd483e84a4555be99465c5a3acc8f04d1f2aafacfefec0d99f2d30a643/WTF-OTP-0.5.9.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "768dba0fadb6a1c2be63ce299ba724f9", "sha256": "7ddf8cd3b7948f7a289c069516c129384068afedb7905f23b4d979ed6519fee8"}, "downloads": -1, "filename": "WTF-OTP-0.6.0.tar.gz", "has_sig": false, "md5_digest": "768dba0fadb6a1c2be63ce299ba724f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10900, "upload_time": "2018-10-30T02:12:01", "upload_time_iso_8601": "2018-10-30T02:12:01.499162Z", "url": "https://files.pythonhosted.org/packages/ef/b1/015281ab79ee57fcb80f76c69e3a5012953d342bb2134ec99e4d5608741b/WTF-OTP-0.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "768dba0fadb6a1c2be63ce299ba724f9", "sha256": "7ddf8cd3b7948f7a289c069516c129384068afedb7905f23b4d979ed6519fee8"}, "downloads": -1, "filename": "WTF-OTP-0.6.0.tar.gz", "has_sig": false, "md5_digest": "768dba0fadb6a1c2be63ce299ba724f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10900, "upload_time": "2018-10-30T02:12:01", "upload_time_iso_8601": "2018-10-30T02:12:01.499162Z", "url": "https://files.pythonhosted.org/packages/ef/b1/015281ab79ee57fcb80f76c69e3a5012953d342bb2134ec99e4d5608741b/WTF-OTP-0.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:26:51 2020"}