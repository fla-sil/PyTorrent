{"info": {"author": "it-spirit", "author_email": "thomas.massmann@it-spir.it", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Plone", "Framework :: Plone :: 4.3", "Framework :: Plone :: 5.0", "Framework :: Plone :: 5.1", "Framework :: Plone :: 5.2", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Programming Language :: Python", "Programming Language :: Python :: 2.7"], "description": "====================\nspirit.plone.theming\n====================\n\nThis Plone Add-On provides some theming extensions for `Plone <https://plone.org>`_ Websites.\nIn order to use it, you would need a diazo theme which supports the provided options.\n\n\nMostly Harmless\n===============\n\n.. image:: https://img.shields.io/pypi/v/spirit.plone.theming.svg\n   :target: https://pypi.python.org/pypi/spirit.plone.theming\n   :alt: PyPI Version\n\n.. image:: https://img.shields.io/pypi/pyversions/spirit.plone.theming.svg\n   :target: https://pypi.python.org/pypi/spirit.plone.theming\n   :alt: Supported Python Versions\n\n.. image:: https://img.shields.io/travis/it-spirit/spirit.plone.theming/master.svg\n   :target: http://travis-ci.org/it-spirit/spirit.plone.theming\n   :alt: Travis CI status\n\n.. image:: https://img.shields.io/coveralls/github/it-spirit/spirit.plone.theming/master.svg\n   :target: https://coveralls.io/github/it-spirit/spirit.plone.theming?branch=master\n   :alt: Coverage Status\n\n.. image:: https://img.shields.io/readthedocs/spiritplonetheming.svg\n   :target: http://spiritplonetheming.readthedocs.io\n   :alt: Documentation\n\n\nAvailable Options\n=================\n\nBelow is a list of currently supported options.\nNote that not every theme by default supports all of those options.\n\nEnable Debug Mode\n-----------------\n\nIf enabled, the content of the diazo snippets will be visible to the user.\nIf disabled, the content is hidden with CSS.\nThere is also a debug option which will be available as content with the CSS id ``PLONE_THEMING_DEBUG`` if enabled.\nThe default is set to ``False``.\n\nDiazo example::\n\n  <!-- Show spirit.plone.theming debug output for logged in users, if enabled. -->\n  <before css:theme-children=\".wrapper\" css:if-content=\".userrole-authenticated #PLONE_THEMING_DEBUG\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <xsl:copy-of css:select=\"#spirit_plone_theming_diazo_snippets\" />\n        </div>\n      </div>\n    </div>\n  </before>\n\n\nSite Logo\n---------\n\nWhen running on Plone 4, you can upload a custom site logo for your Plone site.\nIn Plone 5 the site logo can be customized in the site settings, so this setting will only be available for Plone 4 or below.\nIf no custom logo is set, Plone's default logo will be used.\nFor Plone 4 and below, there is a custom logo viewlet which will render the logo based on the theme setting.\n\n\nSite Favicon\n------------\n\nYou can upload a custom favicon for your Plone site.\nAny image format can be uploaded, but \\*.ico and \\*.png files work best.\nIf no custom icon is set, Plone's default favicon will be used.\nThe favicon link HTML markup will be available as content with the CSS id ``PLONE_THEMING_FAVICON``.\n\nDiazo example::\n\n    <replace\n        css:theme=\"head link[rel='shortcut icon']\"\n        css:content=\"#PLONE_THEMING_FAVICON link\"\n        />\n\n\nHeader Option\n-------------\n\nYou can select one of the available header options which are provided by the theme, e.g. ``header-v1`` and ``header-v2``.\nIf no option is selected, the theme might render a default header.\nThe selected header option will be available as content with the CSS id ``PLONE_THEMING_HEADER_OPTION``.\nThe theme should set all available header options using the ``spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_header_options`` registry key.\n\nDiazo example::\n\n    <!-- Define this variable in your main rules.xml file. -->\n    <xsl:variable name=\"header\" css:select=\"#PLONE_THEMING_HEADER_OPTION\"></xsl:variable>\n\n    ...\n\n    <!-- Add selected header CSS from spirit.plone.theming. -->\n    <after css:theme-children=\"html head\" css:if-content=\"#PLONE_THEMING_HEADER_OPTION\">\n      <!-- CSS Header -->\n      <xsl:choose>\n        <xsl:when test=\"starts-with($header, 'header-v1')\">\n          <link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/headers/header-v1.css\" />\n        </xsl:when>\n        <xsl:when test=\"starts-with($header, 'header-v2')\">\n          <link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/headers/header-v2.css\" />\n        </xsl:when>\n        <xsl:otherwise>\n          <link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/headers/header-v1.css\" />\n        </xsl:otherwise>\n      </xsl:choose>\n    </after>\n\n    <!-- Add default header CSS in case we have no option. -->\n    <after css:theme-children=\"html head\" css:if-not-content=\"#PLONE_THEMING_HEADER_OPTION\">\n      <!-- CSS Header -->\n      <link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/headers/header-v1.css\" />\n    </after>\n\n\nFooter Option\n-------------\n\nYou can select one of the available footer options which are provided by the theme, e.g. ``footer-v1`` and ``footer-v2``.\nIf no option is selected, the theme might render a default footer.\nThe selected footer option will be available as content with the CSS id ``PLONE_THEMING_FOOTER_OPTION``.\nThe theme should set all available footer options using the ``spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_footer_options`` registry key.\n\nDiazo example::\n\n    <!-- Define this variable in your main rules.xml file. -->\n    <xsl:variable name=\"footer\" css:select=\"#PLONE_THEMING_FOOTER_OPTION\"></xsl:variable>\n\n    ...\n\n    <!-- Add selected footer CSS from spirit.plone.theming. -->\n    <after css:theme-children=\"html head\" css:if-content=\"#PLONE_THEMING_FOOTER_OPTION\">\n      <!-- CSS Footer -->\n      <xsl:choose>\n        <xsl:when test=\"starts-with($footer, 'footer-v1')\">\n          <link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/footers/footer-v1.css\" />\n        </xsl:when>\n        <xsl:when test=\"starts-with($footer, 'footer-v2')\">\n          <link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/footers/footer-v2.css\" />\n        </xsl:when>\n        <xsl:otherwise>\n          <link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/footers/footer-v1.css\" />\n        </xsl:otherwise>\n      </xsl:choose>\n    </after>\n\n    <!-- Add default footer CSS in case we have no option. -->\n    <after css:theme-children=\"html head\" css:if-not-content=\"#PLONE_THEMING_FOOTER_OPTION\">\n      <!-- CSS Footer -->\n      <link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/footers/footer-v1.css\" />\n    </after>\n\n\nColor Option\n------------\n\nYou can select one of the available color options which are provided by the theme, e.g. ``blue`` and ``red``.\nIf no option is selected, the theme might use a default color.\nThe selected color option will be available as content with the CSS id ``PLONE_THEMING_COLOR_OPTION``.\nThe theme should set all available color options using the ``spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_color_options`` registry key.\n\nDiazo example::\n\n    <!-- Add selected theme color option from spirit.plone.theming. -->\n    <after css:theme-children=\"html head\" css:if-content=\"#PLONE_THEMING_COLOR_OPTION\">\n      <xsl:variable name=\"color\" css:select=\"#PLONE_THEMING_COLOR_OPTION\"></xsl:variable>\n      <link rel=\"stylesheet\" href=\"{$portal_url}/++theme++mytheme/assets/css/{$color}.css\" type=\"text/css\" />\n    </after>\n\n    <!-- Add default theme color in case we have no option. -->\n    <after css:theme-children=\"html head\" css:if-not-content=\"#PLONE_THEMING_COLOR_OPTION\">\n      <link rel=\"stylesheet\" href=\"{$portal_url}/++theme++mytheme/assets/css/blue.css\" type=\"text/css\" />\n    </after>\n\n\nPattern Option\n--------------\n\nYou can select one of the available background pattern options which are provided by the theme, e.g. ``diagonal-noise`` and ``fabric-plaid``.\nIf no option is selected, the theme might use a default pattern.\nThe selected pattern option will be available as content with the CSS id ``PLONE_THEMING_PATTERN_OPTION``.\nThe theme should set all available pattern options using the ``spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_pattern_options`` registry key.\n\nThis option could also be used to switch between color modes, e.g. ``light`` and ``dark``, if no patterns are available in the theme.\n\nDiazo example::\n\n    <!-- Define this variable in your main rules.xml file. -->\n    <xsl:variable name=\"pattern\" css:select=\"#PLONE_THEMING_PATTERN_OPTION\"></xsl:variable>\n\n    ...\n\n    <!-- Add selected pattern option from spirit.plone.theming. -->\n    <after css:theme-children=\"head\" css:if-content=\"#PLONE_THEMING_PATTERN_OPTION\">\n      <!-- CSS Theme -->\n      <xsl:choose>\n        <xsl:when test=\"$pattern='dark'\">\n          <link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/theme-skins/dark.css\" type=\"text/css\" />\n        </xsl:when>\n      </xsl:choose>\n    </after>\n\n\nLayout Option\n-------------\n\nYou can select one of the available layout options which are provided by the theme, e.g. ``wide`` and ``boxed``.\nIf no option is selected, the theme might use a default layout.\nThe selected layout option will be available as content with the CSS id ``PLONE_THEMING_LAYOUT_OPTION``.\nThe theme should set all available layout options using the ``spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_layout_options`` registry key.\n\nDiazo example::\n\n    <!-- Define this variable in your main rules.xml file. -->\n    <xsl:variable name=\"layout\" css:select=\"#PLONE_THEMING_LAYOUT_OPTION\"></xsl:variable>\n\n    ...\n\n    <!-- Add required CSS classes to body tag based on spirit.plone.theming settings. -->\n    <before theme-children=\"html/body\">\n      <xsl:attribute name=\"class\"><xsl:value-of select=\"/html/body/@class\" />\n\n        <!-- Add selected layout classes from spirit.plone.theming to body tag. -->\n        <xsl:choose>\n          <xsl:when test=\"$layout='boxed'\">\n            <xsl:value-of select=\"' boxed-layout container'\" />\n          </xsl:when>\n        </xsl:choose>\n\n        ...\n\n      </xsl:attribute>\n    </before>\n\n\nSlogan\n------\n\nAdd a slogan for your website (HTML is supported).\nThe slogan will be available as content with the CSS id ``PLONE_THEMING_SLOGAN``.\n\nDiazo example::\n\n    <replace css:content=\"#PLONE_THEMING_SLOGAN\" css:theme=\"#header-headline\" />\n    <drop css:if-not-content=\"#PLONE_THEMING_SLOGAN\" css:theme=\"#header-headline\" />\n\n\nPhone Number\n------------\n\nAdd a phone number for your primary website contact.\nThe phone number will be available as content with the CSS id ``PLONE_THEMING_PHONE_NUMBER`` and ``PLONE_THEMING_PHONE_NUMBER_RAW`` (all non-number characters removed).\n\nDiazo example::\n\n    <replace css:content=\"#PLONE_THEMING_PHONE_NUMBER\" css:theme=\".site-social-links .phone\" />\n    <drop css:if-not-content=\"#PLONE_THEMING_PHONE_NUMBER\" css:theme=\".site-social-links .phone\" />\n\n\nE-Mail Address\n--------------\n\nAdd a valid email address.\nThe email address will be available as content with the CSS id ``PLONE_THEMING_EMAIL``.\n\nDiazo example::\n\n    <replace css:content=\"#PLONE_THEMING_EMAIL\" css:theme=\".site-social-links .email\" />\n    <drop css:if-not-content=\"#PLONE_THEMING_EMAIL\" css:theme=\".site-social-links .email\" />\n\n\nHide Search Box\n---------------\n\nIf enabled, the search box (available in the header part) will be removed in the theme.\nThe searchbox option will be available as content with the CSS id ``PLONE_THEMING_HIDE_SEARCHBOX`` if enabled.\n\nDiazo example::\n\n    <replace css:if-not-content=\"#PLONE_THEMING_HIDE_SEARCHBOX\" css:theme=\".site-search\">\n      <xsl:for-each css:select=\"#portal-searchbox form\">\n        <form><xsl:copy-of select=\"attribute::*[not(name()='class')]\" /><xsl:attribute name=\"class\">site-search <xsl:value-of select=\"@class\" /></xsl:attribute>\n          <div class=\"input-append\">\n            <xsl:copy-of css:select=\"#searchGadget\" />\n            <xsl:for-each select=\"//input[@class='searchButton']\">\n              <button><xsl:copy-of select=\"attribute::*[not(name()='class')]\" /><xsl:attribute name=\"class\">btn <xsl:value-of select=\"@class\" /></xsl:attribute>\n                <i class=\"icon-search\"></i>\n              </button>\n            </xsl:for-each>\n          </div>\n        </form>\n      </xsl:for-each>\n    </replace>\n    <drop css:theme=\".site-search\" css:if-content=\"#PLONE_THEMING_HIDE_SEARCHBOX\" />\n\n\nCustom Footer Text\n------------------\n\nAdd your custom footer text (HTML is supported).\nThe footer text will be available as content with the CSS id ``PLONE_THEMING_FOOTER_TEXT``.\nYou can also add the following variables:\n\n- ``{portal_url}``\n- ``{year}``\n\nExample::\n\n     <p>&copy; Copyright 2009-{year} Your Company Name.</p>\n\nDiazo example (Plone 5)::\n\n    <!-- Replace footer information with Plone version. -->\n    <replace\n        css:if-not-content=\"#PLONE_THEMING_FOOTER_TEXT\"\n        css:theme-children=\".footer-copyright p\"\n        css:content-children=\"#portal-footer-wrapper #portal-footer-signature .portletContent\"\n        />\n\n    <replace\n        css:if-content=\"#PLONE_THEMING_FOOTER_TEXT\"\n        css:theme-children=\".footer-copyright\"\n        css:content-children=\"#PLONE_THEMING_FOOTER_TEXT\"\n        />\n\n\nHide Footer Text\n----------------\n\nIf enabled, the footer text (available in the footer part) will be removed in the theme.\nThe footer option will be available as content with the CSS id ``PLONE_THEMING_HIDE_FOOTER`` if enabled.\n\nDiazo example::\n\n    <rules css:if-not-content=\"#PLONE_THEMING_HIDE_FOOTER\">\n      ...\n    </rules>\n    <drop css:theme-children=\".footer-copyright\" css:if-content=\"#PLONE_THEMING_HIDE_FOOTER\" />\n\n\nCustom Colophon Text\n--------------------\n\nAdd your custom colophon text (HTML is supported).\nThe colophon text will be available as content with the CSS id ``PLONE_THEMING_COLOPHON_TEXT``.\nYou can also add the following variables:\n\n- ``{portal_url}``\n- ``{year}``\n\nExample::\n\n     <p>Powered by Plone, Python & <a href=\"{portal_url}\">Your Company Name</a></p>\n\n\nDiazo example (Plone 5)::\n\n    <!-- Replace colophon information with Plone version. -->\n    <replace\n        css:if-not-content=\"#PLONE_THEMING_COLOPHON_TEXT\"\n        css:theme-children=\".footer-colophon p\"\n        css:content-children=\"#portal-footer-wrapper #portal-colophon .portletContent\"\n        />\n\n    <replace\n        css:if-content=\"#PLONE_THEMING_COLOPHON_TEXT\"\n        css:theme-children=\".footer-colophon\"\n        css:content-children=\"#PLONE_THEMING_COLOPHON_TEXT\"\n        />\n\n\nHide Colophon Text\n------------------\n\nIf enabled, the colophon text (available in the footer part) will be removed in the theme.\nThe colophon option will be available as content with the CSS id ``PLONE_THEMING_HIDE_COLOPHON`` if enabled.\n\nDiazo example::\n\n    <rules css:if-not-content=\"#PLONE_THEMING_HIDE_COLOPHON\">\n      ...\n    </rules>\n    <drop css:theme-children=\".footer-colophon\" css:if-content=\"#PLONE_THEMING_HIDE_COLOPHON\" />\n\n\nAdditional Available Snippets\n=============================\n\nThe following snippets are always available, as soon as the add-on is activated.\n\nplone_version\n-------------\n\nIt will show the currently used Plone major version number.\nIt will be available as content with the CSS id ``PLONE_THEMING_PLONE_VERSION_${plone_version}``, e.g. ``PLONE_THEMING_PLONE_VERSION_4`` for Plone 4.\n\nDiazo example::\n\n    <rules css:if-content=\"#PLONE_THEMING_PLONE_VERSION_4\">\n      <!-- Do some Plone 4 specific stuff -->\n    </rules>\n\n    <rules css:if-content=\"#PLONE_THEMING_PLONE_VERSION_5\">\n      <!-- Do some Plone 5 specific stuff -->\n    </rules>\n\n\nthemingplugins_available\n------------------------\n\nChecks if `plone.app.themingplugins <https://pypi.python.org/pypi/plone.app.themingplugins>`_ is available.\nIt will be available as content with the CSS id ``PLONE_THEMING_THEMINGPLUGINS_AVAILABLE``.\n\nDiazo example::\n\n    <rules css:if-content=\"#PLONE_THEMING_THEMINGPLUGINS_AVAILABLE\">\n      <!-- Load views defined with plone.app.themingplugins. -->\n    </rules>\n\n\nthemefragments_available\n------------------------\n\nChecks if `collective.themefragments <https://pypi.python.org/pypi/collective.themefragments>`_ is available.\nIt will be available as content with the CSS id ``PLONE_THEMING_THEMEFRAGMENTS_AVAILABLE``.\n\nDiazo example::\n\n    <rules css:if-content=\"#PLONE_THEMING_THEMEFRAGMENTS_AVAILABLE\">\n      <!-- Load fragments defined with collective.themefragments. -->\n    </rules>\n\n\nrapido_available\n----------------\n\nChecks if `rapido.plone <https://pypi.python.org/pypi/rapido.plone>`_ is available.\nIt will be available as content with the CSS id ``PLONE_THEMING_THEMEFRAGMENTS_AVAILABLE``.\n\nDiazo example::\n\n    <rules css:if-content=\"#PLONE_THEMING_RAPIDO_AVAILABLE\">\n      <!-- Load rapido.plone components. -->\n    </rules>\n\n\nAdding Available Options From Within A Diazo Theme\n==================================================\n\nBy default, the available options for header, footer, color and layout are empty.\nBut a theme can add it's options to the list of available items by adding elements to the ``plone.registry`` based record values.\nThe values are then provided as a vocabulary to the theming settings.\nThe records are defined in ``spirit.plone.theming.interfaces.IPloneThemingVocabularies``.\nCurrently the following records are available:\n\n- ``available_header_options``\n- ``available_footer_options``\n- ``available_color_options``\n- ``available_layout_options``\n\nA theme could add the records on installation time using the ``registry.xml`` GenersicSetup import step::\n\n    <registry>\n      <record field=\"available_color_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_color_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value>\n          <element>color-1</element>\n          <element>color-2</element>\n        </value>\n      </record>\n      <record field=\"available_footer_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_footer_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value>\n          <element>footer-default</element>\n          <element>footer-v1</element>\n          <element>footer-v2</element>\n        </value>\n      </record>\n      <record field=\"available_header_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_header_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value>\n          <element>header-default</element>\n          <element>header-v1</element>\n          <element>header-v2</element>\n        </value>\n      </record>\n      <record field=\"available_layout_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_layout_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value>\n          <element>boxed</element>\n          <element>wide</element>\n        </value>\n      </record>\n      <record field=\"available_pattern_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_pattern_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value>\n          <element>diagonal-noise</element>\n          <element>fabric-plaid</element>\n        </value>\n      </record>\n    </registry>\n\nWhen the theme gets uninstalled, the entries should be removed.\nTo do this, add a ``registry.xml`` file to your uninstall profile with the following content::\n\n    <registry>\n      <record field=\"available_color_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_color_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value />\n      </record>\n      <record field=\"available_footer_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_footer_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value />\n      </record>\n      <record field=\"available_header_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_header_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value />\n      </record>\n      <record field=\"available_layout_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_layout_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value />\n      </record>\n      <record field=\"available_pattern_options\"\n          name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_pattern_options\"\n          interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\">\n        <value />\n      </record>\n    </registry>\n\n``spirit.plone.theming`` has a dependency to `collective.themesitesetup <https://github.com/collective/collective.themesitesetup>`_, which allows the embedding of GenericSetup import and export steps into zipped theme packages.\nTo enable this, add the following lines to your theme's manifest.cfg::\n\n  [theme:genericsetup]\n  install = install\n  uninstall = uninstall\n\nAdd the two folders ``install`` and ``uninstall`` next to your manifest.cfg and copy over the ``registry.xml`` files from above.\n\n\n.. note::\n\n    Themes created with `spirit.bob <https://github.com/it-spirit/spirit.bob>`_'s ``diazo_theme`` template already include the dependency to ``spirit.plone.theming`` and the required ``registry.xml`` files.\n\nContributors\n------------\n\n- Thomas Massmann, thomas.massmann@it-spir.it\n\nChangelog\n=========\n\n\n0.9 (2019-03-07)\n----------------\n\n- Add Plone 5.2.x compatibility (Python 2.7 only).\n  [tmassman]\n- Drop Plone 4.2.x compatibility.\n  [tmassman]\n- Disable CSRF on controlpanel form due tu plone.formwidget.namedfile temp storage.\n  [tmassman]\n\n\n0.8 (2018-01-17)\n----------------\n\n- Phone numbers starting with a '+' are getting a '00' country code prefix.\n  [tmassman]\n- Replace deprecated plone.directives.form with plone.supermodel to remove grok dependencies.\n  [tmassman]\n\n\n0.7 (2017-11-30)\n----------------\n\n- Remove 'slideshow_fullscreen' option.\n  [tmassman]\n\n\n0.6 (2017-10-13)\n----------------\n\n- Add snippets to show availability of theming addons.\n  [tmassman]\n\n\n0.5 (2017-05-18)\n----------------\n\n- Instead of providing a diazo snippet for the logo, provide a custom logo viewlet.\n  [tmassman]\n\n\n0.4 (2017-05-18)\n----------------\n\n- Load collective.monkeypatcher, if available, to prevent ConfigurationError.\n  [tmassman]\n- Add ``site_logo`` option to upload a custom site logo (Plone 4 only).\n  [tmassman]\n\n\n0.3 (2017-01-24)\n----------------\n\n- Add option to hide footer and colophon texts completely.\n  [tmassman]\n- Update installation docs and documentation images.\n  [tmassman]\n\n\n0.2 (2017-01-12)\n----------------\n\n- Add ``site_favicon`` option to upload a custom favicon.\n  [tmassman]\n- Update documentation.\n  [tmassman]\n\n\n0.1 (2016-12-20)\n----------------\n\n- Initial release.\n  [tmassman]", "description_content_type": "", "docs_url": null, "download_url": "http://pypi.python.org/pypi/spirit.plone.theming", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/it-spirit/spirit.plone.theming", "keywords": "plone zope theming", "license": "GPL version 2", "maintainer": "", "maintainer_email": "", "name": "spirit.plone.theming", "package_url": "https://pypi.org/project/spirit.plone.theming/", "platform": "", "project_url": "https://pypi.org/project/spirit.plone.theming/", "project_urls": {"Download": "http://pypi.python.org/pypi/spirit.plone.theming", "Homepage": "https://github.com/it-spirit/spirit.plone.theming"}, "release_url": "https://pypi.org/project/spirit.plone.theming/0.9/", "requires_dist": null, "requires_python": "", "summary": "Theming extensions for Plone Websites.", "version": "0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This Plone Add-On provides some theming extensions for <a href=\"https://plone.org\" rel=\"nofollow\">Plone</a> Websites.\nIn order to use it, you would need a diazo theme which supports the provided options.</p>\n<div id=\"mostly-harmless\">\n<h2>Mostly Harmless</h2>\n<a href=\"https://pypi.python.org/pypi/spirit.plone.theming\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b4c56063358d30a5158c3c61d894ce6ede62b9a7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7370697269742e706c6f6e652e7468656d696e672e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/spirit.plone.theming\" rel=\"nofollow\"><img alt=\"Supported Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6cd7a6c045580bbd7a2ceecaeaf03ea34b41e9a4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7370697269742e706c6f6e652e7468656d696e672e737667\"></a>\n<a href=\"http://travis-ci.org/it-spirit/spirit.plone.theming\" rel=\"nofollow\"><img alt=\"Travis CI status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ad045d25b7cc6c52332336e19a655ea2692e228/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f69742d7370697269742f7370697269742e706c6f6e652e7468656d696e672f6d61737465722e737667\"></a>\n<a href=\"https://coveralls.io/github/it-spirit/spirit.plone.theming?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e1bc91cd8517906070164b318a4e5c600472b4c9/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f69742d7370697269742f7370697269742e706c6f6e652e7468656d696e672f6d61737465722e737667\"></a>\n<a href=\"http://spiritplonetheming.readthedocs.io\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ffb06d636aaa5a2b171490d926f19da4e83ef84e/68747470733a2f2f696d672e736869656c64732e696f2f72656164746865646f63732f737069726974706c6f6e657468656d696e672e737667\"></a>\n</div>\n<div id=\"available-options\">\n<h2>Available Options</h2>\n<p>Below is a list of currently supported options.\nNote that not every theme by default supports all of those options.</p>\n<div id=\"enable-debug-mode\">\n<h3>Enable Debug Mode</h3>\n<p>If enabled, the content of the diazo snippets will be visible to the user.\nIf disabled, the content is hidden with CSS.\nThere is also a debug option which will be available as content with the CSS id <tt>PLONE_THEMING_DEBUG</tt> if enabled.\nThe default is set to <tt>False</tt>.</p>\n<p>Diazo example:</p>\n<pre>&lt;!-- Show spirit.plone.theming debug output for logged in users, if enabled. --&gt;\n&lt;before css:theme-children=\".wrapper\" css:if-content=\".userrole-authenticated #PLONE_THEMING_DEBUG\"&gt;\n  &lt;div class=\"container\"&gt;\n    &lt;div class=\"row\"&gt;\n      &lt;div class=\"col-xs-12\"&gt;\n        &lt;xsl:copy-of css:select=\"#spirit_plone_theming_diazo_snippets\" /&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/before&gt;\n</pre>\n</div>\n<div id=\"site-logo\">\n<h3>Site Logo</h3>\n<p>When running on Plone 4, you can upload a custom site logo for your Plone site.\nIn Plone 5 the site logo can be customized in the site settings, so this setting will only be available for Plone 4 or below.\nIf no custom logo is set, Plone\u2019s default logo will be used.\nFor Plone 4 and below, there is a custom logo viewlet which will render the logo based on the theme setting.</p>\n</div>\n<div id=\"site-favicon\">\n<h3>Site Favicon</h3>\n<p>You can upload a custom favicon for your Plone site.\nAny image format can be uploaded, but *.ico and *.png files work best.\nIf no custom icon is set, Plone\u2019s default favicon will be used.\nThe favicon link HTML markup will be available as content with the CSS id <tt>PLONE_THEMING_FAVICON</tt>.</p>\n<p>Diazo example:</p>\n<pre>&lt;replace\n    css:theme=\"head link[rel='shortcut icon']\"\n    css:content=\"#PLONE_THEMING_FAVICON link\"\n    /&gt;\n</pre>\n</div>\n<div id=\"header-option\">\n<h3>Header Option</h3>\n<p>You can select one of the available header options which are provided by the theme, e.g. <tt><span class=\"pre\">header-v1</span></tt> and <tt><span class=\"pre\">header-v2</span></tt>.\nIf no option is selected, the theme might render a default header.\nThe selected header option will be available as content with the CSS id <tt>PLONE_THEMING_HEADER_OPTION</tt>.\nThe theme should set all available header options using the <tt>spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_header_options</tt> registry key.</p>\n<p>Diazo example:</p>\n<pre>&lt;!-- Define this variable in your main rules.xml file. --&gt;\n&lt;xsl:variable name=\"header\" css:select=\"#PLONE_THEMING_HEADER_OPTION\"&gt;&lt;/xsl:variable&gt;\n\n...\n\n&lt;!-- Add selected header CSS from spirit.plone.theming. --&gt;\n&lt;after css:theme-children=\"html head\" css:if-content=\"#PLONE_THEMING_HEADER_OPTION\"&gt;\n  &lt;!-- CSS Header --&gt;\n  &lt;xsl:choose&gt;\n    &lt;xsl:when test=\"starts-with($header, 'header-v1')\"&gt;\n      &lt;link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/headers/header-v1.css\" /&gt;\n    &lt;/xsl:when&gt;\n    &lt;xsl:when test=\"starts-with($header, 'header-v2')\"&gt;\n      &lt;link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/headers/header-v2.css\" /&gt;\n    &lt;/xsl:when&gt;\n    &lt;xsl:otherwise&gt;\n      &lt;link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/headers/header-v1.css\" /&gt;\n    &lt;/xsl:otherwise&gt;\n  &lt;/xsl:choose&gt;\n&lt;/after&gt;\n\n&lt;!-- Add default header CSS in case we have no option. --&gt;\n&lt;after css:theme-children=\"html head\" css:if-not-content=\"#PLONE_THEMING_HEADER_OPTION\"&gt;\n  &lt;!-- CSS Header --&gt;\n  &lt;link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/headers/header-v1.css\" /&gt;\n&lt;/after&gt;\n</pre>\n</div>\n<div id=\"footer-option\">\n<h3>Footer Option</h3>\n<p>You can select one of the available footer options which are provided by the theme, e.g. <tt><span class=\"pre\">footer-v1</span></tt> and <tt><span class=\"pre\">footer-v2</span></tt>.\nIf no option is selected, the theme might render a default footer.\nThe selected footer option will be available as content with the CSS id <tt>PLONE_THEMING_FOOTER_OPTION</tt>.\nThe theme should set all available footer options using the <tt>spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_footer_options</tt> registry key.</p>\n<p>Diazo example:</p>\n<pre>&lt;!-- Define this variable in your main rules.xml file. --&gt;\n&lt;xsl:variable name=\"footer\" css:select=\"#PLONE_THEMING_FOOTER_OPTION\"&gt;&lt;/xsl:variable&gt;\n\n...\n\n&lt;!-- Add selected footer CSS from spirit.plone.theming. --&gt;\n&lt;after css:theme-children=\"html head\" css:if-content=\"#PLONE_THEMING_FOOTER_OPTION\"&gt;\n  &lt;!-- CSS Footer --&gt;\n  &lt;xsl:choose&gt;\n    &lt;xsl:when test=\"starts-with($footer, 'footer-v1')\"&gt;\n      &lt;link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/footers/footer-v1.css\" /&gt;\n    &lt;/xsl:when&gt;\n    &lt;xsl:when test=\"starts-with($footer, 'footer-v2')\"&gt;\n      &lt;link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/footers/footer-v2.css\" /&gt;\n    &lt;/xsl:when&gt;\n    &lt;xsl:otherwise&gt;\n      &lt;link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/footers/footer-v1.css\" /&gt;\n    &lt;/xsl:otherwise&gt;\n  &lt;/xsl:choose&gt;\n&lt;/after&gt;\n\n&lt;!-- Add default footer CSS in case we have no option. --&gt;\n&lt;after css:theme-children=\"html head\" css:if-not-content=\"#PLONE_THEMING_FOOTER_OPTION\"&gt;\n  &lt;!-- CSS Footer --&gt;\n  &lt;link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/footers/footer-v1.css\" /&gt;\n&lt;/after&gt;\n</pre>\n</div>\n<div id=\"color-option\">\n<h3>Color Option</h3>\n<p>You can select one of the available color options which are provided by the theme, e.g. <tt>blue</tt> and <tt>red</tt>.\nIf no option is selected, the theme might use a default color.\nThe selected color option will be available as content with the CSS id <tt>PLONE_THEMING_COLOR_OPTION</tt>.\nThe theme should set all available color options using the <tt>spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_color_options</tt> registry key.</p>\n<p>Diazo example:</p>\n<pre>&lt;!-- Add selected theme color option from spirit.plone.theming. --&gt;\n&lt;after css:theme-children=\"html head\" css:if-content=\"#PLONE_THEMING_COLOR_OPTION\"&gt;\n  &lt;xsl:variable name=\"color\" css:select=\"#PLONE_THEMING_COLOR_OPTION\"&gt;&lt;/xsl:variable&gt;\n  &lt;link rel=\"stylesheet\" href=\"{$portal_url}/++theme++mytheme/assets/css/{$color}.css\" type=\"text/css\" /&gt;\n&lt;/after&gt;\n\n&lt;!-- Add default theme color in case we have no option. --&gt;\n&lt;after css:theme-children=\"html head\" css:if-not-content=\"#PLONE_THEMING_COLOR_OPTION\"&gt;\n  &lt;link rel=\"stylesheet\" href=\"{$portal_url}/++theme++mytheme/assets/css/blue.css\" type=\"text/css\" /&gt;\n&lt;/after&gt;\n</pre>\n</div>\n<div id=\"pattern-option\">\n<h3>Pattern Option</h3>\n<p>You can select one of the available background pattern options which are provided by the theme, e.g. <tt><span class=\"pre\">diagonal-noise</span></tt> and <tt><span class=\"pre\">fabric-plaid</span></tt>.\nIf no option is selected, the theme might use a default pattern.\nThe selected pattern option will be available as content with the CSS id <tt>PLONE_THEMING_PATTERN_OPTION</tt>.\nThe theme should set all available pattern options using the <tt>spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_pattern_options</tt> registry key.</p>\n<p>This option could also be used to switch between color modes, e.g. <tt>light</tt> and <tt>dark</tt>, if no patterns are available in the theme.</p>\n<p>Diazo example:</p>\n<pre>&lt;!-- Define this variable in your main rules.xml file. --&gt;\n&lt;xsl:variable name=\"pattern\" css:select=\"#PLONE_THEMING_PATTERN_OPTION\"&gt;&lt;/xsl:variable&gt;\n\n...\n\n&lt;!-- Add selected pattern option from spirit.plone.theming. --&gt;\n&lt;after css:theme-children=\"head\" css:if-content=\"#PLONE_THEMING_PATTERN_OPTION\"&gt;\n  &lt;!-- CSS Theme --&gt;\n  &lt;xsl:choose&gt;\n    &lt;xsl:when test=\"$pattern='dark'\"&gt;\n      &lt;link rel=\"stylesheet\" href=\"/++theme++mytheme/assets/css/theme-skins/dark.css\" type=\"text/css\" /&gt;\n    &lt;/xsl:when&gt;\n  &lt;/xsl:choose&gt;\n&lt;/after&gt;\n</pre>\n</div>\n<div id=\"layout-option\">\n<h3>Layout Option</h3>\n<p>You can select one of the available layout options which are provided by the theme, e.g. <tt>wide</tt> and <tt>boxed</tt>.\nIf no option is selected, the theme might use a default layout.\nThe selected layout option will be available as content with the CSS id <tt>PLONE_THEMING_LAYOUT_OPTION</tt>.\nThe theme should set all available layout options using the <tt>spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_layout_options</tt> registry key.</p>\n<p>Diazo example:</p>\n<pre>&lt;!-- Define this variable in your main rules.xml file. --&gt;\n&lt;xsl:variable name=\"layout\" css:select=\"#PLONE_THEMING_LAYOUT_OPTION\"&gt;&lt;/xsl:variable&gt;\n\n...\n\n&lt;!-- Add required CSS classes to body tag based on spirit.plone.theming settings. --&gt;\n&lt;before theme-children=\"html/body\"&gt;\n  &lt;xsl:attribute name=\"class\"&gt;&lt;xsl:value-of select=\"/html/body/@class\" /&gt;\n\n    &lt;!-- Add selected layout classes from spirit.plone.theming to body tag. --&gt;\n    &lt;xsl:choose&gt;\n      &lt;xsl:when test=\"$layout='boxed'\"&gt;\n        &lt;xsl:value-of select=\"' boxed-layout container'\" /&gt;\n      &lt;/xsl:when&gt;\n    &lt;/xsl:choose&gt;\n\n    ...\n\n  &lt;/xsl:attribute&gt;\n&lt;/before&gt;\n</pre>\n</div>\n<div id=\"slogan\">\n<h3>Slogan</h3>\n<p>Add a slogan for your website (HTML is supported).\nThe slogan will be available as content with the CSS id <tt>PLONE_THEMING_SLOGAN</tt>.</p>\n<p>Diazo example:</p>\n<pre>&lt;replace css:content=\"#PLONE_THEMING_SLOGAN\" css:theme=\"#header-headline\" /&gt;\n&lt;drop css:if-not-content=\"#PLONE_THEMING_SLOGAN\" css:theme=\"#header-headline\" /&gt;\n</pre>\n</div>\n<div id=\"phone-number\">\n<h3>Phone Number</h3>\n<p>Add a phone number for your primary website contact.\nThe phone number will be available as content with the CSS id <tt>PLONE_THEMING_PHONE_NUMBER</tt> and <tt>PLONE_THEMING_PHONE_NUMBER_RAW</tt> (all non-number characters removed).</p>\n<p>Diazo example:</p>\n<pre>&lt;replace css:content=\"#PLONE_THEMING_PHONE_NUMBER\" css:theme=\".site-social-links .phone\" /&gt;\n&lt;drop css:if-not-content=\"#PLONE_THEMING_PHONE_NUMBER\" css:theme=\".site-social-links .phone\" /&gt;\n</pre>\n</div>\n<div id=\"e-mail-address\">\n<h3>E-Mail Address</h3>\n<p>Add a valid email address.\nThe email address will be available as content with the CSS id <tt>PLONE_THEMING_EMAIL</tt>.</p>\n<p>Diazo example:</p>\n<pre>&lt;replace css:content=\"#PLONE_THEMING_EMAIL\" css:theme=\".site-social-links .email\" /&gt;\n&lt;drop css:if-not-content=\"#PLONE_THEMING_EMAIL\" css:theme=\".site-social-links .email\" /&gt;\n</pre>\n</div>\n<div id=\"hide-search-box\">\n<h3>Hide Search Box</h3>\n<p>If enabled, the search box (available in the header part) will be removed in the theme.\nThe searchbox option will be available as content with the CSS id <tt>PLONE_THEMING_HIDE_SEARCHBOX</tt> if enabled.</p>\n<p>Diazo example:</p>\n<pre>&lt;replace css:if-not-content=\"#PLONE_THEMING_HIDE_SEARCHBOX\" css:theme=\".site-search\"&gt;\n  &lt;xsl:for-each css:select=\"#portal-searchbox form\"&gt;\n    &lt;form&gt;&lt;xsl:copy-of select=\"attribute::*[not(name()='class')]\" /&gt;&lt;xsl:attribute name=\"class\"&gt;site-search &lt;xsl:value-of select=\"@class\" /&gt;&lt;/xsl:attribute&gt;\n      &lt;div class=\"input-append\"&gt;\n        &lt;xsl:copy-of css:select=\"#searchGadget\" /&gt;\n        &lt;xsl:for-each select=\"//input[@class='searchButton']\"&gt;\n          &lt;button&gt;&lt;xsl:copy-of select=\"attribute::*[not(name()='class')]\" /&gt;&lt;xsl:attribute name=\"class\"&gt;btn &lt;xsl:value-of select=\"@class\" /&gt;&lt;/xsl:attribute&gt;\n            &lt;i class=\"icon-search\"&gt;&lt;/i&gt;\n          &lt;/button&gt;\n        &lt;/xsl:for-each&gt;\n      &lt;/div&gt;\n    &lt;/form&gt;\n  &lt;/xsl:for-each&gt;\n&lt;/replace&gt;\n&lt;drop css:theme=\".site-search\" css:if-content=\"#PLONE_THEMING_HIDE_SEARCHBOX\" /&gt;\n</pre>\n</div>\n<div id=\"custom-footer-text\">\n<h3>Custom Footer Text</h3>\n<p>Add your custom footer text (HTML is supported).\nThe footer text will be available as content with the CSS id <tt>PLONE_THEMING_FOOTER_TEXT</tt>.\nYou can also add the following variables:</p>\n<ul>\n<li><tt>{portal_url}</tt></li>\n<li><tt>{year}</tt></li>\n</ul>\n<p>Example:</p>\n<pre>&lt;p&gt;&amp;copy; Copyright 2009-{year} Your Company Name.&lt;/p&gt;\n</pre>\n<p>Diazo example (Plone 5):</p>\n<pre>&lt;!-- Replace footer information with Plone version. --&gt;\n&lt;replace\n    css:if-not-content=\"#PLONE_THEMING_FOOTER_TEXT\"\n    css:theme-children=\".footer-copyright p\"\n    css:content-children=\"#portal-footer-wrapper #portal-footer-signature .portletContent\"\n    /&gt;\n\n&lt;replace\n    css:if-content=\"#PLONE_THEMING_FOOTER_TEXT\"\n    css:theme-children=\".footer-copyright\"\n    css:content-children=\"#PLONE_THEMING_FOOTER_TEXT\"\n    /&gt;\n</pre>\n</div>\n<div id=\"hide-footer-text\">\n<h3>Hide Footer Text</h3>\n<p>If enabled, the footer text (available in the footer part) will be removed in the theme.\nThe footer option will be available as content with the CSS id <tt>PLONE_THEMING_HIDE_FOOTER</tt> if enabled.</p>\n<p>Diazo example:</p>\n<pre>&lt;rules css:if-not-content=\"#PLONE_THEMING_HIDE_FOOTER\"&gt;\n  ...\n&lt;/rules&gt;\n&lt;drop css:theme-children=\".footer-copyright\" css:if-content=\"#PLONE_THEMING_HIDE_FOOTER\" /&gt;\n</pre>\n</div>\n<div id=\"custom-colophon-text\">\n<h3>Custom Colophon Text</h3>\n<p>Add your custom colophon text (HTML is supported).\nThe colophon text will be available as content with the CSS id <tt>PLONE_THEMING_COLOPHON_TEXT</tt>.\nYou can also add the following variables:</p>\n<ul>\n<li><tt>{portal_url}</tt></li>\n<li><tt>{year}</tt></li>\n</ul>\n<p>Example:</p>\n<pre>&lt;p&gt;Powered by Plone, Python &amp; &lt;a href=\"{portal_url}\"&gt;Your Company Name&lt;/a&gt;&lt;/p&gt;\n</pre>\n<p>Diazo example (Plone 5):</p>\n<pre>&lt;!-- Replace colophon information with Plone version. --&gt;\n&lt;replace\n    css:if-not-content=\"#PLONE_THEMING_COLOPHON_TEXT\"\n    css:theme-children=\".footer-colophon p\"\n    css:content-children=\"#portal-footer-wrapper #portal-colophon .portletContent\"\n    /&gt;\n\n&lt;replace\n    css:if-content=\"#PLONE_THEMING_COLOPHON_TEXT\"\n    css:theme-children=\".footer-colophon\"\n    css:content-children=\"#PLONE_THEMING_COLOPHON_TEXT\"\n    /&gt;\n</pre>\n</div>\n<div id=\"hide-colophon-text\">\n<h3>Hide Colophon Text</h3>\n<p>If enabled, the colophon text (available in the footer part) will be removed in the theme.\nThe colophon option will be available as content with the CSS id <tt>PLONE_THEMING_HIDE_COLOPHON</tt> if enabled.</p>\n<p>Diazo example:</p>\n<pre>&lt;rules css:if-not-content=\"#PLONE_THEMING_HIDE_COLOPHON\"&gt;\n  ...\n&lt;/rules&gt;\n&lt;drop css:theme-children=\".footer-colophon\" css:if-content=\"#PLONE_THEMING_HIDE_COLOPHON\" /&gt;\n</pre>\n</div>\n</div>\n<div id=\"additional-available-snippets\">\n<h2>Additional Available Snippets</h2>\n<p>The following snippets are always available, as soon as the add-on is activated.</p>\n<div id=\"plone-version\">\n<h3>plone_version</h3>\n<p>It will show the currently used Plone major version number.\nIt will be available as content with the CSS id <tt><span class=\"pre\">PLONE_THEMING_PLONE_VERSION_${plone_version}</span></tt>, e.g. <tt>PLONE_THEMING_PLONE_VERSION_4</tt> for Plone 4.</p>\n<p>Diazo example:</p>\n<pre>&lt;rules css:if-content=\"#PLONE_THEMING_PLONE_VERSION_4\"&gt;\n  &lt;!-- Do some Plone 4 specific stuff --&gt;\n&lt;/rules&gt;\n\n&lt;rules css:if-content=\"#PLONE_THEMING_PLONE_VERSION_5\"&gt;\n  &lt;!-- Do some Plone 5 specific stuff --&gt;\n&lt;/rules&gt;\n</pre>\n</div>\n<div id=\"themingplugins-available\">\n<h3>themingplugins_available</h3>\n<p>Checks if <a href=\"https://pypi.python.org/pypi/plone.app.themingplugins\" rel=\"nofollow\">plone.app.themingplugins</a> is available.\nIt will be available as content with the CSS id <tt>PLONE_THEMING_THEMINGPLUGINS_AVAILABLE</tt>.</p>\n<p>Diazo example:</p>\n<pre>&lt;rules css:if-content=\"#PLONE_THEMING_THEMINGPLUGINS_AVAILABLE\"&gt;\n  &lt;!-- Load views defined with plone.app.themingplugins. --&gt;\n&lt;/rules&gt;\n</pre>\n</div>\n<div id=\"themefragments-available\">\n<h3>themefragments_available</h3>\n<p>Checks if <a href=\"https://pypi.python.org/pypi/collective.themefragments\" rel=\"nofollow\">collective.themefragments</a> is available.\nIt will be available as content with the CSS id <tt>PLONE_THEMING_THEMEFRAGMENTS_AVAILABLE</tt>.</p>\n<p>Diazo example:</p>\n<pre>&lt;rules css:if-content=\"#PLONE_THEMING_THEMEFRAGMENTS_AVAILABLE\"&gt;\n  &lt;!-- Load fragments defined with collective.themefragments. --&gt;\n&lt;/rules&gt;\n</pre>\n</div>\n<div id=\"rapido-available\">\n<h3>rapido_available</h3>\n<p>Checks if <a href=\"https://pypi.python.org/pypi/rapido.plone\" rel=\"nofollow\">rapido.plone</a> is available.\nIt will be available as content with the CSS id <tt>PLONE_THEMING_THEMEFRAGMENTS_AVAILABLE</tt>.</p>\n<p>Diazo example:</p>\n<pre>&lt;rules css:if-content=\"#PLONE_THEMING_RAPIDO_AVAILABLE\"&gt;\n  &lt;!-- Load rapido.plone components. --&gt;\n&lt;/rules&gt;\n</pre>\n</div>\n</div>\n<div id=\"adding-available-options-from-within-a-diazo-theme\">\n<h2>Adding Available Options From Within A Diazo Theme</h2>\n<p>By default, the available options for header, footer, color and layout are empty.\nBut a theme can add it\u2019s options to the list of available items by adding elements to the <tt>plone.registry</tt> based record values.\nThe values are then provided as a vocabulary to the theming settings.\nThe records are defined in <tt>spirit.plone.theming.interfaces.IPloneThemingVocabularies</tt>.\nCurrently the following records are available:</p>\n<ul>\n<li><tt>available_header_options</tt></li>\n<li><tt>available_footer_options</tt></li>\n<li><tt>available_color_options</tt></li>\n<li><tt>available_layout_options</tt></li>\n</ul>\n<p>A theme could add the records on installation time using the <tt>registry.xml</tt> GenersicSetup import step:</p>\n<pre>&lt;registry&gt;\n  &lt;record field=\"available_color_options\"\n      name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_color_options\"\n      interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\"&gt;\n    &lt;value&gt;\n      &lt;element&gt;color-1&lt;/element&gt;\n      &lt;element&gt;color-2&lt;/element&gt;\n    &lt;/value&gt;\n  &lt;/record&gt;\n  &lt;record field=\"available_footer_options\"\n      name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_footer_options\"\n      interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\"&gt;\n    &lt;value&gt;\n      &lt;element&gt;footer-default&lt;/element&gt;\n      &lt;element&gt;footer-v1&lt;/element&gt;\n      &lt;element&gt;footer-v2&lt;/element&gt;\n    &lt;/value&gt;\n  &lt;/record&gt;\n  &lt;record field=\"available_header_options\"\n      name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_header_options\"\n      interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\"&gt;\n    &lt;value&gt;\n      &lt;element&gt;header-default&lt;/element&gt;\n      &lt;element&gt;header-v1&lt;/element&gt;\n      &lt;element&gt;header-v2&lt;/element&gt;\n    &lt;/value&gt;\n  &lt;/record&gt;\n  &lt;record field=\"available_layout_options\"\n      name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_layout_options\"\n      interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\"&gt;\n    &lt;value&gt;\n      &lt;element&gt;boxed&lt;/element&gt;\n      &lt;element&gt;wide&lt;/element&gt;\n    &lt;/value&gt;\n  &lt;/record&gt;\n  &lt;record field=\"available_pattern_options\"\n      name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_pattern_options\"\n      interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\"&gt;\n    &lt;value&gt;\n      &lt;element&gt;diagonal-noise&lt;/element&gt;\n      &lt;element&gt;fabric-plaid&lt;/element&gt;\n    &lt;/value&gt;\n  &lt;/record&gt;\n&lt;/registry&gt;\n</pre>\n<p>When the theme gets uninstalled, the entries should be removed.\nTo do this, add a <tt>registry.xml</tt> file to your uninstall profile with the following content:</p>\n<pre>&lt;registry&gt;\n  &lt;record field=\"available_color_options\"\n      name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_color_options\"\n      interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\"&gt;\n    &lt;value /&gt;\n  &lt;/record&gt;\n  &lt;record field=\"available_footer_options\"\n      name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_footer_options\"\n      interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\"&gt;\n    &lt;value /&gt;\n  &lt;/record&gt;\n  &lt;record field=\"available_header_options\"\n      name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_header_options\"\n      interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\"&gt;\n    &lt;value /&gt;\n  &lt;/record&gt;\n  &lt;record field=\"available_layout_options\"\n      name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_layout_options\"\n      interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\"&gt;\n    &lt;value /&gt;\n  &lt;/record&gt;\n  &lt;record field=\"available_pattern_options\"\n      name=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies.available_pattern_options\"\n      interface=\"spirit.plone.theming.interfaces.IPloneThemingVocabularies\"&gt;\n    &lt;value /&gt;\n  &lt;/record&gt;\n&lt;/registry&gt;\n</pre>\n<p><tt>spirit.plone.theming</tt> has a dependency to <a href=\"https://github.com/collective/collective.themesitesetup\" rel=\"nofollow\">collective.themesitesetup</a>, which allows the embedding of GenericSetup import and export steps into zipped theme packages.\nTo enable this, add the following lines to your theme\u2019s manifest.cfg:</p>\n<pre>[theme:genericsetup]\ninstall = install\nuninstall = uninstall\n</pre>\n<p>Add the two folders <tt>install</tt> and <tt>uninstall</tt> next to your manifest.cfg and copy over the <tt>registry.xml</tt> files from above.</p>\n<div>\n<p>Note</p>\n<p>Themes created with <a href=\"https://github.com/it-spirit/spirit.bob\" rel=\"nofollow\">spirit.bob</a>\u2019s <tt>diazo_theme</tt> template already include the dependency to <tt>spirit.plone.theming</tt> and the required <tt>registry.xml</tt> files.</p>\n</div>\n<div id=\"contributors\">\n<h3>Contributors</h3>\n<ul>\n<li>Thomas Massmann, <a href=\"mailto:thomas.massmann%40it-spir.it\">thomas<span>.</span>massmann<span>@</span>it-spir<span>.</span>it</a></li>\n</ul>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.9 (2019-03-07)</h3>\n<ul>\n<li>Add Plone 5.2.x compatibility (Python 2.7 only).\n[tmassman]</li>\n<li>Drop Plone 4.2.x compatibility.\n[tmassman]</li>\n<li>Disable CSRF on controlpanel form due tu plone.formwidget.namedfile temp storage.\n[tmassman]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.8 (2018-01-17)</h3>\n<ul>\n<li>Phone numbers starting with a \u2018+\u2019 are getting a \u201800\u2019 country code prefix.\n[tmassman]</li>\n<li>Replace deprecated plone.directives.form with plone.supermodel to remove grok dependencies.\n[tmassman]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.7 (2017-11-30)</h3>\n<ul>\n<li>Remove \u2018slideshow_fullscreen\u2019 option.\n[tmassman]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.6 (2017-10-13)</h3>\n<ul>\n<li>Add snippets to show availability of theming addons.\n[tmassman]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.5 (2017-05-18)</h3>\n<ul>\n<li>Instead of providing a diazo snippet for the logo, provide a custom logo viewlet.\n[tmassman]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.4 (2017-05-18)</h3>\n<ul>\n<li>Load collective.monkeypatcher, if available, to prevent ConfigurationError.\n[tmassman]</li>\n<li>Add <tt>site_logo</tt> option to upload a custom site logo (Plone 4 only).\n[tmassman]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.3 (2017-01-24)</h3>\n<ul>\n<li>Add option to hide footer and colophon texts completely.\n[tmassman]</li>\n<li>Update installation docs and documentation images.\n[tmassman]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.2 (2017-01-12)</h3>\n<ul>\n<li>Add <tt>site_favicon</tt> option to upload a custom favicon.\n[tmassman]</li>\n<li>Update documentation.\n[tmassman]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.1 (2016-12-20)</h3>\n<ul>\n<li>Initial release.\n[tmassman]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4909192, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b203d8aeda4a71a5bd9a23f899fa588c", "sha256": "7dfd34375c5f817bbbcdb167b58a7a37e34f65db324d8360ce124fe2fa621447"}, "downloads": -1, "filename": "spirit.plone.theming-0.1.tar.gz", "has_sig": false, "md5_digest": "b203d8aeda4a71a5bd9a23f899fa588c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44112, "upload_time": "2016-12-20T20:39:12", "upload_time_iso_8601": "2016-12-20T20:39:12.649845Z", "url": "https://files.pythonhosted.org/packages/b1/11/a4f780fe0121555a7cc156760ad7078ec6dd18c3fad3cc29754a9d903104/spirit.plone.theming-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "43d0a57f2142f96cda8a7e4271bd3fc9", "sha256": "4d862224550b8d931ffdedcdfb4aa6f56b44ea2243846ff7e431530d8fd82458"}, "downloads": -1, "filename": "spirit.plone.theming-0.2.tar.gz", "has_sig": false, "md5_digest": "43d0a57f2142f96cda8a7e4271bd3fc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 496898, "upload_time": "2017-01-12T09:29:20", "upload_time_iso_8601": "2017-01-12T09:29:20.567002Z", "url": "https://files.pythonhosted.org/packages/7b/12/e34d32182cba20a9f1d30e116898150c3c42a799450190dd2d76a51cb42b/spirit.plone.theming-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "36ab823d0ef46090ad571a4c3deaf8b5", "sha256": "68373b08e3d14dbe3f21c8e4a19326554166c583ca931e4dd2f88ae11a7e2155"}, "downloads": -1, "filename": "spirit.plone.theming-0.3.tar.gz", "has_sig": false, "md5_digest": "36ab823d0ef46090ad571a4c3deaf8b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 637137, "upload_time": "2017-01-24T12:04:08", "upload_time_iso_8601": "2017-01-24T12:04:08.420220Z", "url": "https://files.pythonhosted.org/packages/1d/ff/fa31c2e20882ef73a035831442e2ba7c7d144bbeb941874ef654d21a1487/spirit.plone.theming-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "b49cb907cec63a435c7e11fbfc73feea", "sha256": "6df98ba829ba8af92b0c0e78a8ccaaf98f4f1c2a7668510769dc68e5701cc32a"}, "downloads": -1, "filename": "spirit.plone.theming-0.4.tar.gz", "has_sig": false, "md5_digest": "b49cb907cec63a435c7e11fbfc73feea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 638132, "upload_time": "2017-05-18T10:35:01", "upload_time_iso_8601": "2017-05-18T10:35:01.216389Z", "url": "https://files.pythonhosted.org/packages/82/a4/2264a5eb1ba40989e2c0fb17151c0edd6ab29de2ebbae0ec3fdb4408c062/spirit.plone.theming-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "19e31c026df61e5dd0ccf1fe5cff68ab", "sha256": "6fda03a7a644118ca9d4f24d90bd924c0e5bde99b20485c9eacfb01a5337a161"}, "downloads": -1, "filename": "spirit.plone.theming-0.5.tar.gz", "has_sig": false, "md5_digest": "19e31c026df61e5dd0ccf1fe5cff68ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 642338, "upload_time": "2017-05-18T12:33:29", "upload_time_iso_8601": "2017-05-18T12:33:29.703913Z", "url": "https://files.pythonhosted.org/packages/6f/b5/619a7d96c8ebf00966ae3b08a4e996622a66ec2306df8d7e54186a6ed74a/spirit.plone.theming-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "aa3aae2812400d879ce23b3a0e27d92c", "sha256": "e64e119fdd9363659ca062c81fd82781acda19a1d0c06b640025c512c98388aa"}, "downloads": -1, "filename": "spirit.plone.theming-0.6.tar.gz", "has_sig": false, "md5_digest": "aa3aae2812400d879ce23b3a0e27d92c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 643416, "upload_time": "2017-10-13T06:55:03", "upload_time_iso_8601": "2017-10-13T06:55:03.858066Z", "url": "https://files.pythonhosted.org/packages/f1/52/e1fa868aac429af3bd5e85b93a92f9475b21dc8beda2f455493a733fa3ee/spirit.plone.theming-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "f05641c997cc43c457b2f568579dd6ef", "sha256": "45f87b607e93bdde7c12195b90b25231490d262af0b3ad5050ce5f4d9ef53ae8"}, "downloads": -1, "filename": "spirit.plone.theming-0.7.tar.gz", "has_sig": false, "md5_digest": "f05641c997cc43c457b2f568579dd6ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 597554, "upload_time": "2017-11-30T15:29:40", "upload_time_iso_8601": "2017-11-30T15:29:40.358085Z", "url": "https://files.pythonhosted.org/packages/bd/2a/df0915f70292c4a3d081377969b41bbaf4ad021b84f97e859e4e31592028/spirit.plone.theming-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "3385fe2e889b5227c913c021158ce742", "sha256": "d254923bc97d798dea86ee72fe6e0bf9c24325066f1e224593435ff84f894d42"}, "downloads": -1, "filename": "spirit.plone.theming-0.8.tar.gz", "has_sig": false, "md5_digest": "3385fe2e889b5227c913c021158ce742", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 598020, "upload_time": "2018-01-17T14:53:43", "upload_time_iso_8601": "2018-01-17T14:53:43.336844Z", "url": "https://files.pythonhosted.org/packages/af/a6/f479cbeb059bb2dc3e2ff4db7b081588e0348904e703f5d1ca1dfecbb1bd/spirit.plone.theming-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "a5c250caefa909bc9a80e91a611f9a00", "sha256": "aa8f800386f713f7fa7beed0fe69d6f925464e5c1f0e06386eee290ead617d11"}, "downloads": -1, "filename": "spirit.plone.theming-0.9.zip", "has_sig": false, "md5_digest": "a5c250caefa909bc9a80e91a611f9a00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 634873, "upload_time": "2019-03-07T09:25:15", "upload_time_iso_8601": "2019-03-07T09:25:15.236484Z", "url": "https://files.pythonhosted.org/packages/ee/4f/f296f8a592d571bc2ed2a61f7e7faf9597141aa28b74475e0c6f90cbd757/spirit.plone.theming-0.9.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a5c250caefa909bc9a80e91a611f9a00", "sha256": "aa8f800386f713f7fa7beed0fe69d6f925464e5c1f0e06386eee290ead617d11"}, "downloads": -1, "filename": "spirit.plone.theming-0.9.zip", "has_sig": false, "md5_digest": "a5c250caefa909bc9a80e91a611f9a00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 634873, "upload_time": "2019-03-07T09:25:15", "upload_time_iso_8601": "2019-03-07T09:25:15.236484Z", "url": "https://files.pythonhosted.org/packages/ee/4f/f296f8a592d571bc2ed2a61f7e7faf9597141aa28b74475e0c6f90cbd757/spirit.plone.theming-0.9.zip", "yanked": false}], "timestamp": "Fri May  8 03:04:46 2020"}