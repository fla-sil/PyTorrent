{"info": {"author": "Bohumir Zamecnik", "author_email": "bohumir.zamecnik@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Multimedia :: Sound/Audio :: Analysis"], "description": "Chord dissonance models\n=======================\n\nThis package implements various models of perceptual chord dissonance.\nGiven a musical chord composed of individual tones, each composed of\npartials, a dissonance model provides a score that estimate how\ndissonant (harsh) does it sound to human listener.\n\nIt contains implementation of several models of dissoance with\ncorrections of errors found in the formulas in the papers. See below.\n\nInstallation\n------------\n\n::\n\n    pip install dissonant\n\nWhy ``dissonant``? PyPI package ``dissonance`` was already taken.\n\nUsage\n-----\n\nDissonance of a C major chord with harmonic tones in 12-TET tuning with\nbase 440 Hz using the Sethares1993 model:\n\n::\n\n    from dissonant import harmonic_tone, dissonance, pitch_to_freq\n    freqs, amps = harmonic_tone(pitch_to_freq([0, 4, 7, 12]), n_partials=10)\n    d = dissonance(freqs, amps, model='sethares1993')\n\nDissonance curve of a sliding interval of two harmonic tones: see\n`notebooks/dissonance_curve.ipynb <notebooks/dissonance_curve.ipynb>`__.\n\nPapers\n------\n\n-  `1965, Plomp, Levelt - Tonal Consonance and Critical\n   Bandwidth <http://www.mpi.nl/world/materials/publications/levelt/Plomp_Levelt_Tonal_1965.pdf>`__\n-  1979, Hutchinson, Knopoff - The significance of the acoustic\n   component of consonance in Western triad\n-  `1993, Sethares - Local Consonance and the Relationship Between\n   Timbre and\n   Scale <http://sethares.engr.wisc.edu/paperspdf/consonance.pdf>`__\n\n   -  http://sethares.engr.wisc.edu/papers/consance.html\n\n-  `2000, Vassilakis - Auditory roughness estimation of complex\n   spectra <http://www.escom.org/proceedings/ICMPC2000/Wed/Vassilak.htm>`__\n\n   -  PDF is not public, only HTML\n\n-  `2001, Vassilakis - Perceptual and Physical Properties of Amplitude\n   Fluctuation and their Musical\n   Significance <http://www.acousticslab.org/papers/VassilakisP2001Dissertation.pdf>`__\n   - PhD thesis\n-  `2002, Cook - Tone of Voice and\n   Mind <http://www.res.kutc.kansai-u.ac.jp/~cook/PDFs/Tone_of_Voice_and_Mind.pdf>`__\n   - book\n-  `2004, Sethares - Tuning Timbre Spectrum\n   Scale <http://eceserv0.ece.wisc.edu/~sethares/ttss.html>`__ - book\n-  `2005, Vassilakis - Auditory Roughness as Means of Musical\n   Expression <http://www.acousticslab.org/papers/Vassilakis2005SRE.pdf>`__\n-  `2006, Benson - David Benson Music: A Mathematical\n   Offering <http://homepages.abdn.ac.uk/mth192/pages/html/music.pdf>`__\n   (`book\n   page <http://homepages.abdn.ac.uk/mth192/pages/html/maths-music.html>`__)\n-  `2006, Cook, Fujisawa - The Psychophysics of Harmony Perception:\n   Harmony is a Three-Tone\n   Phenomenon <http://www.res.kutc.kansai-u.ac.jp/~cook/PDFs/EMR2006.pdf>`__\n-  `2009, Cook - Harmony Perception: Harmoniousness Is More Than the Sum\n   of Interval\n   Consonance <http://www.res.kutc.kansai-u.ac.jp/~cook/PDFs/MusPerc2009.pdf>`__\n-  `2010, Vassilakis, Kendall - Psychoacoustic and congitive aspects of\n   auditory roughness - definitions, models and\n   applications <http://acousticslab.org/papers/VassilakisKendall2010.pdf>`__\n-  `2013, Dillon - Calculating the Dissonance of a Chord according to\n   Helmholtz theory <https://arxiv.org/pdf/1306.1344v5>`__\n\nExtra\n~~~~~\n\n-  `2001, McKinney et al. - Neural correlates of musical dissonance in\n   the inferior\n   colliculus <http://research.meei.harvard.edu/NeuralCoding/Papers/mckinneyISH.pdf>`__\n-  `2007, Vassilakis - SRA: A Web-based Research Tool for Spectral and\n   Roughness Analysis of Sound\n   Signals <http://musicalgorithms.ewu.edu/learnmoresra/files/vassilakis2007smc.pdf>`__\n\n   -  http://musicalgorithms.ewu.edu/algorithms/Roughness.html\n   -  http://musicalgorithms.ewu.edu/learnmoresra/moremodel.html\n\n-  Kameoka, A. & Kuriyagawa, M. (1969a). Consonance theory, part I:\n   Consonance of dyads. Journal of the Acoustical Society of America,\n   Vol. 45, No.\u00a06, pp.\u00a01451-1459.\n-  Kameoka, A. & Kuriyagawa, M. (1969b). Consonance theory, part II:\n   Consonance of complex tones and its computation method. Journal of\n   the Acoustical Society of America, Vol. 45, No.\u00a06, pp.\u00a01460-1469.\n-  Mashinter, Keith. (1995). Discrepancies in Theories of Sensory\n   Dissonance arising from the Models of Kameoka & Kuriyagawa, and\n   Hutchinson & Knopoff. Undergraduate thesis submitted for the double\n   honours degrees in Applied Mathematics and Music, University of\n   Waterloo.\n-  Phil Keenan ([@ingthrumath](https://twitter.com/ingthrumath))\n\n   -  http://meandering-through-mathematics.blogspot.com/2015/03/consonance-and-dissonance-in-music.html\n   -  http://meandering-through-mathematics.blogspot.com/2016/06/experimenting-with-sounds-consonance.html\n\nOther resources\n---------------\n\n-  https://en.wikipedia.org/wiki/Consonance_and_dissonance\n-  http://www.res.kutc.kansai-u.ac.jp/~cook/\n\n   -  http://www.res.kutc.kansai-u.ac.jp/~cook/05%20harmony.html\n   -  http://www.res.kutc.kansai-u.ac.jp/~cook/Harmony.c\n\n      -  N. D. Cook, T. Fujisawa and K. Takami. This program is an\n         improved version of the algorithm reported in Tone of Voice and\n         Mind (Benjamins, Amsterdam, 2002). It calculates the\n         dissonance, tension, instability and modality of chords\n         containing 2-5 tones and assuming the presence of 1-5 upper\n         partials.\n      -  video: `CogMIR 2013 - Norman D Cook - Visual Display of the\n         Acoustical Properties of\n         Harmony <https://www.youtube.com/watch?v=CrmnaiyS5EE>`__\n\n-  http://sethares.engr.wisc.edu/consemi.html#anchor149613\n-  http://sethares.engr.wisc.edu/forrestjava/html/TuningAndTimbre.html\n-  http://sethares.engr.wisc.edu/comprog.html - MATLAB, C++, Lisp\n-  https://gist.github.com/endolith/3066664\n-  http://www.davideverotta.com/A_folders/Theory/m_dissonance.html\n-  http://www.music-cog.ohio-state.edu/Music829B/diss.html\n\nModels\n------\n\nThere are several acoustic models of dissonance. They may work on\ndifferent data and provide several various metrics. All of them are\nbased on some perceptual experiments.\n\nInput signals:\n\n-  two plain sinusoidal tones\n-  two harmonic tones - integer multiples of the base frequency\n-  chord (two or more) of harmonic tones\n-  signals with continuous spectrum\n\nPlompLevelt1965\n~~~~~~~~~~~~~~~\n\nThey measured the perceived dissonance of pairs of sinusoidal tones and\nof complex tones with 6 harmonics. They provide only experimental data,\nnot a parametric model.\n\nSethares1993\n~~~~~~~~~~~~\n\nFirst, he explicitly parameterizes the data of PlompLevelt1965 (for a\npair of sinusoids and for any number of complex tones) with constants\nfound by fitting the curve to the data.\n\nDissonance ``d(x)`` for the difference ``x`` between a pair of\nfrequencies. This ignores the absolute frequencies.\n\n::\n\n    d(x) = exp(-a * x) - exp(-b * x)\n    Constants:\n    a = 3.5\n    b = 5.75\n\nDissonance for a pair of frequencies ``(f_1, f_2)`` (for f_1 < f_2) and\ntheir amplitudes ``(a_1, a_2)``. This takes into account the absolute\nfrequencies. ``d_max`` is just the maximum of d(x).\n\n::\n\n    d_pair(f_1, f_2, a_1, a_2) =\n      s = d_max / (s_1 * f_1 + s_2)\n      x = s * (f_2 - f_1)\n      a_1 * a_2 * (exp(-a * x) - exp(-b * x))\n\n    Constants:\n    a = 3.5\n    b = 5.75\n    d_max = 0.24\n    s_1 = 0.0207 # 0.021 in the paper\n    s_2 = 18.96 # 19 in the paper\n\nExpressed in terms of ``d(x)``:\n\n::\n\n    d_pair(f_1, f_2, a_1, a_2) = a_1 * a_2 * d((f_2 - f_1) * d_max / (s_1 * f_1 + s_2))\n\nModel of dissonance of a single complex tone (containing various\npartials) is just the sum of dissonances for all pairs of partials. In\ncase the partials are integer multiples of a base frequency we can call\ntone \u201charmonic\u201d, otherwise just a general \u201ctimbre\u201d.\n\n::\n\n    freqs = (f_1, f_2, ... f_n)\n    amps = (a_1, a_2, ... a_n)\n    d_complex(freqs, amps) = 0.5 * sum([d(f_i, f_j, a_i, a_j) for i in range(n) for j in range(n)])\n\n    or equally:\n\n    d_complex(freqs, amps) = sum([\n      d(freqs[i], freqs[j], amps[i], amps[j])\n      for i in range(n)\n      for j in range(n)\n      if i < j])\n\nThen we can model dissonance of a pair of complex tones (timbres).\nBasically it\u2019s still a sum of dissonances of all pairs of partials. We\ncan however express ``freqs_2 = alpha * freqs_1`` and plot\n``d_complex()`` for fixed ``freqs_1`` and varying ``alpha`` to get a\n\u201cdissonance curve\u201d.\n\nNote that this model can be used to model dissonance of intervals of\ncomplex tones, as well as chords (any number of tones).\n\nNote the constants ``s_1``, ``s_2`` are defined in the paper with low\nprecision. Better precision is provided in the code by Mr.\u00a0Sethares:\nhttp://sethares.engr.wisc.edu/comprog.html.\n\nQuestions?\n^^^^^^^^^^\n\nWhy we just sum the dissonance and not compute mean? Which aggregation\noperation makes more sense?\n\nVassilakis2001\n~~~~~~~~~~~~~~\n\nThere\u2019s a modification to the ``d_pair()`` function which should make it\ndepend more reliably on \u201cSPL\u201d and \u201cAF-degree\u201d, in particular put more\naccent on the relative amplitudes of interfering sinusoids rather than\non thir absolute amplitudes.\n\nDefined in Eq.(6.23) on page 197 (219 in the PDF).\n\n::\n\n    a_2 should be >= a_1\n    d_pair(f_1, f_2, a_1, a_2) =\n      (a_1 * a_2) ^ 0.1 * 0.5 *\n      ((2 * a_2) / (a_1 + a_2)) ^ 3.11 *\n      (exp(-a * s * (f_2 - f_1)) - exp(-b * s * (f_2 - f_1)))\n\n    Where:\n    spl = a_1 * a_2\n    af_degree = (2 * a_2) / (a_1 + a_2)\n    a = 3.5\n    b = 5.75\n    d_max = 0.24\n    s_1 = 0.0207\n    s_2 = 18.96\n\n    It can be expressed in terms of d(x):\n\n    d_pair(f_1, f_2, a_1, a_2) =\n      spl = a_1 * a_2\n      af_degree = (2 * a_2) / (a_1 + a_2)\n      s = d_max / (s_1 * f_1 + s_2)\n      x = s * (f_2 - f_1)\n      spl ^ 0.1 * 0.5 * af_degree ^ 3.11 * d(x)\n\nIn comparison in the Sethares1993 model it is:\n\n::\n\n    d_pair(f_1, f_2, a_1, a_2) =\n      spl = a_1 * a_2\n      s = d_max / (s_1 * f_1 + s_2)\n      x = (f_2 - f_1) * x\n      spl * d(x)\n\nNote that in order to handle the case if a_1 < a_2 we could define:\n\n::\n\n    af_degree(a_1, a_2) = (2 * min(a_1, a_2)) / (a_1 + a_2)\n\nLooking at Vassilakis2010 this is exactly what they do, extending\nVassilakis2001, otherwise the model is the same.\n\nExtending this to a set of complex tones is the same as in Sethares1993\n- just aggregate ``d_pair()`` for all pairs via a sum.\n\nNote there\u2019s an additional ``0.5`` factor in the Vassilakis2001 model\ncompared to Sethares1993. IMHO the meaning is to compensate for pairs of\npartials being summed twice. In order to make the models comparable we\nshould remove this term and take only pairs of partials only once in all\nmodels.\n\nCook2002\n~~~~~~~~\n\nDissonance model (Cook2002, Appendix 2, page 276 and on, eg. A2-1):\n\n::\n\n    Original - wrong:\n    d_pair(x, a_1, a_2) =\n      mu_a = (a_1 + a_2) / 2\n      mu_a * (exp(-a * x) - exp(-b * x))\n\n    Fixed:\n      d_pair(x, a_1, a_2) =\n        mu_a = (a_1 + a_2) / 2\n        mu_a * c * (exp(-a * x) - exp(-b * x))\n\n    Where:\n    mu_a ... mean amplitude, within [0.0; 1.0]\n    x ... interval between the frequencies (in semitones)\n    a = 1.2\n    b = 4.0\n    c = 3.5351 = 1 / (np.exp(-1.2) - np.exp(-4))\n\nParameters were \u201cchosen to give a maximal dissonance value at roughly\none quartertone, a dissonance of 1.00 at an interval of one semitone,\nand smaller values for larger intervals\u201d.\n\nThe constants ``a`` and ``b`` are quite different than in the\nSethares1993 model. Also the amplitudes are aggregated by mean, instead\nof product or minimum. The constant ``c`` is missing in the paper but\nneeds to be on the place as in the formula above.\n\nCook2006\n~~~~~~~~\n\nOther metrics: dissonance, tension, modality, tonal instability. Based\non three tones, not just an interval of two.\n\nDissonance model (Cook2006, eq. 3).\n\nNote that in the article it\u2019s actually defined in a wrong way: - there\u2019s\none more minus sign when applying ``beta_1``, ``beta_2`` - logarithm\nshould be of base 2 - ``log2(f_2 / f_1)`` needs to be multiplied by 12\nto get the 12-TET semitone interval - there should be bracket, not floor\naround the difference of exponentials (probably a printing error)\n\nNote: for the sake of readability we replace here original greek ``nu``\nwith ``v``.\n\n::\n\n    Original - wrong:\n    d_pair(f_1, f_2, a_1, a_2) =\n      x = log(f_2 / f_1)\n      v = a_1 * a_2\n      v * beta_3 *\n      floor(\n        exp(-beta_1 * x ^ gamma) -\n        exp(-beta_2 * x ^ gamma))\n\n    Fixed:\n    d_pair(f_1, f_2, a_1, a_2) =\n      x = 12 * log2(f_2 / f_1)\n      v = a_1 * a_2\n      v * beta_3 *\n      (exp(beta_1 * x ^ gamma) -\n       exp(beta_2 * x ^ gamma))\n\n    Constants:\n    beta_1 = -0.8 # \"interval of maximal dissonance\"\n    beta_2 = -1.6 # \"steepness of the fall from maximal dissonance\"\n    beta_3 = 4.0\n    gamma = 1.25\n\nTotal dissonance of a chords is the sum of dissonances of all pairs of\npartials.\n\nCook2009\n~~~~~~~~\n\nSimplified version of Cook2006. Still the definition is wrong (see\nabove).\n\nThere\u2019s no gamma exponent.\n\n::\n\n    Original - wrong:\n    d_pair(f_1, f_2, a_1, a_2) =\n      x = log(f_2 / f_1)\n      v = a_1 * a_2\n      v * beta_3 *\n      (exp(-beta_1 * x) -\n       exp(-beta_2 * x))\n\n    Fixed:\n    d_pair(f_1, f_2, a_1, a_2) =\n      x = 12 * log2(f_2 / f_1)\n      v = a_1 * a_2\n      v * beta_3 *\n      (exp(beta_1 * x) -\n       exp(beta_2 * x))\n\n    Constants:\n    beta_1 = -0.8 # \"interval of maximal dissonance\"\n    beta_2 = -1.6 # \"steepness of the fall from maximal dissonance\"\n    beta_3 = 4.0\n\nTension of a triad (not implemented yet):\n\n::\n\n    tension(f_1, f_2, f_3) =\n      x = log(f_2 / f_1)\n      y = log(f_3 / f_2)\n      v = a_1 * a_2 * a_3\n      v * exp(-((y - x) / alpha)^2)\n\n    alpha = ~0.6\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bzamecnik/dissonant", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "dissonant", "package_url": "https://pypi.org/project/dissonant/", "platform": "", "project_url": "https://pypi.org/project/dissonant/", "project_urls": {"Homepage": "https://github.com/bzamecnik/dissonant"}, "release_url": "https://pypi.org/project/dissonant/0.1.1/", "requires_dist": ["numpy"], "requires_python": "", "summary": "Musical chord dissonance models", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package implements various models of perceptual chord dissonance.\nGiven a musical chord composed of individual tones, each composed of\npartials, a dissonance model provides a score that estimate how\ndissonant (harsh) does it sound to human listener.</p>\n<p>It contains implementation of several models of dissoance with\ncorrections of errors found in the formulas in the papers. See below.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install dissonant\n</pre>\n<p>Why <tt>dissonant</tt>? PyPI package <tt>dissonance</tt> was already taken.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Dissonance of a C major chord with harmonic tones in 12-TET tuning with\nbase 440 Hz using the Sethares1993 model:</p>\n<pre>from dissonant import harmonic_tone, dissonance, pitch_to_freq\nfreqs, amps = harmonic_tone(pitch_to_freq([0, 4, 7, 12]), n_partials=10)\nd = dissonance(freqs, amps, model='sethares1993')\n</pre>\n<p>Dissonance curve of a sliding interval of two harmonic tones: see\n<a href=\"notebooks/dissonance_curve.ipynb\" rel=\"nofollow\">notebooks/dissonance_curve.ipynb</a>.</p>\n</div>\n<div id=\"papers\">\n<h2>Papers</h2>\n<ul>\n<li><a href=\"http://www.mpi.nl/world/materials/publications/levelt/Plomp_Levelt_Tonal_1965.pdf\" rel=\"nofollow\">1965, Plomp, Levelt - Tonal Consonance and Critical\nBandwidth</a></li>\n<li>1979, Hutchinson, Knopoff - The significance of the acoustic\ncomponent of consonance in Western triad</li>\n<li><a href=\"http://sethares.engr.wisc.edu/paperspdf/consonance.pdf\" rel=\"nofollow\">1993, Sethares - Local Consonance and the Relationship Between\nTimbre and\nScale</a><ul>\n<li><a href=\"http://sethares.engr.wisc.edu/papers/consance.html\" rel=\"nofollow\">http://sethares.engr.wisc.edu/papers/consance.html</a></li>\n</ul>\n</li>\n<li><a href=\"http://www.escom.org/proceedings/ICMPC2000/Wed/Vassilak.htm\" rel=\"nofollow\">2000, Vassilakis - Auditory roughness estimation of complex\nspectra</a><ul>\n<li>PDF is not public, only HTML</li>\n</ul>\n</li>\n<li><a href=\"http://www.acousticslab.org/papers/VassilakisP2001Dissertation.pdf\" rel=\"nofollow\">2001, Vassilakis - Perceptual and Physical Properties of Amplitude\nFluctuation and their Musical\nSignificance</a>\n- PhD thesis</li>\n<li><a href=\"http://www.res.kutc.kansai-u.ac.jp/~cook/PDFs/Tone_of_Voice_and_Mind.pdf\" rel=\"nofollow\">2002, Cook - Tone of Voice and\nMind</a>\n- book</li>\n<li><a href=\"http://eceserv0.ece.wisc.edu/~sethares/ttss.html\" rel=\"nofollow\">2004, Sethares - Tuning Timbre Spectrum\nScale</a> - book</li>\n<li><a href=\"http://www.acousticslab.org/papers/Vassilakis2005SRE.pdf\" rel=\"nofollow\">2005, Vassilakis - Auditory Roughness as Means of Musical\nExpression</a></li>\n<li><a href=\"http://homepages.abdn.ac.uk/mth192/pages/html/music.pdf\" rel=\"nofollow\">2006, Benson - David Benson Music: A Mathematical\nOffering</a>\n(<a href=\"http://homepages.abdn.ac.uk/mth192/pages/html/maths-music.html\" rel=\"nofollow\">book\npage</a>)</li>\n<li><a href=\"http://www.res.kutc.kansai-u.ac.jp/~cook/PDFs/EMR2006.pdf\" rel=\"nofollow\">2006, Cook, Fujisawa - The Psychophysics of Harmony Perception:\nHarmony is a Three-Tone\nPhenomenon</a></li>\n<li><a href=\"http://www.res.kutc.kansai-u.ac.jp/~cook/PDFs/MusPerc2009.pdf\" rel=\"nofollow\">2009, Cook - Harmony Perception: Harmoniousness Is More Than the Sum\nof Interval\nConsonance</a></li>\n<li><a href=\"http://acousticslab.org/papers/VassilakisKendall2010.pdf\" rel=\"nofollow\">2010, Vassilakis, Kendall - Psychoacoustic and congitive aspects of\nauditory roughness - definitions, models and\napplications</a></li>\n<li><a href=\"https://arxiv.org/pdf/1306.1344v5\" rel=\"nofollow\">2013, Dillon - Calculating the Dissonance of a Chord according to\nHelmholtz theory</a></li>\n</ul>\n<div id=\"extra\">\n<h3>Extra</h3>\n<ul>\n<li><a href=\"http://research.meei.harvard.edu/NeuralCoding/Papers/mckinneyISH.pdf\" rel=\"nofollow\">2001, McKinney et al. - Neural correlates of musical dissonance in\nthe inferior\ncolliculus</a></li>\n<li><a href=\"http://musicalgorithms.ewu.edu/learnmoresra/files/vassilakis2007smc.pdf\" rel=\"nofollow\">2007, Vassilakis - SRA: A Web-based Research Tool for Spectral and\nRoughness Analysis of Sound\nSignals</a><ul>\n<li><a href=\"http://musicalgorithms.ewu.edu/algorithms/Roughness.html\" rel=\"nofollow\">http://musicalgorithms.ewu.edu/algorithms/Roughness.html</a></li>\n<li><a href=\"http://musicalgorithms.ewu.edu/learnmoresra/moremodel.html\" rel=\"nofollow\">http://musicalgorithms.ewu.edu/learnmoresra/moremodel.html</a></li>\n</ul>\n</li>\n<li>Kameoka, A. &amp; Kuriyagawa, M. (1969a). Consonance theory, part I:\nConsonance of dyads. Journal of the Acoustical Society of America,\nVol. 45, No.\u00a06, pp.\u00a01451-1459.</li>\n<li>Kameoka, A. &amp; Kuriyagawa, M. (1969b). Consonance theory, part II:\nConsonance of complex tones and its computation method. Journal of\nthe Acoustical Society of America, Vol. 45, No.\u00a06, pp.\u00a01460-1469.</li>\n<li>Mashinter, Keith. (1995). Discrepancies in Theories of Sensory\nDissonance arising from the Models of Kameoka &amp; Kuriyagawa, and\nHutchinson &amp; Knopoff. Undergraduate thesis submitted for the double\nhonours degrees in Applied Mathematics and Music, University of\nWaterloo.</li>\n<li>Phil Keenan ([@ingthrumath](<a href=\"https://twitter.com/ingthrumath\" rel=\"nofollow\">https://twitter.com/ingthrumath</a>))<ul>\n<li><a href=\"http://meandering-through-mathematics.blogspot.com/2015/03/consonance-and-dissonance-in-music.html\" rel=\"nofollow\">http://meandering-through-mathematics.blogspot.com/2015/03/consonance-and-dissonance-in-music.html</a></li>\n<li><a href=\"http://meandering-through-mathematics.blogspot.com/2016/06/experimenting-with-sounds-consonance.html\" rel=\"nofollow\">http://meandering-through-mathematics.blogspot.com/2016/06/experimenting-with-sounds-consonance.html</a></li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"other-resources\">\n<h2>Other resources</h2>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Consonance_and_dissonance\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Consonance_and_dissonance</a></li>\n<li><a href=\"http://www.res.kutc.kansai-u.ac.jp/~cook/\" rel=\"nofollow\">http://www.res.kutc.kansai-u.ac.jp/~cook/</a><ul>\n<li><a href=\"http://www.res.kutc.kansai-u.ac.jp/~cook/05%20harmony.html\" rel=\"nofollow\">http://www.res.kutc.kansai-u.ac.jp/~cook/05%20harmony.html</a></li>\n<li><a href=\"http://www.res.kutc.kansai-u.ac.jp/~cook/Harmony.c\" rel=\"nofollow\">http://www.res.kutc.kansai-u.ac.jp/~cook/Harmony.c</a><ul>\n<li>N. D. Cook, T. Fujisawa and K. Takami. This program is an\nimproved version of the algorithm reported in Tone of Voice and\nMind (Benjamins, Amsterdam, 2002). It calculates the\ndissonance, tension, instability and modality of chords\ncontaining 2-5 tones and assuming the presence of 1-5 upper\npartials.</li>\n<li>video: <a href=\"https://www.youtube.com/watch?v=CrmnaiyS5EE\" rel=\"nofollow\">CogMIR 2013 - Norman D Cook - Visual Display of the\nAcoustical Properties of\nHarmony</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"http://sethares.engr.wisc.edu/consemi.html#anchor149613\" rel=\"nofollow\">http://sethares.engr.wisc.edu/consemi.html#anchor149613</a></li>\n<li><a href=\"http://sethares.engr.wisc.edu/forrestjava/html/TuningAndTimbre.html\" rel=\"nofollow\">http://sethares.engr.wisc.edu/forrestjava/html/TuningAndTimbre.html</a></li>\n<li><a href=\"http://sethares.engr.wisc.edu/comprog.html\" rel=\"nofollow\">http://sethares.engr.wisc.edu/comprog.html</a> - MATLAB, C++, Lisp</li>\n<li><a href=\"https://gist.github.com/endolith/3066664\" rel=\"nofollow\">https://gist.github.com/endolith/3066664</a></li>\n<li><a href=\"http://www.davideverotta.com/A_folders/Theory/m_dissonance.html\" rel=\"nofollow\">http://www.davideverotta.com/A_folders/Theory/m_dissonance.html</a></li>\n<li><a href=\"http://www.music-cog.ohio-state.edu/Music829B/diss.html\" rel=\"nofollow\">http://www.music-cog.ohio-state.edu/Music829B/diss.html</a></li>\n</ul>\n</div>\n<div id=\"models\">\n<h2>Models</h2>\n<p>There are several acoustic models of dissonance. They may work on\ndifferent data and provide several various metrics. All of them are\nbased on some perceptual experiments.</p>\n<p>Input signals:</p>\n<ul>\n<li>two plain sinusoidal tones</li>\n<li>two harmonic tones - integer multiples of the base frequency</li>\n<li>chord (two or more) of harmonic tones</li>\n<li>signals with continuous spectrum</li>\n</ul>\n<div id=\"plomplevelt1965\">\n<h3>PlompLevelt1965</h3>\n<p>They measured the perceived dissonance of pairs of sinusoidal tones and\nof complex tones with 6 harmonics. They provide only experimental data,\nnot a parametric model.</p>\n</div>\n<div id=\"sethares1993\">\n<h3>Sethares1993</h3>\n<p>First, he explicitly parameterizes the data of PlompLevelt1965 (for a\npair of sinusoids and for any number of complex tones) with constants\nfound by fitting the curve to the data.</p>\n<p>Dissonance <tt>d(x)</tt> for the difference <tt>x</tt> between a pair of\nfrequencies. This ignores the absolute frequencies.</p>\n<pre>d(x) = exp(-a * x) - exp(-b * x)\nConstants:\na = 3.5\nb = 5.75\n</pre>\n<p>Dissonance for a pair of frequencies <tt>(f_1, f_2)</tt> (for f_1 &lt; f_2) and\ntheir amplitudes <tt>(a_1, a_2)</tt>. This takes into account the absolute\nfrequencies. <tt>d_max</tt> is just the maximum of d(x).</p>\n<pre>d_pair(f_1, f_2, a_1, a_2) =\n  s = d_max / (s_1 * f_1 + s_2)\n  x = s * (f_2 - f_1)\n  a_1 * a_2 * (exp(-a * x) - exp(-b * x))\n\nConstants:\na = 3.5\nb = 5.75\nd_max = 0.24\ns_1 = 0.0207 # 0.021 in the paper\ns_2 = 18.96 # 19 in the paper\n</pre>\n<p>Expressed in terms of <tt>d(x)</tt>:</p>\n<pre>d_pair(f_1, f_2, a_1, a_2) = a_1 * a_2 * d((f_2 - f_1) * d_max / (s_1 * f_1 + s_2))\n</pre>\n<p>Model of dissonance of a single complex tone (containing various\npartials) is just the sum of dissonances for all pairs of partials. In\ncase the partials are integer multiples of a base frequency we can call\ntone \u201charmonic\u201d, otherwise just a general \u201ctimbre\u201d.</p>\n<pre>freqs = (f_1, f_2, ... f_n)\namps = (a_1, a_2, ... a_n)\nd_complex(freqs, amps) = 0.5 * sum([d(f_i, f_j, a_i, a_j) for i in range(n) for j in range(n)])\n\nor equally:\n\nd_complex(freqs, amps) = sum([\n  d(freqs[i], freqs[j], amps[i], amps[j])\n  for i in range(n)\n  for j in range(n)\n  if i &lt; j])\n</pre>\n<p>Then we can model dissonance of a pair of complex tones (timbres).\nBasically it\u2019s still a sum of dissonances of all pairs of partials. We\ncan however express <tt>freqs_2 = alpha * freqs_1</tt> and plot\n<tt>d_complex()</tt> for fixed <tt>freqs_1</tt> and varying <tt>alpha</tt> to get a\n\u201cdissonance curve\u201d.</p>\n<p>Note that this model can be used to model dissonance of intervals of\ncomplex tones, as well as chords (any number of tones).</p>\n<p>Note the constants <tt>s_1</tt>, <tt>s_2</tt> are defined in the paper with low\nprecision. Better precision is provided in the code by Mr.\u00a0Sethares:\n<a href=\"http://sethares.engr.wisc.edu/comprog.html\" rel=\"nofollow\">http://sethares.engr.wisc.edu/comprog.html</a>.</p>\n<div id=\"questions\">\n<h4>Questions?</h4>\n<p>Why we just sum the dissonance and not compute mean? Which aggregation\noperation makes more sense?</p>\n</div>\n</div>\n<div id=\"vassilakis2001\">\n<h3>Vassilakis2001</h3>\n<p>There\u2019s a modification to the <tt>d_pair()</tt> function which should make it\ndepend more reliably on \u201cSPL\u201d and \u201cAF-degree\u201d, in particular put more\naccent on the relative amplitudes of interfering sinusoids rather than\non thir absolute amplitudes.</p>\n<p>Defined in Eq.(6.23) on page 197 (219 in the PDF).</p>\n<pre>a_2 should be &gt;= a_1\nd_pair(f_1, f_2, a_1, a_2) =\n  (a_1 * a_2) ^ 0.1 * 0.5 *\n  ((2 * a_2) / (a_1 + a_2)) ^ 3.11 *\n  (exp(-a * s * (f_2 - f_1)) - exp(-b * s * (f_2 - f_1)))\n\nWhere:\nspl = a_1 * a_2\naf_degree = (2 * a_2) / (a_1 + a_2)\na = 3.5\nb = 5.75\nd_max = 0.24\ns_1 = 0.0207\ns_2 = 18.96\n\nIt can be expressed in terms of d(x):\n\nd_pair(f_1, f_2, a_1, a_2) =\n  spl = a_1 * a_2\n  af_degree = (2 * a_2) / (a_1 + a_2)\n  s = d_max / (s_1 * f_1 + s_2)\n  x = s * (f_2 - f_1)\n  spl ^ 0.1 * 0.5 * af_degree ^ 3.11 * d(x)\n</pre>\n<p>In comparison in the Sethares1993 model it is:</p>\n<pre>d_pair(f_1, f_2, a_1, a_2) =\n  spl = a_1 * a_2\n  s = d_max / (s_1 * f_1 + s_2)\n  x = (f_2 - f_1) * x\n  spl * d(x)\n</pre>\n<p>Note that in order to handle the case if a_1 &lt; a_2 we could define:</p>\n<pre>af_degree(a_1, a_2) = (2 * min(a_1, a_2)) / (a_1 + a_2)\n</pre>\n<p>Looking at Vassilakis2010 this is exactly what they do, extending\nVassilakis2001, otherwise the model is the same.</p>\n<p>Extending this to a set of complex tones is the same as in Sethares1993\n- just aggregate <tt>d_pair()</tt> for all pairs via a sum.</p>\n<p>Note there\u2019s an additional <tt>0.5</tt> factor in the Vassilakis2001 model\ncompared to Sethares1993. IMHO the meaning is to compensate for pairs of\npartials being summed twice. In order to make the models comparable we\nshould remove this term and take only pairs of partials only once in all\nmodels.</p>\n</div>\n<div id=\"cook2002\">\n<h3>Cook2002</h3>\n<p>Dissonance model (Cook2002, Appendix 2, page 276 and on, eg. A2-1):</p>\n<pre>Original - wrong:\nd_pair(x, a_1, a_2) =\n  mu_a = (a_1 + a_2) / 2\n  mu_a * (exp(-a * x) - exp(-b * x))\n\nFixed:\n  d_pair(x, a_1, a_2) =\n    mu_a = (a_1 + a_2) / 2\n    mu_a * c * (exp(-a * x) - exp(-b * x))\n\nWhere:\nmu_a ... mean amplitude, within [0.0; 1.0]\nx ... interval between the frequencies (in semitones)\na = 1.2\nb = 4.0\nc = 3.5351 = 1 / (np.exp(-1.2) - np.exp(-4))\n</pre>\n<p>Parameters were \u201cchosen to give a maximal dissonance value at roughly\none quartertone, a dissonance of 1.00 at an interval of one semitone,\nand smaller values for larger intervals\u201d.</p>\n<p>The constants <tt>a</tt> and <tt>b</tt> are quite different than in the\nSethares1993 model. Also the amplitudes are aggregated by mean, instead\nof product or minimum. The constant <tt>c</tt> is missing in the paper but\nneeds to be on the place as in the formula above.</p>\n</div>\n<div id=\"cook2006\">\n<h3>Cook2006</h3>\n<p>Other metrics: dissonance, tension, modality, tonal instability. Based\non three tones, not just an interval of two.</p>\n<p>Dissonance model (Cook2006, eq. 3).</p>\n<p>Note that in the article it\u2019s actually defined in a wrong way: - there\u2019s\none more minus sign when applying <tt>beta_1</tt>, <tt>beta_2</tt> - logarithm\nshould be of base 2 - <tt>log2(f_2 / f_1)</tt> needs to be multiplied by 12\nto get the 12-TET semitone interval - there should be bracket, not floor\naround the difference of exponentials (probably a printing error)</p>\n<p>Note: for the sake of readability we replace here original greek <tt>nu</tt>\nwith <tt>v</tt>.</p>\n<pre>Original - wrong:\nd_pair(f_1, f_2, a_1, a_2) =\n  x = log(f_2 / f_1)\n  v = a_1 * a_2\n  v * beta_3 *\n  floor(\n    exp(-beta_1 * x ^ gamma) -\n    exp(-beta_2 * x ^ gamma))\n\nFixed:\nd_pair(f_1, f_2, a_1, a_2) =\n  x = 12 * log2(f_2 / f_1)\n  v = a_1 * a_2\n  v * beta_3 *\n  (exp(beta_1 * x ^ gamma) -\n   exp(beta_2 * x ^ gamma))\n\nConstants:\nbeta_1 = -0.8 # \"interval of maximal dissonance\"\nbeta_2 = -1.6 # \"steepness of the fall from maximal dissonance\"\nbeta_3 = 4.0\ngamma = 1.25\n</pre>\n<p>Total dissonance of a chords is the sum of dissonances of all pairs of\npartials.</p>\n</div>\n<div id=\"cook2009\">\n<h3>Cook2009</h3>\n<p>Simplified version of Cook2006. Still the definition is wrong (see\nabove).</p>\n<p>There\u2019s no gamma exponent.</p>\n<pre>Original - wrong:\nd_pair(f_1, f_2, a_1, a_2) =\n  x = log(f_2 / f_1)\n  v = a_1 * a_2\n  v * beta_3 *\n  (exp(-beta_1 * x) -\n   exp(-beta_2 * x))\n\nFixed:\nd_pair(f_1, f_2, a_1, a_2) =\n  x = 12 * log2(f_2 / f_1)\n  v = a_1 * a_2\n  v * beta_3 *\n  (exp(beta_1 * x) -\n   exp(beta_2 * x))\n\nConstants:\nbeta_1 = -0.8 # \"interval of maximal dissonance\"\nbeta_2 = -1.6 # \"steepness of the fall from maximal dissonance\"\nbeta_3 = 4.0\n</pre>\n<p>Tension of a triad (not implemented yet):</p>\n<pre>tension(f_1, f_2, f_3) =\n  x = log(f_2 / f_1)\n  y = log(f_3 / f_2)\n  v = a_1 * a_2 * a_3\n  v * exp(-((y - x) / alpha)^2)\n\nalpha = ~0.6\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3729049, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "0ebe670c59768e1f7e4da6fdd44778f0", "sha256": "0070cd009ec78ac72c7741c49fad3f4c6c1f12d860d4ae9e15f8a739edc082c0"}, "downloads": -1, "filename": "dissonant-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0ebe670c59768e1f7e4da6fdd44778f0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12161, "upload_time": "2018-04-03T10:09:29", "upload_time_iso_8601": "2018-04-03T10:09:29.432522Z", "url": "https://files.pythonhosted.org/packages/b8/8d/015b6c51698024e690b3637559a5eb906a08afe054dfb2c5686ce0aa72cf/dissonant-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "815abbecf6fa91c99f709d705e4a631c", "sha256": "8bd4b3f9fc31a2680651d9e90cae0e0d056929686908a0f0fb974bbb641441e8"}, "downloads": -1, "filename": "dissonant-0.1.tar.gz", "has_sig": false, "md5_digest": "815abbecf6fa91c99f709d705e4a631c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7997, "upload_time": "2018-04-03T10:09:15", "upload_time_iso_8601": "2018-04-03T10:09:15.073891Z", "url": "https://files.pythonhosted.org/packages/2c/4e/17fa22caa713f0d2ff7a2e8d8a62139ca4efb68d2261a1f3c849d6efb7b2/dissonant-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "367bb78ad2a940abe6496225a9ad1a2d", "sha256": "e815cf882c519eb07875c7129ec8fd78b0d0e52add5c019b391285d12e03382e"}, "downloads": -1, "filename": "dissonant-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "367bb78ad2a940abe6496225a9ad1a2d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15405, "upload_time": "2018-04-03T10:21:51", "upload_time_iso_8601": "2018-04-03T10:21:51.829645Z", "url": "https://files.pythonhosted.org/packages/af/93/52409808732e7157456bdf193478a797a55c42e02425ffc48a72549e3c3f/dissonant-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec262a3e9fe1a858fe48b7c32a9fe252", "sha256": "216747bd0599fabd767b6b439c5532c0461712373dfbf44e707fbdf12fe7f935"}, "downloads": -1, "filename": "dissonant-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ec262a3e9fe1a858fe48b7c32a9fe252", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10089, "upload_time": "2018-04-03T10:21:53", "upload_time_iso_8601": "2018-04-03T10:21:53.179871Z", "url": "https://files.pythonhosted.org/packages/a9/d4/f7b44ffa7a4c66188320074af28a7e2cf952bbb9e372124265197913e967/dissonant-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "367bb78ad2a940abe6496225a9ad1a2d", "sha256": "e815cf882c519eb07875c7129ec8fd78b0d0e52add5c019b391285d12e03382e"}, "downloads": -1, "filename": "dissonant-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "367bb78ad2a940abe6496225a9ad1a2d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15405, "upload_time": "2018-04-03T10:21:51", "upload_time_iso_8601": "2018-04-03T10:21:51.829645Z", "url": "https://files.pythonhosted.org/packages/af/93/52409808732e7157456bdf193478a797a55c42e02425ffc48a72549e3c3f/dissonant-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec262a3e9fe1a858fe48b7c32a9fe252", "sha256": "216747bd0599fabd767b6b439c5532c0461712373dfbf44e707fbdf12fe7f935"}, "downloads": -1, "filename": "dissonant-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ec262a3e9fe1a858fe48b7c32a9fe252", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10089, "upload_time": "2018-04-03T10:21:53", "upload_time_iso_8601": "2018-04-03T10:21:53.179871Z", "url": "https://files.pythonhosted.org/packages/a9/d4/f7b44ffa7a4c66188320074af28a7e2cf952bbb9e372124265197913e967/dissonant-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:06 2020"}