{"info": {"author": "Fran\u00e7ois Wautier", "author_email": "francois@wautier.eu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "aioblescan\n==========\n\naioblescan is a Python 3/asyncio library to listen for BLE advertized\npackets.\n\nInstallation\n============\n\nWe are on PyPi so\n\n::\n\n    pip3 install aioblescan\n\nor\n\n::\n\n    python3 -m pip install aioblescan\n\nHow to use\n==========\n\nEssentially, you create a function to process the incoming information\nand you attach it to the ``BTScanRequester``. You then create a\nBluetooth connection, you issue the scan command and wait for incoming\npackets and process them.\n\nYou can use Eddystone or RuuviWeather to retrieve specific information\n\nThe easiest way is to look at the ``__main__.py`` file.\n\nYou can run the module with\n\n::\n\n   python3 -m aioblescan\n\nAdd ``-h`` for help.\n\nTo see the RuuviTag weather information try:\n\n::\n\n   python3 -m aioblescan -r\n\nYou will get\n\n::\n\n   Weather info {'rssi': -64, 'pressure': 100300, 'temperature': 24, 'mac address': 'fb:86:84:dd:aa:bb', 'tx_power': -7, 'humidity': 36.0}\n   Weather info {'rssi': -62, 'pressure': 100300, 'temperature': 24, 'mac address': 'fb:86:84:dd:aa:bb', 'tx_power': -7, 'humidity': 36.0}\n\nTo check Eddystone beacon\n\n::\n\n   python3 -m aioblescan -e\n\nYou get\n\n::\n\n   Google Beacon {'tx_power': -7, 'url': 'https://ruu.vi/#BEgYAMR8n', 'mac address': 'fb:86:84:dd:aa:bb', 'rssi': -52}\n   Google Beacon {'tx_power': -7, 'url': 'https://ruu.vi/#BEgYAMR8n', 'mac address': 'fb:86:84:dd:aa:bb', 'rssi': -53}\n\nFor a generic advertise packet scanning\n\n::\n\n   python3 -m aioblescan\n\nYou get\n\n::\n\n   HCI Event:\n       code:\n           3e\n       length:\n           19\n       LE Meta:\n           code:\n               02\n           Adv Report:\n               num reports:\n                   1\n               ev type:\n                   generic adv\n               addr type:\n                   public\n               peer:\n                   54:6c:0e:aa:bb:cc\n               length:\n                   7\n               flags:\n                   Simul LE - BR/EDR (Host): False\n                   Simul LE - BR/EDR (Control.): False\n                   BR/EDR Not Supported: False\n                   LE General Disc.: True\n                   LE Limited Disc.: False\n               Incomplete uuids:\n                       ff:30\n               rssi:\n                   -67\n   HCI Event:\n       code:\n           3e\n       length:\n           43\n       LE Meta:\n           code:\n               02\n           Adv Report:\n               num reports:\n                   1\n               ev type:\n                   no connection adv\n               addr type:\n                   random\n               peer:\n                   fb:86:84:dd:aa:bb\n               length:\n                   31\n               flags:\n                   Simul LE - BR/EDR (Host): False\n                   Simul LE - BR/EDR (Control.): False\n                   BR/EDR Not Supported: False\n                   LE General Disc.: True\n                   LE Limited Disc.: True\n               Complete uuids:\n                       fe:aa\n               Advertised Data:\n                   Service Data uuid:\n                       fe:aa\n                   Adv Payload:\n                       10:f9:03:72:75:75:2e:76:69:2f:23:42:45:77:59:41:4d:52:38:6e\n               rssi:\n                   -59\n\nHere the first packet is from a Wynd device, the second from a Ruuvi Tag\n\naioblescan can also send EddyStone advertising. Try the -a flag when\nrunning the module.\n\nFAQ\n===\n\nWhy not use scapy?\n\nScapy is great and you can do\n\n::\n\n        import scapy.all as sa\n        test=sa.BluetoothHCISocket(0)\n        command=sa.HCI_Cmd_LE_Set_Scan_Enable(enable=1,filter_dups=0)\n        chdr=sa.HCI_Command_Hdr(len=len(command))\n        hdr=sa.HCI_Hdr(type=1)\n        test.send(hdr / chdr / command)\n\nto get things going. But... the great thing with Scapy is that there is so many versions to choose from.... and not all have all the same functions ... and installation can be haphazard, with some version not installing at all. Also scapy includes a lot of other protocols and could be an overkill... lastly it is never too late to learn...\n\nWhat can you track?\n\naioblescan will try to parse all the incoming advertised information. You can see the raw data when it does not know what to do. With Eddystone beacon you can see the URL, Telemetry and UID", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/frawau/aioblescan", "keywords": "bluetooth,advertising,hci,ble", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aioblescan", "package_url": "https://pypi.org/project/aioblescan/", "platform": "", "project_url": "https://pypi.org/project/aioblescan/", "project_urls": {"Homepage": "http://github.com/frawau/aioblescan"}, "release_url": "https://pypi.org/project/aioblescan/0.2.6/", "requires_dist": null, "requires_python": "", "summary": "Scanning Bluetooth for advertised info with asyncio.", "version": "0.2.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"aioblescan\">\n<h2>aioblescan</h2>\n<p>aioblescan is a Python 3/asyncio library to listen for BLE advertized\npackets.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>We are on PyPi so</p>\n<pre>pip3 install aioblescan\n</pre>\n<p>or</p>\n<pre>python3 -m pip install aioblescan\n</pre>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<p>Essentially, you create a function to process the incoming information\nand you attach it to the <tt>BTScanRequester</tt>. You then create a\nBluetooth connection, you issue the scan command and wait for incoming\npackets and process them.</p>\n<p>You can use Eddystone or RuuviWeather to retrieve specific information</p>\n<p>The easiest way is to look at the <tt>__main__.py</tt> file.</p>\n<p>You can run the module with</p>\n<pre>python3 -m aioblescan\n</pre>\n<p>Add <tt><span class=\"pre\">-h</span></tt> for help.</p>\n<p>To see the RuuviTag weather information try:</p>\n<pre>python3 -m aioblescan -r\n</pre>\n<p>You will get</p>\n<pre>Weather info {'rssi': -64, 'pressure': 100300, 'temperature': 24, 'mac address': 'fb:86:84:dd:aa:bb', 'tx_power': -7, 'humidity': 36.0}\nWeather info {'rssi': -62, 'pressure': 100300, 'temperature': 24, 'mac address': 'fb:86:84:dd:aa:bb', 'tx_power': -7, 'humidity': 36.0}\n</pre>\n<p>To check Eddystone beacon</p>\n<pre>python3 -m aioblescan -e\n</pre>\n<p>You get</p>\n<pre>Google Beacon {'tx_power': -7, 'url': 'https://ruu.vi/#BEgYAMR8n', 'mac address': 'fb:86:84:dd:aa:bb', 'rssi': -52}\nGoogle Beacon {'tx_power': -7, 'url': 'https://ruu.vi/#BEgYAMR8n', 'mac address': 'fb:86:84:dd:aa:bb', 'rssi': -53}\n</pre>\n<p>For a generic advertise packet scanning</p>\n<pre>python3 -m aioblescan\n</pre>\n<p>You get</p>\n<pre>HCI Event:\n    code:\n        3e\n    length:\n        19\n    LE Meta:\n        code:\n            02\n        Adv Report:\n            num reports:\n                1\n            ev type:\n                generic adv\n            addr type:\n                public\n            peer:\n                54:6c:0e:aa:bb:cc\n            length:\n                7\n            flags:\n                Simul LE - BR/EDR (Host): False\n                Simul LE - BR/EDR (Control.): False\n                BR/EDR Not Supported: False\n                LE General Disc.: True\n                LE Limited Disc.: False\n            Incomplete uuids:\n                    ff:30\n            rssi:\n                -67\nHCI Event:\n    code:\n        3e\n    length:\n        43\n    LE Meta:\n        code:\n            02\n        Adv Report:\n            num reports:\n                1\n            ev type:\n                no connection adv\n            addr type:\n                random\n            peer:\n                fb:86:84:dd:aa:bb\n            length:\n                31\n            flags:\n                Simul LE - BR/EDR (Host): False\n                Simul LE - BR/EDR (Control.): False\n                BR/EDR Not Supported: False\n                LE General Disc.: True\n                LE Limited Disc.: True\n            Complete uuids:\n                    fe:aa\n            Advertised Data:\n                Service Data uuid:\n                    fe:aa\n                Adv Payload:\n                    10:f9:03:72:75:75:2e:76:69:2f:23:42:45:77:59:41:4d:52:38:6e\n            rssi:\n                -59\n</pre>\n<p>Here the first packet is from a Wynd device, the second from a Ruuvi Tag</p>\n<p>aioblescan can also send EddyStone advertising. Try the -a flag when\nrunning the module.</p>\n</div>\n<div id=\"faq\">\n<h2>FAQ</h2>\n<p>Why not use scapy?</p>\n<p>Scapy is great and you can do</p>\n<pre>import scapy.all as sa\ntest=sa.BluetoothHCISocket(0)\ncommand=sa.HCI_Cmd_LE_Set_Scan_Enable(enable=1,filter_dups=0)\nchdr=sa.HCI_Command_Hdr(len=len(command))\nhdr=sa.HCI_Hdr(type=1)\ntest.send(hdr / chdr / command)\n</pre>\n<p>to get things going. But\u2026 the great thing with Scapy is that there is so many versions to choose from\u2026. and not all have all the same functions \u2026 and installation can be haphazard, with some version not installing at all. Also scapy includes a lot of other protocols and could be an overkill\u2026 lastly it is never too late to learn\u2026</p>\n<p>What can you track?</p>\n<p>aioblescan will try to parse all the incoming advertised information. You can see the raw data when it does not know what to do. With Eddystone beacon you can see the URL, Telemetry and UID</p>\n</div>\n\n          </div>"}, "last_serial": 6553380, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b827b2b25a6bdd38e73ce01fcb962feb", "sha256": "ecf2928b0cbb6438c47d45db64946dabfbd48df7f983e2f64ef7edf1e87c79d0"}, "downloads": -1, "filename": "aioblescan-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b827b2b25a6bdd38e73ce01fcb962feb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8822, "upload_time": "2017-06-24T09:13:26", "upload_time_iso_8601": "2017-06-24T09:13:26.202160Z", "url": "https://files.pythonhosted.org/packages/4e/37/7ad9499f05a21e07aa329a38b20ce1bb63956cb741520e9b24687dd56370/aioblescan-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7e53f816b6b81f59aacd50f6949f2a31", "sha256": "eeb0ec5869556d11b95c4a0ed7c669f162ff7e2c40bae5ae9bbfaec9552f774a"}, "downloads": -1, "filename": "aioblescan-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7e53f816b6b81f59aacd50f6949f2a31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8216, "upload_time": "2017-06-25T05:22:08", "upload_time_iso_8601": "2017-06-25T05:22:08.297433Z", "url": "https://files.pythonhosted.org/packages/02/90/771f9946ea623a6f6a50e506f4be189c98961ec6fcea8bbcc7ff5899057a/aioblescan-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b2d881cba88ebe9416815bcff73315c3", "sha256": "5e7efddf1acb71397268da5c1febd2416f712ef81c1b5ec00826bc287b5b9e4f"}, "downloads": -1, "filename": "aioblescan-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b2d881cba88ebe9416815bcff73315c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8829, "upload_time": "2017-06-26T08:29:58", "upload_time_iso_8601": "2017-06-26T08:29:58.511865Z", "url": "https://files.pythonhosted.org/packages/48/d9/9723a062ca056976483477b31e36ea19d8c1d26b1b8d874c11dda25e47d5/aioblescan-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "ec89adf8b17887c17a3b6569eedc5168", "sha256": "1e41969e4e5c326dc9a5c3c43cec5dc0210f5784317b2df56bd1b2c429a3f901"}, "downloads": -1, "filename": "aioblescan-0.1.3.tar.gz", "has_sig": false, "md5_digest": "ec89adf8b17887c17a3b6569eedc5168", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8975, "upload_time": "2017-06-26T09:35:51", "upload_time_iso_8601": "2017-06-26T09:35:51.524693Z", "url": "https://files.pythonhosted.org/packages/db/bd/0312110ca2e7a3fb2a27ae34927aa21a33e5b13cd65551d7002ae392f456/aioblescan-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "eebd7f85cddd2ca989b86a533f6c3bab", "sha256": "f6e6d35a7931e966bb54696e9e8b2c4e7b7eea08c25847ba2ea31c6f04948ee3"}, "downloads": -1, "filename": "aioblescan-0.1.4.tar.gz", "has_sig": false, "md5_digest": "eebd7f85cddd2ca989b86a533f6c3bab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8994, "upload_time": "2017-10-30T16:48:22", "upload_time_iso_8601": "2017-10-30T16:48:22.136904Z", "url": "https://files.pythonhosted.org/packages/8b/6e/c2d66d0b385bca6342dfdafb9437c4a2217e7a376e9e558ebbba62904c84/aioblescan-0.1.4.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "877df182efe44dd6416db57ef9d0e0a7", "sha256": "a7309b78e942eec2e6078af65c5032b281bce9139b813fe146f3170c1f66dda1"}, "downloads": -1, "filename": "aioblescan-0.2.0.tar.gz", "has_sig": false, "md5_digest": "877df182efe44dd6416db57ef9d0e0a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13282, "upload_time": "2017-12-12T08:53:33", "upload_time_iso_8601": "2017-12-12T08:53:33.384744Z", "url": "https://files.pythonhosted.org/packages/a4/69/077248ecd38a746c118810c5b3949fce4625c6b4e6972f1dccce8d5d0f57/aioblescan-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "961c871a34798dc488bc82ada4ad48fc", "sha256": "d2bcc96d6a65940a143220af1d563990926b3a1b8e3722f5ba9fe9bc7ac2cd64"}, "downloads": -1, "filename": "aioblescan-0.2.1.tar.gz", "has_sig": false, "md5_digest": "961c871a34798dc488bc82ada4ad48fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13890, "upload_time": "2018-06-20T14:29:10", "upload_time_iso_8601": "2018-06-20T14:29:10.620117Z", "url": "https://files.pythonhosted.org/packages/a2/d5/b036512dc57a168e07927f79322c24fcac654dcbf5a29962184ef972136d/aioblescan-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "7648d4832ea8cef3f861df79bd70faf3", "sha256": "bd03b3a6ad609939fcf825de8e72d3e8dc8337f698da23fab352bf21215f4bbc"}, "downloads": -1, "filename": "aioblescan-0.2.2.tar.gz", "has_sig": false, "md5_digest": "7648d4832ea8cef3f861df79bd70faf3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14267, "upload_time": "2018-12-02T14:29:01", "upload_time_iso_8601": "2018-12-02T14:29:01.779833Z", "url": "https://files.pythonhosted.org/packages/df/35/818df4baa28dbf986c3715d717b1b0d69d145ae8235502d76f4f05ba8ec2/aioblescan-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "1b7596817e6d43bdc8603d97edd47281", "sha256": "2b19adb5e02f69f42b018b3022a80c3eb6156442e85bbfe7219edaeee5a52d2e"}, "downloads": -1, "filename": "aioblescan-0.2.3.tar.gz", "has_sig": false, "md5_digest": "1b7596817e6d43bdc8603d97edd47281", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14078, "upload_time": "2019-01-05T06:05:43", "upload_time_iso_8601": "2019-01-05T06:05:43.889192Z", "url": "https://files.pythonhosted.org/packages/09/11/8364ac320c5b915bf8b6f82a60aeeb2cace52a5c60ea9bbb0315092033d0/aioblescan-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "b662f44828a99430d4ed42c843ddb89c", "sha256": "d613f24ffdb3dae48d6157443f76708f0c791034036330d00272af6b408b2c6c"}, "downloads": -1, "filename": "aioblescan-0.2.4.tar.gz", "has_sig": false, "md5_digest": "b662f44828a99430d4ed42c843ddb89c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14450, "upload_time": "2019-01-06T12:16:20", "upload_time_iso_8601": "2019-01-06T12:16:20.112904Z", "url": "https://files.pythonhosted.org/packages/a9/ad/1e2f41b2036bd76079f88cd94ce35b5a996d937dccaf432ea6b8092d3e11/aioblescan-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "d50b1eb2e1a54ed47752283d2a546ea7", "sha256": "68a0465e1a8918da60bb8e0e5eb6f98bd12d06c208b2b17148576ea9ce6306f9"}, "downloads": -1, "filename": "aioblescan-0.2.5.tar.gz", "has_sig": false, "md5_digest": "d50b1eb2e1a54ed47752283d2a546ea7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19262, "upload_time": "2020-02-01T06:10:00", "upload_time_iso_8601": "2020-02-01T06:10:00.072638Z", "url": "https://files.pythonhosted.org/packages/2d/32/a568320b5c5c0f1800d5d5605d8182396269e092e6f1e1b138c8c96ee8d8/aioblescan-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "9ad3f04ea7ad4c81a53f8e1316985527", "sha256": "2e45c325e070a0ee4e952a7d0c56e95ad230643e1057fb5f3e95ea5c99081436"}, "downloads": -1, "filename": "aioblescan-0.2.6.tar.gz", "has_sig": false, "md5_digest": "9ad3f04ea7ad4c81a53f8e1316985527", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19223, "upload_time": "2020-02-01T07:08:02", "upload_time_iso_8601": "2020-02-01T07:08:02.789135Z", "url": "https://files.pythonhosted.org/packages/66/b8/888c2eb4323ed498dbc7deeb8aee0cfec9edd8c25184b06a8874bb0cf84f/aioblescan-0.2.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9ad3f04ea7ad4c81a53f8e1316985527", "sha256": "2e45c325e070a0ee4e952a7d0c56e95ad230643e1057fb5f3e95ea5c99081436"}, "downloads": -1, "filename": "aioblescan-0.2.6.tar.gz", "has_sig": false, "md5_digest": "9ad3f04ea7ad4c81a53f8e1316985527", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19223, "upload_time": "2020-02-01T07:08:02", "upload_time_iso_8601": "2020-02-01T07:08:02.789135Z", "url": "https://files.pythonhosted.org/packages/66/b8/888c2eb4323ed498dbc7deeb8aee0cfec9edd8c25184b06a8874bb0cf84f/aioblescan-0.2.6.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:47 2020"}