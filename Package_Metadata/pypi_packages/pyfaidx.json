{"info": {"author": "Matthew Shirley", "author_email": "mdshw5@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: Unix", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "|Travis| |PyPI| |Coverage| |Depsy|\n\nDescription\n-----------\n\nSamtools provides a function \"faidx\" (FAsta InDeX), which creates a\nsmall flat index file \".fai\" allowing for fast random access to any\nsubsequence in the indexed FASTA file, while loading a minimal amount of the\nfile in to memory. This python module implements pure Python classes for\nindexing, retrieval, and in-place modification of FASTA files using a samtools\ncompatible index. The pyfaidx module is API compatible with the `pygr`_ seqdb module.\nA command-line script \"`faidx`_\" is installed alongside the pyfaidx module, and\nfacilitates complex manipulation of FASTA files without any programming knowledge.\n\n.. _`pygr`: https://github.com/cjlee112/pygr\n\nIf you use pyfaidx in your publication, please cite:\n\n`Shirley MD`_, `Ma Z`_, `Pedersen B`_, `Wheelan S`_. `Efficient \"pythonic\" access to FASTA files using pyfaidx <https://dx.doi.org/10.7287/peerj.preprints.970v1>`_. PeerJ PrePrints 3:e1196. 2015.\n\n.. _`Shirley MD`: http://github.com/mdshw5\n.. _`Ma Z`: http://github.com/azalea\n.. _`Pedersen B`: http://github.com/brentp\n.. _`Wheelan S`: http://github.com/swheelan\n\nInstallation\n------------\n\nThis package is tested under Linux, MacOS, and Windows using Python 3.2-3.4, 2.7, 2.6, and pypy and is available from the PyPI:\n\n::\n\n    pip install pyfaidx  # add --user if you don't have root\n\nor download a `release <https://github.com/mdshw5/pyfaidx/releases>`_ and:\n\n::\n\n    python setup.py install\n\nIf using ``pip install --user`` make sure to add ``/home/$(whoami)/.local/bin`` to your ``$PATH`` if you want to run the ``faidx`` script.\n\nUsage\n-----\n\n.. code:: python\n\n    >>> from pyfaidx import Fasta\n    >>> genes = Fasta('tests/data/genes.fasta')\n    >>> genes\n    Fasta(\"tests/data/genes.fasta\")  # set strict_bounds=True for bounds checking\n\nActs like a dictionary.\n\n.. code:: python\n\n    >>> genes.keys()\n    ('AB821309.1', 'KF435150.1', 'KF435149.1', 'NR_104216.1', 'NR_104215.1', 'NR_104212.1', 'NM_001282545.1', 'NM_001282543.1', 'NM_000465.3', 'NM_001282549.1', 'NM_001282548.1', 'XM_005249645.1', 'XM_005249644.1', 'XM_005249643.1', 'XM_005249642.1', 'XM_005265508.1', 'XM_005265507.1', 'XR_241081.1', 'XR_241080.1', 'XR_241079.1')\n\n    >>> genes['NM_001282543.1'][200:230]\n    >NM_001282543.1:201-230\n    CTCGTTCCGCGCCCGCCATGGAACCGGATG\n\n    >>> genes['NM_001282543.1'][200:230].seq\n    'CTCGTTCCGCGCCCGCCATGGAACCGGATG'\n\n    >>> genes['NM_001282543.1'][200:230].name\n    'NM_001282543.1'\n\n    # Start attributes are 1-based\n    >>> genes['NM_001282543.1'][200:230].start\n    201\n\n    # End attributes are 0-based\n    >>> genes['NM_001282543.1'][200:230].end\n    230\n\n    >>> genes['NM_001282543.1'][200:230].fancy_name\n    'NM_001282543.1:201-230'\n\n    >>> len(genes['NM_001282543.1'])\n    5466\n\nNote that start and end coordinates of Sequence objects are [1, 0]. This can be changed to [0, 0] by passing ``one_based_attributes=False`` to ``Fasta`` or ``Faidx``. This argument only affects the ``Sequence .start/.end`` attributes, and has no effect on slicing coordinates.\n\nIndexes like a list:\n\n.. code:: python\n\n    >>> genes[0][:50]\n    >AB821309.1:1-50\n    ATGGTCAGCTGGGGTCGTTTCATCTGCCTGGTCGTGGTCACCATGGCAAC\n\nSlices just like a string:\n\n.. code:: python\n\n    >>> genes['NM_001282543.1'][200:230][:10]\n    >NM_001282543.1:201-210\n    CTCGTTCCGC\n\n    >>> genes['NM_001282543.1'][200:230][::-1]\n    >NM_001282543.1:230-201\n    GTAGGCCAAGGTACCGCCCGCGCCTTGCTC\n\n    >>> genes['NM_001282543.1'][200:230][::3]\n    >NM_001282543.1:201-230\n    CGCCCCTACA\n\n    >>> genes['NM_001282543.1'][:]\n    >NM_001282543.1:1-5466\n    CCCCGCCCCT........\n\n- Slicing start and end coordinates are 0-based, just like Python sequences.\n\nComplements and reverse complements just like DNA\n\n.. code:: python\n\n    >>> genes['NM_001282543.1'][200:230].complement\n    >NM_001282543.1 (complement):201-230\n    GAGCAAGGCGCGGGCGGTACCTTGGCCTAC\n\n    >>> genes['NM_001282543.1'][200:230].reverse\n    >NM_001282543.1:230-201\n    GTAGGCCAAGGTACCGCCCGCGCCTTGCTC\n\n    >>> -genes['NM_001282543.1'][200:230]\n    >NM_001282543.1 (complement):230-201\n    CATCCGGTTCCATGGCGGGCGCGGAACGAG\n\n``Fasta`` objects can also be accessed using method calls:\n\n.. code:: python\n\n    >>> genes.get_seq('NM_001282543.1', 201, 210)\n    >NM_001282543.1:201-210\n    CTCGTTCCGC\n\n    >>> genes.get_seq('NM_001282543.1', 201, 210, rc=True)\n    >NM_001282543.1 (complement):210-201\n    GCGGAACGAG\n\nSpliced sequences can be retrieved from a list of [start, end] coordinates:\n**TODO** update this section\n\n.. code:: python\n\n    # new in v0.5.1\n    segments = [[1, 10], [50, 70]]\n    >>> genes.get_spliced_seq('NM_001282543.1', segments)\n    >gi|543583786|ref|NM_001282543.1|:1-70\n    CCCCGCCCCTGGTTTCGAGTCGCTGGCCTGC\n\n.. _keyfn:\n\nCustom key functions provide cleaner access:\n\n.. code:: python\n\n    >>> from pyfaidx import Fasta\n    >>> genes = Fasta('tests/data/genes.fasta', key_function = lambda x: x.split('.')[0])\n    >>> genes.keys()\n    dict_keys(['NR_104212', 'NM_001282543', 'XM_005249644', 'XM_005249645', 'NR_104216', 'XM_005249643', 'NR_104215', 'KF435150', 'AB821309', 'NM_001282549', 'XR_241081', 'KF435149', 'XR_241079', 'NM_000465', 'XM_005265508', 'XR_241080', 'XM_005249642', 'NM_001282545', 'XM_005265507', 'NM_001282548'])\n    >>> genes['NR_104212'][:10]\n    >NR_104212:1-10\n    CCCCGCCCCT\n\nYou can specify a character to split names on, which will generate additional entries:\n\n.. code:: python\n\n    >>> from pyfaidx import Fasta\n    >>> genes = Fasta('tests/data/genes.fasta', split_char='.', duplicate_action=\"first\") # default duplicate_action=\"stop\"\n    >>> genes.keys()\n    dict_keys(['.1', 'NR_104212', 'NM_001282543', 'XM_005249644', 'XM_005249645', 'NR_104216', 'XM_005249643', 'NR_104215', 'KF435150', 'AB821309', 'NM_001282549', 'XR_241081', 'KF435149', 'XR_241079', 'NM_000465', 'XM_005265508', 'XR_241080', 'XM_005249642', 'NM_001282545', 'XM_005265507', 'NM_001282548'])\n\nIf your `key_function` or `split_char` generates duplicate entries, you can choose what action to take:\n\n.. code:: python\n\n    # new in v0.4.9\n    >>> genes = Fasta('tests/data/genes.fasta', split_char=\"|\", duplicate_action=\"longest\")\n    >>> genes.keys()\n    dict_keys(['gi', '563317589', 'dbj', 'AB821309.1', '', '557361099', 'gb', 'KF435150.1', '557361097', 'KF435149.1', '543583796', 'ref', 'NR_104216.1', '543583795', 'NR_104215.1', '543583794', 'NR_104212.1', '543583788', 'NM_001282545.1', '543583786', 'NM_001282543.1', '543583785', 'NM_000465.3', '543583740', 'NM_001282549.1', '543583738', 'NM_001282548.1', '530384540', 'XM_005249645.1', '530384538', 'XM_005249644.1', '530384536', 'XM_005249643.1', '530384534', 'XM_005249642.1', '530373237','XM_005265508.1', '530373235', 'XM_005265507.1', '530364726', 'XR_241081.1', '530364725', 'XR_241080.1', '530364724', 'XR_241079.1'])\n\nFilter functions (returning True) limit the index:\n\n.. code:: python\n\n    # new in v0.3.8\n    >>> from pyfaidx import Fasta\n    >>> genes = Fasta('tests/data/genes.fasta', filt_function = lambda x: x[0] == 'N')\n    >>> genes.keys()\n    dict_keys(['NR_104212', 'NM_001282543', 'NR_104216', 'NR_104215', 'NM_001282549', 'NM_000465', 'NM_001282545', 'NM_001282548'])\n    >>> genes['XM_005249644']\n    KeyError: XM_005249644 not in tests/data/genes.fasta.\n\nOr just get a Python string:\n\n.. code:: python\n\n    >>> from pyfaidx import Fasta\n    >>> genes = Fasta('tests/data/genes.fasta', as_raw=True)\n    >>> genes\n    Fasta(\"tests/data/genes.fasta\", as_raw=True)\n\n    >>> genes['NM_001282543.1'][200:230]\n    CTCGTTCCGCGCCCGCCATGGAACCGGATG\n\nYou can make sure that you always receive an uppercase sequence, even if your fasta file has lower case\n\n.. code:: python\n\n    >>> from pyfaidx import Fasta\n    >>> reference = Fasta('tests/data/genes.fasta.lower', sequence_always_upper=True)\n    >>> reference['gi|557361099|gb|KF435150.1|'][1:70]\n\n    >gi|557361099|gb|KF435150.1|:2-70\n    TGACATCATTTTCCACCTCTGCTCAGTGTTCAACATCTGACAGTGCTTGCAGGATCTCTCCTGGACAAA\n\n\nYou can also perform line-based iteration, receiving the sequence lines as they appear in the FASTA file:\n\n.. code:: python\n\n    >>> from pyfaidx import Fasta\n    >>> genes = Fasta('tests/data/genes.fasta')\n    >>> for line in genes['NM_001282543.1']:\n    ...   print(line)\n    CCCCGCCCCTCTGGCGGCCCGCCGTCCCAGACGCGGGAAGAGCTTGGCCGGTTTCGAGTCGCTGGCCTGC\n    AGCTTCCCTGTGGTTTCCCGAGGCTTCCTTGCTTCCCGCTCTGCGAGGAGCCTTTCATCCGAAGGCGGGA\n    CGATGCCGGATAATCGGCAGCCGAGGAACCGGCAGCCGAGGATCCGCTCCGGGAACGAGCCTCGTTCCGC\n    ...\n\nSequence names are truncated on any whitespace. This is a limitation of the indexing strategy. However, full names can be recovered:\n\n.. code:: python\n\n    # new in v0.3.7\n    >>> from pyfaidx import Fasta\n    >>> genes = Fasta('tests/data/genes.fasta')\n    >>> for record in genes:\n    ...   print(record.name)\n    ...   print(record.long_name)\n    ...\n    gi|563317589|dbj|AB821309.1|\n    gi|563317589|dbj|AB821309.1| Homo sapiens FGFR2-AHCYL1 mRNA for FGFR2-AHCYL1 fusion kinase protein, complete cds\n    gi|557361099|gb|KF435150.1|\n    gi|557361099|gb|KF435150.1| Homo sapiens MDM4 protein variant Y (MDM4) mRNA, complete cds, alternatively spliced\n    gi|557361097|gb|KF435149.1|\n    gi|557361097|gb|KF435149.1| Homo sapiens MDM4 protein variant G (MDM4) mRNA, complete cds\n    ...\n\n    # new in v0.4.9\n    >>> from pyfaidx import Fasta\n    >>> genes = Fasta('tests/data/genes.fasta', read_long_names=True)\n    >>> for record in genes:\n    ...   print(record.name)\n    ...\n    gi|563317589|dbj|AB821309.1| Homo sapiens FGFR2-AHCYL1 mRNA for FGFR2-AHCYL1 fusion kinase protein, complete cds\n    gi|557361099|gb|KF435150.1| Homo sapiens MDM4 protein variant Y (MDM4) mRNA, complete cds, alternatively spliced\n    gi|557361097|gb|KF435149.1| Homo sapiens MDM4 protein variant G (MDM4) mRNA, complete cds\n\nRecords can be accessed efficiently as numpy arrays:\n\n.. code:: python\n\n    # new in v0.5.4\n    >>> from pyfaidx import Fasta\n    >>> import numpy as np\n    >>> genes = Fasta('tests/data/genes.fasta')\n    >>> np.asarray(genes['NM_001282543.1'])\n    array(['C', 'C', 'C', ..., 'A', 'A', 'A'], dtype='|S1')\n\nSequence can be buffered in memory using a read-ahead buffer\nfor fast sequential access:\n\n.. code:: python\n\n    >>> from timeit import timeit\n    >>> fetch = \"genes['NM_001282543.1'][200:230]\"\n    >>> read_ahead = \"import pyfaidx; genes = pyfaidx.Fasta('tests/data/genes.fasta', read_ahead=10000)\"\n    >>> no_read_ahead = \"import pyfaidx; genes = pyfaidx.Fasta('tests/data/genes.fasta')\"\n    >>> string_slicing = \"genes = {}; genes['NM_001282543.1'] = 'N'*10000\"\n\n    >>> timeit(fetch, no_read_ahead, number=10000)\n    0.2204863309962093\n    >>> timeit(fetch, read_ahead, number=10000)\n    0.1121859749982832\n    >>> timeit(fetch, string_slicing, number=10000)\n    0.0033553699977346696\n\nRead-ahead buffering can reduce runtime by 1/2 for sequential accesses to buffered regions.\n\n.. role:: red\n\nIf you want to modify the contents of your FASTA file in-place, you can use the `mutable` argument.\nAny portion of the FastaRecord can be replaced with an equivalent-length string.\n:red:`Warning`: *This will change the contents of your file immediately and permanently:*\n\n.. code:: python\n\n    >>> genes = Fasta('tests/data/genes.fasta', mutable=True)\n    >>> type(genes['NM_001282543.1'])\n    <class 'pyfaidx.MutableFastaRecord'>\n\n    >>> genes['NM_001282543.1'][:10]\n    >NM_001282543.1:1-10\n    CCCCGCCCCT\n    >>> genes['NM_001282543.1'][:10] = 'NNNNNNNNNN'\n    >>> genes['NM_001282543.1'][:15]\n    >NM_001282543.1:1-15\n    NNNNNNNNNNCTGGC\n\nThe FastaVariant class provides a way to integrate single nucleotide variant calls to generate a consensus sequence.\n\n.. code:: python\n\n    # new in v0.4.0\n    >>> consensus = FastaVariant('tests/data/chr22.fasta', 'tests/data/chr22.vcf.gz', het=True, hom=True)\n    RuntimeWarning: Using sample NA06984 genotypes.\n\n    >>> consensus['22'].variant_sites\n    (16042793, 21833121, 29153196, 29187373, 29187448, 29194610, 29821295, 29821332, 29993842, 32330460, 32352284)\n\n    >>> consensus['22'][16042790:16042800]\n    >22:16042791-16042800\n    TCGTAGGACA\n\n    >>> Fasta('tests/data/chr22.fasta')['22'][16042790:16042800]\n    >22:16042791-16042800\n    TCATAGGACA\n\n    >>> consensus = FastaVariant('tests/data/chr22.fasta', 'tests/data/chr22.vcf.gz', sample='NA06984', het=True, hom=True, call_filter='GT == \"0/1\"')\n    >>> consensus['22'].variant_sites\n    (16042793, 29187373, 29187448, 29194610, 29821332)\n\n.. _faidx:\n\nIt also provides a command-line script:\n\ncli script: faidx\n~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    Fetch sequences from FASTA. If no regions are specified, all entries in the\n    input file are returned. Input FASTA file must be consistently line-wrapped,\n    and line wrapping of output is based on input line lengths.\n\n    positional arguments:\n      fasta                 FASTA file\n      regions               space separated regions of sequence to fetch e.g.\n                            chr1:1-1000\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -b BED, --bed BED     bed file of regions\n      -o OUT, --out OUT     output file name (default: stdout)\n      -i {bed,chromsizes,nucleotide,transposed}, --transform {bed,chromsizes,nucleotide,transposed} transform the requested regions into another format. default: None\n      -c, --complement      complement the sequence. default: False\n      -r, --reverse         reverse the sequence. default: False\n      -a SIZE_RANGE, --size-range SIZE_RANGE\n                            selected sequences are in the size range [low, high]. example: 1,1000 default: None\n      -n, --no-names        omit sequence names from output. default: False\n      -f, --full-names      output full names including description. default: False\n      -x, --split-files     write each region to a separate file (names are derived from regions)\n      -l, --lazy            fill in --default-seq for missing ranges. default: False\n      -s DEFAULT_SEQ, --default-seq DEFAULT_SEQ\n                            default base for missing positions and masking. default: None\n      -d DELIMITER, --delimiter DELIMITER\n                            delimiter for splitting names to multiple values (duplicate names will be discarded). default: None\n      -e HEADER_FUNCTION, --header-function HEADER_FUNCTION\n                            python function to modify header lines e.g: \"lambda x: x.split(\"|\")[0]\". default: lambda x: x.split()[0]\n      -u {stop,first,last,longest,shortest}, --duplicates-action {stop,first,last,longest,shortest}\n                            entry to take when duplicate sequence names are encountered. default: stop\n      -g REGEX, --regex REGEX\n                            selected sequences are those matching regular expression. default: .*\n      -v, --invert-match    selected sequences are those not matching 'regions' argument. default: False\n      -m, --mask-with-default-seq\n                            mask the FASTA file using --default-seq default: False\n      -M, --mask-by-case    mask the FASTA file by changing to lowercase. default: False\n      -e HEADER_FUNCTION, --header-function HEADER_FUNCTION\n                            python function to modify header lines e.g: \"lambda x: x.split(\"|\")[0]\". default: None\n      --no-rebuild          do not rebuild the .fai index even if it is out of date. default: False\n      --version             print pyfaidx version number\n\nExamples:\n\n.. code:: bash\n\n    $ faidx tests/data/genes.fasta NM_001282543.1:201-210 NM_001282543.1:300-320\n    >NM_001282543.1:201-210\n    CTCGTTCCGC\n    >NM_001282543.1:300-320\n    GTAATTGTGTAAGTGACTGCA\n\n    $ faidx --full-names tests/data/genes.fasta NM_001282543.1:201-210\n    >NM_001282543.1| Homo sapiens BRCA1 associated RING domain 1 (BARD1), transcript variant 2, mRNA\n    CTCGTTCCGC\n\n    $ faidx --no-names tests/data/genes.fasta NM_001282543.1:201-210 NM_001282543.1:300-320\n    CTCGTTCCGC\n    GTAATTGTGTAAGTGACTGCA\n\n    $ faidx --complement tests/data/genes.fasta NM_001282543.1:201-210\n    >NM_001282543.1:201-210 (complement)\n    GAGCAAGGCG\n\n    $ faidx --reverse tests/data/genes.fasta NM_001282543.1:201-210\n    >NM_001282543.1:210-201\n    CGCCTTGCTC\n\n    $ faidx --reverse --complement tests/data/genes.fasta NM_001282543.1:201-210\n    >NM_001282543.1:210-201 (complement)\n    GCGGAACGAG\n\n    $ faidx tests/data/genes.fasta NM_001282543.1\n    >NM_001282543.1:1-5466\n    CCCCGCCCCT........\n    ..................\n    ..................\n    ..................\n\n    $ faidx --regex \"^NM_00128254[35]\" genes.fasta\n    >NM_001282543.1\n    ..................\n    ..................\n    ..................\n    >NM_001282545.1\n    ..................\n    ..................\n    ..................\n\n    $ faidx --lazy tests/data/genes.fasta NM_001282543.1:5460-5480\n    >NM_001282543.1:5460-5480\n    AAAAAAANNNNNNNNNNNNNN\n\n    $ faidx --lazy --default-seq='Q' tests/data/genes.fasta NM_001282543.1:5460-5480\n    >NM_001282543.1:5460-5480\n    AAAAAAAQQQQQQQQQQQQQQ\n\n    $ faidx tests/data/genes.fasta --bed regions.bed\n    ...\n\n    $ faidx --transform chromsizes tests/data/genes.fasta\n    AB821309.1\t3510\n    KF435150.1\t481\n    KF435149.1\t642\n    NR_104216.1\t4573\n    NR_104215.1\t5317\n    NR_104212.1\t5374\n    ...\n\n    $ faidx --transform bed tests/data/genes.fasta\n    AB821309.1\t1    3510\n    KF435150.1\t1    481\n    KF435149.1\t1    642\n    NR_104216.1\t1   4573\n    NR_104215.1\t1   5317\n    NR_104212.1\t1   5374\n    ...\n\n    $ faidx --transform nucleotide tests/data/genes.fasta\n    name\tstart\tend\tA\tT\tC\tG\tN\n    AB821309.1\t1\t3510\t955\t774\t837\t944\t0\n    KF435150.1\t1\t481\t149\t120\t103\t109\t0\n    KF435149.1\t1\t642\t201\t163\t129\t149\t0\n    NR_104216.1\t1\t4573\t1294\t1552\t828\t899\t0\n    NR_104215.1\t1\t5317\t1567\t1738\t968\t1044\t0\n    NR_104212.1\t1\t5374\t1581\t1756\t977\t1060\t0\n    ...\n\n    faidx --transform transposed tests/data/genes.fasta\n    AB821309.1\t1\t3510\tATGGTCAGCTGGGGTCGTTTCATC...\n    KF435150.1\t1\t481\tATGACATCATTTTCCACCTCTGCT...\n    KF435149.1\t1\t642\tATGACATCATTTTCCACCTCTGCT...\n    NR_104216.1\t1\t4573\tCCCCGCCCCTCTGGCGGCCCGCCG...\n    NR_104215.1\t1\t5317\tCCCCGCCCCTCTGGCGGCCCGCCG...\n    NR_104212.1\t1\t5374\tCCCCGCCCCTCTGGCGGCCCGCCG...\n    ...\n\n    $ faidx --split-files tests/data/genes.fasta\n    $ ls\n    AB821309.1.fasta\tNM_001282549.1.fasta\tXM_005249645.1.fasta\n    KF435149.1.fasta\tNR_104212.1.fasta\tXM_005265507.1.fasta\n    KF435150.1.fasta\tNR_104215.1.fasta\tXM_005265508.1.fasta\n    NM_000465.3.fasta\tNR_104216.1.fasta\tXR_241079.1.fasta\n    NM_001282543.1.fasta\tXM_005249642.1.fasta\tXR_241080.1.fasta\n    NM_001282545.1.fasta\tXM_005249643.1.fasta\tXR_241081.1.fasta\n    NM_001282548.1.fasta\tXM_005249644.1.fasta\n\n    $ faidx --delimiter='_' tests/data/genes.fasta 000465.3\n    >000465.3\n    CCCCGCCCCTCTGGCGGCCCGCCGTCCCAGACGCGGGAAGAGCTTGGCCGGTTTCGAGTCGCTGGCCTGC\n    AGCTTCCCTGTGGTTTCCCGAGGCTTCCTTGCTTCCCGCTCTGCGAGGAGCCTTTCATCCGAAGGCGGGA\n    .......\n\n    $ faidx --size-range 5500,6000 -i chromsizes tests/data/genes.fasta\n    NM_000465.3\t5523\n\n    $ faidx -m --bed regions.bed tests/data/genes.fasta\n    ### Modifies tests/data/genes.fasta by masking regions using --default-seq character ###\n\n    $ faidx -M --bed regions.bed tests/data/genes.fasta\n    ### Modifies tests/data/genes.fasta by masking regions using lowercase characters ###\n\n    $ faidx -e \"lambda x: x.split('.')[0]\" tests/data/genes.fasta -i bed\n    AB821309\t1\t3510\n    KF435150\t1\t481\n    KF435149\t1\t642\n    NR_104216\t1\t4573\n    NR_104215\t1\t5317\n    .......\n\n\nSimilar syntax as ``samtools faidx``\n\n\nA lower-level Faidx class is also available:\n\n.. code:: python\n\n    >>> from pyfaidx import Faidx\n    >>> fa = Faidx('genes.fa')  # can return str with as_raw=True\n    >>> fa.index\n    OrderedDict([('AB821309.1', IndexRecord(rlen=3510, offset=12, lenc=70, lenb=71)), ('KF435150.1', IndexRecord(rlen=481, offset=3585, lenc=70, lenb=71)),... ])\n\n    >>> fa.index['AB821309.1'].rlen\n    3510\n\n    fa.fetch('AB821309.1', 1, 10)  # these are 1-based genomic coordinates\n    >AB821309.1:1-10\n    ATGGTCAGCT\n\n\n-  If the FASTA file is not indexed, when ``Faidx`` is initialized the\n   ``build_index`` method will automatically run, and\n   the index will be written to \"filename.fa.fai\" with ``write_fai()``.\n   where \"filename.fa\" is the original FASTA file.\n-  Start and end coordinates are 1-based.\n\nSupport for compressed FASTA\n----------------------------\n\n``pyfaidx`` can create and read ``.fai`` indices for FASTA files that have\nbeen compressed using the `bgzip <https://www.htslib.org/doc/bgzip.html>`_\ntool from `samtools <http://www.htslib.org/>`_. ``bgzip`` writes compressed\ndata in a ``BGZF`` format. ``BGZF`` is ``gzip`` compatible, consisting of\nmultiple concatenated ``gzip`` blocks, each with an additional ``gzip``\nheader making it possible to build an index for rapid random access. I.e.,\nfiles compressed with ``bgzip`` are valid ``gzip`` and so can be read by\n``gunzip``.  See `this description\n<http://pydoc.net/Python/biopython/1.66/Bio.bgzf/>`_ for more details on\n``bgzip``.\n\nChangelog\n---------\n\nPlease see the `releases <https://github.com/mdshw5/pyfaidx/releases>`_ for a\ncomprehensive list of version changes.\n\nKnown issues\n------------\n\nI try to fix as many bugs as possible, but most of this work is supported by a single developer. Please check the `known issues <https://github.com/mdshw5/pyfaidx/issues?utf8=\u2713&q=is%3Aissue+is%3Aopen+label%3Aknown>`_ for bugs relevant to your work. Pull requests are welcome.\n\n\nContributing\n------------\n\nCreate a new Pull Request with one feature. If you add a new feature, please\ncreate also the relevant test.\n\nTo get test running on your machine:\n - Create a new virtualenv and install the `dev-requirements.txt`.\n - Download the test data running:\n\n      python tests/data/download_gene_fasta.py\n\n - Run the tests with\n\n      nosetests --with-coverage --cover-package=pyfaidx\n\nAcknowledgements\n----------------\n\nThis project is freely licensed by the author, `Matthew\nShirley <http://mattshirley.com>`_, and was completed under the\nmentorship and financial support of Drs. `Sarah\nWheelan <http://sjwheelan.som.jhmi.edu>`_ and `Vasan\nYegnasubramanian <http://yegnalab.onc.jhmi.edu>`_ at the Sidney Kimmel\nComprehensive Cancer Center in the Department of Oncology.\n\n.. |Travis| image:: https://travis-ci.org/mdshw5/pyfaidx.svg?branch=master\n    :target: https://travis-ci.org/mdshw5/pyfaidx\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/pyfaidx.svg?branch=master\n    :target: https://pypi.python.org/pypi/pyfaidx\n\n.. |Landscape| image:: https://landscape.io/github/mdshw5/pyfaidx/master/landscape.svg\n   :target: https://landscape.io/github/mdshw5/pyfaidx/master\n   :alt: Code Health\n\n.. |Coverage| image:: https://codecov.io/gh/mdshw5/pyfaidx/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/mdshw5/pyfaidx\n\n.. |Depsy| image:: http://depsy.org/api/package/pypi/pyfaidx/badge.svg\n   :target: http://depsy.org/package/python/pyfaidx\n\n.. |Appveyor| image:: https://ci.appveyor.com/api/projects/status/80ihlw30a003596w?svg=true\n   :target: https://ci.appveyor.com/project/mdshw5/pyfaidx", "description_content_type": "", "docs_url": "https://pythonhosted.org/pyfaidx/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://mattshirley.com", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "pyfaidx", "package_url": "https://pypi.org/project/pyfaidx/", "platform": "", "project_url": "https://pypi.org/project/pyfaidx/", "project_urls": {"Homepage": "http://mattshirley.com"}, "release_url": "https://pypi.org/project/pyfaidx/0.5.8/", "requires_dist": null, "requires_python": "", "summary": "pyfaidx: efficient pythonic random access to fasta subsequences", "version": "0.5.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/mdshw5/pyfaidx\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35998318ba6bf898dd1491626e00e277aac2f0b4/68747470733a2f2f7472617669732d63692e6f72672f6d64736877352f707966616964782e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/pyfaidx\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2163f453f275035ede0146f35febba457260f9ac/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707966616964782e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/gh/mdshw5/pyfaidx\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40144622025b5755eb9c793b6579c88b9df30f4b/68747470733a2f2f636f6465636f762e696f2f67682f6d64736877352f707966616964782f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a> <a href=\"http://depsy.org/package/python/pyfaidx\" rel=\"nofollow\"><img alt=\"Depsy\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9dd2948350bf5ca0b14be03d28c312ac2378b94/687474703a2f2f64657073792e6f72672f6170692f7061636b6167652f707970692f707966616964782f62616467652e737667\"></a></p>\n<div id=\"description\">\n<h2>Description</h2>\n<p>Samtools provides a function \u201cfaidx\u201d (FAsta InDeX), which creates a\nsmall flat index file \u201c.fai\u201d allowing for fast random access to any\nsubsequence in the indexed FASTA file, while loading a minimal amount of the\nfile in to memory. This python module implements pure Python classes for\nindexing, retrieval, and in-place modification of FASTA files using a samtools\ncompatible index. The pyfaidx module is API compatible with the <a href=\"https://github.com/cjlee112/pygr\" rel=\"nofollow\">pygr</a> seqdb module.\nA command-line script \u201c<a href=\"#faidx\" rel=\"nofollow\">faidx</a>\u201d is installed alongside the pyfaidx module, and\nfacilitates complex manipulation of FASTA files without any programming knowledge.</p>\n<p>If you use pyfaidx in your publication, please cite:</p>\n<p><a href=\"http://github.com/mdshw5\" rel=\"nofollow\">Shirley MD</a>, <a href=\"http://github.com/azalea\" rel=\"nofollow\">Ma Z</a>, <a href=\"http://github.com/brentp\" rel=\"nofollow\">Pedersen B</a>, <a href=\"http://github.com/swheelan\" rel=\"nofollow\">Wheelan S</a>. <a href=\"https://dx.doi.org/10.7287/peerj.preprints.970v1\" rel=\"nofollow\">Efficient \u201cpythonic\u201d access to FASTA files using pyfaidx</a>. PeerJ PrePrints 3:e1196. 2015.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>This package is tested under Linux, MacOS, and Windows using Python 3.2-3.4, 2.7, 2.6, and pypy and is available from the PyPI:</p>\n<pre>pip install pyfaidx  # add --user if you don't have root\n</pre>\n<p>or download a <a href=\"https://github.com/mdshw5/pyfaidx/releases\" rel=\"nofollow\">release</a> and:</p>\n<pre>python setup.py install\n</pre>\n<p>If using <tt>pip install <span class=\"pre\">--user</span></tt> make sure to add <tt><span class=\"pre\">/home/$(whoami)/.local/bin</span></tt> to your <tt>$PATH</tt> if you want to run the <tt>faidx</tt> script.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyfaidx</span> <span class=\"kn\">import</span> <span class=\"n\">Fasta</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span> <span class=\"o\">=</span> <span class=\"n\">Fasta</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/genes.fasta'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span>\n<span class=\"n\">Fasta</span><span class=\"p\">(</span><span class=\"s2\">\"tests/data/genes.fasta\"</span><span class=\"p\">)</span>  <span class=\"c1\"># set strict_bounds=True for bounds checking</span>\n</pre>\n<p>Acts like a dictionary.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n<span class=\"p\">(</span><span class=\"s1\">'AB821309.1'</span><span class=\"p\">,</span> <span class=\"s1\">'KF435150.1'</span><span class=\"p\">,</span> <span class=\"s1\">'KF435149.1'</span><span class=\"p\">,</span> <span class=\"s1\">'NR_104216.1'</span><span class=\"p\">,</span> <span class=\"s1\">'NR_104215.1'</span><span class=\"p\">,</span> <span class=\"s1\">'NR_104212.1'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282545.1'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_000465.3'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282549.1'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282548.1'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005249645.1'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005249644.1'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005249643.1'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005249642.1'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005265508.1'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005265507.1'</span><span class=\"p\">,</span> <span class=\"s1\">'XR_241081.1'</span><span class=\"p\">,</span> <span class=\"s1\">'XR_241080.1'</span><span class=\"p\">,</span> <span class=\"s1\">'XR_241079.1'</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">][</span><span class=\"mi\">200</span><span class=\"p\">:</span><span class=\"mi\">230</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;</span><span class=\"n\">NM_001282543</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">201</span><span class=\"o\">-</span><span class=\"mi\">230</span>\n<span class=\"n\">CTCGTTCCGCGCCCGCCATGGAACCGGATG</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">][</span><span class=\"mi\">200</span><span class=\"p\">:</span><span class=\"mi\">230</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">seq</span>\n<span class=\"s1\">'CTCGTTCCGCGCCCGCCATGGAACCGGATG'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">][</span><span class=\"mi\">200</span><span class=\"p\">:</span><span class=\"mi\">230</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span>\n<span class=\"s1\">'NM_001282543.1'</span>\n\n<span class=\"c1\"># Start attributes are 1-based</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">][</span><span class=\"mi\">200</span><span class=\"p\">:</span><span class=\"mi\">230</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">start</span>\n<span class=\"mi\">201</span>\n\n<span class=\"c1\"># End attributes are 0-based</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">][</span><span class=\"mi\">200</span><span class=\"p\">:</span><span class=\"mi\">230</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">end</span>\n<span class=\"mi\">230</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">][</span><span class=\"mi\">200</span><span class=\"p\">:</span><span class=\"mi\">230</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">fancy_name</span>\n<span class=\"s1\">'NM_001282543.1:201-230'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">])</span>\n<span class=\"mi\">5466</span>\n</pre>\n<p>Note that start and end coordinates of Sequence objects are [1, 0]. This can be changed to [0, 0] by passing <tt>one_based_attributes=False</tt> to <tt>Fasta</tt> or <tt>Faidx</tt>. This argument only affects the <tt>Sequence <span class=\"pre\">.start/.end</span></tt> attributes, and has no effect on slicing coordinates.</p>\n<p>Indexes like a list:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][:</span><span class=\"mi\">50</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;</span><span class=\"n\">AB821309</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"mi\">50</span>\n<span class=\"n\">ATGGTCAGCTGGGGTCGTTTCATCTGCCTGGTCGTGGTCACCATGGCAAC</span>\n</pre>\n<p>Slices just like a string:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">][</span><span class=\"mi\">200</span><span class=\"p\">:</span><span class=\"mi\">230</span><span class=\"p\">][:</span><span class=\"mi\">10</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;</span><span class=\"n\">NM_001282543</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">201</span><span class=\"o\">-</span><span class=\"mi\">210</span>\n<span class=\"n\">CTCGTTCCGC</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">][</span><span class=\"mi\">200</span><span class=\"p\">:</span><span class=\"mi\">230</span><span class=\"p\">][::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;</span><span class=\"n\">NM_001282543</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">230</span><span class=\"o\">-</span><span class=\"mi\">201</span>\n<span class=\"n\">GTAGGCCAAGGTACCGCCCGCGCCTTGCTC</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">][</span><span class=\"mi\">200</span><span class=\"p\">:</span><span class=\"mi\">230</span><span class=\"p\">][::</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;</span><span class=\"n\">NM_001282543</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">201</span><span class=\"o\">-</span><span class=\"mi\">230</span>\n<span class=\"n\">CGCCCCTACA</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">][:]</span>\n<span class=\"o\">&gt;</span><span class=\"n\">NM_001282543</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"mi\">5466</span>\n<span class=\"n\">CCCCGCCCCT</span><span class=\"o\">........</span>\n</pre>\n<ul>\n<li>Slicing start and end coordinates are 0-based, just like Python sequences.</li>\n</ul>\n<p>Complements and reverse complements just like DNA</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">][</span><span class=\"mi\">200</span><span class=\"p\">:</span><span class=\"mi\">230</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">complement</span>\n<span class=\"o\">&gt;</span><span class=\"n\">NM_001282543</span><span class=\"o\">.</span><span class=\"mi\">1</span> <span class=\"p\">(</span><span class=\"n\">complement</span><span class=\"p\">):</span><span class=\"mi\">201</span><span class=\"o\">-</span><span class=\"mi\">230</span>\n<span class=\"n\">GAGCAAGGCGCGGGCGGTACCTTGGCCTAC</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">][</span><span class=\"mi\">200</span><span class=\"p\">:</span><span class=\"mi\">230</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">reverse</span>\n<span class=\"o\">&gt;</span><span class=\"n\">NM_001282543</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">230</span><span class=\"o\">-</span><span class=\"mi\">201</span>\n<span class=\"n\">GTAGGCCAAGGTACCGCCCGCGCCTTGCTC</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"o\">-</span><span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">][</span><span class=\"mi\">200</span><span class=\"p\">:</span><span class=\"mi\">230</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;</span><span class=\"n\">NM_001282543</span><span class=\"o\">.</span><span class=\"mi\">1</span> <span class=\"p\">(</span><span class=\"n\">complement</span><span class=\"p\">):</span><span class=\"mi\">230</span><span class=\"o\">-</span><span class=\"mi\">201</span>\n<span class=\"n\">CATCCGGTTCCATGGCGGGCGCGGAACGAG</span>\n</pre>\n<p><tt>Fasta</tt> objects can also be accessed using method calls:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"o\">.</span><span class=\"n\">get_seq</span><span class=\"p\">(</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">,</span> <span class=\"mi\">201</span><span class=\"p\">,</span> <span class=\"mi\">210</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span><span class=\"n\">NM_001282543</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">201</span><span class=\"o\">-</span><span class=\"mi\">210</span>\n<span class=\"n\">CTCGTTCCGC</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"o\">.</span><span class=\"n\">get_seq</span><span class=\"p\">(</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">,</span> <span class=\"mi\">201</span><span class=\"p\">,</span> <span class=\"mi\">210</span><span class=\"p\">,</span> <span class=\"n\">rc</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span><span class=\"n\">NM_001282543</span><span class=\"o\">.</span><span class=\"mi\">1</span> <span class=\"p\">(</span><span class=\"n\">complement</span><span class=\"p\">):</span><span class=\"mi\">210</span><span class=\"o\">-</span><span class=\"mi\">201</span>\n<span class=\"n\">GCGGAACGAG</span>\n</pre>\n<p>Spliced sequences can be retrieved from a list of [start, end] coordinates:\n<strong>TODO</strong> update this section</p>\n<pre><span class=\"c1\"># new in v0.5.1</span>\n<span class=\"n\">segments</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">70</span><span class=\"p\">]]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"o\">.</span><span class=\"n\">get_spliced_seq</span><span class=\"p\">(</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">,</span> <span class=\"n\">segments</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span><span class=\"n\">gi</span><span class=\"o\">|</span><span class=\"mi\">543583786</span><span class=\"o\">|</span><span class=\"n\">ref</span><span class=\"o\">|</span><span class=\"n\">NM_001282543</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"o\">|</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"mi\">70</span>\n<span class=\"n\">CCCCGCCCCTGGTTTCGAGTCGCTGGCCTGC</span>\n</pre>\n<p id=\"keyfn\">Custom key functions provide cleaner access:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyfaidx</span> <span class=\"kn\">import</span> <span class=\"n\">Fasta</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span> <span class=\"o\">=</span> <span class=\"n\">Fasta</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/genes.fasta'</span><span class=\"p\">,</span> <span class=\"n\">key_function</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'.'</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n<span class=\"n\">dict_keys</span><span class=\"p\">([</span><span class=\"s1\">'NR_104212'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282543'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005249644'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005249645'</span><span class=\"p\">,</span> <span class=\"s1\">'NR_104216'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005249643'</span><span class=\"p\">,</span> <span class=\"s1\">'NR_104215'</span><span class=\"p\">,</span> <span class=\"s1\">'KF435150'</span><span class=\"p\">,</span> <span class=\"s1\">'AB821309'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282549'</span><span class=\"p\">,</span> <span class=\"s1\">'XR_241081'</span><span class=\"p\">,</span> <span class=\"s1\">'KF435149'</span><span class=\"p\">,</span> <span class=\"s1\">'XR_241079'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_000465'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005265508'</span><span class=\"p\">,</span> <span class=\"s1\">'XR_241080'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005249642'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282545'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005265507'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282548'</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NR_104212'</span><span class=\"p\">][:</span><span class=\"mi\">10</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;</span><span class=\"n\">NR_104212</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"mi\">10</span>\n<span class=\"n\">CCCCGCCCCT</span>\n</pre>\n<p>You can specify a character to split names on, which will generate additional entries:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyfaidx</span> <span class=\"kn\">import</span> <span class=\"n\">Fasta</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span> <span class=\"o\">=</span> <span class=\"n\">Fasta</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/genes.fasta'</span><span class=\"p\">,</span> <span class=\"n\">split_char</span><span class=\"o\">=</span><span class=\"s1\">'.'</span><span class=\"p\">,</span> <span class=\"n\">duplicate_action</span><span class=\"o\">=</span><span class=\"s2\">\"first\"</span><span class=\"p\">)</span> <span class=\"c1\"># default duplicate_action=\"stop\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n<span class=\"n\">dict_keys</span><span class=\"p\">([</span><span class=\"s1\">'.1'</span><span class=\"p\">,</span> <span class=\"s1\">'NR_104212'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282543'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005249644'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005249645'</span><span class=\"p\">,</span> <span class=\"s1\">'NR_104216'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005249643'</span><span class=\"p\">,</span> <span class=\"s1\">'NR_104215'</span><span class=\"p\">,</span> <span class=\"s1\">'KF435150'</span><span class=\"p\">,</span> <span class=\"s1\">'AB821309'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282549'</span><span class=\"p\">,</span> <span class=\"s1\">'XR_241081'</span><span class=\"p\">,</span> <span class=\"s1\">'KF435149'</span><span class=\"p\">,</span> <span class=\"s1\">'XR_241079'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_000465'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005265508'</span><span class=\"p\">,</span> <span class=\"s1\">'XR_241080'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005249642'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282545'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005265507'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282548'</span><span class=\"p\">])</span>\n</pre>\n<p>If your <cite>key_function</cite> or <cite>split_char</cite> generates duplicate entries, you can choose what action to take:</p>\n<pre><span class=\"c1\"># new in v0.4.9</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span> <span class=\"o\">=</span> <span class=\"n\">Fasta</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/genes.fasta'</span><span class=\"p\">,</span> <span class=\"n\">split_char</span><span class=\"o\">=</span><span class=\"s2\">\"|\"</span><span class=\"p\">,</span> <span class=\"n\">duplicate_action</span><span class=\"o\">=</span><span class=\"s2\">\"longest\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n<span class=\"n\">dict_keys</span><span class=\"p\">([</span><span class=\"s1\">'gi'</span><span class=\"p\">,</span> <span class=\"s1\">'563317589'</span><span class=\"p\">,</span> <span class=\"s1\">'dbj'</span><span class=\"p\">,</span> <span class=\"s1\">'AB821309.1'</span><span class=\"p\">,</span> <span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"s1\">'557361099'</span><span class=\"p\">,</span> <span class=\"s1\">'gb'</span><span class=\"p\">,</span> <span class=\"s1\">'KF435150.1'</span><span class=\"p\">,</span> <span class=\"s1\">'557361097'</span><span class=\"p\">,</span> <span class=\"s1\">'KF435149.1'</span><span class=\"p\">,</span> <span class=\"s1\">'543583796'</span><span class=\"p\">,</span> <span class=\"s1\">'ref'</span><span class=\"p\">,</span> <span class=\"s1\">'NR_104216.1'</span><span class=\"p\">,</span> <span class=\"s1\">'543583795'</span><span class=\"p\">,</span> <span class=\"s1\">'NR_104215.1'</span><span class=\"p\">,</span> <span class=\"s1\">'543583794'</span><span class=\"p\">,</span> <span class=\"s1\">'NR_104212.1'</span><span class=\"p\">,</span> <span class=\"s1\">'543583788'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282545.1'</span><span class=\"p\">,</span> <span class=\"s1\">'543583786'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">,</span> <span class=\"s1\">'543583785'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_000465.3'</span><span class=\"p\">,</span> <span class=\"s1\">'543583740'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282549.1'</span><span class=\"p\">,</span> <span class=\"s1\">'543583738'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282548.1'</span><span class=\"p\">,</span> <span class=\"s1\">'530384540'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005249645.1'</span><span class=\"p\">,</span> <span class=\"s1\">'530384538'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005249644.1'</span><span class=\"p\">,</span> <span class=\"s1\">'530384536'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005249643.1'</span><span class=\"p\">,</span> <span class=\"s1\">'530384534'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005249642.1'</span><span class=\"p\">,</span> <span class=\"s1\">'530373237'</span><span class=\"p\">,</span><span class=\"s1\">'XM_005265508.1'</span><span class=\"p\">,</span> <span class=\"s1\">'530373235'</span><span class=\"p\">,</span> <span class=\"s1\">'XM_005265507.1'</span><span class=\"p\">,</span> <span class=\"s1\">'530364726'</span><span class=\"p\">,</span> <span class=\"s1\">'XR_241081.1'</span><span class=\"p\">,</span> <span class=\"s1\">'530364725'</span><span class=\"p\">,</span> <span class=\"s1\">'XR_241080.1'</span><span class=\"p\">,</span> <span class=\"s1\">'530364724'</span><span class=\"p\">,</span> <span class=\"s1\">'XR_241079.1'</span><span class=\"p\">])</span>\n</pre>\n<p>Filter functions (returning True) limit the index:</p>\n<pre><span class=\"c1\"># new in v0.3.8</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyfaidx</span> <span class=\"kn\">import</span> <span class=\"n\">Fasta</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span> <span class=\"o\">=</span> <span class=\"n\">Fasta</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/genes.fasta'</span><span class=\"p\">,</span> <span class=\"n\">filt_function</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'N'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n<span class=\"n\">dict_keys</span><span class=\"p\">([</span><span class=\"s1\">'NR_104212'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282543'</span><span class=\"p\">,</span> <span class=\"s1\">'NR_104216'</span><span class=\"p\">,</span> <span class=\"s1\">'NR_104215'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282549'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_000465'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282545'</span><span class=\"p\">,</span> <span class=\"s1\">'NM_001282548'</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'XM_005249644'</span><span class=\"p\">]</span>\n<span class=\"ne\">KeyError</span><span class=\"p\">:</span> <span class=\"n\">XM_005249644</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">genes</span><span class=\"o\">.</span><span class=\"n\">fasta</span><span class=\"o\">.</span>\n</pre>\n<p>Or just get a Python string:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyfaidx</span> <span class=\"kn\">import</span> <span class=\"n\">Fasta</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span> <span class=\"o\">=</span> <span class=\"n\">Fasta</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/genes.fasta'</span><span class=\"p\">,</span> <span class=\"n\">as_raw</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span>\n<span class=\"n\">Fasta</span><span class=\"p\">(</span><span class=\"s2\">\"tests/data/genes.fasta\"</span><span class=\"p\">,</span> <span class=\"n\">as_raw</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">][</span><span class=\"mi\">200</span><span class=\"p\">:</span><span class=\"mi\">230</span><span class=\"p\">]</span>\n<span class=\"n\">CTCGTTCCGCGCCCGCCATGGAACCGGATG</span>\n</pre>\n<p>You can make sure that you always receive an uppercase sequence, even if your fasta file has lower case</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyfaidx</span> <span class=\"kn\">import</span> <span class=\"n\">Fasta</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">reference</span> <span class=\"o\">=</span> <span class=\"n\">Fasta</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/genes.fasta.lower'</span><span class=\"p\">,</span> <span class=\"n\">sequence_always_upper</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">reference</span><span class=\"p\">[</span><span class=\"s1\">'gi|557361099|gb|KF435150.1|'</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">70</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;</span><span class=\"n\">gi</span><span class=\"o\">|</span><span class=\"mi\">557361099</span><span class=\"o\">|</span><span class=\"n\">gb</span><span class=\"o\">|</span><span class=\"n\">KF435150</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"o\">|</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"o\">-</span><span class=\"mi\">70</span>\n<span class=\"n\">TGACATCATTTTCCACCTCTGCTCAGTGTTCAACATCTGACAGTGCTTGCAGGATCTCTCCTGGACAAA</span>\n</pre>\n<p>You can also perform line-based iteration, receiving the sequence lines as they appear in the FASTA file:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyfaidx</span> <span class=\"kn\">import</span> <span class=\"n\">Fasta</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span> <span class=\"o\">=</span> <span class=\"n\">Fasta</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/genes.fasta'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">]:</span>\n<span class=\"o\">...</span>   <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n<span class=\"n\">CCCCGCCCCTCTGGCGGCCCGCCGTCCCAGACGCGGGAAGAGCTTGGCCGGTTTCGAGTCGCTGGCCTGC</span>\n<span class=\"n\">AGCTTCCCTGTGGTTTCCCGAGGCTTCCTTGCTTCCCGCTCTGCGAGGAGCCTTTCATCCGAAGGCGGGA</span>\n<span class=\"n\">CGATGCCGGATAATCGGCAGCCGAGGAACCGGCAGCCGAGGATCCGCTCCGGGAACGAGCCTCGTTCCGC</span>\n<span class=\"o\">...</span>\n</pre>\n<p>Sequence names are truncated on any whitespace. This is a limitation of the indexing strategy. However, full names can be recovered:</p>\n<pre><span class=\"c1\"># new in v0.3.7</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyfaidx</span> <span class=\"kn\">import</span> <span class=\"n\">Fasta</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span> <span class=\"o\">=</span> <span class=\"n\">Fasta</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/genes.fasta'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">record</span> <span class=\"ow\">in</span> <span class=\"n\">genes</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>   <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>   <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">long_name</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"n\">gi</span><span class=\"o\">|</span><span class=\"mi\">563317589</span><span class=\"o\">|</span><span class=\"n\">dbj</span><span class=\"o\">|</span><span class=\"n\">AB821309</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"o\">|</span>\n<span class=\"n\">gi</span><span class=\"o\">|</span><span class=\"mi\">563317589</span><span class=\"o\">|</span><span class=\"n\">dbj</span><span class=\"o\">|</span><span class=\"n\">AB821309</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"o\">|</span> <span class=\"n\">Homo</span> <span class=\"n\">sapiens</span> <span class=\"n\">FGFR2</span><span class=\"o\">-</span><span class=\"n\">AHCYL1</span> <span class=\"n\">mRNA</span> <span class=\"k\">for</span> <span class=\"n\">FGFR2</span><span class=\"o\">-</span><span class=\"n\">AHCYL1</span> <span class=\"n\">fusion</span> <span class=\"n\">kinase</span> <span class=\"n\">protein</span><span class=\"p\">,</span> <span class=\"n\">complete</span> <span class=\"n\">cds</span>\n<span class=\"n\">gi</span><span class=\"o\">|</span><span class=\"mi\">557361099</span><span class=\"o\">|</span><span class=\"n\">gb</span><span class=\"o\">|</span><span class=\"n\">KF435150</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"o\">|</span>\n<span class=\"n\">gi</span><span class=\"o\">|</span><span class=\"mi\">557361099</span><span class=\"o\">|</span><span class=\"n\">gb</span><span class=\"o\">|</span><span class=\"n\">KF435150</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"o\">|</span> <span class=\"n\">Homo</span> <span class=\"n\">sapiens</span> <span class=\"n\">MDM4</span> <span class=\"n\">protein</span> <span class=\"n\">variant</span> <span class=\"n\">Y</span> <span class=\"p\">(</span><span class=\"n\">MDM4</span><span class=\"p\">)</span> <span class=\"n\">mRNA</span><span class=\"p\">,</span> <span class=\"n\">complete</span> <span class=\"n\">cds</span><span class=\"p\">,</span> <span class=\"n\">alternatively</span> <span class=\"n\">spliced</span>\n<span class=\"n\">gi</span><span class=\"o\">|</span><span class=\"mi\">557361097</span><span class=\"o\">|</span><span class=\"n\">gb</span><span class=\"o\">|</span><span class=\"n\">KF435149</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"o\">|</span>\n<span class=\"n\">gi</span><span class=\"o\">|</span><span class=\"mi\">557361097</span><span class=\"o\">|</span><span class=\"n\">gb</span><span class=\"o\">|</span><span class=\"n\">KF435149</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"o\">|</span> <span class=\"n\">Homo</span> <span class=\"n\">sapiens</span> <span class=\"n\">MDM4</span> <span class=\"n\">protein</span> <span class=\"n\">variant</span> <span class=\"n\">G</span> <span class=\"p\">(</span><span class=\"n\">MDM4</span><span class=\"p\">)</span> <span class=\"n\">mRNA</span><span class=\"p\">,</span> <span class=\"n\">complete</span> <span class=\"n\">cds</span>\n<span class=\"o\">...</span>\n\n<span class=\"c1\"># new in v0.4.9</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyfaidx</span> <span class=\"kn\">import</span> <span class=\"n\">Fasta</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span> <span class=\"o\">=</span> <span class=\"n\">Fasta</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/genes.fasta'</span><span class=\"p\">,</span> <span class=\"n\">read_long_names</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">record</span> <span class=\"ow\">in</span> <span class=\"n\">genes</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>   <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"n\">gi</span><span class=\"o\">|</span><span class=\"mi\">563317589</span><span class=\"o\">|</span><span class=\"n\">dbj</span><span class=\"o\">|</span><span class=\"n\">AB821309</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"o\">|</span> <span class=\"n\">Homo</span> <span class=\"n\">sapiens</span> <span class=\"n\">FGFR2</span><span class=\"o\">-</span><span class=\"n\">AHCYL1</span> <span class=\"n\">mRNA</span> <span class=\"k\">for</span> <span class=\"n\">FGFR2</span><span class=\"o\">-</span><span class=\"n\">AHCYL1</span> <span class=\"n\">fusion</span> <span class=\"n\">kinase</span> <span class=\"n\">protein</span><span class=\"p\">,</span> <span class=\"n\">complete</span> <span class=\"n\">cds</span>\n<span class=\"n\">gi</span><span class=\"o\">|</span><span class=\"mi\">557361099</span><span class=\"o\">|</span><span class=\"n\">gb</span><span class=\"o\">|</span><span class=\"n\">KF435150</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"o\">|</span> <span class=\"n\">Homo</span> <span class=\"n\">sapiens</span> <span class=\"n\">MDM4</span> <span class=\"n\">protein</span> <span class=\"n\">variant</span> <span class=\"n\">Y</span> <span class=\"p\">(</span><span class=\"n\">MDM4</span><span class=\"p\">)</span> <span class=\"n\">mRNA</span><span class=\"p\">,</span> <span class=\"n\">complete</span> <span class=\"n\">cds</span><span class=\"p\">,</span> <span class=\"n\">alternatively</span> <span class=\"n\">spliced</span>\n<span class=\"n\">gi</span><span class=\"o\">|</span><span class=\"mi\">557361097</span><span class=\"o\">|</span><span class=\"n\">gb</span><span class=\"o\">|</span><span class=\"n\">KF435149</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"o\">|</span> <span class=\"n\">Homo</span> <span class=\"n\">sapiens</span> <span class=\"n\">MDM4</span> <span class=\"n\">protein</span> <span class=\"n\">variant</span> <span class=\"n\">G</span> <span class=\"p\">(</span><span class=\"n\">MDM4</span><span class=\"p\">)</span> <span class=\"n\">mRNA</span><span class=\"p\">,</span> <span class=\"n\">complete</span> <span class=\"n\">cds</span>\n</pre>\n<p>Records can be accessed efficiently as numpy arrays:</p>\n<pre><span class=\"c1\"># new in v0.5.4</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyfaidx</span> <span class=\"kn\">import</span> <span class=\"n\">Fasta</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span> <span class=\"o\">=</span> <span class=\"n\">Fasta</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/genes.fasta'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">asarray</span><span class=\"p\">(</span><span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">])</span>\n<span class=\"n\">array</span><span class=\"p\">([</span><span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"s1\">'|S1'</span><span class=\"p\">)</span>\n</pre>\n<p>Sequence can be buffered in memory using a read-ahead buffer\nfor fast sequential access:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">timeit</span> <span class=\"kn\">import</span> <span class=\"n\">timeit</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">fetch</span> <span class=\"o\">=</span> <span class=\"s2\">\"genes['NM_001282543.1'][200:230]\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">read_ahead</span> <span class=\"o\">=</span> <span class=\"s2\">\"import pyfaidx; genes = pyfaidx.Fasta('tests/data/genes.fasta', read_ahead=10000)\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">no_read_ahead</span> <span class=\"o\">=</span> <span class=\"s2\">\"import pyfaidx; genes = pyfaidx.Fasta('tests/data/genes.fasta')\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">string_slicing</span> <span class=\"o\">=</span> <span class=\"s2\">\"genes = </span><span class=\"si\">{}</span><span class=\"s2\">; genes['NM_001282543.1'] = 'N'*10000\"</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">timeit</span><span class=\"p\">(</span><span class=\"n\">fetch</span><span class=\"p\">,</span> <span class=\"n\">no_read_ahead</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">)</span>\n<span class=\"mf\">0.2204863309962093</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">timeit</span><span class=\"p\">(</span><span class=\"n\">fetch</span><span class=\"p\">,</span> <span class=\"n\">read_ahead</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">)</span>\n<span class=\"mf\">0.1121859749982832</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">timeit</span><span class=\"p\">(</span><span class=\"n\">fetch</span><span class=\"p\">,</span> <span class=\"n\">string_slicing</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">)</span>\n<span class=\"mf\">0.0033553699977346696</span>\n</pre>\n<p>Read-ahead buffering can reduce runtime by 1/2 for sequential accesses to buffered regions.</p>\n<p>If you want to modify the contents of your FASTA file in-place, you can use the <cite>mutable</cite> argument.\nAny portion of the FastaRecord can be replaced with an equivalent-length string.\n<span class=\"red\">Warning</span>: <em>This will change the contents of your file immediately and permanently:</em></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span> <span class=\"o\">=</span> <span class=\"n\">Fasta</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/genes.fasta'</span><span class=\"p\">,</span> <span class=\"n\">mutable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">])</span>\n<span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"err\">'</span><span class=\"nc\">pyfaidx</span><span class=\"o\">.</span><span class=\"n\">MutableFastaRecord</span><span class=\"s1\">'&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">][:</span><span class=\"mi\">10</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;</span><span class=\"n\">NM_001282543</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"mi\">10</span>\n<span class=\"n\">CCCCGCCCCT</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">][:</span><span class=\"mi\">10</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'NNNNNNNNNN'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">genes</span><span class=\"p\">[</span><span class=\"s1\">'NM_001282543.1'</span><span class=\"p\">][:</span><span class=\"mi\">15</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;</span><span class=\"n\">NM_001282543</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"mi\">15</span>\n<span class=\"n\">NNNNNNNNNNCTGGC</span>\n</pre>\n<p>The FastaVariant class provides a way to integrate single nucleotide variant calls to generate a consensus sequence.</p>\n<pre><span class=\"c1\"># new in v0.4.0</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">consensus</span> <span class=\"o\">=</span> <span class=\"n\">FastaVariant</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/chr22.fasta'</span><span class=\"p\">,</span> <span class=\"s1\">'tests/data/chr22.vcf.gz'</span><span class=\"p\">,</span> <span class=\"n\">het</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">hom</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"ne\">RuntimeWarning</span><span class=\"p\">:</span> <span class=\"n\">Using</span> <span class=\"n\">sample</span> <span class=\"n\">NA06984</span> <span class=\"n\">genotypes</span><span class=\"o\">.</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">consensus</span><span class=\"p\">[</span><span class=\"s1\">'22'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">variant_sites</span>\n<span class=\"p\">(</span><span class=\"mi\">16042793</span><span class=\"p\">,</span> <span class=\"mi\">21833121</span><span class=\"p\">,</span> <span class=\"mi\">29153196</span><span class=\"p\">,</span> <span class=\"mi\">29187373</span><span class=\"p\">,</span> <span class=\"mi\">29187448</span><span class=\"p\">,</span> <span class=\"mi\">29194610</span><span class=\"p\">,</span> <span class=\"mi\">29821295</span><span class=\"p\">,</span> <span class=\"mi\">29821332</span><span class=\"p\">,</span> <span class=\"mi\">29993842</span><span class=\"p\">,</span> <span class=\"mi\">32330460</span><span class=\"p\">,</span> <span class=\"mi\">32352284</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">consensus</span><span class=\"p\">[</span><span class=\"s1\">'22'</span><span class=\"p\">][</span><span class=\"mi\">16042790</span><span class=\"p\">:</span><span class=\"mi\">16042800</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;</span><span class=\"mi\">22</span><span class=\"p\">:</span><span class=\"mi\">16042791</span><span class=\"o\">-</span><span class=\"mi\">16042800</span>\n<span class=\"n\">TCGTAGGACA</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Fasta</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/chr22.fasta'</span><span class=\"p\">)[</span><span class=\"s1\">'22'</span><span class=\"p\">][</span><span class=\"mi\">16042790</span><span class=\"p\">:</span><span class=\"mi\">16042800</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;</span><span class=\"mi\">22</span><span class=\"p\">:</span><span class=\"mi\">16042791</span><span class=\"o\">-</span><span class=\"mi\">16042800</span>\n<span class=\"n\">TCATAGGACA</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">consensus</span> <span class=\"o\">=</span> <span class=\"n\">FastaVariant</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/chr22.fasta'</span><span class=\"p\">,</span> <span class=\"s1\">'tests/data/chr22.vcf.gz'</span><span class=\"p\">,</span> <span class=\"n\">sample</span><span class=\"o\">=</span><span class=\"s1\">'NA06984'</span><span class=\"p\">,</span> <span class=\"n\">het</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">hom</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">call_filter</span><span class=\"o\">=</span><span class=\"s1\">'GT == \"0/1\"'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">consensus</span><span class=\"p\">[</span><span class=\"s1\">'22'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">variant_sites</span>\n<span class=\"p\">(</span><span class=\"mi\">16042793</span><span class=\"p\">,</span> <span class=\"mi\">29187373</span><span class=\"p\">,</span> <span class=\"mi\">29187448</span><span class=\"p\">,</span> <span class=\"mi\">29194610</span><span class=\"p\">,</span> <span class=\"mi\">29821332</span><span class=\"p\">)</span>\n</pre>\n<p id=\"faidx\">It also provides a command-line script:</p>\n<div id=\"cli-script-faidx\">\n<h3>cli script: faidx</h3>\n<pre>Fetch sequences from FASTA. If no regions are specified, all entries in the\ninput file are returned. Input FASTA file must be consistently line-wrapped,\nand line wrapping of output is based on input line lengths.\n\npositional arguments:\n  fasta                 FASTA file\n  regions               space separated regions of sequence to fetch e.g.\n                        chr1:1-1000\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -b BED, --bed BED     bed file of regions\n  -o OUT, --out OUT     output file name <span class=\"o\">(</span>default: stdout<span class=\"o\">)</span>\n  -i <span class=\"o\">{</span>bed,chromsizes,nucleotide,transposed<span class=\"o\">}</span>, --transform <span class=\"o\">{</span>bed,chromsizes,nucleotide,transposed<span class=\"o\">}</span> transform the requested regions into another format. default: None\n  -c, --complement      complement the sequence. default: False\n  -r, --reverse         reverse the sequence. default: False\n  -a SIZE_RANGE, --size-range SIZE_RANGE\n                        selected sequences are in the size range <span class=\"o\">[</span>low, high<span class=\"o\">]</span>. example: <span class=\"m\">1</span>,1000 default: None\n  -n, --no-names        omit sequence names from output. default: False\n  -f, --full-names      output full names including description. default: False\n  -x, --split-files     write each region to a separate file <span class=\"o\">(</span>names are derived from regions<span class=\"o\">)</span>\n  -l, --lazy            fill in --default-seq <span class=\"k\">for</span> missing ranges. default: False\n  -s DEFAULT_SEQ, --default-seq DEFAULT_SEQ\n                        default base <span class=\"k\">for</span> missing positions and masking. default: None\n  -d DELIMITER, --delimiter DELIMITER\n                        delimiter <span class=\"k\">for</span> splitting names to multiple values <span class=\"o\">(</span>duplicate names will be discarded<span class=\"o\">)</span>. default: None\n  -e HEADER_FUNCTION, --header-function HEADER_FUNCTION\n                        python <span class=\"k\">function</span> to modify header lines e.g: <span class=\"s2\">\"lambda x: x.split(\"</span><span class=\"p\">|</span><span class=\"s2\">\")[0]\"</span>. default: lambda x: x.split<span class=\"o\">()[</span><span class=\"m\">0</span><span class=\"o\">]</span>\n  -u <span class=\"o\">{</span>stop,first,last,longest,shortest<span class=\"o\">}</span>, --duplicates-action <span class=\"o\">{</span>stop,first,last,longest,shortest<span class=\"o\">}</span>\n                        entry to take when duplicate sequence names are encountered. default: stop\n  -g REGEX, --regex REGEX\n                        selected sequences are those matching regular expression. default: .*\n  -v, --invert-match    selected sequences are those not matching <span class=\"s1\">'regions'</span> argument. default: False\n  -m, --mask-with-default-seq\n                        mask the FASTA file using --default-seq default: False\n  -M, --mask-by-case    mask the FASTA file by changing to lowercase. default: False\n  -e HEADER_FUNCTION, --header-function HEADER_FUNCTION\n                        python <span class=\"k\">function</span> to modify header lines e.g: <span class=\"s2\">\"lambda x: x.split(\"</span><span class=\"p\">|</span><span class=\"s2\">\")[0]\"</span>. default: None\n  --no-rebuild          <span class=\"k\">do</span> not rebuild the .fai index even <span class=\"k\">if</span> it is out of date. default: False\n  --version             print pyfaidx version number\n</pre>\n<p>Examples:</p>\n<pre>$ faidx tests/data/genes.fasta NM_001282543.1:201-210 NM_001282543.1:300-320\n&gt;NM_001282543.1:201-210\nCTCGTTCCGC\n&gt;NM_001282543.1:300-320\nGTAATTGTGTAAGTGACTGCA\n\n$ faidx --full-names tests/data/genes.fasta NM_001282543.1:201-210\n&gt;NM_001282543.1<span class=\"p\">|</span> Homo sapiens BRCA1 associated RING domain <span class=\"m\">1</span> <span class=\"o\">(</span>BARD1<span class=\"o\">)</span>, transcript variant <span class=\"m\">2</span>, mRNA\nCTCGTTCCGC\n\n$ faidx --no-names tests/data/genes.fasta NM_001282543.1:201-210 NM_001282543.1:300-320\nCTCGTTCCGC\nGTAATTGTGTAAGTGACTGCA\n\n$ faidx --complement tests/data/genes.fasta NM_001282543.1:201-210\n&gt;NM_001282543.1:201-210 <span class=\"o\">(</span>complement<span class=\"o\">)</span>\nGAGCAAGGCG\n\n$ faidx --reverse tests/data/genes.fasta NM_001282543.1:201-210\n&gt;NM_001282543.1:210-201\nCGCCTTGCTC\n\n$ faidx --reverse --complement tests/data/genes.fasta NM_001282543.1:201-210\n&gt;NM_001282543.1:210-201 <span class=\"o\">(</span>complement<span class=\"o\">)</span>\nGCGGAACGAG\n\n$ faidx tests/data/genes.fasta NM_001282543.1\n&gt;NM_001282543.1:1-5466\nCCCCGCCCCT........\n..................\n..................\n..................\n\n$ faidx --regex <span class=\"s2\">\"^NM_00128254[35]\"</span> genes.fasta\n&gt;NM_001282543.1\n..................\n..................\n..................\n&gt;NM_001282545.1\n..................\n..................\n..................\n\n$ faidx --lazy tests/data/genes.fasta NM_001282543.1:5460-5480\n&gt;NM_001282543.1:5460-5480\nAAAAAAANNNNNNNNNNNNNN\n\n$ faidx --lazy --default-seq<span class=\"o\">=</span><span class=\"s1\">'Q'</span> tests/data/genes.fasta NM_001282543.1:5460-5480\n&gt;NM_001282543.1:5460-5480\nAAAAAAAQQQQQQQQQQQQQQ\n\n$ faidx tests/data/genes.fasta --bed regions.bed\n...\n\n$ faidx --transform chromsizes tests/data/genes.fasta\nAB821309.1  <span class=\"m\">3510</span>\nKF435150.1  <span class=\"m\">481</span>\nKF435149.1  <span class=\"m\">642</span>\nNR_104216.1 <span class=\"m\">4573</span>\nNR_104215.1 <span class=\"m\">5317</span>\nNR_104212.1 <span class=\"m\">5374</span>\n...\n\n$ faidx --transform bed tests/data/genes.fasta\nAB821309.1  <span class=\"m\">1</span>    <span class=\"m\">3510</span>\nKF435150.1  <span class=\"m\">1</span>    <span class=\"m\">481</span>\nKF435149.1  <span class=\"m\">1</span>    <span class=\"m\">642</span>\nNR_104216.1 <span class=\"m\">1</span>   <span class=\"m\">4573</span>\nNR_104215.1 <span class=\"m\">1</span>   <span class=\"m\">5317</span>\nNR_104212.1 <span class=\"m\">1</span>   <span class=\"m\">5374</span>\n...\n\n$ faidx --transform nucleotide tests/data/genes.fasta\nname        start   end     A       T       C       G       N\nAB821309.1  <span class=\"m\">1</span>       <span class=\"m\">3510</span>    <span class=\"m\">955</span>     <span class=\"m\">774</span>     <span class=\"m\">837</span>     <span class=\"m\">944</span>     <span class=\"m\">0</span>\nKF435150.1  <span class=\"m\">1</span>       <span class=\"m\">481</span>     <span class=\"m\">149</span>     <span class=\"m\">120</span>     <span class=\"m\">103</span>     <span class=\"m\">109</span>     <span class=\"m\">0</span>\nKF435149.1  <span class=\"m\">1</span>       <span class=\"m\">642</span>     <span class=\"m\">201</span>     <span class=\"m\">163</span>     <span class=\"m\">129</span>     <span class=\"m\">149</span>     <span class=\"m\">0</span>\nNR_104216.1 <span class=\"m\">1</span>       <span class=\"m\">4573</span>    <span class=\"m\">1294</span>    <span class=\"m\">1552</span>    <span class=\"m\">828</span>     <span class=\"m\">899</span>     <span class=\"m\">0</span>\nNR_104215.1 <span class=\"m\">1</span>       <span class=\"m\">5317</span>    <span class=\"m\">1567</span>    <span class=\"m\">1738</span>    <span class=\"m\">968</span>     <span class=\"m\">1044</span>    <span class=\"m\">0</span>\nNR_104212.1 <span class=\"m\">1</span>       <span class=\"m\">5374</span>    <span class=\"m\">1581</span>    <span class=\"m\">1756</span>    <span class=\"m\">977</span>     <span class=\"m\">1060</span>    <span class=\"m\">0</span>\n...\n\nfaidx --transform transposed tests/data/genes.fasta\nAB821309.1  <span class=\"m\">1</span>       <span class=\"m\">3510</span>    ATGGTCAGCTGGGGTCGTTTCATC...\nKF435150.1  <span class=\"m\">1</span>       <span class=\"m\">481</span>     ATGACATCATTTTCCACCTCTGCT...\nKF435149.1  <span class=\"m\">1</span>       <span class=\"m\">642</span>     ATGACATCATTTTCCACCTCTGCT...\nNR_104216.1 <span class=\"m\">1</span>       <span class=\"m\">4573</span>    CCCCGCCCCTCTGGCGGCCCGCCG...\nNR_104215.1 <span class=\"m\">1</span>       <span class=\"m\">5317</span>    CCCCGCCCCTCTGGCGGCCCGCCG...\nNR_104212.1 <span class=\"m\">1</span>       <span class=\"m\">5374</span>    CCCCGCCCCTCTGGCGGCCCGCCG...\n...\n\n$ faidx --split-files tests/data/genes.fasta\n$ ls\nAB821309.1.fasta    NM_001282549.1.fasta    XM_005249645.1.fasta\nKF435149.1.fasta    NR_104212.1.fasta       XM_005265507.1.fasta\nKF435150.1.fasta    NR_104215.1.fasta       XM_005265508.1.fasta\nNM_000465.3.fasta   NR_104216.1.fasta       XR_241079.1.fasta\nNM_001282543.1.fasta        XM_005249642.1.fasta    XR_241080.1.fasta\nNM_001282545.1.fasta        XM_005249643.1.fasta    XR_241081.1.fasta\nNM_001282548.1.fasta        XM_005249644.1.fasta\n\n$ faidx --delimiter<span class=\"o\">=</span><span class=\"s1\">'_'</span> tests/data/genes.fasta <span class=\"m\">000465</span>.3\n&gt;000465.3\nCCCCGCCCCTCTGGCGGCCCGCCGTCCCAGACGCGGGAAGAGCTTGGCCGGTTTCGAGTCGCTGGCCTGC\nAGCTTCCCTGTGGTTTCCCGAGGCTTCCTTGCTTCCCGCTCTGCGAGGAGCCTTTCATCCGAAGGCGGGA\n.......\n\n$ faidx --size-range <span class=\"m\">5500</span>,6000 -i chromsizes tests/data/genes.fasta\nNM_000465.3 <span class=\"m\">5523</span>\n\n$ faidx -m --bed regions.bed tests/data/genes.fasta\n<span class=\"c1\">### Modifies tests/data/genes.fasta by masking regions using --default-seq character ###\n</span>\n$ faidx -M --bed regions.bed tests/data/genes.fasta\n<span class=\"c1\">### Modifies tests/data/genes.fasta by masking regions using lowercase characters ###\n</span>\n$ faidx -e <span class=\"s2\">\"lambda x: x.split('.')[0]\"</span> tests/data/genes.fasta -i bed\nAB821309    <span class=\"m\">1</span>       <span class=\"m\">3510</span>\nKF435150    <span class=\"m\">1</span>       <span class=\"m\">481</span>\nKF435149    <span class=\"m\">1</span>       <span class=\"m\">642</span>\nNR_104216   <span class=\"m\">1</span>       <span class=\"m\">4573</span>\nNR_104215   <span class=\"m\">1</span>       <span class=\"m\">5317</span>\n.......\n</pre>\n<p>Similar syntax as <tt>samtools faidx</tt></p>\n<p>A lower-level Faidx class is also available:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyfaidx</span> <span class=\"kn\">import</span> <span class=\"n\">Faidx</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">fa</span> <span class=\"o\">=</span> <span class=\"n\">Faidx</span><span class=\"p\">(</span><span class=\"s1\">'genes.fa'</span><span class=\"p\">)</span>  <span class=\"c1\"># can return str with as_raw=True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">fa</span><span class=\"o\">.</span><span class=\"n\">index</span>\n<span class=\"n\">OrderedDict</span><span class=\"p\">([(</span><span class=\"s1\">'AB821309.1'</span><span class=\"p\">,</span> <span class=\"n\">IndexRecord</span><span class=\"p\">(</span><span class=\"n\">rlen</span><span class=\"o\">=</span><span class=\"mi\">3510</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"n\">lenc</span><span class=\"o\">=</span><span class=\"mi\">70</span><span class=\"p\">,</span> <span class=\"n\">lenb</span><span class=\"o\">=</span><span class=\"mi\">71</span><span class=\"p\">)),</span> <span class=\"p\">(</span><span class=\"s1\">'KF435150.1'</span><span class=\"p\">,</span> <span class=\"n\">IndexRecord</span><span class=\"p\">(</span><span class=\"n\">rlen</span><span class=\"o\">=</span><span class=\"mi\">481</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"mi\">3585</span><span class=\"p\">,</span> <span class=\"n\">lenc</span><span class=\"o\">=</span><span class=\"mi\">70</span><span class=\"p\">,</span> <span class=\"n\">lenb</span><span class=\"o\">=</span><span class=\"mi\">71</span><span class=\"p\">)),</span><span class=\"o\">...</span> <span class=\"p\">])</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">fa</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">[</span><span class=\"s1\">'AB821309.1'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">rlen</span>\n<span class=\"mi\">3510</span>\n\n<span class=\"n\">fa</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"s1\">'AB821309.1'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>  <span class=\"c1\"># these are 1-based genomic coordinates</span>\n<span class=\"o\">&gt;</span><span class=\"n\">AB821309</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"mi\">10</span>\n<span class=\"n\">ATGGTCAGCT</span>\n</pre>\n<ul>\n<li>If the FASTA file is not indexed, when <tt>Faidx</tt> is initialized the\n<tt>build_index</tt> method will automatically run, and\nthe index will be written to \u201cfilename.fa.fai\u201d with <tt>write_fai()</tt>.\nwhere \u201cfilename.fa\u201d is the original FASTA file.</li>\n<li>Start and end coordinates are 1-based.</li>\n</ul>\n</div>\n</div>\n<div id=\"support-for-compressed-fasta\">\n<h2>Support for compressed FASTA</h2>\n<p><tt>pyfaidx</tt> can create and read <tt>.fai</tt> indices for FASTA files that have\nbeen compressed using the <a href=\"https://www.htslib.org/doc/bgzip.html\" rel=\"nofollow\">bgzip</a>\ntool from <a href=\"http://www.htslib.org/\" rel=\"nofollow\">samtools</a>. <tt>bgzip</tt> writes compressed\ndata in a <tt>BGZF</tt> format. <tt>BGZF</tt> is <tt>gzip</tt> compatible, consisting of\nmultiple concatenated <tt>gzip</tt> blocks, each with an additional <tt>gzip</tt>\nheader making it possible to build an index for rapid random access. I.e.,\nfiles compressed with <tt>bgzip</tt> are valid <tt>gzip</tt> and so can be read by\n<tt>gunzip</tt>.  See <a href=\"http://pydoc.net/Python/biopython/1.66/Bio.bgzf/\" rel=\"nofollow\">this description</a> for more details on\n<tt>bgzip</tt>.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p>Please see the <a href=\"https://github.com/mdshw5/pyfaidx/releases\" rel=\"nofollow\">releases</a> for a\ncomprehensive list of version changes.</p>\n</div>\n<div id=\"known-issues\">\n<h2>Known issues</h2>\n<p>I try to fix as many bugs as possible, but most of this work is supported by a single developer. Please check the <a href=\"https://github.com/mdshw5/pyfaidx/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+is%3Aopen+label%3Aknown\" rel=\"nofollow\">known issues</a> for bugs relevant to your work. Pull requests are welcome.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Create a new Pull Request with one feature. If you add a new feature, please\ncreate also the relevant test.</p>\n<dl>\n<dt>To get test running on your machine:</dt>\n<dd><ul>\n<li><p>Create a new virtualenv and install the <cite>dev-requirements.txt</cite>.</p>\n</li>\n<li><p>Download the test data running:</p>\n<blockquote>\n<p>python tests/data/download_gene_fasta.py</p>\n</blockquote>\n</li>\n<li><p>Run the tests with</p>\n<blockquote>\n<p>nosetests \u2013with-coverage \u2013cover-package=pyfaidx</p>\n</blockquote>\n</li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"acknowledgements\">\n<h2>Acknowledgements</h2>\n<p>This project is freely licensed by the author, <a href=\"http://mattshirley.com\" rel=\"nofollow\">Matthew\nShirley</a>, and was completed under the\nmentorship and financial support of Drs. <a href=\"http://sjwheelan.som.jhmi.edu\" rel=\"nofollow\">Sarah\nWheelan</a> and <a href=\"http://yegnalab.onc.jhmi.edu\" rel=\"nofollow\">Vasan\nYegnasubramanian</a> at the Sidney Kimmel\nComprehensive Cancer Center in the Department of Oncology.</p>\n</div>\n\n          </div>"}, "last_serial": 6466750, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "53858267ad92ddbd68283575b1595bfb", "sha256": "b77969c2049dacd427cca46d151071f14bec89f30c2dfba636ad7cc2cbd46fe9"}, "downloads": -1, "filename": "pyfaidx-0.1.0.tar.gz", "has_sig": true, "md5_digest": "53858267ad92ddbd68283575b1595bfb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4504, "upload_time": "2014-02-03T18:16:34", "upload_time_iso_8601": "2014-02-03T18:16:34.011362Z", "url": "https://files.pythonhosted.org/packages/ba/fe/9a1da57aef1949a43818a5f5a34ef660875b97fc074a5dd4f023e4101063/pyfaidx-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "07069c9d479f53c17f8aa95bc51856e1", "sha256": "e07ac691a14d9ac49bedb3713b6387189f0b8d4c5e80e89cd8d505eed0ca0712"}, "downloads": -1, "filename": "pyfaidx-0.1.1.tar.gz", "has_sig": false, "md5_digest": "07069c9d479f53c17f8aa95bc51856e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4913, "upload_time": "2014-02-17T18:14:46", "upload_time_iso_8601": "2014-02-17T18:14:46.437069Z", "url": "https://files.pythonhosted.org/packages/a5/bd/b213dec696602afc631adfe2441311e4eef5f214b537cf78e31b5cf769a5/pyfaidx-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "3aa0d28e5e73ba89a7602dbf45375b41", "sha256": "97a8b42ae571633c9051d24142820fe44d5627d4c23ad1dcd95cf665a5e8c3b8"}, "downloads": -1, "filename": "pyfaidx-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3aa0d28e5e73ba89a7602dbf45375b41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4916, "upload_time": "2014-02-25T18:45:19", "upload_time_iso_8601": "2014-02-25T18:45:19.453849Z", "url": "https://files.pythonhosted.org/packages/d6/84/3f238a024494a97fc4ef08474ca0c1faad1e77b2308058f929968f6bfedd/pyfaidx-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "d697174018b102172a616e9952af12fd", "sha256": "444fed0bf76454751d9f58d51c59cfb6347889a0c1706bcc220294379b3864ba"}, "downloads": -1, "filename": "pyfaidx-0.1.3.tar.gz", "has_sig": false, "md5_digest": "d697174018b102172a616e9952af12fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14162, "upload_time": "2014-03-03T14:59:07", "upload_time_iso_8601": "2014-03-03T14:59:07.785337Z", "url": "https://files.pythonhosted.org/packages/2d/bc/e93f971d641494459d557ed57e0f49b19b1424507344eef6b4bd3f46eb91/pyfaidx-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "c848109725f5e052ca0c077843f10007", "sha256": "3ac963c4d27c11b9d640438e6da9f14d0e5df682d7ee7e256dffd72dc242a277"}, "downloads": -1, "filename": "pyfaidx-0.1.4.tar.gz", "has_sig": false, "md5_digest": "c848109725f5e052ca0c077843f10007", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14371, "upload_time": "2014-04-15T14:51:52", "upload_time_iso_8601": "2014-04-15T14:51:52.765059Z", "url": "https://files.pythonhosted.org/packages/05/c1/b95ac06a7269991f1dee2c73e2e99f2f0b39652a99990cb5090f7c2b70b7/pyfaidx-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "233110489be84fa007cde96d495c3407", "sha256": "4f69ff1082e46ef24c0686eeee8f0277fc33ebcc4e83f5f25c011cc5896eff17"}, "downloads": -1, "filename": "pyfaidx-0.1.5.tar.gz", "has_sig": false, "md5_digest": "233110489be84fa007cde96d495c3407", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14596, "upload_time": "2014-04-16T16:09:03", "upload_time_iso_8601": "2014-04-16T16:09:03.276281Z", "url": "https://files.pythonhosted.org/packages/84/2e/ae97737614591fc1f84e99ee12f09bf685b623c4fda34442b4bd93968ea4/pyfaidx-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "7a844e6df265e29d5824223251de9b8f", "sha256": "67d8d7368c1df6afdaac5d8b9e71c5440fcffc94dae0219a176ec5eb137b9f03"}, "downloads": -1, "filename": "pyfaidx-0.1.6.tar.gz", "has_sig": false, "md5_digest": "7a844e6df265e29d5824223251de9b8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14653, "upload_time": "2014-04-21T23:58:12", "upload_time_iso_8601": "2014-04-21T23:58:12.978075Z", "url": "https://files.pythonhosted.org/packages/93/d9/0f8c2e25c25e9c10055b16b61cb34f3d438d1c8ed2d51cf4946868fdaeb9/pyfaidx-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "d6fa5b4e2c531a48e87cd06263c4de84", "sha256": "33535bd3c6eff0a86f3818e55e83ea637e2f5dbe0c520008f76123f277e511a7"}, "downloads": -1, "filename": "pyfaidx-0.1.7.tar.gz", "has_sig": false, "md5_digest": "d6fa5b4e2c531a48e87cd06263c4de84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12754, "upload_time": "2014-06-10T18:24:20", "upload_time_iso_8601": "2014-06-10T18:24:20.364434Z", "url": "https://files.pythonhosted.org/packages/68/e0/3999528d7e2e80a9ee243ba29a326b090da9ead0df3b0c145545e367386a/pyfaidx-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "4eb55f6e4eb71cf60460778904479af8", "sha256": "6a99686ca2696a15118859817426ab7e73035f8b24741dda3dd0e737a3bb09d2"}, "downloads": -1, "filename": "pyfaidx-0.1.8.tar.gz", "has_sig": false, "md5_digest": "4eb55f6e4eb71cf60460778904479af8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12133, "upload_time": "2014-06-16T18:15:40", "upload_time_iso_8601": "2014-06-16T18:15:40.117727Z", "url": "https://files.pythonhosted.org/packages/90/bd/91ab96bfab60308c3a133215245ce4a2fbb214ff1e8a6f618d5bec2bfa6f/pyfaidx-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "c7cf6e4d8c0865e30ffcdea4a2abec81", "sha256": "928615ba9844f8bcb585d174bcc74ff7a499406c2e5873046e643fe0545f3fd2"}, "downloads": -1, "filename": "pyfaidx-0.1.9.tar.gz", "has_sig": false, "md5_digest": "c7cf6e4d8c0865e30ffcdea4a2abec81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12722, "upload_time": "2014-06-23T23:45:27", "upload_time_iso_8601": "2014-06-23T23:45:27.701351Z", "url": "https://files.pythonhosted.org/packages/59/42/9e3fb2d7b8e1baabfe9df3ae2eac75893827688d920c77e844a2f7a5b78c/pyfaidx-0.1.9.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "9f991b4b311184c6a013dd2dae92dc5b", "sha256": "b97359010f70e99dc69aa42aa4518a0bd644bed8cd86fd807783d3ce1e770f3e"}, "downloads": -1, "filename": "pyfaidx-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9f991b4b311184c6a013dd2dae92dc5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8618, "upload_time": "2014-07-01T18:00:38", "upload_time_iso_8601": "2014-07-01T18:00:38.478151Z", "url": "https://files.pythonhosted.org/packages/4f/d6/d4304f447efd409257d5e4f34dde7dc9593e7c6d8a91f92d9a0ed3284fe7/pyfaidx-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "71c6d1b44f8022e0d478f945df33ba0e", "sha256": "491b7c603d901d005782bd974b2cd666a6b34b6a9ef7f61905556073665f5cd1"}, "downloads": -1, "filename": "pyfaidx-0.2.1.tar.gz", "has_sig": false, "md5_digest": "71c6d1b44f8022e0d478f945df33ba0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8586, "upload_time": "2014-07-03T13:57:06", "upload_time_iso_8601": "2014-07-03T13:57:06.154700Z", "url": "https://files.pythonhosted.org/packages/c2/4d/16ead4516b8032c57f51df5899f256c5e97b6bd4704a412c88589210ff37/pyfaidx-0.2.1.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "42dbc3f726fd55c867b492eb4633ec16", "sha256": "d3f5a7a71c9ddd75da25ca794a34ad8fe99db583fad93b909b3a63680820476d"}, "downloads": -1, "filename": "pyfaidx-0.2.3.tar.gz", "has_sig": false, "md5_digest": "42dbc3f726fd55c867b492eb4633ec16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8720, "upload_time": "2014-07-29T21:37:19", "upload_time_iso_8601": "2014-07-29T21:37:19.250090Z", "url": "https://files.pythonhosted.org/packages/de/e3/92db9771787179330969062ace6be0a5f1d41d3cd043efbaf061310a6f3c/pyfaidx-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "7736777beb2ca4eee9d28fce9214e553", "sha256": "fbd8e1afaaec63736542112f459f7542d478541027ec49b41e9834388fc69da8"}, "downloads": -1, "filename": "pyfaidx-0.2.4.tar.gz", "has_sig": false, "md5_digest": "7736777beb2ca4eee9d28fce9214e553", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8822, "upload_time": "2014-08-06T23:28:25", "upload_time_iso_8601": "2014-08-06T23:28:25.167317Z", "url": "https://files.pythonhosted.org/packages/29/43/dcf441538efcff3921d5e97af6ec68ef7639d79801a75c686f2ebcb2b5aa/pyfaidx-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "e1c00b17dab9d8a8283121a7b97fdc98", "sha256": "f7fa9ace2ccd3eaec0c6cf4d909c464968e96e893dc2ef9a7a362d6a870ee15d"}, "downloads": -1, "filename": "pyfaidx-0.2.5.tar.gz", "has_sig": false, "md5_digest": "e1c00b17dab9d8a8283121a7b97fdc98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9270, "upload_time": "2014-08-27T19:18:34", "upload_time_iso_8601": "2014-08-27T19:18:34.749072Z", "url": "https://files.pythonhosted.org/packages/d6/4d/c38b792bc8fbf9ed9836499db8f861828cdf09c4abd1f5e2eb2aca4ddced/pyfaidx-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "a5d796c96b1342008fc5609dc9ef18f7", "sha256": "f8e501b400fb56c3128825b113a79e13ded42feda2ac81aae078312dd8ba7de0"}, "downloads": -1, "filename": "pyfaidx-0.2.6.tar.gz", "has_sig": false, "md5_digest": "a5d796c96b1342008fc5609dc9ef18f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9764, "upload_time": "2014-09-04T17:08:09", "upload_time_iso_8601": "2014-09-04T17:08:09.867592Z", "url": "https://files.pythonhosted.org/packages/5d/10/2329baee51c07a6d79dcb9f2a7be486194b1531373ce2378944645e40ca9/pyfaidx-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "ad1a6caccbadfa510d9e682a97230107", "sha256": "678ecebdd0f3e6ef58c73f2b1d2f60172caf320e71a77b195259f3011b509940"}, "downloads": -1, "filename": "pyfaidx-0.2.7.tar.gz", "has_sig": false, "md5_digest": "ad1a6caccbadfa510d9e682a97230107", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10143, "upload_time": "2014-09-09T20:59:28", "upload_time_iso_8601": "2014-09-09T20:59:28.993681Z", "url": "https://files.pythonhosted.org/packages/47/ea/9a5f182247764f3c2ebc4ad445893fbe8d965272cc2f089910ec5cf744d2/pyfaidx-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "dabed8992207f68aa02e696acad1717d", "sha256": "c3370dee8c2747c30bce308eccbb05c30aa83751354b1e136bed9062282bf378"}, "downloads": -1, "filename": "pyfaidx-0.2.8.tar.gz", "has_sig": false, "md5_digest": "dabed8992207f68aa02e696acad1717d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10599, "upload_time": "2014-10-28T19:36:12", "upload_time_iso_8601": "2014-10-28T19:36:12.849681Z", "url": "https://files.pythonhosted.org/packages/85/88/481fe720ff6f7a648a3d36e575c9e24061b41906453ff45832aebed22792/pyfaidx-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "29aa5bf8b3439f054c8bf87217f9a1e7", "sha256": "9f6755bce844a7b0d40754cec149387ae65ac5fb7193410f1f499c1b9f026625"}, "downloads": -1, "filename": "pyfaidx-0.2.9.tar.gz", "has_sig": false, "md5_digest": "29aa5bf8b3439f054c8bf87217f9a1e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15003, "upload_time": "2014-11-08T13:46:09", "upload_time_iso_8601": "2014-11-08T13:46:09.058732Z", "url": "https://files.pythonhosted.org/packages/86/2b/d732984646217826f78e84f3e25fec2e2daeaf55a5f18db9a01085ac880e/pyfaidx-0.2.9.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "9112a0c198853111b214b62262b5f256", "sha256": "2642de9f0644369e2279a86a3abdde12bdb3efebe3f9206783f0c65a65e94d64"}, "downloads": -1, "filename": "pyfaidx-0.3.0.tar.gz", "has_sig": false, "md5_digest": "9112a0c198853111b214b62262b5f256", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15583, "upload_time": "2014-11-20T22:54:56", "upload_time_iso_8601": "2014-11-20T22:54:56.032719Z", "url": "https://files.pythonhosted.org/packages/17/1d/09255dc4e93a1987d72c3e66b2524e76d50cc539d98d7c3dc2884350c574/pyfaidx-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "6dcaea2c3d334a605e44d9203e410504", "sha256": "d7d1ec68bbba8d92a01758e553eb37beeba34b677e546d1b84534e2248a6c622"}, "downloads": -1, "filename": "pyfaidx-0.3.1.tar.gz", "has_sig": false, "md5_digest": "6dcaea2c3d334a605e44d9203e410504", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15660, "upload_time": "2014-12-15T00:21:43", "upload_time_iso_8601": "2014-12-15T00:21:43.238603Z", "url": "https://files.pythonhosted.org/packages/14/67/526750a2e36416dab90992568c7b002457910cf95699fb7a60fda3810cc4/pyfaidx-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "6b968327ae0e7f2bd74096b7bdf0b50e", "sha256": "def468ed8d57a11bdb532ec5980f54348f92cc601f598b2ae88f1b7c3177b6a4"}, "downloads": -1, "filename": "pyfaidx-0.3.2.tar.gz", "has_sig": false, "md5_digest": "6b968327ae0e7f2bd74096b7bdf0b50e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13224, "upload_time": "2014-12-26T20:22:49", "upload_time_iso_8601": "2014-12-26T20:22:49.414370Z", "url": "https://files.pythonhosted.org/packages/c8/c4/5942038d505e197e49d208698bc5e57de332f1edc5f6f9be9e6e1c99cacb/pyfaidx-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "66ef0639fea1a52bcda4429fdc1af9e5", "sha256": "dd203246c5da953f8965bb142b516d077c974b1053f0232ca40c5b5434ad54f0"}, "downloads": -1, "filename": "pyfaidx-0.3.3.tar.gz", "has_sig": false, "md5_digest": "66ef0639fea1a52bcda4429fdc1af9e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15064, "upload_time": "2015-01-07T21:10:10", "upload_time_iso_8601": "2015-01-07T21:10:10.593581Z", "url": "https://files.pythonhosted.org/packages/02/47/3f00a31c79f3ac89afa1aeb949412fc6c6b96ea569c3ac138fb403f8a5e6/pyfaidx-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "9dfb82a3e910d107465ee3c739ccf57d", "sha256": "e87582a07e55c11d422035d1815e7cdc897b8ec278b8c6843602c5fd5d418bb6"}, "downloads": -1, "filename": "pyfaidx-0.3.4.tar.gz", "has_sig": false, "md5_digest": "9dfb82a3e910d107465ee3c739ccf57d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15600, "upload_time": "2015-01-13T01:19:12", "upload_time_iso_8601": "2015-01-13T01:19:12.229676Z", "url": "https://files.pythonhosted.org/packages/41/2d/069f604cfeacabeb270a0c0c9a4c81d62f6a038faa1bd4874fa430d43661/pyfaidx-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "6600efdc999485ae62f2686b90f172e9", "sha256": "7589529b241bd882f80782679eebdffe15da4104404649e6fcd6255333195671"}, "downloads": -1, "filename": "pyfaidx-0.3.5.tar.gz", "has_sig": false, "md5_digest": "6600efdc999485ae62f2686b90f172e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14406, "upload_time": "2015-02-13T19:51:27", "upload_time_iso_8601": "2015-02-13T19:51:27.066018Z", "url": "https://files.pythonhosted.org/packages/b1/cb/d1cd30bc03cfa96f0ad246c1fd57b63449680c85b8ab9487ba967cd65db9/pyfaidx-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "5f59dd2d0da0ab740313bc07b25eafcf", "sha256": "8d5567101b45a98453878744c93e767e715e7f0e324572f7930faf06434aede0"}, "downloads": -1, "filename": "pyfaidx-0.3.6.tar.gz", "has_sig": false, "md5_digest": "5f59dd2d0da0ab740313bc07b25eafcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14550, "upload_time": "2015-03-02T22:29:07", "upload_time_iso_8601": "2015-03-02T22:29:07.531274Z", "url": "https://files.pythonhosted.org/packages/0f/0e/643ad6a7ff42d497619db35dbb72ea0d9e23804fa000d5b9f40d8f74a569/pyfaidx-0.3.6.tar.gz", "yanked": false}], "0.3.6.1": [{"comment_text": "", "digests": {"md5": "9e1e9fdbc3eec42e3dfd271ca75d6e36", "sha256": "e4d927e3f2bff382cb67962b3d135b2cddd8ea9318c9ca852fcd2a2b17973837"}, "downloads": -1, "filename": "pyfaidx-0.3.6.1.tar.gz", "has_sig": false, "md5_digest": "9e1e9fdbc3eec42e3dfd271ca75d6e36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16790, "upload_time": "2015-05-12T14:07:15", "upload_time_iso_8601": "2015-05-12T14:07:15.619839Z", "url": "https://files.pythonhosted.org/packages/31/95/831a13f7891578ceee72e3a42d936e1a9dfa27b3ad0ec297eeb39dfd7db0/pyfaidx-0.3.6.1.tar.gz", "yanked": false}], "0.3.7": [{"comment_text": "", "digests": {"md5": "e6ddf8e4c088894a840fe1bbf70ccc00", "sha256": "7444fb397ac6e9a5d80f742fa6d53884e315293a5bda128137dc0749948315b4"}, "downloads": -1, "filename": "pyfaidx-0.3.7.tar.gz", "has_sig": false, "md5_digest": "e6ddf8e4c088894a840fe1bbf70ccc00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15248, "upload_time": "2015-03-03T19:47:55", "upload_time_iso_8601": "2015-03-03T19:47:55.809866Z", "url": "https://files.pythonhosted.org/packages/07/00/52f2da1fdac1e39599cdb23300ed7d216d84be5c4d4be0872c5c93671097/pyfaidx-0.3.7.tar.gz", "yanked": false}], "0.3.7.1": [{"comment_text": "", "digests": {"md5": "955ccc9df3b39de528722738118d97b1", "sha256": "7e034ce3c31341757349cb65de998209414182094d119cf3513689058993d555"}, "downloads": -1, "filename": "pyfaidx-0.3.7.1.tar.gz", "has_sig": false, "md5_digest": "955ccc9df3b39de528722738118d97b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17531, "upload_time": "2015-05-12T14:11:32", "upload_time_iso_8601": "2015-05-12T14:11:32.424032Z", "url": "https://files.pythonhosted.org/packages/6e/04/ec05ec47dfc1c6b60f6e32afddefc8f19f1ce19fe64594ccc6e6c887cb2e/pyfaidx-0.3.7.1.tar.gz", "yanked": false}], "0.3.8": [{"comment_text": "", "digests": {"md5": "061e8a418837196f266ca11d01c5cba6", "sha256": "2a1961e597fa9207085f73ce47df7075974ce00a9c9901754776d77aa869ddea"}, "downloads": -1, "filename": "pyfaidx-0.3.8.1.tar.gz", "has_sig": false, "md5_digest": "061e8a418837196f266ca11d01c5cba6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18536, "upload_time": "2015-04-02T14:23:58", "upload_time_iso_8601": "2015-04-02T14:23:58.535794Z", "url": "https://files.pythonhosted.org/packages/50/f8/452e939a7a993c9f7e35456b8bc2ee06690f10b1c62f4814104e76fa0c92/pyfaidx-0.3.8.1.tar.gz", "yanked": false}], "0.3.8.1": [], "0.3.9": [{"comment_text": "", "digests": {"md5": "74ffcc95a2ebf43c1e6115c99e90553c", "sha256": "9bd310f7da46f5cb0e04dbe7fec433a031222b60b311c4e017576278f08bef72"}, "downloads": -1, "filename": "pyfaidx-0.3.9.tar.gz", "has_sig": false, "md5_digest": "74ffcc95a2ebf43c1e6115c99e90553c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15793, "upload_time": "2015-04-05T01:59:58", "upload_time_iso_8601": "2015-04-05T01:59:58.870801Z", "url": "https://files.pythonhosted.org/packages/32/78/b2b30e03a79b50aa2371c0b1d644e67dd06c25e103be9c25a42404db44c5/pyfaidx-0.3.9.tar.gz", "yanked": false}], "0.3.9.1": [{"comment_text": "", "digests": {"md5": "d0b64649bacbd3d414cba2da06ae7ad4", "sha256": "30d2055f5190e9309ffe067f9a41eb49300dcd4326a6be97d4f9a1c23d00e92d"}, "downloads": -1, "filename": "pyfaidx-0.3.9.1.tar.gz", "has_sig": false, "md5_digest": "d0b64649bacbd3d414cba2da06ae7ad4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18343, "upload_time": "2015-05-12T14:12:23", "upload_time_iso_8601": "2015-05-12T14:12:23.296175Z", "url": "https://files.pythonhosted.org/packages/e4/b9/f089003d26abd3f9412cb40fcc1b1d4cc13341d3bd2eeb6e7f95f94ece39/pyfaidx-0.3.9.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "a6ad22d48fc5e529fedf66b6003c3425", "sha256": "ae3e74481d19171aa85109535598e6a9cc8dc2b729c1f4aa2525d2d61f14ef12"}, "downloads": -1, "filename": "pyfaidx-0.4.0.tar.gz", "has_sig": false, "md5_digest": "a6ad22d48fc5e529fedf66b6003c3425", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18491, "upload_time": "2015-04-30T20:34:42", "upload_time_iso_8601": "2015-04-30T20:34:42.841622Z", "url": "https://files.pythonhosted.org/packages/dd/33/f00a1bb2af9c191ef37e3ef585de5f7569c508e7fc7f7a8a3fa8f4c8846c/pyfaidx-0.4.0.tar.gz", "yanked": false}], "0.4.0.1": [{"comment_text": "", "digests": {"md5": "f25e5e4441873e83b2df94a0eb4e2cf9", "sha256": "2453b0dce194e1a507f4f5d2be582e5f7969842b432cb71cb8dab784daca07ad"}, "downloads": -1, "filename": "pyfaidx-0.4.0.1.tar.gz", "has_sig": false, "md5_digest": "f25e5e4441873e83b2df94a0eb4e2cf9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21568, "upload_time": "2015-05-12T14:13:03", "upload_time_iso_8601": "2015-05-12T14:13:03.663005Z", "url": "https://files.pythonhosted.org/packages/7c/ba/d1c1ea81e8b764581a669fa383d9f4a3bff45ded409e39265e21ec849c24/pyfaidx-0.4.0.1.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "336fd3679fb15e523977d178ce8d6838", "sha256": "44453b9f27c7cdb417744bb1022500ab67a83b9a0df862dc192cf96c292575ab"}, "downloads": -1, "filename": "pyfaidx-0.4.1.tar.gz", "has_sig": false, "md5_digest": "336fd3679fb15e523977d178ce8d6838", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18538, "upload_time": "2015-05-08T16:27:12", "upload_time_iso_8601": "2015-05-08T16:27:12.283044Z", "url": "https://files.pythonhosted.org/packages/9f/03/e19f90c0d110b0fed18e6fa23b742a8c5ac2092906ae0ee4fefb681b64bd/pyfaidx-0.4.1.tar.gz", "yanked": false}], "0.4.1.1": [], "0.4.2": [{"comment_text": "", "digests": {"md5": "f03079b5d8b2fbfb294dd72d4f43d981", "sha256": "4083d9dc6dc8a2ab5e890f331140f88d27e303d20f849cb26e75d7efd066fdd8"}, "downloads": -1, "filename": "pyfaidx-0.4.2.tar.gz", "has_sig": false, "md5_digest": "f03079b5d8b2fbfb294dd72d4f43d981", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19366, "upload_time": "2015-08-03T14:32:58", "upload_time_iso_8601": "2015-08-03T14:32:58.972358Z", "url": "https://files.pythonhosted.org/packages/66/ed/139823cb4ba592c1695fa8143a3b31831eb40a3e3405a43ac4c16d230e6a/pyfaidx-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "380ff562e3fae2c8c385ab282ac7e04e", "sha256": "ae144f66dcfc42824427547b240a0bf80a2b052ffe4b781f6f5acabb795d1256"}, "downloads": -1, "filename": "pyfaidx-0.4.3.tar.gz", "has_sig": false, "md5_digest": "380ff562e3fae2c8c385ab282ac7e04e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23117, "upload_time": "2015-10-22T17:31:14", "upload_time_iso_8601": "2015-10-22T17:31:14.638994Z", "url": "https://files.pythonhosted.org/packages/dd/f9/a26b8ee53bc4959a0d206534f0484230e68b7e84bb2132e5254c592549dd/pyfaidx-0.4.3.tar.gz", "yanked": false}], "0.4.3.1": [{"comment_text": "", "digests": {"md5": "261c64d3f9c8c9bd34a3f23a62f4b9d5", "sha256": "856c395bba12e9a8691947b95286686fe44c70e7b8f51a21154c232bbeb14969"}, "downloads": -1, "filename": "pyfaidx-0.4.3.1.tar.gz", "has_sig": false, "md5_digest": "261c64d3f9c8c9bd34a3f23a62f4b9d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23106, "upload_time": "2015-10-24T11:41:25", "upload_time_iso_8601": "2015-10-24T11:41:25.601924Z", "url": "https://files.pythonhosted.org/packages/13/b0/74dabbac62b58144a0d489ccee008b84d575ab4f3a153fb30ed0a457aacc/pyfaidx-0.4.3.1.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "b5fa82a27da4d8314a65ea8ab5b55cfd", "sha256": "054aa22eb594c566386d9685c8acba459f7b6102613bade8bd8d089d6cfec8df"}, "downloads": -1, "filename": "pyfaidx-0.4.4.tar.gz", "has_sig": false, "md5_digest": "b5fa82a27da4d8314a65ea8ab5b55cfd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24649, "upload_time": "2015-10-26T13:47:31", "upload_time_iso_8601": "2015-10-26T13:47:31.898723Z", "url": "https://files.pythonhosted.org/packages/cd/49/e03241ef201fc013198d6ecd62a61816d7c4114596dbbb37a8853e18b7b9/pyfaidx-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "475fcde4bdf22b9b2b0f9d1d16f581e0", "sha256": "a12b17db39c7fa2c1b35f0ed786b0a60081be83d4ca62ccf14176d1647e443de"}, "downloads": -1, "filename": "pyfaidx-0.4.5-py2.6.egg", "has_sig": false, "md5_digest": "475fcde4bdf22b9b2b0f9d1d16f581e0", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 36639, "upload_time": "2015-11-16T19:56:26", "upload_time_iso_8601": "2015-11-16T19:56:26.280906Z", "url": "https://files.pythonhosted.org/packages/f5/88/d00a67a819c112e62f973097b3e40a503539e8e906521a04bc71253ac3c8/pyfaidx-0.4.5-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "dba51fae0deab40f78a4dc40d39c2960", "sha256": "2048643b506f2bd1bbc231143affa3021eaf0bdc5e66a4fd2a4f8d33edb9adda"}, "downloads": -1, "filename": "pyfaidx-0.4.5.tar.gz", "has_sig": false, "md5_digest": "dba51fae0deab40f78a4dc40d39c2960", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20719, "upload_time": "2015-11-16T19:56:30", "upload_time_iso_8601": "2015-11-16T19:56:30.442503Z", "url": "https://files.pythonhosted.org/packages/c2/a3/3c27d7b37deb85abbba7763b67fccdd10b833913aa4f9c0056900a044077/pyfaidx-0.4.5.tar.gz", "yanked": false}], "0.4.5.1": [{"comment_text": "", "digests": {"md5": "c73b52f0335d032dcc0d376100a4fc19", "sha256": "45f2a41580ac2d3ee0c425de1165ad2ab590def53d3f077625232423db9cd176"}, "downloads": -1, "filename": "pyfaidx-0.4.5.1-py2.6.egg", "has_sig": false, "md5_digest": "c73b52f0335d032dcc0d376100a4fc19", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 36738, "upload_time": "2015-11-17T01:55:00", "upload_time_iso_8601": "2015-11-17T01:55:00.345398Z", "url": "https://files.pythonhosted.org/packages/7c/f2/409af262f13f5cfe13b2bade74e66bafc4a60fb0f090d1047c883d391476/pyfaidx-0.4.5.1-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a101cfd756b987e6abd355ce065d36e", "sha256": "bd9fbc764e61af488c3e957c5b80b6a3defe435f42103993216b8776e600805c"}, "downloads": -1, "filename": "pyfaidx-0.4.5.1.tar.gz", "has_sig": false, "md5_digest": "5a101cfd756b987e6abd355ce065d36e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20755, "upload_time": "2015-11-17T01:55:15", "upload_time_iso_8601": "2015-11-17T01:55:15.647380Z", "url": "https://files.pythonhosted.org/packages/3b/47/dbf0312266bfe39762120964be5decc437ae0c61ed04c47d1883f968bf92/pyfaidx-0.4.5.1.tar.gz", "yanked": false}], "0.4.5.2": [{"comment_text": "", "digests": {"md5": "0fc8b4b6cecbee1bcd561be717548351", "sha256": "ac471f41ccdd53bb4e855cdf5a53ce3e18af1f1698ec4d7d903f3c1994f731a5"}, "downloads": -1, "filename": "pyfaidx-0.4.5.2-py2.6.egg", "has_sig": false, "md5_digest": "0fc8b4b6cecbee1bcd561be717548351", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 36741, "upload_time": "2015-11-17T22:07:54", "upload_time_iso_8601": "2015-11-17T22:07:54.187690Z", "url": "https://files.pythonhosted.org/packages/6f/82/083330733d1d11f0282ac645aa75027c318b9dc3c720ca353709bc0bd208/pyfaidx-0.4.5.2-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "b60e2b56b25b7804c0081d3fdb1dc2d8", "sha256": "f2261bbab5de7c7be0ad2c28375f5655179dbd474a8595544e19d0912e31c24c"}, "downloads": -1, "filename": "pyfaidx-0.4.5.2.tar.gz", "has_sig": false, "md5_digest": "b60e2b56b25b7804c0081d3fdb1dc2d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20756, "upload_time": "2015-11-17T22:08:00", "upload_time_iso_8601": "2015-11-17T22:08:00.673906Z", "url": "https://files.pythonhosted.org/packages/2a/b5/7da73c392978a0ed9000daeb9c788cfa245e42bbd8bed7cca9afdd93c3a6/pyfaidx-0.4.5.2.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "dfcb0e3f520e2ef7da87996dd859f0ee", "sha256": "1bd16b68bfa8daa8599bacc746fc06b874b5a8f9f3eb695413353141a95e649b"}, "downloads": -1, "filename": "pyfaidx-0.4.6-py2.6.egg", "has_sig": false, "md5_digest": "dfcb0e3f520e2ef7da87996dd859f0ee", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 37156, "upload_time": "2015-12-08T21:29:12", "upload_time_iso_8601": "2015-12-08T21:29:12.276692Z", "url": "https://files.pythonhosted.org/packages/e0/dc/f5d450e3673b6c512dae723ff61cfe5c83ea436be1c924039794a2ad617b/pyfaidx-0.4.6-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd08ba4d872af92dfe699e44aa1c31a3", "sha256": "e36b5cfff5e935a8610882c46e45a9f39986d576e3e8d05db9f255ef074b9a4e"}, "downloads": -1, "filename": "pyfaidx-0.4.6.tar.gz", "has_sig": false, "md5_digest": "bd08ba4d872af92dfe699e44aa1c31a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20899, "upload_time": "2015-12-08T21:29:16", "upload_time_iso_8601": "2015-12-08T21:29:16.930587Z", "url": "https://files.pythonhosted.org/packages/04/aa/ef858688150089bec09e5e16913eea12346a9cf27fd09e746afbeb73374d/pyfaidx-0.4.6.tar.gz", "yanked": false}], "0.4.7": [{"comment_text": "", "digests": {"md5": "25ed628e6bcc7857f69606b12debc046", "sha256": "61c7e63d88b00888f7b8da18394cbc2f969df94b7d3cc4361fea4ad517da6231"}, "downloads": -1, "filename": "pyfaidx-0.4.7-py2.6.egg", "has_sig": false, "md5_digest": "25ed628e6bcc7857f69606b12debc046", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 37756, "upload_time": "2015-12-10T19:14:59", "upload_time_iso_8601": "2015-12-10T19:14:59.947446Z", "url": "https://files.pythonhosted.org/packages/81/06/2f9612c196c5e702ae877ed17ce999ab0e2cca6fee3e672af47e6b79db4c/pyfaidx-0.4.7-py2.6.egg", "yanked": false}], "0.4.7.1": [{"comment_text": "", "digests": {"md5": "4ff4f3e4a811f95c7826d00a40fb6687", "sha256": "29d6d1e525e0cec31961bc4ce0e5dd1fb3fa43ee360ec2d54a6612228218c2f1"}, "downloads": -1, "filename": "pyfaidx-0.4.7.1-py2.6.egg", "has_sig": false, "md5_digest": "4ff4f3e4a811f95c7826d00a40fb6687", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 38304, "upload_time": "2015-12-31T18:11:04", "upload_time_iso_8601": "2015-12-31T18:11:04.827991Z", "url": "https://files.pythonhosted.org/packages/5d/9d/a2e6d7295e33b1101942ece80cf7305995c8e43c940e640b0408e58940ef/pyfaidx-0.4.7.1-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f33604a3550c2fa115ac7d33b952127d", "sha256": "5c750be97d0bc5b81698513d91a8bb2c07042fb9eb5d3583f8a6ecf21ac8916c"}, "downloads": -1, "filename": "pyfaidx-0.4.7.1.tar.gz", "has_sig": false, "md5_digest": "f33604a3550c2fa115ac7d33b952127d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21582, "upload_time": "2015-12-31T18:11:11", "upload_time_iso_8601": "2015-12-31T18:11:11.990408Z", "url": "https://files.pythonhosted.org/packages/9f/e6/e745e065c291b25e3fd025360edfe6289c2ee35ffa9375e85708612ca820/pyfaidx-0.4.7.1.tar.gz", "yanked": false}], "0.4.8": [{"comment_text": "", "digests": {"md5": "7cca3ef8e036624c61dee1372919f84b", "sha256": "5535109ea9c5784ee685ec05f94dd790685218b587ee44b61b1bd8a0b9e701e1"}, "downloads": -1, "filename": "pyfaidx-0.4.8-py2.6.egg", "has_sig": false, "md5_digest": "7cca3ef8e036624c61dee1372919f84b", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 39190, "upload_time": "2016-10-16T21:03:17", "upload_time_iso_8601": "2016-10-16T21:03:17.198327Z", "url": "https://files.pythonhosted.org/packages/bd/61/dbb9f6cefc767c7c2d2e3d747208cf5cc1080cacd8857e603e0f257cfb90/pyfaidx-0.4.8-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3537d0cafcd90bfd84df04ff9d1f622a", "sha256": "28947686e72d4b4f83e95d0e2897e3467cd285b1c2458b8be4a6ca6da1e060f5"}, "downloads": -1, "filename": "pyfaidx-0.4.8.tar.gz", "has_sig": false, "md5_digest": "3537d0cafcd90bfd84df04ff9d1f622a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22039, "upload_time": "2016-10-16T21:03:19", "upload_time_iso_8601": "2016-10-16T21:03:19.508274Z", "url": "https://files.pythonhosted.org/packages/e3/87/99b3d3096df92c84f6ae8790236835800ce3c09ef63ef90b5fd3411a6c54/pyfaidx-0.4.8.tar.gz", "yanked": false}], "0.4.8.1": [{"comment_text": "", "digests": {"md5": "0afa890b2d91f07cfaab9ab2315791f5", "sha256": "ea839b5a47f30c82279feff08ab0d6c786fa4585267a7a4d005e8c7c75b76c4a"}, "downloads": -1, "filename": "pyfaidx-0.4.8.1-py2.6.egg", "has_sig": false, "md5_digest": "0afa890b2d91f07cfaab9ab2315791f5", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 39272, "upload_time": "2016-10-20T01:11:21", "upload_time_iso_8601": "2016-10-20T01:11:21.245156Z", "url": "https://files.pythonhosted.org/packages/69/94/09b51fa56fc369175e33fc920748a00398a2730e5e5eac96dbf3f34cb1bf/pyfaidx-0.4.8.1-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f33beb242463eed92381571da4a3aa56", "sha256": "23a5ab30af3ef2ecf2520475517131d74e635a9077ffdd582f9a7016eeba069d"}, "downloads": -1, "filename": "pyfaidx-0.4.8.1.tar.gz", "has_sig": false, "md5_digest": "f33beb242463eed92381571da4a3aa56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22154, "upload_time": "2016-10-20T01:11:23", "upload_time_iso_8601": "2016-10-20T01:11:23.624693Z", "url": "https://files.pythonhosted.org/packages/5f/0e/b22911d548b5fe043629675fccd7c0b8f96b76b0ec0c72a484f4f0615c42/pyfaidx-0.4.8.1.tar.gz", "yanked": false}], "0.4.8.2": [{"comment_text": "", "digests": {"md5": "825afe8017a15a750b2e96d858afc40b", "sha256": "b6ab0f55328d1cf1ff6f31722d4f57fe32b406b9f5453cabc6d4717458dd6678"}, "downloads": -1, "filename": "pyfaidx-0.4.8.2-py2.6.egg", "has_sig": false, "md5_digest": "825afe8017a15a750b2e96d858afc40b", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 39559, "upload_time": "2017-03-02T02:30:20", "upload_time_iso_8601": "2017-03-02T02:30:20.068424Z", "url": "https://files.pythonhosted.org/packages/57/89/ad8da11f5eda14b9a7afb86012d20fda88179d9215654c38d2e1a3a717c5/pyfaidx-0.4.8.2-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c34d219a8e6fc4bebd150daa54020717", "sha256": "f0e5d1922d68eaafb03f53393a08af78a564542ef5246de5a70bf855a9c011f7"}, "downloads": -1, "filename": "pyfaidx-0.4.8.2.tar.gz", "has_sig": false, "md5_digest": "c34d219a8e6fc4bebd150daa54020717", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22337, "upload_time": "2017-03-02T02:30:22", "upload_time_iso_8601": "2017-03-02T02:30:22.100093Z", "url": "https://files.pythonhosted.org/packages/f2/26/f2f89f41151301d8beeb89c2a5f6f6822e769eea045c6465efa50fc3d6bc/pyfaidx-0.4.8.2.tar.gz", "yanked": false}], "0.4.8.3": [{"comment_text": "", "digests": {"md5": "737d69745853c0e72af8661a29b16780", "sha256": "b47bd63019e13c916ea91bae59fe66d900eadeef523968635f55a86b140333c0"}, "downloads": -1, "filename": "pyfaidx-0.4.8.3-py2.6.egg", "has_sig": false, "md5_digest": "737d69745853c0e72af8661a29b16780", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 39833, "upload_time": "2017-03-26T15:28:46", "upload_time_iso_8601": "2017-03-26T15:28:46.789437Z", "url": "https://files.pythonhosted.org/packages/d3/f3/b9af370b2bf07b9e75724e633f87e8e67024cb66adba19d1c7eb55dc7d52/pyfaidx-0.4.8.3-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a176dca9e9791f326560f1dd8c093f0", "sha256": "38836ace40730792e0de28e82e0e3e3e3da9fcf85c85cfc58fbccac716484fdf"}, "downloads": -1, "filename": "pyfaidx-0.4.8.3.tar.gz", "has_sig": false, "md5_digest": "9a176dca9e9791f326560f1dd8c093f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22448, "upload_time": "2017-03-26T15:28:48", "upload_time_iso_8601": "2017-03-26T15:28:48.493663Z", "url": "https://files.pythonhosted.org/packages/32/9b/13223d1c3934233a5a736f1e387f042ff950afac60d744e50e7f5b996bb4/pyfaidx-0.4.8.3.tar.gz", "yanked": false}], "0.4.8.4": [{"comment_text": "", "digests": {"md5": "9cb1a927910eb6dc4347a8f325dcef7a", "sha256": "aa7b27c6906e59ac404ac9655e3d0696242a82f3b3285d6bfd902073aa06d0a9"}, "downloads": -1, "filename": "pyfaidx-0.4.8.4-py2.6.egg", "has_sig": false, "md5_digest": "9cb1a927910eb6dc4347a8f325dcef7a", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 39856, "upload_time": "2017-04-18T18:04:35", "upload_time_iso_8601": "2017-04-18T18:04:35.690170Z", "url": "https://files.pythonhosted.org/packages/8b/63/e7ae2ab936f9fb355ecd14de093ae01755747d22ecafbe838e0ef77f24a2/pyfaidx-0.4.8.4-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "90c1b3c7a5ba57bad073c3976c8de938", "sha256": "3c5b6b340149a9ff339fab51b780c9e30e82e316d1258f69f3523c143193cc5a"}, "downloads": -1, "filename": "pyfaidx-0.4.8.4.tar.gz", "has_sig": false, "md5_digest": "90c1b3c7a5ba57bad073c3976c8de938", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22446, "upload_time": "2017-04-18T18:04:37", "upload_time_iso_8601": "2017-04-18T18:04:37.144898Z", "url": "https://files.pythonhosted.org/packages/8c/58/fcfb55c5e9f9a050881b26f9c22580d90c20150b05d5c61a24957e7fd1ba/pyfaidx-0.4.8.4.tar.gz", "yanked": false}], "0.4.9": [{"comment_text": "", "digests": {"md5": "41cf21c0f0947620edd2bf2e18ad4574", "sha256": "0bf30989405efdf5ea42f18459bcb22f268073f783dcc66b53e9925290e844dd"}, "downloads": -1, "filename": "pyfaidx-0.4.9-py2.7.egg", "has_sig": false, "md5_digest": "41cf21c0f0947620edd2bf2e18ad4574", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 43593, "upload_time": "2017-06-14T02:16:47", "upload_time_iso_8601": "2017-06-14T02:16:47.623692Z", "url": "https://files.pythonhosted.org/packages/43/c2/0054fb24f58232552799a6989edabedee762bc9ee2a7b356c6421236fb06/pyfaidx-0.4.9-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "aca3c994ec7dd2a5176c5d5a644e7533", "sha256": "a1c12b17754f03716ada1b5be0ee3f5c27dc46449bbec7c2ca58ad9c5f68c3ec"}, "downloads": -1, "filename": "pyfaidx-0.4.9.tar.gz", "has_sig": false, "md5_digest": "aca3c994ec7dd2a5176c5d5a644e7533", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26623, "upload_time": "2017-06-14T02:16:49", "upload_time_iso_8601": "2017-06-14T02:16:49.492798Z", "url": "https://files.pythonhosted.org/packages/f1/9e/aa38ce1a8502e936369ffca84db719087273094a52fc7e8dd02ab1933beb/pyfaidx-0.4.9.tar.gz", "yanked": false}], "0.4.9.1": [{"comment_text": "", "digests": {"md5": "47dd2decc25a14d1bc158e2c289d6f45", "sha256": "cb4cb5ce77c7cafa76b02cf7af1bc10e5f8f67fce617a23d7526e46128872fda"}, "downloads": -1, "filename": "pyfaidx-0.4.9.1-py2.7.egg", "has_sig": false, "md5_digest": "47dd2decc25a14d1bc158e2c289d6f45", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 43880, "upload_time": "2017-06-15T16:02:39", "upload_time_iso_8601": "2017-06-15T16:02:39.159823Z", "url": "https://files.pythonhosted.org/packages/69/6a/49b4a040613e2485adf9668557b9c2fdb5710ba754602e9677dd4ce1b036/pyfaidx-0.4.9.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "88159ce24c7747dec2cbb68984b4c88e", "sha256": "9776fc48d02b894ea4170a2487c170fa90721d4a4748f27ed67ea341f32df2bd"}, "downloads": -1, "filename": "pyfaidx-0.4.9.1.tar.gz", "has_sig": false, "md5_digest": "88159ce24c7747dec2cbb68984b4c88e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26739, "upload_time": "2017-06-15T16:02:40", "upload_time_iso_8601": "2017-06-15T16:02:40.570467Z", "url": "https://files.pythonhosted.org/packages/e8/6e/881d42dedfb7a32fa9ac4fd7772bef2c82bd9d44beea4fe157c59604ec3e/pyfaidx-0.4.9.1.tar.gz", "yanked": false}], "0.4.9.2": [{"comment_text": "", "digests": {"md5": "c01fdddad5a415ca093f54d3cd8bf299", "sha256": "558639cc7720af529ee6c7244c38efd4eef3e67880069cd9db7d416f7c66fff1"}, "downloads": -1, "filename": "pyfaidx-0.4.9.2-py2.7.egg", "has_sig": false, "md5_digest": "c01fdddad5a415ca093f54d3cd8bf299", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 43819, "upload_time": "2017-06-15T17:41:18", "upload_time_iso_8601": "2017-06-15T17:41:18.746185Z", "url": "https://files.pythonhosted.org/packages/3c/f5/dd85ee4657297931d99b262855b6021ae6621a22f037b11877c123033a4d/pyfaidx-0.4.9.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "aba6076be3b658d9fa88ffa2075b9661", "sha256": "3f4879bc55e3ca45e7022c1bb7b6f9461875d5acfb8b5be00dc8e34eaadd17e6"}, "downloads": -1, "filename": "pyfaidx-0.4.9.2.tar.gz", "has_sig": false, "md5_digest": "aba6076be3b658d9fa88ffa2075b9661", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26693, "upload_time": "2017-06-15T17:41:20", "upload_time_iso_8601": "2017-06-15T17:41:20.636178Z", "url": "https://files.pythonhosted.org/packages/9c/ff/3aade56f9d4c96ccf2d5cfce301501dff250fb707feee3226474f4ed9e23/pyfaidx-0.4.9.2.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "1a1edd308cdd7d4447a0180b1117d84e", "sha256": "3ed37dd57fdbcb279aabadeceaa27a674bfc5050b587f41957cda6e0234aa47a"}, "downloads": -1, "filename": "pyfaidx-0.5.0-py2.7.egg", "has_sig": false, "md5_digest": "1a1edd308cdd7d4447a0180b1117d84e", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 44500, "upload_time": "2017-07-25T18:59:36", "upload_time_iso_8601": "2017-07-25T18:59:36.447324Z", "url": "https://files.pythonhosted.org/packages/95/d0/c56b250f3099c4c5abe4b87dc57a633c3e4f6a1ad02cb112363c4747e086/pyfaidx-0.5.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e913f032303fad99b51fdbd98817a19", "sha256": "fa6adb179d65e8e23d3b8acd8eb0cc9096a66df2ace0fc3a745c73d4e6481a01"}, "downloads": -1, "filename": "pyfaidx-0.5.0.tar.gz", "has_sig": false, "md5_digest": "1e913f032303fad99b51fdbd98817a19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26979, "upload_time": "2017-07-25T18:59:37", "upload_time_iso_8601": "2017-07-25T18:59:37.794258Z", "url": "https://files.pythonhosted.org/packages/6b/d5/18ce32ff5458c51c81e5e842dddf1e5be9ea1dd8877a484515b07f0a6201/pyfaidx-0.5.0.tar.gz", "yanked": false}], "0.5.0.1": [{"comment_text": "", "digests": {"md5": "1e7b0963a5fd289de27f8a9a3a6fd641", "sha256": "c40c7ec1d977120a5b609ab1dc6cac7c40ae7bbe73c2610dd8ce6dd2522549af"}, "downloads": -1, "filename": "pyfaidx-0.5.0.1.tar.gz", "has_sig": false, "md5_digest": "1e7b0963a5fd289de27f8a9a3a6fd641", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27395, "upload_time": "2017-09-11T15:29:45", "upload_time_iso_8601": "2017-09-11T15:29:45.813208Z", "url": "https://files.pythonhosted.org/packages/f6/55/6b38888497bc8646c0fa4982f87b70d8e8db6d51241b31388b7f438f7f80/pyfaidx-0.5.0.1.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "6eb546fbfd6b1865f87f01b9bc56cf22", "sha256": "7d5877fab01849fee78cdc7d336267310c07165171a099b4e024061c54dceb08"}, "downloads": -1, "filename": "pyfaidx-0.5.1.tar.gz", "has_sig": false, "md5_digest": "6eb546fbfd6b1865f87f01b9bc56cf22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28322, "upload_time": "2017-10-26T17:31:50", "upload_time_iso_8601": "2017-10-26T17:31:50.145800Z", "url": "https://files.pythonhosted.org/packages/9b/aa/8adc5a0337d286c09ad5c9bd0cf53f1898a5922d32b2b7169c1b187a1fec/pyfaidx-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "b3bee5735717ba65cc402e32cf1ce094", "sha256": "1984417f6775acc8a828e23913f7928e28a7e442d170934f92d316e58e37c7ed"}, "downloads": -1, "filename": "pyfaidx-0.5.2.tar.gz", "has_sig": false, "md5_digest": "b3bee5735717ba65cc402e32cf1ce094", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28355, "upload_time": "2018-01-25T02:28:51", "upload_time_iso_8601": "2018-01-25T02:28:51.786877Z", "url": "https://files.pythonhosted.org/packages/78/5c/1b2e75cf539a656b6c6b2b2b7c71e64b1b1b73c8cdc308006ee6931bfa20/pyfaidx-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "25cdf83304bfb69bdf5d8b1475d03bf0", "sha256": "c4f0d342e84e395ca7a907c9fb36b7dac02827319c227734f84fb04a9893610d"}, "downloads": -1, "filename": "pyfaidx-0.5.3.tar.gz", "has_sig": false, "md5_digest": "25cdf83304bfb69bdf5d8b1475d03bf0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28664, "upload_time": "2018-02-05T21:56:24", "upload_time_iso_8601": "2018-02-05T21:56:24.237924Z", "url": "https://files.pythonhosted.org/packages/32/e4/97b71f0f03e9fc4c2d07d6e6c23d8ede4377fc1f3fd6f304404e99426413/pyfaidx-0.5.3.tar.gz", "yanked": false}], "0.5.3.1": [{"comment_text": "", "digests": {"md5": "128074c48fdef23d41e47af73b45f040", "sha256": "d94d4254f79869bbf61c6d8673cfa3c042a8240b2565e9816302c224979e4b56"}, "downloads": -1, "filename": "pyfaidx-0.5.3.1.tar.gz", "has_sig": false, "md5_digest": "128074c48fdef23d41e47af73b45f040", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28681, "upload_time": "2018-02-09T01:03:37", "upload_time_iso_8601": "2018-02-09T01:03:37.418382Z", "url": "https://files.pythonhosted.org/packages/e2/ce/311179c6c49ad29943a8de5e78705ef88eb8ba7620b78431f84a92ef6902/pyfaidx-0.5.3.1.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "efd892f1aab7d9694858e218647f4853", "sha256": "2a15b8820bc1f27c4b6fe7c82a98d2520972cb6c167055d158562778af8aa53e"}, "downloads": -1, "filename": "pyfaidx-0.5.4.tar.gz", "has_sig": false, "md5_digest": "efd892f1aab7d9694858e218647f4853", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30045, "upload_time": "2018-05-12T15:48:29", "upload_time_iso_8601": "2018-05-12T15:48:29.692112Z", "url": "https://files.pythonhosted.org/packages/15/77/33e637e8713c0422db849afc9f3f4b2d497d6125d7b739e56386b3285340/pyfaidx-0.5.4.tar.gz", "yanked": false}], "0.5.4.1": [{"comment_text": "", "digests": {"md5": "c062c8235bd6bae4c90b058c75fd81f8", "sha256": "6c24a674320784b007b77f291acb2419acbe7b7a59234c2cee99b4f78d6cfc34"}, "downloads": -1, "filename": "pyfaidx-0.5.4.1.tar.gz", "has_sig": false, "md5_digest": "c062c8235bd6bae4c90b058c75fd81f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30069, "upload_time": "2018-06-20T02:00:32", "upload_time_iso_8601": "2018-06-20T02:00:32.118733Z", "url": "https://files.pythonhosted.org/packages/ce/0a/dde058cddb20243ee60d4282b86dd1095e628470ece290893c1351f180b9/pyfaidx-0.5.4.1.tar.gz", "yanked": false}], "0.5.4.2": [{"comment_text": "", "digests": {"md5": "47bfe82dd4ed564d227cf7db9f1ece53", "sha256": "a867f2d3efdf4366ce64c30b6160834b9568d712ad0760247d2d07a9a7f4bf78"}, "downloads": -1, "filename": "pyfaidx-0.5.4.2.tar.gz", "has_sig": false, "md5_digest": "47bfe82dd4ed564d227cf7db9f1ece53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30105, "upload_time": "2018-08-04T01:34:45", "upload_time_iso_8601": "2018-08-04T01:34:45.313797Z", "url": "https://files.pythonhosted.org/packages/4a/18/f7ea920774eef13b18aed86bf248f2c613cfdf56bbae7b9495372c8ebcc7/pyfaidx-0.5.4.2.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "d89b3072ccbc77415e5d4e218b2a9bc4", "sha256": "879869a7565044e770aa55ce2be5b399bcd6145050af8f52d72c858c7780d7eb"}, "downloads": -1, "filename": "pyfaidx-0.5.5.tar.gz", "has_sig": false, "md5_digest": "d89b3072ccbc77415e5d4e218b2a9bc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30120, "upload_time": "2018-09-19T15:25:37", "upload_time_iso_8601": "2018-09-19T15:25:37.742925Z", "url": "https://files.pythonhosted.org/packages/6c/25/6b6488d613092abdecf58dfc88c72d77c12af39b5d32c3001cdaa34d23cc/pyfaidx-0.5.5.tar.gz", "yanked": false}], "0.5.5.1": [{"comment_text": "", "digests": {"md5": "abf32241fa05583c9cec3b0b639f410c", "sha256": "d216924c901f39d445e13e574583442cd09f67424e13c2d33a5aacdfd367d39d"}, "downloads": -1, "filename": "pyfaidx-0.5.5.1.tar.gz", "has_sig": false, "md5_digest": "abf32241fa05583c9cec3b0b639f410c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30205, "upload_time": "2018-10-14T20:14:47", "upload_time_iso_8601": "2018-10-14T20:14:47.082101Z", "url": "https://files.pythonhosted.org/packages/20/d1/a810f8adb25af45f1a81f2fb2bd9860c8f6257708d261cc76b9bb16a4c21/pyfaidx-0.5.5.1.tar.gz", "yanked": false}], "0.5.5.2": [{"comment_text": "", "digests": {"md5": "9e85eec83e0da5728790e519f934c863", "sha256": "9ac22bdc7b9c5d995d32eb9dc278af9ba970481636ec75c0d687d38c26446caa"}, "downloads": -1, "filename": "pyfaidx-0.5.5.2.tar.gz", "has_sig": false, "md5_digest": "9e85eec83e0da5728790e519f934c863", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27547, "upload_time": "2018-10-27T02:35:13", "upload_time_iso_8601": "2018-10-27T02:35:13.008868Z", "url": "https://files.pythonhosted.org/packages/75/a5/7e2569527b3849ea28d79b4f70d7cf46a47d36459bc59e0efa4e10e8c8b2/pyfaidx-0.5.5.2.tar.gz", "yanked": false}], "0.5.6": [{"comment_text": "", "digests": {"md5": "812243969c601f6f5a34eb9862ec717b", "sha256": "2b6ab4212158ccf8f8490ae33f21a162a5c5f7ab2717f227c30013ed7a6c40e8"}, "downloads": -1, "filename": "pyfaidx-0.5.6.tar.gz", "has_sig": false, "md5_digest": "812243969c601f6f5a34eb9862ec717b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35356, "upload_time": "2019-11-22T16:17:45", "upload_time_iso_8601": "2019-11-22T16:17:45.518315Z", "url": "https://files.pythonhosted.org/packages/3b/92/cecd7af65711b0d808b03831c2d4530fdf1eb9de77172fe3ddc24bb714b8/pyfaidx-0.5.6.tar.gz", "yanked": false}], "0.5.7": [{"comment_text": "", "digests": {"md5": "8047c5b5ae27c4e52b80eb3f32748032", "sha256": "512c409b36eadfe39c40e46112d8f96b29fdc1032dc424da2bdc783d476f5b0a"}, "downloads": -1, "filename": "pyfaidx-0.5.7.tar.gz", "has_sig": false, "md5_digest": "8047c5b5ae27c4e52b80eb3f32748032", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35380, "upload_time": "2019-12-10T15:33:27", "upload_time_iso_8601": "2019-12-10T15:33:27.336009Z", "url": "https://files.pythonhosted.org/packages/cf/2f/997a14aa3505c86c081262fadf4e4f2f4d5eadb751c9d8ac94845ddc11ad/pyfaidx-0.5.7.tar.gz", "yanked": false}], "0.5.8": [{"comment_text": "", "digests": {"md5": "5f57bba133c8b05f84a831160fc6da23", "sha256": "58f0ff57a875af7e69a12cf1e7086efa4976919ac4dcebbc5f3def6fd4881d0d"}, "downloads": -1, "filename": "pyfaidx-0.5.8.tar.gz", "has_sig": false, "md5_digest": "5f57bba133c8b05f84a831160fc6da23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32228, "upload_time": "2020-01-16T15:58:19", "upload_time_iso_8601": "2020-01-16T15:58:19.577506Z", "url": "https://files.pythonhosted.org/packages/d9/eb/bca4c916d2cde775b5127cef22f276142b01e89fc31fecd832ed996dc97e/pyfaidx-0.5.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5f57bba133c8b05f84a831160fc6da23", "sha256": "58f0ff57a875af7e69a12cf1e7086efa4976919ac4dcebbc5f3def6fd4881d0d"}, "downloads": -1, "filename": "pyfaidx-0.5.8.tar.gz", "has_sig": false, "md5_digest": "5f57bba133c8b05f84a831160fc6da23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32228, "upload_time": "2020-01-16T15:58:19", "upload_time_iso_8601": "2020-01-16T15:58:19.577506Z", "url": "https://files.pythonhosted.org/packages/d9/eb/bca4c916d2cde775b5127cef22f276142b01e89fc31fecd832ed996dc97e/pyfaidx-0.5.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:01 2020"}