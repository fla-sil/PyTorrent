{"info": {"author": "Micha\u0142 Sa\u0142aban", "author_email": "michal@salaban.info", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "Djiki\n=====\nDjiki is a lightweight, portable Wiki engine based on Django. It offers full functionality\nof a wiki engine without any configuration, yet it might be easily customized to match\nyour preferred environment.\n\nFeatures:\n\n* Creole markup,\n* anonymous and registered edits,\n* automatic merges of parallel edits when possible,\n* inclusion of images,\n* diff views between revisions,\n* reverts to any revision in the history,\n* automatic undos of any historical revision, if possible.\n* not strictly bound to Django user model and template engine, you may replace them\n\nRequirements\n------------\n* google-diff-match-patch:\n  http://code.google.com/p/google-diff-match-patch/\n\n* WikiCreole parser in Python:\n  http://oink.sheep.art.pl/WikiCreole%20parser%20in%20python\n  *It is used in the example implementation, but not required by Djiki itself.\n  You are free use any other markup or no markup at all.*\n\n* sorl-thumbnail:\n  https://github.com/sorl/sorl-thumbnail\n  *It is used in the example templates, but you may run djiki\n  with any other thumbnailing module or without one at all.*\n\nUsage\n-----\n* Add 'djiki' and 'sorl.thumbnail' to your INSTALLED_APPS setting.\n* Run './manage.py syncdb' in your project.\n* Add the following to your URLconf::\n\n    (r'wiki/', include('djiki.urls')),\n\n* Add the required setting DJIKI_IMAGES_PATH\n* Create a 'base.html' that Djiki expects to exist and acts as a base template\n  for all the wiki pages. It must have a 'page' block. Alternatively, supply\n  your own 'djiki/base.html' that overrides the supplied template.\n* Optionally include/add the provided CSS in media/css/styles.css to your page\n  template.\n\nSettings\n--------\n\nThe following settings configure Djiki's behavior:\n\n``DJIKI_PARSER`` \u2014 a Python path to the markup parser. The default is\n``djiki.parsers.wikicreole``.\n\n``DJIKI_IMAGES_PATH`` \u2014 path to images, relative to MEDIA_ROOT.\n\n``DJIKI_SPACES_AS_UNDERSCORES`` \u2014\u00a0makes Djiki replace whitespaces in\nURLs by underscores. It's a choice between having nice or exact URLs.\nDepending on the settings, the adresses may look as\n``http://djiki.org/wiki/Main_Page`` or ``http://djiki.org/wiki/Main%20Page``\nThis setting will also squash multiple spaces into one. It affects image\nnames in the same way, too. Defaults to True.\n\n``DJIKI_AUTHORIZATION_BACKEND`` \u2014 a Python path to authorization backend.\nThe default is ``djiki.auth.base.UnrestrictedAccess``, which grants full\nread/write permissions to all clients. The other included backends are\n``djiki.auth.base.OnlyAuthenticatedEdits`` and ``djiki.auth.base.OnlyAdminEdits``.\n\n``DJIKI_TEPLATING_BACKEND`` \u2014 a Python path to a templating backend.\nThe default is ``djiki.templating.django_engine``, which is a light wrapper\nover the standard Django template engine. Therefore you are not strictly bound\nto the default implementation. The author, for example, uses *Jinja2* in some\nof his projects.\n\nParsers\n-------\n\nDjiki allows you to use custom markup parser and it is no longer required\nto use Creole. The default behavior, however, is to pass all the page\ncontents through ``djiki.parsers.wikicreole`` module. The other choices are:\n\n* ``djiki.parsers.raw`` \u2014 passes the content without modification, allowing\n  for raw HTML. This should not be used in a public wiki, as users may\n  enter malicious code.\n\n* ``djiki.parsers.html.SafeHTML`` \u2014 it is a safer alternative, which\n  filters the resulting content from dangerous HTML elements like scripts,\n  CSS styles or annoying and invalid tags.\n\nImages\n------\n\nThe standard Creole markup has been extended to handle resizing of\nimages. The standard syntax of ``{{Image_name.jpg|Image title}}`` is\nstill valid, however you may add size by typing\n``{{Image_name.jpg|300x200|Image title}}`` or even omit the title:\n``{{Image_name.jpg|300x200}}``.\n\nTemplating\n----------\n\n\n\nRoadmap\n-------\n\n* more markup backends; MediaWiki is the main priority\n* page operations: rename, delete\n* multi-language support, interwiki links\n* translations", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/emesik/djiki/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "djiki", "package_url": "https://pypi.org/project/djiki/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/djiki/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/emesik/djiki/"}, "release_url": "https://pypi.org/project/djiki/0.7/", "requires_dist": null, "requires_python": null, "summary": "Django Wiki Application", "version": "0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Djiki is a lightweight, portable Wiki engine based on Django. It offers full functionality\nof a wiki engine without any configuration, yet it might be easily customized to match\nyour preferred environment.</p>\n<p>Features:</p>\n<ul>\n<li>Creole markup,</li>\n<li>anonymous and registered edits,</li>\n<li>automatic merges of parallel edits when possible,</li>\n<li>inclusion of images,</li>\n<li>diff views between revisions,</li>\n<li>reverts to any revision in the history,</li>\n<li>automatic undos of any historical revision, if possible.</li>\n<li>not strictly bound to Django user model and template engine, you may replace them</li>\n</ul>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>google-diff-match-patch:\n<a href=\"http://code.google.com/p/google-diff-match-patch/\" rel=\"nofollow\">http://code.google.com/p/google-diff-match-patch/</a></li>\n<li>WikiCreole parser in Python:\n<a href=\"http://oink.sheep.art.pl/WikiCreole%20parser%20in%20python\" rel=\"nofollow\">http://oink.sheep.art.pl/WikiCreole%20parser%20in%20python</a>\n<em>It is used in the example implementation, but not required by Djiki itself.\nYou are free use any other markup or no markup at all.</em></li>\n<li>sorl-thumbnail:\n<a href=\"https://github.com/sorl/sorl-thumbnail\" rel=\"nofollow\">https://github.com/sorl/sorl-thumbnail</a>\n<em>It is used in the example templates, but you may run djiki\nwith any other thumbnailing module or without one at all.</em></li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<ul>\n<li><p>Add \u2018djiki\u2019 and \u2018sorl.thumbnail\u2019 to your INSTALLED_APPS setting.</p>\n</li>\n<li><p>Run \u2018./manage.py syncdb\u2019 in your project.</p>\n</li>\n<li><p>Add the following to your URLconf:</p>\n<pre>(r'wiki/', include('djiki.urls')),\n</pre>\n</li>\n<li><p>Add the required setting DJIKI_IMAGES_PATH</p>\n</li>\n<li><p>Create a \u2018base.html\u2019 that Djiki expects to exist and acts as a base template\nfor all the wiki pages. It must have a \u2018page\u2019 block. Alternatively, supply\nyour own \u2018djiki/base.html\u2019 that overrides the supplied template.</p>\n</li>\n<li><p>Optionally include/add the provided CSS in media/css/styles.css to your page\ntemplate.</p>\n</li>\n</ul>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p>The following settings configure Djiki\u2019s behavior:</p>\n<p><tt>DJIKI_PARSER</tt> \u2014 a Python path to the markup parser. The default is\n<tt>djiki.parsers.wikicreole</tt>.</p>\n<p><tt>DJIKI_IMAGES_PATH</tt> \u2014 path to images, relative to MEDIA_ROOT.</p>\n<p><tt>DJIKI_SPACES_AS_UNDERSCORES</tt> \u2014\u00a0makes Djiki replace whitespaces in\nURLs by underscores. It\u2019s a choice between having nice or exact URLs.\nDepending on the settings, the adresses may look as\n<tt><span class=\"pre\">http://djiki.org/wiki/Main_Page</span></tt> or <tt><span class=\"pre\">http://djiki.org/wiki/Main%20Page</span></tt>\nThis setting will also squash multiple spaces into one. It affects image\nnames in the same way, too. Defaults to True.</p>\n<p><tt>DJIKI_AUTHORIZATION_BACKEND</tt> \u2014 a Python path to authorization backend.\nThe default is <tt>djiki.auth.base.UnrestrictedAccess</tt>, which grants full\nread/write permissions to all clients. The other included backends are\n<tt>djiki.auth.base.OnlyAuthenticatedEdits</tt> and <tt>djiki.auth.base.OnlyAdminEdits</tt>.</p>\n<p><tt>DJIKI_TEPLATING_BACKEND</tt> \u2014 a Python path to a templating backend.\nThe default is <tt>djiki.templating.django_engine</tt>, which is a light wrapper\nover the standard Django template engine. Therefore you are not strictly bound\nto the default implementation. The author, for example, uses <em>Jinja2</em> in some\nof his projects.</p>\n</div>\n<div id=\"parsers\">\n<h2>Parsers</h2>\n<p>Djiki allows you to use custom markup parser and it is no longer required\nto use Creole. The default behavior, however, is to pass all the page\ncontents through <tt>djiki.parsers.wikicreole</tt> module. The other choices are:</p>\n<ul>\n<li><tt>djiki.parsers.raw</tt> \u2014 passes the content without modification, allowing\nfor raw HTML. This should not be used in a public wiki, as users may\nenter malicious code.</li>\n<li><tt>djiki.parsers.html.SafeHTML</tt> \u2014 it is a safer alternative, which\nfilters the resulting content from dangerous HTML elements like scripts,\nCSS styles or annoying and invalid tags.</li>\n</ul>\n</div>\n<div id=\"images\">\n<h2>Images</h2>\n<p>The standard Creole markup has been extended to handle resizing of\nimages. The standard syntax of <tt>{{Image_name.jpg|Image title}}</tt> is\nstill valid, however you may add size by typing\n<tt>{{Image_name.jpg|300x200|Image title}}</tt> or even omit the title:\n<tt>{{Image_name.jpg|300x200}}</tt>.</p>\n</div>\n<div id=\"templating\">\n<h2>Templating</h2>\n</div>\n<div id=\"roadmap\">\n<h2>Roadmap</h2>\n<ul>\n<li>more markup backends; MediaWiki is the main priority</li>\n<li>page operations: rename, delete</li>\n<li>multi-language support, interwiki links</li>\n<li>translations</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 845356, "releases": {"0.2": [], "0.3": [{"comment_text": "", "digests": {"md5": "68a4eac081773bdca985a95462ea6c6c", "sha256": "2073a4c93da66a90a0916c5d19d9b070591ff5d65841945a299fe1cb44aa3aa6"}, "downloads": -1, "filename": "djiki-0.3.tar.gz", "has_sig": false, "md5_digest": "68a4eac081773bdca985a95462ea6c6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17498, "upload_time": "2013-02-21T18:30:11", "upload_time_iso_8601": "2013-02-21T18:30:11.014284Z", "url": "https://files.pythonhosted.org/packages/1b/87/acb422b3c916cd013074d70ef6e698db2c6c1a16299f0a8c8e5bb586a113/djiki-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "2fd44289936b7f0e251a0196e9798064", "sha256": "a9c902df36c8af7a49485bae7ba787822115ef6271e720e029f2b3d83c296d5a"}, "downloads": -1, "filename": "djiki-0.4.tar.gz", "has_sig": false, "md5_digest": "2fd44289936b7f0e251a0196e9798064", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17578, "upload_time": "2013-03-01T18:51:35", "upload_time_iso_8601": "2013-03-01T18:51:35.315335Z", "url": "https://files.pythonhosted.org/packages/d4/d2/669bd0b783883a4e5d2faa087e83f1f7d702458ef0fa8e494441908169e1/djiki-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "8495a68677c2817f3346b03b8bccd810", "sha256": "671655efd11783f7832f18e8d4eea6cde505c4f0f9b967e72dceaeb161527e20"}, "downloads": -1, "filename": "djiki-0.5.tar.gz", "has_sig": false, "md5_digest": "8495a68677c2817f3346b03b8bccd810", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18586, "upload_time": "2013-07-27T15:45:27", "upload_time_iso_8601": "2013-07-27T15:45:27.990704Z", "url": "https://files.pythonhosted.org/packages/fe/94/263449acb9b279809a54ad98e01c7c0e8a435baff7d8c87319233951a8c9/djiki-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "260446eac57651dc85ebdd30778b4285", "sha256": "5f36dce7c1b032d3c1d8e30884495278ae5771d6b18f45e83eaa71229a16a545"}, "downloads": -1, "filename": "djiki-0.6.tar.gz", "has_sig": false, "md5_digest": "260446eac57651dc85ebdd30778b4285", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18555, "upload_time": "2013-08-21T17:06:24", "upload_time_iso_8601": "2013-08-21T17:06:24.723586Z", "url": "https://files.pythonhosted.org/packages/1d/22/82d3cbe66a9c568c562cb9f2c496e8b2de6aad991adb4eb1f43d2660eaae/djiki-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "474e1e02aa0a8e3df5d1048e8d4376f5", "sha256": "7650a1a84c382bb252a9dad7f502c78f2c0cc7f2f7db5fdd960a3fb39cccdef6"}, "downloads": -1, "filename": "djiki-0.7.tar.gz", "has_sig": false, "md5_digest": "474e1e02aa0a8e3df5d1048e8d4376f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18701, "upload_time": "2013-08-21T21:03:09", "upload_time_iso_8601": "2013-08-21T21:03:09.714825Z", "url": "https://files.pythonhosted.org/packages/07/5e/17a13502bdf4556caf98ab95859f21d46df675943f5bb7caa01317ac749d/djiki-0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "474e1e02aa0a8e3df5d1048e8d4376f5", "sha256": "7650a1a84c382bb252a9dad7f502c78f2c0cc7f2f7db5fdd960a3fb39cccdef6"}, "downloads": -1, "filename": "djiki-0.7.tar.gz", "has_sig": false, "md5_digest": "474e1e02aa0a8e3df5d1048e8d4376f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18701, "upload_time": "2013-08-21T21:03:09", "upload_time_iso_8601": "2013-08-21T21:03:09.714825Z", "url": "https://files.pythonhosted.org/packages/07/5e/17a13502bdf4556caf98ab95859f21d46df675943f5bb7caa01317ac749d/djiki-0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:34 2020"}