{"info": {"author": "Artur Barseghyan", "author_email": "artur.barseghyan@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3"], "description": "===================================\nradar\n===================================\nRandom date generation.\n\nPrerequisites\n===================================\n- Python 2.6.8+, 2.7.+, 3.3.+\n\nInstallation\n===================================\nInstall latest stable version from PyPI:\n\n    $ pip install radar\n\nor install the latest stable version from bitbucket:\n\n    $ pip install -e hg+https://bitbucket.org/barseghyanartur/radar@stable#egg=radar\n\nor install the latest stable version from github:\n\n    $ pip install -e git+http://github.org/barseghyanartur/radar@stable#egg=radar\n\nUsage and examples\n===================================\nBasic usage\n-----------------------------------\n>>> import radar\n>>> radar.random_datetime()\ndatetime.datetime(2013, 5, 24, 16, 54, 52)\n\nSpecify date range\n-----------------------------------\nYou may pass ``datetime.datetime`` or ``datetime.date`` objects:\n\n>>> import datetime\n>>> import radar\n>>> radar.random_date(\n>>>     start = datetime.datetime(year=2000, month=5, day=24),\n>>>     stop = datetime.datetime(year=2013, month=5, day=24)\n>>> )\ndatetime.date(2012, 12, 31)\n\nYou may also pass strings:\n\n>>> radar.random_datetime(start='2012-05-24T00:00:00', stop='2013-05-24T23:59:59')\ndatetime.datetime(2013, 4, 18, 17, 54, 6)\n\nGenerate random time\n-----------------------------------\n>>> radar.random_time(start='2012-01-01T00:00:00', stop='2012-01-01T23:59:59')\ndatetime.time(11, 33, 59)\n\nAdvanced usage\n-----------------------------------\nWhen strings are passed, by default ``radar`` uses ``python-dateutil`` package to parse dates. Date parser of the\n``dateutil`` package is quite heavy, althogh is extremely smart. As an alternative, ``radar`` comes with own parser\n``radar.utils.parse``, which is much lighter (about 5 times faster compared to ``dateutil``).\n\nUsing built-in parser:\n\n>>> radar.random_datetime(start='2012-05-24T00:00:00', stop='2013-05-24T23:59:59', parse=radar.utils.parse)\ndatetime.datetime(2012, 11, 10, 15, 43, 40)\n\nBuilt-in parser parses the dates using formats specified in ``radar.defaults.FORMATS``:\n\n>>> start = radar.utils.parse('2012-01-01')\ndatetime.datetime(2012, 1, 1, 0, 0)\n>>> stop = radar.utils.parse('2013-01-01')\ndatetime.datetime(2013, 1, 1, 0, 0)\n\nIf you want to add more formats, define your own formats and feed them to built-in parser:\n\n>>> MY_FORMATS = (\n>>>     (\"%d-%m-%YT%H:%M:%S\", True),\n>>>     (\"%d-%m-%Y\", False)\n>>> )\n>>>\n>>> def my_parse(timestamp):\n>>>     return radar.utils.parse(timestamp, formats=MY_FORMATS)\n>>>\n>>> radar.random_datetime(start='24-05-2012T00:00:00', stop='24-05-2013T23:59:59', parse=my_parse)\ndatetime.datetime(2012, 11, 10, 15, 43, 40)\n\nGeneral notes\n-----------------------------------\nIf you expect to have really weird date formats when generating random dates from strings, you might want to consider\ninstalling wonderful `python-dateutil` package.\n\nWhen generating thousands of objects (using ``dateutil`` or built-in parser), you're advised to pass date ranges as\n``datetime.datetime`` or ``datetime.date`` objects, rather than passing strings (parsing costs time).\n\nA good example:\n\n>>> start = radar.utils.parse('2000-01-01')\n>>> stop = radar.utils.parse('2013-12-31')\n>>> for i in xrange(1000000):\n>>>     radar.random_datetime(start=start, stop=stop)\n\nSee https://bitbucket.org/barseghyanartur/radar/src (example) directory for benchmarks and more examples.\n\nLicense\n===================================\nGPL 2.0/LGPL 2.1\n\nSupport\n===================================\nFor any issues contact me at the e-mail given in the `Author` section.\n\nAuthor\n===================================\nArtur Barseghyan <artur.barseghyan@gmail.com>", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/barseghyanartur/radar", "keywords": "random date,random datetime,python", "license": "GPL 2.0/LGPL 2.1", "maintainer": null, "maintainer_email": null, "name": "radar", "package_url": "https://pypi.org/project/radar/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/radar/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/barseghyanartur/radar"}, "release_url": "https://pypi.org/project/radar/0.3/", "requires_dist": null, "requires_python": null, "summary": "Generate random date(time).", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Random date generation.</p>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<ul>\n<li>Python 2.6.8+, 2.7.+, 3.3.+</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install latest stable version from PyPI:</p>\n<blockquote>\n$ pip install radar</blockquote>\n<p>or install the latest stable version from bitbucket:</p>\n<blockquote>\n$ pip install -e hg+https://bitbucket.org/barseghyanartur/radar@stable#egg=radar</blockquote>\n<p>or install the latest stable version from github:</p>\n<blockquote>\n$ pip install -e git+http://github.org/barseghyanartur/radar@stable#egg=radar</blockquote>\n</div>\n<div id=\"usage-and-examples\">\n<h2>Usage and examples</h2>\n<div id=\"basic-usage\">\n<h3>Basic usage</h3>\n<pre>&gt;&gt;&gt; import radar\n&gt;&gt;&gt; radar.random_datetime()\ndatetime.datetime(2013, 5, 24, 16, 54, 52)\n</pre>\n</div>\n<div id=\"specify-date-range\">\n<h3>Specify date range</h3>\n<p>You may pass <tt>datetime.datetime</tt> or <tt>datetime.date</tt> objects:</p>\n<pre>&gt;&gt;&gt; import datetime\n&gt;&gt;&gt; import radar\n&gt;&gt;&gt; radar.random_date(\n&gt;&gt;&gt;     start = datetime.datetime(year=2000, month=5, day=24),\n&gt;&gt;&gt;     stop = datetime.datetime(year=2013, month=5, day=24)\n&gt;&gt;&gt; )\ndatetime.date(2012, 12, 31)\n</pre>\n<p>You may also pass strings:</p>\n<pre>&gt;&gt;&gt; radar.random_datetime(start='2012-05-24T00:00:00', stop='2013-05-24T23:59:59')\ndatetime.datetime(2013, 4, 18, 17, 54, 6)\n</pre>\n</div>\n<div id=\"generate-random-time\">\n<h3>Generate random time</h3>\n<pre>&gt;&gt;&gt; radar.random_time(start='2012-01-01T00:00:00', stop='2012-01-01T23:59:59')\ndatetime.time(11, 33, 59)\n</pre>\n</div>\n<div id=\"advanced-usage\">\n<h3>Advanced usage</h3>\n<p>When strings are passed, by default <tt>radar</tt> uses <tt><span class=\"pre\">python-dateutil</span></tt> package to parse dates. Date parser of the\n<tt>dateutil</tt> package is quite heavy, althogh is extremely smart. As an alternative, <tt>radar</tt> comes with own parser\n<tt>radar.utils.parse</tt>, which is much lighter (about 5 times faster compared to <tt>dateutil</tt>).</p>\n<p>Using built-in parser:</p>\n<pre>&gt;&gt;&gt; radar.random_datetime(start='2012-05-24T00:00:00', stop='2013-05-24T23:59:59', parse=radar.utils.parse)\ndatetime.datetime(2012, 11, 10, 15, 43, 40)\n</pre>\n<p>Built-in parser parses the dates using formats specified in <tt>radar.defaults.FORMATS</tt>:</p>\n<pre>&gt;&gt;&gt; start = radar.utils.parse('2012-01-01')\ndatetime.datetime(2012, 1, 1, 0, 0)\n&gt;&gt;&gt; stop = radar.utils.parse('2013-01-01')\ndatetime.datetime(2013, 1, 1, 0, 0)\n</pre>\n<p>If you want to add more formats, define your own formats and feed them to built-in parser:</p>\n<pre>&gt;&gt;&gt; MY_FORMATS = (\n&gt;&gt;&gt;     (\"%d-%m-%YT%H:%M:%S\", True),\n&gt;&gt;&gt;     (\"%d-%m-%Y\", False)\n&gt;&gt;&gt; )\n&gt;&gt;&gt;\n&gt;&gt;&gt; def my_parse(timestamp):\n&gt;&gt;&gt;     return radar.utils.parse(timestamp, formats=MY_FORMATS)\n&gt;&gt;&gt;\n&gt;&gt;&gt; radar.random_datetime(start='24-05-2012T00:00:00', stop='24-05-2013T23:59:59', parse=my_parse)\ndatetime.datetime(2012, 11, 10, 15, 43, 40)\n</pre>\n</div>\n<div id=\"general-notes\">\n<h3>General notes</h3>\n<p>If you expect to have really weird date formats when generating random dates from strings, you might want to consider\ninstalling wonderful <cite>python-dateutil</cite> package.</p>\n<p>When generating thousands of objects (using <tt>dateutil</tt> or built-in parser), you\u2019re advised to pass date ranges as\n<tt>datetime.datetime</tt> or <tt>datetime.date</tt> objects, rather than passing strings (parsing costs time).</p>\n<p>A good example:</p>\n<pre>&gt;&gt;&gt; start = radar.utils.parse('2000-01-01')\n&gt;&gt;&gt; stop = radar.utils.parse('2013-12-31')\n&gt;&gt;&gt; for i in xrange(1000000):\n&gt;&gt;&gt;     radar.random_datetime(start=start, stop=stop)\n</pre>\n<p>See <a href=\"https://bitbucket.org/barseghyanartur/radar/src\" rel=\"nofollow\">https://bitbucket.org/barseghyanartur/radar/src</a> (example) directory for benchmarks and more examples.</p>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>GPL 2.0/LGPL 2.1</p>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>For any issues contact me at the e-mail given in the <cite>Author</cite> section.</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>Artur Barseghyan &lt;<a href=\"mailto:artur.barseghyan%40gmail.com\">artur<span>.</span>barseghyan<span>@</span>gmail<span>.</span>com</a>&gt;</p>\n</div>\n\n          </div>"}, "last_serial": 3472153, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "f76ee87c5de1f094e9cc9114e7175b5a", "sha256": "0eaf3ae0f563e3979186a7cb543dac347af8f0087181edc15e1b02ad53d8f56b"}, "downloads": -1, "filename": "radar-0.1.tar.gz", "has_sig": false, "md5_digest": "f76ee87c5de1f094e9cc9114e7175b5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2504, "upload_time": "2013-06-18T21:56:22", "upload_time_iso_8601": "2013-06-18T21:56:22.574044Z", "url": "https://files.pythonhosted.org/packages/e9/ef/f3b99b565eb039c75a2bc84158c5d07ee2d3114467679544fb70f0839423/radar-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "d377118b84e269424fd5cc0d865d88f7", "sha256": "4ef9c8b6f4812a4303d1d7f19a69b8b35b101e70751568baf18a9ce495f406af"}, "downloads": -1, "filename": "radar-0.2.tar.gz", "has_sig": false, "md5_digest": "d377118b84e269424fd5cc0d865d88f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2941, "upload_time": "2013-06-18T23:41:45", "upload_time_iso_8601": "2013-06-18T23:41:45.520290Z", "url": "https://files.pythonhosted.org/packages/b1/17/b322e0bf4d7dcd214620c692a1d6227c079fbff35c5c108a8c425f8be50c/radar-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "3d51feb00253c2dcb25b058380b170d5", "sha256": "b5e0e4406ce4e47c0d5dad5744e94e8d382b212488f62e14f94d9ea244b1b3b4"}, "downloads": -1, "filename": "radar-0.3.tar.gz", "has_sig": false, "md5_digest": "3d51feb00253c2dcb25b058380b170d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4498, "upload_time": "2013-10-08T18:28:03", "upload_time_iso_8601": "2013-10-08T18:28:03.673620Z", "url": "https://files.pythonhosted.org/packages/96/46/66a561b628b6e341eebf47b1c4bf53f77c3c807929aa42f5a4cd6f476068/radar-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3d51feb00253c2dcb25b058380b170d5", "sha256": "b5e0e4406ce4e47c0d5dad5744e94e8d382b212488f62e14f94d9ea244b1b3b4"}, "downloads": -1, "filename": "radar-0.3.tar.gz", "has_sig": false, "md5_digest": "3d51feb00253c2dcb25b058380b170d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4498, "upload_time": "2013-10-08T18:28:03", "upload_time_iso_8601": "2013-10-08T18:28:03.673620Z", "url": "https://files.pythonhosted.org/packages/96/46/66a561b628b6e341eebf47b1c4bf53f77c3c807929aa42f5a4cd6f476068/radar-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:04 2020"}