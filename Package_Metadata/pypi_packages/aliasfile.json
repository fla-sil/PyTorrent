{"info": {"author": "Samuele Santi", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "Aliasfile\n#########\n\nDefine your per-directory command aliases in Yaml, to get quick\nshortcuts (and avoid having to remember long commands).\n\n**WARNING:** This project is still experimental, and things may change\nsuddenly. Suggestions are welcome.\n\n\nConfiguration\n=============\n\nConfiguration is held in a file, usually named ``./.aliases``, as a\ndictionary serialized in YAML format.\n\nThe main section is ``commands``, a dict mapping alias names to their\nspecification.\n\n\nCommand specification\n---------------------\n\n- ``command``: command to be run, as a string\n\n  - will be tokenized via ``shlex.split``\n  - string-format-style placeholders will be replaced:\n\n    - positional arguments (``{}``, ``{1}``) -> variadic arguments to the command\n    - ..or explicit: ``{args[1]}``\n    - environment: ``{env[USER]}``\n    - vars (see below): ``{vars[USER]}``\n    - extra arguments will be appended to the command\n\n- ``env``: environment for the command\n\n  - not considered in string formatting\n  - will go through the same formatting as commands\n\n- ``vars``: to be replaced in env/command formatting\n\n\nNotes\n=====\n\n- we want some way to prevent automatic appending of varargs\n- we might want to use jinja for formatting, so we can have conditionals / defaults\n- we might want inheritance, rather than having \"nested\" aliasing\n\n\nExamples\n========\n\n.. code-block:: yaml\n\n    commands:\n      test:\n        command: xvfb-run py.test --reuse-db -vvv ./tests/\n        env:\n          DJANGO_SETTINGS_MODULE: fooproject.settings.testing\n          PYTHONPATH: \"{env[HOME]}/Projects/fooproject\"\n\n.. code-block:: yaml\n\n    commands:\n      manage:\n        command: python manage.py\n        env:\n          DJANGO_SETTINGS_MODULE: fooproject.settings.testing\n          PYTHONPATH: \"{env[HOME]}/Projects/fooproject\"\n          LOG_LEVEL: DEBUG\n\n      runserver:\n        command: aliasfile manage runserver\n\n      migrate:\n        command: aliasfile manage migrate\n\n      shell:\n        command: aliasfile manage shell", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rshk/aliasfile", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "aliasfile", "package_url": "https://pypi.org/project/aliasfile/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/aliasfile/", "project_urls": {"Homepage": "https://github.com/rshk/aliasfile"}, "release_url": "https://pypi.org/project/aliasfile/0.1.1/", "requires_dist": ["click", "pyyaml"], "requires_python": "", "summary": "", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Define your per-directory command aliases in Yaml, to get quick\nshortcuts (and avoid having to remember long commands).</p>\n<p><strong>WARNING:</strong> This project is still experimental, and things may change\nsuddenly. Suggestions are welcome.</p>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Configuration is held in a file, usually named <tt><span class=\"pre\">./.aliases</span></tt>, as a\ndictionary serialized in YAML format.</p>\n<p>The main section is <tt>commands</tt>, a dict mapping alias names to their\nspecification.</p>\n<div id=\"command-specification\">\n<h3>Command specification</h3>\n<ul>\n<li><tt>command</tt>: command to be run, as a string<ul>\n<li>will be tokenized via <tt>shlex.split</tt></li>\n<li>string-format-style placeholders will be replaced:<ul>\n<li>positional arguments (<tt>{}</tt>, <tt>{1}</tt>) -&gt; variadic arguments to the command</li>\n<li>..or explicit: <tt>{args[1]}</tt></li>\n<li>environment: <tt>{env[USER]}</tt></li>\n<li>vars (see below): <tt>{vars[USER]}</tt></li>\n<li>extra arguments will be appended to the command</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><tt>env</tt>: environment for the command<ul>\n<li>not considered in string formatting</li>\n<li>will go through the same formatting as commands</li>\n</ul>\n</li>\n<li><tt>vars</tt>: to be replaced in env/command formatting</li>\n</ul>\n</div>\n</div>\n<div id=\"notes\">\n<h2>Notes</h2>\n<ul>\n<li>we want some way to prevent automatic appending of varargs</li>\n<li>we might want to use jinja for formatting, so we can have conditionals / defaults</li>\n<li>we might want inheritance, rather than having \u201cnested\u201d aliasing</li>\n</ul>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<pre><span class=\"nt\">commands</span><span class=\"p\">:</span>\n  <span class=\"nt\">test</span><span class=\"p\">:</span>\n    <span class=\"nt\">command</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">xvfb-run py.test --reuse-db -vvv ./tests/</span>\n    <span class=\"nt\">env</span><span class=\"p\">:</span>\n      <span class=\"nt\">DJANGO_SETTINGS_MODULE</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">fooproject.settings.testing</span>\n      <span class=\"nt\">PYTHONPATH</span><span class=\"p\">:</span> <span class=\"s\">\"{env[HOME]}/Projects/fooproject\"</span>\n</pre>\n<pre><span class=\"nt\">commands</span><span class=\"p\">:</span>\n  <span class=\"nt\">manage</span><span class=\"p\">:</span>\n    <span class=\"nt\">command</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">python manage.py</span>\n    <span class=\"nt\">env</span><span class=\"p\">:</span>\n      <span class=\"nt\">DJANGO_SETTINGS_MODULE</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">fooproject.settings.testing</span>\n      <span class=\"nt\">PYTHONPATH</span><span class=\"p\">:</span> <span class=\"s\">\"{env[HOME]}/Projects/fooproject\"</span>\n      <span class=\"nt\">LOG_LEVEL</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">DEBUG</span>\n\n  <span class=\"nt\">runserver</span><span class=\"p\">:</span>\n    <span class=\"nt\">command</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">aliasfile manage runserver</span>\n\n  <span class=\"nt\">migrate</span><span class=\"p\">:</span>\n    <span class=\"nt\">command</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">aliasfile manage migrate</span>\n\n  <span class=\"nt\">shell</span><span class=\"p\">:</span>\n    <span class=\"nt\">command</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">aliasfile manage shell</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1841302, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ad2f3bedc51b008607088435028c8f24", "sha256": "890ae36fc4f9975de64038b1b283100db5faa52a5479fab9ac6ef69b28c6e493"}, "downloads": -1, "filename": "aliasfile-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ad2f3bedc51b008607088435028c8f24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5228, "upload_time": "2015-11-23T13:52:52", "upload_time_iso_8601": "2015-11-23T13:52:52.272651Z", "url": "https://files.pythonhosted.org/packages/c3/cf/6b837efecc8bb7eb59a175b8a08068288888a6859f1c9cd02a7b6171117e/aliasfile-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "031403cb69512e42ff054023a334fe13", "sha256": "983360031d0d65072bee8ba8db9d9d609017772d333993929497c81874bbba2c"}, "downloads": -1, "filename": "aliasfile-0.1.tar.gz", "has_sig": false, "md5_digest": "031403cb69512e42ff054023a334fe13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3392, "upload_time": "2015-11-23T13:52:59", "upload_time_iso_8601": "2015-11-23T13:52:59.716832Z", "url": "https://files.pythonhosted.org/packages/29/73/7f5d577e3935b85acc6458e845ec24329f5c802479b8f2333f49c8e07326/aliasfile-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "5627e9d41ebcea7768ee960f3d5b1ee6", "sha256": "a23a040856da8799341abb85a9c6a1bcd86b3fd4c89365d67fb39ce712c94a9f"}, "downloads": -1, "filename": "aliasfile-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "5627e9d41ebcea7768ee960f3d5b1ee6", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 12023, "upload_time": "2015-12-01T11:02:25", "upload_time_iso_8601": "2015-12-01T11:02:25.471632Z", "url": "https://files.pythonhosted.org/packages/2e/39/6074380e795e3f7d9dad6e9b8a86d7011ed9784c0774d391e2082381ceaf/aliasfile-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "670748d006161f11d4b5e22a8323a0f6", "sha256": "23ec4b14653ab5e988687b80f42e65ef041be6759126e5475c31abfa220096f9"}, "downloads": -1, "filename": "aliasfile-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "670748d006161f11d4b5e22a8323a0f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12023, "upload_time": "2015-12-01T11:02:34", "upload_time_iso_8601": "2015-12-01T11:02:34.891275Z", "url": "https://files.pythonhosted.org/packages/d8/42/949137c5c9c6b568ae630574a20946bf078df15208623d7a07cdf98de0a7/aliasfile-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e2259fd92c1824d159ce07c54251c595", "sha256": "ff2629e44a6b3fb67a00c997ccee8ed6c850c7de4c5f6c7eaea4f5089ea78129"}, "downloads": -1, "filename": "aliasfile-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e2259fd92c1824d159ce07c54251c595", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8964, "upload_time": "2015-12-01T11:02:40", "upload_time_iso_8601": "2015-12-01T11:02:40.934637Z", "url": "https://files.pythonhosted.org/packages/fd/7f/664ae7e8ec3e8b708b9168677407cb93e7cbb869ae4569cf9f141bf9161b/aliasfile-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5627e9d41ebcea7768ee960f3d5b1ee6", "sha256": "a23a040856da8799341abb85a9c6a1bcd86b3fd4c89365d67fb39ce712c94a9f"}, "downloads": -1, "filename": "aliasfile-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "5627e9d41ebcea7768ee960f3d5b1ee6", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 12023, "upload_time": "2015-12-01T11:02:25", "upload_time_iso_8601": "2015-12-01T11:02:25.471632Z", "url": "https://files.pythonhosted.org/packages/2e/39/6074380e795e3f7d9dad6e9b8a86d7011ed9784c0774d391e2082381ceaf/aliasfile-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "670748d006161f11d4b5e22a8323a0f6", "sha256": "23ec4b14653ab5e988687b80f42e65ef041be6759126e5475c31abfa220096f9"}, "downloads": -1, "filename": "aliasfile-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "670748d006161f11d4b5e22a8323a0f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12023, "upload_time": "2015-12-01T11:02:34", "upload_time_iso_8601": "2015-12-01T11:02:34.891275Z", "url": "https://files.pythonhosted.org/packages/d8/42/949137c5c9c6b568ae630574a20946bf078df15208623d7a07cdf98de0a7/aliasfile-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e2259fd92c1824d159ce07c54251c595", "sha256": "ff2629e44a6b3fb67a00c997ccee8ed6c850c7de4c5f6c7eaea4f5089ea78129"}, "downloads": -1, "filename": "aliasfile-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e2259fd92c1824d159ce07c54251c595", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8964, "upload_time": "2015-12-01T11:02:40", "upload_time_iso_8601": "2015-12-01T11:02:40.934637Z", "url": "https://files.pythonhosted.org/packages/fd/7f/664ae7e8ec3e8b708b9168677407cb93e7cbb869ae4569cf9f141bf9161b/aliasfile-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:19:49 2020"}