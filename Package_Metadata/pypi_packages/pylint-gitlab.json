{"info": {"author": "Stephan M\u00fcller", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# pylint-gitlab\n\n[![pipeline status](https://gitlab.com/smueller18/pylint-gitlab/badges/master/pipeline.svg)](https://gitlab.com/smueller18/pylint-gitlab/commits/master)\n[![coverage](https://gitlab.com/smueller18/pylint-gitlab/badges/master/coverage.svg)](https://smueller18.gitlab.io/pylint-gitlab/coverage/)\n[![pylint](https://smueller18.gitlab.io/pylint-gitlab/badges/pylint.svg)](https://smueller18.gitlab.io/pylint-gitlab/lint/)\n![markdownlint](https://smueller18.gitlab.io/pylint-gitlab/badges/markdownlint.svg)\n![dockerlint](https://smueller18.gitlab.io/pylint-gitlab/badges/dockerlint.svg)\n![yamllint](https://smueller18.gitlab.io/pylint-gitlab/badges/yamllint.svg)\n\nThis project provides pylint formatters for a nice integration with GitLab CI.\n\n| Formatter | Description |\n| --- | --- |\n| `GitlabCodeClimateReporter` | Maps the linting result in [Code Climate format](https://docs.gitlab.com/ee/user/project/merge_requests/code_quality.html) |\n| `GitlabPagesHtmlReporter` | Creates a table in an HTML page with linting results and links to source code. |\n\n## Usage\n\nInstall package `pylint-gitlab`:\n\n```sh\npip install pylint-gitlab\n```\n\nThe `pylint` package is a dependency of `pylint-gitlab` so it will be installed automatically.\n\nNow the formatters can be used by running `pylint` command and setting custom output formats with parameter `--output-format`.\n\n```sh\npylint --exit-zero --output-format=pylint_gitlab.GitlabCodeClimateReporter . > codeclimate.json\npylint --exit-zero --output-format=pylint_gitlab.GitlabPagesHtmlReporter . > pylint.html\n```\n\n### GitLab CI integration\n\nHere is a minimalistic version for a `.gitlab-ci.yml` file:\n```yaml\npylint:\n  stage: test\n  image: python:3.7-slim\n  before_script:\n    - mkdir -p public/badges public/lint\n    - echo undefined > public/badges/$CI_JOB_NAME.score\n    - pip install pylint_gitlab\n  script:\n    - pylint --exit-zero --output-format=text $(find -type f -name \"*.py\" ! -path \"**/.venv/**\") | tee /tmp/pylint.txt\n    - sed -n 's/^Your code has been rated at \\([-0-9.]*\\)\\/.*/\\1/p' /tmp/pylint.txt > public/badges/$CI_JOB_NAME.score\n    - pylint --exit-zero --output-format=pylint_gitlab.GitlabCodeClimateReporter $(find -type f -name \"*.py\" ! -path \"**/.venv/**\") > codeclimate.json\n    - pylint --exit-zero --output-format=pylint_gitlab.GitlabPagesHtmlReporter $(find -type f -name \"*.py\" ! -path \"**/.venv/**\") > public/lint/index.html\n  after_script:\n    - anybadge --overwrite --label $CI_JOB_NAME --value=$(cat public/badges/$CI_JOB_NAME.score) --file=public/badges/$CI_JOB_NAME.svg 4=red 6=orange 8=yellow 10=green\n    - |\n      echo \"Your score is: $(cat public/badges/$CI_JOB_NAME.score)\"\n  artifacts:\n    paths:\n      - public\n    reports:\n      codequality: codeclimate.json\n    when: always\n\npages:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo\n  artifacts:\n    paths:\n      - public\n  only:\n    refs:\n      - master\n```\n\nYou can then use the published badge for linting results.\n\n[![pylint](https://smueller18.gitlab.io/pylint-gitlab/badges/pylint.svg)](https://smueller18.gitlab.io/pylint-gitlab/lint/)\n\n```markdown\n[![pylint](https://<USER/GROUP_NAME>.gitlab.io/<PROJECT_PATH>/badges/pylint.svg)](https://<USER/GROUP_NAME>.gitlab.io/<PROJECT_PATH>/lint/)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/smueller18/pylint-gitlab", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pylint-gitlab", "package_url": "https://pypi.org/project/pylint-gitlab/", "platform": "", "project_url": "https://pypi.org/project/pylint-gitlab/", "project_urls": {"Documentation": "https://smueller18.gitlab.com/pylint-gitlab/", "Homepage": "https://gitlab.com/smueller18/pylint-gitlab", "Source": "https://gitlab.com/smueller18/pylint-gitlab", "Tracker": "https://gitlab.com/smueller18/pylint-gitlab/issues"}, "release_url": "https://pypi.org/project/pylint-gitlab/0.0.1/", "requires_dist": ["anybadge (==1.6.2)", "astroid (==2.3.3)", "isort (==4.3.21)", "jinja2 (==2.11.1)", "lazy-object-proxy (==1.4.3)", "markupsafe (==1.1.1)", "mccabe (==0.6.1)", "pylint (==2.4.4)", "six (==1.14.0)", "typed-ast (==1.4.1)", "wrapt (==1.11.2)"], "requires_python": ">=3.7", "summary": "This project provides pylint formatters for a nice integration with GitLab CI.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pylint-gitlab</h1>\n<p><a href=\"https://gitlab.com/smueller18/pylint-gitlab/commits/master\" rel=\"nofollow\"><img alt=\"pipeline status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/32963bcd95fcd461162768b440092bb4d624b5b0/68747470733a2f2f6769746c61622e636f6d2f736d75656c6c657231382f70796c696e742d6769746c61622f6261646765732f6d61737465722f706970656c696e652e737667\"></a>\n<a href=\"https://smueller18.gitlab.io/pylint-gitlab/coverage/\" rel=\"nofollow\"><img alt=\"coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7322211bda28e8a6ba304672cd2258c3d3714465/68747470733a2f2f6769746c61622e636f6d2f736d75656c6c657231382f70796c696e742d6769746c61622f6261646765732f6d61737465722f636f7665726167652e737667\"></a>\n<a href=\"https://smueller18.gitlab.io/pylint-gitlab/lint/\" rel=\"nofollow\"><img alt=\"pylint\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/264ba3ac1d977f1da1fe8ed52a8b84163ac9894a/68747470733a2f2f736d75656c6c657231382e6769746c61622e696f2f70796c696e742d6769746c61622f6261646765732f70796c696e742e737667\"></a>\n<img alt=\"markdownlint\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12da01b045bdf54d8d5b6a218c59eac95588ac77/68747470733a2f2f736d75656c6c657231382e6769746c61622e696f2f70796c696e742d6769746c61622f6261646765732f6d61726b646f776e6c696e742e737667\">\n<img alt=\"dockerlint\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a48ab13e7a96c98ed55551da68f5272753e60640/68747470733a2f2f736d75656c6c657231382e6769746c61622e696f2f70796c696e742d6769746c61622f6261646765732f646f636b65726c696e742e737667\">\n<img alt=\"yamllint\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b405da6e31849f2db34acc2c5547f62a4d2abf99/68747470733a2f2f736d75656c6c657231382e6769746c61622e696f2f70796c696e742d6769746c61622f6261646765732f79616d6c6c696e742e737667\"></p>\n<p>This project provides pylint formatters for a nice integration with GitLab CI.</p>\n<table>\n<thead>\n<tr>\n<th>Formatter</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>GitlabCodeClimateReporter</code></td>\n<td>Maps the linting result in <a href=\"https://docs.gitlab.com/ee/user/project/merge_requests/code_quality.html\" rel=\"nofollow\">Code Climate format</a></td>\n</tr>\n<tr>\n<td><code>GitlabPagesHtmlReporter</code></td>\n<td>Creates a table in an HTML page with linting results and links to source code.</td>\n</tr></tbody></table>\n<h2>Usage</h2>\n<p>Install package <code>pylint-gitlab</code>:</p>\n<pre>pip install pylint-gitlab\n</pre>\n<p>The <code>pylint</code> package is a dependency of <code>pylint-gitlab</code> so it will be installed automatically.</p>\n<p>Now the formatters can be used by running <code>pylint</code> command and setting custom output formats with parameter <code>--output-format</code>.</p>\n<pre>pylint --exit-zero --output-format<span class=\"o\">=</span>pylint_gitlab.GitlabCodeClimateReporter . &gt; codeclimate.json\npylint --exit-zero --output-format<span class=\"o\">=</span>pylint_gitlab.GitlabPagesHtmlReporter . &gt; pylint.html\n</pre>\n<h3>GitLab CI integration</h3>\n<p>Here is a minimalistic version for a <code>.gitlab-ci.yml</code> file:</p>\n<pre><span class=\"nt\">pylint</span><span class=\"p\">:</span>\n  <span class=\"nt\">stage</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">test</span>\n  <span class=\"nt\">image</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">python:3.7-slim</span>\n  <span class=\"nt\">before_script</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">mkdir -p public/badges public/lint</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">echo undefined &gt; public/badges/$CI_JOB_NAME.score</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">pip install pylint_gitlab</span>\n  <span class=\"nt\">script</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">pylint --exit-zero --output-format=text $(find -type f -name \"*.py\" ! -path \"**/.venv/**\") | tee /tmp/pylint.txt</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">sed -n 's/^Your code has been rated at \\([-0-9.]*\\)\\/.*/\\1/p' /tmp/pylint.txt &gt; public/badges/$CI_JOB_NAME.score</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">pylint --exit-zero --output-format=pylint_gitlab.GitlabCodeClimateReporter $(find -type f -name \"*.py\" ! -path \"**/.venv/**\") &gt; codeclimate.json</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">pylint --exit-zero --output-format=pylint_gitlab.GitlabPagesHtmlReporter $(find -type f -name \"*.py\" ! -path \"**/.venv/**\") &gt; public/lint/index.html</span>\n  <span class=\"nt\">after_script</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">anybadge --overwrite --label $CI_JOB_NAME --value=$(cat public/badges/$CI_JOB_NAME.score) --file=public/badges/$CI_JOB_NAME.svg 4=red 6=orange 8=yellow 10=green</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"p p-Indicator\">|</span>\n      <span class=\"no\">echo \"Your score is: $(cat public/badges/$CI_JOB_NAME.score)\"</span>\n  <span class=\"nt\">artifacts</span><span class=\"p\">:</span>\n    <span class=\"nt\">paths</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">public</span>\n    <span class=\"nt\">reports</span><span class=\"p\">:</span>\n      <span class=\"nt\">codequality</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">codeclimate.json</span>\n    <span class=\"nt\">when</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">always</span>\n\n<span class=\"nt\">pages</span><span class=\"p\">:</span>\n  <span class=\"nt\">stage</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">deploy</span>\n  <span class=\"nt\">image</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">alpine:latest</span>\n  <span class=\"nt\">script</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">echo</span>\n  <span class=\"nt\">artifacts</span><span class=\"p\">:</span>\n    <span class=\"nt\">paths</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">public</span>\n  <span class=\"nt\">only</span><span class=\"p\">:</span>\n    <span class=\"nt\">refs</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">master</span>\n</pre>\n<p>You can then use the published badge for linting results.</p>\n<p><a href=\"https://smueller18.gitlab.io/pylint-gitlab/lint/\" rel=\"nofollow\"><img alt=\"pylint\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/264ba3ac1d977f1da1fe8ed52a8b84163ac9894a/68747470733a2f2f736d75656c6c657231382e6769746c61622e696f2f70796c696e742d6769746c61622f6261646765732f70796c696e742e737667\"></a></p>\n<pre>[![pylint](https://&lt;USER/GROUP_NAME&gt;.gitlab.io/&lt;PROJECT_PATH&gt;/badges/pylint.svg)](https://&lt;USER/GROUP_NAME&gt;.gitlab.io/&lt;PROJECT_PATH&gt;/lint/)\n</pre>\n\n          </div>"}, "last_serial": 6730171, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3125656467590d19d99d9abe7ca94892", "sha256": "dfc01a58d0a29d82711dd19d0f1834dd6099245908f3af8241d942d21f49285f"}, "downloads": -1, "filename": "pylint_gitlab-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3125656467590d19d99d9abe7ca94892", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 7602, "upload_time": "2020-03-01T22:10:20", "upload_time_iso_8601": "2020-03-01T22:10:20.815915Z", "url": "https://files.pythonhosted.org/packages/53/75/0b2446995a4aae56fab0a31834dc6a97d9f63c6847a72105204d20badaa7/pylint_gitlab-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3057b8bd705400ea86ae6125a767d3a", "sha256": "4cde29de07e46ac7827ba6235182c3028e96e068e6c02ac82c7d7f355eab30da"}, "downloads": -1, "filename": "pylint-gitlab-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b3057b8bd705400ea86ae6125a767d3a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 6142, "upload_time": "2020-03-01T22:10:22", "upload_time_iso_8601": "2020-03-01T22:10:22.843912Z", "url": "https://files.pythonhosted.org/packages/a3/0c/d679182379d6e76b223bd4887efe043f2dc7eb03702dcf2441fa3bf71fc6/pylint-gitlab-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3125656467590d19d99d9abe7ca94892", "sha256": "dfc01a58d0a29d82711dd19d0f1834dd6099245908f3af8241d942d21f49285f"}, "downloads": -1, "filename": "pylint_gitlab-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3125656467590d19d99d9abe7ca94892", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 7602, "upload_time": "2020-03-01T22:10:20", "upload_time_iso_8601": "2020-03-01T22:10:20.815915Z", "url": "https://files.pythonhosted.org/packages/53/75/0b2446995a4aae56fab0a31834dc6a97d9f63c6847a72105204d20badaa7/pylint_gitlab-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3057b8bd705400ea86ae6125a767d3a", "sha256": "4cde29de07e46ac7827ba6235182c3028e96e068e6c02ac82c7d7f355eab30da"}, "downloads": -1, "filename": "pylint-gitlab-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b3057b8bd705400ea86ae6125a767d3a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 6142, "upload_time": "2020-03-01T22:10:22", "upload_time_iso_8601": "2020-03-01T22:10:22.843912Z", "url": "https://files.pythonhosted.org/packages/a3/0c/d679182379d6e76b223bd4887efe043f2dc7eb03702dcf2441fa3bf71fc6/pylint-gitlab-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:00 2020"}