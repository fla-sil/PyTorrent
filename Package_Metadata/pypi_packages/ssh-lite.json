{"info": {"author": "Rainy Chan", "author_email": "rainydew@qq.com", "bugtrack_url": null, "classifiers": [], "description": "SSH-Lite\r\n========\r\n\r\nAn easy encapsulation for paramiko library which contains only common\r\noperations, useful for automatic test and CI/CD.\r\n\r\nUpdates: \\* Version 1.7 is a bugfix version that fix bugs in doc and\r\nlower the chance of messy code (bc multi bytes character splits into\r\ndifferent segments) \\* Version 1.5 is a bugfix version that handle\r\npossible *UnicodeEncodeError* of terminal output when using an actually\r\nbytesIO terminal as *debug_file* (i.e.\u00a0stdout). \\* Version 1.4 is an\r\nenhance version that supports debug info redirection and\r\nexpect-fail-assertion. \\* Version 1.2 is a bugfix version that supports\r\nservers without SFTP service (e.g.\u00a0Gateway Servers).\r\n\r\nFeatures\r\n--------\r\n\r\n-  Interactive shell commands without blocking\r\n\r\n   -  *send* for sending a command only\r\n   -  *send_and_read* is the most common, for sending a command and read\r\n      all returnes in a timeout period (timeout will be updated after\r\n      receiving any bytes)\r\n   -  *get_buff* for reading all buffers from the terminal in a timeout\r\n      period\r\n\r\n-  Uploading or downloading files between local and remote server\r\n-  Expect function (may raise an exception for timeout or any unexpect\r\n   pattern you set)\r\n-  Grep function and keys abbreviations\r\n-  Output redirection\r\n\r\nQuickStart\r\n----------\r\n\r\ninstall\r\n\r\n.. code:: shell\r\n\r\n   pip install ssh-lite\r\n\r\nor update\r\n\r\n.. code:: shell\r\n\r\n   pip install -U ssh-lite\r\n\r\na simple example\r\n\r\n.. code:: python\r\n\r\n   from ssh_lite import Server\r\n\r\n   ci = Server(\"127.0.0.1\", \"123456\", \"root\")\r\n   ci.send_and_read(\"\")    # waiting connection output done, avoid getting extra output before \"ls -l\" like \"Last login: Tue ...\"\r\n   print(ci.send_and_read(\"ls -l\"))\r\n   del ci\r\n\r\nthe effect is like\r\n\r\n::\r\n\r\n   ls -l\r\n   total 1736\r\n   -rw-r--r-- 1 root  root  1775417 Aug 25  2019 get-pip.py\r\n   -rwxrwxrwx 1 root  root      289 Feb 20 12:00 temp.py\r\n   -rwxrwxrwx 1 root  root      136 Nov 22 21:18 upload\r\n\r\nanother little complex example to explain the functions\r\n\r\n.. code:: python\r\n\r\n   from ssh_lite import Server, KeyAbbr\r\n\r\n   remote = \"/docker_binding_path\"\r\n   file = \"test.file\"\r\n\r\n   with Server(\"127.0.0.1\", \"123456\", \"root\", port=22, key_path=None) as ci:  # type: Server  # rsa keys are supported\r\n       ci.debug = True     # to see server inputs and outputs\r\n       ci.get_file(\"/a_log_file_to_get\", \".\")      # getting files doesn't need destination filename \r\n       ci.send_and_read(\"mkdir -p \" + remote, timeout=1)\r\n       ci.send_and_read(\"rm -f {}*\".format(remote), timeout=1)\r\n       ci.put_file(\"prepare/\" + file, remote + file)      # putting files strictly need destination filename\r\n       ci.send_and_read(\"\", timeout=1)\r\n       cmd = 'docker exec -i container_name curl -v \"http://127.0.0.1:9990/upload?file=/reference_path/{}&uri=me\"'.format(\r\n           file)\r\n       print(\"inner cmd is: {}\".format(cmd))\r\n       ci.send(cmd)\r\n       ci.expect(\"< HTTP/1.1 200 OK\", timeout=30, failpat=[\"< HTTP/1.1 4\", \"< HTTP/1.1 5\"])      \r\n       # will raise an exception if we cannot see 200 OK response in 30 secs or if we find any 4xx 5xx response\r\n       ci.send(KeyAbbr.CTRL_C, end=\"\")      # sending a CTRL+C to exit the HTTP2 long connection\r\n       ci.send('exit')       # exit from container to release the connection\r\n\r\nBug report\r\n----------\r\n\r\n-  Issues and bugs report to rainydew@qq.com.\r\n-  Homepage icon leads to my Github project page, issues / PRs / stars\r\n   are welcomed :)\r\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rainydew/ssh-lite", "keywords": "ssh sftp easy paramiko non-blocking", "license": "", "maintainer": "", "maintainer_email": "", "name": "ssh-lite", "package_url": "https://pypi.org/project/ssh-lite/", "platform": "", "project_url": "https://pypi.org/project/ssh-lite/", "project_urls": {"Homepage": "https://github.com/rainydew/ssh-lite"}, "release_url": "https://pypi.org/project/ssh-lite/1.7/", "requires_dist": null, "requires_python": "", "summary": "An easy encapsulation for paramiko library which contains only common operations (ssh, sftp, expect..)", "version": "1.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>An easy encapsulation for paramiko library which contains only common\noperations, useful for automatic test and CI/CD.</p>\n<p>Updates: * Version 1.7 is a bugfix version that fix bugs in doc and\nlower the chance of messy code (bc multi bytes character splits into\ndifferent segments) * Version 1.5 is a bugfix version that handle\npossible <em>UnicodeEncodeError</em> of terminal output when using an actually\nbytesIO terminal as <em>debug_file</em> (i.e.\u00a0stdout). * Version 1.4 is an\nenhance version that supports debug info redirection and\nexpect-fail-assertion. * Version 1.2 is a bugfix version that supports\nservers without SFTP service (e.g.\u00a0Gateway Servers).</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Interactive shell commands without blocking<ul>\n<li><em>send</em> for sending a command only</li>\n<li><em>send_and_read</em> is the most common, for sending a command and read\nall returnes in a timeout period (timeout will be updated after\nreceiving any bytes)</li>\n<li><em>get_buff</em> for reading all buffers from the terminal in a timeout\nperiod</li>\n</ul>\n</li>\n<li>Uploading or downloading files between local and remote server</li>\n<li>Expect function (may raise an exception for timeout or any unexpect\npattern you set)</li>\n<li>Grep function and keys abbreviations</li>\n<li>Output redirection</li>\n</ul>\n</div>\n<div id=\"quickstart\">\n<h2>QuickStart</h2>\n<p>install</p>\n<pre>pip install ssh-lite\n</pre>\n<p>or update</p>\n<pre>pip install -U ssh-lite\n</pre>\n<p>a simple example</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ssh_lite</span> <span class=\"kn\">import</span> <span class=\"n\">Server</span>\n\n<span class=\"n\">ci</span> <span class=\"o\">=</span> <span class=\"n\">Server</span><span class=\"p\">(</span><span class=\"s2\">\"127.0.0.1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"123456\"</span><span class=\"p\">,</span> <span class=\"s2\">\"root\"</span><span class=\"p\">)</span>\n<span class=\"n\">ci</span><span class=\"o\">.</span><span class=\"n\">send_and_read</span><span class=\"p\">(</span><span class=\"s2\">\"\"</span><span class=\"p\">)</span>    <span class=\"c1\"># waiting connection output done, avoid getting extra output before \"ls -l\" like \"Last login: Tue ...\"</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ci</span><span class=\"o\">.</span><span class=\"n\">send_and_read</span><span class=\"p\">(</span><span class=\"s2\">\"ls -l\"</span><span class=\"p\">))</span>\n<span class=\"k\">del</span> <span class=\"n\">ci</span>\n</pre>\n<p>the effect is like</p>\n<pre>ls -l\ntotal 1736\n-rw-r--r-- 1 root  root  1775417 Aug 25  2019 get-pip.py\n-rwxrwxrwx 1 root  root      289 Feb 20 12:00 temp.py\n-rwxrwxrwx 1 root  root      136 Nov 22 21:18 upload\n</pre>\n<p>another little complex example to explain the functions</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ssh_lite</span> <span class=\"kn\">import</span> <span class=\"n\">Server</span><span class=\"p\">,</span> <span class=\"n\">KeyAbbr</span>\n\n<span class=\"n\">remote</span> <span class=\"o\">=</span> <span class=\"s2\">\"/docker_binding_path\"</span>\n<span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"s2\">\"test.file\"</span>\n\n<span class=\"k\">with</span> <span class=\"n\">Server</span><span class=\"p\">(</span><span class=\"s2\">\"127.0.0.1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"123456\"</span><span class=\"p\">,</span> <span class=\"s2\">\"root\"</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"n\">key_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">ci</span><span class=\"p\">:</span>  <span class=\"c1\"># type: Server  # rsa keys are supported</span>\n    <span class=\"n\">ci</span><span class=\"o\">.</span><span class=\"n\">debug</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>     <span class=\"c1\"># to see server inputs and outputs</span>\n    <span class=\"n\">ci</span><span class=\"o\">.</span><span class=\"n\">get_file</span><span class=\"p\">(</span><span class=\"s2\">\"/a_log_file_to_get\"</span><span class=\"p\">,</span> <span class=\"s2\">\".\"</span><span class=\"p\">)</span>      <span class=\"c1\"># getting files doesn't need destination filename</span>\n    <span class=\"n\">ci</span><span class=\"o\">.</span><span class=\"n\">send_and_read</span><span class=\"p\">(</span><span class=\"s2\">\"mkdir -p \"</span> <span class=\"o\">+</span> <span class=\"n\">remote</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">ci</span><span class=\"o\">.</span><span class=\"n\">send_and_read</span><span class=\"p\">(</span><span class=\"s2\">\"rm -f </span><span class=\"si\">{}</span><span class=\"s2\">*\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">remote</span><span class=\"p\">),</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">ci</span><span class=\"o\">.</span><span class=\"n\">put_file</span><span class=\"p\">(</span><span class=\"s2\">\"prepare/\"</span> <span class=\"o\">+</span> <span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">remote</span> <span class=\"o\">+</span> <span class=\"n\">file</span><span class=\"p\">)</span>      <span class=\"c1\"># putting files strictly need destination filename</span>\n    <span class=\"n\">ci</span><span class=\"o\">.</span><span class=\"n\">send_and_read</span><span class=\"p\">(</span><span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"s1\">'docker exec -i container_name curl -v \"http://127.0.0.1:9990/upload?file=/reference_path/</span><span class=\"si\">{}</span><span class=\"s1\">&amp;uri=me\"'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n        <span class=\"n\">file</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"inner cmd is: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">))</span>\n    <span class=\"n\">ci</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">)</span>\n    <span class=\"n\">ci</span><span class=\"o\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s2\">\"&lt; HTTP/1.1 200 OK\"</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"n\">failpat</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"&lt; HTTP/1.1 4\"</span><span class=\"p\">,</span> <span class=\"s2\">\"&lt; HTTP/1.1 5\"</span><span class=\"p\">])</span>\n    <span class=\"c1\"># will raise an exception if we cannot see 200 OK response in 30 secs or if we find any 4xx 5xx response</span>\n    <span class=\"n\">ci</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">KeyAbbr</span><span class=\"o\">.</span><span class=\"n\">CTRL_C</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span><span class=\"p\">)</span>      <span class=\"c1\"># sending a CTRL+C to exit the HTTP2 long connection</span>\n    <span class=\"n\">ci</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s1\">'exit'</span><span class=\"p\">)</span>       <span class=\"c1\"># exit from container to release the connection</span>\n</pre>\n</div>\n<div id=\"bug-report\">\n<h2>Bug report</h2>\n<ul>\n<li>Issues and bugs report to <a href=\"mailto:rainydew%40qq.com\">rainydew<span>@</span>qq<span>.</span>com</a>.</li>\n<li>Homepage icon leads to my Github project page, issues / PRs / stars\nare welcomed :)</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 7186220, "releases": {"1.1": [{"comment_text": "", "digests": {"md5": "8219b07898264570fe24439c899d6b6c", "sha256": "db1939d39d5cf49bb835ddde82744baff7ae057d22dee83c044f5e127d7b6ca3"}, "downloads": -1, "filename": "ssh-lite-1.1.tar.gz", "has_sig": false, "md5_digest": "8219b07898264570fe24439c899d6b6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3254, "upload_time": "2020-03-31T15:31:18", "upload_time_iso_8601": "2020-03-31T15:31:18.025082Z", "url": "https://files.pythonhosted.org/packages/1a/a2/a15fafe3767e57b0f9d8f8cb5817d956ba7bfafb8a222eb73a7a4533dffe/ssh-lite-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "ce6cf08e70b91084af579593787ca634", "sha256": "681c921278b7f65bd627e5a75c6378d75e6d79ea2e77be5983a26d0c040779f3"}, "downloads": -1, "filename": "ssh-lite-1.2.tar.gz", "has_sig": false, "md5_digest": "ce6cf08e70b91084af579593787ca634", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4082, "upload_time": "2020-04-23T17:14:26", "upload_time_iso_8601": "2020-04-23T17:14:26.579945Z", "url": "https://files.pythonhosted.org/packages/42/3e/061a3fcae130a93bdd2610dfef210aeacf479fb3ea8989fdf6621e274464/ssh-lite-1.2.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "cf6119f9344130753fe8ef81a2fef066", "sha256": "aa0cab5c961d380f10de1685576bbddb91c69217581de23842d4692a3c413b35"}, "downloads": -1, "filename": "ssh-lite-1.4.tar.gz", "has_sig": false, "md5_digest": "cf6119f9344130753fe8ef81a2fef066", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4382, "upload_time": "2020-05-04T11:01:08", "upload_time_iso_8601": "2020-05-04T11:01:08.272402Z", "url": "https://files.pythonhosted.org/packages/6c/38/87a9c715eb3e5282f2678ccec72fb0484c95b1e3736add22d549a692a80d/ssh-lite-1.4.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "99cb54605770286127fa073bc17f7941", "sha256": "4f382736a5850ddec9dd27d7223ef22ec7a68ad86c0acf6d4427ee6ee72558e7"}, "downloads": -1, "filename": "ssh-lite-1.5.tar.gz", "has_sig": false, "md5_digest": "99cb54605770286127fa073bc17f7941", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3275, "upload_time": "2020-05-07T06:58:47", "upload_time_iso_8601": "2020-05-07T06:58:47.258232Z", "url": "https://files.pythonhosted.org/packages/81/72/301443ce46e5e6ec45b5ccf27a53cc7cdc9b33eafc19b3d6cdb8264cb58a/ssh-lite-1.5.tar.gz", "yanked": false}], "1.7": [{"comment_text": "", "digests": {"md5": "983a87f5140518b24c6cb0a8fb11b058", "sha256": "d54b8e4525a496b099f951eeb90242a2e90661219dcc1ea03586bbaf6e7d25f5"}, "downloads": -1, "filename": "ssh-lite-1.7.tar.gz", "has_sig": false, "md5_digest": "983a87f5140518b24c6cb0a8fb11b058", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4698, "upload_time": "2020-05-07T07:46:39", "upload_time_iso_8601": "2020-05-07T07:46:39.791736Z", "url": "https://files.pythonhosted.org/packages/18/74/11107aa73259743514f17b555bdbd18a06ddd6a87721e1038e40d95cf283/ssh-lite-1.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "983a87f5140518b24c6cb0a8fb11b058", "sha256": "d54b8e4525a496b099f951eeb90242a2e90661219dcc1ea03586bbaf6e7d25f5"}, "downloads": -1, "filename": "ssh-lite-1.7.tar.gz", "has_sig": false, "md5_digest": "983a87f5140518b24c6cb0a8fb11b058", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4698, "upload_time": "2020-05-07T07:46:39", "upload_time_iso_8601": "2020-05-07T07:46:39.791736Z", "url": "https://files.pythonhosted.org/packages/18/74/11107aa73259743514f17b555bdbd18a06ddd6a87721e1038e40d95cf283/ssh-lite-1.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:07 2020"}