{"info": {"author": "Ryan Raaum", "author_email": "code@raaum.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "oldowan.mtdna contains the human revised Cambridge Reference Sequence (rCRS) in\nPython friendly formats.\n\nInstallation Instructions\n=========================\n\nThis package is pure Python and has no dependencies outside of the standard\nlibrary. The easist way to install is using ``easy_install`` from the\nsetuptools_ package.  This usually goes something like this::\n\n\t$ easy_install oldowan.mtdna\n\nor on a unix-like system, assuming you are installing to the main Python\n``site-packages`` directory as a non-privileged user, this::\n\n\t$ sudo easy_install oldowan.mtdna\n\nYou may also use the standard python distutils setup method. Download the\ncurrent source archive from the file list towards the bottom of this page,\nunarchive it, and install. On Mac OS X and many other unix-like systems, having\ndownloaded the archive and changed to the directory containing this archive in\nyour shell, this might go something like::\n\n\t$ tar xvzf oldowan.mtdna*\n\t$ cd oldowan.mtdna*\n\t$ python setup.py install\n\nQuick Start\n===========\n\nThis package provides the human rCRS in several Python friendly formats.\n\n  >>> from oldowan.mtdna import rCRS\n  >>> from oldowan.mtdna import rCRSlist\n  >>> from oldowan.mtdna import rCRSplus\n  >>> from oldowan.mtdna import rCRSplus_positions\n\n``rCRS`` is the raw sequence as a string::\n\n  >>> len(rCRS)\n  16569\n  >>> rCRS[0:10]\n  'GATCACAGGT'\n\n``rCRSlist`` is the rCRS sequence broken into a list. NOTE that this list is\npadded with a nonsense character in position 0 such that the indices match the\nstandard biologial sequence position numbering (i.e. starting at 1 rather than\n0)::\n\n  >>> rCRSlist[0]\n  '#'\n  >>> rCRSlist[1]\n  'G'\n\n``rCRSplus`` is a partially repeat of the rCRS sequence. Because the mtDNA molecule is circular, it cannot be properly represented by a linear string. This might not be that big of an issue if experimentally derived mtDNA sequences generally do not span the break, BUT as it happens, the most commonly sequenced region of the mitochondrial genome (the control region) spans the point where the circular sequence is conventionally broken for the linear sequence. Thus, ``rCRSplus`` repeats 1000bp on either end of the molecule to facilitate sequence alignment across the break. The ``rCRSplus_positions`` list remaps the indices of ``rCRSplus`` onto the conventional position numbering of the rCRS.\n\n  >>> len(rCRSplus)\n  18638\n  >>> rCRSplus[1]\n  'A'\n  >>> rCRSlist[1]\n  'G'\n  >>> rCRSlist[rCRSplus_positions[1]]\n  'A'\n\nFinally, the oldowan.mtdna package provides indices to extract common mtDNA regions from the rCRS.\n\n  >>> from oldowan.mtdna import HVR1_indices\n  >>> from oldowan.mtdna import HVR2_indices\n  >>> from oldowan.mtdna import HVR1and2_indices\n  >>> from oldowan.mtdna import HVR1to2_indices\n  >>> from oldowan.mtdna import coding_indices\n  >>> from oldowan.mtdna import all_indices\n  \n  >>> hvr1 = ''.join(list(rCRSlist[x] for x in HVR1_indices))\n\n\nRelease History\n===============\n\n1.0.0 (March 25, 2009)\n    initial release of module.\n\n1.0.1 (March 25, 2009)\n    minor version reporting fix\n\n1.0.3 (August 4, 2015)\n    actually fixed the version number issue this time\n\n.. _setuptools: http://peak.telecommunity.com/DevCenter/EasyInstall", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.raaum.org/software/oldowan", "keywords": "", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "oldowan.mtdna", "package_url": "https://pypi.org/project/oldowan.mtdna/", "platform": "Any", "project_url": "https://pypi.org/project/oldowan.mtdna/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.raaum.org/software/oldowan"}, "release_url": "https://pypi.org/project/oldowan.mtdna/1.0.3/", "requires_dist": null, "requires_python": null, "summary": "Human reference mtdna sequence in Python formats.", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>oldowan.mtdna contains the human revised Cambridge Reference Sequence (rCRS) in\nPython friendly formats.</p>\n<div id=\"installation-instructions\">\n<h2>Installation Instructions</h2>\n<p>This package is pure Python and has no dependencies outside of the standard\nlibrary. The easist way to install is using <tt>easy_install</tt> from the\n<a href=\"http://peak.telecommunity.com/DevCenter/EasyInstall\" rel=\"nofollow\">setuptools</a> package.  This usually goes something like this:</p>\n<pre>$ easy_install oldowan.mtdna\n</pre>\n<p>or on a unix-like system, assuming you are installing to the main Python\n<tt><span class=\"pre\">site-packages</span></tt> directory as a non-privileged user, this:</p>\n<pre>$ sudo easy_install oldowan.mtdna\n</pre>\n<p>You may also use the standard python distutils setup method. Download the\ncurrent source archive from the file list towards the bottom of this page,\nunarchive it, and install. On Mac OS X and many other unix-like systems, having\ndownloaded the archive and changed to the directory containing this archive in\nyour shell, this might go something like:</p>\n<pre>$ tar xvzf oldowan.mtdna*\n$ cd oldowan.mtdna*\n$ python setup.py install\n</pre>\n</div>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<p>This package provides the human rCRS in several Python friendly formats.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from oldowan.mtdna import rCRS\n&gt;&gt;&gt; from oldowan.mtdna import rCRSlist\n&gt;&gt;&gt; from oldowan.mtdna import rCRSplus\n&gt;&gt;&gt; from oldowan.mtdna import rCRSplus_positions\n</pre>\n</blockquote>\n<p><tt>rCRS</tt> is the raw sequence as a string:</p>\n<pre>&gt;&gt;&gt; len(rCRS)\n16569\n&gt;&gt;&gt; rCRS[0:10]\n'GATCACAGGT'\n</pre>\n<p><tt>rCRSlist</tt> is the rCRS sequence broken into a list. NOTE that this list is\npadded with a nonsense character in position 0 such that the indices match the\nstandard biologial sequence position numbering (i.e. starting at 1 rather than\n0):</p>\n<pre>&gt;&gt;&gt; rCRSlist[0]\n'#'\n&gt;&gt;&gt; rCRSlist[1]\n'G'\n</pre>\n<p><tt>rCRSplus</tt> is a partially repeat of the rCRS sequence. Because the mtDNA molecule is circular, it cannot be properly represented by a linear string. This might not be that big of an issue if experimentally derived mtDNA sequences generally do not span the break, BUT as it happens, the most commonly sequenced region of the mitochondrial genome (the control region) spans the point where the circular sequence is conventionally broken for the linear sequence. Thus, <tt>rCRSplus</tt> repeats 1000bp on either end of the molecule to facilitate sequence alignment across the break. The <tt>rCRSplus_positions</tt> list remaps the indices of <tt>rCRSplus</tt> onto the conventional position numbering of the rCRS.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; len(rCRSplus)\n18638\n&gt;&gt;&gt; rCRSplus[1]\n'A'\n&gt;&gt;&gt; rCRSlist[1]\n'G'\n&gt;&gt;&gt; rCRSlist[rCRSplus_positions[1]]\n'A'\n</pre>\n</blockquote>\n<p>Finally, the oldowan.mtdna package provides indices to extract common mtDNA regions from the rCRS.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from oldowan.mtdna import HVR1_indices\n&gt;&gt;&gt; from oldowan.mtdna import HVR2_indices\n&gt;&gt;&gt; from oldowan.mtdna import HVR1and2_indices\n&gt;&gt;&gt; from oldowan.mtdna import HVR1to2_indices\n&gt;&gt;&gt; from oldowan.mtdna import coding_indices\n&gt;&gt;&gt; from oldowan.mtdna import all_indices\n</pre>\n<pre>&gt;&gt;&gt; hvr1 = ''.join(list(rCRSlist[x] for x in HVR1_indices))\n</pre>\n</blockquote>\n</div>\n<div id=\"release-history\">\n<h2>Release History</h2>\n<dl>\n<dt>1.0.0 (March 25, 2009)</dt>\n<dd>initial release of module.</dd>\n<dt>1.0.1 (March 25, 2009)</dt>\n<dd>minor version reporting fix</dd>\n<dt>1.0.3 (August 4, 2015)</dt>\n<dd>actually fixed the version number issue this time</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 1664116, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0b6b16a607d56c89e29cb4c27e82aa00", "sha256": "b13d77308875abf790449bac360f39b04c3e4c73d9358e89fe54903c6d25cf2a"}, "downloads": -1, "filename": "oldowan.mtdna-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0b6b16a607d56c89e29cb4c27e82aa00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9139, "upload_time": "2009-03-25T17:43:48", "upload_time_iso_8601": "2009-03-25T17:43:48.652950Z", "url": "https://files.pythonhosted.org/packages/3d/45/067685e8766897fb1522900158f36fa9525c4f1e1eed4fcd34ae2b3928f5/oldowan.mtdna-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "9dec48d800ad9f85c6f656d49069d645", "sha256": "dd81c7b3ec7381d5f3489e62fa666b41a4f89112f946fede79a197433982bea0"}, "downloads": -1, "filename": "oldowan.mtdna-1.0.1.tar.gz", "has_sig": false, "md5_digest": "9dec48d800ad9f85c6f656d49069d645", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9357, "upload_time": "2009-03-26T14:19:22", "upload_time_iso_8601": "2009-03-26T14:19:22.835003Z", "url": "https://files.pythonhosted.org/packages/b0/57/bc592ba7e12bc5457d729f564939c7f2ce9624c5e117bd1e133a84501721/oldowan.mtdna-1.0.1.tar.gz", "yanked": false}], "1.0.2a": [{"comment_text": "", "digests": {"md5": "6dcd5a07c469d56b39ff6a28a3626bb0", "sha256": "13d75928529890f6bc8904d2930316625153beaf5f25d1ee83017338de14dae7"}, "downloads": -1, "filename": "oldowan.mtdna-1.0.2a.tar.gz", "has_sig": false, "md5_digest": "6dcd5a07c469d56b39ff6a28a3626bb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9394, "upload_time": "2015-08-04T17:52:24", "upload_time_iso_8601": "2015-08-04T17:52:24.727286Z", "url": "https://files.pythonhosted.org/packages/f1/87/9fbd406dc69bef1b277d03abdfebc79a3d30761c93180f079d7a24e25d22/oldowan.mtdna-1.0.2a.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "b65d629a221b418ee347ab3fc40d0620", "sha256": "48e56dd4aa542a4f20caf4596c28a5c13735d8daf4526620a9fb1f2684e06c16"}, "downloads": -1, "filename": "oldowan.mtdna-1.0.3.tar.gz", "has_sig": false, "md5_digest": "b65d629a221b418ee347ab3fc40d0620", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9387, "upload_time": "2015-08-04T18:13:00", "upload_time_iso_8601": "2015-08-04T18:13:00.643588Z", "url": "https://files.pythonhosted.org/packages/0c/8f/dd2c4f6927102414e1d4b5e1e3adeb3cc83d6c0ed79435d46158241dbc48/oldowan.mtdna-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b65d629a221b418ee347ab3fc40d0620", "sha256": "48e56dd4aa542a4f20caf4596c28a5c13735d8daf4526620a9fb1f2684e06c16"}, "downloads": -1, "filename": "oldowan.mtdna-1.0.3.tar.gz", "has_sig": false, "md5_digest": "b65d629a221b418ee347ab3fc40d0620", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9387, "upload_time": "2015-08-04T18:13:00", "upload_time_iso_8601": "2015-08-04T18:13:00.643588Z", "url": "https://files.pythonhosted.org/packages/0c/8f/dd2c4f6927102414e1d4b5e1e3adeb3cc83d6c0ed79435d46158241dbc48/oldowan.mtdna-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:41 2020"}