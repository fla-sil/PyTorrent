{"info": {"author": "MEADez", "author_email": "m3adez@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "===================================================\nBTC Weasy PDF\n===================================================\n\nView mixin and template filters for PDF creation from the HTML-template.\n\nDetailed documentation is in the \"docs\" directory.\n\nQuick start\n-----------\n\n1. Add \"weasy_pdf\" to your INSTALLED_APPS setting like this::\n\n      INSTALLED_APPS = (\n          ...\n          'weasy_pdf',\n      )\n\n2. Help functions: `safety_get_attribute()`, `safety_parse_dict()`, `format_date()` (see utils.py)\n\n3. Create data-object. When using the `safety_get_attribute()` function do not forget to join the related tables\n   (prefetch_related, select_related)::\n\n    class PDFDataObject:\n\n        def __init__(self, data_obj: MyModel):\n            get = safety_get_attribute\n            self.data_obj = data_obj\n\n            self.first_name = get(data_obj, 'first_name')\n            ...\n\n4. Prepare PDF template. Use built-in template filters: `times`, `parse_dict`::\n\n    <!doctype html>\n    <html lang=\"en\">\n        <head>\n            <meta charset=\"utf-8\">\n\n            {% load static %}\n            {% load weasy_pdf %}\n\n            <link rel=\"stylesheet\" href=\"{% static '/styles/pdf.css' %}\">\n\n            <title>Title</title>\n            <meta name=\"description\" content=\"Description\">\n            <meta name=\"author\" content=\"Author\">\n\n        </head>\n        <body>\n            <span>{{ data_object.first_name }}</span>\n            ...\n        </body>\n    </html>\n\n    <!-- Filters usage:\n\n    {% for i in 8|times %}\n        <td colspan=\"2\"></td>\n    {% endfor %}\n\n    <td colspan=\"5\">{{ data_object|parse_dict:'0__NAME' }}</td>\n     -->\n\n5. Prepare view::\n\n    class PDFView(WeasyPDFViewMixin):\n\n        template_name = 'pdf.html'\n        file_name = 'my_pdf.pdf'\n\n        def get_object(self) -> Any:\n            passport = get_object_or_404(Passport, pk=self.kwargs.get('pk'))\n            return PDFDataObject(passport)\n\nExample\n\n.. image:: https://user-images.githubusercontent.com/33987296/74111631-3e981f80-4ba7-11ea-874f-9509ba101c2d.png", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MEADez/btc-weasy-pdf", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "btc-weasy-pdf", "package_url": "https://pypi.org/project/btc-weasy-pdf/", "platform": "", "project_url": "https://pypi.org/project/btc-weasy-pdf/", "project_urls": {"Homepage": "https://github.com/MEADez/btc-weasy-pdf"}, "release_url": "https://pypi.org/project/btc-weasy-pdf/0.3/", "requires_dist": null, "requires_python": "", "summary": "View mixin and template filters for PDF creation from the HTML-template.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>View mixin and template filters for PDF creation from the HTML-template.</p>\n<p>Detailed documentation is in the \u201cdocs\u201d directory.</p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<ol>\n<li><p>Add \u201cweasy_pdf\u201d to your INSTALLED_APPS setting like this:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'weasy_pdf',\n)\n</pre>\n</li>\n<li><p>Help functions: <cite>safety_get_attribute()</cite>, <cite>safety_parse_dict()</cite>, <cite>format_date()</cite> (see utils.py)</p>\n</li>\n<li><p>Create data-object. When using the <cite>safety_get_attribute()</cite> function do not forget to join the related tables\n(prefetch_related, select_related):</p>\n<pre>class PDFDataObject:\n\n    def __init__(self, data_obj: MyModel):\n        get = safety_get_attribute\n        self.data_obj = data_obj\n\n        self.first_name = get(data_obj, 'first_name')\n        ...\n</pre>\n</li>\n<li><p>Prepare PDF template. Use built-in template filters: <cite>times</cite>, <cite>parse_dict</cite>:</p>\n<pre>&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n\n        {% load static %}\n        {% load weasy_pdf %}\n\n        &lt;link rel=\"stylesheet\" href=\"{% static '/styles/pdf.css' %}\"&gt;\n\n        &lt;title&gt;Title&lt;/title&gt;\n        &lt;meta name=\"description\" content=\"Description\"&gt;\n        &lt;meta name=\"author\" content=\"Author\"&gt;\n\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;span&gt;{{ data_object.first_name }}&lt;/span&gt;\n        ...\n    &lt;/body&gt;\n&lt;/html&gt;\n\n&lt;!-- Filters usage:\n\n{% for i in 8|times %}\n    &lt;td colspan=\"2\"&gt;&lt;/td&gt;\n{% endfor %}\n\n&lt;td colspan=\"5\"&gt;{{ data_object|parse_dict:'0__NAME' }}&lt;/td&gt;\n --&gt;\n</pre>\n</li>\n<li><p>Prepare view:</p>\n<pre>class PDFView(WeasyPDFViewMixin):\n\n    template_name = 'pdf.html'\n    file_name = 'my_pdf.pdf'\n\n    def get_object(self) -&gt; Any:\n        passport = get_object_or_404(Passport, pk=self.kwargs.get('pk'))\n        return PDFDataObject(passport)\n</pre>\n</li>\n</ol>\n<p>Example</p>\n<img alt=\"https://user-images.githubusercontent.com/33987296/74111631-3e981f80-4ba7-11ea-874f-9509ba101c2d.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a9ef8ded416f5ae9e0be4da44379dfce10977b9/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f33333938373239362f37343131313633312d33653938316638302d346261372d313165612d383734662d3935303962613130316332642e706e67\">\n</div>\n\n          </div>"}, "last_serial": 6714279, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "fd86826c693757d8c411851c437bff24", "sha256": "1cd8d574166274ba5e0d0c013d8ed8ae81e392a0c5aeadc3d71d57c3c06734da"}, "downloads": -1, "filename": "btc-weasy-pdf-0.1.tar.gz", "has_sig": false, "md5_digest": "fd86826c693757d8c411851c437bff24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4164, "upload_time": "2020-02-10T12:38:07", "upload_time_iso_8601": "2020-02-10T12:38:07.828072Z", "url": "https://files.pythonhosted.org/packages/0a/94/6fdc2afdcbd61efbbc7d77c2b6b93bb356e463370b7defe8ed22b8d694c8/btc-weasy-pdf-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "8b29fd43f1b24bc60249b8c2461186c7", "sha256": "af95d46da05bc4c663bb41df40c94934c2f20fa6a1fe7b0ee42886765bf97a9c"}, "downloads": -1, "filename": "btc-weasy-pdf-0.2.tar.gz", "has_sig": false, "md5_digest": "8b29fd43f1b24bc60249b8c2461186c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4161, "upload_time": "2020-02-10T13:55:09", "upload_time_iso_8601": "2020-02-10T13:55:09.993779Z", "url": "https://files.pythonhosted.org/packages/26/34/3f144ed23ba5b7ccc322ec8bdbcc4e688667e51a2ac0e333bb95ba5ddd8b/btc-weasy-pdf-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "256a7875548144e5223bf867f40cdea3", "sha256": "c154ba5087ccbde6a1cb93cfbc7179ec6250b8bb9d917332e82f0ac71dc645e8"}, "downloads": -1, "filename": "btc-weasy-pdf-0.3.tar.gz", "has_sig": false, "md5_digest": "256a7875548144e5223bf867f40cdea3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 692343, "upload_time": "2020-02-27T23:19:12", "upload_time_iso_8601": "2020-02-27T23:19:12.999909Z", "url": "https://files.pythonhosted.org/packages/f0/46/61f96c9eec5292076a9964042440c25f2f684aa86ed71a11d68ae05d996b/btc-weasy-pdf-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "256a7875548144e5223bf867f40cdea3", "sha256": "c154ba5087ccbde6a1cb93cfbc7179ec6250b8bb9d917332e82f0ac71dc645e8"}, "downloads": -1, "filename": "btc-weasy-pdf-0.3.tar.gz", "has_sig": false, "md5_digest": "256a7875548144e5223bf867f40cdea3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 692343, "upload_time": "2020-02-27T23:19:12", "upload_time_iso_8601": "2020-02-27T23:19:12.999909Z", "url": "https://files.pythonhosted.org/packages/f0/46/61f96c9eec5292076a9964042440c25f2f684aa86ed71a11d68ae05d996b/btc-weasy-pdf-0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:10 2020"}