{"info": {"author": "Konstantinos Koukopoulos", "author_email": "kk@longaccess.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: System :: Archiving", "Topic :: Utilities"], "description": "The Longaccess client\n=====================\n\nThis is the prototype client program for interacting with the\n`Longaccess service <https://www.longaccess.com>`__. It is usable via\nthe command line on systems that have `Python <http://www.python.org>`__\ninstalled but also requires a registered account. If you are unfamiliar\nwith other aspects of the Longaccess service a good place to start is\n\"`What is\nLongaccess? <https://github.com/longaccess/longaccess-docs/blob/master/what_is_longaccess.md>`__\\ \"\n\nInstallation\n------------\n\nWe have binary packages for certain platforms, like MacOS X, Windows 8\n64-bit, Linux and FreeBSD. For more information see the `Longaccess\ndownloads page <https://downloads.longaccess.com>`__. For other\nplatforms or purposes you can download or clone the source repository,\ncreate a `virtualenv <http://www.virtualenv.org>`__ if needed, and\ninstall the client via ``pip``. E.g.:\n\n::\n\n    pip install https://github.com/longaccess/longaccess-client/tarball/master\n\nNote that currently, certain third-party libraries are required in\nmodified form. These special dependencies are described in\n`requirements.txt <>`__ and can be automatically installed if the\nfollowing command is given:\n\n::\n\n    pip install -r requirements.txt\n\nDependencies\n------------\n\nThe prebuilt binary packages are self-contained, i.e. they do not have\nany hard external dependencies. There is however a soft dependency on an\nexternal tool to securely delete files from the filesystem, see below\nfor more information. When installing from source most dependencies are\nautomatically installable via ``pip``. On some platforms the\ninstallation might require manually installing development packages,\ne.g. on [Fedora Linux][] you might need to install the ``python2-devel``\npackage. Additional packages, like ``thrift`` and ``twisted`` are\nnecessary for the RPC server (used to communicate with GUI frontends).\nLast, install the ```python-zipstream`` <>`__ package to enable\non-the-fly operations, requiring less temporary space on disk.\n\nUsage\n-----\n\nAfter installation the program is invoked as ``lacli``. Run it with no\narguments to see a synopsis of supported usages. In short, there are\nfour basic commands:\n\n-  ``lacli login`` set up credentials to use with other commands\n-  ``lacli archive`` helps you manage archives\n-  ``lacli certificate`` helps you manage certificates\n-  ``lacli capsules`` let's you view your available capsules\n-  ``lacli server`` runs the RPC server. You normally do not need this.\n\nAlternatively one may run the program interactively by running\n``lacli -i``.\n\nThe ``lacli`` command supports certain global options which you can see\nin the aforementioned synopsis. The only required argument however is\nthe authentication parameters which we discuss in the next section.\n\nAuthentication\n--------------\n\nIn order to use the service you must first have a username and password\nfor the service. You can provide them to the program in two ways:\n\n1. as global arguments, e.g. ``lacli -u user -p pass archive list ...``.\n   If a password is not provided you will be prompted for one.\n2. as entries in your ``.netrc`` file. This way you will not have to\n   provide them everytime (but you should keep your ``.netrc`` safe).\n3. by using the ``login`` command. If authentication is succesfull you\n   will be prompted to save the credentials in ``.netrc`` as above for\n   future use. If interactive the credentials will be used for\n   subsequent commands.\n\nNetrc\n~~~~~\n\nThe correct ``machine`` to add to ``.netrc`` for the service in\nproduction at Longaccess is ``www.longaccess.com``. For example you need\nthis entry:\n\n::\n\n    machine www.longaccess.com login user@domain.com password somep4ss\n\nExample usage\n-------------\n\nAn example scenario:\n\n::\n\n    $ lacli login your@email.com\n    Password:\n    authentication succesfull as your@email.com\n    Save credentials? y\n    $ lacli archive list\n    No available archives.\n    $ lacli archive create /home/kouk/toread -t documents\n    Encrypting..\n    archive prepared\n    $ lacli archive list\n    001  36MiB             documents      LOCAL           \n    $ lacli archive upload 1\n    /home/kouk/.longaccess/data/2013-10-18-documents.zip.crypt : |###################| ETA:  0:00:00 349.66 MB/s\n    Upload finished, waiting for verification\n    Press Ctrl-C to check manually later\n    status: completed\n    Certificate 68-H1BK saved.\n    Use lacli certificate list to see your certificates, or lacli certificate --help for more options\n    done.\n    $ lacli archive list\n    001  36MiB             documents   COMPLETE    68-H1BK\n    $ lacli certificate list\n       68-H1BK  36MiB documents\n    $ lacli certificate print 68-H1BK\n    Created files:\n    longaccess-68-H1BK.html\n    $\n\nSecure removal\n--------------\n\nWhen removing archives and certificates from the disk the program\nsupports `secure deletion <https://ssd.eff.org/tech/deletion>`__ through\nan external program. In case a suitable removal program cannot be\nfound\\* the client will complain and give further instructions.\nCurrently we automatically support the following tools, if they are\navailable on the system path:\n\n-  `srm <http://en.wikipedia.org/wiki/Srm_(Unix)>`__ (Mac, Unix)\n-  `shred <http://en.wikipedia.org/wiki/Shred_(Unix)>`__ (Unix)\n-  `sdelete <http://technet.microsoft.com/en-us/sysinternals/bb897443.aspx>`__\n   (Windows, proprietary)\n-  `Eraser <http://eraser.heidi.ie/>`__ (Windows, open-source)\n\n*\\* or one has not been provided via the optional argument to the\n``delete`` command.*", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/longaccess/longaccess-client/", "keywords": null, "license": "Apache", "maintainer": null, "maintainer_email": null, "name": "lacli", "package_url": "https://pypi.org/project/lacli/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/lacli/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/longaccess/longaccess-client/"}, "release_url": "https://pypi.org/project/lacli/0.2.6.1/", "requires_dist": null, "requires_python": null, "summary": "The Long Access client", "version": "0.2.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            The Longaccess client<br>=====================<br><br>This is the prototype client program for interacting with the<br>`Longaccess service &lt;https://www.longaccess.com&gt;`__. It is usable via<br>the command line on systems that have `Python &lt;http://www.python.org&gt;`__<br>installed but also requires a registered account. If you are unfamiliar<br>with other aspects of the Longaccess service a good place to start is<br>\"`What is<br>Longaccess? &lt;https://github.com/longaccess/longaccess-docs/blob/master/what_is_longaccess.md&gt;`__\\ \"<br><br>Installation<br>------------<br><br>We have binary packages for certain platforms, like MacOS X, Windows 8<br>64-bit, Linux and FreeBSD. For more information see the `Longaccess<br>downloads page &lt;https://downloads.longaccess.com&gt;`__. For other<br>platforms or purposes you can download or clone the source repository,<br>create a `virtualenv &lt;http://www.virtualenv.org&gt;`__ if needed, and<br>install the client via ``pip``. E.g.:<br><br>::<br><br>    pip install https://github.com/longaccess/longaccess-client/tarball/master<br><br>Note that currently, certain third-party libraries are required in<br>modified form. These special dependencies are described in<br>`requirements.txt &lt;&gt;`__ and can be automatically installed if the<br>following command is given:<br><br>::<br><br>    pip install -r requirements.txt<br><br>Dependencies<br>------------<br><br>The prebuilt binary packages are self-contained, i.e. they do not have<br>any hard external dependencies. There is however a soft dependency on an<br>external tool to securely delete files from the filesystem, see below<br>for more information. When installing from source most dependencies are<br>automatically installable via ``pip``. On some platforms the<br>installation might require manually installing development packages,<br>e.g. on [Fedora Linux][] you might need to install the ``python2-devel``<br>package. Additional packages, like ``thrift`` and ``twisted`` are<br>necessary for the RPC server (used to communicate with GUI frontends).<br>Last, install the ```python-zipstream`` &lt;&gt;`__ package to enable<br>on-the-fly operations, requiring less temporary space on disk.<br><br>Usage<br>-----<br><br>After installation the program is invoked as ``lacli``. Run it with no<br>arguments to see a synopsis of supported usages. In short, there are<br>four basic commands:<br><br>-  ``lacli login`` set up credentials to use with other commands<br>-  ``lacli archive`` helps you manage archives<br>-  ``lacli certificate`` helps you manage certificates<br>-  ``lacli capsules`` let's you view your available capsules<br>-  ``lacli server`` runs the RPC server. You normally do not need this.<br><br>Alternatively one may run the program interactively by running<br>``lacli -i``.<br><br>The ``lacli`` command supports certain global options which you can see<br>in the aforementioned synopsis. The only required argument however is<br>the authentication parameters which we discuss in the next section.<br><br>Authentication<br>--------------<br><br>In order to use the service you must first have a username and password<br>for the service. You can provide them to the program in two ways:<br><br>1. as global arguments, e.g. ``lacli -u user -p pass archive list ...``.<br>   If a password is not provided you will be prompted for one.<br>2. as entries in your ``.netrc`` file. This way you will not have to<br>   provide them everytime (but you should keep your ``.netrc`` safe).<br>3. by using the ``login`` command. If authentication is succesfull you<br>   will be prompted to save the credentials in ``.netrc`` as above for<br>   future use. If interactive the credentials will be used for<br>   subsequent commands.<br><br>Netrc<br>~~~~~<br><br>The correct ``machine`` to add to ``.netrc`` for the service in<br>production at Longaccess is ``www.longaccess.com``. For example you need<br>this entry:<br><br>::<br><br>    machine www.longaccess.com login user@domain.com password somep4ss<br><br>Example usage<br>-------------<br><br>An example scenario:<br><br>::<br><br>    $ lacli login your@email.com<br>    Password:<br>    authentication succesfull as your@email.com<br>    Save credentials? y<br>    $ lacli archive list<br>    No available archives.<br>    $ lacli archive create /home/kouk/toread -t documents<br>    Encrypting..<br>    archive prepared<br>    $ lacli archive list<br>    001  36MiB             documents      LOCAL           <br>    $ lacli archive upload 1<br>    /home/kouk/.longaccess/data/2013-10-18-documents.zip.crypt : |###################| ETA:  0:00:00 349.66 MB/s<br>    Upload finished, waiting for verification<br>    Press Ctrl-C to check manually later<br>    status: completed<br>    Certificate 68-H1BK saved.<br>    Use lacli certificate list to see your certificates, or lacli certificate --help for more options<br>    done.<br>    $ lacli archive list<br>    001  36MiB             documents   COMPLETE    68-H1BK<br>    $ lacli certificate list<br>       68-H1BK  36MiB documents<br>    $ lacli certificate print 68-H1BK<br>    Created files:<br>    longaccess-68-H1BK.html<br>    $<br><br>Secure removal<br>--------------<br><br>When removing archives and certificates from the disk the program<br>supports `secure deletion &lt;https://ssd.eff.org/tech/deletion&gt;`__ through<br>an external program. In case a suitable removal program cannot be<br>found\\* the client will complain and give further instructions.<br>Currently we automatically support the following tools, if they are<br>available on the system path:<br><br>-  `srm &lt;http://en.wikipedia.org/wiki/Srm_(Unix)&gt;`__ (Mac, Unix)<br>-  `shred &lt;http://en.wikipedia.org/wiki/Shred_(Unix)&gt;`__ (Unix)<br>-  `sdelete &lt;http://technet.microsoft.com/en-us/sysinternals/bb897443.aspx&gt;`__<br>   (Windows, proprietary)<br>-  `Eraser &lt;http://eraser.heidi.ie/&gt;`__ (Windows, open-source)<br><br>*\\* or one has not been provided via the optional argument to the<br>``delete`` command.*\n          </div>"}, "last_serial": 1085344, "releases": {"0.2.3": [{"comment_text": "", "digests": {"md5": "28a135d910058379c814b2f9bf196217", "sha256": "af9aeb59ce5e6d695bf9658fdc17dc0354c9ea8a734d145ee99b7ae3ae581524"}, "downloads": -1, "filename": "lacli-0.2.3.tar.gz", "has_sig": false, "md5_digest": "28a135d910058379c814b2f9bf196217", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 371754, "upload_time": "2014-03-04T13:36:39", "upload_time_iso_8601": "2014-03-04T13:36:39.770484Z", "url": "https://files.pythonhosted.org/packages/e0/81/c3e7654ae6848eb2ca6df1842f99a92142141f3bc7bb8cf52ad677a77221/lacli-0.2.3.tar.gz", "yanked": false}], "0.2.6.1": [{"comment_text": "", "digests": {"md5": "280ea6ae692ee52e4b3febbb044e976c", "sha256": "0515a7f2893704935e2f132f48dc479263a2309e274fffa1aea5078f3f5309ef"}, "downloads": -1, "filename": "lacli-0.2.6.1.tar.gz", "has_sig": false, "md5_digest": "280ea6ae692ee52e4b3febbb044e976c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 264266, "upload_time": "2014-05-08T13:37:22", "upload_time_iso_8601": "2014-05-08T13:37:22.638830Z", "url": "https://files.pythonhosted.org/packages/dd/e2/16ad5d1c4e6b786fe5e54802426640d811f71c56c0a99c5c685c271bd282/lacli-0.2.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "280ea6ae692ee52e4b3febbb044e976c", "sha256": "0515a7f2893704935e2f132f48dc479263a2309e274fffa1aea5078f3f5309ef"}, "downloads": -1, "filename": "lacli-0.2.6.1.tar.gz", "has_sig": false, "md5_digest": "280ea6ae692ee52e4b3febbb044e976c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 264266, "upload_time": "2014-05-08T13:37:22", "upload_time_iso_8601": "2014-05-08T13:37:22.638830Z", "url": "https://files.pythonhosted.org/packages/dd/e2/16ad5d1c4e6b786fe5e54802426640d811f71c56c0a99c5c685c271bd282/lacli-0.2.6.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:18 2020"}