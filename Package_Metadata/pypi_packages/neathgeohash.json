{"info": {"author": "Marek Dwulit", "author_email": "marek.dwulit@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "neathgeohash\n============\n\n[![Coverage Status](https://coveralls.io/repos/github/mpdwulit/neathgeohash/badge.svg?branch=master)](https://coveralls.io/github/mpdwulit/neathgeohash?branch=master)  ![travis status](https://travis-ci.org/mpdwulit/neathgeohash.svg?branch=master) \n\nNeathgeohash is a Python module that provides functions for finding an approximation of a Line \nand an ellipsoid (a surface) with a set of geohashes. Behind the neathgeohash library, there is the power of NumPy. \nThe geohasing implementation is approximately thirty times faster than the pygeohash implementation for large data sets.\n\nThe code includes Leonard Norrg\u00e5rd\u2019s [Geohash](https://github.com/vinsci/geohash) code, \nwith necessary extensions to plot vectors using geohashes as pixels.\n\nThe example shows ellipsoid with the ellipse center at 51.00 lattitude and 0 longitude and 305m major and 385m minor\n\nExample 1::\n\n```\nimport neathgeohash\nellipse = ngh.Ellipse(51, 0, 305, 385, 0)\nellipse_as_ghl = ellipse.estimate_probability_coverage_with_fixed_geohash_depth()\nprint(ellipse_as_ghl)\n\n{'gcpfpur': 0.0701562499999992, 'gcpfpuq': 0.05140624999999959, 'gcpfpuw': 0.020625000000000015, \n'gcpfpux': 0.02828125000000002, 'u1040h8': 0.02781250000000002, 'u1040h2': 0.06640624999999928, \n'u1040h0': 0.06609374999999929, 'gcpfpun': 0.048437499999999654, 'gcpfpum': 0.03515624999999994, \n'gcpfput': 0.013906250000000009, 'gcpfpup': 0.060624999999999395, 'gcpfpuj': 0.02734375000000002, \n'gcpfpuv': 0.0031250000000000006, 'gcpfpuy': 0.004843750000000002, 'gcpfpuz': 0.005468750000000002, \n'u1040hb': 0.0029687500000000005, 'u1040hc': 0.00234375, 'u1040h9': 0.021562500000000016, \n'u1040h3': 0.05515624999999951, 'u1040h1': 0.048437499999999654, 'u10405c': 0.018750000000000013, \n'gcpfpgz': 0.022812500000000017, 'gcpfpgv': 0.011093750000000006, 'gcpfpuk': 0.01687500000000001, \n'gcpfpus': 0.008437500000000004, 'gcpfpuh': 0.01484375000000001, 'gcpfpuu': 0.0009375000000000001, \n'u10405b': 0.024062500000000018, 'gcpfpgy': 0.01703125000000001, 'gcpfpgu': 0.0057812500000000025, \n'gcpfpvn': 0.00015625, 'gcpfpvp': 0.00015625, 'u1040j0': 0.000625, 'u1040j1': 0, 'u1040hf': 0.0009375000000000001, \n'u1040hd': 0.01625000000000001, 'u1040h6': 0.03281249999999999, 'u1040h4': 0.028593750000000022, \n'u10405f': 0.010312500000000006, 'u10405d': 0.00109375, 'u104058': 0.0028125000000000003, \n'gcpfpgw': 0.0017187499999999998, 'gcpfpgs': 0.000625, 'gcpfpu7': 0.005937500000000003, \n'gcpfpue': 0.0018749999999999997, 'gcpfpu5': 0.005937500000000003, 'gcpfpug': 0.00046875, \n'gcpfpgg': 0.0020312499999999996, 'u104059': 0.005312500000000002, 'gcpfpgx': 0.003906250000000001, \n'gcpfpgt': 0.0021874999999999998, 'gcpfpge': 0.00015625, 'u1040hg': 0.000625, 'u1040he': 0.006718750000000003, \n'u1040h7': 0.01609375000000001, 'u1040h5': 0.01593750000000001, 'u10405g': 0.004218750000000001, \n'u10405e': 0.00078125, 'u1040hu': 0.00046875, 'u1040hs': 0.00140625, 'u1040hk': 0.005000000000000002, \n'u1040hh': 0.007031250000000004, 'u10405u': 0.0015624999999999999, 'u10405s': 0.00046875}\n\n```\n\n\nExample 2::\n\n![Example](https://github.com/mpdwulit/neathgeohash/blob/master/samples/ellipse_coverage.png)\n\nTo see image follow the url: https://github.com/mpdwulit/neathgeohash/blob/master/samples/ellipse_coverage.geojson\n\nPerformance ~(30x faster)\n================\n\nIn version 0.5.0, the geohash encoding was added. The original code was copied from https://github.com/vinsci/geohash \nand extended by fast_encode function. Fast_encode for performance uses NumPy. Here is a comparison between initial \nimplementation and NumPy implementation. Implementation based on blog: https://mmcloughlin.com/posts/geohash-assembly\n\nPerformance testing code\n\n![Performance](https://github.com/mpdwulit/neathgeohash/blob/dev/samples/performance.png)\n\n```text\n=========ngh.encode()================\n\n         63000002 function calls in 26.743 seconds\n\n   Ordered by: cumulative time\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n        1    0.308    0.308   26.743   26.743 performance_cmp.py:22(<listcomp>)\n  1000000   22.988    0.000   26.436    0.000 geohash.py:86(encode)\n 61000000    3.255    0.000    3.255    0.000 {built-in method builtins.len}\n  1000000    0.193    0.000    0.193    0.000 {method 'join' of 'str' objects}\n        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}\n\n\n=========ngh.fast_encode()===========\n\n        160 function calls (159 primitive calls) in 0.899 seconds\n\n   Ordered by: cumulative time\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n        1    0.114    0.114    0.899    0.899 geohash.py:167(fast_encode)\n    36/35    0.366    0.010    0.366    0.010 {built-in method numpy.core._multiarray_umath.implement_array_function}\n       32    0.000    0.000    0.336    0.010 <__array_function__ internals>:2(where)\n       26    0.273    0.010    0.273    0.010 {built-in method numpy.array}\n        1    0.086    0.086    0.111    0.111 geohash.py:123(__encode_into_uint64)\n        1    0.051    0.051    0.066    0.066 geohash.py:149(__encode_base32)\n        1    0.000    0.000    0.017    0.017 <__array_function__ internals>:2(dot)\n        1    0.000    0.000    0.014    0.014 <__array_function__ internals>:2(column_stack)\n        1    0.000    0.000    0.014    0.014 shape_base.py:612(column_stack)\n        1    0.000    0.000    0.014    0.014 <__array_function__ internals>:2(concatenate)\n        1    0.008    0.008    0.008    0.008 {method 'dot' of 'numpy.ndarray' objects}\n       32    0.000    0.000    0.000    0.000 multiarray.py:312(where)\n        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(squeeze)\n        3    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}\n        1    0.000    0.000    0.000    0.000 shape_base.py:608(_column_stack_dispatcher)\n        1    0.000    0.000    0.000    0.000 fromnumeric.py:1426(squeeze)\n        1    0.000    0.000    0.000    0.000 shape_base.py:209(_arrays_for_stack_dispatcher)\n       12    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}\n        1    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}\n        1    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}\n        1    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}\n        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}\n        1    0.000    0.000    0.000    0.000 multiarray.py:707(dot)\n        1    0.000    0.000    0.000    0.000 fromnumeric.py:1422(_squeeze_dispatcher)\n        1    0.000    0.000    0.000    0.000 multiarray.py:145(concatenate)\n\n```\n\n\n\nTODO\n====\n\n1. Add more efficient implementation for finding geohash coverage\n2. Add Box-Muller Sampling from multivariate normal distribution\n3. Improve Monte Carlo integration\n\nLicense\n=======\n\nCopyright (c) 2020 Marek Dwulit\n\nMIT License\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\nKeywords\n========\n\nGeohash, GIS, latitude, longitude, encode, decode, Galileo, GPS, WGS84, coordinates, geotagging.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/mpdwulit/neathgeohash/tarball/0.6.4", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mpdwulit/neathgeohash", "keywords": "geohash gis eep95 conf95", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "neathgeohash", "package_url": "https://pypi.org/project/neathgeohash/", "platform": "", "project_url": "https://pypi.org/project/neathgeohash/", "project_urls": {"Download": "https://github.com/mpdwulit/neathgeohash/tarball/0.6.4", "Homepage": "https://github.com/mpdwulit/neathgeohash"}, "release_url": "https://pypi.org/project/neathgeohash/0.6.4/", "requires_dist": ["geopy", "numpy"], "requires_python": ">=3.6", "summary": "Python module for interacting with geohashes", "version": "0.6.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>neathgeohash</h1>\n<p><a href=\"https://coveralls.io/github/mpdwulit/neathgeohash?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e1944a6824e28d8fd521cb10dc0a2f95e974046/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d706477756c69742f6e6561746867656f686173682f62616467652e7376673f6272616e63683d6d6173746572\"></a>  <img alt=\"travis status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec742ef9559492c87ef37c8135a5a098c6aa8369/68747470733a2f2f7472617669732d63692e6f72672f6d706477756c69742f6e6561746867656f686173682e7376673f6272616e63683d6d6173746572\"></p>\n<p>Neathgeohash is a Python module that provides functions for finding an approximation of a Line\nand an ellipsoid (a surface) with a set of geohashes. Behind the neathgeohash library, there is the power of NumPy.\nThe geohasing implementation is approximately thirty times faster than the pygeohash implementation for large data sets.</p>\n<p>The code includes Leonard Norrg\u00e5rd\u2019s <a href=\"https://github.com/vinsci/geohash\" rel=\"nofollow\">Geohash</a> code,\nwith necessary extensions to plot vectors using geohashes as pixels.</p>\n<p>The example shows ellipsoid with the ellipse center at 51.00 lattitude and 0 longitude and 305m major and 385m minor</p>\n<p>Example 1::</p>\n<pre><code>import neathgeohash\nellipse = ngh.Ellipse(51, 0, 305, 385, 0)\nellipse_as_ghl = ellipse.estimate_probability_coverage_with_fixed_geohash_depth()\nprint(ellipse_as_ghl)\n\n{'gcpfpur': 0.0701562499999992, 'gcpfpuq': 0.05140624999999959, 'gcpfpuw': 0.020625000000000015, \n'gcpfpux': 0.02828125000000002, 'u1040h8': 0.02781250000000002, 'u1040h2': 0.06640624999999928, \n'u1040h0': 0.06609374999999929, 'gcpfpun': 0.048437499999999654, 'gcpfpum': 0.03515624999999994, \n'gcpfput': 0.013906250000000009, 'gcpfpup': 0.060624999999999395, 'gcpfpuj': 0.02734375000000002, \n'gcpfpuv': 0.0031250000000000006, 'gcpfpuy': 0.004843750000000002, 'gcpfpuz': 0.005468750000000002, \n'u1040hb': 0.0029687500000000005, 'u1040hc': 0.00234375, 'u1040h9': 0.021562500000000016, \n'u1040h3': 0.05515624999999951, 'u1040h1': 0.048437499999999654, 'u10405c': 0.018750000000000013, \n'gcpfpgz': 0.022812500000000017, 'gcpfpgv': 0.011093750000000006, 'gcpfpuk': 0.01687500000000001, \n'gcpfpus': 0.008437500000000004, 'gcpfpuh': 0.01484375000000001, 'gcpfpuu': 0.0009375000000000001, \n'u10405b': 0.024062500000000018, 'gcpfpgy': 0.01703125000000001, 'gcpfpgu': 0.0057812500000000025, \n'gcpfpvn': 0.00015625, 'gcpfpvp': 0.00015625, 'u1040j0': 0.000625, 'u1040j1': 0, 'u1040hf': 0.0009375000000000001, \n'u1040hd': 0.01625000000000001, 'u1040h6': 0.03281249999999999, 'u1040h4': 0.028593750000000022, \n'u10405f': 0.010312500000000006, 'u10405d': 0.00109375, 'u104058': 0.0028125000000000003, \n'gcpfpgw': 0.0017187499999999998, 'gcpfpgs': 0.000625, 'gcpfpu7': 0.005937500000000003, \n'gcpfpue': 0.0018749999999999997, 'gcpfpu5': 0.005937500000000003, 'gcpfpug': 0.00046875, \n'gcpfpgg': 0.0020312499999999996, 'u104059': 0.005312500000000002, 'gcpfpgx': 0.003906250000000001, \n'gcpfpgt': 0.0021874999999999998, 'gcpfpge': 0.00015625, 'u1040hg': 0.000625, 'u1040he': 0.006718750000000003, \n'u1040h7': 0.01609375000000001, 'u1040h5': 0.01593750000000001, 'u10405g': 0.004218750000000001, \n'u10405e': 0.00078125, 'u1040hu': 0.00046875, 'u1040hs': 0.00140625, 'u1040hk': 0.005000000000000002, \n'u1040hh': 0.007031250000000004, 'u10405u': 0.0015624999999999999, 'u10405s': 0.00046875}\n\n</code></pre>\n<p>Example 2::</p>\n<p><img alt=\"Example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/25b6c6a41cc746942df5609bdde0412fc4a4e87a/68747470733a2f2f6769746875622e636f6d2f6d706477756c69742f6e6561746867656f686173682f626c6f622f6d61737465722f73616d706c65732f656c6c697073655f636f7665726167652e706e67\"></p>\n<p>To see image follow the url: <a href=\"https://github.com/mpdwulit/neathgeohash/blob/master/samples/ellipse_coverage.geojson\" rel=\"nofollow\">https://github.com/mpdwulit/neathgeohash/blob/master/samples/ellipse_coverage.geojson</a></p>\n<h1>Performance ~(30x faster)</h1>\n<p>In version 0.5.0, the geohash encoding was added. The original code was copied from <a href=\"https://github.com/vinsci/geohash\" rel=\"nofollow\">https://github.com/vinsci/geohash</a>\nand extended by fast_encode function. Fast_encode for performance uses NumPy. Here is a comparison between initial\nimplementation and NumPy implementation. Implementation based on blog: <a href=\"https://mmcloughlin.com/posts/geohash-assembly\" rel=\"nofollow\">https://mmcloughlin.com/posts/geohash-assembly</a></p>\n<p>Performance testing code</p>\n<p><img alt=\"Performance\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52c24dbd7e24f7511c4632d9d01a9689e1f45bb0/68747470733a2f2f6769746875622e636f6d2f6d706477756c69742f6e6561746867656f686173682f626c6f622f6465762f73616d706c65732f706572666f726d616e63652e706e67\"></p>\n<pre>=========ngh.encode()================\n\n         63000002 function calls in 26.743 seconds\n\n   Ordered by: cumulative time\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n        1    0.308    0.308   26.743   26.743 performance_cmp.py:22(&lt;listcomp&gt;)\n  1000000   22.988    0.000   26.436    0.000 geohash.py:86(encode)\n 61000000    3.255    0.000    3.255    0.000 {built-in method builtins.len}\n  1000000    0.193    0.000    0.193    0.000 {method 'join' of 'str' objects}\n        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}\n\n\n=========ngh.fast_encode()===========\n\n        160 function calls (159 primitive calls) in 0.899 seconds\n\n   Ordered by: cumulative time\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n        1    0.114    0.114    0.899    0.899 geohash.py:167(fast_encode)\n    36/35    0.366    0.010    0.366    0.010 {built-in method numpy.core._multiarray_umath.implement_array_function}\n       32    0.000    0.000    0.336    0.010 &lt;__array_function__ internals&gt;:2(where)\n       26    0.273    0.010    0.273    0.010 {built-in method numpy.array}\n        1    0.086    0.086    0.111    0.111 geohash.py:123(__encode_into_uint64)\n        1    0.051    0.051    0.066    0.066 geohash.py:149(__encode_base32)\n        1    0.000    0.000    0.017    0.017 &lt;__array_function__ internals&gt;:2(dot)\n        1    0.000    0.000    0.014    0.014 &lt;__array_function__ internals&gt;:2(column_stack)\n        1    0.000    0.000    0.014    0.014 shape_base.py:612(column_stack)\n        1    0.000    0.000    0.014    0.014 &lt;__array_function__ internals&gt;:2(concatenate)\n        1    0.008    0.008    0.008    0.008 {method 'dot' of 'numpy.ndarray' objects}\n       32    0.000    0.000    0.000    0.000 multiarray.py:312(where)\n        1    0.000    0.000    0.000    0.000 &lt;__array_function__ internals&gt;:2(squeeze)\n        3    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}\n        1    0.000    0.000    0.000    0.000 shape_base.py:608(_column_stack_dispatcher)\n        1    0.000    0.000    0.000    0.000 fromnumeric.py:1426(squeeze)\n        1    0.000    0.000    0.000    0.000 shape_base.py:209(_arrays_for_stack_dispatcher)\n       12    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}\n        1    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}\n        1    0.000    0.000    0.000    0.000 {method 'squeeze' of 'numpy.ndarray' objects}\n        1    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}\n        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}\n        1    0.000    0.000    0.000    0.000 multiarray.py:707(dot)\n        1    0.000    0.000    0.000    0.000 fromnumeric.py:1422(_squeeze_dispatcher)\n        1    0.000    0.000    0.000    0.000 multiarray.py:145(concatenate)\n</pre>\n<h1>TODO</h1>\n<ol>\n<li>Add more efficient implementation for finding geohash coverage</li>\n<li>Add Box-Muller Sampling from multivariate normal distribution</li>\n<li>Improve Monte Carlo integration</li>\n</ol>\n<h1>License</h1>\n<p>Copyright (c) 2020 Marek Dwulit</p>\n<p>MIT License</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.</p>\n<h1>Keywords</h1>\n<p>Geohash, GIS, latitude, longitude, encode, decode, Galileo, GPS, WGS84, coordinates, geotagging.</p>\n\n          </div>"}, "last_serial": 7141511, "releases": {"0.4.0": [{"comment_text": "", "digests": {"md5": "bdc863fb4bdc45fece77fe462e978d76", "sha256": "0b48c4bd4633ebf1c191a24bcb68298e956a89e4fda338a448f539d0e0450fed"}, "downloads": -1, "filename": "neathgeohash-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bdc863fb4bdc45fece77fe462e978d76", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 8344, "upload_time": "2020-03-04T01:24:38", "upload_time_iso_8601": "2020-03-04T01:24:38.123850Z", "url": "https://files.pythonhosted.org/packages/18/c4/61f6f587b1570c70436fc382fc190ba1b27a98f6ec97a68eb3ac2ee7db58/neathgeohash-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f2e3f7bea25c11e71212c2d17f562f3", "sha256": "80c2c503fa8a75e0423e629bfdd762ae1b9b2ca278ce139d1fe5df4fc723a319"}, "downloads": -1, "filename": "neathgeohash-0.4.0.tar.gz", "has_sig": false, "md5_digest": "0f2e3f7bea25c11e71212c2d17f562f3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6843, "upload_time": "2020-03-04T01:24:39", "upload_time_iso_8601": "2020-03-04T01:24:39.940653Z", "url": "https://files.pythonhosted.org/packages/7e/2e/38e3c8aa5f847261143bfeb42976249a043064506c535546c94ce4fcc78a/neathgeohash-0.4.0.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "2e4b100b57ecb772a9522eb509cc43e3", "sha256": "9b344964ce82f9de3b25a6b4bce257937ec4bdb13fbd497810090c0b87de2cd3"}, "downloads": -1, "filename": "neathgeohash-0.6.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2e4b100b57ecb772a9522eb509cc43e3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 14679, "upload_time": "2020-04-30T23:19:49", "upload_time_iso_8601": "2020-04-30T23:19:49.929327Z", "url": "https://files.pythonhosted.org/packages/fd/f1/24b94a02db223aecd360db73edf0b275d24a5ba578f62a8b2f148e67275a/neathgeohash-0.6.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b55d880f037c31e1fc64db27dac157c8", "sha256": "46a9d0467110274a395bbbd819a7bedeb71d172b1b5b3a9f7f60f3586f1ac92c"}, "downloads": -1, "filename": "neathgeohash-0.6.4.tar.gz", "has_sig": false, "md5_digest": "b55d880f037c31e1fc64db27dac157c8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14112, "upload_time": "2020-04-30T23:19:50", "upload_time_iso_8601": "2020-04-30T23:19:50.830852Z", "url": "https://files.pythonhosted.org/packages/d2/ac/521f63ec9ba135a73f34fe922f6d77e934d81b0c8f6ab00988837a4e841d/neathgeohash-0.6.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2e4b100b57ecb772a9522eb509cc43e3", "sha256": "9b344964ce82f9de3b25a6b4bce257937ec4bdb13fbd497810090c0b87de2cd3"}, "downloads": -1, "filename": "neathgeohash-0.6.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2e4b100b57ecb772a9522eb509cc43e3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 14679, "upload_time": "2020-04-30T23:19:49", "upload_time_iso_8601": "2020-04-30T23:19:49.929327Z", "url": "https://files.pythonhosted.org/packages/fd/f1/24b94a02db223aecd360db73edf0b275d24a5ba578f62a8b2f148e67275a/neathgeohash-0.6.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b55d880f037c31e1fc64db27dac157c8", "sha256": "46a9d0467110274a395bbbd819a7bedeb71d172b1b5b3a9f7f60f3586f1ac92c"}, "downloads": -1, "filename": "neathgeohash-0.6.4.tar.gz", "has_sig": false, "md5_digest": "b55d880f037c31e1fc64db27dac157c8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14112, "upload_time": "2020-04-30T23:19:50", "upload_time_iso_8601": "2020-04-30T23:19:50.830852Z", "url": "https://files.pythonhosted.org/packages/d2/ac/521f63ec9ba135a73f34fe922f6d77e934d81b0c8f6ab00988837a4e841d/neathgeohash-0.6.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:39 2020"}