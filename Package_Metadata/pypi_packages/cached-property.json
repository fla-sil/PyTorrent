{"info": {"author": "Daniel Greenfeld", "author_email": "pydanny@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "===============================\ncached-property\n===============================\n\n.. image:: https://img.shields.io/pypi/v/cached-property.svg\n    :target: https://pypi.python.org/pypi/cached-property\n\n.. image:: https://img.shields.io/travis/pydanny/cached-property/master.svg\n    :target: https://travis-ci.org/pydanny/cached-property\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/ambv/black\n    :alt: Code style: black        \n\n\nA decorator for caching properties in classes.\n\nWhy?\n-----\n\n* Makes caching of time or computational expensive properties quick and easy.\n* Because I got tired of copy/pasting this code from non-web project to non-web project.\n* I needed something really simple that worked in Python 2 and 3.\n\nHow to use it\n--------------\n\nLet's define a class with an expensive property. Every time you stay there the\nprice goes up by $50!\n\n.. code-block:: python\n\n    class Monopoly(object):\n\n        def __init__(self):\n            self.boardwalk_price = 500\n\n        @property\n        def boardwalk(self):\n            # In reality, this might represent a database call or time\n            # intensive task like calling a third-party API.\n            self.boardwalk_price += 50\n            return self.boardwalk_price\n\nNow run it:\n\n.. code-block:: python\n\n    >>> monopoly = Monopoly()\n    >>> monopoly.boardwalk\n    550\n    >>> monopoly.boardwalk\n    600\n\nLet's convert the boardwalk property into a ``cached_property``.\n\n.. code-block:: python\n\n    from cached_property import cached_property\n\n    class Monopoly(object):\n\n        def __init__(self):\n            self.boardwalk_price = 500\n\n        @cached_property\n        def boardwalk(self):\n            # Again, this is a silly example. Don't worry about it, this is\n            #   just an example for clarity.\n            self.boardwalk_price += 50\n            return self.boardwalk_price\n\nNow when we run it the price stays at $550.\n\n.. code-block:: python\n\n    >>> monopoly = Monopoly()\n    >>> monopoly.boardwalk\n    550\n    >>> monopoly.boardwalk\n    550\n    >>> monopoly.boardwalk\n    550\n\nWhy doesn't the value of ``monopoly.boardwalk`` change? Because it's a **cached property**!\n\nInvalidating the Cache\n----------------------\n\nResults of cached functions can be invalidated by outside forces. Let's demonstrate how to force the cache to invalidate:\n\n.. code-block:: python\n\n    >>> monopoly = Monopoly()\n    >>> monopoly.boardwalk\n    550\n    >>> monopoly.boardwalk\n    550\n    >>> # invalidate the cache\n    >>> del monopoly.__dict__['boardwalk']\n    >>> # request the boardwalk property again\n    >>> monopoly.boardwalk\n    600\n    >>> monopoly.boardwalk\n    600\n\nWorking with Threads\n---------------------\n\nWhat if a whole bunch of people want to stay at Boardwalk all at once? This means using threads, which\nunfortunately causes problems with the standard ``cached_property``. In this case, switch to using the\n``threaded_cached_property``:\n\n.. code-block:: python\n\n    from cached_property import threaded_cached_property\n\n    class Monopoly(object):\n\n        def __init__(self):\n            self.boardwalk_price = 500\n\n        @threaded_cached_property\n        def boardwalk(self):\n            \"\"\"threaded_cached_property is really nice for when no one waits\n                for other people to finish their turn and rudely start rolling\n                dice and moving their pieces.\"\"\"\n\n            sleep(1)\n            self.boardwalk_price += 50\n            return self.boardwalk_price\n\nNow use it:\n\n.. code-block:: python\n\n    >>> from threading import Thread\n    >>> from monopoly import Monopoly\n    >>> monopoly = Monopoly()\n    >>> threads = []\n    >>> for x in range(10):\n    >>>     thread = Thread(target=lambda: monopoly.boardwalk)\n    >>>     thread.start()\n    >>>     threads.append(thread)\n\n    >>> for thread in threads:\n    >>>     thread.join()\n\n    >>> self.assertEqual(m.boardwalk, 550)\n\n\nWorking with async/await (Python 3.5+)\n--------------------------------------\n\nThe cached property can be async, in which case you have to use await\nas usual to get the value. Because of the caching, the value is only\ncomputed once and then cached:\n\n.. code-block:: python\n\n    from cached_property import cached_property\n\n    class Monopoly(object):\n\n        def __init__(self):\n            self.boardwalk_price = 500\n\n        @cached_property\n        async def boardwalk(self):\n            self.boardwalk_price += 50\n            return self.boardwalk_price\n\nNow use it:\n\n.. code-block:: python\n\n    >>> async def print_boardwalk():\n    ...     monopoly = Monopoly()\n    ...     print(await monopoly.boardwalk)\n    ...     print(await monopoly.boardwalk)\n    ...     print(await monopoly.boardwalk)\n    >>> import asyncio\n    >>> asyncio.get_event_loop().run_until_complete(print_boardwalk())\n    550\n    550\n    550\n\nNote that this does not work with threading either, most asyncio\nobjects are not thread-safe. And if you run separate event loops in\neach thread, the cached version will most likely have the wrong event\nloop. To summarize, either use cooperative multitasking (event loop)\nor threading, but not both at the same time.\n\n\nTiming out the cache\n--------------------\n\nSometimes you want the price of things to reset after a time. Use the ``ttl``\nversions of ``cached_property`` and ``threaded_cached_property``.\n\n.. code-block:: python\n\n    import random\n    from cached_property import cached_property_with_ttl\n\n    class Monopoly(object):\n\n        @cached_property_with_ttl(ttl=5) # cache invalidates after 5 seconds\n        def dice(self):\n            # I dare the reader to implement a game using this method of 'rolling dice'.\n            return random.randint(2,12)\n\nNow use it:\n\n.. code-block:: python\n\n    >>> monopoly = Monopoly()\n    >>> monopoly.dice\n    10\n    >>> monopoly.dice\n    10\n    >>> from time import sleep\n    >>> sleep(6) # Sleeps long enough to expire the cache\n    >>> monopoly.dice\n    3\n    >>> monopoly.dice\n    3\n\n**Note:** The ``ttl`` tools do not reliably allow the clearing of the cache. This\nis why they are broken out into seperate tools. See https://github.com/pydanny/cached-property/issues/16.\n\nCredits\n--------\n\n* Pip, Django, Werkzueg, Bottle, Pyramid, and Zope for having their own implementations. This package originally used an implementation that matched the Bottle version.\n* Reinout Van Rees for pointing out the `cached_property` decorator to me.\n* My awesome wife `@audreyr`_ who created `cookiecutter`_, which meant rolling this out took me just 15 minutes.\n* @tinche for pointing out the threading issue and providing a solution.\n* @bcho for providing the time-to-expire feature\n\n.. _`@audreyr`: https://github.com/audreyr\n.. _`cookiecutter`: https://github.com/audreyr/cookiecutter\n\nSupport This Project\n---------------------------\n\nThis project is maintained by volunteers. Support their efforts by spreading the word about:\n\n.. image:: https://cdn.shopify.com/s/files/1/0304/6901/t/2/assets/logo.png?8399580890922549623\n   :name: Two Scoops Press\n   :align: center\n   :alt: Two Scoops Press\n   :target: https://www.twoscoopspress.com\n\n\n\n\nHistory\n-------\n\n1.5.1 (2018-08-05)\n++++++++++++++++++\n\n* Added formal support for Python 3.7\n* Removed formal support for Python 3.3\n\n1.4.3  (2018-06-14)\n+++++++++++++++++++\n\n* Catch SyntaxError from asyncio import on older versions of Python, thanks to @asottile\n\n1.4.2 (2018-04-08)\n++++++++++++++++++\n\n* Really fixed tests, thanks to @pydanny\n\n1.4.1 (2018-04-08)\n++++++++++++++++++\n\n* Added conftest.py to manifest so tests work properly off the tarball, thanks to @dotlambda\n* Ensured new asyncio tests didn't break Python 2.7 builds on Debian, thanks to @pydanny\n* Code formatting via black, thanks to @pydanny and @ambv\n\n\n1.4.0 (2018-02-25)\n++++++++++++++++++\n\n* Added asyncio support, thanks to @vbraun\n* Remove Python 2.6 support, whose end of life was 5 years ago, thanks to @pydanny\n\n\n1.3.1 (2017-09-21)\n++++++++++++++++++\n\n* Validate for Python 3.6\n\n\n1.3.0 (2015-11-24)\n++++++++++++++++++\n\n* Drop some non-ASCII characters from HISTORY.rst, thanks to @AdamWill\n* Added official support for Python 3.5, thanks to @pydanny and @audreyr\n* Removed confusingly placed lock from example, thanks to @ionelmc\n* Corrected invalidation cache documentation, thanks to @proofit404\n* Updated to latest Travis-CI environment, thanks to @audreyr\n\n1.2.0 (2015-04-28)\n++++++++++++++++++\n\n* Overall code and test refactoring, thanks to @gsakkis\n* Allow the del statement for resetting cached properties with ttl instead of del obj._cache[attr], thanks to @gsakkis.\n* Uncovered a bug in PyPy, https://bitbucket.org/pypy/pypy/issue/2033/attributeerror-object-attribute-is-read, thanks to @gsakkis\n* Fixed threaded_cached_property_with_ttl to actually be thread-safe, thanks to @gsakkis\n\n1.1.0 (2015-04-04)\n++++++++++++++++++\n\n* Regression: As the cache was not always clearing, we've broken out the time to expire feature to its own set of specific tools, thanks to @pydanny\n* Fixed typo in README, thanks to @zoidbergwill\n\n1.0.0 (2015-02-13)\n++++++++++++++++++\n\n* Added timed to expire feature to ``cached_property`` decorator.\n* **Backwards incompatiblity**: Changed ``del monopoly.boardwalk`` to ``del monopoly['boardwalk']`` in order to support the new TTL feature.\n\n0.1.5 (2014-05-20)\n++++++++++++++++++\n\n* Added threading support with new ``threaded_cached_property`` decorator\n* Documented cache invalidation\n* Updated credits\n* Sourced the bottle implementation\n\n0.1.4 (2014-05-17)\n++++++++++++++++++\n\n* Fix the dang-blarged py_modules argument.\n\n0.1.3 (2014-05-17)\n++++++++++++++++++\n\n* Removed import of package into ``setup.py``\n\n0.1.2 (2014-05-17)\n++++++++++++++++++\n\n* Documentation fixes. Not opening up a RTFD instance for this because it's so simple to use.\n\n0.1.1 (2014-05-17)\n++++++++++++++++++\n\n* setup.py fix. Whoops!\n\n0.1.0 (2014-05-17)\n++++++++++++++++++\n\n* First release on PyPI.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pydanny/cached-property", "keywords": "cached-property", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "cached-property", "package_url": "https://pypi.org/project/cached-property/", "platform": "", "project_url": "https://pypi.org/project/cached-property/", "project_urls": {"Homepage": "https://github.com/pydanny/cached-property"}, "release_url": "https://pypi.org/project/cached-property/1.5.1/", "requires_dist": null, "requires_python": "", "summary": "A decorator for caching properties in classes.", "version": "1.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/cached-property\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/cached-property.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49f91a222a44b4044d92ed8470f62d5d361925ed/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6361636865642d70726f70657274792e737667\"></a>\n<a href=\"https://travis-ci.org/pydanny/cached-property\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/pydanny/cached-property/master.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd6ab4945fdbe4ba1f12bae788d7f1996d7a5805/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f707964616e6e792f6361636865642d70726f70657274792f6d61737465722e737667\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<p>A decorator for caching properties in classes.</p>\n<div id=\"why\">\n<h2>Why?</h2>\n<ul>\n<li>Makes caching of time or computational expensive properties quick and easy.</li>\n<li>Because I got tired of copy/pasting this code from non-web project to non-web project.</li>\n<li>I needed something really simple that worked in Python 2 and 3.</li>\n</ul>\n</div>\n<div id=\"how-to-use-it\">\n<h2>How to use it</h2>\n<p>Let\u2019s define a class with an expensive property. Every time you stay there the\nprice goes up by $50!</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Monopoly</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boardwalk_price</span> <span class=\"o\">=</span> <span class=\"mi\">500</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">boardwalk</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># In reality, this might represent a database call or time</span>\n        <span class=\"c1\"># intensive task like calling a third-party API.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boardwalk_price</span> <span class=\"o\">+=</span> <span class=\"mi\">50</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boardwalk_price</span>\n</pre>\n<p>Now run it:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">monopoly</span> <span class=\"o\">=</span> <span class=\"n\">Monopoly</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">monopoly</span><span class=\"o\">.</span><span class=\"n\">boardwalk</span>\n<span class=\"mi\">550</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">monopoly</span><span class=\"o\">.</span><span class=\"n\">boardwalk</span>\n<span class=\"mi\">600</span>\n</pre>\n<p>Let\u2019s convert the boardwalk property into a <tt>cached_property</tt>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cached_property</span> <span class=\"kn\">import</span> <span class=\"n\">cached_property</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Monopoly</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boardwalk_price</span> <span class=\"o\">=</span> <span class=\"mi\">500</span>\n\n    <span class=\"nd\">@cached_property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">boardwalk</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Again, this is a silly example. Don't worry about it, this is</span>\n        <span class=\"c1\">#   just an example for clarity.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boardwalk_price</span> <span class=\"o\">+=</span> <span class=\"mi\">50</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boardwalk_price</span>\n</pre>\n<p>Now when we run it the price stays at $550.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">monopoly</span> <span class=\"o\">=</span> <span class=\"n\">Monopoly</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">monopoly</span><span class=\"o\">.</span><span class=\"n\">boardwalk</span>\n<span class=\"mi\">550</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">monopoly</span><span class=\"o\">.</span><span class=\"n\">boardwalk</span>\n<span class=\"mi\">550</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">monopoly</span><span class=\"o\">.</span><span class=\"n\">boardwalk</span>\n<span class=\"mi\">550</span>\n</pre>\n<p>Why doesn\u2019t the value of <tt>monopoly.boardwalk</tt> change? Because it\u2019s a <strong>cached property</strong>!</p>\n</div>\n<div id=\"invalidating-the-cache\">\n<h2>Invalidating the Cache</h2>\n<p>Results of cached functions can be invalidated by outside forces. Let\u2019s demonstrate how to force the cache to invalidate:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">monopoly</span> <span class=\"o\">=</span> <span class=\"n\">Monopoly</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">monopoly</span><span class=\"o\">.</span><span class=\"n\">boardwalk</span>\n<span class=\"mi\">550</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">monopoly</span><span class=\"o\">.</span><span class=\"n\">boardwalk</span>\n<span class=\"mi\">550</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># invalidate the cache</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">del</span> <span class=\"n\">monopoly</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"s1\">'boardwalk'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># request the boardwalk property again</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">monopoly</span><span class=\"o\">.</span><span class=\"n\">boardwalk</span>\n<span class=\"mi\">600</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">monopoly</span><span class=\"o\">.</span><span class=\"n\">boardwalk</span>\n<span class=\"mi\">600</span>\n</pre>\n</div>\n<div id=\"working-with-threads\">\n<h2>Working with Threads</h2>\n<p>What if a whole bunch of people want to stay at Boardwalk all at once? This means using threads, which\nunfortunately causes problems with the standard <tt>cached_property</tt>. In this case, switch to using the\n<tt>threaded_cached_property</tt>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cached_property</span> <span class=\"kn\">import</span> <span class=\"n\">threaded_cached_property</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Monopoly</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boardwalk_price</span> <span class=\"o\">=</span> <span class=\"mi\">500</span>\n\n    <span class=\"nd\">@threaded_cached_property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">boardwalk</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"threaded_cached_property is really nice for when no one waits\n            for other people to finish their turn and rudely start rolling\n            dice and moving their pieces.\"\"\"</span>\n\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boardwalk_price</span> <span class=\"o\">+=</span> <span class=\"mi\">50</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boardwalk_price</span>\n</pre>\n<p>Now use it:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">threading</span> <span class=\"kn\">import</span> <span class=\"n\">Thread</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">monopoly</span> <span class=\"kn\">import</span> <span class=\"n\">Monopoly</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">monopoly</span> <span class=\"o\">=</span> <span class=\"n\">Monopoly</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">threads</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"n\">thread</span> <span class=\"o\">=</span> <span class=\"n\">Thread</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"n\">monopoly</span><span class=\"o\">.</span><span class=\"n\">boardwalk</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"n\">thread</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"n\">threads</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">thread</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">thread</span> <span class=\"ow\">in</span> <span class=\"n\">threads</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"n\">thread</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">()</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertEqual</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">boardwalk</span><span class=\"p\">,</span> <span class=\"mi\">550</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"working-with-async-await-python-3-5\">\n<h2>Working with async/await (Python 3.5+)</h2>\n<p>The cached property can be async, in which case you have to use await\nas usual to get the value. Because of the caching, the value is only\ncomputed once and then cached:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cached_property</span> <span class=\"kn\">import</span> <span class=\"n\">cached_property</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Monopoly</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boardwalk_price</span> <span class=\"o\">=</span> <span class=\"mi\">500</span>\n\n    <span class=\"nd\">@cached_property</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">boardwalk</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boardwalk_price</span> <span class=\"o\">+=</span> <span class=\"mi\">50</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boardwalk_price</span>\n</pre>\n<p>Now use it:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">print_boardwalk</span><span class=\"p\">():</span>\n<span class=\"o\">...</span>     <span class=\"n\">monopoly</span> <span class=\"o\">=</span> <span class=\"n\">Monopoly</span><span class=\"p\">()</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">monopoly</span><span class=\"o\">.</span><span class=\"n\">boardwalk</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">monopoly</span><span class=\"o\">.</span><span class=\"n\">boardwalk</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">monopoly</span><span class=\"o\">.</span><span class=\"n\">boardwalk</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">print_boardwalk</span><span class=\"p\">())</span>\n<span class=\"mi\">550</span>\n<span class=\"mi\">550</span>\n<span class=\"mi\">550</span>\n</pre>\n<p>Note that this does not work with threading either, most asyncio\nobjects are not thread-safe. And if you run separate event loops in\neach thread, the cached version will most likely have the wrong event\nloop. To summarize, either use cooperative multitasking (event loop)\nor threading, but not both at the same time.</p>\n</div>\n<div id=\"timing-out-the-cache\">\n<h2>Timing out the cache</h2>\n<p>Sometimes you want the price of things to reset after a time. Use the <tt>ttl</tt>\nversions of <tt>cached_property</tt> and <tt>threaded_cached_property</tt>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">random</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cached_property</span> <span class=\"kn\">import</span> <span class=\"n\">cached_property_with_ttl</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Monopoly</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n\n    <span class=\"nd\">@cached_property_with_ttl</span><span class=\"p\">(</span><span class=\"n\">ttl</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span> <span class=\"c1\"># cache invalidates after 5 seconds</span>\n    <span class=\"k\">def</span> <span class=\"nf\">dice</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># I dare the reader to implement a game using this method of 'rolling dice'.</span>\n        <span class=\"k\">return</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">12</span><span class=\"p\">)</span>\n</pre>\n<p>Now use it:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">monopoly</span> <span class=\"o\">=</span> <span class=\"n\">Monopoly</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">monopoly</span><span class=\"o\">.</span><span class=\"n\">dice</span>\n<span class=\"mi\">10</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">monopoly</span><span class=\"o\">.</span><span class=\"n\">dice</span>\n<span class=\"mi\">10</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">)</span> <span class=\"c1\"># Sleeps long enough to expire the cache</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">monopoly</span><span class=\"o\">.</span><span class=\"n\">dice</span>\n<span class=\"mi\">3</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">monopoly</span><span class=\"o\">.</span><span class=\"n\">dice</span>\n<span class=\"mi\">3</span>\n</pre>\n<p><strong>Note:</strong> The <tt>ttl</tt> tools do not reliably allow the clearing of the cache. This\nis why they are broken out into seperate tools. See <a href=\"https://github.com/pydanny/cached-property/issues/16\" rel=\"nofollow\">https://github.com/pydanny/cached-property/issues/16</a>.</p>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<ul>\n<li>Pip, Django, Werkzueg, Bottle, Pyramid, and Zope for having their own implementations. This package originally used an implementation that matched the Bottle version.</li>\n<li>Reinout Van Rees for pointing out the <cite>cached_property</cite> decorator to me.</li>\n<li>My awesome wife <a href=\"https://github.com/audreyr\" rel=\"nofollow\">@audreyr</a> who created <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">cookiecutter</a>, which meant rolling this out took me just 15 minutes.</li>\n<li>@tinche for pointing out the threading issue and providing a solution.</li>\n<li>@bcho for providing the time-to-expire feature</li>\n</ul>\n</div>\n<div id=\"support-this-project\">\n<h2>Support This Project</h2>\n<p>This project is maintained by volunteers. Support their efforts by spreading the word about:</p>\n<a href=\"https://www.twoscoopspress.com\" rel=\"nofollow\"><img alt=\"Two Scoops Press\" class=\"align-center\" id=\"two-scoops-press\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/00a861e17aa3d60ccc96677ab801e5de5b1de3e1/68747470733a2f2f63646e2e73686f706966792e636f6d2f732f66696c65732f312f303330342f363930312f742f322f6173736574732f6c6f676f2e706e673f38333939353830383930393232353439363233\"></a>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>1.5.1 (2018-08-05)</h3>\n<ul>\n<li>Added formal support for Python 3.7</li>\n<li>Removed formal support for Python 3.3</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.4.3  (2018-06-14)</h3>\n<ul>\n<li>Catch SyntaxError from asyncio import on older versions of Python, thanks to @asottile</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.4.2 (2018-04-08)</h3>\n<ul>\n<li>Really fixed tests, thanks to @pydanny</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.4.1 (2018-04-08)</h3>\n<ul>\n<li>Added conftest.py to manifest so tests work properly off the tarball, thanks to @dotlambda</li>\n<li>Ensured new asyncio tests didn\u2019t break Python 2.7 builds on Debian, thanks to @pydanny</li>\n<li>Code formatting via black, thanks to @pydanny and @ambv</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.4.0 (2018-02-25)</h3>\n<ul>\n<li>Added asyncio support, thanks to @vbraun</li>\n<li>Remove Python 2.6 support, whose end of life was 5 years ago, thanks to @pydanny</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.3.1 (2017-09-21)</h3>\n<ul>\n<li>Validate for Python 3.6</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.3.0 (2015-11-24)</h3>\n<ul>\n<li>Drop some non-ASCII characters from HISTORY.rst, thanks to @AdamWill</li>\n<li>Added official support for Python 3.5, thanks to @pydanny and @audreyr</li>\n<li>Removed confusingly placed lock from example, thanks to @ionelmc</li>\n<li>Corrected invalidation cache documentation, thanks to @proofit404</li>\n<li>Updated to latest Travis-CI environment, thanks to @audreyr</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>1.2.0 (2015-04-28)</h3>\n<ul>\n<li>Overall code and test refactoring, thanks to @gsakkis</li>\n<li>Allow the del statement for resetting cached properties with ttl instead of del obj._cache[attr], thanks to @gsakkis.</li>\n<li>Uncovered a bug in PyPy, <a href=\"https://bitbucket.org/pypy/pypy/issue/2033/attributeerror-object-attribute-is-read\" rel=\"nofollow\">https://bitbucket.org/pypy/pypy/issue/2033/attributeerror-object-attribute-is-read</a>, thanks to @gsakkis</li>\n<li>Fixed threaded_cached_property_with_ttl to actually be thread-safe, thanks to @gsakkis</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>1.1.0 (2015-04-04)</h3>\n<ul>\n<li>Regression: As the cache was not always clearing, we\u2019ve broken out the time to expire feature to its own set of specific tools, thanks to @pydanny</li>\n<li>Fixed typo in README, thanks to @zoidbergwill</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>1.0.0 (2015-02-13)</h3>\n<ul>\n<li>Added timed to expire feature to <tt>cached_property</tt> decorator.</li>\n<li><strong>Backwards incompatiblity</strong>: Changed <tt>del monopoly.boardwalk</tt> to <tt>del <span class=\"pre\">monopoly['boardwalk']</span></tt> in order to support the new TTL feature.</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.1.5 (2014-05-20)</h3>\n<ul>\n<li>Added threading support with new <tt>threaded_cached_property</tt> decorator</li>\n<li>Documented cache invalidation</li>\n<li>Updated credits</li>\n<li>Sourced the bottle implementation</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.1.4 (2014-05-17)</h3>\n<ul>\n<li>Fix the dang-blarged py_modules argument.</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.1.3 (2014-05-17)</h3>\n<ul>\n<li>Removed import of package into <tt>setup.py</tt></li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>0.1.2 (2014-05-17)</h3>\n<ul>\n<li>Documentation fixes. Not opening up a RTFD instance for this because it\u2019s so simple to use.</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>0.1.1 (2014-05-17)</h3>\n<ul>\n<li>setup.py fix. Whoops!</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>0.1.0 (2014-05-17)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4241370, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "74cf20d2cde8910e23aac27306ef987e", "sha256": "301dab1be8b728ddac17ff5290d63e47e65282b63715ce6c0273adc690615b24"}, "downloads": -1, "filename": "cached_property-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "74cf20d2cde8910e23aac27306ef987e", "packagetype": "bdist_wheel", "python_version": "3.3", "requires_python": null, "size": 4077, "upload_time": "2014-05-17T23:21:25", "upload_time_iso_8601": "2014-05-17T23:21:25.563344Z", "url": "https://files.pythonhosted.org/packages/d7/f6/1681c5db9b87090c375244c12923c21f0326d53a0d568647f909f86aa672/cached_property-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e603d8de7bc0aa2a4d5b3de1b5df38b4", "sha256": "a7de30cec1b13105da1489c8ed14402fdbc6ee8a7ff081c72a5e24258c454024"}, "downloads": -1, "filename": "cached-property-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e603d8de7bc0aa2a4d5b3de1b5df38b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5369, "upload_time": "2014-05-17T23:21:22", "upload_time_iso_8601": "2014-05-17T23:21:22.000589Z", "url": "https://files.pythonhosted.org/packages/d6/68/ee3342fd2e486c55c905db4d43254684a71ef1779cdbe53f1b2c825c55f9/cached-property-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "1cd52352078af95ab47dead06fa74109", "sha256": "848e62a6c59b0b8f705492ccf173f81c54614a5411d88137bade7fb2aa7f193a"}, "downloads": -1, "filename": "cached_property-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1cd52352078af95ab47dead06fa74109", "packagetype": "bdist_wheel", "python_version": "3.3", "requires_python": null, "size": 4120, "upload_time": "2014-05-17T23:26:50", "upload_time_iso_8601": "2014-05-17T23:26:50.814126Z", "url": "https://files.pythonhosted.org/packages/7b/95/724b6c91ab5b7c95d18734162a602eba68b493b43ef4f86f1c7b770cbd88/cached_property-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "844b575000e8fe49b60bd3b81e249944", "sha256": "0f663a07f4bd10ea1ecd8c26fdeeb930b1b64fd016411c817f345d38960ccc7a"}, "downloads": -1, "filename": "cached-property-0.1.1.tar.gz", "has_sig": false, "md5_digest": "844b575000e8fe49b60bd3b81e249944", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5402, "upload_time": "2014-05-17T23:26:47", "upload_time_iso_8601": "2014-05-17T23:26:47.654903Z", "url": "https://files.pythonhosted.org/packages/0f/0b/10cb2fb43fc703bf186200920ffb55cb8af54d816800a858c77519f3a6b1/cached-property-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7cd9d8a629c74617d1bafefc02670805", "sha256": "1d19b19b1b3595ffdd3de8eaf55e19cc249a5a7129b9b9d1ec3afb0afa9cbe3e"}, "downloads": -1, "filename": "cached_property-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7cd9d8a629c74617d1bafefc02670805", "packagetype": "bdist_wheel", "python_version": "3.3", "requires_python": null, "size": 4154, "upload_time": "2014-05-17T23:39:07", "upload_time_iso_8601": "2014-05-17T23:39:07.275727Z", "url": "https://files.pythonhosted.org/packages/eb/24/77fc613896fb54be3b535a0800d24a9861177b74ff6f9677d7321221a1ae/cached_property-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78c73b19b9abdec39bed6c08a35e4701", "sha256": "f2878b588ad8965193abe4180c114cee2d202b0d09f0413c8a400ce559ceae41"}, "downloads": -1, "filename": "cached-property-0.1.2.tar.gz", "has_sig": false, "md5_digest": "78c73b19b9abdec39bed6c08a35e4701", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5432, "upload_time": "2014-05-17T23:39:04", "upload_time_iso_8601": "2014-05-17T23:39:04.042083Z", "url": "https://files.pythonhosted.org/packages/93/bf/b172bbf5c8ece81b7a3384d7001db28891043e38048a5766403987c626f2/cached-property-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "4baea2e2a15ba56b5c3726f0c74f62c4", "sha256": "c15e882a6b3c3938d2fd275f22be312e411849158ae344f87ed679688eb26601"}, "downloads": -1, "filename": "cached_property-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4baea2e2a15ba56b5c3726f0c74f62c4", "packagetype": "bdist_wheel", "python_version": "3.3", "requires_python": null, "size": 4200, "upload_time": "2014-05-18T01:01:15", "upload_time_iso_8601": "2014-05-18T01:01:15.081821Z", "url": "https://files.pythonhosted.org/packages/27/c3/d5a7ea95544d2c42b52a2f3faceadb34c9510787bed7de7b6be8d6ef222f/cached_property-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9de245ac76947eab73d50332d6a7cd9a", "sha256": "4e8f3c9b466ab59534cc88ff5107d7a4056bddd22568913c176fb7e5e3685521"}, "downloads": -1, "filename": "cached-property-0.1.3.tar.gz", "has_sig": false, "md5_digest": "9de245ac76947eab73d50332d6a7cd9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5451, "upload_time": "2014-05-18T01:01:11", "upload_time_iso_8601": "2014-05-18T01:01:11.631729Z", "url": "https://files.pythonhosted.org/packages/e6/1a/1eaf96d4befb254742eb674104861d49f8c0cc8c349c688cdee69f7ce24b/cached-property-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "8bf81e6a1ff8053b40b90d3be29faad9", "sha256": "ffd9c32587f9238ec0d5a360961fea41a3f2b4b0ac77edec1982ad001311a65e"}, "downloads": -1, "filename": "cached_property-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8bf81e6a1ff8053b40b90d3be29faad9", "packagetype": "bdist_wheel", "python_version": "3.3", "requires_python": null, "size": 4768, "upload_time": "2014-05-18T01:24:34", "upload_time_iso_8601": "2014-05-18T01:24:34.421389Z", "url": "https://files.pythonhosted.org/packages/1c/0b/9837375a4e5f0ae234bb61c32260486355b3618c505dd4b83af313bfde24/cached_property-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1be06b0624598de4071dbc3c3c71458", "sha256": "cd7b4fec362bb7171349dbe4170c9f0d9a563e76a6546c9df51ea1c2fa6b5fc2"}, "downloads": -1, "filename": "cached-property-0.1.4.tar.gz", "has_sig": false, "md5_digest": "e1be06b0624598de4071dbc3c3c71458", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5722, "upload_time": "2014-05-18T01:24:32", "upload_time_iso_8601": "2014-05-18T01:24:32.508246Z", "url": "https://files.pythonhosted.org/packages/97/4b/f27bffa71990e5a16007ac471e785d88f4339c31fc08ce503de7e49106aa/cached-property-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "b13e9956484765361506ae134639d093", "sha256": "9c58099474bf35db940c5c7975b92f3c02ea7a6e8248fde0a5f50791753ae870"}, "downloads": -1, "filename": "cached_property-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b13e9956484765361506ae134639d093", "packagetype": "bdist_wheel", "python_version": "3.3", "requires_python": null, "size": 6324, "upload_time": "2014-05-20T16:08:51", "upload_time_iso_8601": "2014-05-20T16:08:51.623137Z", "url": "https://files.pythonhosted.org/packages/36/b6/c86a3b964f434c963b84a6eab2510ef8051cfcba5a16b31e1be8cdc01ece/cached_property-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e9132c59fcfa338a4d50b42da780983", "sha256": "2d07bd19af2ba5eb1d3c042e2b81c2cd02dc5b0890253cb14ae10f1d34f7f86b"}, "downloads": -1, "filename": "cached-property-0.1.5.tar.gz", "has_sig": false, "md5_digest": "6e9132c59fcfa338a4d50b42da780983", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7434, "upload_time": "2014-05-20T16:08:49", "upload_time_iso_8601": "2014-05-20T16:08:49.369329Z", "url": "https://files.pythonhosted.org/packages/b4/8b/0ec52648c9b7cc9d2b87542d96d9976043f044cb82c128eb7fb3b8f84028/cached-property-0.1.5.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "5911d91cab5722ebf268c8cc68db6a26", "sha256": "b4a188bb5f43efdbb0b0fc18faeb5c83d46a51f71d420b2127ca4a47123fba73"}, "downloads": -1, "filename": "cached_property-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5911d91cab5722ebf268c8cc68db6a26", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7272, "upload_time": "2015-02-13T18:59:26", "upload_time_iso_8601": "2015-02-13T18:59:26.244436Z", "url": "https://files.pythonhosted.org/packages/96/b3/abdf30bb35cc0db11918c1ecf703d43f99bb3ddf176d788bef225959a825/cached_property-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f24f8f9f59bbff0dbcfba631a4ee0e3c", "sha256": "041a60a616d59b13026c98b8e1f2b82b7f4ea049bcff44a86d4a0253ba1e2768"}, "downloads": -1, "filename": "cached-property-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f24f8f9f59bbff0dbcfba631a4ee0e3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8210, "upload_time": "2015-02-13T18:59:24", "upload_time_iso_8601": "2015-02-13T18:59:24.140543Z", "url": "https://files.pythonhosted.org/packages/d6/63/571e0a142beb6f2f0deff02b3242a9d318418779374c605d38fb74034e1a/cached-property-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "981bdafa0f59e7d751e48876f96aeebc", "sha256": "09df592f7c504f76a598c344c23d08a981eb5565295311081b6693dfd10606fe"}, "downloads": -1, "filename": "cached_property-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "981bdafa0f59e7d751e48876f96aeebc", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 8006, "upload_time": "2015-04-14T16:35:55", "upload_time_iso_8601": "2015-04-14T16:35:55.106841Z", "url": "https://files.pythonhosted.org/packages/e9/30/279ea8d30d8ee9cfbe73e65959a1cca08562e6d649554c8ae8aedaf81ecd/cached_property-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "37745651fe9c870c5f1242d803d5c3ae", "sha256": "ea0627e0cf1eff465fb4166b6eddec416e1dab8f30d64b9c5b3ffab898072661"}, "downloads": -1, "filename": "cached-property-1.1.0.tar.gz", "has_sig": false, "md5_digest": "37745651fe9c870c5f1242d803d5c3ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8958, "upload_time": "2015-04-14T16:35:51", "upload_time_iso_8601": "2015-04-14T16:35:51.543807Z", "url": "https://files.pythonhosted.org/packages/70/d8/fd7777171cd50e3a8f30cecd64a6b5852432ae51dcba494671b7395aa31a/cached-property-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "821c2f7cb23be837a1784615a58517bc", "sha256": "c3a5e7f41fe99991ab1f8df294f3d8180a56b46fedec94ebd54def89d0ec09c4"}, "downloads": -1, "filename": "cached_property-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "821c2f7cb23be837a1784615a58517bc", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 8257, "upload_time": "2015-04-28T16:35:06", "upload_time_iso_8601": "2015-04-28T16:35:06.913787Z", "url": "https://files.pythonhosted.org/packages/0c/69/8b0e6e95668e450667535ba6f4f3da232b62fa2c813f64af311a992d2ae1/cached_property-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a5766b45fbf45416d9857f1c215f710", "sha256": "e3081a8182d3d4b7283eeade76c382bcfd4dfd644ca800598229c2ef798abb53"}, "downloads": -1, "filename": "cached-property-1.2.0.tar.gz", "has_sig": false, "md5_digest": "0a5766b45fbf45416d9857f1c215f710", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9162, "upload_time": "2015-04-28T16:35:03", "upload_time_iso_8601": "2015-04-28T16:35:03.751755Z", "url": "https://files.pythonhosted.org/packages/54/ab/2bbe252f8e0a98d54870a410e8650f403fa6e2eb0cc208a453cd71c12282/cached-property-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "6eed185585787079dd52024a071757f7", "sha256": "8aacd79aa85a793419c76de9662d9a72ad4751eda2a8b8eb94223adc4d8d85f1"}, "downloads": -1, "filename": "cached_property-1.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6eed185585787079dd52024a071757f7", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 8359, "upload_time": "2015-11-25T01:46:24", "upload_time_iso_8601": "2015-11-25T01:46:24.809875Z", "url": "https://files.pythonhosted.org/packages/a9/70/a0e9c2f2d369808843d4b49c9f92f247ce54e50a684cc715d818e866ad30/cached_property-1.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a6039f7418007275505e355359396a8", "sha256": "458e78b1c7286ece887d92c9bee829da85717994c5e3ddd253a40467f488bc81"}, "downloads": -1, "filename": "cached-property-1.3.0.tar.gz", "has_sig": false, "md5_digest": "4a6039f7418007275505e355359396a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9320, "upload_time": "2015-11-25T01:46:19", "upload_time_iso_8601": "2015-11-25T01:46:19.463579Z", "url": "https://files.pythonhosted.org/packages/ae/02/09b905981aefb99c97ad53ac1cc0a90f02c1457a549eae98d87e8e6f2d7e/cached-property-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "bbd81d7534820b27dea6ffc7c14ce01b", "sha256": "fe045921fe75c873064028e9fbbe06121114ccf613227f4ba284fa7d4c9ff27f"}, "downloads": -1, "filename": "cached_property-1.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bbd81d7534820b27dea6ffc7c14ce01b", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 8818, "upload_time": "2017-09-22T00:04:59", "upload_time_iso_8601": "2017-09-22T00:04:59.052964Z", "url": "https://files.pythonhosted.org/packages/40/57/2d305c9d4df1894aef360f6ccafe73b9ae2fcc75866b799e7452eb4465ca/cached_property-1.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d8e9e42ca72f4ce2affba37b3f7aa45", "sha256": "6562f0be134957547421dda11640e8cadfa7c23238fc4e0821ab69efdb1095f3"}, "downloads": -1, "filename": "cached-property-1.3.1.tar.gz", "has_sig": false, "md5_digest": "9d8e9e42ca72f4ce2affba37b3f7aa45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9648, "upload_time": "2017-09-22T00:04:57", "upload_time_iso_8601": "2017-09-22T00:04:57.181889Z", "url": "https://files.pythonhosted.org/packages/06/2c/ad2baf15231a215c7be0324bdebd3175c320e60eba4cf347560d5749c5b8/cached-property-1.3.1.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "355ceb5ea9db4882e250b2a48da95dde", "sha256": "6e6935ec62567fbcbc346fad84fcea9bc77e3547b7267e62bc5b7ed8e5438ae8"}, "downloads": -1, "filename": "cached_property-1.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "355ceb5ea9db4882e250b2a48da95dde", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 9787, "upload_time": "2018-02-25T23:13:10", "upload_time_iso_8601": "2018-02-25T23:13:10.721725Z", "url": "https://files.pythonhosted.org/packages/ef/01/58e0ee54e37cb5fb54902bb0ddfc8b0c7695bb3041d361db6a67d9738c18/cached_property-1.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc7a49d2c4b7987f92b00c7b49128530", "sha256": "a2fa0f89dd422f7e5dd992a4a3e0ce209d5d1e47a4db28fd0a7b5273ec8da3f0"}, "downloads": -1, "filename": "cached-property-1.4.0.tar.gz", "has_sig": false, "md5_digest": "fc7a49d2c4b7987f92b00c7b49128530", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10862, "upload_time": "2018-02-25T23:13:09", "upload_time_iso_8601": "2018-02-25T23:13:09.083643Z", "url": "https://files.pythonhosted.org/packages/ce/87/72b7a5a0504ad8d5d5ea6804ac5b24ce4f07869f61c47ea00cd4382320ba/cached-property-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "83f95b60fc38507874ee40492e39bce5", "sha256": "d81477d7bd3caed77527b6daf16a7306b554076524b91be2be051e1384e437ed"}, "downloads": -1, "filename": "cached_property-1.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "83f95b60fc38507874ee40492e39bce5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9992, "upload_time": "2018-04-08T22:20:06", "upload_time_iso_8601": "2018-04-08T22:20:06.736059Z", "url": "https://files.pythonhosted.org/packages/9f/51/8f3f861736f60b3ba8a4a68569224017847affc832adfe8ecaa853f896a6/cached_property-1.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "deeb06240d451b873e390ae1ad5e100e", "sha256": "f4aa5fa286c0b7877f4b0cf89ee69114af6e61e481b9638b3403df158109187b"}, "downloads": -1, "filename": "cached-property-1.4.1.tar.gz", "has_sig": false, "md5_digest": "deeb06240d451b873e390ae1ad5e100e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11242, "upload_time": "2018-04-08T22:20:08", "upload_time_iso_8601": "2018-04-08T22:20:08.082935Z", "url": "https://files.pythonhosted.org/packages/0f/fa/2c14323c3fdf3e8e85bdbc600445a3575aba058e5cb213d44c09e9365fec/cached-property-1.4.1.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "74b770ecd9b5b21e76fb85968f4cfb7b", "sha256": "67acb3ee8234245e8aea3784a492272239d9c4b487eba2fdcce9d75460d34520"}, "downloads": -1, "filename": "cached_property-1.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "74b770ecd9b5b21e76fb85968f4cfb7b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10117, "upload_time": "2018-04-08T22:57:39", "upload_time_iso_8601": "2018-04-08T22:57:39.450695Z", "url": "https://files.pythonhosted.org/packages/ca/21/d793828ce0bb01baa6bed307c68466829343cc93fccc055cfbc21f774959/cached_property-1.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4f2c194492fabd80b353d89198e434d", "sha256": "bf093e640b7294303c7cc7ba3212f00b7a07d0416c1d923465995c9ef860a139"}, "downloads": -1, "filename": "cached-property-1.4.2.tar.gz", "has_sig": false, "md5_digest": "e4f2c194492fabd80b353d89198e434d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11201, "upload_time": "2018-04-08T22:57:40", "upload_time_iso_8601": "2018-04-08T22:57:40.915812Z", "url": "https://files.pythonhosted.org/packages/d4/c4/3cc804063fb5f3f63747a68c620145dc54e62b2dd2779f86a477e033fbad/cached-property-1.4.2.tar.gz", "yanked": false}], "1.4.3": [{"comment_text": "", "digests": {"md5": "7604934c11507d16c2c0c2a452f5aa5f", "sha256": "630fdbf0f4ac7d371aa866016eba1c3ac43e9032246748d4994e67cb05f99bc4"}, "downloads": -1, "filename": "cached_property-1.4.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7604934c11507d16c2c0c2a452f5aa5f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10179, "upload_time": "2018-06-15T04:32:04", "upload_time_iso_8601": "2018-06-15T04:32:04.098343Z", "url": "https://files.pythonhosted.org/packages/88/09/4b7a484f96cbceda746e03f0167021c909c3ceae1c6f2e844d79476cb70e/cached_property-1.4.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aff72d06dd38cdaa7aa1adb05e519a99", "sha256": "f1f9028757dc40b4cb0fd2234bd7b61a302d7b84c683cb8c2c529238a24b8938"}, "downloads": -1, "filename": "cached-property-1.4.3.tar.gz", "has_sig": false, "md5_digest": "aff72d06dd38cdaa7aa1adb05e519a99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11252, "upload_time": "2018-06-15T04:32:05", "upload_time_iso_8601": "2018-06-15T04:32:05.083691Z", "url": "https://files.pythonhosted.org/packages/93/c7/914bdabc1d022fc16584c416f395cdec12c76e1169aebf05d654c16e5b47/cached-property-1.4.3.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "ef538f5f14fa9ed2239a59daac352532", "sha256": "3a026f1a54135677e7da5ce819b0c690f156f37976f3e30c5430740725203d7f"}, "downloads": -1, "filename": "cached_property-1.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ef538f5f14fa9ed2239a59daac352532", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5968, "upload_time": "2018-09-05T15:30:03", "upload_time_iso_8601": "2018-09-05T15:30:03.591251Z", "url": "https://files.pythonhosted.org/packages/3b/86/85c1be2e8db9e13ef9a350aecd6dea292bd612fa288c2f40d035bb750ded/cached_property-1.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b6f3cd429da5f487f4ebf3242bb991f", "sha256": "9217a59f14a5682da7c4b8829deadbfc194ac22e9908ccf7c8820234e80a1504"}, "downloads": -1, "filename": "cached-property-1.5.1.tar.gz", "has_sig": false, "md5_digest": "4b6f3cd429da5f487f4ebf3242bb991f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12791, "upload_time": "2018-09-05T15:30:04", "upload_time_iso_8601": "2018-09-05T15:30:04.906564Z", "url": "https://files.pythonhosted.org/packages/57/8e/0698e10350a57d46b3bcfe8eff1d4181642fd1724073336079cb13c5cf7f/cached-property-1.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ef538f5f14fa9ed2239a59daac352532", "sha256": "3a026f1a54135677e7da5ce819b0c690f156f37976f3e30c5430740725203d7f"}, "downloads": -1, "filename": "cached_property-1.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ef538f5f14fa9ed2239a59daac352532", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5968, "upload_time": "2018-09-05T15:30:03", "upload_time_iso_8601": "2018-09-05T15:30:03.591251Z", "url": "https://files.pythonhosted.org/packages/3b/86/85c1be2e8db9e13ef9a350aecd6dea292bd612fa288c2f40d035bb750ded/cached_property-1.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b6f3cd429da5f487f4ebf3242bb991f", "sha256": "9217a59f14a5682da7c4b8829deadbfc194ac22e9908ccf7c8820234e80a1504"}, "downloads": -1, "filename": "cached-property-1.5.1.tar.gz", "has_sig": false, "md5_digest": "4b6f3cd429da5f487f4ebf3242bb991f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12791, "upload_time": "2018-09-05T15:30:04", "upload_time_iso_8601": "2018-09-05T15:30:04.906564Z", "url": "https://files.pythonhosted.org/packages/57/8e/0698e10350a57d46b3bcfe8eff1d4181642fd1724073336079cb13c5cf7f/cached-property-1.5.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:43 2020"}