{"info": {"author": "Sky Zhang", "author_email": "sky.atomse@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation"], "description": "# vasptools\ntools for vasp\n\n[![Build Status](https://travis-ci.org/atomse/vasptools.svg?branch=master)](https://travis-ci.org/atomse/vasptools)\n[![PyPI](https://img.shields.io/pypi/v/vasptools.svg?color=blue&label=vasptools)](https://pypi.org/project/vasptools)\n\n## Installation\n```python\npip install vasptools\n```\n\n## CLI mode\n```bash\n$ vasptools -h\nusage: vasptools [-h] [-p] [-ppath PATH] [-t] [-td PATH] [-s] [-D] [-V]\n                 subcommand ...\n\nVASPTOOLS\n\npositional arguments:\n  subcommand\n    potcar              POTCAR\n    incar               INCAR\n    LISTSUBCOMMAND      list all sub commands, just for test\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -p, --preview         preview\n  -ppath PATH, --potpath PATH\n                        set vasppot_path, you could also set env VASPPOT\n  -t, --test            run test\n  -td PATH, --test_dir PATH\n                        test_dir\n  -s, --shell           shell mode, exec shell script\n  -D, --DEBUG           debug\n  -V                    show program's version number and exit\n$ vasptools potcar -h\nusage: vasptools potcar [-h] [-i PATH] [-d PATH] [-p PTYPE] [-l]\n                        [pp_names [pp_names ...]]\n\npositional arguments:\n  pp_names\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i PATH, --input PATH\n                        Generate POTCAR with POSCAR\n  -d PATH, --dirname PATH\n                        directory to generate file\n  -p PTYPE, --ptype PTYPE\n                        potcar type, avail: ['potcar', 'potcarGGA', 'potpaw',\n                        'potpaw_GGA', 'potpaw_PBE']\n  -l, --list            list available potcar\n\n```\n\n## POSCAR\n```python\n>>> from vasptools import potcar\n>>> potcar.get_potcar_content(pp_names=['H', 'He', 'Li', pp_type='potpaw_PBE')\n' PAW_PBE H 15Jun2001\\n 1.00000000000000000\\n parameters from PSCTR are:\\n   VRHFIN =H: ultrasoft test\\n '\n>>> potcar.gen_potcar(pp_names=['H'], pp_type='potpaw_PBE')\n\n```\n\n## INCAR\n```python\n>>> from vasptools import incar\n>>> incar_dict = incar.parse_incar(incarfile)\n>>> print(incar_dict)\nOrderedDict([('system', 'si series'), ('prec', 'accurate'), ('encut', '245.345'), ('ibrion', '-1'), ('nsw', '0'), ('nelmin', '2'), ('ediff', '1.0e-05'), ('ediffg', '-0.02'), ('voskown', '1'), ('nblock', '1'), ('lvtot', '.true.'), ('nelm', '60'), ('algo', 'fast   (blocked davidson)'), ('gga', 'pe'), ('ispin', '1'), ('iniwav', '1'), ('istart', '0'), ('icharg', '2'), ('lwave', '.false.'), ('lcharg', '.true.'), ('addgrid', '.false.'), ('lhyperfine', '.false.'), ('ismear', '0'), ('sigma', '0.2'), ('rwigs', '1.11')])\n>>> print(output_incar(incar_dict))\nsystem = si series\nprec = accurate\nencut = 245.345\nibrion = -1\nnsw = 0\nnelmin = 2\n```\n\n\n\n## TODO\n- [x] INCAR\n- [ ] POSCAR\n- [ ] KPOINTS\n- [ ] OUTCAR\n- [ ] DOSCAR\n- [ ] CHGCAR\n- [ ] CHG\n- [ ] WAVECAR\n\n...\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/atomse/vasptools", "keywords": "", "license": "MIT License", "maintainer": "Sky Zhang", "maintainer_email": "sky.atomse@gmail.com", "name": "vasptools", "package_url": "https://pypi.org/project/vasptools/", "platform": "Linux", "project_url": "https://pypi.org/project/vasptools/", "project_urls": {"Homepage": "https://github.com/atomse/vasptools"}, "release_url": "https://pypi.org/project/vasptools/0.6.1/", "requires_dist": ["numpy", "pandas", "sh (>=1.10.0)", "argcomplete", "ase", "lxml", "json-tricks", "graphviz ; extra == 'curate'", "sphinx ; extra == 'docs'", "sphinxcontrib-programoutput ; extra == 'docs'", "sphinx-rtd-theme ; extra == 'docs'", "numpydoc ; extra == 'docs'", "pytest (>=4.0) ; extra == 'tests'", "pytest-cov ; extra == 'tests'"], "requires_python": ">=3", "summary": "tool collection for parsing vasp inputs & outputs", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>vasptools</h1>\n<p>tools for vasp</p>\n<p><a href=\"https://travis-ci.org/atomse/vasptools\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a456a0acc1f5c4b2b15123d11862dd5b6cf16904/68747470733a2f2f7472617669732d63692e6f72672f61746f6d73652f76617370746f6f6c732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/vasptools\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7dedff399b955cb1cbdf111417e11e69cb6ed1b3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f76617370746f6f6c732e7376673f636f6c6f723d626c7565266c6162656c3d76617370746f6f6c73\"></a></p>\n<h2>Installation</h2>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">vasptools</span>\n</pre>\n<h2>CLI mode</h2>\n<pre>$ vasptools -h\nusage: vasptools <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>-p<span class=\"o\">]</span> <span class=\"o\">[</span>-ppath PATH<span class=\"o\">]</span> <span class=\"o\">[</span>-t<span class=\"o\">]</span> <span class=\"o\">[</span>-td PATH<span class=\"o\">]</span> <span class=\"o\">[</span>-s<span class=\"o\">]</span> <span class=\"o\">[</span>-D<span class=\"o\">]</span> <span class=\"o\">[</span>-V<span class=\"o\">]</span>\n                 subcommand ...\n\nVASPTOOLS\n\npositional arguments:\n  subcommand\n    potcar              POTCAR\n    incar               INCAR\n    LISTSUBCOMMAND      list all sub commands, just <span class=\"k\">for</span> <span class=\"nb\">test</span>\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -p, --preview         preview\n  -ppath PATH, --potpath PATH\n                        <span class=\"nb\">set</span> vasppot_path, you could also <span class=\"nb\">set</span> env VASPPOT\n  -t, --test            run <span class=\"nb\">test</span>\n  -td PATH, --test_dir PATH\n                        test_dir\n  -s, --shell           shell mode, <span class=\"nb\">exec</span> shell script\n  -D, --DEBUG           debug\n  -V                    show program<span class=\"s1\">'s version number and exit</span>\n<span class=\"s1\">$ vasptools potcar -h</span>\n<span class=\"s1\">usage: vasptools potcar [-h] [-i PATH] [-d PATH] [-p PTYPE] [-l]</span>\n<span class=\"s1\">                        [pp_names [pp_names ...]]</span>\n\n<span class=\"s1\">positional arguments:</span>\n<span class=\"s1\">  pp_names</span>\n\n<span class=\"s1\">optional arguments:</span>\n<span class=\"s1\">  -h, --help            show this help message and exit</span>\n<span class=\"s1\">  -i PATH, --input PATH</span>\n<span class=\"s1\">                        Generate POTCAR with POSCAR</span>\n<span class=\"s1\">  -d PATH, --dirname PATH</span>\n<span class=\"s1\">                        directory to generate file</span>\n<span class=\"s1\">  -p PTYPE, --ptype PTYPE</span>\n<span class=\"s1\">                        potcar type, avail: ['</span>potcar<span class=\"s1\">', '</span>potcarGGA<span class=\"s1\">', '</span>potpaw<span class=\"s1\">',</span>\n<span class=\"s1\">                        '</span>potpaw_GGA<span class=\"s1\">', '</span>potpaw_PBE<span class=\"err\">'</span><span class=\"o\">]</span>\n  -l, --list            list available potcar\n</pre>\n<h2>POSCAR</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">vasptools</span> <span class=\"kn\">import</span> <span class=\"n\">potcar</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">potcar</span><span class=\"o\">.</span><span class=\"n\">get_potcar_content</span><span class=\"p\">(</span><span class=\"n\">pp_names</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'H'</span><span class=\"p\">,</span> <span class=\"s1\">'He'</span><span class=\"p\">,</span> <span class=\"s1\">'Li'</span><span class=\"p\">,</span> <span class=\"n\">pp_type</span><span class=\"o\">=</span><span class=\"s1\">'potpaw_PBE'</span><span class=\"p\">)</span>\n<span class=\"s1\">' PAW_PBE H 15Jun2001</span><span class=\"se\">\\n</span><span class=\"s1\"> 1.00000000000000000</span><span class=\"se\">\\n</span><span class=\"s1\"> parameters from PSCTR are:</span><span class=\"se\">\\n</span><span class=\"s1\">   VRHFIN =H: ultrasoft test</span><span class=\"se\">\\n</span><span class=\"s1\"> '</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">potcar</span><span class=\"o\">.</span><span class=\"n\">gen_potcar</span><span class=\"p\">(</span><span class=\"n\">pp_names</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'H'</span><span class=\"p\">],</span> <span class=\"n\">pp_type</span><span class=\"o\">=</span><span class=\"s1\">'potpaw_PBE'</span><span class=\"p\">)</span>\n</pre>\n<h2>INCAR</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">vasptools</span> <span class=\"kn\">import</span> <span class=\"n\">incar</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">incar_dict</span> <span class=\"o\">=</span> <span class=\"n\">incar</span><span class=\"o\">.</span><span class=\"n\">parse_incar</span><span class=\"p\">(</span><span class=\"n\">incarfile</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">incar_dict</span><span class=\"p\">)</span>\n<span class=\"n\">OrderedDict</span><span class=\"p\">([(</span><span class=\"s1\">'system'</span><span class=\"p\">,</span> <span class=\"s1\">'si series'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'prec'</span><span class=\"p\">,</span> <span class=\"s1\">'accurate'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'encut'</span><span class=\"p\">,</span> <span class=\"s1\">'245.345'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'ibrion'</span><span class=\"p\">,</span> <span class=\"s1\">'-1'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'nsw'</span><span class=\"p\">,</span> <span class=\"s1\">'0'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'nelmin'</span><span class=\"p\">,</span> <span class=\"s1\">'2'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'ediff'</span><span class=\"p\">,</span> <span class=\"s1\">'1.0e-05'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'ediffg'</span><span class=\"p\">,</span> <span class=\"s1\">'-0.02'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'voskown'</span><span class=\"p\">,</span> <span class=\"s1\">'1'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'nblock'</span><span class=\"p\">,</span> <span class=\"s1\">'1'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'lvtot'</span><span class=\"p\">,</span> <span class=\"s1\">'.true.'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'nelm'</span><span class=\"p\">,</span> <span class=\"s1\">'60'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'algo'</span><span class=\"p\">,</span> <span class=\"s1\">'fast   (blocked davidson)'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'gga'</span><span class=\"p\">,</span> <span class=\"s1\">'pe'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'ispin'</span><span class=\"p\">,</span> <span class=\"s1\">'1'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'iniwav'</span><span class=\"p\">,</span> <span class=\"s1\">'1'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'istart'</span><span class=\"p\">,</span> <span class=\"s1\">'0'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'icharg'</span><span class=\"p\">,</span> <span class=\"s1\">'2'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'lwave'</span><span class=\"p\">,</span> <span class=\"s1\">'.false.'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'lcharg'</span><span class=\"p\">,</span> <span class=\"s1\">'.true.'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'addgrid'</span><span class=\"p\">,</span> <span class=\"s1\">'.false.'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'lhyperfine'</span><span class=\"p\">,</span> <span class=\"s1\">'.false.'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'ismear'</span><span class=\"p\">,</span> <span class=\"s1\">'0'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'sigma'</span><span class=\"p\">,</span> <span class=\"s1\">'0.2'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'rwigs'</span><span class=\"p\">,</span> <span class=\"s1\">'1.11'</span><span class=\"p\">)])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">output_incar</span><span class=\"p\">(</span><span class=\"n\">incar_dict</span><span class=\"p\">))</span>\n<span class=\"n\">system</span> <span class=\"o\">=</span> <span class=\"n\">si</span> <span class=\"n\">series</span>\n<span class=\"n\">prec</span> <span class=\"o\">=</span> <span class=\"n\">accurate</span>\n<span class=\"n\">encut</span> <span class=\"o\">=</span> <span class=\"mf\">245.345</span>\n<span class=\"n\">ibrion</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n<span class=\"n\">nsw</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">nelmin</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n</pre>\n<h2>TODO</h2>\n<ul>\n<li>[x] INCAR</li>\n<li>[ ] POSCAR</li>\n<li>[ ] KPOINTS</li>\n<li>[ ] OUTCAR</li>\n<li>[ ] DOSCAR</li>\n<li>[ ] CHGCAR</li>\n<li>[ ] CHG</li>\n<li>[ ] WAVECAR</li>\n</ul>\n<p>...</p>\n\n          </div>"}, "last_serial": 5480002, "releases": {"0.6.1": [{"comment_text": "", "digests": {"md5": "68d7572d6e574467102b59398fbc34cd", "sha256": "8c355fca7a52246bdeebe25b52fc0a6f480aa68c8d88e5f58858b2ee26f619a0"}, "downloads": -1, "filename": "vasptools-0.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "68d7572d6e574467102b59398fbc34cd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3", "size": 27324, "upload_time": "2019-04-02T02:50:55", "upload_time_iso_8601": "2019-04-02T02:50:55.343352Z", "url": "https://files.pythonhosted.org/packages/ba/78/cb0e2bcd8e5b3eea7c203ec7958aa96ca7e4735a3f9466cc378ab8722706/vasptools-0.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4cc1369ed54d1f63ba97de48c8cd3c4", "sha256": "8dc2e2326092c7f59ec81af12ec3937ac5a84f54cd87230bf39ffdcc4f0f9e73"}, "downloads": -1, "filename": "vasptools-0.6.1-py3.6.egg", "has_sig": false, "md5_digest": "b4cc1369ed54d1f63ba97de48c8cd3c4", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3", "size": 58159, "upload_time": "2019-04-02T02:50:58", "upload_time_iso_8601": "2019-04-02T02:50:58.186853Z", "url": "https://files.pythonhosted.org/packages/cf/54/bf556ab0410107be38067b5bdadc240509cbda0f4c4085300ef42d024591/vasptools-0.6.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d1f8120f1262026734cf4bf8237b5ab0", "sha256": "7ead95eb5c40e52faaa3794b82497145f190ec7741006b6e662517d79226dced"}, "downloads": -1, "filename": "vasptools-0.6.1.tar.gz", "has_sig": false, "md5_digest": "d1f8120f1262026734cf4bf8237b5ab0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 18977, "upload_time": "2019-04-02T02:51:00", "upload_time_iso_8601": "2019-04-02T02:51:00.304221Z", "url": "https://files.pythonhosted.org/packages/98/c2/0949f0ac681ce76b88094ce434101c808d79c6159fe506d9c7c22d90eb1b/vasptools-0.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "68d7572d6e574467102b59398fbc34cd", "sha256": "8c355fca7a52246bdeebe25b52fc0a6f480aa68c8d88e5f58858b2ee26f619a0"}, "downloads": -1, "filename": "vasptools-0.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "68d7572d6e574467102b59398fbc34cd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3", "size": 27324, "upload_time": "2019-04-02T02:50:55", "upload_time_iso_8601": "2019-04-02T02:50:55.343352Z", "url": "https://files.pythonhosted.org/packages/ba/78/cb0e2bcd8e5b3eea7c203ec7958aa96ca7e4735a3f9466cc378ab8722706/vasptools-0.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4cc1369ed54d1f63ba97de48c8cd3c4", "sha256": "8dc2e2326092c7f59ec81af12ec3937ac5a84f54cd87230bf39ffdcc4f0f9e73"}, "downloads": -1, "filename": "vasptools-0.6.1-py3.6.egg", "has_sig": false, "md5_digest": "b4cc1369ed54d1f63ba97de48c8cd3c4", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3", "size": 58159, "upload_time": "2019-04-02T02:50:58", "upload_time_iso_8601": "2019-04-02T02:50:58.186853Z", "url": "https://files.pythonhosted.org/packages/cf/54/bf556ab0410107be38067b5bdadc240509cbda0f4c4085300ef42d024591/vasptools-0.6.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d1f8120f1262026734cf4bf8237b5ab0", "sha256": "7ead95eb5c40e52faaa3794b82497145f190ec7741006b6e662517d79226dced"}, "downloads": -1, "filename": "vasptools-0.6.1.tar.gz", "has_sig": false, "md5_digest": "d1f8120f1262026734cf4bf8237b5ab0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 18977, "upload_time": "2019-04-02T02:51:00", "upload_time_iso_8601": "2019-04-02T02:51:00.304221Z", "url": "https://files.pythonhosted.org/packages/98/c2/0949f0ac681ce76b88094ce434101c808d79c6159fe506d9c7c22d90eb1b/vasptools-0.6.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:37:41 2020"}