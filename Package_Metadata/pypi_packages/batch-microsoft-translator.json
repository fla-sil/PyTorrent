{"info": {"author": "Stefan Selby", "author_email": "stefanselby@gmail.com", "bugtrack_url": null, "classifiers": ["License :: Public Domain", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Batch Microsoft Translator\nBatch Microsoft Translator allows for large amounts of translations using the Microsoft 'Translator Text' API reliably.\nBefore starting a user must have a Microsoft Azure service account and must set up an account for the api to obtain a subscription key.\nMore information can be found here: https://azure.microsoft.com/en-gb/services/cognitive-services/translator-text-api/\n# Reliability\nIf any fatal errors are found the translations that have been done are written to the output file.  When re run the process with check the output file and start from where it left off. \nIf any non fatal errors are found (e.g. internet connection issues) the process will wait and retry an number of times before raising a fatal error.\n\n# Process Types\nThe Microsoft 'Translator Text' API only allows for a mixumum of 25 strings of a with a maximum total length of 5000 characters.\nThe process will analyze each column in the data to find the best way to translate in order to reduce cost.  There are 2 processes that a column can be translated by:\n1. Batch Translations - Will go through each row and translate strings in batches, the process will work out the optimum batch size based on the average length of the strings found in each column.\n2. Unique Translations - If the columns contains a large number of repeated strings the process will not go through each row. This process will find all unique strings and only translate those then apply them back to each row.\n\n# Parameters\n- input_df_or_path_or_buffer (DataFrame/str/StringIO) - the input can come from 1 of 3 sources:\n    - pandas DataFrame (DataFrame)\n    - input file path (str)\n    - a file buffer (StringIO)\n- output_file_path (str) - the path where the output will be exported, or read from if needed.\n- translate_cols_list (list) - the columns to translate in the data.\n- subscriptionKey (str) - the subscription key from your Microsoft Azure service account.\n- id_variable (str) - the process requires an id variable to exist in the data.\n- tolang (str) - the language to translate to (default is \"en\"). More langauge codes can be found on the microsoft website.\n- fromlang (str) - the language to translate to (default is None). If None the process will detect the language.\n- delimiter (str) - the delimiter to use for teh input and output files (default is \",\").\n- translated_suffix (str) - the suffix to apply to the name of the translation columns (default is \"_Translated\").\n- dtypes (dict) - any dtypes to apply when loading a input file (note all translation columns will be converted to str) \n- capitalize (bool) - with clean text to 'proper' case if True (default is True)\n\n# Example\n~~~~python\nfrom batch_microsoft_translator import run_batch_translate\n\ninput_file = \"full_path\"\noutput_file = \"full_path\"\n\nrun_batch_translate(input_file, output_file, [\"Col1,Col2,Col3\"], \"XXXXXXXXXXXXXXXXXXXXXXXXXX\", \"ID\", dtypes={\"ID\":int})\n~~~~", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/TheTallBlonde1/batch_microsoft_translator/archive/v_0_0_1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TheTallBlonde1/batch_microsoft_translator", "keywords": "MICROSOFT,TRANSLATOR,TRANSLATION,COGNITIVE SERVICES", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "batch-microsoft-translator", "package_url": "https://pypi.org/project/batch-microsoft-translator/", "platform": "", "project_url": "https://pypi.org/project/batch-microsoft-translator/", "project_urls": {"Download": "https://github.com/TheTallBlonde1/batch_microsoft_translator/archive/v_0_0_1.tar.gz", "Homepage": "https://github.com/TheTallBlonde1/batch_microsoft_translator"}, "release_url": "https://pypi.org/project/batch-microsoft-translator/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Make large amounts of translations using microsoft translator reliably", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Batch Microsoft Translator</h1>\n<p>Batch Microsoft Translator allows for large amounts of translations using the Microsoft 'Translator Text' API reliably.\nBefore starting a user must have a Microsoft Azure service account and must set up an account for the api to obtain a subscription key.\nMore information can be found here: <a href=\"https://azure.microsoft.com/en-gb/services/cognitive-services/translator-text-api/\" rel=\"nofollow\">https://azure.microsoft.com/en-gb/services/cognitive-services/translator-text-api/</a></p>\n<h1>Reliability</h1>\n<p>If any fatal errors are found the translations that have been done are written to the output file.  When re run the process with check the output file and start from where it left off.\nIf any non fatal errors are found (e.g. internet connection issues) the process will wait and retry an number of times before raising a fatal error.</p>\n<h1>Process Types</h1>\n<p>The Microsoft 'Translator Text' API only allows for a mixumum of 25 strings of a with a maximum total length of 5000 characters.\nThe process will analyze each column in the data to find the best way to translate in order to reduce cost.  There are 2 processes that a column can be translated by:</p>\n<ol>\n<li>Batch Translations - Will go through each row and translate strings in batches, the process will work out the optimum batch size based on the average length of the strings found in each column.</li>\n<li>Unique Translations - If the columns contains a large number of repeated strings the process will not go through each row. This process will find all unique strings and only translate those then apply them back to each row.</li>\n</ol>\n<h1>Parameters</h1>\n<ul>\n<li>input_df_or_path_or_buffer (DataFrame/str/StringIO) - the input can come from 1 of 3 sources:\n<ul>\n<li>pandas DataFrame (DataFrame)</li>\n<li>input file path (str)</li>\n<li>a file buffer (StringIO)</li>\n</ul>\n</li>\n<li>output_file_path (str) - the path where the output will be exported, or read from if needed.</li>\n<li>translate_cols_list (list) - the columns to translate in the data.</li>\n<li>subscriptionKey (str) - the subscription key from your Microsoft Azure service account.</li>\n<li>id_variable (str) - the process requires an id variable to exist in the data.</li>\n<li>tolang (str) - the language to translate to (default is \"en\"). More langauge codes can be found on the microsoft website.</li>\n<li>fromlang (str) - the language to translate to (default is None). If None the process will detect the language.</li>\n<li>delimiter (str) - the delimiter to use for teh input and output files (default is \",\").</li>\n<li>translated_suffix (str) - the suffix to apply to the name of the translation columns (default is \"_Translated\").</li>\n<li>dtypes (dict) - any dtypes to apply when loading a input file (note all translation columns will be converted to str)</li>\n<li>capitalize (bool) - with clean text to 'proper' case if True (default is True)</li>\n</ul>\n<h1>Example</h1>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">batch_microsoft_translator</span> <span class=\"kn\">import</span> <span class=\"n\">run_batch_translate</span>\n\n<span class=\"n\">input_file</span> <span class=\"o\">=</span> <span class=\"s2\">\"full_path\"</span>\n<span class=\"n\">output_file</span> <span class=\"o\">=</span> <span class=\"s2\">\"full_path\"</span>\n\n<span class=\"n\">run_batch_translate</span><span class=\"p\">(</span><span class=\"n\">input_file</span><span class=\"p\">,</span> <span class=\"n\">output_file</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Col1,Col2,Col3\"</span><span class=\"p\">],</span> <span class=\"s2\">\"XXXXXXXXXXXXXXXXXXXXXXXXXX\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ID\"</span><span class=\"p\">,</span> <span class=\"n\">dtypes</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"ID\"</span><span class=\"p\">:</span><span class=\"nb\">int</span><span class=\"p\">})</span>\n</pre>\n\n          </div>"}, "last_serial": 7013285, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "8932db8d88f076dc1851373b15182ced", "sha256": "908686c794365d4276bf5f66e203de4da226569dae5aef9cafd98489042a6430"}, "downloads": -1, "filename": "batch_microsoft_translator-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8932db8d88f076dc1851373b15182ced", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10976, "upload_time": "2020-04-13T22:41:10", "upload_time_iso_8601": "2020-04-13T22:41:10.075576Z", "url": "https://files.pythonhosted.org/packages/51/7b/ac7eb1bd4c13afb89277d1fdeeecc0e270ea54e7f510af7ffc87cd93bb80/batch_microsoft_translator-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8932db8d88f076dc1851373b15182ced", "sha256": "908686c794365d4276bf5f66e203de4da226569dae5aef9cafd98489042a6430"}, "downloads": -1, "filename": "batch_microsoft_translator-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8932db8d88f076dc1851373b15182ced", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10976, "upload_time": "2020-04-13T22:41:10", "upload_time_iso_8601": "2020-04-13T22:41:10.075576Z", "url": "https://files.pythonhosted.org/packages/51/7b/ac7eb1bd4c13afb89277d1fdeeecc0e270ea54e7f510af7ffc87cd93bb80/batch_microsoft_translator-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:44 2020"}