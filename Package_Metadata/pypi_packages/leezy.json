{"info": {"author": "aptend", "author_email": "aptend@hotmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Topic :: Text Processing", "Topic :: Utilities"], "description": "# Leezy ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/leezy?style=plastic) ![PyPI](https://img.shields.io/pypi/v/leezy?style=plastic)\n\n\n\u7ed9Python\u7684LeetCode\u5237\u9898\u5de5\u5177\uff0c\u5728\u672c\u5730\u7ba1\u7406\u4f60\u7684\u4e00\u9898\u591a\u89e3\ud83c\udf56\ud83c\udf57\ud83e\udd69\n\n\n## Install\n\n\u5728\u7ec8\u7aef\u6267\u884c\uff1a\n```shell\n$ pip install leezy\n```\n\n## Examples\n\n0. \u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55\n```shell\n$ leezy config --add core.workdir <DIR>\n```\n\u4f8b\u5982`leezy config --add core.workdir D:\\leetcode`\n\n1. \u62c9\u53d6\u9898\u76ee\n\n\n```shell\n$ leezy pull 1\n```\n\n\n\u5728`workdir`\u4e0b\u751f\u6210\u5982\u4e0b\u76ee\u5f55\u548c\u6587\u4ef6\n```\n$ tree\n.\n\u2514\u2500\u2500 001 - Two Sum\n    \u251c\u2500\u2500 001.html # \u9898\u76ee\u63cf\u8ff0\uff0c\u5728\u6d4f\u89c8\u5668\u6216\u8005\u5176\u4ed6html\u9884\u89c8\u5668\u4e2d\u67e5\u770b\n    \u2514\u2500\u2500 001_two-sum.py # solution\u6a21\u677f\uff0c\u5728\u8fd9\u91cc\u7f16\u8f91\u89e3\u6cd5\n```\n\n```python\n# 001_two-sum.py(initial)\nfrom leezy import Solution, solution\n\n\nclass Q001(Solution):  # \u7ee7\u627fSolution\n    @solution    # \u88absolution\u88c5\u9970\u7684\u51fd\u6570\u5c06\u53c2\u4e0e\u6700\u540e\u7684\u7ed3\u679c\u8f93\u51fa\u6216\u6d4b\u8bd5\n    def twoSum(self, nums, target):\n        pass\n\n\ndef main():\n    q = Q001()\n    q.add_case(q.case([2, 7, 11, 15], 9)) # \u6dfb\u52a0\u81ea\u5df1\u7684\u6d4b\u8bd5\u7528\u4f8b\n    q.run()\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n2. \u5c1d\u8bd5\u6b7b\u78d5\u591a\u79cd\u89e3\u6cd5\n```python\n# 001_two-sum.py(modified)\nfrom leezy import Solution, solution\n\n\nclass Q001(Solution):\n    @solution\n    def twoSum(self, nums, target):\n        for i,x in enumerate(nums):\n            for j, y in enumerate(nums[i+1:], i+1):\n                if x + y == target:\n                    return [i, j]\n\n    @solution\n    def twoSum_sort(self, nums, target):\n        L, i, j = len(nums), 0, len(nums)-1\n        sorted_i = sorted(range(L), key=nums.__getitem__)\n        while i < j:\n            s = nums[sorted_i[i]] + nums[sorted_i[j]]\n            if s > target:\n                j -= 1\n            elif s < target:\n                i += 1\n            else:\n                return [sorted_i[i], sorted_i[j]]\n\n    @solution\n    def twoSum_hash(self, nums, target):\n        hash_table = {}\n        for i, x in enumerate(nums):\n            another = target - x\n            if x in hash_table:\n                return [hash_table[x], i]\n            else:\n                hash_table[another] = i\n\n\ndef main():\n    q = Q001()\n    q.add_case(q.case([3, 2, 4], 6))\n    q.add_case(q.case([3,3], 6))\n    q.add_case(q.case([2, 7, 11, 15], 9))\n    q.add_case(q.case([2, 7, 11, 15], 17))\n    q.add_case(q.case([2, 7, 11, 15], 26))\n    q.run()\n\n\nif __name__ == \"__main__\":\n    main()\n\n```\n\n3. \u8fd0\u884c/\u67e5\u770b\u7ed3\u679c\n```shell\n$ leezy run 1\n+----------+----------+---------------+---------------+\n|          |  twoSum  |  twoSum_sort  |  twoSum_hash  |\n+==========+==========+===============+===============+\n|  case 0  |  [1, 2]  |  [1, 2]       |  [1, 2]       |\n+----------+----------+---------------+---------------+\n|  case 1  |  [0, 1]  |  [0, 1]       |  [0, 1]       |\n+----------+----------+---------------+---------------+\n|  case 2  |  [0, 1]  |  [0, 1]       |  [0, 1]       |\n+----------+----------+---------------+---------------+\n|  case 3  |  [0, 3]  |  [0, 3]       |  [0, 3]       |\n+----------+----------+---------------+---------------+\n|  case 4  |  [2, 3]  |  [2, 3]       |  [2, 3]       |\n+----------+----------+---------------+---------------+\n```\n\n4. \u6267\u884c\u6d4b\u8bd5\n\n\u5728\u6dfb\u52a0\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528`assert_equal`\u6dfb\u52a0\u671f\u671b\u7684\u8f93\u51fa\uff0c\u8fd9\u7c7b\u6d4b\u8bd5\u7528\u4f8b\u5c06\u81ea\u52a8\u751f\u6210\u6d4b\u8bd5\u4ee3\u7801\u3002\n```python\n# 001_two-sum.py(modified, testcase-added)\n\n...\n\ndef main():\n    q = Q001()\n    q.add_case(q.case([3, 2, 4], 6))\n    q.add_case(q.case([3,3], 6))\n    q.add_case(q.case([2, 7, 11, 15], 9).assert_equal([0, 1]))\n    q.add_case(q.case([2, 7, 11, 15], 17).assert_equal([0, 3]))\n    q.add_case(q.case([2, 7, 11, 15], 26).assert_equal([2, 3]))\n    q.run()\n```\n\n\u8fd0\u884c\u540e\uff0c\u4e3a3\u4e2a solution \u5404\u81ea\u8fd0\u884c3\u4e2a\u6d4b\u8bd5\uff0c\u603b\u5171\u901a\u8fc79\u4e2a\n```shell\n$ leezy run 1\n+----------+----------+-----------+\n|          |  twoSum  |  two_sum  |\n+==========+==========+===========+\n|  case 0  |  [1, 2]  |  [1, 2]   |\n+----------+----------+-----------+\n|  case 1  |  [0, 1]  |  [0, 1]   |\n+----------+----------+-----------+\n.........                                                                   [100%]\n9 passed in 0.09s\n```\n\n\u6b64\u5916\uff0c\u6d4b\u8bd5\u7528\u4f8b\u652f\u6301`assert_true_with(fn)`\uff0c\u4f20\u5165\u81ea\u5b9a\u4e49\u6d4b\u8bd5\u51fd\u6570\u3002\u6bd4\u5982\u7b2c1054\u9898\uff0c\u8981\u6c42\u7ed3\u679c\u6570\u7ec4\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u4e0d\u76f8\u7b49\uff0c\u56e0\u6b64\u53ef\u4ee5\u6784\u5efa\u5982\u4e0b\u7684\u6d4b\u8bd5\u51fd\u6570\n\n```python\nfrom itertools import chain\nfrom collections import Counter\n\n\nclass Q1054(Solution):\n    @solution\n    def rearrangeBarcodes(self, barcodes):\n        # 452ms 92.03%\n        N = len(barcodes)\n        idx = chain(range(0, N, 2), range(1, N, 2))\n        counter = Counter(barcodes)\n        ans = [0] * N\n        for x, cnt in counter.most_common():\n            for _ in range(cnt):\n                ans[next(idx)] = x\n        return ans\n\n\ndef main():\n    q = Q1054()\n\n    def check(A):\n        return all(x != nx for x, nx in zip(A, A[1:])\n\n    q.add_case(q.case([1, 1, 1, 2, 2, 2]).assert_true_with(check))\n    q.add_case(q.case([1, 2, 2, 2, 5]).assert_true_with(check))\n    q.add_case(q.case([1, 1, 1, 1, 2, 2, 3, 3]).assert_true_with(check))\n    q.run()\n```\n\n5. \u63d0\u4ea4\u89e3\u6cd5\n\n\u63d0\u4ea4\u7b2c\u4e00\u9898\u7684\u7b2c\u4e09\u4e2a\u89e3\u6cd5\n\n```shell\n$ leezy submit 3@1\nIs it OK to submit function 'twoSum'?\n\nclass Solution:\n    def twoSum(self, nums, target):  \n        hash_table = {}\n        for i, x in enumerate(nums): \n            another = target - x\n            if x in hash_table:\n                return [hash_table[x], i]\n            else:\n                hash_table[another] = i\n\n> [Yes/No]? y\n----------------Accepted!----------------\n  time used & rank: 40 ms faster than 93.07%\nmemory used & rank: 14.9 MB less than 6.25%\n\nmore helpful links:\n    https://leetcode-cn.com/submissions/detail/55171676\n    https://leetcode.com/problems/two-sum/discuss/\n\n```\n\n## Why leezy?\n\nleezy\u540d\u5b57\u6765\u81ea\u4e8eleetcode\u548clazy\u7684\u7ec4\u5408\u3002\u61d2\u60f0\u5c31\u662f\u751f\u4ea7\u529b\u3002\n\n\n\n\u5982\u679c\u4f60\u6709\u4ee5\u4e0b\u6807\u7b7e\u6240\u63cf\u8ff0\u7684\u503e\u5411\uff0cleezy\u53ef\u80fd\u4f1a\u7ed9\u4f60\u4e00\u4e9b\u53c2\u8003\uff1a\n\n\u3010\u7b2c\u4e00\u904d\u5237Leetcode\u3011\u3010\u4f7f\u7528\u672c\u5730\u7f16\u8f91\u5668\u3011\u3010\u613f\u610f\u5c1d\u8bd5\u4e00\u9898\u591a\u89e3\u3011\u3010\u5c11\u4e9b\u91cd\u590dprint\u3001\u6d4b\u8bd5\u7528\u4f8b\u3011\n\n\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u95ee\u9898\u8fdb\u4e00\u6b65\u4e86\u89e3\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528leezy\n\n- \u4e3a\u4ec0\u4e48\u4e0d\u5728\u7ebf\u5237\u9898\uff1f\n\n    \u9996\u5148\uff0c\u56e0\u4e3a\u662f\u7b2c\u4e00\u6b21\u505a\u9898\uff0c\u5e0c\u671b\u628a\u91cd\u70b9\u653e\u5728\u89e3\u9898\u672c\u8eab\uff0c\u73af\u5883\u5c31\u4f7f\u7528\u81ea\u5df1\u4e60\u60ef\u7684\u5c31\u597d\u3002\n\n    \u5176\u6b21\uff0c\u5728\u7ebfrun code\u7684\u901f\u5ea6\u4e0d\u7a33\u5b9a\uff0c\u4e0d\u9002\u5408\u521d\u671f\u7684debug\u3002\n\n    \u6700\u540e\uff0c\u5728\u672c\u5730\u8bb0\u5f55\u89e3\u6cd5\uff0c\u7ba1\u7406\u8d77\u6765\u66f4\u76f4\u63a5\uff0c\u79bb\u7ebf\u4e5f\u53ef\u4ee5\u968f\u65f6\u641c\u7d22\u590d\u4e60\u3002\n\n    \u5982\u679c\u662f\u7b2cn\u904d\u5237\u9898\u4e86\uff0c\u76f4\u63a5\u4e0aweb\u66f4\u65b9\u4fbf\u3002\n\n- leezy\u7684\u6838\u5fc3\u662f\u4ec0\u4e48\uff1f\n\n    \u5c11\u5199print\uff0c\u5c11\u5199\u91cd\u590d\u6d4b\u8bd5\u7528\u4f8b\u3002\u548c\u4e0a\u9762\u63d0\u5230\u7684\u6807\u7b7e\u6240\u6697\u793a\u7684\u90a3\u6837\uff0c\u505a\u9898\u5927\u6982\u7387\u4e0d\u80fd\u4e00\u6b21\u6210\u529f\uff0c\u9700\u8981\u5728\u672c\u5730\u7528\u81ea\u5df1\u7684\u6d4b\u8bd5\u7528\u4f8b\u53cd\u590d\u8fd0\u884c\uff0c\u6253\u5370\u7ed3\u679c\uff0c\u4fee\u6539\u3002\u5f53\u4f7f\u7528\u591a\u4e2a\u89e3\u6cd5\u65f6\uff0c\u53c8\u9700\u8981\u91cd\u590d\u8fd9\u4e9b\u5de5\u4f5c\u3002\u6240\u4ee5\u4e00\u6b21\u6027\u5199\u5b8c\u8fd9\u4e9b\u91cd\u590d\u7684print\u3001\u6d4b\u8bd5\u7528\u4f8b\u5c31\u662fleezy\u6700\u5e73\u5e38\u4e14\u7b80\u5355\u7684\u76ee\u7684\n\n- \u548c\u5176\u4ed6\u5237\u9898\u5de5\u5177\u6709\u4ec0\u4e48\u533a\u522b\uff1f\n\n    \u5176\u4ed6\u7684\u5237\u9898\u5de5\u5177\uff0c\u5178\u578b\u7684\u6709\u57fa\u4e8eCLI\u7684[leetcode-cli](https://github.com/skygragon/leetcode-cli), \u57fa\u4e8eVSCode\u7684[leetcode for vscode](https://marketplace.visualstudio.com/items?itemName=shengchen.vscode-leetcode)(\u4e5f\u57fa\u4e8eleetcode-cli)\uff0c\u90fd\u652f\u6301\u5b8c\u6574\u7684\u5237\u9898\u6d41\u7a0b\uff1a\u7528\u6237\u767b\u5f55\u3001\u9898\u76ee\u62c9\u53d6\u3001\u7f16\u5199\u3001\u6d4b\u8bd5\u3001\u63d0\u4ea4\u3001\u67e5\u770b\u7edf\u8ba1\u6570\u636e\u3002\u672c\u8d28\u662f\u628a\u7f51\u9875\u7248\u7684\u529f\u80fd\u5728\u7528\u53e6\u4e00\u5957\u63a5\u53e3\u8fdb\u884c\u5b9e\u73b0\u3002\n\n    leezy\u867d\u7136\u4e5f\u53ef\u4ee5\u767b\u5f55\u3001\u62c9\u53d6\u3001\u6d4b\u8bd5\u4ee5\u53ca\u63d0\u4ea4\uff0c\u4f46\u76f8\u6bd4\u4e0a\u8ff0\u5de5\u5177\uff0cleezy\u5bf9\u9898\u76ee\u62c9\u53d6\u540e\uff0c**\u6a21\u677f\u6587\u4ef6\u4e0d\u518d\u548c\u7f51\u9875\u4e0a\u63d0\u4f9b\u7684\u6a21\u677f\u4e00\u81f4\uff0c\u66f4\u65b9\u4fbf\u5b9e\u73b0\u4e00\u9898\u591a\u89e3\u7684\u672c\u5730\u8c03\u8bd5**\u3002\n\n\n\n\n## More things\n\n### \u547d\u4ee4\u884c\n\n\u4f7f\u7528`leezy [command]`\u5b8c\u6210\u62c9\u53d6\u9898\u76ee\u53ca\u8bbe\u7f6e\u76f8\u5173\u64cd\u4f5c\n```\nusage: leezy [options] COMMAND\n\nManage your Python solutions better\n\noptional arguments:\n  -h, --help     show this help message and exit\n  -V, --version  show program's version number and exit\n  --zone ZONE    'cn' or 'us', default is 'cn'\n  --dir DIR      assign a temporary workdir for this session\n  -v             verbose, use multiple -vv... to show more log\n\nCOMMANDS:\n  use 'leezy <COMMAND> -h' to see more\n\n  -\u2b50-\n    show         show basic info of problems\n    pull         pull problems to local files\n    run          run your solutions, see outputs or test them\n    submit       submit your solution to leetcode\n    plot         show a heatmap of your all accepted solutions\n    config       manage global configs\n```\n\n\u5176\u4e2dconfig\u652f\u6301git\u98ce\u683c\u7684\u5c5e\u6027\u914d\u7f6e\uff0c\u76ee\u524d\u7684\u53ef\u914d\u7f6e\u9879\u4e3a\uff1a\n\n\n| name                     | description                                                  | default  |\n| ------------------------ | ------------------------------------------------------------ | -------- |\n| table.max_col_width      | \u8868\u683c\u5217\u7684\u6700\u5927\u5bbd\u5ea6                                             | 40\u5b57\u7b26   |\n| table.max_content_length | \u6bcf\u4e2a\u5355\u5143\u683c\u652f\u6301\u7684\u6700\u957f\u5185\u5bb9\u957f\u5ea6\uff0c\u8d85\u8fc7\u90e8\u5206\u5c06\u88ab\u622a\u65ad(-1\u8868\u793a\u4e0d\u622a\u65ad) | 100\u5b57\u7b26  |\n| core.workdir             | \u5237\u9898\u76ee\u5f55\uff0c\u6bcf\u6b21pull\u3001run\u90fd\u5c06\u57fa\u7840\u8be5\u76ee\u5f55                        | \u5f53\u524d\u76ee\u5f55 |\n| core.zone                | \u5237\u9898\u7f51\u7ad9\u7248\u672c\uff0c\u4e2d\u56fd\u533a\u8fd8\u662f\u7f8e\u533a                                   | cn       |\n| log.level                | \u65e5\u5fd7\u7b49\u7ea7                                                     | warning  |\n\n---\n\n\n### \u8f85\u52a9\u7c7b\n\n\u9488\u5bf9\u4f7f\u7528\u94fe\u8868\u6216\u8005\u6811\u7ed3\u6784\u7684\u9898\u76ee\uff0c\u4e5f\u63d0\u4f9b\u4e86\u548c\u7f51\u9875\u7248\u7c7b\u4f3c\u7684\u57fa\u7840\u7c7b\u578b\uff0c\u521d\u59cb\u5316\u7684\u53c2\u6570\u4e5f\u548c\u7f51\u9875\u7248\u4fdd\u6301\u4e00\u81f4\u3002\n\n\u4ece`leezy.assists`\u4e2d\u5bfc\u5165\n\n```python\nfrom leezy.assists import TreeNode, ListNode\n\nt = TreeNode.make_tree([1, 2, 3, 4, 5, None, 6])\nprint(type(t)) # <class 'leezy.assists.TreeNode'>\nprint(t)       # Tree(1-2-3-4-5-None-6)\nprint(t.left)  # Tree(2-4-5)\nprint(t.right) # Tree(3-None-6)\n\n\nl = ListNode.make_linked_list([1, 2, 3, 4, 5])\nprint(type(l)) # <class 'leezy.assists.ListNode'>\nprint(l)       # 1->2->3->4->5\nprint(l.next)  # 2->3->4->5\n```\n\n\u73b0\u5728\u652f\u6301\u7684\u7c7b\u578b:\n\n- TreeNode\n- ListNode\n\n\n\n\u9664\u4e86\u624b\u52a8\u4f7f\u7528`make_tree`, `make_linkedlist`\u6784\u9020\uff0c\u8fd8\u63d0\u4f9b\u4e86TreeContext\uff0cLinkedListContext\uff0c\u5c06`add_case`\u4f20\u5165\u7684\u96c6\u5408\u7c7b\u578b\u53c2\u6570\u81ea\u52a8\u6784\u9020\u4e3a\u6811\u6216\u94fe\u8868\u3002\u7701\u5f97\u6bcf\u6b21\u6dfb\u52a0\u6d4b\u8bd5\u7528\u4f8b\u90fd\u8981\u5199`make_*`\u51fd\u6570\n\n```python\nfrom leezy import Solution, solution\nfrom leezy.assists import TreeContext # \u5bfc\u5165TreeContext\n\n\nclass Q700(Solution):\n    @solution\n    def searchBST(self, root, val):\n        if root is None:\n            return\n        if root.val > val:\n            return self.searchBST(root.left, val)\n        elif root.val < val:\n            return self.searchBST(root.right, val)\n        else:\n            return root\n\n    @solution\n    def search(self, root, val):\n        while root:\n            if root.val > val:\n                root = root.left\n            elif root.val < val:\n                root = root.right\n            else:\n                return root\n        return None\n\n\ndef main():\n    q = Q700()\n    q.set_context(TreeContext)  # \u8bbe\u7f6eTreeContex\n    q.add_case(q.case([4, 2, 7, 1, 3], 2)) # \u8fd9\u91cc\u4f20\u5165\u7684\u5217\u8868\u81ea\u52a8\u4f1a\u88ab\u8f6c\u5316\u4e3aTree\n    q.run()\n```\n\n\u4e3a\u4e86\u8fdb\u4e00\u6b65\u7b80\u5316\uff0c`pull`\u547d\u4ee4\u652f\u6301--context\u9009\u9879\n```\n$ leezy pull --context tree 700 701\n```\n\n\u8fd9\u6837700\u3001701\u9898\u7684\u6e90\u6587\u4ef6\u81ea\u52a8\u6dfb\u52a0\u597dTreeContext\n\n---\n\n\u66f4\u591a\u529f\u80fd\u548c\u9650\u5236\u8bf4\u660e\uff0c\u5f85\u66f4\u65b0\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aptend/leezy", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "leezy", "package_url": "https://pypi.org/project/leezy/", "platform": "", "project_url": "https://pypi.org/project/leezy/", "project_urls": {"Homepage": "https://github.com/aptend/leezy"}, "release_url": "https://pypi.org/project/leezy/0.5.3/", "requires_dist": ["requests (>=2.18.0)", "pytest (>=5.1.3)"], "requires_python": ">=3.6", "summary": "leezy: leetcode helper for the lazy", "version": "0.5.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Leezy <img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70f9482d2e813c8353e4ad9b82d80c71b89fb71e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6c65657a793f7374796c653d706c6173746963\"> <img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0949bb8e4b90dd26c3dd7bb149f948185b7fe97/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c65657a793f7374796c653d706c6173746963\"></h1>\n<p>\u7ed9Python\u7684LeetCode\u5237\u9898\u5de5\u5177\uff0c\u5728\u672c\u5730\u7ba1\u7406\u4f60\u7684\u4e00\u9898\u591a\u89e3\ud83c\udf56\ud83c\udf57\ud83e\udd69</p>\n<h2>Install</h2>\n<p>\u5728\u7ec8\u7aef\u6267\u884c\uff1a</p>\n<pre>$ pip install leezy\n</pre>\n<h2>Examples</h2>\n<ol>\n<li>\u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55</li>\n</ol>\n<pre>$ leezy config --add core.workdir &lt;DIR&gt;\n</pre>\n<p>\u4f8b\u5982<code>leezy config --add core.workdir D:\\leetcode</code></p>\n<ol>\n<li>\u62c9\u53d6\u9898\u76ee</li>\n</ol>\n<pre>$ leezy pull <span class=\"m\">1</span>\n</pre>\n<p>\u5728<code>workdir</code>\u4e0b\u751f\u6210\u5982\u4e0b\u76ee\u5f55\u548c\u6587\u4ef6</p>\n<pre><code>$ tree\n.\n\u2514\u2500\u2500 001 - Two Sum\n    \u251c\u2500\u2500 001.html # \u9898\u76ee\u63cf\u8ff0\uff0c\u5728\u6d4f\u89c8\u5668\u6216\u8005\u5176\u4ed6html\u9884\u89c8\u5668\u4e2d\u67e5\u770b\n    \u2514\u2500\u2500 001_two-sum.py # solution\u6a21\u677f\uff0c\u5728\u8fd9\u91cc\u7f16\u8f91\u89e3\u6cd5\n</code></pre>\n<pre><span class=\"c1\"># 001_two-sum.py(initial)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">leezy</span> <span class=\"kn\">import</span> <span class=\"n\">Solution</span><span class=\"p\">,</span> <span class=\"n\">solution</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Q001</span><span class=\"p\">(</span><span class=\"n\">Solution</span><span class=\"p\">):</span>  <span class=\"c1\"># \u7ee7\u627fSolution</span>\n    <span class=\"nd\">@solution</span>    <span class=\"c1\"># \u88absolution\u88c5\u9970\u7684\u51fd\u6570\u5c06\u53c2\u4e0e\u6700\u540e\u7684\u7ed3\u679c\u8f93\u51fa\u6216\u6d4b\u8bd5</span>\n    <span class=\"k\">def</span> <span class=\"nf\">twoSum</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">nums</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"n\">Q001</span><span class=\"p\">()</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">add_case</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">],</span> <span class=\"mi\">9</span><span class=\"p\">))</span> <span class=\"c1\"># \u6dfb\u52a0\u81ea\u5df1\u7684\u6d4b\u8bd5\u7528\u4f8b</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<ol>\n<li>\u5c1d\u8bd5\u6b7b\u78d5\u591a\u79cd\u89e3\u6cd5</li>\n</ol>\n<pre><span class=\"c1\"># 001_two-sum.py(modified)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">leezy</span> <span class=\"kn\">import</span> <span class=\"n\">Solution</span><span class=\"p\">,</span> <span class=\"n\">solution</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Q001</span><span class=\"p\">(</span><span class=\"n\">Solution</span><span class=\"p\">):</span>\n    <span class=\"nd\">@solution</span>\n    <span class=\"k\">def</span> <span class=\"nf\">twoSum</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">nums</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">nums</span><span class=\"p\">):</span>\n            <span class=\"k\">for</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">nums</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">:],</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n                <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span> <span class=\"o\">==</span> <span class=\"n\">target</span><span class=\"p\">:</span>\n                    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@solution</span>\n    <span class=\"k\">def</span> <span class=\"nf\">twoSum_sort</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">nums</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">):</span>\n        <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">nums</span><span class=\"p\">),</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">nums</span><span class=\"p\">)</span><span class=\"o\">-</span><span class=\"mi\">1</span>\n        <span class=\"n\">sorted_i</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">),</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">nums</span><span class=\"o\">.</span><span class=\"fm\">__getitem__</span><span class=\"p\">)</span>\n        <span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">j</span><span class=\"p\">:</span>\n            <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">nums</span><span class=\"p\">[</span><span class=\"n\">sorted_i</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]]</span> <span class=\"o\">+</span> <span class=\"n\">nums</span><span class=\"p\">[</span><span class=\"n\">sorted_i</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]]</span>\n            <span class=\"k\">if</span> <span class=\"n\">s</span> <span class=\"o\">&gt;</span> <span class=\"n\">target</span><span class=\"p\">:</span>\n                <span class=\"n\">j</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n            <span class=\"k\">elif</span> <span class=\"n\">s</span> <span class=\"o\">&lt;</span> <span class=\"n\">target</span><span class=\"p\">:</span>\n                <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">sorted_i</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">sorted_i</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]]</span>\n\n    <span class=\"nd\">@solution</span>\n    <span class=\"k\">def</span> <span class=\"nf\">twoSum_hash</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">nums</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">):</span>\n        <span class=\"n\">hash_table</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">nums</span><span class=\"p\">):</span>\n            <span class=\"n\">another</span> <span class=\"o\">=</span> <span class=\"n\">target</span> <span class=\"o\">-</span> <span class=\"n\">x</span>\n            <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">hash_table</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">hash_table</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">hash_table</span><span class=\"p\">[</span><span class=\"n\">another</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">i</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"n\">Q001</span><span class=\"p\">()</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">add_case</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">([</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"mi\">6</span><span class=\"p\">))</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">add_case</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">([</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"mi\">6</span><span class=\"p\">))</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">add_case</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">],</span> <span class=\"mi\">9</span><span class=\"p\">))</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">add_case</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">],</span> <span class=\"mi\">17</span><span class=\"p\">))</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">add_case</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">],</span> <span class=\"mi\">26</span><span class=\"p\">))</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<ol>\n<li>\u8fd0\u884c/\u67e5\u770b\u7ed3\u679c</li>\n</ol>\n<pre>$ leezy run <span class=\"m\">1</span>\n+----------+----------+---------------+---------------+\n<span class=\"p\">|</span>          <span class=\"p\">|</span>  twoSum  <span class=\"p\">|</span>  twoSum_sort  <span class=\"p\">|</span>  twoSum_hash  <span class=\"p\">|</span>\n+<span class=\"o\">==========</span>+<span class=\"o\">==========</span>+<span class=\"o\">===============</span>+<span class=\"o\">===============</span>+\n<span class=\"p\">|</span>  <span class=\"k\">case</span> <span class=\"m\">0</span>  <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">1</span>, <span class=\"m\">2</span><span class=\"o\">]</span>  <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">1</span>, <span class=\"m\">2</span><span class=\"o\">]</span>       <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">1</span>, <span class=\"m\">2</span><span class=\"o\">]</span>       <span class=\"p\">|</span>\n+----------+----------+---------------+---------------+\n<span class=\"p\">|</span>  <span class=\"k\">case</span> <span class=\"m\">1</span>  <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">0</span>, <span class=\"m\">1</span><span class=\"o\">]</span>  <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">0</span>, <span class=\"m\">1</span><span class=\"o\">]</span>       <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">0</span>, <span class=\"m\">1</span><span class=\"o\">]</span>       <span class=\"p\">|</span>\n+----------+----------+---------------+---------------+\n<span class=\"p\">|</span>  <span class=\"k\">case</span> <span class=\"m\">2</span>  <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">0</span>, <span class=\"m\">1</span><span class=\"o\">]</span>  <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">0</span>, <span class=\"m\">1</span><span class=\"o\">]</span>       <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">0</span>, <span class=\"m\">1</span><span class=\"o\">]</span>       <span class=\"p\">|</span>\n+----------+----------+---------------+---------------+\n<span class=\"p\">|</span>  <span class=\"k\">case</span> <span class=\"m\">3</span>  <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">0</span>, <span class=\"m\">3</span><span class=\"o\">]</span>  <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">0</span>, <span class=\"m\">3</span><span class=\"o\">]</span>       <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">0</span>, <span class=\"m\">3</span><span class=\"o\">]</span>       <span class=\"p\">|</span>\n+----------+----------+---------------+---------------+\n<span class=\"p\">|</span>  <span class=\"k\">case</span> <span class=\"m\">4</span>  <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">2</span>, <span class=\"m\">3</span><span class=\"o\">]</span>  <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">2</span>, <span class=\"m\">3</span><span class=\"o\">]</span>       <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">2</span>, <span class=\"m\">3</span><span class=\"o\">]</span>       <span class=\"p\">|</span>\n+----------+----------+---------------+---------------+\n</pre>\n<ol>\n<li>\u6267\u884c\u6d4b\u8bd5</li>\n</ol>\n<p>\u5728\u6dfb\u52a0\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528<code>assert_equal</code>\u6dfb\u52a0\u671f\u671b\u7684\u8f93\u51fa\uff0c\u8fd9\u7c7b\u6d4b\u8bd5\u7528\u4f8b\u5c06\u81ea\u52a8\u751f\u6210\u6d4b\u8bd5\u4ee3\u7801\u3002</p>\n<pre><span class=\"c1\"># 001_two-sum.py(modified, testcase-added)</span>\n\n<span class=\"o\">...</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"n\">Q001</span><span class=\"p\">()</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">add_case</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">([</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"mi\">6</span><span class=\"p\">))</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">add_case</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">([</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"mi\">6</span><span class=\"p\">))</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">add_case</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">],</span> <span class=\"mi\">9</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">assert_equal</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]))</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">add_case</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">],</span> <span class=\"mi\">17</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">assert_equal</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]))</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">add_case</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">],</span> <span class=\"mi\">26</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">assert_equal</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]))</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>\u8fd0\u884c\u540e\uff0c\u4e3a3\u4e2a solution \u5404\u81ea\u8fd0\u884c3\u4e2a\u6d4b\u8bd5\uff0c\u603b\u5171\u901a\u8fc79\u4e2a</p>\n<pre>$ leezy run <span class=\"m\">1</span>\n+----------+----------+-----------+\n<span class=\"p\">|</span>          <span class=\"p\">|</span>  twoSum  <span class=\"p\">|</span>  two_sum  <span class=\"p\">|</span>\n+<span class=\"o\">==========</span>+<span class=\"o\">==========</span>+<span class=\"o\">===========</span>+\n<span class=\"p\">|</span>  <span class=\"k\">case</span> <span class=\"m\">0</span>  <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">1</span>, <span class=\"m\">2</span><span class=\"o\">]</span>  <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">1</span>, <span class=\"m\">2</span><span class=\"o\">]</span>   <span class=\"p\">|</span>\n+----------+----------+-----------+\n<span class=\"p\">|</span>  <span class=\"k\">case</span> <span class=\"m\">1</span>  <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">0</span>, <span class=\"m\">1</span><span class=\"o\">]</span>  <span class=\"p\">|</span>  <span class=\"o\">[</span><span class=\"m\">0</span>, <span class=\"m\">1</span><span class=\"o\">]</span>   <span class=\"p\">|</span>\n+----------+----------+-----------+\n.........                                                                   <span class=\"o\">[</span><span class=\"m\">100</span>%<span class=\"o\">]</span>\n<span class=\"m\">9</span> passed in <span class=\"m\">0</span>.09s\n</pre>\n<p>\u6b64\u5916\uff0c\u6d4b\u8bd5\u7528\u4f8b\u652f\u6301<code>assert_true_with(fn)</code>\uff0c\u4f20\u5165\u81ea\u5b9a\u4e49\u6d4b\u8bd5\u51fd\u6570\u3002\u6bd4\u5982\u7b2c1054\u9898\uff0c\u8981\u6c42\u7ed3\u679c\u6570\u7ec4\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u4e0d\u76f8\u7b49\uff0c\u56e0\u6b64\u53ef\u4ee5\u6784\u5efa\u5982\u4e0b\u7684\u6d4b\u8bd5\u51fd\u6570</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">itertools</span> <span class=\"kn\">import</span> <span class=\"n\">chain</span>\n<span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">Counter</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Q1054</span><span class=\"p\">(</span><span class=\"n\">Solution</span><span class=\"p\">):</span>\n    <span class=\"nd\">@solution</span>\n    <span class=\"k\">def</span> <span class=\"nf\">rearrangeBarcodes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">barcodes</span><span class=\"p\">):</span>\n        <span class=\"c1\"># 452ms 92.03%</span>\n        <span class=\"n\">N</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">barcodes</span><span class=\"p\">)</span>\n        <span class=\"n\">idx</span> <span class=\"o\">=</span> <span class=\"n\">chain</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n        <span class=\"n\">counter</span> <span class=\"o\">=</span> <span class=\"n\">Counter</span><span class=\"p\">(</span><span class=\"n\">barcodes</span><span class=\"p\">)</span>\n        <span class=\"n\">ans</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">N</span>\n        <span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">cnt</span> <span class=\"ow\">in</span> <span class=\"n\">counter</span><span class=\"o\">.</span><span class=\"n\">most_common</span><span class=\"p\">():</span>\n            <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">cnt</span><span class=\"p\">):</span>\n                <span class=\"n\">ans</span><span class=\"p\">[</span><span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">idx</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"n\">x</span>\n        <span class=\"k\">return</span> <span class=\"n\">ans</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"n\">Q1054</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">check</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">all</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">!=</span> <span class=\"n\">nx</span> <span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">nx</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:])</span>\n\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">add_case</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">assert_true_with</span><span class=\"p\">(</span><span class=\"n\">check</span><span class=\"p\">))</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">add_case</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">assert_true_with</span><span class=\"p\">(</span><span class=\"n\">check</span><span class=\"p\">))</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">add_case</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">assert_true_with</span><span class=\"p\">(</span><span class=\"n\">check</span><span class=\"p\">))</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<ol>\n<li>\u63d0\u4ea4\u89e3\u6cd5</li>\n</ol>\n<p>\u63d0\u4ea4\u7b2c\u4e00\u9898\u7684\u7b2c\u4e09\u4e2a\u89e3\u6cd5</p>\n<pre>$ leezy submit <span class=\"m\">3</span>@1\nIs it OK to submit <span class=\"k\">function</span> <span class=\"s1\">'twoSum'</span>?\n\nclass Solution:\n    def twoSum<span class=\"o\">(</span>self, nums, target<span class=\"o\">)</span>:  \n        <span class=\"nv\">hash_table</span> <span class=\"o\">=</span> <span class=\"o\">{}</span>\n        <span class=\"k\">for</span> i, x in enumerate<span class=\"o\">(</span>nums<span class=\"o\">)</span>: \n            <span class=\"nv\">another</span> <span class=\"o\">=</span> target - x\n            <span class=\"k\">if</span> x in hash_table:\n                <span class=\"k\">return</span> <span class=\"o\">[</span>hash_table<span class=\"o\">[</span>x<span class=\"o\">]</span>, i<span class=\"o\">]</span>\n            <span class=\"k\">else</span>:\n                hash_table<span class=\"o\">[</span>another<span class=\"o\">]</span> <span class=\"o\">=</span> i\n\n&gt; <span class=\"o\">[</span>Yes/No<span class=\"o\">]</span>? y\n----------------Accepted!----------------\n  <span class=\"nb\">time</span> used <span class=\"p\">&amp;</span> rank: <span class=\"m\">40</span> ms faster than <span class=\"m\">93</span>.07%\nmemory used <span class=\"p\">&amp;</span> rank: <span class=\"m\">14</span>.9 MB less than <span class=\"m\">6</span>.25%\n\nmore helpful links:\n    https://leetcode-cn.com/submissions/detail/55171676\n    https://leetcode.com/problems/two-sum/discuss/\n</pre>\n<h2>Why leezy?</h2>\n<p>leezy\u540d\u5b57\u6765\u81ea\u4e8eleetcode\u548clazy\u7684\u7ec4\u5408\u3002\u61d2\u60f0\u5c31\u662f\u751f\u4ea7\u529b\u3002</p>\n<p>\u5982\u679c\u4f60\u6709\u4ee5\u4e0b\u6807\u7b7e\u6240\u63cf\u8ff0\u7684\u503e\u5411\uff0cleezy\u53ef\u80fd\u4f1a\u7ed9\u4f60\u4e00\u4e9b\u53c2\u8003\uff1a</p>\n<p>\u3010\u7b2c\u4e00\u904d\u5237Leetcode\u3011\u3010\u4f7f\u7528\u672c\u5730\u7f16\u8f91\u5668\u3011\u3010\u613f\u610f\u5c1d\u8bd5\u4e00\u9898\u591a\u89e3\u3011\u3010\u5c11\u4e9b\u91cd\u590dprint\u3001\u6d4b\u8bd5\u7528\u4f8b\u3011</p>\n<p>\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u95ee\u9898\u8fdb\u4e00\u6b65\u4e86\u89e3\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528leezy</p>\n<ul>\n<li>\n<p>\u4e3a\u4ec0\u4e48\u4e0d\u5728\u7ebf\u5237\u9898\uff1f</p>\n<p>\u9996\u5148\uff0c\u56e0\u4e3a\u662f\u7b2c\u4e00\u6b21\u505a\u9898\uff0c\u5e0c\u671b\u628a\u91cd\u70b9\u653e\u5728\u89e3\u9898\u672c\u8eab\uff0c\u73af\u5883\u5c31\u4f7f\u7528\u81ea\u5df1\u4e60\u60ef\u7684\u5c31\u597d\u3002</p>\n<p>\u5176\u6b21\uff0c\u5728\u7ebfrun code\u7684\u901f\u5ea6\u4e0d\u7a33\u5b9a\uff0c\u4e0d\u9002\u5408\u521d\u671f\u7684debug\u3002</p>\n<p>\u6700\u540e\uff0c\u5728\u672c\u5730\u8bb0\u5f55\u89e3\u6cd5\uff0c\u7ba1\u7406\u8d77\u6765\u66f4\u76f4\u63a5\uff0c\u79bb\u7ebf\u4e5f\u53ef\u4ee5\u968f\u65f6\u641c\u7d22\u590d\u4e60\u3002</p>\n<p>\u5982\u679c\u662f\u7b2cn\u904d\u5237\u9898\u4e86\uff0c\u76f4\u63a5\u4e0aweb\u66f4\u65b9\u4fbf\u3002</p>\n</li>\n<li>\n<p>leezy\u7684\u6838\u5fc3\u662f\u4ec0\u4e48\uff1f</p>\n<p>\u5c11\u5199print\uff0c\u5c11\u5199\u91cd\u590d\u6d4b\u8bd5\u7528\u4f8b\u3002\u548c\u4e0a\u9762\u63d0\u5230\u7684\u6807\u7b7e\u6240\u6697\u793a\u7684\u90a3\u6837\uff0c\u505a\u9898\u5927\u6982\u7387\u4e0d\u80fd\u4e00\u6b21\u6210\u529f\uff0c\u9700\u8981\u5728\u672c\u5730\u7528\u81ea\u5df1\u7684\u6d4b\u8bd5\u7528\u4f8b\u53cd\u590d\u8fd0\u884c\uff0c\u6253\u5370\u7ed3\u679c\uff0c\u4fee\u6539\u3002\u5f53\u4f7f\u7528\u591a\u4e2a\u89e3\u6cd5\u65f6\uff0c\u53c8\u9700\u8981\u91cd\u590d\u8fd9\u4e9b\u5de5\u4f5c\u3002\u6240\u4ee5\u4e00\u6b21\u6027\u5199\u5b8c\u8fd9\u4e9b\u91cd\u590d\u7684print\u3001\u6d4b\u8bd5\u7528\u4f8b\u5c31\u662fleezy\u6700\u5e73\u5e38\u4e14\u7b80\u5355\u7684\u76ee\u7684</p>\n</li>\n<li>\n<p>\u548c\u5176\u4ed6\u5237\u9898\u5de5\u5177\u6709\u4ec0\u4e48\u533a\u522b\uff1f</p>\n<p>\u5176\u4ed6\u7684\u5237\u9898\u5de5\u5177\uff0c\u5178\u578b\u7684\u6709\u57fa\u4e8eCLI\u7684<a href=\"https://github.com/skygragon/leetcode-cli\" rel=\"nofollow\">leetcode-cli</a>, \u57fa\u4e8eVSCode\u7684<a href=\"https://marketplace.visualstudio.com/items?itemName=shengchen.vscode-leetcode\" rel=\"nofollow\">leetcode for vscode</a>(\u4e5f\u57fa\u4e8eleetcode-cli)\uff0c\u90fd\u652f\u6301\u5b8c\u6574\u7684\u5237\u9898\u6d41\u7a0b\uff1a\u7528\u6237\u767b\u5f55\u3001\u9898\u76ee\u62c9\u53d6\u3001\u7f16\u5199\u3001\u6d4b\u8bd5\u3001\u63d0\u4ea4\u3001\u67e5\u770b\u7edf\u8ba1\u6570\u636e\u3002\u672c\u8d28\u662f\u628a\u7f51\u9875\u7248\u7684\u529f\u80fd\u5728\u7528\u53e6\u4e00\u5957\u63a5\u53e3\u8fdb\u884c\u5b9e\u73b0\u3002</p>\n<p>leezy\u867d\u7136\u4e5f\u53ef\u4ee5\u767b\u5f55\u3001\u62c9\u53d6\u3001\u6d4b\u8bd5\u4ee5\u53ca\u63d0\u4ea4\uff0c\u4f46\u76f8\u6bd4\u4e0a\u8ff0\u5de5\u5177\uff0cleezy\u5bf9\u9898\u76ee\u62c9\u53d6\u540e\uff0c<strong>\u6a21\u677f\u6587\u4ef6\u4e0d\u518d\u548c\u7f51\u9875\u4e0a\u63d0\u4f9b\u7684\u6a21\u677f\u4e00\u81f4\uff0c\u66f4\u65b9\u4fbf\u5b9e\u73b0\u4e00\u9898\u591a\u89e3\u7684\u672c\u5730\u8c03\u8bd5</strong>\u3002</p>\n</li>\n</ul>\n<h2>More things</h2>\n<h3>\u547d\u4ee4\u884c</h3>\n<p>\u4f7f\u7528<code>leezy [command]</code>\u5b8c\u6210\u62c9\u53d6\u9898\u76ee\u53ca\u8bbe\u7f6e\u76f8\u5173\u64cd\u4f5c</p>\n<pre><code>usage: leezy [options] COMMAND\n\nManage your Python solutions better\n\noptional arguments:\n  -h, --help     show this help message and exit\n  -V, --version  show program's version number and exit\n  --zone ZONE    'cn' or 'us', default is 'cn'\n  --dir DIR      assign a temporary workdir for this session\n  -v             verbose, use multiple -vv... to show more log\n\nCOMMANDS:\n  use 'leezy &lt;COMMAND&gt; -h' to see more\n\n  -\u2b50-\n    show         show basic info of problems\n    pull         pull problems to local files\n    run          run your solutions, see outputs or test them\n    submit       submit your solution to leetcode\n    plot         show a heatmap of your all accepted solutions\n    config       manage global configs\n</code></pre>\n<p>\u5176\u4e2dconfig\u652f\u6301git\u98ce\u683c\u7684\u5c5e\u6027\u914d\u7f6e\uff0c\u76ee\u524d\u7684\u53ef\u914d\u7f6e\u9879\u4e3a\uff1a</p>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>description</th>\n<th>default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>table.max_col_width</td>\n<td>\u8868\u683c\u5217\u7684\u6700\u5927\u5bbd\u5ea6</td>\n<td>40\u5b57\u7b26</td>\n</tr>\n<tr>\n<td>table.max_content_length</td>\n<td>\u6bcf\u4e2a\u5355\u5143\u683c\u652f\u6301\u7684\u6700\u957f\u5185\u5bb9\u957f\u5ea6\uff0c\u8d85\u8fc7\u90e8\u5206\u5c06\u88ab\u622a\u65ad(-1\u8868\u793a\u4e0d\u622a\u65ad)</td>\n<td>100\u5b57\u7b26</td>\n</tr>\n<tr>\n<td>core.workdir</td>\n<td>\u5237\u9898\u76ee\u5f55\uff0c\u6bcf\u6b21pull\u3001run\u90fd\u5c06\u57fa\u7840\u8be5\u76ee\u5f55</td>\n<td>\u5f53\u524d\u76ee\u5f55</td>\n</tr>\n<tr>\n<td>core.zone</td>\n<td>\u5237\u9898\u7f51\u7ad9\u7248\u672c\uff0c\u4e2d\u56fd\u533a\u8fd8\u662f\u7f8e\u533a</td>\n<td>cn</td>\n</tr>\n<tr>\n<td>log.level</td>\n<td>\u65e5\u5fd7\u7b49\u7ea7</td>\n<td>warning</td>\n</tr></tbody></table>\n<hr>\n<h3>\u8f85\u52a9\u7c7b</h3>\n<p>\u9488\u5bf9\u4f7f\u7528\u94fe\u8868\u6216\u8005\u6811\u7ed3\u6784\u7684\u9898\u76ee\uff0c\u4e5f\u63d0\u4f9b\u4e86\u548c\u7f51\u9875\u7248\u7c7b\u4f3c\u7684\u57fa\u7840\u7c7b\u578b\uff0c\u521d\u59cb\u5316\u7684\u53c2\u6570\u4e5f\u548c\u7f51\u9875\u7248\u4fdd\u6301\u4e00\u81f4\u3002</p>\n<p>\u4ece<code>leezy.assists</code>\u4e2d\u5bfc\u5165</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">leezy.assists</span> <span class=\"kn\">import</span> <span class=\"n\">TreeNode</span><span class=\"p\">,</span> <span class=\"n\">ListNode</span>\n\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">TreeNode</span><span class=\"o\">.</span><span class=\"n\">make_tree</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">))</span> <span class=\"c1\"># &lt;class 'leezy.assists.TreeNode'&gt;</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>       <span class=\"c1\"># Tree(1-2-3-4-5-None-6)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">left</span><span class=\"p\">)</span>  <span class=\"c1\"># Tree(2-4-5)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">right</span><span class=\"p\">)</span> <span class=\"c1\"># Tree(3-None-6)</span>\n\n\n<span class=\"n\">l</span> <span class=\"o\">=</span> <span class=\"n\">ListNode</span><span class=\"o\">.</span><span class=\"n\">make_linked_list</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">))</span> <span class=\"c1\"># &lt;class 'leezy.assists.ListNode'&gt;</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">)</span>       <span class=\"c1\"># 1-&gt;2-&gt;3-&gt;4-&gt;5</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">)</span>  <span class=\"c1\"># 2-&gt;3-&gt;4-&gt;5</span>\n</pre>\n<p>\u73b0\u5728\u652f\u6301\u7684\u7c7b\u578b:</p>\n<ul>\n<li>TreeNode</li>\n<li>ListNode</li>\n</ul>\n<p>\u9664\u4e86\u624b\u52a8\u4f7f\u7528<code>make_tree</code>, <code>make_linkedlist</code>\u6784\u9020\uff0c\u8fd8\u63d0\u4f9b\u4e86TreeContext\uff0cLinkedListContext\uff0c\u5c06<code>add_case</code>\u4f20\u5165\u7684\u96c6\u5408\u7c7b\u578b\u53c2\u6570\u81ea\u52a8\u6784\u9020\u4e3a\u6811\u6216\u94fe\u8868\u3002\u7701\u5f97\u6bcf\u6b21\u6dfb\u52a0\u6d4b\u8bd5\u7528\u4f8b\u90fd\u8981\u5199<code>make_*</code>\u51fd\u6570</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">leezy</span> <span class=\"kn\">import</span> <span class=\"n\">Solution</span><span class=\"p\">,</span> <span class=\"n\">solution</span>\n<span class=\"kn\">from</span> <span class=\"nn\">leezy.assists</span> <span class=\"kn\">import</span> <span class=\"n\">TreeContext</span> <span class=\"c1\"># \u5bfc\u5165TreeContext</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Q700</span><span class=\"p\">(</span><span class=\"n\">Solution</span><span class=\"p\">):</span>\n    <span class=\"nd\">@solution</span>\n    <span class=\"k\">def</span> <span class=\"nf\">searchBST</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">root</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n        <span class=\"k\">if</span> <span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">val</span> <span class=\"o\">&gt;</span> <span class=\"n\">val</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">searchBST</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">left</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">val</span> <span class=\"o\">&lt;</span> <span class=\"n\">val</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">searchBST</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">right</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">root</span>\n\n    <span class=\"nd\">@solution</span>\n    <span class=\"k\">def</span> <span class=\"nf\">search</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"k\">while</span> <span class=\"n\">root</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">val</span> <span class=\"o\">&gt;</span> <span class=\"n\">val</span><span class=\"p\">:</span>\n                <span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">left</span>\n            <span class=\"k\">elif</span> <span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">val</span> <span class=\"o\">&lt;</span> <span class=\"n\">val</span><span class=\"p\">:</span>\n                <span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">right</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">root</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"n\">Q700</span><span class=\"p\">()</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">set_context</span><span class=\"p\">(</span><span class=\"n\">TreeContext</span><span class=\"p\">)</span>  <span class=\"c1\"># \u8bbe\u7f6eTreeContex</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">add_case</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">case</span><span class=\"p\">([</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"mi\">2</span><span class=\"p\">))</span> <span class=\"c1\"># \u8fd9\u91cc\u4f20\u5165\u7684\u5217\u8868\u81ea\u52a8\u4f1a\u88ab\u8f6c\u5316\u4e3aTree</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>\u4e3a\u4e86\u8fdb\u4e00\u6b65\u7b80\u5316\uff0c<code>pull</code>\u547d\u4ee4\u652f\u6301--context\u9009\u9879</p>\n<pre><code>$ leezy pull --context tree 700 701\n</code></pre>\n<p>\u8fd9\u6837700\u3001701\u9898\u7684\u6e90\u6587\u4ef6\u81ea\u52a8\u6dfb\u52a0\u597dTreeContext</p>\n<hr>\n<p>\u66f4\u591a\u529f\u80fd\u548c\u9650\u5236\u8bf4\u660e\uff0c\u5f85\u66f4\u65b0</p>\n\n          </div>"}, "last_serial": 7059407, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "4c13b1d95ece046637842c6a4275ffd6", "sha256": "3de30d8cd04df3e04eb2edb081999efd32f4f03eb84956e1c9f5eca98a29bcdf"}, "downloads": -1, "filename": "leezy-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4c13b1d95ece046637842c6a4275ffd6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 22314, "upload_time": "2020-01-08T02:55:43", "upload_time_iso_8601": "2020-01-08T02:55:43.411378Z", "url": "https://files.pythonhosted.org/packages/3c/6f/5a6fa7893cab8ab9949418acc631bbe73211edb89e87e53b9daa5b4e096f/leezy-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "257d06e8877592036e60eb716e4f3e5d", "sha256": "8f8c3cc231a16b1dd5baf82bad8feaddb9c481d6533c45ae5652c55f630abf92"}, "downloads": -1, "filename": "leezy-0.3.0.tar.gz", "has_sig": false, "md5_digest": "257d06e8877592036e60eb716e4f3e5d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19211, "upload_time": "2020-01-08T02:55:46", "upload_time_iso_8601": "2020-01-08T02:55:46.178041Z", "url": "https://files.pythonhosted.org/packages/31/8c/fab3307eb8a0b4b8a7d4eb990c55dff477c18b85513e7601b71e16602b48/leezy-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "ad8104b654c21dfef82eee90d1a8d6df", "sha256": "83834ed4b2a00b24f3426e2f42975d919dc87ad2eac20999f61519e77bef1928"}, "downloads": -1, "filename": "leezy-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ad8104b654c21dfef82eee90d1a8d6df", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 22318, "upload_time": "2020-01-08T03:17:44", "upload_time_iso_8601": "2020-01-08T03:17:44.436656Z", "url": "https://files.pythonhosted.org/packages/26/57/4e75db09f2c6404952a1eed7189d5c4f8b947b455ab1c161825ab892cf18/leezy-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87b8556cb668c28b2f42e7002efbb614", "sha256": "9793392ae65f2cec014004e694d92cb125dc3c7229611426169fb7ac455a0e98"}, "downloads": -1, "filename": "leezy-0.3.1.tar.gz", "has_sig": false, "md5_digest": "87b8556cb668c28b2f42e7002efbb614", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19222, "upload_time": "2020-01-08T03:17:46", "upload_time_iso_8601": "2020-01-08T03:17:46.445255Z", "url": "https://files.pythonhosted.org/packages/51/f4/419812efaad31fd131990828039804c5cb53b851287a3bd6cd003e37dc66/leezy-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "1db09d02c296744508e26480ace03905", "sha256": "8e20a3e7c14b893950f36bf20ced86a4836a840e8811d44f52b1e46a2a8aa8dc"}, "downloads": -1, "filename": "leezy-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1db09d02c296744508e26480ace03905", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 21609, "upload_time": "2020-01-17T09:06:42", "upload_time_iso_8601": "2020-01-17T09:06:42.570999Z", "url": "https://files.pythonhosted.org/packages/bc/8b/192e47fab48ec18c7ce59a5f0845c1538b728e6d5f95158831478fc9f22a/leezy-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4312dcc1f638b0d1e6c4c3703e51f5c1", "sha256": "1bd30bed90bd6c29ee9c1a5aa48478dd61588c64530ac1e44d83b8d9c5b8bec9"}, "downloads": -1, "filename": "leezy-0.3.2.tar.gz", "has_sig": false, "md5_digest": "4312dcc1f638b0d1e6c4c3703e51f5c1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19651, "upload_time": "2020-01-17T09:06:44", "upload_time_iso_8601": "2020-01-17T09:06:44.043099Z", "url": "https://files.pythonhosted.org/packages/cd/e7/fc20e94062e453e310d8c56f19f568b44f5afe654ed727828c619a9c295b/leezy-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "ae5f13749d551bdb7da6b0994e480b13", "sha256": "c27454b89873942f8ab654925c63a8347d5a0e657889204e2918215f3ccf2cfe"}, "downloads": -1, "filename": "leezy-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ae5f13749d551bdb7da6b0994e480b13", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 22462, "upload_time": "2020-01-25T08:49:06", "upload_time_iso_8601": "2020-01-25T08:49:06.346589Z", "url": "https://files.pythonhosted.org/packages/70/82/a6ac11f1495dacf82f395a772e405915dc822f1c065143352ce85237a89f/leezy-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f1c8551c3f8d2b5d490f64cd4e63c06", "sha256": "e8e77106ee4b34c1a89c3fcfccae758a6f1a3379e6a05fc7faab1a161b83bf57"}, "downloads": -1, "filename": "leezy-0.3.3.tar.gz", "has_sig": false, "md5_digest": "9f1c8551c3f8d2b5d490f64cd4e63c06", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20329, "upload_time": "2020-01-25T08:49:08", "upload_time_iso_8601": "2020-01-25T08:49:08.186307Z", "url": "https://files.pythonhosted.org/packages/52/e8/e03eda0eb3eaa176c7eb623f8832a53ba489631a8cc0ba347be8916eb73f/leezy-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "5bd8736bf1c0d72922e6551d2147cfe9", "sha256": "acef29be43485a6bc84ff14347a7a256c5bcab9721b04f90383b27c239b5c0bb"}, "downloads": -1, "filename": "leezy-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5bd8736bf1c0d72922e6551d2147cfe9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 22462, "upload_time": "2020-02-19T06:03:26", "upload_time_iso_8601": "2020-02-19T06:03:26.082905Z", "url": "https://files.pythonhosted.org/packages/ef/ce/4f9c3f5111b9f99ab414fca400c92fd6daa9d499b14c9ce83cb7d476c930/leezy-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5370ebbb32842c5b1e78cddf9dfa2ed", "sha256": "4cacdb41595bacf5c0a1f532d2bdcebd876f187a300207879034fb014bb65251"}, "downloads": -1, "filename": "leezy-0.3.4.tar.gz", "has_sig": false, "md5_digest": "f5370ebbb32842c5b1e78cddf9dfa2ed", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20173, "upload_time": "2020-02-19T06:03:27", "upload_time_iso_8601": "2020-02-19T06:03:27.439169Z", "url": "https://files.pythonhosted.org/packages/0c/29/da753f0b0982e0d97d9a4ff67e3723f39abb9ebdaa5150805de8edf5eb3e/leezy-0.3.4.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "6fc6d2f739b6fdf7841984cb1c12fd0e", "sha256": "b755ef52fb8a7dc16dfa98a06902581d34ab4c0a41235f2223e459e6a0bc75c6"}, "downloads": -1, "filename": "leezy-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6fc6d2f739b6fdf7841984cb1c12fd0e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32458, "upload_time": "2020-04-05T09:58:03", "upload_time_iso_8601": "2020-04-05T09:58:03.394211Z", "url": "https://files.pythonhosted.org/packages/a7/28/f1f0db4e7427e8ec0d1d5ee6b61bb6922aa844397fc1aa88116f94ae3ada/leezy-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b0d013cda7fc59a4f18fba1f994b035", "sha256": "95479b065b4f9d54502d07802418a82d78451377b79a0d03558aff51f756a43c"}, "downloads": -1, "filename": "leezy-0.5.2.tar.gz", "has_sig": false, "md5_digest": "1b0d013cda7fc59a4f18fba1f994b035", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 30163, "upload_time": "2020-04-05T09:58:09", "upload_time_iso_8601": "2020-04-05T09:58:09.936587Z", "url": "https://files.pythonhosted.org/packages/cc/9d/291fde44509bdcfe31bb18ef9771b6c172b54174813cadd178f21bfe6d32/leezy-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "271c8a38070347d05b0aefe09aa71e23", "sha256": "93864411f0c373419b4455a1dd35d23bf83db3aba1e5411acf6293a11c3e3504"}, "downloads": -1, "filename": "leezy-0.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "271c8a38070347d05b0aefe09aa71e23", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32595, "upload_time": "2020-04-20T11:32:40", "upload_time_iso_8601": "2020-04-20T11:32:40.476258Z", "url": "https://files.pythonhosted.org/packages/f0/5e/ed02a13aec29a55b142ed5744a7e022c606c3329ca850ef03aabe8048074/leezy-0.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33d484650a700f179468e606be20fd9d", "sha256": "deecf6d75300e34a52311b98ebcc7609b4aef8be5e835dc9991ced701c755156"}, "downloads": -1, "filename": "leezy-0.5.3.tar.gz", "has_sig": false, "md5_digest": "33d484650a700f179468e606be20fd9d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 34152, "upload_time": "2020-04-20T11:32:41", "upload_time_iso_8601": "2020-04-20T11:32:41.676463Z", "url": "https://files.pythonhosted.org/packages/34/73/dab0736ac91187656816ce7efe2b0e52ad9651d92c59834d5baf96d53aa3/leezy-0.5.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "271c8a38070347d05b0aefe09aa71e23", "sha256": "93864411f0c373419b4455a1dd35d23bf83db3aba1e5411acf6293a11c3e3504"}, "downloads": -1, "filename": "leezy-0.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "271c8a38070347d05b0aefe09aa71e23", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32595, "upload_time": "2020-04-20T11:32:40", "upload_time_iso_8601": "2020-04-20T11:32:40.476258Z", "url": "https://files.pythonhosted.org/packages/f0/5e/ed02a13aec29a55b142ed5744a7e022c606c3329ca850ef03aabe8048074/leezy-0.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33d484650a700f179468e606be20fd9d", "sha256": "deecf6d75300e34a52311b98ebcc7609b4aef8be5e835dc9991ced701c755156"}, "downloads": -1, "filename": "leezy-0.5.3.tar.gz", "has_sig": false, "md5_digest": "33d484650a700f179468e606be20fd9d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 34152, "upload_time": "2020-04-20T11:32:41", "upload_time_iso_8601": "2020-04-20T11:32:41.676463Z", "url": "https://files.pythonhosted.org/packages/34/73/dab0736ac91187656816ce7efe2b0e52ad9651d92c59834d5baf96d53aa3/leezy-0.5.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:13 2020"}