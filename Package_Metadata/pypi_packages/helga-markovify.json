{"info": {"author": "Jon Robison", "author_email": "narfman0@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Communications :: Chat :: Internet Relay Chat", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "===============\nhelga-markovify\n===============\n\n.. image:: https://badge.fury.io/py/helga-markovify.png\n    :target: https://badge.fury.io/py/helga-markovify\n\n.. image:: https://travis-ci.org/narfman0/helga-markovify.png?branch=master\n    :target: https://travis-ci.org/narfman0/helga-markovify\n\nIngest corpuses of text and output a sentence generated from markov chains.\nHelga will now listen to your IRC channel and ingest dialog along the way,\nlearning to speak your lingo. You may jump start this with 'logs' ingestion or\nany other ingestion technique.\n\nInstallation\n============\n\nAfter installing and configuring helga, use::\n\n    pip install helga-markovify\n\nAdd ``markovify`` to your settings and restart helga. To use twitter timelines,\nyou must also add the following to settings (with your credentials)::\n\n    TWITTER_CONSUMER_KEY = 'asad'\n    TWITTER_CONSUMER_SECRET = 'sdfs'\n    TWITTER_ACCESS_TOKEN = 'fghf'\n    TWITTER_ACCESS_SECRET = 'ghjg'\n\nUsage\n=====\n\nNote: Please use punctuation in your text. This is a tough sticking point in\npractice, but it is important to be able to differentiate sentences.\n\nCommand syntax::\n\n    ingest <topic> <learning_type> <learning_type_source>\n    generate <topic>\n    drop <topic>\n\nArguments\n---------\n\n``topic``: like tagging, so helga can respond in different ways\n\n``learning_type``: how helga is going to ingest. Can be text, a url to raw data,\na url to dpaste, or a twitter account.\n\n``learning_type_source``: the corresponding data e.g. plaintext if learning_type\nis \"text\", a url if \"url\", twitter screen name if \"twitter\", helga_log_reader\narguments for \"logs\" (suggest you go old and use current channel)\n\n\nThe ``ingest`` command teaches the bot about the topic from the referenced\ncorpus. You may teach the bot from any number of sources, it can be twitter or\ntext. Mix and matching is fine.\n\nThe ``generate`` command generates a sentence from the corpus.\n\nThe ``drop`` command drops a particular topic from storage. If a corpus becomes\ncorrupt for whatever reason, a user may drop it and re-ingest data to populate\nit again.\n\nSettings\n--------\n\n``MARKOVIFY_ADD_PUNCTUATION``: If we should add periods after lines. You always\nwant good punctuation for good generated sentences, this is a pretty safe \"True\"\nby default.\n\n``MARKOVIFY_CHANNEL_LISTEN``: Ingest current channel chatter. A bit expensive,\nand possibly not great privacy-wise, but that's where the lol-train arrives.\n\n``MARKOVIFY_CHANNEL_GENERATE``: Regex helga listens to to generate response for\ndefault channel chatter\n\n``MARKOVIFY_TOPIC_DEFAULT``: Default ingestion topic for channel data\n\n``TWITTER_CONSUMER_KEY TWITTER_CONSUMER_SECRET TWITTER_ACCESS_TOKEN TWITTER_ACCESS_SECRET``:\nif using twitter, you'll want these from your configured twitter apps.\n\nExamples\n========\n\nThe following are different ways you may usage helga-markovify. Most are\ndifferent ways to ingest/learn data.\n\nURL\n---\n\n.. code-block::\n\n    !markovify ingest zen url https://hg.python.org/peps/raw-file/tip/pep-0020.txt\n    !markovify generate zen\n    helga> Sparse is better than ugly.\n\nText\n----\n\n.. code-block::\n\n    !markovify ingest hitler text \"Mein Kampf is the best Kampf.\"\n    !markovify ingest hitler text \"Don't be stupid, be a smarty. Come and join the nazi party.\"\n    !markovify ingest hitler text \"Make America hate again.\"\n    !markovify ingest hitler text \"Kampf America is hate nazi smarty. Hate party again filler sentence. America is the best at being terrible.\"\n    !markovify generate hitler\n    helga> Mein Kampf is the best at being terrible.\n\ndpaste\n------\n\n.. code-block::\n\n    !markovify ingest zen dpaste http://dpaste.com/1JF2P4S\n    !markovify generate zen\n    helga> If the implementation is hard to explain, it may be a good idea.\n\nTwitter\n-------\n\n.. code-block::\n\n    !markovify ingest narf twitter narfman0\n    !markovify generate narf\n    helga> You won't believe this one weird trick to get the target populace hooked.\n    !markovify generate narf\n    helga> FOSS: it only takes one highly incentivized dealer to get 4057$ a month doing nothing!\n\nChannel logs\n------------\n\n.. code-block::\n\n    !markovify ingest channel logs --channel #bots --start_date 1999-01-01\n    !markovify generate channel\n    helga> dropbox serving it does ASAP\n\n    helga, thoughts?\n    helga> it could be a crackhead, who wants to haskell bees\n\nDrop corpus\n-----------\n\nIf you have somehow screwed up or broken a corpus, you may drop it completely::\n\n    !markovify drop zen\n\nTODO\n====\n\n* Travis\n* Talk about specific topics\n* Keep history aka conversations\n* Weighted round-robin type conversation\n\nLicense\n=======\n\nCopyright (c) 2016 Jon Robison\n\nSee included LICENSE for licensing information\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/narfman0/helga-markovify", "keywords": "irc bot markov", "license": "LICENSE", "maintainer": null, "maintainer_email": null, "name": "helga-markovify", "package_url": "https://pypi.org/project/helga-markovify/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/helga-markovify/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/narfman0/helga-markovify"}, "release_url": "https://pypi.org/project/helga-markovify/1.1.1/", "requires_dist": null, "requires_python": null, "summary": "Ingest corpuses of text and output a sentence generated from markov chains", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/helga-markovify\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/helga-markovify.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8972e2c131b2e10e48cc4136737a53f01081fe8f/68747470733a2f2f62616467652e667572792e696f2f70792f68656c67612d6d61726b6f766966792e706e67\"></a>\n<a href=\"https://travis-ci.org/narfman0/helga-markovify\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/narfman0/helga-markovify.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f79c9a7825e2b5547fec3f20bbbe6ab15726042/68747470733a2f2f7472617669732d63692e6f72672f6e6172666d616e302f68656c67612d6d61726b6f766966792e706e673f6272616e63683d6d6173746572\"></a>\n<p>Ingest corpuses of text and output a sentence generated from markov chains.\nHelga will now listen to your IRC channel and ingest dialog along the way,\nlearning to speak your lingo. You may jump start this with \u2018logs\u2019 ingestion or\nany other ingestion technique.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>After installing and configuring helga, use:</p>\n<pre>pip install helga-markovify\n</pre>\n<p>Add <tt>markovify</tt> to your settings and restart helga. To use twitter timelines,\nyou must also add the following to settings (with your credentials):</p>\n<pre>TWITTER_CONSUMER_KEY = 'asad'\nTWITTER_CONSUMER_SECRET = 'sdfs'\nTWITTER_ACCESS_TOKEN = 'fghf'\nTWITTER_ACCESS_SECRET = 'ghjg'\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Note: Please use punctuation in your text. This is a tough sticking point in\npractice, but it is important to be able to differentiate sentences.</p>\n<p>Command syntax:</p>\n<pre>ingest &lt;topic&gt; &lt;learning_type&gt; &lt;learning_type_source&gt;\ngenerate &lt;topic&gt;\ndrop &lt;topic&gt;\n</pre>\n<div id=\"arguments\">\n<h3>Arguments</h3>\n<p><tt>topic</tt>: like tagging, so helga can respond in different ways</p>\n<p><tt>learning_type</tt>: how helga is going to ingest. Can be text, a url to raw data,\na url to dpaste, or a twitter account.</p>\n<p><tt>learning_type_source</tt>: the corresponding data e.g. plaintext if learning_type\nis \u201ctext\u201d, a url if \u201curl\u201d, twitter screen name if \u201ctwitter\u201d, helga_log_reader\narguments for \u201clogs\u201d (suggest you go old and use current channel)</p>\n<p>The <tt>ingest</tt> command teaches the bot about the topic from the referenced\ncorpus. You may teach the bot from any number of sources, it can be twitter or\ntext. Mix and matching is fine.</p>\n<p>The <tt>generate</tt> command generates a sentence from the corpus.</p>\n<p>The <tt>drop</tt> command drops a particular topic from storage. If a corpus becomes\ncorrupt for whatever reason, a user may drop it and re-ingest data to populate\nit again.</p>\n</div>\n<div id=\"settings\">\n<h3>Settings</h3>\n<p><tt>MARKOVIFY_ADD_PUNCTUATION</tt>: If we should add periods after lines. You always\nwant good punctuation for good generated sentences, this is a pretty safe \u201cTrue\u201d\nby default.</p>\n<p><tt>MARKOVIFY_CHANNEL_LISTEN</tt>: Ingest current channel chatter. A bit expensive,\nand possibly not great privacy-wise, but that\u2019s where the lol-train arrives.</p>\n<p><tt>MARKOVIFY_CHANNEL_GENERATE</tt>: Regex helga listens to to generate response for\ndefault channel chatter</p>\n<p><tt>MARKOVIFY_TOPIC_DEFAULT</tt>: Default ingestion topic for channel data</p>\n<p><tt>TWITTER_CONSUMER_KEY TWITTER_CONSUMER_SECRET TWITTER_ACCESS_TOKEN TWITTER_ACCESS_SECRET</tt>:\nif using twitter, you\u2019ll want these from your configured twitter apps.</p>\n</div>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>The following are different ways you may usage helga-markovify. Most are\ndifferent ways to ingest/learn data.</p>\n<div id=\"url\">\n<h3>URL</h3>\n<pre>!markovify ingest zen url https://hg.python.org/peps/raw-file/tip/pep-0020.txt\n!markovify generate zen\nhelga&gt; Sparse is better than ugly.\n</pre>\n</div>\n<div id=\"text\">\n<h3>Text</h3>\n<pre>!markovify ingest hitler text \"Mein Kampf is the best Kampf.\"\n!markovify ingest hitler text \"Don't be stupid, be a smarty. Come and join the nazi party.\"\n!markovify ingest hitler text \"Make America hate again.\"\n!markovify ingest hitler text \"Kampf America is hate nazi smarty. Hate party again filler sentence. America is the best at being terrible.\"\n!markovify generate hitler\nhelga&gt; Mein Kampf is the best at being terrible.\n</pre>\n</div>\n<div id=\"dpaste\">\n<h3>dpaste</h3>\n<pre>!markovify ingest zen dpaste http://dpaste.com/1JF2P4S\n!markovify generate zen\nhelga&gt; If the implementation is hard to explain, it may be a good idea.\n</pre>\n</div>\n<div id=\"twitter\">\n<h3>Twitter</h3>\n<pre>!markovify ingest narf twitter narfman0\n!markovify generate narf\nhelga&gt; You won't believe this one weird trick to get the target populace hooked.\n!markovify generate narf\nhelga&gt; FOSS: it only takes one highly incentivized dealer to get 4057$ a month doing nothing!\n</pre>\n</div>\n<div id=\"channel-logs\">\n<h3>Channel logs</h3>\n<pre>!markovify ingest channel logs --channel #bots --start_date 1999-01-01\n!markovify generate channel\nhelga&gt; dropbox serving it does ASAP\n\nhelga, thoughts?\nhelga&gt; it could be a crackhead, who wants to haskell bees\n</pre>\n</div>\n<div id=\"drop-corpus\">\n<h3>Drop corpus</h3>\n<p>If you have somehow screwed up or broken a corpus, you may drop it completely:</p>\n<pre>!markovify drop zen\n</pre>\n</div>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Travis</li>\n<li>Talk about specific topics</li>\n<li>Keep history aka conversations</li>\n<li>Weighted round-robin type conversation</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright (c) 2016 Jon Robison</p>\n<p>See included LICENSE for licensing information</p>\n</div>\n\n          </div>"}, "last_serial": 2519148, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "2f5116f81a12e75d1b1fcc1971246a0a", "sha256": "635c1fe0ded07dad543fe8749ce351c0f225c39174c8f02b3de872667682b5cf"}, "downloads": -1, "filename": "helga-markovify-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2f5116f81a12e75d1b1fcc1971246a0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16063, "upload_time": "2016-03-21T04:29:31", "upload_time_iso_8601": "2016-03-21T04:29:31.633059Z", "url": "https://files.pythonhosted.org/packages/48/32/82570d0db4a57538d382ca7a18049154e7f5566bc609fee3989346037f3f/helga-markovify-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "761f9bd684b897b19cf0db5007ab4346", "sha256": "dc8aec3c974f82d781ded62faa56bf3adcdcc64aca57feb19eb8ebf02a84087e"}, "downloads": -1, "filename": "helga-markovify-1.0.1.tar.gz", "has_sig": false, "md5_digest": "761f9bd684b897b19cf0db5007ab4346", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16068, "upload_time": "2016-03-21T04:43:28", "upload_time_iso_8601": "2016-03-21T04:43:28.423792Z", "url": "https://files.pythonhosted.org/packages/55/48/1b9412f6390cc8b01c815e42f5c28d9cd990c725fcda9b74bbdb324a6f88/helga-markovify-1.0.1.tar.gz", "yanked": false}], "1.0.10": [{"comment_text": "", "digests": {"md5": "d8f3e88c8c3609c3d0e63e8829d5cc44", "sha256": "24b64ac585fa6fbf4bd6f2737bb23c8df3e6a373dffde9b4e5324d90ef840231"}, "downloads": -1, "filename": "helga-markovify-1.0.10.tar.gz", "has_sig": false, "md5_digest": "d8f3e88c8c3609c3d0e63e8829d5cc44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34524, "upload_time": "2016-03-24T02:28:04", "upload_time_iso_8601": "2016-03-24T02:28:04.294962Z", "url": "https://files.pythonhosted.org/packages/7f/52/42741c0c34beafe588f2288efeb7b831a73abaff11ca5c637f772c15a8a5/helga-markovify-1.0.10.tar.gz", "yanked": false}], "1.0.11": [{"comment_text": "", "digests": {"md5": "348f433d2d2a375e8a752df21baaf5b1", "sha256": "4bf6412fd57749f407fcd5fa17da4170f116a23e66c9e8eccbb972a023efea12"}, "downloads": -1, "filename": "helga-markovify-1.0.11.tar.gz", "has_sig": false, "md5_digest": "348f433d2d2a375e8a752df21baaf5b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35125, "upload_time": "2016-03-24T05:20:51", "upload_time_iso_8601": "2016-03-24T05:20:51.973235Z", "url": "https://files.pythonhosted.org/packages/b2/f5/957233ef0826c71b73ab52520b732418f48c410440e5f2ab87ac2f8c22ce/helga-markovify-1.0.11.tar.gz", "yanked": false}], "1.0.12": [{"comment_text": "", "digests": {"md5": "324bbb8fa54e1929b5b7ab93a151f6f0", "sha256": "1eee246dd3f083e4af7bfea763a0f93984e64d12631a285844d547ca929319be"}, "downloads": -1, "filename": "helga-markovify-1.0.12.tar.gz", "has_sig": false, "md5_digest": "324bbb8fa54e1929b5b7ab93a151f6f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55965, "upload_time": "2016-12-11T04:55:38", "upload_time_iso_8601": "2016-12-11T04:55:38.394824Z", "url": "https://files.pythonhosted.org/packages/fe/ff/dbd1d9fea27b2e34b385e917d3be07ce0380409cb8a7c4dc13ef2105d0b5/helga-markovify-1.0.12.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "cda93181b0666577cc7a90bc6e2b478d", "sha256": "a96b440561c5eec7a73521f4b50d45f37bac8f543a9e320a2d7340321c80c135"}, "downloads": -1, "filename": "helga-markovify-1.0.2.tar.gz", "has_sig": false, "md5_digest": "cda93181b0666577cc7a90bc6e2b478d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16075, "upload_time": "2016-03-21T04:46:35", "upload_time_iso_8601": "2016-03-21T04:46:35.453527Z", "url": "https://files.pythonhosted.org/packages/89/26/ce9981cd588957a578238368d0262576c79342302589f9d9139c3cbf5f54/helga-markovify-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "675ef56da46d9fe56def7310a2a2be47", "sha256": "1365c6b7179fa8c2956e5ff9b0a36e888f9bef0b855c34d82facdc83ace7491e"}, "downloads": -1, "filename": "helga-markovify-1.0.3.tar.gz", "has_sig": false, "md5_digest": "675ef56da46d9fe56def7310a2a2be47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16098, "upload_time": "2016-03-21T04:48:30", "upload_time_iso_8601": "2016-03-21T04:48:30.915946Z", "url": "https://files.pythonhosted.org/packages/e8/f0/0a15978147aeaa9740db4ba6916a75388edb8651020f21a3ff6e06184bd6/helga-markovify-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "c56345a501ce65c48ffddcceeb717c7e", "sha256": "c83640c22d59e9673d326809ca9269b22211a8d642d3d2a0fe992d339242d5a3"}, "downloads": -1, "filename": "helga-markovify-1.0.4.tar.gz", "has_sig": false, "md5_digest": "c56345a501ce65c48ffddcceeb717c7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16100, "upload_time": "2016-03-21T04:50:53", "upload_time_iso_8601": "2016-03-21T04:50:53.413586Z", "url": "https://files.pythonhosted.org/packages/74/3e/4779a3c1273867cc83447adb656c5c38cc0291703f3b4454e76537716a8c/helga-markovify-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "8aa221c7dc262a253d15a3e3e81aabf7", "sha256": "c9d57ea8d9f4ea4e01f90bc5ab3c07f47df1d5e7f84df3bf5f6ca7616452b56f"}, "downloads": -1, "filename": "helga-markovify-1.0.5.tar.gz", "has_sig": false, "md5_digest": "8aa221c7dc262a253d15a3e3e81aabf7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48225, "upload_time": "2016-03-21T05:05:07", "upload_time_iso_8601": "2016-03-21T05:05:07.946947Z", "url": "https://files.pythonhosted.org/packages/8d/6a/29267cfe1c68afcc9d72c2ef59cb017d1007e73f797ae7026a2952ffde28/helga-markovify-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "0f87416174fcc4e0680116afa7eada24", "sha256": "db210b1f36559834c8f548d4602651a8b87aef2070c77a917a46e6d83db53fef"}, "downloads": -1, "filename": "helga-markovify-1.0.6.tar.gz", "has_sig": false, "md5_digest": "0f87416174fcc4e0680116afa7eada24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48217, "upload_time": "2016-03-22T02:14:14", "upload_time_iso_8601": "2016-03-22T02:14:14.098461Z", "url": "https://files.pythonhosted.org/packages/7a/5f/98f9d97c3eda95d865ef5a29bef68985d6cf33910c7e1e456d2992d9b33f/helga-markovify-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "3c4c96091651653bde6e925cd1e38d5b", "sha256": "3a72efa52c21a47bd30df8382422acddd202722fa4d13946418101b6004660dd"}, "downloads": -1, "filename": "helga-markovify-1.0.7.tar.gz", "has_sig": false, "md5_digest": "3c4c96091651653bde6e925cd1e38d5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49077, "upload_time": "2016-03-22T04:15:07", "upload_time_iso_8601": "2016-03-22T04:15:07.868397Z", "url": "https://files.pythonhosted.org/packages/42/47/23fda5a6c85f6bb9370e8955af6742aff5947c62d41a1a2942aaa0efccdc/helga-markovify-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "9c87b0d1a09f08bdd087d9fece3aa6a8", "sha256": "8713ca5bba236ab421ed3560b39683122dd1580877f46a50d34853650ce35ce1"}, "downloads": -1, "filename": "helga-markovify-1.0.8.tar.gz", "has_sig": false, "md5_digest": "9c87b0d1a09f08bdd087d9fece3aa6a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49202, "upload_time": "2016-03-22T04:18:29", "upload_time_iso_8601": "2016-03-22T04:18:29.910411Z", "url": "https://files.pythonhosted.org/packages/a9/65/7f76d0290c9986669b6e003861804717deade30dacb110998b97da61b63a/helga-markovify-1.0.8.tar.gz", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "abe8a9a731429ae7b75d5ff94d856e59", "sha256": "37bd8cfc02dd7c1363cd7db898743c02362406a61a672f97f796808fe22b448d"}, "downloads": -1, "filename": "helga-markovify-1.0.9.tar.gz", "has_sig": false, "md5_digest": "abe8a9a731429ae7b75d5ff94d856e59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67523, "upload_time": "2016-03-24T01:10:08", "upload_time_iso_8601": "2016-03-24T01:10:08.991165Z", "url": "https://files.pythonhosted.org/packages/76/cb/efe568754913c9e12f07f4dd65d9a5335b3af3202e10cd1c5ee4faa5062a/helga-markovify-1.0.9.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "18be9c620139f2ca00b2276e09beb96d", "sha256": "778783d5e75001c653665b651f747ed4ad9b9debf84ced9183b863e2c576eea8"}, "downloads": -1, "filename": "helga_markovify-1.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "18be9c620139f2ca00b2276e09beb96d", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7709, "upload_time": "2016-12-11T05:11:14", "upload_time_iso_8601": "2016-12-11T05:11:14.183629Z", "url": "https://files.pythonhosted.org/packages/0e/fe/03a12d1fd9d54190ec072dff05e9a56ff65df5f974b48610f57973068589/helga_markovify-1.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3edb775922e1084cfd35dafc1ae96f58", "sha256": "0f39067915981bbc3adfe3240d0612e956b14f1ca6d0dbe65580cd5564c0d19c"}, "downloads": -1, "filename": "helga-markovify-1.1.0.tar.gz", "has_sig": false, "md5_digest": "3edb775922e1084cfd35dafc1ae96f58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55828, "upload_time": "2016-12-11T05:11:11", "upload_time_iso_8601": "2016-12-11T05:11:11.092606Z", "url": "https://files.pythonhosted.org/packages/e4/6d/f6f0621afcdb50e68819b3987240dbc7f2ba246c7dacd3ca70aca8c283ef/helga-markovify-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "1a72856099b6c373552ded1c3f29b67a", "sha256": "040ad6351266a0ae7dd6e030d9cc4eab275c407e18ac64bc490c7ae696675899"}, "downloads": -1, "filename": "helga_markovify-1.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "1a72856099b6c373552ded1c3f29b67a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7715, "upload_time": "2016-12-14T16:19:26", "upload_time_iso_8601": "2016-12-14T16:19:26.188475Z", "url": "https://files.pythonhosted.org/packages/9d/51/d49d94fc67fd54c69a3a704cd43c7db62731c5b036a6ece336c4e8e4daad/helga_markovify-1.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23a72d30e16a34d08695b35959bb8bf1", "sha256": "2e8ee88e00cfc1e5feefc078e5f8e19ec6edf5a2bcf4b64a9210a51b160e088a"}, "downloads": -1, "filename": "helga-markovify-1.1.1.tar.gz", "has_sig": false, "md5_digest": "23a72d30e16a34d08695b35959bb8bf1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55881, "upload_time": "2016-12-14T16:19:23", "upload_time_iso_8601": "2016-12-14T16:19:23.126146Z", "url": "https://files.pythonhosted.org/packages/0a/b5/779a6a26e50258a38bb969d70194e2f9792ffb1e2d03612e27f73960e7ec/helga-markovify-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1a72856099b6c373552ded1c3f29b67a", "sha256": "040ad6351266a0ae7dd6e030d9cc4eab275c407e18ac64bc490c7ae696675899"}, "downloads": -1, "filename": "helga_markovify-1.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "1a72856099b6c373552ded1c3f29b67a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7715, "upload_time": "2016-12-14T16:19:26", "upload_time_iso_8601": "2016-12-14T16:19:26.188475Z", "url": "https://files.pythonhosted.org/packages/9d/51/d49d94fc67fd54c69a3a704cd43c7db62731c5b036a6ece336c4e8e4daad/helga_markovify-1.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23a72d30e16a34d08695b35959bb8bf1", "sha256": "2e8ee88e00cfc1e5feefc078e5f8e19ec6edf5a2bcf4b64a9210a51b160e088a"}, "downloads": -1, "filename": "helga-markovify-1.1.1.tar.gz", "has_sig": false, "md5_digest": "23a72d30e16a34d08695b35959bb8bf1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55881, "upload_time": "2016-12-14T16:19:23", "upload_time_iso_8601": "2016-12-14T16:19:23.126146Z", "url": "https://files.pythonhosted.org/packages/0a/b5/779a6a26e50258a38bb969d70194e2f9792ffb1e2d03612e27f73960e7ec/helga-markovify-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:49 2020"}