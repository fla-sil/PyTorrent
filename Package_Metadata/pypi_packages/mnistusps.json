{"info": {"author": "Lukas Hedegaard", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# Splits for MNIST-USPS domain adaptation experiments\n\nThis repository contains the revised split protocol for creating splits for few shot domain adaptation on the MNIST-USPS datasets.\n\nContrary to often seen splits, we define an independent test split here and only let the train-val split vary according to a user-defined random seed.\n\n## Installation\n```bash\npip install mnist-usps\n```\n\n## Usage\nGetting the splits is a simple as:\n\n```python\nfrom mnistusps import mnistusps\n\ntrain, val, test = mnistusps(\n    source_name = \"mnist\",\n    target_name = \"usps\",\n    seed=1,\n    num_source_per_class=200,\n    num_target_per_class=3,\n    same_to_diff_class_ratio=3,\n    image_resize=(240, 240),\n    group_in_out=True, # groups data: ((img_s, img_t), (lbl_s, _lbl_t))\n    framework_conversion=\"tensorflow\",\n    data_path = None, # downloads to \"~/data\" per default\n)\n```\n\nThe function automatically downloads and unpacks the data using Torchvision internally. It then creates the splits using the [Dataset Ops library](https://github.com/LukasHedegaard/datasetops). \nDepending on your choice of machine learning library, the dataset can be converted to Tensorflow or PyTorch (assuming either is pre-installed) using Dataset Ops.\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LukasHedegaard/mnist-usps", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mnistusps", "package_url": "https://pypi.org/project/mnistusps/", "platform": "", "project_url": "https://pypi.org/project/mnistusps/", "project_urls": {"Homepage": "https://github.com/LukasHedegaard/mnist-usps"}, "release_url": "https://pypi.org/project/mnistusps/0.1.0/", "requires_dist": ["datasetops (==0.0.6)", "requests", "torchvision", "setuptools ; extra == 'build'", "wheel ; extra == 'build'", "twine ; extra == 'build'", "pytest ; extra == 'tests'", "pytest-cov ; extra == 'tests'"], "requires_python": ">=3.6", "summary": "Revised splits for MNIST-USPS domain adaptation experiments", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Splits for MNIST-USPS domain adaptation experiments</h1>\n<p>This repository contains the revised split protocol for creating splits for few shot domain adaptation on the MNIST-USPS datasets.</p>\n<p>Contrary to often seen splits, we define an independent test split here and only let the train-val split vary according to a user-defined random seed.</p>\n<h2>Installation</h2>\n<pre>pip install mnist-usps\n</pre>\n<h2>Usage</h2>\n<p>Getting the splits is a simple as:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mnistusps</span> <span class=\"kn\">import</span> <span class=\"n\">mnistusps</span>\n\n<span class=\"n\">train</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">mnistusps</span><span class=\"p\">(</span>\n    <span class=\"n\">source_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"mnist\"</span><span class=\"p\">,</span>\n    <span class=\"n\">target_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"usps\"</span><span class=\"p\">,</span>\n    <span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"n\">num_source_per_class</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span>\n    <span class=\"n\">num_target_per_class</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span>\n    <span class=\"n\">same_to_diff_class_ratio</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span>\n    <span class=\"n\">image_resize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">240</span><span class=\"p\">,</span> <span class=\"mi\">240</span><span class=\"p\">),</span>\n    <span class=\"n\">group_in_out</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"c1\"># groups data: ((img_s, img_t), (lbl_s, _lbl_t))</span>\n    <span class=\"n\">framework_conversion</span><span class=\"o\">=</span><span class=\"s2\">\"tensorflow\"</span><span class=\"p\">,</span>\n    <span class=\"n\">data_path</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"c1\"># downloads to \"~/data\" per default</span>\n<span class=\"p\">)</span>\n</pre>\n<p>The function automatically downloads and unpacks the data using Torchvision internally. It then creates the splits using the <a href=\"https://github.com/LukasHedegaard/datasetops\" rel=\"nofollow\">Dataset Ops library</a>.\nDepending on your choice of machine learning library, the dataset can be converted to Tensorflow or PyTorch (assuming either is pre-installed) using Dataset Ops.</p>\n\n          </div>"}, "last_serial": 7084480, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5b72cf486625ae266d4f92cb6402d64b", "sha256": "02bb1c2cfa36638926977de94dc81c3709031ed066ef7103a0c43ab67fec654e"}, "downloads": -1, "filename": "mnistusps-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5b72cf486625ae266d4f92cb6402d64b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4470, "upload_time": "2020-04-23T13:20:11", "upload_time_iso_8601": "2020-04-23T13:20:11.733103Z", "url": "https://files.pythonhosted.org/packages/ee/69/9f2a5781bf0f091e0d3f533e54524a2f61bc5d9083054b60824d57e600c1/mnistusps-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "019fc42aa9485dc9113ad9f149f16242", "sha256": "d862ea835c305125ad6fff1e5932165a53b4d1c3180bfd504e73916462dad3bc"}, "downloads": -1, "filename": "mnistusps-0.1.0.tar.gz", "has_sig": false, "md5_digest": "019fc42aa9485dc9113ad9f149f16242", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3204, "upload_time": "2020-04-23T13:20:13", "upload_time_iso_8601": "2020-04-23T13:20:13.887788Z", "url": "https://files.pythonhosted.org/packages/52/57/a3f1266e7ab9ca1063aeaac2c31af6d2ddfcfaffb0906628a5f7db767099/mnistusps-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5b72cf486625ae266d4f92cb6402d64b", "sha256": "02bb1c2cfa36638926977de94dc81c3709031ed066ef7103a0c43ab67fec654e"}, "downloads": -1, "filename": "mnistusps-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5b72cf486625ae266d4f92cb6402d64b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4470, "upload_time": "2020-04-23T13:20:11", "upload_time_iso_8601": "2020-04-23T13:20:11.733103Z", "url": "https://files.pythonhosted.org/packages/ee/69/9f2a5781bf0f091e0d3f533e54524a2f61bc5d9083054b60824d57e600c1/mnistusps-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "019fc42aa9485dc9113ad9f149f16242", "sha256": "d862ea835c305125ad6fff1e5932165a53b4d1c3180bfd504e73916462dad3bc"}, "downloads": -1, "filename": "mnistusps-0.1.0.tar.gz", "has_sig": false, "md5_digest": "019fc42aa9485dc9113ad9f149f16242", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3204, "upload_time": "2020-04-23T13:20:13", "upload_time_iso_8601": "2020-04-23T13:20:13.887788Z", "url": "https://files.pythonhosted.org/packages/52/57/a3f1266e7ab9ca1063aeaac2c31af6d2ddfcfaffb0906628a5f7db767099/mnistusps-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:10 2020"}