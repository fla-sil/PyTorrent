{"info": {"author": "Eric Leblond", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Information Technology", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Security"], "description": "======\nPSHITT\n======\n\nIntroduction\n============\n\npshitt (for Passwords of SSH Intruders Transferred to Text) is a lightweight\nfake SSH server designed to collect authentication data sent by intruders.\nIt basically collects username and password used by SSH bruteforce software\nand writes the extracted data to a file in JSON format.\n\npshitt is written in Python and use paramiko to implement the SSH layer.\n\nRunning pshitt\n==============\n\nGo into the source directory and run ::\n\n ./pshitt -o passwords.json\n\nThis will run a fake SSH server listening on port 2200 to catch authentication\ndata sent by the intruders. Information about SSH connection attempt will be\nstored in the ``passwords.json`` using JSON as format ::\n\n {\"username\": \"root\", \"src_ip\": \"116.10.191.184\", \"password\": \"P@ssword\", \\\n  \"src_port\": 41397, \"timestamp\": \"2014-06-25T21:35:21.660303\"}\n\nFull options are available via '-h' option ::\n\n usage: pshitt [-h] [-o OUTPUT] [-k KEY] [-l LOG] [-p PORT] [-t THREADS] [-v]\n               [-D]\n\n Passwords of SSH Intruders Transferred to Text\n\n optional arguments:\n   -h, --help            show this help message and exit\n   -o OUTPUT, --output OUTPUT\n                         File to export collected data\n   -k KEY, --key KEY     Host RSA key\n   -l LOG, --log LOG     File to log info and debug\n   -p PORT, --port PORT  TCP port to listen to\n   -t THREADS, --threads THREADS\n                         Maximum number of client threads\n   -v, --verbose         Show verbose output, use multiple times increase\n                         verbosity\n   -D, --daemon          Run as unix daemon\n\nUsing pshitt data\n=================\n\nAs the format is JSON, it is easy to use the data in data analysis\nsoftware such as Splunk or Logstash.\n\nHere's a sample configuration for logstash ::\n\n input {\n    file {\n       path => [ \"/var/log/pshitt.log\" ]\n       codec =>   json\n       type => \"json-log\"\n    }\n }\n\n filter {\n     # warn logstash that timestamp is the one to use\n     if [type] == \"json-log\" {\n         date {\n             match => [ \"timestamp\", \"ISO8601\" ]\n         }\n     }\n\n     # optional but geoip is interesting\n     if [src_ip]  {\n         geoip {\n             source => \"src_ip\"\n             target => \"geoip\"\n             add_field => [ \"[geoip][coordinates]\", \"%{[geoip][longitude]}\" ]\n             add_field => [ \"[geoip][coordinates]\", \"%{[geoip][latitude]}\"  ]\n         }\n         mutate {\n             convert => [ \"[geoip][coordinates]\", \"float\" ]\n         }\n     }\n }\n\n output {\n   elasticsearch {\n        host => \"localhost\"\n   }\n }\n\nBasically, it is just enough to mention that the ``pshitt.log`` file is\nusing JSON format.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/regit/pshitt", "keywords": "ssh intrusion-detection", "license": "", "maintainer": "", "maintainer_email": "", "name": "pshitt", "package_url": "https://pypi.org/project/pshitt/", "platform": "", "project_url": "https://pypi.org/project/pshitt/", "project_urls": {"Bug Reports": "https://github.com/regit/pshitt/issues", "Homepage": "https://github.com/regit/pshitt", "Source": "https://github.com/regit/pshitt/"}, "release_url": "https://pypi.org/project/pshitt/1.0.1/", "requires_dist": ["paramiko", "python-daemon"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "summary": "Passwords of SSH Intruders Transferred to Text", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>pshitt (for Passwords of SSH Intruders Transferred to Text) is a lightweight\nfake SSH server designed to collect authentication data sent by intruders.\nIt basically collects username and password used by SSH bruteforce software\nand writes the extracted data to a file in JSON format.</p>\n<p>pshitt is written in Python and use paramiko to implement the SSH layer.</p>\n</div>\n<div id=\"running-pshitt\">\n<h2>Running pshitt</h2>\n<p>Go into the source directory and run</p>\n<pre>./pshitt -o passwords.json\n</pre>\n<p>This will run a fake SSH server listening on port 2200 to catch authentication\ndata sent by the intruders. Information about SSH connection attempt will be\nstored in the <tt>passwords.json</tt> using JSON as format</p>\n<pre>{\"username\": \"root\", \"src_ip\": \"116.10.191.184\", \"password\": \"P@ssword\", \\\n \"src_port\": 41397, \"timestamp\": \"2014-06-25T21:35:21.660303\"}\n</pre>\n<p>Full options are available via \u2018-h\u2019 option</p>\n<pre>usage: pshitt [-h] [-o OUTPUT] [-k KEY] [-l LOG] [-p PORT] [-t THREADS] [-v]\n              [-D]\n\nPasswords of SSH Intruders Transferred to Text\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o OUTPUT, --output OUTPUT\n                        File to export collected data\n  -k KEY, --key KEY     Host RSA key\n  -l LOG, --log LOG     File to log info and debug\n  -p PORT, --port PORT  TCP port to listen to\n  -t THREADS, --threads THREADS\n                        Maximum number of client threads\n  -v, --verbose         Show verbose output, use multiple times increase\n                        verbosity\n  -D, --daemon          Run as unix daemon\n</pre>\n</div>\n<div id=\"using-pshitt-data\">\n<h2>Using pshitt data</h2>\n<p>As the format is JSON, it is easy to use the data in data analysis\nsoftware such as Splunk or Logstash.</p>\n<p>Here\u2019s a sample configuration for logstash</p>\n<pre>input {\n   file {\n      path =&gt; [ \"/var/log/pshitt.log\" ]\n      codec =&gt;   json\n      type =&gt; \"json-log\"\n   }\n}\n\nfilter {\n    # warn logstash that timestamp is the one to use\n    if [type] == \"json-log\" {\n        date {\n            match =&gt; [ \"timestamp\", \"ISO8601\" ]\n        }\n    }\n\n    # optional but geoip is interesting\n    if [src_ip]  {\n        geoip {\n            source =&gt; \"src_ip\"\n            target =&gt; \"geoip\"\n            add_field =&gt; [ \"[geoip][coordinates]\", \"%{[geoip][longitude]}\" ]\n            add_field =&gt; [ \"[geoip][coordinates]\", \"%{[geoip][latitude]}\"  ]\n        }\n        mutate {\n            convert =&gt; [ \"[geoip][coordinates]\", \"float\" ]\n        }\n    }\n}\n\noutput {\n  elasticsearch {\n       host =&gt; \"localhost\"\n  }\n}\n</pre>\n<p>Basically, it is just enough to mention that the <tt>pshitt.log</tt> file is\nusing JSON format.</p>\n</div>\n\n          </div>"}, "last_serial": 7162684, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "a601c5092bec06cb2c313ade7077cd46", "sha256": "37152129502975975ca55c886b026956852f9736821860b6e51bc8252b89486d"}, "downloads": -1, "filename": "pshitt-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a601c5092bec06cb2c313ade7077cd46", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 17805, "upload_time": "2020-05-04T10:03:21", "upload_time_iso_8601": "2020-05-04T10:03:21.459312Z", "url": "https://files.pythonhosted.org/packages/b0/c7/975b8f3d994c4b3c2cdeeb9964346f68a5f9d25dcd86ebaa140fe80dc6a0/pshitt-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3883d640e2eee2fe7d4362b80992e285", "sha256": "740720a140f1bee73bb150a3243dcbd9e111019c230db2d601ad026162569432"}, "downloads": -1, "filename": "pshitt-1.0.1.tar.gz", "has_sig": false, "md5_digest": "3883d640e2eee2fe7d4362b80992e285", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 5619, "upload_time": "2020-05-04T10:03:23", "upload_time_iso_8601": "2020-05-04T10:03:23.308456Z", "url": "https://files.pythonhosted.org/packages/eb/21/a0ff73dabebfe911d60b8508cc248a93f3b65d3e2a9922e1ca792b15fec0/pshitt-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a601c5092bec06cb2c313ade7077cd46", "sha256": "37152129502975975ca55c886b026956852f9736821860b6e51bc8252b89486d"}, "downloads": -1, "filename": "pshitt-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a601c5092bec06cb2c313ade7077cd46", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 17805, "upload_time": "2020-05-04T10:03:21", "upload_time_iso_8601": "2020-05-04T10:03:21.459312Z", "url": "https://files.pythonhosted.org/packages/b0/c7/975b8f3d994c4b3c2cdeeb9964346f68a5f9d25dcd86ebaa140fe80dc6a0/pshitt-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3883d640e2eee2fe7d4362b80992e285", "sha256": "740720a140f1bee73bb150a3243dcbd9e111019c230db2d601ad026162569432"}, "downloads": -1, "filename": "pshitt-1.0.1.tar.gz", "has_sig": false, "md5_digest": "3883d640e2eee2fe7d4362b80992e285", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 5619, "upload_time": "2020-05-04T10:03:23", "upload_time_iso_8601": "2020-05-04T10:03:23.308456Z", "url": "https://files.pythonhosted.org/packages/eb/21/a0ff73dabebfe911d60b8508cc248a93f3b65d3e2a9922e1ca792b15fec0/pshitt-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:56 2020"}