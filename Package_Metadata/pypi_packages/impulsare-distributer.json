{"info": {"author": "Emmanuel Dyan", "author_email": "emmanuel@impulsare.io", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering", "Topic :: System :: Distributed Computing", "Topic :: System :: Systems Administration"], "description": "impulsare/distributer\n===============================\n\n.. image:: https://travis-ci.org/impulsare/distributer.svg?branch=master\n    :target: https://travis-ci.org/impulsare/distributer\n\n.. image:: https://scrutinizer-ci.com/g/impulsare/distributer/badges/quality-score.png?b=master\n    :target: https://scrutinizer-ci.com/g/impulsare/distributer/\n\n\nOverview\n--------------------------\nA queue manager based on ``rq`` and made for **impulsare**. It helps to :\n- add items to a queue\n- listen for a queue via a cli listener\n\nSee `tests/static/` for examples of configuration.\n\n\n\nInstallation / Usage\n--------------------------\nTo install use pip:\n\n.. code-block:: bash\n\n    $ pip install --upgrade impulsare-distributer\n\n\n\nConfiguration\n--------------------------\nYou need to create/add to your configuration file:\n\n.. code-block:: yaml\n\n    distributer:\n        # Required, redis address\n        host: 192.168.108.3\n\n        # Optional\n        port: 6379\n\n    # If a component needs to send data to a queue,\n    # define here where what is the queue's name (next one)\n    # used by impulsare-ruler to send to writer for example (ruler: {queue: writer})\n    testqueue:\n        queue: my_test_queue\n\n\nListener\n--------------------------\nThis is a simple implementation of ``rq's`` worker. If you need to listen for a queue,\nno need to have a config file, run in cli:\n\n.. code-block:: bash\n\n    $ queue-listener --host redis --queue my_test_queue\n\n\nTo be able to see the next example working, keep that opened in a separate window.\n\n\nQueue Usage\n-----------------------------\nTo use the queue manager, and send jobs to be processed:\n\n.. code-block:: python\n\n    from impulsare_distributer import QueueManager\n    from mymodule import my_method\n\n\n    queue = QueueManager(config_file='tests/static/config_valid.yml', listener='testqueue')\n    queue.add(method=my_method, item='Hello World', job='test')\n\n\nDevelopment & Tests\n--------------------------------\n\n.. code-block:: bash\n\n    $ pip install -r requirements.txt\n    $ pip install -r requirements-dev.txt\n    $ py.test\n\n\nIf you run your tests with a different redis server than localhost:\n\n.. code-block:: bash\n\n    $ REDIS=redis py.test", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/impulsare/distributer/tarball/1.0b4", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/impulsare/distributer", "keywords": "distributer,python,redis,impulsare,rq,esb,etl", "license": "AGPLv3", "maintainer": "", "maintainer_email": "", "name": "impulsare-distributer", "package_url": "https://pypi.org/project/impulsare-distributer/", "platform": "", "project_url": "https://pypi.org/project/impulsare-distributer/", "project_urls": {"Download": "https://github.com/impulsare/distributer/tarball/1.0b4", "Homepage": "https://github.com/impulsare/distributer"}, "release_url": "https://pypi.org/project/impulsare-distributer/1.0b4/", "requires_dist": null, "requires_python": "", "summary": "A distributer that helps to publish to a queue and process tasks from a queue", "version": "1.0b4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/impulsare/distributer\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/impulsare/distributer.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d08cd96ced8b4eb6ce37375d3fc07525713af46f/68747470733a2f2f7472617669732d63692e6f72672f696d70756c736172652f64697374726962757465722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://scrutinizer-ci.com/g/impulsare/distributer/\" rel=\"nofollow\"><img alt=\"https://scrutinizer-ci.com/g/impulsare/distributer/badges/quality-score.png?b=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3afbdf278290c070fa04ffb8beffc755b0ead3ff/68747470733a2f2f7363727574696e697a65722d63692e636f6d2f672f696d70756c736172652f64697374726962757465722f6261646765732f7175616c6974792d73636f72652e706e673f623d6d6173746572\"></a>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>A queue manager based on <tt>rq</tt> and made for <strong>impulsare</strong>. It helps to :\n- add items to a queue\n- listen for a queue via a cli listener</p>\n<p>See <cite>tests/static/</cite> for examples of configuration.</p>\n</div>\n<div id=\"installation-usage\">\n<h2>Installation / Usage</h2>\n<p>To install use pip:</p>\n<pre>$ pip install --upgrade impulsare-distributer\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>You need to create/add to your configuration file:</p>\n<pre><span class=\"nt\">distributer</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Required, redis address</span>\n    <span class=\"nt\">host</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">192.168.108.3</span>\n\n    <span class=\"c1\"># Optional</span>\n    <span class=\"nt\">port</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">6379</span>\n\n<span class=\"c1\"># If a component needs to send data to a queue,</span>\n<span class=\"c1\"># define here where what is the queue's name (next one)</span>\n<span class=\"c1\"># used by impulsare-ruler to send to writer for example (ruler: {queue: writer})</span>\n<span class=\"nt\">testqueue</span><span class=\"p\">:</span>\n    <span class=\"nt\">queue</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">my_test_queue</span>\n</pre>\n</div>\n<div id=\"listener\">\n<h2>Listener</h2>\n<p>This is a simple implementation of <tt>rq's</tt> worker. If you need to listen for a queue,\nno need to have a config file, run in cli:</p>\n<pre>$ queue-listener --host redis --queue my_test_queue\n</pre>\n<p>To be able to see the next example working, keep that opened in a separate window.</p>\n</div>\n<div id=\"queue-usage\">\n<h2>Queue Usage</h2>\n<p>To use the queue manager, and send jobs to be processed:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">impulsare_distributer</span> <span class=\"kn\">import</span> <span class=\"n\">QueueManager</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mymodule</span> <span class=\"kn\">import</span> <span class=\"n\">my_method</span>\n\n\n<span class=\"n\">queue</span> <span class=\"o\">=</span> <span class=\"n\">QueueManager</span><span class=\"p\">(</span><span class=\"n\">config_file</span><span class=\"o\">=</span><span class=\"s1\">'tests/static/config_valid.yml'</span><span class=\"p\">,</span> <span class=\"n\">listener</span><span class=\"o\">=</span><span class=\"s1\">'testqueue'</span><span class=\"p\">)</span>\n<span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"n\">my_method</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"o\">=</span><span class=\"s1\">'Hello World'</span><span class=\"p\">,</span> <span class=\"n\">job</span><span class=\"o\">=</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"development-tests\">\n<h2>Development &amp; Tests</h2>\n<pre>$ pip install -r requirements.txt\n$ pip install -r requirements-dev.txt\n$ py.test\n</pre>\n<p>If you run your tests with a different redis server than localhost:</p>\n<pre>$ <span class=\"nv\">REDIS</span><span class=\"o\">=</span>redis py.test\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3089425, "releases": {"1.0b3": [{"comment_text": "", "digests": {"md5": "241ad59f1ad6fe3190bbc2a8d208b647", "sha256": "b70de1af0c5de439711288b306158673f41d3c0c056a2c338cf65ee3230858f4"}, "downloads": -1, "filename": "impulsare-distributer-1.0b3.tar.gz", "has_sig": false, "md5_digest": "241ad59f1ad6fe3190bbc2a8d208b647", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3552, "upload_time": "2017-08-11T09:02:21", "upload_time_iso_8601": "2017-08-11T09:02:21.278417Z", "url": "https://files.pythonhosted.org/packages/8a/ba/7596e501b0d718f14746bcd8ec6301bd68d682ad6dfec5cc3bacd1f3bfc8/impulsare-distributer-1.0b3.tar.gz", "yanked": false}], "1.0b4": [{"comment_text": "", "digests": {"md5": "b687265a088928edf4980c2ab883bcaf", "sha256": "f5b8d70de8c992c6f3aca17132f69d3d42a59b825bc86fdb59d8462a9f3b8416"}, "downloads": -1, "filename": "impulsare-distributer-1.0b4.tar.gz", "has_sig": false, "md5_digest": "b687265a088928edf4980c2ab883bcaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3983, "upload_time": "2017-08-11T10:05:36", "upload_time_iso_8601": "2017-08-11T10:05:36.819156Z", "url": "https://files.pythonhosted.org/packages/24/f1/d3110c61d789d4686a61e7d27aae173c5dbbda020616318ad52aebaadfbd/impulsare-distributer-1.0b4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b687265a088928edf4980c2ab883bcaf", "sha256": "f5b8d70de8c992c6f3aca17132f69d3d42a59b825bc86fdb59d8462a9f3b8416"}, "downloads": -1, "filename": "impulsare-distributer-1.0b4.tar.gz", "has_sig": false, "md5_digest": "b687265a088928edf4980c2ab883bcaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3983, "upload_time": "2017-08-11T10:05:36", "upload_time_iso_8601": "2017-08-11T10:05:36.819156Z", "url": "https://files.pythonhosted.org/packages/24/f1/d3110c61d789d4686a61e7d27aae173c5dbbda020616318ad52aebaadfbd/impulsare-distributer-1.0b4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:29 2020"}