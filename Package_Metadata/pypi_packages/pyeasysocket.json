{"info": {"author": "Slash Gordon", "author_email": "slash.gordon.dev@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "[![Build Status](https://travis-ci.org/SlashGordon/pyeasysocket.svg?branch=master)](https://travis-ci.org/SlashGordon/pyeasysocket)\n![PyPI - Downloads](https://img.shields.io/pypi/dm/pyeasysocket?style=plastic)\n[![Coverage Status](https://coveralls.io/repos/github/SlashGordon/pyeasysocket/badge.svg?branch=master)](https://coveralls.io/github/SlashGordon/pyeasysocket?branch=master)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/30808a98d54b4f24bf26f5a89b92501a)](https://www.codacy.com/manual/SlashGordon/pyeasysocket?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=SlashGordon/pyeasysocket&amp;utm_campaign=Badge_Grade)\n\n# pyeasysocket\nPython TCP and UDP sockets made easy.\n\n## install\n\n```shell\npip install pyeasysocket\n```\n\n## quick start\n\nCreate a TCPReceiver:\n\n```python\nfrom pyeasysocket.udp import UDPReceiver\nfrom pyeasysocket.tcp import TCPReceiver\n\nreceiver_udp = UDPReceiver('localhost', 8001)\nreceiver = TCPReceiver('localhost', 8000)\ntry:\n    # run background thread for receive\n    receiver.start()\n    # wait for data\n    received_data = receiver.data\nfinally:\n    receiver.join() # closes the background thread\n```\n\nOr use the advantage of a with statement with the guarantee that the connection will be closed.\n\n```python\nimport time\nfrom pyeasysocket.tcp import TCPReceiver, TCPClient\n\nclient = TCPClient('localhost', 8000)\nwith TCPReceiver('localhost', 8000) as receiver:\n    client.send('test')\n    time.sleep(0.2) # only for timing purpose\n    received_data = receiver.data # test\n```\n## issue tracker\n\n[https://github.com/SlashGordon/pyeasysocket/issuese](https://github.com/SlashGordon/pyeasysocket/issues\")\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SlashGordon/pyeasysocket", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyeasysocket", "package_url": "https://pypi.org/project/pyeasysocket/", "platform": "", "project_url": "https://pypi.org/project/pyeasysocket/", "project_urls": {"Homepage": "https://github.com/SlashGordon/pyeasysocket"}, "release_url": "https://pypi.org/project/pyeasysocket/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Python TCP and UDP sockets made easy.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/SlashGordon/pyeasysocket\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/781375f6e2bf2c8040ffb578b73489e0b819f5ce/68747470733a2f2f7472617669732d63692e6f72672f536c617368476f72646f6e2f707965617379736f636b65742e7376673f6272616e63683d6d6173746572\"></a>\n<img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/da171869829a11db4f3e5a14a099536064a2ee75/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f707965617379736f636b65743f7374796c653d706c6173746963\">\n<a href=\"https://coveralls.io/github/SlashGordon/pyeasysocket?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a6f3b67e3ccc7ed4271b872a9ce2e9478930e5a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f536c617368476f72646f6e2f707965617379736f636b65742f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://www.codacy.com/manual/SlashGordon/pyeasysocket?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=SlashGordon/pyeasysocket&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5630d51683626ca7745f1b324bb01bcc030861bb/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3330383038613938643534623466323462663236663561383962393235303161\"></a></p>\n<h1>pyeasysocket</h1>\n<p>Python TCP and UDP sockets made easy.</p>\n<h2>install</h2>\n<pre>pip install pyeasysocket\n</pre>\n<h2>quick start</h2>\n<p>Create a TCPReceiver:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyeasysocket.udp</span> <span class=\"kn\">import</span> <span class=\"n\">UDPReceiver</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyeasysocket.tcp</span> <span class=\"kn\">import</span> <span class=\"n\">TCPReceiver</span>\n\n<span class=\"n\">receiver_udp</span> <span class=\"o\">=</span> <span class=\"n\">UDPReceiver</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"mi\">8001</span><span class=\"p\">)</span>\n<span class=\"n\">receiver</span> <span class=\"o\">=</span> <span class=\"n\">TCPReceiver</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"mi\">8000</span><span class=\"p\">)</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"c1\"># run background thread for receive</span>\n    <span class=\"n\">receiver</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n    <span class=\"c1\"># wait for data</span>\n    <span class=\"n\">received_data</span> <span class=\"o\">=</span> <span class=\"n\">receiver</span><span class=\"o\">.</span><span class=\"n\">data</span>\n<span class=\"k\">finally</span><span class=\"p\">:</span>\n    <span class=\"n\">receiver</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">()</span> <span class=\"c1\"># closes the background thread</span>\n</pre>\n<p>Or use the advantage of a with statement with the guarantee that the connection will be closed.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyeasysocket.tcp</span> <span class=\"kn\">import</span> <span class=\"n\">TCPReceiver</span><span class=\"p\">,</span> <span class=\"n\">TCPClient</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">TCPClient</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"mi\">8000</span><span class=\"p\">)</span>\n<span class=\"k\">with</span> <span class=\"n\">TCPReceiver</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"mi\">8000</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">receiver</span><span class=\"p\">:</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"p\">)</span> <span class=\"c1\"># only for timing purpose</span>\n    <span class=\"n\">received_data</span> <span class=\"o\">=</span> <span class=\"n\">receiver</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"c1\"># test</span>\n</pre>\n<h2>issue tracker</h2>\n<p><a href=\"https://github.com/SlashGordon/pyeasysocket/issues%22\" rel=\"nofollow\">https://github.com/SlashGordon/pyeasysocket/issuese</a></p>\n\n          </div>"}, "last_serial": 6131697, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "c1c8360a927ae2380549cd90fc8f2639", "sha256": "b868bb1112b9c6cc944165e139c0053f94a0ff8c3b40c7d8878bfd4c6cf4a2d9"}, "downloads": -1, "filename": "pyeasysocket-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c1c8360a927ae2380549cd90fc8f2639", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6003, "upload_time": "2019-11-13T16:44:22", "upload_time_iso_8601": "2019-11-13T16:44:22.215176Z", "url": "https://files.pythonhosted.org/packages/17/2f/d64ebc1dc98bada82d6eb3a63cff91b5da3b5962d3b237ae02e9c854fde9/pyeasysocket-1.0.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c1c8360a927ae2380549cd90fc8f2639", "sha256": "b868bb1112b9c6cc944165e139c0053f94a0ff8c3b40c7d8878bfd4c6cf4a2d9"}, "downloads": -1, "filename": "pyeasysocket-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c1c8360a927ae2380549cd90fc8f2639", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6003, "upload_time": "2019-11-13T16:44:22", "upload_time_iso_8601": "2019-11-13T16:44:22.215176Z", "url": "https://files.pythonhosted.org/packages/17/2f/d64ebc1dc98bada82d6eb3a63cff91b5da3b5962d3b237ae02e9c854fde9/pyeasysocket-1.0.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:06:37 2020"}