{"info": {"author": "Joakim Borg", "author_email": "joakim.borg@ircam.fr", "bugtrack_url": null, "classifiers": [], "description": "MaxOsc is a package designed to conveniently call python code from MaxMSP over OSC. It's a wrapper of the [python-osc](https://pypi.org/project/python-osc/) package with a built-in parser.\n\nThe python code should be run independently of Max (in a terminal or similar) and can be used in conjuncture with the set of Max abstractions available [here](https://github.com/jobor019/pyosc/tree/master/pyosc) or directly through the [CNMAT externals](https://cnmat.berkeley.edu/downloads) for OSC (also available through the Max package manager).\n\n### Project Status\n\nThe project is currently in development.\n\nDocumentation is currently limited, further documentation will be available later.\n\n\n\n### Minimal Example\nRun the following code in a separate terminal. Note that `MaxOsc.run()` will instantiate a [blocking OSC server](https://python-osc.readthedocs.io/en/latest/server.html#blocking-server), hence no code below that point will ever be executed.\n```python\nfrom maxosc import MaxOsc\n\nclass Flipper(MaxOsc):\n\n    def __init__(self):\n        super().__init__()\n        self.run()\n\n    def flip(self, a1: int, a2: int):\n        return a2, a1\n\n    def flip_list(self, a: [int]):\n        return list(reversed(a))\n\nif __name__ == '__main__':\n    Flipper()\n\n```\n\nIf the [pyosc abstractions](https://github.com/jobor019/pyosc/tree/master/pyosc) are available in your path, the following Max patcher can be used:\n<img src=\"https://raw.githubusercontent.com/jobor019/pyosc/master/maxosc/docs/misc/readme1.png\" width=\"50%\">\n\n<details><summary>Show Max patcher</summary>\n\n```\n<pre><code>\n----------begin_max5_patcher----------\n432.3ocwU9saBBCEF+Z3onoWyL.BLcWs2ikESEqtZv1l1hhw369n+AmNItlg\nQuvZ5omxW+w2oGNDF.myZvRH3MvGfffCgAAlP5.At4AvMnlxJjzjFjh2wluF\nFYWRgaTlv78LY4nJhTsSf3cKSq2vpUUXkYuItnjElsz9XdI40tTs4o1yw1SC\nDB9zsDGoJ+hPWMSfKU1UGmlNJNBLMWONISOpibZKsBSnmzUG6XXndHZfXJHT\nE3cNiWyAI8iYbOXV.+SVRiiMHkb+gYCVJQqvWQSBHELFjAx82uxGjeUXPLO+\n1Hl978q3a3WIYOQ+xamZ5+ynbvYMpzoixeTFko+wxZZIXYEgOS2IoeVytl0a\nzDI5redTfl39Kt3w0R4Rx8F5hgCsyrcPOI2elMY.qHze+wCiJ53W9hPxpEkc\nmutF+feDZAVpHTjhvnmkjKmdeW6sP4dHTx8PIeHR+gfAKTgOBEeGDZpGBcMP\n1ZCDmuEKjtjMRzdcXMSnmNIxLkPsSMsufB7VRW91HHQaEqpsbsVXNVvlhLnc\nqrEXAsl3pKagqURyUMJps6IGY4vbiL7X32.J7svT\n-----------end_max5_patcher-----------\n</code></pre>\n```\n</details>\n\n\n### Elaborate Example\n##### Python Code:\n```python\nfrom maxosc import MaxOsc\n\n\nclass Instrument:\n    def __init__(self, name: str, midi_range: (int, int), supported_techniques: [str], concert_pitch: float,\n                 transposing: bool):\n        self.name: str = name\n        self.midi_range: (int, int) = midi_range\n        self.supported_techniques: [str] = supported_techniques\n        self.concert_pitch: float = concert_pitch\n        self.transposing: bool = transposing\n\n    def max_getter(self):\n        return self.name, self.midi_range, self.supported_techniques, self.concert_pitch, self.transposing\n\n\nclass InstrumentBank(MaxOsc):\n    def __init__(self):\n        super().__init__()\n        self.instruments: [Instrument] = []\n        self.run()\n\n    def add_instrument(self, name: str, midi_range: (int, int), supported_techniques: [str],\n                       concert_pitch: float = 440.0, transposing: bool = False):\n        instrument = Instrument(name, midi_range, supported_techniques, concert_pitch, transposing)\n        self.instruments.append(instrument)\n        print(f\"Added instrument '{name}' with range={midi_range}, techniques={supported_techniques}, \"\n              f\"concert pitch={concert_pitch} and transposing={transposing}.\")\n\n    def get_instruments(self):\n        return [instr.max_getter() for instr in self.instruments]\n\n\nif __name__ == '__main__':\n    InstrumentBank()\n\n```\n\n##### Max Code:\n<img src=\"https://raw.githubusercontent.com/jobor019/pyosc/master/maxosc/docs/misc/readme2.png\" width=\"95%\">\n<details><summary>Show Max patcher</summary>\n<pre><code>\n----------begin_max5_patcher----------\n1581.3ocyZF0bahCDG+YmOE6vKocFWeHDfgNSd35C2SW6K2My8PhmLXrrM4v\nHJRjX2N86dWIgcH01Dpwl1YRLFYEzt+j1c+K470qFXMkulIrf2C2BCF70qFL\nP2jpgAU2OvZUz53zHgtaVw7UqXYRqglOSxVK0s+wxTYx6dhWLCDxhjrEBPf8\nCjb3iQqgmRRSgoLHOpPvlAQBcqhMqlxSEPxH1HXFubZJC9bIWFIS3Yvpnh+W\n.uQTN8AVr9IEuLJaA6si1N5oIYrXdYl1DbqZLqbEuTlxjZC1tp0jYZyjO8g2\nE5s8uOORFuDs06KvAvPA5X+Q1CApuq5BwOPcw2djML44meR11GOQ012t5J0K\nC6HB+DOigTfIxtVBr0IBIjjo3zH3+1Ce2g1QZ5cVWB9PZfOiscqyGGR+wmOv\n4ornLAxn8IztOr4Uc1.u.HW.nED1.z777pCMZOtn5CafYr4QXz4PHiIjHFRQ\ntI1wl4oQRIKCa+okrr53aD7OLFFEtdIKMGlifaEufgDGe6JSHJ9ihsn2BlFE\ncEiia.ijPZcLNdb+Fa9dnTvTAd36UAdwQBEMPhIRjIOxd6AccZqc8lRKE3ZR\nKENxaHXbb2w8YP2VmWVTpbdbwvcVyiREWDRPaJADw4YRPrI8GJ9yhEkpO.xh\nVwDXfwFU7inLOOMACeRv+pYIQRV5FLXHMk+D13zMHmt4NqQv+tD6adTLChlK\nYEllgDAvyUgRQocjYMkz1MztFyB6QlkugKhGox37TQTNDGkoXVAKOEIAlxIQ\ntDsuICAF9NjJ5F3lqnCaHlnanYbSoloNg0PC0t+PyeqRC+Gxxb0C2Dd8RZcP\nu1o0dcSYR88pGCYRsP6CmdeYhFOWUBYewecj.MkPk35ncdSdUBkd9YvzRojm\nYcPykb.ysVVuBLCClj3dVVDpItt+YdFxM4LieXMEUuXsynOToCmZA+N5RmpW\n+04mNWF+zOv62K+jbY7SWi7mee7S6Kie5DFn7vKmedrbT+UYVrJGjXWUnHck\neUmeOfYsVrXakJsSzojT9AMklVKzyIPq3gXt7KMGku+kYtl5WyQuDy0nfMQz\nB1dy0W+ItR3JppUM6dM7Fk3dP8xagaUh9mzn1i7BlZCS5RV22hE.GBotVGCa\nsIsdnFYUR5BOFxbNmHC6BV4lo268GldsZ+s1PnGLAtcd5WlfQH39Ex4pR52n\n1tvEmfzSifUELLDjPr6OD9XBGcUXUxrj6KTm9vMvsddnRrwSz6mfWf6S+dIK\ndYVxmKYhatMpHlC4Ie4Kv0w7THksHie8ot1j1ZxRNMxVUhphrlC+nWIqAlvy\nT6NqcXC20kqq8HvV03KVJiehYkLtL1zGB1mWjg.6h5b2p8h4YcvYBu1xYO6S\niylzlTOiFVOMtUme44iyYrmPC7HaqaNVnDVvj2+LeDGtTh699rq2w84g09sE\n9OIn15LGm9ntwAiGacYTWmSa9l3SUhgL6lmXNHji6umy3JS.U6cvSbAs4v2M\n9mqW+4dlzFs18nAcIds5vX7O+t2OoZN5EUM2kS3diIk9wSO40ofamBFIlrOA\ntm+jOGwOefiUqns2+b5xh0pCHILrY2i9qeZjzkTNWvYwWQpxNge2BGrnBL4m\nXClGfKNm3x6pseWUqw787Q85WsEQylUSaQqkV3etTV33FVSYU6VVn6gdt5G9\nd00ihp8WhDAurHdq8s8b.gmGnYLgLISqhuVmT6ZT0oCh8VORNsYjnmiQhzlQ\nhbNFI6VLRNmC5oNKjWcjTpb69H41F58h9fasLGKSHEaOr.SwXmwpKnxps2zU\nKi1UKyOz0XLg0srvNaYaAeiVlZeW3d7NhoYLFpqlYjwA6tqqPizUn4NlZ3TP\ncnEzYKi1FKSomPAstM8zlvT54HgfaaRxQOGIDntskdNccjb57JncAZ10i55L\nBBZKB57H0pruNuNCpNb8w5u.vf5k34EyXE5cB0CVpcaszfcueeCkb4MzeXFt\nAC0sAC0oSFpSmqGRsCLJ5Zb8uQJWTd9irBQ0SWaTnN1G3ZGIXn91jLysZ82V\nErGS11eSKnx9kIRTcYYg1QrVWcr+Vq3HRxJSpl9PbfCoVir9+xD0+9Cls1iR\nou5aW8cPshRPJ\n-----------end_max5_patcher-----------\n</code></pre>\n</details>\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jobor019/pyosc", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "maxosc", "package_url": "https://pypi.org/project/maxosc/", "platform": "", "project_url": "https://pypi.org/project/maxosc/", "project_urls": {"Homepage": "https://github.com/jobor019/pyosc"}, "release_url": "https://pypi.org/project/maxosc/0.0.2/", "requires_dist": ["python-osc"], "requires_python": "", "summary": "Call python code from MaxMSP over OSC", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>MaxOsc is a package designed to conveniently call python code from MaxMSP over OSC. It's a wrapper of the <a href=\"https://pypi.org/project/python-osc/\" rel=\"nofollow\">python-osc</a> package with a built-in parser.</p>\n<p>The python code should be run independently of Max (in a terminal or similar) and can be used in conjuncture with the set of Max abstractions available <a href=\"https://github.com/jobor019/pyosc/tree/master/pyosc\" rel=\"nofollow\">here</a> or directly through the <a href=\"https://cnmat.berkeley.edu/downloads\" rel=\"nofollow\">CNMAT externals</a> for OSC (also available through the Max package manager).</p>\n<h3>Project Status</h3>\n<p>The project is currently in development.</p>\n<p>Documentation is currently limited, further documentation will be available later.</p>\n<h3>Minimal Example</h3>\n<p>Run the following code in a separate terminal. Note that <code>MaxOsc.run()</code> will instantiate a <a href=\"https://python-osc.readthedocs.io/en/latest/server.html#blocking-server\" rel=\"nofollow\">blocking OSC server</a>, hence no code below that point will ever be executed.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">maxosc</span> <span class=\"kn\">import</span> <span class=\"n\">MaxOsc</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Flipper</span><span class=\"p\">(</span><span class=\"n\">MaxOsc</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">flip</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">a1</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">a2</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">a2</span><span class=\"p\">,</span> <span class=\"n\">a1</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">flip_list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">reversed</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">Flipper</span><span class=\"p\">()</span>\n</pre>\n<p>If the <a href=\"https://github.com/jobor019/pyosc/tree/master/pyosc\" rel=\"nofollow\">pyosc abstractions</a> are available in your path, the following Max patcher can be used:\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a920037d812c0af6fb55b4c2a45524cea7845aa/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6a6f626f723031392f70796f73632f6d61737465722f6d61786f73632f646f63732f6d6973632f726561646d65312e706e67\" width=\"50%\"></p>\n<details><summary>Show Max patcher</summary>\n<pre><code>&lt;pre&gt;&lt;code&gt;\n----------begin_max5_patcher----------\n432.3ocwU9saBBCEF+Z3onoWyL.BLcWs2ikESEqtZv1l1hhw369n+AmNItlg\nQuvZ5omxW+w2oGNDF.myZvRH3MvGfffCgAAlP5.At4AvMnlxJjzjFjh2wluF\nFYWRgaTlv78LY4nJhTsSf3cKSq2vpUUXkYuItnjElsz9XdI40tTs4o1yw1SC\nDB9zsDGoJ+hPWMSfKU1UGmlNJNBLMWONISOpibZKsBSnmzUG6XXndHZfXJHT\nE3cNiWyAI8iYbOXV.+SVRiiMHkb+gYCVJQqvWQSBHELFjAx82uxGjeUXPLO+\n1Hl978q3a3WIYOQ+xamZ5+ynbvYMpzoixeTFko+wxZZIXYEgOS2IoeVytl0a\nzDI5redTfl39Kt3w0R4Rx8F5hgCsyrcPOI2elMY.qHze+wCiJ53W9hPxpEkc\nmutF+feDZAVpHTjhvnmkjKmdeW6sP4dHTx8PIeHR+gfAKTgOBEeGDZpGBcMP\n1ZCDmuEKjtjMRzdcXMSnmNIxLkPsSMsufB7VRW91HHQaEqpsbsVXNVvlhLnc\nqrEXAsl3pKagqURyUMJps6IGY4vbiL7X32.J7svT\n-----------end_max5_patcher-----------\n&lt;/code&gt;&lt;/pre&gt;\n</code></pre>\n</details>\n<h3>Elaborate Example</h3>\n<h5>Python Code:</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">maxosc</span> <span class=\"kn\">import</span> <span class=\"n\">MaxOsc</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Instrument</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">midi_range</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">),</span> <span class=\"n\">supported_techniques</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">concert_pitch</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span>\n                 <span class=\"n\">transposing</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">midi_range</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">midi_range</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">supported_techniques</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">supported_techniques</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">concert_pitch</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"n\">concert_pitch</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">transposing</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"n\">transposing</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">max_getter</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">midi_range</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">supported_techniques</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">concert_pitch</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">transposing</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">InstrumentBank</span><span class=\"p\">(</span><span class=\"n\">MaxOsc</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instruments</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Instrument</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">add_instrument</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">midi_range</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">),</span> <span class=\"n\">supported_techniques</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span>\n                       <span class=\"n\">concert_pitch</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">440.0</span><span class=\"p\">,</span> <span class=\"n\">transposing</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"n\">instrument</span> <span class=\"o\">=</span> <span class=\"n\">Instrument</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">midi_range</span><span class=\"p\">,</span> <span class=\"n\">supported_techniques</span><span class=\"p\">,</span> <span class=\"n\">concert_pitch</span><span class=\"p\">,</span> <span class=\"n\">transposing</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instruments</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">instrument</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Added instrument '</span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">' with range=</span><span class=\"si\">{</span><span class=\"n\">midi_range</span><span class=\"si\">}</span><span class=\"s2\">, techniques=</span><span class=\"si\">{</span><span class=\"n\">supported_techniques</span><span class=\"si\">}</span><span class=\"s2\">, \"</span>\n              <span class=\"sa\">f</span><span class=\"s2\">\"concert pitch=</span><span class=\"si\">{</span><span class=\"n\">concert_pitch</span><span class=\"si\">}</span><span class=\"s2\"> and transposing=</span><span class=\"si\">{</span><span class=\"n\">transposing</span><span class=\"si\">}</span><span class=\"s2\">.\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_instruments</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">instr</span><span class=\"o\">.</span><span class=\"n\">max_getter</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">instr</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instruments</span><span class=\"p\">]</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">InstrumentBank</span><span class=\"p\">()</span>\n</pre>\n<h5>Max Code:</h5>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a6104298f4337f6e7a2233fb22432ccfb4ec8cfa/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6a6f626f723031392f70796f73632f6d61737465722f6d61786f73632f646f63732f6d6973632f726561646d65322e706e67\" width=\"95%\">\n<details><summary>Show Max patcher</summary>\n<pre><code>\n----------begin_max5_patcher----------\n1581.3ocyZF0bahCDG+YmOE6vKocFWeHDfgNSd35C2SW6K2My8PhmLXrrM4v\nHJRjX2N86dWIgcH01Dpwl1YRLFYEzt+j1c+K470qFXMkulIrf2C2BCF70qFL\nP2jpgAU2OvZUz53zHgtaVw7UqXYRqglOSxVK0s+wxTYx6dhWLCDxhjrEBPf8\nCjb3iQqgmRRSgoLHOpPvlAQBcqhMqlxSEPxH1HXFubZJC9bIWFIS3Yvpnh+W\n.uQTN8AVr9IEuLJaA6si1N5oIYrXdYl1DbqZLqbEuTlxjZC1tp0jYZyjO8g2\nE5s8uOORFuDs06KvAvPA5X+Q1CApuq5BwOPcw2djML44meR11GOQ012t5J0K\nC6HB+DOigTfIxtVBr0IBIjjo3zH3+1Ce2g1QZ5cVWB9PZfOiscqyGGR+wmOv\n4ornLAxn8IztOr4Uc1.u.HW.nED1.z777pCMZOtn5CafYr4QXz4PHiIjHFRQ\ntI1wl4oQRIKCa+okrr53aD7OLFFEtdIKMGlifaEufgDGe6JSHJ9ihsn2BlFE\ncEiia.ijPZcLNdb+Fa9dnTvTAd36UAdwQBEMPhIRjIOxd6AccZqc8lRKE3ZR\nKENxaHXbb2w8YP2VmWVTpbdbwvcVyiREWDRPaJADw4YRPrI8GJ9yhEkpO.xh\nVwDXfwFU7inLOOMACeRv+pYIQRV5FLXHMk+D13zMHmt4NqQv+tD6adTLChlK\nYEllgDAvyUgRQocjYMkz1MztFyB6QlkugKhGox37TQTNDGkoXVAKOEIAlxIQ\ntDsuICAF9NjJ5F3lqnCaHlnanYbSoloNg0PC0t+PyeqRC+Gxxb0C2Dd8RZcP\nu1o0dcSYR88pGCYRsP6CmdeYhFOWUBYewecj.MkPk35ncdSdUBkd9YvzRojm\nYcPykb.ysVVuBLCClj3dVVDpItt+YdFxM4LieXMEUuXsynOToCmZA+N5RmpW\n+04mNWF+zOv62K+jbY7SWi7mee7S6Kie5DFn7vKmedrbT+UYVrJGjXWUnHck\neUmeOfYsVrXakJsSzojT9AMklVKzyIPq3gXt7KMGku+kYtl5WyQuDy0nfMQz\nB1dy0W+ItR3JppUM6dM7Fk3dP8xagaUh9mzn1i7BlZCS5RV22hE.GBotVGCa\nsIsdnFYUR5BOFxbNmHC6BV4lo268GldsZ+s1PnGLAtcd5WlfQH39Ex4pR52n\n1tvEmfzSifUELLDjPr6OD9XBGcUXUxrj6KTm9vMvsddnRrwSz6mfWf6S+dIK\ndYVxmKYhatMpHlC4Ie4Kv0w7THksHie8ot1j1ZxRNMxVUhphrlC+nWIqAlvy\nT6NqcXC20kqq8HvV03KVJiehYkLtL1zGB1mWjg.6h5b2p8h4YcvYBu1xYO6S\niylzlTOiFVOMtUme44iyYrmPC7HaqaNVnDVvj2+LeDGtTh699rq2w84g09sE\n9OIn15LGm9ntwAiGacYTWmSa9l3SUhgL6lmXNHji6umy3JS.U6cvSbAs4v2M\n9mqW+4dlzFs18nAcIds5vX7O+t2OoZN5EUM2kS3diIk9wSO40ofamBFIlrOA\ntm+jOGwOefiUqns2+b5xh0pCHILrY2i9qeZjzkTNWvYwWQpxNge2BGrnBL4m\nXClGfKNm3x6pseWUqw787Q85WsEQylUSaQqkV3etTV33FVSYU6VVn6gdt5G9\nd00ihp8WhDAurHdq8s8b.gmGnYLgLISqhuVmT6ZT0oCh8VORNsYjnmiQhzlQ\nhbNFI6VLRNmC5oNKjWcjTpb69H41F58h9fasLGKSHEaOr.SwXmwpKnxps2zU\nKi1UKyOz0XLg0srvNaYaAeiVlZeW3d7NhoYLFpqlYjwA6tqqPizUn4NlZ3TP\ncnEzYKi1FKSomPAstM8zlvT54HgfaaRxQOGIDntskdNccjb57JncAZ10i55L\nBBZKB57H0pruNuNCpNb8w5u.vf5k34EyXE5cB0CVpcaszfcueeCkb4MzeXFt\nAC0sAC0oSFpSmqGRsCLJ5Zb8uQJWTd9irBQ0SWaTnN1G3ZGIXn91jLysZ82V\nErGS11eSKnx9kIRTcYYg1QrVWcr+Vq3HRxJSpl9PbfCoVir9+xD0+9Cls1iR\nou5aW8cPshRPJ\n-----------end_max5_patcher-----------\n</code></pre>\n</details>\n\n          </div>"}, "last_serial": 6457925, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "08a7a374cb82a56d3b1791e762e89176", "sha256": "38d8f5016173f3860c7bfe0954dc5b4e299a0974943116aee5c761510ac04bc3"}, "downloads": -1, "filename": "maxosc-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "08a7a374cb82a56d3b1791e762e89176", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13629, "upload_time": "2020-01-15T11:01:09", "upload_time_iso_8601": "2020-01-15T11:01:09.502644Z", "url": "https://files.pythonhosted.org/packages/5f/3b/65a312471aad0a962132073d7155fe45e51e4708f224237ca30331c9fe49/maxosc-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4aed9d9eab937cb40b325d1c19f99bb1", "sha256": "401315a8d09b058904719618a5bfdcd68ac3c0c5ac5cf2cbe1c3260dccd6d405"}, "downloads": -1, "filename": "maxosc-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4aed9d9eab937cb40b325d1c19f99bb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17562, "upload_time": "2020-01-15T11:01:12", "upload_time_iso_8601": "2020-01-15T11:01:12.161824Z", "url": "https://files.pythonhosted.org/packages/a1/e4/cc4ea73c722f8fb856aff20b3461e87a51bd1d7ace345b46b617f279f802/maxosc-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "4bbbe199665ade002e707cde3b480949", "sha256": "cce36d6c5e1bb5d4f5d4cf9ee2e547f4984af7600c217f29f6bdbd6b67a0d0ab"}, "downloads": -1, "filename": "maxosc-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4bbbe199665ade002e707cde3b480949", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13648, "upload_time": "2020-01-15T11:08:54", "upload_time_iso_8601": "2020-01-15T11:08:54.388488Z", "url": "https://files.pythonhosted.org/packages/72/05/eed481672d15fb923571c1721cea518f642b43ff52bedd065dddfbc7518a/maxosc-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c69f3fee5298bb89f114c66ddada081", "sha256": "c7c3a5db5acfa12f292590f21653060d3887e050ea0333debacf45789fd61b27"}, "downloads": -1, "filename": "maxosc-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8c69f3fee5298bb89f114c66ddada081", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17575, "upload_time": "2020-01-15T11:08:57", "upload_time_iso_8601": "2020-01-15T11:08:57.042784Z", "url": "https://files.pythonhosted.org/packages/5d/24/f1840d91d388bf54da8fa7a5ac13eff2edf48649932ffb8696b162e12c52/maxosc-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4bbbe199665ade002e707cde3b480949", "sha256": "cce36d6c5e1bb5d4f5d4cf9ee2e547f4984af7600c217f29f6bdbd6b67a0d0ab"}, "downloads": -1, "filename": "maxosc-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4bbbe199665ade002e707cde3b480949", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13648, "upload_time": "2020-01-15T11:08:54", "upload_time_iso_8601": "2020-01-15T11:08:54.388488Z", "url": "https://files.pythonhosted.org/packages/72/05/eed481672d15fb923571c1721cea518f642b43ff52bedd065dddfbc7518a/maxosc-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c69f3fee5298bb89f114c66ddada081", "sha256": "c7c3a5db5acfa12f292590f21653060d3887e050ea0333debacf45789fd61b27"}, "downloads": -1, "filename": "maxosc-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8c69f3fee5298bb89f114c66ddada081", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17575, "upload_time": "2020-01-15T11:08:57", "upload_time_iso_8601": "2020-01-15T11:08:57.042784Z", "url": "https://files.pythonhosted.org/packages/5d/24/f1840d91d388bf54da8fa7a5ac13eff2edf48649932ffb8696b162e12c52/maxosc-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:09 2020"}