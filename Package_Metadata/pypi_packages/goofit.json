{"info": {"author": "Henry Schreiner", "author_email": "hschrein@cern.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: Unix", "Programming Language :: C++", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering :: Physics"], "description": "GooFit for Python\n-----------------\n\nGooFit is a highly parallel fitting framework originally designed for High Energy Physics.\n\nInstallation basics\n===================\n\nThis package can be installed with pip, but uses SciKit-Build, and is build,\nfully optimized, on your system. Because of this, there are a few caveats when\nrunning a pip install if you use an old version of pip. When you build, you\nshould also use pip's ``-v`` flag, so that you can see it build (and observe\nthe configuration options). Otherwise, you might wait a very long time without\noutput (especially if CUDA was found).\n\n\nInstallation: pip\n=================\n\nUsing pip 10+::\n\n    pip install -v goofit\n\nUsing pip < 10::\n\n    pip install scikit-build # optionally cmake ninja\n    pip install -v goofit\n\n\nGooFit will automatically look for CUDA, and build in GPU mode if it finds CUDA. You can pick a specific version by passing through a CMake option (see below), or by setting an environment variable, `GOOFIT_DEVICE` before building. You may want to build with OpenMP as a backend to avoid using your GPU, or you might want the CPP version if you are using Anaconda on macOS. Here are the three common backends::\n\n    GOOFIT_DEVICE=CUDA pip install -v goofit\n    GOOFIT_DEVICE=OMP pip install -v goofit\n    GOOFIT_DEVICE=CPP pip install -v goofit\n\nThe lines above use environment variables; GooFit will find any environment variables that start with ``GOOFIT_*`` and set them as CMake defines. If you want to send arbitrary commands to CMake through PIP, you will need to pass each option through, starting with a ``--`` option. Pip will try to reuse the built version if you do not pass options, but will rebuild if you pass options, so this works for a rebuild, unlike the lines above. This is how you would do this to set OMP as the backend::\n\n    pip install -v goofit --install-option=\"--\" --install-option=\"-DGOOFIT_DEVICE=OMP\"\n    # OR\n    PIP_INSTALL_OPTION=\"-- -DGOOFIT_DEVICE=OMP\" pip install -v goofit\n\n\nInstallation: local\n===================\n\nIf you want to add PDFs to GooFit, or use GooFit pacakges, you should be working in a local directory using git. In the following example, I'm assuming you've set up SSH keys with GitHub; you can use https instead if you prefer by changing the URL to ``https://github.com/GooFit/GooFit.git``::\n\n    git clone --recursive git@github.com:GooFit/GooFit.git\n    cd goofit\n\nLocal pip\n~~~~~~~~~\n\nThe normal install here works, though as usual you should include verbose output and you should be in a virtual environment (standard practice)::\n\n    pip install -v .", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://goofit.github.io", "keywords": "", "license": "LGPL 3.0", "maintainer": "", "maintainer_email": "", "name": "goofit", "package_url": "https://pypi.org/project/goofit/", "platform": "POSIX", "project_url": "https://pypi.org/project/goofit/", "project_urls": {"Homepage": "https://goofit.github.io"}, "release_url": "https://pypi.org/project/goofit/2.2.3/", "requires_dist": null, "requires_python": "", "summary": "GooFit fitting package", "version": "2.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>GooFit is a highly parallel fitting framework originally designed for High Energy Physics.</p>\n<div id=\"installation-basics\">\n<h2>Installation basics</h2>\n<p>This package can be installed with pip, but uses SciKit-Build, and is build,\nfully optimized, on your system. Because of this, there are a few caveats when\nrunning a pip install if you use an old version of pip. When you build, you\nshould also use pip\u2019s <tt><span class=\"pre\">-v</span></tt> flag, so that you can see it build (and observe\nthe configuration options). Otherwise, you might wait a very long time without\noutput (especially if CUDA was found).</p>\n</div>\n<div id=\"installation-pip\">\n<h2>Installation: pip</h2>\n<p>Using pip 10+:</p>\n<pre>pip install -v goofit\n</pre>\n<p>Using pip &lt; 10:</p>\n<pre>pip install scikit-build # optionally cmake ninja\npip install -v goofit\n</pre>\n<p>GooFit will automatically look for CUDA, and build in GPU mode if it finds CUDA. You can pick a specific version by passing through a CMake option (see below), or by setting an environment variable, <cite>GOOFIT_DEVICE</cite> before building. You may want to build with OpenMP as a backend to avoid using your GPU, or you might want the CPP version if you are using Anaconda on macOS. Here are the three common backends:</p>\n<pre>GOOFIT_DEVICE=CUDA pip install -v goofit\nGOOFIT_DEVICE=OMP pip install -v goofit\nGOOFIT_DEVICE=CPP pip install -v goofit\n</pre>\n<p>The lines above use environment variables; GooFit will find any environment variables that start with <tt>GOOFIT_*</tt> and set them as CMake defines. If you want to send arbitrary commands to CMake through PIP, you will need to pass each option through, starting with a <tt><span class=\"pre\">--</span></tt> option. Pip will try to reuse the built version if you do not pass options, but will rebuild if you pass options, so this works for a rebuild, unlike the lines above. This is how you would do this to set OMP as the backend:</p>\n<pre>pip install -v goofit --install-option=\"--\" --install-option=\"-DGOOFIT_DEVICE=OMP\"\n# OR\nPIP_INSTALL_OPTION=\"-- -DGOOFIT_DEVICE=OMP\" pip install -v goofit\n</pre>\n</div>\n<div id=\"installation-local\">\n<h2>Installation: local</h2>\n<p>If you want to add PDFs to GooFit, or use GooFit pacakges, you should be working in a local directory using git. In the following example, I\u2019m assuming you\u2019ve set up SSH keys with GitHub; you can use https instead if you prefer by changing the URL to <tt><span class=\"pre\">https://github.com/GooFit/GooFit.git</span></tt>:</p>\n<pre>git clone --recursive git@github.com:GooFit/GooFit.git\ncd goofit\n</pre>\n<div id=\"local-pip\">\n<h3>Local pip</h3>\n<p>The normal install here works, though as usual you should include verbose output and you should be in a virtual environment (standard practice):</p>\n<pre>pip install -v .\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6552214, "releases": {"2.1.0": [{"comment_text": "", "digests": {"md5": "62c4a53a74c36f3de552d5c47cff9bd3", "sha256": "06f606c54d5577a908f0e1bd9e999f6ee04f8bf56f2802df60071cfae3d0a8d0"}, "downloads": -1, "filename": "goofit-2.1.0.tar.gz", "has_sig": false, "md5_digest": "62c4a53a74c36f3de552d5c47cff9bd3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9054619, "upload_time": "2017-12-08T14:20:40", "upload_time_iso_8601": "2017-12-08T14:20:40.126809Z", "url": "https://files.pythonhosted.org/packages/d5/21/f528ef403e056328e96f35e1ec2a358c67732778e860ce80b9276b39f5bd/goofit-2.1.0.tar.gz", "yanked": false}], "2.1.0.dev1": [{"comment_text": "", "digests": {"md5": "d8a83c513d2ab70b9d8ca39afdb86e2e", "sha256": "dac7b8d13161a3a9f45a3166b253820bb77fb2ae819bab0f5f7542e314295e46"}, "downloads": -1, "filename": "goofit-2.1.0.dev1.tar.gz", "has_sig": false, "md5_digest": "d8a83c513d2ab70b9d8ca39afdb86e2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3900449, "upload_time": "2017-08-01T21:48:37", "upload_time_iso_8601": "2017-08-01T21:48:37.617943Z", "url": "https://files.pythonhosted.org/packages/98/94/b37353543da1acb95ff9824729436b8529444fb118e8d9a71ad767ff3742/goofit-2.1.0.dev1.tar.gz", "yanked": false}], "2.1.0.dev2": [{"comment_text": "", "digests": {"md5": "ad554b90e0c22e458f7c9e8cecd403ef", "sha256": "ad695be4da5b1a86a32786b114f4d0362cc6f77c70def8f77b1f8f79791b73dc"}, "downloads": -1, "filename": "goofit-2.1.0.dev2.tar.gz", "has_sig": false, "md5_digest": "ad554b90e0c22e458f7c9e8cecd403ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5996796, "upload_time": "2017-08-02T15:16:43", "upload_time_iso_8601": "2017-08-02T15:16:43.024245Z", "url": "https://files.pythonhosted.org/packages/46/de/397f24f9b88922d6a83bd79928b0c5d4a2d5a97655c43cb695de14cd21b0/goofit-2.1.0.dev2.tar.gz", "yanked": false}], "2.1.0.dev3": [{"comment_text": "", "digests": {"md5": "994a8e17d788ea3285bf8f0453425b36", "sha256": "ff762743c778c5a311f4c30a1c6d29070a95364ab5fd151ed424f5c5f8e56837"}, "downloads": -1, "filename": "goofit-2.1.0.dev3.tar.gz", "has_sig": false, "md5_digest": "994a8e17d788ea3285bf8f0453425b36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6196927, "upload_time": "2017-09-27T15:17:08", "upload_time_iso_8601": "2017-09-27T15:17:08.578949Z", "url": "https://files.pythonhosted.org/packages/79/fa/6b44faa3979bcab922e45b98c71a88ac1ae8cc75a44871f1468f19fa1060/goofit-2.1.0.dev3.tar.gz", "yanked": false}], "2.1.0b1": [{"comment_text": "", "digests": {"md5": "a565d8f93d46fa8dd795a8ffe3d28b7b", "sha256": "242b362117acbce5da1916255192612414b930ad6a1aa4c5003c9fc0d144d562"}, "downloads": -1, "filename": "goofit-2.1.0b1.tar.gz", "has_sig": false, "md5_digest": "a565d8f93d46fa8dd795a8ffe3d28b7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6213882, "upload_time": "2017-11-09T16:04:12", "upload_time_iso_8601": "2017-11-09T16:04:12.039985Z", "url": "https://files.pythonhosted.org/packages/30/e5/e4c418c32cd621395072f200545e13868555fe774014a0cf81c60a520242/goofit-2.1.0b1.tar.gz", "yanked": false}], "2.1.0b3": [{"comment_text": "", "digests": {"md5": "1f82221382f357ee84f651b3775815eb", "sha256": "db70960e12f33cdefa28fce769047a59ba8e167bf001a7a2ed23ab59aab8c3cf"}, "downloads": -1, "filename": "goofit-2.1.0b3.tar.gz", "has_sig": false, "md5_digest": "1f82221382f357ee84f651b3775815eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8368689, "upload_time": "2017-11-30T22:31:54", "upload_time_iso_8601": "2017-11-30T22:31:54.699481Z", "url": "https://files.pythonhosted.org/packages/e6/f2/9f8464585fb2958d77414170d470da51cb381b32a371e8faa4a45e8b3311/goofit-2.1.0b3.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "47cd51e38b265d2404dbdfde04ccd723", "sha256": "9e1b2e2bb639e1bd00073ec0e4c0bc68f39e9e0334ed2622603cf0493e320d51"}, "downloads": -1, "filename": "goofit-2.1.1.tar.gz", "has_sig": false, "md5_digest": "47cd51e38b265d2404dbdfde04ccd723", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8383503, "upload_time": "2018-02-12T15:57:13", "upload_time_iso_8601": "2018-02-12T15:57:13.836016Z", "url": "https://files.pythonhosted.org/packages/61/34/f655e64634d27ffa38d32aed8fe35adfe0b51a27ab68d4fcc174981059df/goofit-2.1.1.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "2907c05583a8ba2dabb028f2bebca146", "sha256": "edecb9f0281d129f98f6bbdaa90d2c0f3af3301caa7fe0db8569b8c4df563e2d"}, "downloads": -1, "filename": "goofit-2.1.2.tar.gz", "has_sig": false, "md5_digest": "2907c05583a8ba2dabb028f2bebca146", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8623231, "upload_time": "2018-03-12T14:22:51", "upload_time_iso_8601": "2018-03-12T14:22:51.283813Z", "url": "https://files.pythonhosted.org/packages/07/48/6c62ace544e6ac34f761bfa4f6edf00df28de9fb47d1425815ef5529c82d/goofit-2.1.2.tar.gz", "yanked": false}], "2.1.3": [{"comment_text": "", "digests": {"md5": "e15224b7eb16de1ad1e9e7dc6e0cfb4f", "sha256": "71f043f6a56ed66b66a83fc350337644a2da37052c44b5e3cbd47e3b9a7ee41f"}, "downloads": -1, "filename": "goofit-2.1.3.tar.gz", "has_sig": false, "md5_digest": "e15224b7eb16de1ad1e9e7dc6e0cfb4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8756751, "upload_time": "2018-04-21T19:49:56", "upload_time_iso_8601": "2018-04-21T19:49:56.363929Z", "url": "https://files.pythonhosted.org/packages/0d/ce/085bdd9f55040c9389a300f9aa749b5a6e27c15a30df8964b1aba19c852b/goofit-2.1.3.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "7e45654db1bdbb17ad5a773aecc63c29", "sha256": "ef8cc14cb79734aa2f3e69b52f8a3a8c26946d9469e1db465277b932241ccd1c"}, "downloads": -1, "filename": "goofit-2.2.0.tar.gz", "has_sig": false, "md5_digest": "7e45654db1bdbb17ad5a773aecc63c29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7841112, "upload_time": "2018-07-31T12:41:52", "upload_time_iso_8601": "2018-07-31T12:41:52.473270Z", "url": "https://files.pythonhosted.org/packages/f6/0d/e27d3d5bb9606e495ee2753735ceab2c18f92a7f0add78b55a99f3dccbaa/goofit-2.2.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "1cf027ebbff7e9624a317eb9dae25071", "sha256": "9283b180f189f0d08c3f4c6c3ed95ffccf0986336891334e3f8acbaf624166d1"}, "downloads": -1, "filename": "goofit-2.2.1.tar.gz", "has_sig": false, "md5_digest": "1cf027ebbff7e9624a317eb9dae25071", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8160255, "upload_time": "2018-10-23T11:44:03", "upload_time_iso_8601": "2018-10-23T11:44:03.615987Z", "url": "https://files.pythonhosted.org/packages/ee/f1/7b689dbcde5255772d9df7c1acbc094caaa2d92546429b023ab8bf84818d/goofit-2.2.1.tar.gz", "yanked": false}], "2.2.2": [{"comment_text": "", "digests": {"md5": "0ab0e933bb652a21414ed694971a090a", "sha256": "82884fd3021555da0953776f81199cbea60287f6bca87b0ecdaa5dd212692c67"}, "downloads": -1, "filename": "goofit-2.2.2.tar.gz", "has_sig": false, "md5_digest": "0ab0e933bb652a21414ed694971a090a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8398493, "upload_time": "2019-02-01T12:03:25", "upload_time_iso_8601": "2019-02-01T12:03:25.600928Z", "url": "https://files.pythonhosted.org/packages/b3/5a/1418be85b1c1d8f2fca895e3dce573eafe6eb9a45849c6dcce8f480ba223/goofit-2.2.2.tar.gz", "yanked": false}], "2.2.3": [{"comment_text": "", "digests": {"md5": "fb25d33935ad6dc41eb8c6ec1161ab5e", "sha256": "7f80e9a8091bc029a92f562539e330587245885329456d8b7783127b6ae7aae8"}, "downloads": -1, "filename": "goofit-2.2.3.tar.gz", "has_sig": false, "md5_digest": "fb25d33935ad6dc41eb8c6ec1161ab5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5847576, "upload_time": "2020-01-31T22:29:17", "upload_time_iso_8601": "2020-01-31T22:29:17.150315Z", "url": "https://files.pythonhosted.org/packages/85/0e/22eb8c8b93e88615747683d5e2f1fa10edbb9549166f47ee75fcf0697479/goofit-2.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fb25d33935ad6dc41eb8c6ec1161ab5e", "sha256": "7f80e9a8091bc029a92f562539e330587245885329456d8b7783127b6ae7aae8"}, "downloads": -1, "filename": "goofit-2.2.3.tar.gz", "has_sig": false, "md5_digest": "fb25d33935ad6dc41eb8c6ec1161ab5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5847576, "upload_time": "2020-01-31T22:29:17", "upload_time_iso_8601": "2020-01-31T22:29:17.150315Z", "url": "https://files.pythonhosted.org/packages/85/0e/22eb8c8b93e88615747683d5e2f1fa10edbb9549166f47ee75fcf0697479/goofit-2.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:49 2020"}