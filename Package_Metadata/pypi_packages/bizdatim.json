{"info": {"author": "Polyconseil Dev Team", "author_email": "opensource+bizdatim@polyconseil.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Office/Business :: Scheduling", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "ABOUT\n=====\n\n.. image:: https://secure.travis-ci.org/Polyconseil/bizdatim.png?branch=master\n    :target: http://travis-ci.org/Polyconseil/bizdatim/\n\n.. image:: https://img.shields.io/pypi/v/bizdatim.svg\n    :target: https://pypi.python.org.pypi/bizdatim/\n    :alt: Latest Version\n\n.. image:: https://img.shields.io/pypi/pyversions/bizdatim.svg\n    :target: https://pypi.python.org/pypi/bizdatim/\n    :alt: Supported Python versions\n\n.. image:: https://img.shields.io/pypi/wheel/bizdatim.svg\n    :target: https://pypi.python.org/pypi/bizdatim/\n    :alt: Wheel status\n\n.. image:: https://img.shields.io/pypi/l/bizdatim.svg\n    :target: https://pypi.python.org/pypi/bizdatim/\n    :alt: License\n\nbizdatim is a simple library for performing business day arithmetic.\n\nSource is hosted at https://github.com/Polyconseil/bizdatim.\n\n\nKNOWN LIMITATIONS\n=================\n\nRotating weekends/holidays are not supported (e.g., two days working, third day\noff).\n\nThe business hour arithmetic is limited to additions.\n\n\nDEFINITIONS\n===========\n\nWeekend\n    Weekly repeating non-business day. Weekend does not have to be at the end\n    (or beginning) or the week. Weekends do not have to be consecutive days.\n\nHoliday\n    Like weekend, holiday is a non-business day. Unlike weekend, holiday does\n    not have weekly regularity. It is just a date. Holiday can coincide with\n    weekend.\n\nWorking hours\n    The starting and ending time of a business day.\n\nPolicy\n    Is a (possibly empty) collection of weekends, holidays and working hours. All calculations\n    are performed within a policy.\n\n\nSAMPLE USAGE\n============\n\nAll business day arithmetic is performed in the context of policy::\n    \n    >>> from bizdatim import Polycy, SAT, SUN\n    >>> from datetime import date\n    >>> policy = Policy(weekends=(SAT, SUN), holidays=(date(2011,7,1),))\n    >>> day = date(2011, 6, 29) # Wednesday\n    >>> print(policy.add(day, 2))  # add 2 business dates -> Monday after the long weekend\n    datetime.date(2011, 7, 4)\n    >>> print(policy.biz_day_delta(date(2011, 7, 4), date(2011, 6, 30)))  # one holiday, one weekend between\n    1\n\nThere is also the possibility to do arithmetic on business hours::\n\n    >>> policy = Policy(weekends=(SAT, SUN), holidays=(date(2011,7,1)), hours=(time(8), time(20)))\n    >>> day = datetime(2011, 6, 29, 14, 30)\n    >>> policy.add(day, timedelta(days=1, hours=5))  # The day after, in the afternoon\n    datetime.datetime(2011, 6, 29, 19, 30)\n    >>> policy.add(day, timedelta(days=1, hours=10))  # Too many hours, will finish the monday after the long weekend\n    datetime.datetime(2011, 7, 4, 12, 30)\n\nPolicy method docstrings contain more examples.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Polyconseil/bizdatim", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "bizdatim", "package_url": "https://pypi.org/project/bizdatim/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/bizdatim/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Polyconseil/bizdatim"}, "release_url": "https://pypi.org/project/bizdatim/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Module for performing simple business day arithmetic; forked from python-bizdatetime", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about\">\n<h2>ABOUT</h2>\n<a href=\"http://travis-ci.org/Polyconseil/bizdatim/\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/Polyconseil/bizdatim.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d32ea5b2edaa60dec9ff82efd62fe478c793c95b/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f506f6c79636f6e7365696c2f62697a646174696d2e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org.pypi/bizdatim/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c782415761367bee2512f773740bdd6e4dc4c3cf/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f62697a646174696d2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/bizdatim/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6772efc6d236ece59af59e141cee1d4705638328/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f62697a646174696d2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/bizdatim/\" rel=\"nofollow\"><img alt=\"Wheel status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4b670bc11a46908616646356405e22a21ea22f86/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f62697a646174696d2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/bizdatim/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/352b4e07eac66ab6a1398981292f59f847f9c61c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f62697a646174696d2e737667\"></a>\n<p>bizdatim is a simple library for performing business day arithmetic.</p>\n<p>Source is hosted at <a href=\"https://github.com/Polyconseil/bizdatim\" rel=\"nofollow\">https://github.com/Polyconseil/bizdatim</a>.</p>\n</div>\n<div id=\"known-limitations\">\n<h2>KNOWN LIMITATIONS</h2>\n<p>Rotating weekends/holidays are not supported (e.g., two days working, third day\noff).</p>\n<p>The business hour arithmetic is limited to additions.</p>\n</div>\n<div id=\"definitions\">\n<h2>DEFINITIONS</h2>\n<dl>\n<dt>Weekend</dt>\n<dd>Weekly repeating non-business day. Weekend does not have to be at the end\n(or beginning) or the week. Weekends do not have to be consecutive days.</dd>\n<dt>Holiday</dt>\n<dd>Like weekend, holiday is a non-business day. Unlike weekend, holiday does\nnot have weekly regularity. It is just a date. Holiday can coincide with\nweekend.</dd>\n<dt>Working hours</dt>\n<dd>The starting and ending time of a business day.</dd>\n<dt>Policy</dt>\n<dd>Is a (possibly empty) collection of weekends, holidays and working hours. All calculations\nare performed within a policy.</dd>\n</dl>\n</div>\n<div id=\"sample-usage\">\n<h2>SAMPLE USAGE</h2>\n<p>All business day arithmetic is performed in the context of policy:</p>\n<pre>&gt;&gt;&gt; from bizdatim import Polycy, SAT, SUN\n&gt;&gt;&gt; from datetime import date\n&gt;&gt;&gt; policy = Policy(weekends=(SAT, SUN), holidays=(date(2011,7,1),))\n&gt;&gt;&gt; day = date(2011, 6, 29) # Wednesday\n&gt;&gt;&gt; print(policy.add(day, 2))  # add 2 business dates -&gt; Monday after the long weekend\ndatetime.date(2011, 7, 4)\n&gt;&gt;&gt; print(policy.biz_day_delta(date(2011, 7, 4), date(2011, 6, 30)))  # one holiday, one weekend between\n1\n</pre>\n<p>There is also the possibility to do arithmetic on business hours:</p>\n<pre>&gt;&gt;&gt; policy = Policy(weekends=(SAT, SUN), holidays=(date(2011,7,1)), hours=(time(8), time(20)))\n&gt;&gt;&gt; day = datetime(2011, 6, 29, 14, 30)\n&gt;&gt;&gt; policy.add(day, timedelta(days=1, hours=5))  # The day after, in the afternoon\ndatetime.datetime(2011, 6, 29, 19, 30)\n&gt;&gt;&gt; policy.add(day, timedelta(days=1, hours=10))  # Too many hours, will finish the monday after the long weekend\ndatetime.datetime(2011, 7, 4, 12, 30)\n</pre>\n<p>Policy method docstrings contain more examples.</p>\n</div>\n\n          </div>"}, "last_serial": 2477629, "releases": {"0.2": [], "0.2.0": [{"comment_text": "", "digests": {"md5": "bcca2f3e3b629e40797c31b88acda2c4", "sha256": "0e2bbff3f56529e3f70d868df6f3415e6e4e1e1b751367124099a2d9002a3c24"}, "downloads": -1, "filename": "bizdatim-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bcca2f3e3b629e40797c31b88acda2c4", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 7410, "upload_time": "2016-11-22T23:39:32", "upload_time_iso_8601": "2016-11-22T23:39:32.884803Z", "url": "https://files.pythonhosted.org/packages/96/0c/a0b3fea7362f5ceddf1f78ac626905e5ebef41dde02cdac112462ac1de9e/bizdatim-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc335e22641b34abe06814573dc9828c", "sha256": "8f34c814aee9a4cb74e00fe9e3b8f9d943f6b877579c4495abd39cc58ebcd6e7"}, "downloads": -1, "filename": "bizdatim-0.2.0.tar.gz", "has_sig": false, "md5_digest": "cc335e22641b34abe06814573dc9828c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6169, "upload_time": "2016-11-22T23:39:30", "upload_time_iso_8601": "2016-11-22T23:39:30.296797Z", "url": "https://files.pythonhosted.org/packages/cb/fe/742dd9ac52ccccef6105449861b7d64da2a9c97414a52a64dc64d38e487a/bizdatim-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bcca2f3e3b629e40797c31b88acda2c4", "sha256": "0e2bbff3f56529e3f70d868df6f3415e6e4e1e1b751367124099a2d9002a3c24"}, "downloads": -1, "filename": "bizdatim-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bcca2f3e3b629e40797c31b88acda2c4", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 7410, "upload_time": "2016-11-22T23:39:32", "upload_time_iso_8601": "2016-11-22T23:39:32.884803Z", "url": "https://files.pythonhosted.org/packages/96/0c/a0b3fea7362f5ceddf1f78ac626905e5ebef41dde02cdac112462ac1de9e/bizdatim-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc335e22641b34abe06814573dc9828c", "sha256": "8f34c814aee9a4cb74e00fe9e3b8f9d943f6b877579c4495abd39cc58ebcd6e7"}, "downloads": -1, "filename": "bizdatim-0.2.0.tar.gz", "has_sig": false, "md5_digest": "cc335e22641b34abe06814573dc9828c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6169, "upload_time": "2016-11-22T23:39:30", "upload_time_iso_8601": "2016-11-22T23:39:30.296797Z", "url": "https://files.pythonhosted.org/packages/cb/fe/742dd9ac52ccccef6105449861b7d64da2a9c97414a52a64dc64d38e487a/bizdatim-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:12 2020"}