{"info": {"author": "David Wittman", "author_email": "david@wittman.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Utilities"], "description": "# Simple Cloud Files Uploader\nPython script to quickly upload files to [Rackspace Cloud Files](http://www.rackspace.com/cloud/files/) or [OpenStack Swift](http://swift.openstack.org). Originally developed to make one-liner uploads more manageable. Supports input via file arguments or standard input.\n\n## Installation\nFor the love of Guido, use [virtualenv](http://www.virtualenv.org/en/latest/index.html) with whichever of the following methods you choose:\n\n### pip\n``` bash\n$ pip install cfupload\n```\n\n### EasyInstall\n``` bash\n$ easy_install cfupload\n```\n\n### setuptools\n``` bash\n$ git clone git://github.com/DavidWittman/Simple-Cloud-Files-Uploader.git\n$ cd Simple-Cloud-Files-Uploader\n$ python setup.py install\n```\n\n## Usage\n\n```\nusage: cfupload [-h] [-k <api key>] [-u <username>] [-a <auth_url>] [-s]\n                [-o <filename>] [-q] [-c]\n                container [files [files ...]]\n\nUpload files to Rackspace Cloud Files or Openstack Swift.\n\npositional arguments:\n  container             Container name in Cloud Files or Openstack Swift\n  files                 The file(s) to upload\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nCloud Files Connection Information:\n  -k <api key>, --apikey <api key>\n                        API key. Defaults to env[CLOUD_FILES_APIKEY]\n  -u <username>, --user <username>\n                        Username. Defaults to env[CLOUD_FILES_USERNAME]\n  -a <auth_url>, --auth <auth_url>\n                        Authentication endpoint. Defaults to\n                        env[CLOUD_FILES_AUTH_URL]\n  -s, --snet            Use ServiceNet for connections\n\nOutput options:\n  -o <filename>, --file <filename>\n                        Destination filename in Cloud Files or Openstack Swift\n  -q                    Silence output\n  -c, --cdn             Print CDN URL to stdout\n```\n\n## Examples\n\nEach of these examples assume you have the environment variables `CLOUD_FILES_AUTH_URL`, `CLOUD_FILES_USERNAME` and `CLOUD_FILES_APIKEY` exported. Alternatively, you can pass the username, auth_url and API key in as options with `-u`,`-a` and `-k`, respectively.\n\n### Upload a single file\n\n``` bash\n$ cfupload mycontainer ~/F4z2L.gif\n```\n\n### Upload multiple files\n\n``` bash\n$ cfupload gifs ~/Pictures/*.gif\n```\n\n### Upload from stdin\n\n``` bash\n$ tar cvzf - ~/important/* | cfupload -o backup-$(date '+%Y%m$d') backups\n```\n\n## Pro Tips\n* Export environment variables `CLOUD_FILES_{APIKEY,USERNAME,AUTH_URL}` in your bash_profile to prevent the need to specify these options each time you run cfupload\n* A destination filename must be provided with -o when uploading from standard input\n* Pipe your files from standard input to make cronjob backups stupid easy:\n`# mysqldump --all-databases | gzip -c | cfupload -o backup-$(date '+%Y%m%d').sql.gz container`", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DavidWittman/Simple-Cloud-Files-Uploader", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "cfupload", "package_url": "https://pypi.org/project/cfupload/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cfupload/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/DavidWittman/Simple-Cloud-Files-Uploader"}, "release_url": "https://pypi.org/project/cfupload/0.5.1/", "requires_dist": null, "requires_python": null, "summary": "A very simple Rackspace Cloud Files uploader", "version": "0.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Simple Cloud Files Uploader<br>Python script to quickly upload files to [Rackspace Cloud Files](http://www.rackspace.com/cloud/files/) or [OpenStack Swift](http://swift.openstack.org). Originally developed to make one-liner uploads more manageable. Supports input via file arguments or standard input.<br><br>## Installation<br>For the love of Guido, use [virtualenv](http://www.virtualenv.org/en/latest/index.html) with whichever of the following methods you choose:<br><br>### pip<br>``` bash<br>$ pip install cfupload<br>```<br><br>### EasyInstall<br>``` bash<br>$ easy_install cfupload<br>```<br><br>### setuptools<br>``` bash<br>$ git clone git://github.com/DavidWittman/Simple-Cloud-Files-Uploader.git<br>$ cd Simple-Cloud-Files-Uploader<br>$ python setup.py install<br>```<br><br>## Usage<br><br>```<br>usage: cfupload [-h] [-k &lt;api key&gt;] [-u &lt;username&gt;] [-a &lt;auth_url&gt;] [-s]<br>                [-o &lt;filename&gt;] [-q] [-c]<br>                container [files [files ...]]<br><br>Upload files to Rackspace Cloud Files or Openstack Swift.<br><br>positional arguments:<br>  container             Container name in Cloud Files or Openstack Swift<br>  files                 The file(s) to upload<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br><br>Cloud Files Connection Information:<br>  -k &lt;api key&gt;, --apikey &lt;api key&gt;<br>                        API key. Defaults to env[CLOUD_FILES_APIKEY]<br>  -u &lt;username&gt;, --user &lt;username&gt;<br>                        Username. Defaults to env[CLOUD_FILES_USERNAME]<br>  -a &lt;auth_url&gt;, --auth &lt;auth_url&gt;<br>                        Authentication endpoint. Defaults to<br>                        env[CLOUD_FILES_AUTH_URL]<br>  -s, --snet            Use ServiceNet for connections<br><br>Output options:<br>  -o &lt;filename&gt;, --file &lt;filename&gt;<br>                        Destination filename in Cloud Files or Openstack Swift<br>  -q                    Silence output<br>  -c, --cdn             Print CDN URL to stdout<br>```<br><br>## Examples<br><br>Each of these examples assume you have the environment variables `CLOUD_FILES_AUTH_URL`, `CLOUD_FILES_USERNAME` and `CLOUD_FILES_APIKEY` exported. Alternatively, you can pass the username, auth_url and API key in as options with `-u`,`-a` and `-k`, respectively.<br><br>### Upload a single file<br><br>``` bash<br>$ cfupload mycontainer ~/F4z2L.gif<br>```<br><br>### Upload multiple files<br><br>``` bash<br>$ cfupload gifs ~/Pictures/*.gif<br>```<br><br>### Upload from stdin<br><br>``` bash<br>$ tar cvzf - ~/important/* | cfupload -o backup-$(date '+%Y%m$d') backups<br>```<br><br>## Pro Tips<br>* Export environment variables `CLOUD_FILES_{APIKEY,USERNAME,AUTH_URL}` in your bash_profile to prevent the need to specify these options each time you run cfupload<br>* A destination filename must be provided with -o when uploading from standard input<br>* Pipe your files from standard input to make cronjob backups stupid easy:<br>`# mysqldump --all-databases | gzip -c | cfupload -o backup-$(date '+%Y%m%d').sql.gz container`\n          </div>"}, "last_serial": 787330, "releases": {"0.4": [{"comment_text": "", "digests": {"md5": "2d85bb40d5ab69383d7d8f4bebb152a1", "sha256": "20d14c24fa0021e8857f4208bc5c2735ff97d67caba6266314fd1b68fb653209"}, "downloads": -1, "filename": "cfupload-0.4.tar.gz", "has_sig": false, "md5_digest": "2d85bb40d5ab69383d7d8f4bebb152a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2616, "upload_time": "2012-10-05T07:02:44", "upload_time_iso_8601": "2012-10-05T07:02:44.497351Z", "url": "https://files.pythonhosted.org/packages/a2/81/520c24cce2b64a77291eb7f94b131d2ff822ffb70573851896323074858b/cfupload-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "5f5a0dcb5fa499d9da0ba47374b79f75", "sha256": "29e29804d12c1fd3bfe215be4c523b947ad6e881aea51e7b898088b38a02157a"}, "downloads": -1, "filename": "cfupload-0.5.tar.gz", "has_sig": false, "md5_digest": "5f5a0dcb5fa499d9da0ba47374b79f75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4061, "upload_time": "2013-02-02T20:02:09", "upload_time_iso_8601": "2013-02-02T20:02:09.446759Z", "url": "https://files.pythonhosted.org/packages/af/8e/b0569d7327a28e70e394225b84c0cdbec8aae47f0b90a5d08ad2cfa1e44f/cfupload-0.5.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "e1baf7575fd04f561a91f1b622428f9c", "sha256": "2d49e371ae84e5bebbfa289edb3fd8e093face3855fd9d51cf964fc54a91b06e"}, "downloads": -1, "filename": "cfupload-0.5.1.tar.gz", "has_sig": false, "md5_digest": "e1baf7575fd04f561a91f1b622428f9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4372, "upload_time": "2013-02-03T00:45:07", "upload_time_iso_8601": "2013-02-03T00:45:07.779205Z", "url": "https://files.pythonhosted.org/packages/48/99/b6ca0bdb4f7003dc952ffa3263fedbaff5bbf2f5daa6692688928a86c2a4/cfupload-0.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e1baf7575fd04f561a91f1b622428f9c", "sha256": "2d49e371ae84e5bebbfa289edb3fd8e093face3855fd9d51cf964fc54a91b06e"}, "downloads": -1, "filename": "cfupload-0.5.1.tar.gz", "has_sig": false, "md5_digest": "e1baf7575fd04f561a91f1b622428f9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4372, "upload_time": "2013-02-03T00:45:07", "upload_time_iso_8601": "2013-02-03T00:45:07.779205Z", "url": "https://files.pythonhosted.org/packages/48/99/b6ca0bdb4f7003dc952ffa3263fedbaff5bbf2f5daa6692688928a86c2a4/cfupload-0.5.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:36 2020"}