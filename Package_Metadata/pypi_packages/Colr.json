{"info": {"author": "Christopher Welborn", "author_email": "cj@welbornprod.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Colr\n====\n\nA python module for using terminal colors. It contains a simple\n``color`` function that accepts style and color names, and outputs a\nstring with escape codes, but also has all colors and styles as\nchainable methods on the ``Colr`` object.\n\n--------------\n\nDependencies:\n-------------\n\nSystem\n~~~~~~\n\n-  **Python 3.5+** - This library uses ``yield from`` and the ``typing``\n   module. `Python 2 support is not planned. <#python-2>`__\n\nModules\n~~~~~~~\n\nThere are no dependencies required for importing this library, however:\n\n-  `Docopt <https://github.com/docopt/docopt>`__ - Only required for the\n   command line tools (`colr <#colr-tool>`__ and\n   `colr-run <#colr-run>`__) and the `colr.docopt\n   wrapper <#colrdocopt>`__, not the library itself.\n\nInstallation:\n-------------\n\nColr is listed on `PyPi <https://pypi.python.org/pypi/Colr>`__, and can\nbe installed using `pip <https://pip.pypa.io/en/stable/installing/>`__:\n\n::\n\n    pip install colr\n\nOr you can clone the repo on\n`GitHub <https://github.com/welbornprod/colr>`__ and install it from the\ncommand line:\n\n::\n\n    git clone https://github.com/welbornprod/colr.git\n    cd colr\n    python3 setup.py install\n\n--------------\n\nExamples:\n---------\n\nSimple:\n~~~~~~~\n\n.. code:: python\n\n    from colr import color\n    print(color('Hello world.', fore='red', style='bright'))\n\nChainable:\n~~~~~~~~~~\n\n.. code:: python\n\n    from colr import Colr as C\n    print(\n        C()\n        .bright().red('Hello ')\n        .normal().blue('World')\n    )\n\n    # Background colors start with 'bg', and AttributeError will be raised on\n    # invalid method names.\n    print(C('Hello ', fore='red').bgwhite().blue('World'))\n\nExamples (256 Colors):\n----------------------\n\nSimple:\n~~~~~~~\n\n.. code:: python\n\n    from colr import color\n    # Invalid color names/numbers raise a ValueError.\n    print(color('Hello world', fore=125, back=80))\n\nChainable:\n~~~~~~~~~~\n\n.. code:: python\n\n    from colr import Colr as C\n    # Foreground colors start with 'f_'\n    # Background colors start with 'b_'\n    print(C().f_125().b_80('Hello World'))\n\nExamples (True Color):\n----------------------\n\nSimple:\n~~~~~~~\n\n.. code:: python\n\n    from colr import color\n    print(color('Hello there.', fore=(255, 0, 0), back=(0, 0, 0)))\n\nChainable:\n~~~~~~~~~~\n\n.. code:: python\n\n    from colr import Colr as C\n    # Foreground colors are set with the `rgb()` method.\n    # Background colors are set with the `b_rgb()` method.\n    # Text for the chained methods should be chained after or during\n    # the call to the methods.\n    print(C().b_rgb(0, 0, 0).rgb(255, 0, 0, 'Hello there.'))\n\nExamples (Hex):\n---------------\n\nSimple:\n~~~~~~~\n\n.. code:: python\n\n    from colr import color\n    # When not using the Colr.hex method, the closest matching extended code\n    # is used. For true color, just use:\n    #     fore=hex2rgb('ff0000')\n    # or\n    #     Colr.hex('ff0000', rgb_mode=True)\n    print(color('Hello there.', fore='ff0000', back='000'))\n\nChainable:\n~~~~~~~~~~\n\n.. code:: python\n\n    from colr import Colr as C\n    # Foreground colors are set with the `hex()` method.\n    # Background colors are set with the `b_hex()` method.\n    # Text for the chained methods should be chained after or during\n    # the call to the methods.\n    print(C().b_hex('#000').hex('ff0000', 'Hello there.'))\n\n    # With rgb_mode set, these are the same:\n    print(C().hex('ff0000', 'test', rgb_mode=True))\n    print(C().rgb(255, 0, 0, 'test'))\n\n--------------\n\nDocumentation:\n--------------\n\nDocumentation for the ``colr`` API can be found in the GitHub repo\n(`github.com/welbornprod/colr <https://github.com/welbornprod/colr>`__):\n\n+-------------------------------------+--------------------------------------+\n| Module/Object                       | Description                          |\n+=====================================+======================================+\n| `colr.Colr <https://github.com/welb | Methods for the ``Colr`` object, to  |\n| ornprod/colr/blob/dev/docs/colr.Col | colorize text.                       |\n| r.md>`__                            |                                      |\n+-------------------------------------+--------------------------------------+\n| `colr.Control <https://github.com/w | Functions, classes, and methods for  |\n| elbornprod/colr/blob/dev/docs/colr. | the ``Control`` object, to control   |\n| controls.md>`__                     | the cursor/screen.                   |\n+-------------------------------------+--------------------------------------+\n| colr.ColrControl                    | ``Colr`` and ``Control`` merged into |\n|                                     | one class. See ``colr.Colr`` and     |\n|                                     | ``colr.Control``.                    |\n+-------------------------------------+--------------------------------------+\n| `colr.progress <https://github.com/ | Progress updates, bars, or spinners. |\n| welbornprod/colr/blob/dev/docs/colr |                                      |\n| .progress.md>`__                    |                                      |\n+-------------------------------------+--------------------------------------+\n| `colr.trans <https://github.com/wel | Color code translation/detection.    |\n| bornprod/colr/blob/dev/docs/colr.tr |                                      |\n| ans.md>`__                          |                                      |\n+-------------------------------------+--------------------------------------+\n\n--------------\n\nColr Tool:\n----------\n\nThe ``colr`` package can be used as a command line tool. An entry point\nscript named ``colr`` is created when installed with pip. Otherwise it\ncan be executed using the ``python -m colr`` method.\n\n.. code:: bash\n\n    colr --help\n\nBasic usage involves passing text, or piping stdin data and setting the\ncolors by position or flag.\n\n.. code:: bash\n\n    # These all do the same thing:\n    colr \"Test\" \"red\" \"white\" \"bright\"\n    colr \"Test\" -f \"red\" -b \"white\" -s \"bright\"\n    printf \"Test\" | colr -f \"red\" -b \"white\" -s \"bright\"\n\nUsing the positional arguments is faster for just setting fore colors,\nbut the flag method is needed for stdin data, or for picking just the\nbackground color or style:\n\n.. code:: bash\n\n    colr \"Test\" -s \"bright\"\n\nExtended and True colors are supported:\n\n.. code:: bash\n\n    colr \"Test\" 124 255\n    colr \"Test\" \"255, 0, 0\" \"255, 255, 255\"\n    # Use true color (rgb) escape codes to generate a gradient, and then\n    # center it in the terminal (0 means use terminal width).\n    colr \"Test\" -G \"255,0,0\" -G \"0,0,255\" -c 0\n\nIt will do fore, back, style, gradients, rainbows, justification, and\ntranslation. It can strip codes from text (as an argument or stdin), or\nexplain the codes found in the text.\n\n`lolcat <https://github.com/busyloop/lolcat>`__ emulation:\n\n.. code:: bash\n\n    fortune | colr --rainbow\n\nThe colr tool does not read files, but it's not a problem:\n\n.. code:: bash\n\n    cat myfile.txt | colr --gradient red\n\nAlso see `ccat <https://github.com/welbornprod/ccat>`__.\n\nColr-run:\n---------\n\nA small command-runner is included, called ``colr-run``. This program\nwill run another program, printing an animated message instead of the\nnormal output.\n\nIt is used to turn \"noisy\" commands into a nice single-line animation.\n\nBasic Example:\n~~~~~~~~~~~~~~\n\nTo run a program with the default settings, ``--`` is still required:\n\n.. code:: bash\n\n    colr-run -- bash -c 'x=0; while ((x<1000000)); do let x+=1; done'\n\nAny stderr output from the program will ruin the animation, which may be\nfine if you are only looking for errors.\n\nYou can silence stderr output with ``-e`` if you don't need it:\n\n.. code:: bash\n\n    colr-run -e -- some-long-running-command\n\nThe exit status of ``colr-run`` is the exit status of the command being\nexecuted. For ``colr-run`` errors, the exit status is ``1`` for basic\nerrors, and ``2`` for cancelled commands.\n\nColr.docopt:\n------------\n\nColr provides a wrapper for docopt that will automatically colorize\nusage strings. If you provide it a script name it will add a little more\ncolor by colorizing the script name too.\n\n.. code:: python\n\n    from colr import docopt\n    argd = docopt(USAGE, script='mycommand')\n\n--------------\n\nContributing:\n-------------\n\nAs always contributions are welcome here. If you think you can improve\nsomething, or have a good idea for a feature, please file an\n`issue <https://github.com/welbornprod/colr/issues/new>`__ or a `pull\nrequest <https://github.com/welbornprod/colr/compare>`__.\n\n--------------\n\nNotes:\n------\n\nReasons\n~~~~~~~\n\nIn the past, I used a simple ``color()`` function because I'm not fond\nof the string concatenation style that other libraries use. The 'clor'\njavascript library uses method chaining because that style suits\njavascript, but I wanted to make it available to Python also, at least\nas an option.\n\nReset Codes\n~~~~~~~~~~~\n\nThe reset code is appended only if some kind of text was given, and\ncolr/style args were used. The only values that are considered 'no text'\nvalues are ``None`` and ``''`` (empty string). ``str(val)`` is called on\nall other values, so ``Colr(0, 'red')`` and ``Colr(False, 'blue')`` will\nwork, and the reset code will be appended.\n\nThis makes it possible to build background colors and styles, but also\nhave separate styles for separate pieces of text.\n\nPython 2\n~~~~~~~~\n\nI don't really have the desire to back-port this to Python 2. It\nwouldn't need too many changes, but I like the Python 3 features\n(``yield from``, ``str/bytes``).\n\nWindows\n~~~~~~~\n\nWindows 10 finally has support for ANSI escape codes. Colr can now be\nused on Windows 10+ by calling ``SetConsoleMode``. Older Windows\nversions are not supported and haven't been tested. If you are using\nColr for a tool that needs to support older Windows versions, you will\nneed to detect the current Windows version and call ``colr.disable()``\nfor those that aren't supported. Otherwise you will have \"junk\"\ncharacters printed to the screen.\n\nMisc.\n~~~~~\n\nThis library may be a little too flexible:\n\n.. code:: python\n\n    from colr import Colr as C\n    warnmsg = lambda s: C('warning', 'red').join('[', ']')(' ').green(s)\n    print(warnmsg('The roof is on fire again.'))\n\n.. figure:: https://welbornprod.com/static/media/img/colr-warning.png\n   :alt: The possibilities are endless.\n\n   The possibilities are endless.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/welbornprod/colr", "keywords": "python module library 2 3 terminal escape codes color", "license": "", "maintainer": "", "maintainer_email": "", "name": "Colr", "package_url": "https://pypi.org/project/Colr/", "platform": "", "project_url": "https://pypi.org/project/Colr/", "project_urls": {"Homepage": "https://github.com/welbornprod/colr"}, "release_url": "https://pypi.org/project/Colr/0.9.1/", "requires_dist": null, "requires_python": "", "summary": "Easy terminal colors, with chainable methods.\n", "version": "0.9.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A python module for using terminal colors. It contains a simple\n<tt>color</tt> function that accepts style and color names, and outputs a\nstring with escape codes, but also has all colors and styles as\nchainable methods on the <tt>Colr</tt> object.</p>\n<hr class=\"docutils\">\n<div id=\"dependencies\">\n<h2>Dependencies:</h2>\n<div id=\"system\">\n<h3>System</h3>\n<ul>\n<li><strong>Python 3.5+</strong> - This library uses <tt>yield from</tt> and the <tt>typing</tt>\nmodule. <a href=\"#python-2\" rel=\"nofollow\">Python 2 support is not planned.</a></li>\n</ul>\n</div>\n<div id=\"modules\">\n<h3>Modules</h3>\n<p>There are no dependencies required for importing this library, however:</p>\n<ul>\n<li><a href=\"https://github.com/docopt/docopt\" rel=\"nofollow\">Docopt</a> - Only required for the\ncommand line tools (<a href=\"#colr-tool\" rel=\"nofollow\">colr</a> and\n<a href=\"#colr-run\" rel=\"nofollow\">colr-run</a>) and the <a href=\"#colrdocopt\" rel=\"nofollow\">colr.docopt\nwrapper</a>, not the library itself.</li>\n</ul>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation:</h2>\n<p>Colr is listed on <a href=\"https://pypi.python.org/pypi/Colr\" rel=\"nofollow\">PyPi</a>, and can\nbe installed using <a href=\"https://pip.pypa.io/en/stable/installing/\" rel=\"nofollow\">pip</a>:</p>\n<pre>pip install colr\n</pre>\n<p>Or you can clone the repo on\n<a href=\"https://github.com/welbornprod/colr\" rel=\"nofollow\">GitHub</a> and install it from the\ncommand line:</p>\n<pre>git clone https://github.com/welbornprod/colr.git\ncd colr\npython3 setup.py install\n</pre>\n</div>\n<hr class=\"docutils\">\n<div id=\"examples\">\n<h2>Examples:</h2>\n<div id=\"simple\">\n<h3>Simple:</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">colr</span> <span class=\"kn\">import</span> <span class=\"n\">color</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"p\">(</span><span class=\"s1\">'Hello world.'</span><span class=\"p\">,</span> <span class=\"n\">fore</span><span class=\"o\">=</span><span class=\"s1\">'red'</span><span class=\"p\">,</span> <span class=\"n\">style</span><span class=\"o\">=</span><span class=\"s1\">'bright'</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"chainable\">\n<h3>Chainable:</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">colr</span> <span class=\"kn\">import</span> <span class=\"n\">Colr</span> <span class=\"k\">as</span> <span class=\"n\">C</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span>\n    <span class=\"n\">C</span><span class=\"p\">()</span>\n    <span class=\"o\">.</span><span class=\"n\">bright</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">red</span><span class=\"p\">(</span><span class=\"s1\">'Hello '</span><span class=\"p\">)</span>\n    <span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">blue</span><span class=\"p\">(</span><span class=\"s1\">'World'</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Background colors start with 'bg', and AttributeError will be raised on</span>\n<span class=\"c1\"># invalid method names.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">C</span><span class=\"p\">(</span><span class=\"s1\">'Hello '</span><span class=\"p\">,</span> <span class=\"n\">fore</span><span class=\"o\">=</span><span class=\"s1\">'red'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">bgwhite</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">blue</span><span class=\"p\">(</span><span class=\"s1\">'World'</span><span class=\"p\">))</span>\n</pre>\n</div>\n</div>\n<div id=\"examples-256-colors\">\n<h2>Examples (256 Colors):</h2>\n<div id=\"id1\">\n<h3>Simple:</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">colr</span> <span class=\"kn\">import</span> <span class=\"n\">color</span>\n<span class=\"c1\"># Invalid color names/numbers raise a ValueError.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"p\">(</span><span class=\"s1\">'Hello world'</span><span class=\"p\">,</span> <span class=\"n\">fore</span><span class=\"o\">=</span><span class=\"mi\">125</span><span class=\"p\">,</span> <span class=\"n\">back</span><span class=\"o\">=</span><span class=\"mi\">80</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"id2\">\n<h3>Chainable:</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">colr</span> <span class=\"kn\">import</span> <span class=\"n\">Colr</span> <span class=\"k\">as</span> <span class=\"n\">C</span>\n<span class=\"c1\"># Foreground colors start with 'f_'</span>\n<span class=\"c1\"># Background colors start with 'b_'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">C</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">f_125</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">b_80</span><span class=\"p\">(</span><span class=\"s1\">'Hello World'</span><span class=\"p\">))</span>\n</pre>\n</div>\n</div>\n<div id=\"examples-true-color\">\n<h2>Examples (True Color):</h2>\n<div id=\"id3\">\n<h3>Simple:</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">colr</span> <span class=\"kn\">import</span> <span class=\"n\">color</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"p\">(</span><span class=\"s1\">'Hello there.'</span><span class=\"p\">,</span> <span class=\"n\">fore</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">back</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)))</span>\n</pre>\n</div>\n<div id=\"id4\">\n<h3>Chainable:</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">colr</span> <span class=\"kn\">import</span> <span class=\"n\">Colr</span> <span class=\"k\">as</span> <span class=\"n\">C</span>\n<span class=\"c1\"># Foreground colors are set with the `rgb()` method.</span>\n<span class=\"c1\"># Background colors are set with the `b_rgb()` method.</span>\n<span class=\"c1\"># Text for the chained methods should be chained after or during</span>\n<span class=\"c1\"># the call to the methods.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">C</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">b_rgb</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">rgb</span><span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'Hello there.'</span><span class=\"p\">))</span>\n</pre>\n</div>\n</div>\n<div id=\"examples-hex\">\n<h2>Examples (Hex):</h2>\n<div id=\"id5\">\n<h3>Simple:</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">colr</span> <span class=\"kn\">import</span> <span class=\"n\">color</span>\n<span class=\"c1\"># When not using the Colr.hex method, the closest matching extended code</span>\n<span class=\"c1\"># is used. For true color, just use:</span>\n<span class=\"c1\">#     fore=hex2rgb('ff0000')</span>\n<span class=\"c1\"># or</span>\n<span class=\"c1\">#     Colr.hex('ff0000', rgb_mode=True)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"p\">(</span><span class=\"s1\">'Hello there.'</span><span class=\"p\">,</span> <span class=\"n\">fore</span><span class=\"o\">=</span><span class=\"s1\">'ff0000'</span><span class=\"p\">,</span> <span class=\"n\">back</span><span class=\"o\">=</span><span class=\"s1\">'000'</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"id6\">\n<h3>Chainable:</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">colr</span> <span class=\"kn\">import</span> <span class=\"n\">Colr</span> <span class=\"k\">as</span> <span class=\"n\">C</span>\n<span class=\"c1\"># Foreground colors are set with the `hex()` method.</span>\n<span class=\"c1\"># Background colors are set with the `b_hex()` method.</span>\n<span class=\"c1\"># Text for the chained methods should be chained after or during</span>\n<span class=\"c1\"># the call to the methods.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">C</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">b_hex</span><span class=\"p\">(</span><span class=\"s1\">'#000'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">(</span><span class=\"s1\">'ff0000'</span><span class=\"p\">,</span> <span class=\"s1\">'Hello there.'</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># With rgb_mode set, these are the same:</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">C</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">(</span><span class=\"s1\">'ff0000'</span><span class=\"p\">,</span> <span class=\"s1\">'test'</span><span class=\"p\">,</span> <span class=\"n\">rgb_mode</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">C</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">rgb</span><span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'test'</span><span class=\"p\">))</span>\n</pre>\n</div>\n</div>\n<hr class=\"docutils\">\n<div id=\"documentation\">\n<h2>Documentation:</h2>\n<p>Documentation for the <tt>colr</tt> API can be found in the GitHub repo\n(<a href=\"https://github.com/welbornprod/colr\" rel=\"nofollow\">github.com/welbornprod/colr</a>):</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Module/Object</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><a href=\"https://github.com/welbornprod/colr/blob/dev/docs/colr.Colr.md\" rel=\"nofollow\">colr.Colr</a></td>\n<td>Methods for the <tt>Colr</tt> object, to\ncolorize text.</td>\n</tr>\n<tr><td><a href=\"https://github.com/welbornprod/colr/blob/dev/docs/colr.controls.md\" rel=\"nofollow\">colr.Control</a></td>\n<td>Functions, classes, and methods for\nthe <tt>Control</tt> object, to control\nthe cursor/screen.</td>\n</tr>\n<tr><td>colr.ColrControl</td>\n<td><tt>Colr</tt> and <tt>Control</tt> merged into\none class. See <tt>colr.Colr</tt> and\n<tt>colr.Control</tt>.</td>\n</tr>\n<tr><td><a href=\"https://github.com/welbornprod/colr/blob/dev/docs/colr.progress.md\" rel=\"nofollow\">colr.progress</a></td>\n<td>Progress updates, bars, or spinners.</td>\n</tr>\n<tr><td><a href=\"https://github.com/welbornprod/colr/blob/dev/docs/colr.trans.md\" rel=\"nofollow\">colr.trans</a></td>\n<td>Color code translation/detection.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<hr class=\"docutils\">\n<div id=\"colr-tool\">\n<h2>Colr Tool:</h2>\n<p>The <tt>colr</tt> package can be used as a command line tool. An entry point\nscript named <tt>colr</tt> is created when installed with pip. Otherwise it\ncan be executed using the <tt>python <span class=\"pre\">-m</span> colr</tt> method.</p>\n<pre>colr --help\n</pre>\n<p>Basic usage involves passing text, or piping stdin data and setting the\ncolors by position or flag.</p>\n<pre><span class=\"c1\"># These all do the same thing:\n</span>colr <span class=\"s2\">\"Test\"</span> <span class=\"s2\">\"red\"</span> <span class=\"s2\">\"white\"</span> <span class=\"s2\">\"bright\"</span>\ncolr <span class=\"s2\">\"Test\"</span> -f <span class=\"s2\">\"red\"</span> -b <span class=\"s2\">\"white\"</span> -s <span class=\"s2\">\"bright\"</span>\n<span class=\"nb\">printf</span> <span class=\"s2\">\"Test\"</span> <span class=\"p\">|</span> colr -f <span class=\"s2\">\"red\"</span> -b <span class=\"s2\">\"white\"</span> -s <span class=\"s2\">\"bright\"</span>\n</pre>\n<p>Using the positional arguments is faster for just setting fore colors,\nbut the flag method is needed for stdin data, or for picking just the\nbackground color or style:</p>\n<pre>colr <span class=\"s2\">\"Test\"</span> -s <span class=\"s2\">\"bright\"</span>\n</pre>\n<p>Extended and True colors are supported:</p>\n<pre>colr <span class=\"s2\">\"Test\"</span> <span class=\"m\">124</span> <span class=\"m\">255</span>\ncolr <span class=\"s2\">\"Test\"</span> <span class=\"s2\">\"255, 0, 0\"</span> <span class=\"s2\">\"255, 255, 255\"</span>\n<span class=\"c1\"># Use true color (rgb) escape codes to generate a gradient, and then\n# center it in the terminal (0 means use terminal width).\n</span>colr <span class=\"s2\">\"Test\"</span> -G <span class=\"s2\">\"255,0,0\"</span> -G <span class=\"s2\">\"0,0,255\"</span> -c <span class=\"m\">0</span>\n</pre>\n<p>It will do fore, back, style, gradients, rainbows, justification, and\ntranslation. It can strip codes from text (as an argument or stdin), or\nexplain the codes found in the text.</p>\n<p><a href=\"https://github.com/busyloop/lolcat\" rel=\"nofollow\">lolcat</a> emulation:</p>\n<pre>fortune <span class=\"p\">|</span> colr --rainbow\n</pre>\n<p>The colr tool does not read files, but it\u2019s not a problem:</p>\n<pre>cat myfile.txt <span class=\"p\">|</span> colr --gradient red\n</pre>\n<p>Also see <a href=\"https://github.com/welbornprod/ccat\" rel=\"nofollow\">ccat</a>.</p>\n</div>\n<div id=\"colr-run\">\n<h2>Colr-run:</h2>\n<p>A small command-runner is included, called <tt><span class=\"pre\">colr-run</span></tt>. This program\nwill run another program, printing an animated message instead of the\nnormal output.</p>\n<p>It is used to turn \u201cnoisy\u201d commands into a nice single-line animation.</p>\n<div id=\"basic-example\">\n<h3>Basic Example:</h3>\n<p>To run a program with the default settings, <tt><span class=\"pre\">--</span></tt> is still required:</p>\n<pre>colr-run -- bash -c <span class=\"s1\">'x=0; while ((x&lt;1000000)); do let x+=1; done'</span>\n</pre>\n<p>Any stderr output from the program will ruin the animation, which may be\nfine if you are only looking for errors.</p>\n<p>You can silence stderr output with <tt><span class=\"pre\">-e</span></tt> if you don\u2019t need it:</p>\n<pre>colr-run -e -- some-long-running-command\n</pre>\n<p>The exit status of <tt><span class=\"pre\">colr-run</span></tt> is the exit status of the command being\nexecuted. For <tt><span class=\"pre\">colr-run</span></tt> errors, the exit status is <tt>1</tt> for basic\nerrors, and <tt>2</tt> for cancelled commands.</p>\n</div>\n</div>\n<div id=\"colr-docopt\">\n<h2>Colr.docopt:</h2>\n<p>Colr provides a wrapper for docopt that will automatically colorize\nusage strings. If you provide it a script name it will add a little more\ncolor by colorizing the script name too.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">colr</span> <span class=\"kn\">import</span> <span class=\"n\">docopt</span>\n<span class=\"n\">argd</span> <span class=\"o\">=</span> <span class=\"n\">docopt</span><span class=\"p\">(</span><span class=\"n\">USAGE</span><span class=\"p\">,</span> <span class=\"n\">script</span><span class=\"o\">=</span><span class=\"s1\">'mycommand'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<hr class=\"docutils\">\n<div id=\"contributing\">\n<h2>Contributing:</h2>\n<p>As always contributions are welcome here. If you think you can improve\nsomething, or have a good idea for a feature, please file an\n<a href=\"https://github.com/welbornprod/colr/issues/new\" rel=\"nofollow\">issue</a> or a <a href=\"https://github.com/welbornprod/colr/compare\" rel=\"nofollow\">pull\nrequest</a>.</p>\n</div>\n<hr class=\"docutils\">\n<div id=\"notes\">\n<h2>Notes:</h2>\n<div id=\"reasons\">\n<h3>Reasons</h3>\n<p>In the past, I used a simple <tt>color()</tt> function because I\u2019m not fond\nof the string concatenation style that other libraries use. The \u2018clor\u2019\njavascript library uses method chaining because that style suits\njavascript, but I wanted to make it available to Python also, at least\nas an option.</p>\n</div>\n<div id=\"reset-codes\">\n<h3>Reset Codes</h3>\n<p>The reset code is appended only if some kind of text was given, and\ncolr/style args were used. The only values that are considered \u2018no text\u2019\nvalues are <tt>None</tt> and <tt>''</tt> (empty string). <tt>str(val)</tt> is called on\nall other values, so <tt>Colr(0, 'red')</tt> and <tt>Colr(False, 'blue')</tt> will\nwork, and the reset code will be appended.</p>\n<p>This makes it possible to build background colors and styles, but also\nhave separate styles for separate pieces of text.</p>\n</div>\n<div id=\"python-2\">\n<h3>Python 2</h3>\n<p>I don\u2019t really have the desire to back-port this to Python 2. It\nwouldn\u2019t need too many changes, but I like the Python 3 features\n(<tt>yield from</tt>, <tt>str/bytes</tt>).</p>\n</div>\n<div id=\"windows\">\n<h3>Windows</h3>\n<p>Windows 10 finally has support for ANSI escape codes. Colr can now be\nused on Windows 10+ by calling <tt>SetConsoleMode</tt>. Older Windows\nversions are not supported and haven\u2019t been tested. If you are using\nColr for a tool that needs to support older Windows versions, you will\nneed to detect the current Windows version and call <tt>colr.disable()</tt>\nfor those that aren\u2019t supported. Otherwise you will have \u201cjunk\u201d\ncharacters printed to the screen.</p>\n</div>\n<div id=\"misc\">\n<h3>Misc.</h3>\n<p>This library may be a little too flexible:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">colr</span> <span class=\"kn\">import</span> <span class=\"n\">Colr</span> <span class=\"k\">as</span> <span class=\"n\">C</span>\n<span class=\"n\">warnmsg</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"n\">C</span><span class=\"p\">(</span><span class=\"s1\">'warning'</span><span class=\"p\">,</span> <span class=\"s1\">'red'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">'['</span><span class=\"p\">,</span> <span class=\"s1\">']'</span><span class=\"p\">)(</span><span class=\"s1\">' '</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">green</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">warnmsg</span><span class=\"p\">(</span><span class=\"s1\">'The roof is on fire again.'</span><span class=\"p\">))</span>\n</pre>\n<div>\n<img alt=\"The possibilities are endless.\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0438eb2f7352681e7638a6f219ab9110e1e8cab/68747470733a2f2f77656c626f726e70726f642e636f6d2f7374617469632f6d656469612f696d672f636f6c722d7761726e696e672e706e67\">\n<p>The possibilities are endless.</p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5762883, "releases": {"0.0.2-2": [{"comment_text": "", "digests": {"md5": "ba4d6c484bcd8242096be85012ea4e8c", "sha256": "803aa64a49c67a6a14624840df716b14253c33831096a7558ee5ac74dff27dc1"}, "downloads": -1, "filename": "Colr-0.0.2-2.tar.gz", "has_sig": false, "md5_digest": "ba4d6c484bcd8242096be85012ea4e8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5711, "upload_time": "2015-08-15T05:13:29", "upload_time_iso_8601": "2015-08-15T05:13:29.801868Z", "url": "https://files.pythonhosted.org/packages/99/e8/6afa82fc8d73d86d8714261d92460d591909d83e2efe625629076611af4d/Colr-0.0.2-2.tar.gz", "yanked": false}], "0.0.3-1": [{"comment_text": "", "digests": {"md5": "d31af8a9296153b2256c170da9096dff", "sha256": "dd0557590eb50d60359c5f5b4a8fe88f1e8f3e93bfac3dacb8e9f3d7f0262d98"}, "downloads": -1, "filename": "Colr-0.0.3-1.tar.gz", "has_sig": false, "md5_digest": "d31af8a9296153b2256c170da9096dff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7394, "upload_time": "2015-08-19T02:48:49", "upload_time_iso_8601": "2015-08-19T02:48:49.822088Z", "url": "https://files.pythonhosted.org/packages/20/42/969c072535b658323286324ff95ad1d2fea6a7f3c86fbd4c1db63d8ac3bc/Colr-0.0.3-1.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "1accd86a57d330c8423b76f04aa6e421", "sha256": "43296268252d1a43d032d2ec752ce80c7c8786dbf5616d3d055e8b6a659abadc"}, "downloads": -1, "filename": "Colr-0.0.4.tar.gz", "has_sig": false, "md5_digest": "1accd86a57d330c8423b76f04aa6e421", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7512, "upload_time": "2015-08-19T03:33:09", "upload_time_iso_8601": "2015-08-19T03:33:09.915276Z", "url": "https://files.pythonhosted.org/packages/5d/3a/5bce7b12c7025a455d3629410e95d66942f7e36fc934c60045e160aa3032/Colr-0.0.4.tar.gz", "yanked": false}], "0.0.7-2": [{"comment_text": "", "digests": {"md5": "37b8a7a494937136fce944c8eabdb8ba", "sha256": "4c6f41fbf1c01d4e436c660b0ddcebaf38be7b3d1d42fbee1232e7dc351a1dc0"}, "downloads": -1, "filename": "Colr-0.0.7-2.tar.gz", "has_sig": false, "md5_digest": "37b8a7a494937136fce944c8eabdb8ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9295, "upload_time": "2015-11-28T19:16:56", "upload_time_iso_8601": "2015-11-28T19:16:56.602442Z", "url": "https://files.pythonhosted.org/packages/1a/ca/5655ba8e82cfe843a35a76ff2310a3bdd31193e0510ebd156c2b558d05f6/Colr-0.0.7-2.tar.gz", "yanked": false}], "0.2.1-1": [{"comment_text": "", "digests": {"md5": "e22d33e94d659748a58fa3c7680e2007", "sha256": "5de33592011b042c3d2ef01021adc764c8880aee34f2effb489b2f11ef79719a"}, "downloads": -1, "filename": "Colr-0.2.1-1.tar.gz", "has_sig": false, "md5_digest": "e22d33e94d659748a58fa3c7680e2007", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23245, "upload_time": "2015-12-08T03:13:30", "upload_time_iso_8601": "2015-12-08T03:13:30.519947Z", "url": "https://files.pythonhosted.org/packages/b2/cc/20f2834adb0abfaf3af0da791949c1bd9c5891fe175d19285d2cc9288621/Colr-0.2.1-1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "2051e729472b5d4cb27d363274b04034", "sha256": "2eff7f894440160e20dc44d15d88547aef66fe4dbd25bffa0baf938e1c694fec"}, "downloads": -1, "filename": "Colr-0.2.2.tar.gz", "has_sig": false, "md5_digest": "2051e729472b5d4cb27d363274b04034", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23954, "upload_time": "2015-12-09T02:25:38", "upload_time_iso_8601": "2015-12-09T02:25:38.665848Z", "url": "https://files.pythonhosted.org/packages/a1/7a/72be859917a7ff9f9565e5eb3cdd410741e5126ca9787b3b3bebffd7b5fc/Colr-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "9f616ad3572fec9cc93a945c9f004631", "sha256": "525d4e759199ce40c55ea407f652b9a003342cc77e15beee412ac5ab2bf3639f"}, "downloads": -1, "filename": "Colr-0.2.3.tar.gz", "has_sig": false, "md5_digest": "9f616ad3572fec9cc93a945c9f004631", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24096, "upload_time": "2015-12-10T03:44:17", "upload_time_iso_8601": "2015-12-10T03:44:17.485267Z", "url": "https://files.pythonhosted.org/packages/3e/cb/0fbd306c49671e251793fa7fcb8fe06602136342f5cee3e00f04c08609a8/Colr-0.2.3.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "3052d082db98c9d5998af699d5eef082", "sha256": "cff1746a0f8826e5ab8402d4d972e791ed3e4962c25b3aa8773922117200aed2"}, "downloads": -1, "filename": "Colr-0.2.5.tar.gz", "has_sig": false, "md5_digest": "3052d082db98c9d5998af699d5eef082", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29227, "upload_time": "2016-04-21T03:30:59", "upload_time_iso_8601": "2016-04-21T03:30:59.471891Z", "url": "https://files.pythonhosted.org/packages/3e/32/869464e2f29054d1819ee6bb31cfe3b79d215f24a3fbc813de14e231933a/Colr-0.2.5.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "6597ca4fc25405128e0da5943597f3ef", "sha256": "7ab46cd7c0095fefd1abbae868b1335a5ad09f9a6715a767f4b800489b03b0ed"}, "downloads": -1, "filename": "Colr-0.3.0.tar.gz", "has_sig": false, "md5_digest": "6597ca4fc25405128e0da5943597f3ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29893, "upload_time": "2016-06-22T02:38:51", "upload_time_iso_8601": "2016-06-22T02:38:51.149641Z", "url": "https://files.pythonhosted.org/packages/2f/ac/5b0da395a6b77c847a251945b340dcdd7fdcd065e749608baca59eb48651/Colr-0.3.0.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "33b6f868258293e68191daa452bf12ca", "sha256": "10d37b377b9d6080626a66b5ebbdca49d008e4304ef30423448867b613ebc80e"}, "downloads": -1, "filename": "Colr-0.4.3.tar.gz", "has_sig": false, "md5_digest": "33b6f868258293e68191daa452bf12ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31692, "upload_time": "2016-08-22T04:30:12", "upload_time_iso_8601": "2016-08-22T04:30:12.595344Z", "url": "https://files.pythonhosted.org/packages/1f/07/9d26e790782907d9b64eb755e33175e459483fd478dd26785e1d965b5216/Colr-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "cad55aff32201be200aedf92340b39ac", "sha256": "3889cbe286568d9cc8ff0a02f30158ed9e6ee8b11e3f572238e770f1dc3e78bc"}, "downloads": -1, "filename": "Colr-0.4.4.tar.gz", "has_sig": false, "md5_digest": "cad55aff32201be200aedf92340b39ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32772, "upload_time": "2016-08-28T22:15:14", "upload_time_iso_8601": "2016-08-28T22:15:14.623753Z", "url": "https://files.pythonhosted.org/packages/6d/de/e2c6d44f1e83de03a33aadee37110339d97f6ae24d7c176a65087fd9edee/Colr-0.4.4.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "401b9d1f4b0f86df19e5f9939bac97b0", "sha256": "6966d7c4cc4c289f01aee275f5a851f70ca87443ad927def57ffa76269cd03ef"}, "downloads": -1, "filename": "Colr-0.5.0.tar.gz", "has_sig": false, "md5_digest": "401b9d1f4b0f86df19e5f9939bac97b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33773, "upload_time": "2016-11-18T04:06:42", "upload_time_iso_8601": "2016-11-18T04:06:42.205117Z", "url": "https://files.pythonhosted.org/packages/35/87/df0b8c862cb92f0432735f2b10e429b0eda8f0fa8b339f8375214d2fdb4f/Colr-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "07775ab88b0fb8d62d673f6d957a08b5", "sha256": "99e1df73cb06bf3d509b2bffdc0baf33645a5479c6e30def20f1a93c0e1a573b"}, "downloads": -1, "filename": "Colr-0.5.1.tar.gz", "has_sig": false, "md5_digest": "07775ab88b0fb8d62d673f6d957a08b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35460, "upload_time": "2016-11-18T05:12:15", "upload_time_iso_8601": "2016-11-18T05:12:15.006078Z", "url": "https://files.pythonhosted.org/packages/4f/f1/bd20c51bf5169248cae68bf3b61c709230a47b82e90c01666fc3fa10a9c1/Colr-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "5f0d2f0c228069b52125081faf3e10a5", "sha256": "bbef407d4220e70020fd8c28cb9512c874bc3e7e52fd2bfed3bf59f1611712d7"}, "downloads": -1, "filename": "Colr-0.5.2.tar.gz", "has_sig": false, "md5_digest": "5f0d2f0c228069b52125081faf3e10a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39170, "upload_time": "2016-12-10T04:00:35", "upload_time_iso_8601": "2016-12-10T04:00:35.077816Z", "url": "https://files.pythonhosted.org/packages/c5/cb/83485d17c45257caedad5a0c71fe250201370c034d521019aef38abf2b5e/Colr-0.5.2.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "190a914379e992e9ac5bfc4e25f6584c", "sha256": "2dbe9b6259d3bea4fa010ceb9eac1040809aa81f43b3bcbb13ffebbdbb1b1d55"}, "downloads": -1, "filename": "Colr-0.6.0.tar.gz", "has_sig": false, "md5_digest": "190a914379e992e9ac5bfc4e25f6584c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42241, "upload_time": "2017-01-13T04:02:19", "upload_time_iso_8601": "2017-01-13T04:02:19.809927Z", "url": "https://files.pythonhosted.org/packages/f2/17/f185fa32a917695085d32fe1a486141e87cd641a0a4d11c12b4345ee560e/Colr-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "652ab75979047e5f97334dcc161bf11b", "sha256": "9b0e2913b684b45029c43b0858a16f65a2a649d359e9cef0d8f2786109413d12"}, "downloads": -1, "filename": "Colr-0.7.0.tar.gz", "has_sig": false, "md5_digest": "652ab75979047e5f97334dcc161bf11b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54927, "upload_time": "2017-02-16T01:29:53", "upload_time_iso_8601": "2017-02-16T01:29:53.708488Z", "url": "https://files.pythonhosted.org/packages/c7/ad/3d00773a6eeeaf80e838107c270cba0388aa61b7ba7d858bc83abb452bf7/Colr-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "82a05112ba6f638977fdafbf10f79784", "sha256": "23326028dff050f6aaa2c06a823ec4c0f92809fe43082fcce4fca2f9164f77cb"}, "downloads": -1, "filename": "Colr-0.7.1.tar.gz", "has_sig": false, "md5_digest": "82a05112ba6f638977fdafbf10f79784", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54944, "upload_time": "2017-02-16T02:35:07", "upload_time_iso_8601": "2017-02-16T02:35:07.190389Z", "url": "https://files.pythonhosted.org/packages/66/30/2c3ebcb36874ea34e83f12893f86f429737af23340d08905d3d9feb91a53/Colr-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "c89d3575f65fc5f70ef4e2e055e34f83", "sha256": "5264d4c5a6086c59db426ccf4e801df3cdaa5ab20abfadbcaa7d3a076c5f4e11"}, "downloads": -1, "filename": "Colr-0.7.2.tar.gz", "has_sig": false, "md5_digest": "c89d3575f65fc5f70ef4e2e055e34f83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55079, "upload_time": "2017-02-16T02:49:41", "upload_time_iso_8601": "2017-02-16T02:49:41.301805Z", "url": "https://files.pythonhosted.org/packages/58/87/54ff1e0917a038c4988d7fce60b28c09b18cb5b8de82018112cf3b7a294d/Colr-0.7.2.tar.gz", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "e32bbbe5328a7a50b934dc54d8ff7f33", "sha256": "c458a0d2aaad5ff3c4cc399aea354b69bf7a4bed149c541f07604713309f651f"}, "downloads": -1, "filename": "Colr-0.7.4.tar.gz", "has_sig": false, "md5_digest": "e32bbbe5328a7a50b934dc54d8ff7f33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55083, "upload_time": "2017-02-16T02:52:35", "upload_time_iso_8601": "2017-02-16T02:52:35.291684Z", "url": "https://files.pythonhosted.org/packages/33/c0/1f8cc90b126bc6f2cd09c04742e3ca7c6b7f98f8d70e632c30d88f2298b2/Colr-0.7.4.tar.gz", "yanked": false}], "0.7.5": [{"comment_text": "", "digests": {"md5": "51648fdb8ac2b7e523ba3c406f2c3a96", "sha256": "270a4048bf6e61c389bb60788034d5c8c1f69b5470501d33966ca0f6ba7b53d0"}, "downloads": -1, "filename": "Colr-0.7.5.tar.gz", "has_sig": false, "md5_digest": "51648fdb8ac2b7e523ba3c406f2c3a96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57726, "upload_time": "2017-02-23T02:13:20", "upload_time_iso_8601": "2017-02-23T02:13:20.376443Z", "url": "https://files.pythonhosted.org/packages/78/c9/dc890fd2931b75d1dfa87b6e633c121d3b0547ec3a4c8dbac8261c07c3fb/Colr-0.7.5.tar.gz", "yanked": false}], "0.7.6": [{"comment_text": "", "digests": {"md5": "597ccb425432e09068057a10d1435915", "sha256": "fd339b1a5970441abe512fbd5ced8fbcbc1e14a5c5407fb30e42523f182ec050"}, "downloads": -1, "filename": "Colr-0.7.6.tar.gz", "has_sig": false, "md5_digest": "597ccb425432e09068057a10d1435915", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61480, "upload_time": "2017-03-05T21:39:09", "upload_time_iso_8601": "2017-03-05T21:39:09.628348Z", "url": "https://files.pythonhosted.org/packages/3d/2f/4d3694c3efa1c3a7de2ec77c6195613b0b15907ad9997df5e54df4018208/Colr-0.7.6.tar.gz", "yanked": false}], "0.7.7": [{"comment_text": "", "digests": {"md5": "1acf4192fde7c9cd2fd436e0217ab128", "sha256": "2616517f750d426c2ca0568ec506bfc673951a5f09aa626e458b30425ee35940"}, "downloads": -1, "filename": "Colr-0.7.7.tar.gz", "has_sig": false, "md5_digest": "1acf4192fde7c9cd2fd436e0217ab128", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75347, "upload_time": "2017-03-22T02:52:49", "upload_time_iso_8601": "2017-03-22T02:52:49.139844Z", "url": "https://files.pythonhosted.org/packages/40/b9/698bc09b3baa0f8bd872f64fe1ccc0a06123d79b5dfd525b2d1618928190/Colr-0.7.7.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "c38d1c49e6b23297795d66077d2f6225", "sha256": "4f63ff321747dfb6f1a3133608fa74a390cdc1614e43d08e022efd5676fa2914"}, "downloads": -1, "filename": "Colr-0.8.0.tar.gz", "has_sig": false, "md5_digest": "c38d1c49e6b23297795d66077d2f6225", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 86268, "upload_time": "2017-03-29T03:30:30", "upload_time_iso_8601": "2017-03-29T03:30:30.185184Z", "url": "https://files.pythonhosted.org/packages/77/30/80c92eb2b784e03a501b8bb2ab7d4dbd23e7fbd9a26cf48f21b563343639/Colr-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "f56951bd9d154ffedb0ccaf8a0ae4aff", "sha256": "86703aa716884086ba8fed5ce3592c8973c369eb895d30fd2311a2bbbc216070"}, "downloads": -1, "filename": "Colr-0.8.1.tar.gz", "has_sig": false, "md5_digest": "f56951bd9d154ffedb0ccaf8a0ae4aff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89702, "upload_time": "2017-03-31T03:42:25", "upload_time_iso_8601": "2017-03-31T03:42:25.804536Z", "url": "https://files.pythonhosted.org/packages/cc/3f/b76f1b9192de88474f218fcbaadd1fc36af0fda614a814c1e04d8152a418/Colr-0.8.1.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "334559bc74963a49d0052f5ba2409812", "sha256": "7d7776afc16d2c35475dad506dd2c6a5c83278209059e3dad04044b499b4ce27"}, "downloads": -1, "filename": "Colr-0.8.3.tar.gz", "has_sig": false, "md5_digest": "334559bc74963a49d0052f5ba2409812", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94074, "upload_time": "2019-01-21T21:40:46", "upload_time_iso_8601": "2019-01-21T21:40:46.130228Z", "url": "https://files.pythonhosted.org/packages/cd/10/6e84ab3b00445561709fd929791b2e0b20875d8396d8afd73c5405c438c2/Colr-0.8.3.tar.gz", "yanked": false}], "0.8.6": [{"comment_text": "", "digests": {"md5": "7572ec1fbdf07458f2d5938eb91f99c3", "sha256": "2b431bb07d9e2e239f7909a5531c1f447697be985df630d20218b6999b23e705"}, "downloads": -1, "filename": "Colr-0.8.6.tar.gz", "has_sig": false, "md5_digest": "7572ec1fbdf07458f2d5938eb91f99c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96314, "upload_time": "2019-04-01T00:52:50", "upload_time_iso_8601": "2019-04-01T00:52:50.307044Z", "url": "https://files.pythonhosted.org/packages/c5/41/509bcb07d46ad6ab22bfda8afb83a4549b414455f8f7f4b38789f1ea06a3/Colr-0.8.6.tar.gz", "yanked": false}], "0.8.9": [{"comment_text": "", "digests": {"md5": "df3257e2ef76a711c1307fa01d9435b1", "sha256": "02085088e8d194fd3b1e1bfd490d5ce367dfe80741e2dbc4b9c5757860d02a6b"}, "downloads": -1, "filename": "Colr-0.8.9.tar.gz", "has_sig": false, "md5_digest": "df3257e2ef76a711c1307fa01d9435b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110386, "upload_time": "2019-05-31T00:10:41", "upload_time_iso_8601": "2019-05-31T00:10:41.931091Z", "url": "https://files.pythonhosted.org/packages/d2/e6/4e6816dcc01a985c8f2ab1a1834c6ae5e65db2044eaf794a603f429ac260/Colr-0.8.9.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "5e267d33589ad4856a99091e8452d3b8", "sha256": "73447f86f6c6f250368715d76e6436e6acf1fcd15753f8a46037547c671050d8"}, "downloads": -1, "filename": "Colr-0.9.0.tar.gz", "has_sig": false, "md5_digest": "5e267d33589ad4856a99091e8452d3b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115786, "upload_time": "2019-08-09T01:01:59", "upload_time_iso_8601": "2019-08-09T01:01:59.385126Z", "url": "https://files.pythonhosted.org/packages/0b/68/5fcb701775acbae7c768e47f9cb008091d7114a45746dbfb4dead5c8b167/Colr-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "c47900f50404000ef3d800ed974b99e2", "sha256": "8c15437eeb2ec8821c6df24b62946dfc6b79f69a1d84c1a6c131945a5ff4623c"}, "downloads": -1, "filename": "Colr-0.9.1.tar.gz", "has_sig": false, "md5_digest": "c47900f50404000ef3d800ed974b99e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 116430, "upload_time": "2019-08-31T01:36:22", "upload_time_iso_8601": "2019-08-31T01:36:22.856032Z", "url": "https://files.pythonhosted.org/packages/43/a9/75bcc155e0bf57062e77974a5aea724123de3becd69fca6f8572127c09a2/Colr-0.9.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c47900f50404000ef3d800ed974b99e2", "sha256": "8c15437eeb2ec8821c6df24b62946dfc6b79f69a1d84c1a6c131945a5ff4623c"}, "downloads": -1, "filename": "Colr-0.9.1.tar.gz", "has_sig": false, "md5_digest": "c47900f50404000ef3d800ed974b99e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 116430, "upload_time": "2019-08-31T01:36:22", "upload_time_iso_8601": "2019-08-31T01:36:22.856032Z", "url": "https://files.pythonhosted.org/packages/43/a9/75bcc155e0bf57062e77974a5aea724123de3becd69fca6f8572127c09a2/Colr-0.9.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:31 2020"}