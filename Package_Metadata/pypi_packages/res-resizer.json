{"info": {"author": "Johannes Lindenbaum", "author_email": "johanneslindenbaum@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Welcome\n=======\nRes Resizer is a script that allows you to automatically process resource\nfiles for both Android and iOS projects.\n\nFor both iOS and Android you can process an individual file or an entire\nfolder. There are subtle differences between the way the script handles\nresources for different projects.\n\nThe script will process PNG and JPG files. It ignores NinePatch files.\n\niOS\n====\nIf you point the script at a folder, the script will process only images\nthat contain the @2x modifier in the file name. All other image files\nremain untouched. This prevents us from shrinking specific files for\nthe 4\" retina screen. The files are outputted in the same directory with\nthe @2x omitted from the new file name. Keep in mind this overwrites\nany existing file with that file name.\n\nAndroid\n=======\nFor 0.4.0 I have eliminated outputting images for the ldpi density. The\nAndroid documentation no longer lists this as a requirement.\n\nPoint the script at your xxhdpi drawables folder and the script will process\neither an individual file, or the entire folder, and output your xhdpi, hdpi,\nand mdpi resources in their respective folders. If these folders don't exist\nthe script will create them for you.\n\nAndroid Example\n===============\nPoint the script at \"res/drawables-xxhdpi\", which the script assumes contains\nyour xxhdpi images.\nShould your folder for the lower quality images not exist, the script will\ncreate the folders for you. You will end up with:\n\n* res/drawables-xxhdpi/\n* res/drawables-xhdpi/\n* res/drawables-hdpi/\n* res/drawables-mdpi/\n\nUsage\n=====\n\n`$ chmod +x resizer.py` Makes the script runnable.\n\nHint: all output can be silenced by adding the `--silence` option.\n\niOS\n----\n`$./resizer.py -i --folder ~/MyProject/project/images/` resize all\nimages in the images folder of your project.\n\n`$ ./resizer.py -i --file ~/MyProject/project/images/my_image.png`\nresize only one specific image.\n\n\nAndroid\n-------\n`$./resizer.py -a --folder ~/MyProject/res/drawables-xxhdpi` resize all\nfound images in xxhdpi folder. Script will output in Android style.\n\n`$ ./resizer.py -a --file ~/MyProjects/res/drawables-xxhdpi/my_image.png`\nresize specific image only.\n\n`$ ./resizer.py -a --prod` automatically find xxhdpi folder and execute\nas with --folder option. Note: --prod does not work with iOS flag.\n\n`$ ./resizer.py --exclude-scale [mdpi|hdpi|xhdpi]` do not scale down to this density.\nExclude multiple at once: `--exclude-scale ldpi mdpi`.\n\nFeedback & Improvements\n=======================\nPlease, let me know what can be improved. Fork it!", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/res-resizer/", "keywords": null, "license": "LICENSE", "maintainer": null, "maintainer_email": null, "name": "res-resizer", "package_url": "https://pypi.org/project/res-resizer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/res-resizer/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/res-resizer/"}, "release_url": "https://pypi.org/project/res-resizer/0.4.0/", "requires_dist": null, "requires_python": null, "summary": "Resource resizer for Android and iOS", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"welcome\">\n<h2>Welcome</h2>\n<p>Res Resizer is a script that allows you to automatically process resource\nfiles for both Android and iOS projects.</p>\n<p>For both iOS and Android you can process an individual file or an entire\nfolder. There are subtle differences between the way the script handles\nresources for different projects.</p>\n<p>The script will process PNG and JPG files. It ignores NinePatch files.</p>\n</div>\n<div id=\"ios\">\n<h2>iOS</h2>\n<p>If you point the script at a folder, the script will process only images\nthat contain the @2x modifier in the file name. All other image files\nremain untouched. This prevents us from shrinking specific files for\nthe 4\u201d retina screen. The files are outputted in the same directory with\nthe @2x omitted from the new file name. Keep in mind this overwrites\nany existing file with that file name.</p>\n</div>\n<div id=\"android\">\n<h2>Android</h2>\n<p>For 0.4.0 I have eliminated outputting images for the ldpi density. The\nAndroid documentation no longer lists this as a requirement.</p>\n<p>Point the script at your xxhdpi drawables folder and the script will process\neither an individual file, or the entire folder, and output your xhdpi, hdpi,\nand mdpi resources in their respective folders. If these folders don\u2019t exist\nthe script will create them for you.</p>\n</div>\n<div id=\"android-example\">\n<h2>Android Example</h2>\n<p>Point the script at \u201cres/drawables-xxhdpi\u201d, which the script assumes contains\nyour xxhdpi images.\nShould your folder for the lower quality images not exist, the script will\ncreate the folders for you. You will end up with:</p>\n<ul>\n<li>res/drawables-xxhdpi/</li>\n<li>res/drawables-xhdpi/</li>\n<li>res/drawables-hdpi/</li>\n<li>res/drawables-mdpi/</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p><cite>$ chmod +x resizer.py</cite> Makes the script runnable.</p>\n<p>Hint: all output can be silenced by adding the <cite>\u2013silence</cite> option.</p>\n<div id=\"id1\">\n<h3>iOS</h3>\n<p><cite>$./resizer.py -i \u2013folder ~/MyProject/project/images/</cite> resize all\nimages in the images folder of your project.</p>\n<p><cite>$ ./resizer.py -i \u2013file ~/MyProject/project/images/my_image.png</cite>\nresize only one specific image.</p>\n</div>\n<div id=\"id2\">\n<h3>Android</h3>\n<p><cite>$./resizer.py -a \u2013folder ~/MyProject/res/drawables-xxhdpi</cite> resize all\nfound images in xxhdpi folder. Script will output in Android style.</p>\n<p><cite>$ ./resizer.py -a \u2013file ~/MyProjects/res/drawables-xxhdpi/my_image.png</cite>\nresize specific image only.</p>\n<p><cite>$ ./resizer.py -a \u2013prod</cite> automatically find xxhdpi folder and execute\nas with \u2013folder option. Note: \u2013prod does not work with iOS flag.</p>\n<p><cite>$ ./resizer.py \u2013exclude-scale [mdpi|hdpi|xhdpi]</cite> do not scale down to this density.\nExclude multiple at once: <cite>\u2013exclude-scale ldpi mdpi</cite>.</p>\n</div>\n</div>\n<div id=\"feedback-improvements\">\n<h2>Feedback &amp; Improvements</h2>\n<p>Please, let me know what can be improved. Fork it!</p>\n</div>\n\n          </div>"}, "last_serial": 862763, "releases": {"0.4.0": [{"comment_text": "", "digests": {"md5": "520b7331ef40f1afea6fd0d3d648ee54", "sha256": "9afa34da7c797c5f75ff5b360e62fba455ab194dd19fab35be7d1f359e25c475"}, "downloads": -1, "filename": "res-resizer-0.4.0.tar.gz", "has_sig": false, "md5_digest": "520b7331ef40f1afea6fd0d3d648ee54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5198, "upload_time": "2013-09-11T14:08:33", "upload_time_iso_8601": "2013-09-11T14:08:33.746106Z", "url": "https://files.pythonhosted.org/packages/e5/c3/52a738155b8634068f9256eb8fb8b3c89e285932a9bfe95a49ea2aab09b8/res-resizer-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "520b7331ef40f1afea6fd0d3d648ee54", "sha256": "9afa34da7c797c5f75ff5b360e62fba455ab194dd19fab35be7d1f359e25c475"}, "downloads": -1, "filename": "res-resizer-0.4.0.tar.gz", "has_sig": false, "md5_digest": "520b7331ef40f1afea6fd0d3d648ee54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5198, "upload_time": "2013-09-11T14:08:33", "upload_time_iso_8601": "2013-09-11T14:08:33.746106Z", "url": "https://files.pythonhosted.org/packages/e5/c3/52a738155b8634068f9256eb8fb8b3c89e285932a9bfe95a49ea2aab09b8/res-resizer-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:44 2020"}