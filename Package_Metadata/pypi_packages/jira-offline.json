{"info": {"author": "Matt Black", "author_email": "dev@mafro.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "Git-like CLI for using Jira offline\n=================\n\n[![Github build status](https://github.com/mafrosis/jira-offline/workflows/build/badge.svg)](https://github.com/mafrosis/jira-offline/actions?query=workflow%3Abuild)\n[![PyPI version](https://img.shields.io/pypi/v/jira-offline.svg)](https://pypi.python.org/pypi/jira-offline/)\n[![PyPI status](https://img.shields.io/pypi/status/jira-offline.svg)](https://pypi.python.org/pypi/jira-offline/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/jira-offline.svg)](https://pypi.python.org/pypi/jira-offline/)\n[![PyPI license](https://img.shields.io/pypi/l/jira-offline.svg)](https://pypi.python.org/pypi/jira-offline/)\n\nWork offline and sync your changes back to Jira later. Create issues, modify issues, view stats,\nrun Jira health queries.. All from a friendly git-like CLI.\n\n\nInstallation\n------------\n\nA few options exist:\n\n  1. Install globally with pip (not recommended)\n  2. Install into a virtualenv with pip\n  3. Pull and run the latest docker image\n  4. Clone the source code and use docker compose\n\n### Install globally with pip\n\n    pip install jira-offline\n\n### Install into a virtualenv with pip\n\n    python3 -m venv jira && source jira/bin/activate\n    pip install jira-offline\n\n### Docker image\n\nUnfortunately you need an access token for even public packages hosted on Github. Get yours from\n[your settings](https://github.com/settings/tokens). Pull the docker image and run it:\n\n    echo \"$GITHUB_TOKEN\" | docker login -u mafrosis --password-stdin docker.pkg.github.com\n    docker pull docker.pkg.github.com/mafrosis/jira-offline/jira-offline:dev\n    docker run --rm -it docker.pkg.github.com/mafrosis/jira-offline/jira-offline:dev\n\n### Clone and use docker compose\n\n    git clone https://github.com/mafrosis/jira-offline.git\n    cd jira-offline\n    docker-compose build jira-offline\n    docker-compose run --rm jira-offline\n\n\nKnown Limitations\n-----------------\n\nSee the [Github Issues](https://github.com/mafrosis/jira-offline/issues) for a comprehensive list.\n\n* You can't change the state of an issue (eg. In Progress -> Done)\n([GH21](https://github.com/mafrosis/jira-offline/issues/21)).\n* You can't change an issue's type from (for example) Bug -> Story\n([GH20](https://github.com/mafrosis/jira-offline/issues/20)).\n* There are mandatory fields required on Jira project screens\n([GH16](https://github.com/mafrosis/jira-offline/issues/16)).\n* It's slow. Reading and writing all data to a single JSONL file is inefficient, and the use of the\n  Pandas library is making the CLI slow\n([GH13](https://github.com/mafrosis/jira-offline/issues/13)).\n* No support for the same project key from two different Jiras (an edge-case at this stage).\n* There's a known race condition where a Jira project's issuetypes and priority values can be changed\n  whilst working offline. This could mean that broken issues are created offline\n([GH22](https://github.com/mafrosis/jira-offline/issues/22)).\n\n\nQuick Start\n-----------\n\n**NB**: The following examples assume `jira` is available in `$PATH`\n\n### Clone\n\nThe `clone` command is used to to setup a new project, which takes a single URI describing your\nproject.\n\n### Authentication to Jira\n\nThere are two auth options, basic and oAuth.\n\n#### Basic Auth\n\nBasic auth is quick and takes your existing username and password. Beware that this will *write your\npassword into the config file on disk*.\n\n    jira clone --username benji https://jira.atlassian.com/PROJ\n\nYou will be prompted for your password.\n\n#### oAuth\n\noAuth is preferred, as it's token based and doesn't require your password. However it requires the\nsetup of an `Application Link` on the Jira server.\n\n    jira clone --oauth-private-key=applink.pem https://jira.atlassian.com/PROJ\n\n\nHow To Use\n----------\n\n**NB**: The following examples assume `jira` is available in `$PATH`\n\n### How to configure a new Jira project\n\nUse `clone` to add a project:\n\n    jira clone https://jira.atlassian.com/PROJ\n\n\nContributing\n------------\n\nIn order to contribute, please fork this repo on Github and raise pull a request with your changes.\n\nYou can see a simple development/debugging workflow in the [debugging section](#debugging).\n\n\n## Run The Tests\n\nThere are four types of testing/validation in the source code:\n\n 1. Linting of syntactic code errors, and other Python style issues with [`pylint`](http://pylint.org)\n 2. Typechecking of the python, based on the type-hints in the source using [`mypy`](http://mypy-lang.org)\n 3. Unit testing via [`pytest`](https://docs.pytest.org/en/latest), by running all the [tests](./tests)\n 4. Integration testing - which requires a local instance of Jira\n\nThe `Makefile` run the first three steps in order, when you invoke the `make` command on its own.\nThese three checks are also run on every pull request - and must pass for your code to mergeable.\n\nYou can invoke any individual stage directly with:\n\n 1. `make lint`\n 2. `make typecheck`\n 3. `make test`\n 4. `make integration`\n\n\n## Debugging\n\nThe simplest way to debug before opening an issue or contributing is to run the application from\nsource code in a docker container, using the `test` image.\n\n 1. Clone the source code to your machine\n\n 2. Build the main & test docker images:\n\n```\ndocker-compose build jira-offline\ndocker-compose build test\n```\n\n 3. Edit `docker-compose.yml` on line 5, to use the `-test` image:\n\n```\njira-offline:\n  image: mafrosis/jira-offline-test\n```\n\n 4. Add a breakpoint in the code with `import ipdb; ipdb.set_trace()`\n\n 5. Run the main docker image, which will then break:\n\n```\ndocker-compose run --rm jira-offline <CMD>\n```\n\n\nComparison to other Jira CLIs\n-----------------------------\n\nNone of the existing clients use the \"offline\" approach taken by this tool:\n\n- [`danshumaker/jira-cli`](https://github.com/danshumaker/jira-cli) -\nA full featured node.js CLI. This might be a better option if `jira-offline` lacks features you need.\n- [`keepcosmos/terjira`](https://github.com/keepcosmos/terjira) -\nFeature-rich Ruby CLI with a neat interactive query function.\n- [`mikepea/go-jira-ui`](https://github.com/mikepea/go-jira-ui) -\nA neat ncurses client focussed on listing issues and making simple changes.\n- [`foxythemes/jira-cli`](https://github.com/foxythemes/jira-cli) -\nA handsome node.js REPL-style interactive CLI. A very different approach from `jira-offline`.\n- [`toabctl/jiracli`](https://github.com/toabctl/jiracli) -\nA simple CLI for Jira. Not actively maintained.\n- [`alisaifee/jira-cli`](https://github.com/alisaifee/jira-cli) -\nAnother unmaintained and poorly-documented CLI.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/mafrosis/jira-offline", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "jira-offline", "package_url": "https://pypi.org/project/jira-offline/", "platform": "", "project_url": "https://pypi.org/project/jira-offline/", "project_urls": {"Homepage": "http://github.com/mafrosis/jira-offline"}, "release_url": "https://pypi.org/project/jira-offline/0.1a4/", "requires_dist": ["arrow (<0.16,>0.15)", "click (<8,>7)", "cryptography (<3,>2.9)", "dictdiffer (<0.9,>0.8)", "jsonlines (<1.3,>=1.2)", "oauthlib (<3.2,>=3.1)", "pandas (<1.1,>=0.25.2)", "pyjwt (<2,>1.7)", "requests (<2.24,>=2.22)", "requests-oauthlib (<1.4,>=1.3)", "tabulate (<0.9,>0.8)", "tqdm (<4.50,>4.32)", "typing-inspect (==0.5.0)", "urllib3 (<1.26,>=1.25)", "dataclasses ; python_version <= \"3.6\"", "typing ; python_version <= \"3.6\""], "requires_python": "", "summary": "CLI for using Jira offline", "version": "0.1a4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Git-like CLI for using Jira offline</h1>\n<p><a href=\"https://github.com/mafrosis/jira-offline/actions?query=workflow%3Abuild\" rel=\"nofollow\"><img alt=\"Github build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f84642975d15657264862ff1511b42001ee9fbd/68747470733a2f2f6769746875622e636f6d2f6d6166726f7369732f6a6972612d6f66666c696e652f776f726b666c6f77732f6275696c642f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/jira-offline/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac7583d37e5731425c1fdef8fe16ecbe50f55bce/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6a6972612d6f66666c696e652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/jira-offline/\" rel=\"nofollow\"><img alt=\"PyPI status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/63e051982ea26d61ed48376e085b10f67bf2cd2d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f6a6972612d6f66666c696e652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/jira-offline/\" rel=\"nofollow\"><img alt=\"PyPI pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b8e82ef25ef8d382cf625caac53795d4b7227cae/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6a6972612d6f66666c696e652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/jira-offline/\" rel=\"nofollow\"><img alt=\"PyPI license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7e060b44caf86f4b931cdc84b312ecfcc00a6050/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6a6972612d6f66666c696e652e737667\"></a></p>\n<p>Work offline and sync your changes back to Jira later. Create issues, modify issues, view stats,\nrun Jira health queries.. All from a friendly git-like CLI.</p>\n<h2>Installation</h2>\n<p>A few options exist:</p>\n<ol>\n<li>Install globally with pip (not recommended)</li>\n<li>Install into a virtualenv with pip</li>\n<li>Pull and run the latest docker image</li>\n<li>Clone the source code and use docker compose</li>\n</ol>\n<h3>Install globally with pip</h3>\n<pre><code>pip install jira-offline\n</code></pre>\n<h3>Install into a virtualenv with pip</h3>\n<pre><code>python3 -m venv jira &amp;&amp; source jira/bin/activate\npip install jira-offline\n</code></pre>\n<h3>Docker image</h3>\n<p>Unfortunately you need an access token for even public packages hosted on Github. Get yours from\n<a href=\"https://github.com/settings/tokens\" rel=\"nofollow\">your settings</a>. Pull the docker image and run it:</p>\n<pre><code>echo \"$GITHUB_TOKEN\" | docker login -u mafrosis --password-stdin docker.pkg.github.com\ndocker pull docker.pkg.github.com/mafrosis/jira-offline/jira-offline:dev\ndocker run --rm -it docker.pkg.github.com/mafrosis/jira-offline/jira-offline:dev\n</code></pre>\n<h3>Clone and use docker compose</h3>\n<pre><code>git clone https://github.com/mafrosis/jira-offline.git\ncd jira-offline\ndocker-compose build jira-offline\ndocker-compose run --rm jira-offline\n</code></pre>\n<h2>Known Limitations</h2>\n<p>See the <a href=\"https://github.com/mafrosis/jira-offline/issues\" rel=\"nofollow\">Github Issues</a> for a comprehensive list.</p>\n<ul>\n<li>You can't change the state of an issue (eg. In Progress -&gt; Done)\n(<a href=\"https://github.com/mafrosis/jira-offline/issues/21\" rel=\"nofollow\">GH21</a>).</li>\n<li>You can't change an issue's type from (for example) Bug -&gt; Story\n(<a href=\"https://github.com/mafrosis/jira-offline/issues/20\" rel=\"nofollow\">GH20</a>).</li>\n<li>There are mandatory fields required on Jira project screens\n(<a href=\"https://github.com/mafrosis/jira-offline/issues/16\" rel=\"nofollow\">GH16</a>).</li>\n<li>It's slow. Reading and writing all data to a single JSONL file is inefficient, and the use of the\nPandas library is making the CLI slow\n(<a href=\"https://github.com/mafrosis/jira-offline/issues/13\" rel=\"nofollow\">GH13</a>).</li>\n<li>No support for the same project key from two different Jiras (an edge-case at this stage).</li>\n<li>There's a known race condition where a Jira project's issuetypes and priority values can be changed\nwhilst working offline. This could mean that broken issues are created offline\n(<a href=\"https://github.com/mafrosis/jira-offline/issues/22\" rel=\"nofollow\">GH22</a>).</li>\n</ul>\n<h2>Quick Start</h2>\n<p><strong>NB</strong>: The following examples assume <code>jira</code> is available in <code>$PATH</code></p>\n<h3>Clone</h3>\n<p>The <code>clone</code> command is used to to setup a new project, which takes a single URI describing your\nproject.</p>\n<h3>Authentication to Jira</h3>\n<p>There are two auth options, basic and oAuth.</p>\n<h4>Basic Auth</h4>\n<p>Basic auth is quick and takes your existing username and password. Beware that this will <em>write your\npassword into the config file on disk</em>.</p>\n<pre><code>jira clone --username benji https://jira.atlassian.com/PROJ\n</code></pre>\n<p>You will be prompted for your password.</p>\n<h4>oAuth</h4>\n<p>oAuth is preferred, as it's token based and doesn't require your password. However it requires the\nsetup of an <code>Application Link</code> on the Jira server.</p>\n<pre><code>jira clone --oauth-private-key=applink.pem https://jira.atlassian.com/PROJ\n</code></pre>\n<h2>How To Use</h2>\n<p><strong>NB</strong>: The following examples assume <code>jira</code> is available in <code>$PATH</code></p>\n<h3>How to configure a new Jira project</h3>\n<p>Use <code>clone</code> to add a project:</p>\n<pre><code>jira clone https://jira.atlassian.com/PROJ\n</code></pre>\n<h2>Contributing</h2>\n<p>In order to contribute, please fork this repo on Github and raise pull a request with your changes.</p>\n<p>You can see a simple development/debugging workflow in the <a href=\"#debugging\" rel=\"nofollow\">debugging section</a>.</p>\n<h2>Run The Tests</h2>\n<p>There are four types of testing/validation in the source code:</p>\n<ol>\n<li>Linting of syntactic code errors, and other Python style issues with <a href=\"http://pylint.org\" rel=\"nofollow\"><code>pylint</code></a></li>\n<li>Typechecking of the python, based on the type-hints in the source using <a href=\"http://mypy-lang.org\" rel=\"nofollow\"><code>mypy</code></a></li>\n<li>Unit testing via <a href=\"https://docs.pytest.org/en/latest\" rel=\"nofollow\"><code>pytest</code></a>, by running all the <a href=\"./tests\" rel=\"nofollow\">tests</a></li>\n<li>Integration testing - which requires a local instance of Jira</li>\n</ol>\n<p>The <code>Makefile</code> run the first three steps in order, when you invoke the <code>make</code> command on its own.\nThese three checks are also run on every pull request - and must pass for your code to mergeable.</p>\n<p>You can invoke any individual stage directly with:</p>\n<ol>\n<li><code>make lint</code></li>\n<li><code>make typecheck</code></li>\n<li><code>make test</code></li>\n<li><code>make integration</code></li>\n</ol>\n<h2>Debugging</h2>\n<p>The simplest way to debug before opening an issue or contributing is to run the application from\nsource code in a docker container, using the <code>test</code> image.</p>\n<ol>\n<li>\n<p>Clone the source code to your machine</p>\n</li>\n<li>\n<p>Build the main &amp; test docker images:</p>\n</li>\n</ol>\n<pre><code>docker-compose build jira-offline\ndocker-compose build test\n</code></pre>\n<ol>\n<li>Edit <code>docker-compose.yml</code> on line 5, to use the <code>-test</code> image:</li>\n</ol>\n<pre><code>jira-offline:\n  image: mafrosis/jira-offline-test\n</code></pre>\n<ol>\n<li>\n<p>Add a breakpoint in the code with <code>import ipdb; ipdb.set_trace()</code></p>\n</li>\n<li>\n<p>Run the main docker image, which will then break:</p>\n</li>\n</ol>\n<pre><code>docker-compose run --rm jira-offline &lt;CMD&gt;\n</code></pre>\n<h2>Comparison to other Jira CLIs</h2>\n<p>None of the existing clients use the \"offline\" approach taken by this tool:</p>\n<ul>\n<li><a href=\"https://github.com/danshumaker/jira-cli\" rel=\"nofollow\"><code>danshumaker/jira-cli</code></a> -\nA full featured node.js CLI. This might be a better option if <code>jira-offline</code> lacks features you need.</li>\n<li><a href=\"https://github.com/keepcosmos/terjira\" rel=\"nofollow\"><code>keepcosmos/terjira</code></a> -\nFeature-rich Ruby CLI with a neat interactive query function.</li>\n<li><a href=\"https://github.com/mikepea/go-jira-ui\" rel=\"nofollow\"><code>mikepea/go-jira-ui</code></a> -\nA neat ncurses client focussed on listing issues and making simple changes.</li>\n<li><a href=\"https://github.com/foxythemes/jira-cli\" rel=\"nofollow\"><code>foxythemes/jira-cli</code></a> -\nA handsome node.js REPL-style interactive CLI. A very different approach from <code>jira-offline</code>.</li>\n<li><a href=\"https://github.com/toabctl/jiracli\" rel=\"nofollow\"><code>toabctl/jiracli</code></a> -\nA simple CLI for Jira. Not actively maintained.</li>\n<li><a href=\"https://github.com/alisaifee/jira-cli\" rel=\"nofollow\"><code>alisaifee/jira-cli</code></a> -\nAnother unmaintained and poorly-documented CLI.</li>\n</ul>\n\n          </div>"}, "last_serial": 7179908, "releases": {"0.1a2": [{"comment_text": "", "digests": {"md5": "08f715e5a8459c27e34be4143dba3e4f", "sha256": "10c4374be222671ec4569f682971c18835605a34ef54ebfe4bb07212d4e7441d"}, "downloads": -1, "filename": "jira_offline-0.1a2-py3-none-any.whl", "has_sig": false, "md5_digest": "08f715e5a8459c27e34be4143dba3e4f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34893, "upload_time": "2020-05-05T10:17:31", "upload_time_iso_8601": "2020-05-05T10:17:31.586576Z", "url": "https://files.pythonhosted.org/packages/0e/bc/46cfdfb6e75614ca3706d58ea437d7c76d5222d0cc9a892756a1a1e24a3b/jira_offline-0.1a2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8af12f65f8e1417f1f88076127f97f9", "sha256": "39813033f9cb3572f05c8608e2478386effaa3b0f4c235d393a8cd927a603a38"}, "downloads": -1, "filename": "jira-offline-0.1a2.tar.gz", "has_sig": false, "md5_digest": "e8af12f65f8e1417f1f88076127f97f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38959, "upload_time": "2020-05-05T10:17:33", "upload_time_iso_8601": "2020-05-05T10:17:33.344044Z", "url": "https://files.pythonhosted.org/packages/0b/9d/49568a62f578a6593dba007a8a39eadd29276591c50b7c3cc120d8af8fc9/jira-offline-0.1a2.tar.gz", "yanked": false}], "0.1a3": [{"comment_text": "", "digests": {"md5": "2ff1ddd0839bc68e97b6613265948739", "sha256": "c1a28c645d3c9416125ce6e342d3bd59a1e503c01ec4a0813a9fff257960aa83"}, "downloads": -1, "filename": "jira_offline-0.1a3-py3-none-any.whl", "has_sig": false, "md5_digest": "2ff1ddd0839bc68e97b6613265948739", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34921, "upload_time": "2020-05-06T11:23:26", "upload_time_iso_8601": "2020-05-06T11:23:26.812547Z", "url": "https://files.pythonhosted.org/packages/83/bb/bfb4ef5eb531c4eb3bc2791eeb8739890daf0af17baea9fae86b73f313ce/jira_offline-0.1a3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d6aa3557877f2940ad386089d2ca81f", "sha256": "a31e6db5946ae56cd75fbdeadff990c2f6ea970b8a028ff57497a7aec37d6bc9"}, "downloads": -1, "filename": "jira-offline-0.1a3.tar.gz", "has_sig": false, "md5_digest": "6d6aa3557877f2940ad386089d2ca81f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39009, "upload_time": "2020-05-06T11:23:27", "upload_time_iso_8601": "2020-05-06T11:23:27.658965Z", "url": "https://files.pythonhosted.org/packages/f1/51/61cfb4f76d981168b74136e88cde61d2f915a9343c1cb6855807778db11e/jira-offline-0.1a3.tar.gz", "yanked": false}], "0.1a4": [{"comment_text": "", "digests": {"md5": "86323371efff9b541efacdbb2f9985ee", "sha256": "478f7ac62941bdaf65714b3ebb3010edc60d43e00ce780041a1bce46d982d7dd"}, "downloads": -1, "filename": "jira_offline-0.1a4-py3-none-any.whl", "has_sig": false, "md5_digest": "86323371efff9b541efacdbb2f9985ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34922, "upload_time": "2020-05-06T12:24:26", "upload_time_iso_8601": "2020-05-06T12:24:26.896682Z", "url": "https://files.pythonhosted.org/packages/c5/15/436b465359fda9e4896f7f2be074a47c0267316ba644149307ca5ea30d03/jira_offline-0.1a4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d32c192d6ba962449b2d02ab4ab6965", "sha256": "dc6d0ffc93f85bb28cbad7b8125b268988c8ecdf2c63d477f532fc0af5acf886"}, "downloads": -1, "filename": "jira-offline-0.1a4.tar.gz", "has_sig": false, "md5_digest": "0d32c192d6ba962449b2d02ab4ab6965", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38997, "upload_time": "2020-05-06T12:24:27", "upload_time_iso_8601": "2020-05-06T12:24:27.846407Z", "url": "https://files.pythonhosted.org/packages/a4/cb/a8a4fca2eaf832d2f7f4238be4ae614885510407b4627b0592ae3bf381ce/jira-offline-0.1a4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "86323371efff9b541efacdbb2f9985ee", "sha256": "478f7ac62941bdaf65714b3ebb3010edc60d43e00ce780041a1bce46d982d7dd"}, "downloads": -1, "filename": "jira_offline-0.1a4-py3-none-any.whl", "has_sig": false, "md5_digest": "86323371efff9b541efacdbb2f9985ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34922, "upload_time": "2020-05-06T12:24:26", "upload_time_iso_8601": "2020-05-06T12:24:26.896682Z", "url": "https://files.pythonhosted.org/packages/c5/15/436b465359fda9e4896f7f2be074a47c0267316ba644149307ca5ea30d03/jira_offline-0.1a4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d32c192d6ba962449b2d02ab4ab6965", "sha256": "dc6d0ffc93f85bb28cbad7b8125b268988c8ecdf2c63d477f532fc0af5acf886"}, "downloads": -1, "filename": "jira-offline-0.1a4.tar.gz", "has_sig": false, "md5_digest": "0d32c192d6ba962449b2d02ab4ab6965", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38997, "upload_time": "2020-05-06T12:24:27", "upload_time_iso_8601": "2020-05-06T12:24:27.846407Z", "url": "https://files.pythonhosted.org/packages/a4/cb/a8a4fca2eaf832d2f7f4238be4ae614885510407b4627b0592ae3bf381ce/jira-offline-0.1a4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:32 2020"}