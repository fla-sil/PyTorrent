{"info": {"author": "Corey Oordt", "author_email": "coreyoordt@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Django"], "description": "About\n=====\n\nDjango Loupe provides an easy way to display zoomable, large images. The images may be hosted locally by uploading the original large image, or externally. Externally hosted images are referenced by their URL.\n\nZoomable images are displayed by making a tiled `image pyramid`_. There are several methods and formats for making this pyramids. Django Loupe creates locally-hosted tiles in the Deep Zoom format developed by Microsoft using the open source VIPS_ library.\n\nThe OpenSeadragon_ JavaScript library displays the locally- or externally-hosted images.\n\n\nInstall\n=======\n\n1. Install Django Loupe using ``pip``::\n\n    pip install django-loupe\n\n2. Add ``\"loupe\",`` to your Django project's ``INSTALLED_APPS``.\n\n3. Install VIPS_ on your platform. There are packages for Windows, and most Linux distributions include a package. There is a homebrew recipe for Mac OS X.\n\n\nUpload an image\n===============\n\n1. Add a new loupe image\n\n2. Enter in a title and description\n\n3. Click on the upload file button and select a high-res file\n\n4. Save.\n\n\nEnter an externally hosted image\n================================\n\n1. Add a new loupe image\n\n2. Enter a title and description\n\n3. Enter in the URL for the tiles. This is not the URL for the page where you view the image. You will have to look at the page source to discover the tileset URL. Different formats have standard description files and Django Loupe will determine the correct URL from these.\n\n   * **Deep Zoom:** ``http://example.com/path/to/image/imagename.dzi``\n   * **International Image Interoperability Framework:** ``http://example.com/path/to/image/info.xml``\n   * **Zoomify:** ``http://example.com/path/to/image/ImageProperties.xml``\n\n4. Select the type of External tileset type from the selection.\n\n5. Save.\n\n\nServing an image\n================\n\n1. In the template include the JavaScript:\n\n   .. code-block:: django\n\n       {% load loupe_tags %}{% openseadragon_js %}\n\n2. ``{{ object.render }}`` will include the HTML fragment for the large image.\n\n   * If it is an external tile set, it looks for ``<modulename>/<classname>_<tileset_type>.html`` where ``<tileset_type>`` is the short name of the tileset type choice.\n   * Finally, it looks in ``<modulename>/<classname>_default.html``\n\n\n\nUsing remote storage\n====================\n\n#. Use ``django-queued-storage``\n#. Set ``'IMAGE_STORAGE'`` to appropriate storage type.\n#. Specify setting ``'QUEUED_STORAGE_TASK'`` to either ``'loupe.task.TileAndTransfer'`` or ``'loupe.task.TileTransferAndDelete'``.\n\n\n.. _`image pyramid`: http://msdn.microsoft.com/en-us/library/cc645077(v=vs.95).aspx\n.. _VIPS: http://www.vips.ecs.soton.ac.uk/index.php?title=VIPS\n.. _OpenSeadragon: http://openseadragon.github.io/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/natgeoed/django-loupe", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-image-loupe", "package_url": "https://pypi.org/project/django-image-loupe/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-image-loupe/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/natgeoed/django-loupe"}, "release_url": "https://pypi.org/project/django-image-loupe/0.5/", "requires_dist": null, "requires_python": null, "summary": "A high resolution image manager for pan and zooming into images", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about\">\n<h2>About</h2>\n<p>Django Loupe provides an easy way to display zoomable, large images. The images may be hosted locally by uploading the original large image, or externally. Externally hosted images are referenced by their URL.</p>\n<p>Zoomable images are displayed by making a tiled <a href=\"http://msdn.microsoft.com/en-us/library/cc645077(v=vs.95).aspx\" rel=\"nofollow\">image pyramid</a>. There are several methods and formats for making this pyramids. Django Loupe creates locally-hosted tiles in the Deep Zoom format developed by Microsoft using the open source <a href=\"http://www.vips.ecs.soton.ac.uk/index.php?title=VIPS\" rel=\"nofollow\">VIPS</a> library.</p>\n<p>The <a href=\"http://openseadragon.github.io/\" rel=\"nofollow\">OpenSeadragon</a> JavaScript library displays the locally- or externally-hosted images.</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<ol>\n<li><p>Install Django Loupe using <tt>pip</tt>:</p>\n<pre>pip install django-loupe\n</pre>\n</li>\n<li><p>Add <tt>\"loupe\",</tt> to your Django project\u2019s <tt>INSTALLED_APPS</tt>.</p>\n</li>\n<li><p>Install <a href=\"http://www.vips.ecs.soton.ac.uk/index.php?title=VIPS\" rel=\"nofollow\">VIPS</a> on your platform. There are packages for Windows, and most Linux distributions include a package. There is a homebrew recipe for Mac OS X.</p>\n</li>\n</ol>\n</div>\n<div id=\"upload-an-image\">\n<h2>Upload an image</h2>\n<ol>\n<li>Add a new loupe image</li>\n<li>Enter in a title and description</li>\n<li>Click on the upload file button and select a high-res file</li>\n<li>Save.</li>\n</ol>\n</div>\n<div id=\"enter-an-externally-hosted-image\">\n<h2>Enter an externally hosted image</h2>\n<ol>\n<li>Add a new loupe image</li>\n<li>Enter a title and description</li>\n<li>Enter in the URL for the tiles. This is not the URL for the page where you view the image. You will have to look at the page source to discover the tileset URL. Different formats have standard description files and Django Loupe will determine the correct URL from these.<ul>\n<li><strong>Deep Zoom:</strong> <tt><span class=\"pre\">http://example.com/path/to/image/imagename.dzi</span></tt></li>\n<li><strong>International Image Interoperability Framework:</strong> <tt><span class=\"pre\">http://example.com/path/to/image/info.xml</span></tt></li>\n<li><strong>Zoomify:</strong> <tt><span class=\"pre\">http://example.com/path/to/image/ImageProperties.xml</span></tt></li>\n</ul>\n</li>\n<li>Select the type of External tileset type from the selection.</li>\n<li>Save.</li>\n</ol>\n</div>\n<div id=\"serving-an-image\">\n<h2>Serving an image</h2>\n<ol>\n<li><p>In the template include the JavaScript:</p>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">load</span> <span class=\"nv\">loupe_tags</span> <span class=\"cp\">%}{%</span> <span class=\"k\">openseadragon_js</span> <span class=\"cp\">%}</span>\n</pre>\n</li>\n<li><p><tt>{{ object.render }}</tt> will include the HTML fragment for the large image.</p>\n<ul>\n<li>If it is an external tile set, it looks for <tt><span class=\"pre\">&lt;modulename&gt;/&lt;classname&gt;_&lt;tileset_type&gt;.html</span></tt> where <tt>&lt;tileset_type&gt;</tt> is the short name of the tileset type choice.</li>\n<li>Finally, it looks in <tt><span class=\"pre\">&lt;modulename&gt;/&lt;classname&gt;_default.html</span></tt></li>\n</ul>\n</li>\n</ol>\n</div>\n<div id=\"using-remote-storage\">\n<h2>Using remote storage</h2>\n<ol>\n<li>Use <tt><span class=\"pre\">django-queued-storage</span></tt></li>\n<li>Set <tt>'IMAGE_STORAGE'</tt> to appropriate storage type.</li>\n<li>Specify setting <tt>'QUEUED_STORAGE_TASK'</tt> to either <tt>'loupe.task.TileAndTransfer'</tt> or <tt>'loupe.task.TileTransferAndDelete'</tt>.</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 1518456, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "b3f40731b1b5c5e166d15f030299c0ba", "sha256": "e57ba31ed4fc020c163b6796c2c4b36ebfd1b9805e161d95f0bdf0ba48fc49b6"}, "downloads": -1, "filename": "django-image-loupe-0.3.tar.gz", "has_sig": false, "md5_digest": "b3f40731b1b5c5e166d15f030299c0ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 723573, "upload_time": "2013-04-29T16:29:33", "upload_time_iso_8601": "2013-04-29T16:29:33.719657Z", "url": "https://files.pythonhosted.org/packages/91/af/47108df8fc4a8c53476af78913e2699754d67531ccc7f35878b6d21bfbb5/django-image-loupe-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "2ff5ed8a09a3b545cabe54ebd36e673b", "sha256": "2945ca6af84606cfdbacf12dae2c024f9aa4f6c71d0b057a413f161336a654a4"}, "downloads": -1, "filename": "django-image-loupe-0.3.1.tar.gz", "has_sig": false, "md5_digest": "2ff5ed8a09a3b545cabe54ebd36e673b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 724341, "upload_time": "2013-04-30T15:26:13", "upload_time_iso_8601": "2013-04-30T15:26:13.294959Z", "url": "https://files.pythonhosted.org/packages/3c/f5/4322046b502a106eb53174db4f386e9437bba87b9fd6c1b902a53c10be13/django-image-loupe-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "b4dedcac2e6d3e09646730d05cfed667", "sha256": "d27f92cb47a69e2afddd72faefa35b8f08f53b04234d59f86d4fe2fdfb182849"}, "downloads": -1, "filename": "django-image-loupe-0.3.2.tar.gz", "has_sig": false, "md5_digest": "b4dedcac2e6d3e09646730d05cfed667", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 724531, "upload_time": "2013-05-01T18:52:27", "upload_time_iso_8601": "2013-05-01T18:52:27.683718Z", "url": "https://files.pythonhosted.org/packages/a7/0c/38bcc9d8e2b0bad98c5c37a289cf695e359a252abac74ba7589d5db2cf7a/django-image-loupe-0.3.2.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "ec39ee5b357e4c3d4812d4dc26c5fb0d", "sha256": "03c73551e3db3b93f9273a1209c02e9bca4f48c9c2a64728dbbff60b21c3d69c"}, "downloads": -1, "filename": "django-image-loupe-0.4.tar.gz", "has_sig": false, "md5_digest": "ec39ee5b357e4c3d4812d4dc26c5fb0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 728033, "upload_time": "2015-03-26T13:50:58", "upload_time_iso_8601": "2015-03-26T13:50:58.425398Z", "url": "https://files.pythonhosted.org/packages/bd/42/a19786901fed6e3e91b25b49a8cc99dd9c11efbf0a902dcd0772441137f4/django-image-loupe-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "8c5cece706b69f91b1ae76d1a0ac6644", "sha256": "af5821768da234cb71b0cd70b84add764cf9b12b74308377fba8ad60989a100a"}, "downloads": -1, "filename": "django-image-loupe-0.5.tar.gz", "has_sig": false, "md5_digest": "8c5cece706b69f91b1ae76d1a0ac6644", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 728569, "upload_time": "2015-04-23T19:14:41", "upload_time_iso_8601": "2015-04-23T19:14:41.277324Z", "url": "https://files.pythonhosted.org/packages/a7/00/e72382733d7e74746d1a7957e334e1501029b6c14ff84da8c7c95cb251ee/django-image-loupe-0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8c5cece706b69f91b1ae76d1a0ac6644", "sha256": "af5821768da234cb71b0cd70b84add764cf9b12b74308377fba8ad60989a100a"}, "downloads": -1, "filename": "django-image-loupe-0.5.tar.gz", "has_sig": false, "md5_digest": "8c5cece706b69f91b1ae76d1a0ac6644", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 728569, "upload_time": "2015-04-23T19:14:41", "upload_time_iso_8601": "2015-04-23T19:14:41.277324Z", "url": "https://files.pythonhosted.org/packages/a7/00/e72382733d7e74746d1a7957e334e1501029b6c14ff84da8c7c95cb251ee/django-image-loupe-0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:38 2020"}