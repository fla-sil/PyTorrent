{"info": {"author": "Ludovic Chabant", "author_email": "ludovic@chabant.com", "bugtrack_url": null, "classifiers": [], "description": "\nSiloRider\n=========\n\nSiloRider is a command-line utility that lets you implement the `POSSE`_ model\non a website. This is how it works:\n\n- It reads your website's main page (or whatever URL you supply) and looks for\n  `Microformats`_ markup.\n- It reads a configuration file where you describe which \"silos\" (*i.e.*\n  external services) you want to post your content to.\n- It reads a local cache file to figure out which content has already been\n  posted where, so it only posts new content.\n- It actually posts that content to each silo.\n\n\nSupported Silos\n---------------\n\nRight now, the following silos are supported:\n\n- `Mastodon`_: an open, federated social network and microblogging service.\n- `Twitter`_: a proprietary social network and microblogging service.\n- Print: a debug silo that just prints entries in the console.\n\n\nQuickstart\n----------\n\nSiloRider will need to read a configuration file in `INI`_ format. The minimum\nrequirement is to define at least one \"silo\" using a ``silo:<name>`` section,\nand to specify the url to one of your personal websites::\n\n    [silo:my_mastodon]\n    type: mastodon\n    url: https://mastodon.social\n\n    [urls]\n    my_blog: https://your.website.com\n\nThis defines one Mastodon silo to which you want to cross-post entries from\nyour blog at ``your.website.com``.\n\nYou can then run::\n\n    silorider auth my_mastodon \n\nThis command will authenticate your Mastodon account and provide SiloRider with\nthe permission to post to your timeline. The authorization tokens are stored in\na cache file that defaults to ``silorider.db``, next to the configuration file.\nLater, this cache will also contain the list of entries already posted to each\nsilo.\n\nOnce authenticated, you can run::\n\n    silorider populate\n\nThis will populate the cache with the existing entries, since you probably\ndon't want the first run of SiloRider to cross-post your last dozen or so\nentries in one go.\n\nLater, when you post something new, you can then run::\n\n    silorider process\n\nThis will pick up the new entries and post them to Mastodon. You can run this\ncommand again regularly... if there's something new, SiloRider will cross-post\nit to the configured silos. If not, it will just exit.\n\n\n.. _POSSE: https://indieweb.org/POSSE\n.. _Microformats: http://microformats.org/\n.. _Mastodon: https://joinmastodon.org/\n.. _Twitter: https://twitter.com/\n.. _INI: https://en.wikipedia.org/wiki/INI_file\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bolt80.com/silorider", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "silorider", "package_url": "https://pypi.org/project/silorider/", "platform": "", "project_url": "https://pypi.org/project/silorider/", "project_urls": {"Homepage": "https://bolt80.com/silorider"}, "release_url": "https://pypi.org/project/silorider/0.2.0/", "requires_dist": ["coloredlogs (>=10.0)", "Mastodon.py (>=1.3.0)", "mf2py (>=1.1.0)", "mf2util (>=0.5.0)", "python-dateutil (>=2.7.0)", "python-twitter (>=3.4.0)"], "requires_python": "", "summary": "Scans a website's microformats and cross-posts content to 'silo' services.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>SiloRider is a command-line utility that lets you implement the <a href=\"https://indieweb.org/POSSE\" rel=\"nofollow\">POSSE</a> model\non a website. This is how it works:</p>\n<ul>\n<li>It reads your website\u2019s main page (or whatever URL you supply) and looks for\n<a href=\"http://microformats.org/\" rel=\"nofollow\">Microformats</a> markup.</li>\n<li>It reads a configuration file where you describe which \u201csilos\u201d (<em>i.e.</em>\nexternal services) you want to post your content to.</li>\n<li>It reads a local cache file to figure out which content has already been\nposted where, so it only posts new content.</li>\n<li>It actually posts that content to each silo.</li>\n</ul>\n<div id=\"supported-silos\">\n<h2>Supported Silos</h2>\n<p>Right now, the following silos are supported:</p>\n<ul>\n<li><a href=\"https://joinmastodon.org/\" rel=\"nofollow\">Mastodon</a>: an open, federated social network and microblogging service.</li>\n<li><a href=\"https://twitter.com/\" rel=\"nofollow\">Twitter</a>: a proprietary social network and microblogging service.</li>\n<li>Print: a debug silo that just prints entries in the console.</li>\n</ul>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>SiloRider will need to read a configuration file in <a href=\"https://en.wikipedia.org/wiki/INI_file\" rel=\"nofollow\">INI</a> format. The minimum\nrequirement is to define at least one \u201csilo\u201d using a <tt><span class=\"pre\">silo:&lt;name&gt;</span></tt> section,\nand to specify the url to one of your personal websites:</p>\n<pre>[silo:my_mastodon]\ntype: mastodon\nurl: https://mastodon.social\n\n[urls]\nmy_blog: https://your.website.com\n</pre>\n<p>This defines one Mastodon silo to which you want to cross-post entries from\nyour blog at <tt>your.website.com</tt>.</p>\n<p>You can then run:</p>\n<pre>silorider auth my_mastodon\n</pre>\n<p>This command will authenticate your Mastodon account and provide SiloRider with\nthe permission to post to your timeline. The authorization tokens are stored in\na cache file that defaults to <tt>silorider.db</tt>, next to the configuration file.\nLater, this cache will also contain the list of entries already posted to each\nsilo.</p>\n<p>Once authenticated, you can run:</p>\n<pre>silorider populate\n</pre>\n<p>This will populate the cache with the existing entries, since you probably\ndon\u2019t want the first run of SiloRider to cross-post your last dozen or so\nentries in one go.</p>\n<p>Later, when you post something new, you can then run:</p>\n<pre>silorider process\n</pre>\n<p>This will pick up the new entries and post them to Mastodon. You can run this\ncommand again regularly\u2026 if there\u2019s something new, SiloRider will cross-post\nit to the configured silos. If not, it will just exit.</p>\n</div>\n\n          </div>"}, "last_serial": 4115263, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "de83ddc9b9fb8d2991fb48ef886e76f2", "sha256": "50a21c1b4a80c3921ceeb64ba3838e506691faea4a01d3d4c683860324787671"}, "downloads": -1, "filename": "silorider-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "de83ddc9b9fb8d2991fb48ef886e76f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26031, "upload_time": "2018-07-30T03:10:22", "upload_time_iso_8601": "2018-07-30T03:10:22.637154Z", "url": "https://files.pythonhosted.org/packages/47/b9/153467d2ef320006ec5c2f06a81c569f98b917b4f1a6ea27ee1e9aa07ec7/silorider-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3a896334b58cdd5346d61667492b80a", "sha256": "197daaa2082ab0506c2f0201faa85dfd33a87b379ea3935932eb386d325a8268"}, "downloads": -1, "filename": "silorider-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e3a896334b58cdd5346d61667492b80a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48490, "upload_time": "2018-07-30T03:10:23", "upload_time_iso_8601": "2018-07-30T03:10:23.930417Z", "url": "https://files.pythonhosted.org/packages/ec/32/cd9f6e085b3c322b45e7602fbf1292cdde534b322ffd453a65cf70245cd2/silorider-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b45058c9982ca9f4949d17550eff922e", "sha256": "5592a67db82503a95913d20bc150b76cc2e4f365e797b83ee79d4b74bd42c4cd"}, "downloads": -1, "filename": "SiloRider-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b45058c9982ca9f4949d17550eff922e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26270, "upload_time": "2018-07-30T07:01:07", "upload_time_iso_8601": "2018-07-30T07:01:07.756060Z", "url": "https://files.pythonhosted.org/packages/fd/70/0d3ade7b0ade58be37175c3129408c320418436e1e30ba242c66ea8e473c/SiloRider-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b92035775f6cb171c5328731dd0f7f5", "sha256": "044eb4d5fd9e1139f60f5967c02081feff2cd30dcd0e9a19b8c103ed51eef265"}, "downloads": -1, "filename": "SiloRider-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4b92035775f6cb171c5328731dd0f7f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49200, "upload_time": "2018-07-30T07:01:09", "upload_time_iso_8601": "2018-07-30T07:01:09.432129Z", "url": "https://files.pythonhosted.org/packages/ae/df/1202919135af320e33929e1094b77952131c8a573cb27faa90407822cd63/SiloRider-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b45058c9982ca9f4949d17550eff922e", "sha256": "5592a67db82503a95913d20bc150b76cc2e4f365e797b83ee79d4b74bd42c4cd"}, "downloads": -1, "filename": "SiloRider-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b45058c9982ca9f4949d17550eff922e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26270, "upload_time": "2018-07-30T07:01:07", "upload_time_iso_8601": "2018-07-30T07:01:07.756060Z", "url": "https://files.pythonhosted.org/packages/fd/70/0d3ade7b0ade58be37175c3129408c320418436e1e30ba242c66ea8e473c/SiloRider-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b92035775f6cb171c5328731dd0f7f5", "sha256": "044eb4d5fd9e1139f60f5967c02081feff2cd30dcd0e9a19b8c103ed51eef265"}, "downloads": -1, "filename": "SiloRider-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4b92035775f6cb171c5328731dd0f7f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49200, "upload_time": "2018-07-30T07:01:09", "upload_time_iso_8601": "2018-07-30T07:01:09.432129Z", "url": "https://files.pythonhosted.org/packages/ae/df/1202919135af320e33929e1094b77952131c8a573cb27faa90407822cd63/SiloRider-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:27 2020"}