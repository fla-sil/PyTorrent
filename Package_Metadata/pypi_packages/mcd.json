{"info": {"author": "Matt Shannon", "author_email": "matt.shannon@cantab.net", "bugtrack_url": null, "classifiers": [], "description": "mcd\n===\n\nThis package computes mel cepstral distortions in python.\nMel cepstral distortions are used in assessing the quality of synthesized\nspeech.\n\nOverview\n--------\n\nMel cepstral distortion (MCD) is a measure of how different two sequences of\nmel cepstra are.\nIt is used in assessing the quality of parametric speech synthesis systems,\nincluding statistical parametric speech synthesis systems, the idea being that\nthe smaller the MCD between synthesized and natural mel cepstral sequences, the\ncloser the synthetic speech is to reproducing natural speech.\nIt is by no means a perfect metric for assessing the quality of synthetic\nspeech, but is often a useful indicator in conjunction with other metrics.\n\nThe mcd package provides scripts to compute a variety of forms of MCD score:\n\n- plain MCD, for which it is assumed that the two sequences to be compared are\n  already \"aligned\" in terms of their timing.\n- plain MCD excluding certain segments, for example silence segments.\n- MCD DTW, which uses dynamic time warping (DTW) to compute the minimum MCD\n  obtainable by \"aligning\" the two sequences.\n  This metric does not penalize differences in the timing between natural and\n  synthetic speech, which is often desirable.\n\nIt also contains general purpose dynamic time warping code.\n\nLicense\n-------\n\nPlease see the file ``License`` for details of the license and warranty for\nmcd.\n\nInstallation\n------------\n\nFor most purposes the simplest way to install mcd is to use pip.\nFor example in Debian and Ubuntu::\n\n    sudo apt-get install python-numpy\n    sudo pip install mcd\n\nThe first command installs numpy from the system repository, since installing\nnumpy using pip is generally not recommended.\nThe second command installs the latest released version of\n`mcd on PyPI <https://pypi.python.org/pypi/mcd>`_, together with any currently\nuninstalled python packages required by mcd.\n\nmcd can also be installed in a virtualenv::\n\n    sudo apt-get install python-numpy\n    virtualenv --system-site-packages env\n    env/bin/pip install mcd\n\nThe latest development version of mcd is available from a github repository\n(see below).\n\nTo check that mcd is installed correctly you can run the test suite::\n\n    python -m unittest discover mcd\n\nExamples\n--------\n\nExamples of example usage (in unix) are given in ``example_usage``.\n\nDevelopment\n-----------\n\nThe source code is hosted in the\n`mcd github repository <https://github.com/MattShannon/mcd>`_.\nTo obtain the latest source code using git::\n\n    git clone git://github.com/MattShannon/mcd.git\n\nDevelopment is in fact done using `darcs <http://darcs.net/>`_, with the darcs\nrepository converted to a git repository using\n`darcs-to-git <https://github.com/purcell/darcs-to-git>`_.\n\nTo install any currently uninstalled python packages required by mcd::\n\n    sudo apt-get install cython python-numpy\n    sudo pip install -r requirements.txt\n\nTo compile the cython part of mcd in the current directory::\n\n    python setup.py build_ext --inplace\n\nThis command must be run after every modification to the source ``.pyx`` files.\n\nTo run the full test suite, including tests of command-line tools, on the\nworking copy::\n\n    python -m unittest discover mcd\n    PYTHONPATH=. python bin/test_cli.py\n\nA note on ``setup.py``\n----------------------\n\nThe included ``setup.py`` file operates in one of two modes depending on\nwhether or not the file ``dev`` is present in the project root directory.\nIn development mode (``dev`` present, as for the github repository), the\n``build_ext`` command uses cython to compile cython modules from their ``.pyx``\nsource, and the ``sdist`` command is modified to first use cython to compile\ncython modules from their ``.pyx`` source to ``.c`` files.\nIn distribution mode (``dev`` absent, as for source distributions such as the\ncode on PyPI), the ``build_ext`` command uses a C compiler to directly compile\ncython modules from the corresponding ``.c`` files.\nThis approach ensures that source distributions can be installed on systems\nwithout cython or with an incompatible version of cython, while ensuring that\ndistributed ``.c`` files are always up-to-date and that the source ``.pyx``\nfiles are used instead of ``.c`` files during development.\n\nThe author would welcome any suggestions for more elegant ways to achieve a\nsimilar effect to the approach described above!\n\nBugs\n----\n\nPlease use the\n`issue tracker <https://github.com/MattShannon/mcd/issues>`_ to submit bug\nreports.\n\nContact\n-------\n\nThe author of mcd is `Matt Shannon <mailto:matt.shannon@cantab.net>`_.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/MattShannon/mcd", "keywords": null, "license": "3-clause BSD (see License file)", "maintainer": null, "maintainer_email": null, "name": "mcd", "package_url": "https://pypi.org/project/mcd/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mcd/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/MattShannon/mcd"}, "release_url": "https://pypi.org/project/mcd/0.4/", "requires_dist": null, "requires_python": null, "summary": "Mel cepstral distortion (MCD) computations in python.", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package computes mel cepstral distortions in python.\nMel cepstral distortions are used in assessing the quality of synthesized\nspeech.</p>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>Mel cepstral distortion (MCD) is a measure of how different two sequences of\nmel cepstra are.\nIt is used in assessing the quality of parametric speech synthesis systems,\nincluding statistical parametric speech synthesis systems, the idea being that\nthe smaller the MCD between synthesized and natural mel cepstral sequences, the\ncloser the synthetic speech is to reproducing natural speech.\nIt is by no means a perfect metric for assessing the quality of synthetic\nspeech, but is often a useful indicator in conjunction with other metrics.</p>\n<p>The mcd package provides scripts to compute a variety of forms of MCD score:</p>\n<ul>\n<li>plain MCD, for which it is assumed that the two sequences to be compared are\nalready \u201caligned\u201d in terms of their timing.</li>\n<li>plain MCD excluding certain segments, for example silence segments.</li>\n<li>MCD DTW, which uses dynamic time warping (DTW) to compute the minimum MCD\nobtainable by \u201caligning\u201d the two sequences.\nThis metric does not penalize differences in the timing between natural and\nsynthetic speech, which is often desirable.</li>\n</ul>\n<p>It also contains general purpose dynamic time warping code.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Please see the file <tt>License</tt> for details of the license and warranty for\nmcd.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>For most purposes the simplest way to install mcd is to use pip.\nFor example in Debian and Ubuntu:</p>\n<pre>sudo apt-get install python-numpy\nsudo pip install mcd\n</pre>\n<p>The first command installs numpy from the system repository, since installing\nnumpy using pip is generally not recommended.\nThe second command installs the latest released version of\n<a href=\"https://pypi.python.org/pypi/mcd\" rel=\"nofollow\">mcd on PyPI</a>, together with any currently\nuninstalled python packages required by mcd.</p>\n<p>mcd can also be installed in a virtualenv:</p>\n<pre>sudo apt-get install python-numpy\nvirtualenv --system-site-packages env\nenv/bin/pip install mcd\n</pre>\n<p>The latest development version of mcd is available from a github repository\n(see below).</p>\n<p>To check that mcd is installed correctly you can run the test suite:</p>\n<pre>python -m unittest discover mcd\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Examples of example usage (in unix) are given in <tt>example_usage</tt>.</p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>The source code is hosted in the\n<a href=\"https://github.com/MattShannon/mcd\" rel=\"nofollow\">mcd github repository</a>.\nTo obtain the latest source code using git:</p>\n<pre>git clone git://github.com/MattShannon/mcd.git\n</pre>\n<p>Development is in fact done using <a href=\"http://darcs.net/\" rel=\"nofollow\">darcs</a>, with the darcs\nrepository converted to a git repository using\n<a href=\"https://github.com/purcell/darcs-to-git\" rel=\"nofollow\">darcs-to-git</a>.</p>\n<p>To install any currently uninstalled python packages required by mcd:</p>\n<pre>sudo apt-get install cython python-numpy\nsudo pip install -r requirements.txt\n</pre>\n<p>To compile the cython part of mcd in the current directory:</p>\n<pre>python setup.py build_ext --inplace\n</pre>\n<p>This command must be run after every modification to the source <tt>.pyx</tt> files.</p>\n<p>To run the full test suite, including tests of command-line tools, on the\nworking copy:</p>\n<pre>python -m unittest discover mcd\nPYTHONPATH=. python bin/test_cli.py\n</pre>\n</div>\n<div id=\"a-note-on-setup-py\">\n<h2>A note on <tt>setup.py</tt></h2>\n<p>The included <tt>setup.py</tt> file operates in one of two modes depending on\nwhether or not the file <tt>dev</tt> is present in the project root directory.\nIn development mode (<tt>dev</tt> present, as for the github repository), the\n<tt>build_ext</tt> command uses cython to compile cython modules from their <tt>.pyx</tt>\nsource, and the <tt>sdist</tt> command is modified to first use cython to compile\ncython modules from their <tt>.pyx</tt> source to <tt>.c</tt> files.\nIn distribution mode (<tt>dev</tt> absent, as for source distributions such as the\ncode on PyPI), the <tt>build_ext</tt> command uses a C compiler to directly compile\ncython modules from the corresponding <tt>.c</tt> files.\nThis approach ensures that source distributions can be installed on systems\nwithout cython or with an incompatible version of cython, while ensuring that\ndistributed <tt>.c</tt> files are always up-to-date and that the source <tt>.pyx</tt>\nfiles are used instead of <tt>.c</tt> files during development.</p>\n<p>The author would welcome any suggestions for more elegant ways to achieve a\nsimilar effect to the approach described above!</p>\n</div>\n<div id=\"bugs\">\n<h2>Bugs</h2>\n<p>Please use the\n<a href=\"https://github.com/MattShannon/mcd/issues\" rel=\"nofollow\">issue tracker</a> to submit bug\nreports.</p>\n</div>\n<div id=\"contact\">\n<h2>Contact</h2>\n<p>The author of mcd is <a href=\"mailto:matt.shannon%40cantab.net\">Matt Shannon</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 2946230, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "9f8c7ad447d2da8e70dd9fac0faacd0b", "sha256": "b175681d23ea845a85a7c8e294d9a9fdd45196b4a924ca82846cb5489dca8a59"}, "downloads": -1, "filename": "mcd-0.1.tar.gz", "has_sig": false, "md5_digest": "9f8c7ad447d2da8e70dd9fac0faacd0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7577, "upload_time": "2014-02-13T00:36:58", "upload_time_iso_8601": "2014-02-13T00:36:58.052092Z", "url": "https://files.pythonhosted.org/packages/86/70/a90cfdc37575588fa7f053085cac5f74fd09282a49036dad85b289f223bd/mcd-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "da31ee1617ff286a7040710828d707b7", "sha256": "647307083fbf1f19311cd1ac35951c2a61a37cffa799e175fdebac80ab4125ca"}, "downloads": -1, "filename": "mcd-0.2.tar.gz", "has_sig": false, "md5_digest": "da31ee1617ff286a7040710828d707b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 886990, "upload_time": "2014-02-13T01:09:57", "upload_time_iso_8601": "2014-02-13T01:09:57.171603Z", "url": "https://files.pythonhosted.org/packages/2e/05/b27a24f29eae638f3f420629ab158f9a6c39193c530bb746d0b62de9eb85/mcd-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "2b1109557cb4522a56ed15c66f36f3e4", "sha256": "1ff4113bf0fa308dfc77f74163eb5ccda08550ef98f27f90148f7a81df82c75a"}, "downloads": -1, "filename": "mcd-0.3.tar.gz", "has_sig": false, "md5_digest": "2b1109557cb4522a56ed15c66f36f3e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 886101, "upload_time": "2015-02-24T23:04:23", "upload_time_iso_8601": "2015-02-24T23:04:23.957164Z", "url": "https://files.pythonhosted.org/packages/ad/0f/6a9764eda2bd5c086229e592a4e4550f390d0053ffaca4f918bf695cefc8/mcd-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "5e21079eb8e0dae1291bca5a5ed2adee", "sha256": "445dbb7e86b572566523fb47308d3564b1e9e7b8f94f9c5d50e94c0fa4c7a34f"}, "downloads": -1, "filename": "mcd-0.4.tar.gz", "has_sig": false, "md5_digest": "5e21079eb8e0dae1291bca5a5ed2adee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 895683, "upload_time": "2017-06-13T08:19:55", "upload_time_iso_8601": "2017-06-13T08:19:55.111224Z", "url": "https://files.pythonhosted.org/packages/88/7d/a4efc008cc5dda3d2a67fe3ac9896f9b868c5d9f63ee5ebbb07010b44bd6/mcd-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5e21079eb8e0dae1291bca5a5ed2adee", "sha256": "445dbb7e86b572566523fb47308d3564b1e9e7b8f94f9c5d50e94c0fa4c7a34f"}, "downloads": -1, "filename": "mcd-0.4.tar.gz", "has_sig": false, "md5_digest": "5e21079eb8e0dae1291bca5a5ed2adee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 895683, "upload_time": "2017-06-13T08:19:55", "upload_time_iso_8601": "2017-06-13T08:19:55.111224Z", "url": "https://files.pythonhosted.org/packages/88/7d/a4efc008cc5dda3d2a67fe3ac9896f9b868c5d9f63ee5ebbb07010b44bd6/mcd-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:59 2020"}