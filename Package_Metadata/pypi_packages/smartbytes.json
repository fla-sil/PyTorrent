{"info": {"author": "Aaron Esau", "author_email": "python@aaronesau.com", "bugtrack_url": null, "classifiers": [], "description": "# About\n\nsmartbytes makes byte parsing not painful\n\n\\*[insert *I can't believe it's not Python 2!* on image](https://images-na.ssl-images-amazon.com/images/G/01/aplusautomation/vendorimages/4bc3e8fe-4c6e-4b72-a676-57a4f0aeb3eb.jpg._CB527652977_.jpg)\\*\n\n# Installation\n\n## PyPi\n\n```\n# pip3 install smartbytes\n```\n\n## Manual\n\nThe only requirement for smartbytes is any version of `python3`.\n\n```\n$ git clone https://github.com/Arinerron/smartbytes.git\n$ cd smartbytes\n\n# sudo python3 setup.py install\n```\n\n# Documentation\n\nThe best way to document is to just give you a ton of cool examples.\n\n```python\n>>> from smartbytes import *\n\n# you can easily concat values to build smartbytes objects\n\n>>> smartbytes('hello world')\nb'hello world'\n\n>>> smartbytes('hello') + 0x20 + smartbytes('world')\nb'hello world'\n\n>>> smartbytes('hello') + ' ' + b'world'\nb'hello world'\n\n# you can search for strings easily\n\n>>> with open('/usr/lib/libc-2.31.so', 'rb') as f:\n...     contents = f.read()\n... \n>>> smartbytes(contents)['/bin/sh\\x00'] # find offset of /bin/sh string in libc\n1618243\n\n# smartbytes works with iters\n\n>>> smartbytes(range(10))\nb'\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t'\n\n>>> smartbytes(range(10)) + range(10)\nb'\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t'\n\n# it can flatten arrays out too\n\n>>> smartbytes([(2,3),4],[5,(((3,5),),)])\nb'\\x02\\x03\\x04\\x05\\x03\\x05'\n\n# there are some cool functions to make your smartbytes usable\n\n>>> value = smartbytes(range(100))\n>>> value\nb'\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f !\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abc'\n\n>>> str(value)\n'\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f !\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abc'\n\n>>> value.hex()\nb'000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f60616263'\n\n>>> print(value.hexdump())\n00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f    ................\n10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f    ................\n20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f     !\"#$%&'()*+,-./\n30 31 32 33 34 35 36 37 38 39 3a 3b 3c 3d 3e 3f    0123456789:;<=>?\n40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f    @ABCDEFGHIJKLMNO\n50 51 52 53 54 55 56 57 58 59 5a 5b 5c 5d 5e 5f    PQRSTUVWXYZ[\\]^_\n60 61 62 63                                        `abc\n\n# any operation you can do on a str or bytes object, you can do on a smartbytes object too\n\n>>> value = smartbytes('hello world')\n\n>>> value.reverse()\nb'dlrow olleh'\n\n>>> value.upper()\nb'hello world'\n\n>>> value.ljust(20)\nb'hello world\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\n>>> value.rjust(20)\nb'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00hello world'\n\n>>> value.split(' ')\n[b'hello', b'world']\n\n>>> value.endswith('world')\nTrue\n\n>>> value.startswith(b'hello')\nTrue\n\n>>> value.contains(0x20) # 0x20 is the ' ' character!\nTrue\n\n>>> 0x20 in value\nTrue\n\n>>> value[1]\nb'e'\n\n>>> value['e']\n1\n\n>>> len(value)\n11\n\n# ...with even more functionality than both str and bytes!\n\n>>> value.chunks(2)\n[b'he', b'll', b'o ', b'wo', b'rl', b'd']\n\n>>> value.chunks(4)\n[b'hell', b'o wo', b'rld']\n\n# you can also append many types to it and it will handle it properly\n\n>>> value = smartbytes()\n>>> value += 'hello'\n>>> value += 0x20\n>>> value += b'world'\n>>> value += smartbytes('!')\n>>> value\nb'hello world!'\n\n>>> value*4\nb'hello world!hello world!hello world!hello world!'\n\n# it comes with pwntools-like packing functions\n# NOTE: endianness can be specified using kwarg endian (e.g. endian='big')\n\n>>> p8(0x12)\nb'\\x12'\n\n>>> p16(0xaa)\nb'\\xaa'\n\n>>> p32(0xdead)\nb'\\x00\\x00\\xad\\xde'\n\n>>> p64(0xdeadbeef)\nb'\\x00\\x00\\x00\\x00\\x00\\x00\\xef\\xbe\\xad\\xde'\n\n# ...but it can also do packing and unpacking without fixed sizes\n\n>>> p(0xdeadbeef)\nb'\\xde\\xad\\xbe\\xef'\n\n>>> u('what does this look like when unpacked')\n15202366010688944152837236994529002040902519784461806602639909313811909172211576228574618980\n\n# smartbytes even works with pwntools!\n\n>>> from smartbytes import *\n>>> from pwn import *\n>>> p = process('cat')\n[+] Starting local process '/usr/bin/cat': pid 1470268\n>>> line = smartbytes(b'robert', 0x20, 'is') + 0x20 + b'an' + smartbytes(' ', 'arch', 0x20, 'user btw')\n>>> line\nb'robert is an arch user btw'\n>>> p.sendline(line)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Arinerron/smartbytes", "keywords": "smartbytes bytes str string bytesarray byte parsing pwntools pwn ctf", "license": "", "maintainer": "", "maintainer_email": "", "name": "smartbytes", "package_url": "https://pypi.org/project/smartbytes/", "platform": "", "project_url": "https://pypi.org/project/smartbytes/", "project_urls": {"Homepage": "https://github.com/Arinerron/smartbytes"}, "release_url": "https://pypi.org/project/smartbytes/1.5.2/", "requires_dist": null, "requires_python": "", "summary": "makes bytes in Python significantly less painful", "version": "1.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>About</h1>\n<p>smartbytes makes byte parsing not painful</p>\n<p>*<a href=\"https://images-na.ssl-images-amazon.com/images/G/01/aplusautomation/vendorimages/4bc3e8fe-4c6e-4b72-a676-57a4f0aeb3eb.jpg._CB527652977_.jpg\" rel=\"nofollow\">insert <em>I can't believe it's not Python 2!</em> on image</a>*</p>\n<h1>Installation</h1>\n<h2>PyPi</h2>\n<pre><code># pip3 install smartbytes\n</code></pre>\n<h2>Manual</h2>\n<p>The only requirement for smartbytes is any version of <code>python3</code>.</p>\n<pre><code>$ git clone https://github.com/Arinerron/smartbytes.git\n$ cd smartbytes\n\n# sudo python3 setup.py install\n</code></pre>\n<h1>Documentation</h1>\n<p>The best way to document is to just give you a ton of cool examples.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">smartbytes</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"c1\"># you can easily concat values to build smartbytes objects</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">smartbytes</span><span class=\"p\">(</span><span class=\"s1\">'hello world'</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">'hello world'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">smartbytes</span><span class=\"p\">(</span><span class=\"s1\">'hello'</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mh\">0x20</span> <span class=\"o\">+</span> <span class=\"n\">smartbytes</span><span class=\"p\">(</span><span class=\"s1\">'world'</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">'hello world'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">smartbytes</span><span class=\"p\">(</span><span class=\"s1\">'hello'</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">' '</span> <span class=\"o\">+</span> <span class=\"sa\">b</span><span class=\"s1\">'world'</span>\n<span class=\"sa\">b</span><span class=\"s1\">'hello world'</span>\n\n<span class=\"c1\"># you can search for strings easily</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'/usr/lib/libc-2.31.so'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">contents</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"o\">...</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">smartbytes</span><span class=\"p\">(</span><span class=\"n\">contents</span><span class=\"p\">)[</span><span class=\"s1\">'/bin/sh</span><span class=\"se\">\\x00</span><span class=\"s1\">'</span><span class=\"p\">]</span> <span class=\"c1\"># find offset of /bin/sh string in libc</span>\n<span class=\"mi\">1618243</span>\n\n<span class=\"c1\"># smartbytes works with iters</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">smartbytes</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">))</span>\n<span class=\"sa\">b</span><span class=\"s1\">'</span><span class=\"se\">\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t</span><span class=\"s1\">'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">smartbytes</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">))</span> <span class=\"o\">+</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">'</span><span class=\"se\">\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t</span><span class=\"s1\">'</span>\n\n<span class=\"c1\"># it can flatten arrays out too</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">smartbytes</span><span class=\"p\">([(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"mi\">4</span><span class=\"p\">],[</span><span class=\"mi\">5</span><span class=\"p\">,(((</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">),),)])</span>\n<span class=\"sa\">b</span><span class=\"s1\">'</span><span class=\"se\">\\x02\\x03\\x04\\x05\\x03\\x05</span><span class=\"s1\">'</span>\n\n<span class=\"c1\"># there are some cool functions to make your smartbytes usable</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">smartbytes</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span>\n<span class=\"sa\">b</span><span class=\"s1\">'</span><span class=\"se\">\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f</span><span class=\"s1\"> !\"#$%&amp;</span><span class=\"se\">\\'</span><span class=\"s1\">()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[</span><span class=\"se\">\\\\</span><span class=\"s1\">]^_`abc'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"s1\">'</span><span class=\"se\">\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f</span><span class=\"s1\"> !\"#$%&amp;</span><span class=\"se\">\\'</span><span class=\"s1\">()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[</span><span class=\"se\">\\\\</span><span class=\"s1\">]^_`abc'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">()</span>\n<span class=\"sa\">b</span><span class=\"s1\">'000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f60616263'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">hexdump</span><span class=\"p\">())</span>\n<span class=\"mi\">00</span> <span class=\"mi\">01</span> <span class=\"mi\">02</span> <span class=\"mi\">03</span> <span class=\"mi\">04</span> <span class=\"mi\">05</span> <span class=\"mi\">06</span> <span class=\"mi\">07</span> <span class=\"mi\">08</span> <span class=\"mi\">09</span> <span class=\"mi\">0</span><span class=\"n\">a</span> <span class=\"mi\">0</span><span class=\"n\">b</span> <span class=\"mi\">0</span><span class=\"n\">c</span> <span class=\"mi\">0</span><span class=\"n\">d</span> <span class=\"mi\">0</span><span class=\"n\">e</span> <span class=\"mi\">0</span><span class=\"n\">f</span>    <span class=\"o\">................</span>\n<span class=\"mi\">10</span> <span class=\"mi\">11</span> <span class=\"mi\">12</span> <span class=\"mi\">13</span> <span class=\"mi\">14</span> <span class=\"mi\">15</span> <span class=\"mi\">16</span> <span class=\"mi\">17</span> <span class=\"mi\">18</span> <span class=\"mi\">19</span> <span class=\"mi\">1</span><span class=\"n\">a</span> <span class=\"mi\">1</span><span class=\"n\">b</span> <span class=\"mi\">1</span><span class=\"n\">c</span> <span class=\"mi\">1</span><span class=\"n\">d</span> <span class=\"mi\">1</span><span class=\"n\">e</span> <span class=\"mi\">1</span><span class=\"n\">f</span>    <span class=\"o\">................</span>\n<span class=\"mi\">20</span> <span class=\"mi\">21</span> <span class=\"mi\">22</span> <span class=\"mi\">23</span> <span class=\"mi\">24</span> <span class=\"mi\">25</span> <span class=\"mi\">26</span> <span class=\"mi\">27</span> <span class=\"mi\">28</span> <span class=\"mi\">29</span> <span class=\"mi\">2</span><span class=\"n\">a</span> <span class=\"mi\">2</span><span class=\"n\">b</span> <span class=\"mi\">2</span><span class=\"n\">c</span> <span class=\"mi\">2</span><span class=\"n\">d</span> <span class=\"mi\">2</span><span class=\"n\">e</span> <span class=\"mi\">2</span><span class=\"n\">f</span>     <span class=\"err\">!</span><span class=\"s2\">\"#$%&amp;'()*+,-./</span>\n<span class=\"mi\">30</span> <span class=\"mi\">31</span> <span class=\"mi\">32</span> <span class=\"mi\">33</span> <span class=\"mi\">34</span> <span class=\"mi\">35</span> <span class=\"mi\">36</span> <span class=\"mi\">37</span> <span class=\"mi\">38</span> <span class=\"mi\">39</span> <span class=\"mi\">3</span><span class=\"n\">a</span> <span class=\"mi\">3</span><span class=\"n\">b</span> <span class=\"mi\">3</span><span class=\"n\">c</span> <span class=\"mi\">3</span><span class=\"n\">d</span> <span class=\"mi\">3</span><span class=\"n\">e</span> <span class=\"mi\">3</span><span class=\"n\">f</span>    <span class=\"mi\">0123456789</span><span class=\"p\">:;</span><span class=\"o\">&lt;=&gt;</span><span class=\"err\">?</span>\n<span class=\"mi\">40</span> <span class=\"mi\">41</span> <span class=\"mi\">42</span> <span class=\"mi\">43</span> <span class=\"mi\">44</span> <span class=\"mi\">45</span> <span class=\"mi\">46</span> <span class=\"mi\">47</span> <span class=\"mi\">48</span> <span class=\"mi\">49</span> <span class=\"mi\">4</span><span class=\"n\">a</span> <span class=\"mi\">4</span><span class=\"n\">b</span> <span class=\"mi\">4</span><span class=\"n\">c</span> <span class=\"mi\">4</span><span class=\"n\">d</span> <span class=\"mi\">4</span><span class=\"n\">e</span> <span class=\"mi\">4</span><span class=\"n\">f</span>    <span class=\"nd\">@ABCDEFGHIJKLMNO</span>\n<span class=\"mi\">50</span> <span class=\"mi\">51</span> <span class=\"mi\">52</span> <span class=\"mi\">53</span> <span class=\"mi\">54</span> <span class=\"mi\">55</span> <span class=\"mi\">56</span> <span class=\"mi\">57</span> <span class=\"mi\">58</span> <span class=\"mi\">59</span> <span class=\"mi\">5</span><span class=\"n\">a</span> <span class=\"mi\">5</span><span class=\"n\">b</span> <span class=\"mi\">5</span><span class=\"n\">c</span> <span class=\"mi\">5</span><span class=\"n\">d</span> <span class=\"mi\">5</span><span class=\"n\">e</span> <span class=\"mi\">5</span><span class=\"n\">f</span>    <span class=\"n\">PQRSTUVWXYZ</span><span class=\"p\">[</span>\\<span class=\"p\">]</span><span class=\"o\">^</span><span class=\"n\">_</span>\n<span class=\"mi\">60</span> <span class=\"mi\">61</span> <span class=\"mi\">62</span> <span class=\"mi\">63</span>                                        <span class=\"err\">`</span><span class=\"n\">abc</span>\n\n<span class=\"c1\"># any operation you can do on a str or bytes object, you can do on a smartbytes object too</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">smartbytes</span><span class=\"p\">(</span><span class=\"s1\">'hello world'</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">reverse</span><span class=\"p\">()</span>\n<span class=\"sa\">b</span><span class=\"s1\">'dlrow olleh'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n<span class=\"sa\">b</span><span class=\"s1\">'hello world'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">ljust</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">'hello world</span><span class=\"se\">\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00</span><span class=\"s1\">'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">rjust</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">'</span><span class=\"se\">\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00</span><span class=\"s1\">hello world'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"sa\">b</span><span class=\"s1\">'hello'</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s1\">'world'</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s1\">'world'</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'hello'</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">contains</span><span class=\"p\">(</span><span class=\"mh\">0x20</span><span class=\"p\">)</span> <span class=\"c1\"># 0x20 is the ' ' character!</span>\n<span class=\"kc\">True</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mh\">0x20</span> <span class=\"ow\">in</span> <span class=\"n\">value</span>\n<span class=\"kc\">True</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"sa\">b</span><span class=\"s1\">'e'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span><span class=\"p\">[</span><span class=\"s1\">'e'</span><span class=\"p\">]</span>\n<span class=\"mi\">1</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"mi\">11</span>\n\n<span class=\"c1\"># ...with even more functionality than both str and bytes!</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">chunks</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"sa\">b</span><span class=\"s1\">'he'</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s1\">'ll'</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s1\">'o '</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s1\">'wo'</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s1\">'rl'</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s1\">'d'</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">chunks</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"sa\">b</span><span class=\"s1\">'hell'</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s1\">'o wo'</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s1\">'rld'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># you can also append many types to it and it will handle it properly</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">smartbytes</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span> <span class=\"o\">+=</span> <span class=\"s1\">'hello'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span> <span class=\"o\">+=</span> <span class=\"mh\">0x20</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span> <span class=\"o\">+=</span> <span class=\"sa\">b</span><span class=\"s1\">'world'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span> <span class=\"o\">+=</span> <span class=\"n\">smartbytes</span><span class=\"p\">(</span><span class=\"s1\">'!'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span>\n<span class=\"sa\">b</span><span class=\"s1\">'hello world!'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span><span class=\"o\">*</span><span class=\"mi\">4</span>\n<span class=\"sa\">b</span><span class=\"s1\">'hello world!hello world!hello world!hello world!'</span>\n\n<span class=\"c1\"># it comes with pwntools-like packing functions</span>\n<span class=\"c1\"># NOTE: endianness can be specified using kwarg endian (e.g. endian='big')</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p8</span><span class=\"p\">(</span><span class=\"mh\">0x12</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">'</span><span class=\"se\">\\x12</span><span class=\"s1\">'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p16</span><span class=\"p\">(</span><span class=\"mh\">0xaa</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">'</span><span class=\"se\">\\xaa</span><span class=\"s1\">'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p32</span><span class=\"p\">(</span><span class=\"mh\">0xdead</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">'</span><span class=\"se\">\\x00\\x00\\xad\\xde</span><span class=\"s1\">'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p64</span><span class=\"p\">(</span><span class=\"mh\">0xdeadbeef</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">'</span><span class=\"se\">\\x00\\x00\\x00\\x00\\x00\\x00\\xef\\xbe\\xad\\xde</span><span class=\"s1\">'</span>\n\n<span class=\"c1\"># ...but it can also do packing and unpacking without fixed sizes</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span><span class=\"p\">(</span><span class=\"mh\">0xdeadbeef</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">'</span><span class=\"se\">\\xde\\xad\\xbe\\xef</span><span class=\"s1\">'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">u</span><span class=\"p\">(</span><span class=\"s1\">'what does this look like when unpacked'</span><span class=\"p\">)</span>\n<span class=\"mi\">15202366010688944152837236994529002040902519784461806602639909313811909172211576228574618980</span>\n\n<span class=\"c1\"># smartbytes even works with pwntools!</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">smartbytes</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pwn</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">process</span><span class=\"p\">(</span><span class=\"s1\">'cat'</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"o\">+</span><span class=\"p\">]</span> <span class=\"n\">Starting</span> <span class=\"n\">local</span> <span class=\"n\">process</span> <span class=\"s1\">'/usr/bin/cat'</span><span class=\"p\">:</span> <span class=\"n\">pid</span> <span class=\"mi\">1470268</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"n\">smartbytes</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'robert'</span><span class=\"p\">,</span> <span class=\"mh\">0x20</span><span class=\"p\">,</span> <span class=\"s1\">'is'</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mh\">0x20</span> <span class=\"o\">+</span> <span class=\"sa\">b</span><span class=\"s1\">'an'</span> <span class=\"o\">+</span> <span class=\"n\">smartbytes</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">,</span> <span class=\"s1\">'arch'</span><span class=\"p\">,</span> <span class=\"mh\">0x20</span><span class=\"p\">,</span> <span class=\"s1\">'user btw'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">line</span>\n<span class=\"sa\">b</span><span class=\"s1\">'robert is an arch user btw'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">sendline</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6953862, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "4bdb6f58cf7dfd86f658e31bd4b8922a", "sha256": "65d26fb39c24f7e6dacbff3ee44992a6acd3e1b9f5fdb22dfc9e1f5c2dc9fe3c"}, "downloads": -1, "filename": "smartbytes-1.0-py3-none-any.whl", "has_sig": true, "md5_digest": "4bdb6f58cf7dfd86f658e31bd4b8922a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4598, "upload_time": "2020-03-27T05:58:24", "upload_time_iso_8601": "2020-03-27T05:58:24.630539Z", "url": "https://files.pythonhosted.org/packages/67/74/299b4a6cd4edaf959937e338099d0140a01a60a717788fcf9aa4d5551fe4/smartbytes-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa84526afeaebec107c512146a09fc93", "sha256": "6a7e0ed33d55cebfde027d6675d3cd528c59f8ce578819d21ee079ddc9ef88f9"}, "downloads": -1, "filename": "smartbytes-1.0.tar.gz", "has_sig": true, "md5_digest": "aa84526afeaebec107c512146a09fc93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3918, "upload_time": "2020-03-27T05:58:27", "upload_time_iso_8601": "2020-03-27T05:58:27.243540Z", "url": "https://files.pythonhosted.org/packages/f1/94/b842b1b4b908472a870ece37d230731752967cc64d8e744daeccbc20bc23/smartbytes-1.0.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "d58ec3a9691023c8a12b4b7503426ac8", "sha256": "445f574f257d18e7a637edebdd5d6951be4cfd33521603a579312580444c2f56"}, "downloads": -1, "filename": "smartbytes-1.4-py3-none-any.whl", "has_sig": true, "md5_digest": "d58ec3a9691023c8a12b4b7503426ac8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6249, "upload_time": "2020-03-28T20:11:25", "upload_time_iso_8601": "2020-03-28T20:11:25.521506Z", "url": "https://files.pythonhosted.org/packages/28/5b/a55b4470e17d0374cffab390de31fe1efb1789a73c96bf0dbe7dc3783ffc/smartbytes-1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9df6d14f72cc5e518b17a2db03f72784", "sha256": "bcd39e9828f1610d9adc4e77c786fd9dc65901fa663f6ad21a809ff1994b01b4"}, "downloads": -1, "filename": "smartbytes-1.4.tar.gz", "has_sig": true, "md5_digest": "9df6d14f72cc5e518b17a2db03f72784", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5305, "upload_time": "2020-03-28T20:11:26", "upload_time_iso_8601": "2020-03-28T20:11:26.682762Z", "url": "https://files.pythonhosted.org/packages/ec/e1/53e2ce7f63815b17b58680334982b2f3eb66e4dc98db30e64739d1059473/smartbytes-1.4.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "c57ef79c7fca81c539855ce9981d4665", "sha256": "b3f73d5a677f4e53d46641d1fe28ab6f6b0674012f9321846b55f6236cd185ab"}, "downloads": -1, "filename": "smartbytes-1.5-py3-none-any.whl", "has_sig": true, "md5_digest": "c57ef79c7fca81c539855ce9981d4665", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6890, "upload_time": "2020-03-29T03:00:16", "upload_time_iso_8601": "2020-03-29T03:00:16.439010Z", "url": "https://files.pythonhosted.org/packages/85/d9/67ce86e8557d72cf1cf5a674af719da4c21517ea8d74a08b0948f3b35476/smartbytes-1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "61fd26d0e10567aaadbb3c54390827df", "sha256": "52561def80559a6029ce875ca048ba40438985d6aba159c75d39c47e6385f603"}, "downloads": -1, "filename": "smartbytes-1.5.tar.gz", "has_sig": true, "md5_digest": "61fd26d0e10567aaadbb3c54390827df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6483, "upload_time": "2020-03-29T03:00:17", "upload_time_iso_8601": "2020-03-29T03:00:17.994781Z", "url": "https://files.pythonhosted.org/packages/93/cb/42c5bf9b04577deeb55b79fcca6fc958d85e6765d0168694d0b8eb1546b1/smartbytes-1.5.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "5204f5e768784e3e046096613bf2f6bc", "sha256": "c089c788e1d856e1c9150f764be543d24305bdc355e70b27045867dba78fb349"}, "downloads": -1, "filename": "smartbytes-1.5.1-py3-none-any.whl", "has_sig": true, "md5_digest": "5204f5e768784e3e046096613bf2f6bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7244, "upload_time": "2020-03-29T03:04:51", "upload_time_iso_8601": "2020-03-29T03:04:51.435685Z", "url": "https://files.pythonhosted.org/packages/37/21/3b1cc16be1e80ddea764ecb09ffeadd17832f7d47252970a8bcccd8a597e/smartbytes-1.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad2f51d337676ae5ed99728f27ef9796", "sha256": "bab996b73ab1e2f5de45e4ee503a71b6333971ac79f0a774a11e94118a052e58"}, "downloads": -1, "filename": "smartbytes-1.5.1.tar.gz", "has_sig": true, "md5_digest": "ad2f51d337676ae5ed99728f27ef9796", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7122, "upload_time": "2020-03-29T03:04:53", "upload_time_iso_8601": "2020-03-29T03:04:53.086779Z", "url": "https://files.pythonhosted.org/packages/59/9e/50fa1ad68bf384272b4e97a826c18de207af1db2a00c57e6ec1d339d62b5/smartbytes-1.5.1.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "491e927f1c8d8d7bf4b1fe40b37af260", "sha256": "e65dd30a8fdfbe75f8b0a91ed823f60a6f189842312636912031c0cc4d45a470"}, "downloads": -1, "filename": "smartbytes-1.5.2-py3-none-any.whl", "has_sig": true, "md5_digest": "491e927f1c8d8d7bf4b1fe40b37af260", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7339, "upload_time": "2020-04-05T03:42:33", "upload_time_iso_8601": "2020-04-05T03:42:33.538253Z", "url": "https://files.pythonhosted.org/packages/14/49/97f344747f8b5753109a0f30dacd5fad73ae4b85f276db97113ccef6c4f6/smartbytes-1.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a72893a5095e8deea9c46e2f9db0576", "sha256": "aa5cb268510979f5741852246a18125f9431f4f62f48e6e35ec18a3e618e9271"}, "downloads": -1, "filename": "smartbytes-1.5.2.tar.gz", "has_sig": true, "md5_digest": "5a72893a5095e8deea9c46e2f9db0576", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7188, "upload_time": "2020-04-05T03:42:35", "upload_time_iso_8601": "2020-04-05T03:42:35.234732Z", "url": "https://files.pythonhosted.org/packages/f9/8c/6a44c60adc5fde299e96ed10600fd2d439211280f6a8d379f3325d93a2ca/smartbytes-1.5.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "491e927f1c8d8d7bf4b1fe40b37af260", "sha256": "e65dd30a8fdfbe75f8b0a91ed823f60a6f189842312636912031c0cc4d45a470"}, "downloads": -1, "filename": "smartbytes-1.5.2-py3-none-any.whl", "has_sig": true, "md5_digest": "491e927f1c8d8d7bf4b1fe40b37af260", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7339, "upload_time": "2020-04-05T03:42:33", "upload_time_iso_8601": "2020-04-05T03:42:33.538253Z", "url": "https://files.pythonhosted.org/packages/14/49/97f344747f8b5753109a0f30dacd5fad73ae4b85f276db97113ccef6c4f6/smartbytes-1.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a72893a5095e8deea9c46e2f9db0576", "sha256": "aa5cb268510979f5741852246a18125f9431f4f62f48e6e35ec18a3e618e9271"}, "downloads": -1, "filename": "smartbytes-1.5.2.tar.gz", "has_sig": true, "md5_digest": "5a72893a5095e8deea9c46e2f9db0576", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7188, "upload_time": "2020-04-05T03:42:35", "upload_time_iso_8601": "2020-04-05T03:42:35.234732Z", "url": "https://files.pythonhosted.org/packages/f9/8c/6a44c60adc5fde299e96ed10600fd2d439211280f6a8d379f3325d93a2ca/smartbytes-1.5.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:06 2020"}