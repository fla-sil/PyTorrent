{"info": {"author": "Maixent Chenebaux", "author_email": "max.chbx@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# Visual scripting for Pyton\n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes.\n\n\n### Installing\n\nYou can install the method by typing:\n```\npip install ritual\n```\n\n### Basic usage\n\nCreate a new folder, and start the local editor using the command:\n```bash\nritual --editor\n```\nThen, go to `http://0.0.0.0:5000/`.\nOn the local website, right click to add functions or variables (represented as boxes), and link them to create a graph.\nYou can save the graph as well as running it by clicking on the top-right buttons.\n\n![UI example](https://raw.githubusercontent.com/kerighan/ritual/master/img/UI_1.png)\n\nYou can add different pre-existing packages to the editor, as well as your own (documentation soon), by adding the `--packages` parameter:\n```bash\nritual --editor --packages ritual.lib_requests ritual.lib_pandas\n```\nThese packages add a new set of boxes that you can place and call, in this case http requests and Pandas DataFrame basic I/O functions.\n\nWhen saved, the graph and the packages references are stored in a single .json file (in the graphs/ folder) that you can call later on by omitting the `--editor` parameter:\n\n```bash\nritual -f graphs/XXXX.json\n```\nOr by loading directly the graph in Python:\n\n```python\nfrom ritual import load_graph\n\nritual = load_graph(\"graphs/XXXX.json\")\nstate = ritual.run()\n```\nThe `state` variable is a dict that contains the boxes output values, accessible by box name.\n\n## Authors\n\nMaixent Chenebaux\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kerighan/ritual", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ritual", "package_url": "https://pypi.org/project/ritual/", "platform": "", "project_url": "https://pypi.org/project/ritual/", "project_urls": {"Homepage": "https://github.com/kerighan/ritual"}, "release_url": "https://pypi.org/project/ritual/0.0.1/", "requires_dist": ["flask", "networkx", "pandas", "requests"], "requires_python": ">=3.5", "summary": "Visual scripting tool for Python", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Visual scripting for Pyton</h1>\n<h2>Getting Started</h2>\n<p>These instructions will get you a copy of the project up and running on your local machine for development and testing purposes.</p>\n<h3>Installing</h3>\n<p>You can install the method by typing:</p>\n<pre><code>pip install ritual\n</code></pre>\n<h3>Basic usage</h3>\n<p>Create a new folder, and start the local editor using the command:</p>\n<pre>ritual --editor\n</pre>\n<p>Then, go to <code>http://0.0.0.0:5000/</code>.\nOn the local website, right click to add functions or variables (represented as boxes), and link them to create a graph.\nYou can save the graph as well as running it by clicking on the top-right buttons.</p>\n<p><img alt=\"UI example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01b50c59776c483355cffe802c026376b70a19d7/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6b6572696768616e2f72697475616c2f6d61737465722f696d672f55495f312e706e67\"></p>\n<p>You can add different pre-existing packages to the editor, as well as your own (documentation soon), by adding the <code>--packages</code> parameter:</p>\n<pre>ritual --editor --packages ritual.lib_requests ritual.lib_pandas\n</pre>\n<p>These packages add a new set of boxes that you can place and call, in this case http requests and Pandas DataFrame basic I/O functions.</p>\n<p>When saved, the graph and the packages references are stored in a single .json file (in the graphs/ folder) that you can call later on by omitting the <code>--editor</code> parameter:</p>\n<pre>ritual -f graphs/XXXX.json\n</pre>\n<p>Or by loading directly the graph in Python:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ritual</span> <span class=\"kn\">import</span> <span class=\"n\">load_graph</span>\n\n<span class=\"n\">ritual</span> <span class=\"o\">=</span> <span class=\"n\">load_graph</span><span class=\"p\">(</span><span class=\"s2\">\"graphs/XXXX.json\"</span><span class=\"p\">)</span>\n<span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">ritual</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>The <code>state</code> variable is a dict that contains the boxes output values, accessible by box name.</p>\n<h2>Authors</h2>\n<p>Maixent Chenebaux</p>\n\n          </div>"}, "last_serial": 6129297, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1a42517e36170e61f20ab82d34103cdf", "sha256": "5ae2c237588f975921338fe815d1789b54dc06d6fec59fc9c1e4f3b1f9ca3010"}, "downloads": -1, "filename": "ritual-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1a42517e36170e61f20ab82d34103cdf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 20203, "upload_time": "2019-11-13T11:02:24", "upload_time_iso_8601": "2019-11-13T11:02:24.915976Z", "url": "https://files.pythonhosted.org/packages/7d/a8/fb7a2061d1129a3d188da8e5b9bd8d2b250edf66766959f6098ca869d498/ritual-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "937c71eaca01c91b0f2fe6cf7dc0fcb7", "sha256": "11be3cf0e8fdc453d65c45aa21c42134b21ca5dda7dff1a2ebd3d21b1b5d414a"}, "downloads": -1, "filename": "ritual-0.0.1.tar.gz", "has_sig": false, "md5_digest": "937c71eaca01c91b0f2fe6cf7dc0fcb7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 17386, "upload_time": "2019-11-13T11:02:27", "upload_time_iso_8601": "2019-11-13T11:02:27.438916Z", "url": "https://files.pythonhosted.org/packages/51/c6/ddab0e4a7c34582f549173aeab2e80bbbc99f16c785da288e36284f47ebb/ritual-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1a42517e36170e61f20ab82d34103cdf", "sha256": "5ae2c237588f975921338fe815d1789b54dc06d6fec59fc9c1e4f3b1f9ca3010"}, "downloads": -1, "filename": "ritual-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1a42517e36170e61f20ab82d34103cdf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 20203, "upload_time": "2019-11-13T11:02:24", "upload_time_iso_8601": "2019-11-13T11:02:24.915976Z", "url": "https://files.pythonhosted.org/packages/7d/a8/fb7a2061d1129a3d188da8e5b9bd8d2b250edf66766959f6098ca869d498/ritual-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "937c71eaca01c91b0f2fe6cf7dc0fcb7", "sha256": "11be3cf0e8fdc453d65c45aa21c42134b21ca5dda7dff1a2ebd3d21b1b5d414a"}, "downloads": -1, "filename": "ritual-0.0.1.tar.gz", "has_sig": false, "md5_digest": "937c71eaca01c91b0f2fe6cf7dc0fcb7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 17386, "upload_time": "2019-11-13T11:02:27", "upload_time_iso_8601": "2019-11-13T11:02:27.438916Z", "url": "https://files.pythonhosted.org/packages/51/c6/ddab0e4a7c34582f549173aeab2e80bbbc99f16c785da288e36284f47ebb/ritual-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:23 2020"}