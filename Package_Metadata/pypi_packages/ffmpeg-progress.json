{"info": {"author": "Andrew Udvare", "author_email": "audvare@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3 :: Only", "Topic :: Multimedia :: Sound/Audio", "Topic :: Multimedia :: Sound/Audio :: Conversion", "Topic :: Multimedia :: Video", "Topic :: Multimedia :: Video :: Conversion", "Topic :: Utilities"], "description": "# ffmpeg-progress\n\nThis script is based on the work of [Rupert Plumridge](https://gist.github.com/pruperting/397509/1068d4ced44ded986d0f52ddb4253cfee40921a7).\n\n## Basic use\n\n```python\nimport subprocess as sp\nimport sys\n\nfrom ffmpeg_progress import start\n\n\ndef ffmpeg_callback(infile: str, outfile: str, vstats_path: str):\n    return sp.Popen(['ffmpeg',\n                     '-nostats',\n                     '-loglevel', '0',\n                     '-y',\n                     '-vstats_file', vstats_path,\n                     '-i', infile,\n                      outfile]).pid\n\n\ndef on_message_handler(percent: float,\n                       fr_cnt: int,\n                       total_frames: int,\n                       elapsed: float):\n    sys.stdout.write('\\r{:.2f}%'.format(percent))\n    sys.stdout.flush()\n\n\nstart('my input file.mov',\n      'some output file.mp4',\n      ffmpeg_callback,\n      on_message=on_message_handler,\n      on_done=lambda: print(''),\n      wait_time=1)  # seconds\n```\n\n`start()` is the main function to use. If `on_message` is not passed, a default function is used. The `on_done` argument is optional. The `initial_wait_time` keyword argument can be used to specify a time to wait before processing the log.\n\nThe ffmpeg callback _must_ return a PID (`int`). It is recommended to pass `-nostats -loglevel 0` to your ffmpeg process. The ffmpeg callback also must pass `-vstats_file` given the path from the callback argument.\n\n## ffprobe\n\nAn ffprobe front-end function is included. Usage:\n\n```python\nfrom ffmpeg_progress import ffprobe\n\n\nffprobe('my file.mp4')  # returns a dict()\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Tatsh/ffmpeg-progress", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ffmpeg-progress", "package_url": "https://pypi.org/project/ffmpeg-progress/", "platform": "", "project_url": "https://pypi.org/project/ffmpeg-progress/", "project_urls": {"Homepage": "https://github.com/Tatsh/ffmpeg-progress"}, "release_url": "https://pypi.org/project/ffmpeg-progress/0.0.4/", "requires_dist": ["psutil (>=5.6.3)"], "requires_python": ">=3.5", "summary": "Get progress information for an ffmpeg process.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ffmpeg-progress</h1>\n<p>This script is based on the work of <a href=\"https://gist.github.com/pruperting/397509/1068d4ced44ded986d0f52ddb4253cfee40921a7\" rel=\"nofollow\">Rupert Plumridge</a>.</p>\n<h2>Basic use</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">subprocess</span> <span class=\"k\">as</span> <span class=\"nn\">sp</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">ffmpeg_progress</span> <span class=\"kn\">import</span> <span class=\"n\">start</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">ffmpeg_callback</span><span class=\"p\">(</span><span class=\"n\">infile</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">outfile</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">vstats_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">Popen</span><span class=\"p\">([</span><span class=\"s1\">'ffmpeg'</span><span class=\"p\">,</span>\n                     <span class=\"s1\">'-nostats'</span><span class=\"p\">,</span>\n                     <span class=\"s1\">'-loglevel'</span><span class=\"p\">,</span> <span class=\"s1\">'0'</span><span class=\"p\">,</span>\n                     <span class=\"s1\">'-y'</span><span class=\"p\">,</span>\n                     <span class=\"s1\">'-vstats_file'</span><span class=\"p\">,</span> <span class=\"n\">vstats_path</span><span class=\"p\">,</span>\n                     <span class=\"s1\">'-i'</span><span class=\"p\">,</span> <span class=\"n\">infile</span><span class=\"p\">,</span>\n                      <span class=\"n\">outfile</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">pid</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">on_message_handler</span><span class=\"p\">(</span><span class=\"n\">percent</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span>\n                       <span class=\"n\">fr_cnt</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span>\n                       <span class=\"n\">total_frames</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span>\n                       <span class=\"n\">elapsed</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">):</span>\n    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\r</span><span class=\"si\">{:.2f}</span><span class=\"s1\">%'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">percent</span><span class=\"p\">))</span>\n    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">flush</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">start</span><span class=\"p\">(</span><span class=\"s1\">'my input file.mov'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'some output file.mp4'</span><span class=\"p\">,</span>\n      <span class=\"n\">ffmpeg_callback</span><span class=\"p\">,</span>\n      <span class=\"n\">on_message</span><span class=\"o\">=</span><span class=\"n\">on_message_handler</span><span class=\"p\">,</span>\n      <span class=\"n\">on_done</span><span class=\"o\">=</span><span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">),</span>\n      <span class=\"n\">wait_time</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># seconds</span>\n</pre>\n<p><code>start()</code> is the main function to use. If <code>on_message</code> is not passed, a default function is used. The <code>on_done</code> argument is optional. The <code>initial_wait_time</code> keyword argument can be used to specify a time to wait before processing the log.</p>\n<p>The ffmpeg callback <em>must</em> return a PID (<code>int</code>). It is recommended to pass <code>-nostats -loglevel 0</code> to your ffmpeg process. The ffmpeg callback also must pass <code>-vstats_file</code> given the path from the callback argument.</p>\n<h2>ffprobe</h2>\n<p>An ffprobe front-end function is included. Usage:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ffmpeg_progress</span> <span class=\"kn\">import</span> <span class=\"n\">ffprobe</span>\n\n\n<span class=\"n\">ffprobe</span><span class=\"p\">(</span><span class=\"s1\">'my file.mp4'</span><span class=\"p\">)</span>  <span class=\"c1\"># returns a dict()</span>\n</pre>\n\n          </div>"}, "last_serial": 6073363, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e938d258cc5747469682c0e76aec0cb6", "sha256": "bfeb2c84970b701144b9fbe35a0081fe3bff01c2dc620f1179f30b396b7d8e6a"}, "downloads": -1, "filename": "ffmpeg_progress-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e938d258cc5747469682c0e76aec0cb6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4037, "upload_time": "2018-12-20T03:50:47", "upload_time_iso_8601": "2018-12-20T03:50:47.223839Z", "url": "https://files.pythonhosted.org/packages/61/06/c1c62754aed6b53b39c64cfe09a6fe81ad33a99ce5ea3147aaec80604575/ffmpeg_progress-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6006ea26ec304d68f5319837e65b86dd", "sha256": "9db1e14b0e2d2044b91bcc7e8d3337ddb0452be6dcb0e861ffd600f31df0cc2d"}, "downloads": -1, "filename": "ffmpeg-progress-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6006ea26ec304d68f5319837e65b86dd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3510, "upload_time": "2018-12-20T03:50:49", "upload_time_iso_8601": "2018-12-20T03:50:49.264987Z", "url": "https://files.pythonhosted.org/packages/cf/b9/9bf80b469f9d3ba09c8530cf800b048d9e0332bca7ddd3f5a3346f710d25/ffmpeg-progress-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "57ce5351488c1fe732035c7b314e3b32", "sha256": "be067d3b14cad3a0c5cbcbbdf37583f4804be3dd09041444dc84284285c064f6"}, "downloads": -1, "filename": "ffmpeg_progress-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "57ce5351488c1fe732035c7b314e3b32", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4069, "upload_time": "2018-12-20T15:09:18", "upload_time_iso_8601": "2018-12-20T15:09:18.760243Z", "url": "https://files.pythonhosted.org/packages/fc/fb/158d27ddaeeb29cb7e0ec0ff3d95562ad8123e1be626c3da3043018ada5a/ffmpeg_progress-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31b814d1963057a9be6fc911e71d6254", "sha256": "f6832ac9ffa78b3d45f93d07bc48d2081d1fdd98a803c2148e782b0b393d0851"}, "downloads": -1, "filename": "ffmpeg-progress-0.0.2.tar.gz", "has_sig": false, "md5_digest": "31b814d1963057a9be6fc911e71d6254", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3544, "upload_time": "2018-12-20T15:09:20", "upload_time_iso_8601": "2018-12-20T15:09:20.090192Z", "url": "https://files.pythonhosted.org/packages/ea/1e/867b843f65a6ac008ec46872c569ec54e27551293f39a41ab55493a59729/ffmpeg-progress-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "3abd912c5e8a5bdf0fccdd297a76039e", "sha256": "f69df50ce9e4bc1f869479cef0b8ef558ce0c5904e50fafa255cce5a68c5aa01"}, "downloads": -1, "filename": "ffmpeg_progress-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3abd912c5e8a5bdf0fccdd297a76039e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4066, "upload_time": "2019-06-14T07:46:15", "upload_time_iso_8601": "2019-06-14T07:46:15.895794Z", "url": "https://files.pythonhosted.org/packages/a0/a1/8a53ef5c8ab0b96b409ad97e614757f87869819f7bac505bd7a5b4bd074e/ffmpeg_progress-0.0.3-py3-none-any.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "959c08b5623698127cdae3af123a9d4a", "sha256": "8891c5b6febede96ff86e802d49ec43b9f92b17843b560544a7fde5d047809d2"}, "downloads": -1, "filename": "ffmpeg_progress-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "959c08b5623698127cdae3af123a9d4a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4442, "upload_time": "2019-11-04T06:25:58", "upload_time_iso_8601": "2019-11-04T06:25:58.393498Z", "url": "https://files.pythonhosted.org/packages/60/35/843ae593551fb2d1ecb36f32318bf21d43631d51d416ec28260356a5b6ed/ffmpeg_progress-0.0.4-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "959c08b5623698127cdae3af123a9d4a", "sha256": "8891c5b6febede96ff86e802d49ec43b9f92b17843b560544a7fde5d047809d2"}, "downloads": -1, "filename": "ffmpeg_progress-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "959c08b5623698127cdae3af123a9d4a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4442, "upload_time": "2019-11-04T06:25:58", "upload_time_iso_8601": "2019-11-04T06:25:58.393498Z", "url": "https://files.pythonhosted.org/packages/60/35/843ae593551fb2d1ecb36f32318bf21d43631d51d416ec28260356a5b6ed/ffmpeg_progress-0.0.4-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:42:47 2020"}