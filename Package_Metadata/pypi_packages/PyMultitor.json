{"info": {"author": "RealGame (Tomer Zait)", "author_email": "realgam3@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Topic :: Internet", "Topic :: Internet :: Proxy Servers", "Topic :: Internet :: WWW/HTTP", "Topic :: Security", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Testing"], "description": "## Overview\n\nPython Multi Threaded Tor Proxy,  \nDid you ever want to be at two different places at the same time?  \nWhen I asked myself this question, I actually started developing this solution in my mind.  \nWhile performing penetration tests there are often problems caused by security devices that block the \"attacking\" IP.  \nThis really annoyed me, so I wrote a script to supply a solution for this problem.  \nWith a large number of IP addresses performing the attacks, better results are guaranteed - especially when attempting attacks to bypass Web Application Firewalls, Brute-Force type attacks and many more.  \n\n[Blackhat Asia] https://www.blackhat.com/asia-17/arsenal.html#pymultitor  \n[Owasp-IL Presentation] https://www.owasp.org/images/3/3d/OWASPIL-2016-02-02_PyMultiTor_TomerZait.pdf  \n[DigitalWhisper Article (Hebrew)] http://www.digitalwhisper.co.il/files/Zines/0x2E/DW46-3-PyMultitor.pdf  \n\n## Installation\n\n### Prerequisites\n\n* Python 3.6+.\n* mitmproxy (https://mitmproxy.com/).\n* tor.\n  * On Ubuntu / Kali, `sudo apt install -y tor`\n  * On Centos, `sudo yum install -y tor`\n  * On Fedora, `sudo dnf install -y tor`\n  * On Windows,\n    * download tor expert bundle: https://www.torproject.org/download/tor/\n    * insert tor to your path environment: `{tor-win32-*_path}\\Tor`\n    * if you don't know how remember tor.exe path and use `--tor-cmd` argument on pymultitor (for example: `pymultitor --tor-cmd \"c:\\Pentest\\Web\\tor-win32-0.2.9.9\\Tor\\tor.exe\"`)\n  * On MacOS, `brew install tor`\n\n### From pip\n\n```sh\npip3 install pymultitor\n```\n\nYou may need to use `sudo`, depending on your Python installation.\n\n### From Source\n\n```sh\ngit clone https://github.com/realgam3/pymultitor.git\ncd pymultitor\n\n# Install python dependencies.\n# Depending on your setup, one or both of these may require sudo.\npip3 install -r requirements.txt\npython3 setup.py install\n\n# Confirm that everything works\npymultitor --help\n```\n\nBug reports on installation issues are welcome!\n\n## Usage\n\n### Basic Usage\n\n1. Run `pymultitor --on-string \"Your IP Address Blocked\"`.  \n2. On your script use proxy (`http://127.0.0.1:8080`).  \n   When the string `Your IP Address Blocked` will present in the response content, you will exit from another IP address.  \n\n### Command Line Flags\n\nSee `--help` for the complete list, but in short:\n\n```sh\nUsage: pymultitor [-h] [-v] [-lh LISTEN_HOST] [-lp LISTEN_PORT] [-s] [-i] [-d]  \n                  [-p PROCESSES] [-c CMD] [--on-count ON_COUNT]  \n                  [--on-string ON_STRING] [--on-regex ON_REGEX] [--on-rst]  \n\n# When To Change IP Address\n--on-count    Change IP Every x Requests (Resources Also Counted).  \n--on-string   Change IP When String Found On The Response Content.  \n--on-regex    Change IP When Regex Found On The Response Content.  \n--on-rst      Change IP When Connection Closed With TCP RST.  \n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/realgam3/pymultitor", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "PyMultitor", "package_url": "https://pypi.org/project/PyMultitor/", "platform": "any", "project_url": "https://pypi.org/project/PyMultitor/", "project_urls": {"Homepage": "https://github.com/realgam3/pymultitor"}, "release_url": "https://pypi.org/project/PyMultitor/3.1.0/", "requires_dist": ["stem (>=1.7.1)", "mitmproxy (>=4.0.4)", "requests[socks] (>=2.22.0)"], "requires_python": "", "summary": "PyMultitor - Never Stop Even If Your IP Dropped.", "version": "3.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Overview</h2>\n<p>Python Multi Threaded Tor Proxy,<br>\nDid you ever want to be at two different places at the same time?<br>\nWhen I asked myself this question, I actually started developing this solution in my mind.<br>\nWhile performing penetration tests there are often problems caused by security devices that block the \"attacking\" IP.<br>\nThis really annoyed me, so I wrote a script to supply a solution for this problem.<br>\nWith a large number of IP addresses performing the attacks, better results are guaranteed - especially when attempting attacks to bypass Web Application Firewalls, Brute-Force type attacks and many more.</p>\n<p>[Blackhat Asia] <a href=\"https://www.blackhat.com/asia-17/arsenal.html#pymultitor\" rel=\"nofollow\">https://www.blackhat.com/asia-17/arsenal.html#pymultitor</a><br>\n[Owasp-IL Presentation] <a href=\"https://www.owasp.org/images/3/3d/OWASPIL-2016-02-02_PyMultiTor_TomerZait.pdf\" rel=\"nofollow\">https://www.owasp.org/images/3/3d/OWASPIL-2016-02-02_PyMultiTor_TomerZait.pdf</a><br>\n[DigitalWhisper Article (Hebrew)] <a href=\"http://www.digitalwhisper.co.il/files/Zines/0x2E/DW46-3-PyMultitor.pdf\" rel=\"nofollow\">http://www.digitalwhisper.co.il/files/Zines/0x2E/DW46-3-PyMultitor.pdf</a></p>\n<h2>Installation</h2>\n<h3>Prerequisites</h3>\n<ul>\n<li>Python 3.6+.</li>\n<li>mitmproxy (<a href=\"https://mitmproxy.com/\" rel=\"nofollow\">https://mitmproxy.com/</a>).</li>\n<li>tor.\n<ul>\n<li>On Ubuntu / Kali, <code>sudo apt install -y tor</code></li>\n<li>On Centos, <code>sudo yum install -y tor</code></li>\n<li>On Fedora, <code>sudo dnf install -y tor</code></li>\n<li>On Windows,\n<ul>\n<li>download tor expert bundle: <a href=\"https://www.torproject.org/download/tor/\" rel=\"nofollow\">https://www.torproject.org/download/tor/</a></li>\n<li>insert tor to your path environment: <code>{tor-win32-*_path}\\Tor</code></li>\n<li>if you don't know how remember tor.exe path and use <code>--tor-cmd</code> argument on pymultitor (for example: <code>pymultitor --tor-cmd \"c:\\Pentest\\Web\\tor-win32-0.2.9.9\\Tor\\tor.exe\"</code>)</li>\n</ul>\n</li>\n<li>On MacOS, <code>brew install tor</code></li>\n</ul>\n</li>\n</ul>\n<h3>From pip</h3>\n<pre>pip3 install pymultitor\n</pre>\n<p>You may need to use <code>sudo</code>, depending on your Python installation.</p>\n<h3>From Source</h3>\n<pre>git clone https://github.com/realgam3/pymultitor.git\n<span class=\"nb\">cd</span> pymultitor\n\n<span class=\"c1\"># Install python dependencies.</span>\n<span class=\"c1\"># Depending on your setup, one or both of these may require sudo.</span>\npip3 install -r requirements.txt\npython3 setup.py install\n\n<span class=\"c1\"># Confirm that everything works</span>\npymultitor --help\n</pre>\n<p>Bug reports on installation issues are welcome!</p>\n<h2>Usage</h2>\n<h3>Basic Usage</h3>\n<ol>\n<li>Run <code>pymultitor --on-string \"Your IP Address Blocked\"</code>.</li>\n<li>On your script use proxy (<code>http://127.0.0.1:8080</code>).<br>\nWhen the string <code>Your IP Address Blocked</code> will present in the response content, you will exit from another IP address.</li>\n</ol>\n<h3>Command Line Flags</h3>\n<p>See <code>--help</code> for the complete list, but in short:</p>\n<pre>Usage: pymultitor <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>-v<span class=\"o\">]</span> <span class=\"o\">[</span>-lh LISTEN_HOST<span class=\"o\">]</span> <span class=\"o\">[</span>-lp LISTEN_PORT<span class=\"o\">]</span> <span class=\"o\">[</span>-s<span class=\"o\">]</span> <span class=\"o\">[</span>-i<span class=\"o\">]</span> <span class=\"o\">[</span>-d<span class=\"o\">]</span>  \n                  <span class=\"o\">[</span>-p PROCESSES<span class=\"o\">]</span> <span class=\"o\">[</span>-c CMD<span class=\"o\">]</span> <span class=\"o\">[</span>--on-count ON_COUNT<span class=\"o\">]</span>  \n                  <span class=\"o\">[</span>--on-string ON_STRING<span class=\"o\">]</span> <span class=\"o\">[</span>--on-regex ON_REGEX<span class=\"o\">]</span> <span class=\"o\">[</span>--on-rst<span class=\"o\">]</span>  \n\n<span class=\"c1\"># When To Change IP Address</span>\n--on-count    Change IP Every x Requests <span class=\"o\">(</span>Resources Also Counted<span class=\"o\">)</span>.  \n--on-string   Change IP When String Found On The Response Content.  \n--on-regex    Change IP When Regex Found On The Response Content.  \n--on-rst      Change IP When Connection Closed With TCP RST.  \n</pre>\n\n          </div>"}, "last_serial": 6254548, "releases": {"2.1.0": [{"comment_text": "", "digests": {"md5": "8c31031ad2066620b00bf7ae06fcd10c", "sha256": "58a234f002f84fde3fe471e5f8edb19cd06bf5ea6838e07663758b0798583451"}, "downloads": -1, "filename": "PyMultitor-2.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8c31031ad2066620b00bf7ae06fcd10c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10125, "upload_time": "2017-10-25T17:11:43", "upload_time_iso_8601": "2017-10-25T17:11:43.096831Z", "url": "https://files.pythonhosted.org/packages/7c/9c/9b4c6b549d4371c5a9dd0d3b9e696892e2fe0eb961fed2f9ad8eb1789674/PyMultitor-2.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01323c47830b030961907357fd5f517f", "sha256": "930742b28eb3e69a0bae1c7c8c1d3e4fb05de302cca63d9947ad0c337509f354"}, "downloads": -1, "filename": "PyMultitor-2.1.0.tar.gz", "has_sig": false, "md5_digest": "01323c47830b030961907357fd5f517f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7247, "upload_time": "2017-10-25T17:11:44", "upload_time_iso_8601": "2017-10-25T17:11:44.679148Z", "url": "https://files.pythonhosted.org/packages/8b/2d/eb82f7f2642e183f01da12ad330346fa74ad6146c33f1d3086f80ecb6ab3/PyMultitor-2.1.0.tar.gz", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "e2426e0bdd0e33d09925d5c82e4873e0", "sha256": "0cd4f042c74c9af82a450076cb5af5686e66016b058ebe1626e861e8da2d13cb"}, "downloads": -1, "filename": "PyMultitor-3.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e2426e0bdd0e33d09925d5c82e4873e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19117, "upload_time": "2019-12-06T14:59:54", "upload_time_iso_8601": "2019-12-06T14:59:54.852003Z", "url": "https://files.pythonhosted.org/packages/d6/7d/ac702ee44a6ad3f7cdc59ff82aa0fb3fff4d5fdaf1fd605f99a7add3908c/PyMultitor-3.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "735a18ac31ad1f98af3791c27fad1abc", "sha256": "141a986d95f1d363adb8093aa8662c57603b254906a1f16211a5309e1727b303"}, "downloads": -1, "filename": "PyMultitor-3.1.0.tar.gz", "has_sig": false, "md5_digest": "735a18ac31ad1f98af3791c27fad1abc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6564, "upload_time": "2019-12-06T14:59:56", "upload_time_iso_8601": "2019-12-06T14:59:56.370055Z", "url": "https://files.pythonhosted.org/packages/fa/8c/3d00219af610ad61114220fc034d6b8cb4efe9c5d69621a526ec3467b829/PyMultitor-3.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e2426e0bdd0e33d09925d5c82e4873e0", "sha256": "0cd4f042c74c9af82a450076cb5af5686e66016b058ebe1626e861e8da2d13cb"}, "downloads": -1, "filename": "PyMultitor-3.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e2426e0bdd0e33d09925d5c82e4873e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19117, "upload_time": "2019-12-06T14:59:54", "upload_time_iso_8601": "2019-12-06T14:59:54.852003Z", "url": "https://files.pythonhosted.org/packages/d6/7d/ac702ee44a6ad3f7cdc59ff82aa0fb3fff4d5fdaf1fd605f99a7add3908c/PyMultitor-3.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "735a18ac31ad1f98af3791c27fad1abc", "sha256": "141a986d95f1d363adb8093aa8662c57603b254906a1f16211a5309e1727b303"}, "downloads": -1, "filename": "PyMultitor-3.1.0.tar.gz", "has_sig": false, "md5_digest": "735a18ac31ad1f98af3791c27fad1abc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6564, "upload_time": "2019-12-06T14:59:56", "upload_time_iso_8601": "2019-12-06T14:59:56.370055Z", "url": "https://files.pythonhosted.org/packages/fa/8c/3d00219af610ad61114220fc034d6b8cb4efe9c5d69621a526ec3467b829/PyMultitor-3.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:32 2020"}