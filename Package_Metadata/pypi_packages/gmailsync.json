{"info": {"author": "Alberto Alcolea", "author_email": "albertoalcolea@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Communications :: Email", "Topic :: Communications :: Email :: Email Clients (MUA)"], "description": "# gmailsync\n\n[![Build Status](https://travis-ci.org/albertoalcolea/gmailsync.svg?branch=master)](https://travis-ci.org/albertoalcolea/gmailsync)\n\nSynchronize and save a backup of your Gmail messages\n\n## Requirements\n\n- python (3.6+)\n- pip\n\n## Installation\nOn all systems, install *gmailsync* by using `pip`:\n\n```bash\npip install gmailsync\n```\n\n## Updating\n\n```bash\npip install gmailsync --upgrade\n```\n\n## Usage\n\nList Gmail labels:\n\n```bash\ngmailsync -l\n```\n\nSynchronize all channels:\n\n```bash\ngmailsync\n```\n\nSynchronize concrete channels/groups:\n\n```bash\ngmailsync group1 group2 channelXYZ\n```\n\n## Create a new Google Cloud Project\nGmailsync uses the Google API to retrieve messages from Gmail.\n\nAs it is a limited service unless your pay, gmailsync does not provide a common project, but you must create your own.\n\nThe free tier is far enough for a personal or professional account. Gmailsync tries to limit the requests according to Google recommendations to no reach the quota.\n\nTo create a new Google Cloud Platform project go to this link and create a new project:\n[https://console.cloud.google.com/](https://console.cloud.google.com/)\n\nThen you need to enable Gmail API for that project and generate a new OAuth 2.0 key and download it. By default gmailsync takes this file from `~/.gmailsync/credentials.json`. You can customize this path in the configuration file.\n\nThis file will be the credentials file of the application in the context of gmailsync.\n\n\n## Configuration\n\nBy default gmailsync uses this configuration file: `~/.gmailsync/config`.\n\nTo specify a different path, you can use the `-c` option:\n\n```bash\ngmailsync -c another/config/file ...\n```\n\nThe configuration file looks like this:\n\n```python\n[channel-starred]\nmailbox: ~/mail/starred\nquery: label:starred\n\n[channel-notifications]\nmailbox: ~/mail/notifications\nquery: label:notifications\nbox_type: mbox\n\n[channel-coworkers]\nmailbox: ~/mail/coworkers\nquery: from:alice@gmail.com OR from:bob@gmail.com\n\n[group-important]\nchannels: starred, coworkers\n```\n\nSo, you could execute:\n - `gmailsync` to retrieve the new messages of all channels.\n - `gmailsync important` to retrieve the new messages of the channels \"starred\" and \"coworkers\".\n - `gmailsync notifications` to retrieve the new messages of the channel \"notifications\".\n - `gmailsync important notifications` to retrieve the new messages of the channels in the group \"important\" and in the channel \"notifications\".\n - Etc.\n\nConfiguration options are grouped in sections: general, channels, groups and log.\n\n### General\n\nGeneral options of the application.\n\nThe section name in the configuration file is `general`.\n\nOptions:\n\n| Option | Description | Mandatory | Default |\n| --- | --- | --- | --- |\n| `credentials`  | Path to the credentials file of your Google Cloud Platform project.  | No | `~/.gmailsync/credentials.json` |\n| `token` | Path where the token file will be stored. This file contains the token for your associated Gmail account. | No | `~/.gmailsync/token.pickle` |\n| `box_type` | Default box type for all channels. | No | `mailbox` |\n\nGmailsync supports the following mailbox types:\n - `maildir`\n - `mbox`\n - `mh`\n - `babyl`\n - `mmdf`\n\n### Channels\n\nConfiguration of the channel.\n\nThe section names (one per channel) must follow this pattern: `channel-{channnel_name}`, where `{channel_name}` must be the name of the channel.\n\nOptions:\n\n| Option | Description | Mandatory | Default |\n| --- | --- | --- | --- |\n| `mailbox` | Path to the directory where to store the messages. | Yes | |\n| `query` | Optional query used to retrieve the messages. Supports the same query format as the Gmail search box. | No | `!in:chat` |\n| `box_type` | Optional mailbox type. If it is not defined, the default one defined in `general` will be used. | No | |\n\n### Groups\n\nConfiguration of the group.\n\nThe section names (one per group) must follow this pattern: `group-{group_name}`, where `{group}` must be the name of the group.\n\nOptions\n\n| Option | Description | Mandatory | Default |\n| --- | --- | --- | --- |\n| `channels` | List of channel names separated by comma. | Yes | |\n\n### Log\n\nConfiguration of the logger.\n\nThe section name in the configuration file is `log`.\n\nOptions:\n\n| Option | Description | Mandatory | Default |\n| --- | --- | --- | --- |\n| `file` | Path to the file where the logs messages will be stored. | No | |\n| `file_max_bytes` | Max bytes to store in the file before rotate it. | No | 104857600 (100 MB) |\n| `file_backup_count` | Max files to keep before to remove the oldest one. | No | 50 |\n| `format` | Log format for console and file logger. | No | `%(asctime)s %(levelname)s [%(name)s] %(message)s` |\n\n### Full example\n\n```python\n[general]\ncredentials: /etc/gmailsync/credentials.json\ntoken: /etc/gmailsync/token.pickle\nbox_type: mbox\n\n[channel-starred]\nmailbox: ~/mail/starred\nquery: label:starred\n\n[channel-notifications]\nmailbox: ~/mail/notifications\nquery: label:notifications\nbox_type: maildir\n\n[channel-coworkers]\nmailbox: ~/mail/coworkers\nquery: from:alice@gmail.com OR from:bob@gmail.com\n\n[group-important]\nchannels: starred, coworkers\n\n[log]\nfile: /var/log/gmailsync.log\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://albertoalcolea.com", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "gmailsync", "package_url": "https://pypi.org/project/gmailsync/", "platform": "", "project_url": "https://pypi.org/project/gmailsync/", "project_urls": {"Homepage": "http://albertoalcolea.com"}, "release_url": "https://pypi.org/project/gmailsync/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Synchronize and save a backup of your Gmail messages.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>gmailsync</h1>\n<p><a href=\"https://travis-ci.org/albertoalcolea/gmailsync\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d7c07211e2e0952e6e09f1fc36302c6eb9280630/68747470733a2f2f7472617669732d63692e6f72672f616c626572746f616c636f6c65612f676d61696c73796e632e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Synchronize and save a backup of your Gmail messages</p>\n<h2>Requirements</h2>\n<ul>\n<li>python (3.6+)</li>\n<li>pip</li>\n</ul>\n<h2>Installation</h2>\n<p>On all systems, install <em>gmailsync</em> by using <code>pip</code>:</p>\n<pre>pip install gmailsync\n</pre>\n<h2>Updating</h2>\n<pre>pip install gmailsync --upgrade\n</pre>\n<h2>Usage</h2>\n<p>List Gmail labels:</p>\n<pre>gmailsync -l\n</pre>\n<p>Synchronize all channels:</p>\n<pre>gmailsync\n</pre>\n<p>Synchronize concrete channels/groups:</p>\n<pre>gmailsync group1 group2 channelXYZ\n</pre>\n<h2>Create a new Google Cloud Project</h2>\n<p>Gmailsync uses the Google API to retrieve messages from Gmail.</p>\n<p>As it is a limited service unless your pay, gmailsync does not provide a common project, but you must create your own.</p>\n<p>The free tier is far enough for a personal or professional account. Gmailsync tries to limit the requests according to Google recommendations to no reach the quota.</p>\n<p>To create a new Google Cloud Platform project go to this link and create a new project:\n<a href=\"https://console.cloud.google.com/\" rel=\"nofollow\">https://console.cloud.google.com/</a></p>\n<p>Then you need to enable Gmail API for that project and generate a new OAuth 2.0 key and download it. By default gmailsync takes this file from <code>~/.gmailsync/credentials.json</code>. You can customize this path in the configuration file.</p>\n<p>This file will be the credentials file of the application in the context of gmailsync.</p>\n<h2>Configuration</h2>\n<p>By default gmailsync uses this configuration file: <code>~/.gmailsync/config</code>.</p>\n<p>To specify a different path, you can use the <code>-c</code> option:</p>\n<pre>gmailsync -c another/config/file ...\n</pre>\n<p>The configuration file looks like this:</p>\n<pre><span class=\"p\">[</span><span class=\"n\">channel</span><span class=\"o\">-</span><span class=\"n\">starred</span><span class=\"p\">]</span>\n<span class=\"n\">mailbox</span><span class=\"p\">:</span> <span class=\"o\">~/</span><span class=\"n\">mail</span><span class=\"o\">/</span><span class=\"n\">starred</span>\n<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">label</span><span class=\"p\">:</span><span class=\"n\">starred</span>\n\n<span class=\"p\">[</span><span class=\"n\">channel</span><span class=\"o\">-</span><span class=\"n\">notifications</span><span class=\"p\">]</span>\n<span class=\"n\">mailbox</span><span class=\"p\">:</span> <span class=\"o\">~/</span><span class=\"n\">mail</span><span class=\"o\">/</span><span class=\"n\">notifications</span>\n<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">label</span><span class=\"p\">:</span><span class=\"n\">notifications</span>\n<span class=\"n\">box_type</span><span class=\"p\">:</span> <span class=\"n\">mbox</span>\n\n<span class=\"p\">[</span><span class=\"n\">channel</span><span class=\"o\">-</span><span class=\"n\">coworkers</span><span class=\"p\">]</span>\n<span class=\"n\">mailbox</span><span class=\"p\">:</span> <span class=\"o\">~/</span><span class=\"n\">mail</span><span class=\"o\">/</span><span class=\"n\">coworkers</span>\n<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">from</span><span class=\"p\">:</span><span class=\"n\">alice</span><span class=\"nd\">@gmail</span><span class=\"o\">.</span><span class=\"n\">com</span> <span class=\"n\">OR</span> <span class=\"n\">from</span><span class=\"p\">:</span><span class=\"n\">bob</span><span class=\"nd\">@gmail</span><span class=\"o\">.</span><span class=\"n\">com</span>\n\n<span class=\"p\">[</span><span class=\"n\">group</span><span class=\"o\">-</span><span class=\"n\">important</span><span class=\"p\">]</span>\n<span class=\"n\">channels</span><span class=\"p\">:</span> <span class=\"n\">starred</span><span class=\"p\">,</span> <span class=\"n\">coworkers</span>\n</pre>\n<p>So, you could execute:</p>\n<ul>\n<li><code>gmailsync</code> to retrieve the new messages of all channels.</li>\n<li><code>gmailsync important</code> to retrieve the new messages of the channels \"starred\" and \"coworkers\".</li>\n<li><code>gmailsync notifications</code> to retrieve the new messages of the channel \"notifications\".</li>\n<li><code>gmailsync important notifications</code> to retrieve the new messages of the channels in the group \"important\" and in the channel \"notifications\".</li>\n<li>Etc.</li>\n</ul>\n<p>Configuration options are grouped in sections: general, channels, groups and log.</p>\n<h3>General</h3>\n<p>General options of the application.</p>\n<p>The section name in the configuration file is <code>general</code>.</p>\n<p>Options:</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Mandatory</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>credentials</code></td>\n<td>Path to the credentials file of your Google Cloud Platform project.</td>\n<td>No</td>\n<td><code>~/.gmailsync/credentials.json</code></td>\n</tr>\n<tr>\n<td><code>token</code></td>\n<td>Path where the token file will be stored. This file contains the token for your associated Gmail account.</td>\n<td>No</td>\n<td><code>~/.gmailsync/token.pickle</code></td>\n</tr>\n<tr>\n<td><code>box_type</code></td>\n<td>Default box type for all channels.</td>\n<td>No</td>\n<td><code>mailbox</code></td>\n</tr></tbody></table>\n<p>Gmailsync supports the following mailbox types:</p>\n<ul>\n<li><code>maildir</code></li>\n<li><code>mbox</code></li>\n<li><code>mh</code></li>\n<li><code>babyl</code></li>\n<li><code>mmdf</code></li>\n</ul>\n<h3>Channels</h3>\n<p>Configuration of the channel.</p>\n<p>The section names (one per channel) must follow this pattern: <code>channel-{channnel_name}</code>, where <code>{channel_name}</code> must be the name of the channel.</p>\n<p>Options:</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Mandatory</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>mailbox</code></td>\n<td>Path to the directory where to store the messages.</td>\n<td>Yes</td>\n<td></td>\n</tr>\n<tr>\n<td><code>query</code></td>\n<td>Optional query used to retrieve the messages. Supports the same query format as the Gmail search box.</td>\n<td>No</td>\n<td><code>!in:chat</code></td>\n</tr>\n<tr>\n<td><code>box_type</code></td>\n<td>Optional mailbox type. If it is not defined, the default one defined in <code>general</code> will be used.</td>\n<td>No</td>\n<td></td>\n</tr></tbody></table>\n<h3>Groups</h3>\n<p>Configuration of the group.</p>\n<p>The section names (one per group) must follow this pattern: <code>group-{group_name}</code>, where <code>{group}</code> must be the name of the group.</p>\n<p>Options</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Mandatory</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>channels</code></td>\n<td>List of channel names separated by comma.</td>\n<td>Yes</td>\n<td></td>\n</tr></tbody></table>\n<h3>Log</h3>\n<p>Configuration of the logger.</p>\n<p>The section name in the configuration file is <code>log</code>.</p>\n<p>Options:</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Mandatory</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>file</code></td>\n<td>Path to the file where the logs messages will be stored.</td>\n<td>No</td>\n<td></td>\n</tr>\n<tr>\n<td><code>file_max_bytes</code></td>\n<td>Max bytes to store in the file before rotate it.</td>\n<td>No</td>\n<td>104857600 (100 MB)</td>\n</tr>\n<tr>\n<td><code>file_backup_count</code></td>\n<td>Max files to keep before to remove the oldest one.</td>\n<td>No</td>\n<td>50</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>Log format for console and file logger.</td>\n<td>No</td>\n<td><code>%(asctime)s %(levelname)s [%(name)s] %(message)s</code></td>\n</tr></tbody></table>\n<h3>Full example</h3>\n<pre><span class=\"p\">[</span><span class=\"n\">general</span><span class=\"p\">]</span>\n<span class=\"n\">credentials</span><span class=\"p\">:</span> <span class=\"o\">/</span><span class=\"n\">etc</span><span class=\"o\">/</span><span class=\"n\">gmailsync</span><span class=\"o\">/</span><span class=\"n\">credentials</span><span class=\"o\">.</span><span class=\"n\">json</span>\n<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"o\">/</span><span class=\"n\">etc</span><span class=\"o\">/</span><span class=\"n\">gmailsync</span><span class=\"o\">/</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">pickle</span>\n<span class=\"n\">box_type</span><span class=\"p\">:</span> <span class=\"n\">mbox</span>\n\n<span class=\"p\">[</span><span class=\"n\">channel</span><span class=\"o\">-</span><span class=\"n\">starred</span><span class=\"p\">]</span>\n<span class=\"n\">mailbox</span><span class=\"p\">:</span> <span class=\"o\">~/</span><span class=\"n\">mail</span><span class=\"o\">/</span><span class=\"n\">starred</span>\n<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">label</span><span class=\"p\">:</span><span class=\"n\">starred</span>\n\n<span class=\"p\">[</span><span class=\"n\">channel</span><span class=\"o\">-</span><span class=\"n\">notifications</span><span class=\"p\">]</span>\n<span class=\"n\">mailbox</span><span class=\"p\">:</span> <span class=\"o\">~/</span><span class=\"n\">mail</span><span class=\"o\">/</span><span class=\"n\">notifications</span>\n<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">label</span><span class=\"p\">:</span><span class=\"n\">notifications</span>\n<span class=\"n\">box_type</span><span class=\"p\">:</span> <span class=\"n\">maildir</span>\n\n<span class=\"p\">[</span><span class=\"n\">channel</span><span class=\"o\">-</span><span class=\"n\">coworkers</span><span class=\"p\">]</span>\n<span class=\"n\">mailbox</span><span class=\"p\">:</span> <span class=\"o\">~/</span><span class=\"n\">mail</span><span class=\"o\">/</span><span class=\"n\">coworkers</span>\n<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">from</span><span class=\"p\">:</span><span class=\"n\">alice</span><span class=\"nd\">@gmail</span><span class=\"o\">.</span><span class=\"n\">com</span> <span class=\"n\">OR</span> <span class=\"n\">from</span><span class=\"p\">:</span><span class=\"n\">bob</span><span class=\"nd\">@gmail</span><span class=\"o\">.</span><span class=\"n\">com</span>\n\n<span class=\"p\">[</span><span class=\"n\">group</span><span class=\"o\">-</span><span class=\"n\">important</span><span class=\"p\">]</span>\n<span class=\"n\">channels</span><span class=\"p\">:</span> <span class=\"n\">starred</span><span class=\"p\">,</span> <span class=\"n\">coworkers</span>\n\n<span class=\"p\">[</span><span class=\"n\">log</span><span class=\"p\">]</span>\n<span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"o\">/</span><span class=\"n\">var</span><span class=\"o\">/</span><span class=\"n\">log</span><span class=\"o\">/</span><span class=\"n\">gmailsync</span><span class=\"o\">.</span><span class=\"n\">log</span>\n</pre>\n\n          </div>"}, "last_serial": 7157748, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "69f0c0f151198e480005b6eaabe0cd84", "sha256": "0a83c283e01abd3279d859384ea2b33eaa25ceb6ff9e7b57762e3b7dc093da91"}, "downloads": -1, "filename": "gmailsync-0.1.0.tar.gz", "has_sig": false, "md5_digest": "69f0c0f151198e480005b6eaabe0cd84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18964, "upload_time": "2020-05-03T15:51:53", "upload_time_iso_8601": "2020-05-03T15:51:53.617089Z", "url": "https://files.pythonhosted.org/packages/e0/63/e7eb797b25c5735d1ab800b35c0bf6e0c341701bd17dcf53df48b8451ef2/gmailsync-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "df37352f00985b6a6b69adad284cf0d5", "sha256": "88a627aec7df7427da2e77f1d520332792a270e9b9acfd610c95217655ebf26f"}, "downloads": -1, "filename": "gmailsync-0.1.1.tar.gz", "has_sig": false, "md5_digest": "df37352f00985b6a6b69adad284cf0d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19187, "upload_time": "2020-05-03T16:07:46", "upload_time_iso_8601": "2020-05-03T16:07:46.238811Z", "url": "https://files.pythonhosted.org/packages/30/ba/93fd511193eccbea61abae10aef5f8e9ae6ac87d797198694d93d26d167a/gmailsync-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "df37352f00985b6a6b69adad284cf0d5", "sha256": "88a627aec7df7427da2e77f1d520332792a270e9b9acfd610c95217655ebf26f"}, "downloads": -1, "filename": "gmailsync-0.1.1.tar.gz", "has_sig": false, "md5_digest": "df37352f00985b6a6b69adad284cf0d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19187, "upload_time": "2020-05-03T16:07:46", "upload_time_iso_8601": "2020-05-03T16:07:46.238811Z", "url": "https://files.pythonhosted.org/packages/30/ba/93fd511193eccbea61abae10aef5f8e9ae6ac87d797198694d93d26d167a/gmailsync-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:19 2020"}