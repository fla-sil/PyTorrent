{"info": {"author": "Andrew Halberstadt", "author_email": "halbersa@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Operating System :: POSIX", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Mozconfigwrapper\n[![Build Status](https://travis-ci.org/ahal/mozconfigwrapper.svg?branch=master)](https://travis-ci.org/ahal/mozconfigwrapper)\n[![PyPI version](https://badge.fury.io/py/mozconfigwrapper.svg)](https://badge.fury.io/py/mozconfigwrapper)\n\nMozconfigwrapper is just like [virtualenvwrapper](http://www.doughellmann.com/projects/virtualenvwrapper/)\nexcept for [mozconfigs](https://developer.mozilla.org/en/Configuring_Build_Options).\nMozconfigwrapper basically hides all your mozconfigs away in a configurable directory (defaults to ~/.mozconfigs)\nand allows you to easily create, switch, delete and edit them. Mozconfigs remain active across terminal sessions.\n\n## Installation\n\nFirst make sure you have [pip](http://pip.readthedocs.org/en/latest/installing.html) installed.\n\nFollow these simple steps to get mozconfigwrapper running:\n\n    sudo pip install mozconfigwrapper\n\nThen open your ~/.bashrc file (or equivalent) and add the line:\n\n    source /usr/local/bin/mozconfigwrapper.sh\n\nNote: mozconfigwrapper.sh may be in a different location on your system,\nuse `which mozconfigwrapper.sh` to find it.\n\nFinally run:\n\n    source ~/.bashrc\n\nMozconfigwrapper is now installed.\n\n## Usage\n\nYou can create, remove, switch, list and edit mozconfigs.\n\nTo build with (activate) a mozconfig named foo, run:\n\n    buildwith foo\n\nTo create a mozconfig named foo, run:\n\n    mkmozconfig foo\n\nTo delete a mozconfig named foo, run:\n\n    rmmozconfig foo\n\nTo see the currently active mozconfig, run:\n\n    mozconfig\n\nTo list all mozconfigs, run:\n\n    mozconfig -l\n\nTo edit the currently active mozconfig, run (the $EDITOR variable must be set):\n\n    mozconfig -e\n\n\n## Configuration\n\n#### mozconfig location\n\nBy default mozconfigs are stored in the ~/.mozconfigs directory, but you can override this by setting the\n$BUILDWITH_HOME environment variable.\ne.g, add:\n\n    export BUILDWITH_HOME=~/my/custom/mozconfig/path\n\nto your ~/.bashrc file (or equivalent).\n\n#### buildwith command\n\nWhen running the buildwith command, `export MOZCONFIG=<path to mozconfig>` is run by default.\nYou can run any other command by overriding the ``BUILDWITH_COMMAND``.\nFor example, if you put this in your ~/.bashrc file (or equivalent):\n\n    export BUILDWITH_COMMAND=\"export MOZCONFIG=#1; launchctl setenv MOZCONFIG #1\"\n\nbuildwith will also set the MOZCONFIG environment variable in launchctl (useful when running Android Studio).\nAll `#1` occurences will be replaced by the path to the mozconfig file.\n\n#### mozconfig template\n\nWhen you make a new mozconfig, it will be populated with some basic build commands and the name of the mozconfig\nwill be appended to the end of the OBJDIR instruction. You can modify what gets populated by default by editing\nthe ~/.mozconfigs/.template file. For example, if I wanted my default configuration to store object directories\nin a folder called objdirs and enable debugging and tests, I'd edit the ~/.mozconfigs/.template file to look like:\n\n    mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/objdirs/\n    ac_add_options --enable-application=browser\n    ac_add_options --enable-debug\n    ac_add_options --enable-tests\n\nNow if I ran the command 'mkmozconfig foo', foo would be populated with the above and have the word 'foo'\nappended to the first line.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/ahal/mozconfigwrapper", "keywords": "", "license": "MPL 2.0/GPL 2.0/LGPL 2.1", "maintainer": "", "maintainer_email": "", "name": "mozconfigwrapper", "package_url": "https://pypi.org/project/mozconfigwrapper/", "platform": "Unix", "project_url": "https://pypi.org/project/mozconfigwrapper/", "project_urls": {"Homepage": "http://github.com/ahal/mozconfigwrapper"}, "release_url": "https://pypi.org/project/mozconfigwrapper/0.6.1/", "requires_dist": null, "requires_python": "", "summary": "Utility to make working with mozconfigs easier", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># Mozconfigwrapper\n[![Build Status](<a href=\"https://travis-ci.org/ahal/mozconfigwrapper.svg?branch=master)%5D(https://travis-ci.org/ahal/mozconfigwrapper\" rel=\"nofollow\">https://travis-ci.org/ahal/mozconfigwrapper.svg?branch=master)](https://travis-ci.org/ahal/mozconfigwrapper</a>)\n[![PyPI version](<a href=\"https://badge.fury.io/py/mozconfigwrapper.svg)%5D(https://badge.fury.io/py/mozconfigwrapper\" rel=\"nofollow\">https://badge.fury.io/py/mozconfigwrapper.svg)](https://badge.fury.io/py/mozconfigwrapper</a>)</p>\n<p>Mozconfigwrapper is just like [virtualenvwrapper](<a href=\"http://www.doughellmann.com/projects/virtualenvwrapper/\" rel=\"nofollow\">http://www.doughellmann.com/projects/virtualenvwrapper/</a>)\nexcept for [mozconfigs](<a href=\"https://developer.mozilla.org/en/Configuring_Build_Options\" rel=\"nofollow\">https://developer.mozilla.org/en/Configuring_Build_Options</a>).\nMozconfigwrapper basically hides all your mozconfigs away in a configurable directory (defaults to ~/.mozconfigs)\nand allows you to easily create, switch, delete and edit them. Mozconfigs remain active across terminal sessions.</p>\n<p>## Installation</p>\n<p>First make sure you have [pip](<a href=\"http://pip.readthedocs.org/en/latest/installing.html\" rel=\"nofollow\">http://pip.readthedocs.org/en/latest/installing.html</a>) installed.</p>\n<p>Follow these simple steps to get mozconfigwrapper running:</p>\n<blockquote>\nsudo pip install mozconfigwrapper</blockquote>\n<p>Then open your ~/.bashrc file (or equivalent) and add the line:</p>\n<blockquote>\nsource /usr/local/bin/mozconfigwrapper.sh</blockquote>\n<p>Note: mozconfigwrapper.sh may be in a different location on your system,\nuse <cite>which mozconfigwrapper.sh</cite> to find it.</p>\n<p>Finally run:</p>\n<blockquote>\nsource ~/.bashrc</blockquote>\n<p>Mozconfigwrapper is now installed.</p>\n<p>## Usage</p>\n<p>You can create, remove, switch, list and edit mozconfigs.</p>\n<p>To build with (activate) a mozconfig named foo, run:</p>\n<blockquote>\nbuildwith foo</blockquote>\n<p>To create a mozconfig named foo, run:</p>\n<blockquote>\nmkmozconfig foo</blockquote>\n<p>To delete a mozconfig named foo, run:</p>\n<blockquote>\nrmmozconfig foo</blockquote>\n<p>To see the currently active mozconfig, run:</p>\n<blockquote>\nmozconfig</blockquote>\n<p>To list all mozconfigs, run:</p>\n<blockquote>\nmozconfig -l</blockquote>\n<p>To edit the currently active mozconfig, run (the $EDITOR variable must be set):</p>\n<blockquote>\nmozconfig -e</blockquote>\n<p>## Configuration</p>\n<p>#### mozconfig location</p>\n<p>By default mozconfigs are stored in the ~/.mozconfigs directory, but you can override this by setting the\n$BUILDWITH_HOME environment variable.\ne.g, add:</p>\n<blockquote>\nexport BUILDWITH_HOME=~/my/custom/mozconfig/path</blockquote>\n<p>to your ~/.bashrc file (or equivalent).</p>\n<p>#### buildwith command</p>\n<p>When running the buildwith command, <cite>export MOZCONFIG=&lt;path to mozconfig&gt;</cite> is run by default.\nYou can run any other command by overriding the <tt>BUILDWITH_COMMAND</tt>.\nFor example, if you put this in your ~/.bashrc file (or equivalent):</p>\n<blockquote>\nexport BUILDWITH_COMMAND=\u201dexport MOZCONFIG=#1; launchctl setenv MOZCONFIG #1\u201d</blockquote>\n<p>buildwith will also set the MOZCONFIG environment variable in launchctl (useful when running Android Studio).\nAll <cite>#1</cite> occurences will be replaced by the path to the mozconfig file.</p>\n<p>#### mozconfig template</p>\n<p>When you make a new mozconfig, it will be populated with some basic build commands and the name of the mozconfig\nwill be appended to the end of the OBJDIR instruction. You can modify what gets populated by default by editing\nthe ~/.mozconfigs/.template file. For example, if I wanted my default configuration to store object directories\nin a folder called objdirs and enable debugging and tests, I\u2019d edit the ~/.mozconfigs/.template file to look like:</p>\n<blockquote>\nmk_add_options MOZ_OBJDIR=@TOPSRCDIR@/objdirs/\nac_add_options \u2013enable-application=browser\nac_add_options \u2013enable-debug\nac_add_options \u2013enable-tests</blockquote>\n<p>Now if I ran the command \u2018mkmozconfig foo\u2019, foo would be populated with the above and have the word \u2018foo\u2019\nappended to the first line.</p>\n\n          </div>"}, "last_serial": 3471725, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "95cd91c7d3320d9c23c2205a10897428", "sha256": "98d5da98c06cc05c7b9f967695b299fc9fa38bb49311f3e531d467e4faaf3252"}, "downloads": -1, "filename": "mozconfigwrapper-0.1.tar.gz", "has_sig": false, "md5_digest": "95cd91c7d3320d9c23c2205a10897428", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4960, "upload_time": "2011-11-12T05:17:16", "upload_time_iso_8601": "2011-11-12T05:17:16.364521Z", "url": "https://files.pythonhosted.org/packages/71/e9/bd143497e004c0bb1d62ab49df126b674d9bd40ac310152b087ea738c2d6/mozconfigwrapper-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "cbc1e0703ea9a082b51a67e9532acde8", "sha256": "e28f06857573240b66cc0ad03c2ecae8afaccae64d449ded0af30893d2b9c27a"}, "downloads": -1, "filename": "mozconfigwrapper-0.2.tar.gz", "has_sig": false, "md5_digest": "cbc1e0703ea9a082b51a67e9532acde8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4908, "upload_time": "2012-09-27T15:32:09", "upload_time_iso_8601": "2012-09-27T15:32:09.110876Z", "url": "https://files.pythonhosted.org/packages/08/07/97d61ee983d09ca80cd67dd3fd8dd1f822c6fc5abddba6d62434d978837a/mozconfigwrapper-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "f8b13826feece2d9210261e3dd0a7ffd", "sha256": "355c4f2ee18f62eb25429f78d61f42e75b1d4306cf26e4b0cb774f0634791689"}, "downloads": -1, "filename": "mozconfigwrapper-0.3.tar.gz", "has_sig": false, "md5_digest": "f8b13826feece2d9210261e3dd0a7ffd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4447, "upload_time": "2013-09-18T15:29:11", "upload_time_iso_8601": "2013-09-18T15:29:11.629311Z", "url": "https://files.pythonhosted.org/packages/5c/d0/dffe7444752523ec04004f653430c3f1d25f59bba30323de886e9ae4a08c/mozconfigwrapper-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "0b80b67fc76a5a63239309e9e1fcaf5f", "sha256": "571876cc74fd18dfa068e1b3c21d1f7ab4ebfa2b72a94f965f3ec7403d8ee791"}, "downloads": -1, "filename": "mozconfigwrapper-0.4.tar.gz", "has_sig": false, "md5_digest": "0b80b67fc76a5a63239309e9e1fcaf5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4169, "upload_time": "2016-06-10T17:56:34", "upload_time_iso_8601": "2016-06-10T17:56:34.523696Z", "url": "https://files.pythonhosted.org/packages/3a/c2/251b54713f9b1f67ad3b250a69dfa5c58c66e3c9826230e4cd97cf04ba03/mozconfigwrapper-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "7ecfb0424ebbb01ddf6d306f8b87c5eb", "sha256": "0671e8cebfc802dd911662175c68c9c1702d2a3339a069e1357464e8abdb11e3"}, "downloads": -1, "filename": "mozconfigwrapper-0.5.tar.gz", "has_sig": false, "md5_digest": "7ecfb0424ebbb01ddf6d306f8b87c5eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4540, "upload_time": "2016-08-22T21:23:21", "upload_time_iso_8601": "2016-08-22T21:23:21.215426Z", "url": "https://files.pythonhosted.org/packages/47/39/2d9e6d19993f974bc6cb3503c93545a5401485b65fa469e89728296c7d25/mozconfigwrapper-0.5.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "d2926f4c9bade88f4cc062567ae43583", "sha256": "6da9d39693c0078eb20222ce8951d3453ea84d6b99c4773be548fe9a1a392bb7"}, "downloads": -1, "filename": "mozconfigwrapper-0.6.0.tar.gz", "has_sig": false, "md5_digest": "d2926f4c9bade88f4cc062567ae43583", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4867, "upload_time": "2018-01-08T17:08:39", "upload_time_iso_8601": "2018-01-08T17:08:39.674159Z", "url": "https://files.pythonhosted.org/packages/b9/33/b8e6e312b08bf2c34ebe4b11ffe7fc655910493e33b76169dddf59a7493a/mozconfigwrapper-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "0f3cec4fd4d178f223bbb53ba6c5ca34", "sha256": "b69ca811eedf5ad010a508ff8e92a2794cffb45d481e7f816877e7c4e0577f4d"}, "downloads": -1, "filename": "mozconfigwrapper-0.6.1.tar.gz", "has_sig": false, "md5_digest": "0f3cec4fd4d178f223bbb53ba6c5ca34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4936, "upload_time": "2018-01-08T17:30:11", "upload_time_iso_8601": "2018-01-08T17:30:11.525036Z", "url": "https://files.pythonhosted.org/packages/fc/04/87e32c4565b8a8f8e403a1be6218d8e8044fdc0bb9f8cf2e0d659b028960/mozconfigwrapper-0.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0f3cec4fd4d178f223bbb53ba6c5ca34", "sha256": "b69ca811eedf5ad010a508ff8e92a2794cffb45d481e7f816877e7c4e0577f4d"}, "downloads": -1, "filename": "mozconfigwrapper-0.6.1.tar.gz", "has_sig": false, "md5_digest": "0f3cec4fd4d178f223bbb53ba6c5ca34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4936, "upload_time": "2018-01-08T17:30:11", "upload_time_iso_8601": "2018-01-08T17:30:11.525036Z", "url": "https://files.pythonhosted.org/packages/fc/04/87e32c4565b8a8f8e403a1be6218d8e8044fdc0bb9f8cf2e0d659b028960/mozconfigwrapper-0.6.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:25 2020"}