{"info": {"author": "Gabor Laszlo Hajba", "author_email": "gabor.hajba@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python"], "description": "This is a simple module meant to convert Markdown files to XML (XHTML) and send them to WordPress.com via XML-RPC.\n\nThe idea behind this all is to make the base of an open-source offline WordPress.com blog entry editor.\n\nThe first part converts the text written in a specific MarkDown language to XML (or XHTML).\nBecause I write currently my books for LeanPub I align the main conversion to the LeanPub MarkDown.\nHowever MD to XML conversion is a bit bothersome and there are many libraries which do this, I'll stick to <b>Markdown</b> a Python library for converting MarkDown files to X(HT)ML.\n\nThe <i>mdxml.conf</i> file contains custom configuration which is not available in markdown. For example the <i>[sourcecode]</i> block for WordPress. For this behavior I skip the markdown conversion for these lines of code.\nCurrently language and other options cannot be added for source codes.\n\nIf you have other configuration extensions (for example if you want to override the <i>~~~~~~~~</i> for source-codes, you can define it in your own conversion file and provide it as an argument to the application.\n\nEach configuration element has a starting and ending tag (although currently I am thinking about another way to solve this problem because XML files should be valid in the end...).\n\nOne problem with Markdown is, that you have to parse the whole text if you have multi-line elements (for example lists). If you do not do this, you'll end up with a bunch of lists.\n\nFeel free to create issues and change requests.\n\nThe application looks for the configuration file (containing wordpress endpoint, username, password and optional proxy configuration) in your home folder under the name *wpedit.conf*. Optionally you can provide it per commandline argument.\n\n\n<h2>Usage</h2>\n<pre>\n    wpedit.py [-h] [-c CONFIG] [-m MDCONF] [-l] [-n NUMBER] [-U] [-V] post_file\n\npositional arguments:\n  post_file             The full path of the input file to send to WordPress.\n                        If used with the '-l' option it is the full path of\n                        the folder to save the drafts from WordPress.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONFIG, --config CONFIG\n                        The full path of the configuration file storing the\n                        XML-RPC endpoint, username and password. Per default\n                        the application looks at your home folder and searches\n                        for wpedit.conf\n  -m MDCONF, --mdconf MDCONF\n                        The full path of the md-to-xml conversion-extension\n                        file\n  -l, --load            Loads all draft posts into the folder where the\n                        'post_file' resides. The 'post_file' will not be sent\n                        to WordPress.\n  -n NUMBER, --number NUMBER\n                        The number of draft posts to load. Works only in\n                        combination with the '-l' argument.\n  -U, --update          Forces update of every draft loaded, the check for\n                        local modifications is disabled. Works only in\n                        combination with the '-l' argument.\n  -V, --verify          Enables verification of tags. If the blog post\n                        contains tags which are not defined, the article will\n                        not be sent to WordPress.\n</pre>\n<h2>File structure</h2>\nThe markdown file is parsed and you can place special lines at the beginning of the text. These special lines have to start with **[** (square bracket). Once the parser encounters a line which does not start with <b>[</b> the resulting text is treated as the content of the article.\n\n<h3>Accepted special lines</h3>\n[id] 1001 -- the ID of the blog post, if you create a new post, you do not have to provide an ID, <b>Note</b> if you provide an ID, the application attempts to edit the post with this ID.\n\n[title] Some title -- you can specify the post's title here, in the example \"Some title\" will be the title of the article. If you do not provide a title and the post does not have a title, the title will be set to \"My post\".\n\n[categories] Category 1, Category 2 -- a comma separated list of categories for your post. Optional, if not provided there will be no categories set. Starting with Version 0.3.1 categories are verified: if a category does not exist in the blog, you cannot post the entry.\n\n[tags] tag 1, tag 2, tag 3 -- a comma separated list for your post. Optional, if not provided there will be no tags set. Starting with Version 0.3.1 optional tag-verification is enabled. If you have the option enabled you can use only defined tags in your post.\n\n<h2>Extra markdown</h2>\nCurrently these extra markdonw symbols are configured for wpedit:\n<dl>\n<dt>~~~~~~~~ (tilde symbol 8 times)</dt> <dd>Surrounds code blocks which will be presented as *[sourcecode]* in WordPess. Source code blocks can be enriched with key-value pairs to represent parameters of <b>[sourcecode]</b> blocks.\n~~~~~~~~{'language':'python', 'title':'Python source code example'} This line will be converted to: <b>[sourcecode language=\"python\" title=\"Python source code example\"]</b></dd>\n\n<dt>-------- (dash 8 times)</dt> <dd>Adds a read more tag to your article which will be presented as *<!--more-->* in WordPress.</dd>\n\n<dt>@@@ (\"at\" symbol 3 times)</dt> <dd>Makes the surrounded text preformatted which will be presented as <i>&lt;pre&gt;</i> in WordPRess.</dd>\n</dl>\n<h2>Changes</h2>\n<h3>Version 0.4.5</h3>\n    <ul><li>fixed starting app as Python module after installation using <b>pip</b></li></ul>\n<h3>Version 0.4.1</h3>\n<ul>\n    <li>fixed category and tag validation bug</li>\n</ul>\n<h3>Version 0.4</h3>\n<ul>\n    <li>added proxy to the configuration file to enable working from proxied network</li>\n</ul>\n<h3>Version 0.3.4</h3>\n<ul>\n    <li>fixed installation error (issue #1) with removing disttest from the setup</li>\n</ul>\n<h3>Versions 0.3.2 and 0.3.3</h3>\n<ul>\n    <li>fixed README displayed in PyPI -- I ended up with an HTML version</li>\n<ul>\n<h3>Version 0.3.1</h3>\n<ul>\n    <li>force parameter added to update every draft even if it was changed locally later than on the server</li>\n    <li>number of fetched drafts is defineable from the command line as an argument, the default stays as 25</li>\n    <li>categories are always verified when posting to WordPress: if a category is not defined in the blog, the post won't be sent to the blog</li>\n    <li>optional tag-verification can be enabled: if enabled and a new tag is defined in the post, the post will be rejected and not sent to WordPress</li>\n</ul>\n\n<h3>Version 0.3</h3>\n<ul>\n <li>Starting with version 0.3 you can download your draft posts (currently the latest 25 in reverse-chronological order (based on their publish date)) (I plan to add an option to configure the maximum number to load)</li>\n <li><i>tags</i> and <i>categories</i> are loaded with your posts</li>\n <li>If you altered the draft locally it will not get overwritten (I plan to add a command line argument to force updates)</li>\n <li>downloading of source code and \"more\"-tags work properly</li>\n</ul>\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/ghajba/wp-editor/tarball/0.4.5", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ghajba/wp-editor", "keywords": "wordpress,offline,edit,markdown,xml,editor", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "wpedit", "package_url": "https://pypi.org/project/wpedit/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/wpedit/", "project_urls": {"Download": "https://github.com/ghajba/wp-editor/tarball/0.4.5", "Homepage": "https://github.com/ghajba/wp-editor"}, "release_url": "https://pypi.org/project/wpedit/0.4.5/", "requires_dist": null, "requires_python": null, "summary": "Sends (offline) articles written in MarkDown to WordPress via the XML-RPC API, and loads the draft articles from WordPress to the local machine. Works with proxies too.", "version": "0.4.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            This is a simple module meant to convert Markdown files to XML (XHTML) and send them to WordPress.com via XML-RPC.<br><br>The idea behind this all is to make the base of an open-source offline WordPress.com blog entry editor.<br><br>The first part converts the text written in a specific MarkDown language to XML (or XHTML).<br>Because I write currently my books for LeanPub I align the main conversion to the LeanPub MarkDown.<br>However MD to XML conversion is a bit bothersome and there are many libraries which do this, I'll stick to &lt;b&gt;Markdown&lt;/b&gt; a Python library for converting MarkDown files to X(HT)ML.<br><br>The &lt;i&gt;mdxml.conf&lt;/i&gt; file contains custom configuration which is not available in markdown. For example the &lt;i&gt;[sourcecode]&lt;/i&gt; block for WordPress. For this behavior I skip the markdown conversion for these lines of code.<br>Currently language and other options cannot be added for source codes.<br><br>If you have other configuration extensions (for example if you want to override the &lt;i&gt;~~~~~~~~&lt;/i&gt; for source-codes, you can define it in your own conversion file and provide it as an argument to the application.<br><br>Each configuration element has a starting and ending tag (although currently I am thinking about another way to solve this problem because XML files should be valid in the end...).<br><br>One problem with Markdown is, that you have to parse the whole text if you have multi-line elements (for example lists). If you do not do this, you'll end up with a bunch of lists.<br><br>Feel free to create issues and change requests.<br><br>The application looks for the configuration file (containing wordpress endpoint, username, password and optional proxy configuration) in your home folder under the name *wpedit.conf*. Optionally you can provide it per commandline argument.<br><br><br>&lt;h2&gt;Usage&lt;/h2&gt;<br>&lt;pre&gt;<br>    wpedit.py [-h] [-c CONFIG] [-m MDCONF] [-l] [-n NUMBER] [-U] [-V] post_file<br><br>positional arguments:<br>  post_file             The full path of the input file to send to WordPress.<br>                        If used with the '-l' option it is the full path of<br>                        the folder to save the drafts from WordPress.<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  -c CONFIG, --config CONFIG<br>                        The full path of the configuration file storing the<br>                        XML-RPC endpoint, username and password. Per default<br>                        the application looks at your home folder and searches<br>                        for wpedit.conf<br>  -m MDCONF, --mdconf MDCONF<br>                        The full path of the md-to-xml conversion-extension<br>                        file<br>  -l, --load            Loads all draft posts into the folder where the<br>                        'post_file' resides. The 'post_file' will not be sent<br>                        to WordPress.<br>  -n NUMBER, --number NUMBER<br>                        The number of draft posts to load. Works only in<br>                        combination with the '-l' argument.<br>  -U, --update          Forces update of every draft loaded, the check for<br>                        local modifications is disabled. Works only in<br>                        combination with the '-l' argument.<br>  -V, --verify          Enables verification of tags. If the blog post<br>                        contains tags which are not defined, the article will<br>                        not be sent to WordPress.<br>&lt;/pre&gt;<br>&lt;h2&gt;File structure&lt;/h2&gt;<br>The markdown file is parsed and you can place special lines at the beginning of the text. These special lines have to start with **[** (square bracket). Once the parser encounters a line which does not start with &lt;b&gt;[&lt;/b&gt; the resulting text is treated as the content of the article.<br><br>&lt;h3&gt;Accepted special lines&lt;/h3&gt;<br>[id] 1001 -- the ID of the blog post, if you create a new post, you do not have to provide an ID, &lt;b&gt;Note&lt;/b&gt; if you provide an ID, the application attempts to edit the post with this ID.<br><br>[title] Some title -- you can specify the post's title here, in the example \"Some title\" will be the title of the article. If you do not provide a title and the post does not have a title, the title will be set to \"My post\".<br><br>[categories] Category 1, Category 2 -- a comma separated list of categories for your post. Optional, if not provided there will be no categories set. Starting with Version 0.3.1 categories are verified: if a category does not exist in the blog, you cannot post the entry.<br><br>[tags] tag 1, tag 2, tag 3 -- a comma separated list for your post. Optional, if not provided there will be no tags set. Starting with Version 0.3.1 optional tag-verification is enabled. If you have the option enabled you can use only defined tags in your post.<br><br>&lt;h2&gt;Extra markdown&lt;/h2&gt;<br>Currently these extra markdonw symbols are configured for wpedit:<br>&lt;dl&gt;<br>&lt;dt&gt;~~~~~~~~ (tilde symbol 8 times)&lt;/dt&gt; &lt;dd&gt;Surrounds code blocks which will be presented as *[sourcecode]* in WordPess. Source code blocks can be enriched with key-value pairs to represent parameters of &lt;b&gt;[sourcecode]&lt;/b&gt; blocks.<br>~~~~~~~~{'language':'python', 'title':'Python source code example'} This line will be converted to: &lt;b&gt;[sourcecode language=\"python\" title=\"Python source code example\"]&lt;/b&gt;&lt;/dd&gt;<br><br>&lt;dt&gt;-------- (dash 8 times)&lt;/dt&gt; &lt;dd&gt;Adds a read more tag to your article which will be presented as *&lt;!--more--&gt;* in WordPress.&lt;/dd&gt;<br><br>&lt;dt&gt;@@@ (\"at\" symbol 3 times)&lt;/dt&gt; &lt;dd&gt;Makes the surrounded text preformatted which will be presented as &lt;i&gt;&amp;lt;pre&amp;gt;&lt;/i&gt; in WordPRess.&lt;/dd&gt;<br>&lt;/dl&gt;<br>&lt;h2&gt;Changes&lt;/h2&gt;<br>&lt;h3&gt;Version 0.4.5&lt;/h3&gt;<br>    &lt;ul&gt;&lt;li&gt;fixed starting app as Python module after installation using &lt;b&gt;pip&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;<br>&lt;h3&gt;Version 0.4.1&lt;/h3&gt;<br>&lt;ul&gt;<br>    &lt;li&gt;fixed category and tag validation bug&lt;/li&gt;<br>&lt;/ul&gt;<br>&lt;h3&gt;Version 0.4&lt;/h3&gt;<br>&lt;ul&gt;<br>    &lt;li&gt;added proxy to the configuration file to enable working from proxied network&lt;/li&gt;<br>&lt;/ul&gt;<br>&lt;h3&gt;Version 0.3.4&lt;/h3&gt;<br>&lt;ul&gt;<br>    &lt;li&gt;fixed installation error (issue #1) with removing disttest from the setup&lt;/li&gt;<br>&lt;/ul&gt;<br>&lt;h3&gt;Versions 0.3.2 and 0.3.3&lt;/h3&gt;<br>&lt;ul&gt;<br>    &lt;li&gt;fixed README displayed in PyPI -- I ended up with an HTML version&lt;/li&gt;<br>&lt;ul&gt;<br>&lt;h3&gt;Version 0.3.1&lt;/h3&gt;<br>&lt;ul&gt;<br>    &lt;li&gt;force parameter added to update every draft even if it was changed locally later than on the server&lt;/li&gt;<br>    &lt;li&gt;number of fetched drafts is defineable from the command line as an argument, the default stays as 25&lt;/li&gt;<br>    &lt;li&gt;categories are always verified when posting to WordPress: if a category is not defined in the blog, the post won't be sent to the blog&lt;/li&gt;<br>    &lt;li&gt;optional tag-verification can be enabled: if enabled and a new tag is defined in the post, the post will be rejected and not sent to WordPress&lt;/li&gt;<br>&lt;/ul&gt;<br><br>&lt;h3&gt;Version 0.3&lt;/h3&gt;<br>&lt;ul&gt;<br> &lt;li&gt;Starting with version 0.3 you can download your draft posts (currently the latest 25 in reverse-chronological order (based on their publish date)) (I plan to add an option to configure the maximum number to load)&lt;/li&gt;<br> &lt;li&gt;&lt;i&gt;tags&lt;/i&gt; and &lt;i&gt;categories&lt;/i&gt; are loaded with your posts&lt;/li&gt;<br> &lt;li&gt;If you altered the draft locally it will not get overwritten (I plan to add a command line argument to force updates)&lt;/li&gt;<br> &lt;li&gt;downloading of source code and \"more\"-tags work properly&lt;/li&gt;<br>&lt;/ul&gt;<br>\n          </div>"}, "last_serial": 1481474, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "24b33e6d278179a6076574435c3a2d1e", "sha256": "ffc367348485dfdada5226f0e3e9009194e260fa6f60e61117182554261ef000"}, "downloads": -1, "filename": "wpedit-0.1.tar.gz", "has_sig": false, "md5_digest": "24b33e6d278179a6076574435c3a2d1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3798, "upload_time": "2015-02-12T05:33:13", "upload_time_iso_8601": "2015-02-12T05:33:13.221465Z", "url": "https://files.pythonhosted.org/packages/5b/5e/ecadf3a3b0a88a97a5c7fdae3c0e15541c531a7194fcbe9e021d5851f2c7/wpedit-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "13b5f3d754bad3a693a360a98b636e99", "sha256": "2f1b9057bdc657a8ac49932ad0e5553f04634045c0067ef3710adbba36338be3"}, "downloads": -1, "filename": "wpedit-0.2.tar.gz", "has_sig": false, "md5_digest": "13b5f3d754bad3a693a360a98b636e99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4168, "upload_time": "2015-02-13T07:41:26", "upload_time_iso_8601": "2015-02-13T07:41:26.180862Z", "url": "https://files.pythonhosted.org/packages/bf/b6/22c5e2ed9909d87c2d42e1ae419386a2d86ba98e33f7dd597843099edf03/wpedit-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "9dbbf0d8a65adf2fd76fd87b7efe6640", "sha256": "ed2183b1d02a210ee77218c18b5ddb31f840576dd4a0d938d0dac42c55e57086"}, "downloads": -1, "filename": "wpedit-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9dbbf0d8a65adf2fd76fd87b7efe6640", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4168, "upload_time": "2015-02-13T07:42:54", "upload_time_iso_8601": "2015-02-13T07:42:54.903878Z", "url": "https://files.pythonhosted.org/packages/3d/ac/853dfe80b550e6b9a81b11764e5afe30e9c84126d7a984bbc8033a445a83/wpedit-0.2.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "2570fcbf074996bb745546a1dbda11e4", "sha256": "ec3cacbea9ba8dc101818d5c63bc96184656f1db8f3bfd7dfb2da0c006773e30"}, "downloads": -1, "filename": "wpedit-0.3.tar.gz", "has_sig": false, "md5_digest": "2570fcbf074996bb745546a1dbda11e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14313, "upload_time": "2015-03-23T16:58:14", "upload_time_iso_8601": "2015-03-23T16:58:14.416838Z", "url": "https://files.pythonhosted.org/packages/31/b4/efd4b7d4a27d5d9c4f3887add10e4eaabcfac6ff6b60399a4391ca71ef8a/wpedit-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "8dbc1602a3ad01a99dbfce414c75dbc8", "sha256": "9847380f3139aa081b34347b2856840eea8ea7c9bda40d0c3bd18d8a389a8e46"}, "downloads": -1, "filename": "wpedit-0.3.1.tar.gz", "has_sig": false, "md5_digest": "8dbc1602a3ad01a99dbfce414c75dbc8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15031, "upload_time": "2015-03-25T05:38:06", "upload_time_iso_8601": "2015-03-25T05:38:06.261174Z", "url": "https://files.pythonhosted.org/packages/d0/ef/a7eef48fd5e2d8901366df4a3205eeea94fa89c8bb0a4547e041638e0e79/wpedit-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "7ac1fbbed2eec505c411e4c486eaf404", "sha256": "a2c645d02078dc02574edc9fceb2ff3d8e7ead199e1bfae80d858172e0fa99ca"}, "downloads": -1, "filename": "wpedit-0.3.2.tar.gz", "has_sig": false, "md5_digest": "7ac1fbbed2eec505c411e4c486eaf404", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17308, "upload_time": "2015-03-25T05:39:44", "upload_time_iso_8601": "2015-03-25T05:39:44.255194Z", "url": "https://files.pythonhosted.org/packages/a6/ae/bad0857f5cbcba376b462e3bae4a22016553e5bc023a228f6f02898aab70/wpedit-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "1426ce2278a235f2617a5fcefc502779", "sha256": "20ffd8150db03a31e5580a074551f353f9f50fe3d89e09cd43777c692c8147e0"}, "downloads": -1, "filename": "wpedit-0.3.3.tar.gz", "has_sig": false, "md5_digest": "1426ce2278a235f2617a5fcefc502779", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17377, "upload_time": "2015-03-25T05:41:43", "upload_time_iso_8601": "2015-03-25T05:41:43.842014Z", "url": "https://files.pythonhosted.org/packages/14/79/8e5510941ee10a2c65a54af00ad7b15ab556268b3494aa6fae03b54abd97/wpedit-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "2638a788a435a93f648f5512c2e503ab", "sha256": "a59f6954ef2ed6e526dc21c77e52526b3ce44231d4c763ec594b60782ae153b0"}, "downloads": -1, "filename": "wpedit-0.3.4.tar.gz", "has_sig": false, "md5_digest": "2638a788a435a93f648f5512c2e503ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17330, "upload_time": "2015-03-25T15:00:23", "upload_time_iso_8601": "2015-03-25T15:00:23.880639Z", "url": "https://files.pythonhosted.org/packages/2d/63/fdc0cf9c9395b54b1e2d9c39a2aeebf7800502b2fda6d2bac6d9e2f89833/wpedit-0.3.4.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "e955667f5aab36bbdd971fd496058856", "sha256": "f17e3e80b4bdb7c5d744981d83b269e46977e55a951a73a46d79957d8da10224"}, "downloads": -1, "filename": "wpedit-0.4.tar.gz", "has_sig": false, "md5_digest": "e955667f5aab36bbdd971fd496058856", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18083, "upload_time": "2015-03-26T10:13:11", "upload_time_iso_8601": "2015-03-26T10:13:11.541632Z", "url": "https://files.pythonhosted.org/packages/84/5e/58bb64cbadc4679c1304a3b3243fca31b93981be9fe9df398c324965ed96/wpedit-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "0983acf7d953e78ae19e3deb55242f1e", "sha256": "129bbdb4f8d8c5f289493fd14c8ac9dfa5505403b32233ade3b779def4a18806"}, "downloads": -1, "filename": "wpedit-0.4.1.tar.gz", "has_sig": false, "md5_digest": "0983acf7d953e78ae19e3deb55242f1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18146, "upload_time": "2015-03-26T18:15:34", "upload_time_iso_8601": "2015-03-26T18:15:34.157106Z", "url": "https://files.pythonhosted.org/packages/e7/3b/de6405b9e617cb3592e30571e859fe25d9a5cf54e7f13a7e66621bd96843/wpedit-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "7a2115f13ea5316f6ef2474fa58ceb17", "sha256": "4b51f9170d6fc7e332009f9f80b36807a4bb14f2efbdd0a22ebe5b12d77c0042"}, "downloads": -1, "filename": "wpedit-0.4.2.tar.gz", "has_sig": false, "md5_digest": "7a2115f13ea5316f6ef2474fa58ceb17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18154, "upload_time": "2015-03-28T06:43:32", "upload_time_iso_8601": "2015-03-28T06:43:32.562878Z", "url": "https://files.pythonhosted.org/packages/57/46/9a85693c97eaec5b5552bda69ee94629bd00b398c733159ec87c74392d26/wpedit-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "d53f8a869e7745ce73a69a08f439b4e5", "sha256": "6bfe81a0f82aaca8279998c67464960be7c10c6ceaeeeb4f0b27f536ef48f403"}, "downloads": -1, "filename": "wpedit-0.4.3.tar.gz", "has_sig": false, "md5_digest": "d53f8a869e7745ce73a69a08f439b4e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18188, "upload_time": "2015-03-28T18:08:11", "upload_time_iso_8601": "2015-03-28T18:08:11.962297Z", "url": "https://files.pythonhosted.org/packages/49/bc/fb315e285d7a61ecf525f30b79576bf7a8a0da7412bd30fc7a2ffedc7eb9/wpedit-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "1c80863384a264fc7ac84d04f47a8f37", "sha256": "ddbe81ef77fe13683872b7435d90b528e00abfa7fab92a1263c79d49fa6bfc90"}, "downloads": -1, "filename": "wpedit-0.4.4.tar.gz", "has_sig": false, "md5_digest": "1c80863384a264fc7ac84d04f47a8f37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18187, "upload_time": "2015-03-28T18:54:15", "upload_time_iso_8601": "2015-03-28T18:54:15.962524Z", "url": "https://files.pythonhosted.org/packages/8d/c1/08d545d59fc64c12e9868a6b069607222973511c22349a40acd45f746caa/wpedit-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "7e9376e9f48855957546fe5444f3c043", "sha256": "e4594d369a2e469ea5c4b729164ede3b5ef36218053f988082c3a55e896f9328"}, "downloads": -1, "filename": "wpedit-0.4.5.tar.gz", "has_sig": false, "md5_digest": "7e9376e9f48855957546fe5444f3c043", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18230, "upload_time": "2015-03-28T18:58:17", "upload_time_iso_8601": "2015-03-28T18:58:17.271378Z", "url": "https://files.pythonhosted.org/packages/1d/37/173efcd48741c18a0f17d0650d23a582b86723bcd4b37d460a3f7c72a88a/wpedit-0.4.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7e9376e9f48855957546fe5444f3c043", "sha256": "e4594d369a2e469ea5c4b729164ede3b5ef36218053f988082c3a55e896f9328"}, "downloads": -1, "filename": "wpedit-0.4.5.tar.gz", "has_sig": false, "md5_digest": "7e9376e9f48855957546fe5444f3c043", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18230, "upload_time": "2015-03-28T18:58:17", "upload_time_iso_8601": "2015-03-28T18:58:17.271378Z", "url": "https://files.pythonhosted.org/packages/1d/37/173efcd48741c18a0f17d0650d23a582b86723bcd4b37d460a3f7c72a88a/wpedit-0.4.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:38 2020"}