{"info": {"author": "Ratson", "author_email": "contact@ratson.name", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "==========\nDj-environ\n==========\n\nDj-environ allows you to utilize 12factor inspired environment variables to configure your Django application.\n\n|pypi| |downloads| |license|\n\n\nThis is your `settings.py` file before you have installed **dj-environ**\n\n.. code-block:: python\n\n    import os\n    SITE_ROOT = os.path.dirname(os.path.dirname(os.path.dirname(os.path.realpath(__file__))))\n\n    DEBUG = True\n    TEMPLATE_DEBUG = DEBUG\n\n    DATABASES = {\n        'default': {\n            'ENGINE': 'django.db.backends.postgresql_psycopg2',\n            'NAME': 'database',\n            'USER': 'user',\n            'PASSWORD': 'githubbedpassword',\n            'HOST': '127.0.0.1',\n            'PORT': '8458',\n        }\n        'extra': {\n            'ENGINE': 'django.db.backends.sqlite3',\n            'NAME': os.path.join(SITE_ROOT, 'database.sqlite')\n        }\n    }\n\n    MEDIA_ROOT = os.path.join(SITE_ROOT, 'assets')\n    MEDIA_URL = 'media/'\n    STATIC_ROOT = os.path.join(SITE_ROOT, 'static')\n    STATIC_URL = 'static/'\n\n    SECRET_KEY = '...im incredibly still here...'\n\n    CACHES = {\n        'default': {\n            'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',\n            'LOCATION': [\n                '127.0.0.1:11211', '127.0.0.1:11212', '127.0.0.1:11213',\n            ]\n        },\n        'redis': {\n            'BACKEND': 'django_redis.cache.RedisCache',\n            'LOCATION': '127.0.0.1:6379:1',\n            'OPTIONS': {\n                'CLIENT_CLASS': 'django_redis.client.DefaultClient',\n                'PASSWORD': 'redis-githubbed-password',\n            }\n        }\n    }\n\nAfter:\n\n.. code-block:: python\n\n    import environ\n    root = environ.Path(__file__) - 3 # three folder back (/a/b/c/ - 3 = /)\n    env = environ.Env(DEBUG=(bool, False),) # set default values and casting\n    environ.Env.read_env() # reading .env file\n\n    SITE_ROOT = root()\n\n    DEBUG = env('DEBUG') # False if not in os.environ\n    TEMPLATE_DEBUG = DEBUG\n\n    DATABASES = {\n        'default': env.db(), # Raises ImproperlyConfigured exception if DATABASE_URL not in os.environ\n        'extra': env.db('SQLITE_URL', default='sqlite:////tmp/my-tmp-sqlite.db')\n    }\n\n    public_root = root.path('public/')\n\n    MEDIA_ROOT = public_root('media')\n    MEDIA_URL = 'media/'\n    STATIC_ROOT = public_root('static')\n    STATIC_URL = 'static/'\n\n    SECRET_KEY = env('SECRET_KEY') # Raises ImproperlyConfigured exception if SECRET_KEY not in os.environ\n\n    CACHES = {\n        'default': env.cache(),\n        'redis': env.cache('REDIS_URL')\n    }\n\nYou can also pass ``read_env()`` an explicit path to the ``.env`` file.\n\nCreate a ``.env`` file:\n\n.. code-block:: bash\n\n    DEBUG=on\n    # DJANGO_SETTINGS_MODULE=myapp.settings.dev\n    SECRET_KEY=your-secret-key\n    DATABASE_URL=psql://urser:un-githubbedpassword@127.0.0.1:8458/database\n    # SQLITE_URL=sqlite:///my-local-sqlite.db\n    CACHE_URL=memcache://127.0.0.1:11211,127.0.0.1:11212,127.0.0.1:11213\n    REDIS_URL=rediscache://127.0.0.1:6379:1?client_class=django_redis.client.DefaultClient&password=redis-un-githubbed-password\n\n\nHow to install\n==============\n\n::\n\n    $ pip install dj-environ\n\n\nHow to use\n==========\n\nThere are only two classes, ``environ.Env`` and ``environ.Path``\n\n.. code-block:: python\n\n    >>> import environ\n    >>> env = environ.Env(\n            DEBUG=(bool, False),\n        )\n    >>> env('DEBUG')\n    False\n    >>> env('DEBUG', default=True)\n    True\n\n    >>> open('.myenv', 'a').write('DEBUG=on')\n    >>> environ.Env.read_env('.myenv') # or env.read_env('.myenv')\n    >>> env('DEBUG')\n    True\n\n    >>> open('.myenv', 'a').write('\\nINT_VAR=1010')\n    >>> env.int('INT_VAR'), env.str('INT_VAR')\n    1010, '1010'\n\n    >>> open('.myenv', 'a').write('\\nDATABASE_URL=sqlite:///my-local-sqlite.db')\n    >>> env.read_env('.myenv')\n    >>> env.db()\n    {'ENGINE': 'django.db.backends.sqlite3', 'NAME': 'my-local-sqlite.db', 'HOST': '', 'USER': '', 'PASSWORD': '', 'PORT': ''}\n\n    >>> root = env.path('/home/myproject/')\n    >>> root('static')\n    '/home/myproject/static'\n\n\nSupported Types\n===============\n\n- str\n- bool\n- int\n- float\n- json\n- list (FOO=a,b,c)\n- tuple (FOO=(a,b,c))\n- dict (BAR=key=val,foo=bar) #environ.Env(BAR=(dict, {}))\n- dict (BAR=key=val;foo=1.1;baz=True) #environ.Env(BAR=(dict(value=unicode, cast=dict(foo=float,baz=bool)), {}))\n- url\n- path (environ.Path)\n- db_url\n    -  PostgreSQL: postgres://, pgsql://, psql:// or postgresql://\n    -  PostGIS: postgis://\n    -  MySQL: mysql:// or mysql2://\n    -  MySQL for GeoDjango: mysqlgis://\n    -  SQLITE: sqlite://\n    -  SQLITE with SPATIALITE for GeoDjango: spatialite://\n    -  Oracle: oracle://\n    -  LDAP: ldap://\n- cache_url\n    -  Database: dbcache://\n    -  Dummy: dummycache://\n    -  File: filecache://\n    -  Memory: locmemcache://\n    -  Memcached: memcache://\n    -  Python memory: pymemcache://\n    -  Redis: rediscache://\n- search_url\n    - ElasticSearch: elasticsearch://\n    - Solr: solr://\n    - Whoosh: whoosh://\n    - Xapian: xapian://\n    - Simple cache: simple://\n- email_url\n    - SMTP: smtp://\n    - SMTP+SSL: smtp+ssl://\n    - SMTP+TLS: smtp+tls://\n    - Console mail: consolemail://\n    - File mail: filemail://\n    - LocMem mail: memorymail://\n    - Dummy mail: dummymail://\n\nTips\n====\n\nUsing unsafe characters in URLs\n-------------------------------\n\nIn order to use unsafe characters you have to encode with ``urllib.parse.encode`` before you set into ``.env`` file.\n\n.. code-block::\n\n    DATABASE_URL=mysql://user:%23password@127.0.0.1:3306/dbname\n\n\nSee https://perishablepress.com/stop-using-unsafe-characters-in-urls/ for reference.\n\nEmail settings\n--------------\n\nIn order to set email configuration for django you can use this code:\n\n.. code-block:: python\n\n    EMAIL_CONFIG = env.email_url(\n        'EMAIL_URL', default='smtp://user@:password@localhost:25')\n\n    vars().update(EMAIL_CONFIG)\n\n\nTests\n=====\n\n::\n\n    $ git clone https://github.com/ratson/dj-environ.git\n    $ cd dj-environ/\n    $ python setup.py test\n\n\nCredits\n=======\n\nThis is a fork of `django-environ <https://github.com/joke2k/django-environ>`_,\nwhich has the following differences,\n\n* Support PostgreSQL URL using unix domain socket paths, e.g. postgres:////var/run/postgresql/db\n\n\n.. |pypi| image:: https://img.shields.io/pypi/v/dj-environ.svg?style=flat-square&label=version\n    :target: https://pypi.python.org/pypi/dj-environ\n    :alt: Latest version released on PyPi\n\n.. |downloads| image:: https://img.shields.io/pypi/dm/dj-environ.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/dj-environ\n    :alt: Monthly downloads\n\n.. |license| image:: https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square\n    :target: https://raw.githubusercontent.com/ratson/dj-environ/master/LICENSE.txt\n    :alt: Package license", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ratson/dj-environ", "keywords": "django environment variables 12factor", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "dj-environ", "package_url": "https://pypi.org/project/dj-environ/", "platform": "any", "project_url": "https://pypi.org/project/dj-environ/", "project_urls": {"Homepage": "https://github.com/ratson/dj-environ"}, "release_url": "https://pypi.org/project/dj-environ/0.0.1/", "requires_dist": ["django", "six"], "requires_python": "", "summary": "Dj-environ allows you to utilize 12factor inspired environment variables to configure your Django application.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Dj-environ allows you to utilize 12factor inspired environment variables to configure your Django application.</p>\n<p><a href=\"https://pypi.python.org/pypi/dj-environ\" rel=\"nofollow\"><img alt=\"Latest version released on PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bc47a1a923d8bb60fb4f96c101c7d1aa4536f3b8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a2d656e7669726f6e2e7376673f7374796c653d666c61742d737175617265266c6162656c3d76657273696f6e\"></a> <a href=\"https://pypi.python.org/pypi/dj-environ\" rel=\"nofollow\"><img alt=\"Monthly downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0f421e57eeba82550784073ad83b648f34aecd39/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f646a2d656e7669726f6e2e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://raw.githubusercontent.com/ratson/dj-environ/master/LICENSE.txt\" rel=\"nofollow\"><img alt=\"Package license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d01dca179e5892f8f0e2e136225f10faa1ca41f9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<p>This is your <cite>settings.py</cite> file before you have installed <strong>dj-environ</strong></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"n\">SITE_ROOT</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">))))</span>\n\n<span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">TEMPLATE_DEBUG</span> <span class=\"o\">=</span> <span class=\"n\">DEBUG</span>\n\n<span class=\"n\">DATABASES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ENGINE'</span><span class=\"p\">:</span> <span class=\"s1\">'django.db.backends.postgresql_psycopg2'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'NAME'</span><span class=\"p\">:</span> <span class=\"s1\">'database'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'USER'</span><span class=\"p\">:</span> <span class=\"s1\">'user'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'PASSWORD'</span><span class=\"p\">:</span> <span class=\"s1\">'githubbedpassword'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'HOST'</span><span class=\"p\">:</span> <span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'PORT'</span><span class=\"p\">:</span> <span class=\"s1\">'8458'</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n    <span class=\"s1\">'extra'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ENGINE'</span><span class=\"p\">:</span> <span class=\"s1\">'django.db.backends.sqlite3'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'NAME'</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">SITE_ROOT</span><span class=\"p\">,</span> <span class=\"s1\">'database.sqlite'</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">MEDIA_ROOT</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">SITE_ROOT</span><span class=\"p\">,</span> <span class=\"s1\">'assets'</span><span class=\"p\">)</span>\n<span class=\"n\">MEDIA_URL</span> <span class=\"o\">=</span> <span class=\"s1\">'media/'</span>\n<span class=\"n\">STATIC_ROOT</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">SITE_ROOT</span><span class=\"p\">,</span> <span class=\"s1\">'static'</span><span class=\"p\">)</span>\n<span class=\"n\">STATIC_URL</span> <span class=\"o\">=</span> <span class=\"s1\">'static/'</span>\n\n<span class=\"n\">SECRET_KEY</span> <span class=\"o\">=</span> <span class=\"s1\">'...im incredibly still here...'</span>\n\n<span class=\"n\">CACHES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'BACKEND'</span><span class=\"p\">:</span> <span class=\"s1\">'django.core.cache.backends.memcached.MemcachedCache'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'LOCATION'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s1\">'127.0.0.1:11211'</span><span class=\"p\">,</span> <span class=\"s1\">'127.0.0.1:11212'</span><span class=\"p\">,</span> <span class=\"s1\">'127.0.0.1:11213'</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'redis'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'BACKEND'</span><span class=\"p\">:</span> <span class=\"s1\">'django_redis.cache.RedisCache'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'LOCATION'</span><span class=\"p\">:</span> <span class=\"s1\">'127.0.0.1:6379:1'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'OPTIONS'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'CLIENT_CLASS'</span><span class=\"p\">:</span> <span class=\"s1\">'django_redis.client.DefaultClient'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'PASSWORD'</span><span class=\"p\">:</span> <span class=\"s1\">'redis-githubbed-password'</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>After:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">environ</span>\n<span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">3</span> <span class=\"c1\"># three folder back (/a/b/c/ - 3 = /)</span>\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">Env</span><span class=\"p\">(</span><span class=\"n\">DEBUG</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">),)</span> <span class=\"c1\"># set default values and casting</span>\n<span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">Env</span><span class=\"o\">.</span><span class=\"n\">read_env</span><span class=\"p\">()</span> <span class=\"c1\"># reading .env file</span>\n\n<span class=\"n\">SITE_ROOT</span> <span class=\"o\">=</span> <span class=\"n\">root</span><span class=\"p\">()</span>\n\n<span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"p\">(</span><span class=\"s1\">'DEBUG'</span><span class=\"p\">)</span> <span class=\"c1\"># False if not in os.environ</span>\n<span class=\"n\">TEMPLATE_DEBUG</span> <span class=\"o\">=</span> <span class=\"n\">DEBUG</span>\n\n<span class=\"n\">DATABASES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"p\">(),</span> <span class=\"c1\"># Raises ImproperlyConfigured exception if DATABASE_URL not in os.environ</span>\n    <span class=\"s1\">'extra'</span><span class=\"p\">:</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"p\">(</span><span class=\"s1\">'SQLITE_URL'</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">'sqlite:////tmp/my-tmp-sqlite.db'</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">public_root</span> <span class=\"o\">=</span> <span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">'public/'</span><span class=\"p\">)</span>\n\n<span class=\"n\">MEDIA_ROOT</span> <span class=\"o\">=</span> <span class=\"n\">public_root</span><span class=\"p\">(</span><span class=\"s1\">'media'</span><span class=\"p\">)</span>\n<span class=\"n\">MEDIA_URL</span> <span class=\"o\">=</span> <span class=\"s1\">'media/'</span>\n<span class=\"n\">STATIC_ROOT</span> <span class=\"o\">=</span> <span class=\"n\">public_root</span><span class=\"p\">(</span><span class=\"s1\">'static'</span><span class=\"p\">)</span>\n<span class=\"n\">STATIC_URL</span> <span class=\"o\">=</span> <span class=\"s1\">'static/'</span>\n\n<span class=\"n\">SECRET_KEY</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"p\">(</span><span class=\"s1\">'SECRET_KEY'</span><span class=\"p\">)</span> <span class=\"c1\"># Raises ImproperlyConfigured exception if SECRET_KEY not in os.environ</span>\n\n<span class=\"n\">CACHES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"p\">(),</span>\n    <span class=\"s1\">'redis'</span><span class=\"p\">:</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"p\">(</span><span class=\"s1\">'REDIS_URL'</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre>\n<p>You can also pass <tt>read_env()</tt> an explicit path to the <tt>.env</tt> file.</p>\n<p>Create a <tt>.env</tt> file:</p>\n<pre><span class=\"nv\">DEBUG</span><span class=\"o\">=</span>on\n<span class=\"c1\"># DJANGO_SETTINGS_MODULE=myapp.settings.dev\n</span><span class=\"nv\">SECRET_KEY</span><span class=\"o\">=</span>your-secret-key\n<span class=\"nv\">DATABASE_URL</span><span class=\"o\">=</span>psql://urser:un-githubbedpassword@127.0.0.1:8458/database\n<span class=\"c1\"># SQLITE_URL=sqlite:///my-local-sqlite.db\n</span><span class=\"nv\">CACHE_URL</span><span class=\"o\">=</span>memcache://127.0.0.1:11211,127.0.0.1:11212,127.0.0.1:11213\n<span class=\"nv\">REDIS_URL</span><span class=\"o\">=</span>rediscache://127.0.0.1:6379:1?client_class<span class=\"o\">=</span>django_redis.client.DefaultClient<span class=\"p\">&amp;</span><span class=\"nv\">password</span><span class=\"o\">=</span>redis-un-githubbed-password\n</pre>\n<div id=\"how-to-install\">\n<h2>How to install</h2>\n<pre>$ pip install dj-environ\n</pre>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<p>There are only two classes, <tt>environ.Env</tt> and <tt>environ.Path</tt></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">environ</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">Env</span><span class=\"p\">(</span>\n        <span class=\"n\">DEBUG</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">env</span><span class=\"p\">(</span><span class=\"s1\">'DEBUG'</span><span class=\"p\">)</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">env</span><span class=\"p\">(</span><span class=\"s1\">'DEBUG'</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'.myenv'</span><span class=\"p\">,</span> <span class=\"s1\">'a'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">'DEBUG=on'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">Env</span><span class=\"o\">.</span><span class=\"n\">read_env</span><span class=\"p\">(</span><span class=\"s1\">'.myenv'</span><span class=\"p\">)</span> <span class=\"c1\"># or env.read_env('.myenv')</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">env</span><span class=\"p\">(</span><span class=\"s1\">'DEBUG'</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'.myenv'</span><span class=\"p\">,</span> <span class=\"s1\">'a'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">INT_VAR=1010'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">int</span><span class=\"p\">(</span><span class=\"s1\">'INT_VAR'</span><span class=\"p\">),</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">str</span><span class=\"p\">(</span><span class=\"s1\">'INT_VAR'</span><span class=\"p\">)</span>\n<span class=\"mi\">1010</span><span class=\"p\">,</span> <span class=\"s1\">'1010'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'.myenv'</span><span class=\"p\">,</span> <span class=\"s1\">'a'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">DATABASE_URL=sqlite:///my-local-sqlite.db'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">read_env</span><span class=\"p\">(</span><span class=\"s1\">'.myenv'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"p\">()</span>\n<span class=\"p\">{</span><span class=\"s1\">'ENGINE'</span><span class=\"p\">:</span> <span class=\"s1\">'django.db.backends.sqlite3'</span><span class=\"p\">,</span> <span class=\"s1\">'NAME'</span><span class=\"p\">:</span> <span class=\"s1\">'my-local-sqlite.db'</span><span class=\"p\">,</span> <span class=\"s1\">'HOST'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"s1\">'USER'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"s1\">'PASSWORD'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"s1\">'PORT'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">}</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">'/home/myproject/'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">root</span><span class=\"p\">(</span><span class=\"s1\">'static'</span><span class=\"p\">)</span>\n<span class=\"s1\">'/home/myproject/static'</span>\n</pre>\n</div>\n<div id=\"supported-types\">\n<h2>Supported Types</h2>\n<ul>\n<li>str</li>\n<li>bool</li>\n<li>int</li>\n<li>float</li>\n<li>json</li>\n<li>list (FOO=a,b,c)</li>\n<li>tuple (FOO=(a,b,c))</li>\n<li>dict (BAR=key=val,foo=bar) #environ.Env(BAR=(dict, {}))</li>\n<li>dict (BAR=key=val;foo=1.1;baz=True) #environ.Env(BAR=(dict(value=unicode, cast=dict(foo=float,baz=bool)), {}))</li>\n<li>url</li>\n<li>path (environ.Path)</li>\n<li><dl>\n<dt>db_url</dt>\n<dd><ul>\n<li>PostgreSQL: postgres://, pgsql://, psql:// or postgresql://</li>\n<li>PostGIS: postgis://</li>\n<li>MySQL: mysql:// or mysql2://</li>\n<li>MySQL for GeoDjango: mysqlgis://</li>\n<li>SQLITE: sqlite://</li>\n<li>SQLITE with SPATIALITE for GeoDjango: spatialite://</li>\n<li>Oracle: oracle://</li>\n<li>LDAP: <a>ldap://</a></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>cache_url</dt>\n<dd><ul>\n<li>Database: dbcache://</li>\n<li>Dummy: dummycache://</li>\n<li>File: filecache://</li>\n<li>Memory: locmemcache://</li>\n<li>Memcached: memcache://</li>\n<li>Python memory: pymemcache://</li>\n<li>Redis: rediscache://</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>search_url</dt>\n<dd><ul>\n<li>ElasticSearch: elasticsearch://</li>\n<li>Solr: solr://</li>\n<li>Whoosh: whoosh://</li>\n<li>Xapian: xapian://</li>\n<li>Simple cache: simple://</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>email_url</dt>\n<dd><ul>\n<li>SMTP: smtp://</li>\n<li>SMTP+SSL: smtp+ssl://</li>\n<li>SMTP+TLS: smtp+tls://</li>\n<li>Console mail: consolemail://</li>\n<li>File mail: filemail://</li>\n<li>LocMem mail: memorymail://</li>\n<li>Dummy mail: dummymail://</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div id=\"tips\">\n<h2>Tips</h2>\n<div id=\"using-unsafe-characters-in-urls\">\n<h3>Using unsafe characters in URLs</h3>\n<p>In order to use unsafe characters you have to encode with <tt>urllib.parse.encode</tt> before you set into <tt>.env</tt> file.</p>\n<pre>DATABASE_URL=mysql://user:%23password@127.0.0.1:3306/dbname\n</pre>\n<p>See <a href=\"https://perishablepress.com/stop-using-unsafe-characters-in-urls/\" rel=\"nofollow\">https://perishablepress.com/stop-using-unsafe-characters-in-urls/</a> for reference.</p>\n</div>\n<div id=\"email-settings\">\n<h3>Email settings</h3>\n<p>In order to set email configuration for django you can use this code:</p>\n<pre><span class=\"n\">EMAIL_CONFIG</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">email_url</span><span class=\"p\">(</span>\n    <span class=\"s1\">'EMAIL_URL'</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">'smtp://user@:password@localhost:25'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">vars</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">EMAIL_CONFIG</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<pre>$ git clone https://github.com/ratson/dj-environ.git\n$ cd dj-environ/\n$ python setup.py test\n</pre>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>This is a fork of <a href=\"https://github.com/joke2k/django-environ\" rel=\"nofollow\">django-environ</a>,\nwhich has the following differences,</p>\n<ul>\n<li>Support PostgreSQL URL using unix domain socket paths, e.g. postgres:////var/run/postgresql/db</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2741080, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7f5387bb8ace912c698221a6f96c3402", "sha256": "8dd332a3fa23707c678d4f5bc5c2fef139d50048c687f8af62006cd74ee19039"}, "downloads": -1, "filename": "dj_environ-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7f5387bb8ace912c698221a6f96c3402", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20633, "upload_time": "2017-03-30T12:01:23", "upload_time_iso_8601": "2017-03-30T12:01:23.689599Z", "url": "https://files.pythonhosted.org/packages/0b/79/2e0624f45fce568d8c2709314b75a79d09149fd627c327ec4621dd3c9abb/dj_environ-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74a48dbce5ef66bd447de0bb2d5ef327", "sha256": "8eb67bd86bb9743d1923b6dbad385af0a38b968c65398401ccba53428125e9d5"}, "downloads": -1, "filename": "dj-environ-0.0.1.tar.gz", "has_sig": false, "md5_digest": "74a48dbce5ef66bd447de0bb2d5ef327", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20195, "upload_time": "2017-03-30T12:01:25", "upload_time_iso_8601": "2017-03-30T12:01:25.798683Z", "url": "https://files.pythonhosted.org/packages/1e/45/5998fa8c82713dfa1d324c5168b16378ef8b7541a66566e51d2d880d758c/dj-environ-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7f5387bb8ace912c698221a6f96c3402", "sha256": "8dd332a3fa23707c678d4f5bc5c2fef139d50048c687f8af62006cd74ee19039"}, "downloads": -1, "filename": "dj_environ-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7f5387bb8ace912c698221a6f96c3402", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20633, "upload_time": "2017-03-30T12:01:23", "upload_time_iso_8601": "2017-03-30T12:01:23.689599Z", "url": "https://files.pythonhosted.org/packages/0b/79/2e0624f45fce568d8c2709314b75a79d09149fd627c327ec4621dd3c9abb/dj_environ-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74a48dbce5ef66bd447de0bb2d5ef327", "sha256": "8eb67bd86bb9743d1923b6dbad385af0a38b968c65398401ccba53428125e9d5"}, "downloads": -1, "filename": "dj-environ-0.0.1.tar.gz", "has_sig": false, "md5_digest": "74a48dbce5ef66bd447de0bb2d5ef327", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20195, "upload_time": "2017-03-30T12:01:25", "upload_time_iso_8601": "2017-03-30T12:01:25.798683Z", "url": "https://files.pythonhosted.org/packages/1e/45/5998fa8c82713dfa1d324c5168b16378ef8b7541a66566e51d2d880d758c/dj-environ-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:36 2020"}