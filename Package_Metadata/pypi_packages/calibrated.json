{"info": {"author": "Anshul Gupta", "author_email": "anshulgupta217@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Calibrated!\n\nThis is a middleware for django which gives same structure in django success and error case.\n\nWhen frontend softwares integrate apis, then they expect response structure should remain same in case of both error and success. By adding this middleware onne can achive sam structure through out.\n\n{\n\t\"status\":  false,\n\t\"detail\":  {},\n\t\"error_detail\":  {\n}\n}\n\nThe above payload is the structure which one can recive by applying the package to django appliaction.\n\n> Description to payload\n\n\n\n - status field can be true or false in success and error case respectively\n - detail field will always be in form of dict and will hold value only in case of success(2xx)\n - error_detail will have detail in cases excluding (2xx)\n\n\n\n\n\n# Steps to install\n\nThis is quite easy to use \n\npip install calibrated\n\nAfter installing pip package, go to you django settings and add middeware\n\ncalibrated.Response\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/anshul217/calibrated", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "calibrated", "package_url": "https://pypi.org/project/calibrated/", "platform": "", "project_url": "https://pypi.org/project/calibrated/", "project_urls": {"Homepage": "https://github.com/anshul217/calibrated"}, "release_url": "https://pypi.org/project/calibrated/0.0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "This middleware gives same structure in django success and error case.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Calibrated!</h1>\n<p>This is a middleware for django which gives same structure in django success and error case.</p>\n<p>When frontend softwares integrate apis, then they expect response structure should remain same in case of both error and success. By adding this middleware onne can achive sam structure through out.</p>\n<p>{\n\"status\":  false,\n\"detail\":  {},\n\"error_detail\":  {\n}\n}</p>\n<p>The above payload is the structure which one can recive by applying the package to django appliaction.</p>\n<blockquote>\n<p>Description to payload</p>\n</blockquote>\n<ul>\n<li>status field can be true or false in success and error case respectively</li>\n<li>detail field will always be in form of dict and will hold value only in case of success(2xx)</li>\n<li>error_detail will have detail in cases excluding (2xx)</li>\n</ul>\n<h1>Steps to install</h1>\n<p>This is quite easy to use</p>\n<p>pip install calibrated</p>\n<p>After installing pip package, go to you django settings and add middeware</p>\n<p>calibrated.Response</p>\n\n          </div>"}, "last_serial": 7040241, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "27c3fb9afda429d9b2cba75055ebae25", "sha256": "dcd90224d23ed9fca4da6825e33663a707b997a1a42a09a28f75d18a37f3fe74"}, "downloads": -1, "filename": "calibrated-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "27c3fb9afda429d9b2cba75055ebae25", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3001, "upload_time": "2020-04-17T13:26:07", "upload_time_iso_8601": "2020-04-17T13:26:07.469872Z", "url": "https://files.pythonhosted.org/packages/7e/bb/5b570f5212362f6f62c8dc04705fe5446a75cc32eab9ae7a4d37df602754/calibrated-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "528bcd0ff3b55335918f83a8bde10723", "sha256": "04dc3ee240168617bb23f251158c980142f00cf3b32545d2ee222ff5dd8c315a"}, "downloads": -1, "filename": "calibrated-0.0.1.tar.gz", "has_sig": false, "md5_digest": "528bcd0ff3b55335918f83a8bde10723", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1911, "upload_time": "2020-04-17T13:26:10", "upload_time_iso_8601": "2020-04-17T13:26:10.363354Z", "url": "https://files.pythonhosted.org/packages/72/24/5b02305602f1dbb5a85a71db6114cb9b89d2cd7d270e63e19702c298ddd5/calibrated-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "27c3fb9afda429d9b2cba75055ebae25", "sha256": "dcd90224d23ed9fca4da6825e33663a707b997a1a42a09a28f75d18a37f3fe74"}, "downloads": -1, "filename": "calibrated-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "27c3fb9afda429d9b2cba75055ebae25", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3001, "upload_time": "2020-04-17T13:26:07", "upload_time_iso_8601": "2020-04-17T13:26:07.469872Z", "url": "https://files.pythonhosted.org/packages/7e/bb/5b570f5212362f6f62c8dc04705fe5446a75cc32eab9ae7a4d37df602754/calibrated-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "528bcd0ff3b55335918f83a8bde10723", "sha256": "04dc3ee240168617bb23f251158c980142f00cf3b32545d2ee222ff5dd8c315a"}, "downloads": -1, "filename": "calibrated-0.0.1.tar.gz", "has_sig": false, "md5_digest": "528bcd0ff3b55335918f83a8bde10723", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1911, "upload_time": "2020-04-17T13:26:10", "upload_time_iso_8601": "2020-04-17T13:26:10.363354Z", "url": "https://files.pythonhosted.org/packages/72/24/5b02305602f1dbb5a85a71db6114cb9b89d2cd7d270e63e19702c298ddd5/calibrated-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:38 2020"}