{"info": {"author": "Luca Cappelletti", "author_email": "cappelletti.luca94@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "random_dict\n=========================================================================================\n|travis| |sonar_quality| |sonar_maintainability| |codacy| |code_climate_maintainability| |pip| |downloads|\n\nSimple python package to generate random dictionaries of given types.\n\nHow do I install this package?\n----------------------------------------------\nAs usual, just download it using pip:\n\n.. code:: shell\n\n    pip install random_dict\n\nTests Coverage\n----------------------------------------------\nSince some software handling coverages sometime get slightly different results, here's three of them:\n\n|coveralls| |sonar_coverage| |code_climate_coverage|\n\nUsage examples\n----------------------------------------------\n\nrandom_string_dict\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nThis function will generate a dictionary with given at most `max_depth` and `max_height` of type `string`.\n\n.. code:: python\n\n    from random_dict import random_string_dict\n    from random import randint\n\n    random_string_dict(randint(1, 10), randint(1, 10))\n\nrandom_bool_dict\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nThis function will generate a dictionary with given at most `max_depth` and `max_height` of type `bool`.\n\n.. code:: python\n\n    from random_dict import random_bool_dict\n    from random import randint\n\n    random_bool_dict(randint(1, 10), randint(1, 10))\n\nrandom_float_dict\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nThis function will generate a dictionary with given at most `max_depth` and `max_height` of type `float`.\n\n.. code:: python\n\n    from random_dict import random_float_dict\n    from random import randint\n\n    random_float_dict(randint(1, 10), randint(1, 10))\n\nrandom_int_dict\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nThis function will generate a dictionary with given at most `max_depth` and `max_height` of type `int`.\n\n.. code:: python\n\n    from random_dict import random_int_dict\n    from random import randint\n\n    random_int_dict(randint(1, 10), randint(1, 10))\n\nrandom_dict\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nThis function will generate a dictionary with given at most `max_depth` and `max_height` of mixed types.\n\n.. code:: python\n\n    from random_dict import random_dict\n    from random import randint\n\n    random_dict(randint(1, 10), randint(1, 10))\n\nSome generated examples can be found within the examples folder.\n\n.. |travis| image:: https://travis-ci.org/LucaCappelletti94/random_dict.png\n   :target: https://travis-ci.org/LucaCappelletti94/random_dict\n   :alt: Travis CI build\n\n.. |sonar_quality| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_random_dict&metric=alert_status\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_random_dict\n    :alt: SonarCloud Quality\n\n.. |sonar_maintainability| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_random_dict&metric=sqale_rating\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_random_dict\n    :alt: SonarCloud Maintainability\n\n.. |sonar_coverage| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_random_dict&metric=coverage\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_random_dict\n    :alt: SonarCloud Coverage\n\n.. |coveralls| image:: https://coveralls.io/repos/github/LucaCappelletti94/random_dict/badge.svg?branch=master\n    :target: https://coveralls.io/github/LucaCappelletti94/random_dict?branch=master\n    :alt: Coveralls Coverage\n\n.. |pip| image:: https://badge.fury.io/py/random-dict.svg\n    :target: https://badge.fury.io/py/random-dict\n    :alt: Pypi project\n\n.. |downloads| image:: https://pepy.tech/badge/random-dict\n    :target: https://pepy.tech/badge/random-dict\n    :alt: Pypi total project downloads \n\n.. |codacy|  image:: https://api.codacy.com/project/badge/Grade/51be6aeee29e411994d34b6fc6063886\n    :target: https://www.codacy.com/app/LucaCappelletti94/random_dict?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=LucaCappelletti94/random_dict&amp;utm_campaign=Badge_Grade\n    :alt: Codacy Maintainability\n\n.. |code_climate_maintainability| image:: https://api.codeclimate.com/v1/badges/a04ccb96d15d8f47d3ec/maintainability\n    :target: https://codeclimate.com/github/LucaCappelletti94/random_dict/maintainability\n    :alt: Maintainability\n\n.. |code_climate_coverage| image:: https://api.codeclimate.com/v1/badges/a04ccb96d15d8f47d3ec/test_coverage\n    :target: https://codeclimate.com/github/LucaCappelletti94/random_dict/test_coverage\n    :alt: Code Climate Coverate", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LucaCappelletti94/random_dict", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "random-dict", "package_url": "https://pypi.org/project/random-dict/", "platform": "", "project_url": "https://pypi.org/project/random-dict/", "project_urls": {"Homepage": "https://github.com/LucaCappelletti94/random_dict"}, "release_url": "https://pypi.org/project/random-dict/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Simple python package to generate random dictionaries of given types.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/LucaCappelletti94/random_dict\" rel=\"nofollow\"><img alt=\"Travis CI build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b786531108cca0c0e0d24a26794599f616b84ca/68747470733a2f2f7472617669732d63692e6f72672f4c75636143617070656c6c6574746939342f72616e646f6d5f646963742e706e67\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_random_dict\" rel=\"nofollow\"><img alt=\"SonarCloud Quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ad7013a7e63c3ce76280e7571159e68b601344a/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f72616e646f6d5f64696374266d65747269633d616c6572745f737461747573\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_random_dict\" rel=\"nofollow\"><img alt=\"SonarCloud Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dedf7e8f57062d1d1144694dd2bf77df1b1754e0/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f72616e646f6d5f64696374266d65747269633d7371616c655f726174696e67\"></a> <a href=\"https://www.codacy.com/app/LucaCappelletti94/random_dict?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=LucaCappelletti94/random_dict&amp;amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b95ecc648eecb3c051cc024f78ab44ad0bf9d208/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3531626536616565653239653431313939346433346236666336303633383836\"></a> <a href=\"https://codeclimate.com/github/LucaCappelletti94/random_dict/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/84d13a9deb452d7582c918d11e0ee922fb363aa6/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f61303463636239366431356438663437643365632f6d61696e7461696e6162696c697479\"></a> <a href=\"https://badge.fury.io/py/random-dict\" rel=\"nofollow\"><img alt=\"Pypi project\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ad3a5a5b79d5cd82d9179b490c8d0f4e6cf2452/68747470733a2f2f62616467652e667572792e696f2f70792f72616e646f6d2d646963742e737667\"></a> <a href=\"https://pepy.tech/badge/random-dict\" rel=\"nofollow\"><img alt=\"Pypi total project downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a9ba2ad27251bda752a083e16aa0c91ee111bb27/68747470733a2f2f706570792e746563682f62616467652f72616e646f6d2d64696374\"></a></p>\n<p>Simple python package to generate random dictionaries of given types.</p>\n<div id=\"how-do-i-install-this-package\">\n<h2>How do I install this package?</h2>\n<p>As usual, just download it using pip:</p>\n<pre>pip install random_dict\n</pre>\n</div>\n<div id=\"tests-coverage\">\n<h2>Tests Coverage</h2>\n<p>Since some software handling coverages sometime get slightly different results, here\u2019s three of them:</p>\n<p><a href=\"https://coveralls.io/github/LucaCappelletti94/random_dict?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed005c2b504b647bad2f1814beb0ec235649ed9a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4c75636143617070656c6c6574746939342f72616e646f6d5f646963742f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_random_dict\" rel=\"nofollow\"><img alt=\"SonarCloud Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d909458a387baf90d6cced8e6c07998b98980f99/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f72616e646f6d5f64696374266d65747269633d636f766572616765\"></a> <a href=\"https://codeclimate.com/github/LucaCappelletti94/random_dict/test_coverage\" rel=\"nofollow\"><img alt=\"Code Climate Coverate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/55616205db6fbc9a472511cb74dbf3d2f9cdf57c/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f61303463636239366431356438663437643365632f746573745f636f766572616765\"></a></p>\n</div>\n<div id=\"usage-examples\">\n<h2>Usage examples</h2>\n<div id=\"random-string-dict\">\n<h3>random_string_dict</h3>\n<p>This function will generate a dictionary with given at most <cite>max_depth</cite> and <cite>max_height</cite> of type <cite>string</cite>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">random_dict</span> <span class=\"kn\">import</span> <span class=\"n\">random_string_dict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">random</span> <span class=\"kn\">import</span> <span class=\"n\">randint</span>\n\n<span class=\"n\">random_string_dict</span><span class=\"p\">(</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"random-bool-dict\">\n<h3>random_bool_dict</h3>\n<p>This function will generate a dictionary with given at most <cite>max_depth</cite> and <cite>max_height</cite> of type <cite>bool</cite>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">random_dict</span> <span class=\"kn\">import</span> <span class=\"n\">random_bool_dict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">random</span> <span class=\"kn\">import</span> <span class=\"n\">randint</span>\n\n<span class=\"n\">random_bool_dict</span><span class=\"p\">(</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"random-float-dict\">\n<h3>random_float_dict</h3>\n<p>This function will generate a dictionary with given at most <cite>max_depth</cite> and <cite>max_height</cite> of type <cite>float</cite>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">random_dict</span> <span class=\"kn\">import</span> <span class=\"n\">random_float_dict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">random</span> <span class=\"kn\">import</span> <span class=\"n\">randint</span>\n\n<span class=\"n\">random_float_dict</span><span class=\"p\">(</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"random-int-dict\">\n<h3>random_int_dict</h3>\n<p>This function will generate a dictionary with given at most <cite>max_depth</cite> and <cite>max_height</cite> of type <cite>int</cite>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">random_dict</span> <span class=\"kn\">import</span> <span class=\"n\">random_int_dict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">random</span> <span class=\"kn\">import</span> <span class=\"n\">randint</span>\n\n<span class=\"n\">random_int_dict</span><span class=\"p\">(</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"id1\">\n<h3>random_dict</h3>\n<p>This function will generate a dictionary with given at most <cite>max_depth</cite> and <cite>max_height</cite> of mixed types.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">random_dict</span> <span class=\"kn\">import</span> <span class=\"n\">random_dict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">random</span> <span class=\"kn\">import</span> <span class=\"n\">randint</span>\n\n<span class=\"n\">random_dict</span><span class=\"p\">(</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n</pre>\n<p>Some generated examples can be found within the examples folder.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5934359, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "6b41bcd50bd9af4881a38e65f6c1af43", "sha256": "ddfe0d95ed792028e281a2ce029422e57149ea473b370ee2197c375b5818eed0"}, "downloads": -1, "filename": "random_dict-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6b41bcd50bd9af4881a38e65f6c1af43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3052, "upload_time": "2019-05-31T14:09:59", "upload_time_iso_8601": "2019-05-31T14:09:59.058647Z", "url": "https://files.pythonhosted.org/packages/2b/74/fe5cef75b575bec35e397148382687139540f529bb98947c576c78f4d97b/random_dict-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4832099861f83d65cc7e02573f889784", "sha256": "c59b2101fba13194ba79b559322fa500a08410e52233b58b4025b1ac453380f5"}, "downloads": -1, "filename": "random_dict-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4832099861f83d65cc7e02573f889784", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3595, "upload_time": "2019-06-02T17:07:20", "upload_time_iso_8601": "2019-06-02T17:07:20.304956Z", "url": "https://files.pythonhosted.org/packages/84/98/b59e308b3a6591a2344ea1963c7c47b16aff7df43304aa66c444cf5462e4/random_dict-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "107efbf8f22a4e679452a9139696e9c9", "sha256": "6fd86d107134b60db4b54eb96dd1964e3e6efbab616882158a6ccf3262d0b29c"}, "downloads": -1, "filename": "random_dict-1.0.2.tar.gz", "has_sig": false, "md5_digest": "107efbf8f22a4e679452a9139696e9c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3590, "upload_time": "2019-10-06T09:46:16", "upload_time_iso_8601": "2019-10-06T09:46:16.630663Z", "url": "https://files.pythonhosted.org/packages/86/bf/d4bc84a4ebeb1c6692600f323bf5abd6a9d1acbd1c5f53f7184500923db3/random_dict-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "107efbf8f22a4e679452a9139696e9c9", "sha256": "6fd86d107134b60db4b54eb96dd1964e3e6efbab616882158a6ccf3262d0b29c"}, "downloads": -1, "filename": "random_dict-1.0.2.tar.gz", "has_sig": false, "md5_digest": "107efbf8f22a4e679452a9139696e9c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3590, "upload_time": "2019-10-06T09:46:16", "upload_time_iso_8601": "2019-10-06T09:46:16.630663Z", "url": "https://files.pythonhosted.org/packages/86/bf/d4bc84a4ebeb1c6692600f323bf5abd6a9d1acbd1c5f53f7184500923db3/random_dict-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:39 2020"}