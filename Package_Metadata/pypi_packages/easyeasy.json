{"info": {"author": "EasyEasy.io", "author_email": "feedback@easyeasy.io", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: ISC License (ISCL)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# easyeasy.client\n\n## How to use\n\n### Install\n```\npip install easyeasy\n```\n\n### Initialize\n\n```python\nfrom easyeasy.client import Client\n\nclient = Client(\"bc420813-17d9-47fa-9d29-8bd6a1207f8a\")\n```\n\n### Examples\n\n```python\n\nclass Cat:\n    def __init__(self):\n        self.id = None\n        self.name = None\n        self.interests = []\n        self.age = None\n\ncat = Cat()\ncat.name = \"Sam\"\ncat.age = 1.5\ncat.interests = [\"play\", \"eat\", \"discover\"]\n\n# add object. entity name will be inferred from class name\nid = client.add(cat)\n\n# or specify entity name explicitly\nid = client.add(cat, \"cat\")\n\n# get one object by id. Specify entity type. Entity name will be inferred\ncat = client.get_one(id, Cat)\n\n# or specify entity name explicitly\ncat = client.get_one(id, Cat, \"cat\")\n# at least one should be specified(entity_class or entity_name). In case entity_class not specified, dict object will be returned\n\n\n# update object\ncat.age = 2.0\ncat.interests = [\"eat\", \"sleep\", \"play\"]\n\n# object must have id property to distinguish which object is being updated. entity_name can be specified explicitly\nclient.update(cat)\n\n# get all objects. entity_name can be specified explicitly\ncats_collection = client.get(Cat)\n\n# filtering\ncats_collection = client.get(Cat, query={'age': 1.5})  # get 1.5 years old cats\ncats_collection = client.get(Cat, query={'age_gt': 1.0})  # cats older than 1 year\ncats_collection = client.get(Cat, query={\"name_like\": \"Sa*\"})  # wildcard\n\n# paging\ncats_collection = client.get(Cat, query={\"_start\": \"10\", \"_count\": 10})\n\n# ordering\ncats_collection = client.get(Cat, query={\"_orderby\":\"age\"})\ncats_collection = client.get(Cat, query={\"_orderbydesc\":\"age\"})\n\n# learn more about filtering operators at: http://easyeasy.io/docs#/operators\n\n# delete object by id\nclient.delete(cat.id, Cat)\n```\n\n# Licence\nISC\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/EasyEasyio/python-client", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "easyeasy", "package_url": "https://pypi.org/project/easyeasy/", "platform": "", "project_url": "https://pypi.org/project/easyeasy/", "project_urls": {"Homepage": "https://github.com/EasyEasyio/python-client"}, "release_url": "https://pypi.org/project/easyeasy/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Client for EasyEasy.io cloud database", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>easyeasy.client</h1>\n<h2>How to use</h2>\n<h3>Install</h3>\n<pre><code>pip install easyeasy\n</code></pre>\n<h3>Initialize</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">easyeasy.client</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s2\">\"bc420813-17d9-47fa-9d29-8bd6a1207f8a\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Examples</h3>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Cat</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">interests</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n<span class=\"n\">cat</span> <span class=\"o\">=</span> <span class=\"n\">Cat</span><span class=\"p\">()</span>\n<span class=\"n\">cat</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"Sam\"</span>\n<span class=\"n\">cat</span><span class=\"o\">.</span><span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"mf\">1.5</span>\n<span class=\"n\">cat</span><span class=\"o\">.</span><span class=\"n\">interests</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"play\"</span><span class=\"p\">,</span> <span class=\"s2\">\"eat\"</span><span class=\"p\">,</span> <span class=\"s2\">\"discover\"</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># add object. entity name will be inferred from class name</span>\n<span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">cat</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or specify entity name explicitly</span>\n<span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">cat</span><span class=\"p\">,</span> <span class=\"s2\">\"cat\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get one object by id. Specify entity type. Entity name will be inferred</span>\n<span class=\"n\">cat</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_one</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">Cat</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or specify entity name explicitly</span>\n<span class=\"n\">cat</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_one</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">Cat</span><span class=\"p\">,</span> <span class=\"s2\">\"cat\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># at least one should be specified(entity_class or entity_name). In case entity_class not specified, dict object will be returned</span>\n\n\n<span class=\"c1\"># update object</span>\n<span class=\"n\">cat</span><span class=\"o\">.</span><span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span>\n<span class=\"n\">cat</span><span class=\"o\">.</span><span class=\"n\">interests</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"eat\"</span><span class=\"p\">,</span> <span class=\"s2\">\"sleep\"</span><span class=\"p\">,</span> <span class=\"s2\">\"play\"</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># object must have id property to distinguish which object is being updated. entity_name can be specified explicitly</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">cat</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get all objects. entity_name can be specified explicitly</span>\n<span class=\"n\">cats_collection</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">Cat</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># filtering</span>\n<span class=\"n\">cats_collection</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">Cat</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mf\">1.5</span><span class=\"p\">})</span>  <span class=\"c1\"># get 1.5 years old cats</span>\n<span class=\"n\">cats_collection</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">Cat</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'age_gt'</span><span class=\"p\">:</span> <span class=\"mf\">1.0</span><span class=\"p\">})</span>  <span class=\"c1\"># cats older than 1 year</span>\n<span class=\"n\">cats_collection</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">Cat</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"name_like\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Sa*\"</span><span class=\"p\">})</span>  <span class=\"c1\"># wildcard</span>\n\n<span class=\"c1\"># paging</span>\n<span class=\"n\">cats_collection</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">Cat</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"_start\"</span><span class=\"p\">:</span> <span class=\"s2\">\"10\"</span><span class=\"p\">,</span> <span class=\"s2\">\"_count\"</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># ordering</span>\n<span class=\"n\">cats_collection</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">Cat</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"_orderby\"</span><span class=\"p\">:</span><span class=\"s2\">\"age\"</span><span class=\"p\">})</span>\n<span class=\"n\">cats_collection</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">Cat</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"_orderbydesc\"</span><span class=\"p\">:</span><span class=\"s2\">\"age\"</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># learn more about filtering operators at: http://easyeasy.io/docs#/operators</span>\n\n<span class=\"c1\"># delete object by id</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">cat</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">Cat</span><span class=\"p\">)</span>\n</pre>\n<h1>Licence</h1>\n<p>ISC</p>\n\n          </div>"}, "last_serial": 4406107, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "984ed18cf7e5dadb85d7a01ad0bcf1b4", "sha256": "f640a78dbd2b72957e6c3962a99115658453b56a2bd9a30298dffa38432b95af"}, "downloads": -1, "filename": "easyeasy-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "984ed18cf7e5dadb85d7a01ad0bcf1b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3142, "upload_time": "2018-10-12T08:30:00", "upload_time_iso_8601": "2018-10-12T08:30:00.855614Z", "url": "https://files.pythonhosted.org/packages/23/34/03ca73f8688510dccfc66f456b937049eb60d13439d42a7d6b74540e6c2b/easyeasy-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "660a08d6236182260281bfb98abbdd12", "sha256": "8583461943bb8a95bb81c6c45a94979e95ef0665e80430e7435cebbaa330ae50"}, "downloads": -1, "filename": "easyeasy-1.0.1.tar.gz", "has_sig": false, "md5_digest": "660a08d6236182260281bfb98abbdd12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2730, "upload_time": "2018-10-12T08:30:02", "upload_time_iso_8601": "2018-10-12T08:30:02.237526Z", "url": "https://files.pythonhosted.org/packages/50/97/0949272c1f22caa4b33ca1876a66e1d04408c10e47c28683a26c1271a84a/easyeasy-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "b4c2d705f10cdbdca16fb7aff07d7167", "sha256": "44ca65dffb2c37a4bc5829cfcbeb0b5f177ca6d65490ca61f526489a7d4873d8"}, "downloads": -1, "filename": "easyeasy-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b4c2d705f10cdbdca16fb7aff07d7167", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3170, "upload_time": "2018-10-23T11:46:22", "upload_time_iso_8601": "2018-10-23T11:46:22.731874Z", "url": "https://files.pythonhosted.org/packages/fa/80/f4f6d831a452075e60a79a18c1017956446ffc58b73ee1d4913608b53718/easyeasy-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "960a025f492da416d7cf8f9dbf906b7b", "sha256": "5d62981189fdcde54b534ea82f15e3d8720f1877c2fd3b9e073f309bd94fb01b"}, "downloads": -1, "filename": "easyeasy-1.0.2.tar.gz", "has_sig": false, "md5_digest": "960a025f492da416d7cf8f9dbf906b7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2775, "upload_time": "2018-10-23T11:46:24", "upload_time_iso_8601": "2018-10-23T11:46:24.650471Z", "url": "https://files.pythonhosted.org/packages/b8/fc/3524c268456cfd482eb60915ced80d0593547c23ee11669adb07ded9578d/easyeasy-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b4c2d705f10cdbdca16fb7aff07d7167", "sha256": "44ca65dffb2c37a4bc5829cfcbeb0b5f177ca6d65490ca61f526489a7d4873d8"}, "downloads": -1, "filename": "easyeasy-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b4c2d705f10cdbdca16fb7aff07d7167", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3170, "upload_time": "2018-10-23T11:46:22", "upload_time_iso_8601": "2018-10-23T11:46:22.731874Z", "url": "https://files.pythonhosted.org/packages/fa/80/f4f6d831a452075e60a79a18c1017956446ffc58b73ee1d4913608b53718/easyeasy-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "960a025f492da416d7cf8f9dbf906b7b", "sha256": "5d62981189fdcde54b534ea82f15e3d8720f1877c2fd3b9e073f309bd94fb01b"}, "downloads": -1, "filename": "easyeasy-1.0.2.tar.gz", "has_sig": false, "md5_digest": "960a025f492da416d7cf8f9dbf906b7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2775, "upload_time": "2018-10-23T11:46:24", "upload_time_iso_8601": "2018-10-23T11:46:24.650471Z", "url": "https://files.pythonhosted.org/packages/b8/fc/3524c268456cfd482eb60915ced80d0593547c23ee11669adb07ded9578d/easyeasy-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:24 2020"}