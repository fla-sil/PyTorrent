{"info": {"author": "Daniel Narvaez", "author_email": "dwnarvaez@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Logging", "Topic :: System :: Systems Administration", "Topic :: System :: System Shells", "Topic :: Text Processing"], "description": "======\nTailer\n======\n\nPython tail is a simple implementation of GNU tail and head. \n\nIt provides 3 main functions that can be performed on any file-like object that supports ``seek()`` and ``tell()``.\n\n* ``tail`` - read lines from the end of a file\n* ``head`` - read lines from the top of a file\n* ``follow`` - read lines as a file grows\n\nIt also comes with ``pytail``, a command line version offering the same functionality as GNU tail. This can be particularly useful on Windows systems that have no tail equivalent.\n\n- `Tailer on GitHub <http://github.com/six8/pytailer>`_\n- `Tailer on Pypi <http://pypi.python.org/pypi/tailer>`_\n\nInstallation\n============\n\nInstall with ``pip`` or ``easy_install``.\n\n::\n\n    pip install tailer\n\nExamples\n========\n\n::\n\n  import tailer\n  f = open('test.txt', 'w')\n  for i in range(11):\n      f.write('Line %d\\\\n' % (i + 1))\n  f.close()\n    \nTail\n----\n::\n\n    # Get the last 3 lines of the file\n    tailer.tail(open('test.txt'), 3)\n    # ['Line 9', 'Line 10', 'Line 11']\n\nHead\n----\n::\n\n    # Get the first 3 lines of the file\n    tailer.head(open('test.txt'), 3)\n    # ['Line 1', 'Line 2', 'Line 3']\n\nFollow\n------\n::\n\n    # Follow the file as it grows\n    for line in tailer.follow(open('test.txt')):\n        print line\n\nRunning Tests\n=============\n\nTailer currently only has doctests.\n\nRun tests with nose::\n\n    nosetests --with-doctest src/tailer    \n\nRun tests with doctest::\n\n    python -m doctest -v src/tailer/__init__.py", "description_content_type": null, "docs_url": null, "download_url": "http://github.com/dnarvaez/pytailer", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/dnarvaez/pytailer", "keywords": "tail,head", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "tailer3", "package_url": "https://pypi.org/project/tailer3/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tailer3/", "project_urls": {"Download": "http://github.com/dnarvaez/pytailer", "Homepage": "http://github.com/dnarvaez/pytailer"}, "release_url": "https://pypi.org/project/tailer3/0.3/", "requires_dist": null, "requires_python": null, "summary": "Python tail is a simple implementation of GNU tail and head.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python tail is a simple implementation of GNU tail and head.</p>\n<p>It provides 3 main functions that can be performed on any file-like object that supports <tt>seek()</tt> and <tt>tell()</tt>.</p>\n<ul>\n<li><tt>tail</tt> - read lines from the end of a file</li>\n<li><tt>head</tt> - read lines from the top of a file</li>\n<li><tt>follow</tt> - read lines as a file grows</li>\n</ul>\n<p>It also comes with <tt>pytail</tt>, a command line version offering the same functionality as GNU tail. This can be particularly useful on Windows systems that have no tail equivalent.</p>\n<ul>\n<li><a href=\"http://github.com/six8/pytailer\" rel=\"nofollow\">Tailer on GitHub</a></li>\n<li><a href=\"http://pypi.python.org/pypi/tailer\" rel=\"nofollow\">Tailer on Pypi</a></li>\n</ul>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install with <tt>pip</tt> or <tt>easy_install</tt>.</p>\n<pre>pip install tailer\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<pre>import tailer\nf = open('test.txt', 'w')\nfor i in range(11):\n    f.write('Line %d\\\\n' % (i + 1))\nf.close()\n</pre>\n<div id=\"tail\">\n<h3>Tail</h3>\n<pre># Get the last 3 lines of the file\ntailer.tail(open('test.txt'), 3)\n# ['Line 9', 'Line 10', 'Line 11']\n</pre>\n</div>\n<div id=\"head\">\n<h3>Head</h3>\n<pre># Get the first 3 lines of the file\ntailer.head(open('test.txt'), 3)\n# ['Line 1', 'Line 2', 'Line 3']\n</pre>\n</div>\n<div id=\"follow\">\n<h3>Follow</h3>\n<pre># Follow the file as it grows\nfor line in tailer.follow(open('test.txt')):\n    print line\n</pre>\n</div>\n</div>\n<div id=\"running-tests\">\n<h2>Running Tests</h2>\n<p>Tailer currently only has doctests.</p>\n<p>Run tests with nose:</p>\n<pre>nosetests --with-doctest src/tailer\n</pre>\n<p>Run tests with doctest:</p>\n<pre>python -m doctest -v src/tailer/__init__.py\n</pre>\n</div>\n\n          </div>"}, "last_serial": 800344, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "150ade0dab2274a283690817c77861ae", "sha256": "b85b93a859b88bec4b1a55495d6f41e0c717d3ddfac54dc8711a50c9470fcc72"}, "downloads": -1, "filename": "tailer3-0.3.tar.gz", "has_sig": false, "md5_digest": "150ade0dab2274a283690817c77861ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9026, "upload_time": "2013-03-05T16:16:18", "upload_time_iso_8601": "2013-03-05T16:16:18.617888Z", "url": "https://files.pythonhosted.org/packages/f6/1a/08234ccafdf0f580d97f8321e318e5ccf1b4559e74e02ae33bde8b7ed5d8/tailer3-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "150ade0dab2274a283690817c77861ae", "sha256": "b85b93a859b88bec4b1a55495d6f41e0c717d3ddfac54dc8711a50c9470fcc72"}, "downloads": -1, "filename": "tailer3-0.3.tar.gz", "has_sig": false, "md5_digest": "150ade0dab2274a283690817c77861ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9026, "upload_time": "2013-03-05T16:16:18", "upload_time_iso_8601": "2013-03-05T16:16:18.617888Z", "url": "https://files.pythonhosted.org/packages/f6/1a/08234ccafdf0f580d97f8321e318e5ccf1b4559e74e02ae33bde8b7ed5d8/tailer3-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:21 2020"}