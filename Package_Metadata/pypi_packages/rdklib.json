{"info": {"author": "Michael Borchert", "author_email": "mborch@amazon.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "RDKlib\n======\n\n.. image:: https://github.com/awslabs/aws-config-rdklib/workflows/ci/badge.svg?branch=master\n    :target: https://github.com/awslabs/aws-config-rdklib/actions?query=workflow%3Aci+branch%3Amaster\n\n\nRDKlib is a Python library to enable you to **run custom AWS Config Rules at scale**. The library can be used to:\n\n+ Help you to focus only on the compliance logic, while the library does the heavy lifting\n+ Ease maintenance by moving the boilerplate code as a AWS Lambda Layer\n+ Ease deployment by using AWS Serverless Application Repository\n\nRDKLib works in synergy with the AWS Config Rule Development Kit (https://github.com/awslabs/aws-config-rdk).\n\nGetting Started\n===============\n\nInstall the library locally\n---------------------------\n\n::\n\n    pip install rdklib\n\nCreate a rule using the RDK \n---------------------------\n\nThe runtime of your RDK rule have to be set to python3.6-lib in the RDK to provide you the Rule template.\n\n* For periodic trigger:\n\n::\n\n    rdk create YOUR_RULE_NAME --runtime python3.6-lib --maximum-frequency TwentyFour_Hours\n\n* For configuration change trigger (for example S3 Bucket)\n\n::\n\n    rdk create YOUR_RULE_NAME --runtime python3.6-lib --resource-types AWS::S3::Bucket\n\n..\n\n    Note: you need to install the RDK (see https://github.com/awslabs/aws-config-rdk#getting-started)\n\nDeploy your rule with RDKlib layer\n----------------------------------\n\nRDKLib is designed to work as a AWS Lambda Layer. It allows you to use the library without needing to include it in your deployment package.\n\n1. Install RDKlib layer (with AWS CLI)\n\n::\n\n    aws serverlessrepo create-cloud-formation-change-set --application-id arn:aws:serverlessrepo:ap-southeast-1:711761543063:applications/rdklib --stack-name RDKlib-Layer\n\n    # Copy/paste the full change-set ARN to customize the following command\n    aws cloudformation execute-change-set --change-set-name NAME_OF_THE_CHANGE_SET\n\n    aws cloudformation describe-stack-resources --stack-name serverlessrepo-RDKlib-Layer\n    # Copy the ARN of the Lambda layer in the \"PhysicalResourceId\" key (i.e. arn:aws:lambda:YOUR_REGION:YOUR_ACCOUNT:layer:rdklib-layer:1).\n\n..\n\n    Note: You can do the same step manually going to `https://console.aws.amazon.com/lambda/home#/create/function?tab=serverlessApps <https://console.aws.amazon.com/lambda/home#/create/function?tab=serverlessApps>`_ and find \"rdklib\"\n\n2. Deploy the rule\n\n::\n\n    rdk deploy YOUR_RULE_NAME --rdklib-layer-arn YOUR_RDKLIB_LAYER_ARN\n\nDev Guide\n=========\n\n*class* **ClientFactory**\n-------------------------\n\n*method* **build_client()**\n  Create or reuse a boto3 client. It minimizes the number of STS calls by reusing existing client, if already available.\n\n  **Request Syntax**\n\n  .. code-block:: python\n\n    response = client_factory.build_client(\n        service='string')\n\n  **Parameter**\n\n  + **service** *(string)* -- **[REQUIRED]**\n\n    The boto3 name of the AWS service\n\n*class* **ConfigRule**\n----------------------\n\n*method* **evaluate_parameters()**\n  Used to analyze the validity of the input parameters of the Config Rule.\n\n  **Parameter**\n\n  + **rule_parameters** *(dict)*\n\n    The input parameters of the Config Rule.\n\n  **Return Syntax**\n    If one of the parameters is invalid, raise an InvalidParametersError error.\n\n    .. code-block:: python\n\n        from rdklib import InvalidParametersError\n        raise InvalidParametersError(\"Error message to display\")\n\n    If the parameters are all valid, return a dict.\n\n    .. code-block:: python\n\n        return valid_rule_parameters\n\n*method* **evaluate_change()**\n  Used to evaluate Configuration Change triggered rule.\n\n  **Parameters**\n\n  + **event**\n\n    Lambda event provided by Config.\n\n  + **client_factory** *(ClientFactory)*\n\n    *ClientFactory* object to be used in this rule.\n\n  + **configuration_item** *(dict)*\n\n    The full configuration Item, even if oversized.\n\n  + **valid_rule_parameters** *(dict)*\n\n    The output of the evaluate_parameters() method.\n\n  **Return Syntax**\n    Return an list of *Evaluation* object(s). \n\n    .. code-block:: python\n\n        return [Evaluation()]\n\n    It can be an empty list, if no evaluation.\n\n\n*method* **evaluate_periodic()**\n  Used to evaluate Periodic triggered rule.\n\n  **Parameters**\n\n  + **event**\n\n    Lambda event provided by Config.\n\n  + **client_factory** *(ClientFactory)*\n\n    *ClientFactory* object to be used in this rule.\n\n  + **valid_rule_parameters** *(dict)*\n\n    The output of the evaluate_parameters() method.\n\n  **Return Syntax**\n    Return an list of *Evaluation* object(s). \n\n    .. code-block:: python\n\n        return [Evaluation()]\n\n    It can be an empty list, if no evaluation.\n\n*class* **Evaluation**\n----------------------\n\nClass for the *Evaluation* object.\n\n**Request Syntax**\n\n.. code-block:: python\n\n    evaluation = Evaluation(\n        complianceType='ComplianceType',\n        resourceId='string',\n        resourceType='string',\n        annotation='string')\n\n**Parameter**\n\n* **complianceType** *(ComplianceType)* **[REQUIRED]**\n\n  Compliance type of the evaluation.\n\n* **resourceId** *(string)*\n\n  Resource id of the evaluation. It gets autopopulated for Configuration Change triggered rule.\n\n* **resourceType** *(string)*\n\n  Resource type of the evaluation (as per AWS CloudFormation definition). It gets autopopulated for Configuration Change triggered rule.\n\n* **annotation** *(string)*\n\n  Annotation for the evaluation. It gets shorten to 255 characters automatically.\n\n*class* **ComplianceType**\n--------------------------\n\nClass for the *ComplianceType* object.\n\n**Request Syntax**\n\nEvaluation will display as \"Compliant\"\n\n.. code-block:: python\n\n    compliance_type = ComplianceType.COMPLIANT\n\n\nEvaluation will display as \"Non Compliant\"\n\n.. code-block:: python\n\n    compliance_type = ComplianceType.NON_COMPLIANT\n\nEvaluation will not display:\n\n.. code-block:: python\n\n    compliance_type = ComplianceType.NOT_APPLICABLE\n\n*Helper functions* **rdklibtest**\n---------------------------------\n\n*assert_successful_evaluation(\\*\\*kwargs)*\n  Do a comparaison on the list of *Evalation* objects returned by either *evaluate_change()* or *evaluate_periodic()*.\n\n  **Request Syntax**\n\n  .. code-block:: python\n\n    rdklibtest.assert_successful_evaluation(self, response, resp_expected, evaluations_count=1)\n\n  **Parameters**\n    response (list of Evaluation Objects) **[REQUIRED]**\n      the list of the response from *evaluate_change()* or *evaluate_periodic()*\n    resp_expected (list of Evaluation Objects) **[REQUIRED]**\n      the list of the expected response from *evaluate_change()* or *evaluate_periodic()*\n    evaluations_count (int)\n      The number of Evaluation Objects expected. Default is 1.\n\n  **Return**\n    None\n\n*create_test_configurationchange_event(\\*\\*kwargs)*\n  Generate a dummy configuration change event that can be used as input when testing *evaluate_change()*\n\n  **Request Syntax**\n\n  .. code-block:: python\n\n    rdklibtest.create_test_configurationchange_event(invoking_event_json, rule_parameters_json=None)\n\n  Parameters\n    invoking_event (dict) **[REQUIRED]**\n      the invoking event json from Config\n    rule_parameters_json (dict)\n      the key/value pair(s) for the Rule parameters. Default to None.\n\n  **Return Syntax**\n\n  .. code-block:: python\n\n    {\n        \"configRuleName\":\"myrule\",\n        \"executionRoleArn\":\"arn:aws:iam::123456789012:role/example\",\n        \"eventLeftScope\": False,\n        \"invokingEvent\": json.dumps(invoking_event_json),\n        \"accountId\": \"123456789012\",\n        \"configRuleArn\": \"arn:aws:config:us-east-1:123456789012:config-rule/config-rule-8fngan\",\n        \"resultToken\":\"token\",\n        \"ruleParameters\": json.dumps(rule_parameters_json)\n    }\n\n*create_test_scheduled_event(\\*\\*kwargs)*\n  Generate a dummy periodic event that can be used as input when testing *evaluate_periodic()*\n\n  **Request Syntax**\n\n  .. code-block:: python\n\n    rdklibtest.create_test_scheduled_event(rule_parameters_json=None)\n\n  **Parameter**\n    rule_parameters_json (dict)\n      the key/value pair(s) for the Rule parameters. Default to None.\n\n  **Return Syntax**\n\n  .. code-block:: python\n\n    {\n        \"configRuleName\":\"myrule\",\n        \"executionRoleArn\":\"arn:aws:iam::123456789012:role/example\",\n        \"eventLeftScope\": False,\n        \"invokingEvent\": \"{\\\"messageType\\\": \\\"ScheduledNotification\\\", \\\"notificationCreationTime\\\": \\\"2017-12-23T22:11:18.158Z\\\"}\",\n        \"accountId\": \"123456789012\",\n        \"configRuleArn\": \"arn:aws:config:us-east-1:123456789012:config-rule/config-rule-8fngan\",\n        \"resultToken\":\"token\",\n        \"ruleParameters\": json.dumps(rule_parameters_json)\n    }\n\nLicense\n=======\n\nThis project is licensed under the Apache-2.0 License.\n\nFeedback / Questions\n====================\n\nFeel free to email rdk-maintainers@amazon.com\n\nAuthors\n=======\n* **Jonathan Rault** - *Maintainer, design, code, testing, feedback*\n* **Ricky Chau** - *Maintainer, code, testing*\n* **Michael Borchert** - *Design, code, testing, feedback*\n* **Joe Lee** - *Design, feedback*\n* **Chris Gutierrez** - *Design, feedback*\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://code.amazon.com/packages/RDKLib/trees/mainline/--/", "keywords": "", "license": "Apache License Version 2.0", "maintainer": "", "maintainer_email": "", "name": "rdklib", "package_url": "https://pypi.org/project/rdklib/", "platform": "", "project_url": "https://pypi.org/project/rdklib/", "project_urls": {"Homepage": "https://code.amazon.com/packages/RDKLib/trees/mainline/--/"}, "release_url": "https://pypi.org/project/rdklib/0.1.0/", "requires_dist": ["rdk", "boto3", "botocore"], "requires_python": "", "summary": "Rule Development Kit Library for AWS Config", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"rdklib\">\n<h2>RDKlib</h2>\n<a href=\"https://github.com/awslabs/aws-config-rdklib/actions?query=workflow%3Aci+branch%3Amaster\" rel=\"nofollow\"><img alt=\"https://github.com/awslabs/aws-config-rdklib/workflows/ci/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34af48d1989d5f5feb05a3970d6387baa5bbcbcd/68747470733a2f2f6769746875622e636f6d2f6177736c6162732f6177732d636f6e6669672d72646b6c69622f776f726b666c6f77732f63692f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<p>RDKlib is a Python library to enable you to <strong>run custom AWS Config Rules at scale</strong>. The library can be used to:</p>\n<ul>\n<li>Help you to focus only on the compliance logic, while the library does the heavy lifting</li>\n<li>Ease maintenance by moving the boilerplate code as a AWS Lambda Layer</li>\n<li>Ease deployment by using AWS Serverless Application Repository</li>\n</ul>\n<p>RDKLib works in synergy with the AWS Config Rule Development Kit (<a href=\"https://github.com/awslabs/aws-config-rdk\" rel=\"nofollow\">https://github.com/awslabs/aws-config-rdk</a>).</p>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<div id=\"install-the-library-locally\">\n<h3>Install the library locally</h3>\n<pre>pip install rdklib\n</pre>\n</div>\n<div id=\"create-a-rule-using-the-rdk\">\n<h3>Create a rule using the RDK</h3>\n<p>The runtime of your RDK rule have to be set to python3.6-lib in the RDK to provide you the Rule template.</p>\n<ul>\n<li>For periodic trigger:</li>\n</ul>\n<pre>rdk create YOUR_RULE_NAME --runtime python3.6-lib --maximum-frequency TwentyFour_Hours\n</pre>\n<ul>\n<li>For configuration change trigger (for example S3 Bucket)</li>\n</ul>\n<pre>rdk create YOUR_RULE_NAME --runtime python3.6-lib --resource-types AWS::S3::Bucket\n</pre>\n<blockquote>\nNote: you need to install the RDK (see <a href=\"https://github.com/awslabs/aws-config-rdk#getting-started\" rel=\"nofollow\">https://github.com/awslabs/aws-config-rdk#getting-started</a>)</blockquote>\n</div>\n<div id=\"deploy-your-rule-with-rdklib-layer\">\n<h3>Deploy your rule with RDKlib layer</h3>\n<p>RDKLib is designed to work as a AWS Lambda Layer. It allows you to use the library without needing to include it in your deployment package.</p>\n<ol>\n<li>Install RDKlib layer (with AWS CLI)</li>\n</ol>\n<pre>aws serverlessrepo create-cloud-formation-change-set --application-id arn:aws:serverlessrepo:ap-southeast-1:711761543063:applications/rdklib --stack-name RDKlib-Layer\n\n# Copy/paste the full change-set ARN to customize the following command\naws cloudformation execute-change-set --change-set-name NAME_OF_THE_CHANGE_SET\n\naws cloudformation describe-stack-resources --stack-name serverlessrepo-RDKlib-Layer\n# Copy the ARN of the Lambda layer in the \"PhysicalResourceId\" key (i.e. arn:aws:lambda:YOUR_REGION:YOUR_ACCOUNT:layer:rdklib-layer:1).\n</pre>\n<blockquote>\nNote: You can do the same step manually going to <a href=\"https://console.aws.amazon.com/lambda/home#/create/function?tab=serverlessApps\" rel=\"nofollow\">https://console.aws.amazon.com/lambda/home#/create/function?tab=serverlessApps</a> and find \u201crdklib\u201d</blockquote>\n<ol>\n<li>Deploy the rule</li>\n</ol>\n<pre>rdk deploy YOUR_RULE_NAME --rdklib-layer-arn YOUR_RDKLIB_LAYER_ARN\n</pre>\n</div>\n</div>\n<div id=\"dev-guide\">\n<h2>Dev Guide</h2>\n<div id=\"class-clientfactory\">\n<h3><em>class</em> <strong>ClientFactory</strong></h3>\n<dl>\n<dt><em>method</em> <strong>build_client()</strong></dt>\n<dd><p>Create or reuse a boto3 client. It minimizes the number of STS calls by reusing existing client, if already available.</p>\n<p><strong>Request Syntax</strong></p>\n<pre><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">client_factory</span><span class=\"o\">.</span><span class=\"n\">build_client</span><span class=\"p\">(</span>\n    <span class=\"n\">service</span><span class=\"o\">=</span><span class=\"s1\">'string'</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Parameter</strong></p>\n<ul>\n<li><p><strong>service</strong> <em>(string)</em> \u2013 <strong>[REQUIRED]</strong></p>\n<p>The boto3 name of the AWS service</p>\n</li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"class-configrule\">\n<h3><em>class</em> <strong>ConfigRule</strong></h3>\n<dl>\n<dt><em>method</em> <strong>evaluate_parameters()</strong></dt>\n<dd><p>Used to analyze the validity of the input parameters of the Config Rule.</p>\n<p><strong>Parameter</strong></p>\n<ul>\n<li><p><strong>rule_parameters</strong> <em>(dict)</em></p>\n<p>The input parameters of the Config Rule.</p>\n</li>\n</ul>\n<dl>\n<dt><strong>Return Syntax</strong></dt>\n<dd><p>If one of the parameters is invalid, raise an InvalidParametersError error.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rdklib</span> <span class=\"kn\">import</span> <span class=\"n\">InvalidParametersError</span>\n<span class=\"k\">raise</span> <span class=\"n\">InvalidParametersError</span><span class=\"p\">(</span><span class=\"s2\">\"Error message to display\"</span><span class=\"p\">)</span>\n</pre>\n<p>If the parameters are all valid, return a dict.</p>\n<pre><span class=\"k\">return</span> <span class=\"n\">valid_rule_parameters</span>\n</pre>\n</dd>\n</dl>\n</dd>\n<dt><em>method</em> <strong>evaluate_change()</strong></dt>\n<dd><p>Used to evaluate Configuration Change triggered rule.</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><p><strong>event</strong></p>\n<p>Lambda event provided by Config.</p>\n</li>\n<li><p><strong>client_factory</strong> <em>(ClientFactory)</em></p>\n<p><em>ClientFactory</em> object to be used in this rule.</p>\n</li>\n<li><p><strong>configuration_item</strong> <em>(dict)</em></p>\n<p>The full configuration Item, even if oversized.</p>\n</li>\n<li><p><strong>valid_rule_parameters</strong> <em>(dict)</em></p>\n<p>The output of the evaluate_parameters() method.</p>\n</li>\n</ul>\n<dl>\n<dt><strong>Return Syntax</strong></dt>\n<dd><p>Return an list of <em>Evaluation</em> object(s).</p>\n<pre><span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">Evaluation</span><span class=\"p\">()]</span>\n</pre>\n<p>It can be an empty list, if no evaluation.</p>\n</dd>\n</dl>\n</dd>\n<dt><em>method</em> <strong>evaluate_periodic()</strong></dt>\n<dd><p>Used to evaluate Periodic triggered rule.</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><p><strong>event</strong></p>\n<p>Lambda event provided by Config.</p>\n</li>\n<li><p><strong>client_factory</strong> <em>(ClientFactory)</em></p>\n<p><em>ClientFactory</em> object to be used in this rule.</p>\n</li>\n<li><p><strong>valid_rule_parameters</strong> <em>(dict)</em></p>\n<p>The output of the evaluate_parameters() method.</p>\n</li>\n</ul>\n<dl>\n<dt><strong>Return Syntax</strong></dt>\n<dd><p>Return an list of <em>Evaluation</em> object(s).</p>\n<pre><span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">Evaluation</span><span class=\"p\">()]</span>\n</pre>\n<p>It can be an empty list, if no evaluation.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</div>\n<div id=\"class-evaluation\">\n<h3><em>class</em> <strong>Evaluation</strong></h3>\n<p>Class for the <em>Evaluation</em> object.</p>\n<p><strong>Request Syntax</strong></p>\n<pre><span class=\"n\">evaluation</span> <span class=\"o\">=</span> <span class=\"n\">Evaluation</span><span class=\"p\">(</span>\n    <span class=\"n\">complianceType</span><span class=\"o\">=</span><span class=\"s1\">'ComplianceType'</span><span class=\"p\">,</span>\n    <span class=\"n\">resourceId</span><span class=\"o\">=</span><span class=\"s1\">'string'</span><span class=\"p\">,</span>\n    <span class=\"n\">resourceType</span><span class=\"o\">=</span><span class=\"s1\">'string'</span><span class=\"p\">,</span>\n    <span class=\"n\">annotation</span><span class=\"o\">=</span><span class=\"s1\">'string'</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Parameter</strong></p>\n<ul>\n<li><p><strong>complianceType</strong> <em>(ComplianceType)</em> <strong>[REQUIRED]</strong></p>\n<p>Compliance type of the evaluation.</p>\n</li>\n<li><p><strong>resourceId</strong> <em>(string)</em></p>\n<p>Resource id of the evaluation. It gets autopopulated for Configuration Change triggered rule.</p>\n</li>\n<li><p><strong>resourceType</strong> <em>(string)</em></p>\n<p>Resource type of the evaluation (as per AWS CloudFormation definition). It gets autopopulated for Configuration Change triggered rule.</p>\n</li>\n<li><p><strong>annotation</strong> <em>(string)</em></p>\n<p>Annotation for the evaluation. It gets shorten to 255 characters automatically.</p>\n</li>\n</ul>\n</div>\n<div id=\"class-compliancetype\">\n<h3><em>class</em> <strong>ComplianceType</strong></h3>\n<p>Class for the <em>ComplianceType</em> object.</p>\n<p><strong>Request Syntax</strong></p>\n<p>Evaluation will display as \u201cCompliant\u201d</p>\n<pre><span class=\"n\">compliance_type</span> <span class=\"o\">=</span> <span class=\"n\">ComplianceType</span><span class=\"o\">.</span><span class=\"n\">COMPLIANT</span>\n</pre>\n<p>Evaluation will display as \u201cNon Compliant\u201d</p>\n<pre><span class=\"n\">compliance_type</span> <span class=\"o\">=</span> <span class=\"n\">ComplianceType</span><span class=\"o\">.</span><span class=\"n\">NON_COMPLIANT</span>\n</pre>\n<p>Evaluation will not display:</p>\n<pre><span class=\"n\">compliance_type</span> <span class=\"o\">=</span> <span class=\"n\">ComplianceType</span><span class=\"o\">.</span><span class=\"n\">NOT_APPLICABLE</span>\n</pre>\n</div>\n<div id=\"helper-functions-rdklibtest\">\n<h3><em>Helper functions</em> <strong>rdklibtest</strong></h3>\n<dl>\n<dt><em>assert_successful_evaluation(**kwargs)</em></dt>\n<dd><p>Do a comparaison on the list of <em>Evalation</em> objects returned by either <em>evaluate_change()</em> or <em>evaluate_periodic()</em>.</p>\n<p><strong>Request Syntax</strong></p>\n<pre><span class=\"n\">rdklibtest</span><span class=\"o\">.</span><span class=\"n\">assert_successful_evaluation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">resp_expected</span><span class=\"p\">,</span> <span class=\"n\">evaluations_count</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<dl>\n<dt><strong>Parameters</strong></dt>\n<dd><dl>\n<dt>response (list of Evaluation Objects) <strong>[REQUIRED]</strong></dt>\n<dd>the list of the response from <em>evaluate_change()</em> or <em>evaluate_periodic()</em></dd>\n<dt>resp_expected (list of Evaluation Objects) <strong>[REQUIRED]</strong></dt>\n<dd>the list of the expected response from <em>evaluate_change()</em> or <em>evaluate_periodic()</em></dd>\n<dt>evaluations_count (int)</dt>\n<dd>The number of Evaluation Objects expected. Default is 1.</dd>\n</dl>\n</dd>\n<dt><strong>Return</strong></dt>\n<dd>None</dd>\n</dl>\n</dd>\n<dt><em>create_test_configurationchange_event(**kwargs)</em></dt>\n<dd><p>Generate a dummy configuration change event that can be used as input when testing <em>evaluate_change()</em></p>\n<p><strong>Request Syntax</strong></p>\n<pre><span class=\"n\">rdklibtest</span><span class=\"o\">.</span><span class=\"n\">create_test_configurationchange_event</span><span class=\"p\">(</span><span class=\"n\">invoking_event_json</span><span class=\"p\">,</span> <span class=\"n\">rule_parameters_json</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<dl>\n<dt>Parameters</dt>\n<dd><dl>\n<dt>invoking_event (dict) <strong>[REQUIRED]</strong></dt>\n<dd>the invoking event json from Config</dd>\n<dt>rule_parameters_json (dict)</dt>\n<dd>the key/value pair(s) for the Rule parameters. Default to None.</dd>\n</dl>\n</dd>\n</dl>\n<p><strong>Return Syntax</strong></p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s2\">\"configRuleName\"</span><span class=\"p\">:</span><span class=\"s2\">\"myrule\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"executionRoleArn\"</span><span class=\"p\">:</span><span class=\"s2\">\"arn:aws:iam::123456789012:role/example\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"eventLeftScope\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"invokingEvent\"</span><span class=\"p\">:</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">invoking_event_json</span><span class=\"p\">),</span>\n    <span class=\"s2\">\"accountId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"123456789012\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"configRuleArn\"</span><span class=\"p\">:</span> <span class=\"s2\">\"arn:aws:config:us-east-1:123456789012:config-rule/config-rule-8fngan\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"resultToken\"</span><span class=\"p\">:</span><span class=\"s2\">\"token\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"ruleParameters\"</span><span class=\"p\">:</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">rule_parameters_json</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre>\n</dd>\n<dt><em>create_test_scheduled_event(**kwargs)</em></dt>\n<dd><p>Generate a dummy periodic event that can be used as input when testing <em>evaluate_periodic()</em></p>\n<p><strong>Request Syntax</strong></p>\n<pre><span class=\"n\">rdklibtest</span><span class=\"o\">.</span><span class=\"n\">create_test_scheduled_event</span><span class=\"p\">(</span><span class=\"n\">rule_parameters_json</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<dl>\n<dt><strong>Parameter</strong></dt>\n<dd><dl>\n<dt>rule_parameters_json (dict)</dt>\n<dd>the key/value pair(s) for the Rule parameters. Default to None.</dd>\n</dl>\n</dd>\n</dl>\n<p><strong>Return Syntax</strong></p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s2\">\"configRuleName\"</span><span class=\"p\">:</span><span class=\"s2\">\"myrule\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"executionRoleArn\"</span><span class=\"p\">:</span><span class=\"s2\">\"arn:aws:iam::123456789012:role/example\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"eventLeftScope\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"invokingEvent\"</span><span class=\"p\">:</span> <span class=\"s2\">\"{</span><span class=\"se\">\\\"</span><span class=\"s2\">messageType</span><span class=\"se\">\\\"</span><span class=\"s2\">: </span><span class=\"se\">\\\"</span><span class=\"s2\">ScheduledNotification</span><span class=\"se\">\\\"</span><span class=\"s2\">, </span><span class=\"se\">\\\"</span><span class=\"s2\">notificationCreationTime</span><span class=\"se\">\\\"</span><span class=\"s2\">: </span><span class=\"se\">\\\"</span><span class=\"s2\">2017-12-23T22:11:18.158Z</span><span class=\"se\">\\\"</span><span class=\"s2\">}\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"accountId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"123456789012\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"configRuleArn\"</span><span class=\"p\">:</span> <span class=\"s2\">\"arn:aws:config:us-east-1:123456789012:config-rule/config-rule-8fngan\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"resultToken\"</span><span class=\"p\">:</span><span class=\"s2\">\"token\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"ruleParameters\"</span><span class=\"p\">:</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">rule_parameters_json</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre>\n</dd>\n</dl>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This project is licensed under the Apache-2.0 License.</p>\n</div>\n<div id=\"feedback-questions\">\n<h2>Feedback / Questions</h2>\n<p>Feel free to email <a href=\"mailto:rdk-maintainers%40amazon.com\">rdk-maintainers<span>@</span>amazon<span>.</span>com</a></p>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<ul>\n<li><strong>Jonathan Rault</strong> - <em>Maintainer, design, code, testing, feedback</em></li>\n<li><strong>Ricky Chau</strong> - <em>Maintainer, code, testing</em></li>\n<li><strong>Michael Borchert</strong> - <em>Design, code, testing, feedback</em></li>\n<li><strong>Joe Lee</strong> - <em>Design, feedback</em></li>\n<li><strong>Chris Gutierrez</strong> - <em>Design, feedback</em></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6974268, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "2566ede77e0532d8bd97ec5f1ed5f88a", "sha256": "4b5f235240ce7954fea75b997ab333072c0f266d2c24daefda541d8e0d9c00d1"}, "downloads": -1, "filename": "rdklib-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2566ede77e0532d8bd97ec5f1ed5f88a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19216, "upload_time": "2020-03-03T23:31:45", "upload_time_iso_8601": "2020-03-03T23:31:45.815671Z", "url": "https://files.pythonhosted.org/packages/05/a4/7813afea30ec4c81de300ef3fb80c0aea8db99ffa1bb4e57c7955e7731c9/rdklib-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "57f73104a583582f10e4314a30da0b1c", "sha256": "fe233d180a66dba0899caa816c8a6b821e75186e0581849a538c2404816820c3"}, "downloads": -1, "filename": "rdklib-0.0.2.tar.gz", "has_sig": false, "md5_digest": "57f73104a583582f10e4314a30da0b1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11933, "upload_time": "2020-03-03T23:31:48", "upload_time_iso_8601": "2020-03-03T23:31:48.264058Z", "url": "https://files.pythonhosted.org/packages/c3/9b/2a36bc156430ae977d3012242ccf924646a585460efb97b5b4033e8391c7/rdklib-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "05238f04e566110429c1c4427eb7fc97", "sha256": "de83a02b99c6e8bf0252f0729fa8715604b10e2c9491bd3ac642c682309dd5f5"}, "downloads": -1, "filename": "rdklib-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "05238f04e566110429c1c4427eb7fc97", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32315, "upload_time": "2020-04-08T00:48:00", "upload_time_iso_8601": "2020-04-08T00:48:00.398999Z", "url": "https://files.pythonhosted.org/packages/4b/58/cac8056a7297b742a08d6cdfab458b4a13c8a04a445493582edfe8a7ce11/rdklib-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cccb9e2e394d06669aaae4a93ba20c62", "sha256": "fb15c67281a4cf4899bf8235b4dd41efbd1901d05a422e5d7ec918bb53cd54f6"}, "downloads": -1, "filename": "rdklib-0.1.0.tar.gz", "has_sig": false, "md5_digest": "cccb9e2e394d06669aaae4a93ba20c62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13916, "upload_time": "2020-04-08T00:48:02", "upload_time_iso_8601": "2020-04-08T00:48:02.019698Z", "url": "https://files.pythonhosted.org/packages/be/f2/40893c918446061f91e1f3fd1289d7b6a71fc3f4865ed317b6d74204514b/rdklib-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "05238f04e566110429c1c4427eb7fc97", "sha256": "de83a02b99c6e8bf0252f0729fa8715604b10e2c9491bd3ac642c682309dd5f5"}, "downloads": -1, "filename": "rdklib-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "05238f04e566110429c1c4427eb7fc97", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32315, "upload_time": "2020-04-08T00:48:00", "upload_time_iso_8601": "2020-04-08T00:48:00.398999Z", "url": "https://files.pythonhosted.org/packages/4b/58/cac8056a7297b742a08d6cdfab458b4a13c8a04a445493582edfe8a7ce11/rdklib-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cccb9e2e394d06669aaae4a93ba20c62", "sha256": "fb15c67281a4cf4899bf8235b4dd41efbd1901d05a422e5d7ec918bb53cd54f6"}, "downloads": -1, "filename": "rdklib-0.1.0.tar.gz", "has_sig": false, "md5_digest": "cccb9e2e394d06669aaae4a93ba20c62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13916, "upload_time": "2020-04-08T00:48:02", "upload_time_iso_8601": "2020-04-08T00:48:02.019698Z", "url": "https://files.pythonhosted.org/packages/be/f2/40893c918446061f91e1f3fd1289d7b6a71fc3f4865ed317b6d74204514b/rdklib-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:36 2020"}