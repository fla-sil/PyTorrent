{"info": {"author": "Paul Greenberg", "author_email": "paul@greenberg.pro", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.0", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Security", "Topic :: Software Development", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing", "Topic :: Software Development :: User Interfaces"], "description": "=======\nPyIdGen\n=======\n\nOverview\n--------\n\nThis library is used to generate random user profiles with Personally\nIdentifiable Information (PII).\n\n``tests/test.py`` script generates user identities in the following way:\n\n::\n\n    $ python3 tests/test.py\n\nThe script generates random Personally Identifiable Information (PII):\n\n::\n\n    Personal Information:\n            First Name:     Vickey\n            Middle Name:    Kasi\n            Last Name:      Macbeth\n            Middle Initial: K.\n            Full Name:      Vickey Macbeth\n            Age:            67\n            DOB:            10/05/1946\n            Sex:            Female\n            Height:         4'1\"\n            Hair Color:     WHI\n            Eye Color:      BLK\n\n    Postal Address:\n            7648 Gilgorm Road\n            New York, NY 10005\n\n    SSN# 529-80-2145, issued in UT\n\n    Driver's License Information:\n            ID:       865 244 023\n            State:    NY\n            Class:    D\n            Issued:   01/01/1970\n            Expires:  12/12/2018\n\n    Computer Account Information:\n            User ID:           macbevi5\n            E-mail Address:    vickey.macbeth@ymail.com\n            Password (clear):  L1XiNGv%\n            Password (md5):    eaa14653852fe8ab0f18483d0bfdba26\n            Password (sha1):   ab6b86e59f1ea4fabf0a9bd744e57107d892becb\n            Password (sha512): 5a935814572e8c940a0359f3b1e7538e20bb45deb4a7ce747c43c4e0fcefda\n                           40b302a0eb444feb85bc35737d90aab8fd1149e5ebe5450893d7ff63c77456ab28\n\n    Contact Information:\n            Phone Number: (563) 035-3637\n                    Type:       VoIP\n                    State:      IA\n                    Identifier: Business\n            Phone Number: (515) 457-4100\n                    Type:       Cellular\n                    State:      IA\n                    Identifier: Business\n            Phone Number: 712.288.9759\n                    Type:       Cellular\n                    State:      IA\n                    Identifier: Home\n            Phone Number: (319) 411-4461\n                    Type:       Cellular\n                    State:      IA\n                    Identifier: Fax\n\n    Credit Cards:\n            Number: 4485 4270 6121 5902\n                    Issuer:   Visa\n                    Code:     020 (CCV2)\n                    Expires : 12/2017\n            Number: 4485 4270 6121 5902\n                    Issuer:   Visa\n                    Code:     020 (CCV2)\n                    Expires : 12/2017\n            Number: 4485 4270 6121 5902\n                    Issuer:   Visa\n                    Code:     020 (CCV2)\n                    Expires : 12/2017\n            Number: 4485 4270 6121 5902\n                    Issuer:   Visa\n                    Code:     020 (CCV2)\n                    Expires : 12/2017\n\nClasses\n-------\n\nPostalAddress\n~~~~~~~~~~~~~\n\nA developer may generate a random U.S. postal address, or may choose to\nspecify extra parameters, e.g. state, city, county, or zipcode. However,\nthe street address in ``PostalAddress()`` class will unlikely match a\nreal address from that zipcode or city, because the address generation\ndoes not rely on a geo-location service of any kind.\n\n::\n\n    from pyidgen import PostalAddress;\n    from string import Template;\n\n    def main():\n        a = PostalAddress();\n        if a.Address2 == '':\n            template = \"{0}\\n{2}, {3} {4}\";\n        else:\n            template = \"{0}\\n{1}\\n{2}, {3} {4}\";\n        print(template.format(a.Address1, a.Address2, a.City, a.State, a.ZipCode));\n\n    if __name__ == '__main__':\n        main();\n\nThere are a few ways to create ``PostalAddress()`` object:\n\n::\n\n    a = PostalAddress();\n    a = PostalAddress(zip=\"11364\");\n    a = PostalAddress(county=\"Queens\");\n    a = PostalAddress(county=\"Queens\",zip=\"11363\");\n    a = PostalAddress(state=\"NY\");\n    a = PostalAddress(\"11364\");\n    a = PostalAddress(\"11364\", None, \"Queens\", \"NY\");\n    a = PostalAddress(None, None, \"Queens\", None);\n    a = PostalAddress(None, None, None, \"NY\");\n\nThe expected output is:\n\n::\n\n    9205 Shadow Lake Dr\n    Oakland Gardens, NY 11364\n\n    4957 Robert J Miller Air Park\n    Oakland Gardens, NY 11364\n\n    4485 Greenhill Dr\n    Suite 919\n    Truxton, NY 13158\n\n    8731 County Route 17/2\n    Arverne, NY 11692\n\n    8463 Westmont Rd\n    Jamaica, NY 11451", "description_content_type": null, "docs_url": null, "download_url": "http://pypi.python.org/packages/source/P/PyIdGen/PyIdGen-1.2.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/greenpau/PyIdGen", "keywords": null, "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "PyIdGen", "package_url": "https://pypi.org/project/PyIdGen/", "platform": "any", "project_url": "https://pypi.org/project/PyIdGen/", "project_urls": {"Download": "http://pypi.python.org/packages/source/P/PyIdGen/PyIdGen-1.2.tar.gz", "Homepage": "https://github.com/greenpau/PyIdGen"}, "release_url": "https://pypi.org/project/PyIdGen/1.2/", "requires_dist": null, "requires_python": null, "summary": "User Profile Generation Library for Quality Assurance and Information Security Testing", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>This library is used to generate random user profiles with Personally\nIdentifiable Information (PII).</p>\n<p><tt>tests/test.py</tt> script generates user identities in the following way:</p>\n<pre>$ python3 tests/test.py\n</pre>\n<p>The script generates random Personally Identifiable Information (PII):</p>\n<pre>Personal Information:\n        First Name:     Vickey\n        Middle Name:    Kasi\n        Last Name:      Macbeth\n        Middle Initial: K.\n        Full Name:      Vickey Macbeth\n        Age:            67\n        DOB:            10/05/1946\n        Sex:            Female\n        Height:         4'1\"\n        Hair Color:     WHI\n        Eye Color:      BLK\n\nPostal Address:\n        7648 Gilgorm Road\n        New York, NY 10005\n\nSSN# 529-80-2145, issued in UT\n\nDriver's License Information:\n        ID:       865 244 023\n        State:    NY\n        Class:    D\n        Issued:   01/01/1970\n        Expires:  12/12/2018\n\nComputer Account Information:\n        User ID:           macbevi5\n        E-mail Address:    vickey.macbeth@ymail.com\n        Password (clear):  L1XiNGv%\n        Password (md5):    eaa14653852fe8ab0f18483d0bfdba26\n        Password (sha1):   ab6b86e59f1ea4fabf0a9bd744e57107d892becb\n        Password (sha512): 5a935814572e8c940a0359f3b1e7538e20bb45deb4a7ce747c43c4e0fcefda\n                       40b302a0eb444feb85bc35737d90aab8fd1149e5ebe5450893d7ff63c77456ab28\n\nContact Information:\n        Phone Number: (563) 035-3637\n                Type:       VoIP\n                State:      IA\n                Identifier: Business\n        Phone Number: (515) 457-4100\n                Type:       Cellular\n                State:      IA\n                Identifier: Business\n        Phone Number: 712.288.9759\n                Type:       Cellular\n                State:      IA\n                Identifier: Home\n        Phone Number: (319) 411-4461\n                Type:       Cellular\n                State:      IA\n                Identifier: Fax\n\nCredit Cards:\n        Number: 4485 4270 6121 5902\n                Issuer:   Visa\n                Code:     020 (CCV2)\n                Expires : 12/2017\n        Number: 4485 4270 6121 5902\n                Issuer:   Visa\n                Code:     020 (CCV2)\n                Expires : 12/2017\n        Number: 4485 4270 6121 5902\n                Issuer:   Visa\n                Code:     020 (CCV2)\n                Expires : 12/2017\n        Number: 4485 4270 6121 5902\n                Issuer:   Visa\n                Code:     020 (CCV2)\n                Expires : 12/2017\n</pre>\n</div>\n<div id=\"classes\">\n<h2>Classes</h2>\n<h2 id=\"postaladdress\"><span class=\"section-subtitle\">PostalAddress</span></h2>\n<p>A developer may generate a random U.S. postal address, or may choose to\nspecify extra parameters, e.g. state, city, county, or zipcode. However,\nthe street address in <tt>PostalAddress()</tt> class will unlikely match a\nreal address from that zipcode or city, because the address generation\ndoes not rely on a geo-location service of any kind.</p>\n<pre>from pyidgen import PostalAddress;\nfrom string import Template;\n\ndef main():\n    a = PostalAddress();\n    if a.Address2 == '':\n        template = \"{0}\\n{2}, {3} {4}\";\n    else:\n        template = \"{0}\\n{1}\\n{2}, {3} {4}\";\n    print(template.format(a.Address1, a.Address2, a.City, a.State, a.ZipCode));\n\nif __name__ == '__main__':\n    main();\n</pre>\n<p>There are a few ways to create <tt>PostalAddress()</tt> object:</p>\n<pre>a = PostalAddress();\na = PostalAddress(zip=\"11364\");\na = PostalAddress(county=\"Queens\");\na = PostalAddress(county=\"Queens\",zip=\"11363\");\na = PostalAddress(state=\"NY\");\na = PostalAddress(\"11364\");\na = PostalAddress(\"11364\", None, \"Queens\", \"NY\");\na = PostalAddress(None, None, \"Queens\", None);\na = PostalAddress(None, None, None, \"NY\");\n</pre>\n<p>The expected output is:</p>\n<pre>9205 Shadow Lake Dr\nOakland Gardens, NY 11364\n\n4957 Robert J Miller Air Park\nOakland Gardens, NY 11364\n\n4485 Greenhill Dr\nSuite 919\nTruxton, NY 13158\n\n8731 County Route 17/2\nArverne, NY 11692\n\n8463 Westmont Rd\nJamaica, NY 11451\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1367758, "releases": {"1.0.0": [], "1.0.1": [{"comment_text": "", "digests": {"md5": "373a7d66b5c4db054469891c16755e2f", "sha256": "3ff4ccedd927d8bf9a29ed8e1799baf21ab1783b61398877e9926e21bc29bbc6"}, "downloads": -1, "filename": "PyIdGen-1.0.1.tar.gz", "has_sig": false, "md5_digest": "373a7d66b5c4db054469891c16755e2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 393020, "upload_time": "2013-03-17T01:09:08", "upload_time_iso_8601": "2013-03-17T01:09:08.261496Z", "url": "https://files.pythonhosted.org/packages/54/9c/981eb0bc559dd1b664feb83cd2fa01866aab036a8773575e0a439d28d7d3/PyIdGen-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "0e8f4c0ac7a9d5d1ed32e52f66f6857d", "sha256": "a8cb4b0e25df1cce187d986bf32f1ecf0446991cbab2ccf8188b4d318aa89c13"}, "downloads": -1, "filename": "PyIdGen-1.0.2.tar.gz", "has_sig": false, "md5_digest": "0e8f4c0ac7a9d5d1ed32e52f66f6857d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 393041, "upload_time": "2013-03-17T01:37:27", "upload_time_iso_8601": "2013-03-17T01:37:27.175956Z", "url": "https://files.pythonhosted.org/packages/b2/cd/b33895222ce5a6b048ce1cefcf8f3eb4a0b1b192f5134566e8e3ba7a6357/PyIdGen-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "b87ae76a2ceaf63d919d6876b70ed531", "sha256": "6e71c819f1c9d13ace027d3a01cd5fd04e6a0541a0cbd111f6174a9ba64ed510"}, "downloads": -1, "filename": "PyIdGen-1.0.3.tar.gz", "has_sig": false, "md5_digest": "b87ae76a2ceaf63d919d6876b70ed531", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1057145, "upload_time": "2013-11-10T00:44:58", "upload_time_iso_8601": "2013-11-10T00:44:58.947810Z", "url": "https://files.pythonhosted.org/packages/cb/61/e3fec17d7589f69f675bd4c451567b0ffb001ddd97e6616cc5109984c1e5/PyIdGen-1.0.3.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "6b3c52d82ba882732b234a1232e358f6", "sha256": "b4d27762303bb45b46be2e7633a9f9161e64295abb041127786ab9ce1723b5ea"}, "downloads": -1, "filename": "PyIdGen-1.1.tar.gz", "has_sig": false, "md5_digest": "6b3c52d82ba882732b234a1232e358f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1060970, "upload_time": "2015-01-02T03:00:37", "upload_time_iso_8601": "2015-01-02T03:00:37.836056Z", "url": "https://files.pythonhosted.org/packages/9a/8e/1eec4ab1c8edf05565c399b6a3e0188f9de718c64f675cf86a135a77c9ae/PyIdGen-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "e64e233b44f28210b74dd603fde195b5", "sha256": "ca43f075d96da30f9ba4f5806ac796e020f3c80de3f69fa23ba585d5e7f0141e"}, "downloads": -1, "filename": "PyIdGen-1.2.tar.gz", "has_sig": false, "md5_digest": "e64e233b44f28210b74dd603fde195b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1060968, "upload_time": "2015-01-02T03:12:05", "upload_time_iso_8601": "2015-01-02T03:12:05.421879Z", "url": "https://files.pythonhosted.org/packages/f5/3b/fd689529b4253322073b44c83911f5120c43b94436021e5dff3f4da74545/PyIdGen-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e64e233b44f28210b74dd603fde195b5", "sha256": "ca43f075d96da30f9ba4f5806ac796e020f3c80de3f69fa23ba585d5e7f0141e"}, "downloads": -1, "filename": "PyIdGen-1.2.tar.gz", "has_sig": false, "md5_digest": "e64e233b44f28210b74dd603fde195b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1060968, "upload_time": "2015-01-02T03:12:05", "upload_time_iso_8601": "2015-01-02T03:12:05.421879Z", "url": "https://files.pythonhosted.org/packages/f5/3b/fd689529b4253322073b44c83911f5120c43b94436021e5dff3f4da74545/PyIdGen-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:09 2020"}