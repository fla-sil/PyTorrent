{"info": {"author": "Sean Reifschneider", "author_email": "<jafo@tummy.com>", "bugtrack_url": null, "classifiers": [], "description": "ineedpy2: Library to swap to newer python version on a multi-version system.\n============================================================================\n\nFind the latest Python 2 version installed on the system and if this\nprogram is not running on that version, re-invoke it with that version.\n\nBackground\n----------\n\nOne of the problems of a system administrator is that enterprise Linux distros\nwhich ship with, and often require, /usr/bin/python to be a fairly old versions.\nFor example, Python 2.1.  Applications can be very difficult to write such that\nthey are happy on Python 2.1 and Python 2.7.  Many of these distros include a\nnewer Python, but it has to be invoked as \"python2.6\", for example.\n\nYou can change the \"#!\" line in the script, but this makes packaging\nmore difficult.\n\nExamples\n--------\n\nTo make sure you are running on the absolutely latest installed Python 2 on\nthe system:\n\n    import sys\n    print 'Version:', sys.version_info\n    import ineedpy2\n    ineedpy2.rerunonlatest()\n\nIf run on a system with the default Python version being 2.1, but python\n2.6 also installed will display:\n\n    Version: (2, 1, 3, 'final', 0)\n    Version: (2, 6, 5, 'final', 0)\n\nNOTE: Anything run before the \"runonlatestpy2\" will be run once on the\nolder version and once on the newer version.\n\nYou can also request the reinvocation only if the python minor version\nisn't at least a specific value.  In other words, \"I know I need at least\nPython 2.4\":\n\n    from ineedpy2 import requireminor\n    requireminor(4)\n\nLicense\n-------\n\nCopyright (c) 2011, Sean Reifschneider <jafo@tummy.com>, tummy.com, ltd.  \nReleased under the Python Software Foundation License  \nFor more information, see: http://docs.python.org/license.html", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/linsomniac/ineedpy2", "keywords": null, "license": "Python Software Foundation", "maintainer": null, "maintainer_email": null, "name": "ineedpy2", "package_url": "https://pypi.org/project/ineedpy2/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ineedpy2/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/linsomniac/ineedpy2"}, "release_url": "https://pypi.org/project/ineedpy2/1.01/", "requires_dist": null, "requires_python": null, "summary": "Library to swap to newer python version on a multi-version system.", "version": "1.01", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Find the latest Python 2 version installed on the system and if this\nprogram is not running on that version, re-invoke it with that version.</p>\n<div id=\"background\">\n<h2>Background</h2>\n<p>One of the problems of a system administrator is that enterprise Linux distros\nwhich ship with, and often require, /usr/bin/python to be a fairly old versions.\nFor example, Python 2.1.  Applications can be very difficult to write such that\nthey are happy on Python 2.1 and Python 2.7.  Many of these distros include a\nnewer Python, but it has to be invoked as \u201cpython2.6\u201d, for example.</p>\n<p>You can change the \u201c#!\u201d line in the script, but this makes packaging\nmore difficult.</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>To make sure you are running on the absolutely latest installed Python 2 on\nthe system:</p>\n<blockquote>\nimport sys\nprint \u2018Version:\u2019, sys.version_info\nimport ineedpy2\nineedpy2.rerunonlatest()</blockquote>\n<p>If run on a system with the default Python version being 2.1, but python\n2.6 also installed will display:</p>\n<blockquote>\nVersion: (2, 1, 3, \u2018final\u2019, 0)\nVersion: (2, 6, 5, \u2018final\u2019, 0)</blockquote>\n<p>NOTE: Anything run before the \u201crunonlatestpy2\u201d will be run once on the\nolder version and once on the newer version.</p>\n<p>You can also request the reinvocation only if the python minor version\nisn\u2019t at least a specific value.  In other words, \u201cI know I need at least\nPython 2.4\u201d:</p>\n<blockquote>\nfrom ineedpy2 import requireminor\nrequireminor(4)</blockquote>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright (c) 2011, Sean Reifschneider &lt;<a href=\"mailto:jafo%40tummy.com\">jafo<span>@</span>tummy<span>.</span>com</a>&gt;, tummy.com, ltd.\nReleased under the Python Software Foundation License\nFor more information, see: <a href=\"http://docs.python.org/license.html\" rel=\"nofollow\">http://docs.python.org/license.html</a></p>\n</div>\n\n          </div>"}, "last_serial": 793267, "releases": {"1.01": [{"comment_text": "", "digests": {"md5": "d9f5e775a5a54a718a285bd85bb33e2d", "sha256": "70dfcc3373fb32044295b038ef38a3bad999e7035b55888b2c6070b62043d612"}, "downloads": -1, "filename": "ineedpy2-1.01.tar.gz", "has_sig": false, "md5_digest": "d9f5e775a5a54a718a285bd85bb33e2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2342, "upload_time": "2011-11-16T02:39:46", "upload_time_iso_8601": "2011-11-16T02:39:46.960473Z", "url": "https://files.pythonhosted.org/packages/5a/c1/4da9e2e8688e5b2b835a0c4d8d5d71a9fb4bc58a890a30743ae836fff59a/ineedpy2-1.01.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d9f5e775a5a54a718a285bd85bb33e2d", "sha256": "70dfcc3373fb32044295b038ef38a3bad999e7035b55888b2c6070b62043d612"}, "downloads": -1, "filename": "ineedpy2-1.01.tar.gz", "has_sig": false, "md5_digest": "d9f5e775a5a54a718a285bd85bb33e2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2342, "upload_time": "2011-11-16T02:39:46", "upload_time_iso_8601": "2011-11-16T02:39:46.960473Z", "url": "https://files.pythonhosted.org/packages/5a/c1/4da9e2e8688e5b2b835a0c4d8d5d71a9fb4bc58a890a30743ae836fff59a/ineedpy2-1.01.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:13 2020"}