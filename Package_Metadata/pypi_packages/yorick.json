{"info": {"author": "Adam Brenecki", "author_email": "adam@brenecki.id.au", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Pre-processors"], "description": "yorick: a project skeleton / template / boilerplate tool\n========================================================\n\n*Yorick is a work in progress. Many of the features described here are\nnot yet complete.* Currently, only the basics of the ``construct`` and\n``create-skeleton`` commands work.\n\nWhenever you start a programming project (or a book, or anything you do\nthat involves files on a computer), you often end up doing the same\ninitial steps, without much variation.\n\nYorick allows you to automate this by creating \"skeletons\" - templates\nthat you can \"construct\" to create a boilerplate project. In the process\nof constructing, a skeleton can prompt the user for variables (project\nname, for instance), and have those variables substituted appropriately\ninto the skeleton.\n\nA collection of skeletons for different types of projects is called a\n\"closet\". Yorick automatically gives you a default closet to keep all of\nyour own skeletons in, and the ability to add other people's closets\nalongside it. You can keep your closet to yourself or open it up to the\nworld on GitHub (a bit like dotfiles).\n\nInstallation\n------------\n\n1. You need to have Python installed. (If you're not a Python\n   programmer, don't worry, you can create and use yorick skeletons\n   without writing a single line of Python.)\n\n   -  If you use Linux or OS X, you probably already have it. Run\n      ``python --version`` to make sure it's version 2.7 - if not,\n      upgrade.\n\n2. Run ``pip install yorick``. (If you don't have ``pip``, run\n   ``easy_install pip`` first.)\n\nUsage\n-----\n\nThese are just usage examples to show you what the command line\ninterface looks like. If you want to dive in, check out the docs on\n`ReadTheDocs <https://yorick.readthedocs.org/>`_.\n\nCreate a new skeleton\n~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    $ yorick create-skeleton eggs\n    Constructing... Done.\n    You can now edit your skeleton at ~/.yorick/__default__/eggs/\n\n    $ my-favorite-editor ~/.yorick/__default__/eggs/\n\nConstruct a project from a skeleton\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    $ yorick construct eggs\n    Enter a name for your project.\n    project_name> spam\n    Constructing... Done.\n\n    $ find .\n    ./spam/\n    ./spam/__init__.py\n    ./README.md\n\n    $ cat README.md\n    # spam\n\n    Insert a readme for spam here.\n\nShare your skeletons with the world\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    $ cd ~/.yorick/__default__\n    $ git init .\n    $ git add .\n    $ git commit -m \"Initial commit\"\n    $ git origin add master https://github.com/joe/closet.git\n    $ git push -u origin master\n\nInstall closets from other people...\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    $ yorick install-closet fred https://github.com/fred/closet.git\n    Closet cloned to ~/.yorick/fred/\n\n    $ yorick update-closet fred\n    Updating... fred was already up to date.\n\n...and use their skeletons\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    $ yorick construct fred.more_eggs\n    Enter a name for your project.\n    project_name> spam\n    Constructing... Done.\n\nTo Do\n-----\n\n-  Pre- and post-construction scripts\n\n   -  In-skeleton\n   -  Global", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adambrenecki/yorick", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "yorick", "package_url": "https://pypi.org/project/yorick/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/yorick/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/adambrenecki/yorick"}, "release_url": "https://pypi.org/project/yorick/0.1pre/", "requires_dist": null, "requires_python": null, "summary": "a project skeleton / template / boilerplate tool", "version": "0.1pre", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><em>Yorick is a work in progress. Many of the features described here are\nnot yet complete.</em> Currently, only the basics of the <tt>construct</tt> and\n<tt><span class=\"pre\">create-skeleton</span></tt> commands work.</p>\n<p>Whenever you start a programming project (or a book, or anything you do\nthat involves files on a computer), you often end up doing the same\ninitial steps, without much variation.</p>\n<p>Yorick allows you to automate this by creating \u201cskeletons\u201d - templates\nthat you can \u201cconstruct\u201d to create a boilerplate project. In the process\nof constructing, a skeleton can prompt the user for variables (project\nname, for instance), and have those variables substituted appropriately\ninto the skeleton.</p>\n<p>A collection of skeletons for different types of projects is called a\n\u201ccloset\u201d. Yorick automatically gives you a default closet to keep all of\nyour own skeletons in, and the ability to add other people\u2019s closets\nalongside it. You can keep your closet to yourself or open it up to the\nworld on GitHub (a bit like dotfiles).</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li>You need to have Python installed. (If you\u2019re not a Python\nprogrammer, don\u2019t worry, you can create and use yorick skeletons\nwithout writing a single line of Python.)<ul>\n<li>If you use Linux or OS X, you probably already have it. Run\n<tt>python <span class=\"pre\">--version</span></tt> to make sure it\u2019s version 2.7 - if not,\nupgrade.</li>\n</ul>\n</li>\n<li>Run <tt>pip install yorick</tt>. (If you don\u2019t have <tt>pip</tt>, run\n<tt>easy_install pip</tt> first.)</li>\n</ol>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>These are just usage examples to show you what the command line\ninterface looks like. If you want to dive in, check out the docs on\n<a href=\"https://yorick.readthedocs.org/\" rel=\"nofollow\">ReadTheDocs</a>.</p>\n<div id=\"create-a-new-skeleton\">\n<h3>Create a new skeleton</h3>\n<pre>$ yorick create-skeleton eggs\nConstructing... Done.\nYou can now edit your skeleton at ~/.yorick/__default__/eggs/\n\n$ my-favorite-editor ~/.yorick/__default__/eggs/\n</pre>\n</div>\n<div id=\"construct-a-project-from-a-skeleton\">\n<h3>Construct a project from a skeleton</h3>\n<pre>$ yorick construct eggs\nEnter a name for your project.\nproject_name&gt; spam\nConstructing... Done.\n\n$ find .\n./spam/\n./spam/__init__.py\n./README.md\n\n$ cat README.md\n# spam\n\nInsert a readme for spam here.\n</pre>\n</div>\n<div id=\"share-your-skeletons-with-the-world\">\n<h3>Share your skeletons with the world</h3>\n<pre>$ cd ~/.yorick/__default__\n$ git init .\n$ git add .\n$ git commit -m \"Initial commit\"\n$ git origin add master https://github.com/joe/closet.git\n$ git push -u origin master\n</pre>\n</div>\n<div id=\"install-closets-from-other-people\">\n<h3>Install closets from other people\u2026</h3>\n<pre>$ yorick install-closet fred https://github.com/fred/closet.git\nCloset cloned to ~/.yorick/fred/\n\n$ yorick update-closet fred\nUpdating... fred was already up to date.\n</pre>\n</div>\n<div id=\"and-use-their-skeletons\">\n<h3>\u2026and use their skeletons</h3>\n<pre>$ yorick construct fred.more_eggs\nEnter a name for your project.\nproject_name&gt; spam\nConstructing... Done.\n</pre>\n</div>\n</div>\n<div id=\"to-do\">\n<h2>To Do</h2>\n<ul>\n<li>Pre- and post-construction scripts<ul>\n<li>In-skeleton</li>\n<li>Global</li>\n</ul>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5728853, "releases": {"0.1pre": [{"comment_text": "", "digests": {"md5": "b6db5b1fbd0fdc8535fb759371b397ac", "sha256": "3ed8827018a159ad417e376405ac5c8df44d0979349cb98e75f4d4b7379324a9"}, "downloads": -1, "filename": "yorick-0.1pre.tar.gz", "has_sig": false, "md5_digest": "b6db5b1fbd0fdc8535fb759371b397ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5277, "upload_time": "2012-11-16T23:26:47", "upload_time_iso_8601": "2012-11-16T23:26:47.037275Z", "url": "https://files.pythonhosted.org/packages/e9/de/8bc6bdcd5b1756de5218a634c62f5848d5ba715e948a0f58ecb92b69c9f5/yorick-0.1pre.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b6db5b1fbd0fdc8535fb759371b397ac", "sha256": "3ed8827018a159ad417e376405ac5c8df44d0979349cb98e75f4d4b7379324a9"}, "downloads": -1, "filename": "yorick-0.1pre.tar.gz", "has_sig": false, "md5_digest": "b6db5b1fbd0fdc8535fb759371b397ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5277, "upload_time": "2012-11-16T23:26:47", "upload_time_iso_8601": "2012-11-16T23:26:47.037275Z", "url": "https://files.pythonhosted.org/packages/e9/de/8bc6bdcd5b1756de5218a634c62f5848d5ba715e948a0f58ecb92b69c9f5/yorick-0.1pre.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:21:59 2020"}