{"info": {"author": "basis-ai.com", "author_email": "contact@basis-ai.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "[Bedrock](https://bedrock.basis-ai.com) helps data scientists own the end-to-end deployment of machine learning workflows. `bdrk` is the official client library for interacting with APIs on Bedrock platform.\n\n## Usage\n\nIn order to use `bdrk`, you need to register an account with Basis AI. Please email `contact@basis-ai.com` to get started. Once an account is created, you will be issued a personal API token that you can use to authenticate with Bedrock.\n\n### Installing Bedrock client\n\nYou can install Bedrock client library from PyPi with the following command. We recommend running it in a virtual environment to prevent potential dependency conflicts.\n\n```bash\npip install bdrk\n```\n\nNote that the client library is officially supported for python 3.7 and above.\n\n#### Installing optional dependencies\n\nThe following optional dependencies can be installed to enable additional featues.\n\nCommand line support:\n\n```bash\npip install bdrk[cli]\n```\n\nModel monitoring support:\n\n```bash\npip install bdrk[model-monitoring]\n```\n\n### Setting up your environment\n\nOnce installed, you need to add a well formed `bedrock.hcl` configuration file in your project's root directory. The configuration file specifies which script to run for training and deployment as well as their respective base Docker images. You can find an example directory layout [here](https://github.com/basisai/churn_prediction).\n\nWhen using the module locally, you may need to define the following environment variables for `bedrock_client` and lab runs to make API calls to Bedrock. These variables will be automatically set on your workload container when running in cluster.\n\n```bash\nexport BEDROCK_API_DOMAIN=https://api.bdrk.ai\nexport BEDROCK_API_TOKEN=<your personal API token>\n```\n\n### bedrock_client library\n\nThe `bedrock_client` library provides utility functions for your training runs.\n\n#### Logging training metrics\n\nYou can easily export training metrics to Bedrock by adding logging code to `train.py`. The example below demonstrates logging charts and metrics for visualisation on Bedrock platform.\n\n```python\nimport logging\n\nfrom bedrock_client.bedrock.api import BedrockApi\n\n\nlogger = logging.getLogger(__name__)\nbedrock = BedrockApi(logger)\nbedrock.log_metric(\"Accuracy\", 0.97)\nbedrock.log_chart_data([0, 1, 1], [0.1, 0.7, 0.9])\n```\n\n#### Logging feature and inference distribution\n\nYou may use the model monitoring service to save the distribution of input and model output data to a local file. The default path is `/artefact/histogram.prom` so as to bundle the computed distribution together with the model artefact it trained from. When trained on Bedrock, the zipped `/artefact` directory will be uploaded to user's blob storage bucket in the workload cluster.\n\n```python\nimport pandas as pd\nfrom bedrock_client.bedrock.metrics.service import ModelMonitoringService\nfrom sklearn.svm import SVC\n\n\n# User code to load training data\nfeatures = pd.DataFrame({'a': [1, 2, 3], 'b': [3, 2, 1]})\nmodel = SVC(probability=True)\nmodel.fit(features, [False, True, False])\ninference = model.predict_proba(features)[:, 0]\n\nModelMonitoringService.export_text(\n    features=features.iteritems(),\n    inference=inference.tolist(),\n)\n```\n\n### bdrk library\n\nThe `bdrk` library provides APIs for interacting with the Bedrock platform.\n\n```python\nfrom bdrk.v1 import ApiClient, Configuration, PipelineApi\nfrom bdrk.v1.models import (\n    PipelineResourcesSchema,\n    TrainingPipelineRunSchema,\n)\n\nconfiguration = Configuration()\nconfiguration.api_key[\"X-Bedrock-Access-Token\"] = \"MY-TOKEN\"\nconfiguration.host = \"https://api.bdrk.ai\"\n\napi_client = ApiClient(configuration)\npipeline_api = PipelineApi(api_client)\n\npipeline = pipeline_api.get_training_pipeline_by_id(pipeline_id=\"MY-PIPELINE\")\nrun_schema = TrainingPipelineRunSchema(\n    environment_public_id=\"MY-ENVIRONMENT\",\n    resources=PipelineResourcesSchema(cpu=\"500m\", memory=\"200M\"),\n    script_parameters={\"MYPARAM\": \"1.23\"},\n)\nrun = pipeline_api.run_training_pipeline(\n    pipeline_id=pipeline.public_id, training_pipeline_run_schema=run_schema\n)\n\n```\n\n### Lab run\n\nThe `labrun` command can be used to launch test runs of local training code on the Bedrock platform.\n\n```sh\n  # Set environment variables with credentials for this session\n  $ unset HISTFILE # Don't save history for this session\n  $ export BEDROCK_API_DOMAIN=https://api.bdrk.ai\n  $ export BEDROCK_API_TOKEN=<your personal API token>\n\n  $ bdrk labrun --help\n\n  $ bdrk labrun --verbose --domain $BEDROCK_API_DOMAIN submit \\\n        $HOME/basis/span-example-colourtest \\\n        bedrock.hcl \\\n        canary-dev \\\n        -p ALPHA=0.9 \\\n        -p L5_RATIO=0.1 \\\n        -s DUMMY_SECRET_A=foo \\\n        -s DUMMY_SECRET_B=bar\n\n  $ bdrk labrun logs <run_id> <step_id> <run_token>\n\n  $ bdrk labrun artefact <run_id> <run_token>\n```\n\n### Monitoring models in production\n\nAt serving time, users may import `bdrk[model-monitoring]` library to track various model performance metrics. Anomalies in these metrics can help inform users about model rot.\n\n#### Logging predictions\n\nThe model monitoring service may be instantiated in serve.py to log every prediction request for offline analysis. The following example demonstrates how to enable prediction logging in a typical Flask app.\n\n```python\nfrom bedrock_client.bedrock.metrics.service import ModelMonitoringService\nfrom flask import Flask, request\nfrom sklearn.svm import SVC\n\n# User code to load trained model\nmodel = SVC(probability=True)\nmodel.fit([[1, 3], [2, 2], [3, 1]], [False, True, False])\n\napp = Flask(__name__)\nmonitor = ModelMonitoringService()\n\n@app.route(\"/\", methods=[\"POST\"])\ndef predict():\n    # User code to load features\n    features = [2.1, 1.8]\n    score = model.predict_proba([features])[:, 0].item()\n\n    monitor.log_prediction(\n        request_body=request.json,\n        features=features,\n        output=score,\n    )\n    return {\"True\": score}\n```\n\nThe logged predictions are persisted in low cost blob store in the workload cluster with a maximum TTL of 1 month. The blob store is partitioned by the endpoint id and the event timestamp according to the following structure: `models/predictions/{endpoint_id}/2020-01-22/1415_{logger_id}-{replica_id}.txt`.\n\n- Endpoint id is the first portion of your domain name hosted on Bedrock\n- Replica id is the name of your model server pod\n- Logger id is a Bedrock generated name that's unique to the log collector pod\n\nThese properties are injected automatically into your model server container as environment variables.\n\nTo minimize latency of request handling, all predictions are logged asynchronously in a separate thread pool. We measured the overhead along critical path to be less than 1 ms per request.\n\n#### Tracking feature and inference drift\n\nIf training distribution metrics are present in `/artefact` directory, the model monitoring service will also track real time distribution of features and inference results. This is done using the same `log_prediction` call so users don't need to further instrument their serving code.\n\nIn order to export the serving distribution metrics, users may add a new `/metrics` endpoint to their Flask app. By default, all metrics are exported in Prometheus exposition format. The example code below shows how to extend the logging predictions example to support this use case.\n\n```python\n@app.route(\"/metrics\", methods=[\"GET\"])\ndef get_metrics():\n    \"\"\"Returns real time feature values recorded by prometheus\n    \"\"\"\n    body, content_type = monitor.export_http(\n        params=request.args.to_dict(flat=False),\n        headers=request.headers,\n    )\n    return Response(body, content_type=content_type)\n```\n\nWhen deployed in your workload cluster, the `/metrics` endpoint is automatically scraped by Prometheus every minute to store the latest metrics as timeseries data.\n\n\n# bdrk changelog\n\n## v0.2.1 (2020-05-06)\n\n### bedrock_client.bedrock.metrics\n\n- Fix: handle nans when classifying features as discrete variable\n- New: allow `str` type as prediction output for multi-class classification\n\n## v0.2.0 (2020-04-09)\n\n### bedrock_client.bedrock\n\n- Deprecated `bdrk[prediction-store]` component\n- Added `bdrk[model-monitoring]` component to capture both logging and metrics\n\n### bedrock_client.bedrock.metrics\n\n- Added `ModelMonitoringService.export_text` method for computing feature metrics on training data and exporting to a text file\n- Added `ModelMonitoringService` class for initialising model server metrics based on baseline metrics exported from training\n- Added `ModelMonitoringService.export_http` method for exposing current metrics in Prometheus registry to the scraper\n\n## v0.1.6 (2020-01-29)\n\n### bedrock_client.bedrock\n\n- Added `bdrk[prediction-store]` optional component for logging of predictions at serving time\n\n### bdrk.v1\n\n- Removed `TrainingPipelineSchema.pipeline_source`.\n- Fixed type of `ModelArtefactSchema.environment_id` from object to string.\n- Removed unused schemas.\n- Added `entity_number` to `ModelArtefactSchema`, `TrainingPipelineRunSchema` and `BatchScoringPipelineRunSchema`.\n- Added `pipeline_name` to `TrainingPipelineRunSchema` and `BatchScoringPipelineRunSchema`.\n\n## v0.1.5 (2019-11-13)\n\n### bdrk.v1\n\n- Added `kwargs` to models to allow backward compatibility.\n- Changed response schema for `ModelApi.get_artefact_details` from `ModelArtefactDetails` to `ModelArtefactSchema`.\n- Removed unused schemas.\n\n## v0.1.4 (2019-10-09)\n\n### bdrk.v1\n\n- Added `get_training_pipeline_runs` function to retrieve all runs from a pipeline\n\n## v0.1.3 (2019-10-01)\n\n### bdrk.v1\n\n- Added `bdrk.v1.ModelApi` with function `get_artefact_details`.\n  ```python\n  from bdrk.v1 import ModelApi\n  model_api = ModelApi(api_client)\n  artefact = model_api.get_artefact_details(public_id=pipeline.model_id, artefact_id=run.artefact_id)\n  ```\n- `bdrk.v1.models.UserSchema.email_address` made required.\n\n### bdrk.v1_utils\n\n- Added utility functions for downloading and unzipping artefacts\n\n  ```py\n  from bdrk.v1 import ApiClient, Configuration\n  from bdrk.v1_util import download_and_unzip_artefact\n\n  configuration = Configuration()\n  configuration.api_key[\"X-Bedrock-Access-Token\"] = \"YOUR-TOKEN-HERE\"\n  configuration.host = \"https://api.bdrk.ai\"\n  api_client = ApiClient(configuration)\n\n  # There are other utility methods as well\n  # `get_artefact_stream`, `download_stream`, `unzip_file_to_dir`\n  download_and_unzip_artefact(\n      api_client=api_client,\n      model_id=\"model-repository-id\",\n      model_artefact_id=\"model-version-id\",\n      output_dir=\"/tmp/artefact\",\n  )\n  ```\n\n### bedrock_client.bedrock.labrun\n\n- Changed command from `bedrock labrun` to `bdrk labrun submit`.\n- Added secrets using `-s DUMMY_SECRET_A=foo` flag.\n- Added downloading of logs and model artefacts.\n  - `bdrk labrun logs <run_id> <run_token>`\n  - `bdrk labrun artefact <run_id> <run_token>`\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/basisai/span", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "bdrk", "package_url": "https://pypi.org/project/bdrk/", "platform": "", "project_url": "https://pypi.org/project/bdrk/", "project_urls": {"Homepage": "https://github.com/basisai/span"}, "release_url": "https://pypi.org/project/bdrk/0.2.1/", "requires_dist": ["requests", "six", "Click ; extra == 'cli'", "docker ; extra == 'cli'", "jsonschema ; extra == 'cli'", "pyhcl ; extra == 'cli'", "fluent-logger ; extra == 'model-monitoring'", "prometheus-client ; extra == 'model-monitoring'", "numpy ; extra == 'model-monitoring'"], "requires_python": "", "summary": "Client library for Bedrock platform", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://bedrock.basis-ai.com\" rel=\"nofollow\">Bedrock</a> helps data scientists own the end-to-end deployment of machine learning workflows. <code>bdrk</code> is the official client library for interacting with APIs on Bedrock platform.</p>\n<h2>Usage</h2>\n<p>In order to use <code>bdrk</code>, you need to register an account with Basis AI. Please email <code>contact@basis-ai.com</code> to get started. Once an account is created, you will be issued a personal API token that you can use to authenticate with Bedrock.</p>\n<h3>Installing Bedrock client</h3>\n<p>You can install Bedrock client library from PyPi with the following command. We recommend running it in a virtual environment to prevent potential dependency conflicts.</p>\n<pre>pip install bdrk\n</pre>\n<p>Note that the client library is officially supported for python 3.7 and above.</p>\n<h4>Installing optional dependencies</h4>\n<p>The following optional dependencies can be installed to enable additional featues.</p>\n<p>Command line support:</p>\n<pre>pip install bdrk<span class=\"o\">[</span>cli<span class=\"o\">]</span>\n</pre>\n<p>Model monitoring support:</p>\n<pre>pip install bdrk<span class=\"o\">[</span>model-monitoring<span class=\"o\">]</span>\n</pre>\n<h3>Setting up your environment</h3>\n<p>Once installed, you need to add a well formed <code>bedrock.hcl</code> configuration file in your project's root directory. The configuration file specifies which script to run for training and deployment as well as their respective base Docker images. You can find an example directory layout <a href=\"https://github.com/basisai/churn_prediction\" rel=\"nofollow\">here</a>.</p>\n<p>When using the module locally, you may need to define the following environment variables for <code>bedrock_client</code> and lab runs to make API calls to Bedrock. These variables will be automatically set on your workload container when running in cluster.</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">BEDROCK_API_DOMAIN</span><span class=\"o\">=</span>https://api.bdrk.ai\n<span class=\"nb\">export</span> <span class=\"nv\">BEDROCK_API_TOKEN</span><span class=\"o\">=</span>&lt;your personal API token&gt;\n</pre>\n<h3>bedrock_client library</h3>\n<p>The <code>bedrock_client</code> library provides utility functions for your training runs.</p>\n<h4>Logging training metrics</h4>\n<p>You can easily export training metrics to Bedrock by adding logging code to <code>train.py</code>. The example below demonstrates logging charts and metrics for visualisation on Bedrock platform.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">bedrock_client.bedrock.api</span> <span class=\"kn\">import</span> <span class=\"n\">BedrockApi</span>\n\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">bedrock</span> <span class=\"o\">=</span> <span class=\"n\">BedrockApi</span><span class=\"p\">(</span><span class=\"n\">logger</span><span class=\"p\">)</span>\n<span class=\"n\">bedrock</span><span class=\"o\">.</span><span class=\"n\">log_metric</span><span class=\"p\">(</span><span class=\"s2\">\"Accuracy\"</span><span class=\"p\">,</span> <span class=\"mf\">0.97</span><span class=\"p\">)</span>\n<span class=\"n\">bedrock</span><span class=\"o\">.</span><span class=\"n\">log_chart_data</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"mf\">0.9</span><span class=\"p\">])</span>\n</pre>\n<h4>Logging feature and inference distribution</h4>\n<p>You may use the model monitoring service to save the distribution of input and model output data to a local file. The default path is <code>/artefact/histogram.prom</code> so as to bundle the computed distribution together with the model artefact it trained from. When trained on Bedrock, the zipped <code>/artefact</code> directory will be uploaded to user's blob storage bucket in the workload cluster.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bedrock_client.bedrock.metrics.service</span> <span class=\"kn\">import</span> <span class=\"n\">ModelMonitoringService</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.svm</span> <span class=\"kn\">import</span> <span class=\"n\">SVC</span>\n\n\n<span class=\"c1\"># User code to load training data</span>\n<span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]})</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">SVC</span><span class=\"p\">(</span><span class=\"n\">probability</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">])</span>\n<span class=\"n\">inference</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict_proba</span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"p\">)[:,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"n\">ModelMonitoringService</span><span class=\"o\">.</span><span class=\"n\">export_text</span><span class=\"p\">(</span>\n    <span class=\"n\">features</span><span class=\"o\">=</span><span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">iteritems</span><span class=\"p\">(),</span>\n    <span class=\"n\">inference</span><span class=\"o\">=</span><span class=\"n\">inference</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">(),</span>\n<span class=\"p\">)</span>\n</pre>\n<h3>bdrk library</h3>\n<p>The <code>bdrk</code> library provides APIs for interacting with the Bedrock platform.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bdrk.v1</span> <span class=\"kn\">import</span> <span class=\"n\">ApiClient</span><span class=\"p\">,</span> <span class=\"n\">Configuration</span><span class=\"p\">,</span> <span class=\"n\">PipelineApi</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bdrk.v1.models</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">PipelineResourcesSchema</span><span class=\"p\">,</span>\n    <span class=\"n\">TrainingPipelineRunSchema</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">configuration</span> <span class=\"o\">=</span> <span class=\"n\">Configuration</span><span class=\"p\">()</span>\n<span class=\"n\">configuration</span><span class=\"o\">.</span><span class=\"n\">api_key</span><span class=\"p\">[</span><span class=\"s2\">\"X-Bedrock-Access-Token\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"MY-TOKEN\"</span>\n<span class=\"n\">configuration</span><span class=\"o\">.</span><span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://api.bdrk.ai\"</span>\n\n<span class=\"n\">api_client</span> <span class=\"o\">=</span> <span class=\"n\">ApiClient</span><span class=\"p\">(</span><span class=\"n\">configuration</span><span class=\"p\">)</span>\n<span class=\"n\">pipeline_api</span> <span class=\"o\">=</span> <span class=\"n\">PipelineApi</span><span class=\"p\">(</span><span class=\"n\">api_client</span><span class=\"p\">)</span>\n\n<span class=\"n\">pipeline</span> <span class=\"o\">=</span> <span class=\"n\">pipeline_api</span><span class=\"o\">.</span><span class=\"n\">get_training_pipeline_by_id</span><span class=\"p\">(</span><span class=\"n\">pipeline_id</span><span class=\"o\">=</span><span class=\"s2\">\"MY-PIPELINE\"</span><span class=\"p\">)</span>\n<span class=\"n\">run_schema</span> <span class=\"o\">=</span> <span class=\"n\">TrainingPipelineRunSchema</span><span class=\"p\">(</span>\n    <span class=\"n\">environment_public_id</span><span class=\"o\">=</span><span class=\"s2\">\"MY-ENVIRONMENT\"</span><span class=\"p\">,</span>\n    <span class=\"n\">resources</span><span class=\"o\">=</span><span class=\"n\">PipelineResourcesSchema</span><span class=\"p\">(</span><span class=\"n\">cpu</span><span class=\"o\">=</span><span class=\"s2\">\"500m\"</span><span class=\"p\">,</span> <span class=\"n\">memory</span><span class=\"o\">=</span><span class=\"s2\">\"200M\"</span><span class=\"p\">),</span>\n    <span class=\"n\">script_parameters</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"MYPARAM\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1.23\"</span><span class=\"p\">},</span>\n<span class=\"p\">)</span>\n<span class=\"n\">run</span> <span class=\"o\">=</span> <span class=\"n\">pipeline_api</span><span class=\"o\">.</span><span class=\"n\">run_training_pipeline</span><span class=\"p\">(</span>\n    <span class=\"n\">pipeline_id</span><span class=\"o\">=</span><span class=\"n\">pipeline</span><span class=\"o\">.</span><span class=\"n\">public_id</span><span class=\"p\">,</span> <span class=\"n\">training_pipeline_run_schema</span><span class=\"o\">=</span><span class=\"n\">run_schema</span>\n<span class=\"p\">)</span>\n</pre>\n<h3>Lab run</h3>\n<p>The <code>labrun</code> command can be used to launch test runs of local training code on the Bedrock platform.</p>\n<pre>  <span class=\"c1\"># Set environment variables with credentials for this session</span>\n  $ <span class=\"nb\">unset</span> HISTFILE <span class=\"c1\"># Don't save history for this session</span>\n  $ <span class=\"nb\">export</span> <span class=\"nv\">BEDROCK_API_DOMAIN</span><span class=\"o\">=</span>https://api.bdrk.ai\n  $ <span class=\"nb\">export</span> <span class=\"nv\">BEDROCK_API_TOKEN</span><span class=\"o\">=</span>&lt;your personal API token&gt;\n\n  $ bdrk labrun --help\n\n  $ bdrk labrun --verbose --domain <span class=\"nv\">$BEDROCK_API_DOMAIN</span> submit <span class=\"se\">\\</span>\n        <span class=\"nv\">$HOME</span>/basis/span-example-colourtest <span class=\"se\">\\</span>\n        bedrock.hcl <span class=\"se\">\\</span>\n        canary-dev <span class=\"se\">\\</span>\n        -p <span class=\"nv\">ALPHA</span><span class=\"o\">=</span><span class=\"m\">0</span>.9 <span class=\"se\">\\</span>\n        -p <span class=\"nv\">L5_RATIO</span><span class=\"o\">=</span><span class=\"m\">0</span>.1 <span class=\"se\">\\</span>\n        -s <span class=\"nv\">DUMMY_SECRET_A</span><span class=\"o\">=</span>foo <span class=\"se\">\\</span>\n        -s <span class=\"nv\">DUMMY_SECRET_B</span><span class=\"o\">=</span>bar\n\n  $ bdrk labrun logs &lt;run_id&gt; &lt;step_id&gt; &lt;run_token&gt;\n\n  $ bdrk labrun artefact &lt;run_id&gt; &lt;run_token&gt;\n</pre>\n<h3>Monitoring models in production</h3>\n<p>At serving time, users may import <code>bdrk[model-monitoring]</code> library to track various model performance metrics. Anomalies in these metrics can help inform users about model rot.</p>\n<h4>Logging predictions</h4>\n<p>The model monitoring service may be instantiated in serve.py to log every prediction request for offline analysis. The following example demonstrates how to enable prediction logging in a typical Flask app.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bedrock_client.bedrock.metrics.service</span> <span class=\"kn\">import</span> <span class=\"n\">ModelMonitoringService</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span><span class=\"p\">,</span> <span class=\"n\">request</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.svm</span> <span class=\"kn\">import</span> <span class=\"n\">SVC</span>\n\n<span class=\"c1\"># User code to load trained model</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">SVC</span><span class=\"p\">(</span><span class=\"n\">probability</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]],</span> <span class=\"p\">[</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">])</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">monitor</span> <span class=\"o\">=</span> <span class=\"n\">ModelMonitoringService</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"POST\"</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">predict</span><span class=\"p\">():</span>\n    <span class=\"c1\"># User code to load features</span>\n    <span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">2.1</span><span class=\"p\">,</span> <span class=\"mf\">1.8</span><span class=\"p\">]</span>\n    <span class=\"n\">score</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict_proba</span><span class=\"p\">([</span><span class=\"n\">features</span><span class=\"p\">])[:,</span> <span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">item</span><span class=\"p\">()</span>\n\n    <span class=\"n\">monitor</span><span class=\"o\">.</span><span class=\"n\">log_prediction</span><span class=\"p\">(</span>\n        <span class=\"n\">request_body</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">,</span>\n        <span class=\"n\">features</span><span class=\"o\">=</span><span class=\"n\">features</span><span class=\"p\">,</span>\n        <span class=\"n\">output</span><span class=\"o\">=</span><span class=\"n\">score</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"True\"</span><span class=\"p\">:</span> <span class=\"n\">score</span><span class=\"p\">}</span>\n</pre>\n<p>The logged predictions are persisted in low cost blob store in the workload cluster with a maximum TTL of 1 month. The blob store is partitioned by the endpoint id and the event timestamp according to the following structure: <code>models/predictions/{endpoint_id}/2020-01-22/1415_{logger_id}-{replica_id}.txt</code>.</p>\n<ul>\n<li>Endpoint id is the first portion of your domain name hosted on Bedrock</li>\n<li>Replica id is the name of your model server pod</li>\n<li>Logger id is a Bedrock generated name that's unique to the log collector pod</li>\n</ul>\n<p>These properties are injected automatically into your model server container as environment variables.</p>\n<p>To minimize latency of request handling, all predictions are logged asynchronously in a separate thread pool. We measured the overhead along critical path to be less than 1 ms per request.</p>\n<h4>Tracking feature and inference drift</h4>\n<p>If training distribution metrics are present in <code>/artefact</code> directory, the model monitoring service will also track real time distribution of features and inference results. This is done using the same <code>log_prediction</code> call so users don't need to further instrument their serving code.</p>\n<p>In order to export the serving distribution metrics, users may add a new <code>/metrics</code> endpoint to their Flask app. By default, all metrics are exported in Prometheus exposition format. The example code below shows how to extend the logging predictions example to support this use case.</p>\n<pre><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/metrics\"</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"GET\"</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_metrics</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"Returns real time feature values recorded by prometheus</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">body</span><span class=\"p\">,</span> <span class=\"n\">content_type</span> <span class=\"o\">=</span> <span class=\"n\">monitor</span><span class=\"o\">.</span><span class=\"n\">export_http</span><span class=\"p\">(</span>\n        <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">(</span><span class=\"n\">flat</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">),</span>\n        <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">Response</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">,</span> <span class=\"n\">content_type</span><span class=\"o\">=</span><span class=\"n\">content_type</span><span class=\"p\">)</span>\n</pre>\n<p>When deployed in your workload cluster, the <code>/metrics</code> endpoint is automatically scraped by Prometheus every minute to store the latest metrics as timeseries data.</p>\n<h1>bdrk changelog</h1>\n<h2>v0.2.1 (2020-05-06)</h2>\n<h3>bedrock_client.bedrock.metrics</h3>\n<ul>\n<li>Fix: handle nans when classifying features as discrete variable</li>\n<li>New: allow <code>str</code> type as prediction output for multi-class classification</li>\n</ul>\n<h2>v0.2.0 (2020-04-09)</h2>\n<h3>bedrock_client.bedrock</h3>\n<ul>\n<li>Deprecated <code>bdrk[prediction-store]</code> component</li>\n<li>Added <code>bdrk[model-monitoring]</code> component to capture both logging and metrics</li>\n</ul>\n<h3>bedrock_client.bedrock.metrics</h3>\n<ul>\n<li>Added <code>ModelMonitoringService.export_text</code> method for computing feature metrics on training data and exporting to a text file</li>\n<li>Added <code>ModelMonitoringService</code> class for initialising model server metrics based on baseline metrics exported from training</li>\n<li>Added <code>ModelMonitoringService.export_http</code> method for exposing current metrics in Prometheus registry to the scraper</li>\n</ul>\n<h2>v0.1.6 (2020-01-29)</h2>\n<h3>bedrock_client.bedrock</h3>\n<ul>\n<li>Added <code>bdrk[prediction-store]</code> optional component for logging of predictions at serving time</li>\n</ul>\n<h3>bdrk.v1</h3>\n<ul>\n<li>Removed <code>TrainingPipelineSchema.pipeline_source</code>.</li>\n<li>Fixed type of <code>ModelArtefactSchema.environment_id</code> from object to string.</li>\n<li>Removed unused schemas.</li>\n<li>Added <code>entity_number</code> to <code>ModelArtefactSchema</code>, <code>TrainingPipelineRunSchema</code> and <code>BatchScoringPipelineRunSchema</code>.</li>\n<li>Added <code>pipeline_name</code> to <code>TrainingPipelineRunSchema</code> and <code>BatchScoringPipelineRunSchema</code>.</li>\n</ul>\n<h2>v0.1.5 (2019-11-13)</h2>\n<h3>bdrk.v1</h3>\n<ul>\n<li>Added <code>kwargs</code> to models to allow backward compatibility.</li>\n<li>Changed response schema for <code>ModelApi.get_artefact_details</code> from <code>ModelArtefactDetails</code> to <code>ModelArtefactSchema</code>.</li>\n<li>Removed unused schemas.</li>\n</ul>\n<h2>v0.1.4 (2019-10-09)</h2>\n<h3>bdrk.v1</h3>\n<ul>\n<li>Added <code>get_training_pipeline_runs</code> function to retrieve all runs from a pipeline</li>\n</ul>\n<h2>v0.1.3 (2019-10-01)</h2>\n<h3>bdrk.v1</h3>\n<ul>\n<li>Added <code>bdrk.v1.ModelApi</code> with function <code>get_artefact_details</code>.\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bdrk.v1</span> <span class=\"kn\">import</span> <span class=\"n\">ModelApi</span>\n<span class=\"n\">model_api</span> <span class=\"o\">=</span> <span class=\"n\">ModelApi</span><span class=\"p\">(</span><span class=\"n\">api_client</span><span class=\"p\">)</span>\n<span class=\"n\">artefact</span> <span class=\"o\">=</span> <span class=\"n\">model_api</span><span class=\"o\">.</span><span class=\"n\">get_artefact_details</span><span class=\"p\">(</span><span class=\"n\">public_id</span><span class=\"o\">=</span><span class=\"n\">pipeline</span><span class=\"o\">.</span><span class=\"n\">model_id</span><span class=\"p\">,</span> <span class=\"n\">artefact_id</span><span class=\"o\">=</span><span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">artefact_id</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li><code>bdrk.v1.models.UserSchema.email_address</code> made required.</li>\n</ul>\n<h3>bdrk.v1_utils</h3>\n<ul>\n<li>\n<p>Added utility functions for downloading and unzipping artefacts</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bdrk.v1</span> <span class=\"kn\">import</span> <span class=\"n\">ApiClient</span><span class=\"p\">,</span> <span class=\"n\">Configuration</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bdrk.v1_util</span> <span class=\"kn\">import</span> <span class=\"n\">download_and_unzip_artefact</span>\n\n<span class=\"n\">configuration</span> <span class=\"o\">=</span> <span class=\"n\">Configuration</span><span class=\"p\">()</span>\n<span class=\"n\">configuration</span><span class=\"o\">.</span><span class=\"n\">api_key</span><span class=\"p\">[</span><span class=\"s2\">\"X-Bedrock-Access-Token\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"YOUR-TOKEN-HERE\"</span>\n<span class=\"n\">configuration</span><span class=\"o\">.</span><span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://api.bdrk.ai\"</span>\n<span class=\"n\">api_client</span> <span class=\"o\">=</span> <span class=\"n\">ApiClient</span><span class=\"p\">(</span><span class=\"n\">configuration</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># There are other utility methods as well</span>\n<span class=\"c1\"># `get_artefact_stream`, `download_stream`, `unzip_file_to_dir`</span>\n<span class=\"n\">download_and_unzip_artefact</span><span class=\"p\">(</span>\n    <span class=\"n\">api_client</span><span class=\"o\">=</span><span class=\"n\">api_client</span><span class=\"p\">,</span>\n    <span class=\"n\">model_id</span><span class=\"o\">=</span><span class=\"s2\">\"model-repository-id\"</span><span class=\"p\">,</span>\n    <span class=\"n\">model_artefact_id</span><span class=\"o\">=</span><span class=\"s2\">\"model-version-id\"</span><span class=\"p\">,</span>\n    <span class=\"n\">output_dir</span><span class=\"o\">=</span><span class=\"s2\">\"/tmp/artefact\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n</li>\n</ul>\n<h3>bedrock_client.bedrock.labrun</h3>\n<ul>\n<li>Changed command from <code>bedrock labrun</code> to <code>bdrk labrun submit</code>.</li>\n<li>Added secrets using <code>-s DUMMY_SECRET_A=foo</code> flag.</li>\n<li>Added downloading of logs and model artefacts.\n<ul>\n<li><code>bdrk labrun logs &lt;run_id&gt; &lt;run_token&gt;</code></li>\n<li><code>bdrk labrun artefact &lt;run_id&gt; &lt;run_token&gt;</code></li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 7177766, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "58a35f48c250b876af9f6132cf837822", "sha256": "8371eadf1df55038a748463cb775180d87abb5b5d824a23eb97d87890b75eaaf"}, "downloads": -1, "filename": "bdrk-0.0.1-py3.7.egg", "has_sig": false, "md5_digest": "58a35f48c250b876af9f6132cf837822", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 190651, "upload_time": "2019-10-01T04:15:06", "upload_time_iso_8601": "2019-10-01T04:15:06.513828Z", "url": "https://files.pythonhosted.org/packages/e1/f9/3e3f6e7f6c15a35b820bb354ca8e6bc0d270af8b542d85bbd381433b5840/bdrk-0.0.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3f799d28946e52e982d82f7a8a54b33", "sha256": "830f25aeff4f9bc3a366768cf04c46fb80ebc3b10cc67d9ffed8354cec7e459c"}, "downloads": -1, "filename": "bdrk-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c3f799d28946e52e982d82f7a8a54b33", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24617, "upload_time": "2019-07-24T07:11:41", "upload_time_iso_8601": "2019-07-24T07:11:41.791960Z", "url": "https://files.pythonhosted.org/packages/47/1f/b2ee8e0e577a9f3ee3e0e8e961fd7f0bbbba75a21ceb2a6b10a6f2eeeaac/bdrk-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22bbd6341d23d744d2896f082e2a6c59", "sha256": "dde58ab943a80a3152e0fb9195bbd1b24fd21824f0fd3bc0f745102f7b7e11f9"}, "downloads": -1, "filename": "bdrk-0.0.1.tar.gz", "has_sig": false, "md5_digest": "22bbd6341d23d744d2896f082e2a6c59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17492, "upload_time": "2019-07-24T07:11:44", "upload_time_iso_8601": "2019-07-24T07:11:44.530842Z", "url": "https://files.pythonhosted.org/packages/54/34/2f752a8fe7193363f7212fdc3f8a3859122d14e552cd9f938b48fd31b9e3/bdrk-0.0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d8c68510060a65746b282a914cc39621", "sha256": "841b943cacc5ed6414b1ce10d7ec62c8a7fc4add98e11a8e46e40e1f08b619d8"}, "downloads": -1, "filename": "bdrk-0.1.1-py3.7.egg", "has_sig": false, "md5_digest": "d8c68510060a65746b282a914cc39621", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 200003, "upload_time": "2019-10-01T04:15:09", "upload_time_iso_8601": "2019-10-01T04:15:09.722781Z", "url": "https://files.pythonhosted.org/packages/f2/e5/65e08cc14b1e6d5b6388975e855b7210591b97ca51a927182b5f9452eb23/bdrk-0.1.1-py3.7.egg", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7fcdd807e2c7b8d82e4293925ef49ccd", "sha256": "acf8dee58e506a91d8b2e6d89edcfbaa780d349d9979b561b6ff0ffac821cad7"}, "downloads": -1, "filename": "bdrk-0.1.2-py3.7.egg", "has_sig": false, "md5_digest": "7fcdd807e2c7b8d82e4293925ef49ccd", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 199948, "upload_time": "2019-10-01T04:15:13", "upload_time_iso_8601": "2019-10-01T04:15:13.321177Z", "url": "https://files.pythonhosted.org/packages/28/9c/593b41ae6287c200cc11a63cd54b281f6d5e045ae832635fb424d5b16bbd/bdrk-0.1.2-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea340c78383880629057693683ee2473", "sha256": "5db97c19a90b01560f27a262e4c92bfa8a8c3198f095b6e82dde72b4a15c49ae"}, "downloads": -1, "filename": "bdrk-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ea340c78383880629057693683ee2473", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 136806, "upload_time": "2019-09-18T10:04:33", "upload_time_iso_8601": "2019-09-18T10:04:33.410903Z", "url": "https://files.pythonhosted.org/packages/df/1d/19b55fd4287cc8042a270e5fd9cc029686aa3678510c97550976cd08f94a/bdrk-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "954a1c4906876b093b23c73a79322879", "sha256": "e63ebea6620ebd52624b5d6ec11f5b24633f4661638895b315884d26289b17c3"}, "downloads": -1, "filename": "bdrk-0.1.2.tar.gz", "has_sig": false, "md5_digest": "954a1c4906876b093b23c73a79322879", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43875, "upload_time": "2019-09-18T10:04:36", "upload_time_iso_8601": "2019-09-18T10:04:36.170015Z", "url": "https://files.pythonhosted.org/packages/ef/36/5cab8bb618ca2187195a6446f9329e10f7b591a273a2d389229fbe699d11/bdrk-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "f5ffde9600ec96123afdc09741c3c2bb", "sha256": "38f8d083d1f19bc209f305c2b1f057695d4a26188a7282487018e70398e82b73"}, "downloads": -1, "filename": "bdrk-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f5ffde9600ec96123afdc09741c3c2bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 95774, "upload_time": "2019-10-01T04:15:00", "upload_time_iso_8601": "2019-10-01T04:15:00.821813Z", "url": "https://files.pythonhosted.org/packages/c5/1c/4f2b05a2bcbc667952a14edef885c50370441861326af3ec24821134518c/bdrk-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8b62428aeeffc5c20387cc697761147", "sha256": "c26ad2faeb2c7ec3f0ee34123269602e97993517598682203bbe6e5be9b43838"}, "downloads": -1, "filename": "bdrk-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e8b62428aeeffc5c20387cc697761147", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50358, "upload_time": "2019-10-01T04:15:19", "upload_time_iso_8601": "2019-10-01T04:15:19.742420Z", "url": "https://files.pythonhosted.org/packages/84/a5/d5ac67a03568197ba57cf71c90d5eff038ef260bce4c01535fb1bcf109bd/bdrk-0.1.3.tar.gz", "yanked": false}], "0.1.3rc1": [{"comment_text": "", "digests": {"md5": "23f0195df9b2a3232b71625bb978d038", "sha256": "badfbb9cd468a90b19f6d2aa2b7edd8fec3d80e0ac9b4e5e4691375a9487fe50"}, "downloads": -1, "filename": "bdrk-0.1.3rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "23f0195df9b2a3232b71625bb978d038", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 96357, "upload_time": "2019-10-01T04:15:03", "upload_time_iso_8601": "2019-10-01T04:15:03.710780Z", "url": "https://files.pythonhosted.org/packages/60/b5/4d8a49d80723c95e1f1439bfdf5c5f7f1b31ece703541aa3834d1657b11d/bdrk-0.1.3rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1661262e688161b34991f22bab94c05", "sha256": "c632bbdd72fe8935c5190292f4a889317d5ba6db6b0f29aadb5e33c0479d76c1"}, "downloads": -1, "filename": "bdrk-0.1.3rc1.tar.gz", "has_sig": false, "md5_digest": "a1661262e688161b34991f22bab94c05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51849, "upload_time": "2019-10-01T04:15:15", "upload_time_iso_8601": "2019-10-01T04:15:15.537210Z", "url": "https://files.pythonhosted.org/packages/8d/65/4a596f019458f890a3e5c06fed02f118411039031b1f8064fc20e8ec02bd/bdrk-0.1.3rc1.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "33908c474376a7db2bb4a189f94166c2", "sha256": "310ad659d9b358ee7078117a8fe3ebb6f172092aaada647e0f4ed74002236af0"}, "downloads": -1, "filename": "bdrk-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "33908c474376a7db2bb4a189f94166c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 88340, "upload_time": "2019-10-09T08:00:29", "upload_time_iso_8601": "2019-10-09T08:00:29.397157Z", "url": "https://files.pythonhosted.org/packages/2c/85/8c2ad50d66292739490d0dc342da828dab066e01f799bc51db749781884f/bdrk-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c7554bc2d522b77a0ecd47ceb15b9f2", "sha256": "55691cc556c6a5d736bcc1e7e536a18d7fc9c8d43c12bde5716eea5a67e6d12f"}, "downloads": -1, "filename": "bdrk-0.1.4.tar.gz", "has_sig": false, "md5_digest": "6c7554bc2d522b77a0ecd47ceb15b9f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50802, "upload_time": "2019-10-09T08:00:32", "upload_time_iso_8601": "2019-10-09T08:00:32.134781Z", "url": "https://files.pythonhosted.org/packages/a9/a2/b232416a9e11e50507e46b63936e7c95c34481261643962802ba84382f8d/bdrk-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "326d75bd08a7da6a2efa49f6de496a5b", "sha256": "672dcd46a1ca072536ea0768425bd069b463b6f8fea9bada3c7737ea9563ddba"}, "downloads": -1, "filename": "bdrk-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "326d75bd08a7da6a2efa49f6de496a5b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 154365, "upload_time": "2019-11-13T07:03:50", "upload_time_iso_8601": "2019-11-13T07:03:50.550786Z", "url": "https://files.pythonhosted.org/packages/c4/05/480b86a22fe97d487bffded5ff87a67f410fa53c799970269979aeaa7974/bdrk-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c505059748866098f6851acfa76a6a9", "sha256": "9ca6e18e568013d35edc365ccc007e683ff0f9253965963aa8f6e5100c46b760"}, "downloads": -1, "filename": "bdrk-0.1.5.tar.gz", "has_sig": false, "md5_digest": "1c505059748866098f6851acfa76a6a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46949, "upload_time": "2019-11-13T07:03:53", "upload_time_iso_8601": "2019-11-13T07:03:53.415986Z", "url": "https://files.pythonhosted.org/packages/00/d8/baede13b0d0a7ecbba3756a1d52bc39aaf1dd7252648362c1df5669cd978/bdrk-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "74991286d2809b71ed9dff252ed480bc", "sha256": "b36f4c077e92092ca1e2124bb19cd76bac80d2cf49586963dc9bec238a3d3bde"}, "downloads": -1, "filename": "bdrk-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "74991286d2809b71ed9dff252ed480bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 81068, "upload_time": "2020-01-29T08:58:54", "upload_time_iso_8601": "2020-01-29T08:58:54.174964Z", "url": "https://files.pythonhosted.org/packages/37/1e/784dfa83291e2e2ad63b3245c4254cbe61cbed2c1a2465a703c90df35fc5/bdrk-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3dbad5a9d168d3507db5c0c8f0bed9bf", "sha256": "f01a9ce5b83352e3f6a538a2c56ff95dd862c89ddf6aea5a7b5644db3291e561"}, "downloads": -1, "filename": "bdrk-0.1.6.tar.gz", "has_sig": false, "md5_digest": "3dbad5a9d168d3507db5c0c8f0bed9bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50913, "upload_time": "2020-01-29T08:58:56", "upload_time_iso_8601": "2020-01-29T08:58:56.289023Z", "url": "https://files.pythonhosted.org/packages/d7/10/d0e68a16b45194522e542552f017144323248f24375ebaa9ec7c5bcd3d2f/bdrk-0.1.6.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "041687eb2658796260c2352ef4f68fc2", "sha256": "64e9150147c071e063266fb194ef38a5c96b4dc264a061b5c7d931137db741d5"}, "downloads": -1, "filename": "bdrk-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "041687eb2658796260c2352ef4f68fc2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 96708, "upload_time": "2020-04-09T07:09:44", "upload_time_iso_8601": "2020-04-09T07:09:44.527396Z", "url": "https://files.pythonhosted.org/packages/ce/4f/00c53a1f052b873e67948580735c5d2e4ab31265373579edc46ac8e3384f/bdrk-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0fb0382bc83194b3c065aea56fe84cbe", "sha256": "b90e1d7a10a3e61931ea164dc46496a23741c253c5b5c4f3ba0cebdb26f79f63"}, "downloads": -1, "filename": "bdrk-0.2.0.tar.gz", "has_sig": false, "md5_digest": "0fb0382bc83194b3c065aea56fe84cbe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62036, "upload_time": "2020-04-09T07:09:46", "upload_time_iso_8601": "2020-04-09T07:09:46.298663Z", "url": "https://files.pythonhosted.org/packages/47/ba/4a90f67a8832e9b7a31f77a741c8226bb114085006cdbaa605d2d6fd4206/bdrk-0.2.0.tar.gz", "yanked": false}], "0.2.0rc1": [{"comment_text": "", "digests": {"md5": "905c703280ca00fd2ba82bc94dad7af4", "sha256": "8e355cc6e07ed56a40149c8f416e468042d57413f8caed16d2ad373ac388b79f"}, "downloads": -1, "filename": "bdrk-0.2.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "905c703280ca00fd2ba82bc94dad7af4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 104695, "upload_time": "2020-04-08T07:52:34", "upload_time_iso_8601": "2020-04-08T07:52:34.080355Z", "url": "https://files.pythonhosted.org/packages/9b/b1/4ee543c588be9a9d827b9757675ffdb2690a75966c412d04f45e78742453/bdrk-0.2.0rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74a0351db989dae42c955b9eede525af", "sha256": "e881eff34f7f1387c7f789804bb9a08609aaf00d4244a75d6ff2c1871fd92b7d"}, "downloads": -1, "filename": "bdrk-0.2.0rc1.tar.gz", "has_sig": false, "md5_digest": "74a0351db989dae42c955b9eede525af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61866, "upload_time": "2020-04-08T07:52:36", "upload_time_iso_8601": "2020-04-08T07:52:36.301378Z", "url": "https://files.pythonhosted.org/packages/a0/fd/a46f054761f01de34be60c865410ef863185ea94b52c85298c31f142b259/bdrk-0.2.0rc1.tar.gz", "yanked": false}], "0.2.0rc2": [{"comment_text": "", "digests": {"md5": "a5b85474f690d7c50d67b26b5f9d180b", "sha256": "725fa1f14a1f5d90be5d92670916a65be0d0d9dbe9ff04eb872e0feb83e6309c"}, "downloads": -1, "filename": "bdrk-0.2.0rc2-py3-none-any.whl", "has_sig": false, "md5_digest": "a5b85474f690d7c50d67b26b5f9d180b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 104834, "upload_time": "2020-04-08T09:11:57", "upload_time_iso_8601": "2020-04-08T09:11:57.790394Z", "url": "https://files.pythonhosted.org/packages/88/57/f8740980796ade80ab52e6d108bf84c1ae05ebe93b710bac928325c37bda/bdrk-0.2.0rc2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c73169979315837fcba0aa85fbcee86a", "sha256": "670ad949d3d48622e7d3de78893fa0f332548e545a3cc52aa6856adf7c310f69"}, "downloads": -1, "filename": "bdrk-0.2.0rc2.tar.gz", "has_sig": false, "md5_digest": "c73169979315837fcba0aa85fbcee86a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61997, "upload_time": "2020-04-08T09:12:00", "upload_time_iso_8601": "2020-04-08T09:12:00.200647Z", "url": "https://files.pythonhosted.org/packages/40/e9/812defcfbfe87fe6bbf68bcbbaeff9e5d4a8e752c479ff77eb49a6d5e459/bdrk-0.2.0rc2.tar.gz", "yanked": false}], "0.2.0rc3": [{"comment_text": "", "digests": {"md5": "b13d37d59edc64f2830ebb2c76de3d67", "sha256": "d9bbdcea419d0cf6e2c37b201233acf4ee7a8480da640b9544cfd238ec8f435a"}, "downloads": -1, "filename": "bdrk-0.2.0rc3-py3-none-any.whl", "has_sig": false, "md5_digest": "b13d37d59edc64f2830ebb2c76de3d67", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 105027, "upload_time": "2020-04-08T11:13:55", "upload_time_iso_8601": "2020-04-08T11:13:55.511295Z", "url": "https://files.pythonhosted.org/packages/5b/d6/c9f10cd6f2087dfcf2c9fe4b539989d2b776c258f967adeac78c900f62a2/bdrk-0.2.0rc3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b15542e3337a5b86044516c7c82fe4c", "sha256": "7f826dde7a15c3490a42127bc9ffb8388dcfe4a7634187146c6f625ef1ab6234"}, "downloads": -1, "filename": "bdrk-0.2.0rc3.tar.gz", "has_sig": false, "md5_digest": "4b15542e3337a5b86044516c7c82fe4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62304, "upload_time": "2020-04-08T11:13:57", "upload_time_iso_8601": "2020-04-08T11:13:57.630371Z", "url": "https://files.pythonhosted.org/packages/a3/8b/a14a5496e0773628ee63475f93c0ef68f412779889318dcb250348ec0dc3/bdrk-0.2.0rc3.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "8a7450fc1cabfcab6c13671fac5e6c51", "sha256": "3cbb21eb156fb0e7ba0bf61664891b9f68c4c72dd44ce45363852e76054f5551"}, "downloads": -1, "filename": "bdrk-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8a7450fc1cabfcab6c13671fac5e6c51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 105951, "upload_time": "2020-05-06T05:55:12", "upload_time_iso_8601": "2020-05-06T05:55:12.627320Z", "url": "https://files.pythonhosted.org/packages/d5/19/398e6a108aec56b98cb77de16ea574e8ccbb8f09da20fedc5d3a8893c3cc/bdrk-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66a672512299deadb410489e53bedd30", "sha256": "a0c7c43070e44dee85717946dfa4917712a29fdebc02ffc16cb3528375986efd"}, "downloads": -1, "filename": "bdrk-0.2.1.tar.gz", "has_sig": false, "md5_digest": "66a672512299deadb410489e53bedd30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63224, "upload_time": "2020-05-06T05:55:14", "upload_time_iso_8601": "2020-05-06T05:55:14.404462Z", "url": "https://files.pythonhosted.org/packages/f8/3b/1da00c34653900ac92680e6d7d849dbc8bbab59c43037844e77916fcd3e3/bdrk-0.2.1.tar.gz", "yanked": false}], "0.2.1rc1": [{"comment_text": "", "digests": {"md5": "bd6b6d59d315ffa30a21f0501ffb8904", "sha256": "46f5f40c5c59dda519d874968dfa5cc328c110869b79c3927b142cce89cc28e3"}, "downloads": -1, "filename": "bdrk-0.2.1rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "bd6b6d59d315ffa30a21f0501ffb8904", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 106008, "upload_time": "2020-05-06T05:02:26", "upload_time_iso_8601": "2020-05-06T05:02:26.858910Z", "url": "https://files.pythonhosted.org/packages/be/75/8c9b07c37f903da868dc06afa0b76a655bd5e50ef07d953d57c19a8fc5b9/bdrk-0.2.1rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "398664c97288fc0bc813631867040894", "sha256": "c5f50911f6e0cb3a0cf23b7272423c82c65f2ca638b4b3f15e6ebebdb7c4ed0c"}, "downloads": -1, "filename": "bdrk-0.2.1rc1.tar.gz", "has_sig": false, "md5_digest": "398664c97288fc0bc813631867040894", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63247, "upload_time": "2020-05-06T05:02:28", "upload_time_iso_8601": "2020-05-06T05:02:28.417870Z", "url": "https://files.pythonhosted.org/packages/76/b6/a1824fcd19ac0ec985a3cb1a8923454496731ba516d78915217cf4cada8e/bdrk-0.2.1rc1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8a7450fc1cabfcab6c13671fac5e6c51", "sha256": "3cbb21eb156fb0e7ba0bf61664891b9f68c4c72dd44ce45363852e76054f5551"}, "downloads": -1, "filename": "bdrk-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8a7450fc1cabfcab6c13671fac5e6c51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 105951, "upload_time": "2020-05-06T05:55:12", "upload_time_iso_8601": "2020-05-06T05:55:12.627320Z", "url": "https://files.pythonhosted.org/packages/d5/19/398e6a108aec56b98cb77de16ea574e8ccbb8f09da20fedc5d3a8893c3cc/bdrk-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66a672512299deadb410489e53bedd30", "sha256": "a0c7c43070e44dee85717946dfa4917712a29fdebc02ffc16cb3528375986efd"}, "downloads": -1, "filename": "bdrk-0.2.1.tar.gz", "has_sig": false, "md5_digest": "66a672512299deadb410489e53bedd30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63224, "upload_time": "2020-05-06T05:55:14", "upload_time_iso_8601": "2020-05-06T05:55:14.404462Z", "url": "https://files.pythonhosted.org/packages/f8/3b/1da00c34653900ac92680e6d7d849dbc8bbab59c43037844e77916fcd3e3/bdrk-0.2.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:33 2020"}