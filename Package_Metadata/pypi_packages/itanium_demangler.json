{"info": {"author": "whitequark", "author_email": "whitequark@whitequark.org", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "# Itanium Demangler\n\nThe *Python Itanium Demangler* is a pure Python parser for the [Itanium C++ ABI symbol mangling language][manglang]. Note that MSVC mangling language is not supported.\n\nThis demangler generates an abstract syntax tree from mangled symbols, which can be used for directly extracting type information, as opposed to having to interpret the C++ source code corresponding to the demangled symbol\n\n There is also a built-in AST stringifier, so the demangler can be used as a replacement for `c++filt` or for formatting backtraces.\n\n[manglang]: https://itanium-cxx-abi.github.io/cxx-abi/abi.html#mangling\n\n## Requirements\n\nThe demangler runs on Python 2.7 and 3.3+ and has no dependencies.\n\n## Installation\n\nInstalling via PyPI:\n\n    pip install itanium_demangler\n\nUsing a local repository for development:\n\n    git clone https://github.com/whitequark/python-itanium_demangler\n    cd python-itanium_demangler\n    python setup.py develop --user\n\n## Usage\n\n```python\nfrom itanium_demangler import parse as demangle\n\nast = demangle(\"_ZN5boost6chrono24process_system_cpu_clock3nowEv\")\n\nprint(repr(ast))\n# <FuncNode func <Node qual_name (<Node name 'boost'>, <Node name 'chrono'>, <Node name 'process_system_cpu_clock'>, <Node name 'now'>)> (<Node builtin 'void'>,) None>\n\nprint(ast)\n# boost::chrono::process_system_cpu_clock::now()\n```\n\n## Future considerations\n\nA similar (i.e. also parsing to an AST) implementation of a demangler for the MSVC mangling language would be useful to have.\n\n## License\n\n[0-clause BSD](LICENSE-0BSD.txt)\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/whitequark/python-itanium_demangler", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "itanium_demangler", "package_url": "https://pypi.org/project/itanium_demangler/", "platform": "", "project_url": "https://pypi.org/project/itanium_demangler/", "project_urls": {"Homepage": "https://github.com/whitequark/python-itanium_demangler"}, "release_url": "https://pypi.org/project/itanium_demangler/1.0/", "requires_dist": null, "requires_python": "", "summary": "Pure Python parser for mangled itanium symbols", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Itanium Demangler<br><br>The *Python Itanium Demangler* is a pure Python parser for the [Itanium C++ ABI symbol mangling language][manglang]. Note that MSVC mangling language is not supported.<br><br>This demangler generates an abstract syntax tree from mangled symbols, which can be used for directly extracting type information, as opposed to having to interpret the C++ source code corresponding to the demangled symbol<br><br> There is also a built-in AST stringifier, so the demangler can be used as a replacement for `c++filt` or for formatting backtraces.<br><br>[manglang]: https://itanium-cxx-abi.github.io/cxx-abi/abi.html#mangling<br><br>## Requirements<br><br>The demangler runs on Python 2.7 and 3.3+ and has no dependencies.<br><br>## Installation<br><br>Installing via PyPI:<br><br>    pip install itanium_demangler<br><br>Using a local repository for development:<br><br>    git clone https://github.com/whitequark/python-itanium_demangler<br>    cd python-itanium_demangler<br>    python setup.py develop --user<br><br>## Usage<br><br>```python<br>from itanium_demangler import parse as demangle<br><br>ast = demangle(\"_ZN5boost6chrono24process_system_cpu_clock3nowEv\")<br><br>print(repr(ast))<br># &lt;FuncNode func &lt;Node qual_name (&lt;Node name 'boost'&gt;, &lt;Node name 'chrono'&gt;, &lt;Node name 'process_system_cpu_clock'&gt;, &lt;Node name 'now'&gt;)&gt; (&lt;Node builtin 'void'&gt;,) None&gt;<br><br>print(ast)<br># boost::chrono::process_system_cpu_clock::now()<br>```<br><br>## Future considerations<br><br>A similar (i.e. also parsing to an AST) implementation of a demangler for the MSVC mangling language would be useful to have.<br><br>## License<br><br>[0-clause BSD](LICENSE-0BSD.txt)<br>\n          </div>"}, "last_serial": 4426359, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "66d28095befbc20f8ecefb185408825e", "sha256": "bca0fae4cb0ad582a3c7ede97d66b325d13445fdf87c28947233d8559430967c"}, "downloads": -1, "filename": "itanium_demangler-1.0.tar.gz", "has_sig": false, "md5_digest": "66d28095befbc20f8ecefb185408825e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6882, "upload_time": "2018-10-29T06:43:04", "upload_time_iso_8601": "2018-10-29T06:43:04.719124Z", "url": "https://files.pythonhosted.org/packages/25/98/bd3496af11643dc9d74dc62ea3f5323b7874a08bd3aeac61927f0c029453/itanium_demangler-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "66d28095befbc20f8ecefb185408825e", "sha256": "bca0fae4cb0ad582a3c7ede97d66b325d13445fdf87c28947233d8559430967c"}, "downloads": -1, "filename": "itanium_demangler-1.0.tar.gz", "has_sig": false, "md5_digest": "66d28095befbc20f8ecefb185408825e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6882, "upload_time": "2018-10-29T06:43:04", "upload_time_iso_8601": "2018-10-29T06:43:04.719124Z", "url": "https://files.pythonhosted.org/packages/25/98/bd3496af11643dc9d74dc62ea3f5323b7874a08bd3aeac61927f0c029453/itanium_demangler-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:51 2020"}