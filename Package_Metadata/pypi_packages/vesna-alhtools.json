{"info": {"author": "Tomaz Solc", "author_email": "tomaz.solc@ijs.si", "bugtrack_url": null, "classifiers": [], "description": ".. vim:sw=3 ts=3 expandtab tw=78\n\nIntroduction\n============\n\nThis package provides utilities and Python modules for managing VESNA-based\nwireless sensor networks that are using the ALH protocol.\n\nIn a typical setup, VESNA nodes participate in a ZigBee-based wireless mesh\nnetwork. On this mesh network each sensor node exposes a HTTP-like interface,\nsupporting two types of requests: GET for state-less information retrieval\nand POST for state-changing actions.\n\nThe ZigBee mesh is established by the coordinator. In addition to a ZigBee\ninterface, the coordinator also typically has an Ethernet adapter. At boot it\nestablishes a TCP/IP SSL tunnel and exposes an ALH service over it.\n\nUsually, the SSL tunnel terminates in an infrastructure server that performs\nthe translation between ALH and a proper HTTP REST interface exposed on the\nweb::\n\n   +------+\n   | node | ALH -  ZigBee mesh\n   +------+      \\\n                 |                    SSL tunnel\n   +------+      |      +-------------+         +----------------+\n   | node | ALH -+- ALH | coordinator | ALH --- | infrastructure | HTTPS -->\n   +------+      |      +-------------+         +----------------+\n                 |\n   +------+      /\n   | node | ALH -\n   +------+\n\nAlternatively, coordinator can also be directly connected to a client over a\nserial line. This setup is typically used for development or debugging::\n\n   +------+\n   | node | ALH -  ZigBee mesh\n   +------+      \\\n                 |                      serial line\n   +------+      |      +-------------+\n   | node | ALH -+- ALH | coordinator | ALH ------------------------------->\n   +------+      |      +-------------+\n                 |\n   +------+      /\n   | node | ALH -\n   +------+\n\nThese tools transparently support both modes of operation. Typically either URL of the\nHTTP REST endpoint is given or a character device for the serial line.\n\n\nInstallation\n============\n\nTo install system-wide from the package index, run::\n\n   $ pip install vesna-alhtools\n\nThis should also automatically install the required Python bindings for VESNA\nspectrum sensor application. More information about it is at:\nhttps://github.com/avian2/vesna-spectrum-sensor\n\nTo install system-wide from source, run::\n\n   $ pip install .\n\nTo run tests::\n\n   $ tox\n\n\nUsage\n=====\n\nAfter installation, the following tools are available:\n\n``alh-reprogram``\n   Perform over-the-air reprogramming of the coordinator or sensor nodes.\n\n``alh-map``\n   Enumerate all the nodes participating in the sensor network by crawling the\n   ZigBee mesh.\n\n   Can be used for visualizing the network using Graphviz or network\n   monitoring (via integration into Munin).\n\n``alh-tx-test``\n   Signal generator test.\n\n``alh-endpoint-server``\n   Simple ALH-to-HTTP endpoint server, useful for testing. It can be used\n   instead of the proper infrastructure server.\n\n\nRun each with ``--help`` as the only argument to get a list of available\noptions.\n\nNote: if the API end-point is using basic authentication, you will be\nprompted for credentials on the command line.\n\nYou can also save credentials into either a file named ``.alhrc`` in your\nhome directory or ``alhrc`` in the current directory. Format of the file is\nas in the following example::\n\n   Host example.com\n   User <username>\n   Password <password>\n   # more Host, User, Password lines can follow\n\nSeveral Python modules are installed as well. Refer to demo programs in the\ndemos/ directory for examples on how to use them. Classes and methods are\ndocumented with docstring documentation. Some of it is accessible on-line\nat https://vesna-alh-tools.readthedocs.io/en/latest/\n\n\nRemote testing with rftest.py\n=============================\n\nThis library provides a DeviceUnderTest class that is compatible with the\nRF test utility from vesna-spectrum-sensor repository. It allows for testing of\nradio hardware (e.g. SNE-ISMTV) using the production firmware (e.g.\nNodeSpectrumSensor application) on a fully assembled node with minimal\nadditional wiring.\n\nTesting setup looks like this::\n\n   +----------+ coax +------+ zigbit +-------------+  SSL  +----------------+\n   | R&S SMBV |----->| node |<-------| coordinator |<------| infrastructure |\n   +----------+      +------+  ALH   +-------------+       +----------------+\n         ^                                                           ^\n         | usbtmc    +--------+  HTTPS                               |\n         +-----------| rftest |--------------------------------------+\n                     +--------+\n\nRun rftest like this::\n\n   $ vesna-rftest -i foo -R vesna.alh.rftest.RemoteDeviceUnderTest -O,-Uhttps://...,-u...,-n1\n\n\nLicense\n=======\n\nCopyright (C) 2017 SensorLab, Jozef Stefan Institute\nhttp://sensorlab.ijs.si\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAuthors:\tTomaz Solc, <tomaz.solc@ijs.si>\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/avian2/vesna-alh-tools", "keywords": "", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "vesna-alhtools", "package_url": "https://pypi.org/project/vesna-alhtools/", "platform": "", "project_url": "https://pypi.org/project/vesna-alhtools/", "project_urls": {"Homepage": "https://github.com/avian2/vesna-alh-tools"}, "release_url": "https://pypi.org/project/vesna-alhtools/1.0.6/", "requires_dist": null, "requires_python": "", "summary": "Tools for talking the VESNA almost-like-HTTP protocol", "version": "1.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This package provides utilities and Python modules for managing VESNA-based\nwireless sensor networks that are using the ALH protocol.</p>\n<p>In a typical setup, VESNA nodes participate in a ZigBee-based wireless mesh\nnetwork. On this mesh network each sensor node exposes a HTTP-like interface,\nsupporting two types of requests: GET for state-less information retrieval\nand POST for state-changing actions.</p>\n<p>The ZigBee mesh is established by the coordinator. In addition to a ZigBee\ninterface, the coordinator also typically has an Ethernet adapter. At boot it\nestablishes a TCP/IP SSL tunnel and exposes an ALH service over it.</p>\n<p>Usually, the SSL tunnel terminates in an infrastructure server that performs\nthe translation between ALH and a proper HTTP REST interface exposed on the\nweb:</p>\n<pre>+------+\n| node | ALH -  ZigBee mesh\n+------+      \\\n              |                    SSL tunnel\n+------+      |      +-------------+         +----------------+\n| node | ALH -+- ALH | coordinator | ALH --- | infrastructure | HTTPS --&gt;\n+------+      |      +-------------+         +----------------+\n              |\n+------+      /\n| node | ALH -\n+------+\n</pre>\n<p>Alternatively, coordinator can also be directly connected to a client over a\nserial line. This setup is typically used for development or debugging:</p>\n<pre>+------+\n| node | ALH -  ZigBee mesh\n+------+      \\\n              |                      serial line\n+------+      |      +-------------+\n| node | ALH -+- ALH | coordinator | ALH -------------------------------&gt;\n+------+      |      +-------------+\n              |\n+------+      /\n| node | ALH -\n+------+\n</pre>\n<p>These tools transparently support both modes of operation. Typically either URL of the\nHTTP REST endpoint is given or a character device for the serial line.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install system-wide from the package index, run:</p>\n<pre>$ pip install vesna-alhtools\n</pre>\n<p>This should also automatically install the required Python bindings for VESNA\nspectrum sensor application. More information about it is at:\n<a href=\"https://github.com/avian2/vesna-spectrum-sensor\" rel=\"nofollow\">https://github.com/avian2/vesna-spectrum-sensor</a></p>\n<p>To install system-wide from source, run:</p>\n<pre>$ pip install .\n</pre>\n<p>To run tests:</p>\n<pre>$ tox\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>After installation, the following tools are available:</p>\n<dl>\n<dt><tt><span class=\"pre\">alh-reprogram</span></tt></dt>\n<dd>Perform over-the-air reprogramming of the coordinator or sensor nodes.</dd>\n<dt><tt><span class=\"pre\">alh-map</span></tt></dt>\n<dd><p>Enumerate all the nodes participating in the sensor network by crawling the\nZigBee mesh.</p>\n<p>Can be used for visualizing the network using Graphviz or network\nmonitoring (via integration into Munin).</p>\n</dd>\n<dt><tt><span class=\"pre\">alh-tx-test</span></tt></dt>\n<dd>Signal generator test.</dd>\n<dt><tt><span class=\"pre\">alh-endpoint-server</span></tt></dt>\n<dd>Simple ALH-to-HTTP endpoint server, useful for testing. It can be used\ninstead of the proper infrastructure server.</dd>\n</dl>\n<p>Run each with <tt><span class=\"pre\">--help</span></tt> as the only argument to get a list of available\noptions.</p>\n<p>Note: if the API end-point is using basic authentication, you will be\nprompted for credentials on the command line.</p>\n<p>You can also save credentials into either a file named <tt>.alhrc</tt> in your\nhome directory or <tt>alhrc</tt> in the current directory. Format of the file is\nas in the following example:</p>\n<pre>Host example.com\nUser &lt;username&gt;\nPassword &lt;password&gt;\n# more Host, User, Password lines can follow\n</pre>\n<p>Several Python modules are installed as well. Refer to demo programs in the\ndemos/ directory for examples on how to use them. Classes and methods are\ndocumented with docstring documentation. Some of it is accessible on-line\nat <a href=\"https://vesna-alh-tools.readthedocs.io/en/latest/\" rel=\"nofollow\">https://vesna-alh-tools.readthedocs.io/en/latest/</a></p>\n</div>\n<div id=\"remote-testing-with-rftest-py\">\n<h2>Remote testing with rftest.py</h2>\n<p>This library provides a DeviceUnderTest class that is compatible with the\nRF test utility from vesna-spectrum-sensor repository. It allows for testing of\nradio hardware (e.g. SNE-ISMTV) using the production firmware (e.g.\nNodeSpectrumSensor application) on a fully assembled node with minimal\nadditional wiring.</p>\n<p>Testing setup looks like this:</p>\n<pre>+----------+ coax +------+ zigbit +-------------+  SSL  +----------------+\n| R&amp;S SMBV |-----&gt;| node |&lt;-------| coordinator |&lt;------| infrastructure |\n+----------+      +------+  ALH   +-------------+       +----------------+\n      ^                                                           ^\n      | usbtmc    +--------+  HTTPS                               |\n      +-----------| rftest |--------------------------------------+\n                  +--------+\n</pre>\n<p>Run rftest like this:</p>\n<pre>$ vesna-rftest -i foo -R vesna.alh.rftest.RemoteDeviceUnderTest -O,-Uhttps://...,-u...,-n1\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright (C) 2017 SensorLab, Jozef Stefan Institute\n<a href=\"http://sensorlab.ijs.si\" rel=\"nofollow\">http://sensorlab.ijs.si</a></p>\n<p>This program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.</p>\n<p>This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.</p>\n<p>You should have received a copy of the GNU General Public License\nalong with this program.  If not, see &lt;<a href=\"http://www.gnu.org/licenses/\" rel=\"nofollow\">http://www.gnu.org/licenses/</a>&gt;.</p>\n<p>Authors:        Tomaz Solc, &lt;<a href=\"mailto:tomaz.solc%40ijs.si\">tomaz<span>.</span>solc<span>@</span>ijs<span>.</span>si</a>&gt;</p>\n</div>\n\n          </div>"}, "last_serial": 3719741, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "162d16f8585f64e6605953012b931924", "sha256": "89ef8b52c3f4d73161c65c12d85539883005608d09da50b8755365841595ebfa"}, "downloads": -1, "filename": "vesna-alhtools-1.0.0.tar.gz", "has_sig": false, "md5_digest": "162d16f8585f64e6605953012b931924", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25388, "upload_time": "2015-07-20T07:58:27", "upload_time_iso_8601": "2015-07-20T07:58:27.249719Z", "url": "https://files.pythonhosted.org/packages/20/99/03629af7cbec24b306c7fed5cacb1b62bb38728d99e8e8173d386f64c0cc/vesna-alhtools-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "3df05d79e94523777aa1ab0d96858c6e", "sha256": "dea78bafcc318ad63f910a921a6e52c552745a9f26cde79a56004c8b2b5cb7bc"}, "downloads": -1, "filename": "vesna-alhtools-1.0.1.tar.gz", "has_sig": false, "md5_digest": "3df05d79e94523777aa1ab0d96858c6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27723, "upload_time": "2015-07-20T09:59:06", "upload_time_iso_8601": "2015-07-20T09:59:06.495263Z", "url": "https://files.pythonhosted.org/packages/4b/eb/ae78537d232a32f58800b77e4f073b541d2dc8dd81ff3cf6a3cf980bcece/vesna-alhtools-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "493e4427401621850bf8cf0d36dc7019", "sha256": "85c0dbe8ca0e0fce2071cae7ddab6a35eacb0a96a8bbd233a82f38bd5726509b"}, "downloads": -1, "filename": "vesna-alhtools-1.0.2.tar.gz", "has_sig": false, "md5_digest": "493e4427401621850bf8cf0d36dc7019", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27646, "upload_time": "2015-07-22T09:43:17", "upload_time_iso_8601": "2015-07-22T09:43:17.222561Z", "url": "https://files.pythonhosted.org/packages/0d/97/2f9127cfd62b6a13f16ac224e868179b61210b41ab47483c1d8ceb9f1a95/vesna-alhtools-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "dab0c437eb2ecef06a544059f094ebd8", "sha256": "a7624c4cb2bc471ac373860bab0362444a2197550111b1016e2aacea1e196588"}, "downloads": -1, "filename": "vesna-alhtools-1.0.3.tar.gz", "has_sig": false, "md5_digest": "dab0c437eb2ecef06a544059f094ebd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28867, "upload_time": "2017-04-10T12:02:02", "upload_time_iso_8601": "2017-04-10T12:02:02.675991Z", "url": "https://files.pythonhosted.org/packages/79/59/a52f51880c37cb9dc98257577c60acc615c1e00f2dd2c39d00b4e364e4b3/vesna-alhtools-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "eff5e2dfe7693fc00f572150750d6fc8", "sha256": "54c586fac1e9a5a2c54cd7e2a384900a5b61582210ebdf41310157f6e6329006"}, "downloads": -1, "filename": "vesna-alhtools-1.0.4.tar.gz", "has_sig": false, "md5_digest": "eff5e2dfe7693fc00f572150750d6fc8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29878, "upload_time": "2017-08-30T13:53:09", "upload_time_iso_8601": "2017-08-30T13:53:09.399458Z", "url": "https://files.pythonhosted.org/packages/f2/66/ea0b4222ec38a26d2c01d5ec1603cc635f9d955562defba705ad52eedf51/vesna-alhtools-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "5f87441f7e5ba6b4f5207ad5a695e809", "sha256": "9da4fee27d9d0626a7070a3f87a6f10523890bdf8fc0d68229f83e0cff34eb83"}, "downloads": -1, "filename": "vesna-alhtools-1.0.5.tar.gz", "has_sig": false, "md5_digest": "5f87441f7e5ba6b4f5207ad5a695e809", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32221, "upload_time": "2018-01-19T12:53:45", "upload_time_iso_8601": "2018-01-19T12:53:45.066404Z", "url": "https://files.pythonhosted.org/packages/e0/16/814dd01f484fc14dc3b233de2cb362b1c6384d4f9f80b07485983195930b/vesna-alhtools-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "c252d86aafd08d5b6049d7015e6a2775", "sha256": "8c04561c760dd9e95d4183c13fdca5a22a3a06baebf5f88b95fea7621be92efa"}, "downloads": -1, "filename": "vesna-alhtools-1.0.6.tar.gz", "has_sig": false, "md5_digest": "c252d86aafd08d5b6049d7015e6a2775", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32677, "upload_time": "2018-03-30T13:29:59", "upload_time_iso_8601": "2018-03-30T13:29:59.398264Z", "url": "https://files.pythonhosted.org/packages/df/03/511817e52506302fd9decb19e9d4c2816cd3dfc34d51fef9fe7602356e05/vesna-alhtools-1.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c252d86aafd08d5b6049d7015e6a2775", "sha256": "8c04561c760dd9e95d4183c13fdca5a22a3a06baebf5f88b95fea7621be92efa"}, "downloads": -1, "filename": "vesna-alhtools-1.0.6.tar.gz", "has_sig": false, "md5_digest": "c252d86aafd08d5b6049d7015e6a2775", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32677, "upload_time": "2018-03-30T13:29:59", "upload_time_iso_8601": "2018-03-30T13:29:59.398264Z", "url": "https://files.pythonhosted.org/packages/df/03/511817e52506302fd9decb19e9d4c2816cd3dfc34d51fef9fe7602356e05/vesna-alhtools-1.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:36:33 2020"}