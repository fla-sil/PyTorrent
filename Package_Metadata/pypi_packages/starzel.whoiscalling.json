{"info": {"author": "Patrick Gerken", "author_email": "gerken@patrick-gerken.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: BSD License", "Topic :: Communications :: Chat", "Topic :: Communications :: Telephony"], "description": "starzel.whoiscalling\r\n====================\r\n\r\nWarning\r\n-------\r\nThis bot does not work properly yet. It cannot keep a connection open properly yet. The underlying library does not handle this in a suitable way either. So I might release an update, or use some totally different library, like hubot.\r\nRight now I check every morning what failed this time and try to handle that case. \r\n\r\nSmall bot that monitors your FRITZ!Box for incoming calls and informs\r\na multiuserchat in jabber.\r\n\r\nHow to use\r\n----------\r\nFor this to work, it needs a bunch of configuration options. The script needs a configuration file in ~/starzelbot.cfg.\r\nThe configuration needs a main section.\r\nThis is how a sample configuration could look like::\r\n\r\n    [main]\r\n    username = mybot@jabber.ccc.de\r\n    password = xxx\r\n    room = yourgroup@conference.jabber.ccc.de\r\n    fritzbox = 192.168.1.1\r\n\r\nThe egg exposes a script called `fritzbot`. The `fritzbot` script does not accept any parameters, and it blocks. If you want to run it in the background, start it with nohup.\r\n\r\nIn normal operation, the script generates no output. So it should be save to start it via cron.\r\n\r\nWhat does it do\r\n---------------\r\n\r\nA FRITZ!Box with VoIP offers an interface to get informed of incoming calls.\r\n\r\nThis information gets exposed via a simple interface accessible on the FRITZ!Box at port 1012\r\n\r\nThis bot connects to this port on the FRITZ!Box and tries to extract the caller.\r\n\r\nFor each call, it sends a message to a multi user chatroom on jabber.\r\n\r\nHISTORY\r\n=======\r\n\r\n0.0.2 (2013-04-26)\r\n------------------\r\n\r\n- First release on PyPI\r\n  [do3cc]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/do3cc/starzel.whoiscalling", "keywords": "FRITZ!Box fritzbox jabber", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "starzel.whoiscalling", "package_url": "https://pypi.org/project/starzel.whoiscalling/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/starzel.whoiscalling/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/do3cc/starzel.whoiscalling"}, "release_url": "https://pypi.org/project/starzel.whoiscalling/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Retrieve calling info from Fritzbox, expose to jabber Multi User Chatroom", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"starzel-whoiscalling\">\n<h2>starzel.whoiscalling</h2>\n<div id=\"warning\">\n<h3>Warning</h3>\n<p>This bot does not work properly yet. It cannot keep a connection open properly yet. The underlying library does not handle this in a suitable way either. So I might release an update, or use some totally different library, like hubot.\nRight now I check every morning what failed this time and try to handle that case.</p>\n<p>Small bot that monitors your FRITZ!Box for incoming calls and informs\na multiuserchat in jabber.</p>\n</div>\n<div id=\"how-to-use\">\n<h3>How to use</h3>\n<p>For this to work, it needs a bunch of configuration options. The script needs a configuration file in ~/starzelbot.cfg.\nThe configuration needs a main section.\nThis is how a sample configuration could look like:</p>\n<pre>[main]\nusername = mybot@jabber.ccc.de\npassword = xxx\nroom = yourgroup@conference.jabber.ccc.de\nfritzbox = 192.168.1.1\n</pre>\n<p>The egg exposes a script called <cite>fritzbot</cite>. The <cite>fritzbot</cite> script does not accept any parameters, and it blocks. If you want to run it in the background, start it with nohup.</p>\n<p>In normal operation, the script generates no output. So it should be save to start it via cron.</p>\n</div>\n<div id=\"what-does-it-do\">\n<h3>What does it do</h3>\n<p>A FRITZ!Box with VoIP offers an interface to get informed of incoming calls.</p>\n<p>This information gets exposed via a simple interface accessible on the FRITZ!Box at port 1012</p>\n<p>This bot connects to this port on the FRITZ!Box and tries to extract the caller.</p>\n<p>For each call, it sends a message to a multi user chatroom on jabber.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>HISTORY</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.0.2 (2013-04-26)</span></h2>\n<ul>\n<li>First release on PyPI\n[do3cc]</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 800080, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "684080cf6555c46c6250c2d92a8a4ace", "sha256": "8f73f5ed62ed70bd57c04ad74f71024d3563bd5471406a17212c4b2248048da9"}, "downloads": -1, "filename": "starzel.whoiscalling-0.0.2.zip", "has_sig": false, "md5_digest": "684080cf6555c46c6250c2d92a8a4ace", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6914, "upload_time": "2013-04-26T14:55:35", "upload_time_iso_8601": "2013-04-26T14:55:35.941812Z", "url": "https://files.pythonhosted.org/packages/d6/c3/9709b10a833f99301e5496188a1053b33b0cce93be87a932a5b1f9e255d3/starzel.whoiscalling-0.0.2.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "684080cf6555c46c6250c2d92a8a4ace", "sha256": "8f73f5ed62ed70bd57c04ad74f71024d3563bd5471406a17212c4b2248048da9"}, "downloads": -1, "filename": "starzel.whoiscalling-0.0.2.zip", "has_sig": false, "md5_digest": "684080cf6555c46c6250c2d92a8a4ace", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6914, "upload_time": "2013-04-26T14:55:35", "upload_time_iso_8601": "2013-04-26T14:55:35.941812Z", "url": "https://files.pythonhosted.org/packages/d6/c3/9709b10a833f99301e5496188a1053b33b0cce93be87a932a5b1f9e255d3/starzel.whoiscalling-0.0.2.zip", "yanked": false}], "timestamp": "Fri May  8 03:02:32 2020"}