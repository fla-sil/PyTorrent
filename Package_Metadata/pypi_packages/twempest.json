{"info": {"author": "Dave Rogers", "author_email": "thedude@yukondude.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Text Processing", "Topic :: Utilities"], "description": "Twempest\n========\n\n|status| |buildstatus| |codecov| |pypiversion| |pyversions| |licence|\n\nTwempest is a command-line program written in Python.\n\nMotivation\n----------\n\nTwempest was born of the need to periodically echo my Twitter tweets as\nposts on first a Jekyll-based and then Pelican-built blog. That\u2019s it,\nthat\u2019s all.\n\nLicence\n-------\n\nCopyright 2018 Dave Rogers. Licensed under the `GNU General Public\nLicense, version 3 <https://www.gnu.org/licenses/gpl-3.0.en.html>`__.\nRefer to the attached LICENSE file or see http://www.gnu.org/licenses/\nfor details.\n\nChange Log\n----------\n\nThe current version is 0.2.12. Twempest is\n`semver <http://semver.org/>`__-ish in its versioning scheme.\n\nTwempest is currently a beta release candidate in preparation for\nversion 1.0.0.\n\nInstallation\n------------\n\nHomebrew (macOS)\n~~~~~~~~~~~~~~~~\n\nOn macOS, Homebrew will take care of installing any dependencies,\nincluding Python 3.\n\n::\n\n   brew tap yukondude/tap\n   brew install twempest\n\nPyPI (POSIX)\n~~~~~~~~~~~~\n\nOn \\*NIX, you will first need to install Python 3.6 (or higher) using\nyour preferred method.\n\n::\n\n   pip3 install twempest\n\nUnicode Locale Configuration\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf the Unicode locale is not configured in a particular environment\n(e.g., ``cron``), you will see the following error:\n\n::\n\n   RuntimeError: Click will abort further execution because Python 3\n   was configured to use ASCII as encoding for the environment.\n   Consult http://click.pocoo.org/python3/for mitigation steps.\n\n`To solve\nthis <http://click.pocoo.org/5/python3/#python3-surrogates>`__, you must\nexplicitly export the Unicode locale in the environment. For example,\ninsert something like the following near the top of your ``crontab``\nfile:\n\n::\n\n   LC_ALL=en_CA.UTF-8\n   LANG=en_CA.UTF-8\n\nUse the locale appropriate for your language and region. The error\nmessage should show the list of available locales.\n\nDevelopment Setup\n-----------------\n\n1. Make sure that Python 3.6 or better is installed.\n2. Install pipenv: ``pip install pipenv``\n3. Clone the Twempest repo:\n   ``git clone https://github.com/yukondude/Twempest.git ; cd Twempest``\n4. Install dependencies: ``pipenv install --dev --three``\n5. Install the project in development mode:\n   ``pipenv run ./setup.py develop``\n6. Run the unit tests to make sure everything is copacetic:\n   ``pipenv run ./setup.py test``\n7. Pour a snifter of Ch\u00e2teau de Montifaud and light up a Laranja Reserva\n   Toro.\n\nWhile developing, you will always have to run the Twempest CLI from\nwithin the pipenv virtual environment: ``pipenv run twempest``\n\nUsage\n-----\n\nRun ``twempest --help`` to view the usage instructions:\n\n::\n\n   Usage: twempest [OPTIONS] TEMPLATE\n\n     Download a sequence of recent Twitter tweets and convert these, via the\n     given template file, to text format. Twempest uses the Jinja template\n     syntax throughout: http://jinja.pocoo.org/docs/2.9/templates/\n\n   Options:\n     -c, --config-path TEXT  Twempest configuration directory path, which must be\n                             writable, and must also contain the twempest.conf\n                             file.  [default: ~/.twempest]\n     -A, --abbreviated       Render the abbreviated form of the tweet text rather\n                             than the full, extended, version.\n     -a, --append            Append rendered tweet(s) to existing file(s) rather\n                             than skipping past with a warning.\n     -n, --count TEXT        Maximum number of tweets to retrieve. The actual\n                             number may be lower.  [default: 200]\n     -D, --dry-run           Display all configuration options and template\n                             contents without retrieving tweets.\n     -i, --image-path TEXT   The directory path (template tags allowed) to write\n                             downloaded image (media type == 'photo') files. The\n                             directory path will be created if it doesn't exist.\n                             Media file names use the --render-file name followed\n                             by a number and the appropriate file extension. If\n                             omitted, media files will not be downloaded.\n     -u, --image-url TEXT    The URL path (template tags allowed) to use for all\n                             image files downloaded via the --image-path option.\n     --pickle                Serialize a list of the rendered tweet statuses as a\n                             standard Python pickle byte stream. The stream will\n                             be written to 'twempest.p' in the current working\n                             directory.\n     -q, --quiet             Suppress warning messages.\n     -f, --render-file TEXT  The file name (template tags allowed) for the\n                             rendered tweets. If omitted, tweets will be rendered\n                             to STDOUT.\n     -p, --render-path TEXT  The directory path (template tags allowed) to write\n                             the rendered tweet files. The directory path will be\n                             created if it doesn't exist.  [default: .]\n     -@, --replies           Include @replies in the list of retrieved tweets.\n     -r, --retweets          Include retweets in the list of retrieved tweets.\n     -s, --since-id TEXT     Retrieve tweets that follow this ID in the timeline.\n                             Required, unless the ID has already been recorded in\n                             the config path directory after a previous run of\n                             Twempest.\n     -k, --skip TEXT         Skip any rendered tweets that contain this regular\n                             expression pattern.\n     -V, --version           Show version and exit.\n     -h, --help              Show this message and exit.\n\nSample Configuration\n--------------------\n\nContents of ``twempest.config.sample``:\n\n::\n\n   # Sample Twempest configuration file. See https://github.com/yukondude/Twempest\n   # for details. Save this to ~/.twempest/twempest.config as the default\n   # configuration whenever twempest is run, or save it somewhere convenient as\n   # twempest.config and reference it via the -c/--config-path command-line switch.\n\n   [twempest]\n   # Most twempest long-form command-line switches may be used here (excluding the\n   # leading double-dash). The obvious exceptions would include --config-path,\n   # --help, and --version, but go ahead and try them if you like. The commented-\n   # out defaults are shown below. See the --help output for details.\n\n   # Render the full text of the tweet.\n   # abbreviated=false\n\n   # Do not append to existing files.\n   # append=false\n\n   # Retrieve at most 200 tweets.\n   # count=200\n\n   # Retrieve tweets normally.\n   # dry-run=false\n\n   # Do not download image files.\n   # image-path=\n\n   # Do not download image files.\n   # image-url=\n\n   # Do not serialize the rendered tweets.\n   # pickle=false\n\n   # Do not suppress warning messages.\n   # quiet=false\n\n   # Render tweets to STDOUT.\n   # render-file=\n   # Because template expressions are allowed for this option, you can generate\n   # rendered file names using any of the tweet context variable contents. For\n   # example: render-file={{tweet.created_at|isodate}}-{{tweet.text|slugify}}.md\n   # might render to something like: 2017-02-14-be-my-valentine.md\n   # Use the slugify filter to eliminate any non-filesystem-safe characters from\n   # the tweet text.\n\n   # Write rendered tweets to the current directory.\n   # render-path=.\n   # Template expressions are also allowed for this option, so the directory path\n   # can be made to change based upon a tweet status variable.\n\n   # Exclude @replies from the list of retrieved tweets.\n   # replies=false\n\n   # Exclude retweets from the list of retrieved tweets.\n   # retweets=false\n\n   # Don't specify a most recent Twitter ID.\n   # since-id=\n   # Since this isn't specified (and normally wouldn't be in a config file), there\n   # must already be an ID recorded in the config path directory after a previous\n   # run of Twempest.\n\n   # Don't skip any tweets.\n   # skip=\n\n   [twitter]\n   # Visit https://apps.twitter.com/ to generate these keys, secrets, tokens, and\n   # token secrets. Secret tokens? Token keys? Secret secrets?\n   consumer_key=\n   consumer_secret=\n   access_token=\n   access_token_secret=\n\nSample Template\n---------------\n\nA simple template to render a tweet as Markdown text suitable for Jekyll\nposts (``twempest.template.sample``):\n\n::\n\n   ---\n   title: '{{ tweet.text|delink|truncate(80,False)|qescape }}'\n   author: '{{ tweet.user.name|qescape }}'\n   date: '{{ tweet.created_at }}'\n   tweet_id: {{ tweet.id }}\n   ---\n   {{ tweet.text | relink(\"[{{ text }}]({{ url }})\") | reimage(\"![{{ alt }}]({{ url }})\", \"\\n\\n\") }}\n\n   [tweet](https://twitter.com/{{tweet.user.screen_name}}/status/{{ tweet.id }})\n\nThe rendered output of this template might look something like the\nfollowing:\n\n::\n\n   ---\n   title: 'Ice fog &#39;boiling&#39; up from the Yukon River.'\n   author: 'Dave Rogers'\n   date: '2016-12-06 12:12:36-08:00'\n   tweet_id: 806229878861201408\n   ---\n   Ice fog 'boiling' up from the [#Yukon](https://twitter.com/hashtag/yukon) River.\n\n   ![2016-12-06-ice-fog-boiling-up-from-the-yukon-river-0](/media/2016-12-06-ice-fog-boiling-up-from-the-yukon-river-0.jpg)\n\n   [tweet](https://twitter.com/yukondude/status/806229878861201408)\n\n``tweet`` Context Variable\n--------------------------\n\nSee the `Twitter API documentation for\ntweets <https://dev.twitter.com/overview/api/tweets>`__ for a list of\nall of the keys that can be found under the ``tweet`` context variable\n(a dictionary).\n\nA couple of other keys are also available:\n\n``tweet.media[].original_media_url``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe original value of the ``media_url`` key within the list of ``media``\nitems before any downloaded image URL rewriting took place.\n\n``tweet.media[].original_media_url_https``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe original value of the ``media_url_https`` key within the list of\n``media`` items before any downloaded image URL rewriting took place.\n\nTemplate Filters\n----------------\n\nThese are in addition to the `built-in Jinja2\nfilters <http://jinja.pocoo.org/docs/2.9/templates/#list-of-builtin-filters>`__.\n\n``delink``\n~~~~~~~~~~\n\nRemove URLs and hashtag \u2018#\u2019 prefixes.\n\n``isodate``\n~~~~~~~~~~~\n\nFormat a date as YYYY-MM-DD.\n\n``qescape``\n~~~~~~~~~~~\n\nEscape just single quote characters as HTML entities.\n\n``reimage(tag_format, delimiter=\" \")``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nRemove image URLs and append them to the end (following the delimiter),\nusing the template tag_format with variables ``alt`` and ``url`` to\nformat each.\n\n``relink(tag_format)``\n~~~~~~~~~~~~~~~~~~~~~~\n\nReplace non-image URLs, hashtag, and user mention links, using the\ntemplate tag_format with variables ``text`` and ``url`` to format each.\n\n``slugify``\n~~~~~~~~~~~\n\nTransform the given text into a suitable file name that is also scrubbed\nof URLs and hashtags.\n\n*README.md generated December 11, 2018*\n\n.. |status| image:: https://img.shields.io/pypi/status/Twempest.svg\n   :target: https://pypi.python.org/pypi/twempest/\n.. |buildstatus| image:: https://travis-ci.org/yukondude/Twempest.svg?branch=master\n   :target: https://travis-ci.org/yukondude/Twempest\n.. |codecov| image:: https://codecov.io/gh/yukondude/Twempest/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/yukondude/Twempest\n.. |pypiversion| image:: https://img.shields.io/pypi/v/Twempest.svg\n   :target: https://pypi.python.org/pypi/twempest/\n.. |pyversions| image:: https://img.shields.io/pypi/pyversions/Twempest.svg\n   :target: https://pypi.python.org/pypi/twempest/\n.. |licence| image:: https://img.shields.io/pypi/l/Twempest.svg\n   :target: https://www.gnu.org/licenses/gpl-3.0.en.html\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yukondude/Twempest", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "twempest", "package_url": "https://pypi.org/project/twempest/", "platform": "MacOS", "project_url": "https://pypi.org/project/twempest/", "project_urls": {"Homepage": "https://github.com/yukondude/Twempest"}, "release_url": "https://pypi.org/project/twempest/0.2.12/", "requires_dist": ["click (>=7.0)", "pytz (>=2018.7)", "tweepy (>=3.7.0)", "tzlocal (>=1.5.1)", "jinja2 (>=2.10)", "pipenv"], "requires_python": "", "summary": "Twitter to text via template. Somehow that abbreviates to \"twempest\".", "version": "0.2.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/twempest/\" rel=\"nofollow\"><img alt=\"status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1452bf8a52d47ee8879144ae5edfcb266e74f78f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f5477656d706573742e737667\"></a> <a href=\"https://travis-ci.org/yukondude/Twempest\" rel=\"nofollow\"><img alt=\"buildstatus\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3544aad6c98933ef39b4711fcb1b38e72508a4dd/68747470733a2f2f7472617669732d63692e6f72672f79756b6f6e647564652f5477656d706573742e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/gh/yukondude/Twempest\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb02d76fb3b176aeb1f0c7fe07e03faecc98e4c8/68747470733a2f2f636f6465636f762e696f2f67682f79756b6f6e647564652f5477656d706573742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a> <a href=\"https://pypi.python.org/pypi/twempest/\" rel=\"nofollow\"><img alt=\"pypiversion\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b0e110a137b841bcb2ca0124b6941783cd71a7e5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f5477656d706573742e737667\"></a> <a href=\"https://pypi.python.org/pypi/twempest/\" rel=\"nofollow\"><img alt=\"pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c18e5132f9772e590a1768b69d8b8e481bf104b3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f5477656d706573742e737667\"></a> <a href=\"https://www.gnu.org/licenses/gpl-3.0.en.html\" rel=\"nofollow\"><img alt=\"licence\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ababc8a67c2fce72cde863adab2242a78ad9f3e6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f5477656d706573742e737667\"></a></p>\n<p>Twempest is a command-line program written in Python.</p>\n<div id=\"motivation\">\n<h2>Motivation</h2>\n<p>Twempest was born of the need to periodically echo my Twitter tweets as\nposts on first a Jekyll-based and then Pelican-built blog. That\u2019s it,\nthat\u2019s all.</p>\n</div>\n<div id=\"licence\">\n<h2>Licence</h2>\n<p>Copyright 2018 Dave Rogers. Licensed under the <a href=\"https://www.gnu.org/licenses/gpl-3.0.en.html\" rel=\"nofollow\">GNU General Public\nLicense, version 3</a>.\nRefer to the attached LICENSE file or see <a href=\"http://www.gnu.org/licenses/\" rel=\"nofollow\">http://www.gnu.org/licenses/</a>\nfor details.</p>\n</div>\n<div id=\"change-log\">\n<h2>Change Log</h2>\n<p>The current version is 0.2.12. Twempest is\n<a href=\"http://semver.org/\" rel=\"nofollow\">semver</a>-ish in its versioning scheme.</p>\n<p>Twempest is currently a beta release candidate in preparation for\nversion 1.0.0.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"homebrew-macos\">\n<h3>Homebrew (macOS)</h3>\n<p>On macOS, Homebrew will take care of installing any dependencies,\nincluding Python 3.</p>\n<pre>brew tap yukondude/tap\nbrew install twempest\n</pre>\n</div>\n<div id=\"pypi-posix\">\n<h3>PyPI (POSIX)</h3>\n<p>On *NIX, you will first need to install Python 3.6 (or higher) using\nyour preferred method.</p>\n<pre>pip3 install twempest\n</pre>\n</div>\n<div id=\"unicode-locale-configuration\">\n<h3>Unicode Locale Configuration</h3>\n<p>If the Unicode locale is not configured in a particular environment\n(e.g., <tt>cron</tt>), you will see the following error:</p>\n<pre>RuntimeError: Click will abort further execution because Python 3\nwas configured to use ASCII as encoding for the environment.\nConsult http://click.pocoo.org/python3/for mitigation steps.\n</pre>\n<p><a href=\"http://click.pocoo.org/5/python3/#python3-surrogates\" rel=\"nofollow\">To solve\nthis</a>, you must\nexplicitly export the Unicode locale in the environment. For example,\ninsert something like the following near the top of your <tt>crontab</tt>\nfile:</p>\n<pre>LC_ALL=en_CA.UTF-8\nLANG=en_CA.UTF-8\n</pre>\n<p>Use the locale appropriate for your language and region. The error\nmessage should show the list of available locales.</p>\n</div>\n</div>\n<div id=\"development-setup\">\n<h2>Development Setup</h2>\n<ol>\n<li>Make sure that Python 3.6 or better is installed.</li>\n<li>Install pipenv: <tt>pip install pipenv</tt></li>\n<li>Clone the Twempest repo:\n<tt>git clone <span class=\"pre\">https://github.com/yukondude/Twempest.git</span> ; cd Twempest</tt></li>\n<li>Install dependencies: <tt>pipenv install <span class=\"pre\">--dev</span> <span class=\"pre\">--three</span></tt></li>\n<li>Install the project in development mode:\n<tt>pipenv run ./setup.py develop</tt></li>\n<li>Run the unit tests to make sure everything is copacetic:\n<tt>pipenv run ./setup.py test</tt></li>\n<li>Pour a snifter of Ch\u00e2teau de Montifaud and light up a Laranja Reserva\nToro.</li>\n</ol>\n<p>While developing, you will always have to run the Twempest CLI from\nwithin the pipenv virtual environment: <tt>pipenv run twempest</tt></p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Run <tt>twempest <span class=\"pre\">--help</span></tt> to view the usage instructions:</p>\n<pre>Usage: twempest [OPTIONS] TEMPLATE\n\n  Download a sequence of recent Twitter tweets and convert these, via the\n  given template file, to text format. Twempest uses the Jinja template\n  syntax throughout: http://jinja.pocoo.org/docs/2.9/templates/\n\nOptions:\n  -c, --config-path TEXT  Twempest configuration directory path, which must be\n                          writable, and must also contain the twempest.conf\n                          file.  [default: ~/.twempest]\n  -A, --abbreviated       Render the abbreviated form of the tweet text rather\n                          than the full, extended, version.\n  -a, --append            Append rendered tweet(s) to existing file(s) rather\n                          than skipping past with a warning.\n  -n, --count TEXT        Maximum number of tweets to retrieve. The actual\n                          number may be lower.  [default: 200]\n  -D, --dry-run           Display all configuration options and template\n                          contents without retrieving tweets.\n  -i, --image-path TEXT   The directory path (template tags allowed) to write\n                          downloaded image (media type == 'photo') files. The\n                          directory path will be created if it doesn't exist.\n                          Media file names use the --render-file name followed\n                          by a number and the appropriate file extension. If\n                          omitted, media files will not be downloaded.\n  -u, --image-url TEXT    The URL path (template tags allowed) to use for all\n                          image files downloaded via the --image-path option.\n  --pickle                Serialize a list of the rendered tweet statuses as a\n                          standard Python pickle byte stream. The stream will\n                          be written to 'twempest.p' in the current working\n                          directory.\n  -q, --quiet             Suppress warning messages.\n  -f, --render-file TEXT  The file name (template tags allowed) for the\n                          rendered tweets. If omitted, tweets will be rendered\n                          to STDOUT.\n  -p, --render-path TEXT  The directory path (template tags allowed) to write\n                          the rendered tweet files. The directory path will be\n                          created if it doesn't exist.  [default: .]\n  -@, --replies           Include @replies in the list of retrieved tweets.\n  -r, --retweets          Include retweets in the list of retrieved tweets.\n  -s, --since-id TEXT     Retrieve tweets that follow this ID in the timeline.\n                          Required, unless the ID has already been recorded in\n                          the config path directory after a previous run of\n                          Twempest.\n  -k, --skip TEXT         Skip any rendered tweets that contain this regular\n                          expression pattern.\n  -V, --version           Show version and exit.\n  -h, --help              Show this message and exit.\n</pre>\n</div>\n<div id=\"sample-configuration\">\n<h2>Sample Configuration</h2>\n<p>Contents of <tt>twempest.config.sample</tt>:</p>\n<pre># Sample Twempest configuration file. See https://github.com/yukondude/Twempest\n# for details. Save this to ~/.twempest/twempest.config as the default\n# configuration whenever twempest is run, or save it somewhere convenient as\n# twempest.config and reference it via the -c/--config-path command-line switch.\n\n[twempest]\n# Most twempest long-form command-line switches may be used here (excluding the\n# leading double-dash). The obvious exceptions would include --config-path,\n# --help, and --version, but go ahead and try them if you like. The commented-\n# out defaults are shown below. See the --help output for details.\n\n# Render the full text of the tweet.\n# abbreviated=false\n\n# Do not append to existing files.\n# append=false\n\n# Retrieve at most 200 tweets.\n# count=200\n\n# Retrieve tweets normally.\n# dry-run=false\n\n# Do not download image files.\n# image-path=\n\n# Do not download image files.\n# image-url=\n\n# Do not serialize the rendered tweets.\n# pickle=false\n\n# Do not suppress warning messages.\n# quiet=false\n\n# Render tweets to STDOUT.\n# render-file=\n# Because template expressions are allowed for this option, you can generate\n# rendered file names using any of the tweet context variable contents. For\n# example: render-file={{tweet.created_at|isodate}}-{{tweet.text|slugify}}.md\n# might render to something like: 2017-02-14-be-my-valentine.md\n# Use the slugify filter to eliminate any non-filesystem-safe characters from\n# the tweet text.\n\n# Write rendered tweets to the current directory.\n# render-path=.\n# Template expressions are also allowed for this option, so the directory path\n# can be made to change based upon a tweet status variable.\n\n# Exclude @replies from the list of retrieved tweets.\n# replies=false\n\n# Exclude retweets from the list of retrieved tweets.\n# retweets=false\n\n# Don't specify a most recent Twitter ID.\n# since-id=\n# Since this isn't specified (and normally wouldn't be in a config file), there\n# must already be an ID recorded in the config path directory after a previous\n# run of Twempest.\n\n# Don't skip any tweets.\n# skip=\n\n[twitter]\n# Visit https://apps.twitter.com/ to generate these keys, secrets, tokens, and\n# token secrets. Secret tokens? Token keys? Secret secrets?\nconsumer_key=\nconsumer_secret=\naccess_token=\naccess_token_secret=\n</pre>\n</div>\n<div id=\"sample-template\">\n<h2>Sample Template</h2>\n<p>A simple template to render a tweet as Markdown text suitable for Jekyll\nposts (<tt>twempest.template.sample</tt>):</p>\n<pre>---\ntitle: '{{ tweet.text|delink|truncate(80,False)|qescape }}'\nauthor: '{{ tweet.user.name|qescape }}'\ndate: '{{ tweet.created_at }}'\ntweet_id: {{ tweet.id }}\n---\n{{ tweet.text | relink(\"[{{ text }}]({{ url }})\") | reimage(\"![{{ alt }}]({{ url }})\", \"\\n\\n\") }}\n\n[tweet](https://twitter.com/{{tweet.user.screen_name}}/status/{{ tweet.id }})\n</pre>\n<p>The rendered output of this template might look something like the\nfollowing:</p>\n<pre>---\ntitle: 'Ice fog &amp;#39;boiling&amp;#39; up from the Yukon River.'\nauthor: 'Dave Rogers'\ndate: '2016-12-06 12:12:36-08:00'\ntweet_id: 806229878861201408\n---\nIce fog 'boiling' up from the [#Yukon](https://twitter.com/hashtag/yukon) River.\n\n![2016-12-06-ice-fog-boiling-up-from-the-yukon-river-0](/media/2016-12-06-ice-fog-boiling-up-from-the-yukon-river-0.jpg)\n\n[tweet](https://twitter.com/yukondude/status/806229878861201408)\n</pre>\n</div>\n<div id=\"tweet-context-variable\">\n<h2><tt>tweet</tt> Context Variable</h2>\n<p>See the <a href=\"https://dev.twitter.com/overview/api/tweets\" rel=\"nofollow\">Twitter API documentation for\ntweets</a> for a list of\nall of the keys that can be found under the <tt>tweet</tt> context variable\n(a dictionary).</p>\n<p>A couple of other keys are also available:</p>\n<div id=\"tweet-media-original-media-url\">\n<h3><tt><span class=\"pre\">tweet.media[].original_media_url</span></tt></h3>\n<p>The original value of the <tt>media_url</tt> key within the list of <tt>media</tt>\nitems before any downloaded image URL rewriting took place.</p>\n</div>\n<div id=\"tweet-media-original-media-url-https\">\n<h3><tt><span class=\"pre\">tweet.media[].original_media_url_https</span></tt></h3>\n<p>The original value of the <tt>media_url_https</tt> key within the list of\n<tt>media</tt> items before any downloaded image URL rewriting took place.</p>\n</div>\n</div>\n<div id=\"template-filters\">\n<h2>Template Filters</h2>\n<p>These are in addition to the <a href=\"http://jinja.pocoo.org/docs/2.9/templates/#list-of-builtin-filters\" rel=\"nofollow\">built-in Jinja2\nfilters</a>.</p>\n<div id=\"delink\">\n<h3><tt>delink</tt></h3>\n<p>Remove URLs and hashtag \u2018#\u2019 prefixes.</p>\n</div>\n<div id=\"isodate\">\n<h3><tt>isodate</tt></h3>\n<p>Format a date as YYYY-MM-DD.</p>\n</div>\n<div id=\"qescape\">\n<h3><tt>qescape</tt></h3>\n<p>Escape just single quote characters as HTML entities.</p>\n</div>\n<div id=\"reimage-tag-format-delimiter\">\n<h3><tt>reimage(tag_format, delimiter=\" \")</tt></h3>\n<p>Remove image URLs and append them to the end (following the delimiter),\nusing the template tag_format with variables <tt>alt</tt> and <tt>url</tt> to\nformat each.</p>\n</div>\n<div id=\"relink-tag-format\">\n<h3><tt>relink(tag_format)</tt></h3>\n<p>Replace non-image URLs, hashtag, and user mention links, using the\ntemplate tag_format with variables <tt>text</tt> and <tt>url</tt> to format each.</p>\n</div>\n<div id=\"slugify\">\n<h3><tt>slugify</tt></h3>\n<p>Transform the given text into a suitable file name that is also scrubbed\nof URLs and hashtags.</p>\n<p><em>README.md generated December 11, 2018</em></p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4586680, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "eda413046d23ff2219b162c90364abfd", "sha256": "ef5f0858b32279da3b36c27aa2c9882d2936fd0057422b05b5c84ae778480b2b"}, "downloads": -1, "filename": "twempest-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "eda413046d23ff2219b162c90364abfd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18804, "upload_time": "2017-02-27T04:20:43", "upload_time_iso_8601": "2017-02-27T04:20:43.635732Z", "url": "https://files.pythonhosted.org/packages/f7/df/0eda7a4e570d84ba6081c918179769cb4dfcab0389ad644f72012a3e86d7/twempest-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7ee4cecd6bc97522f942d3aedbaf3bf", "sha256": "373ccd926159ca71bb456317167f0a60941a782716e546084a4bdb69b644748a"}, "downloads": -1, "filename": "twempest-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f7ee4cecd6bc97522f942d3aedbaf3bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28236, "upload_time": "2017-02-27T04:20:47", "upload_time_iso_8601": "2017-02-27T04:20:47.708336Z", "url": "https://files.pythonhosted.org/packages/60/fa/e1f0adf1a380f762d2f4b410196965a3e95605f7bb28f977340c1603c7c5/twempest-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "2dcdd3b2df7b6d7a4bd834d496920724", "sha256": "c830b01bc5b5893ad1567a224b145cd53d9899b80dcfcbdecf40d7885beeeae0"}, "downloads": -1, "filename": "twempest-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2dcdd3b2df7b6d7a4bd834d496920724", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19750, "upload_time": "2017-02-27T17:36:43", "upload_time_iso_8601": "2017-02-27T17:36:43.770236Z", "url": "https://files.pythonhosted.org/packages/21/ed/9cef41f3e0d047d30dae9f56942dccf16333c8c9efac30d0b7cb514173be/twempest-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "985f7883ed25c75a78c31093b5f8ff2a", "sha256": "ec78d16023206c2c82fdc0937ca6e2d39239fe840e3c559d78fea704886e3240"}, "downloads": -1, "filename": "twempest-0.1.3.tar.gz", "has_sig": false, "md5_digest": "985f7883ed25c75a78c31093b5f8ff2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29359, "upload_time": "2017-02-27T17:36:46", "upload_time_iso_8601": "2017-02-27T17:36:46.980467Z", "url": "https://files.pythonhosted.org/packages/bc/1e/77bd4d9a7fb0bd2273596b6778b496df92a8aa32b536afcc940a75852856/twempest-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "52f3f23b807c8a5ed371cbea87a85050", "sha256": "32102555aa5ea9f57ca818c6c23f77f45059f91dce110308593d9277b810888a"}, "downloads": -1, "filename": "twempest-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "52f3f23b807c8a5ed371cbea87a85050", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21291, "upload_time": "2017-03-06T04:09:29", "upload_time_iso_8601": "2017-03-06T04:09:29.515539Z", "url": "https://files.pythonhosted.org/packages/cd/6c/aaf1bd15473c7059d16c9b27a4cb6441866675e1e3f7f9f4129e1d2d77f8/twempest-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9095cd87c8290a5ff383046bb0bc7e8f", "sha256": "7aca62f2b089a9e1f06c3bb79054f4b9f75b4e4750b839da84c5346044b1a987"}, "downloads": -1, "filename": "twempest-0.1.4.tar.gz", "has_sig": false, "md5_digest": "9095cd87c8290a5ff383046bb0bc7e8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30815, "upload_time": "2017-03-06T04:09:33", "upload_time_iso_8601": "2017-03-06T04:09:33.257589Z", "url": "https://files.pythonhosted.org/packages/43/7c/d914fa033d0d749dc211bc24180f2614656fcb4cf354a757dbba430d7c2a/twempest-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "565e53aca754bae0c6920e5f6763d44e", "sha256": "e82bf115b53f39ddfdd73084a7199a1b2029a31641e24bf05e088d89b341299c"}, "downloads": -1, "filename": "twempest-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "565e53aca754bae0c6920e5f6763d44e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21302, "upload_time": "2017-03-06T04:22:17", "upload_time_iso_8601": "2017-03-06T04:22:17.737896Z", "url": "https://files.pythonhosted.org/packages/46/c7/9d5d96514afdc440e6827291abbd9d471d83dbcca22efeca2d000b1137b6/twempest-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0431e4b0b4c3fa3d8f93ee36f305d707", "sha256": "be965f6a5da530bdaf31606998d91d9a0d813657dc1cc0cacc53192428b3334a"}, "downloads": -1, "filename": "twempest-0.1.5.tar.gz", "has_sig": false, "md5_digest": "0431e4b0b4c3fa3d8f93ee36f305d707", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30810, "upload_time": "2017-03-06T04:22:25", "upload_time_iso_8601": "2017-03-06T04:22:25.646120Z", "url": "https://files.pythonhosted.org/packages/90/5b/f6ed3a96b42859c3615e1ffbd4dd65201370944b1b398cd6841510b9eb7d/twempest-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "0fc2163ce183442b2619138fb62782b3", "sha256": "62f303564c62755cc445ad532db3726bc3611f52fd1599d05df0e13178c99e6b"}, "downloads": -1, "filename": "twempest-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "0fc2163ce183442b2619138fb62782b3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21560, "upload_time": "2017-03-06T16:00:43", "upload_time_iso_8601": "2017-03-06T16:00:43.228242Z", "url": "https://files.pythonhosted.org/packages/9e/33/1f7e4313235c7438a391e9c18b410d04c5ab1e67d59d352254eda53eed28/twempest-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f981a98ca7f7951e811e2756231fc01", "sha256": "f52dba3eb075a4c31d12bd24fe9c5a3be172e37d0ba4b3e56d8de493589582e0"}, "downloads": -1, "filename": "twempest-0.1.6.tar.gz", "has_sig": false, "md5_digest": "5f981a98ca7f7951e811e2756231fc01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31165, "upload_time": "2017-03-06T16:00:46", "upload_time_iso_8601": "2017-03-06T16:00:46.690127Z", "url": "https://files.pythonhosted.org/packages/6c/c5/cab05273cc0e545090447816643cc320762ed44b4883135fc66d98e77390/twempest-0.1.6.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "673a7a626444c35f30b40f3e3fe6d787", "sha256": "bf5ce10033c35a93decfdeaf2239186dd0ae3bcaffa1ef1e7945db526ff4a6ce"}, "downloads": -1, "filename": "twempest-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "673a7a626444c35f30b40f3e3fe6d787", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21551, "upload_time": "2017-03-07T16:05:09", "upload_time_iso_8601": "2017-03-07T16:05:09.304056Z", "url": "https://files.pythonhosted.org/packages/61/7e/b33f2fba7f66334cc9d539eb7c5b7bd60095d9f54a06d1c4dfb801b548f8/twempest-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e774acc0d98792447b0e6b8a65a20922", "sha256": "428b715a3bec0819d29c036d408e2f744771d5b865b031fd7ebc38e5d1b97c3e"}, "downloads": -1, "filename": "twempest-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e774acc0d98792447b0e6b8a65a20922", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31156, "upload_time": "2017-03-07T16:05:12", "upload_time_iso_8601": "2017-03-07T16:05:12.563943Z", "url": "https://files.pythonhosted.org/packages/ed/f3/4478f56dd0aec948f4c560060d5ac7760cb37743c87707a50399a00c1d12/twempest-0.2.1.tar.gz", "yanked": false}], "0.2.10": [{"comment_text": "", "digests": {"md5": "4f97fbd4b1f1dc56c7e81cec49225976", "sha256": "f2f302b570b0d914ed2bafa7a3083c08e9b492fd223504f01237d2881898c173"}, "downloads": -1, "filename": "twempest-0.2.10-py3-none-any.whl", "has_sig": false, "md5_digest": "4f97fbd4b1f1dc56c7e81cec49225976", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34930, "upload_time": "2018-12-10T19:12:16", "upload_time_iso_8601": "2018-12-10T19:12:16.527749Z", "url": "https://files.pythonhosted.org/packages/a0/96/47924636f7fc82af6e77bcaa5cb39ba6bfbda89569513eb9ff00d0701111/twempest-0.2.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8736d24589c675e5cb82e07bc0e639fd", "sha256": "34f26d08fee61c8878dcd4ba075aa5eaf60da3a3bd61d4e7e606d46c647ddfb5"}, "downloads": -1, "filename": "twempest-0.2.10.tar.gz", "has_sig": false, "md5_digest": "8736d24589c675e5cb82e07bc0e639fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48250, "upload_time": "2018-12-10T19:12:23", "upload_time_iso_8601": "2018-12-10T19:12:23.961200Z", "url": "https://files.pythonhosted.org/packages/70/bc/cc8c8ba7afc1ecb1e314d2a939688c89236c009cf57b350302104ecaca63/twempest-0.2.10.tar.gz", "yanked": false}], "0.2.12": [{"comment_text": "", "digests": {"md5": "86d00057a08e987ea186b0c65278a5e5", "sha256": "8e3642be6e1e4effcc909fe35de0d3ea90423c100c75de1dd5466056c3275368"}, "downloads": -1, "filename": "twempest-0.2.12-py3-none-any.whl", "has_sig": false, "md5_digest": "86d00057a08e987ea186b0c65278a5e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35023, "upload_time": "2018-12-11T18:25:07", "upload_time_iso_8601": "2018-12-11T18:25:07.484631Z", "url": "https://files.pythonhosted.org/packages/d2/e4/6e4787869e1b1f8682be7a478392262b93049dbf67c62371a9688fb11dac/twempest-0.2.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ecd21932c3b18f01de60e83dbf640ed", "sha256": "801294f14dd33513153ec14ce24c3c914226d5bfbf62259f95f835ac52d13caa"}, "downloads": -1, "filename": "twempest-0.2.12.tar.gz", "has_sig": false, "md5_digest": "6ecd21932c3b18f01de60e83dbf640ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48579, "upload_time": "2018-12-11T18:25:15", "upload_time_iso_8601": "2018-12-11T18:25:15.098647Z", "url": "https://files.pythonhosted.org/packages/80/f9/6ebef897dc33f2638b0af28727b6eb3bf5758d2a63002f74480335393c09/twempest-0.2.12.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "fe76cf9b5e32693411163c446ea33550", "sha256": "0ad8ded0e8d34ff4ddd9c962e0a8a55dfac7bffad9bd80ce09cfbd97a99b4ad2"}, "downloads": -1, "filename": "twempest-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "fe76cf9b5e32693411163c446ea33550", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21551, "upload_time": "2017-03-08T05:04:12", "upload_time_iso_8601": "2017-03-08T05:04:12.050802Z", "url": "https://files.pythonhosted.org/packages/60/cc/31508e4363ef8f15e2ea272e9ad285c1ee851b6aede7a7fe138b76e8669c/twempest-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07f4e82286c14d1fc1e19614b74a145d", "sha256": "43ec0eb7d1affc0915234e9fdf86b360caa8bbbbc4a42bc32360920a7707a67b"}, "downloads": -1, "filename": "twempest-0.2.2.tar.gz", "has_sig": false, "md5_digest": "07f4e82286c14d1fc1e19614b74a145d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31134, "upload_time": "2017-03-08T05:04:16", "upload_time_iso_8601": "2017-03-08T05:04:16.028564Z", "url": "https://files.pythonhosted.org/packages/c1/e9/0dde7dead7e6fe7064e40e20f5ef6f96773af35a005d624e83612540c6f9/twempest-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "b314f76b1193cb62de420e20648c28d0", "sha256": "d25df355bcddf3ed91b45b0c32557f06d1c0827a809d30c989ad7a91a305ad92"}, "downloads": -1, "filename": "twempest-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b314f76b1193cb62de420e20648c28d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21551, "upload_time": "2017-03-08T05:46:01", "upload_time_iso_8601": "2017-03-08T05:46:01.454542Z", "url": "https://files.pythonhosted.org/packages/17/09/d9646811d1784f7050f4cc5b03503ebd291285ad2b0540bd54ebdae2e6d0/twempest-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b74acb6f35d8819b4e3ae747ad657bf6", "sha256": "aea1d9a132fc10e9049747732e300314ad03ce643cc7554e1b7105452025d5c8"}, "downloads": -1, "filename": "twempest-0.2.3.tar.gz", "has_sig": false, "md5_digest": "b74acb6f35d8819b4e3ae747ad657bf6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31644, "upload_time": "2017-03-08T05:46:05", "upload_time_iso_8601": "2017-03-08T05:46:05.131814Z", "url": "https://files.pythonhosted.org/packages/73/93/b8ed62d49058fd6617b06cafbe0e9e065e9a2df8a69c18b5ae34ae1f5728/twempest-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "3deffbaee8066536fd80fe2d373e7b1e", "sha256": "bdfc482842f4dbfe445d9f325b42475952e57f62318e30bc0519e1895800bf58"}, "downloads": -1, "filename": "twempest-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3deffbaee8066536fd80fe2d373e7b1e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21675, "upload_time": "2017-03-08T21:43:30", "upload_time_iso_8601": "2017-03-08T21:43:30.637757Z", "url": "https://files.pythonhosted.org/packages/d3/13/a24c18cc1203da9b79e39a00052b84d475c678061af999438483f5f3f18d/twempest-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0daf22af5b05e010604c3b189412e168", "sha256": "aef5953256f3a3035490835ca03b43772be159645eb37e20d0e95202669b299b"}, "downloads": -1, "filename": "twempest-0.2.4.tar.gz", "has_sig": false, "md5_digest": "0daf22af5b05e010604c3b189412e168", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31758, "upload_time": "2017-03-08T21:43:34", "upload_time_iso_8601": "2017-03-08T21:43:34.394975Z", "url": "https://files.pythonhosted.org/packages/d4/32/2fef22b585dcb967683c81838f522562bde6d2c9afba769a46489668a92f/twempest-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "6779d61559ac5f1b5fba67ca660f8397", "sha256": "e509c8ac662647785b621958e3b0d3240efc0097ebe2107c6f2a3aed52381cc2"}, "downloads": -1, "filename": "twempest-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "6779d61559ac5f1b5fba67ca660f8397", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26302, "upload_time": "2017-03-14T15:58:34", "upload_time_iso_8601": "2017-03-14T15:58:34.847145Z", "url": "https://files.pythonhosted.org/packages/92/e7/62c62152c3050808134697974411e299a47ac0fd710e1e9151371aa9a933/twempest-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73d5f693b7e731105e53454fccc3437f", "sha256": "0f100c04f6d7226f88ca1915c7627830f3bc02b6e048b2bf1c495c974e29a745"}, "downloads": -1, "filename": "twempest-0.2.5.tar.gz", "has_sig": false, "md5_digest": "73d5f693b7e731105e53454fccc3437f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35381, "upload_time": "2017-03-14T15:58:37", "upload_time_iso_8601": "2017-03-14T15:58:37.986595Z", "url": "https://files.pythonhosted.org/packages/90/e2/addcf6c926b712cd9bdcd73381220fb32dc8ef240e3e89e3b0f2ae26a057/twempest-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "a9c2c944eb6ac016fd291acce122a84f", "sha256": "b768d82ee5804eaa7e0af0b12592ad2dd4d3e8babe7b69a3b25bb560d8f43986"}, "downloads": -1, "filename": "twempest-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "a9c2c944eb6ac016fd291acce122a84f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27654, "upload_time": "2017-03-16T17:25:30", "upload_time_iso_8601": "2017-03-16T17:25:30.507831Z", "url": "https://files.pythonhosted.org/packages/47/0b/d9d2a936e33f603701c1313807730bef3a37bc331c82450e46b3de62180c/twempest-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "431f0136f09453cba1bece5e706d33cf", "sha256": "444653ba1e544f98506b196650e6cca29fdd70988785b311368425ee643e593b"}, "downloads": -1, "filename": "twempest-0.2.6.tar.gz", "has_sig": false, "md5_digest": "431f0136f09453cba1bece5e706d33cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36961, "upload_time": "2017-03-16T17:25:33", "upload_time_iso_8601": "2017-03-16T17:25:33.805832Z", "url": "https://files.pythonhosted.org/packages/07/57/23e540fe6d291fbd6d2c506dec28083337bc04d54ee7f63c4ec4daab292b/twempest-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "56eba110c8a8022d7875aa956fa3cd3e", "sha256": "6d00f734a0ba1ac36bb7f99df83cd4cdda4261431ec40cc73edf1b1443376f5d"}, "downloads": -1, "filename": "twempest-0.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "56eba110c8a8022d7875aa956fa3cd3e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34848, "upload_time": "2018-12-09T17:04:23", "upload_time_iso_8601": "2018-12-09T17:04:23.915873Z", "url": "https://files.pythonhosted.org/packages/95/7d/be196e6480d70946e47485f3c477b5b375888ed82ca09f25feace32cf069/twempest-0.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d0af555851ff3c0c9d6672bae87d92b", "sha256": "819e78979a42ab7845206c93d1619cf307b7a8452c06c20fc53a47e2f16427ec"}, "downloads": -1, "filename": "twempest-0.2.7.tar.gz", "has_sig": false, "md5_digest": "3d0af555851ff3c0c9d6672bae87d92b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37258, "upload_time": "2018-12-09T17:05:21", "upload_time_iso_8601": "2018-12-09T17:05:21.914287Z", "url": "https://files.pythonhosted.org/packages/00/7a/0e06470116e4194da6945053d69baa626072596d7c2fd18a10bbe21803c6/twempest-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "148c7163abb945892dc727c6a0f80bdf", "sha256": "aefc6ffdafec8dc00c62946a8385ba1c6d67efa9963d566794076adcf8c48468"}, "downloads": -1, "filename": "twempest-0.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "148c7163abb945892dc727c6a0f80bdf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34913, "upload_time": "2018-12-10T18:40:10", "upload_time_iso_8601": "2018-12-10T18:40:10.697716Z", "url": "https://files.pythonhosted.org/packages/9f/e2/d0e7e2eb7de30c43fd50e8df2767d74fb1b1d440488a1b10344342fef200/twempest-0.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f46f6c393fb218425dab6920c62d9938", "sha256": "48997e64e7d1e59a68f57e6e25f77d63bf71f51ff097fb161fd9945949af2460"}, "downloads": -1, "filename": "twempest-0.2.8.tar.gz", "has_sig": false, "md5_digest": "f46f6c393fb218425dab6920c62d9938", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37345, "upload_time": "2018-12-10T18:40:19", "upload_time_iso_8601": "2018-12-10T18:40:19.080856Z", "url": "https://files.pythonhosted.org/packages/bf/3c/0dcee8ac133a309c47caf890a674332be84af3058ffc4caf552f76583441/twempest-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "d2922fdeb52d3c3ad25693c4d207c633", "sha256": "af1e9fe1a93c19dc769e290ddebce5cb32f1efd273bbcc9bec8946d7354e29ab"}, "downloads": -1, "filename": "twempest-0.2.9-py3-none-any.whl", "has_sig": false, "md5_digest": "d2922fdeb52d3c3ad25693c4d207c633", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34917, "upload_time": "2018-12-10T19:02:44", "upload_time_iso_8601": "2018-12-10T19:02:44.758291Z", "url": "https://files.pythonhosted.org/packages/ff/34/856a288430e0ae59ee6e23df7cd23f2d71239156629685808e4f0204e6fa/twempest-0.2.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bbd11c9b84c369e8fa500b079d6124b", "sha256": "77ed055919a56e077768fc347bdb846225b57d98c69600c926c9398867794ccd"}, "downloads": -1, "filename": "twempest-0.2.9.tar.gz", "has_sig": false, "md5_digest": "9bbd11c9b84c369e8fa500b079d6124b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37339, "upload_time": "2018-12-10T19:02:51", "upload_time_iso_8601": "2018-12-10T19:02:51.708480Z", "url": "https://files.pythonhosted.org/packages/d4/47/e284c87a21866ab4c41c8049dd72901910296ef03e40061c3562cf3aff3c/twempest-0.2.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "86d00057a08e987ea186b0c65278a5e5", "sha256": "8e3642be6e1e4effcc909fe35de0d3ea90423c100c75de1dd5466056c3275368"}, "downloads": -1, "filename": "twempest-0.2.12-py3-none-any.whl", "has_sig": false, "md5_digest": "86d00057a08e987ea186b0c65278a5e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35023, "upload_time": "2018-12-11T18:25:07", "upload_time_iso_8601": "2018-12-11T18:25:07.484631Z", "url": "https://files.pythonhosted.org/packages/d2/e4/6e4787869e1b1f8682be7a478392262b93049dbf67c62371a9688fb11dac/twempest-0.2.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ecd21932c3b18f01de60e83dbf640ed", "sha256": "801294f14dd33513153ec14ce24c3c914226d5bfbf62259f95f835ac52d13caa"}, "downloads": -1, "filename": "twempest-0.2.12.tar.gz", "has_sig": false, "md5_digest": "6ecd21932c3b18f01de60e83dbf640ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48579, "upload_time": "2018-12-11T18:25:15", "upload_time_iso_8601": "2018-12-11T18:25:15.098647Z", "url": "https://files.pythonhosted.org/packages/80/f9/6ebef897dc33f2638b0af28727b6eb3bf5758d2a63002f74480335393c09/twempest-0.2.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:44:04 2020"}