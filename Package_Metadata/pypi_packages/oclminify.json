{"info": {"author": "James Bendig", "author_email": "jbendig@starbytesoftware.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "oclminify\n=========\n\n**oclminify** is an `OpenCL\u2122 <https://www.khronos.org/opencl/>`__ source\nminifier. It takes OpenCL source code and makes it as small as possible\nby stripping comments, removing unnecessary space, renaming symbols,\nrewriting vector indices, etc. The minified source can be optionally\ncompressed and then saved as is or as a C header. The latter makes it\nvery easy to embed into a compiled application. The original source and\nthe minified source are functionally identical and should compile into\nthe exact same byte code.\n\nIf you're targeting platforms with OpenCL 2.0 or later support, you\nshould consider using `SPIR\u2122 <https://www.khronos.org/spir>`__ instead.\n\noclminify was originally developed by the\n`Phoduit <https://phoduit.com>`__ team.\n\nPrerequisites\n-------------\n\n-  `Python\u00ae <https://www.python.org/>`__ >= 2.7 (Python 3 is also\n   supported)\n-  `pycparser <https://github.com/eliben/pycparser>`__ >= 2.17\n-  `pycparserext <https://github.com/inducer/pycparserext>`__ >= 2016.2\n-  `pyopencl <https://mathema.tician.de/software/pyopencl/>`__ >= 2016.1\n   (optional, checks if source can be compiled before minifying)\n-  `GCC <https://gcc.gnu.org/>`__, `cpp <https://gcc.gnu.org/>`__,\n   `MSVC <https://www.visualstudio.com/>`__ or another C preprocessor\n\nInstall\n-------\n\n>From the command line:\n\n::\n\n    pip install oclminify\n\nIf you want oclminify to support a compile check before minification,\nwith an actual OpenCL driver, install pyopencl with:\n\n::\n\n    pip install pyopencl\n\nUsage\n-----\n\n::\n\n    oclminify [-h] [--preprocessor-command PREPROCESSOR_COMMAND]\n              [--preprocessor-no-stdin] [--no-preprocess] [--no-minify]\n              [--compress] [--strip-zlib-header] [--header]\n              [--header-function-args] [--minify-kernel-names]\n              [--global-postfix GLOBAL_POSTFIX] [--try-build]\n              [--output-file OUTPUT_FILE]\n              input\n\noclminify takes a single input file. If the input file is - (a single\nhyphen), input will be read from STDIN. If the --output-file option is\nomitted, the output is written to STDOUT.\n\nThe available options are:\n\n::\n\n      -h, --help            show this help message and exit\n      --preprocessor-command PREPROCESSOR_COMMAND\n                            Command to preprocess input source before\n                            minification. Defaults to \"gcc -E -undef -P -std=c99\n                            -\"\n      --preprocessor-no-stdin\n                            Pass input to preprocessor using a temporary file\n                            instead of stdin.\n      --no-preprocess       Skip preprocessing step. Implies --no-minify.\n      --no-minify           Skip minification step. Useful when debugging.\n      --compress            Compress output using zlib.\n      --strip-zlib-header   Strips the two byte zlib header from the compressed\n                            output when --compress is used.\n      --header              Embed output in a C header file.\n      --header-function-args\n                            Include function argument mappings in C header file.\n      --minify-kernel-names\n                            Replace kernel function names with shorter names.\n      --global-postfix GLOBAL_POSTFIX\n                            Postfix appended to each symbol name in the global\n                            scope. Used for preventing name collisions when\n                            minifying multiple source files separately. Implies\n                            --minify-kernel-names.\n      --try-build           Try to build the input using an OpenCL compiler before\n                            minifying. The compiled output is discarded. Requires\n                            pyopencl.\n      --output-file OUTPUT_FILE\n                            File path where output should be saved. Omit to write\n                            to stdout.\n\nExamples\n--------\n\nTo simply minify an OpenCL source file and write the result to file,\nrun:\n\n::\n\n    oclminify --output-file output.minified.cl input.cl\n\nThe examples directory contains more examples:\n\n-  ``examples/minimal`` \u2014 shows how to create a minimal project that\n   minifies an OpenCL source file and builds a C based project using a\n   shell script.\n\n-  ``examples/cmake`` \u2014 shows how to integrate oclminify with a\n   `CMake <https://cmake.org/>`__ based C++ project.\n\n-  ``examples/compress`` \u2014 shows how to use oclminify in a CMake project\n   to compress an OpenCL source file at compile time and then decompress\n   it at run time.\n\nLegal\n-----\n\n-  OpenCL is a trademark of Apple Inc., under license by Khronos.\n-  SPIR is a trademark of the Khronos Group Inc.\n-  Python is a registered trademark of the Python Software Foundation.\n-  Copyright (c) 2016 StarByte Software, Inc. All rights reserved.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/StarByteSoftware/oclminify", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "oclminify", "package_url": "https://pypi.org/project/oclminify/", "platform": "Cross Platform", "project_url": "https://pypi.org/project/oclminify/", "project_urls": {"Homepage": "https://github.com/StarByteSoftware/oclminify"}, "release_url": "https://pypi.org/project/oclminify/0.8.0/", "requires_dist": ["pycparser (>=2.17)", "pycparserext (>=2016.2)", "PyOpenCL (>=2016.1); extra == 'build'"], "requires_python": "", "summary": "Minify OpenCL source files.", "version": "0.8.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>oclminify</strong> is an <a href=\"https://www.khronos.org/opencl/\" rel=\"nofollow\">OpenCL\u2122</a> source\nminifier. It takes OpenCL source code and makes it as small as possible\nby stripping comments, removing unnecessary space, renaming symbols,\nrewriting vector indices, etc. The minified source can be optionally\ncompressed and then saved as is or as a C header. The latter makes it\nvery easy to embed into a compiled application. The original source and\nthe minified source are functionally identical and should compile into\nthe exact same byte code.</p>\n<p>If you\u2019re targeting platforms with OpenCL 2.0 or later support, you\nshould consider using <a href=\"https://www.khronos.org/spir\" rel=\"nofollow\">SPIR\u2122</a> instead.</p>\n<p>oclminify was originally developed by the\n<a href=\"https://phoduit.com\" rel=\"nofollow\">Phoduit</a> team.</p>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<ul>\n<li><a href=\"https://www.python.org/\" rel=\"nofollow\">Python\u00ae</a> &gt;= 2.7 (Python 3 is also\nsupported)</li>\n<li><a href=\"https://github.com/eliben/pycparser\" rel=\"nofollow\">pycparser</a> &gt;= 2.17</li>\n<li><a href=\"https://github.com/inducer/pycparserext\" rel=\"nofollow\">pycparserext</a> &gt;= 2016.2</li>\n<li><a href=\"https://mathema.tician.de/software/pyopencl/\" rel=\"nofollow\">pyopencl</a> &gt;= 2016.1\n(optional, checks if source can be compiled before minifying)</li>\n<li><a href=\"https://gcc.gnu.org/\" rel=\"nofollow\">GCC</a>, <a href=\"https://gcc.gnu.org/\" rel=\"nofollow\">cpp</a>,\n<a href=\"https://www.visualstudio.com/\" rel=\"nofollow\">MSVC</a> or another C preprocessor</li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>&gt;From the command line:</p>\n<pre>pip install oclminify\n</pre>\n<p>If you want oclminify to support a compile check before minification,\nwith an actual OpenCL driver, install pyopencl with:</p>\n<pre>pip install pyopencl\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>oclminify [-h] [--preprocessor-command PREPROCESSOR_COMMAND]\n          [--preprocessor-no-stdin] [--no-preprocess] [--no-minify]\n          [--compress] [--strip-zlib-header] [--header]\n          [--header-function-args] [--minify-kernel-names]\n          [--global-postfix GLOBAL_POSTFIX] [--try-build]\n          [--output-file OUTPUT_FILE]\n          input\n</pre>\n<p>oclminify takes a single input file. If the input file is - (a single\nhyphen), input will be read from STDIN. If the \u2013output-file option is\nomitted, the output is written to STDOUT.</p>\n<p>The available options are:</p>\n<pre>-h, --help            show this help message and exit\n--preprocessor-command PREPROCESSOR_COMMAND\n                      Command to preprocess input source before\n                      minification. Defaults to \"gcc -E -undef -P -std=c99\n                      -\"\n--preprocessor-no-stdin\n                      Pass input to preprocessor using a temporary file\n                      instead of stdin.\n--no-preprocess       Skip preprocessing step. Implies --no-minify.\n--no-minify           Skip minification step. Useful when debugging.\n--compress            Compress output using zlib.\n--strip-zlib-header   Strips the two byte zlib header from the compressed\n                      output when --compress is used.\n--header              Embed output in a C header file.\n--header-function-args\n                      Include function argument mappings in C header file.\n--minify-kernel-names\n                      Replace kernel function names with shorter names.\n--global-postfix GLOBAL_POSTFIX\n                      Postfix appended to each symbol name in the global\n                      scope. Used for preventing name collisions when\n                      minifying multiple source files separately. Implies\n                      --minify-kernel-names.\n--try-build           Try to build the input using an OpenCL compiler before\n                      minifying. The compiled output is discarded. Requires\n                      pyopencl.\n--output-file OUTPUT_FILE\n                      File path where output should be saved. Omit to write\n                      to stdout.\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>To simply minify an OpenCL source file and write the result to file,\nrun:</p>\n<pre>oclminify --output-file output.minified.cl input.cl\n</pre>\n<p>The examples directory contains more examples:</p>\n<ul>\n<li><tt>examples/minimal</tt> \u2014 shows how to create a minimal project that\nminifies an OpenCL source file and builds a C based project using a\nshell script.</li>\n<li><tt>examples/cmake</tt> \u2014 shows how to integrate oclminify with a\n<a href=\"https://cmake.org/\" rel=\"nofollow\">CMake</a> based C++ project.</li>\n<li><tt>examples/compress</tt> \u2014 shows how to use oclminify in a CMake project\nto compress an OpenCL source file at compile time and then decompress\nit at run time.</li>\n</ul>\n</div>\n<div id=\"legal\">\n<h2>Legal</h2>\n<ul>\n<li>OpenCL is a trademark of Apple Inc., under license by Khronos.</li>\n<li>SPIR is a trademark of the Khronos Group Inc.</li>\n<li>Python is a registered trademark of the Python Software Foundation.</li>\n<li>Copyright (c) 2016 StarByte Software, Inc. All rights reserved.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2516970, "releases": {"0.6.0": [{"comment_text": "", "digests": {"md5": "881f0173ebc1cf56bf8875c50bc47519", "sha256": "cec46ae2b4093ba7bda0558e894f84c95b28f61c2b7d64d792d623dc2a1ebfa0"}, "downloads": -1, "filename": "oclminify-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "881f0173ebc1cf56bf8875c50bc47519", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 39500, "upload_time": "2016-08-19T19:58:28", "upload_time_iso_8601": "2016-08-19T19:58:28.548079Z", "url": "https://files.pythonhosted.org/packages/6b/c5/c3372aab5f1e600c23ba085a18c0276c86ab0fb51d48ad075ec31b613dc0/oclminify-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a78726474bacfe7f4dd539e8e24cd5f3", "sha256": "bf9540b13e91e7d8aa74be4c93a27be485c278247a082c944bf89482620737a0"}, "downloads": -1, "filename": "oclminify-0.6.0.tar.gz", "has_sig": false, "md5_digest": "a78726474bacfe7f4dd539e8e24cd5f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22855, "upload_time": "2016-08-19T19:58:30", "upload_time_iso_8601": "2016-08-19T19:58:30.974676Z", "url": "https://files.pythonhosted.org/packages/10/a5/5db05f4f1da1f0cfc86e82afb7b034d0c39d52fff9d32a8c1b28bcdfb8a4/oclminify-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "6ca46872056e04cd01a85582cf6118da", "sha256": "819f183ed1f64946e9e977c2e99d15e5ea14af4c4d91f068a013f9f7648ceb4e"}, "downloads": -1, "filename": "oclminify-0.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6ca46872056e04cd01a85582cf6118da", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28991, "upload_time": "2016-09-27T17:07:40", "upload_time_iso_8601": "2016-09-27T17:07:40.284308Z", "url": "https://files.pythonhosted.org/packages/c9/5f/86c86d0d5aa6ddf579ca886a874c15ba5fd7e91bed4f2c58626ddb724591/oclminify-0.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49281238a3bda72f1e6de1f1363d0781", "sha256": "07c6ac1839080b1985c51ca23defd2d703735723fdfc504ca18d35ee4f0fd845"}, "downloads": -1, "filename": "oclminify-0.7.0.tar.gz", "has_sig": false, "md5_digest": "49281238a3bda72f1e6de1f1363d0781", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29155, "upload_time": "2016-09-27T17:07:42", "upload_time_iso_8601": "2016-09-27T17:07:42.145817Z", "url": "https://files.pythonhosted.org/packages/50/63/25065be93b6f0aee664081aaa4bd5a3da2c971b1779caa80488d03b0dcf9/oclminify-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "be56315a10c6a6db034f19a06457e231", "sha256": "996da4168b9ab55dc1ab56f241f0e11f26eae480f72990f2b6ac0d2517d6e150"}, "downloads": -1, "filename": "oclminify-0.8.0-2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "be56315a10c6a6db034f19a06457e231", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28337, "upload_time": "2016-12-13T18:54:43", "upload_time_iso_8601": "2016-12-13T18:54:43.587886Z", "url": "https://files.pythonhosted.org/packages/b5/28/f2e409846ade042758ee177f9a26c7d01a12425d00525f160c2b37757297/oclminify-0.8.0-2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a8ba36d34dee7fb6630f97f8520cb48", "sha256": "a0c15fb98a11885acffdec2559a795563202d62124c8031b207e606089b407ec"}, "downloads": -1, "filename": "oclminify-0.8.0-2.tar.gz", "has_sig": false, "md5_digest": "4a8ba36d34dee7fb6630f97f8520cb48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28809, "upload_time": "2016-12-13T18:54:45", "upload_time_iso_8601": "2016-12-13T18:54:45.445101Z", "url": "https://files.pythonhosted.org/packages/a4/74/e162247a22c4fd0c48f8682a2dc0b283f5dac7e29868aafe8f8d7e779f48/oclminify-0.8.0-2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be56315a10c6a6db034f19a06457e231", "sha256": "996da4168b9ab55dc1ab56f241f0e11f26eae480f72990f2b6ac0d2517d6e150"}, "downloads": -1, "filename": "oclminify-0.8.0-2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "be56315a10c6a6db034f19a06457e231", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28337, "upload_time": "2016-12-13T18:54:43", "upload_time_iso_8601": "2016-12-13T18:54:43.587886Z", "url": "https://files.pythonhosted.org/packages/b5/28/f2e409846ade042758ee177f9a26c7d01a12425d00525f160c2b37757297/oclminify-0.8.0-2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a8ba36d34dee7fb6630f97f8520cb48", "sha256": "a0c15fb98a11885acffdec2559a795563202d62124c8031b207e606089b407ec"}, "downloads": -1, "filename": "oclminify-0.8.0-2.tar.gz", "has_sig": false, "md5_digest": "4a8ba36d34dee7fb6630f97f8520cb48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28809, "upload_time": "2016-12-13T18:54:45", "upload_time_iso_8601": "2016-12-13T18:54:45.445101Z", "url": "https://files.pythonhosted.org/packages/a4/74/e162247a22c4fd0c48f8682a2dc0b283f5dac7e29868aafe8f8d7e779f48/oclminify-0.8.0-2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:40 2020"}