{"info": {"author": "Ankur Srivastava", "author_email": "", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "# docker-volume-manager\nManage your named docker volumes using this simple script.\n\n\n### Managing docker-volumes with a simple script.\n-----\n### Usage:\n\n1. Clone this repository:\n\n  `git clone https://github.com/ansrivas/docker-volume-manager.git`\n\n2. Go to the directory and install this locally:\n\n  `cd docker-volume-manager && pip install -e .`\n\n3. To save a named-docker-volume:\n\n  `docker-volume-manager save --volume <existing_named_volume>`\n\n4. To load an already saved local volume to a named-docker-volume:\n\n  `docker-volume-manager load --volume <new_volume_name> --path <absolute_path_to_your_saved_volume>`\n\n5. More options can be seen by using the help:\n\n  `docker-volume-manager --help`\n\n6. A simple use case could be to backup files:\n  ```bash\n  # cat backup_script.py\n  import os\n  import subprocess\n  import time\n\n  files = os.listdir('./')\n  tars = [f for f in files if f.endswith('.tar.gz')]\n  to_keep = sorted(tars)[-7:]\n  for tar in tars:\n      if tar not in to_keep:\n          os.remove(tar)\n\n  command = [\"/usr/bin/docker-volume-manager\", \"save\", \"--volume\", \"your_docker_data_volume\", \"--interactive\",\"False\"]\n  subprocess.check_output(command )\n  ```\n\n###### Disclaimer: Do not use it directly in a production environment. Test it locally before using it out there.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/ansrivas/docker-volume-manager/archive/1.0.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "docker-volume-manager", "package_url": "https://pypi.org/project/docker-volume-manager/", "platform": "", "project_url": "https://pypi.org/project/docker-volume-manager/", "project_urls": {"Download": "https://github.com/ansrivas/docker-volume-manager/archive/1.0.0.tar.gz"}, "release_url": "https://pypi.org/project/docker-volume-manager/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Convenient cli app for docker volume management.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            # docker-volume-manager<br>Manage your named docker volumes using this simple script.<br><br><br>### Managing docker-volumes with a simple script.<br>-----<br>### Usage:<br><br>1. Clone this repository:<br><br>  `git clone https://github.com/ansrivas/docker-volume-manager.git`<br><br>2. Go to the directory and install this locally:<br><br>  `cd docker-volume-manager &amp;&amp; pip install -e .`<br><br>3. To save a named-docker-volume:<br><br>  `docker-volume-manager save --volume &lt;existing_named_volume&gt;`<br><br>4. To load an already saved local volume to a named-docker-volume:<br><br>  `docker-volume-manager load --volume &lt;new_volume_name&gt; --path &lt;absolute_path_to_your_saved_volume&gt;`<br><br>5. More options can be seen by using the help:<br><br>  `docker-volume-manager --help`<br><br>6. A simple use case could be to backup files:<br>  ```bash<br>  # cat backup_script.py<br>  import os<br>  import subprocess<br>  import time<br><br>  files = os.listdir('./')<br>  tars = [f for f in files if f.endswith('.tar.gz')]<br>  to_keep = sorted(tars)[-7:]<br>  for tar in tars:<br>      if tar not in to_keep:<br>          os.remove(tar)<br><br>  command = [\"/usr/bin/docker-volume-manager\", \"save\", \"--volume\", \"your_docker_data_volume\", \"--interactive\",\"False\"]<br>  subprocess.check_output(command )<br>  ```<br><br>###### Disclaimer: Do not use it directly in a production environment. Test it locally before using it out there.\n          </div>"}, "last_serial": 3249261, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "35daed8efa3ec1dcf4996851c270778e", "sha256": "aec52eb61c369ebbed6e478eb8f02cdfa9766e7032989475c42b3a9187e2ee10"}, "downloads": -1, "filename": "docker-volume-manager-1.0.2.tar.gz", "has_sig": false, "md5_digest": "35daed8efa3ec1dcf4996851c270778e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4110, "upload_time": "2017-10-13T22:45:30", "upload_time_iso_8601": "2017-10-13T22:45:30.730785Z", "url": "https://files.pythonhosted.org/packages/46/9d/44cc14d13563c66604fb0ac7c3bfd43b39eade9a070452ff75c60e7761c8/docker-volume-manager-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "35daed8efa3ec1dcf4996851c270778e", "sha256": "aec52eb61c369ebbed6e478eb8f02cdfa9766e7032989475c42b3a9187e2ee10"}, "downloads": -1, "filename": "docker-volume-manager-1.0.2.tar.gz", "has_sig": false, "md5_digest": "35daed8efa3ec1dcf4996851c270778e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4110, "upload_time": "2017-10-13T22:45:30", "upload_time_iso_8601": "2017-10-13T22:45:30.730785Z", "url": "https://files.pythonhosted.org/packages/46/9d/44cc14d13563c66604fb0ac7c3bfd43b39eade9a070452ff75c60e7761c8/docker-volume-manager-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:46 2020"}