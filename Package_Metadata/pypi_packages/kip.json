{"info": {"author": "Graham King", "author_email": "graham@gkgk.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Utilities"], "description": "% KIP(1)\n% Graham King\n% 26 OCT 2012\n\n# NAME\n\nkip - Keeps Internet Passwords. Command line script to keep usernames and passwords in gnupg encrypted text files.\n\n# SYNPOSIS\n\nkip get|add|list|edit|del [filepart] [--username USERNAME] [--notes NOTES] [--prompt] [--print]\n\n# INSTALL\n\nMake sure you have a gnupg key pair:\n[GnuPG HOWTO](https://help.ubuntu.com/community/GnuPrivacyGuardHowto).\n\nLatest release: `sudo pip install kip`\n\nLatest dev:\n\n 1. Clone the repo: `git clone https://github.com/grahamking/kip.git`\n 1. Install: `sudo python3 setup.py install`\n\n**Ubuntu**: [PPA with 'precise' package](https://launchpad.net/~graham-king/+archive/ppa)\n\n**Arch Linux**: [kip package for Arch](https://aur.archlinux.org/packages.php?ID=62555).\nThanks [Pezz](https://github.com/pezz)!\n\n# COMMANDS\n\n## add\n\n`kip add example.com --usename username`\n\nWhat it does:\n\n 1. Generates a random password\n 2. Writes username and password to text file `~/.kip/passwords/example.com`\n 3. Encrypts and signs it by running `gpg --encrypt --sign --armor`\n 4. Copies the new password to your clipboard\n\nAdd optional notes: `kip add example.com --username username --notes \"My notes\"`.\nYou can ask to be pompted for the password, instead of using a random one: `kip add example.com --username username --prompt`\n\n## get\n\n`kip example.com`\n\nWhat it does:\n\n 1. Looks for `~/.kip/passwords/*example.com*`, decrypts it by running `gpg --decrypt`\n 2. Prints your username in bold, and any notes your stored.\n 3. Copies your password to the clipboard\n\n## list\n\n`kip list \"*.org\"`\n\nList contents of your password directory. [filepart] argument is a glob to filter the directory list. You can use ls too!\n\n## edit\n\n`kip edit example.com --username newuser`\n\nChange the username inside a password file.  [filepart] is the file to edit, and --username sets a new username.\n\n## del\n\n`kip del example.com`\n\nDelete a password file. [filepart] is the file to delete. You can use rm too!\n\n## import\\_from\\_chrome\n\nImport passwords that Chrome stored in Gnome Keyring. This requires gnomekeyring (python lib) and python2.\n\n# DEPENDENCIES\n\ngnupg to encrypt password files, xclip (linux) or pbcopy (OSX) to copy password to clipboard, and python3 but you have that already.\n\nOn Ubuntu / Debian: `sudo apt-get install gnupg xclip`\n\n# CONFIGURATION\n\nIf you want to use different commands to encrypt / decrypt your files, want longer passwords, etc, you can.  Copy `kip.conf` from the repo to `~/.kip/kip.conf`, and customise it. It's an INI file, using = or : as the delimiter. Make sure the `home` path does not end with a slash.\n\n# NOTES\n\n[GnuPG](http://www.gnupg.org/) is secure, open, multi-platform, and will probably be around forever. Can you say the same thing about the way you store your passwords currently?\n\nI was using the excellent [Keepass](http://en.wikipedia.org/wiki/KeePass) when I got concerned about it no longer being developed or supported. How would I get my passwords out? So I wrote this very simple wrapper for gnupg.\n\nIf you live in the command line, I think you will find **kip** makes your life a little bit better.\n\n# FILES\n\nThere's 0 magic involved. Your accounts details are in text files, in your home directory. Each one is encrypted with your public key and signed with your private key. You can ditch **kip** at any time.\n\nBrowse your files: `ls ~/.kip/passwords/`\n\nDisplay contents manually: `gpg -d ~/.kip/passwords/facebook`", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/grahamking/kip", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "kip", "package_url": "https://pypi.org/project/kip/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/kip/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/grahamking/kip"}, "release_url": "https://pypi.org/project/kip/0.3.1/", "requires_dist": null, "requires_python": null, "summary": "kip Keeps Passwords", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>% KIP(1)\n% Graham King\n% 26 OCT 2012</p>\n<p># NAME</p>\n<p>kip - Keeps Internet Passwords. Command line script to keep usernames and passwords in gnupg encrypted text files.</p>\n<p># SYNPOSIS</p>\n<p>kip get|add|list|edit|del [filepart] [\u2013username USERNAME] [\u2013notes NOTES] [\u2013prompt] [\u2013print]</p>\n<p># INSTALL</p>\n<p>Make sure you have a gnupg key pair:\n[GnuPG HOWTO](<a href=\"https://help.ubuntu.com/community/GnuPrivacyGuardHowto\" rel=\"nofollow\">https://help.ubuntu.com/community/GnuPrivacyGuardHowto</a>).</p>\n<p>Latest release: <cite>sudo pip install kip</cite></p>\n<p>Latest dev:</p>\n<blockquote>\n1. Clone the repo: <cite>git clone https://github.com/grahamking/kip.git</cite>\n1. Install: <cite>sudo python3 setup.py install</cite></blockquote>\n<p><strong>Ubuntu</strong>: [PPA with \u2018precise\u2019 package](<a href=\"https://launchpad.net/~graham-king/+archive/ppa\" rel=\"nofollow\">https://launchpad.net/~graham-king/+archive/ppa</a>)</p>\n<p><strong>Arch Linux</strong>: [kip package for Arch](<a href=\"https://aur.archlinux.org/packages.php?ID=62555\" rel=\"nofollow\">https://aur.archlinux.org/packages.php?ID=62555</a>).\nThanks [Pezz](<a href=\"https://github.com/pezz\" rel=\"nofollow\">https://github.com/pezz</a>)!</p>\n<p># COMMANDS</p>\n<p>## add</p>\n<p><cite>kip add example.com \u2013usename username</cite></p>\n<p>What it does:</p>\n<blockquote>\n<ol>\n<li>Generates a random password</li>\n<li>Writes username and password to text file <cite>~/.kip/passwords/example.com</cite></li>\n<li>Encrypts and signs it by running <cite>gpg \u2013encrypt \u2013sign \u2013armor</cite></li>\n<li>Copies the new password to your clipboard</li>\n</ol>\n</blockquote>\n<p>Add optional notes: <cite>kip add example.com \u2013username username \u2013notes \u201cMy notes\u201d</cite>.\nYou can ask to be pompted for the password, instead of using a random one: <cite>kip add example.com \u2013username username \u2013prompt</cite></p>\n<p>## get</p>\n<p><cite>kip example.com</cite></p>\n<p>What it does:</p>\n<blockquote>\n<ol>\n<li>Looks for <cite>~/.kip/passwords/*example.com*</cite>, decrypts it by running <cite>gpg \u2013decrypt</cite></li>\n<li>Prints your username in bold, and any notes your stored.</li>\n<li>Copies your password to the clipboard</li>\n</ol>\n</blockquote>\n<p>## list</p>\n<p><cite>kip list \u201c*.org\u201d</cite></p>\n<p>List contents of your password directory. [filepart] argument is a glob to filter the directory list. You can use ls too!</p>\n<p>## edit</p>\n<p><cite>kip edit example.com \u2013username newuser</cite></p>\n<p>Change the username inside a password file.  [filepart] is the file to edit, and \u2013username sets a new username.</p>\n<p>## del</p>\n<p><cite>kip del example.com</cite></p>\n<p>Delete a password file. [filepart] is the file to delete. You can use rm too!</p>\n<p>## import_from_chrome</p>\n<p>Import passwords that Chrome stored in Gnome Keyring. This requires gnomekeyring (python lib) and python2.</p>\n<p># DEPENDENCIES</p>\n<p>gnupg to encrypt password files, xclip (linux) or pbcopy (OSX) to copy password to clipboard, and python3 but you have that already.</p>\n<p>On Ubuntu / Debian: <cite>sudo apt-get install gnupg xclip</cite></p>\n<p># CONFIGURATION</p>\n<p>If you want to use different commands to encrypt / decrypt your files, want longer passwords, etc, you can.  Copy <cite>kip.conf</cite> from the repo to <cite>~/.kip/kip.conf</cite>, and customise it. It\u2019s an INI file, using = or : as the delimiter. Make sure the <cite>home</cite> path does not end with a slash.</p>\n<p># NOTES</p>\n<p>[GnuPG](<a href=\"http://www.gnupg.org/\" rel=\"nofollow\">http://www.gnupg.org/</a>) is secure, open, multi-platform, and will probably be around forever. Can you say the same thing about the way you store your passwords currently?</p>\n<p>I was using the excellent [Keepass](<a href=\"http://en.wikipedia.org/wiki/KeePass\" rel=\"nofollow\">http://en.wikipedia.org/wiki/KeePass</a>) when I got concerned about it no longer being developed or supported. How would I get my passwords out? So I wrote this very simple wrapper for gnupg.</p>\n<p>If you live in the command line, I think you will find <strong>kip</strong> makes your life a little bit better.</p>\n<p># FILES</p>\n<p>There\u2019s 0 magic involved. Your accounts details are in text files, in your home directory. Each one is encrypted with your public key and signed with your private key. You can ditch <strong>kip</strong> at any time.</p>\n<p>Browse your files: <cite>ls ~/.kip/passwords/</cite></p>\n<p>Display contents manually: <cite>gpg -d ~/.kip/passwords/facebook</cite></p>\n\n          </div>"}, "last_serial": 850834, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "f0a07edfef77641df128411a7533281d", "sha256": "6605dc1b3e7b6648fe1c34bff8e318cac7bc7f01c3b599f4d0833ff6086e9b30"}, "downloads": -1, "filename": "kip-0.2.tar.gz", "has_sig": false, "md5_digest": "f0a07edfef77641df128411a7533281d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5372, "upload_time": "2012-03-18T06:58:53", "upload_time_iso_8601": "2012-03-18T06:58:53.044496Z", "url": "https://files.pythonhosted.org/packages/87/c1/a6e6e30b00e12f70835875e315eb9dde15a6f5fdea362665480af6e02153/kip-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "085a341fec9040ea1da7ef0330de41bf", "sha256": "9dbeab4d2f04ae5a605c7f458bbfa039214fa567b4d7a9b7ac3ec9ba4d291700"}, "downloads": -1, "filename": "kip-0.2.1.tar.gz", "has_sig": false, "md5_digest": "085a341fec9040ea1da7ef0330de41bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17550, "upload_time": "2012-03-18T07:10:07", "upload_time_iso_8601": "2012-03-18T07:10:07.261548Z", "url": "https://files.pythonhosted.org/packages/c6/2f/b7c49f56128cb9260ee15ff698dfa0d368adce983340d84ba462d42bd417/kip-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "1515fe4537c95676050cec83403e76fd", "sha256": "9bcc86dbb7f19c3c1446b944d746c949e780f04616e4cfa580fb6b305cb7611e"}, "downloads": -1, "filename": "kip-0.2.2.tar.gz", "has_sig": false, "md5_digest": "1515fe4537c95676050cec83403e76fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17686, "upload_time": "2012-04-17T06:11:07", "upload_time_iso_8601": "2012-04-17T06:11:07.039054Z", "url": "https://files.pythonhosted.org/packages/79/1e/e84b20e7f597e92e9fae00850d7a2851f6ac233309b77018d01bf3a7ac75/kip-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "e217ed84314195c2a8ca6f2303ae9e5f", "sha256": "93747573107ad91577689d4db159b8b8887e42f8a249bf7190a800b01fddbe7d"}, "downloads": -1, "filename": "kip-0.3.0.tar.gz", "has_sig": false, "md5_digest": "e217ed84314195c2a8ca6f2303ae9e5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19659, "upload_time": "2012-10-24T19:52:02", "upload_time_iso_8601": "2012-10-24T19:52:02.343495Z", "url": "https://files.pythonhosted.org/packages/b6/ec/5c4a735e993abcb8fac387006a672b1d417dc90883566e061995c15582c4/kip-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "104fa8c8158593f99311f17cbecb6945", "sha256": "2698a8d46eda4e666f464afee63dc5240bc04c5e79b2ccbc2e02afb2b89e1c4c"}, "downloads": -1, "filename": "kip-0.3.1.tar.gz", "has_sig": false, "md5_digest": "104fa8c8158593f99311f17cbecb6945", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21551, "upload_time": "2013-08-28T04:09:14", "upload_time_iso_8601": "2013-08-28T04:09:14.350433Z", "url": "https://files.pythonhosted.org/packages/90/a8/f225bf19f373e3c3235ee184125659305a133938d230ce9c5bf81c4444ce/kip-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "104fa8c8158593f99311f17cbecb6945", "sha256": "2698a8d46eda4e666f464afee63dc5240bc04c5e79b2ccbc2e02afb2b89e1c4c"}, "downloads": -1, "filename": "kip-0.3.1.tar.gz", "has_sig": false, "md5_digest": "104fa8c8158593f99311f17cbecb6945", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21551, "upload_time": "2013-08-28T04:09:14", "upload_time_iso_8601": "2013-08-28T04:09:14.350433Z", "url": "https://files.pythonhosted.org/packages/90/a8/f225bf19f373e3c3235ee184125659305a133938d230ce9c5bf81c4444ce/kip-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:36 2020"}