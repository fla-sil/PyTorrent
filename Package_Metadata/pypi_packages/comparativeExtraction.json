{"info": {"author": "Xiao Ma", "author_email": "Marshalma0923@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Build Tools"], "description": "## Introduction\n\nThis module helps you extract key terms and topics from corpus using a comparative approach.\n\n## Installation\n\n```\npip install --upgrade comparativeExtraction\n```\n\n## Usage\n\n### Import packages\n\n\n```python\nfrom comparativeExtraction import comparative_keyword_extraction\n```\n\n### Load sample data\n\n\n```python\nimport pandas as pd\nimport numpy as np\nPATH = \"/Users/xiaoma/Desktop/gitrepo/associate-term-search/data/switch_reviews.csv\"\ndata = pd.read_csv(PATH)\nlabel = [x <= 3 for x in data['stars']]\n```\n\n\n```python\ndata.columns\n```\n\n\n\n\n    Index(['stars', 'titles', 'reviews', 'dates'], dtype='object')\n\n\n\nHere we are using online Amazon reviews for Nintendo Switch to illustrate the usages of the module. \n\nThe module requires a corpus and a set of binary labels as inputs. The labels should be created depending on what type of questions are we trying to answer. The set of labels should be of the same length as the corpus.\n\nHere, let's assume that we want to know why people dislike this product and find relevant keywords. To answer this question, we created the label to be a binary variable indicating whether a reviewer gives a 3 star or less. \n\n### Initialize the module with the review corpus and labels\n\n\n```python\nkw_init = comparative_keyword_extraction(corpus = data['reviews'], labels = label)\n```\n\n### Extract the keywords\n\n\n```python\nkw = kw_init.get_distinguishing_terms(ngram_range = (1,3),top_n = 10)\n```\n\n\n```python\n# Get the keywords that are mentioned significantly more in the less than or equal to 3 star reviews\nkw.incre_df\n```\n\n\n\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>feature</th>\n      <th>diff</th>\n      <th>pos_prop</th>\n      <th>pos_count</th>\n      <th>neg_prop</th>\n      <th>neg_count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>not</td>\n      <td>0.345676</td>\n      <td>0.481050</td>\n      <td>330</td>\n      <td>0.135373</td>\n      <td>584</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>work</td>\n      <td>0.202033</td>\n      <td>0.285714</td>\n      <td>196</td>\n      <td>0.083681</td>\n      <td>361</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>switch</td>\n      <td>0.180442</td>\n      <td>0.355685</td>\n      <td>244</td>\n      <td>0.175243</td>\n      <td>756</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>buy</td>\n      <td>0.172898</td>\n      <td>0.297376</td>\n      <td>204</td>\n      <td>0.124478</td>\n      <td>537</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>month</td>\n      <td>0.141970</td>\n      <td>0.158892</td>\n      <td>109</td>\n      <td>0.016922</td>\n      <td>73</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>nintendo</td>\n      <td>0.138791</td>\n      <td>0.301749</td>\n      <td>207</td>\n      <td>0.162958</td>\n      <td>703</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>no</td>\n      <td>0.131157</td>\n      <td>0.190962</td>\n      <td>131</td>\n      <td>0.059805</td>\n      <td>258</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>charge</td>\n      <td>0.122458</td>\n      <td>0.142857</td>\n      <td>98</td>\n      <td>0.020399</td>\n      <td>88</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>use</td>\n      <td>0.118979</td>\n      <td>0.208455</td>\n      <td>143</td>\n      <td>0.089476</td>\n      <td>386</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>new</td>\n      <td>0.114520</td>\n      <td>0.161808</td>\n      <td>111</td>\n      <td>0.047288</td>\n      <td>204</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\n# Get the keywords that are mentioned significantly less in the less than or equal to 3 star reviews\nkw.decline_df\n```\n\n\n\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>feature</th>\n      <th>diff</th>\n      <th>pos_prop</th>\n      <th>pos_count</th>\n      <th>neg_prop</th>\n      <th>neg_count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>love</td>\n      <td>-0.217692</td>\n      <td>0.080175</td>\n      <td>55</td>\n      <td>0.297867</td>\n      <td>1285</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>great</td>\n      <td>-0.118801</td>\n      <td>0.103499</td>\n      <td>71</td>\n      <td>0.222299</td>\n      <td>959</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>fun</td>\n      <td>-0.048093</td>\n      <td>0.048105</td>\n      <td>33</td>\n      <td>0.096198</td>\n      <td>415</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>best</td>\n      <td>-0.041875</td>\n      <td>0.032070</td>\n      <td>22</td>\n      <td>0.073945</td>\n      <td>319</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>amaze</td>\n      <td>-0.039170</td>\n      <td>0.010204</td>\n      <td>7</td>\n      <td>0.049374</td>\n      <td>213</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>awesome</td>\n      <td>-0.035827</td>\n      <td>0.007289</td>\n      <td>5</td>\n      <td>0.043115</td>\n      <td>186</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>son love</td>\n      <td>-0.035033</td>\n      <td>0.004373</td>\n      <td>3</td>\n      <td>0.039407</td>\n      <td>170</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>perfect</td>\n      <td>-0.032978</td>\n      <td>0.008746</td>\n      <td>6</td>\n      <td>0.041725</td>\n      <td>180</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>easy</td>\n      <td>-0.026514</td>\n      <td>0.023324</td>\n      <td>16</td>\n      <td>0.049838</td>\n      <td>215</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>kid love</td>\n      <td>-0.025066</td>\n      <td>0.004373</td>\n      <td>3</td>\n      <td>0.029439</td>\n      <td>127</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\nIf we need more context on a given word, or we need more interpretable topics, we can:\n1. Output the reviews that contains the term\n2. Switch the ngram_range\n3. Use the supplement functions module \n\n### Output the reviews\n\nSay we want to know more about the significant term \"work\", we can directly output all the reviews containing the term.\n\nThe output class \"kw\" contains a one-hot encoded document-term-matrix that has all the terms found from the corpus. We can leverage it to find corresponding reviews of each term.\n\n\n```python\n# The binary_dtm provides a convenient way to extract reviews with specific terms\nprint(kw.binary_dtm[['work','not']])\n```\n\n          work  not\n    0        0    0\n    1        0    0\n    2        0    0\n    3        0    0\n    4        0    0\n    ...    ...  ...\n    4995     1    0\n    4996     0    1\n    4997     0    0\n    4998     0    0\n    4999     0    0\n    \n    [5000 rows x 2 columns]\n\n\n\n```python\nreviews_contain_term_work = data['reviews'][[x == 1 for x in kw.binary_dtm['work']]]\nlen(reviews_contain_term_work)\n```\n\n\n\n\n    557\n\n\n\n\n```python\nfor x in pd.Series(reviews_contain_term_work).sample(1):\n    print(x)\n```\n\n    It's alright, only got it to give Nintendo another chance. It's a neat concept. Overall, it's aggressively mediocre, good for casual stuff, but will never get as much use as my ps4.Wi-Fi is god awful though. The worst I've dealt with. It's connection capabilities are atrocious compared with any other wireless device. Don't expect it to just work. Honestly, this singular problem is enough for me to rate it 1 star. I suppose they had to cut corners somewhere.\n    \n\n\n### Change the n-gram range to exclude uni-grams\n\n\n```python\nkw = kw_init.get_distinguishing_terms(ngram_range = (2,4),top_n = 10)\nkw.incre_df\n```\n\n\n\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>feature</th>\n      <th>diff</th>\n      <th>pos_prop</th>\n      <th>pos_count</th>\n      <th>neg_prop</th>\n      <th>neg_count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>not work</td>\n      <td>0.077393</td>\n      <td>0.080175</td>\n      <td>55</td>\n      <td>0.002782</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>buy switch</td>\n      <td>0.022566</td>\n      <td>0.032070</td>\n      <td>22</td>\n      <td>0.009504</td>\n      <td>41</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>nintendo switch</td>\n      <td>0.021395</td>\n      <td>0.077259</td>\n      <td>53</td>\n      <td>0.055865</td>\n      <td>241</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>brand new</td>\n      <td>0.020279</td>\n      <td>0.027697</td>\n      <td>19</td>\n      <td>0.007418</td>\n      <td>32</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>play game</td>\n      <td>0.014921</td>\n      <td>0.042274</td>\n      <td>29</td>\n      <td>0.027353</td>\n      <td>118</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>game not</td>\n      <td>0.012563</td>\n      <td>0.026239</td>\n      <td>18</td>\n      <td>0.013676</td>\n      <td>59</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>year old</td>\n      <td>0.009683</td>\n      <td>0.029155</td>\n      <td>20</td>\n      <td>0.019471</td>\n      <td>84</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>game play</td>\n      <td>0.005176</td>\n      <td>0.021866</td>\n      <td>15</td>\n      <td>0.016690</td>\n      <td>72</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>nintendo game</td>\n      <td>0.003616</td>\n      <td>0.013120</td>\n      <td>9</td>\n      <td>0.009504</td>\n      <td>41</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>christmas gift</td>\n      <td>0.003451</td>\n      <td>0.014577</td>\n      <td>10</td>\n      <td>0.011127</td>\n      <td>48</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\nkw.decline_df\n```\n\n\n\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>feature</th>\n      <th>diff</th>\n      <th>pos_prop</th>\n      <th>pos_count</th>\n      <th>neg_prop</th>\n      <th>neg_count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>son love</td>\n      <td>-0.035033</td>\n      <td>0.004373</td>\n      <td>3</td>\n      <td>0.039407</td>\n      <td>170</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>kid love</td>\n      <td>-0.025066</td>\n      <td>0.004373</td>\n      <td>3</td>\n      <td>0.029439</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>great game</td>\n      <td>-0.020760</td>\n      <td>0.007289</td>\n      <td>5</td>\n      <td>0.028048</td>\n      <td>121</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>great product</td>\n      <td>-0.014403</td>\n      <td>0.004373</td>\n      <td>3</td>\n      <td>0.018776</td>\n      <td>81</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>great console</td>\n      <td>-0.014104</td>\n      <td>0.005831</td>\n      <td>4</td>\n      <td>0.019935</td>\n      <td>86</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>highly recommend</td>\n      <td>-0.013311</td>\n      <td>0.002915</td>\n      <td>2</td>\n      <td>0.016226</td>\n      <td>70</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>absolutely love</td>\n      <td>-0.012219</td>\n      <td>0.001458</td>\n      <td>1</td>\n      <td>0.013676</td>\n      <td>59</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>love switch</td>\n      <td>-0.012147</td>\n      <td>0.013120</td>\n      <td>9</td>\n      <td>0.025267</td>\n      <td>109</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>best console</td>\n      <td>-0.010926</td>\n      <td>0.004373</td>\n      <td>3</td>\n      <td>0.015299</td>\n      <td>66</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>best game</td>\n      <td>-0.010297</td>\n      <td>0.002915</td>\n      <td>2</td>\n      <td>0.013213</td>\n      <td>57</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n### Using supplement function\n\nSometimes when we want to drill down into one specific term, we can leverage the built-in supplement functions to find related n-grams containing the term\n\n\n```python\nfrom comparativeExtraction.supplement_funcs import get_ngrams_on_term\n```\n\n\n```python\ntarget_term = \"work\"\nreviews_contain_term_work = data['reviews'][[x == 1 for x in kw.binary_dtm['work']]]\n\nrelated_ngrams = get_ngrams_on_term(target_term,reviews_contain_term_work,filter_by_extreme=False)\n```\n\n\n```python\nrelated_ngrams.related_ngrams.head()\n```\n\n\n\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ngram</th>\n      <th>count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>work great</td>\n      <td>104</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>not work</td>\n      <td>71</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>stop work</td>\n      <td>47</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>work fine</td>\n      <td>38</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>work perfectly</td>\n      <td>35</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\nHere, the count is also a Document Frequency", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/ALaughingHorse/comparative_keyword_extraction/archive/v_005.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ALaughingHorse/comparative_keyword_extraction", "keywords": "NLP", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "comparativeExtraction", "package_url": "https://pypi.org/project/comparativeExtraction/", "platform": "", "project_url": "https://pypi.org/project/comparativeExtraction/", "project_urls": {"Download": "https://github.com/ALaughingHorse/comparative_keyword_extraction/archive/v_005.tar.gz", "Homepage": "https://github.com/ALaughingHorse/comparative_keyword_extraction"}, "release_url": "https://pypi.org/project/comparativeExtraction/0.0.5/", "requires_dist": null, "requires_python": "", "summary": "keyword extraction", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Introduction</h2>\n<p>This module helps you extract key terms and topics from corpus using a comparative approach.</p>\n<h2>Installation</h2>\n<pre><code>pip install --upgrade comparativeExtraction\n</code></pre>\n<h2>Usage</h2>\n<h3>Import packages</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">comparativeExtraction</span> <span class=\"kn\">import</span> <span class=\"n\">comparative_keyword_extraction</span>\n</pre>\n<h3>Load sample data</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"n\">PATH</span> <span class=\"o\">=</span> <span class=\"s2\">\"/Users/xiaoma/Desktop/gitrepo/associate-term-search/data/switch_reviews.csv\"</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"n\">PATH</span><span class=\"p\">)</span>\n<span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">3</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'stars'</span><span class=\"p\">]]</span>\n</pre>\n<pre><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">columns</span>\n</pre>\n<pre><code>Index(['stars', 'titles', 'reviews', 'dates'], dtype='object')\n</code></pre>\n<p>Here we are using online Amazon reviews for Nintendo Switch to illustrate the usages of the module.</p>\n<p>The module requires a corpus and a set of binary labels as inputs. The labels should be created depending on what type of questions are we trying to answer. The set of labels should be of the same length as the corpus.</p>\n<p>Here, let's assume that we want to know why people dislike this product and find relevant keywords. To answer this question, we created the label to be a binary variable indicating whether a reviewer gives a 3 star or less.</p>\n<h3>Initialize the module with the review corpus and labels</h3>\n<pre><span class=\"n\">kw_init</span> <span class=\"o\">=</span> <span class=\"n\">comparative_keyword_extraction</span><span class=\"p\">(</span><span class=\"n\">corpus</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'reviews'</span><span class=\"p\">],</span> <span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">label</span><span class=\"p\">)</span>\n</pre>\n<h3>Extract the keywords</h3>\n<pre><span class=\"n\">kw</span> <span class=\"o\">=</span> <span class=\"n\">kw_init</span><span class=\"o\">.</span><span class=\"n\">get_distinguishing_terms</span><span class=\"p\">(</span><span class=\"n\">ngram_range</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"n\">top_n</span> <span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Get the keywords that are mentioned significantly more in the less than or equal to 3 star reviews</span>\n<span class=\"n\">kw</span><span class=\"o\">.</span><span class=\"n\">incre_df</span>\n</pre>\n<div>\n<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>feature</th>\n      <th>diff</th>\n      <th>pos_prop</th>\n      <th>pos_count</th>\n      <th>neg_prop</th>\n      <th>neg_count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>not</td>\n      <td>0.345676</td>\n      <td>0.481050</td>\n      <td>330</td>\n      <td>0.135373</td>\n      <td>584</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>work</td>\n      <td>0.202033</td>\n      <td>0.285714</td>\n      <td>196</td>\n      <td>0.083681</td>\n      <td>361</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>switch</td>\n      <td>0.180442</td>\n      <td>0.355685</td>\n      <td>244</td>\n      <td>0.175243</td>\n      <td>756</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>buy</td>\n      <td>0.172898</td>\n      <td>0.297376</td>\n      <td>204</td>\n      <td>0.124478</td>\n      <td>537</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>month</td>\n      <td>0.141970</td>\n      <td>0.158892</td>\n      <td>109</td>\n      <td>0.016922</td>\n      <td>73</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>nintendo</td>\n      <td>0.138791</td>\n      <td>0.301749</td>\n      <td>207</td>\n      <td>0.162958</td>\n      <td>703</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>no</td>\n      <td>0.131157</td>\n      <td>0.190962</td>\n      <td>131</td>\n      <td>0.059805</td>\n      <td>258</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>charge</td>\n      <td>0.122458</td>\n      <td>0.142857</td>\n      <td>98</td>\n      <td>0.020399</td>\n      <td>88</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>use</td>\n      <td>0.118979</td>\n      <td>0.208455</td>\n      <td>143</td>\n      <td>0.089476</td>\n      <td>386</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>new</td>\n      <td>0.114520</td>\n      <td>0.161808</td>\n      <td>111</td>\n      <td>0.047288</td>\n      <td>204</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<pre><span class=\"c1\"># Get the keywords that are mentioned significantly less in the less than or equal to 3 star reviews</span>\n<span class=\"n\">kw</span><span class=\"o\">.</span><span class=\"n\">decline_df</span>\n</pre>\n<div>\n<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>feature</th>\n      <th>diff</th>\n      <th>pos_prop</th>\n      <th>pos_count</th>\n      <th>neg_prop</th>\n      <th>neg_count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>love</td>\n      <td>-0.217692</td>\n      <td>0.080175</td>\n      <td>55</td>\n      <td>0.297867</td>\n      <td>1285</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>great</td>\n      <td>-0.118801</td>\n      <td>0.103499</td>\n      <td>71</td>\n      <td>0.222299</td>\n      <td>959</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>fun</td>\n      <td>-0.048093</td>\n      <td>0.048105</td>\n      <td>33</td>\n      <td>0.096198</td>\n      <td>415</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>best</td>\n      <td>-0.041875</td>\n      <td>0.032070</td>\n      <td>22</td>\n      <td>0.073945</td>\n      <td>319</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>amaze</td>\n      <td>-0.039170</td>\n      <td>0.010204</td>\n      <td>7</td>\n      <td>0.049374</td>\n      <td>213</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>awesome</td>\n      <td>-0.035827</td>\n      <td>0.007289</td>\n      <td>5</td>\n      <td>0.043115</td>\n      <td>186</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>son love</td>\n      <td>-0.035033</td>\n      <td>0.004373</td>\n      <td>3</td>\n      <td>0.039407</td>\n      <td>170</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>perfect</td>\n      <td>-0.032978</td>\n      <td>0.008746</td>\n      <td>6</td>\n      <td>0.041725</td>\n      <td>180</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>easy</td>\n      <td>-0.026514</td>\n      <td>0.023324</td>\n      <td>16</td>\n      <td>0.049838</td>\n      <td>215</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>kid love</td>\n      <td>-0.025066</td>\n      <td>0.004373</td>\n      <td>3</td>\n      <td>0.029439</td>\n      <td>127</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<p>If we need more context on a given word, or we need more interpretable topics, we can:</p>\n<ol>\n<li>Output the reviews that contains the term</li>\n<li>Switch the ngram_range</li>\n<li>Use the supplement functions module</li>\n</ol>\n<h3>Output the reviews</h3>\n<p>Say we want to know more about the significant term \"work\", we can directly output all the reviews containing the term.</p>\n<p>The output class \"kw\" contains a one-hot encoded document-term-matrix that has all the terms found from the corpus. We can leverage it to find corresponding reviews of each term.</p>\n<pre><span class=\"c1\"># The binary_dtm provides a convenient way to extract reviews with specific terms</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">kw</span><span class=\"o\">.</span><span class=\"n\">binary_dtm</span><span class=\"p\">[[</span><span class=\"s1\">'work'</span><span class=\"p\">,</span><span class=\"s1\">'not'</span><span class=\"p\">]])</span>\n</pre>\n<pre><code>      work  not\n0        0    0\n1        0    0\n2        0    0\n3        0    0\n4        0    0\n...    ...  ...\n4995     1    0\n4996     0    1\n4997     0    0\n4998     0    0\n4999     0    0\n\n[5000 rows x 2 columns]\n</code></pre>\n<pre><span class=\"n\">reviews_contain_term_work</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'reviews'</span><span class=\"p\">][[</span><span class=\"n\">x</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">kw</span><span class=\"o\">.</span><span class=\"n\">binary_dtm</span><span class=\"p\">[</span><span class=\"s1\">'work'</span><span class=\"p\">]]]</span>\n<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">reviews_contain_term_work</span><span class=\"p\">)</span>\n</pre>\n<pre><code>557\n</code></pre>\n<pre><span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">(</span><span class=\"n\">reviews_contain_term_work</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n</pre>\n<pre><code>It's alright, only got it to give Nintendo another chance. It's a neat concept. Overall, it's aggressively mediocre, good for casual stuff, but will never get as much use as my ps4.Wi-Fi is god awful though. The worst I've dealt with. It's connection capabilities are atrocious compared with any other wireless device. Don't expect it to just work. Honestly, this singular problem is enough for me to rate it 1 star. I suppose they had to cut corners somewhere.\n</code></pre>\n<h3>Change the n-gram range to exclude uni-grams</h3>\n<pre><span class=\"n\">kw</span> <span class=\"o\">=</span> <span class=\"n\">kw_init</span><span class=\"o\">.</span><span class=\"n\">get_distinguishing_terms</span><span class=\"p\">(</span><span class=\"n\">ngram_range</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">),</span><span class=\"n\">top_n</span> <span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">kw</span><span class=\"o\">.</span><span class=\"n\">incre_df</span>\n</pre>\n<div>\n<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>feature</th>\n      <th>diff</th>\n      <th>pos_prop</th>\n      <th>pos_count</th>\n      <th>neg_prop</th>\n      <th>neg_count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>not work</td>\n      <td>0.077393</td>\n      <td>0.080175</td>\n      <td>55</td>\n      <td>0.002782</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>buy switch</td>\n      <td>0.022566</td>\n      <td>0.032070</td>\n      <td>22</td>\n      <td>0.009504</td>\n      <td>41</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>nintendo switch</td>\n      <td>0.021395</td>\n      <td>0.077259</td>\n      <td>53</td>\n      <td>0.055865</td>\n      <td>241</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>brand new</td>\n      <td>0.020279</td>\n      <td>0.027697</td>\n      <td>19</td>\n      <td>0.007418</td>\n      <td>32</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>play game</td>\n      <td>0.014921</td>\n      <td>0.042274</td>\n      <td>29</td>\n      <td>0.027353</td>\n      <td>118</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>game not</td>\n      <td>0.012563</td>\n      <td>0.026239</td>\n      <td>18</td>\n      <td>0.013676</td>\n      <td>59</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>year old</td>\n      <td>0.009683</td>\n      <td>0.029155</td>\n      <td>20</td>\n      <td>0.019471</td>\n      <td>84</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>game play</td>\n      <td>0.005176</td>\n      <td>0.021866</td>\n      <td>15</td>\n      <td>0.016690</td>\n      <td>72</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>nintendo game</td>\n      <td>0.003616</td>\n      <td>0.013120</td>\n      <td>9</td>\n      <td>0.009504</td>\n      <td>41</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>christmas gift</td>\n      <td>0.003451</td>\n      <td>0.014577</td>\n      <td>10</td>\n      <td>0.011127</td>\n      <td>48</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<pre><span class=\"n\">kw</span><span class=\"o\">.</span><span class=\"n\">decline_df</span>\n</pre>\n<div>\n<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>feature</th>\n      <th>diff</th>\n      <th>pos_prop</th>\n      <th>pos_count</th>\n      <th>neg_prop</th>\n      <th>neg_count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>son love</td>\n      <td>-0.035033</td>\n      <td>0.004373</td>\n      <td>3</td>\n      <td>0.039407</td>\n      <td>170</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>kid love</td>\n      <td>-0.025066</td>\n      <td>0.004373</td>\n      <td>3</td>\n      <td>0.029439</td>\n      <td>127</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>great game</td>\n      <td>-0.020760</td>\n      <td>0.007289</td>\n      <td>5</td>\n      <td>0.028048</td>\n      <td>121</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>great product</td>\n      <td>-0.014403</td>\n      <td>0.004373</td>\n      <td>3</td>\n      <td>0.018776</td>\n      <td>81</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>great console</td>\n      <td>-0.014104</td>\n      <td>0.005831</td>\n      <td>4</td>\n      <td>0.019935</td>\n      <td>86</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>highly recommend</td>\n      <td>-0.013311</td>\n      <td>0.002915</td>\n      <td>2</td>\n      <td>0.016226</td>\n      <td>70</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>absolutely love</td>\n      <td>-0.012219</td>\n      <td>0.001458</td>\n      <td>1</td>\n      <td>0.013676</td>\n      <td>59</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>love switch</td>\n      <td>-0.012147</td>\n      <td>0.013120</td>\n      <td>9</td>\n      <td>0.025267</td>\n      <td>109</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>best console</td>\n      <td>-0.010926</td>\n      <td>0.004373</td>\n      <td>3</td>\n      <td>0.015299</td>\n      <td>66</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>best game</td>\n      <td>-0.010297</td>\n      <td>0.002915</td>\n      <td>2</td>\n      <td>0.013213</td>\n      <td>57</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<h3>Using supplement function</h3>\n<p>Sometimes when we want to drill down into one specific term, we can leverage the built-in supplement functions to find related n-grams containing the term</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">comparativeExtraction.supplement_funcs</span> <span class=\"kn\">import</span> <span class=\"n\">get_ngrams_on_term</span>\n</pre>\n<pre><span class=\"n\">target_term</span> <span class=\"o\">=</span> <span class=\"s2\">\"work\"</span>\n<span class=\"n\">reviews_contain_term_work</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'reviews'</span><span class=\"p\">][[</span><span class=\"n\">x</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">kw</span><span class=\"o\">.</span><span class=\"n\">binary_dtm</span><span class=\"p\">[</span><span class=\"s1\">'work'</span><span class=\"p\">]]]</span>\n\n<span class=\"n\">related_ngrams</span> <span class=\"o\">=</span> <span class=\"n\">get_ngrams_on_term</span><span class=\"p\">(</span><span class=\"n\">target_term</span><span class=\"p\">,</span><span class=\"n\">reviews_contain_term_work</span><span class=\"p\">,</span><span class=\"n\">filter_by_extreme</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"n\">related_ngrams</span><span class=\"o\">.</span><span class=\"n\">related_ngrams</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span>\n</pre>\n<div>\n<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>ngram</th>\n      <th>count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>work great</td>\n      <td>104</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>not work</td>\n      <td>71</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>stop work</td>\n      <td>47</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>work fine</td>\n      <td>38</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>work perfectly</td>\n      <td>35</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<p>Here, the count is also a Document Frequency</p>\n\n          </div>"}, "last_serial": 7193379, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "417431f4e7f2982ee14b5ad0f79bba99", "sha256": "26c35af9e9e531068388293e66deae3c89ee02c561bd598fd2405d51cf0c895c"}, "downloads": -1, "filename": "comparativeExtraction-0.0.1.tar.gz", "has_sig": false, "md5_digest": "417431f4e7f2982ee14b5ad0f79bba99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5053, "upload_time": "2020-05-03T22:38:00", "upload_time_iso_8601": "2020-05-03T22:38:00.699520Z", "url": "https://files.pythonhosted.org/packages/93/a7/187ebdd42d05384716e01f858d9ef063601dc8e7c24e0be0ef0c6608901d/comparativeExtraction-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "20085ce52f79aecd2fcf41a6414679b4", "sha256": "e98e97caed6799536a4f825efd472d79ed0dda0f054ef8f117e93934cc1646c6"}, "downloads": -1, "filename": "comparativeExtraction-0.0.2.tar.gz", "has_sig": false, "md5_digest": "20085ce52f79aecd2fcf41a6414679b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5072, "upload_time": "2020-05-03T22:58:52", "upload_time_iso_8601": "2020-05-03T22:58:52.934491Z", "url": "https://files.pythonhosted.org/packages/00/f0/45628e09ef3a72f3f5711a066e16d7a08e5115471bdfec0bd471a349d253/comparativeExtraction-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "af334df3d8a14de7aea072d76df44cb2", "sha256": "144395f73fb8febb9a561e9aad07f0dad3c4cdbe55031344ddcf1c56d84e7239"}, "downloads": -1, "filename": "comparativeExtraction-0.0.3.tar.gz", "has_sig": false, "md5_digest": "af334df3d8a14de7aea072d76df44cb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6058, "upload_time": "2020-05-05T23:11:34", "upload_time_iso_8601": "2020-05-05T23:11:34.046800Z", "url": "https://files.pythonhosted.org/packages/ba/22/35b29d62a04e4e1a26f9228830abe24122b1e96da937391f954cf76ffab3/comparativeExtraction-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "24fbb8bed22cd75eacebec40e46d6f8c", "sha256": "8780044ebd3eb84a5a3c3f74f3298d87e7ae9ac330e0390893e88c8db5c9202b"}, "downloads": -1, "filename": "comparativeExtraction-0.0.4.tar.gz", "has_sig": false, "md5_digest": "24fbb8bed22cd75eacebec40e46d6f8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13596, "upload_time": "2020-05-08T00:57:52", "upload_time_iso_8601": "2020-05-08T00:57:52.352370Z", "url": "https://files.pythonhosted.org/packages/31/92/fecca30417925318056fc400ebc03221f6ebca194585382d967a969ee7a2/comparativeExtraction-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "44f309448f47ada49ddaa8342fec220c", "sha256": "62d27218955c412cdda1cd819427ae84a2a7848abd2c71433dbdd6386e436fc1"}, "downloads": -1, "filename": "comparativeExtraction-0.0.5.tar.gz", "has_sig": false, "md5_digest": "44f309448f47ada49ddaa8342fec220c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13354, "upload_time": "2020-05-08T01:02:38", "upload_time_iso_8601": "2020-05-08T01:02:38.830043Z", "url": "https://files.pythonhosted.org/packages/c2/f2/c25b5f593a72d335a04d0cb418ef8a27f4a54fd524030a423ae7c71c9e7e/comparativeExtraction-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "44f309448f47ada49ddaa8342fec220c", "sha256": "62d27218955c412cdda1cd819427ae84a2a7848abd2c71433dbdd6386e436fc1"}, "downloads": -1, "filename": "comparativeExtraction-0.0.5.tar.gz", "has_sig": false, "md5_digest": "44f309448f47ada49ddaa8342fec220c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13354, "upload_time": "2020-05-08T01:02:38", "upload_time_iso_8601": "2020-05-08T01:02:38.830043Z", "url": "https://files.pythonhosted.org/packages/c2/f2/c25b5f593a72d335a04d0cb418ef8a27f4a54fd524030a423ae7c71c9e7e/comparativeExtraction-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:18 2020"}