{"info": {"author": "Douglas RAILLARD", "author_email": "douglas.raillard.github@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Code Generators"], "description": "What is BrownBat ?\n==================\n\n**BrownBat** is a pure Python library to create source code generators.\nBy source code generator, I mean a program which outputs source code.\nIts main features are:\n* Laziness everywhere: you can set every possible name or attribute after the object has been created and used, and it will be taken into account when printed. This allows the generator to set the layout of the code, and for example set the names of the variables or functions later, when the correct name can be computed from another source of information.\n   \n* Nifty operator overloading, making it quite easy to manipulate source code objects. \n* Automatic debugging comments for every object created. That means that when you create a variable and you print its definitionto an output source file, you will be able to tell which line in the Python generator created this variable. This is incredibly helpful when you are lost in your spaghetti code and you don't even know from where that specific output source code line comes from, or just why this line of code shows up in the output.\n \nIt currently handles C langage, but adding new langages leveraging all the facilities given by the core should be easy.\n\nWhy would I want to generate some source code ?\n===============================================\n\nBecause it allows you to write custom tools to avoid repetitive or error prone tasks. A good example would be the generation \nof a serialization and deserialization routines for a C structure described in XML.\nThis can be quite easily accomplished with the help of this library and the standard Python library.\n\nSupported langages\n==================\n\nCurrently, only C langage is supported.\nThat said, what makes this library interesting (laziness, operator overloading) is separated in a langage independent module (core), \nwhich should make it easy to add support for a new langage. A guide to write support code for new langages will be released in the next \nfew months.\n\n\nInstalling\n==========\n\n**BrownBat** requires Python 3 to work correctly.\nIt can be installed from PyPI (Python package index)::\n\n    > pip install brownbat\n\nTo install the beta version, use the --pre switch of pip.    \n    \nAlternatively, the development version can be retrieved on Github:\nhttps://github.com/DouglasRaillard/BrownBat\n\n\nHow to use it ?\n===============\n\nDocumentation and guides will be made available in the next few month.\nIt will include examples and a guide to implement support for a new langage\n(most of the hard work of operator overloading is inside a core module, which is langage independent).\n\n\nLicense\n=======\n\n**BrownBat** is licensed under the GNU Lesser General Public License v3 or later (LGPLv3+) License.\n\n\nWhy BrownBat is named BrownBat ?\n================================\n\nBecause those cute animals are very lazy (according to http://en.wikipedia.org/wiki/Little_brown_bat#Sleep, they can sleep up to 20h a day).\nAnd this library is designed to be lazy at its very core.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DouglasRaillard/BrownBat", "keywords": "source generation lazy code meta", "license": "GNU Lesser General Public License v3 or later (LGPLv3+)", "maintainer": null, "maintainer_email": null, "name": "BrownBat", "package_url": "https://pypi.org/project/BrownBat/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/BrownBat/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/DouglasRaillard/BrownBat"}, "release_url": "https://pypi.org/project/BrownBat/0.0b2/", "requires_dist": null, "requires_python": null, "summary": "A lazy source code generation library", "version": "0.0b2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"what-is-brownbat\">\n<h2>What is BrownBat ?</h2>\n<p><strong>BrownBat</strong> is a pure Python library to create source code generators.\nBy source code generator, I mean a program which outputs source code.\nIts main features are:\n* Laziness everywhere: you can set every possible name or attribute after the object has been created and used, and it will be taken into account when printed. This allows the generator to set the layout of the code, and for example set the names of the variables or functions later, when the correct name can be computed from another source of information.</p>\n<ul>\n<li>Nifty operator overloading, making it quite easy to manipulate source code objects.</li>\n<li>Automatic debugging comments for every object created. That means that when you create a variable and you print its definitionto an output source file, you will be able to tell which line in the Python generator created this variable. This is incredibly helpful when you are lost in your spaghetti code and you don\u2019t even know from where that specific output source code line comes from, or just why this line of code shows up in the output.</li>\n</ul>\n<p>It currently handles C langage, but adding new langages leveraging all the facilities given by the core should be easy.</p>\n</div>\n<div id=\"why-would-i-want-to-generate-some-source-code\">\n<h2>Why would I want to generate some source code ?</h2>\n<p>Because it allows you to write custom tools to avoid repetitive or error prone tasks. A good example would be the generation\nof a serialization and deserialization routines for a C structure described in XML.\nThis can be quite easily accomplished with the help of this library and the standard Python library.</p>\n</div>\n<div id=\"supported-langages\">\n<h2>Supported langages</h2>\n<p>Currently, only C langage is supported.\nThat said, what makes this library interesting (laziness, operator overloading) is separated in a langage independent module (core),\nwhich should make it easy to add support for a new langage. A guide to write support code for new langages will be released in the next\nfew months.</p>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p><strong>BrownBat</strong> requires Python 3 to work correctly.\nIt can be installed from PyPI (Python package index):</p>\n<pre>&gt; pip install brownbat\n</pre>\n<p>To install the beta version, use the \u2013pre switch of pip.</p>\n<p>Alternatively, the development version can be retrieved on Github:\n<a href=\"https://github.com/DouglasRaillard/BrownBat\" rel=\"nofollow\">https://github.com/DouglasRaillard/BrownBat</a></p>\n</div>\n<div id=\"how-to-use-it\">\n<h2>How to use it ?</h2>\n<p>Documentation and guides will be made available in the next few month.\nIt will include examples and a guide to implement support for a new langage\n(most of the hard work of operator overloading is inside a core module, which is langage independent).</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><strong>BrownBat</strong> is licensed under the GNU Lesser General Public License v3 or later (LGPLv3+) License.</p>\n</div>\n<div id=\"why-brownbat-is-named-brownbat\">\n<h2>Why BrownBat is named BrownBat ?</h2>\n<p>Because those cute animals are very lazy (according to <a href=\"http://en.wikipedia.org/wiki/Little_brown_bat#Sleep\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Little_brown_bat#Sleep</a>, they can sleep up to 20h a day).\nAnd this library is designed to be lazy at its very core.</p>\n</div>\n\n          </div>"}, "last_serial": 1355499, "releases": {"0.0b1": [{"comment_text": "", "digests": {"md5": "389efd7e597d8fde8d047c0655ddb969", "sha256": "00dc2b4218144c6b0b2a0ae4d1d9ec38c95c35042070ff4cc6128d62b4e93281"}, "downloads": -1, "filename": "BrownBat-0.0b1.tar.gz", "has_sig": false, "md5_digest": "389efd7e597d8fde8d047c0655ddb969", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13783, "upload_time": "2014-11-23T17:10:29", "upload_time_iso_8601": "2014-11-23T17:10:29.779617Z", "url": "https://files.pythonhosted.org/packages/67/cf/90796ce0f160d7c93a5d2ae0f434e351a4a07383c47345b449ea5e377d02/BrownBat-0.0b1.tar.gz", "yanked": false}], "0.0b2": [{"comment_text": "", "digests": {"md5": "fac469a30e3bcb6c78011e5fbfd84606", "sha256": "cbe85803f9902b039fcc544404ea5023a1d63eab48f3255d5c6b0ff384d5a29d"}, "downloads": -1, "filename": "BrownBat-0.0b2-py3-none-any.whl", "has_sig": false, "md5_digest": "fac469a30e3bcb6c78011e5fbfd84606", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 27666, "upload_time": "2014-12-20T16:10:38", "upload_time_iso_8601": "2014-12-20T16:10:38.641280Z", "url": "https://files.pythonhosted.org/packages/5c/58/7dfee962a7f3b0501dd7833385cc336d2961b1cc4e6b9195fd8b64eb5e65/BrownBat-0.0b2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5bcfec7273bb13e7713e859bb3f0d6c2", "sha256": "b71a8ebfb0b727f0d6ba83c3fe3a8ae0bbc479f5eae7ac3a1891ee7887303595"}, "downloads": -1, "filename": "BrownBat-0.0b2.tar.gz", "has_sig": false, "md5_digest": "5bcfec7273bb13e7713e859bb3f0d6c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25623, "upload_time": "2014-12-20T16:10:36", "upload_time_iso_8601": "2014-12-20T16:10:36.196757Z", "url": "https://files.pythonhosted.org/packages/ef/2d/fb6fae8dc4d3bc7a873053fb008ad6573c5e958b63c8cf56accf47890cb6/BrownBat-0.0b2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fac469a30e3bcb6c78011e5fbfd84606", "sha256": "cbe85803f9902b039fcc544404ea5023a1d63eab48f3255d5c6b0ff384d5a29d"}, "downloads": -1, "filename": "BrownBat-0.0b2-py3-none-any.whl", "has_sig": false, "md5_digest": "fac469a30e3bcb6c78011e5fbfd84606", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 27666, "upload_time": "2014-12-20T16:10:38", "upload_time_iso_8601": "2014-12-20T16:10:38.641280Z", "url": "https://files.pythonhosted.org/packages/5c/58/7dfee962a7f3b0501dd7833385cc336d2961b1cc4e6b9195fd8b64eb5e65/BrownBat-0.0b2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5bcfec7273bb13e7713e859bb3f0d6c2", "sha256": "b71a8ebfb0b727f0d6ba83c3fe3a8ae0bbc479f5eae7ac3a1891ee7887303595"}, "downloads": -1, "filename": "BrownBat-0.0b2.tar.gz", "has_sig": false, "md5_digest": "5bcfec7273bb13e7713e859bb3f0d6c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25623, "upload_time": "2014-12-20T16:10:36", "upload_time_iso_8601": "2014-12-20T16:10:36.196757Z", "url": "https://files.pythonhosted.org/packages/ef/2d/fb6fae8dc4d3bc7a873053fb008ad6573c5e958b63c8cf56accf47890cb6/BrownBat-0.0b2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:15 2020"}