{"info": {"author": "James Errico", "author_email": "james.errico@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4"], "description": "phishnetpy\n==========\n\nphishnetpy is a Python client for the `Phish.net\nAPI <http://api.phish.net>`__. It works with either Python 2 or 3 and\nsupports all of the endpoints provided by api.phish.net.\n\nInstallation\n============\n\nYou guessed it...\n\n::\n\n    pip install phishnetpy\n\nGetting Started\n===============\n\nAs you browse the `Phish.net API\ndocumentation <http://api.phish.net/docu/>`__ you will see that some API\nmethods are labeled as \"protected\". This means that in order to use\nthose methods, you must generate an Application Key. To allow both\npublic and protected usage, there are several setup steps you have to\ncomplete.\n\nPublic API Methods\n------------------\n\nFor \"public\" or \"unprotected\" API calls, you simply need to instantiate\nthe PhishNetAPI class, and call the methods for each of the API methods.\n\n.. code:: python\n\n    >>> from phishnetpy import PhishNetAPI\n    >>> phishnet = PhishNetAPI()\n    >>> artists = phishnet.artists_get()\n    >>> artists\n    [{'artist': 'Phish', 'slug': 'phish', 'artistid': '1'}, {'artist': 'Trey Anastasio', 'slug': 'trey-anastasio-band', 'artistid': '2'}, {'artist': 'Mike Gordon', 'slug': 'mike-gordon', 'artistid': '6'}, {'artist': 'Jon Fishman', 'slug': 'jon-fishman', 'artistid': '7'}, {'artist': 'Page McConnell', 'slug': 'page-mcconnell', 'artistid': '9'}]\n\nAttempting to call protected methods without passing in an API key into\nthe constructor will raise ``phishnetpy.exceptions.AuthError``.\n\n.. code:: python\n\n    >>> phishnet.user_username_check(\"wilson\")\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n      File \"./phishnetpy/phishnetpy/decorators.py\", line 16, in wrapper\n        raise AuthError(\"{} requires an API key\".format(qual_name_safe(f)))\n    phishnetpy.exceptions.AuthError: PhishNetAPI.user_username_check requires an API key\n\nProtected API Methods\n---------------------\n\nIn order to collect \"protected\" API methods, you must pass an API key\ninto the constuctor.\n\n.. code:: python\n\n    >>> from phishnetpy import PhishNetAPI\n    >>> my_api_key = \"<MY API KEY>\" # Private API key from http://api.phish.net/keys/\n    >>> phishnet = PhishNetAPI(api_key=my_api_key)\n    >>> phishnet.user_username_check(\"wilson\")\n    {'success': '0', 'reason': 'Sorry! wilson is already taken.'}\n\nMethods requiring user authorization\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSome protected methods additionally require an auth\\_key to take actions\non behalf of specific users. This includes submitting reviews, forum\nthreads, or adding a show to \"My Shows\".\n\nphishnetpy can make generating auth codes simpler by adding some logic\non top of the ``pnet.api.*`` API methods.\n\nThe simplest way is probably by using the ``authorize`` method. In order\nto make this method work, you will need both the username and password\nof the user you are authorizing (at least the first time).\n\n.. code:: python\n\n    >>> from phishnetpy import PhishNetAPI\n    >>> my_api_key = \"<MY API KEY>\" # Private API key from http://api.phish.net/keys/\n    >>> phishnet = PhishNetAPI(api_key=my_api_key)\n    >>> phishnet.authorize('authorized_username', 'that_users_password')\n\nIf unsuccessful, the ``phishnetpy.exceptions.AuthError`` will be raised.\nIf successful, the authorized username and auth key will be stored as\nattributes on the instance you're working with.\n\n.. code:: python\n\n    >>> phishnet.username\n    'authorized_username'\n    >>> phishnet.auth_key\n    'ABCD123456789012345'\n\nOnce those attributes have been set, you can make user-authorized API\ncalls. For example, lets add, and then remove `Halloween\n2014 <http://phish.net/setlists/?d=2014-10-31>`__ to my shows.\n\n.. code:: python\n\n    >>> len(phishnet.user_myshows_get_authorized())\n    7\n    >>> phishnet.user_myshows_add('2014-10-31')\n    {'success': 1}\n    >>> len(phishnet.user_myshows_get_authorized())\n    8\n    >>> phishnet.user_myshows_remove('2014-10-31')\n    {'success': 1}\n    >>> len(phishnet.user_myshows_get_authorized())\n    7\n\nOnce authorized, you should not store the user's password (per the\nPhish.net terms).\n\n.. |Build Status| image:: https://travis-ci.org/jameserrico/phishnetpy.svg?branch=master\n   :target: https://travis-ci.org/jameserrico/phishnetpy", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jameserrico/phishnetpy", "keywords": "phish phish.net client", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "phishnetpy", "package_url": "https://pypi.org/project/phishnetpy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/phishnetpy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/jameserrico/phishnetpy"}, "release_url": "https://pypi.org/project/phishnetpy/0.2.4/", "requires_dist": null, "requires_python": null, "summary": "Python client for the Phish.net API", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"phishnetpy\">\n<h2>phishnetpy</h2>\n<p>phishnetpy is a Python client for the <a href=\"http://api.phish.net\" rel=\"nofollow\">Phish.net\nAPI</a>. It works with either Python 2 or 3 and\nsupports all of the endpoints provided by api.phish.net.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You guessed it\u2026</p>\n<pre>pip install phishnetpy\n</pre>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>As you browse the <a href=\"http://api.phish.net/docu/\" rel=\"nofollow\">Phish.net API\ndocumentation</a> you will see that some API\nmethods are labeled as \u201cprotected\u201d. This means that in order to use\nthose methods, you must generate an Application Key. To allow both\npublic and protected usage, there are several setup steps you have to\ncomplete.</p>\n<div id=\"public-api-methods\">\n<h3>Public API Methods</h3>\n<p>For \u201cpublic\u201d or \u201cunprotected\u201d API calls, you simply need to instantiate\nthe PhishNetAPI class, and call the methods for each of the API methods.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">phishnetpy</span> <span class=\"kn\">import</span> <span class=\"n\">PhishNetAPI</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">phishnet</span> <span class=\"o\">=</span> <span class=\"n\">PhishNetAPI</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">artists</span> <span class=\"o\">=</span> <span class=\"n\">phishnet</span><span class=\"o\">.</span><span class=\"n\">artists_get</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">artists</span>\n<span class=\"p\">[{</span><span class=\"s1\">'artist'</span><span class=\"p\">:</span> <span class=\"s1\">'Phish'</span><span class=\"p\">,</span> <span class=\"s1\">'slug'</span><span class=\"p\">:</span> <span class=\"s1\">'phish'</span><span class=\"p\">,</span> <span class=\"s1\">'artistid'</span><span class=\"p\">:</span> <span class=\"s1\">'1'</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'artist'</span><span class=\"p\">:</span> <span class=\"s1\">'Trey Anastasio'</span><span class=\"p\">,</span> <span class=\"s1\">'slug'</span><span class=\"p\">:</span> <span class=\"s1\">'trey-anastasio-band'</span><span class=\"p\">,</span> <span class=\"s1\">'artistid'</span><span class=\"p\">:</span> <span class=\"s1\">'2'</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'artist'</span><span class=\"p\">:</span> <span class=\"s1\">'Mike Gordon'</span><span class=\"p\">,</span> <span class=\"s1\">'slug'</span><span class=\"p\">:</span> <span class=\"s1\">'mike-gordon'</span><span class=\"p\">,</span> <span class=\"s1\">'artistid'</span><span class=\"p\">:</span> <span class=\"s1\">'6'</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'artist'</span><span class=\"p\">:</span> <span class=\"s1\">'Jon Fishman'</span><span class=\"p\">,</span> <span class=\"s1\">'slug'</span><span class=\"p\">:</span> <span class=\"s1\">'jon-fishman'</span><span class=\"p\">,</span> <span class=\"s1\">'artistid'</span><span class=\"p\">:</span> <span class=\"s1\">'7'</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'artist'</span><span class=\"p\">:</span> <span class=\"s1\">'Page McConnell'</span><span class=\"p\">,</span> <span class=\"s1\">'slug'</span><span class=\"p\">:</span> <span class=\"s1\">'page-mcconnell'</span><span class=\"p\">,</span> <span class=\"s1\">'artistid'</span><span class=\"p\">:</span> <span class=\"s1\">'9'</span><span class=\"p\">}]</span>\n</pre>\n<p>Attempting to call protected methods without passing in an API key into\nthe constructor will raise <tt>phishnetpy.exceptions.AuthError</tt>.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">phishnet</span><span class=\"o\">.</span><span class=\"n\">user_username_check</span><span class=\"p\">(</span><span class=\"s2\">\"wilson\"</span><span class=\"p\">)</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">\"&lt;stdin&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n  <span class=\"n\">File</span> <span class=\"s2\">\"./phishnetpy/phishnetpy/decorators.py\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">wrapper</span>\n    <span class=\"k\">raise</span> <span class=\"n\">AuthError</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\"> requires an API key\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">qual_name_safe</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)))</span>\n<span class=\"n\">phishnetpy</span><span class=\"o\">.</span><span class=\"n\">exceptions</span><span class=\"o\">.</span><span class=\"n\">AuthError</span><span class=\"p\">:</span> <span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">user_username_check</span> <span class=\"n\">requires</span> <span class=\"n\">an</span> <span class=\"n\">API</span> <span class=\"n\">key</span>\n</pre>\n</div>\n<div id=\"protected-api-methods\">\n<h3>Protected API Methods</h3>\n<p>In order to collect \u201cprotected\u201d API methods, you must pass an API key\ninto the constuctor.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">phishnetpy</span> <span class=\"kn\">import</span> <span class=\"n\">PhishNetAPI</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">my_api_key</span> <span class=\"o\">=</span> <span class=\"s2\">\"&lt;MY API KEY&gt;\"</span> <span class=\"c1\"># Private API key from http://api.phish.net/keys/</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">phishnet</span> <span class=\"o\">=</span> <span class=\"n\">PhishNetAPI</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"n\">my_api_key</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">phishnet</span><span class=\"o\">.</span><span class=\"n\">user_username_check</span><span class=\"p\">(</span><span class=\"s2\">\"wilson\"</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'success'</span><span class=\"p\">:</span> <span class=\"s1\">'0'</span><span class=\"p\">,</span> <span class=\"s1\">'reason'</span><span class=\"p\">:</span> <span class=\"s1\">'Sorry! wilson is already taken.'</span><span class=\"p\">}</span>\n</pre>\n<div id=\"methods-requiring-user-authorization\">\n<h4>Methods requiring user authorization</h4>\n<p>Some protected methods additionally require an auth_key to take actions\non behalf of specific users. This includes submitting reviews, forum\nthreads, or adding a show to \u201cMy Shows\u201d.</p>\n<p>phishnetpy can make generating auth codes simpler by adding some logic\non top of the <tt>pnet.api.*</tt> API methods.</p>\n<p>The simplest way is probably by using the <tt>authorize</tt> method. In order\nto make this method work, you will need both the username and password\nof the user you are authorizing (at least the first time).</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">phishnetpy</span> <span class=\"kn\">import</span> <span class=\"n\">PhishNetAPI</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">my_api_key</span> <span class=\"o\">=</span> <span class=\"s2\">\"&lt;MY API KEY&gt;\"</span> <span class=\"c1\"># Private API key from http://api.phish.net/keys/</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">phishnet</span> <span class=\"o\">=</span> <span class=\"n\">PhishNetAPI</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"n\">my_api_key</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">phishnet</span><span class=\"o\">.</span><span class=\"n\">authorize</span><span class=\"p\">(</span><span class=\"s1\">'authorized_username'</span><span class=\"p\">,</span> <span class=\"s1\">'that_users_password'</span><span class=\"p\">)</span>\n</pre>\n<p>If unsuccessful, the <tt>phishnetpy.exceptions.AuthError</tt> will be raised.\nIf successful, the authorized username and auth key will be stored as\nattributes on the instance you\u2019re working with.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">phishnet</span><span class=\"o\">.</span><span class=\"n\">username</span>\n<span class=\"s1\">'authorized_username'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">phishnet</span><span class=\"o\">.</span><span class=\"n\">auth_key</span>\n<span class=\"s1\">'ABCD123456789012345'</span>\n</pre>\n<p>Once those attributes have been set, you can make user-authorized API\ncalls. For example, lets add, and then remove <a href=\"http://phish.net/setlists/?d=2014-10-31\" rel=\"nofollow\">Halloween\n2014</a> to my shows.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">phishnet</span><span class=\"o\">.</span><span class=\"n\">user_myshows_get_authorized</span><span class=\"p\">())</span>\n<span class=\"mi\">7</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">phishnet</span><span class=\"o\">.</span><span class=\"n\">user_myshows_add</span><span class=\"p\">(</span><span class=\"s1\">'2014-10-31'</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'success'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">phishnet</span><span class=\"o\">.</span><span class=\"n\">user_myshows_get_authorized</span><span class=\"p\">())</span>\n<span class=\"mi\">8</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">phishnet</span><span class=\"o\">.</span><span class=\"n\">user_myshows_remove</span><span class=\"p\">(</span><span class=\"s1\">'2014-10-31'</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'success'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">phishnet</span><span class=\"o\">.</span><span class=\"n\">user_myshows_get_authorized</span><span class=\"p\">())</span>\n<span class=\"mi\">7</span>\n</pre>\n<p>Once authorized, you should not store the user\u2019s password (per the\nPhish.net terms).</p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1734235, "releases": {"0.2.3": [{"comment_text": "", "digests": {"md5": "f20893493dad0741348eaa56e110bff8", "sha256": "51c815f88acfc9582b8a9d7c3bc85de8ed8868350dd2c40f0c5da3cd177928d9"}, "downloads": -1, "filename": "phishnetpy-0.2.3.tar.gz", "has_sig": false, "md5_digest": "f20893493dad0741348eaa56e110bff8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9584, "upload_time": "2015-09-15T21:17:00", "upload_time_iso_8601": "2015-09-15T21:17:00.088168Z", "url": "https://files.pythonhosted.org/packages/d3/48/47129e0c875ffb8fcbf3a345bc2961e326eb838c41abaa0a3b1b94233a6c/phishnetpy-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "1a2b28a964094c7125bd5d365f60f543", "sha256": "46d0c17e6b700673723500437abc7a235a5470e6ae515c0ec8f9d13f70947b12"}, "downloads": -1, "filename": "phishnetpy-0.2.4.tar.gz", "has_sig": false, "md5_digest": "1a2b28a964094c7125bd5d365f60f543", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9775, "upload_time": "2015-09-23T03:03:55", "upload_time_iso_8601": "2015-09-23T03:03:55.424632Z", "url": "https://files.pythonhosted.org/packages/b6/f2/a7e55d9a4a1669a6358ae5abc88a4c9b191d54aa57a979743ff7e971cb85/phishnetpy-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1a2b28a964094c7125bd5d365f60f543", "sha256": "46d0c17e6b700673723500437abc7a235a5470e6ae515c0ec8f9d13f70947b12"}, "downloads": -1, "filename": "phishnetpy-0.2.4.tar.gz", "has_sig": false, "md5_digest": "1a2b28a964094c7125bd5d365f60f543", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9775, "upload_time": "2015-09-23T03:03:55", "upload_time_iso_8601": "2015-09-23T03:03:55.424632Z", "url": "https://files.pythonhosted.org/packages/b6/f2/a7e55d9a4a1669a6358ae5abc88a4c9b191d54aa57a979743ff7e971cb85/phishnetpy-0.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:30 2020"}