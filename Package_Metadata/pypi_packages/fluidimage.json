{"info": {"author": "Pierre Augier", "author_email": "pierre.augier@legi.cnrs.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering"], "description": ".. |travis| image:: https://travis-ci.org/fluiddyn/fluidimage.svg?branch=master\n    :target: https://travis-ci.org/fluiddyn/fluidimage\n\nFluidImage is a libre Python framework for scientific processing of large\nseries of images.\n\nImage processing for fluid mechanics is highly dominated by proprietary tools.\nSuch tools are not ideal when you want to understand and tweak the processes\nand/or to use clusters. With the improvement of the open-source tools for\nscientific computing and collaborative development, one can think it is\npossible to build together a good library/toolkit specialized in image\nprocessing for fluid mechanics. This is our project with FluidImage.\n\nThis package is young but already good enough to be used \"in production\" to\n\n- display and pre-process images,\n\n- compute displacement or velocity fields with `Particle Image Velocimetry\n  <https://en.wikipedia.org/wiki/Particle_image_velocimetry (PIV)>`_ (PIV, i.e.\n  displacements of pattern obtained by correlations of cropped images) and\n  `optical flow <https://en.wikipedia.org/wiki/Optical_flow>`_,\n\n- analyze and display PIV fields.\n\nWe want to make FluidImage easy (useful documentation, easy installation,\nusable with scripts and GUI in Qt), reliable (with good `unittests\n<https://codecov.io/bb/fluiddyn/fluidimage/>`_) and very efficient, in\nparticular when the number of images to process becomes large. Thus we want\nFluidImage to be able to run efficiently and easily on a personal computer and\non big clusters. The efficiency is achieved by using\n\n- a framework for asynchronous computations (currently, we use `Trio\n  <https://trio.readthedocs.io>`_ + multiprocessing, and in the long term we want\n  to be able to plug FluidImage to distributed computational systems like `Dask\n  <http://dask.pydata.org>`_, `Spark <https://spark.apache.org/>`_ or `Storm\n  <http://storm.apache.org/>`_),\n\n- the available cores of the central processing units (CPU) and the available\n  graphics processing units (GPU),\n\n- good profiling and efficient and specialized algorithms,\n\n- cutting-edge tools for fast computations with Python (in particular `Pythran\n  <https://pythonhosted.org/pythran/>`_ and `Theano\n  <http://deeplearning.net/software/theano>`_).", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/fluiddyn/fluidimage", "keywords": "PIV", "license": "CeCILL", "maintainer": "", "maintainer_email": "", "name": "fluidimage", "package_url": "https://pypi.org/project/fluidimage/", "platform": "", "project_url": "https://pypi.org/project/fluidimage/", "project_urls": {"Homepage": "https://bitbucket.org/fluiddyn/fluidimage"}, "release_url": "https://pypi.org/project/fluidimage/0.1.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "fluid image processing with Python.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>FluidImage is a libre Python framework for scientific processing of large\nseries of images.</p>\n<p>Image processing for fluid mechanics is highly dominated by proprietary tools.\nSuch tools are not ideal when you want to understand and tweak the processes\nand/or to use clusters. With the improvement of the open-source tools for\nscientific computing and collaborative development, one can think it is\npossible to build together a good library/toolkit specialized in image\nprocessing for fluid mechanics. This is our project with FluidImage.</p>\n<p>This package is young but already good enough to be used \u201cin production\u201d to</p>\n<ul>\n<li>display and pre-process images,</li>\n<li>compute displacement or velocity fields with <a href=\"https://en.wikipedia.org/wiki/Particle_image_velocimetry(PIV)\" rel=\"nofollow\">Particle Image Velocimetry</a> (PIV, i.e.\ndisplacements of pattern obtained by correlations of cropped images) and\n<a href=\"https://en.wikipedia.org/wiki/Optical_flow\" rel=\"nofollow\">optical flow</a>,</li>\n<li>analyze and display PIV fields.</li>\n</ul>\n<p>We want to make FluidImage easy (useful documentation, easy installation,\nusable with scripts and GUI in Qt), reliable (with good <a href=\"https://codecov.io/bb/fluiddyn/fluidimage/\" rel=\"nofollow\">unittests</a>) and very efficient, in\nparticular when the number of images to process becomes large. Thus we want\nFluidImage to be able to run efficiently and easily on a personal computer and\non big clusters. The efficiency is achieved by using</p>\n<ul>\n<li>a framework for asynchronous computations (currently, we use <a href=\"https://trio.readthedocs.io\" rel=\"nofollow\">Trio</a> + multiprocessing, and in the long term we want\nto be able to plug FluidImage to distributed computational systems like <a href=\"http://dask.pydata.org\" rel=\"nofollow\">Dask</a>, <a href=\"https://spark.apache.org/\" rel=\"nofollow\">Spark</a> or <a href=\"http://storm.apache.org/\" rel=\"nofollow\">Storm</a>),</li>\n<li>the available cores of the central processing units (CPU) and the available\ngraphics processing units (GPU),</li>\n<li>good profiling and efficient and specialized algorithms,</li>\n<li>cutting-edge tools for fast computations with Python (in particular <a href=\"https://pythonhosted.org/pythran/\" rel=\"nofollow\">Pythran</a> and <a href=\"http://deeplearning.net/software/theano\" rel=\"nofollow\">Theano</a>).</li>\n</ul>\n\n          </div>"}, "last_serial": 5364493, "releases": {"0.0.0a0": [], "0.0.1b0": [{"comment_text": "", "digests": {"md5": "f6c9368a01aae95124348885cd2366d7", "sha256": "fdd37b8f9c26cd6740cfaa2fff4d2742d83a4021646fc556da459a7afb44d410"}, "downloads": -1, "filename": "fluidimage-0.0.1b0.tar.gz", "has_sig": false, "md5_digest": "f6c9368a01aae95124348885cd2366d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49480, "upload_time": "2016-05-30T22:28:46", "upload_time_iso_8601": "2016-05-30T22:28:46.784510Z", "url": "https://files.pythonhosted.org/packages/b0/64/b18abade44a2e44c1f3913b25d861b555bb0c3bfd3bf8f565cbfd6c0a371/fluidimage-0.0.1b0.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "525410f928430c695d01bf61ffdce34e", "sha256": "719143fb7b5fa741fc115fc006eccb77a1c2269f00cb34feaf51ff5f3de6ce38"}, "downloads": -1, "filename": "fluidimage-0.0.3.tar.gz", "has_sig": false, "md5_digest": "525410f928430c695d01bf61ffdce34e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 141186, "upload_time": "2018-08-29T09:47:19", "upload_time_iso_8601": "2018-08-29T09:47:19.245372Z", "url": "https://files.pythonhosted.org/packages/d2/7d/664301916882100cea449b6b8b1c1b6b60f6a42e605745bd5d418d18b66c/fluidimage-0.0.3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "1d0a479157ef452364670368feaed02e", "sha256": "93edc764679c22c1b1546e4fa9962012a0792ec8dfacdae63d48d699c33201cc"}, "downloads": -1, "filename": "fluidimage-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1d0a479157ef452364670368feaed02e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 153357, "upload_time": "2018-10-03T14:24:03", "upload_time_iso_8601": "2018-10-03T14:24:03.951641Z", "url": "https://files.pythonhosted.org/packages/5f/ad/bf9e262ec478cea119a1b8594997c19dbf4986c46b701f0ff56ad0f54e2d/fluidimage-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7ae6fc141fbdb1d2f757eba782bb8924", "sha256": "749d682ea0a14c9d9e7d58c8b0d4a0274a89c3fa2a0a81557563473b85236d4d"}, "downloads": -1, "filename": "fluidimage-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7ae6fc141fbdb1d2f757eba782bb8924", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18898869, "upload_time": "2019-05-23T13:41:52", "upload_time_iso_8601": "2019-05-23T13:41:52.222780Z", "url": "https://files.pythonhosted.org/packages/60/4d/23e8987ea0f82e6bd7c77e593594bf1fb3e5f3f6dfbdb040f75d3c7d7826/fluidimage-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "9a281021ab567de9b3fac52074fa067d", "sha256": "f2910a799bcd625a3a10ae6afb3e05668629e21764ea6ee171774a0817afee00"}, "downloads": -1, "filename": "fluidimage-0.1.2.tar.gz", "has_sig": false, "md5_digest": "9a281021ab567de9b3fac52074fa067d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18881293, "upload_time": "2019-06-05T21:55:03", "upload_time_iso_8601": "2019-06-05T21:55:03.615360Z", "url": "https://files.pythonhosted.org/packages/bd/dd/1fcefa922030db6f2de9d9e6d6a3d385d64a3db392ad830f271c0f599986/fluidimage-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9a281021ab567de9b3fac52074fa067d", "sha256": "f2910a799bcd625a3a10ae6afb3e05668629e21764ea6ee171774a0817afee00"}, "downloads": -1, "filename": "fluidimage-0.1.2.tar.gz", "has_sig": false, "md5_digest": "9a281021ab567de9b3fac52074fa067d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18881293, "upload_time": "2019-06-05T21:55:03", "upload_time_iso_8601": "2019-06-05T21:55:03.615360Z", "url": "https://files.pythonhosted.org/packages/bd/dd/1fcefa922030db6f2de9d9e6d6a3d385d64a3db392ad830f271c0f599986/fluidimage-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:01:27 2020"}