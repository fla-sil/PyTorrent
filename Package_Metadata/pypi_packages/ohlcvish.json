{"info": {"author": "Alexander Terbeznik", "author_email": "alexander.terbeznik@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "ohlcvish\n========\n\n`ohlcvish` takes **OHLCV** data, generate multiple technical indicators on it and then gives you all existing *Buy-Hold-Sell* combinations in the dataset. Mean, median, min and max are the clustered results of the respective signal combination.\n\n## How to use\n\nTo use `ohlcvish` you need your OHLCV data to be in a [pandas.DataFrame](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html) like this:\n\n```python\nimport pandas as pd\n\neth = pd.read_csv(\"data/ETH.csv\", index_col=\"datetime\", parse_dates=True)\n\neth.head()\n```\n\n```\n            close  high     low    open   volume\ndatetime                                        \n2015-08-07   3.00   3.0  0.6747  0.6747   123.93\n2015-08-08   1.20   3.0  0.1500  3.0000  2119.43\n2015-08-09   1.20   1.2  1.2000  1.2000     0.00\n2015-08-10   1.20   1.2  1.2000  1.2000     0.00\n2015-08-11   0.99   1.2  0.6504  1.2000  9486.09\n```\n\nUse `ohlcvish()` function to get all signals:\n\n```python\nfrom ohlcvish import ohlcvish\n\nsignals = ohlcvish(eth)\n\nsignals.head()\n```\n\n```\n   macd  rsi  stoch  adx  aroon  bbands  sar  ma  amount  forecast_mean  forecast_median  forecast_min  forecast_max\n0    -1   -1      0    0      0       0   -1   0       1      59.947906        59.947906     59.947906     59.947906\n1    -1    0      0   -1     -1       0    0   0       1      -2.904930        -2.904930     -2.904930     -2.904930\n2    -1    0      0   -1      0       0   -1   0       3      -7.415414        -6.642701    -11.645688     -3.957853\n3    -1    0      0   -1      0       0    0   0       1     298.919554       298.919554    298.919554    298.919554\n4    -1    0      0    0     -1       1   -1  -1       1     -54.082750       -54.082750    -54.082750    -54.082750\n```\n\nDefine `forecast_period` to change forecast for mean, median, min and max.\n\n```python\nsignals = ohlcvish(eth, forecast_period=10)\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/terbeznik/ohlcvish", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ohlcvish", "package_url": "https://pypi.org/project/ohlcvish/", "platform": "", "project_url": "https://pypi.org/project/ohlcvish/", "project_urls": {"Homepage": "https://github.com/terbeznik/ohlcvish"}, "release_url": "https://pypi.org/project/ohlcvish/0.0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "analyse trading signals in OHLCV data", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ohlcvish</h1>\n<p><code>ohlcvish</code> takes <strong>OHLCV</strong> data, generate multiple technical indicators on it and then gives you all existing <em>Buy-Hold-Sell</em> combinations in the dataset. Mean, median, min and max are the clustered results of the respective signal combination.</p>\n<h2>How to use</h2>\n<p>To use <code>ohlcvish</code> you need your OHLCV data to be in a <a href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html\" rel=\"nofollow\">pandas.DataFrame</a> like this:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n\n<span class=\"n\">eth</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">\"data/ETH.csv\"</span><span class=\"p\">,</span> <span class=\"n\">index_col</span><span class=\"o\">=</span><span class=\"s2\">\"datetime\"</span><span class=\"p\">,</span> <span class=\"n\">parse_dates</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">eth</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span>\n</pre>\n<pre><code>            close  high     low    open   volume\ndatetime                                        \n2015-08-07   3.00   3.0  0.6747  0.6747   123.93\n2015-08-08   1.20   3.0  0.1500  3.0000  2119.43\n2015-08-09   1.20   1.2  1.2000  1.2000     0.00\n2015-08-10   1.20   1.2  1.2000  1.2000     0.00\n2015-08-11   0.99   1.2  0.6504  1.2000  9486.09\n</code></pre>\n<p>Use <code>ohlcvish()</code> function to get all signals:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ohlcvish</span> <span class=\"kn\">import</span> <span class=\"n\">ohlcvish</span>\n\n<span class=\"n\">signals</span> <span class=\"o\">=</span> <span class=\"n\">ohlcvish</span><span class=\"p\">(</span><span class=\"n\">eth</span><span class=\"p\">)</span>\n\n<span class=\"n\">signals</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span>\n</pre>\n<pre><code>   macd  rsi  stoch  adx  aroon  bbands  sar  ma  amount  forecast_mean  forecast_median  forecast_min  forecast_max\n0    -1   -1      0    0      0       0   -1   0       1      59.947906        59.947906     59.947906     59.947906\n1    -1    0      0   -1     -1       0    0   0       1      -2.904930        -2.904930     -2.904930     -2.904930\n2    -1    0      0   -1      0       0   -1   0       3      -7.415414        -6.642701    -11.645688     -3.957853\n3    -1    0      0   -1      0       0    0   0       1     298.919554       298.919554    298.919554    298.919554\n4    -1    0      0    0     -1       1   -1  -1       1     -54.082750       -54.082750    -54.082750    -54.082750\n</code></pre>\n<p>Define <code>forecast_period</code> to change forecast for mean, median, min and max.</p>\n<pre><span class=\"n\">signals</span> <span class=\"o\">=</span> <span class=\"n\">ohlcvish</span><span class=\"p\">(</span><span class=\"n\">eth</span><span class=\"p\">,</span> <span class=\"n\">forecast_period</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6119516, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "816700ec8cdf28155b4fc4f896b9e172", "sha256": "a4358f231a0b0aa25bf8218761047e8075491ec8bac26605a4c7e48dc8322fd5"}, "downloads": -1, "filename": "ohlcvish-0.0.1.tar.gz", "has_sig": false, "md5_digest": "816700ec8cdf28155b4fc4f896b9e172", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3672, "upload_time": "2019-11-11T20:42:15", "upload_time_iso_8601": "2019-11-11T20:42:15.106153Z", "url": "https://files.pythonhosted.org/packages/51/6f/8f4c6ebb73560e5857360ae0b8388cc4ded6e38b41689123126e2e8532bf/ohlcvish-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "816700ec8cdf28155b4fc4f896b9e172", "sha256": "a4358f231a0b0aa25bf8218761047e8075491ec8bac26605a4c7e48dc8322fd5"}, "downloads": -1, "filename": "ohlcvish-0.0.1.tar.gz", "has_sig": false, "md5_digest": "816700ec8cdf28155b4fc4f896b9e172", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3672, "upload_time": "2019-11-11T20:42:15", "upload_time_iso_8601": "2019-11-11T20:42:15.106153Z", "url": "https://files.pythonhosted.org/packages/51/6f/8f4c6ebb73560e5857360ae0b8388cc4ded6e38b41689123126e2e8532bf/ohlcvish-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:51 2020"}