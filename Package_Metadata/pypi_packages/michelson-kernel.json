{"info": {"author": "Michael Zaikin (Baking Bad)", "author_email": "mz@baking-bad.org", "bugtrack_url": null, "classifiers": ["Framework :: IPython", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: System :: Shells"], "description": "# Michelson kernel\n[![PyPI version](https://badge.fury.io/py/michelson-kernel.svg?)](https://badge.fury.io/py/michelson-kernel)\n[![Docker Build Status](https://img.shields.io/docker/cloud/build/bakingbad/michelson-kernel)](https://hub.docker.com/r/bakingbad/michelson-kernel)\n[![made_with pytezos](https://img.shields.io/badge/made_with-pytezos-yellowgreen.svg)](https://github.com/baking-bad/pytezos)\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/baking-bad/michelson-kernel/binder?filepath=michelson_quickstart.ipynb)\n\nJupyter kernel for the Michelson language\n\n![michelson](https://cdn-images-1.medium.com/max/800/1*r_kVx8Rsqa0TLcIaK_WUQw.gif)\n\n## Features\n* Custom interpreter with runtime type checker\n* Syntax highlighter\n* Autocomplete by `Tab`\n* Inplace docstrings by `Shift+Tab`\n* Macros support\n* Verbose execution logging\n* Debug helpers\n\n## How to install\n\n### Option 1: try online!\nPowered by awesome Binder: https://mybinder.org/v2/gh/baking-bad/michelson-kernel/binder?filepath=michelson_quickstart.ipynb\n\n### Option 2: run in docker\n1. Get the latest image from dockerhub (only when new releases are published)\n```\ndocker pull bakingbad/michelson-kernel\n```\n2. Create container using verified docker image:\n```\ndocker run --rm -it -p 127.0.0.1:8888:8888 -v $(pwd):/home/jupyter/notebooks bakingbad/michelson-kernel\n```\n3. Open the link from container output in your browser\n4. Save notebooks in the mapped folder in order not to loose them\n\n### Option 3: install python package\n1. Requires Python 3.5+. The recomended way to install it (especially if you plan to use multiple versions) is [pyenv](https://github.com/pyenv/pyenv-installer). Make sure you have all [necessary packets](https://github.com/pyenv/pyenv/wiki/Common-build-problems) installed. After that:\n```\npyenv install 3.7.0\npyenv local 3.7.0   # per folder\npyenv global 3.7.9  # per system\n```\n\n2. Ensure you have several crypto libraries installed (see [pytezos docs](https://baking-bad.github.io/pytezos/#requirements)):\n```\nsudo apt install libsodium-dev libsecp256k1-dev libgmp-dev\n```\n3. Install the package using pip\n```\npip install michelson-kernel\n```\n4. Install Jupyter\n```\npip install jupyter\n```\n5. Check that Jupyter is now supporting Michelson kernel\n```\njupyter kernelspec list\n```\n6. Run jupyter\n```\njupyter notebook\n```\nOpen the link from the command output, create new notebook with Michelson kernel.\n\n### Option 4: install from sources\n1. Follow steps 1-2 from \"Option 3\" to ensure you have correct Python version and packets required for the PyTezos library\n2. Ensure the following packages are installed: `libssl-dev zlib1g-dev uuid-dev`\n3. Get the sources, build and install\n```\ngit clone https://github.com/baking-bad/michelson-kernel\ncd michelson-kernel\nmake\n```\n4. Follow steps 4-6 from \"Option 3\"\n\n## How to uninstall\n1. Run the following command\n```\njupyter kernelspec uninstall michelson -f\n```\n2. Check that Jupyter is no longer supporting Michelson kernel\n```\njupyter kernelspec list\n```\n3. Uninstall Python package\n```\npip uninstall michelson-kernel\n```\n\n## How it works\n* Technical details of the REPL implementation  \nhttps://forum.tezosagora.org/t/michelson-repl-in-a-jupyter-notebook/1749\n* Interactive tutorial demonstrating REPL features  \nhttps://mybinder.org/v2/gh/baking-bad/michelson-kernel/binder?filepath=michelson_quickstart.ipynb\n* Same, but a rendered version  \nhttps://nbviewer.jupyter.org/github/baking-bad/michelson-kernel/blob/binder/michelson_quickstart.ipynb\n\n### Sample notebooks\nLocated in the current repository in a separate branch:  \nhttps://github.com/baking-bad/michelson-kernel/tree/binder\n\n### List of helpers\nThese instructions are not Michelson primitives and thus cannot be used outside of the Jupyter.  \nIn the Jupyter editor helpers are highlighted in blue.\n\n#### `DUMP`\nReturns the whole stack with values, types, and annotations if any.\n\n#### `DUMP n`\nReturns top `n` items from the stack.\n\n#### `PRINT \"fmt\"`\nPrints a formatted string to the stdout, referencing arbitrary stack elements is allowed:  \n`PRINT \"This is the top element {0}, and this is the second {1}\"`\n\n#### `DROP_ALL`\nClears the stack.\n\n#### `EXPAND { code }`\nExpands Michelson macros:  \n`EXPAND { PAPAIIR }`\n\n#### `INCLUDE path`\nLoads Michelson source from the filesystem (absolute or relative path) `INCLUDE \"test.tz\"`, or from one of the Tezos networks `INCLUDE \"mainnet:KT1VG2WtYdSWz5E7chTeAdDPZNy2MpP8pTfL\"`. Initializes `parameter`, `storage`, and `code` sections. If loaded from the network, current storage is also written to the `STORAGE` variable and can be accessed later. \n\n#### `PATCH prim value`\nSets value for on of the context-dependent Michelson instructions: `AMOUNT`, `BALANCE`, `NOW`, `SOURCE`, `SENDER`, `CHAIN_ID`.\n\n#### `DEBUG bool`\nEnables or disables verbose output: `DEBUG False` or `DEBUG True`.\n\n#### `BIG_MAP_DIFF`\nTakes the top of the stack, searches for temporary `big_map` instances in that element, and displays what the big_map_diff would be like if it was a contract execution ending.\n\n#### `BEGIN %entrypoint (param_expr) (storage_expr)`\nSimulates the contract execution beginning. Requires `parameter` and `storage` sections initialized. Also, clears the stack.  \nThe `%entrypoint` argument can be omitted, `%default` will be used in that case.  \nThis helper also allocates temporary big_map instances if any in parameters or storage.  \nYou can use `STORAGE` variable for the `storage_expr`, in case you have previously loaded it from the network.\n\n#### `COMMIT`\nSimulates the contract execution ending. Requires a `Pair` of operation list and valid storage on top of the stack. Returns a list of internal operations, new storage, and big_map_diff.\n\n#### `RESET`\nClears the stack, deletes all big_map instances.\n\n#### `RESET \"network\"`\nDoes the same as the version without parameters, but also initializes `NETWORK` and `CHAIN_ID` variables.  \nCan be used to set real network context in order to access blockchain data.\n\n#### `RUN %entrypoint (param_expr) (storage_expr)`\nRequires `code` section initializes. Internally calls `BEGIN`, then executes `code`, and finishes with `COMMIT`.\n\nCheck out the articles and tutorial for more technical details, also you can take a look at the [implementation](https://github.com/baking-bad/pytezos/blob/master/pytezos/repl/helpers.py).\n\n## Contact\n* Telegram chat: [@baking_bad_chat](https://t.me/baking_bad_chat)\n* Slack channel: [#baking-bad](https://tezos-dev.slack.com/archives/CV5NX7F2L)\n\n\n## Credits\n* This project is supported by Tezos Foundation\n* Michelson test set from the Tezos repo is used to ensure the interpreter workability\n* Michelson structured documentation by Nomadic Labs is used for inline help", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/baking-bad/michelson-kernel", "keywords": "Tezos,Michelson,Jupyter", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "michelson-kernel", "package_url": "https://pypi.org/project/michelson-kernel/", "platform": "", "project_url": "https://pypi.org/project/michelson-kernel/", "project_urls": {"Homepage": "https://github.com/baking-bad/michelson-kernel"}, "release_url": "https://pypi.org/project/michelson-kernel/0.1.6/", "requires_dist": null, "requires_python": "", "summary": "Jupyter kernel for the Michelson language", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Michelson kernel</h1>\n<p><a href=\"https://badge.fury.io/py/michelson-kernel\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/94312f22e2f0a75f05d59fd6a74d5bf63d26d8ef/68747470733a2f2f62616467652e667572792e696f2f70792f6d696368656c736f6e2d6b65726e656c2e7376673f\"></a>\n<a href=\"https://hub.docker.com/r/bakingbad/michelson-kernel\" rel=\"nofollow\"><img alt=\"Docker Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a2b9c83938eef9eb648b3cbf9e568e2ad2c93fab/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f636c6f75642f6275696c642f62616b696e676261642f6d696368656c736f6e2d6b65726e656c\"></a>\n<a href=\"https://github.com/baking-bad/pytezos\" rel=\"nofollow\"><img alt=\"made_with pytezos\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a0f5f3ef50aed52b9cddb6a1c5b91b983707e561/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d6164655f776974682d707974657a6f732d79656c6c6f77677265656e2e737667\"></a>\n<a href=\"https://mybinder.org/v2/gh/baking-bad/michelson-kernel/binder?filepath=michelson_quickstart.ipynb\" rel=\"nofollow\"><img alt=\"Binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85e91bbb928104e4ce317951541520c6b9c170e1/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\"></a></p>\n<p>Jupyter kernel for the Michelson language</p>\n<p><img alt=\"michelson\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a1cbdc4bbe04f5cbfb8ed84bbac4895563894181/68747470733a2f2f63646e2d696d616765732d312e6d656469756d2e636f6d2f6d61782f3830302f312a725f6b5678385273716130544c6349614b5f575551772e676966\"></p>\n<h2>Features</h2>\n<ul>\n<li>Custom interpreter with runtime type checker</li>\n<li>Syntax highlighter</li>\n<li>Autocomplete by <code>Tab</code></li>\n<li>Inplace docstrings by <code>Shift+Tab</code></li>\n<li>Macros support</li>\n<li>Verbose execution logging</li>\n<li>Debug helpers</li>\n</ul>\n<h2>How to install</h2>\n<h3>Option 1: try online!</h3>\n<p>Powered by awesome Binder: <a href=\"https://mybinder.org/v2/gh/baking-bad/michelson-kernel/binder?filepath=michelson_quickstart.ipynb\" rel=\"nofollow\">https://mybinder.org/v2/gh/baking-bad/michelson-kernel/binder?filepath=michelson_quickstart.ipynb</a></p>\n<h3>Option 2: run in docker</h3>\n<ol>\n<li>Get the latest image from dockerhub (only when new releases are published)</li>\n</ol>\n<pre><code>docker pull bakingbad/michelson-kernel\n</code></pre>\n<ol>\n<li>Create container using verified docker image:</li>\n</ol>\n<pre><code>docker run --rm -it -p 127.0.0.1:8888:8888 -v $(pwd):/home/jupyter/notebooks bakingbad/michelson-kernel\n</code></pre>\n<ol>\n<li>Open the link from container output in your browser</li>\n<li>Save notebooks in the mapped folder in order not to loose them</li>\n</ol>\n<h3>Option 3: install python package</h3>\n<ol>\n<li>Requires Python 3.5+. The recomended way to install it (especially if you plan to use multiple versions) is <a href=\"https://github.com/pyenv/pyenv-installer\" rel=\"nofollow\">pyenv</a>. Make sure you have all <a href=\"https://github.com/pyenv/pyenv/wiki/Common-build-problems\" rel=\"nofollow\">necessary packets</a> installed. After that:</li>\n</ol>\n<pre><code>pyenv install 3.7.0\npyenv local 3.7.0   # per folder\npyenv global 3.7.9  # per system\n</code></pre>\n<ol>\n<li>Ensure you have several crypto libraries installed (see <a href=\"https://baking-bad.github.io/pytezos/#requirements\" rel=\"nofollow\">pytezos docs</a>):</li>\n</ol>\n<pre><code>sudo apt install libsodium-dev libsecp256k1-dev libgmp-dev\n</code></pre>\n<ol>\n<li>Install the package using pip</li>\n</ol>\n<pre><code>pip install michelson-kernel\n</code></pre>\n<ol>\n<li>Install Jupyter</li>\n</ol>\n<pre><code>pip install jupyter\n</code></pre>\n<ol>\n<li>Check that Jupyter is now supporting Michelson kernel</li>\n</ol>\n<pre><code>jupyter kernelspec list\n</code></pre>\n<ol>\n<li>Run jupyter</li>\n</ol>\n<pre><code>jupyter notebook\n</code></pre>\n<p>Open the link from the command output, create new notebook with Michelson kernel.</p>\n<h3>Option 4: install from sources</h3>\n<ol>\n<li>Follow steps 1-2 from \"Option 3\" to ensure you have correct Python version and packets required for the PyTezos library</li>\n<li>Ensure the following packages are installed: <code>libssl-dev zlib1g-dev uuid-dev</code></li>\n<li>Get the sources, build and install</li>\n</ol>\n<pre><code>git clone https://github.com/baking-bad/michelson-kernel\ncd michelson-kernel\nmake\n</code></pre>\n<ol>\n<li>Follow steps 4-6 from \"Option 3\"</li>\n</ol>\n<h2>How to uninstall</h2>\n<ol>\n<li>Run the following command</li>\n</ol>\n<pre><code>jupyter kernelspec uninstall michelson -f\n</code></pre>\n<ol>\n<li>Check that Jupyter is no longer supporting Michelson kernel</li>\n</ol>\n<pre><code>jupyter kernelspec list\n</code></pre>\n<ol>\n<li>Uninstall Python package</li>\n</ol>\n<pre><code>pip uninstall michelson-kernel\n</code></pre>\n<h2>How it works</h2>\n<ul>\n<li>Technical details of the REPL implementation<br>\n<a href=\"https://forum.tezosagora.org/t/michelson-repl-in-a-jupyter-notebook/1749\" rel=\"nofollow\">https://forum.tezosagora.org/t/michelson-repl-in-a-jupyter-notebook/1749</a></li>\n<li>Interactive tutorial demonstrating REPL features<br>\n<a href=\"https://mybinder.org/v2/gh/baking-bad/michelson-kernel/binder?filepath=michelson_quickstart.ipynb\" rel=\"nofollow\">https://mybinder.org/v2/gh/baking-bad/michelson-kernel/binder?filepath=michelson_quickstart.ipynb</a></li>\n<li>Same, but a rendered version<br>\n<a href=\"https://nbviewer.jupyter.org/github/baking-bad/michelson-kernel/blob/binder/michelson_quickstart.ipynb\" rel=\"nofollow\">https://nbviewer.jupyter.org/github/baking-bad/michelson-kernel/blob/binder/michelson_quickstart.ipynb</a></li>\n</ul>\n<h3>Sample notebooks</h3>\n<p>Located in the current repository in a separate branch:<br>\n<a href=\"https://github.com/baking-bad/michelson-kernel/tree/binder\" rel=\"nofollow\">https://github.com/baking-bad/michelson-kernel/tree/binder</a></p>\n<h3>List of helpers</h3>\n<p>These instructions are not Michelson primitives and thus cannot be used outside of the Jupyter.<br>\nIn the Jupyter editor helpers are highlighted in blue.</p>\n<h4><code>DUMP</code></h4>\n<p>Returns the whole stack with values, types, and annotations if any.</p>\n<h4><code>DUMP n</code></h4>\n<p>Returns top <code>n</code> items from the stack.</p>\n<h4><code>PRINT \"fmt\"</code></h4>\n<p>Prints a formatted string to the stdout, referencing arbitrary stack elements is allowed:<br>\n<code>PRINT \"This is the top element {0}, and this is the second {1}\"</code></p>\n<h4><code>DROP_ALL</code></h4>\n<p>Clears the stack.</p>\n<h4><code>EXPAND { code }</code></h4>\n<p>Expands Michelson macros:<br>\n<code>EXPAND { PAPAIIR }</code></p>\n<h4><code>INCLUDE path</code></h4>\n<p>Loads Michelson source from the filesystem (absolute or relative path) <code>INCLUDE \"test.tz\"</code>, or from one of the Tezos networks <code>INCLUDE \"mainnet:KT1VG2WtYdSWz5E7chTeAdDPZNy2MpP8pTfL\"</code>. Initializes <code>parameter</code>, <code>storage</code>, and <code>code</code> sections. If loaded from the network, current storage is also written to the <code>STORAGE</code> variable and can be accessed later.</p>\n<h4><code>PATCH prim value</code></h4>\n<p>Sets value for on of the context-dependent Michelson instructions: <code>AMOUNT</code>, <code>BALANCE</code>, <code>NOW</code>, <code>SOURCE</code>, <code>SENDER</code>, <code>CHAIN_ID</code>.</p>\n<h4><code>DEBUG bool</code></h4>\n<p>Enables or disables verbose output: <code>DEBUG False</code> or <code>DEBUG True</code>.</p>\n<h4><code>BIG_MAP_DIFF</code></h4>\n<p>Takes the top of the stack, searches for temporary <code>big_map</code> instances in that element, and displays what the big_map_diff would be like if it was a contract execution ending.</p>\n<h4><code>BEGIN %entrypoint (param_expr) (storage_expr)</code></h4>\n<p>Simulates the contract execution beginning. Requires <code>parameter</code> and <code>storage</code> sections initialized. Also, clears the stack.<br>\nThe <code>%entrypoint</code> argument can be omitted, <code>%default</code> will be used in that case.<br>\nThis helper also allocates temporary big_map instances if any in parameters or storage.<br>\nYou can use <code>STORAGE</code> variable for the <code>storage_expr</code>, in case you have previously loaded it from the network.</p>\n<h4><code>COMMIT</code></h4>\n<p>Simulates the contract execution ending. Requires a <code>Pair</code> of operation list and valid storage on top of the stack. Returns a list of internal operations, new storage, and big_map_diff.</p>\n<h4><code>RESET</code></h4>\n<p>Clears the stack, deletes all big_map instances.</p>\n<h4><code>RESET \"network\"</code></h4>\n<p>Does the same as the version without parameters, but also initializes <code>NETWORK</code> and <code>CHAIN_ID</code> variables.<br>\nCan be used to set real network context in order to access blockchain data.</p>\n<h4><code>RUN %entrypoint (param_expr) (storage_expr)</code></h4>\n<p>Requires <code>code</code> section initializes. Internally calls <code>BEGIN</code>, then executes <code>code</code>, and finishes with <code>COMMIT</code>.</p>\n<p>Check out the articles and tutorial for more technical details, also you can take a look at the <a href=\"https://github.com/baking-bad/pytezos/blob/master/pytezos/repl/helpers.py\" rel=\"nofollow\">implementation</a>.</p>\n<h2>Contact</h2>\n<ul>\n<li>Telegram chat: <a href=\"https://t.me/baking_bad_chat\" rel=\"nofollow\">@baking_bad_chat</a></li>\n<li>Slack channel: <a href=\"https://tezos-dev.slack.com/archives/CV5NX7F2L\" rel=\"nofollow\">#baking-bad</a></li>\n</ul>\n<h2>Credits</h2>\n<ul>\n<li>This project is supported by Tezos Foundation</li>\n<li>Michelson test set from the Tezos repo is used to ensure the interpreter workability</li>\n<li>Michelson structured documentation by Nomadic Labs is used for inline help</li>\n</ul>\n\n          </div>"}, "last_serial": 6961587, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "79cc1da51b82df35755aa73263649afe", "sha256": "c29547d702402a9d38224d6d87c2e01b52b88605906eb2baba576f256d528c26"}, "downloads": -1, "filename": "michelson-kernel-0.1.0.tar.gz", "has_sig": false, "md5_digest": "79cc1da51b82df35755aa73263649afe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6337, "upload_time": "2020-02-27T16:31:50", "upload_time_iso_8601": "2020-02-27T16:31:50.979944Z", "url": "https://files.pythonhosted.org/packages/61/91/0c7b69485c94210a13392c674713d3b12066a6d0d5c2f9c030346b58fc5c/michelson-kernel-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9f037d550a4e54b652fb3b8161e38fe8", "sha256": "ee59fee3064b7c05e87c1876d13dd22a4a477e8cb52e6154dfed410072bd5b89"}, "downloads": -1, "filename": "michelson-kernel-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9f037d550a4e54b652fb3b8161e38fe8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7794, "upload_time": "2020-02-27T17:02:11", "upload_time_iso_8601": "2020-02-27T17:02:11.067838Z", "url": "https://files.pythonhosted.org/packages/7d/9c/0ba19cafc53cedd2d09db6aea2f745ababaedc060395e0a7405f18703d59/michelson-kernel-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "3bc960522dd03eec85a330bc2e612caf", "sha256": "5093ab6249b3dc7967b1175db8fcbcf31775f613aebcce036b0c16d65d9ad93c"}, "downloads": -1, "filename": "michelson-kernel-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3bc960522dd03eec85a330bc2e612caf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7780, "upload_time": "2020-02-27T17:09:48", "upload_time_iso_8601": "2020-02-27T17:09:48.946562Z", "url": "https://files.pythonhosted.org/packages/f9/74/897a2e993b1fb0d51a80ffd805666e2b0e95c5ac89d768646b7008e5ac2a/michelson-kernel-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "683deae02569272771826b5b891cdcdb", "sha256": "b70ba9f45f21848f571e1738b3b9d3c68ba455144aa06ade4811832a69b8245c"}, "downloads": -1, "filename": "michelson-kernel-0.1.3.tar.gz", "has_sig": false, "md5_digest": "683deae02569272771826b5b891cdcdb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10451, "upload_time": "2020-03-06T02:54:42", "upload_time_iso_8601": "2020-03-06T02:54:42.849139Z", "url": "https://files.pythonhosted.org/packages/db/eb/d3d18b6ff879aadfba692225930cc42c3a2fe5d35fda50510104fac024a0/michelson-kernel-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "480876b015688acaaeefab13083b3732", "sha256": "a6593cd172f65c35b23b53fa928e94a1e17d6c9b0cd775c1036e07bf97e7623d"}, "downloads": -1, "filename": "michelson-kernel-0.1.4.tar.gz", "has_sig": false, "md5_digest": "480876b015688acaaeefab13083b3732", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10456, "upload_time": "2020-03-06T23:28:18", "upload_time_iso_8601": "2020-03-06T23:28:18.722616Z", "url": "https://files.pythonhosted.org/packages/96/64/e609dece1884390632215846294f4469b1fc5e22d221b935d46614a9b1d9/michelson-kernel-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "7b9e7a2f6944cd3da89588b40de29f37", "sha256": "7d481005f30be4c1452b7c33295de5cb2de094e7782d680921cb007acdea3c15"}, "downloads": -1, "filename": "michelson-kernel-0.1.5.tar.gz", "has_sig": false, "md5_digest": "7b9e7a2f6944cd3da89588b40de29f37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11315, "upload_time": "2020-03-18T20:59:54", "upload_time_iso_8601": "2020-03-18T20:59:54.214792Z", "url": "https://files.pythonhosted.org/packages/ef/cc/d4b5cc63a72a1748c980eeff9d63a43dc05f715c99de39da477b82181d64/michelson-kernel-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "04a01c4d08e8251d31770615dabd7c9b", "sha256": "aa965fcf1d2c843f20f97199d70118f5e658817bba595c697efe23ad83c81846"}, "downloads": -1, "filename": "michelson-kernel-0.1.6.tar.gz", "has_sig": false, "md5_digest": "04a01c4d08e8251d31770615dabd7c9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14553, "upload_time": "2020-04-06T13:20:40", "upload_time_iso_8601": "2020-04-06T13:20:40.445664Z", "url": "https://files.pythonhosted.org/packages/5b/74/d49c4f979a3edc72c6b7a8ee25d056838f9113b168c4508070e51097ee35/michelson-kernel-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "04a01c4d08e8251d31770615dabd7c9b", "sha256": "aa965fcf1d2c843f20f97199d70118f5e658817bba595c697efe23ad83c81846"}, "downloads": -1, "filename": "michelson-kernel-0.1.6.tar.gz", "has_sig": false, "md5_digest": "04a01c4d08e8251d31770615dabd7c9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14553, "upload_time": "2020-04-06T13:20:40", "upload_time_iso_8601": "2020-04-06T13:20:40.445664Z", "url": "https://files.pythonhosted.org/packages/5b/74/d49c4f979a3edc72c6b7a8ee25d056838f9113b168c4508070e51097ee35/michelson-kernel-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:22 2020"}