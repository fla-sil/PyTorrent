{"info": {"author": "Karl O. Pinc", "author_email": "plasmic@googlegroups.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": ".. Copyright (C) 2016 The Meme Factory, Inc.  http://www.meme.com/\n\n   This file is part of Plasmic.\n  \n   Plasmic is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n  \n   Plasmic is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n  \n   You should have received a copy of the GNU Lesser General Public License\n   along with Plasmic.  If not, see <http://www.gnu.org/licenses/>.\n\n   Karl O. Pinc <kop@meme.com>\n\n\nPlasmic\n=======\n\nConfiguration files with a Python-like syntax\n---------------------------------------------\n\nParse a very Python-like mini-language to produce a dictionary.  This\nallows Python programs to be configured using a Python-like language\nconsisting of dictionaries, tuples, and literal values.  Plasmic\ndictionary keys must be literal values.  Plasmic dictionary values can\nbe literal values and, possibly nested, tuples and other plasmic\ndictionaries.\n\nHere is a sample configuration::\n\n  {section1:\n    {key1: \"value1\",\n     key2: 2},\n   section2:\n    {key1: \"othervalue\",\n     key3: 3.0\n     subsection1:\n      {key4: (1, 2, 3)\n       key5: {\"foo\": \"meta\",\n              \"bar\": \"syntactic\"}\n      }\n    }\n  }\n\nAs a convenience all dictionary entries keyed by symbols have their\nkeys converted to the lower case string equivalent.\n\nThe plasmic Python-like language contains almost no expression\nevaluation.  The single, optional, expression allowed is a\n``string.Formmatter.format()`` formatting syntax used for\ninterpolation -- the insertion of of data into values by reference to\nPlasmic dictionary keys.\n\nThe recommended suffix for files written in the Plasmic language is:\n``.pcf``\n\n\nSub-Projects\n------------\n\nPlasmic has the following sub-projects to support configuring\napplications using files written in Plasmic.  Most users will not want\nto use plasmic directly but will import one of these sub-projects.\n\n\nplasmic.configparser\n^^^^^^^^^^^^^^^^^^^^\n\nA ``configparser``-like API for the reading and writing of\nconfiguration files in plasmic syntax.\n\n::\n\n   import plasmic.configparser\n\n\nplasmic.montague\n^^^^^^^^^^^^^^^^\n\nA plugin allowing Plasmic configuration files to drive the\n``Montague`` WSGI component loader.\n\n\nComplete Documentation\n----------------------\n\nThe complete documentation set can be found on the Plasmic home page at\nhttp://plasmic.readthedocs.org/.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://plasmic.readthedocs.org/", "keywords": "cfg conf config configparser configuration file interpolation parser parsing pcf python replacement", "license": "LGPLv3+", "maintainer": null, "maintainer_email": null, "name": "plasmic", "package_url": "https://pypi.org/project/plasmic/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/plasmic/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://plasmic.readthedocs.org/"}, "release_url": "https://pypi.org/project/plasmic/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Parse configuration files written in a Python-like syntax", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"configuration-files-with-a-python-like-syntax\">\n<h2>Configuration files with a Python-like syntax</h2>\n<p>Parse a very Python-like mini-language to produce a dictionary.  This\nallows Python programs to be configured using a Python-like language\nconsisting of dictionaries, tuples, and literal values.  Plasmic\ndictionary keys must be literal values.  Plasmic dictionary values can\nbe literal values and, possibly nested, tuples and other plasmic\ndictionaries.</p>\n<p>Here is a sample configuration:</p>\n<pre>{section1:\n  {key1: \"value1\",\n   key2: 2},\n section2:\n  {key1: \"othervalue\",\n   key3: 3.0\n   subsection1:\n    {key4: (1, 2, 3)\n     key5: {\"foo\": \"meta\",\n            \"bar\": \"syntactic\"}\n    }\n  }\n}\n</pre>\n<p>As a convenience all dictionary entries keyed by symbols have their\nkeys converted to the lower case string equivalent.</p>\n<p>The plasmic Python-like language contains almost no expression\nevaluation.  The single, optional, expression allowed is a\n<tt>string.Formmatter.format()</tt> formatting syntax used for\ninterpolation \u2013 the insertion of of data into values by reference to\nPlasmic dictionary keys.</p>\n<p>The recommended suffix for files written in the Plasmic language is:\n<tt>.pcf</tt></p>\n</div>\n<div id=\"sub-projects\">\n<h2>Sub-Projects</h2>\n<p>Plasmic has the following sub-projects to support configuring\napplications using files written in Plasmic.  Most users will not want\nto use plasmic directly but will import one of these sub-projects.</p>\n<div id=\"plasmic-configparser\">\n<h3>plasmic.configparser</h3>\n<p>A <tt>configparser</tt>-like API for the reading and writing of\nconfiguration files in plasmic syntax.</p>\n<pre>import plasmic.configparser\n</pre>\n</div>\n<div id=\"plasmic-montague\">\n<h3>plasmic.montague</h3>\n<p>A plugin allowing Plasmic configuration files to drive the\n<tt>Montague</tt> WSGI component loader.</p>\n</div>\n</div>\n<div id=\"complete-documentation\">\n<h2>Complete Documentation</h2>\n<p>The complete documentation set can be found on the Plasmic home page at\n<a href=\"http://plasmic.readthedocs.org/\" rel=\"nofollow\">http://plasmic.readthedocs.org/</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 2066272, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c9b99ecb2cdf5b99b0fb9eb2d71c281a", "sha256": "1dad0446a58de76fa18d6b4b76fab85d25ffe5b37fca1c7410e2c5946738ac28"}, "downloads": -1, "filename": "plasmic-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c9b99ecb2cdf5b99b0fb9eb2d71c281a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19524, "upload_time": "2016-04-13T14:09:30", "upload_time_iso_8601": "2016-04-13T14:09:30.710008Z", "url": "https://files.pythonhosted.org/packages/bb/4b/34c0fde8c2b65f3b779c2b10d463daa653aa5ab5cece04a90a216f57f0f2/plasmic-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d284313e2013fd69e78361ac0118eaf5", "sha256": "2c8d114d7dee7852be53eee29b49462e542cba2dcae508090776e64fa0c03e2a"}, "downloads": -1, "filename": "plasmic-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d284313e2013fd69e78361ac0118eaf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19855, "upload_time": "2016-04-15T15:42:18", "upload_time_iso_8601": "2016-04-15T15:42:18.703418Z", "url": "https://files.pythonhosted.org/packages/c5/0c/443e8d4435bca8962ed47e9fdf4791d371e4afe95e86a1ceaf0bee470a80/plasmic-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "9cd34cfcf81eba1f7b52cbb1f96e9728", "sha256": "042591425d01028fe491f7e6b0e7ade0059f9f9c4ed20d9d1523d3a3f7a98de0"}, "downloads": -1, "filename": "plasmic-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9cd34cfcf81eba1f7b52cbb1f96e9728", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27451, "upload_time": "2016-04-15T20:52:10", "upload_time_iso_8601": "2016-04-15T20:52:10.705874Z", "url": "https://files.pythonhosted.org/packages/1b/bb/0601dc8bcb4abe1cadb47140fa1e46a2b1de43eb60ca01dff6b7afbd0350/plasmic-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9cd34cfcf81eba1f7b52cbb1f96e9728", "sha256": "042591425d01028fe491f7e6b0e7ade0059f9f9c4ed20d9d1523d3a3f7a98de0"}, "downloads": -1, "filename": "plasmic-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9cd34cfcf81eba1f7b52cbb1f96e9728", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27451, "upload_time": "2016-04-15T20:52:10", "upload_time_iso_8601": "2016-04-15T20:52:10.705874Z", "url": "https://files.pythonhosted.org/packages/1b/bb/0601dc8bcb4abe1cadb47140fa1e46a2b1de43eb60ca01dff6b7afbd0350/plasmic-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:39 2020"}