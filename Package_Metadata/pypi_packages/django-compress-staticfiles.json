{"info": {"author": "Armandt van Zyl", "author_email": "armandtvz@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: WWW/HTTP"], "description": "django-compress-staticfiles\n===========================\nA Django static files storage backend inheriting from [ManifestFilesMixin][16]\nand [StaticFilesStorage][12]. Compresses, using GZip and/or Brotli, and minifies\nstatic files when running the Django [collectstatic][5] command.\n\n### What this package does:\n- Compresses static files using [Brotli][1] and/or GZip. See the [included\n  filetypes][100] heading to see which filetypes are compressed.\n- Minifies JS using [rJSMin][19].\n- Minifies CSS using [csscompressor][6].\n\n### What this package does *not* do:\n- Does not support concatenation/bundling of JS or CSS.\n- Does not support transpiling from any transpiling Javascript language.\n- Does not support [SASS][13], [LESS][14] or any other CSS preprocessor.\n- This package is not a linter or tester. The collectstatic command is not the\n  place to be linting or testing your code. The primary purpose of this package\n  is compressing staticfiles for use in staging or production environments \u00e2\u20ac\u201d\n  minification is optional but does so by default.\n- Does not delete stale files from your `STATIC_ROOT` directory. If changes were\n  made to some of your static files; old files will remain there. Use the\n  `--clear` flag when running `collectstatic` to delete the entire `STATIC_ROOT`\n  and recreate it \u00e2\u20ac\u201d check out the Django docs for more info.\n\n### Some important things to take note of:\n- If `DEBUG = True` in your Django settings.py file; only the normal file\n  is used in templates. Templates will only use the hashed and minified\n  version of the file when `DEBUG = False`. This is the behaviour of the Django\n  [staticfiles][15] app in the `url` method of the `ManifestFilesMixin`.\n- The compressed version of the file is never used in the template. Your\n  webserver can decide which version of the file to serve depending on the\n  Accept-Encoding header in the request.\n- This package updates the manifest JSON file created by ManifestFilesMixin\n  with a path pointing to the hashed *and* minified version of each processed\n  file where applicable.\n- If there is a `.min` file to be copied to STATIC_ROOT; that file will be\n  compressed but not re-minified. If that `.min` file has a corresponding\n  non-minified counterpart, that non-minified file *will* be minified and\n  that minified file is the one that will be used to map `regular.css` to\n  `regular.min.{hash}.css` in the manifest file.\n- This package does not yet deal with the @import rule and url() function in\n  CSS; therefore the value is not updated after ManifestFilesMixin handles those\n  things \u00e2\u20ac\u201d the minified file will not be referenced, only the hashed version as\n  substituted by ManifestFilesMixin.\n- The original files, for example, `somefile.css` won't be compressed\n  to `somefile.css.gz` because we will likely never use it.\n- Files smaller than 200 bytes will not be compressed.\n\n### Usage with cloud storage like Google Cloud Storage or Amazon S3:\nEven though the CompressStaticFilesStorage inherits from StaticFilesStorage,\nwhich inherits from FileSystemStorage, the CompressStaticFilesMixin and\nMinifyFilesMixin can be used with your own storage.\n\n\nQuickstart\n----------\nInstall the app and it's dependencies using:\n```\npip install git+https://github.com/armandtvz/django-compress-staticfiles.git\n```\n\nSet the [STATICFILES_STORAGE][4] setting in your project settings.py as follows:\n```python\nSTATICFILES_STORAGE = 'compress_staticfiles.storage.CompressStaticFilesStorage'\n```\nYou don't need to set any other settings for everything to work but for some\nmild customisation see the settings heading for more info.\n\nRun the [collectstatic][5] command as you usually would:\n```\npython manage.py collectstatic\n```\n\n\nSettings\n--------\nThere's no need to set these settings as they have defaults \u00e2\u20ac\u201d they're there\nif you want them. All are `True` by default.\n```python\n# All are True by default.\nMINIFY_STATIC = True\nBROTLI_STATIC_COMPRESSION = True\nGZIP_STATIC_COMPRESSION = True\n```\n\n\nIncluded filetypes for compression\n----------------------------------\nOnly files ending with these extensions will be compressed:\n- css\n- js\n- txt\n- xml\n- json\n- svg\n- md\n- rst\n\n\nIncluded filetypes for minification\n-----------------------------------\n- css\n- js\n\n\nJS Minification\n---------------\nThe [rJSMin Python package][19] is used for JavaScript minification. See\nrJSMin's Github repo for docs and more information. JS is not obfuscated.\nExclamation/bang comments will be retained.\n\n\nCSS Minification\n----------------\nExclamation/bang comments will be retained.\n\n\nThere might be some questions\n-----------------------------\n#### Why not just use [django-compressor][10] or [django-pipeline][11] instead?\nThough I haven't used django-compressor or django-pipeline myself; I have gone\nthrough their respective documentation. I'm sure django-compressor and\ndjango-pipeline are excellent tools and I'm sure there's a time and place to be\nusing them.\n\nHowever, this package aims to be something smaller and simpler with\nabsolutely no configuration needed; no template tags and no extra management\ncommands. It aims to be unobtrusive; to slide straight into the regular Django\n`collectstatic' management command.\n\n#### Why no bundling/concatenation of JS or CSS?\nBundling is so HTTP/1.1. Join us in HTTP/2 where things are multiplexed. :)\nJokes aside... If you really need bundling: it's probably best to look at\nsomething like Webpack, [django-compressor][10] or [django-pipeline][11].\n\n#### Why does this package use the `ManifestFilesMixin`?\nFor those who are unfamiliar with the ManifestFilesMixin please read the\nDjango docs for [ManifestFilesMixin][16] and [ManifestStaticFilesStorage][3].\n\n\nCompatiblity\n------------\n- Compatible with Python 3.5 and above.\n- Compatible with Django 1.10 and above. Do remember that, at the time of\n  writing, Django 2.2 and below is deprecated and therefore there is only\n  official support for Django 2.2 and above.\n- Check rJSMin's Github [repo][19] / docs for more info regarding ES6\n  compatibility.\n\n\nVersioning\n----------\nThis project follows [semantic versioning][20] (SemVer).\n\n\nLicense, code of conduct and requirements\n-----------------------------------------\nCheck the root of the repo for these files.\n\n\n\n[//]: # (Links)\n\n[1]: https://github.com/google/brotli\n[2]: https://developers.google.com/closure/compiler\n[3]: https://docs.djangoproject.com/en/stable/ref/contrib/staticfiles/#manifeststaticfilesstorage\n[4]: https://docs.djangoproject.com/en/stable/ref/settings/#std:setting-STATICFILES_STORAGE\n[5]: https://docs.djangoproject.com/en/stable/ref/contrib/staticfiles/#collectstatic\n[6]: https://github.com/sprymix/csscompressor\n[7]: https://terser.org/\n[8]: https://github.com/douglascrockford/JSMin\n[9]: https://github.com/yui/yuicompressor\n[10]: https://github.com/django-compressor/django-compressor\n[11]: https://github.com/jazzband/django-pipeline\n[12]: https://docs.djangoproject.com/en/stable/ref/contrib/staticfiles/#staticfilesstorage\n[13]: https://sass-lang.com/\n[14]: http://lesscss.org/\n[15]: https://docs.djangoproject.com/en/stable/ref/contrib/staticfiles/#static-file-development-view\n[16]: https://docs.djangoproject.com/en/stable/ref/contrib/staticfiles/#manifestfilesmixin\n[17]: https://github.com/google/closure-compiler\n[18]: https://developers.google.com/closure/compiler/docs/limitations\n[19]: https://github.com/ndparker/rjsmin\n[20]: https://semver.org/\n\n[100]: /#included-filetypes-for-compression\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/armandtvz/django-compress-staticfiles", "keywords": "", "license": "GPL-3.0", "maintainer": "", "maintainer_email": "", "name": "django-compress-staticfiles", "package_url": "https://pypi.org/project/django-compress-staticfiles/", "platform": "", "project_url": "https://pypi.org/project/django-compress-staticfiles/", "project_urls": {"Homepage": "https://github.com/armandtvz/django-compress-staticfiles"}, "release_url": "https://pypi.org/project/django-compress-staticfiles/1.0.1b0/", "requires_dist": ["Django (>=2.2)", "Brotli", "csscompressor", "rjsmin"], "requires_python": ">=3.5", "summary": "A static files storage backend for compression using GZip and/or Brotli that inherits from Djangos ManifestFilesMixin and StaticFilesStorage; also minifies static files.", "version": "1.0.1b0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django-compress-staticfiles</h1>\n<p>A Django static files storage backend inheriting from <a href=\"https://docs.djangoproject.com/en/stable/ref/contrib/staticfiles/#manifestfilesmixin\" rel=\"nofollow\">ManifestFilesMixin</a>\nand <a href=\"https://docs.djangoproject.com/en/stable/ref/contrib/staticfiles/#staticfilesstorage\" rel=\"nofollow\">StaticFilesStorage</a>. Compresses, using GZip and/or Brotli, and minifies\nstatic files when running the Django <a href=\"https://docs.djangoproject.com/en/stable/ref/contrib/staticfiles/#collectstatic\" rel=\"nofollow\">collectstatic</a> command.</p>\n<h3>What this package does:</h3>\n<ul>\n<li>Compresses static files using <a href=\"https://github.com/google/brotli\" rel=\"nofollow\">Brotli</a> and/or GZip. See the <a href=\"/#included-filetypes-for-compression\" rel=\"nofollow\">included\nfiletypes</a> heading to see which filetypes are compressed.</li>\n<li>Minifies JS using <a href=\"https://github.com/ndparker/rjsmin\" rel=\"nofollow\">rJSMin</a>.</li>\n<li>Minifies CSS using <a href=\"https://github.com/sprymix/csscompressor\" rel=\"nofollow\">csscompressor</a>.</li>\n</ul>\n<h3>What this package does <em>not</em> do:</h3>\n<ul>\n<li>Does not support concatenation/bundling of JS or CSS.</li>\n<li>Does not support transpiling from any transpiling Javascript language.</li>\n<li>Does not support <a href=\"https://sass-lang.com/\" rel=\"nofollow\">SASS</a>, <a href=\"http://lesscss.org/\" rel=\"nofollow\">LESS</a> or any other CSS preprocessor.</li>\n<li>This package is not a linter or tester. The collectstatic command is not the\nplace to be linting or testing your code. The primary purpose of this package\nis compressing staticfiles for use in staging or production environments \u00e2\u20ac\u201d\nminification is optional but does so by default.</li>\n<li>Does not delete stale files from your <code>STATIC_ROOT</code> directory. If changes were\nmade to some of your static files; old files will remain there. Use the\n<code>--clear</code> flag when running <code>collectstatic</code> to delete the entire <code>STATIC_ROOT</code>\nand recreate it \u00e2\u20ac\u201d check out the Django docs for more info.</li>\n</ul>\n<h3>Some important things to take note of:</h3>\n<ul>\n<li>If <code>DEBUG = True</code> in your Django settings.py file; only the normal file\nis used in templates. Templates will only use the hashed and minified\nversion of the file when <code>DEBUG = False</code>. This is the behaviour of the Django\n<a href=\"https://docs.djangoproject.com/en/stable/ref/contrib/staticfiles/#static-file-development-view\" rel=\"nofollow\">staticfiles</a> app in the <code>url</code> method of the <code>ManifestFilesMixin</code>.</li>\n<li>The compressed version of the file is never used in the template. Your\nwebserver can decide which version of the file to serve depending on the\nAccept-Encoding header in the request.</li>\n<li>This package updates the manifest JSON file created by ManifestFilesMixin\nwith a path pointing to the hashed <em>and</em> minified version of each processed\nfile where applicable.</li>\n<li>If there is a <code>.min</code> file to be copied to STATIC_ROOT; that file will be\ncompressed but not re-minified. If that <code>.min</code> file has a corresponding\nnon-minified counterpart, that non-minified file <em>will</em> be minified and\nthat minified file is the one that will be used to map <code>regular.css</code> to\n<code>regular.min.{hash}.css</code> in the manifest file.</li>\n<li>This package does not yet deal with the @import rule and url() function in\nCSS; therefore the value is not updated after ManifestFilesMixin handles those\nthings \u00e2\u20ac\u201d the minified file will not be referenced, only the hashed version as\nsubstituted by ManifestFilesMixin.</li>\n<li>The original files, for example, <code>somefile.css</code> won't be compressed\nto <code>somefile.css.gz</code> because we will likely never use it.</li>\n<li>Files smaller than 200 bytes will not be compressed.</li>\n</ul>\n<h3>Usage with cloud storage like Google Cloud Storage or Amazon S3:</h3>\n<p>Even though the CompressStaticFilesStorage inherits from StaticFilesStorage,\nwhich inherits from FileSystemStorage, the CompressStaticFilesMixin and\nMinifyFilesMixin can be used with your own storage.</p>\n<h2>Quickstart</h2>\n<p>Install the app and it's dependencies using:</p>\n<pre><code>pip install git+https://github.com/armandtvz/django-compress-staticfiles.git\n</code></pre>\n<p>Set the <a href=\"https://docs.djangoproject.com/en/stable/ref/settings/#std:setting-STATICFILES_STORAGE\" rel=\"nofollow\">STATICFILES_STORAGE</a> setting in your project settings.py as follows:</p>\n<pre><span class=\"n\">STATICFILES_STORAGE</span> <span class=\"o\">=</span> <span class=\"s1\">'compress_staticfiles.storage.CompressStaticFilesStorage'</span>\n</pre>\n<p>You don't need to set any other settings for everything to work but for some\nmild customisation see the settings heading for more info.</p>\n<p>Run the <a href=\"https://docs.djangoproject.com/en/stable/ref/contrib/staticfiles/#collectstatic\" rel=\"nofollow\">collectstatic</a> command as you usually would:</p>\n<pre><code>python manage.py collectstatic\n</code></pre>\n<h2>Settings</h2>\n<p>There's no need to set these settings as they have defaults \u00e2\u20ac\u201d they're there\nif you want them. All are <code>True</code> by default.</p>\n<pre><span class=\"c1\"># All are True by default.</span>\n<span class=\"n\">MINIFY_STATIC</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">BROTLI_STATIC_COMPRESSION</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">GZIP_STATIC_COMPRESSION</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</pre>\n<h2>Included filetypes for compression</h2>\n<p>Only files ending with these extensions will be compressed:</p>\n<ul>\n<li>css</li>\n<li>js</li>\n<li>txt</li>\n<li>xml</li>\n<li>json</li>\n<li>svg</li>\n<li>md</li>\n<li>rst</li>\n</ul>\n<h2>Included filetypes for minification</h2>\n<ul>\n<li>css</li>\n<li>js</li>\n</ul>\n<h2>JS Minification</h2>\n<p>The <a href=\"https://github.com/ndparker/rjsmin\" rel=\"nofollow\">rJSMin Python package</a> is used for JavaScript minification. See\nrJSMin's Github repo for docs and more information. JS is not obfuscated.\nExclamation/bang comments will be retained.</p>\n<h2>CSS Minification</h2>\n<p>Exclamation/bang comments will be retained.</p>\n<h2>There might be some questions</h2>\n<h4>Why not just use <a href=\"https://github.com/django-compressor/django-compressor\" rel=\"nofollow\">django-compressor</a> or <a href=\"https://github.com/jazzband/django-pipeline\" rel=\"nofollow\">django-pipeline</a> instead?</h4>\n<p>Though I haven't used django-compressor or django-pipeline myself; I have gone\nthrough their respective documentation. I'm sure django-compressor and\ndjango-pipeline are excellent tools and I'm sure there's a time and place to be\nusing them.</p>\n<p>However, this package aims to be something smaller and simpler with\nabsolutely no configuration needed; no template tags and no extra management\ncommands. It aims to be unobtrusive; to slide straight into the regular Django\n`collectstatic' management command.</p>\n<h4>Why no bundling/concatenation of JS or CSS?</h4>\n<p>Bundling is so HTTP/1.1. Join us in HTTP/2 where things are multiplexed. :)\nJokes aside... If you really need bundling: it's probably best to look at\nsomething like Webpack, <a href=\"https://github.com/django-compressor/django-compressor\" rel=\"nofollow\">django-compressor</a> or <a href=\"https://github.com/jazzband/django-pipeline\" rel=\"nofollow\">django-pipeline</a>.</p>\n<h4>Why does this package use the <code>ManifestFilesMixin</code>?</h4>\n<p>For those who are unfamiliar with the ManifestFilesMixin please read the\nDjango docs for <a href=\"https://docs.djangoproject.com/en/stable/ref/contrib/staticfiles/#manifestfilesmixin\" rel=\"nofollow\">ManifestFilesMixin</a> and <a href=\"https://docs.djangoproject.com/en/stable/ref/contrib/staticfiles/#manifeststaticfilesstorage\" rel=\"nofollow\">ManifestStaticFilesStorage</a>.</p>\n<h2>Compatiblity</h2>\n<ul>\n<li>Compatible with Python 3.5 and above.</li>\n<li>Compatible with Django 1.10 and above. Do remember that, at the time of\nwriting, Django 2.2 and below is deprecated and therefore there is only\nofficial support for Django 2.2 and above.</li>\n<li>Check rJSMin's Github <a href=\"https://github.com/ndparker/rjsmin\" rel=\"nofollow\">repo</a> / docs for more info regarding ES6\ncompatibility.</li>\n</ul>\n<h2>Versioning</h2>\n<p>This project follows <a href=\"https://semver.org/\" rel=\"nofollow\">semantic versioning</a> (SemVer).</p>\n<h2>License, code of conduct and requirements</h2>\n<p>Check the root of the repo for these files.</p>\n\n          </div>"}, "last_serial": 7161135, "releases": {"1.0.1b0": [{"comment_text": "", "digests": {"md5": "676593f0773f576940ec183dc7e05ff0", "sha256": "ce6b9b766cda23c77ef1072846a60de856b4c1c29519d3e57c6cffe7281d7f04"}, "downloads": -1, "filename": "django_compress_staticfiles-1.0.1b0-py3-none-any.whl", "has_sig": false, "md5_digest": "676593f0773f576940ec183dc7e05ff0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 28762, "upload_time": "2020-05-04T03:21:59", "upload_time_iso_8601": "2020-05-04T03:21:59.568470Z", "url": "https://files.pythonhosted.org/packages/a0/ce/0d2ee24c87ecf71e3e5604827ee81d05ea3326f542df6c768d111b9dedaf/django_compress_staticfiles-1.0.1b0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dabf8c573bdec0f4c06d290bf10f484b", "sha256": "ec44f3065f07880c919ce998da7932519decf518c6baba565394853a8685f737"}, "downloads": -1, "filename": "django-compress-staticfiles-1.0.1b0.tar.gz", "has_sig": false, "md5_digest": "dabf8c573bdec0f4c06d290bf10f484b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 13163, "upload_time": "2020-05-04T03:22:02", "upload_time_iso_8601": "2020-05-04T03:22:02.052417Z", "url": "https://files.pythonhosted.org/packages/64/cc/24ab289c1c2563033f7096fae679364b8afbceb10d53d2d070d3c7083076/django-compress-staticfiles-1.0.1b0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "676593f0773f576940ec183dc7e05ff0", "sha256": "ce6b9b766cda23c77ef1072846a60de856b4c1c29519d3e57c6cffe7281d7f04"}, "downloads": -1, "filename": "django_compress_staticfiles-1.0.1b0-py3-none-any.whl", "has_sig": false, "md5_digest": "676593f0773f576940ec183dc7e05ff0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 28762, "upload_time": "2020-05-04T03:21:59", "upload_time_iso_8601": "2020-05-04T03:21:59.568470Z", "url": "https://files.pythonhosted.org/packages/a0/ce/0d2ee24c87ecf71e3e5604827ee81d05ea3326f542df6c768d111b9dedaf/django_compress_staticfiles-1.0.1b0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dabf8c573bdec0f4c06d290bf10f484b", "sha256": "ec44f3065f07880c919ce998da7932519decf518c6baba565394853a8685f737"}, "downloads": -1, "filename": "django-compress-staticfiles-1.0.1b0.tar.gz", "has_sig": false, "md5_digest": "dabf8c573bdec0f4c06d290bf10f484b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 13163, "upload_time": "2020-05-04T03:22:02", "upload_time_iso_8601": "2020-05-04T03:22:02.052417Z", "url": "https://files.pythonhosted.org/packages/64/cc/24ab289c1c2563033f7096fae679364b8afbceb10d53d2d070d3c7083076/django-compress-staticfiles-1.0.1b0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:54 2020"}