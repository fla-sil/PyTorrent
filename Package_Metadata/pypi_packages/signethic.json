{"info": {"author": "Francois Dion", "author_email": "fdion@dionresearch.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "\n# Signethic\n\nA Python module to easily and quickly cryptographically sign a \"thing\". The\n\"thing\" in question can be anything like a string, or any binary sequence. The\nbinary sequence could be the output of a serializer, pickling, shelving, compiled\ncode, encoder, compression or pretty much anything else. The digital signature\nbased on Public-Key Cryptography Standards (PKCS) prevents tampering.\n\nNote that this is not doing any encryption, only signing. This protects the\n\"thing\" from manipulation, but not from reading. Your overall cybersecurity\nstrategy should also cover encryption at rest, encryption in flight and least\nprivileges, along with all the other best practices in this area.\n\n# Installation\n\n## From source\n\n    python setup.py install\n\n\n## From pypi\n\n    pip install signethic\n\n\n# Quickstart\n\nSigning a \"thing\" and saving to a binary file that will contain the digital\nsignature (PKCS) and the \"thing\". In this case, a string:\n\n```python\nfrom signetic import sign_and_persist\n\n\nthing = \"the result of our campaign #12345 resulted in sales of $54321.00\"\n\nsignature = sign_and_persist(thing, path=\"result.signed\")\n```\n\nVerifying a file that has been signed, returning the \"thing\" if the signature\nis verified:\n\n```python\nfrom signetic import verify_file\n\npublic_key = ...\n\nthing = verify_file(\"result.signed\", public_key)\n```\n\n\n# Command Line\n\nAfter installing signethic, a command line is available. With no argument, it\nwill generate a private and public key, create a string, sign it, verify it, save\na binary file with the signature and string and verify that file. (*see* `main()`\nfor the details of the steps).\n\nCalling signethic with a filename will generate a new file with the .signed extension\nthat includes the signature and the file. It will be signed using the key `signing_key.pem`\nin the current directory, by default. To specify a different signing key, use an environment\nvariable:\n\n    export SIGNING_KEY=/path/to/key.pem\n\n# Requirements\n\nThis version uses pycryptodome to provide the pycrypto package. If you prefer\nto use the original pycrypto, install version 0.2 (`pip install signethic==0.2`)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/dionresearch/signethic", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "signethic", "package_url": "https://pypi.org/project/signethic/", "platform": "", "project_url": "https://pypi.org/project/signethic/", "project_urls": {"Homepage": "http://github.com/dionresearch/signethic"}, "release_url": "https://pypi.org/project/signethic/0.3/", "requires_dist": ["pycryptodome (==3.9.4)"], "requires_python": "", "summary": "Object signing and signature verification module", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Signethic</h1>\n<p>A Python module to easily and quickly cryptographically sign a \"thing\". The\n\"thing\" in question can be anything like a string, or any binary sequence. The\nbinary sequence could be the output of a serializer, pickling, shelving, compiled\ncode, encoder, compression or pretty much anything else. The digital signature\nbased on Public-Key Cryptography Standards (PKCS) prevents tampering.</p>\n<p>Note that this is not doing any encryption, only signing. This protects the\n\"thing\" from manipulation, but not from reading. Your overall cybersecurity\nstrategy should also cover encryption at rest, encryption in flight and least\nprivileges, along with all the other best practices in this area.</p>\n<h1>Installation</h1>\n<h2>From source</h2>\n<pre><code>python setup.py install\n</code></pre>\n<h2>From pypi</h2>\n<pre><code>pip install signethic\n</code></pre>\n<h1>Quickstart</h1>\n<p>Signing a \"thing\" and saving to a binary file that will contain the digital\nsignature (PKCS) and the \"thing\". In this case, a string:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">signetic</span> <span class=\"kn\">import</span> <span class=\"n\">sign_and_persist</span>\n\n\n<span class=\"n\">thing</span> <span class=\"o\">=</span> <span class=\"s2\">\"the result of our campaign #12345 resulted in sales of $54321.00\"</span>\n\n<span class=\"n\">signature</span> <span class=\"o\">=</span> <span class=\"n\">sign_and_persist</span><span class=\"p\">(</span><span class=\"n\">thing</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"result.signed\"</span><span class=\"p\">)</span>\n</pre>\n<p>Verifying a file that has been signed, returning the \"thing\" if the signature\nis verified:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">signetic</span> <span class=\"kn\">import</span> <span class=\"n\">verify_file</span>\n\n<span class=\"n\">public_key</span> <span class=\"o\">=</span> <span class=\"o\">...</span>\n\n<span class=\"n\">thing</span> <span class=\"o\">=</span> <span class=\"n\">verify_file</span><span class=\"p\">(</span><span class=\"s2\">\"result.signed\"</span><span class=\"p\">,</span> <span class=\"n\">public_key</span><span class=\"p\">)</span>\n</pre>\n<h1>Command Line</h1>\n<p>After installing signethic, a command line is available. With no argument, it\nwill generate a private and public key, create a string, sign it, verify it, save\na binary file with the signature and string and verify that file. (<em>see</em> <code>main()</code>\nfor the details of the steps).</p>\n<p>Calling signethic with a filename will generate a new file with the .signed extension\nthat includes the signature and the file. It will be signed using the key <code>signing_key.pem</code>\nin the current directory, by default. To specify a different signing key, use an environment\nvariable:</p>\n<pre><code>export SIGNING_KEY=/path/to/key.pem\n</code></pre>\n<h1>Requirements</h1>\n<p>This version uses pycryptodome to provide the pycrypto package. If you prefer\nto use the original pycrypto, install version 0.2 (<code>pip install signethic==0.2</code>)</p>\n\n          </div>"}, "last_serial": 6423179, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "7089a964304ae146853bb076c8a4f3bf", "sha256": "71283699714aa128d11849caa3526aab625d44736ddc64787c13bb64775d4948"}, "downloads": -1, "filename": "signethic-0.2-py3.7.egg", "has_sig": false, "md5_digest": "7089a964304ae146853bb076c8a4f3bf", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 7433, "upload_time": "2020-01-08T21:54:35", "upload_time_iso_8601": "2020-01-08T21:54:35.668254Z", "url": "https://files.pythonhosted.org/packages/01/6f/9f2a01be157745ddc0ef543c0bcecfbd2206352375d1174250fe8d10f2c2/signethic-0.2-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c56a0360cc189ea2bd76c11f6a6d1b1", "sha256": "1a71092236639dd3b3a6183d701133a4ad9ba8de8d64bbdf6b3abeaba4fdffb4"}, "downloads": -1, "filename": "signethic-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9c56a0360cc189ea2bd76c11f6a6d1b1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5332, "upload_time": "2020-01-08T21:54:33", "upload_time_iso_8601": "2020-01-08T21:54:33.581176Z", "url": "https://files.pythonhosted.org/packages/2f/00/de00e3d5e7a23a2ab517acc20091ffa10d64238e2ba5026684de8fde0f7f/signethic-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b76dea0af7977c1d987b1a26d94d0302", "sha256": "e38f5f42dd01dc4d46501de1665f4fdbd22eef477804ce0b0330f0311bc8aa1f"}, "downloads": -1, "filename": "signethic-0.2.tar.gz", "has_sig": false, "md5_digest": "b76dea0af7977c1d987b1a26d94d0302", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4177, "upload_time": "2020-01-08T21:54:36", "upload_time_iso_8601": "2020-01-08T21:54:36.891410Z", "url": "https://files.pythonhosted.org/packages/bb/fe/d13cd6a073ea8765156f0ae862236284e34b70947593bbcb0880afd8a1b7/signethic-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "020bc5168a65749675862ecf4729c75a", "sha256": "7a6b8a2c901dda9497c7a8459b789b6542c764891289946dee4103d239689c42"}, "downloads": -1, "filename": "signethic-0.3-py3.7.egg", "has_sig": false, "md5_digest": "020bc5168a65749675862ecf4729c75a", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 7521, "upload_time": "2020-01-09T16:28:17", "upload_time_iso_8601": "2020-01-09T16:28:17.832505Z", "url": "https://files.pythonhosted.org/packages/0e/31/4166c456a7287f5b71cc2c3642f04b5439a3b19f6ac3c5a6696c035e969e/signethic-0.3-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2edc3f8941c45c97c63824adea67fe8", "sha256": "0e7cb7fe41995c2e119d991a7a97d52db038475b5983aa9b31310676e77f3fd1"}, "downloads": -1, "filename": "signethic-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f2edc3f8941c45c97c63824adea67fe8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5411, "upload_time": "2020-01-09T16:27:37", "upload_time_iso_8601": "2020-01-09T16:27:37.547629Z", "url": "https://files.pythonhosted.org/packages/d1/e2/43893762ed3f8a2c29afb754f6f17916cd28ad9df6eaf92570901f9be51e/signethic-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ca7351470003ea6653e80a2bbdd9d72", "sha256": "064a35060da540fefd0e05176f6af447e775d851c589c30afa10259049bf5b6d"}, "downloads": -1, "filename": "signethic-0.3.tar.gz", "has_sig": false, "md5_digest": "8ca7351470003ea6653e80a2bbdd9d72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4323, "upload_time": "2020-01-09T16:28:18", "upload_time_iso_8601": "2020-01-09T16:28:18.940599Z", "url": "https://files.pythonhosted.org/packages/06/f5/7d59b701d5ed1b8180757a2ae928b327a77699c0f08ac1f1800e9cc8df2e/signethic-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "020bc5168a65749675862ecf4729c75a", "sha256": "7a6b8a2c901dda9497c7a8459b789b6542c764891289946dee4103d239689c42"}, "downloads": -1, "filename": "signethic-0.3-py3.7.egg", "has_sig": false, "md5_digest": "020bc5168a65749675862ecf4729c75a", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 7521, "upload_time": "2020-01-09T16:28:17", "upload_time_iso_8601": "2020-01-09T16:28:17.832505Z", "url": "https://files.pythonhosted.org/packages/0e/31/4166c456a7287f5b71cc2c3642f04b5439a3b19f6ac3c5a6696c035e969e/signethic-0.3-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2edc3f8941c45c97c63824adea67fe8", "sha256": "0e7cb7fe41995c2e119d991a7a97d52db038475b5983aa9b31310676e77f3fd1"}, "downloads": -1, "filename": "signethic-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f2edc3f8941c45c97c63824adea67fe8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5411, "upload_time": "2020-01-09T16:27:37", "upload_time_iso_8601": "2020-01-09T16:27:37.547629Z", "url": "https://files.pythonhosted.org/packages/d1/e2/43893762ed3f8a2c29afb754f6f17916cd28ad9df6eaf92570901f9be51e/signethic-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ca7351470003ea6653e80a2bbdd9d72", "sha256": "064a35060da540fefd0e05176f6af447e775d851c589c30afa10259049bf5b6d"}, "downloads": -1, "filename": "signethic-0.3.tar.gz", "has_sig": false, "md5_digest": "8ca7351470003ea6653e80a2bbdd9d72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4323, "upload_time": "2020-01-09T16:28:18", "upload_time_iso_8601": "2020-01-09T16:28:18.940599Z", "url": "https://files.pythonhosted.org/packages/06/f5/7d59b701d5ed1b8180757a2ae928b327a77699c0f08ac1f1800e9cc8df2e/signethic-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:40 2020"}