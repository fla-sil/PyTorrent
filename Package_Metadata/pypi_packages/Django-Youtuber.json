{"info": {"author": "Rakan Alhneiti", "author_email": "rakan.alhneiti@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Django Youtuber\n===============\n\nA tiny app that goes through the list of channels/playlists from youtube.\nThis app enables you to add as many entries as you need through the admin panel and it will scrape the video data you \nneed from youtube.\n\nHow to use\n----------\nSimply add the following configuration values to your settings.py file:\n\n    YOUTUBE_DEVELOPER_KEY = '<YOUR_APP_ID>'\n    YOUTUBE_MAX_RESULTS = 10 # default is 10\n    YOUTUBE_FOLLOW_PAGINATION = True # Default is false\n    YOUTUBE_MAX_PAGINATION = 10 # default is 10\n    YOUTUBE_ENTRY_PIPELINES = [\n        'example_project.pipelines.YoutubePipeline'\n    ]\n\nAs you've noticed, This app does not provide a model/table that saves the video info for you. Instead, you have to\nwrite your own pipeline (Inspired by scrapy) to save the data manually.\n\nPipeline looks as follows:\n\n    from youtuber.pipelines import BasePipeline\n    \n    \n    class YoutubePipeline(BasePipeline):\n        def process(self, youtube_source, video):\n            print video.title\n\nYou can pretty much do whatever you like in the pipeline with the video instance.\n\nThe youtube_source instance is a [YoutubeSource](django-youtuber/tree/master/youtuber/models.py) instance provided by \ndjango_youtuber to identify where the video came from. The video instance is a [YoutubeFeedItem](django-youtuber/tree/master/youtuber/client.py)\nthat contains the list of attributes extracted for a single youtube video.\n\nCelery\n------\n\nDon't also forget to configure celery as the application distributes source among different workers to fetch the list \nof videos from all sources in parallel.\n\n    BROKER_URL = 'amqp://guest:guest@localhost:5672/'\n    \nYou can also register task\n[youtuber_start](django-youtuber/tree/master/youtuber/tasks.py) as a scheduled task and run celery beat to make that \nevery given time duration.\n\nLicense\n-------\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Rakan Alhneiti\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rakanalh/django-youtuber", "keywords": null, "license": "LICENSE", "maintainer": null, "maintainer_email": null, "name": "Django-Youtuber", "package_url": "https://pypi.org/project/Django-Youtuber/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Django-Youtuber/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/rakanalh/django-youtuber"}, "release_url": "https://pypi.org/project/Django-Youtuber/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Django app for fetching videos from channels or playlists.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Django Youtuber<br>===============<br><br>A tiny app that goes through the list of channels/playlists from youtube.<br>This app enables you to add as many entries as you need through the admin panel and it will scrape the video data you <br>need from youtube.<br><br>How to use<br>----------<br>Simply add the following configuration values to your settings.py file:<br><br>    YOUTUBE_DEVELOPER_KEY = '&lt;YOUR_APP_ID&gt;'<br>    YOUTUBE_MAX_RESULTS = 10 # default is 10<br>    YOUTUBE_FOLLOW_PAGINATION = True # Default is false<br>    YOUTUBE_MAX_PAGINATION = 10 # default is 10<br>    YOUTUBE_ENTRY_PIPELINES = [<br>        'example_project.pipelines.YoutubePipeline'<br>    ]<br><br>As you've noticed, This app does not provide a model/table that saves the video info for you. Instead, you have to<br>write your own pipeline (Inspired by scrapy) to save the data manually.<br><br>Pipeline looks as follows:<br><br>    from youtuber.pipelines import BasePipeline<br>    <br>    <br>    class YoutubePipeline(BasePipeline):<br>        def process(self, youtube_source, video):<br>            print video.title<br><br>You can pretty much do whatever you like in the pipeline with the video instance.<br><br>The youtube_source instance is a [YoutubeSource](django-youtuber/tree/master/youtuber/models.py) instance provided by <br>django_youtuber to identify where the video came from. The video instance is a [YoutubeFeedItem](django-youtuber/tree/master/youtuber/client.py)<br>that contains the list of attributes extracted for a single youtube video.<br><br>Celery<br>------<br><br>Don't also forget to configure celery as the application distributes source among different workers to fetch the list <br>of videos from all sources in parallel.<br><br>    BROKER_URL = 'amqp://guest:guest@localhost:5672/'<br>    <br>You can also register task<br>[youtuber_start](django-youtuber/tree/master/youtuber/tasks.py) as a scheduled task and run celery beat to make that <br>every given time duration.<br><br>License<br>-------<br><br>The MIT License (MIT)<br><br>Copyright (c) 2015 Rakan Alhneiti<br><br>Permission is hereby granted, free of charge, to any person obtaining a copy<br>of this software and associated documentation files (the \"Software\"), to deal<br>in the Software without restriction, including without limitation the rights<br>to use, copy, modify, merge, publish, distribute, sublicense, and/or sell<br>copies of the Software, and to permit persons to whom the Software is<br>furnished to do so, subject to the following conditions:<br><br>The above copyright notice and this permission notice shall be included in all<br>copies or substantial portions of the Software.<br><br>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<br>IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<br>FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<br>AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<br>LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<br>OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE<br>SOFTWARE.\n          </div>"}, "last_serial": 1619152, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "ed35e8e1b72959121ef58cac0be8c3db", "sha256": "2054893f58ce99fde1e0c1bdd682e612ba2dbeaf5c6185d04f95925750551ef6"}, "downloads": -1, "filename": "Django-Youtuber-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ed35e8e1b72959121ef58cac0be8c3db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5653, "upload_time": "2015-07-04T11:37:37", "upload_time_iso_8601": "2015-07-04T11:37:37.400643Z", "url": "https://files.pythonhosted.org/packages/a6/d2/d34c0cb6b2c9fc8471f7b8477299574aa42c81b03c5d1128e466720fa66a/Django-Youtuber-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ed35e8e1b72959121ef58cac0be8c3db", "sha256": "2054893f58ce99fde1e0c1bdd682e612ba2dbeaf5c6185d04f95925750551ef6"}, "downloads": -1, "filename": "Django-Youtuber-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ed35e8e1b72959121ef58cac0be8c3db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5653, "upload_time": "2015-07-04T11:37:37", "upload_time_iso_8601": "2015-07-04T11:37:37.400643Z", "url": "https://files.pythonhosted.org/packages/a6/d2/d34c0cb6b2c9fc8471f7b8477299574aa42c81b03c5d1128e466720fa66a/Django-Youtuber-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:45 2020"}