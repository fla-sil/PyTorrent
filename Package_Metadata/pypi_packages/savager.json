{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Artistic Software", "Topic :: Multimedia :: Graphics"], "description": "# SVGpy\n\nThis is a basic library written in python for creating simple svgs with python scripts.\n\n## Table of Contents:\n\n[[_TOC_]]\n\n## Files:\n\n|                  File | Description |\n|----------------------:|:------------|\n| `savager/__init__.py` | imports library |\n| `savager/file.py`     | file class used to write svg files  |\n| `savager/element.py`  | used by file class to generate elements in svg |\n| `flower.py`           | example of use, generates flower.svg |\n| `flower.svg`          | example svg generated by flower.py |\n| `setup.py`            | this enables import as a python library |\n| `LICENSE`             | You have full permission to use and modify this library, just please pass on that privilege. |\n| `README.md`           | this file |\n\n## Importing this library:\n\npip:\n```bash\n$ pip install git+https://gitlab.com/pyrogue6/savager.git\n```\npip for development while in repo:\n```bash\n$ pip install -e .\n```\ncoming soon to PyPI:\n```bash\n$ pip install savager\n```\n\n## Notes\n* Resource heavily used: https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial\n* This library uses xlink:href instead of the href standard in <use> blocks to maintain compatability with eog (EyeOfGnome)\n* path parameters use underscores instead of dashes, and are converted back to dashes when writing to svg files  \nthis could be solved by unpacking a dictionary every time you want to add parameters that use dashes, but that's pretty ugly\n* we believe in tabs here, sorry.\n\n## TODO\n\n### Key\n[**+**] feature to be added  \n[**x**] change in code  \n[**-**] bug to be removed  \n[**?**] uncertain how to proceed  \n\n### Tasks\n[**+**] manipulate paths within SVG class  \n[**+**] easily add function-defined paths  \n[**+**] circles and elipses  \n[**+**] error handling especially in writing to files!  \n[**+**] css stylesheets for reducing file sizes?\n`\u2514\u2500\u2500`   https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Fills_and_Strokes  \n[**+**] need way to add controls easily  \n`\u251c\u2500\u2500`   optional arg for a control gen?  \n`\u2514\u2500\u2500`   incorporated into coord gen? tuple for all paired controls?  \n[**x**] Split path and SVG classes into seperate files?  \n[**x**] make demo or doctest directory for extraneous files  \n[**+**] test_suite for setup to enhance unittests  \n`\u251c\u2500\u2500`   https://setuptools.readthedocs.io/en/latest/setuptools.html  \n`\u2514\u2500\u2500`   also write unittests, woops  \n[**x**] use scm metadata to setup  \n`\u2514\u2500\u2500`   https://pypi.org/project/setuptools-scm/  \n[**+**] upload to PyPI  \n`\u2514\u2500\u2500`   update badges!  \n[**?**] change project name to match library name?  \n\n![Example Image](flower.svg \"Flower\")", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://gitlab.com/pyrogue6/savager/-/archive/0.1/savager-0.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/pyrogue6/savager.git", "keywords": "svg", "license": "MIT License", "maintainer": "Sabrina Held", "maintainer_email": "pyrogue6@gmail.com", "name": "savager", "package_url": "https://pypi.org/project/savager/", "platform": "", "project_url": "https://pypi.org/project/savager/", "project_urls": {"Download": "https://gitlab.com/pyrogue6/savager/-/archive/0.1/savager-0.1.tar.gz", "Homepage": "https://gitlab.com/pyrogue6/savager.git"}, "release_url": "https://pypi.org/project/savager/0.1/", "requires_dist": null, "requires_python": ">=3", "summary": "create SVG files with python scripts", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SVGpy</h1>\n<p>This is a basic library written in python for creating simple svgs with python scripts.</p>\n<h2>Table of Contents:</h2>\n<p>[[<em>TOC</em>]]</p>\n<h2>Files:</h2>\n<table>\n<thead>\n<tr>\n<th align=\"right\">File</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\"><code>savager/__init__.py</code></td>\n<td align=\"left\">imports library</td>\n</tr>\n<tr>\n<td align=\"right\"><code>savager/file.py</code></td>\n<td align=\"left\">file class used to write svg files</td>\n</tr>\n<tr>\n<td align=\"right\"><code>savager/element.py</code></td>\n<td align=\"left\">used by file class to generate elements in svg</td>\n</tr>\n<tr>\n<td align=\"right\"><code>flower.py</code></td>\n<td align=\"left\">example of use, generates flower.svg</td>\n</tr>\n<tr>\n<td align=\"right\"><code>flower.svg</code></td>\n<td align=\"left\">example svg generated by flower.py</td>\n</tr>\n<tr>\n<td align=\"right\"><code>setup.py</code></td>\n<td align=\"left\">this enables import as a python library</td>\n</tr>\n<tr>\n<td align=\"right\"><code>LICENSE</code></td>\n<td align=\"left\">You have full permission to use and modify this library, just please pass on that privilege.</td>\n</tr>\n<tr>\n<td align=\"right\"><code>README.md</code></td>\n<td align=\"left\">this file</td>\n</tr></tbody></table>\n<h2>Importing this library:</h2>\n<p>pip:</p>\n<pre>$ pip install git+https://gitlab.com/pyrogue6/savager.git\n</pre>\n<p>pip for development while in repo:</p>\n<pre>$ pip install -e .\n</pre>\n<p>coming soon to PyPI:</p>\n<pre>$ pip install savager\n</pre>\n<h2>Notes</h2>\n<ul>\n<li>Resource heavily used: <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial</a></li>\n<li>This library uses xlink:href instead of the href standard in &lt;use&gt; blocks to maintain compatability with eog (EyeOfGnome)</li>\n<li>path parameters use underscores instead of dashes, and are converted back to dashes when writing to svg files<br>\nthis could be solved by unpacking a dictionary every time you want to add parameters that use dashes, but that's pretty ugly</li>\n<li>we believe in tabs here, sorry.</li>\n</ul>\n<h2>TODO</h2>\n<h3>Key</h3>\n<p>[<strong>+</strong>] feature to be added<br>\n[<strong>x</strong>] change in code<br>\n[<strong>-</strong>] bug to be removed<br>\n[<strong>?</strong>] uncertain how to proceed</p>\n<h3>Tasks</h3>\n<p>[<strong>+</strong>] manipulate paths within SVG class<br>\n[<strong>+</strong>] easily add function-defined paths<br>\n[<strong>+</strong>] circles and elipses<br>\n[<strong>+</strong>] error handling especially in writing to files!<br>\n[<strong>+</strong>] css stylesheets for reducing file sizes?\n<code>\u2514\u2500\u2500</code>   <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Fills_and_Strokes\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Fills_and_Strokes</a><br>\n[<strong>+</strong>] need way to add controls easily<br>\n<code>\u251c\u2500\u2500</code>   optional arg for a control gen?<br>\n<code>\u2514\u2500\u2500</code>   incorporated into coord gen? tuple for all paired controls?<br>\n[<strong>x</strong>] Split path and SVG classes into seperate files?<br>\n[<strong>x</strong>] make demo or doctest directory for extraneous files<br>\n[<strong>+</strong>] test_suite for setup to enhance unittests<br>\n<code>\u251c\u2500\u2500</code>   <a href=\"https://setuptools.readthedocs.io/en/latest/setuptools.html\" rel=\"nofollow\">https://setuptools.readthedocs.io/en/latest/setuptools.html</a><br>\n<code>\u2514\u2500\u2500</code>   also write unittests, woops<br>\n[<strong>x</strong>] use scm metadata to setup<br>\n<code>\u2514\u2500\u2500</code>   <a href=\"https://pypi.org/project/setuptools-scm/\" rel=\"nofollow\">https://pypi.org/project/setuptools-scm/</a><br>\n[<strong>+</strong>] upload to PyPI<br>\n<code>\u2514\u2500\u2500</code>   update badges!<br>\n[<strong>?</strong>] change project name to match library name?</p>\n<p><img alt=\"Example Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60b02a0068125390b6a49cb262c7996a32406a59/666c6f7765722e737667\"></p>\n\n          </div>"}, "last_serial": 6890980, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "abbf868f9acad8c727dcb575b1a612ce", "sha256": "032c5f52850724f8ed3a20a3c409f40907904c342f5cee55d07ee0e7b6f410aa"}, "downloads": -1, "filename": "savager-0.1.tar.gz", "has_sig": false, "md5_digest": "abbf868f9acad8c727dcb575b1a612ce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 5100, "upload_time": "2020-03-26T19:59:33", "upload_time_iso_8601": "2020-03-26T19:59:33.338208Z", "url": "https://files.pythonhosted.org/packages/15/27/58e1c768154457d3bc054a003d529022550787d85b267bfcdf8bb0c7e4b9/savager-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "abbf868f9acad8c727dcb575b1a612ce", "sha256": "032c5f52850724f8ed3a20a3c409f40907904c342f5cee55d07ee0e7b6f410aa"}, "downloads": -1, "filename": "savager-0.1.tar.gz", "has_sig": false, "md5_digest": "abbf868f9acad8c727dcb575b1a612ce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 5100, "upload_time": "2020-03-26T19:59:33", "upload_time_iso_8601": "2020-03-26T19:59:33.338208Z", "url": "https://files.pythonhosted.org/packages/15/27/58e1c768154457d3bc054a003d529022550787d85b267bfcdf8bb0c7e4b9/savager-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:24 2020"}