{"info": {"author": "Leonard Vorbeck", "author_email": "leomxyy@googlemail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3.7"], "description": "#  \u2728 DailyTrends V2 \u2728\n[![Downloads](https://pepy.tech/badge/dailytrends/week)](https://pepy.tech/project/dailytrends/week)\n[![Downloads](https://pepy.tech/badge/dailytrends/month)](https://pepy.tech/project/dailytrends/month)\n\nThis lightweight API solves the problem of getting only monthly-based data for large time series when collecting Google Trends data. No login required. For unlimited requests, I will implement a Tor-based solution soon.\n\n### Installation\n\n```bash\n$ pip install DailyTrends\n```\n\n\n\n\n### How to use\n\n```ipython\n>>> from DailyTrends.collect import collect_data\n# Get the data directly into python.\n# The returned dataframe is already indexed and ready for storage/analysis.\n>>> data = collect_data(\"AMD stock\",\n                    save=False, verbose=False)                   \n>>> data.info()\n\n<class 'pandas.core.frame.DataFrame'>\nDatetimeIndex: 5666 entries, 2004-01-01 to 2019-07-06\nFreq: D\nData columns (total 1 columns):\nAMD stock: (Worldwide)    5666 non-null float64\ndtypes: float64(1)\nmemory usage: 88.5 KB\n\n#Plotting some rolling means of the daily data\n>>> ax=data.rolling(10).mean().plot();\n    data.rolling(25).mean().plot(ax=ax);\n    data.rolling(50).mean().plot(ax=ax)\n```\n\n![image.png](1.png)\n\n### Add your own data\n```ipython\n# In this case the actual historic prices of the stock\n>>> import pandas as pd\n>>> price_data = pd.read_csv(\"price_data.csv\")\n>>> merged = pd.merge(price_data, data,\n                  left_index=True, right_index=True)\n>>> merged[[\"AMD stock: (Worldwide)\", \"Open\"]].rolling(30).mean().plot()\n```\n![image.png](2.png)\n\n### Load multiple queries\n\n```ipython\n>>> data = collect_data([\"Intel\", \"AMD\"],\n                   save=False, verbose=False)      \n\n```\n\n\n\n\n### To-Do\n\n- Add rescale capabilities\n- Optimze multi-query search by combining it to a single request\n- Add time range\n- Add Tor-Network-based requests\n- Add unique identifiers\n- Add tqdm\n- Prevent Null-Overlaps\n\n\n\n\n\n\n## **Disclaimer**\n\nThis API is *not* supported by Google and is for experimental purposes only.\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/le0x99/DailyTrends/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "DailyTrends", "package_url": "https://pypi.org/project/DailyTrends/", "platform": "", "project_url": "https://pypi.org/project/DailyTrends/", "project_urls": {"Homepage": "https://github.com/le0x99/DailyTrends/"}, "release_url": "https://pypi.org/project/DailyTrends/3.0/", "requires_dist": ["pandas (>=0.24.2)", "numpy (>=1.16.4)", "requests (>=2.22.0)", "tqdm (>=4.35.0)"], "requires_python": "", "summary": "A package to receive full-range daily Google Trends data", "version": "3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>\u2728 DailyTrends V2 \u2728</h1>\n<p><a href=\"https://pepy.tech/project/dailytrends/week\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91e8d56e0dc2b449127245bb42daf4254cab04eb/68747470733a2f2f706570792e746563682f62616467652f6461696c797472656e64732f7765656b\"></a>\n<a href=\"https://pepy.tech/project/dailytrends/month\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a348df1329f2391a3a8fb0dd0688e03fa764e72/68747470733a2f2f706570792e746563682f62616467652f6461696c797472656e64732f6d6f6e7468\"></a></p>\n<p>This lightweight API solves the problem of getting only monthly-based data for large time series when collecting Google Trends data. No login required. For unlimited requests, I will implement a Tor-based solution soon.</p>\n<h3>Installation</h3>\n<pre>$ pip install DailyTrends\n</pre>\n<h3>How to use</h3>\n<pre>&gt;&gt;&gt; from DailyTrends.collect import collect_data\n# Get the data directly into python.\n# The returned dataframe is already indexed and ready for storage/analysis.\n&gt;&gt;&gt; data = collect_data(\"AMD stock\",\n                    save=False, verbose=False)                   \n&gt;&gt;&gt; data.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nDatetimeIndex: 5666 entries, 2004-01-01 to 2019-07-06\nFreq: D\nData columns (total 1 columns):\nAMD stock: (Worldwide)    5666 non-null float64\ndtypes: float64(1)\nmemory usage: 88.5 KB\n\n#Plotting some rolling means of the daily data\n&gt;&gt;&gt; ax=data.rolling(10).mean().plot();\n    data.rolling(25).mean().plot(ax=ax);\n    data.rolling(50).mean().plot(ax=ax)\n</pre>\n<p><img alt=\"image.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b1e97fbdbe91175ccbd0a69adbf1c6205952c357/312e706e67\"></p>\n<h3>Add your own data</h3>\n<pre># In this case the actual historic prices of the stock\n&gt;&gt;&gt; import pandas as pd\n&gt;&gt;&gt; price_data = pd.read_csv(\"price_data.csv\")\n&gt;&gt;&gt; merged = pd.merge(price_data, data,\n                  left_index=True, right_index=True)\n&gt;&gt;&gt; merged[[\"AMD stock: (Worldwide)\", \"Open\"]].rolling(30).mean().plot()\n</pre>\n<p><img alt=\"image.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43b1a4b329a60baff267c25e7523c9ebaff9071f/322e706e67\"></p>\n<h3>Load multiple queries</h3>\n<pre>&gt;&gt;&gt; data = collect_data([\"Intel\", \"AMD\"],\n                   save=False, verbose=False)      \n</pre>\n<h3>To-Do</h3>\n<ul>\n<li>Add rescale capabilities</li>\n<li>Optimze multi-query search by combining it to a single request</li>\n<li>Add time range</li>\n<li>Add Tor-Network-based requests</li>\n<li>Add unique identifiers</li>\n<li>Add tqdm</li>\n<li>Prevent Null-Overlaps</li>\n</ul>\n<h2><strong>Disclaimer</strong></h2>\n<p>This API is <em>not</em> supported by Google and is for experimental purposes only.</p>\n\n          </div>"}, "last_serial": 6019254, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "d0b97879f0e75063a6f7be76fb6747a7", "sha256": "127270f328182800ea375b6c45c8560d5a41d391909974aa564e53f13125e771"}, "downloads": -1, "filename": "DailyTrends-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d0b97879f0e75063a6f7be76fb6747a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6433, "upload_time": "2019-09-11T19:37:41", "upload_time_iso_8601": "2019-09-11T19:37:41.870805Z", "url": "https://files.pythonhosted.org/packages/5f/63/b43a098eec49843f7825cd9e9fc3e82e654818206195c9339d31e1c12410/DailyTrends-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "275db8b2882979451483bac45e507b19", "sha256": "3742e783581d24bf1d24a84ac65a21c3a1d75c3f6c60722efca6fba8a8648c79"}, "downloads": -1, "filename": "DailyTrends-1.0.tar.gz", "has_sig": false, "md5_digest": "275db8b2882979451483bac45e507b19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4745, "upload_time": "2019-09-11T19:37:44", "upload_time_iso_8601": "2019-09-11T19:37:44.318890Z", "url": "https://files.pythonhosted.org/packages/3a/24/43d7b469a26b4bc88eb66e7016aaa7eaa3cd55ae7e4656833486749bdea5/DailyTrends-1.0.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "f34bf8153c7a74532c77a9567c400e81", "sha256": "17e958b2e727fa581e46334ed45d42b587b2bc99317870a03ffca51978a4ece0"}, "downloads": -1, "filename": "DailyTrends-2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f34bf8153c7a74532c77a9567c400e81", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6524, "upload_time": "2019-09-22T18:07:33", "upload_time_iso_8601": "2019-09-22T18:07:33.074776Z", "url": "https://files.pythonhosted.org/packages/c9/b6/8914cbaad8475e16a613834e702ba2a7a2b0adff4b57fac254490d9508ea/DailyTrends-2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f276ccd4f4f537e614ca02f8d590625", "sha256": "7f230fa5d380d3ee178efb56e8dc1191c6bb6d9b15526dfeca2d0b2474b94378"}, "downloads": -1, "filename": "DailyTrends-2.0.tar.gz", "has_sig": false, "md5_digest": "8f276ccd4f4f537e614ca02f8d590625", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4870, "upload_time": "2019-09-22T18:07:34", "upload_time_iso_8601": "2019-09-22T18:07:34.794567Z", "url": "https://files.pythonhosted.org/packages/f4/a2/540489b734fdf9a73c07762c473f327d7cbf56b62d3663a6fa5980c543a7/DailyTrends-2.0.tar.gz", "yanked": false}], "3.0": [{"comment_text": "", "digests": {"md5": "797c6efaa02e3fd95533c348d63cc0a3", "sha256": "92a4aa90946077d39918c0b3ca6d442c6752db7b3fe744f700fac7c0264fb5a1"}, "downloads": -1, "filename": "DailyTrends-3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "797c6efaa02e3fd95533c348d63cc0a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6607, "upload_time": "2019-10-23T15:48:05", "upload_time_iso_8601": "2019-10-23T15:48:05.708641Z", "url": "https://files.pythonhosted.org/packages/14/70/0d912980b53be90474eb1dcb22b3dce74240e6ba3236ea921d6663370efd/DailyTrends-3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "effadf554be0d301fd63cdb4c66b856e", "sha256": "08c554db1da274120898fd3f30806ea3a15353717b1b1da7c6fbcfb7d6dac813"}, "downloads": -1, "filename": "DailyTrends-3.0.tar.gz", "has_sig": false, "md5_digest": "effadf554be0d301fd63cdb4c66b856e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4999, "upload_time": "2019-10-23T15:48:06", "upload_time_iso_8601": "2019-10-23T15:48:06.892764Z", "url": "https://files.pythonhosted.org/packages/51/3d/f74240d6ac86055d658038303f2311534f75ae2b2fc05a243df032b450ab/DailyTrends-3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "797c6efaa02e3fd95533c348d63cc0a3", "sha256": "92a4aa90946077d39918c0b3ca6d442c6752db7b3fe744f700fac7c0264fb5a1"}, "downloads": -1, "filename": "DailyTrends-3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "797c6efaa02e3fd95533c348d63cc0a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6607, "upload_time": "2019-10-23T15:48:05", "upload_time_iso_8601": "2019-10-23T15:48:05.708641Z", "url": "https://files.pythonhosted.org/packages/14/70/0d912980b53be90474eb1dcb22b3dce74240e6ba3236ea921d6663370efd/DailyTrends-3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "effadf554be0d301fd63cdb4c66b856e", "sha256": "08c554db1da274120898fd3f30806ea3a15353717b1b1da7c6fbcfb7d6dac813"}, "downloads": -1, "filename": "DailyTrends-3.0.tar.gz", "has_sig": false, "md5_digest": "effadf554be0d301fd63cdb4c66b856e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4999, "upload_time": "2019-10-23T15:48:06", "upload_time_iso_8601": "2019-10-23T15:48:06.892764Z", "url": "https://files.pythonhosted.org/packages/51/3d/f74240d6ac86055d658038303f2311534f75ae2b2fc05a243df032b450ab/DailyTrends-3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:47 2020"}