{"info": {"author": "Luca Cappelletti", "author_email": "cappelletti.luca94@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "extra_keras_metrics\n=========================================================================================\n|travis| |sonar_quality| |sonar_maintainability| |codacy| |code_climate_maintainability| |pip| |downloads|\n\nAdditional metrics integrated with the Keras NN library, taken directly from `Tensorflow <https://www.tensorflow.org/api_docs/python/tf/metrics/>`_\n\nHow do I install this package?\n----------------------------------------------\nAs usual, just download it using pip:\n\n.. code:: shell\n\n    pip install extra_keras_metrics\n\nTests Coverage\n----------------------------------------------\nSince some software handling coverages sometimes get slightly different results, here's three of them:\n\n|coveralls| |sonar_coverage| |code_climate_coverage|\n\nHow do I use this package?\n----------------------------------------------\nJust by importing it you will be able to access all the non-parametric metrics, such as `\"auprc\"` and `\"auroc\"`:\n\n.. code:: python\n\n    import extra_keras_metrics\n\n    model = my_keras_model()\n    model.compile(\n        optimizer=\"sgd\",\n        loss=\"binary_crossentropy\",\n        metrics=[\"auroc\", \"auprc\"]\n    )\n\nFor the parametric metrics, such as `\"average_precision_at_k\"`, you will need to import them, such as:\n\n.. code:: python\n\n    from extra_keras_metrics import average_precision_at_k\n\n    model = my_keras_model()\n    model.compile(\n        optimizer=\"sgd\",\n        loss=\"binary_crossentropy\",\n        metrics=[average_precision_at_k(1), average_precision_at_k(2)]\n    )\n\nThis way in the history of the model you will find both the metrics indexed as `\"average_precision_at_k_1\"` and `\"average_precision_at_k_2\"` respectively.\n\nWhich metrics do I get?\n----------------------------------------------\nYou will get all the following metrics taken directly from `Tensorflow <https://www.tensorflow.org/api_docs/python/tf/metrics/>`_. At the time of writing, the ones available are the following:\n\nThe **non-parametric** ones are (tested against their conterpart from sklearn):\n\n- `AUPRC <https://www.tensorflow.org/api_docs/python/tf/metrics/auc>`_  (tested against `sklearn's average_precision_score <https://scikit-learn.org/stable/modules/generated/sklearn.metrics.average_precision_score.html#sklearn.metrics.average_precision_score>`_).\n- `AUROC <https://www.tensorflow.org/api_docs/python/tf/metrics/auc>`_  (tested against `sklearn's roc_auc_score <https://scikit-learn.org/stable/modules/generated/sklearn.metrics.roc_auc_score.html>`_).\n- `false_negatives <https://www.tensorflow.org/api_docs/python/tf/metrics/false_negatives>`_  (tested against false negatives from `sklearn's confusion_matrix <https://scikit-learn.org/stable/modules/generated/sklearn.metrics.confusion_matrix.html#sklearn.metrics.confusion_matrix>`_).\n- `false_positives <https://tensorflow.org/api_docs/python/tf/metrics/false_positives>`_  (tested against false positives from `sklearn's confusion_matrix <https://scikit-learn.org/stable/modules/generated/sklearn.metrics.confusion_matrix.html#sklearn.metrics.confusion_matrix>`_).\n- `mean_absolute_error <https://www.tensorflow.org/api_docs/python/tf/metrics/mean_absolute_error>`_ (tested against `sklearn's mean_absolute_error <https://scikit-learn.org/stable/modules/generated/sklearn.metrics.mean_absolute_error.html#sklearn.metrics.mean_absolute_error>`_)\n- `mean_squared_error <https://www.tensorflow.org/api_docs/python/tf/metrics/mean_squared_error>`_ (tested against `sklearn's mean_squared_error <https://scikit-learn.org/stable/modules/generated/sklearn.metrics.mean_squared_error.html#sklearn.metrics.mean_squared_error>`_)\n- `precision <https://www.tensorflow.org/api_docs/python/tf/metrics/precision>`_ (tested against `sklearn's precision_score <https://scikit-learn.org/stable/modules/generated/sklearn.metrics.precision_score.html#sklearn.metrics.precision_score>`_)\n- `recall <https://www.tensorflow.org/api_docs/python/tf/metrics/recall>`_ (tested against `sklearn's recall_score <https://scikit-learn.org/stable/modules/generated/sklearn.metrics.recall_score.html#sklearn.metrics.recall_score>`_)\n- `root_mean_squared_error <https://www.tensorflow.org/api_docs/python/tf/metrics/root_mean_squared_error>`_ (tested against squared root of `sklean's mean_squared_error <https://scikit-learn.org/stable/modules/generated/sklearn.metrics.mean_squared_error.html#sklearn.metrics.mean_squared_error>`_)\n- `true_negatives <https://www.tensorflow.org/api_docs/python/tf/metrics/true_negatives>`_ (tested against true negatives from `sklearn's confusion_matrix <https://scikit-learn.org/stable/modules/generated/sklearn.metrics.confusion_matrix.html#sklearn.metrics.confusion_matrix>`_)\n- `true_positives <https://www.tensorflow.org/api_docs/python/tf/metrics/true_positives>`_ (tested against true positives from `sklearn's confusion_matrix <https://scikit-learn.org/stable/modules/generated/sklearn.metrics.confusion_matrix.html#sklearn.metrics.confusion_matrix>`_)\n\nThe **parametric** ones are (only execution is tested, no baseline in sklearn was available):\n\n- `average_precision_at_k <https://www.tensorflow.org/api_docs/python/tf/metrics/average_precision_at_k>`_\n- `precision_at_k <https://www.tensorflow.org/api_docs/python/tf/metrics/precision_at_k>`_\n- `recall_at_k <https://www.tensorflow.org/api_docs/python/tf/metrics/recall_at_k>`_\n- `mean_iou <https://www.tensorflow.org/api_docs/python/tf/metrics/mean_iou>`_\n- `sensitivity_at_specificity <https://www.tensorflow.org/api_docs/python/tf/metrics/sensitivity_at_specificity>`_\n- `specificity_at_sensitivity <https://www.tensorflow.org/api_docs/python/tf/metrics/specificity_at_sensitivity>`_\n\nExtras\n----------------------------\nI've created also another couple packages you might enjoy: one, called `extra_keras_utils <https://github.com/LucaCappelletti94/extra_keras_utils>`_ that contains some commonly used code for Keras projects and `plot_keras_history <https://github.com/LucaCappelletti94/plot_keras_history>`_ which automatically plots a keras training history.\n\n\n.. |travis| image:: https://travis-ci.org/LucaCappelletti94/extra_keras_metrics.png\n   :target: https://travis-ci.org/LucaCappelletti94/extra_keras_metrics\n   :alt: Travis CI build\n\n.. |sonar_quality| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_extra_keras_metrics&metric=alert_status\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_extra_keras_metrics\n    :alt: SonarCloud Quality\n\n.. |sonar_maintainability| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_extra_keras_metrics&metric=sqale_rating\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_extra_keras_metrics\n    :alt: SonarCloud Maintainability\n\n.. |sonar_coverage| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_extra_keras_metrics&metric=coverage\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_extra_keras_metrics\n    :alt: SonarCloud Coverage\n\n.. |coveralls| image:: https://coveralls.io/repos/github/LucaCappelletti94/extra_keras_metrics/badge.svg?branch=master\n    :target: https://coveralls.io/github/LucaCappelletti94/extra_keras_metrics?branch=master\n    :alt: Coveralls Coverage\n\n.. |pip| image:: https://badge.fury.io/py/extra-keras-metrics.svg\n    :target: https://badge.fury.io/py/extra_keras_metrics\n    :alt: Pypi project\n\n.. |downloads| image:: https://pepy.tech/badge/extra-keras-metrics\n    :target: https://pepy.tech/badge/extra-keras-metrics\n    :alt: Pypi total project downloads \n\n.. |codacy|  image:: https://api.codacy.com/project/badge/Grade/5c1fbcfbffc047e6bf810e9372198a5b\n    :target: https://www.codacy.com/app/LucaCappelletti94/extra_keras_metrics?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=LucaCappelletti94/extra_keras_metrics&amp;utm_campaign=Badge_Grade\n    :alt: Codacy Maintainability\n\n.. |code_climate_maintainability| image:: https://api.codeclimate.com/v1/badges/b1008a3d75104ce62162/maintainability\n    :target: https://codeclimate.com/github/LucaCappelletti94/extra_keras_metrics/maintainability\n    :alt: Maintainability\n\n.. |code_climate_coverage| image:: https://api.codeclimate.com/v1/badges/b1008a3d75104ce62162/test_coverage\n    :target: https://codeclimate.com/github/LucaCappelletti94/extra_keras_metrics/test_coverage\n    :alt: Code Climate Coverate", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LucaCappelletti94/extra_keras_metrics", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "extra-keras-metrics", "package_url": "https://pypi.org/project/extra-keras-metrics/", "platform": "", "project_url": "https://pypi.org/project/extra-keras-metrics/", "project_urls": {"Homepage": "https://github.com/LucaCappelletti94/extra_keras_metrics"}, "release_url": "https://pypi.org/project/extra-keras-metrics/1.3.1/", "requires_dist": null, "requires_python": "", "summary": "Additional metrics integrated with the keras NN library, taken directly from `Tensorflow <https://www.tensorflow.org/api_docs/python/tf/metrics/>`_", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/LucaCappelletti94/extra_keras_metrics\" rel=\"nofollow\"><img alt=\"Travis CI build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5788decd0caf04bcbc42b27fae1f6c5b8c635c16/68747470733a2f2f7472617669732d63692e6f72672f4c75636143617070656c6c6574746939342f65787472615f6b657261735f6d6574726963732e706e67\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_extra_keras_metrics\" rel=\"nofollow\"><img alt=\"SonarCloud Quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aa358aefd4b626016f5c7c3fd2d56285b0edcf78/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f65787472615f6b657261735f6d657472696373266d65747269633d616c6572745f737461747573\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_extra_keras_metrics\" rel=\"nofollow\"><img alt=\"SonarCloud Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/61b8623509fb4cef98d38348dfc389011296a1c9/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f65787472615f6b657261735f6d657472696373266d65747269633d7371616c655f726174696e67\"></a> <a href=\"https://www.codacy.com/app/LucaCappelletti94/extra_keras_metrics?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=LucaCappelletti94/extra_keras_metrics&amp;amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a6057712e56fa70addff4ab57cea5a72c3b326ea/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3563316662636662666663303437653662663831306539333732313938613562\"></a> <a href=\"https://codeclimate.com/github/LucaCappelletti94/extra_keras_metrics/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2788d08c66bf0850a4840da437fb706d92383c88/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f62313030386133643735313034636536323136322f6d61696e7461696e6162696c697479\"></a> <a href=\"https://badge.fury.io/py/extra_keras_metrics\" rel=\"nofollow\"><img alt=\"Pypi project\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f38e904486e3231b72eb4ab8a187ceea300a516b/68747470733a2f2f62616467652e667572792e696f2f70792f65787472612d6b657261732d6d6574726963732e737667\"></a> <a href=\"https://pepy.tech/badge/extra-keras-metrics\" rel=\"nofollow\"><img alt=\"Pypi total project downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2680e4dc1099e3d467229828017c404d23f52698/68747470733a2f2f706570792e746563682f62616467652f65787472612d6b657261732d6d657472696373\"></a></p>\n<p>Additional metrics integrated with the Keras NN library, taken directly from <a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/\" rel=\"nofollow\">Tensorflow</a></p>\n<div id=\"how-do-i-install-this-package\">\n<h2>How do I install this package?</h2>\n<p>As usual, just download it using pip:</p>\n<pre>pip install extra_keras_metrics\n</pre>\n</div>\n<div id=\"tests-coverage\">\n<h2>Tests Coverage</h2>\n<p>Since some software handling coverages sometimes get slightly different results, here\u2019s three of them:</p>\n<p><a href=\"https://coveralls.io/github/LucaCappelletti94/extra_keras_metrics?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2b79650b970dae6a0f3ca3ac59bb758573e1cb2d/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4c75636143617070656c6c6574746939342f65787472615f6b657261735f6d6574726963732f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_extra_keras_metrics\" rel=\"nofollow\"><img alt=\"SonarCloud Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2b217fb33037a1d6924b3f0dd54985641db9eec8/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f65787472615f6b657261735f6d657472696373266d65747269633d636f766572616765\"></a> <a href=\"https://codeclimate.com/github/LucaCappelletti94/extra_keras_metrics/test_coverage\" rel=\"nofollow\"><img alt=\"Code Climate Coverate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e28d0f1e2a8709318bda39d8dfe9bbe135878a47/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f62313030386133643735313034636536323136322f746573745f636f766572616765\"></a></p>\n</div>\n<div id=\"how-do-i-use-this-package\">\n<h2>How do I use this package?</h2>\n<p>Just by importing it you will be able to access all the non-parametric metrics, such as <cite>\u201cauprc\u201d</cite> and <cite>\u201cauroc\u201d</cite>:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">extra_keras_metrics</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">my_keras_model</span><span class=\"p\">()</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span>\n    <span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"s2\">\"sgd\"</span><span class=\"p\">,</span>\n    <span class=\"n\">loss</span><span class=\"o\">=</span><span class=\"s2\">\"binary_crossentropy\"</span><span class=\"p\">,</span>\n    <span class=\"n\">metrics</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"auroc\"</span><span class=\"p\">,</span> <span class=\"s2\">\"auprc\"</span><span class=\"p\">]</span>\n<span class=\"p\">)</span>\n</pre>\n<p>For the parametric metrics, such as <cite>\u201caverage_precision_at_k\u201d</cite>, you will need to import them, such as:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">extra_keras_metrics</span> <span class=\"kn\">import</span> <span class=\"n\">average_precision_at_k</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">my_keras_model</span><span class=\"p\">()</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span>\n    <span class=\"n\">optimizer</span><span class=\"o\">=</span><span class=\"s2\">\"sgd\"</span><span class=\"p\">,</span>\n    <span class=\"n\">loss</span><span class=\"o\">=</span><span class=\"s2\">\"binary_crossentropy\"</span><span class=\"p\">,</span>\n    <span class=\"n\">metrics</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">average_precision_at_k</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">average_precision_at_k</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)]</span>\n<span class=\"p\">)</span>\n</pre>\n<p>This way in the history of the model you will find both the metrics indexed as <cite>\u201caverage_precision_at_k_1\u201d</cite> and <cite>\u201caverage_precision_at_k_2\u201d</cite> respectively.</p>\n</div>\n<div id=\"which-metrics-do-i-get\">\n<h2>Which metrics do I get?</h2>\n<p>You will get all the following metrics taken directly from <a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/\" rel=\"nofollow\">Tensorflow</a>. At the time of writing, the ones available are the following:</p>\n<p>The <strong>non-parametric</strong> ones are (tested against their conterpart from sklearn):</p>\n<ul>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/auc\" rel=\"nofollow\">AUPRC</a>  (tested against <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.metrics.average_precision_score.html#sklearn.metrics.average_precision_score\" rel=\"nofollow\">sklearn\u2019s average_precision_score</a>).</li>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/auc\" rel=\"nofollow\">AUROC</a>  (tested against <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.metrics.roc_auc_score.html\" rel=\"nofollow\">sklearn\u2019s roc_auc_score</a>).</li>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/false_negatives\" rel=\"nofollow\">false_negatives</a>  (tested against false negatives from <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.metrics.confusion_matrix.html#sklearn.metrics.confusion_matrix\" rel=\"nofollow\">sklearn\u2019s confusion_matrix</a>).</li>\n<li><a href=\"https://tensorflow.org/api_docs/python/tf/metrics/false_positives\" rel=\"nofollow\">false_positives</a>  (tested against false positives from <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.metrics.confusion_matrix.html#sklearn.metrics.confusion_matrix\" rel=\"nofollow\">sklearn\u2019s confusion_matrix</a>).</li>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/mean_absolute_error\" rel=\"nofollow\">mean_absolute_error</a> (tested against <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.metrics.mean_absolute_error.html#sklearn.metrics.mean_absolute_error\" rel=\"nofollow\">sklearn\u2019s mean_absolute_error</a>)</li>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/mean_squared_error\" rel=\"nofollow\">mean_squared_error</a> (tested against <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.metrics.mean_squared_error.html#sklearn.metrics.mean_squared_error\" rel=\"nofollow\">sklearn\u2019s mean_squared_error</a>)</li>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/precision\" rel=\"nofollow\">precision</a> (tested against <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.metrics.precision_score.html#sklearn.metrics.precision_score\" rel=\"nofollow\">sklearn\u2019s precision_score</a>)</li>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/recall\" rel=\"nofollow\">recall</a> (tested against <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.metrics.recall_score.html#sklearn.metrics.recall_score\" rel=\"nofollow\">sklearn\u2019s recall_score</a>)</li>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/root_mean_squared_error\" rel=\"nofollow\">root_mean_squared_error</a> (tested against squared root of <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.metrics.mean_squared_error.html#sklearn.metrics.mean_squared_error\" rel=\"nofollow\">sklean\u2019s mean_squared_error</a>)</li>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/true_negatives\" rel=\"nofollow\">true_negatives</a> (tested against true negatives from <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.metrics.confusion_matrix.html#sklearn.metrics.confusion_matrix\" rel=\"nofollow\">sklearn\u2019s confusion_matrix</a>)</li>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/true_positives\" rel=\"nofollow\">true_positives</a> (tested against true positives from <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.metrics.confusion_matrix.html#sklearn.metrics.confusion_matrix\" rel=\"nofollow\">sklearn\u2019s confusion_matrix</a>)</li>\n</ul>\n<p>The <strong>parametric</strong> ones are (only execution is tested, no baseline in sklearn was available):</p>\n<ul>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/average_precision_at_k\" rel=\"nofollow\">average_precision_at_k</a></li>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/precision_at_k\" rel=\"nofollow\">precision_at_k</a></li>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/recall_at_k\" rel=\"nofollow\">recall_at_k</a></li>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/mean_iou\" rel=\"nofollow\">mean_iou</a></li>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/sensitivity_at_specificity\" rel=\"nofollow\">sensitivity_at_specificity</a></li>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/specificity_at_sensitivity\" rel=\"nofollow\">specificity_at_sensitivity</a></li>\n</ul>\n</div>\n<div id=\"extras\">\n<h2>Extras</h2>\n<p>I\u2019ve created also another couple packages you might enjoy: one, called <a href=\"https://github.com/LucaCappelletti94/extra_keras_utils\" rel=\"nofollow\">extra_keras_utils</a> that contains some commonly used code for Keras projects and <a href=\"https://github.com/LucaCappelletti94/plot_keras_history\" rel=\"nofollow\">plot_keras_history</a> which automatically plots a keras training history.</p>\n</div>\n\n          </div>"}, "last_serial": 5809670, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "553a30283d08931dfc149524180aef40", "sha256": "bb8460d1bf415845fa4684099578e3daf768ba53ab79f7d3784f083accbf9986"}, "downloads": -1, "filename": "extra_keras_metrics-1.0.0.tar.gz", "has_sig": false, "md5_digest": "553a30283d08931dfc149524180aef40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7477, "upload_time": "2019-05-25T12:20:05", "upload_time_iso_8601": "2019-05-25T12:20:05.013960Z", "url": "https://files.pythonhosted.org/packages/2e/39/72d4b356cd186a565dd3478e1f7ba65bdb6bac78196ef2050a75995f5317/extra_keras_metrics-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "f0ed9d73393157566197955a1d250d53", "sha256": "f5de2cc3b067de6e50e938ca0ae3dbb2942b4d1f96c4197149796ad5c8547094"}, "downloads": -1, "filename": "extra_keras_metrics-1.1.0.tar.gz", "has_sig": false, "md5_digest": "f0ed9d73393157566197955a1d250d53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7484, "upload_time": "2019-05-27T09:54:10", "upload_time_iso_8601": "2019-05-27T09:54:10.899033Z", "url": "https://files.pythonhosted.org/packages/9d/c7/265bbd75500ed6489970c949b4ec677cfb798c09b50dd6c6223c4737e4eb/extra_keras_metrics-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "dc8f532fdd55824ecd53303c9850fffe", "sha256": "d5d7c3b6b30117ecdf0ef66df8edd68c770b04a462571dc458de42711bcb08ae"}, "downloads": -1, "filename": "extra_keras_metrics-1.1.1.tar.gz", "has_sig": false, "md5_digest": "dc8f532fdd55824ecd53303c9850fffe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7991, "upload_time": "2019-06-02T17:39:15", "upload_time_iso_8601": "2019-06-02T17:39:15.827939Z", "url": "https://files.pythonhosted.org/packages/38/2a/48a287868b112904184da38ae5813a3e03e988d2e56b612bb93e880e99bc/extra_keras_metrics-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "c3c3ec73dbc5f18c70831ba99a1cc8b5", "sha256": "b03ae66f1dde21a0cbe1edf1c72114f95d815570e463a81b8b5014eeb0877eee"}, "downloads": -1, "filename": "extra_keras_metrics-1.1.2.tar.gz", "has_sig": false, "md5_digest": "c3c3ec73dbc5f18c70831ba99a1cc8b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8303, "upload_time": "2019-07-02T08:22:33", "upload_time_iso_8601": "2019-07-02T08:22:33.272995Z", "url": "https://files.pythonhosted.org/packages/be/b5/43ebcb243910c89cf77a76a9893eb45439915de914a22164e937111f9aa8/extra_keras_metrics-1.1.2.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "20e0ab914d50a53fdab5d729e7345df9", "sha256": "c06e83e9f7b82a30627f68531aad9ed11faf819e4526014a9276bfee68abf19e"}, "downloads": -1, "filename": "extra_keras_metrics-1.2.0.tar.gz", "has_sig": false, "md5_digest": "20e0ab914d50a53fdab5d729e7345df9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8442, "upload_time": "2019-07-29T18:45:06", "upload_time_iso_8601": "2019-07-29T18:45:06.254555Z", "url": "https://files.pythonhosted.org/packages/9a/fd/4b22ee36a243be045366019edddee847256c35836d7d9417abadbcc81f34/extra_keras_metrics-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "6599639b7ca89d18a08d7bbf4e4c47fb", "sha256": "89683b6bdf5bdb553b0a3717704741fb12752657dc7793e64d28bb6064e2ca1a"}, "downloads": -1, "filename": "extra_keras_metrics-1.3.0.tar.gz", "has_sig": false, "md5_digest": "6599639b7ca89d18a08d7bbf4e4c47fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7194, "upload_time": "2019-08-01T12:13:48", "upload_time_iso_8601": "2019-08-01T12:13:48.599544Z", "url": "https://files.pythonhosted.org/packages/05/6f/898e17c86f80fb357268b747561b4a3ba6778b466304de55560aa7fe9b3c/extra_keras_metrics-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "cbdd354ab2ef3c7e01ca76e6beef6575", "sha256": "1e8efb676a368ebb004e3dd1690304e22c6c58718f8b46eeb4ce0cb54be48ac3"}, "downloads": -1, "filename": "extra_keras_metrics-1.3.1.tar.gz", "has_sig": false, "md5_digest": "cbdd354ab2ef3c7e01ca76e6beef6575", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7941, "upload_time": "2019-09-10T15:35:16", "upload_time_iso_8601": "2019-09-10T15:35:16.392275Z", "url": "https://files.pythonhosted.org/packages/82/0f/b3b2ab62df1b85f753d9a8f0eb29f2e333d085d75a160751b1591be18053/extra_keras_metrics-1.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cbdd354ab2ef3c7e01ca76e6beef6575", "sha256": "1e8efb676a368ebb004e3dd1690304e22c6c58718f8b46eeb4ce0cb54be48ac3"}, "downloads": -1, "filename": "extra_keras_metrics-1.3.1.tar.gz", "has_sig": false, "md5_digest": "cbdd354ab2ef3c7e01ca76e6beef6575", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7941, "upload_time": "2019-09-10T15:35:16", "upload_time_iso_8601": "2019-09-10T15:35:16.392275Z", "url": "https://files.pythonhosted.org/packages/82/0f/b3b2ab62df1b85f753d9a8f0eb29f2e333d085d75a160751b1591be18053/extra_keras_metrics-1.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:28 2020"}