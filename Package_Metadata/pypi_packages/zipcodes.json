{"info": {"author": "Sean Pianka", "author_email": "pianka@eml.cc", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Build Tools"], "description": "Zipcodes\n========\n\nZipcodes is a package for Python 3 and Python 2.7 which supports lookup and filtering of zipcode data for the U.S.\n\n.. image:: https://pepy.tech/badge/zipcodes\n\nInstallation\n============\n\n.. code:: bash\n\n    $ pip install zipcodes\n\n\nSynopsis\n========\n\nIn search for a package to lookup U.S. zipcode data, `zipcode <https://github.com/buckmaxwell/zipcode>`__ is one of\nthe top results. However, if you're deploying into a cloud (and in my case, serverless) environment like AWS Lambda,\nthen the above package, which depends on SQLite, is not an option due to AWS Lambda's lack of runtime SQLite support.\n\nThe data used in building `zipcodes/zips.json.bz2` can be found under `build/app/data/`. The scripts necessary to\nreproduce and build `zipcodes/zips.json.bz2` can be found under `build/app/__init__.py`.\n\nThe tests are defined in and are generated from a custom, declarative format.\n\nBelow is the expected usage of this package and a demonstration of\nsupported functionality.\n\n.. code:: python\n\n    >>> from pprint import pprint\n    >>> import zipcodes\n\n    >>> # Simple zip-code matching.\n    >>> pprint(zipcodes.matching('77429'))\n    [{'acceptable_cities': [],\n      'active': True,\n      'area_codes': ['281', '832'],\n      'city': 'Cypress',\n      'country': 'US',\n      'county': 'Harris County',\n      'lat': '29.9857',\n      'long': '-95.6548',\n      'state': 'TX',\n      'timezone': 'America/Chicago',\n      'unacceptable_cities': [],\n      'world_region': 'NA',\n      'zip_code': '77429',\n      'zip_code_type': 'STANDARD'}]\n\n\n    >>> # Handles of Zip+4 zip-codes nicely. :)\n    >>> pprint(zipcodes.matching('77429-1145'))\n    [{'acceptable_cities': [],\n      'active': True,\n      'area_codes': ['281', '832'],\n      'city': 'Cypress',\n      'country': 'US',\n      'county': 'Harris County',\n      'lat': '29.9857',\n      'long': '-95.6548',\n      'state': 'TX',\n      'timezone': 'America/Chicago',\n      'unacceptable_cities': [],\n      'world_region': 'NA',\n      'zip_code': '77429',\n      'zip_code_type': 'STANDARD'}]\n\n    >>> # Will try to handle invalid zip-codes gracefully...\n    >>> print(zipcodes.matching('06463'))\n    []\n\n    >>> # Until it cannot.\n    >>> zipcodes.matching('0646a')\n    Traceback (most recent call last):\n      ...\n    TypeError: Invalid characters, zipcode may only contain digits and \"-\".\n\n    >>> zipcodes.matching('064690')\n    Traceback (most recent call last):\n      ...\n    TypeError: Invalid format, zipcode must be of the format: \"#####\" or \"#####-####\"\n\n    >>> zipcodes.matching(None)\n    Traceback (most recent call last):\n      ...\n    TypeError: Invalid type, zipcode must be a string.\n\n    >>> # Whether the zip-code exists within the database.\n    >>> print(zipcodes.is_real('06463'))\n    False\n\n    >>> # How handy!\n    >>> print(zipcodes.is_real('06469'))\n    True\n\n    >>> # Search for zipcodes that begin with a pattern.\n    >>> pprint(zipcodes.similar_to('1018'))\n    [{'acceptable_cities': [],\n      'active': False,\n      'area_codes': ['212'],\n      'city': 'New York',\n      'country': 'US',\n      'county': 'New York County',\n      'lat': '40.71',\n      'long': '-74',\n      'state': 'NY',\n      'timezone': 'America/New_York',\n      'unacceptable_cities': ['J C Penney'],\n      'world_region': 'NA',\n      'zip_code': '10184',\n      'zip_code_type': 'UNIQUE'},\n     {'acceptable_cities': [],\n      'active': True,\n      'area_codes': ['212'],\n      'city': 'New York',\n      'country': 'US',\n      'county': 'New York County',\n      'lat': '40.7143',\n      'long': '-74.0067',\n      'state': 'NY',\n      'timezone': 'America/New_York',\n      'unacceptable_cities': [],\n      'world_region': 'NA',\n      'zip_code': '10185',\n      'zip_code_type': 'PO BOX'}]\n\n    >>> # Use filter_by to filter a list of zip-codes by specific attribute->value pairs.\n    >>> pprint(zipcodes.filter_by(city=\"Old Saybrook\"))\n    [{'acceptable_cities': [],\n      'active': True,\n      'area_codes': ['860'],\n      'city': 'Old Saybrook',\n      'country': 'US',\n      'county': 'Middlesex County',\n      'lat': '41.3015',\n      'long': '-72.3879',\n      'state': 'CT',\n      'timezone': 'America/New_York',\n      'unacceptable_cities': ['Fenwick'],\n      'world_region': 'NA',\n      'zip_code': '06475',\n      'zip_code_type': 'STANDARD'}]\n\n    >>> # Arbitrary nesting of similar_to and filter_by calls, allowing for great precision while filtering.\n    >>> pprint(zipcodes.similar_to('2', zips=zipcodes.filter_by(active=True, city='Windsor')))\n    >>> pprint(zipcodes.similar_to('2', zips=zipcodes.filter_by(active=True, city='Windsor')))\n    [{'acceptable_cities': [],\n      'active': True,\n      'area_codes': ['757'],\n      'city': 'Windsor',\n      'country': 'US',\n      'county': 'Isle of Wight County',\n      'lat': '36.8628',\n      'long': '-76.7143',\n      'state': 'VA',\n      'timezone': 'America/New_York',\n      'unacceptable_cities': [],\n      'world_region': 'NA',\n      'zip_code': '23487',\n      'zip_code_type': 'STANDARD'},\n     {'acceptable_cities': ['Askewville'],\n      'active': True,\n      'area_codes': ['252'],\n      'city': 'Windsor',\n      'country': 'US',\n      'county': 'Bertie County',\n      'lat': '35.9942',\n      'long': '-76.9422',\n      'state': 'NC',\n      'timezone': 'America/New_York',\n      'unacceptable_cities': [],\n      'world_region': 'NA',\n      'zip_code': '27983',\n      'zip_code_type': 'STANDARD'},\n     {'acceptable_cities': [],\n      'active': True,\n      'area_codes': ['803'],\n      'city': 'Windsor',\n      'country': 'US',\n      'county': 'Aiken County',\n      'lat': '33.4730',\n      'long': '-81.5132',\n      'state': 'SC',\n      'timezone': 'America/New_York',\n      'unacceptable_cities': [],\n      'world_region': 'NA',\n      'zip_code': '29856',\n      'zip_code_type': 'STANDARD'}]\n\n    >>> # Have any other ideas? Make a pull request and start contributing today!\n    >>> # Made with love by Sean Pianka\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/seanpianka/zipcodes", "keywords": "zipcode zip code validation validate codes nosql", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "zipcodes", "package_url": "https://pypi.org/project/zipcodes/", "platform": "", "project_url": "https://pypi.org/project/zipcodes/", "project_urls": {"Homepage": "https://github.com/seanpianka/zipcodes"}, "release_url": "https://pypi.org/project/zipcodes/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "No-SQLite U.S. zipcode validation Python package, ready for use in AWS Lambda", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"zipcodes\">\n<h2>Zipcodes</h2>\n<p>Zipcodes is a package for Python 3 and Python 2.7 which supports lookup and filtering of zipcode data for the U.S.</p>\n<img alt=\"https://pepy.tech/badge/zipcodes\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a539e2d48b2b92efddf847e276fc37ca5a578a9b/68747470733a2f2f706570792e746563682f62616467652f7a6970636f646573\">\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install zipcodes\n</pre>\n</div>\n<div id=\"synopsis\">\n<h2>Synopsis</h2>\n<p>In search for a package to lookup U.S. zipcode data, <a href=\"https://github.com/buckmaxwell/zipcode\" rel=\"nofollow\">zipcode</a> is one of\nthe top results. However, if you\u2019re deploying into a cloud (and in my case, serverless) environment like AWS Lambda,\nthen the above package, which depends on SQLite, is not an option due to AWS Lambda\u2019s lack of runtime SQLite support.</p>\n<p>The data used in building <cite>zipcodes/zips.json.bz2</cite> can be found under <cite>build/app/data/</cite>. The scripts necessary to\nreproduce and build <cite>zipcodes/zips.json.bz2</cite> can be found under <cite>build/app/__init__.py</cite>.</p>\n<p>The tests are defined in and are generated from a custom, declarative format.</p>\n<p>Below is the expected usage of this package and a demonstration of\nsupported functionality.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"kn\">import</span> <span class=\"n\">pprint</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">zipcodes</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Simple zip-code matching.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">zipcodes</span><span class=\"o\">.</span><span class=\"n\">matching</span><span class=\"p\">(</span><span class=\"s1\">'77429'</span><span class=\"p\">))</span>\n<span class=\"p\">[{</span><span class=\"s1\">'acceptable_cities'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n  <span class=\"s1\">'active'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n  <span class=\"s1\">'area_codes'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'281'</span><span class=\"p\">,</span> <span class=\"s1\">'832'</span><span class=\"p\">],</span>\n  <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Cypress'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'country'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'county'</span><span class=\"p\">:</span> <span class=\"s1\">'Harris County'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'lat'</span><span class=\"p\">:</span> <span class=\"s1\">'29.9857'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'long'</span><span class=\"p\">:</span> <span class=\"s1\">'-95.6548'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'state'</span><span class=\"p\">:</span> <span class=\"s1\">'TX'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'timezone'</span><span class=\"p\">:</span> <span class=\"s1\">'America/Chicago'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'unacceptable_cities'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n  <span class=\"s1\">'world_region'</span><span class=\"p\">:</span> <span class=\"s1\">'NA'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'zip_code'</span><span class=\"p\">:</span> <span class=\"s1\">'77429'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'zip_code_type'</span><span class=\"p\">:</span> <span class=\"s1\">'STANDARD'</span><span class=\"p\">}]</span>\n\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Handles of Zip+4 zip-codes nicely. :)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">zipcodes</span><span class=\"o\">.</span><span class=\"n\">matching</span><span class=\"p\">(</span><span class=\"s1\">'77429-1145'</span><span class=\"p\">))</span>\n<span class=\"p\">[{</span><span class=\"s1\">'acceptable_cities'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n  <span class=\"s1\">'active'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n  <span class=\"s1\">'area_codes'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'281'</span><span class=\"p\">,</span> <span class=\"s1\">'832'</span><span class=\"p\">],</span>\n  <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Cypress'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'country'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'county'</span><span class=\"p\">:</span> <span class=\"s1\">'Harris County'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'lat'</span><span class=\"p\">:</span> <span class=\"s1\">'29.9857'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'long'</span><span class=\"p\">:</span> <span class=\"s1\">'-95.6548'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'state'</span><span class=\"p\">:</span> <span class=\"s1\">'TX'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'timezone'</span><span class=\"p\">:</span> <span class=\"s1\">'America/Chicago'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'unacceptable_cities'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n  <span class=\"s1\">'world_region'</span><span class=\"p\">:</span> <span class=\"s1\">'NA'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'zip_code'</span><span class=\"p\">:</span> <span class=\"s1\">'77429'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'zip_code_type'</span><span class=\"p\">:</span> <span class=\"s1\">'STANDARD'</span><span class=\"p\">}]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Will try to handle invalid zip-codes gracefully...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">zipcodes</span><span class=\"o\">.</span><span class=\"n\">matching</span><span class=\"p\">(</span><span class=\"s1\">'06463'</span><span class=\"p\">))</span>\n<span class=\"p\">[]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Until it cannot.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">zipcodes</span><span class=\"o\">.</span><span class=\"n\">matching</span><span class=\"p\">(</span><span class=\"s1\">'0646a'</span><span class=\"p\">)</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"o\">...</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">Invalid</span> <span class=\"n\">characters</span><span class=\"p\">,</span> <span class=\"n\">zipcode</span> <span class=\"n\">may</span> <span class=\"n\">only</span> <span class=\"n\">contain</span> <span class=\"n\">digits</span> <span class=\"ow\">and</span> <span class=\"s2\">\"-\"</span><span class=\"o\">.</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">zipcodes</span><span class=\"o\">.</span><span class=\"n\">matching</span><span class=\"p\">(</span><span class=\"s1\">'064690'</span><span class=\"p\">)</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"o\">...</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">Invalid</span> <span class=\"nb\">format</span><span class=\"p\">,</span> <span class=\"n\">zipcode</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"nb\">format</span><span class=\"p\">:</span> <span class=\"s2\">\"#####\"</span> <span class=\"ow\">or</span> <span class=\"s2\">\"#####-####\"</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">zipcodes</span><span class=\"o\">.</span><span class=\"n\">matching</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"o\">...</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">Invalid</span> <span class=\"nb\">type</span><span class=\"p\">,</span> <span class=\"n\">zipcode</span> <span class=\"n\">must</span> <span class=\"n\">be</span> <span class=\"n\">a</span> <span class=\"n\">string</span><span class=\"o\">.</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Whether the zip-code exists within the database.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">zipcodes</span><span class=\"o\">.</span><span class=\"n\">is_real</span><span class=\"p\">(</span><span class=\"s1\">'06463'</span><span class=\"p\">))</span>\n<span class=\"kc\">False</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># How handy!</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">zipcodes</span><span class=\"o\">.</span><span class=\"n\">is_real</span><span class=\"p\">(</span><span class=\"s1\">'06469'</span><span class=\"p\">))</span>\n<span class=\"kc\">True</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Search for zipcodes that begin with a pattern.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">zipcodes</span><span class=\"o\">.</span><span class=\"n\">similar_to</span><span class=\"p\">(</span><span class=\"s1\">'1018'</span><span class=\"p\">))</span>\n<span class=\"p\">[{</span><span class=\"s1\">'acceptable_cities'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n  <span class=\"s1\">'active'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n  <span class=\"s1\">'area_codes'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'212'</span><span class=\"p\">],</span>\n  <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'New York'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'country'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'county'</span><span class=\"p\">:</span> <span class=\"s1\">'New York County'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'lat'</span><span class=\"p\">:</span> <span class=\"s1\">'40.71'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'long'</span><span class=\"p\">:</span> <span class=\"s1\">'-74'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'state'</span><span class=\"p\">:</span> <span class=\"s1\">'NY'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'timezone'</span><span class=\"p\">:</span> <span class=\"s1\">'America/New_York'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'unacceptable_cities'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'J C Penney'</span><span class=\"p\">],</span>\n  <span class=\"s1\">'world_region'</span><span class=\"p\">:</span> <span class=\"s1\">'NA'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'zip_code'</span><span class=\"p\">:</span> <span class=\"s1\">'10184'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'zip_code_type'</span><span class=\"p\">:</span> <span class=\"s1\">'UNIQUE'</span><span class=\"p\">},</span>\n <span class=\"p\">{</span><span class=\"s1\">'acceptable_cities'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n  <span class=\"s1\">'active'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n  <span class=\"s1\">'area_codes'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'212'</span><span class=\"p\">],</span>\n  <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'New York'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'country'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'county'</span><span class=\"p\">:</span> <span class=\"s1\">'New York County'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'lat'</span><span class=\"p\">:</span> <span class=\"s1\">'40.7143'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'long'</span><span class=\"p\">:</span> <span class=\"s1\">'-74.0067'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'state'</span><span class=\"p\">:</span> <span class=\"s1\">'NY'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'timezone'</span><span class=\"p\">:</span> <span class=\"s1\">'America/New_York'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'unacceptable_cities'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n  <span class=\"s1\">'world_region'</span><span class=\"p\">:</span> <span class=\"s1\">'NA'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'zip_code'</span><span class=\"p\">:</span> <span class=\"s1\">'10185'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'zip_code_type'</span><span class=\"p\">:</span> <span class=\"s1\">'PO BOX'</span><span class=\"p\">}]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Use filter_by to filter a list of zip-codes by specific attribute-&gt;value pairs.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">zipcodes</span><span class=\"o\">.</span><span class=\"n\">filter_by</span><span class=\"p\">(</span><span class=\"n\">city</span><span class=\"o\">=</span><span class=\"s2\">\"Old Saybrook\"</span><span class=\"p\">))</span>\n<span class=\"p\">[{</span><span class=\"s1\">'acceptable_cities'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n  <span class=\"s1\">'active'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n  <span class=\"s1\">'area_codes'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'860'</span><span class=\"p\">],</span>\n  <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Old Saybrook'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'country'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'county'</span><span class=\"p\">:</span> <span class=\"s1\">'Middlesex County'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'lat'</span><span class=\"p\">:</span> <span class=\"s1\">'41.3015'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'long'</span><span class=\"p\">:</span> <span class=\"s1\">'-72.3879'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'state'</span><span class=\"p\">:</span> <span class=\"s1\">'CT'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'timezone'</span><span class=\"p\">:</span> <span class=\"s1\">'America/New_York'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'unacceptable_cities'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'Fenwick'</span><span class=\"p\">],</span>\n  <span class=\"s1\">'world_region'</span><span class=\"p\">:</span> <span class=\"s1\">'NA'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'zip_code'</span><span class=\"p\">:</span> <span class=\"s1\">'06475'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'zip_code_type'</span><span class=\"p\">:</span> <span class=\"s1\">'STANDARD'</span><span class=\"p\">}]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Arbitrary nesting of similar_to and filter_by calls, allowing for great precision while filtering.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">zipcodes</span><span class=\"o\">.</span><span class=\"n\">similar_to</span><span class=\"p\">(</span><span class=\"s1\">'2'</span><span class=\"p\">,</span> <span class=\"n\">zips</span><span class=\"o\">=</span><span class=\"n\">zipcodes</span><span class=\"o\">.</span><span class=\"n\">filter_by</span><span class=\"p\">(</span><span class=\"n\">active</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">city</span><span class=\"o\">=</span><span class=\"s1\">'Windsor'</span><span class=\"p\">)))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">zipcodes</span><span class=\"o\">.</span><span class=\"n\">similar_to</span><span class=\"p\">(</span><span class=\"s1\">'2'</span><span class=\"p\">,</span> <span class=\"n\">zips</span><span class=\"o\">=</span><span class=\"n\">zipcodes</span><span class=\"o\">.</span><span class=\"n\">filter_by</span><span class=\"p\">(</span><span class=\"n\">active</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">city</span><span class=\"o\">=</span><span class=\"s1\">'Windsor'</span><span class=\"p\">)))</span>\n<span class=\"p\">[{</span><span class=\"s1\">'acceptable_cities'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n  <span class=\"s1\">'active'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n  <span class=\"s1\">'area_codes'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'757'</span><span class=\"p\">],</span>\n  <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Windsor'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'country'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'county'</span><span class=\"p\">:</span> <span class=\"s1\">'Isle of Wight County'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'lat'</span><span class=\"p\">:</span> <span class=\"s1\">'36.8628'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'long'</span><span class=\"p\">:</span> <span class=\"s1\">'-76.7143'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'state'</span><span class=\"p\">:</span> <span class=\"s1\">'VA'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'timezone'</span><span class=\"p\">:</span> <span class=\"s1\">'America/New_York'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'unacceptable_cities'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n  <span class=\"s1\">'world_region'</span><span class=\"p\">:</span> <span class=\"s1\">'NA'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'zip_code'</span><span class=\"p\">:</span> <span class=\"s1\">'23487'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'zip_code_type'</span><span class=\"p\">:</span> <span class=\"s1\">'STANDARD'</span><span class=\"p\">},</span>\n <span class=\"p\">{</span><span class=\"s1\">'acceptable_cities'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'Askewville'</span><span class=\"p\">],</span>\n  <span class=\"s1\">'active'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n  <span class=\"s1\">'area_codes'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'252'</span><span class=\"p\">],</span>\n  <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Windsor'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'country'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'county'</span><span class=\"p\">:</span> <span class=\"s1\">'Bertie County'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'lat'</span><span class=\"p\">:</span> <span class=\"s1\">'35.9942'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'long'</span><span class=\"p\">:</span> <span class=\"s1\">'-76.9422'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'state'</span><span class=\"p\">:</span> <span class=\"s1\">'NC'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'timezone'</span><span class=\"p\">:</span> <span class=\"s1\">'America/New_York'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'unacceptable_cities'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n  <span class=\"s1\">'world_region'</span><span class=\"p\">:</span> <span class=\"s1\">'NA'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'zip_code'</span><span class=\"p\">:</span> <span class=\"s1\">'27983'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'zip_code_type'</span><span class=\"p\">:</span> <span class=\"s1\">'STANDARD'</span><span class=\"p\">},</span>\n <span class=\"p\">{</span><span class=\"s1\">'acceptable_cities'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n  <span class=\"s1\">'active'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n  <span class=\"s1\">'area_codes'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'803'</span><span class=\"p\">],</span>\n  <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Windsor'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'country'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'county'</span><span class=\"p\">:</span> <span class=\"s1\">'Aiken County'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'lat'</span><span class=\"p\">:</span> <span class=\"s1\">'33.4730'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'long'</span><span class=\"p\">:</span> <span class=\"s1\">'-81.5132'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'state'</span><span class=\"p\">:</span> <span class=\"s1\">'SC'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'timezone'</span><span class=\"p\">:</span> <span class=\"s1\">'America/New_York'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'unacceptable_cities'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n  <span class=\"s1\">'world_region'</span><span class=\"p\">:</span> <span class=\"s1\">'NA'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'zip_code'</span><span class=\"p\">:</span> <span class=\"s1\">'29856'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'zip_code_type'</span><span class=\"p\">:</span> <span class=\"s1\">'STANDARD'</span><span class=\"p\">}]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Have any other ideas? Make a pull request and start contributing today!</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Made with love by Sean Pianka</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6129709, "releases": {"1.0.3": [{"comment_text": "", "digests": {"md5": "9a3b62a9023e53f32e4e97c8517cfc33", "sha256": "7385d5ee5b3b05ad15668a467610dd1e2afe79fde579e84eb52a4781221808c3"}, "downloads": -1, "filename": "zipcodes-1.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9a3b62a9023e53f32e4e97c8517cfc33", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 573009, "upload_time": "2017-09-01T02:06:55", "upload_time_iso_8601": "2017-09-01T02:06:55.734337Z", "url": "https://files.pythonhosted.org/packages/01/dc/5cab1ce959cdc86ebb86acddfb6104e1b13772785835db29726c9fdb769a/zipcodes-1.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed7bd506fe09fcf3d8cf0d7e0c5a83f1", "sha256": "a2a367b1a02f67c3653ed16d99260c5ba0f1d3c396c71764dd4af41a07b4eb74"}, "downloads": -1, "filename": "zipcodes-1.0.3.tar.gz", "has_sig": false, "md5_digest": "ed7bd506fe09fcf3d8cf0d7e0c5a83f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 572516, "upload_time": "2017-09-01T02:06:59", "upload_time_iso_8601": "2017-09-01T02:06:59.182968Z", "url": "https://files.pythonhosted.org/packages/5e/6d/f539b7b945c67ff91960a83194751344444765d2a1505112f51bc2b41138/zipcodes-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "42e0bf113af491b597fc9fe5ba99a0bb", "sha256": "1db2fd46f6ed7fed772c05165e49510cd9e7df8f018f326c2c7f1c496d20584c"}, "downloads": -1, "filename": "zipcodes-1.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "42e0bf113af491b597fc9fe5ba99a0bb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 573120, "upload_time": "2018-03-12T03:01:26", "upload_time_iso_8601": "2018-03-12T03:01:26.077210Z", "url": "https://files.pythonhosted.org/packages/5c/69/ab0666e57ed40d5b93182308e23fb3a3417a69ee3ac4869b810c44423a79/zipcodes-1.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8dc5502bcd1a90cee744a7d22af6b3d8", "sha256": "a4a64c3a8d341441cab4609f73a2b593e7dc41a4d69362d193630c933f3f6635"}, "downloads": -1, "filename": "zipcodes-1.0.4.tar.gz", "has_sig": false, "md5_digest": "8dc5502bcd1a90cee744a7d22af6b3d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 572585, "upload_time": "2018-03-12T03:01:28", "upload_time_iso_8601": "2018-03-12T03:01:28.214806Z", "url": "https://files.pythonhosted.org/packages/f9/11/29deb26231ba940247367f58a0a695a40a3a5400834a165193b24a05f566/zipcodes-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "17954374099e140bdda56b3228969d4e", "sha256": "9f5694b50e9484d4f5057bd295715aa23108fc7471b8e330b37d79d8cb2306cf"}, "downloads": -1, "filename": "zipcodes-1.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "17954374099e140bdda56b3228969d4e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 571731, "upload_time": "2018-12-26T07:52:48", "upload_time_iso_8601": "2018-12-26T07:52:48.437248Z", "url": "https://files.pythonhosted.org/packages/81/d1/b52c2d5bd93c8532f78cb2df688baa16cc121351ebd947274eabd944531d/zipcodes-1.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de0bed7f78df7b0711a08c579096d012", "sha256": "54de2736e41484e2751a36a219979960b02edccc271712424d54098a1c3e253a"}, "downloads": -1, "filename": "zipcodes-1.0.5.tar.gz", "has_sig": false, "md5_digest": "de0bed7f78df7b0711a08c579096d012", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 574075, "upload_time": "2018-12-26T07:52:51", "upload_time_iso_8601": "2018-12-26T07:52:51.144776Z", "url": "https://files.pythonhosted.org/packages/94/4e/ec0a47bcd38313694a94fc2154f8e1c7dc12c8f68c2702a79b8855da17d5/zipcodes-1.0.5.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "c3b50e9678f8c6e3c48e974c7a8ee2f1", "sha256": "f7c32b34f7204cdf2dc6ecaad623ac98ceef70b26b63b9070bbc71d7b6e89808"}, "downloads": -1, "filename": "zipcodes-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c3b50e9678f8c6e3c48e974c7a8ee2f1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 715273, "upload_time": "2019-11-13T12:03:46", "upload_time_iso_8601": "2019-11-13T12:03:46.546778Z", "url": "https://files.pythonhosted.org/packages/3a/9e/899d449f76e5f303c7fe2c9b6142ef0121b5ec1f1279a7f27b2bbb90025c/zipcodes-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f706a475e0e0de143e462b0f5df13d1", "sha256": "ed3fa4e01acd5c00ba1c23f8261b13e12f5099f415ff66aee4679b0563f26360"}, "downloads": -1, "filename": "zipcodes-1.1.0.tar.gz", "has_sig": false, "md5_digest": "6f706a475e0e0de143e462b0f5df13d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 718229, "upload_time": "2019-11-13T12:03:48", "upload_time_iso_8601": "2019-11-13T12:03:48.734415Z", "url": "https://files.pythonhosted.org/packages/9c/55/63aa1ea9d8add8950306bbabd69290936c26a4b9f50f4797c7b9b30348a4/zipcodes-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c3b50e9678f8c6e3c48e974c7a8ee2f1", "sha256": "f7c32b34f7204cdf2dc6ecaad623ac98ceef70b26b63b9070bbc71d7b6e89808"}, "downloads": -1, "filename": "zipcodes-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c3b50e9678f8c6e3c48e974c7a8ee2f1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 715273, "upload_time": "2019-11-13T12:03:46", "upload_time_iso_8601": "2019-11-13T12:03:46.546778Z", "url": "https://files.pythonhosted.org/packages/3a/9e/899d449f76e5f303c7fe2c9b6142ef0121b5ec1f1279a7f27b2bbb90025c/zipcodes-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f706a475e0e0de143e462b0f5df13d1", "sha256": "ed3fa4e01acd5c00ba1c23f8261b13e12f5099f415ff66aee4679b0563f26360"}, "downloads": -1, "filename": "zipcodes-1.1.0.tar.gz", "has_sig": false, "md5_digest": "6f706a475e0e0de143e462b0f5df13d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 718229, "upload_time": "2019-11-13T12:03:48", "upload_time_iso_8601": "2019-11-13T12:03:48.734415Z", "url": "https://files.pythonhosted.org/packages/9c/55/63aa1ea9d8add8950306bbabd69290936c26a4b9f50f4797c7b9b30348a4/zipcodes-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:05 2020"}