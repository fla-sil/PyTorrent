{"info": {"author": "Nate Coraor", "author_email": "nate@coraor.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "lionshead\n=========\n\nA platform detection library for Python. It uses various methods to attempt to\ndetermine the operating system, distribution, release, version, etc., to aid\ncallers in making platform-specific decisions.\n\nlionshead was originally written for \"platform-specific wheels\" that were a\nsolution to the Linux wheel problem before the creation of `manylinux\n<https://github.com/pypa/manylinux/>`_. Rather than be wasted effort, it's been\nspun in to a separate library (which would've been necessary anyway to be\nconsumed by both pip and wheel).\n\nThe development repository can be found at `<https://github.com/natefoo/lionshead>`_\n\nDocumentation is available at `<http://lionshead.readthedocs.io>`_\n\nThe package is published to PyPI at `<https://pypi.python.org/pypi/lionshead>`_\n\nQuick start\n-----------\n\nOn Debian stretch/sid:\n\n>>> from lionshead import *\n>>> get_specific_platform()\nSpecificPlatform(dist='debian', major_vers='stretch/sid', full_vers='stretch/sid', stability='unstable')\n>>> get_specific_platform_string()\n'debian-stretch_sid'\n>>> get_platform_stability_string()\n'unstable'\n\nOn CentOS 7:\n\n>>> from lionshead import *\n>>> get_specific_platform()\nSpecificPlatform(dist='centos', major_vers='7', full_vers='7', stability='stable')\n>>> get_specific_platform_string()\n'centos-7'\n>>> get_platform_stability_string()\n'stable'\n\nInstallation of the module also installs ``lionshead-platform`` and\n``lionshead-stability`` commands that return the output of\n``get_specific_platform_string`` and ``get_platform_stability_string``,\nrespectively.\n\nFAQ\n---\n\nHow can I help?\n~~~~~~~~~~~~~~~\n\nSee if your OS/distribution is listed and/or correct in `this gist\n<https://gist.github.com/natefoo/814c5bf936922dad97ff>`_, and if not, follow\nthe instructions and create an issue with your findings.\n\nDoes this work on anything other than Linux?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nNot currently, but as an avid illumos fan, I plan to add support for other\noperating systems such as illumos and the BSDs. `Here's the data collection\n<https://gist.github.com/natefoo/7af6f3d47bb008669467>`_ I did for Ansible's\nillumos detection to get started.\n\nWhat is a \"stable\" vs. \"unstable\" platform?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\"Stable\" platforms are operating system releases which commit to a defined,\nnon-changing ABI for the lifetime of the release. This means that the ABI\nremains consisntent even after OS updates (this typically means that all\nsoftware is maintained at a specific version). Examples of \"stable\" releases\ninclude:\n\n* Red Hat Enterprise Linux and derivatives\n* Ubuntu\n* Debian (stable and past stable releases)\n* SUSE Linux Enterprise Server\n* openSUSE (releases)\n\nConversely, \"unstable\" platforms are operating systems that use a \"rolling\nrelease\" model where software versions can change with each OS update. Examples\nof \"unstable\" releases include:\n\n* Debian (testing/sid)\n* openSUSE (tumbleweed)\n* Arch\n\nWhat's with the name?\n~~~~~~~~~~~~~~~~~~~~~\nThe name is a reference to *Indiana Jones and the Last Crusade*, specifically\nthe scene where Indy takes the \"leap of faith\" on to the invisible bridge in\nthe Temple of the Sun.\n\n    \"Only in the leap from the lion's head will he prove his worth.\"\n\nThe leap detects the (presence of the) platform underneath... get it? ;P\n\nCode of Conduct\n---------------\n\nEveryone interacting in the lionshead project's codebases, issue trackers, chat\nrooms, and mailing lists is expected to follow the `PyPA Code of Conduct`_.\n\n.. _PyPA Code of Conduct: https://www.pypa.io/en/latest/code-of-conduct/\n\n\nHistory\n-------\n\n0.1.1 (2017-01-07)\n~~~~~~~~~~~~~~~~~~\n\n- Fix detection of Amazon Linux\n\n0.1 (2017-01-03)\n~~~~~~~~~~~~~~~~\n\n- Yanked ``platform`` module out of my pip/wheel forks and adapted as a\n  standalone module for initial version.\n- Wrote a bit of documentation.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/natefoo/lionshead", "keywords": "platform os operating system", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "lionshead", "package_url": "https://pypi.org/project/lionshead/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/lionshead/", "project_urls": {"Homepage": "https://github.com/natefoo/lionshead"}, "release_url": "https://pypi.org/project/lionshead/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Detect OS/platforms", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A platform detection library for Python. It uses various methods to attempt to\ndetermine the operating system, distribution, release, version, etc., to aid\ncallers in making platform-specific decisions.</p>\n<p>lionshead was originally written for \u201cplatform-specific wheels\u201d that were a\nsolution to the Linux wheel problem before the creation of <a href=\"https://github.com/pypa/manylinux/\" rel=\"nofollow\">manylinux</a>. Rather than be wasted effort, it\u2019s been\nspun in to a separate library (which would\u2019ve been necessary anyway to be\nconsumed by both pip and wheel).</p>\n<p>The development repository can be found at <a href=\"https://github.com/natefoo/lionshead\" rel=\"nofollow\">https://github.com/natefoo/lionshead</a></p>\n<p>Documentation is available at <a href=\"http://lionshead.readthedocs.io\" rel=\"nofollow\">http://lionshead.readthedocs.io</a></p>\n<p>The package is published to PyPI at <a href=\"https://pypi.python.org/pypi/lionshead\" rel=\"nofollow\">https://pypi.python.org/pypi/lionshead</a></p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<p>On Debian stretch/sid:</p>\n<pre>&gt;&gt;&gt; from lionshead import *\n&gt;&gt;&gt; get_specific_platform()\nSpecificPlatform(dist='debian', major_vers='stretch/sid', full_vers='stretch/sid', stability='unstable')\n&gt;&gt;&gt; get_specific_platform_string()\n'debian-stretch_sid'\n&gt;&gt;&gt; get_platform_stability_string()\n'unstable'\n</pre>\n<p>On CentOS 7:</p>\n<pre>&gt;&gt;&gt; from lionshead import *\n&gt;&gt;&gt; get_specific_platform()\nSpecificPlatform(dist='centos', major_vers='7', full_vers='7', stability='stable')\n&gt;&gt;&gt; get_specific_platform_string()\n'centos-7'\n&gt;&gt;&gt; get_platform_stability_string()\n'stable'\n</pre>\n<p>Installation of the module also installs <tt><span class=\"pre\">lionshead-platform</span></tt> and\n<tt><span class=\"pre\">lionshead-stability</span></tt> commands that return the output of\n<tt>get_specific_platform_string</tt> and <tt>get_platform_stability_string</tt>,\nrespectively.</p>\n</div>\n<div id=\"faq\">\n<h2>FAQ</h2>\n<div id=\"how-can-i-help\">\n<h3>How can I help?</h3>\n<p>See if your OS/distribution is listed and/or correct in <a href=\"https://gist.github.com/natefoo/814c5bf936922dad97ff\" rel=\"nofollow\">this gist</a>, and if not, follow\nthe instructions and create an issue with your findings.</p>\n</div>\n<div id=\"does-this-work-on-anything-other-than-linux\">\n<h3>Does this work on anything other than Linux?</h3>\n<p>Not currently, but as an avid illumos fan, I plan to add support for other\noperating systems such as illumos and the BSDs. <a href=\"https://gist.github.com/natefoo/7af6f3d47bb008669467\" rel=\"nofollow\">Here\u2019s the data collection</a> I did for Ansible\u2019s\nillumos detection to get started.</p>\n</div>\n<div id=\"what-is-a-stable-vs-unstable-platform\">\n<h3>What is a \u201cstable\u201d vs. \u201cunstable\u201d platform?</h3>\n<p>\u201cStable\u201d platforms are operating system releases which commit to a defined,\nnon-changing ABI for the lifetime of the release. This means that the ABI\nremains consisntent even after OS updates (this typically means that all\nsoftware is maintained at a specific version). Examples of \u201cstable\u201d releases\ninclude:</p>\n<ul>\n<li>Red Hat Enterprise Linux and derivatives</li>\n<li>Ubuntu</li>\n<li>Debian (stable and past stable releases)</li>\n<li>SUSE Linux Enterprise Server</li>\n<li>openSUSE (releases)</li>\n</ul>\n<p>Conversely, \u201cunstable\u201d platforms are operating systems that use a \u201crolling\nrelease\u201d model where software versions can change with each OS update. Examples\nof \u201cunstable\u201d releases include:</p>\n<ul>\n<li>Debian (testing/sid)</li>\n<li>openSUSE (tumbleweed)</li>\n<li>Arch</li>\n</ul>\n</div>\n<div id=\"what-s-with-the-name\">\n<h3>What\u2019s with the name?</h3>\n<p>The name is a reference to <em>Indiana Jones and the Last Crusade</em>, specifically\nthe scene where Indy takes the \u201cleap of faith\u201d on to the invisible bridge in\nthe Temple of the Sun.</p>\n<blockquote>\n\u201cOnly in the leap from the lion\u2019s head will he prove his worth.\u201d</blockquote>\n<p>The leap detects the (presence of the) platform underneath\u2026 get it? ;P</p>\n</div>\n</div>\n<div id=\"code-of-conduct\">\n<h2>Code of Conduct</h2>\n<p>Everyone interacting in the lionshead project\u2019s codebases, issue trackers, chat\nrooms, and mailing lists is expected to follow the <a href=\"https://www.pypa.io/en/latest/code-of-conduct/\" rel=\"nofollow\">PyPA Code of Conduct</a>.</p>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.1.1 (2017-01-07)</h3>\n<ul>\n<li>Fix detection of Amazon Linux</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1 (2017-01-03)</h3>\n<ul>\n<li>Yanked <tt>platform</tt> module out of my pip/wheel forks and adapted as a\nstandalone module for initial version.</li>\n<li>Wrote a bit of documentation.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2559797, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "dbf08b082a7381aeb047e9eaa33e18c3", "sha256": "0340b7b71cdfac5032b33a0d1ebae45ab848dc29ed50add9f74b08c925e60346"}, "downloads": -1, "filename": "lionshead-0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "dbf08b082a7381aeb047e9eaa33e18c3", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 9789, "upload_time": "2017-01-05T19:31:36", "upload_time_iso_8601": "2017-01-05T19:31:36.202920Z", "url": "https://files.pythonhosted.org/packages/0f/a6/883bb690c150e7e3c424e6abc2bdded0d62da1194c42351b1b16bacd8419/lionshead-0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "531c1f3e7025a48369465f0446af47ec", "sha256": "0fd1f868161dc3bb23ccb537fd9af7343021c968cf0eba82e07fc60110ff177b"}, "downloads": -1, "filename": "lionshead-0.1.tar.gz", "has_sig": false, "md5_digest": "531c1f3e7025a48369465f0446af47ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6547, "upload_time": "2017-01-05T19:31:37", "upload_time_iso_8601": "2017-01-05T19:31:37.957099Z", "url": "https://files.pythonhosted.org/packages/1d/c6/c0e79e9868c46e03646cc620281bb03e48b9d2409a2ad35e0fd38ec154a1/lionshead-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e88e4c25f2a9f570141ed9abe05f7dc5", "sha256": "14b8368a092cf8b22e0fb564de4cd4549267e71c50df93c40d556fa9701822c0"}, "downloads": -1, "filename": "lionshead-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "e88e4c25f2a9f570141ed9abe05f7dc5", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 10021, "upload_time": "2017-01-07T21:08:05", "upload_time_iso_8601": "2017-01-07T21:08:05.952278Z", "url": "https://files.pythonhosted.org/packages/d8/f2/7009e6dc18ccdac6c4c58866c4c2912def69d3b3edf29b5f114d2352cd88/lionshead-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2551cb240ae1cf951e8961514202175c", "sha256": "f44e241fa259ac9101dd21125b9ba16d3e22ac29ca112f1d6736fd12c7b18aa6"}, "downloads": -1, "filename": "lionshead-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2551cb240ae1cf951e8961514202175c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6679, "upload_time": "2017-01-07T21:08:07", "upload_time_iso_8601": "2017-01-07T21:08:07.920410Z", "url": "https://files.pythonhosted.org/packages/f3/1a/bf9a377aa5a8b88be7c9e6869e27e8d717d113cf3986a735103a59893d25/lionshead-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e88e4c25f2a9f570141ed9abe05f7dc5", "sha256": "14b8368a092cf8b22e0fb564de4cd4549267e71c50df93c40d556fa9701822c0"}, "downloads": -1, "filename": "lionshead-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "e88e4c25f2a9f570141ed9abe05f7dc5", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 10021, "upload_time": "2017-01-07T21:08:05", "upload_time_iso_8601": "2017-01-07T21:08:05.952278Z", "url": "https://files.pythonhosted.org/packages/d8/f2/7009e6dc18ccdac6c4c58866c4c2912def69d3b3edf29b5f114d2352cd88/lionshead-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2551cb240ae1cf951e8961514202175c", "sha256": "f44e241fa259ac9101dd21125b9ba16d3e22ac29ca112f1d6736fd12c7b18aa6"}, "downloads": -1, "filename": "lionshead-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2551cb240ae1cf951e8961514202175c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6679, "upload_time": "2017-01-07T21:08:07", "upload_time_iso_8601": "2017-01-07T21:08:07.920410Z", "url": "https://files.pythonhosted.org/packages/f3/1a/bf9a377aa5a8b88be7c9e6869e27e8d717d113cf3986a735103a59893d25/lionshead-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:27 2020"}