{"info": {"author": "Keyi Tang", "author_email": "keyi.tang@rbc.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# SymSpellJPy\nThis is a python wrapper module for a Java implementation of the SymSpell library.\n\n## Dependencies\n1. python3.6: ```conda create --name <ENV_NAME> python=3.6```\n2. Java 1.8 SDK\n\n## Install\n1. Install Dependencies\n2. Activate the Python virtual environment: ```conda activate <ENV_NAME>```\n2. Install SymSpellJPy: ```pip install symspelljpy``` \n\n## Usage\n```python\nimport symspelljpy\n\nspell_client = symspelljpy.SymSpellClient(distance_type='QWE')\nprint(spell_client.lookup('plase correcme'))\n```\n\n\n```python\n{\"inputText\":\"plase correcme\",\"output\":[{\"outputText\":\"please correct me \",\"mode\":\"COMPOUND\",\"distance\":3.0,\"count\":4.4467949E7}]}\n```\n\nThis python wrapper is build on top of the following jar file:\n```bash\n$ java -jar ./symspell-console/target/spellcheckclient-jar-with-dependencies.jar -h\nusage: java -jar\n            symspell-console-6.6-SNAPSHOT-jar-with-dependencies.jar.jar\n -b,--bigram <arg>     bi-gram dictionary file path\n -d,--distance <arg>   spelling correction distance type:\n                       'VDL': vanilla Damerau Levenshtein distance.\n                       'WDL': weighted Damerau Levenshtein distance.\n                       'QWE': qwerty distance.\n -e,--edits <arg>      maximum number of edits (default 2)\n -h,--help             this help message\n -k,--topk <arg>       number of candidates to output (default 5)\n -m,--mode <arg>       spelling correction mode: 'SMART'(Default), 'ALL',\n                       'WORD', 'COMPOUND' or 'SEGMENTATION'.\n                       WORD: Individual word spelling correction.\n                       COMPOUND: Compound splitting/decompounding +\n                       Automatic spelling correction. Space can only be\n                       inserted/deleted for a token once.\n                       SEGMENTATION: Word segmentation  + Automatic\n                       spelling correction. Existing spaces are allowed\n                       and considered for optimum segmentation.\n                       SMART: when there is no space in the input text and\n                       the text length is over the maximum word length,\n                       enable word segmenation. Otherwise choose COMPOUND\n                       word correction model.\n                       ALL: COMPOUND + SEGMENTATION.\n -t,--timer            execution time per input in milliseconds.\n -u,--unigram <arg>    uni-gram dictionary file path\n -w,--word <arg>       maximum word length for word segmentation (default\n                       10)\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/rbcmllab/spellchecker/symspelljpy/master", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "symspelljpy", "package_url": "https://pypi.org/project/symspelljpy/", "platform": "", "project_url": "https://pypi.org/project/symspelljpy/", "project_urls": {"Homepage": "https://bitbucket.org/rbcmllab/spellchecker/symspelljpy/master"}, "release_url": "https://pypi.org/project/symspelljpy/0.4/", "requires_dist": null, "requires_python": "", "summary": "Spelling Correction", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SymSpellJPy</h1>\n<p>This is a python wrapper module for a Java implementation of the SymSpell library.</p>\n<h2>Dependencies</h2>\n<ol>\n<li>python3.6: <code>conda create --name &lt;ENV_NAME&gt; python=3.6</code></li>\n<li>Java 1.8 SDK</li>\n</ol>\n<h2>Install</h2>\n<ol>\n<li>Install Dependencies</li>\n<li>Activate the Python virtual environment: <code>conda activate &lt;ENV_NAME&gt;</code></li>\n<li>Install SymSpellJPy: <code>pip install symspelljpy</code></li>\n</ol>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">symspelljpy</span>\n\n<span class=\"n\">spell_client</span> <span class=\"o\">=</span> <span class=\"n\">symspelljpy</span><span class=\"o\">.</span><span class=\"n\">SymSpellClient</span><span class=\"p\">(</span><span class=\"n\">distance_type</span><span class=\"o\">=</span><span class=\"s1\">'QWE'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">spell_client</span><span class=\"o\">.</span><span class=\"n\">lookup</span><span class=\"p\">(</span><span class=\"s1\">'plase correcme'</span><span class=\"p\">))</span>\n</pre>\n<pre><span class=\"p\">{</span><span class=\"s2\">\"inputText\"</span><span class=\"p\">:</span><span class=\"s2\">\"plase correcme\"</span><span class=\"p\">,</span><span class=\"s2\">\"output\"</span><span class=\"p\">:[{</span><span class=\"s2\">\"outputText\"</span><span class=\"p\">:</span><span class=\"s2\">\"please correct me \"</span><span class=\"p\">,</span><span class=\"s2\">\"mode\"</span><span class=\"p\">:</span><span class=\"s2\">\"COMPOUND\"</span><span class=\"p\">,</span><span class=\"s2\">\"distance\"</span><span class=\"p\">:</span><span class=\"mf\">3.0</span><span class=\"p\">,</span><span class=\"s2\">\"count\"</span><span class=\"p\">:</span><span class=\"mf\">4.4467949E7</span><span class=\"p\">}]}</span>\n</pre>\n<p>This python wrapper is build on top of the following jar file:</p>\n<pre>$ java -jar ./symspell-console/target/spellcheckclient-jar-with-dependencies.jar -h\nusage: java -jar\n            symspell-console-6.6-SNAPSHOT-jar-with-dependencies.jar.jar\n -b,--bigram &lt;arg&gt;     bi-gram dictionary file path\n -d,--distance &lt;arg&gt;   spelling correction distance type:\n                       <span class=\"s1\">'VDL'</span>: vanilla Damerau Levenshtein distance.\n                       <span class=\"s1\">'WDL'</span>: weighted Damerau Levenshtein distance.\n                       <span class=\"s1\">'QWE'</span>: qwerty distance.\n -e,--edits &lt;arg&gt;      maximum number of edits <span class=\"o\">(</span>default <span class=\"m\">2</span><span class=\"o\">)</span>\n -h,--help             this <span class=\"nb\">help</span> message\n -k,--topk &lt;arg&gt;       number of candidates to output <span class=\"o\">(</span>default <span class=\"m\">5</span><span class=\"o\">)</span>\n -m,--mode &lt;arg&gt;       spelling correction mode: <span class=\"s1\">'SMART'</span><span class=\"o\">(</span>Default<span class=\"o\">)</span>, <span class=\"s1\">'ALL'</span>,\n                       <span class=\"s1\">'WORD'</span>, <span class=\"s1\">'COMPOUND'</span> or <span class=\"s1\">'SEGMENTATION'</span>.\n                       WORD: Individual word spelling correction.\n                       COMPOUND: Compound splitting/decompounding +\n                       Automatic spelling correction. Space can only be\n                       inserted/deleted <span class=\"k\">for</span> a token once.\n                       SEGMENTATION: Word segmentation  + Automatic\n                       spelling correction. Existing spaces are allowed\n                       and considered <span class=\"k\">for</span> optimum segmentation.\n                       SMART: when there is no space in the input text and\n                       the text length is over the maximum word length,\n                       <span class=\"nb\">enable</span> word segmenation. Otherwise choose COMPOUND\n                       word correction model.\n                       ALL: COMPOUND + SEGMENTATION.\n -t,--timer            execution <span class=\"nb\">time</span> per input in milliseconds.\n -u,--unigram &lt;arg&gt;    uni-gram dictionary file path\n -w,--word &lt;arg&gt;       maximum word length <span class=\"k\">for</span> word segmentation <span class=\"o\">(</span>default\n                       <span class=\"m\">10</span><span class=\"o\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6742473, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "238d6792aed189e823fcaf14ec90be59", "sha256": "cf675e0f193afd1929a2475e9f7c1a46fdb98db68f75cb4e8164cc14a4b2be41"}, "downloads": -1, "filename": "symspelljpy-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "238d6792aed189e823fcaf14ec90be59", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15129342, "upload_time": "2020-02-14T00:34:19", "upload_time_iso_8601": "2020-02-14T00:34:19.657348Z", "url": "https://files.pythonhosted.org/packages/aa/44/7da560c36ed34a19aa997c289b66fa33b6d2f837911f880b0baff9f2b240/symspelljpy-0.1-py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "c5d8955710c78e9465b55920c43a6271", "sha256": "f194fbee4233bb8889efe6847df3a846357ffc152bcd47270760d02d2c5c96d1"}, "downloads": -1, "filename": "symspelljpy-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c5d8955710c78e9465b55920c43a6271", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3430, "upload_time": "2020-02-18T20:25:58", "upload_time_iso_8601": "2020-02-18T20:25:58.613774Z", "url": "https://files.pythonhosted.org/packages/ed/3d/2bf96ff44fe4860fa04d94c8fffd32af35f7276026e10f283a8a9c2da6eb/symspelljpy-0.2-py3-none-any.whl", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "0502e839e8f0d2dbd85b00c5d01d9034", "sha256": "6a8c9775f7434edc357134632369f58899f5521c9dd2b27a6f5003d267ce2dc2"}, "downloads": -1, "filename": "symspelljpy-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0502e839e8f0d2dbd85b00c5d01d9034", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15130718, "upload_time": "2020-03-03T18:04:47", "upload_time_iso_8601": "2020-03-03T18:04:47.574561Z", "url": "https://files.pythonhosted.org/packages/c5/b9/a1c614db81c1bf3773306826a566ebe2a989b19e67f8bf107cdc42d7dffe/symspelljpy-0.3-py3-none-any.whl", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "238e2ecb6d6e2b67d890ac872ec0a982", "sha256": "91927419cf382e4244c6b55460137cb1278412e8198dce26974314e095a813d7"}, "downloads": -1, "filename": "symspelljpy-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "238e2ecb6d6e2b67d890ac872ec0a982", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15130714, "upload_time": "2020-03-03T18:13:14", "upload_time_iso_8601": "2020-03-03T18:13:14.326496Z", "url": "https://files.pythonhosted.org/packages/e0/5e/7100af6eaead5f501a1e9e573360defd502bbce75c97498940e91c985385/symspelljpy-0.4-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "238e2ecb6d6e2b67d890ac872ec0a982", "sha256": "91927419cf382e4244c6b55460137cb1278412e8198dce26974314e095a813d7"}, "downloads": -1, "filename": "symspelljpy-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "238e2ecb6d6e2b67d890ac872ec0a982", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15130714, "upload_time": "2020-03-03T18:13:14", "upload_time_iso_8601": "2020-03-03T18:13:14.326496Z", "url": "https://files.pythonhosted.org/packages/e0/5e/7100af6eaead5f501a1e9e573360defd502bbce75c97498940e91c985385/symspelljpy-0.4-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:59:10 2020"}