{"info": {"author": "Gaspar Karm", "author_email": "gkarm@live.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Build Tools"], "description": "pyhacores\n=========\n\n\n.. image:: https://img.shields.io/pypi/v/pyhacores.svg\n        :target: https://pypi.python.org/pypi/pyhacores\n\n.. image:: https://travis-ci.org/gasparka/pyhacores.svg?branch=develop\n    :target: https://travis-ci.org/gasparka/pyhacores\n\n.. image:: https://pyup.io/repos/github/gasparka/pyhacores/shield.svg\n     :target: https://pyup.io/repos/github/gasparka/pyhacores/\n     :alt: Updates\n\n.. image:: https://coveralls.io/repos/github/gasparka/pyhacores/badge.svg?branch=develop\n    :target: https://coveralls.io/github/gasparka/pyhacores?branch=develop\n\n\n\nCores written with `Pyha <https://github.com/gasparka/pyha/>`_\n\n* Free software: Apache Software License 2.0\n\nAvailable cores:\n\n- `CORDIC`_ : CORDIC core.\n- `NCO`_: Numerically controlled oscillator, based on CORDIC.\n- `ToPolar`_: Converts IQ to polar form, returning equal to ``np.abs()`` and ``np.angle()/pi``.\n- `Angle`_: Equal to ``np.angle()/pi``.\n- `Abs`_: Equal to ``np.abs()``.\n- `FIR`_: Transposed form FIR filter, equal to ``scipy.signal.lfilter()``.\n- `MovingAverage`_: Hardware friendly implementation of moving average filter.\n- `DCRemoval`_: Filter out DC component, internally uses chained `MovingAverage`_ blocks.\n- `CRC16`_: Calculate 16 bit CRC, galois based.\n- `HeaderCorrelator`_: Correlate against 16 bit package header.\n- `QuadratureDemodulator`_: Demodulate FM, FSK, GMSK...\n- `BladeRFSource`_: Convert BladeRF style I/Q (4 downto -11) into Pyha Complex (0 downto -17) type\n- `BladeRFSink`_: Convert Pyha Complex style (0 downto -17) into BladeRF style I/Q (4 downto -11)\n- `ComplexConjugate`_: Complex conjugate with output register\n- `ComplexMultiply`_: Complex multiplycate with output register\n\n\n.. _CORDIC: https://github.com/gasparka/pyhacores/blob/develop/pyhacores/cordic/cordic_core.py\n.. _NCO: https://github.com/gasparka/pyhacores/blob/develop/pyhacores/cordic/nco.py\n.. _ToPolar: https://github.com/gasparka/pyhacores/blob/develop/pyhacores/cordic/to_polar.py\n.. _Abs: https://github.com/gasparka/pyhacores/blob/develop/pyhacores/cordic/to_polar.py\n.. _Angle: https://github.com/gasparka/pyhacores/blob/develop/pyhacores/cordic/to_polar.py\n.. _FIR: https://github.com/gasparka/pyhacores/blob/develop/pyhacores/filter/fir.py\n.. _MovingAverage: https://github.com/gasparka/pyhacores/blob/develop/pyhacores/filter/moving_average.py\n.. _DCRemoval: https://github.com/gasparka/pyhacores/blob/develop/pyhacores/filter/dc_removal.py\n.. _CRC16: https://github.com/gasparka/pyhacores/blob/develop/pyhacores/packet/crc16.py\n.. _HeaderCorrelator: https://github.com/gasparka/pyhacores/blob/develop/pyhacores/packet/header_correlator.py\n.. _QuadratureDemodulator: https://github.com/gasparka/pyhacores/blob/develop/pyhacores/radio/quadrature_demodulator.py\n.. _BladeRFSource: https://github.com/gasparka/pyhacores/blob/develop/pyhacores/util/blade_rf.py\n.. _BladeRFSink: https://github.com/gasparka/pyhacores/blob/develop/pyhacores/util/blade_rf.py\n.. _ComplexConjugate: https://github.com/gasparka/pyhacores/blob/develop/pyhacores/util/complex.py\n.. _ComplexMultiply: https://github.com/gasparka/pyhacores/blob/develop/pyhacores/util/complex.py\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gasparka/pyhacores", "keywords": "", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "pyhacores", "package_url": "https://pypi.org/project/pyhacores/", "platform": "", "project_url": "https://pypi.org/project/pyhacores/", "project_urls": {"Homepage": "https://github.com/gasparka/pyhacores"}, "release_url": "https://pypi.org/project/pyhacores/0.1.0/", "requires_dist": ["pyha (==0.0.5.post2)", "numpy (==1.13.3)", "scipy (==1.0.0)", "pytest (==3.3.1)"], "requires_python": "", "summary": "Cores written in Pyha", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/pyhacores\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/pyhacores.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8d96f8606b67ad58f77bef83ea29ce938e68c83b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796861636f7265732e737667\"></a>\n<a href=\"https://travis-ci.org/gasparka/pyhacores\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/gasparka/pyhacores.svg?branch=develop\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1e664a31ba904519a0bf2cebe213ff488a6ee46f/68747470733a2f2f7472617669732d63692e6f72672f6761737061726b612f70796861636f7265732e7376673f6272616e63683d646576656c6f70\"></a>\n<a href=\"https://pyup.io/repos/github/gasparka/pyhacores/\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd6f146694b12b84e2263909d6641d47a9017e57/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f6761737061726b612f70796861636f7265732f736869656c642e737667\"></a>\n<a href=\"https://coveralls.io/github/gasparka/pyhacores?branch=develop\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/gasparka/pyhacores/badge.svg?branch=develop\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/519d0f5379da714d18bb04874fd48191638ea896/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6761737061726b612f70796861636f7265732f62616467652e7376673f6272616e63683d646576656c6f70\"></a>\n<p>Cores written with <a href=\"https://github.com/gasparka/pyha/\" rel=\"nofollow\">Pyha</a></p>\n<ul>\n<li>Free software: Apache Software License 2.0</li>\n</ul>\n<p>Available cores:</p>\n<ul>\n<li><a href=\"https://github.com/gasparka/pyhacores/blob/develop/pyhacores/cordic/cordic_core.py\" rel=\"nofollow\">CORDIC</a> : CORDIC core.</li>\n<li><a href=\"https://github.com/gasparka/pyhacores/blob/develop/pyhacores/cordic/nco.py\" rel=\"nofollow\">NCO</a>: Numerically controlled oscillator, based on CORDIC.</li>\n<li><a href=\"https://github.com/gasparka/pyhacores/blob/develop/pyhacores/cordic/to_polar.py\" rel=\"nofollow\">ToPolar</a>: Converts IQ to polar form, returning equal to <tt>np.abs()</tt> and <tt><span class=\"pre\">np.angle()/pi</span></tt>.</li>\n<li><a href=\"https://github.com/gasparka/pyhacores/blob/develop/pyhacores/cordic/to_polar.py\" rel=\"nofollow\">Angle</a>: Equal to <tt><span class=\"pre\">np.angle()/pi</span></tt>.</li>\n<li><a href=\"https://github.com/gasparka/pyhacores/blob/develop/pyhacores/cordic/to_polar.py\" rel=\"nofollow\">Abs</a>: Equal to <tt>np.abs()</tt>.</li>\n<li><a href=\"https://github.com/gasparka/pyhacores/blob/develop/pyhacores/filter/fir.py\" rel=\"nofollow\">FIR</a>: Transposed form FIR filter, equal to <tt>scipy.signal.lfilter()</tt>.</li>\n<li><a href=\"https://github.com/gasparka/pyhacores/blob/develop/pyhacores/filter/moving_average.py\" rel=\"nofollow\">MovingAverage</a>: Hardware friendly implementation of moving average filter.</li>\n<li><a href=\"https://github.com/gasparka/pyhacores/blob/develop/pyhacores/filter/dc_removal.py\" rel=\"nofollow\">DCRemoval</a>: Filter out DC component, internally uses chained <a href=\"https://github.com/gasparka/pyhacores/blob/develop/pyhacores/filter/moving_average.py\" rel=\"nofollow\">MovingAverage</a> blocks.</li>\n<li><a href=\"https://github.com/gasparka/pyhacores/blob/develop/pyhacores/packet/crc16.py\" rel=\"nofollow\">CRC16</a>: Calculate 16 bit CRC, galois based.</li>\n<li><a href=\"https://github.com/gasparka/pyhacores/blob/develop/pyhacores/packet/header_correlator.py\" rel=\"nofollow\">HeaderCorrelator</a>: Correlate against 16 bit package header.</li>\n<li><a href=\"https://github.com/gasparka/pyhacores/blob/develop/pyhacores/radio/quadrature_demodulator.py\" rel=\"nofollow\">QuadratureDemodulator</a>: Demodulate FM, FSK, GMSK\u2026</li>\n<li><a href=\"https://github.com/gasparka/pyhacores/blob/develop/pyhacores/util/blade_rf.py\" rel=\"nofollow\">BladeRFSource</a>: Convert BladeRF style I/Q (4 downto -11) into Pyha Complex (0 downto -17) type</li>\n<li><a href=\"https://github.com/gasparka/pyhacores/blob/develop/pyhacores/util/blade_rf.py\" rel=\"nofollow\">BladeRFSink</a>: Convert Pyha Complex style (0 downto -17) into BladeRF style I/Q (4 downto -11)</li>\n<li><a href=\"https://github.com/gasparka/pyhacores/blob/develop/pyhacores/util/complex.py\" rel=\"nofollow\">ComplexConjugate</a>: Complex conjugate with output register</li>\n<li><a href=\"https://github.com/gasparka/pyhacores/blob/develop/pyhacores/util/complex.py\" rel=\"nofollow\">ComplexMultiply</a>: Complex multiplycate with output register</li>\n</ul>\n\n          </div>"}, "last_serial": 3424676, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a442ef572ea59103f19585388f801e8b", "sha256": "34340d8d1e1d819c08ea3a8a92ad09224cd5c6dd2f236fbe3aa51ea225f1fa4d"}, "downloads": -1, "filename": "pyhacores-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a442ef572ea59103f19585388f801e8b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 438810, "upload_time": "2017-12-18T10:51:07", "upload_time_iso_8601": "2017-12-18T10:51:07.468026Z", "url": "https://files.pythonhosted.org/packages/11/1b/d09c8ebd71f9850af6e81e8dd2dcf053ab19c5a019a14086bd311b1cbb29/pyhacores-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a9f10af110efc6e6050d83a6cb15a4a", "sha256": "3b54244debbf74feceef0f516e5ca1438a3518212171a93564fcf348cd678870"}, "downloads": -1, "filename": "pyhacores-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6a9f10af110efc6e6050d83a6cb15a4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 427508, "upload_time": "2017-12-18T10:51:11", "upload_time_iso_8601": "2017-12-18T10:51:11.720682Z", "url": "https://files.pythonhosted.org/packages/fe/d8/b79fb5cd9fca380ba690f21d173cb617f6875d5df405aabe0947249bda68/pyhacores-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a442ef572ea59103f19585388f801e8b", "sha256": "34340d8d1e1d819c08ea3a8a92ad09224cd5c6dd2f236fbe3aa51ea225f1fa4d"}, "downloads": -1, "filename": "pyhacores-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a442ef572ea59103f19585388f801e8b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 438810, "upload_time": "2017-12-18T10:51:07", "upload_time_iso_8601": "2017-12-18T10:51:07.468026Z", "url": "https://files.pythonhosted.org/packages/11/1b/d09c8ebd71f9850af6e81e8dd2dcf053ab19c5a019a14086bd311b1cbb29/pyhacores-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a9f10af110efc6e6050d83a6cb15a4a", "sha256": "3b54244debbf74feceef0f516e5ca1438a3518212171a93564fcf348cd678870"}, "downloads": -1, "filename": "pyhacores-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6a9f10af110efc6e6050d83a6cb15a4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 427508, "upload_time": "2017-12-18T10:51:11", "upload_time_iso_8601": "2017-12-18T10:51:11.720682Z", "url": "https://files.pythonhosted.org/packages/fe/d8/b79fb5cd9fca380ba690f21d173cb617f6875d5df405aabe0947249bda68/pyhacores-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:34 2020"}