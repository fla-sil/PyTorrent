{"info": {"author": "FiveAI Ltd.", "author_email": "will.gardner@five.ai", "bugtrack_url": null, "classifiers": [], "description": "# aiodxf\n\nasyncio port of [dxf](https://github.com/davedoesdev/dxf)\n\n## Usage\n\nThe `aiodxf` command-line tool uses the following environment variables:\n\n- `DXF_HOST` - Host where Docker registry is running.\n- `DXF_INSECURE` - Set this to `1` if you want to connect to the registry using\n   `http` rather than `https` (which is the default).\n- `DXF_USERNAME` - Name of user to authenticate as.\n- `DXF_PASSWORD` - User's password.\n- `DXF_AUTHORIZATION` - HTTP `Authorization` header value.\n- `DXF_AUTH_HOST` - If set, always perform token authentication to this host, overriding the value returned by the registry.\n- `DXF_PROGRESS` - If this is set to `1`, a progress bar is displayed (on standard error) during `push-blob` and `pull-blob`. If this is set to `0`, a progress bar is not displayed. If this is set to any other value, a progress bar is only displayed if standard error is a terminal.\n- `DXF_BLOB_INFO` - Set this to `1` if you want `pull-blob` to prepend each blob with its digest and size (printed in plain text, separated by a space and followed by a newline).\n- `DXF_CHUNK_SIZE` - Number of bytes `pull-blob` should download at a time. Defaults to 8192.\n- `DXF_SKIPTLSVERIFY` - Set this to `1` to skip TLS certificate verification.\n- `DXF_TLSVERIFY` - Optional path to custom CA bundle to use for TLS verification.\n\nYou can use the following options with `dxf`. Supply the name of the repository\nyou wish to work with in each case as the second argument.\n\n-   `aiodxf push-blob <repo> <file> [@alias]`\n\n    > Upload a file to the registry and optionally give it a name (alias).\n    > The blob's hash is printed to standard output.\n\n    > The hash or the alias can be used to fetch the blob later using\n    > `pull-blob`.\n\n-   `aiodxf pull-blob <repo> <hash>|<@alias>...`\n\n    > Download blobs from the registry to standard output. For each blob you\n    > can specify its hash, prefixed by `sha256:` (remember the registry is\n    > content-addressable) or an alias you've given it (using `push-blob` or\n    > `set-alias`).\n\n-   `aiodxf blob-size <repo> <hash>|<@alias>...`\n\n    > Print the size of blobs in the registry. If you specify an alias, the\n    > sum of all the blobs it points to will be printed.\n\n-   `aiodxf del-blob <repo> <hash>|<@alias>...`\n\n    > Delete blobs from the registry. If you specify an alias the blobs it\n    > points to will be deleted, not the alias itself. Use `del-alias` for that.\n\n-   `aiodxf set-alias <repo> <alias> <hash>|<file>...`\n\n    > Give a name (alias) to a set of blobs. For each blob you can either\n    > specify its hash (as printed by `get-blob`) or, if you have the blob's\n    > contents on disk, its filename (including a path separator to\n    > distinguish it from a hash).\n\n-   `aiodxf get-alias <repo> <alias>...`\n\n    > For each alias you specify, print the hashes of all the blobs it points\n    > to.\n\n-   `aiodxf del-alias <repo> <alias>...`\n\n    > Delete each specified alias. The blobs they point to won't be deleted\n    > (use `del-blob` for that), but their hashes will be printed.\n\n-   `aiodxf list-aliases <repo>`\n\n    > Print all the aliases defined in the repository.\n\n-   `aiodxf list-repos`\n\n    > Print the names of all the repositories in the registry. Not all versions\n    > of the registry support this.\n\n-   `aiodxf get-digest <repo> <alias>...`\n\n    > For each alias you specify, print the hash of its configuration blob.\n    > For an alias created using `dxf`, this is the hash of the first blob it\n    > points to. For a Docker image tag, this is the same as\n    > `docker inspect alias --format='{{.Id}}'`.\n\n## Certificates\n\nIf your registry uses SSL with a self-issued certificate, you'll need to supply\n`dxf` with a set of trusted certificate authorities.\n\nYou can set the `DXF_TLSVERIFY` environment variable to the path of a PEM file\ncontaining the trusted certificate authority certificates for the command-line\ntool or pass the `tlsverify` option to the module.\n\n## Authentication tokens\n\n`dxf` automatically obtains Docker registry authentication tokens using your\n`DXF_USERNAME` and `DXF_PASSWORD`, or `DXF_AUTHORIZATION`, environment variables\nas necessary.\n\nHowever, if you wish to override this then you can use the following command:\n\n-   `aiodxf auth <repo> <action>...`\n\n    > Authenticate to the registry using `DXF_USERNAME` and `DXF_PASSWORD`,\n    > or `DXF_AUTHORIZATION`, and print the resulting token.\n\n    > `action` can be `pull`, `push` or `*`.\n\nIf you assign the token to the `DXF_TOKEN` environment variable, for example:\n\n`DXF_TOKEN=$(aiodxf auth fred/datalogger pull)`\n\nthen subsequent `dxf` commands will use the token without needing\n`DXF_USERNAME` and `DXF_PASSWORD`, or `DXF_AUTHORIZATION`, to be set.\n\nNote however that the token expires after a few minutes, after which `dxf` will\nexit with `EACCES`.\n\n\n## Installation\n\n```shell\npip install aiodxf\n```\n\n## Licence\n\n[MIT](https://raw.github.com/fiveai/aiodxf/master/LICENCE)\n\n## Tests\n\n```shell\nmake test\n```\n\n## Lint\n\n```shell\nmake lint\n```\n\n## Code Coverage\n\n```shell\nmake coverage\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fiveai/aiodxf", "keywords": "docker registry", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aiodxf", "package_url": "https://pypi.org/project/aiodxf/", "platform": "", "project_url": "https://pypi.org/project/aiodxf/", "project_urls": {"Homepage": "https://github.com/fiveai/aiodxf"}, "release_url": "https://pypi.org/project/aiodxf/7.5.5/", "requires_dist": ["www-authenticate (>=0.9.2)", "aiohttp (>=3.6.2)", "jwcrypto (>=0.4.2)", "tqdm (>=4.19.4)"], "requires_python": "", "summary": "Package for accessing a Docker v2 registry", "version": "7.5.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aiodxf</h1>\n<p>asyncio port of <a href=\"https://github.com/davedoesdev/dxf\" rel=\"nofollow\">dxf</a></p>\n<h2>Usage</h2>\n<p>The <code>aiodxf</code> command-line tool uses the following environment variables:</p>\n<ul>\n<li><code>DXF_HOST</code> - Host where Docker registry is running.</li>\n<li><code>DXF_INSECURE</code> - Set this to <code>1</code> if you want to connect to the registry using\n<code>http</code> rather than <code>https</code> (which is the default).</li>\n<li><code>DXF_USERNAME</code> - Name of user to authenticate as.</li>\n<li><code>DXF_PASSWORD</code> - User's password.</li>\n<li><code>DXF_AUTHORIZATION</code> - HTTP <code>Authorization</code> header value.</li>\n<li><code>DXF_AUTH_HOST</code> - If set, always perform token authentication to this host, overriding the value returned by the registry.</li>\n<li><code>DXF_PROGRESS</code> - If this is set to <code>1</code>, a progress bar is displayed (on standard error) during <code>push-blob</code> and <code>pull-blob</code>. If this is set to <code>0</code>, a progress bar is not displayed. If this is set to any other value, a progress bar is only displayed if standard error is a terminal.</li>\n<li><code>DXF_BLOB_INFO</code> - Set this to <code>1</code> if you want <code>pull-blob</code> to prepend each blob with its digest and size (printed in plain text, separated by a space and followed by a newline).</li>\n<li><code>DXF_CHUNK_SIZE</code> - Number of bytes <code>pull-blob</code> should download at a time. Defaults to 8192.</li>\n<li><code>DXF_SKIPTLSVERIFY</code> - Set this to <code>1</code> to skip TLS certificate verification.</li>\n<li><code>DXF_TLSVERIFY</code> - Optional path to custom CA bundle to use for TLS verification.</li>\n</ul>\n<p>You can use the following options with <code>dxf</code>. Supply the name of the repository\nyou wish to work with in each case as the second argument.</p>\n<ul>\n<li>\n<p><code>aiodxf push-blob &lt;repo&gt; &lt;file&gt; [@alias]</code></p>\n<blockquote>\n<p>Upload a file to the registry and optionally give it a name (alias).\nThe blob's hash is printed to standard output.</p>\n</blockquote>\n<blockquote>\n<p>The hash or the alias can be used to fetch the blob later using\n<code>pull-blob</code>.</p>\n</blockquote>\n</li>\n<li>\n<p><code>aiodxf pull-blob &lt;repo&gt; &lt;hash&gt;|&lt;@alias&gt;...</code></p>\n<blockquote>\n<p>Download blobs from the registry to standard output. For each blob you\ncan specify its hash, prefixed by <code>sha256:</code> (remember the registry is\ncontent-addressable) or an alias you've given it (using <code>push-blob</code> or\n<code>set-alias</code>).</p>\n</blockquote>\n</li>\n<li>\n<p><code>aiodxf blob-size &lt;repo&gt; &lt;hash&gt;|&lt;@alias&gt;...</code></p>\n<blockquote>\n<p>Print the size of blobs in the registry. If you specify an alias, the\nsum of all the blobs it points to will be printed.</p>\n</blockquote>\n</li>\n<li>\n<p><code>aiodxf del-blob &lt;repo&gt; &lt;hash&gt;|&lt;@alias&gt;...</code></p>\n<blockquote>\n<p>Delete blobs from the registry. If you specify an alias the blobs it\npoints to will be deleted, not the alias itself. Use <code>del-alias</code> for that.</p>\n</blockquote>\n</li>\n<li>\n<p><code>aiodxf set-alias &lt;repo&gt; &lt;alias&gt; &lt;hash&gt;|&lt;file&gt;...</code></p>\n<blockquote>\n<p>Give a name (alias) to a set of blobs. For each blob you can either\nspecify its hash (as printed by <code>get-blob</code>) or, if you have the blob's\ncontents on disk, its filename (including a path separator to\ndistinguish it from a hash).</p>\n</blockquote>\n</li>\n<li>\n<p><code>aiodxf get-alias &lt;repo&gt; &lt;alias&gt;...</code></p>\n<blockquote>\n<p>For each alias you specify, print the hashes of all the blobs it points\nto.</p>\n</blockquote>\n</li>\n<li>\n<p><code>aiodxf del-alias &lt;repo&gt; &lt;alias&gt;...</code></p>\n<blockquote>\n<p>Delete each specified alias. The blobs they point to won't be deleted\n(use <code>del-blob</code> for that), but their hashes will be printed.</p>\n</blockquote>\n</li>\n<li>\n<p><code>aiodxf list-aliases &lt;repo&gt;</code></p>\n<blockquote>\n<p>Print all the aliases defined in the repository.</p>\n</blockquote>\n</li>\n<li>\n<p><code>aiodxf list-repos</code></p>\n<blockquote>\n<p>Print the names of all the repositories in the registry. Not all versions\nof the registry support this.</p>\n</blockquote>\n</li>\n<li>\n<p><code>aiodxf get-digest &lt;repo&gt; &lt;alias&gt;...</code></p>\n<blockquote>\n<p>For each alias you specify, print the hash of its configuration blob.\nFor an alias created using <code>dxf</code>, this is the hash of the first blob it\npoints to. For a Docker image tag, this is the same as\n<code>docker inspect alias --format='{{.Id}}'</code>.</p>\n</blockquote>\n</li>\n</ul>\n<h2>Certificates</h2>\n<p>If your registry uses SSL with a self-issued certificate, you'll need to supply\n<code>dxf</code> with a set of trusted certificate authorities.</p>\n<p>You can set the <code>DXF_TLSVERIFY</code> environment variable to the path of a PEM file\ncontaining the trusted certificate authority certificates for the command-line\ntool or pass the <code>tlsverify</code> option to the module.</p>\n<h2>Authentication tokens</h2>\n<p><code>dxf</code> automatically obtains Docker registry authentication tokens using your\n<code>DXF_USERNAME</code> and <code>DXF_PASSWORD</code>, or <code>DXF_AUTHORIZATION</code>, environment variables\nas necessary.</p>\n<p>However, if you wish to override this then you can use the following command:</p>\n<ul>\n<li>\n<p><code>aiodxf auth &lt;repo&gt; &lt;action&gt;...</code></p>\n<blockquote>\n<p>Authenticate to the registry using <code>DXF_USERNAME</code> and <code>DXF_PASSWORD</code>,\nor <code>DXF_AUTHORIZATION</code>, and print the resulting token.</p>\n</blockquote>\n<blockquote>\n<p><code>action</code> can be <code>pull</code>, <code>push</code> or <code>*</code>.</p>\n</blockquote>\n</li>\n</ul>\n<p>If you assign the token to the <code>DXF_TOKEN</code> environment variable, for example:</p>\n<p><code>DXF_TOKEN=$(aiodxf auth fred/datalogger pull)</code></p>\n<p>then subsequent <code>dxf</code> commands will use the token without needing\n<code>DXF_USERNAME</code> and <code>DXF_PASSWORD</code>, or <code>DXF_AUTHORIZATION</code>, to be set.</p>\n<p>Note however that the token expires after a few minutes, after which <code>dxf</code> will\nexit with <code>EACCES</code>.</p>\n<h2>Installation</h2>\n<pre>pip install aiodxf\n</pre>\n<h2>Licence</h2>\n<p><a href=\"https://raw.github.com/fiveai/aiodxf/master/LICENCE\" rel=\"nofollow\">MIT</a></p>\n<h2>Tests</h2>\n<pre>make <span class=\"nb\">test</span>\n</pre>\n<h2>Lint</h2>\n<pre>make lint\n</pre>\n<h2>Code Coverage</h2>\n<pre>make coverage\n</pre>\n\n          </div>"}, "last_serial": 6368518, "releases": {"7.5.3.post2": [{"comment_text": "", "digests": {"md5": "ea674669fba40d54ad40c4245e49d9d5", "sha256": "680999eaba8f507ed8c75a830a7ffb5c69c7f18e18663668c3d9a25f5e3309fa"}, "downloads": -1, "filename": "aiodxf-7.5.3.post2-py3-none-any.whl", "has_sig": false, "md5_digest": "ea674669fba40d54ad40c4245e49d9d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16251, "upload_time": "2019-12-23T12:53:46", "upload_time_iso_8601": "2019-12-23T12:53:46.944058Z", "url": "https://files.pythonhosted.org/packages/6e/69/bcf97ffda8250cbdb14dd302a7bc55a52d7008b35303609c4d6fcaab017f/aiodxf-7.5.3.post2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f51c84c8b28f0e935dcebf36ff6001d5", "sha256": "0ca9f26d638c245232ab73e360e082c0ca640a77b4e6fe8cb8ac069a9fce7add"}, "downloads": -1, "filename": "aiodxf-7.5.3.post2.tar.gz", "has_sig": false, "md5_digest": "f51c84c8b28f0e935dcebf36ff6001d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20297, "upload_time": "2019-12-23T12:53:48", "upload_time_iso_8601": "2019-12-23T12:53:48.429027Z", "url": "https://files.pythonhosted.org/packages/dd/7e/d4b793e473eed5aa11d923a9e400299899a96519dee47a27f54129d856f1/aiodxf-7.5.3.post2.tar.gz", "yanked": false}], "7.5.3.post3": [{"comment_text": "", "digests": {"md5": "995281cc157940be9d11255eef494a51", "sha256": "0356ad4a0870673537df8bf804e69047e0550984d2ed31d7ca1af5383550962e"}, "downloads": -1, "filename": "aiodxf-7.5.3.post3-py3-none-any.whl", "has_sig": false, "md5_digest": "995281cc157940be9d11255eef494a51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16277, "upload_time": "2019-12-23T12:56:29", "upload_time_iso_8601": "2019-12-23T12:56:29.942997Z", "url": "https://files.pythonhosted.org/packages/06/ef/11eb794123143a1cb41d94fff59248fb31fd149ca75ddc363e92ebd13b0f/aiodxf-7.5.3.post3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23bb414158449df9d7387c762554ba40", "sha256": "3ea59320d4f20101e15db8344fdc6afb064409e900e1e1fd54adb5f7b1ff522d"}, "downloads": -1, "filename": "aiodxf-7.5.3.post3.tar.gz", "has_sig": false, "md5_digest": "23bb414158449df9d7387c762554ba40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20343, "upload_time": "2019-12-23T12:56:31", "upload_time_iso_8601": "2019-12-23T12:56:31.582120Z", "url": "https://files.pythonhosted.org/packages/f6/0c/57be4f3a2d8fc690d812a8fb87b05694d91aeba2eb225ace832bd9e21e76/aiodxf-7.5.3.post3.tar.gz", "yanked": false}], "7.5.4": [{"comment_text": "", "digests": {"md5": "a35215a603d510d37ba5dd071e02e552", "sha256": "e3e919f34d7a6a769cfb0c909fd8cf53dcfca0e590400495a75dc0bdfec1b469"}, "downloads": -1, "filename": "aiodxf-7.5.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a35215a603d510d37ba5dd071e02e552", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17103, "upload_time": "2019-12-27T10:35:17", "upload_time_iso_8601": "2019-12-27T10:35:17.287700Z", "url": "https://files.pythonhosted.org/packages/57/4e/1a6ac408508aad0cfe5ef24d7a8cb1b723f630900eb1add5cda0b5ddea54/aiodxf-7.5.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73a9b4255d0b0be70f02a86ea01c95a6", "sha256": "0bc15dd87d85a5ce1f77cae5a40b8d0e60d8c0dbf81177572d477c47d71db637"}, "downloads": -1, "filename": "aiodxf-7.5.4.tar.gz", "has_sig": false, "md5_digest": "73a9b4255d0b0be70f02a86ea01c95a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21279, "upload_time": "2019-12-27T10:35:18", "upload_time_iso_8601": "2019-12-27T10:35:18.943069Z", "url": "https://files.pythonhosted.org/packages/1b/0b/0d570b2efe555cfba9d5e7b0752091971d51dc55265b44ad14f029ad9830/aiodxf-7.5.4.tar.gz", "yanked": false}], "7.5.5": [{"comment_text": "", "digests": {"md5": "790dfdafd6e5b17d662b922f47345507", "sha256": "c606feadc119512bcc6768ea96296064a066aeb9000c4c22b59bd5bc98159c45"}, "downloads": -1, "filename": "aiodxf-7.5.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "790dfdafd6e5b17d662b922f47345507", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17477, "upload_time": "2019-12-28T14:25:18", "upload_time_iso_8601": "2019-12-28T14:25:18.633666Z", "url": "https://files.pythonhosted.org/packages/75/da/083b06fa1b004c633f525d676a1aa30773d33f4ea6d94aa6562987f142b6/aiodxf-7.5.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "63724649c734db5dcf545cb12793e17d", "sha256": "175842236945e35590d7101b91203bf3be7afbdd31f1c99390b48196deec0378"}, "downloads": -1, "filename": "aiodxf-7.5.5.tar.gz", "has_sig": false, "md5_digest": "63724649c734db5dcf545cb12793e17d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21678, "upload_time": "2019-12-28T14:25:20", "upload_time_iso_8601": "2019-12-28T14:25:20.348499Z", "url": "https://files.pythonhosted.org/packages/ab/f8/073d0f3168fc65847daade7dda01e777e2bb3c1e808df2d9d3251ac9e0ee/aiodxf-7.5.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "790dfdafd6e5b17d662b922f47345507", "sha256": "c606feadc119512bcc6768ea96296064a066aeb9000c4c22b59bd5bc98159c45"}, "downloads": -1, "filename": "aiodxf-7.5.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "790dfdafd6e5b17d662b922f47345507", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17477, "upload_time": "2019-12-28T14:25:18", "upload_time_iso_8601": "2019-12-28T14:25:18.633666Z", "url": "https://files.pythonhosted.org/packages/75/da/083b06fa1b004c633f525d676a1aa30773d33f4ea6d94aa6562987f142b6/aiodxf-7.5.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "63724649c734db5dcf545cb12793e17d", "sha256": "175842236945e35590d7101b91203bf3be7afbdd31f1c99390b48196deec0378"}, "downloads": -1, "filename": "aiodxf-7.5.5.tar.gz", "has_sig": false, "md5_digest": "63724649c734db5dcf545cb12793e17d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21678, "upload_time": "2019-12-28T14:25:20", "upload_time_iso_8601": "2019-12-28T14:25:20.348499Z", "url": "https://files.pythonhosted.org/packages/ab/f8/073d0f3168fc65847daade7dda01e777e2bb3c1e808df2d9d3251ac9e0ee/aiodxf-7.5.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:38 2020"}