{"info": {"author": "Rex Zhang", "author_email": "rex.zhang@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "================\nTreeStructConfig\n================\n\n.. image:: https://img.shields.io/pypi/v/TreeStructConfig.svg\n    :target: https://pypi.org/project/TreeStructConfig/\n.. image:: https://img.shields.io/pypi/pyversions/TreeStructConfig.svg\n    :target: https://pypi.org/project/TreeStructConfig/\n.. image:: https://img.shields.io/pypi/dm/TreeStructConfig.svg\n    :target: https://pypi.org/project/TreeStructConfig/\n\n\nA Tree Struct Configuration module for python, support serialization to/from JSON and TOML.\n\n\nInstall\n=======\n\nSerialization with JSON\n\n.. code-block:: console\n\n    pip install -U TreeStructConfig\n\nSerialization with TOML\n\n.. code-block:: console\n\n    pip install -U TreeStructConfig[toml]\n\n\nUsage\n=====\n\nDefine class and create object\n\n.. code-block:: python\n\n    from tree_struct_config import (\n        IntLeaf,\n        StringLeaf,\n        BooleanLeaf,\n        ListLeaf,\n\n        BranchNode,\n\n        RootNode,\n        SerializationFormat,\n        SerializationDecodeError,\n    )\n\n\n    class Config(RootNode):\n        version = StringLeaf('0.1.0')\n\n        class Auth(BranchNode):\n            username = StringLeaf('rex')\n            password = StringLeaf('password')\n\n        class Wireless(BranchNode):\n            class AP(BranchNode):\n                enabled = BooleanLeaf(True)\n                channel = IntLeaf(1)\n                password = StringLeaf('password')\n                mac_acl_list = ListLeaf([\n                    '00:00:00:00:00:00',\n                ])\n\n\n    config = Config()\n\n\nAccess config value\n\n    >>> config.Auth.username\n    rex\n    >>> username = config.Auth.username\n    >>> username\n    rex\n\n\nUpdate config value\n\n    >>> config.Auth.username = 'new_user'\n    >>> config.Auth.username\n    new_user\n    >>> config.Wireless.AP.password = 'new_password'\n    >>> config.Wireless.AP.password\n    new_password\n\n\nDump config to JSON string\n\n    >>> config.dumps()\n    {\n      \"Auth\": {\n        \"password\": \"password\",\n        \"username\": \"rex\"\n      },\n      \"Wireless\": {\n        \"AP\": {\n          \"channel\": 1,\n          \"enabled\": true,\n          \"mac_acl_list\": [\n            \"00:00:00:00:00:00\"\n          ],\n          \"password\": \"new_password\"\n        }\n      },\n      \"version\": \"0.1.0\"\n    }\n\n\nLoad config from JSON string\n\n    >>> json_str = \"\"\"\n    ...     {\n    ...       \"Auth\": {\n    ...         \"username\": \"new_user\"\n    ...       },\n    ...       \"Wireless\": {\n    ...         \"AP\": {\n    ...           \"channel\": 1,\n    ...           \"enabled\": true,\n    ...           \"password\": \"new_password\",\n    ...         }\n    ...       }\n    ...     }\n    ... \"\"\"\n    ...\n    >>> config.Auth.username\n    rex\n    >>> config.loads(json_str)\n    >>> config.Auth.username\n    new_user\n\n\nDump config to JSON file\n\n    >>> with open('config.json', 'w') as f:\n    ...     config.dump(f)\n\n\nLoad config from JSON file\n\n    >>> with open('config.json') as f:\n    ...     config.load(f)\n\n\nDump to TOML and load from TOML string and file\n\n    >>> config.dumps(serialization_format=SerializationFormat.TOML)\n    >>> config.loads(s, serialization_format=SerializationFormat.TOML)\n\n    >>> with open('config.toml', 'w') as f:\n    ...     config.dump(f, serialization_format=SerializationFormat.TOML)\n    >>> with open('config.toml') as f:\n    ...     config.load(f, serialization_format=SerializationFormat.TOML)\n\nconfig.toml\n\n.. code-block:: text\n\n    version = \"0.1.0\"\n\n    [Auth]\n    password = \"password\"\n    username = \"rex\"\n\n    [Wireless.AP]\n    channel = 1\n    enabled = true\n    mac_acl_list = [ \"00:00:00:00:00:00\",]\n    password = \"password\"\n\n\nOverride ``dump()`` and ``load()`` function\n\n.. code-block:: python\n\n    class AdvancedConfig(Config):\n        \"\"\"override dump/load function\"\"\"\n        _filename = None\n\n        def dump(self, fp=None, serialization_format=None):\n            with open(self._filename, 'w') as fp:\n                super().dump(fp, serialization_format)\n\n            return\n\n        def load(self, fp=None, serialization_format=None):\n            with open(self._filename) as fp:\n                try:\n                    super().load(fp, serialization_format)\n\n                except SerializationDecodeError:\n                    pass\n\n\n    advanced_config = AdvancedConfig()\n    advanced_config._filename = 'config.json'\n    advanced_config.dump()\n    advanced_config.load()\n\n\nDemo\n====\n\nDemo source code: https://github.com/rexzhang/tree-struct-config/blob/master/demo.py\n\nOutput\n\n.. code-block:: console\n\n    ----------\n    password\n    new_password\n    ----------\n    {\n      \"Auth\": {\n        \"password\": \"password\",\n        \"username\": \"rex\"\n      },\n      \"Wireless\": {\n        \"AP\": {\n          \"channel\": 1,\n          \"enabled\": true,\n          \"mac_acl_list\": [\n            \"00:00:00:00:00:00\"\n          ],\n          \"password\": \"new_password\"\n        }\n      },\n      \"version\": \"0.1.0\"\n    }\n    ----------\n    xxxxxxxx\n\n\nChangelog\n=========\n\n0.2.2\n-----\n* Fix not exist branch crash\n\n0.2.1\n-----\n* Fix bug\n\n0.2.0\n-----\n* Support TOML format file\n\n0.1.0\n-----\n* First release\n\nAlternative\n===========\n\n* https://gitlab.com/alelec/structured_config\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rexzhang/tree-struct-config", "keywords": "configuration json", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "TreeStructConfig", "package_url": "https://pypi.org/project/TreeStructConfig/", "platform": "", "project_url": "https://pypi.org/project/TreeStructConfig/", "project_urls": {"Homepage": "https://github.com/rexzhang/tree-struct-config"}, "release_url": "https://pypi.org/project/TreeStructConfig/0.2.2/", "requires_dist": ["toml ; extra == 'toml'"], "requires_python": ">=3.4", "summary": "A Tree Struct Configuration module for python, support serialization to/from JSON and TOML", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/TreeStructConfig/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/TreeStructConfig.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0418b291e2492d57f09fbf072914c9e295ef46c7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f54726565537472756374436f6e6669672e737667\"></a>\n<a href=\"https://pypi.org/project/TreeStructConfig/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/TreeStructConfig.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70579835f707e928f16846a4a15d6d1f0da5093b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f54726565537472756374436f6e6669672e737667\"></a>\n<a href=\"https://pypi.org/project/TreeStructConfig/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/dm/TreeStructConfig.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/80770f4fa81662cc5e6d874fa5f51752b17ce68d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f54726565537472756374436f6e6669672e737667\"></a>\n<p>A Tree Struct Configuration module for python, support serialization to/from JSON and TOML.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Serialization with JSON</p>\n<pre><span class=\"go\">pip install -U TreeStructConfig</span>\n</pre>\n<p>Serialization with TOML</p>\n<pre><span class=\"go\">pip install -U TreeStructConfig[toml]</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Define class and create object</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tree_struct_config</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">IntLeaf</span><span class=\"p\">,</span>\n    <span class=\"n\">StringLeaf</span><span class=\"p\">,</span>\n    <span class=\"n\">BooleanLeaf</span><span class=\"p\">,</span>\n    <span class=\"n\">ListLeaf</span><span class=\"p\">,</span>\n\n    <span class=\"n\">BranchNode</span><span class=\"p\">,</span>\n\n    <span class=\"n\">RootNode</span><span class=\"p\">,</span>\n    <span class=\"n\">SerializationFormat</span><span class=\"p\">,</span>\n    <span class=\"n\">SerializationDecodeError</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Config</span><span class=\"p\">(</span><span class=\"n\">RootNode</span><span class=\"p\">):</span>\n    <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"n\">StringLeaf</span><span class=\"p\">(</span><span class=\"s1\">'0.1.0'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Auth</span><span class=\"p\">(</span><span class=\"n\">BranchNode</span><span class=\"p\">):</span>\n        <span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">StringLeaf</span><span class=\"p\">(</span><span class=\"s1\">'rex'</span><span class=\"p\">)</span>\n        <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">StringLeaf</span><span class=\"p\">(</span><span class=\"s1\">'password'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Wireless</span><span class=\"p\">(</span><span class=\"n\">BranchNode</span><span class=\"p\">):</span>\n        <span class=\"k\">class</span> <span class=\"nc\">AP</span><span class=\"p\">(</span><span class=\"n\">BranchNode</span><span class=\"p\">):</span>\n            <span class=\"n\">enabled</span> <span class=\"o\">=</span> <span class=\"n\">BooleanLeaf</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"n\">IntLeaf</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">StringLeaf</span><span class=\"p\">(</span><span class=\"s1\">'password'</span><span class=\"p\">)</span>\n            <span class=\"n\">mac_acl_list</span> <span class=\"o\">=</span> <span class=\"n\">ListLeaf</span><span class=\"p\">([</span>\n                <span class=\"s1\">'00:00:00:00:00:00'</span><span class=\"p\">,</span>\n            <span class=\"p\">])</span>\n\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">Config</span><span class=\"p\">()</span>\n</pre>\n<p>Access config value</p>\n<blockquote>\n<pre>&gt;&gt;&gt; config.Auth.username\nrex\n&gt;&gt;&gt; username = config.Auth.username\n&gt;&gt;&gt; username\nrex\n</pre>\n</blockquote>\n<p>Update config value</p>\n<blockquote>\n<pre>&gt;&gt;&gt; config.Auth.username = 'new_user'\n&gt;&gt;&gt; config.Auth.username\nnew_user\n&gt;&gt;&gt; config.Wireless.AP.password = 'new_password'\n&gt;&gt;&gt; config.Wireless.AP.password\nnew_password\n</pre>\n</blockquote>\n<p>Dump config to JSON string</p>\n<blockquote>\n<pre>&gt;&gt;&gt; config.dumps()\n{\n  \"Auth\": {\n    \"password\": \"password\",\n    \"username\": \"rex\"\n  },\n  \"Wireless\": {\n    \"AP\": {\n      \"channel\": 1,\n      \"enabled\": true,\n      \"mac_acl_list\": [\n        \"00:00:00:00:00:00\"\n      ],\n      \"password\": \"new_password\"\n    }\n  },\n  \"version\": \"0.1.0\"\n}\n</pre>\n</blockquote>\n<p>Load config from JSON string</p>\n<blockquote>\n<pre>&gt;&gt;&gt; json_str = \"\"\"\n...     {\n...       \"Auth\": {\n...         \"username\": \"new_user\"\n...       },\n...       \"Wireless\": {\n...         \"AP\": {\n...           \"channel\": 1,\n...           \"enabled\": true,\n...           \"password\": \"new_password\",\n...         }\n...       }\n...     }\n... \"\"\"\n...\n&gt;&gt;&gt; config.Auth.username\nrex\n&gt;&gt;&gt; config.loads(json_str)\n&gt;&gt;&gt; config.Auth.username\nnew_user\n</pre>\n</blockquote>\n<p>Dump config to JSON file</p>\n<blockquote>\n<pre>&gt;&gt;&gt; with open('config.json', 'w') as f:\n...     config.dump(f)\n</pre>\n</blockquote>\n<p>Load config from JSON file</p>\n<blockquote>\n<pre>&gt;&gt;&gt; with open('config.json') as f:\n...     config.load(f)\n</pre>\n</blockquote>\n<p>Dump to TOML and load from TOML string and file</p>\n<blockquote>\n<pre>&gt;&gt;&gt; config.dumps(serialization_format=SerializationFormat.TOML)\n&gt;&gt;&gt; config.loads(s, serialization_format=SerializationFormat.TOML)\n</pre>\n<pre>&gt;&gt;&gt; with open('config.toml', 'w') as f:\n...     config.dump(f, serialization_format=SerializationFormat.TOML)\n&gt;&gt;&gt; with open('config.toml') as f:\n...     config.load(f, serialization_format=SerializationFormat.TOML)\n</pre>\n</blockquote>\n<p>config.toml</p>\n<pre>version = \"0.1.0\"\n\n[Auth]\npassword = \"password\"\nusername = \"rex\"\n\n[Wireless.AP]\nchannel = 1\nenabled = true\nmac_acl_list = [ \"00:00:00:00:00:00\",]\npassword = \"password\"\n</pre>\n<p>Override <tt>dump()</tt> and <tt>load()</tt> function</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">AdvancedConfig</span><span class=\"p\">(</span><span class=\"n\">Config</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"override dump/load function\"\"\"</span>\n    <span class=\"n\">_filename</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">dump</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">serialization_format</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_filename</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fp</span><span class=\"p\">:</span>\n            <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"p\">,</span> <span class=\"n\">serialization_format</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">load</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">serialization_format</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_filename</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fp</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"p\">,</span> <span class=\"n\">serialization_format</span><span class=\"p\">)</span>\n\n            <span class=\"k\">except</span> <span class=\"n\">SerializationDecodeError</span><span class=\"p\">:</span>\n                <span class=\"k\">pass</span>\n\n\n<span class=\"n\">advanced_config</span> <span class=\"o\">=</span> <span class=\"n\">AdvancedConfig</span><span class=\"p\">()</span>\n<span class=\"n\">advanced_config</span><span class=\"o\">.</span><span class=\"n\">_filename</span> <span class=\"o\">=</span> <span class=\"s1\">'config.json'</span>\n<span class=\"n\">advanced_config</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">()</span>\n<span class=\"n\">advanced_config</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"demo\">\n<h2>Demo</h2>\n<p>Demo source code: <a href=\"https://github.com/rexzhang/tree-struct-config/blob/master/demo.py\" rel=\"nofollow\">https://github.com/rexzhang/tree-struct-config/blob/master/demo.py</a></p>\n<p>Output</p>\n<pre><span class=\"go\">----------\npassword\nnew_password\n----------\n{\n  \"Auth\": {\n    \"password\": \"password\",\n    \"username\": \"rex\"\n  },\n  \"Wireless\": {\n    \"AP\": {\n      \"channel\": 1,\n      \"enabled\": true,\n      \"mac_acl_list\": [\n        \"00:00:00:00:00:00\"\n      ],\n      \"password\": \"new_password\"\n    }\n  },\n  \"version\": \"0.1.0\"\n}\n----------\nxxxxxxxx</span>\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.2.2</h3>\n<ul>\n<li>Fix not exist branch crash</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.2.1</h3>\n<ul>\n<li>Fix bug</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.2.0</h3>\n<ul>\n<li>Support TOML format file</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1.0</h3>\n<ul>\n<li>First release</li>\n</ul>\n</div>\n</div>\n<div id=\"alternative\">\n<h2>Alternative</h2>\n<ul>\n<li><a href=\"https://gitlab.com/alelec/structured_config\" rel=\"nofollow\">https://gitlab.com/alelec/structured_config</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6092054, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "92e569e900884f794705dd02b74c1919", "sha256": "e3e8eabc6925a98cd010a3cee7c92f2ae81738f64b4ca8dd79fbf8bcc1599762"}, "downloads": -1, "filename": "TreeStructConfig-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "92e569e900884f794705dd02b74c1919", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.4", "size": 3554, "upload_time": "2019-08-03T12:14:37", "upload_time_iso_8601": "2019-08-03T12:14:37.630636Z", "url": "https://files.pythonhosted.org/packages/00/95/ed949fc8520f2c5c08f032f201616d28f8bfef24e9b5e106e62272536036/TreeStructConfig-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da19dc3864f80189f395f8c3af246f44", "sha256": "a6fc7421ece9ace8555eaec156993c54f51d733d422039f397a14b1092d5da0a"}, "downloads": -1, "filename": "TreeStructConfig-0.1.0.tar.gz", "has_sig": false, "md5_digest": "da19dc3864f80189f395f8c3af246f44", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 3967, "upload_time": "2019-08-03T12:14:40", "upload_time_iso_8601": "2019-08-03T12:14:40.085169Z", "url": "https://files.pythonhosted.org/packages/a9/03/cb0d2575e101feb69d382109c75bcbda70c1ceaaec6d3c7a5a1c88e7e166/TreeStructConfig-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e52aced39992f2dfc49bd891af72fbf4", "sha256": "0ccb5ae80a4630c4b6504dcb885bb76fa43cf40a96ad25a71ca6bd65adb17f43"}, "downloads": -1, "filename": "TreeStructConfig-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e52aced39992f2dfc49bd891af72fbf4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.4", "size": 4318, "upload_time": "2019-08-07T07:26:36", "upload_time_iso_8601": "2019-08-07T07:26:36.010934Z", "url": "https://files.pythonhosted.org/packages/cd/0b/891cae50a3fb4a7636b3d9218e32e0b7d1e1df50087652595e94822b17b9/TreeStructConfig-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c25337b707ffead59cd79817b3c72998", "sha256": "fa815ce07848af2929999b79cde2ed937ef7483c33797dfc8e55508660dcc35a"}, "downloads": -1, "filename": "TreeStructConfig-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c25337b707ffead59cd79817b3c72998", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 4981, "upload_time": "2019-08-07T07:26:40", "upload_time_iso_8601": "2019-08-07T07:26:40.727443Z", "url": "https://files.pythonhosted.org/packages/44/86/5ae37f14e4e25716eb9c188b670592eed60f286270849621e1a0ed285b60/TreeStructConfig-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "a092ec5f37f3306c5f75877c05d9b458", "sha256": "d99226d54222e0c566c474b3dd35fd9d7416e24cce277aa65e65f5e10aced752"}, "downloads": -1, "filename": "TreeStructConfig-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a092ec5f37f3306c5f75877c05d9b458", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.4", "size": 4358, "upload_time": "2019-11-04T08:04:20", "upload_time_iso_8601": "2019-11-04T08:04:20.118890Z", "url": "https://files.pythonhosted.org/packages/4e/16/25817b6ad3c5bce3745d7102296369f32130d7acf24dce5a0f24d4428207/TreeStructConfig-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d6e3319147711fd5a666b5f4c3afe9e", "sha256": "ec465bc9bc604717ebee7aa4710a52b4618ac508e68b966065839b445c2aa72f"}, "downloads": -1, "filename": "TreeStructConfig-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0d6e3319147711fd5a666b5f4c3afe9e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 5084, "upload_time": "2019-11-04T08:04:22", "upload_time_iso_8601": "2019-11-04T08:04:22.160504Z", "url": "https://files.pythonhosted.org/packages/83/d3/5085ff74af6fee46a43ab98716144468d13ecff96bc375a6c75c79e28df4/TreeStructConfig-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "8ec5a03aecf7d48dd3e0806f68aea074", "sha256": "29a88f20dd3a69fb3135e46acfdb03a6acc1b548cc04aeb95c83fe01c3d3e84d"}, "downloads": -1, "filename": "TreeStructConfig-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8ec5a03aecf7d48dd3e0806f68aea074", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.4", "size": 4441, "upload_time": "2019-11-07T08:35:54", "upload_time_iso_8601": "2019-11-07T08:35:54.281580Z", "url": "https://files.pythonhosted.org/packages/26/a0/03e7316e3a6bcfb4b1733559e1bc7157c0af80027ba3f417ea33ced1a462/TreeStructConfig-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db866773f2ec03c5b61df07328cae0f1", "sha256": "838ca4ba640cef6c7dad8b1eb8ead8a0ee90a2ea0eabca231c60c5423987a34f"}, "downloads": -1, "filename": "TreeStructConfig-0.2.2.tar.gz", "has_sig": false, "md5_digest": "db866773f2ec03c5b61df07328cae0f1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 5209, "upload_time": "2019-11-07T08:35:56", "upload_time_iso_8601": "2019-11-07T08:35:56.695430Z", "url": "https://files.pythonhosted.org/packages/31/a4/77bb9d85ee4ea97d037e418a59cc55afebfc720b0d0b77517b39ef2d4b31/TreeStructConfig-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8ec5a03aecf7d48dd3e0806f68aea074", "sha256": "29a88f20dd3a69fb3135e46acfdb03a6acc1b548cc04aeb95c83fe01c3d3e84d"}, "downloads": -1, "filename": "TreeStructConfig-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8ec5a03aecf7d48dd3e0806f68aea074", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.4", "size": 4441, "upload_time": "2019-11-07T08:35:54", "upload_time_iso_8601": "2019-11-07T08:35:54.281580Z", "url": "https://files.pythonhosted.org/packages/26/a0/03e7316e3a6bcfb4b1733559e1bc7157c0af80027ba3f417ea33ced1a462/TreeStructConfig-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db866773f2ec03c5b61df07328cae0f1", "sha256": "838ca4ba640cef6c7dad8b1eb8ead8a0ee90a2ea0eabca231c60c5423987a34f"}, "downloads": -1, "filename": "TreeStructConfig-0.2.2.tar.gz", "has_sig": false, "md5_digest": "db866773f2ec03c5b61df07328cae0f1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 5209, "upload_time": "2019-11-07T08:35:56", "upload_time_iso_8601": "2019-11-07T08:35:56.695430Z", "url": "https://files.pythonhosted.org/packages/31/a4/77bb9d85ee4ea97d037e418a59cc55afebfc720b0d0b77517b39ef2d4b31/TreeStructConfig-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:47:33 2020"}