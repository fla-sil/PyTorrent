{"info": {"author": "Bartosz Bartmanski", "author_email": "bartoszbartmanski@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# DualMesh [![Build Status](https://travis-ci.org/BartoszBartmanski/DualMesh.svg?branch=master)](https://travis-ci.org/BartoszBartmanski/DualMesh)\n\nPython module for generating dual meshes.\n\n## Requirements\n\n* meshio >= 4.0\n* numpy >= 1.16.3\n\n## Installation\n\nEither install using pip\n```\npip install dualmesh\n```\nor copy the file dualmesh.py from the dualmesh directory in this repository.\n\n## Example\n\nWe can go through the example of using dual_mesh.py module.\n\nFirst, we import all the needed modules\n```\n# For opening a mesh file\nimport meshio\n# For generating a dual mesh\nimport dualmesh as dm\n# For plotting both the mesh and dual mesh\nimport matplotlib.pyplot as plt\n```\n\nWe load the mesh for which we want a dual mesh\n```\nmsh = meshio.read(\"example.msh\")\n```\n\nWe get the dual mesh object using dual_mesh.py\n```\ndual_msh = dm.get_dual(msh, order=True)\n```\n\nWe use matplotlib to plot the original mesh\n```\nfig, ax = plt.subplots()\nax.triplot(msh.points[:, 0], msh.points[:, 1], msh.cells[\"triangle\"])\n```\n\nWe loop over the polygons (cells) in the dual mesh and we plot them\n```\nfor cell in dual_msh.cells[\"polygon\"]:\n    # We get the coordinates of the current polygon.\n    # We repeat one of the points, so that when plotted, we get a complete polygon\n    cell_points = dual_msh.points[cell + [cell[0]]]\n\n    # We plot the points of the current polygon\n    ax.plot(cell_points[:, 0], cell_points[:, 1], \":\", color=\"black\")\n```\n\nAnd finally we add the legend and save the resulting figure\n```\n# We add a legend to the figure\nfig.legend([ax.lines[0], ax.lines[-1]], [\"Mesh\", \"Dual mesh\"])\n# We save the resulting figure\nfig.savefig(\"example.png\")\n```\n\n![Mesh and dual mesh](https://github.com/BartoszBartmanski/DualMesh/blob/master/example.png)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/BartoszBartmanski/DualMesh", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "dualmesh", "package_url": "https://pypi.org/project/dualmesh/", "platform": "", "project_url": "https://pypi.org/project/dualmesh/", "project_urls": {"Homepage": "https://github.com/BartoszBartmanski/DualMesh"}, "release_url": "https://pypi.org/project/dualmesh/0.14.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Python module for generating dual meshes", "version": "0.14.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>DualMesh <a href=\"https://travis-ci.org/BartoszBartmanski/DualMesh\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9e39588ac4034168c39993f4b1616ed05f175bbd/68747470733a2f2f7472617669732d63692e6f72672f426172746f737a426172746d616e736b692f4475616c4d6573682e7376673f6272616e63683d6d6173746572\"></a></h1>\n<p>Python module for generating dual meshes.</p>\n<h2>Requirements</h2>\n<ul>\n<li>meshio &gt;= 4.0</li>\n<li>numpy &gt;= 1.16.3</li>\n</ul>\n<h2>Installation</h2>\n<p>Either install using pip</p>\n<pre><code>pip install dualmesh\n</code></pre>\n<p>or copy the file dualmesh.py from the dualmesh directory in this repository.</p>\n<h2>Example</h2>\n<p>We can go through the example of using dual_mesh.py module.</p>\n<p>First, we import all the needed modules</p>\n<pre><code># For opening a mesh file\nimport meshio\n# For generating a dual mesh\nimport dualmesh as dm\n# For plotting both the mesh and dual mesh\nimport matplotlib.pyplot as plt\n</code></pre>\n<p>We load the mesh for which we want a dual mesh</p>\n<pre><code>msh = meshio.read(\"example.msh\")\n</code></pre>\n<p>We get the dual mesh object using dual_mesh.py</p>\n<pre><code>dual_msh = dm.get_dual(msh, order=True)\n</code></pre>\n<p>We use matplotlib to plot the original mesh</p>\n<pre><code>fig, ax = plt.subplots()\nax.triplot(msh.points[:, 0], msh.points[:, 1], msh.cells[\"triangle\"])\n</code></pre>\n<p>We loop over the polygons (cells) in the dual mesh and we plot them</p>\n<pre><code>for cell in dual_msh.cells[\"polygon\"]:\n    # We get the coordinates of the current polygon.\n    # We repeat one of the points, so that when plotted, we get a complete polygon\n    cell_points = dual_msh.points[cell + [cell[0]]]\n\n    # We plot the points of the current polygon\n    ax.plot(cell_points[:, 0], cell_points[:, 1], \":\", color=\"black\")\n</code></pre>\n<p>And finally we add the legend and save the resulting figure</p>\n<pre><code># We add a legend to the figure\nfig.legend([ax.lines[0], ax.lines[-1]], [\"Mesh\", \"Dual mesh\"])\n# We save the resulting figure\nfig.savefig(\"example.png\")\n</code></pre>\n<p><img alt=\"Mesh and dual mesh\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9dde75fff6e2dcb186e13279bc4b0f3900cc11cf/68747470733a2f2f6769746875622e636f6d2f426172746f737a426172746d616e736b692f4475616c4d6573682f626c6f622f6d61737465722f6578616d706c652e706e67\"></p>\n\n          </div>"}, "last_serial": 6889647, "releases": {"0.13.1": [{"comment_text": "", "digests": {"md5": "5d5caf3b15d211f931218379cdf471d6", "sha256": "b0aa8f8dd68151a9d5de004c94f81d505457e99ac47368afc272a8ad476e85b9"}, "downloads": -1, "filename": "dualmesh-0.13.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5d5caf3b15d211f931218379cdf471d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14949, "upload_time": "2019-12-31T19:25:53", "upload_time_iso_8601": "2019-12-31T19:25:53.221401Z", "url": "https://files.pythonhosted.org/packages/ac/99/124b56c5254f5cedc703a18186be3d4032084803ab8650f6904d9b47fe9a/dualmesh-0.13.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "37a8e977b969913702994800887df325", "sha256": "50f9bfeddc5bf9b950e2cd82c651b4661a165cffa95dff7643f3f0120cd83612"}, "downloads": -1, "filename": "dualmesh-0.13.1.tar.gz", "has_sig": false, "md5_digest": "37a8e977b969913702994800887df325", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3273, "upload_time": "2019-12-31T19:25:55", "upload_time_iso_8601": "2019-12-31T19:25:55.285723Z", "url": "https://files.pythonhosted.org/packages/cf/78/63c9c077c537aa750ca6b36830139594dfd47b86a893e5ef8a79d24ebe4e/dualmesh-0.13.1.tar.gz", "yanked": false}], "0.13.2": [{"comment_text": "", "digests": {"md5": "0e7e5bd29a0737f44c82f4fd154ab18f", "sha256": "0cac90f0e9015984b4edd8b357384c1aee5ea5949d91911634f7cac99311ac3a"}, "downloads": -1, "filename": "dualmesh-0.13.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0e7e5bd29a0737f44c82f4fd154ab18f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14981, "upload_time": "2019-12-31T22:03:41", "upload_time_iso_8601": "2019-12-31T22:03:41.976162Z", "url": "https://files.pythonhosted.org/packages/be/a5/64386aaea5d647ce6d4713eeed5f09c8c0edd81ce1102713ad181042f4f9/dualmesh-0.13.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f4b5bccf1bcf705ef4160109566b87f", "sha256": "51809c1926dcdcb81c5cc166a997419ef74b8b819738b8ddfcb8b3d0aa33aabd"}, "downloads": -1, "filename": "dualmesh-0.13.2.tar.gz", "has_sig": false, "md5_digest": "2f4b5bccf1bcf705ef4160109566b87f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3312, "upload_time": "2019-12-31T22:03:43", "upload_time_iso_8601": "2019-12-31T22:03:43.615569Z", "url": "https://files.pythonhosted.org/packages/a9/7e/1040ee7406ce3ad698a7169dc7c70c1219b1bf00899bf6390dce77a9b2f7/dualmesh-0.13.2.tar.gz", "yanked": false}], "0.13.3": [{"comment_text": "", "digests": {"md5": "3a0c43b7f5f71403af32dab8ea02102a", "sha256": "192603528639e73c814b58555b337e3be7dff0a48110f00091f34fb4969f8ca3"}, "downloads": -1, "filename": "dualmesh-0.13.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3a0c43b7f5f71403af32dab8ea02102a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14992, "upload_time": "2019-12-31T22:14:45", "upload_time_iso_8601": "2019-12-31T22:14:45.852930Z", "url": "https://files.pythonhosted.org/packages/fe/ef/470a1ff396d4cfe783a862a2cbb61599fefb78173787661f0b2a911dc7f0/dualmesh-0.13.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba507ca97defe5a9f2e1112bbf69ef56", "sha256": "a7d770079bd2487ea2c4ae948a6dac0874a22f9b4b095bda880349c5fd3770eb"}, "downloads": -1, "filename": "dualmesh-0.13.3.tar.gz", "has_sig": false, "md5_digest": "ba507ca97defe5a9f2e1112bbf69ef56", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3330, "upload_time": "2019-12-31T22:14:47", "upload_time_iso_8601": "2019-12-31T22:14:47.411346Z", "url": "https://files.pythonhosted.org/packages/6b/e7/2a1522ee5bb5d8c65c527722be24c4acd0908818be135d9431311e6be189/dualmesh-0.13.3.tar.gz", "yanked": false}], "0.14.0": [{"comment_text": "", "digests": {"md5": "6cdaf6da42014b8901ebf30d29896779", "sha256": "4b69fe02d54d31e56e7bcec04bf65ca5a388a0454cbeb3494e57a5a37942459d"}, "downloads": -1, "filename": "dualmesh-0.14.0.tar.gz", "has_sig": false, "md5_digest": "6cdaf6da42014b8901ebf30d29896779", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3330, "upload_time": "2020-03-26T17:12:11", "upload_time_iso_8601": "2020-03-26T17:12:11.148859Z", "url": "https://files.pythonhosted.org/packages/79/4b/bce306fec23a8ecbb1c110b8d2027a5c91e3d36756b46076b7935b2638df/dualmesh-0.14.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6cdaf6da42014b8901ebf30d29896779", "sha256": "4b69fe02d54d31e56e7bcec04bf65ca5a388a0454cbeb3494e57a5a37942459d"}, "downloads": -1, "filename": "dualmesh-0.14.0.tar.gz", "has_sig": false, "md5_digest": "6cdaf6da42014b8901ebf30d29896779", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3330, "upload_time": "2020-03-26T17:12:11", "upload_time_iso_8601": "2020-03-26T17:12:11.148859Z", "url": "https://files.pythonhosted.org/packages/79/4b/bce306fec23a8ecbb1c110b8d2027a5c91e3d36756b46076b7935b2638df/dualmesh-0.14.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:10 2020"}