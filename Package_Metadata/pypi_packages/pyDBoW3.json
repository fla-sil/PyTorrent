{"info": {"author": "Andrius Mikonis", "author_email": "andrius.mikonis@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Text Processing :: Linguistic"], "description": "\n.. image:: https://readthedocs.org/projects/pydbow3/badge/?version=latest\n    :target: https://pydbow3.readthedocs.io/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://travis-ci.org/foxis/pyDBoW3.svg?branch=master\n    :target: https://travis-ci.org/foxis/pyDBoW3?branch=master\n\n.. image:: https://codecov.io/gh/FoxIS/pyDBoW3/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/foxis/pyDBoW3\n\n.. image:: https://img.shields.io/pypi/v/pyDBoW3.svg\n    :target: https://pypi.python.org/pypi/pyDBoW3\n\n.. image:: https://img.shields.io/pypi/l/pyDBoW3.svg\n    :target: https://pypi.python.org/pypi/pyDBoW3\n\n.. image:: https://img.shields.io/pypi/pyversions/pyDBoW3.svg\n    :target: https://pypi.python.org/pypi/pyDBoW3\n\n.. image:: https://img.shields.io/badge/STAR_Me_on_GitHub!--None.svg?style=social\n    :target: https://github.com/foxis/pyDBoW3\n\n------\n\n\n.. image:: https://img.shields.io/badge/Link-Document-blue.svg\n      :target: https://pydbow3.readthedocs.io/index.html\n\n.. image:: https://img.shields.io/badge/Link-API-blue.svg\n      :target: https://pydbow3.readthedocs.io/py-modindex.html\n\n.. image:: https://img.shields.io/badge/Link-Source_Code-blue.svg\n      :target: https://pydbow3.readthedocs.io/py-modindex.html\n\n.. image:: https://img.shields.io/badge/Link-Install-blue.svg\n      :target: `install`_\n\n.. image:: https://img.shields.io/badge/Link-GitHub-blue.svg\n      :target: https://github.com/foxis/pyDBoW3\n\n.. image:: https://img.shields.io/badge/Link-Submit_Issue-blue.svg\n      :target: https://github.com/foxis/pyDBoW3/issues\n\n.. image:: https://img.shields.io/badge/Link-Request_Feature-blue.svg\n      :target: https://github.com/foxis/pyDBoW3/issues\n\n.. image:: https://img.shields.io/badge/Link-Download-blue.svg\n      :target: https://pypi.org/pypi/pyDBoW3#files\n\n\n\npyDBoW3\n==============\n\nUltra-fast Boost.Python interface for `DBoW3 <https://github.com/rmsalinas/DBow3>`_\n\nThis repo was created in order to interface DBoW algorithm from python in another project\n`EasyVision <https://github.com/foxis/EasyVision>`_. It is being used for a simple topological SLAM\nimplementation since OpenCV BowKMeansTrainer doesn't work with binary features.\n\nIf you wish you use it on your own it is as easy as:\n\n.. code-block:: python\n\n    import pyDBoW3 as bow\n    voc = bow.Vocabulary()\n    voc.load(\"/slamdoom/libs/orbslam2/Vocabulary/ORBvoc.txt\")\n    db = bow.Database()\n    db.setVocabulary(voc)\n    del voc\n    # extract features using OpenCV\n    ...\n    # add features to database\n    for features in features_list:\n      db.add(features)\n\n    # query features\n    feature_to_query = 1\n    results = db.query(features_list[feature_to_query])\n\n    del db\n\n\nThis repository was created based on `pyORBSLAM2 <https://github.com/raulmur/ORB_SLAM2>`_ and\nndarray to cv::Mat conversion on `numpy-opencv-converter <https://github.com/GarrickLin/numpy-opencv-converter>`_.\n\n.. note::\n\n  Tested on these platforms:\n    * OpenCV 3.4.2.16\n    * Windows 10 msvc 2017 x64\n    * xenial with Python 2.7, libboost 1.54 (autobuild with travis)\n    * xenial with Python 3.5, libboost 1.54 (autobuild with travis)\n\n.. _install:\n\nGet started\n-----------\n\nWindows\n+++++++\n\nPrerequisites:\n* OpenCV\n* Python with Numpy and opencv-contrib-python\n* Boost >1.54\n* cmake\n* Microsoft Visual Studio\n\nTo build Boost.Python, go to Boost root and run::\n\n    bootstrap.bat --prefix=/dir/to/Boost.Build\n\nThen build Boost.Python like this::\n\n    /dir/to/Boost.Build/b2 --with-python threading=multi variant=release link=static\n\nTo build DBoW3, simply run ``build.bat`` file and then build solution folder in ``install/DBoW3/build`` and then the solution\nin ``build`` folder.\n\nCurrently there is no python package generation, so you could simply copy ``pyDBoW3.pyd`` and ``opencv_world*.dll`` files\nto your virtual environment.\n\nUnix\n++++\n\nUse ``build.sh`` to build ``build/pyDBoW.so``, which you should then put on your ``PYTHONPATH``.\n\nCheck ``.travis.yml`` for environment variables.\n\n.. note::\n\n  You will probably need to run ``sudo make install`` for ``install/opencv/build`` to install it on your system.\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/foxis/pyDBoW3", "keywords": "bag of words bow dbow3 dbow slam orb odometry visual", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyDBoW3", "package_url": "https://pypi.org/project/pyDBoW3/", "platform": "", "project_url": "https://pypi.org/project/pyDBoW3/", "project_urls": {"Homepage": "http://github.com/foxis/pyDBoW3"}, "release_url": "https://pypi.org/project/pyDBoW3/0.2/", "requires_dist": ["numpy"], "requires_python": "", "summary": "Python wrappers for DBoW3 library.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pydbow3.readthedocs.io/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e075b83c96df71b0e0cadda7881c82b809d8413/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707964626f77332f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://travis-ci.org/foxis/pyDBoW3?branch=master\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/foxis/pyDBoW3.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d40f600d312ecae746bbfc8a2af6fd987c8e850d/68747470733a2f2f7472617669732d63692e6f72672f666f7869732f707944426f57332e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/foxis/pyDBoW3\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/FoxIS/pyDBoW3/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45fb0e0699ab9468425904e4fe07e4f00af27fc0/68747470733a2f2f636f6465636f762e696f2f67682f466f7849532f707944426f57332f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pyDBoW3\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/pyDBoW3.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0cfb03bb282103602cbd00a6b7251e828c0142b6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707944426f57332e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pyDBoW3\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/pyDBoW3.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/71e4f040bd8ada04267b29eccf6501c41954ee38/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f707944426f57332e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pyDBoW3\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/pyDBoW3.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/11dabed2f6bb554d6fdb06a9265898935683465d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f707944426f57332e737667\"></a>\n<a href=\"https://github.com/foxis/pyDBoW3\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/STAR_Me_on_GitHub!--None.svg?style=social\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88cea09b708639318e023fda9ac4a3d3dbd4913e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f535441525f4d655f6f6e5f476974487562212d2d4e6f6e652e7376673f7374796c653d736f6369616c\"></a>\n<hr class=\"docutils\">\n<a href=\"https://pydbow3.readthedocs.io/index.html\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Document-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72169197d626e9423d781eb78da036701b9d9a98/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d446f63756d656e742d626c75652e737667\"></a>\n<a href=\"https://pydbow3.readthedocs.io/py-modindex.html\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-API-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b5c039f4ebca0e2653e6f930d982271fae9b6c62/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d4150492d626c75652e737667\"></a>\n<a href=\"https://pydbow3.readthedocs.io/py-modindex.html\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Source_Code-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0d422b71b3e2a98ca914c3f9b07a6fd0ccbf6f5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d536f757263655f436f64652d626c75652e737667\"></a>\n<a href=\"#install\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Install-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7bf0296a17baff5c64335b1557b8c99de518863/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d496e7374616c6c2d626c75652e737667\"></a>\n<a href=\"https://github.com/foxis/pyDBoW3\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-GitHub-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40760fc6f9c2f034b2f44fb3441622fd43d33f71/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d4769744875622d626c75652e737667\"></a>\n<a href=\"https://github.com/foxis/pyDBoW3/issues\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Submit_Issue-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aaf85195ff7754d210475d1a26ab797376626e70/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d5375626d69745f49737375652d626c75652e737667\"></a>\n<a href=\"https://github.com/foxis/pyDBoW3/issues\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Request_Feature-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/028fe51c7aa4c503e85a901affc8519722c888fd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d526571756573745f466561747572652d626c75652e737667\"></a>\n<a href=\"https://pypi.org/pypi/pyDBoW3#files\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Download-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01616d53c2f6efee987f922046ed988550b12ff9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d446f776e6c6f61642d626c75652e737667\"></a>\n<div id=\"pydbow3\">\n<h2>pyDBoW3</h2>\n<p>Ultra-fast Boost.Python interface for <a href=\"https://github.com/rmsalinas/DBow3\" rel=\"nofollow\">DBoW3</a></p>\n<p>This repo was created in order to interface DBoW algorithm from python in another project\n<a href=\"https://github.com/foxis/EasyVision\" rel=\"nofollow\">EasyVision</a>. It is being used for a simple topological SLAM\nimplementation since OpenCV BowKMeansTrainer doesn\u2019t work with binary features.</p>\n<p>If you wish you use it on your own it is as easy as:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyDBoW3</span> <span class=\"k\">as</span> <span class=\"nn\">bow</span>\n<span class=\"n\">voc</span> <span class=\"o\">=</span> <span class=\"n\">bow</span><span class=\"o\">.</span><span class=\"n\">Vocabulary</span><span class=\"p\">()</span>\n<span class=\"n\">voc</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"/slamdoom/libs/orbslam2/Vocabulary/ORBvoc.txt\"</span><span class=\"p\">)</span>\n<span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">bow</span><span class=\"o\">.</span><span class=\"n\">Database</span><span class=\"p\">()</span>\n<span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">setVocabulary</span><span class=\"p\">(</span><span class=\"n\">voc</span><span class=\"p\">)</span>\n<span class=\"k\">del</span> <span class=\"n\">voc</span>\n<span class=\"c1\"># extract features using OpenCV</span>\n<span class=\"o\">...</span>\n<span class=\"c1\"># add features to database</span>\n<span class=\"k\">for</span> <span class=\"n\">features</span> <span class=\"ow\">in</span> <span class=\"n\">features_list</span><span class=\"p\">:</span>\n  <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># query features</span>\n<span class=\"n\">feature_to_query</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">features_list</span><span class=\"p\">[</span><span class=\"n\">feature_to_query</span><span class=\"p\">])</span>\n\n<span class=\"k\">del</span> <span class=\"n\">db</span>\n</pre>\n<p>This repository was created based on <a href=\"https://github.com/raulmur/ORB_SLAM2\" rel=\"nofollow\">pyORBSLAM2</a> and\nndarray to cv::Mat conversion on <a href=\"https://github.com/GarrickLin/numpy-opencv-converter\" rel=\"nofollow\">numpy-opencv-converter</a>.</p>\n<div>\n<p>Note</p>\n<dl>\n<dt>Tested on these platforms:</dt>\n<dd><ul>\n<li>OpenCV 3.4.2.16</li>\n<li>Windows 10 msvc 2017 x64</li>\n<li>xenial with Python 2.7, libboost 1.54 (autobuild with travis)</li>\n<li>xenial with Python 3.5, libboost 1.54 (autobuild with travis)</li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"get-started\">\n<span id=\"install\"></span><h3>Get started</h3>\n<div id=\"windows\">\n<h4>Windows</h4>\n<p>Prerequisites:\n* OpenCV\n* Python with Numpy and opencv-contrib-python\n* Boost &gt;1.54\n* cmake\n* Microsoft Visual Studio</p>\n<p>To build Boost.Python, go to Boost root and run:</p>\n<pre>bootstrap.bat --prefix=/dir/to/Boost.Build\n</pre>\n<p>Then build Boost.Python like this:</p>\n<pre>/dir/to/Boost.Build/b2 --with-python threading=multi variant=release link=static\n</pre>\n<p>To build DBoW3, simply run <tt>build.bat</tt> file and then build solution folder in <tt>install/DBoW3/build</tt> and then the solution\nin <tt>build</tt> folder.</p>\n<p>Currently there is no python package generation, so you could simply copy <tt>pyDBoW3.pyd</tt> and <tt><span class=\"pre\">opencv_world*.dll</span></tt> files\nto your virtual environment.</p>\n</div>\n<div id=\"unix\">\n<h4>Unix</h4>\n<p>Use <tt>build.sh</tt> to build <tt>build/pyDBoW.so</tt>, which you should then put on your <tt>PYTHONPATH</tt>.</p>\n<p>Check <tt>.travis.yml</tt> for environment variables.</p>\n<div>\n<p>Note</p>\n<p>You will probably need to run <tt>sudo make install</tt> for <tt>install/opencv/build</tt> to install it on your system.</p>\n</div>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4840102, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "1ae6638720cc9f58870991fdf957d9b0", "sha256": "c72b853f0cf0aa71f7059ebcd60e5e8fa22c6d0dedf0431a50c652aed440d3e8"}, "downloads": -1, "filename": "pyDBoW3-0.2-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "1ae6638720cc9f58870991fdf957d9b0", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 23960220, "upload_time": "2019-02-19T13:55:58", "upload_time_iso_8601": "2019-02-19T13:55:58.096349Z", "url": "https://files.pythonhosted.org/packages/4a/f7/23d16dd30de14d5112b32b1f3abf1a7745a96ced1aa1a5b46dabad3d4578/pyDBoW3-0.2-cp37-cp37m-win_amd64.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1ae6638720cc9f58870991fdf957d9b0", "sha256": "c72b853f0cf0aa71f7059ebcd60e5e8fa22c6d0dedf0431a50c652aed440d3e8"}, "downloads": -1, "filename": "pyDBoW3-0.2-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "1ae6638720cc9f58870991fdf957d9b0", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 23960220, "upload_time": "2019-02-19T13:55:58", "upload_time_iso_8601": "2019-02-19T13:55:58.096349Z", "url": "https://files.pythonhosted.org/packages/4a/f7/23d16dd30de14d5112b32b1f3abf1a7745a96ced1aa1a5b46dabad3d4578/pyDBoW3-0.2-cp37-cp37m-win_amd64.whl", "yanked": false}], "timestamp": "Fri May  8 03:07:16 2020"}