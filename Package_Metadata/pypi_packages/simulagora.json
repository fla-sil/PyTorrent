{"info": {"author": "LOGILAB S.A. (Paris, FRANCE)", "author_email": "contact@logilab.fr", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Science/Research", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering"], "description": ".. -*- coding: utf-8 -*-\n\n===================\n Simulagora client\n===================\n\nSummary\n-------\n\nA python library to use Simulagora programatically either directly from the\ncommand line or via a Python program.\n\n\nPrerequisites\n-------------\n\nYou will need a proper installation of cwclientlib_, which itself requires\nPython\u00a02.7 and `Python requests`_.\n\nAn account on Simulagora_ is of course also needed.\n\n\nUsing Simulagora client\n-----------------------\n\n#. Log in on Simulagora_ and consult the token that was generated for you at the\n   `dedicated URL <https://www.simulagora.com/AuthToken>`_;\n\n#. Create a ``cwclientlibrc`` file in your user's ``.config`` directory (only\n   readable by yourself), like::\n\n     [simulagora]\n     url = https://www.simulagora.com\n     token-id = the token id\n     secret = the token itself\n\n\nExamples\n--------\n\nExamples directly from the command line. Get a list of the studies you can\naccess:\n\n.. code-block:: sh\n\n    $ simulagora studies\n    [{'eid': 4173, 'name': u'Study 1'},\n     {'eid': 4277, 'name': u'Study 2'},\n     {'eid': 4310, 'name': u'Study 3'}]\n    $ simulagora executables\n    [{'eid': 2454, 'name': u'Attente (secondes)'},\n     {'eid': 2470, 'name': u'paraview'},\n     {'eid': 4672, 'name': u'bash_command #0'},\n     {'eid': 4883, 'name': u'lmgc90_donut'}]\n\n\nA more complete example using Python. Create a \"Code Aster piston test\" study\nand an eponym folder, upload the data in it, and run a Code Aster computation\nwith this data as an input on a \"m1.large\" server, equiped with the last\nSimulagora machine image (which currently has Code Aster 11.5):\n\n.. code-block:: python\n\n   from simulagora import Simulagora\n   from time import sleep\n\n   client = Simulagora.for_instance('simulagora')\n\n   # create the folder, upload the files and get their identifiers\n   folder = client.create_folder('Code Aster piston test')\n   file_eids = client.upload_files(folder, 'piston.comm', 'piston.mmed', 'piston.export')\n\n   # get the \"bash command\" executable which will run the \"as_run\" command\n   executable = client.find_one('Executable', name='bash command')\n   params = {'command': 'as_run piston.export'}\n\n   # get the server type, create the study and the run, then start it\n   server_type = client.find_one('CloudServerType', name='m3.xlarge')\n   study = client.create_study('Code Aster piston test')\n   run = client.create_run(study, executable, server_type, file_eids, params)\n   client.start_run(run)\n\n   # check its state every 5 seconds until its crashed or completed\n   state = None\n   while state not in ('wfs_run_crashed', 'wfs_run_completed'):\n       state = client.state(run)\n       sleep(5)\n   print \"Run \" + state.rsplit('_', 1)[-1]\n\n.. _Simulagora: https://www.simulagora.com\n.. _cwclientlib: http://www.cubicweb.org/project/cwclientlib\n.. _`Python requests`: http://docs.python-requests.org/en/latest", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.cubicweb.org/project/simulagora-client", "keywords": "simulagora cubicweb cwclientlib", "license": "", "maintainer": "", "maintainer_email": "", "name": "simulagora", "package_url": "https://pypi.org/project/simulagora/", "platform": "", "project_url": "https://pypi.org/project/simulagora/", "project_urls": {"Homepage": "http://www.cubicweb.org/project/simulagora-client"}, "release_url": "https://pypi.org/project/simulagora/0.5.0/", "requires_dist": null, "requires_python": "", "summary": "A python library to use Simulagora programatically", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"summary\">\n<h2>Summary</h2>\n<p>A python library to use Simulagora programatically either directly from the\ncommand line or via a Python program.</p>\n</div>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<p>You will need a proper installation of <a href=\"http://www.cubicweb.org/project/cwclientlib\" rel=\"nofollow\">cwclientlib</a>, which itself requires\nPython\u00a02.7 and <a href=\"http://docs.python-requests.org/en/latest\" rel=\"nofollow\">Python requests</a>.</p>\n<p>An account on <a href=\"https://www.simulagora.com\" rel=\"nofollow\">Simulagora</a> is of course also needed.</p>\n</div>\n<div id=\"using-simulagora-client\">\n<h2>Using Simulagora client</h2>\n<ol>\n<li><p>Log in on <a href=\"https://www.simulagora.com\" rel=\"nofollow\">Simulagora</a> and consult the token that was generated for you at the\n<a href=\"https://www.simulagora.com/AuthToken\" rel=\"nofollow\">dedicated URL</a>;</p>\n</li>\n<li><p>Create a <tt>cwclientlibrc</tt> file in your user\u2019s <tt>.config</tt> directory (only\nreadable by yourself), like:</p>\n<pre>[simulagora]\nurl = https://www.simulagora.com\ntoken-id = the token id\nsecret = the token itself\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Examples directly from the command line. Get a list of the studies you can\naccess:</p>\n<pre>$ simulagora studies\n<span class=\"o\">[{</span><span class=\"s1\">'eid'</span>: <span class=\"m\">4173</span>, <span class=\"s1\">'name'</span>: u<span class=\"s1\">'Study 1'</span><span class=\"o\">}</span>,\n <span class=\"o\">{</span><span class=\"s1\">'eid'</span>: <span class=\"m\">4277</span>, <span class=\"s1\">'name'</span>: u<span class=\"s1\">'Study 2'</span><span class=\"o\">}</span>,\n <span class=\"o\">{</span><span class=\"s1\">'eid'</span>: <span class=\"m\">4310</span>, <span class=\"s1\">'name'</span>: u<span class=\"s1\">'Study 3'</span><span class=\"o\">}]</span>\n$ simulagora executables\n<span class=\"o\">[{</span><span class=\"s1\">'eid'</span>: <span class=\"m\">2454</span>, <span class=\"s1\">'name'</span>: u<span class=\"s1\">'Attente (secondes)'</span><span class=\"o\">}</span>,\n <span class=\"o\">{</span><span class=\"s1\">'eid'</span>: <span class=\"m\">2470</span>, <span class=\"s1\">'name'</span>: u<span class=\"s1\">'paraview'</span><span class=\"o\">}</span>,\n <span class=\"o\">{</span><span class=\"s1\">'eid'</span>: <span class=\"m\">4672</span>, <span class=\"s1\">'name'</span>: u<span class=\"s1\">'bash_command #0'</span><span class=\"o\">}</span>,\n <span class=\"o\">{</span><span class=\"s1\">'eid'</span>: <span class=\"m\">4883</span>, <span class=\"s1\">'name'</span>: u<span class=\"s1\">'lmgc90_donut'</span><span class=\"o\">}]</span>\n</pre>\n<p>A more complete example using Python. Create a \u201cCode Aster piston test\u201d study\nand an eponym folder, upload the data in it, and run a Code Aster computation\nwith this data as an input on a \u201cm1.large\u201d server, equiped with the last\nSimulagora machine image (which currently has Code Aster 11.5):</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simulagora</span> <span class=\"kn\">import</span> <span class=\"n\">Simulagora</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Simulagora</span><span class=\"o\">.</span><span class=\"n\">for_instance</span><span class=\"p\">(</span><span class=\"s1\">'simulagora'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create the folder, upload the files and get their identifiers</span>\n<span class=\"n\">folder</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">create_folder</span><span class=\"p\">(</span><span class=\"s1\">'Code Aster piston test'</span><span class=\"p\">)</span>\n<span class=\"n\">file_eids</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">upload_files</span><span class=\"p\">(</span><span class=\"n\">folder</span><span class=\"p\">,</span> <span class=\"s1\">'piston.comm'</span><span class=\"p\">,</span> <span class=\"s1\">'piston.mmed'</span><span class=\"p\">,</span> <span class=\"s1\">'piston.export'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get the \"bash command\" executable which will run the \"as_run\" command</span>\n<span class=\"n\">executable</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">find_one</span><span class=\"p\">(</span><span class=\"s1\">'Executable'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'bash command'</span><span class=\"p\">)</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'command'</span><span class=\"p\">:</span> <span class=\"s1\">'as_run piston.export'</span><span class=\"p\">}</span>\n\n<span class=\"c1\"># get the server type, create the study and the run, then start it</span>\n<span class=\"n\">server_type</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">find_one</span><span class=\"p\">(</span><span class=\"s1\">'CloudServerType'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'m3.xlarge'</span><span class=\"p\">)</span>\n<span class=\"n\">study</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">create_study</span><span class=\"p\">(</span><span class=\"s1\">'Code Aster piston test'</span><span class=\"p\">)</span>\n<span class=\"n\">run</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">create_run</span><span class=\"p\">(</span><span class=\"n\">study</span><span class=\"p\">,</span> <span class=\"n\">executable</span><span class=\"p\">,</span> <span class=\"n\">server_type</span><span class=\"p\">,</span> <span class=\"n\">file_eids</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">start_run</span><span class=\"p\">(</span><span class=\"n\">run</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># check its state every 5 seconds until its crashed or completed</span>\n<span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"k\">while</span> <span class=\"n\">state</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s1\">'wfs_run_crashed'</span><span class=\"p\">,</span> <span class=\"s1\">'wfs_run_completed'</span><span class=\"p\">):</span>\n    <span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"p\">(</span><span class=\"n\">run</span><span class=\"p\">)</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"Run \"</span> <span class=\"o\">+</span> <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">rsplit</span><span class=\"p\">(</span><span class=\"s1\">'_'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3986024, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e1f4c5d2b0f797305dc77292d58f6cb5", "sha256": "811e956454ebbce6813eb8d3b08f88934ea120e1383f6925704dcef73740bd6b"}, "downloads": -1, "filename": "simulagora-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e1f4c5d2b0f797305dc77292d58f6cb5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21906, "upload_time": "2014-11-10T15:37:15", "upload_time_iso_8601": "2014-11-10T15:37:15.422217Z", "url": "https://files.pythonhosted.org/packages/6a/b5/1ee7a1fe175745b52f59b5ac992ea8288dfc97741acadd79adc687ca175b/simulagora-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "336083ab2a51d8f10f120dad222b7adc", "sha256": "5cb3ff81896f47c1d0db1d574e4812dc0499bc6a9ffdd1f2ced2575be33ef909"}, "downloads": -1, "filename": "simulagora-0.1.1.tar.gz", "has_sig": false, "md5_digest": "336083ab2a51d8f10f120dad222b7adc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22030, "upload_time": "2014-11-10T16:38:54", "upload_time_iso_8601": "2014-11-10T16:38:54.599508Z", "url": "https://files.pythonhosted.org/packages/d6/fb/0e20d3f8559a3831b126e93dd6da15ceec29d072ca5a2dde279245c09cc8/simulagora-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "bfa7f2e3a2ddd7a98a29fc19430f7814", "sha256": "6df0cae163ef7822c87a33923aeca6076975b8d6eec5bdd8134674ee85fd6883"}, "downloads": -1, "filename": "simulagora-0.2.0.tar.gz", "has_sig": false, "md5_digest": "bfa7f2e3a2ddd7a98a29fc19430f7814", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22196, "upload_time": "2017-05-31T08:49:20", "upload_time_iso_8601": "2017-05-31T08:49:20.264338Z", "url": "https://files.pythonhosted.org/packages/53/12/2d28a968e36c34e597d0d6ad7d8ce3795b240aeac2daf3009b28e70359c0/simulagora-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "2c9687159b12379a1fd96f0b7de8804a", "sha256": "920f71b82c65a9ac712e1599a45578f0e9eadbcb6398baec796a29492af223df"}, "downloads": -1, "filename": "simulagora-0.2.1.tar.gz", "has_sig": false, "md5_digest": "2c9687159b12379a1fd96f0b7de8804a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22628, "upload_time": "2017-05-31T10:16:51", "upload_time_iso_8601": "2017-05-31T10:16:51.788285Z", "url": "https://files.pythonhosted.org/packages/f5/b5/0c2eb14b00fa9e2a355515ab1566f2a52f65c89752f3a256c174b34459fe/simulagora-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "d167c4ad613204f8acc7a4e33b3a5732", "sha256": "b9e58adb490380b52059995c3446d08b8ac16e6318d194551cbb5f7b011038b0"}, "downloads": -1, "filename": "simulagora-0.3.0.tar.gz", "has_sig": false, "md5_digest": "d167c4ad613204f8acc7a4e33b3a5732", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20112, "upload_time": "2018-02-01T14:58:58", "upload_time_iso_8601": "2018-02-01T14:58:58.358270Z", "url": "https://files.pythonhosted.org/packages/a7/de/3358c21e9fbe975fe0eb22ccf48473334217013f97a14ee4976e9965716e/simulagora-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "f8d03d1d389e05d5a7e0746f56324e05", "sha256": "c542ee86a113ec36840ee274491a7224b249c3a743021c680fca093498e091dd"}, "downloads": -1, "filename": "simulagora-0.4.0.tar.gz", "has_sig": false, "md5_digest": "f8d03d1d389e05d5a7e0746f56324e05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18742, "upload_time": "2018-06-12T14:39:55", "upload_time_iso_8601": "2018-06-12T14:39:55.632851Z", "url": "https://files.pythonhosted.org/packages/06/1e/edb28824bc24f0891c9a0e9e6ddda2f99cb925ece4e63429991baca19d5b/simulagora-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "089a6ee0af2277f6a0991b4b7eb247fe", "sha256": "b10e6f6d19b2cea10679fa51c8c59ef4d40c7da6f9c39cda073664669581b7ad"}, "downloads": -1, "filename": "simulagora-0.4.1.tar.gz", "has_sig": false, "md5_digest": "089a6ee0af2277f6a0991b4b7eb247fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18710, "upload_time": "2018-06-14T06:29:24", "upload_time_iso_8601": "2018-06-14T06:29:24.880483Z", "url": "https://files.pythonhosted.org/packages/6e/56/dc34a9ddeed0fdc10355776b3a75e3492f851bdb7560826a591abf0745d9/simulagora-0.4.1.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "4f1f7e600eb96b5f5b43f1fe199f9d1f", "sha256": "867e795845cec282bdb12ff6870e072d387219f2bf1ff66ef0db82c59c3bf224"}, "downloads": -1, "filename": "simulagora-0.5.0.tar.gz", "has_sig": false, "md5_digest": "4f1f7e600eb96b5f5b43f1fe199f9d1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19259, "upload_time": "2018-06-21T15:10:43", "upload_time_iso_8601": "2018-06-21T15:10:43.053475Z", "url": "https://files.pythonhosted.org/packages/df/fa/5976082e33a037722535a79ace871fd02630b3e34826989d4d5948b6ad8f/simulagora-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4f1f7e600eb96b5f5b43f1fe199f9d1f", "sha256": "867e795845cec282bdb12ff6870e072d387219f2bf1ff66ef0db82c59c3bf224"}, "downloads": -1, "filename": "simulagora-0.5.0.tar.gz", "has_sig": false, "md5_digest": "4f1f7e600eb96b5f5b43f1fe199f9d1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19259, "upload_time": "2018-06-21T15:10:43", "upload_time_iso_8601": "2018-06-21T15:10:43.053475Z", "url": "https://files.pythonhosted.org/packages/df/fa/5976082e33a037722535a79ace871fd02630b3e34826989d4d5948b6ad8f/simulagora-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:36 2020"}