{"info": {"author": "Clayton Stout", "author_email": "clayfstout@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.7", "Topic :: Internet :: Log Analysis", "Topic :: Software Development", "Topic :: Utilities"], "description": "JSON to JSON diff tool\n======================\n\n|Build Status|\n\nFound a bug? Need a new feature? Want to help out? Check out the\n`Contributor\u2019s guide`_\n\nIntroduction\n------------\n\nA python module for checking equivalence and difference of two JSONs\nwith regex support\n\nThis repository will treat two types of JSON necessary for our purpose:\n\n#. Regular JSON where only data is stored\n\n#. Model JSON which will treat all keys and values as regular\n   expressions\n\n   -  Models will be used for comparing JSON objects to A model for\n      equivalence with regex matching\n   -  As JSON can be in a non-deterministic order, this is harder\n      than doing a straight string comparison\n\nThere are four modes of this module\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n#. Regular JSON comparison\n#. JSON to Model comparison\n#. Regular JSON diff\n#. JSON to Model Diff\n\n1. Regular JSON comparison\n--------------------------\n\nThis simply tests whether two files contating json are the same\n\n.. code-block:: bash\n\n    ./json_diff.py path/to/file1.json path/to/file2.json\n\nReturns True if equal or False otherwise.\n\n.. code-block:: bash\n\n    .json_diff.py path/to/file1.json path/to/json_directory/\n\nReturns the filename of the first match if there is one, or False\notherwise.\n\n2. JSON to Model comparison\n---------------------------\n\nThis mode tests whether a given JSON file matches a model when regular\nexpressions are evaluated.\n\n.. code-block:: bash\n\n    ./json_diff.py --mode j2m path/to/pure.json path/to/model.json\n\nReturns True if the JSON and model match, False otherwise.\n\n.. code-block:: bash\n\n    ./json_diff.py --mode j2m path/to/pure.json path/to/model_directory\n\nReturns the filename of the first match if there is one, or False\notherwise.\n\n3. Regular JSON diff\n--------------------\n\nThis mode computes a file diff between two JSON files.\n\n*The logic flow of this code is loosely based off of code found in\nhttps://github.com/monsur/jsoncompare*\n\n*Assuming*\n\n\nold.json:\n\n.. code-block:: json\n\n    {\n        \"accounting\" : [ {\n            \"firstName\" : \"John\",\n            \"lastName\"  : \"Doe\",\n            \"age\"       : 23\n        }, {\n            \"firstName\" : \"Mary\",\n            \"lastName\"  : \"Smith\",\n            \"age\"       : 31\n        } ],\n        \"sales\" : [ {\n            \"firstName\" : \"Sally\",\n            \"lastName\"  : \"Green\",\n            \"age\"       : 27\n        }, {\n            \"firstName\" : \"Jim\",\n            \"lastName\"  : \"Galley\",\n            \"age\"       : 41\n        } ]\n    }\n\nand new.json:\n\n.. code-block:: json\n\n    {\n        \"accounting\" : [ {\n            \"firstName\" : true,\n            \"lastName\"  : \"Doe\",\n            \"age\"       : 23\n        }, {\n            \"firstName\" : \"Susan\",\n            \"lastName\"  : \"Smith\",\n            \"age\"       : 31\n        } ],\n        \"sales\" : [ {\n            \"firstName\" : \"Sally\",\n            \"lastName\"  : \"Green\",\n            \"size\"       : 27\n        }, {\n            \"firstName\" : \"Jim\",\n            \"age\"       : 41\n        } ]\n    }\n\nThen\n\nShould produce output like:\n\n.. code:: bash\n\n    2015-03-24 12:59:08,576 - jsondiff - INFO - TypeDifference : accounting[0].firstName - is bool: (True), but was unicode: (John)\n    2015-03-24 12:59:08,576 - jsondiff - INFO - Changed: accounting[1].firstName to Susan from Mary\n    2015-03-24 12:59:08,576 - jsondiff - INFO - +: sales[0].size =27\n    2015-03-24 12:59:08,576 - jsondiff - INFO - -: sales[0].age=27\n    2015-03-24 12:59:08,576 - jsondiff - INFO - -: sales[1].lastName=Galley\n\n4. JSON to Model Diff\n---------------------\n\nThis mode computes a file diff between a JSON file and a model with\nregular expressions.\n\n***Note: at this time, we only support regular expression matching on\nsingleton values (that is values that are NOT a list or dictionary)***\n\n*Assuming*\n\n\nnew.json:\n\n.. code-block:: json\n\n    {\n        \"accounting\" : [ {\n            \"firstName\" : \"John\",\n            \"lastName\"  : \"Doe\",\n            \"age\"       : 23\n        }, {\n            \"firstName\" : \"Mary\",\n            \"lastName\"  : \"Smith\",\n            \"age\"       : 31\n        } ],\n        \"sales\" : [ {\n            \"firstName\" : \"Sally\",\n            \"lastName\"  : \"Green\",\n            \"age\"       : 27\n        }, {\n            \"firstName\" : \"Jim\",\n            \"lastName\"  : \"Galley\",\n            \"age\"       : 41\n        } ]\n    }\n\nand model.json:\n\n.. code-block:: json\n\n    {\n        \"accounting\" : [ {\n            \"lastName\"  : \"Doe\",\n            \"age\"       : 23\n        }, {\n            \"firstName\" : \"Mary\",\n            \"lastName\"  : \"Smith\",\n            \"age\"       : \"[0-9]+\"\n        } ],\n        \"sales\" : [ {\n            \"firstName\" : \"Sally\",\n            \"lastName\"  : \"(.*)\",\n            \"age\"       : 24\n        }, {\n            \"firstName\" : \"Jim\",\n            \"lastName\"  : \"Galley\",\n            \"age\"       : 41\n        } ]\n    }\n\nThen\n\n.. code-block:: bash\n\n    .json_diff.py -d --mode j2m new.json model.json\n\nShould produce output\n\n.. code-block:: bash\n\n    2015-03-24 12:59:08,576 - jsondiff - INFO - +: accounting[0].firstName=John\n    2015-03-24 12:59:08,576 - jsondiff - INFO - Changed: sales[0].age to 27 from 24\n\nAs you can see we find a match on numbers even though the type is \u2018int\u2019\n(Mary Smith\u2019s age). Also, even though we changed Sally\u2019s age, we were\nstill able to find a match on her entry with a regular expression\nrepresenting her last name.\n\n.. _Contributor\u2019s guide: https://github.com/bazaarvoice/json-regex-difftool/blob/master/CONTRIBUTING.md\n\n.. |Build Status| image:: https://travis-ci.org/bazaarvoice/json-regex-difftool.svg?branch=master\n   :target: https://travis-ci.org/bazaarvoice/json-regex-difftool", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bazaarvoice/json-regex-difftool.git", "keywords": "JSON,regular expressions,regex,diff,difftool", "license": "Apache Software License", "maintainer": null, "maintainer_email": null, "name": "json-regex-difftool", "package_url": "https://pypi.org/project/json-regex-difftool/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/json-regex-difftool/", "project_urls": {"Homepage": "https://github.com/bazaarvoice/json-regex-difftool.git"}, "release_url": "https://pypi.org/project/json-regex-difftool/0.2/", "requires_dist": null, "requires_python": null, "summary": "A tool for doing a comparison or difference of JSON documentswith regular expression support", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/bazaarvoice/json-regex-difftool\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f9b5c390488c5360728f39765fd46d696b7eda51/68747470733a2f2f7472617669732d63692e6f72672f62617a616172766f6963652f6a736f6e2d72656765782d64696666746f6f6c2e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Found a bug? Need a new feature? Want to help out? Check out the\n<a href=\"https://github.com/bazaarvoice/json-regex-difftool/blob/master/CONTRIBUTING.md\" rel=\"nofollow\">Contributor\u2019s guide</a></p>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>A python module for checking equivalence and difference of two JSONs\nwith regex support</p>\n<p>This repository will treat two types of JSON necessary for our purpose:</p>\n<ol>\n<li>Regular JSON where only data is stored</li>\n<li>Model JSON which will treat all keys and values as regular\nexpressions<ul>\n<li>Models will be used for comparing JSON objects to A model for\nequivalence with regex matching</li>\n<li>As JSON can be in a non-deterministic order, this is harder\nthan doing a straight string comparison</li>\n</ul>\n</li>\n</ol>\n<div id=\"there-are-four-modes-of-this-module\">\n<h3>There are four modes of this module</h3>\n<ol>\n<li>Regular JSON comparison</li>\n<li>JSON to Model comparison</li>\n<li>Regular JSON diff</li>\n<li>JSON to Model Diff</li>\n</ol>\n</div>\n</div>\n<div id=\"regular-json-comparison\">\n<h2>1. Regular JSON comparison</h2>\n<p>This simply tests whether two files contating json are the same</p>\n<pre>./json_diff.py path/to/file1.json path/to/file2.json\n</pre>\n<p>Returns True if equal or False otherwise.</p>\n<pre>.json_diff.py path/to/file1.json path/to/json_directory/\n</pre>\n<p>Returns the filename of the first match if there is one, or False\notherwise.</p>\n</div>\n<div id=\"json-to-model-comparison\">\n<h2>2. JSON to Model comparison</h2>\n<p>This mode tests whether a given JSON file matches a model when regular\nexpressions are evaluated.</p>\n<pre>./json_diff.py --mode j2m path/to/pure.json path/to/model.json\n</pre>\n<p>Returns True if the JSON and model match, False otherwise.</p>\n<pre>./json_diff.py --mode j2m path/to/pure.json path/to/model_directory\n</pre>\n<p>Returns the filename of the first match if there is one, or False\notherwise.</p>\n</div>\n<div id=\"regular-json-diff\">\n<h2>3. Regular JSON diff</h2>\n<p>This mode computes a file diff between two JSON files.</p>\n<p><em>The logic flow of this code is loosely based off of code found in\nhttps://github.com/monsur/jsoncompare</em></p>\n<p><em>Assuming</em></p>\n<p>old.json:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"accounting\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"firstName\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"John\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"lastName\"</span>  <span class=\"p\">:</span> <span class=\"s2\">\"Doe\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"age\"</span>       <span class=\"p\">:</span> <span class=\"mi\">23</span>\n    <span class=\"p\">},</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"firstName\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Mary\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"lastName\"</span>  <span class=\"p\">:</span> <span class=\"s2\">\"Smith\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"age\"</span>       <span class=\"p\">:</span> <span class=\"mi\">31</span>\n    <span class=\"p\">}</span> <span class=\"p\">],</span>\n    <span class=\"nt\">\"sales\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"firstName\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Sally\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"lastName\"</span>  <span class=\"p\">:</span> <span class=\"s2\">\"Green\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"age\"</span>       <span class=\"p\">:</span> <span class=\"mi\">27</span>\n    <span class=\"p\">},</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"firstName\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Jim\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"lastName\"</span>  <span class=\"p\">:</span> <span class=\"s2\">\"Galley\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"age\"</span>       <span class=\"p\">:</span> <span class=\"mi\">41</span>\n    <span class=\"p\">}</span> <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>and new.json:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"accounting\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"firstName\"</span> <span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"lastName\"</span>  <span class=\"p\">:</span> <span class=\"s2\">\"Doe\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"age\"</span>       <span class=\"p\">:</span> <span class=\"mi\">23</span>\n    <span class=\"p\">},</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"firstName\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Susan\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"lastName\"</span>  <span class=\"p\">:</span> <span class=\"s2\">\"Smith\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"age\"</span>       <span class=\"p\">:</span> <span class=\"mi\">31</span>\n    <span class=\"p\">}</span> <span class=\"p\">],</span>\n    <span class=\"nt\">\"sales\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"firstName\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Sally\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"lastName\"</span>  <span class=\"p\">:</span> <span class=\"s2\">\"Green\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"size\"</span>       <span class=\"p\">:</span> <span class=\"mi\">27</span>\n    <span class=\"p\">},</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"firstName\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Jim\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"age\"</span>       <span class=\"p\">:</span> <span class=\"mi\">41</span>\n    <span class=\"p\">}</span> <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Then</p>\n<p>Should produce output like:</p>\n<pre><span class=\"m\">2015</span>-03-24 <span class=\"m\">12</span>:59:08,576 - jsondiff - INFO - TypeDifference : accounting<span class=\"o\">[</span><span class=\"m\">0</span><span class=\"o\">]</span>.firstName - is bool: <span class=\"o\">(</span>True<span class=\"o\">)</span>, but was unicode: <span class=\"o\">(</span>John<span class=\"o\">)</span>\n<span class=\"m\">2015</span>-03-24 <span class=\"m\">12</span>:59:08,576 - jsondiff - INFO - Changed: accounting<span class=\"o\">[</span><span class=\"m\">1</span><span class=\"o\">]</span>.firstName to Susan from Mary\n<span class=\"m\">2015</span>-03-24 <span class=\"m\">12</span>:59:08,576 - jsondiff - INFO - +: sales<span class=\"o\">[</span><span class=\"m\">0</span><span class=\"o\">]</span>.size <span class=\"o\">=</span><span class=\"m\">27</span>\n<span class=\"m\">2015</span>-03-24 <span class=\"m\">12</span>:59:08,576 - jsondiff - INFO - -: sales<span class=\"o\">[</span><span class=\"m\">0</span><span class=\"o\">]</span>.age<span class=\"o\">=</span><span class=\"m\">27</span>\n<span class=\"m\">2015</span>-03-24 <span class=\"m\">12</span>:59:08,576 - jsondiff - INFO - -: sales<span class=\"o\">[</span><span class=\"m\">1</span><span class=\"o\">]</span>.lastName<span class=\"o\">=</span>Galley\n</pre>\n</div>\n<div id=\"json-to-model-diff\">\n<h2>4. JSON to Model Diff</h2>\n<p>This mode computes a file diff between a JSON file and a model with\nregular expressions.</p>\n<p><strong>*Note: at this time, we only support regular expression matching on\nsingleton values (that is values that are NOT a list or dictionary)*</strong></p>\n<p><em>Assuming</em></p>\n<p>new.json:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"accounting\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"firstName\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"John\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"lastName\"</span>  <span class=\"p\">:</span> <span class=\"s2\">\"Doe\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"age\"</span>       <span class=\"p\">:</span> <span class=\"mi\">23</span>\n    <span class=\"p\">},</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"firstName\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Mary\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"lastName\"</span>  <span class=\"p\">:</span> <span class=\"s2\">\"Smith\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"age\"</span>       <span class=\"p\">:</span> <span class=\"mi\">31</span>\n    <span class=\"p\">}</span> <span class=\"p\">],</span>\n    <span class=\"nt\">\"sales\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"firstName\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Sally\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"lastName\"</span>  <span class=\"p\">:</span> <span class=\"s2\">\"Green\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"age\"</span>       <span class=\"p\">:</span> <span class=\"mi\">27</span>\n    <span class=\"p\">},</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"firstName\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Jim\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"lastName\"</span>  <span class=\"p\">:</span> <span class=\"s2\">\"Galley\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"age\"</span>       <span class=\"p\">:</span> <span class=\"mi\">41</span>\n    <span class=\"p\">}</span> <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>and model.json:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"accounting\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"lastName\"</span>  <span class=\"p\">:</span> <span class=\"s2\">\"Doe\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"age\"</span>       <span class=\"p\">:</span> <span class=\"mi\">23</span>\n    <span class=\"p\">},</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"firstName\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Mary\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"lastName\"</span>  <span class=\"p\">:</span> <span class=\"s2\">\"Smith\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"age\"</span>       <span class=\"p\">:</span> <span class=\"s2\">\"[0-9]+\"</span>\n    <span class=\"p\">}</span> <span class=\"p\">],</span>\n    <span class=\"nt\">\"sales\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"firstName\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Sally\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"lastName\"</span>  <span class=\"p\">:</span> <span class=\"s2\">\"(.*)\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"age\"</span>       <span class=\"p\">:</span> <span class=\"mi\">24</span>\n    <span class=\"p\">},</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"firstName\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Jim\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"lastName\"</span>  <span class=\"p\">:</span> <span class=\"s2\">\"Galley\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"age\"</span>       <span class=\"p\">:</span> <span class=\"mi\">41</span>\n    <span class=\"p\">}</span> <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Then</p>\n<pre>.json_diff.py -d --mode j2m new.json model.json\n</pre>\n<p>Should produce output</p>\n<pre><span class=\"m\">2015</span>-03-24 <span class=\"m\">12</span>:59:08,576 - jsondiff - INFO - +: accounting<span class=\"o\">[</span><span class=\"m\">0</span><span class=\"o\">]</span>.firstName<span class=\"o\">=</span>John\n<span class=\"m\">2015</span>-03-24 <span class=\"m\">12</span>:59:08,576 - jsondiff - INFO - Changed: sales<span class=\"o\">[</span><span class=\"m\">0</span><span class=\"o\">]</span>.age to <span class=\"m\">27</span> from <span class=\"m\">24</span>\n</pre>\n<p>As you can see we find a match on numbers even though the type is \u2018int\u2019\n(Mary Smith\u2019s age). Also, even though we changed Sally\u2019s age, we were\nstill able to find a match on her entry with a regular expression\nrepresenting her last name.</p>\n</div>\n\n          </div>"}, "last_serial": 1477351, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "2f7a4826b2d792f3797e28cab6791da1", "sha256": "c063c1127ee179d4fe7180317472a485b86f6855ad9d47246f7ab24edd0b5a4b"}, "downloads": -1, "filename": "json-regex-difftool-0.1.tar.gz", "has_sig": false, "md5_digest": "2f7a4826b2d792f3797e28cab6791da1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7309, "upload_time": "2014-12-18T16:41:50", "upload_time_iso_8601": "2014-12-18T16:41:50.863011Z", "url": "https://files.pythonhosted.org/packages/af/53/93b5d58a3d660224e840eea540f7f5dbfaa42db45485b81bac247405f1a2/json-regex-difftool-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "8caaddb5d342636a8a8a9c388221554b", "sha256": "7d4703d8ea62b84486dd23689f941da92293939392200fd9ca4f28d1db9ac673"}, "downloads": -1, "filename": "json-regex-difftool-0.2.tar.gz", "has_sig": false, "md5_digest": "8caaddb5d342636a8a8a9c388221554b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8917, "upload_time": "2015-03-25T17:45:44", "upload_time_iso_8601": "2015-03-25T17:45:44.149987Z", "url": "https://files.pythonhosted.org/packages/69/1c/88bb4326988c34ea611e01d95d3641909b49af31bedb4f86741fb82bdb41/json-regex-difftool-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8caaddb5d342636a8a8a9c388221554b", "sha256": "7d4703d8ea62b84486dd23689f941da92293939392200fd9ca4f28d1db9ac673"}, "downloads": -1, "filename": "json-regex-difftool-0.2.tar.gz", "has_sig": false, "md5_digest": "8caaddb5d342636a8a8a9c388221554b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8917, "upload_time": "2015-03-25T17:45:44", "upload_time_iso_8601": "2015-03-25T17:45:44.149987Z", "url": "https://files.pythonhosted.org/packages/69/1c/88bb4326988c34ea611e01d95d3641909b49af31bedb4f86741fb82bdb41/json-regex-difftool-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:41 2020"}