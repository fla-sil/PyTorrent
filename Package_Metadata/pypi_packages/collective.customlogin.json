{"info": {"author": "PretaGov", "author_email": "software@pretaweb.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Plone", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "CustomLogin\n===========\n\nA way to customise the login behaviour by using content rules. Content rules\ncan now be triggered by a Unauhtorised trigger and new Redirect action allows\nadminstrators to send users to a custom form or another site. Rules can be\ncreated to redirect unauthorised users based on the content location, current\ngroups or permissions or any other content rule criteria. Because the redirect action uses \na tal expression you can include any additional information you need for you \ncustom login process.\n\nExamples\n--------\nFilling out a form to download a pdf. This can be achieved via creating a rule \nthat redirects to a PloneFormGen form and then applying the content rule to the \nprivate content objects you want to protect. Using a PFG script adapter,Plomino or Rapido, you\ncan use something like tokenrole to give permission to original object once\nthe user has filled out the form correctly. \n\nTechnical\n---------\n\nA PAS challenge that raises an event so that a custom event handler can \nissue a redirect, allowing for custom login pages.\n\nProvides a ContentRule and a ContentAction so that redirects can be managed via\ncontent rules.\n\nContributors\n============\n\nNote:  place names and roles of the people who contribute to this package\n       in this file, one to a line, like so:\n\n- Daniel Marks, Original Author\n- Dylan Jay, Architect\n\nChangelog\n=========\n1.0.1 (2017-05-08)\n------------------\n\n- forgot to include all the text files in the last release\n\n\n1.0 (2017-04-21)\n--------------------\n\n- Initial Release\n  []", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/collective.customlogin", "keywords": "plone", "license": "gpl", "maintainer": null, "maintainer_email": null, "name": "collective.customlogin", "package_url": "https://pypi.org/project/collective.customlogin/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.customlogin/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/collective/collective.customlogin"}, "release_url": "https://pypi.org/project/collective.customlogin/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "PAS Challenge plugin to allow custom login actions and redirects", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"customlogin\">\n<h2>CustomLogin</h2>\n<p>A way to customise the login behaviour by using content rules. Content rules\ncan now be triggered by a Unauhtorised trigger and new Redirect action allows\nadminstrators to send users to a custom form or another site. Rules can be\ncreated to redirect unauthorised users based on the content location, current\ngroups or permissions or any other content rule criteria. Because the redirect action uses\na tal expression you can include any additional information you need for you\ncustom login process.</p>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>Filling out a form to download a pdf. This can be achieved via creating a rule\nthat redirects to a PloneFormGen form and then applying the content rule to the\nprivate content objects you want to protect. Using a PFG script adapter,Plomino or Rapido, you\ncan use something like tokenrole to give permission to original object once\nthe user has filled out the form correctly.</p>\n</div>\n<div id=\"technical\">\n<h3>Technical</h3>\n<p>A PAS challenge that raises an event so that a custom event handler can\nissue a redirect, allowing for custom login pages.</p>\n<p>Provides a ContentRule and a ContentAction so that redirects can be managed via\ncontent rules.</p>\n</div>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<dl>\n<dt>Note:  place names and roles of the people who contribute to this package</dt>\n<dd>in this file, one to a line, like so:</dd>\n</dl>\n<ul>\n<li>Daniel Marks, Original Author</li>\n<li>Dylan Jay, Architect</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.0.1 (2017-05-08)</h3>\n<ul>\n<li>forgot to include all the text files in the last release</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.0 (2017-04-21)</h3>\n<ul>\n<li>Initial Release\n[]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4706107, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "dfe2c092644210f0e703a8b49a361592", "sha256": "3201ec08241868518b452251f3d14e48bd002a7ac933e2dbab7cb987bb41079e"}, "downloads": -1, "filename": "collective.customlogin-1.0.tar.gz", "has_sig": false, "md5_digest": "dfe2c092644210f0e703a8b49a361592", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5342, "upload_time": "2017-04-21T04:42:53", "upload_time_iso_8601": "2017-04-21T04:42:53.693273Z", "url": "https://files.pythonhosted.org/packages/59/d4/470be54e80c00f142384c5f2f7a8d5b58dd2f3dda5dbb5f2e0562aae28d5/collective.customlogin-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "aa9ed91cb9933dfd3cbdcab7afc635c4", "sha256": "d911a89db30c51ae76ac7182761426617bd94da9817b443575a377123d3024fa"}, "downloads": -1, "filename": "collective.customlogin-1.0.1.tar.gz", "has_sig": false, "md5_digest": "aa9ed91cb9933dfd3cbdcab7afc635c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18000, "upload_time": "2017-05-08T05:37:47", "upload_time_iso_8601": "2017-05-08T05:37:47.840816Z", "url": "https://files.pythonhosted.org/packages/07/d2/3d802e470c4251125a50047511b2bab46cffa71c649ed5316740ed7847a4/collective.customlogin-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aa9ed91cb9933dfd3cbdcab7afc635c4", "sha256": "d911a89db30c51ae76ac7182761426617bd94da9817b443575a377123d3024fa"}, "downloads": -1, "filename": "collective.customlogin-1.0.1.tar.gz", "has_sig": false, "md5_digest": "aa9ed91cb9933dfd3cbdcab7afc635c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18000, "upload_time": "2017-05-08T05:37:47", "upload_time_iso_8601": "2017-05-08T05:37:47.840816Z", "url": "https://files.pythonhosted.org/packages/07/d2/3d802e470c4251125a50047511b2bab46cffa71c649ed5316740ed7847a4/collective.customlogin-1.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:17:57 2020"}