{"info": {"author": "https://twitter.com/ArturZylinski", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Communications", "Topic :: Internet", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Networking", "Topic :: System :: Software Distribution", "Topic :: Utilities"], "description": "WIP: miPubSub\n=============\n\nPublish/Subscribe pattern build with RabbitMQ and Protocol Buffers.\n\nInstallation\n------------\n\nTo install miPubSub, use `pipenv <http://pipenv.org/>`_ (or pip):\n\n.. code-block:: bash\n\n    $ pipenv install -e git@github.com:azylinski/miPubSub.git@master#egg=miPubSub\n\n\nRun RabbitMQ\n------------\n\nIn order to use miPubSub, you need to have access to RabbitMQ server.\nTo setup locally with `docker <https://docs.docker.com/engine/installation/>`_:\n\n.. code-block:: bash\n\n    docker run -d \\\n      --name demo-rabbit \\\n      -p 5672:5672 \\\n      -p 15672:15672 \\\n      rabbitmq:3.6.15-management-alpine\n\n\nDefine events structure\n-----------------------\n\n.. code-block::\n\n    # schemas/events/user.proto\n\n    syntax = \"proto3\";\n\n    package events;\n\n\n    message User {\n      string name = 1;\n      string email = 2;\n    }\n\n\n.. code-block:: bash\n\n    # compile proto files\n    protoc -I=schemas/events/ --python_out=proto/ schemas/events/*.proto\n\n\nExample\n-------\n\n.. code-block:: python\n\n    # producer.py\n\n    from miPubSub import PubSub\n    from proto.user_pb2 import User\n\n\n    ps = PubSub('user_management')\n\n    u = User(name='Adam West', email='adam.west@mail.com')\n\n    ps.publish('signup_completed', u)\n\n\n.. code-block:: python\n\n    # consumer.py\n\n    from miPubSub import PubSub\n    from proto.user_pb2 import User\n\n\n    ps = PubSub('mailer')\n\n    @ps.listen('signup_completed', User)\n    def on_signup_completed(user):\n        # Send welcome email to: user.email\n        pass\n\n    ps.run()\n\n\nHow it works\n------------\n\nTBD\n\nMore details on rabbitmq pub/sub: https://www.rabbitmq.com/tutorials/tutorial-three-python.html\n\n\nAuthors\n-------\n\n- `@ArturZylinski <https://twitter.com/ArturZylinski>`_\n\n\nLicense\n-------\n\nThis project is licensed under the MIT License - see the `LICENSE <LICENSE>`_ file for details\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/azylinski/miPubSub", "keywords": "publish-subscribe rabbitmq protobuf docker async", "license": "", "maintainer": "", "maintainer_email": "", "name": "miPubSub", "package_url": "https://pypi.org/project/miPubSub/", "platform": "", "project_url": "https://pypi.org/project/miPubSub/", "project_urls": {"Homepage": "https://github.com/azylinski/miPubSub"}, "release_url": "https://pypi.org/project/miPubSub/0.1.dev1/", "requires_dist": ["pika (>=0.11.2)", "protobuf (>=3.5.1)"], "requires_python": "", "summary": "Publish/Subscribe pattern build with RabbitMQ and Protocol Buffers", "version": "0.1.dev1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Publish/Subscribe pattern build with RabbitMQ and Protocol Buffers.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install miPubSub, use <a href=\"http://pipenv.org/\" rel=\"nofollow\">pipenv</a> (or pip):</p>\n<pre>$ pipenv install -e git@github.com:azylinski/miPubSub.git@master#egg<span class=\"o\">=</span>miPubSub\n</pre>\n</div>\n<div id=\"run-rabbitmq\">\n<h2>Run RabbitMQ</h2>\n<p>In order to use miPubSub, you need to have access to RabbitMQ server.\nTo setup locally with <a href=\"https://docs.docker.com/engine/installation/\" rel=\"nofollow\">docker</a>:</p>\n<pre>docker run -d <span class=\"se\">\\\n</span>  --name demo-rabbit <span class=\"se\">\\\n</span>  -p <span class=\"m\">5672</span>:5672 <span class=\"se\">\\\n</span>  -p <span class=\"m\">15672</span>:15672 <span class=\"se\">\\\n</span>  rabbitmq:3.6.15-management-alpine\n</pre>\n</div>\n<div id=\"define-events-structure\">\n<h2>Define events structure</h2>\n<pre># schemas/events/user.proto\n\nsyntax = \"proto3\";\n\npackage events;\n\n\nmessage User {\n  string name = 1;\n  string email = 2;\n}\n</pre>\n<pre><span class=\"c1\"># compile proto files\n</span>protoc -I<span class=\"o\">=</span>schemas/events/ --python_out<span class=\"o\">=</span>proto/ schemas/events/*.proto\n</pre>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre><span class=\"c1\"># producer.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">miPubSub</span> <span class=\"kn\">import</span> <span class=\"n\">PubSub</span>\n<span class=\"kn\">from</span> <span class=\"nn\">proto.user_pb2</span> <span class=\"kn\">import</span> <span class=\"n\">User</span>\n\n\n<span class=\"n\">ps</span> <span class=\"o\">=</span> <span class=\"n\">PubSub</span><span class=\"p\">(</span><span class=\"s1\">'user_management'</span><span class=\"p\">)</span>\n\n<span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Adam West'</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s1\">'adam.west@mail.com'</span><span class=\"p\">)</span>\n\n<span class=\"n\">ps</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">(</span><span class=\"s1\">'signup_completed'</span><span class=\"p\">,</span> <span class=\"n\">u</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># consumer.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">miPubSub</span> <span class=\"kn\">import</span> <span class=\"n\">PubSub</span>\n<span class=\"kn\">from</span> <span class=\"nn\">proto.user_pb2</span> <span class=\"kn\">import</span> <span class=\"n\">User</span>\n\n\n<span class=\"n\">ps</span> <span class=\"o\">=</span> <span class=\"n\">PubSub</span><span class=\"p\">(</span><span class=\"s1\">'mailer'</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@ps</span><span class=\"o\">.</span><span class=\"n\">listen</span><span class=\"p\">(</span><span class=\"s1\">'signup_completed'</span><span class=\"p\">,</span> <span class=\"n\">User</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_signup_completed</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Send welcome email to: user.email</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"n\">ps</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"how-it-works\">\n<h2>How it works</h2>\n<p>TBD</p>\n<p>More details on rabbitmq pub/sub: <a href=\"https://www.rabbitmq.com/tutorials/tutorial-three-python.html\" rel=\"nofollow\">https://www.rabbitmq.com/tutorials/tutorial-three-python.html</a></p>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<ul>\n<li><a href=\"https://twitter.com/ArturZylinski\" rel=\"nofollow\">@ArturZylinski</a></li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> file for details</p>\n</div>\n\n          </div>"}, "last_serial": 3522235, "releases": {"0.1.dev1": [{"comment_text": "", "digests": {"md5": "e0e15bcb5b957504c95674b19865691a", "sha256": "a44600835792fc378d3ab7614e2e5e41a0423fc585316a38e2ddb73113c12548"}, "downloads": -1, "filename": "miPubSub-0.1.dev1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e0e15bcb5b957504c95674b19865691a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5662, "upload_time": "2018-01-26T00:02:45", "upload_time_iso_8601": "2018-01-26T00:02:45.666518Z", "url": "https://files.pythonhosted.org/packages/99/43/6efd5c80a1a28ba4aff903228014aa06d1ebc6729f7a83570ecab73afdd7/miPubSub-0.1.dev1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e0e15bcb5b957504c95674b19865691a", "sha256": "a44600835792fc378d3ab7614e2e5e41a0423fc585316a38e2ddb73113c12548"}, "downloads": -1, "filename": "miPubSub-0.1.dev1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e0e15bcb5b957504c95674b19865691a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5662, "upload_time": "2018-01-26T00:02:45", "upload_time_iso_8601": "2018-01-26T00:02:45.666518Z", "url": "https://files.pythonhosted.org/packages/99/43/6efd5c80a1a28ba4aff903228014aa06d1ebc6729f7a83570ecab73afdd7/miPubSub-0.1.dev1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:54:10 2020"}