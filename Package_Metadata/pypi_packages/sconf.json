{"info": {"author": "khanrc", "author_email": "khanrc@naver.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "![](https://github.com/khanrc/sconf/workflows/build/badge.svg)\n[![codecov](https://codecov.io/gh/khanrc/sconf/branch/master/graph/badge.svg)](https://codecov.io/gh/khanrc/sconf)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/sconf)\n![PyPI](https://img.shields.io/pypi/v/sconf?color=blue)\n\n# sconf: Simple config system supporting CLI modification\n\nsconf is yaml-based simple config library.\n\n\n## Features\n\n- Supports merging multiple configs\n- Supports CLI modification\n- Supports coloring modified key-values\n\n\n## Install\n\n```\n$ pip install sconf\n```\n\n## Usage\n\n### Initialize\n\n#### Basic init\n\n```py\nfrom sconf import Config\n\ncfg = Config(default=\"configs/defaults.yaml\")\ncfg.argv_update()  # apply CLI modification\n```\n\n\n#### Init with argparse and multiple configs\n\n```py\nimport argparse\nfrom sconf import Config\n\nparser = argparse.ArgumentParser()\nparser.add_argument(\"name\")\nparser.add_argument(\"config_paths\", nargs=\"*\")\nparser.add_argument(\"--show\", action=\"store_true\", default=False)\nargs, left_argv = parser.parse_known_args()\n\n# merging multiple configs if given\ncfg = Config(*args.config_paths, default=\"configs/defaults.yaml\")\ncfg.argv_update(left_argv)\n```\n\n\n### Dumps\n\nsconf dumps contents with coloring modified items.\n\n```py\nprint(cfg.dumps())\n\n# If you do not want to colorize:\nprint(cfg.dumps(modified_color=None))\n```\n\n### Access\n\n- Item access with dictionary-like interfaces:\n\n```py\n# access\nprint(cfg['key'])\nprint(cfg['key1']['key2'])\n\n# get\nprint(cfg.get('non-key', 'default-value'))\n\n# unpacking\nfunction(**cfg['model'])\n```\n\n- Attribute access:\n\n```\nprint(cfg.key)\nprint(cfg.key1.key2)\n```\n\n- **Note** that the attribute access returns object method for the duplicated key, unlike the item access.\n\n```\ncfg = Config({'get': 2})\n\nprint(cfg['get'])  # 2\nprint(cfg.get)  # method\n```\n\n### CLI modification\n\nsconf supports CLI modification like argparse. Also you can access to the child key using dot.\n\n```\n# yaml example\nbatch_size: 64\nmodel:\n    encoder:\n        n_channels: 64\n    decoder:\n        n_channels: 64\n```\n\n- CLI modification:\n\n```\n> python train.py --batch_size 128 --model.encoder.n_channels 32\n```\n\n- Accessing via partial key is also available:\n\n```\n> python train.py --encoder.n_channels 32\n```\n\n- Use triple dashs `---` if you want to modify multiple keys:\n\n```\n# modifying encoder.n_channels and decoder.n_channels both.\n> python train.py ---n_channels 32\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/khanrc/sconf", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sconf", "package_url": "https://pypi.org/project/sconf/", "platform": "", "project_url": "https://pypi.org/project/sconf/", "project_urls": {"Homepage": "https://github.com/khanrc/sconf"}, "release_url": "https://pypi.org/project/sconf/0.2.1/", "requires_dist": ["ruamel.yaml", "munch"], "requires_python": ">=3.6", "summary": "Simple config supporting CLI modification", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/04cb4f23841f6fbf191a7db509ad106c86486170/68747470733a2f2f6769746875622e636f6d2f6b68616e72632f73636f6e662f776f726b666c6f77732f6275696c642f62616467652e737667\">\n<a href=\"https://codecov.io/gh/khanrc/sconf\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/572015475a9339d3f796e58b905387b32052a7cc/68747470733a2f2f636f6465636f762e696f2f67682f6b68616e72632f73636f6e662f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a30d98664a4d60a2247bb102b161039d89c2b2d4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f73636f6e66\">\n<img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49ed8742ec75e0573adfcd5e32eb9d8769dbe68a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73636f6e663f636f6c6f723d626c7565\"></p>\n<h1>sconf: Simple config system supporting CLI modification</h1>\n<p>sconf is yaml-based simple config library.</p>\n<h2>Features</h2>\n<ul>\n<li>Supports merging multiple configs</li>\n<li>Supports CLI modification</li>\n<li>Supports coloring modified key-values</li>\n</ul>\n<h2>Install</h2>\n<pre><code>$ pip install sconf\n</code></pre>\n<h2>Usage</h2>\n<h3>Initialize</h3>\n<h4>Basic init</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sconf</span> <span class=\"kn\">import</span> <span class=\"n\">Config</span>\n\n<span class=\"n\">cfg</span> <span class=\"o\">=</span> <span class=\"n\">Config</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s2\">\"configs/defaults.yaml\"</span><span class=\"p\">)</span>\n<span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">argv_update</span><span class=\"p\">()</span>  <span class=\"c1\"># apply CLI modification</span>\n</pre>\n<h4>Init with argparse and multiple configs</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sconf</span> <span class=\"kn\">import</span> <span class=\"n\">Config</span>\n\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">()</span>\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"name\"</span><span class=\"p\">)</span>\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"config_paths\"</span><span class=\"p\">,</span> <span class=\"n\">nargs</span><span class=\"o\">=</span><span class=\"s2\">\"*\"</span><span class=\"p\">)</span>\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"--show\"</span><span class=\"p\">,</span> <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s2\">\"store_true\"</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">left_argv</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_known_args</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># merging multiple configs if given</span>\n<span class=\"n\">cfg</span> <span class=\"o\">=</span> <span class=\"n\">Config</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">config_paths</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s2\">\"configs/defaults.yaml\"</span><span class=\"p\">)</span>\n<span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">argv_update</span><span class=\"p\">(</span><span class=\"n\">left_argv</span><span class=\"p\">)</span>\n</pre>\n<h3>Dumps</h3>\n<p>sconf dumps contents with coloring modified items.</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># If you do not want to colorize:</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">modified_color</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">))</span>\n</pre>\n<h3>Access</h3>\n<ul>\n<li>Item access with dictionary-like interfaces:</li>\n</ul>\n<pre><span class=\"c1\"># access</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s1\">'key'</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s1\">'key1'</span><span class=\"p\">][</span><span class=\"s1\">'key2'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># get</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'non-key'</span><span class=\"p\">,</span> <span class=\"s1\">'default-value'</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># unpacking</span>\n<span class=\"n\">function</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s1\">'model'</span><span class=\"p\">])</span>\n</pre>\n<ul>\n<li>Attribute access:</li>\n</ul>\n<pre><code>print(cfg.key)\nprint(cfg.key1.key2)\n</code></pre>\n<ul>\n<li><strong>Note</strong> that the attribute access returns object method for the duplicated key, unlike the item access.</li>\n</ul>\n<pre><code>cfg = Config({'get': 2})\n\nprint(cfg['get'])  # 2\nprint(cfg.get)  # method\n</code></pre>\n<h3>CLI modification</h3>\n<p>sconf supports CLI modification like argparse. Also you can access to the child key using dot.</p>\n<pre><code># yaml example\nbatch_size: 64\nmodel:\n    encoder:\n        n_channels: 64\n    decoder:\n        n_channels: 64\n</code></pre>\n<ul>\n<li>CLI modification:</li>\n</ul>\n<pre><code>&gt; python train.py --batch_size 128 --model.encoder.n_channels 32\n</code></pre>\n<ul>\n<li>Accessing via partial key is also available:</li>\n</ul>\n<pre><code>&gt; python train.py --encoder.n_channels 32\n</code></pre>\n<ul>\n<li>Use triple dashs <code>---</code> if you want to modify multiple keys:</li>\n</ul>\n<pre><code># modifying encoder.n_channels and decoder.n_channels both.\n&gt; python train.py ---n_channels 32\n</code></pre>\n\n          </div>"}, "last_serial": 6842305, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "fd3763eda30d4031127c5918043db091", "sha256": "43cd9e2dff699196a9cff5f5b9343e3cd06b792c358ef474772034bae3b9c928"}, "downloads": -1, "filename": "sconf-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fd3763eda30d4031127c5918043db091", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5737, "upload_time": "2019-12-10T14:23:10", "upload_time_iso_8601": "2019-12-10T14:23:10.128744Z", "url": "https://files.pythonhosted.org/packages/fd/3a/1cf84d8efbf4c83e1c583c742281e1db391c676fc308a5432fa3d1c16aaf/sconf-0.1-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "795db90fbd87df10eced0ac3a4943e07", "sha256": "5132b9ea2eef8629da2d36ad73707efdb34aaeeff3c398d4b2e10298aea71d68"}, "downloads": -1, "filename": "sconf-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "795db90fbd87df10eced0ac3a4943e07", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6624, "upload_time": "2019-12-10T14:33:33", "upload_time_iso_8601": "2019-12-10T14:33:33.924065Z", "url": "https://files.pythonhosted.org/packages/99/bc/8aa62d5b4ba26fa8d0fedb1e09ab2e62c9b1b7d9cbf993b8baaaff2eba1f/sconf-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b9bff59ab965124dfd13a5ae5a6546bf", "sha256": "e0f9ced253e57c459ebc94ab412ede38cecb49fb35679f77c0b61c4c8a4796bf"}, "downloads": -1, "filename": "sconf-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b9bff59ab965124dfd13a5ae5a6546bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6860, "upload_time": "2020-02-05T08:55:03", "upload_time_iso_8601": "2020-02-05T08:55:03.408479Z", "url": "https://files.pythonhosted.org/packages/1e/6b/b32fc2317819c63e6fb74df7a8f03e6425db1ee63e594f84111d4bccfb6e/sconf-0.1.2-py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c65b953a78e96a2c7944299eaf47a0d4", "sha256": "097aa9a6972b497e99194802a65fb5d0536acdc2565f952b5d8e7fc336ab8fda"}, "downloads": -1, "filename": "sconf-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c65b953a78e96a2c7944299eaf47a0d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7517, "upload_time": "2020-03-19T08:31:57", "upload_time_iso_8601": "2020-03-19T08:31:57.562756Z", "url": "https://files.pythonhosted.org/packages/a4/b5/891cef73eb831ba3691c365aef741a339bfe99bdfc7ec2054bc6504a576a/sconf-0.2.0-py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "4c353e5b336731c603992679d505b883", "sha256": "2d5879693786bcee29e12860566d8ac73883c3c4faec684d6141380401e0a831"}, "downloads": -1, "filename": "sconf-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4c353e5b336731c603992679d505b883", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7662, "upload_time": "2020-03-19T10:05:44", "upload_time_iso_8601": "2020-03-19T10:05:44.071041Z", "url": "https://files.pythonhosted.org/packages/81/37/300665b09ed6182e4a92ce02450ccaa15a91a8d78b3745f35ab9557e2561/sconf-0.2.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4c353e5b336731c603992679d505b883", "sha256": "2d5879693786bcee29e12860566d8ac73883c3c4faec684d6141380401e0a831"}, "downloads": -1, "filename": "sconf-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4c353e5b336731c603992679d505b883", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7662, "upload_time": "2020-03-19T10:05:44", "upload_time_iso_8601": "2020-03-19T10:05:44.071041Z", "url": "https://files.pythonhosted.org/packages/81/37/300665b09ed6182e4a92ce02450ccaa15a91a8d78b3745f35ab9557e2561/sconf-0.2.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:57:10 2020"}