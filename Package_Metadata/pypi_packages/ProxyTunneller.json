{"info": {"author": "Dubrovin Semyon", "author_email": "seven45@mail.ru", "bugtrack_url": null, "classifiers": [], "description": "ProxyTuneller\n=============\n\n|made-with-python| |PyPI-version| |Hit-Count| |Downloads|\n\n.. |made-with-python| image:: https://img.shields.io/badge/Made%20with-Python-1f425f.svg\n   :target: https://www.python.org/\n.. |PyPI-version| image:: https://badge.fury.io/py/ProxyTunneller.svg\n   :target: https://pypi.python.org/pypi/ProxyTunneller/\n.. |Hit-Count| image:: http://hits.dwyl.io/Seven45/ProxyTunneller.svg\n   :target: https://pypi.python.org/pypi/ProxyTunneller/\n.. |Downloads| image:: https://pepy.tech/badge/ProxyTunneller\n   :target: https://pepy.tech/project/ProxyTunneller\n\nLibrary for create/generation proxy tunnels.\n\nInstallation\n------------\n\n.. code-block:: rst\n\n  $ pip3 install ProxyTuneller\n\nExamples\n--------\n\nCreate proxy tunnel\n\n.. code-block:: python\n\n    import asyncio\n\n    from ProxyTunneller import Proxy, Tunnel\n\n\n    async def main():\n        inner_proxy = Proxy('http', '104.28.10.155', 80)\n        outer_proxy = Proxy('socks5', '5.9.143.59', 3128)\n        tunnel = Tunnel(inner_proxy, outer_proxy, verbose_func=print)\n        await tunnel.build()\n        print(tunnel.url)\n\n    if __name__ == '__main__':\n        asyncio.run(main())\n\nGenerate tunnels from proxy-pool\n\n.. code-block:: python\n\n    import asyncio\n\n    from ProxyTunneller import Proxy, TunnelGenerator\n\n\n    async def main():\n        inner_proxies = [\n            Proxy('http', '104.28.10.145', port)\n            for port in range(13010, 13030)\n        ]\n        outer_proxies = [\n            Proxy('socks5', '138.197.157.44', port)\n            for port in range(40055, 40200)\n        ]\n\n        queue = asyncio.Queue()\n        generator = TunnelGenerator(queue, inner_proxies, outer_proxies)\n        # support transparent tunnels\n        generator.allow_only_invisible_tunnels = False\n        # close each tunnel in 20 minutes after opening (0 - not close)\n        generator.tunnels_lifetime = 20*60\n        generator.run(traffic_writer=print) #  or any func for writing traffic\n        while True:\n            try:\n                tunnel = await asyncio.wait_for(queue.get(), 60)\n            except asyncio.TimeoutError:\n                break\n            print(tunnel.url)\n\n\n    if __name__ == '__main__':\n        asyncio.run(main())\n\nParallel running of generators for each proxy-provider\n\n.. code-block:: python\n\n    import asyncio\n    from typing import List\n\n    import databases\n    from ProxyTunneller import Proxy, TunnelGenerator, utils\n\n\n    db_url = '<URL_FOR_CONNECT_TO_YOUR_DATABASE>'\n    dataBase = databases.Database(db_url)\n\n\n    async def get_proxies() -> List[Proxy]:\n        if not dataBase.is_connected:\n            await dataBase.connect()\n        query = f'''SELECT * FROM proxies WHERE proxy_type IN ('http', 'socks4', 'socks5')'''\n        proxies = await dataBase.fetch_all(query)\n        proxies = list(map(lambda proxy: Proxy(proxy['proxy_type'],\n                                               proxy['host'],\n                                               proxy['port'],\n                                               proxy['provider_name']),\n                           proxies))\n        return proxies\n\n\n    async def fill_queue(queue: asyncio.Queue):\n        inner_proxies = [\n            Proxy('http', '1.0.0.101', port)\n            for port in range(13010, 13030)\n        ]\n        outer_proxies = await get_proxies()\n        grouped_proxy_lists = utils.group_objects_by_attr(outer_proxies, 'provider')\n\n        for proxy_list in grouped_proxy_lists:\n            generator = TunnelGenerator(queue, inner_proxies, proxy_list)\n            generator.run()\n\n\n    async def main():\n        queue = asyncio.Queue(maxsize=200)\n        await fill_queue(queue)\n        while True:\n            try:\n                tunnel = await asyncio.wait_for(queue.get(), 60)\n            except asyncio.TimeoutError:\n                await fill_queue(queue)\n                continue\n            print(str(tunnel))\n\n\n    if __name__ == '__main__':\n        asyncio.run(main())", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Seven45/ProxyTunneller", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ProxyTunneller", "package_url": "https://pypi.org/project/ProxyTunneller/", "platform": "", "project_url": "https://pypi.org/project/ProxyTunneller/", "project_urls": {"Homepage": "https://github.com/Seven45/ProxyTunneller"}, "release_url": "https://pypi.org/project/ProxyTunneller/0.3.15/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Library for create proxy tunnels", "version": "0.3.15", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://www.python.org/\" rel=\"nofollow\"><img alt=\"made-with-python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68a99107ffdf24c5fb2cc4bca38b7b662e501b97/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d616465253230776974682d507974686f6e2d3166343235662e737667\"></a> <a href=\"https://pypi.python.org/pypi/ProxyTunneller/\" rel=\"nofollow\"><img alt=\"PyPI-version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91c0dea7d19ce0cbb858c825650f933d4096750b/68747470733a2f2f62616467652e667572792e696f2f70792f50726f787954756e6e656c6c65722e737667\"></a> <a href=\"https://pypi.python.org/pypi/ProxyTunneller/\" rel=\"nofollow\"><img alt=\"Hit-Count\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8a452baa66d04a9b0fcc3e421765cd61bcfd484e/687474703a2f2f686974732e6477796c2e696f2f536576656e34352f50726f787954756e6e656c6c65722e737667\"></a> <a href=\"https://pepy.tech/project/ProxyTunneller\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81af89999ac39d67eebcfca821cfb528aa241df6/68747470733a2f2f706570792e746563682f62616467652f50726f787954756e6e656c6c6572\"></a></p>\n<p>Library for create/generation proxy tunnels.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip3 install ProxyTuneller\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Create proxy tunnel</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">ProxyTunneller</span> <span class=\"kn\">import</span> <span class=\"n\">Proxy</span><span class=\"p\">,</span> <span class=\"n\">Tunnel</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">inner_proxy</span> <span class=\"o\">=</span> <span class=\"n\">Proxy</span><span class=\"p\">(</span><span class=\"s1\">'http'</span><span class=\"p\">,</span> <span class=\"s1\">'104.28.10.155'</span><span class=\"p\">,</span> <span class=\"mi\">80</span><span class=\"p\">)</span>\n    <span class=\"n\">outer_proxy</span> <span class=\"o\">=</span> <span class=\"n\">Proxy</span><span class=\"p\">(</span><span class=\"s1\">'socks5'</span><span class=\"p\">,</span> <span class=\"s1\">'5.9.143.59'</span><span class=\"p\">,</span> <span class=\"mi\">3128</span><span class=\"p\">)</span>\n    <span class=\"n\">tunnel</span> <span class=\"o\">=</span> <span class=\"n\">Tunnel</span><span class=\"p\">(</span><span class=\"n\">inner_proxy</span><span class=\"p\">,</span> <span class=\"n\">outer_proxy</span><span class=\"p\">,</span> <span class=\"n\">verbose_func</span><span class=\"o\">=</span><span class=\"nb\">print</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">tunnel</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tunnel</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<p>Generate tunnels from proxy-pool</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">ProxyTunneller</span> <span class=\"kn\">import</span> <span class=\"n\">Proxy</span><span class=\"p\">,</span> <span class=\"n\">TunnelGenerator</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">inner_proxies</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">Proxy</span><span class=\"p\">(</span><span class=\"s1\">'http'</span><span class=\"p\">,</span> <span class=\"s1\">'104.28.10.145'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">port</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">13010</span><span class=\"p\">,</span> <span class=\"mi\">13030</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">outer_proxies</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">Proxy</span><span class=\"p\">(</span><span class=\"s1\">'socks5'</span><span class=\"p\">,</span> <span class=\"s1\">'138.197.157.44'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">port</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">40055</span><span class=\"p\">,</span> <span class=\"mi\">40200</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"n\">queue</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">Queue</span><span class=\"p\">()</span>\n    <span class=\"n\">generator</span> <span class=\"o\">=</span> <span class=\"n\">TunnelGenerator</span><span class=\"p\">(</span><span class=\"n\">queue</span><span class=\"p\">,</span> <span class=\"n\">inner_proxies</span><span class=\"p\">,</span> <span class=\"n\">outer_proxies</span><span class=\"p\">)</span>\n    <span class=\"c1\"># support transparent tunnels</span>\n    <span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">allow_only_invisible_tunnels</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n    <span class=\"c1\"># close each tunnel in 20 minutes after opening (0 - not close)</span>\n    <span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">tunnels_lifetime</span> <span class=\"o\">=</span> <span class=\"mi\">20</span><span class=\"o\">*</span><span class=\"mi\">60</span>\n    <span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">traffic_writer</span><span class=\"o\">=</span><span class=\"nb\">print</span><span class=\"p\">)</span> <span class=\"c1\">#  or any func for writing traffic</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">tunnel</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">wait_for</span><span class=\"p\">(</span><span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(),</span> <span class=\"mi\">60</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">TimeoutError</span><span class=\"p\">:</span>\n            <span class=\"k\">break</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tunnel</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<p>Parallel running of generators for each proxy-provider</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">List</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">databases</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ProxyTunneller</span> <span class=\"kn\">import</span> <span class=\"n\">Proxy</span><span class=\"p\">,</span> <span class=\"n\">TunnelGenerator</span><span class=\"p\">,</span> <span class=\"n\">utils</span>\n\n\n<span class=\"n\">db_url</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;URL_FOR_CONNECT_TO_YOUR_DATABASE&gt;'</span>\n<span class=\"n\">dataBase</span> <span class=\"o\">=</span> <span class=\"n\">databases</span><span class=\"o\">.</span><span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"n\">db_url</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">get_proxies</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Proxy</span><span class=\"p\">]:</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">dataBase</span><span class=\"o\">.</span><span class=\"n\">is_connected</span><span class=\"p\">:</span>\n        <span class=\"k\">await</span> <span class=\"n\">dataBase</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>\n    <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s1\">'''SELECT * FROM proxies WHERE proxy_type IN ('http', 'socks4', 'socks5')'''</span>\n    <span class=\"n\">proxies</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">dataBase</span><span class=\"o\">.</span><span class=\"n\">fetch_all</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">)</span>\n    <span class=\"n\">proxies</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">proxy</span><span class=\"p\">:</span> <span class=\"n\">Proxy</span><span class=\"p\">(</span><span class=\"n\">proxy</span><span class=\"p\">[</span><span class=\"s1\">'proxy_type'</span><span class=\"p\">],</span>\n                                           <span class=\"n\">proxy</span><span class=\"p\">[</span><span class=\"s1\">'host'</span><span class=\"p\">],</span>\n                                           <span class=\"n\">proxy</span><span class=\"p\">[</span><span class=\"s1\">'port'</span><span class=\"p\">],</span>\n                                           <span class=\"n\">proxy</span><span class=\"p\">[</span><span class=\"s1\">'provider_name'</span><span class=\"p\">]),</span>\n                       <span class=\"n\">proxies</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">proxies</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">fill_queue</span><span class=\"p\">(</span><span class=\"n\">queue</span><span class=\"p\">:</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">Queue</span><span class=\"p\">):</span>\n    <span class=\"n\">inner_proxies</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">Proxy</span><span class=\"p\">(</span><span class=\"s1\">'http'</span><span class=\"p\">,</span> <span class=\"s1\">'1.0.0.101'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">port</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">13010</span><span class=\"p\">,</span> <span class=\"mi\">13030</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">outer_proxies</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">get_proxies</span><span class=\"p\">()</span>\n    <span class=\"n\">grouped_proxy_lists</span> <span class=\"o\">=</span> <span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">group_objects_by_attr</span><span class=\"p\">(</span><span class=\"n\">outer_proxies</span><span class=\"p\">,</span> <span class=\"s1\">'provider'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">proxy_list</span> <span class=\"ow\">in</span> <span class=\"n\">grouped_proxy_lists</span><span class=\"p\">:</span>\n        <span class=\"n\">generator</span> <span class=\"o\">=</span> <span class=\"n\">TunnelGenerator</span><span class=\"p\">(</span><span class=\"n\">queue</span><span class=\"p\">,</span> <span class=\"n\">inner_proxies</span><span class=\"p\">,</span> <span class=\"n\">proxy_list</span><span class=\"p\">)</span>\n        <span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">queue</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">Queue</span><span class=\"p\">(</span><span class=\"n\">maxsize</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">fill_queue</span><span class=\"p\">(</span><span class=\"n\">queue</span><span class=\"p\">)</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">tunnel</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">wait_for</span><span class=\"p\">(</span><span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(),</span> <span class=\"mi\">60</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">TimeoutError</span><span class=\"p\">:</span>\n            <span class=\"k\">await</span> <span class=\"n\">fill_queue</span><span class=\"p\">(</span><span class=\"n\">queue</span><span class=\"p\">)</span>\n            <span class=\"k\">continue</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tunnel</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6621730, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "54c0be0f0cc6223d4b9f1d1fc4e67a8b", "sha256": "45688e0b1c71cf6b4e7bd3bb17a71b2174a8a04dd5e534bdb592afdc91218622"}, "downloads": -1, "filename": "ProxyTunneller-0.0.1.tar.gz", "has_sig": false, "md5_digest": "54c0be0f0cc6223d4b9f1d1fc4e67a8b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3855, "upload_time": "2019-11-27T08:04:28", "upload_time_iso_8601": "2019-11-27T08:04:28.948049Z", "url": "https://files.pythonhosted.org/packages/10/36/50a82c88136bb524c7d37dd92bace603fe90e0fcfc592933e836623818d2/ProxyTunneller-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "a09f11e1b59b786db38ec2b5e1bd2bc2", "sha256": "c95a8eca5a64924ee5a7cd802b7be46a92e2cfead0f0036446830e84f6239233"}, "downloads": -1, "filename": "ProxyTunneller-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a09f11e1b59b786db38ec2b5e1bd2bc2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3855, "upload_time": "2019-11-27T10:01:14", "upload_time_iso_8601": "2019-11-27T10:01:14.035421Z", "url": "https://files.pythonhosted.org/packages/19/96/089cbe7790e84df7a352818dbc8bcc842b9ebd397a3c6a82e797a89ad10f/ProxyTunneller-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "909ddf945d4957401695492c402a3ff3", "sha256": "fe88e45f791bcbceac6d44dc1f31057c731b70e1616a949e44362f159cfe3334"}, "downloads": -1, "filename": "ProxyTunneller-0.2.0.tar.gz", "has_sig": false, "md5_digest": "909ddf945d4957401695492c402a3ff3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3964, "upload_time": "2019-11-27T10:42:03", "upload_time_iso_8601": "2019-11-27T10:42:03.281555Z", "url": "https://files.pythonhosted.org/packages/f0/3b/a038f72d913254b2df3ea718f091034004b802195f9598d655df04cd6b5b/ProxyTunneller-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "1dccd1c7a84ad8eafcc05a78f59f3be2", "sha256": "658382fa48835aca4b0915fe95c46f5bdab6323e85ec75a1401171e1f9ea6ad8"}, "downloads": -1, "filename": "ProxyTunneller-0.2.1.tar.gz", "has_sig": false, "md5_digest": "1dccd1c7a84ad8eafcc05a78f59f3be2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3991, "upload_time": "2019-11-27T10:56:09", "upload_time_iso_8601": "2019-11-27T10:56:09.768153Z", "url": "https://files.pythonhosted.org/packages/70/01/277fb67a16688a4a6587ce925468f915fd58f6bdb38fca5acb23a4849ebf/ProxyTunneller-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "32925274e8ed19b9035d4776aaa49d51", "sha256": "87ab87d30ca6dcf635b19d095246ad93aa7557ea0e6c977bcbe91b15a1d09535"}, "downloads": -1, "filename": "ProxyTunneller-0.2.2.tar.gz", "has_sig": false, "md5_digest": "32925274e8ed19b9035d4776aaa49d51", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3910, "upload_time": "2019-11-27T11:00:28", "upload_time_iso_8601": "2019-11-27T11:00:28.403226Z", "url": "https://files.pythonhosted.org/packages/5f/8a/1243b96983ff843dd022c4cf87095bdfd0fa7ad9ba296affa3c8e4d5f64b/ProxyTunneller-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "2d9a528dc8affab37631ee2645c04aa9", "sha256": "dfaf3bf36b4b3e2f8c19d57f19063185fe8895f25de56bb1e92b43ab2bb89f47"}, "downloads": -1, "filename": "ProxyTunneller-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2d9a528dc8affab37631ee2645c04aa9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4525, "upload_time": "2019-11-28T08:03:02", "upload_time_iso_8601": "2019-11-28T08:03:02.670038Z", "url": "https://files.pythonhosted.org/packages/c3/6f/d4ce26af799783399ba318cfa4db7fe247aa56846628d7b088c3fb177457/ProxyTunneller-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "52ebad68769b0f2b5f62518b813ca324", "sha256": "5906622e8b000c9bf0cd8e5371e1d8586917d6c2fac1315d5abb89711dd6b15d"}, "downloads": -1, "filename": "ProxyTunneller-0.3.1.tar.gz", "has_sig": false, "md5_digest": "52ebad68769b0f2b5f62518b813ca324", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4601, "upload_time": "2019-11-28T10:25:32", "upload_time_iso_8601": "2019-11-28T10:25:32.350794Z", "url": "https://files.pythonhosted.org/packages/e6/1f/5558e7155f1074f29b8ce323694ece41e7a717655fc4c0284127d844e189/ProxyTunneller-0.3.1.tar.gz", "yanked": false}], "0.3.11": [{"comment_text": "", "digests": {"md5": "620a3ae892efab27e505aecf644d0185", "sha256": "6653a8eacc4cbc02579851754aa6c29355c872505aabe292f67118888095e989"}, "downloads": -1, "filename": "ProxyTunneller-0.3.11.tar.gz", "has_sig": false, "md5_digest": "620a3ae892efab27e505aecf644d0185", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4621, "upload_time": "2019-12-27T14:07:50", "upload_time_iso_8601": "2019-12-27T14:07:50.489861Z", "url": "https://files.pythonhosted.org/packages/d5/be/f1bf64e7619425b6e92c2cf1854493312ecb9ec81a359c4f443595329237/ProxyTunneller-0.3.11.tar.gz", "yanked": false}], "0.3.12": [{"comment_text": "", "digests": {"md5": "e22576878b18211affc050b2153f7c15", "sha256": "1c6a8b157884abd597a61ed9649f9a7803fd925b267b8f62390bda9761dcb921"}, "downloads": -1, "filename": "ProxyTunneller-0.3.12.tar.gz", "has_sig": false, "md5_digest": "e22576878b18211affc050b2153f7c15", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4603, "upload_time": "2019-12-27T14:13:39", "upload_time_iso_8601": "2019-12-27T14:13:39.836476Z", "url": "https://files.pythonhosted.org/packages/83/08/59eb2c785a95139237b49d5daf5d113853d334c15d60239a2ba3d549c59a/ProxyTunneller-0.3.12.tar.gz", "yanked": false}], "0.3.13": [{"comment_text": "", "digests": {"md5": "01fccbf2de605532dcd8fe794170d07a", "sha256": "a73b4438ff9b6c5cb04651bf42e5b6ec956a8f442577cc08fee3be79296ae1d0"}, "downloads": -1, "filename": "ProxyTunneller-0.3.13.tar.gz", "has_sig": false, "md5_digest": "01fccbf2de605532dcd8fe794170d07a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4604, "upload_time": "2020-01-27T10:13:02", "upload_time_iso_8601": "2020-01-27T10:13:02.518265Z", "url": "https://files.pythonhosted.org/packages/8c/f3/1936d265cff7c841abc5e8c49b03beadda68a5182967308271d2edf41495/ProxyTunneller-0.3.13.tar.gz", "yanked": false}], "0.3.14": [{"comment_text": "", "digests": {"md5": "d5a048fe884a94595e3c7df587f1320b", "sha256": "b64ab53a073ce585baffac2a18fdd6475fde23f57edb1ddf515bb2a685384f03"}, "downloads": -1, "filename": "ProxyTunneller-0.3.14.tar.gz", "has_sig": false, "md5_digest": "d5a048fe884a94595e3c7df587f1320b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4626, "upload_time": "2020-01-29T13:02:23", "upload_time_iso_8601": "2020-01-29T13:02:23.848461Z", "url": "https://files.pythonhosted.org/packages/39/8c/e2fcc8983a1437c024d14c01e8cb7931754b2f6bfb5d4677e1313cb02756/ProxyTunneller-0.3.14.tar.gz", "yanked": false}], "0.3.15": [{"comment_text": "", "digests": {"md5": "08299b22f382a07e86dd67d603ae890a", "sha256": "d309d22853a25d7c1dbce93b5457a01490467dd70e8379bf7bfb1c9b8204ce85"}, "downloads": -1, "filename": "ProxyTunneller-0.3.15.tar.gz", "has_sig": false, "md5_digest": "08299b22f382a07e86dd67d603ae890a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4624, "upload_time": "2020-02-13T07:58:16", "upload_time_iso_8601": "2020-02-13T07:58:16.194300Z", "url": "https://files.pythonhosted.org/packages/ba/fe/e682f231ce3e09fe2dedf7f05bc1017be68b54e5cf68848688e5fe0d269a/ProxyTunneller-0.3.15.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "f54af76f20a73ff490a99e10a9455e57", "sha256": "cb141e194227d5283a4eed2ebeabd96e59ae2981ab8f9898218e6f2f8dc402ee"}, "downloads": -1, "filename": "ProxyTunneller-0.3.2.tar.gz", "has_sig": false, "md5_digest": "f54af76f20a73ff490a99e10a9455e57", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4631, "upload_time": "2019-12-25T06:48:02", "upload_time_iso_8601": "2019-12-25T06:48:02.334631Z", "url": "https://files.pythonhosted.org/packages/37/e3/09b5d5d460e09e872e2524b9612fc9b127d5de7f1a7098c0c7a1e7541235/ProxyTunneller-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "88dec06b5ed6892b9dbe5d960dc3e431", "sha256": "1dd053b659d52a554d085e4d00af53a959f3dc6248cb9751b9e55dc12dd42578"}, "downloads": -1, "filename": "ProxyTunneller-0.3.3.tar.gz", "has_sig": false, "md5_digest": "88dec06b5ed6892b9dbe5d960dc3e431", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4631, "upload_time": "2019-12-25T07:10:31", "upload_time_iso_8601": "2019-12-25T07:10:31.451723Z", "url": "https://files.pythonhosted.org/packages/43/5f/dc3e00f670250499e21707f7c9b783685ec4e471cd61ff73e4a3624f4fe3/ProxyTunneller-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "980dd164fdffbe3911f3c43cf77e6501", "sha256": "6a7b806a89238da302fc334c75f46330b786633acf56816c261ee167a7148165"}, "downloads": -1, "filename": "ProxyTunneller-0.3.4.tar.gz", "has_sig": false, "md5_digest": "980dd164fdffbe3911f3c43cf77e6501", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4626, "upload_time": "2019-12-25T09:35:41", "upload_time_iso_8601": "2019-12-25T09:35:41.802628Z", "url": "https://files.pythonhosted.org/packages/37/8c/ab7d5bf4daa2a313fe0aae93534e6d2f43ca15f5c109979ab49d32c64efc/ProxyTunneller-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "dc8ade3975267d094d5bf9284c594d6c", "sha256": "153a6c14016c5455fe6430ee7f765c46dac5f8a28aeeccecba7b2aae7bc45904"}, "downloads": -1, "filename": "ProxyTunneller-0.3.5.tar.gz", "has_sig": false, "md5_digest": "dc8ade3975267d094d5bf9284c594d6c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4668, "upload_time": "2019-12-25T09:59:59", "upload_time_iso_8601": "2019-12-25T09:59:59.365772Z", "url": "https://files.pythonhosted.org/packages/ac/67/d8ec0a93997b512d15842fb27234dff7652e427067fedcec6dc2f7310b9b/ProxyTunneller-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "d1c6f5f372813487e8052f1713ecc756", "sha256": "0325d80524074c578e2774606470dd0f432b36e7fed803d72fd37b9efd1fc423"}, "downloads": -1, "filename": "ProxyTunneller-0.3.6.tar.gz", "has_sig": false, "md5_digest": "d1c6f5f372813487e8052f1713ecc756", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4629, "upload_time": "2019-12-26T06:24:33", "upload_time_iso_8601": "2019-12-26T06:24:33.602166Z", "url": "https://files.pythonhosted.org/packages/8c/7e/ac8d6b152dc7012065f3d0ba90b66ac3dc8f06f806cdce37da4c69413d5a/ProxyTunneller-0.3.6.tar.gz", "yanked": false}], "0.3.7": [{"comment_text": "", "digests": {"md5": "4cc1fc66ad27cbc001c5fa6365132774", "sha256": "42b55ee1d412532e5a2a5f471dde9e495cf6f964c98962973727c291245c0482"}, "downloads": -1, "filename": "ProxyTunneller-0.3.7.tar.gz", "has_sig": false, "md5_digest": "4cc1fc66ad27cbc001c5fa6365132774", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4595, "upload_time": "2019-12-26T08:20:35", "upload_time_iso_8601": "2019-12-26T08:20:35.780637Z", "url": "https://files.pythonhosted.org/packages/f7/2d/d9025a259b63f8cf349742e487fe18de43cb56574dd8741d589492f50940/ProxyTunneller-0.3.7.tar.gz", "yanked": false}], "0.3.8": [{"comment_text": "", "digests": {"md5": "b4c9051132aec8371fb2e01482b4061d", "sha256": "de544a5009629da3132ebb75ddf66504d8ca843bd7190c9b43214d1f2fa48a4f"}, "downloads": -1, "filename": "ProxyTunneller-0.3.8.tar.gz", "has_sig": false, "md5_digest": "b4c9051132aec8371fb2e01482b4061d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4614, "upload_time": "2019-12-26T10:50:36", "upload_time_iso_8601": "2019-12-26T10:50:36.808390Z", "url": "https://files.pythonhosted.org/packages/82/a0/9b13fbec2efd1e56ff73acc06352ead02b8861ed891b11f6100707e55775/ProxyTunneller-0.3.8.tar.gz", "yanked": false}], "0.3.9": [{"comment_text": "", "digests": {"md5": "c8ef279394585fde2c6ae1cceb39ea6b", "sha256": "aa82f2c3cf4f81e1e33d02561d6c50ba452d121605cf21b29b84a8da8f35f858"}, "downloads": -1, "filename": "ProxyTunneller-0.3.9.tar.gz", "has_sig": false, "md5_digest": "c8ef279394585fde2c6ae1cceb39ea6b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4628, "upload_time": "2019-12-27T09:49:08", "upload_time_iso_8601": "2019-12-27T09:49:08.147716Z", "url": "https://files.pythonhosted.org/packages/51/b6/0920078b4e5a7ab10900a9c5d27c530190e1f6b00b18b129430115983343/ProxyTunneller-0.3.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "08299b22f382a07e86dd67d603ae890a", "sha256": "d309d22853a25d7c1dbce93b5457a01490467dd70e8379bf7bfb1c9b8204ce85"}, "downloads": -1, "filename": "ProxyTunneller-0.3.15.tar.gz", "has_sig": false, "md5_digest": "08299b22f382a07e86dd67d603ae890a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4624, "upload_time": "2020-02-13T07:58:16", "upload_time_iso_8601": "2020-02-13T07:58:16.194300Z", "url": "https://files.pythonhosted.org/packages/ba/fe/e682f231ce3e09fe2dedf7f05bc1017be68b54e5cf68848688e5fe0d269a/ProxyTunneller-0.3.15.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:15 2020"}