{"info": {"author": "F\u00e1bio Mac\u00eado Mendes", "author_email": "fabiomacedomendes@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Software Development :: Libraries"], "description": "Django's class based generic views are a great way to reuse code and avoid\nboilerplate. In Django, however, each view is associated with a single URL. If\nyou want to reuse some behavior that involves multiple urls it is often\nnecessary to synchronize many different views. Think about a CRUD interface: it\nis not necessarily hard, but it can be both tedious and error prone.\n\nView packs gather a collection of views and url entry points together in a single\nreusable unity. Hence, instead of creating separate CreateView, DetailView,\nUpdateView, DeleteView, etc, we can simply subclass the CRUDViewPack view pack::\n\n    from viewpack import CRUDViewPack\n    from fooapp.models import FooModel\n\n\n    class FooCRUD(CRUDViewPack):\n        model = FooModel\n\nIn your urls.py, register all CRUD views as an include::\n\n    from django.conf import url\n    from views import FooCRUD\n\n\n    urlpatterns = [\n        ...,\n        url(r'^foo/', FooCRUD.as_include(namespace='foo')),\n    ]\n\nNow you have registered a simple CRUD interface for your `FooModel`. The next\nstep is to write the required templates and you're done! (In fact, if you are\nlazy and use Jinja, we even offer a few ready to use templates!)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-viewpack", "package_url": "https://pypi.org/project/django-viewpack/", "platform": "any", "project_url": "https://pypi.org/project/django-viewpack/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/django-viewpack/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "A short description for your project.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Django\u2019s class based generic views are a great way to reuse code and avoid\nboilerplate. In Django, however, each view is associated with a single URL. If\nyou want to reuse some behavior that involves multiple urls it is often\nnecessary to synchronize many different views. Think about a CRUD interface: it\nis not necessarily hard, but it can be both tedious and error prone.</p>\n<p>View packs gather a collection of views and url entry points together in a single\nreusable unity. Hence, instead of creating separate CreateView, DetailView,\nUpdateView, DeleteView, etc, we can simply subclass the CRUDViewPack view pack:</p>\n<pre>from viewpack import CRUDViewPack\nfrom fooapp.models import FooModel\n\n\nclass FooCRUD(CRUDViewPack):\n    model = FooModel\n</pre>\n<p>In your urls.py, register all CRUD views as an include:</p>\n<pre>from django.conf import url\nfrom views import FooCRUD\n\n\nurlpatterns = [\n    ...,\n    url(r'^foo/', FooCRUD.as_include(namespace='foo')),\n]\n</pre>\n<p>Now you have registered a simple CRUD interface for your <cite>FooModel</cite>. The next\nstep is to write the required templates and you\u2019re done! (In fact, if you are\nlazy and use Jinja, we even offer a few ready to use templates!)</p>\n\n          </div>"}, "last_serial": 2100917, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ed7b3760c5d0e04e1b7b8bcef029ebd9", "sha256": "6ee8e79005cf195ded14837f620ddfae7ecb953c7cfd664613d736c383cf39ee"}, "downloads": -1, "filename": "django-viewpack-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ed7b3760c5d0e04e1b7b8bcef029ebd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6007, "upload_time": "2016-05-01T02:10:50", "upload_time_iso_8601": "2016-05-01T02:10:50.590424Z", "url": "https://files.pythonhosted.org/packages/82/b7/9180389d910bd4d29e0e77e483bc510e5228995504f3de524276f660f186/django-viewpack-0.1.0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "e76b644340c60d40dededdce306b9b42", "sha256": "a938f6b510b1830a5217dc61076568b70fba3be798b063ae60488bc93794139d"}, "downloads": -1, "filename": "django-viewpack-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e76b644340c60d40dededdce306b9b42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20895, "upload_time": "2016-05-02T15:01:20", "upload_time_iso_8601": "2016-05-02T15:01:20.032487Z", "url": "https://files.pythonhosted.org/packages/47/22/97bb39ccfe29540899507a1843051dfc21c7d562f7fe6a10440b12d8fde5/django-viewpack-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "30ed86c26085fc7cf0dcb7060a352936", "sha256": "77f233e44fca41f97e1caf9bc507dbefb15928375cd2c63264c02f8806286c08"}, "downloads": -1, "filename": "django-viewpack-0.1.3.tar.gz", "has_sig": false, "md5_digest": "30ed86c26085fc7cf0dcb7060a352936", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20901, "upload_time": "2016-05-02T22:58:42", "upload_time_iso_8601": "2016-05-02T22:58:42.740225Z", "url": "https://files.pythonhosted.org/packages/a8/d8/e3afeeae719da56dc548db01ff3e763e7df8b613d3e1f816cade8eca0162/django-viewpack-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "a5388dd54ef6dba7767b415a72c52ad9", "sha256": "f779eb25910a1c97d9d3cbdf2e7629362574f0489f185feba08c1d1b57db8b40"}, "downloads": -1, "filename": "django-viewpack-0.1.4.tar.gz", "has_sig": false, "md5_digest": "a5388dd54ef6dba7767b415a72c52ad9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20912, "upload_time": "2016-05-05T15:07:54", "upload_time_iso_8601": "2016-05-05T15:07:54.335590Z", "url": "https://files.pythonhosted.org/packages/e0/eb/a081de727fba4ff320fdc22bdb9f2c338dcb0a52cad9a50ce9663a22d2d4/django-viewpack-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a5388dd54ef6dba7767b415a72c52ad9", "sha256": "f779eb25910a1c97d9d3cbdf2e7629362574f0489f185feba08c1d1b57db8b40"}, "downloads": -1, "filename": "django-viewpack-0.1.4.tar.gz", "has_sig": false, "md5_digest": "a5388dd54ef6dba7767b415a72c52ad9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20912, "upload_time": "2016-05-05T15:07:54", "upload_time_iso_8601": "2016-05-05T15:07:54.335590Z", "url": "https://files.pythonhosted.org/packages/e0/eb/a081de727fba4ff320fdc22bdb9f2c338dcb0a52cad9a50ce9663a22d2d4/django-viewpack-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:01 2020"}