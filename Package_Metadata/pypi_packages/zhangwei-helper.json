{"info": {"author": "zwzw911", "author_email": "zwzw911110@163.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows", "Programming Language :: Python :: 3"], "description": "#zhangwei_helper\nzhangwei_helper is a package include all common part,like function,enum,written \\\nby zhang wei(zwzw911)    \n## install    \n`pip install zhangwei-helper`    \n## content    \n### enum    \nSelfEnum    \n***description***: a module include self defined enum   \n***usage***:     \nimport zhangwei_helper.SelfEnum as self_enum  \n1. CpuBits: bits64/bits32    \n2. OsType: Windows/Linux    \n3. WindowsVersion: Windows7/Windows8/Windows10/Unknown    \n4. WindowsBits: Win32/Win64    \n5. PythonVersion: Python2/Python3/Unknown    \n6. ProxyType: Transparent/Anonymous/High_anonymous    \n7. BrowserType: FireFox/Chrome/All    \n\n### function     \n**os**     \n***description***: a module include some functions about os   \n***usage***:   \nimport zhangwei_helper.function.Os as zw_os     \n1. get_cpu_bits(): \u679a\u4e3e(CpuBits)\uff1acpu\u7684\u4f4d\u6570    \n2. get_os_type(): \u679a\u4e3e(OsType)\uff1aos\u7684\u7c7b\u578b\uff1awindows\u6216\u8005linux    \n3. get_windows_ver(): \u679a\u4e3e(WindowsVersion)\uff1awindows\u7684\u7248\u672c\uff087/8/10\uff09    \n4. get_windows_bits(): \u679a\u4e3e(WindowsBits)\uff1awindows\u7684\u4f4d\u6570\uff1a32\u6216\u800564    \n5. windows_login_as_admin(): Boolean\uff1a\u5f53\u524d\u662f\u5426\u4ee5admin\u767b\u5f55    \n6. get_python_major_version():\u679a\u4e3e(PythonVersion)\uff1a\u8fd4\u56depython\u7684\u5927\u7248\u672c\u53f7\uff1a2\u6216\u80053\u6216\u8005unknown \n\n**WindowsService**     \n***description***: a module include some functions about os     \n***usage***:    \nimport zhangwei_helper.function.WindowsServices as zw_winser   \n1. if_service_exists(): Boolean\uff1a\u670d\u52a1\u662f\u5426\u5b58\u5728    \n2. if_service_running(): Booleans:\u670d\u52a1\u662f\u5426\u8fd0\u884c    \n\n**Network**     \n***description***: a module include some functions about network         \n***usage***:   \nimport zhangwei_helper.function.Network as zw_network    \n1. extract_protocol_from_url(url)\uff1a\u83b7\u5f97\u534f\u8baehttp\u6216\u8005https\n2. extract_host_from_url(url)\uff1a\u83b7\u5f97host\n3. extract_base_url_from_url(url)\uff1a\u83b7\u5f97\u57fa\u7840url  https://github.com\n4. gen_proxies_from_ip(ip): \u6839\u636eIP\u751f\u6210request/request_html\u9700\u8981\u7684\u4ee3\u7406\n5. detect_if_need_proxy(url): Boolean:\u662f\u5426\u9700\u8981\u4ee3\u7406\n6. detect_if_proxy_usable(proxies, timeout=5, url='https://www.baidu.com'\uff09\uff1aBoolean\uff1a\u4ee3\u7406\u662f\u5426\u6709\u6548\n7. detect_url_exist(url, proxies, headers): url\u662f\u5426\u5b58\u5728\uff08\u8fd4\u56de404\uff09\n8. send_request_get_response(**args): request_html\u6216\u8005error\u3002\u540c\u6b65\u83b7\u5f97\u9875\u9762html\n9. async_send_request_get_response(**args): request_html\u6216\u8005error\u3002\u5f02\u6b65\u83b7\u5f97\u9875\u9762html\n10. download_file(url,save_path): Error(\u4e0b\u8f7d\u5931\u8d25\uff09\uff1bNone\uff08\u4e0b\u8f7d\u6210\u529f\uff09\n11. download_unzip_chrome_driver     \n12. download_unzip_firefox_driver      \n\n**Software**     \n***description***: a module include some functions about software             \n***usage***:   \n1. check_minimum_python_version(ver=str): Error\uff08python\u7248\u672c\u4e0d\u5339\u914d\u6216\u8005\u672a\u5b89\u88c5\uff09\uff1bpython\u5b89\u88c5\u8def\u5f84\n2. check_firefox_version(): None\uff08\u672a\u5b89\u88c5FF\uff09\uff1bFF\u7248\u672c\uff08\u81ea\u52a8\u8865\u9f50.0\uff09\n3. check_chrome_version(): None\uff08\u672a\u5b89\u88c5\uff09\uff1achrome\u7248\u672c\n4. check_driver_exist(python_dir, browser_type): \u68c0\u67e5\u5bf9\u5e94\u7684driver\u5728python\u76ee\u5f55\u4e0b\u662f\u5426\u5b58\u5728\n5. unzip_file():\u89e3\u538bzip\u6587\u4ef6\u5230\u6307\u5b9a\u76ee\u5f55\n6. is_valid_zip_file():\u662f\u5426\u4e3a\u5408\u683c\u7684zip\u6587\u4ef6\n\n\n### change history\n0.0.1  add SelfEnum/Os/WindowsServices  \n0.0.2  add const/Const.py, function/Network.py, function/Software  \n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zwzw911/zhangwei_helper", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "zhangwei-helper", "package_url": "https://pypi.org/project/zhangwei-helper/", "platform": "", "project_url": "https://pypi.org/project/zhangwei-helper/", "project_urls": {"Homepage": "https://github.com/zwzw911/zhangwei_helper"}, "release_url": "https://pypi.org/project/zhangwei-helper/0.0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A package include all common part,like function,enum,written                  by zhangwei(zwzw911)", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>#zhangwei_helper\nzhangwei_helper is a package include all common part,like function,enum,written <br>\nby zhang wei(zwzw911)</p>\n<h2>install</h2>\n<p><code>pip install zhangwei-helper</code></p>\n<h2>content</h2>\n<h3>enum</h3>\n<p>SelfEnum<br>\n<em><strong>description</strong></em>: a module include self defined enum<br>\n<em><strong>usage</strong></em>:<br>\nimport zhangwei_helper.SelfEnum as self_enum</p>\n<ol>\n<li>CpuBits: bits64/bits32</li>\n<li>OsType: Windows/Linux</li>\n<li>WindowsVersion: Windows7/Windows8/Windows10/Unknown</li>\n<li>WindowsBits: Win32/Win64</li>\n<li>PythonVersion: Python2/Python3/Unknown</li>\n<li>ProxyType: Transparent/Anonymous/High_anonymous</li>\n<li>BrowserType: FireFox/Chrome/All</li>\n</ol>\n<h3>function</h3>\n<p><strong>os</strong><br>\n<em><strong>description</strong></em>: a module include some functions about os<br>\n<em><strong>usage</strong></em>:<br>\nimport zhangwei_helper.function.Os as zw_os</p>\n<ol>\n<li>get_cpu_bits(): \u679a\u4e3e(CpuBits)\uff1acpu\u7684\u4f4d\u6570</li>\n<li>get_os_type(): \u679a\u4e3e(OsType)\uff1aos\u7684\u7c7b\u578b\uff1awindows\u6216\u8005linux</li>\n<li>get_windows_ver(): \u679a\u4e3e(WindowsVersion)\uff1awindows\u7684\u7248\u672c\uff087/8/10\uff09</li>\n<li>get_windows_bits(): \u679a\u4e3e(WindowsBits)\uff1awindows\u7684\u4f4d\u6570\uff1a32\u6216\u800564</li>\n<li>windows_login_as_admin(): Boolean\uff1a\u5f53\u524d\u662f\u5426\u4ee5admin\u767b\u5f55</li>\n<li>get_python_major_version():\u679a\u4e3e(PythonVersion)\uff1a\u8fd4\u56depython\u7684\u5927\u7248\u672c\u53f7\uff1a2\u6216\u80053\u6216\u8005unknown</li>\n</ol>\n<p><strong>WindowsService</strong><br>\n<em><strong>description</strong></em>: a module include some functions about os<br>\n<em><strong>usage</strong></em>:<br>\nimport zhangwei_helper.function.WindowsServices as zw_winser</p>\n<ol>\n<li>if_service_exists(): Boolean\uff1a\u670d\u52a1\u662f\u5426\u5b58\u5728</li>\n<li>if_service_running(): Booleans:\u670d\u52a1\u662f\u5426\u8fd0\u884c</li>\n</ol>\n<p><strong>Network</strong><br>\n<em><strong>description</strong></em>: a module include some functions about network<br>\n<em><strong>usage</strong></em>:<br>\nimport zhangwei_helper.function.Network as zw_network</p>\n<ol>\n<li>extract_protocol_from_url(url)\uff1a\u83b7\u5f97\u534f\u8baehttp\u6216\u8005https</li>\n<li>extract_host_from_url(url)\uff1a\u83b7\u5f97host</li>\n<li>extract_base_url_from_url(url)\uff1a\u83b7\u5f97\u57fa\u7840url  <a href=\"https://github.com\" rel=\"nofollow\">https://github.com</a></li>\n<li>gen_proxies_from_ip(ip): \u6839\u636eIP\u751f\u6210request/request_html\u9700\u8981\u7684\u4ee3\u7406</li>\n<li>detect_if_need_proxy(url): Boolean:\u662f\u5426\u9700\u8981\u4ee3\u7406</li>\n<li>detect_if_proxy_usable(proxies, timeout=5, url='<a href=\"https://www.baidu.com'%EF%BC%89%EF%BC%9ABoolean%EF%BC%9A%E4%BB%A3%E7%90%86%E6%98%AF%E5%90%A6%E6%9C%89%E6%95%88\" rel=\"nofollow\">https://www.baidu.com'\uff09\uff1aBoolean\uff1a\u4ee3\u7406\u662f\u5426\u6709\u6548</a></li>\n<li>detect_url_exist(url, proxies, headers): url\u662f\u5426\u5b58\u5728\uff08\u8fd4\u56de404\uff09</li>\n<li>send_request_get_response(**args): request_html\u6216\u8005error\u3002\u540c\u6b65\u83b7\u5f97\u9875\u9762html</li>\n<li>async_send_request_get_response(**args): request_html\u6216\u8005error\u3002\u5f02\u6b65\u83b7\u5f97\u9875\u9762html</li>\n<li>download_file(url,save_path): Error(\u4e0b\u8f7d\u5931\u8d25\uff09\uff1bNone\uff08\u4e0b\u8f7d\u6210\u529f\uff09</li>\n<li>download_unzip_chrome_driver</li>\n<li>download_unzip_firefox_driver</li>\n</ol>\n<p><strong>Software</strong><br>\n<em><strong>description</strong></em>: a module include some functions about software<br>\n<em><strong>usage</strong></em>:</p>\n<ol>\n<li>check_minimum_python_version(ver=str): Error\uff08python\u7248\u672c\u4e0d\u5339\u914d\u6216\u8005\u672a\u5b89\u88c5\uff09\uff1bpython\u5b89\u88c5\u8def\u5f84</li>\n<li>check_firefox_version(): None\uff08\u672a\u5b89\u88c5FF\uff09\uff1bFF\u7248\u672c\uff08\u81ea\u52a8\u8865\u9f50.0\uff09</li>\n<li>check_chrome_version(): None\uff08\u672a\u5b89\u88c5\uff09\uff1achrome\u7248\u672c</li>\n<li>check_driver_exist(python_dir, browser_type): \u68c0\u67e5\u5bf9\u5e94\u7684driver\u5728python\u76ee\u5f55\u4e0b\u662f\u5426\u5b58\u5728</li>\n<li>unzip_file():\u89e3\u538bzip\u6587\u4ef6\u5230\u6307\u5b9a\u76ee\u5f55</li>\n<li>is_valid_zip_file():\u662f\u5426\u4e3a\u5408\u683c\u7684zip\u6587\u4ef6</li>\n</ol>\n<h3>change history</h3>\n<p>0.0.1  add SelfEnum/Os/WindowsServices<br>\n0.0.2  add const/Const.py, function/Network.py, function/Software</p>\n\n          </div>"}, "last_serial": 7185575, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "05d71e1b641460191ebc0c44e273f1d2", "sha256": "01c25992e6b50fbc34b0bca239a7bb0a217412bfe9ea00f533c8089fad508623"}, "downloads": -1, "filename": "zhangwei_helper-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "05d71e1b641460191ebc0c44e273f1d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6185, "upload_time": "2020-05-06T14:06:37", "upload_time_iso_8601": "2020-05-06T14:06:37.644517Z", "url": "https://files.pythonhosted.org/packages/3d/a2/53ba9d745d1a136b66aef9d41c6f3e29e17ee9301088ab91a1d26221458b/zhangwei_helper-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56941268039b89fc87f26eeb09064948", "sha256": "00ef6656bfc059c283cecb7b40736403ebfe2021c3d9b345a7a96784ee4f8ef0"}, "downloads": -1, "filename": "zhangwei_helper-0.0.1.tar.gz", "has_sig": false, "md5_digest": "56941268039b89fc87f26eeb09064948", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4210, "upload_time": "2020-05-06T14:06:39", "upload_time_iso_8601": "2020-05-06T14:06:39.609638Z", "url": "https://files.pythonhosted.org/packages/9d/0c/d973c9ee4ae12e9076dbb7ecb740eb270f4568a2981baa3d99df4264dcdd/zhangwei_helper-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d5cb32cdfc9cf7c5af6022df18eb54cb", "sha256": "34f2e3a867fe1c07a669130e6ed1400acc640c421a1222786ee1bb18f2eacea7"}, "downloads": -1, "filename": "zhangwei_helper-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d5cb32cdfc9cf7c5af6022df18eb54cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12701, "upload_time": "2020-05-07T05:55:53", "upload_time_iso_8601": "2020-05-07T05:55:53.410771Z", "url": "https://files.pythonhosted.org/packages/fc/bf/a2ffcaef9a6708ed7ebe70e654a34b455065920598e76b52ca8fdbf3ccec/zhangwei_helper-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8031cdd00fda792880c1341a3a1605a", "sha256": "7ecfdef3b58f27a8c283084263dc0205b98c761756b44d9d825353eb32b17c48"}, "downloads": -1, "filename": "zhangwei_helper-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f8031cdd00fda792880c1341a3a1605a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9899, "upload_time": "2020-05-07T05:55:54", "upload_time_iso_8601": "2020-05-07T05:55:54.815054Z", "url": "https://files.pythonhosted.org/packages/34/38/57f790829f46c5e43a79684baaeb25fe6d7ba604c934e34488ff2e0aa575/zhangwei_helper-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d5cb32cdfc9cf7c5af6022df18eb54cb", "sha256": "34f2e3a867fe1c07a669130e6ed1400acc640c421a1222786ee1bb18f2eacea7"}, "downloads": -1, "filename": "zhangwei_helper-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d5cb32cdfc9cf7c5af6022df18eb54cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12701, "upload_time": "2020-05-07T05:55:53", "upload_time_iso_8601": "2020-05-07T05:55:53.410771Z", "url": "https://files.pythonhosted.org/packages/fc/bf/a2ffcaef9a6708ed7ebe70e654a34b455065920598e76b52ca8fdbf3ccec/zhangwei_helper-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8031cdd00fda792880c1341a3a1605a", "sha256": "7ecfdef3b58f27a8c283084263dc0205b98c761756b44d9d825353eb32b17c48"}, "downloads": -1, "filename": "zhangwei_helper-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f8031cdd00fda792880c1341a3a1605a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9899, "upload_time": "2020-05-07T05:55:54", "upload_time_iso_8601": "2020-05-07T05:55:54.815054Z", "url": "https://files.pythonhosted.org/packages/34/38/57f790829f46c5e43a79684baaeb25fe6d7ba604c934e34488ff2e0aa575/zhangwei_helper-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:01 2020"}