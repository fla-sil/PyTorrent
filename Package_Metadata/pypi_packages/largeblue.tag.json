{"info": {"author": "James Arthur", "author_email": "firstname.lastname@largeblue.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Zope3", "Intended Audience :: Developers", "License :: Public Domain", "Natural Language :: English", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"], "description": "largeblue.tag provides an uber simple tagging adapter.  If included::\n\n    <include package=\"largeblue.tag\" />\n\nIt will adapt any object configured to implement largeblue.tag.interfaces.ITaggable, \ne.g::\n\n    <class class=\".objects.MyContentObject\">\n      <implements interface=\"largeblue.tag.interfaces.ITaggable\" />\n      ...\n    </class>\n\nThis will hang a @@tags.html view of each instance of the adapted content object, \nwhich provides a single textline input to enter tags (seperated by a space).  \nThus if you enter 'foo bar dolores' into the text input and submit, you'll find::\n\n    >>> context = my_obj\n    >>> from largeblue.tag.interfaces import ITag\n    >>> t = ITag(context)\n    >>> t.tags\n    ['foo', 'bar', 'dolores']\n    >>> t.tagstring\n    u'foo bar dolores'\n\nYou can add, remove and update::\n\n    >>> t.add_tag('elephants')\n    >>> t.tags\n    ['foo', 'bar', 'dolores', 'elephants']\n    >>> t.remove_tag('dolores')\n    >>> t.tags\n    ['foo', 'bar', 'elephants']\n    >>> t.update_tags(['coffee', 'milk'])\n    >>> t.tags\n    ['coffee', 'milk']\n\nThat's it.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pesto.largeblue.net/trac/browser/largeblue/devel/largeblue.tag", "keywords": "zope largeblue tag tags tagging adapter simple", "license": "Public Domain", "maintainer": null, "maintainer_email": null, "name": "largeblue.tag", "package_url": "https://pypi.org/project/largeblue.tag/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/largeblue.tag/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pesto.largeblue.net/trac/browser/largeblue/devel/largeblue.tag"}, "release_url": "https://pypi.org/project/largeblue.tag/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Simple tagging adapter", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>largeblue.tag provides an uber simple tagging adapter.  If included:</p>\n<pre>&lt;include package=\"largeblue.tag\" /&gt;\n</pre>\n<p>It will adapt any object configured to implement largeblue.tag.interfaces.ITaggable,\ne.g:</p>\n<pre>&lt;class class=\".objects.MyContentObject\"&gt;\n  &lt;implements interface=\"largeblue.tag.interfaces.ITaggable\" /&gt;\n  ...\n&lt;/class&gt;\n</pre>\n<p>This will hang a @@tags.html view of each instance of the adapted content object,\nwhich provides a single textline input to enter tags (seperated by a space).\nThus if you enter \u2018foo bar dolores\u2019 into the text input and submit, you\u2019ll find:</p>\n<pre>&gt;&gt;&gt; context = my_obj\n&gt;&gt;&gt; from largeblue.tag.interfaces import ITag\n&gt;&gt;&gt; t = ITag(context)\n&gt;&gt;&gt; t.tags\n['foo', 'bar', 'dolores']\n&gt;&gt;&gt; t.tagstring\nu'foo bar dolores'\n</pre>\n<p>You can add, remove and update:</p>\n<pre>&gt;&gt;&gt; t.add_tag('elephants')\n&gt;&gt;&gt; t.tags\n['foo', 'bar', 'dolores', 'elephants']\n&gt;&gt;&gt; t.remove_tag('dolores')\n&gt;&gt;&gt; t.tags\n['foo', 'bar', 'elephants']\n&gt;&gt;&gt; t.update_tags(['coffee', 'milk'])\n&gt;&gt;&gt; t.tags\n['coffee', 'milk']\n</pre>\n<p>That\u2019s it.</p>\n\n          </div>"}, "last_serial": 794056, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "438bb8af042063064f94dcd76ba31160", "sha256": "abdbdb518e0af6f4f78b8ce524c8668e40942d5d04be0586dd06227a4f2c93da"}, "downloads": -1, "filename": "largeblue.tag-0.1.tar.gz", "has_sig": false, "md5_digest": "438bb8af042063064f94dcd76ba31160", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7848, "upload_time": "2008-09-06T17:21:51", "upload_time_iso_8601": "2008-09-06T17:21:51Z", "url": "https://files.pythonhosted.org/packages/ae/49/cad98c65967ba352d7ecad2aa78177d7b9de1c74321d61f776eee2111602/largeblue.tag-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "3053bd9bbf6772aeef44f7c5cc6721f3", "sha256": "65c7003020cb408f4d2d30b88b0bed966a934cbbc1fed994c02543a7947475e4"}, "downloads": -1, "filename": "largeblue.tag-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3053bd9bbf6772aeef44f7c5cc6721f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7883, "upload_time": "2008-09-16T13:00:04", "upload_time_iso_8601": "2008-09-16T13:00:04Z", "url": "https://files.pythonhosted.org/packages/aa/6b/70adc8be9882a171674e383de44d91d287913df33be299cc2921a2339cd8/largeblue.tag-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3053bd9bbf6772aeef44f7c5cc6721f3", "sha256": "65c7003020cb408f4d2d30b88b0bed966a934cbbc1fed994c02543a7947475e4"}, "downloads": -1, "filename": "largeblue.tag-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3053bd9bbf6772aeef44f7c5cc6721f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7883, "upload_time": "2008-09-16T13:00:04", "upload_time_iso_8601": "2008-09-16T13:00:04Z", "url": "https://files.pythonhosted.org/packages/aa/6b/70adc8be9882a171674e383de44d91d287913df33be299cc2921a2339cd8/largeblue.tag-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:52 2020"}