{"info": {"author": "Gena Makhomed", "author_email": "makhomed@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 2 :: Only", "Topic :: Software Development", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Clustering", "Topic :: System :: Software Distribution", "Topic :: System :: Systems Administration"], "description": ".. image:: https://travis-ci.org/makhomed/fabrix.svg?branch=master\n    :target: https://travis-ci.org/makhomed/fabrix\n\n.. image:: https://codecov.io/gh/makhomed/fabrix/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/makhomed/fabrix\n\n.. image:: https://readthedocs.org/projects/fabrix/badge/\n    :target: https://fabrix.readthedocs.io/\n\n.. image:: https://badge.fury.io/py/Fabrix.svg\n    :target: https://badge.fury.io/py/Fabrix\n\n|\n\n`Fabric <http://www.fabfile.org/>`_ is tool for application deployment and systems administration tasks.\nBut configuration management with Fabric is not easy, because Fabric\ndoes not provide any useful functions for configuration management.\n\n`cuisine <https://github.com/sebastien/cuisine>`_ and `fabtools <https://github.com/fabtools/fabtools>`_\nare two well known attempts to make Fabric more comfortable for configiration management,\nthey are based on ideas of `Chef <https://www.chef.io/>`_ and `Puppet <https://puppet.com/>`_.\n\n`Ansible <https://www.ansible.com/>`_ is well known tool for configuration management.\nBut Ansible has its own drawbacks. Ansible requires from users learning huge yaml-based programming language.\nAlready exists `more then 1300 Ansible modules <http://docs.ansible.com/ansible/latest/list_of_all_modules.html>`_.\nYou need to spent many time for learning this special Ansible programming language and Ansible modules.\nAnd after all you often still need to write own shell scripts or even write own Ansible modules,\nbecause potential of Ansible yaml-based programming language is very limited.\n\n**Fabrix** has an approach to create useful and simple Fabric extension for configuration management.\n\n**Fabrix** is build to integrate all advantages of Fabric and Ansible without any of their drawbacks.\n\n**Fabrix** allows write easy to understand Ansible-like idempotent fabfiles on pure Python.\n\n\nInstallation\n------------\n\n.. code-block:: bash\n\n    pip install -U fabrix\n\nLinks\n-----\n\n* `Fabrix Documentation <https://fabrix.readthedocs.io/>`_\n* `Fabrix GitHub Home Page <https://github.com/makhomed/fabrix>`_\n* `Fabrix Python Package Index <https://pypi.python.org/pypi/Fabrix>`_\n\nExamples\n--------\n\nUsing Jinja2 templates\n~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n    from fabrix.api import render\n\n    def hello():\n        print render(\"Hello, {{ name }}!\", name=\"World\")\n\nEditing systemd unit files\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n    from fabrix.api import systemctl_edit, systemctl_restart\n\n    def example():\n        changed = systemctl_edit(\"mysqld.service\", \"\"\"\n            [Service]\n            LimitNOFILE = 262144\n        \"\"\")\n        if changed:\n            systemctl_restart(\"mysqld.service\")\n\nEditing configuration files\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n    from fabric.api import run\n    from fabrix.api import edit_file, replace_line, substitute_line, strip_line\n\n    def edit_grub():\n        changed = edit_file(\"/etc/default/grub\",\n            replace_line(r\"GRUB_TIMEOUT=.*\", r\"GRUB_TIMEOUT=1\"),\n            replace_line(r\"(GRUB_CMDLINE_LINUX=.*)\\brhgb\\b(.*)\", r\"\\1selinux=0\\2\"),\n            replace_line(r\"(GRUB_CMDLINE_LINUX=.*)\\bquiet\\b(.*)\", r\"\\1panic=1\\2\"),\n            substitute_line(r\"\\s+\", r\" \"),\n            strip_line(),\n        )\n        if changed:\n            run(\"grub2-mkconfig -o /boot/grub2/grub.cfg\")\n\nInstalling PHP 7.0 from remi repo\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n    from fabrix.api import is_file_not_exists, yum_install\n    from fabrix.api import edit_file, edit_ini_section, replace_line\n\n    def install_php():\n\n        if is_file_not_exists(\"/etc/yum.repos.d/epel.repo\"):\n            yum_install(\"https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\")\n\n        if is_file_not_exists(\"/etc/yum.repos.d/remi-php70.repo\"):\n            yum_install(\"https://rpms.remirepo.net/enterprise/remi-release-7.rpm\")\n\n        edit_file(\"/etc/yum.repos.d/remi-php70.repo\",\n            edit_ini_section(\"[remi-php70]\",\n                replace_line(\"enabled=0\", \"enabled=1\")\n            )\n        )\n\n        yum_install(\"\"\"\n                php-cli\n                php-common\n                php-fpm\n                php-gd\n                php-mbstring\n                php-mysql\n                php-pdo\n                php-pear\n                php-pecl-imagick\n                php-process\n                php-xml\n                php-opcache\n                php-mcrypt\n                php-soap\n        \"\"\")\n\nUsing external configuration\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nConfiguration file ``fabfile.yaml``:\n\n.. code-block:: yaml\n\n    roles:\n      - role: db\n        hosts:\n          - db1\n          - db2\n      - role: web\n        hosts:\n          - web1\n          - web2\n          - web3\n\n    role_vars:\n      - role: web\n        vars:\n          name: webserver\n\n    host_vars:\n      - host: web1\n        vars:\n          name: nginx\n\n    defaults:\n      name: generic\n\nCode ``fabfile.py``:\n\n.. code-block:: python\n\n    from fabric.api import env, run, roles, execute\n    from fabrix.api import conf\n\n    @roles(\"db\")\n    def migrate():\n        print \"Hello, %s!\" % conf.name\n        pass\n\n    @roles(\"web\")\n    def update():\n        print \"Hello, %s!\" % conf.name\n        pass\n\n    def deploy():\n        execute(migrate)\n        execute(update)\n\nAfter running ``fab deploy`` we can see:\n\n.. code-block:: bash\n\n    $ fab deploy\n    [db1] Executing task 'migrate'\n    Hello, generic!\n    [db2] Executing task 'migrate'\n    Hello, generic!\n    [web1] Executing task 'update'\n    Hello, nginx!\n    [web2] Executing task 'update'\n    Hello, webserver!\n    [web3] Executing task 'update'\n    Hello, webserver!\n\nMore details and examples you can see in `Fabrix Documentation <https://fabrix.readthedocs.io/>`_.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/makhomed/fabrix", "keywords": "configuration management", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "Fabrix", "package_url": "https://pypi.org/project/Fabrix/", "platform": "Linux", "project_url": "https://pypi.org/project/Fabrix/", "project_urls": {"Homepage": "https://github.com/makhomed/fabrix"}, "release_url": "https://pypi.org/project/Fabrix/0.3/", "requires_dist": null, "requires_python": "", "summary": "Fabrix is Fabric extension for configuration management", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/makhomed/fabrix\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/makhomed/fabrix.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/904ea460bd565c4120377a7e29e429c7b5a90e13/68747470733a2f2f7472617669732d63692e6f72672f6d616b686f6d65642f6661627269782e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/makhomed/fabrix\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/makhomed/fabrix/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4bf053ab4bca8e172d9f25842042ee56f4d3ceb8/68747470733a2f2f636f6465636f762e696f2f67682f6d616b686f6d65642f6661627269782f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://fabrix.readthedocs.io/\" rel=\"nofollow\"><img alt=\"https://readthedocs.org/projects/fabrix/badge/\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1bbc0d717270526d5563d87a0ef1a4ad9e746722/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6661627269782f62616467652f\"></a>\n<a href=\"https://badge.fury.io/py/Fabrix\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/Fabrix.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8d4da6b17f25b4f2b843521bf042ae0003f74ec9/68747470733a2f2f62616467652e667572792e696f2f70792f4661627269782e737667\"></a>\n<div>\n<div><br></div>\n</div>\n<p><a href=\"http://www.fabfile.org/\" rel=\"nofollow\">Fabric</a> is tool for application deployment and systems administration tasks.\nBut configuration management with Fabric is not easy, because Fabric\ndoes not provide any useful functions for configuration management.</p>\n<p><a href=\"https://github.com/sebastien/cuisine\" rel=\"nofollow\">cuisine</a> and <a href=\"https://github.com/fabtools/fabtools\" rel=\"nofollow\">fabtools</a>\nare two well known attempts to make Fabric more comfortable for configiration management,\nthey are based on ideas of <a href=\"https://www.chef.io/\" rel=\"nofollow\">Chef</a> and <a href=\"https://puppet.com/\" rel=\"nofollow\">Puppet</a>.</p>\n<p><a href=\"https://www.ansible.com/\" rel=\"nofollow\">Ansible</a> is well known tool for configuration management.\nBut Ansible has its own drawbacks. Ansible requires from users learning huge yaml-based programming language.\nAlready exists <a href=\"http://docs.ansible.com/ansible/latest/list_of_all_modules.html\" rel=\"nofollow\">more then 1300 Ansible modules</a>.\nYou need to spent many time for learning this special Ansible programming language and Ansible modules.\nAnd after all you often still need to write own shell scripts or even write own Ansible modules,\nbecause potential of Ansible yaml-based programming language is very limited.</p>\n<p><strong>Fabrix</strong> has an approach to create useful and simple Fabric extension for configuration management.</p>\n<p><strong>Fabrix</strong> is build to integrate all advantages of Fabric and Ansible without any of their drawbacks.</p>\n<p><strong>Fabrix</strong> allows write easy to understand Ansible-like idempotent fabfiles on pure Python.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install -U fabrix\n</pre>\n</div>\n<div id=\"links\">\n<h2>Links</h2>\n<ul>\n<li><a href=\"https://fabrix.readthedocs.io/\" rel=\"nofollow\">Fabrix Documentation</a></li>\n<li><a href=\"https://github.com/makhomed/fabrix\" rel=\"nofollow\">Fabrix GitHub Home Page</a></li>\n<li><a href=\"https://pypi.python.org/pypi/Fabrix\" rel=\"nofollow\">Fabrix Python Package Index</a></li>\n</ul>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<div id=\"using-jinja2-templates\">\n<h3>Using Jinja2 templates</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fabrix.api</span> <span class=\"kn\">import</span> <span class=\"n\">render</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span> <span class=\"n\">render</span><span class=\"p\">(</span><span class=\"s2\">\"Hello, {{ name }}!\"</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"World\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"editing-systemd-unit-files\">\n<h3>Editing systemd unit files</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fabrix.api</span> <span class=\"kn\">import</span> <span class=\"n\">systemctl_edit</span><span class=\"p\">,</span> <span class=\"n\">systemctl_restart</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">():</span>\n    <span class=\"n\">changed</span> <span class=\"o\">=</span> <span class=\"n\">systemctl_edit</span><span class=\"p\">(</span><span class=\"s2\">\"mysqld.service\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\"\"\n        [Service]\n        LimitNOFILE = 262144\n    \"\"\"</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">changed</span><span class=\"p\">:</span>\n        <span class=\"n\">systemctl_restart</span><span class=\"p\">(</span><span class=\"s2\">\"mysqld.service\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"editing-configuration-files\">\n<h3>Editing configuration files</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fabric.api</span> <span class=\"kn\">import</span> <span class=\"n\">run</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fabrix.api</span> <span class=\"kn\">import</span> <span class=\"n\">edit_file</span><span class=\"p\">,</span> <span class=\"n\">replace_line</span><span class=\"p\">,</span> <span class=\"n\">substitute_line</span><span class=\"p\">,</span> <span class=\"n\">strip_line</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">edit_grub</span><span class=\"p\">():</span>\n    <span class=\"n\">changed</span> <span class=\"o\">=</span> <span class=\"n\">edit_file</span><span class=\"p\">(</span><span class=\"s2\">\"/etc/default/grub\"</span><span class=\"p\">,</span>\n        <span class=\"n\">replace_line</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"GRUB_TIMEOUT=.*\"</span><span class=\"p\">,</span> <span class=\"sa\">r</span><span class=\"s2\">\"GRUB_TIMEOUT=1\"</span><span class=\"p\">),</span>\n        <span class=\"n\">replace_line</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"(GRUB_CMDLINE_LINUX=.*)\\brhgb\\b(.*)\"</span><span class=\"p\">,</span> <span class=\"sa\">r</span><span class=\"s2\">\"\\1selinux=0\\2\"</span><span class=\"p\">),</span>\n        <span class=\"n\">replace_line</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"(GRUB_CMDLINE_LINUX=.*)\\bquiet\\b(.*)\"</span><span class=\"p\">,</span> <span class=\"sa\">r</span><span class=\"s2\">\"\\1panic=1\\2\"</span><span class=\"p\">),</span>\n        <span class=\"n\">substitute_line</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"\\s+\"</span><span class=\"p\">,</span> <span class=\"sa\">r</span><span class=\"s2\">\" \"</span><span class=\"p\">),</span>\n        <span class=\"n\">strip_line</span><span class=\"p\">(),</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">changed</span><span class=\"p\">:</span>\n        <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s2\">\"grub2-mkconfig -o /boot/grub2/grub.cfg\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"installing-php-7-0-from-remi-repo\">\n<h3>Installing PHP 7.0 from remi repo</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fabrix.api</span> <span class=\"kn\">import</span> <span class=\"n\">is_file_not_exists</span><span class=\"p\">,</span> <span class=\"n\">yum_install</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fabrix.api</span> <span class=\"kn\">import</span> <span class=\"n\">edit_file</span><span class=\"p\">,</span> <span class=\"n\">edit_ini_section</span><span class=\"p\">,</span> <span class=\"n\">replace_line</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">install_php</span><span class=\"p\">():</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">is_file_not_exists</span><span class=\"p\">(</span><span class=\"s2\">\"/etc/yum.repos.d/epel.repo\"</span><span class=\"p\">):</span>\n        <span class=\"n\">yum_install</span><span class=\"p\">(</span><span class=\"s2\">\"https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">is_file_not_exists</span><span class=\"p\">(</span><span class=\"s2\">\"/etc/yum.repos.d/remi-php70.repo\"</span><span class=\"p\">):</span>\n        <span class=\"n\">yum_install</span><span class=\"p\">(</span><span class=\"s2\">\"https://rpms.remirepo.net/enterprise/remi-release-7.rpm\"</span><span class=\"p\">)</span>\n\n    <span class=\"n\">edit_file</span><span class=\"p\">(</span><span class=\"s2\">\"/etc/yum.repos.d/remi-php70.repo\"</span><span class=\"p\">,</span>\n        <span class=\"n\">edit_ini_section</span><span class=\"p\">(</span><span class=\"s2\">\"[remi-php70]\"</span><span class=\"p\">,</span>\n            <span class=\"n\">replace_line</span><span class=\"p\">(</span><span class=\"s2\">\"enabled=0\"</span><span class=\"p\">,</span> <span class=\"s2\">\"enabled=1\"</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">yum_install</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"\n            php-cli\n            php-common\n            php-fpm\n            php-gd\n            php-mbstring\n            php-mysql\n            php-pdo\n            php-pear\n            php-pecl-imagick\n            php-process\n            php-xml\n            php-opcache\n            php-mcrypt\n            php-soap\n    \"\"\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"using-external-configuration\">\n<h3>Using external configuration</h3>\n<p>Configuration file <tt>fabfile.yaml</tt>:</p>\n<pre><span class=\"nt\">roles</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"nt\">role</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">db</span>\n    <span class=\"nt\">hosts</span><span class=\"p\">:</span>\n      <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">db1</span>\n      <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">db2</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"nt\">role</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">web</span>\n    <span class=\"nt\">hosts</span><span class=\"p\">:</span>\n      <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">web1</span>\n      <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">web2</span>\n      <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">web3</span>\n\n<span class=\"nt\">role_vars</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"nt\">role</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">web</span>\n    <span class=\"nt\">vars</span><span class=\"p\">:</span>\n      <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">webserver</span>\n\n<span class=\"nt\">host_vars</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"nt\">host</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">web1</span>\n    <span class=\"nt\">vars</span><span class=\"p\">:</span>\n      <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">nginx</span>\n\n<span class=\"nt\">defaults</span><span class=\"p\">:</span>\n  <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">generic</span>\n</pre>\n<p>Code <tt>fabfile.py</tt>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fabric.api</span> <span class=\"kn\">import</span> <span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">run</span><span class=\"p\">,</span> <span class=\"n\">roles</span><span class=\"p\">,</span> <span class=\"n\">execute</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fabrix.api</span> <span class=\"kn\">import</span> <span class=\"n\">conf</span>\n\n<span class=\"nd\">@roles</span><span class=\"p\">(</span><span class=\"s2\">\"db\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">migrate</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"Hello, </span><span class=\"si\">%s</span><span class=\"s2\">!\"</span> <span class=\"o\">%</span> <span class=\"n\">conf</span><span class=\"o\">.</span><span class=\"n\">name</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"nd\">@roles</span><span class=\"p\">(</span><span class=\"s2\">\"web\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"Hello, </span><span class=\"si\">%s</span><span class=\"s2\">!\"</span> <span class=\"o\">%</span> <span class=\"n\">conf</span><span class=\"o\">.</span><span class=\"n\">name</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">deploy</span><span class=\"p\">():</span>\n    <span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">migrate</span><span class=\"p\">)</span>\n    <span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">update</span><span class=\"p\">)</span>\n</pre>\n<p>After running <tt>fab deploy</tt> we can see:</p>\n<pre>$ fab deploy\n<span class=\"o\">[</span>db1<span class=\"o\">]</span> Executing task <span class=\"s1\">'migrate'</span>\nHello, generic!\n<span class=\"o\">[</span>db2<span class=\"o\">]</span> Executing task <span class=\"s1\">'migrate'</span>\nHello, generic!\n<span class=\"o\">[</span>web1<span class=\"o\">]</span> Executing task <span class=\"s1\">'update'</span>\nHello, nginx!\n<span class=\"o\">[</span>web2<span class=\"o\">]</span> Executing task <span class=\"s1\">'update'</span>\nHello, webserver!\n<span class=\"o\">[</span>web3<span class=\"o\">]</span> Executing task <span class=\"s1\">'update'</span>\nHello, webserver!\n</pre>\n<p>More details and examples you can see in <a href=\"https://fabrix.readthedocs.io/\" rel=\"nofollow\">Fabrix Documentation</a>.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3336226, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "438db436e5563ce3a23f357b65b24cd6", "sha256": "91951c4379be9810f59a569c2c3e51632d717597df7026fc541c0037b54b159f"}, "downloads": -1, "filename": "Fabrix-0.3.tar.gz", "has_sig": false, "md5_digest": "438db436e5563ce3a23f357b65b24cd6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44044, "upload_time": "2017-11-15T18:07:36", "upload_time_iso_8601": "2017-11-15T18:07:36.158018Z", "url": "https://files.pythonhosted.org/packages/25/27/f696306461e40bd9d413f72c297a7b80a567468e76548421fa909e157e7e/Fabrix-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "438db436e5563ce3a23f357b65b24cd6", "sha256": "91951c4379be9810f59a569c2c3e51632d717597df7026fc541c0037b54b159f"}, "downloads": -1, "filename": "Fabrix-0.3.tar.gz", "has_sig": false, "md5_digest": "438db436e5563ce3a23f357b65b24cd6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44044, "upload_time": "2017-11-15T18:07:36", "upload_time_iso_8601": "2017-11-15T18:07:36.158018Z", "url": "https://files.pythonhosted.org/packages/25/27/f696306461e40bd9d413f72c297a7b80a567468e76548421fa909e157e7e/Fabrix-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:11 2020"}