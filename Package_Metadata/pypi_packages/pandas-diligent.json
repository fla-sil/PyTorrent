{"info": {"author": "Stefan Wehrmeyer", "author_email": "mail@stefanwehrmeyer.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering"], "description": "# pandas-diligent\n\n`diligent` is a data proofing tool for pandas dataframes, best used in Jupyter notebooks.\n\n\nRun `diligent` on your dataframes.\n\n    from diligent import diligent\n\n    diligent(df)\n\nRun only certain kinds of checks.\n\n        diligent(df, include='basic')\n\nRun in verbose mode:\n\n    diligent(df, verbose=True)\n\nRegister your own checks.\n\n    from diligent import registry\n\n    @registry.register(name='My custom check', tags='custom')\n    def custom_check(series):\n        yield 'Warning 1'\n        yield 'Warning 2'", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/stefanw/pandas-diligent", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "pandas-diligent", "package_url": "https://pypi.org/project/pandas-diligent/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pandas-diligent/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/stefanw/pandas-diligent"}, "release_url": "https://pypi.org/project/pandas-diligent/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # pandas-diligent<br><br>`diligent` is a data proofing tool for pandas dataframes, best used in Jupyter notebooks.<br><br><br>Run `diligent` on your dataframes.<br><br>    from diligent import diligent<br><br>    diligent(df)<br><br>Run only certain kinds of checks.<br><br>        diligent(df, include='basic')<br><br>Run in verbose mode:<br><br>    diligent(df, verbose=True)<br><br>Register your own checks.<br><br>    from diligent import registry<br><br>    @registry.register(name='My custom check', tags='custom')<br>    def custom_check(series):<br>        yield 'Warning 1'<br>        yield 'Warning 2'\n          </div>"}, "last_serial": 2078199, "releases": {"0.0.1": []}, "urls": [], "timestamp": "Fri May  8 02:59:32 2020"}