{"info": {"author": "Mike McKerns", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2", "Topic :: Scientific/Engineering", "Topic :: Software Development"], "description": "----------------------------------------------\npyina: MPI parallel map and cluster scheduling\n----------------------------------------------\n\nAbout Pyina\n===========\n\nThe ``pyina`` package provides several basic tools to make MPI-based\nparallel computing more accessable to the end user. The goal\nof ``pyina`` is to allow the user to extend their own code to MPI-based\nparallel computing with minimal refactoring.\n\nThe central element of ``pyina`` is the parallel map algorithm.\n``pyina`` currently provides two strategies for executing the parallel-map,\nwhere a strategy is the algorithm for distributing the work list of\njobs across the availble nodes.  These strategies can be used *\"in-the-raw\"*\n(i.e. directly) to provide the map algorithm to a user's own mpi-aware code.\nFurther, in ``pyina.mpi`` ``pyina`` provides pipe and map implementations\n(known as *\"easy map\"*) that hide the MPI internals from the user. With the\n*\"easy map\"*, the user can launch their code in parallel batch mode -- using\nstandard python and without ever having to write a line of MPI code.\n\nThere are several ways that a user would typically launch their code in\nparallel -- directly with ``mpirun`` or ``mpiexec``, or through the use of a\nscheduler such as *torque* or *slurm*. ``pyina`` encapsulates several of these\n*\"launchers\"*, and provides a common interface to the different methods of\nlaunching a MPI job.\n\n``pyina`` is part of ``pathos``, a python framework for heterogeneous computing.\n``pyina`` is in active development, so any user feedback, bug reports, comments,\nor suggestions are highly appreciated.  A list of known issues is maintained\nat http://trac.mystic.cacr.caltech.edu/project/pathos/query.html, with a public\nticket list at https://github.com/uqfoundation/pyina/issues.\n\n\nMajor Features\n==============\n\n``pyina`` provides a highly configurable parallel map interface\nto running MPI jobs, with:\n\n    - a map interface that extends the python ``map`` standard\n    - the ability to submit batch jobs to a selection of schedulers\n    - the ability to customize node and process launch configurations\n    - the ability to launch parallel MPI jobs with standard python\n    - ease in selecting different strategies for processing a work list\n\n\nCurrent Release\n===============\n\nThis documentation is for version ``pyina-0.2.2``.\n\nThe latest released version of ``pyina`` is available at:\n\n    https://pypi.org/project/pyina\n\n``pyina`` is distributed under a 3-clause BSD license.\n\n    >>> import pyina\n    >>> print (pyina.license())\n\n\nDevelopment Version\n===================\n\nYou can get the latest development version with all the shiny new features at:\n\n    https://github.com/uqfoundation\n\nIf you have a new contribution, please submit a pull request.\n\n\nInstallation\n============\n\n``pyina`` is packaged to install from source, so you must\ndownload the tarball, unzip, and run the installer::\n\n    [download]\n    $ tar -xvzf pyina-0.2.2.tar.gz\n    $ cd pyina-0.2.2\n    $ python setup py build\n    $ python setup py install\n\nYou will be warned of any missing dependencies and/or settings after\nyou run the \"build\" step above. ``pyina`` depends on ``dill``, ``pox``, ``pathos``, and\n``mpi4py``, so you should install them first. A version of MPI must also be\ninstalled. Launchers in ``pyina`` that submit to a scheduler will throw errors\nif the underlying scheduler is not available, however a scheduler is not\nrequired for ``pyina`` to execute.\n\nAlternately, ``pyina`` can be installed with ``pip`` or ``easy_install``::\n\n    $ pip install pyina\n\n\nRequirements\n============\n\n``pyina`` requires:\n\n    - ``python``, **version >= 2.6** or **version >= 3.3**\n    - ``numpy``, **version >= 1.0**\n    - ``mpi4py``, **version >= 1.3**\n    - ``dill``, **version >= 0.3.0**\n    - ``pox``, **version >= 0.2.6**\n    - ``pathos``, **version >= 0.2.4**\n\nOptional requirements:\n\n    - ``setuptools``, **version >= 0.6**\n    - ``mystic``, **version >= 0.3.3**\n\n\nMore Information\n================\n\nProbably the best way to get started is to look at the documentation at\nhttp://pyina.rtfd.io. Also see ``pyina.examples`` and ``pyina.tests``\nfor a set of scripts that demonstrate the configuration and launching of\nmpi-based parallel jobs using the *\"easy map\"* interface. Also see\n``pyina.examples_other`` for a set of scripts that test the more raw\ninternals of ``pyina``. You can run the tests with ``python -m pyina.tests``.\nA script is included for querying, setting up, and tearing down an MPI\nenvironment, see ``python -m pyina`` for more information. The source code\nis generally well documented, so further questions may be resolved by\ninspecting the code itself. Please feel free to submit a ticket on github,\nor ask a question on stackoverflow (**@Mike McKerns**).\nIf you would like to share how you use ``pyina`` in your work, please send\nan email (to **mmckerns at uqfoundation dot org**).\n\nImportant classes and functions are found here:\n\n    - ``pyina.mpi``           [the map API definition]\n    - ``pyina.schedulers``    [all available schedulers] \n    - ``pyina.launchers``     [all available launchers] \n\nMapping strategies are found here:\n\n    - ``pyina.mpi_scatter``   [the scatter-gather strategy]\n    - ``pyina.mpi_pool``      [the worker pool strategy]\n\n``pyina`` also provides a convience script that helps navigate the\nMPI environment. This script can be run from anywhere with::\n\n    $ mpi_world\n\nIf may also be convienent to set a shell alias for the launch of 'raw'\nmpi-python jobs. Set something like the following (for bash)::\n\n    $ alias mpython1='mpiexec -np 1 `which python`'\n    $ alias mpython2='mpiexec -np 2 `which python`'\n    $ ...\n\n\nCitation\n========\n\nIf you use ``pyina`` to do research that leads to publication, we ask that you\nacknowledge use of ``pyina`` by citing the following in your publication::\n\n    M.M. McKerns, L. Strand, T. Sullivan, A. Fang, M.A.G. Aivazis,\n    \"Building a framework for predictive science\", Proceedings of\n    the 10th Python in Science Conference, 2011;\n    http://arxiv.org/pdf/1202.1056\n\n    Michael McKerns and Michael Aivazis,\n    \"pathos: a framework for heterogeneous computing\", 2010- ;\n    http://trac.mystic.cacr.caltech.edu/project/pathos\n\nPlease see http://trac.mystic.cacr.caltech.edu/project/pathos or\nhttp://arxiv.org/pdf/1202.1056 for further information.", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/uqfoundation/pyina/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.org/project/pyina", "keywords": "", "license": "3-clause BSD", "maintainer": "", "maintainer_email": "", "name": "pyina", "package_url": "https://pypi.org/project/pyina/", "platform": "Linux", "project_url": "https://pypi.org/project/pyina/", "project_urls": {"Download": "https://github.com/uqfoundation/pyina/archive/master.zip", "Homepage": "https://pypi.org/project/pyina"}, "release_url": "https://pypi.org/project/pyina/0.2.2/", "requires_dist": null, "requires_python": "", "summary": "MPI parallel map and cluster scheduling", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about-pyina\">\n<h2>About Pyina</h2>\n<p>The <tt>pyina</tt> package provides several basic tools to make MPI-based\nparallel computing more accessable to the end user. The goal\nof <tt>pyina</tt> is to allow the user to extend their own code to MPI-based\nparallel computing with minimal refactoring.</p>\n<p>The central element of <tt>pyina</tt> is the parallel map algorithm.\n<tt>pyina</tt> currently provides two strategies for executing the parallel-map,\nwhere a strategy is the algorithm for distributing the work list of\njobs across the availble nodes.  These strategies can be used <em>\u201cin-the-raw\u201d</em>\n(i.e. directly) to provide the map algorithm to a user\u2019s own mpi-aware code.\nFurther, in <tt>pyina.mpi</tt> <tt>pyina</tt> provides pipe and map implementations\n(known as <em>\u201ceasy map\u201d</em>) that hide the MPI internals from the user. With the\n<em>\u201ceasy map\u201d</em>, the user can launch their code in parallel batch mode \u2013 using\nstandard python and without ever having to write a line of MPI code.</p>\n<p>There are several ways that a user would typically launch their code in\nparallel \u2013 directly with <tt>mpirun</tt> or <tt>mpiexec</tt>, or through the use of a\nscheduler such as <em>torque</em> or <em>slurm</em>. <tt>pyina</tt> encapsulates several of these\n<em>\u201claunchers\u201d</em>, and provides a common interface to the different methods of\nlaunching a MPI job.</p>\n<p><tt>pyina</tt> is part of <tt>pathos</tt>, a python framework for heterogeneous computing.\n<tt>pyina</tt> is in active development, so any user feedback, bug reports, comments,\nor suggestions are highly appreciated.  A list of known issues is maintained\nat <a href=\"http://trac.mystic.cacr.caltech.edu/project/pathos/query.html\" rel=\"nofollow\">http://trac.mystic.cacr.caltech.edu/project/pathos/query.html</a>, with a public\nticket list at <a href=\"https://github.com/uqfoundation/pyina/issues\" rel=\"nofollow\">https://github.com/uqfoundation/pyina/issues</a>.</p>\n</div>\n<div id=\"major-features\">\n<h2>Major Features</h2>\n<p><tt>pyina</tt> provides a highly configurable parallel map interface\nto running MPI jobs, with:</p>\n<blockquote>\n<ul>\n<li>a map interface that extends the python <tt>map</tt> standard</li>\n<li>the ability to submit batch jobs to a selection of schedulers</li>\n<li>the ability to customize node and process launch configurations</li>\n<li>the ability to launch parallel MPI jobs with standard python</li>\n<li>ease in selecting different strategies for processing a work list</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"current-release\">\n<h2>Current Release</h2>\n<p>This documentation is for version <tt><span class=\"pre\">pyina-0.2.2</span></tt>.</p>\n<p>The latest released version of <tt>pyina</tt> is available at:</p>\n<blockquote>\n<a href=\"https://pypi.org/project/pyina\" rel=\"nofollow\">https://pypi.org/project/pyina</a></blockquote>\n<p><tt>pyina</tt> is distributed under a 3-clause BSD license.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import pyina\n&gt;&gt;&gt; print (pyina.license())\n</pre>\n</blockquote>\n</div>\n<div id=\"development-version\">\n<h2>Development Version</h2>\n<p>You can get the latest development version with all the shiny new features at:</p>\n<blockquote>\n<a href=\"https://github.com/uqfoundation\" rel=\"nofollow\">https://github.com/uqfoundation</a></blockquote>\n<p>If you have a new contribution, please submit a pull request.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>pyina</tt> is packaged to install from source, so you must\ndownload the tarball, unzip, and run the installer:</p>\n<pre>[download]\n$ tar -xvzf pyina-0.2.2.tar.gz\n$ cd pyina-0.2.2\n$ python setup py build\n$ python setup py install\n</pre>\n<p>You will be warned of any missing dependencies and/or settings after\nyou run the \u201cbuild\u201d step above. <tt>pyina</tt> depends on <tt>dill</tt>, <tt>pox</tt>, <tt>pathos</tt>, and\n<tt>mpi4py</tt>, so you should install them first. A version of MPI must also be\ninstalled. Launchers in <tt>pyina</tt> that submit to a scheduler will throw errors\nif the underlying scheduler is not available, however a scheduler is not\nrequired for <tt>pyina</tt> to execute.</p>\n<p>Alternately, <tt>pyina</tt> can be installed with <tt>pip</tt> or <tt>easy_install</tt>:</p>\n<pre>$ pip install pyina\n</pre>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p><tt>pyina</tt> requires:</p>\n<blockquote>\n<ul>\n<li><tt>python</tt>, <strong>version &gt;= 2.6</strong> or <strong>version &gt;= 3.3</strong></li>\n<li><tt>numpy</tt>, <strong>version &gt;= 1.0</strong></li>\n<li><tt>mpi4py</tt>, <strong>version &gt;= 1.3</strong></li>\n<li><tt>dill</tt>, <strong>version &gt;= 0.3.0</strong></li>\n<li><tt>pox</tt>, <strong>version &gt;= 0.2.6</strong></li>\n<li><tt>pathos</tt>, <strong>version &gt;= 0.2.4</strong></li>\n</ul>\n</blockquote>\n<p>Optional requirements:</p>\n<blockquote>\n<ul>\n<li><tt>setuptools</tt>, <strong>version &gt;= 0.6</strong></li>\n<li><tt>mystic</tt>, <strong>version &gt;= 0.3.3</strong></li>\n</ul>\n</blockquote>\n</div>\n<div id=\"more-information\">\n<h2>More Information</h2>\n<p>Probably the best way to get started is to look at the documentation at\n<a href=\"http://pyina.rtfd.io\" rel=\"nofollow\">http://pyina.rtfd.io</a>. Also see <tt>pyina.examples</tt> and <tt>pyina.tests</tt>\nfor a set of scripts that demonstrate the configuration and launching of\nmpi-based parallel jobs using the <em>\u201ceasy map\u201d</em> interface. Also see\n<tt>pyina.examples_other</tt> for a set of scripts that test the more raw\ninternals of <tt>pyina</tt>. You can run the tests with <tt>python <span class=\"pre\">-m</span> pyina.tests</tt>.\nA script is included for querying, setting up, and tearing down an MPI\nenvironment, see <tt>python <span class=\"pre\">-m</span> pyina</tt> for more information. The source code\nis generally well documented, so further questions may be resolved by\ninspecting the code itself. Please feel free to submit a ticket on github,\nor ask a question on stackoverflow (<strong>@Mike McKerns</strong>).\nIf you would like to share how you use <tt>pyina</tt> in your work, please send\nan email (to <strong>mmckerns at uqfoundation dot org</strong>).</p>\n<p>Important classes and functions are found here:</p>\n<blockquote>\n<ul>\n<li><tt>pyina.mpi</tt>           [the map API definition]</li>\n<li><tt>pyina.schedulers</tt>    [all available schedulers]</li>\n<li><tt>pyina.launchers</tt>     [all available launchers]</li>\n</ul>\n</blockquote>\n<p>Mapping strategies are found here:</p>\n<blockquote>\n<ul>\n<li><tt>pyina.mpi_scatter</tt>   [the scatter-gather strategy]</li>\n<li><tt>pyina.mpi_pool</tt>      [the worker pool strategy]</li>\n</ul>\n</blockquote>\n<p><tt>pyina</tt> also provides a convience script that helps navigate the\nMPI environment. This script can be run from anywhere with:</p>\n<pre>$ mpi_world\n</pre>\n<p>If may also be convienent to set a shell alias for the launch of \u2018raw\u2019\nmpi-python jobs. Set something like the following (for bash):</p>\n<pre>$ alias mpython1='mpiexec -np 1 `which python`'\n$ alias mpython2='mpiexec -np 2 `which python`'\n$ ...\n</pre>\n</div>\n<div id=\"citation\">\n<h2>Citation</h2>\n<p>If you use <tt>pyina</tt> to do research that leads to publication, we ask that you\nacknowledge use of <tt>pyina</tt> by citing the following in your publication:</p>\n<pre>M.M. McKerns, L. Strand, T. Sullivan, A. Fang, M.A.G. Aivazis,\n\"Building a framework for predictive science\", Proceedings of\nthe 10th Python in Science Conference, 2011;\nhttp://arxiv.org/pdf/1202.1056\n\nMichael McKerns and Michael Aivazis,\n\"pathos: a framework for heterogeneous computing\", 2010- ;\nhttp://trac.mystic.cacr.caltech.edu/project/pathos\n</pre>\n<p>Please see <a href=\"http://trac.mystic.cacr.caltech.edu/project/pathos\" rel=\"nofollow\">http://trac.mystic.cacr.caltech.edu/project/pathos</a> or\n<a href=\"http://arxiv.org/pdf/1202.1056\" rel=\"nofollow\">http://arxiv.org/pdf/1202.1056</a> for further information.</p>\n</div>\n\n          </div>"}, "last_serial": 5458482, "releases": {"0.1a1": [{"comment_text": "", "digests": {"md5": "e6c3c09d6b86f0a47246348680e35fbf", "sha256": "a4e04338c66f7754342be9985b22b6f32293e6f7bb75e585865aa073c082f689"}, "downloads": -1, "filename": "pyina-0.1a1.tgz", "has_sig": false, "md5_digest": "e6c3c09d6b86f0a47246348680e35fbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35280, "upload_time": "2015-12-22T20:26:09", "upload_time_iso_8601": "2015-12-22T20:26:09.403571Z", "url": "https://files.pythonhosted.org/packages/8d/5d/a4e6c6dc52d2a05e8059a345b31f1b283258ac26c14021aa74e367d37544/pyina-0.1a1.tgz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "1da2814c31cc71779222acec4af91aeb", "sha256": "6698ddd4c0d8c4cc9a87637743c19bba35557616fd7d611479109d92f959b9ab"}, "downloads": -1, "filename": "pyina-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1da2814c31cc71779222acec4af91aeb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 126948, "upload_time": "2018-06-22T00:58:43", "upload_time_iso_8601": "2018-06-22T00:58:43.038768Z", "url": "https://files.pythonhosted.org/packages/4b/47/5a83b45075f47a823287796cbc7bd3c6706b4afc6a808b8149a5776a62a8/pyina-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "06b23230666c92d646af955ecd1026c9", "sha256": "562f3d480deb3b6213151ba0eea9b1cf7071bcfb78ebbcc482e72d0162fa55cb"}, "downloads": -1, "filename": "pyina-0.2.1.tar.gz", "has_sig": false, "md5_digest": "06b23230666c92d646af955ecd1026c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 127224, "upload_time": "2019-01-22T01:02:55", "upload_time_iso_8601": "2019-01-22T01:02:55.961030Z", "url": "https://files.pythonhosted.org/packages/c7/dd/a58dd5b5b943a48e92f71451ce45cddba62b20efc5577c55f08bef295e4a/pyina-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "d406a97eb6221f7ad147b7ea31b1a6d8", "sha256": "3700315ad86c48868459ea3b29de23583ff9d3f20d2c692b5181f619fda5d3d6"}, "downloads": -1, "filename": "pyina-0.2.2.tar.gz", "has_sig": false, "md5_digest": "d406a97eb6221f7ad147b7ea31b1a6d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 127380, "upload_time": "2019-06-27T19:20:08", "upload_time_iso_8601": "2019-06-27T19:20:08.533605Z", "url": "https://files.pythonhosted.org/packages/c1/75/950990011deb3ac5917985a42b67ff10f910d8ff00c0f57dfb74dffdf5d7/pyina-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d406a97eb6221f7ad147b7ea31b1a6d8", "sha256": "3700315ad86c48868459ea3b29de23583ff9d3f20d2c692b5181f619fda5d3d6"}, "downloads": -1, "filename": "pyina-0.2.2.tar.gz", "has_sig": false, "md5_digest": "d406a97eb6221f7ad147b7ea31b1a6d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 127380, "upload_time": "2019-06-27T19:20:08", "upload_time_iso_8601": "2019-06-27T19:20:08.533605Z", "url": "https://files.pythonhosted.org/packages/c1/75/950990011deb3ac5917985a42b67ff10f910d8ff00c0f57dfb74dffdf5d7/pyina-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:03 2020"}