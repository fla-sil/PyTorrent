{"info": {"author": "Norman Kr\u00e4mer", "author_email": "kraemer.norman@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Systems Administration :: Authentication/Directory"], "description": "kerberos-sspi\n=============\n\nThis Python package is API level equivalent to the kerberos python\npackage but instead of using the MIT krb5 package it uses the windows\nsspi functionality. That allows your server and/or client that uses the\nkerberos package to run under windows by alternatively loading\nkerberos-sspi instead of the kerberos package.\n\n(If you use python with cygwin you probably just use the original\nkerberos package with a compiled MIT kerberos package.)\n\nHow to use it\n=============\n\nHere is an example:\n\n.. code:: python\n\n\n    try:\n        import kerberos as k\n    except:\n        import kerberos_sspi as k\n\n    from base64 import encodestring, decodestring\n\n    flags=k.GSS_C_CONF_FLAG|k.GSS_C_INTEG_FLAG|k.GSS_C_MUTUAL_FLAG|k.GSS_C_SEQUENCE_FLAG\n\n    errc, client = k.authGSSClientInit(\"test@vm-win7-kraemer\", gssflags=flags)\n\n    # to run a kerberos enabled server under my account i do as domain admin:\n    #  setspn -A test/vm-win7-kraemer MYDOMAIN\\kraemer\n    # (might have to wait a few minutes before all DCs in active directory pick it up)\n    errs, server = k.authGSSServerInit(\"test@vm-win7-kraemer\")\n\n    cres = sres= k.AUTH_GSS_CONTINUE\n    response = \"\"\n    round = 0\n    while sres == k.AUTH_GSS_CONTINUE or cres == k.AUTH_GSS_CONTINUE:\n\n        if cres == k.AUTH_GSS_CONTINUE:\n            cres = k.authGSSClientStep(client, response)\n            if cres == -1:\n                print( \"clientstep error\")\n                break\n            response = k.authGSSClientResponse(client)\n        if sres == k.AUTH_GSS_CONTINUE:\n            sres = k.authGSSServerStep(server, response)\n            if sres == -1:\n                print( \"serverstep error\")\n                break\n            response = k.authGSSServerResponse(server)\n\n        print( \"round:\", round)\n        print( \"server status :\", sres)\n        print( \"client status :\", cres)\n        round += 1\n\n    if sres == k.AUTH_GSS_COMPLETE and cres == k.AUTH_GSS_COMPLETE:\n        print( \"client: my username:\", k.authGSSClientUserName(client))\n        print( \"server: who authenticated to me:\", k.authGSSServerUserName(server))\n        print( \"server: my spn:\", k.authGSSServerTargetName(server))\n    else:\n\tprint(\"failed!\")\n\nWhat's not working\n==================\n\nThe methods:\n\n-  changePassword\n-  getServerPrincipalDetails\n\nare not implemented and throw an exception\n\nThe flags:\n\n-  GSS\\_C\\_ANON\\_FLAG\n-  GSS\\_C\\_PROT\\_READY\\_FLAG\n-  GSS\\_C\\_TRANS\\_FLAG\n\nare not supported (and are not defined either so aceessing them will\nthrow an exception as well). Why? I couldn't find corresponding\nISC\\_REQ\\_\\* for these flags...", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/may-day/kerberos-sspi", "keywords": null, "license": "Apache Software License 2.0", "maintainer": null, "maintainer_email": null, "name": "kerberos-sspi", "package_url": "https://pypi.org/project/kerberos-sspi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/kerberos-sspi/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/may-day/kerberos-sspi"}, "release_url": "https://pypi.org/project/kerberos-sspi/0.2/", "requires_dist": null, "requires_python": null, "summary": "Kerberos high-level windows interface", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"kerberos-sspi\">\n<h2>kerberos-sspi</h2>\n<p>This Python package is API level equivalent to the kerberos python\npackage but instead of using the MIT krb5 package it uses the windows\nsspi functionality. That allows your server and/or client that uses the\nkerberos package to run under windows by alternatively loading\nkerberos-sspi instead of the kerberos package.</p>\n<p>(If you use python with cygwin you probably just use the original\nkerberos package with a compiled MIT kerberos package.)</p>\n</div>\n<div id=\"how-to-use-it\">\n<h2>How to use it</h2>\n<p>Here is an example:</p>\n<pre><span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">kerberos</span> <span class=\"k\">as</span> <span class=\"nn\">k</span>\n<span class=\"k\">except</span><span class=\"p\">:</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">kerberos_sspi</span> <span class=\"k\">as</span> <span class=\"nn\">k</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">base64</span> <span class=\"kn\">import</span> <span class=\"n\">encodestring</span><span class=\"p\">,</span> <span class=\"n\">decodestring</span>\n\n<span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">GSS_C_CONF_FLAG</span><span class=\"o\">|</span><span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">GSS_C_INTEG_FLAG</span><span class=\"o\">|</span><span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">GSS_C_MUTUAL_FLAG</span><span class=\"o\">|</span><span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">GSS_C_SEQUENCE_FLAG</span>\n\n<span class=\"n\">errc</span><span class=\"p\">,</span> <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">authGSSClientInit</span><span class=\"p\">(</span><span class=\"s2\">\"test@vm-win7-kraemer\"</span><span class=\"p\">,</span> <span class=\"n\">gssflags</span><span class=\"o\">=</span><span class=\"n\">flags</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># to run a kerberos enabled server under my account i do as domain admin:</span>\n<span class=\"c1\">#  setspn -A test/vm-win7-kraemer MYDOMAIN\\kraemer</span>\n<span class=\"c1\"># (might have to wait a few minutes before all DCs in active directory pick it up)</span>\n<span class=\"n\">errs</span><span class=\"p\">,</span> <span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">authGSSServerInit</span><span class=\"p\">(</span><span class=\"s2\">\"test@vm-win7-kraemer\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">cres</span> <span class=\"o\">=</span> <span class=\"n\">sres</span><span class=\"o\">=</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">AUTH_GSS_CONTINUE</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>\n<span class=\"nb\">round</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"k\">while</span> <span class=\"n\">sres</span> <span class=\"o\">==</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">AUTH_GSS_CONTINUE</span> <span class=\"ow\">or</span> <span class=\"n\">cres</span> <span class=\"o\">==</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">AUTH_GSS_CONTINUE</span><span class=\"p\">:</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">cres</span> <span class=\"o\">==</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">AUTH_GSS_CONTINUE</span><span class=\"p\">:</span>\n        <span class=\"n\">cres</span> <span class=\"o\">=</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">authGSSClientStep</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">cres</span> <span class=\"o\">==</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span> <span class=\"s2\">\"clientstep error\"</span><span class=\"p\">)</span>\n            <span class=\"k\">break</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">authGSSClientResponse</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">sres</span> <span class=\"o\">==</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">AUTH_GSS_CONTINUE</span><span class=\"p\">:</span>\n        <span class=\"n\">sres</span> <span class=\"o\">=</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">authGSSServerStep</span><span class=\"p\">(</span><span class=\"n\">server</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">sres</span> <span class=\"o\">==</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span> <span class=\"s2\">\"serverstep error\"</span><span class=\"p\">)</span>\n            <span class=\"k\">break</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">authGSSServerResponse</span><span class=\"p\">(</span><span class=\"n\">server</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span> <span class=\"s2\">\"round:\"</span><span class=\"p\">,</span> <span class=\"nb\">round</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span> <span class=\"s2\">\"server status :\"</span><span class=\"p\">,</span> <span class=\"n\">sres</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span> <span class=\"s2\">\"client status :\"</span><span class=\"p\">,</span> <span class=\"n\">cres</span><span class=\"p\">)</span>\n    <span class=\"nb\">round</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">if</span> <span class=\"n\">sres</span> <span class=\"o\">==</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">AUTH_GSS_COMPLETE</span> <span class=\"ow\">and</span> <span class=\"n\">cres</span> <span class=\"o\">==</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">AUTH_GSS_COMPLETE</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span> <span class=\"s2\">\"client: my username:\"</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">authGSSClientUserName</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span> <span class=\"s2\">\"server: who authenticated to me:\"</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">authGSSServerUserName</span><span class=\"p\">(</span><span class=\"n\">server</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span> <span class=\"s2\">\"server: my spn:\"</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">authGSSServerTargetName</span><span class=\"p\">(</span><span class=\"n\">server</span><span class=\"p\">))</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"failed!\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"what-s-not-working\">\n<h2>What\u2019s not working</h2>\n<p>The methods:</p>\n<ul>\n<li>changePassword</li>\n<li>getServerPrincipalDetails</li>\n</ul>\n<p>are not implemented and throw an exception</p>\n<p>The flags:</p>\n<ul>\n<li>GSS_C_ANON_FLAG</li>\n<li>GSS_C_PROT_READY_FLAG</li>\n<li>GSS_C_TRANS_FLAG</li>\n</ul>\n<p>are not supported (and are not defined either so aceessing them will\nthrow an exception as well). Why? I couldn\u2019t find corresponding\nISC_REQ_* for these flags\u2026</p>\n</div>\n\n          </div>"}, "last_serial": 1400676, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "5981b1735d33139d6cb71497ff859f5f", "sha256": "55559b55795de8082379bbcccd3e05e979380f62d0853cffa2e58d184ccdf9f9"}, "downloads": -1, "filename": "kerberos-sspi-0.1.tar.gz", "has_sig": false, "md5_digest": "5981b1735d33139d6cb71497ff859f5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5927, "upload_time": "2012-12-09T12:25:56", "upload_time_iso_8601": "2012-12-09T12:25:56.035059Z", "url": "https://files.pythonhosted.org/packages/00/8f/35aad6a3721e9ad428eb103c50bdeefcfdee74196a07d980c1660501405c/kerberos-sspi-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "2244581f50ba2fb4c8987fb793fd7bd8", "sha256": "dba8abff7b06efa2500f085f6b3b98be28409ee5545e23fe3df1016d0270eb88"}, "downloads": -1, "filename": "kerberos-sspi-0.2.tar.gz", "has_sig": false, "md5_digest": "2244581f50ba2fb4c8987fb793fd7bd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6163, "upload_time": "2015-01-28T21:42:31", "upload_time_iso_8601": "2015-01-28T21:42:31.010262Z", "url": "https://files.pythonhosted.org/packages/02/cf/aada05c68e0cf3fb54b8710a60467c9c3927c9467ef30ab18c4371d4f32a/kerberos-sspi-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2244581f50ba2fb4c8987fb793fd7bd8", "sha256": "dba8abff7b06efa2500f085f6b3b98be28409ee5545e23fe3df1016d0270eb88"}, "downloads": -1, "filename": "kerberos-sspi-0.2.tar.gz", "has_sig": false, "md5_digest": "2244581f50ba2fb4c8987fb793fd7bd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6163, "upload_time": "2015-01-28T21:42:31", "upload_time_iso_8601": "2015-01-28T21:42:31.010262Z", "url": "https://files.pythonhosted.org/packages/02/cf/aada05c68e0cf3fb54b8710a60467c9c3927c9467ef30ab18c4371d4f32a/kerberos-sspi-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:07 2020"}