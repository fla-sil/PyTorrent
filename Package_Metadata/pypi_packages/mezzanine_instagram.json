{"info": {"author": "Sasha Vladimirskiy", "author_email": "sasha@butchershop.co", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP :: Site Management"], "description": "Installation\r\n------------\r\n\r\nIn ``virtualenv``:\r\n\r\n::\r\n\r\n    $ pip install mezzanine_instagram\r\n\r\nConfiguration\r\n-------------\r\n\r\nIn ``settings.py``:\r\n\r\n::\r\n\r\n    INSTALLED_APPS = (\r\n        ...\r\n        'mezzanine_instagram',\r\n    )\r\n\r\n    DASHBOARD_TAGS = (\r\n        ...\r\n        (\"mezzanine_tags.recent_actions\", 'instagram_tags.instagram',),\r\n    )\r\n\r\n    INSTAGRAM_CLIENT_ID = os.getenv('INSTAGRAM_CLIENT_ID')\r\n    INSTAGRAM_CLIENT_SECRET = os.getenv('INSTAGRAM_CLIENT_SECRET')\r\n\r\nIn ``urls.py``:\r\n\r\n::\r\n\r\n    urlpatterns = patterns(\r\n        '',\r\n        (\"^instagram/\", include(\"mezzanine_instagram.urls\")),\r\n        ...\r\n    )\r\n\r\nConfigure ``INSTAGRAM_CLIENT_ID`` and ``INSTAGRAM_CLIENT_SECRET``\r\nenvironment variables. Access Django admin, click\r\n``Authorize Instagram``.\r\n\r\nOnce you\u2019ve authorized your site you\u2019ll be able to access\r\n``/instagram/`` in your browser to view the feed for the authorized\r\nuser.\r\n\r\nMedia Stream\r\n------------\r\n\r\nRequires a caching mechanism like ``Memcached``, ``Database`` or\r\n``Filesystem``. Will not work with ``Local-memory`` or ``Dummy``.\r\n\r\nAdd a tag or more to use when generating the stream by going to\r\n``Dashboard > Tags``. Then run the provided management command to\r\ngenerate the stream.\r\n\r\n::\r\n\r\n    $ python manage.py build_tags_stream\r\n\r\nNow you can access the ``Media`` in ``Dashboard``. At first all images\r\nhave a green outline indicating that they\u2019ll be shown to the public.\r\nClick on the image to exclude it from your stream (the outline will turn\r\nred).\r\n\r\nWe recommend using ``cron`` or similar to run the management command on\r\na regular basis. Please be aware that Instagram limits how often you can\r\naccess their API.\r\n\r\nThe curated media stream is available to the public at\r\n``/instagram/tags/``.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/shurik/mezzanine_instagram", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "django mezzanine cms instagram", "license": "The MIT License (MIT)\r\n\r\nCopyright (c) 2015 Sasha Vladimirskiy <sasha@butchershop.co>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.", "maintainer": "", "maintainer_email": "", "name": "mezzanine_instagram", "package_url": "https://pypi.org/project/mezzanine_instagram/", "platform": "", "project_url": "https://pypi.org/project/mezzanine_instagram/", "project_urls": {"Download": "https://github.com/shurik/mezzanine_instagram"}, "release_url": "https://pypi.org/project/mezzanine_instagram/v0.0.1.dev2/", "requires_dist": null, "requires_python": null, "summary": "Integrates Mezzanine CMS with Instagram", "version": "v0.0.1.dev2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"installation\">\n<h2>Installation</h2>\n<p>In <tt>virtualenv</tt>:</p>\n<pre>$ pip install mezzanine_instagram\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>In <tt>settings.py</tt>:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'mezzanine_instagram',\n)\n\nDASHBOARD_TAGS = (\n    ...\n    (\"mezzanine_tags.recent_actions\", 'instagram_tags.instagram',),\n)\n\nINSTAGRAM_CLIENT_ID = os.getenv('INSTAGRAM_CLIENT_ID')\nINSTAGRAM_CLIENT_SECRET = os.getenv('INSTAGRAM_CLIENT_SECRET')\n</pre>\n<p>In <tt>urls.py</tt>:</p>\n<pre>urlpatterns = patterns(\n    '',\n    (\"^instagram/\", include(\"mezzanine_instagram.urls\")),\n    ...\n)\n</pre>\n<p>Configure <tt>INSTAGRAM_CLIENT_ID</tt> and <tt>INSTAGRAM_CLIENT_SECRET</tt>\nenvironment variables. Access Django admin, click\n<tt>Authorize Instagram</tt>.</p>\n<p>Once you\u2019ve authorized your site you\u2019ll be able to access\n<tt>/instagram/</tt> in your browser to view the feed for the authorized\nuser.</p>\n</div>\n<div id=\"media-stream\">\n<h2>Media Stream</h2>\n<p>Requires a caching mechanism like <tt>Memcached</tt>, <tt>Database</tt> or\n<tt>Filesystem</tt>. Will not work with <tt><span class=\"pre\">Local-memory</span></tt> or <tt>Dummy</tt>.</p>\n<p>Add a tag or more to use when generating the stream by going to\n<tt>Dashboard &gt; Tags</tt>. Then run the provided management command to\ngenerate the stream.</p>\n<pre>$ python manage.py build_tags_stream\n</pre>\n<p>Now you can access the <tt>Media</tt> in <tt>Dashboard</tt>. At first all images\nhave a green outline indicating that they\u2019ll be shown to the public.\nClick on the image to exclude it from your stream (the outline will turn\nred).</p>\n<p>We recommend using <tt>cron</tt> or similar to run the management command on\na regular basis. Please be aware that Instagram limits how often you can\naccess their API.</p>\n<p>The curated media stream is available to the public at\n<tt>/instagram/tags/</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 1416886, "releases": {"v0.0.1.dev2": [{"comment_text": "", "digests": {"md5": "3df73848b72ecb63660b6089138e2b38", "sha256": "d27b3ada33123a57981a3cd9ba71b8c4fef3d3b25344963d294de107eea495e0"}, "downloads": -1, "filename": "mezzanine_instagram-v0.0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "3df73848b72ecb63660b6089138e2b38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4326, "upload_time": "2015-02-09T22:52:27", "upload_time_iso_8601": "2015-02-09T22:52:27.617662Z", "url": "https://files.pythonhosted.org/packages/29/e0/cacf6fe7d8ef65e2b2f67022d18c936b33db3eb762ff1ad7772049b0965b/mezzanine_instagram-v0.0.1.dev1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3df73848b72ecb63660b6089138e2b38", "sha256": "d27b3ada33123a57981a3cd9ba71b8c4fef3d3b25344963d294de107eea495e0"}, "downloads": -1, "filename": "mezzanine_instagram-v0.0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "3df73848b72ecb63660b6089138e2b38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4326, "upload_time": "2015-02-09T22:52:27", "upload_time_iso_8601": "2015-02-09T22:52:27.617662Z", "url": "https://files.pythonhosted.org/packages/29/e0/cacf6fe7d8ef65e2b2f67022d18c936b33db3eb762ff1ad7772049b0965b/mezzanine_instagram-v0.0.1.dev1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:33 2020"}