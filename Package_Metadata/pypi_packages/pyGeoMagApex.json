{"info": {"author": "zzyztyy", "author_email": "2375672032@qq.com", "bugtrack_url": null, "classifiers": [], "description": "# pyGeoMagnetic\n\n## What is pyGeoMagnetic?  \nIt is a Python program about geomagnetic field based on IGRF12 and Apex model. We can calculate magnetic field intensity and transform coordinate between GeoGraphical and GeoMagnetic.  \nThe source code of IGRF12 and Apex model come from Fortran file. In this package, we reform them to Python file. Although Python can translate Fortran by pyf module, it needs Fortran compiler. This package can run without Fortran compiler.  \n****\n## How to use it?  \nmain.py includes some functions which can be used directly.  \n*We will give some example when this package is completed.*  \n****\n## What we did?\nThis model is called [Magnetic-Apex and Quasi-Dipole coordinate][apex]. It includes too many functions and complex math and physics. So in this package, we change the structure but keep the mathematic method.\nThe model has two algorithm. One is simple, basic but slow, the other one is complex but fast. We would make the simple one firstly and make another one later.\n### The Apex model includes 4 steps\n - **Get Magnetic Intensity**\n - **Map Magnetic Line to Apex Position**\n - **Calculate Magnetic Coordinate**\n - **Smooth Base Vectors**  \n *more information needs to be added after complete this part.*\n \n[apex]: https://doi.org/10.1029/2010JA015326\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zzyztyy/pyGeoMagnetic", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyGeoMagApex", "package_url": "https://pypi.org/project/pyGeoMagApex/", "platform": "", "project_url": "https://pypi.org/project/pyGeoMagApex/", "project_urls": {"Homepage": "https://github.com/zzyztyy/pyGeoMagnetic"}, "release_url": "https://pypi.org/project/pyGeoMagApex/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Coordination transform between GeoGraphic and GeoMagnetic", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # pyGeoMagnetic<br><br>## What is pyGeoMagnetic?  <br>It is a Python program about geomagnetic field based on IGRF12 and Apex model. We can calculate magnetic field intensity and transform coordinate between GeoGraphical and GeoMagnetic.  <br>The source code of IGRF12 and Apex model come from Fortran file. In this package, we reform them to Python file. Although Python can translate Fortran by pyf module, it needs Fortran compiler. This package can run without Fortran compiler.  <br>****<br>## How to use it?  <br>main.py includes some functions which can be used directly.  <br>*We will give some example when this package is completed.*  <br>****<br>## What we did?<br>This model is called [Magnetic-Apex and Quasi-Dipole coordinate][apex]. It includes too many functions and complex math and physics. So in this package, we change the structure but keep the mathematic method.<br>The model has two algorithm. One is simple, basic but slow, the other one is complex but fast. We would make the simple one firstly and make another one later.<br>### The Apex model includes 4 steps<br> - **Get Magnetic Intensity**<br> - **Map Magnetic Line to Apex Position**<br> - **Calculate Magnetic Coordinate**<br> - **Smooth Base Vectors**  <br> *more information needs to be added after complete this part.*<br> <br>[apex]: https://doi.org/10.1029/2010JA015326<br><br>\n          </div>"}, "last_serial": 4480234, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "051a4e9284c9be74183c24cdd4c6af31", "sha256": "0fb6a967bf30d0a5320ce552bc8995497b79aae54c00ddd06c4885e6a70b9423"}, "downloads": -1, "filename": "pyGeoMagApex-0.1.0.tar.gz", "has_sig": false, "md5_digest": "051a4e9284c9be74183c24cdd4c6af31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6787, "upload_time": "2018-11-12T08:13:50", "upload_time_iso_8601": "2018-11-12T08:13:50.357938Z", "url": "https://files.pythonhosted.org/packages/68/27/f60d7888991afdc8866fe49f9c53b15d614a07a1cddd77b6617165c72df3/pyGeoMagApex-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e1915654d951e3d150a83d5fb0992db3", "sha256": "ca7768025ae3be544bc7482c5449e272a430b8f6d762c680124133dde5ecec5e"}, "downloads": -1, "filename": "pyGeoMagApex-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e1915654d951e3d150a83d5fb0992db3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6784, "upload_time": "2018-11-13T03:25:23", "upload_time_iso_8601": "2018-11-13T03:25:23.004128Z", "url": "https://files.pythonhosted.org/packages/fd/65/89e78c6c36b8d20e6982430390ef2e1da3035cfc601c38775e3be5ded973/pyGeoMagApex-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e1915654d951e3d150a83d5fb0992db3", "sha256": "ca7768025ae3be544bc7482c5449e272a430b8f6d762c680124133dde5ecec5e"}, "downloads": -1, "filename": "pyGeoMagApex-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e1915654d951e3d150a83d5fb0992db3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6784, "upload_time": "2018-11-13T03:25:23", "upload_time_iso_8601": "2018-11-13T03:25:23.004128Z", "url": "https://files.pythonhosted.org/packages/fd/65/89e78c6c36b8d20e6982430390ef2e1da3035cfc601c38775e3be5ded973/pyGeoMagApex-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:06 2020"}