{"info": {"author": "Alex Couper", "author_email": "amcouper@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Topic :: Software Development"], "description": "south-jurisdiction\n==================\n\nMotivation\n----------\nSouth isn't great at handling differing requirements from multiple databases\nin a django application.\n\nSouth assumes that there will at least be a south_migration_history table\navailable at the point of running migrate against a given database.\n\nThis is fine when your django app is only dealing with one default database,\nbut becomes much less pleasant when wanting to add extra database sources that\nperhaps south shouldn't have jurisdiction over.\n\n\nLet's say your ``django.conf`` settings look something like::\n\n    DATABASES = {\n        'default': {\n            ...\n            'NAME': 'my_own_db',\n            ...\n        },\n\n        'super_secure': {\n            ...\n            'NAME': 'super_secure',\n            ...\n        }\n    }\n\nYou wouldn't want ``syncdb`` to create tables in the ``super_secure`` DB, and\nthat would be achieved by creating a database router, along with an\n``allow_syncdb`` method and include that in a ``DATABASE_ROUTER`` setting.\nDone.\n\nYou **also** wouldn't want ``migrate`` to do anything in super_secure. As it\nstands, ``south`` fails at this because the first thing it does is see if there\nare any migrations in the database by looking at the south_migration_history\ntable. Because syncdb didn't create this you get FAILURE.\n\nSolution\n--------\n\nSouth jurisdiction introduces a new setting to the django settings module::\n\n    SOUTH_MANAGED_DBS = []\n\nThis is intended to be populated with the keys of the databases that you want\nsouth to manage. In the above example it would read::\n\n    SOUTH_MANAGED_DBS = ['default']\n\nAny attempt to migrate on a database not included in SOUTH_MANAGED_DBS is\nrejected gracefully.\n\nIf this setting is not included in your django settings module then all\ndatabases will be looked at for migration as normal.\n\nConfiguration\n-------------\n\n - Add ``\"south_jurisdiction\"`` to ``INSTALLED_APPS`` in your settings, after\n   the ``\"south\"`` app.\n - Use the new ``SOUTH_MANAGED_DBS`` setting available to you.\n - If you don't want to run the south_jurisdiction tests, use the\n   ``SKIP_SOUTH_TESTS`` setting in the same way as you do for south.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alexcouper/django-south-jurisdiction/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "south_jurisdiction", "package_url": "https://pypi.org/project/south_jurisdiction/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/south_jurisdiction/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/alexcouper/django-south-jurisdiction/"}, "release_url": "https://pypi.org/project/south_jurisdiction/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "South migrations with database jurisdictions for Django", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"motivation\">\n<h2>Motivation</h2>\n<p>South isn\u2019t great at handling differing requirements from multiple databases\nin a django application.</p>\n<p>South assumes that there will at least be a south_migration_history table\navailable at the point of running migrate against a given database.</p>\n<p>This is fine when your django app is only dealing with one default database,\nbut becomes much less pleasant when wanting to add extra database sources that\nperhaps south shouldn\u2019t have jurisdiction over.</p>\n<p>Let\u2019s say your <tt>django.conf</tt> settings look something like:</p>\n<pre>DATABASES = {\n    'default': {\n        ...\n        'NAME': 'my_own_db',\n        ...\n    },\n\n    'super_secure': {\n        ...\n        'NAME': 'super_secure',\n        ...\n    }\n}\n</pre>\n<p>You wouldn\u2019t want <tt>syncdb</tt> to create tables in the <tt>super_secure</tt> DB, and\nthat would be achieved by creating a database router, along with an\n<tt>allow_syncdb</tt> method and include that in a <tt>DATABASE_ROUTER</tt> setting.\nDone.</p>\n<p>You <strong>also</strong> wouldn\u2019t want <tt>migrate</tt> to do anything in super_secure. As it\nstands, <tt>south</tt> fails at this because the first thing it does is see if there\nare any migrations in the database by looking at the south_migration_history\ntable. Because syncdb didn\u2019t create this you get FAILURE.</p>\n</div>\n<div id=\"solution\">\n<h2>Solution</h2>\n<p>South jurisdiction introduces a new setting to the django settings module:</p>\n<pre>SOUTH_MANAGED_DBS = []\n</pre>\n<p>This is intended to be populated with the keys of the databases that you want\nsouth to manage. In the above example it would read:</p>\n<pre>SOUTH_MANAGED_DBS = ['default']\n</pre>\n<p>Any attempt to migrate on a database not included in SOUTH_MANAGED_DBS is\nrejected gracefully.</p>\n<p>If this setting is not included in your django settings module then all\ndatabases will be looked at for migration as normal.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<blockquote>\n<ul>\n<li>Add <tt>\"south_jurisdiction\"</tt> to <tt>INSTALLED_APPS</tt> in your settings, after\nthe <tt>\"south\"</tt> app.</li>\n<li>Use the new <tt>SOUTH_MANAGED_DBS</tt> setting available to you.</li>\n<li>If you don\u2019t want to run the south_jurisdiction tests, use the\n<tt>SKIP_SOUTH_TESTS</tt> setting in the same way as you do for south.</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 799851, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "e9b05b40dc1ccdf14846b4b7d8350e93", "sha256": "192934d0bbf2c4f05a860965d89fbfa877bfba66212cb3a5016327c82656ea0f"}, "downloads": -1, "filename": "south_jurisdiction-0.1.tar.gz", "has_sig": false, "md5_digest": "e9b05b40dc1ccdf14846b4b7d8350e93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2559, "upload_time": "2013-02-01T21:33:57", "upload_time_iso_8601": "2013-02-01T21:33:57.459673Z", "url": "https://files.pythonhosted.org/packages/97/e0/b2541e0eff41666a890fd583d981ec290d1c5eed7d486971b45c43b514df/south_jurisdiction-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "56ce8396077743b3211e206dcc949669", "sha256": "c2c95d7540b9a57b44673989b87db5d878b285d916eb9f04aec84e6f94c592ce"}, "downloads": -1, "filename": "south_jurisdiction-0.1.1.tar.gz", "has_sig": false, "md5_digest": "56ce8396077743b3211e206dcc949669", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2757, "upload_time": "2013-02-02T09:50:01", "upload_time_iso_8601": "2013-02-02T09:50:01.669119Z", "url": "https://files.pythonhosted.org/packages/86/07/37948d8626b44c7985332141d9e5f94cde86217f5baf41615d8a46e72327/south_jurisdiction-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7a22e921e653922afc730e027bbd8cd5", "sha256": "a8475b4a07a29e5117b6142f0c0b5a61bab87d90497c2cad301db6133db337f0"}, "downloads": -1, "filename": "south_jurisdiction-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7a22e921e653922afc730e027bbd8cd5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2920, "upload_time": "2013-02-02T22:38:15", "upload_time_iso_8601": "2013-02-02T22:38:15.178896Z", "url": "https://files.pythonhosted.org/packages/d8/79/3ee46bbe6a73815953919974eeb93a8ee0533316da7180cf17611a2e70d9/south_jurisdiction-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7a22e921e653922afc730e027bbd8cd5", "sha256": "a8475b4a07a29e5117b6142f0c0b5a61bab87d90497c2cad301db6133db337f0"}, "downloads": -1, "filename": "south_jurisdiction-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7a22e921e653922afc730e027bbd8cd5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2920, "upload_time": "2013-02-02T22:38:15", "upload_time_iso_8601": "2013-02-02T22:38:15.178896Z", "url": "https://files.pythonhosted.org/packages/d8/79/3ee46bbe6a73815953919974eeb93a8ee0533316da7180cf17611a2e70d9/south_jurisdiction-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:15 2020"}