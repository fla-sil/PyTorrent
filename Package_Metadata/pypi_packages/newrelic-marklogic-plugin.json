{"info": {"author": "James Fuller", "author_email": "jim.fuller@marklogic.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "newrelic-marklogic-plugin\n=========================\n\n`NewRelic <http://www.newrelic.com>`__ plugin for monitoring MarkLogic.\n\nFeatures\n--------\n\n-  Easy to install\n-  Configurable selection of metrics to retrieve\n-  Retrieve summary metrics on local cluster, hosts, servers & forests\n-  Retrieve detail metrics on databases, forests, hosts, groups & servers\n-  Proxy access to NewRelic api\n-  Sample monitoring dashboards available at `NewRelic plugin central <https://newrelic.com/plugins>`__.\n\nBefore you start\n----------------\n\n- Require minimally `Python 2.7.10  <https://www.python.org/>`__ installed\n- `Requests python package <https://pypi.python.org/pypi/requests>`__ v2.11 or greater\n- Require minimally `MarkLogic v7.0-6 <http://developer.marklogic.com/products>`__ installed and running\n- Require `New Relic <http://www.newrelic.com/>`__ account\n\nDocs\n----\n\n- `newrelic-marklogic-plugin docs on github <https://github.com/marklogic-community/newrelic-plugin>`__\n- `newrelic-marklogic-plugin docs on pypi <https://pypi.python.org/pypi/newrelic-marklogic-plugin>`__\n\nInstall, configure & run\n------------------------\n\nInstall the plugin using any of the following methods.\n\n- install from pypi repository:\n\n  ``pip install newrelic-marklogic-plugin``\n\n- install direct from GitHub:\n\n  ``pip install https://github.com/marklogic-community/newrelic-plugin/archive/master.zip``\n\n- download `release <https://github.com/marklogic-community/newrelic-plugin/releases>`__  (or clone) repository and run the following:\n\n  ``python setup.py install``\n\n\nNext step is to create and edit configuration file.\n\n1) Copy\n   `etc/newrelic\\_marklogic.conf.sample <https://github.com/marklogic-community/newrelic-plugin/blob/master/etc/newrelic_marklogic.conf.sample>`__\n   and to ``newrelic_marklogic.conf``\n\n2) Edit ``newrelic_marklogic.conf`` ensuring correct MarkLogic\n   connection details and NewRelic license key\n\nStart reporting metrics to NewRelic by running the following:\n\n``newrelic_marklogic.py -c newrelic_marklogic.conf``\n\nWhich samples metrics every period of length duration as set within configuration.\n\nIt is recommended to initiate plugin as a background task, run via a scheduler (ex. cron job) or using any other\napproach appropriate for your environment.\n\nRunning with -h flag will emit usage instructions for running plugin:\n\n``newrelic_marklogic.py -h``\n\n::\n\n    usage: ./newrelic_marklogic.py [-h] [-c config file] [-l log file]\n\n    -h print usage instructions  (this message)\n    -c config file               (default: newrelic_marklogic.conf)\n    -l log file                  (default: newrelic_marklogic.log)\n\nUsage\n-----\n\nThe configuration file drives all newrelic-marklogic-plugin features and is split into several sections.\n\nThe 'marklogic' section contains connection details to MarkLogic server and Management REST API.\n\n::\n\n    [marklogic]\n\n    # Scheme to use when accessing MarkLogic management REST API (http|https).\n    scheme = http\n\n    # Host to use when accessing MarkLogic management REST API (FQDN hostname).\n    host = localhost\n\n    # Port to use when accessing MarkLogic management REST API.\n    port = 8002\n\n    # Authentication to use when accessing MarkLogic management REST API (BASIC|DIGEST).\n    auth= DIGEST\n\n    # Username to use when accessing MarkLogic management REST API.\n    user = admin\n\n    # Password to use when accessing MarkLogic management REST API.\n    pass = admin\n\n    # (optional) Either a boolean, in which case it controls whether we verify\n    # the server's TLS certificate, or a string, in which case it must be a path\n    # to a CA bundle to use. Defaults to ``False``.\n    verify = False\n\nThe 'newrelic' section specifies the New Relic license key. Optionally you may nominate a proxy for accessing the New Relic Plugin API.\n\n::\n\n    [newrelic]\n\n    # Your NewRelic license key.\n    key = ****************************************\n\n    # Proxy (ex. http://10.10.1.10:3128).\n    http_proxy =\n\nThe 'plugin' section defines sample period for updating New Relic, as well as the logging level for emitting messages about plugin operation.\n\nThere are a set of configurations for defining which statuses are captured by New Relic, summarized below.\n\n- **summary_status** (True|False): retrieve local cluster summary status.\n- **databases** (list of databases): retrieve database detailed status.\n- **hosts_summary_status** (True|False):  retrieve summary of all hosts status.\n- **hosts** (list of hosts): retrieve host detailed status.\n- **forests_summary_status** (True|False): retrieve summary of all forests status.\n- **forests** (list of forests): retrieve forest detailed status.\n- **groups** (list of groups): retrieve group detailed status.\n- **servers_summary_status** (True|False): retrieve summary of all servers status.\n- **servers** (list of servers): retrieve server detailed status.\n\n::\n\n    [plugin]\n\n    # New Relic plugin display name.\n    name = myMarkLogicServer\n\n    # Unique New Relic plugin guid.\n    guid = com.marklogic\n\n    # Sample period in seconds.\n    duration = 60\n\n    # Set logging level (INFO|DEBUG|ERROR).\n    log_level = DEBUG\n\n    # Local cluster summary.\n    summary_status = False\n\n    # Database(s) detail status.\n    databases = Documents\n\n    # Hosts summary.\n    hosts_summary_status = True\n\n    # Host(s) detail status.\n    hosts = 127.0.0.1\n\n    # Forests summary.\n    forests_summary_status = True\n\n    # Forest(s) detail status.\n    forests = Documents Meters\n\n    # Group(s) detail status.\n    groups = Default\n\n    # Servers summary.\n    servers_summary_status = True\n\n    # Server(s) detail status (must supply group name ex. ServerName:GroupName).\n    servers = Manage:Default\n\nCreate pypi distribution\n---------------------------------------\n\n1. To create an official distribution, first ensure that all tests are passing:\n\n   ``python -m unittest discover -s tests``\n\n2. bump version number and create a distro:\n\n   ``python setup.py sdist``\n\n3. Upload the package to pypitest:\n\n   ``twine upload --repository-url https://test.pypi.org/legacy/ dist/*``\n\n4. after verifying all is well, generate the distro on pypi:\n\n   ``twine upload dist/*``\n\nIssues, feature requests & contributing\n---------------------------------------\n\nPlease file `bug reports <https://github.com/marklogic-community/newrelic-plugin/issues>`__, `feature\nrequests <https://github.com/marklogic-community/newrelic-plugin/issues>`__, and contribute with `pull\nrequests <https://github.com/marklogic-community/newrelic-plugin/pulls>`__ through GitHub.\n\nCopyright & License\n-------------------\n\nnewrelic-marklogic-plugin Copyright 2019 MarkLogic Corporation\n\nnewrelic-marklogic-plugin is licensed under the Apache License, Version 2.0 (the \"License\"). A copy of the license is included within this package.\n\n`Apache License v2.0 <https://github.com/marklogic-community/newrelic-plugin/blob/master/LICENSE>`__", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/marklogic-community/newrelic-plugin", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "newrelic-marklogic-plugin", "package_url": "https://pypi.org/project/newrelic-marklogic-plugin/", "platform": "any", "project_url": "https://pypi.org/project/newrelic-marklogic-plugin/", "project_urls": {"Homepage": "https://github.com/marklogic-community/newrelic-plugin"}, "release_url": "https://pypi.org/project/newrelic-marklogic-plugin/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "New Relic plugin for monitoring MarkLogic.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"http://www.newrelic.com\" rel=\"nofollow\">NewRelic</a> plugin for monitoring MarkLogic.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Easy to install</li>\n<li>Configurable selection of metrics to retrieve</li>\n<li>Retrieve summary metrics on local cluster, hosts, servers &amp; forests</li>\n<li>Retrieve detail metrics on databases, forests, hosts, groups &amp; servers</li>\n<li>Proxy access to NewRelic api</li>\n<li>Sample monitoring dashboards available at <a href=\"https://newrelic.com/plugins\" rel=\"nofollow\">NewRelic plugin central</a>.</li>\n</ul>\n</div>\n<div id=\"before-you-start\">\n<h2>Before you start</h2>\n<ul>\n<li>Require minimally <a href=\"https://www.python.org/\" rel=\"nofollow\">Python 2.7.10</a> installed</li>\n<li><a href=\"https://pypi.python.org/pypi/requests\" rel=\"nofollow\">Requests python package</a> v2.11 or greater</li>\n<li>Require minimally <a href=\"http://developer.marklogic.com/products\" rel=\"nofollow\">MarkLogic v7.0-6</a> installed and running</li>\n<li>Require <a href=\"http://www.newrelic.com/\" rel=\"nofollow\">New Relic</a> account</li>\n</ul>\n</div>\n<div id=\"docs\">\n<h2>Docs</h2>\n<ul>\n<li><a href=\"https://github.com/marklogic-community/newrelic-plugin\" rel=\"nofollow\">newrelic-marklogic-plugin docs on github</a></li>\n<li><a href=\"https://pypi.python.org/pypi/newrelic-marklogic-plugin\" rel=\"nofollow\">newrelic-marklogic-plugin docs on pypi</a></li>\n</ul>\n</div>\n<div id=\"install-configure-run\">\n<h2>Install, configure &amp; run</h2>\n<p>Install the plugin using any of the following methods.</p>\n<ul>\n<li><p>install from pypi repository:</p>\n<p><tt>pip install <span class=\"pre\">newrelic-marklogic-plugin</span></tt></p>\n</li>\n<li><p>install direct from GitHub:</p>\n<p><tt>pip install <span class=\"pre\">https://github.com/marklogic-community/newrelic-plugin/archive/master.zip</span></tt></p>\n</li>\n<li><p>download <a href=\"https://github.com/marklogic-community/newrelic-plugin/releases\" rel=\"nofollow\">release</a>  (or clone) repository and run the following:</p>\n<p><tt>python setup.py install</tt></p>\n</li>\n</ul>\n<p>Next step is to create and edit configuration file.</p>\n<ol>\n<li>Copy\n<a href=\"https://github.com/marklogic-community/newrelic-plugin/blob/master/etc/newrelic_marklogic.conf.sample\" rel=\"nofollow\">etc/newrelic_marklogic.conf.sample</a>\nand to <tt>newrelic_marklogic.conf</tt></li>\n<li>Edit <tt>newrelic_marklogic.conf</tt> ensuring correct MarkLogic\nconnection details and NewRelic license key</li>\n</ol>\n<p>Start reporting metrics to NewRelic by running the following:</p>\n<p><tt>newrelic_marklogic.py <span class=\"pre\">-c</span> newrelic_marklogic.conf</tt></p>\n<p>Which samples metrics every period of length duration as set within configuration.</p>\n<p>It is recommended to initiate plugin as a background task, run via a scheduler (ex. cron job) or using any other\napproach appropriate for your environment.</p>\n<p>Running with -h flag will emit usage instructions for running plugin:</p>\n<p><tt>newrelic_marklogic.py <span class=\"pre\">-h</span></tt></p>\n<pre>usage: ./newrelic_marklogic.py [-h] [-c config file] [-l log file]\n\n-h print usage instructions  (this message)\n-c config file               (default: newrelic_marklogic.conf)\n-l log file                  (default: newrelic_marklogic.log)\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The configuration file drives all newrelic-marklogic-plugin features and is split into several sections.</p>\n<p>The \u2018marklogic\u2019 section contains connection details to MarkLogic server and Management REST API.</p>\n<pre>[marklogic]\n\n# Scheme to use when accessing MarkLogic management REST API (http|https).\nscheme = http\n\n# Host to use when accessing MarkLogic management REST API (FQDN hostname).\nhost = localhost\n\n# Port to use when accessing MarkLogic management REST API.\nport = 8002\n\n# Authentication to use when accessing MarkLogic management REST API (BASIC|DIGEST).\nauth= DIGEST\n\n# Username to use when accessing MarkLogic management REST API.\nuser = admin\n\n# Password to use when accessing MarkLogic management REST API.\npass = admin\n\n# (optional) Either a boolean, in which case it controls whether we verify\n# the server's TLS certificate, or a string, in which case it must be a path\n# to a CA bundle to use. Defaults to ``False``.\nverify = False\n</pre>\n<p>The \u2018newrelic\u2019 section specifies the New Relic license key. Optionally you may nominate a proxy for accessing the New Relic Plugin API.</p>\n<pre>[newrelic]\n\n# Your NewRelic license key.\nkey = ****************************************\n\n# Proxy (ex. http://10.10.1.10:3128).\nhttp_proxy =\n</pre>\n<p>The \u2018plugin\u2019 section defines sample period for updating New Relic, as well as the logging level for emitting messages about plugin operation.</p>\n<p>There are a set of configurations for defining which statuses are captured by New Relic, summarized below.</p>\n<ul>\n<li><strong>summary_status</strong> (True|False): retrieve local cluster summary status.</li>\n<li><strong>databases</strong> (list of databases): retrieve database detailed status.</li>\n<li><strong>hosts_summary_status</strong> (True|False):  retrieve summary of all hosts status.</li>\n<li><strong>hosts</strong> (list of hosts): retrieve host detailed status.</li>\n<li><strong>forests_summary_status</strong> (True|False): retrieve summary of all forests status.</li>\n<li><strong>forests</strong> (list of forests): retrieve forest detailed status.</li>\n<li><strong>groups</strong> (list of groups): retrieve group detailed status.</li>\n<li><strong>servers_summary_status</strong> (True|False): retrieve summary of all servers status.</li>\n<li><strong>servers</strong> (list of servers): retrieve server detailed status.</li>\n</ul>\n<pre>[plugin]\n\n# New Relic plugin display name.\nname = myMarkLogicServer\n\n# Unique New Relic plugin guid.\nguid = com.marklogic\n\n# Sample period in seconds.\nduration = 60\n\n# Set logging level (INFO|DEBUG|ERROR).\nlog_level = DEBUG\n\n# Local cluster summary.\nsummary_status = False\n\n# Database(s) detail status.\ndatabases = Documents\n\n# Hosts summary.\nhosts_summary_status = True\n\n# Host(s) detail status.\nhosts = 127.0.0.1\n\n# Forests summary.\nforests_summary_status = True\n\n# Forest(s) detail status.\nforests = Documents Meters\n\n# Group(s) detail status.\ngroups = Default\n\n# Servers summary.\nservers_summary_status = True\n\n# Server(s) detail status (must supply group name ex. ServerName:GroupName).\nservers = Manage:Default\n</pre>\n</div>\n<div id=\"create-pypi-distribution\">\n<h2>Create pypi distribution</h2>\n<ol>\n<li><p>To create an official distribution, first ensure that all tests are passing:</p>\n<p><tt>python <span class=\"pre\">-m</span> unittest discover <span class=\"pre\">-s</span> tests</tt></p>\n</li>\n<li><p>bump version number and create a distro:</p>\n<p><tt>python setup.py sdist</tt></p>\n</li>\n<li><p>Upload the package to pypitest:</p>\n<p><tt>twine upload <span class=\"pre\">--repository-url</span> <span class=\"pre\">https://test.pypi.org/legacy/</span> dist/*</tt></p>\n</li>\n<li><p>after verifying all is well, generate the distro on pypi:</p>\n<p><tt>twine upload dist/*</tt></p>\n</li>\n</ol>\n</div>\n<div id=\"issues-feature-requests-contributing\">\n<h2>Issues, feature requests &amp; contributing</h2>\n<p>Please file <a href=\"https://github.com/marklogic-community/newrelic-plugin/issues\" rel=\"nofollow\">bug reports</a>, <a href=\"https://github.com/marklogic-community/newrelic-plugin/issues\" rel=\"nofollow\">feature\nrequests</a>, and contribute with <a href=\"https://github.com/marklogic-community/newrelic-plugin/pulls\" rel=\"nofollow\">pull\nrequests</a> through GitHub.</p>\n</div>\n<div id=\"copyright-license\">\n<h2>Copyright &amp; License</h2>\n<p>newrelic-marklogic-plugin Copyright 2019 MarkLogic Corporation</p>\n<p>newrelic-marklogic-plugin is licensed under the Apache License, Version 2.0 (the \u201cLicense\u201d). A copy of the license is included within this package.</p>\n<p><a href=\"https://github.com/marklogic-community/newrelic-plugin/blob/master/LICENSE\" rel=\"nofollow\">Apache License v2.0</a></p>\n</div>\n\n          </div>"}, "last_serial": 6362237, "releases": {"0.2.2": [{"comment_text": "", "digests": {"md5": "62535284afa4fd39dcfa67c93894dbed", "sha256": "58f0bdc02c488cc77f5296f2c641baa8eff2e9a553e7c575160ef24ebe603f38"}, "downloads": -1, "filename": "newrelic_marklogic_plugin-0.2.2.tar.gz", "has_sig": false, "md5_digest": "62535284afa4fd39dcfa67c93894dbed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17954, "upload_time": "2016-07-14T07:50:00", "upload_time_iso_8601": "2016-07-14T07:50:00.938928Z", "url": "https://files.pythonhosted.org/packages/31/f6/d442c83dfba5807e17287e25c74c311f1117e240ce338f216f1eee6399d1/newrelic_marklogic_plugin-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "f314da9b290b97045625c9f144056657", "sha256": "4d562d5d6384a7fa434427b5a5893401592d68f1052992d3c26542fb10bdc697"}, "downloads": -1, "filename": "newrelic_marklogic_plugin-0.2.3.tar.gz", "has_sig": false, "md5_digest": "f314da9b290b97045625c9f144056657", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17927, "upload_time": "2016-09-21T19:13:13", "upload_time_iso_8601": "2016-09-21T19:13:13.315500Z", "url": "https://files.pythonhosted.org/packages/72/5d/1961e2f3553210be60e7de97485a708a922d887fef7b987b11063b044514/newrelic_marklogic_plugin-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "a1177bf1d6c2c4f6e3a0f25807c95343", "sha256": "1a804a1527b790bbad22436cee08130934020765fd6bca329bcdf5c099d264b0"}, "downloads": -1, "filename": "newrelic_marklogic_plugin-0.2.4.tar.gz", "has_sig": false, "md5_digest": "a1177bf1d6c2c4f6e3a0f25807c95343", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19487, "upload_time": "2016-10-19T16:10:40", "upload_time_iso_8601": "2016-10-19T16:10:40.891471Z", "url": "https://files.pythonhosted.org/packages/b6/30/1c05f22299ca4eb0467e793e810b265364197bbcf0d4ff31936578d3b5a4/newrelic_marklogic_plugin-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "9ba2ba6ba87368ff6da03f8a75ffe228", "sha256": "a873317788ebade6c3c645a16caefa8db607b21c421489a0c97e3623a1bc6273"}, "downloads": -1, "filename": "newrelic_marklogic_plugin-0.2.5.tar.gz", "has_sig": false, "md5_digest": "9ba2ba6ba87368ff6da03f8a75ffe228", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19481, "upload_time": "2016-10-19T16:22:41", "upload_time_iso_8601": "2016-10-19T16:22:41.603894Z", "url": "https://files.pythonhosted.org/packages/4e/4f/17da5728f8fb41c2ff2f442748bd923b31da4cb0cbe3deab380b5a2bb483/newrelic_marklogic_plugin-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "d2d9ee89ac35f8e94afbbbe50a66c22b", "sha256": "63f63c710a741659ab102fae473b5e287871d13841c6495a51b5a7a8455e1a7d"}, "downloads": -1, "filename": "newrelic_marklogic_plugin-0.2.6.tar.gz", "has_sig": false, "md5_digest": "d2d9ee89ac35f8e94afbbbe50a66c22b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19621, "upload_time": "2016-10-23T11:48:40", "upload_time_iso_8601": "2016-10-23T11:48:40.564558Z", "url": "https://files.pythonhosted.org/packages/c9/2d/f61023853a95eb4a54cea69729002dc92bea87b042fe242aa817eab0e376/newrelic_marklogic_plugin-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "e3bebbedc4b55f1de18c6995b99a4ae0", "sha256": "e43e823f52e10e2c2c42775b4ec9869b38f9ae3cb48ad1dcd767fa71d2b41179"}, "downloads": -1, "filename": "newrelic_marklogic_plugin-0.2.7.tar.gz", "has_sig": false, "md5_digest": "e3bebbedc4b55f1de18c6995b99a4ae0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19630, "upload_time": "2016-10-31T07:18:30", "upload_time_iso_8601": "2016-10-31T07:18:30.911956Z", "url": "https://files.pythonhosted.org/packages/30/cb/fa58778965b35eb274fd62651886626728619f465b939e33cccc6265f5ba/newrelic_marklogic_plugin-0.2.7.tar.gz", "yanked": false}], "0.2.8": [], "0.3.0": [{"comment_text": "", "digests": {"md5": "42fe30a5815dddafaa617729c9358d4f", "sha256": "1119d652c0e1ec5dc11cf4bf7ac734512d487badb45aecc20bd672a6944f4aa5"}, "downloads": -1, "filename": "newrelic_marklogic_plugin-0.3.0.tar.gz", "has_sig": false, "md5_digest": "42fe30a5815dddafaa617729c9358d4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16382, "upload_time": "2019-12-26T16:25:47", "upload_time_iso_8601": "2019-12-26T16:25:47.646857Z", "url": "https://files.pythonhosted.org/packages/bd/53/237e5d81591c1f9072fb539a830a4d3671e31a9e2b803723138b28f40eb9/newrelic_marklogic_plugin-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "42fe30a5815dddafaa617729c9358d4f", "sha256": "1119d652c0e1ec5dc11cf4bf7ac734512d487badb45aecc20bd672a6944f4aa5"}, "downloads": -1, "filename": "newrelic_marklogic_plugin-0.3.0.tar.gz", "has_sig": false, "md5_digest": "42fe30a5815dddafaa617729c9358d4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16382, "upload_time": "2019-12-26T16:25:47", "upload_time_iso_8601": "2019-12-26T16:25:47.646857Z", "url": "https://files.pythonhosted.org/packages/bd/53/237e5d81591c1f9072fb539a830a4d3671e31a9e2b803723138b28f40eb9/newrelic_marklogic_plugin-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:40 2020"}