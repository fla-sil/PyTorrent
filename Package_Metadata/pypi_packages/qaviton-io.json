{"info": {"author": "yehonadav", "author_email": "qaviton@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3.7"], "description": "# Qaviton IO  \n![logo](https://www.qaviton.com/wp-content/uploads/logo-svg.svg)  \n[![version](https://img.shields.io/pypi/v/qaviton_io.svg)](https://pypi.python.org/pypi)\n[![license](https://img.shields.io/pypi/l/qaviton_io.svg)](https://pypi.python.org/pypi)\n[![open issues](https://img.shields.io/github/issues/yehonadav/qaviton_io)](https://github/issues-raw/yehonadav/qaviton_io)\n[![downloads](https://img.shields.io/pypi/dm/qaviton_io.svg)](https://pypi.python.org/pypi)\n![code size](https://img.shields.io/github/languages/code-size/yehonadav/qaviton_io)\n-------------------------  \n\nQaviton IO  \nis a package with a simple API, making use of python's async & multiprocessing  \nto enable fast execution of many asyncable operations.  \n\n## Installation  \n```sh  \npip install qaviton-io -U\n```  \n\n### Requirements  \n- Python 3.6+  \n\n## Features  \n* async task manager  \n* process task manager  \n* task logger  \n\n## Usage  \n\n#### async manager:  \n\n```python\nfrom time import time\nfrom requests import get  # lets make use of requests to make async http calls\nfrom qaviton_io import AsyncManager, task\n\n\n# let's create an async manager\nm = AsyncManager()\n\n\n# first we make a simple function to make an http call.\n# we want to log the result,\n# and make sure that in case of an exception\n# the manager won't stop\n@task(exceptions=Exception)\ndef task(): return get(\"https://qaviton.com\")\n\n\n# this will run async tasks and measure their duration\ndef run(tasks):\n    t = time()\n    m.run(tasks)\n    t = time() - t\n    print(f'took {round(t, 3)}s')\n\n\n# let's run our task once and see how long it takes\nrun([task for _ in range(1)])\n\n# now let's run our task 20 times and see how long it takes\nrun([task for _ in range(20)])\n\n# we can assert the collected results here\nassert len(m.results) == 21\nfor r in m.results:\n    assert r.status_code == 200\n\n# let's view the results in the log report\nm.report()\n```  \n\n#### process manager:  \n\n```python\n\"\"\"\nmake sure your tasks are defined at the module level,\nso they can be pickled by multiprocessing\n\"\"\"\nfrom time import time\nfrom requests import get\nfrom qaviton_io.types import Tasks\nfrom qaviton_io import ProcessManager, task\nfrom traceback import format_exc\n\n\n# now we make some tasks\n# this is a nested task\n# we don't want to handle any exceptions\n# so in case of failure the parent will not proceed\n@task()\ndef task1(url):\n    r = get(url)\n    r.raise_for_status()\n\n\n# this is the prent task\n# we want to handle all exceptions\n# so in case of failure the next task will execute\n@task(exceptions=Exception)\ndef multi_task():\n    for url in [\n        \"https://qaviton.com\",\n        \"https://qaviton.co.il\",  # make sure you enter a valid address\n        \"https://qaviton.com1\",  # make sure you enter a valid address\n    ]:\n        task1(url)\n\n\n# let's create a function to execute tasks\ndef execute_tasks(tasks: Tasks, timeout):\n    manager = ProcessManager()\n    t = time()\n    try:\n        manager.run_until_complete(tasks, timeout=timeout)\n        timed_out = None\n    except TimeoutError:\n        timed_out = format_exc()\n    t = time() - t\n    manager.report()\n    print(f'took {round(t, 3)}s\\n')\n    manager.log.clear()\n    return timed_out\n\n\n# now all that's left is to run the tasks\nif __name__ == \"__main__\":\n    timeouts = [\n        execute_tasks([multi_task for _ in range(1)], timeout=3),\n        execute_tasks([multi_task for _ in range(20)], timeout=6),\n        execute_tasks([multi_task for _ in range(80)], timeout=9),\n    ]\n    for timeout in timeouts:\n        if timeout:\n            print(timeout)\n```  \n\n## notes:  \n\n* for good performance and easy usage  \nyou should probably stick with using the AsyncManager  \n\n* The ProcessManager uses async operations as well as multi-processing.  \nIt distributes tasks across cpus, and those tasks are executed using the AsyncManager  \nif you want maximum efficiency you should consider using the ProcessManager  \n\n* The ProcessManager uses the multiprocessing module  \nand should be treated with it's restrictions & limitations accordingly  \n\n* The ProcessManager gets stuck easily,  \nmake sure to use timeouts when using it  \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yehonadav/qaviton_io", "keywords": "", "license": "apache-2.0", "maintainer": "", "maintainer_email": "", "name": "qaviton-io", "package_url": "https://pypi.org/project/qaviton-io/", "platform": "", "project_url": "https://pypi.org/project/qaviton-io/", "project_urls": {"Homepage": "https://github.com/yehonadav/qaviton_io"}, "release_url": "https://pypi.org/project/qaviton-io/2019.11.13.13.29.23.745334/", "requires_dist": ["qaviton-processes (>=2019.11.1.13.50.43.917059)", "colorama (>=0.4.1)"], "requires_python": "", "summary": "qaviton io", "version": "2019.11.13.13.29.23.745334", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Qaviton IO</h1>\n<h2><img alt=\"logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac70e4346d1daecc53270b01f175ac4a30d721b0/68747470733a2f2f7777772e71617669746f6e2e636f6d2f77702d636f6e74656e742f75706c6f6164732f6c6f676f2d7376672e737667\"><br>\n<a href=\"https://pypi.python.org/pypi\" rel=\"nofollow\"><img alt=\"version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/50f5739d31a0d08ea561da965d2091244d0ecbf0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f71617669746f6e5f696f2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f764ce1bc239fa89bdaeba46b0a2789c74f2f9ef/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f71617669746f6e5f696f2e737667\"></a>\n<a href=\"https://github/issues-raw/yehonadav/qaviton_io\" rel=\"nofollow\"><img alt=\"open issues\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9763687e847c99aaf071f5fa9973bd011ed879c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7965686f6e616461762f71617669746f6e5f696f\"></a>\n<a href=\"https://pypi.python.org/pypi\" rel=\"nofollow\"><img alt=\"downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8e7b493ec5452ab58ba66a7b45be3822590a9b20/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f71617669746f6e5f696f2e737667\"></a>\n<img alt=\"code size\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8a2b5a3cc539287441161beb98a6ae5be0b30b19/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f636f64652d73697a652f7965686f6e616461762f71617669746f6e5f696f\"></h2>\n<p>Qaviton IO<br>\nis a package with a simple API, making use of python's async &amp; multiprocessing<br>\nto enable fast execution of many asyncable operations.</p>\n<h2>Installation</h2>\n<pre>pip install qaviton-io -U\n</pre>\n<h3>Requirements</h3>\n<ul>\n<li>Python 3.6+</li>\n</ul>\n<h2>Features</h2>\n<ul>\n<li>async task manager</li>\n<li>process task manager</li>\n<li>task logger</li>\n</ul>\n<h2>Usage</h2>\n<h4>async manager:</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">requests</span> <span class=\"kn\">import</span> <span class=\"n\">get</span>  <span class=\"c1\"># lets make use of requests to make async http calls</span>\n<span class=\"kn\">from</span> <span class=\"nn\">qaviton_io</span> <span class=\"kn\">import</span> <span class=\"n\">AsyncManager</span><span class=\"p\">,</span> <span class=\"n\">task</span>\n\n\n<span class=\"c1\"># let's create an async manager</span>\n<span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">AsyncManager</span><span class=\"p\">()</span>\n\n\n<span class=\"c1\"># first we make a simple function to make an http call.</span>\n<span class=\"c1\"># we want to log the result,</span>\n<span class=\"c1\"># and make sure that in case of an exception</span>\n<span class=\"c1\"># the manager won't stop</span>\n<span class=\"nd\">@task</span><span class=\"p\">(</span><span class=\"n\">exceptions</span><span class=\"o\">=</span><span class=\"ne\">Exception</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">task</span><span class=\"p\">():</span> <span class=\"k\">return</span> <span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"https://qaviton.com\"</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># this will run async tasks and measure their duration</span>\n<span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"n\">tasks</span><span class=\"p\">):</span>\n    <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"p\">()</span>\n    <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">tasks</span><span class=\"p\">)</span>\n    <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">t</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'took </span><span class=\"si\">{</span><span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s1\">s'</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># let's run our task once and see how long it takes</span>\n<span class=\"n\">run</span><span class=\"p\">([</span><span class=\"n\">task</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)])</span>\n\n<span class=\"c1\"># now let's run our task 20 times and see how long it takes</span>\n<span class=\"n\">run</span><span class=\"p\">([</span><span class=\"n\">task</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">)])</span>\n\n<span class=\"c1\"># we can assert the collected results here</span>\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">results</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">21</span>\n<span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">results</span><span class=\"p\">:</span>\n    <span class=\"k\">assert</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">==</span> <span class=\"mi\">200</span>\n\n<span class=\"c1\"># let's view the results in the log report</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">report</span><span class=\"p\">()</span>\n</pre>\n<h4>process manager:</h4>\n<pre><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">make sure your tasks are defined at the module level,</span>\n<span class=\"sd\">so they can be pickled by multiprocessing</span>\n<span class=\"sd\">\"\"\"</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">requests</span> <span class=\"kn\">import</span> <span class=\"n\">get</span>\n<span class=\"kn\">from</span> <span class=\"nn\">qaviton_io.types</span> <span class=\"kn\">import</span> <span class=\"n\">Tasks</span>\n<span class=\"kn\">from</span> <span class=\"nn\">qaviton_io</span> <span class=\"kn\">import</span> <span class=\"n\">ProcessManager</span><span class=\"p\">,</span> <span class=\"n\">task</span>\n<span class=\"kn\">from</span> <span class=\"nn\">traceback</span> <span class=\"kn\">import</span> <span class=\"n\">format_exc</span>\n\n\n<span class=\"c1\"># now we make some tasks</span>\n<span class=\"c1\"># this is a nested task</span>\n<span class=\"c1\"># we don't want to handle any exceptions</span>\n<span class=\"c1\"># so in case of failure the parent will not proceed</span>\n<span class=\"nd\">@task</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">task1</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">):</span>\n    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n    <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">raise_for_status</span><span class=\"p\">()</span>\n\n\n<span class=\"c1\"># this is the prent task</span>\n<span class=\"c1\"># we want to handle all exceptions</span>\n<span class=\"c1\"># so in case of failure the next task will execute</span>\n<span class=\"nd\">@task</span><span class=\"p\">(</span><span class=\"n\">exceptions</span><span class=\"o\">=</span><span class=\"ne\">Exception</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">multi_task</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">url</span> <span class=\"ow\">in</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"https://qaviton.com\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"https://qaviton.co.il\"</span><span class=\"p\">,</span>  <span class=\"c1\"># make sure you enter a valid address</span>\n        <span class=\"s2\">\"https://qaviton.com1\"</span><span class=\"p\">,</span>  <span class=\"c1\"># make sure you enter a valid address</span>\n    <span class=\"p\">]:</span>\n        <span class=\"n\">task1</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># let's create a function to execute tasks</span>\n<span class=\"k\">def</span> <span class=\"nf\">execute_tasks</span><span class=\"p\">(</span><span class=\"n\">tasks</span><span class=\"p\">:</span> <span class=\"n\">Tasks</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"p\">):</span>\n    <span class=\"n\">manager</span> <span class=\"o\">=</span> <span class=\"n\">ProcessManager</span><span class=\"p\">()</span>\n    <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"p\">()</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">tasks</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"n\">timeout</span><span class=\"p\">)</span>\n        <span class=\"n\">timed_out</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"k\">except</span> <span class=\"ne\">TimeoutError</span><span class=\"p\">:</span>\n        <span class=\"n\">timed_out</span> <span class=\"o\">=</span> <span class=\"n\">format_exc</span><span class=\"p\">()</span>\n    <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">t</span>\n    <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">report</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'took </span><span class=\"si\">{</span><span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s1\">s</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n    <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">timed_out</span>\n\n\n<span class=\"c1\"># now all that's left is to run the tasks</span>\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">timeouts</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">execute_tasks</span><span class=\"p\">([</span><span class=\"n\">multi_task</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)],</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">),</span>\n        <span class=\"n\">execute_tasks</span><span class=\"p\">([</span><span class=\"n\">multi_task</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">)],</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">),</span>\n        <span class=\"n\">execute_tasks</span><span class=\"p\">([</span><span class=\"n\">multi_task</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">80</span><span class=\"p\">)],</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n    <span class=\"k\">for</span> <span class=\"n\">timeout</span> <span class=\"ow\">in</span> <span class=\"n\">timeouts</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">timeout</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"p\">)</span>\n</pre>\n<h2>notes:</h2>\n<ul>\n<li>\n<p>for good performance and easy usage<br>\nyou should probably stick with using the AsyncManager</p>\n</li>\n<li>\n<p>The ProcessManager uses async operations as well as multi-processing.<br>\nIt distributes tasks across cpus, and those tasks are executed using the AsyncManager<br>\nif you want maximum efficiency you should consider using the ProcessManager</p>\n</li>\n<li>\n<p>The ProcessManager uses the multiprocessing module<br>\nand should be treated with it's restrictions &amp; limitations accordingly</p>\n</li>\n<li>\n<p>The ProcessManager gets stuck easily,<br>\nmake sure to use timeouts when using it</p>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6130173, "releases": {"2019.11.12.17.36.46.68906": [{"comment_text": "", "digests": {"md5": "b5ab4d2cb75d5d602cf4d9067cc4c05c", "sha256": "b2bb011beb498c8ca17e1b156070d15cadaf3d8197307c37174b0f743616dd69"}, "downloads": -1, "filename": "qaviton_io-2019.11.12.17.36.46.68906-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b5ab4d2cb75d5d602cf4d9067cc4c05c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11538, "upload_time": "2019-11-12T17:36:58", "upload_time_iso_8601": "2019-11-12T17:36:58.452261Z", "url": "https://files.pythonhosted.org/packages/d9/39/2a3ec492fffd136344225c3dc895185993af1e44bff9d50cadccb007c9db/qaviton_io-2019.11.12.17.36.46.68906-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f775f6c1bc4c90bf47352e229fc3b0ec", "sha256": "e58b0aad4c5337a106961ff20c9e74e76e8d20000fe1774ca94d4abf0746346b"}, "downloads": -1, "filename": "qaviton_io-2019.11.12.17.36.46.68906.tar.gz", "has_sig": false, "md5_digest": "f775f6c1bc4c90bf47352e229fc3b0ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5884, "upload_time": "2019-11-12T17:37:00", "upload_time_iso_8601": "2019-11-12T17:37:00.208280Z", "url": "https://files.pythonhosted.org/packages/b6/82/5fadf8479a3f8336f135d8017eb695545b16bd84dcffe8548189727de366/qaviton_io-2019.11.12.17.36.46.68906.tar.gz", "yanked": false}], "2019.11.12.20.52.20.14283": [{"comment_text": "", "digests": {"md5": "c71cda189b6c5988631d2e43aa550412", "sha256": "4f4166ce348dae22f88f3f36868a27acce5efe46dff821dbad03c26b7e9141ae"}, "downloads": -1, "filename": "qaviton_io-2019.11.12.20.52.20.14283-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c71cda189b6c5988631d2e43aa550412", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11748, "upload_time": "2019-11-12T20:52:32", "upload_time_iso_8601": "2019-11-12T20:52:32.532695Z", "url": "https://files.pythonhosted.org/packages/72/b8/6ee198051e898ff6c56d905c883db8a7cacdd3b8774dd67bece0b6cab268/qaviton_io-2019.11.12.20.52.20.14283-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e43f257cf937024f791c3a47fd338843", "sha256": "264b42ccd7fdf6c8b42b76455216302193c40a6a96a69ab825fad73edfb6f269"}, "downloads": -1, "filename": "qaviton_io-2019.11.12.20.52.20.14283.tar.gz", "has_sig": false, "md5_digest": "e43f257cf937024f791c3a47fd338843", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6096, "upload_time": "2019-11-12T20:52:34", "upload_time_iso_8601": "2019-11-12T20:52:34.302693Z", "url": "https://files.pythonhosted.org/packages/84/82/003c0ddd485319868d5419e1a89b1d8bce35115ee6967f17a25f874a5e2b/qaviton_io-2019.11.12.20.52.20.14283.tar.gz", "yanked": false}], "2019.11.13.11.39.24.597504": [{"comment_text": "", "digests": {"md5": "d1a5ac099e93dd13236f11335afe2780", "sha256": "0d6b7c7a559ebe08d609b24118c2059fb2f6f2a4d7db97b247e71bb1b4545511"}, "downloads": -1, "filename": "qaviton_io-2019.11.13.11.39.24.597504-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d1a5ac099e93dd13236f11335afe2780", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11769, "upload_time": "2019-11-13T11:39:37", "upload_time_iso_8601": "2019-11-13T11:39:37.336799Z", "url": "https://files.pythonhosted.org/packages/a8/57/262d387742ecc9f6930f8a37efe7a5c67035776cf2d18c7e419da91242c0/qaviton_io-2019.11.13.11.39.24.597504-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6db6309e8ebbac28d2608567ad0a70e", "sha256": "07208f97e38b0fe37b432c99e96f35bcd4bc0cecb53af884556c0e0c115ed5d3"}, "downloads": -1, "filename": "qaviton_io-2019.11.13.11.39.24.597504.tar.gz", "has_sig": false, "md5_digest": "d6db6309e8ebbac28d2608567ad0a70e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6118, "upload_time": "2019-11-13T11:39:39", "upload_time_iso_8601": "2019-11-13T11:39:39.094118Z", "url": "https://files.pythonhosted.org/packages/de/52/f8fd71f2da4adb89b3abcff2cbdb14064fa38614d0b168b3ca79d1ceb166/qaviton_io-2019.11.13.11.39.24.597504.tar.gz", "yanked": false}], "2019.11.13.13.29.23.745334": [{"comment_text": "", "digests": {"md5": "c9429e290746e6c5f7ac7460ba9773c7", "sha256": "d4388c72ee6d8b6dc74f1f05209982d30d4cdfea577d00464a718add3c3ff9da"}, "downloads": -1, "filename": "qaviton_io-2019.11.13.13.29.23.745334-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c9429e290746e6c5f7ac7460ba9773c7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11774, "upload_time": "2019-11-13T13:29:36", "upload_time_iso_8601": "2019-11-13T13:29:36.704763Z", "url": "https://files.pythonhosted.org/packages/c5/ef/3619954378949e82db6c8dcee65ad880627501722a2e5f23eaca4cc52eef/qaviton_io-2019.11.13.13.29.23.745334-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22d370c191febd43289e9f00ee07decc", "sha256": "2a9ca521718d8f42f1f3416383fc824b15641fbd7307a9ccd9640b5f6cd8796b"}, "downloads": -1, "filename": "qaviton_io-2019.11.13.13.29.23.745334.tar.gz", "has_sig": false, "md5_digest": "22d370c191febd43289e9f00ee07decc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6113, "upload_time": "2019-11-13T13:29:38", "upload_time_iso_8601": "2019-11-13T13:29:38.493992Z", "url": "https://files.pythonhosted.org/packages/f8/7b/c11acc012a29c8f44a9351dbc1242bb000765a401f24aaecc7fa345bb356/qaviton_io-2019.11.13.13.29.23.745334.tar.gz", "yanked": false}], "2019.11.3.17.39.58.419954": [{"comment_text": "", "digests": {"md5": "32ee4522f6b6b89d3cf427e22e550ee4", "sha256": "7fd93634b379dc8f58f49d3b625c849a9f8ebde3871e7a5eee2e1db4950f1c05"}, "downloads": -1, "filename": "qaviton_io-2019.11.3.17.39.58.419954-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "32ee4522f6b6b89d3cf427e22e550ee4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11075, "upload_time": "2019-11-03T17:40:10", "upload_time_iso_8601": "2019-11-03T17:40:10.448021Z", "url": "https://files.pythonhosted.org/packages/ec/99/3a3ec740f67f3fa1f85e8aadf5a42e3582dd6cd5f32444fb8f59221d75db/qaviton_io-2019.11.3.17.39.58.419954-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0467e906318808f993d1b9a9545eab6f", "sha256": "9dfc0e7f2b17c65de4d715b6ce2f20a3bd280e5c0582a5f5548d4d8534913328"}, "downloads": -1, "filename": "qaviton_io-2019.11.3.17.39.58.419954.tar.gz", "has_sig": false, "md5_digest": "0467e906318808f993d1b9a9545eab6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5695, "upload_time": "2019-11-03T17:40:13", "upload_time_iso_8601": "2019-11-03T17:40:13.196671Z", "url": "https://files.pythonhosted.org/packages/9f/16/8d44df114f0407955c689c62ab31a9aee815340a103b430c891decac4df8/qaviton_io-2019.11.3.17.39.58.419954.tar.gz", "yanked": false}], "2019.11.3.18.11.11.388423": [{"comment_text": "", "digests": {"md5": "1fe5674c41e02e15f94a8449317d2159", "sha256": "ac00f87121f9c26b4d126cce83f1a57cfe7298ab0532fb635dca646dc307c105"}, "downloads": -1, "filename": "qaviton_io-2019.11.3.18.11.11.388423-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1fe5674c41e02e15f94a8449317d2159", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11080, "upload_time": "2019-11-03T18:11:23", "upload_time_iso_8601": "2019-11-03T18:11:23.542765Z", "url": "https://files.pythonhosted.org/packages/a0/be/c274a8adcb330c7433251c73c336dda57315f6f3da6f4edd7dc2712f5773/qaviton_io-2019.11.3.18.11.11.388423-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f19ca732fc637df02377a7044eff104", "sha256": "3ba46b539c6005ccc5a56273207da7353f47abfa9fef32f19dbcfa88fb2e035f"}, "downloads": -1, "filename": "qaviton_io-2019.11.3.18.11.11.388423.tar.gz", "has_sig": false, "md5_digest": "6f19ca732fc637df02377a7044eff104", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5704, "upload_time": "2019-11-03T18:11:26", "upload_time_iso_8601": "2019-11-03T18:11:26.504637Z", "url": "https://files.pythonhosted.org/packages/71/0a/33578c84557238d53931c2f298d9cbfe1e290cf2182e61fa716a5d9c5d2b/qaviton_io-2019.11.3.18.11.11.388423.tar.gz", "yanked": false}], "2019.11.3.8.48.39.596657": [{"comment_text": "", "digests": {"md5": "f7862801f8c7c90a0d8fcaf908e32649", "sha256": "e33e9e4c0edf187d34e7ce91cc0c625a2f4d866639c2576e8da69ddb672d8a59"}, "downloads": -1, "filename": "qaviton_io-2019.11.3.8.48.39.596657-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f7862801f8c7c90a0d8fcaf908e32649", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10984, "upload_time": "2019-11-03T08:49:04", "upload_time_iso_8601": "2019-11-03T08:49:04.371615Z", "url": "https://files.pythonhosted.org/packages/38/ec/57b6188759785db5c0486a247054403b2877de66405be71e7f2380ae1848/qaviton_io-2019.11.3.8.48.39.596657-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04ad5f940a6a4b7e8428622b3d545af8", "sha256": "061e4433a1ce764e2e00aba864119acd97938ddbea4d466c3a72f674034ce749"}, "downloads": -1, "filename": "qaviton_io-2019.11.3.8.48.39.596657.tar.gz", "has_sig": false, "md5_digest": "04ad5f940a6a4b7e8428622b3d545af8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5610, "upload_time": "2019-11-03T08:49:08", "upload_time_iso_8601": "2019-11-03T08:49:08.239064Z", "url": "https://files.pythonhosted.org/packages/cb/3f/4bb522aae90c819a23a2cb287cd2230bf2e389df07650aaf7f951f818c03/qaviton_io-2019.11.3.8.48.39.596657.tar.gz", "yanked": false}], "2019.11.3.8.59.34.695870": [{"comment_text": "", "digests": {"md5": "f05309a4a22b07985da967df0e4654b8", "sha256": "552e7f0021fcf7c30c144742bcce024568a4efcdd8cba9d19e051c763ec487e6"}, "downloads": -1, "filename": "qaviton_io-2019.11.3.8.59.34.695870-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f05309a4a22b07985da967df0e4654b8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11016, "upload_time": "2019-11-03T08:59:46", "upload_time_iso_8601": "2019-11-03T08:59:46.787973Z", "url": "https://files.pythonhosted.org/packages/a6/02/77937a5e46370bce935fa580fd4e0228c805f075905ef78f7668ff57b7ac/qaviton_io-2019.11.3.8.59.34.695870-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "867112ddb66edf1fea026dabd339aa6c", "sha256": "22509c5327d13d40facb073f1c2643da1df37eb19c9c887616617e62115a5edb"}, "downloads": -1, "filename": "qaviton_io-2019.11.3.8.59.34.695870.tar.gz", "has_sig": false, "md5_digest": "867112ddb66edf1fea026dabd339aa6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5652, "upload_time": "2019-11-03T08:59:49", "upload_time_iso_8601": "2019-11-03T08:59:49.716394Z", "url": "https://files.pythonhosted.org/packages/eb/be/51d30163e809fce8c74d7725577804844b440812980e6a323742f46a557c/qaviton_io-2019.11.3.8.59.34.695870.tar.gz", "yanked": false}], "2019.11.5.17.50.50.34343": [{"comment_text": "", "digests": {"md5": "56d1f7e270221d7b290cba1b177f37c9", "sha256": "3aaeb0a1d32dc0184b725c35890df325827efcdeac8d85d27b893f0a6c1eb3d7"}, "downloads": -1, "filename": "qaviton_io-2019.11.5.17.50.50.34343-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "56d1f7e270221d7b290cba1b177f37c9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11080, "upload_time": "2019-11-05T17:51:02", "upload_time_iso_8601": "2019-11-05T17:51:02.902921Z", "url": "https://files.pythonhosted.org/packages/9c/25/5a83ac98eead1105d5a2b87265093602adcb4f14b60d971e6f50c89a150d/qaviton_io-2019.11.5.17.50.50.34343-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e73974d571b9941874c266ba24d345f0", "sha256": "f43ff906437388e7ebbb3db068c608bcaa501d1b72a83d960e30f5a2d8b9e708"}, "downloads": -1, "filename": "qaviton_io-2019.11.5.17.50.50.34343.tar.gz", "has_sig": false, "md5_digest": "e73974d571b9941874c266ba24d345f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5721, "upload_time": "2019-11-05T17:51:04", "upload_time_iso_8601": "2019-11-05T17:51:04.755868Z", "url": "https://files.pythonhosted.org/packages/21/05/7ee6a95f601efa9cd1194bdd3f10c4f30d4fc6081e3c89a51461a60586e5/qaviton_io-2019.11.5.17.50.50.34343.tar.gz", "yanked": false}], "2019.11.5.18.45.50.967182": [{"comment_text": "", "digests": {"md5": "43b127b9151a48327d83239127663b1a", "sha256": "8da900f7c7f4a45177663e5b5b384659980f4a868092fadad0ffdd54de205137"}, "downloads": -1, "filename": "qaviton_io-2019.11.5.18.45.50.967182-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "43b127b9151a48327d83239127663b1a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11164, "upload_time": "2019-11-05T18:46:02", "upload_time_iso_8601": "2019-11-05T18:46:02.787895Z", "url": "https://files.pythonhosted.org/packages/ee/c3/762a1a572ee94a65e926081b2fcb9a84ba2f7e9a4f5a7eb17834b242e380/qaviton_io-2019.11.5.18.45.50.967182-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4918fe7afbeffdb6ba13f77fee725937", "sha256": "17547ccd20b23bab7f958395e59bb1b61f77bbe8e853c0d2d1ca78ee5505c387"}, "downloads": -1, "filename": "qaviton_io-2019.11.5.18.45.50.967182.tar.gz", "has_sig": false, "md5_digest": "4918fe7afbeffdb6ba13f77fee725937", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5746, "upload_time": "2019-11-05T18:46:04", "upload_time_iso_8601": "2019-11-05T18:46:04.545949Z", "url": "https://files.pythonhosted.org/packages/64/48/f6cb123560192a13ae2ed63cc94f1789b09f124c544feecc2ebb1d7c15a5/qaviton_io-2019.11.5.18.45.50.967182.tar.gz", "yanked": false}], "2019.11.8.10.10.6.714465": [{"comment_text": "", "digests": {"md5": "d5dbb073b24f3712b85d2bd39c6ea609", "sha256": "662de1b2b14844121d659ce316c487b9a78755b1d6fea5e0b89fa51e8632ae37"}, "downloads": -1, "filename": "qaviton_io-2019.11.8.10.10.6.714465-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d5dbb073b24f3712b85d2bd39c6ea609", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11141, "upload_time": "2019-11-08T10:10:18", "upload_time_iso_8601": "2019-11-08T10:10:18.912370Z", "url": "https://files.pythonhosted.org/packages/63/22/032b0b15fdaf50804e3982e12ed636730baa3d0a55922318827974228ead/qaviton_io-2019.11.8.10.10.6.714465-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d20a7002db955d21a69a40e513c58112", "sha256": "b3061b21eef4cb0e104a603e3ae11c1344ccbca19094bb35c141a6ccaa667a2f"}, "downloads": -1, "filename": "qaviton_io-2019.11.8.10.10.6.714465.tar.gz", "has_sig": false, "md5_digest": "d20a7002db955d21a69a40e513c58112", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5721, "upload_time": "2019-11-08T10:10:20", "upload_time_iso_8601": "2019-11-08T10:10:20.344773Z", "url": "https://files.pythonhosted.org/packages/79/35/169c55a100d62621c3666e14a062f6a6300edf9a469342a4c72ebf8165b4/qaviton_io-2019.11.8.10.10.6.714465.tar.gz", "yanked": false}], "2019.11.8.5.22.59.43005": [{"comment_text": "", "digests": {"md5": "722e74c0fd114f12a2c6648232ed8bb2", "sha256": "17d91810a42d62f05e2e319202c4acd8cf4035cfaca1c2974425149b92148d96"}, "downloads": -1, "filename": "qaviton_io-2019.11.8.5.22.59.43005-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "722e74c0fd114f12a2c6648232ed8bb2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11146, "upload_time": "2019-11-08T05:23:11", "upload_time_iso_8601": "2019-11-08T05:23:11.631724Z", "url": "https://files.pythonhosted.org/packages/20/f8/71f9725e69afd9923f6f16e4b0847ba3fc00b202a2c7c1d4363a44561939/qaviton_io-2019.11.8.5.22.59.43005-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75d7bdbf9ed1f1be3f10f50492788c6a", "sha256": "8b4dea15195df9b8df45e5d332fd2c4c43c03e077db8920768031059c86bdfe3"}, "downloads": -1, "filename": "qaviton_io-2019.11.8.5.22.59.43005.tar.gz", "has_sig": false, "md5_digest": "75d7bdbf9ed1f1be3f10f50492788c6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5745, "upload_time": "2019-11-08T05:23:13", "upload_time_iso_8601": "2019-11-08T05:23:13.163504Z", "url": "https://files.pythonhosted.org/packages/6f/1f/73fc7d28977a84bce4ee8d12ce6b195e1c9c7201b42b666298bcb0c495a9/qaviton_io-2019.11.8.5.22.59.43005.tar.gz", "yanked": false}], "2019.11.8.5.28.39.522450": [{"comment_text": "", "digests": {"md5": "3af8f0e0445098d4ec2e53b361045e94", "sha256": "c71ede295cfd89bacc08bb911808e7d3f45e34aa78610989a570bfe4db454bc8"}, "downloads": -1, "filename": "qaviton_io-2019.11.8.5.28.39.522450-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3af8f0e0445098d4ec2e53b361045e94", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11159, "upload_time": "2019-11-08T05:28:51", "upload_time_iso_8601": "2019-11-08T05:28:51.661256Z", "url": "https://files.pythonhosted.org/packages/1d/53/f3c56c899952fdc502f58011ee152245a8e7fd0a5bc4a2147583ce18fd0c/qaviton_io-2019.11.8.5.28.39.522450-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "361a63ccc3d61b8d8e2083730113891a", "sha256": "0f86dd71eacd642a976779e701d1ff5a7d57e48a6b0f2008c1fa1f914c07dfcb"}, "downloads": -1, "filename": "qaviton_io-2019.11.8.5.28.39.522450.tar.gz", "has_sig": false, "md5_digest": "361a63ccc3d61b8d8e2083730113891a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5752, "upload_time": "2019-11-08T05:28:53", "upload_time_iso_8601": "2019-11-08T05:28:53.325495Z", "url": "https://files.pythonhosted.org/packages/33/f3/3c34af030b3c30f2508204c6fd807bd5191cfcf14472bf0793997e78b375/qaviton_io-2019.11.8.5.28.39.522450.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c9429e290746e6c5f7ac7460ba9773c7", "sha256": "d4388c72ee6d8b6dc74f1f05209982d30d4cdfea577d00464a718add3c3ff9da"}, "downloads": -1, "filename": "qaviton_io-2019.11.13.13.29.23.745334-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c9429e290746e6c5f7ac7460ba9773c7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11774, "upload_time": "2019-11-13T13:29:36", "upload_time_iso_8601": "2019-11-13T13:29:36.704763Z", "url": "https://files.pythonhosted.org/packages/c5/ef/3619954378949e82db6c8dcee65ad880627501722a2e5f23eaca4cc52eef/qaviton_io-2019.11.13.13.29.23.745334-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22d370c191febd43289e9f00ee07decc", "sha256": "2a9ca521718d8f42f1f3416383fc824b15641fbd7307a9ccd9640b5f6cd8796b"}, "downloads": -1, "filename": "qaviton_io-2019.11.13.13.29.23.745334.tar.gz", "has_sig": false, "md5_digest": "22d370c191febd43289e9f00ee07decc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6113, "upload_time": "2019-11-13T13:29:38", "upload_time_iso_8601": "2019-11-13T13:29:38.493992Z", "url": "https://files.pythonhosted.org/packages/f8/7b/c11acc012a29c8f44a9351dbc1242bb000765a401f24aaecc7fa345bb356/qaviton_io-2019.11.13.13.29.23.745334.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:10 2020"}