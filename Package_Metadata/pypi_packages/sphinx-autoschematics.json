{"info": {"author": "Evan Borgstrom", "author_email": "evan@borgstrom.ca", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries"], "description": "# sphinx-autoschematics\n\n![Build Status](https://img.shields.io/travis/NerdWalletOSS/sphinx-autoschematics.svg)\n![CodeCov](https://img.shields.io/codecov/c/github/NerdWalletOSS/sphinx-autoschematics.svg)\n![PyPI - Version](https://img.shields.io/pypi/v/sphinx-autoschematics.svg)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/sphinx-autoschematics.svg)\n\nThis is a Sphinx extension to automatically document [Schematics](https://schematics.readthedocs.io/) models.\n\n## How to use it\n\nIn your Sphinx configuration you will need to list `autoschematics` as an extension:\n\n```python\nextensions = [\"autoschematics\", \"sphinx.ext.autodoc\"]\n```\n\nThis will provide a new `automodel` directive that you can provide the full path of a model to:\n\n```\n.. automodel:: myproject.models.MyModel\n```\n\nThe extension will inspect your model and generate documentation from the docstring and the different fields on the model.\n\n\n## Example\n\nGiven the following model:\n\n```python\nfrom schematics import types\nfrom schematics.models import Model\nfrom schematics.types import compound\n\n\nclass MyModel(Model):\n    \"\"\"MyModel defines the structure of data when interacting with SomeService\n\n    Just like in Sphinx .rst files you can use restructured text directives in the\n    docstring to provide rich content in the generated docs.\n\n    .. code-block:: yaml\n\n        foo: Foo\n        bar:\n          - bar1\n          - bar2\n    \"\"\"\n\n    foo = types.StringType(\n        required=True,\n        metadata=dict(\n            custom_value=True\n        )\n    )\n\n    bar = compound.ListType(types.StringType, default=list)\n```\n\nWould produce documentation like:\n\n#### models.MyModel\n\nMyModel defines the structure of data when interacting with SomeService \n\nJust like in Sphinx .rst files you can use restructured text directives in the\ndocstring to provide rich content in the generated docs.\n\n```yaml\nfoo: Foo\nbar:\n  - bar1\n  - bar2\n```\n\n<dl class=\"attribute\">\n<dt id=\"models.ExampleModel.foo\">\n<code class=\"sig-name descname\">foo</code><em class=\"property\"> StringType()</em></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><strong>Required</strong>: True</div>\n<div class=\"line\"><strong>Default</strong>: Undefined</div>\n<div class=\"line\"><strong>Custom value</strong>: True</div>\n</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"models.ExampleModel.bar\">\n<code class=\"sig-name descname\">bar</code><em class=\"property\"> ListType(StringType())</em></dt>\n<dd><div class=\"line-block\">\n<div class=\"line\"><strong>Required</strong>: False</div>\n<div class=\"line\"><strong>Default</strong>: Undefined</div>\n</div>\n</dd></dl>\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/NerdWalletOSS/sphinx-autoschematics", "keywords": "", "license": "Apache License Version 2.0", "maintainer": "", "maintainer_email": "", "name": "sphinx-autoschematics", "package_url": "https://pypi.org/project/sphinx-autoschematics/", "platform": "", "project_url": "https://pypi.org/project/sphinx-autoschematics/", "project_urls": {"Homepage": "https://github.com/NerdWalletOSS/sphinx-autoschematics"}, "release_url": "https://pypi.org/project/sphinx-autoschematics/0.1.2/", "requires_dist": ["six", "schematics (<3,>=2)", "sphinx", "pytest ; extra == 'test'", "pytest-mock ; extra == 'test'"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "summary": "sphinx-autoschematics provides sphinx extenions for documenting schematics models", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>sphinx-autoschematics</h1>\n<p><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/71756aed3f725386038b332a59660b7f920a2039/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f4e65726457616c6c65744f53532f737068696e782d6175746f736368656d61746963732e737667\">\n<img alt=\"CodeCov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/744e5533eb3a513f41f42fde171ea6029fd22be6/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f4e65726457616c6c65744f53532f737068696e782d6175746f736368656d61746963732e737667\">\n<img alt=\"PyPI - Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/62df303bddef86948278c16f8a7abc82dfe25dbf/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f737068696e782d6175746f736368656d61746963732e737667\">\n<img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/96a3d1697410361b2713c434f66ffd1bff2df1ab/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f737068696e782d6175746f736368656d61746963732e737667\"></p>\n<p>This is a Sphinx extension to automatically document <a href=\"https://schematics.readthedocs.io/\" rel=\"nofollow\">Schematics</a> models.</p>\n<h2>How to use it</h2>\n<p>In your Sphinx configuration you will need to list <code>autoschematics</code> as an extension:</p>\n<pre><span class=\"n\">extensions</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"autoschematics\"</span><span class=\"p\">,</span> <span class=\"s2\">\"sphinx.ext.autodoc\"</span><span class=\"p\">]</span>\n</pre>\n<p>This will provide a new <code>automodel</code> directive that you can provide the full path of a model to:</p>\n<pre><code>.. automodel:: myproject.models.MyModel\n</code></pre>\n<p>The extension will inspect your model and generate documentation from the docstring and the different fields on the model.</p>\n<h2>Example</h2>\n<p>Given the following model:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">schematics</span> <span class=\"kn\">import</span> <span class=\"n\">types</span>\n<span class=\"kn\">from</span> <span class=\"nn\">schematics.models</span> <span class=\"kn\">import</span> <span class=\"n\">Model</span>\n<span class=\"kn\">from</span> <span class=\"nn\">schematics.types</span> <span class=\"kn\">import</span> <span class=\"n\">compound</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"MyModel defines the structure of data when interacting with SomeService</span>\n\n<span class=\"sd\">    Just like in Sphinx .rst files you can use restructured text directives in the</span>\n<span class=\"sd\">    docstring to provide rich content in the generated docs.</span>\n\n<span class=\"sd\">    .. code-block:: yaml</span>\n\n<span class=\"sd\">        foo: Foo</span>\n<span class=\"sd\">        bar:</span>\n<span class=\"sd\">          - bar1</span>\n<span class=\"sd\">          - bar2</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">StringType</span><span class=\"p\">(</span>\n        <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span>\n            <span class=\"n\">custom_value</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">bar</span> <span class=\"o\">=</span> <span class=\"n\">compound</span><span class=\"o\">.</span><span class=\"n\">ListType</span><span class=\"p\">(</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">StringType</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n</pre>\n<p>Would produce documentation like:</p>\n<h4>models.MyModel</h4>\n<p>MyModel defines the structure of data when interacting with SomeService</p>\n<p>Just like in Sphinx .rst files you can use restructured text directives in the\ndocstring to provide rich content in the generated docs.</p>\n<pre><span class=\"nt\">foo</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Foo</span>\n<span class=\"nt\">bar</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">bar1</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">bar2</span>\n</pre>\n<dl>\n<dt id=\"models.ExampleModel.foo\">\n<code class=\"sig-name descname\">foo</code><em> StringType()</em></dt>\n<dd><div>\n<div><strong>Required</strong>: True</div>\n<div><strong>Default</strong>: Undefined</div>\n<div><strong>Custom value</strong>: True</div>\n</div>\n</dd></dl>\n<dl>\n<dt id=\"models.ExampleModel.bar\">\n<code class=\"sig-name descname\">bar</code><em> ListType(StringType())</em></dt>\n<dd><div>\n<div><strong>Required</strong>: False</div>\n<div><strong>Default</strong>: Undefined</div>\n</div>\n</dd></dl>\n\n          </div>"}, "last_serial": 6877785, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "cc6a25cbd8ec0c585f70b41d177af833", "sha256": "db99a50e1a615c71291af68f1af645fd21db2bc1ecd47b650506e4b080202d24"}, "downloads": -1, "filename": "sphinx_autoschematics-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "cc6a25cbd8ec0c585f70b41d177af833", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 8067, "upload_time": "2020-03-11T23:24:17", "upload_time_iso_8601": "2020-03-11T23:24:17.542707Z", "url": "https://files.pythonhosted.org/packages/f4/4a/fe0f2bfacadb8556a231f01a380b3c586a303e72da3aea636d1a5de451d6/sphinx_autoschematics-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51f6036ecfe456dd38ca6f232304c7a6", "sha256": "5c3fada722b28083e63615a8e569a3f1a33468f8e880c0b03f8e78562d09fea4"}, "downloads": -1, "filename": "sphinx-autoschematics-0.1.0.tar.gz", "has_sig": false, "md5_digest": "51f6036ecfe456dd38ca6f232304c7a6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 3162, "upload_time": "2020-03-11T23:24:19", "upload_time_iso_8601": "2020-03-11T23:24:19.703184Z", "url": "https://files.pythonhosted.org/packages/69/0b/6dda3dcf55d126f04bddfe5fdb438fea4b58ca6332094937275e48630e99/sphinx-autoschematics-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "3faa93e9d35b4b9606f546b829510b5e", "sha256": "167035c70451178e14f06143ceb80da815e1bdca3afc1d12781fab8d8b5542fa"}, "downloads": -1, "filename": "sphinx_autoschematics-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3faa93e9d35b4b9606f546b829510b5e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 9608, "upload_time": "2020-03-12T03:19:26", "upload_time_iso_8601": "2020-03-12T03:19:26.332504Z", "url": "https://files.pythonhosted.org/packages/10/f5/4eb3a77aeec7c11a44f76feca7c4fc6ef596d794041e8655adc1477ddc8e/sphinx_autoschematics-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b410fedb5d02a930b6669436432b0070", "sha256": "dcb7ebec51cbf3a7f2da4259ed512a44436ee570c56d3ea37c83ec2f1f1bc93b"}, "downloads": -1, "filename": "sphinx-autoschematics-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b410fedb5d02a930b6669436432b0070", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 4967, "upload_time": "2020-03-12T03:19:27", "upload_time_iso_8601": "2020-03-12T03:19:27.194218Z", "url": "https://files.pythonhosted.org/packages/1d/a0/101998bce5becc8a87e5575db227f661e0dc5ce173bc7aab24f4ebef7a2b/sphinx-autoschematics-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "91edb5765a2e8358b64e392be4ab3914", "sha256": "62ac4c69bd002c08de1a51814a44834afa9b9b62dba2214405798af619a044b6"}, "downloads": -1, "filename": "sphinx_autoschematics-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "91edb5765a2e8358b64e392be4ab3914", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 10085, "upload_time": "2020-03-25T02:16:21", "upload_time_iso_8601": "2020-03-25T02:16:21.157751Z", "url": "https://files.pythonhosted.org/packages/94/0f/9a2db8b87f9625bf6a509e13982ed31554733eec083b8bde02863579c9fe/sphinx_autoschematics-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b657526088ebdc366d5ee3c52f4348b0", "sha256": "b90740277a13007faa95e9c79596e7e4c3f24b686fc39a40a9c74751d0f76223"}, "downloads": -1, "filename": "sphinx-autoschematics-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b657526088ebdc366d5ee3c52f4348b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 5835, "upload_time": "2020-03-25T02:16:22", "upload_time_iso_8601": "2020-03-25T02:16:22.081459Z", "url": "https://files.pythonhosted.org/packages/9b/36/afec497671ee1a13eeae3e4ebdf601ee5b38792ec96d1a1d09eddcc11f0a/sphinx-autoschematics-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "91edb5765a2e8358b64e392be4ab3914", "sha256": "62ac4c69bd002c08de1a51814a44834afa9b9b62dba2214405798af619a044b6"}, "downloads": -1, "filename": "sphinx_autoschematics-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "91edb5765a2e8358b64e392be4ab3914", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 10085, "upload_time": "2020-03-25T02:16:21", "upload_time_iso_8601": "2020-03-25T02:16:21.157751Z", "url": "https://files.pythonhosted.org/packages/94/0f/9a2db8b87f9625bf6a509e13982ed31554733eec083b8bde02863579c9fe/sphinx_autoschematics-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b657526088ebdc366d5ee3c52f4348b0", "sha256": "b90740277a13007faa95e9c79596e7e4c3f24b686fc39a40a9c74751d0f76223"}, "downloads": -1, "filename": "sphinx-autoschematics-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b657526088ebdc366d5ee3c52f4348b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 5835, "upload_time": "2020-03-25T02:16:22", "upload_time_iso_8601": "2020-03-25T02:16:22.081459Z", "url": "https://files.pythonhosted.org/packages/9b/36/afec497671ee1a13eeae3e4ebdf601ee5b38792ec96d1a1d09eddcc11f0a/sphinx-autoschematics-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:23 2020"}