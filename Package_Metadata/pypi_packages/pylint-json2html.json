{"info": {"author": "Florian Strzelecki", "author_email": "florian.strzelecki@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Operating System :: OS Independent", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Quality Assurance"], "description": "# pylint-json2html\n\nA pylint JSON report file to HTML: pylint is used to generate a JSON report,\nand this tool will transform this report into an HTML document:\n\n    usage: pylint-json2html [-h] [-o FILENAME] [-t FILENAME] [-f FORMAT] [FILENAME]\n\n    Transform Pylint JSON report to HTML\n\n    positional arguments:\n    FILENAME              Pylint JSON report input file (or stdin)\n\n    optional arguments:\n    -h, --help          show this help message and exit\n    -o FILENAME, --output FILENAME\n                        Pylint HTML report output file (or stdout)\n    -t FILENAME, --template FILENAME\n                        Jinja2 custom template to generate report\n    -f FORMAT, --input-format FORMAT\n                        Pylint JSON Report input type (json or jsonextended)\n\n## Why?\n\nSince its [1.7 version](https://pylint.readthedocs.io/en/latest/whatsnew/1.7.html#removed-changes),\nPylint does not provide an HTML output format. The release notes say that:\n\n> It was lately a second class citizen in Pylint, being mostly neglected.\n> Since we now have the JSON reporter, it can be used as a basis for building\n> more prettier HTML reports than what Pylint can currently generate.\n> This is part of the effort of removing cruft from Pylint, by removing less\n> used features.\n\nAnd I agree with that statements. Few people use the HTML reports, and pylint\nis getting old. Its core features are complex and they require a lot of times\nand efforts - and I am thankful for that software to exist in the first place!\n\nSo here it is: a plugin to fulfill my own needs. I share it as open-source\nbecause why not?\n\n## Installation\n\nTo install this tool, use pip:\n\n    (venv) $ pip install pylint-json2html\n\nYou can always download the sources from the github repository, and use the\n`setup.py` file to `install` or `develop`, but I would not recommend that\nunless you plan to contribute to this small project of mine.\n\n## Usage\n\nMy favorite way of using `pylint` and `pylint-json2html` is this one:\n\n    (venv) $ pylint my_package | pylint-json2html -o pylint.html\n\nProvided that you configure your Pylint config file with:\n\n    [REPORTS]\n    output-format=json\n\nBut you can generate first a JSON file, then use `pylint-json2html` to read it:\n\n    (venv) $ pylint your_package > pylint.json\n    (venv) $ pylint-json2html -o pylint.html pylint.json\n\nYou can also redirect `pylint-json2html`'s stdout:\n\n    (venv) $ pylint-json2html pylint.json > pylint.html\n\n## Extended Report\n\nActually, I lied about my favorite way, it is this one:\n\n    (venv) $ pylint my_package | pylint-json2html -f jsonextended -o pylint.html\n\nWith this Pylint configuration:\n\n    [MASTER]\n    load-plugins=pylint_json2html\n\n    [REPORTS]\n    output-format=jsonextended\n\nThe `pylint_json2html` is a Pylint plugin that adds a new output format:\n`jsonextended`. By default, the `json` format contains only a list of messages,\nand this new format contains also metrics, such the number of analysed\nstatements, or the list of dependencies.\n\nThe configuration above can be tested using the command line instead:\n\n    (venv) $ pylint --load-plugins=pylint_json2html --output-format=jsonextended your_package > pylint.json\n\nThen, you will be able to use the JSON extended report to generate an HTML\nreport:\n\n    (venv) $ pylint-json2html -f jsonextended -o pylint.html pylint.json\n\nAnd voil\u00e0!\n\n## Custom Template\n\nThis plugin uses a Jinja2 template to generate the HTML output, but you may\nneed your own template. For that purpose, you can use the option\n`-t/--template`, like this:\n\n    (venv) $ pylint-json2html -f jsonextended -t custom.tpl -o pylint.html pylint.json\n\n### Report\n\nIn your template you have access to a `report` object:\n\n* `report.score`: score given by pylint, available only with\n  `jsonextended` format\n* `report.previous_score`: previous score given by pylint, available only with\n  `jsonextended` format\n* `report.modules`: a list of 2-value tuple: `(module, messages)`\n\nThe `module` object:\n\n* `module.name`: name of the module\n* `module.path`: path to the module's file\n\nThe `messages` value is a list of dict, each with the following keys:\n\n* `line`\n* `column`\n* `type`\n* `symbol`\n* `message-id`\n* `obj`\n* `message`\n\n### Metrics\n\nIn your template you have access to a `metrics` dict with the following keys:\n`types`, `symbols`, `modules`, `paths`. Each of them contains a dict.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Exirel/pylint-json2html", "keywords": "pylint report quality", "license": "MPL-2.0", "maintainer": "", "maintainer_email": "", "name": "pylint-json2html", "package_url": "https://pypi.org/project/pylint-json2html/", "platform": "", "project_url": "https://pypi.org/project/pylint-json2html/", "project_urls": {"Homepage": "https://github.com/Exirel/pylint-json2html"}, "release_url": "https://pypi.org/project/pylint-json2html/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Pylint JSON report to HTML", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pylint-json2html</h1>\n<p>A pylint JSON report file to HTML: pylint is used to generate a JSON report,\nand this tool will transform this report into an HTML document:</p>\n<pre><code>usage: pylint-json2html [-h] [-o FILENAME] [-t FILENAME] [-f FORMAT] [FILENAME]\n\nTransform Pylint JSON report to HTML\n\npositional arguments:\nFILENAME              Pylint JSON report input file (or stdin)\n\noptional arguments:\n-h, --help          show this help message and exit\n-o FILENAME, --output FILENAME\n                    Pylint HTML report output file (or stdout)\n-t FILENAME, --template FILENAME\n                    Jinja2 custom template to generate report\n-f FORMAT, --input-format FORMAT\n                    Pylint JSON Report input type (json or jsonextended)\n</code></pre>\n<h2>Why?</h2>\n<p>Since its <a href=\"https://pylint.readthedocs.io/en/latest/whatsnew/1.7.html#removed-changes\" rel=\"nofollow\">1.7 version</a>,\nPylint does not provide an HTML output format. The release notes say that:</p>\n<blockquote>\n<p>It was lately a second class citizen in Pylint, being mostly neglected.\nSince we now have the JSON reporter, it can be used as a basis for building\nmore prettier HTML reports than what Pylint can currently generate.\nThis is part of the effort of removing cruft from Pylint, by removing less\nused features.</p>\n</blockquote>\n<p>And I agree with that statements. Few people use the HTML reports, and pylint\nis getting old. Its core features are complex and they require a lot of times\nand efforts - and I am thankful for that software to exist in the first place!</p>\n<p>So here it is: a plugin to fulfill my own needs. I share it as open-source\nbecause why not?</p>\n<h2>Installation</h2>\n<p>To install this tool, use pip:</p>\n<pre><code>(venv) $ pip install pylint-json2html\n</code></pre>\n<p>You can always download the sources from the github repository, and use the\n<code>setup.py</code> file to <code>install</code> or <code>develop</code>, but I would not recommend that\nunless you plan to contribute to this small project of mine.</p>\n<h2>Usage</h2>\n<p>My favorite way of using <code>pylint</code> and <code>pylint-json2html</code> is this one:</p>\n<pre><code>(venv) $ pylint my_package | pylint-json2html -o pylint.html\n</code></pre>\n<p>Provided that you configure your Pylint config file with:</p>\n<pre><code>[REPORTS]\noutput-format=json\n</code></pre>\n<p>But you can generate first a JSON file, then use <code>pylint-json2html</code> to read it:</p>\n<pre><code>(venv) $ pylint your_package &gt; pylint.json\n(venv) $ pylint-json2html -o pylint.html pylint.json\n</code></pre>\n<p>You can also redirect <code>pylint-json2html</code>'s stdout:</p>\n<pre><code>(venv) $ pylint-json2html pylint.json &gt; pylint.html\n</code></pre>\n<h2>Extended Report</h2>\n<p>Actually, I lied about my favorite way, it is this one:</p>\n<pre><code>(venv) $ pylint my_package | pylint-json2html -f jsonextended -o pylint.html\n</code></pre>\n<p>With this Pylint configuration:</p>\n<pre><code>[MASTER]\nload-plugins=pylint_json2html\n\n[REPORTS]\noutput-format=jsonextended\n</code></pre>\n<p>The <code>pylint_json2html</code> is a Pylint plugin that adds a new output format:\n<code>jsonextended</code>. By default, the <code>json</code> format contains only a list of messages,\nand this new format contains also metrics, such the number of analysed\nstatements, or the list of dependencies.</p>\n<p>The configuration above can be tested using the command line instead:</p>\n<pre><code>(venv) $ pylint --load-plugins=pylint_json2html --output-format=jsonextended your_package &gt; pylint.json\n</code></pre>\n<p>Then, you will be able to use the JSON extended report to generate an HTML\nreport:</p>\n<pre><code>(venv) $ pylint-json2html -f jsonextended -o pylint.html pylint.json\n</code></pre>\n<p>And voil\u00e0!</p>\n<h2>Custom Template</h2>\n<p>This plugin uses a Jinja2 template to generate the HTML output, but you may\nneed your own template. For that purpose, you can use the option\n<code>-t/--template</code>, like this:</p>\n<pre><code>(venv) $ pylint-json2html -f jsonextended -t custom.tpl -o pylint.html pylint.json\n</code></pre>\n<h3>Report</h3>\n<p>In your template you have access to a <code>report</code> object:</p>\n<ul>\n<li><code>report.score</code>: score given by pylint, available only with\n<code>jsonextended</code> format</li>\n<li><code>report.previous_score</code>: previous score given by pylint, available only with\n<code>jsonextended</code> format</li>\n<li><code>report.modules</code>: a list of 2-value tuple: <code>(module, messages)</code></li>\n</ul>\n<p>The <code>module</code> object:</p>\n<ul>\n<li><code>module.name</code>: name of the module</li>\n<li><code>module.path</code>: path to the module's file</li>\n</ul>\n<p>The <code>messages</code> value is a list of dict, each with the following keys:</p>\n<ul>\n<li><code>line</code></li>\n<li><code>column</code></li>\n<li><code>type</code></li>\n<li><code>symbol</code></li>\n<li><code>message-id</code></li>\n<li><code>obj</code></li>\n<li><code>message</code></li>\n</ul>\n<h3>Metrics</h3>\n<p>In your template you have access to a <code>metrics</code> dict with the following keys:\n<code>types</code>, <code>symbols</code>, <code>modules</code>, <code>paths</code>. Each of them contains a dict.</p>\n\n          </div>"}, "last_serial": 6452036, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0f3b66c9fe6983a76a2d724af87543c6", "sha256": "b6965ba96f5fe4981f74e70b41c0a98fa635addce3ea45d6db9a9983a0c00aa3"}, "downloads": -1, "filename": "pylint_json2html-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0f3b66c9fe6983a76a2d724af87543c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7329, "upload_time": "2018-04-20T16:47:31", "upload_time_iso_8601": "2018-04-20T16:47:31.134453Z", "url": "https://files.pythonhosted.org/packages/77/14/07f8b354845663eb35287c3eaa139f2232dc6bd49a6cb48fcbf8e6ed1ee1/pylint_json2html-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e01f8a78e589a1c661a194590c746e71", "sha256": "a782422abeee0985ce4381c7e00e2621511d2eda054b133772c5d6579fc1ae5d"}, "downloads": -1, "filename": "pylint-json2html-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e01f8a78e589a1c661a194590c746e71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11462, "upload_time": "2018-04-20T16:47:32", "upload_time_iso_8601": "2018-04-20T16:47:32.355139Z", "url": "https://files.pythonhosted.org/packages/b0/07/94c291904fcdd8a5cb133dcf475489304d471a3e4d6fcd6d19582b8fbfb8/pylint-json2html-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "fefa11ff9490b4260b6da9c2391c1ed0", "sha256": "79ee5d2b4733f53f450b66fb329088d6c7868443b0fdea39661ee41015ad4b22"}, "downloads": -1, "filename": "pylint-json2html-0.2.0.tar.gz", "has_sig": false, "md5_digest": "fefa11ff9490b4260b6da9c2391c1ed0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12434, "upload_time": "2020-01-14T14:47:05", "upload_time_iso_8601": "2020-01-14T14:47:05.770955Z", "url": "https://files.pythonhosted.org/packages/d8/48/352c0ee68f7bfa6c8d55c2831f6cbd7befcb0b144ec4ad4babdb1ea0160f/pylint-json2html-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fefa11ff9490b4260b6da9c2391c1ed0", "sha256": "79ee5d2b4733f53f450b66fb329088d6c7868443b0fdea39661ee41015ad4b22"}, "downloads": -1, "filename": "pylint-json2html-0.2.0.tar.gz", "has_sig": false, "md5_digest": "fefa11ff9490b4260b6da9c2391c1ed0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12434, "upload_time": "2020-01-14T14:47:05", "upload_time_iso_8601": "2020-01-14T14:47:05.770955Z", "url": "https://files.pythonhosted.org/packages/d8/48/352c0ee68f7bfa6c8d55c2831f6cbd7befcb0b144ec4ad4babdb1ea0160f/pylint-json2html-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:00 2020"}