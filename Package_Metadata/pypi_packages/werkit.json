{"info": {"author": "Metabolize", "author_email": "github@paulmelnikow.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: System :: Distributed Computing"], "description": "# werkit\n\n[![version](https://img.shields.io/pypi/v/werkit.svg?style=flat-square)][pypi]\n[![python versions](https://img.shields.io/pypi/pyversions/werkit.svg?style=flat-square)][pypi]\n[![license](https://img.shields.io/pypi/l/werkit.svg?style=flat-square)][pypi]\n[![build](https://img.shields.io/circleci/project/github/metabolize/werkit/master.svg?style=flat-square)][build]\n[![code style](https://img.shields.io/badge/code%20style-black-black.svg?style=flat-square)][black]\n\nToolkit for encapsulating Python-based computation into deployable and\ndistributable tasks.\n\nProvides code that helps package things up:\n\n- Serializing results\n- Handling and serializing errors\n- Deploying task workers using [Redis][], [RQ][] and the [Fargate CLI][]\n\n[redis]: https://redis.io/\n[rq]: https://python-rq.org/\n[fargate cli]: https://somanymachines.com/fargate/\n\nThey're particularly useful for providing repsonse consistency across different\nrevisions of a service or different services.\n\n[pypi]: https://pypi.org/project/werkit/\n[coverage]: https://coveralls.io/github/metabolize/werkit\n[build]: https://circleci.com/gh/lace/werkit/tree/master\n[docs build]: https://werkit.readthedocs.io/en/latest/\n[black]: https://black.readthedocs.io/en/stable/\n\n## Installation\n\n```sh\npip install werkit\n```\n\n## Usage\n\n```py\nfrom werkit import Manager\n\ndef myfunc(param, verbose=False, handle_exceptions=True):\n    with Manager(handle_exceptions=handle_exceptions, verbose=verbose) as manager:\n        manager.result = do_some_computation()\n    return manager.serialized_result\n```\n\n## Parallel computation\n\nWerkit supports parallel computation using Redis and RQ.\n\nYou must install the dependencies separately:\n\n```sh\npip install redis rq\n```\n\n### Requesting work\n\n```py\nfrom mylib import myfunc\nfrom werkit.parallel import invoke_for_each\n\n\nitems = {'a': ..., 'b': ...}\njob_ids = invoke_for_each(myfunc, items, connection=Redis.from_url(...))\n```\n\n### Performing work\n\n```sh\npip install redis rq\nrq worker --burst werkit-default --url rediss://...\n```\n\nNote: `mylib.myfunc` must be importable.\n\n### Using CloudManager\n\nIn place of the low-level API you can make your calls using CloudManager:\n\n```py\n#!/usr/bin/env python\n\n\nimport click\nfrom werkit.parallel import Config, CloudManager, invoke_for_each\n\nmanager = CloudManager(\n    config=Config(\n        local_repository=\"my-project\",\n        ecr_repository=\"123456789012.dkr.ecr.us-east-1.amazonaws.com/my-project\",\n        ecs_task_name=\"my-project\",\n        task_args=[\n            \"--cpu\",\n            \"1024\",\n            \"--memory\",\n            \"2048\",\n            \"--task-role\",\n            \"arn:aws:iam::123456789012:role/...\",\n            \"--security-group-id\",\n            \"sg-...\",\n            \"--subnet-id\",\n            \"subnet-...\",\n        ],\n        default_task_count=5,\n    )\n)\n\n\n@click.group()\ndef cli():\n    pass\n\n\n@cli.command()\ndef login():\n    manager.login()\n\n\n@cli.command()\n@click.argument(\"tag\")\ndef build_and_push(tag):\n    manager.build_and_push()\n\n\n@cli.command()\ndef enqueue():\n    from myproject import myfunc\n\n    items = {\"key1\": \"value1\", \"key2\": \"value2\"}\n\n    invoke_for_each(\n        measure_body,\n        items,\n        clean=True,\n        connection=manager.redis_connection,\n    )\n\n\n@cli.command()\n@click.option(\n    \"--count\",\n    default=manager.config.default_task_count,\n    type=int,\n    help=\"Number of tasks to run\",\n)\n@click.argument(\"tag\")\ndef run(count, tag):\n    manager.run(tag=tag, count=count)\n\n\n@cli.command()\ndef dashboard():\n    manager.dashboard()\n\n\n@cli.command()\ndef ps():\n    manager.ps()\n\n\n@cli.command()\ndef get_results():\n    print(manager.get_results())\n\n\n@cli.command()\ndef clean():\n    manager.clean()\n\n\nif __name__ == \"__main__\":\n    cli()\n```\n\n### Getting results\n\n```py\nfrom redis import Redis\nfrom werkit.parallel import get_results\n\n\nget_results(wait_until_done=True, connection=Redis.from_url(...))\n```\n\n### Monitoring\n\nYou can monitor your queues using [RQ Dashboard][] or one of the\n[other methods outlined here][monitoring].\n\n[rq dashboard]: https://github.com/eoranged/rq-dashboard\n[monitoring]: https://python-rq.org/docs/monitoring/\n\n\n## Contribute\n\n- Issue Tracker: https://github.com/metabolize/werkit/issues\n- Source Code: https://github.com/metabolize/werkit\n\nPull requests welcome!\n\n\n## Support\n\nIf you are having issues, please let us know.\n\n\n## License\n\nThe project is licensed under the MIT License.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/metabolize/werkit", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "werkit", "package_url": "https://pypi.org/project/werkit/", "platform": "", "project_url": "https://pypi.org/project/werkit/", "project_urls": {"Documentation": "https://werkit.readthedocs.io/en/stable/", "Homepage": "https://github.com/metabolize/werkit", "Issue Tracker": "https://github.com/metabolize/werkit/issues"}, "release_url": "https://pypi.org/project/werkit/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "Toolkit for encapsulating Python-based computation into deployable and distributable tasks", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>werkit</h1>\n<p><a href=\"https://pypi.org/project/werkit/\" rel=\"nofollow\"><img alt=\"version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca9680303799fac5ebea5be54881e47df158315f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7765726b69742e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://pypi.org/project/werkit/\" rel=\"nofollow\"><img alt=\"python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64a3fc5f0e662a697f987bbc8777ac730d56fb05/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7765726b69742e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://pypi.org/project/werkit/\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9c746bc90b4e9da5e452926b221d893b07ffe34/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7765726b69742e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://circleci.com/gh/lace/werkit/tree/master\" rel=\"nofollow\"><img alt=\"build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/23934760628532f81209e0b5b227324fa256f5f6/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f6d657461626f6c697a652f7765726b69742f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://black.readthedocs.io/en/stable/\" rel=\"nofollow\"><img alt=\"code style\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64a0b124aac854b3968c08a3f1bddad6f5f987d4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d626c61636b2e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<p>Toolkit for encapsulating Python-based computation into deployable and\ndistributable tasks.</p>\n<p>Provides code that helps package things up:</p>\n<ul>\n<li>Serializing results</li>\n<li>Handling and serializing errors</li>\n<li>Deploying task workers using <a href=\"https://redis.io/\" rel=\"nofollow\">Redis</a>, <a href=\"https://python-rq.org/\" rel=\"nofollow\">RQ</a> and the <a href=\"https://somanymachines.com/fargate/\" rel=\"nofollow\">Fargate CLI</a></li>\n</ul>\n<p>They're particularly useful for providing repsonse consistency across different\nrevisions of a service or different services.</p>\n<h2>Installation</h2>\n<pre>pip install werkit\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">werkit</span> <span class=\"kn\">import</span> <span class=\"n\">Manager</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">myfunc</span><span class=\"p\">(</span><span class=\"n\">param</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">handle_exceptions</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"n\">Manager</span><span class=\"p\">(</span><span class=\"n\">handle_exceptions</span><span class=\"o\">=</span><span class=\"n\">handle_exceptions</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">manager</span><span class=\"p\">:</span>\n        <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">do_some_computation</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">serialized_result</span>\n</pre>\n<h2>Parallel computation</h2>\n<p>Werkit supports parallel computation using Redis and RQ.</p>\n<p>You must install the dependencies separately:</p>\n<pre>pip install redis rq\n</pre>\n<h3>Requesting work</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mylib</span> <span class=\"kn\">import</span> <span class=\"n\">myfunc</span>\n<span class=\"kn\">from</span> <span class=\"nn\">werkit.parallel</span> <span class=\"kn\">import</span> <span class=\"n\">invoke_for_each</span>\n\n\n<span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">}</span>\n<span class=\"n\">job_ids</span> <span class=\"o\">=</span> <span class=\"n\">invoke_for_each</span><span class=\"p\">(</span><span class=\"n\">myfunc</span><span class=\"p\">,</span> <span class=\"n\">items</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"o\">=</span><span class=\"n\">Redis</span><span class=\"o\">.</span><span class=\"n\">from_url</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">))</span>\n</pre>\n<h3>Performing work</h3>\n<pre>pip install redis rq\nrq worker --burst werkit-default --url rediss://...\n</pre>\n<p>Note: <code>mylib.myfunc</code> must be importable.</p>\n<h3>Using CloudManager</h3>\n<p>In place of the low-level API you can make your calls using CloudManager:</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n\n<span class=\"kn\">import</span> <span class=\"nn\">click</span>\n<span class=\"kn\">from</span> <span class=\"nn\">werkit.parallel</span> <span class=\"kn\">import</span> <span class=\"n\">Config</span><span class=\"p\">,</span> <span class=\"n\">CloudManager</span><span class=\"p\">,</span> <span class=\"n\">invoke_for_each</span>\n\n<span class=\"n\">manager</span> <span class=\"o\">=</span> <span class=\"n\">CloudManager</span><span class=\"p\">(</span>\n    <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">Config</span><span class=\"p\">(</span>\n        <span class=\"n\">local_repository</span><span class=\"o\">=</span><span class=\"s2\">\"my-project\"</span><span class=\"p\">,</span>\n        <span class=\"n\">ecr_repository</span><span class=\"o\">=</span><span class=\"s2\">\"123456789012.dkr.ecr.us-east-1.amazonaws.com/my-project\"</span><span class=\"p\">,</span>\n        <span class=\"n\">ecs_task_name</span><span class=\"o\">=</span><span class=\"s2\">\"my-project\"</span><span class=\"p\">,</span>\n        <span class=\"n\">task_args</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"s2\">\"--cpu\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"1024\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"--memory\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"2048\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"--task-role\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"arn:aws:iam::123456789012:role/...\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"--security-group-id\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"sg-...\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"--subnet-id\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"subnet-...\"</span><span class=\"p\">,</span>\n        <span class=\"p\">],</span>\n        <span class=\"n\">default_task_count</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"nd\">@click</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">cli</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">login</span><span class=\"p\">():</span>\n    <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">()</span>\n\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"nd\">@click</span><span class=\"o\">.</span><span class=\"n\">argument</span><span class=\"p\">(</span><span class=\"s2\">\"tag\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">build_and_push</span><span class=\"p\">(</span><span class=\"n\">tag</span><span class=\"p\">):</span>\n    <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">build_and_push</span><span class=\"p\">()</span>\n\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">enqueue</span><span class=\"p\">():</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">myproject</span> <span class=\"kn\">import</span> <span class=\"n\">myfunc</span>\n\n    <span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"key1\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"key2\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value2\"</span><span class=\"p\">}</span>\n\n    <span class=\"n\">invoke_for_each</span><span class=\"p\">(</span>\n        <span class=\"n\">measure_body</span><span class=\"p\">,</span>\n        <span class=\"n\">items</span><span class=\"p\">,</span>\n        <span class=\"n\">clean</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">connection</span><span class=\"o\">=</span><span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">redis_connection</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"nd\">@click</span><span class=\"o\">.</span><span class=\"n\">option</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"--count\"</span><span class=\"p\">,</span>\n    <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">default_task_count</span><span class=\"p\">,</span>\n    <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span>\n    <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">\"Number of tasks to run\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"nd\">@click</span><span class=\"o\">.</span><span class=\"n\">argument</span><span class=\"p\">(</span><span class=\"s2\">\"tag\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"p\">,</span> <span class=\"n\">tag</span><span class=\"p\">):</span>\n    <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">tag</span><span class=\"o\">=</span><span class=\"n\">tag</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"o\">=</span><span class=\"n\">count</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">dashboard</span><span class=\"p\">():</span>\n    <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">dashboard</span><span class=\"p\">()</span>\n\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">ps</span><span class=\"p\">():</span>\n    <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">ps</span><span class=\"p\">()</span>\n\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_results</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">get_results</span><span class=\"p\">())</span>\n\n\n<span class=\"nd\">@cli</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">clean</span><span class=\"p\">():</span>\n    <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">cli</span><span class=\"p\">()</span>\n</pre>\n<h3>Getting results</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">redis</span> <span class=\"kn\">import</span> <span class=\"n\">Redis</span>\n<span class=\"kn\">from</span> <span class=\"nn\">werkit.parallel</span> <span class=\"kn\">import</span> <span class=\"n\">get_results</span>\n\n\n<span class=\"n\">get_results</span><span class=\"p\">(</span><span class=\"n\">wait_until_done</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"o\">=</span><span class=\"n\">Redis</span><span class=\"o\">.</span><span class=\"n\">from_url</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">))</span>\n</pre>\n<h3>Monitoring</h3>\n<p>You can monitor your queues using <a href=\"https://github.com/eoranged/rq-dashboard\" rel=\"nofollow\">RQ Dashboard</a> or one of the\n<a href=\"https://python-rq.org/docs/monitoring/\" rel=\"nofollow\">other methods outlined here</a>.</p>\n<h2>Contribute</h2>\n<ul>\n<li>Issue Tracker: <a href=\"https://github.com/metabolize/werkit/issues\" rel=\"nofollow\">https://github.com/metabolize/werkit/issues</a></li>\n<li>Source Code: <a href=\"https://github.com/metabolize/werkit\" rel=\"nofollow\">https://github.com/metabolize/werkit</a></li>\n</ul>\n<p>Pull requests welcome!</p>\n<h2>Support</h2>\n<p>If you are having issues, please let us know.</p>\n<h2>License</h2>\n<p>The project is licensed under the MIT License.</p>\n\n          </div>"}, "last_serial": 6287913, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a63e5d20930dab52efe6c6969b4066bf", "sha256": "dd9e1aa6662e8f67dc0171f702a402538c7ecd907fb71de1322bff566e90fd3c"}, "downloads": -1, "filename": "werkit-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a63e5d20930dab52efe6c6969b4066bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3594, "upload_time": "2019-07-22T18:32:27", "upload_time_iso_8601": "2019-07-22T18:32:27.277595Z", "url": "https://files.pythonhosted.org/packages/92/f2/63d3704376febbfe5ced9aad197de50aa65acd7324081d3be0553039e0c5/werkit-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a5df4dab3dbc9f2bf2d2c4079d068833", "sha256": "e641f370ea8650c0608a25c27aa3d84c2975c55f64e4f17dc29bf1fae672df3f"}, "downloads": -1, "filename": "werkit-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a5df4dab3dbc9f2bf2d2c4079d068833", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3597, "upload_time": "2019-07-22T19:03:13", "upload_time_iso_8601": "2019-07-22T19:03:13.213969Z", "url": "https://files.pythonhosted.org/packages/06/98/da894bcea6e60def7e34414b67f959efd94041497f2038fc6bfa928c1bc9/werkit-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "996ea13bbdfdf6a2ed639e94cdff3eb1", "sha256": "a2c87505c588415a4767182c5b54d18555825d7f064119cf5721360e4f6b54aa"}, "downloads": -1, "filename": "werkit-0.3.0.tar.gz", "has_sig": false, "md5_digest": "996ea13bbdfdf6a2ed639e94cdff3eb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7676, "upload_time": "2019-08-12T07:32:32", "upload_time_iso_8601": "2019-08-12T07:32:32.202159Z", "url": "https://files.pythonhosted.org/packages/36/14/7c6dc3cb8cf8faa3c2f8a029c4811620ee3855a6ada1e2c05a27e5e1a8c6/werkit-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "50e83c0ff2c09d5b6bcda8bfeceb24cc", "sha256": "762d8b15361f9055d71af398c42ffa68a77115a745aa4489deccb809dacee844"}, "downloads": -1, "filename": "werkit-0.3.1.tar.gz", "has_sig": false, "md5_digest": "50e83c0ff2c09d5b6bcda8bfeceb24cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7165, "upload_time": "2019-08-12T07:35:48", "upload_time_iso_8601": "2019-08-12T07:35:48.913587Z", "url": "https://files.pythonhosted.org/packages/87/ab/fef45c55d36839b254fbf87eb7099d4760ab206cb09690176e6ddcb567f1/werkit-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "352a08600dc22c0d348fafe733c24267", "sha256": "de561a1f9e3fdb7e048c6947fe146631feda3cc9798ffeb804723de934cd59d2"}, "downloads": -1, "filename": "werkit-0.3.2.tar.gz", "has_sig": false, "md5_digest": "352a08600dc22c0d348fafe733c24267", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7185, "upload_time": "2019-08-17T14:32:05", "upload_time_iso_8601": "2019-08-17T14:32:05.330783Z", "url": "https://files.pythonhosted.org/packages/ac/1e/dafe82eded9c00f7c036d9fba9bce56e9d958064b036c095b5955e2a9c8c/werkit-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "0893863b31893c01baa5ac085761f75a", "sha256": "9fc0cf1c8ae74beddf0c6119aac790ef495937f4dc3a1d31fb180e64574ead30"}, "downloads": -1, "filename": "werkit-0.3.3.tar.gz", "has_sig": false, "md5_digest": "0893863b31893c01baa5ac085761f75a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7227, "upload_time": "2019-08-19T13:07:30", "upload_time_iso_8601": "2019-08-19T13:07:30.802311Z", "url": "https://files.pythonhosted.org/packages/63/25/ad93c98b129018e14461c918832311e82c6ab90f5f2d06002722d8a8fdaf/werkit-0.3.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "25e4365a607faa427d3205b0cf2ce591", "sha256": "7dab1ac134d3aaf96188635c254c2651e8ac61d43c4c5d9286e2e83cad987d3a"}, "downloads": -1, "filename": "werkit-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "25e4365a607faa427d3205b0cf2ce591", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9588, "upload_time": "2019-12-12T18:20:26", "upload_time_iso_8601": "2019-12-12T18:20:26.527819Z", "url": "https://files.pythonhosted.org/packages/34/9f/017d2485f14370510f4d9ec73fa49fc78c093a3279eb78c43d4aa09fe64a/werkit-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1acbbd09d66abe47a94a1b8302f2bad5", "sha256": "c45b8a647de973cee5f148c9d26c26ba24c8ac3e475c185a3a5bbc82f300954c"}, "downloads": -1, "filename": "werkit-0.4.0.tar.gz", "has_sig": false, "md5_digest": "1acbbd09d66abe47a94a1b8302f2bad5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7920, "upload_time": "2019-12-12T18:20:27", "upload_time_iso_8601": "2019-12-12T18:20:27.601142Z", "url": "https://files.pythonhosted.org/packages/24/bb/7df60ed69b684ba707e76b063edd0fd440a7eee48a0954d8937e9940482d/werkit-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "25e4365a607faa427d3205b0cf2ce591", "sha256": "7dab1ac134d3aaf96188635c254c2651e8ac61d43c4c5d9286e2e83cad987d3a"}, "downloads": -1, "filename": "werkit-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "25e4365a607faa427d3205b0cf2ce591", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9588, "upload_time": "2019-12-12T18:20:26", "upload_time_iso_8601": "2019-12-12T18:20:26.527819Z", "url": "https://files.pythonhosted.org/packages/34/9f/017d2485f14370510f4d9ec73fa49fc78c093a3279eb78c43d4aa09fe64a/werkit-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1acbbd09d66abe47a94a1b8302f2bad5", "sha256": "c45b8a647de973cee5f148c9d26c26ba24c8ac3e475c185a3a5bbc82f300954c"}, "downloads": -1, "filename": "werkit-0.4.0.tar.gz", "has_sig": false, "md5_digest": "1acbbd09d66abe47a94a1b8302f2bad5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7920, "upload_time": "2019-12-12T18:20:27", "upload_time_iso_8601": "2019-12-12T18:20:27.601142Z", "url": "https://files.pythonhosted.org/packages/24/bb/7df60ed69b684ba707e76b063edd0fd440a7eee48a0954d8937e9940482d/werkit-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:30:13 2020"}