{"info": {"author": "Martin Bammer <mrbm74@gmail.com>", "author_email": "Martin Bammer <mrbm74@gmail.com>", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Rust", "Typing :: Typed"], "description": "# `scandir-rs`\n\n``scandir_rs`` is a directory iteration module like ``os.walk()``,\nbut with more features and higher speed. Depending on the function call\nit yields a list of paths, tuple of lists grouped by their entry type or ``DirEntry`` objects that include file type and stat information along\nwith the name. Using ``scandir_rs`` is about **2-17 times faster** than ``os.walk()`` (depending on the platform, file system and file tree structure) by parallelizing the iteration in background.\n\nIf your are just interested in directory statistics you can use the submodule ``count``.\n\n``scandir_rs`` contains following submodules:\n\n- ``count`` for determining statistics of a directory.\n- ``walk`` for getting names of directory entries.\n- ``scandir`` for getting detailed stats of directory entries.\n\nFor the API see:\n\n- Submodule ``count`` [doc/count.md](https://github.com/brmmm3/scandir-rs/blob/master/doc/count.md)\n- Submodule ``walk`` [doc/walk.md](https://github.com/brmmm3/scandir-rs/blob/master/doc/walk.md)\n- Submodule ``scandir`` [doc/scandir.md](https://github.com/brmmm3/scandir-rs/blob/master/doc/scandir.md)\n\n## Installation\n\nFor building this wheel from source you need Rust with channel ``nightly`` and the tool ``maturin``.\n\nSwitch to channel ``nightly``:\n\n```sh\nrustup default nightly\n```\n\nInstall ``maturin``:\n\n```sh\ncargo install maturin\n```\n\nBuild wheel:\n\n```sh\nmaturin build --release\n```\n\n``maturin`` will build the wheels for all Python versions installed on your system.\n\n## Examples\n\nGet statistics of a directory:\n\n```python\nimport scandir_rs as scandir\n\nprint(scandir.count.count(\"~/workspace\", extended=True))\n```\n\nThe same, but asynchronously in background using a class instance:\n\n```python\nimport scandir_rs as scandir\n\nscanner = scandir.count.Count(\"~/workspace\", extended=True))\nscanner.start())  # Start background thread pool\n...\nvalue = scanner.statistics  # Can be read at any time\n...\nscanner.stop()  # If you want to cancel the scanner\n```\n\nand with a context manager:\n\n```python\nimport scandir_rs as scandir\n\nC = scandir.count.Count(\"~/workspace\", extended=True))\nwith C:\n    while C.busy():\n        statistics = C.statistics\n        # Do something\n```\n\n``os.walk()`` example:\n\n```python\nimport scandir_rs as scandir\n\nfor root, dirs, files in scandir.walk.Walk(\"~/workspace\"):\n    # Do something\n```\n\nwith extended data:\n\n```python\nimport scandir_rs as scandir\n\nfor root, dirs, files, symlinks, other, errors in scandir.walk.Walk(\"~/workspace\",\n        return_type=scandir.RETURN_TYPE_EXT):\n    # Do something\n```\n\n``os.scandir()`` example:\n\n```python\nimport scandir_rs as scandir\n\nfor path, entry in scandir.scandir.Scandir(\"~/workspace\",\n        return_type=scandir.RETURN_TYPE_EXT):\n    # entry is a custom DirEntry object\n```\n\n## Benchmarks\n\nSee [examples/benchmark.py](https://github.com/brmmm3/scandir-rs/blob/master/examples/benchmark.py)\n\nIn the below table the line **scandir_rs.walk.Walk** returns comparable\nresults to os.walk.\n\n### Linux with Ryzen 5 2400G and SSD\n\n#### Directory *~/workspace* with\n\n- 22845 directories\n- 321354 files\n- 130 symlinks\n- 22849 hardlinks\n- 4 devices\n- 1 pipes\n- 4.6GB size and 5.4GB usage on disk\n\n| Time [s] | Method                                             |\n| -------- | -------------------------------------------------- |\n| 0.547    | os.walk (Python 3.7)                               |\n| 0.132    | scandir_rs.count.count                             |\n| 0.142    | scandir_rs.count.Count                             |\n| 0.237    | scandir_rs.walk.Walk                               |\n| 0.224    | scandir_rs.walk.toc                                |\n| 0.242    | scandir_rs.walk.collect                            |\n| 0.262    | scandir_rs.scandir.entries                         |\n| 0.344    | scandir_rs.scandir.entries(metadata=True)          |\n| 0.336    | scandir_rs.scandir.entries(metadata_ext=True)      |\n| 0.280    | scandir_rs.scandir.Scandir.collect                 |\n| 0.262    | scandir_rs.scandir.Scandir.iter                    |\n| 0.330    | scandir_rs.scandir.Scandir.iter(metadata_ext=True) |\n\nUp to **2 times faster** on Linux.\n\n### Windows 10 with Laptop Core i7-4810MQ @ 2.8GHz Laptop, MTF SSD\n\n#### Directory *C:\\Windows* with\n\n- 84248 directories\n- 293108 files\n- 44.4GB size and 45.2GB usage on disk\n\n| Time [s] | Method                                             |\n| -------- | -------------------------------------------------- |\n| 26.881   | os.walk (Python 3.7)                               |\n| 4.094    | scandir_rs.count.count                             |\n| 3.654    | scandir_rs.count.Count                             |\n| 3.978    | scandir_rs.walk.Walk                               |\n| 3.848    | scandir_rs.walk.toc                                |\n| 3.777    | scandir_rs.walk.collect                            |\n| 3.987    | scandir_rs.scandir.entries                         |\n| 3.905    | scandir_rs.scandir.entries(metadata=True)          |\n| 4.062    | scandir_rs.scandir.entries(metadata_ext=True)      |\n| 3.934    | scandir_rs.scandir.Scandir.collect                 |\n| 3.981    | scandir_rs.scandir.Scandir.iter                    |\n| 3.821    | scandir_rs.scandir.Scandir.iter(metadata_ext=True) |\n\nUp to **6.7 times faster** on Windows 10.\n\n#### Directory *C:\\testdir* with\n\n- 185563 directories\n- 1641277 files\n- 2696 symlinks\n- 97GB size and 100.5GB usage on disk\n\n| Time [s] | Method                                             |\n| -------- | -------------------------------------------------- |\n| 151.143  | os.walk (Python 3.7)                               |\n| 7.549    | scandir_rs.count.count                             |\n| 7.531    | scandir_rs.count.Count                             |\n| 8.710    | scandir_rs.walk.Walk                               |\n| 8.625    | scandir_rs.walk.toc                                |\n| 8.599    | scandir_rs.walk.collect                            |\n| 9.014    | scandir_rs.scandir.entries                         |\n| 9.208    | scandir_rs.scandir.entries(metadata=True)          |\n| 8.925    | scandir_rs.scandir.entries(metadata_ext=True)      |\n| 9.243    | scandir_rs.scandir.Scandir.collect                 |\n| 8.462    | scandir_rs.scandir.Scandir.iter                    |\n| 8.380    | scandir_rs.scandir.Scandir.iter(metadata_ext=True) |\n\nUp to **17.4 times faster** on Windows 10.\n\n", "description_content_type": "text/markdown; charset=UTF-8; variant=GFM", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brmmm3/scandir-rs", "keywords": "fast scandir walk", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "scandir-rs", "package_url": "https://pypi.org/project/scandir-rs/", "platform": "", "project_url": "https://pypi.org/project/scandir-rs/", "project_urls": {"Homepage": "https://github.com/brmmm3/scandir-rs"}, "release_url": "https://pypi.org/project/scandir-rs/0.9.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A fast directory scanner.", "version": "0.9.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><code>scandir-rs</code></h1>\n<p><code>scandir_rs</code> is a directory iteration module like <code>os.walk()</code>,\nbut with more features and higher speed. Depending on the function call\nit yields a list of paths, tuple of lists grouped by their entry type or <code>DirEntry</code> objects that include file type and stat information along\nwith the name. Using <code>scandir_rs</code> is about <strong>2-17 times faster</strong> than <code>os.walk()</code> (depending on the platform, file system and file tree structure) by parallelizing the iteration in background.</p>\n<p>If your are just interested in directory statistics you can use the submodule <code>count</code>.</p>\n<p><code>scandir_rs</code> contains following submodules:</p>\n<ul>\n<li><code>count</code> for determining statistics of a directory.</li>\n<li><code>walk</code> for getting names of directory entries.</li>\n<li><code>scandir</code> for getting detailed stats of directory entries.</li>\n</ul>\n<p>For the API see:</p>\n<ul>\n<li>Submodule <code>count</code> <a href=\"https://github.com/brmmm3/scandir-rs/blob/master/doc/count.md\" rel=\"nofollow\">doc/count.md</a></li>\n<li>Submodule <code>walk</code> <a href=\"https://github.com/brmmm3/scandir-rs/blob/master/doc/walk.md\" rel=\"nofollow\">doc/walk.md</a></li>\n<li>Submodule <code>scandir</code> <a href=\"https://github.com/brmmm3/scandir-rs/blob/master/doc/scandir.md\" rel=\"nofollow\">doc/scandir.md</a></li>\n</ul>\n<h2>Installation</h2>\n<p>For building this wheel from source you need Rust with channel <code>nightly</code> and the tool <code>maturin</code>.</p>\n<p>Switch to channel <code>nightly</code>:</p>\n<pre>rustup default nightly\n</pre>\n<p>Install <code>maturin</code>:</p>\n<pre>cargo install maturin\n</pre>\n<p>Build wheel:</p>\n<pre>maturin build --release\n</pre>\n<p><code>maturin</code> will build the wheels for all Python versions installed on your system.</p>\n<h2>Examples</h2>\n<p>Get statistics of a directory:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">scandir_rs</span> <span class=\"k\">as</span> <span class=\"nn\">scandir</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">scandir</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"s2\">\"~/workspace\"</span><span class=\"p\">,</span> <span class=\"n\">extended</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n</pre>\n<p>The same, but asynchronously in background using a class instance:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">scandir_rs</span> <span class=\"k\">as</span> <span class=\"nn\">scandir</span>\n\n<span class=\"n\">scanner</span> <span class=\"o\">=</span> <span class=\"n\">scandir</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"o\">.</span><span class=\"n\">Count</span><span class=\"p\">(</span><span class=\"s2\">\"~/workspace\"</span><span class=\"p\">,</span> <span class=\"n\">extended</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"n\">scanner</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">())</span>  <span class=\"c1\"># Start background thread pool</span>\n<span class=\"o\">...</span>\n<span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">scanner</span><span class=\"o\">.</span><span class=\"n\">statistics</span>  <span class=\"c1\"># Can be read at any time</span>\n<span class=\"o\">...</span>\n<span class=\"n\">scanner</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>  <span class=\"c1\"># If you want to cancel the scanner</span>\n</pre>\n<p>and with a context manager:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">scandir_rs</span> <span class=\"k\">as</span> <span class=\"nn\">scandir</span>\n\n<span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">scandir</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"o\">.</span><span class=\"n\">Count</span><span class=\"p\">(</span><span class=\"s2\">\"~/workspace\"</span><span class=\"p\">,</span> <span class=\"n\">extended</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"k\">with</span> <span class=\"n\">C</span><span class=\"p\">:</span>\n    <span class=\"k\">while</span> <span class=\"n\">C</span><span class=\"o\">.</span><span class=\"n\">busy</span><span class=\"p\">():</span>\n        <span class=\"n\">statistics</span> <span class=\"o\">=</span> <span class=\"n\">C</span><span class=\"o\">.</span><span class=\"n\">statistics</span>\n        <span class=\"c1\"># Do something</span>\n</pre>\n<p><code>os.walk()</code> example:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">scandir_rs</span> <span class=\"k\">as</span> <span class=\"nn\">scandir</span>\n\n<span class=\"k\">for</span> <span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">dirs</span><span class=\"p\">,</span> <span class=\"n\">files</span> <span class=\"ow\">in</span> <span class=\"n\">scandir</span><span class=\"o\">.</span><span class=\"n\">walk</span><span class=\"o\">.</span><span class=\"n\">Walk</span><span class=\"p\">(</span><span class=\"s2\">\"~/workspace\"</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Do something</span>\n</pre>\n<p>with extended data:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">scandir_rs</span> <span class=\"k\">as</span> <span class=\"nn\">scandir</span>\n\n<span class=\"k\">for</span> <span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">dirs</span><span class=\"p\">,</span> <span class=\"n\">files</span><span class=\"p\">,</span> <span class=\"n\">symlinks</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"n\">errors</span> <span class=\"ow\">in</span> <span class=\"n\">scandir</span><span class=\"o\">.</span><span class=\"n\">walk</span><span class=\"o\">.</span><span class=\"n\">Walk</span><span class=\"p\">(</span><span class=\"s2\">\"~/workspace\"</span><span class=\"p\">,</span>\n        <span class=\"n\">return_type</span><span class=\"o\">=</span><span class=\"n\">scandir</span><span class=\"o\">.</span><span class=\"n\">RETURN_TYPE_EXT</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Do something</span>\n</pre>\n<p><code>os.scandir()</code> example:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">scandir_rs</span> <span class=\"k\">as</span> <span class=\"nn\">scandir</span>\n\n<span class=\"k\">for</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">entry</span> <span class=\"ow\">in</span> <span class=\"n\">scandir</span><span class=\"o\">.</span><span class=\"n\">scandir</span><span class=\"o\">.</span><span class=\"n\">Scandir</span><span class=\"p\">(</span><span class=\"s2\">\"~/workspace\"</span><span class=\"p\">,</span>\n        <span class=\"n\">return_type</span><span class=\"o\">=</span><span class=\"n\">scandir</span><span class=\"o\">.</span><span class=\"n\">RETURN_TYPE_EXT</span><span class=\"p\">):</span>\n    <span class=\"c1\"># entry is a custom DirEntry object</span>\n</pre>\n<h2>Benchmarks</h2>\n<p>See <a href=\"https://github.com/brmmm3/scandir-rs/blob/master/examples/benchmark.py\" rel=\"nofollow\">examples/benchmark.py</a></p>\n<p>In the below table the line <strong>scandir_rs.walk.Walk</strong> returns comparable\nresults to os.walk.</p>\n<h3>Linux with Ryzen 5 2400G and SSD</h3>\n<h4>Directory <em>~/workspace</em> with</h4>\n<ul>\n<li>22845 directories</li>\n<li>321354 files</li>\n<li>130 symlinks</li>\n<li>22849 hardlinks</li>\n<li>4 devices</li>\n<li>1 pipes</li>\n<li>4.6GB size and 5.4GB usage on disk</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Time [s]</th>\n<th>Method</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0.547</td>\n<td>os.walk (Python 3.7)</td>\n</tr>\n<tr>\n<td>0.132</td>\n<td>scandir_rs.count.count</td>\n</tr>\n<tr>\n<td>0.142</td>\n<td>scandir_rs.count.Count</td>\n</tr>\n<tr>\n<td>0.237</td>\n<td>scandir_rs.walk.Walk</td>\n</tr>\n<tr>\n<td>0.224</td>\n<td>scandir_rs.walk.toc</td>\n</tr>\n<tr>\n<td>0.242</td>\n<td>scandir_rs.walk.collect</td>\n</tr>\n<tr>\n<td>0.262</td>\n<td>scandir_rs.scandir.entries</td>\n</tr>\n<tr>\n<td>0.344</td>\n<td>scandir_rs.scandir.entries(metadata=True)</td>\n</tr>\n<tr>\n<td>0.336</td>\n<td>scandir_rs.scandir.entries(metadata_ext=True)</td>\n</tr>\n<tr>\n<td>0.280</td>\n<td>scandir_rs.scandir.Scandir.collect</td>\n</tr>\n<tr>\n<td>0.262</td>\n<td>scandir_rs.scandir.Scandir.iter</td>\n</tr>\n<tr>\n<td>0.330</td>\n<td>scandir_rs.scandir.Scandir.iter(metadata_ext=True)</td>\n</tr></tbody></table>\n<p>Up to <strong>2 times faster</strong> on Linux.</p>\n<h3>Windows 10 with Laptop Core i7-4810MQ @ 2.8GHz Laptop, MTF SSD</h3>\n<h4>Directory <em>C:\\Windows</em> with</h4>\n<ul>\n<li>84248 directories</li>\n<li>293108 files</li>\n<li>44.4GB size and 45.2GB usage on disk</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Time [s]</th>\n<th>Method</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>26.881</td>\n<td>os.walk (Python 3.7)</td>\n</tr>\n<tr>\n<td>4.094</td>\n<td>scandir_rs.count.count</td>\n</tr>\n<tr>\n<td>3.654</td>\n<td>scandir_rs.count.Count</td>\n</tr>\n<tr>\n<td>3.978</td>\n<td>scandir_rs.walk.Walk</td>\n</tr>\n<tr>\n<td>3.848</td>\n<td>scandir_rs.walk.toc</td>\n</tr>\n<tr>\n<td>3.777</td>\n<td>scandir_rs.walk.collect</td>\n</tr>\n<tr>\n<td>3.987</td>\n<td>scandir_rs.scandir.entries</td>\n</tr>\n<tr>\n<td>3.905</td>\n<td>scandir_rs.scandir.entries(metadata=True)</td>\n</tr>\n<tr>\n<td>4.062</td>\n<td>scandir_rs.scandir.entries(metadata_ext=True)</td>\n</tr>\n<tr>\n<td>3.934</td>\n<td>scandir_rs.scandir.Scandir.collect</td>\n</tr>\n<tr>\n<td>3.981</td>\n<td>scandir_rs.scandir.Scandir.iter</td>\n</tr>\n<tr>\n<td>3.821</td>\n<td>scandir_rs.scandir.Scandir.iter(metadata_ext=True)</td>\n</tr></tbody></table>\n<p>Up to <strong>6.7 times faster</strong> on Windows 10.</p>\n<h4>Directory <em>C:\\testdir</em> with</h4>\n<ul>\n<li>185563 directories</li>\n<li>1641277 files</li>\n<li>2696 symlinks</li>\n<li>97GB size and 100.5GB usage on disk</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Time [s]</th>\n<th>Method</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>151.143</td>\n<td>os.walk (Python 3.7)</td>\n</tr>\n<tr>\n<td>7.549</td>\n<td>scandir_rs.count.count</td>\n</tr>\n<tr>\n<td>7.531</td>\n<td>scandir_rs.count.Count</td>\n</tr>\n<tr>\n<td>8.710</td>\n<td>scandir_rs.walk.Walk</td>\n</tr>\n<tr>\n<td>8.625</td>\n<td>scandir_rs.walk.toc</td>\n</tr>\n<tr>\n<td>8.599</td>\n<td>scandir_rs.walk.collect</td>\n</tr>\n<tr>\n<td>9.014</td>\n<td>scandir_rs.scandir.entries</td>\n</tr>\n<tr>\n<td>9.208</td>\n<td>scandir_rs.scandir.entries(metadata=True)</td>\n</tr>\n<tr>\n<td>8.925</td>\n<td>scandir_rs.scandir.entries(metadata_ext=True)</td>\n</tr>\n<tr>\n<td>9.243</td>\n<td>scandir_rs.scandir.Scandir.collect</td>\n</tr>\n<tr>\n<td>8.462</td>\n<td>scandir_rs.scandir.Scandir.iter</td>\n</tr>\n<tr>\n<td>8.380</td>\n<td>scandir_rs.scandir.Scandir.iter(metadata_ext=True)</td>\n</tr></tbody></table>\n<p>Up to <strong>17.4 times faster</strong> on Windows 10.</p>\n\n          </div>"}, "last_serial": 6535848, "releases": {"0.7.1": [{"comment_text": "", "digests": {"md5": "7e97d15ca60701b97e61540ce20cf23c", "sha256": "b6071f8f4c3be01e32ec0435721715c3481a79d08e842e4fd7a7fc94fab730be"}, "downloads": -1, "filename": "scandir_rs-0.7.1-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "7e97d15ca60701b97e61540ce20cf23c", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 525586, "upload_time": "2020-01-10T10:22:27", "upload_time_iso_8601": "2020-01-10T10:22:27.396843Z", "url": "https://files.pythonhosted.org/packages/b0/43/76030359f75584226bff8a8f89a1873ea0877562e1c73cd8a491d40872e4/scandir_rs-0.7.1-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "749b76eff573f927c1f897968e58b792", "sha256": "8d0ccd19212acb74242067e55aae17b354a51bbc3ce4a10cc3b2e2823816f527"}, "downloads": -1, "filename": "scandir_rs-0.7.2-cp36-none-win_amd64.whl", "has_sig": false, "md5_digest": "749b76eff573f927c1f897968e58b792", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6", "size": 230272, "upload_time": "2020-01-13T04:42:39", "upload_time_iso_8601": "2020-01-13T04:42:39.727177Z", "url": "https://files.pythonhosted.org/packages/bf/2b/0cf4f72a46363fa22287e2353402440468baced337416c7c3f7954122e22/scandir_rs-0.7.2-cp36-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "46d06022510c3855a130e565b074cfda", "sha256": "7d7afae55d278d4f42496bc69761895248cbdc344e415e0c9377d513201d0887"}, "downloads": -1, "filename": "scandir_rs-0.7.2-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "46d06022510c3855a130e565b074cfda", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 525685, "upload_time": "2020-01-10T15:50:14", "upload_time_iso_8601": "2020-01-10T15:50:14.204012Z", "url": "https://files.pythonhosted.org/packages/5f/27/7180fb0a1856f8880199491c5ec0b76aee69d86caee151751081c585b669/scandir_rs-0.7.2-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b2ba205370dc41733915c1f11ddd572", "sha256": "b94fc82f3984fcc4e3daa2a741bad89571e4eccd6a96da0586a3a4d3d00d737a"}, "downloads": -1, "filename": "scandir_rs-0.7.2-cp37-none-win_amd64.whl", "has_sig": false, "md5_digest": "0b2ba205370dc41733915c1f11ddd572", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 230129, "upload_time": "2020-01-13T04:42:42", "upload_time_iso_8601": "2020-01-13T04:42:42.128345Z", "url": "https://files.pythonhosted.org/packages/bd/c8/6b372f981e2aaef6eda8920e083b67ce0cdded37b6cf893a3717ae82e8f9/scandir_rs-0.7.2-cp37-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "809e8e9f73e65bedb2ebc4c04db3df62", "sha256": "8d478f7b8b95ddc02df0ec3115d8d3195ccbbe9c15f1a2f0225251c9a976e36a"}, "downloads": -1, "filename": "scandir_rs-0.7.2-cp38-none-win_amd64.whl", "has_sig": false, "md5_digest": "809e8e9f73e65bedb2ebc4c04db3df62", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.6", "size": 230168, "upload_time": "2020-01-13T04:42:44", "upload_time_iso_8601": "2020-01-13T04:42:44.636314Z", "url": "https://files.pythonhosted.org/packages/fb/5b/b42816aa1657fda3df19eb1f0125081115a3f44099b56267427c923ff7aa/scandir_rs-0.7.2-cp38-none-win_amd64.whl", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "7289811280bae4f88eec392c419dfa54", "sha256": "f96b0ff87195b2728cfec1839adce9c181ee123d01e1fdcd5965b48d221da90f"}, "downloads": -1, "filename": "scandir_rs-0.8.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "7289811280bae4f88eec392c419dfa54", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6", "size": 533321, "upload_time": "2020-01-20T06:34:51", "upload_time_iso_8601": "2020-01-20T06:34:51.717265Z", "url": "https://files.pythonhosted.org/packages/3e/8a/f83fd7c8fdcd11e37003fe45cb589674a542be6e43e83ed6e3673f3412c3/scandir_rs-0.8.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a4c66754239afdfa1ccc7679d20f3fc", "sha256": "6416377d7e100ab09af94163d3cacd0605b3dae58d9c6d8af646451120c114b2"}, "downloads": -1, "filename": "scandir_rs-0.8.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "8a4c66754239afdfa1ccc7679d20f3fc", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 533050, "upload_time": "2020-01-20T06:34:53", "upload_time_iso_8601": "2020-01-20T06:34:53.887042Z", "url": "https://files.pythonhosted.org/packages/86/c1/1e7e3b07730bdef31c64a7e89618e98064e4ca50154ac42c13959caf3c04/scandir_rs-0.8.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f984f1df0648c99a61fd1527d2ec44be", "sha256": "f02b516dd59750312aa2099b305324931fdf4aa4fc915b75f57d6fb521203187"}, "downloads": -1, "filename": "scandir_rs-0.8.0.tar.gz", "has_sig": false, "md5_digest": "f984f1df0648c99a61fd1527d2ec44be", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13441, "upload_time": "2020-01-20T06:34:56", "upload_time_iso_8601": "2020-01-20T06:34:56.162688Z", "url": "https://files.pythonhosted.org/packages/3b/a9/97a2a4491736c41f24bd8c5b426460d2d360d57c7be45cd278ac013f6aa9/scandir_rs-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "e264c37db553097b731be38e8a9d12b6", "sha256": "f5f680bb005401374a6b19c7ab6974ab0455b67d80b9137bd0879688510130e1"}, "downloads": -1, "filename": "scandir_rs-0.9.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e264c37db553097b731be38e8a9d12b6", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 4792331, "upload_time": "2020-01-29T04:32:28", "upload_time_iso_8601": "2020-01-29T04:32:28.689767Z", "url": "https://files.pythonhosted.org/packages/61/3c/9457caa0957d78ce90ef6ac3b729876e345ccb93fd53bc302ad044b5be03/scandir_rs-0.9.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d58ce8d2403a1f0919f00fa75cea4b71", "sha256": "8cd1438b39cd91340516e87620579c78d7647872b4d9ff547f83db11a60c17cf"}, "downloads": -1, "filename": "scandir_rs-0.9.0-cp37-none-win_amd64.whl", "has_sig": false, "md5_digest": "d58ce8d2403a1f0919f00fa75cea4b71", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 279722, "upload_time": "2020-01-29T04:32:31", "upload_time_iso_8601": "2020-01-29T04:32:31.294800Z", "url": "https://files.pythonhosted.org/packages/a6/38/c49a921c2fecb18bb6ff1f8a0dba8d729f52ab0e2d0dc639d4e798219f8a/scandir_rs-0.9.0-cp37-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab6a4ed9faa0fe45306731c1f8d6e1a2", "sha256": "9ebb480c64ca6c203b07f70334d5802c91a8c224e0c1e6797dbdcae39345b9fe"}, "downloads": -1, "filename": "scandir_rs-0.9.0-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "ab6a4ed9faa0fe45306731c1f8d6e1a2", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.6", "size": 4780471, "upload_time": "2020-01-29T04:32:44", "upload_time_iso_8601": "2020-01-29T04:32:44.338302Z", "url": "https://files.pythonhosted.org/packages/50/3e/447062925493cf1ec87fddbd9e1487e744f7f8829a29651966f4e8811da3/scandir_rs-0.9.0-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "83213b57c4724afdb033913134aba37c", "sha256": "168f49d03a7d38543c0de3297ead6b9fc9bc24f0343015a8631962e7ff1e2508"}, "downloads": -1, "filename": "scandir_rs-0.9.0-cp38-none-win_amd64.whl", "has_sig": false, "md5_digest": "83213b57c4724afdb033913134aba37c", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.6", "size": 279724, "upload_time": "2020-01-29T04:32:47", "upload_time_iso_8601": "2020-01-29T04:32:47.317325Z", "url": "https://files.pythonhosted.org/packages/31/96/2ff5e8fa17c49a84e2fedfee2fe734c5687d60c940c23eba46bbf8f95780/scandir_rs-0.9.0-cp38-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df5462ff2f9061ecec1e16f4016ba6d9", "sha256": "057cf8ec4146c3292cc5c1e39880feebaa86544557e6e3eaed8b5d708b94268a"}, "downloads": -1, "filename": "scandir_rs-0.9.0.tar.gz", "has_sig": false, "md5_digest": "df5462ff2f9061ecec1e16f4016ba6d9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15403, "upload_time": "2020-01-29T04:32:48", "upload_time_iso_8601": "2020-01-29T04:32:48.661726Z", "url": "https://files.pythonhosted.org/packages/03/ca/ff6c2d4e0e1484d590c1aa0df6c3ce324a22aabedc153a3abe71ef3e03af/scandir_rs-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e264c37db553097b731be38e8a9d12b6", "sha256": "f5f680bb005401374a6b19c7ab6974ab0455b67d80b9137bd0879688510130e1"}, "downloads": -1, "filename": "scandir_rs-0.9.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e264c37db553097b731be38e8a9d12b6", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 4792331, "upload_time": "2020-01-29T04:32:28", "upload_time_iso_8601": "2020-01-29T04:32:28.689767Z", "url": "https://files.pythonhosted.org/packages/61/3c/9457caa0957d78ce90ef6ac3b729876e345ccb93fd53bc302ad044b5be03/scandir_rs-0.9.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d58ce8d2403a1f0919f00fa75cea4b71", "sha256": "8cd1438b39cd91340516e87620579c78d7647872b4d9ff547f83db11a60c17cf"}, "downloads": -1, "filename": "scandir_rs-0.9.0-cp37-none-win_amd64.whl", "has_sig": false, "md5_digest": "d58ce8d2403a1f0919f00fa75cea4b71", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 279722, "upload_time": "2020-01-29T04:32:31", "upload_time_iso_8601": "2020-01-29T04:32:31.294800Z", "url": "https://files.pythonhosted.org/packages/a6/38/c49a921c2fecb18bb6ff1f8a0dba8d729f52ab0e2d0dc639d4e798219f8a/scandir_rs-0.9.0-cp37-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab6a4ed9faa0fe45306731c1f8d6e1a2", "sha256": "9ebb480c64ca6c203b07f70334d5802c91a8c224e0c1e6797dbdcae39345b9fe"}, "downloads": -1, "filename": "scandir_rs-0.9.0-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "ab6a4ed9faa0fe45306731c1f8d6e1a2", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.6", "size": 4780471, "upload_time": "2020-01-29T04:32:44", "upload_time_iso_8601": "2020-01-29T04:32:44.338302Z", "url": "https://files.pythonhosted.org/packages/50/3e/447062925493cf1ec87fddbd9e1487e744f7f8829a29651966f4e8811da3/scandir_rs-0.9.0-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "83213b57c4724afdb033913134aba37c", "sha256": "168f49d03a7d38543c0de3297ead6b9fc9bc24f0343015a8631962e7ff1e2508"}, "downloads": -1, "filename": "scandir_rs-0.9.0-cp38-none-win_amd64.whl", "has_sig": false, "md5_digest": "83213b57c4724afdb033913134aba37c", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.6", "size": 279724, "upload_time": "2020-01-29T04:32:47", "upload_time_iso_8601": "2020-01-29T04:32:47.317325Z", "url": "https://files.pythonhosted.org/packages/31/96/2ff5e8fa17c49a84e2fedfee2fe734c5687d60c940c23eba46bbf8f95780/scandir_rs-0.9.0-cp38-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df5462ff2f9061ecec1e16f4016ba6d9", "sha256": "057cf8ec4146c3292cc5c1e39880feebaa86544557e6e3eaed8b5d708b94268a"}, "downloads": -1, "filename": "scandir_rs-0.9.0.tar.gz", "has_sig": false, "md5_digest": "df5462ff2f9061ecec1e16f4016ba6d9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15403, "upload_time": "2020-01-29T04:32:48", "upload_time_iso_8601": "2020-01-29T04:32:48.661726Z", "url": "https://files.pythonhosted.org/packages/03/ca/ff6c2d4e0e1484d590c1aa0df6c3ce324a22aabedc153a3abe71ef3e03af/scandir_rs-0.9.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:06 2020"}