{"info": {"author": "\u00c1lvaro Ferreira Pires de Paiva", "author_email": "alvarofepipa@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# validate-docbr\n<a href=\"https://pypi.org/project/validate-docbr/\">\n  <img src=\"https://img.shields.io/pypi/v/validate-docbr.svg\" alt=\"latest release\" />\n</a>\n\nPacote Python para valida\u00e7\u00e3o de documentos brasileiros.\n\nPara instalar o pacote:\n```bash\npip install validate-docbr\n```\n\nA documenta\u00e7\u00e3o pode ser acessada [clicando aqui](https://alvarofpp.github.io/validate-docbr).\n\n## Documentos\nDocumentos que est\u00e3o no pacote:\n\n- [CPF](https://github.com/alvarofpp/validate-docbr/wiki/CPF): Cadastro de Pessoas F\u00edsicas;\n- [CNH](#): Carteira Nacional de Habilita\u00e7\u00e3o;\n- [CNPJ](https://github.com/alvarofpp/validate-docbr/wiki/CNPJ): Cadastro Nacional da Pessoa Jur\u00eddica;\n- [CNS](https://github.com/alvarofpp/validate-docbr/wiki/CNS): Cart\u00e3o Nacional de Sa\u00fade;\n- [PIS](#): PIS/NIS/PASEP/NIT;\n- [T\u00edtulo eleitoral](#): Cadastro que permite cidad\u00e3os brasileiros votar.\n\nPara entender melhor os documentos e suas respectivas classes, basta acessar a [Wiki do projeto](https://github.com/alvarofpp/validate-docbr/wiki).\n\n## M\u00e9todos\nTodos os documentos possuem os mesmos m\u00e9todos.\n\n### validate\nValida o documento passado como argumento. Retorna um `bool`, `True` caso seja v\u00e1lido, `False` caso contr\u00e1rio . Recebe os par\u00e2metros:\n\n| Par\u00e2metro | Tipo | Valor padr\u00e3o | Obrigat\u00f3rio | Descri\u00e7\u00e3o |\n| --------- | ---- | ----------- | ------------ | --------- |\n| `doc` | `str`| `''` | X | O documento que se quer validar. |\n\n```python\nfrom validate_docbr import CPF\n\ncpf = CPF()\n\n# Validar CPF\ncpf.validate(\"012.345.678-90\")  # True\ncpf.validate(\"012.345.678-91\")  # False\n```\n\n[Caso especial de CPF](https://alvarofpp.github.io/validate-docbr/guia-de-uso/#caso-especial-de-cpf).\n\n### validate_list\n\nValida uma lista de documentos passado como argumento. Retorna uma lista de `bool`, `True` caso seja v\u00e1lido, `False` caso contr\u00e1rio. Recebe os par\u00e2metros:\n\n| Par\u00e2metro | Tipo | Valor padr\u00e3o | Obrigat\u00f3rio | Descri\u00e7\u00e3o |\n| --------- | ---- | ----------- | ------------ | --------- |\n| `docs` | `List[str]`| `[]` | X | A lista de documentos para validar. |\n\n```python\nfrom validate_docbr import CPF\n\ncpf = CPF()\n\n# Validar CPFs\ncpf.validate_list([\"012.345.678-90\", \"012.345.678-91\"])  # [True, False]\n```\n\n### generate\nGera um novo documento, retorna em formato de `str`. Recebe os par\u00e2metros:\n\n| Par\u00e2metro | Tipo | Valor padr\u00e3o | Obrigat\u00f3rio | Descri\u00e7\u00e3o |\n| --------- | ---- | ----------- | ------------ | --------- |\n| `mask` | `bool` | `False` | - | Quando possui o valor `True`, o documento retornado estar\u00e1 formatado. |\n\n```python\nfrom validate_docbr import CPF\n\ncpf = CPF()\n\n# Gerar novo CPF\nnew_cpf_one = cpf.generate()  # \"01234567890\"\nnew_cpf_two = cpf.generate(True)  # \"012.345.678-90\"\n```\n\n### generate_list\nGera uma lista de documentos, retorna em formato de `list` com elementos do tipo `str`. Recebe os par\u00e2metros:\n\n| Par\u00e2metro | Tipo | Valor padr\u00e3o | Obrigat\u00f3rio | Descri\u00e7\u00e3o |\n| --------- | ---- | ----------- | ------------ | --------- |\n| `n` | `int` | `1` | X | A quantidade desejada de documentos que ser\u00e3o gerados. |\n| `mask` | `bool` | `False` | - | Se os documentos gerados dever\u00e3o ter ou n\u00e3o m\u00e1scara. |\n| `repeat` | `bool` | `False` | - | Se aceita ou n\u00e3o documentos repetidos. |\n\n```python\nfrom validate_docbr import CPF\n\ncpf = CPF()\n\n# Gerar lista de CPFs\ncpfs_one = cpf.generate_list(2)  # [ \"85215667438\", \"28293145811\" ]\ncpfs_two = cpf.generate_list(2, True)  # [ \"852.156.674-38\", \"282.931.458-11\" ]\n```\n\n### mask\nMascara o documento passado como argumento. Retorna um `str` que \u00e9 o documento mascarado . Recebe os par\u00e2metros:\n\n| Par\u00e2metro | Tipo | Valor padr\u00e3o | Obrigat\u00f3rio | Descri\u00e7\u00e3o |\n| --------- | ---- | ----------- | ------------ | --------- |\n| `doc` | `str`| `''` | X | O documento que se quer mascarar. |\n\n```python\nfrom validate_docbr import CPF\n\ncpf = CPF()\n\ncpf_me = \"01234567890\"\n\n# Mascara o CPF\ncpf.mask(cpf_me)  # \"012.345.678-90\"\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alvarofpp/validate-docbr", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "validate-docbr", "package_url": "https://pypi.org/project/validate-docbr/", "platform": "", "project_url": "https://pypi.org/project/validate-docbr/", "project_urls": {"Homepage": "https://github.com/alvarofpp/validate-docbr"}, "release_url": "https://pypi.org/project/validate-docbr/1.7.0/", "requires_dist": null, "requires_python": "", "summary": "Validate brazilian documents.", "version": "1.7.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>validate-docbr</h1>\n<a href=\"https://pypi.org/project/validate-docbr/\" rel=\"nofollow\">\n  <img alt=\"latest release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e1988c89a477d245e83bf2ca1aaf7d368880146b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f76616c69646174652d646f6362722e737667\">\n</a>\n<p>Pacote Python para valida\u00e7\u00e3o de documentos brasileiros.</p>\n<p>Para instalar o pacote:</p>\n<pre>pip install validate-docbr\n</pre>\n<p>A documenta\u00e7\u00e3o pode ser acessada <a href=\"https://alvarofpp.github.io/validate-docbr\" rel=\"nofollow\">clicando aqui</a>.</p>\n<h2>Documentos</h2>\n<p>Documentos que est\u00e3o no pacote:</p>\n<ul>\n<li><a href=\"https://github.com/alvarofpp/validate-docbr/wiki/CPF\" rel=\"nofollow\">CPF</a>: Cadastro de Pessoas F\u00edsicas;</li>\n<li><a href=\"#\" rel=\"nofollow\">CNH</a>: Carteira Nacional de Habilita\u00e7\u00e3o;</li>\n<li><a href=\"https://github.com/alvarofpp/validate-docbr/wiki/CNPJ\" rel=\"nofollow\">CNPJ</a>: Cadastro Nacional da Pessoa Jur\u00eddica;</li>\n<li><a href=\"https://github.com/alvarofpp/validate-docbr/wiki/CNS\" rel=\"nofollow\">CNS</a>: Cart\u00e3o Nacional de Sa\u00fade;</li>\n<li><a href=\"#\" rel=\"nofollow\">PIS</a>: PIS/NIS/PASEP/NIT;</li>\n<li><a href=\"#\" rel=\"nofollow\">T\u00edtulo eleitoral</a>: Cadastro que permite cidad\u00e3os brasileiros votar.</li>\n</ul>\n<p>Para entender melhor os documentos e suas respectivas classes, basta acessar a <a href=\"https://github.com/alvarofpp/validate-docbr/wiki\" rel=\"nofollow\">Wiki do projeto</a>.</p>\n<h2>M\u00e9todos</h2>\n<p>Todos os documentos possuem os mesmos m\u00e9todos.</p>\n<h3>validate</h3>\n<p>Valida o documento passado como argumento. Retorna um <code>bool</code>, <code>True</code> caso seja v\u00e1lido, <code>False</code> caso contr\u00e1rio . Recebe os par\u00e2metros:</p>\n<table>\n<thead>\n<tr>\n<th>Par\u00e2metro</th>\n<th>Tipo</th>\n<th>Valor padr\u00e3o</th>\n<th>Obrigat\u00f3rio</th>\n<th>Descri\u00e7\u00e3o</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>doc</code></td>\n<td><code>str</code></td>\n<td><code>''</code></td>\n<td>X</td>\n<td>O documento que se quer validar.</td>\n</tr></tbody></table>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">validate_docbr</span> <span class=\"kn\">import</span> <span class=\"n\">CPF</span>\n\n<span class=\"n\">cpf</span> <span class=\"o\">=</span> <span class=\"n\">CPF</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Validar CPF</span>\n<span class=\"n\">cpf</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"s2\">\"012.345.678-90\"</span><span class=\"p\">)</span>  <span class=\"c1\"># True</span>\n<span class=\"n\">cpf</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"s2\">\"012.345.678-91\"</span><span class=\"p\">)</span>  <span class=\"c1\"># False</span>\n</pre>\n<p><a href=\"https://alvarofpp.github.io/validate-docbr/guia-de-uso/#caso-especial-de-cpf\" rel=\"nofollow\">Caso especial de CPF</a>.</p>\n<h3>validate_list</h3>\n<p>Valida uma lista de documentos passado como argumento. Retorna uma lista de <code>bool</code>, <code>True</code> caso seja v\u00e1lido, <code>False</code> caso contr\u00e1rio. Recebe os par\u00e2metros:</p>\n<table>\n<thead>\n<tr>\n<th>Par\u00e2metro</th>\n<th>Tipo</th>\n<th>Valor padr\u00e3o</th>\n<th>Obrigat\u00f3rio</th>\n<th>Descri\u00e7\u00e3o</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>docs</code></td>\n<td><code>List[str]</code></td>\n<td><code>[]</code></td>\n<td>X</td>\n<td>A lista de documentos para validar.</td>\n</tr></tbody></table>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">validate_docbr</span> <span class=\"kn\">import</span> <span class=\"n\">CPF</span>\n\n<span class=\"n\">cpf</span> <span class=\"o\">=</span> <span class=\"n\">CPF</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Validar CPFs</span>\n<span class=\"n\">cpf</span><span class=\"o\">.</span><span class=\"n\">validate_list</span><span class=\"p\">([</span><span class=\"s2\">\"012.345.678-90\"</span><span class=\"p\">,</span> <span class=\"s2\">\"012.345.678-91\"</span><span class=\"p\">])</span>  <span class=\"c1\"># [True, False]</span>\n</pre>\n<h3>generate</h3>\n<p>Gera um novo documento, retorna em formato de <code>str</code>. Recebe os par\u00e2metros:</p>\n<table>\n<thead>\n<tr>\n<th>Par\u00e2metro</th>\n<th>Tipo</th>\n<th>Valor padr\u00e3o</th>\n<th>Obrigat\u00f3rio</th>\n<th>Descri\u00e7\u00e3o</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>mask</code></td>\n<td><code>bool</code></td>\n<td><code>False</code></td>\n<td>-</td>\n<td>Quando possui o valor <code>True</code>, o documento retornado estar\u00e1 formatado.</td>\n</tr></tbody></table>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">validate_docbr</span> <span class=\"kn\">import</span> <span class=\"n\">CPF</span>\n\n<span class=\"n\">cpf</span> <span class=\"o\">=</span> <span class=\"n\">CPF</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Gerar novo CPF</span>\n<span class=\"n\">new_cpf_one</span> <span class=\"o\">=</span> <span class=\"n\">cpf</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">()</span>  <span class=\"c1\"># \"01234567890\"</span>\n<span class=\"n\">new_cpf_two</span> <span class=\"o\">=</span> <span class=\"n\">cpf</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>  <span class=\"c1\"># \"012.345.678-90\"</span>\n</pre>\n<h3>generate_list</h3>\n<p>Gera uma lista de documentos, retorna em formato de <code>list</code> com elementos do tipo <code>str</code>. Recebe os par\u00e2metros:</p>\n<table>\n<thead>\n<tr>\n<th>Par\u00e2metro</th>\n<th>Tipo</th>\n<th>Valor padr\u00e3o</th>\n<th>Obrigat\u00f3rio</th>\n<th>Descri\u00e7\u00e3o</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>n</code></td>\n<td><code>int</code></td>\n<td><code>1</code></td>\n<td>X</td>\n<td>A quantidade desejada de documentos que ser\u00e3o gerados.</td>\n</tr>\n<tr>\n<td><code>mask</code></td>\n<td><code>bool</code></td>\n<td><code>False</code></td>\n<td>-</td>\n<td>Se os documentos gerados dever\u00e3o ter ou n\u00e3o m\u00e1scara.</td>\n</tr>\n<tr>\n<td><code>repeat</code></td>\n<td><code>bool</code></td>\n<td><code>False</code></td>\n<td>-</td>\n<td>Se aceita ou n\u00e3o documentos repetidos.</td>\n</tr></tbody></table>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">validate_docbr</span> <span class=\"kn\">import</span> <span class=\"n\">CPF</span>\n\n<span class=\"n\">cpf</span> <span class=\"o\">=</span> <span class=\"n\">CPF</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Gerar lista de CPFs</span>\n<span class=\"n\">cpfs_one</span> <span class=\"o\">=</span> <span class=\"n\">cpf</span><span class=\"o\">.</span><span class=\"n\">generate_list</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\"># [ \"85215667438\", \"28293145811\" ]</span>\n<span class=\"n\">cpfs_two</span> <span class=\"o\">=</span> <span class=\"n\">cpf</span><span class=\"o\">.</span><span class=\"n\">generate_list</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>  <span class=\"c1\"># [ \"852.156.674-38\", \"282.931.458-11\" ]</span>\n</pre>\n<h3>mask</h3>\n<p>Mascara o documento passado como argumento. Retorna um <code>str</code> que \u00e9 o documento mascarado . Recebe os par\u00e2metros:</p>\n<table>\n<thead>\n<tr>\n<th>Par\u00e2metro</th>\n<th>Tipo</th>\n<th>Valor padr\u00e3o</th>\n<th>Obrigat\u00f3rio</th>\n<th>Descri\u00e7\u00e3o</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>doc</code></td>\n<td><code>str</code></td>\n<td><code>''</code></td>\n<td>X</td>\n<td>O documento que se quer mascarar.</td>\n</tr></tbody></table>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">validate_docbr</span> <span class=\"kn\">import</span> <span class=\"n\">CPF</span>\n\n<span class=\"n\">cpf</span> <span class=\"o\">=</span> <span class=\"n\">CPF</span><span class=\"p\">()</span>\n\n<span class=\"n\">cpf_me</span> <span class=\"o\">=</span> <span class=\"s2\">\"01234567890\"</span>\n\n<span class=\"c1\"># Mascara o CPF</span>\n<span class=\"n\">cpf</span><span class=\"o\">.</span><span class=\"n\">mask</span><span class=\"p\">(</span><span class=\"n\">cpf_me</span><span class=\"p\">)</span>  <span class=\"c1\"># \"012.345.678-90\"</span>\n</pre>\n\n          </div>"}, "last_serial": 7161420, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "3553fb04b8e2c676331430666e1c908e", "sha256": "f71a45836bfbe8da06f47f5cc66c5ac96454016be20ff60177c68b598273267c"}, "downloads": -1, "filename": "validate_docbr-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3553fb04b8e2c676331430666e1c908e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6752, "upload_time": "2019-03-21T18:53:29", "upload_time_iso_8601": "2019-03-21T18:53:29.900998Z", "url": "https://files.pythonhosted.org/packages/11/a7/bdbe55f1920806f08cd9fbaf99c7147323fe98ab9c572ea4c6440871b49e/validate_docbr-1.1.0-py3-none-any.whl", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "83295e6c89e993bb52c99b67a05906ee", "sha256": "e14a0bc2268e4ba5aa583a43e252601dc50bd3993b37860b8a825e89151d39bd"}, "downloads": -1, "filename": "validate_docbr-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "83295e6c89e993bb52c99b67a05906ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7410, "upload_time": "2019-03-27T18:38:08", "upload_time_iso_8601": "2019-03-27T18:38:08.984137Z", "url": "https://files.pythonhosted.org/packages/41/9d/db1ba47a0f482c5ccad43774af9449d48e6163f8ab1d253f7e4993e488d9/validate_docbr-1.2.0-py3-none-any.whl", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "4cb05b59cc165315da36297c04039e4f", "sha256": "88c475cc857d431efc9811e1078ff7ccbd101eb4ab02553321966bf59ce13991"}, "downloads": -1, "filename": "validate_docbr-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4cb05b59cc165315da36297c04039e4f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6428, "upload_time": "2019-08-20T14:25:28", "upload_time_iso_8601": "2019-08-20T14:25:28.203561Z", "url": "https://files.pythonhosted.org/packages/7d/04/d39d797f7c47c123c72edd451919f7d3e63a5cb34eef447a6979e68d2211/validate_docbr-1.2.1-py3-none-any.whl", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "18fb81e004c33e6b1247936f5392e2e3", "sha256": "c2213a7b057c963f6990e7c11d057cff154f5def3d5654801720d65c04efacda"}, "downloads": -1, "filename": "validate_docbr-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "18fb81e004c33e6b1247936f5392e2e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8568, "upload_time": "2019-09-08T18:19:42", "upload_time_iso_8601": "2019-09-08T18:19:42.229282Z", "url": "https://files.pythonhosted.org/packages/b9/2f/e872e94e6b73caaf5ca9003dcc2c56b1f5dbbeabc8285801c08f0efc5e8b/validate_docbr-1.3.0-py3-none-any.whl", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "8bd7d10b54c0feba3048549f115bbaa7", "sha256": "69c9a9b990e94bd9807385ee70c6a8a54715aa8d7363e859695cb0571a80896d"}, "downloads": -1, "filename": "validate_docbr-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8bd7d10b54c0feba3048549f115bbaa7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9644, "upload_time": "2019-10-02T20:52:54", "upload_time_iso_8601": "2019-10-02T20:52:54.865578Z", "url": "https://files.pythonhosted.org/packages/e7/56/8292f86407b49730458e981ba047a0abbb65ea416010e366f6aa957f7245/validate_docbr-1.4.0-py3-none-any.whl", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "a87be5fb0b5c5a979d31b3199afe21ef", "sha256": "26fc1518188ac1c1e3f33e18d8232399b0be6a885120263f2e015828ff57cf08"}, "downloads": -1, "filename": "validate_docbr-1.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a87be5fb0b5c5a979d31b3199afe21ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11659, "upload_time": "2019-10-22T20:10:50", "upload_time_iso_8601": "2019-10-22T20:10:50.813622Z", "url": "https://files.pythonhosted.org/packages/a3/1f/92f349aba0210bddb9f961a98623385562833d252e927e17ff5a5f982bdd/validate_docbr-1.5.0-py3-none-any.whl", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "8694118e67f4593dc3cdfde0a2bfbb10", "sha256": "d6a39526d4abc3bb2a7ffe2a2428df53565b106abe9a6a88d0edf2e5c4310a55"}, "downloads": -1, "filename": "validate_docbr-1.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8694118e67f4593dc3cdfde0a2bfbb10", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12388, "upload_time": "2019-10-30T13:05:26", "upload_time_iso_8601": "2019-10-30T13:05:26.969970Z", "url": "https://files.pythonhosted.org/packages/ca/4f/2bb8869e4ab087d2ed8c1b3890aeb67a0f370bd5bbf5f8930265f770e10c/validate_docbr-1.6.0-py3-none-any.whl", "yanked": false}], "1.6.1": [{"comment_text": "", "digests": {"md5": "e778d73bbf036b63f375fc9e27dfe2f9", "sha256": "3b6714dc0837aa187574c22bc65c00cd786d4b830c0abd765b2aee7164b70a4e"}, "downloads": -1, "filename": "validate_docbr-1.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e778d73bbf036b63f375fc9e27dfe2f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12396, "upload_time": "2019-12-12T17:40:02", "upload_time_iso_8601": "2019-12-12T17:40:02.585653Z", "url": "https://files.pythonhosted.org/packages/12/36/f90ef67e08543f16ca12ece1e77346aa3c6b361047932fbbe616f3f3f6ac/validate_docbr-1.6.1-py3-none-any.whl", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "0a1a0d7c5d2177740c6581a3ab9aecd6", "sha256": "591edd93516a54801c9cef3c31cdbfee5a507eb14060449ee25cfacff0cfe882"}, "downloads": -1, "filename": "validate_docbr-1.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0a1a0d7c5d2177740c6581a3ab9aecd6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13857, "upload_time": "2020-05-04T05:02:04", "upload_time_iso_8601": "2020-05-04T05:02:04.080379Z", "url": "https://files.pythonhosted.org/packages/54/b1/848bcc9c02a3e92b0302a75e6a2db7311c2e1efc544490d3a2f7ee25f9df/validate_docbr-1.7.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a1a0d7c5d2177740c6581a3ab9aecd6", "sha256": "591edd93516a54801c9cef3c31cdbfee5a507eb14060449ee25cfacff0cfe882"}, "downloads": -1, "filename": "validate_docbr-1.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0a1a0d7c5d2177740c6581a3ab9aecd6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13857, "upload_time": "2020-05-04T05:02:04", "upload_time_iso_8601": "2020-05-04T05:02:04.080379Z", "url": "https://files.pythonhosted.org/packages/54/b1/848bcc9c02a3e92b0302a75e6a2db7311c2e1efc544490d3a2f7ee25f9df/validate_docbr-1.7.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:38:09 2020"}