{"info": {"author": "Simon Fransson", "author_email": "simon@dessibelle.se", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Topic :: Software Development"], "description": "Python Payer API\n================\n\n|Build Status| |Coverage Status| |Latest Version|\n\nPython package for interacting with the `Payer <http://payer.se>`__\npayments API.\n\nThe scope of this module is basically to serialize the data into XML\nready for transmitting to Payer. Given order details, billing details\nand callback URLs it will build an XML tree, encode it according to the\nPayer specifications and return the encoded data along with the required\nkey-value pairs in a dict. Payer expects this data in a POST request\nusing an ``application/x-www-form-urlencoded`` content type.\n\nGenerating HTML, providing any type of request handlers or views needed\nfor a successful payment procedure however, is outside the scope of this\nmodule. Such implementations are encouraged to be realized as\nindependent modules, in relation to the frameworks, webshop modules etc.\nthat you may be using. One such example is\n`django-shop-payer-backend <https://github.com/dessibelle/django-shop-payer-backend>`__\nfor which python-payer-api was initially developed.\n\nInstallation\n------------\n\n::\n\n    pip install python-payer-api\n\nBasic usage\n-----------\n\n.. code:: python\n\n    from payer_api import PAYMENT_METHOD_CARD, PAYMENT_METHOD_BANK, PAYMENT_METHOD_PHONE, PAYMENT_METHOD_INVOICE\n    from payer_api.postapi import PayerPostAPI\n    from payer_api.order import (\n        PayerProcessingControl,\n        PayerBuyerDetails,\n        PayerOrderItem,\n        PayerOrder,\n    )\n\n    api = PayerPostAPI(\n        agent_id=\"AGENT_ID\",\n        key_1=\"6866ef97a972ba3a2c6ff8bb2812981054770162\",\n        key_2=\"1388ac756f07b0dda2961436ba8596c7b7995e94\",\n        payment_methods=[PAYMENT_METHOD_CARD, PAYMENT_METHOD_BANK, PAYMENT_METHOD_PHONE, PAYMENT_METHOD_INVOICE]\n    )\n\n\n    processing_control = PayerProcessingControl(\n        success_redirect_url=\"http://localhost/webshop/thankyou/\",\n        authorize_notification_url=\"http://localhost/webshop/auth/\",\n        settle_notification_url=\"http://localhost/webshop/settle/\",\n        redirect_back_to_shop_url=\"http://localhost/webshop/\",\n    )\n\n    order = PayerOrder(\n        order_id=\"123456\",\n        buyer_details=PayerBuyerDetails(\n            first_name=\"John\",\n            last_name=\"Doe\",\n            address_line_1=\"1234 Main Street\",\n            postal_code=\"12345\",\n            city=\"Anywhere\",\n            phone_mobile=\"012345678\",\n            email=\"john.doe@host.com\",\n        ),\n        order_items=[\n            PayerOrderItem(\n                description='A product',\n                price_including_vat=123.50,\n                vat_percentage=25,\n                quantity=4,\n            ),\n            PayerOrderItem(\n                description='Another product',\n                price_including_vat=123.0,\n                vat_percentage=12.5,\n                quantity=2,\n            ),\n        ],\n        info_lines=[\n            \"Shipping with 5 work days\",\n            \"Additional line of order info\",\n        ]\n    )\n\n    api.set_order(order)\n    api.set_processing_control(processing_control)\n\n    print api.get_post_data()\n\nPayment Process\n---------------\n\nThe main flow of the payment process is as follows:\n\n1. Initialize a ``PayerPostAPI`` object using the Agent ID, Key 1 and\n   Key 2 values supplied by Payer. Optinally set ``test_mode`` and\n   ``debug_mode`` and add a list of ``payment_methods``.\n2. Create a ``PayerProcessingControl`` object and add it to your API\n   object using the ``set_processing_control()`` method. This object\n   holds four URL's that your site has to provide. They are:\n   \u00a0\n   ``success_redirect_url``: A \"thank you\" URL, displayed after\n   completed purchase\n   ``authorize_notification_url``: A callback URL, described below,\n   called when orders are authorized.\n   ``settle_notification_url``: A callback URL, described below, called\n   when orders are payed.\n   ``redirect_back_to_shop_url``: A \"cancel\" or \"back to shop\" URL.\n   \u00a0\n3. Create a ``PayerOrder`` object (including ``PayerBuyerDetails`` and\n   ``PayerOrderItem`` objects) and add it to your API object using the\n   ``set_order()`` method.\n4. You can now call ``api.get_post_data()`` for a dict of the query\n   parameters Payer expects. Add them as ``<input type=\"hidden\">``\n   elements in a ``<form>`` element with method ``POST`` and action\n   ``api.get_post_url()`` and have the user submit the form (i.e. needs\n   to happen in front-end).\n5. Payer will parse your order, and once the payment has been completed\n   Payer will perform a GET request to your callback URL's - the\n   ``authorize_notification_url`` URL, and depending on payment method\n   (direct / invoice) call the ``settle_notification_url`` URL. You will\n   want to implement a view or URL handler that listens on these URL's,\n   for which you call the ``validate_callback_ip()`` and\n   ``validate_callback_url()`` methods on PayerPostAPI. A couple of\n   query parameters will be appended to the callback URL's, from which\n   you can extract the Order ID, selected payment method, payment ID\n   etc. The complete list of query paramters are:\n   \u00a0\n   ``order_id``, ``payer_callback_type``, ``payer_testmode``,\n   ``payer_payment_type``, ``payer_added_fee``,\n   ``payer_merchant_reference_id``, ``payer_payment_id``,\n   ``payread_payment_id``.\n   \u00a0\n   Depending on the validity of the requests, your view should return\n   either ``TRUE`` or ``FALSE`` using a ``text/plain`` content type.\n6. Once Payer has performed its auth and settle validation it will\n   redirect the user the the ``success_redirect_url`` URL.\n\n.. |Build Status| image:: https://travis-ci.org/dessibelle/python-payer-api.svg?branch=master\n   :target: https://travis-ci.org/dessibelle/python-payer-api\n.. |Coverage Status| image:: https://coveralls.io/repos/dessibelle/python-payer-api/badge.svg?branch=master\n   :target: https://coveralls.io/r/dessibelle/python-payer-api?branch=master\n.. |Latest Version| image:: https://pypip.in/version/python-payer-api/badge.svg?style=flat\n   :target: https://pypi.python.org/pypi/python-payer-api/", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/dessibelle/python-payer-api/archive/0.1.2.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dessibelle/python-payer-api", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "python-payer-api", "package_url": "https://pypi.org/project/python-payer-api/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/python-payer-api/", "project_urls": {"Download": "https://github.com/dessibelle/python-payer-api/archive/0.1.2.tar.gz", "Homepage": "https://github.com/dessibelle/python-payer-api"}, "release_url": "https://pypi.org/project/python-payer-api/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "Python package for interacting with the Payer payments API        (http://www.payer.se).", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/dessibelle/python-payer-api\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4bc2b1cb67fcd85a67b48150151d3738d6112719/68747470733a2f2f7472617669732d63692e6f72672f646573736962656c6c652f707974686f6e2d70617965722d6170692e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/r/dessibelle/python-payer-api?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b7e608ce76c87236bbd7745bba0fd23b1130481c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f646573736962656c6c652f707974686f6e2d70617965722d6170692f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/python-payer-api/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ef4119612a272d0e13dd4f0feb089f9056d19703/68747470733a2f2f70797069702e696e2f76657273696f6e2f707974686f6e2d70617965722d6170692f62616467652e7376673f7374796c653d666c6174\"></a></p>\n<p>Python package for interacting with the <a href=\"http://payer.se\" rel=\"nofollow\">Payer</a>\npayments API.</p>\n<p>The scope of this module is basically to serialize the data into XML\nready for transmitting to Payer. Given order details, billing details\nand callback URLs it will build an XML tree, encode it according to the\nPayer specifications and return the encoded data along with the required\nkey-value pairs in a dict. Payer expects this data in a POST request\nusing an <tt><span class=\"pre\">application/x-www-form-urlencoded</span></tt> content type.</p>\n<p>Generating HTML, providing any type of request handlers or views needed\nfor a successful payment procedure however, is outside the scope of this\nmodule. Such implementations are encouraged to be realized as\nindependent modules, in relation to the frameworks, webshop modules etc.\nthat you may be using. One such example is\n<a href=\"https://github.com/dessibelle/django-shop-payer-backend\" rel=\"nofollow\">django-shop-payer-backend</a>\nfor which python-payer-api was initially developed.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install python-payer-api\n</pre>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">payer_api</span> <span class=\"kn\">import</span> <span class=\"n\">PAYMENT_METHOD_CARD</span><span class=\"p\">,</span> <span class=\"n\">PAYMENT_METHOD_BANK</span><span class=\"p\">,</span> <span class=\"n\">PAYMENT_METHOD_PHONE</span><span class=\"p\">,</span> <span class=\"n\">PAYMENT_METHOD_INVOICE</span>\n<span class=\"kn\">from</span> <span class=\"nn\">payer_api.postapi</span> <span class=\"kn\">import</span> <span class=\"n\">PayerPostAPI</span>\n<span class=\"kn\">from</span> <span class=\"nn\">payer_api.order</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">PayerProcessingControl</span><span class=\"p\">,</span>\n    <span class=\"n\">PayerBuyerDetails</span><span class=\"p\">,</span>\n    <span class=\"n\">PayerOrderItem</span><span class=\"p\">,</span>\n    <span class=\"n\">PayerOrder</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">PayerPostAPI</span><span class=\"p\">(</span>\n    <span class=\"n\">agent_id</span><span class=\"o\">=</span><span class=\"s2\">\"AGENT_ID\"</span><span class=\"p\">,</span>\n    <span class=\"n\">key_1</span><span class=\"o\">=</span><span class=\"s2\">\"6866ef97a972ba3a2c6ff8bb2812981054770162\"</span><span class=\"p\">,</span>\n    <span class=\"n\">key_2</span><span class=\"o\">=</span><span class=\"s2\">\"1388ac756f07b0dda2961436ba8596c7b7995e94\"</span><span class=\"p\">,</span>\n    <span class=\"n\">payment_methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">PAYMENT_METHOD_CARD</span><span class=\"p\">,</span> <span class=\"n\">PAYMENT_METHOD_BANK</span><span class=\"p\">,</span> <span class=\"n\">PAYMENT_METHOD_PHONE</span><span class=\"p\">,</span> <span class=\"n\">PAYMENT_METHOD_INVOICE</span><span class=\"p\">]</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"n\">processing_control</span> <span class=\"o\">=</span> <span class=\"n\">PayerProcessingControl</span><span class=\"p\">(</span>\n    <span class=\"n\">success_redirect_url</span><span class=\"o\">=</span><span class=\"s2\">\"http://localhost/webshop/thankyou/\"</span><span class=\"p\">,</span>\n    <span class=\"n\">authorize_notification_url</span><span class=\"o\">=</span><span class=\"s2\">\"http://localhost/webshop/auth/\"</span><span class=\"p\">,</span>\n    <span class=\"n\">settle_notification_url</span><span class=\"o\">=</span><span class=\"s2\">\"http://localhost/webshop/settle/\"</span><span class=\"p\">,</span>\n    <span class=\"n\">redirect_back_to_shop_url</span><span class=\"o\">=</span><span class=\"s2\">\"http://localhost/webshop/\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">order</span> <span class=\"o\">=</span> <span class=\"n\">PayerOrder</span><span class=\"p\">(</span>\n    <span class=\"n\">order_id</span><span class=\"o\">=</span><span class=\"s2\">\"123456\"</span><span class=\"p\">,</span>\n    <span class=\"n\">buyer_details</span><span class=\"o\">=</span><span class=\"n\">PayerBuyerDetails</span><span class=\"p\">(</span>\n        <span class=\"n\">first_name</span><span class=\"o\">=</span><span class=\"s2\">\"John\"</span><span class=\"p\">,</span>\n        <span class=\"n\">last_name</span><span class=\"o\">=</span><span class=\"s2\">\"Doe\"</span><span class=\"p\">,</span>\n        <span class=\"n\">address_line_1</span><span class=\"o\">=</span><span class=\"s2\">\"1234 Main Street\"</span><span class=\"p\">,</span>\n        <span class=\"n\">postal_code</span><span class=\"o\">=</span><span class=\"s2\">\"12345\"</span><span class=\"p\">,</span>\n        <span class=\"n\">city</span><span class=\"o\">=</span><span class=\"s2\">\"Anywhere\"</span><span class=\"p\">,</span>\n        <span class=\"n\">phone_mobile</span><span class=\"o\">=</span><span class=\"s2\">\"012345678\"</span><span class=\"p\">,</span>\n        <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s2\">\"john.doe@host.com\"</span><span class=\"p\">,</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">order_items</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">PayerOrderItem</span><span class=\"p\">(</span>\n            <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">'A product'</span><span class=\"p\">,</span>\n            <span class=\"n\">price_including_vat</span><span class=\"o\">=</span><span class=\"mf\">123.50</span><span class=\"p\">,</span>\n            <span class=\"n\">vat_percentage</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">,</span>\n            <span class=\"n\">quantity</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">PayerOrderItem</span><span class=\"p\">(</span>\n            <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">'Another product'</span><span class=\"p\">,</span>\n            <span class=\"n\">price_including_vat</span><span class=\"o\">=</span><span class=\"mf\">123.0</span><span class=\"p\">,</span>\n            <span class=\"n\">vat_percentage</span><span class=\"o\">=</span><span class=\"mf\">12.5</span><span class=\"p\">,</span>\n            <span class=\"n\">quantity</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n        <span class=\"p\">),</span>\n    <span class=\"p\">],</span>\n    <span class=\"n\">info_lines</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"s2\">\"Shipping with 5 work days\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"Additional line of order info\"</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">set_order</span><span class=\"p\">(</span><span class=\"n\">order</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">set_processing_control</span><span class=\"p\">(</span><span class=\"n\">processing_control</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get_post_data</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"payment-process\">\n<h2>Payment Process</h2>\n<p>The main flow of the payment process is as follows:</p>\n<ol>\n<li><p>Initialize a <tt>PayerPostAPI</tt> object using the Agent ID, Key 1 and\nKey 2 values supplied by Payer. Optinally set <tt>test_mode</tt> and\n<tt>debug_mode</tt> and add a list of <tt>payment_methods</tt>.</p>\n</li>\n<li><p>Create a <tt>PayerProcessingControl</tt> object and add it to your API\nobject using the <tt>set_processing_control()</tt> method. This object\nholds four URL\u2019s that your site has to provide. They are:</p>\n<p><tt>success_redirect_url</tt>: A \u201cthank you\u201d URL, displayed after\ncompleted purchase\n<tt>authorize_notification_url</tt>: A callback URL, described below,\ncalled when orders are authorized.\n<tt>settle_notification_url</tt>: A callback URL, described below, called\nwhen orders are payed.\n<tt>redirect_back_to_shop_url</tt>: A \u201ccancel\u201d or \u201cback to shop\u201d URL.</p>\n</li>\n<li><p>Create a <tt>PayerOrder</tt> object (including <tt>PayerBuyerDetails</tt> and\n<tt>PayerOrderItem</tt> objects) and add it to your API object using the\n<tt>set_order()</tt> method.</p>\n</li>\n<li><p>You can now call <tt>api.get_post_data()</tt> for a dict of the query\nparameters Payer expects. Add them as <tt>&lt;input <span class=\"pre\">type=\"hidden\"&gt;</span></tt>\nelements in a <tt>&lt;form&gt;</tt> element with method <tt>POST</tt> and action\n<tt>api.get_post_url()</tt> and have the user submit the form (i.e. needs\nto happen in front-end).</p>\n</li>\n<li><p>Payer will parse your order, and once the payment has been completed\nPayer will perform a GET request to your callback URL\u2019s - the\n<tt>authorize_notification_url</tt> URL, and depending on payment method\n(direct / invoice) call the <tt>settle_notification_url</tt> URL. You will\nwant to implement a view or URL handler that listens on these URL\u2019s,\nfor which you call the <tt>validate_callback_ip()</tt> and\n<tt>validate_callback_url()</tt> methods on PayerPostAPI. A couple of\nquery parameters will be appended to the callback URL\u2019s, from which\nyou can extract the Order ID, selected payment method, payment ID\netc. The complete list of query paramters are:</p>\n<p><tt>order_id</tt>, <tt>payer_callback_type</tt>, <tt>payer_testmode</tt>,\n<tt>payer_payment_type</tt>, <tt>payer_added_fee</tt>,\n<tt>payer_merchant_reference_id</tt>, <tt>payer_payment_id</tt>,\n<tt>payread_payment_id</tt>.</p>\n<p>Depending on the validity of the requests, your view should return\neither <tt>TRUE</tt> or <tt>FALSE</tt> using a <tt>text/plain</tt> content type.</p>\n</li>\n<li><p>Once Payer has performed its auth and settle validation it will\nredirect the user the the <tt>success_redirect_url</tt> URL.</p>\n</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 1418400, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5978afdd316341217932265278dbf88a", "sha256": "8f2a717002d742192a9c6b3e77d09d16f2ef91696520d18c630c2a8df20555a9"}, "downloads": -1, "filename": "python-payer-api-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5978afdd316341217932265278dbf88a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5095, "upload_time": "2015-01-29T23:26:52", "upload_time_iso_8601": "2015-01-29T23:26:52.789565Z", "url": "https://files.pythonhosted.org/packages/6f/9a/1c37801a02941ce62c0cdb8e2a9620198801c590b824daf654b1538c4bca/python-payer-api-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "60a8b1ce6c9bac6410cc58180cd35fb3", "sha256": "70316059236b5baca56232a67e7bee66c2c9f52ed979cbe4f0cc58ac6f08328e"}, "downloads": -1, "filename": "python-payer-api-0.1.1.tar.gz", "has_sig": false, "md5_digest": "60a8b1ce6c9bac6410cc58180cd35fb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8714, "upload_time": "2015-02-01T12:41:06", "upload_time_iso_8601": "2015-02-01T12:41:06.788553Z", "url": "https://files.pythonhosted.org/packages/30/1c/bbbeb139df792f448a78c377f6465be436a03bb2f2b5640444c9f70f4bca/python-payer-api-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "e29fa8967aa33b71f81730016ffc8f93", "sha256": "70147b8a3a58a9e63150f15b25926b6f25508f607a8f936844323276fc0b83fb"}, "downloads": -1, "filename": "python-payer-api-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e29fa8967aa33b71f81730016ffc8f93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10205, "upload_time": "2015-02-10T21:24:56", "upload_time_iso_8601": "2015-02-10T21:24:56.864067Z", "url": "https://files.pythonhosted.org/packages/d1/ff/9e887ab95ebadf703f80e8007007b4748c50a6dfe81ea427d05f04326053/python-payer-api-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e29fa8967aa33b71f81730016ffc8f93", "sha256": "70147b8a3a58a9e63150f15b25926b6f25508f607a8f936844323276fc0b83fb"}, "downloads": -1, "filename": "python-payer-api-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e29fa8967aa33b71f81730016ffc8f93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10205, "upload_time": "2015-02-10T21:24:56", "upload_time_iso_8601": "2015-02-10T21:24:56.864067Z", "url": "https://files.pythonhosted.org/packages/d1/ff/9e887ab95ebadf703f80e8007007b4748c50a6dfe81ea427d05f04326053/python-payer-api-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:02 2020"}