{"info": {"author": "jean-philippe serafin", "author_email": "serafinjp@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python"], "description": "django-resumable\n----------------\n\n.. image:: https://travis-ci.org/jeanphix/django-resumable.svg\n   :target: https://travis-ci.org/jeanphix/django-resumable\n   :alt: Build Status\n\n``django-resumable`` provides django backend stuff that handles `resumable.js <https://github.com/23/Resumable.js>`_ xhr uploads.\n\n\n\nInstallation\n------------\n\n* ``pip install django-resumable``\n* Add ``resumable`` to your ``INSTALLED_APPS``\n\n\nViews\n-----\n\nIn order to upload files asynchronous, you must define an endpoint that will deal\nwith uploaded file chunks:\n\n.. code-block:: python\n\n    from django.contrib.auth.decorators import login_required\n\n    from resumable.views import ResumableUploadView\n\n\n    urlpatterns += patterns('',\n        url('^upload/$', login_required(ResumableUploadView.as_view()),\n            name='upload'),\n    )\n\nYou should also consider having per user chunk upload directory:\n\n.. code-block:: python\n\n    class MyResumableUploadView(ResumableUploadView):\n        @property\n        def chunks_dir(self):\n            return self.request.user.profile.chunks_dir\n\n\nFields\n------\n\nIf you want to handle resumable upload within your forms, you can use the ``ResumableFileField``\nthat works like django core ``FileField``:\n\n.. code-block:: python\n\n    from django.conf import settings\n    from django.core.urlresolvers import reverse\n\n    from resumable.fields import ResumableFileField\n\n\n    class ResumableForm(Form):\n        file = ResumableFileField(\n            allowed_mimes=(\"audio/ogg\",),\n            upload_url=lambda: reverse('upload'),\n            chunks_dir=getattr(settings, 'FILE_UPLOAD_TEMP_DIR')\n        )\n\n\nJavascript\n----------\n\n``django-resumable`` comes with extendable frontend scripts that work out of the box:\n\n.. code-block:: html\n\n    {% load staticfiles %}\n    <!DOCTYPE html>\n    <html>\n        <body>\n            <form method=\"post\" action=\".\">\n                <fieldset>\n                    {% csrf_token %}\n                    {{ form.as_p }}\n                </fieldset>\n                <p><input type=\"submit\" value=\"send\" /></p>\n            </form>\n            <script type=\"text/javascript\" src=\"https://raw.github.com/23/resumable.js/master/resumable.js\"></script>\n            <script type=\"text/javascript\" src=\"{% static 'resumable/js/django-resumable.js' %}\"></script>\n            <script type=\"text/javascript\" src=\"{% static 'resumable/js/init.js' %}\"></script>\n        </body>\n    </html>\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jeanphix/django-resumable", "keywords": "", "license": "MIT licence", "maintainer": "", "maintainer_email": "", "name": "django-resumable", "package_url": "https://pypi.org/project/django-resumable/", "platform": "", "project_url": "https://pypi.org/project/django-resumable/", "project_urls": {"Homepage": "https://github.com/jeanphix/django-resumable"}, "release_url": "https://pypi.org/project/django-resumable/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Django resumable uploads", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-resumable\">\n<h2>django-resumable</h2>\n<a href=\"https://travis-ci.org/jeanphix/django-resumable\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0d747eececdb216bdeae21cc0e2c3849ecd08993/68747470733a2f2f7472617669732d63692e6f72672f6a65616e706869782f646a616e676f2d726573756d61626c652e737667\"></a>\n<p><tt><span class=\"pre\">django-resumable</span></tt> provides django backend stuff that handles <a href=\"https://github.com/23/Resumable.js\" rel=\"nofollow\">resumable.js</a> xhr uploads.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ul>\n<li><tt>pip install <span class=\"pre\">django-resumable</span></tt></li>\n<li>Add <tt>resumable</tt> to your <tt>INSTALLED_APPS</tt></li>\n</ul>\n</div>\n<div id=\"views\">\n<h2>Views</h2>\n<p>In order to upload files asynchronous, you must define an endpoint that will deal\nwith uploaded file chunks:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">login_required</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">resumable.views</span> <span class=\"kn\">import</span> <span class=\"n\">ResumableUploadView</span>\n\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">+=</span> <span class=\"n\">patterns</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"s1\">'^upload/$'</span><span class=\"p\">,</span> <span class=\"n\">login_required</span><span class=\"p\">(</span><span class=\"n\">ResumableUploadView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">()),</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'upload'</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n</pre>\n<p>You should also consider having per user chunk upload directory:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MyResumableUploadView</span><span class=\"p\">(</span><span class=\"n\">ResumableUploadView</span><span class=\"p\">):</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">chunks_dir</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">profile</span><span class=\"o\">.</span><span class=\"n\">chunks_dir</span>\n</pre>\n</div>\n<div id=\"fields\">\n<h2>Fields</h2>\n<p>If you want to handle resumable upload within your forms, you can use the <tt>ResumableFileField</tt>\nthat works like django core <tt>FileField</tt>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.core.urlresolvers</span> <span class=\"kn\">import</span> <span class=\"n\">reverse</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">resumable.fields</span> <span class=\"kn\">import</span> <span class=\"n\">ResumableFileField</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ResumableForm</span><span class=\"p\">(</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n    <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">ResumableFileField</span><span class=\"p\">(</span>\n        <span class=\"n\">allowed_mimes</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s2\">\"audio/ogg\"</span><span class=\"p\">,),</span>\n        <span class=\"n\">upload_url</span><span class=\"o\">=</span><span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s1\">'upload'</span><span class=\"p\">),</span>\n        <span class=\"n\">chunks_dir</span><span class=\"o\">=</span><span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">,</span> <span class=\"s1\">'FILE_UPLOAD_TEMP_DIR'</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"javascript\">\n<h2>Javascript</h2>\n<p><tt><span class=\"pre\">django-resumable</span></tt> comes with extendable frontend scripts that work out of the box:</p>\n<pre>{% load staticfiles %}\n<span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">form</span> <span class=\"na\">method</span><span class=\"o\">=</span><span class=\"s\">\"post\"</span> <span class=\"na\">action</span><span class=\"o\">=</span><span class=\"s\">\".\"</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">fieldset</span><span class=\"p\">&gt;</span>\n                {% csrf_token %}\n                {{ form.as_p }}\n            <span class=\"p\">&lt;/</span><span class=\"nt\">fieldset</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"submit\"</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">\"send\"</span> <span class=\"p\">/&gt;&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nt\">form</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"text/javascript\"</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"https://raw.github.com/23/resumable.js/master/resumable.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"text/javascript\"</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"{% static 'resumable/js/django-resumable.js' %}\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"text/javascript\"</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"{% static 'resumable/js/init.js' %}\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2814045, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d4bafff1adfc6743eac2dcd4071fa9ae", "sha256": "4c65e5cc17b01ca41a8f9666d6afe7c37ed5d0748a0e516e47b0d53a6d19a503"}, "downloads": -1, "filename": "django-resumable-0.1.tar.gz", "has_sig": false, "md5_digest": "d4bafff1adfc6743eac2dcd4071fa9ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15001, "upload_time": "2015-01-02T16:14:58", "upload_time_iso_8601": "2015-01-02T16:14:58.475310Z", "url": "https://files.pythonhosted.org/packages/82/57/a179d457419162b6a3840aa5ef9b6c7b188e503f8aba93ab0090cc41acfe/django-resumable-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "95117535c0bc69bb4b3fbd5aa0d0da08", "sha256": "3d474ca20c00c734d8c55fe29a65428df1593a7b0b8e809136a365f5496479f1"}, "downloads": -1, "filename": "django-resumable-0.1.1.tar.gz", "has_sig": false, "md5_digest": "95117535c0bc69bb4b3fbd5aa0d0da08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15071, "upload_time": "2016-04-13T15:47:26", "upload_time_iso_8601": "2016-04-13T15:47:26.723476Z", "url": "https://files.pythonhosted.org/packages/00/85/5999ee7c2bcff7d3351c36e40d40918d73f1e3dbb900ed6923982e200bba/django-resumable-0.1.1.tar.gz", "yanked": false}], "0.1b": [{"comment_text": "", "digests": {"md5": "c8aa94d913397379c85fdfa449190644", "sha256": "871d69ef3d65bde804576ab4790c59bf838595957d80dfae5a38a53de42b2974"}, "downloads": -1, "filename": "django-resumable-0.1b.tar.gz", "has_sig": false, "md5_digest": "c8aa94d913397379c85fdfa449190644", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8177, "upload_time": "2012-09-05T11:44:13", "upload_time_iso_8601": "2012-09-05T11:44:13.981751Z", "url": "https://files.pythonhosted.org/packages/7f/35/da10648d99fa86537e26c0a885288e9e620921bfd262eae0cdefe1e145a2/django-resumable-0.1b.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b5016a17a714796d222464bcb0bf725f", "sha256": "d19b95b4d6cf8eb2b92cf288acfc232219544284ad2b06a9af389f55362e3855"}, "downloads": -1, "filename": "django-resumable-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b5016a17a714796d222464bcb0bf725f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17249, "upload_time": "2017-04-19T13:34:17", "upload_time_iso_8601": "2017-04-19T13:34:17.835450Z", "url": "https://files.pythonhosted.org/packages/35/74/c210648c24e0ec29b246bad27acb114d1676d6526c76d8abdb49e429e51a/django-resumable-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b5016a17a714796d222464bcb0bf725f", "sha256": "d19b95b4d6cf8eb2b92cf288acfc232219544284ad2b06a9af389f55362e3855"}, "downloads": -1, "filename": "django-resumable-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b5016a17a714796d222464bcb0bf725f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17249, "upload_time": "2017-04-19T13:34:17", "upload_time_iso_8601": "2017-04-19T13:34:17.835450Z", "url": "https://files.pythonhosted.org/packages/35/74/c210648c24e0ec29b246bad27acb114d1676d6526c76d8abdb49e429e51a/django-resumable-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:59 2020"}