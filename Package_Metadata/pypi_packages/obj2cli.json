{"info": {"author": "Takashi WATANABE", "author_email": "wtnb75@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "# Install\n\n- pip install obj2cli\n\n# Usage(single)\n\n```python\nimport sys\nimport obj2cli\n\n\nclass A:\n    def __init__(self, arg1, arg2):\n        self.a = arg1\n        self.b = arg2\n\n    def call1(self, c, d=None):\n        print(\"hello {} c={}, d={}\".format(self.__dict__, c, d))\n\n\nif __name__ == \"__main__\":\n    obj2cli.main_single(A, A, sys.argv[1:])\n```\n\n```\n# python cmd.py --help\nusage: A [-h] [--arg1 str] [--arg2 str] {call1} ...\n\nInitialize self. See help(type(self)) for accurate signature.\n\npositional arguments:\n  {call1}\n    call1\n\noptional arguments:\n  -h, --help  show this help message and exit\n  --arg1 str\n  --arg2 str\n\n# python cmd.py call1 --help\nusage: A call1 [-h] [-c str] [-d str]\n\noptional arguments:\n  -h, --help  show this help message and exit\n  -c str\n  -d str\n\n# python cmd.py --arg1 123 --arg2 345 call1 -c hello -d world\nhello {'a': '123', 'b': '345'} c=hello, d=world\n```\n\n# Usage(multi)\n\n```python\nimport sys\nimport obj2cli\n\n\nclass A:\n    def __init__(self, a, b):\n        self.a = a\n        self.b = b\n\n    def call1(self, c, d):\n        print(\"hello {}: {}, c={}, d={}\".format(self.__class__.__name__, self.__dict__, c, d))\n\n\nclass B(A):\n    pass\n\n\nif __name__ == \"__main__\":\n    obj2cli.main_cls({A: A, B: B}, sys.argv[1:])\n```\n\n# Usage(cli)\n\n```\n# obj2cli --module os.path --function basename -- --help\nusage: basename [-h] [-p str]\n\nReturns the final component of a pathname\n\noptional arguments:\n  -h, --help  show this help message and exit\n  -p str\n\n# obj2cli --module os.path --function basename -- -p /usr/bin/ls\nls\n\n# obj2cli --module logging --function warning --positional -- --help\nusage: warning [-h] str [str [str ...]]\n\nLog a message with severity 'WARNING' on the root logger. If the logger has no\nhandlers, call basicConfig() to add a console handler with a pre-defined format.\n\npositional arguments:\n  str\n  str\n\noptional arguments:\n  -h, --help  show this help message and exit\n# obj2cli --module logging --function warning --positional -- \"hello %s\" \"world\"\n2020-01-04 23:16:05,264 WARNING hello world\n```\n\n# Links\n\n- [pypi](https://pypi.org/project/obj2cli/)\n- [coverage](https://wtnb75.github.io/obj2cli/)\n- ~~[local pypi repo](https://wtnb75.github.io/obj2cli/dist/)~~\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wtnb75/obj2cli", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "obj2cli", "package_url": "https://pypi.org/project/obj2cli/", "platform": "", "project_url": "https://pypi.org/project/obj2cli/", "project_urls": {"Homepage": "https://github.com/wtnb75/obj2cli"}, "release_url": "https://pypi.org/project/obj2cli/0.0.4/", "requires_dist": ["Click", "argparse-utils", "PyYAML", "toml", "Jinja2"], "requires_python": "", "summary": "convert object/class to CLI command", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Install</h1>\n<ul>\n<li>pip install obj2cli</li>\n</ul>\n<h1>Usage(single)</h1>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">obj2cli</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">arg1</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">arg2</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">call1</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"hello </span><span class=\"si\">{}</span><span class=\"s2\"> c=</span><span class=\"si\">{}</span><span class=\"s2\">, d=</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">obj2cli</span><span class=\"o\">.</span><span class=\"n\">main_single</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:])</span>\n</pre>\n<pre><code># python cmd.py --help\nusage: A [-h] [--arg1 str] [--arg2 str] {call1} ...\n\nInitialize self. See help(type(self)) for accurate signature.\n\npositional arguments:\n  {call1}\n    call1\n\noptional arguments:\n  -h, --help  show this help message and exit\n  --arg1 str\n  --arg2 str\n\n# python cmd.py call1 --help\nusage: A call1 [-h] [-c str] [-d str]\n\noptional arguments:\n  -h, --help  show this help message and exit\n  -c str\n  -d str\n\n# python cmd.py --arg1 123 --arg2 345 call1 -c hello -d world\nhello {'a': '123', 'b': '345'} c=hello, d=world\n</code></pre>\n<h1>Usage(multi)</h1>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">obj2cli</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">a</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">b</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">call1</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"hello </span><span class=\"si\">{}</span><span class=\"s2\">: </span><span class=\"si\">{}</span><span class=\"s2\">, c=</span><span class=\"si\">{}</span><span class=\"s2\">, d=</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">B</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">obj2cli</span><span class=\"o\">.</span><span class=\"n\">main_cls</span><span class=\"p\">({</span><span class=\"n\">A</span><span class=\"p\">:</span> <span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">:</span> <span class=\"n\">B</span><span class=\"p\">},</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:])</span>\n</pre>\n<h1>Usage(cli)</h1>\n<pre><code># obj2cli --module os.path --function basename -- --help\nusage: basename [-h] [-p str]\n\nReturns the final component of a pathname\n\noptional arguments:\n  -h, --help  show this help message and exit\n  -p str\n\n# obj2cli --module os.path --function basename -- -p /usr/bin/ls\nls\n\n# obj2cli --module logging --function warning --positional -- --help\nusage: warning [-h] str [str [str ...]]\n\nLog a message with severity 'WARNING' on the root logger. If the logger has no\nhandlers, call basicConfig() to add a console handler with a pre-defined format.\n\npositional arguments:\n  str\n  str\n\noptional arguments:\n  -h, --help  show this help message and exit\n# obj2cli --module logging --function warning --positional -- \"hello %s\" \"world\"\n2020-01-04 23:16:05,264 WARNING hello world\n</code></pre>\n<h1>Links</h1>\n<ul>\n<li><a href=\"https://pypi.org/project/obj2cli/\" rel=\"nofollow\">pypi</a></li>\n<li><a href=\"https://wtnb75.github.io/obj2cli/\" rel=\"nofollow\">coverage</a></li>\n<li><del><a href=\"https://wtnb75.github.io/obj2cli/dist/\" rel=\"nofollow\">local pypi repo</a></del></li>\n</ul>\n\n          </div>"}, "last_serial": 6520797, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5fbab91bde4d9a53ec2e6ac434571040", "sha256": "306150d124e688e21b1147625933bd85d04865322c033407a386bbdf44c17595"}, "downloads": -1, "filename": "obj2cli-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5fbab91bde4d9a53ec2e6ac434571040", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9532, "upload_time": "2020-01-20T15:06:07", "upload_time_iso_8601": "2020-01-20T15:06:07.734179Z", "url": "https://files.pythonhosted.org/packages/a9/24/8c0a71edd820d547a71fe2a1b2b35c1ae8282d5fe313a5b91aa500b3e19f/obj2cli-0.0.1-py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2d8730324c67b1fcb84b1872edff026e", "sha256": "0b34e6b3f0e2700293a8eb26cddbc19d956181808af324ec5baa197533133a78"}, "downloads": -1, "filename": "obj2cli-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2d8730324c67b1fcb84b1872edff026e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9535, "upload_time": "2020-01-22T13:54:40", "upload_time_iso_8601": "2020-01-22T13:54:40.134341Z", "url": "https://files.pythonhosted.org/packages/3d/36/4660637731e128b60ac135c68dfab0a659436083bdd232c1b9ac9265eec7/obj2cli-0.0.2-py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "e7f1d92a9c262b492cc255e1a535ca86", "sha256": "d022e5d1c6591835637a3f04d51282856eb1c9ab3e89e0b324e03a203b5c8d18"}, "downloads": -1, "filename": "obj2cli-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e7f1d92a9c262b492cc255e1a535ca86", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9531, "upload_time": "2020-01-23T12:38:42", "upload_time_iso_8601": "2020-01-23T12:38:42.399040Z", "url": "https://files.pythonhosted.org/packages/67/8e/e8be90fcc0e42ef7aadd1c779c4a8ec12225973ab2944dc96466a0ec084f/obj2cli-0.0.3-py3-none-any.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "221d1536ab54e1dd54d000126e62e07b", "sha256": "792332f0d3ec4532f6b2ce6ead7c8fb0573d69d9c7d36087d0bcaa5d999235ac"}, "downloads": -1, "filename": "obj2cli-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "221d1536ab54e1dd54d000126e62e07b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12267, "upload_time": "2020-01-26T04:30:57", "upload_time_iso_8601": "2020-01-26T04:30:57.356397Z", "url": "https://files.pythonhosted.org/packages/c9/04/63fee3f806da2c0406b68a621e7aff5525a4175c0f3718fc1f9f5d30999d/obj2cli-0.0.4-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "221d1536ab54e1dd54d000126e62e07b", "sha256": "792332f0d3ec4532f6b2ce6ead7c8fb0573d69d9c7d36087d0bcaa5d999235ac"}, "downloads": -1, "filename": "obj2cli-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "221d1536ab54e1dd54d000126e62e07b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12267, "upload_time": "2020-01-26T04:30:57", "upload_time_iso_8601": "2020-01-26T04:30:57.356397Z", "url": "https://files.pythonhosted.org/packages/c9/04/63fee3f806da2c0406b68a621e7aff5525a4175c0f3718fc1f9f5d30999d/obj2cli-0.0.4-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:43:50 2020"}