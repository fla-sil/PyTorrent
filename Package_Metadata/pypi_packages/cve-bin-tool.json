{"info": {"author": "Terri Oda", "author_email": "terri.oda@intel.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "CVE Binary Tool\n===============\n\n[![Build Status](https://github.com/intel/cve-bin-tool/workflows/cve-bin-tool/badge.svg?branch=master&event=push)](https://github.com/intel/cve-bin-tool/actions)\n[![codecov](https://codecov.io/gh/intel/cve-bin-tool/branch/master/graph/badge.svg)](https://codecov.io/gh/intel/cve-bin-tool)\n[![Gitter](https://badges.gitter.im/cve-bin-tool/community.svg)](https://gitter.im/cve-bin-tool/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)\n[![On PyPI](https://img.shields.io/pypi/v/cve-bin-tool)](https://pypi.org/project/cve-bin-tool/)\n\n\nThe CVE Binary Tool scans for a number of common, vulnerable open source\ncomponents (openssl, libpng, libxml2, expat and a few others) to let you know\nif a given directory or binary file includes common libraries with known\nvulnerabilities.  (If you have a list of components with versions and want a\nlist of CVEs, check out\n[csv2cve](https://github.com/intel/cve-bin-tool#csv2cve) below.)\n\nUsage:\n`cve-bin-tool <flags> <path to directory>`\n\nYou can also do `python -m cve_bin_tool.cli <flags> <path to directory>` which is useful if you're trying the latest code from [the cve-bin-tool github](https://github.com/intel/cve-bin-tool/compare).\n\n\n```\n  -h, --help            show help message and exit\n  -V, --version         show program's version number and exit\n\n\n  Output options:\n  -q, --quiet           suppress output\n  -l {debug,info,warning,error,critical}, --log {debug,info,warning,error,critical}\n                        log level. The default log level is info\n  -o OUTPUT_FILE, --output-file OUTPUT_FILE\n                        provide output filename (default: output to stdout)\n  -f {csv,json,console}, --format {csv,json,console}\n                        update output format (default: console)\n\n\n  Functional options:\n  -x, --extract         autoextract compressed files\n  -s SKIPS, --skips SKIPS\n                        comma-separated list of checkers to disable\n  -r CHECKERS, --runs CHECKERS\n                        comma-separated list of checkers to enable\n  -m, --multithread     enable multithread\n  -u {now,daily,never}, --update {now,daily,never}\n                        update schedule for NVD database. Default is daily.\n```\n\nThe 0.3.1 release is intended to be the last release to officially support\npython 2.7; please switch to python 3.6+ for future releases and to use the\ndevelopment tree.  You can check [our CI\nconfiguration](https://github.com/intel/cve-bin-tool/blob/master/.github/workflows/pythonapp.yml)\nto see what versions of python we're explicitly testing.\n\nThis readme is intended to be a quickstart guide for using the tool.  If you\nrequire more information, there is also a [user manual](MANUAL.md) available.\n\nHow it works\n------------\n\nThis scanner looks at the strings found in binary files to see if they\nmatch certain vulnerable versions of the following libraries and tools:\n\n* binutils\n* bluez\n* bzip2\n* curl\n* expat\n* ffmpeg\n* gnutls\n* gstreamer\n* hostapd\n* icu\n* kerberos\n* libcurl\n* libdb\n* libgcrypt\n* libjpeg\n* libnss\n* libtiff\n* ncurses\n* ngnix\n* node.js\n* openssh\n* openssl\n* png\n* python\n* rsyslog\n* sqlite\n* strongswan\n* syslogng\n* systemd\n* varnish\n* xerces\n* xml2\n* zlib\n\nAll the checkers can be found in the checkers directory, as can the\n[instructions on how to add a new checker](cve_bin_tool/checkers/README.md).\nSupport for new checkers can be requested via\n[GitHub issues](https://github.com/intel/cve-bin-tool/issues).\n\nLimitations\n-----------\n\nThis scanner does not attempt to exploit issues or examine the code in greater\ndetail; it only looks for library signatures and version numbers.  As such, it\ncannot tell if someone has backported fixes to a vulnerable version, and it\nwill not work if library or version information was intentionally obfuscated.\n\nThis tool is meant to be used as a quick-to-run, easily-automatable check in a\nnon-malicious environment so that developers can be made aware of old libraries\nwith security issues that have been compiled into their binaries.\n\nRequirements\n------------\n\nTo use the auto-extractor, you may need the following utilities depending on the\ntype of file you need to extract. Belows are required to run the full\ntest suite on linux:\n\n* `ar`\n* `cabextract`\n* `cpio`\n* `rpm2cpio`\n\nMost of these are installed by default on many Linux systems, but `cabextract` and\n`rpm2cpio` in particular might need to be installed.\n\nOn windows systems, you may need:\n\n* `ar`\n* `7z`\n* `Expand`\n\nWindows has `ar` and `Expand` installed in default, but `7z` in particular might need to be installed.  (7z is used only for rpm extraction, which is used heavily in our test suite, but if you're not scanning rpm files on windows you may be able to do without.)\n\nCSV2CVE\n-------\n\nThe CVE Binary Tool package also includes a tool called `csv2cve` which is a helper tool that allows you to search the local database for a list of known products.  This can be useful if the list of products is known.\n\nUsage:\n`csv2cve <csv_file>`\n\nThe CSV file must contain the following columns: `vendor,product,version` where the vendor and product names are exact matches to the strings in the National Vulnerability Database.  You can read more about how to find the correct string in [the checker documentation](https://github.com/intel/cve-bin-tool/blob/master/cve_bin_tool/checkers/README.md), and the [csv2cve manual](https://github.com/intel/cve-bin-tool/blob/master/CSV2CVE.md) has more information on using this tool.\n\nNote that `csv2cve`, unlike `cve-bin-tool`, will work on *any* product known in the National Vulnerability Database, not only those that have checkers written.\n\nFeedback & Contributions\n------------------------\n\nBugs and feature requests can be made via [GitHub\nissues](https://github.com/intel/cve-bin-tool).  Be aware that these issues are\nnot private, so take care when providing output to make sure you are not\ndisclosing security issues in other products.\n\nPull requests are also welcome via git.\n\nThe CVE Binary Tool uses [the Black python code\nformatter](https://github.com/python/black) to keep coding style consistent;\nyou may wish to have it installed to make pull requests easier.\n\nSecurity Issues\n---------------\n\nSecurity issues with the tool itself can be reported to Intel's security\nincident response team via\n[https://intel.com/security](https://intel.com/security).\n\nIf in the course of using this tool you discover a security issue with someone\nelse's code, please disclose responsibly to the appropriate party.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/intel/cve-bin-tool", "keywords": "security,tools,CVE", "license": "GPLv3", "maintainer": "Terri Oda", "maintainer_email": "terri.oda@intel.com", "name": "cve-bin-tool", "package_url": "https://pypi.org/project/cve-bin-tool/", "platform": "", "project_url": "https://pypi.org/project/cve-bin-tool/", "project_urls": {"Homepage": "https://github.com/intel/cve-bin-tool"}, "release_url": "https://pypi.org/project/cve-bin-tool/1.0/", "requires_dist": null, "requires_python": "", "summary": "CVE Binary Checker Tool", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>CVE Binary Tool</h1>\n<p><a href=\"https://github.com/intel/cve-bin-tool/actions\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cb41708cebfa4eee235722ce93a803ca996c5ae6/68747470733a2f2f6769746875622e636f6d2f696e74656c2f6376652d62696e2d746f6f6c2f776f726b666c6f77732f6376652d62696e2d746f6f6c2f62616467652e7376673f6272616e63683d6d6173746572266576656e743d70757368\"></a>\n<a href=\"https://codecov.io/gh/intel/cve-bin-tool\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6f0f789f4d4ee9393de29d64b80814d9fbe5eef9/68747470733a2f2f636f6465636f762e696f2f67682f696e74656c2f6376652d62696e2d746f6f6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://gitter.im/cve-bin-tool/community?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge\" rel=\"nofollow\"><img alt=\"Gitter\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/499ad4b0448f2ecacbc9ad726daf40d60b21a339/68747470733a2f2f6261646765732e6769747465722e696d2f6376652d62696e2d746f6f6c2f636f6d6d756e6974792e737667\"></a>\n<a href=\"https://github.com/python/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://pypi.org/project/cve-bin-tool/\" rel=\"nofollow\"><img alt=\"On PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/174fd8c802ac56a07ce2ebc307ca56b09ceafda6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6376652d62696e2d746f6f6c\"></a></p>\n<p>The CVE Binary Tool scans for a number of common, vulnerable open source\ncomponents (openssl, libpng, libxml2, expat and a few others) to let you know\nif a given directory or binary file includes common libraries with known\nvulnerabilities.  (If you have a list of components with versions and want a\nlist of CVEs, check out\n<a href=\"https://github.com/intel/cve-bin-tool#csv2cve\" rel=\"nofollow\">csv2cve</a> below.)</p>\n<p>Usage:\n<code>cve-bin-tool &lt;flags&gt; &lt;path to directory&gt;</code></p>\n<p>You can also do <code>python -m cve_bin_tool.cli &lt;flags&gt; &lt;path to directory&gt;</code> which is useful if you're trying the latest code from <a href=\"https://github.com/intel/cve-bin-tool/compare\" rel=\"nofollow\">the cve-bin-tool github</a>.</p>\n<pre><code>  -h, --help            show help message and exit\n  -V, --version         show program's version number and exit\n\n\n  Output options:\n  -q, --quiet           suppress output\n  -l {debug,info,warning,error,critical}, --log {debug,info,warning,error,critical}\n                        log level. The default log level is info\n  -o OUTPUT_FILE, --output-file OUTPUT_FILE\n                        provide output filename (default: output to stdout)\n  -f {csv,json,console}, --format {csv,json,console}\n                        update output format (default: console)\n\n\n  Functional options:\n  -x, --extract         autoextract compressed files\n  -s SKIPS, --skips SKIPS\n                        comma-separated list of checkers to disable\n  -r CHECKERS, --runs CHECKERS\n                        comma-separated list of checkers to enable\n  -m, --multithread     enable multithread\n  -u {now,daily,never}, --update {now,daily,never}\n                        update schedule for NVD database. Default is daily.\n</code></pre>\n<p>The 0.3.1 release is intended to be the last release to officially support\npython 2.7; please switch to python 3.6+ for future releases and to use the\ndevelopment tree.  You can check <a href=\"https://github.com/intel/cve-bin-tool/blob/master/.github/workflows/pythonapp.yml\" rel=\"nofollow\">our CI\nconfiguration</a>\nto see what versions of python we're explicitly testing.</p>\n<p>This readme is intended to be a quickstart guide for using the tool.  If you\nrequire more information, there is also a <a href=\"MANUAL.md\" rel=\"nofollow\">user manual</a> available.</p>\n<h2>How it works</h2>\n<p>This scanner looks at the strings found in binary files to see if they\nmatch certain vulnerable versions of the following libraries and tools:</p>\n<ul>\n<li>binutils</li>\n<li>bluez</li>\n<li>bzip2</li>\n<li>curl</li>\n<li>expat</li>\n<li>ffmpeg</li>\n<li>gnutls</li>\n<li>gstreamer</li>\n<li>hostapd</li>\n<li>icu</li>\n<li>kerberos</li>\n<li>libcurl</li>\n<li>libdb</li>\n<li>libgcrypt</li>\n<li>libjpeg</li>\n<li>libnss</li>\n<li>libtiff</li>\n<li>ncurses</li>\n<li>ngnix</li>\n<li>node.js</li>\n<li>openssh</li>\n<li>openssl</li>\n<li>png</li>\n<li>python</li>\n<li>rsyslog</li>\n<li>sqlite</li>\n<li>strongswan</li>\n<li>syslogng</li>\n<li>systemd</li>\n<li>varnish</li>\n<li>xerces</li>\n<li>xml2</li>\n<li>zlib</li>\n</ul>\n<p>All the checkers can be found in the checkers directory, as can the\n<a href=\"cve_bin_tool/checkers/README.md\" rel=\"nofollow\">instructions on how to add a new checker</a>.\nSupport for new checkers can be requested via\n<a href=\"https://github.com/intel/cve-bin-tool/issues\" rel=\"nofollow\">GitHub issues</a>.</p>\n<h2>Limitations</h2>\n<p>This scanner does not attempt to exploit issues or examine the code in greater\ndetail; it only looks for library signatures and version numbers.  As such, it\ncannot tell if someone has backported fixes to a vulnerable version, and it\nwill not work if library or version information was intentionally obfuscated.</p>\n<p>This tool is meant to be used as a quick-to-run, easily-automatable check in a\nnon-malicious environment so that developers can be made aware of old libraries\nwith security issues that have been compiled into their binaries.</p>\n<h2>Requirements</h2>\n<p>To use the auto-extractor, you may need the following utilities depending on the\ntype of file you need to extract. Belows are required to run the full\ntest suite on linux:</p>\n<ul>\n<li><code>ar</code></li>\n<li><code>cabextract</code></li>\n<li><code>cpio</code></li>\n<li><code>rpm2cpio</code></li>\n</ul>\n<p>Most of these are installed by default on many Linux systems, but <code>cabextract</code> and\n<code>rpm2cpio</code> in particular might need to be installed.</p>\n<p>On windows systems, you may need:</p>\n<ul>\n<li><code>ar</code></li>\n<li><code>7z</code></li>\n<li><code>Expand</code></li>\n</ul>\n<p>Windows has <code>ar</code> and <code>Expand</code> installed in default, but <code>7z</code> in particular might need to be installed.  (7z is used only for rpm extraction, which is used heavily in our test suite, but if you're not scanning rpm files on windows you may be able to do without.)</p>\n<h2>CSV2CVE</h2>\n<p>The CVE Binary Tool package also includes a tool called <code>csv2cve</code> which is a helper tool that allows you to search the local database for a list of known products.  This can be useful if the list of products is known.</p>\n<p>Usage:\n<code>csv2cve &lt;csv_file&gt;</code></p>\n<p>The CSV file must contain the following columns: <code>vendor,product,version</code> where the vendor and product names are exact matches to the strings in the National Vulnerability Database.  You can read more about how to find the correct string in <a href=\"https://github.com/intel/cve-bin-tool/blob/master/cve_bin_tool/checkers/README.md\" rel=\"nofollow\">the checker documentation</a>, and the <a href=\"https://github.com/intel/cve-bin-tool/blob/master/CSV2CVE.md\" rel=\"nofollow\">csv2cve manual</a> has more information on using this tool.</p>\n<p>Note that <code>csv2cve</code>, unlike <code>cve-bin-tool</code>, will work on <em>any</em> product known in the National Vulnerability Database, not only those that have checkers written.</p>\n<h2>Feedback &amp; Contributions</h2>\n<p>Bugs and feature requests can be made via <a href=\"https://github.com/intel/cve-bin-tool\" rel=\"nofollow\">GitHub\nissues</a>.  Be aware that these issues are\nnot private, so take care when providing output to make sure you are not\ndisclosing security issues in other products.</p>\n<p>Pull requests are also welcome via git.</p>\n<p>The CVE Binary Tool uses <a href=\"https://github.com/python/black\" rel=\"nofollow\">the Black python code\nformatter</a> to keep coding style consistent;\nyou may wish to have it installed to make pull requests easier.</p>\n<h2>Security Issues</h2>\n<p>Security issues with the tool itself can be reported to Intel's security\nincident response team via\n<a href=\"https://intel.com/security\" rel=\"nofollow\">https://intel.com/security</a>.</p>\n<p>If in the course of using this tool you discover a security issue with someone\nelse's code, please disclose responsibly to the appropriate party.</p>\n\n          </div>"}, "last_serial": 7139791, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "c229dd10b4885f6adb6df3b9e2126548", "sha256": "3dd73f7938f2dd8feba6aaf95a48e6e778d5777a94697567e2964a1bccb42cc4"}, "downloads": -1, "filename": "cve-bin-tool-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c229dd10b4885f6adb6df3b9e2126548", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21292, "upload_time": "2019-01-19T02:33:32", "upload_time_iso_8601": "2019-01-19T02:33:32.902851Z", "url": "https://files.pythonhosted.org/packages/68/4f/6d6534c081f4dd68a6d1487e603853d94b2ddc93f6b6ad5d20b40aea2873/cve-bin-tool-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "61aac2e1c2b8549412cfea24f902a786", "sha256": "6b7a7fa0bf142af30acbedcfe6e026b003214207ba3932fd5cefdd923ba04ce0"}, "downloads": -1, "filename": "cve-bin-tool-0.3.0.tar.gz", "has_sig": false, "md5_digest": "61aac2e1c2b8549412cfea24f902a786", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59732, "upload_time": "2019-08-13T18:55:25", "upload_time_iso_8601": "2019-08-13T18:55:25.191699Z", "url": "https://files.pythonhosted.org/packages/92/9f/8f7f7233aa1c5a367303ff036ddf5e12ea95f1af7789e24056af6bc161e8/cve-bin-tool-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "a1a9627f1726f99f9e933ca993a2f147", "sha256": "eee0287b9a3469b6dd33eb084e8003b5e0163e9fd480db37c4285e0ddfd4cca4"}, "downloads": -1, "filename": "cve-bin-tool-0.3.1.tar.gz", "has_sig": false, "md5_digest": "a1a9627f1726f99f9e933ca993a2f147", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62025, "upload_time": "2019-11-27T22:39:51", "upload_time_iso_8601": "2019-11-27T22:39:51.676606Z", "url": "https://files.pythonhosted.org/packages/92/c6/324f258ff75eae07fda752f09a4bfc555fc9019cc81809ce450b881f2599/cve-bin-tool-0.3.1.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "e015610bba8ffc2a7c5c815ec2366905", "sha256": "6ef68f26a30837f321d8ce2cede8872e1db87a8f511868c4382b68d099061141"}, "downloads": -1, "filename": "cve-bin-tool-1.0.tar.gz", "has_sig": false, "md5_digest": "e015610bba8ffc2a7c5c815ec2366905", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80317, "upload_time": "2020-04-30T19:23:59", "upload_time_iso_8601": "2020-04-30T19:23:59.682734Z", "url": "https://files.pythonhosted.org/packages/d7/43/5ae0ee17e7d5a001f751cbf6b4a6dff316dc2cc8424ef97c51224e18c18c/cve-bin-tool-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e015610bba8ffc2a7c5c815ec2366905", "sha256": "6ef68f26a30837f321d8ce2cede8872e1db87a8f511868c4382b68d099061141"}, "downloads": -1, "filename": "cve-bin-tool-1.0.tar.gz", "has_sig": false, "md5_digest": "e015610bba8ffc2a7c5c815ec2366905", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80317, "upload_time": "2020-04-30T19:23:59", "upload_time_iso_8601": "2020-04-30T19:23:59.682734Z", "url": "https://files.pythonhosted.org/packages/d7/43/5ae0ee17e7d5a001f751cbf6b4a6dff316dc2cc8424ef97c51224e18c18c/cve-bin-tool-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:14 2020"}