{"info": {"author": "Brett Langdon", "author_email": "me@brett.is", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Flask-Defer\n=========\n\n.. image:: https://badge.fury.io/py/flask-defer.svg\n    :target: https://badge.fury.io/py/flask-defer\n.. image:: https://travis-ci.org/brettlangdon/flask-defer.svg?branch=master\n    :target: https://travis-ci.org/brettlangdon/flask-defer\n\nEasily register a function to execute at the end of the current request.\n\nInstallation\n~~~~~~~~~~~~\n\n.. code:: bash\n\n   pip install Flask-Defer\n\n\nUsage\n~~~~~\n\nPassing a function and it's arguments to `flask_defer.after_request` will register that function to execute when the Flask request has ended.\n\nIf a call to `flask_defer.after_request` happens outside of a request context then the function will be executed immediately.\n\n.. code:: python\n\n   from flask import Flask\n   from flask_defer import FlaskDefer, after_request\n\n   app = Flask(__name__)\n   FlaskDefer(app)\n\n\n   def defer_me(name, say_hello=False):\n       if say_hello:\n           print 'Saying hello to, {name}'.format(name=name)\n\n\n   @app.route('/')\n   def index():\n       print 'Start of request method'\n\n       # Defer `defer_me` until after the current request has finished\n       after_request(defer_me, 'name', say_hello=True)\n\n       print 'Ending request method'\n\n       return 'Thanks!'\n\n\n   if __name__ == '__main__':\n       app.run()\n\n\n.. code:: bash\n\n   $ python example.py\n    * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n   Start of request method\n   Ending request method\n   Saying hello to, name\n   127.0.0.1 - - [28/Nov/2016 15:41:39] \"GET / HTTP/1.1\" 200 -", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brettlangdon/flask-defer.git", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Flask-Defer", "package_url": "https://pypi.org/project/Flask-Defer/", "platform": "any", "project_url": "https://pypi.org/project/Flask-Defer/", "project_urls": {"Homepage": "https://github.com/brettlangdon/flask-defer.git"}, "release_url": "https://pypi.org/project/Flask-Defer/1.1.0/", "requires_dist": ["Flask"], "requires_python": "", "summary": "Flask extension to defer task execution under after request teardown", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Flask-Defer<br>=========<br><br>.. image:: https://badge.fury.io/py/flask-defer.svg<br>    :target: https://badge.fury.io/py/flask-defer<br>.. image:: https://travis-ci.org/brettlangdon/flask-defer.svg?branch=master<br>    :target: https://travis-ci.org/brettlangdon/flask-defer<br><br>Easily register a function to execute at the end of the current request.<br><br>Installation<br>~~~~~~~~~~~~<br><br>.. code:: bash<br><br>   pip install Flask-Defer<br><br><br>Usage<br>~~~~~<br><br>Passing a function and it's arguments to `flask_defer.after_request` will register that function to execute when the Flask request has ended.<br><br>If a call to `flask_defer.after_request` happens outside of a request context then the function will be executed immediately.<br><br>.. code:: python<br><br>   from flask import Flask<br>   from flask_defer import FlaskDefer, after_request<br><br>   app = Flask(__name__)<br>   FlaskDefer(app)<br><br><br>   def defer_me(name, say_hello=False):<br>       if say_hello:<br>           print 'Saying hello to, {name}'.format(name=name)<br><br><br>   @app.route('/')<br>   def index():<br>       print 'Start of request method'<br><br>       # Defer `defer_me` until after the current request has finished<br>       after_request(defer_me, 'name', say_hello=True)<br><br>       print 'Ending request method'<br><br>       return 'Thanks!'<br><br><br>   if __name__ == '__main__':<br>       app.run()<br><br><br>.. code:: bash<br><br>   $ python example.py<br>    * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)<br>   Start of request method<br>   Ending request method<br>   Saying hello to, name<br>   127.0.0.1 - - [28/Nov/2016 15:41:39] \"GET / HTTP/1.1\" 200 -\n          </div>"}, "last_serial": 2489688, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "de6a795de3c679ebabe13c918b16a848", "sha256": "e284aeb247f3bc9749a904d4baabc664f9cb845b59c61a1ef455b559ca1b41a6"}, "downloads": -1, "filename": "Flask_Defer-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "de6a795de3c679ebabe13c918b16a848", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 3932, "upload_time": "2016-11-28T20:57:58", "upload_time_iso_8601": "2016-11-28T20:57:58.044444Z", "url": "https://files.pythonhosted.org/packages/a9/46/36a5aac0839827a72d71c45dd992616dba2a5d34bba8fd1a31639ec5625a/Flask_Defer-1.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "470e33affb214c8a25e9c8e9241ab06e", "sha256": "f61b1475d3374ccf60eb53533736ddb468f6d421032c79d64d946fcc9ab77843"}, "downloads": -1, "filename": "Flask-Defer-1.0.0.tar.gz", "has_sig": false, "md5_digest": "470e33affb214c8a25e9c8e9241ab06e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3817, "upload_time": "2016-11-28T20:57:59", "upload_time_iso_8601": "2016-11-28T20:57:59.853620Z", "url": "https://files.pythonhosted.org/packages/32/1d/aac569d64f070bad4b68e275397e086cd388e00c0feaf6b07fb82afb2d81/Flask-Defer-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "a25505c1bbf4630c91a7d55900b20d61", "sha256": "ac91934ff33b30f7d9ae0b27c9c3db428fdad335914fff0ed4a19790a383dc2d"}, "downloads": -1, "filename": "Flask_Defer-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "a25505c1bbf4630c91a7d55900b20d61", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4207, "upload_time": "2016-11-28T21:17:37", "upload_time_iso_8601": "2016-11-28T21:17:37.146928Z", "url": "https://files.pythonhosted.org/packages/62/fb/06309e128cf01e5050fe1d9197071b07937542480d7216bf7fbf99e026a3/Flask_Defer-1.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c257ba859b28de5bdbf968118d41b215", "sha256": "0c9be69cae69acd5b3fb55b13da41477a86479deb1d1be4f921a31400f4662f7"}, "downloads": -1, "filename": "Flask-Defer-1.0.1.tar.gz", "has_sig": false, "md5_digest": "c257ba859b28de5bdbf968118d41b215", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4037, "upload_time": "2016-11-28T21:17:39", "upload_time_iso_8601": "2016-11-28T21:17:39.093596Z", "url": "https://files.pythonhosted.org/packages/bc/88/c4f45afd40a7401758521276405ae5b1a0ed83547e08f4d4a69b2249e04c/Flask-Defer-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "f69c7bc7fabacbc20f53b7a37f687268", "sha256": "3b8ffcfa329addc39052209453d4a1b13642f702e5f5ff8fd1cfac00024c3ce8"}, "downloads": -1, "filename": "Flask_Defer-1.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "f69c7bc7fabacbc20f53b7a37f687268", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4127, "upload_time": "2016-11-29T12:51:38", "upload_time_iso_8601": "2016-11-29T12:51:38.337858Z", "url": "https://files.pythonhosted.org/packages/87/4f/8da5279a74a9a10be08e3fa1e5795e89e388189bd3ebd0015b87fcfc8429/Flask_Defer-1.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "683c511acae0352724fc2187327fba93", "sha256": "145206689aeba443d672832b4d0d81d7a89e61c13e2193974fee68d8644db1d7"}, "downloads": -1, "filename": "Flask-Defer-1.1.0.tar.gz", "has_sig": false, "md5_digest": "683c511acae0352724fc2187327fba93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4036, "upload_time": "2016-11-29T12:51:40", "upload_time_iso_8601": "2016-11-29T12:51:40.367178Z", "url": "https://files.pythonhosted.org/packages/74/16/c918eb56e64b2649118cc5cb716e069b6714654e88f6df6ea007b315a5a7/Flask-Defer-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f69c7bc7fabacbc20f53b7a37f687268", "sha256": "3b8ffcfa329addc39052209453d4a1b13642f702e5f5ff8fd1cfac00024c3ce8"}, "downloads": -1, "filename": "Flask_Defer-1.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "f69c7bc7fabacbc20f53b7a37f687268", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4127, "upload_time": "2016-11-29T12:51:38", "upload_time_iso_8601": "2016-11-29T12:51:38.337858Z", "url": "https://files.pythonhosted.org/packages/87/4f/8da5279a74a9a10be08e3fa1e5795e89e388189bd3ebd0015b87fcfc8429/Flask_Defer-1.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "683c511acae0352724fc2187327fba93", "sha256": "145206689aeba443d672832b4d0d81d7a89e61c13e2193974fee68d8644db1d7"}, "downloads": -1, "filename": "Flask-Defer-1.1.0.tar.gz", "has_sig": false, "md5_digest": "683c511acae0352724fc2187327fba93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4036, "upload_time": "2016-11-29T12:51:40", "upload_time_iso_8601": "2016-11-29T12:51:40.367178Z", "url": "https://files.pythonhosted.org/packages/74/16/c918eb56e64b2649118cc5cb716e069b6714654e88f6df6ea007b315a5a7/Flask-Defer-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:58 2020"}