{"info": {"author": "Kirill Kirikov", "author_email": "kk@4irelabs.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "Strict DER signature encoding/decoding.\n\nSee [bip66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki).\n\n- This module **works only with [two's complement](https://en.wikipedia.org/wiki/Two's_complement) numbers**.\n- BIP66 doesn't check that `r` or `s` are fully valid.\n  - `check`/`decode` doesn't check that `r` or `s` great than 33 bytes or that this number represent valid point on elliptic curve.\n  - `encode` doesn't check that `r`/`s` represent valid point on elliptic curve.\n\n## Example\n\n``` python\nimport bip66\nr = \"29db2d5f4e1dcc04e19266cce3cb135865784c62ab653b307f0e0bb744f5c2aa\"\ns = \"00a97f5826912cac8b44d9f577a26f169a2f8db781f2ddb7de2bc886e93b6844\"\nencoded = bip66.encode(binascii.unhexlify(r), binascii.unhexlify(s))\nsignature = binascii.hexlify(encoded).decode()\n# > 00a97f5826912cac8b44d9f577a26f169a2f8db781f2ddb7de2bc886e93b6844\n\nDER = \"3044022029db2d5f4e1dcc04e19266cce3cb135865784c62ab653b307f0e0bb\" \\\n      \"744f5c2aa022000a97f5826912cac8b44d9f577a26f169a2f8db781f2ddb7de2bc886e93b6844\"\nr, s = bip66.decode(binascii.unhexlify(DER))\nprint(binascii.hexlify(r).decode())\nprint(binascii.hexlify(s).decode())\n\n# > 29db2d5f4e1dcc04e19266cce3cb135865784c62ab653b307f0e0bb744f5c2aa\n# > 00a97f5826912cac8b44d9f577a26f169a2f8db781f2ddb7de2bc886e93b6844\n```\n\nA catch-all exception regex:\n``` python\n/Expected DER (integer|sequence)|(R|S) value (excessively padded|is negative)|(R|S|DER sequence) length is (zero|too short|too long|invalid)/\n```\n\n## LICENSE [MIT](LICENSE)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/KiriKiri/bip66", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "bip66", "package_url": "https://pypi.org/project/bip66/", "platform": "", "project_url": "https://pypi.org/project/bip66/", "project_urls": {"Homepage": "https://github.com/KiriKiri/bip66"}, "release_url": "https://pypi.org/project/bip66/0.4/", "requires_dist": null, "requires_python": "", "summary": "Strict DER signature encoding/decoding.", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Strict DER signature encoding/decoding.</p>\n<p>See <a href=\"https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki\" rel=\"nofollow\">bip66</a>.</p>\n<ul>\n<li>This module <strong>works only with <a href=\"https://en.wikipedia.org/wiki/Two's_complement\" rel=\"nofollow\">two's complement</a> numbers</strong>.</li>\n<li>BIP66 doesn't check that <code>r</code> or <code>s</code> are fully valid.\n<ul>\n<li><code>check</code>/<code>decode</code> doesn't check that <code>r</code> or <code>s</code> great than 33 bytes or that this number represent valid point on elliptic curve.</li>\n<li><code>encode</code> doesn't check that <code>r</code>/<code>s</code> represent valid point on elliptic curve.</li>\n</ul>\n</li>\n</ul>\n<h2>Example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">bip66</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"s2\">\"29db2d5f4e1dcc04e19266cce3cb135865784c62ab653b307f0e0bb744f5c2aa\"</span>\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"s2\">\"00a97f5826912cac8b44d9f577a26f169a2f8db781f2ddb7de2bc886e93b6844\"</span>\n<span class=\"n\">encoded</span> <span class=\"o\">=</span> <span class=\"n\">bip66</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"n\">binascii</span><span class=\"o\">.</span><span class=\"n\">unhexlify</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">),</span> <span class=\"n\">binascii</span><span class=\"o\">.</span><span class=\"n\">unhexlify</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">))</span>\n<span class=\"n\">signature</span> <span class=\"o\">=</span> <span class=\"n\">binascii</span><span class=\"o\">.</span><span class=\"n\">hexlify</span><span class=\"p\">(</span><span class=\"n\">encoded</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">()</span>\n<span class=\"c1\"># &gt; 00a97f5826912cac8b44d9f577a26f169a2f8db781f2ddb7de2bc886e93b6844</span>\n\n<span class=\"n\">DER</span> <span class=\"o\">=</span> <span class=\"s2\">\"3044022029db2d5f4e1dcc04e19266cce3cb135865784c62ab653b307f0e0bb\"</span> \\\n      <span class=\"s2\">\"744f5c2aa022000a97f5826912cac8b44d9f577a26f169a2f8db781f2ddb7de2bc886e93b6844\"</span>\n<span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">bip66</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"n\">binascii</span><span class=\"o\">.</span><span class=\"n\">unhexlify</span><span class=\"p\">(</span><span class=\"n\">DER</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">binascii</span><span class=\"o\">.</span><span class=\"n\">hexlify</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">())</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">binascii</span><span class=\"o\">.</span><span class=\"n\">hexlify</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># &gt; 29db2d5f4e1dcc04e19266cce3cb135865784c62ab653b307f0e0bb744f5c2aa</span>\n<span class=\"c1\"># &gt; 00a97f5826912cac8b44d9f577a26f169a2f8db781f2ddb7de2bc886e93b6844</span>\n</pre>\n<p>A catch-all exception regex:</p>\n<pre><span class=\"o\">/</span><span class=\"n\">Expected</span> <span class=\"n\">DER</span> <span class=\"p\">(</span><span class=\"n\">integer</span><span class=\"o\">|</span><span class=\"n\">sequence</span><span class=\"p\">)</span><span class=\"o\">|</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"o\">|</span><span class=\"n\">S</span><span class=\"p\">)</span> <span class=\"n\">value</span> <span class=\"p\">(</span><span class=\"n\">excessively</span> <span class=\"n\">padded</span><span class=\"o\">|</span><span class=\"ow\">is</span> <span class=\"n\">negative</span><span class=\"p\">)</span><span class=\"o\">|</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"o\">|</span><span class=\"n\">S</span><span class=\"o\">|</span><span class=\"n\">DER</span> <span class=\"n\">sequence</span><span class=\"p\">)</span> <span class=\"n\">length</span> <span class=\"ow\">is</span> <span class=\"p\">(</span><span class=\"n\">zero</span><span class=\"o\">|</span><span class=\"n\">too</span> <span class=\"n\">short</span><span class=\"o\">|</span><span class=\"n\">too</span> <span class=\"n\">long</span><span class=\"o\">|</span><span class=\"n\">invalid</span><span class=\"p\">)</span><span class=\"o\">/</span>\n</pre>\n<h2>LICENSE <a href=\"LICENSE\" rel=\"nofollow\">MIT</a></h2>\n\n          </div>"}, "last_serial": 4622992, "releases": {"0.4": [{"comment_text": "", "digests": {"md5": "187859bbb1b0208b5e4598fcb51ba608", "sha256": "aa79b753db54bdf57cabcf68315700316bab7da30561e810603c1c01c74df350"}, "downloads": -1, "filename": "bip66-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "187859bbb1b0208b5e4598fcb51ba608", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7929, "upload_time": "2018-12-20T23:44:43", "upload_time_iso_8601": "2018-12-20T23:44:43.373635Z", "url": "https://files.pythonhosted.org/packages/ec/39/b383faec6f161c9a5f22a41ab4e2e7ea4439ab17a7730f9c667a35089761/bip66-0.4-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "187859bbb1b0208b5e4598fcb51ba608", "sha256": "aa79b753db54bdf57cabcf68315700316bab7da30561e810603c1c01c74df350"}, "downloads": -1, "filename": "bip66-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "187859bbb1b0208b5e4598fcb51ba608", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7929, "upload_time": "2018-12-20T23:44:43", "upload_time_iso_8601": "2018-12-20T23:44:43.373635Z", "url": "https://files.pythonhosted.org/packages/ec/39/b383faec6f161c9a5f22a41ab4e2e7ea4439ab17a7730f9c667a35089761/bip66-0.4-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 22:37:22 2020"}