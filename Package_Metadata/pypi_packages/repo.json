{"info": {"author": "Anthon van der Neut", "author_email": "a.van.der.neut@ruamel.eu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Version Control", "Topic :: Utilities"], "description": "The ``repo`` development tool makes it simple to support a complex workflow\nwhile contributing Pull Requests (PRs) to someone else's upstream mercurial\nrepositories on bitbucket <http://www.bitbucket.org>.\n\nUpstream maintainers:\n\n- often prefer the PRs **not** to be on branches, as these clutter\n  their repository (even when closed at some point).\n- not to consist of too many commits/changesets.\n- ask you to make additional changes, forcing multiple changesets and possible\n  recreation of a new PR\n\nWhich collides with the practise of committing often during development.\n\n-----\n\n``repo`` suports starting development on an upstream repository by:\n\n- fast cloning of the **upstream** project to the local work area. A ``pull``\n  gets you all the upstream changes, no need to ``SYNC`` your fork on Bitbucket\n  first.\n- automatic setup a default push target on your own mercurial server\n\nAfter that you start developing on a (new) branch and commit as often as you\nlike. Whenever you have time pull and merge with\nthe ``default`` branch.\n\n``repo`` helps you prepare the PR with a single command by:\n\n- pull from upstream and merge with default\n- creating a fresh fork on Bitbucket, named after the branch\n- fast fork clone that fork in a work area\n- grafting the differences of all your commits on the work area\n- (planned: re-running tests)\n- commit and push the changes to your fork on Bitbucket\n\nAny problems during previous steps will stop the process, e.g. if the merge\nfailed.\n\nThe only thing that remains, is actually creating the PR on Bitbucket using\nthe web interface. At which time you can do a final visual inspection of your\nchanges against upstream.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/anthon_van_der_neut/repo", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "repo", "package_url": "https://pypi.org/project/repo/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/repo/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/anthon_van_der_neut/repo"}, "release_url": "https://pypi.org/project/repo/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "repo: handle complex repository workflow in a repeatable way", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The <tt>repo</tt> development tool makes it simple to support a complex workflow\nwhile contributing Pull Requests (PRs) to someone else\u2019s upstream mercurial\nrepositories on bitbucket &lt;<a href=\"http://www.bitbucket.org\" rel=\"nofollow\">http://www.bitbucket.org</a>&gt;.</p>\n<p>Upstream maintainers:</p>\n<ul>\n<li>often prefer the PRs <strong>not</strong> to be on branches, as these clutter\ntheir repository (even when closed at some point).</li>\n<li>not to consist of too many commits/changesets.</li>\n<li>ask you to make additional changes, forcing multiple changesets and possible\nrecreation of a new PR</li>\n</ul>\n<p>Which collides with the practise of committing often during development.</p>\n<hr class=\"docutils\">\n<p><tt>repo</tt> suports starting development on an upstream repository by:</p>\n<ul>\n<li>fast cloning of the <strong>upstream</strong> project to the local work area. A <tt>pull</tt>\ngets you all the upstream changes, no need to <tt>SYNC</tt> your fork on Bitbucket\nfirst.</li>\n<li>automatic setup a default push target on your own mercurial server</li>\n</ul>\n<p>After that you start developing on a (new) branch and commit as often as you\nlike. Whenever you have time pull and merge with\nthe <tt>default</tt> branch.</p>\n<p><tt>repo</tt> helps you prepare the PR with a single command by:</p>\n<ul>\n<li>pull from upstream and merge with default</li>\n<li>creating a fresh fork on Bitbucket, named after the branch</li>\n<li>fast fork clone that fork in a work area</li>\n<li>grafting the differences of all your commits on the work area</li>\n<li>(planned: re-running tests)</li>\n<li>commit and push the changes to your fork on Bitbucket</li>\n</ul>\n<p>Any problems during previous steps will stop the process, e.g. if the merge\nfailed.</p>\n<p>The only thing that remains, is actually creating the PR on Bitbucket using\nthe web interface. At which time you can do a final visual inspection of your\nchanges against upstream.</p>\n\n          </div>"}, "last_serial": 836673, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "50f75f04c9d514fba956a757553fb70e", "sha256": "8a63b627220c0dd5bff75b9dd0f9507adb413674701f00e11de53f553df4bec5"}, "downloads": -1, "filename": "repo-0.1.0.tar.gz", "has_sig": false, "md5_digest": "50f75f04c9d514fba956a757553fb70e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11244, "upload_time": "2013-08-09T16:20:06", "upload_time_iso_8601": "2013-08-09T16:20:06.273666Z", "url": "https://files.pythonhosted.org/packages/0a/c8/17551b376aa62136cac5c0bc8205328f933f9efa1dc4a49e067e630d20a5/repo-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "50f75f04c9d514fba956a757553fb70e", "sha256": "8a63b627220c0dd5bff75b9dd0f9507adb413674701f00e11de53f553df4bec5"}, "downloads": -1, "filename": "repo-0.1.0.tar.gz", "has_sig": false, "md5_digest": "50f75f04c9d514fba956a757553fb70e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11244, "upload_time": "2013-08-09T16:20:06", "upload_time_iso_8601": "2013-08-09T16:20:06.273666Z", "url": "https://files.pythonhosted.org/packages/0a/c8/17551b376aa62136cac5c0bc8205328f933f9efa1dc4a49e067e630d20a5/repo-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:37 2020"}