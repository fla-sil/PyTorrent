{"info": {"author": "Omega Cube, with the help of edin1, based on Chris Davis's graphite-weband Bruno Reni\u00e9's graphite-api", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: System :: Monitoring"], "description": "Overview\n========\n\n`graphite-query <https://github.com/edin1/graphite-query>`_ is a\nlibrary created from\n`graphite-web <https://github.com/graphite-project/graphite-web>`_\nin order to make some of its functionality framework neutral, i.e. to\nrequire as little dependencies as possible.\n\nInstallation\n============\n\nYou can install ``graphite-query`` by running:\n\n::\n\n        pip install graphite-query\n\nYou can also download/clone the github repository, and, inside the\ndirectory where you downloaded ``graphite-query`` run:\n\n::\n\n        python setup.py install\n\nUsage\n=====\n\nThis package provides the functions ``query``, ``eval_qs`` and\n``get_all_leaf_nodes`` (all are part of the ``graphitequery.query``\nsubpackage).\n\n``query``\n---------\n\n``query`` takes both positional and keyword arguments, which in turn are\ntaken from\n`graphite-web's render API <http://graphite.readthedocs.org/en/latest/render_api.html>`_\nexcept for\nthe graph/format arguments, which are, of course, inapplicable to\ngraphite-query.\n\nIn short, its parameters (in positional order) are:\n\n-  ``target``: required, a ``graphite-web`` compatible path (i.e.\n   string), or a ``list`` of paths, see\n   http://graphite.readthedocs.org/en/latest/render_api.html#target for\n   additional documentation.\n-  ``from`` and ``until``: two optional parameters that specify the\n   relative or absolute time period to graph. see\n   http://graphite.readthedocs.org/en/latest/render_api.html#from-until\n-  ``tz``: optional, time zone to convert all times into. If this\n   parameter is not specified, then\n   ``graphitequery.query.settings.TIME_ZONE`` is used (if any). Finally,\n   system's timezone is used if ``TIME_ZONE`` is empty. see\n   http://graphite.readthedocs.org/en/latest/render_api.html#tz\n\nA basic query might look like this:\n\n::\n\n        >>> from graphitequery.query import query\n        >>> print list(query(\"graphite-web.compatible.path.expression\")[0])\n\nThe ``query`` function *always* (even if you supply only one target\npath) returns a ``list`` of instances of\n``graphitequery.query.datalib.TimeSeries``, which in turn is a ``list``-like\nobject whose sub-elements are the values stored by graphite (in a\n``whisper`` database) at particular points in time.\n\n``eval_qs``\n-----------\n\nThis is a helper function: it takes a URL query string as a parameter.\nThe query string must be compatible with the ``graphite-web``'s render\ncontroller. ``eval_qs`` internally converts this string to a parameter\ndictionary that can be passed on to ``query`` and calls ``query``.E.g.:\n\n::\n\n        >>> from graphitequery.query import query, eval_qs\n        >>> print list(eval_qs(\"format=raw&target=*.*.*\")[0])\n        >>> # The above is the same as:\n        >>> print list(query(**{\"target\": \"*.*.*\"}))\n\n``get_all_leaf_nodes``\n----------------------\n\nReturns a ``list`` of all leaf nodes/targets that are found in the\n``settings.STORAGE_DIR``. It doesn't have any parameters.\n\nConfiguring ``graphite-query``\n==============================\n\nThe module ``graphitequery.settings`` can be used to set up some of the\n\"package-wide\" parameters of ``graphite-query``. You can look into that\nmodule to see some of the supported settings. The ``graphitequery.query``\nsubpackage directly imports this module, so one can do a\n``from graphitequery.query import settings`` for convenience.\n\nPerhaps the most important parameter is ``STORAGE_DIR``, the directory\nthat is used to look for data. By default, this directory is set to\n``/opt/graphite/storage``, as this is the default directory used by\n``graphite``. You could set this parameter manually, but it's better to\nuse the provided ``graphitequery.settings.setup_storage_variables`` function,\nas this will set some additional dependant parameters (such as the\n``whisper`` storage directory etc.). Otherwise, one would have to set\nthose parameters manually also.\n\nFinally, it's possible to set the ``STORAGE_DIR`` parameter with the\nenvironment variable ``GRAPHITE_STORAGE_DIR``, prior to\nrunning/importing ``graphite-query``. This variable will trigger the\n``setup_storage_variables`` function to set all of the default\ndirectories relative to ``(GRAPHITE_)STORAGE_DIR``.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Omega-Cube/graphite-query", "keywords": "", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "graphite-query", "package_url": "https://pypi.org/project/graphite-query/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/graphite-query/", "project_urls": {"Homepage": "https://github.com/Omega-Cube/graphite-query"}, "release_url": "https://pypi.org/project/graphite-query/0.11.3/", "requires_dist": null, "requires_python": null, "summary": "Utilities for querying graphite's database", "version": "0.11.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p><a href=\"https://github.com/edin1/graphite-query\" rel=\"nofollow\">graphite-query</a> is a\nlibrary created from\n<a href=\"https://github.com/graphite-project/graphite-web\" rel=\"nofollow\">graphite-web</a>\nin order to make some of its functionality framework neutral, i.e. to\nrequire as little dependencies as possible.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install <tt><span class=\"pre\">graphite-query</span></tt> by running:</p>\n<pre>pip install graphite-query\n</pre>\n<p>You can also download/clone the github repository, and, inside the\ndirectory where you downloaded <tt><span class=\"pre\">graphite-query</span></tt> run:</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>This package provides the functions <tt>query</tt>, <tt>eval_qs</tt> and\n<tt>get_all_leaf_nodes</tt> (all are part of the <tt>graphitequery.query</tt>\nsubpackage).</p>\n<div id=\"query\">\n<h3><tt>query</tt></h3>\n<p><tt>query</tt> takes both positional and keyword arguments, which in turn are\ntaken from\n<a href=\"http://graphite.readthedocs.org/en/latest/render_api.html\" rel=\"nofollow\">graphite-web\u2019s render API</a>\nexcept for\nthe graph/format arguments, which are, of course, inapplicable to\ngraphite-query.</p>\n<p>In short, its parameters (in positional order) are:</p>\n<ul>\n<li><tt>target</tt>: required, a <tt><span class=\"pre\">graphite-web</span></tt> compatible path (i.e.\nstring), or a <tt>list</tt> of paths, see\n<a href=\"http://graphite.readthedocs.org/en/latest/render_api.html#target\" rel=\"nofollow\">http://graphite.readthedocs.org/en/latest/render_api.html#target</a> for\nadditional documentation.</li>\n<li><tt>from</tt> and <tt>until</tt>: two optional parameters that specify the\nrelative or absolute time period to graph. see\n<a href=\"http://graphite.readthedocs.org/en/latest/render_api.html#from-until\" rel=\"nofollow\">http://graphite.readthedocs.org/en/latest/render_api.html#from-until</a></li>\n<li><tt>tz</tt>: optional, time zone to convert all times into. If this\nparameter is not specified, then\n<tt>graphitequery.query.settings.TIME_ZONE</tt> is used (if any). Finally,\nsystem\u2019s timezone is used if <tt>TIME_ZONE</tt> is empty. see\n<a href=\"http://graphite.readthedocs.org/en/latest/render_api.html#tz\" rel=\"nofollow\">http://graphite.readthedocs.org/en/latest/render_api.html#tz</a></li>\n</ul>\n<p>A basic query might look like this:</p>\n<pre>&gt;&gt;&gt; from graphitequery.query import query\n&gt;&gt;&gt; print list(query(\"graphite-web.compatible.path.expression\")[0])\n</pre>\n<p>The <tt>query</tt> function <em>always</em> (even if you supply only one target\npath) returns a <tt>list</tt> of instances of\n<tt>graphitequery.query.datalib.TimeSeries</tt>, which in turn is a <tt>list</tt>-like\nobject whose sub-elements are the values stored by graphite (in a\n<tt>whisper</tt> database) at particular points in time.</p>\n</div>\n<div id=\"eval-qs\">\n<h3><tt>eval_qs</tt></h3>\n<p>This is a helper function: it takes a URL query string as a parameter.\nThe query string must be compatible with the <tt><span class=\"pre\">graphite-web</span></tt>\u2019s render\ncontroller. <tt>eval_qs</tt> internally converts this string to a parameter\ndictionary that can be passed on to <tt>query</tt> and calls <tt>query</tt>.E.g.:</p>\n<pre>&gt;&gt;&gt; from graphitequery.query import query, eval_qs\n&gt;&gt;&gt; print list(eval_qs(\"format=raw&amp;target=*.*.*\")[0])\n&gt;&gt;&gt; # The above is the same as:\n&gt;&gt;&gt; print list(query(**{\"target\": \"*.*.*\"}))\n</pre>\n</div>\n<div id=\"get-all-leaf-nodes\">\n<h3><tt>get_all_leaf_nodes</tt></h3>\n<p>Returns a <tt>list</tt> of all leaf nodes/targets that are found in the\n<tt>settings.STORAGE_DIR</tt>. It doesn\u2019t have any parameters.</p>\n</div>\n</div>\n<div id=\"configuring-graphite-query\">\n<h2>Configuring <tt><span class=\"pre\">graphite-query</span></tt></h2>\n<p>The module <tt>graphitequery.settings</tt> can be used to set up some of the\n\u201cpackage-wide\u201d parameters of <tt><span class=\"pre\">graphite-query</span></tt>. You can look into that\nmodule to see some of the supported settings. The <tt>graphitequery.query</tt>\nsubpackage directly imports this module, so one can do a\n<tt>from graphitequery.query import settings</tt> for convenience.</p>\n<p>Perhaps the most important parameter is <tt>STORAGE_DIR</tt>, the directory\nthat is used to look for data. By default, this directory is set to\n<tt>/opt/graphite/storage</tt>, as this is the default directory used by\n<tt>graphite</tt>. You could set this parameter manually, but it\u2019s better to\nuse the provided <tt>graphitequery.settings.setup_storage_variables</tt> function,\nas this will set some additional dependant parameters (such as the\n<tt>whisper</tt> storage directory etc.). Otherwise, one would have to set\nthose parameters manually also.</p>\n<p>Finally, it\u2019s possible to set the <tt>STORAGE_DIR</tt> parameter with the\nenvironment variable <tt>GRAPHITE_STORAGE_DIR</tt>, prior to\nrunning/importing <tt><span class=\"pre\">graphite-query</span></tt>. This variable will trigger the\n<tt>setup_storage_variables</tt> function to set all of the default\ndirectories relative to <tt>(GRAPHITE_)STORAGE_DIR</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 1253065, "releases": {"0.10.0-alpha": [], "0.10.1": [{"comment_text": "", "digests": {"md5": "3cf47311bc04a1efc2ddf17c0710b09a", "sha256": "2905a111b0afbc624f8f684f3c19f08efa752a2eb596a4497577b63bceff2445"}, "downloads": -1, "filename": "graphite-query-0.10.1.tar.gz", "has_sig": false, "md5_digest": "3cf47311bc04a1efc2ddf17c0710b09a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55343, "upload_time": "2014-04-29T23:39:39", "upload_time_iso_8601": "2014-04-29T23:39:39.664086Z", "url": "https://files.pythonhosted.org/packages/ca/45/4d8ad5d10d874dad78e80f80fa5bd11927c4074329f45daadfe6d5a028df/graphite-query-0.10.1.tar.gz", "yanked": false}], "0.10.10": [{"comment_text": "", "digests": {"md5": "fe7d2983c2542313571086929e2ca890", "sha256": "4051395bf11ed37d0372e73b30b3279c0b3dadea04469b0c6728862a0eb9832d"}, "downloads": -1, "filename": "graphite-query-0.10.10.tar.gz", "has_sig": false, "md5_digest": "fe7d2983c2542313571086929e2ca890", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55278, "upload_time": "2014-05-15T07:46:00", "upload_time_iso_8601": "2014-05-15T07:46:00.499695Z", "url": "https://files.pythonhosted.org/packages/84/5c/227f181e2e5c93afd8197b4d9802dc95a5a144b64317ddb21b53ed7d8bd8/graphite-query-0.10.10.tar.gz", "yanked": false}], "0.10.2": [{"comment_text": "", "digests": {"md5": "52f6d3cbdd4677e3c6f205256c031364", "sha256": "1777dd4a36bde28c21fc99ae29cb8e81f0ae624e561e7192cc8d8bcf7721479a"}, "downloads": -1, "filename": "graphite-query-0.10.2.tar.gz", "has_sig": false, "md5_digest": "52f6d3cbdd4677e3c6f205256c031364", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55163, "upload_time": "2014-04-30T09:44:07", "upload_time_iso_8601": "2014-04-30T09:44:07.647151Z", "url": "https://files.pythonhosted.org/packages/81/96/1485da03e4d06b26f05429929674341d1f3b45aeed5f40dbdf3c6d5ff926/graphite-query-0.10.2.tar.gz", "yanked": false}], "0.10.3": [{"comment_text": "", "digests": {"md5": "8d6f17a27b69f1ae8161590face0fa6d", "sha256": "a0c5fdaeec6de3d9fcc564735227fdd0a4ce5e3645e30666ed975abf0ee29e6f"}, "downloads": -1, "filename": "graphite-query-0.10.3.tar.gz", "has_sig": false, "md5_digest": "8d6f17a27b69f1ae8161590face0fa6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54874, "upload_time": "2014-05-07T10:22:25", "upload_time_iso_8601": "2014-05-07T10:22:25.260644Z", "url": "https://files.pythonhosted.org/packages/80/cf/5e077657437754c19e6c96922410568ec753b4fcb776af4d2e4c98a4c21b/graphite-query-0.10.3.tar.gz", "yanked": false}], "0.10.4": [{"comment_text": "", "digests": {"md5": "2351e14342d91cbbd471797f25485c68", "sha256": "1454290d3c7482c9d5e37e490ec1d1b3a80bcc315f8802aba89e2e60a27fca22"}, "downloads": -1, "filename": "graphite-query-0.10.4.tar.gz", "has_sig": false, "md5_digest": "2351e14342d91cbbd471797f25485c68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54931, "upload_time": "2014-05-07T10:41:10", "upload_time_iso_8601": "2014-05-07T10:41:10.367511Z", "url": "https://files.pythonhosted.org/packages/f2/46/f7601a8e0e709b5157a3a1870153b29483c9b75e25030e85b72f9e40d92f/graphite-query-0.10.4.tar.gz", "yanked": false}], "0.10.5": [{"comment_text": "", "digests": {"md5": "c3d4c1ac5cefb31a1c6314136c21e084", "sha256": "5e7e54a86ed1d01f0dadf23d9a723346ee6f2991e11cfce857a93cea6fdf245c"}, "downloads": -1, "filename": "graphite-query-0.10.5.tar.gz", "has_sig": false, "md5_digest": "c3d4c1ac5cefb31a1c6314136c21e084", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54998, "upload_time": "2014-05-08T08:21:16", "upload_time_iso_8601": "2014-05-08T08:21:16.893937Z", "url": "https://files.pythonhosted.org/packages/ad/ce/91c151b2048574ae33343fbad99c2fe137ec95bfa2f5cd637eb13560416c/graphite-query-0.10.5.tar.gz", "yanked": false}], "0.10.6": [{"comment_text": "", "digests": {"md5": "7080bccb03c55d000e49546b65523d60", "sha256": "e6f0aed7bdf8720ec2ded71004135a58bfa88d0cc0556aa416e42ad7901ef1d4"}, "downloads": -1, "filename": "graphite-query-0.10.6.tar.gz", "has_sig": false, "md5_digest": "7080bccb03c55d000e49546b65523d60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54896, "upload_time": "2014-05-08T08:42:41", "upload_time_iso_8601": "2014-05-08T08:42:41.149926Z", "url": "https://files.pythonhosted.org/packages/97/e4/1e170d222f49020850761ba841f5b60b5664840cb35fbd34ef3ee236acce/graphite-query-0.10.6.tar.gz", "yanked": false}], "0.10.7": [{"comment_text": "", "digests": {"md5": "9b97ab552eb58b4b0c986aa55cb1dbae", "sha256": "81d1c95ffa1ff2150c46fd607dacf5106527f5de233df26acf4438cc276b3932"}, "downloads": -1, "filename": "graphite-query-0.10.7.tar.gz", "has_sig": false, "md5_digest": "9b97ab552eb58b4b0c986aa55cb1dbae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54903, "upload_time": "2014-05-09T08:35:16", "upload_time_iso_8601": "2014-05-09T08:35:16.119509Z", "url": "https://files.pythonhosted.org/packages/83/5f/d8e150a707cc0aad9debeb7520530f89c61186fa5050863debf7fbce4708/graphite-query-0.10.7.tar.gz", "yanked": false}], "0.10.8": [{"comment_text": "", "digests": {"md5": "491013c968697cd8bb9eed6b0cea99fc", "sha256": "55540dc439a3789cd863f936033c5794fb98d5dcf8fb44ecfebb732e7b5eac9d"}, "downloads": -1, "filename": "graphite-query-0.10.8.tar.gz", "has_sig": false, "md5_digest": "491013c968697cd8bb9eed6b0cea99fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54898, "upload_time": "2014-05-12T06:29:39", "upload_time_iso_8601": "2014-05-12T06:29:39.363908Z", "url": "https://files.pythonhosted.org/packages/64/9b/defcaeede54c44a6f2a9ac36d8dde9a3e4b0253e88916439825cb40baf48/graphite-query-0.10.8.tar.gz", "yanked": false}], "0.10.9": [{"comment_text": "", "digests": {"md5": "a2fc32766666947ceabd58157c9f1401", "sha256": "9ff5c62dd941d199053e29eb0bb6c436583c4f11f9db0f344badff8dcb741cbd"}, "downloads": -1, "filename": "graphite-query-0.10.9.tar.gz", "has_sig": false, "md5_digest": "a2fc32766666947ceabd58157c9f1401", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54973, "upload_time": "2014-05-12T09:01:44", "upload_time_iso_8601": "2014-05-12T09:01:44.450910Z", "url": "https://files.pythonhosted.org/packages/02/88/be95c6dec6dd5083ee8dffb684ea23a7c46dce19bfa76e930a38ca3cfd60/graphite-query-0.10.9.tar.gz", "yanked": false}], "0.11.0": [{"comment_text": "", "digests": {"md5": "41dc9dbd4538a354c45b35bf63631cda", "sha256": "7d199d9faba70cb189608d0d6b8b61beaef32c9b35d76077d4c7c02ae94e1ff0"}, "downloads": -1, "filename": "graphite-query-0.11.0.tar.gz", "has_sig": false, "md5_digest": "41dc9dbd4538a354c45b35bf63631cda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57728, "upload_time": "2014-06-15T16:13:55", "upload_time_iso_8601": "2014-06-15T16:13:55.457828Z", "url": "https://files.pythonhosted.org/packages/a6/3d/95ac69a23404284d14120d4ab375b4c8f47529cfeac8d7881069c4ff2e43/graphite-query-0.11.0.tar.gz", "yanked": false}], "0.11.1": [{"comment_text": "", "digests": {"md5": "4ee0f847328f2ef6b38849854801c48c", "sha256": "d676fa87960ff3a960da937764b06fdd9392363620eb7e6d3d8ddc582679279a"}, "downloads": -1, "filename": "graphite-query-0.11.1.tar.gz", "has_sig": false, "md5_digest": "4ee0f847328f2ef6b38849854801c48c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58352, "upload_time": "2014-06-15T16:22:23", "upload_time_iso_8601": "2014-06-15T16:22:23.729757Z", "url": "https://files.pythonhosted.org/packages/e8/b1/569597a8639122d9e1cd32fedee99ecab6ede2e9c0063dc2ec2d0fc841e9/graphite-query-0.11.1.tar.gz", "yanked": false}], "0.11.2": [{"comment_text": "", "digests": {"md5": "92bd49d14beb57e78874a17f1201fec7", "sha256": "4daa36884d0028778d6c8303cb2d46b22d98c965efc85dc9e9a75572c66bde43"}, "downloads": -1, "filename": "graphite-query-0.11.2.tar.gz", "has_sig": false, "md5_digest": "92bd49d14beb57e78874a17f1201fec7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58355, "upload_time": "2014-06-15T17:29:37", "upload_time_iso_8601": "2014-06-15T17:29:37.784653Z", "url": "https://files.pythonhosted.org/packages/71/cc/d3bfd4022edc4c34618c53992e972287d071c5c67b0d3afa429f111d027d/graphite-query-0.11.2.tar.gz", "yanked": false}], "0.11.3": [{"comment_text": "", "digests": {"md5": "f79211bad6d1241f5e793f361f0304cb", "sha256": "ba45979af47305007810e96756090bb7f6e60decf7a887cdc9848f44d3b5195a"}, "downloads": -1, "filename": "graphite-query-0.11.3.tar.gz", "has_sig": false, "md5_digest": "f79211bad6d1241f5e793f361f0304cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50761, "upload_time": "2014-10-09T13:18:51", "upload_time_iso_8601": "2014-10-09T13:18:51.836865Z", "url": "https://files.pythonhosted.org/packages/cf/32/2a22c08cf0d7d529e452a1d1f840cc281d524302471640712e3f5fcf97c6/graphite-query-0.11.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f79211bad6d1241f5e793f361f0304cb", "sha256": "ba45979af47305007810e96756090bb7f6e60decf7a887cdc9848f44d3b5195a"}, "downloads": -1, "filename": "graphite-query-0.11.3.tar.gz", "has_sig": false, "md5_digest": "f79211bad6d1241f5e793f361f0304cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50761, "upload_time": "2014-10-09T13:18:51", "upload_time_iso_8601": "2014-10-09T13:18:51.836865Z", "url": "https://files.pythonhosted.org/packages/cf/32/2a22c08cf0d7d529e452a1d1f840cc281d524302471640712e3f5fcf97c6/graphite-query-0.11.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:36 2020"}