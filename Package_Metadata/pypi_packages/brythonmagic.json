{"info": {"author": "Kikocorreoso", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Text Processing :: Markup :: HTML"], "description": "Brythonmagic\n============\n\nBrython magic for the Jupyter notebook.\n\nThe brythonmagic provides you a cell magic, ``%%brython``, to run\nbrython code and show the results in a html ``div`` tag below the code\ncell. Best way to start with Brython is to check `the Brython docs in\ntheir home page <http://brython.info/doc/en/index.html>`__.\n\nTested on\n---------\n\nThe brythonmagic extension has been tested on:\n\n-  Jupyter versions >= (4, 0, 0, '')\n\n-  Python version >= 3.3 and == 2.7\n\n-  Brython versions >= (2,0,0) \n\nInstallation\n------------\n\nYou should have Jupyter (notebook) already installed in order to use\nBrythonmagic. In case you don't have Jupyter installed you can follow\nthe instructions on the `Jupyter official\npage <http://jupyter.readthedocs.org/en/latest/index.html>`__.\n\nTo install brythonmagic itself just type the following:\n\n.. code:: python\n\n    pip install brythonmagic\n\nor download this repo and on the brythonmagic downloaded folder type:\n\n.. code:: python\n\n    python setup.py install\n\nThen, load the extension:\n\n.. code:: python\n\n    %load_ext brythonmagic\n\nAnd, finally, load the stable brython js lib in the notebook using the \nfollowing code:\n\n.. code:: python\n\n    from brythonmagic import load_brython_stable\n    load_brython_stable()\n\nIn case you want to use the development brython js lib in the notebook \nuse the following code:\n\n.. code:: python\n\n    from brythonmagic import load_brython_dev\n    load_brython_dev()\n\nIf you have any problem with the installation, please, open an\n`issue <https://github.com/kikocorreoso/brythonmagic/issues>`__.\n\nWARNING\n-------\n\nIn order to load javascript libraries in a safety way you should try to\nuse https instead of http when possible (read more\n`here <http://mail.scipy.org/pipermail/ipython-dev/2014-July/014572.html>`__).\nIf you don't trust the source and/or the source cannot be loaded using\nhttps then you could download the javascript library and load it from a\nlocal location.\n\nBrythonmagic doesn't load any javascript library and the user should\ntake care about the security and should use trusted sources.\n\nYou can load third party javascript libraries using the following code:\n\n.. code:: python\n\n    from brythonmagic import load_js_lib\n    load_js_lib(\"https://url/to/your/lib.js\")\n\nUsage\n-----\n\nexample:\n\n.. code:: python\n\n    %%brython -c zone\n    # First of all, the import of some libraries\n    from browser import document, html\n\n    # All the elements will be inserted in the div with the \"zone\" id\n    zone = document['zone']\n\n    # We create a new div element\n    newdiv = html.DIV(Id = \"new-div\")\n    # Now we add some style\n    newdiv.style = {\"padding\": \"5px\", \n               \"backgroundColor\": \"#ADD8E6\"}\n\n    # We create a new link and add the link to a string\n    blink = html.A('brython',href=\"http://brython.info\")\n    text = \"Brython is really cool, look at \"+ blink + \" for more\"\n\n    # Now we add the text to the div with id=\"new-div\"\n    newdiv <= html.DIV(text)\n\n    # Finally, we add the newdiv to the outer div with id=\"zone\"\n    zone <= newdiv\n\nYou can use several options:\n\n-  -p, --print: will show you the generated html code below the results\n   obtained from the brython code.\n\n-  -c, --container: you can define the name of the ``div`` container in\n   case you want to 'play' with it in other cell. If you don't define an\n   output the ``div`` will have an ``id`` with the following format\n   'brython-container-[random number between 0 and 999999]'. Just one\n   container name is accepted. If you pass more than one only the first\n   one will be used and a warning will raise.\n\n-  -i, --input: you can pass variables defined in the Python namespace\n   separated by whitespaces. If you pass a python list it will be\n   converted to a brython list, a python tuple will be converted to a\n   brython tuple, a python dict will be converted to a brython dict, a\n   python string will be converted to a brython string.\n\n-  -h, --html: you can pass a string with html markup code. This html\n   code will be inserted inside the div container. In this way you can\n   avoid the generation of HTML markup code via a Brython script so you\n   can separate the layout from the 'action'. Just one html markup code\n   string name is accepted. If you pass more than one only the first one\n   will be used and a warning will raise.\n\n-  -s, --script: Use this option to provide an id to the script defined\n   in the Brython code cell. Also, this value could be used to run the\n   code of this cell in other brython cells. Just one script name is\n   accepted. If you pass more than one only the first one will be used\n   and a warning will raise.\n\n-  -S, --scripts: Use this option to run code previously defined in\n   other Brython code cells. The values should be the provided values in\n   the -s/--script option in other Brython code cells.\n\n-  -f, --fiddle: With this option, the code in the cell will be\n   automatically uploaded to\n   `gist.github.com/ <https://gist.github.com/>`__ as an anonymous gist\n   with several files in it. This files will be used to create an\n   anonymous 'fiddle' on `jsfiddle.net <http://jsfiddle.net>`__.\n   Finally, some links will be printed in the output linking to the gist\n   and the fiddle. See an example here\n   (https://gist.github.com/anonymous/b664e8b4617afc09db6c and\n   http://jsfiddle.net/gh/gist/library/pure/b664e8b4617afc09db6c/)\n\n-  -e, --embedfiddle: With this option, the code in the cell will be\n   automatically uploaded to\n   `gist.github.com/ <https://gist.github.com/>`__ as an anonymous gist\n   with several files in it. This files will be used to create an\n   anonymous 'fiddle' on `jsfiddle.net <http://jsfiddle.net>`__.\n   Finally, some links will be printed in the output linking to the gist\n   and the fiddle and an iframe will be created showing the fiddle on\n   `jsfiddle.net <http://jsfiddle.net>`__.\n\n`WARNING <#warning>`__ This options may change as the brythonmagic\ndepending the development of Brython and/or Jupyter.\n\nTo see some examples download the notebooks available in the repository\nand run it locally or see it in the\n`nbviewer <http://nbviewer.jupyter.org/urls/raw.githubusercontent.com/kikocorreoso/brythonmagic/master/notebooks/Brython%20usage%20in%20the%20IPython%20notebook.ipynb?create=1>`__\n(you will lose the interactivity if you choose the second option).\nAlso, you can take a look on the following video:\nhttp://youtu.be/adQzjuUX0kw\n\nExample notebooks\n-----------------\n\n-  `General usage of\n   Brythonmagic <http://nbviewer.jupyter.org/github/kikocorreoso/brythonmagic/blob/master/notebooks/Brython%20usage%20in%20the%20IPython%20notebook.ipynb>`__.\n\n-  `An Openlayers\n   tutorial <http://nbviewer.jupyter.org/github/kikocorreoso/brythonmagic/blob/master/notebooks/OpenLayers%20(python)%20tutorial.ipynb>`__.\n\n-  `A Highcharts\n   tutorial <http://nbviewer.jupyter.org/github/kikocorreoso/brythonmagic/blob/master/notebooks/Highcharts%20(python)%20tutorial.ipynb>`__\n\nSupport\n-------\n\nIf you need Brython support, please, ask here:\nhttps://groups.google.com/forum/?fromgroups=#!forum/brython\n\nIf you need Jupyter support, please, ask here:\nhttp://mail.scipy.org/mailman/listinfo/ipython-dev\n\nIf you find a bug or want to propose a new feature open a new issue\nhere: https://github.com/kikocorreoso/brythonmagic/issues\n\nIf you want to improve the code, fork, commit and send a PR ;\u00b7D", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kikocorreoso/brythonmagic", "keywords": "brython ipython jupyter notebook javascript", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "brythonmagic", "package_url": "https://pypi.org/project/brythonmagic/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/brythonmagic/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/kikocorreoso/brythonmagic"}, "release_url": "https://pypi.org/project/brythonmagic/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Magics to use brython in Jupyter notebook.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Brython magic for the Jupyter notebook.</p>\n<p>The brythonmagic provides you a cell magic, <tt>%%brython</tt>, to run\nbrython code and show the results in a html <tt>div</tt> tag below the code\ncell. Best way to start with Brython is to check <a href=\"http://brython.info/doc/en/index.html\" rel=\"nofollow\">the Brython docs in\ntheir home page</a>.</p>\n<div id=\"tested-on\">\n<h2>Tested on</h2>\n<p>The brythonmagic extension has been tested on:</p>\n<ul>\n<li>Jupyter versions &gt;= (4, 0, 0, \u2018\u2019)</li>\n<li>Python version &gt;= 3.3 and == 2.7</li>\n<li>Brython versions &gt;= (2,0,0)</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You should have Jupyter (notebook) already installed in order to use\nBrythonmagic. In case you don\u2019t have Jupyter installed you can follow\nthe instructions on the <a href=\"http://jupyter.readthedocs.org/en/latest/index.html\" rel=\"nofollow\">Jupyter official\npage</a>.</p>\n<p>To install brythonmagic itself just type the following:</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">brythonmagic</span>\n</pre>\n<p>or download this repo and on the brythonmagic downloaded folder type:</p>\n<pre><span class=\"n\">python</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">install</span>\n</pre>\n<p>Then, load the extension:</p>\n<pre><span class=\"o\">%</span><span class=\"n\">load_ext</span> <span class=\"n\">brythonmagic</span>\n</pre>\n<p>And, finally, load the stable brython js lib in the notebook using the\nfollowing code:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">brythonmagic</span> <span class=\"kn\">import</span> <span class=\"n\">load_brython_stable</span>\n<span class=\"n\">load_brython_stable</span><span class=\"p\">()</span>\n</pre>\n<p>In case you want to use the development brython js lib in the notebook\nuse the following code:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">brythonmagic</span> <span class=\"kn\">import</span> <span class=\"n\">load_brython_dev</span>\n<span class=\"n\">load_brython_dev</span><span class=\"p\">()</span>\n</pre>\n<p>If you have any problem with the installation, please, open an\n<a href=\"https://github.com/kikocorreoso/brythonmagic/issues\" rel=\"nofollow\">issue</a>.</p>\n</div>\n<div id=\"warning\">\n<h2>WARNING</h2>\n<p>In order to load javascript libraries in a safety way you should try to\nuse https instead of http when possible (read more\n<a href=\"http://mail.scipy.org/pipermail/ipython-dev/2014-July/014572.html\" rel=\"nofollow\">here</a>).\nIf you don\u2019t trust the source and/or the source cannot be loaded using\nhttps then you could download the javascript library and load it from a\nlocal location.</p>\n<p>Brythonmagic doesn\u2019t load any javascript library and the user should\ntake care about the security and should use trusted sources.</p>\n<p>You can load third party javascript libraries using the following code:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">brythonmagic</span> <span class=\"kn\">import</span> <span class=\"n\">load_js_lib</span>\n<span class=\"n\">load_js_lib</span><span class=\"p\">(</span><span class=\"s2\">\"https://url/to/your/lib.js\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>example:</p>\n<pre><span class=\"o\">%%</span><span class=\"n\">brython</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"n\">zone</span>\n<span class=\"c1\"># First of all, the import of some libraries</span>\n<span class=\"kn\">from</span> <span class=\"nn\">browser</span> <span class=\"kn\">import</span> <span class=\"n\">document</span><span class=\"p\">,</span> <span class=\"n\">html</span>\n\n<span class=\"c1\"># All the elements will be inserted in the div with the \"zone\" id</span>\n<span class=\"n\">zone</span> <span class=\"o\">=</span> <span class=\"n\">document</span><span class=\"p\">[</span><span class=\"s1\">'zone'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># We create a new div element</span>\n<span class=\"n\">newdiv</span> <span class=\"o\">=</span> <span class=\"n\">html</span><span class=\"o\">.</span><span class=\"n\">DIV</span><span class=\"p\">(</span><span class=\"n\">Id</span> <span class=\"o\">=</span> <span class=\"s2\">\"new-div\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># Now we add some style</span>\n<span class=\"n\">newdiv</span><span class=\"o\">.</span><span class=\"n\">style</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"padding\"</span><span class=\"p\">:</span> <span class=\"s2\">\"5px\"</span><span class=\"p\">,</span>\n           <span class=\"s2\">\"backgroundColor\"</span><span class=\"p\">:</span> <span class=\"s2\">\"#ADD8E6\"</span><span class=\"p\">}</span>\n\n<span class=\"c1\"># We create a new link and add the link to a string</span>\n<span class=\"n\">blink</span> <span class=\"o\">=</span> <span class=\"n\">html</span><span class=\"o\">.</span><span class=\"n\">A</span><span class=\"p\">(</span><span class=\"s1\">'brython'</span><span class=\"p\">,</span><span class=\"n\">href</span><span class=\"o\">=</span><span class=\"s2\">\"http://brython.info\"</span><span class=\"p\">)</span>\n<span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s2\">\"Brython is really cool, look at \"</span><span class=\"o\">+</span> <span class=\"n\">blink</span> <span class=\"o\">+</span> <span class=\"s2\">\" for more\"</span>\n\n<span class=\"c1\"># Now we add the text to the div with id=\"new-div\"</span>\n<span class=\"n\">newdiv</span> <span class=\"o\">&lt;=</span> <span class=\"n\">html</span><span class=\"o\">.</span><span class=\"n\">DIV</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Finally, we add the newdiv to the outer div with id=\"zone\"</span>\n<span class=\"n\">zone</span> <span class=\"o\">&lt;=</span> <span class=\"n\">newdiv</span>\n</pre>\n<p>You can use several options:</p>\n<ul>\n<li>-p, \u2013print: will show you the generated html code below the results\nobtained from the brython code.</li>\n<li>-c, \u2013container: you can define the name of the <tt>div</tt> container in\ncase you want to \u2018play\u2019 with it in other cell. If you don\u2019t define an\noutput the <tt>div</tt> will have an <tt>id</tt> with the following format\n\u2018brython-container-[random number between 0 and 999999]\u2019. Just one\ncontainer name is accepted. If you pass more than one only the first\none will be used and a warning will raise.</li>\n<li>-i, \u2013input: you can pass variables defined in the Python namespace\nseparated by whitespaces. If you pass a python list it will be\nconverted to a brython list, a python tuple will be converted to a\nbrython tuple, a python dict will be converted to a brython dict, a\npython string will be converted to a brython string.</li>\n<li>-h, \u2013html: you can pass a string with html markup code. This html\ncode will be inserted inside the div container. In this way you can\navoid the generation of HTML markup code via a Brython script so you\ncan separate the layout from the \u2018action\u2019. Just one html markup code\nstring name is accepted. If you pass more than one only the first one\nwill be used and a warning will raise.</li>\n<li>-s, \u2013script: Use this option to provide an id to the script defined\nin the Brython code cell. Also, this value could be used to run the\ncode of this cell in other brython cells. Just one script name is\naccepted. If you pass more than one only the first one will be used\nand a warning will raise.</li>\n<li>-S, \u2013scripts: Use this option to run code previously defined in\nother Brython code cells. The values should be the provided values in\nthe -s/\u2013script option in other Brython code cells.</li>\n<li>-f, \u2013fiddle: With this option, the code in the cell will be\nautomatically uploaded to\n<a href=\"https://gist.github.com/\" rel=\"nofollow\">gist.github.com/</a> as an anonymous gist\nwith several files in it. This files will be used to create an\nanonymous \u2018fiddle\u2019 on <a href=\"http://jsfiddle.net\" rel=\"nofollow\">jsfiddle.net</a>.\nFinally, some links will be printed in the output linking to the gist\nand the fiddle. See an example here\n(<a href=\"https://gist.github.com/anonymous/b664e8b4617afc09db6c\" rel=\"nofollow\">https://gist.github.com/anonymous/b664e8b4617afc09db6c</a> and\n<a href=\"http://jsfiddle.net/gh/gist/library/pure/b664e8b4617afc09db6c/\" rel=\"nofollow\">http://jsfiddle.net/gh/gist/library/pure/b664e8b4617afc09db6c/</a>)</li>\n<li>-e, \u2013embedfiddle: With this option, the code in the cell will be\nautomatically uploaded to\n<a href=\"https://gist.github.com/\" rel=\"nofollow\">gist.github.com/</a> as an anonymous gist\nwith several files in it. This files will be used to create an\nanonymous \u2018fiddle\u2019 on <a href=\"http://jsfiddle.net\" rel=\"nofollow\">jsfiddle.net</a>.\nFinally, some links will be printed in the output linking to the gist\nand the fiddle and an iframe will be created showing the fiddle on\n<a href=\"http://jsfiddle.net\" rel=\"nofollow\">jsfiddle.net</a>.</li>\n</ul>\n<p><a href=\"#warning\" rel=\"nofollow\">WARNING</a> This options may change as the brythonmagic\ndepending the development of Brython and/or Jupyter.</p>\n<p>To see some examples download the notebooks available in the repository\nand run it locally or see it in the\n<a href=\"http://nbviewer.jupyter.org/urls/raw.githubusercontent.com/kikocorreoso/brythonmagic/master/notebooks/Brython%20usage%20in%20the%20IPython%20notebook.ipynb?create=1\" rel=\"nofollow\">nbviewer</a>\n(you will lose the interactivity if you choose the second option).\nAlso, you can take a look on the following video:\n<a href=\"http://youtu.be/adQzjuUX0kw\" rel=\"nofollow\">http://youtu.be/adQzjuUX0kw</a></p>\n</div>\n<div id=\"example-notebooks\">\n<h2>Example notebooks</h2>\n<ul>\n<li><a href=\"http://nbviewer.jupyter.org/github/kikocorreoso/brythonmagic/blob/master/notebooks/Brython%20usage%20in%20the%20IPython%20notebook.ipynb\" rel=\"nofollow\">General usage of\nBrythonmagic</a>.</li>\n<li><a href=\"http://nbviewer.jupyter.org/github/kikocorreoso/brythonmagic/blob/master/notebooks/OpenLayers%20(python)%20tutorial.ipynb\" rel=\"nofollow\">An Openlayers\ntutorial</a>.</li>\n<li><a href=\"http://nbviewer.jupyter.org/github/kikocorreoso/brythonmagic/blob/master/notebooks/Highcharts%20(python)%20tutorial.ipynb\" rel=\"nofollow\">A Highcharts\ntutorial</a></li>\n</ul>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>If you need Brython support, please, ask here:\n<a href=\"https://groups.google.com/forum/?fromgroups=#!forum/brython\" rel=\"nofollow\">https://groups.google.com/forum/?fromgroups=#!forum/brython</a></p>\n<p>If you need Jupyter support, please, ask here:\n<a href=\"http://mail.scipy.org/mailman/listinfo/ipython-dev\" rel=\"nofollow\">http://mail.scipy.org/mailman/listinfo/ipython-dev</a></p>\n<p>If you find a bug or want to propose a new feature open a new issue\nhere: <a href=\"https://github.com/kikocorreoso/brythonmagic/issues\" rel=\"nofollow\">https://github.com/kikocorreoso/brythonmagic/issues</a></p>\n<p>If you want to improve the code, fork, commit and send a PR ;\u00b7D</p>\n</div>\n\n          </div>"}, "last_serial": 2079697, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "305655b341becc9fdfe3c92b529a0344", "sha256": "8776af5c22cefd1335eeb8795c56f736a6165929a81db256bc7fe4288c27ff38"}, "downloads": -1, "filename": "brythonmagic-0.1.tar.gz", "has_sig": false, "md5_digest": "305655b341becc9fdfe3c92b529a0344", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8201, "upload_time": "2014-12-09T16:29:50", "upload_time_iso_8601": "2014-12-09T16:29:50.916190Z", "url": "https://files.pythonhosted.org/packages/3c/58/149882f6750c5583f50779058f39b4ecc6bd04b9e3eabe0b97b4ac54d222/brythonmagic-0.1.tar.gz", "yanked": false}], "0.1.0": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "a85d37a11b08357e96ae54bc4be7febb", "sha256": "f75e35db7685cba7e2e5090a6eda93686437e575bff55379e482b078a3b21cc4"}, "downloads": -1, "filename": "brythonmagic-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a85d37a11b08357e96ae54bc4be7febb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7869, "upload_time": "2015-03-25T19:41:54", "upload_time_iso_8601": "2015-03-25T19:41:54.752848Z", "url": "https://files.pythonhosted.org/packages/b4/32/296cbdd5c230c7a68179ebbff3d8b0ad295e22e5bf4cd80ac4951428994d/brythonmagic-0.1.1.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "5404951b2eae390b17fba245af38dd4e", "sha256": "1042477e4df57fb0c32501bb17f55fe79a53efed7e0c4ecac6b772f60008a55b"}, "downloads": -1, "filename": "brythonmagic-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5404951b2eae390b17fba245af38dd4e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11573, "upload_time": "2016-04-23T07:06:42", "upload_time_iso_8601": "2016-04-23T07:06:42.849044Z", "url": "https://files.pythonhosted.org/packages/22/6b/6bbd31e03506e032fb9656fca0b30b25de798158a6746b9e27523b35b0f0/brythonmagic-0.2.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5404951b2eae390b17fba245af38dd4e", "sha256": "1042477e4df57fb0c32501bb17f55fe79a53efed7e0c4ecac6b772f60008a55b"}, "downloads": -1, "filename": "brythonmagic-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5404951b2eae390b17fba245af38dd4e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11573, "upload_time": "2016-04-23T07:06:42", "upload_time_iso_8601": "2016-04-23T07:06:42.849044Z", "url": "https://files.pythonhosted.org/packages/22/6b/6bbd31e03506e032fb9656fca0b30b25de798158a6746b9e27523b35b0f0/brythonmagic-0.2.1-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 22:36:13 2020"}