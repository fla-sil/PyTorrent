{"info": {"author": "Benoit Chesneau", "author_email": "benoitc@e-engura.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Other Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Internet", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "About\n-----\n\ngrainbow 'Green Rainbows' is a WSGI HTTP Server for UNIX, for sleepy application. It's based on `Gunicorn`_ but it's designed to handle applications that expect long request/response times and/or slow clients. For other applications, you should use gunicorn, since it's easier to debug.\n\nFeatures\n========\n\n* Designed for `WSGI <http://www.python.org/dev/peps/pep-0333/>`_\n* Built on `Gunicorn`_, inheriting its process/socket management features such as transparent upgrades and Python configuration DSL.\n* Decode chunked transfers on-the-fly, allowing upload progress notifications or\n  stream-based protocols over HTTP\n* Support for `Eventlet`_ and `Gevent`_ .\n\n\nApplications\n============\n\n* Websockets (see `example <http://github.com/benoitc/grainbows/blob/master/examples/websocket.py>`_), see the `demo <http://vimeo.com/10111929>`_\n* Reverse proxy implementation (with `Restkit WSGI proxy <http://benoitc.github.com/restkit/wsgi_proxy.html>`_)\n* Comet\n* Long Polling\n* ...\n\nInstall\n=======\n\nGrainbows requires Python 2.x superior to 2.5.\n\nInstall from sources::\n\n    $ python setup.py install\n\nOr from Pypi::\n\n  $ easy_install -U grainbows\n\n  \nBy default grainbows use `Gunicorn`_ arbiter, so you won't have any benefits. You need to install `Eventlet`_ or  `Gevent`_ to use concurrency features.\n\ndo::\n\n  $ easy_install -U eventlet\n\nReplace `eventlet` by **gevent** if you want to use `gevent`.\n  \n  \nUsage\n=====\n\nfor WSGI application:\n+++++++++++++++++++++\n\nTo launch the `example application <http://github.com/benoitc/grainbows/blob/master/examples/websocket.py>`_ packaged with Grainbows::\n\n    $ cd /path/to/grainbows/examples/\n    $ grainbows websocket:app\n    \nand then go on `http://localhost:8000` to see the result.\n\n*Note* : by default the configuration is set to use eventlet. If you want to test with gevent, edit `grainbows.conf.py` file and replace `use=\"eventlet\"` by `use=\"gevent\"`.\n\nThe module ``test_keepalive:app`` specifies the complete module name and WSGI callable. You can replace it with anything that is available on your ``PYTHONPATH`` like such::\n\n    $ cd ~/\n    $ grainbows -c /path/to/configfile.py awesomeproject.wsgi.main:main_app\n    \n\nFull command line usage::\n\n  $ grainbows --help\n  Usage: grainbows [OPTIONS] APP_MODULE\n\n  Options:\n    --use=USE             method to use (eventlet, gevent)\n    -c CONFIG, --config=CONFIG\n                          Config file. [none]\n    -b BIND, --bind=BIND  Adress to listen on. Ex. 127.0.0.1:8000 or\n                          unix:/tmp/gunicorn.sock\n    -w WORKERS, --workers=WORKERS\n                          Number of workers to spawn. [1]\n    -p PIDFILE, --pid=PIDFILE\n                          set the background PID FILE\n    -D, --daemon          Run daemonized in the background.\n    -m UMASK, --umask=UMASK\n                          Define umask of daemon process\n    -u USER, --user=USER  Change worker user\n    -g GROUP, --group=GROUP\n                          Change worker group\n    -n PROC_NAME, --name=PROC_NAME\n                          Process name\n    --log-level=LOGLEVEL  Log level below which to silence messages. [info]\n    --log-file=LOGFILE    Log to a file. - equals stdout. [-]\n    -d, --debug           Debug mode. only 1 worker.\n    --version             show program's version number and exit\n    -h, --help            show this help message and exit\n  \n\nFor `Django <http://www.djangoproject.com>`_ applications use the `grainbows_django` command line and for `Paste <http://pythonpaste.org>`_ compatible applications (`Pylons`_, `TurboGears 2`_, ...) use `grainbows_paste`. See the `usage <http://gunicorn.org/usage.html>`_ page on Gunicorn website for more information.\n\n    \n\nConfiguration file\n++++++++++++++++++\n\nA configuration file is needed to setup `Grainbows` specific settings. An example can be found `here <http://github.com/benoitc/grainbows/blob/master/examples/grainbows.conf.py>`_ ::\n\n  use = \"eventlet\"\n  worker_connections = 1000\n  \nYou can also configure other settings, see the `Gunicorn configuration <http://gunicorn.org/configuration.html>`_ page for more details.\n\nDevelopment\n===========\n\nYou can get the source on `Github <http://github.com>`_ : \n\n  http://github.com/benoitc/grainbows/\n  \nAnd send your feedback on `the tracker <http://github.com/benoitc/grainbows/issues>`_ .\n  \n\n.. _Gunicorn: http://gunicorn.org\n.. _Eventlet: http://eventlet.net\n.. _Gevent: http://gevent.org\n.. _Pylons: http://pylonshq.com/\n.. _Turbogears 2: http://turbogears.org/2.0/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/benoitc/grainbows", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "grainbows", "package_url": "https://pypi.org/project/grainbows/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/grainbows/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/benoitc/grainbows"}, "release_url": "https://pypi.org/project/grainbows/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "WSGI HTTP Server for UNIX", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>grainbow \u2018Green Rainbows\u2019 is a WSGI HTTP Server for UNIX, for sleepy application. It\u2019s based on <a href=\"http://gunicorn.org\" rel=\"nofollow\">Gunicorn</a> but it\u2019s designed to handle applications that expect long request/response times and/or slow clients. For other applications, you should use gunicorn, since it\u2019s easier to debug.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Designed for <a href=\"http://www.python.org/dev/peps/pep-0333/\" rel=\"nofollow\">WSGI</a></li>\n<li>Built on <a href=\"http://gunicorn.org\" rel=\"nofollow\">Gunicorn</a>, inheriting its process/socket management features such as transparent upgrades and Python configuration DSL.</li>\n<li>Decode chunked transfers on-the-fly, allowing upload progress notifications or\nstream-based protocols over HTTP</li>\n<li>Support for <a href=\"http://eventlet.net\" rel=\"nofollow\">Eventlet</a> and <a href=\"http://gevent.org\" rel=\"nofollow\">Gevent</a> .</li>\n</ul>\n</div>\n<div id=\"applications\">\n<h2>Applications</h2>\n<ul>\n<li>Websockets (see <a href=\"http://github.com/benoitc/grainbows/blob/master/examples/websocket.py\" rel=\"nofollow\">example</a>), see the <a href=\"http://vimeo.com/10111929\" rel=\"nofollow\">demo</a></li>\n<li>Reverse proxy implementation (with <a href=\"http://benoitc.github.com/restkit/wsgi_proxy.html\" rel=\"nofollow\">Restkit WSGI proxy</a>)</li>\n<li>Comet</li>\n<li>Long Polling</li>\n<li>\u2026</li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Grainbows requires Python 2.x superior to 2.5.</p>\n<p>Install from sources:</p>\n<pre>$ python setup.py install\n</pre>\n<p>Or from Pypi:</p>\n<pre>$ easy_install -U grainbows\n</pre>\n<p>By default grainbows use <a href=\"http://gunicorn.org\" rel=\"nofollow\">Gunicorn</a> arbiter, so you won\u2019t have any benefits. You need to install <a href=\"http://eventlet.net\" rel=\"nofollow\">Eventlet</a> or  <a href=\"http://gevent.org\" rel=\"nofollow\">Gevent</a> to use concurrency features.</p>\n<p>do:</p>\n<pre>$ easy_install -U eventlet\n</pre>\n<p>Replace <cite>eventlet</cite> by <strong>gevent</strong> if you want to use <cite>gevent</cite>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"for-wsgi-application\">\n<h3>for WSGI application:</h3>\n<p>To launch the <a href=\"http://github.com/benoitc/grainbows/blob/master/examples/websocket.py\" rel=\"nofollow\">example application</a> packaged with Grainbows:</p>\n<pre>$ cd /path/to/grainbows/examples/\n$ grainbows websocket:app\n</pre>\n<p>and then go on <cite>http://localhost:8000</cite> to see the result.</p>\n<p><em>Note</em> : by default the configuration is set to use eventlet. If you want to test with gevent, edit <cite>grainbows.conf.py</cite> file and replace <cite>use=\u201deventlet\u201d</cite> by <cite>use=\u201dgevent\u201d</cite>.</p>\n<p>The module <tt>test_keepalive:app</tt> specifies the complete module name and WSGI callable. You can replace it with anything that is available on your <tt>PYTHONPATH</tt> like such:</p>\n<pre>$ cd ~/\n$ grainbows -c /path/to/configfile.py awesomeproject.wsgi.main:main_app\n</pre>\n<p>Full command line usage:</p>\n<pre>$ grainbows --help\nUsage: grainbows [OPTIONS] APP_MODULE\n\nOptions:\n  --use=USE             method to use (eventlet, gevent)\n  -c CONFIG, --config=CONFIG\n                        Config file. [none]\n  -b BIND, --bind=BIND  Adress to listen on. Ex. 127.0.0.1:8000 or\n                        unix:/tmp/gunicorn.sock\n  -w WORKERS, --workers=WORKERS\n                        Number of workers to spawn. [1]\n  -p PIDFILE, --pid=PIDFILE\n                        set the background PID FILE\n  -D, --daemon          Run daemonized in the background.\n  -m UMASK, --umask=UMASK\n                        Define umask of daemon process\n  -u USER, --user=USER  Change worker user\n  -g GROUP, --group=GROUP\n                        Change worker group\n  -n PROC_NAME, --name=PROC_NAME\n                        Process name\n  --log-level=LOGLEVEL  Log level below which to silence messages. [info]\n  --log-file=LOGFILE    Log to a file. - equals stdout. [-]\n  -d, --debug           Debug mode. only 1 worker.\n  --version             show program's version number and exit\n  -h, --help            show this help message and exit\n</pre>\n<p>For <a href=\"http://www.djangoproject.com\" rel=\"nofollow\">Django</a> applications use the <cite>grainbows_django</cite> command line and for <a href=\"http://pythonpaste.org\" rel=\"nofollow\">Paste</a> compatible applications (<a href=\"http://pylonshq.com/\" rel=\"nofollow\">Pylons</a>, <a href=\"http://turbogears.org/2.0/\" rel=\"nofollow\">TurboGears 2</a>, \u2026) use <cite>grainbows_paste</cite>. See the <a href=\"http://gunicorn.org/usage.html\" rel=\"nofollow\">usage</a> page on Gunicorn website for more information.</p>\n</div>\n<div id=\"configuration-file\">\n<h3>Configuration file</h3>\n<p>A configuration file is needed to setup <cite>Grainbows</cite> specific settings. An example can be found <a href=\"http://github.com/benoitc/grainbows/blob/master/examples/grainbows.conf.py\" rel=\"nofollow\">here</a></p>\n<pre>use = \"eventlet\"\nworker_connections = 1000\n</pre>\n<p>You can also configure other settings, see the <a href=\"http://gunicorn.org/configuration.html\" rel=\"nofollow\">Gunicorn configuration</a> page for more details.</p>\n</div>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>You can get the source on <a href=\"http://github.com\" rel=\"nofollow\">Github</a> :</p>\n<blockquote>\n<a href=\"http://github.com/benoitc/grainbows/\" rel=\"nofollow\">http://github.com/benoitc/grainbows/</a></blockquote>\n<p>And send your feedback on <a href=\"http://github.com/benoitc/grainbows/issues\" rel=\"nofollow\">the tracker</a> .</p>\n</div>\n\n          </div>"}, "last_serial": 792659, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a6b709e3ad2d0d7d636932021cbc6493", "sha256": "83c54ebe1a1748f6e8367bf268088db6db8ea02d726cf98f12e449f8a8303f88"}, "downloads": -1, "filename": "grainbows-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a6b709e3ad2d0d7d636932021cbc6493", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7239, "upload_time": "2010-03-14T01:03:19", "upload_time_iso_8601": "2010-03-14T01:03:19.826736Z", "url": "https://files.pythonhosted.org/packages/bb/6c/0da54cc46f12aaf40d16f931388d7a008ec304f565f868cf701d29a68722/grainbows-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a7e2c67af8ccce4fbaa95238289fb3b7", "sha256": "bbe19b0cbae8cb7925f102682a123b0ad9c07f373b21d43267f160743cb429ce"}, "downloads": -1, "filename": "grainbows-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a7e2c67af8ccce4fbaa95238289fb3b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8408, "upload_time": "2010-03-14T09:53:36", "upload_time_iso_8601": "2010-03-14T09:53:36.999548Z", "url": "https://files.pythonhosted.org/packages/54/bb/df4dbbd102ba8b173d8e8c886d4af23960bb957e374b0ef57c5125f2d63d/grainbows-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "dff3d6241689a6217b9f1a36e4c0ee82", "sha256": "70a661acecf19166ca5aaac279663bcb5e0c239684b35511fa71fcbdf93a5b61"}, "downloads": -1, "filename": "grainbows-0.1.2.tar.gz", "has_sig": false, "md5_digest": "dff3d6241689a6217b9f1a36e4c0ee82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8564, "upload_time": "2010-03-14T13:42:41", "upload_time_iso_8601": "2010-03-14T13:42:41.956949Z", "url": "https://files.pythonhosted.org/packages/18/ce/ae5fcef577e10baba7626d9c6380c54681a73c72d46c7caa14e7c2e4fce4/grainbows-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "d1c97f804a4e8be9dafde667104d38e5", "sha256": "d98da3ba2edd4e56989858c597625ee61cf31d79bc1961ff43996572cb350cd6"}, "downloads": -1, "filename": "grainbows-0.1.3.tar.gz", "has_sig": false, "md5_digest": "d1c97f804a4e8be9dafde667104d38e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12958, "upload_time": "2010-03-16T16:31:40", "upload_time_iso_8601": "2010-03-16T16:31:40.420070Z", "url": "https://files.pythonhosted.org/packages/7c/3d/cd1f0fcb8c8ef66baab1ca532caefd8a321c7ca97335081e4268a254b4d8/grainbows-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d1c97f804a4e8be9dafde667104d38e5", "sha256": "d98da3ba2edd4e56989858c597625ee61cf31d79bc1961ff43996572cb350cd6"}, "downloads": -1, "filename": "grainbows-0.1.3.tar.gz", "has_sig": false, "md5_digest": "d1c97f804a4e8be9dafde667104d38e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12958, "upload_time": "2010-03-16T16:31:40", "upload_time_iso_8601": "2010-03-16T16:31:40.420070Z", "url": "https://files.pythonhosted.org/packages/7c/3d/cd1f0fcb8c8ef66baab1ca532caefd8a321c7ca97335081e4268a254b4d8/grainbows-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:54 2020"}