{"info": {"author": "Oleg Smirnov", "author_email": "osmirnov@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Utilities"], "description": ".. |logo| image:: icons/radiopadre-client-logo-400px.png?raw=True \n\n\n|logo|\n======\n\n\n.. image:: https://travis-ci.org/ratt-ru/radiopadre-client.svg?branch=master\n   :target: https://travis-ci.org/ratt-ru/radiopadre-client/\n   :alt: Build Status\n\n\n.. image:: https://img.shields.io/pypi/v/radiopadre-client.svg\n   :target: https://pypi.python.org/pypi/radiopadre-client/\n   :alt: PyPI version shields.io\n\n\n.. image:: https://img.shields.io/pypi/pyversions/radiopadre-client.svg\n   :target: https://pypi.python.org/pypi/radiopadre-client/\n   :alt: PyPI pyversions\n\n\n.. image:: https://img.shields.io/pypi/status/radiopadre-client.svg\n   :target: https://pypi.python.org/pypi/radiopadre-client/\n   :alt: PyPI status\n\n\nYour one-stop client-side script to run `radiopadre <https://github.com/ratt-ru/radiopadre>`_ notebooks \nlocally and on remote machines.\n\nQuick start:\n\n.. code-block::\n\n   $ pip install radiopadre-client\n   $ run-radiopadre interesting_local_directory --auto-init\n\nOr for a remote session, assuming you have ssh access to the host:\n\n.. code-block::\n\n   $ run-radiopadre remote_host:interesting_remote_directory --auto-init\n\n(With any luck, the --auto-init option will cause an automatic installation on the remote end.)\n\nOverview\n--------\n\n`Radiopadre <https://github.com/ratt-ru/radiopadre>`_ is a Jupyter \nnotebook framework for quick and easy visualization of [radio astronomy, primarily]\ndata products and pipelines.\n\n**Radiopadre includes integration with** `JS9 <https://js9.si.edu/>`_ **and** `CARTA <https://cartavis.github.io/>`_\n**for  live FITS viewing of [remote] FITS files straight from your browser.** \n(In boldface, because this is a pretty neat capability to have!)\n\nRadiopadre is a custom Jupyter kernel, so in principle you could install it\nand create radiopadre notebooks directly from a Jupyter session. Some of the \ntight integration with JS9 and CARTA, however, works smoother if you start your sessions\nvia ``run-radiopadre``\\ , which takes care of starting up and stopping appropriate \nhelper processes and such.\n\n``run-radiopadre`` can also take care of \nstarting radiopadre inside remote Jupyter \nsessions using virtualenv, Docker or Singularity. \nIt will manage port forwarding for you, so that your local browser can talk to the  remote Jupyter server (and CARTA/JS9 backends).\n\nInstallation notes\n------------------\n\nRadiopadre strives to be admin-free. That is, you should not need to bother \nyour friendly local sysadmin for most (or all) of the below.\n\nRadiopadre itself (plus the attendant Jupyter etc. dependencies) must \nbe installed inside a Python 3.6+ virtual environment. The Jupyter \nnotebook server then runs inside this environment.\n\n``run-radiopadre`` does not have (but can) live in the same virtualenv. Since\nit has almost no dependencies (and is backwards-compatible down to \nPython 2.7), you can install it directly with ``pip install --user``\\ , \nfor example. (Or clone the repository and jury-rig an install via ``PATH`` \nand ``PYTHONPATH`` settings.)\n\nAutomatic virtualenv install\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf started outside a virtualenv, ``run-radiopadre -V`` will look for a virtualenv \ncalled ``~/.radiopadre/venv``\\ , activate it, and run the Jupyter \nnotebook server within.\n\nIf ``~/.radiopadre/venv`` does not exist, specify the ``--auto-init`` \noption so that ``run-radiopadre`` can try to create it for you, and install \nradiopadre inside. This is normally the easiest way to bootstrap a new\ninstallation. (Python 3.6+ required.)\n\nManual virtualenv install\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf, for whatever reason, you want to install radiopadre in a custom \nvirtualenv, then create [a Python 3.6+] one yourself and install radiopadre inside it\nfollowing `the instructions <https://github.com/ratt-ru/radiopadre>`_. \nThis follows normal pip practice. You can use ``pip install``\\ , or else \n``pip install -e`` for an \"editable\" install from a local directory. Since ``radiopadre`` depends on \n``radiopadre-client``\\ , it will automatically install the latter as well \n(though you may well want to pre-install a local version with ``pip install -e``\\ ).\n\nIf ``run-radiopadre`` is then run inside that virtual environment, it will\nlook for radiopadre in the same environment. Alternatively, you can still \nrun ``run-radiopadre -V`` outside the environment, but specify its location \nwith ``--radiopadre-venv``.\n\nThe Docker/Singularity backends\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you don't want to or can't use virtual environments (don't have Python 3.6, \nfor example), you can run radiopadre notebooks inside a Docker or Singularity \ncontainer. Images are provided on dockerhub. \n\nTo use containers, invoke ``run-singularity -D`` or ``run-singularity -S``. \nThis will automatically download the required image from dockerhub, if not\nalready available on the system.\n\nRemote installation\n~~~~~~~~~~~~~~~~~~~\n\nTo run remote radiopadre sessions, the remote end must have either:\n\n(a) have a full radiopadre install inside ``.radiopadre/venv`` (or \nanother custom environment);\n\n(b) have radiopadre-client alone installed inside ``.radiopadre/venv``\\ , \nand support Docker or Singularity;\n\n(c) or have ``run-radiopadre`` somewhere in the default path (i.e. a \n``pip install -e``\\ , or a jury-rigged install), and support Docker \nor Singularity.\n\nCase (a) requires Python 3.6+, and allows ``run-radiopadre -V``\\ , while (b) or \n(c) can make do with Python as low as 2.7, but require using \n``run-radiopadre -D`` or ``run-radiopadre -S``.\n\nIf you've got nothing at all installed on the remote, you can try ``--auto-init`` \nto bootstrap an installation. At present, this will try to set up case (a), so \nPython 3.6+ and virtualenv is required. For funky/older systems without, \nyou'll have to set up (b) or (c) by hand. \n\nExamples\n--------\n\n.. code-block::\n\n   $ run-radiopadre -V .\n\nUses the virtualenv backend (-V). Activates the virtual environment, \nruns the Jupyter notebook server inside with \".\" as the working directory,\nand drives a browser to it (see ``--browser`` option). \nIf no notebooks are present, creates a minimalistic starter notebook \ncalled ``radiopadre-default.ipynb``. If a notebook called \n``radiopadre-auto.ipynb`` is present, opens it automatically (see \n``--auto-load`` option.) Also opens the CARTA browser in a separate tab.\n\n.. code-block::\n\n   $ run-radiopadre -V remote_box:project\n\nUses SSH to connect to ``remote_box``. Uses the virtualenv backend \n(-V). Activates the virtual environment, runs the Jupyter notebook \nserver inside with ``~/project`` as the working directory. Sets up port\nforwarding so that a local browser can talk to Jupyter on the remote end.\nDrives a local browser to the appropriate URL. If no notebooks are \npresent in ``project``\\ , creates a minimalistic starter notebook \ncalled ``radiopadre-default.ipynb``. Opens ``radiopadre-auto.ipynb`` \nautomatically.\n\n.. code-block::\n\n   $ run-radiopadre -D remote_box:project --auto-init -u\n\nUses SSH to connect to ``remote_box``. If ``run-radiopadre`` is not \nfound on the remote, tries to bootstrap an installation.\nIf successful, uses the Docker backend (-D). Checks for an updated \nversion of the Docker image (-u) and downloads it if needed.\nRuns the container with a Jupyter notebook \nserver inside, with ``~/project`` as the working directory. Sets up port\nforwarding so that a local browser can talk to Jupyter inside\nthe remote container. Drives a local browser to the appropriate URL. If no notebooks are \npresent in ``project``\\ , creates a minimalistic starter notebook \ncalled ``radiopadre-default.ipynb``. Opens ``radiopadre-auto.ipynb`` \nautomatically.\n\nPersistent configuration\n------------------------\n\nCombinations of command-line settings can be made into \npersistent defaults by saving them to a config file called \n``~/.config/radiopadre-client``. This is useful when you\nwork with different remote hosts with different setups. The \n``-s`` option saves the current combination of command-line\noptions to a config section called ``[host]``. The ``-e`` option\nsaves them to a section called ``[host:path]``. For \nexample, the result of the following \nthree runs of ``run-radiopadre``\\ :\n\n.. code-block::\n\n   $ run-radiopadre -D box1:project1 -s\n   $ run-radiopadre -V box1:project2 -e\n   $ run-radiopadre -S box2:project2 -s\n\nis the following config file:\n\n.. code-block::\n\n   [box1]\n   backend = docker\n\n   [box1:project1]\n   backend = venv\n\n   [box2:project2]\n   backend = singularity\n\nThe contents of the config file **modify** the relevant default \nsettings. If ``run-radiopadre`` is then run without an explicit \n-V, -D, or -S option for a matching host (and possibly path), \nthe default backend setting is taken from the config file.\n\nIn case of confusion, look at messages at the start of \n``run-radiopadre``. These tell you which settings come from\nthe config file, and which from the command line.\n\nNote also that some options (e.g. ``--update`` and \n``--auto-init``\\ ) are considered one-off settings, and are \nnot saved to the config file.\n\nRecent sessions\n---------------\n\nInvoking ``run-radiopadre`` without arguments gives you a list \nof the five most recent sessions, and lets you invoke one\nof them again by entering its number.\n\nUpdates and bleeding-edge installs\n----------------------------------\n\nThe ``--client-install-pip`` and ``--server-install-pip`` determine \nwhat package names are passed to pip install when \n``--auto-init`` is invoked. The default values are simply\n``radiopadre-client`` and ``radiopadre``. Whenever ``--update`` \nis given, ``pip --upgrade`` is invoked to upgrade \nthese packages. You can pin a particular release by including\na pip version specifier, e.g. ``--radiopadre-client radiopadre-client==1.0``.\n\n~Maso~ advanced users may want to track the git repository versions\nrather than pip releases. This can be done by setting\nthe following options, adjusting their values as appropriate: \n\n.. code-block::\n\n   --client-install-path ~/radiopadre-client\n   --client-install-repo https://github.com/ratt-ru/radiopadre-client.git\n   --client-install-branch master\n   --server-install-path ~/radiopadre\n   --server-install-repo https://github.com/ratt-ru/radiopadre.git\n   --server-install-branch master\n\nThese options override the pip settings. Rather than installing from \nPyPI, the packages are then cloned from the specified repositories \ninto the specified directories, and installed into the virtual environment\nwith ``pip install -e``. When ``--update`` is given, ``git pull``\nis invoked to update the sources.\n\nIf using Docker or Singularity, you will probably want to combine this \nwith the ``--container-dev`` option. If set, this will mount the \nclient/server install paths inside the container, thus overriding \nthe potentially older versions installed inside the image. \n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/ratt-ru/radiopadre-client", "keywords": "ipython notebook fits dataset resultset visualisation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "radiopadre-client", "package_url": "https://pypi.org/project/radiopadre-client/", "platform": "", "project_url": "https://pypi.org/project/radiopadre-client/", "project_urls": {"Homepage": "http://github.com/ratt-ru/radiopadre-client"}, "release_url": "https://pypi.org/project/radiopadre-client/1.0rc10/", "requires_dist": ["six"], "requires_python": ">=2.7", "summary": "Radiopadre client-side script", "version": "1.0rc10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/ratt-ru/radiopadre-client/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f3aafce67273d276f06f19528c7a6c89899fac79/68747470733a2f2f7472617669732d63692e6f72672f726174742d72752f726164696f70616472652d636c69656e742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/radiopadre-client/\" rel=\"nofollow\"><img alt=\"PyPI version shields.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5425e5993a458aa82d2ead610fad3633f9a1ac41/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f726164696f70616472652d636c69656e742e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/radiopadre-client/\" rel=\"nofollow\"><img alt=\"PyPI pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/256f950be1f400d522e121fe206efa68e9bfe921/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f726164696f70616472652d636c69656e742e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/radiopadre-client/\" rel=\"nofollow\"><img alt=\"PyPI status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/527391379b0a9aab870f89245d238d057e81bfb3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f726164696f70616472652d636c69656e742e737667\"></a>\n<p>Your one-stop client-side script to run <a href=\"https://github.com/ratt-ru/radiopadre\" rel=\"nofollow\">radiopadre</a> notebooks\nlocally and on remote machines.</p>\n<p>Quick start:</p>\n<pre>$ pip install radiopadre-client\n$ run-radiopadre interesting_local_directory --auto-init\n</pre>\n<p>Or for a remote session, assuming you have ssh access to the host:</p>\n<pre>$ run-radiopadre remote_host:interesting_remote_directory --auto-init\n</pre>\n<p>(With any luck, the \u2013auto-init option will cause an automatic installation on the remote end.)</p>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p><a href=\"https://github.com/ratt-ru/radiopadre\" rel=\"nofollow\">Radiopadre</a> is a Jupyter\nnotebook framework for quick and easy visualization of [radio astronomy, primarily]\ndata products and pipelines.</p>\n<p><strong>Radiopadre includes integration with</strong> <a href=\"https://js9.si.edu/\" rel=\"nofollow\">JS9</a> <strong>and</strong> <a href=\"https://cartavis.github.io/\" rel=\"nofollow\">CARTA</a>\n<strong>for  live FITS viewing of [remote] FITS files straight from your browser.</strong>\n(In boldface, because this is a pretty neat capability to have!)</p>\n<p>Radiopadre is a custom Jupyter kernel, so in principle you could install it\nand create radiopadre notebooks directly from a Jupyter session. Some of the\ntight integration with JS9 and CARTA, however, works smoother if you start your sessions\nvia <tt><span class=\"pre\">run-radiopadre</span></tt>, which takes care of starting up and stopping appropriate\nhelper processes and such.</p>\n<p><tt><span class=\"pre\">run-radiopadre</span></tt> can also take care of\nstarting radiopadre inside remote Jupyter\nsessions using virtualenv, Docker or Singularity.\nIt will manage port forwarding for you, so that your local browser can talk to the  remote Jupyter server (and CARTA/JS9 backends).</p>\n</div>\n<div id=\"installation-notes\">\n<h2>Installation notes</h2>\n<p>Radiopadre strives to be admin-free. That is, you should not need to bother\nyour friendly local sysadmin for most (or all) of the below.</p>\n<p>Radiopadre itself (plus the attendant Jupyter etc. dependencies) must\nbe installed inside a Python 3.6+ virtual environment. The Jupyter\nnotebook server then runs inside this environment.</p>\n<p><tt><span class=\"pre\">run-radiopadre</span></tt> does not have (but can) live in the same virtualenv. Since\nit has almost no dependencies (and is backwards-compatible down to\nPython 2.7), you can install it directly with <tt>pip install <span class=\"pre\">--user</span></tt>,\nfor example. (Or clone the repository and jury-rig an install via <tt>PATH</tt>\nand <tt>PYTHONPATH</tt> settings.)</p>\n<div id=\"automatic-virtualenv-install\">\n<h3>Automatic virtualenv install</h3>\n<p>If started outside a virtualenv, <tt><span class=\"pre\">run-radiopadre</span> <span class=\"pre\">-V</span></tt> will look for a virtualenv\ncalled <tt><span class=\"pre\">~/.radiopadre/venv</span></tt>, activate it, and run the Jupyter\nnotebook server within.</p>\n<p>If <tt><span class=\"pre\">~/.radiopadre/venv</span></tt> does not exist, specify the <tt><span class=\"pre\">--auto-init</span></tt>\noption so that <tt><span class=\"pre\">run-radiopadre</span></tt> can try to create it for you, and install\nradiopadre inside. This is normally the easiest way to bootstrap a new\ninstallation. (Python 3.6+ required.)</p>\n</div>\n<div id=\"manual-virtualenv-install\">\n<h3>Manual virtualenv install</h3>\n<p>If, for whatever reason, you want to install radiopadre in a custom\nvirtualenv, then create [a Python 3.6+] one yourself and install radiopadre inside it\nfollowing <a href=\"https://github.com/ratt-ru/radiopadre\" rel=\"nofollow\">the instructions</a>.\nThis follows normal pip practice. You can use <tt>pip install</tt>, or else\n<tt>pip install <span class=\"pre\">-e</span></tt> for an \u201ceditable\u201d install from a local directory. Since <tt>radiopadre</tt> depends on\n<tt><span class=\"pre\">radiopadre-client</span></tt>, it will automatically install the latter as well\n(though you may well want to pre-install a local version with <tt>pip install <span class=\"pre\">-e</span></tt>).</p>\n<p>If <tt><span class=\"pre\">run-radiopadre</span></tt> is then run inside that virtual environment, it will\nlook for radiopadre in the same environment. Alternatively, you can still\nrun <tt><span class=\"pre\">run-radiopadre</span> <span class=\"pre\">-V</span></tt> outside the environment, but specify its location\nwith <tt><span class=\"pre\">--radiopadre-venv</span></tt>.</p>\n</div>\n<div id=\"the-docker-singularity-backends\">\n<h3>The Docker/Singularity backends</h3>\n<p>If you don\u2019t want to or can\u2019t use virtual environments (don\u2019t have Python 3.6,\nfor example), you can run radiopadre notebooks inside a Docker or Singularity\ncontainer. Images are provided on dockerhub.</p>\n<p>To use containers, invoke <tt><span class=\"pre\">run-singularity</span> <span class=\"pre\">-D</span></tt> or <tt><span class=\"pre\">run-singularity</span> <span class=\"pre\">-S</span></tt>.\nThis will automatically download the required image from dockerhub, if not\nalready available on the system.</p>\n</div>\n<div id=\"remote-installation\">\n<h3>Remote installation</h3>\n<p>To run remote radiopadre sessions, the remote end must have either:</p>\n<p>(a) have a full radiopadre install inside <tt>.radiopadre/venv</tt> (or\nanother custom environment);</p>\n<p>(b) have radiopadre-client alone installed inside <tt>.radiopadre/venv</tt>,\nand support Docker or Singularity;</p>\n<p>(c) or have <tt><span class=\"pre\">run-radiopadre</span></tt> somewhere in the default path (i.e. a\n<tt>pip install <span class=\"pre\">-e</span></tt>, or a jury-rigged install), and support Docker\nor Singularity.</p>\n<p>Case (a) requires Python 3.6+, and allows <tt><span class=\"pre\">run-radiopadre</span> <span class=\"pre\">-V</span></tt>, while (b) or\n(c) can make do with Python as low as 2.7, but require using\n<tt><span class=\"pre\">run-radiopadre</span> <span class=\"pre\">-D</span></tt> or <tt><span class=\"pre\">run-radiopadre</span> <span class=\"pre\">-S</span></tt>.</p>\n<p>If you\u2019ve got nothing at all installed on the remote, you can try <tt><span class=\"pre\">--auto-init</span></tt>\nto bootstrap an installation. At present, this will try to set up case (a), so\nPython 3.6+ and virtualenv is required. For funky/older systems without,\nyou\u2019ll have to set up (b) or (c) by hand.</p>\n</div>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<pre>$ run-radiopadre -V .\n</pre>\n<p>Uses the virtualenv backend (-V). Activates the virtual environment,\nruns the Jupyter notebook server inside with \u201c.\u201d as the working directory,\nand drives a browser to it (see <tt><span class=\"pre\">--browser</span></tt> option).\nIf no notebooks are present, creates a minimalistic starter notebook\ncalled <tt><span class=\"pre\">radiopadre-default.ipynb</span></tt>. If a notebook called\n<tt><span class=\"pre\">radiopadre-auto.ipynb</span></tt> is present, opens it automatically (see\n<tt><span class=\"pre\">--auto-load</span></tt> option.) Also opens the CARTA browser in a separate tab.</p>\n<pre>$ run-radiopadre -V remote_box:project\n</pre>\n<p>Uses SSH to connect to <tt>remote_box</tt>. Uses the virtualenv backend\n(-V). Activates the virtual environment, runs the Jupyter notebook\nserver inside with <tt>~/project</tt> as the working directory. Sets up port\nforwarding so that a local browser can talk to Jupyter on the remote end.\nDrives a local browser to the appropriate URL. If no notebooks are\npresent in <tt>project</tt>, creates a minimalistic starter notebook\ncalled <tt><span class=\"pre\">radiopadre-default.ipynb</span></tt>. Opens <tt><span class=\"pre\">radiopadre-auto.ipynb</span></tt>\nautomatically.</p>\n<pre>$ run-radiopadre -D remote_box:project --auto-init -u\n</pre>\n<p>Uses SSH to connect to <tt>remote_box</tt>. If <tt><span class=\"pre\">run-radiopadre</span></tt> is not\nfound on the remote, tries to bootstrap an installation.\nIf successful, uses the Docker backend (-D). Checks for an updated\nversion of the Docker image (-u) and downloads it if needed.\nRuns the container with a Jupyter notebook\nserver inside, with <tt>~/project</tt> as the working directory. Sets up port\nforwarding so that a local browser can talk to Jupyter inside\nthe remote container. Drives a local browser to the appropriate URL. If no notebooks are\npresent in <tt>project</tt>, creates a minimalistic starter notebook\ncalled <tt><span class=\"pre\">radiopadre-default.ipynb</span></tt>. Opens <tt><span class=\"pre\">radiopadre-auto.ipynb</span></tt>\nautomatically.</p>\n</div>\n<div id=\"persistent-configuration\">\n<h2>Persistent configuration</h2>\n<p>Combinations of command-line settings can be made into\npersistent defaults by saving them to a config file called\n<tt><span class=\"pre\">~/.config/radiopadre-client</span></tt>. This is useful when you\nwork with different remote hosts with different setups. The\n<tt><span class=\"pre\">-s</span></tt> option saves the current combination of command-line\noptions to a config section called <tt>[host]</tt>. The <tt><span class=\"pre\">-e</span></tt> option\nsaves them to a section called <tt>[host:path]</tt>. For\nexample, the result of the following\nthree runs of <tt><span class=\"pre\">run-radiopadre</span></tt>:</p>\n<pre>$ run-radiopadre -D box1:project1 -s\n$ run-radiopadre -V box1:project2 -e\n$ run-radiopadre -S box2:project2 -s\n</pre>\n<p>is the following config file:</p>\n<pre>[box1]\nbackend = docker\n\n[box1:project1]\nbackend = venv\n\n[box2:project2]\nbackend = singularity\n</pre>\n<p>The contents of the config file <strong>modify</strong> the relevant default\nsettings. If <tt><span class=\"pre\">run-radiopadre</span></tt> is then run without an explicit\n-V, -D, or -S option for a matching host (and possibly path),\nthe default backend setting is taken from the config file.</p>\n<p>In case of confusion, look at messages at the start of\n<tt><span class=\"pre\">run-radiopadre</span></tt>. These tell you which settings come from\nthe config file, and which from the command line.</p>\n<p>Note also that some options (e.g. <tt><span class=\"pre\">--update</span></tt> and\n<tt><span class=\"pre\">--auto-init</span></tt>) are considered one-off settings, and are\nnot saved to the config file.</p>\n</div>\n<div id=\"recent-sessions\">\n<h2>Recent sessions</h2>\n<p>Invoking <tt><span class=\"pre\">run-radiopadre</span></tt> without arguments gives you a list\nof the five most recent sessions, and lets you invoke one\nof them again by entering its number.</p>\n</div>\n<div id=\"updates-and-bleeding-edge-installs\">\n<h2>Updates and bleeding-edge installs</h2>\n<p>The <tt><span class=\"pre\">--client-install-pip</span></tt> and <tt><span class=\"pre\">--server-install-pip</span></tt> determine\nwhat package names are passed to pip install when\n<tt><span class=\"pre\">--auto-init</span></tt> is invoked. The default values are simply\n<tt><span class=\"pre\">radiopadre-client</span></tt> and <tt>radiopadre</tt>. Whenever <tt><span class=\"pre\">--update</span></tt>\nis given, <tt>pip <span class=\"pre\">--upgrade</span></tt> is invoked to upgrade\nthese packages. You can pin a particular release by including\na pip version specifier, e.g. <tt><span class=\"pre\">--radiopadre-client</span> <span class=\"pre\">radiopadre-client==1.0</span></tt>.</p>\n<p>~Maso~ advanced users may want to track the git repository versions\nrather than pip releases. This can be done by setting\nthe following options, adjusting their values as appropriate:</p>\n<pre>--client-install-path ~/radiopadre-client\n--client-install-repo https://github.com/ratt-ru/radiopadre-client.git\n--client-install-branch master\n--server-install-path ~/radiopadre\n--server-install-repo https://github.com/ratt-ru/radiopadre.git\n--server-install-branch master\n</pre>\n<p>These options override the pip settings. Rather than installing from\nPyPI, the packages are then cloned from the specified repositories\ninto the specified directories, and installed into the virtual environment\nwith <tt>pip install <span class=\"pre\">-e</span></tt>. When <tt><span class=\"pre\">--update</span></tt> is given, <tt>git pull</tt>\nis invoked to update the sources.</p>\n<p>If using Docker or Singularity, you will probably want to combine this\nwith the <tt><span class=\"pre\">--container-dev</span></tt> option. If set, this will mount the\nclient/server install paths inside the container, thus overriding\nthe potentially older versions installed inside the image.</p>\n</div>\n\n          </div>"}, "last_serial": 7174636, "releases": {"1.0rc1": [{"comment_text": "", "digests": {"md5": "704dd3ee5e709531b1e48a9bdb4080ba", "sha256": "b874ee824093765b3e30914e2fcebddc0a602d294785f89af779f528821841b7"}, "downloads": -1, "filename": "radiopadre-client-1.0rc1.tar.gz", "has_sig": false, "md5_digest": "704dd3ee5e709531b1e48a9bdb4080ba", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18386, "upload_time": "2020-01-27T14:46:14", "upload_time_iso_8601": "2020-01-27T14:46:14.092522Z", "url": "https://files.pythonhosted.org/packages/43/08/07cb46d86916b1bbbe937c7eecd737c8f82236fa9913e3a3ceef967cc7fd/radiopadre-client-1.0rc1.tar.gz", "yanked": false}], "1.0rc10": [{"comment_text": "", "digests": {"md5": "964ee24b61eff76be7b8de66a84f4994", "sha256": "f360d7720c2f3d7b76be55ffa2f4e6180625196527ae0823e756c731fdf98b06"}, "downloads": -1, "filename": "radiopadre_client-1.0rc10-py3-none-any.whl", "has_sig": false, "md5_digest": "964ee24b61eff76be7b8de66a84f4994", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 49231, "upload_time": "2020-05-05T18:50:19", "upload_time_iso_8601": "2020-05-05T18:50:19.724362Z", "url": "https://files.pythonhosted.org/packages/c1/e1/afb0fb07ab958f8d2e5bf61bfabeb1c99428245417f0ae499e3998cf4ebf/radiopadre_client-1.0rc10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0df82853a58a606fcfbc1ecfd849120", "sha256": "a92fd95837f6d7be1f5447fa31819404cb8a4380367e3282ed25c4c87dd019cf"}, "downloads": -1, "filename": "radiopadre-client-1.0rc10.tar.gz", "has_sig": false, "md5_digest": "a0df82853a58a606fcfbc1ecfd849120", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 43209, "upload_time": "2020-05-05T18:50:21", "upload_time_iso_8601": "2020-05-05T18:50:21.141732Z", "url": "https://files.pythonhosted.org/packages/d5/16/c710f6c09e633858a9da1993c6c9f81cf43d5007a074cb95420f8f9dd352/radiopadre-client-1.0rc10.tar.gz", "yanked": false}], "1.0rc3": [{"comment_text": "", "digests": {"md5": "faf02dd588cdd25055dbb88f4603a8a0", "sha256": "1ce8da453a951b6e1d7ecdba4379bedbea28a735b93fdf1b9d578a8c3f1839c7"}, "downloads": -1, "filename": "radiopadre-client-1.0rc3.tar.gz", "has_sig": false, "md5_digest": "faf02dd588cdd25055dbb88f4603a8a0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 27545, "upload_time": "2020-02-25T14:05:10", "upload_time_iso_8601": "2020-02-25T14:05:10.909165Z", "url": "https://files.pythonhosted.org/packages/9e/45/b9e7642be7223f3abc84afbb17096e82f4764a6378ee6a8e1a8a1ff0c327/radiopadre-client-1.0rc3.tar.gz", "yanked": false}], "1.0rc5": [{"comment_text": "", "digests": {"md5": "9a953ba706f3daf47849e9d5df2adc20", "sha256": "d43d4c16e86a1022d19dfea83f9e6b509517c52e95dd0daf8411f44e6ee08b6f"}, "downloads": -1, "filename": "radiopadre_client-1.0rc5-py3-none-any.whl", "has_sig": false, "md5_digest": "9a953ba706f3daf47849e9d5df2adc20", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 46859, "upload_time": "2020-03-03T18:52:33", "upload_time_iso_8601": "2020-03-03T18:52:33.848426Z", "url": "https://files.pythonhosted.org/packages/95/a7/69fda8f53f6cff9ec398c93c63923fbe2b24ae10e93d70ad46d24f649bec/radiopadre_client-1.0rc5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b33c14d7c0790773aa15814c5f4c2177", "sha256": "6f3c4b43b6672a25b6a76ed733446ef25f9529282a5f977014fdefc05d290100"}, "downloads": -1, "filename": "radiopadre-client-1.0rc5.tar.gz", "has_sig": false, "md5_digest": "b33c14d7c0790773aa15814c5f4c2177", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 41287, "upload_time": "2020-03-03T18:52:35", "upload_time_iso_8601": "2020-03-03T18:52:35.298666Z", "url": "https://files.pythonhosted.org/packages/6e/ab/8bd31841c4e7a568c4ad5f8018936196f23c27bbcdeee2e7751cd85d9248/radiopadre-client-1.0rc5.tar.gz", "yanked": false}], "1.0rc6": [{"comment_text": "", "digests": {"md5": "01088b2f401fd81517981336891e61c1", "sha256": "eb556ab7267a0ae1128cbe70bb2d0e3c103ded8a326a4bbb85385a7a6410a7b1"}, "downloads": -1, "filename": "radiopadre_client-1.0rc6-py3-none-any.whl", "has_sig": false, "md5_digest": "01088b2f401fd81517981336891e61c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 46860, "upload_time": "2020-03-04T10:00:13", "upload_time_iso_8601": "2020-03-04T10:00:13.072484Z", "url": "https://files.pythonhosted.org/packages/a2/23/7a3e5a9c5fb07690c770ec23e128d83c1ad49dfccfa88fe9b4162a342963/radiopadre_client-1.0rc6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d05df2c3a1582a0caf02cc0c50c428d1", "sha256": "80e632a06805a812f656b8054a69369089d39d74df73138c515aa4b09d52a907"}, "downloads": -1, "filename": "radiopadre-client-1.0rc6.tar.gz", "has_sig": false, "md5_digest": "d05df2c3a1582a0caf02cc0c50c428d1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 41292, "upload_time": "2020-03-04T10:00:14", "upload_time_iso_8601": "2020-03-04T10:00:14.225456Z", "url": "https://files.pythonhosted.org/packages/49/dd/e07d2d4140f8e2c750c27b36675298004b824de530c469d5a8b32590b04c/radiopadre-client-1.0rc6.tar.gz", "yanked": false}], "1.0rc8": [{"comment_text": "", "digests": {"md5": "10e6326838165d75f6874b7871d36f4d", "sha256": "27da226f0639629dc3e7b99653ef52c655535fc27310604ebc6a9dc2ac3d6670"}, "downloads": -1, "filename": "radiopadre_client-1.0rc8-py3-none-any.whl", "has_sig": false, "md5_digest": "10e6326838165d75f6874b7871d36f4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 47808, "upload_time": "2020-03-06T15:44:05", "upload_time_iso_8601": "2020-03-06T15:44:05.698798Z", "url": "https://files.pythonhosted.org/packages/bf/f5/60550627e0380b6bd53f2a2bf2bd2a363cdf63f2961622424011799a0338/radiopadre_client-1.0rc8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4dcfc66276ab5a506ebe057c8bbc65ea", "sha256": "89c61a6ab94a7a043fc956e4afc2e5125d18c0bb950b7a2d3705ffb732cb7501"}, "downloads": -1, "filename": "radiopadre-client-1.0rc8.tar.gz", "has_sig": false, "md5_digest": "4dcfc66276ab5a506ebe057c8bbc65ea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 41905, "upload_time": "2020-03-06T15:44:07", "upload_time_iso_8601": "2020-03-06T15:44:07.236869Z", "url": "https://files.pythonhosted.org/packages/a1/f2/02994464f8bc7c31cb6086c4d2e06944d65a679b4d4f17206f9f7f07ba9c/radiopadre-client-1.0rc8.tar.gz", "yanked": false}], "1.0rc9": [{"comment_text": "", "digests": {"md5": "6c12f8e6646137dc0145ba4e4991010f", "sha256": "0ff865261aeabd9b0e4324f1326254528420842eaec5abc4cdcdd624d615fa16"}, "downloads": -1, "filename": "radiopadre_client-1.0rc9-py3-none-any.whl", "has_sig": false, "md5_digest": "6c12f8e6646137dc0145ba4e4991010f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 48076, "upload_time": "2020-04-27T21:29:28", "upload_time_iso_8601": "2020-04-27T21:29:28.483972Z", "url": "https://files.pythonhosted.org/packages/21/ee/ae95eb15e497d27a20244a7cad6bf8b1040052d2fd762240eb7e8608a7b2/radiopadre_client-1.0rc9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ab9cf2a7453c362dbabcf50aed7309e", "sha256": "9b03ea61f455ec6ab8e298a9e8f2116cfb97dbb1f420dbb4ce8fe7ce86598351"}, "downloads": -1, "filename": "radiopadre-client-1.0rc9.tar.gz", "has_sig": false, "md5_digest": "7ab9cf2a7453c362dbabcf50aed7309e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 42222, "upload_time": "2020-04-27T21:29:29", "upload_time_iso_8601": "2020-04-27T21:29:29.791862Z", "url": "https://files.pythonhosted.org/packages/b1/3b/2029589682b00d55d2f5a84ce8639b097959758c87acef8cb20f3eb211e3/radiopadre-client-1.0rc9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "964ee24b61eff76be7b8de66a84f4994", "sha256": "f360d7720c2f3d7b76be55ffa2f4e6180625196527ae0823e756c731fdf98b06"}, "downloads": -1, "filename": "radiopadre_client-1.0rc10-py3-none-any.whl", "has_sig": false, "md5_digest": "964ee24b61eff76be7b8de66a84f4994", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 49231, "upload_time": "2020-05-05T18:50:19", "upload_time_iso_8601": "2020-05-05T18:50:19.724362Z", "url": "https://files.pythonhosted.org/packages/c1/e1/afb0fb07ab958f8d2e5bf61bfabeb1c99428245417f0ae499e3998cf4ebf/radiopadre_client-1.0rc10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0df82853a58a606fcfbc1ecfd849120", "sha256": "a92fd95837f6d7be1f5447fa31819404cb8a4380367e3282ed25c4c87dd019cf"}, "downloads": -1, "filename": "radiopadre-client-1.0rc10.tar.gz", "has_sig": false, "md5_digest": "a0df82853a58a606fcfbc1ecfd849120", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 43209, "upload_time": "2020-05-05T18:50:21", "upload_time_iso_8601": "2020-05-05T18:50:21.141732Z", "url": "https://files.pythonhosted.org/packages/d5/16/c710f6c09e633858a9da1993c6c9f81cf43d5007a074cb95420f8f9dd352/radiopadre-client-1.0rc10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:59 2020"}