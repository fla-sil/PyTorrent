{"info": {"author": "PlanetaryPy Developers", "author_email": "contact@planetarypy.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "===================\nPlanetary Test Data\n===================\n\n.. image:: https://img.shields.io/travis/planetarypy/planetary_test_data.svg\n        :target: https://travis-ci.org/planetarypy/planetary_test_data\n\n.. image:: https://img.shields.io/pypi/v/planetary_test_data.svg\n        :target: https://pypi.python.org/pypi/planetary_test_data\n\n.. image:: https://coveralls.io/repos/github/planetarypy/planetary_test_data/badge.svg\n        :target: https://coveralls.io/github/planetarypy/planetary_test_data\n\n\n\nPlanetary Test Data contains a list of planetary data for software testing\npurposes and utilities to retrieve them.\n\n* Free software: BSD license\n\nFeatures\n--------\n\n* Downloads a core set of sample Planetary test data into\n  ``./mission_data/`` or ``./tests/mission_data/`` if ``./tests/`` exists.\n\nTODO\n------\n\n* Download to central cache directory and use symbolic links to share data\n  between projects or other locations.\n* Find smaller example images to reduce download times.\n* Command line usage improvements\n\n  * Include a mode that allows users to somehow specify subsets of data to\n    retrieve.  Perhaps selecting by mission or instrument name.\n\n* Improve label testing.\n* Include Mission Names with each product.\n* Include product type with each product.\n\nSee also the Github issues for this project.\n\nUsage\n------\n\nTo download the core set of planetary test data install this package with pip\nand then run the command ``get_mission_data``::\n\n  pip install planetary_test_data\n  get_mission_data\n\nAdditional usage options are shown below::\n\n  usage: get_mission_data [-h] [--all] [--file FILE] [--dir DIR] [--tags [TAGS]]\n                        [--instruments [INSTRUMENTS]] [--missions [MISSIONS]]\n\n  optional arguments:\n    -h, --help            show this help message and exit\n    --all, -a             Download all products.\n    --file FILE, -f FILE  Override default data.json by providing path to custom\n                          data.json file.\n    --dir DIR, -d DIR     Directory to place test data products in.\n    --tags [TAGS], -t [TAGS]\n                          Retrieve products whose tags match those provided\n                          here.\n    --instruments [INSTRUMENTS], -i [INSTRUMENTS]\n                          Get products by instrument\n    --missions [MISSIONS], -m [MISSIONS]\n                          Get products by mission\n\nTo get a copy of a subset of ``data.json``::\n\n  get_mission_json\n\nAdditional usage options are shown below::\n\n  usage: get_mission_json [-h] [--all] [--file FILE] [--dir DIR] [--tags [TAGS]]\n                        [--instruments [INSTRUMENTS]] [--missions [MISSIONS]]\n\n  optional arguments:\n    -h, --help            show this help message and exit\n    --all, -a             Download all products.\n    --file FILE, -f FILE  Override default data.json by providing path to custom\n                          data.json file.\n    --dir DIR, -d DIR     Directory to place test data products in.\n    --tags [TAGS], -t [TAGS]\n                          Retrieve products whose tags match those provided\n                          here.\n    --instruments [INSTRUMENTS], -i [INSTRUMENTS]\n                          Get products by instrument\n    --missions [MISSIONS], -m [MISSIONS]\n                          Get products by mission\n\n\nDescription\n------------\n\nRunning ``get_mission_data`` will do the following:\n\n* If ``tests`` directory exists it will create ``tests/mission_data`` if\n  necessary.  If ``tests`` does not exist, it will just create \n  ``mission_data`` in the current directory.\n* The data prodcuts tagged to be ``core`` products will be downloaded\n  into the download directory.\n* Use the ``-a`` or ``--all`` flag to get all the images. This, however, is NOT\n  recommended for you will download over 200 images and labels.\n* The ``-t`` or ``--tags`` will retrieve products matched with the supplied tag.\n  To give multiple tags, use the flag multiple times.\n* The ``-d`` or ``--dir`` flag can be used to save the images in a new custom\n  location.\n* If there exists a custom ``data.json`` locally and you would rather use that\n  file to download images rather than the default, use the ``-f`` or\n  ``--file`` flag and then the path to the ``data.json``. This is especially\n  useful if there are test images needed that do not exist in or are not\n  part of the ``core`` in the default ``data.json`` (see ``get_mission_json``\n  below).\n* To get products by mission use the ``--mission`` or ``-m`` flag. This will\n  download all the products from the given mission, even non ``core`` products,\n  unless explicity given ``core`` as a tag. To specify multiple missions, use\n  the flag multiple times. You must spell the mission the same as spelled in\n  `Missions and Instruments`_ (case matters!).\n* To get products by instruments use the ``--instruments`` or ``-i`` flag. This\n  will download all the products from the given instrument, even non ``core``\n  products, unless explicity given ``core`` as a tag. To specify multiple\n  instruments, use the flag multiple times. You must spell the instrument the\n  same as spelled in `Missions and Instruments`_ (case matters!).\n* Only products which do not exist in the download directory will be downloaded.\n\nRunning ``get_mission_json`` will do the following:\n\n* Create a copy of ``data.json`` in the ``tests`` or ``test`` directory. This\n  will just be the ``core`` data by default. The purpose of getting a copy of\n  the ``data.json`` is so it is easier to include images in respective\n  projects that are not included in the default ``data.json``. Then developers\n  can use the ``-f`` flag on ``get_mission_data`` (see above) to use this\n  custom ``data.json``.\n* If ``data.json`` already exists, an exception is raised.\n* The same flags apply to ``get_mission_json`` as ``get_mission_data``.\n\nMission Data\n-------------\n\n.. _here: https://github.com/planetarypy/planetary_test_data/blob/master/planetary_test_data/data.json\n\nThe PDS mission data included in the package can be found here_. \n\nThe following are core products:\n\n* 0047MH0000110010100214C00_DRCL.IMG\n* 0047MH0000110010100214C00_DRCL.LBL\n* 1p134482118erp0902p2600r8m1.img\n* 1p190678905erp64kcp2600l8c1.img\n* 2p129641989eth0361p2600r8m1.img\n* 2m132591087cfd1800p2977m2f1.img\n* h58n3118.img\n* r01090al.img\n\nIf there are products you think should be included or removed from this dataset\nplease file a Github issue. New images should be images from instruments that\nare not already included or different file types (i.e. EDR vs RDR). New core\nimages should be distinctly different than the ones that exist and would expose\ntest and/or edge cases for multiple PlanetaryPy projects/affiliates. For\nexample, if there was not an RGB image included in the core products (which\nthere is), then that would test image would expose an edge case for many\nprojects. However, it is best to use ``get_mission_json`` to get a copy of\n``data.json``, add the desired test images to that json file, and then download\nimages using ``get_mission_data -f path/to/data.json``. We recommend using a\n``make test`` command to get the proper mission data before testing.\n\ndata.json Format\n-----------------\n\nThe ``data.json`` file contains PDS product names, urls and other\nmetainformation about the product.  This structure will be extended to support\ngeneric testing, for instance the ``label`` key will be changed to a\ndictionary that includes product label keys and the values found at those keys.\n\nBelow is a sample snippet of a ``data.json`` entry::\n\n    \"1m298459885effa312p2956m2m1.img\": {\n        \"instrument\": \"MICROSCOPIC IMAGER\", \n        \"label\": \"PDS3\", \n        \"opens\": \"True\", \n        \"url\": \"http://pds-imaging.jpl.nasa.gov/data/mer/opportunity/mer1mo_0xxx/data/sol1918/edr/1m298459885effa312p2956m2m1.img\"\n    },\n\n\nMissions and Instruments\n------------------------\n\nThe following missions and their instruments have products available for\ntesting:\n\n* 2001 Mars Odyssey\n    * Thermal Emission Imaging System\n* Cassini\n    * Cassini Radar\n    * Imaging Science Subsystem\n    * Imaging Science Subsystem Narrow Angle\n    * Visual And Infrared Mapping Spectrometer\n* Chandrayaan-1\n    * Context Camera\n    * High Resolution Imaging Science Experiment\n    * Mars Color Imager\n    * Moon Mineralogy Mapper\n* Clementine\n    * High Resolution Camera\n    * Long Wave Infrared Camera\n    * Nearinfrared Camera\n    * Ultraviolet/Visible (Uv/Vis) Camera\n    * Ultraviolet/Visible Camera\n* ESA Mars Express\n    * High Resolution Stereo Camera\n* Galileo\n    * Near-Infrared Mapping Spectrometer\n    * Solid_State_Imaging\n* Lunar Reconnaissance Orbiter\n    * Lunar Reconnaissance Orbiter Camera\n    * Lyman Alpha Mapping Project\n    * Mid Infrared Camera 1\n    * Mid Infrared Camera 2\n    * Near Infrared Camera 1\n    * Near Infrared Camera 2\n    * Near Infrared Spectrometer 1\n    * Near Infrared Spectrometer 2 \n    * Total Luminance Photometer\n    * Visible Camera\n    * Visible Spectrometer\n* MESSENGER\n    * Mercury Dual Imaging System Narrow Angle Camera\n    * Mercury Dual Imaging System Narrow Angle Camera, Mercury Dual Imaging System Wide Angle Camera\n    * Mercury Dual Imaging System Wide Angle Camera\n* Magellan\n    * Global Topography Data Record\n    * Radar\n    * Radar System\n    * Synthetic-Aperture Radar\n* Mariner 10\n    * Mariner 10\n* Mariner 9\n    * Imaging Science Subsystem\n* Mars Exploration Rover\n    * Alpha Particle X-Ray Spectrometer\n    * Descent Camera\n    * Front Hazard Avoidance Camera Left\n    * Front Hazard Avoidance Camera Right\n    * Hazard Avoidance Camera\n    * Microscopic Imager\n    * Moessbauer Spectrometer\n    * Navigation Camera\n    * Navigation Camera Left\n    * Panoramic Camera\n    * Panoramic Camera Left\n    * Panoramic Camera Right\n    * Panoromic Camera\n    * Rock Abrasion Tool\n* Mars Global Surveyor\n    * Mars Orbiter Camera - Wide Angle\n    * Mars Orbiter Camera Wide Angle\n    * Near Infrared Mapping Spectrometer\n* Mars Pathfinder\n    * Alpha X-Ray Spectrometer\n    * Alpha X-Ray Spectrometer (Apxs)\n    * Atmospheric Structure Instrument / Meteorology Package\n    * Imager For Mars Pathfinder\n    * Rover Camera Left\n* Mars Science Laboratory\n    * Front Hazard Avoidance Camera Left String B\n    * Mars Descent Imager Camera\n    * Mars Hand Lens Imager Camera\n    * Mast Camera Left\n    * Navigation Camera Left String A\n* Phoenix\n    * Optical Microscope\n    * Robotic Arm Camera\n    * Surface Stereo Imager\n* Viking Lander\n    * Camera_1\n    * Camera_2\n* Viking Orbiter\n    * Viking Visual Imaging Subsystem\n    * Visual_Imaging_Subsystem_Camera_A, Visual_Imaging_Subsystem_Camera_B\n* Voyager\n    * Imaging Science Subsystem\n    * Imaging Science Subsystem - Narrow Angle Camera\n\n\n\n\nHistory\n=======\n\n0.4.0 (2018-01-21)\n------------------\n\n* Made new methods/commands to get products by mission and/or instrument\n* Made new methods/command to get a copy of the subset of the data.json file\n* Added several new products\n* Created new documentation\n* Made documentation available on RTD\n* Create new tests to get %100 coverage\n\n0.3.3 (2015-07-27)\n-------------------\n\n* Added 0047MH0000110010100214C00_DRCL.IMG to the core dataset.\n\n0.3.2 (2015-07-21)\n-------------------\n\n* Added 2m132591087cfd1800p2977m2f1.img to the core dataset.\n\n0.3.1 (2015-07-13)\n--------------------\n\n* Updated data.json to support extended PDS product label tests.\n\n0.3.0 (2015-07-13)\n--------------------\n\n* Rewritten to be driven by command line options rather than by file\n  system contents.  Run ``get_mission_data -h`` to see options.\n\n0.2.0 (2015-07-11)\n--------------------\n\n* Updated ``data.json`` to contain mission data from many more missions.\n\n0.1.1 (2015-07-09)\n---------------------\n\n* Fixed Python 3 compativility issue.\n\n0.1.0 (2015-06-24)\n---------------------\n\n* First release on PyPI.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/planetarypy/planetary_test_data", "keywords": "planetary_test_data", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "planetary_test_data", "package_url": "https://pypi.org/project/planetary_test_data/", "platform": "", "project_url": "https://pypi.org/project/planetary_test_data/", "project_urls": {"Homepage": "https://github.com/planetarypy/planetary_test_data"}, "release_url": "https://pypi.org/project/planetary_test_data/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "Planetary Test Data contains a list of planetary data for software testing purposes and utilities to retrieve them.", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/planetarypy/planetary_test_data\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/planetarypy/planetary_test_data.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/61b5f9592a17d2ae3b3fc98bd85ec0193d999f2f/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f706c616e657461727970792f706c616e65746172795f746573745f646174612e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/planetary_test_data\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/planetary_test_data.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fed9a7916f89137a7e5795ef12b74604cb474491/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f706c616e65746172795f746573745f646174612e737667\"></a>\n<a href=\"https://coveralls.io/github/planetarypy/planetary_test_data\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/planetarypy/planetary_test_data/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5dfaaa17a7a654cdd357a691b28fe8bd3f447859/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f706c616e657461727970792f706c616e65746172795f746573745f646174612f62616467652e737667\"></a>\n<p>Planetary Test Data contains a list of planetary data for software testing\npurposes and utilities to retrieve them.</p>\n<ul>\n<li>Free software: BSD license</li>\n</ul>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Downloads a core set of sample Planetary test data into\n<tt>./mission_data/</tt> or <tt>./tests/mission_data/</tt> if <tt>./tests/</tt> exists.</li>\n</ul>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Download to central cache directory and use symbolic links to share data\nbetween projects or other locations.</li>\n<li>Find smaller example images to reduce download times.</li>\n<li>Command line usage improvements<ul>\n<li>Include a mode that allows users to somehow specify subsets of data to\nretrieve.  Perhaps selecting by mission or instrument name.</li>\n</ul>\n</li>\n<li>Improve label testing.</li>\n<li>Include Mission Names with each product.</li>\n<li>Include product type with each product.</li>\n</ul>\n<p>See also the Github issues for this project.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To download the core set of planetary test data install this package with pip\nand then run the command <tt>get_mission_data</tt>:</p>\n<pre>pip install planetary_test_data\nget_mission_data\n</pre>\n<p>Additional usage options are shown below:</p>\n<pre>usage: get_mission_data [-h] [--all] [--file FILE] [--dir DIR] [--tags [TAGS]]\n                      [--instruments [INSTRUMENTS]] [--missions [MISSIONS]]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --all, -a             Download all products.\n  --file FILE, -f FILE  Override default data.json by providing path to custom\n                        data.json file.\n  --dir DIR, -d DIR     Directory to place test data products in.\n  --tags [TAGS], -t [TAGS]\n                        Retrieve products whose tags match those provided\n                        here.\n  --instruments [INSTRUMENTS], -i [INSTRUMENTS]\n                        Get products by instrument\n  --missions [MISSIONS], -m [MISSIONS]\n                        Get products by mission\n</pre>\n<p>To get a copy of a subset of <tt>data.json</tt>:</p>\n<pre>get_mission_json\n</pre>\n<p>Additional usage options are shown below:</p>\n<pre>usage: get_mission_json [-h] [--all] [--file FILE] [--dir DIR] [--tags [TAGS]]\n                      [--instruments [INSTRUMENTS]] [--missions [MISSIONS]]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --all, -a             Download all products.\n  --file FILE, -f FILE  Override default data.json by providing path to custom\n                        data.json file.\n  --dir DIR, -d DIR     Directory to place test data products in.\n  --tags [TAGS], -t [TAGS]\n                        Retrieve products whose tags match those provided\n                        here.\n  --instruments [INSTRUMENTS], -i [INSTRUMENTS]\n                        Get products by instrument\n  --missions [MISSIONS], -m [MISSIONS]\n                        Get products by mission\n</pre>\n</div>\n<div id=\"description\">\n<h2>Description</h2>\n<p>Running <tt>get_mission_data</tt> will do the following:</p>\n<ul>\n<li>If <tt>tests</tt> directory exists it will create <tt>tests/mission_data</tt> if\nnecessary.  If <tt>tests</tt> does not exist, it will just create\n<tt>mission_data</tt> in the current directory.</li>\n<li>The data prodcuts tagged to be <tt>core</tt> products will be downloaded\ninto the download directory.</li>\n<li>Use the <tt><span class=\"pre\">-a</span></tt> or <tt><span class=\"pre\">--all</span></tt> flag to get all the images. This, however, is NOT\nrecommended for you will download over 200 images and labels.</li>\n<li>The <tt><span class=\"pre\">-t</span></tt> or <tt><span class=\"pre\">--tags</span></tt> will retrieve products matched with the supplied tag.\nTo give multiple tags, use the flag multiple times.</li>\n<li>The <tt><span class=\"pre\">-d</span></tt> or <tt><span class=\"pre\">--dir</span></tt> flag can be used to save the images in a new custom\nlocation.</li>\n<li>If there exists a custom <tt>data.json</tt> locally and you would rather use that\nfile to download images rather than the default, use the <tt><span class=\"pre\">-f</span></tt> or\n<tt><span class=\"pre\">--file</span></tt> flag and then the path to the <tt>data.json</tt>. This is especially\nuseful if there are test images needed that do not exist in or are not\npart of the <tt>core</tt> in the default <tt>data.json</tt> (see <tt>get_mission_json</tt>\nbelow).</li>\n<li>To get products by mission use the <tt><span class=\"pre\">--mission</span></tt> or <tt><span class=\"pre\">-m</span></tt> flag. This will\ndownload all the products from the given mission, even non <tt>core</tt> products,\nunless explicity given <tt>core</tt> as a tag. To specify multiple missions, use\nthe flag multiple times. You must spell the mission the same as spelled in\n<a href=\"#missions-and-instruments\" rel=\"nofollow\">Missions and Instruments</a> (case matters!).</li>\n<li>To get products by instruments use the <tt><span class=\"pre\">--instruments</span></tt> or <tt><span class=\"pre\">-i</span></tt> flag. This\nwill download all the products from the given instrument, even non <tt>core</tt>\nproducts, unless explicity given <tt>core</tt> as a tag. To specify multiple\ninstruments, use the flag multiple times. You must spell the instrument the\nsame as spelled in <a href=\"#missions-and-instruments\" rel=\"nofollow\">Missions and Instruments</a> (case matters!).</li>\n<li>Only products which do not exist in the download directory will be downloaded.</li>\n</ul>\n<p>Running <tt>get_mission_json</tt> will do the following:</p>\n<ul>\n<li>Create a copy of <tt>data.json</tt> in the <tt>tests</tt> or <tt>test</tt> directory. This\nwill just be the <tt>core</tt> data by default. The purpose of getting a copy of\nthe <tt>data.json</tt> is so it is easier to include images in respective\nprojects that are not included in the default <tt>data.json</tt>. Then developers\ncan use the <tt><span class=\"pre\">-f</span></tt> flag on <tt>get_mission_data</tt> (see above) to use this\ncustom <tt>data.json</tt>.</li>\n<li>If <tt>data.json</tt> already exists, an exception is raised.</li>\n<li>The same flags apply to <tt>get_mission_json</tt> as <tt>get_mission_data</tt>.</li>\n</ul>\n</div>\n<div id=\"mission-data\">\n<h2>Mission Data</h2>\n<p>The PDS mission data included in the package can be found <a href=\"https://github.com/planetarypy/planetary_test_data/blob/master/planetary_test_data/data.json\" rel=\"nofollow\">here</a>.</p>\n<p>The following are core products:</p>\n<ul>\n<li>0047MH0000110010100214C00_DRCL.IMG</li>\n<li>0047MH0000110010100214C00_DRCL.LBL</li>\n<li>1p134482118erp0902p2600r8m1.img</li>\n<li>1p190678905erp64kcp2600l8c1.img</li>\n<li>2p129641989eth0361p2600r8m1.img</li>\n<li>2m132591087cfd1800p2977m2f1.img</li>\n<li>h58n3118.img</li>\n<li>r01090al.img</li>\n</ul>\n<p>If there are products you think should be included or removed from this dataset\nplease file a Github issue. New images should be images from instruments that\nare not already included or different file types (i.e. EDR vs RDR). New core\nimages should be distinctly different than the ones that exist and would expose\ntest and/or edge cases for multiple PlanetaryPy projects/affiliates. For\nexample, if there was not an RGB image included in the core products (which\nthere is), then that would test image would expose an edge case for many\nprojects. However, it is best to use <tt>get_mission_json</tt> to get a copy of\n<tt>data.json</tt>, add the desired test images to that json file, and then download\nimages using <tt>get_mission_data <span class=\"pre\">-f</span> path/to/data.json</tt>. We recommend using a\n<tt>make test</tt> command to get the proper mission data before testing.</p>\n</div>\n<div id=\"data-json-format\">\n<h2>data.json Format</h2>\n<p>The <tt>data.json</tt> file contains PDS product names, urls and other\nmetainformation about the product.  This structure will be extended to support\ngeneric testing, for instance the <tt>label</tt> key will be changed to a\ndictionary that includes product label keys and the values found at those keys.</p>\n<p>Below is a sample snippet of a <tt>data.json</tt> entry:</p>\n<pre>\"1m298459885effa312p2956m2m1.img\": {\n    \"instrument\": \"MICROSCOPIC IMAGER\",\n    \"label\": \"PDS3\",\n    \"opens\": \"True\",\n    \"url\": \"http://pds-imaging.jpl.nasa.gov/data/mer/opportunity/mer1mo_0xxx/data/sol1918/edr/1m298459885effa312p2956m2m1.img\"\n},\n</pre>\n</div>\n<div id=\"missions-and-instruments\">\n<h2>Missions and Instruments</h2>\n<p>The following missions and their instruments have products available for\ntesting:</p>\n<ul>\n<li><dl>\n<dt>2001 Mars Odyssey</dt>\n<dd><ul>\n<li>Thermal Emission Imaging System</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Cassini</dt>\n<dd><ul>\n<li>Cassini Radar</li>\n<li>Imaging Science Subsystem</li>\n<li>Imaging Science Subsystem Narrow Angle</li>\n<li>Visual And Infrared Mapping Spectrometer</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Chandrayaan-1</dt>\n<dd><ul>\n<li>Context Camera</li>\n<li>High Resolution Imaging Science Experiment</li>\n<li>Mars Color Imager</li>\n<li>Moon Mineralogy Mapper</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Clementine</dt>\n<dd><ul>\n<li>High Resolution Camera</li>\n<li>Long Wave Infrared Camera</li>\n<li>Nearinfrared Camera</li>\n<li>Ultraviolet/Visible (Uv/Vis) Camera</li>\n<li>Ultraviolet/Visible Camera</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>ESA Mars Express</dt>\n<dd><ul>\n<li>High Resolution Stereo Camera</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Galileo</dt>\n<dd><ul>\n<li>Near-Infrared Mapping Spectrometer</li>\n<li>Solid_State_Imaging</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Lunar Reconnaissance Orbiter</dt>\n<dd><ul>\n<li>Lunar Reconnaissance Orbiter Camera</li>\n<li>Lyman Alpha Mapping Project</li>\n<li>Mid Infrared Camera 1</li>\n<li>Mid Infrared Camera 2</li>\n<li>Near Infrared Camera 1</li>\n<li>Near Infrared Camera 2</li>\n<li>Near Infrared Spectrometer 1</li>\n<li>Near Infrared Spectrometer 2</li>\n<li>Total Luminance Photometer</li>\n<li>Visible Camera</li>\n<li>Visible Spectrometer</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>MESSENGER</dt>\n<dd><ul>\n<li>Mercury Dual Imaging System Narrow Angle Camera</li>\n<li>Mercury Dual Imaging System Narrow Angle Camera, Mercury Dual Imaging System Wide Angle Camera</li>\n<li>Mercury Dual Imaging System Wide Angle Camera</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Magellan</dt>\n<dd><ul>\n<li>Global Topography Data Record</li>\n<li>Radar</li>\n<li>Radar System</li>\n<li>Synthetic-Aperture Radar</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Mariner 10</dt>\n<dd><ul>\n<li>Mariner 10</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Mariner 9</dt>\n<dd><ul>\n<li>Imaging Science Subsystem</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Mars Exploration Rover</dt>\n<dd><ul>\n<li>Alpha Particle X-Ray Spectrometer</li>\n<li>Descent Camera</li>\n<li>Front Hazard Avoidance Camera Left</li>\n<li>Front Hazard Avoidance Camera Right</li>\n<li>Hazard Avoidance Camera</li>\n<li>Microscopic Imager</li>\n<li>Moessbauer Spectrometer</li>\n<li>Navigation Camera</li>\n<li>Navigation Camera Left</li>\n<li>Panoramic Camera</li>\n<li>Panoramic Camera Left</li>\n<li>Panoramic Camera Right</li>\n<li>Panoromic Camera</li>\n<li>Rock Abrasion Tool</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Mars Global Surveyor</dt>\n<dd><ul>\n<li>Mars Orbiter Camera - Wide Angle</li>\n<li>Mars Orbiter Camera Wide Angle</li>\n<li>Near Infrared Mapping Spectrometer</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Mars Pathfinder</dt>\n<dd><ul>\n<li>Alpha X-Ray Spectrometer</li>\n<li>Alpha X-Ray Spectrometer (Apxs)</li>\n<li>Atmospheric Structure Instrument / Meteorology Package</li>\n<li>Imager For Mars Pathfinder</li>\n<li>Rover Camera Left</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Mars Science Laboratory</dt>\n<dd><ul>\n<li>Front Hazard Avoidance Camera Left String B</li>\n<li>Mars Descent Imager Camera</li>\n<li>Mars Hand Lens Imager Camera</li>\n<li>Mast Camera Left</li>\n<li>Navigation Camera Left String A</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Phoenix</dt>\n<dd><ul>\n<li>Optical Microscope</li>\n<li>Robotic Arm Camera</li>\n<li>Surface Stereo Imager</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Viking Lander</dt>\n<dd><ul>\n<li>Camera_1</li>\n<li>Camera_2</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Viking Orbiter</dt>\n<dd><ul>\n<li>Viking Visual Imaging Subsystem</li>\n<li>Visual_Imaging_Subsystem_Camera_A, Visual_Imaging_Subsystem_Camera_B</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Voyager</dt>\n<dd><ul>\n<li>Imaging Science Subsystem</li>\n<li>Imaging Science Subsystem - Narrow Angle Camera</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n<div id=\"history\">\n<h3>History</h3>\n</div>\n</div>\n<div id=\"id1\">\n<h2>0.4.0 (2018-01-21)</h2>\n<ul>\n<li>Made new methods/commands to get products by mission and/or instrument</li>\n<li>Made new methods/command to get a copy of the subset of the data.json file</li>\n<li>Added several new products</li>\n<li>Created new documentation</li>\n<li>Made documentation available on RTD</li>\n<li>Create new tests to get %100 coverage</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>0.3.3 (2015-07-27)</h2>\n<ul>\n<li>Added 0047MH0000110010100214C00_DRCL.IMG to the core dataset.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h2>0.3.2 (2015-07-21)</h2>\n<ul>\n<li>Added 2m132591087cfd1800p2977m2f1.img to the core dataset.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h2>0.3.1 (2015-07-13)</h2>\n<ul>\n<li>Updated data.json to support extended PDS product label tests.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h2>0.3.0 (2015-07-13)</h2>\n<ul>\n<li>Rewritten to be driven by command line options rather than by file\nsystem contents.  Run <tt>get_mission_data <span class=\"pre\">-h</span></tt> to see options.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h2>0.2.0 (2015-07-11)</h2>\n<ul>\n<li>Updated <tt>data.json</tt> to contain mission data from many more missions.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h2>0.1.1 (2015-07-09)</h2>\n<ul>\n<li>Fixed Python 3 compativility issue.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h2>0.1.0 (2015-06-24)</h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3510359, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0e5c82efc2a31ead2920485ec846913d", "sha256": "1f26028db845accb3a61e9341d5a95b08fd865c230f07d922929b36ea809c405"}, "downloads": -1, "filename": "planetary_test_data-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0e5c82efc2a31ead2920485ec846913d", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 4828, "upload_time": "2015-07-09T19:24:27", "upload_time_iso_8601": "2015-07-09T19:24:27.423758Z", "url": "https://files.pythonhosted.org/packages/44/fd/fa8e31ef40749f50ff0e5b3017225f80a7357c0938f247cfb34e6a2ac39d/planetary_test_data-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9520d923d698ae7185fd9586f6488e24", "sha256": "b3aa5be72d37d7d642a85a8c263492b4e027052e237d82eb5caa890c476569cf"}, "downloads": -1, "filename": "planetary_test_data-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9520d923d698ae7185fd9586f6488e24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6976949, "upload_time": "2015-07-09T19:24:21", "upload_time_iso_8601": "2015-07-09T19:24:21.288229Z", "url": "https://files.pythonhosted.org/packages/4a/86/ce0bd818c435222b1f94f3797d4f871b58d7d73aa95944937ac34f0dd59f/planetary_test_data-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ae9181557b09445d64a0e17e52ca07cb", "sha256": "32fa3c63819763e6f39a23d205ad1ae6fb382e1c7a6be67005065dd46407c2e8"}, "downloads": -1, "filename": "planetary_test_data-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ae9181557b09445d64a0e17e52ca07cb", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 5060, "upload_time": "2015-07-09T22:07:24", "upload_time_iso_8601": "2015-07-09T22:07:24.270144Z", "url": "https://files.pythonhosted.org/packages/76/35/6f00d29b80301a52c6b84822894a67d0e963cc08499c636fb3a6b7ecc818/planetary_test_data-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "319d9874e03d3e41ce5e71faa7c48710", "sha256": "7925f24e14f76b45e24e736f2a3bc1129080beb694e96b25ce98a97815ea461c"}, "downloads": -1, "filename": "planetary_test_data-0.1.1.tar.gz", "has_sig": false, "md5_digest": "319d9874e03d3e41ce5e71faa7c48710", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6977156, "upload_time": "2015-07-09T22:07:19", "upload_time_iso_8601": "2015-07-09T22:07:19.426370Z", "url": "https://files.pythonhosted.org/packages/cb/b2/f82e6b79fcbdffc60699dd3036aba21a49d0aa9db1f4905edd601f673c11/planetary_test_data-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "0702d2a8925e47b2860b8d94868a2a5a", "sha256": "b55d86b2be08966836ac0e0904966514cea3635d0712719ac21a58a6d0ef4fc6"}, "downloads": -1, "filename": "planetary_test_data-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0702d2a8925e47b2860b8d94868a2a5a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 10901, "upload_time": "2015-07-11T15:58:45", "upload_time_iso_8601": "2015-07-11T15:58:45.917695Z", "url": "https://files.pythonhosted.org/packages/69/74/8cd60ca23395f6e119e0443902710d6aa3a90aa4ee99da3a051f298b1c6e/planetary_test_data-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "924ebecc914c0220d3250b0d5f9c233b", "sha256": "d6635c45de87968e10219f551b68cfd8c1003a9ec8a9d90dc590c812e6995c31"}, "downloads": -1, "filename": "planetary_test_data-0.2.0.tar.gz", "has_sig": false, "md5_digest": "924ebecc914c0220d3250b0d5f9c233b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6984106, "upload_time": "2015-07-11T15:58:40", "upload_time_iso_8601": "2015-07-11T15:58:40.963083Z", "url": "https://files.pythonhosted.org/packages/c6/fc/5f447d799783834d4042b12fa9d56a757356af97ae14c3bec1dda5386c7b/planetary_test_data-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "a6d8490e794e41fcb9747467d003b887", "sha256": "87465afe220186acb28db3c685cd27a09a513a5db1394f4c62ee54dffc403120"}, "downloads": -1, "filename": "planetary_test_data-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a6d8490e794e41fcb9747467d003b887", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 13962, "upload_time": "2015-07-13T17:50:43", "upload_time_iso_8601": "2015-07-13T17:50:43.515369Z", "url": "https://files.pythonhosted.org/packages/30/0e/f0649d43822a4e48282aa10b9497d6d957d1bc21af80149cfbae35b39527/planetary_test_data-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac06e74552a0021ca5eab30ed8d4482d", "sha256": "5e9215b2b0b4b6fd2c75eb33c891a66ba64d82f01a5efe279dcf9ac07e6412cb"}, "downloads": -1, "filename": "planetary_test_data-0.3.0.tar.gz", "has_sig": false, "md5_digest": "ac06e74552a0021ca5eab30ed8d4482d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6986722, "upload_time": "2015-07-13T17:50:36", "upload_time_iso_8601": "2015-07-13T17:50:36.596762Z", "url": "https://files.pythonhosted.org/packages/10/c6/0b7b1ef58132858a98f0433e82ca92b75d9f73a7e496c01b3abedcc62575/planetary_test_data-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "7384afe83e7b62f91f94526d56f1eca0", "sha256": "75448f2f3b9610c52275cb03d30eb01d911ecbb647b92bc9bc827dd4720829f8"}, "downloads": -1, "filename": "planetary_test_data-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7384afe83e7b62f91f94526d56f1eca0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14088, "upload_time": "2015-07-14T00:24:18", "upload_time_iso_8601": "2015-07-14T00:24:18.568304Z", "url": "https://files.pythonhosted.org/packages/92/c0/9aa758fd5e5b01074519a87ad25a28018fe5ae4a628a0e2aab3bb2b053a8/planetary_test_data-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5fbe71b7975ece48709f28749cc9a56c", "sha256": "5f1608843c6636d2e89dcbcb18e5c208ba63dc6fb8a71cfe654a81f0abf0bd7e"}, "downloads": -1, "filename": "planetary_test_data-0.3.1.tar.gz", "has_sig": false, "md5_digest": "5fbe71b7975ece48709f28749cc9a56c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6986813, "upload_time": "2015-07-14T00:24:24", "upload_time_iso_8601": "2015-07-14T00:24:24.413220Z", "url": "https://files.pythonhosted.org/packages/07/04/50b80172670173701926699358ecad2acafec2ec0074ba43214e4d6292ab/planetary_test_data-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "159eaa12185c0c050d79139d86029f58", "sha256": "14081a9ba26532e05ffb6fdc367336d83169f42bedddf11c134274eba7a6aba0"}, "downloads": -1, "filename": "planetary_test_data-0.3.2.tar.gz", "has_sig": false, "md5_digest": "159eaa12185c0c050d79139d86029f58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6986789, "upload_time": "2015-07-21T20:44:38", "upload_time_iso_8601": "2015-07-21T20:44:38.672251Z", "url": "https://files.pythonhosted.org/packages/51/e3/b1f2003657bda17721385db4924be02533c4d3fba019ec1a005acb02b941/planetary_test_data-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "e003d011b919fdbeb359e2531a6dccc1", "sha256": "6c16553de21735815cbc15085aa45b571dae997334fa9cb9869cc30bdae321f0"}, "downloads": -1, "filename": "planetary_test_data-0.3.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e003d011b919fdbeb359e2531a6dccc1", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 14403, "upload_time": "2015-07-27T21:17:55", "upload_time_iso_8601": "2015-07-27T21:17:55.646034Z", "url": "https://files.pythonhosted.org/packages/1f/02/1a3d489c8b1779c5a131b9a9f1711afd0e9847099494cae05772a57a0d35/planetary_test_data-0.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15924a2769f86ef088fa2de12e6ecfc4", "sha256": "e40d7922372fb48a1a3de41bf74b7856cb6d3a8aa4bdbdf0e905b80062579438"}, "downloads": -1, "filename": "planetary_test_data-0.3.3.tar.gz", "has_sig": false, "md5_digest": "15924a2769f86ef088fa2de12e6ecfc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6986915, "upload_time": "2015-07-27T21:17:41", "upload_time_iso_8601": "2015-07-27T21:17:41.887796Z", "url": "https://files.pythonhosted.org/packages/8d/fb/6ea4b076583b47ffa51c1816dcce23ccd719420eefbc0e0e0e5a0a67d2a0/planetary_test_data-0.3.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "8f262569b963ed6b48bfefa5b32c41e1", "sha256": "23a5059059d2f589fac3b3374c2611e026d233f94cbf089bbbd5399703d44546"}, "downloads": -1, "filename": "planetary_test_data-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8f262569b963ed6b48bfefa5b32c41e1", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 19919, "upload_time": "2018-01-22T07:30:10", "upload_time_iso_8601": "2018-01-22T07:30:10.017988Z", "url": "https://files.pythonhosted.org/packages/df/a7/9b42f08c39518eb2ea51551bbce1ba678e9d074d10486c71a166d5797705/planetary_test_data-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d32973af070c4fdb0f8097a41967de5", "sha256": "17a8a93eae7707e00b02dc82c3f57724af8609e47a454496416229f76380f94c"}, "downloads": -1, "filename": "planetary_test_data-0.4.0.tar.gz", "has_sig": false, "md5_digest": "2d32973af070c4fdb0f8097a41967de5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30469, "upload_time": "2018-01-22T07:30:07", "upload_time_iso_8601": "2018-01-22T07:30:07.040788Z", "url": "https://files.pythonhosted.org/packages/79/a8/d8c588b404b7ddcffe38e59e5784ad4b27197e076b29afe857435c0add76/planetary_test_data-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8f262569b963ed6b48bfefa5b32c41e1", "sha256": "23a5059059d2f589fac3b3374c2611e026d233f94cbf089bbbd5399703d44546"}, "downloads": -1, "filename": "planetary_test_data-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8f262569b963ed6b48bfefa5b32c41e1", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 19919, "upload_time": "2018-01-22T07:30:10", "upload_time_iso_8601": "2018-01-22T07:30:10.017988Z", "url": "https://files.pythonhosted.org/packages/df/a7/9b42f08c39518eb2ea51551bbce1ba678e9d074d10486c71a166d5797705/planetary_test_data-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d32973af070c4fdb0f8097a41967de5", "sha256": "17a8a93eae7707e00b02dc82c3f57724af8609e47a454496416229f76380f94c"}, "downloads": -1, "filename": "planetary_test_data-0.4.0.tar.gz", "has_sig": false, "md5_digest": "2d32973af070c4fdb0f8097a41967de5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30469, "upload_time": "2018-01-22T07:30:07", "upload_time_iso_8601": "2018-01-22T07:30:07.040788Z", "url": "https://files.pythonhosted.org/packages/79/a8/d8c588b404b7ddcffe38e59e5784ad4b27197e076b29afe857435c0add76/planetary_test_data-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:41 2020"}