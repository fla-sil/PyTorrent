{"info": {"author": "Amey Hengle", "author_email": "domainamey@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# nautical_calculations\n\n>nautical-calculations is a Python library used for dealing with some basic Geospatial calculations on the geographic coordinate system. \n\n>It is developed to act as an interface for performing calculations like the nautical distance (Great Circle distance), Rhumb line distance and bearing angle. It explores the possiblitity of using these basic terms in performing operations like:\n\n>* Finding all the coordinates which lie on the great circle line joining any two points on the map\n>* Finding the coordinates of a point at a particular angle and distance from the given point.\n>* Finding the coordinates of midpoint on the great circle line joining any two points on the map.\n\n>The main idea is to save the time of defining your own functions to derive these terms, thus making the project development easier.\n\n\n![example 1](samples/distance.png) ![example2](samples/number.png) ![example 3](samples/midpoint.png)\n\n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install nautical_calculations.\n\n```bash\npip install nautical-calculations\n```\n\n## Usage\n```python\nfrom nautical_calculations import *\n```\nor\n```python\nfrom nautical_calculations.basic import get_distance\n\nfrom nautical_calculations.basic import get_bearing\n\nfrom nautical_calculations.basic import rhumb_line\n\nfrom nautical_calculations.operations import get_point\n\nfrom nautical_calculations.operations import get_midpoint\n\nfrom nautical_calculations.operations import divide_by_interval\n\nfrom nautical_calculations.operations import divide_by_number\n```\n## Usage examples:\n\nI) Nautical distance (km)\n```python\nget_distance(lat1,long1,lat2,long2) # returns the nautical distance (in km) between two coordinates (lat1,long1) and (lat2,long2)\n```\n\n\nII) Bearing (degrees)\n```python\nget_bearing(lat1,long1,lat2,long2) # returns the bearing between two coordinates (lat1,long1) and (lat2,long2)\n```\n\nIII) Rhumb Line (km)\n```python\nrhumb_line(lat1, long1, lat2, long2)   # returns rhumb line distance (in km) between two given coordinates\n```\n\nIV) Point (lat,long)\n```python\nget_point(lat,long,azimuth,distance) # returns the coordinate (lat1,long1) at a particular distance and angle (azimuth) from the given point (lat,long)\n```\n\n\nV) Intermediate points (by number)\n```python\ndivide_by_number(lat1, long1, lat2, long2, number) # returns a list containing all points in between the two specified coordinate pairs (lat-long) given the number value\n```\n\nVI) Intermediate points (by interval)\n```python\ndivide_by_interval(lat1, long1, lat2, long2, interval) # returns a list containing all points in between the two specified coordinate pairs (lat-long) given the interval value\n```\n\nVII) Midpoint\n```python\nget_midpoint(lat1, long1, lat2, long2) #Returns the coordinates of midpoint on the rhumb line joining the given endpoint coordinates (lat1,long1,lat2,long2)\n```\n\nVIII) Conversions\n```python\nfrom nautical_calculations.operations import convert_to_radians,convert_to_miles,convert_to_kilometres,convert_to_degress\n```\n```python\nconvert_to_miles(distance)             #converts distance in kms to miles\n```\n```python\nconvert_to_kilometres(distance)        #converts distance in miles to kms\n```\n```python\nconvert_to_radians(angle)              #converts angle in degrees to radians\n```\n```python\nconvert_to_degress(angle)              #converts angle in radians to degrees\n```\n\n## Github repository link\nhttps://github.com/AmeyHengle/nautical_calculations.git\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\n## References\n\n1) http://mathforum.org/library/drmath/view/51879.html\n2) http://www.edwilliams.org/avform.htm#Intermediate\n3) http://mathforum.org/library/drmath/view/55417.html\n4) http://mathforum.org/library/drmath/view/51822.html\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AmeyHengle/nautical_calculations", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "nautical-calculations", "package_url": "https://pypi.org/project/nautical-calculations/", "platform": "", "project_url": "https://pypi.org/project/nautical-calculations/", "project_urls": {"Homepage": "https://github.com/AmeyHengle/nautical_calculations"}, "release_url": "https://pypi.org/project/nautical-calculations/1.0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Get all the nautical calculations here.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>nautical_calculations</h1>\n<blockquote>\n<p>nautical-calculations is a Python library used for dealing with some basic Geospatial calculations on the geographic coordinate system.</p>\n</blockquote>\n<blockquote>\n<p>It is developed to act as an interface for performing calculations like the nautical distance (Great Circle distance), Rhumb line distance and bearing angle. It explores the possiblitity of using these basic terms in performing operations like:</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>Finding all the coordinates which lie on the great circle line joining any two points on the map</li>\n<li>Finding the coordinates of a point at a particular angle and distance from the given point.</li>\n<li>Finding the coordinates of midpoint on the great circle line joining any two points on the map.</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>The main idea is to save the time of defining your own functions to derive these terms, thus making the project development easier.</p>\n</blockquote>\n<p><img alt=\"example 1\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05eeaf9617a7a98e20ac84e8777602b1e31422b0/73616d706c65732f64697374616e63652e706e67\"> <img alt=\"example2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/befe9a634ad916b3dda504bcc307e2378c9422eb/73616d706c65732f6e756d6265722e706e67\"> <img alt=\"example 3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c47b7cec3f7f9b08ff2fd2c7d80dab05e85de7ec/73616d706c65732f6d6964706f696e742e706e67\"></p>\n<h2>Installation</h2>\n<p>Use the package manager <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> to install nautical_calculations.</p>\n<pre>pip install nautical-calculations\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nautical_calculations</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n</pre>\n<p>or</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nautical_calculations.basic</span> <span class=\"kn\">import</span> <span class=\"n\">get_distance</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">nautical_calculations.basic</span> <span class=\"kn\">import</span> <span class=\"n\">get_bearing</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">nautical_calculations.basic</span> <span class=\"kn\">import</span> <span class=\"n\">rhumb_line</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">nautical_calculations.operations</span> <span class=\"kn\">import</span> <span class=\"n\">get_point</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">nautical_calculations.operations</span> <span class=\"kn\">import</span> <span class=\"n\">get_midpoint</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">nautical_calculations.operations</span> <span class=\"kn\">import</span> <span class=\"n\">divide_by_interval</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">nautical_calculations.operations</span> <span class=\"kn\">import</span> <span class=\"n\">divide_by_number</span>\n</pre>\n<h2>Usage examples:</h2>\n<p>I) Nautical distance (km)</p>\n<pre><span class=\"n\">get_distance</span><span class=\"p\">(</span><span class=\"n\">lat1</span><span class=\"p\">,</span><span class=\"n\">long1</span><span class=\"p\">,</span><span class=\"n\">lat2</span><span class=\"p\">,</span><span class=\"n\">long2</span><span class=\"p\">)</span> <span class=\"c1\"># returns the nautical distance (in km) between two coordinates (lat1,long1) and (lat2,long2)</span>\n</pre>\n<p>II) Bearing (degrees)</p>\n<pre><span class=\"n\">get_bearing</span><span class=\"p\">(</span><span class=\"n\">lat1</span><span class=\"p\">,</span><span class=\"n\">long1</span><span class=\"p\">,</span><span class=\"n\">lat2</span><span class=\"p\">,</span><span class=\"n\">long2</span><span class=\"p\">)</span> <span class=\"c1\"># returns the bearing between two coordinates (lat1,long1) and (lat2,long2)</span>\n</pre>\n<p>III) Rhumb Line (km)</p>\n<pre><span class=\"n\">rhumb_line</span><span class=\"p\">(</span><span class=\"n\">lat1</span><span class=\"p\">,</span> <span class=\"n\">long1</span><span class=\"p\">,</span> <span class=\"n\">lat2</span><span class=\"p\">,</span> <span class=\"n\">long2</span><span class=\"p\">)</span>   <span class=\"c1\"># returns rhumb line distance (in km) between two given coordinates</span>\n</pre>\n<p>IV) Point (lat,long)</p>\n<pre><span class=\"n\">get_point</span><span class=\"p\">(</span><span class=\"n\">lat</span><span class=\"p\">,</span><span class=\"n\">long</span><span class=\"p\">,</span><span class=\"n\">azimuth</span><span class=\"p\">,</span><span class=\"n\">distance</span><span class=\"p\">)</span> <span class=\"c1\"># returns the coordinate (lat1,long1) at a particular distance and angle (azimuth) from the given point (lat,long)</span>\n</pre>\n<p>V) Intermediate points (by number)</p>\n<pre><span class=\"n\">divide_by_number</span><span class=\"p\">(</span><span class=\"n\">lat1</span><span class=\"p\">,</span> <span class=\"n\">long1</span><span class=\"p\">,</span> <span class=\"n\">lat2</span><span class=\"p\">,</span> <span class=\"n\">long2</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">)</span> <span class=\"c1\"># returns a list containing all points in between the two specified coordinate pairs (lat-long) given the number value</span>\n</pre>\n<p>VI) Intermediate points (by interval)</p>\n<pre><span class=\"n\">divide_by_interval</span><span class=\"p\">(</span><span class=\"n\">lat1</span><span class=\"p\">,</span> <span class=\"n\">long1</span><span class=\"p\">,</span> <span class=\"n\">lat2</span><span class=\"p\">,</span> <span class=\"n\">long2</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"p\">)</span> <span class=\"c1\"># returns a list containing all points in between the two specified coordinate pairs (lat-long) given the interval value</span>\n</pre>\n<p>VII) Midpoint</p>\n<pre><span class=\"n\">get_midpoint</span><span class=\"p\">(</span><span class=\"n\">lat1</span><span class=\"p\">,</span> <span class=\"n\">long1</span><span class=\"p\">,</span> <span class=\"n\">lat2</span><span class=\"p\">,</span> <span class=\"n\">long2</span><span class=\"p\">)</span> <span class=\"c1\">#Returns the coordinates of midpoint on the rhumb line joining the given endpoint coordinates (lat1,long1,lat2,long2)</span>\n</pre>\n<p>VIII) Conversions</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nautical_calculations.operations</span> <span class=\"kn\">import</span> <span class=\"n\">convert_to_radians</span><span class=\"p\">,</span><span class=\"n\">convert_to_miles</span><span class=\"p\">,</span><span class=\"n\">convert_to_kilometres</span><span class=\"p\">,</span><span class=\"n\">convert_to_degress</span>\n</pre>\n<pre><span class=\"n\">convert_to_miles</span><span class=\"p\">(</span><span class=\"n\">distance</span><span class=\"p\">)</span>             <span class=\"c1\">#converts distance in kms to miles</span>\n</pre>\n<pre><span class=\"n\">convert_to_kilometres</span><span class=\"p\">(</span><span class=\"n\">distance</span><span class=\"p\">)</span>        <span class=\"c1\">#converts distance in miles to kms</span>\n</pre>\n<pre><span class=\"n\">convert_to_radians</span><span class=\"p\">(</span><span class=\"n\">angle</span><span class=\"p\">)</span>              <span class=\"c1\">#converts angle in degrees to radians</span>\n</pre>\n<pre><span class=\"n\">convert_to_degress</span><span class=\"p\">(</span><span class=\"n\">angle</span><span class=\"p\">)</span>              <span class=\"c1\">#converts angle in radians to degrees</span>\n</pre>\n<h2>Github repository link</h2>\n<p><a href=\"https://github.com/AmeyHengle/nautical_calculations.git\" rel=\"nofollow\">https://github.com/AmeyHengle/nautical_calculations.git</a></p>\n<h2>Contributing</h2>\n<p>Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.</p>\n<p>Please make sure to update tests as appropriate.</p>\n<h2>References</h2>\n<ol>\n<li><a href=\"http://mathforum.org/library/drmath/view/51879.html\" rel=\"nofollow\">http://mathforum.org/library/drmath/view/51879.html</a></li>\n<li><a href=\"http://www.edwilliams.org/avform.htm#Intermediate\" rel=\"nofollow\">http://www.edwilliams.org/avform.htm#Intermediate</a></li>\n<li><a href=\"http://mathforum.org/library/drmath/view/55417.html\" rel=\"nofollow\">http://mathforum.org/library/drmath/view/55417.html</a></li>\n<li><a href=\"http://mathforum.org/library/drmath/view/51822.html\" rel=\"nofollow\">http://mathforum.org/library/drmath/view/51822.html</a></li>\n</ol>\n<h2>License</h2>\n<p><a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 7104327, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "91246c9aad36782e9f8676d2189a6c0b", "sha256": "e33573ef1dbe62f36ab8e5c1ca86cd22c66e004eb04c6bda0f7aa04fba25a6ce"}, "downloads": -1, "filename": "nautical_calculations-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "91246c9aad36782e9f8676d2189a6c0b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5994, "upload_time": "2020-04-26T11:02:33", "upload_time_iso_8601": "2020-04-26T11:02:33.920337Z", "url": "https://files.pythonhosted.org/packages/67/ed/3f1cfddba40e2679e7e282eca71322453dc4007f7785670c3ec7c37890ea/nautical_calculations-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fde52d6977ebdcc2b3d5f493ae7098c8", "sha256": "9741526459ccd2c68c1061a82f4e3ce5e9d048e27bb5988088ef2b711c55a396"}, "downloads": -1, "filename": "nautical_calculations-1.0.1.tar.gz", "has_sig": false, "md5_digest": "fde52d6977ebdcc2b3d5f493ae7098c8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4660, "upload_time": "2020-04-26T11:02:36", "upload_time_iso_8601": "2020-04-26T11:02:36.261165Z", "url": "https://files.pythonhosted.org/packages/e2/59/77bbd62a62267004bdf52c6338a9351020aa01a384ee64ab444c69d9a25d/nautical_calculations-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "91246c9aad36782e9f8676d2189a6c0b", "sha256": "e33573ef1dbe62f36ab8e5c1ca86cd22c66e004eb04c6bda0f7aa04fba25a6ce"}, "downloads": -1, "filename": "nautical_calculations-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "91246c9aad36782e9f8676d2189a6c0b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5994, "upload_time": "2020-04-26T11:02:33", "upload_time_iso_8601": "2020-04-26T11:02:33.920337Z", "url": "https://files.pythonhosted.org/packages/67/ed/3f1cfddba40e2679e7e282eca71322453dc4007f7785670c3ec7c37890ea/nautical_calculations-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fde52d6977ebdcc2b3d5f493ae7098c8", "sha256": "9741526459ccd2c68c1061a82f4e3ce5e9d048e27bb5988088ef2b711c55a396"}, "downloads": -1, "filename": "nautical_calculations-1.0.1.tar.gz", "has_sig": false, "md5_digest": "fde52d6977ebdcc2b3d5f493ae7098c8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4660, "upload_time": "2020-04-26T11:02:36", "upload_time_iso_8601": "2020-04-26T11:02:36.261165Z", "url": "https://files.pythonhosted.org/packages/e2/59/77bbd62a62267004bdf52c6338a9351020aa01a384ee64ab444c69d9a25d/nautical_calculations-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:14 2020"}