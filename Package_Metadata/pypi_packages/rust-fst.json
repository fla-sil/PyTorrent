{"info": {"author": "Johannes Baiter", "author_email": "johannes.baiter@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Topic :: Text Processing :: Indexing"], "description": "python-rust-fst\r\n===============\r\n\r\n| |appveyor|\r\n| |travis|\r\n\r\n| Python bindings for `burntsushi's <http://burntsushi.net>`__ `fst\r\n  crate <https://github.com/BurntSushi/fst>`__\r\n  (`rustdocs <http://burntsushi.net/rustdoc/fst/>`__)\r\n| for FST-backed sets and maps.\r\n\r\n| For reasons why you might want to consider using it, see BurntSushi's\r\n  great\r\n| article on `\"Index[ing] 1,600,000,000 Keys with Automata and\r\n  Rust\" <http://blog.burntsushi.net/transducers/>`__.\r\n\r\n**tl;dr**:\r\n\r\n-  Work with larger-than-memory sets\r\n-  Perform fuzzy search using Levenshtein automata\r\n\r\nInstallation\r\n------------\r\n\r\n-  You will need:\r\n\r\n   -  Python >= 3.3, Python or PyPy >= 2.7 with development headers\r\n      installed\r\n   -  Rust nightly (install via `rustup <https://www.rustup.rs/>`__)\r\n\r\n-  Clone the repository. Installation with ``pip install git+...`` does\r\n   not work\r\n   currently\r\n-  Run ``rustup override add nightly`` to add an override for rustup to\r\n   use the\r\n   nightly channel for the repository\r\n-  Run ``python setup.py bdist_wheel`` to generate a wheel\r\n-  Install the wheel with\r\n   ``pip install dist/rust_fst-0.1-py3-none-any.whl``\r\n\r\nStatus\r\n------\r\n\r\nThe package exposes almost all functionality of the ``fst`` crate,\r\nexcept for:\r\n\r\n-  Combining the results of slicing, ``search`` and ``search_re`` with\r\n   set operations\r\n-  Using raw transducers\r\n\r\nExamples\r\n--------\r\n\r\n.. code:: python\r\n\r\n    from rust_fst import Map, Set\r\n\r\n    # Building a set in memory\r\n    keys = [\"fa\", \"fo\", \"fob\", \"focus\", \"foo\", \"food\", \"foul\"]\r\n    s = Set.from_iter(keys)\r\n\r\n    # Fuzzy searches on the set\r\n    matches = list(s.search(term=\"foo\", max_dist=1))\r\n    assert matches == [\"fo\", \"fob\", \"foo\", \"food\"]\r\n\r\n    # Searching with a regular expression\r\n    matches = list(s.search_re(r'f\\w{2}'))\r\n    assert matches == [\"fob\", \"foo\"]\r\n\r\n    # Store map on disk, requiring only constant memory for querying\r\n    items = [(\"bruce\", 1), (\"clarence\", 2), (\"stevie\", 3)]\r\n    m = Map.from_iter(items, path=\"/tmp/map.fst\")\r\n\r\n    # Find all items whose key is greater or equal (in lexicographical sense) to\r\n    # 'clarence'\r\n    matches = dict(m['clarence':])\r\n    assert matches == {'clarence': 2, 'stevie': 3}\r\n\r\nDocumentation\r\n-------------\r\n\r\nHead over to `readthedocs.org <https://rust-fst.readthedocs.org/>`__ for\r\nthe API documentation.\r\n\r\n| If you want to know more about performance characteristics, memory\r\n  usage\r\n| and about the implementation details, please head over to the\r\n| `documentation for the Rust\r\n  crate <https://github.com/BurntSushi/fst>`__\r\n\r\n.. |appveyor| image:: https://ci.appveyor.com/api/projects/status/github/jbaiter/python-rust-fst\r\n   :target: https://ci.appveyor.com/project/jbaiter/python-rust-fst\r\n.. |travis| image:: https://travis-ci.org/jbaiter/python-rust-fst.svg\r\n   :target: https://travis-ci.org/jbaiter/python-rust-fst", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jbaiter/python-rust-fst", "keywords": "fst,rust,levenshtein,automata,transducer,data_structures", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "rust-fst", "package_url": "https://pypi.org/project/rust-fst/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/rust-fst/", "project_urls": {"Homepage": "https://github.com/jbaiter/python-rust-fst"}, "release_url": "https://pypi.org/project/rust-fst/0.1.2/", "requires_dist": ["cffi (>=1.0.0)"], "requires_python": "", "summary": "Python bindings for the Rust `fst` crate, providing sets and maps backed by finite state transducers.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<div><a href=\"https://ci.appveyor.com/project/jbaiter/python-rust-fst\" rel=\"nofollow\"><img alt=\"appveyor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b2045f55d2c7c973bf71b97ce0ddc76e744a1475/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6a6261697465722f707974686f6e2d727573742d667374\"></a></div>\n<div><a href=\"https://travis-ci.org/jbaiter/python-rust-fst\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7d81ab54b086d6b70470cf1eef001f48d5eaeaa0/68747470733a2f2f7472617669732d63692e6f72672f6a6261697465722f707974686f6e2d727573742d6673742e737667\"></a></div>\n</div>\n<div>\n<div>Python bindings for <a href=\"http://burntsushi.net\" rel=\"nofollow\">burntsushi\u2019s</a> <a href=\"https://github.com/BurntSushi/fst\" rel=\"nofollow\">fst\ncrate</a>\n(<a href=\"http://burntsushi.net/rustdoc/fst/\" rel=\"nofollow\">rustdocs</a>)</div>\n<div>for FST-backed sets and maps.</div>\n</div>\n<div>\n<div>For reasons why you might want to consider using it, see BurntSushi\u2019s\ngreat</div>\n<div>article on <a href=\"http://blog.burntsushi.net/transducers/\" rel=\"nofollow\">\u201cIndex[ing] 1,600,000,000 Keys with Automata and\nRust\u201d</a>.</div>\n</div>\n<p><strong>tl;dr</strong>:</p>\n<ul>\n<li>Work with larger-than-memory sets</li>\n<li>Perform fuzzy search using Levenshtein automata</li>\n</ul>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ul>\n<li>You will need:<ul>\n<li>Python &gt;= 3.3, Python or PyPy &gt;= 2.7 with development headers\ninstalled</li>\n<li>Rust nightly (install via <a href=\"https://www.rustup.rs/\" rel=\"nofollow\">rustup</a>)</li>\n</ul>\n</li>\n<li>Clone the repository. Installation with <tt>pip install <span class=\"pre\">git+...</span></tt> does\nnot work\ncurrently</li>\n<li>Run <tt>rustup override add nightly</tt> to add an override for rustup to\nuse the\nnightly channel for the repository</li>\n<li>Run <tt>python setup.py bdist_wheel</tt> to generate a wheel</li>\n<li>Install the wheel with\n<tt>pip install <span class=\"pre\">dist/rust_fst-0.1-py3-none-any.whl</span></tt></li>\n</ul>\n</div>\n<div id=\"status\">\n<h2>Status</h2>\n<p>The package exposes almost all functionality of the <tt>fst</tt> crate,\nexcept for:</p>\n<ul>\n<li>Combining the results of slicing, <tt>search</tt> and <tt>search_re</tt> with\nset operations</li>\n<li>Using raw transducers</li>\n</ul>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rust_fst</span> <span class=\"kn\">import</span> <span class=\"n\">Map</span><span class=\"p\">,</span> <span class=\"n\">Set</span>\n\n<span class=\"c1\"># Building a set in memory</span>\n<span class=\"n\">keys</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"fa\"</span><span class=\"p\">,</span> <span class=\"s2\">\"fo\"</span><span class=\"p\">,</span> <span class=\"s2\">\"fob\"</span><span class=\"p\">,</span> <span class=\"s2\">\"focus\"</span><span class=\"p\">,</span> <span class=\"s2\">\"foo\"</span><span class=\"p\">,</span> <span class=\"s2\">\"food\"</span><span class=\"p\">,</span> <span class=\"s2\">\"foul\"</span><span class=\"p\">]</span>\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">Set</span><span class=\"o\">.</span><span class=\"n\">from_iter</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Fuzzy searches on the set</span>\n<span class=\"n\">matches</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">term</span><span class=\"o\">=</span><span class=\"s2\">\"foo\"</span><span class=\"p\">,</span> <span class=\"n\">max_dist</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"k\">assert</span> <span class=\"n\">matches</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"s2\">\"fo\"</span><span class=\"p\">,</span> <span class=\"s2\">\"fob\"</span><span class=\"p\">,</span> <span class=\"s2\">\"foo\"</span><span class=\"p\">,</span> <span class=\"s2\">\"food\"</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Searching with a regular expression</span>\n<span class=\"n\">matches</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">search_re</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'f\\w</span><span class=\"si\">{2}</span><span class=\"s1\">'</span><span class=\"p\">))</span>\n<span class=\"k\">assert</span> <span class=\"n\">matches</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"s2\">\"fob\"</span><span class=\"p\">,</span> <span class=\"s2\">\"foo\"</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Store map on disk, requiring only constant memory for querying</span>\n<span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s2\">\"bruce\"</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s2\">\"clarence\"</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s2\">\"stevie\"</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)]</span>\n<span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">Map</span><span class=\"o\">.</span><span class=\"n\">from_iter</span><span class=\"p\">(</span><span class=\"n\">items</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"/tmp/map.fst\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Find all items whose key is greater or equal (in lexicographical sense) to</span>\n<span class=\"c1\"># 'clarence'</span>\n<span class=\"n\">matches</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">[</span><span class=\"s1\">'clarence'</span><span class=\"p\">:])</span>\n<span class=\"k\">assert</span> <span class=\"n\">matches</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s1\">'clarence'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'stevie'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Head over to <a href=\"https://rust-fst.readthedocs.org/\" rel=\"nofollow\">readthedocs.org</a> for\nthe API documentation.</p>\n<div>\n<div>If you want to know more about performance characteristics, memory\nusage</div>\n<div>and about the implementation details, please head over to the</div>\n<div><a href=\"https://github.com/BurntSushi/fst\" rel=\"nofollow\">documentation for the Rust\ncrate</a></div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2135932, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "59a642d3df4f4b6ef257fb3822a252a4", "sha256": "bf093354aa40b74261fcd7e7e2146d3265710fd9d9205025662ed052351e13b0"}, "downloads": -1, "filename": "rust-fst-0.1.tar.gz", "has_sig": false, "md5_digest": "59a642d3df4f4b6ef257fb3822a252a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12857, "upload_time": "2016-05-23T10:40:47", "upload_time_iso_8601": "2016-05-23T10:40:47.188405Z", "url": "https://files.pythonhosted.org/packages/09/77/d545744f4b1229facca55fc9936599ca6cc1cb5117b350754ed327ca3ff8/rust-fst-0.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "0db7410521722f2602ca166e669fde3c", "sha256": "bb4107866472df3ed878e714726e59764867c8262b353206c812ef38c1ebb0ad"}, "downloads": -1, "filename": "rust_fst-0.1.2-py2.py3-none-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "0db7410521722f2602ca166e669fde3c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 858064, "upload_time": "2016-05-26T17:02:10", "upload_time_iso_8601": "2016-05-26T17:02:10.143558Z", "url": "https://files.pythonhosted.org/packages/23/12/42db4ee067877f1a9be3f4f2c1c70499036c45ab2dd0abb44b329ee66756/rust_fst-0.1.2-py2.py3-none-macosx_10_9_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3fbbad58a6af001dd674df77973bf808", "sha256": "0ee2261e89264709d8ef040965c12538bb3b7db89ee00e22f8816d19c86295ce"}, "downloads": -1, "filename": "rust_fst-0.1.2-py2.py3-none-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "3fbbad58a6af001dd674df77973bf808", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1025960, "upload_time": "2016-05-26T17:24:57", "upload_time_iso_8601": "2016-05-26T17:24:57.397023Z", "url": "https://files.pythonhosted.org/packages/f2/64/d8aba6d4bc2193377359086062af8367afb3d8726774fe4750f00c07653a/rust_fst-0.1.2-py2.py3-none-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c9b5711635164b4ece93766cb6744f1", "sha256": "5ea0461726d0f044a32ae39620ab93762a0cefd0c7a825a36eff59f9d3c4f508"}, "downloads": -1, "filename": "rust_fst-0.1.2-py2.py3-none-win32.whl", "has_sig": false, "md5_digest": "9c9b5711635164b4ece93766cb6744f1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1216115, "upload_time": "2016-05-26T17:25:03", "upload_time_iso_8601": "2016-05-26T17:25:03.587631Z", "url": "https://files.pythonhosted.org/packages/cd/24/3e47451113ab401be513e8ed64023d7c96c2203a4e1493155e9cf44b4fc4/rust_fst-0.1.2-py2.py3-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "472fd4fab195a7e2ea81c665014d74a7", "sha256": "04c3bcd57ed20688d885e220c0e83df69b956c929b3e1c12ed8431effa3a1e52"}, "downloads": -1, "filename": "rust_fst-0.1.2-py2.py3-none-win_amd64.whl", "has_sig": false, "md5_digest": "472fd4fab195a7e2ea81c665014d74a7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1256460, "upload_time": "2016-05-26T17:25:08", "upload_time_iso_8601": "2016-05-26T17:25:08.806256Z", "url": "https://files.pythonhosted.org/packages/c0/9d/a116a1eb984c4798d8386f8366147b0a2e8562d7386f23db6327a0b007ee/rust_fst-0.1.2-py2.py3-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e41fafcdd3f77a68fcf71dd756aa582d", "sha256": "e647e9ae1c38ae2e6f6967ea7bb9075bb06c020e5d0f344f4182786040105886"}, "downloads": -1, "filename": "rust-fst-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e41fafcdd3f77a68fcf71dd756aa582d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8291, "upload_time": "2016-05-26T17:25:13", "upload_time_iso_8601": "2016-05-26T17:25:13.625139Z", "url": "https://files.pythonhosted.org/packages/fb/88/db1427d446119800e00c6e01bd2ffc2cab6babe39e84a014e6afef4a9b22/rust-fst-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0db7410521722f2602ca166e669fde3c", "sha256": "bb4107866472df3ed878e714726e59764867c8262b353206c812ef38c1ebb0ad"}, "downloads": -1, "filename": "rust_fst-0.1.2-py2.py3-none-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "0db7410521722f2602ca166e669fde3c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 858064, "upload_time": "2016-05-26T17:02:10", "upload_time_iso_8601": "2016-05-26T17:02:10.143558Z", "url": "https://files.pythonhosted.org/packages/23/12/42db4ee067877f1a9be3f4f2c1c70499036c45ab2dd0abb44b329ee66756/rust_fst-0.1.2-py2.py3-none-macosx_10_9_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3fbbad58a6af001dd674df77973bf808", "sha256": "0ee2261e89264709d8ef040965c12538bb3b7db89ee00e22f8816d19c86295ce"}, "downloads": -1, "filename": "rust_fst-0.1.2-py2.py3-none-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "3fbbad58a6af001dd674df77973bf808", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1025960, "upload_time": "2016-05-26T17:24:57", "upload_time_iso_8601": "2016-05-26T17:24:57.397023Z", "url": "https://files.pythonhosted.org/packages/f2/64/d8aba6d4bc2193377359086062af8367afb3d8726774fe4750f00c07653a/rust_fst-0.1.2-py2.py3-none-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c9b5711635164b4ece93766cb6744f1", "sha256": "5ea0461726d0f044a32ae39620ab93762a0cefd0c7a825a36eff59f9d3c4f508"}, "downloads": -1, "filename": "rust_fst-0.1.2-py2.py3-none-win32.whl", "has_sig": false, "md5_digest": "9c9b5711635164b4ece93766cb6744f1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1216115, "upload_time": "2016-05-26T17:25:03", "upload_time_iso_8601": "2016-05-26T17:25:03.587631Z", "url": "https://files.pythonhosted.org/packages/cd/24/3e47451113ab401be513e8ed64023d7c96c2203a4e1493155e9cf44b4fc4/rust_fst-0.1.2-py2.py3-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "472fd4fab195a7e2ea81c665014d74a7", "sha256": "04c3bcd57ed20688d885e220c0e83df69b956c929b3e1c12ed8431effa3a1e52"}, "downloads": -1, "filename": "rust_fst-0.1.2-py2.py3-none-win_amd64.whl", "has_sig": false, "md5_digest": "472fd4fab195a7e2ea81c665014d74a7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1256460, "upload_time": "2016-05-26T17:25:08", "upload_time_iso_8601": "2016-05-26T17:25:08.806256Z", "url": "https://files.pythonhosted.org/packages/c0/9d/a116a1eb984c4798d8386f8366147b0a2e8562d7386f23db6327a0b007ee/rust_fst-0.1.2-py2.py3-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e41fafcdd3f77a68fcf71dd756aa582d", "sha256": "e647e9ae1c38ae2e6f6967ea7bb9075bb06c020e5d0f344f4182786040105886"}, "downloads": -1, "filename": "rust-fst-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e41fafcdd3f77a68fcf71dd756aa582d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8291, "upload_time": "2016-05-26T17:25:13", "upload_time_iso_8601": "2016-05-26T17:25:13.625139Z", "url": "https://files.pythonhosted.org/packages/fb/88/db1427d446119800e00c6e01bd2ffc2cab6babe39e84a014e6afef4a9b22/rust-fst-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:52 2020"}