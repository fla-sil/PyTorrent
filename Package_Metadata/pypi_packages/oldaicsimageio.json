{"info": {"author": "AICS", "author_email": "!AICS_SW@alleninstitute.org", "bugtrack_url": null, "classifiers": [], "description": "# AICS Image library\nThe oldaicsimageio package is designed to provide an easy interface with CZI, OME-TIFF, and PNG file formats.\n\n## Level of Support\nWe are not currently supporting this code for external use, but simply releasing it \nto the community AS IS. It is used for within our organization. We are not able to \nprovide any guarantees of support. The community is welcome to submit issues, but \nyou should not expect an active response.\n\n## Development\nSee [BUILD.md](BUILD.md) for information operations related to developing the code.\n\n## Usage\n\n```\nfrom oldaicsimageio import AICSImage\n\nimg = AICSImage(\"my_ome.tiff_or_tiff_or_czi\")\n\n# Get the image data as TCZYX\nimg.data\n\n# Get channel information if you have an OME tiff\npixels = img.metadata.image().Pixels\nchannels = [pixels.Channel(i) for i in range(pixels.get_channel_count())]\nchannels = [{\"name\": c.get_Name(), \"index\": c.get_ID()} for c in channels]\n\n\n# Note on channel id differences between oldaicsimageio.OMEXML and lxml.etree._Element:\n        # Under lxml.etree._Element, Channel Id looks like the following: `'Channel:0'`\n        # Where the single integer corresponds to the channel dimension index in image data.\n        # Under oldaicsimageio, the same Channel Id looks like the following: `'Channel:0:0'`\n        # Where it is the second of the two integers that corresponds to the channel dimension index in image data.\n        # Regardless of structure, these can both be parsed as integers with the following:\n        # `int(channel_id.split(\":\")[-1])`\n\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "Allen Institute Software License", "maintainer": "", "maintainer_email": "", "name": "oldaicsimageio", "package_url": "https://pypi.org/project/oldaicsimageio/", "platform": "", "project_url": "https://pypi.org/project/oldaicsimageio/", "project_urls": null, "release_url": "https://pypi.org/project/oldaicsimageio/0.6.6/", "requires_dist": ["imageio (>=2.3.0)", "numpy (>=1.14.5)", "Pillow (>=5.2.0)", "scipy (>=1.1.0)", "matplotlib (>=2.2.2)", "scikit-image (>=0.14.0)", "tifffile (==0.15.1)", "flake8 ; extra == 'lint_group'", "pytest ; extra == 'test_group'", "pytest-cov ; extra == 'test_group'", "pytest-raises ; extra == 'test_group'"], "requires_python": "", "summary": "A generalized scientific image processing module from the Allen Institute for Cell Science.", "version": "0.6.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>AICS Image library</h1>\n<p>The oldaicsimageio package is designed to provide an easy interface with CZI, OME-TIFF, and PNG file formats.</p>\n<h2>Level of Support</h2>\n<p>We are not currently supporting this code for external use, but simply releasing it\nto the community AS IS. It is used for within our organization. We are not able to\nprovide any guarantees of support. The community is welcome to submit issues, but\nyou should not expect an active response.</p>\n<h2>Development</h2>\n<p>See <a href=\"BUILD.md\" rel=\"nofollow\">BUILD.md</a> for information operations related to developing the code.</p>\n<h2>Usage</h2>\n<pre><code>from oldaicsimageio import AICSImage\n\nimg = AICSImage(\"my_ome.tiff_or_tiff_or_czi\")\n\n# Get the image data as TCZYX\nimg.data\n\n# Get channel information if you have an OME tiff\npixels = img.metadata.image().Pixels\nchannels = [pixels.Channel(i) for i in range(pixels.get_channel_count())]\nchannels = [{\"name\": c.get_Name(), \"index\": c.get_ID()} for c in channels]\n\n\n# Note on channel id differences between oldaicsimageio.OMEXML and lxml.etree._Element:\n        # Under lxml.etree._Element, Channel Id looks like the following: `'Channel:0'`\n        # Where the single integer corresponds to the channel dimension index in image data.\n        # Under oldaicsimageio, the same Channel Id looks like the following: `'Channel:0:0'`\n        # Where it is the second of the two integers that corresponds to the channel dimension index in image data.\n        # Regardless of structure, these can both be parsed as integers with the following:\n        # `int(channel_id.split(\":\")[-1])`\n\n</code></pre>\n\n          </div>"}, "last_serial": 6034656, "releases": {"0.6.6": [{"comment_text": "", "digests": {"md5": "4d43a934d7ba644e2d9cb5d2adab7881", "sha256": "17d2c7e1b0f8d4e8c496ff35f88a262d44b99fa4b4dcfa402ce0169f430fa031"}, "downloads": -1, "filename": "oldaicsimageio-0.6.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4d43a934d7ba644e2d9cb5d2adab7881", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 44322, "upload_time": "2019-10-26T18:55:08", "upload_time_iso_8601": "2019-10-26T18:55:08.083499Z", "url": "https://files.pythonhosted.org/packages/37/b1/cdb6da49f17f230d128af8ca82aa2c36ec3b17f840ddb6e0efd62e87a7b8/oldaicsimageio-0.6.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b73f49a1e441c0d7f840e01a5252919", "sha256": "be6727931f790d8c7d5cd055cf1e5713d134bf8b6c8da19d4beb7940ac28699b"}, "downloads": -1, "filename": "oldaicsimageio-0.6.6.tar.gz", "has_sig": false, "md5_digest": "5b73f49a1e441c0d7f840e01a5252919", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38298, "upload_time": "2019-10-26T18:55:09", "upload_time_iso_8601": "2019-10-26T18:55:09.571340Z", "url": "https://files.pythonhosted.org/packages/10/1d/b34d7e5b212aaacfe658dd74258fa04e4a6f481909f3c53b219032ba511d/oldaicsimageio-0.6.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4d43a934d7ba644e2d9cb5d2adab7881", "sha256": "17d2c7e1b0f8d4e8c496ff35f88a262d44b99fa4b4dcfa402ce0169f430fa031"}, "downloads": -1, "filename": "oldaicsimageio-0.6.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4d43a934d7ba644e2d9cb5d2adab7881", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 44322, "upload_time": "2019-10-26T18:55:08", "upload_time_iso_8601": "2019-10-26T18:55:08.083499Z", "url": "https://files.pythonhosted.org/packages/37/b1/cdb6da49f17f230d128af8ca82aa2c36ec3b17f840ddb6e0efd62e87a7b8/oldaicsimageio-0.6.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b73f49a1e441c0d7f840e01a5252919", "sha256": "be6727931f790d8c7d5cd055cf1e5713d134bf8b6c8da19d4beb7940ac28699b"}, "downloads": -1, "filename": "oldaicsimageio-0.6.6.tar.gz", "has_sig": false, "md5_digest": "5b73f49a1e441c0d7f840e01a5252919", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38298, "upload_time": "2019-10-26T18:55:09", "upload_time_iso_8601": "2019-10-26T18:55:09.571340Z", "url": "https://files.pythonhosted.org/packages/10/1d/b34d7e5b212aaacfe658dd74258fa04e4a6f481909f3c53b219032ba511d/oldaicsimageio-0.6.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:42 2020"}