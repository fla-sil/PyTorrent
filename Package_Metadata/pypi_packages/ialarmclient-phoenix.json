{"info": {"author": "Riccardo Tempesta", "author_email": "info@riccardotempesta.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7"], "description": "# Python client for iAlarm\n\nAlso compatible with Meiantech, Allarmi365, and others\n\n## Usage example\n\n```\n#!/usr/bin/env python\nimport asyncio\n\nfrom ialarmclient import IalarmClient\n\n\nasync def start():\n    ialarm = IalarmClient(\n        username=\"username\", # <- Your alarm web interface username\n        password=\"password\", # <- Your alarm web interface password\n        url=\"http://192.168.123.123\" # <- Your alarm web interface URL (no trailing slash)\n    )\n\n    # Refresh alarm status, to be called every time you need to read updated information\n    # May take up to 30-40 seconds the first time. Subsequent calls will be almost immediate.\n    await ialarm.refresh() \n\n    # Retrieve information about your alarm zones (name, status, etc...)\n    zones = await ialarm.get_zones()\n    for zone in zones:\n        if zone.type != ialarmclient.ZONE_TYPE_DISABLED:\n            print(\"Zone {} is {}\".format(zone.number, zone.name))\n            # Other information can be read (see IalarmZone)\n\n    # Retrieve alarm status (armed, disarmed, power failure, etc...)\n    status = await ialarm.get_status()\n\n    # Commands to arm/disarm your system\n    await ialarm.arm_stay()\n    await ialarm.arm_away()\n    await ialarm.disarm()\n    await ialarm.cancel_alarm()\n\n    # List all zones in alarm\n    status = await ialarm.get_status()\n    for alarmed_zone in status.alarmed_zones:\n        print(\"Zone {} is alarmed\".format(alarmed_zone.name))\n\n    # Status information for your system\n    if status.power_source_failure:\n        print(\"Power failure\")\n\n    if status.low_battery:\n        print(\"Low battery\")\n\n    if status.panic_alarm:\n        print(\"Panic alarm triggered\")\n\n    if status.arm_status == ialarmclient.STATUS_ARMED_AWAY:\n        print(\"System armed\")\n    elif status.arm_status == ialarmclient.STATUS_ARMED_STAY:\n        print(\"System armed (STAY)\")\n    elif status.arm_status == ialarmclient.STATUS_DISARMED:\n        print(\"System disarmed\")    \n\nif __name__ == \"__main__\":\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(start())\n\n```\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/phoenix128/python-ialarmclient", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ialarmclient-phoenix", "package_url": "https://pypi.org/project/ialarmclient-phoenix/", "platform": "", "project_url": "https://pypi.org/project/ialarmclient-phoenix/", "project_urls": {"Homepage": "https://github.com/phoenix128/python-ialarmclient"}, "release_url": "https://pypi.org/project/ialarmclient-phoenix/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Meiantech, iAlarm, Antifurto365, AllarmiWireless and other alarm systems support", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Python client for iAlarm<br><br>Also compatible with Meiantech, Allarmi365, and others<br><br>## Usage example<br><br>```<br>#!/usr/bin/env python<br>import asyncio<br><br>from ialarmclient import IalarmClient<br><br><br>async def start():<br>    ialarm = IalarmClient(<br>        username=\"username\", # &lt;- Your alarm web interface username<br>        password=\"password\", # &lt;- Your alarm web interface password<br>        url=\"http://192.168.123.123\" # &lt;- Your alarm web interface URL (no trailing slash)<br>    )<br><br>    # Refresh alarm status, to be called every time you need to read updated information<br>    # May take up to 30-40 seconds the first time. Subsequent calls will be almost immediate.<br>    await ialarm.refresh() <br><br>    # Retrieve information about your alarm zones (name, status, etc...)<br>    zones = await ialarm.get_zones()<br>    for zone in zones:<br>        if zone.type != ialarmclient.ZONE_TYPE_DISABLED:<br>            print(\"Zone {} is {}\".format(zone.number, zone.name))<br>            # Other information can be read (see IalarmZone)<br><br>    # Retrieve alarm status (armed, disarmed, power failure, etc...)<br>    status = await ialarm.get_status()<br><br>    # Commands to arm/disarm your system<br>    await ialarm.arm_stay()<br>    await ialarm.arm_away()<br>    await ialarm.disarm()<br>    await ialarm.cancel_alarm()<br><br>    # List all zones in alarm<br>    status = await ialarm.get_status()<br>    for alarmed_zone in status.alarmed_zones:<br>        print(\"Zone {} is alarmed\".format(alarmed_zone.name))<br><br>    # Status information for your system<br>    if status.power_source_failure:<br>        print(\"Power failure\")<br><br>    if status.low_battery:<br>        print(\"Low battery\")<br><br>    if status.panic_alarm:<br>        print(\"Panic alarm triggered\")<br><br>    if status.arm_status == ialarmclient.STATUS_ARMED_AWAY:<br>        print(\"System armed\")<br>    elif status.arm_status == ialarmclient.STATUS_ARMED_STAY:<br>        print(\"System armed (STAY)\")<br>    elif status.arm_status == ialarmclient.STATUS_DISARMED:<br>        print(\"System disarmed\")    <br><br>if __name__ == \"__main__\":<br>    loop = asyncio.get_event_loop()<br>    loop.run_until_complete(start())<br><br>```<br><br>\n          </div>"}, "last_serial": 4900032, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "bd504d15312e903a9feae3ae9417d9e8", "sha256": "1a87f88a9eba0b66a2f4bceaec192efdc5357cca2ec87b740fb44a6a6282e3e5"}, "downloads": -1, "filename": "ialarmclient_phoenix-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bd504d15312e903a9feae3ae9417d9e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6234, "upload_time": "2019-03-05T14:26:51", "upload_time_iso_8601": "2019-03-05T14:26:51.419950Z", "url": "https://files.pythonhosted.org/packages/ca/53/0da0316dc0711974fd2dc8c59522f57b7f0b8ded5147ad9d14b4111f543d/ialarmclient_phoenix-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebaf122c67ea67b34f945657022c5929", "sha256": "a508a85b20ea87bfc9ae0f2e0a32cea3c44fafdb19e26dcc4aff69ac930afdd1"}, "downloads": -1, "filename": "ialarmclient-phoenix-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ebaf122c67ea67b34f945657022c5929", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4178, "upload_time": "2019-03-05T14:26:53", "upload_time_iso_8601": "2019-03-05T14:26:53.666786Z", "url": "https://files.pythonhosted.org/packages/6f/f4/a0a710d6a2ca1b3166c1b166b55f9cf485cc9d3e46eb024619cccf17c7bb/ialarmclient-phoenix-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bd504d15312e903a9feae3ae9417d9e8", "sha256": "1a87f88a9eba0b66a2f4bceaec192efdc5357cca2ec87b740fb44a6a6282e3e5"}, "downloads": -1, "filename": "ialarmclient_phoenix-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bd504d15312e903a9feae3ae9417d9e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6234, "upload_time": "2019-03-05T14:26:51", "upload_time_iso_8601": "2019-03-05T14:26:51.419950Z", "url": "https://files.pythonhosted.org/packages/ca/53/0da0316dc0711974fd2dc8c59522f57b7f0b8ded5147ad9d14b4111f543d/ialarmclient_phoenix-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebaf122c67ea67b34f945657022c5929", "sha256": "a508a85b20ea87bfc9ae0f2e0a32cea3c44fafdb19e26dcc4aff69ac930afdd1"}, "downloads": -1, "filename": "ialarmclient-phoenix-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ebaf122c67ea67b34f945657022c5929", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4178, "upload_time": "2019-03-05T14:26:53", "upload_time_iso_8601": "2019-03-05T14:26:53.666786Z", "url": "https://files.pythonhosted.org/packages/6f/f4/a0a710d6a2ca1b3166c1b166b55f9cf485cc9d3e46eb024619cccf17c7bb/ialarmclient-phoenix-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:19 2020"}