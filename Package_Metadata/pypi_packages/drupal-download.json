{"info": {"author": "Andre Bar'yudin", "author_email": "andre.baryudin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Internet"], "description": "Python Drupal download module\n=============================\n\nThis python 3 module will help you to extract data from a Drupal 7 or 8\nweb site. This data can be later used for archiving or for migration to\nanother CMS, such as Wagtail.\n\nMotivation\n----------\n\n`Drupal <https://www.drupal.org/>`__ is an open source CMS, written in\nPHP. It has a long history and many followers. A large number of web\nsites run on Drupal and there is a substantial development community.\nThe product is extendable, there are plenty of useful modules available\nto enhance functionality of Drupal web sites.\n\nOver the years there has been a number of major releases of Drupal. At\nthe time of writing the most recent is Drupal 8. In the past migration\nfrom one major version to another was done in-place. However, in order\nto move from an earlier version to 8, the user must follow a process of\nmigration, involving creating a basic deployment of Drupal 8 first and\nthen using additional tools to copy the data from the old web site to\nthe new. While this should work in theory, the reality seems a bit\ndifferent.\n\nI own a few very straightforward Drupal 7 web sites. They use a number\nof modules from the standard repository, but no custom code. The vast\nmajority of the content are simple stories. Nonetheless, the migration\nwas rather ugly - a lot of content didn\u2019t make it over. What did, looked\nrather puny and definitely didn\u2019t match the look and feel of my old web\nsites. Blocks were missing. In short, the result needed a lot of extra\nwork to make it right.\n\nI decided to revert to the old Drupal 7 deployment, which was,\nadmittedly, easy, thanks to the fact that the migration did involve a\nfresh instance of Drupal. This was the short term fix. Given the effort\nof migration, I decided to move all my web sites to\n`Django <https://www.djangoproject.com/>`__ +\n`Wagtail <https://wagtail.io/>`__, which would give me much more freedom\nin managing my data and, hopefully, will prove a good long term\nsolution. To be fair, Drupal has lasted me more than 10 years, so it\nwasn\u2019t a bad journey overall. But I do hate to code in PHP, so getting\nrid of it for good fills my heart with joy.\n\nTo achieve this move from Drupal to Django I need to extract the data\nfrom the former in some readable format. Luckily, there are simple\nexport facilities built into the CMS. This Python package uses them in\norder to download the data. There is a generic API to handle each\ndownloaded object, such as node, comment, vocabulary term etc, or to\nsimply dump everything as JSON into files. The task of shaping this\nextracted data into something suitable for Django or any other target\nyou might have in mind is entirely yours.\n\nUsage\n-----\n\nPython support\n~~~~~~~~~~~~~~\n\nOnly Python 3 is supported at the moment. Let Python 2 die in quiet\ndignity!\n\nDrupal support\n~~~~~~~~~~~~~~\n\nCurrently Drupal 7 and 8 are supported. In theory this module could work\nwith previous versions of Drupal and it might work with some future ones\nas well. Your mileage can vary.\n\nInstallation\n~~~~~~~~~~~~\n\nThis package is available on PyPi. Simply use pip to install (assuming\nyou are running in a Python 3 virtual environment):\n\n::\n\n       pip install drupal_download\n\nOn a Drupal web site\n~~~~~~~~~~~~~~~~~~~~\n\nFirst, you must enable a JSON-based REST API in Drupal.  Naturally, both 7 and 8 will have different ways to achieve\nthis (evil laughter!).\n\nMake the relevant configuration changes and take node of the APIs endpoints. Make\nsure you configure the desired authentication controls. At the moment,\nthe module supports these methods:\n\n-  Anonymous - no authentication is needed. This also means that anyone\n   can access you endpoint and download the data\n-  HTTP Basic - the standard basic authentication\n-  Session - cookie-driven authentication, the same in fact, that you\n   use when accessing a Drupal site interactively\n\n**NB:** I very strongly recommend using HTTPS for all these\ncommunications. If you don\u2019t have an SSL certificate yet and can\u2019t\nafford one, get one for free from\n`Letsencrypt <https://letsencrypt.org/>`__.\n\nDrupal 7\n~~~~~~~~\n\nFor Drupal 7 you should use the `Services <https://www.drupal.org/project/services>`__ module.\n\n\nDrupal 8\n~~~~~~~~\n\nWhile the same services module has a version for Drupal 8, it doesn't work.  It looks like a port job abandoned in the\nmiddle.  However, Drupal 8 includes a support for RESTful APIs in the core.  Naturally, it works a bit differently from\nthe services module.  In particular, services exposes an index view of, say, nodes. This view contains only the bare\nbones information about each node.  It also has a link to the view with the full details, which the module follows.\nDrupal 8 RESTful API on the other hand can export all the fields in the main view.  Read more about it\n`here <https://www.drupal.org/docs/8/api/restful-web-services-api/restful-web-services-api-overview>`__.  Note, that the\nhalf cooked Drupal 8 services port causes the built in RESTful API to break somehow, if enabled.  For faster downloads\nyou are advised to use larger page sizes in the view configuration.\n\nIn a script\n~~~~~~~~~~~\n\nYou can use the API from this module directly, in this manner:\n\n::\n\n       def data_callback(obj):\n           # process the data\n\n       dl = Drupal7DadaDownloader(\"https://www.example.com/export/node.json\", \"john\", \"123\", AuthType.CookieSession, data_callback)\n       dl.load_data()\n\nFrom the command line\n~~~~~~~~~~~~~~~~~~~~~\n\nAlternatively, there is a simple command line tool shipped with this\nmodule. You can invoke it like this:\n\n::\n\n       python3 -m download_drupal --help\n       \n\nThis will display some help information. Calling it like this:\n\n::\n\n       python3 -m download_drupal -b https://www.example.com/export/node.json --username jane --password secret --auth-type CookieSession -o example_node.json --drupal-version 7\n       \nwill download all nodes from a Drupal 7 website.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zelenij/python-drupal-download", "keywords": "drupal download data migration wagtail", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "drupal-download", "package_url": "https://pypi.org/project/drupal-download/", "platform": "", "project_url": "https://pypi.org/project/drupal-download/", "project_urls": {"Homepage": "https://github.com/zelenij/python-drupal-download"}, "release_url": "https://pypi.org/project/drupal-download/0.0.9/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Download data from Drupal using Python", "version": "0.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This python 3 module will help you to extract data from a Drupal 7 or 8\nweb site. This data can be later used for archiving or for migration to\nanother CMS, such as Wagtail.</p>\n<div id=\"motivation\">\n<h2>Motivation</h2>\n<p><a href=\"https://www.drupal.org/\" rel=\"nofollow\">Drupal</a> is an open source CMS, written in\nPHP. It has a long history and many followers. A large number of web\nsites run on Drupal and there is a substantial development community.\nThe product is extendable, there are plenty of useful modules available\nto enhance functionality of Drupal web sites.</p>\n<p>Over the years there has been a number of major releases of Drupal. At\nthe time of writing the most recent is Drupal 8. In the past migration\nfrom one major version to another was done in-place. However, in order\nto move from an earlier version to 8, the user must follow a process of\nmigration, involving creating a basic deployment of Drupal 8 first and\nthen using additional tools to copy the data from the old web site to\nthe new. While this should work in theory, the reality seems a bit\ndifferent.</p>\n<p>I own a few very straightforward Drupal 7 web sites. They use a number\nof modules from the standard repository, but no custom code. The vast\nmajority of the content are simple stories. Nonetheless, the migration\nwas rather ugly - a lot of content didn\u2019t make it over. What did, looked\nrather puny and definitely didn\u2019t match the look and feel of my old web\nsites. Blocks were missing. In short, the result needed a lot of extra\nwork to make it right.</p>\n<p>I decided to revert to the old Drupal 7 deployment, which was,\nadmittedly, easy, thanks to the fact that the migration did involve a\nfresh instance of Drupal. This was the short term fix. Given the effort\nof migration, I decided to move all my web sites to\n<a href=\"https://www.djangoproject.com/\" rel=\"nofollow\">Django</a> +\n<a href=\"https://wagtail.io/\" rel=\"nofollow\">Wagtail</a>, which would give me much more freedom\nin managing my data and, hopefully, will prove a good long term\nsolution. To be fair, Drupal has lasted me more than 10 years, so it\nwasn\u2019t a bad journey overall. But I do hate to code in PHP, so getting\nrid of it for good fills my heart with joy.</p>\n<p>To achieve this move from Drupal to Django I need to extract the data\nfrom the former in some readable format. Luckily, there are simple\nexport facilities built into the CMS. This Python package uses them in\norder to download the data. There is a generic API to handle each\ndownloaded object, such as node, comment, vocabulary term etc, or to\nsimply dump everything as JSON into files. The task of shaping this\nextracted data into something suitable for Django or any other target\nyou might have in mind is entirely yours.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"python-support\">\n<h3>Python support</h3>\n<p>Only Python 3 is supported at the moment. Let Python 2 die in quiet\ndignity!</p>\n</div>\n<div id=\"drupal-support\">\n<h3>Drupal support</h3>\n<p>Currently Drupal 7 and 8 are supported. In theory this module could work\nwith previous versions of Drupal and it might work with some future ones\nas well. Your mileage can vary.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>This package is available on PyPi. Simply use pip to install (assuming\nyou are running in a Python 3 virtual environment):</p>\n<pre>pip install drupal_download\n</pre>\n</div>\n<div id=\"on-a-drupal-web-site\">\n<h3>On a Drupal web site</h3>\n<p>First, you must enable a JSON-based REST API in Drupal.  Naturally, both 7 and 8 will have different ways to achieve\nthis (evil laughter!).</p>\n<p>Make the relevant configuration changes and take node of the APIs endpoints. Make\nsure you configure the desired authentication controls. At the moment,\nthe module supports these methods:</p>\n<ul>\n<li>Anonymous - no authentication is needed. This also means that anyone\ncan access you endpoint and download the data</li>\n<li>HTTP Basic - the standard basic authentication</li>\n<li>Session - cookie-driven authentication, the same in fact, that you\nuse when accessing a Drupal site interactively</li>\n</ul>\n<p><strong>NB:</strong> I very strongly recommend using HTTPS for all these\ncommunications. If you don\u2019t have an SSL certificate yet and can\u2019t\nafford one, get one for free from\n<a href=\"https://letsencrypt.org/\" rel=\"nofollow\">Letsencrypt</a>.</p>\n</div>\n<div id=\"drupal-7\">\n<h3>Drupal 7</h3>\n<p>For Drupal 7 you should use the <a href=\"https://www.drupal.org/project/services\" rel=\"nofollow\">Services</a> module.</p>\n</div>\n<div id=\"drupal-8\">\n<h3>Drupal 8</h3>\n<p>While the same services module has a version for Drupal 8, it doesn\u2019t work.  It looks like a port job abandoned in the\nmiddle.  However, Drupal 8 includes a support for RESTful APIs in the core.  Naturally, it works a bit differently from\nthe services module.  In particular, services exposes an index view of, say, nodes. This view contains only the bare\nbones information about each node.  It also has a link to the view with the full details, which the module follows.\nDrupal 8 RESTful API on the other hand can export all the fields in the main view.  Read more about it\n<a href=\"https://www.drupal.org/docs/8/api/restful-web-services-api/restful-web-services-api-overview\" rel=\"nofollow\">here</a>.  Note, that the\nhalf cooked Drupal 8 services port causes the built in RESTful API to break somehow, if enabled.  For faster downloads\nyou are advised to use larger page sizes in the view configuration.</p>\n</div>\n<div id=\"in-a-script\">\n<h3>In a script</h3>\n<p>You can use the API from this module directly, in this manner:</p>\n<pre>def data_callback(obj):\n    # process the data\n\ndl = Drupal7DadaDownloader(\"https://www.example.com/export/node.json\", \"john\", \"123\", AuthType.CookieSession, data_callback)\ndl.load_data()\n</pre>\n</div>\n<div id=\"from-the-command-line\">\n<h3>From the command line</h3>\n<p>Alternatively, there is a simple command line tool shipped with this\nmodule. You can invoke it like this:</p>\n<pre>python3 -m download_drupal --help\n</pre>\n<p>This will display some help information. Calling it like this:</p>\n<pre>python3 -m download_drupal -b https://www.example.com/export/node.json --username jane --password secret --auth-type CookieSession -o example_node.json --drupal-version 7\n</pre>\n<p>will download all nodes from a Drupal 7 website.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6421845, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "8596e8ef2104441eaaf2cd7e02928209", "sha256": "89664744fe11698fe545705d4c063aad7c8423fdbd62fd4c75e7b9a039683d1f"}, "downloads": -1, "filename": "drupal_download-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8596e8ef2104441eaaf2cd7e02928209", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7057, "upload_time": "2020-01-03T13:29:21", "upload_time_iso_8601": "2020-01-03T13:29:21.326754Z", "url": "https://files.pythonhosted.org/packages/c4/51/e5b9afd18a309568b29d8cb50fa05ebf5f1f5cb7ad91c0287f1974870c15/drupal_download-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9fe2ff8bd7eb2244c17cd2935ea4b5cf", "sha256": "982e2cf3ca4d3e2d2330c9c62ab392d97fbc15b079094af67890fc0665b604f3"}, "downloads": -1, "filename": "drupal_download-0.0.3.tar.gz", "has_sig": false, "md5_digest": "9fe2ff8bd7eb2244c17cd2935ea4b5cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6739, "upload_time": "2020-01-03T13:29:23", "upload_time_iso_8601": "2020-01-03T13:29:23.769796Z", "url": "https://files.pythonhosted.org/packages/5a/3b/e2ef6eb50d2c7d7523c5b99f07a78199eafde735030a6409202f28f8e60b/drupal_download-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "ac0371135c7f118b4db76003fc985ca3", "sha256": "42d95194f7a7daea9f33ce5a193a94801e565a77f5881bc8564ce20f01f427b0"}, "downloads": -1, "filename": "drupal_download-0.0.4.tar.gz", "has_sig": false, "md5_digest": "ac0371135c7f118b4db76003fc985ca3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7584, "upload_time": "2020-01-04T05:00:55", "upload_time_iso_8601": "2020-01-04T05:00:55.654999Z", "url": "https://files.pythonhosted.org/packages/ba/ff/8ad02e71eb0b0725b00870a0606accfe1265f3f45ffcd97eb960ea59a376/drupal_download-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "17689295305d0e5101cb28a8fbbeb0e6", "sha256": "d91c337693b3d01d591f0b575d63a608dbf9f7fa02f04b3b3d5fbf02a8760c8a"}, "downloads": -1, "filename": "drupal_download-0.0.5.tar.gz", "has_sig": false, "md5_digest": "17689295305d0e5101cb28a8fbbeb0e6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7641, "upload_time": "2020-01-04T05:09:48", "upload_time_iso_8601": "2020-01-04T05:09:48.550686Z", "url": "https://files.pythonhosted.org/packages/68/31/20fc609da886e339ff95377eee503398eefbe1d728145b932d1b60b31092/drupal_download-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "67d1523cd62d47b4502adf103bf0640e", "sha256": "67713980d00c8c79c87219a52dab303ce2ca4c839900b96dc62c5574bec4f75c"}, "downloads": -1, "filename": "drupal_download-0.0.6.tar.gz", "has_sig": false, "md5_digest": "67d1523cd62d47b4502adf103bf0640e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9491, "upload_time": "2020-01-05T02:25:11", "upload_time_iso_8601": "2020-01-05T02:25:11.190108Z", "url": "https://files.pythonhosted.org/packages/7b/7d/3a7f79a78f8a706c1af86cf0776fe413983b08edae10db5ae21f1e092578/drupal_download-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "46f0e96db7e6dce2f5c0619ca8ecd6fb", "sha256": "6ea0d0262c74ba3336ed41989ed6025f04ea755a352b204ccb46eddff5c0bb43"}, "downloads": -1, "filename": "drupal_download-0.0.7.tar.gz", "has_sig": false, "md5_digest": "46f0e96db7e6dce2f5c0619ca8ecd6fb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9506, "upload_time": "2020-01-05T02:31:21", "upload_time_iso_8601": "2020-01-05T02:31:21.156931Z", "url": "https://files.pythonhosted.org/packages/b7/33/2c0f5e36aac5bea6733ca8e8a3a3404c629b9dccdc9075b2cb99fc2696aa/drupal_download-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "4e6e4a19c00c84ebfdbd9212904f193e", "sha256": "80c58ca5c4427f6af6afe69ad857aea73e0ed1b0fe0545d2f21086c9e72196ef"}, "downloads": -1, "filename": "drupal_download-0.0.8.tar.gz", "has_sig": false, "md5_digest": "4e6e4a19c00c84ebfdbd9212904f193e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9634, "upload_time": "2020-01-07T14:02:39", "upload_time_iso_8601": "2020-01-07T14:02:39.202143Z", "url": "https://files.pythonhosted.org/packages/31/4d/be34f46761e43b287f919c55a90cbeaa95e618ffc3630b42eddf7c9af88b/drupal_download-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "eba6fb10e4635c53d5f7af6498e0eeab", "sha256": "c2f66c64b5be5871635d95bf16d91b0f7e35638409be2493144e93aa31c81b55"}, "downloads": -1, "filename": "drupal_download-0.0.9.tar.gz", "has_sig": false, "md5_digest": "eba6fb10e4635c53d5f7af6498e0eeab", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9627, "upload_time": "2020-01-09T11:54:33", "upload_time_iso_8601": "2020-01-09T11:54:33.309639Z", "url": "https://files.pythonhosted.org/packages/04/21/0a9d0f5ad0d6d7930f59c3791fbf691d46f9c3bc2d1e392fd0e5c2557362/drupal_download-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eba6fb10e4635c53d5f7af6498e0eeab", "sha256": "c2f66c64b5be5871635d95bf16d91b0f7e35638409be2493144e93aa31c81b55"}, "downloads": -1, "filename": "drupal_download-0.0.9.tar.gz", "has_sig": false, "md5_digest": "eba6fb10e4635c53d5f7af6498e0eeab", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9627, "upload_time": "2020-01-09T11:54:33", "upload_time_iso_8601": "2020-01-09T11:54:33.309639Z", "url": "https://files.pythonhosted.org/packages/04/21/0a9d0f5ad0d6d7930f59c3791fbf691d46f9c3bc2d1e392fd0e5c2557362/drupal_download-0.0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:28 2020"}