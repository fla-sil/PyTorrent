{"info": {"author": "J. Marcus Hughes", "author_email": "hughes.jmb@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Combination Robust Cut Forests\n[![CodeFactor](https://www.codefactor.io/repository/github/jmbhughes/crcf/badge)](https://www.codefactor.io/repository/github/jmbhughes/crcf)\n[![PyPI version](https://badge.fury.io/py/crcf.svg)](https://badge.fury.io/py/crcf)\n\nIsolation Forests **[Liu+2008]** and Robust Random Cut Trees **[Guha+2016]** are very similar in many ways, \nas outlined in the [supporting overview](overview.pdf). Most notably, they are extremes\nof the same outlier scoring function: \n\n![equation](https://latex.codecogs.com/gif.latex?%5Ctext%7BFor%20%7D%20%5Ctheta%20%5Cin%20%5B0%2C1%5D%20%5Ctext%7B%20let%20%7D%20%5Cmathrm%7Bscore%7D%28x%29%20%3D%20%5Ctheta%20%5Cmathrm%7Bdepth%7D%28x%29%20&plus;%20%281-%5Ctheta%29%5Cmathrm%7Bdisp%7D%28x%29)\n\nThe combination robust cut forest allows you to combine both scores by using an theta other than 0 or 1. \n\n# Install\nDownload the repository and run \n`python3 setup.py install` or `pip3 install .`\n\nThe tests can be run from `pytest` with `python3 setup.py test`.\n\n# Tasks\n- [ ] complete basic implementation\n- [ ] fix documentation generation error\n- [ ] provide clear documentation and usage instructions\n- [ ] incorporate categorical variable support, including categorical rules\n- [ ] complete the write-up document with a benchmarking of performance\n\n# References\n- **[Liu+2008]**: [Liu, Fei Tony, Kai Ming Ting, and Zhi-Hua Zhou. \n\"Isolation forest.\" In 2008 Eighth IEEE International Conference on Data Mining, \npp. 413-422. IEEE, 2008.](https://cs.nju.edu.cn/zhouzh/zhouzh.files/publication/icdm08b.pdf?q=isolation-forest)\n- **[Guha+2016]**: [Guha, Sudipto, Nina Mishra, Gourav Roy, and Okke Schrijvers. \n\"Robust random cut forest based anomaly detection on streams.\" \nIn International conference on machine learning, pp. 2712-2721. 2016.](http://proceedings.mlr.press/v48/guha16.pdf)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "crcf", "package_url": "https://pypi.org/project/crcf/", "platform": "", "project_url": "https://pypi.org/project/crcf/", "project_urls": null, "release_url": "https://pypi.org/project/crcf/0.0.2/", "requires_dist": ["numpy"], "requires_python": "", "summary": "Combination Robust Cut Forests", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Combination Robust Cut Forests</h1>\n<p><a href=\"https://www.codefactor.io/repository/github/jmbhughes/crcf\" rel=\"nofollow\"><img alt=\"CodeFactor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f3edbbce5000a4c7550d8248ea98ef7f95ee40a5/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f6a6d626875676865732f637263662f6261646765\"></a>\n<a href=\"https://badge.fury.io/py/crcf\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cd7ca81c536cf46c57bd281b8b285c17cd7aee8e/68747470733a2f2f62616467652e667572792e696f2f70792f637263662e737667\"></a></p>\n<p>Isolation Forests <strong>[Liu+2008]</strong> and Robust Random Cut Trees <strong>[Guha+2016]</strong> are very similar in many ways,\nas outlined in the <a href=\"overview.pdf\" rel=\"nofollow\">supporting overview</a>. Most notably, they are extremes\nof the same outlier scoring function:</p>\n<p><img alt=\"equation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eb828ff98f93e1d4f291dba8bed49b5761a74679/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f25354374657874253742466f722532302537442532302535437468657461253230253543696e2532302535423025324331253544253230253543746578742537422532306c65742532302537442532302535436d617468726d25374273636f72652537442532387825323925323025334425323025354374686574612532302535436d617468726d2537426465707468253744253238782532392532302b253230253238312d25354374686574612532392535436d617468726d2537426469737025374425323878253239\"></p>\n<p>The combination robust cut forest allows you to combine both scores by using an theta other than 0 or 1.</p>\n<h1>Install</h1>\n<p>Download the repository and run\n<code>python3 setup.py install</code> or <code>pip3 install .</code></p>\n<p>The tests can be run from <code>pytest</code> with <code>python3 setup.py test</code>.</p>\n<h1>Tasks</h1>\n<ul>\n<li>[ ] complete basic implementation</li>\n<li>[ ] fix documentation generation error</li>\n<li>[ ] provide clear documentation and usage instructions</li>\n<li>[ ] incorporate categorical variable support, including categorical rules</li>\n<li>[ ] complete the write-up document with a benchmarking of performance</li>\n</ul>\n<h1>References</h1>\n<ul>\n<li><strong>[Liu+2008]</strong>: <a href=\"https://cs.nju.edu.cn/zhouzh/zhouzh.files/publication/icdm08b.pdf?q=isolation-forest\" rel=\"nofollow\">Liu, Fei Tony, Kai Ming Ting, and Zhi-Hua Zhou.\n\"Isolation forest.\" In 2008 Eighth IEEE International Conference on Data Mining,\npp. 413-422. IEEE, 2008.</a></li>\n<li><strong>[Guha+2016]</strong>: <a href=\"http://proceedings.mlr.press/v48/guha16.pdf\" rel=\"nofollow\">Guha, Sudipto, Nina Mishra, Gourav Roy, and Okke Schrijvers.\n\"Robust random cut forest based anomaly detection on streams.\"\nIn International conference on machine learning, pp. 2712-2721. 2016.</a></li>\n</ul>\n\n          </div>"}, "last_serial": 4836521, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "030157cb7bc5cafb55076df146b40c1f", "sha256": "86952158f59bcc10350644e180bb4df286038b633ba4e22e2b9a90cd56e61495"}, "downloads": -1, "filename": "crcf-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "030157cb7bc5cafb55076df146b40c1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6116, "upload_time": "2019-02-18T18:58:45", "upload_time_iso_8601": "2019-02-18T18:58:45.666105Z", "url": "https://files.pythonhosted.org/packages/ca/54/804f58f9d428ef3b75eada2c664cb18215e93020580de3c066db364cedd7/crcf-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d7b7f3c26f55e16c43f52bbf6a4fc0b5", "sha256": "bb73220ebab933d2f75e7d92bcf406738583d7cfe27fc0ecd1eb24964f7e3a51"}, "downloads": -1, "filename": "crcf-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d7b7f3c26f55e16c43f52bbf6a4fc0b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5721, "upload_time": "2019-02-18T18:58:47", "upload_time_iso_8601": "2019-02-18T18:58:47.475654Z", "url": "https://files.pythonhosted.org/packages/d2/6c/376be22e9b5c6fccf9226db80a64d5235e74686fb0b236b54ff83e955371/crcf-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "73719a52ca07e6c10c7546e782768cb4", "sha256": "98a0c3427ca2999057ce20d90dd2486068c14735ae5f31f33de957065f6c8078"}, "downloads": -1, "filename": "crcf-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "73719a52ca07e6c10c7546e782768cb4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6174, "upload_time": "2019-02-18T19:02:29", "upload_time_iso_8601": "2019-02-18T19:02:29.183062Z", "url": "https://files.pythonhosted.org/packages/77/a6/756bfc1ee7f5a1fe37b931ed1354efa3e4c3a00357626fd38dfe484270b3/crcf-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec85210d0ce14ecfb992c34104a73345", "sha256": "41a2368c24aaf07a13a15ae42561c9de774d0ea663395d0137c70f577922ff82"}, "downloads": -1, "filename": "crcf-0.0.2.tar.gz", "has_sig": false, "md5_digest": "ec85210d0ce14ecfb992c34104a73345", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5784, "upload_time": "2019-02-18T19:02:30", "upload_time_iso_8601": "2019-02-18T19:02:30.267797Z", "url": "https://files.pythonhosted.org/packages/60/16/236093fc774d7d7e274a444c6c36f717fc1581352fea029aa9dbd3a96fd0/crcf-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "73719a52ca07e6c10c7546e782768cb4", "sha256": "98a0c3427ca2999057ce20d90dd2486068c14735ae5f31f33de957065f6c8078"}, "downloads": -1, "filename": "crcf-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "73719a52ca07e6c10c7546e782768cb4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6174, "upload_time": "2019-02-18T19:02:29", "upload_time_iso_8601": "2019-02-18T19:02:29.183062Z", "url": "https://files.pythonhosted.org/packages/77/a6/756bfc1ee7f5a1fe37b931ed1354efa3e4c3a00357626fd38dfe484270b3/crcf-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec85210d0ce14ecfb992c34104a73345", "sha256": "41a2368c24aaf07a13a15ae42561c9de774d0ea663395d0137c70f577922ff82"}, "downloads": -1, "filename": "crcf-0.0.2.tar.gz", "has_sig": false, "md5_digest": "ec85210d0ce14ecfb992c34104a73345", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5784, "upload_time": "2019-02-18T19:02:30", "upload_time_iso_8601": "2019-02-18T19:02:30.267797Z", "url": "https://files.pythonhosted.org/packages/60/16/236093fc774d7d7e274a444c6c36f717fc1581352fea029aa9dbd3a96fd0/crcf-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:24 2020"}