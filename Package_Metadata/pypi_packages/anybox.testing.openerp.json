{"info": {"author": "Anybox", "author_email": "contact@anybox.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "anybox.testing.openerp\n======================\n\nThis distribution is intended to provide testing tools and especially\nunit test base classes to enhance those that come builtin with OpenERP\n(version >= 7)\n\nCurrently, it features these base test classes:\n\n  - SharedSetupTransactionCase_\n  - TransactionCase_\n\nHow to install\n~~~~~~~~~~~~~~\n\nin general, all you need is to make ``anybox.testing.openerp``\nimportable from the python executable that is to run the tests.\n\nUsers of the `Buildout recipe\n<http://pypi.python.org/pypi/anybox.recipe.openerp>`_ just have to add\n``anybox.testing.openerp`` to their lists of eggs, preferably in a\nbuildout configuration intended for developers::\n\n   [buildout]\n   extends = buildout.cfg\n\n   [openerp]\n   eggs += anybox.testing.openerp\n\n(assuming of course that the part installing OpenERP is named\n``openerp``)\n\n.. _SharedSetupTransactionCase:\n\nSharedSetupTransactionCase\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n::\n\n    from anybox.testing.openerp import SharedSetupTransactionCase\n\nThis class allows to mutualize at the test class level\ntest data preparations, so that it does not have to be executed again\nand again. It relies internally on PostgreSQL savepoints to do so.\n\nThe simplest usage is to load some XML files::\n\n    class MyTestCase(SharedSetupTransactionCase):\n\n        _data_files = ('employees.xml',\n                       'products.xml')\n\n        _module_ns = 'tests'\n\nPaths are relative to the directory holding the test python modules\n(typically ``tests``) ; ``_module_ns`` is meant to specify in which\n(existing or not) OpenERP module's namespace the data is to be\ninserted. This is necessary, e.g., for cross-referencing in\n``one2many`` values.\n\nYou may also subclass the ``initTestData`` class\nmethod to insert your own preparations::\n\n        @classmethod\n        def initTestData(cls):\n            # if you need them XML data files:\n            super(MyTestCase, cls).initTestData()\n            cls.initLotsOfStuff()\n\nFinally, this class comes equipped with the `utility and assertion methods`_.\n\n\n.. _TransactionCase:\n\nTransactionCase\n~~~~~~~~~~~~~~~\n::\n\n    from anybox.testing.openerp import TransactionCase\n\nThis is a simple subclass of ``openerp.tests.common.TransactionCase``\nfeaturing:\n\n* the `utility and assertion methods`_\n* (in Python >= 2.7 context only) a more robust ``tearDown`` that\n  protects against exceptions during ``setUp``.\n\n  Such exceptions have been witnessed to cause PostgreSQL to deadlock,\n  which is a major source of developper headaches and of loss of time.\n\n.. _utility and assertion methods:\n\nUtility and assertion methods\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBoth ``TransactionCase`` and ``SharedSetupTransactionCase`` feature\nadditional helper methods. These are\n\n - ``assertRecord()``\n - ``searchUnique()``\n - ``readUnique()``\n - ``assertUniqueWithValues()``\n\nThey allow for more direct writing and more readability.\nCheck the docstrings for more details. This documentation should get\nSphinxed soon.\n\nWhy a separate package\n~~~~~~~~~~~~~~~~~~~~~~\n\nWe (Anybox) are very open to direct inclusion in OpenERP core, and are ready\nto submit this as a proper merge request (hence involving a\nbit more of our own resources than has already been done).\n\nThat being said, the reasons for a separate package are:\n\n - we don't want to depend on actual inclusion in the core for\n   our projects\n - we need this to be available in v7 branch (current stable)\n - we might want or need to stay ahead of whichever inclusions can occur in\n   the future ; using a published version is more convenient for us\n   than keeping track in our private VCSes.\n\nWhy not an addon ?\n~~~~~~~~~~~~~~~~~~\n\nDo you *really* want to see a module for unit testing to appear in\nyour modules list ?\n\nAuthors\n~~~~~~~\n\n - Georges Racinet (@gracinet on identi.ca & twitter), Anybox SAS,\n   http://anybox.fr, GPG: 0x33AB0A35 on public key servers.\n\nContributing\n~~~~~~~~~~~~\n\nWe are very open to contributions. Don't hesitate to fork and issue\npull requests on the `BitBucket repository\n<http://bitbucket.org/anybox/anybox.testing.openerp>`_\n\n\n\n\n\nChanges\n~~~~~~~\n\n1.3.1 (2014-01-31)\n------------------\n\n- #2: robustness of ``assertRecord`` if ``read(cr, uid, id)`` returns\n  a list.\n\n1.3 (2013-12-26)\n----------------\n\n- added a new ``assertUniqueWithValues()`` utility, combining\n  ``searchUnique()`` with ``assertRecord`` to save even more hassle.\n\n\n1.2 (2013-11-07)\n----------------\n\n- added a new ``assertNoRecord(model, domain)`` utility\n\n1.1 (2012-08-05)\n----------------\n\n- added utility and assertion methods\n- corrected documentation \n\n1.0 (2012-07-13)\n----------------\n\n- initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/anybox/anybox.testing.openerp", "keywords": null, "license": "AGPL v3+", "maintainer": null, "maintainer_email": null, "name": "anybox.testing.openerp", "package_url": "https://pypi.org/project/anybox.testing.openerp/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/anybox.testing.openerp/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/anybox/anybox.testing.openerp"}, "release_url": "https://pypi.org/project/anybox.testing.openerp/1.3.1/", "requires_dist": null, "requires_python": null, "summary": "Useful testing base classes and tools for OpenERP", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This distribution is intended to provide testing tools and especially\nunit test base classes to enhance those that come builtin with OpenERP\n(version &gt;= 7)</p>\n<p>Currently, it features these base test classes:</p>\n<blockquote>\n<ul>\n<li><a href=\"#sharedsetuptransactioncase\" rel=\"nofollow\">SharedSetupTransactionCase</a></li>\n<li><a href=\"#transactioncase\" rel=\"nofollow\">TransactionCase</a></li>\n</ul>\n</blockquote>\n<div id=\"how-to-install\">\n<h2>How to install</h2>\n<p>in general, all you need is to make <tt>anybox.testing.openerp</tt>\nimportable from the python executable that is to run the tests.</p>\n<p>Users of the <a href=\"http://pypi.python.org/pypi/anybox.recipe.openerp\" rel=\"nofollow\">Buildout recipe</a> just have to add\n<tt>anybox.testing.openerp</tt> to their lists of eggs, preferably in a\nbuildout configuration intended for developers:</p>\n<pre>[buildout]\nextends = buildout.cfg\n\n[openerp]\neggs += anybox.testing.openerp\n</pre>\n<p>(assuming of course that the part installing OpenERP is named\n<tt>openerp</tt>)</p>\n</div>\n<div id=\"id1\">\n<span id=\"sharedsetuptransactioncase\"></span><h2>SharedSetupTransactionCase</h2>\n<pre>from anybox.testing.openerp import SharedSetupTransactionCase\n</pre>\n<p>This class allows to mutualize at the test class level\ntest data preparations, so that it does not have to be executed again\nand again. It relies internally on PostgreSQL savepoints to do so.</p>\n<p>The simplest usage is to load some XML files:</p>\n<pre>class MyTestCase(SharedSetupTransactionCase):\n\n    _data_files = ('employees.xml',\n                   'products.xml')\n\n    _module_ns = 'tests'\n</pre>\n<p>Paths are relative to the directory holding the test python modules\n(typically <tt>tests</tt>) ; <tt>_module_ns</tt> is meant to specify in which\n(existing or not) OpenERP module\u2019s namespace the data is to be\ninserted. This is necessary, e.g., for cross-referencing in\n<tt>one2many</tt> values.</p>\n<p>You may also subclass the <tt>initTestData</tt> class\nmethod to insert your own preparations:</p>\n<pre>@classmethod\ndef initTestData(cls):\n    # if you need them XML data files:\n    super(MyTestCase, cls).initTestData()\n    cls.initLotsOfStuff()\n</pre>\n<p>Finally, this class comes equipped with the <a href=\"#utility-and-assertion-methods\" rel=\"nofollow\">utility and assertion methods</a>.</p>\n</div>\n<div id=\"id2\">\n<span id=\"transactioncase\"></span><h2>TransactionCase</h2>\n<pre>from anybox.testing.openerp import TransactionCase\n</pre>\n<p>This is a simple subclass of <tt>openerp.tests.common.TransactionCase</tt>\nfeaturing:</p>\n<ul>\n<li><p>the <a href=\"#utility-and-assertion-methods\" rel=\"nofollow\">utility and assertion methods</a></p>\n</li>\n<li><p>(in Python &gt;= 2.7 context only) a more robust <tt>tearDown</tt> that\nprotects against exceptions during <tt>setUp</tt>.</p>\n<p>Such exceptions have been witnessed to cause PostgreSQL to deadlock,\nwhich is a major source of developper headaches and of loss of time.</p>\n</li>\n</ul>\n</div>\n<div id=\"id3\">\n<span id=\"utility-and-assertion-methods\"></span><h2>Utility and assertion methods</h2>\n<p>Both <tt>TransactionCase</tt> and <tt>SharedSetupTransactionCase</tt> feature\nadditional helper methods. These are</p>\n<blockquote>\n<ul>\n<li><tt>assertRecord()</tt></li>\n<li><tt>searchUnique()</tt></li>\n<li><tt>readUnique()</tt></li>\n<li><tt>assertUniqueWithValues()</tt></li>\n</ul>\n</blockquote>\n<p>They allow for more direct writing and more readability.\nCheck the docstrings for more details. This documentation should get\nSphinxed soon.</p>\n</div>\n<div id=\"why-a-separate-package\">\n<h2>Why a separate package</h2>\n<p>We (Anybox) are very open to direct inclusion in OpenERP core, and are ready\nto submit this as a proper merge request (hence involving a\nbit more of our own resources than has already been done).</p>\n<p>That being said, the reasons for a separate package are:</p>\n<blockquote>\n<ul>\n<li>we don\u2019t want to depend on actual inclusion in the core for\nour projects</li>\n<li>we need this to be available in v7 branch (current stable)</li>\n<li>we might want or need to stay ahead of whichever inclusions can occur in\nthe future ; using a published version is more convenient for us\nthan keeping track in our private VCSes.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"why-not-an-addon\">\n<h2>Why not an addon ?</h2>\n<p>Do you <em>really</em> want to see a module for unit testing to appear in\nyour modules list ?</p>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<blockquote>\n<ul>\n<li>Georges Racinet (@gracinet on identi.ca &amp; twitter), Anybox SAS,\n<a href=\"http://anybox.fr\" rel=\"nofollow\">http://anybox.fr</a>, GPG: 0x33AB0A35 on public key servers.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>We are very open to contributions. Don\u2019t hesitate to fork and issue\npull requests on the <a href=\"http://bitbucket.org/anybox/anybox.testing.openerp\" rel=\"nofollow\">BitBucket repository</a></p>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<div id=\"id4\">\n<h3>1.3.1 (2014-01-31)</h3>\n<ul>\n<li>#2: robustness of <tt>assertRecord</tt> if <tt>read(cr, uid, id)</tt> returns\na list.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.3 (2013-12-26)</h3>\n<ul>\n<li>added a new <tt>assertUniqueWithValues()</tt> utility, combining\n<tt>searchUnique()</tt> with <tt>assertRecord</tt> to save even more hassle.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.2 (2013-11-07)</h3>\n<ul>\n<li>added a new <tt>assertNoRecord(model, domain)</tt> utility</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.1 (2012-08-05)</h3>\n<ul>\n<li>added utility and assertion methods</li>\n<li>corrected documentation</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>1.0 (2012-07-13)</h3>\n<ul>\n<li>initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 986974, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "00b47af58c2f7f8d2018adc6e333fc12", "sha256": "64daafe3053a5005ecb034a87e31b40b771f3a2ce8e4278c7d7d735b295ea485"}, "downloads": -1, "filename": "anybox.testing.openerp-1.0.tar.gz", "has_sig": false, "md5_digest": "00b47af58c2f7f8d2018adc6e333fc12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4643, "upload_time": "2013-07-13T16:45:44", "upload_time_iso_8601": "2013-07-13T16:45:44.169111Z", "url": "https://files.pythonhosted.org/packages/e3/b2/453411ae73351cacb7bd9f3b989f0a6c83e58474abaf16e36787135ac9e9/anybox.testing.openerp-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "b360cacdea740acfa2cd7e2674bcf383", "sha256": "ad50e002f2fa2520f630edf0024571dadb2a2c2aa4a144971e994461bd7e7a59"}, "downloads": -1, "filename": "anybox.testing.openerp-1.1.tar.gz", "has_sig": false, "md5_digest": "b360cacdea740acfa2cd7e2674bcf383", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6986, "upload_time": "2013-08-05T16:13:02", "upload_time_iso_8601": "2013-08-05T16:13:02.725464Z", "url": "https://files.pythonhosted.org/packages/55/42/a95fef5a98f675ae88bb6c06b9385fe973e0d54ee3e353cc3d417c41e6f4/anybox.testing.openerp-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "7aa19df725bb94a8c4764e21b7e4df92", "sha256": "5f1ea67d2d8d280f557f79c21fd110beb629b5dffc03abd23f357d6ae641d6c1"}, "downloads": -1, "filename": "anybox.testing.openerp-1.2.tar.gz", "has_sig": false, "md5_digest": "7aa19df725bb94a8c4764e21b7e4df92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7069, "upload_time": "2013-11-07T18:56:20", "upload_time_iso_8601": "2013-11-07T18:56:20.094986Z", "url": "https://files.pythonhosted.org/packages/7b/e9/fa7f2e58fa175d78b4d147e3aaa713392c04c3c6052197f391ab5d76d7f6/anybox.testing.openerp-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "c3f4911902abbfaef05f8d9e7624f02a", "sha256": "116c199d62fc2e7ce8e25fdc40269b07da50386e0324966523a736f14171305a"}, "downloads": -1, "filename": "anybox.testing.openerp-1.2.1.tar.gz", "has_sig": false, "md5_digest": "c3f4911902abbfaef05f8d9e7624f02a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7254, "upload_time": "2013-11-07T19:01:09", "upload_time_iso_8601": "2013-11-07T19:01:09.727245Z", "url": "https://files.pythonhosted.org/packages/e4/e2/b95177c06832dbc85c5274333d1d29a1a24739fce62c30094eddf0c67ed4/anybox.testing.openerp-1.2.1.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "53b58be39fd964eda0142c73daf28331", "sha256": "3ab3fb3b237a081da24865debe74b6fa0329b576baecc55f0c8ab0cff1c9d5d4"}, "downloads": -1, "filename": "anybox.testing.openerp-1.3.0.tar.gz", "has_sig": false, "md5_digest": "53b58be39fd964eda0142c73daf28331", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8198, "upload_time": "2013-12-26T17:46:20", "upload_time_iso_8601": "2013-12-26T17:46:20.986092Z", "url": "https://files.pythonhosted.org/packages/3b/9b/b2688e41361eabdaf32e8d92043469402d373181dcfb9730debf37f17641/anybox.testing.openerp-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "6859a7f1f6c1a5d78e7d0ca8b6b83443", "sha256": "e11299dcc93de3c128e32e0266a2640e80a7433d330d8ea083c934d579c77252"}, "downloads": -1, "filename": "anybox.testing.openerp-1.3.1.tar.gz", "has_sig": false, "md5_digest": "6859a7f1f6c1a5d78e7d0ca8b6b83443", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8366, "upload_time": "2014-01-31T09:15:23", "upload_time_iso_8601": "2014-01-31T09:15:23.665881Z", "url": "https://files.pythonhosted.org/packages/ac/77/80f9253d6ae44090219d8d258eab1b42b17ec51208e2dcbd160a592b7f94/anybox.testing.openerp-1.3.1.tar.gz", "yanked": false}], "1.3dev": [{"comment_text": "", "digests": {"md5": "1231fd49d1f46c8c00cf35daf21383bf", "sha256": "e97fdb656005a63707c1f4a1a7241b54fc1baeda4bdb61dc76980b4dd0612dad"}, "downloads": -1, "filename": "anybox.testing.openerp-1.3dev.tar.gz", "has_sig": false, "md5_digest": "1231fd49d1f46c8c00cf35daf21383bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8189, "upload_time": "2013-12-26T17:11:41", "upload_time_iso_8601": "2013-12-26T17:11:41.209787Z", "url": "https://files.pythonhosted.org/packages/ab/55/bfea131281e7e4b774605fca38983cd11f17d45c86765dafc9853c9801b7/anybox.testing.openerp-1.3dev.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6859a7f1f6c1a5d78e7d0ca8b6b83443", "sha256": "e11299dcc93de3c128e32e0266a2640e80a7433d330d8ea083c934d579c77252"}, "downloads": -1, "filename": "anybox.testing.openerp-1.3.1.tar.gz", "has_sig": false, "md5_digest": "6859a7f1f6c1a5d78e7d0ca8b6b83443", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8366, "upload_time": "2014-01-31T09:15:23", "upload_time_iso_8601": "2014-01-31T09:15:23.665881Z", "url": "https://files.pythonhosted.org/packages/ac/77/80f9253d6ae44090219d8d258eab1b42b17ec51208e2dcbd160a592b7f94/anybox.testing.openerp-1.3.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:57 2020"}