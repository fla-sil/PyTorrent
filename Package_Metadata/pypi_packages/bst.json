{"info": {"author": "Ryan Gilbert", "author_email": "ryangilbert7926@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# bst\n[![Build Status](https://travis-ci.org/rgilbert1/bst.svg?branch=master)](https://travis-ci.org/rgilbert1/bst)\n\nIn school, I struggled with how binary search trees (and related data structures & algorithms) work, but now with a little more programming experience under my belt I decided to work through implementing one. It currently has insert, search, and traversal functionality.\n\n## Install\n\n```\npip install bst\n```\n\n## Usage\n\n```python\nfrom bst import BST\n\nbst = BST()\nbst.insert(5)\nnode = bst.search(5)  # <bst.Node object at 0x1060964e0>\nnode.value  # 5\n```\n\n## Development\n\nThe only dependency is `nose`, it's used to automatically run all of the unit tests in `tests/`. Install dependencies with `pip install -r requirements.txt`, and run the tests with `nosetests -v`.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rgilbert1/bst", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "bst", "package_url": "https://pypi.org/project/bst/", "platform": "", "project_url": "https://pypi.org/project/bst/", "project_urls": {"Homepage": "https://github.com/rgilbert1/bst"}, "release_url": "https://pypi.org/project/bst/0.5.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A binary search tree implemented for learning purposes.", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>bst</h1>\n<p><a href=\"https://travis-ci.org/rgilbert1/bst\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dc60c6351aa89c9cbfb3975fd711c2e0f2a215c9/68747470733a2f2f7472617669732d63692e6f72672f7267696c62657274312f6273742e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>In school, I struggled with how binary search trees (and related data structures &amp; algorithms) work, but now with a little more programming experience under my belt I decided to work through implementing one. It currently has insert, search, and traversal functionality.</p>\n<h2>Install</h2>\n<pre><code>pip install bst\n</code></pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bst</span> <span class=\"kn\">import</span> <span class=\"n\">BST</span>\n\n<span class=\"n\">bst</span> <span class=\"o\">=</span> <span class=\"n\">BST</span><span class=\"p\">()</span>\n<span class=\"n\">bst</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">node</span> <span class=\"o\">=</span> <span class=\"n\">bst</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>  <span class=\"c1\"># &lt;bst.Node object at 0x1060964e0&gt;</span>\n<span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">value</span>  <span class=\"c1\"># 5</span>\n</pre>\n<h2>Development</h2>\n<p>The only dependency is <code>nose</code>, it's used to automatically run all of the unit tests in <code>tests/</code>. Install dependencies with <code>pip install -r requirements.txt</code>, and run the tests with <code>nosetests -v</code>.</p>\n\n          </div>"}, "last_serial": 4664891, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "13b53a27889cfb6b81652f54620449a0", "sha256": "e2847e73c28d57d8582e4897b026835ad122f0b3675fd2b949cdfe77d48d57f0"}, "downloads": -1, "filename": "bst-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "13b53a27889cfb6b81652f54620449a0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 2705, "upload_time": "2019-01-06T02:52:14", "upload_time_iso_8601": "2019-01-06T02:52:14.577549Z", "url": "https://files.pythonhosted.org/packages/3c/7c/be3ba2d740b5321e7dc389b976d5ffffa117ca6f7bcee1fb5e6f20793d54/bst-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f20c761f0ac3f71273c502aff5089866", "sha256": "2431083adf48855eeade260f3aa36ded3a34ca9812fb7e86262563b10dc705e0"}, "downloads": -1, "filename": "bst-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f20c761f0ac3f71273c502aff5089866", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 2764, "upload_time": "2019-01-06T02:52:15", "upload_time_iso_8601": "2019-01-06T02:52:15.770436Z", "url": "https://files.pythonhosted.org/packages/be/b6/eab96631c0e8edc962c4e23a216b2e12d5b69b19beb1892e29cb32b20422/bst-0.1.1.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "bdd0a0a65e708c96b8994a92c8e02e6c", "sha256": "a8c351251eebca2ad03b7544ee7ef8c12816ec672f2611bff897d02aa1da64da"}, "downloads": -1, "filename": "bst-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bdd0a0a65e708c96b8994a92c8e02e6c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 3114, "upload_time": "2019-01-06T04:00:46", "upload_time_iso_8601": "2019-01-06T04:00:46.338614Z", "url": "https://files.pythonhosted.org/packages/b2/66/065e339b36d1b885c468ed2ef74e1dced44cfe4b215f85d6b4957fd52c1e/bst-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab5af36c618c8cdff9f62287540a7c10", "sha256": "20667aa6c5ff7c2f42a1ef45aac54038fa9334ba6309ade34849edd96d09506f"}, "downloads": -1, "filename": "bst-0.5.0.tar.gz", "has_sig": false, "md5_digest": "ab5af36c618c8cdff9f62287540a7c10", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3287, "upload_time": "2019-01-06T04:00:47", "upload_time_iso_8601": "2019-01-06T04:00:47.659483Z", "url": "https://files.pythonhosted.org/packages/6a/d0/e4da94fd720dabd1d03f1b718c9710a00b594c68a718e810f97d7eda6fda/bst-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bdd0a0a65e708c96b8994a92c8e02e6c", "sha256": "a8c351251eebca2ad03b7544ee7ef8c12816ec672f2611bff897d02aa1da64da"}, "downloads": -1, "filename": "bst-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bdd0a0a65e708c96b8994a92c8e02e6c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 3114, "upload_time": "2019-01-06T04:00:46", "upload_time_iso_8601": "2019-01-06T04:00:46.338614Z", "url": "https://files.pythonhosted.org/packages/b2/66/065e339b36d1b885c468ed2ef74e1dced44cfe4b215f85d6b4957fd52c1e/bst-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab5af36c618c8cdff9f62287540a7c10", "sha256": "20667aa6c5ff7c2f42a1ef45aac54038fa9334ba6309ade34849edd96d09506f"}, "downloads": -1, "filename": "bst-0.5.0.tar.gz", "has_sig": false, "md5_digest": "ab5af36c618c8cdff9f62287540a7c10", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3287, "upload_time": "2019-01-06T04:00:47", "upload_time_iso_8601": "2019-01-06T04:00:47.659483Z", "url": "https://files.pythonhosted.org/packages/6a/d0/e4da94fd720dabd1d03f1b718c9710a00b594c68a718e810f97d7eda6fda/bst-0.5.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:11 2020"}