{"info": {"author": "Thieu Nguyen", "author_email": "nguyenthieu2102@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Scientific/Engineering :: Visualization", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# A collection of the state-of-the-art MEta-heuristics ALgorithms in PYthon (mealpy)\n[![GitHub release](https://img.shields.io/badge/release-0.8.3-yellow.svg)]()\n[![Wheel](https://img.shields.io/pypi/wheel/gensim.svg)](https://pypi.python.org/pypi/mealpy) \n[![PyPI version](https://badge.fury.io/py/mealpy.svg)](https://badge.fury.io/py/mealpy)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.3711949.svg)](https://doi.org/10.5281/zenodo.3711948)\n[![License](https://img.shields.io/packagist/l/doctrine/orm.svg)]()\n\n\n---\n> \"Knowledge is power, sharing it is the premise of progress in life. It seems like a burden to someone, but it is the only way to achieve immortality.\"\n>  --- [Thieu Nguyen](https://www.researchgate.net/profile/Thieu_Nguyen6)\n---\n\n## Introduction\n* MEALPY is a python module for the most of cutting-edge population meta-heuristic algorithms and is distributed\nunder MIT license.\n\n* The goals of this framework are:\n    * Sharing knowledge of meta-heuristic fields to everyone without a fee\n    * Helping other researchers in all field access to optimization algorithms as quickly as possible\n    * Implement the classical as well as the state-of-the-art meta-heuristics (The whole history of meta-heuristics)\n\n\n## Installation\n\n### Dependencies\n* Python (>= 3.6)\n* Numpy (>= 1.15.1)\n* Scikit-learn (>= 0.22.1)\n* Matplotlib (>=3.1.3)\n* Opfunu (>= 0.4.3)\n\n### User installation\nInstall the [current PyPI release](https://pypi.python.org/pypi/mealpy):\n```code \n    pip install mealpy\n    pip install --upgrade mealpy \n```\nOr install the development version from GitHub:\n```bash\n    pip install git+https://github.com/thieunguyen5991/mealpy\n```\n\n### Example\n```code \n* Simple example:\n\n    from opfunu.type_based.uni_modal import Functions\n    from mealpy.evolutionary_based.GA import BaseGA\n    t1 = Functions()\n\n    ## Setting parameters\n    objective_func = t1._sum_squres__\n    problem_size = 30\n    domain_range = [-15, 15]\n    log = True\n    epoch = 100\n    pop_size = 50\n    pc = 0.95\n    pm = 0.025\n\n    md = BaseGA(objective_func, problem_size, domain_range, log, epoch, pop_size, pc, pm)\n    best_position, best_fit, list_loss = md._train__()\n    print(best_fit)\n\n* Or run the simple:\n    python examples/simple_run.py\n\n* The more complicated tests in the folder: examples\n```\nThe documentation includes more detailed installation instructions.\n\n### Changelog\n* See the \"ChangeLog.md\" for a history of notable changes to mealpy.\n\n\n### Important links\n\n* Official source code repo: https://github.com/thieunguyen5991/mealpy\n* Download releases: https://pypi.org/project/mealpy/\n* Issue tracker: https://github.com/thieunguyen5991/mealpy/issues\n\n* This project also related to my another projects which are \"meta-heuristics\" and \"neural-network\", check it here\n    * https://github.com/thieunguyen5991/opfunu\n    * https://github.com/thieunguyen5991/metaheuristics\n    * https://github.com/chasebk\n\n\n## Contributions \n\n### Citation\nIf you use mealpy in your project, I would appreciate citations: \n\n```code \n@software{thieu_nguyen_2020_3711949,\n  author       = {Thieu Nguyen},\n  title        = {A collection of the state-of-the-art MEta-heuristics ALgorithms in PYthon: Mealpy},\n  month        = march,\n  year         = 2020,\n  publisher    = {Zenodo},\n  doi          = {10.5281/zenodo.3711948},\n  url          = {https://doi.org/10.5281/zenodo.3711948}\n}\n\n@article{nguyen2019efficient,\n  title={Efficient Time-Series Forecasting Using Neural Network and Opposition-Based Coral Reefs Optimization},\n  author={Nguyen, Thieu and Nguyen, Tu and Nguyen, Binh Minh and Nguyen, Giang},\n  journal={International Journal of Computational Intelligence Systems},\n  volume={12},\n  number={2},\n  pages={1144--1161},\n  year={2019},\n  publisher={Atlantis Press}\n}\n```\n\n### Documents\n* Group: \n    + Evolu: Evolutionary-based\n    + Swarm: Swarm-based\n    + Physic: Physics-based\n    + Human: Human-based\n    + Bio: Biology-based\n    + System: System-based (eco-system, immune-system, network-system, ...)\n    + Math: Math-based\n    + Music: Music-based\n    + Proba: Probabilistic based algorithm\n\n* Levy: Using levy-flight technique or not\n* Version: \n    + original: Taken exactly from the paper\n    + changed: I changed the flow or equation to make algorithm works\n* Type:\n    + weak: working fine with uni-modal and some multi-modal functions\n    + strong: working good with uni-modal, multi-modal, some hybrid and some composite functions\n    + best: working well with almost all kind of functions\n    + BEST: the best among all algorithms\n\n* Some algorithm with original version and no levy techniques still belong to the best type such as:\n    + Whale Optimization Algorithm\n    + Bird Swarm Algorithm\n    + Swarm Robotics Search And Rescue\n    + Manta Ray Foraging Optimization\n    + Henry Gas Solubility Optimization\t\n    + Atom Search Optimization\n    + Equilibrium Optimizer\n    + Artificial Ecosystem-based Optimization\n\n* Paras: The number of parameters in the algorithm (Not counting the fixed parameters in the original paper)\n    + Almost algorithms have 2 paras (epoch, population_size) and plus some paras depend on each algorithm.\n    + Some algorithms belong to \"best\" type and have only 2 paras meaning that algorithm is outstanding\n\n* Diffic - Difficulty Level: Objective observation from author.\n    + Depend on the number of parameters, number of equations, the original ideas, time spend for coding, source lines of code (SLOC)\n    + Easy: A few paras, few equations, SLOC very short\n    + Medium: more equations than Easy level, SLOC longer than Easy level\n    + Hard: Lots of equations, SLOC longer than Medium level, the paper hard to read.\n    + Hard* - Very hard: Lots of equations, SLOC too long, the paper is very hard to read.\n\n** For newbie, I recommend to read the paper of algorithms belong to \"best or strong\" type, \"easy or medium\" difficulty level.\n\n\n| Group  | STT | Name                                       | Short | Year | Version   | Levy | Type   | Paras | Diffic |\n|--------|-----|--------------------------------------------|-------|------|-----------|------|--------|-------|--------|\n| Evolu  | 1   | Evolutionary Programming                   | EP    | 1964 | original  | no   | strong | 3     | easy   |\n|        | 2   | Evolution Strategies                       | ES    | 1971 | original  | no   | strong | 3     | easy   |\n|        | 3   | Memetic Algorithm                          | MA    | 1989 | original  | no   | weak   | 7     | easy   |\n|        | 3   | Genetic Algorithm                          | GA    | 1992 | original  | no   | strong | 4     | easy   |\n|        | 4   | Differential Evolution                     | DE    | 1997 | original  | no   | weak   | 4     | easy   |\n|        | 5   | Flower Pollination Algorithm               | FPA   | 2014 | orginal   | yes  | strong | 3     | easy   |\n|        | 6   | Coral Reefs Optimization                   | CRO   | 2014 | original  | no   | weak   | 7     | medium |\n|        | 7   |                                            |       |      |           |      |        |       |        |\n| Swarm  | 1   | Particle Swarm Optimization                | PSO   | 1995 | original  | no   | strong | 6     | easy   |\n|        | 2   | Bacterial Foraging Optimization            | BFO   | 2002 | orginal   | no   | weak   | 11    | hard   |\n|        | 3   | Cat Swarm Optimization                     | CSO   | 2006 | original  | no   | weak   | 9     | hard   |\n|        | 4   | Artificial Bee Colony                      | ABC   | 2007 | changed   | no   | strong | 6     | easy   |\n|        | 5   | Fireworks Algorithm                        | FA    | 2010 | original  | no   | strong | 7     | medium |\n|        | 6   | Bat Algorithm                              | BA    | 2010 | original  | no   | weak   | 5     | easy   |\n|        | 7   | Social Spider Optimization                 | SSO   | 2013 | changed   | no   | weak   | 3     | hard\\* |\n|        | 8   | Pigeon\\-Inspired Optimization              | PIO   | 2014 | changed   | no   | strong | 2     | medium |\n|        | 9   | Grey Wolf Optimizer                        | GWO   | 2014 | original  | no   | strong | 2     | easy   |\n|        | 10  | Social Spider Algorithm                    | SSA   | 2015 | original  | no   | strong | 5     | easy   |\n|        | 11  | Ant Lion Optimizer                         | ALO   | 2015 | original  | no   | weak   | 2     | medium |\n|        | 12  | Moth Flame Optimization                    | MFO   | 2015 | changed   | no   | strong | 2     | easy   |\n|        | 13  |  Elephant Herding Optimization             | EHO   | 2015 | original  | no   | strong | 5     | easy   |\n|        | 14  | Whale Optimization Algorithm               | WOA   | 2016 | original  | no   | best   | 2     | easy   |\n|        | 15  | Bird Swarm Algorithm                       | BSA   | 2016 | original  | no   | best   | 9     | medium |\n|        | 16  | Swarm Robotics Search And Rescue           | SRSR  | 2017 | original  | no   | best   | 2     | hard\\* |\n|        | 17  | Grasshopper Optimisation Algorithm         | GOA   | 2017 | original  | no   | weak   | 3     | easy   |\n|        | 18  | Earthworm Optimisation Algorithm           | EOA   | 2018 | original  | no   | weak   | 8     | medium |\n|        | 19  | Moth Search Algorithm                      | MSA   | 2018 | changed   | no   | weak   | 5     | easy   |\n|        | 20  | Rhino Herd Optimization                    | RHO   | 2018 | original  | no   | weak   | 6     | easy   |\n|        | 21  | Emperor Penguin Optimizer                  | EPO   | 2018 | changed   | no   | strong | 2     | easy   |\n|        | 22  | Nake Mole\\-rat Algorithm                   | NMRA  | 2019 | original  | no   | strong | 3     | easy   |\n|        | 23  | Bald Eagle Search                          | BES   | 2019 | changed   | no   | best   | 7     | medium |\n|        | 24  | Pathfinder Algorithm                       | PFA   | 2019 | original  | no   | strong | 2     | easy   |\n|        | 25  | Sailfish Optimizer                         | SFO   | 2019 | original  | no   | strong | 5     | medium |\n|        | 26  | Harris Hawks Optimization                  | HHO   | 2019 | original  | yes  | best   | 2     | medium |\n|        | 27  | Sea Lion Optimization                      | SLO   | 2019 | orginal   | no   | strong | 2     | easy   |\n|        | 28  | Manta Ray Foraging Optimization            | MRFO  | 2020 | original  | no   | best   | 3     | easy   |\n|        | 29  |                                            |       |      |           |      |        |       |        |\n| Physic | 1   | Wind Driven Optimization                   | WDO   | 2013 | original  | no   | strong | 7     | easy   |\n|        | 2   | Multi\\-Verse Optimizer                     | MVO   | 2016 | changed   | no   | strong | 3     | easy   |\n|        | 3   | Tug of War Optimization                    | TWO   | 2016 | original  | no   | strong | 2     | easy   |\n|        | 4   | Electromagnetic Field Optimization         | EFO   | 2016 | original  | no   | strong | 6     | easy   |\n|        | 5   | Nuclear Reaction Optimization              | NRO   | 2019 | original  | yes  | best   | 2     | hard\\* |\n|        | 6   | Henry Gas Solubility Optimization          | HGSO  | 2019 | original  | no   | best   | 3     | medium |\n|        | 7   | Atom Search Optimization                   | ASO   | 2019 | original  | no   | best   | 4     | medium |\n|        | 8   | Equilibrium Optimizer                      | EO    | 2019 | original  | no   | BEST   | 2     | easy   |\n|        | 9   |                                            |       |      |           |      |        |       |        |\n| Human  | 1   | Teaching Learning Optimization             | TLO   | 2011 | original  | no   | strong | 2     | easy   |\n|        | 2   | Brain Storm Optimization                   | BSO   | 2011 | original  | no   | strong | 10    | easy   |\n|        | 3   | Queuing Search Algorithm                   | QSA   | 2019 | original  | no   | strong | 2     | hard   |\n|        | 4   | Search And Rescue Optimization             | SARO  | 2019 | original  | no   | strong | 4     | medium |\n|        | 5   | Life Choice\\-Based Optimization            | LCBO  | 2019 | original  | no   | strong | 2     | easy   |\n|        | 6   | Social Ski\\-Driver Optimization            | SSDO  | 2019 | changed   | no   | weak   | 2     | easy   |\n|        | 7   | Gaining Sharing Knowledge\\-based Algorithm | GSKA  | 2019 | original  | no   | strong | 6     | easy   |\n|        | 8   |                                            |       |      |           |      |        |       |        |\n| Bio    | 1   | Invasive Weed Optimization                 | IWO   | 2006 | original  | no   | strong | 5     | easy   |\n|        | 2   | Biogeography\\-Based Optimization           | BBO   | 2008 | original  | no   | strong | 4     | easy   |\n|        | 3   | Virus Colony Search                        | VCS   | 2016 | changed   | no   | best   | 4     | hard\\* |\n|        | 4   | Satin Bowerbird Optimizer                  | SBO   | 2017 | original  | no   | strong | 5     | easy   |\n|        | 5   | Wildebeest Herd Optimization               | WHO   | 2019 | changed   | no   | weak   | 12    | medium |\n|        | 6   | Black Widow Optimization                   | BWO   | 2020 | changed   | no   | weak   | 5     | medium |\n|        | 7   |                                            |       |      |           |      |        |       |        |\n| System | 1   | Germinal Center Optimization               | GCO   | 2018 | changed   | no   | weak   | 4     | medium |\n|        | 2   | Artificial Ecosystem\\-based Optimization   | AEO   | 2019 | original  | no   | best   | 2     | easy   |\n|        | 3   |                                            |       |      |           |      |        |       |        |\n| Math   | 1   | Sine Cosine Algorithm                      | SCA   | 2016 | changed   | no   | strong | 2     | easy   |\n|        | 2   |                                            |       |      |           |      |        |       |        |\n| Music  | 1   | Harmony Search                             | HS    | 2001 | changed   | no   | weak   | 5     | easy   |\n|        | 2   |                                            |       |      |           |      |        |       |        |\n| Proba  | 1   | Cross Entropy Method                       | CEM   | 1997 | original  | no   | strong | 4     | medium |\n|        | 2   |                                            |       |      |           |      |        |       |        |\n\n\n\n### A\n\n* **ABC - Artificial Bee Colony** . Karaboga, D. (2005). An idea based on honey bee swarm for numerical optimization (Vol. 200, pp. 1-10). Technical report-tr06, Erciyes university, engineering faculty, computer engineering department.\n\n* **ALO - Ant Lion Optimizer** . Mirjalili S (2015). \u201cThe Ant Lion Optimizer.\u201d Advances in Engineering Software, 83, 80-98. doi: [10.1016/j.advengsoft.2015.01.010](https://doi.org/10.1016/j.advengsoft.2015.01.010)\n\n* **AEO - Artificial Ecosystem-based Optimization** . Zhao, W., Wang, L., & Zhang, Z. (2019). Artificial ecosystem-based optimization: a novel nature-inspired meta-heuristic algorithm. Neural Computing and Applications, 1-43.\n\n* **ASO - Atom Search Optimization** . Zhao, W., Wang, L., & Zhang, Z. (2019). Atom search optimization and its application to solve a hydrogeologic parameter estimation problem. Knowledge-Based Systems, 163, 283-304.\n\n### B\n\n* **BFO - Bacterial Foraging Optimization** . Passino, K. M. (2002). Biomimicry of bacterial foraging for distributed optimization and control. IEEE control systems magazine, 22(3), 52-67.\n\n* **BBO - Biogeography-Based Optimization** . Simon, D. (2008). Biogeography-based optimization. IEEE transactions on evolutionary computation, 12(6), 702-713.\n\n* **BA - Bat Algorithm** . Yang, X. S. (2010). A new metaheuristic bat-inspired algorithm. In Nature inspired cooperative strategies for optimization (NICSO 2010) (pp. 65-74). Springer, Berlin, Heidelberg.\n\n* **BSO - Brain Storm Optimization** . Shi, Y. (2011, June). Brain storm optimization algorithm. In International conference in swarm intelligence (pp. 303-309). Springer, Berlin, Heidelberg.\n\n* **BSA - Bird Swarm Algorithm** . Meng, X. B., Gao, X. Z., Lu, L., Liu, Y., & Zhang, H. (2016). A new bio-inspired optimisation algorithm: Bird Swarm Algorithm. Journal of Experimental & Theoretical Artificial Intelligence, 28(4), 673-687.\n\n* **BES - Bald Eagle Search** . Alsattar, H. A., Zaidan, A. A., & Zaidan, B. B. (2019). Novel meta-heuristic bald eagle search optimisation algorithm. Artificial Intelligence Review, 1-28.\n\n* **BWO - Black Widow Optimization** . Hayyolalam, V., & Kazem, A. A. P. (2020). Black Widow Optimization Algorithm: A novel meta-heuristic approach for solving engineering optimization problems. Engineering Applications of Artificial Intelligence, 87, 103249.\n\n\n### C\n\n* **CEM - Cross Entropy Method** . Rubinstein, R. (1999). The cross-entropy method for combinatorial and continuous optimization. Methodology and computing in applied probability, 1(2), 127-190.\n\n* **CSO - Cat Swarm Optimization** . Chu, S. C., Tsai, P. W., & Pan, J. S. (2006, August). Cat swarm optimization. In Pacific Rim international conference on artificial intelligence (pp. 854-858). Springer, Berlin, Heidelberg.\n\n* **CRO - Coral Reefs Optimization** . Salcedo-Sanz, S., Del Ser, J., Landa-Torres, I., Gil-L\u00f3pez, S., & Portilla-Figueras, J. A. (2014). The coral reefs optimization algorithm: a novel metaheuristic for efficiently solving optimization problems. The Scientific World Journal, 2014.\n\n\n### D\n\n* **DE - Differential Evolution** . Storn, R., & Price, K. (1997). Differential evolution\u2013a simple and efficient heuristic for global optimization over continuous spaces. Journal of global optimization, 11(4), 341-359.\n\n* **DSA - Differential Search Algorithm** . Civicioglu, P. (2012). Transforming geocentric cartesian coordinates to geodetic coordinates by using differential search algorithm. Computers & Geosciences, 46, 229-247.\n\n\n\n### E\n\n* **ES - Evolution Strategies** . Schwefel, H. P. (1984). Evolution strategies: A family of non-linear optimization techniques based on imitating some principles of organic evolution. Annals of Operations Research, 1(2), 165-167.\n\n* **EP - Evolutionary programming** . Fogel, L. J. (1994). Evolutionary programming in perspective: The top-down view\n. Computational intelligence: Imitating life.\n\n* **EHO - Elephant Herding Optimization** . Wang, G. G., Deb, S., & Coelho, L. D. S. (2015, December). Elephant herding optimization. In 2015 3rd International Symposium on Computational and Business Intelligence (ISCBI) (pp. 1-5). IEEE.\n\n* **EFO - Electromagnetic Field Optimization** . Abedinpourshotorban, H., Shamsuddin, S. M., Beheshti, Z., & Jawawi, D. N. (2016). Electromagnetic field optimization: A physics-inspired metaheuristic optimization algorithm. Swarm and Evolutionary Computation, 26, 8-22.\n\n* **EOA - Earthworm Optimisation Algorithm** . Wang, G. G., Deb, S., & dos Santos Coelho, L. (2018). Earthworm optimisation algorithm: a bio-inspired metaheuristic algorithm for global optimisation problems. IJBIC, 12(1), 1-22.\n\n* **EPO - Emperor Penguin Optimizer** . Dhiman, G., & Kumar, V. (2018). Emperor penguin optimizer: A bio-inspired algorithm for engineering problems. Knowledge-Based Systems, 159, 20-50.\n\n* **EO - Equilibrium Optimizer** . Faramarzi, A., Heidarinejad, M., Stephens, B., & Mirjalili, S. (2019). Equilibrium optimizer: A novel optimization algorithm. Knowledge-Based Systems.\n\n\n### F\n* **FA - Fireworks algorithm** . Tan, Y., & Zhu, Y. (2010, June). Fireworks algorithm for optimization. In\n International conference in swarm intelligence (pp. 355-364). Springer, Berlin, Heidelberg.\n\n* **FPA - Flower Pollination Algorithm** . Yang, X. S. (2012, September). Flower pollination algorithm for global optimization. In International conference on unconventional computing and natural computation (pp. 240-249). Springer, Berlin, Heidelberg.\n\n\n### G\n\n* **GA - Genetic Algorithm** . Holland, J. H. (1992). Genetic algorithms. Scientific american, 267(1), 66-73.\n\n* **GWO - Grey Wolf Optimizer** . Mirjalili, S., Mirjalili, S. M., & Lewis, A. (2014). Grey wolf optimizer. Advances in engineering software, 69, 46-61.\n\n* **GOA - Grasshopper Optimisation Algorithm** . Saremi, S., Mirjalili, S., & Lewis, A. (2017). Grasshopper optimisation algorithm: theory and application. Advances in Engineering Software, 105, 30-47.\n\n* **GCO - Germinal Center Optimization** . Villase\u00f1or, C., Arana-Daniel, N., Alanis, A. Y., L\u00f3pez-Franco, C., & Hernandez-Vargas, E. A. (2018). Germinal center optimization algorithm. International Journal of Computational Intelligence Systems, 12(1), 13-27.\n\n* **GSKA - Gaining Sharing Knowledge-based Algorithm** . Mohamed, A. W., Hadi, A. A., & Mohamed, A. K. (2019). Gaining-sharing knowledge based algorithm for solving optimization problems: a novel nature-inspired algorithm. International Journal of Machine Learning and Cybernetics, 1-29.\n\n\n### H\n\n* **HS - Harmony Search** . Geem, Z. W., Kim, J. H., & Loganathan, G. V. (2001). A new heuristic optimization algorithm: harmony search. simulation, 76(2), 60-68.\n\n* **HHO - Harris Hawks Optimization** . Heidari, A. A., Mirjalili, S., Faris, H., Aljarah, I., Mafarja, M., & Chen, H. (2019). Harris hawks optimization: Algorithm and applications. Future Generation Computer Systems, 97, 849-872.\n\n* **HGSO - Henry Gas Solubility Optimization** . Hashim, F. A., Houssein, E. H., Mabrouk, M. S., Al-Atabany, W., & Mirjalili, S. (2019). Henry gas solubility optimization: A novel physics-based algorithm. Future Generation Computer Systems, 101, 646-667.\n\n### I\n\n\n* **IWO - Invasive Weed Optimization** . Mehrabian, A. R., & Lucas, C. (2006). A novel numerical optimization algorithm inspired from weed colonization. Ecological informatics, 1(4), 355-366.\n\n### J\n\n### K\n\n### L\n\n* **LCBO - Life Choice-Based Optimization** . Khatri, A., Gaba, A., Rana, K. P. S., & Kumar, V. (2019). A novel life choice-based optimizer. Soft Computing, 1-21.\n\n### M\n\n* **MA - Memetic Algorithm** . Moscato, P. (1989). On evolution, search, optimization, genetic algorithms and martial\n arts\n: Towards memetic algorithms. Caltech concurrent computation program, C3P Report, 826, 1989.\n\n* **MFO - Moth Flame Optimization** . Mirjalili, S. (2015). Moth-flame optimization algorithm: A novel nature-inspired heuristic paradigm. Knowledge-based systems, 89, 228-249.\n\n* **MVO - Multi-Verse Optimizer** . Mirjalili, S., Mirjalili, S. M., & Hatamlou, A. (2016). Multi-verse optimizer: a nature-inspired algorithm for global optimization. Neural Computing and Applications, 27(2), 495-513.\n\n* **MSA - Moth Search Algorithm** . Wang, G. G. (2018). Moth search algorithm: a bio-inspired metaheuristic algorithm for global optimization problems. Memetic Computing, 10(2), 151-164.\n\n* **NMRA - Nake Mole-rat Algorithm** . Salgotra, R., & Singh, U. (2019). The naked mole-rat algorithm. Neural Computing and Applications, 31(12), 8837-8857.\n\n* **MRFO - Manta Ray Foraging Optimization** . Zhao, W., Zhang, Z., & Wang, L. (2020). Manta ray foraging optimization: An effective bio-inspired optimizer for engineering applications. Engineering Applications of Artificial Intelligence, 87, 103300.\n\n\n\n### N\n\n\n* **NRO - Nuclear Reaction Optimization** . Wei, Z., Huang, C., Wang, X., Han, T., & Li, Y. (2019). Nuclear Reaction Optimization: A novel and powerful physics-based algorithm for global optimization. IEEE Access. \n\n\n### O\n\n### P\n\n* **PSO - Particle Swarm Optimization** . Eberhart, R., & Kennedy, J. (1995, October). A new optimizer using particle swarm theory. In MHS'95. Proceedings of the Sixth International Symposium on Micro Machine and Human Science (pp. 39-43). Ieee.\n\n* **PIO - Pigeon-Inspired Optimization** . Duan, H., & Qiao, P. (2014). Pigeon-inspired optimization: a new swarm intelligence optimizer for air robot path planning. International journal of intelligent computing and cybernetics.\n\n* **PFA - Pathfinder Algorithm** . Yapici, H., & Cetinkaya, N. (2019). A new meta-heuristic optimizer: Pathfinder algorithm. Applied Soft Computing, 78, 545-568.\n\n\n### Q\n\n* **QSA - Queuing Search Algorithm** . Zhang, J., Xiao, M., Gao, L., & Pan, Q. (2018). Queuing search algorithm: A novel metaheuristic algorithm for solving engineering optimization problems. Applied Mathematical Modelling, 63, 464-490.\n\n\n### R\n\n\n* **RHO - Rhino Herd Optimization** . Wang, G. G., Gao, X. Z., Zenger, K., & Coelho, L. D. S. (2018, December). A novel metaheuristic algorithm inspired by rhino herd behavior. In Proceedings of The 9th EUROSIM Congress on Modelling and Simulation, EUROSIM 2016, The 57th SIMS Conference on Simulation and Modelling SIMS 2016 (No. 142, pp. 1026-1033). Link\u00f6ping University Electronic Press.\n\n\n### S\n\n* **SSO - Social Spider Optimization** . Cuevas, E., Cienfuegos, M., Zald\u00edVar, D., & P\u00e9rez-Cisneros, M. (2013). A swarm optimization algorithm inspired in the behavior of the social-spider. Expert Systems with Applications, 40(16), 6374-6384.\n\n* **SSA - Social Spider Algorithm** . James, J. Q., & Li, V. O. (2015). A social spider algorithm for global optimization. Applied Soft Computing, 30, 614-627.\n\n* **SCA - Sine Cosine Algorithm** . Mirjalili, S. (2016). SCA: a sine cosine algorithm for solving optimization problems. Knowledge-Based Systems, 96, 120-133.\n\n* **SRSR - Swarm Robotics Search And Rescue** . Bakhshipour, M., Ghadi, M. J., & Namdari, F. (2017). Swarm robotics search & rescue: A novel artificial intelligence-inspired optimization approach. Applied Soft Computing, 57, 708-726.\n\n* **SBO - Satin Bowerbird Optimizer** . Moosavi, S. H. S., & Bardsiri, V. K. (2017). Satin bowerbird optimizer: a new optimization algorithm to optimize ANFIS for software development effort estimation. Engineering Applications of Artificial Intelligence, 60, 1-15.\n\n* **SFO - Sailfish Optimizer** . Shadravan, S., Naji, H. R., & Bardsiri, V. K. (2019). The Sailfish Optimizer: A novel nature-inspired metaheuristic algorithm for solving constrained engineering optimization problems. Engineering Applications of Artificial Intelligence, 80, 20-34.\n\n* **SARO - Search And Rescue Optimization** . Shabani, A., Asgarian, B., Gharebaghi, S. A., Salido, M. A., & Giret, A. (2019). A New Optimization Algorithm Based on Search and Rescue Operations. Mathematical Problems in Engineering, 2019.\n\n* **SSDO - Social Ski-Driver Optimization** . Tharwat, A., & Gabel, T. (2019). Parameters optimization of support vector machines for imbalanced data using social ski driver algorithm. Neural Computing and Applications, 1-14.\n\n* **SLO - Sea Lion Optimization** . Masadeh, R., Mahafzah, B. A., & Sharieh, A. (2019). Sea Lion Optimization Algorithm. Sea, 10(5).\n\n### T\n\n* **TLO - Teaching Learning Optimization** . Rao, R. V., Savsani, V. J., & Vakharia, D. P. (2011). Teaching\u2013learning-based optimization: a novel method for constrained mechanical design optimization problems. Computer-Aided Design, 43(3), 303-315.\n\n* **TWO - Tug of War Optimization** . Kaveh, A., & Zolghadr, A. (2016). A novel meta-heuristic algorithm: tug of war optimization. Iran University of Science & Technology, 6(4), 469-492.\n\n\n### U\n\n### V\n\n* **VCS - Virus Colony Search** . Li, M. D., Zhao, H., Weng, X. W., & Han, T. (2016). A novel nature-inspired\n algorithm for optimization: Virus colony search. Advances in Engineering Software, 92, 65-88.\n\n### W\n\n* **WOA - Whale Optimization Algorithm** . Mirjalili, S., & Lewis, A. (2016). The whale optimization algorithm. Advances in engineering software, 95, 51-67.\n\n* **WHO - Wildebeest Herd Optimization** . Amali, D., & Dinakaran, M. (2019). Wildebeest herd optimization: A new global optimization algorithm inspired by wildebeest herding behaviour. Journal of Intelligent & Fuzzy Systems, (Preprint), 1-14.\n\n* **WDO - Wind Driven Optimization** . Bayraktar, Z., Komurcu, M., & Werner, D. H. (2010, July). Wind Driven Optimization (WDO): A novel nature-inspired optimization algorithm and its application to electromagnetics. In 2010 IEEE antennas and propagation society international symposium (pp. 1-4). IEEE.\n\n### X\n\n### Y\n\n### Z\n\n\n\n# Not done - Not working yet\n\n* **Artificial Algae Algorithm** . Uymaz, S. A., Tezel, G., & Yel, E. (2015). Artificial algae algorithm (AAA) for\n nonlinear global optimization. Applied Soft Computing, 31, 153-171.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/thieunguyen5991/mealpy/archive/v0.8.3.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/thieunguyen5991/mealpy", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mealpy", "package_url": "https://pypi.org/project/mealpy/", "platform": "", "project_url": "https://pypi.org/project/mealpy/", "project_urls": {"Download": "https://github.com/thieunguyen5991/mealpy/archive/v0.8.3.zip", "Homepage": "https://github.com/thieunguyen5991/mealpy"}, "release_url": "https://pypi.org/project/mealpy/0.8.3/", "requires_dist": ["numpy", "scikit-learn", "matplotlib", "opfunu"], "requires_python": ">=3.6", "summary": "A collection of the state-of-the-art MEta-heuristics ALgorithms in PYthon (mealpy)", "version": "0.8.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>A collection of the state-of-the-art MEta-heuristics ALgorithms in PYthon (mealpy)</h1>\n<p><a href=\"\" rel=\"nofollow\"><img alt=\"GitHub release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/caa4a0e13ed056b5bc8f26432f8cec89932f03b3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656c656173652d302e382e332d79656c6c6f772e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/mealpy\" rel=\"nofollow\"><img alt=\"Wheel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f753d9f348cc6f8b6cc6310c74e9e7a87b69a68/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f67656e73696d2e737667\"></a>\n<a href=\"https://badge.fury.io/py/mealpy\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8d1da40d2e46da10a40ccc45ca8cfb0a8ca06762/68747470733a2f2f62616467652e667572792e696f2f70792f6d65616c70792e737667\"></a>\n<a href=\"https://doi.org/10.5281/zenodo.3711948\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/29892be13816eafd61bc31ab12fea7d52925d7ca/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e333731313934392e737667\"></a>\n<a href=\"\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/625fc3d26264fe71c5de4d49c84463711b5e1a00/68747470733a2f2f696d672e736869656c64732e696f2f7061636b61676973742f6c2f646f637472696e652f6f726d2e737667\"></a></p>\n<hr>\n<blockquote>\n<p>\"Knowledge is power, sharing it is the premise of progress in life. It seems like a burden to someone, but it is the only way to achieve immortality.\"\n--- <a href=\"https://www.researchgate.net/profile/Thieu_Nguyen6\" rel=\"nofollow\">Thieu Nguyen</a></p>\n</blockquote>\n<hr>\n<h2>Introduction</h2>\n<ul>\n<li>\n<p>MEALPY is a python module for the most of cutting-edge population meta-heuristic algorithms and is distributed\nunder MIT license.</p>\n</li>\n<li>\n<p>The goals of this framework are:</p>\n<ul>\n<li>Sharing knowledge of meta-heuristic fields to everyone without a fee</li>\n<li>Helping other researchers in all field access to optimization algorithms as quickly as possible</li>\n<li>Implement the classical as well as the state-of-the-art meta-heuristics (The whole history of meta-heuristics)</li>\n</ul>\n</li>\n</ul>\n<h2>Installation</h2>\n<h3>Dependencies</h3>\n<ul>\n<li>Python (&gt;= 3.6)</li>\n<li>Numpy (&gt;= 1.15.1)</li>\n<li>Scikit-learn (&gt;= 0.22.1)</li>\n<li>Matplotlib (&gt;=3.1.3)</li>\n<li>Opfunu (&gt;= 0.4.3)</li>\n</ul>\n<h3>User installation</h3>\n<p>Install the <a href=\"https://pypi.python.org/pypi/mealpy\" rel=\"nofollow\">current PyPI release</a>:</p>\n<pre>    pip install mealpy\n    pip install --upgrade mealpy \n</pre>\n<p>Or install the development version from GitHub:</p>\n<pre>    pip install git+https://github.com/thieunguyen5991/mealpy\n</pre>\n<h3>Example</h3>\n<pre>* Simple example:\n\n    from opfunu.type_based.uni_modal import Functions\n    from mealpy.evolutionary_based.GA import BaseGA\n    t1 = Functions()\n\n    ## Setting parameters\n    objective_func = t1._sum_squres__\n    problem_size = 30\n    domain_range = [-15, 15]\n    log = True\n    epoch = 100\n    pop_size = 50\n    pc = 0.95\n    pm = 0.025\n\n    md = BaseGA(objective_func, problem_size, domain_range, log, epoch, pop_size, pc, pm)\n    best_position, best_fit, list_loss = md._train__()\n    print(best_fit)\n\n* Or run the simple:\n    python examples/simple_run.py\n\n* The more complicated tests in the folder: examples\n</pre>\n<p>The documentation includes more detailed installation instructions.</p>\n<h3>Changelog</h3>\n<ul>\n<li>See the \"ChangeLog.md\" for a history of notable changes to mealpy.</li>\n</ul>\n<h3>Important links</h3>\n<ul>\n<li>\n<p>Official source code repo: <a href=\"https://github.com/thieunguyen5991/mealpy\" rel=\"nofollow\">https://github.com/thieunguyen5991/mealpy</a></p>\n</li>\n<li>\n<p>Download releases: <a href=\"https://pypi.org/project/mealpy/\" rel=\"nofollow\">https://pypi.org/project/mealpy/</a></p>\n</li>\n<li>\n<p>Issue tracker: <a href=\"https://github.com/thieunguyen5991/mealpy/issues\" rel=\"nofollow\">https://github.com/thieunguyen5991/mealpy/issues</a></p>\n</li>\n<li>\n<p>This project also related to my another projects which are \"meta-heuristics\" and \"neural-network\", check it here</p>\n<ul>\n<li><a href=\"https://github.com/thieunguyen5991/opfunu\" rel=\"nofollow\">https://github.com/thieunguyen5991/opfunu</a></li>\n<li><a href=\"https://github.com/thieunguyen5991/metaheuristics\" rel=\"nofollow\">https://github.com/thieunguyen5991/metaheuristics</a></li>\n<li><a href=\"https://github.com/chasebk\" rel=\"nofollow\">https://github.com/chasebk</a></li>\n</ul>\n</li>\n</ul>\n<h2>Contributions</h2>\n<h3>Citation</h3>\n<p>If you use mealpy in your project, I would appreciate citations:</p>\n<pre>@software{thieu_nguyen_2020_3711949,\n  author       = {Thieu Nguyen},\n  title        = {A collection of the state-of-the-art MEta-heuristics ALgorithms in PYthon: Mealpy},\n  month        = march,\n  year         = 2020,\n  publisher    = {Zenodo},\n  doi          = {10.5281/zenodo.3711948},\n  url          = {https://doi.org/10.5281/zenodo.3711948}\n}\n\n@article{nguyen2019efficient,\n  title={Efficient Time-Series Forecasting Using Neural Network and Opposition-Based Coral Reefs Optimization},\n  author={Nguyen, Thieu and Nguyen, Tu and Nguyen, Binh Minh and Nguyen, Giang},\n  journal={International Journal of Computational Intelligence Systems},\n  volume={12},\n  number={2},\n  pages={1144--1161},\n  year={2019},\n  publisher={Atlantis Press}\n}\n</pre>\n<h3>Documents</h3>\n<ul>\n<li>\n<p>Group:</p>\n<ul>\n<li>Evolu: Evolutionary-based</li>\n<li>Swarm: Swarm-based</li>\n<li>Physic: Physics-based</li>\n<li>Human: Human-based</li>\n<li>Bio: Biology-based</li>\n<li>System: System-based (eco-system, immune-system, network-system, ...)</li>\n<li>Math: Math-based</li>\n<li>Music: Music-based</li>\n<li>Proba: Probabilistic based algorithm</li>\n</ul>\n</li>\n<li>\n<p>Levy: Using levy-flight technique or not</p>\n</li>\n<li>\n<p>Version:</p>\n<ul>\n<li>original: Taken exactly from the paper</li>\n<li>changed: I changed the flow or equation to make algorithm works</li>\n</ul>\n</li>\n<li>\n<p>Type:</p>\n<ul>\n<li>weak: working fine with uni-modal and some multi-modal functions</li>\n<li>strong: working good with uni-modal, multi-modal, some hybrid and some composite functions</li>\n<li>best: working well with almost all kind of functions</li>\n<li>BEST: the best among all algorithms</li>\n</ul>\n</li>\n<li>\n<p>Some algorithm with original version and no levy techniques still belong to the best type such as:</p>\n<ul>\n<li>Whale Optimization Algorithm</li>\n<li>Bird Swarm Algorithm</li>\n<li>Swarm Robotics Search And Rescue</li>\n<li>Manta Ray Foraging Optimization</li>\n<li>Henry Gas Solubility Optimization</li>\n<li>Atom Search Optimization</li>\n<li>Equilibrium Optimizer</li>\n<li>Artificial Ecosystem-based Optimization</li>\n</ul>\n</li>\n<li>\n<p>Paras: The number of parameters in the algorithm (Not counting the fixed parameters in the original paper)</p>\n<ul>\n<li>Almost algorithms have 2 paras (epoch, population_size) and plus some paras depend on each algorithm.</li>\n<li>Some algorithms belong to \"best\" type and have only 2 paras meaning that algorithm is outstanding</li>\n</ul>\n</li>\n<li>\n<p>Diffic - Difficulty Level: Objective observation from author.</p>\n<ul>\n<li>Depend on the number of parameters, number of equations, the original ideas, time spend for coding, source lines of code (SLOC)</li>\n<li>Easy: A few paras, few equations, SLOC very short</li>\n<li>Medium: more equations than Easy level, SLOC longer than Easy level</li>\n<li>Hard: Lots of equations, SLOC longer than Medium level, the paper hard to read.</li>\n<li>Hard* - Very hard: Lots of equations, SLOC too long, the paper is very hard to read.</li>\n</ul>\n</li>\n</ul>\n<p>** For newbie, I recommend to read the paper of algorithms belong to \"best or strong\" type, \"easy or medium\" difficulty level.</p>\n<table>\n<thead>\n<tr>\n<th>Group</th>\n<th>STT</th>\n<th>Name</th>\n<th>Short</th>\n<th>Year</th>\n<th>Version</th>\n<th>Levy</th>\n<th>Type</th>\n<th>Paras</th>\n<th>Diffic</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Evolu</td>\n<td>1</td>\n<td>Evolutionary Programming</td>\n<td>EP</td>\n<td>1964</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>3</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>2</td>\n<td>Evolution Strategies</td>\n<td>ES</td>\n<td>1971</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>3</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>3</td>\n<td>Memetic Algorithm</td>\n<td>MA</td>\n<td>1989</td>\n<td>original</td>\n<td>no</td>\n<td>weak</td>\n<td>7</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>3</td>\n<td>Genetic Algorithm</td>\n<td>GA</td>\n<td>1992</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>4</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>4</td>\n<td>Differential Evolution</td>\n<td>DE</td>\n<td>1997</td>\n<td>original</td>\n<td>no</td>\n<td>weak</td>\n<td>4</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>5</td>\n<td>Flower Pollination Algorithm</td>\n<td>FPA</td>\n<td>2014</td>\n<td>orginal</td>\n<td>yes</td>\n<td>strong</td>\n<td>3</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>6</td>\n<td>Coral Reefs Optimization</td>\n<td>CRO</td>\n<td>2014</td>\n<td>original</td>\n<td>no</td>\n<td>weak</td>\n<td>7</td>\n<td>medium</td>\n</tr>\n<tr>\n<td></td>\n<td>7</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Swarm</td>\n<td>1</td>\n<td>Particle Swarm Optimization</td>\n<td>PSO</td>\n<td>1995</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>6</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>2</td>\n<td>Bacterial Foraging Optimization</td>\n<td>BFO</td>\n<td>2002</td>\n<td>orginal</td>\n<td>no</td>\n<td>weak</td>\n<td>11</td>\n<td>hard</td>\n</tr>\n<tr>\n<td></td>\n<td>3</td>\n<td>Cat Swarm Optimization</td>\n<td>CSO</td>\n<td>2006</td>\n<td>original</td>\n<td>no</td>\n<td>weak</td>\n<td>9</td>\n<td>hard</td>\n</tr>\n<tr>\n<td></td>\n<td>4</td>\n<td>Artificial Bee Colony</td>\n<td>ABC</td>\n<td>2007</td>\n<td>changed</td>\n<td>no</td>\n<td>strong</td>\n<td>6</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>5</td>\n<td>Fireworks Algorithm</td>\n<td>FA</td>\n<td>2010</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>7</td>\n<td>medium</td>\n</tr>\n<tr>\n<td></td>\n<td>6</td>\n<td>Bat Algorithm</td>\n<td>BA</td>\n<td>2010</td>\n<td>original</td>\n<td>no</td>\n<td>weak</td>\n<td>5</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>7</td>\n<td>Social Spider Optimization</td>\n<td>SSO</td>\n<td>2013</td>\n<td>changed</td>\n<td>no</td>\n<td>weak</td>\n<td>3</td>\n<td>hard*</td>\n</tr>\n<tr>\n<td></td>\n<td>8</td>\n<td>Pigeon-Inspired Optimization</td>\n<td>PIO</td>\n<td>2014</td>\n<td>changed</td>\n<td>no</td>\n<td>strong</td>\n<td>2</td>\n<td>medium</td>\n</tr>\n<tr>\n<td></td>\n<td>9</td>\n<td>Grey Wolf Optimizer</td>\n<td>GWO</td>\n<td>2014</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>2</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>10</td>\n<td>Social Spider Algorithm</td>\n<td>SSA</td>\n<td>2015</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>5</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>11</td>\n<td>Ant Lion Optimizer</td>\n<td>ALO</td>\n<td>2015</td>\n<td>original</td>\n<td>no</td>\n<td>weak</td>\n<td>2</td>\n<td>medium</td>\n</tr>\n<tr>\n<td></td>\n<td>12</td>\n<td>Moth Flame Optimization</td>\n<td>MFO</td>\n<td>2015</td>\n<td>changed</td>\n<td>no</td>\n<td>strong</td>\n<td>2</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>13</td>\n<td>Elephant Herding Optimization</td>\n<td>EHO</td>\n<td>2015</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>5</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>14</td>\n<td>Whale Optimization Algorithm</td>\n<td>WOA</td>\n<td>2016</td>\n<td>original</td>\n<td>no</td>\n<td>best</td>\n<td>2</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>15</td>\n<td>Bird Swarm Algorithm</td>\n<td>BSA</td>\n<td>2016</td>\n<td>original</td>\n<td>no</td>\n<td>best</td>\n<td>9</td>\n<td>medium</td>\n</tr>\n<tr>\n<td></td>\n<td>16</td>\n<td>Swarm Robotics Search And Rescue</td>\n<td>SRSR</td>\n<td>2017</td>\n<td>original</td>\n<td>no</td>\n<td>best</td>\n<td>2</td>\n<td>hard*</td>\n</tr>\n<tr>\n<td></td>\n<td>17</td>\n<td>Grasshopper Optimisation Algorithm</td>\n<td>GOA</td>\n<td>2017</td>\n<td>original</td>\n<td>no</td>\n<td>weak</td>\n<td>3</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>18</td>\n<td>Earthworm Optimisation Algorithm</td>\n<td>EOA</td>\n<td>2018</td>\n<td>original</td>\n<td>no</td>\n<td>weak</td>\n<td>8</td>\n<td>medium</td>\n</tr>\n<tr>\n<td></td>\n<td>19</td>\n<td>Moth Search Algorithm</td>\n<td>MSA</td>\n<td>2018</td>\n<td>changed</td>\n<td>no</td>\n<td>weak</td>\n<td>5</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>20</td>\n<td>Rhino Herd Optimization</td>\n<td>RHO</td>\n<td>2018</td>\n<td>original</td>\n<td>no</td>\n<td>weak</td>\n<td>6</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>21</td>\n<td>Emperor Penguin Optimizer</td>\n<td>EPO</td>\n<td>2018</td>\n<td>changed</td>\n<td>no</td>\n<td>strong</td>\n<td>2</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>22</td>\n<td>Nake Mole-rat Algorithm</td>\n<td>NMRA</td>\n<td>2019</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>3</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>23</td>\n<td>Bald Eagle Search</td>\n<td>BES</td>\n<td>2019</td>\n<td>changed</td>\n<td>no</td>\n<td>best</td>\n<td>7</td>\n<td>medium</td>\n</tr>\n<tr>\n<td></td>\n<td>24</td>\n<td>Pathfinder Algorithm</td>\n<td>PFA</td>\n<td>2019</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>2</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>25</td>\n<td>Sailfish Optimizer</td>\n<td>SFO</td>\n<td>2019</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>5</td>\n<td>medium</td>\n</tr>\n<tr>\n<td></td>\n<td>26</td>\n<td>Harris Hawks Optimization</td>\n<td>HHO</td>\n<td>2019</td>\n<td>original</td>\n<td>yes</td>\n<td>best</td>\n<td>2</td>\n<td>medium</td>\n</tr>\n<tr>\n<td></td>\n<td>27</td>\n<td>Sea Lion Optimization</td>\n<td>SLO</td>\n<td>2019</td>\n<td>orginal</td>\n<td>no</td>\n<td>strong</td>\n<td>2</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>28</td>\n<td>Manta Ray Foraging Optimization</td>\n<td>MRFO</td>\n<td>2020</td>\n<td>original</td>\n<td>no</td>\n<td>best</td>\n<td>3</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>29</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Physic</td>\n<td>1</td>\n<td>Wind Driven Optimization</td>\n<td>WDO</td>\n<td>2013</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>7</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>2</td>\n<td>Multi-Verse Optimizer</td>\n<td>MVO</td>\n<td>2016</td>\n<td>changed</td>\n<td>no</td>\n<td>strong</td>\n<td>3</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>3</td>\n<td>Tug of War Optimization</td>\n<td>TWO</td>\n<td>2016</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>2</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>4</td>\n<td>Electromagnetic Field Optimization</td>\n<td>EFO</td>\n<td>2016</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>6</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>5</td>\n<td>Nuclear Reaction Optimization</td>\n<td>NRO</td>\n<td>2019</td>\n<td>original</td>\n<td>yes</td>\n<td>best</td>\n<td>2</td>\n<td>hard*</td>\n</tr>\n<tr>\n<td></td>\n<td>6</td>\n<td>Henry Gas Solubility Optimization</td>\n<td>HGSO</td>\n<td>2019</td>\n<td>original</td>\n<td>no</td>\n<td>best</td>\n<td>3</td>\n<td>medium</td>\n</tr>\n<tr>\n<td></td>\n<td>7</td>\n<td>Atom Search Optimization</td>\n<td>ASO</td>\n<td>2019</td>\n<td>original</td>\n<td>no</td>\n<td>best</td>\n<td>4</td>\n<td>medium</td>\n</tr>\n<tr>\n<td></td>\n<td>8</td>\n<td>Equilibrium Optimizer</td>\n<td>EO</td>\n<td>2019</td>\n<td>original</td>\n<td>no</td>\n<td>BEST</td>\n<td>2</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>9</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Human</td>\n<td>1</td>\n<td>Teaching Learning Optimization</td>\n<td>TLO</td>\n<td>2011</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>2</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>2</td>\n<td>Brain Storm Optimization</td>\n<td>BSO</td>\n<td>2011</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>10</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>3</td>\n<td>Queuing Search Algorithm</td>\n<td>QSA</td>\n<td>2019</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>2</td>\n<td>hard</td>\n</tr>\n<tr>\n<td></td>\n<td>4</td>\n<td>Search And Rescue Optimization</td>\n<td>SARO</td>\n<td>2019</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>4</td>\n<td>medium</td>\n</tr>\n<tr>\n<td></td>\n<td>5</td>\n<td>Life Choice-Based Optimization</td>\n<td>LCBO</td>\n<td>2019</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>2</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>6</td>\n<td>Social Ski-Driver Optimization</td>\n<td>SSDO</td>\n<td>2019</td>\n<td>changed</td>\n<td>no</td>\n<td>weak</td>\n<td>2</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>7</td>\n<td>Gaining Sharing Knowledge-based Algorithm</td>\n<td>GSKA</td>\n<td>2019</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>6</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>8</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Bio</td>\n<td>1</td>\n<td>Invasive Weed Optimization</td>\n<td>IWO</td>\n<td>2006</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>5</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>2</td>\n<td>Biogeography-Based Optimization</td>\n<td>BBO</td>\n<td>2008</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>4</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>3</td>\n<td>Virus Colony Search</td>\n<td>VCS</td>\n<td>2016</td>\n<td>changed</td>\n<td>no</td>\n<td>best</td>\n<td>4</td>\n<td>hard*</td>\n</tr>\n<tr>\n<td></td>\n<td>4</td>\n<td>Satin Bowerbird Optimizer</td>\n<td>SBO</td>\n<td>2017</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>5</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>5</td>\n<td>Wildebeest Herd Optimization</td>\n<td>WHO</td>\n<td>2019</td>\n<td>changed</td>\n<td>no</td>\n<td>weak</td>\n<td>12</td>\n<td>medium</td>\n</tr>\n<tr>\n<td></td>\n<td>6</td>\n<td>Black Widow Optimization</td>\n<td>BWO</td>\n<td>2020</td>\n<td>changed</td>\n<td>no</td>\n<td>weak</td>\n<td>5</td>\n<td>medium</td>\n</tr>\n<tr>\n<td></td>\n<td>7</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>System</td>\n<td>1</td>\n<td>Germinal Center Optimization</td>\n<td>GCO</td>\n<td>2018</td>\n<td>changed</td>\n<td>no</td>\n<td>weak</td>\n<td>4</td>\n<td>medium</td>\n</tr>\n<tr>\n<td></td>\n<td>2</td>\n<td>Artificial Ecosystem-based Optimization</td>\n<td>AEO</td>\n<td>2019</td>\n<td>original</td>\n<td>no</td>\n<td>best</td>\n<td>2</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>3</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Math</td>\n<td>1</td>\n<td>Sine Cosine Algorithm</td>\n<td>SCA</td>\n<td>2016</td>\n<td>changed</td>\n<td>no</td>\n<td>strong</td>\n<td>2</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>2</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Music</td>\n<td>1</td>\n<td>Harmony Search</td>\n<td>HS</td>\n<td>2001</td>\n<td>changed</td>\n<td>no</td>\n<td>weak</td>\n<td>5</td>\n<td>easy</td>\n</tr>\n<tr>\n<td></td>\n<td>2</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Proba</td>\n<td>1</td>\n<td>Cross Entropy Method</td>\n<td>CEM</td>\n<td>1997</td>\n<td>original</td>\n<td>no</td>\n<td>strong</td>\n<td>4</td>\n<td>medium</td>\n</tr>\n<tr>\n<td></td>\n<td>2</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr></tbody></table>\n<h3>A</h3>\n<ul>\n<li>\n<p><strong>ABC - Artificial Bee Colony</strong> . Karaboga, D. (2005). An idea based on honey bee swarm for numerical optimization (Vol. 200, pp. 1-10). Technical report-tr06, Erciyes university, engineering faculty, computer engineering department.</p>\n</li>\n<li>\n<p><strong>ALO - Ant Lion Optimizer</strong> . Mirjalili S (2015). \u201cThe Ant Lion Optimizer.\u201d Advances in Engineering Software, 83, 80-98. doi: <a href=\"https://doi.org/10.1016/j.advengsoft.2015.01.010\" rel=\"nofollow\">10.1016/j.advengsoft.2015.01.010</a></p>\n</li>\n<li>\n<p><strong>AEO - Artificial Ecosystem-based Optimization</strong> . Zhao, W., Wang, L., &amp; Zhang, Z. (2019). Artificial ecosystem-based optimization: a novel nature-inspired meta-heuristic algorithm. Neural Computing and Applications, 1-43.</p>\n</li>\n<li>\n<p><strong>ASO - Atom Search Optimization</strong> . Zhao, W., Wang, L., &amp; Zhang, Z. (2019). Atom search optimization and its application to solve a hydrogeologic parameter estimation problem. Knowledge-Based Systems, 163, 283-304.</p>\n</li>\n</ul>\n<h3>B</h3>\n<ul>\n<li>\n<p><strong>BFO - Bacterial Foraging Optimization</strong> . Passino, K. M. (2002). Biomimicry of bacterial foraging for distributed optimization and control. IEEE control systems magazine, 22(3), 52-67.</p>\n</li>\n<li>\n<p><strong>BBO - Biogeography-Based Optimization</strong> . Simon, D. (2008). Biogeography-based optimization. IEEE transactions on evolutionary computation, 12(6), 702-713.</p>\n</li>\n<li>\n<p><strong>BA - Bat Algorithm</strong> . Yang, X. S. (2010). A new metaheuristic bat-inspired algorithm. In Nature inspired cooperative strategies for optimization (NICSO 2010) (pp. 65-74). Springer, Berlin, Heidelberg.</p>\n</li>\n<li>\n<p><strong>BSO - Brain Storm Optimization</strong> . Shi, Y. (2011, June). Brain storm optimization algorithm. In International conference in swarm intelligence (pp. 303-309). Springer, Berlin, Heidelberg.</p>\n</li>\n<li>\n<p><strong>BSA - Bird Swarm Algorithm</strong> . Meng, X. B., Gao, X. Z., Lu, L., Liu, Y., &amp; Zhang, H. (2016). A new bio-inspired optimisation algorithm: Bird Swarm Algorithm. Journal of Experimental &amp; Theoretical Artificial Intelligence, 28(4), 673-687.</p>\n</li>\n<li>\n<p><strong>BES - Bald Eagle Search</strong> . Alsattar, H. A., Zaidan, A. A., &amp; Zaidan, B. B. (2019). Novel meta-heuristic bald eagle search optimisation algorithm. Artificial Intelligence Review, 1-28.</p>\n</li>\n<li>\n<p><strong>BWO - Black Widow Optimization</strong> . Hayyolalam, V., &amp; Kazem, A. A. P. (2020). Black Widow Optimization Algorithm: A novel meta-heuristic approach for solving engineering optimization problems. Engineering Applications of Artificial Intelligence, 87, 103249.</p>\n</li>\n</ul>\n<h3>C</h3>\n<ul>\n<li>\n<p><strong>CEM - Cross Entropy Method</strong> . Rubinstein, R. (1999). The cross-entropy method for combinatorial and continuous optimization. Methodology and computing in applied probability, 1(2), 127-190.</p>\n</li>\n<li>\n<p><strong>CSO - Cat Swarm Optimization</strong> . Chu, S. C., Tsai, P. W., &amp; Pan, J. S. (2006, August). Cat swarm optimization. In Pacific Rim international conference on artificial intelligence (pp. 854-858). Springer, Berlin, Heidelberg.</p>\n</li>\n<li>\n<p><strong>CRO - Coral Reefs Optimization</strong> . Salcedo-Sanz, S., Del Ser, J., Landa-Torres, I., Gil-L\u00f3pez, S., &amp; Portilla-Figueras, J. A. (2014). The coral reefs optimization algorithm: a novel metaheuristic for efficiently solving optimization problems. The Scientific World Journal, 2014.</p>\n</li>\n</ul>\n<h3>D</h3>\n<ul>\n<li>\n<p><strong>DE - Differential Evolution</strong> . Storn, R., &amp; Price, K. (1997). Differential evolution\u2013a simple and efficient heuristic for global optimization over continuous spaces. Journal of global optimization, 11(4), 341-359.</p>\n</li>\n<li>\n<p><strong>DSA - Differential Search Algorithm</strong> . Civicioglu, P. (2012). Transforming geocentric cartesian coordinates to geodetic coordinates by using differential search algorithm. Computers &amp; Geosciences, 46, 229-247.</p>\n</li>\n</ul>\n<h3>E</h3>\n<ul>\n<li>\n<p><strong>ES - Evolution Strategies</strong> . Schwefel, H. P. (1984). Evolution strategies: A family of non-linear optimization techniques based on imitating some principles of organic evolution. Annals of Operations Research, 1(2), 165-167.</p>\n</li>\n<li>\n<p><strong>EP - Evolutionary programming</strong> . Fogel, L. J. (1994). Evolutionary programming in perspective: The top-down view\n. Computational intelligence: Imitating life.</p>\n</li>\n<li>\n<p><strong>EHO - Elephant Herding Optimization</strong> . Wang, G. G., Deb, S., &amp; Coelho, L. D. S. (2015, December). Elephant herding optimization. In 2015 3rd International Symposium on Computational and Business Intelligence (ISCBI) (pp. 1-5). IEEE.</p>\n</li>\n<li>\n<p><strong>EFO - Electromagnetic Field Optimization</strong> . Abedinpourshotorban, H., Shamsuddin, S. M., Beheshti, Z., &amp; Jawawi, D. N. (2016). Electromagnetic field optimization: A physics-inspired metaheuristic optimization algorithm. Swarm and Evolutionary Computation, 26, 8-22.</p>\n</li>\n<li>\n<p><strong>EOA - Earthworm Optimisation Algorithm</strong> . Wang, G. G., Deb, S., &amp; dos Santos Coelho, L. (2018). Earthworm optimisation algorithm: a bio-inspired metaheuristic algorithm for global optimisation problems. IJBIC, 12(1), 1-22.</p>\n</li>\n<li>\n<p><strong>EPO - Emperor Penguin Optimizer</strong> . Dhiman, G., &amp; Kumar, V. (2018). Emperor penguin optimizer: A bio-inspired algorithm for engineering problems. Knowledge-Based Systems, 159, 20-50.</p>\n</li>\n<li>\n<p><strong>EO - Equilibrium Optimizer</strong> . Faramarzi, A., Heidarinejad, M., Stephens, B., &amp; Mirjalili, S. (2019). Equilibrium optimizer: A novel optimization algorithm. Knowledge-Based Systems.</p>\n</li>\n</ul>\n<h3>F</h3>\n<ul>\n<li>\n<p><strong>FA - Fireworks algorithm</strong> . Tan, Y., &amp; Zhu, Y. (2010, June). Fireworks algorithm for optimization. In\nInternational conference in swarm intelligence (pp. 355-364). Springer, Berlin, Heidelberg.</p>\n</li>\n<li>\n<p><strong>FPA - Flower Pollination Algorithm</strong> . Yang, X. S. (2012, September). Flower pollination algorithm for global optimization. In International conference on unconventional computing and natural computation (pp. 240-249). Springer, Berlin, Heidelberg.</p>\n</li>\n</ul>\n<h3>G</h3>\n<ul>\n<li>\n<p><strong>GA - Genetic Algorithm</strong> . Holland, J. H. (1992). Genetic algorithms. Scientific american, 267(1), 66-73.</p>\n</li>\n<li>\n<p><strong>GWO - Grey Wolf Optimizer</strong> . Mirjalili, S., Mirjalili, S. M., &amp; Lewis, A. (2014). Grey wolf optimizer. Advances in engineering software, 69, 46-61.</p>\n</li>\n<li>\n<p><strong>GOA - Grasshopper Optimisation Algorithm</strong> . Saremi, S., Mirjalili, S., &amp; Lewis, A. (2017). Grasshopper optimisation algorithm: theory and application. Advances in Engineering Software, 105, 30-47.</p>\n</li>\n<li>\n<p><strong>GCO - Germinal Center Optimization</strong> . Villase\u00f1or, C., Arana-Daniel, N., Alanis, A. Y., L\u00f3pez-Franco, C., &amp; Hernandez-Vargas, E. A. (2018). Germinal center optimization algorithm. International Journal of Computational Intelligence Systems, 12(1), 13-27.</p>\n</li>\n<li>\n<p><strong>GSKA - Gaining Sharing Knowledge-based Algorithm</strong> . Mohamed, A. W., Hadi, A. A., &amp; Mohamed, A. K. (2019). Gaining-sharing knowledge based algorithm for solving optimization problems: a novel nature-inspired algorithm. International Journal of Machine Learning and Cybernetics, 1-29.</p>\n</li>\n</ul>\n<h3>H</h3>\n<ul>\n<li>\n<p><strong>HS - Harmony Search</strong> . Geem, Z. W., Kim, J. H., &amp; Loganathan, G. V. (2001). A new heuristic optimization algorithm: harmony search. simulation, 76(2), 60-68.</p>\n</li>\n<li>\n<p><strong>HHO - Harris Hawks Optimization</strong> . Heidari, A. A., Mirjalili, S., Faris, H., Aljarah, I., Mafarja, M., &amp; Chen, H. (2019). Harris hawks optimization: Algorithm and applications. Future Generation Computer Systems, 97, 849-872.</p>\n</li>\n<li>\n<p><strong>HGSO - Henry Gas Solubility Optimization</strong> . Hashim, F. A., Houssein, E. H., Mabrouk, M. S., Al-Atabany, W., &amp; Mirjalili, S. (2019). Henry gas solubility optimization: A novel physics-based algorithm. Future Generation Computer Systems, 101, 646-667.</p>\n</li>\n</ul>\n<h3>I</h3>\n<ul>\n<li><strong>IWO - Invasive Weed Optimization</strong> . Mehrabian, A. R., &amp; Lucas, C. (2006). A novel numerical optimization algorithm inspired from weed colonization. Ecological informatics, 1(4), 355-366.</li>\n</ul>\n<h3>J</h3>\n<h3>K</h3>\n<h3>L</h3>\n<ul>\n<li><strong>LCBO - Life Choice-Based Optimization</strong> . Khatri, A., Gaba, A., Rana, K. P. S., &amp; Kumar, V. (2019). A novel life choice-based optimizer. Soft Computing, 1-21.</li>\n</ul>\n<h3>M</h3>\n<ul>\n<li>\n<p><strong>MA - Memetic Algorithm</strong> . Moscato, P. (1989). On evolution, search, optimization, genetic algorithms and martial\narts\n: Towards memetic algorithms. Caltech concurrent computation program, C3P Report, 826, 1989.</p>\n</li>\n<li>\n<p><strong>MFO - Moth Flame Optimization</strong> . Mirjalili, S. (2015). Moth-flame optimization algorithm: A novel nature-inspired heuristic paradigm. Knowledge-based systems, 89, 228-249.</p>\n</li>\n<li>\n<p><strong>MVO - Multi-Verse Optimizer</strong> . Mirjalili, S., Mirjalili, S. M., &amp; Hatamlou, A. (2016). Multi-verse optimizer: a nature-inspired algorithm for global optimization. Neural Computing and Applications, 27(2), 495-513.</p>\n</li>\n<li>\n<p><strong>MSA - Moth Search Algorithm</strong> . Wang, G. G. (2018). Moth search algorithm: a bio-inspired metaheuristic algorithm for global optimization problems. Memetic Computing, 10(2), 151-164.</p>\n</li>\n<li>\n<p><strong>NMRA - Nake Mole-rat Algorithm</strong> . Salgotra, R., &amp; Singh, U. (2019). The naked mole-rat algorithm. Neural Computing and Applications, 31(12), 8837-8857.</p>\n</li>\n<li>\n<p><strong>MRFO - Manta Ray Foraging Optimization</strong> . Zhao, W., Zhang, Z., &amp; Wang, L. (2020). Manta ray foraging optimization: An effective bio-inspired optimizer for engineering applications. Engineering Applications of Artificial Intelligence, 87, 103300.</p>\n</li>\n</ul>\n<h3>N</h3>\n<ul>\n<li><strong>NRO - Nuclear Reaction Optimization</strong> . Wei, Z., Huang, C., Wang, X., Han, T., &amp; Li, Y. (2019). Nuclear Reaction Optimization: A novel and powerful physics-based algorithm for global optimization. IEEE Access.</li>\n</ul>\n<h3>O</h3>\n<h3>P</h3>\n<ul>\n<li>\n<p><strong>PSO - Particle Swarm Optimization</strong> . Eberhart, R., &amp; Kennedy, J. (1995, October). A new optimizer using particle swarm theory. In MHS'95. Proceedings of the Sixth International Symposium on Micro Machine and Human Science (pp. 39-43). Ieee.</p>\n</li>\n<li>\n<p><strong>PIO - Pigeon-Inspired Optimization</strong> . Duan, H., &amp; Qiao, P. (2014). Pigeon-inspired optimization: a new swarm intelligence optimizer for air robot path planning. International journal of intelligent computing and cybernetics.</p>\n</li>\n<li>\n<p><strong>PFA - Pathfinder Algorithm</strong> . Yapici, H., &amp; Cetinkaya, N. (2019). A new meta-heuristic optimizer: Pathfinder algorithm. Applied Soft Computing, 78, 545-568.</p>\n</li>\n</ul>\n<h3>Q</h3>\n<ul>\n<li><strong>QSA - Queuing Search Algorithm</strong> . Zhang, J., Xiao, M., Gao, L., &amp; Pan, Q. (2018). Queuing search algorithm: A novel metaheuristic algorithm for solving engineering optimization problems. Applied Mathematical Modelling, 63, 464-490.</li>\n</ul>\n<h3>R</h3>\n<ul>\n<li><strong>RHO - Rhino Herd Optimization</strong> . Wang, G. G., Gao, X. Z., Zenger, K., &amp; Coelho, L. D. S. (2018, December). A novel metaheuristic algorithm inspired by rhino herd behavior. In Proceedings of The 9th EUROSIM Congress on Modelling and Simulation, EUROSIM 2016, The 57th SIMS Conference on Simulation and Modelling SIMS 2016 (No. 142, pp. 1026-1033). Link\u00f6ping University Electronic Press.</li>\n</ul>\n<h3>S</h3>\n<ul>\n<li>\n<p><strong>SSO - Social Spider Optimization</strong> . Cuevas, E., Cienfuegos, M., Zald\u00edVar, D., &amp; P\u00e9rez-Cisneros, M. (2013). A swarm optimization algorithm inspired in the behavior of the social-spider. Expert Systems with Applications, 40(16), 6374-6384.</p>\n</li>\n<li>\n<p><strong>SSA - Social Spider Algorithm</strong> . James, J. Q., &amp; Li, V. O. (2015). A social spider algorithm for global optimization. Applied Soft Computing, 30, 614-627.</p>\n</li>\n<li>\n<p><strong>SCA - Sine Cosine Algorithm</strong> . Mirjalili, S. (2016). SCA: a sine cosine algorithm for solving optimization problems. Knowledge-Based Systems, 96, 120-133.</p>\n</li>\n<li>\n<p><strong>SRSR - Swarm Robotics Search And Rescue</strong> . Bakhshipour, M., Ghadi, M. J., &amp; Namdari, F. (2017). Swarm robotics search &amp; rescue: A novel artificial intelligence-inspired optimization approach. Applied Soft Computing, 57, 708-726.</p>\n</li>\n<li>\n<p><strong>SBO - Satin Bowerbird Optimizer</strong> . Moosavi, S. H. S., &amp; Bardsiri, V. K. (2017). Satin bowerbird optimizer: a new optimization algorithm to optimize ANFIS for software development effort estimation. Engineering Applications of Artificial Intelligence, 60, 1-15.</p>\n</li>\n<li>\n<p><strong>SFO - Sailfish Optimizer</strong> . Shadravan, S., Naji, H. R., &amp; Bardsiri, V. K. (2019). The Sailfish Optimizer: A novel nature-inspired metaheuristic algorithm for solving constrained engineering optimization problems. Engineering Applications of Artificial Intelligence, 80, 20-34.</p>\n</li>\n<li>\n<p><strong>SARO - Search And Rescue Optimization</strong> . Shabani, A., Asgarian, B., Gharebaghi, S. A., Salido, M. A., &amp; Giret, A. (2019). A New Optimization Algorithm Based on Search and Rescue Operations. Mathematical Problems in Engineering, 2019.</p>\n</li>\n<li>\n<p><strong>SSDO - Social Ski-Driver Optimization</strong> . Tharwat, A., &amp; Gabel, T. (2019). Parameters optimization of support vector machines for imbalanced data using social ski driver algorithm. Neural Computing and Applications, 1-14.</p>\n</li>\n<li>\n<p><strong>SLO - Sea Lion Optimization</strong> . Masadeh, R., Mahafzah, B. A., &amp; Sharieh, A. (2019). Sea Lion Optimization Algorithm. Sea, 10(5).</p>\n</li>\n</ul>\n<h3>T</h3>\n<ul>\n<li>\n<p><strong>TLO - Teaching Learning Optimization</strong> . Rao, R. V., Savsani, V. J., &amp; Vakharia, D. P. (2011). Teaching\u2013learning-based optimization: a novel method for constrained mechanical design optimization problems. Computer-Aided Design, 43(3), 303-315.</p>\n</li>\n<li>\n<p><strong>TWO - Tug of War Optimization</strong> . Kaveh, A., &amp; Zolghadr, A. (2016). A novel meta-heuristic algorithm: tug of war optimization. Iran University of Science &amp; Technology, 6(4), 469-492.</p>\n</li>\n</ul>\n<h3>U</h3>\n<h3>V</h3>\n<ul>\n<li><strong>VCS - Virus Colony Search</strong> . Li, M. D., Zhao, H., Weng, X. W., &amp; Han, T. (2016). A novel nature-inspired\nalgorithm for optimization: Virus colony search. Advances in Engineering Software, 92, 65-88.</li>\n</ul>\n<h3>W</h3>\n<ul>\n<li>\n<p><strong>WOA - Whale Optimization Algorithm</strong> . Mirjalili, S., &amp; Lewis, A. (2016). The whale optimization algorithm. Advances in engineering software, 95, 51-67.</p>\n</li>\n<li>\n<p><strong>WHO - Wildebeest Herd Optimization</strong> . Amali, D., &amp; Dinakaran, M. (2019). Wildebeest herd optimization: A new global optimization algorithm inspired by wildebeest herding behaviour. Journal of Intelligent &amp; Fuzzy Systems, (Preprint), 1-14.</p>\n</li>\n<li>\n<p><strong>WDO - Wind Driven Optimization</strong> . Bayraktar, Z., Komurcu, M., &amp; Werner, D. H. (2010, July). Wind Driven Optimization (WDO): A novel nature-inspired optimization algorithm and its application to electromagnetics. In 2010 IEEE antennas and propagation society international symposium (pp. 1-4). IEEE.</p>\n</li>\n</ul>\n<h3>X</h3>\n<h3>Y</h3>\n<h3>Z</h3>\n<h1>Not done - Not working yet</h1>\n<ul>\n<li><strong>Artificial Algae Algorithm</strong> . Uymaz, S. A., Tezel, G., &amp; Yel, E. (2015). Artificial algae algorithm (AAA) for\nnonlinear global optimization. Applied Soft Computing, 31, 153-171.</li>\n</ul>\n\n          </div>"}, "last_serial": 7105583, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "33aba3b7833cc1e369107ce80024124a", "sha256": "0b144011826c815291853543bbab46cee55fd1c4b4df94c134e65ec3ba2733f2"}, "downloads": -1, "filename": "mealpy-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "33aba3b7833cc1e369107ce80024124a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8168, "upload_time": "2020-03-16T10:19:31", "upload_time_iso_8601": "2020-03-16T10:19:31.998801Z", "url": "https://files.pythonhosted.org/packages/9c/08/05b4468ae794dfa99dabf50955d9e34ba8846505038227c240def3258f3a/mealpy-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e856e9eb3b2bb38fa8ecc23c7f0e196", "sha256": "0836f30836f841f0e5c2b44b8501f627ff74d9382695e84ed31f7b6075e25839"}, "downloads": -1, "filename": "mealpy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7e856e9eb3b2bb38fa8ecc23c7f0e196", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8706, "upload_time": "2020-03-16T10:19:34", "upload_time_iso_8601": "2020-03-16T10:19:34.705766Z", "url": "https://files.pythonhosted.org/packages/2c/07/811b146c0d5251a9482eb6dbff7e0c0cad8bc11228f83813c073f1113940/mealpy-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6dbec7af56775718b6311412044280c6", "sha256": "26ed94977e3de6e60f5fa53750847659ad07ca88ced00aad63c208840912e555"}, "downloads": -1, "filename": "mealpy-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6dbec7af56775718b6311412044280c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8186, "upload_time": "2020-03-17T02:46:39", "upload_time_iso_8601": "2020-03-17T02:46:39.115793Z", "url": "https://files.pythonhosted.org/packages/84/0a/505744c374aa944e293a6535d60c9b769afa56be2fab769ef23a31db042b/mealpy-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7db5d44aee321a848698f452eb708c02", "sha256": "e7ff3cd790665fd3c01732b5c2fe388bf41c884959b148edd79eb96a0f70a4a6"}, "downloads": -1, "filename": "mealpy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7db5d44aee321a848698f452eb708c02", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10157, "upload_time": "2020-03-17T02:46:40", "upload_time_iso_8601": "2020-03-17T02:46:40.534783Z", "url": "https://files.pythonhosted.org/packages/f3/4d/9901b1e3a7590f4680e117ea1314f5cd132afa85aa7a162736f5eb109ebc/mealpy-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2a40854b8b36d9b602c540661a06c63d", "sha256": "d9862ea6cd26e031b8deadc00265b6be0fb973d93513ddd40f20135478f462bb"}, "downloads": -1, "filename": "mealpy-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2a40854b8b36d9b602c540661a06c63d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17881, "upload_time": "2020-03-17T04:23:57", "upload_time_iso_8601": "2020-03-17T04:23:57.585881Z", "url": "https://files.pythonhosted.org/packages/95/01/acd86af0b8ad3134a87d7b63f7f787f08d6296ccf80595dc859e5245522d/mealpy-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "842a7afba410b3af23fa57751401dcc9", "sha256": "4449dd1180bec5cd335fb22a4d869ad5c7aa61f414245d64248dde97a86c1614"}, "downloads": -1, "filename": "mealpy-0.2.0.tar.gz", "has_sig": false, "md5_digest": "842a7afba410b3af23fa57751401dcc9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16388, "upload_time": "2020-03-17T04:23:59", "upload_time_iso_8601": "2020-03-17T04:23:59.088064Z", "url": "https://files.pythonhosted.org/packages/da/f5/93f40440ce88c8084a3d6ddda7017d8c0163c9c39503adb6031d6404531e/mealpy-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "210ae2f9616558a497a6336bf878312f", "sha256": "ddcf3675de22b29d45832877527a16ef352024c9fea8ec546fbf464b77a0389a"}, "downloads": -1, "filename": "mealpy-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "210ae2f9616558a497a6336bf878312f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32812, "upload_time": "2020-03-17T07:45:03", "upload_time_iso_8601": "2020-03-17T07:45:03.692262Z", "url": "https://files.pythonhosted.org/packages/73/2d/c2cf27662041d2a0cecda83b99b20ac96a1e9c1c1cedbff77b2b09858506/mealpy-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb6dce192f92250fc86c6b97f9e1f077", "sha256": "3ea360ed6be1f2296f033bd3b7b571b946679a1871c4df47d958d9097f1da1b5"}, "downloads": -1, "filename": "mealpy-0.2.1.tar.gz", "has_sig": false, "md5_digest": "eb6dce192f92250fc86c6b97f9e1f077", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 26242, "upload_time": "2020-03-17T07:45:05", "upload_time_iso_8601": "2020-03-17T07:45:05.071107Z", "url": "https://files.pythonhosted.org/packages/b5/65/19e2e1ea261f2f2db5fe5ebfa9c611fe123a785617eb5e031ff7a8026172/mealpy-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "d9169911ca8172ceab04df3374162af6", "sha256": "7190a1991cc5da6ac7981a7defbea8c70ce638ce8178c44256a14429890e4556"}, "downloads": -1, "filename": "mealpy-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d9169911ca8172ceab04df3374162af6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 56467, "upload_time": "2020-03-17T09:58:11", "upload_time_iso_8601": "2020-03-17T09:58:11.918538Z", "url": "https://files.pythonhosted.org/packages/6b/32/7eca541c5aeb7c1bc542fea74447f1a4025d2ee2adeea189f118a1746b82/mealpy-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b01c7384141261de576eae372f90621d", "sha256": "7f6f3646876c436e2d36df2217cbebdb87d1fd1f08d8edfa661ffa597fd71235"}, "downloads": -1, "filename": "mealpy-0.2.2.tar.gz", "has_sig": false, "md5_digest": "b01c7384141261de576eae372f90621d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 40305, "upload_time": "2020-03-17T09:58:13", "upload_time_iso_8601": "2020-03-17T09:58:13.534962Z", "url": "https://files.pythonhosted.org/packages/68/21/3ab6bd9b3d87617f87c6da1fc797e734415533dbcf6488145eca56b2a219/mealpy-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "38da8d158b01adc3ac1e95001b015034", "sha256": "d60ae9b3d4579dc377aed4db88ebef1ce116e42629afdd70471142a88e3d953e"}, "downloads": -1, "filename": "mealpy-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "38da8d158b01adc3ac1e95001b015034", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 64600, "upload_time": "2020-03-17T17:06:49", "upload_time_iso_8601": "2020-03-17T17:06:49.892689Z", "url": "https://files.pythonhosted.org/packages/4f/19/5af2c9a97d5610b4c28ea8c4aab49180c6123ff1294de1ca8e703a68113d/mealpy-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "573ec37b44c9935e8321b155048df4b4", "sha256": "86c88e2fe1ca5afb7e776824d03b73abec425f257301149503956da08e2861c4"}, "downloads": -1, "filename": "mealpy-0.3.0.tar.gz", "has_sig": false, "md5_digest": "573ec37b44c9935e8321b155048df4b4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 45360, "upload_time": "2020-03-17T17:06:51", "upload_time_iso_8601": "2020-03-17T17:06:51.210788Z", "url": "https://files.pythonhosted.org/packages/7f/b2/8f65fdd47d93ba7b5c4904402bab9136b27f0511ef9b93f803702a521b5c/mealpy-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "8bdde4e6a693bb2230a3002ce18de128", "sha256": "6dc3d07b521e792a5e7ea02cc94a38b17535dff015cc9aaaf7dbb837a2b9018f"}, "downloads": -1, "filename": "mealpy-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8bdde4e6a693bb2230a3002ce18de128", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 73176, "upload_time": "2020-03-18T01:49:12", "upload_time_iso_8601": "2020-03-18T01:49:12.095798Z", "url": "https://files.pythonhosted.org/packages/77/c2/cb67e6cbd2e01e74c62230342b6e64d605fe78701867d1aad427a1ea9fbc/mealpy-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3ddc549ad4dd11c7096777c161457a6", "sha256": "9a5ca134880ac5218f3a35a713ad33cc318570bda5e8144e36cc9f4066f6a87a"}, "downloads": -1, "filename": "mealpy-0.3.1.tar.gz", "has_sig": false, "md5_digest": "c3ddc549ad4dd11c7096777c161457a6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 51067, "upload_time": "2020-03-18T01:49:13", "upload_time_iso_8601": "2020-03-18T01:49:13.432718Z", "url": "https://files.pythonhosted.org/packages/12/71/039db50912241512a474391898bfb9690631f251cc8885b15065b52dec80/mealpy-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "90908fca8106f099644403f9ba2ba795", "sha256": "a3419ed8387aee9dc00a60ad582058463bc3038e062150c14538d22321e80e9d"}, "downloads": -1, "filename": "mealpy-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "90908fca8106f099644403f9ba2ba795", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 77913, "upload_time": "2020-03-18T04:13:17", "upload_time_iso_8601": "2020-03-18T04:13:17.817430Z", "url": "https://files.pythonhosted.org/packages/d1/c7/2e80beac58f6ed4704b208c61b2c16388268a9a385024f9f4f0ff181f399/mealpy-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe6561c37d56fe3ce1d7a9eaf18245f8", "sha256": "4882c5b2832170a42cef3fa27300c097b593af803ed30c19acbbaa5ba3e28afb"}, "downloads": -1, "filename": "mealpy-0.4.0.tar.gz", "has_sig": false, "md5_digest": "fe6561c37d56fe3ce1d7a9eaf18245f8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 54996, "upload_time": "2020-03-18T04:13:19", "upload_time_iso_8601": "2020-03-18T04:13:19.589474Z", "url": "https://files.pythonhosted.org/packages/20/3c/4b4d19a65ef857972d9e546b1916edff8767ff31fe1f62330f3a3e8fa262/mealpy-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "fa542299d6e9dff4c59c208cf6fc6da4", "sha256": "4ff18d16951a47e6dfec67b34400ded4583e98e7e3a0c2fc79f85a4de565b3bf"}, "downloads": -1, "filename": "mealpy-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fa542299d6e9dff4c59c208cf6fc6da4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 82291, "upload_time": "2020-03-18T04:29:28", "upload_time_iso_8601": "2020-03-18T04:29:28.201723Z", "url": "https://files.pythonhosted.org/packages/4b/b0/30a610c64708f72ef3904ca1de20dd8effc80eeebd5b503864396c49b224/mealpy-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad3b5ba9150f3208f703e13d9bca486f", "sha256": "b9ac57dccb2a3d6445ad84071dd5fc9dfa518771223f3b492e7ff7d5412a32c6"}, "downloads": -1, "filename": "mealpy-0.4.1.tar.gz", "has_sig": false, "md5_digest": "ad3b5ba9150f3208f703e13d9bca486f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 56848, "upload_time": "2020-03-18T04:29:29", "upload_time_iso_8601": "2020-03-18T04:29:29.888511Z", "url": "https://files.pythonhosted.org/packages/1f/12/fbe57495a76e052382bd83e62844ff624a00a2768178f7a26ec2db6f6930/mealpy-0.4.1.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "09aee65a1655d087975dd5c52cf57081", "sha256": "4cb1c045ef2080f1d97782450606ab70a32d014cfe4d046b9444880b03059e94"}, "downloads": -1, "filename": "mealpy-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "09aee65a1655d087975dd5c52cf57081", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 85509, "upload_time": "2020-03-18T05:38:47", "upload_time_iso_8601": "2020-03-18T05:38:47.804222Z", "url": "https://files.pythonhosted.org/packages/8e/bc/0e96cec19b5a4cc8bf27233a15d21b983d8fb7ad74a4d801ca1255ac52bf/mealpy-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e579eed63a3b4c08dfcc3496406f0a0", "sha256": "b28f757d841e39615cac16e71c136347ebe8960014a7f9ae70bb42b085f67ab6"}, "downloads": -1, "filename": "mealpy-0.5.0.tar.gz", "has_sig": false, "md5_digest": "5e579eed63a3b4c08dfcc3496406f0a0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 58491, "upload_time": "2020-03-18T05:38:49", "upload_time_iso_8601": "2020-03-18T05:38:49.590004Z", "url": "https://files.pythonhosted.org/packages/02/44/c937d6a61997582d7cde2969c9bc54e40909f2f69ad7fbc07d249ba90c4a/mealpy-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "bacfdfe7c08412d78a9c8e071857553f", "sha256": "a02839c31e36690662015eb342edf1c43986d8011efb6a4277e72c22e1697b79"}, "downloads": -1, "filename": "mealpy-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bacfdfe7c08412d78a9c8e071857553f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 90762, "upload_time": "2020-03-18T06:08:59", "upload_time_iso_8601": "2020-03-18T06:08:59.097575Z", "url": "https://files.pythonhosted.org/packages/49/c1/d71775a5bd6ef0a1fe4e45770f0485c7788ee5c6800023b539fd907d305a/mealpy-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2445730974c844a7dd364ea5ac07168b", "sha256": "a4d157c4785e66339dfb060c47dce62e5258555980947d0063efeb6a14d9e6b7"}, "downloads": -1, "filename": "mealpy-0.5.1.tar.gz", "has_sig": false, "md5_digest": "2445730974c844a7dd364ea5ac07168b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 61531, "upload_time": "2020-03-18T06:09:00", "upload_time_iso_8601": "2020-03-18T06:09:00.608523Z", "url": "https://files.pythonhosted.org/packages/69/d8/280957febb20b7bd17b0bd3df81069a3494113cd96b638e18a8b096375d8/mealpy-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "cd8eb0e61e9032c64ef9ecab2843ea8f", "sha256": "aac32283f8bf0f8ae793dff698ca32265a4832cf9e8606c54442e01742208228"}, "downloads": -1, "filename": "mealpy-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cd8eb0e61e9032c64ef9ecab2843ea8f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 94504, "upload_time": "2020-03-18T10:00:37", "upload_time_iso_8601": "2020-03-18T10:00:37.259613Z", "url": "https://files.pythonhosted.org/packages/c0/ce/c08832a3a6c34f720e09a43be687806ae9a00e3871ae022c09135a4cb5ba/mealpy-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "96abce9e28299f3b308a94184ea32446", "sha256": "fb0c26d9db99a46e41c9b694bcc871adeae36b5ff486f535644e571d23607ac4"}, "downloads": -1, "filename": "mealpy-0.6.0.tar.gz", "has_sig": false, "md5_digest": "96abce9e28299f3b308a94184ea32446", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 63591, "upload_time": "2020-03-18T10:00:39", "upload_time_iso_8601": "2020-03-18T10:00:39.074102Z", "url": "https://files.pythonhosted.org/packages/fd/f9/9b1970cbfcbfaa286509059bd43a503af9f619a7a238ddd925788ed361f0/mealpy-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "0949271bb3a56fc2eba64029d29375ab", "sha256": "8f3fdcc9160ab5cbf5fa1c1ceae15432cbe5da74f2aabcfac749a18aa2404b02"}, "downloads": -1, "filename": "mealpy-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0949271bb3a56fc2eba64029d29375ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 98247, "upload_time": "2020-03-18T11:09:08", "upload_time_iso_8601": "2020-03-18T11:09:08.851265Z", "url": "https://files.pythonhosted.org/packages/e3/64/b26b728274342d39d21f1080fb087a09b4e5d00ab10c6cc163b28501848c/mealpy-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35196ba90c069370d8a2c60b2de20e5d", "sha256": "776cc0bf91a26de30bc70d2e5b253fbdc9ab5ad20c142e03e7f30966bc3cb6de"}, "downloads": -1, "filename": "mealpy-0.7.0.tar.gz", "has_sig": false, "md5_digest": "35196ba90c069370d8a2c60b2de20e5d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 65566, "upload_time": "2020-03-18T11:09:10", "upload_time_iso_8601": "2020-03-18T11:09:10.652366Z", "url": "https://files.pythonhosted.org/packages/fd/3a/bcee935cda0a4d6f14f7f32a1ac7d01920a137ff283b0e8fcc1699c5d4a3/mealpy-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "6d036b059e0d45dae35fd384b9036a2c", "sha256": "78bb2eef012c83e0fb4797b7cab7488e23c944cb62caa39fc46bfef4f0bb3812"}, "downloads": -1, "filename": "mealpy-0.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6d036b059e0d45dae35fd384b9036a2c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 103607, "upload_time": "2020-03-26T04:07:45", "upload_time_iso_8601": "2020-03-26T04:07:45.196479Z", "url": "https://files.pythonhosted.org/packages/11/fc/9542cd4826605da5401e24f89bf072d8793b5370c73526a15df3a8614257/mealpy-0.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fef29ab1ece671a588b57c865a829231", "sha256": "eaf6a3e1c24936e4be517dcc13853f4c647e4d908f76a8b5e10b07f03e3922fa"}, "downloads": -1, "filename": "mealpy-0.7.1.tar.gz", "has_sig": false, "md5_digest": "fef29ab1ece671a588b57c865a829231", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 73546, "upload_time": "2020-03-26T04:07:46", "upload_time_iso_8601": "2020-03-26T04:07:46.949491Z", "url": "https://files.pythonhosted.org/packages/ee/6c/4c5fac5cf55dcfba0aa4abdd6cffac20a03f7e30ab3d559282fb123493ab/mealpy-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "3846fa3c993f7003871c272ab28c6f32", "sha256": "4164889853a8dae167f46feddc8c1ee6adae591e3e88015dc2054cbcef8034c1"}, "downloads": -1, "filename": "mealpy-0.7.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3846fa3c993f7003871c272ab28c6f32", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 103635, "upload_time": "2020-03-27T09:11:08", "upload_time_iso_8601": "2020-03-27T09:11:08.497998Z", "url": "https://files.pythonhosted.org/packages/68/54/7e4b9d3152a632c2fb9c45e82453b653ee9a12dcaf74051e246acf960a01/mealpy-0.7.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b59a436748ab940534790d96b94b3829", "sha256": "6c307a40b48d6fec676f710160b8b4bc9125009fda91e2d0e99ff1f4a0a877fc"}, "downloads": -1, "filename": "mealpy-0.7.2.tar.gz", "has_sig": false, "md5_digest": "b59a436748ab940534790d96b94b3829", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 73601, "upload_time": "2020-03-27T09:11:10", "upload_time_iso_8601": "2020-03-27T09:11:10.501381Z", "url": "https://files.pythonhosted.org/packages/fa/21/cc11b39ba0397f52450c27ffddd5787e0108184748143d8c82ba1165212b/mealpy-0.7.2.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "fddc9ac30b979f1b3937e12e6cd14420", "sha256": "ff3ce4f0d6e3f17c08087626b21a29e5a5804a31ae8419c7edc9435981609843"}, "downloads": -1, "filename": "mealpy-0.7.3-py3-none-any.whl", "has_sig": false, "md5_digest": "fddc9ac30b979f1b3937e12e6cd14420", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 103350, "upload_time": "2020-03-30T06:11:49", "upload_time_iso_8601": "2020-03-30T06:11:49.199663Z", "url": "https://files.pythonhosted.org/packages/6d/d1/8ca4d2a0b8c7af9e72ef92caf243ccfb62d43444591909325cde7c358781/mealpy-0.7.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7da15775525c7d092938b2fb66f0f8c5", "sha256": "8e127525caf112e24603cc7ff8d1a193d6a64019601ce728bda608ffe13a6f7b"}, "downloads": -1, "filename": "mealpy-0.7.3.tar.gz", "has_sig": false, "md5_digest": "7da15775525c7d092938b2fb66f0f8c5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 74850, "upload_time": "2020-03-30T06:11:50", "upload_time_iso_8601": "2020-03-30T06:11:50.958788Z", "url": "https://files.pythonhosted.org/packages/a3/e9/e0d0a95888e824f8300feacf3830840530d20e11c31ffcd16c88e72ec8ce/mealpy-0.7.3.tar.gz", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "02a3625bec71f116aac763841f242b62", "sha256": "caa7be4b26830c2abf8826bd71c618fd586208d417ca0b0ee042bd92118f5ddd"}, "downloads": -1, "filename": "mealpy-0.7.4-py3-none-any.whl", "has_sig": false, "md5_digest": "02a3625bec71f116aac763841f242b62", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 106556, "upload_time": "2020-04-06T17:38:24", "upload_time_iso_8601": "2020-04-06T17:38:24.919790Z", "url": "https://files.pythonhosted.org/packages/24/63/b8b67f30b402358e8e168295c969fb93f3a1d9819f5f860644839a784bde/mealpy-0.7.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dedf8c44f1ded307fcad22075f80ef89", "sha256": "d0788ea34d4a69eee9e78426a997fe94629b6611de3b7075d7a6255d81dd6ad9"}, "downloads": -1, "filename": "mealpy-0.7.4.tar.gz", "has_sig": false, "md5_digest": "dedf8c44f1ded307fcad22075f80ef89", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 77926, "upload_time": "2020-04-06T17:38:26", "upload_time_iso_8601": "2020-04-06T17:38:26.874964Z", "url": "https://files.pythonhosted.org/packages/14/1d/22359009371465ec8e5c05320c8253af704c60765177b8ec80dc21256ef1/mealpy-0.7.4.tar.gz", "yanked": false}], "0.7.5": [{"comment_text": "", "digests": {"md5": "74a4c51c54f2ead341848cf4555131b8", "sha256": "e9d8c535ddd63e703c51e501aabb78421fa65e5c022284c86c49422bf8e305c4"}, "downloads": -1, "filename": "mealpy-0.7.5-py3-none-any.whl", "has_sig": false, "md5_digest": "74a4c51c54f2ead341848cf4555131b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 108831, "upload_time": "2020-04-07T02:55:14", "upload_time_iso_8601": "2020-04-07T02:55:14.654321Z", "url": "https://files.pythonhosted.org/packages/14/06/d6580598a07d3a7f049a6abd3a458b4b045b209141c17301a36fb5be932f/mealpy-0.7.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "086d89870e4a599495e50b214e5e5617", "sha256": "6134d8de5241d99988c19125319c5be264c70bdf4bfb432eba7e7073a50081b8"}, "downloads": -1, "filename": "mealpy-0.7.5.tar.gz", "has_sig": false, "md5_digest": "086d89870e4a599495e50b214e5e5617", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 79769, "upload_time": "2020-04-07T02:55:16", "upload_time_iso_8601": "2020-04-07T02:55:16.560209Z", "url": "https://files.pythonhosted.org/packages/04/1d/2db2039c550581681ac3aa571eb997f77fc085a35557aba1cab403541373/mealpy-0.7.5.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "8d5c01b006a7137b27ccb3f9f009a293", "sha256": "77faa3c14ce34c02d7ed7d815651ae095d6090ebec332ce8b5f97b2dc7f45df8"}, "downloads": -1, "filename": "mealpy-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8d5c01b006a7137b27ccb3f9f009a293", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 121166, "upload_time": "2020-04-08T11:40:05", "upload_time_iso_8601": "2020-04-08T11:40:05.170183Z", "url": "https://files.pythonhosted.org/packages/81/75/2c08532d5be60978f8e202410d434a648c342149ea5dc8257b2ac961ffd4/mealpy-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da4b43de6fd78551c36b26d7883cb507", "sha256": "5b574faad821aa92696fd21640c8932861e46ee4c07d1232a922204991cd4d4e"}, "downloads": -1, "filename": "mealpy-0.8.0.tar.gz", "has_sig": false, "md5_digest": "da4b43de6fd78551c36b26d7883cb507", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 88329, "upload_time": "2020-04-08T11:40:08", "upload_time_iso_8601": "2020-04-08T11:40:08.400591Z", "url": "https://files.pythonhosted.org/packages/93/0a/0d513f916f1589854a9f1d107ff32fdb6658d90307ed33c89acc902b81aa/mealpy-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "59c8f11608c6e652c2f95e5c1faaea1c", "sha256": "b37b0dbfcf5237b983e9e24fca6e1ebb0341002542181e2423109b4e1970ef30"}, "downloads": -1, "filename": "mealpy-0.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "59c8f11608c6e652c2f95e5c1faaea1c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 126602, "upload_time": "2020-04-11T08:26:47", "upload_time_iso_8601": "2020-04-11T08:26:47.779810Z", "url": "https://files.pythonhosted.org/packages/05/d5/590eb6754d0923a79a8cfc313c6830b7c2444fbac18938958f23fc09128d/mealpy-0.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "306f674271e6ec991e4c7275e5cdb157", "sha256": "05b1425d813fb8f2d295e41b29e2eb1048e38eba288f6d735afff5eec8ac109f"}, "downloads": -1, "filename": "mealpy-0.8.1.tar.gz", "has_sig": false, "md5_digest": "306f674271e6ec991e4c7275e5cdb157", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 93140, "upload_time": "2020-04-11T08:26:49", "upload_time_iso_8601": "2020-04-11T08:26:49.606712Z", "url": "https://files.pythonhosted.org/packages/4f/d6/7ee4872ed9bb9f2ef63285a01431c4a2380f1d365b48ac37606273003a87/mealpy-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "c25396c27754e76fb88e692d6e02518b", "sha256": "515ab6ce7b3c175997ad754ddab9a92e075b714aacdd6a7db480370a338d23fb"}, "downloads": -1, "filename": "mealpy-0.8.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c25396c27754e76fb88e692d6e02518b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 130199, "upload_time": "2020-04-19T16:59:33", "upload_time_iso_8601": "2020-04-19T16:59:33.757072Z", "url": "https://files.pythonhosted.org/packages/fd/13/3b8472610f54b4e37cb37d2358b626f69b27893ae13811e680fb9b8a2f60/mealpy-0.8.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb0b01b4badb187088b136618ad3c6e0", "sha256": "2493710f908caa65214fb2c1387db076d53d788f09f322b8e46b9e400492f86e"}, "downloads": -1, "filename": "mealpy-0.8.2.tar.gz", "has_sig": false, "md5_digest": "cb0b01b4badb187088b136618ad3c6e0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 97727, "upload_time": "2020-04-19T16:59:35", "upload_time_iso_8601": "2020-04-19T16:59:35.572382Z", "url": "https://files.pythonhosted.org/packages/ac/ff/b70b580a1e6d9cbaab60949fcdc9c5595e8aa5c217804ef12df53b2b35ac/mealpy-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "441d072a1e65c9449c662f07f1ddf9e1", "sha256": "c89b0566ef18fa89bda1b9e159a537d457ed2eca935972271e8dad0c674c6ead"}, "downloads": -1, "filename": "mealpy-0.8.3-py3-none-any.whl", "has_sig": false, "md5_digest": "441d072a1e65c9449c662f07f1ddf9e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 133407, "upload_time": "2020-04-26T15:53:35", "upload_time_iso_8601": "2020-04-26T15:53:35.333151Z", "url": "https://files.pythonhosted.org/packages/30/b7/4e749ca1507951e455e6ece0ec5217432a681e5ad33eaffd9e676c2f32b7/mealpy-0.8.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ea70dcfa8b70dbf0d612f9f4d27d324", "sha256": "b56c359b6a7f8386d2539ef80ff638feb13fd1eafae2b4c5e18e370b04d12d78"}, "downloads": -1, "filename": "mealpy-0.8.3.tar.gz", "has_sig": false, "md5_digest": "1ea70dcfa8b70dbf0d612f9f4d27d324", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 101180, "upload_time": "2020-04-26T15:53:37", "upload_time_iso_8601": "2020-04-26T15:53:37.318920Z", "url": "https://files.pythonhosted.org/packages/b9/0c/5b89235175ae054ff96c6752668a5f01d5fa159fda1b1e1b403e6dc65819/mealpy-0.8.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "441d072a1e65c9449c662f07f1ddf9e1", "sha256": "c89b0566ef18fa89bda1b9e159a537d457ed2eca935972271e8dad0c674c6ead"}, "downloads": -1, "filename": "mealpy-0.8.3-py3-none-any.whl", "has_sig": false, "md5_digest": "441d072a1e65c9449c662f07f1ddf9e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 133407, "upload_time": "2020-04-26T15:53:35", "upload_time_iso_8601": "2020-04-26T15:53:35.333151Z", "url": "https://files.pythonhosted.org/packages/30/b7/4e749ca1507951e455e6ece0ec5217432a681e5ad33eaffd9e676c2f32b7/mealpy-0.8.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ea70dcfa8b70dbf0d612f9f4d27d324", "sha256": "b56c359b6a7f8386d2539ef80ff638feb13fd1eafae2b4c5e18e370b04d12d78"}, "downloads": -1, "filename": "mealpy-0.8.3.tar.gz", "has_sig": false, "md5_digest": "1ea70dcfa8b70dbf0d612f9f4d27d324", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 101180, "upload_time": "2020-04-26T15:53:37", "upload_time_iso_8601": "2020-04-26T15:53:37.318920Z", "url": "https://files.pythonhosted.org/packages/b9/0c/5b89235175ae054ff96c6752668a5f01d5fa159fda1b1e1b403e6dc65819/mealpy-0.8.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:43 2020"}