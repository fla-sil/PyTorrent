{"info": {"author": "Nicholas de Jong", "author_email": "contact@nicholasdejong.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Env Alias\n\n[![PyPi](https://img.shields.io/pypi/v/env-alias.svg)](https://pypi.python.org/pypi/env-alias/)\n[![Python Versions](https://img.shields.io/pypi/pyversions/env-alias.svg)](https://github.com/ndejong/env-alias/)\n[![Build Status](https://api.travis-ci.org/ndejong/env-alias.svg?branch=master)](https://travis-ci.org/ndejong/env-alias/)\n[![License](https://img.shields.io/github/license/ndejong/env-alias.svg)](https://github.com/ndejong/env-alias)\n\nHelper utility to create shell alias commands that easily set collections of environment variables often with secret\nvalues from a variety of data-sources and data-formats.\n\nTypically this tool is invoked via an entry in `.bash_aliases` with an entry in the form\n```bash\neval $(env-alias my-alias-name ~/path-to/my-alias-name-config-file.yml)\n```\n\nWhere this  example would establish a shell alias command for the alias `my-alias-name` that then invokes the\n`env-alias-generator` with configuration from `~/path-to/my-alias-name-config-file.yml`\n\nThis provides an appropriate mechanism to manage large sets of environment variables with values from encrypted or \notherwise secured data-sources through one simple alias command using a configuration file that can be safely committed \nto source control without exposing secret values.\n\n## Features\n* Data sources: direct-setting, exec-stdout, local-file, http-remote\n* Source file formats: `text`, `ini`, `json`, `yaml`\n* Select using line-numbers, jq-style or xpath-style selections\n* Reference other env values within configuration\n* Content-Type detection for http-remote data-sources to automatically assign appropriate parser\n* Exec helper commands without env-variable assignment\n* Debug mode output to STDERR\n\n## Install\n#### via PyPi\n```bash\npip3 install env-alias\n```\n\n#### via Source\n```bash\ngit clone https://github.com/ndejong/env-alias\ncd env-alias\npython3 -m venv venv\nsource venv/bin/activate\npip3 install -r requirements.txt\npython3 setup.py clean\npython3 setup.py test\npython3 setup.py install\n```\n\n## Project\n* [github.com/ndejong/env-alias](https://github.com/ndejong/env-alias)\n\n## Examples\nA range of [`examples`](https://github.com/ndejong/env-alias/blob/master/examples/) are provided that demonstrate real\nworld setups to configure env-variables for using AWS, Google, Terraform, Ansible etc.  Additionally the \n[`env-alias-examples.yml`](https://github.com/ndejong/env-alias/blob/master/examples/env-alias-examples.yml) attempts \nto iterate all possible configuration combinations, many of which are presented below.\n\n#### local_text_01\nAssign the env `local_text_01` to the value of the 1st line of text in `/tmp/textfile.txt`\n```yaml\nenv-alias:\n  local_text_01:\n    source: '/tmp/textfile.txt'\n```\n\n#### local_text_02\nAssign the env `local_text_02` to the value of the 2nd line of text in `/tmp/textfile.txt`\n```yaml\nenv-alias:\n  local_text_02:\n    source: '/tmp/textfile.txt'\n    selector: 2\n```\n\n#### local_text_03\nAssign the env `local_text_03` using the 1st line of text in the text file; text file format used as default file format\n```yaml\nenv-alias:\n  local_text_03:\n    source: '/tmp/textfile_without_extension'\n```\n\n#### local_text_04\nAssign the env `local_text_04_override_name` using the 1st line of text in the file and use a different variable name\n```yaml\nenv-alias:\n  local_text_04:\n    name: 'local_text_04_override_name'\n    source: '/tmp/textfile.txt'\n```\n\n#### local_text_05\nAssign the env `local_text_05` using the 1st line of text in the file specified by env variable `${some_env_with_a_filename}`\n```yaml\nenv-alias:\n  local_text_05:\n    source: 'env:some_env_with_a_filename'\n```\n\n#### local_text_06\nAssign the env `local_text_06` using the 1st line of text in the file and force the \"text\" content parser which is the default parser anyway\n```yaml\nenv-alias:\n  local_text_06:\n    source: '/tmp/textfile.txt'\n    parser: 'text'\n```\n\n#### local_ini_01\nAssign the env `local_ini_01` from the `[foo]` section under the `[bar]` option value; parser determined by filename extension\n```yaml\nenv-alias:\n  local_ini_01:\n    source: '/tmp/inifile.ini'\n    selector: 'foo.bar'\n```\n\n#### local_ini_02\nAssign the env `local_ini_02` from the `[foo]` section under the `[bar]` option value; parser manually set since it can not be determined via filename extension\n```yaml\nenv-alias:\n  local_ini_02:\n    source: '/tmp/file_without_ini_extension'\n    selector: 'foo.bar'\n    parser: 'ini'\n```\n\n#### local_json_01\nAssign the env `local_json_01` from the JSON content using an xpath-style path selector to the desired value\n```yaml\nenv-alias:\n  local_json_01:\n    source: '/tmp/jsonfile.json'\n    selector: 'foo.0.bar'\n```  \n\n#### local_json_02\nAssign the env `local_json_02` from the JSON content using a jq-style path selector to the desired value\n```yaml\nenv-alias:\n  local_json_02:\n    source: '/tmp/jsonfile.json'\n    selector: '.foo[1]bar'\n```\n\n#### local_json_03\nAssign the env `local_json_03` from the JSON content using an xpath-style path selector to the desired value; set the JSON parser\n```yaml\nenv-alias:\n  local_json_03:\n    source: '/tmp/file_without_json_extension'\n    selector: 'foo.0.bar'\n    parser: 'json'\n```\n\n#### local_yaml_01\nassign the env `local_yaml_01` from the JSON content using an xpath-style path selector to the desired value; js-style is also possible here.\n```yaml\nenv-alias:\n  local_yaml_01:\n    source: '/tmp/yamlfile.yml'\n    selector: 'foo.0.bar'\n```\n\n#### local_yaml_02\nassign the env `local_yaml_02` from the YAML content using an xpath-style path selector to the desired value; set the YAML parser\n```yaml\nenv-alias:\n  local_yaml_02:\n    source: '/tmp/file_without_yaml_extension'\n    selector: 'foo.0.bar'\n    parser: 'yaml'\n```\n\n#### remote_text_01\nAssign the env `remote_text_01` from the 1st line of the remote TEXT content\n```yaml\nenv-alias:\n  remote_text_01:\n    source: 'http://textfiles.com/computers/144disk.txt'\n```\n\n#### remote_json_01\nAssign the env `remote_json_01` from remote JSON content using a jq-style selector\n```yaml\nenv-alias:\n  remote_json_01:\n    source: 'https://ip-ranges.amazonaws.com/ip-ranges.json'\n    selector: '.prefixes[2].ip_prefix'\n```\n\n#### remote_json_02\nAssign the env `remote_json_02` from remote JSON content using an xpath-style selector\n```yaml\nenv-alias:\n  remote_json_02:\n    source: 'https://ip-ranges.amazonaws.com/ip-ranges.json'\n    selector: 'prefixes.2.ip_prefix'\n```\n\n#### exec_01\nAssign the env `exec_01` from the 1st line of the STDOUT of an shell command\n```yaml\nenv-alias:\n  exec_01:\n    exec: 'head /dev/urandom | base64 -w0 | tr -d \"/\" | tr -d \"+\" | head -c20'\n```\n\n#### exec_02\nAssign the env `exec_02` from the 1st line of the STDOUT of an shell command\n```yaml\nenv-alias:\n  exec_02:\n    exec: 'curl -s https://ip-ranges.amazonaws.com/ip-ranges.json'\n    parser: 'json'\n    selector: '.prefixes[1].ip_prefix'\n```  \n\n#### exec_03\nRun the shell-command and do not assign it to any env value\n```yaml\nenv-alias:\n  exec_03:\n    exec: 'head /dev/urandom | base64 -w0'\n    selector: null\n```\n\n#### direct_01\nAssign env `direct_01` to value \"somevalue\"\n```yaml\nenv-alias:\n  direct_01:\n    value: 'somevalue'\n```\n\n#### direct_02\nUse an existing env value as input into this configuration; can be used in any env-alias option\n```yaml\nenv-alias:\n  direct_02:\n    value: 'env:HOME'\n```\n\n#### direct_03\nSet env set and override the variable name; can be used in any env-alias setting arrangement\n```yaml\nenv-alias:\n  direct_03:\n    name: 'direct_03_override_name'\n    value: 'env:HOME'\n```\n\n## Debug Output\nDebug output can be easily added to STDERR by adding an optional `-d` argument to `env-alias` as shown below\n\n```bash\neval $(env-alias my-alias-name -d ~/path-to/my-alias-name-config-file.yml)\n```\n\nThis this provides debug output similar to below\n\n```text\nusername@computer:~$ my-alias-name\n20191201Z072045 - DEBUG - env-alias v0.0.1\n20191201Z072045 - DEBUG -  export \"local_text_01\"=\"xxxxxxxxxxxxxxxx\"\n20191201Z072045 - DEBUG -  export \"local_text_02\"=\"xxxxxxxxxxxxxxxx\"\n...\n```\n\n\n****\n\n## Authors\n[Nicholas de Jong](https://nicholasdejong.com)\n\n## License\nBSD-2-Clause - see LICENSE file for full details.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ndejong/env-alias", "keywords": "env-alias,shell,env,alias,bash", "license": "BSD 2-Clause", "maintainer": "", "maintainer_email": "", "name": "env-alias", "package_url": "https://pypi.org/project/env-alias/", "platform": "", "project_url": "https://pypi.org/project/env-alias/", "project_urls": {"Homepage": "https://github.com/ndejong/env-alias"}, "release_url": "https://pypi.org/project/env-alias/0.1.6/", "requires_dist": ["pyyaml"], "requires_python": "", "summary": "Shell alias environment variable helper tool to load secret values and others.", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Env Alias</h1>\n<p><a href=\"https://pypi.python.org/pypi/env-alias/\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c32b261a7eecfb5a5246e24f2ff5fdb065607367/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f656e762d616c6961732e737667\"></a>\n<a href=\"https://github.com/ndejong/env-alias/\" rel=\"nofollow\"><img alt=\"Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb1ff11242e8640da32500a3a2b8cce6e9708b6a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f656e762d616c6961732e737667\"></a>\n<a href=\"https://travis-ci.org/ndejong/env-alias/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd6ec9cc8f1377f09a500a4a50878b047dccf905/68747470733a2f2f6170692e7472617669732d63692e6f72672f6e64656a6f6e672f656e762d616c6961732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/ndejong/env-alias\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/58cc769b3ebd5540553e541c010ab1b441bd74c1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6e64656a6f6e672f656e762d616c6961732e737667\"></a></p>\n<p>Helper utility to create shell alias commands that easily set collections of environment variables often with secret\nvalues from a variety of data-sources and data-formats.</p>\n<p>Typically this tool is invoked via an entry in <code>.bash_aliases</code> with an entry in the form</p>\n<pre><span class=\"nb\">eval</span> <span class=\"k\">$(</span>env-alias my-alias-name ~/path-to/my-alias-name-config-file.yml<span class=\"k\">)</span>\n</pre>\n<p>Where this  example would establish a shell alias command for the alias <code>my-alias-name</code> that then invokes the\n<code>env-alias-generator</code> with configuration from <code>~/path-to/my-alias-name-config-file.yml</code></p>\n<p>This provides an appropriate mechanism to manage large sets of environment variables with values from encrypted or\notherwise secured data-sources through one simple alias command using a configuration file that can be safely committed\nto source control without exposing secret values.</p>\n<h2>Features</h2>\n<ul>\n<li>Data sources: direct-setting, exec-stdout, local-file, http-remote</li>\n<li>Source file formats: <code>text</code>, <code>ini</code>, <code>json</code>, <code>yaml</code></li>\n<li>Select using line-numbers, jq-style or xpath-style selections</li>\n<li>Reference other env values within configuration</li>\n<li>Content-Type detection for http-remote data-sources to automatically assign appropriate parser</li>\n<li>Exec helper commands without env-variable assignment</li>\n<li>Debug mode output to STDERR</li>\n</ul>\n<h2>Install</h2>\n<h4>via PyPi</h4>\n<pre>pip3 install env-alias\n</pre>\n<h4>via Source</h4>\n<pre>git clone https://github.com/ndejong/env-alias\n<span class=\"nb\">cd</span> env-alias\npython3 -m venv venv\n<span class=\"nb\">source</span> venv/bin/activate\npip3 install -r requirements.txt\npython3 setup.py clean\npython3 setup.py <span class=\"nb\">test</span>\npython3 setup.py install\n</pre>\n<h2>Project</h2>\n<ul>\n<li><a href=\"https://github.com/ndejong/env-alias\" rel=\"nofollow\">github.com/ndejong/env-alias</a></li>\n</ul>\n<h2>Examples</h2>\n<p>A range of <a href=\"https://github.com/ndejong/env-alias/blob/master/examples/\" rel=\"nofollow\"><code>examples</code></a> are provided that demonstrate real\nworld setups to configure env-variables for using AWS, Google, Terraform, Ansible etc.  Additionally the\n<a href=\"https://github.com/ndejong/env-alias/blob/master/examples/env-alias-examples.yml\" rel=\"nofollow\"><code>env-alias-examples.yml</code></a> attempts\nto iterate all possible configuration combinations, many of which are presented below.</p>\n<h4>local_text_01</h4>\n<p>Assign the env <code>local_text_01</code> to the value of the 1st line of text in <code>/tmp/textfile.txt</code></p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">local_text_01</span><span class=\"p\">:</span>\n    <span class=\"nt\">source</span><span class=\"p\">:</span> <span class=\"s\">'/tmp/textfile.txt'</span>\n</pre>\n<h4>local_text_02</h4>\n<p>Assign the env <code>local_text_02</code> to the value of the 2nd line of text in <code>/tmp/textfile.txt</code></p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">local_text_02</span><span class=\"p\">:</span>\n    <span class=\"nt\">source</span><span class=\"p\">:</span> <span class=\"s\">'/tmp/textfile.txt'</span>\n    <span class=\"nt\">selector</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">2</span>\n</pre>\n<h4>local_text_03</h4>\n<p>Assign the env <code>local_text_03</code> using the 1st line of text in the text file; text file format used as default file format</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">local_text_03</span><span class=\"p\">:</span>\n    <span class=\"nt\">source</span><span class=\"p\">:</span> <span class=\"s\">'/tmp/textfile_without_extension'</span>\n</pre>\n<h4>local_text_04</h4>\n<p>Assign the env <code>local_text_04_override_name</code> using the 1st line of text in the file and use a different variable name</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">local_text_04</span><span class=\"p\">:</span>\n    <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"s\">'local_text_04_override_name'</span>\n    <span class=\"nt\">source</span><span class=\"p\">:</span> <span class=\"s\">'/tmp/textfile.txt'</span>\n</pre>\n<h4>local_text_05</h4>\n<p>Assign the env <code>local_text_05</code> using the 1st line of text in the file specified by env variable <code>${some_env_with_a_filename}</code></p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">local_text_05</span><span class=\"p\">:</span>\n    <span class=\"nt\">source</span><span class=\"p\">:</span> <span class=\"s\">'env:some_env_with_a_filename'</span>\n</pre>\n<h4>local_text_06</h4>\n<p>Assign the env <code>local_text_06</code> using the 1st line of text in the file and force the \"text\" content parser which is the default parser anyway</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">local_text_06</span><span class=\"p\">:</span>\n    <span class=\"nt\">source</span><span class=\"p\">:</span> <span class=\"s\">'/tmp/textfile.txt'</span>\n    <span class=\"nt\">parser</span><span class=\"p\">:</span> <span class=\"s\">'text'</span>\n</pre>\n<h4>local_ini_01</h4>\n<p>Assign the env <code>local_ini_01</code> from the <code>[foo]</code> section under the <code>[bar]</code> option value; parser determined by filename extension</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">local_ini_01</span><span class=\"p\">:</span>\n    <span class=\"nt\">source</span><span class=\"p\">:</span> <span class=\"s\">'/tmp/inifile.ini'</span>\n    <span class=\"nt\">selector</span><span class=\"p\">:</span> <span class=\"s\">'foo.bar'</span>\n</pre>\n<h4>local_ini_02</h4>\n<p>Assign the env <code>local_ini_02</code> from the <code>[foo]</code> section under the <code>[bar]</code> option value; parser manually set since it can not be determined via filename extension</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">local_ini_02</span><span class=\"p\">:</span>\n    <span class=\"nt\">source</span><span class=\"p\">:</span> <span class=\"s\">'/tmp/file_without_ini_extension'</span>\n    <span class=\"nt\">selector</span><span class=\"p\">:</span> <span class=\"s\">'foo.bar'</span>\n    <span class=\"nt\">parser</span><span class=\"p\">:</span> <span class=\"s\">'ini'</span>\n</pre>\n<h4>local_json_01</h4>\n<p>Assign the env <code>local_json_01</code> from the JSON content using an xpath-style path selector to the desired value</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">local_json_01</span><span class=\"p\">:</span>\n    <span class=\"nt\">source</span><span class=\"p\">:</span> <span class=\"s\">'/tmp/jsonfile.json'</span>\n    <span class=\"nt\">selector</span><span class=\"p\">:</span> <span class=\"s\">'foo.0.bar'</span>\n</pre>\n<h4>local_json_02</h4>\n<p>Assign the env <code>local_json_02</code> from the JSON content using a jq-style path selector to the desired value</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">local_json_02</span><span class=\"p\">:</span>\n    <span class=\"nt\">source</span><span class=\"p\">:</span> <span class=\"s\">'/tmp/jsonfile.json'</span>\n    <span class=\"nt\">selector</span><span class=\"p\">:</span> <span class=\"s\">'.foo[1]bar'</span>\n</pre>\n<h4>local_json_03</h4>\n<p>Assign the env <code>local_json_03</code> from the JSON content using an xpath-style path selector to the desired value; set the JSON parser</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">local_json_03</span><span class=\"p\">:</span>\n    <span class=\"nt\">source</span><span class=\"p\">:</span> <span class=\"s\">'/tmp/file_without_json_extension'</span>\n    <span class=\"nt\">selector</span><span class=\"p\">:</span> <span class=\"s\">'foo.0.bar'</span>\n    <span class=\"nt\">parser</span><span class=\"p\">:</span> <span class=\"s\">'json'</span>\n</pre>\n<h4>local_yaml_01</h4>\n<p>assign the env <code>local_yaml_01</code> from the JSON content using an xpath-style path selector to the desired value; js-style is also possible here.</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">local_yaml_01</span><span class=\"p\">:</span>\n    <span class=\"nt\">source</span><span class=\"p\">:</span> <span class=\"s\">'/tmp/yamlfile.yml'</span>\n    <span class=\"nt\">selector</span><span class=\"p\">:</span> <span class=\"s\">'foo.0.bar'</span>\n</pre>\n<h4>local_yaml_02</h4>\n<p>assign the env <code>local_yaml_02</code> from the YAML content using an xpath-style path selector to the desired value; set the YAML parser</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">local_yaml_02</span><span class=\"p\">:</span>\n    <span class=\"nt\">source</span><span class=\"p\">:</span> <span class=\"s\">'/tmp/file_without_yaml_extension'</span>\n    <span class=\"nt\">selector</span><span class=\"p\">:</span> <span class=\"s\">'foo.0.bar'</span>\n    <span class=\"nt\">parser</span><span class=\"p\">:</span> <span class=\"s\">'yaml'</span>\n</pre>\n<h4>remote_text_01</h4>\n<p>Assign the env <code>remote_text_01</code> from the 1st line of the remote TEXT content</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">remote_text_01</span><span class=\"p\">:</span>\n    <span class=\"nt\">source</span><span class=\"p\">:</span> <span class=\"s\">'http://textfiles.com/computers/144disk.txt'</span>\n</pre>\n<h4>remote_json_01</h4>\n<p>Assign the env <code>remote_json_01</code> from remote JSON content using a jq-style selector</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">remote_json_01</span><span class=\"p\">:</span>\n    <span class=\"nt\">source</span><span class=\"p\">:</span> <span class=\"s\">'https://ip-ranges.amazonaws.com/ip-ranges.json'</span>\n    <span class=\"nt\">selector</span><span class=\"p\">:</span> <span class=\"s\">'.prefixes[2].ip_prefix'</span>\n</pre>\n<h4>remote_json_02</h4>\n<p>Assign the env <code>remote_json_02</code> from remote JSON content using an xpath-style selector</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">remote_json_02</span><span class=\"p\">:</span>\n    <span class=\"nt\">source</span><span class=\"p\">:</span> <span class=\"s\">'https://ip-ranges.amazonaws.com/ip-ranges.json'</span>\n    <span class=\"nt\">selector</span><span class=\"p\">:</span> <span class=\"s\">'prefixes.2.ip_prefix'</span>\n</pre>\n<h4>exec_01</h4>\n<p>Assign the env <code>exec_01</code> from the 1st line of the STDOUT of an shell command</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">exec_01</span><span class=\"p\">:</span>\n    <span class=\"nt\">exec</span><span class=\"p\">:</span> <span class=\"s\">'head</span><span class=\"nv\"> </span><span class=\"s\">/dev/urandom</span><span class=\"nv\"> </span><span class=\"s\">|</span><span class=\"nv\"> </span><span class=\"s\">base64</span><span class=\"nv\"> </span><span class=\"s\">-w0</span><span class=\"nv\"> </span><span class=\"s\">|</span><span class=\"nv\"> </span><span class=\"s\">tr</span><span class=\"nv\"> </span><span class=\"s\">-d</span><span class=\"nv\"> </span><span class=\"s\">\"/\"</span><span class=\"nv\"> </span><span class=\"s\">|</span><span class=\"nv\"> </span><span class=\"s\">tr</span><span class=\"nv\"> </span><span class=\"s\">-d</span><span class=\"nv\"> </span><span class=\"s\">\"+\"</span><span class=\"nv\"> </span><span class=\"s\">|</span><span class=\"nv\"> </span><span class=\"s\">head</span><span class=\"nv\"> </span><span class=\"s\">-c20'</span>\n</pre>\n<h4>exec_02</h4>\n<p>Assign the env <code>exec_02</code> from the 1st line of the STDOUT of an shell command</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">exec_02</span><span class=\"p\">:</span>\n    <span class=\"nt\">exec</span><span class=\"p\">:</span> <span class=\"s\">'curl</span><span class=\"nv\"> </span><span class=\"s\">-s</span><span class=\"nv\"> </span><span class=\"s\">https://ip-ranges.amazonaws.com/ip-ranges.json'</span>\n    <span class=\"nt\">parser</span><span class=\"p\">:</span> <span class=\"s\">'json'</span>\n    <span class=\"nt\">selector</span><span class=\"p\">:</span> <span class=\"s\">'.prefixes[1].ip_prefix'</span>\n</pre>\n<h4>exec_03</h4>\n<p>Run the shell-command and do not assign it to any env value</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">exec_03</span><span class=\"p\">:</span>\n    <span class=\"nt\">exec</span><span class=\"p\">:</span> <span class=\"s\">'head</span><span class=\"nv\"> </span><span class=\"s\">/dev/urandom</span><span class=\"nv\"> </span><span class=\"s\">|</span><span class=\"nv\"> </span><span class=\"s\">base64</span><span class=\"nv\"> </span><span class=\"s\">-w0'</span>\n    <span class=\"nt\">selector</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">null</span>\n</pre>\n<h4>direct_01</h4>\n<p>Assign env <code>direct_01</code> to value \"somevalue\"</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">direct_01</span><span class=\"p\">:</span>\n    <span class=\"nt\">value</span><span class=\"p\">:</span> <span class=\"s\">'somevalue'</span>\n</pre>\n<h4>direct_02</h4>\n<p>Use an existing env value as input into this configuration; can be used in any env-alias option</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">direct_02</span><span class=\"p\">:</span>\n    <span class=\"nt\">value</span><span class=\"p\">:</span> <span class=\"s\">'env:HOME'</span>\n</pre>\n<h4>direct_03</h4>\n<p>Set env set and override the variable name; can be used in any env-alias setting arrangement</p>\n<pre><span class=\"nt\">env-alias</span><span class=\"p\">:</span>\n  <span class=\"nt\">direct_03</span><span class=\"p\">:</span>\n    <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"s\">'direct_03_override_name'</span>\n    <span class=\"nt\">value</span><span class=\"p\">:</span> <span class=\"s\">'env:HOME'</span>\n</pre>\n<h2>Debug Output</h2>\n<p>Debug output can be easily added to STDERR by adding an optional <code>-d</code> argument to <code>env-alias</code> as shown below</p>\n<pre><span class=\"nb\">eval</span> <span class=\"k\">$(</span>env-alias my-alias-name -d ~/path-to/my-alias-name-config-file.yml<span class=\"k\">)</span>\n</pre>\n<p>This this provides debug output similar to below</p>\n<pre>username@computer:~$ my-alias-name\n20191201Z072045 - DEBUG - env-alias v0.0.1\n20191201Z072045 - DEBUG -  export \"local_text_01\"=\"xxxxxxxxxxxxxxxx\"\n20191201Z072045 - DEBUG -  export \"local_text_02\"=\"xxxxxxxxxxxxxxxx\"\n...\n</pre>\n<hr>\n<h2>Authors</h2>\n<p><a href=\"https://nicholasdejong.com\" rel=\"nofollow\">Nicholas de Jong</a></p>\n<h2>License</h2>\n<p>BSD-2-Clause - see LICENSE file for full details.</p>\n\n          </div>"}, "last_serial": 6726859, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a9f5e5b9c46777498a9c1320077bd68f", "sha256": "e7b456200a8dd9dcc17a91c4aa0900d17bc4bb5777ece9cd49b2eb4346d9af07"}, "downloads": -1, "filename": "env_alias-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a9f5e5b9c46777498a9c1320077bd68f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15148, "upload_time": "2019-12-01T11:52:13", "upload_time_iso_8601": "2019-12-01T11:52:13.369152Z", "url": "https://files.pythonhosted.org/packages/0f/7e/647cddeb558384d25739ac45add3e1c6c85f28832fc3a07685291bcfdedd/env_alias-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a43a3051cf6e5cdacceb7471f64db1a8", "sha256": "1823a4e90e516e8aeaed3e3e7f6aec9e411dab82c1068eec2bbbbc50b3b32969"}, "downloads": -1, "filename": "env-alias-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a43a3051cf6e5cdacceb7471f64db1a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11334, "upload_time": "2019-12-01T11:52:16", "upload_time_iso_8601": "2019-12-01T11:52:16.246787Z", "url": "https://files.pythonhosted.org/packages/92/6b/5d1fb5e69c0fa9c27ab75d5a0acad14ea64f9851a8c9bf1172dbae823fbb/env-alias-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "536728ac8bb4618be5a19f7b071a198c", "sha256": "e9bae0ada307cebfb8062e629b0c1b39afacefa9ae6354a32faee151dfcabe5c"}, "downloads": -1, "filename": "env_alias-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "536728ac8bb4618be5a19f7b071a198c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16166, "upload_time": "2019-12-01T12:04:12", "upload_time_iso_8601": "2019-12-01T12:04:12.118922Z", "url": "https://files.pythonhosted.org/packages/13/fc/bfef6fda5cb2ccc107f167ca4669cec33c94ea1fbd2611991e29c5023345/env_alias-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c49282a498cefb94217113692578490e", "sha256": "1092c1c56b43dd602cd6bb5b53afb4410570ba39f518f4a5cfaf8edb18d845a5"}, "downloads": -1, "filename": "env-alias-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c49282a498cefb94217113692578490e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12024, "upload_time": "2019-12-01T12:04:15", "upload_time_iso_8601": "2019-12-01T12:04:15.509442Z", "url": "https://files.pythonhosted.org/packages/06/17/a5f0d1f01af83d30596f7092202d0eaacc45306d9269dd9518b29250ffcc/env-alias-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "8c1b98aaed08e16183aabb4769a8a071", "sha256": "0dd0fdf90be3ff2d18a14f79f447ccde17a1e48a10dc997e86b88a01b91a1eda"}, "downloads": -1, "filename": "env_alias-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8c1b98aaed08e16183aabb4769a8a071", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16168, "upload_time": "2019-12-01T12:11:08", "upload_time_iso_8601": "2019-12-01T12:11:08.284859Z", "url": "https://files.pythonhosted.org/packages/cc/cf/904544fcca548a5fd2bf043dbf9a61e7799c85499d5d2535bb8ccf635782/env_alias-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8bc922023b8cc4d9f6399628dadcc489", "sha256": "e6a67f2490b08359ed81c96914408c2e80ae82f149dbd20d405c8ca5703cedc3"}, "downloads": -1, "filename": "env-alias-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8bc922023b8cc4d9f6399628dadcc489", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12089, "upload_time": "2019-12-01T12:11:09", "upload_time_iso_8601": "2019-12-01T12:11:09.985202Z", "url": "https://files.pythonhosted.org/packages/b3/93/0941f49c02ff06747ce74a661a511fac690f45e1d86b50611b9fcd01c977/env-alias-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "eed7b1699106c25d40db1c820fda5a7c", "sha256": "a0a9b5a50d57b27c10066f5e16b4664535f6f5aaf270d09acb13701021e8b651"}, "downloads": -1, "filename": "env_alias-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "eed7b1699106c25d40db1c820fda5a7c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16184, "upload_time": "2019-12-01T12:43:26", "upload_time_iso_8601": "2019-12-01T12:43:26.219374Z", "url": "https://files.pythonhosted.org/packages/43/06/d7e2ac2adb151d23f68a665d83357011d70e69ffbcc527cbfdb827573ae0/env_alias-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e34b42335616feb058026e25f77072f4", "sha256": "958ca4487138649edea7ac90e1e3bc4d3f7de4091e84ff8543a97099ddaaf67c"}, "downloads": -1, "filename": "env-alias-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e34b42335616feb058026e25f77072f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9633, "upload_time": "2019-12-01T12:43:28", "upload_time_iso_8601": "2019-12-01T12:43:28.367667Z", "url": "https://files.pythonhosted.org/packages/ac/52/6a34c34f56dfa5644bda1270415a2d44f4be0f847754848d599df07fc1c1/env-alias-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "5c2cf523b1e392867fb725420b67034e", "sha256": "be0845307a14b7f9f6ff4e030c0819e2b837450e0e395988092794f6a8bbf640"}, "downloads": -1, "filename": "env_alias-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5c2cf523b1e392867fb725420b67034e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16191, "upload_time": "2019-12-01T12:48:30", "upload_time_iso_8601": "2019-12-01T12:48:30.022135Z", "url": "https://files.pythonhosted.org/packages/66/f6/cadf606e34ea6fe4be5b41239b6ae6b160eaa5178518c51515a24858a156/env_alias-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a3590c6ae263e03af1abf052add6ebb", "sha256": "2d360e135009e16099a3625e7743c002e47c5c5ca9ed86a8deb16c68a356a2fb"}, "downloads": -1, "filename": "env-alias-0.1.4.tar.gz", "has_sig": false, "md5_digest": "6a3590c6ae263e03af1abf052add6ebb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12051, "upload_time": "2019-12-01T12:48:31", "upload_time_iso_8601": "2019-12-01T12:48:31.905257Z", "url": "https://files.pythonhosted.org/packages/1f/24/4d671bfad0afc507af5119c23493625dbbcdeeb392c4b40b1c69d27fc38a/env-alias-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "0ebd2ccc2d51de11128200060538f7b9", "sha256": "3e870668a88796f8611a198cfc2b75c642ca33867025c581ec216eaea6aaa014"}, "downloads": -1, "filename": "env_alias-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "0ebd2ccc2d51de11128200060538f7b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16251, "upload_time": "2019-12-01T15:32:37", "upload_time_iso_8601": "2019-12-01T15:32:37.789641Z", "url": "https://files.pythonhosted.org/packages/ec/60/fde5f19a73a285cce485b87234d8396adc45815bc51b411b8d3fe6316ee8/env_alias-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "613094316b1d8fa07d8d82358f883ce8", "sha256": "9d393b01d5ec7d61867aac051c3776f733e8d1e1d0c52c58e960ff8e8bda4fd6"}, "downloads": -1, "filename": "env-alias-0.1.5.tar.gz", "has_sig": false, "md5_digest": "613094316b1d8fa07d8d82358f883ce8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12969, "upload_time": "2019-12-01T15:32:39", "upload_time_iso_8601": "2019-12-01T15:32:39.629790Z", "url": "https://files.pythonhosted.org/packages/74/4d/bf159d3b4d6abb4f672456180ec6f37b0e757dbcfcd15f507c02e9a5ebd4/env-alias-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "26c4ffc6fdfd7fdf06bc133b1c796a00", "sha256": "57deca4a888f23daa56be5088610d6a51211fa276d4a8764efa1447c0fac4cd3"}, "downloads": -1, "filename": "env_alias-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "26c4ffc6fdfd7fdf06bc133b1c796a00", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16577, "upload_time": "2020-03-01T02:51:13", "upload_time_iso_8601": "2020-03-01T02:51:13.140472Z", "url": "https://files.pythonhosted.org/packages/40/ba/aba6901659acdcdfb323100c1f48f3fc671627ccd94c1f5a328d1db43f4b/env_alias-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1f213253c4cfd869a99efc343f08048", "sha256": "992868fed2dc75436f1ab77154ba75f42ac07d7168f1c5c4f439ee5868dd3165"}, "downloads": -1, "filename": "env-alias-0.1.6.tar.gz", "has_sig": false, "md5_digest": "b1f213253c4cfd869a99efc343f08048", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12568, "upload_time": "2020-03-01T02:51:16", "upload_time_iso_8601": "2020-03-01T02:51:16.178925Z", "url": "https://files.pythonhosted.org/packages/5a/c7/013bffa10a99bd8eb25d3e4779ccdb6aac3f7bd01c16f5521a5c367079c8/env-alias-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "26c4ffc6fdfd7fdf06bc133b1c796a00", "sha256": "57deca4a888f23daa56be5088610d6a51211fa276d4a8764efa1447c0fac4cd3"}, "downloads": -1, "filename": "env_alias-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "26c4ffc6fdfd7fdf06bc133b1c796a00", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16577, "upload_time": "2020-03-01T02:51:13", "upload_time_iso_8601": "2020-03-01T02:51:13.140472Z", "url": "https://files.pythonhosted.org/packages/40/ba/aba6901659acdcdfb323100c1f48f3fc671627ccd94c1f5a328d1db43f4b/env_alias-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1f213253c4cfd869a99efc343f08048", "sha256": "992868fed2dc75436f1ab77154ba75f42ac07d7168f1c5c4f439ee5868dd3165"}, "downloads": -1, "filename": "env-alias-0.1.6.tar.gz", "has_sig": false, "md5_digest": "b1f213253c4cfd869a99efc343f08048", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12568, "upload_time": "2020-03-01T02:51:16", "upload_time_iso_8601": "2020-03-01T02:51:16.178925Z", "url": "https://files.pythonhosted.org/packages/5a/c7/013bffa10a99bd8eb25d3e4779ccdb6aac3f7bd01c16f5521a5c367079c8/env-alias-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:11 2020"}