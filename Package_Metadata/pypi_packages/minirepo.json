{"info": {"author": "sganis", "author_email": "sganis@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Topic :: Software Development :: Build Tools"], "description": ".. _pypi.python.org: http://pypi.python.org\n.. _pip: https://pip.pypa.io\n.. _bandersnatch: https://pypi.python.org/pypi/bandersnatch\n.. _basket: https://pypi.python.org/pypi/Basket\n.. _pypi.python.org/pypi/minirepo: https://pypi.python.org/pypi/minirepo\n.. _github: https://github.com/sganis/minirepo\n\n********\nMinirepo\n********\n\nCreate a local pypi repository to use pip off-line.\n\n.. contents:: \n\nMinirepo is a command-line program that downloads Python packages from pypi.python.org_, so you can use pip_ without internet. I needed to maintain a python repository in an isolated cluster environment, and after trying several tools to mirror pypi index, I dedided to make my own tool. \n\nSome mirroring tools such us bandersnatch_ didn't meet my requirements, because I wanted to do a selective mirror, only downlowing all sources for python 2.7, for example. Bandersnatch gets the full content, about 140GB at the time of my first version of minirepo.\n\nThen I was inspired by basket_, which is almost what I wanted, but you need to specify the list of packages to download. I ended up using the json API to get the packages that I needed, and then calling basket to download or update the packages. In the end, that approach was slow and buggy, so I wrote this small program to do what I just needed. Now, my minirepo folder has about 12GB with only the latest packages, and it takes about 20 minutes to mirror.\n\n\nInstallation\n============\n\nUse pip\n-------\n\nThe easiest way to install it is to use pip:\n\n.. code:: bash\n\n    $ pip install minirepo\n\nOr download and install\n-----------------------\n\nDownload the package file from https://pypi.python.org/pypi/minirepo, or the latest development version from https://github.com/sganis/minirepo, then:\n\n.. code:: bash\n\n    $ tar xvzf minirepo-1.0.3.tar.gz\n    $ cd minirepo-1.0.3\n    $ python setup.py install\n\nYou can also use git:\n\n.. code:: bash\n\n    $ git clone https://github.com/sganis/minirepo.git\n    $ cd minirepo\n    $ python setup.py install\n\n\nUsage\n=====\n\n.. code::\n\t\n\t# run it from the command line:\n\t$ minirepo\n\n\t# or run the python script if you didn't install it:\n\t$ ./minirepo.py\n\nThe firt time it's executed, the program will ask you for the local repository path, which defaults to ~/minirepo in Linux. A json configuration file is created and saved as ~/.minirepo, that you can edit to your preferences. This configuration file looks like this:\n\n.. code:: javascript\n\n\t{\n\t\t\"processes\"       : 20, \n\t\t\"repository\"      : \"/home/user/minirepo\"\n\t\t\"package_types\"   : [\"bdist_egg\",\"bdist_wheel\",\"sdist\"], \n\t\t\"extensions\"      : [\"bz2\",\"egg\",\"gz\",\"tgz\",\"whl\",\"zip\"], \n\t\t\"python_versions\" : [\"2.7\",\"any\",\"cp27\",\"py2\",\"py27\",\"source\"], \n\t}\n\n\nMinirepo uses packages_types, extensions, and python_versions as filters. I was analysing the full list of packages available in pypi.python.org_, and it looks that all the options are something like the list below, you can try any other option. For me, I was only interested in python 2.7 packages, sources, wheels and eegs distributions, and some extensions.\n\n.. code:: python\n\n\tPYTHON_VERSIONS = [\n\t\t'2', '2.2', '2.3', '2.4', '2.5', '2.6', '2.7', '2.7.6', '3.0', '3.1', \n\t\t'3.2', '3.3', '3.4', '3.5', 'any', 'cp25', 'cp26', 'cp27', 'cp31', \n\t\t'cp32', 'cp33', 'cp34', 'cp35', 'py2', 'py2.py3', 'py26', 'py27', \n\t\t'py3', 'py32, py33, py34', 'py33', 'py34', 'python', 'source'\n\t]\n\t\n\tPACKAGE_TYPES = [\n\t\t'bdist_dmg', 'bdist_dumb', 'bdist_egg', 'bdist_msi', 'bdist_rpm', \n\t\t'bdist_wheel', 'bdist_wininst', 'sdist'\n\t]\n\t\n\tEXTENSIONS = [\n\t\t'bz2', 'deb', 'dmg', 'egg', 'exe', 'gz', 'msi', 'rpm', 'tgz', 'whl', 'zip'\n\t]\n\n\nUse pip without internet\n========================\n\n.. code:: bash\n\n\t$ pip install --no-index --find-links=/home/user/minirepo <package-name>\n\n\nI prefer to setup environment variables in my profile so I don't have to provide extra command line arguments.\n\n.. code:: bash\n\n\t# save these 2 variable in your profile \n\t$ export PIP_NO_INDEX=true\n\t$ export PIP_FIND_LINKS=/home/user/minirepo\n\t\n\t# then run pip as usual\n\t$ pip install <package-name>", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sganis/minirepo", "keywords": "minirepo development pip mirror packages offline repository", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "minirepo", "package_url": "https://pypi.org/project/minirepo/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/minirepo/", "project_urls": {"Homepage": "https://github.com/sganis/minirepo"}, "release_url": "https://pypi.org/project/minirepo/1.0.3/", "requires_dist": null, "requires_python": null, "summary": "Create a local pypi repository to use pip off-line", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Create a local pypi repository to use pip off-line.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#installation\" id=\"id1\" rel=\"nofollow\">Installation</a><ul>\n<li><a href=\"#use-pip\" id=\"id2\" rel=\"nofollow\">Use pip</a></li>\n<li><a href=\"#or-download-and-install\" id=\"id3\" rel=\"nofollow\">Or download and install</a></li>\n</ul>\n</li>\n<li><a href=\"#usage\" id=\"id4\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#use-pip-without-internet\" id=\"id5\" rel=\"nofollow\">Use pip without internet</a></li>\n</ul>\n</div>\n<p>Minirepo is a command-line program that downloads Python packages from <a href=\"http://pypi.python.org\" rel=\"nofollow\">pypi.python.org</a>, so you can use <a href=\"https://pip.pypa.io\" rel=\"nofollow\">pip</a> without internet. I needed to maintain a python repository in an isolated cluster environment, and after trying several tools to mirror pypi index, I dedided to make my own tool.</p>\n<p>Some mirroring tools such us <a href=\"https://pypi.python.org/pypi/bandersnatch\" rel=\"nofollow\">bandersnatch</a> didn\u2019t meet my requirements, because I wanted to do a selective mirror, only downlowing all sources for python 2.7, for example. Bandersnatch gets the full content, about 140GB at the time of my first version of minirepo.</p>\n<p>Then I was inspired by <a href=\"https://pypi.python.org/pypi/Basket\" rel=\"nofollow\">basket</a>, which is almost what I wanted, but you need to specify the list of packages to download. I ended up using the json API to get the packages that I needed, and then calling basket to download or update the packages. In the end, that approach was slow and buggy, so I wrote this small program to do what I just needed. Now, my minirepo folder has about 12GB with only the latest packages, and it takes about 20 minutes to mirror.</p>\n<div id=\"installation\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Installation</a></h2>\n<div id=\"use-pip\">\n<h3><a href=\"#id2\" rel=\"nofollow\">Use pip</a></h3>\n<p>The easiest way to install it is to use pip:</p>\n<pre>$ pip install minirepo\n</pre>\n</div>\n<div id=\"or-download-and-install\">\n<h3><a href=\"#id3\" rel=\"nofollow\">Or download and install</a></h3>\n<p>Download the package file from <a href=\"https://pypi.python.org/pypi/minirepo\" rel=\"nofollow\">https://pypi.python.org/pypi/minirepo</a>, or the latest development version from <a href=\"https://github.com/sganis/minirepo\" rel=\"nofollow\">https://github.com/sganis/minirepo</a>, then:</p>\n<pre>$ tar xvzf minirepo-1.0.3.tar.gz\n$ <span class=\"nb\">cd</span> minirepo-1.0.3\n$ python setup.py install\n</pre>\n<p>You can also use git:</p>\n<pre>$ git clone https://github.com/sganis/minirepo.git\n$ <span class=\"nb\">cd</span> minirepo\n$ python setup.py install\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Usage</a></h2>\n<pre># run it from the command line:\n$ minirepo\n\n# or run the python script if you didn't install it:\n$ ./minirepo.py\n</pre>\n<p>The firt time it\u2019s executed, the program will ask you for the local repository path, which defaults to ~/minirepo in Linux. A json configuration file is created and saved as ~/.minirepo, that you can edit to your preferences. This configuration file looks like this:</p>\n<pre><span class=\"p\">{</span>\n        <span class=\"s2\">\"processes\"</span>       <span class=\"o\">:</span> <span class=\"mi\">20</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"repository\"</span>      <span class=\"o\">:</span> <span class=\"s2\">\"/home/user/minirepo\"</span>\n        <span class=\"s2\">\"package_types\"</span>   <span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"bdist_egg\"</span><span class=\"p\">,</span><span class=\"s2\">\"bdist_wheel\"</span><span class=\"p\">,</span><span class=\"s2\">\"sdist\"</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"extensions\"</span>      <span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"bz2\"</span><span class=\"p\">,</span><span class=\"s2\">\"egg\"</span><span class=\"p\">,</span><span class=\"s2\">\"gz\"</span><span class=\"p\">,</span><span class=\"s2\">\"tgz\"</span><span class=\"p\">,</span><span class=\"s2\">\"whl\"</span><span class=\"p\">,</span><span class=\"s2\">\"zip\"</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"python_versions\"</span> <span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"2.7\"</span><span class=\"p\">,</span><span class=\"s2\">\"any\"</span><span class=\"p\">,</span><span class=\"s2\">\"cp27\"</span><span class=\"p\">,</span><span class=\"s2\">\"py2\"</span><span class=\"p\">,</span><span class=\"s2\">\"py27\"</span><span class=\"p\">,</span><span class=\"s2\">\"source\"</span><span class=\"p\">],</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Minirepo uses packages_types, extensions, and python_versions as filters. I was analysing the full list of packages available in <a href=\"http://pypi.python.org\" rel=\"nofollow\">pypi.python.org</a>, and it looks that all the options are something like the list below, you can try any other option. For me, I was only interested in python 2.7 packages, sources, wheels and eegs distributions, and some extensions.</p>\n<pre><span class=\"n\">PYTHON_VERSIONS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"s1\">'2'</span><span class=\"p\">,</span> <span class=\"s1\">'2.2'</span><span class=\"p\">,</span> <span class=\"s1\">'2.3'</span><span class=\"p\">,</span> <span class=\"s1\">'2.4'</span><span class=\"p\">,</span> <span class=\"s1\">'2.5'</span><span class=\"p\">,</span> <span class=\"s1\">'2.6'</span><span class=\"p\">,</span> <span class=\"s1\">'2.7'</span><span class=\"p\">,</span> <span class=\"s1\">'2.7.6'</span><span class=\"p\">,</span> <span class=\"s1\">'3.0'</span><span class=\"p\">,</span> <span class=\"s1\">'3.1'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'3.2'</span><span class=\"p\">,</span> <span class=\"s1\">'3.3'</span><span class=\"p\">,</span> <span class=\"s1\">'3.4'</span><span class=\"p\">,</span> <span class=\"s1\">'3.5'</span><span class=\"p\">,</span> <span class=\"s1\">'any'</span><span class=\"p\">,</span> <span class=\"s1\">'cp25'</span><span class=\"p\">,</span> <span class=\"s1\">'cp26'</span><span class=\"p\">,</span> <span class=\"s1\">'cp27'</span><span class=\"p\">,</span> <span class=\"s1\">'cp31'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'cp32'</span><span class=\"p\">,</span> <span class=\"s1\">'cp33'</span><span class=\"p\">,</span> <span class=\"s1\">'cp34'</span><span class=\"p\">,</span> <span class=\"s1\">'cp35'</span><span class=\"p\">,</span> <span class=\"s1\">'py2'</span><span class=\"p\">,</span> <span class=\"s1\">'py2.py3'</span><span class=\"p\">,</span> <span class=\"s1\">'py26'</span><span class=\"p\">,</span> <span class=\"s1\">'py27'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'py3'</span><span class=\"p\">,</span> <span class=\"s1\">'py32, py33, py34'</span><span class=\"p\">,</span> <span class=\"s1\">'py33'</span><span class=\"p\">,</span> <span class=\"s1\">'py34'</span><span class=\"p\">,</span> <span class=\"s1\">'python'</span><span class=\"p\">,</span> <span class=\"s1\">'source'</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">PACKAGE_TYPES</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"s1\">'bdist_dmg'</span><span class=\"p\">,</span> <span class=\"s1\">'bdist_dumb'</span><span class=\"p\">,</span> <span class=\"s1\">'bdist_egg'</span><span class=\"p\">,</span> <span class=\"s1\">'bdist_msi'</span><span class=\"p\">,</span> <span class=\"s1\">'bdist_rpm'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'bdist_wheel'</span><span class=\"p\">,</span> <span class=\"s1\">'bdist_wininst'</span><span class=\"p\">,</span> <span class=\"s1\">'sdist'</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">EXTENSIONS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"s1\">'bz2'</span><span class=\"p\">,</span> <span class=\"s1\">'deb'</span><span class=\"p\">,</span> <span class=\"s1\">'dmg'</span><span class=\"p\">,</span> <span class=\"s1\">'egg'</span><span class=\"p\">,</span> <span class=\"s1\">'exe'</span><span class=\"p\">,</span> <span class=\"s1\">'gz'</span><span class=\"p\">,</span> <span class=\"s1\">'msi'</span><span class=\"p\">,</span> <span class=\"s1\">'rpm'</span><span class=\"p\">,</span> <span class=\"s1\">'tgz'</span><span class=\"p\">,</span> <span class=\"s1\">'whl'</span><span class=\"p\">,</span> <span class=\"s1\">'zip'</span>\n<span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"use-pip-without-internet\">\n<h2><a href=\"#id5\" rel=\"nofollow\">Use pip without internet</a></h2>\n<pre>$ pip install --no-index --find-links<span class=\"o\">=</span>/home/user/minirepo &lt;package-name&gt;\n</pre>\n<p>I prefer to setup environment variables in my profile so I don\u2019t have to provide extra command line arguments.</p>\n<pre><span class=\"c1\"># save these 2 variable in your profile\n</span>$ <span class=\"nb\">export</span> <span class=\"nv\">PIP_NO_INDEX</span><span class=\"o\">=</span><span class=\"nb\">true</span>\n$ <span class=\"nb\">export</span> <span class=\"nv\">PIP_FIND_LINKS</span><span class=\"o\">=</span>/home/user/minirepo\n\n<span class=\"c1\"># then run pip as usual\n</span>$ pip install &lt;package-name&gt;\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1540930, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "49ad3636f10fcf6657472f42367d5f06", "sha256": "ee8a47d8ef075be59ba671f6c7083b644e5a9364d836117649f3cff311b2312e"}, "downloads": -1, "filename": "minirepo-1.0.2.tar.gz", "has_sig": false, "md5_digest": "49ad3636f10fcf6657472f42367d5f06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6165, "upload_time": "2015-05-09T05:17:09", "upload_time_iso_8601": "2015-05-09T05:17:09.890830Z", "url": "https://files.pythonhosted.org/packages/5d/fc/77695d3c861f7f51ded636f1e9552d01ac67d6eedee00af25ec7854ee7e4/minirepo-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "70803819736c8c2102e1e3d2b1db91b3", "sha256": "e695dae5c37ca92847d629e187ed8351bcb4360f4429ca0b0690dd6fb18d1664"}, "downloads": -1, "filename": "minirepo-1.0.3.tar.gz", "has_sig": false, "md5_digest": "70803819736c8c2102e1e3d2b1db91b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7020, "upload_time": "2015-05-10T14:58:48", "upload_time_iso_8601": "2015-05-10T14:58:48.791661Z", "url": "https://files.pythonhosted.org/packages/12/3b/99710fa8aa8cff42cd39cb7160fcdec4b94b9894c08e90871be871d310bc/minirepo-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "70803819736c8c2102e1e3d2b1db91b3", "sha256": "e695dae5c37ca92847d629e187ed8351bcb4360f4429ca0b0690dd6fb18d1664"}, "downloads": -1, "filename": "minirepo-1.0.3.tar.gz", "has_sig": false, "md5_digest": "70803819736c8c2102e1e3d2b1db91b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7020, "upload_time": "2015-05-10T14:58:48", "upload_time_iso_8601": "2015-05-10T14:58:48.791661Z", "url": "https://files.pythonhosted.org/packages/12/3b/99710fa8aa8cff42cd39cb7160fcdec4b94b9894c08e90871be871d310bc/minirepo-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:20 2020"}