{"info": {"author": "Chris Davis", "author_email": "defbyte@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "# Markdown Shortcodes for Django\n\nProvides the ability to use WordPress-like \"shortcodes\" in your content, which get rendered as HTML.\n\nThe idea here is to extend Markdown authoring capabilities. For example, rendering a more complex component in the flow of a content body that shows featured content - or as simple as rendering a full-width Vimeo video.\n\nThis package does not come with a host of shortcodes defined, given these will be highly project-specific.\n\nInstead, it provides a registration system (via a tiny decorator), the shortcode processor, and a template filter for convenience.\n\n## Installation\n\nInstall via pip:\n\n    pip install django-markdown-shortcodes\n\nPlease add `markdown_shortcodes` to `INSTALLED_APPS` in your Django project's settings.\n\n\n## Defining Shortcodes\n\nShortcode functions names expected to start with `shortcode_` followed by the string/name that appears in your content.\n\nThe following example creates support for a `[[youtube]]` shortcode.\n\nDefine the processing function, using the `shortcode` decorator to register the function for processing:\n\n    from markdown_shortcodes import shortcode\n\n    @shortcode\n    def shortcode_youtube(*args):\n        return render_to_string(\"shortcodes/youtube.html\", {\n            'id': args[0],\n            'title': args[1] if len(args) > 1 else '',\n            'alternate_uri': args[2] if len(args) > 2 else '',\n        })\n\nCreate a template file:\n\n    <div class=\"shortcode-block\">\n      <div class=\"fluid-iframe -ratio-16-9\">\n        <iframe src=\"//www.youtube.com/embed/#{{ id }}\"\n          title=\"{{ title }}\"\n          frameborder=\"0\"\n          webkitallowfullscreen\n          mozallowfullscreen\n          allowfullscreen>\n          This video requires an frame-capable browser.\n          {% if alternate_uri %}\n            <a href=\"{{ alternate_uri }}\">See alternative content for {{ title }}</a>\n          {% else %}\n            <a href=\"https://www.youtube.com/watch?v=#{{ id }}\">Watch {{ title }} on YouTube</a>\n          {% endif %}\n        </iframe>\n      </div>\n    </div>\n\nYour content:\n\n    So did you know about Whoa McTuggins? I saw an interview with him about preparing tomatos. It changed my life:\n    \n    [[youtube XTJIGGBN8l4 \"A thrilling exploration of tomato dicing\"]]\n    \n    Now I prepare pico de gallo almost weekly!\n\n\nAnd in your content's template, something like this (`expand_shortcodes` is a provided by this package):\n\n    ...\n    {% load shortcodes %}\n    \n    <div class=\"Post-BodyText -u-awesome\">\n    {{ post.body|expand_shortcodes|safe|your_markdown_filter }}\n    </div>\n    \n    ...", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/defbyte/django-markdown-shortcodes", "keywords": null, "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "django-markdown-shortcodes", "package_url": "https://pypi.org/project/django-markdown-shortcodes/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-markdown-shortcodes/", "project_urls": {"Homepage": "https://github.com/defbyte/django-markdown-shortcodes"}, "release_url": "https://pypi.org/project/django-markdown-shortcodes/1.3/", "requires_dist": null, "requires_python": null, "summary": "Utility adding WordPress-like shortcodes for Markdown authoring in Django.", "version": "1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Markdown Shortcodes for Django<br><br>Provides the ability to use WordPress-like \"shortcodes\" in your content, which get rendered as HTML.<br><br>The idea here is to extend Markdown authoring capabilities. For example, rendering a more complex component in the flow of a content body that shows featured content - or as simple as rendering a full-width Vimeo video.<br><br>This package does not come with a host of shortcodes defined, given these will be highly project-specific.<br><br>Instead, it provides a registration system (via a tiny decorator), the shortcode processor, and a template filter for convenience.<br><br>## Installation<br><br>Install via pip:<br><br>    pip install django-markdown-shortcodes<br><br>Please add `markdown_shortcodes` to `INSTALLED_APPS` in your Django project's settings.<br><br><br>## Defining Shortcodes<br><br>Shortcode functions names expected to start with `shortcode_` followed by the string/name that appears in your content.<br><br>The following example creates support for a `[[youtube]]` shortcode.<br><br>Define the processing function, using the `shortcode` decorator to register the function for processing:<br><br>    from markdown_shortcodes import shortcode<br><br>    @shortcode<br>    def shortcode_youtube(*args):<br>        return render_to_string(\"shortcodes/youtube.html\", {<br>            'id': args[0],<br>            'title': args[1] if len(args) &gt; 1 else '',<br>            'alternate_uri': args[2] if len(args) &gt; 2 else '',<br>        })<br><br>Create a template file:<br><br>    &lt;div class=\"shortcode-block\"&gt;<br>      &lt;div class=\"fluid-iframe -ratio-16-9\"&gt;<br>        &lt;iframe src=\"//www.youtube.com/embed/#{{ id }}\"<br>          title=\"{{ title }}\"<br>          frameborder=\"0\"<br>          webkitallowfullscreen<br>          mozallowfullscreen<br>          allowfullscreen&gt;<br>          This video requires an frame-capable browser.<br>          {% if alternate_uri %}<br>            &lt;a href=\"{{ alternate_uri }}\"&gt;See alternative content for {{ title }}&lt;/a&gt;<br>          {% else %}<br>            &lt;a href=\"https://www.youtube.com/watch?v=#{{ id }}\"&gt;Watch {{ title }} on YouTube&lt;/a&gt;<br>          {% endif %}<br>        &lt;/iframe&gt;<br>      &lt;/div&gt;<br>    &lt;/div&gt;<br><br>Your content:<br><br>    So did you know about Whoa McTuggins? I saw an interview with him about preparing tomatos. It changed my life:<br>    <br>    [[youtube XTJIGGBN8l4 \"A thrilling exploration of tomato dicing\"]]<br>    <br>    Now I prepare pico de gallo almost weekly!<br><br><br>And in your content's template, something like this (`expand_shortcodes` is a provided by this package):<br><br>    ...<br>    {% load shortcodes %}<br>    <br>    &lt;div class=\"Post-BodyText -u-awesome\"&gt;<br>    {{ post.body|expand_shortcodes|safe|your_markdown_filter }}<br>    &lt;/div&gt;<br>    <br>    ...\n          </div>"}, "last_serial": 1493246, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "bb6074c5223318262d02be65354f5a6c", "sha256": "5f569b49b7293e68663bc2625932564ddb15a32929134c96cd5ac21642ae2c04"}, "downloads": -1, "filename": "django-markdown-shortcodes-1.0.tar.gz", "has_sig": false, "md5_digest": "bb6074c5223318262d02be65354f5a6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2305, "upload_time": "2015-04-06T16:33:05", "upload_time_iso_8601": "2015-04-06T16:33:05.161285Z", "url": "https://files.pythonhosted.org/packages/47/93/38a62a935bb13a7d8873ce0ead4e214e66508aa42590b05e8352feccaa9f/django-markdown-shortcodes-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "05239ecd9328c76e471399f1b98dbb83", "sha256": "50e1b9ff6caf113c56c39f3d9ee87b2544aa606abedac3b972a953d0906ec474"}, "downloads": -1, "filename": "django-markdown-shortcodes-1.1.tar.gz", "has_sig": false, "md5_digest": "05239ecd9328c76e471399f1b98dbb83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3737, "upload_time": "2015-04-06T16:53:00", "upload_time_iso_8601": "2015-04-06T16:53:00.398193Z", "url": "https://files.pythonhosted.org/packages/ce/59/18a9cb2cfac6e482e30be9722b4bf4572e12c6b69c05ccca21e8952c8d6c/django-markdown-shortcodes-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "a026a8e9baa2df02406276bf6db8884c", "sha256": "c6a3550433ed7b37de0244927adbc10d923b20a55a3eaa577a59993bb1ca7710"}, "downloads": -1, "filename": "django-markdown-shortcodes-1.2.tar.gz", "has_sig": false, "md5_digest": "a026a8e9baa2df02406276bf6db8884c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3757, "upload_time": "2015-04-06T16:58:49", "upload_time_iso_8601": "2015-04-06T16:58:49.664790Z", "url": "https://files.pythonhosted.org/packages/9e/10/44f876a4f595f7292bd06731f8e25d01225c59470cdc8aad9e6c7056b057/django-markdown-shortcodes-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "2c34a94f8cfd81113a034e54bda2859f", "sha256": "911973c3076fc41fab8fdea9e3031fe20d81314e573d74d0f20a557a9720327e"}, "downloads": -1, "filename": "django-markdown-shortcodes-1.3.tar.gz", "has_sig": false, "md5_digest": "2c34a94f8cfd81113a034e54bda2859f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3762, "upload_time": "2015-04-06T17:05:53", "upload_time_iso_8601": "2015-04-06T17:05:53.906071Z", "url": "https://files.pythonhosted.org/packages/22/17/cbd3da56af041e8dbcfc548fe6db1c20936d1d9cf13bf56240ec0dcbdee2/django-markdown-shortcodes-1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2c34a94f8cfd81113a034e54bda2859f", "sha256": "911973c3076fc41fab8fdea9e3031fe20d81314e573d74d0f20a557a9720327e"}, "downloads": -1, "filename": "django-markdown-shortcodes-1.3.tar.gz", "has_sig": false, "md5_digest": "2c34a94f8cfd81113a034e54bda2859f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3762, "upload_time": "2015-04-06T17:05:53", "upload_time_iso_8601": "2015-04-06T17:05:53.906071Z", "url": "https://files.pythonhosted.org/packages/22/17/cbd3da56af041e8dbcfc548fe6db1c20936d1d9cf13bf56240ec0dcbdee2/django-markdown-shortcodes-1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:11 2020"}