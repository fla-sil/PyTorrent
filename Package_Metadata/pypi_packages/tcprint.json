{"info": {"author": "Murali Paluru", "author_email": "mpaluru@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "=======\ntcprint\n=======\n\nThis package provides the various tcprint_XXX routines which\ncan be used to print the text using color formatting.\n\nInternally, ANSI color codes are used to format the text.\n\nTypical usage often looks like this::\n\n    #!/usr/bin/env python\n\n    from tcprint import *\n\n    tcprint_red('Text in red')\n    tcprint_B_red('Text in bold red')\n\n    tcprint_red_on_green('Red text against a green background')\n    tcprint_B_red_on_green('Bold Red text against a green background')\n\n\n    tcprint_red_on_B_yellow('Red text against a bold yellow background')\n    tcprint_B_red_on_B_magenta('Bold red text against a bold magenta background')\n\n\nAvailable Colors\n================\n\n* black\n* red\n* green\n* yellow\n* blue\n* magenta\n* cyan\n* white\n\nFor Bold colors use B_ prefix as shown in the example\n\nThanks also to\n==============\n\nThis package was inspired by termcolor package by Konstantin Lepa\nhttp://pypi.python.org/pypi/termcolor/1.1.0\n\nIt's really a very useful package. I personally didn't want to specify the\ncolors towards the end of the line via arguments. Having just the text within\nthe double quotes [tcprint_red(\"text to be printed\")] seems more readable for me.\n\nUpcoming\n========\nWill add the other text attributes, like underline/blink, in the next release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/tcprint/", "keywords": null, "license": "MIT.txt", "maintainer": null, "maintainer_email": null, "name": "tcprint", "package_url": "https://pypi.org/project/tcprint/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tcprint/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/tcprint/"}, "release_url": "https://pypi.org/project/tcprint/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "Print text using color formatting", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            =======<br>tcprint<br>=======<br><br>This package provides the various tcprint_XXX routines which<br>can be used to print the text using color formatting.<br><br>Internally, ANSI color codes are used to format the text.<br><br>Typical usage often looks like this::<br><br>    #!/usr/bin/env python<br><br>    from tcprint import *<br><br>    tcprint_red('Text in red')<br>    tcprint_B_red('Text in bold red')<br><br>    tcprint_red_on_green('Red text against a green background')<br>    tcprint_B_red_on_green('Bold Red text against a green background')<br><br><br>    tcprint_red_on_B_yellow('Red text against a bold yellow background')<br>    tcprint_B_red_on_B_magenta('Bold red text against a bold magenta background')<br><br><br>Available Colors<br>================<br><br>* black<br>* red<br>* green<br>* yellow<br>* blue<br>* magenta<br>* cyan<br>* white<br><br>For Bold colors use B_ prefix as shown in the example<br><br>Thanks also to<br>==============<br><br>This package was inspired by termcolor package by Konstantin Lepa<br>http://pypi.python.org/pypi/termcolor/1.1.0<br><br>It's really a very useful package. I personally didn't want to specify the<br>colors towards the end of the line via arguments. Having just the text within<br>the double quotes [tcprint_red(\"text to be printed\")] seems more readable for me.<br><br>Upcoming<br>========<br>Will add the other text attributes, like underline/blink, in the next release\n          </div>"}, "last_serial": 560169, "releases": {"1.0": [], "1.0.1": []}, "urls": [], "timestamp": "Fri May  8 02:57:18 2020"}