{"info": {"author": "Todd Perry", "author_email": "todd.perry@myport.ac.uk", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Imgrender: Python Terminal Image Viewer\n\nTerminal image viewer in python, inspired by https://github.com/stefanhaustein/TerminalImageViewer. A piece of software designed to render\nimages on the linux/bash command line. It can either be used as a CLI or as a python library. It should work on most modern terminals, including mobaxterm for windows and jupyter notebooks.\n\n\n## Usage\n\n### Command Line\n\n\n```\nusage: imgrender [-h] [--width WIDTH] [--height HEIGHT] path\n\nRender images on the command line\n\npositional arguments:\n  path             the image path\n\noptional arguments:\n  -h, --help       show this help message and exit\n  --width WIDTH    width of the rendered image (default 60 pixels)\n  --height HEIGHT  height of the rendered image (default 60 pixels)\n```\n\n### Python Library\n\nSimply import the render function from the imgrender library. The function has two arguments, the image path (positional), and the scale parameteter (keyword), which takes a tuple with two integer (height, width)\n\nfor instance:\n\n```\nIn [1]: from imgrender import render\n\nIn [2]: render('frog.jpg', scale=(40, 60))\n(this will render the image stored in 'frog.jpg' with 40x60 pixels)\n```\n\nThe render function can be called without passing in a scale argument, this will use the default scale parameters of (60, 60)\n\n\n## Results\n\nbelow is an image of the city of Portsmouth generated as a 60x60 visualization.\n\n![Rendered](https://raw.githubusercontent.com/djentleman/imgrender/master/assets/pompey60.jpg)\n\nAnd here is the original image\n\n![Original](https://raw.githubusercontent.com/djentleman/imgrender/master/assets/pompey.jpg)\n\nFinally, here is the same imaged visualised as 250x250 pixels\n\n![Rendered](https://raw.githubusercontent.com/djentleman/imgrender/master/assets/pompey250.jpg)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/djentleman/imgrender", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "imgrender", "package_url": "https://pypi.org/project/imgrender/", "platform": "", "project_url": "https://pypi.org/project/imgrender/", "project_urls": {"Homepage": "https://github.com/djentleman/imgrender"}, "release_url": "https://pypi.org/project/imgrender/0.0.2/", "requires_dist": ["ansicolors (==1.1.8)", "numpy (==1.17.2)", "Pillow (==6.1.0)"], "requires_python": ">=3.6", "summary": "Python terminal image renderer", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Imgrender: Python Terminal Image Viewer</h1>\n<p>Terminal image viewer in python, inspired by <a href=\"https://github.com/stefanhaustein/TerminalImageViewer\" rel=\"nofollow\">https://github.com/stefanhaustein/TerminalImageViewer</a>. A piece of software designed to render\nimages on the linux/bash command line. It can either be used as a CLI or as a python library. It should work on most modern terminals, including mobaxterm for windows and jupyter notebooks.</p>\n<h2>Usage</h2>\n<h3>Command Line</h3>\n<pre><code>usage: imgrender [-h] [--width WIDTH] [--height HEIGHT] path\n\nRender images on the command line\n\npositional arguments:\n  path             the image path\n\noptional arguments:\n  -h, --help       show this help message and exit\n  --width WIDTH    width of the rendered image (default 60 pixels)\n  --height HEIGHT  height of the rendered image (default 60 pixels)\n</code></pre>\n<h3>Python Library</h3>\n<p>Simply import the render function from the imgrender library. The function has two arguments, the image path (positional), and the scale parameteter (keyword), which takes a tuple with two integer (height, width)</p>\n<p>for instance:</p>\n<pre><code>In [1]: from imgrender import render\n\nIn [2]: render('frog.jpg', scale=(40, 60))\n(this will render the image stored in 'frog.jpg' with 40x60 pixels)\n</code></pre>\n<p>The render function can be called without passing in a scale argument, this will use the default scale parameters of (60, 60)</p>\n<h2>Results</h2>\n<p>below is an image of the city of Portsmouth generated as a 60x60 visualization.</p>\n<p><img alt=\"Rendered\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a651f8447116b9833c8d771906fa302259c937ed/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f646a656e746c656d616e2f696d6772656e6465722f6d61737465722f6173736574732f706f6d70657936302e6a7067\"></p>\n<p>And here is the original image</p>\n<p><img alt=\"Original\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a0d8c68d96c7e81666e58fcb027bbefc376e712e/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f646a656e746c656d616e2f696d6772656e6465722f6d61737465722f6173736574732f706f6d7065792e6a7067\"></p>\n<p>Finally, here is the same imaged visualised as 250x250 pixels</p>\n<p><img alt=\"Rendered\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ce04f37db8f794aa55f0d8a5ef8eb74ba125d2f5/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f646a656e746c656d616e2f696d6772656e6465722f6d61737465722f6173736574732f706f6d7065793235302e6a7067\"></p>\n\n          </div>"}, "last_serial": 5918348, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "facb6170f54a6306002da930094d7fdc", "sha256": "dd1cf5b9f8dff3afd1961cab425222b5fa907bea3aee0561d48a474f560cdac4"}, "downloads": -1, "filename": "imgrender-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "facb6170f54a6306002da930094d7fdc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4190, "upload_time": "2019-10-02T14:48:03", "upload_time_iso_8601": "2019-10-02T14:48:03.414946Z", "url": "https://files.pythonhosted.org/packages/8a/25/1759e7f73e62f645d9d8d011fe327048b4ba6ade0900246864f1087c6364/imgrender-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d93ce7a93fc1b688fee8fe9ecec6b849", "sha256": "34f12fe33b9b403558900844769b2a83ae106d2494e18b4240bbf723a2ab6fac"}, "downloads": -1, "filename": "imgrender-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d93ce7a93fc1b688fee8fe9ecec6b849", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2881, "upload_time": "2019-10-02T14:48:25", "upload_time_iso_8601": "2019-10-02T14:48:25.709915Z", "url": "https://files.pythonhosted.org/packages/3e/38/f9b06f340e22d1e611dc7e485c911389f468b35e374f6a6045b59b6deba9/imgrender-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "facb6170f54a6306002da930094d7fdc", "sha256": "dd1cf5b9f8dff3afd1961cab425222b5fa907bea3aee0561d48a474f560cdac4"}, "downloads": -1, "filename": "imgrender-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "facb6170f54a6306002da930094d7fdc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4190, "upload_time": "2019-10-02T14:48:03", "upload_time_iso_8601": "2019-10-02T14:48:03.414946Z", "url": "https://files.pythonhosted.org/packages/8a/25/1759e7f73e62f645d9d8d011fe327048b4ba6ade0900246864f1087c6364/imgrender-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d93ce7a93fc1b688fee8fe9ecec6b849", "sha256": "34f12fe33b9b403558900844769b2a83ae106d2494e18b4240bbf723a2ab6fac"}, "downloads": -1, "filename": "imgrender-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d93ce7a93fc1b688fee8fe9ecec6b849", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2881, "upload_time": "2019-10-02T14:48:25", "upload_time_iso_8601": "2019-10-02T14:48:25.709915Z", "url": "https://files.pythonhosted.org/packages/3e/38/f9b06f340e22d1e611dc7e485c911389f468b35e374f6a6045b59b6deba9/imgrender-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:41 2020"}