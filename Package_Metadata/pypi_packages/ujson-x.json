{"info": {"author": "Jonas Tarnstrom, Pawel Troka", "author_email": "jonas.tarnstrom@esn.me, pawel.troka@outlook.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: C", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "UltraJSON-x\n=============\n.. image:: https://travis-ci.org/PawelTroka/ultrajson-x.svg?branch=master\n    :target: https://travis-ci.org/PawelTroka/ultrajson-x\n\nUltraJSON-x is an ultra fast JSON encoder and decoder written in pure C with bindings for Python 2.5+ and 3.\n\nFor a more painless day to day C/C++ JSON decoder experience please checkout ujson4c_, based on UltraJSON.\n\n.. _ujson4c: http://github.com/esnme/ujson4c/\n\n| Please checkout the rest of the projects in the Ultra series:\n| http://github.com/esnme/ultramemcache\n| http://github.com/esnme/ultramysql\n\nTo install it just run Pip as usual:\n\n.. code-block:: sh\n\n    $ pip install ujson-x\n\n============\nUsage\n============\nMay be used as a drop in replacement for most other JSON parsers for Python:\n\n.. code-block:: python\n\n    >>> import ujson\n    >>> ujson.dumps([{\"key\": \"value\"}, 81, True])\n    '[{\"key\":\"value\"},81,true]'\n    >>> ujson.loads(\"\"\"[{\"key\": \"value\"}, 81, true]\"\"\")\n    [{u'key': u'value'}, 81, True]\n\n~~~~~~~~~~~~~~~\nEncoder options\n~~~~~~~~~~~~~~~\nencode_html_chars\n-----------------\nUsed to enable special encoding of \"unsafe\" HTML characters into safer Unicode sequences. Default is ``False``:\n\n.. code-block:: python\n\n    >>> ujson.dumps(\"<script>John&Doe\", encode_html_chars=True)\n    '\"\\\\u003cscript\\\\u003eJohn\\\\u0026Doe\"'\n\nensure_ascii\n-------------\nLimits output to ASCII and escapes all extended characters above 127. Default is true. If your end format supports UTF-8 setting this option to false is highly recommended to save space:\n\n.. code-block:: python\n\n    >>> ujson.dumps(u\"\\xe5\\xe4\\xf6\")\n    '\"\\\\u00e5\\\\u00e4\\\\u00f6\"'\n    >>> ujson.dumps(u\"\\xe5\\xe4\\xf6\", ensure_ascii=False)\n    '\"\\xc3\\xa5\\xc3\\xa4\\xc3\\xb6\"'\n\nescape_forward_slashes\n----------------------\nControls whether forward slashes (``/``) are escaped. Default is ``True``:\n\n.. code-block:: python\n\n    >>> ujson.dumps(\"http://esn.me\")\n    '\"http:\\/\\/esn.me\"'\n    >>> ujson.dumps(\"http://esn.me\", escape_forward_slashes=False)\n    '\"http://esn.me\"'\n\nindent\n------\nControls whether indention (\"pretty output\") is enabled. Default is ``0`` (disabled):\n\n.. code-block:: python\n\n    >>> ujson.dumps({\"foo\": \"bar\"})\n    '{\"foo\":\"bar\"}'\n    >>> ujson.dumps({\"foo\": \"bar\"}, indent=4)\n    {\n        \"foo\":\"bar\"\n    }\n\n============\t\t\nBenchmarks\t\t\n============\t\t\n*UltraJSON-x* calls/sec compared to three other popular JSON parsers with performance gain specified below each.\n\n~~~~~~~~~~~~~\nTest machine:\n~~~~~~~~~~~~~\n\nLinux 3.13.0-66-generic x86_64 #108-Ubuntu SMP Wed Oct 7 15:20:27 UTC 2015\n\n~~~~~~~~~\nVersions:\n~~~~~~~~~\n\n- CPython 2.7.6 (default, Jun 22 2015, 17:58:13) [GCC 4.8.2]\n- blist     : 1.3.6\n- simplejson: 3.8.1\n- ujson     : 1.34 (0c52200eb4e2d97e548a765d5f089858c41967b0)\n- yajl      : 0.3.5\n\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n|                                                                               | ujson      | yajl       | simplejson | json       |\n+===============================================================================+============+============+============+============+\n| Array with 256 doubles                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    3508.19 |    5742.00 |    3232.38 |    3309.09 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   25103.37 |   11257.83 |   11696.26 |   11871.04 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 UTF-8 strings                                                  |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    3189.71 |    2717.14 |    2006.38 |    2961.72 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    1354.94 |     630.54 |     356.35 |     344.05 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 strings                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   18127.47 |   12537.39 |   12541.23 |   20001.00 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   23264.70 |   12788.85 |   25427.88 |    9352.36 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Medium complex object                                                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   10519.38 |    5021.29 |    3686.86 |    4643.47 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    9676.53 |    5326.79 |    8515.77 |    3017.30 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 True values                                                    |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |  105998.03 |  102067.28 |   44758.51 |   60424.80 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |  163869.96 |   78341.57 |  110859.36 |  115013.90 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 dict{string, int} pairs                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   13471.32 |   12109.09 |    3876.40 |    8833.92 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   16890.63 |    8946.07 |   12218.55 |    3350.72 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      50.25 |      46.45 |      13.82 |      29.28 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |      33.27 |      22.10 |      27.91 |      10.43 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      27.19 |            |       7.75 |       2.39 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Complex object                                                                |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |     577.98 |            |     387.81 |     470.02 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |     496.73 |     234.44 |     151.00 |     145.16 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n\n~~~~~~~~~\nVersions:\n~~~~~~~~~\n\n- CPython 3.4.3 (default, Oct 14 2015, 20:28:29) [GCC 4.8.4]\n- blist     : 1.3.6\n- simplejson: 3.8.1\n- ujson     : 1.34 (0c52200eb4e2d97e548a765d5f089858c41967b0)\n- yajl      : 0.3.5\n\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n|                                                                               | ujson      | yajl       | simplejson | json       |\n+===============================================================================+============+============+============+============+\n| Array with 256 doubles                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    3477.15 |    5732.24 |    3016.76 |    3071.99 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   23625.20 |    9731.45 |    9501.57 |    9901.92 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 UTF-8 strings                                                  |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    1995.89 |    2151.61 |    1771.98 |    1817.20 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    1425.04 |     625.38 |     327.14 |     305.95 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 strings                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   25461.75 |   12188.64 |   13054.76 |   14429.81 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   21981.31 |   17014.22 |   23869.48 |   22483.58 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Medium complex object                                                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   10821.46 |    4837.04 |    3114.04 |    4254.46 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    7887.77 |    5126.67 |    4934.60 |    6204.97 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 True values                                                    |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |  100452.86 |   94639.42 |   46657.63 |   60358.63 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |  148312.69 |   75485.90 |   88434.91 |  116395.51 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 dict{string, int} pairs                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   11698.13 |    8886.96 |    3043.69 |    6302.35 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   10686.40 |    7061.77 |    5646.80 |    7702.29 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      44.26 |      34.43 |      10.40 |      21.97 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |      28.46 |      23.95 |      18.70 |      22.83 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      33.60 |            |       6.94 |      22.34 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Complex object                                                                |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |     432.30 |            |     351.47 |     379.34 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |     434.40 |     221.97 |     149.57 |     147.79 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+", "description_content_type": "", "docs_url": null, "download_url": "http://github.com/PawelTroka/ultrajson-x", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/PawelTroka/ultrajson-x", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "ujson-x", "package_url": "https://pypi.org/project/ujson-x/", "platform": "any", "project_url": "https://pypi.org/project/ujson-x/", "project_urls": {"Download": "http://github.com/PawelTroka/ultrajson-x", "Homepage": "http://github.com/PawelTroka/ultrajson-x"}, "release_url": "https://pypi.org/project/ujson-x/1.37/", "requires_dist": null, "requires_python": "", "summary": "Ultra fast JSON encoder and decoder for Python", "version": "1.37", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/PawelTroka/ultrajson-x\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/PawelTroka/ultrajson-x.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a5d428e957a9e0a319131ace223c7c2a2f51e12/68747470733a2f2f7472617669732d63692e6f72672f506177656c54726f6b612f756c7472616a736f6e2d782e7376673f6272616e63683d6d6173746572\"></a>\n<p>UltraJSON-x is an ultra fast JSON encoder and decoder written in pure C with bindings for Python 2.5+ and 3.</p>\n<p>For a more painless day to day C/C++ JSON decoder experience please checkout <a href=\"http://github.com/esnme/ujson4c/\" rel=\"nofollow\">ujson4c</a>, based on UltraJSON.</p>\n<div>\n<div>Please checkout the rest of the projects in the Ultra series:</div>\n<div><a href=\"http://github.com/esnme/ultramemcache\" rel=\"nofollow\">http://github.com/esnme/ultramemcache</a></div>\n<div><a href=\"http://github.com/esnme/ultramysql\" rel=\"nofollow\">http://github.com/esnme/ultramysql</a></div>\n</div>\n<p>To install it just run Pip as usual:</p>\n<pre>$ pip install ujson-x\n</pre>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>May be used as a drop in replacement for most other JSON parsers for Python:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">ujson</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ujson</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">([{</span><span class=\"s2\">\"key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value\"</span><span class=\"p\">},</span> <span class=\"mi\">81</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">])</span>\n<span class=\"s1\">'[{\"key\":\"value\"},81,true]'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ujson</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"[{\"key\": \"value\"}, 81, true]\"\"\"</span><span class=\"p\">)</span>\n<span class=\"p\">[{</span><span class=\"sa\">u</span><span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'value'</span><span class=\"p\">},</span> <span class=\"mi\">81</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">]</span>\n</pre>\n<div id=\"encoder-options\">\n<h3>Encoder options</h3>\n<div id=\"encode-html-chars\">\n<h4>encode_html_chars</h4>\n<p>Used to enable special encoding of \u201cunsafe\u201d HTML characters into safer Unicode sequences. Default is <tt>False</tt>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ujson</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;script&gt;John&amp;Doe\"</span><span class=\"p\">,</span> <span class=\"n\">encode_html_chars</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"s1\">'\"</span><span class=\"se\">\\\\</span><span class=\"s1\">u003cscript</span><span class=\"se\">\\\\</span><span class=\"s1\">u003eJohn</span><span class=\"se\">\\\\</span><span class=\"s1\">u0026Doe\"'</span>\n</pre>\n</div>\n<div id=\"ensure-ascii\">\n<h4>ensure_ascii</h4>\n<p>Limits output to ASCII and escapes all extended characters above 127. Default is true. If your end format supports UTF-8 setting this option to false is highly recommended to save space:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ujson</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s2\">\"</span><span class=\"se\">\\xe5\\xe4\\xf6</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"s1\">'\"</span><span class=\"se\">\\\\</span><span class=\"s1\">u00e5</span><span class=\"se\">\\\\</span><span class=\"s1\">u00e4</span><span class=\"se\">\\\\</span><span class=\"s1\">u00f6\"'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ujson</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s2\">\"</span><span class=\"se\">\\xe5\\xe4\\xf6</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"n\">ensure_ascii</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"s1\">'\"</span><span class=\"se\">\\xc3\\xa5\\xc3\\xa4\\xc3\\xb6</span><span class=\"s1\">\"'</span>\n</pre>\n</div>\n<div id=\"escape-forward-slashes\">\n<h4>escape_forward_slashes</h4>\n<p>Controls whether forward slashes (<tt>/</tt>) are escaped. Default is <tt>True</tt>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ujson</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"s2\">\"http://esn.me\"</span><span class=\"p\">)</span>\n<span class=\"s1\">'\"http:\\/\\/esn.me\"'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ujson</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"s2\">\"http://esn.me\"</span><span class=\"p\">,</span> <span class=\"n\">escape_forward_slashes</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"s1\">'\"http://esn.me\"'</span>\n</pre>\n</div>\n<div id=\"indent\">\n<h4>indent</h4>\n<p>Controls whether indention (\u201cpretty output\u201d) is enabled. Default is <tt>0</tt> (disabled):</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ujson</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">({</span><span class=\"s2\">\"foo\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bar\"</span><span class=\"p\">})</span>\n<span class=\"s1\">'{\"foo\":\"bar\"}'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ujson</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">({</span><span class=\"s2\">\"foo\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bar\"</span><span class=\"p\">},</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"s2\">\"foo\"</span><span class=\"p\">:</span><span class=\"s2\">\"bar\"</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n</div>\n</div>\n<div id=\"benchmarks\">\n<h2>Benchmarks</h2>\n<p><em>UltraJSON-x</em> calls/sec compared to three other popular JSON parsers with performance gain specified below each.</p>\n<div id=\"test-machine\">\n<h3>Test machine:</h3>\n<p>Linux 3.13.0-66-generic x86_64 #108-Ubuntu SMP Wed Oct 7 15:20:27 UTC 2015</p>\n</div>\n<div id=\"versions\">\n<h3>Versions:</h3>\n<ul>\n<li>CPython 2.7.6 (default, Jun 22 2015, 17:58:13) [GCC 4.8.2]</li>\n<li>blist     : 1.3.6</li>\n<li>simplejson: 3.8.1</li>\n<li>ujson     : 1.34 (0c52200eb4e2d97e548a765d5f089858c41967b0)</li>\n<li>yajl      : 0.3.5</li>\n</ul>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>\u00a0</th>\n<th>ujson</th>\n<th>yajl</th>\n<th>simplejson</th>\n<th>json</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Array with 256 doubles</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>encode</td>\n<td>3508.19</td>\n<td>5742.00</td>\n<td>3232.38</td>\n<td>3309.09</td>\n</tr>\n<tr><td>decode</td>\n<td>25103.37</td>\n<td>11257.83</td>\n<td>11696.26</td>\n<td>11871.04</td>\n</tr>\n<tr><td>Array with 256 UTF-8 strings</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>encode</td>\n<td>3189.71</td>\n<td>2717.14</td>\n<td>2006.38</td>\n<td>2961.72</td>\n</tr>\n<tr><td>decode</td>\n<td>1354.94</td>\n<td>630.54</td>\n<td>356.35</td>\n<td>344.05</td>\n</tr>\n<tr><td>Array with 256 strings</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>encode</td>\n<td>18127.47</td>\n<td>12537.39</td>\n<td>12541.23</td>\n<td>20001.00</td>\n</tr>\n<tr><td>decode</td>\n<td>23264.70</td>\n<td>12788.85</td>\n<td>25427.88</td>\n<td>9352.36</td>\n</tr>\n<tr><td>Medium complex object</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>encode</td>\n<td>10519.38</td>\n<td>5021.29</td>\n<td>3686.86</td>\n<td>4643.47</td>\n</tr>\n<tr><td>decode</td>\n<td>9676.53</td>\n<td>5326.79</td>\n<td>8515.77</td>\n<td>3017.30</td>\n</tr>\n<tr><td>Array with 256 True values</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>encode</td>\n<td>105998.03</td>\n<td>102067.28</td>\n<td>44758.51</td>\n<td>60424.80</td>\n</tr>\n<tr><td>decode</td>\n<td>163869.96</td>\n<td>78341.57</td>\n<td>110859.36</td>\n<td>115013.90</td>\n</tr>\n<tr><td>Array with 256 dict{string, int} pairs</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>encode</td>\n<td>13471.32</td>\n<td>12109.09</td>\n<td>3876.40</td>\n<td>8833.92</td>\n</tr>\n<tr><td>decode</td>\n<td>16890.63</td>\n<td>8946.07</td>\n<td>12218.55</td>\n<td>3350.72</td>\n</tr>\n<tr><td>Dict with 256 arrays with 256 dict{string, int} pairs</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>encode</td>\n<td>50.25</td>\n<td>46.45</td>\n<td>13.82</td>\n<td>29.28</td>\n</tr>\n<tr><td>decode</td>\n<td>33.27</td>\n<td>22.10</td>\n<td>27.91</td>\n<td>10.43</td>\n</tr>\n<tr><td>Dict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>encode</td>\n<td>27.19</td>\n<td>\u00a0</td>\n<td>7.75</td>\n<td>2.39</td>\n</tr>\n<tr><td>Complex object</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>encode</td>\n<td>577.98</td>\n<td>\u00a0</td>\n<td>387.81</td>\n<td>470.02</td>\n</tr>\n<tr><td>decode</td>\n<td>496.73</td>\n<td>234.44</td>\n<td>151.00</td>\n<td>145.16</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"id1\">\n<h3>Versions:</h3>\n<ul>\n<li>CPython 3.4.3 (default, Oct 14 2015, 20:28:29) [GCC 4.8.4]</li>\n<li>blist     : 1.3.6</li>\n<li>simplejson: 3.8.1</li>\n<li>ujson     : 1.34 (0c52200eb4e2d97e548a765d5f089858c41967b0)</li>\n<li>yajl      : 0.3.5</li>\n</ul>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>\u00a0</th>\n<th>ujson</th>\n<th>yajl</th>\n<th>simplejson</th>\n<th>json</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Array with 256 doubles</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>encode</td>\n<td>3477.15</td>\n<td>5732.24</td>\n<td>3016.76</td>\n<td>3071.99</td>\n</tr>\n<tr><td>decode</td>\n<td>23625.20</td>\n<td>9731.45</td>\n<td>9501.57</td>\n<td>9901.92</td>\n</tr>\n<tr><td>Array with 256 UTF-8 strings</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>encode</td>\n<td>1995.89</td>\n<td>2151.61</td>\n<td>1771.98</td>\n<td>1817.20</td>\n</tr>\n<tr><td>decode</td>\n<td>1425.04</td>\n<td>625.38</td>\n<td>327.14</td>\n<td>305.95</td>\n</tr>\n<tr><td>Array with 256 strings</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>encode</td>\n<td>25461.75</td>\n<td>12188.64</td>\n<td>13054.76</td>\n<td>14429.81</td>\n</tr>\n<tr><td>decode</td>\n<td>21981.31</td>\n<td>17014.22</td>\n<td>23869.48</td>\n<td>22483.58</td>\n</tr>\n<tr><td>Medium complex object</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>encode</td>\n<td>10821.46</td>\n<td>4837.04</td>\n<td>3114.04</td>\n<td>4254.46</td>\n</tr>\n<tr><td>decode</td>\n<td>7887.77</td>\n<td>5126.67</td>\n<td>4934.60</td>\n<td>6204.97</td>\n</tr>\n<tr><td>Array with 256 True values</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>encode</td>\n<td>100452.86</td>\n<td>94639.42</td>\n<td>46657.63</td>\n<td>60358.63</td>\n</tr>\n<tr><td>decode</td>\n<td>148312.69</td>\n<td>75485.90</td>\n<td>88434.91</td>\n<td>116395.51</td>\n</tr>\n<tr><td>Array with 256 dict{string, int} pairs</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>encode</td>\n<td>11698.13</td>\n<td>8886.96</td>\n<td>3043.69</td>\n<td>6302.35</td>\n</tr>\n<tr><td>decode</td>\n<td>10686.40</td>\n<td>7061.77</td>\n<td>5646.80</td>\n<td>7702.29</td>\n</tr>\n<tr><td>Dict with 256 arrays with 256 dict{string, int} pairs</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>encode</td>\n<td>44.26</td>\n<td>34.43</td>\n<td>10.40</td>\n<td>21.97</td>\n</tr>\n<tr><td>decode</td>\n<td>28.46</td>\n<td>23.95</td>\n<td>18.70</td>\n<td>22.83</td>\n</tr>\n<tr><td>Dict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>encode</td>\n<td>33.60</td>\n<td>\u00a0</td>\n<td>6.94</td>\n<td>22.34</td>\n</tr>\n<tr><td>Complex object</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>encode</td>\n<td>432.30</td>\n<td>\u00a0</td>\n<td>351.47</td>\n<td>379.34</td>\n</tr>\n<tr><td>decode</td>\n<td>434.40</td>\n<td>221.97</td>\n<td>149.57</td>\n<td>147.79</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4953490, "releases": {"1.36": [{"comment_text": "", "digests": {"md5": "0e17623a7e51351c5855cadda12220c4", "sha256": "9f4052d4360a30ef7a5527c0310ff11919d6e7375ef0b2c1f7879f29f2fc43f1"}, "downloads": -1, "filename": "ujson-x-1.36.1.tar.gz", "has_sig": false, "md5_digest": "0e17623a7e51351c5855cadda12220c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 192605, "upload_time": "2019-03-15T18:35:45", "upload_time_iso_8601": "2019-03-15T18:35:45.985856Z", "url": "https://files.pythonhosted.org/packages/3a/72/511d80fc5ed6d9d3840f1875c7dd76114b3a307a52f1d8f09a2ea910ccb6/ujson-x-1.36.1.tar.gz", "yanked": false}], "1.37": [{"comment_text": "", "digests": {"md5": "20d02bdb976546f9d6158f1ac0e6fc81", "sha256": "914469954ed0cf8965b6bdbc138f518dbaa45e2d7909f75ded633d8a7461ea31"}, "downloads": -1, "filename": "ujson-x-1.37.tar.gz", "has_sig": false, "md5_digest": "20d02bdb976546f9d6158f1ac0e6fc81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7136046, "upload_time": "2019-03-18T11:17:29", "upload_time_iso_8601": "2019-03-18T11:17:29.879248Z", "url": "https://files.pythonhosted.org/packages/44/19/f2b98662b4c6e43dbe9e10d87a62358aeab5e45b49ef0bef4a583bbd34db/ujson-x-1.37.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "20d02bdb976546f9d6158f1ac0e6fc81", "sha256": "914469954ed0cf8965b6bdbc138f518dbaa45e2d7909f75ded633d8a7461ea31"}, "downloads": -1, "filename": "ujson-x-1.37.tar.gz", "has_sig": false, "md5_digest": "20d02bdb976546f9d6158f1ac0e6fc81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7136046, "upload_time": "2019-03-18T11:17:29", "upload_time_iso_8601": "2019-03-18T11:17:29.879248Z", "url": "https://files.pythonhosted.org/packages/44/19/f2b98662b4c6e43dbe9e10d87a62358aeab5e45b49ef0bef4a583bbd34db/ujson-x-1.37.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:41:20 2020"}