{"info": {"author": "Alexander Zhukov", "author_email": "zhukovaa90@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Distributed Computing", "Topic :: Utilities"], "description": "\u03bbambdify\r\n================================================\r\n\r\n| **lambdify** allows you to create AWS Lambda function directly from\r\n  the python code.\r\n| Just like that:\r\n\r\ninstall *lambdify*\\ \u2026\r\n\r\n.. code:: bash\r\n\r\n    $pip install lambdify\r\n\r\n\u2026create AWS Lambda with 4 lines of code:\r\n\r\n.. code:: python\r\n\r\n    from lambdify import Lambda\r\n\r\n\r\n    @Lambda.f(name='echo')\r\n    def echo(*args, **kwargs):\r\n        return args, kwargs\r\n\r\n    echo.create()\r\n\r\n    if __name__ == '__main__':\r\n        import getpass\r\n        echo(msg='Hello, {user}!'.format(user=getpass.getuser()))\r\n\r\nNow you can head over to your `AWS Lambda console`_ and behold your\r\n**echo** function\r\n\r\nThe goal\r\n========\r\n\r\nLambdify aims to unite convenient task queues API (i.e. `Celery`_,\r\n`Hue`_, `RQ\u2019s @job decorator`_) with AWS Lambda service coolest\r\nfeatures.\r\n\r\n| At present, there are some solutions, that allow you to create and\r\n  deploy lambdas, like `Zappa`_, `lambda-uploader`_, `lambder`_ etc.,\r\n  but they still have limitations of not being able to interact directly\r\n  with a python program.\r\n| lambdify overcomes such limitations by using the following algorithm:\r\n\r\n\r\nDocumentation\r\n=============\r\n\r\n.. code:: python\r\n\r\n    >>>from lambdify import Lambda\r\n    >>>help(Lambda)\r\n\r\n\r\n.. _AWS Lambda console: https://console.aws.amazon.com/lambda/\r\n.. _Celery: http://www.celeryproject.org/\r\n.. _Hue: http://huey.readthedocs.org/en/latest/#huey-s-api\r\n.. _RQ\u2019s @job decorator: http://python-rq.org/docs/\r\n.. _Zappa: https://github.com/Miserlou/Zappa\r\n.. _lambda-uploader: https://github.com/rackerlabs/lambda-uploader\r\n.. _lambder: https://github.com/LeafSoftware/python-lambder\r\n.. _dill: https://github.com/uqfoundation/dill", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ZhukovAlexander/lambdify", "keywords": "aws lambda task queue distributed computing", "license": "UNKNOWN", "maintainer": "", "maintainer_email": "", "name": "lambdify", "package_url": "https://pypi.org/project/lambdify/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/lambdify/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ZhukovAlexander/lambdify"}, "release_url": "https://pypi.org/project/lambdify/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"ambdify\">\n<h2>\u03bbambdify</h2>\n<div>\n<div><strong>lambdify</strong> allows you to create AWS Lambda function directly from\nthe python code.</div>\n<div>Just like that:</div>\n</div>\n<p>install <em>lambdify</em>\u2026</p>\n<pre><span class=\"nv\">$pip</span> install lambdify\n</pre>\n<p>\u2026create AWS Lambda with 4 lines of code:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambdify</span> <span class=\"kn\">import</span> <span class=\"n\">Lambda</span>\n\n\n<span class=\"nd\">@Lambda</span><span class=\"o\">.</span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'echo'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">echo</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span>\n\n<span class=\"n\">echo</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">getpass</span>\n    <span class=\"n\">echo</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"o\">=</span><span class=\"s1\">'Hello, </span><span class=\"si\">{user}</span><span class=\"s1\">!'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">getpass</span><span class=\"o\">.</span><span class=\"n\">getuser</span><span class=\"p\">()))</span>\n</pre>\n<p>Now you can head over to your <a href=\"https://console.aws.amazon.com/lambda/\" rel=\"nofollow\">AWS Lambda console</a> and behold your\n<strong>echo</strong> function</p>\n</div>\n<div id=\"the-goal\">\n<h2>The goal</h2>\n<p>Lambdify aims to unite convenient task queues API (i.e. <a href=\"http://www.celeryproject.org/\" rel=\"nofollow\">Celery</a>,\n<a href=\"http://huey.readthedocs.org/en/latest/#huey-s-api\" rel=\"nofollow\">Hue</a>, <a href=\"http://python-rq.org/docs/\" rel=\"nofollow\">RQ\u2019s @job decorator</a>) with AWS Lambda service coolest\nfeatures.</p>\n<div>\n<div>At present, there are some solutions, that allow you to create and\ndeploy lambdas, like <a href=\"https://github.com/Miserlou/Zappa\" rel=\"nofollow\">Zappa</a>, <a href=\"https://github.com/rackerlabs/lambda-uploader\" rel=\"nofollow\">lambda-uploader</a>, <a href=\"https://github.com/LeafSoftware/python-lambder\" rel=\"nofollow\">lambder</a> etc.,\nbut they still have limitations of not being able to interact directly\nwith a python program.</div>\n<div>lambdify overcomes such limitations by using the following algorithm:</div>\n</div>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span><span class=\"kn\">from</span> <span class=\"nn\">lambdify</span> <span class=\"kn\">import</span> <span class=\"n\">Lambda</span>\n<span class=\"o\">&gt;&gt;&gt;</span><span class=\"n\">help</span><span class=\"p\">(</span><span class=\"n\">Lambda</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2065293, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "e2aef4116b762fc6058a016d7c2de374", "sha256": "9c2c1e74b470de0f0349891207367c62e51103c45240d28b089e51323162c114"}, "downloads": -1, "filename": "lambdify-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e2aef4116b762fc6058a016d7c2de374", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18065, "upload_time": "2016-04-07T10:10:47", "upload_time_iso_8601": "2016-04-07T10:10:47.255182Z", "url": "https://files.pythonhosted.org/packages/07/c3/b11ec03078dc74e9f5e12b5cdf163b51faef0273b3b9e5387d7d0ce395db/lambdify-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "2acbaf821c2b98075acfaa0f67a8745f", "sha256": "0d2e441b5ec76429e89800860ed8d38dd710a44ac61242b89b5f8e98e35b1245"}, "downloads": -1, "filename": "lambdify-0.0.3.tar.gz", "has_sig": false, "md5_digest": "2acbaf821c2b98075acfaa0f67a8745f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19272, "upload_time": "2016-04-15T11:28:21", "upload_time_iso_8601": "2016-04-15T11:28:21.420460Z", "url": "https://files.pythonhosted.org/packages/e4/a1/2fa3a513d03fbb3a8e5a87b75f606ae3a69edaa25d1ae8d62626fb6ac5ed/lambdify-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2acbaf821c2b98075acfaa0f67a8745f", "sha256": "0d2e441b5ec76429e89800860ed8d38dd710a44ac61242b89b5f8e98e35b1245"}, "downloads": -1, "filename": "lambdify-0.0.3.tar.gz", "has_sig": false, "md5_digest": "2acbaf821c2b98075acfaa0f67a8745f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19272, "upload_time": "2016-04-15T11:28:21", "upload_time_iso_8601": "2016-04-15T11:28:21.420460Z", "url": "https://files.pythonhosted.org/packages/e4/a1/2fa3a513d03fbb3a8e5a87b75f606ae3a69edaa25d1ae8d62626fb6ac5ed/lambdify-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:02 2020"}