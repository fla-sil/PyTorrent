{"info": {"author": "Steven Herbst", "author_email": "sgherbst@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"], "description": "# pysvinst\n\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![Actions Status](https://github.com/sgherbst/pysvinst/workflows/Regression/badge.svg)](https://github.com/sgherbst/pysvinst/actions)\n[![codecov](https://codecov.io/gh/sgherbst/pysvinst/branch/master/graph/badge.svg)](https://codecov.io/gh/sgherbst/pysvinst)\n[![PyPI version](https://badge.fury.io/py/svinst.svg)](https://badge.fury.io/py/svinst)\n\nThis Python library examines SystemVerilog files to determine what modules are defined and what modules are instantiated.  The backend uses [sv-parser](https://github.com/dalance/sv-parser), which has good support of SystemVerilog 2017.\n\n## Purpose\n\nThe Verilog language has contains features for defining configs and libraries.  However, these features are not well-supported by open-source tools, and even some commercial synthesis tools.  By extracting a list of modules defined and instantiated in a file, a user can work around this problem by constructing their own design hierarchy outside of Verilog, and then passing that list of files back into the simulator / synthesis tool.\n\n## Installation\n\nThis package can be installed via pip:\n```shell\n> pip install svinst\n```\n\nAlternatively, you can clone the repository and build the package yourself.  This requires that [Rust](https://www.rust-lang.org/tools/install) is installed.\n```shell\n> git clone https://github.com/sgherbst/pysvinst.git\n> cd pysvinst\n> pip install -e .\n```\n\n## Usage\n\nThe main functionality of this package is provided through the function ``get_defs``.  In this first example, a list of module definitions is returned, each one containing a list module instantiations (if any) contained in that module definition.  \n\n```python\n>>> from svinst import get_defs\n>>> defs = get_defs('tests/verilog/test.sv')\n>>> _ = [print(str(def_)) for def_ in defs]\nModDef(\"A\", [\n])\nModDef(\"B\", [\n])\nModDef(\"C\", [\n  ModInst(\"A\", \"I0\"),\n  ModInst(\"B\", \"I1\")\n])\nModDef(\"D\", [\n  ModInst(\"X\", \"I0\"),\n  ModInst(\"Y\", \"I1\")\n])\n```\n\nIt is also possible to add define variables and include directory paths, since both of these can change the modules that get defined and instantiated:\n\n```python\n>>> get_defs('tests/verilog/inc_test.sv', includes=['tests/verilog'])\n>>> get_defs('tests/verilog/def_test.sv',\n             defines={'MODULE_NAME': 'module_name_from_define', 'EXTRA_INSTANCE': None})\n```\n\nIf there is a syntax error, an error message is printed and an Exception is raised.\n\n```python\n>>> get_defs('tests/verilog/broken.sv')\nparse failed: \"tests/verilog/broken.sv\"\n tests/verilog/broken.sv:5:10\n  |\n5 | endmodule\n  |  \n```\n\nFinally, the user can get a full syntax tree for advanced processing, using the command ``get_syntax_tree``.  That command also allows the arguments ``includes`` and ``defines``.\n\n```python\n>>> from svinst import get_syntax_tree\n>>> tree = get_syntax_tree('tests/verilog/simple.sv')\n>>> _ = [print(elem) for elem in tree]\nSyntaxNode(\"SourceText\", [\n  SyntaxNode(\"Description\", [\n    SyntaxNode(\"ModuleDeclaration\", [\n      SyntaxNode(\"ModuleDeclarationAnsi\", [\n        SyntaxNode(\"ModuleAnsiHeader\", [\n          SyntaxNode(\"ModuleKeyword\", [\n            SyntaxNode(\"Keyword\", [\n              SyntaxToken(\"module\", line=1)\n            ])\n          ]),\n          SyntaxNode(\"ModuleIdentifier\", [\n            SyntaxNode(\"Identifier\", [\n              SyntaxNode(\"SimpleIdentifier\", [\n                SyntaxToken(\"A\", line=1)\n              ])\n            ])\n          ]),\n          SyntaxNode(\"Symbol\", [\n            SyntaxToken(\";\", line=1)\n          ])\n        ]),\n        SyntaxNode(\"Keyword\", [\n          SyntaxToken(\"endmodule\", line=2)\n        ])\n      ])\n    ])\n  ])\n])\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/sgherbst/svinst/archive/v0.1.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sgherbst/svinst", "keywords": "verilog,system-verilog,system verilog,parse,parser,parsing,module,modules,definition,definitions,instantation,instantiations", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "svinst", "package_url": "https://pypi.org/project/svinst/", "platform": "", "project_url": "https://pypi.org/project/svinst/", "project_urls": {"Download": "https://github.com/sgherbst/svinst/archive/v0.1.1.tar.gz", "Homepage": "https://github.com/sgherbst/svinst"}, "release_url": "https://pypi.org/project/svinst/0.1.1/", "requires_dist": ["PyYAML"], "requires_python": ">=3.7", "summary": "Python library for parsing module definitions and instantiations from SystemVerilog files", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pysvinst</h1>\n<p><a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a>\n<a href=\"https://github.com/sgherbst/pysvinst/actions\" rel=\"nofollow\"><img alt=\"Actions Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4886c0515d1ca423a2b3a8c33928dd4cae7e41a7/68747470733a2f2f6769746875622e636f6d2f73676865726273742f70797376696e73742f776f726b666c6f77732f52656772657373696f6e2f62616467652e737667\"></a>\n<a href=\"https://codecov.io/gh/sgherbst/pysvinst\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/544ad3849729f1407f329b11b9216c93c4f0d6d2/68747470733a2f2f636f6465636f762e696f2f67682f73676865726273742f70797376696e73742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://badge.fury.io/py/svinst\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0907481527d24518ad130c8b451f9aa3e567d662/68747470733a2f2f62616467652e667572792e696f2f70792f7376696e73742e737667\"></a></p>\n<p>This Python library examines SystemVerilog files to determine what modules are defined and what modules are instantiated.  The backend uses <a href=\"https://github.com/dalance/sv-parser\" rel=\"nofollow\">sv-parser</a>, which has good support of SystemVerilog 2017.</p>\n<h2>Purpose</h2>\n<p>The Verilog language has contains features for defining configs and libraries.  However, these features are not well-supported by open-source tools, and even some commercial synthesis tools.  By extracting a list of modules defined and instantiated in a file, a user can work around this problem by constructing their own design hierarchy outside of Verilog, and then passing that list of files back into the simulator / synthesis tool.</p>\n<h2>Installation</h2>\n<p>This package can be installed via pip:</p>\n<pre>&gt; pip install svinst\n</pre>\n<p>Alternatively, you can clone the repository and build the package yourself.  This requires that <a href=\"https://www.rust-lang.org/tools/install\" rel=\"nofollow\">Rust</a> is installed.</p>\n<pre>&gt; git clone https://github.com/sgherbst/pysvinst.git\n&gt; <span class=\"nb\">cd</span> pysvinst\n&gt; pip install -e .\n</pre>\n<h2>Usage</h2>\n<p>The main functionality of this package is provided through the function <code>get_defs</code>.  In this first example, a list of module definitions is returned, each one containing a list module instantiations (if any) contained in that module definition.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">svinst</span> <span class=\"kn\">import</span> <span class=\"n\">get_defs</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">defs</span> <span class=\"o\">=</span> <span class=\"n\">get_defs</span><span class=\"p\">(</span><span class=\"s1\">'tests/verilog/test.sv'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">def_</span><span class=\"p\">))</span> <span class=\"k\">for</span> <span class=\"n\">def_</span> <span class=\"ow\">in</span> <span class=\"n\">defs</span><span class=\"p\">]</span>\n<span class=\"n\">ModDef</span><span class=\"p\">(</span><span class=\"s2\">\"A\"</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n<span class=\"p\">])</span>\n<span class=\"n\">ModDef</span><span class=\"p\">(</span><span class=\"s2\">\"B\"</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n<span class=\"p\">])</span>\n<span class=\"n\">ModDef</span><span class=\"p\">(</span><span class=\"s2\">\"C\"</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n  <span class=\"n\">ModInst</span><span class=\"p\">(</span><span class=\"s2\">\"A\"</span><span class=\"p\">,</span> <span class=\"s2\">\"I0\"</span><span class=\"p\">),</span>\n  <span class=\"n\">ModInst</span><span class=\"p\">(</span><span class=\"s2\">\"B\"</span><span class=\"p\">,</span> <span class=\"s2\">\"I1\"</span><span class=\"p\">)</span>\n<span class=\"p\">])</span>\n<span class=\"n\">ModDef</span><span class=\"p\">(</span><span class=\"s2\">\"D\"</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n  <span class=\"n\">ModInst</span><span class=\"p\">(</span><span class=\"s2\">\"X\"</span><span class=\"p\">,</span> <span class=\"s2\">\"I0\"</span><span class=\"p\">),</span>\n  <span class=\"n\">ModInst</span><span class=\"p\">(</span><span class=\"s2\">\"Y\"</span><span class=\"p\">,</span> <span class=\"s2\">\"I1\"</span><span class=\"p\">)</span>\n<span class=\"p\">])</span>\n</pre>\n<p>It is also possible to add define variables and include directory paths, since both of these can change the modules that get defined and instantiated:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">get_defs</span><span class=\"p\">(</span><span class=\"s1\">'tests/verilog/inc_test.sv'</span><span class=\"p\">,</span> <span class=\"n\">includes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'tests/verilog'</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">get_defs</span><span class=\"p\">(</span><span class=\"s1\">'tests/verilog/def_test.sv'</span><span class=\"p\">,</span>\n             <span class=\"n\">defines</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'MODULE_NAME'</span><span class=\"p\">:</span> <span class=\"s1\">'module_name_from_define'</span><span class=\"p\">,</span> <span class=\"s1\">'EXTRA_INSTANCE'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">})</span>\n</pre>\n<p>If there is a syntax error, an error message is printed and an Exception is raised.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">get_defs</span><span class=\"p\">(</span><span class=\"s1\">'tests/verilog/broken.sv'</span><span class=\"p\">)</span>\n<span class=\"n\">parse</span> <span class=\"n\">failed</span><span class=\"p\">:</span> <span class=\"s2\">\"tests/verilog/broken.sv\"</span>\n <span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">verilog</span><span class=\"o\">/</span><span class=\"n\">broken</span><span class=\"o\">.</span><span class=\"n\">sv</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"mi\">10</span>\n  <span class=\"o\">|</span>\n<span class=\"mi\">5</span> <span class=\"o\">|</span> <span class=\"n\">endmodule</span>\n  <span class=\"o\">|</span>  \n</pre>\n<p>Finally, the user can get a full syntax tree for advanced processing, using the command <code>get_syntax_tree</code>.  That command also allows the arguments <code>includes</code> and <code>defines</code>.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">svinst</span> <span class=\"kn\">import</span> <span class=\"n\">get_syntax_tree</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">get_syntax_tree</span><span class=\"p\">(</span><span class=\"s1\">'tests/verilog/simple.sv'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">elem</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">elem</span> <span class=\"ow\">in</span> <span class=\"n\">tree</span><span class=\"p\">]</span>\n<span class=\"n\">SyntaxNode</span><span class=\"p\">(</span><span class=\"s2\">\"SourceText\"</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n  <span class=\"n\">SyntaxNode</span><span class=\"p\">(</span><span class=\"s2\">\"Description\"</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n    <span class=\"n\">SyntaxNode</span><span class=\"p\">(</span><span class=\"s2\">\"ModuleDeclaration\"</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n      <span class=\"n\">SyntaxNode</span><span class=\"p\">(</span><span class=\"s2\">\"ModuleDeclarationAnsi\"</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n        <span class=\"n\">SyntaxNode</span><span class=\"p\">(</span><span class=\"s2\">\"ModuleAnsiHeader\"</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n          <span class=\"n\">SyntaxNode</span><span class=\"p\">(</span><span class=\"s2\">\"ModuleKeyword\"</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n            <span class=\"n\">SyntaxNode</span><span class=\"p\">(</span><span class=\"s2\">\"Keyword\"</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n              <span class=\"n\">SyntaxToken</span><span class=\"p\">(</span><span class=\"s2\">\"module\"</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"p\">])</span>\n          <span class=\"p\">]),</span>\n          <span class=\"n\">SyntaxNode</span><span class=\"p\">(</span><span class=\"s2\">\"ModuleIdentifier\"</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n            <span class=\"n\">SyntaxNode</span><span class=\"p\">(</span><span class=\"s2\">\"Identifier\"</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n              <span class=\"n\">SyntaxNode</span><span class=\"p\">(</span><span class=\"s2\">\"SimpleIdentifier\"</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n                <span class=\"n\">SyntaxToken</span><span class=\"p\">(</span><span class=\"s2\">\"A\"</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n              <span class=\"p\">])</span>\n            <span class=\"p\">])</span>\n          <span class=\"p\">]),</span>\n          <span class=\"n\">SyntaxNode</span><span class=\"p\">(</span><span class=\"s2\">\"Symbol\"</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n            <span class=\"n\">SyntaxToken</span><span class=\"p\">(</span><span class=\"s2\">\";\"</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n          <span class=\"p\">])</span>\n        <span class=\"p\">]),</span>\n        <span class=\"n\">SyntaxNode</span><span class=\"p\">(</span><span class=\"s2\">\"Keyword\"</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n          <span class=\"n\">SyntaxToken</span><span class=\"p\">(</span><span class=\"s2\">\"endmodule\"</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n        <span class=\"p\">])</span>\n      <span class=\"p\">])</span>\n    <span class=\"p\">])</span>\n  <span class=\"p\">])</span>\n<span class=\"p\">])</span>\n</pre>\n\n          </div>"}, "last_serial": 6974422, "releases": {"0.0.7": [{"comment_text": "", "digests": {"md5": "26981f77baaae0d1b44ff1961d42eb1f", "sha256": "b82677f8a48409acbd9386f496ab87275b35fb1e3f465d46031042361e0f0771"}, "downloads": -1, "filename": "svinst-0.0.7-cp37-cp37m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "26981f77baaae0d1b44ff1961d42eb1f", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.7", "size": 9584023, "upload_time": "2020-03-04T04:04:23", "upload_time_iso_8601": "2020-03-04T04:04:23.244632Z", "url": "https://files.pythonhosted.org/packages/4f/ce/90a8d2b4bd3d0d5cbbd3dfffe6aa2201f487a4c864289cde3df67525efb6/svinst-0.0.7-cp37-cp37m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67bf305dacba3473d7187a36adfc5c34", "sha256": "9ae482845e0ad6a4e2ba5891ad35dec676cbfceef860b513c60790f005b5f3ab"}, "downloads": -1, "filename": "svinst-0.0.7-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "67bf305dacba3473d7187a36adfc5c34", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.7", "size": 10882312, "upload_time": "2020-03-04T04:06:27", "upload_time_iso_8601": "2020-03-04T04:06:27.924975Z", "url": "https://files.pythonhosted.org/packages/71/d9/b34f5272fd82eaf8c4168c10f25943ddab3a5ad664b716cf62a673367342/svinst-0.0.7-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e96513c10a564ac944ae226c7371773", "sha256": "027f1bfebd54cc8e502ebde0f2c2b94bacf79df8cf07cb3640092774d16fe7f0"}, "downloads": -1, "filename": "svinst-0.0.7.tar.gz", "has_sig": false, "md5_digest": "9e96513c10a564ac944ae226c7371773", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5157, "upload_time": "2020-03-04T04:06:30", "upload_time_iso_8601": "2020-03-04T04:06:30.526785Z", "url": "https://files.pythonhosted.org/packages/85/0a/9d3ba1d01b73cffb75def7f3bb2cb4dd957bf3f9473e6fb4dde318812670/svinst-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "2ac664abdb1a21f120af283f6522f91c", "sha256": "ef7bf1c91badaf197747a44a4976ea2786d9ab881a9d0da438c42ff3f11f793b"}, "downloads": -1, "filename": "svinst-0.0.8-cp37-cp37m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "2ac664abdb1a21f120af283f6522f91c", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.7", "size": 9584026, "upload_time": "2020-03-04T04:30:15", "upload_time_iso_8601": "2020-03-04T04:30:15.682781Z", "url": "https://files.pythonhosted.org/packages/e7/1c/15743ccb6353f36c1328fb51f7ba47f4125a7983c50595d811840ad515b6/svinst-0.0.8-cp37-cp37m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "024c7f38a08137f3da114112aa037578", "sha256": "4f668807aecfee3a850b4cb8df74d204a6f7a7717837d31be76a52dd15c66e64"}, "downloads": -1, "filename": "svinst-0.0.8-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "024c7f38a08137f3da114112aa037578", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.7", "size": 10882315, "upload_time": "2020-03-04T04:32:54", "upload_time_iso_8601": "2020-03-04T04:32:54.621299Z", "url": "https://files.pythonhosted.org/packages/c3/a7/d6d9703c90e75d28cfb5ceac0bcae42806cb7a54470a37290090cb0042ae/svinst-0.0.8-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e12c53924ca9f3d3b8cab6ad34d3333", "sha256": "2ca38ab04dcb18e093779642ddbc033deacdc8de4adf655e4bf9a4c2435ff1d0"}, "downloads": -1, "filename": "svinst-0.0.8.tar.gz", "has_sig": false, "md5_digest": "0e12c53924ca9f3d3b8cab6ad34d3333", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5156, "upload_time": "2020-03-04T04:32:56", "upload_time_iso_8601": "2020-03-04T04:32:56.783008Z", "url": "https://files.pythonhosted.org/packages/12/8c/efb320b352e75c38b3ca8ee2541659285f87a1c28c3f6f606a95a20295cd/svinst-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "8eb3a04f487d5b2f345d0d44297076f2", "sha256": "56ffd35cab5248586c58ef601857745cc1aa3dd1e998d85deb88c5ab167eaef7"}, "downloads": -1, "filename": "svinst-0.0.9-cp37-cp37m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "8eb3a04f487d5b2f345d0d44297076f2", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.7", "size": 9762009, "upload_time": "2020-04-07T04:02:37", "upload_time_iso_8601": "2020-04-07T04:02:37.861892Z", "url": "https://files.pythonhosted.org/packages/b9/99/531488cd210e68a6ecd5fe91fd77050770ad71b14aa0117a0902a19f10dd/svinst-0.0.9-cp37-cp37m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9aa150843b749065b95d9d679ad93538", "sha256": "2d038028669650d349ea4e997a368df7632be386495fd7d327af6bea476fbe36"}, "downloads": -1, "filename": "svinst-0.0.9-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "9aa150843b749065b95d9d679ad93538", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.7", "size": 10963126, "upload_time": "2020-04-07T04:03:37", "upload_time_iso_8601": "2020-04-07T04:03:37.596563Z", "url": "https://files.pythonhosted.org/packages/1e/97/b457adfc68eb74cc42c4a89b0c59a0b97291f29197c44517f819755095e0/svinst-0.0.9-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c15cfd8dabfa5344b064a1099f20d332", "sha256": "94e5662d57cd78857adb32bd7f5a2fff3681c5e493b249bd0af111f11a8de14a"}, "downloads": -1, "filename": "svinst-0.0.9.tar.gz", "has_sig": false, "md5_digest": "c15cfd8dabfa5344b064a1099f20d332", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5312, "upload_time": "2020-04-07T04:03:39", "upload_time_iso_8601": "2020-04-07T04:03:39.486578Z", "url": "https://files.pythonhosted.org/packages/e4/e1/7b71a24eb2bfb75a6b545ec038486c5f4d5e04195b82f406b96990dff541/svinst-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "d9958904491d8093dd847468e1ab5dfd", "sha256": "d051e1a0d5cfcda4252aa0fe1d16147c462963c8882dc3a8f70df1905e5d37b1"}, "downloads": -1, "filename": "svinst-0.1.0-cp37-cp37m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "d9958904491d8093dd847468e1ab5dfd", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.7", "size": 9676846, "upload_time": "2020-04-07T05:47:13", "upload_time_iso_8601": "2020-04-07T05:47:13.945960Z", "url": "https://files.pythonhosted.org/packages/d5/eb/58bac129d32d211e174d26e23b27eeec5072d8ed8195dd812cf0dcb1c429/svinst-0.1.0-cp37-cp37m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a3650b9163cc373f2e7559c878c1c50", "sha256": "d4b901443c4cda8734b9412e7d1645fef1c1ca67d599ec7090d602027771aa87"}, "downloads": -1, "filename": "svinst-0.1.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "2a3650b9163cc373f2e7559c878c1c50", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.7", "size": 10970106, "upload_time": "2020-04-07T05:49:26", "upload_time_iso_8601": "2020-04-07T05:49:26.161287Z", "url": "https://files.pythonhosted.org/packages/b1/f8/3f925ad6b2c0a96a84233dff7738849381bffc61b562b661ae0eae4227e4/svinst-0.1.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7531ce7625ea81c465189926b5bf6d6f", "sha256": "e61e3a9d4142d2b8c53dda1c2572225441881e5abb4a87720c2cfde4ecb3ed42"}, "downloads": -1, "filename": "svinst-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7531ce7625ea81c465189926b5bf6d6f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5310, "upload_time": "2020-04-07T05:49:27", "upload_time_iso_8601": "2020-04-07T05:49:27.904813Z", "url": "https://files.pythonhosted.org/packages/e2/5f/de2f3cebe8ec98223048084bbb6b2a7c8563da304f536946da5a58d47796/svinst-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "be9b14202c2b1fce6a0fec841a2c85b3", "sha256": "94207145f1340e0904e9b2fbb68659ee41cc4f8744a4f6e3be4e8aeb81f4d7d9"}, "downloads": -1, "filename": "svinst-0.1.1-cp37-cp37m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "be9b14202c2b1fce6a0fec841a2c85b3", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.7", "size": 9676848, "upload_time": "2020-04-08T01:28:09", "upload_time_iso_8601": "2020-04-08T01:28:09.415668Z", "url": "https://files.pythonhosted.org/packages/f7/48/ad2d5481823064da6f20c0dc815ce4ab70535950c951c2659bd1b3e4eae6/svinst-0.1.1-cp37-cp37m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7ccf86b0305524b10ec539b61631686", "sha256": "a650321da827990db37e2984e3ddd6d8a1aecef955273a9d3e7904f29316303c"}, "downloads": -1, "filename": "svinst-0.1.1-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "f7ccf86b0305524b10ec539b61631686", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.7", "size": 10970104, "upload_time": "2020-04-08T01:31:30", "upload_time_iso_8601": "2020-04-08T01:31:30.204672Z", "url": "https://files.pythonhosted.org/packages/18/ea/6c1f66541d49535defa3496425ba97345b7c30f5773fb7d528b5cc18240e/svinst-0.1.1-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "142159aee6534fcb708470057f5c0c04", "sha256": "24f087e820c32ed19ab1b73f6fe951864b686a5c6a7bd9aa824e3b186e287380"}, "downloads": -1, "filename": "svinst-0.1.1.tar.gz", "has_sig": false, "md5_digest": "142159aee6534fcb708470057f5c0c04", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5325, "upload_time": "2020-04-08T01:31:32", "upload_time_iso_8601": "2020-04-08T01:31:32.542037Z", "url": "https://files.pythonhosted.org/packages/7a/c6/9926ee5faaa2ea5191654b2735191de9edb20244cc93749b0d9fb8296723/svinst-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be9b14202c2b1fce6a0fec841a2c85b3", "sha256": "94207145f1340e0904e9b2fbb68659ee41cc4f8744a4f6e3be4e8aeb81f4d7d9"}, "downloads": -1, "filename": "svinst-0.1.1-cp37-cp37m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "be9b14202c2b1fce6a0fec841a2c85b3", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.7", "size": 9676848, "upload_time": "2020-04-08T01:28:09", "upload_time_iso_8601": "2020-04-08T01:28:09.415668Z", "url": "https://files.pythonhosted.org/packages/f7/48/ad2d5481823064da6f20c0dc815ce4ab70535950c951c2659bd1b3e4eae6/svinst-0.1.1-cp37-cp37m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7ccf86b0305524b10ec539b61631686", "sha256": "a650321da827990db37e2984e3ddd6d8a1aecef955273a9d3e7904f29316303c"}, "downloads": -1, "filename": "svinst-0.1.1-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "f7ccf86b0305524b10ec539b61631686", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.7", "size": 10970104, "upload_time": "2020-04-08T01:31:30", "upload_time_iso_8601": "2020-04-08T01:31:30.204672Z", "url": "https://files.pythonhosted.org/packages/18/ea/6c1f66541d49535defa3496425ba97345b7c30f5773fb7d528b5cc18240e/svinst-0.1.1-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "142159aee6534fcb708470057f5c0c04", "sha256": "24f087e820c32ed19ab1b73f6fe951864b686a5c6a7bd9aa824e3b186e287380"}, "downloads": -1, "filename": "svinst-0.1.1.tar.gz", "has_sig": false, "md5_digest": "142159aee6534fcb708470057f5c0c04", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5325, "upload_time": "2020-04-08T01:31:32", "upload_time_iso_8601": "2020-04-08T01:31:32.542037Z", "url": "https://files.pythonhosted.org/packages/7a/c6/9926ee5faaa2ea5191654b2735191de9edb20244cc93749b0d9fb8296723/svinst-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:49 2020"}