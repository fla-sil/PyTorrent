{"info": {"author": "Sylvain Fankhauser", "author_email": "sylvain@fankhauser.name", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4"], "description": "What's that?\n============\n\n`dprj` is an algorithm that extracts sounds from words. It's similar to\nmetaphone, except it's targeted at the french language only. While double\nmetaphone or similar can be ok to regroup content that sound more or less the\nsame, it becomes unusable when you want to get the real pronunciation of a\nword, since it's mainly targeted at english. And we all know french can be\nreally tricky sometimes.\n\nHow to use it?\n==============\n\nInstall it from PyPI::\n\n    pip install dprj\n\nThen just use the ``say`` function:\n\n.. code-block:: python\n\n    >> from dprj import say\n    >> say(u'chaussette')\n    u'xst'\n    >> say(u'psychologue')\n    u'psklg'\n    >> say(u'agglom\u00e9ration')\n    u'glmrsn'\n    >> say(u'acc\u00e8s')\n    u'ks'\n\nHow reliable is it?\n===================\n\nWell, try it and see for yourself! There are still some cases to handle:\n\n* some plurals\n* some silent final letters (eg. 'r')\n* french weirdnesses\n\nIf you get incorrect results for any word please let me know by filing and\nissue.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sephii/dprj", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "dprj", "package_url": "https://pypi.org/project/dprj/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dprj/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/sephii/dprj"}, "release_url": "https://pypi.org/project/dprj/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Double-metaphone-like algorithm for the french language", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"what-s-that\">\n<h2>What\u2019s that?</h2>\n<p><cite>dprj</cite> is an algorithm that extracts sounds from words. It\u2019s similar to\nmetaphone, except it\u2019s targeted at the french language only. While double\nmetaphone or similar can be ok to regroup content that sound more or less the\nsame, it becomes unusable when you want to get the real pronunciation of a\nword, since it\u2019s mainly targeted at english. And we all know french can be\nreally tricky sometimes.</p>\n</div>\n<div id=\"how-to-use-it\">\n<h2>How to use it?</h2>\n<p>Install it from PyPI:</p>\n<pre>pip install dprj\n</pre>\n<p>Then just use the <tt>say</tt> function:</p>\n<pre><span class=\"o\">&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">dprj</span> <span class=\"kn\">import</span> <span class=\"n\">say</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">say</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s1\">'chaussette'</span><span class=\"p\">)</span>\n<span class=\"sa\">u</span><span class=\"s1\">'xst'</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">say</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s1\">'psychologue'</span><span class=\"p\">)</span>\n<span class=\"sa\">u</span><span class=\"s1\">'psklg'</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">say</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s1\">'agglom\u00e9ration'</span><span class=\"p\">)</span>\n<span class=\"sa\">u</span><span class=\"s1\">'glmrsn'</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">say</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s1\">'acc\u00e8s'</span><span class=\"p\">)</span>\n<span class=\"sa\">u</span><span class=\"s1\">'ks'</span>\n</pre>\n</div>\n<div id=\"how-reliable-is-it\">\n<h2>How reliable is it?</h2>\n<p>Well, try it and see for yourself! There are still some cases to handle:</p>\n<ul>\n<li>some plurals</li>\n<li>some silent final letters (eg. \u2018r\u2019)</li>\n<li>french weirdnesses</li>\n</ul>\n<p>If you get incorrect results for any word please let me know by filing and\nissue.</p>\n</div>\n\n          </div>"}, "last_serial": 1293787, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9cd315e2baa7dbfaf357810582984ffe", "sha256": "89757f93ac3c54bce6fdc4a3b7077ead5ba9b3f452bd4c7c21f8c0c934d1637b"}, "downloads": -1, "filename": "dprj-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9cd315e2baa7dbfaf357810582984ffe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3598, "upload_time": "2014-11-04T10:01:12", "upload_time_iso_8601": "2014-11-04T10:01:12.840487Z", "url": "https://files.pythonhosted.org/packages/ed/dd/431c5bce0d45db306bc239eb10514b3910fe2950a2684f4e8d63b82cd3ec/dprj-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9cd315e2baa7dbfaf357810582984ffe", "sha256": "89757f93ac3c54bce6fdc4a3b7077ead5ba9b3f452bd4c7c21f8c0c934d1637b"}, "downloads": -1, "filename": "dprj-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9cd315e2baa7dbfaf357810582984ffe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3598, "upload_time": "2014-11-04T10:01:12", "upload_time_iso_8601": "2014-11-04T10:01:12.840487Z", "url": "https://files.pythonhosted.org/packages/ed/dd/431c5bce0d45db306bc239eb10514b3910fe2950a2684f4e8d63b82cd3ec/dprj-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:00 2020"}