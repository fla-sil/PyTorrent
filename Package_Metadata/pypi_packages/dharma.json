{"info": {"author": "Christoph Diehl", "author_email": "cdiehl@mozilla.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Security", "Topic :: Software Development :: Testing"], "description": "<p align=\"center\">\n  <img src=\"https://github.com/posidron/posidron.github.io/raw/master/static/images/dharma.png\" alt=\"Logo\" />\n</p>\n\n<p align=\"center\">\nGeneration-based, context-free grammar fuzzer.\n</p>\n\n<p align=\"center\">\n<a href=\"https://travis-ci.org/MozillaSecurity/dharma\"><img src=\"https://api.travis-ci.org/MozillaSecurity/dharma.svg?branch=master\" alt=\"Build Status\"></a>\n<a href=\"https://www.irccloud.com/invite?channel=%23fuzzing&amp;hostname=irc.mozilla.org&amp;port=6697&amp;ssl=1\"><img src=\"https://img.shields.io/badge/IRC-%23fuzzing-1e72ff.svg?style=flat\" alt=\"IRC\"></a>\n</p>\n\n<p align=\"center\">\n<img src=\"https://raw.githubusercontent.com/posidron/posidron.github.io/master/static/images/dharma.gif\">\n</p>\n\n<h2>Table of Contents</h2>\n\n- [Run](#Run)\n  - [pip](#pip)\n  - [pipenv](#pipenv)\n  - [package](#package)\n  - [Docker](#Docker)\n- [Examples](#Examples)\n- [Development](#Development)\n- [Dharma Grammar Cheatsheet](#Dharma-Grammar-Cheatsheet)\n- [API Documentation](#API-Documentation)\n- [Dharma in the Public](#Dharma-in-the-Public)\n\n## Run\n\nAll roads lead to Rome but Python 3.x is the prefered vehicle.\n\n### pip\n\n```bash\npip install dharma\ndharma --help\n```\n\n### pipenv\n\n```bash\npipenv install --dev\npipenv run dharma --help\n```\n\n### package\n\n```bash\npython -m dharma --help\n```\n\n### Docker\n\n```bash\ndocker build -t dharma .\ndocker run --rm -it dharma -grammars dharma/grammars/canvas2d.dg\n```\n\n## Examples\n\nGenerate a single test-case and print it to `stdout`. Multiple grammars can be appended to the `-grammars` argument.\n\n```bash\ndharma -grammars dharma/grammars/canvas2d.dg\n```\n\nGenerating multiple test-cases and save the result to disk.\n\n```bash\ndharma -grammars dharma/grammars/canvas2d.dg -storage . -count 5\n```\n\nGenerate test-cases and serve them in a template via WebSocket.\nLaunch `dharma/grammars/var/index.html` in the browser after Dharma launched.\n\n```bash\ndharma -grammars dharma/grammars/canvas2d.dg -server -template grammars/var/templates/html5/default.html\n```\n\nBenchmark the generator.\n\n```bash\ntime dharma -grammars dharma/grammars/canvas2d.dg -count 10000 > /dev/null\n```\n\n## Development\n\n### PyLint\n\nIn case you run PyLint 1.9.2 and Python 3.7 you need to upgrade PyLint.\n\n```bash\npip3 install pylint astroid --pre -U\n```\n\n## Dharma Grammar Cheatsheet\n\n### Comments\n\n```\n%%% comment\n```\n\n### Controls\n\n```\n%const% name := value\n```\n\n### Sections\n\n```\n%section% := value\n%section% := variable\n%section% := variance\n```\n\n### Extension Methods\n\nRefer to `extensions.py` in `dharma/core/` and to the `xref_registry` in the `DharmaMachine` class to add further extensions.\n\n```\n%range%(0-9)\n%range%(0.0-9.0)\n%range%(a-z)\n%range%(!-~)\n%range%(0x100-0x200)\n\n%repeat%(+variable+)\n%repeat%(+variable+, \", \")\n\n%uri%(path)\n%uri%(lookup_key)\n\n%block%(path)\n\n%choice%(foo, \"bar\", 1)\n```\n\n### Assigning Values\n\n```\ndigit :=\n    %range%(0-9)\n\nsign :=\n    +\n    -\n\nvalue :=\n    +sign+%repeat%(+digit+)\n```\n\n### Using Values\n\n```\n+value+\n```\n\n### Assigning Variables\n\n```\nvariable :=\n    @variable@ = new Foo();\n```\n\n### Using Variables\n\n```\nvalue :=\n    !variable!.bar();\n```\n\n### Referencing values from `common.dg`\n\n```\nvalue :=\n    attribute=+common:number+\n```\n\n### Calling JavaScript library methods\n\n```\nfoo :=\n    Random.pick([0,1]);\n```\n\n## API Documentation\n\n- https://mozillasecurity.github.io/dharma\n\n## Dharma in the Public\n\nDharma mentionings in the news.\n\n- https://www.zerodayinitiative.com/blog/2019/1/31/implementing-fuzz-logics-with-dharma\n- http://blog.ret2.io/2018/06/13/pwn2own-2018-vulnerability-discovery/\n- https://blog.mozilla.org/security/2015/06/29/dharma/\n- https://www.redpacketsecurity.com/dharma-generation-based-context-free-grammar-fuzzing-tool/\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/MozillaSecurity/dharma/tarball/1.3.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MozillaSecurity/dharma", "keywords": "fuzzer fuzzing security testing generator", "license": "MPL 2.0", "maintainer": "Mozilla Fuzzing Team", "maintainer_email": "fuzzing@mozilla.com", "name": "dharma", "package_url": "https://pypi.org/project/dharma/", "platform": "", "project_url": "https://pypi.org/project/dharma/", "project_urls": {"Bug Tracker": "https://github.com/MozillaSecurity/dharma/issues", "Download": "https://github.com/MozillaSecurity/dharma/tarball/1.3.1", "Homepage": "https://github.com/MozillaSecurity/dharma"}, "release_url": "https://pypi.org/project/dharma/1.3.1/", "requires_dist": null, "requires_python": "", "summary": "Generation-based, context-free grammar fuzzer.", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n  <img alt=\"Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/50011521b8646b14b56492fe2a2dac6c94fbf6a5/68747470733a2f2f6769746875622e636f6d2f706f736964726f6e2f706f736964726f6e2e6769746875622e696f2f7261772f6d61737465722f7374617469632f696d616765732f646861726d612e706e67\">\n</p>\n<p align=\"center\">\nGeneration-based, context-free grammar fuzzer.\n</p>\n<p align=\"center\">\n<a href=\"https://travis-ci.org/MozillaSecurity/dharma\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd0104fbc5e76eb59f38c7ce72229adbf6a9f1fb/68747470733a2f2f6170692e7472617669732d63692e6f72672f4d6f7a696c6c6153656375726974792f646861726d612e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://www.irccloud.com/invite?channel=%23fuzzing&amp;hostname=irc.mozilla.org&amp;port=6697&amp;ssl=1\" rel=\"nofollow\"><img alt=\"IRC\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/04bc7184bde9d31f4b620c5378b9e7da69907ffb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4952432d25323366757a7a696e672d3165373266662e7376673f7374796c653d666c6174\"></a>\n</p>\n<p align=\"center\">\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e3dc06b1a6a2860a70c05906d15a92517ff8363/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f706f736964726f6e2f706f736964726f6e2e6769746875622e696f2f6d61737465722f7374617469632f696d616765732f646861726d612e676966\">\n</p>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#Run\" rel=\"nofollow\">Run</a>\n<ul>\n<li><a href=\"#pip\" rel=\"nofollow\">pip</a></li>\n<li><a href=\"#pipenv\" rel=\"nofollow\">pipenv</a></li>\n<li><a href=\"#package\" rel=\"nofollow\">package</a></li>\n<li><a href=\"#Docker\" rel=\"nofollow\">Docker</a></li>\n</ul>\n</li>\n<li><a href=\"#Examples\" rel=\"nofollow\">Examples</a></li>\n<li><a href=\"#Development\" rel=\"nofollow\">Development</a></li>\n<li><a href=\"#Dharma-Grammar-Cheatsheet\" rel=\"nofollow\">Dharma Grammar Cheatsheet</a></li>\n<li><a href=\"#API-Documentation\" rel=\"nofollow\">API Documentation</a></li>\n<li><a href=\"#Dharma-in-the-Public\" rel=\"nofollow\">Dharma in the Public</a></li>\n</ul>\n<h2>Run</h2>\n<p>All roads lead to Rome but Python 3.x is the prefered vehicle.</p>\n<h3>pip</h3>\n<pre>pip install dharma\ndharma --help\n</pre>\n<h3>pipenv</h3>\n<pre>pipenv install --dev\npipenv run dharma --help\n</pre>\n<h3>package</h3>\n<pre>python -m dharma --help\n</pre>\n<h3>Docker</h3>\n<pre>docker build -t dharma .\ndocker run --rm -it dharma -grammars dharma/grammars/canvas2d.dg\n</pre>\n<h2>Examples</h2>\n<p>Generate a single test-case and print it to <code>stdout</code>. Multiple grammars can be appended to the <code>-grammars</code> argument.</p>\n<pre>dharma -grammars dharma/grammars/canvas2d.dg\n</pre>\n<p>Generating multiple test-cases and save the result to disk.</p>\n<pre>dharma -grammars dharma/grammars/canvas2d.dg -storage . -count <span class=\"m\">5</span>\n</pre>\n<p>Generate test-cases and serve them in a template via WebSocket.\nLaunch <code>dharma/grammars/var/index.html</code> in the browser after Dharma launched.</p>\n<pre>dharma -grammars dharma/grammars/canvas2d.dg -server -template grammars/var/templates/html5/default.html\n</pre>\n<p>Benchmark the generator.</p>\n<pre><span class=\"nb\">time</span> dharma -grammars dharma/grammars/canvas2d.dg -count <span class=\"m\">10000</span> &gt; /dev/null\n</pre>\n<h2>Development</h2>\n<h3>PyLint</h3>\n<p>In case you run PyLint 1.9.2 and Python 3.7 you need to upgrade PyLint.</p>\n<pre>pip3 install pylint astroid --pre -U\n</pre>\n<h2>Dharma Grammar Cheatsheet</h2>\n<h3>Comments</h3>\n<pre><code>%%% comment\n</code></pre>\n<h3>Controls</h3>\n<pre><code>%const% name := value\n</code></pre>\n<h3>Sections</h3>\n<pre><code>%section% := value\n%section% := variable\n%section% := variance\n</code></pre>\n<h3>Extension Methods</h3>\n<p>Refer to <code>extensions.py</code> in <code>dharma/core/</code> and to the <code>xref_registry</code> in the <code>DharmaMachine</code> class to add further extensions.</p>\n<pre><code>%range%(0-9)\n%range%(0.0-9.0)\n%range%(a-z)\n%range%(!-~)\n%range%(0x100-0x200)\n\n%repeat%(+variable+)\n%repeat%(+variable+, \", \")\n\n%uri%(path)\n%uri%(lookup_key)\n\n%block%(path)\n\n%choice%(foo, \"bar\", 1)\n</code></pre>\n<h3>Assigning Values</h3>\n<pre><code>digit :=\n    %range%(0-9)\n\nsign :=\n    +\n    -\n\nvalue :=\n    +sign+%repeat%(+digit+)\n</code></pre>\n<h3>Using Values</h3>\n<pre><code>+value+\n</code></pre>\n<h3>Assigning Variables</h3>\n<pre><code>variable :=\n    @variable@ = new Foo();\n</code></pre>\n<h3>Using Variables</h3>\n<pre><code>value :=\n    !variable!.bar();\n</code></pre>\n<h3>Referencing values from <code>common.dg</code></h3>\n<pre><code>value :=\n    attribute=+common:number+\n</code></pre>\n<h3>Calling JavaScript library methods</h3>\n<pre><code>foo :=\n    Random.pick([0,1]);\n</code></pre>\n<h2>API Documentation</h2>\n<ul>\n<li><a href=\"https://mozillasecurity.github.io/dharma\" rel=\"nofollow\">https://mozillasecurity.github.io/dharma</a></li>\n</ul>\n<h2>Dharma in the Public</h2>\n<p>Dharma mentionings in the news.</p>\n<ul>\n<li><a href=\"https://www.zerodayinitiative.com/blog/2019/1/31/implementing-fuzz-logics-with-dharma\" rel=\"nofollow\">https://www.zerodayinitiative.com/blog/2019/1/31/implementing-fuzz-logics-with-dharma</a></li>\n<li><a href=\"http://blog.ret2.io/2018/06/13/pwn2own-2018-vulnerability-discovery/\" rel=\"nofollow\">http://blog.ret2.io/2018/06/13/pwn2own-2018-vulnerability-discovery/</a></li>\n<li><a href=\"https://blog.mozilla.org/security/2015/06/29/dharma/\" rel=\"nofollow\">https://blog.mozilla.org/security/2015/06/29/dharma/</a></li>\n<li><a href=\"https://www.redpacketsecurity.com/dharma-generation-based-context-free-grammar-fuzzing-tool/\" rel=\"nofollow\">https://www.redpacketsecurity.com/dharma-generation-based-context-free-grammar-fuzzing-tool/</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6245263, "releases": {"1.1": [{"comment_text": "", "digests": {"md5": "8204e50e3c8c4c02f77ea740c8ca1b33", "sha256": "3768a5b5c078be5bc10289dd7d6a6df458c7e09e92d4e718fbf289684f765e90"}, "downloads": -1, "filename": "dharma-1.1.tar.gz", "has_sig": false, "md5_digest": "8204e50e3c8c4c02f77ea740c8ca1b33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2607, "upload_time": "2015-04-21T21:07:57", "upload_time_iso_8601": "2015-04-21T21:07:57.974232Z", "url": "https://files.pythonhosted.org/packages/15/ba/730a797cd913337c24adcfaa7c50f70648c8f0bf77f12c4511c13c845f9d/dharma-1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "1071c2d56840b340f15d4c3eb07d14cb", "sha256": "7e989ad28427c1e0ea0535c76fa1f7d25cfbb9e02e28176166a2604c4ab37aad"}, "downloads": -1, "filename": "dharma-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1071c2d56840b340f15d4c3eb07d14cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 42603, "upload_time": "2018-12-15T07:01:46", "upload_time_iso_8601": "2018-12-15T07:01:46.703367Z", "url": "https://files.pythonhosted.org/packages/e6/84/b791c49dc3008e65e5e12cabb68de5e29d86a413c98d96fb50f1e7c265fe/dharma-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3df67c90a0e9ecdb3e088a0a1eeff261", "sha256": "e14cbc420275721931da8dd4d8d876024c0eb56e4f9f31de5679a66f65103c1e"}, "downloads": -1, "filename": "dharma-1.2.0.tar.gz", "has_sig": false, "md5_digest": "3df67c90a0e9ecdb3e088a0a1eeff261", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34403, "upload_time": "2018-12-15T07:01:48", "upload_time_iso_8601": "2018-12-15T07:01:48.433009Z", "url": "https://files.pythonhosted.org/packages/a8/5e/889d79e5bf6148e4c5dfa53022cf7e0fc4fb5aaac9178bb45854651267d2/dharma-1.2.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "803cdec7631dd75bc45c5cb119813987", "sha256": "e5e3f562a6357c1ac91fe1a837b6c704cd184cfe040234f2d8a01a2300637a8b"}, "downloads": -1, "filename": "dharma-1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "803cdec7631dd75bc45c5cb119813987", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 43321, "upload_time": "2019-12-05T03:24:12", "upload_time_iso_8601": "2019-12-05T03:24:12.867930Z", "url": "https://files.pythonhosted.org/packages/dc/79/860c582e8ba829d5e1991abd11e6c303c48fd10b117cb12d2055f3f8980c/dharma-1.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c4c1b72a8b76843dc64c72ed3460139", "sha256": "807347a37fabc368acb3ff7b6a5db4f7220e07e616e1fa331d551fd933d84c5b"}, "downloads": -1, "filename": "dharma-1.3.1.tar.gz", "has_sig": false, "md5_digest": "6c4c1b72a8b76843dc64c72ed3460139", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35433, "upload_time": "2019-12-05T03:24:14", "upload_time_iso_8601": "2019-12-05T03:24:14.650059Z", "url": "https://files.pythonhosted.org/packages/38/7f/99e3004653873087416e35a1e7f437cef8fd1c3fddfe78e7afb2eabfcfec/dharma-1.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "803cdec7631dd75bc45c5cb119813987", "sha256": "e5e3f562a6357c1ac91fe1a837b6c704cd184cfe040234f2d8a01a2300637a8b"}, "downloads": -1, "filename": "dharma-1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "803cdec7631dd75bc45c5cb119813987", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 43321, "upload_time": "2019-12-05T03:24:12", "upload_time_iso_8601": "2019-12-05T03:24:12.867930Z", "url": "https://files.pythonhosted.org/packages/dc/79/860c582e8ba829d5e1991abd11e6c303c48fd10b117cb12d2055f3f8980c/dharma-1.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c4c1b72a8b76843dc64c72ed3460139", "sha256": "807347a37fabc368acb3ff7b6a5db4f7220e07e616e1fa331d551fd933d84c5b"}, "downloads": -1, "filename": "dharma-1.3.1.tar.gz", "has_sig": false, "md5_digest": "6c4c1b72a8b76843dc64c72ed3460139", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35433, "upload_time": "2019-12-05T03:24:14", "upload_time_iso_8601": "2019-12-05T03:24:14.650059Z", "url": "https://files.pythonhosted.org/packages/38/7f/99e3004653873087416e35a1e7f437cef8fd1c3fddfe78e7afb2eabfcfec/dharma-1.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:41 2020"}