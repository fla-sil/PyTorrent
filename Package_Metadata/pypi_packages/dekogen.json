{"info": {"author": "Denys V. Kondratiuk", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "# DekoGen \n\n## What is it?\ndekogen is simple tool to avoid big unreadable HTTP requests. It's provide ability to create requests builders and\nresponse wrappers to keep match between code and OpenAPI specs.\n\n## About\nMain points:\n##### 1. Maintain compliance between code and OpenAPI spec\n##### 2. Do not describe requests and responses manually\n##### 3.  Use:\n    request_body = Configuration() \\\n        .number(\"10\") \\\n        .settings(Settings()\n              .required_protocol(\"33-11-JRTF\")\n              .element_per_second(34)\n              .related_grants(\"785-56-IU\", \"89-551-11-JRT\")\n              .body) \\\n        .body\n\n   ##### Instead of:\n   ```\n   request_body = {\"configuration\": {\"number\": 10,\n                                     \"settings\": {\"required_protocol\": \"33-11-JRTF\", \"element_per_second\": 34,\n                                                  \"related_grants\": [\"785-56-IU\", \"89-551-1-JRT\"]}}}\n   ```\n##### 4. Parse responses with autocomplete\n\n## Dependencies\n    inflection: 0.3.1\n    PyYAML: 5.1.2\n    Click: 7.0\n\nSee the full installation instructions for recommended and optional dependencies.\n\n## Installation \n    pip install dekogen\n\n## License\n[MIT](https://en.wikipedia.org/wiki/MIT_License)\n\n## Discussion and Development\nAll contributions, bug reports, bug fixes, documentation improvements, enhancements and ideas are welcome.\n\n## Getting started\n### Code generation\n\n#### Via command line:\n\n##### Help:\n    dekogen_cmd -h\n\n##### Commands help:\n    dekogen_cmd <command from help list> -h\n\n##### Sample:\n    dekogen_cmd generate-all-python -f ~/sample-api-specs.yaml -o ~/results\n\n\n#### Via python code:\n##### Read data from:\n    from dekogen.spec_reader import SpecReader\n\n    file_path = '/home/name/sample-api-specs.yaml'\n    spec_reader = SpecReader\n    spec_data = spec_reader.read_yaml(file_path=file_path)\n\n##### Generate responses:\n    from dekogen.spec_codegen import PythonResponsesGenerator\n\n    output_path = '/home/name/output_dir'\n    py_req_generator = PythonResponsesGenerator(spec_data=spec_data, file_path=output_path)\n    py_req_generator.generate()\n\n#### Generate requests:\n    from dekogen.spec_codegen import PythonRequestsGenerator\n\n    output_path = '/home/name/output_dir'\n    py_req_generator = PythonRequestsGenerator(spec_data=spec_data, file_path=output_path)\n    py_req_generator.generate()\n\n### Usage:\n1. To add autocomplete for responses just pass response.body (dict) into related Response() object initialization\n    ```\n    response = client.request(...)\n    body = NameOfTheView(response.data)\n    ```\n\n2. Create scalable and readable structures for requests using direct import of generated files and classes.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/denys-ops/dekogen", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "dekogen", "package_url": "https://pypi.org/project/dekogen/", "platform": "", "project_url": "https://pypi.org/project/dekogen/", "project_urls": {"Homepage": "https://github.com/denys-ops/dekogen"}, "release_url": "https://pypi.org/project/dekogen/0.1/", "requires_dist": ["inflection (==0.3.1)", "PyYAML (==5.1.2)", "Click (==7.0)"], "requires_python": ">=3.5", "summary": "Simple util for generate helper code based on OpenAPI specs", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>DekoGen</h1>\n<h2>What is it?</h2>\n<p>dekogen is simple tool to avoid big unreadable HTTP requests. It's provide ability to create requests builders and\nresponse wrappers to keep match between code and OpenAPI specs.</p>\n<h2>About</h2>\n<p>Main points:</p>\n<h5>1. Maintain compliance between code and OpenAPI spec</h5>\n<h5>2. Do not describe requests and responses manually</h5>\n<h5>3.  Use:</h5>\n<pre><code>request_body = Configuration() \\\n    .number(\"10\") \\\n    .settings(Settings()\n          .required_protocol(\"33-11-JRTF\")\n          .element_per_second(34)\n          .related_grants(\"785-56-IU\", \"89-551-11-JRT\")\n          .body) \\\n    .body\n</code></pre>\n<h5>Instead of:</h5>\n<pre><code>request_body = {\"configuration\": {\"number\": 10,\n                                  \"settings\": {\"required_protocol\": \"33-11-JRTF\", \"element_per_second\": 34,\n                                               \"related_grants\": [\"785-56-IU\", \"89-551-1-JRT\"]}}}\n</code></pre>\n<h5>4. Parse responses with autocomplete</h5>\n<h2>Dependencies</h2>\n<pre><code>inflection: 0.3.1\nPyYAML: 5.1.2\nClick: 7.0\n</code></pre>\n<p>See the full installation instructions for recommended and optional dependencies.</p>\n<h2>Installation</h2>\n<pre><code>pip install dekogen\n</code></pre>\n<h2>License</h2>\n<p><a href=\"https://en.wikipedia.org/wiki/MIT_License\" rel=\"nofollow\">MIT</a></p>\n<h2>Discussion and Development</h2>\n<p>All contributions, bug reports, bug fixes, documentation improvements, enhancements and ideas are welcome.</p>\n<h2>Getting started</h2>\n<h3>Code generation</h3>\n<h4>Via command line:</h4>\n<h5>Help:</h5>\n<pre><code>dekogen_cmd -h\n</code></pre>\n<h5>Commands help:</h5>\n<pre><code>dekogen_cmd &lt;command from help list&gt; -h\n</code></pre>\n<h5>Sample:</h5>\n<pre><code>dekogen_cmd generate-all-python -f ~/sample-api-specs.yaml -o ~/results\n</code></pre>\n<h4>Via python code:</h4>\n<h5>Read data from:</h5>\n<pre><code>from dekogen.spec_reader import SpecReader\n\nfile_path = '/home/name/sample-api-specs.yaml'\nspec_reader = SpecReader\nspec_data = spec_reader.read_yaml(file_path=file_path)\n</code></pre>\n<h5>Generate responses:</h5>\n<pre><code>from dekogen.spec_codegen import PythonResponsesGenerator\n\noutput_path = '/home/name/output_dir'\npy_req_generator = PythonResponsesGenerator(spec_data=spec_data, file_path=output_path)\npy_req_generator.generate()\n</code></pre>\n<h4>Generate requests:</h4>\n<pre><code>from dekogen.spec_codegen import PythonRequestsGenerator\n\noutput_path = '/home/name/output_dir'\npy_req_generator = PythonRequestsGenerator(spec_data=spec_data, file_path=output_path)\npy_req_generator.generate()\n</code></pre>\n<h3>Usage:</h3>\n<ol>\n<li>\n<p>To add autocomplete for responses just pass response.body (dict) into related Response() object initialization</p>\n<pre><code>response = client.request(...)\nbody = NameOfTheView(response.data)\n</code></pre>\n</li>\n<li>\n<p>Create scalable and readable structures for requests using direct import of generated files and classes.</p>\n</li>\n</ol>\n\n          </div>"}, "last_serial": 6195844, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d8b7f64880a29333d85ca94c057177cc", "sha256": "5001dd8c46a150de26a4a011e149ea2f02d94529d497fc9260c3a4afa2a5f517"}, "downloads": -1, "filename": "dekogen-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d8b7f64880a29333d85ca94c057177cc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 8431, "upload_time": "2019-11-25T17:31:11", "upload_time_iso_8601": "2019-11-25T17:31:11.412710Z", "url": "https://files.pythonhosted.org/packages/a2/64/ca2d9331d9692b962ba1798e5a6e72b4ad86bafa60635329430194a28bc1/dekogen-0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d8b7f64880a29333d85ca94c057177cc", "sha256": "5001dd8c46a150de26a4a011e149ea2f02d94529d497fc9260c3a4afa2a5f517"}, "downloads": -1, "filename": "dekogen-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d8b7f64880a29333d85ca94c057177cc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 8431, "upload_time": "2019-11-25T17:31:11", "upload_time_iso_8601": "2019-11-25T17:31:11.412710Z", "url": "https://files.pythonhosted.org/packages/a2/64/ca2d9331d9692b962ba1798e5a6e72b4ad86bafa60635329430194a28bc1/dekogen-0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:39:13 2020"}