{"info": {"author": "Stefan W", "author_email": "stefan+pypi@geeky.net", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7"], "description": "Schema validation for Python data structures\n============================================\n\nBasic validation for Python data structures in a mostly declarative\nform (there is an escape hatch in \"extraValidation\" callables).\n\nValidation errors are reported as both a path within the data\nstructure (sequence of indices or keys) and a descriptive message\n(string).\n\nTypical usage::\n\n    data = json.load(some_file) # or pickle, or ...\n    errors = dataschema.Validator(my_schema).validate(data)\n    if errors:\n        for path, message in errors:\n            # Report error `message` at path `path`.\n    else:\n        # Any data access or application-specific validation can now\n        # rely on properties of my_schema (e.g. minimum number of\n        # elements in a sequence, data types of elements, presence of\n        # certain keys in a dict, etc.).\n\nSee the unit tests for schema examples.\n\nThere are a few limitations (only string keys for any dictionaries in\ndata) and a more fully Pythonic validator might focus on interfaces\nand abstract base classes over concrete types.  However, dataschema is\na great improvement over ad hoc validation code for many uses today.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.python.org/pypi/dataschema/", "keywords": "data schema validation", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "dataschema", "package_url": "https://pypi.org/project/dataschema/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dataschema/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://pypi.python.org/pypi/dataschema/"}, "release_url": "https://pypi.org/project/dataschema/0.1/", "requires_dist": null, "requires_python": null, "summary": "Schema validation for Python data structures", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Basic validation for Python data structures in a mostly declarative\nform (there is an escape hatch in \u201cextraValidation\u201d callables).</p>\n<p>Validation errors are reported as both a path within the data\nstructure (sequence of indices or keys) and a descriptive message\n(string).</p>\n<p>Typical usage:</p>\n<pre>data = json.load(some_file) # or pickle, or ...\nerrors = dataschema.Validator(my_schema).validate(data)\nif errors:\n    for path, message in errors:\n        # Report error `message` at path `path`.\nelse:\n    # Any data access or application-specific validation can now\n    # rely on properties of my_schema (e.g. minimum number of\n    # elements in a sequence, data types of elements, presence of\n    # certain keys in a dict, etc.).\n</pre>\n<p>See the unit tests for schema examples.</p>\n<p>There are a few limitations (only string keys for any dictionaries in\ndata) and a more fully Pythonic validator might focus on interfaces\nand abstract base classes over concrete types.  However, dataschema is\na great improvement over ad hoc validation code for many uses today.</p>\n\n          </div>"}, "last_serial": 1014290, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "18d35697dab4b31d34b3e66f03d0067d", "sha256": "8a7330c9e264a8aee4d1faa61337ae4f89fdba14ef50e8addac1a73f72c42b5f"}, "downloads": -1, "filename": "dataschema-0.1.tar.gz", "has_sig": false, "md5_digest": "18d35697dab4b31d34b3e66f03d0067d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7134, "upload_time": "2014-02-27T22:18:29", "upload_time_iso_8601": "2014-02-27T22:18:29.726537Z", "url": "https://files.pythonhosted.org/packages/38/28/97a6609c6f3fde5e797cdde6bae9fd287e4eff66325ef68b7da4b8b8e382/dataschema-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "18d35697dab4b31d34b3e66f03d0067d", "sha256": "8a7330c9e264a8aee4d1faa61337ae4f89fdba14ef50e8addac1a73f72c42b5f"}, "downloads": -1, "filename": "dataschema-0.1.tar.gz", "has_sig": false, "md5_digest": "18d35697dab4b31d34b3e66f03d0067d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7134, "upload_time": "2014-02-27T22:18:29", "upload_time_iso_8601": "2014-02-27T22:18:29.726537Z", "url": "https://files.pythonhosted.org/packages/38/28/97a6609c6f3fde5e797cdde6bae9fd287e4eff66325ef68b7da4b8b8e382/dataschema-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:13 2020"}