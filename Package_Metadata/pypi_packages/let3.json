{"info": {"author": "Taylor Marks, Adam Karpierz", "author_email": "adam@karpierz.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: Polish", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: IronPython", "Programming Language :: Python :: Implementation :: Jython", "Programming Language :: Python :: Implementation :: PyPy", "Programming Language :: Python :: Implementation :: Stackless", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "let3\n====\n\n*Assign variables wherever, whenever you want.*\n\nOverview\n========\n\n  *let3* is a strict fork of Taylor Marks's let_ package with a fix allowing\n  to work with Python3 or higher and with a little code reformatting and\n  minor improvements.\n\n  Overview below is a copy from the original let_ website (with only the\n  necessary changes regarding let3).\n\nQuick Start\n-----------\nOnce you've installed, you can really quickly verified that it works with just this:\n\n.. code-block:: python\n\n    >>> from let import let\n    >>> if let(count = len('Hello World!')):\n    ...     print(count)\n    12\n\nDocumentation\n-------------\nIn C, Java, and many other languages, it's possible to assign variables inside\nof if or while condition statements. This is useful in allowing you to concisely\nboth assign the value, and check whether a condition is met.\n\nThis ability doesn't exist in Python, because of the thought that when people\nwrite something like:\n\n.. code-block:: python\n\n    if row = db.fetch_results():\n        ...\n\nThey may have actually meant:\n\n.. code-block:: python\n\n    if row == db.fetch_results():\n        ...\n\nPersonally, I have never made this mistake. It seems far more like a theoretical\nmistake that could plausibly happen than one that actually happens and warrants\nremoving features, as was chosen in Python.\n\nAnyways, the let function in this module gives you something very close to that\nability in other languages. A few examples:\n\n.. code-block:: python\n\n    if let(name = longInstanceName.longAttributeName):\n        ...\n\n    # Yes, db.fetch_results() should just return a generator. No, it doesn't.\n    while let(results = db.fetch_results()):\n        ...\n\n    if let(count = len(nameValuePair)) != 1:\n        raise Exception('Bad amount: {}'.format(count))\n\nInstallation\n============\n\n+ Python 3.4 or later\n\n  * http://www.python.org/\n  * 2.7 and 3.7 are primary test environments.\n\n+ pip and setuptools\n\n  * http://pypi.org/project/pip/\n  * http://pypi.org/project/setuptools/\n\nTo install run::\n\n    python -m pip install --upgrade let3\n\nDevelopment\n===========\n\nVisit `development page <https://github.com/karpierz/let3>`__\n\nInstallation from sources:\n\nClone the `sources <https://github.com/karpierz/let3>`__ and run::\n\n    python -m pip install ./let3\n\nor on development mode::\n\n    python -m pip install --editable ./let3\n\nPrerequisites:\n\n+ Development is strictly based on *tox*. To install it run::\n\n    python -m pip install tox\n\nLicense\n=======\n\n  | Copyright (c) 2016 Taylor Marks\n  | Copyright (c) 2016-2019 Adam Karpierz\n  |\n  | Licensed under the MIT License\n  | http://opensource.org/licenses/MIT\n  | Please refer to the accompanying LICENSE file.\n\nAuthors\n=======\n\n* Taylor Marks <taylor@marksfam.com>\n* Adam Karpierz <adam@karpierz.net>\n\n.. _let: http://pypi.org/project/let/\n\nChangelog\n=========\n\n1.0.11 (2019-05-22)\n-------------------\n- Drop support for Python 2.\n\n1.0.10 (2019-05-21)\n-------------------\n- Update required setuptools version.\n- Setup update and improvements.\n- This is the latest release that supports Python 2.\n\n1.0.9 (2018-11-08)\n------------------\n- Drop support for Python 2.6 and 3.0-3.3\n- Update required setuptools version.\n\n1.0.8 (2018-05-08)\n------------------\n- Update required setuptools version.\n- Improve and simplify setup and packaging.\n\n1.0.7 (2018-02-26)\n------------------\n- Improve and simplify setup and packaging.\n\n1.0.6 (2018-01-28)\n------------------\n- Fix a bug and inconsistencies in tox.ini\n- Update of README.rst.\n\n1.0.3 (2018-01-24)\n------------------\n- Update required Sphinx version.\n- Update doc Sphinx configuration files.\n\n1.0.2 (2017-11-18)\n------------------\n- Setup improvements.\n- Other minor improvements.\n\n1.0.1 (2017-01-05)\n------------------\n- Creating a fork of Taylor Marks's *let* package with a fix allowing\n  to work with Python3 or higher.\n- Minor improvements.\n\nChanges of the original *let*:\n\n1.0.1 (Feb 25, 2016)\n--------------------\n- Let now assigns the variables to the global namespace always - never\n  the local namespace. The Python interpreter sometimes optimizes variables\n  within the local namespace - it's best not to change values behind its\n  back, as it leads to very difficult to discover bugs.\n\n1.0.0 (Feb. 7, 2016)\n--------------------\n- Initial commit", "description_content_type": "", "docs_url": null, "download_url": "http://pypi.org/project/let3/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.org/project/let3/", "keywords": "let,let3,assign,assignment,var,variable,conditional,if,while", "license": "MIT License ; http://opensource.org/licenses/MIT", "maintainer": "Taylor Marks, Adam Karpierz", "maintainer_email": "adam@karpierz.net", "name": "let3", "package_url": "https://pypi.org/project/let3/", "platform": "any", "project_url": "https://pypi.org/project/let3/", "project_urls": {"Download": "http://pypi.org/project/let3/", "Homepage": "http://pypi.org/project/let3/"}, "release_url": "https://pypi.org/project/let3/1.0.11/", "requires_dist": null, "requires_python": ">=3.4.0", "summary": "Assign variables wherever, whenever you want", "version": "1.0.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"let3\">\n<h2>let3</h2>\n<p><em>Assign variables wherever, whenever you want.</em></p>\n</div>\n<div id=\"overview\">\n<h2>Overview</h2>\n<blockquote>\n<p><em>let3</em> is a strict fork of Taylor Marks\u2019s <a href=\"http://pypi.org/project/let/\" rel=\"nofollow\">let</a> package with a fix allowing\nto work with Python3 or higher and with a little code reformatting and\nminor improvements.</p>\n<p>Overview below is a copy from the original <a href=\"http://pypi.org/project/let/\" rel=\"nofollow\">let</a> website (with only the\nnecessary changes regarding let3).</p>\n</blockquote>\n<div id=\"quick-start\">\n<h3>Quick Start</h3>\n<p>Once you\u2019ve installed, you can really quickly verified that it works with just this:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">let</span> <span class=\"kn\">import</span> <span class=\"n\">let</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">if</span> <span class=\"n\">let</span><span class=\"p\">(</span><span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"s1\">'Hello World!'</span><span class=\"p\">)):</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"p\">)</span>\n<span class=\"mi\">12</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>In C, Java, and many other languages, it\u2019s possible to assign variables inside\nof if or while condition statements. This is useful in allowing you to concisely\nboth assign the value, and check whether a condition is met.</p>\n<p>This ability doesn\u2019t exist in Python, because of the thought that when people\nwrite something like:</p>\n<pre><span class=\"k\">if</span> <span class=\"n\">row</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">fetch_results</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre>\n<p>They may have actually meant:</p>\n<pre><span class=\"k\">if</span> <span class=\"n\">row</span> <span class=\"o\">==</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">fetch_results</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre>\n<p>Personally, I have never made this mistake. It seems far more like a theoretical\nmistake that could plausibly happen than one that actually happens and warrants\nremoving features, as was chosen in Python.</p>\n<p>Anyways, the let function in this module gives you something very close to that\nability in other languages. A few examples:</p>\n<pre><span class=\"k\">if</span> <span class=\"n\">let</span><span class=\"p\">(</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">longInstanceName</span><span class=\"o\">.</span><span class=\"n\">longAttributeName</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n\n<span class=\"c1\"># Yes, db.fetch_results() should just return a generator. No, it doesn't.</span>\n<span class=\"k\">while</span> <span class=\"n\">let</span><span class=\"p\">(</span><span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">fetch_results</span><span class=\"p\">()):</span>\n    <span class=\"o\">...</span>\n\n<span class=\"k\">if</span> <span class=\"n\">let</span><span class=\"p\">(</span><span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">nameValuePair</span><span class=\"p\">))</span> <span class=\"o\">!=</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s1\">'Bad amount: </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"p\">))</span>\n</pre>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ul>\n<li>Python 3.4 or later<ul>\n<li><a href=\"http://www.python.org/\" rel=\"nofollow\">http://www.python.org/</a></li>\n<li>2.7 and 3.7 are primary test environments.</li>\n</ul>\n</li>\n<li>pip and setuptools<ul>\n<li><a href=\"http://pypi.org/project/pip/\" rel=\"nofollow\">http://pypi.org/project/pip/</a></li>\n<li><a href=\"http://pypi.org/project/setuptools/\" rel=\"nofollow\">http://pypi.org/project/setuptools/</a></li>\n</ul>\n</li>\n</ul>\n<p>To install run:</p>\n<pre>python -m pip install --upgrade let3\n</pre>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>Visit <a href=\"https://github.com/karpierz/let3\" rel=\"nofollow\">development page</a></p>\n<p>Installation from sources:</p>\n<p>Clone the <a href=\"https://github.com/karpierz/let3\" rel=\"nofollow\">sources</a> and run:</p>\n<pre>python -m pip install ./let3\n</pre>\n<p>or on development mode:</p>\n<pre>python -m pip install --editable ./let3\n</pre>\n<p>Prerequisites:</p>\n<ul>\n<li><p>Development is strictly based on <em>tox</em>. To install it run:</p>\n<pre>python -m pip install tox\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<blockquote>\n<div>\n<div>Copyright (c) 2016 Taylor Marks</div>\n<div>Copyright (c) 2016-2019 Adam Karpierz</div>\n<div><br></div>\n<div>Licensed under the MIT License</div>\n<div><a href=\"http://opensource.org/licenses/MIT\" rel=\"nofollow\">http://opensource.org/licenses/MIT</a></div>\n<div>Please refer to the accompanying LICENSE file.</div>\n</div>\n</blockquote>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<ul>\n<li>Taylor Marks &lt;<a href=\"mailto:taylor%40marksfam.com\">taylor<span>@</span>marksfam<span>.</span>com</a>&gt;</li>\n<li>Adam Karpierz &lt;<a href=\"mailto:adam%40karpierz.net\">adam<span>@</span>karpierz<span>.</span>net</a>&gt;</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.0.11 (2019-05-22)</h3>\n<ul>\n<li>Drop support for Python 2.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.0.10 (2019-05-21)</h3>\n<ul>\n<li>Update required setuptools version.</li>\n<li>Setup update and improvements.</li>\n<li>This is the latest release that supports Python 2.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.0.9 (2018-11-08)</h3>\n<ul>\n<li>Drop support for Python 2.6 and 3.0-3.3</li>\n<li>Update required setuptools version.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.0.8 (2018-05-08)</h3>\n<ul>\n<li>Update required setuptools version.</li>\n<li>Improve and simplify setup and packaging.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.0.7 (2018-02-26)</h3>\n<ul>\n<li>Improve and simplify setup and packaging.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.0.6 (2018-01-28)</h3>\n<ul>\n<li>Fix a bug and inconsistencies in tox.ini</li>\n<li>Update of README.rst.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.0.3 (2018-01-24)</h3>\n<ul>\n<li>Update required Sphinx version.</li>\n<li>Update doc Sphinx configuration files.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>1.0.2 (2017-11-18)</h3>\n<ul>\n<li>Setup improvements.</li>\n<li>Other minor improvements.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>1.0.1 (2017-01-05)</h3>\n<ul>\n<li>Creating a fork of Taylor Marks\u2019s <em>let</em> package with a fix allowing\nto work with Python3 or higher.</li>\n<li>Minor improvements.</li>\n</ul>\n<p>Changes of the original <em>let</em>:</p>\n</div>\n<div id=\"feb-25-2016\">\n<h3>1.0.1 (Feb 25, 2016)</h3>\n<ul>\n<li>Let now assigns the variables to the global namespace always - never\nthe local namespace. The Python interpreter sometimes optimizes variables\nwithin the local namespace - it\u2019s best not to change values behind its\nback, as it leads to very difficult to discover bugs.</li>\n</ul>\n</div>\n<div id=\"feb-7-2016\">\n<h3>1.0.0 (Feb. 7, 2016)</h3>\n<ul>\n<li>Initial commit</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5853204, "releases": {"1.0.10": [{"comment_text": "", "digests": {"md5": "c2c37798bc0d92637ae8e5f92de5f60f", "sha256": "50df9462d0d78dc9a4d5ab2a9df4ac76e63f59e3178574f7296f7d4f1f917c09"}, "downloads": -1, "filename": "let3-1.0.10.zip", "has_sig": false, "md5_digest": "c2c37798bc0d92637ae8e5f92de5f60f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.0,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 17082, "upload_time": "2019-05-21T22:50:27", "upload_time_iso_8601": "2019-05-21T22:50:27.424940Z", "url": "https://files.pythonhosted.org/packages/d3/96/abd93e5879dc7312909cbfc6acc813cd3ba000f0876f8ecd577a0d290d6a/let3-1.0.10.zip", "yanked": false}], "1.0.11": [{"comment_text": "", "digests": {"md5": "cb51f02df1552360f139f622f37310d3", "sha256": "2cf2893fbd9e49b43a296c69b0aaca78e8cafd6c7748fa8ef7037ecdac989c39"}, "downloads": -1, "filename": "let3-1.0.11.zip", "has_sig": false, "md5_digest": "cb51f02df1552360f139f622f37310d3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4.0", "size": 16776, "upload_time": "2019-05-21T22:54:13", "upload_time_iso_8601": "2019-05-21T22:54:13.314715Z", "url": "https://files.pythonhosted.org/packages/12/9c/fb87095ba07b82babd5159099cb9a1b349453fea68047c594020fac1347d/let3-1.0.11.zip", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "a97b0cf4d19b1085cde128fa04594619", "sha256": "44688be98a6b61de14815af0da9414c9adbecd426e01f2b5fbe68abecb0c174a"}, "downloads": -1, "filename": "let3-1.0.9.zip", "has_sig": false, "md5_digest": "a97b0cf4d19b1085cde128fa04594619", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13187, "upload_time": "2018-11-08T20:48:01", "upload_time_iso_8601": "2018-11-08T20:48:01.518108Z", "url": "https://files.pythonhosted.org/packages/f4/f7/7ca923b8ba2c3d9c5d0d3bf38ccff508bb6c1d4e2ee4a89d14a56c06f8d0/let3-1.0.9.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cb51f02df1552360f139f622f37310d3", "sha256": "2cf2893fbd9e49b43a296c69b0aaca78e8cafd6c7748fa8ef7037ecdac989c39"}, "downloads": -1, "filename": "let3-1.0.11.zip", "has_sig": false, "md5_digest": "cb51f02df1552360f139f622f37310d3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4.0", "size": 16776, "upload_time": "2019-05-21T22:54:13", "upload_time_iso_8601": "2019-05-21T22:54:13.314715Z", "url": "https://files.pythonhosted.org/packages/12/9c/fb87095ba07b82babd5159099cb9a1b349453fea68047c594020fac1347d/let3-1.0.11.zip", "yanked": false}], "timestamp": "Fri May  8 00:46:55 2020"}