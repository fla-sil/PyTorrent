{"info": {"author": "Chris Griffith", "author_email": "chris@cdgriffith.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Documentation :: Sphinx", "Topic :: Software Development", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Archiving", "Topic :: System :: Archiving :: Compression", "Topic :: System :: Filesystems", "Topic :: System :: Logging", "Topic :: Utilities"], "description": "Reusables\n=========\n\n|BuildStatus| |CoverageStatus| |License| |PyPi| |DocStatus|\n\n**Commonly Consumed Code Commodities**\n\nOverview\n--------\n\nThe reusables library is a cookbook of python functions and classes that\nprogrammers may find themselves often recreating.\n\nIt includes:\n\n- Archiving and extraction for zip, tar, gz, bz2, and rar\n- Path (file and folders) management\n- Fast logging setup and tools\n- Namespace (dict to class modules with child recursion)\n- Friendly datetime formatting\n- Config to dict parsing\n- Common regular expressions and file extensions\n- Helpful wrappers\n- Bash analogues\n- Easy downloading\n- Multiprocessing helpers\n\nInstall\n~~~~~~~\n\nReusables is on PyPI, so can be easily installed with pip or easy_install.\n\n.. code::\n\n   pip install reusables\n\n\nThere are no required decencies. If this doesn't work, it's broken, raise\na github issue.\n\nReusables is designed to not require any imports outside the standard library,\nbut can be supplemented with those found in the requirements.txt file for\nadditional functionality.\n\nCI tests run on:\n\n* Python 2.6+\n* Python 3.3+\n* Pypy\n\nExamples are provided below, and the API documentation can always be found at\nreadthedocs.org_.\n\nPlease note this is currently in development. Any item in development\nprior to a major version (1.x, 2.x) may change. Once at a major version,\nno breaking changes are planned to occur within that version.\n\nWhat's in the box\n-----------------\n\nGeneral Helpers and File Management\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n        import reusables\n\n        reusables.find_files_list(\".\", ext=reusables.exts.pictures)\n        # ['/home/user/background.jpg', '/home/user/private.png']\n\n        reusables.archive(\"reusables\", name=\"reuse\", archive_type=\"zip\")\n        # 'C:\\\\Users\\\\Me\\\\Reusables\\\\reuse.zip'\n\n        reusables.extract(\"test/test_structure.zip\", \"my_archive\")\n        # All files in the zip will be extracted into directory \"my_archive\"\n\n        reusables.config_dict('my_config.cfg')\n        # {'Section 1': {'key 1': 'value 1', 'key2': 'Value2'}, 'Section 2': {}}\n\n        reusables.count_files(\".\")\n        # 405\n\n        reusables.file_hash(\"test_structure.zip\", hash_type=\"sha256\")\n        # 'bc11af55928ab89771b9a141fa526a5b8a3dbc7d6870fece9b91af5d345a75ea'\n\n        reusables.safe_path('/home/user/eViL User\\0\\\\/newdir$^&*/new^%file.txt')\n        # '/home/user/eViL User__/newdir____/new__file.txt'\n\n        reusables.run(\"echo 'hello there!'\", shell=True)\n        # CompletedProcess(args=\"echo 'hello there!'\", returncode=0, stdout='hello there!\\n')\n\n        reusables.cut(\"abcdefghi\")\n        # ['ab', 'cd', 'ef', 'gh', 'i']\n\n\nOne of the most reusables pieces of code is the find_files. It is always\nappearing on stackoverflow and forums of how to implement os.walk or glob;\nhere's both.\n\n.. code:: python\n\n         reusables.find_files_list(\".\", name=\"*reuse*\", depth=2)\n         # ['.\\\\test\\\\test_reuse.py', '.\\\\test\\\\test_reuse_datetime.py',\n         #  '.\\\\test\\\\test_reuse_logging.py', '.\\\\test\\\\test_reuse_namespace.py']\n\n         # match_case works for both ext and name\n         # depth of 1 means this working directory only, no further\n\n         reusables.find_files_list(ext=\".PY\", depth=1, match_case=True)\n         # []\n\n         reusables.find_files_list(ext=\".py\", depth=1, match_case=True)\n         # ['.\\\\setup.py']\n\n         reusables.find_files_list(name=\"setup\", ext=\".py\", match_case=True)\n         # ['.\\\\setup.py']\n\n         reusables.find_files_list(name=\"Setup\", ext=\".py\", match_case=True)\n         # []\n\n\nNamespace\n~~~~~~~~~\n\nCheck out Box_, a much improved version as its own library.\n\nDictionary management class, similar to Bunch, but designed so\nthat sub-dictionaries are recursively made into namespaces.\n\n.. code:: python\n\n        my_breakfast = {\"spam\": {\"eggs\": {\"sausage\": {\"bacon\": \"yummy\"}}}}\n        namespace_breakfast = reusables.Namespace(**my_breakfast)\n\n        print(namespace_breakfast.spam.eggs.sausage.bacon)\n        # yummy\n\n        print(namespace_breakfast.spam.eggs['sausage'].bacon)\n        # yummy\n\n        str(namespace_breakfast['spam'].eggs)\n        # \"{'sausage': {'bacon': 'yummy'}}\"\n\n        namespace_breakfast.to_dict()\n        #{'spam': {'eggs': {'sausage': {'bacon': 'yummy'}}}}\n\n        dict(namespace_breakfast)\n        # {'spam': <Namespace: {'eggs': {'sausage': {'bacon': '...>}\n        # This is NOT the same as .to_dict() as it is not recursive\n\nLogging\n~~~~~~~\n\n.. code:: python\n\n        logger = reusables.setup_logger(__name__)\n        # By default it adds a stream logger to sys.stderr\n\n        logger.info(\"Test\")\n        # 2016-04-25 19:32:45,542 __main__     INFO     Test\n\n\nThere are multiple log formatters provided, as well as additional helper functions.\nAll helper functions will accept either the logger object or the name of the logger.\n\n.. code:: python\n\n        reusables.remove_stream_handlers(__name__)\n        # remove_file_handlers() and remove_all_handlers() also available\n\n        reusables.add_stream_handler(__name__, log_format=reusables.log_formats.detailed)\n        r.add_rotating_file_handler(__name__, \"my.log\", level=logging.INFO)\n\n        logger.info(\"Example log entry\")\n        # 2016-12-14 20:56:55,446 : 315147 MainThread : reusables.log INFO Example log entry\n\n        open(\"my.log\").read()\n        # 2016-12-14 20:56:55,446 - __builtin__   INFO     Example log entry\n\n\n**Provided log formats**\n\nFeel free to provide your own formats, aided by the docs_. However this includes\nsome commonly used ones you may find useful. they are all stored in the Namespace\n\"reusables.log_formats\" (feel free to use it as a dict as stated above).\n\nBecause ReStructuredText tables don't preserve whitespace (even with literals),\n which is important to show distinction in these formatters, here's it in a code block instead.\n\n.. code:: python\n\n    reusables.log_formats.keys()\n    # ['common', 'level_first', 'threaded', 'easy_read', 'easy_thread', 'detailed']\n\n    logger = reusables.setup_logger(__name__, log_format=reusables.log_formats.threaded)\n    reusables.add_timed_rotating_file_handler(logger, \"timed.log\", level=logging.ERROR, log_format=reusables.log_formats.detailed)\n\n\n.. code::\n\n    +--------------+--------------------------------------------------------------------------------------+\n    | Formatter    | Example Output                                                                       |\n    +==============+======================================================================================+\n    | easy_read    | 2016-04-26 21:17:51,225 - example_logger  INFO      example log message              |\n    |              | 2016-04-26 21:17:59,074 - example_logger  ERROR     Something broke                  |\n    +--------------+--------------------------------------------------------------------------------------+\n    | detailed     | 2016-04-26 21:17:51,225 :  7020 MainThread : example_logger INFO example log message |\n    |              | 2016-04-26 21:17:59,074 : 14868 MainThread : example_logger ERROR Something broke    |\n    +--------------+--------------------------------------------------------------------------------------+\n    | level_first  | INFO - example_logger - 2016-04-26 21:17:51,225 - example log message                |\n    |              | ERROR - example_logger - 2016-04-26 21:17:59,074 - Something broke                   |\n    +--------------+--------------------------------------------------------------------------------------+\n    | threaded     | 7020 MainThread : example log message                                                |\n    |              | 14868 MainThread : Something broke                                                   |\n    +--------------+--------------------------------------------------------------------------------------+\n    | easy_thread  |  7020 MainThread : example_logger  INFO      example log message                     |\n    |              | 14868 MainThread : example_logger  ERROR     Something broke                         |\n    +--------------+--------------------------------------------------------------------------------------+\n    | common       | 2016-04-26 21:17:51,225 - example_logger - INFO - example log message                |\n    |              | 2016-04-26 21:17:59,074 - example_logger - ERROR - Something broke                   |\n    +--------------+--------------------------------------------------------------------------------------+\n\n\nExtension Groups\n~~~~~~~~~~~~~~~~\n\nIt's common to be looking for a specific type of file.\n\n.. code:: python\n\n        if file_path.endswith(reusables.exts.pictures):\n            print(\"{} is a picture file\".format(file_path))\n\nThat's right, str.endswith_ (as well as str.startswith_) accept a tuple to search.\n\n===================== ===================\n File Type             Extensions\n===================== ===================\n pictures              .jpeg .jpg .png .gif .bmp .tif .tiff .ico .mng .tga .psd .xcf .svg .icns\n video                 .mkv .avi .mp4 .mov .flv .mpeg .mpg .3gp .m4v .ogv .asf .m1v .m2v .mpe .ogv .wmv .rm .qt .3g2 .asf .vob\n music                 .mp3 .ogg .wav .flac .aif .aiff .au .m4a .wma .mp2 .m4a .m4p .aac .ra .mid .midi .mus .psf\n documents             .doc .docx .pdf .xls .xlsx .ppt .pptx .csv .epub .gdoc .odt .rtf .txt .info .xps .gslides .gsheet .pages .msg .tex .wpd .wps .csv\n archives              .zip .rar .7z .tar.gz .tgz .gz .bzip .bzip2 .bz2 .xz .lzma .bin .tar\n cd_images             .iso .nrg .img .mds .mdf .cue .daa\n scripts               .py .sh .bat\n binaries              .msi .exe\n markup                .html .htm .xml .yaml .json .raml .xhtml .kml\n===================== ===================\n\n\nWrappers\n~~~~~~~~\n\n**unique**\n\nThere are tons of wrappers for caching and saving inputs and outputs, this is a\ndifferent take that requires the function returns a result not yet provided.\n\n.. code:: python\n\n    @reusables.unique(max_retries=100, error_text=\"All UIDs taken!\")\n    def gen_small_uid():\n        return random.randint(0, 100)\n\n**time_it**\n\nEasily time the execution time of a function, using the high precision\nperf_conuter on Python 3.3+, otherwise clock.\n\n.. code:: python\n\n    @reusables.time_it()\n    def test_it():\n        return time.sleep(float(f\"0.{random.randint(1, 9)}\"))\n\n\n\nCommand line helpers\n--------------------\n\nUse the Python interpreter as much as a shell? Here's some handy helpers to\nfill the void. (Please don't do 'import \\*' in production code, this is used\nas an easy to use example using the interpreter interactively.)\n\n> These are not imported by default with \"import reusables\", as they are designed to be imported only in an interactive shell\n\nSome commands from other areas are also included where they are highly applicable in both\ninstances, such as 'touch' and 'download'.\n\n\n.. code:: python\n\n        from reusables.cli import *\n\n        cd(\"~\") # Automatic user expansion unlike os.chdir()\n\n        pwd()\n        # '/home/user'\n\n        pushd(\"Downloads\")\n        # ['Downloads', '/home/user']\n\n        pwd()\n        # '/home/user/Downloads'\n\n        popd()\n        # ['/home/user']\n\n        ls(\"-lah\")  # Uses 'ls' on linux and 'dir' on windows\n        #  total 1.5M\n        #  drwxr-xr-x 49 james james 4.0K Nov  1 20:09 .\n        #  drwxr-xr-x  3 root  root  4.0K Aug 21  2015 ..\n        #  -rw-rw-r--  1 james james  22K Aug 22 13:21 picture.jpg\n        #  -rw-------  1 james james  17K Nov  1 20:08 .bash_history\n\n        cmd(\"ifconfig\") # Shells, decodes and prints 'reusables.run' output\n        #   eth0      Link encap:Ethernet  HWaddr de:ad:be:ef:00:00\n        #             inet addr:10.0.2.5  Bcast:10.0.2.255  Mask:255.255.255.0\n        #             ...\n\n        download('https://www.python.org/ftp/python/README.html', save_to_file=False)\n        # 2016-11-02 10:37:23,644 - reusables.web  INFO      Downloading https://www.python.org/ftp/python/README.html (2.3 KB) to memory\n        # b'<PRE>\\nPython Distribution...\n\nDateTime\n~~~~~~~~\n\nEasy formatting for datetime objects. Also parsing for ISO formatted time.\n\n\n.. code:: python\n\n        reusables.datetime_format(\"Wake up {son}, it's {hours}:{minutes} {periods}!\"\n                            \"I don't care if it's a {day-fullname}, {command}!\",\n                            son=\"John\",\n                            command=\"Get out of bed!\")\n        # \"Wake up John, it's 09:51 AM! I don't care if it's a Saturday, Get out of bed!!\"\n\n        reusables.datetime_from_iso('2019-03-10T12:56:55.031863')\n        # datetime.datetime(2019, 3, 10, 12, 56, 55, 31863)\n\n\nExamples based on  Mon Mar 28 13:27:11 2016\n\n===================== =================== ===========================\n Format                Mapping             Example\n===================== =================== ===========================\n{12-hour}               %I                 01\n{24-hour}               %H                 13\n{seconds}               %S                 14\n{minutes}               %M                 20\n{microseconds}          %f                 320944\n{time-zone}             %Z\n{years}                 %y                 16\n{years-full}            %Y                 2016\n{months}                %m                 03\n{months-name}           %b                 Mar\n{months-full}           %B                 March\n{days}                  %d                 28\n{week-days}             %w                 1\n{year-days}             %j                 088\n{days-name}             %a                 Mon\n{days-full}             %A                 Monday\n{mon-weeks}             %W                 13\n{date}                  %x                 03/28/16\n{time}                  %X                 13:27:11\n{date-time}             %C                 Mon Mar 28 13:27:11 2016\n{utc-offset}            %Z\n{periods}               %p                 PM\n{iso-format}            %Y-%m-%dT%H:%M:%S  2016-03-28T13:27:11\n===================== =================== ===========================\n\n\nFAQ\n---\n\n**How can I help? / Why doesn't it do what I want it too?**\n\nPlease feel free to make suggestions in the 'issues' section of github, or to be super duper helpful go ahead and submit a PR for the\nfunctionality you want to see! Only requirements are that it's well thought out and is more in place here rather than it's own project\n(to be merged will need documentation and basic unittests as well, but not a requirement for opening the PR).\nPlease don't hesitate if you're new to python! Even the smallest PR contributions will earn a mention in a brand new Contributors section.\n\n**Unrar not installed?**\n\nA common error to see, especially on Windows based systems, is: \"rarfile.RarCannotExec: Unrar not installed? (rarfile.UNRAR_TOOL='unrar')\"\n\nThis is probably because unrar is not downloaded or linked properly. Download UnRAR\nfrom http://www.rarlab.com/rar_add.htm and follow these instructions before\ntrying again: http://rarfile.readthedocs.org/en/latest/faq.html?highlight=windows#how-can-i-get-it-work-on-windows\n\nLicense\n-------\n\nThe MIT License (MIT)\n\nCopyright (c) 2014-2019 Chris Griffith\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n.. |BuildStatus| image:: https://travis-ci.org/cdgriffith/Reusables.png?branch=master\n   :target: https://travis-ci.org/cdgriffith/Reusables\n.. |CoverageStatus| image:: https://img.shields.io/coveralls/cdgriffith/Reusables/master.svg?maxAge=2592000\n   :target: https://coveralls.io/r/cdgriffith/Reusables?branch=master\n.. |DocStatus| image:: https://readthedocs.org/projects/reusables/badge/?version=latest\n   :target: http://reusables.readthedocs.org/en/latest/index.html\n.. |PyPi| image:: https://img.shields.io/pypi/v/reusables.svg?maxAge=2592000\n   :target: https://pypi.python.org/pypi/reusables/\n.. |License| image:: https://img.shields.io/pypi/l/reusables.svg\n   :target: https://pypi.python.org/pypi/reusables/\n.. _str.endswith: https://docs.python.org/2/library/stdtypes.html#str.endswith\n.. _str.startswith: https://docs.python.org/2/library/stdtypes.html#str.startswith\n.. _readthedocs.org: http://reusables.readthedocs.io/en/latest/\n.. _docs: https://docs.python.org/3/library/logging.html#logrecord-attributes\n.. _Box: https://pypi.python.org/pypi/python-box\n\nAdditional Info\n---------------\n\nThis does not claim to provide the most accurate, fastest or most 'pythonic'\nway to implement these useful snippets, this is simply designed for easy\nreference. Any contributions that would help add functionality or\nimprove existing code is warmly welcomed!\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cdgriffith/Reusables", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "reusables", "package_url": "https://pypi.org/project/reusables/", "platform": "any", "project_url": "https://pypi.org/project/reusables/", "project_urls": {"Homepage": "https://github.com/cdgriffith/Reusables"}, "release_url": "https://pypi.org/project/reusables/0.9.5/", "requires_dist": ["pytest ; extra == 'testing'", "coverage (>=3.6) ; extra == 'testing'", "argparse ; extra == 'testing'", "rarfile ; extra == 'testing'", "tox ; extra == 'testing'", "scandir ; extra == 'testing'", "pytest-cov ; extra == 'testing'"], "requires_python": "", "summary": "Commonly Consumed Code Commodities", "version": "0.9.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/cdgriffith/Reusables\" rel=\"nofollow\"><img alt=\"BuildStatus\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d4baab2d0825ef37401820ba90754f36c04ef15/68747470733a2f2f7472617669732d63692e6f72672f636467726966666974682f5265757361626c65732e706e673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/r/cdgriffith/Reusables?branch=master\" rel=\"nofollow\"><img alt=\"CoverageStatus\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/50c6c05951d014077da68f9643c0478f2b11e25f/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f636467726966666974682f5265757361626c65732f6d61737465722e7376673f6d61784167653d32353932303030\"></a> <a href=\"https://pypi.python.org/pypi/reusables/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/13db5fb7cba7dc74c1d12977c43d7ff38d44e651/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7265757361626c65732e737667\"></a> <a href=\"https://pypi.python.org/pypi/reusables/\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/15362e0ab88305279212c1ae8ff941ef96bdff48/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7265757361626c65732e7376673f6d61784167653d32353932303030\"></a> <a href=\"http://reusables.readthedocs.org/en/latest/index.html\" rel=\"nofollow\"><img alt=\"DocStatus\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3052fef1234b0181f3ca87fb84a1e3f579526392/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7265757361626c65732f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p><strong>Commonly Consumed Code Commodities</strong></p>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>The reusables library is a cookbook of python functions and classes that\nprogrammers may find themselves often recreating.</p>\n<p>It includes:</p>\n<ul>\n<li>Archiving and extraction for zip, tar, gz, bz2, and rar</li>\n<li>Path (file and folders) management</li>\n<li>Fast logging setup and tools</li>\n<li>Namespace (dict to class modules with child recursion)</li>\n<li>Friendly datetime formatting</li>\n<li>Config to dict parsing</li>\n<li>Common regular expressions and file extensions</li>\n<li>Helpful wrappers</li>\n<li>Bash analogues</li>\n<li>Easy downloading</li>\n<li>Multiprocessing helpers</li>\n</ul>\n<div id=\"install\">\n<h3>Install</h3>\n<p>Reusables is on PyPI, so can be easily installed with pip or easy_install.</p>\n<pre>pip install reusables\n</pre>\n<p>There are no required decencies. If this doesn\u2019t work, it\u2019s broken, raise\na github issue.</p>\n<p>Reusables is designed to not require any imports outside the standard library,\nbut can be supplemented with those found in the requirements.txt file for\nadditional functionality.</p>\n<p>CI tests run on:</p>\n<ul>\n<li>Python 2.6+</li>\n<li>Python 3.3+</li>\n<li>Pypy</li>\n</ul>\n<p>Examples are provided below, and the API documentation can always be found at\n<a href=\"http://reusables.readthedocs.io/en/latest/\" rel=\"nofollow\">readthedocs.org</a>.</p>\n<p>Please note this is currently in development. Any item in development\nprior to a major version (1.x, 2.x) may change. Once at a major version,\nno breaking changes are planned to occur within that version.</p>\n</div>\n</div>\n<div id=\"what-s-in-the-box\">\n<h2>What\u2019s in the box</h2>\n<div id=\"general-helpers-and-file-management\">\n<h3>General Helpers and File Management</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">reusables</span>\n\n<span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">find_files_list</span><span class=\"p\">(</span><span class=\"s2\">\".\"</span><span class=\"p\">,</span> <span class=\"n\">ext</span><span class=\"o\">=</span><span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">exts</span><span class=\"o\">.</span><span class=\"n\">pictures</span><span class=\"p\">)</span>\n<span class=\"c1\"># ['/home/user/background.jpg', '/home/user/private.png']</span>\n\n<span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"p\">(</span><span class=\"s2\">\"reusables\"</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"reuse\"</span><span class=\"p\">,</span> <span class=\"n\">archive_type</span><span class=\"o\">=</span><span class=\"s2\">\"zip\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># 'C:\\\\Users\\\\Me\\\\Reusables\\\\reuse.zip'</span>\n\n<span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">extract</span><span class=\"p\">(</span><span class=\"s2\">\"test/test_structure.zip\"</span><span class=\"p\">,</span> <span class=\"s2\">\"my_archive\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># All files in the zip will be extracted into directory \"my_archive\"</span>\n\n<span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">config_dict</span><span class=\"p\">(</span><span class=\"s1\">'my_config.cfg'</span><span class=\"p\">)</span>\n<span class=\"c1\"># {'Section 1': {'key 1': 'value 1', 'key2': 'Value2'}, 'Section 2': {}}</span>\n\n<span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">count_files</span><span class=\"p\">(</span><span class=\"s2\">\".\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># 405</span>\n\n<span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">file_hash</span><span class=\"p\">(</span><span class=\"s2\">\"test_structure.zip\"</span><span class=\"p\">,</span> <span class=\"n\">hash_type</span><span class=\"o\">=</span><span class=\"s2\">\"sha256\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># 'bc11af55928ab89771b9a141fa526a5b8a3dbc7d6870fece9b91af5d345a75ea'</span>\n\n<span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">safe_path</span><span class=\"p\">(</span><span class=\"s1\">'/home/user/eViL User</span><span class=\"se\">\\0\\\\</span><span class=\"s1\">/newdir$^&amp;*/new^</span><span class=\"si\">%f</span><span class=\"s1\">ile.txt'</span><span class=\"p\">)</span>\n<span class=\"c1\"># '/home/user/eViL User__/newdir____/new__file.txt'</span>\n\n<span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s2\">\"echo 'hello there!'\"</span><span class=\"p\">,</span> <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># CompletedProcess(args=\"echo 'hello there!'\", returncode=0, stdout='hello there!\\n')</span>\n\n<span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">cut</span><span class=\"p\">(</span><span class=\"s2\">\"abcdefghi\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># ['ab', 'cd', 'ef', 'gh', 'i']</span>\n</pre>\n<p>One of the most reusables pieces of code is the find_files. It is always\nappearing on stackoverflow and forums of how to implement os.walk or glob;\nhere\u2019s both.</p>\n<pre><span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">find_files_list</span><span class=\"p\">(</span><span class=\"s2\">\".\"</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"*reuse*\"</span><span class=\"p\">,</span> <span class=\"n\">depth</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"c1\"># ['.\\\\test\\\\test_reuse.py', '.\\\\test\\\\test_reuse_datetime.py',</span>\n<span class=\"c1\">#  '.\\\\test\\\\test_reuse_logging.py', '.\\\\test\\\\test_reuse_namespace.py']</span>\n\n<span class=\"c1\"># match_case works for both ext and name</span>\n<span class=\"c1\"># depth of 1 means this working directory only, no further</span>\n\n<span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">find_files_list</span><span class=\"p\">(</span><span class=\"n\">ext</span><span class=\"o\">=</span><span class=\"s2\">\".PY\"</span><span class=\"p\">,</span> <span class=\"n\">depth</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">match_case</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># []</span>\n\n<span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">find_files_list</span><span class=\"p\">(</span><span class=\"n\">ext</span><span class=\"o\">=</span><span class=\"s2\">\".py\"</span><span class=\"p\">,</span> <span class=\"n\">depth</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">match_case</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># ['.\\\\setup.py']</span>\n\n<span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">find_files_list</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"setup\"</span><span class=\"p\">,</span> <span class=\"n\">ext</span><span class=\"o\">=</span><span class=\"s2\">\".py\"</span><span class=\"p\">,</span> <span class=\"n\">match_case</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># ['.\\\\setup.py']</span>\n\n<span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">find_files_list</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Setup\"</span><span class=\"p\">,</span> <span class=\"n\">ext</span><span class=\"o\">=</span><span class=\"s2\">\".py\"</span><span class=\"p\">,</span> <span class=\"n\">match_case</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># []</span>\n</pre>\n</div>\n<div id=\"namespace\">\n<h3>Namespace</h3>\n<p>Check out <a href=\"https://pypi.python.org/pypi/python-box\" rel=\"nofollow\">Box</a>, a much improved version as its own library.</p>\n<p>Dictionary management class, similar to Bunch, but designed so\nthat sub-dictionaries are recursively made into namespaces.</p>\n<pre><span class=\"n\">my_breakfast</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"spam\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"eggs\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"sausage\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"bacon\"</span><span class=\"p\">:</span> <span class=\"s2\">\"yummy\"</span><span class=\"p\">}}}}</span>\n<span class=\"n\">namespace_breakfast</span> <span class=\"o\">=</span> <span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">Namespace</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">my_breakfast</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">namespace_breakfast</span><span class=\"o\">.</span><span class=\"n\">spam</span><span class=\"o\">.</span><span class=\"n\">eggs</span><span class=\"o\">.</span><span class=\"n\">sausage</span><span class=\"o\">.</span><span class=\"n\">bacon</span><span class=\"p\">)</span>\n<span class=\"c1\"># yummy</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">namespace_breakfast</span><span class=\"o\">.</span><span class=\"n\">spam</span><span class=\"o\">.</span><span class=\"n\">eggs</span><span class=\"p\">[</span><span class=\"s1\">'sausage'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">bacon</span><span class=\"p\">)</span>\n<span class=\"c1\"># yummy</span>\n\n<span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">namespace_breakfast</span><span class=\"p\">[</span><span class=\"s1\">'spam'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">eggs</span><span class=\"p\">)</span>\n<span class=\"c1\"># \"{'sausage': {'bacon': 'yummy'}}\"</span>\n\n<span class=\"n\">namespace_breakfast</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">()</span>\n<span class=\"c1\">#{'spam': {'eggs': {'sausage': {'bacon': 'yummy'}}}}</span>\n\n<span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">namespace_breakfast</span><span class=\"p\">)</span>\n<span class=\"c1\"># {'spam': &lt;Namespace: {'eggs': {'sausage': {'bacon': '...&gt;}</span>\n<span class=\"c1\"># This is NOT the same as .to_dict() as it is not recursive</span>\n</pre>\n</div>\n<div id=\"logging\">\n<h3>Logging</h3>\n<pre><span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">setup_logger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"c1\"># By default it adds a stream logger to sys.stderr</span>\n\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Test\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># 2016-04-25 19:32:45,542 __main__     INFO     Test</span>\n</pre>\n<p>There are multiple log formatters provided, as well as additional helper functions.\nAll helper functions will accept either the logger object or the name of the logger.</p>\n<pre><span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">remove_stream_handlers</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"c1\"># remove_file_handlers() and remove_all_handlers() also available</span>\n\n<span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">add_stream_handler</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"n\">log_format</span><span class=\"o\">=</span><span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">log_formats</span><span class=\"o\">.</span><span class=\"n\">detailed</span><span class=\"p\">)</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">add_rotating_file_handler</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"s2\">\"my.log\"</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">)</span>\n\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Example log entry\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># 2016-12-14 20:56:55,446 : 315147 MainThread : reusables.log INFO Example log entry</span>\n\n<span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"my.log\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"c1\"># 2016-12-14 20:56:55,446 - __builtin__   INFO     Example log entry</span>\n</pre>\n<p><strong>Provided log formats</strong></p>\n<p>Feel free to provide your own formats, aided by the <a href=\"https://docs.python.org/3/library/logging.html#logrecord-attributes\" rel=\"nofollow\">docs</a>. However this includes\nsome commonly used ones you may find useful. they are all stored in the Namespace\n\u201creusables.log_formats\u201d (feel free to use it as a dict as stated above).</p>\n<dl>\n<dt>Because ReStructuredText tables don\u2019t preserve whitespace (even with literals),</dt>\n<dd>which is important to show distinction in these formatters, here\u2019s it in a code block instead.</dd>\n</dl>\n<pre><span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">log_formats</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n<span class=\"c1\"># ['common', 'level_first', 'threaded', 'easy_read', 'easy_thread', 'detailed']</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">setup_logger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"n\">log_format</span><span class=\"o\">=</span><span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">log_formats</span><span class=\"o\">.</span><span class=\"n\">threaded</span><span class=\"p\">)</span>\n<span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">add_timed_rotating_file_handler</span><span class=\"p\">(</span><span class=\"n\">logger</span><span class=\"p\">,</span> <span class=\"s2\">\"timed.log\"</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">ERROR</span><span class=\"p\">,</span> <span class=\"n\">log_format</span><span class=\"o\">=</span><span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">log_formats</span><span class=\"o\">.</span><span class=\"n\">detailed</span><span class=\"p\">)</span>\n</pre>\n<pre>+--------------+--------------------------------------------------------------------------------------+\n| Formatter    | Example Output                                                                       |\n+==============+======================================================================================+\n| easy_read    | 2016-04-26 21:17:51,225 - example_logger  INFO      example log message              |\n|              | 2016-04-26 21:17:59,074 - example_logger  ERROR     Something broke                  |\n+--------------+--------------------------------------------------------------------------------------+\n| detailed     | 2016-04-26 21:17:51,225 :  7020 MainThread : example_logger INFO example log message |\n|              | 2016-04-26 21:17:59,074 : 14868 MainThread : example_logger ERROR Something broke    |\n+--------------+--------------------------------------------------------------------------------------+\n| level_first  | INFO - example_logger - 2016-04-26 21:17:51,225 - example log message                |\n|              | ERROR - example_logger - 2016-04-26 21:17:59,074 - Something broke                   |\n+--------------+--------------------------------------------------------------------------------------+\n| threaded     | 7020 MainThread : example log message                                                |\n|              | 14868 MainThread : Something broke                                                   |\n+--------------+--------------------------------------------------------------------------------------+\n| easy_thread  |  7020 MainThread : example_logger  INFO      example log message                     |\n|              | 14868 MainThread : example_logger  ERROR     Something broke                         |\n+--------------+--------------------------------------------------------------------------------------+\n| common       | 2016-04-26 21:17:51,225 - example_logger - INFO - example log message                |\n|              | 2016-04-26 21:17:59,074 - example_logger - ERROR - Something broke                   |\n+--------------+--------------------------------------------------------------------------------------+\n</pre>\n</div>\n<div id=\"extension-groups\">\n<h3>Extension Groups</h3>\n<p>It\u2019s common to be looking for a specific type of file.</p>\n<pre><span class=\"k\">if</span> <span class=\"n\">file_path</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">exts</span><span class=\"o\">.</span><span class=\"n\">pictures</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\"> is a picture file\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">))</span>\n</pre>\n<p>That\u2019s right, <a href=\"https://docs.python.org/2/library/stdtypes.html#str.endswith\" rel=\"nofollow\">str.endswith</a> (as well as <a href=\"https://docs.python.org/2/library/stdtypes.html#str.startswith\" rel=\"nofollow\">str.startswith</a>) accept a tuple to search.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>File Type</th>\n<th>Extensions</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>pictures</td>\n<td>.jpeg .jpg .png .gif .bmp .tif .tiff .ico .mng .tga .psd .xcf .svg .icns</td>\n</tr>\n<tr><td>video</td>\n<td>.mkv .avi .mp4 .mov .flv .mpeg .mpg .3gp .m4v .ogv .asf .m1v .m2v .mpe .ogv .wmv .rm .qt .3g2 .asf .vob</td>\n</tr>\n<tr><td>music</td>\n<td>.mp3 .ogg .wav .flac .aif .aiff .au .m4a .wma .mp2 .m4a .m4p .aac .ra .mid .midi .mus .psf</td>\n</tr>\n<tr><td>documents</td>\n<td>.doc .docx .pdf .xls .xlsx .ppt .pptx .csv .epub .gdoc .odt .rtf .txt .info .xps .gslides .gsheet .pages .msg .tex .wpd .wps .csv</td>\n</tr>\n<tr><td>archives</td>\n<td>.zip .rar .7z .tar.gz .tgz .gz .bzip .bzip2 .bz2 .xz .lzma .bin .tar</td>\n</tr>\n<tr><td>cd_images</td>\n<td>.iso .nrg .img .mds .mdf .cue .daa</td>\n</tr>\n<tr><td>scripts</td>\n<td>.py .sh .bat</td>\n</tr>\n<tr><td>binaries</td>\n<td>.msi .exe</td>\n</tr>\n<tr><td>markup</td>\n<td>.html .htm .xml .yaml .json .raml .xhtml .kml</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"wrappers\">\n<h3>Wrappers</h3>\n<p><strong>unique</strong></p>\n<p>There are tons of wrappers for caching and saving inputs and outputs, this is a\ndifferent take that requires the function returns a result not yet provided.</p>\n<pre><span class=\"nd\">@reusables</span><span class=\"o\">.</span><span class=\"n\">unique</span><span class=\"p\">(</span><span class=\"n\">max_retries</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">error_text</span><span class=\"o\">=</span><span class=\"s2\">\"All UIDs taken!\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">gen_small_uid</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n</pre>\n<p><strong>time_it</strong></p>\n<p>Easily time the execution time of a function, using the high precision\nperf_conuter on Python 3.3+, otherwise clock.</p>\n<pre><span class=\"nd\">@reusables</span><span class=\"o\">.</span><span class=\"n\">time_it</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_it</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"0.</span><span class=\"si\">{</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">))</span>\n</pre>\n</div>\n</div>\n<div id=\"command-line-helpers\">\n<h2>Command line helpers</h2>\n<p>Use the Python interpreter as much as a shell? Here\u2019s some handy helpers to\nfill the void. (Please don\u2019t do \u2018import *\u2019 in production code, this is used\nas an easy to use example using the interpreter interactively.)</p>\n<p>&gt; These are not imported by default with \u201cimport reusables\u201d, as they are designed to be imported only in an interactive shell</p>\n<p>Some commands from other areas are also included where they are highly applicable in both\ninstances, such as \u2018touch\u2019 and \u2018download\u2019.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">reusables.cli</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">cd</span><span class=\"p\">(</span><span class=\"s2\">\"~\"</span><span class=\"p\">)</span> <span class=\"c1\"># Automatic user expansion unlike os.chdir()</span>\n\n<span class=\"n\">pwd</span><span class=\"p\">()</span>\n<span class=\"c1\"># '/home/user'</span>\n\n<span class=\"n\">pushd</span><span class=\"p\">(</span><span class=\"s2\">\"Downloads\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># ['Downloads', '/home/user']</span>\n\n<span class=\"n\">pwd</span><span class=\"p\">()</span>\n<span class=\"c1\"># '/home/user/Downloads'</span>\n\n<span class=\"n\">popd</span><span class=\"p\">()</span>\n<span class=\"c1\"># ['/home/user']</span>\n\n<span class=\"n\">ls</span><span class=\"p\">(</span><span class=\"s2\">\"-lah\"</span><span class=\"p\">)</span>  <span class=\"c1\"># Uses 'ls' on linux and 'dir' on windows</span>\n<span class=\"c1\">#  total 1.5M</span>\n<span class=\"c1\">#  drwxr-xr-x 49 james james 4.0K Nov  1 20:09 .</span>\n<span class=\"c1\">#  drwxr-xr-x  3 root  root  4.0K Aug 21  2015 ..</span>\n<span class=\"c1\">#  -rw-rw-r--  1 james james  22K Aug 22 13:21 picture.jpg</span>\n<span class=\"c1\">#  -rw-------  1 james james  17K Nov  1 20:08 .bash_history</span>\n\n<span class=\"n\">cmd</span><span class=\"p\">(</span><span class=\"s2\">\"ifconfig\"</span><span class=\"p\">)</span> <span class=\"c1\"># Shells, decodes and prints 'reusables.run' output</span>\n<span class=\"c1\">#   eth0      Link encap:Ethernet  HWaddr de:ad:be:ef:00:00</span>\n<span class=\"c1\">#             inet addr:10.0.2.5  Bcast:10.0.2.255  Mask:255.255.255.0</span>\n<span class=\"c1\">#             ...</span>\n\n<span class=\"n\">download</span><span class=\"p\">(</span><span class=\"s1\">'https://www.python.org/ftp/python/README.html'</span><span class=\"p\">,</span> <span class=\"n\">save_to_file</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"c1\"># 2016-11-02 10:37:23,644 - reusables.web  INFO      Downloading https://www.python.org/ftp/python/README.html (2.3 KB) to memory</span>\n<span class=\"c1\"># b'&lt;PRE&gt;\\nPython Distribution...</span>\n</pre>\n<div id=\"datetime\">\n<h3>DateTime</h3>\n<p>Easy formatting for datetime objects. Also parsing for ISO formatted time.</p>\n<pre><span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">datetime_format</span><span class=\"p\">(</span><span class=\"s2\">\"Wake up </span><span class=\"si\">{son}</span><span class=\"s2\">, it's </span><span class=\"si\">{hours}</span><span class=\"s2\">:</span><span class=\"si\">{minutes}</span><span class=\"s2\"> </span><span class=\"si\">{periods}</span><span class=\"s2\">!\"</span>\n                    <span class=\"s2\">\"I don't care if it's a {day-fullname}, </span><span class=\"si\">{command}</span><span class=\"s2\">!\"</span><span class=\"p\">,</span>\n                    <span class=\"n\">son</span><span class=\"o\">=</span><span class=\"s2\">\"John\"</span><span class=\"p\">,</span>\n                    <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"s2\">\"Get out of bed!\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># \"Wake up John, it's 09:51 AM! I don't care if it's a Saturday, Get out of bed!!\"</span>\n\n<span class=\"n\">reusables</span><span class=\"o\">.</span><span class=\"n\">datetime_from_iso</span><span class=\"p\">(</span><span class=\"s1\">'2019-03-10T12:56:55.031863'</span><span class=\"p\">)</span>\n<span class=\"c1\"># datetime.datetime(2019, 3, 10, 12, 56, 55, 31863)</span>\n</pre>\n<p>Examples based on  Mon Mar 28 13:27:11 2016</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Format</th>\n<th>Mapping</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>{12-hour}</td>\n<td>%I</td>\n<td>01</td>\n</tr>\n<tr><td>{24-hour}</td>\n<td>%H</td>\n<td>13</td>\n</tr>\n<tr><td>{seconds}</td>\n<td>%S</td>\n<td>14</td>\n</tr>\n<tr><td>{minutes}</td>\n<td>%M</td>\n<td>20</td>\n</tr>\n<tr><td>{microseconds}</td>\n<td>%f</td>\n<td>320944</td>\n</tr>\n<tr><td>{time-zone}</td>\n<td>%Z</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>{years}</td>\n<td>%y</td>\n<td>16</td>\n</tr>\n<tr><td>{years-full}</td>\n<td>%Y</td>\n<td>2016</td>\n</tr>\n<tr><td>{months}</td>\n<td>%m</td>\n<td>03</td>\n</tr>\n<tr><td>{months-name}</td>\n<td>%b</td>\n<td>Mar</td>\n</tr>\n<tr><td>{months-full}</td>\n<td>%B</td>\n<td>March</td>\n</tr>\n<tr><td>{days}</td>\n<td>%d</td>\n<td>28</td>\n</tr>\n<tr><td>{week-days}</td>\n<td>%w</td>\n<td>1</td>\n</tr>\n<tr><td>{year-days}</td>\n<td>%j</td>\n<td>088</td>\n</tr>\n<tr><td>{days-name}</td>\n<td>%a</td>\n<td>Mon</td>\n</tr>\n<tr><td>{days-full}</td>\n<td>%A</td>\n<td>Monday</td>\n</tr>\n<tr><td>{mon-weeks}</td>\n<td>%W</td>\n<td>13</td>\n</tr>\n<tr><td>{date}</td>\n<td>%x</td>\n<td>03/28/16</td>\n</tr>\n<tr><td>{time}</td>\n<td>%X</td>\n<td>13:27:11</td>\n</tr>\n<tr><td>{date-time}</td>\n<td>%C</td>\n<td>Mon Mar 28 13:27:11 2016</td>\n</tr>\n<tr><td>{utc-offset}</td>\n<td>%Z</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>{periods}</td>\n<td>%p</td>\n<td>PM</td>\n</tr>\n<tr><td>{iso-format}</td>\n<td>%Y-%m-%dT%H:%M:%S</td>\n<td>2016-03-28T13:27:11</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"faq\">\n<h2>FAQ</h2>\n<p><strong>How can I help? / Why doesn\u2019t it do what I want it too?</strong></p>\n<p>Please feel free to make suggestions in the \u2018issues\u2019 section of github, or to be super duper helpful go ahead and submit a PR for the\nfunctionality you want to see! Only requirements are that it\u2019s well thought out and is more in place here rather than it\u2019s own project\n(to be merged will need documentation and basic unittests as well, but not a requirement for opening the PR).\nPlease don\u2019t hesitate if you\u2019re new to python! Even the smallest PR contributions will earn a mention in a brand new Contributors section.</p>\n<p><strong>Unrar not installed?</strong></p>\n<p>A common error to see, especially on Windows based systems, is: \u201crarfile.RarCannotExec: Unrar not installed? (rarfile.UNRAR_TOOL=\u2019unrar\u2019)\u201d</p>\n<p>This is probably because unrar is not downloaded or linked properly. Download UnRAR\nfrom <a href=\"http://www.rarlab.com/rar_add.htm\" rel=\"nofollow\">http://www.rarlab.com/rar_add.htm</a> and follow these instructions before\ntrying again: <a href=\"http://rarfile.readthedocs.org/en/latest/faq.html?highlight=windows#how-can-i-get-it-work-on-windows\" rel=\"nofollow\">http://rarfile.readthedocs.org/en/latest/faq.html?highlight=windows#how-can-i-get-it-work-on-windows</a></p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The MIT License (MIT)</p>\n<p>Copyright (c) 2014-2019 Chris Griffith</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \u201cSoftware\u201d), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n</div>\n<div id=\"additional-info\">\n<h2>Additional Info</h2>\n<p>This does not claim to provide the most accurate, fastest or most \u2018pythonic\u2019\nway to implement these useful snippets, this is simply designed for easy\nreference. Any contributions that would help add functionality or\nimprove existing code is warmly welcomed!</p>\n</div>\n\n          </div>"}, "last_serial": 6322156, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "dfd79fba9b88b4500765c2b712a1f81e", "sha256": "562599e229ecfa84177594f439137b9143b6b9b013836434293a6a3859c852f2"}, "downloads": -1, "filename": "reusables-0.1.3-py2.6.egg", "has_sig": true, "md5_digest": "dfd79fba9b88b4500765c2b712a1f81e", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 22575, "upload_time": "2014-02-14T23:46:46", "upload_time_iso_8601": "2014-02-14T23:46:46.289458Z", "url": "https://files.pythonhosted.org/packages/a8/53/30fad45f8cf513e729b780b4a00f871ce1c992f2017b74fa11e9939a2b0b/reusables-0.1.3-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ff08715e7911f5a055add0f775a43d9", "sha256": "69de61905f85fbc3d62910b2463fe6debcbbe8e75f76d16565f38421a27046a9"}, "downloads": -1, "filename": "reusables-0.1.3-py2.7.egg", "has_sig": true, "md5_digest": "3ff08715e7911f5a055add0f775a43d9", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 22398, "upload_time": "2014-02-14T23:46:48", "upload_time_iso_8601": "2014-02-14T23:46:48.118562Z", "url": "https://files.pythonhosted.org/packages/73/06/0185321bff7a8d48ed800df0e9020129edadd404a2d64502a5d6146ad7d0/reusables-0.1.3-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7896e769e2ed485111c56d1af4d9559f", "sha256": "1d0240f97a91a2905162bdebc9f91303867b280dbde35e0b953cc4fee56103b4"}, "downloads": -1, "filename": "reusables-0.1.3-py3.2.egg", "has_sig": true, "md5_digest": "7896e769e2ed485111c56d1af4d9559f", "packagetype": "bdist_egg", "python_version": "3.2", "requires_python": null, "size": 22749, "upload_time": "2014-02-14T23:46:49", "upload_time_iso_8601": "2014-02-14T23:46:49.934484Z", "url": "https://files.pythonhosted.org/packages/25/22/935d7ed2072ab415f135b30f4d9d42c835177085090b5d43db27ddbddad9/reusables-0.1.3-py3.2.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f134b9b5aa484dff78bf868e5c76fac", "sha256": "bfee45049a9072b44bc874283bdfdaeb72e9f1f5885995d3b96e41d6297007fe"}, "downloads": -1, "filename": "reusables-0.1.3-py3.3.egg", "has_sig": true, "md5_digest": "5f134b9b5aa484dff78bf868e5c76fac", "packagetype": "bdist_egg", "python_version": "3.3", "requires_python": null, "size": 23345, "upload_time": "2014-02-14T23:46:53", "upload_time_iso_8601": "2014-02-14T23:46:53.253497Z", "url": "https://files.pythonhosted.org/packages/ef/11/e646fe4ebf34b3c2f5f93926a06f3513e955b1725173846183e099b5b58e/reusables-0.1.3-py3.3.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7575dd0825bff3ad8b3d7090f91a0c9a", "sha256": "db77da4fd21c48dab9477361b910a63917d6240877d716b6837d9bf8c8cb276b"}, "downloads": -1, "filename": "reusables-0.1.3.tar.gz", "has_sig": true, "md5_digest": "7575dd0825bff3ad8b3d7090f91a0c9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10225, "upload_time": "2014-02-14T23:46:44", "upload_time_iso_8601": "2014-02-14T23:46:44.123646Z", "url": "https://files.pythonhosted.org/packages/e2/d1/716433889cbea291d2f07a3c3c59dfdb64814d163495a7a43266f715f8a5/reusables-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "71a50335f9f5438c90089b3c1b4efe83", "sha256": "0e6009c71de591a6c29883be91fe2a7b5829bb4f9e8ffb670dc2b29f8aedfc10"}, "downloads": -1, "filename": "reusables-0.2.0-py2.6.egg", "has_sig": false, "md5_digest": "71a50335f9f5438c90089b3c1b4efe83", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 32243, "upload_time": "2014-05-15T19:37:15", "upload_time_iso_8601": "2014-05-15T19:37:15.659417Z", "url": "https://files.pythonhosted.org/packages/bd/dd/c3dab177fb24277b9230b696a630907c51c4bb3d72671e751dc8c084b9c8/reusables-0.2.0-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4048a689c7591cf17226c847e4590a5", "sha256": "7cf728c691ed726c4b6b04bd25b26b83c6cd8946e6ef328c4a252b30672b79d8"}, "downloads": -1, "filename": "reusables-0.2.0-py2.7.egg", "has_sig": false, "md5_digest": "e4048a689c7591cf17226c847e4590a5", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 32097, "upload_time": "2014-05-15T19:37:18", "upload_time_iso_8601": "2014-05-15T19:37:18.653688Z", "url": "https://files.pythonhosted.org/packages/5b/fb/23fdb29f893ae20c8a8f08c0edff5f312e9b50a33eb2c9d6df0f72905dda/reusables-0.2.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6cb48b3b9f165de22550744bbb9dd6c3", "sha256": "e7c81742f65fe096987e76f92b21d7ba3ce6aae6b91dd4661c520fd1fab39aa9"}, "downloads": -1, "filename": "reusables-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "6cb48b3b9f165de22550744bbb9dd6c3", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 15733, "upload_time": "2014-05-15T19:37:30", "upload_time_iso_8601": "2014-05-15T19:37:30.303669Z", "url": "https://files.pythonhosted.org/packages/88/f2/50caa7c1d6023571b9380ca7de319db2ecab48a093e82ca9cb69394c00d8/reusables-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97259ca25c51a6fc9ea6f8ae5f67aa4e", "sha256": "ceafab1a7c950a9f646b4e8355b03def9597f44b72b4453867a4c6ae40e85b29"}, "downloads": -1, "filename": "reusables-0.2.0-py3.2.egg", "has_sig": false, "md5_digest": "97259ca25c51a6fc9ea6f8ae5f67aa4e", "packagetype": "bdist_egg", "python_version": "3.2", "requires_python": null, "size": 32498, "upload_time": "2014-05-15T19:37:21", "upload_time_iso_8601": "2014-05-15T19:37:21.742069Z", "url": "https://files.pythonhosted.org/packages/28/69/c1035c3968a5d90b8f09c6aeb046d1a9a02243838da3ac3d4917f1a7bdcb/reusables-0.2.0-py3.2.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e30b40aac6a04caab8bb55715ed74234", "sha256": "178700f77ca1e9915e0cb7bf153e58ef326cf9cc67a4f95be67bc450128f9508"}, "downloads": -1, "filename": "reusables-0.2.0-py3.3.egg", "has_sig": false, "md5_digest": "e30b40aac6a04caab8bb55715ed74234", "packagetype": "bdist_egg", "python_version": "3.3", "requires_python": null, "size": 33392, "upload_time": "2014-05-15T19:37:24", "upload_time_iso_8601": "2014-05-15T19:37:24.843493Z", "url": "https://files.pythonhosted.org/packages/de/76/47ebc7bdd365ac5ef15075d034f08bc12630c61e383e940ecbde9dd31014/reusables-0.2.0-py3.3.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "26b4413ff39354a57ca2caa421052a9a", "sha256": "1469e13e2fc51d5cd0f5651580937b4c607aed5b421185601cd69215c138222c"}, "downloads": -1, "filename": "reusables-0.2.0-py3.4.egg", "has_sig": false, "md5_digest": "26b4413ff39354a57ca2caa421052a9a", "packagetype": "bdist_egg", "python_version": "3.4", "requires_python": null, "size": 33225, "upload_time": "2014-05-15T19:37:27", "upload_time_iso_8601": "2014-05-15T19:37:27.653581Z", "url": "https://files.pythonhosted.org/packages/d3/b8/5bbca4ddf688d12a35cee9cc226b0bb76f8611fb2fd2ab4963a75772e0cb/reusables-0.2.0-py3.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c80f699760797f9a66becacad17af1d3", "sha256": "b5d395cf98b922f5863d5d9a7a500c63a75b73650d1f4063009afe59cdfe0460"}, "downloads": -1, "filename": "reusables-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c80f699760797f9a66becacad17af1d3", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 15739, "upload_time": "2014-05-15T19:37:33", "upload_time_iso_8601": "2014-05-15T19:37:33.506424Z", "url": "https://files.pythonhosted.org/packages/82/75/a8d9552930174dd898d67a63102326c93b4ec94edad8c8f4b93a652db430/reusables-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e768391b98b63013e9b156f916f1a963", "sha256": "93b09e7134c8143be4016e3d2d4ace18a9bb0a0acee721c3c3775280e8365898"}, "downloads": -1, "filename": "reusables-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e768391b98b63013e9b156f916f1a963", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13346, "upload_time": "2014-05-15T19:37:12", "upload_time_iso_8601": "2014-05-15T19:37:12.915818Z", "url": "https://files.pythonhosted.org/packages/a4/30/5263dc8bdd10aa78e8936ece864a19b4af10a1816578437e0465dce5cd0a/reusables-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "65f027c0403aa159a908ce8975465f6f", "sha256": "3cfdb53af6a0a41de20725e6599f8bd800e7599d7a28fe8d83a95c1cf33ac89a"}, "downloads": -1, "filename": "reusables-0.3.0-py2-none-any.whl", "has_sig": false, "md5_digest": "65f027c0403aa159a908ce8975465f6f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 28269, "upload_time": "2016-04-27T18:23:22", "upload_time_iso_8601": "2016-04-27T18:23:22.439408Z", "url": "https://files.pythonhosted.org/packages/c3/04/71ceac7c0640b65170f01c53c9512107dd24583edd8fd0465fed0ca34cb8/reusables-0.3.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "283971edac83f2b4c82de4255eab47e6", "sha256": "951e200c970d6cca113d11721b3432c12c503135e7d284f4f747ef58ab7762a9"}, "downloads": -1, "filename": "reusables-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "283971edac83f2b4c82de4255eab47e6", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 28268, "upload_time": "2016-04-27T18:23:33", "upload_time_iso_8601": "2016-04-27T18:23:33.621089Z", "url": "https://files.pythonhosted.org/packages/45/38/5481faf15342e32997be9c599ae5b3de61f79801d1cdbe14d160e507ba40/reusables-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b332298b30cb854b479169ff545cde5c", "sha256": "d165b830f19f84b5008ae92c40bab40b26115cdd5660ab239fb9ab7c3c8e5da3"}, "downloads": -1, "filename": "reusables-0.3.0.tar.gz", "has_sig": false, "md5_digest": "b332298b30cb854b479169ff545cde5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20592, "upload_time": "2016-04-27T18:22:53", "upload_time_iso_8601": "2016-04-27T18:22:53.967354Z", "url": "https://files.pythonhosted.org/packages/69/c2/c19036d07963640f66537cdf64e57d5c5151b07378b592a8c587c38db82a/reusables-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "9a1b232ef7a8cbeaf3575eb0480468ed", "sha256": "3962a6a982e3b24a1b693fff24d4d9b240c9cba79b81cf5762dc595933e23445"}, "downloads": -1, "filename": "reusables-0.4.0-py2-none-any.whl", "has_sig": false, "md5_digest": "9a1b232ef7a8cbeaf3575eb0480468ed", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 35750, "upload_time": "2016-08-14T05:56:01", "upload_time_iso_8601": "2016-08-14T05:56:01.743894Z", "url": "https://files.pythonhosted.org/packages/3f/17/318257b6c223b1af61e15caf53f35d744d16408b9586891d44f9cdb746bc/reusables-0.4.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d1a4a16dc501916910da63b4c067313", "sha256": "c2f0e7393a42b825549305a506b8a537a435f8c8b6d46fbc76b4607d245ab78e"}, "downloads": -1, "filename": "reusables-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4d1a4a16dc501916910da63b4c067313", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 35750, "upload_time": "2016-08-14T05:56:05", "upload_time_iso_8601": "2016-08-14T05:56:05.102711Z", "url": "https://files.pythonhosted.org/packages/3d/80/0cd91f27f508184072037f5e10d4313b2ccb603949d2df92f6e9ddc0734f/reusables-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7f0f63391945eae548a98ad9238175d", "sha256": "d273088dd73789b786aef46404d38b34f29c09310ff73e6a7b27c69b1ae18f89"}, "downloads": -1, "filename": "reusables-0.4.0.tar.gz", "has_sig": false, "md5_digest": "f7f0f63391945eae548a98ad9238175d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26286, "upload_time": "2016-08-14T05:55:58", "upload_time_iso_8601": "2016-08-14T05:55:58.848102Z", "url": "https://files.pythonhosted.org/packages/94/a3/46ac40cdd809f7598010a50c1ef01349b84c20b4d52e125c611cbcdb110e/reusables-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "6df4aa503b0d66c3f38823b8fd061727", "sha256": "86f05cd149e6f62e6aa0a01f51b1202a3ff1546e82549dc2b225bedd157d1b56"}, "downloads": -1, "filename": "reusables-0.4.1-py2-none-any.whl", "has_sig": false, "md5_digest": "6df4aa503b0d66c3f38823b8fd061727", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 36129, "upload_time": "2016-08-16T22:21:58", "upload_time_iso_8601": "2016-08-16T22:21:58.459400Z", "url": "https://files.pythonhosted.org/packages/d5/0b/16e1f5444d484cdff82e1ce1bec84f86885641ec6d423d7ee79f0e7bb171/reusables-0.4.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69450735ac33550ca4f775ec09fda05c", "sha256": "938cd3732ee2788249326c2c20c00f747e8bdaf595eee47a3799c3140b9d0691"}, "downloads": -1, "filename": "reusables-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "69450735ac33550ca4f775ec09fda05c", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 36131, "upload_time": "2016-08-16T22:22:01", "upload_time_iso_8601": "2016-08-16T22:22:01.286087Z", "url": "https://files.pythonhosted.org/packages/8d/12/cbd9002d568d6ba3c2bca0b63fdf01c9ede8ed9757d24d3fef087529afab/reusables-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87da7bc0bd168d792de64dcbdef5db35", "sha256": "e3d9326bd83ec3e68d2b1a09a3ccc8eee995f141f5608c3f858bada7ed652f96"}, "downloads": -1, "filename": "reusables-0.4.1.tar.gz", "has_sig": false, "md5_digest": "87da7bc0bd168d792de64dcbdef5db35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26629, "upload_time": "2016-08-16T22:21:55", "upload_time_iso_8601": "2016-08-16T22:21:55.519602Z", "url": "https://files.pythonhosted.org/packages/f2/f0/a2d74e7b3f3d6e53842d62700af3dafcca61557d352faaa168325cfeda9d/reusables-0.4.1.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "f82a6ec93e2c890e5dbf198d724f0517", "sha256": "ab96dd5fe00f3a26c2a8e5ce087189187ca4f3ed439e652028e356d76e92610e"}, "downloads": -1, "filename": "reusables-0.5.0-py2-none-any.whl", "has_sig": false, "md5_digest": "f82a6ec93e2c890e5dbf198d724f0517", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 38763, "upload_time": "2016-09-13T20:38:51", "upload_time_iso_8601": "2016-09-13T20:38:51.347065Z", "url": "https://files.pythonhosted.org/packages/90/fc/97c0532c7ded66e0e288a6134d1f3504ca0f85537d27971147a007b1732c/reusables-0.5.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0a19522d14a294bffbb552200c401e9", "sha256": "bffc1978cab95ee96aa7a49cc686243e60c14797250949faee3fd21d2031ea44"}, "downloads": -1, "filename": "reusables-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e0a19522d14a294bffbb552200c401e9", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 38763, "upload_time": "2016-09-13T20:38:56", "upload_time_iso_8601": "2016-09-13T20:38:56.116827Z", "url": "https://files.pythonhosted.org/packages/39/c7/2a2691cee5bd7541753c0b3304859150b80c0e1ba229b74ff4fc2f0400be/reusables-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b59a375a73ef4abc1186064a0dd84a71", "sha256": "1658691bee79716711d25d2a7bef6cb146ecbe771b0c5bffdcc43afd2ee98427"}, "downloads": -1, "filename": "reusables-0.5.0.tar.gz", "has_sig": false, "md5_digest": "b59a375a73ef4abc1186064a0dd84a71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29734, "upload_time": "2016-09-13T20:38:48", "upload_time_iso_8601": "2016-09-13T20:38:48.175661Z", "url": "https://files.pythonhosted.org/packages/31/73/37b4ee46b54f90b8e6d26361e012913ad4ff93c5ec003f95d61b902a0bab/reusables-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "86be28861691247de8c969062884c94c", "sha256": "3c4c705f6802f1c6d106fc9a827273c1ae9505eb4e77951e74d8303fe9b209e4"}, "downloads": -1, "filename": "reusables-0.5.1-py2-none-any.whl", "has_sig": false, "md5_digest": "86be28861691247de8c969062884c94c", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 39892, "upload_time": "2016-10-14T03:09:30", "upload_time_iso_8601": "2016-10-14T03:09:30.113187Z", "url": "https://files.pythonhosted.org/packages/e9/ef/c4363624b99e66012e3a93036e82b8020debb0275387ff3df1a68485a506/reusables-0.5.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "215adb1821b82916fee7ecbf7d838ae1", "sha256": "5e1ef802eb05c29bd15f87656db07c726a3c3fb7da8755e07c49231456cd0311"}, "downloads": -1, "filename": "reusables-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "215adb1821b82916fee7ecbf7d838ae1", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 39894, "upload_time": "2016-10-14T03:09:33", "upload_time_iso_8601": "2016-10-14T03:09:33.168282Z", "url": "https://files.pythonhosted.org/packages/bd/e7/c65ea5277cc310622681361a1d42b7ff4049b67658c556cf77bc778f020d/reusables-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b197970a502678fc0ef33ed55105d50", "sha256": "cfd5a7692010d1de052206003e66b81c11aa7d2c55c1b06ca4fe805cf1dac39d"}, "downloads": -1, "filename": "reusables-0.5.1.tar.gz", "has_sig": false, "md5_digest": "3b197970a502678fc0ef33ed55105d50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30235, "upload_time": "2016-10-14T03:09:27", "upload_time_iso_8601": "2016-10-14T03:09:27.245870Z", "url": "https://files.pythonhosted.org/packages/eb/9a/98d7f9b751ee64b1c41a5f448b4cd7518b1b699aa2aeec91261715730d0f/reusables-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "39ec9467b64b37cef33a95f2f619c4ea", "sha256": "14158ecab1ea4df5f53e8732b8aba7af70a6012b69cb13bb74893be7239902a9"}, "downloads": -1, "filename": "reusables-0.5.2-py2-none-any.whl", "has_sig": false, "md5_digest": "39ec9467b64b37cef33a95f2f619c4ea", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 39893, "upload_time": "2016-10-14T03:19:42", "upload_time_iso_8601": "2016-10-14T03:19:42.499973Z", "url": "https://files.pythonhosted.org/packages/17/ea/57c4496de4734e78d54587e94157fea47f5b1136af975b5b218b0693e762/reusables-0.5.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "32c1fded79e4b55950ea2b847979c491", "sha256": "43baa95c71595247d8f9dd59534fa89c8e61af086c88be96e97f75e1220659c3"}, "downloads": -1, "filename": "reusables-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "32c1fded79e4b55950ea2b847979c491", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 39894, "upload_time": "2016-10-14T03:19:44", "upload_time_iso_8601": "2016-10-14T03:19:44.877550Z", "url": "https://files.pythonhosted.org/packages/27/a8/481b94c477b70c9a874fa0da55e0b528c1694682833edb4332ff855a8633/reusables-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d26e4a150cb77968c10210e6d5b73fb8", "sha256": "f31e37eb4ad04335844299713bee4dda60c6b152fb79177808f808fee2b1ce8b"}, "downloads": -1, "filename": "reusables-0.5.2.tar.gz", "has_sig": false, "md5_digest": "d26e4a150cb77968c10210e6d5b73fb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30236, "upload_time": "2016-10-14T03:19:39", "upload_time_iso_8601": "2016-10-14T03:19:39.792834Z", "url": "https://files.pythonhosted.org/packages/65/de/ac31b496d7469af7d3db702533e05605fc102cbb929e69a012e5a6761c23/reusables-0.5.2.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "80cd33bdc18821e9630af2047ee86d0b", "sha256": "968a7ba44a0fb88cbeead26c86dd6037227f247ea317d95b176e3b84a9b2d9ce"}, "downloads": -1, "filename": "reusables-0.6.1-py2-none-any.whl", "has_sig": false, "md5_digest": "80cd33bdc18821e9630af2047ee86d0b", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 50479, "upload_time": "2016-11-03T19:33:44", "upload_time_iso_8601": "2016-11-03T19:33:44.743730Z", "url": "https://files.pythonhosted.org/packages/8e/04/845ec3bac1d5b146871e068168efd577659740b1e880ed18e8df12f63438/reusables-0.6.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9f18d31c96620ca02fb497548a7ab99", "sha256": "7590573fe1143a0832891f5beab3345d0b690bf2bdd4740b461b28aa483c6b4b"}, "downloads": -1, "filename": "reusables-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c9f18d31c96620ca02fb497548a7ab99", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 50481, "upload_time": "2016-11-03T19:33:49", "upload_time_iso_8601": "2016-11-03T19:33:49.285646Z", "url": "https://files.pythonhosted.org/packages/1c/29/b9bdfe719854f27091d561407594af12481c5ef601f45321d7ce9eec9ac1/reusables-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "001031a042359f3cfc5b1c0effeae202", "sha256": "5b686a3c820fb0c935f62148349cda84dbe094a9d45b5d6d1441db65586cfdba"}, "downloads": -1, "filename": "reusables-0.6.1.tar.gz", "has_sig": false, "md5_digest": "001031a042359f3cfc5b1c0effeae202", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37910, "upload_time": "2016-11-03T19:33:41", "upload_time_iso_8601": "2016-11-03T19:33:41.328536Z", "url": "https://files.pythonhosted.org/packages/eb/88/81e7c8b442e135bc99cc9f2e6d491c8f0c4fd63a2584a3abda6b45eb2505/reusables-0.6.1.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "5ceb8235f90a13f87de04d74d25fc7a0", "sha256": "cd93a108f25fad47c79cc3b9e59d8780fee6b8f83313113f9d7185e97d3ef66e"}, "downloads": -1, "filename": "reusables-0.7.0-py2-none-any.whl", "has_sig": false, "md5_digest": "5ceb8235f90a13f87de04d74d25fc7a0", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 60970, "upload_time": "2016-12-15T04:55:13", "upload_time_iso_8601": "2016-12-15T04:55:13.120593Z", "url": "https://files.pythonhosted.org/packages/5c/2c/3b943b4f26bd8596937fad416cfae42f31c17aa22032f4f7f4a17e38f927/reusables-0.7.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56f7b6e0e2be8f55d0c2ac045c874614", "sha256": "038413b4b803d048502f7c3ae3d1c05811c27fd79bfea76a8fa9aa2ae2186412"}, "downloads": -1, "filename": "reusables-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "56f7b6e0e2be8f55d0c2ac045c874614", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 60970, "upload_time": "2016-12-15T04:55:15", "upload_time_iso_8601": "2016-12-15T04:55:15.854359Z", "url": "https://files.pythonhosted.org/packages/06/87/33536ed6e251c325ddb6515032acbec12485758561bba1abc3d3cbf4d95b/reusables-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84cbd1e1c0ef44427554b7c75e10b08a", "sha256": "6baca6c7983e64addc3a9c4be9cd0bd80c40f7657ed99b1ccf6757ef03063b31"}, "downloads": -1, "filename": "reusables-0.7.0.tar.gz", "has_sig": false, "md5_digest": "84cbd1e1c0ef44427554b7c75e10b08a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45748, "upload_time": "2016-12-15T04:55:10", "upload_time_iso_8601": "2016-12-15T04:55:10.474468Z", "url": "https://files.pythonhosted.org/packages/6e/3d/ed134df0e743b45eaeaafafbeec48c09de56439e5bf65945b1bb382eab38/reusables-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "c43bd1fd34c94e41e3d5561e14c22148", "sha256": "1aa347d3229fcd3e26fb5991487201fa6e97c2d66b6cee9e0a8d1b268d188147"}, "downloads": -1, "filename": "reusables-0.8.0-py2-none-any.whl", "has_sig": false, "md5_digest": "c43bd1fd34c94e41e3d5561e14c22148", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 68128, "upload_time": "2017-01-16T02:31:22", "upload_time_iso_8601": "2017-01-16T02:31:22.063613Z", "url": "https://files.pythonhosted.org/packages/4c/75/26be25e3d924e8e8f9765cb677570d69c5dd23cc01b36ceaf9857bfd904d/reusables-0.8.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af66b21043218f3508c63b85ba9775f0", "sha256": "b74fa625e232922c97f20eec78c990f14d4d7c460a258a56d7cc71808365b325"}, "downloads": -1, "filename": "reusables-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "af66b21043218f3508c63b85ba9775f0", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 68126, "upload_time": "2017-01-16T02:30:12", "upload_time_iso_8601": "2017-01-16T02:30:12.440966Z", "url": "https://files.pythonhosted.org/packages/56/6f/dfb99a3a41c2b121e71c51bbd55b09ee88ccfdaf35baacda8695131d8a37/reusables-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62b51a7863512742514bcefd5df7a3c3", "sha256": "8130624afe4984ec48b7364bd399f97789b6f636194b1f759132d5cdefe4a690"}, "downloads": -1, "filename": "reusables-0.8.0.tar.gz", "has_sig": false, "md5_digest": "62b51a7863512742514bcefd5df7a3c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52165, "upload_time": "2017-01-16T02:31:35", "upload_time_iso_8601": "2017-01-16T02:31:35.443132Z", "url": "https://files.pythonhosted.org/packages/95/0b/ce928abf26335dff700d37e6da20a1b6bb9f31127f7aa351425cd06e47d9/reusables-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "7f6d86b7ae13074f325c900ea60d0b4b", "sha256": "4c338a8e4163244c9f6225ea3d6ce23fc652db552e4ce66647626bf73fbf60dd"}, "downloads": -1, "filename": "reusables-0.9.0-py2-none-any.whl", "has_sig": false, "md5_digest": "7f6d86b7ae13074f325c900ea60d0b4b", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 46436, "upload_time": "2017-04-27T23:35:39", "upload_time_iso_8601": "2017-04-27T23:35:39.327242Z", "url": "https://files.pythonhosted.org/packages/2a/ec/c5b04499d6d37204329a51eccc18ab967757e3274e57bff9863c4d6142f2/reusables-0.9.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "795784466448b6c3aa8fd9bba8c62d3c", "sha256": "6f5501fa75a69a7f079dc17a84a4581a1710ad7738b694d8ac20b7f118374dd5"}, "downloads": -1, "filename": "reusables-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "795784466448b6c3aa8fd9bba8c62d3c", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 46437, "upload_time": "2017-04-27T23:35:41", "upload_time_iso_8601": "2017-04-27T23:35:41.904370Z", "url": "https://files.pythonhosted.org/packages/bc/79/587ef86cb72df880bf19e87006f87814ec0377a87a70df81733337cb5248/reusables-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79d8deb77ebb4e9a4c6beb76d49725e5", "sha256": "35594050556b37b76ea35d24c9d3f414f3661d386f11ca07d5c02e8fe46a2200"}, "downloads": -1, "filename": "reusables-0.9.0.tar.gz", "has_sig": false, "md5_digest": "79d8deb77ebb4e9a4c6beb76d49725e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33579, "upload_time": "2017-04-27T23:35:37", "upload_time_iso_8601": "2017-04-27T23:35:37.053193Z", "url": "https://files.pythonhosted.org/packages/48/aa/7cfa8b5ffd8a894225028eec79cf92fc0b3a073c2b4a33e7d1f625c931da/reusables-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "78490136d926aee8ccc7ff5aaec9fbed", "sha256": "6f8866491737cd6d386d20929533b46c280a29e3377e1c56ebd6504ed6e52cba"}, "downloads": -1, "filename": "reusables-0.9.1-py2-none-any.whl", "has_sig": false, "md5_digest": "78490136d926aee8ccc7ff5aaec9fbed", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 62128, "upload_time": "2017-05-12T23:15:44", "upload_time_iso_8601": "2017-05-12T23:15:44.715308Z", "url": "https://files.pythonhosted.org/packages/64/03/d9d598e579ff64b0f12ca7ebee1b2a9c909e78f4918b1e9ee5a9def24949/reusables-0.9.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e083aca282e28b9e1ed97e363cda4b7a", "sha256": "65bc6b294628c0226c55039167ce56853f691ecacdf79618b3574269e139f134"}, "downloads": -1, "filename": "reusables-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e083aca282e28b9e1ed97e363cda4b7a", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 62126, "upload_time": "2017-05-12T23:15:47", "upload_time_iso_8601": "2017-05-12T23:15:47.870188Z", "url": "https://files.pythonhosted.org/packages/46/99/a5e0867149b1e3547da2586d31ae546ce476c14a8dc512f56a5a54f49c78/reusables-0.9.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "64c0e17d0fc662f066839a2c5fed07f5", "sha256": "cdea2ad352d5674f0dc68d3bbad3113e3dcbf484ffcd0551aee9a1bff784fcfb"}, "downloads": -1, "filename": "reusables-0.9.1.tar.gz", "has_sig": false, "md5_digest": "64c0e17d0fc662f066839a2c5fed07f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46705, "upload_time": "2017-05-12T23:15:42", "upload_time_iso_8601": "2017-05-12T23:15:42.206317Z", "url": "https://files.pythonhosted.org/packages/66/cc/fae48b9d18b329101893f34ca0ff66e1a97a184cf7297e34a7891b71242d/reusables-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "54eca55ddb992166cf9fd94c31297cfc", "sha256": "b818e60a50e9e190355806dd15fcfd37827e3847def95600fdc1a3e030b76f8b"}, "downloads": -1, "filename": "reusables-0.9.2-py2-none-any.whl", "has_sig": false, "md5_digest": "54eca55ddb992166cf9fd94c31297cfc", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 62160, "upload_time": "2017-05-22T21:32:43", "upload_time_iso_8601": "2017-05-22T21:32:43.281369Z", "url": "https://files.pythonhosted.org/packages/6b/bd/908b015539af1c888ee04c43f93088037dc3b65dc17fe07baa953332135f/reusables-0.9.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59b57434d2d7d60bddbf13e95c9066d1", "sha256": "a8a2d5b20f0ae5162777ee055a184fbe3b44ad1203767215bd8cb01f7c42ef0b"}, "downloads": -1, "filename": "reusables-0.9.2-py3-none-any.whl", "has_sig": false, "md5_digest": "59b57434d2d7d60bddbf13e95c9066d1", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 62159, "upload_time": "2017-05-22T21:32:44", "upload_time_iso_8601": "2017-05-22T21:32:44.844768Z", "url": "https://files.pythonhosted.org/packages/17/e8/6a718f7e67c0555647b10cbd7d4eb22fad14f07adeed54c87ff2555687ac/reusables-0.9.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c6a771a7cc0738d3eda63a0b8d1b768", "sha256": "5117d2e4947d303c7ccc0d7b114c9347a75c1bb058d421d2248048f54fa0cea0"}, "downloads": -1, "filename": "reusables-0.9.2.tar.gz", "has_sig": false, "md5_digest": "2c6a771a7cc0738d3eda63a0b8d1b768", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46743, "upload_time": "2017-05-22T21:32:41", "upload_time_iso_8601": "2017-05-22T21:32:41.649016Z", "url": "https://files.pythonhosted.org/packages/e7/7f/3e23c7abdc5bf2c8949f4e9e864d1177ecde6b730311af5d76f68d33ab30/reusables-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "21e83734204b7d31ec2f5c130a83f780", "sha256": "d6f78be7d075da3052b92a247b7ac0861c373ace56913770a92d34bf427ebfbf"}, "downloads": -1, "filename": "reusables-0.9.3-py2-none-any.whl", "has_sig": false, "md5_digest": "21e83734204b7d31ec2f5c130a83f780", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 62169, "upload_time": "2018-09-21T01:53:00", "upload_time_iso_8601": "2018-09-21T01:53:00.067605Z", "url": "https://files.pythonhosted.org/packages/55/b1/61f19a2d827509822830c83597c612bb6f1c5551c288fc31adbc51cdba44/reusables-0.9.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3793e52eeecea4214495bc5b0d57a862", "sha256": "7547e29e5c538db19431efd0207895f8f8f3d54943ae0fd1df89187c4e4e984c"}, "downloads": -1, "filename": "reusables-0.9.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3793e52eeecea4214495bc5b0d57a862", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 62168, "upload_time": "2018-09-21T01:53:02", "upload_time_iso_8601": "2018-09-21T01:53:02.068918Z", "url": "https://files.pythonhosted.org/packages/09/c6/2ec9f2f5eb64a8d3d7c1e8822b8749fcaf09e0fffa48d67b2796a80c2507/reusables-0.9.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c142205d4b902cdc244881c78be510aa", "sha256": "f2f85d29c0e7b9a44e58c1dab8faedbfcfd60d19c6633b37c5623ab43714eb35"}, "downloads": -1, "filename": "reusables-0.9.3.tar.gz", "has_sig": false, "md5_digest": "c142205d4b902cdc244881c78be510aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46761, "upload_time": "2018-09-21T01:52:58", "upload_time_iso_8601": "2018-09-21T01:52:58.015561Z", "url": "https://files.pythonhosted.org/packages/32/ba/009d66d4201f60e6a788bf5bc49f65db281dc6464b9c45057969b6e04ef0/reusables-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "b6ee7d8212797701dc89df53a94572b5", "sha256": "27353a88bdebf09e3505c8133fd1e891723858b64b3f92fe8aa751dcad1c2d13"}, "downloads": -1, "filename": "reusables-0.9.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b6ee7d8212797701dc89df53a94572b5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 58880, "upload_time": "2019-07-20T18:28:39", "upload_time_iso_8601": "2019-07-20T18:28:39.134135Z", "url": "https://files.pythonhosted.org/packages/0c/5a/4f197a999378f968dbff8899320a2d0a8344fd525db3a578a0712c87fd3f/reusables-0.9.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a27ef19f0a46f2aa4fd2dee2bdb0cbe", "sha256": "a650dcbf82072edb7a245b35a2c653e1d2e2bd2218102074ac1500df8bef51ac"}, "downloads": -1, "filename": "reusables-0.9.4.tar.gz", "has_sig": false, "md5_digest": "9a27ef19f0a46f2aa4fd2dee2bdb0cbe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56019, "upload_time": "2019-07-20T18:28:41", "upload_time_iso_8601": "2019-07-20T18:28:41.158118Z", "url": "https://files.pythonhosted.org/packages/61/45/ee2c16ea12148d83f4d216b8d975f443c276d66ce97b62622eeed5d5916e/reusables-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "6fb2caa3e0af7ae388cf194772174e4c", "sha256": "259d4657148cdfcc7937f8c57773601d08110a113c379d1ee081625765427b57"}, "downloads": -1, "filename": "reusables-0.9.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6fb2caa3e0af7ae388cf194772174e4c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 59607, "upload_time": "2019-12-18T01:24:10", "upload_time_iso_8601": "2019-12-18T01:24:10.050983Z", "url": "https://files.pythonhosted.org/packages/f2/6f/5cbc945f867d96abe27bdee5169800d1d2985b741ddd8832a8b81573ad7e/reusables-0.9.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c64e01213cf7b7eab3ad2dbc1026691c", "sha256": "b14ba10983651b341449f4a2e0e2bbc4322c377b0baf2ceca24d64ae52588ef7"}, "downloads": -1, "filename": "reusables-0.9.5.tar.gz", "has_sig": false, "md5_digest": "c64e01213cf7b7eab3ad2dbc1026691c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60196, "upload_time": "2019-12-18T01:24:12", "upload_time_iso_8601": "2019-12-18T01:24:12.204375Z", "url": "https://files.pythonhosted.org/packages/87/32/1e3c43274f636208dde6cf04583b7ad82777b7f9718e64e525e7e8191a94/reusables-0.9.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6fb2caa3e0af7ae388cf194772174e4c", "sha256": "259d4657148cdfcc7937f8c57773601d08110a113c379d1ee081625765427b57"}, "downloads": -1, "filename": "reusables-0.9.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6fb2caa3e0af7ae388cf194772174e4c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 59607, "upload_time": "2019-12-18T01:24:10", "upload_time_iso_8601": "2019-12-18T01:24:10.050983Z", "url": "https://files.pythonhosted.org/packages/f2/6f/5cbc945f867d96abe27bdee5169800d1d2985b741ddd8832a8b81573ad7e/reusables-0.9.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c64e01213cf7b7eab3ad2dbc1026691c", "sha256": "b14ba10983651b341449f4a2e0e2bbc4322c377b0baf2ceca24d64ae52588ef7"}, "downloads": -1, "filename": "reusables-0.9.5.tar.gz", "has_sig": false, "md5_digest": "c64e01213cf7b7eab3ad2dbc1026691c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60196, "upload_time": "2019-12-18T01:24:12", "upload_time_iso_8601": "2019-12-18T01:24:12.204375Z", "url": "https://files.pythonhosted.org/packages/87/32/1e3c43274f636208dde6cf04583b7ad82777b7f9718e64e525e7e8191a94/reusables-0.9.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:20 2020"}