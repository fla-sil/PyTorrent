{"info": {"author": "FNNDSC", "author_email": "dev@babymri.org", "bugtrack_url": null, "classifiers": [], "description": "pfdicomtag\n==========\n\nQuick Overview\n--------------\n\n-  Extract DICOM tags.\n\nOverview\n--------\n\npfdicomtag is a dir-based DICOM file tag extractor. By 'dir-based' is understood that input DICOMs exist in a nested directory tree, and results of the tag extraction are written an output tree. This tree mimics the structure of the input data tree.\n\nDependencies\n------------\n\nMake sure that the following dependencies are installed on your host\nsystem/python3 virtual env:\n\n-  pydicom (to read DICOM files)\n-  matplotlib (to save data in various image formats)\n-  pillow (to save data in jpg format)\n\nInstallation\n~~~~~~~~~~~~\n\nThe best method of installing this script and all of its dependencies is\nby fetching it from PyPI\n\n.. code:: bash\n\n        pip3 install pydicomtag\n\nYou migh get an error about `python3-tk` not installed. So you should install that package.\nFor example on Ubuntu:\n\n.. code:: bash\n\n        sudo apt-get update\n        sudo apt-get install -y python3-tk\n\n\nCommand line arguments\n----------------------\n\n::\n        -I|--inputDir <inputDir>\n        Input DICOM directory to examine. By default, the first file in this\n        directory is examined for its tag information. There is an implicit\n        assumption that each <inputDir> contains a single DICOM series.\n\n        -i|--inputFile <inputFile>\n        An optional <inputFile> specified relative to the <inputDir>. If \n        specified, then do not perform a directory walk, but convert only \n        this file.\n\n        -e|--extension <DICOMextension>\n        An optional extension to filter the DICOM files of interest from the \n        <inputDir>.\n\n        [-O|--outputDir <outputDir>]\n        The directory to contain all output files.\n\n        NOTE: If neither -F nor -T are specified, a '-r raw' is\n        assumed.\n\n        -F|--tagFile <tagFile>\n        Read the tags, one-per-line in <tagFile>, and print the\n        corresponding tag information in the DICOM <inputFile>.\n\n        -T|--tagList <tagList>\n        Read the list of comma-separated tags in <tagList>, and print the\n        corresponding tag information parsed from the DICOM <inputFile>.\n\n        -m|--image <[<index>:]imageFile>\n        If specified, also convert the <inputFile> to <imageFile>. If the\n        name is preceded by an index and colon, then convert this indexed \n        file in the particular <inputDir>.\n\n        -o|--outputFileStem <outputFileStem>\n        The output file stem to store data. This should *not* have a file\n        extension, or rather, any \".\" in the name are considered part of \n        the stem and are *not* considered extensions.\n\n        [-t|--outputFileType <outputFileType>]\n        A comma specified list of output types. These can be:\n\n            o <type>    <ext>       <desc>\n            o raw       -raw.txt    the raw internal dcm structure to string\n            o json      .json       a json representation\n            o html      .html       an html representation with optional image\n            o dict      -dict.txt   a python dictionary\n            o col       -col.txt    a two-column text representation (tab sep)\n            o csv       .csv        a csv representation\n\n        [-p|--printToScreen]\n        If specified, will print tags to screen.\n\n        [-x|--man]\n        Show full help.\n\n        [-y|--synopsis]\n        Show brief help.\n\n        -v|--verbosity <level>\n        Set the app verbosity level. \n\n             -1: No internal output.\n              0: All internal output.\n\nExamples\n~~~~~~~~\n\nReplicate a tree and for each DICOM series dir, create multiple reports, including an html output with an embedded image of the center (middle file) of the series:\n\n.. code:: bash\n\n        pfdicomtag  -I /var/www/html/normative      \\\n                    -m m:out.jpg -e dcm             \\\n                    -o %PatientAge-%md5PatientID    \\\n                    -O /var/www/html/tag            \\\n                    -t raw,json,col,csv,html,dict", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FNNDSC/med2image", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pfdicomtag", "package_url": "https://pypi.org/project/pfdicomtag/", "platform": "", "project_url": "https://pypi.org/project/pfdicomtag/", "project_urls": {"Homepage": "https://github.com/FNNDSC/med2image"}, "release_url": "https://pypi.org/project/pfdicomtag/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "(Python) utility to extract meta data from trees of organized DICOM files.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"quick-overview\">\n<h2>Quick Overview</h2>\n<ul>\n<li>Extract DICOM tags.</li>\n</ul>\n</div>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>pfdicomtag is a dir-based DICOM file tag extractor. By \u2018dir-based\u2019 is understood that input DICOMs exist in a nested directory tree, and results of the tag extraction are written an output tree. This tree mimics the structure of the input data tree.</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>Make sure that the following dependencies are installed on your host\nsystem/python3 virtual env:</p>\n<ul>\n<li>pydicom (to read DICOM files)</li>\n<li>matplotlib (to save data in various image formats)</li>\n<li>pillow (to save data in jpg format)</li>\n</ul>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>The best method of installing this script and all of its dependencies is\nby fetching it from PyPI</p>\n<pre>pip3 install pydicomtag\n</pre>\n<p>You migh get an error about <cite>python3-tk</cite> not installed. So you should install that package.\nFor example on Ubuntu:</p>\n<pre>sudo apt-get update\nsudo apt-get install -y python3-tk\n</pre>\n</div>\n</div>\n<div id=\"command-line-arguments\">\n<h2>Command line arguments</h2>\n<dl>\n<dt>::</dt>\n<dd><p>-I|\u2013inputDir &lt;inputDir&gt;\nInput DICOM directory to examine. By default, the first file in this\ndirectory is examined for its tag information. There is an implicit\nassumption that each &lt;inputDir&gt; contains a single DICOM series.</p>\n<p>-i|\u2013inputFile &lt;inputFile&gt;\nAn optional &lt;inputFile&gt; specified relative to the &lt;inputDir&gt;. If\nspecified, then do not perform a directory walk, but convert only\nthis file.</p>\n<p>-e|\u2013extension &lt;DICOMextension&gt;\nAn optional extension to filter the DICOM files of interest from the\n&lt;inputDir&gt;.</p>\n<p>[-O|\u2013outputDir &lt;outputDir&gt;]\nThe directory to contain all output files.</p>\n<p>NOTE: If neither -F nor -T are specified, a \u2018-r raw\u2019 is\nassumed.</p>\n<p>-F|\u2013tagFile &lt;tagFile&gt;\nRead the tags, one-per-line in &lt;tagFile&gt;, and print the\ncorresponding tag information in the DICOM &lt;inputFile&gt;.</p>\n<p>-T|\u2013tagList &lt;tagList&gt;\nRead the list of comma-separated tags in &lt;tagList&gt;, and print the\ncorresponding tag information parsed from the DICOM &lt;inputFile&gt;.</p>\n<p>-m|\u2013image &lt;[&lt;index&gt;:]imageFile&gt;\nIf specified, also convert the &lt;inputFile&gt; to &lt;imageFile&gt;. If the\nname is preceded by an index and colon, then convert this indexed\nfile in the particular &lt;inputDir&gt;.</p>\n<p>-o|\u2013outputFileStem &lt;outputFileStem&gt;\nThe output file stem to store data. This should <em>not</em> have a file\nextension, or rather, any \u201c.\u201d in the name are considered part of\nthe stem and are <em>not</em> considered extensions.</p>\n<p>[-t|\u2013outputFileType &lt;outputFileType&gt;]\nA comma specified list of output types. These can be:</p>\n<blockquote>\no &lt;type&gt;    &lt;ext&gt;       &lt;desc&gt;\no raw       -raw.txt    the raw internal dcm structure to string\no json      .json       a json representation\no html      .html       an html representation with optional image\no dict      -dict.txt   a python dictionary\no col       -col.txt    a two-column text representation (tab sep)\no csv       .csv        a csv representation</blockquote>\n<p>[-p|\u2013printToScreen]\nIf specified, will print tags to screen.</p>\n<p>[-x|\u2013man]\nShow full help.</p>\n<p>[-y|\u2013synopsis]\nShow brief help.</p>\n<p>-v|\u2013verbosity &lt;level&gt;\nSet the app verbosity level.</p>\n<blockquote>\n<dl>\n<dt>-1: No internal output.</dt>\n<dd>0: All internal output.</dd>\n</dl>\n</blockquote>\n</dd>\n</dl>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>Replicate a tree and for each DICOM series dir, create multiple reports, including an html output with an embedded image of the center (middle file) of the series:</p>\n<pre>pfdicomtag  -I /var/www/html/normative      <span class=\"se\">\\\n</span>            -m m:out.jpg -e dcm             <span class=\"se\">\\\n</span>            -o %PatientAge-%md5PatientID    <span class=\"se\">\\\n</span>            -O /var/www/html/tag            <span class=\"se\">\\\n</span>            -t raw,json,col,csv,html,dict\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3997826, "releases": {"0.9.9": [{"comment_text": "", "digests": {"md5": "2516815804d995e08d7dfaa96ab4b753", "sha256": "94c71f44ba9934074cde84701af5f72d279cb0c9d6e3d256fa8cb228ab305504"}, "downloads": -1, "filename": "pfdicomtag-0.9.9.tar.gz", "has_sig": false, "md5_digest": "2516815804d995e08d7dfaa96ab4b753", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10925, "upload_time": "2018-06-22T21:15:04", "upload_time_iso_8601": "2018-06-22T21:15:04.282676Z", "url": "https://files.pythonhosted.org/packages/27/42/b4a90f810fbc89680f16174162028f695e08644e0e0c42bbc538e0c38002/pfdicomtag-0.9.9.tar.gz", "yanked": false}], "0.99.99": [{"comment_text": "", "digests": {"md5": "3c14ba04826dcee12e382379f4084e7d", "sha256": "356372c545ed9ad18111ff15e9825fe75f7eb67196fba6bc2cd258ab266ea08e"}, "downloads": -1, "filename": "pfdicomtag-0.99.99.tar.gz", "has_sig": false, "md5_digest": "3c14ba04826dcee12e382379f4084e7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10628, "upload_time": "2018-06-24T22:47:25", "upload_time_iso_8601": "2018-06-24T22:47:25.775171Z", "url": "https://files.pythonhosted.org/packages/e6/d6/ec2746f8bf1400b32942beceac27f68d531b86b85a6777c18026731c185f/pfdicomtag-0.99.99.tar.gz", "yanked": false}], "0.99.999": [{"comment_text": "", "digests": {"md5": "07842650c7f1465536dc61279c8d36dc", "sha256": "9bc2028d5a9287ed70d8e320880533f9a3493b6083d36cf2ae095cf13c7af416"}, "downloads": -1, "filename": "pfdicomtag-0.99.999.tar.gz", "has_sig": false, "md5_digest": "07842650c7f1465536dc61279c8d36dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10628, "upload_time": "2018-06-24T22:49:42", "upload_time_iso_8601": "2018-06-24T22:49:42.710742Z", "url": "https://files.pythonhosted.org/packages/54/2a/d8d12ded726c4081e6d68de3d8b32438174cdbfb9051d05b5f182e69728a/pfdicomtag-0.99.999.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "65d001f846d14d890385116c77f365aa", "sha256": "f6c267fe215ebad9b5f4c56fa31aa3cc17d81d8748227c3de1e8de70620373d6"}, "downloads": -1, "filename": "pfdicomtag-1.0.0.tar.gz", "has_sig": false, "md5_digest": "65d001f846d14d890385116c77f365aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10620, "upload_time": "2018-06-24T22:51:15", "upload_time_iso_8601": "2018-06-24T22:51:15.236154Z", "url": "https://files.pythonhosted.org/packages/1e/76/81a543bcd6da11ab992af2af95c1b0f8c8cd3e2315f0d4129ddc699c4860/pfdicomtag-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "65d001f846d14d890385116c77f365aa", "sha256": "f6c267fe215ebad9b5f4c56fa31aa3cc17d81d8748227c3de1e8de70620373d6"}, "downloads": -1, "filename": "pfdicomtag-1.0.0.tar.gz", "has_sig": false, "md5_digest": "65d001f846d14d890385116c77f365aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10620, "upload_time": "2018-06-24T22:51:15", "upload_time_iso_8601": "2018-06-24T22:51:15.236154Z", "url": "https://files.pythonhosted.org/packages/1e/76/81a543bcd6da11ab992af2af95c1b0f8c8cd3e2315f0d4129ddc699c4860/pfdicomtag-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:57 2020"}