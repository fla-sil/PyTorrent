{"info": {"author": "Tres Seaver", "author_email": "tseaver@agendaless.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Plone", "Framework :: Zope2", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Programming Language :: Python", "Topic :: Software Development", "Topic :: Software Development :: Libraries :: Application Frameworks"], "description": "FSDump Product Overview\n=======================\n\nFSDump grew out of an itch which many Zope developers have:\nthrough-the-web development is faster and easier to do, but\ncauses significant deployment and configuration management\nproblems.  Through-the-web code cannot (easily) be checked into\nCVS, or diffed to show changes, or grepped to find the source\nof an error message.\n\nGoals\n-----\n\n- The first goal is to ease the burden of getting TTW code\n  under version control:  i.e., to make it possible to check\n  a representation of the TTW code into CVS, and then to see\n  what changes between versions.\n\n- Keep the file-system representations of the TTW objects \n  simple and \"natural\" (we are explicitly avoiding XML here).\n\n- Future goals might include:\n\n  o Two-way migration (e.g., make changes to dumped items in\n    vim/emacs, and then import those changes back into the\n    TTW code).\n\nInstallation\n------------\n\nSee the separate `installation directions <INSTALL.html>`_.\n\n\nUsage\n-----\n\n- Use the \"Add list\" to create a \"Dumper\" instance in a folder\n  (or Product) which contains the TTW code to be dumped.\n\n- Supply an absolute path to a directory on the filesystem\n  in which the dumper is to create the files (note that the\n  user as whom Zope is running needs write access to this\n  directory).  See the `form help <Dumper_editForm.html>`_.\n\n- Click the \"Change and Dump\" button to do the dump to the\n  indicated directory.\n\n\nMapping TTW Code to the Filesystem\n----------------------------------\n\nSee the `mappings documentation <Mappings.html>`_.\n\n\nKnown Issues\n------------\n\n- Some types of metadata (``bobobase_modification_time``) won't\n  be exported as a property.\n\n- See the `TODO list <TODO.html>`_.\n\n------------------------------------------------------------\n\nEdit / Dump Dumper\n==================\n\nDescription\n-----------\n\nThe \"Edit / Dump\" view of an Dumper instance is used to set the\nfilesystem path to which the object's parent will be dumped, and\nto initiate this dumping.\nhow the operations\n\nControls\n--------\n\n``ID``\n    The id of the Dumper object (readonly)\n\n``Filesystem path``\n    The path under which the Dumper's parent will have its filesystem\n    analog (a subdirectory) created.  All children of the Dumper's\n    parent will have their analogs created under this subdirectory.\n    E.g., if the value of this field is ``/tmp``, and the parent folder\n    is called ``parent_folder``, then the dumper will create a\n    subdirectory, ``/tmp/parent_folder``, and build objects in it\n    corresponding to the dumper's \"siblings\".\n\n``Use .metadata file``\n    If checked, write a \"new-style\" .metadata file, in a format\n    compatilbie with CMF 1.4 and later.  Properties go into the\n    ``[Default]`` section.\n\n``Change``\n    Changes the filesystem mapping.\n\n``Change and Dump``\n    Changes the filesystem mapping and performs the dumping.\n\n------------------------------------------------------------\n\nMapping TTW Code to the Filesystem\n==================================\n\nGeneral Mapping\n---------------\n\n- Create the most \"natural\" filesystem analogue for each TTW\n  item:  Folders -> directories, DTML Methods/Documents ->\n  DTML files, PythonMethods -> Python modules.\n\n- Trap non-inline properties in a companion file, with a\n  ``.properties`` suffix.  Store one property per line, using\n  ``name:type=value`` syntax.\n\n  * XXX: in companion ``.metadata`` file, store the properties\n    in the ``[Default]`` section.\n\n- Map the permission-role map in the ``[Permissions]`` section of the\n  companion ``.metadata`` file (XXX this feature not present before\n  the switch to ``.metadata``, although it might have mapped to the\n  ``.security`` file supported by CMF 1.3)\n\n- Map local roles in the ``[LocalRoles]`` section of the\n  companion ``.metadata`` file (XXX this feature not present before\n  the switch to ``.metadata``)\n\n- Write proxy roles to a ``proxy`` property (XXX CMF 1.4 compatibility;\n  this is an *ugly* spelling).  Should probably put it into a \"prettier\"\n  spelling, as well, and lobby to change the spelling used in CMF.\n\n- Preserve enough metadata to be able to recreate the TTW\n  object, preferably by *using its web interface.*  This rule\n  is the chief differentiator (in concept) from pickling; we\n  don't save state which cannot be set by a TTW manager.\n\nSpecific Mappings\n-----------------\n\nFolder\n%%%%%%\n\n- Recursively store contained items into the folder's directory.\n\n- Store a list of the dumped items in an ``.objects`` file,\n  one line per item, using the format, ``name:meta_type``.\n\n  * XXX: in ``.metadata`` file, store the same lines in an\n    ``[Objects]`` directory.\n\nFile / Image\n%%%%%%%%%%%%\n\n- Save the file contents themselves in binary format using the item's id.\n\n- Store properties in ``*.properties``.\n\nDTMLMethod\n%%%%%%%%%%\n\n- Create a single file containng the text of the template.  Filename will\n  have extension, ``.dtml``.\n\nDTMLDocument\n%%%%%%%%%%%%\n\n- Create a single file containng the text of the template.  Filename will\n  have extension, ``.dtml``.\n\n- Store properties in ``*.properties``.\n\nPython Script\n%%%%%%%%%%%%%\n\n- Create a module containing a single top-level function definition, using\n  the \"read\" format (bindings in comments at the top).\n\nPageTemplate\n%%%%%%%%%%%%\n\n- Create a single file containng the text of the template.  Filename will\n  have extension, ``.pt``.\n\n- Store properties in ``*.properties``.\n\nSQL Method\n%%%%%%%%%%\n\n- Inject the parameter list inline into the body, with a leading blank line.\n\nZCatalog\n%%%%%%%%\n\n- Store the paths of the catalogued objects in a ``<id>.catalog`` file,\n  one line per item.\n\n- Store the index definititions in a ``<id>.indexes`` file,\n  one line per index, using the format, ``name:meta_type``.\n\n- Store the schema in a ``<id>.metadata`` file, one line per\n  field name.\n\nController Python Script\n%%%%%%%%%%%%%%%%%%%%%%%%\n\n- Create a module containing a single top-level function\n  definition, using the \"read\" format (bindings in comments\n  at the top).  Filename will have extension, ``.cpy``\n\n- Store properties in ``*.properties``.\n\nController Validator\n%%%%%%%%%%%%%%%%%%%%\n\n- Create a module containing a single top-level function\n  definition, using the \"read\" format (bindings in comments\n  at the top).  Filename will have extension, ``.vpy``\n\n- Store properties in ``*.properties``.\n\nController Page Template\n%%%%%%%%%%%%%%%%%%%%%%%%\n\n- Create a single file containng the text of the template.\n  Filename will have extension, ``.cpt``.\n\n- Store properties in ``*.properties``.\n\n\nMappings for Obsolete Types\n---------------------------\n\nPython Method\n%%%%%%%%%%%%%\n\n- Create a module containing a single top-level function\n  definition, using the name, argument list, and body.\n\nZClass\n%%%%%%\n\n- Map to a directory.\n\n- Store \"basic\" tab values in ``.properties``\n\n- Store icon in ``.icon``\n\n- Store propertysheets in ``propertysheets/common``.\n\n- Store method tab objects (including nested ZClasses)\n  in ``propertysheets/methods``.\n\nCommon Instance Property Sheet (ZClass property sheet)\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n- Store properties as ``name:type=value`` in file of same name.\n\nZope Permission\n%%%%%%%%%%%%%%%\n\n- Store values in ``*.properties``.\n\nZope Factory\n%%%%%%%%%%%%\n\n- Store values in ``*.properties``.\n\nWizard\n%%%%%%\n\n- Map to a directory.\n\n- Store properties in ``.properties``.\n\n- Store pages.\n\nWizardPage\n%%%%%%%%%%\n\n- Store text in ``*.wizardpage``.\n\n- Store properties in ``*.properties``.\n\n------------------------------------------------------------\n\nFSDump Changelog\n================\n\n0.9.5 (2009-11-03)\n------------------\n\n- Removed broken HelpSys registrations.\n\n- Fixed the version number used in making the sdist.\n\n\n0.9.4 (2009-02-22)\n------------------\n\n- SVN:  http://svn.zope.org/Products.FSDump/tags/0.9.4\n\n- Repackaged as a Python egg.\n\n- Converted docs to ReStructured text.\n\n- Moved from CVS to SVN.\n\n\n0.9.3 (2006-12-20)\n------------------\n\n- SVN:  http://svn.zope.org/Products.FSDump/tags/FSDump-0_9_3\n\n- Applied patch from Damine Baty, fixing the output of dumping ZSQLMethods\n  to match the format used by CMF's FSZSQLMethods.\n  \n- Applied patch from Alejo Roda, adding a handler for Formulator forms.\n\n- Applied patch from Willi Langenburger, adding a handler for ZWikiPage\n  objects.\n\n\n0.9.2 (2005-08-09)\n-------------------------\n\n- SVN:  http://svn.zope.org/Products.FSDump/tags/FSDump-0_9_2\n\n- CVS tag:  ``FSDump-0_9_2``\n\n- Reverted ``handler_overrides`` brownbag\n\n\n0.9.1 (2005-08-09)\n------------------\n\n- SVN:  http://svn.zope.org/Products.FSDump/tags/FSDump-0_9_1\n\n- CVS tag:  ``FSDump-0_9_1``\n\n- Added argument to Dumper factory to allow caller to supply handler\n  overrides.\n\n- Applied patch from Sam Brauer, addressing the following issues:\n\n  * Proxy roles and security settings weren't being written to\n    the ``.metadata`` file.\n\n  * The ``[Default]`` section should be named ``[default]``.\n\n  * The property-type extensions confuse CMF's FilesystemDirectoryView\n    (the patch removes the ``:string`` for string properties;  others\n    are likely still broken).\n\n  \n0.9 (2005-04-29)\n----------------\n\n- SVN:  http://svn.zope.org/Products.FSDump/tags/FSDump-0_9\n\n- CVS tag:  ``FSDump-0_9``\n\n- Merged Andy Fundinger's work, adding handlers for the following\n  CMFFormController meta_types:\n\n  * ControllerPythonScript\n\n  * ControllerValidator\n\n  * ControllerPageTemplates\n\n- Fix missing import of ConflictError (thanks to Willi Langenburger\n  for the patch).\n\n- Applied a patch from Willi Langenburger to permit use of a dumper\n  in the root of the Zope instance.\n\n\n0.8.1 (2004-12-09)\n------------------\n\n- SVN:  http://svn.zope.org/Products.FSDump/tags/FSDump-0_8_1\n\n- CVS tag:  ``FSDump-0_8_1``\n\n- Repackaged to nest the actual products directory inside a version-\n  qualified wrapper directory;  added an INSTALL.txt in the wrapper.\n\n\n0.8 (2004-10-13)\n----------------\n\n- SVN:  http://svn.zope.org/Products.FSDump/tags/FSDump-0_8\n\n- CVS tag:  ``FSDump-0_8``\n\n- Applied patch from Zope collector #1463 to make dumped SQL methods\n  fit better with CMF's FSSQLMethod representation.\n\n\n0.7 (2004-05-17)\n----------------\n\n- SVN:  http://svn.zope.org/Products.FSDump/tags/FSDump-0_7\n\n- CVS tag:  ``FSDump-0_7``\n\n- Added knob to force use of single ``.metadata`` file, rather than\n  multiples (CMF 1.4 compatibility).\n\n- Migrated ZMI to use PageTemplates.\n\n- Bug:  when synthesizing a file extension, Dumper didn't include the\n  synthesized extension in the name of the \"companion\" properties file.\n\n\n0.6 (2001-08-09)\n----------------\n\n- SVN:  http://svn.zope.org/Products.FSDump/tags/FSDump-0_6\n\n- CVS tag:  ``FSDump-0_6``\n\n- Add handlers for:\n\n  - PageTemplate\n\n\n0.5 (2001-08-03)\n----------------\n\n- SVN:  http://svn.zope.org/Products.FSDump/tags/FSDump-0_5\n\n- CVS tag:  ``FSDump-0_5``\n\n- Add handlers for:\n\n  - PythonScript\n\n\n0.4 (2001-06-18)\n----------------\n\n- SVN:  http://svn.zope.org/Products.FSDump/tags/FSDump-0_4\n\n- CVS tag:  ``FSDump-0_4``\n\n- Conform to the \"Finished Project Guidelines\",\n  http://dev.zope.org/Wikis/DevSite/Proposals/FinishedProductGuidelines\n\n- Added HelpSystem stuff.\n\n- Moved to use declarative security.\n\n\n0.3 (2001-01-06)\n----------------\n\n- SVN:  http://svn.zope.org/Products.FSDump/tags/FSDump-0_3\n\n- No CVS tag?\n\n- Dump ZClass icon.\n\n- Add handlers for:\n\n  * Wizards\n\n  * Wizard Pages\n\n\n0.2 (2000-11-19)\n----------------\n\n- SVN:  http://svn.zope.org/Products.FSDump/tags/FSDump-0_2\n\n- CVS tag:  ``FSDump-0_2``\n\n- Add handlers for:\n\n  * ZClasses\n\n  * ZClass property sheets\n\n  * TTW Permissions\n\n  * TTW Factories\n\n\n- Fix unixism in ``Dumper._setFSPath()`` -- thanks Craig! (cba@mediaone.net)\n\n0.1 (2000-11-16)\n----------------\n\n- SVN:  http://svn.zope.org/Products.FSDump/tags/FSDump-0_1\n\n- CVS tag:  ``FSDump-0_1``\n\n- Initial release\n\n------------------------------------------------------------\n\nDownload\n========", "description_content_type": null, "docs_url": "https://pythonhosted.org/Products.FSDump/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/Products.FSDump", "keywords": "web application server zope zope2", "license": "ZPL 2.1 (http://www.zope.org/Resources/License/ZPL-2.1)", "maintainer": null, "maintainer_email": null, "name": "Products.FSDump", "package_url": "https://pypi.org/project/Products.FSDump/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Products.FSDump/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/Products.FSDump"}, "release_url": "https://pypi.org/project/Products.FSDump/0.9.5/", "requires_dist": null, "requires_python": null, "summary": "Dump through-the-web Zope objects to the filesystem", "version": "0.9.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"fsdump-product-overview\">\n<h2>FSDump Product Overview</h2>\n<p>FSDump grew out of an itch which many Zope developers have:\nthrough-the-web development is faster and easier to do, but\ncauses significant deployment and configuration management\nproblems.  Through-the-web code cannot (easily) be checked into\nCVS, or diffed to show changes, or grepped to find the source\nof an error message.</p>\n<div id=\"goals\">\n<h3>Goals</h3>\n<ul>\n<li><p>The first goal is to ease the burden of getting TTW code\nunder version control:  i.e., to make it possible to check\na representation of the TTW code into CVS, and then to see\nwhat changes between versions.</p>\n</li>\n<li><p>Keep the file-system representations of the TTW objects\nsimple and \u201cnatural\u201d (we are explicitly avoiding XML here).</p>\n</li>\n<li><p>Future goals might include:</p>\n<dl>\n<dt>o Two-way migration (e.g., make changes to dumped items in</dt>\n<dd><p>vim/emacs, and then import those changes back into the\nTTW code).</p>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>See the separate <a href=\"INSTALL.html\" rel=\"nofollow\">installation directions</a>.</p>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<ul>\n<li>Use the \u201cAdd list\u201d to create a \u201cDumper\u201d instance in a folder\n(or Product) which contains the TTW code to be dumped.</li>\n<li>Supply an absolute path to a directory on the filesystem\nin which the dumper is to create the files (note that the\nuser as whom Zope is running needs write access to this\ndirectory).  See the <a href=\"Dumper_editForm.html\" rel=\"nofollow\">form help</a>.</li>\n<li>Click the \u201cChange and Dump\u201d button to do the dump to the\nindicated directory.</li>\n</ul>\n</div>\n<div id=\"mapping-ttw-code-to-the-filesystem\">\n<h3>Mapping TTW Code to the Filesystem</h3>\n<p>See the <a href=\"Mappings.html\" rel=\"nofollow\">mappings documentation</a>.</p>\n</div>\n<div id=\"known-issues\">\n<h3>Known Issues</h3>\n<ul>\n<li>Some types of metadata (<tt>bobobase_modification_time</tt>) won\u2019t\nbe exported as a property.</li>\n<li>See the <a href=\"TODO.html\" rel=\"nofollow\">TODO list</a>.</li>\n</ul>\n</div>\n</div>\n<hr class=\"docutils\">\n<div id=\"edit-dump-dumper\">\n<h2>Edit / Dump Dumper</h2>\n<div id=\"description\">\n<h3>Description</h3>\n<p>The \u201cEdit / Dump\u201d view of an Dumper instance is used to set the\nfilesystem path to which the object\u2019s parent will be dumped, and\nto initiate this dumping.\nhow the operations</p>\n</div>\n<div id=\"controls\">\n<h3>Controls</h3>\n<dl>\n<dt><tt>ID</tt></dt>\n<dd>The id of the Dumper object (readonly)</dd>\n<dt><tt>Filesystem path</tt></dt>\n<dd>The path under which the Dumper\u2019s parent will have its filesystem\nanalog (a subdirectory) created.  All children of the Dumper\u2019s\nparent will have their analogs created under this subdirectory.\nE.g., if the value of this field is <tt>/tmp</tt>, and the parent folder\nis called <tt>parent_folder</tt>, then the dumper will create a\nsubdirectory, <tt>/tmp/parent_folder</tt>, and build objects in it\ncorresponding to the dumper\u2019s \u201csiblings\u201d.</dd>\n<dt><tt>Use .metadata file</tt></dt>\n<dd>If checked, write a \u201cnew-style\u201d .metadata file, in a format\ncompatilbie with CMF 1.4 and later.  Properties go into the\n<tt>[Default]</tt> section.</dd>\n<dt><tt>Change</tt></dt>\n<dd>Changes the filesystem mapping.</dd>\n<dt><tt>Change and Dump</tt></dt>\n<dd>Changes the filesystem mapping and performs the dumping.</dd>\n</dl>\n</div>\n</div>\n<hr class=\"docutils\">\n<div id=\"id1\">\n<h2>Mapping TTW Code to the Filesystem</h2>\n<div id=\"general-mapping\">\n<h3>General Mapping</h3>\n<ul>\n<li>Create the most \u201cnatural\u201d filesystem analogue for each TTW\nitem:  Folders -&gt; directories, DTML Methods/Documents -&gt;\nDTML files, PythonMethods -&gt; Python modules.</li>\n<li>Trap non-inline properties in a companion file, with a\n<tt>.properties</tt> suffix.  Store one property per line, using\n<tt>name:type=value</tt> syntax.<ul>\n<li>XXX: in companion <tt>.metadata</tt> file, store the properties\nin the <tt>[Default]</tt> section.</li>\n</ul>\n</li>\n<li>Map the permission-role map in the <tt>[Permissions]</tt> section of the\ncompanion <tt>.metadata</tt> file (XXX this feature not present before\nthe switch to <tt>.metadata</tt>, although it might have mapped to the\n<tt>.security</tt> file supported by CMF 1.3)</li>\n<li>Map local roles in the <tt>[LocalRoles]</tt> section of the\ncompanion <tt>.metadata</tt> file (XXX this feature not present before\nthe switch to <tt>.metadata</tt>)</li>\n<li>Write proxy roles to a <tt>proxy</tt> property (XXX CMF 1.4 compatibility;\nthis is an <em>ugly</em> spelling).  Should probably put it into a \u201cprettier\u201d\nspelling, as well, and lobby to change the spelling used in CMF.</li>\n<li>Preserve enough metadata to be able to recreate the TTW\nobject, preferably by <em>using its web interface.</em>  This rule\nis the chief differentiator (in concept) from pickling; we\ndon\u2019t save state which cannot be set by a TTW manager.</li>\n</ul>\n</div>\n<div id=\"specific-mappings\">\n<h3>Specific Mappings</h3>\n<div id=\"folder\">\n<h4>Folder</h4>\n<ul>\n<li>Recursively store contained items into the folder\u2019s directory.</li>\n<li>Store a list of the dumped items in an <tt>.objects</tt> file,\none line per item, using the format, <tt>name:meta_type</tt>.<ul>\n<li>XXX: in <tt>.metadata</tt> file, store the same lines in an\n<tt>[Objects]</tt> directory.</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"file-image\">\n<h4>File / Image</h4>\n<ul>\n<li>Save the file contents themselves in binary format using the item\u2019s id.</li>\n<li>Store properties in <tt>*.properties</tt>.</li>\n</ul>\n</div>\n<div id=\"dtmlmethod\">\n<h4>DTMLMethod</h4>\n<ul>\n<li>Create a single file containng the text of the template.  Filename will\nhave extension, <tt>.dtml</tt>.</li>\n</ul>\n</div>\n<div id=\"dtmldocument\">\n<h4>DTMLDocument</h4>\n<ul>\n<li>Create a single file containng the text of the template.  Filename will\nhave extension, <tt>.dtml</tt>.</li>\n<li>Store properties in <tt>*.properties</tt>.</li>\n</ul>\n</div>\n<div id=\"python-script\">\n<h4>Python Script</h4>\n<ul>\n<li>Create a module containing a single top-level function definition, using\nthe \u201cread\u201d format (bindings in comments at the top).</li>\n</ul>\n</div>\n<div id=\"pagetemplate\">\n<h4>PageTemplate</h4>\n<ul>\n<li>Create a single file containng the text of the template.  Filename will\nhave extension, <tt>.pt</tt>.</li>\n<li>Store properties in <tt>*.properties</tt>.</li>\n</ul>\n</div>\n<div id=\"sql-method\">\n<h4>SQL Method</h4>\n<ul>\n<li>Inject the parameter list inline into the body, with a leading blank line.</li>\n</ul>\n</div>\n<div id=\"zcatalog\">\n<h4>ZCatalog</h4>\n<ul>\n<li>Store the paths of the catalogued objects in a <tt><span class=\"pre\">&lt;id&gt;.catalog</span></tt> file,\none line per item.</li>\n<li>Store the index definititions in a <tt><span class=\"pre\">&lt;id&gt;.indexes</span></tt> file,\none line per index, using the format, <tt>name:meta_type</tt>.</li>\n<li>Store the schema in a <tt><span class=\"pre\">&lt;id&gt;.metadata</span></tt> file, one line per\nfield name.</li>\n</ul>\n</div>\n<div id=\"controller-python-script\">\n<h4>Controller Python Script</h4>\n<ul>\n<li>Create a module containing a single top-level function\ndefinition, using the \u201cread\u201d format (bindings in comments\nat the top).  Filename will have extension, <tt>.cpy</tt></li>\n<li>Store properties in <tt>*.properties</tt>.</li>\n</ul>\n</div>\n<div id=\"controller-validator\">\n<h4>Controller Validator</h4>\n<ul>\n<li>Create a module containing a single top-level function\ndefinition, using the \u201cread\u201d format (bindings in comments\nat the top).  Filename will have extension, <tt>.vpy</tt></li>\n<li>Store properties in <tt>*.properties</tt>.</li>\n</ul>\n</div>\n<div id=\"controller-page-template\">\n<h4>Controller Page Template</h4>\n<ul>\n<li>Create a single file containng the text of the template.\nFilename will have extension, <tt>.cpt</tt>.</li>\n<li>Store properties in <tt>*.properties</tt>.</li>\n</ul>\n</div>\n</div>\n<div id=\"mappings-for-obsolete-types\">\n<h3>Mappings for Obsolete Types</h3>\n<div id=\"python-method\">\n<h4>Python Method</h4>\n<ul>\n<li>Create a module containing a single top-level function\ndefinition, using the name, argument list, and body.</li>\n</ul>\n</div>\n<div id=\"zclass\">\n<h4>ZClass</h4>\n<ul>\n<li>Map to a directory.</li>\n<li>Store \u201cbasic\u201d tab values in <tt>.properties</tt></li>\n<li>Store icon in <tt>.icon</tt></li>\n<li>Store propertysheets in <tt>propertysheets/common</tt>.</li>\n<li>Store method tab objects (including nested ZClasses)\nin <tt>propertysheets/methods</tt>.</li>\n</ul>\n</div>\n<div id=\"common-instance-property-sheet-zclass-property-sheet\">\n<h4>Common Instance Property Sheet (ZClass property sheet)</h4>\n<ul>\n<li>Store properties as <tt>name:type=value</tt> in file of same name.</li>\n</ul>\n</div>\n<div id=\"zope-permission\">\n<h4>Zope Permission</h4>\n<ul>\n<li>Store values in <tt>*.properties</tt>.</li>\n</ul>\n</div>\n<div id=\"zope-factory\">\n<h4>Zope Factory</h4>\n<ul>\n<li>Store values in <tt>*.properties</tt>.</li>\n</ul>\n</div>\n<div id=\"wizard\">\n<h4>Wizard</h4>\n<ul>\n<li>Map to a directory.</li>\n<li>Store properties in <tt>.properties</tt>.</li>\n<li>Store pages.</li>\n</ul>\n</div>\n<div id=\"wizardpage\">\n<h4>WizardPage</h4>\n<ul>\n<li>Store text in <tt>*.wizardpage</tt>.</li>\n<li>Store properties in <tt>*.properties</tt>.</li>\n</ul>\n</div>\n</div>\n</div>\n<hr class=\"docutils\">\n<div id=\"fsdump-changelog\">\n<h2>FSDump Changelog</h2>\n<div id=\"id2\">\n<h3>0.9.5 (2009-11-03)</h3>\n<ul>\n<li>Removed broken HelpSys registrations.</li>\n<li>Fixed the version number used in making the sdist.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.9.4 (2009-02-22)</h3>\n<ul>\n<li>SVN:  <a href=\"http://svn.zope.org/Products.FSDump/tags/0.9.4\" rel=\"nofollow\">http://svn.zope.org/Products.FSDump/tags/0.9.4</a></li>\n<li>Repackaged as a Python egg.</li>\n<li>Converted docs to ReStructured text.</li>\n<li>Moved from CVS to SVN.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.9.3 (2006-12-20)</h3>\n<ul>\n<li>SVN:  <a href=\"http://svn.zope.org/Products.FSDump/tags/FSDump-0_9_3\" rel=\"nofollow\">http://svn.zope.org/Products.FSDump/tags/FSDump-0_9_3</a></li>\n<li>Applied patch from Damine Baty, fixing the output of dumping ZSQLMethods\nto match the format used by CMF\u2019s FSZSQLMethods.</li>\n<li>Applied patch from Alejo Roda, adding a handler for Formulator forms.</li>\n<li>Applied patch from Willi Langenburger, adding a handler for ZWikiPage\nobjects.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.9.2 (2005-08-09)</h3>\n<ul>\n<li>SVN:  <a href=\"http://svn.zope.org/Products.FSDump/tags/FSDump-0_9_2\" rel=\"nofollow\">http://svn.zope.org/Products.FSDump/tags/FSDump-0_9_2</a></li>\n<li>CVS tag:  <tt><span class=\"pre\">FSDump-0_9_2</span></tt></li>\n<li>Reverted <tt>handler_overrides</tt> brownbag</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.9.1 (2005-08-09)</h3>\n<ul>\n<li>SVN:  <a href=\"http://svn.zope.org/Products.FSDump/tags/FSDump-0_9_1\" rel=\"nofollow\">http://svn.zope.org/Products.FSDump/tags/FSDump-0_9_1</a></li>\n<li>CVS tag:  <tt><span class=\"pre\">FSDump-0_9_1</span></tt></li>\n<li>Added argument to Dumper factory to allow caller to supply handler\noverrides.</li>\n<li>Applied patch from Sam Brauer, addressing the following issues:<ul>\n<li>Proxy roles and security settings weren\u2019t being written to\nthe <tt>.metadata</tt> file.</li>\n<li>The <tt>[Default]</tt> section should be named <tt>[default]</tt>.</li>\n<li>The property-type extensions confuse CMF\u2019s FilesystemDirectoryView\n(the patch removes the <tt>:string</tt> for string properties;  others\nare likely still broken).</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.9 (2005-04-29)</h3>\n<ul>\n<li>SVN:  <a href=\"http://svn.zope.org/Products.FSDump/tags/FSDump-0_9\" rel=\"nofollow\">http://svn.zope.org/Products.FSDump/tags/FSDump-0_9</a></li>\n<li>CVS tag:  <tt><span class=\"pre\">FSDump-0_9</span></tt></li>\n<li>Merged Andy Fundinger\u2019s work, adding handlers for the following\nCMFFormController meta_types:<ul>\n<li>ControllerPythonScript</li>\n<li>ControllerValidator</li>\n<li>ControllerPageTemplates</li>\n</ul>\n</li>\n<li>Fix missing import of ConflictError (thanks to Willi Langenburger\nfor the patch).</li>\n<li>Applied a patch from Willi Langenburger to permit use of a dumper\nin the root of the Zope instance.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.8.1 (2004-12-09)</h3>\n<ul>\n<li>SVN:  <a href=\"http://svn.zope.org/Products.FSDump/tags/FSDump-0_8_1\" rel=\"nofollow\">http://svn.zope.org/Products.FSDump/tags/FSDump-0_8_1</a></li>\n<li>CVS tag:  <tt><span class=\"pre\">FSDump-0_8_1</span></tt></li>\n<li>Repackaged to nest the actual products directory inside a version-\nqualified wrapper directory;  added an INSTALL.txt in the wrapper.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.8 (2004-10-13)</h3>\n<ul>\n<li>SVN:  <a href=\"http://svn.zope.org/Products.FSDump/tags/FSDump-0_8\" rel=\"nofollow\">http://svn.zope.org/Products.FSDump/tags/FSDump-0_8</a></li>\n<li>CVS tag:  <tt><span class=\"pre\">FSDump-0_8</span></tt></li>\n<li>Applied patch from Zope collector #1463 to make dumped SQL methods\nfit better with CMF\u2019s FSSQLMethod representation.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.7 (2004-05-17)</h3>\n<ul>\n<li>SVN:  <a href=\"http://svn.zope.org/Products.FSDump/tags/FSDump-0_7\" rel=\"nofollow\">http://svn.zope.org/Products.FSDump/tags/FSDump-0_7</a></li>\n<li>CVS tag:  <tt><span class=\"pre\">FSDump-0_7</span></tt></li>\n<li>Added knob to force use of single <tt>.metadata</tt> file, rather than\nmultiples (CMF 1.4 compatibility).</li>\n<li>Migrated ZMI to use PageTemplates.</li>\n<li>Bug:  when synthesizing a file extension, Dumper didn\u2019t include the\nsynthesized extension in the name of the \u201ccompanion\u201d properties file.</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.6 (2001-08-09)</h3>\n<ul>\n<li>SVN:  <a href=\"http://svn.zope.org/Products.FSDump/tags/FSDump-0_6\" rel=\"nofollow\">http://svn.zope.org/Products.FSDump/tags/FSDump-0_6</a></li>\n<li>CVS tag:  <tt><span class=\"pre\">FSDump-0_6</span></tt></li>\n<li>Add handlers for:<ul>\n<li>PageTemplate</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.5 (2001-08-03)</h3>\n<ul>\n<li>SVN:  <a href=\"http://svn.zope.org/Products.FSDump/tags/FSDump-0_5\" rel=\"nofollow\">http://svn.zope.org/Products.FSDump/tags/FSDump-0_5</a></li>\n<li>CVS tag:  <tt><span class=\"pre\">FSDump-0_5</span></tt></li>\n<li>Add handlers for:<ul>\n<li>PythonScript</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.4 (2001-06-18)</h3>\n<ul>\n<li>SVN:  <a href=\"http://svn.zope.org/Products.FSDump/tags/FSDump-0_4\" rel=\"nofollow\">http://svn.zope.org/Products.FSDump/tags/FSDump-0_4</a></li>\n<li>CVS tag:  <tt><span class=\"pre\">FSDump-0_4</span></tt></li>\n<li>Conform to the \u201cFinished Project Guidelines\u201d,\n<a href=\"http://dev.zope.org/Wikis/DevSite/Proposals/FinishedProductGuidelines\" rel=\"nofollow\">http://dev.zope.org/Wikis/DevSite/Proposals/FinishedProductGuidelines</a></li>\n<li>Added HelpSystem stuff.</li>\n<li>Moved to use declarative security.</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>0.3 (2001-01-06)</h3>\n<ul>\n<li>SVN:  <a href=\"http://svn.zope.org/Products.FSDump/tags/FSDump-0_3\" rel=\"nofollow\">http://svn.zope.org/Products.FSDump/tags/FSDump-0_3</a></li>\n<li>No CVS tag?</li>\n<li>Dump ZClass icon.</li>\n<li>Add handlers for:<ul>\n<li>Wizards</li>\n<li>Wizard Pages</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>0.2 (2000-11-19)</h3>\n<ul>\n<li>SVN:  <a href=\"http://svn.zope.org/Products.FSDump/tags/FSDump-0_2\" rel=\"nofollow\">http://svn.zope.org/Products.FSDump/tags/FSDump-0_2</a></li>\n<li>CVS tag:  <tt><span class=\"pre\">FSDump-0_2</span></tt></li>\n<li>Add handlers for:<ul>\n<li>ZClasses</li>\n<li>ZClass property sheets</li>\n<li>TTW Permissions</li>\n<li>TTW Factories</li>\n</ul>\n</li>\n<li>Fix unixism in <tt>Dumper._setFSPath()</tt> \u2013 thanks Craig! (<a href=\"mailto:cba%40mediaone.net\">cba<span>@</span>mediaone<span>.</span>net</a>)</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>0.1 (2000-11-16)</h3>\n<ul>\n<li>SVN:  <a href=\"http://svn.zope.org/Products.FSDump/tags/FSDump-0_1\" rel=\"nofollow\">http://svn.zope.org/Products.FSDump/tags/FSDump-0_1</a></li>\n<li>CVS tag:  <tt><span class=\"pre\">FSDump-0_1</span></tt></li>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n<hr class=\"docutils\">\n<div id=\"download\">\n<h2>Download</h2>\n</div>\n\n          </div>"}, "last_serial": 803676, "releases": {"0.9.5": [{"comment_text": "", "digests": {"md5": "422e0c4e44a4afbc56200eda6d23765a", "sha256": "c911036afd29b829a422bf61c3642d8e44e70eeb13e9b5a5fb02a73fe7fc1db1"}, "downloads": -1, "filename": "Products.FSDump-0.9.5.tar.gz", "has_sig": false, "md5_digest": "422e0c4e44a4afbc56200eda6d23765a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20319, "upload_time": "2009-11-03T15:54:55", "upload_time_iso_8601": "2009-11-03T15:54:55.805303Z", "url": "https://files.pythonhosted.org/packages/50/3a/a76ef772f3bc0b5db163d67b039ffee31704b92ec90f37882fa555061224/Products.FSDump-0.9.5.tar.gz", "yanked": false}], "FSDump-0.9.4": [{"comment_text": "", "digests": {"md5": "0d4568151c2a9c9c705321750a978932", "sha256": "4c630ddaed16f89a172ed38274c26319d3a69f2ce0afce245ef1a5832830a46b"}, "downloads": -1, "filename": "Products.FSDump-FSDump-0.9.4.tar.gz", "has_sig": false, "md5_digest": "0d4568151c2a9c9c705321750a978932", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20288, "upload_time": "2009-02-22T18:45:35", "upload_time_iso_8601": "2009-02-22T18:45:35.639981Z", "url": "https://files.pythonhosted.org/packages/86/ef/f1a2d9f0dd8b4f18f15cc00371dcbfe04c3891c715d7f5796a772d4dd64d/Products.FSDump-FSDump-0.9.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "422e0c4e44a4afbc56200eda6d23765a", "sha256": "c911036afd29b829a422bf61c3642d8e44e70eeb13e9b5a5fb02a73fe7fc1db1"}, "downloads": -1, "filename": "Products.FSDump-0.9.5.tar.gz", "has_sig": false, "md5_digest": "422e0c4e44a4afbc56200eda6d23765a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20319, "upload_time": "2009-11-03T15:54:55", "upload_time_iso_8601": "2009-11-03T15:54:55.805303Z", "url": "https://files.pythonhosted.org/packages/50/3a/a76ef772f3bc0b5db163d67b039ffee31704b92ec90f37882fa555061224/Products.FSDump-0.9.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:18:17 2020"}