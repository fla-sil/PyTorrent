{"info": {"author": "Balanced Payment", "author_email": "support@balancedpayments.com", "bugtrack_url": null, "classifiers": ["Framework :: Flask", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"], "description": "# Billy\n\nBilly - The Open Source Recurring Billing System, powered by Balanced\n\n(In active development. Consider it pre-alpha)\n\n## Running It\n\nTo run billy (development mode), you need to install the package first.\nAs we don't want to mess the global Python environment, you should\ncreate a virtual environmnet first and switch to it\n\n```\nvirtualenv --no-site-packages env\nsource env/bin/activate\n```\n\nIf above works correctly, you should see\n\n```\n(env) $\n```\n\nin you command line tool. The `(env)` indicates that you are currently\nin the virtual Python environment. Then you need to install the billy project.\nHere you run\n\n```\npython setup.py develop\n```\n\nThis should install all required dependencies. Then you need to create \ntables in database, here you type\n\n```\ninitialize_billy_db development.ini\n```\n\nThis should create all necessary tables for you in a default SQLite database.\n\nThen, to run the API web server, here you type\n\n```\npserve development.ini --reload\n```\n\nTo process recurring transactions, here you can type\n\n```\nprocess_billy_tx development.ini\n```\n\nYou can setup a crontab job to run the process_billy_tx periodically.\n\n## Running Unit and Functional Tests\n\nTo run tests, after installing billy project and all dependencies, you need\nto install dependencies for testing, here you type:\n\n```\npip install -r test_requirements.txt\n```\n\nAnd to run the tests, here you type\n\n```\npython setup.py nosetests\n```\n\nor, if you prefer run specific tests, you can run\n\n```\nnosetests billy/tests/functional\n```\n\n## Running Integration Tests\n\nTo run integration tests, here you type\n\n```\nnosetests billy/tests/integration\n```\n\nThe default testing target URL is `http://127.0.0.1:6543`, to modify it, you can \nset environment variable `BILLY_TEST_URL`. To change balanced API key, you can set\n`BILLY_TEST_PROCESSOR_KEY` variable. For example\n\n```\nexport BILLY_TEST_URL=http://example-billy-api.com\nexport BILLY_TEST_PROCESSOR_KEY=MY_SECRET_KEY_HERE\nnosetests billy/tests/integration\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/balanced/billy", "keywords": "billy payment recurring schedule", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "billing", "package_url": "https://pypi.org/project/billing/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/billing/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/balanced/billy"}, "release_url": "https://pypi.org/project/billing/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Recurring payment system", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># Billy</p>\n<p>Billy - The Open Source Recurring Billing System, powered by Balanced</p>\n<p>(In active development. Consider it pre-alpha)</p>\n<p>## Running It</p>\n<p>To run billy (development mode), you need to install the package first.\nAs we don\u2019t want to mess the global Python environment, you should\ncreate a virtual environmnet first and switch to it</p>\n<p><tt>`\nvirtualenv <span class=\"pre\">--no-site-packages</span> env\nsource env/bin/activate\n`</tt></p>\n<p>If above works correctly, you should see</p>\n<p><tt>`\n(env) $\n`</tt></p>\n<p>in you command line tool. The <cite>(env)</cite> indicates that you are currently\nin the virtual Python environment. Then you need to install the billy project.\nHere you run</p>\n<p><tt>`\npython setup.py develop\n`</tt></p>\n<p>This should install all required dependencies. Then you need to create\ntables in database, here you type</p>\n<p><tt>`\ninitialize_billy_db development.ini\n`</tt></p>\n<p>This should create all necessary tables for you in a default SQLite database.</p>\n<p>Then, to run the API web server, here you type</p>\n<p><tt>`\npserve development.ini <span class=\"pre\">--reload</span>\n`</tt></p>\n<p>To process recurring transactions, here you can type</p>\n<p><tt>`\nprocess_billy_tx development.ini\n`</tt></p>\n<p>You can setup a crontab job to run the process_billy_tx periodically.</p>\n<p>## Running Unit and Functional Tests</p>\n<p>To run tests, after installing billy project and all dependencies, you need\nto install dependencies for testing, here you type:</p>\n<p><tt>`\npip install <span class=\"pre\">-r</span> test_requirements.txt\n`</tt></p>\n<p>And to run the tests, here you type</p>\n<p><tt>`\npython setup.py nosetests\n`</tt></p>\n<p>or, if you prefer run specific tests, you can run</p>\n<p><tt>`\nnosetests billy/tests/functional\n`</tt></p>\n<p>## Running Integration Tests</p>\n<p>To run integration tests, here you type</p>\n<p><tt>`\nnosetests billy/tests/integration\n`</tt></p>\n<p>The default testing target URL is <cite>http://127.0.0.1:6543</cite>, to modify it, you can\nset environment variable <cite>BILLY_TEST_URL</cite>. To change balanced API key, you can set\n<cite>BILLY_TEST_PROCESSOR_KEY</cite> variable. For example</p>\n<p><tt>`\nexport <span class=\"pre\">BILLY_TEST_URL=http://example-billy-api.com</span>\nexport BILLY_TEST_PROCESSOR_KEY=MY_SECRET_KEY_HERE\nnosetests billy/tests/integration\n`</tt></p>\n\n          </div>"}, "last_serial": 864933, "releases": {"0.0.1": []}, "urls": [], "timestamp": "Thu May  7 22:37:32 2020"}