{"info": {"author": "Melle Dijkstra", "author_email": "dev.melle@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6"], "description": "# Python Music Player\n[![GitHub license](https://img.shields.io/github/license/MelleDijkstra/PythonMusicPlayer.svg)](https://github.com/MelleDijkstra/PythonMusicPlayer/blob/master/LICENSE)\n[![PyPI version](https://badge.fury.io/py/melon-music-player.svg)](https://badge.fury.io/py/melon-music-player)\n[![Documentation Status](https://readthedocs.org/projects/pythonmusicplayer/badge/?version=latest)](http://pythonmusicplayer.readthedocs.io/en/latest/?badge=latest)\n\n[![Twitter](https://img.shields.io/twitter/url/https/github.com/MelleDijkstra/PythonMusicPlayer.svg?style=social)](https://twitter.com/intent/tweet?text=MelonMusicPlayer:&url=https%3A%2F%2Fgithub.com%2FMelleDijkstra%2FPythonMusicPlayer)\n\n## Introduction\n\nThis repository contains a python music player which acts as a server. It uses the vlc python bindings to play the music and socket communication to communicate with the Android Application which can be found [here](https://github.com/MelleDijkstra/AndroidMusicPlayerClient)\n\n## Installation\n\n### Windows\n\nDownload executable from here\n[Download link]()\n\n__*! I experienced a bug with the windows executable, you sometimes need to press `enter`\nto activate the server again !*__\n\nBesides that, it should work fine ;)\n\n### Linux (Debian | Raspberry Pi)\n\n(coming soon, on my todo list)\nI published a PyPi package, but I haven't tested it yet.\nTo install run the following command:\n`pip install melon-music-player`\n\n### From source\n\nIf you want to install/run the MelonMusicPlayer from source,\nor if you want to develop on the current code base (please feel free)\nrun the following instructions:\n\n- Make sure you have installed python 3.5 or higher. [Python Download](https://www.python.org/downloads/)\n- The actual VLC program which can be found here ([VLC Download](http://www.videolan.org/vlc/)).\n\n  **Windows**: For windows you can just install the executable\n\n  **Linux**: For linux system it should be as easy as running `$ sudo apt-get install vlc`. \n\n  **!Although, check their site for correct installation!**\n\n- Clone the project if you haven't already `$ git clone https://github.com/MelleDijkstra/PythonMusicPlayer`\n- Go to cloned folder `$ cd PythonMusicPlayer`\n- Then run `$ pip install -r requirements.txt` to install the packages needed\n\n  (If you are installing the MelonMusicPlayer server on raspberry pi this process\n  can take some time. The reason is because the server runs on gRPC which\n  has to compile when installing for raspbian. This will hopefully be changed in the future (Please be patient!))\n\n- Change any settings needed in `config.ini`. This is the configuration file for the server\n- Start the music server by running `$ python main.py`. \n\n  Then use a client/controller to connect to the server.\n  if you downloaded the source, there should be a `client.py`. Run this in another terminal/process to test the server.\n  The client has quite some functionality but I will not be maintaining them. For full experience use one of the controllers\n  like the [Android App](https://github.com/MelleDijkstra/AndroidMusicPlayerClient).\n\n### TODO\n(only server related tasks)\n\n- [ ] Able to send an MRL link to server to download\n- [ ] Handle all MediaDownloader RPC calls\n- [ ] Create distributions for:\n    - [x] Windows\n    - [ ] Debian\n    - [ ] Ubuntu\n    - [ ] Mac OS\n- [ ] Write good tests ;)\n- [ ] Retrieve album covers from media files and send them\n- [ ] Able to sync media files with clients/controllers\n- [ ] SoundCloud support\n- [ ] Store radio station urls in file and be able to stream them\n- [x] gRPC implementation\n- [x] Handle all MusicPlayer RPC calls (play, pause, ...)\n- [x] Retrieve album & song list\n- [x] Volume control\n- [x] Queue music (next & previous song selection)\n- [x] Write tests\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/MelleDijkstra/PythonMusicPlayer", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://melledijkstra.nl", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "melon-music-player", "package_url": "https://pypi.org/project/melon-music-player/", "platform": "", "project_url": "https://pypi.org/project/melon-music-player/", "project_urls": {"Download": "https://github.com/MelleDijkstra/PythonMusicPlayer", "Homepage": "https://melledijkstra.nl"}, "release_url": "https://pypi.org/project/melon-music-player/3.0.0a0/", "requires_dist": ["typing (==3.6.4)", "youtube-dl (==2016.12.1)", "python-vlc (==3.0.101)", "setuptools (==38.4.0)", "tinytag (==0.18.0)", "grpcio (==1.8.4)", "grpcio-tools (==1.8.4)", "protobuf (==3.5.1)", "mutagen (==1.40.0)"], "requires_python": "", "summary": "A MusicPlayer which can be controlled by different controllers", "version": "3.0.0a0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># Python Music Player\n[![GitHub license](<a href=\"https://img.shields.io/github/license/MelleDijkstra/PythonMusicPlayer.svg)%5D(https://github.com/MelleDijkstra/PythonMusicPlayer/blob/master/LICENSE\" rel=\"nofollow\">https://img.shields.io/github/license/MelleDijkstra/PythonMusicPlayer.svg)](https://github.com/MelleDijkstra/PythonMusicPlayer/blob/master/LICENSE</a>)\n[![PyPI version](<a href=\"https://badge.fury.io/py/melon-music-player.svg)%5D(https://badge.fury.io/py/melon-music-player\" rel=\"nofollow\">https://badge.fury.io/py/melon-music-player.svg)](https://badge.fury.io/py/melon-music-player</a>)\n[![Documentation Status](<a href=\"https://readthedocs.org/projects/pythonmusicplayer/badge/?version=latest)%5D(http://pythonmusicplayer.readthedocs.io/en/latest/\" rel=\"nofollow\">https://readthedocs.org/projects/pythonmusicplayer/badge/?version=latest)](http://pythonmusicplayer.readthedocs.io/en/latest/</a>?badge=latest)</p>\n<p>[![Twitter](<a href=\"https://img.shields.io/twitter/url/https/github.com/MelleDijkstra/PythonMusicPlayer.svg?style=social)%5D(https://twitter.com/intent/tweet\" rel=\"nofollow\">https://img.shields.io/twitter/url/https/github.com/MelleDijkstra/PythonMusicPlayer.svg?style=social)](https://twitter.com/intent/tweet</a>?text=MelonMusicPlayer:&amp;url=https%3A%2F%2Fgithub.com%2FMelleDijkstra%2FPythonMusicPlayer)</p>\n<p>## Introduction</p>\n<p>This repository contains a python music player which acts as a server. It uses the vlc python bindings to play the music and socket communication to communicate with the Android Application which can be found [here](<a href=\"https://github.com/MelleDijkstra/AndroidMusicPlayerClient\" rel=\"nofollow\">https://github.com/MelleDijkstra/AndroidMusicPlayerClient</a>)</p>\n<p>## Installation</p>\n<p>### Windows</p>\n<p>Download executable from here\n[Download link]()</p>\n<p>__*! I experienced a bug with the windows executable, you sometimes need to press <cite>enter</cite>\nto activate the server again !*__</p>\n<p>Besides that, it should work fine ;)</p>\n<p>### Linux (Debian | Raspberry Pi)</p>\n<p>(coming soon, on my todo list)\nI published a PyPi package, but I haven\u2019t tested it yet.\nTo install run the following command:\n<cite>pip install melon-music-player</cite></p>\n<p>### From source</p>\n<p>If you want to install/run the MelonMusicPlayer from source,\nor if you want to develop on the current code base (please feel free)\nrun the following instructions:</p>\n<ul>\n<li><p>Make sure you have installed python 3.5 or higher. [Python Download](<a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">https://www.python.org/downloads/</a>)</p>\n</li>\n<li><p>The actual VLC program which can be found here ([VLC Download](<a href=\"http://www.videolan.org/vlc/\" rel=\"nofollow\">http://www.videolan.org/vlc/</a>)).</p>\n<p><strong>Windows</strong>: For windows you can just install the executable</p>\n<p><strong>Linux</strong>: For linux system it should be as easy as running <cite>$ sudo apt-get install vlc</cite>.</p>\n<p><strong>!Although, check their site for correct installation!</strong></p>\n</li>\n<li><p>Clone the project if you haven\u2019t already <cite>$ git clone https://github.com/MelleDijkstra/PythonMusicPlayer</cite></p>\n</li>\n<li><p>Go to cloned folder <cite>$ cd PythonMusicPlayer</cite></p>\n</li>\n<li><p>Then run <cite>$ pip install -r requirements.txt</cite> to install the packages needed</p>\n<p>(If you are installing the MelonMusicPlayer server on raspberry pi this process\ncan take some time. The reason is because the server runs on gRPC which\nhas to compile when installing for raspbian. This will hopefully be changed in the future (Please be patient!))</p>\n</li>\n<li><p>Change any settings needed in <cite>config.ini</cite>. This is the configuration file for the server</p>\n</li>\n<li><p>Start the music server by running <cite>$ python main.py</cite>.</p>\n<p>Then use a client/controller to connect to the server.\nif you downloaded the source, there should be a <cite>client.py</cite>. Run this in another terminal/process to test the server.\nThe client has quite some functionality but I will not be maintaining them. For full experience use one of the controllers\nlike the [Android App](<a href=\"https://github.com/MelleDijkstra/AndroidMusicPlayerClient\" rel=\"nofollow\">https://github.com/MelleDijkstra/AndroidMusicPlayerClient</a>).</p>\n</li>\n</ul>\n<p>### TODO\n(only server related tasks)</p>\n<ul>\n<li>[ ] Able to send an MRL link to server to download</li>\n<li>[ ] Handle all MediaDownloader RPC calls</li>\n<li><dl>\n<dt>[ ] Create distributions for:</dt>\n<dd><ul>\n<li>[x] Windows</li>\n<li>[ ] Debian</li>\n<li>[ ] Ubuntu</li>\n<li>[ ] Mac OS</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>[ ] Write good tests ;)</li>\n<li>[ ] Retrieve album covers from media files and send them</li>\n<li>[ ] Able to sync media files with clients/controllers</li>\n<li>[ ] SoundCloud support</li>\n<li>[ ] Store radio station urls in file and be able to stream them</li>\n<li>[x] gRPC implementation</li>\n<li>[x] Handle all MusicPlayer RPC calls (play, pause, \u2026)</li>\n<li>[x] Retrieve album &amp; song list</li>\n<li>[x] Volume control</li>\n<li>[x] Queue music (next &amp; previous song selection)</li>\n<li>[x] Write tests</li>\n</ul>\n\n          </div>"}, "last_serial": 3613274, "releases": {"3.0.0a0": [{"comment_text": "", "digests": {"md5": "f02b8bcdf0e0a1b9c29fdc31b2803ea3", "sha256": "6d3355a1e5eb336767731c002d55776314ea844dffdffe8e38f8af4a2feb596e"}, "downloads": -1, "filename": "melon_music_player-3.0.0a0-py3-none-any.whl", "has_sig": false, "md5_digest": "f02b8bcdf0e0a1b9c29fdc31b2803ea3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25307, "upload_time": "2018-02-24T23:53:28", "upload_time_iso_8601": "2018-02-24T23:53:28.971149Z", "url": "https://files.pythonhosted.org/packages/4d/b2/380961081c66320f0dcbe4593f95b47318dd3e3448f23f9bf24616b0ae4d/melon_music_player-3.0.0a0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f02b8bcdf0e0a1b9c29fdc31b2803ea3", "sha256": "6d3355a1e5eb336767731c002d55776314ea844dffdffe8e38f8af4a2feb596e"}, "downloads": -1, "filename": "melon_music_player-3.0.0a0-py3-none-any.whl", "has_sig": false, "md5_digest": "f02b8bcdf0e0a1b9c29fdc31b2803ea3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25307, "upload_time": "2018-02-24T23:53:28", "upload_time_iso_8601": "2018-02-24T23:53:28.971149Z", "url": "https://files.pythonhosted.org/packages/4d/b2/380961081c66320f0dcbe4593f95b47318dd3e3448f23f9bf24616b0ae4d/melon_music_player-3.0.0a0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:56:23 2020"}