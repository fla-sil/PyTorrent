{"info": {"author": "Lukas Zdych", "author_email": "lukas.zdych@dms4u.cz", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "About\n============\n\nA helper Plone extension which makes easier to include resources like CSS,\nJS, KSS or HTML specific to different types of browsers or platforms.\n\nInstalling\n============\n\nThis package requires Plone 3.x or later (should work with 2.5.x also).\n\nInstalling without buildout\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nInstall this package in either your system path packages or in the lib/python\ndirectory of your Zope instance. You can do this using either easy_install or\nvia the setup.py script.\n\nAfter installing the package it needs to be registered in your Zope instance.\nThis can be done by putting a collective.browserdetector-configure.zcml\nfile in the etc/package-includes directory with this content::\n\n    <include package=\"collective.browserdetector\" />\n\nor, alternatively, you can add that line to the configure.zcml in a package or\nProduct that is already registered.\n\nInstalling with buildout\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you are using `buildout`_ to manage your instance installing\ncollective.browserdetector is even simpler. You can install\ncollective.browserdetector by adding it to the eggs line for your instance::\n\n    [instance]\n    eggs = collective.browserdetector\n    zcml = collective.browserdetector\n\nThe last line tells buildout to generate a zcml snippet that tells Zope\nto configure collective.browserdetector.\n\nIf another package depends on the collective.browserdetector egg or includes\nits zcml directly you do not need to specify anything in the buildout\nconfiguration: buildout will detect this automatically.\n\nAfter updating the configuration you need to run the ''bin/buildout'', which\nwill take care of updating your system.\n\n.. _buildout: http://pypi.python.org/pypi/zc.buildout\n\nUsage\n=====\n\nThere are several browsers, mostly older releases, which renders websites\nin different way then common browsers of latest versions. So in case\nyou need to support these browsers with your website, one possible way\nhow to include fixes for their different behaviour is to include individual\nresources targeting specific browsers.\n\nPlone by default includes IEFixes.css file (with a few others) where are\nfixes / hacks related to all IE browsers for example, but what if you need\ndifferent fixes for each IE version?\nThere comes collective.browserdetector in turn.\n\n1. Lazy way (quick & start)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- install browser detector via Quick Installer\n\n- go to ZMI:/portal_skins/collective.browserdetector\n\n- select css module for your browser (by its name) and customize it\n\n- add your css hacks into customized css file\n\n- go to ZMI:/portal_css and register your new resource, see example of generic setup configuration:::\n\n    <stylesheet title=\"\"\n        id=\"IE6.css\" media=\"screen\" rel=\"stylesheet\" rendering=\"import\"\n        cacheable=\"True\" compression=\"safe\" cookable=\"True\" enabled=\"1\"\n        expression=\"python:portal.restrictedTraverse('@@browser-detector').isIE6\"/>\n\n- don't forget to set the right expression, but don't worry the only thing which you have to take care is its last part \"isIE6\" in this example, you should use the right detector attribute according to targeting browser (list of available detector attributes is included below)\n\nAnd that's it.\n\n2. Using policy or theme\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n- register collective.browserdetector as dependency of your policy package (in the metadata.xml profile module)\n\n- include your css files with fixes in the skin layers (you can copy prepared css files from collective.browserdetector/collective/browserdetector/skins/collective.browserdetector)\n\n- register your css files via generic setup (see collective.browserdetector/collective/browserdetector/profiles/default/cssregistry.xml.example for an example)\n\nAnd that's it.\n\n3. Detector attributes\n~~~~~~~~~~~~~~~~~~~~~~\n\nHere are available detector attributes usable for conditions:::\n\n    isSecure, isWebKit, isOpera, isChrome, isSafari, isSafari3,\n    isSafari4, isIE, isIE7, isIE8, isIE6, isGecko, isGecko3,\n    isGecko2, isFirefox, isFirefox1, isFirefox2, isFirefox3,\n    isWindows, isMac, isLinux, isSafariOnMac, isSafariOnWin,\n    isGeckoOnMac, isGeckoOnLinux, isGeckoOnWin, isFirefoxOnMac,\n    isFirefoxOnLinux, isFirefoxOnWin, isOperaOnMac,\n    isOperaOnLinux, isOperaOnWin, isChromeOnMac, isChromeOnLinux,\n    isChromeOnWin\n\nFor more information see interfaces.py module.\n\n4. Tips\n~~~~~~~\n\n- you can use detector conditions for kss and javascript resources also\n\n- you can use detector in templates to render different (X)HTML depending on browser/platform for example:::\n\n    <tal:block define=\"detector nocall:context/browser-detector\">\n        <tal:firefox condition=\"detector/isFirefox\">\n            HERE COMES THE CODE FOR FIREFOX\n        </tal:firefox>\n    \n        <tal:ie condition=\"detector/isIE\">\n            HERE COMES THE CODE FOR IE\n        </tal:ie>\n    </tal:block>\n\n\nAdditionally you can display browser detection information in the browser detector portlet. Go to portlets management page (@@manage-portlets) and add\nnew portlet \"Browser Detector\". Portlet also has a link (in the footer) to browser view displaying results of each detection methods.\n\nCopyright and Credits\n----------------------\n\ncollective.browserdetector is licensed under the GPL. See LICENSE.txt for details.\n\nAuthor: `Lukas Zdych`__.\n\n.. _lzdych: mailto:lukas.zdych@gmail.com\n\n__ lzdych_\n\nHomepage: DMS4U_.\n\n.. _DMS4U: http://dms4u.cz/products/collective.browserdetector\n\nDeveloped for NEXTUP_.\n\n.. _NEXTUP: http://nextup.cz\n\nChangelog\n=========\n\n1.1.2 - (2009-08-20)\n~~~~~~~~~~~~~~~~~~~~\n\n* fixed broken package by missing manifest file\n  [lzdych]\n\n1.1 - (2009-07-08)\n~~~~~~~~~~~~~~~~~~\n\n* removed content providers and editable border from the detection view\n  [lzdych]\n\n* fixed mistate in the README example using detector in templates\n  [lzdych]\n\n* added explicit condition attributes related to Firefox browser\n  [lzdych]\n\n* added firefox related stylesheet templates\n  [lzdych]\n\n\n1.0 - (2009-06-16)\n~~~~~~~~~~~~~~~~~~\n\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://dms4u.cz", "keywords": "plone browser detection", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "collective.browserdetector", "package_url": "https://pypi.org/project/collective.browserdetector/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.browserdetector/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://dms4u.cz"}, "release_url": "https://pypi.org/project/collective.browserdetector/1.1.2/", "requires_dist": null, "requires_python": null, "summary": "A helper Plone extension which makes easier to include resources specific to several types of browsers or platforms.", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about\">\n<h2>About</h2>\n<p>A helper Plone extension which makes easier to include resources like CSS,\nJS, KSS or HTML specific to different types of browsers or platforms.</p>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>This package requires Plone 3.x or later (should work with 2.5.x also).</p>\n<div id=\"installing-without-buildout\">\n<h3>Installing without buildout</h3>\n<p>Install this package in either your system path packages or in the lib/python\ndirectory of your Zope instance. You can do this using either easy_install or\nvia the setup.py script.</p>\n<p>After installing the package it needs to be registered in your Zope instance.\nThis can be done by putting a collective.browserdetector-configure.zcml\nfile in the etc/package-includes directory with this content:</p>\n<pre>&lt;include package=\"collective.browserdetector\" /&gt;\n</pre>\n<p>or, alternatively, you can add that line to the configure.zcml in a package or\nProduct that is already registered.</p>\n</div>\n<div id=\"installing-with-buildout\">\n<h3>Installing with buildout</h3>\n<p>If you are using <a href=\"http://pypi.python.org/pypi/zc.buildout\" rel=\"nofollow\">buildout</a> to manage your instance installing\ncollective.browserdetector is even simpler. You can install\ncollective.browserdetector by adding it to the eggs line for your instance:</p>\n<pre>[instance]\neggs = collective.browserdetector\nzcml = collective.browserdetector\n</pre>\n<p>The last line tells buildout to generate a zcml snippet that tells Zope\nto configure collective.browserdetector.</p>\n<p>If another package depends on the collective.browserdetector egg or includes\nits zcml directly you do not need to specify anything in the buildout\nconfiguration: buildout will detect this automatically.</p>\n<p>After updating the configuration you need to run the \u2018\u2019bin/buildout\u2019\u2019, which\nwill take care of updating your system.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>There are several browsers, mostly older releases, which renders websites\nin different way then common browsers of latest versions. So in case\nyou need to support these browsers with your website, one possible way\nhow to include fixes for their different behaviour is to include individual\nresources targeting specific browsers.</p>\n<p>Plone by default includes IEFixes.css file (with a few others) where are\nfixes / hacks related to all IE browsers for example, but what if you need\ndifferent fixes for each IE version?\nThere comes collective.browserdetector in turn.</p>\n<div id=\"lazy-way-quick-start\">\n<h3>1. Lazy way (quick &amp; start)</h3>\n<ul>\n<li><p>install browser detector via Quick Installer</p>\n</li>\n<li><p>go to ZMI:/portal_skins/collective.browserdetector</p>\n</li>\n<li><p>select css module for your browser (by its name) and customize it</p>\n</li>\n<li><p>add your css hacks into customized css file</p>\n</li>\n<li><p>go to ZMI:/portal_css and register your new resource, see example of generic setup configuration::</p>\n<pre>&lt;stylesheet title=\"\"\n    id=\"IE6.css\" media=\"screen\" rel=\"stylesheet\" rendering=\"import\"\n    cacheable=\"True\" compression=\"safe\" cookable=\"True\" enabled=\"1\"\n    expression=\"python:portal.restrictedTraverse('@@browser-detector').isIE6\"/&gt;\n</pre>\n</li>\n<li><p>don\u2019t forget to set the right expression, but don\u2019t worry the only thing which you have to take care is its last part \u201cisIE6\u201d in this example, you should use the right detector attribute according to targeting browser (list of available detector attributes is included below)</p>\n</li>\n</ul>\n<p>And that\u2019s it.</p>\n</div>\n<div id=\"using-policy-or-theme\">\n<h3>2. Using policy or theme</h3>\n<ul>\n<li>register collective.browserdetector as dependency of your policy package (in the metadata.xml profile module)</li>\n<li>include your css files with fixes in the skin layers (you can copy prepared css files from collective.browserdetector/collective/browserdetector/skins/collective.browserdetector)</li>\n<li>register your css files via generic setup (see collective.browserdetector/collective/browserdetector/profiles/default/cssregistry.xml.example for an example)</li>\n</ul>\n<p>And that\u2019s it.</p>\n</div>\n<div id=\"detector-attributes\">\n<h3>3. Detector attributes</h3>\n<p>Here are available detector attributes usable for conditions::</p>\n<pre>isSecure, isWebKit, isOpera, isChrome, isSafari, isSafari3,\nisSafari4, isIE, isIE7, isIE8, isIE6, isGecko, isGecko3,\nisGecko2, isFirefox, isFirefox1, isFirefox2, isFirefox3,\nisWindows, isMac, isLinux, isSafariOnMac, isSafariOnWin,\nisGeckoOnMac, isGeckoOnLinux, isGeckoOnWin, isFirefoxOnMac,\nisFirefoxOnLinux, isFirefoxOnWin, isOperaOnMac,\nisOperaOnLinux, isOperaOnWin, isChromeOnMac, isChromeOnLinux,\nisChromeOnWin\n</pre>\n<p>For more information see interfaces.py module.</p>\n</div>\n<div id=\"tips\">\n<h3>4. Tips</h3>\n<ul>\n<li><p>you can use detector conditions for kss and javascript resources also</p>\n</li>\n<li><p>you can use detector in templates to render different (X)HTML depending on browser/platform for example::</p>\n<pre>&lt;tal:block define=\"detector nocall:context/browser-detector\"&gt;\n    &lt;tal:firefox condition=\"detector/isFirefox\"&gt;\n        HERE COMES THE CODE FOR FIREFOX\n    &lt;/tal:firefox&gt;\n\n    &lt;tal:ie condition=\"detector/isIE\"&gt;\n        HERE COMES THE CODE FOR IE\n    &lt;/tal:ie&gt;\n&lt;/tal:block&gt;\n</pre>\n</li>\n</ul>\n<p>Additionally you can display browser detection information in the browser detector portlet. Go to portlets management page (@@manage-portlets) and add\nnew portlet \u201cBrowser Detector\u201d. Portlet also has a link (in the footer) to browser view displaying results of each detection methods.</p>\n<div id=\"copyright-and-credits\">\n<h4>Copyright and Credits</h4>\n<p>collective.browserdetector is licensed under the GPL. See LICENSE.txt for details.</p>\n<p>Author: <a href=\"mailto:lukas.zdych%40gmail.com\">Lukas Zdych</a>.</p>\n<p>Homepage: <a href=\"http://dms4u.cz/products/collective.browserdetector\" rel=\"nofollow\">DMS4U</a>.</p>\n<p>Developed for <a href=\"http://nextup.cz\" rel=\"nofollow\">NEXTUP</a>.</p>\n</div>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id2\">\n<h3>1.1.2 - (2009-08-20)</h3>\n<ul>\n<li>fixed broken package by missing manifest file\n[lzdych]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.1 - (2009-07-08)</h3>\n<ul>\n<li>removed content providers and editable border from the detection view\n[lzdych]</li>\n<li>fixed mistate in the README example using detector in templates\n[lzdych]</li>\n<li>added explicit condition attributes related to Firefox browser\n[lzdych]</li>\n<li>added firefox related stylesheet templates\n[lzdych]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.0 - (2009-06-16)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 787670, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "feaaf5ccc81d83be1bc81ed2c0912d82", "sha256": "4ed5b20f8f5d298e54edcd6f52063d21a9d2dc5b739d7d2eb96f50fe1965a288"}, "downloads": -1, "filename": "collective.browserdetector-1.0-py2.4.egg", "has_sig": false, "md5_digest": "feaaf5ccc81d83be1bc81ed2c0912d82", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 39923, "upload_time": "2009-06-16T10:30:58", "upload_time_iso_8601": "2009-06-16T10:30:58.811914Z", "url": "https://files.pythonhosted.org/packages/27/3a/34b60e55456d98f5ecac2c4764230f2c3e293b264c43dabce93e94fb6513/collective.browserdetector-1.0-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8337dbb807b413af2226d893ce8a554e", "sha256": "f80995a92d3452fbe59101330527431a9b1ff36f34061cff041abc7b4219ab26"}, "downloads": -1, "filename": "collective.browserdetector-1.0.tar.gz", "has_sig": false, "md5_digest": "8337dbb807b413af2226d893ce8a554e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21557, "upload_time": "2009-06-16T10:30:58", "upload_time_iso_8601": "2009-06-16T10:30:58.565075Z", "url": "https://files.pythonhosted.org/packages/9e/19/37528df79ea240a766407166f8f2861097fe3f7c1bbd413bb0eac9d1faa7/collective.browserdetector-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "75795064f5d7d64552101a2f2044a056", "sha256": "d7342bfb0518b4b4fec5058b6c26ea1a501ca9370c42aa1eaefe53052e4e2b03"}, "downloads": -1, "filename": "collective.browserdetector-1.1.zip", "has_sig": false, "md5_digest": "75795064f5d7d64552101a2f2044a056", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16724, "upload_time": "2009-07-08T10:47:11", "upload_time_iso_8601": "2009-07-08T10:47:11.343891Z", "url": "https://files.pythonhosted.org/packages/32/98/1cbe386ee3bb7e05674c6a1b72f780134bf24897558e4e7b8c9c2eff1c7b/collective.browserdetector-1.1.zip", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "28f03615145f41b648b9d63534f4bf5f", "sha256": "52f31ee3f9a66190f9b1b3727475fa1fc6b1613d3abb2f9539fbdfd9377ff20c"}, "downloads": -1, "filename": "collective.browserdetector-1.1.2.zip", "has_sig": false, "md5_digest": "28f03615145f41b648b9d63534f4bf5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49278, "upload_time": "2009-08-20T17:00:09", "upload_time_iso_8601": "2009-08-20T17:00:09.942403Z", "url": "https://files.pythonhosted.org/packages/fb/d8/4da92bf95f2560371e9cacfee73728cd501956e33f6b4132a0b34140dbd3/collective.browserdetector-1.1.2.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "28f03615145f41b648b9d63534f4bf5f", "sha256": "52f31ee3f9a66190f9b1b3727475fa1fc6b1613d3abb2f9539fbdfd9377ff20c"}, "downloads": -1, "filename": "collective.browserdetector-1.1.2.zip", "has_sig": false, "md5_digest": "28f03615145f41b648b9d63534f4bf5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49278, "upload_time": "2009-08-20T17:00:09", "upload_time_iso_8601": "2009-08-20T17:00:09.942403Z", "url": "https://files.pythonhosted.org/packages/fb/d8/4da92bf95f2560371e9cacfee73728cd501956e33f6b4132a0b34140dbd3/collective.browserdetector-1.1.2.zip", "yanked": false}], "timestamp": "Thu May  7 22:18:00 2020"}