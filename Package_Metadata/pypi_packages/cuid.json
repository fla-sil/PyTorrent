{"info": {"author": "Rami Chowdhury", "author_email": "rami.chowdhury@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# cuid.py [![Build Status](https://travis-ci.org/necaris/cuid.py.svg)](https://travis-ci.org/necaris/cuid.py)\n\nImplementation of https://github.com/ericelliott/cuid in Python.\n\nA `cuid` is a portable and sequentially-ordered unique identifier designed for\nhorizontal scalability and speed -- this version is ported from the reference\nimplementation in Javascript.\n\nTested on CPython 2.7-3.6 as well as PyPy & PyPy3 -- see Travis-CI link above.\n\nRough benchmarks on my machine (mid-2014 Macbook Pro, 2.8GHz i7) using `setup.py\nbench` (which times the creation of 1 million cuids):\n\nVersion | \u03bcs / cuid\n--------|----------\nCPython 3.6 | 11.368\nCPython 3.5 | 9.834\nCPython 3.4 | 9.665\nCPython 2.7 | 8.869\nPyPy 5.6.0 | 0.508\n\n_(Note that timing the creation of fewer IDs changes the way PyPy runs the code, because of JIT warmup --\nobviously creating this many IDs takes advantage of the warmed JIT)_\n\n*Note*: For now, this has no dependencies outside the standard library -- in\ntime this may change, to provide better random numbers and / or performance.", "description_content_type": null, "docs_url": null, "download_url": "http://github.com/necaris/cuid.py/tarball/v0.3", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/necaris/cuid.py", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cuid", "package_url": "https://pypi.org/project/cuid/", "platform": "", "project_url": "https://pypi.org/project/cuid/", "project_urls": {"Download": "http://github.com/necaris/cuid.py/tarball/v0.3", "Homepage": "http://github.com/necaris/cuid.py"}, "release_url": "https://pypi.org/project/cuid/0.3/", "requires_dist": null, "requires_python": "", "summary": "Fast, scalable unique ID generation", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # cuid.py [![Build Status](https://travis-ci.org/necaris/cuid.py.svg)](https://travis-ci.org/necaris/cuid.py)<br><br>Implementation of https://github.com/ericelliott/cuid in Python.<br><br>A `cuid` is a portable and sequentially-ordered unique identifier designed for<br>horizontal scalability and speed -- this version is ported from the reference<br>implementation in Javascript.<br><br>Tested on CPython 2.7-3.6 as well as PyPy &amp; PyPy3 -- see Travis-CI link above.<br><br>Rough benchmarks on my machine (mid-2014 Macbook Pro, 2.8GHz i7) using `setup.py<br>bench` (which times the creation of 1 million cuids):<br><br>Version | \u03bcs / cuid<br>--------|----------<br>CPython 3.6 | 11.368<br>CPython 3.5 | 9.834<br>CPython 3.4 | 9.665<br>CPython 2.7 | 8.869<br>PyPy 5.6.0 | 0.508<br><br>_(Note that timing the creation of fewer IDs changes the way PyPy runs the code, because of JIT warmup --<br>obviously creating this many IDs takes advantage of the warmed JIT)_<br><br>*Note*: For now, this has no dependencies outside the standard library -- in<br>time this may change, to provide better random numbers and / or performance.\n          </div>"}, "last_serial": 3284681, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "be62444b5a340fa351a141781eacaa91", "sha256": "235e1eaa2f939b4cea1da36e9993de13ecc302eb034b5cea532c75530f682e9a"}, "downloads": -1, "filename": "cuid-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "be62444b5a340fa351a141781eacaa91", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5027, "upload_time": "2017-10-27T13:25:07", "upload_time_iso_8601": "2017-10-27T13:25:07.775113Z", "url": "https://files.pythonhosted.org/packages/3e/3d/57a6aecdb407d073429254b015d2e2a24ef2a1ae49813b191e7ca0a8d364/cuid-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1bf6be71294c0be1440b3898973b9eef", "sha256": "148849bdf46fb7494fb4998e1852be231edbfe2c74d642d4a24a52e2742613dc"}, "downloads": -1, "filename": "cuid-0.2.tar.gz", "has_sig": false, "md5_digest": "1bf6be71294c0be1440b3898973b9eef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3819, "upload_time": "2017-10-27T13:25:09", "upload_time_iso_8601": "2017-10-27T13:25:09.014721Z", "url": "https://files.pythonhosted.org/packages/e4/11/384bac4e7c8d6cf9a6995e5721d4859b40120f16ae6a5c7c0623138f8b92/cuid-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "2c6e65070c13d7406a41d618fdd11907", "sha256": "7e183f420cbba32dbc63343e0379027ac24f0f8f4662b99dd21fcdbd82c211c7"}, "downloads": -1, "filename": "cuid-0.3.tar.gz", "has_sig": false, "md5_digest": "2c6e65070c13d7406a41d618fdd11907", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3921, "upload_time": "2017-10-27T21:08:56", "upload_time_iso_8601": "2017-10-27T21:08:56.123590Z", "url": "https://files.pythonhosted.org/packages/f6/0b/d306167bc2c6ecb9a0ff1552610d4e844045ec7bfd67f79e8041100f9d62/cuid-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2c6e65070c13d7406a41d618fdd11907", "sha256": "7e183f420cbba32dbc63343e0379027ac24f0f8f4662b99dd21fcdbd82c211c7"}, "downloads": -1, "filename": "cuid-0.3.tar.gz", "has_sig": false, "md5_digest": "2c6e65070c13d7406a41d618fdd11907", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3921, "upload_time": "2017-10-27T21:08:56", "upload_time_iso_8601": "2017-10-27T21:08:56.123590Z", "url": "https://files.pythonhosted.org/packages/f6/0b/d306167bc2c6ecb9a0ff1552610d4e844045ec7bfd67f79e8041100f9d62/cuid-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:26 2020"}