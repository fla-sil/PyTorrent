{"info": {"author": "Jim Martens", "author_email": "github@2martens.de", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Console", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Text Processing :: Markup"], "description": "Markdown Parser\n===============\n\nThis program was created in the context of the code competition of it-talents.com in \nApril 2017. It is split into two main components. The parser side takes the Markdown\ninput and creates an internal representation. The transform component uses the internal\nrepresentation and creates the HTML output. \n\nIn general the system is designed to be modular and expandable. For example a transformation\nfor LaTeX could be relatively easily added.\n\nInstallation\n------------\n\nEasy way\n^^^^^^^^\n\nUse the package manager of Python::\n\n   pip install twomartens.markdown\n\nA bit more complicated\n^^^^^^^^^^^^^^^^^^^^^^\n\n1. Download the package from the `PyPi <https://pypi.python.org/pypi/twomartens.markdown/>`_\n2. Extract the files\n3. Run ``python setup.py install`` from the directory you extracted the files to\n\nThe Git way (No actual installation)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n1. Clone the `GitHub repository <https://github.com/frmwrk123/markdown-parser>`_\n2. Run ``python markdown-runner.py`` to use the tool\n\nUsage\n-----\n\nThe usage is very easy. Once installed you can use ``tm-parse-markdown`` to access the program. Alternatively use\n``python markdown-runner.py`` instead if you followed the Git way. The rest applies to both forms in the same way.\nThe program accepts two parameters. The first needs to be the name of a file containing Markdown code. The second\nparameter has to be the name of the output file. The file doesn't have to exist already but if it does it will be\noverwritten completely. The output file will contain the markup in the selected output format (as of now it is always\nHTML).\n\nTo allow for easier extension the program accepts the ``-f, --format`` option. It can be used to specify the output\nformat. Currently only HTML is supported which is also selected by default. Therefore it is not required to specify\nthe option for the program to work.\n\nExample::\n\n   tm-parse-markdown my-markdown-file.md my-html-file.html\n\n\nExample (with option)::\n\n   tm-parse-markdown --format html my-markdown-file.md my-html-file.html\n\nMarkdown Syntax\n---------------\n\nThe markdown parser supports the following syntax. More might be added later.\n\nHeadings\n^^^^^^^^\n\nAll headings from H1 to H6 are supported.\n\nExamples::\n\n   # H1 heading\n   ## H2 heading\n   ### H3 heading\n   #### H4 heading\n   ##### H5 heading\n   ###### H6 heading\n\nBold text\n^^^^^^^^^\n\nBold text is supported.\n\nExample::\n\n    **bold text**\n    the **bold text** can even appear in normal paragraphs\n\nItalic text\n^^^^^^^^^^^\n\nItalic text is supported.\n\nExample::\n\n   *some italic text*\n   the *italic text* can also appear in paragraphs\n\nInline code\n^^^^^^^^^^^\n\nInline code segments are supported.\n\nExample::\n\n   a paragraph with `inline code`\n\nLinks\n^^^^^\n\nThe parser supports links.\n\nExample::\n\n   a paragraph with [a link](https://example.com \"title\")\n\n   another with another [link](https://example.com)\n   or for change an automatic link <https://example.com>\n\nLists\n^^^^^\n\nBoth unordered and ordered lists are supported. The list items for unordered lists have to start their line with\n``*``, ``-`` or ``+`` immediately followed by a space. These symbols can be used interchangeably even within one list.\nAn empty line must precede a list.\n\nExample::\n\n\n   * this starts a list\n   * which continues here\n   * and here\n   - even here\n   + and here\n\n   * but this is a new list\n   * which even contains **bold text** and *italic text*\n   * or an `inline code segment`\n   * or a [link](https://example.com), <https://example.com>\n\nThe list items of ordered lists have to start with numbers (``0-9``), followed by a dot (``.``) and a space.\nIt doesn't matter for the output which numbers stand in front of the dot.\n\nExample::\n\n\n   1.  this starts an ordered list\n   2.  which is continued here\n   9.  and here\n   0.  it can also contain **bold text**\n   11. and *italic text*\n   99. and `inline code`\n   42. and a [link](https://example.com \"title\"), <https://example.com>\n\n   0. a new list is started here\n\nQuotes\n^^^^^^\n\nAs of now only block quotes are supported. Inline quotes might be added later.\n\nExamples::\n\n   > This starts a one line quote.\n\n   > A new quote starts here\n   > and continues in the next line.\n   > It can contain **bold text** and *italic text*.\n   > inline `code blocks` are also possible\n   > The same goes for [links](https://example.com), <https://example.com>\n\nCode blocks\n^^^^^^^^^^^\n\nCode blocks are supported. They have to be preceded and followed by an empty line. Each line must start with either 4\nspaces or one tab. The text is encoded so that you can easily use for example HTML tags in a code block. Further spaces\nbeyond these four spaces or one tab are represented in the output unchanged.\n\nExample::\n\n   <!DOCTYPE html>\n   <html>\n       <head>\n           <title>Test</title>\n       </head>\n       <body>\n       </body>\n   </html>\n\nParagraphs\n^^^^^^^^^^\n\nParagraphs are naturally supported as well. They are separated from each other with empty lines.\n\nExample::\n\n   A paragraph starts here. It contains **bold text** or *italic text*.\n   It continues in the next line with a `code segment`.\n   Finally there are also [links](https://example.com \"title\")\n\n   This text belongs to a new paragraph.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/frmwrk123/markdown-parser", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "twomartens.markdown", "package_url": "https://pypi.org/project/twomartens.markdown/", "platform": "", "project_url": "https://pypi.org/project/twomartens.markdown/", "project_urls": {"Homepage": "https://github.com/frmwrk123/markdown-parser"}, "release_url": "https://pypi.org/project/twomartens.markdown/1.0.0a1/", "requires_dist": null, "requires_python": "~=3.5", "summary": "Markdown parser that transforms the markdown into HTML", "version": "1.0.0a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This program was created in the context of the code competition of it-talents.com in\nApril 2017. It is split into two main components. The parser side takes the Markdown\ninput and creates an internal representation. The transform component uses the internal\nrepresentation and creates the HTML output.</p>\n<p>In general the system is designed to be modular and expandable. For example a transformation\nfor LaTeX could be relatively easily added.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"easy-way\">\n<h3>Easy way</h3>\n<p>Use the package manager of Python:</p>\n<pre>pip install twomartens.markdown\n</pre>\n</div>\n<div id=\"a-bit-more-complicated\">\n<h3>A bit more complicated</h3>\n<ol>\n<li>Download the package from the <a href=\"https://pypi.python.org/pypi/twomartens.markdown/\" rel=\"nofollow\">PyPi</a></li>\n<li>Extract the files</li>\n<li>Run <tt>python setup.py install</tt> from the directory you extracted the files to</li>\n</ol>\n</div>\n<div id=\"the-git-way-no-actual-installation\">\n<h3>The Git way (No actual installation)</h3>\n<ol>\n<li>Clone the <a href=\"https://github.com/frmwrk123/markdown-parser\" rel=\"nofollow\">GitHub repository</a></li>\n<li>Run <tt>python <span class=\"pre\">markdown-runner.py</span></tt> to use the tool</li>\n</ol>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The usage is very easy. Once installed you can use <tt><span class=\"pre\">tm-parse-markdown</span></tt> to access the program. Alternatively use\n<tt>python <span class=\"pre\">markdown-runner.py</span></tt> instead if you followed the Git way. The rest applies to both forms in the same way.\nThe program accepts two parameters. The first needs to be the name of a file containing Markdown code. The second\nparameter has to be the name of the output file. The file doesn\u2019t have to exist already but if it does it will be\noverwritten completely. The output file will contain the markup in the selected output format (as of now it is always\nHTML).</p>\n<p>To allow for easier extension the program accepts the <tt><span class=\"pre\">-f,</span> <span class=\"pre\">--format</span></tt> option. It can be used to specify the output\nformat. Currently only HTML is supported which is also selected by default. Therefore it is not required to specify\nthe option for the program to work.</p>\n<p>Example:</p>\n<pre>tm-parse-markdown my-markdown-file.md my-html-file.html\n</pre>\n<p>Example (with option):</p>\n<pre>tm-parse-markdown --format html my-markdown-file.md my-html-file.html\n</pre>\n</div>\n<div id=\"markdown-syntax\">\n<h2>Markdown Syntax</h2>\n<p>The markdown parser supports the following syntax. More might be added later.</p>\n<div id=\"headings\">\n<h3>Headings</h3>\n<p>All headings from H1 to H6 are supported.</p>\n<p>Examples:</p>\n<pre># H1 heading\n## H2 heading\n### H3 heading\n#### H4 heading\n##### H5 heading\n###### H6 heading\n</pre>\n</div>\n<div id=\"bold-text\">\n<h3>Bold text</h3>\n<p>Bold text is supported.</p>\n<p>Example:</p>\n<pre>**bold text**\nthe **bold text** can even appear in normal paragraphs\n</pre>\n</div>\n<div id=\"italic-text\">\n<h3>Italic text</h3>\n<p>Italic text is supported.</p>\n<p>Example:</p>\n<pre>*some italic text*\nthe *italic text* can also appear in paragraphs\n</pre>\n</div>\n<div id=\"inline-code\">\n<h3>Inline code</h3>\n<p>Inline code segments are supported.</p>\n<p>Example:</p>\n<pre>a paragraph with `inline code`\n</pre>\n</div>\n<div id=\"links\">\n<h3>Links</h3>\n<p>The parser supports links.</p>\n<p>Example:</p>\n<pre>a paragraph with [a link](https://example.com \"title\")\n\nanother with another [link](https://example.com)\nor for change an automatic link &lt;https://example.com&gt;\n</pre>\n</div>\n<div id=\"lists\">\n<h3>Lists</h3>\n<p>Both unordered and ordered lists are supported. The list items for unordered lists have to start their line with\n<tt>*</tt>, <tt>-</tt> or <tt>+</tt> immediately followed by a space. These symbols can be used interchangeably even within one list.\nAn empty line must precede a list.</p>\n<p>Example:</p>\n<pre>* this starts a list\n* which continues here\n* and here\n- even here\n+ and here\n\n* but this is a new list\n* which even contains **bold text** and *italic text*\n* or an `inline code segment`\n* or a [link](https://example.com), &lt;https://example.com&gt;\n</pre>\n<p>The list items of ordered lists have to start with numbers (<tt><span class=\"pre\">0-9</span></tt>), followed by a dot (<tt>.</tt>) and a space.\nIt doesn\u2019t matter for the output which numbers stand in front of the dot.</p>\n<p>Example:</p>\n<pre>1.  this starts an ordered list\n2.  which is continued here\n9.  and here\n0.  it can also contain **bold text**\n11. and *italic text*\n99. and `inline code`\n42. and a [link](https://example.com \"title\"), &lt;https://example.com&gt;\n\n0. a new list is started here\n</pre>\n</div>\n<div id=\"quotes\">\n<h3>Quotes</h3>\n<p>As of now only block quotes are supported. Inline quotes might be added later.</p>\n<p>Examples:</p>\n<pre>&gt; This starts a one line quote.\n\n&gt; A new quote starts here\n&gt; and continues in the next line.\n&gt; It can contain **bold text** and *italic text*.\n&gt; inline `code blocks` are also possible\n&gt; The same goes for [links](https://example.com), &lt;https://example.com&gt;\n</pre>\n</div>\n<div id=\"code-blocks\">\n<h3>Code blocks</h3>\n<p>Code blocks are supported. They have to be preceded and followed by an empty line. Each line must start with either 4\nspaces or one tab. The text is encoded so that you can easily use for example HTML tags in a code block. Further spaces\nbeyond these four spaces or one tab are represented in the output unchanged.</p>\n<p>Example:</p>\n<pre>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Test&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n</div>\n<div id=\"paragraphs\">\n<h3>Paragraphs</h3>\n<p>Paragraphs are naturally supported as well. They are separated from each other with empty lines.</p>\n<p>Example:</p>\n<pre>A paragraph starts here. It contains **bold text** or *italic text*.\nIt continues in the next line with a `code segment`.\nFinally there are also [links](https://example.com \"title\")\n\nThis text belongs to a new paragraph.\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2833983, "releases": {"1.0.0.dev1": [{"comment_text": "", "digests": {"md5": "f30e93f57e8cfef9e8e49154e6444726", "sha256": "0fecfd180fe60d8e8d68e76901982a9a95b0ad5e667fa7e7f0882cc47149dba3"}, "downloads": -1, "filename": "twomartens.markdown-1.0.0.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "f30e93f57e8cfef9e8e49154e6444726", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11189, "upload_time": "2017-04-16T13:28:06", "upload_time_iso_8601": "2017-04-16T13:28:06.721593Z", "url": "https://files.pythonhosted.org/packages/ba/a2/0f3763156e9f60c1d6af494482ba709ea0c869f46ec1334595d2b0c9a72f/twomartens.markdown-1.0.0.dev1-py3-none-any.whl", "yanked": false}], "1.0.0.dev2": [{"comment_text": "", "digests": {"md5": "68c58570ecbe69f7f6570287e3e776f4", "sha256": "bef5f457e1ef49eec41f053c6346ac6b6c619b469cd6665492f6444d4ef533ff"}, "downloads": -1, "filename": "twomartens.markdown-1.0.0.dev2-py3-none-any.whl", "has_sig": false, "md5_digest": "68c58570ecbe69f7f6570287e3e776f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11194, "upload_time": "2017-04-16T13:46:13", "upload_time_iso_8601": "2017-04-16T13:46:13.200978Z", "url": "https://files.pythonhosted.org/packages/d2/3f/513b2f1797216255cb22020917da19d5239fe1707f27c4cbaebd1d9704d2/twomartens.markdown-1.0.0.dev2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7aba96ca7bac81dfd81e1500b495154f", "sha256": "981b657fa76e946a48b80e56403a0de50605a791817d96bc188a426dd8215736"}, "downloads": -1, "filename": "twomartens.markdown-1.0.0.dev2.tar.gz", "has_sig": false, "md5_digest": "7aba96ca7bac81dfd81e1500b495154f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10950, "upload_time": "2017-04-16T13:46:31", "upload_time_iso_8601": "2017-04-16T13:46:31.992473Z", "url": "https://files.pythonhosted.org/packages/8c/2d/9736df49596e78b8c71958ba6d8adb2b0fc1b69dacdaaf84cccb8ce170ac/twomartens.markdown-1.0.0.dev2.tar.gz", "yanked": false}], "1.0.0.dev3": [{"comment_text": "", "digests": {"md5": "88c2e5e22d33f8eba9f81509c4cfd7d0", "sha256": "aa0d363f27974025d6a164a4a06a350558542be096251085ade0fff90cefeb3a"}, "downloads": -1, "filename": "twomartens.markdown-1.0.0.dev3-py3-none-any.whl", "has_sig": true, "md5_digest": "88c2e5e22d33f8eba9f81509c4cfd7d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11193, "upload_time": "2017-04-16T14:13:47", "upload_time_iso_8601": "2017-04-16T14:13:47.814311Z", "url": "https://files.pythonhosted.org/packages/5a/aa/7abe42797b1d5bb1434709b8212e10cacc4a2fcc73838281a3ae76f9432f/twomartens.markdown-1.0.0.dev3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d59cf805112eaacb437bd5143409a6be", "sha256": "c475fac73dcf0dae53ac3ca461789b3e7f3c61fd12c63f55485b6624f157aa33"}, "downloads": -1, "filename": "twomartens.markdown-1.0.0.dev3.tar.gz", "has_sig": true, "md5_digest": "d59cf805112eaacb437bd5143409a6be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10955, "upload_time": "2017-04-16T14:13:15", "upload_time_iso_8601": "2017-04-16T14:13:15.801842Z", "url": "https://files.pythonhosted.org/packages/e1/6a/e473b345a605464c14dfac40eb3ad0d6170d4f1233513db97ebebc3ce21f/twomartens.markdown-1.0.0.dev3.tar.gz", "yanked": false}], "1.0.0.dev4": [{"comment_text": "", "digests": {"md5": "15e36ebee0e35be27decb6306968dd3f", "sha256": "dd9f3186afdb78c4cec943bbae11202b9c492d179aba8c612db85c68c3740cc4"}, "downloads": -1, "filename": "twomartens.markdown-1.0.0.dev4-py3-none-any.whl", "has_sig": true, "md5_digest": "15e36ebee0e35be27decb6306968dd3f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11478, "upload_time": "2017-04-16T16:30:42", "upload_time_iso_8601": "2017-04-16T16:30:42.435832Z", "url": "https://files.pythonhosted.org/packages/5e/6d/901ce666aab081c218189d4b20ddabf90740c73fd5414b42b9cce7d8dbc5/twomartens.markdown-1.0.0.dev4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a0658016c027f5876e2d278dc5e41d7", "sha256": "4f4f770f1be22aede1c00dbe25d7219cdd39349c054eaf62f7753555ee616d78"}, "downloads": -1, "filename": "twomartens.markdown-1.0.0.dev4.tar.gz", "has_sig": true, "md5_digest": "1a0658016c027f5876e2d278dc5e41d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8134, "upload_time": "2017-04-16T16:30:11", "upload_time_iso_8601": "2017-04-16T16:30:11.440019Z", "url": "https://files.pythonhosted.org/packages/d8/39/ab3b071877d083731683befe63ace4cf7abf9ff570d991a93d2a4dfc3f8c/twomartens.markdown-1.0.0.dev4.tar.gz", "yanked": false}], "1.0.0a1": [{"comment_text": "", "digests": {"md5": "e3f718652096a666ac44ec6652be1602", "sha256": "bbc6e144e301109743987227b7e33f6f6794fb6943f0c2e7cd710d86b8b2f2fc"}, "downloads": -1, "filename": "twomartens.markdown-1.0.0a1-py3-none-any.whl", "has_sig": true, "md5_digest": "e3f718652096a666ac44ec6652be1602", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 15381, "upload_time": "2017-04-27T09:09:54", "upload_time_iso_8601": "2017-04-27T09:09:54.659542Z", "url": "https://files.pythonhosted.org/packages/a6/79/647610c0953968889543dee596cef03959a044f447d2b9f3184f67bdca0e/twomartens.markdown-1.0.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "57f543d8dbfa86d5cd026cbe0f7f38e9", "sha256": "e777a703bf3d9a4ce735840cdee1806b0e609dee9d6c0a134bf9d4deb787a8d6"}, "downloads": -1, "filename": "twomartens.markdown-1.0.0a1.tar.gz", "has_sig": true, "md5_digest": "57f543d8dbfa86d5cd026cbe0f7f38e9", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 11559, "upload_time": "2017-04-27T09:09:11", "upload_time_iso_8601": "2017-04-27T09:09:11.728333Z", "url": "https://files.pythonhosted.org/packages/ff/d3/729fbfe1616eaf97675c47dd94904eabef232ecc3b3c22533f75dfd0f481/twomartens.markdown-1.0.0a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e3f718652096a666ac44ec6652be1602", "sha256": "bbc6e144e301109743987227b7e33f6f6794fb6943f0c2e7cd710d86b8b2f2fc"}, "downloads": -1, "filename": "twomartens.markdown-1.0.0a1-py3-none-any.whl", "has_sig": true, "md5_digest": "e3f718652096a666ac44ec6652be1602", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 15381, "upload_time": "2017-04-27T09:09:54", "upload_time_iso_8601": "2017-04-27T09:09:54.659542Z", "url": "https://files.pythonhosted.org/packages/a6/79/647610c0953968889543dee596cef03959a044f447d2b9f3184f67bdca0e/twomartens.markdown-1.0.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "57f543d8dbfa86d5cd026cbe0f7f38e9", "sha256": "e777a703bf3d9a4ce735840cdee1806b0e609dee9d6c0a134bf9d4deb787a8d6"}, "downloads": -1, "filename": "twomartens.markdown-1.0.0a1.tar.gz", "has_sig": true, "md5_digest": "57f543d8dbfa86d5cd026cbe0f7f38e9", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 11559, "upload_time": "2017-04-27T09:09:11", "upload_time_iso_8601": "2017-04-27T09:09:11.728333Z", "url": "https://files.pythonhosted.org/packages/ff/d3/729fbfe1616eaf97675c47dd94904eabef232ecc3b3c22533f75dfd0f481/twomartens.markdown-1.0.0a1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:43:26 2020"}