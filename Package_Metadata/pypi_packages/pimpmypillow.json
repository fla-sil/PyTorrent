{"info": {"author": "Emiliano Dalla Verde Marcozzi", "author_email": "edvm@fedoraproject.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Utilities"], "description": "===============================\nPimp My Pillow\n===============================\n\n| |version| |downloads| |wheel|\n\n.. |version| image:: http://img.shields.io/pypi/v/pmp.png?style=flat\n    :alt: PyPI Package latest release\n    :target: https://pypi.python.org/pypi/pimpmypillow/\n\n.. |downloads| image:: http://img.shields.io/pypi/dm/pmp.png?style=flat\n    :alt: PyPI Package monthly downloads\n    :target: https://pypi.python.org/pypi/pimpmypillow/\n\n.. |wheel| image:: https://pypip.in/wheel/pmp/badge.png?style=flat\n    :alt: PyPI Wheel\n    :target: https://pypi.python.org/pypi/pimpmypillow/\n\n\n\nPimp My Pillow will install a fully working Pillow distribution. No more 'decoder * is not supported' messages!\"\n\n* Free software: GPL V3 license\n\nInstallation\n============\n\nOn Debian/Ubuntu distributions you need to install libyaml-dev before running\npython setup.py install.\n\n\nTo install it from sources do:\n\n::\n\n   [foo@host]$ git clone https://github.com/edvm/pimp-my-pillow.git\n   [foo@host]$ cd pmp; python setup.py install \n\n\nTo install it from PyPi do as root:\n\n::\n\n   [foo@host]# pip install pimpmypillow \n\n\nOr using a virtualenv will work too:\n\n::\n\n   (project)py2@089b711eb21b:~/$ pip install pimpmypillow\n\n\nUsage\n=====\n\nPMP can output the needed commands that need to be run in the console to install\nPillow without installing anything in the system. To do this use the 'install'\noption with the '--drymode' argument, for example:\n\n::\n\n   (project)py2@089b711eb21b:~/$ pmp install --drymode\n   Run the following command as root to install needed dependencies:\n   su -c \"apt-get install -y tk-dev libjpeg-dev zlib1g-dev libtiff5-dev libfreetype6-dev liblcms2-dev libwebp-dev libtk-img-doc libopenjpeg-dev python-dev gcc cmake\"\n\n   To have jpeg support, run as root the following script:\n   su -c \"/opt/py2/.virtualenvs/project/lib/python2.7/site-packages/pmp-0.1.0-py2.7.egg/pmp/scripts/install-openjpeg.sh\"\n\n   Finally install Pillow with the following command:\n   /opt/py2/.virtualenvs/project/bin/pip install Pillow\n\n   (project)py2@089b711eb21b:~/$\n\n\nIf you want pmp install Pillow in the system, run it as root like:\n\n::\n\n   [foo@host]# pmp install \n\n\nTo get pmp command help do:\n\n::\n\n   [foo@host]$ pmp --help \n\n\nTo have openjpeg support, please install pmp/scripts/install-openjpeg.sh by hand, like:\n\n::\n\n   [foo@host]$ cd pmp/scripts/ \n   [foo@host]$ chmod +x ./install-openjpeg.sh; ./install-openjpeg.sh \n\n\nIMPORTANT NOTE: If you have installed Pillow before installing'pmp', you will\nneed to:\n\n::\n\n   1- Uninstall Pillow\n   [foo@host]$ pip uninstall Pillow\n   2- Install pmp\n   [foo@host]$ pip install pmp \n   3- Use pmp\n   [foo@host]$ pmp install --drymode \n\n\nWhen using 'pmp', you should end with a full powered pillow installation like:\n\n::\n\n    *** TKINTER support not available\n    --- JPEG support available\n    --- OPENJPEG (JPEG2000) support available (2.1)\n    --- ZLIB (PNG/ZIP) support available\n    --- LIBTIFF support available\n    --- FREETYPE2 support available\n    --- LITTLECMS2 support available\n    --- WEBP support available\n    --- WEBPMUX support available\n\nNow pray the gods so someone invite me a beer.\n\n\nDocumentation\n=============\n\nCurrently supported Gnu/Linux distributions are:\n\n- Debian 7\n- Debian 8\n- Ubuntu 14.10 \n- Ubuntu 15.04\n- Archlinux\n\nGive support for other Gnu/Linux distributions is really easy! This library use yaml files\nto know which package should install, please take a look at pmp/settings/debian.yml \nor pmp/settings/ubuntu.yml. It uses one yaml file per gnu/linux distribution. At\neach yaml file, keys are distro versions.\n\nHelp me support more distros\n----------------------------\n\nIf when installing your distro is still not supported, you will get a \ntraceback like folows:\n\n::\n\n    (virtualenv) root@180121250ef0:/opt/pimp-my-pillow# pmp --help\n    usage: pmp [-h] [--interactive] install\n    Pimp My Pillow\n    positional arguments:\n      install        Install Pillow\n    optional arguments:\n      -h, --help     show this help message and exit\n      --interactive  Non interactive\n    (bombear) root@180121250ef0:/opt/pimp-my-pillow# pmp install\n    Traceback (most recent call last):\n      File \"/opt/envs/bombear/bin/pmp\", line 9, in <module>\n        load_entry_point('pmp==0.1.0', 'console_scripts', 'pmp')()\n      File \"/opt/pimp-my-pillow/src/pmp/__init__.py\", line 164, in main\n        stderr, stdout = install_pillow(args_.interactive)\n      File \"/opt/pimp-my-pillow/src/pmp/__init__.py\", line 97, in install_pillow\n        install_pillow_dependencies(interactive)\n      File \"/opt/pimp-my-pillow/src/pmp/__init__.py\", line 59, in install_pillow_dependencies\n        conf = get_gnu_linux_distro_conf()\n      File \"/opt/pimp-my-pillow/src/pmp/__init__.py\", line 50, in get_gnu_linux_distro_conf\n        raise Exception(\"Unknown Gnu/Linux distribution.\")\n    Exception: Unknown Gnu/Linux distribution.\n\n\nIts really easy to add support for your Gnu/Linux distro and version:\n\n1- cat the content from /etc/issue, for ex: \n\n::\n\n    [edvm@edvm-laptop pimp-my-pillow (master)]$ cat /etc/issue\n    Ubuntu 15.04 \\n \\l\n\n    [edvm@edvm-laptop pimp-my-pillow (master)]$\n\n\n2- Copy and paste a sample setting file, for example:\n    https://github.com/edvm/pimp-my-pillow/blob/master/src/pmp/settings/ubuntu.yml\n\n3- The 'etc-issue' value must be the content from your /etc/issue (without the \\n \\l)\n\n4- Put your setting file (it must end with .yml and must be a valid yaml file) with\nthe other settings and send the new file you created as a PR! :D \n\n\nBe sure to have yaml-devel, python-devel, python-pip and gcc installed\n\n\nChangelog\n=========\n\n0.1.2 (2015-10-09)\n-----------------------------------------\n\n* Archlinux support implemented by Angel Velasquez \n* Fixes in documentation\n\n0.1.0 (2015-03-20)\n-----------------------------------------\n\n* First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/edvm/pimp-my-pillow", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "pimpmypillow", "package_url": "https://pypi.org/project/pimpmypillow/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pimpmypillow/", "project_urls": {"Homepage": "https://github.com/edvm/pimp-my-pillow"}, "release_url": "https://pypi.org/project/pimpmypillow/0.1.2/", "requires_dist": ["PyYAML"], "requires_python": "", "summary": "Pimp My Pillow will install a fully working Pillow distribution, no more 'decoder * is not supported' messages!", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<div><a href=\"https://pypi.python.org/pypi/pimpmypillow/\" rel=\"nofollow\"><img alt=\"PyPI Package latest release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9fd15dee78b9bbf734d77f2bd395ac8a27b6909c/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f706d702e706e673f7374796c653d666c6174\"></a> <a href=\"https://pypi.python.org/pypi/pimpmypillow/\" rel=\"nofollow\"><img alt=\"PyPI Package monthly downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7b9eb2edf19d4ac3021a247c84ebdd7360ad4db9/687474703a2f2f696d672e736869656c64732e696f2f707970692f646d2f706d702e706e673f7374796c653d666c6174\"></a> <a href=\"https://pypi.python.org/pypi/pimpmypillow/\" rel=\"nofollow\"><img alt=\"PyPI Wheel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/025112a36656b94a2993ce935c4c82c9bc75d06e/68747470733a2f2f70797069702e696e2f776865656c2f706d702f62616467652e706e673f7374796c653d666c6174\"></a></div>\n</div>\n<p>Pimp My Pillow will install a fully working Pillow distribution. No more \u2018decoder * is not supported\u2019 messages!\u201d</p>\n<ul>\n<li>Free software: GPL V3 license</li>\n</ul>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>On Debian/Ubuntu distributions you need to install libyaml-dev before running\npython setup.py install.</p>\n<p>To install it from sources do:</p>\n<pre>[foo@host]$ git clone https://github.com/edvm/pimp-my-pillow.git\n[foo@host]$ cd pmp; python setup.py install\n</pre>\n<p>To install it from PyPi do as root:</p>\n<pre>[foo@host]# pip install pimpmypillow\n</pre>\n<p>Or using a virtualenv will work too:</p>\n<pre>(project)py2@089b711eb21b:~/$ pip install pimpmypillow\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>PMP can output the needed commands that need to be run in the console to install\nPillow without installing anything in the system. To do this use the \u2018install\u2019\noption with the \u2018\u2013drymode\u2019 argument, for example:</p>\n<pre>(project)py2@089b711eb21b:~/$ pmp install --drymode\nRun the following command as root to install needed dependencies:\nsu -c \"apt-get install -y tk-dev libjpeg-dev zlib1g-dev libtiff5-dev libfreetype6-dev liblcms2-dev libwebp-dev libtk-img-doc libopenjpeg-dev python-dev gcc cmake\"\n\nTo have jpeg support, run as root the following script:\nsu -c \"/opt/py2/.virtualenvs/project/lib/python2.7/site-packages/pmp-0.1.0-py2.7.egg/pmp/scripts/install-openjpeg.sh\"\n\nFinally install Pillow with the following command:\n/opt/py2/.virtualenvs/project/bin/pip install Pillow\n\n(project)py2@089b711eb21b:~/$\n</pre>\n<p>If you want pmp install Pillow in the system, run it as root like:</p>\n<pre>[foo@host]# pmp install\n</pre>\n<p>To get pmp command help do:</p>\n<pre>[foo@host]$ pmp --help\n</pre>\n<p>To have openjpeg support, please install pmp/scripts/install-openjpeg.sh by hand, like:</p>\n<pre>[foo@host]$ cd pmp/scripts/\n[foo@host]$ chmod +x ./install-openjpeg.sh; ./install-openjpeg.sh\n</pre>\n<p>IMPORTANT NOTE: If you have installed Pillow before installing\u2019pmp\u2019, you will\nneed to:</p>\n<pre>1- Uninstall Pillow\n[foo@host]$ pip uninstall Pillow\n2- Install pmp\n[foo@host]$ pip install pmp\n3- Use pmp\n[foo@host]$ pmp install --drymode\n</pre>\n<p>When using \u2018pmp\u2019, you should end with a full powered pillow installation like:</p>\n<pre>*** TKINTER support not available\n--- JPEG support available\n--- OPENJPEG (JPEG2000) support available (2.1)\n--- ZLIB (PNG/ZIP) support available\n--- LIBTIFF support available\n--- FREETYPE2 support available\n--- LITTLECMS2 support available\n--- WEBP support available\n--- WEBPMUX support available\n</pre>\n<p>Now pray the gods so someone invite me a beer.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Currently supported Gnu/Linux distributions are:</p>\n<ul>\n<li>Debian 7</li>\n<li>Debian 8</li>\n<li>Ubuntu 14.10</li>\n<li>Ubuntu 15.04</li>\n<li>Archlinux</li>\n</ul>\n<p>Give support for other Gnu/Linux distributions is really easy! This library use yaml files\nto know which package should install, please take a look at pmp/settings/debian.yml\nor pmp/settings/ubuntu.yml. It uses one yaml file per gnu/linux distribution. At\neach yaml file, keys are distro versions.</p>\n<div id=\"help-me-support-more-distros\">\n<h3>Help me support more distros</h3>\n<p>If when installing your distro is still not supported, you will get a\ntraceback like folows:</p>\n<pre>(virtualenv) root@180121250ef0:/opt/pimp-my-pillow# pmp --help\nusage: pmp [-h] [--interactive] install\nPimp My Pillow\npositional arguments:\n  install        Install Pillow\noptional arguments:\n  -h, --help     show this help message and exit\n  --interactive  Non interactive\n(bombear) root@180121250ef0:/opt/pimp-my-pillow# pmp install\nTraceback (most recent call last):\n  File \"/opt/envs/bombear/bin/pmp\", line 9, in &lt;module&gt;\n    load_entry_point('pmp==0.1.0', 'console_scripts', 'pmp')()\n  File \"/opt/pimp-my-pillow/src/pmp/__init__.py\", line 164, in main\n    stderr, stdout = install_pillow(args_.interactive)\n  File \"/opt/pimp-my-pillow/src/pmp/__init__.py\", line 97, in install_pillow\n    install_pillow_dependencies(interactive)\n  File \"/opt/pimp-my-pillow/src/pmp/__init__.py\", line 59, in install_pillow_dependencies\n    conf = get_gnu_linux_distro_conf()\n  File \"/opt/pimp-my-pillow/src/pmp/__init__.py\", line 50, in get_gnu_linux_distro_conf\n    raise Exception(\"Unknown Gnu/Linux distribution.\")\nException: Unknown Gnu/Linux distribution.\n</pre>\n<p>Its really easy to add support for your Gnu/Linux distro and version:</p>\n<p>1- cat the content from /etc/issue, for ex:</p>\n<pre>[edvm@edvm-laptop pimp-my-pillow (master)]$ cat /etc/issue\nUbuntu 15.04 \\n \\l\n\n[edvm@edvm-laptop pimp-my-pillow (master)]$\n</pre>\n<dl>\n<dt>2- Copy and paste a sample setting file, for example:</dt>\n<dd><a href=\"https://github.com/edvm/pimp-my-pillow/blob/master/src/pmp/settings/ubuntu.yml\" rel=\"nofollow\">https://github.com/edvm/pimp-my-pillow/blob/master/src/pmp/settings/ubuntu.yml</a></dd>\n</dl>\n<p>3- The \u2018etc-issue\u2019 value must be the content from your /etc/issue (without the n l)</p>\n<p>4- Put your setting file (it must end with .yml and must be a valid yaml file) with\nthe other settings and send the new file you created as a PR! :D</p>\n<p>Be sure to have yaml-devel, python-devel, python-pip and gcc installed</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.1.2 (2015-10-09)</h3>\n<ul>\n<li>Archlinux support implemented by Angel Velasquez</li>\n<li>Fixes in documentation</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.0 (2015-03-20)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1762260, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "0318a791a588f36411e4a37b96a3369b", "sha256": "c8d2acadf8bd914c0f578e8260d618f44b551af102c1e2c1dbcd89f0d58b6424"}, "downloads": -1, "filename": "pimpmypillow-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "0318a791a588f36411e4a37b96a3369b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 10672, "upload_time": "2015-10-01T08:49:01", "upload_time_iso_8601": "2015-10-01T08:49:01.754692Z", "url": "https://files.pythonhosted.org/packages/e3/2b/798568c93b59f59944fde40fe3c5aa7168953bbada3181ef0c40d3cdcf1a/pimpmypillow-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "195f5d5bbda2a422e0f34286ebf051fa", "sha256": "e5aa29dfe62a59a55611b37aff872b20c4b1c9065347d10439b9d100403360ff"}, "downloads": -1, "filename": "pimpmypillow-0.1.1.tar.gz", "has_sig": false, "md5_digest": "195f5d5bbda2a422e0f34286ebf051fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9389, "upload_time": "2015-10-01T08:49:10", "upload_time_iso_8601": "2015-10-01T08:49:10.011099Z", "url": "https://files.pythonhosted.org/packages/e0/a1/181d31291ccc2cd980be43ecb568dee3223b4a79ba3268a6b26c150ebf97/pimpmypillow-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "669ad7c07b4a6380236cc7f004c1031f", "sha256": "96befb53062851668791db30dbfc42b839a1c928eb87823357ec4f5347112e35"}, "downloads": -1, "filename": "pimpmypillow-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "669ad7c07b4a6380236cc7f004c1031f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11125, "upload_time": "2015-10-11T04:28:48", "upload_time_iso_8601": "2015-10-11T04:28:48.954097Z", "url": "https://files.pythonhosted.org/packages/79/06/fe649feb197769e17487496821ff0179acde8a2aafa62e3ac894e7a1b80e/pimpmypillow-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b5afae67a44749f44542e5bffed5787", "sha256": "b9c2021f56e1c6dac39af2feef926575e0213f283263720fe0c34a70e71db6ae"}, "downloads": -1, "filename": "pimpmypillow-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8b5afae67a44749f44542e5bffed5787", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9153, "upload_time": "2015-10-11T04:28:53", "upload_time_iso_8601": "2015-10-11T04:28:53.102729Z", "url": "https://files.pythonhosted.org/packages/26/9e/48a90270f7c96d0e821ec5880b8d28c89e3a79a78b5820536c9f5c202d7c/pimpmypillow-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "669ad7c07b4a6380236cc7f004c1031f", "sha256": "96befb53062851668791db30dbfc42b839a1c928eb87823357ec4f5347112e35"}, "downloads": -1, "filename": "pimpmypillow-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "669ad7c07b4a6380236cc7f004c1031f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11125, "upload_time": "2015-10-11T04:28:48", "upload_time_iso_8601": "2015-10-11T04:28:48.954097Z", "url": "https://files.pythonhosted.org/packages/79/06/fe649feb197769e17487496821ff0179acde8a2aafa62e3ac894e7a1b80e/pimpmypillow-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b5afae67a44749f44542e5bffed5787", "sha256": "b9c2021f56e1c6dac39af2feef926575e0213f283263720fe0c34a70e71db6ae"}, "downloads": -1, "filename": "pimpmypillow-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8b5afae67a44749f44542e5bffed5787", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9153, "upload_time": "2015-10-11T04:28:53", "upload_time_iso_8601": "2015-10-11T04:28:53.102729Z", "url": "https://files.pythonhosted.org/packages/26/9e/48a90270f7c96d0e821ec5880b8d28c89e3a79a78b5820536c9f5c202d7c/pimpmypillow-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:38 2020"}