{"info": {"author": "Daniel Troeder", "author_email": "troeder@univention.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries", "Topic :: System :: Systems Administration :: Authentication/Directory :: LDAP"], "description": "=========================================\nPython UCS\\@school Kelvin REST API Client\n=========================================\n\n|python| |license| |code style| |bandit| |codecov| |docspassing| |travisci|\n\nPython library to interact with the *UCS\\@school Kelvin REST API*.\n\n* Free software: GNU Affero General Public License version 3\n* Documentation: https://kelvin-rest-api-client.readthedocs.io\n\n\nFeatures\n--------\n\n* Asynchronous\n* Automatic handling of HTTP(S) sessions\n* Type annotations\n* 90% test coverage (unittests + integration tests)\n* Python 3.7, 3.8, 3.9\n\n\nUsage\n-----\n\nThe ``Session`` context manager opens and closes a HTTP session:\n\n.. code-block:: python\n\n    >>> import asyncio\n    >>> from ucsschool.kelvin.client import Session, User, UserResource\n    >>>\n    >>> async def get_user(username: str) -> User:\n    ...     async with Session(\n    ...         \"USERNAME\",\n    ...         \"PASSWORD\",\n    ...         \"master.ucs.local\",\n    ...         verify=\"ucs-root-ca.crt\"\n    ...     ) as session:\n    ...         return await UserResource(session=session).get(name=username)\n    ...\n    >>> obj = asyncio.run(get_user(\"demo_student\"))\n    >>>\n    >>> print(obj)\n    User('name'='test_user', dn='uid=test_user,cn=schueler,cn=users,ou=DEMOSCHOOL,dc=example,dc=com')\n    >>> print(obj.firstname, obj.lastname)\n    Test User\n\nThere are more examples in the `docs`_ *usage* section.\n\nFor HTTPS to work, the SSL CA of the target system (UCS Master) must either be publicly signed, installed on the client system or available as file (as in the example above).\nIf the SSL CA certificate is not available ``verify=False``.\nObviously that is *not safe*! The CA of any UCS server can always be downloaded from ``http://FQDN.OF.UCS/ucs-root-ca.crt``.\n\n\nInstallation\n------------\n\nInstall *UCS\\@school Kelvin REST API Client* via pip from `PyPI`_::\n\n    $ pip install kelvin-rest-api-client\n\n\nTests\n-----\n\nThere are some isolated unittests, but most tests run against a real *UCS\\@school Kelvin REST API*.\n.. A UCS Docker container is used for this. The ``Makefile`` automates downloading and starting the Docker container (1 GB) and running the tests.\n\nThe tests expect the existence of two schools (``OUs``) on the target system (the Kelvin API does not support creation of schools yet).\nThe schools are ``DEMOSCHOOL`` and ``DEMOSCHOOL2``.\nThe first one usually already exists, but trying to create it again will is safe.\nTo create the schools run *on the system with the Kelvin API*::\n\n    $ /usr/share/ucs-school-import/scripts/create_ou DEMOSCHOOL\n    $ /usr/share/ucs-school-import/scripts/create_ou DEMOSCHOOL2\n\nRun tests with current Python interpreter::\n\n    $ make test\n\nUsing `tox`_ the tests can be executed with all supported Python versions::\n\n    $ make test-all\n\nTo use an existing UCS server for the tests, copy the file ``tests/test_server_example.yaml`` to ``tests/test_server.yaml`` and adapt the settings before starting the tests::\n\n    $ cp tests/test_server_example.yaml tests/test_server.yaml\n    $ $EDITOR tests/test_server.yaml\n    # check settings with a single test:\n    $ python -m pytest tests/test_user.py::test_get\n    # if OK, run all tests:\n    $ make test\n\n\nLogging\n-------\n\nStandard logging is used for tracking the libraries activity.\nTo capture the log messages for this project, subscribe to a logger named ``ucsschool.kelvin.client``.\n*Attention:* Passwords and session tokens will be logged at log level ``DEBUG``!\n\nThe *UCS\\@school Kelvin REST API* on the UCS server logs into the file ``/var/log/univention/ucsschool-kelvin-rest-api/http.log``.\nThe *UDM REST API* on the UCS server logs into the file ``/var/log/univention/directory-manager-rest.log``.\n\nRepo permissions\n----------------\n* Github: @dansan and @JuergenBS\n* Gitlab: @JuergenBS\n* PyPI: @dansan and @SamuelYaron\n* RTD: @dansan and @SamuelYaron\n\nCredits\n-------\n\n.. _`tox`: http://tox.readthedocs.org/\n.. _`docs`: https://kelvin-rest-api-client.readthedocs.io\n.. _`PyPI`: https://pypi.org/project/kelvin-rest-api-client/\n.. |license| image:: https://img.shields.io/badge/License-AGPL%20v3-orange.svg\n    :alt: GNU AGPL V3 license\n    :target: https://www.gnu.org/licenses/agpl-3.0\n.. |python| image:: https://img.shields.io/badge/python-3.7+-blue.svg\n    :alt: Python 3.7+\n    :target: https://www.python.org/\n.. |code style| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :alt: Code style: black\n    :target: https://github.com/psf/black\n.. |codecov| image:: https://codecov.io/gh/univention/kelvin-rest-api-client/branch/master/graph/badge.svg\n    :alt: Code coverage\n    :target: https://codecov.io/gh/univention/kelvin-rest-api-client\n.. |docspassing| image:: https://readthedocs.org/projects/kelvin-rest-api-client/badge/?version=latest\n    :alt: Documentation Status\n    :target: https://kelvin-rest-api-client.readthedocs.io/en/latest/?badge=latest\n.. |travisci| image:: https://travis-ci.com/univention/kelvin-rest-api-client.svg?branch=master\n    :target: https://travis-ci.com/univention/kelvin-rest-api-client\n.. |bandit| image:: https://img.shields.io/badge/security-bandit-yellow.svg\n    :alt: Security: bandit\n    :target: https://github.com/PyCQA/bandit\n\n\n=======\nHistory\n=======\n\n0.2.0 (2020-04-17)\n------------------\n\n* move tox to test requirements\n* fix user object creation with default parameters\n* change 'as_dict' to be a method instead of a property\n* fix flaky tests\n* improve test coverage\n* pass more env args to tox\n* fix AttributeError with repr(role)\n* add complete usage documentation\n\n0.1.0 (2020-04-16)\n------------------\n\n* First release.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/univention/kelvin-rest-api-client", "keywords": "Univention UCS UCS@school REST", "license": "GNU Affero General Public License v3", "maintainer": "", "maintainer_email": "", "name": "kelvin-rest-api-client", "package_url": "https://pypi.org/project/kelvin-rest-api-client/", "platform": "", "project_url": "https://pypi.org/project/kelvin-rest-api-client/", "project_urls": {"Homepage": "https://github.com/univention/kelvin-rest-api-client"}, "release_url": "https://pypi.org/project/kelvin-rest-api-client/0.2.0/", "requires_dist": ["async-property", "httpx (>=0.12.1)", "lazy-object-proxy", "pyjwt", "tox ; extra == 'development'", "factory-boy ; extra == 'development'", "pre-commit ; extra == 'development'", "isort ; extra == 'development'", "pytest-cov ; extra == 'development'", "lazy-object-proxy ; extra == 'development'", "Sphinx ; extra == 'development'", "pytest ; extra == 'development'", "async-property ; extra == 'development'", "pyjwt ; extra == 'development'", "bandit ; extra == 'development'", "watchdog ; extra == 'development'", "ruamel.yaml ; extra == 'development'", "twine ; extra == 'development'", "wheel ; extra == 'development'", "coverage ; extra == 'development'", "Faker ; extra == 'development'", "ldap3 ; extra == 'development'", "argh ; extra == 'development'", "black ; extra == 'development'", "flake8 ; extra == 'development'", "pytest-asyncio ; extra == 'development'", "httpx (>=0.12.1) ; extra == 'development'"], "requires_python": ">=3.7", "summary": "Python library to interact with the UCS@school Kelvin REST API.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"python-ucs-school-kelvin-rest-api-client\">\n<h2>Python UCS@school Kelvin REST API Client</h2>\n<p><a href=\"https://www.python.org/\" rel=\"nofollow\"><img alt=\"Python 3.7+\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d7ca45f98bb42530c497ea344d405f84abf0cb71/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e372b2d626c75652e737667\"></a> <a href=\"https://www.gnu.org/licenses/agpl-3.0\" rel=\"nofollow\"><img alt=\"GNU AGPL V3 license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f23aa5e6848c74339fb1cf105ca5ba7da256666a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4147504c25323076332d6f72616e67652e737667\"></a> <a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a> <a href=\"https://github.com/PyCQA/bandit\" rel=\"nofollow\"><img alt=\"Security: bandit\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40f6ff2e000034cbe118ca6408aed92114e72d67/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73656375726974792d62616e6469742d79656c6c6f772e737667\"></a> <a href=\"https://codecov.io/gh/univention/kelvin-rest-api-client\" rel=\"nofollow\"><img alt=\"Code coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/066415465b96fed7f5e3c66f7dd41546d3893f2e/68747470733a2f2f636f6465636f762e696f2f67682f756e6976656e74696f6e2f6b656c76696e2d726573742d6170692d636c69656e742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a> <a href=\"https://kelvin-rest-api-client.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ef524bc507762aa0a0c2e8b0be59464521de5f5/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6b656c76696e2d726573742d6170692d636c69656e742f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://travis-ci.com/univention/kelvin-rest-api-client\" rel=\"nofollow\"><img alt=\"travisci\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/026ac5af2191842f219860e8eeafb10aa04a9c3c/68747470733a2f2f7472617669732d63692e636f6d2f756e6976656e74696f6e2f6b656c76696e2d726573742d6170692d636c69656e742e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Python library to interact with the <em>UCS@school Kelvin REST API</em>.</p>\n<ul>\n<li>Free software: GNU Affero General Public License version 3</li>\n<li>Documentation: <a href=\"https://kelvin-rest-api-client.readthedocs.io\" rel=\"nofollow\">https://kelvin-rest-api-client.readthedocs.io</a></li>\n</ul>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Asynchronous</li>\n<li>Automatic handling of HTTP(S) sessions</li>\n<li>Type annotations</li>\n<li>90% test coverage (unittests + integration tests)</li>\n<li>Python 3.7, 3.8, 3.9</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>The <tt>Session</tt> context manager opens and closes a HTTP session:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">ucsschool.kelvin.client</span> <span class=\"kn\">import</span> <span class=\"n\">Session</span><span class=\"p\">,</span> <span class=\"n\">User</span><span class=\"p\">,</span> <span class=\"n\">UserResource</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">get_user</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">User</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">Session</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>         <span class=\"s2\">\"USERNAME\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s2\">\"PASSWORD\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s2\">\"master.ucs.local\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"n\">verify</span><span class=\"o\">=</span><span class=\"s2\">\"ucs-root-ca.crt\"</span>\n<span class=\"o\">...</span>     <span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>         <span class=\"k\">return</span> <span class=\"k\">await</span> <span class=\"n\">UserResource</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">=</span><span class=\"n\">session</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">username</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">get_user</span><span class=\"p\">(</span><span class=\"s2\">\"demo_student\"</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span>\n<span class=\"n\">User</span><span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"o\">=</span><span class=\"s1\">'test_user'</span><span class=\"p\">,</span> <span class=\"n\">dn</span><span class=\"o\">=</span><span class=\"s1\">'uid=test_user,cn=schueler,cn=users,ou=DEMOSCHOOL,dc=example,dc=com'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">firstname</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">lastname</span><span class=\"p\">)</span>\n<span class=\"n\">Test</span> <span class=\"n\">User</span>\n</pre>\n<p>There are more examples in the <a href=\"https://kelvin-rest-api-client.readthedocs.io\" rel=\"nofollow\">docs</a> <em>usage</em> section.</p>\n<p>For HTTPS to work, the SSL CA of the target system (UCS Master) must either be publicly signed, installed on the client system or available as file (as in the example above).\nIf the SSL CA certificate is not available <tt>verify=False</tt>.\nObviously that is <em>not safe</em>! The CA of any UCS server can always be downloaded from <tt><span class=\"pre\">http://FQDN.OF.UCS/ucs-root-ca.crt</span></tt>.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Install <em>UCS@school Kelvin REST API Client</em> via pip from <a href=\"https://pypi.org/project/kelvin-rest-api-client/\" rel=\"nofollow\">PyPI</a>:</p>\n<pre>$ pip install kelvin-rest-api-client\n</pre>\n</div>\n<div id=\"tests\">\n<h3>Tests</h3>\n<p>There are some isolated unittests, but most tests run against a real <em>UCS@school Kelvin REST API</em>.\n.. A UCS Docker container is used for this. The <tt>Makefile</tt> automates downloading and starting the Docker container (1 GB) and running the tests.</p>\n<p>The tests expect the existence of two schools (<tt>OUs</tt>) on the target system (the Kelvin API does not support creation of schools yet).\nThe schools are <tt>DEMOSCHOOL</tt> and <tt>DEMOSCHOOL2</tt>.\nThe first one usually already exists, but trying to create it again will is safe.\nTo create the schools run <em>on the system with the Kelvin API</em>:</p>\n<pre>$ /usr/share/ucs-school-import/scripts/create_ou DEMOSCHOOL\n$ /usr/share/ucs-school-import/scripts/create_ou DEMOSCHOOL2\n</pre>\n<p>Run tests with current Python interpreter:</p>\n<pre>$ make test\n</pre>\n<p>Using <a href=\"http://tox.readthedocs.org/\" rel=\"nofollow\">tox</a> the tests can be executed with all supported Python versions:</p>\n<pre>$ make test-all\n</pre>\n<p>To use an existing UCS server for the tests, copy the file <tt>tests/test_server_example.yaml</tt> to <tt>tests/test_server.yaml</tt> and adapt the settings before starting the tests:</p>\n<pre>$ cp tests/test_server_example.yaml tests/test_server.yaml\n$ $EDITOR tests/test_server.yaml\n# check settings with a single test:\n$ python -m pytest tests/test_user.py::test_get\n# if OK, run all tests:\n$ make test\n</pre>\n</div>\n<div id=\"logging\">\n<h3>Logging</h3>\n<p>Standard logging is used for tracking the libraries activity.\nTo capture the log messages for this project, subscribe to a logger named <tt>ucsschool.kelvin.client</tt>.\n<em>Attention:</em> Passwords and session tokens will be logged at log level <tt>DEBUG</tt>!</p>\n<p>The <em>UCS@school Kelvin REST API</em> on the UCS server logs into the file <tt><span class=\"pre\">/var/log/univention/ucsschool-kelvin-rest-api/http.log</span></tt>.\nThe <em>UDM REST API</em> on the UCS server logs into the file <tt><span class=\"pre\">/var/log/univention/directory-manager-rest.log</span></tt>.</p>\n</div>\n<div id=\"repo-permissions\">\n<h3>Repo permissions</h3>\n<ul>\n<li>Github: @dansan and @JuergenBS</li>\n<li>Gitlab: @JuergenBS</li>\n<li>PyPI: @dansan and @SamuelYaron</li>\n<li>RTD: @dansan and @SamuelYaron</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.2.0 (2020-04-17)</h3>\n<ul>\n<li>move tox to test requirements</li>\n<li>fix user object creation with default parameters</li>\n<li>change \u2018as_dict\u2019 to be a method instead of a property</li>\n<li>fix flaky tests</li>\n<li>improve test coverage</li>\n<li>pass more env args to tox</li>\n<li>fix AttributeError with repr(role)</li>\n<li>add complete usage documentation</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.0 (2020-04-16)</h3>\n<ul>\n<li>First release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7043922, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "d7b52783a8a735d96d555447d0854751", "sha256": "2966c04b1e9e0c15410e62949d3f0764a64740334a7e6996be547c41955012a2"}, "downloads": -1, "filename": "kelvin_rest_api_client-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d7b52783a8a735d96d555447d0854751", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.7", "size": 18446, "upload_time": "2020-04-17T20:26:59", "upload_time_iso_8601": "2020-04-17T20:26:59.111143Z", "url": "https://files.pythonhosted.org/packages/ed/ef/1dc47bdbfb1f7cc800f147ea7ebc299637e5509fffd15d7a808e9d8b3770/kelvin_rest_api_client-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8544805a70fe48cb06ffa9f75e6ccba", "sha256": "bdb7742cd277bc743e084f427cc39703f0299b6c7fc0a8cedd8352d5f17d9a09"}, "downloads": -1, "filename": "kelvin-rest-api-client-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f8544805a70fe48cb06ffa9f75e6ccba", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 37724, "upload_time": "2020-04-17T20:27:01", "upload_time_iso_8601": "2020-04-17T20:27:01.606409Z", "url": "https://files.pythonhosted.org/packages/c4/60/cbdd564051bb4c2bb140d4743e628830218d3ba4b7dca58cdf5d01cf6599/kelvin-rest-api-client-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d7b52783a8a735d96d555447d0854751", "sha256": "2966c04b1e9e0c15410e62949d3f0764a64740334a7e6996be547c41955012a2"}, "downloads": -1, "filename": "kelvin_rest_api_client-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d7b52783a8a735d96d555447d0854751", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.7", "size": 18446, "upload_time": "2020-04-17T20:26:59", "upload_time_iso_8601": "2020-04-17T20:26:59.111143Z", "url": "https://files.pythonhosted.org/packages/ed/ef/1dc47bdbfb1f7cc800f147ea7ebc299637e5509fffd15d7a808e9d8b3770/kelvin_rest_api_client-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8544805a70fe48cb06ffa9f75e6ccba", "sha256": "bdb7742cd277bc743e084f427cc39703f0299b6c7fc0a8cedd8352d5f17d9a09"}, "downloads": -1, "filename": "kelvin-rest-api-client-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f8544805a70fe48cb06ffa9f75e6ccba", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 37724, "upload_time": "2020-04-17T20:27:01", "upload_time_iso_8601": "2020-04-17T20:27:01.606409Z", "url": "https://files.pythonhosted.org/packages/c4/60/cbdd564051bb4c2bb140d4743e628830218d3ba4b7dca58cdf5d01cf6599/kelvin-rest-api-client-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:17 2020"}