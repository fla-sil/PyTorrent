{"info": {"author": "Robert Ietswaart", "author_email": "robert_ietswaart@hms.harvard.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "# GeneWalk\n\n[![License](https://img.shields.io/badge/License-BSD%202--Clause-orange.svg)](https://opensource.org/licenses/BSD-2-Clause)\n[![Documentation](https://readthedocs.org/projects/genewalk/badge/?version=latest)](https://genewalk.readthedocs.io/en/latest/?badge=latest)\n[![PyPI version](https://badge.fury.io/py/genewalk.svg)](https://badge.fury.io/py/genewalk)\n[![Python 3.5+](https://img.shields.io/pypi/pyversions/genewalk.svg)](https://www.python.org/downloads/release/python-357/)\n\nGeneWalk determines for individual genes the functions that are relevant in a\nparticular biological context and experimental condition. GeneWalk quantifies\nthe similarity between vector representations of a gene and annotated GO terms\nthrough representation learning with random walks on a condition-specific gene\nregulatory network. Similarity significance is determined through comparison\nwith node similarities from randomized networks.\n\n## Install GeneWalk\nTo install the latest release of GeneWalk (preferred):\n```\npip install genewalk\n```\nTo install the latest code from Github (typically ahead of releases):\n```\npip install git+https://github.com/churchmanlab/genewalk.git\n```\n\n## Using GeneWalk\n\n### Gene list file\nGeneWalk always requires as input a text file containing a list with genes of interest\nrelevant to the biological context. For example, differentially expressed genes\nfrom a sequencing experiment that compares an experimental versus control condition.\nGeneWalk supports gene list files containing HGNC human gene symbols,\nHGNC IDs, human Ensembl gene IDs, or MGI mouse gene IDs. Each line in the file\ncontains a gene identifier of one of these types.\n\n### GeneWalk command line interface\nOnce installed, GeneWalk can be run from the command line as `genewalk`, with\na set of required and optional arguments. The required arguments include the\nproject name, a path to a text file containing a list of genes, and an argument\nspecifying the types of genes in the file.\n\nExample\n```bash\ngenewalk --project context1 --genes gene_list.txt --id_type hgnc_symbol\n```\n\nBelow is the full documentation of the command line interface:\n\n```\ngenewalk [-h] [--version] --project PROJECT --genes GENES --id_type\n              {hgnc_symbol,hgnc_id,mgi_id,ensembl_id}\n              [--stage {all,node_vectors,null_distribution,statistics}]\n              [--base_folder BASE_FOLDER]\n              [--network_source {pc,indra,edge_list,sif}]\n              [--network_file NETWORK_FILE] [--nproc NPROC] [--nreps NREPS]\n              [--alpha_fdr ALPHA_FDR] [--save_dw SAVE_DW]\n              [--random_seed RANDOM_SEED]\n\n\nrequired arguments:\n  --version             Print the version of GeneWalk and exit.\n  --project PROJECT     A name for the project which determines the folder\n                        within the base folder in which the intermediate and\n                        final results are written. Must contain only\n                        characters that are valid in folder names.\n  --genes GENES         Path to a text file with a list of differentially\n                        expressed genes. Thetype of gene identifiers used in\n                        the text file are provided in the id_type argument.\n  --id_type {hgnc_symbol,hgnc_id,ensembl_id,mgi_id,entrez_human,entrez_mouse}\n                        The type of gene IDs provided in the text file in the\n                        genes argument. Possible values are: hgnc_symbol,\n                        hgnc_id, ensembl_id, mgi_id, entrez_human and\n                        entrez_mouse.\n\noptional arguments:\n  --stage {all,node_vectors,null_distribution,statistics}\n                        The stage of processing to run. Default: all\n  --base_folder BASE_FOLDER\n                        The base folder used to store GeneWalk temporary and\n                        result files for a given project. Default:\n                        ~/genewalk\n  --network_source {pc,indra,edge_list,sif}\n                        The source of the network to be used.Possible values\n                        are: pc, indra, edge_list, and sif. In case of indra,\n                        edge_list, and sif, the network_file argument must be\n                        specified. Default: pc\n  --network_file NETWORK_FILE\n                        If network_source is indra, this argument points to a\n                        Python pickle file in which a list of INDRA Statements\n                        constituting the network is contained. In case\n                        network_source is edge_list or sif, the network_file\n                        argument points to a text file representing the\n                        network.\n  --nproc NPROC         The number of processors to use in a multiprocessing\n                        environment. Default: 1\n  --nreps_graph NREPS_GRAPH\n                        The number of repeats to run when calculating node\n                        vectors on the GeneWalk graph. Default: 3\n  --nreps_null NREPS_NULL\n                        The number of repeats to run when calculating node\n                        vectors on the random network graphs for constructing\n                        the null distribution. Default: 3\n  --alpha_fdr ALPHA_FDR\n                        The false discovery rate to use when outputting the\n                        final statistics table. If 1 (default), all\n                        similarities are output, otherwise only the ones whose\n                        false discovery rate are below this parameter are\n                        included. Default: 1\n  --save_dw SAVE_DW     If True, the full DeepWalk object for each repeat is\n                        saved in the project folder. This can be useful for\n                        debugging but the files are typically very large.\n                        Default: False\n  --random_seed RANDOM_SEED\n                        If provided, the random number generator is seeded\n                        with the given value. This should only be used if the\n                        goal is to deterministically reproduce a prior result\n                        obtained with the same random seed.\n\n```\n\n\n### Output files\nGeneWalk automatically creates a `genewalk` folder in the user's home folder\n(or the user specified base_folder).\nWhen running GeneWalk, one of the required inputs is a project name.\nA sub-folder is created for the given project name where all intermediate and\nfinal results are stored. The files stored in the project folder are:\n- **`genewalk_results.csv`** - The main results table, a comma-separated values text file. See below for detailed description.\n- `genes.pkl` - A processed representation of the given gene list, in Python pickle (.pkl) binary file format.\n- `multi_graph.pkl` - A networkx MultiGraph resembling the GeneWalk network which was assembled based on the\ngiven list of genes, an interaction network, GO annotations, and the GO ontology.\n- `deepwalk_node_vectors_*.pkl` - A set of learned node vectors for each analysis repeat for the graph.\n- `deepwalk_node_vectors_rand_*.pkl` - A set of learned node vectors for each analysis repeat for a random graph.\n- `genewalk_rand_simdists.pkl` - Distributions constructed from repeats.\n- `deepwalk_*.pkl` - A DeepWalk object for each analysis repeat on the graph\n(only present if save_dw argument is set to True).\n- `deepwalk_rand_*.pkl` - A DeepWalk object for each analysis repeat on a random graph\n(only present if save_dw argument is set to True).\n\n\n### GeneWalk results file description\n`genewalk_results.csv` is the main GeneWalk output table, a comma-separated values text file\nwith the following column headers:\n- hgnc_id - human gene HGNC identifier.\n- **hgnc_symbol** - human gene symbol.\n- **go_name** - GO term name.\n- go_id - GO term identifier.\n- go_domain - Ontology domain that GO term belongs to\n(biological process, cellular component or molecular function).\n- ncon_gene - number of connection to gene in GeneWalk network.\n- ncon_go - number of connections to GO term in GeneWalk network.\n- **mean_padj** - mean false discovery rate (FDR) adjusted p-value of the similarity between gene and GO term.\nThis is the key statistic indicating how relevant the GO term (function) is to the gene in the\nparticular biological context or tested condition. GeneWalk determines an adjusted p-value with\nBenjamini Hochberg FDR correction for multiple tested of all connected GO term for each\nnreps_graph repeat analysis. The value presented here is the average over all p-adjust values\nfrom each repeat analysis. \n- cilow_padj - lower bound of 95% confidence interval on mean_padj estimate from the nreps_graph repeat analyses.\n- ciupp_padj - upper bound of 95% confidence interval on mean_padj estimate.\n- mean_pval - mean p-values of gene - GO term similarities, not FDR corrected for multiple testing.\n- cilow_pval - lower bound of 95% confidence interval on mean_pval estimate.\n- ciupp_pval - upper bound of 95% confidence interval on mean_pval estimate.\n- mean_sim - mean of gene - GO term similarities.\n- sem_sim - standard error on mean_sim estimate.\n- mgi_id, ensembl_id, mgi_id, entrez_human or entrez_mouse - in case one of\n  these gene identifiers were provided as input, the GeneWalk results table\n  starts with an additional column to indicate the gene identifiers. In the\n  case of mouse genes, the corresponding hgnc_id and hgnc_symbol resemble its\n  human ortholog gene used for the GeneWalk analysis.\n\n\n### Run time and stages of GeneWalk algorithm\nRecommended number of processors (optional argument: nproc) for a short (1-2h)\nrun time is 4:\n```bash\ngenewalk --project context1 --genes gene_list.txt --id_type hgnc_symbol --nproc 4\n```\nBy default GeneWalk will run with 1 processor, resulting in a longer overall\nrun time: 6-12h.\nGiven a list of genes, GeneWalk runs three stages of analysis:\n1. Assembling a GeneWalk network and learning node vector representations\nby running DeepWalk on this network, for a specified number of repeats.\nTypical run time: one to a few hours.\n2. Learning random node vector representations by running DeepWalk on a set of\nrandomized versions of the GeneWalk network, for a specified number of\nrepeats. Typical run time: one to a few hours.\n3. Calculating statistics of similarities between genes and GO terms, and\noutputting  the GeneWalk results in a table. Typical run time: a few minutes.\n\nGeneWalk can either be run once to complete all these stages (default), or\ncalled separately for each stage (optional argument: stage).  Recommended\nmemory availability on your operating system: 16Gb or 32Gb RAM.  GeneWalk\noutputs the uncertainty (95% confidence intervals) of the similarity\nsignificance (mean p-adjust). Depending on the context-specific network\ntopology, this uncertainty can be large for individual gene - function\nassociations. However, if overall the uncertainties turn out very large, one\ncan set the optional arguments nreps_graph to 10 (or more) and nreps_null to 10\nto increase the algorithm's precision. This comes at the cost of an increased\nrun time.\n\n\n### Further documentation\nFor a tutorial and more general information see the\n[GeneWalk website](http://churchman.med.harvard.edu/genewalk).\nFor further code documentation see our [readthedocs page](https://genewalk.readthedocs.io).\n\n\n### Citation\nRobert Ietswaart, Benjamin M. Gyori, John A. Bachman, Peter K. Sorger, and\nL. Stirling Churchman\n*GeneWalk identifies relevant gene functions for a biological context using network\nrepresentation learning* (2019), [BioRxiv; 755579](https://www.biorxiv.org/content/10.1101/755579v2).\n\n\n### Funding\nThis work was supported by National Institutes of Health grant 5R01HG007173-07\n(L.S.C.), EMBO fellowship ALTF 2016-422 (R.I.), and DARPA grants W911NF-15-1-0544\nand W911NF018-1-0124 (P.K.S.).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/churchmanlab/genewalk", "keywords": "gene function,network,embedding", "license": "", "maintainer": "", "maintainer_email": "", "name": "genewalk", "package_url": "https://pypi.org/project/genewalk/", "platform": "", "project_url": "https://pypi.org/project/genewalk/", "project_urls": {"Homepage": "https://github.com/churchmanlab/genewalk"}, "release_url": "https://pypi.org/project/genewalk/1.2.1/", "requires_dist": ["numpy", "pandas", "networkx (>=2.1)", "gensim", "goatools", "indra (>=1.14.1)", "scipy (>=1.3.0)"], "requires_python": "", "summary": "Determine gene function based on network embeddings.", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>GeneWalk</h1>\n<p><a href=\"https://opensource.org/licenses/BSD-2-Clause\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7113cf74173470380bf04b021010808d24630d65/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d425344253230322d2d436c617573652d6f72616e67652e737667\"></a>\n<a href=\"https://genewalk.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b751f8bc2cc7218b292143c7bf3d8a6482310a74/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f67656e6577616c6b2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://badge.fury.io/py/genewalk\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ffbff720b957b3da3b2dc5512df39f554cf20975/68747470733a2f2f62616467652e667572792e696f2f70792f67656e6577616c6b2e737667\"></a>\n<a href=\"https://www.python.org/downloads/release/python-357/\" rel=\"nofollow\"><img alt=\"Python 3.5+\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bcaf49dade0eb27b45407396ccafc23c69666a01/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f67656e6577616c6b2e737667\"></a></p>\n<p>GeneWalk determines for individual genes the functions that are relevant in a\nparticular biological context and experimental condition. GeneWalk quantifies\nthe similarity between vector representations of a gene and annotated GO terms\nthrough representation learning with random walks on a condition-specific gene\nregulatory network. Similarity significance is determined through comparison\nwith node similarities from randomized networks.</p>\n<h2>Install GeneWalk</h2>\n<p>To install the latest release of GeneWalk (preferred):</p>\n<pre><code>pip install genewalk\n</code></pre>\n<p>To install the latest code from Github (typically ahead of releases):</p>\n<pre><code>pip install git+https://github.com/churchmanlab/genewalk.git\n</code></pre>\n<h2>Using GeneWalk</h2>\n<h3>Gene list file</h3>\n<p>GeneWalk always requires as input a text file containing a list with genes of interest\nrelevant to the biological context. For example, differentially expressed genes\nfrom a sequencing experiment that compares an experimental versus control condition.\nGeneWalk supports gene list files containing HGNC human gene symbols,\nHGNC IDs, human Ensembl gene IDs, or MGI mouse gene IDs. Each line in the file\ncontains a gene identifier of one of these types.</p>\n<h3>GeneWalk command line interface</h3>\n<p>Once installed, GeneWalk can be run from the command line as <code>genewalk</code>, with\na set of required and optional arguments. The required arguments include the\nproject name, a path to a text file containing a list of genes, and an argument\nspecifying the types of genes in the file.</p>\n<p>Example</p>\n<pre>genewalk --project context1 --genes gene_list.txt --id_type hgnc_symbol\n</pre>\n<p>Below is the full documentation of the command line interface:</p>\n<pre><code>genewalk [-h] [--version] --project PROJECT --genes GENES --id_type\n              {hgnc_symbol,hgnc_id,mgi_id,ensembl_id}\n              [--stage {all,node_vectors,null_distribution,statistics}]\n              [--base_folder BASE_FOLDER]\n              [--network_source {pc,indra,edge_list,sif}]\n              [--network_file NETWORK_FILE] [--nproc NPROC] [--nreps NREPS]\n              [--alpha_fdr ALPHA_FDR] [--save_dw SAVE_DW]\n              [--random_seed RANDOM_SEED]\n\n\nrequired arguments:\n  --version             Print the version of GeneWalk and exit.\n  --project PROJECT     A name for the project which determines the folder\n                        within the base folder in which the intermediate and\n                        final results are written. Must contain only\n                        characters that are valid in folder names.\n  --genes GENES         Path to a text file with a list of differentially\n                        expressed genes. Thetype of gene identifiers used in\n                        the text file are provided in the id_type argument.\n  --id_type {hgnc_symbol,hgnc_id,ensembl_id,mgi_id,entrez_human,entrez_mouse}\n                        The type of gene IDs provided in the text file in the\n                        genes argument. Possible values are: hgnc_symbol,\n                        hgnc_id, ensembl_id, mgi_id, entrez_human and\n                        entrez_mouse.\n\noptional arguments:\n  --stage {all,node_vectors,null_distribution,statistics}\n                        The stage of processing to run. Default: all\n  --base_folder BASE_FOLDER\n                        The base folder used to store GeneWalk temporary and\n                        result files for a given project. Default:\n                        ~/genewalk\n  --network_source {pc,indra,edge_list,sif}\n                        The source of the network to be used.Possible values\n                        are: pc, indra, edge_list, and sif. In case of indra,\n                        edge_list, and sif, the network_file argument must be\n                        specified. Default: pc\n  --network_file NETWORK_FILE\n                        If network_source is indra, this argument points to a\n                        Python pickle file in which a list of INDRA Statements\n                        constituting the network is contained. In case\n                        network_source is edge_list or sif, the network_file\n                        argument points to a text file representing the\n                        network.\n  --nproc NPROC         The number of processors to use in a multiprocessing\n                        environment. Default: 1\n  --nreps_graph NREPS_GRAPH\n                        The number of repeats to run when calculating node\n                        vectors on the GeneWalk graph. Default: 3\n  --nreps_null NREPS_NULL\n                        The number of repeats to run when calculating node\n                        vectors on the random network graphs for constructing\n                        the null distribution. Default: 3\n  --alpha_fdr ALPHA_FDR\n                        The false discovery rate to use when outputting the\n                        final statistics table. If 1 (default), all\n                        similarities are output, otherwise only the ones whose\n                        false discovery rate are below this parameter are\n                        included. Default: 1\n  --save_dw SAVE_DW     If True, the full DeepWalk object for each repeat is\n                        saved in the project folder. This can be useful for\n                        debugging but the files are typically very large.\n                        Default: False\n  --random_seed RANDOM_SEED\n                        If provided, the random number generator is seeded\n                        with the given value. This should only be used if the\n                        goal is to deterministically reproduce a prior result\n                        obtained with the same random seed.\n\n</code></pre>\n<h3>Output files</h3>\n<p>GeneWalk automatically creates a <code>genewalk</code> folder in the user's home folder\n(or the user specified base_folder).\nWhen running GeneWalk, one of the required inputs is a project name.\nA sub-folder is created for the given project name where all intermediate and\nfinal results are stored. The files stored in the project folder are:</p>\n<ul>\n<li><strong><code>genewalk_results.csv</code></strong> - The main results table, a comma-separated values text file. See below for detailed description.</li>\n<li><code>genes.pkl</code> - A processed representation of the given gene list, in Python pickle (.pkl) binary file format.</li>\n<li><code>multi_graph.pkl</code> - A networkx MultiGraph resembling the GeneWalk network which was assembled based on the\ngiven list of genes, an interaction network, GO annotations, and the GO ontology.</li>\n<li><code>deepwalk_node_vectors_*.pkl</code> - A set of learned node vectors for each analysis repeat for the graph.</li>\n<li><code>deepwalk_node_vectors_rand_*.pkl</code> - A set of learned node vectors for each analysis repeat for a random graph.</li>\n<li><code>genewalk_rand_simdists.pkl</code> - Distributions constructed from repeats.</li>\n<li><code>deepwalk_*.pkl</code> - A DeepWalk object for each analysis repeat on the graph\n(only present if save_dw argument is set to True).</li>\n<li><code>deepwalk_rand_*.pkl</code> - A DeepWalk object for each analysis repeat on a random graph\n(only present if save_dw argument is set to True).</li>\n</ul>\n<h3>GeneWalk results file description</h3>\n<p><code>genewalk_results.csv</code> is the main GeneWalk output table, a comma-separated values text file\nwith the following column headers:</p>\n<ul>\n<li>hgnc_id - human gene HGNC identifier.</li>\n<li><strong>hgnc_symbol</strong> - human gene symbol.</li>\n<li><strong>go_name</strong> - GO term name.</li>\n<li>go_id - GO term identifier.</li>\n<li>go_domain - Ontology domain that GO term belongs to\n(biological process, cellular component or molecular function).</li>\n<li>ncon_gene - number of connection to gene in GeneWalk network.</li>\n<li>ncon_go - number of connections to GO term in GeneWalk network.</li>\n<li><strong>mean_padj</strong> - mean false discovery rate (FDR) adjusted p-value of the similarity between gene and GO term.\nThis is the key statistic indicating how relevant the GO term (function) is to the gene in the\nparticular biological context or tested condition. GeneWalk determines an adjusted p-value with\nBenjamini Hochberg FDR correction for multiple tested of all connected GO term for each\nnreps_graph repeat analysis. The value presented here is the average over all p-adjust values\nfrom each repeat analysis.</li>\n<li>cilow_padj - lower bound of 95% confidence interval on mean_padj estimate from the nreps_graph repeat analyses.</li>\n<li>ciupp_padj - upper bound of 95% confidence interval on mean_padj estimate.</li>\n<li>mean_pval - mean p-values of gene - GO term similarities, not FDR corrected for multiple testing.</li>\n<li>cilow_pval - lower bound of 95% confidence interval on mean_pval estimate.</li>\n<li>ciupp_pval - upper bound of 95% confidence interval on mean_pval estimate.</li>\n<li>mean_sim - mean of gene - GO term similarities.</li>\n<li>sem_sim - standard error on mean_sim estimate.</li>\n<li>mgi_id, ensembl_id, mgi_id, entrez_human or entrez_mouse - in case one of\nthese gene identifiers were provided as input, the GeneWalk results table\nstarts with an additional column to indicate the gene identifiers. In the\ncase of mouse genes, the corresponding hgnc_id and hgnc_symbol resemble its\nhuman ortholog gene used for the GeneWalk analysis.</li>\n</ul>\n<h3>Run time and stages of GeneWalk algorithm</h3>\n<p>Recommended number of processors (optional argument: nproc) for a short (1-2h)\nrun time is 4:</p>\n<pre>genewalk --project context1 --genes gene_list.txt --id_type hgnc_symbol --nproc <span class=\"m\">4</span>\n</pre>\n<p>By default GeneWalk will run with 1 processor, resulting in a longer overall\nrun time: 6-12h.\nGiven a list of genes, GeneWalk runs three stages of analysis:</p>\n<ol>\n<li>Assembling a GeneWalk network and learning node vector representations\nby running DeepWalk on this network, for a specified number of repeats.\nTypical run time: one to a few hours.</li>\n<li>Learning random node vector representations by running DeepWalk on a set of\nrandomized versions of the GeneWalk network, for a specified number of\nrepeats. Typical run time: one to a few hours.</li>\n<li>Calculating statistics of similarities between genes and GO terms, and\noutputting  the GeneWalk results in a table. Typical run time: a few minutes.</li>\n</ol>\n<p>GeneWalk can either be run once to complete all these stages (default), or\ncalled separately for each stage (optional argument: stage).  Recommended\nmemory availability on your operating system: 16Gb or 32Gb RAM.  GeneWalk\noutputs the uncertainty (95% confidence intervals) of the similarity\nsignificance (mean p-adjust). Depending on the context-specific network\ntopology, this uncertainty can be large for individual gene - function\nassociations. However, if overall the uncertainties turn out very large, one\ncan set the optional arguments nreps_graph to 10 (or more) and nreps_null to 10\nto increase the algorithm's precision. This comes at the cost of an increased\nrun time.</p>\n<h3>Further documentation</h3>\n<p>For a tutorial and more general information see the\n<a href=\"http://churchman.med.harvard.edu/genewalk\" rel=\"nofollow\">GeneWalk website</a>.\nFor further code documentation see our <a href=\"https://genewalk.readthedocs.io\" rel=\"nofollow\">readthedocs page</a>.</p>\n<h3>Citation</h3>\n<p>Robert Ietswaart, Benjamin M. Gyori, John A. Bachman, Peter K. Sorger, and\nL. Stirling Churchman\n<em>GeneWalk identifies relevant gene functions for a biological context using network\nrepresentation learning</em> (2019), <a href=\"https://www.biorxiv.org/content/10.1101/755579v2\" rel=\"nofollow\">BioRxiv; 755579</a>.</p>\n<h3>Funding</h3>\n<p>This work was supported by National Institutes of Health grant 5R01HG007173-07\n(L.S.C.), EMBO fellowship ALTF 2016-422 (R.I.), and DARPA grants W911NF-15-1-0544\nand W911NF018-1-0124 (P.K.S.).</p>\n\n          </div>"}, "last_serial": 7051175, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "251fc4d7f94b4b859bfd2b993c1bd82f", "sha256": "92eab6508671c43c67aae9f574391d7e4106639adafbbc14f448e33a5f2dceff"}, "downloads": -1, "filename": "genewalk-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "251fc4d7f94b4b859bfd2b993c1bd82f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25277, "upload_time": "2019-08-30T13:58:18", "upload_time_iso_8601": "2019-08-30T13:58:18.082180Z", "url": "https://files.pythonhosted.org/packages/0f/8e/27fb05a1d89a43a056c0f599d626be4482aa76d36ccbda68f8f29da60478/genewalk-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38ed7eeef5b79b6e281ac3e309d9d01b", "sha256": "6385c5c13898b0beeaea9eb4a2c4c0e3d09236170ba6b1cc3750c5cec77fe22d"}, "downloads": -1, "filename": "genewalk-1.0.0.tar.gz", "has_sig": false, "md5_digest": "38ed7eeef5b79b6e281ac3e309d9d01b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26212, "upload_time": "2019-08-30T13:58:20", "upload_time_iso_8601": "2019-08-30T13:58:20.383778Z", "url": "https://files.pythonhosted.org/packages/ef/53/81f9971fc84b0f664d92f41e5602beaa9bc279b08d15af53bbbe638bd5c1/genewalk-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "513d248f6a18d1471e44f027ed78920c", "sha256": "b0ad45ce7ed268aeeb6d0bb1db87e3407ff4d0da2935790e1ea3234f3f6dd6e1"}, "downloads": -1, "filename": "genewalk-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "513d248f6a18d1471e44f027ed78920c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25907, "upload_time": "2019-09-04T14:19:38", "upload_time_iso_8601": "2019-09-04T14:19:38.013060Z", "url": "https://files.pythonhosted.org/packages/f0/d7/024a2682f138656e0715e85001d548965e4cfd9d41477f131bea9d8faa1a/genewalk-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "edf25640142ca41a3d291728832467d0", "sha256": "10e58f27c30079ff2c555fce6b95ea6104fb0067a9d0bfe756993e911e35f719"}, "downloads": -1, "filename": "genewalk-1.1.0.tar.gz", "has_sig": false, "md5_digest": "edf25640142ca41a3d291728832467d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27665, "upload_time": "2019-09-04T14:19:40", "upload_time_iso_8601": "2019-09-04T14:19:40.470025Z", "url": "https://files.pythonhosted.org/packages/00/52/ad037a22d336993a2b53646c28e5318fed7cc18c8f8327c38d596dc0767c/genewalk-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "cf516a0940f5171681215474590eb035", "sha256": "f89e3864fca27ad0455ae8a5c128cf95874042fa34a22935fb5bf788fe15b6c1"}, "downloads": -1, "filename": "genewalk-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cf516a0940f5171681215474590eb035", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27726, "upload_time": "2020-02-26T15:15:47", "upload_time_iso_8601": "2020-02-26T15:15:47.271145Z", "url": "https://files.pythonhosted.org/packages/27/ab/997bac9d137cc20b861dfca97696bdc1dc78a9c43a02725958ade1838b79/genewalk-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4bddc378a0e182d874b76d0b20d5fe3", "sha256": "5571d8513ee227bc00e689e70d71a57ac437b0ca3925e584f4418819896eca1c"}, "downloads": -1, "filename": "genewalk-1.2.0.tar.gz", "has_sig": false, "md5_digest": "a4bddc378a0e182d874b76d0b20d5fe3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29607, "upload_time": "2020-02-26T15:15:48", "upload_time_iso_8601": "2020-02-26T15:15:48.442864Z", "url": "https://files.pythonhosted.org/packages/79/51/b84bf3e4d4f0a68c22ebdfb990b3595623d6384ef6233c03745dd5138f66/genewalk-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "7b230135c9e3f96308f8f885ffe7311c", "sha256": "6a406503c30609de3337730456bf815d95624530a72b476545dbd13d85abe4f5"}, "downloads": -1, "filename": "genewalk-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7b230135c9e3f96308f8f885ffe7311c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28208, "upload_time": "2020-04-19T02:44:34", "upload_time_iso_8601": "2020-04-19T02:44:34.597646Z", "url": "https://files.pythonhosted.org/packages/48/0c/3d76cd3be22b20bf2b1c5a92392e6030f3c3c4c6b6b4a18bb26a285b3c8f/genewalk-1.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "64cee6f31d5b577f1aecad72bd57a4b5", "sha256": "6ef0f27dd83ea8e5dcefa9c036797fabecd4ab788346a53c25966540967abcb3"}, "downloads": -1, "filename": "genewalk-1.2.1.tar.gz", "has_sig": false, "md5_digest": "64cee6f31d5b577f1aecad72bd57a4b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30031, "upload_time": "2020-04-19T02:44:36", "upload_time_iso_8601": "2020-04-19T02:44:36.001676Z", "url": "https://files.pythonhosted.org/packages/f5/69/58897c0fd7f8dcb5e4c3a8cd555784e6273f3b6ed38ac9b683669cb5e6e4/genewalk-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7b230135c9e3f96308f8f885ffe7311c", "sha256": "6a406503c30609de3337730456bf815d95624530a72b476545dbd13d85abe4f5"}, "downloads": -1, "filename": "genewalk-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7b230135c9e3f96308f8f885ffe7311c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28208, "upload_time": "2020-04-19T02:44:34", "upload_time_iso_8601": "2020-04-19T02:44:34.597646Z", "url": "https://files.pythonhosted.org/packages/48/0c/3d76cd3be22b20bf2b1c5a92392e6030f3c3c4c6b6b4a18bb26a285b3c8f/genewalk-1.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "64cee6f31d5b577f1aecad72bd57a4b5", "sha256": "6ef0f27dd83ea8e5dcefa9c036797fabecd4ab788346a53c25966540967abcb3"}, "downloads": -1, "filename": "genewalk-1.2.1.tar.gz", "has_sig": false, "md5_digest": "64cee6f31d5b577f1aecad72bd57a4b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30031, "upload_time": "2020-04-19T02:44:36", "upload_time_iso_8601": "2020-04-19T02:44:36.001676Z", "url": "https://files.pythonhosted.org/packages/f5/69/58897c0fd7f8dcb5e4c3a8cd555784e6273f3b6ed38ac9b683669cb5e6e4/genewalk-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:22 2020"}