{"info": {"author": "Jan Greis", "author_email": "janrg@users.noreply.github.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Utilities"], "description": "multidirmap\n===========\n\nMultidirectional map where an arbitrary number of columns can be used as keys.\n\nStatus\n------\n\n.. image:: https://readthedocs.org/projects/multidirmap/badge/?style=flat\n   :target: https://readthedocs.org/projects/multidirmap\n   :alt: Documentation Status\n\n.. image:: https://travis-ci.org/janrg/multidirmap.svg?branch=master\n   :alt: Travis-CI Build Status\n   :target: https://travis-ci.org/janrg/multidirmap\n\n.. image:: https://ci.appveyor.com/api/projects/status/github/janrg/multidirmap?branch=master&svg=true\n   :alt: AppVeyor Build Status\n   :target: https://ci.appveyor.com/project/janrg/multidirmap\n\n.. image:: https://codecov.io/github/janrg/multidirmap/coverage.svg?branch=master\n   :alt: Coverage Status\n   :target: https://codecov.io/github/janrg/multidirmap\n\n.. image:: https://img.shields.io/pypi/v/multidirmap.svg\n   :alt: PyPI Package latest release\n   :target: https://pypi.org/project/multidirmap/\n\n.. image:: https://img.shields.io/pypi/wheel/multidirmap.svg\n   :alt: PyPI Wheel\n   :target: https://pypi.org/project/multidirmap/\n\n.. image:: https://img.shields.io/pypi/pyversions/multidirmap.svg\n   :alt: Supported versions\n   :target: https://pypi.org/project/multidirmap/\n\n.. image:: https://img.shields.io/pypi/implementation/multidirmap.svg\n   :alt: Supported implementations\n   :target: https://pypi.org/project/multidirmap/\n\n.. image:: https://img.shields.io/pypi/l/multidirmap.svg\n   :target: https://raw.githubusercontent.com/janrg/multidirmap/master/LICENSE\n   :alt: License\n\nInstallation\n------------\n\n.. code-block:: bash\n\n   $ pip install multidirmap\n\nDocumentation\n-------------\n\nhttps://multidirmap.readthedocs.io/en/latest/\n\nQuick Start\n-----------\n\n.. code-block:: python\n\n   >>> from multidirmap import MultiDirMap\n   >>> crew = MultiDirMap(\n           [\"character\", \"portrayed_by\", \"role\", \"nicknames\"],\n           key_columns=2,\n           data=[[\"Malcolm Reynolds\", \"Nathan Fillion\", \"Captain\", [\"Mal\", \"Captain Tight Pants\"]],\n                 [\"Zo\u00eb Washburne\", \"Gina Torres\", \"First Mate\"],\n                 [\"Hoban Washburne\", \"Alan Tudyk\", \"Pilot\", \"Wash\"]])\n   >>> crew[\"Malcolm Reynolds\"].role\n   Captain\n   >>> crew.portrayed_by[\"Nathan Fillion\"].nicknames\n   [\"Mal\", \"Captain Tight Pants\"]\n\nFeatures\n--------\n\n- As many columns as desired can be used as key columns for the mapping\n- O(1) retrieval from any key column\n- Internal consistency is maintained through any modifications to the contents\n- Insertion order is maintained in the primary key column\n- Built-in pretty printing of the mapping\n\nUse Cases\n---------\n\nDictionaries are ubiquitous in Pyton and provide an extremely useful and fast\nmapping from keys to values. Sometimes, a single, uni-directional mapping is not\nenough, though, and while `bidict <https://github.com/jab/bidict>`__ extends\nthis functionality to a bidirectional mapping, *multidirmap* provides an\narray-like datastructure where any number of columns can be used for O(1)\nretrieval. In its simplest implementation (2 columns, one of which is a key\ncolumn), it essentially provides the same functionality as a dict, albeit with\nadditional overhead (don't do that...). 2 columns that are both key columns\nwill behave somewhat like a bidict, albeit with slightly different syntax. But\n*multidirmap* is significantly more flexible in that any number of key and\nnon-key columns can be used.\nA somewhat similar effect could be achieved with pandas DataFrames, though these\n(1) will not ensure uniqueness of keys, hence a retrieval may return any number\nof rows, (2) use an array structure, hence retrieval is O(n) which for large\narrays can get *very* slow, and (3) require the installation of pandas, which\nis a rather large library to include just for this feature.\n\nSay we want to work with information from the Periodic Table of Elements, like\n\n.. code-block:: python\n\n   [[\"H\", \"Hydrogen\", 1, [1, 2, 3]],\n    [\"He\", \"Helium\", 2, [4, 3]],\n    [\"Li\", \"Lithium\", 3, [7, 6]],\n    ...\n    [\"Og\", \"Oganesson\", 118, [295, 294]]]\n\nwhere the columns indicate symbol, name, atomic number, and nucleon numbers of\nisotopes respectively. The first three columns are obvious candidates for key\ncolumns as they are by definition unique. *multidirmap* allows placing this\ninformation in a unified datastructure where questions like \"What are the\nisotope nucleon numbers of Lithium?\", \"What is the chemical element symbol of\nPotassium?\", or \"What is the name of the element with atomic number 46?\" can\nbe asked with a simple syntax and O(1) retrieval. Any number of additional\nkey and non-key columns could be added.\n\nThe use case that prompted the development on this package involved the *struct*\nmodule: For a binary interface I needed to convert back and forth between (1)\na string representation of the variable type, (2) an integer representation\nof the variable type, (3) the struct format char, and (4) the size in bytes of\nthe variable. Again, 1-3 are obvious candidates for key columns, with 4 being\na non-key column. Without *multidirmap*, several separate dicts have to be used\nto provide each needed mapping from one column to another and there is easy way\nto ensure that these dicts remain consistent with each other through possible\nchanges. \n\n\nChangelog\n=========\n\n0.3.0 (2019-10-03)\n------------------\n\n* ``overwrite`` now takes an enum ``Overwrite`` (backported to 2.7 via\n  ``enum34``) with values ``NONE``, ``PRIMARY``, ``SECONDARY``,\n  or ``ALL`` instead of string values (though the implementation is backwards\n  compatible to using the old string values).\n* ``copy.copy()`` and ``copy.deepcopy()`` now work properly on a MultiDirMap\n* ``aslist()`` and ``asdict()`` on row elements renamed to ``to_list()``\n  and ``to_dict()``\n* new method ``to_list()`` which returns complete map data as a list of lists\n\n0.2.0 (2019-07-12)\n------------------\n\n* Custom sorting\n* Reordering of secondary keys\n\n0.1.0 (2018-07-28)\n------------------\n\n* First release on PyPI.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/janrg/multidirmap", "keywords": "", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "multidirmap", "package_url": "https://pypi.org/project/multidirmap/", "platform": "", "project_url": "https://pypi.org/project/multidirmap/", "project_urls": {"Homepage": "https://github.com/janrg/multidirmap"}, "release_url": "https://pypi.org/project/multidirmap/0.3.0/", "requires_dist": ["enum34 ; python_version < \"3.4\""], "requires_python": "", "summary": "A multidirectional map where an arbitrary number of columns can be used as keys.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"multidirmap\">\n<h2>multidirmap</h2>\n<p>Multidirectional map where an arbitrary number of columns can be used as keys.</p>\n<div id=\"status\">\n<h3>Status</h3>\n<a href=\"https://readthedocs.org/projects/multidirmap\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6b74d174aebcbcbcb474140102f76bcbf10ffa87/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6d756c74696469726d61702f62616467652f3f7374796c653d666c6174\"></a>\n<a href=\"https://travis-ci.org/janrg/multidirmap\" rel=\"nofollow\"><img alt=\"Travis-CI Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0bcbb53739a9907ee253fa74e21631aeb1c65f66/68747470733a2f2f7472617669732d63692e6f72672f6a616e72672f6d756c74696469726d61702e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/janrg/multidirmap\" rel=\"nofollow\"><img alt=\"AppVeyor Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/caafd81b70cc6dfda6ad74809d43e6dfa9c9ce55/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6a616e72672f6d756c74696469726d61703f6272616e63683d6d6173746572267376673d74727565\"></a>\n<a href=\"https://codecov.io/github/janrg/multidirmap\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/56de02ffb3e21dddf31fa541a8342e88ab73b62c/68747470733a2f2f636f6465636f762e696f2f6769746875622f6a616e72672f6d756c74696469726d61702f636f7665726167652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/multidirmap/\" rel=\"nofollow\"><img alt=\"PyPI Package latest release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9a3e78e26c32fbd3facbb325decd8e2b06e55daf/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d756c74696469726d61702e737667\"></a>\n<a href=\"https://pypi.org/project/multidirmap/\" rel=\"nofollow\"><img alt=\"PyPI Wheel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8693b6c7bbd9e9140749ce68e67ad93030006223/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f6d756c74696469726d61702e737667\"></a>\n<a href=\"https://pypi.org/project/multidirmap/\" rel=\"nofollow\"><img alt=\"Supported versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8ddde0b0a0dfe5106257e6084c1205ddf9a57129/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6d756c74696469726d61702e737667\"></a>\n<a href=\"https://pypi.org/project/multidirmap/\" rel=\"nofollow\"><img alt=\"Supported implementations\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/027dec0dc8ace7e0d5fca6bdc4612086428fcb51/68747470733a2f2f696d672e736869656c64732e696f2f707970692f696d706c656d656e746174696f6e2f6d756c74696469726d61702e737667\"></a>\n<a href=\"https://raw.githubusercontent.com/janrg/multidirmap/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3da149d8bbccbd1d6c82a450898197a3a2176ca7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6d756c74696469726d61702e737667\"></a>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>$ pip install multidirmap\n</pre>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p><a href=\"https://multidirmap.readthedocs.io/en/latest/\" rel=\"nofollow\">https://multidirmap.readthedocs.io/en/latest/</a></p>\n</div>\n<div id=\"quick-start\">\n<h3>Quick Start</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">multidirmap</span> <span class=\"kn\">import</span> <span class=\"n\">MultiDirMap</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">crew</span> <span class=\"o\">=</span> <span class=\"n\">MultiDirMap</span><span class=\"p\">(</span>\n        <span class=\"p\">[</span><span class=\"s2\">\"character\"</span><span class=\"p\">,</span> <span class=\"s2\">\"portrayed_by\"</span><span class=\"p\">,</span> <span class=\"s2\">\"role\"</span><span class=\"p\">,</span> <span class=\"s2\">\"nicknames\"</span><span class=\"p\">],</span>\n        <span class=\"n\">key_columns</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n        <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"s2\">\"Malcolm Reynolds\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Nathan Fillion\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Captain\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Mal\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Captain Tight Pants\"</span><span class=\"p\">]],</span>\n              <span class=\"p\">[</span><span class=\"s2\">\"Zo\u00eb Washburne\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Gina Torres\"</span><span class=\"p\">,</span> <span class=\"s2\">\"First Mate\"</span><span class=\"p\">],</span>\n              <span class=\"p\">[</span><span class=\"s2\">\"Hoban Washburne\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Alan Tudyk\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Pilot\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Wash\"</span><span class=\"p\">]])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">crew</span><span class=\"p\">[</span><span class=\"s2\">\"Malcolm Reynolds\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">role</span>\n<span class=\"n\">Captain</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">crew</span><span class=\"o\">.</span><span class=\"n\">portrayed_by</span><span class=\"p\">[</span><span class=\"s2\">\"Nathan Fillion\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">nicknames</span>\n<span class=\"p\">[</span><span class=\"s2\">\"Mal\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Captain Tight Pants\"</span><span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>As many columns as desired can be used as key columns for the mapping</li>\n<li>O(1) retrieval from any key column</li>\n<li>Internal consistency is maintained through any modifications to the contents</li>\n<li>Insertion order is maintained in the primary key column</li>\n<li>Built-in pretty printing of the mapping</li>\n</ul>\n</div>\n<div id=\"use-cases\">\n<h3>Use Cases</h3>\n<p>Dictionaries are ubiquitous in Pyton and provide an extremely useful and fast\nmapping from keys to values. Sometimes, a single, uni-directional mapping is not\nenough, though, and while <a href=\"https://github.com/jab/bidict\" rel=\"nofollow\">bidict</a> extends\nthis functionality to a bidirectional mapping, <em>multidirmap</em> provides an\narray-like datastructure where any number of columns can be used for O(1)\nretrieval. In its simplest implementation (2 columns, one of which is a key\ncolumn), it essentially provides the same functionality as a dict, albeit with\nadditional overhead (don\u2019t do that\u2026). 2 columns that are both key columns\nwill behave somewhat like a bidict, albeit with slightly different syntax. But\n<em>multidirmap</em> is significantly more flexible in that any number of key and\nnon-key columns can be used.\nA somewhat similar effect could be achieved with pandas DataFrames, though these\n(1) will not ensure uniqueness of keys, hence a retrieval may return any number\nof rows, (2) use an array structure, hence retrieval is O(n) which for large\narrays can get <em>very</em> slow, and (3) require the installation of pandas, which\nis a rather large library to include just for this feature.</p>\n<p>Say we want to work with information from the Periodic Table of Elements, like</p>\n<pre><span class=\"p\">[[</span><span class=\"s2\">\"H\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Hydrogen\"</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]],</span>\n <span class=\"p\">[</span><span class=\"s2\">\"He\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Helium\"</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]],</span>\n <span class=\"p\">[</span><span class=\"s2\">\"Li\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Lithium\"</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]],</span>\n <span class=\"o\">...</span>\n <span class=\"p\">[</span><span class=\"s2\">\"Og\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Oganesson\"</span><span class=\"p\">,</span> <span class=\"mi\">118</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">295</span><span class=\"p\">,</span> <span class=\"mi\">294</span><span class=\"p\">]]]</span>\n</pre>\n<p>where the columns indicate symbol, name, atomic number, and nucleon numbers of\nisotopes respectively. The first three columns are obvious candidates for key\ncolumns as they are by definition unique. <em>multidirmap</em> allows placing this\ninformation in a unified datastructure where questions like \u201cWhat are the\nisotope nucleon numbers of Lithium?\u201d, \u201cWhat is the chemical element symbol of\nPotassium?\u201d, or \u201cWhat is the name of the element with atomic number 46?\u201d can\nbe asked with a simple syntax and O(1) retrieval. Any number of additional\nkey and non-key columns could be added.</p>\n<p>The use case that prompted the development on this package involved the <em>struct</em>\nmodule: For a binary interface I needed to convert back and forth between (1)\na string representation of the variable type, (2) an integer representation\nof the variable type, (3) the struct format char, and (4) the size in bytes of\nthe variable. Again, 1-3 are obvious candidates for key columns, with 4 being\na non-key column. Without <em>multidirmap</em>, several separate dicts have to be used\nto provide each needed mapping from one column to another and there is easy way\nto ensure that these dicts remain consistent with each other through possible\nchanges.</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.3.0 (2019-10-03)</h3>\n<ul>\n<li><tt>overwrite</tt> now takes an enum <tt>Overwrite</tt> (backported to 2.7 via\n<tt>enum34</tt>) with values <tt>NONE</tt>, <tt>PRIMARY</tt>, <tt>SECONDARY</tt>,\nor <tt>ALL</tt> instead of string values (though the implementation is backwards\ncompatible to using the old string values).</li>\n<li><tt>copy.copy()</tt> and <tt>copy.deepcopy()</tt> now work properly on a MultiDirMap</li>\n<li><tt>aslist()</tt> and <tt>asdict()</tt> on row elements renamed to <tt>to_list()</tt>\nand <tt>to_dict()</tt></li>\n<li>new method <tt>to_list()</tt> which returns complete map data as a list of lists</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.2.0 (2019-07-12)</h3>\n<ul>\n<li>Custom sorting</li>\n<li>Reordering of secondary keys</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.0 (2018-07-28)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5929963, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5c84c7bb04384af64f3343fdb1b2a579", "sha256": "9639398495791e711c4a4954080a417e0a8f9cc8d4b92916d5b2954869905185"}, "downloads": -1, "filename": "multidirmap-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5c84c7bb04384af64f3343fdb1b2a579", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12695, "upload_time": "2018-07-28T15:37:11", "upload_time_iso_8601": "2018-07-28T15:37:11.409672Z", "url": "https://files.pythonhosted.org/packages/7c/b6/77c34466b76ba021fd5b451d995390bb8f2526a627f55a4953447a33d389/multidirmap-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62a3ff4da85c60ca00b629862c7e466f", "sha256": "2296d9b2f3e46e8ebbf02852d1c14a917ac03a4438801f179e1e958301030fc4"}, "downloads": -1, "filename": "multidirmap-0.1.0.tar.gz", "has_sig": false, "md5_digest": "62a3ff4da85c60ca00b629862c7e466f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27824, "upload_time": "2018-07-28T19:38:49", "upload_time_iso_8601": "2018-07-28T19:38:49.100173Z", "url": "https://files.pythonhosted.org/packages/66/a1/9c56425588b2b637719f0913a9810f4c5f44b017dccc41278a99ffd174b5/multidirmap-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "5cb576123311130e77fdcf0c1b9db644", "sha256": "a986bc24e025aab2039aab0abc9e89953c98446b21409374a8e6f7032587afe1"}, "downloads": -1, "filename": "multidirmap-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5cb576123311130e77fdcf0c1b9db644", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11022, "upload_time": "2019-08-09T14:00:21", "upload_time_iso_8601": "2019-08-09T14:00:21.554040Z", "url": "https://files.pythonhosted.org/packages/ec/90/f45dc7347f3af48a28fb87003114610e61d5d8c4de38020368a7e7151d00/multidirmap-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "edb6a83572e867bd10133a6f8772d0eb", "sha256": "91d7d6edfc9b71b15833acb2d5c91f8298ed705743efd72c73c86bc2c48b7381"}, "downloads": -1, "filename": "multidirmap-0.2.0.tar.gz", "has_sig": false, "md5_digest": "edb6a83572e867bd10133a6f8772d0eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28723, "upload_time": "2019-08-09T14:01:53", "upload_time_iso_8601": "2019-08-09T14:01:53.934932Z", "url": "https://files.pythonhosted.org/packages/c3/ab/de7a1f57463116efe07717a9a3eb8b8fa5d69888a3aa5a9982b8018f405f/multidirmap-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "631721805d26d5fe1e81c8730f98bc74", "sha256": "84a57461dbfe5aa5b6f23ad67fb4c8d0c9db12db968e61c2789c7f0ad420a813"}, "downloads": -1, "filename": "multidirmap-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "631721805d26d5fe1e81c8730f98bc74", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11796, "upload_time": "2019-10-04T20:00:38", "upload_time_iso_8601": "2019-10-04T20:00:38.293315Z", "url": "https://files.pythonhosted.org/packages/9e/9a/9f80501e64d0664a33cf630fd78f8dc955edc59d7210596e0ad085eb366e/multidirmap-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "463a3409cff37b682ab556c2ba1fde7c", "sha256": "c98f23b633449e9fd4c4120d3277a22d58016ce7a1c61b7f0fb583f744a676b1"}, "downloads": -1, "filename": "multidirmap-0.3.0.tar.gz", "has_sig": false, "md5_digest": "463a3409cff37b682ab556c2ba1fde7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29472, "upload_time": "2019-10-04T20:00:40", "upload_time_iso_8601": "2019-10-04T20:00:40.358926Z", "url": "https://files.pythonhosted.org/packages/88/ba/0704841bad8fe0bb1a2f1ae8f20e0872ea0b83377df81952b7950d85ad3f/multidirmap-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "631721805d26d5fe1e81c8730f98bc74", "sha256": "84a57461dbfe5aa5b6f23ad67fb4c8d0c9db12db968e61c2789c7f0ad420a813"}, "downloads": -1, "filename": "multidirmap-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "631721805d26d5fe1e81c8730f98bc74", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11796, "upload_time": "2019-10-04T20:00:38", "upload_time_iso_8601": "2019-10-04T20:00:38.293315Z", "url": "https://files.pythonhosted.org/packages/9e/9a/9f80501e64d0664a33cf630fd78f8dc955edc59d7210596e0ad085eb366e/multidirmap-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "463a3409cff37b682ab556c2ba1fde7c", "sha256": "c98f23b633449e9fd4c4120d3277a22d58016ce7a1c61b7f0fb583f744a676b1"}, "downloads": -1, "filename": "multidirmap-0.3.0.tar.gz", "has_sig": false, "md5_digest": "463a3409cff37b682ab556c2ba1fde7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29472, "upload_time": "2019-10-04T20:00:40", "upload_time_iso_8601": "2019-10-04T20:00:40.358926Z", "url": "https://files.pythonhosted.org/packages/88/ba/0704841bad8fe0bb1a2f1ae8f20e0872ea0b83377df81952b7950d85ad3f/multidirmap-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:27 2020"}