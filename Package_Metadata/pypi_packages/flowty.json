{"info": {"author": "Simon Spoorendonk", "author_email": "info@flowty.ai", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "License :: Other/Proprietary License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Flowty\n\n> **Note**\n> \n> In planning - this is a placeholder package\n>\n> Has been tested on Ubuntu 18.04 and Windows 10\n\nInstall with\n\n```sh\npip install flowty\n```\n\n## Prerequisites for Linux\n\nInstall the `libgfortran5` library.\n\nOn `apt-get` compatible distribution do\n\n```sh\napt-get update\napt-get install libgfortran5\n```\n\n## Quick Start\n\nSolve a small 0-1 knapsack problem using the dynamic programming algorithm.\n\nThe graph is constructed as a string of edges for choosing an item plus dummy nodes\nallowing for not packing an item (by tacking a detour of two zero-edges)\n\n```python\nfrom flowty import Model, ParamKey, ParamValue\n\np = [10, 13, 18, 31, 7, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nw = [11, 15, 20, 35, 10, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nc = 47\n\ne = [(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6),\n      (0, 7), (1, 8), (2, 9), (3, 10), (4, 11), (5, 12),\n      (7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6),\n]\n\nm = Model()\nm.setParam(ParamKey.Algorithm, ParamValue.AlgorithmDp)\n\ng = m.addGraph(directed=True, obj=p, edges=e, source=0, sink=6, L=1, U=1, type=\"B\")\nm.addResourceDisposible(\n    graph=g, consumptionType=\"E\", weight=w, boundsType=\"V\", lb=0, ub=c, obj=0\n)\nm.optimize()\n```\n\nVisit [docs.flowy.ai](https://docs.flowty.ai) to get to know more.\n\n## License\n\nVisit [flowy.ai](https://flowty.ai) for information on commercial pricing and trial\nlicenses.\n\nThe Flowty Network Optimization Solver defaults to a community license that allows\nsolving problems of limited size. Full scale licenses are available for free for\nnon-profit organizations and academics. Contact us to get your license.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://flowty.ai", "keywords": "Nework Optimization,Mathematical Optimization,Integer Programming,Operations Research", "license": "Proprietary", "maintainer": "", "maintainer_email": "", "name": "flowty", "package_url": "https://pypi.org/project/flowty/", "platform": "", "project_url": "https://pypi.org/project/flowty/", "project_urls": {"Homepage": "https://flowty.ai"}, "release_url": "https://pypi.org/project/flowty/0.0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Flowty Network Optimization Solver", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Flowty</h1>\n<blockquote>\n<p><strong>Note</strong></p>\n<p>In planning - this is a placeholder package</p>\n<p>Has been tested on Ubuntu 18.04 and Windows 10</p>\n</blockquote>\n<p>Install with</p>\n<pre>pip install flowty\n</pre>\n<h2>Prerequisites for Linux</h2>\n<p>Install the <code>libgfortran5</code> library.</p>\n<p>On <code>apt-get</code> compatible distribution do</p>\n<pre>apt-get update\napt-get install libgfortran5\n</pre>\n<h2>Quick Start</h2>\n<p>Solve a small 0-1 knapsack problem using the dynamic programming algorithm.</p>\n<p>The graph is constructed as a string of edges for choosing an item plus dummy nodes\nallowing for not packing an item (by tacking a detour of two zero-edges)</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flowty</span> <span class=\"kn\">import</span> <span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">ParamKey</span><span class=\"p\">,</span> <span class=\"n\">ParamValue</span>\n\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">35</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">33</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"mi\">47</span>\n\n<span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">),</span>\n      <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">),</span>\n      <span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">()</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">setParam</span><span class=\"p\">(</span><span class=\"n\">ParamKey</span><span class=\"o\">.</span><span class=\"n\">Algorithm</span><span class=\"p\">,</span> <span class=\"n\">ParamValue</span><span class=\"o\">.</span><span class=\"n\">AlgorithmDp</span><span class=\"p\">)</span>\n\n<span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">addGraph</span><span class=\"p\">(</span><span class=\"n\">directed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">edges</span><span class=\"o\">=</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sink</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">L</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">U</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"B\"</span><span class=\"p\">)</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">addResourceDisposible</span><span class=\"p\">(</span>\n    <span class=\"n\">graph</span><span class=\"o\">=</span><span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">consumptionType</span><span class=\"o\">=</span><span class=\"s2\">\"E\"</span><span class=\"p\">,</span> <span class=\"n\">weight</span><span class=\"o\">=</span><span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">boundsType</span><span class=\"o\">=</span><span class=\"s2\">\"V\"</span><span class=\"p\">,</span> <span class=\"n\">lb</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">ub</span><span class=\"o\">=</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n<span class=\"p\">)</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">optimize</span><span class=\"p\">()</span>\n</pre>\n<p>Visit <a href=\"https://docs.flowty.ai\" rel=\"nofollow\">docs.flowy.ai</a> to get to know more.</p>\n<h2>License</h2>\n<p>Visit <a href=\"https://flowty.ai\" rel=\"nofollow\">flowy.ai</a> for information on commercial pricing and trial\nlicenses.</p>\n<p>The Flowty Network Optimization Solver defaults to a community license that allows\nsolving problems of limited size. Full scale licenses are available for free for\nnon-profit organizations and academics. Contact us to get your license.</p>\n\n          </div>"}, "last_serial": 7015620, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "f76d1cf58eea6a62aed780f94cc65a99", "sha256": "3cba78e757766f79c4e3297859ea7ad837d507ee5ca12f013b0d0527db5d9e75"}, "downloads": -1, "filename": "flowty-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f76d1cf58eea6a62aed780f94cc65a99", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2025, "upload_time": "2020-04-14T08:47:49", "upload_time_iso_8601": "2020-04-14T08:47:49.569330Z", "url": "https://files.pythonhosted.org/packages/d1/4c/abd743ea322e7078ced5bdb4df9615a2fb30cd70b22024e24b32dab1b10e/flowty-0.0.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f76d1cf58eea6a62aed780f94cc65a99", "sha256": "3cba78e757766f79c4e3297859ea7ad837d507ee5ca12f013b0d0527db5d9e75"}, "downloads": -1, "filename": "flowty-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f76d1cf58eea6a62aed780f94cc65a99", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2025, "upload_time": "2020-04-14T08:47:49", "upload_time_iso_8601": "2020-04-14T08:47:49.569330Z", "url": "https://files.pythonhosted.org/packages/d1/4c/abd743ea322e7078ced5bdb4df9615a2fb30cd70b22024e24b32dab1b10e/flowty-0.0.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 01:01:38 2020"}