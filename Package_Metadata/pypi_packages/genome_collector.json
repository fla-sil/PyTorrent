{"info": {"author": "Zulko", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "Genome Collector\n================\n\n.. image:: https://travis-ci.org/Edinburgh-Genome-Foundry/genome_collector.svg?branch=master\n   :target: https://travis-ci.org/Edinburgh-Genome-Foundry/genome_collector\n   :alt: Travis CI build status\n\n.. image:: https://coveralls.io/repos/github/Edinburgh-Genome-Foundry/genome_collector/badge.svg?branch=master\n   :target: https://coveralls.io/github/Edinburgh-Genome-Foundry/genome_collector?branch=master\n\n\nGenome Collector is a Python library to download and manage reference genome\ndata for specific TaxIDs, in particular nucleotide and protein sequences (in\nfasta/genbank/gff formats), and alignment databases (BLAST, Bowtie1/2).\n\nThe data is downloaded automatically on a need-to basis, making it very easy\nfor Python projects to use and re-use reference genomes of E. coli,\nS. cerevisiae, and so on, without the worry of manually downloading from NCBI.\n\nExamples\n--------\n\nLet's get Biopython records of all protein sequences in E. coli:\n\n.. code:: python\n\n    from genome_collector import GenomeCollection\n    collection = GenomeCollection()\n    records = collection.get_taxid_biopython_records(511145, \"protein_fasta\")\n\nAnd that's it! If the protein data wasn't already on your machine, Genome\nCollector downloaded from NCBI, and stored in your \"collection\" for the next\ntime time you need it.\n\nNow let's get a path to a local BLAST database for S. cerevisiae:\n\n.. code:: python\n\n    from genome_collector import GenomeCollection\n    collection = GenomeCollection()\n    db_path = collection.get_taxid_blastdb_path(taxid=559292, db_type='nucl')\n\nIf there was no cerevisiae database on your machine, Genome Collector\ndownloaded the genome data and built it. It is now in your collection, and you\ncan use the returned ``db_path`` to start a BLAST process:\n\n.. code:: python\n\n    import subprocess\n    process = subprocess.run([\n        'blastn', '-db', db_path, '-query', 'queries.fa', '-out', 'results.txt'\n    ])\n\nInfos\n-----\n\n- **Installation:** with ``pip install genome_collector``. Some BLAST and Bowtie\n  features also require specific software installed, see docs.\n\n- **Docs**: https://edinburgh-genome-foundry.github.io/genome_collector/\n\n- **Github repo:** released on Github `<https://github.com/Edinburgh-Genome-Foundry/genome_collector>`_\n\n- **Licence:** MIT\n\n- **Similar software:** see pre-existing projects `ncbi-genome-download <https://github.com/kblin/ncbi-genome-download>`_ and `Genomepy <https://github.com/simonvh/genomepy>`_ . In comparison, Genome Collector is more opinionated, it uses TaxID first and has features like on-demand genome downloading and database building, and Biopython records loading.\n\n\nEveryone is welcome to contribute !\n\nMore biology software\n---------------------\n\n.. image:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/Edinburgh-Genome-Foundry.github.io/master/static/imgs/logos/egf-codon-horizontal.png\n  :target: https://edinburgh-genome-foundry.github.io/\n\nGenome Collector is part of the\n`EGF Codons <https://edinburgh-genome-foundry.github.io/>`_\nsynthetic biology software suite for DNA design, manufacturing and validation.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Edinburgh-Genome-Foundry/genome_collector", "keywords": "NCBI genomes TaxID BLAST Bowtie", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "genome_collector", "package_url": "https://pypi.org/project/genome_collector/", "platform": "", "project_url": "https://pypi.org/project/genome_collector/", "project_urls": {"Homepage": "https://github.com/Edinburgh-Genome-Foundry/genome_collector"}, "release_url": "https://pypi.org/project/genome_collector/0.1.6/", "requires_dist": null, "requires_python": "", "summary": "Easily download and store taxID genomes from NCBI", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/Edinburgh-Genome-Foundry/genome_collector\" rel=\"nofollow\"><img alt=\"Travis CI build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/79fd83e56c320ac474b45fef80619ed65b950144/68747470733a2f2f7472617669732d63692e6f72672f4564696e62757267682d47656e6f6d652d466f756e6472792f67656e6f6d655f636f6c6c6563746f722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/Edinburgh-Genome-Foundry/genome_collector?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/Edinburgh-Genome-Foundry/genome_collector/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d2437fc75f5004a283b118cd016ea4ce896970f6/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4564696e62757267682d47656e6f6d652d466f756e6472792f67656e6f6d655f636f6c6c6563746f722f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<p>Genome Collector is a Python library to download and manage reference genome\ndata for specific TaxIDs, in particular nucleotide and protein sequences (in\nfasta/genbank/gff formats), and alignment databases (BLAST, Bowtie1/2).</p>\n<p>The data is downloaded automatically on a need-to basis, making it very easy\nfor Python projects to use and re-use reference genomes of E. coli,\nS. cerevisiae, and so on, without the worry of manually downloading from NCBI.</p>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Let\u2019s get Biopython records of all protein sequences in E. coli:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">genome_collector</span> <span class=\"kn\">import</span> <span class=\"n\">GenomeCollection</span>\n<span class=\"n\">collection</span> <span class=\"o\">=</span> <span class=\"n\">GenomeCollection</span><span class=\"p\">()</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">collection</span><span class=\"o\">.</span><span class=\"n\">get_taxid_biopython_records</span><span class=\"p\">(</span><span class=\"mi\">511145</span><span class=\"p\">,</span> <span class=\"s2\">\"protein_fasta\"</span><span class=\"p\">)</span>\n</pre>\n<p>And that\u2019s it! If the protein data wasn\u2019t already on your machine, Genome\nCollector downloaded from NCBI, and stored in your \u201ccollection\u201d for the next\ntime time you need it.</p>\n<p>Now let\u2019s get a path to a local BLAST database for S. cerevisiae:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">genome_collector</span> <span class=\"kn\">import</span> <span class=\"n\">GenomeCollection</span>\n<span class=\"n\">collection</span> <span class=\"o\">=</span> <span class=\"n\">GenomeCollection</span><span class=\"p\">()</span>\n<span class=\"n\">db_path</span> <span class=\"o\">=</span> <span class=\"n\">collection</span><span class=\"o\">.</span><span class=\"n\">get_taxid_blastdb_path</span><span class=\"p\">(</span><span class=\"n\">taxid</span><span class=\"o\">=</span><span class=\"mi\">559292</span><span class=\"p\">,</span> <span class=\"n\">db_type</span><span class=\"o\">=</span><span class=\"s1\">'nucl'</span><span class=\"p\">)</span>\n</pre>\n<p>If there was no cerevisiae database on your machine, Genome Collector\ndownloaded the genome data and built it. It is now in your collection, and you\ncan use the returned <tt>db_path</tt> to start a BLAST process:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">subprocess</span>\n<span class=\"n\">process</span> <span class=\"o\">=</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span>\n    <span class=\"s1\">'blastn'</span><span class=\"p\">,</span> <span class=\"s1\">'-db'</span><span class=\"p\">,</span> <span class=\"n\">db_path</span><span class=\"p\">,</span> <span class=\"s1\">'-query'</span><span class=\"p\">,</span> <span class=\"s1\">'queries.fa'</span><span class=\"p\">,</span> <span class=\"s1\">'-out'</span><span class=\"p\">,</span> <span class=\"s1\">'results.txt'</span>\n<span class=\"p\">])</span>\n</pre>\n</div>\n<div id=\"infos\">\n<h2>Infos</h2>\n<ul>\n<li><strong>Installation:</strong> with <tt>pip install genome_collector</tt>. Some BLAST and Bowtie\nfeatures also require specific software installed, see docs.</li>\n<li><strong>Docs</strong>: <a href=\"https://edinburgh-genome-foundry.github.io/genome_collector/\" rel=\"nofollow\">https://edinburgh-genome-foundry.github.io/genome_collector/</a></li>\n<li><strong>Github repo:</strong> released on Github <a href=\"https://github.com/Edinburgh-Genome-Foundry/genome_collector\" rel=\"nofollow\">https://github.com/Edinburgh-Genome-Foundry/genome_collector</a></li>\n<li><strong>Licence:</strong> MIT</li>\n<li><strong>Similar software:</strong> see pre-existing projects <a href=\"https://github.com/kblin/ncbi-genome-download\" rel=\"nofollow\">ncbi-genome-download</a> and <a href=\"https://github.com/simonvh/genomepy\" rel=\"nofollow\">Genomepy</a> . In comparison, Genome Collector is more opinionated, it uses TaxID first and has features like on-demand genome downloading and database building, and Biopython records loading.</li>\n</ul>\n<p>Everyone is welcome to contribute !</p>\n</div>\n<div id=\"more-biology-software\">\n<h2>More biology software</h2>\n<a href=\"https://edinburgh-genome-foundry.github.io/\" rel=\"nofollow\"><img alt=\"https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/Edinburgh-Genome-Foundry.github.io/master/static/imgs/logos/egf-codon-horizontal.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a74793b24e95adb6771b02753b469178ffd6600/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4564696e62757267682d47656e6f6d652d466f756e6472792f4564696e62757267682d47656e6f6d652d466f756e6472792e6769746875622e696f2f6d61737465722f7374617469632f696d67732f6c6f676f732f6567662d636f646f6e2d686f72697a6f6e74616c2e706e67\"></a>\n<p>Genome Collector is part of the\n<a href=\"https://edinburgh-genome-foundry.github.io/\" rel=\"nofollow\">EGF Codons</a>\nsynthetic biology software suite for DNA design, manufacturing and validation.</p>\n</div>\n\n          </div>"}, "last_serial": 6120267, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "dbcf3b18566ae8b558b170b542afd746", "sha256": "d2c6553f04b168d3c7d9d28b2c6693626138ace6a6e56c43954b6c0e0ca9c632"}, "downloads": -1, "filename": "genome_collector-0.1.0.tar.gz", "has_sig": false, "md5_digest": "dbcf3b18566ae8b558b170b542afd746", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11635, "upload_time": "2019-11-08T14:07:08", "upload_time_iso_8601": "2019-11-08T14:07:08.172412Z", "url": "https://files.pythonhosted.org/packages/b0/38/6dbaa0b6273dd169e6cbce33a1d7a36746e55db51f1d02e5fac9c841b598/genome_collector-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "284afec9c21af3d304c1a33e63535b7b", "sha256": "90bc14cdaa74e68cc77803dc37b45f836874f64e8a805c7ff7081ee442dc6c9c"}, "downloads": -1, "filename": "genome_collector-0.1.1.tar.gz", "has_sig": false, "md5_digest": "284afec9c21af3d304c1a33e63535b7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12844, "upload_time": "2019-11-08T14:47:22", "upload_time_iso_8601": "2019-11-08T14:47:22.183837Z", "url": "https://files.pythonhosted.org/packages/76/b5/a6aecf90322c5168e12350dc58caf77f2825b9ebcb9390822933f87929cb/genome_collector-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "254d2f06181cbbe78545194f0b31fb1b", "sha256": "4feb0ce10f37971784c0d1ea4a95e7dfb38106a0ac1c38a68ba28abb3f7c6252"}, "downloads": -1, "filename": "genome_collector-0.1.2.tar.gz", "has_sig": false, "md5_digest": "254d2f06181cbbe78545194f0b31fb1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12841, "upload_time": "2019-11-08T15:04:02", "upload_time_iso_8601": "2019-11-08T15:04:02.023534Z", "url": "https://files.pythonhosted.org/packages/e7/48/3752032c5513aae067ce393e46710a7644ef737214f41ea9ab1b17ab402d/genome_collector-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "c92f0f535b4dd10c15daa49a562fd200", "sha256": "f43cf28443b9da7437a7916eed7ddb8a7694fa4a2ef35a17b4c0c397892d7740"}, "downloads": -1, "filename": "genome_collector-0.1.3.tar.gz", "has_sig": false, "md5_digest": "c92f0f535b4dd10c15daa49a562fd200", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14088, "upload_time": "2019-11-10T19:00:45", "upload_time_iso_8601": "2019-11-10T19:00:45.086196Z", "url": "https://files.pythonhosted.org/packages/06/9c/04e443033dc50b28efb160486c538588a4c233c2cd53eb78e382e6a59520/genome_collector-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "bbaaf5fc777dcb9541f17ac69f482e10", "sha256": "36c3d84cd64b5b722f2480208dee929465ec9f779de0f5d9ae144809ac0922f5"}, "downloads": -1, "filename": "genome_collector-0.1.4.tar.gz", "has_sig": false, "md5_digest": "bbaaf5fc777dcb9541f17ac69f482e10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14270, "upload_time": "2019-11-10T19:37:47", "upload_time_iso_8601": "2019-11-10T19:37:47.830902Z", "url": "https://files.pythonhosted.org/packages/19/aa/a380b224f27d24812ac9d9294a41b6ec3237723a591a32ffc309d7e17e3b/genome_collector-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "95148d990bf7a1832969b1ee9fb21277", "sha256": "3830a2e44aee19e051401831d22a0070b13efb6fb255cfb786bcd4174a0d7fcb"}, "downloads": -1, "filename": "genome_collector-0.1.5.tar.gz", "has_sig": false, "md5_digest": "95148d990bf7a1832969b1ee9fb21277", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14303, "upload_time": "2019-11-10T20:04:16", "upload_time_iso_8601": "2019-11-10T20:04:16.267533Z", "url": "https://files.pythonhosted.org/packages/ad/1f/0585acbe2f346c72b9a022ebf91ba507c24d081c3f6cac56e661b4fb332d/genome_collector-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "2d86dbf88f751aea45e556a5bcca39cb", "sha256": "f0b68deb0f2d6953e9234fdfe4054230863277f5017624305c5d71f0338c4300"}, "downloads": -1, "filename": "genome_collector-0.1.6.tar.gz", "has_sig": false, "md5_digest": "2d86dbf88f751aea45e556a5bcca39cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15306, "upload_time": "2019-11-12T00:16:14", "upload_time_iso_8601": "2019-11-12T00:16:14.791901Z", "url": "https://files.pythonhosted.org/packages/9e/aa/e4334c7be9d6618d184df26cacc5f86bbc6c29071c2b1367e7372392761f/genome_collector-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2d86dbf88f751aea45e556a5bcca39cb", "sha256": "f0b68deb0f2d6953e9234fdfe4054230863277f5017624305c5d71f0338c4300"}, "downloads": -1, "filename": "genome_collector-0.1.6.tar.gz", "has_sig": false, "md5_digest": "2d86dbf88f751aea45e556a5bcca39cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15306, "upload_time": "2019-11-12T00:16:14", "upload_time_iso_8601": "2019-11-12T00:16:14.791901Z", "url": "https://files.pythonhosted.org/packages/9e/aa/e4334c7be9d6618d184df26cacc5f86bbc6c29071c2b1367e7372392761f/genome_collector-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:16 2020"}