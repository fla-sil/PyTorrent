{"info": {"author": "snicker", "author_email": "ngordon779@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python"], "description": "=========\nskydroppy\n=========\n\nA python library to interface with the Skydrop sprinkler controller API.\n\n---------------------------------------------------\nfirst things first: OAuth your app with your users\n---------------------------------------------------\n\nTo use this library you must have a developer account to the Skydrop API. You can try emailing api@skydrop.com asking for developer access to your account.\n\nYou'll have to navigate the OAuth2 flow per the docs to get a user `code` which can be used to collect the access and refresh token for users: \n`Skydrop API Documentation <https://api.skydrop.com/apps/docs>`_\n\nThere are a few helper methods in the client to assist with that \n\n-------------\nexample code\n-------------\n\ndocumentation coming later, for now, feel free to explore the code\n\nexample code::\n\n    import skydroppy \n    import time\n\n    async def main():\n        client = skydroppy.SkydropClient(client_key, client_secret)\n        # load tokens for the user from your favorite long term storage\n        # should match the structure below.\n        tokens = load_tokens() \n        #{\n        #    'access': <access token>,\n        #    'refresh': <refresh token>>,\n        #    'expires': <epoch timestamp for when access token expires>\n        #}\n\n        if tokens:\n            client.load_token_data(tokens) # little helper method\n        else:\n            tokens = await client.get_access_token(code)\n            save_tokens(client._tokens)\n\n        if client.is_token_expired():\n            tokens = await client.refresh_access_token()\n            save_tokens(client._tokens)\n\n        controllers = await client.update_controllers()\n        for controller in controllers:\n            print(controller)\n            for zone in controller.zones:\n                if zone.status == 'wired':\n                    print(zone)\n\n        front_yard = controllers[0]\n        back_yard = controllers[1]\n        await front_yard.update() #updates status of all zones and controller status\n        await front_yard.get_zone(3).start_watering()\n        await back_yard.get_zone(1).start_watering()\n        time.sleep(120)\n        print(back_yard.get_zone(1).time_remaining)\n        await back_yard.stop_watering() # stops all zones\n        await front_yard.get_zone(3).stop_watering() # also stops all zones.. API/Skydrop limitation\n\n    asyncio.run(main())\n\n\n\n\n", "description_content_type": "text/x-rst; charset=UTF-8", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/snicker/skydroppy/", "keywords": "", "license": "mit", "maintainer": "", "maintainer_email": "", "name": "skydroppy", "package_url": "https://pypi.org/project/skydroppy/", "platform": "any", "project_url": "https://pypi.org/project/skydroppy/", "project_urls": {"Homepage": "https://github.com/snicker/skydroppy/"}, "release_url": "https://pypi.org/project/skydroppy/0.1.2/", "requires_dist": ["aiohttp", "pytest ; extra == 'testing'", "pytest-cov ; extra == 'testing'"], "requires_python": "", "summary": "a python library for the Skydrop sprinkler controller API", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A python library to interface with the Skydrop sprinkler controller API.</p>\n<div id=\"first-things-first-oauth-your-app-with-your-users\">\n<h2>first things first: OAuth your app with your users</h2>\n<p>To use this library you must have a developer account to the Skydrop API. You can try emailing <a href=\"mailto:api%40skydrop.com\">api<span>@</span>skydrop<span>.</span>com</a> asking for developer access to your account.</p>\n<p>You\u2019ll have to navigate the OAuth2 flow per the docs to get a user <cite>code</cite> which can be used to collect the access and refresh token for users:\n<a href=\"https://api.skydrop.com/apps/docs\" rel=\"nofollow\">Skydrop API Documentation</a></p>\n<p>There are a few helper methods in the client to assist with that</p>\n</div>\n<div id=\"example-code\">\n<h2>example code</h2>\n<p>documentation coming later, for now, feel free to explore the code</p>\n<p>example code:</p>\n<pre>import skydroppy\nimport time\n\nasync def main():\n    client = skydroppy.SkydropClient(client_key, client_secret)\n    # load tokens for the user from your favorite long term storage\n    # should match the structure below.\n    tokens = load_tokens()\n    #{\n    #    'access': &lt;access token&gt;,\n    #    'refresh': &lt;refresh token&gt;&gt;,\n    #    'expires': &lt;epoch timestamp for when access token expires&gt;\n    #}\n\n    if tokens:\n        client.load_token_data(tokens) # little helper method\n    else:\n        tokens = await client.get_access_token(code)\n        save_tokens(client._tokens)\n\n    if client.is_token_expired():\n        tokens = await client.refresh_access_token()\n        save_tokens(client._tokens)\n\n    controllers = await client.update_controllers()\n    for controller in controllers:\n        print(controller)\n        for zone in controller.zones:\n            if zone.status == 'wired':\n                print(zone)\n\n    front_yard = controllers[0]\n    back_yard = controllers[1]\n    await front_yard.update() #updates status of all zones and controller status\n    await front_yard.get_zone(3).start_watering()\n    await back_yard.get_zone(1).start_watering()\n    time.sleep(120)\n    print(back_yard.get_zone(1).time_remaining)\n    await back_yard.stop_watering() # stops all zones\n    await front_yard.get_zone(3).stop_watering() # also stops all zones.. API/Skydrop limitation\n\nasyncio.run(main())\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7041651, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8cf101675ea90d61afed9ebfe4a952e3", "sha256": "65b57f4281ab32a4003c861ca570a0bd8ccc4e2e433ece7f64b7793c5d098aad"}, "downloads": -1, "filename": "skydroppy-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8cf101675ea90d61afed9ebfe4a952e3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6018, "upload_time": "2020-04-11T17:03:05", "upload_time_iso_8601": "2020-04-11T17:03:05.519588Z", "url": "https://files.pythonhosted.org/packages/3b/73/1b685beb4ebb6406ebb96660611ebba2048f27cab7bcceac3be71a664806/skydroppy-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "57893238eaabc65ef4d83100971838fe", "sha256": "0dc23b0ee90b4ca7ddd141156c6863591e1388d876d5c26066fc93c78661d3da"}, "downloads": -1, "filename": "skydroppy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "57893238eaabc65ef4d83100971838fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6465, "upload_time": "2020-04-11T17:03:07", "upload_time_iso_8601": "2020-04-11T17:03:07.715889Z", "url": "https://files.pythonhosted.org/packages/60/33/ab34987eb65ceb5f100a6c8c32b3e8344a51ba90b513ebba9f7bc43cc0b8/skydroppy-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "57288531ee3c991286d73e6a07315fe1", "sha256": "9e98eec454dde7bb52f635a101b901b8e48968172e422eb96b1040030a3e0cd0"}, "downloads": -1, "filename": "skydroppy-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "57288531ee3c991286d73e6a07315fe1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6019, "upload_time": "2020-04-15T06:37:22", "upload_time_iso_8601": "2020-04-15T06:37:22.405868Z", "url": "https://files.pythonhosted.org/packages/78/6a/0db98309ba7b14876813d3c53e189d542d0deb3a56e61b6387e543a47f77/skydroppy-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5aebbf37afaaa71cabae05334f9820d4", "sha256": "a73fc43fd975b98f58014dadfaf1b092668924dbb16d7b957548ae4a8ff7ab19"}, "downloads": -1, "filename": "skydroppy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5aebbf37afaaa71cabae05334f9820d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6462, "upload_time": "2020-04-15T06:37:23", "upload_time_iso_8601": "2020-04-15T06:37:23.862342Z", "url": "https://files.pythonhosted.org/packages/cc/db/9a1cb1ceeb5809e7f05767bc940f5db0cec9579ccaf02a2262676c10d0d4/skydroppy-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "37f35518f34b0884d741b49ee3e4aa8c", "sha256": "e728f44178e5ff8b68ba26822ec05793cab3ab3c506f43e8d863804b7dae948c"}, "downloads": -1, "filename": "skydroppy-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "37f35518f34b0884d741b49ee3e4aa8c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6045, "upload_time": "2020-04-17T16:46:19", "upload_time_iso_8601": "2020-04-17T16:46:19.501535Z", "url": "https://files.pythonhosted.org/packages/59/9d/51053c4ccb165bfd61c8ddd2a978a4d7b4ee6cd9d959372ac5d96dd901e8/skydroppy-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c0bcb582f702e18b689b21bdb9bdf2d", "sha256": "aaa611c6a35c578e8379db88eea75621be44cc44d3c757f61fd31ef4190002fc"}, "downloads": -1, "filename": "skydroppy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "2c0bcb582f702e18b689b21bdb9bdf2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6487, "upload_time": "2020-04-17T16:46:22", "upload_time_iso_8601": "2020-04-17T16:46:22.026565Z", "url": "https://files.pythonhosted.org/packages/81/0d/85e633412fbf0db3a8c49b12a9ef87b21838890b956b375cfcf50af38cac/skydroppy-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "37f35518f34b0884d741b49ee3e4aa8c", "sha256": "e728f44178e5ff8b68ba26822ec05793cab3ab3c506f43e8d863804b7dae948c"}, "downloads": -1, "filename": "skydroppy-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "37f35518f34b0884d741b49ee3e4aa8c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6045, "upload_time": "2020-04-17T16:46:19", "upload_time_iso_8601": "2020-04-17T16:46:19.501535Z", "url": "https://files.pythonhosted.org/packages/59/9d/51053c4ccb165bfd61c8ddd2a978a4d7b4ee6cd9d959372ac5d96dd901e8/skydroppy-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c0bcb582f702e18b689b21bdb9bdf2d", "sha256": "aaa611c6a35c578e8379db88eea75621be44cc44d3c757f61fd31ef4190002fc"}, "downloads": -1, "filename": "skydroppy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "2c0bcb582f702e18b689b21bdb9bdf2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6487, "upload_time": "2020-04-17T16:46:22", "upload_time_iso_8601": "2020-04-17T16:46:22.026565Z", "url": "https://files.pythonhosted.org/packages/81/0d/85e633412fbf0db3a8c49b12a9ef87b21838890b956b375cfcf50af38cac/skydroppy-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:48 2020"}