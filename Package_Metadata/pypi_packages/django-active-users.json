{"info": {"author": "Nikita Ekaterinchuk", "author_email": "en.elloco@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "MONITORING OF DJANGO ACTIVE USERS\n=================================\n\n.. image:: https://img.shields.io/pypi/v/django-active-users.svg\n    :target: https://pypi.python.org/pypi/django-active-users\n\n.. image:: https://github.com/n-elloco/django-active-users/workflows/Tests/badge.svg?branch=master\n    :target: https://github.com/n-elloco/django-active-users/actions?query=workflow%3A%22Tests%22\n\n.. image:: https://img.shields.io/travis/n-elloco/django-active-users/master.svg?label=Python%203.4%20tests&logo=travis\n    :target: https://travis-ci.org/n-elloco/django-active-users\n\n\n*Online monitoring of active users in Django using Redis*\n\nCollecting information about active users in the Django application\nfor last specified time interval, using Redis cache.\n\n\nRequirements\n------------\n\n- Python: 2.7, 3.4, 3.5, 3.6, 3.7, 3.8\n- Django: 1.7+\n- Django-redis: 4.9.0\n                4.11.0 (for Django 3.0+)\n\n\nInstall\n-------\n\n.. code-block:: bash\n\n    pip install django-active-users\n\n\nSetup\n-----\n\nYour django application should have a Redis cache setting.\nSee more in ``django-redis`` `official documentation <http://niwinz.github.io/django-redis/latest/#_configure_as_cache_backend>`_. \n\nAdd ``active_users.middleware.ActiveUsersSessionMiddleware`` to your project's\n``MIDDLEWARE`` after the ``AuthenticationMiddleware``.\n\n.. code-block:: python\n\n    MIDDLEWARE = (\n        ...\n        'django.contrib.auth.middleware.AuthenticationMiddleware',\n        'active_users.middleware.ActiveUsersSessionMiddleware',\n        ...\n    )\n\nFor applications with Django version earlier than 1.10 use ``MIDDLEWARE_CLASSES`` option\n\n.. code-block:: python\n\n    MIDDLEWARE_CLASSES = (\n        ...\n        'django.contrib.auth.middleware.AuthenticationMiddleware',\n        'active_users.middleware.ActiveUsersSessionMiddleware',\n        ...\n    )\n\n\nSettings\n--------\n\n``ACTIVE_USERS_KEY_EXPIRE`` - Time of key expire (interval after the last request during which the visitor is considered active) in seconds. Default is 20.\n\n``ACTIVE_USERS_EXCLUDE_URL_PATTERNS`` - List of regular expressions for excluded URLs. If they are matched, the visitor (and pageview) key will not be create.\n\n``ACTIVE_USERS_KEY_CLASS`` - Class of visitor key entry. It should be a descendant of ``active_users.keys.AbstractActiveUserEntry``.\nDefault ``active_users.keys.ActiveUserEntry``. See more in `Custom dimensions in the keys`_\n\n\nAPI\n---\n\nYou can use API for getting information about active users.\nYou can also call methods from ``active_users.api`` module directly.\n\n**Methods:**\n\n- ``get_active_users_count`` - returns count of active users (users, who visited site for the last time interval,\n  which is set by option ``ACTIVE_USERS_KEY_EXPIRE``)\n\n- ``get_active_users`` - returns list of dictionaries with information about active users;\n  keys of dictionaries are set from field ``fields`` of entry class, which is set by option ``ACTIVE_USERS_KEY_CLASS``\n\n\nAlso, you can include special view in your Django application, adding the URL pattern to your ``urls.py`` file\n\n\n.. code-block:: python\n\n    urlpatterns = [\n        ...\n        url(r'^active-users/', include('active_users.api.urls')),\n        ...\n    ]\n\n\nCustom dimensions in the keys\n-----------------------------\n\nBy default, 4 dimensions are saved in the keys (``user_id``, ``session_id``, ``IP``, ``username``).\nThis is provided by class ``ActiveUserEntry``, which inherits from abstract class ``AbstractActiveUserEntry``.\nYou can use your dimensions, defined in your own class, which should be a descendant of class ``AbstractActiveUserEntry`` and\nyou need to define the logic of using these dimensions in the class method ``create_from_request``.\n\nFor example, we need to save information about service, which makes request, and this information we can take\nfrom request header. Also, we want use all dimensions from class ``ActiveUserEntry``.\n\n\n.. code-block:: python\n\n    from active_users.keys import ActiveUserEntry\n\n    class OurActiveUserEntry(ActiveUserEntry):\n\n        fields = ('service_id',) + ActiveUserEntry.fields\n\n        @classmethod\n        def create_from_request(cls, request):\n            instance = super(OurActiveUserEntry, cls).create_from_request(request)\n            instance.app_id = request.META.get('HTTP_SERVICE_ID', u'')\n            return instance\n\n\nAt the end, we need to specify option ``ACTIVE_USERS_KEY_CLASS`` in the ``settings.py``.\n\n\n.. code-block:: python\n\n    ACTIVE_USERS_KEY_CLASS = 'my_app.keys.OurActiveUserEntry'\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/n-elloco/django-active-users", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-active-users", "package_url": "https://pypi.org/project/django-active-users/", "platform": "", "project_url": "https://pypi.org/project/django-active-users/", "project_urls": {"Homepage": "https://github.com/n-elloco/django-active-users"}, "release_url": "https://pypi.org/project/django-active-users/0.3.0/", "requires_dist": ["django (>=1.5)", "django-redis (>=4.9.0)", "six"], "requires_python": "", "summary": "Monitoring of active users in Django using Redis", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/django-active-users\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/django-active-users.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fda075912b8f45833ffb2c32137d23e8d2fb636c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d6163746976652d75736572732e737667\"></a>\n<a href=\"https://github.com/n-elloco/django-active-users/actions?query=workflow%3A%22Tests%22\" rel=\"nofollow\"><img alt=\"https://github.com/n-elloco/django-active-users/workflows/Tests/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7fe6cea3f9e2216e0472a3c6f31f790faee72b69/68747470733a2f2f6769746875622e636f6d2f6e2d656c6c6f636f2f646a616e676f2d6163746976652d75736572732f776f726b666c6f77732f54657374732f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://travis-ci.org/n-elloco/django-active-users\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/n-elloco/django-active-users/master.svg?label=Python%203.4%20tests&amp;logo=travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8a563e40ae100f4acdb40d23d19c840381e3eef3/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6e2d656c6c6f636f2f646a616e676f2d6163746976652d75736572732f6d61737465722e7376673f6c6162656c3d507974686f6e253230332e342532307465737473266c6f676f3d747261766973\"></a>\n<p><em>Online monitoring of active users in Django using Redis</em></p>\n<p>Collecting information about active users in the Django application\nfor last specified time interval, using Redis cache.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python: 2.7, 3.4, 3.5, 3.6, 3.7, 3.8</li>\n<li>Django: 1.7+</li>\n<li><dl>\n<dt>Django-redis: 4.9.0</dt>\n<dd>4.11.0 (for Django 3.0+)</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip install django-active-users\n</pre>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>Your django application should have a Redis cache setting.\nSee more in <tt><span class=\"pre\">django-redis</span></tt> <a href=\"http://niwinz.github.io/django-redis/latest/#_configure_as_cache_backend\" rel=\"nofollow\">official documentation</a>.</p>\n<p>Add <tt>active_users.middleware.ActiveUsersSessionMiddleware</tt> to your project\u2019s\n<tt>MIDDLEWARE</tt> after the <tt>AuthenticationMiddleware</tt>.</p>\n<pre><span class=\"n\">MIDDLEWARE</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django.contrib.auth.middleware.AuthenticationMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'active_users.middleware.ActiveUsersSessionMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n<p>For applications with Django version earlier than 1.10 use <tt>MIDDLEWARE_CLASSES</tt> option</p>\n<pre><span class=\"n\">MIDDLEWARE_CLASSES</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django.contrib.auth.middleware.AuthenticationMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'active_users.middleware.ActiveUsersSessionMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p><tt>ACTIVE_USERS_KEY_EXPIRE</tt> - Time of key expire (interval after the last request during which the visitor is considered active) in seconds. Default is 20.</p>\n<p><tt>ACTIVE_USERS_EXCLUDE_URL_PATTERNS</tt> - List of regular expressions for excluded URLs. If they are matched, the visitor (and pageview) key will not be create.</p>\n<p><tt>ACTIVE_USERS_KEY_CLASS</tt> - Class of visitor key entry. It should be a descendant of <tt>active_users.keys.AbstractActiveUserEntry</tt>.\nDefault <tt>active_users.keys.ActiveUserEntry</tt>. See more in <a href=\"#custom-dimensions-in-the-keys\" rel=\"nofollow\">Custom dimensions in the keys</a></p>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n<p>You can use API for getting information about active users.\nYou can also call methods from <tt>active_users.api</tt> module directly.</p>\n<p><strong>Methods:</strong></p>\n<ul>\n<li><tt>get_active_users_count</tt> - returns count of active users (users, who visited site for the last time interval,\nwhich is set by option <tt>ACTIVE_USERS_KEY_EXPIRE</tt>)</li>\n<li><tt>get_active_users</tt> - returns list of dictionaries with information about active users;\nkeys of dictionaries are set from field <tt>fields</tt> of entry class, which is set by option <tt>ACTIVE_USERS_KEY_CLASS</tt></li>\n</ul>\n<p>Also, you can include special view in your Django application, adding the URL pattern to your <tt>urls.py</tt> file</p>\n<pre><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^active-users/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'active_users.api.urls'</span><span class=\"p\">)),</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"custom-dimensions-in-the-keys\">\n<h2>Custom dimensions in the keys</h2>\n<p>By default, 4 dimensions are saved in the keys (<tt>user_id</tt>, <tt>session_id</tt>, <tt>IP</tt>, <tt>username</tt>).\nThis is provided by class <tt>ActiveUserEntry</tt>, which inherits from abstract class <tt>AbstractActiveUserEntry</tt>.\nYou can use your dimensions, defined in your own class, which should be a descendant of class <tt>AbstractActiveUserEntry</tt> and\nyou need to define the logic of using these dimensions in the class method <tt>create_from_request</tt>.</p>\n<p>For example, we need to save information about service, which makes request, and this information we can take\nfrom request header. Also, we want use all dimensions from class <tt>ActiveUserEntry</tt>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">active_users.keys</span> <span class=\"kn\">import</span> <span class=\"n\">ActiveUserEntry</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">OurActiveUserEntry</span><span class=\"p\">(</span><span class=\"n\">ActiveUserEntry</span><span class=\"p\">):</span>\n\n    <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'service_id'</span><span class=\"p\">,)</span> <span class=\"o\">+</span> <span class=\"n\">ActiveUserEntry</span><span class=\"o\">.</span><span class=\"n\">fields</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_from_request</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">OurActiveUserEntry</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">create_from_request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n        <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">app_id</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">META</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'HTTP_SERVICE_ID'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">instance</span>\n</pre>\n<p>At the end, we need to specify option <tt>ACTIVE_USERS_KEY_CLASS</tt> in the <tt>settings.py</tt>.</p>\n<pre><span class=\"n\">ACTIVE_USERS_KEY_CLASS</span> <span class=\"o\">=</span> <span class=\"s1\">'my_app.keys.OurActiveUserEntry'</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6307543, "releases": {"0.0.1": [], "0.0.1.1": [{"comment_text": "", "digests": {"md5": "a4df76d1dfd70b12e61947bb8ff98b04", "sha256": "ef7f4c2100d3ac39b108df839f351e91f33a98aa26b579ff3cf7be7b7b99b760"}, "downloads": -1, "filename": "django-active-users-0.0.1.1.tar.gz", "has_sig": false, "md5_digest": "a4df76d1dfd70b12e61947bb8ff98b04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3816, "upload_time": "2016-03-04T04:36:36", "upload_time_iso_8601": "2016-03-04T04:36:36.897559Z", "url": "https://files.pythonhosted.org/packages/ef/4d/6c2a53559b7399504948d67fa445e426520c17178694c0982fe37026eb58/django-active-users-0.0.1.1.tar.gz", "yanked": false}], "0.0.1.2": [{"comment_text": "", "digests": {"md5": "ee8440f8a3414bb10a1fe58e087a3513", "sha256": "9c83bbc82bd0fb18bd71e463ffcebf9e45ef14897789e44aec48148155543d20"}, "downloads": -1, "filename": "django-active-users-0.0.1.2.tar.gz", "has_sig": false, "md5_digest": "ee8440f8a3414bb10a1fe58e087a3513", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3915, "upload_time": "2016-03-10T10:05:09", "upload_time_iso_8601": "2016-03-10T10:05:09.248870Z", "url": "https://files.pythonhosted.org/packages/7d/c1/233e21c954ddc72eb0a60b3fa1e5d2ac65f98277bdc4d018f739d1117995/django-active-users-0.0.1.2.tar.gz", "yanked": false}], "0.0.1.3": [{"comment_text": "", "digests": {"md5": "d1f63eaa06d2d7081035f2b4e599e028", "sha256": "9af2fcba14f369bbc68790917398e8c6dced7ff8ddedfa34e8699b6ae9f4f70d"}, "downloads": -1, "filename": "django-active-users-0.0.1.3.tar.gz", "has_sig": false, "md5_digest": "d1f63eaa06d2d7081035f2b4e599e028", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3933, "upload_time": "2016-04-12T05:58:53", "upload_time_iso_8601": "2016-04-12T05:58:53.113827Z", "url": "https://files.pythonhosted.org/packages/27/f3/91476ebb0d3d731a71158d44993183390206e8608e2fb3636257fd427ee0/django-active-users-0.0.1.3.tar.gz", "yanked": false}], "0.0.1.4": [{"comment_text": "", "digests": {"md5": "250971ff4802b4ed52dd8a024d0d26cd", "sha256": "e526c5b8989d3fde5979b55d30a2c7a439978fc06281ad50e2abee33807776e4"}, "downloads": -1, "filename": "django_active_users-0.0.1.4-py2.7.egg", "has_sig": false, "md5_digest": "250971ff4802b4ed52dd8a024d0d26cd", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 7288, "upload_time": "2016-09-23T04:28:20", "upload_time_iso_8601": "2016-09-23T04:28:20.523128Z", "url": "https://files.pythonhosted.org/packages/db/bd/aaca2856751d932ac488cf120f8b6b291be4d3fa3c92c0c14926e4446e2d/django_active_users-0.0.1.4-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a8b137283b80bc457f3df8f1f82b296", "sha256": "bcd03f41968170ae59b217b0de92c5faca529e63016e72c21f7832abcf27153b"}, "downloads": -1, "filename": "django_active_users-0.0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9a8b137283b80bc457f3df8f1f82b296", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4679, "upload_time": "2016-09-23T04:28:18", "upload_time_iso_8601": "2016-09-23T04:28:18.008357Z", "url": "https://files.pythonhosted.org/packages/91/ce/2a1ad82748d532a9b8621a70c5e58d13420f93aab8306c97090ed1ff86b1/django_active_users-0.0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cfb6870c9d72cdd46c1ea928daadfadd", "sha256": "8ca722d6cdb4a6495f633b87e2078738b03e2ea4b5aba54641500d3268c2c6d9"}, "downloads": -1, "filename": "django-active-users-0.0.1.4.tar.gz", "has_sig": false, "md5_digest": "cfb6870c9d72cdd46c1ea928daadfadd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3217, "upload_time": "2016-09-23T04:28:22", "upload_time_iso_8601": "2016-09-23T04:28:22.871801Z", "url": "https://files.pythonhosted.org/packages/83/30/8cdeeb3b29f39172bd338abd9ebdf8983f0302633f1b7b8a586a2bd50928/django-active-users-0.0.1.4.tar.gz", "yanked": false}], "0.1": [{"comment_text": "", "digests": {"md5": "4bbee27beadf7285c629580451598186", "sha256": "d2eddc4e5cc1498e5a47960e320f75230b9d668cf1f9723ae2dfaf6afcb2b9f6"}, "downloads": -1, "filename": "django-active-users-0.1.tar.gz", "has_sig": false, "md5_digest": "4bbee27beadf7285c629580451598186", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5622, "upload_time": "2016-10-03T04:43:31", "upload_time_iso_8601": "2016-10-03T04:43:31.213525Z", "url": "https://files.pythonhosted.org/packages/ed/1f/d69613e3a591ae585521589eb09686c85f737e1332cc23bc651fb5c0086b/django-active-users-0.1.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "e4251f76f99fb830cf627cc12238326f", "sha256": "2f9eacfc0d9764771cb54662311ace89a429c95fba006da99bc847f00c405f32"}, "downloads": -1, "filename": "django_active_users-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e4251f76f99fb830cf627cc12238326f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9010, "upload_time": "2018-05-07T15:43:57", "upload_time_iso_8601": "2018-05-07T15:43:57.386872Z", "url": "https://files.pythonhosted.org/packages/0e/d6/ffdf60c3edf591e9f4230a61a02e1f5386c38f1c271b9b02e46e33d8e735/django_active_users-0.2.1-py2.py3-none-any.whl", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "9591df39a1a14c24e4412d5b1b3ef069", "sha256": "68fd1331c074cd15f0a2a2720e149746f2212aa2470cf9d97701ba808e5ed06b"}, "downloads": -1, "filename": "django_active_users-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9591df39a1a14c24e4412d5b1b3ef069", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6480, "upload_time": "2018-05-14T20:57:44", "upload_time_iso_8601": "2018-05-14T20:57:44.693612Z", "url": "https://files.pythonhosted.org/packages/7d/7b/5ff91f1640eaedccd3c468381e698cd8032e22c94d14882c9669dc82884e/django_active_users-0.2.2-py2.py3-none-any.whl", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "67bb7f236daf98d9c1ea56df6785fbf1", "sha256": "1bd620a29362c330e660777fa3198ec8a360238826ca0d9220503bf12efccc6a"}, "downloads": -1, "filename": "django_active_users-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "67bb7f236daf98d9c1ea56df6785fbf1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7398, "upload_time": "2019-12-15T20:14:02", "upload_time_iso_8601": "2019-12-15T20:14:02.432811Z", "url": "https://files.pythonhosted.org/packages/82/ee/7326c80d9ba96a35ccd52af5522f99fe86575d0953334cf7df68b24b2b7e/django_active_users-0.3.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "67bb7f236daf98d9c1ea56df6785fbf1", "sha256": "1bd620a29362c330e660777fa3198ec8a360238826ca0d9220503bf12efccc6a"}, "downloads": -1, "filename": "django_active_users-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "67bb7f236daf98d9c1ea56df6785fbf1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7398, "upload_time": "2019-12-15T20:14:02", "upload_time_iso_8601": "2019-12-15T20:14:02.432811Z", "url": "https://files.pythonhosted.org/packages/82/ee/7326c80d9ba96a35ccd52af5522f99fe86575d0953334cf7df68b24b2b7e/django_active_users-0.3.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:37:52 2020"}