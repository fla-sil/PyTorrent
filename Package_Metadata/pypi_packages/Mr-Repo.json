{"info": {"author": "Ryan McGowan", "author_email": "ryan@ryanmcg.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python", "Programming Language :: Python :: 2"], "description": "========\nMr. Repo\n========\n-------------------------------\nA simple repo management system\n-------------------------------\n\n:Author: Ryan McGowan\n:Email: ryan@ryanmcg.com\n\nIntroduction\n------------\n\nMr. Repo is a repo management script written in python. It's very simple.\nBasically, it turns whatever directory *Mr. Repo* is initialized into a\nconfigurable repository of Git repositories. It creates two files to keep track\nof its state.\n\n *  A YAML file (``.mr_repo.yml``) which keeps extended information on\n    repositories that may appear in the directory\n *  Another file, (``.this_repo``) file keeps track of what repositories are\n    currently available in the directory\n\n...but why?\n~~~~~~~~~~~\n\nI have have a repo folder on several of my computers. This folder contains\nmostly Git repositories that I want to be available on multiple computers. I use\nDropbox to sync lots of files between my computers, but not the repo folder for\nseveral reasons. However, I still want to manage what I have in my repo folders\nacross my computers. So, I'll be syncing the ``.mr_repo.yml`` file with Dropbox\nand letting *Mr. Repo* do the rest of the work.\n\nRunning Mr. Repo / Installation\n-------------------------------\n\nMr. Repo is available via pip. ::\n\n    pip install Mr-Repo\n\nTo install Mr. Repo from source: ::\n\n    git clone git://github.com/RyanMcG/Mr-Repo.git\n    cd Mr-Repo\n    python setup.py install\n\nIf you want to run Mr. Repo from source you need to manually get the\ndependencies first. ::\n\n    # Assuming you are already in the Mr-Repo directory\n    pip install -r requirements.txt\n    pip install -r dev-requirements.txt # Optional\n    ./mr\n\nUsage\n-----\n\nRun the ``init`` command to get to set up the two files by automatically\ninterpreting subdirectories. ::\n\n    mr_repo init [--clean]\n\nThe ``--clean`` option causes the ``init`` command create blank tracking files and to not automatically interpret subdirectories.\n\nOnce you have the files setup you can add and remove repos by their directory\nnames with the add and remove commands. ::\n\n    mr_repo add <repo/direcotry name>\n    # Or to remove a repo\n    mr_repo rm <repo/direcotry name>\n\nYou can also automatically reinterpret the current directory with the ``update``\ncommand. ::\n\n    mr_repo update\n\nThat's all the boring stuff. The part of *Mr. Repo* that's actually useful is\nits ability to pull repos you've added from other places, but aren't available\nin your current directory.\n\nTo determine what repos you have just use the ``list`` command. By default the\nlist command outputs a list of currently available repos. Using the ``-a`` flag\nalso displays information about unavailable repos (i.e. repos that are not\ncurrently set up in the CWD). As you might expect the ``-n`` flag can be used to\ndisplay repos that are not currently available. ::\n\n    mr_repo list [-a | --all] [-n | --not-available]\n\nOnce you know what repos are or are not currently available you can\n``get``/``unget`` them. ::\n\n    mr_repo get <not currently available repo name>\n    mr_repo unget [-f | --force] <currently available repo name>\n\nThe ``unget`` command removes the repo if all changes have been fully committed\nand also updates the ``.this_repo`` file. In the case where a there are uncommitted\nchanges an error is thrown and the command fails. If the user wants to remove it\nanyways then the user can add the ``-f`` flag to force the removal.\n\nTO DO\n~~~~~\n\n*   Update this file.\n*   Add depth parameter to ``update`` to enable configuration of max depth.\n*   Add ``--force`` option to ``update``. Forces update of configuration instead\n    of ignoring existing.\n*   Change ``--current-only`` to ``--controlled``. This option should only\n    update (add to ``.this_repo``) repositories already referenced in\n    ``.mr_repo.yml``.\n*   Print debugging/process information when ``--verbose`` option is present.\n*   Support adding/removing/getting/ungetting multiple repositories at once.\n*   Create a MrRepoRepo wrapper class for use in MrRepo instead of calling\n    git.Repo directly\n    *   Support the following formats: Git (done), Hg, MrRepo, Folder", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/Mr-Repo/0.2.10", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "Mr-Repo", "package_url": "https://pypi.org/project/Mr-Repo/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Mr-Repo/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/Mr-Repo/0.2.10"}, "release_url": "https://pypi.org/project/Mr-Repo/0.2.10/", "requires_dist": null, "requires_python": null, "summary": "Mr. Repo - A simple repo management system", "version": "0.2.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Author:</th>\n<td>Ryan McGowan</td></tr>\n<tr><th>Email:</th><td><a href=\"mailto:ryan%40ryanmcg.com\">ryan<span>@</span>ryanmcg<span>.</span>com</a></td>\n</tr>\n</tbody>\n</table>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Mr. Repo is a repo management script written in python. It\u2019s very simple.\nBasically, it turns whatever directory <em>Mr. Repo</em> is initialized into a\nconfigurable repository of Git repositories. It creates two files to keep track\nof its state.</p>\n<blockquote>\n<ul>\n<li>A YAML file (<tt>.mr_repo.yml</tt>) which keeps extended information on\nrepositories that may appear in the directory</li>\n<li>Another file, (<tt>.this_repo</tt>) file keeps track of what repositories are\ncurrently available in the directory</li>\n</ul>\n</blockquote>\n<div id=\"but-why\">\n<h3>\u2026but why?</h3>\n<p>I have have a repo folder on several of my computers. This folder contains\nmostly Git repositories that I want to be available on multiple computers. I use\nDropbox to sync lots of files between my computers, but not the repo folder for\nseveral reasons. However, I still want to manage what I have in my repo folders\nacross my computers. So, I\u2019ll be syncing the <tt>.mr_repo.yml</tt> file with Dropbox\nand letting <em>Mr. Repo</em> do the rest of the work.</p>\n</div>\n</div>\n<div id=\"running-mr-repo-installation\">\n<h2>Running Mr. Repo / Installation</h2>\n<p>Mr. Repo is available via pip.</p>\n<pre>pip install Mr-Repo\n</pre>\n<p>To install Mr. Repo from source:</p>\n<pre>git clone git://github.com/RyanMcG/Mr-Repo.git\ncd Mr-Repo\npython setup.py install\n</pre>\n<p>If you want to run Mr. Repo from source you need to manually get the\ndependencies first.</p>\n<pre># Assuming you are already in the Mr-Repo directory\npip install -r requirements.txt\npip install -r dev-requirements.txt # Optional\n./mr\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Run the <tt>init</tt> command to get to set up the two files by automatically\ninterpreting subdirectories.</p>\n<pre>mr_repo init [--clean]\n</pre>\n<p>The <tt><span class=\"pre\">--clean</span></tt> option causes the <tt>init</tt> command create blank tracking files and to not automatically interpret subdirectories.</p>\n<p>Once you have the files setup you can add and remove repos by their directory\nnames with the add and remove commands.</p>\n<pre>mr_repo add &lt;repo/direcotry name&gt;\n# Or to remove a repo\nmr_repo rm &lt;repo/direcotry name&gt;\n</pre>\n<p>You can also automatically reinterpret the current directory with the <tt>update</tt>\ncommand.</p>\n<pre>mr_repo update\n</pre>\n<p>That\u2019s all the boring stuff. The part of <em>Mr. Repo</em> that\u2019s actually useful is\nits ability to pull repos you\u2019ve added from other places, but aren\u2019t available\nin your current directory.</p>\n<p>To determine what repos you have just use the <tt>list</tt> command. By default the\nlist command outputs a list of currently available repos. Using the <tt><span class=\"pre\">-a</span></tt> flag\nalso displays information about unavailable repos (i.e. repos that are not\ncurrently set up in the CWD). As you might expect the <tt><span class=\"pre\">-n</span></tt> flag can be used to\ndisplay repos that are not currently available.</p>\n<pre>mr_repo list [-a | --all] [-n | --not-available]\n</pre>\n<p>Once you know what repos are or are not currently available you can\n<tt>get</tt>/<tt>unget</tt> them.</p>\n<pre>mr_repo get &lt;not currently available repo name&gt;\nmr_repo unget [-f | --force] &lt;currently available repo name&gt;\n</pre>\n<p>The <tt>unget</tt> command removes the repo if all changes have been fully committed\nand also updates the <tt>.this_repo</tt> file. In the case where a there are uncommitted\nchanges an error is thrown and the command fails. If the user wants to remove it\nanyways then the user can add the <tt><span class=\"pre\">-f</span></tt> flag to force the removal.</p>\n<div id=\"to-do\">\n<h3>TO DO</h3>\n<ul>\n<li>Update this file.</li>\n<li>Add depth parameter to <tt>update</tt> to enable configuration of max depth.</li>\n<li>Add <tt><span class=\"pre\">--force</span></tt> option to <tt>update</tt>. Forces update of configuration instead\nof ignoring existing.</li>\n<li>Change <tt><span class=\"pre\">--current-only</span></tt> to <tt><span class=\"pre\">--controlled</span></tt>. This option should only\nupdate (add to <tt>.this_repo</tt>) repositories already referenced in\n<tt>.mr_repo.yml</tt>.</li>\n<li>Print debugging/process information when <tt><span class=\"pre\">--verbose</span></tt> option is present.</li>\n<li>Support adding/removing/getting/ungetting multiple repositories at once.</li>\n<li>Create a MrRepoRepo wrapper class for use in MrRepo instead of calling\ngit.Repo directly\n*   Support the following formats: Git (done), Hg, MrRepo, Folder</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 784751, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "b2d81298bf55c154d6be6bc1d3917b5a", "sha256": "abb7deec2695c1e24fa1b8d6b52f3640dc4f1af79ea101222327eb539e28e52d"}, "downloads": -1, "filename": "Mr-Repo-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b2d81298bf55c154d6be6bc1d3917b5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6246, "upload_time": "2012-02-10T05:40:47", "upload_time_iso_8601": "2012-02-10T05:40:47.752653Z", "url": "https://files.pythonhosted.org/packages/56/d6/d518fb7f9331cc21399f5e6abd9235294be0b203a290ed06ec696e78fb5d/Mr-Repo-0.2.1.tar.gz", "yanked": false}], "0.2.10": [{"comment_text": "", "digests": {"md5": "876a6a3fc76e06fdcc2579a50ad15ffe", "sha256": "5ac0915e4dbc675f4bcd97bf5aa9a4afdaa17bda387115f865ba374c5f3a9ac7"}, "downloads": -1, "filename": "Mr-Repo-0.2.10.tar.gz", "has_sig": false, "md5_digest": "876a6a3fc76e06fdcc2579a50ad15ffe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10354, "upload_time": "2012-03-29T04:07:05", "upload_time_iso_8601": "2012-03-29T04:07:05.994265Z", "url": "https://files.pythonhosted.org/packages/08/44/3e137c5aaa3a257193ed7ed5d0febd9d68b9b30a9c13d38a29551492657c/Mr-Repo-0.2.10.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "1bc6720963b2fb43a68c13a3d32e8654", "sha256": "c92edf9f8965bb03444acb4647f04feca71635dc2dfc66688774417065e2c6c1"}, "downloads": -1, "filename": "Mr-Repo-0.2.2.tar.gz", "has_sig": false, "md5_digest": "1bc6720963b2fb43a68c13a3d32e8654", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6448, "upload_time": "2012-02-14T05:18:50", "upload_time_iso_8601": "2012-02-14T05:18:50.439992Z", "url": "https://files.pythonhosted.org/packages/5a/fe/a7c855cb6bd4402f1483be33da4417778340b8ad4a6e73fb633f21cb8c2a/Mr-Repo-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "baaa7cc216843f40b9846699dd10f07e", "sha256": "6b5b6c1137426b0a94dbf3049ce196a24bb8f11914ebc06c6a33121971c02c4d"}, "downloads": -1, "filename": "Mr-Repo-0.2.3.tar.gz", "has_sig": false, "md5_digest": "baaa7cc216843f40b9846699dd10f07e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6959, "upload_time": "2012-02-14T18:23:03", "upload_time_iso_8601": "2012-02-14T18:23:03.617916Z", "url": "https://files.pythonhosted.org/packages/09/d3/3ba6cc5f14b49aedfa55b9ca661cce5ebe891b1b7b2576c584139fc039ce/Mr-Repo-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "58a7f61efed4c24354d2dc29126a264b", "sha256": "1df54c8e0d0de13989d5f96938d8c8d4a695a4ef1cf1987ad22697dd6cdc966f"}, "downloads": -1, "filename": "Mr-Repo-0.2.4.tar.gz", "has_sig": false, "md5_digest": "58a7f61efed4c24354d2dc29126a264b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6997, "upload_time": "2012-02-17T08:09:10", "upload_time_iso_8601": "2012-02-17T08:09:10.513312Z", "url": "https://files.pythonhosted.org/packages/73/d8/a5b6c85a94bf7bf09ea12ca82e738893b6a884cf7327348f58c6f1f4d1d6/Mr-Repo-0.2.4.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "cd4bfc08462292ca837a5b0c4ddfdbda", "sha256": "59a982c09d7075c51416772ee093a053adafeb1b6e3081255ae4b07d7688d865"}, "downloads": -1, "filename": "Mr-Repo-0.2.6.tar.gz", "has_sig": false, "md5_digest": "cd4bfc08462292ca837a5b0c4ddfdbda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7039, "upload_time": "2012-02-17T09:52:43", "upload_time_iso_8601": "2012-02-17T09:52:43.574322Z", "url": "https://files.pythonhosted.org/packages/fc/d3/123a509a7b45a597946604e209ba3b14cebe5071b97c2714feeb93e86796/Mr-Repo-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "3ac704ce78623a741311ecc78ca8e85d", "sha256": "71814e59bc09cc93f50ab0964556a8361c4ffabe983c2895e3d4f700e3227e2c"}, "downloads": -1, "filename": "Mr-Repo-0.2.7.tar.gz", "has_sig": false, "md5_digest": "3ac704ce78623a741311ecc78ca8e85d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8712, "upload_time": "2012-03-03T05:09:21", "upload_time_iso_8601": "2012-03-03T05:09:21.634476Z", "url": "https://files.pythonhosted.org/packages/88/1e/1530374e0ceac8f7d95e1ed0dd8384f3311cb1f8792c3e513ce433ce4d05/Mr-Repo-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "a6f2dc8d5053afd9d97fcc6697317e0b", "sha256": "8a4c003bfeb4b8ca23d0b2306b16e3d44e4bc7845a28d4c1e14e239953ef13b1"}, "downloads": -1, "filename": "Mr-Repo-0.2.8.tar.gz", "has_sig": false, "md5_digest": "a6f2dc8d5053afd9d97fcc6697317e0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7667, "upload_time": "2012-03-17T02:31:54", "upload_time_iso_8601": "2012-03-17T02:31:54.886662Z", "url": "https://files.pythonhosted.org/packages/f4/83/4ba0f0c0b260ee2c152f53f4ef780569aa74d7bf057545ad2e2baeb61e34/Mr-Repo-0.2.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "876a6a3fc76e06fdcc2579a50ad15ffe", "sha256": "5ac0915e4dbc675f4bcd97bf5aa9a4afdaa17bda387115f865ba374c5f3a9ac7"}, "downloads": -1, "filename": "Mr-Repo-0.2.10.tar.gz", "has_sig": false, "md5_digest": "876a6a3fc76e06fdcc2579a50ad15ffe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10354, "upload_time": "2012-03-29T04:07:05", "upload_time_iso_8601": "2012-03-29T04:07:05.994265Z", "url": "https://files.pythonhosted.org/packages/08/44/3e137c5aaa3a257193ed7ed5d0febd9d68b9b30a9c13d38a29551492657c/Mr-Repo-0.2.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:58 2020"}