{"info": {"author": "Kaizen Dorks", "author_email": "kaizendorks@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.4", "Topic :: Database :: Database Engines/Servers", "Topic :: Software Development :: Testing", "Topic :: Utilities"], "description": "# pymongo_inmemory\nA mongo mocking library with an ephemeral MongoDB running in memory.\n\n## Usage\nInsert a new section to your project's `setup.cfg` for the operating system and\nmongo version you want to spin up:\n```ini\n[pymongo_inmemory]\nmongo_version = 4.0\noperating_system = osx\n```\n\nthen use the `pymongo_inmemory` client instead of original one:\n```python\nfrom pymongo_inmemory import MongoClient\n\nclient = MongoClient()  # No need to provide host\ndb = client['testdb']\ncollection = db['test-collection']\n# etc., etc.\nclient.close()\n\n# Also usable with context manager\nwith MongoClient() as client:\n    # do stuff\n```\n\n## Development\nProject is set up to develop with [Pipenv](https://github.com/pypa/pipenv).\n\nAfter installing Pipenv and cloning the repo, create the shell and install all\npackage requirements:\n\n```bash\n$> pipenv shell\n$> pipenv install --dev\n```\n\nCreate your own `setup.cfg` file from `setup.cfg-template`.\n\nRun the tests:\n```bash\n$> pytest\n```\n\nIf on NIX systems you can run further tests:\n```bash\n$> bash tests/integrity/test_integrity.sh\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kaizendorks/pymongo_inmemory", "keywords": "mongodb testing pymongo", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pymongo-inmemory", "package_url": "https://pypi.org/project/pymongo-inmemory/", "platform": "", "project_url": "https://pypi.org/project/pymongo-inmemory/", "project_urls": {"Bug Reports": "https://github.com/kaizendorks/pymongo_inmemory/issues", "Homepage": "https://github.com/kaizendorks/pymongo_inmemory", "Source": "https://github.com/kaizendorks/pymongo_inmemory"}, "release_url": "https://pypi.org/project/pymongo-inmemory/0.1.2/", "requires_dist": ["setuptools", "pymongo"], "requires_python": ">=3.4", "summary": "Pymongo Mocking Tool with in memory MongoDB running.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pymongo_inmemory</h1>\n<p>A mongo mocking library with an ephemeral MongoDB running in memory.</p>\n<h2>Usage</h2>\n<p>Insert a new section to your project's <code>setup.cfg</code> for the operating system and\nmongo version you want to spin up:</p>\n<pre><span class=\"k\">[pymongo_inmemory]</span>\n<span class=\"na\">mongo_version</span> <span class=\"o\">=</span> <span class=\"s\">4.0</span>\n<span class=\"na\">operating_system</span> <span class=\"o\">=</span> <span class=\"s\">osx</span>\n</pre>\n<p>then use the <code>pymongo_inmemory</code> client instead of original one:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymongo_inmemory</span> <span class=\"kn\">import</span> <span class=\"n\">MongoClient</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">MongoClient</span><span class=\"p\">()</span>  <span class=\"c1\"># No need to provide host</span>\n<span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"p\">[</span><span class=\"s1\">'testdb'</span><span class=\"p\">]</span>\n<span class=\"n\">collection</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"p\">[</span><span class=\"s1\">'test-collection'</span><span class=\"p\">]</span>\n<span class=\"c1\"># etc., etc.</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Also usable with context manager</span>\n<span class=\"k\">with</span> <span class=\"n\">MongoClient</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n    <span class=\"c1\"># do stuff</span>\n</pre>\n<h2>Development</h2>\n<p>Project is set up to develop with <a href=\"https://github.com/pypa/pipenv\" rel=\"nofollow\">Pipenv</a>.</p>\n<p>After installing Pipenv and cloning the repo, create the shell and install all\npackage requirements:</p>\n<pre>$&gt; pipenv shell\n$&gt; pipenv install --dev\n</pre>\n<p>Create your own <code>setup.cfg</code> file from <code>setup.cfg-template</code>.</p>\n<p>Run the tests:</p>\n<pre>$&gt; pytest\n</pre>\n<p>If on NIX systems you can run further tests:</p>\n<pre>$&gt; bash tests/integrity/test_integrity.sh\n</pre>\n\n          </div>"}, "last_serial": 6515064, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8446104a0e0f327da3896bf20bd0b5b8", "sha256": "222d72969cd4a3a77eb4631c13138b69b916f0e2d759909c5ff8d1fb4b58438f"}, "downloads": -1, "filename": "pymongo_inmemory-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8446104a0e0f327da3896bf20bd0b5b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7057, "upload_time": "2019-08-01T19:53:51", "upload_time_iso_8601": "2019-08-01T19:53:51.958777Z", "url": "https://files.pythonhosted.org/packages/ef/a6/d9550baa1988ce5c4ce77c020c264c6e92deabeaddf10cd76243e1f7c27b/pymongo_inmemory-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09e9e751a9759cb73464336ea4e241bb", "sha256": "077a486d8dfefc2ed66cc9524ca39c4cb25bcab8ade09ce5db6fcd8b79b12431"}, "downloads": -1, "filename": "pymongo_inmemory-0.1.0.tar.gz", "has_sig": false, "md5_digest": "09e9e751a9759cb73464336ea4e241bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5391, "upload_time": "2019-08-01T19:32:05", "upload_time_iso_8601": "2019-08-01T19:32:05.306615Z", "url": "https://files.pythonhosted.org/packages/8c/32/a5ef56bdcbd22ca56275f9efedc38ab5204db7f46d1381db4e61d6846d69/pymongo_inmemory-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "75651b0def5b97f9cc817d56b5fb70b3", "sha256": "947acb9ce49d092dadfc5cf7c6197f12b6e9d00bd39506928ab4bca171cc9e1e"}, "downloads": -1, "filename": "pymongo_inmemory-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "75651b0def5b97f9cc817d56b5fb70b3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 7727, "upload_time": "2019-08-01T19:53:53", "upload_time_iso_8601": "2019-08-01T19:53:53.614999Z", "url": "https://files.pythonhosted.org/packages/61/f5/cd11c907a2c61a9b1bfed7a2790c6328ebac6b377e14dd4b4acd8602789c/pymongo_inmemory-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ec4a2955db8e2d7187c34c34422fbaf", "sha256": "5f383193283e5d447ba7316f48260cf2a38465264aa4fd3939ea3ee95576fb04"}, "downloads": -1, "filename": "pymongo_inmemory-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5ec4a2955db8e2d7187c34c34422fbaf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 5794, "upload_time": "2019-08-01T19:53:56", "upload_time_iso_8601": "2019-08-01T19:53:56.066777Z", "url": "https://files.pythonhosted.org/packages/0c/09/5be2e7fdbd08004d2de62bdb25081f930adc8a9afe6b5c4568ac4bc2bc0f/pymongo_inmemory-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c09b4216d97e80e8344ba47def0056e7", "sha256": "c845ba33b58c5216e7c464b89651a46f076eac9a30a512fd2d675843e836a927"}, "downloads": -1, "filename": "pymongo_inmemory-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c09b4216d97e80e8344ba47def0056e7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 8532, "upload_time": "2020-01-24T17:49:49", "upload_time_iso_8601": "2020-01-24T17:49:49.678719Z", "url": "https://files.pythonhosted.org/packages/3d/3b/d829573d2ed2a9cc8116e5bd2a9b7d97b7d8b2cb67fd68bf183e7250913d/pymongo_inmemory-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1154454a7030ee3818d028ae5368c393", "sha256": "cd32d7e732e981337e9cb37a94e5cf729bdf24cc720d23104b608f0c2d376499"}, "downloads": -1, "filename": "pymongo_inmemory-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1154454a7030ee3818d028ae5368c393", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 6450, "upload_time": "2020-01-24T17:49:51", "upload_time_iso_8601": "2020-01-24T17:49:51.026570Z", "url": "https://files.pythonhosted.org/packages/f5/ea/2bd42157aba1123d18b8dadf9b793a88b591c4771692e47dcf876eb8df54/pymongo_inmemory-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c09b4216d97e80e8344ba47def0056e7", "sha256": "c845ba33b58c5216e7c464b89651a46f076eac9a30a512fd2d675843e836a927"}, "downloads": -1, "filename": "pymongo_inmemory-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c09b4216d97e80e8344ba47def0056e7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 8532, "upload_time": "2020-01-24T17:49:49", "upload_time_iso_8601": "2020-01-24T17:49:49.678719Z", "url": "https://files.pythonhosted.org/packages/3d/3b/d829573d2ed2a9cc8116e5bd2a9b7d97b7d8b2cb67fd68bf183e7250913d/pymongo_inmemory-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1154454a7030ee3818d028ae5368c393", "sha256": "cd32d7e732e981337e9cb37a94e5cf729bdf24cc720d23104b608f0c2d376499"}, "downloads": -1, "filename": "pymongo_inmemory-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1154454a7030ee3818d028ae5368c393", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 6450, "upload_time": "2020-01-24T17:49:51", "upload_time_iso_8601": "2020-01-24T17:49:51.026570Z", "url": "https://files.pythonhosted.org/packages/f5/ea/2bd42157aba1123d18b8dadf9b793a88b591c4771692e47dcf876eb8df54/pymongo_inmemory-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:47 2020"}