{"info": {"author": "Konstantin Korikov (original by James Pic)", "author_email": "lostclus@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "django-cities-tiny -- *Simple django-cities alternative*\n=========================================================\n\nThis add-on provides models and commands to import country/zone/city data into your\ndatabase.\nThe data is pulled from `GeoNames\n<http://www.geonames.org/>`_ and contains:\n\n  - country names\n  - administrative division zones\n  - city names\n\nSpatial query support is not required by this application.\n\nThis application is very simple and is useful if you want to make a simple\naddress book for example. If you intend to build a fully featured spatial\ndatabase, you should use\n`django-cities\n<https://github.com/coderholic/django-cities>`_.\n\nThis is a fork of django-cities-light by James Pic. The main difference of\ndjango-cities-tiny is:\n\n  - support for localized names (from alternateNames.txt)\n  - support for administrative division zones (from admin1CodesASCII.txt,\n    admin2Codes.txt, or from XX.txt)\n  - required Django 1.0+, Python 2.3+ and no other dependences\n\nInstallation\n------------\n\nInstall django-cities-tiny::\n\n    easy_install django-cities-tiny\n\nAdd `cities_tiny` to your `INSTALLED_APPS`.\n\nNow, run syncdb, it will create all required tables for models::\n\n    ./manage.py syncdb\n\nData update\n-----------\n\nFinnaly, populate your database with command::\n\n    ./manage.py citiestinyrefresh\n\nThis command is well documented, consult the help with::\n    \n    ./manage.py help citiestinyrefresh\n\nLimiting data to import\n---------------------\n\nIf you want to import only cities from France, USA and Belgium you could do as\nsuch in your settings.py::\n\n    CITIES_TINY_COUNTRIES = ('FR', 'US', 'BE')\n\nConfigure logging\n-----------------\n\nTo get output from citiestinyrefresh command simply pass the -v2 or or\n--verbosity=2 option. Also if you use Django 1.3+, you may configure logging\nsystem in your settings.py, simply configure a handler and formatter for\n`cities_tiny` logger. For example::\n\n    LOGGING = {\n        'version': 1,\n        'disable_existing_loggers': False,\n        'formatters': {\n            'simple': {\n                'format': '%(levelname)s %(message)s'\n            },\n        },\n        'handlers': {\n            'console':{\n                'level':'DEBUG',\n                'class':'logging.StreamHandler',\n                'formatter': 'simple'\n            },\n        },\n        'loggers': {\n            'cities_tiny': {\n                'handlers':['console'],\n                'propagate': True,\n                'level':'DEBUG',\n            },\n            # also use this one to see SQL queries\n            'django': {\n                'handlers':['console'],\n                'propagate': True,\n                'level':'DEBUG',\n            },\n        }\n    }", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://code.google.com/p/django-cities-tiny/", "keywords": "django cities countries", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-cities-tiny", "package_url": "https://pypi.org/project/django-cities-tiny/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-cities-tiny/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://code.google.com/p/django-cities-tiny/"}, "release_url": "https://pypi.org/project/django-cities-tiny/1.0/", "requires_dist": null, "requires_python": null, "summary": "Another simple alternative to django-cities", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            django-cities-tiny -- *Simple django-cities alternative*<br>=========================================================<br><br>This add-on provides models and commands to import country/zone/city data into your<br>database.<br>The data is pulled from `GeoNames<br>&lt;http://www.geonames.org/&gt;`_ and contains:<br><br>  - country names<br>  - administrative division zones<br>  - city names<br><br>Spatial query support is not required by this application.<br><br>This application is very simple and is useful if you want to make a simple<br>address book for example. If you intend to build a fully featured spatial<br>database, you should use<br>`django-cities<br>&lt;https://github.com/coderholic/django-cities&gt;`_.<br><br>This is a fork of django-cities-light by James Pic. The main difference of<br>django-cities-tiny is:<br><br>  - support for localized names (from alternateNames.txt)<br>  - support for administrative division zones (from admin1CodesASCII.txt,<br>    admin2Codes.txt, or from XX.txt)<br>  - required Django 1.0+, Python 2.3+ and no other dependences<br><br>Installation<br>------------<br><br>Install django-cities-tiny::<br><br>    easy_install django-cities-tiny<br><br>Add `cities_tiny` to your `INSTALLED_APPS`.<br><br>Now, run syncdb, it will create all required tables for models::<br><br>    ./manage.py syncdb<br><br>Data update<br>-----------<br><br>Finnaly, populate your database with command::<br><br>    ./manage.py citiestinyrefresh<br><br>This command is well documented, consult the help with::<br>    <br>    ./manage.py help citiestinyrefresh<br><br>Limiting data to import<br>---------------------<br><br>If you want to import only cities from France, USA and Belgium you could do as<br>such in your settings.py::<br><br>    CITIES_TINY_COUNTRIES = ('FR', 'US', 'BE')<br><br>Configure logging<br>-----------------<br><br>To get output from citiestinyrefresh command simply pass the -v2 or or<br>--verbosity=2 option. Also if you use Django 1.3+, you may configure logging<br>system in your settings.py, simply configure a handler and formatter for<br>`cities_tiny` logger. For example::<br><br>    LOGGING = {<br>        'version': 1,<br>        'disable_existing_loggers': False,<br>        'formatters': {<br>            'simple': {<br>                'format': '%(levelname)s %(message)s'<br>            },<br>        },<br>        'handlers': {<br>            'console':{<br>                'level':'DEBUG',<br>                'class':'logging.StreamHandler',<br>                'formatter': 'simple'<br>            },<br>        },<br>        'loggers': {<br>            'cities_tiny': {<br>                'handlers':['console'],<br>                'propagate': True,<br>                'level':'DEBUG',<br>            },<br>            # also use this one to see SQL queries<br>            'django': {<br>                'handlers':['console'],<br>                'propagate': True,<br>                'level':'DEBUG',<br>            },<br>        }<br>    }\n          </div>"}, "last_serial": 789291, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "ce892756930347eea32244aacd4449de", "sha256": "e88890dbdbe54162d1f6f1c9cb3ff62726e11fab6cb4b223ac10b10bfd263555"}, "downloads": -1, "filename": "django_cities_tiny-1.0-py2.6.egg", "has_sig": false, "md5_digest": "ce892756930347eea32244aacd4449de", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 23837, "upload_time": "2012-03-19T00:34:22", "upload_time_iso_8601": "2012-03-19T00:34:22.485727Z", "url": "https://files.pythonhosted.org/packages/fa/09/ba65eba216b88d25f5ff2869d2d4eaf5566995f4d29acecf71be67f2d711/django_cities_tiny-1.0-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a28d3a1864b9c3c1ac902fef266c392e", "sha256": "2e7dcdda55739c68bfee9a7b8b83cdb73a69d6c67c19ebf8a443084fa3db77d3"}, "downloads": -1, "filename": "django-cities-tiny-1.0.tar.gz", "has_sig": false, "md5_digest": "a28d3a1864b9c3c1ac902fef266c392e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11466, "upload_time": "2012-03-19T00:34:22", "upload_time_iso_8601": "2012-03-19T00:34:22.008169Z", "url": "https://files.pythonhosted.org/packages/be/dd/0d9ce30ccd19b3c138b86f42570e1bddc5d81e7ed36a75ea57f38f17584f/django-cities-tiny-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ce892756930347eea32244aacd4449de", "sha256": "e88890dbdbe54162d1f6f1c9cb3ff62726e11fab6cb4b223ac10b10bfd263555"}, "downloads": -1, "filename": "django_cities_tiny-1.0-py2.6.egg", "has_sig": false, "md5_digest": "ce892756930347eea32244aacd4449de", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 23837, "upload_time": "2012-03-19T00:34:22", "upload_time_iso_8601": "2012-03-19T00:34:22.485727Z", "url": "https://files.pythonhosted.org/packages/fa/09/ba65eba216b88d25f5ff2869d2d4eaf5566995f4d29acecf71be67f2d711/django_cities_tiny-1.0-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a28d3a1864b9c3c1ac902fef266c392e", "sha256": "2e7dcdda55739c68bfee9a7b8b83cdb73a69d6c67c19ebf8a443084fa3db77d3"}, "downloads": -1, "filename": "django-cities-tiny-1.0.tar.gz", "has_sig": false, "md5_digest": "a28d3a1864b9c3c1ac902fef266c392e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11466, "upload_time": "2012-03-19T00:34:22", "upload_time_iso_8601": "2012-03-19T00:34:22.008169Z", "url": "https://files.pythonhosted.org/packages/be/dd/0d9ce30ccd19b3c138b86f42570e1bddc5d81e7ed36a75ea57f38f17584f/django-cities-tiny-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:09 2020"}