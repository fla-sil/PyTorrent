{"info": {"author": "Brookhaven National Laboratory", "author_email": "DAMA@bnl.gov", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Natural Language :: English", "Programming Language :: Python :: 3"], "description": "==============\nsirepo-bluesky\n==============\n\n.. image:: https://img.shields.io/travis/NSLS-II/sirepo-bluesky.svg\n        :target: https://travis-ci.org/NSLS-II/sirepo-bluesky\n\n.. image:: https://img.shields.io/pypi/v/sirepo-bluesky.svg\n        :target: https://pypi.python.org/pypi/sirepo-bluesky\n\n\nSirepo-Bluesky interface\n\n* Free software: 3-clause BSD license\n* Documentation: https://NSLS-II.github.io/sirepo-bluesky.\n\nPurpose\n-------\n\nAn attempt to integrate Sirepo/SRW simulations with Bluesky/Ophyd.\n\nBased on this Sirepo simulation that can be downloaded in the next section:\n\n.. image:: https://github.com/NSLS-II/sirepo-bluesky/raw/master/images/basic_beamline.png\n\n\nPrepare a local Sirepo server\n-----------------------------\n\n-  Install Sirepo using Vagrant/VirtualBox following the `instructions`_\n   (you will need to install `VirtualBox`_ and `Vagrant`_)\n-  After the successful installation start the VM with ``vagrant up``\n   and ssh to it with ``vagrant ssh``\n-  Run the following command to start Sirepo with the Bluesky interface\n   (``bluesky`` is a \"secret\" key used on both server and client sides,\n   and the ``SIREPO_FEATURE_CONFIG_SIM_TYPES=srw`` part is optional if\n   you run Sirepo directly on a Linux/Mac machine and only have SRW\n   installed):\n\n.. code:: bash\n\n   SIREPO_FEATURE_CONFIG_SIM_TYPES=srw SIREPO_AUTH_METHODS=bluesky:guest SIREPO_AUTH_BLUESKY_SECRET=bluesky sirepo service http\n\n-  In your browser, go to http://10.10.10.10:8000/srw, click the\n   \"Import\" button in the right-upper corner and upload the\n   `archive`_ with the simulation stored in this repo\n-  You should be redirected to the address like\n   ``http://10.10.10.10:8000/srw#/source/IKROlKfR``\n-  Grab the last 8 alphanumeric symbols (``IKROlKfR``), which represent\n   a UID for the simulation we will be working with in the next section.\n\nYou can also consider running a Docker container:\n\n.. code:: bash\n\n   mkdir -p $HOME/tmp/sirepo-docker-run\n   docker run -it --rm -e SIREPO_AUTH_METHODS=bluesky:guest -e SIREPO_AUTH_BLUESKY_SECRET=bluesky -e SIREPO_SRDB_ROOT=/sirepo -e SIREPO_COOKIE_IS_SECURE=false -p 8000:8000 -v $HOME/tmp/sirepo-docker-run:/sirepo radiasoft/sirepo:beta /home/vagrant/.pyenv/shims/sirepo service http\n\n\nPrepare Bluesky and trigger a simulated Sirepo detector\n-------------------------------------------------------\n\n-  (OPTIONAL) Make sure you have `mongodb`_ installed and the service is\n   running (see `local.yml`_ for details)\n-  Create a conda environment:\n\n.. code:: bash\n\n   git clone https://github.com/NSLS-II/sirepo-bluesky/\n   cd sirepo-bluesky/\n   conda create -n sirepo_bluesky python=3.7 -y\n   conda activate sirepo_bluesky\n   pip install -e .\n\n-  Start ``ipython`` and run the following where ``sim_id`` is the\n   UID for the simulation we are working with:\n\n.. code:: py\n\n   %run -i examples/prepare_det_env.py\n   import sirepo_bluesky.sirepo_detector as sd\n   import bluesky.plans as bp\n   sirepo_det = sd.SirepoDetector(sim_id='<sim_id>', reg=db.reg)\n   sirepo_det.select_optic('Aperture')\n   param1 = sirepo_det.create_parameter('horizontalSize')\n   param2 = sirepo_det.create_parameter('verticalSize')\n   sirepo_det.read_attrs = ['image', 'mean', 'photon_energy']\n   sirepo_det.configuration_attrs = ['horizontal_extent',\n                                     'vertical_extent',\n                                     'shape']\n\n.. code:: py\n\n   RE(bp.grid_scan([sirepo_det],\n                   param1, 0, 1, 10,\n                   param2, 0, 1, 10,\n                   True))\n\nYou should get something like:\n\n.. image:: https://github.com/NSLS-II/sirepo-bluesky/raw/master/images/sirepo_bluesky_grid.png\n\n-  Get the data:\n\n.. code:: py\n\n   hdr = db[-1]\n   imgs = list(hdr.data('sirepo_det_image'))\n   cfg = hdr.config_data('sirepo_det')['primary'][0]\n   hor_ext = cfg['{}_horizontal_extent'.format(sirepo_det.name)]\n   vert_ext = cfg['{}_vertical_extent'.format(sirepo_det.name)]\n   plt.imshow(imgs[21], aspect='equal', extent=(*hor_ext, *vert_ext))\n\nYou should get something like:\n\n.. image:: https://github.com/NSLS-II/sirepo-bluesky/raw/master/images/sirepo_bluesky.png\n\nTo view single-electron spectrum report (**Hint:** use a different\n``sim_id``, e.g. for the NSLS-II CHX beamline example):\n\n.. code:: py\n\n   %run -i examples/prepare_det_env.py\n   import sirepo_bluesky.sirepo_detector as sd\n   import bluesky.plans as bp\n   sirepo_det = sd.SirepoDetector(sim_id='<sim_id>', reg=db.reg, source_simulation=True)\n   sirepo_det.read_attrs = ['image', 'mean', 'photon_energy']\n   sirepo_det.configuration_attrs = ['horizontal_extent',\n                                     'vertical_extent',\n                                     'shape']\n\n.. code:: py\n\n   RE(bp.count([sirepo_det]))\n\n.. code:: py\n\n   hdr = db[-1]\n   imgs = list(hdr.data('sirepo_det_image'))\n   plt.plot(imgs[-1])\n\nYou should get something like:\n\n.. image:: https://github.com/NSLS-II/sirepo-bluesky/raw/master/images/spectrum.png\n\n\nUse a simulated Sirepo Flyer to run multiple simulations\n--------------------------------------------------------\n\n- This section is based on the Young's Double Slit Experiment Sirepo example\n  that can be found in the wavefront propagation folder on the SRW simulations\n  section\n\n- Open the simulation and grab the new UID (the last 8 alphanumeric symbols)\n\n- Start ``ipython`` and run the following:\n\n.. code:: py\n\n    %run -i examples/prepare_flyer_env.py\n    import bluesky.plans as bp\n    import sirepo_bluesky.sirepo_flyer as sf\n\n- To create 5 different simulations that change 4 parameters at a time:\n\n.. code:: py\n\n    params_to_change = []\n    for i in range(1, 6):\n        key1 = 'Aperture'\n        parameters_update1 = {'horizontalSize': i * .1, 'verticalSize': (16 - i) * .1}\n        key2 = 'Lens'\n        parameters_update2 = {'horizontalFocalLength': i + 7}\n        key3 = 'Obstacle'\n        parameters_update3 = {'horizontalSize': 6 - i}\n        params_to_change.append({key1: parameters_update1,\n                                 key2: parameters_update2,\n                                 key3: parameters_update3})\n\n- Create the flyer and run a fly scan where ``sim_id`` is the UID of this\n  simulation:\n\n.. code:: py\n\n        sirepo_flyer = sf.SirepoFlyer(sim_id='<sim_id>', server_name='http://10.10.10.10:8000',\n                                      root_dir=root_dir, params_to_change=params_to_change,\n                                      watch_name='W60')\n\n        RE(bp.fly([sirepo_flyer]))\n\n- Access the data:\n\n.. code:: py\n\n    hdr = db[-1]\n    hdr.table(stream_name=\"sirepo_flyer\")\n\nDatabroker will return the following information:\n\n.. image:: https://github.com/NSLS-II/sirepo-bluesky/raw/master/images/flyer_output.png\n\n.. _instructions: https://github.com/radiasoft/sirepo/wiki/Development\n.. _VirtualBox: https://www.virtualbox.org/\n.. _Vagrant: https://www.vagrantup.com/\n.. _archive: https://github.com/NSLS-II/sirepo-bluesky/raw/master/examples/basic.zip\n.. _mongodb: https://docs.mongodb.com/manual/tutorial/install-mongodb-on-os-x/\n.. _local.yml: https://github.com/NSLS-II/sirepo-bluesky/blob/master/examples/local.yml\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/NSLS-II/sirepo-bluesky", "keywords": "", "license": "BSD (3-clause)", "maintainer": "", "maintainer_email": "", "name": "sirepo-bluesky", "package_url": "https://pypi.org/project/sirepo-bluesky/", "platform": "", "project_url": "https://pypi.org/project/sirepo-bluesky/", "project_urls": {"Homepage": "https://github.com/NSLS-II/sirepo-bluesky"}, "release_url": "https://pypi.org/project/sirepo-bluesky/0.0.2/", "requires_dist": ["bluesky", "databroker", "ipython", "matplotlib", "numconv", "numpy", "ophyd", "pymongo", "pyqt5 (<5.12,>=5.9)", "requests", "srwpy", "unyt"], "requires_python": ">=3.6", "summary": "Sirepo-Bluesky interface", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/NSLS-II/sirepo-bluesky\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/NSLS-II/sirepo-bluesky.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68b406e57caa48f1d21dccf24650b2669a33a4be/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f4e534c532d49492f73697265706f2d626c7565736b792e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/sirepo-bluesky\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/sirepo-bluesky.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac9ce128a280d3be38242bc8d8cdaa455bb1c057/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73697265706f2d626c7565736b792e737667\"></a>\n<p>Sirepo-Bluesky interface</p>\n<ul>\n<li>Free software: 3-clause BSD license</li>\n<li>Documentation: <a href=\"https://NSLS-II.github.io/sirepo-bluesky\" rel=\"nofollow\">https://NSLS-II.github.io/sirepo-bluesky</a>.</li>\n</ul>\n<div id=\"purpose\">\n<h2>Purpose</h2>\n<p>An attempt to integrate Sirepo/SRW simulations with Bluesky/Ophyd.</p>\n<p>Based on this Sirepo simulation that can be downloaded in the next section:</p>\n<img alt=\"https://github.com/NSLS-II/sirepo-bluesky/raw/master/images/basic_beamline.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9055685ac4bd0d8b0dabe55125ce39cdc6bd937/68747470733a2f2f6769746875622e636f6d2f4e534c532d49492f73697265706f2d626c7565736b792f7261772f6d61737465722f696d616765732f62617369635f6265616d6c696e652e706e67\">\n</div>\n<div id=\"prepare-a-local-sirepo-server\">\n<h2>Prepare a local Sirepo server</h2>\n<ul>\n<li>Install Sirepo using Vagrant/VirtualBox following the <a href=\"https://github.com/radiasoft/sirepo/wiki/Development\" rel=\"nofollow\">instructions</a>\n(you will need to install <a href=\"https://www.virtualbox.org/\" rel=\"nofollow\">VirtualBox</a> and <a href=\"https://www.vagrantup.com/\" rel=\"nofollow\">Vagrant</a>)</li>\n<li>After the successful installation start the VM with <tt>vagrant up</tt>\nand ssh to it with <tt>vagrant ssh</tt></li>\n<li>Run the following command to start Sirepo with the Bluesky interface\n(<tt>bluesky</tt> is a \u201csecret\u201d key used on both server and client sides,\nand the <tt>SIREPO_FEATURE_CONFIG_SIM_TYPES=srw</tt> part is optional if\nyou run Sirepo directly on a Linux/Mac machine and only have SRW\ninstalled):</li>\n</ul>\n<pre><span class=\"nv\">SIREPO_FEATURE_CONFIG_SIM_TYPES</span><span class=\"o\">=</span>srw <span class=\"nv\">SIREPO_AUTH_METHODS</span><span class=\"o\">=</span>bluesky:guest <span class=\"nv\">SIREPO_AUTH_BLUESKY_SECRET</span><span class=\"o\">=</span>bluesky sirepo service http\n</pre>\n<ul>\n<li>In your browser, go to <a href=\"http://10.10.10.10:8000/srw\" rel=\"nofollow\">http://10.10.10.10:8000/srw</a>, click the\n\u201cImport\u201d button in the right-upper corner and upload the\n<a href=\"https://github.com/NSLS-II/sirepo-bluesky/raw/master/examples/basic.zip\" rel=\"nofollow\">archive</a> with the simulation stored in this repo</li>\n<li>You should be redirected to the address like\n<tt><span class=\"pre\">http://10.10.10.10:8000/srw#/source/IKROlKfR</span></tt></li>\n<li>Grab the last 8 alphanumeric symbols (<tt>IKROlKfR</tt>), which represent\na UID for the simulation we will be working with in the next section.</li>\n</ul>\n<p>You can also consider running a Docker container:</p>\n<pre>mkdir -p <span class=\"nv\">$HOME</span>/tmp/sirepo-docker-run\ndocker run -it --rm -e <span class=\"nv\">SIREPO_AUTH_METHODS</span><span class=\"o\">=</span>bluesky:guest -e <span class=\"nv\">SIREPO_AUTH_BLUESKY_SECRET</span><span class=\"o\">=</span>bluesky -e <span class=\"nv\">SIREPO_SRDB_ROOT</span><span class=\"o\">=</span>/sirepo -e <span class=\"nv\">SIREPO_COOKIE_IS_SECURE</span><span class=\"o\">=</span><span class=\"nb\">false</span> -p <span class=\"m\">8000</span>:8000 -v <span class=\"nv\">$HOME</span>/tmp/sirepo-docker-run:/sirepo radiasoft/sirepo:beta /home/vagrant/.pyenv/shims/sirepo service http\n</pre>\n</div>\n<div id=\"prepare-bluesky-and-trigger-a-simulated-sirepo-detector\">\n<h2>Prepare Bluesky and trigger a simulated Sirepo detector</h2>\n<ul>\n<li>(OPTIONAL) Make sure you have <a href=\"https://docs.mongodb.com/manual/tutorial/install-mongodb-on-os-x/\" rel=\"nofollow\">mongodb</a> installed and the service is\nrunning (see <a href=\"https://github.com/NSLS-II/sirepo-bluesky/blob/master/examples/local.yml\" rel=\"nofollow\">local.yml</a> for details)</li>\n<li>Create a conda environment:</li>\n</ul>\n<pre>git clone https://github.com/NSLS-II/sirepo-bluesky/\n<span class=\"nb\">cd</span> sirepo-bluesky/\nconda create -n sirepo_bluesky <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">3</span>.7 -y\nconda activate sirepo_bluesky\npip install -e .\n</pre>\n<ul>\n<li>Start <tt>ipython</tt> and run the following where <tt>sim_id</tt> is the\nUID for the simulation we are working with:</li>\n</ul>\n<pre><span class=\"o\">%</span><span class=\"n\">run</span> <span class=\"o\">-</span><span class=\"n\">i</span> <span class=\"n\">examples</span><span class=\"o\">/</span><span class=\"n\">prepare_det_env</span><span class=\"o\">.</span><span class=\"n\">py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sirepo_bluesky.sirepo_detector</span> <span class=\"k\">as</span> <span class=\"nn\">sd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">bluesky.plans</span> <span class=\"k\">as</span> <span class=\"nn\">bp</span>\n<span class=\"n\">sirepo_det</span> <span class=\"o\">=</span> <span class=\"n\">sd</span><span class=\"o\">.</span><span class=\"n\">SirepoDetector</span><span class=\"p\">(</span><span class=\"n\">sim_id</span><span class=\"o\">=</span><span class=\"s1\">'&lt;sim_id&gt;'</span><span class=\"p\">,</span> <span class=\"n\">reg</span><span class=\"o\">=</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">reg</span><span class=\"p\">)</span>\n<span class=\"n\">sirepo_det</span><span class=\"o\">.</span><span class=\"n\">select_optic</span><span class=\"p\">(</span><span class=\"s1\">'Aperture'</span><span class=\"p\">)</span>\n<span class=\"n\">param1</span> <span class=\"o\">=</span> <span class=\"n\">sirepo_det</span><span class=\"o\">.</span><span class=\"n\">create_parameter</span><span class=\"p\">(</span><span class=\"s1\">'horizontalSize'</span><span class=\"p\">)</span>\n<span class=\"n\">param2</span> <span class=\"o\">=</span> <span class=\"n\">sirepo_det</span><span class=\"o\">.</span><span class=\"n\">create_parameter</span><span class=\"p\">(</span><span class=\"s1\">'verticalSize'</span><span class=\"p\">)</span>\n<span class=\"n\">sirepo_det</span><span class=\"o\">.</span><span class=\"n\">read_attrs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'image'</span><span class=\"p\">,</span> <span class=\"s1\">'mean'</span><span class=\"p\">,</span> <span class=\"s1\">'photon_energy'</span><span class=\"p\">]</span>\n<span class=\"n\">sirepo_det</span><span class=\"o\">.</span><span class=\"n\">configuration_attrs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'horizontal_extent'</span><span class=\"p\">,</span>\n                                  <span class=\"s1\">'vertical_extent'</span><span class=\"p\">,</span>\n                                  <span class=\"s1\">'shape'</span><span class=\"p\">]</span>\n</pre>\n<pre><span class=\"n\">RE</span><span class=\"p\">(</span><span class=\"n\">bp</span><span class=\"o\">.</span><span class=\"n\">grid_scan</span><span class=\"p\">([</span><span class=\"n\">sirepo_det</span><span class=\"p\">],</span>\n                <span class=\"n\">param1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n                <span class=\"n\">param2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n                <span class=\"kc\">True</span><span class=\"p\">))</span>\n</pre>\n<p>You should get something like:</p>\n<img alt=\"https://github.com/NSLS-II/sirepo-bluesky/raw/master/images/sirepo_bluesky_grid.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ee941351b44f02f7dd871e5acdaa1702f232354/68747470733a2f2f6769746875622e636f6d2f4e534c532d49492f73697265706f2d626c7565736b792f7261772f6d61737465722f696d616765732f73697265706f5f626c7565736b795f677269642e706e67\">\n<ul>\n<li>Get the data:</li>\n</ul>\n<pre><span class=\"n\">hdr</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">imgs</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">hdr</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">(</span><span class=\"s1\">'sirepo_det_image'</span><span class=\"p\">))</span>\n<span class=\"n\">cfg</span> <span class=\"o\">=</span> <span class=\"n\">hdr</span><span class=\"o\">.</span><span class=\"n\">config_data</span><span class=\"p\">(</span><span class=\"s1\">'sirepo_det'</span><span class=\"p\">)[</span><span class=\"s1\">'primary'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">hor_ext</span> <span class=\"o\">=</span> <span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\">_horizontal_extent'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">sirepo_det</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)]</span>\n<span class=\"n\">vert_ext</span> <span class=\"o\">=</span> <span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\">_vertical_extent'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">sirepo_det</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)]</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">imgs</span><span class=\"p\">[</span><span class=\"mi\">21</span><span class=\"p\">],</span> <span class=\"n\">aspect</span><span class=\"o\">=</span><span class=\"s1\">'equal'</span><span class=\"p\">,</span> <span class=\"n\">extent</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">hor_ext</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">vert_ext</span><span class=\"p\">))</span>\n</pre>\n<p>You should get something like:</p>\n<img alt=\"https://github.com/NSLS-II/sirepo-bluesky/raw/master/images/sirepo_bluesky.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f7ae0d2a892adf52bc85d01a7720d9b006dc821e/68747470733a2f2f6769746875622e636f6d2f4e534c532d49492f73697265706f2d626c7565736b792f7261772f6d61737465722f696d616765732f73697265706f5f626c7565736b792e706e67\">\n<p>To view single-electron spectrum report (<strong>Hint:</strong> use a different\n<tt>sim_id</tt>, e.g. for the NSLS-II CHX beamline example):</p>\n<pre><span class=\"o\">%</span><span class=\"n\">run</span> <span class=\"o\">-</span><span class=\"n\">i</span> <span class=\"n\">examples</span><span class=\"o\">/</span><span class=\"n\">prepare_det_env</span><span class=\"o\">.</span><span class=\"n\">py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sirepo_bluesky.sirepo_detector</span> <span class=\"k\">as</span> <span class=\"nn\">sd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">bluesky.plans</span> <span class=\"k\">as</span> <span class=\"nn\">bp</span>\n<span class=\"n\">sirepo_det</span> <span class=\"o\">=</span> <span class=\"n\">sd</span><span class=\"o\">.</span><span class=\"n\">SirepoDetector</span><span class=\"p\">(</span><span class=\"n\">sim_id</span><span class=\"o\">=</span><span class=\"s1\">'&lt;sim_id&gt;'</span><span class=\"p\">,</span> <span class=\"n\">reg</span><span class=\"o\">=</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">reg</span><span class=\"p\">,</span> <span class=\"n\">source_simulation</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">sirepo_det</span><span class=\"o\">.</span><span class=\"n\">read_attrs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'image'</span><span class=\"p\">,</span> <span class=\"s1\">'mean'</span><span class=\"p\">,</span> <span class=\"s1\">'photon_energy'</span><span class=\"p\">]</span>\n<span class=\"n\">sirepo_det</span><span class=\"o\">.</span><span class=\"n\">configuration_attrs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'horizontal_extent'</span><span class=\"p\">,</span>\n                                  <span class=\"s1\">'vertical_extent'</span><span class=\"p\">,</span>\n                                  <span class=\"s1\">'shape'</span><span class=\"p\">]</span>\n</pre>\n<pre><span class=\"n\">RE</span><span class=\"p\">(</span><span class=\"n\">bp</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">([</span><span class=\"n\">sirepo_det</span><span class=\"p\">]))</span>\n</pre>\n<pre><span class=\"n\">hdr</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">imgs</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">hdr</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">(</span><span class=\"s1\">'sirepo_det_image'</span><span class=\"p\">))</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">imgs</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n</pre>\n<p>You should get something like:</p>\n<img alt=\"https://github.com/NSLS-II/sirepo-bluesky/raw/master/images/spectrum.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/76d44f0ab78232a80de44860a562821a1ba37285/68747470733a2f2f6769746875622e636f6d2f4e534c532d49492f73697265706f2d626c7565736b792f7261772f6d61737465722f696d616765732f737065637472756d2e706e67\">\n</div>\n<div id=\"use-a-simulated-sirepo-flyer-to-run-multiple-simulations\">\n<h2>Use a simulated Sirepo Flyer to run multiple simulations</h2>\n<ul>\n<li>This section is based on the Young\u2019s Double Slit Experiment Sirepo example\nthat can be found in the wavefront propagation folder on the SRW simulations\nsection</li>\n<li>Open the simulation and grab the new UID (the last 8 alphanumeric symbols)</li>\n<li>Start <tt>ipython</tt> and run the following:</li>\n</ul>\n<pre><span class=\"o\">%</span><span class=\"n\">run</span> <span class=\"o\">-</span><span class=\"n\">i</span> <span class=\"n\">examples</span><span class=\"o\">/</span><span class=\"n\">prepare_flyer_env</span><span class=\"o\">.</span><span class=\"n\">py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">bluesky.plans</span> <span class=\"k\">as</span> <span class=\"nn\">bp</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sirepo_bluesky.sirepo_flyer</span> <span class=\"k\">as</span> <span class=\"nn\">sf</span>\n</pre>\n<ul>\n<li>To create 5 different simulations that change 4 parameters at a time:</li>\n</ul>\n<pre><span class=\"n\">params_to_change</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">):</span>\n    <span class=\"n\">key1</span> <span class=\"o\">=</span> <span class=\"s1\">'Aperture'</span>\n    <span class=\"n\">parameters_update1</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'horizontalSize'</span><span class=\"p\">:</span> <span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'verticalSize'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">16</span> <span class=\"o\">-</span> <span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">}</span>\n    <span class=\"n\">key2</span> <span class=\"o\">=</span> <span class=\"s1\">'Lens'</span>\n    <span class=\"n\">parameters_update2</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'horizontalFocalLength'</span><span class=\"p\">:</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">7</span><span class=\"p\">}</span>\n    <span class=\"n\">key3</span> <span class=\"o\">=</span> <span class=\"s1\">'Obstacle'</span>\n    <span class=\"n\">parameters_update3</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'horizontalSize'</span><span class=\"p\">:</span> <span class=\"mi\">6</span> <span class=\"o\">-</span> <span class=\"n\">i</span><span class=\"p\">}</span>\n    <span class=\"n\">params_to_change</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span><span class=\"n\">key1</span><span class=\"p\">:</span> <span class=\"n\">parameters_update1</span><span class=\"p\">,</span>\n                             <span class=\"n\">key2</span><span class=\"p\">:</span> <span class=\"n\">parameters_update2</span><span class=\"p\">,</span>\n                             <span class=\"n\">key3</span><span class=\"p\">:</span> <span class=\"n\">parameters_update3</span><span class=\"p\">})</span>\n</pre>\n<ul>\n<li>Create the flyer and run a fly scan where <tt>sim_id</tt> is the UID of this\nsimulation:</li>\n</ul>\n<pre><span class=\"n\">sirepo_flyer</span> <span class=\"o\">=</span> <span class=\"n\">sf</span><span class=\"o\">.</span><span class=\"n\">SirepoFlyer</span><span class=\"p\">(</span><span class=\"n\">sim_id</span><span class=\"o\">=</span><span class=\"s1\">'&lt;sim_id&gt;'</span><span class=\"p\">,</span> <span class=\"n\">server_name</span><span class=\"o\">=</span><span class=\"s1\">'http://10.10.10.10:8000'</span><span class=\"p\">,</span>\n                              <span class=\"n\">root_dir</span><span class=\"o\">=</span><span class=\"n\">root_dir</span><span class=\"p\">,</span> <span class=\"n\">params_to_change</span><span class=\"o\">=</span><span class=\"n\">params_to_change</span><span class=\"p\">,</span>\n                              <span class=\"n\">watch_name</span><span class=\"o\">=</span><span class=\"s1\">'W60'</span><span class=\"p\">)</span>\n\n<span class=\"n\">RE</span><span class=\"p\">(</span><span class=\"n\">bp</span><span class=\"o\">.</span><span class=\"n\">fly</span><span class=\"p\">([</span><span class=\"n\">sirepo_flyer</span><span class=\"p\">]))</span>\n</pre>\n<ul>\n<li>Access the data:</li>\n</ul>\n<pre><span class=\"n\">hdr</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">hdr</span><span class=\"o\">.</span><span class=\"n\">table</span><span class=\"p\">(</span><span class=\"n\">stream_name</span><span class=\"o\">=</span><span class=\"s2\">\"sirepo_flyer\"</span><span class=\"p\">)</span>\n</pre>\n<p>Databroker will return the following information:</p>\n<img alt=\"https://github.com/NSLS-II/sirepo-bluesky/raw/master/images/flyer_output.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/619d10878ed5cf895c21a9daf910eb43b97126e7/68747470733a2f2f6769746875622e636f6d2f4e534c532d49492f73697265706f2d626c7565736b792f7261772f6d61737465722f696d616765732f666c7965725f6f75747075742e706e67\">\n</div>\n\n          </div>"}, "last_serial": 6764530, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f7009c2b151aedf6353de93d5b44e29f", "sha256": "785a8c331b714783a06daaa27cc4fe51ba49f2d925d1d5db5f53b41daaa18f35"}, "downloads": -1, "filename": "sirepo_bluesky-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f7009c2b151aedf6353de93d5b44e29f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18169, "upload_time": "2020-03-02T23:08:44", "upload_time_iso_8601": "2020-03-02T23:08:44.031812Z", "url": "https://files.pythonhosted.org/packages/98/d3/70fb60766769c3cb58e7faa6c505f35c4e670558b4a6d97f7bf20fc68498/sirepo_bluesky-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f84b765dfb211cafe1dd6578bdc4ac94", "sha256": "c388334bc434a61724ce3c292d29501cda617af22c540f8b70bd8248e87ffb2f"}, "downloads": -1, "filename": "sirepo-bluesky-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f84b765dfb211cafe1dd6578bdc4ac94", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 37895, "upload_time": "2020-03-02T23:08:46", "upload_time_iso_8601": "2020-03-02T23:08:46.130110Z", "url": "https://files.pythonhosted.org/packages/27/62/26230525c957fe264a86deb9091f39d7f36f261b24cfb802fb33a6616a5f/sirepo-bluesky-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "8c70cae9854dbed997606114680b3669", "sha256": "c5a96767e567506c41d84bceff80612a5e57e663481fe2ca9f8c703fb940bb78"}, "downloads": -1, "filename": "sirepo_bluesky-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8c70cae9854dbed997606114680b3669", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18172, "upload_time": "2020-03-02T23:21:38", "upload_time_iso_8601": "2020-03-02T23:21:38.219492Z", "url": "https://files.pythonhosted.org/packages/da/d1/ffb91d951341ff6703841b756db1662da01c6cc764523ec6878e9987467f/sirepo_bluesky-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf72e0307f882fc30982984faed9b5bf", "sha256": "05e520d72cc100dd9bc28c6742c45fec4856763595acdd91c738ad71580abd21"}, "downloads": -1, "filename": "sirepo-bluesky-0.0.2.tar.gz", "has_sig": false, "md5_digest": "bf72e0307f882fc30982984faed9b5bf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 37880, "upload_time": "2020-03-02T23:21:39", "upload_time_iso_8601": "2020-03-02T23:21:39.344805Z", "url": "https://files.pythonhosted.org/packages/8e/0c/19de62f9a7122f87254410abd8f40b582d900399c885f38ca84abb0440a8/sirepo-bluesky-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8c70cae9854dbed997606114680b3669", "sha256": "c5a96767e567506c41d84bceff80612a5e57e663481fe2ca9f8c703fb940bb78"}, "downloads": -1, "filename": "sirepo_bluesky-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8c70cae9854dbed997606114680b3669", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18172, "upload_time": "2020-03-02T23:21:38", "upload_time_iso_8601": "2020-03-02T23:21:38.219492Z", "url": "https://files.pythonhosted.org/packages/da/d1/ffb91d951341ff6703841b756db1662da01c6cc764523ec6878e9987467f/sirepo_bluesky-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf72e0307f882fc30982984faed9b5bf", "sha256": "05e520d72cc100dd9bc28c6742c45fec4856763595acdd91c738ad71580abd21"}, "downloads": -1, "filename": "sirepo-bluesky-0.0.2.tar.gz", "has_sig": false, "md5_digest": "bf72e0307f882fc30982984faed9b5bf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 37880, "upload_time": "2020-03-02T23:21:39", "upload_time_iso_8601": "2020-03-02T23:21:39.344805Z", "url": "https://files.pythonhosted.org/packages/8e/0c/19de62f9a7122f87254410abd8f40b582d900399c885f38ca84abb0440a8/sirepo-bluesky-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:23 2020"}