{"info": {"author": "Norech", "author_email": "alexis.norech@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# SeriArduino\r\n\r\n## Install\r\n\r\n### For Arduino \r\n\r\n* Clone the repo\r\n* Compress the `seriarduino_cpp` folder into `seriarduino_cpp.zip`\r\n\r\n> Note: You can also download `seriarduino_cpp.zip` from the releases\r\n\r\n* Open the Arduino IDE\r\n* Go into `Sketch` > `Include a library` and add the library from the `seriarduino_cpp.zip` file\r\n\r\n### For Python (tested on Raspbian)\r\n\r\n* Clone the repo OR uncompress the `seriarduino_py.zip` file from the releases\r\n\r\n\r\n* Open the `seriarduino_py` folder in a terminal\r\n* In the terminal, enter `./setup.py install`\r\n\r\n\r\n### Usage\r\n\r\nThe following sample is linking an Arduino with a Raspberry Pi:\r\n\r\n#### Arduino side\r\n```cpp\r\n#include <SeriArduino.h>\r\n\r\nSeriArduino raspberry;\r\n\r\nString input;\r\nfloat value;\r\n\r\nvoid setup () {\r\n    // We set the serial to 9600 bauds (be sure to use the same on the Python side)\r\n    Serial.begin(9600);\r\n}\r\n\r\nvoid loop() {\r\n    // If raspberry gets any data\r\n    if(raspberry.available()) {\r\n        // We read the data and save it into the \"input\" variable\r\n        input = raspberry.read();\r\n\r\n\t    // We convert the input into a float,\r\n        // to do some computations later\r\n\t    value = input.toFloat();\r\n\r\n        Serial.println(\"We got a \" + String(value));\r\n\r\n\t    // A simple computation\r\n\t    value = value * 2;\r\n\r\n\t    // We send the new data to the Raspberry Pi\r\n    \traspberry.write(value);\r\n    }\r\n\r\n    delay(100);\r\n}\r\n```\r\n\r\n#### Python side (Raspberry Pi)\r\n\r\n```python\r\nfrom seriarduino import SeriArduino\r\n\r\narduino = SeriArduino(bauds = 9600)\r\n\r\nwhile True:\r\n\t# We ask what value to send\r\n\tval = input(\"Value to send: \")\r\n\r\n\t# We send to Arduino this value\r\n\tarduino.write(val)\r\n \tprint (\"Value sent: \", val)\r\n\r\n\t# We wait for the answer\r\n\tanswer = arduino.read()\r\n\r\n\tprint (\"The Arduino answer is: \", answer)\r\n```\r\n\r\n> By default, SeriArduino will try to find the serial address, but you can also manually specify it by using the address argument on the constructor (e.g. `SeriArduino(address = \"/dev/ttyACM0\")`)\r\n\r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/norech/SeriArduino", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "seriarduino", "package_url": "https://pypi.org/project/seriarduino/", "platform": "", "project_url": "https://pypi.org/project/seriarduino/", "project_urls": {"Homepage": "https://github.com/norech/SeriArduino"}, "release_url": "https://pypi.org/project/seriarduino/0.1.0/", "requires_dist": ["pyserial"], "requires_python": "", "summary": "[BETA] Link Arduino and Python using serial port", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SeriArduino</h1>\n<h2>Install</h2>\n<h3>For Arduino</h3>\n<ul>\n<li>Clone the repo</li>\n<li>Compress the <code>seriarduino_cpp</code> folder into <code>seriarduino_cpp.zip</code></li>\n</ul>\n<blockquote>\n<p>Note: You can also download <code>seriarduino_cpp.zip</code> from the releases</p>\n</blockquote>\n<ul>\n<li>Open the Arduino IDE</li>\n<li>Go into <code>Sketch</code> &gt; <code>Include a library</code> and add the library from the <code>seriarduino_cpp.zip</code> file</li>\n</ul>\n<h3>For Python (tested on Raspbian)</h3>\n<ul>\n<li>\n<p>Clone the repo OR uncompress the <code>seriarduino_py.zip</code> file from the releases</p>\n</li>\n<li>\n<p>Open the <code>seriarduino_py</code> folder in a terminal</p>\n</li>\n<li>\n<p>In the terminal, enter <code>./setup.py install</code></p>\n</li>\n</ul>\n<h3>Usage</h3>\n<p>The following sample is linking an Arduino with a Raspberry Pi:</p>\n<h4>Arduino side</h4>\n<pre><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;SeriArduino.h&gt;</span><span class=\"cp\"></span>\n\n<span class=\"n\">SeriArduino</span> <span class=\"n\">raspberry</span><span class=\"p\">;</span>\n\n<span class=\"n\">String</span> <span class=\"n\">input</span><span class=\"p\">;</span>\n<span class=\"kt\">float</span> <span class=\"n\">value</span><span class=\"p\">;</span>\n\n<span class=\"kt\">void</span> <span class=\"nf\">setup</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// We set the serial to 9600 bauds (be sure to use the same on the Python side)</span>\n    <span class=\"n\">Serial</span><span class=\"p\">.</span><span class=\"n\">begin</span><span class=\"p\">(</span><span class=\"mi\">9600</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span> <span class=\"nf\">loop</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// If raspberry gets any data</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">raspberry</span><span class=\"p\">.</span><span class=\"n\">available</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// We read the data and save it into the \"input\" variable</span>\n        <span class=\"n\">input</span> <span class=\"o\">=</span> <span class=\"n\">raspberry</span><span class=\"p\">.</span><span class=\"n\">read</span><span class=\"p\">();</span>\n\n\t    <span class=\"c1\">// We convert the input into a float,</span>\n        <span class=\"c1\">// to do some computations later</span>\n\t    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">input</span><span class=\"p\">.</span><span class=\"n\">toFloat</span><span class=\"p\">();</span>\n\n        <span class=\"n\">Serial</span><span class=\"p\">.</span><span class=\"n\">println</span><span class=\"p\">(</span><span class=\"s\">\"We got a \"</span> <span class=\"o\">+</span> <span class=\"n\">String</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">));</span>\n\n\t    <span class=\"c1\">// A simple computation</span>\n\t    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">;</span>\n\n\t    <span class=\"c1\">// We send the new data to the Raspberry Pi</span>\n    \t<span class=\"n\">raspberry</span><span class=\"p\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">delay</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>Python side (Raspberry Pi)</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">seriarduino</span> <span class=\"kn\">import</span> <span class=\"n\">SeriArduino</span>\n\n<span class=\"n\">arduino</span> <span class=\"o\">=</span> <span class=\"n\">SeriArduino</span><span class=\"p\">(</span><span class=\"n\">bauds</span> <span class=\"o\">=</span> <span class=\"mi\">9600</span><span class=\"p\">)</span>\n\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\t<span class=\"c1\"># We ask what value to send</span>\n\t<span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"Value to send: \"</span><span class=\"p\">)</span>\n\n\t<span class=\"c1\"># We send to Arduino this value</span>\n\t<span class=\"n\">arduino</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span>\n \t<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"Value sent: \"</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">)</span>\n\n\t<span class=\"c1\"># We wait for the answer</span>\n\t<span class=\"n\">answer</span> <span class=\"o\">=</span> <span class=\"n\">arduino</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n\t<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s2\">\"The Arduino answer is: \"</span><span class=\"p\">,</span> <span class=\"n\">answer</span><span class=\"p\">)</span>\n</pre>\n<blockquote>\n<p>By default, SeriArduino will try to find the serial address, but you can also manually specify it by using the address argument on the constructor (e.g. <code>SeriArduino(address = \"/dev/ttyACM0\")</code>)</p>\n</blockquote>\n\n          </div>"}, "last_serial": 6444646, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0c725c6a8e977528e8f63336b33e7648", "sha256": "8572d0097033c38468822dba6ebcf83e6013d39b9a6b0c7359e3b7b363fcce8a"}, "downloads": -1, "filename": "seriarduino-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "0c725c6a8e977528e8f63336b33e7648", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 2624, "upload_time": "2020-01-13T01:45:16", "upload_time_iso_8601": "2020-01-13T01:45:16.377375Z", "url": "https://files.pythonhosted.org/packages/28/63/f43e1ed0f51f27da88af3a557e9f462853ae75373f51f20fd60137304d96/seriarduino-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f134755d3cbe2532f5b462334a459d2", "sha256": "79c6aec3be8fd82bd79bfabba04ff201aa1934cc536c3e150573856d00e5de38"}, "downloads": -1, "filename": "seriarduino-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3f134755d3cbe2532f5b462334a459d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2612, "upload_time": "2020-01-13T13:55:15", "upload_time_iso_8601": "2020-01-13T13:55:15.999028Z", "url": "https://files.pythonhosted.org/packages/0d/93/4d02924230ac4a72a39ae801607f9db1f699ab68670371902e46baca679f/seriarduino-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a15ab048bf9fa3516227a4e7795eaf2", "sha256": "73090f1576cb773a8c52e273012a46dfb0de0ee3d3f88126344d9a69421d62b3"}, "downloads": -1, "filename": "seriarduino-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2a15ab048bf9fa3516227a4e7795eaf2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2259, "upload_time": "2020-01-13T01:45:19", "upload_time_iso_8601": "2020-01-13T01:45:19.024569Z", "url": "https://files.pythonhosted.org/packages/46/36/6cc5fb996cd54e643b1b0657d20937427e5d46506e4102484f2bba2352d0/seriarduino-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0c725c6a8e977528e8f63336b33e7648", "sha256": "8572d0097033c38468822dba6ebcf83e6013d39b9a6b0c7359e3b7b363fcce8a"}, "downloads": -1, "filename": "seriarduino-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "0c725c6a8e977528e8f63336b33e7648", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 2624, "upload_time": "2020-01-13T01:45:16", "upload_time_iso_8601": "2020-01-13T01:45:16.377375Z", "url": "https://files.pythonhosted.org/packages/28/63/f43e1ed0f51f27da88af3a557e9f462853ae75373f51f20fd60137304d96/seriarduino-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f134755d3cbe2532f5b462334a459d2", "sha256": "79c6aec3be8fd82bd79bfabba04ff201aa1934cc536c3e150573856d00e5de38"}, "downloads": -1, "filename": "seriarduino-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3f134755d3cbe2532f5b462334a459d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2612, "upload_time": "2020-01-13T13:55:15", "upload_time_iso_8601": "2020-01-13T13:55:15.999028Z", "url": "https://files.pythonhosted.org/packages/0d/93/4d02924230ac4a72a39ae801607f9db1f699ab68670371902e46baca679f/seriarduino-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a15ab048bf9fa3516227a4e7795eaf2", "sha256": "73090f1576cb773a8c52e273012a46dfb0de0ee3d3f88126344d9a69421d62b3"}, "downloads": -1, "filename": "seriarduino-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2a15ab048bf9fa3516227a4e7795eaf2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2259, "upload_time": "2020-01-13T01:45:19", "upload_time_iso_8601": "2020-01-13T01:45:19.024569Z", "url": "https://files.pythonhosted.org/packages/46/36/6cc5fb996cd54e643b1b0657d20937427e5d46506e4102484f2bba2352d0/seriarduino-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:14 2020"}