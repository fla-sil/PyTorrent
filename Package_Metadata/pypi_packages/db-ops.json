{"info": {"author": "Stuart Ianna", "author_email": "stuian@protonmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "[![Build Status](https://travis-ci.org/stuianna/DBOps.svg?branch=master)](https://travis-ci.org/stuianna/DBOps)\n![Codecov](https://img.shields.io/codecov/c/gh/stuianna/DBOps)\n![GitHub](https://img.shields.io/github/license/stuianna/DBOps)\n\nPython class helper for sqlite3 databases.\n\nExample: Create, read and remove a table working with just dataframes.\n\n```python\nfrom dbops.sqhelper import SQHelper\nimport pandas as pd\n\ntable_name = 'temperature'\ndf = pd.DataFrame({\"timestamp\": [1587222785, 1587222786], 'celsius': [23.3, 23.9]})\n\ndb = 'myDatabase.sql3'\ndatabase = SQHelper(db)\n\n# The dataframe column names are used for the table's column names. \n# All dataframe entries are automatically inserted.\ndatabase.create_table(table_name,df)\n\n# Add some more entries to the database, in this case duplicates of the above entry are made.\ndatabase.insert(table_name,df)\n\n# Read the content back into a dataframe\nnew_df = database.table_to_df(table_name)\n\n# Remove the table from the database\ndatabase.remove_table(table_name);\n\n```\n\nExample: Create a table, add an entry and return it as a Pandas dataframe.\n\n```python\nfrom dbops.sqhelper import SQHelper\n\ndb = 'myDatabase.sql3'\ntable_name = 'temperature'\ncolumns = {'timestamp': 'NUMERIC', 'celsius': 'REAL'}\n\n# Create a class instance for a single database\ndatabase = SQHelper(db)\n\n# Add a table to the database\ndatabase.create_table(table_name,columns)\n\n# Get all the tables in the database\nall_tables = database.get_table_names()\n\n# Add an entry to the database\nnew_entry = {'timestamp': 1587222785, 'celsius': 34.2}\ndatabase.insert(table_name, new_entry)\n\n# Return the table as a Pandas Dataframe\ndf = database.table_to_df(table_name)\n\n# Return all rows based on a column query, returns matching rows as dataframe\ndatabase.get_row(table_name, 'celsius', 34.2);\n```\n\n\nUse help(SQHelper) for more detailed information.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/stuianna/DBOps", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "db-ops", "package_url": "https://pypi.org/project/db-ops/", "platform": "", "project_url": "https://pypi.org/project/db-ops/", "project_urls": {"Homepage": "https://github.com/stuianna/DBOps"}, "release_url": "https://pypi.org/project/db-ops/0.0.3/", "requires_dist": ["pandas", "numpy"], "requires_python": ">=3.6", "summary": "Python class helper for working with sqlite3 databases and Pandas dataframes.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/stuianna/DBOps\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bcde5ff213ea3413c8ffb1dffab337a2ad2127e0/68747470733a2f2f7472617669732d63692e6f72672f73747569616e6e612f44424f70732e7376673f6272616e63683d6d6173746572\"></a>\n<img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2981aeed65f60f9780733be18d85e11d90a2b255/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f67682f73747569616e6e612f44424f7073\">\n<img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4462b6f454175b780399e7495678b12c6569355f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f73747569616e6e612f44424f7073\"></p>\n<p>Python class helper for sqlite3 databases.</p>\n<p>Example: Create, read and remove a table working with just dataframes.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dbops.sqhelper</span> <span class=\"kn\">import</span> <span class=\"n\">SQHelper</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n\n<span class=\"n\">table_name</span> <span class=\"o\">=</span> <span class=\"s1\">'temperature'</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span><span class=\"s2\">\"timestamp\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1587222785</span><span class=\"p\">,</span> <span class=\"mi\">1587222786</span><span class=\"p\">],</span> <span class=\"s1\">'celsius'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">23.3</span><span class=\"p\">,</span> <span class=\"mf\">23.9</span><span class=\"p\">]})</span>\n\n<span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"s1\">'myDatabase.sql3'</span>\n<span class=\"n\">database</span> <span class=\"o\">=</span> <span class=\"n\">SQHelper</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># The dataframe column names are used for the table's column names. </span>\n<span class=\"c1\"># All dataframe entries are automatically inserted.</span>\n<span class=\"n\">database</span><span class=\"o\">.</span><span class=\"n\">create_table</span><span class=\"p\">(</span><span class=\"n\">table_name</span><span class=\"p\">,</span><span class=\"n\">df</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Add some more entries to the database, in this case duplicates of the above entry are made.</span>\n<span class=\"n\">database</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">table_name</span><span class=\"p\">,</span><span class=\"n\">df</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Read the content back into a dataframe</span>\n<span class=\"n\">new_df</span> <span class=\"o\">=</span> <span class=\"n\">database</span><span class=\"o\">.</span><span class=\"n\">table_to_df</span><span class=\"p\">(</span><span class=\"n\">table_name</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Remove the table from the database</span>\n<span class=\"n\">database</span><span class=\"o\">.</span><span class=\"n\">remove_table</span><span class=\"p\">(</span><span class=\"n\">table_name</span><span class=\"p\">);</span>\n</pre>\n<p>Example: Create a table, add an entry and return it as a Pandas dataframe.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dbops.sqhelper</span> <span class=\"kn\">import</span> <span class=\"n\">SQHelper</span>\n\n<span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"s1\">'myDatabase.sql3'</span>\n<span class=\"n\">table_name</span> <span class=\"o\">=</span> <span class=\"s1\">'temperature'</span>\n<span class=\"n\">columns</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'timestamp'</span><span class=\"p\">:</span> <span class=\"s1\">'NUMERIC'</span><span class=\"p\">,</span> <span class=\"s1\">'celsius'</span><span class=\"p\">:</span> <span class=\"s1\">'REAL'</span><span class=\"p\">}</span>\n\n<span class=\"c1\"># Create a class instance for a single database</span>\n<span class=\"n\">database</span> <span class=\"o\">=</span> <span class=\"n\">SQHelper</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Add a table to the database</span>\n<span class=\"n\">database</span><span class=\"o\">.</span><span class=\"n\">create_table</span><span class=\"p\">(</span><span class=\"n\">table_name</span><span class=\"p\">,</span><span class=\"n\">columns</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get all the tables in the database</span>\n<span class=\"n\">all_tables</span> <span class=\"o\">=</span> <span class=\"n\">database</span><span class=\"o\">.</span><span class=\"n\">get_table_names</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Add an entry to the database</span>\n<span class=\"n\">new_entry</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'timestamp'</span><span class=\"p\">:</span> <span class=\"mi\">1587222785</span><span class=\"p\">,</span> <span class=\"s1\">'celsius'</span><span class=\"p\">:</span> <span class=\"mf\">34.2</span><span class=\"p\">}</span>\n<span class=\"n\">database</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">table_name</span><span class=\"p\">,</span> <span class=\"n\">new_entry</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Return the table as a Pandas Dataframe</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">database</span><span class=\"o\">.</span><span class=\"n\">table_to_df</span><span class=\"p\">(</span><span class=\"n\">table_name</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Return all rows based on a column query, returns matching rows as dataframe</span>\n<span class=\"n\">database</span><span class=\"o\">.</span><span class=\"n\">get_row</span><span class=\"p\">(</span><span class=\"n\">table_name</span><span class=\"p\">,</span> <span class=\"s1\">'celsius'</span><span class=\"p\">,</span> <span class=\"mf\">34.2</span><span class=\"p\">);</span>\n</pre>\n<p>Use help(SQHelper) for more detailed information.</p>\n\n          </div>"}, "last_serial": 7052487, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ad99e0044eabce8cec5aa89225ad0b7f", "sha256": "eafd9819fe4c60e1dc36126f36296c267900561104373ef7a88ed1e13f171e37"}, "downloads": -1, "filename": "db_ops-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ad99e0044eabce8cec5aa89225ad0b7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7198, "upload_time": "2020-04-18T20:35:45", "upload_time_iso_8601": "2020-04-18T20:35:45.712256Z", "url": "https://files.pythonhosted.org/packages/76/fc/c874b814da362ebd2b23a1379602801513af990d752e16ec9c166fe2cc79/db_ops-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12bb01a93b5546cf96aca4d08f63da3e", "sha256": "da1ed6fa6252d46cea9d87c83dbbc56f189db3cb55432ff7159ea49c6c1cc11c"}, "downloads": -1, "filename": "db-ops-0.0.1.tar.gz", "has_sig": false, "md5_digest": "12bb01a93b5546cf96aca4d08f63da3e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6311, "upload_time": "2020-04-18T20:35:49", "upload_time_iso_8601": "2020-04-18T20:35:49.439415Z", "url": "https://files.pythonhosted.org/packages/17/fa/940939471bd877e4dc13df5516c07b9eb09f38a4e0d2eb36ec73dd8c9162/db-ops-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "ba24b2fbb1bcbd0009e3cb5105e96c94", "sha256": "56ad9a94a137c7c055c61576ed27127fda1c91ce07b15d3712978075b8c8b82b"}, "downloads": -1, "filename": "db_ops-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ba24b2fbb1bcbd0009e3cb5105e96c94", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7200, "upload_time": "2020-04-18T20:35:48", "upload_time_iso_8601": "2020-04-18T20:35:48.151857Z", "url": "https://files.pythonhosted.org/packages/29/c5/d7d8b3dd30378177eb853687b11900d7adf20c24b20fcc2b7e5efaa84448/db_ops-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6447e3065a8ceeb61f66287daed7309", "sha256": "c98f23bb8ee4f86f716375f208681f268cb6905e4f78efc4c1b41eb6dbe6f6f5"}, "downloads": -1, "filename": "db-ops-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e6447e3065a8ceeb61f66287daed7309", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6309, "upload_time": "2020-04-18T20:35:51", "upload_time_iso_8601": "2020-04-18T20:35:51.003039Z", "url": "https://files.pythonhosted.org/packages/10/61/4c6174181487558e1728117273371459ed3086d42bc3310c640bc65e5fc0/db-ops-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "4e595756a31d82193b9874a66088b9b9", "sha256": "3283b313a13b7c255404319defc844718b7c8f75705390de0ba869a543a77d44"}, "downloads": -1, "filename": "db_ops-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4e595756a31d82193b9874a66088b9b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7263, "upload_time": "2020-04-19T10:31:43", "upload_time_iso_8601": "2020-04-19T10:31:43.037000Z", "url": "https://files.pythonhosted.org/packages/c6/1d/399ff7231d0f44235d1ea67c8408d549793b5b95c62bbaa2353700912e03/db_ops-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e320172da4cc5f20bab52d5e2044381", "sha256": "d1f6555f9a48ac959d5050ae96b1d470fc072681ace73c39ca05929b223ade81"}, "downloads": -1, "filename": "db-ops-0.0.3.tar.gz", "has_sig": false, "md5_digest": "6e320172da4cc5f20bab52d5e2044381", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6356, "upload_time": "2020-04-19T10:31:44", "upload_time_iso_8601": "2020-04-19T10:31:44.412348Z", "url": "https://files.pythonhosted.org/packages/5c/30/b7834004ded6a83aac232f4ef444c0554c73fcc3b7d4bcceaa3c5ccd3b53/db-ops-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4e595756a31d82193b9874a66088b9b9", "sha256": "3283b313a13b7c255404319defc844718b7c8f75705390de0ba869a543a77d44"}, "downloads": -1, "filename": "db_ops-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4e595756a31d82193b9874a66088b9b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7263, "upload_time": "2020-04-19T10:31:43", "upload_time_iso_8601": "2020-04-19T10:31:43.037000Z", "url": "https://files.pythonhosted.org/packages/c6/1d/399ff7231d0f44235d1ea67c8408d549793b5b95c62bbaa2353700912e03/db_ops-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e320172da4cc5f20bab52d5e2044381", "sha256": "d1f6555f9a48ac959d5050ae96b1d470fc072681ace73c39ca05929b223ade81"}, "downloads": -1, "filename": "db-ops-0.0.3.tar.gz", "has_sig": false, "md5_digest": "6e320172da4cc5f20bab52d5e2044381", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6356, "upload_time": "2020-04-19T10:31:44", "upload_time_iso_8601": "2020-04-19T10:31:44.412348Z", "url": "https://files.pythonhosted.org/packages/5c/30/b7834004ded6a83aac232f4ef444c0554c73fcc3b7d4bcceaa3c5ccd3b53/db-ops-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:54 2020"}