{"info": {"author": "Christian Maugg", "author_email": "software@christianmaugg.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries"], "description": "``pybongtvapi``\n===============\n\n``pybongtvapi`` is a pythonic interface to the `bong.tv <http://www.bong.tv>`_ platform.\n\nUsage\n=====\n\n``pybongtvapi`` supports direct access to bong.tv's JSON web service:\n\n.. code:: python\n\n    import pybongtvapi\n\n    # log in with your username and password\n    credentials = pybongtvapi.UserCredentials(\"john\", \"doe\")\n    api = pybongtvapi.API(credentials=credentials)\n\n    # or, if there is a bong.tv cookie somewhere on your hard disk\n    api = pybongtvapi.API(cookie='path/to/your/cookie.txt')\n\nFrom here on, all methods outlined in `bong.tv's API specification <http://help.bong.tv/customer/portal/articles/1292793-freie-api-zur-entwicklung>`_\ncan be called:\n\n.. code:: python\n\n\n    # get list of recordings\n    recordings = api.list_user_recordings()\n\n    # list all channels\n    channels = api.list_channels()\n\n    # let's assume today is 15th of May 2015. now, list today's broadcasts ..\n    channel_id = 1\n    api.get_broadcasts(channel_id)\n    # or tomorrow's broadcast\n    api.get_broadcasts(channel_id, date='16-05-2015')\n\n    # create a recording from a broadcast ID\n    broadcast_id = 12345\n    api.create_recording(broadcast_id)\n\n    # delete a recording from your BongSpace\n    recording_id = 56789\n    api.delete_recording(recording_id)\n\n    # search for broadcasts\n    broadcasts = api.search_broadcasts('heute')\n\nYou can also work with a higher-level API provided by ``pybongtvapi``.\nYou can use the ``pybongtvapi.EPG`` to access the `BongGuide <http://www.bong.tv/tv-programm/tabelle/sender/hauptsender/sendungen>`_:\n\n.. code:: python\n\n    epg = pybongtvapi.EPG(api)\n\n    for channel in epg.channels:\n      print(channel.name)\n      for broadcast in channel.broadcasts:\n        print()\n        print(broadcast.title)\n        print(broadcast.outline)\n\nOr use the ``pybongtvapi.PVR`` to access your personal `BongSpace <http://www.bong.tv/videorekorder/meine-aufnahmen>`_:\n\n.. code:: python\n\n    pvr = pybongtvapi.PVR(api)\n\n    for recording in pvr.recordings:\n      print(recording.title)\n      if recording.is_recorded():\n        print(recording.url)\n\nChangelog\n=========\n\n0.2\n---\n\n- bugfix: Recording.is_scheduled() did'nt work\n\n0.1\n---\n\n-  first public release. successor the `pybongtv <http://sourceforge.net/projects/pybongtv/>`_ library.\n\nLicense\n=======\n\n``pybongtvapi`` is available under `MIT\nLicense <https://github.com/cmaugg/pybongtvapi/raw/master/LICENSE.txt>`__.\n\nDownload\n========\n\nYou can download\n`pybongtvapi.py <https://github.com/cmaugg/pybongtvapi/raw/master/pybongtvapi.py>`__.\n\nAlternatively:\n\n::\n\n    git clone git@github.com:cmaugg/pybongtvapi", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/cmaugg/pybongtvapi/tarball/0.2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cmaugg/pybongtvapi", "keywords": "bong.tv pvr online video recorder epg electronic program guide", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "pybongtvapi", "package_url": "https://pypi.org/project/pybongtvapi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pybongtvapi/", "project_urls": {"Download": "https://github.com/cmaugg/pybongtvapi/tarball/0.2", "Homepage": "https://github.com/cmaugg/pybongtvapi"}, "release_url": "https://pypi.org/project/pybongtvapi/0.2/", "requires_dist": null, "requires_python": null, "summary": "a pythonic API for the bong.tv platform", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pybongtvapi\">\n<h2><tt>pybongtvapi</tt></h2>\n<p><tt>pybongtvapi</tt> is a pythonic interface to the <a href=\"http://www.bong.tv\" rel=\"nofollow\">bong.tv</a> platform.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p><tt>pybongtvapi</tt> supports direct access to bong.tv\u2019s JSON web service:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pybongtvapi</span>\n\n<span class=\"c1\"># log in with your username and password</span>\n<span class=\"n\">credentials</span> <span class=\"o\">=</span> <span class=\"n\">pybongtvapi</span><span class=\"o\">.</span><span class=\"n\">UserCredentials</span><span class=\"p\">(</span><span class=\"s2\">\"john\"</span><span class=\"p\">,</span> <span class=\"s2\">\"doe\"</span><span class=\"p\">)</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">pybongtvapi</span><span class=\"o\">.</span><span class=\"n\">API</span><span class=\"p\">(</span><span class=\"n\">credentials</span><span class=\"o\">=</span><span class=\"n\">credentials</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or, if there is a bong.tv cookie somewhere on your hard disk</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">pybongtvapi</span><span class=\"o\">.</span><span class=\"n\">API</span><span class=\"p\">(</span><span class=\"n\">cookie</span><span class=\"o\">=</span><span class=\"s1\">'path/to/your/cookie.txt'</span><span class=\"p\">)</span>\n</pre>\n<p>From here on, all methods outlined in <a href=\"http://help.bong.tv/customer/portal/articles/1292793-freie-api-zur-entwicklung\" rel=\"nofollow\">bong.tv\u2019s API specification</a>\ncan be called:</p>\n<pre><span class=\"c1\"># get list of recordings</span>\n<span class=\"n\">recordings</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">list_user_recordings</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># list all channels</span>\n<span class=\"n\">channels</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">list_channels</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># let's assume today is 15th of May 2015. now, list today's broadcasts ..</span>\n<span class=\"n\">channel_id</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get_broadcasts</span><span class=\"p\">(</span><span class=\"n\">channel_id</span><span class=\"p\">)</span>\n<span class=\"c1\"># or tomorrow's broadcast</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get_broadcasts</span><span class=\"p\">(</span><span class=\"n\">channel_id</span><span class=\"p\">,</span> <span class=\"n\">date</span><span class=\"o\">=</span><span class=\"s1\">'16-05-2015'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create a recording from a broadcast ID</span>\n<span class=\"n\">broadcast_id</span> <span class=\"o\">=</span> <span class=\"mi\">12345</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">create_recording</span><span class=\"p\">(</span><span class=\"n\">broadcast_id</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># delete a recording from your BongSpace</span>\n<span class=\"n\">recording_id</span> <span class=\"o\">=</span> <span class=\"mi\">56789</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">delete_recording</span><span class=\"p\">(</span><span class=\"n\">recording_id</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># search for broadcasts</span>\n<span class=\"n\">broadcasts</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">search_broadcasts</span><span class=\"p\">(</span><span class=\"s1\">'heute'</span><span class=\"p\">)</span>\n</pre>\n<p>You can also work with a higher-level API provided by <tt>pybongtvapi</tt>.\nYou can use the <tt>pybongtvapi.EPG</tt> to access the <a href=\"http://www.bong.tv/tv-programm/tabelle/sender/hauptsender/sendungen\" rel=\"nofollow\">BongGuide</a>:</p>\n<pre><span class=\"n\">epg</span> <span class=\"o\">=</span> <span class=\"n\">pybongtvapi</span><span class=\"o\">.</span><span class=\"n\">EPG</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">channel</span> <span class=\"ow\">in</span> <span class=\"n\">epg</span><span class=\"o\">.</span><span class=\"n\">channels</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n  <span class=\"k\">for</span> <span class=\"n\">broadcast</span> <span class=\"ow\">in</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">broadcasts</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">broadcast</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">broadcast</span><span class=\"o\">.</span><span class=\"n\">outline</span><span class=\"p\">)</span>\n</pre>\n<p>Or use the <tt>pybongtvapi.PVR</tt> to access your personal <a href=\"http://www.bong.tv/videorekorder/meine-aufnahmen\" rel=\"nofollow\">BongSpace</a>:</p>\n<pre><span class=\"n\">pvr</span> <span class=\"o\">=</span> <span class=\"n\">pybongtvapi</span><span class=\"o\">.</span><span class=\"n\">PVR</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">recording</span> <span class=\"ow\">in</span> <span class=\"n\">pvr</span><span class=\"o\">.</span><span class=\"n\">recordings</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">recording</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">)</span>\n  <span class=\"k\">if</span> <span class=\"n\">recording</span><span class=\"o\">.</span><span class=\"n\">is_recorded</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">recording</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.2</h3>\n<ul>\n<li>bugfix: Recording.is_scheduled() did\u2019nt work</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1</h3>\n<ul>\n<li>first public release. successor the <a href=\"http://sourceforge.net/projects/pybongtv/\" rel=\"nofollow\">pybongtv</a> library.</li>\n</ul>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><tt>pybongtvapi</tt> is available under <a href=\"https://github.com/cmaugg/pybongtvapi/raw/master/LICENSE.txt\" rel=\"nofollow\">MIT\nLicense</a>.</p>\n</div>\n<div id=\"download\">\n<h2>Download</h2>\n<p>You can download\n<a href=\"https://github.com/cmaugg/pybongtvapi/raw/master/pybongtvapi.py\" rel=\"nofollow\">pybongtvapi.py</a>.</p>\n<p>Alternatively:</p>\n<pre>git clone git@github.com:cmaugg/pybongtvapi\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1576778, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "cfccd47f54371286619e9e10e48c0e6a", "sha256": "68a610e9a21b1ffb79e0ef2a33839e6dabc029ccf5daad10c4f6761066646502"}, "downloads": -1, "filename": "pybongtvapi-0.1.zip", "has_sig": false, "md5_digest": "cfccd47f54371286619e9e10e48c0e6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10859, "upload_time": "2015-05-15T10:42:49", "upload_time_iso_8601": "2015-05-15T10:42:49.638162Z", "url": "https://files.pythonhosted.org/packages/3d/c9/38b17797eb63015d936b5c6826f685a5c40e5a2f9608cbaba2cc6c72fd85/pybongtvapi-0.1.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "f819b328538d36f1e93e8eee5cb3fcd2", "sha256": "ef181e2825d4024e78e87fcabef2724ad10e286174f3cbf0eb84078eb7b47be5"}, "downloads": -1, "filename": "pybongtvapi-0.2.zip", "has_sig": false, "md5_digest": "f819b328538d36f1e93e8eee5cb3fcd2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10986, "upload_time": "2015-06-03T13:16:21", "upload_time_iso_8601": "2015-06-03T13:16:21.692418Z", "url": "https://files.pythonhosted.org/packages/ec/7f/f3f615f6fc1b821105a251a03186a10e9a7636932e6e014962e4f9499771/pybongtvapi-0.2.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f819b328538d36f1e93e8eee5cb3fcd2", "sha256": "ef181e2825d4024e78e87fcabef2724ad10e286174f3cbf0eb84078eb7b47be5"}, "downloads": -1, "filename": "pybongtvapi-0.2.zip", "has_sig": false, "md5_digest": "f819b328538d36f1e93e8eee5cb3fcd2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10986, "upload_time": "2015-06-03T13:16:21", "upload_time_iso_8601": "2015-06-03T13:16:21.692418Z", "url": "https://files.pythonhosted.org/packages/ec/7f/f3f615f6fc1b821105a251a03186a10e9a7636932e6e014962e4f9499771/pybongtvapi-0.2.zip", "yanked": false}], "timestamp": "Fri May  8 03:09:05 2020"}