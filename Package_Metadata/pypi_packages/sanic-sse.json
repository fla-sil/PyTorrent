{"info": {"author": "Innokenty Lebedev", "author_email": "", "bugtrack_url": null, "classifiers": ["Framework :: AsyncIO", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP"], "description": "# Sanic Server-Sent Events extension\n\n![Publish](https://github.com/inn0kenty/sanic_sse/workflows/Publish/badge.svg)\n\nA Sanic extension for HTML5 [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events) support, inspired by [flask-sse](https://github.com/singingwolfboy/flask-sse) and [aiohttp-sse](https://github.com/aio-libs/aiohttp-sse).\n\n## Install\n\nInstallation process as simple as:\n\n```bash\n$ pip install sanic_sse\n```\n\n## Example\n\nServer example:\n\n```python\nfrom http import HTTPStatus\nfrom sanic import Sanic\nfrom sanic.response import json, json_dumps\nfrom sanic.exceptions import abort\nfrom sanic_sse import Sse\n\n# This function is optional callback before sse request\n# You can use it for authorization purpose or something else\nasync def before_sse_request(request):\n    if request.headers.get(\"Auth\", \"\") != \"some_token\":\n        abort(HTTPStatus.UNAUTHORIZED, \"Bad auth token\")\n\n\nsanic_app = Sanic()\n\n# The default sse url is /sse but you can set it via init argument url.\nSse(\n    sanic_app, url=\"/events\", before_request_func=before_sse_request\n)  # or you can use init_app method\n\n\n@sanic_app.route(\"/send\", methods=[\"POST\"])\nasync def send_event(request):\n    # if channel_id is None than event will be send to all subscribers\n    channel_id = request.json.get(\"channel_id\")\n\n    # optional arguments: event_id - str, event - str, retry - int\n    # data should always be str\n    # also you can use sse_send_nowait for send event without waiting\n    try:\n        await request.app.sse_send(json_dumps(request.json), channel_id=channel_id)\n    except KeyError:\n        abort(HTTPStatus.NOT_FOUND, \"channel not found\")\n\n    return json({\"status\": \"ok\"})\n\n\nif __name__ == \"__main__\":\n    sanic_app.run(host=\"0.0.0.0\", port=8000)\n```\n\nClient example (powered by [sseclient-py](https://github.com/mpetazzoni/sseclient) and [requests](https://github.com/requests/requests)):\n\n```python\nimport json\nimport pprint\nimport requests\nimport sseclient\n\nurl = \"http://127.0.0.1:8000/events\"\n# you may set channel_id parameter to receive special events\n# url = \"http://127.0.0.1:8000/events?channel_id=foo\"\n\nresponse = requests.get(url, stream=True)\nclient = sseclient.SSEClient(response)\nfor event in client.events():\n    print(event.id)\n    print(event.event)\n    print(event.retry)\n    pprint.pprint(json.loads(event.data))\n```\n\n## Requirements\n\n- [python](https://www.python.org/) 3.5+\n- [sanic](https://github.com/channelcat/sanic) 0.7.0+\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/inn0kenty/sanic_sse", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sanic-sse", "package_url": "https://pypi.org/project/sanic-sse/", "platform": "", "project_url": "https://pypi.org/project/sanic-sse/", "project_urls": {"Homepage": "https://github.com/inn0kenty/sanic_sse", "Repository": "https://github.com/inn0kenty/sanic_sse"}, "release_url": "https://pypi.org/project/sanic-sse/0.2.8/", "requires_dist": ["sanic"], "requires_python": ">=3.5,<4.0", "summary": "Sanic Server-Sent Events extension", "version": "0.2.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Sanic Server-Sent Events extension</h1>\n<p><img alt=\"Publish\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca7cc6a4ff9d32134b2b096a0ad6a94b89832589/68747470733a2f2f6769746875622e636f6d2f696e6e306b656e74792f73616e69635f7373652f776f726b666c6f77732f5075626c6973682f62616467652e737667\"></p>\n<p>A Sanic extension for HTML5 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events\" rel=\"nofollow\">server-sent events</a> support, inspired by <a href=\"https://github.com/singingwolfboy/flask-sse\" rel=\"nofollow\">flask-sse</a> and <a href=\"https://github.com/aio-libs/aiohttp-sse\" rel=\"nofollow\">aiohttp-sse</a>.</p>\n<h2>Install</h2>\n<p>Installation process as simple as:</p>\n<pre>$ pip install sanic_sse\n</pre>\n<h2>Example</h2>\n<p>Server example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">http</span> <span class=\"kn\">import</span> <span class=\"n\">HTTPStatus</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sanic</span> <span class=\"kn\">import</span> <span class=\"n\">Sanic</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sanic.response</span> <span class=\"kn\">import</span> <span class=\"n\">json</span><span class=\"p\">,</span> <span class=\"n\">json_dumps</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sanic.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">abort</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sanic_sse</span> <span class=\"kn\">import</span> <span class=\"n\">Sse</span>\n\n<span class=\"c1\"># This function is optional callback before sse request</span>\n<span class=\"c1\"># You can use it for authorization purpose or something else</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">before_sse_request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"Auth\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\"</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"s2\">\"some_token\"</span><span class=\"p\">:</span>\n        <span class=\"n\">abort</span><span class=\"p\">(</span><span class=\"n\">HTTPStatus</span><span class=\"o\">.</span><span class=\"n\">UNAUTHORIZED</span><span class=\"p\">,</span> <span class=\"s2\">\"Bad auth token\"</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">sanic_app</span> <span class=\"o\">=</span> <span class=\"n\">Sanic</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># The default sse url is /sse but you can set it via init argument url.</span>\n<span class=\"n\">Sse</span><span class=\"p\">(</span>\n    <span class=\"n\">sanic_app</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">\"/events\"</span><span class=\"p\">,</span> <span class=\"n\">before_request_func</span><span class=\"o\">=</span><span class=\"n\">before_sse_request</span>\n<span class=\"p\">)</span>  <span class=\"c1\"># or you can use init_app method</span>\n\n\n<span class=\"nd\">@sanic_app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/send\"</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"POST\"</span><span class=\"p\">])</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">send_event</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"c1\"># if channel_id is None than event will be send to all subscribers</span>\n    <span class=\"n\">channel_id</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"channel_id\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># optional arguments: event_id - str, event - str, retry - int</span>\n    <span class=\"c1\"># data should always be str</span>\n    <span class=\"c1\"># also you can use sse_send_nowait for send event without waiting</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">await</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">sse_send</span><span class=\"p\">(</span><span class=\"n\">json_dumps</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">),</span> <span class=\"n\">channel_id</span><span class=\"o\">=</span><span class=\"n\">channel_id</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>\n        <span class=\"n\">abort</span><span class=\"p\">(</span><span class=\"n\">HTTPStatus</span><span class=\"o\">.</span><span class=\"n\">NOT_FOUND</span><span class=\"p\">,</span> <span class=\"s2\">\"channel not found\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">json</span><span class=\"p\">({</span><span class=\"s2\">\"status\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ok\"</span><span class=\"p\">})</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">sanic_app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"0.0.0.0\"</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">8000</span><span class=\"p\">)</span>\n</pre>\n<p>Client example (powered by <a href=\"https://github.com/mpetazzoni/sseclient\" rel=\"nofollow\">sseclient-py</a> and <a href=\"https://github.com/requests/requests\" rel=\"nofollow\">requests</a>):</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pprint</span>\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sseclient</span>\n\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"http://127.0.0.1:8000/events\"</span>\n<span class=\"c1\"># you may set channel_id parameter to receive special events</span>\n<span class=\"c1\"># url = \"http://127.0.0.1:8000/events?channel_id=foo\"</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">stream</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">sseclient</span><span class=\"o\">.</span><span class=\"n\">SSEClient</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">event</span> <span class=\"ow\">in</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">retry</span><span class=\"p\">)</span>\n    <span class=\"n\">pprint</span><span class=\"o\">.</span><span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">))</span>\n</pre>\n<h2>Requirements</h2>\n<ul>\n<li><a href=\"https://www.python.org/\" rel=\"nofollow\">python</a> 3.5+</li>\n<li><a href=\"https://github.com/channelcat/sanic\" rel=\"nofollow\">sanic</a> 0.7.0+</li>\n</ul>\n\n          </div>"}, "last_serial": 7155910, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6ad0f70845fbe28bdaeef79978d5def4", "sha256": "3c100abc1f9a7c860f146db393d5582a50a3e539fd1514e22029930e273136bd"}, "downloads": -1, "filename": "sanic_sse-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6ad0f70845fbe28bdaeef79978d5def4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 12486, "upload_time": "2018-08-16T18:23:05", "upload_time_iso_8601": "2018-08-16T18:23:05.502104Z", "url": "https://files.pythonhosted.org/packages/13/44/c6bafb05df5550020d0a87b76d15a951b738fab86821c0bc9599d048c563/sanic_sse-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "277b211a8feb94d57de04f7a57d12b44", "sha256": "4170a7c8d003a1750bdb5d2d1a6d06ae9e23f2f3ecd86f02e4b4cf56c2e93a5c"}, "downloads": -1, "filename": "sanic_sse-0.1.0.tar.gz", "has_sig": false, "md5_digest": "277b211a8feb94d57de04f7a57d12b44", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6810, "upload_time": "2018-08-16T18:23:06", "upload_time_iso_8601": "2018-08-16T18:23:06.771251Z", "url": "https://files.pythonhosted.org/packages/ab/cb/ba5ecaeaffce4cec421b66065d808327bc9758d36584906a78777b56d38f/sanic_sse-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "555b4d9c43bd657d9b5d9a3d9b4c72be", "sha256": "83bf86e9dd44ca34efa53ece443e64915806b2f306ad78dcd21c6a906b18bba5"}, "downloads": -1, "filename": "sanic_sse-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "555b4d9c43bd657d9b5d9a3d9b4c72be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 12702, "upload_time": "2018-08-17T09:38:11", "upload_time_iso_8601": "2018-08-17T09:38:11.917035Z", "url": "https://files.pythonhosted.org/packages/45/e7/9d6966f149613739923dbe80cc70d9af63365a979d5c9cc1f0da700ca3b6/sanic_sse-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19a516ef8c008436aafa97929b3c8cce", "sha256": "1e6cb7dab0d0ca7e30cbf5fc3283159f5da0cf6a2e26c11786832a2c8a9f20cc"}, "downloads": -1, "filename": "sanic_sse-0.1.1.tar.gz", "has_sig": false, "md5_digest": "19a516ef8c008436aafa97929b3c8cce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6879, "upload_time": "2018-08-17T09:38:12", "upload_time_iso_8601": "2018-08-17T09:38:12.860287Z", "url": "https://files.pythonhosted.org/packages/e6/dc/a1d0a6e0d7fa7bb15a6a55d4c7b2fec55eb550df6386eea8a14b7d5e9170/sanic_sse-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4345c557828e45352f37f843d7ebeb21", "sha256": "22c9214f642467a671807d396a61b7f7640cf3e502de0721c3b85ba22a56a579"}, "downloads": -1, "filename": "sanic_sse-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4345c557828e45352f37f843d7ebeb21", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 14666, "upload_time": "2018-08-17T10:34:48", "upload_time_iso_8601": "2018-08-17T10:34:48.452152Z", "url": "https://files.pythonhosted.org/packages/44/d5/751e63c64fc01403e6f5d912a70aa9043b6ae55820da84b559893ce20e00/sanic_sse-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "393a79ab1de1cce3a10f0d87aac3832f", "sha256": "2ecf15c5c0fe531e363a7374b1a1e06a0a15cf08f551fc27ecc86979b139bc7c"}, "downloads": -1, "filename": "sanic_sse-0.2.0.tar.gz", "has_sig": false, "md5_digest": "393a79ab1de1cce3a10f0d87aac3832f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7072, "upload_time": "2018-08-17T10:34:49", "upload_time_iso_8601": "2018-08-17T10:34:49.427957Z", "url": "https://files.pythonhosted.org/packages/fa/4a/7e29a5ba0b81517ab0aa7730d5c81636842483b19c11ce73b1d153d771c0/sanic_sse-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "6c00e857132318b3a5348c7df3033788", "sha256": "c0b52ab697566044ae2b82b46afb4129c444d4cb846bf314886fb554dcaff9ed"}, "downloads": -1, "filename": "sanic_sse-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6c00e857132318b3a5348c7df3033788", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 14770, "upload_time": "2019-03-12T09:23:57", "upload_time_iso_8601": "2019-03-12T09:23:57.120444Z", "url": "https://files.pythonhosted.org/packages/c8/0e/e862dbe0e77ca7d84db24eb5206139498762e46ab0b1e3fa17fd08f48fbd/sanic_sse-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a0c23f81509c9a5d75226e9a40c2c92", "sha256": "3886cb22e7505ec6efe7af2680fe3d6d5bccec92fc4cf5f953bd363e6b7081a8"}, "downloads": -1, "filename": "sanic_sse-0.2.1.tar.gz", "has_sig": false, "md5_digest": "6a0c23f81509c9a5d75226e9a40c2c92", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7149, "upload_time": "2019-03-12T09:23:58", "upload_time_iso_8601": "2019-03-12T09:23:58.542888Z", "url": "https://files.pythonhosted.org/packages/6c/35/59fde997f5f383350ed4d0439824ae5434da639fbbcf8c483694df787e96/sanic_sse-0.2.1.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "3bcfc9a4f2b98ad58b32bf1c7d14dca8", "sha256": "f96a29acebaa95a28c59b80ccc130852941dbb90d2c096653a294feb041cca28"}, "downloads": -1, "filename": "sanic_sse-0.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "3bcfc9a4f2b98ad58b32bf1c7d14dca8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 6432, "upload_time": "2020-02-01T22:19:27", "upload_time_iso_8601": "2020-02-01T22:19:27.990868Z", "url": "https://files.pythonhosted.org/packages/8c/c2/a738614ee3b429e3ec9f9ad491632c75a627bf90aac710c250c4f21917c6/sanic_sse-0.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "63c8fc292a0a374f3bd9e1994b33a6bb", "sha256": "0bdef01ffb89d1eb03b726a2a1948fb1c3975b64385d7258abd7f2b7a43955d7"}, "downloads": -1, "filename": "sanic_sse-0.2.7.tar.gz", "has_sig": false, "md5_digest": "63c8fc292a0a374f3bd9e1994b33a6bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 5922, "upload_time": "2020-02-01T22:19:28", "upload_time_iso_8601": "2020-02-01T22:19:28.994053Z", "url": "https://files.pythonhosted.org/packages/dc/9d/7a8658efa0eddd5c9a671cd431870d979a1aecdc9c24673572188ef7731f/sanic_sse-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "42fc549fd03e840aaf10f6d1262389fc", "sha256": "3389eea1c4d4afd6921a5cf16b5279bfa08c573ef09daefcbedf95210b06e893"}, "downloads": -1, "filename": "sanic_sse-0.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "42fc549fd03e840aaf10f6d1262389fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 6445, "upload_time": "2020-05-03T10:27:34", "upload_time_iso_8601": "2020-05-03T10:27:34.932282Z", "url": "https://files.pythonhosted.org/packages/2d/cd/ad4179cce4c69ede9c882aeffb74fd7dc25a8365b86d0ae22cc87f05d9b0/sanic_sse-0.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "257bcbfff8576ce0676fd7715f816e88", "sha256": "0a05a4ef81caa74cb6f31808c318267ae2cb37a164af3506a99ff9f9c409951b"}, "downloads": -1, "filename": "sanic_sse-0.2.8.tar.gz", "has_sig": false, "md5_digest": "257bcbfff8576ce0676fd7715f816e88", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 5944, "upload_time": "2020-05-03T10:27:36", "upload_time_iso_8601": "2020-05-03T10:27:36.099466Z", "url": "https://files.pythonhosted.org/packages/b5/84/6269841c3288ee652bba45d835cdfea78c021a8c21afee84ff89fdb4fb0b/sanic_sse-0.2.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "42fc549fd03e840aaf10f6d1262389fc", "sha256": "3389eea1c4d4afd6921a5cf16b5279bfa08c573ef09daefcbedf95210b06e893"}, "downloads": -1, "filename": "sanic_sse-0.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "42fc549fd03e840aaf10f6d1262389fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 6445, "upload_time": "2020-05-03T10:27:34", "upload_time_iso_8601": "2020-05-03T10:27:34.932282Z", "url": "https://files.pythonhosted.org/packages/2d/cd/ad4179cce4c69ede9c882aeffb74fd7dc25a8365b86d0ae22cc87f05d9b0/sanic_sse-0.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "257bcbfff8576ce0676fd7715f816e88", "sha256": "0a05a4ef81caa74cb6f31808c318267ae2cb37a164af3506a99ff9f9c409951b"}, "downloads": -1, "filename": "sanic_sse-0.2.8.tar.gz", "has_sig": false, "md5_digest": "257bcbfff8576ce0676fd7715f816e88", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 5944, "upload_time": "2020-05-03T10:27:36", "upload_time_iso_8601": "2020-05-03T10:27:36.099466Z", "url": "https://files.pythonhosted.org/packages/b5/84/6269841c3288ee652bba45d835cdfea78c021a8c21afee84ff89fdb4fb0b/sanic_sse-0.2.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:41 2020"}