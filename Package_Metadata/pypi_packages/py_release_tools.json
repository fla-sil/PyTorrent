{"info": {"author": "Mike Crute", "author_email": "mcrute@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Framework :: Setuptools Plugin", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Testing"], "description": "======================\nPython Releasing Tools\n======================\n\nThis code is licensed under the MIT license.\n\nThis is a suite of tools that are useful for releasing Python code for public\nor private use. There are setuptools extensions to validate various conventions\nand to perform release activities.\n\nInstallation and Usage\n======================\nThis package is generally not installed directly but instead listed in the\n``setup_requires`` option of the setuptools ``setup`` function. For example::\n\n    from setuptools import setup\n\n    setup(\n        name=\"my_clever_package\",\n        version=\"1.0.0\",\n        setup_requires=[\n            \"py_release_tools\",\n        ]\n    )\n\nCommands are exported as distuils commands and should be automatically\navailable provided the package is installed. The tool provides the commands\ndocumented below and are generally run by defining a ``release`` `alias\n<http://pythonhosted.org/setuptools/setuptools.html#alias-define-shortcuts-for-commonly-used-commands>`_\nin the project's ``setup.cfg`` file. The author's typical project ``setup.cfg``\ncontains these aliases::\n\n    [aliases]\n    validate = cover_tests pep8\n    release = validate increment_semver git_push sdist upload\n    release_major = validate increment_semver -M git_push sdist upload\n    release_minor = validate increment_semver -m git_push sdist upload\n\nCommands\n========\nincrement_semver\n----------------\nThis command will update the ``setup.py`` file version number following the\nrules of `Semantic Versioning (semver) <http://semver.org>`_. This command will\nre-write and commit the project's ``setup.py`` file. It assumes that the\nversion line is formatted as such, with some amount of leading whitespace::\n\n    version=\"1.20.1\"\n\nIt will rewrite all lines that look like this in the file.\n\nThe version format is::\n\n    MAJOR.MINOR.PATCH\n\nFor more information check out the semver docs.\n\nVersion generation increments a version component by one. By default a patch\nversion is generated. Passing the ``-m`` or ``--minor`` flags to the command\nwill increment the minor version and set the patch version to zero. Passing\n``-M`` or ``--major`` will increment the major version and set both the minor\nand patch versions to zero.\n\nThis command will also create a tag in the git repository of format\n``release-{semver}``.\n\ngit_push\n--------\nThis command runs a ``git push`` command to push the ``master`` branch to the\nremote ``origin``. The command will also push tags. If your git repository\ndoesn't use these naming conventions the command will fail.\n\ncover_tests\n-----------\nThis command will setup python\n`coverage <https://pypi.python.org/pypi/coverage>`_ monitoring and invoke the\nsetuptools ``test`` target. Coverage data will be written to ``.coverage`` in\nthe same directory as the ``setup.py`` file.\n\nThis command will also generate a Cobertura coverage report as ``coverage.xml``\nand an HTML report in the ``htmlcov`` folder.\n\nFailure of the tests will cause a failure of the build so it is suitable to use\nthis command as a replacement for the builtin ``test`` command. This command\nalso suppresses the system exit that the builtin ``test`` command generates so\nother commands can be chained after this one.\n\npep8\n----\nThis command will run a `PEP8 <https://www.python.org/dev/peps/pep-0008/>`_\ncode style validation on all Python files in the project, including the\nsetup.py file.\n\nContributing\n============\nIf you would like to contribute to Pydora please visit the project's\n`GitHub page <https://github.com/mcrute/py_release_tools>`_ and open a pull\nrequest with your changes. To have the best experience contributing, please:\n\n* Don't break backwards compatibility of public interfaces\n* Write tests for your new feature/bug fix\n* Ensure that existing tests pass\n* Update the readme/docstrings, if necessary\n* Follow the coding style of the current code-base\n* Ensure that your code is PEP8 compliant\n* Validate that your changes work with Python 2.7+ and 3.x\n\nAll code is reviewed before acceptance and changes may be requested to better\nfollow the conventions of the existing API.\n\nhe build system runs ``python setup.py validate`` on all supported Python\nversions. You can, and should, run this on your pull request before submitting.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mcrute/py_release_tools", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "py_release_tools", "package_url": "https://pypi.org/project/py_release_tools/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/py_release_tools/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mcrute/py_release_tools"}, "release_url": "https://pypi.org/project/py_release_tools/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "Python release tools", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This code is licensed under the MIT license.</p>\n<p>This is a suite of tools that are useful for releasing Python code for public\nor private use. There are setuptools extensions to validate various conventions\nand to perform release activities.</p>\n<div id=\"installation-and-usage\">\n<h2>Installation and Usage</h2>\n<p>This package is generally not installed directly but instead listed in the\n<tt>setup_requires</tt> option of the setuptools <tt>setup</tt> function. For example:</p>\n<pre>from setuptools import setup\n\nsetup(\n    name=\"my_clever_package\",\n    version=\"1.0.0\",\n    setup_requires=[\n        \"py_release_tools\",\n    ]\n)\n</pre>\n<p>Commands are exported as distuils commands and should be automatically\navailable provided the package is installed. The tool provides the commands\ndocumented below and are generally run by defining a <tt>release</tt> <a href=\"http://pythonhosted.org/setuptools/setuptools.html#alias-define-shortcuts-for-commonly-used-commands\" rel=\"nofollow\">alias</a>\nin the project\u2019s <tt>setup.cfg</tt> file. The author\u2019s typical project <tt>setup.cfg</tt>\ncontains these aliases:</p>\n<pre>[aliases]\nvalidate = cover_tests pep8\nrelease = validate increment_semver git_push sdist upload\nrelease_major = validate increment_semver -M git_push sdist upload\nrelease_minor = validate increment_semver -m git_push sdist upload\n</pre>\n</div>\n<div id=\"commands\">\n<h2>Commands</h2>\n<div id=\"increment-semver\">\n<h3>increment_semver</h3>\n<p>This command will update the <tt>setup.py</tt> file version number following the\nrules of <a href=\"http://semver.org\" rel=\"nofollow\">Semantic Versioning (semver)</a>. This command will\nre-write and commit the project\u2019s <tt>setup.py</tt> file. It assumes that the\nversion line is formatted as such, with some amount of leading whitespace:</p>\n<pre>version=\"1.20.1\"\n</pre>\n<p>It will rewrite all lines that look like this in the file.</p>\n<p>The version format is:</p>\n<pre>MAJOR.MINOR.PATCH\n</pre>\n<p>For more information check out the semver docs.</p>\n<p>Version generation increments a version component by one. By default a patch\nversion is generated. Passing the <tt><span class=\"pre\">-m</span></tt> or <tt><span class=\"pre\">--minor</span></tt> flags to the command\nwill increment the minor version and set the patch version to zero. Passing\n<tt><span class=\"pre\">-M</span></tt> or <tt><span class=\"pre\">--major</span></tt> will increment the major version and set both the minor\nand patch versions to zero.</p>\n<p>This command will also create a tag in the git repository of format\n<tt><span class=\"pre\">release-{semver}</span></tt>.</p>\n</div>\n<div id=\"git-push\">\n<h3>git_push</h3>\n<p>This command runs a <tt>git push</tt> command to push the <tt>master</tt> branch to the\nremote <tt>origin</tt>. The command will also push tags. If your git repository\ndoesn\u2019t use these naming conventions the command will fail.</p>\n</div>\n<div id=\"cover-tests\">\n<h3>cover_tests</h3>\n<p>This command will setup python\n<a href=\"https://pypi.python.org/pypi/coverage\" rel=\"nofollow\">coverage</a> monitoring and invoke the\nsetuptools <tt>test</tt> target. Coverage data will be written to <tt>.coverage</tt> in\nthe same directory as the <tt>setup.py</tt> file.</p>\n<p>This command will also generate a Cobertura coverage report as <tt>coverage.xml</tt>\nand an HTML report in the <tt>htmlcov</tt> folder.</p>\n<p>Failure of the tests will cause a failure of the build so it is suitable to use\nthis command as a replacement for the builtin <tt>test</tt> command. This command\nalso suppresses the system exit that the builtin <tt>test</tt> command generates so\nother commands can be chained after this one.</p>\n</div>\n<div id=\"pep8\">\n<h3>pep8</h3>\n<p>This command will run a <a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">PEP8</a>\ncode style validation on all Python files in the project, including the\nsetup.py file.</p>\n</div>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>If you would like to contribute to Pydora please visit the project\u2019s\n<a href=\"https://github.com/mcrute/py_release_tools\" rel=\"nofollow\">GitHub page</a> and open a pull\nrequest with your changes. To have the best experience contributing, please:</p>\n<ul>\n<li>Don\u2019t break backwards compatibility of public interfaces</li>\n<li>Write tests for your new feature/bug fix</li>\n<li>Ensure that existing tests pass</li>\n<li>Update the readme/docstrings, if necessary</li>\n<li>Follow the coding style of the current code-base</li>\n<li>Ensure that your code is PEP8 compliant</li>\n<li>Validate that your changes work with Python 2.7+ and 3.x</li>\n</ul>\n<p>All code is reviewed before acceptance and changes may be requested to better\nfollow the conventions of the existing API.</p>\n<p>he build system runs <tt>python setup.py validate</tt> on all supported Python\nversions. You can, and should, run this on your pull request before submitting.</p>\n</div>\n\n          </div>"}, "last_serial": 1859600, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "05c2520187bf0cce26b09317761668ea", "sha256": "dce843c516bf52244d8f62eb540fbf2d68c337c9d2dda3c901303958a29837e6"}, "downloads": -1, "filename": "py_release_tools-0.1.0.tar.gz", "has_sig": false, "md5_digest": "05c2520187bf0cce26b09317761668ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4888, "upload_time": "2015-12-13T03:40:46", "upload_time_iso_8601": "2015-12-13T03:40:46.741677Z", "url": "https://files.pythonhosted.org/packages/c8/5b/01b1ce26e0bfda2cd40d89e72f4962fe76692e2e16f5de18b25299cc14af/py_release_tools-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "300186762e137fb5c0a5bfefce735258", "sha256": "fb72ccb659413b14b9d0f3d22d4d5dd87d5cdc59d9ddbec8e8d17c92a833abf6"}, "downloads": -1, "filename": "py_release_tools-0.1.1.tar.gz", "has_sig": false, "md5_digest": "300186762e137fb5c0a5bfefce735258", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4897, "upload_time": "2015-12-13T03:44:47", "upload_time_iso_8601": "2015-12-13T03:44:47.833318Z", "url": "https://files.pythonhosted.org/packages/ab/be/1e023044a168fc90cc65b521419c6aaf8fd2ed277c90ec01a82c8dc8fc36/py_release_tools-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c0a91d86f6d5d777d9f1ca44e0133217", "sha256": "ad069bc4b61bdeb9ee4261bb1ee4810b6aa085ec660e55610997fb86aad72fa8"}, "downloads": -1, "filename": "py_release_tools-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c0a91d86f6d5d777d9f1ca44e0133217", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4890, "upload_time": "2015-12-13T04:01:15", "upload_time_iso_8601": "2015-12-13T04:01:15.027230Z", "url": "https://files.pythonhosted.org/packages/92/f1/20eaef27ed1241c8adf038096b1137a36060e2996c690f136a1f9f9ed930/py_release_tools-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "1adc2933e4239443c9effadd2de0d7d9", "sha256": "d971ad236bbb9f865b8047f6ff0e21dd68950d4ee3ad8899deee821a0d23f6e7"}, "downloads": -1, "filename": "py_release_tools-0.1.3.tar.gz", "has_sig": false, "md5_digest": "1adc2933e4239443c9effadd2de0d7d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4904, "upload_time": "2015-12-13T04:18:16", "upload_time_iso_8601": "2015-12-13T04:18:16.664086Z", "url": "https://files.pythonhosted.org/packages/9a/9d/ad787211c9b54cb359d2acf6d1ff03ddff3a6f160cf31ff6e4f032d64137/py_release_tools-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1adc2933e4239443c9effadd2de0d7d9", "sha256": "d971ad236bbb9f865b8047f6ff0e21dd68950d4ee3ad8899deee821a0d23f6e7"}, "downloads": -1, "filename": "py_release_tools-0.1.3.tar.gz", "has_sig": false, "md5_digest": "1adc2933e4239443c9effadd2de0d7d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4904, "upload_time": "2015-12-13T04:18:16", "upload_time_iso_8601": "2015-12-13T04:18:16.664086Z", "url": "https://files.pythonhosted.org/packages/9a/9d/ad787211c9b54cb359d2acf6d1ff03ddff3a6f160cf31ff6e4f032d64137/py_release_tools-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:54 2020"}