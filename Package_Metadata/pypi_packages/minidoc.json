{"info": {"author": "dli", "author_email": "286264978@qq.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: System Administrators", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "======\nReadMe\n======\n\n\nInstallation\n------------\n    ::\n    \n    $ pip3 install minidoc\n\n\nLicense\n-------\n\n- MIT\n\n\n\nQuickstart\n----------\n- *pip3 install minidoc*\n\n- *make a workdir, such as \"TEST\"*\n    \n    ::\n    \n        mkdir TEST\n        cd TEST\n   \n- *edit your code.tst.py  as below:*\n\n    ::\n        \n        cat code.tst.py\n        \n\n.. image:: /docs/images/code.tst.py.00.png\n\n- \n\n| *run cmd* **minidoc** ,\n| *will auto exec the code in code.tst.py,* \n| *and auto save  the terminal screen-shot(or recording)* \n| *and auto generate a .rst doc-file* \n  \n  ::\n      \n      minidoc\n      tree\n      TEST# tree\n      .\n      \u251c\u2500\u2500 code.tst.py\n      \u251c\u2500\u2500 images------------------------------->generated svgs\n      \u2502\u00a0\u00a0 \u251c\u2500\u2500 __getitem__.svg\n      \u2502\u00a0\u00a0 \u2514\u2500\u2500 __init__.svg\n      \u2514\u2500\u2500 Usage.rst---------------------------->generated .rst\n      \n      1 directory, 4 files\n      TEST#\n\n      \n.. image:: /docs/images/code.tst.py.11.png\n.. image:: /docs/images/code.tst.py.2.png\n\n\n\n- *open generated .rst to check it*\n\n.. image:: /docs/images/code.tst.py.3.png\n\n\n- *minidoc -h*\n\n    ::\n        \n        TEST# minidoc -h\n        usage: minidoc [-h] [-tst TEST_FILE] [-codec CODEC] [-still STILL_FRAMES]\n                       [-rows ROWNUMS] [-dst DST_DIR] [-title TITLE] [-tbot TITLE_BOT]\n                       [-ebot ENTRY_BOT]\n        \n        optional arguments:\n          -h,                   --help                       show this help message and exit\n          -tst    TEST_FILE,    --test_file TEST_FILE        .tst.py file name,default = \"code.tst.py\"\n          -codec  CODEC,        --codec CODEC                .tst.py file codec,default = \"utf-8\"\n          -still  STILL_FRAMES, --still_frames STILL_FRAMES  generate screen shot,default = True (which means still image but not recording)\n          -rows   ROWNUMS,      --rownums ROWNUMS            screen height,default = 30\n          -dst    DST_DIR,      --dst_dir DST_DIR            destination svg dir, default =\"./images\"\n          -title  TITLE,        --title TITLE                parent title, default = \"Usage\"\n          -tbot   TITLE_BOT,    --title_bot TITLE_BOT        parent title bottom char, default = '='\n          -ebot   ENTRY_BOT,    --entry_bot ENTRY_BOT        entry title bottom char, default = '-'\n\n\nUsage\n-----\n\n- from code\n\n    ::\n        \n        In progressing.....\n            \n\n- from cmdline\n\n    ::\n       \n        # screen shot\n        root@# minidoc -tst code.rst.py -dst ./images\n        \n        # screen recording\n        root@# minidoc -tst code.rst.py -dst ./images -still false \n        \n        # on current dir,screen shot\n        root@# minidoc -still true\n        \n        # on current dir,screen recording\n        root@# minidoc -still false\n\n\n- from docstring only one level(experimental,no recursive support, since only one level AST walked)\n    \n    ::\n        \n        root@# minidoc_from_docstring -proj dtable\n\n\n\n\nFeatures\n--------\n\n- auto generate .rst doc from .tst.py\n- auto exec test-code in .tst.py \n- auto record the screen and save as .svg\n\n\nRestrict\n--------\n\n- currently only support python3\n\nTODO\n----\n\n- javascript\n- lua\n- tclsh\n\n\nReferences\n----------\n\n* termtosvg\n* elist\n* efdir\n* estring", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ihgazni2/minidoc", "keywords": "doc,test,svg", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "minidoc", "package_url": "https://pypi.org/project/minidoc/", "platform": "", "project_url": "https://pypi.org/project/minidoc/", "project_urls": {"Homepage": "https://github.com/ihgazni2/minidoc"}, "release_url": "https://pypi.org/project/minidoc/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "auto generate a mini rst doc (code block + svg) from a test-file", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"installation\">\n<h2>Installation</h2>\n<blockquote>\n<pre>$ pip3 install minidoc\n</pre>\n</blockquote>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<ul>\n<li>MIT</li>\n</ul>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<ul>\n<li><p><em>pip3 install minidoc</em></p>\n</li>\n<li><p><em>make a workdir, such as \u201cTEST\u201d</em></p>\n<blockquote>\n<pre>mkdir TEST\ncd TEST\n</pre>\n</blockquote>\n</li>\n<li><p><em>edit your code.tst.py  as below:</em></p>\n<blockquote>\n<pre>cat code.tst.py\n</pre>\n</blockquote>\n</li>\n</ul>\n<img alt=\"/docs/images/code.tst.py.00.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b868544ea984d02610dbdd99c89488ba07ada37/2f646f63732f696d616765732f636f64652e7473742e70792e30302e706e67\">\n<ul>\n<li>\n</ul>\n<div>\n<div><em>run cmd</em> <strong>minidoc</strong> ,</div>\n<div><em>will auto exec the code in code.tst.py,</em></div>\n<div><em>and auto save  the terminal screen-shot(or recording)</em></div>\n<div><em>and auto generate a .rst doc-file</em></div>\n</div>\n<blockquote>\n<pre>minidoc\ntree\nTEST# tree\n.\n\u251c\u2500\u2500 code.tst.py\n\u251c\u2500\u2500 images-------------------------------&gt;generated svgs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __getitem__.svg\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 __init__.svg\n\u2514\u2500\u2500 Usage.rst----------------------------&gt;generated .rst\n\n1 directory, 4 files\nTEST#\n</pre>\n</blockquote>\n<img alt=\"/docs/images/code.tst.py.11.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/453fcf0c4fd559e5c8952c83e56d9d954b623ace/2f646f63732f696d616765732f636f64652e7473742e70792e31312e706e67\">\n<img alt=\"/docs/images/code.tst.py.2.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8db6c770359b32d0fc0a976811314ec94e3db0bb/2f646f63732f696d616765732f636f64652e7473742e70792e322e706e67\">\n<ul>\n<li><em>open generated .rst to check it</em></li>\n</ul>\n<img alt=\"/docs/images/code.tst.py.3.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/15a9b6c3a419d8135cc0e60e1d735536940eb67b/2f646f63732f696d616765732f636f64652e7473742e70792e332e706e67\">\n<ul>\n<li><p><em>minidoc -h</em></p>\n<blockquote>\n<pre>TEST# minidoc -h\nusage: minidoc [-h] [-tst TEST_FILE] [-codec CODEC] [-still STILL_FRAMES]\n               [-rows ROWNUMS] [-dst DST_DIR] [-title TITLE] [-tbot TITLE_BOT]\n               [-ebot ENTRY_BOT]\n\noptional arguments:\n  -h,                   --help                       show this help message and exit\n  -tst    TEST_FILE,    --test_file TEST_FILE        .tst.py file name,default = \"code.tst.py\"\n  -codec  CODEC,        --codec CODEC                .tst.py file codec,default = \"utf-8\"\n  -still  STILL_FRAMES, --still_frames STILL_FRAMES  generate screen shot,default = True (which means still image but not recording)\n  -rows   ROWNUMS,      --rownums ROWNUMS            screen height,default = 30\n  -dst    DST_DIR,      --dst_dir DST_DIR            destination svg dir, default =\"./images\"\n  -title  TITLE,        --title TITLE                parent title, default = \"Usage\"\n  -tbot   TITLE_BOT,    --title_bot TITLE_BOT        parent title bottom char, default = '='\n  -ebot   ENTRY_BOT,    --entry_bot ENTRY_BOT        entry title bottom char, default = '-'\n</pre>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<ul>\n<li><p>from code</p>\n<blockquote>\n<pre>In progressing.....\n</pre>\n</blockquote>\n</li>\n<li><p>from cmdline</p>\n<blockquote>\n<pre># screen shot\nroot@# minidoc -tst code.rst.py -dst ./images\n\n# screen recording\nroot@# minidoc -tst code.rst.py -dst ./images -still false\n\n# on current dir,screen shot\nroot@# minidoc -still true\n\n# on current dir,screen recording\nroot@# minidoc -still false\n</pre>\n</blockquote>\n</li>\n<li><p>from docstring only one level(experimental,no recursive support, since only one level AST walked)</p>\n<blockquote>\n<pre>root@# minidoc_from_docstring -proj dtable\n</pre>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>auto generate .rst doc from .tst.py</li>\n<li>auto exec test-code in .tst.py</li>\n<li>auto record the screen and save as .svg</li>\n</ul>\n</div>\n<div id=\"restrict\">\n<h2>Restrict</h2>\n<ul>\n<li>currently only support python3</li>\n</ul>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>javascript</li>\n<li>lua</li>\n<li>tclsh</li>\n</ul>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<ul>\n<li>termtosvg</li>\n<li>elist</li>\n<li>efdir</li>\n<li>estring</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5877106, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "7f261ee22c51e8a80e25cbca1094d290", "sha256": "675d32330e33491101c8abc03ba78beb5860db2a1cfdca67210f2ac673ea7f3d"}, "downloads": -1, "filename": "minidoc-0.0.2.tar.gz", "has_sig": false, "md5_digest": "7f261ee22c51e8a80e25cbca1094d290", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6232, "upload_time": "2019-02-16T16:02:57", "upload_time_iso_8601": "2019-02-16T16:02:57.562015Z", "url": "https://files.pythonhosted.org/packages/43/41/7eb2bdd359d3bd6fad1c877dcc2946d1e010df6f32167d343e13bc1914f7/minidoc-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "690805dc9ff5994d125031aadc95a306", "sha256": "472e37a511cdc15dddc018b006fe55545aed12a0a6ef193e4613942933a481c1"}, "downloads": -1, "filename": "minidoc-0.0.3.tar.gz", "has_sig": false, "md5_digest": "690805dc9ff5994d125031aadc95a306", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6245, "upload_time": "2019-08-14T08:09:25", "upload_time_iso_8601": "2019-08-14T08:09:25.178589Z", "url": "https://files.pythonhosted.org/packages/93/8a/3541eff4d560e0e6e974cd847a6fbee5c3a426f69ac0dff31964c7d02a05/minidoc-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "ce13a8f0f32bbdcfa847f0d896e1c944", "sha256": "df9d6eac8e4a105ea0d972ca7c54beaa96f967fcc4cde84d105876ea4145162e"}, "downloads": -1, "filename": "minidoc-0.0.4.tar.gz", "has_sig": false, "md5_digest": "ce13a8f0f32bbdcfa847f0d896e1c944", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7534, "upload_time": "2019-09-24T02:26:44", "upload_time_iso_8601": "2019-09-24T02:26:44.963155Z", "url": "https://files.pythonhosted.org/packages/dd/b5/9d0e845af71b1af88f3fbda9f355cf7ba609432e3b46be62721b0100dc21/minidoc-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ce13a8f0f32bbdcfa847f0d896e1c944", "sha256": "df9d6eac8e4a105ea0d972ca7c54beaa96f967fcc4cde84d105876ea4145162e"}, "downloads": -1, "filename": "minidoc-0.0.4.tar.gz", "has_sig": false, "md5_digest": "ce13a8f0f32bbdcfa847f0d896e1c944", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7534, "upload_time": "2019-09-24T02:26:44", "upload_time_iso_8601": "2019-09-24T02:26:44.963155Z", "url": "https://files.pythonhosted.org/packages/dd/b5/9d0e845af71b1af88f3fbda9f355cf7ba609432e3b46be62721b0100dc21/minidoc-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:26 2020"}