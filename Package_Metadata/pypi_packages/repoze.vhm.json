{"info": {"author": "Agendaless Consulting", "author_email": "repoze-dev@lists.repoze.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python", "Programming Language :: Python :: 2.4", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "repoze.vhm README\n=================\n\n.. contents::\n\nOverview\n--------\n\nThis package provides middleware and utilities for doing virtual\nhosting within a WSGI/Repoze environment.  It is particularly useful\nwithin a ``repoze.zope2`` environment, where it may be used as an\nalternative to the classic `VirtualHostMonster\n<http://www.zope.org/Members/4am/SiteAccess2/info>`_: method of doing\nvirtual hosting.\n\nVirtual Hosting in a Nutshell\n-----------------------------\n\n\"Virtual hosting\" enables dynamic applications to be served from\nwithin a larger URL namespace, independent of the physical location of\nthe script files used to serve the application, or the precise layout\nof objects within the application.  In particular, the application and\nthe server collaborate to generate URLs for links in the application,\nsuch that the links preserve the \"apparent\" location of the\napplication.\n\nThe simplest case requires no effort at all: links rendered as\nrelative paths from within pages work nicely.  However, such links\nbegin to be problematic quickly, e.g. when the page is serving as the\ndefault index view for its folder, and the URL does not end in a\n``/``.  In that case, the browser interprets the links relative to the\nfolder's parent, and chaos ensues.\n\nCGI Environment Variables\n-------------------------\n\nAs used for applications running \"inside\" Apache (e.g., using\n``mod_python``), there follwing environment variables are of interest\nwhen doing virtual hosting:\n\nSERVER_NAME\n\n   the name which the server believes it has.\n\nHTTP_HOST\n\n   the apparent hostname of the server (i.e., as passed in the ``Host:``\n   header)\n\nSERVER_PORT\n\n   the apparent port of the server\n\nSCRIPT_NAME\n\n   any path prefix used by Apache to dispatch to the application (as\n   defined via the ``ScriptAlias`` directive).\n\nPATH_INFO\n\n   the remainder of the path, after removing any parts used in\n   dispatch.\n\n``repoze.vhm#vhm_xheaders`` WSGI Filter\n---------------------------------------\n\nWhen configured as WSGI middleware, this filter will convert the path\ninformation in the environment from the \"X-Vhm\" headers added to the\nrequest into the \"standard\" CGI environment variables outlined above.\nIt will also place repoze.vhm-specific environment variables into the\nWSGI environment for consumption by repoze.zope2 (or another\napplication which chooses to use its services).\n\nIf this filter is placed into the pipeline in front of a Zope 2\napplication, the standard Virtual Host Monster object\n(``/virtual_hosting``) may be deleted, as it is no longer necessary.\nHowever, it does not need to be deleted; repoze.vhm will work if it is\npresent.\n\nThe filter requires no configuration; it can be added to any pipeline\nvia its egg name: ``egg:repoze.vhm#vhm_xheaders``.\n\n``repoze.vhm#vhm_explicit`` WSGI Filter\n---------------------------------------\n\nThis filter is like the repoze.vhm#vhm_xheaders filter, but instead of taking\nthe virtual host and/or root from the environment, they are explicitly\nconfigured when the middleware is instantiated.\n\nIf using paste.deploy, this looks like::\n\n  [filter:vhm]\n  use = egg:repoze.vhm#vhm_explicit\n  host = http://www.example.com\n  root = /mysite\n\nBoth 'host' and 'root' are optional, but you probably want to specify at\nleast one of them.\n\n``repoze.vhm#vhm_path`` WSGI Filter\n-------------------------------------\n\nAs a fallback for proxies which cannot add headers to proxied\nrequests, this filter implements the same path-based virtual hosting\nsyntax used by the Zope2 Virtual Host Monster.  Because this syntax is\nquite arcane (so much that there is a web-app for generating the\nrewrite rules!), this filter is not recommended except for\nenvironments which cannot be configured to add headers (e.g., Apache\nhas ``mod_rewrite`` enabled, but cannot be changed to enable\n``mod_headers``).\n\nWhen configured as WSGI middleware, this filter will convert the path\ninformation in the environment from the classic \"Zope2 virtual hosting\nmungned URL\" into the \"standard\" CGI environment variables outlined\nabove.  It will also place repoze.vhm-specific environment variables\ninto the WSGI environment for consumption by repoze.zope2 (or another\napplication which chooses to use its services).\n\nIf this filter is placed into the pipeline in front of a Zope 2\napplication, the standard Virtual Host Monster object\n(``/virtual_hosting``) may be deleted, as it is no longer necessary.\nHowever, it does not need to be deleted; repoze.vhm will work if it is\npresent.\n\nThe filter requires no configuration; it can be added to any pipeline\nvia its egg name: ``egg:repoze.vhm#vhm_path``.\n\nYou can set the ``conserve_path_infos`` parameter if you want only the host and port bits to be touched.::\n\n  [filter:vhm]\n  use = egg:repoze.vhm#vhm_path\n  conserve_path_infos = true\n\nThis trick can be useful to forward the url AS-IS to an underlying equipment wiwhtout touching to the URI. Eg, a wsgi pipeline where our repoze.vhm filters some content from a stock zope2 server which do the VHM stuff also on its own.\n\n\nExample: a deliverance middleware filtering out a stock zope2+plone server\n-----------------------------------------------------------------------------\n\nWe have in this setup a frontal apache server reverse proxyfing a deliverance server.\n\nFirst, we will tell apache to proxy our requests to our backends.\n\nApache will tell:\n\n    - At the wsgi level, rewrite links using things in the request headers\n    - At the zope2 level, use the URL with vhmonster to rewrite links.\n\n\n::\n\n    # Rewrite links in paste\n    RequestHeader add        X-Vhm-Host http://host.tld:80/\n    # /_themes & .deliverance -> deliverance\n    ProxyPassMatch   /(_themes|\\.deliverance)(.*) http://localhost:8378/$1$2\n    ProxyPassReverse /_themes/                    http://localhost:8378/_themes/\n    ProxyPassReverse /.deliverance/               http://localhost:8378/.deliverance/\n\n    # application mounted on / does not needs _vh_\n    # /zmiroot -> access to zmi\n    ProxyPassMatch   ^/zmiroot(.*) http://localhost:8381/VirtualHostBase/http/host.tld:80/VirtualHostRoot/_vh_zmiroot$1\n    ProxyPassReverse ^/zmiroot/    http://localhost:8381/VirtualHostBase/http/host.tld:80/VirtualHostRoot/_vh_zmiroot/\n\n    # /plone-plonesiteid-> vhmonster without deliverance filtering\n    ProxyPassMatch   ^/plone-plonesiteid(.*) http://localhost:8381/VirtualHostBase/http/host.tld:80/plonesiteid/VirtualHostRoot/_vh_plone-plonesiteid$1\n    ProxyPassReverse ^/plone-plonesiteid/    http://localhost:8381/VirtualHostBase/http/host.tld:80/plonesiteid/VirtualHostRoot/_vh_plone-plonesiteid/ \n\n    # /-> zope2vhmonster\n    ProxyPass        /               http://localhost:8378/VirtualHostBase/http/host.tld:80/plonesiteid/VirtualHostRoot/\n    ProxyPassReverse /               http://localhost:8378/VirtualHostBase/http/host.tld:80/plonesiteid/VirtualHostRoot/\n \n\nThis deliverance server is just another PasteDeploy setup which query somehow a zope2 server listening somewhere.\n::\n\n    [DEFAULT]\n    debug=false\n\n    [app:athemes]\n    use = egg:Paste#static\n    document_root=%(here)s/sometheme/path\n\n    [app:azopeproxy]\n    use = egg:Paste#proxy\n    address=http://ZOPE:8381/\n\n    [filter:fdeliverance]\n    use=egg:Deliverance\n    theme_uri = sometheme\n    rule_uri = file://somerules\n    execute_pyref=true\n\n    [filter:ftranslogger]\n    use=egg:Paste#translogger\n    setup_console_handler=true\n\n    [filter:fexc]\n    use=egg:WebError#evalerror\n\n    [filter:fvhm]\n    use = egg:repoze.vhm#vhm_xheaders\n\n    [pipeline:pmain]\n    pipeline =  fexc\n                ftranslogger\n                fvhm\n                fdeliverance\n                azopeproxy\n\n    [composite:main]\n    use = egg:Paste#urlmap\n    / = pmain\n    /_themes = athemes\n\n    [server:main]\n    use=egg:Paste#http\n    host = localhost\n    port = 8378\n\n\nrepoze.vhm Virtual Hosting Model\n--------------------------------\n\nThis model (based on a `suggestion of Ian Bicking's ,\n<http://blog.ianbicking.org/2007/08/10/defaults-inheritance/>`_),\npasses virtual hosting information from the proxy / web server to the\napplication by adding extra headers to the proxied request:\n\nHTTP_X_VHM_HOST\n\n    indicates the apparent URL prefix of the root of the application\n    (concatenating ``wsgi.url_scheme``, ``SERVER_NAME``,\n    ``SERVER_PORT``, and ``SCRIPT_NAME`` variables; the equivalent of\n    Zope2's ``SERVER_URL``).\n\nHTTP_X_VHM_ROOT\n\n    path of the object within the application which is supposed to\n    function as the \"virtual root\".\n\nWhen serving an application from \"within\" Apache via mod_wsgi, we can\njust set the environment directly::\n\n      <Directory /path/to/wsgiapp>\n        SetEnv HTTP_X_VHM_HOST http://www.example.com\n        SetEnv HTTP_X_VHM_ROOT /cms\n      </Directory>\n\nIf you are serving repoze.zope2 via a proxy rewrite rule, you may pass\nthis information by adding additional headers.  E.g., a sample Apache\nconfiguration for the example above might be::\n\n      <VirtualHost *:80>\n        ServerName www.example.com\n        RewriteEngine on\n        RewriteRule ^/(.*) http://localhost:8080/$1 [P,L]\n        RequestHeader add X-Vhm-Host http://www.example.com\n        RequestHeader add X-Vhm-Root /cms\n      </VirtualHost>\n\nIn either of the above example cases, the effect on repoze.zope2 when\nrepoze.vhm's filter is in the WSGI pipeline is the same: the apparent\nroot of ``http://www.example.com`` will be the default view of the\nobject that has a physical path of ``/cms``.  Additionally, paths in\nURLs generated by Zope will not start with ``/cms``, and the scheme\nand hostname in URLs will be \"http://www.example.com\" as opposed to\n``http://localhost:8080``.\n\nThe \"vhm host\" header may contain further path information as\nnecessary; further path information can (and will, in the case of\nrepoze.zope2) be respected by downstream applications to root an\napplication at a non-server-root path ::\n\n      <Directory /path/to/wsgiapp>\n        SetEnv HTTP_X_VHM_HOST http://www.example.com/further/path\n        SetEnv HTTP_X_VHM_ROOT /cms\n      </Directory>\n\nIn this case, URLs generated by Zope will begin with\n``http://www.example.com/further/path``.  This syntax replaces the\n\"inside out\" virtual hosting syntax (``_vh_`` segment markers in the\nURL) as described in the \"Virtual Host Monster\" documentation.\n\nThe \"vhm host\" and \"vhm root\" headers can be used independently (the\nsystem will operate as you would expect in the absence of one or the\nother).\n\n``repoze.vhm`` Library API\n--------------------------\n\nBecause the existing Zope 2 virtual hosting machinery does not rely on\nthe \"standard\" CGI variables, the application dispatcher needs to \"fix\nup\" the environment to match Zope's expectations.  ``repoze.vhm``\noffers the following functions to aid in this fixup:\n\nrepoze.vhm.utils.setServerURL\n\n    convert the standard CGI virtual hosting environment into the form\n    expected by Zope2 (adding the ``SERVER_URL`` key).\n\nrepoze.vhm.utils.getVirtualRoot\n\n    return the virtual root path (``repoze.vhm.virtual_root``) as set\n    by the middleware.\n\nrepoze.vhm Changelog\n====================\n\n0.14 (2012-03-24)\n-----------------\n\n- Ensure HTTP_HOST is set correctly for non-standard ports under VHM paths.\n  This header requires a trailing port if not the default for a given service.\n  See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.23.\n  [davidjb]\n\n0.13 (2010-04-18)\n----------------- \n- add conserve_path_infos for the VHMPathFilter middleware [kiorky]\n\n0.12 (2010-01-01)\n-----------------\n\n- Update tests of middleware to check only that ``munge`` is called correctly.\n\n- Test ``munge`` sepearately.\n\n- 100% test coverage.\n\n- fixed xheaders filter to set PATH_INFO correctly\n  [vangheem]\n  \n\n0.11 (2009-08-31)\n-----------------\n\n- Add a repoze.vhm#vhm_explicit filter. This is like the vhm_xheaders\n  middleware, but the VHM host and/or root are set in the WSGI configuration\n  instead of in the request.\n\n- Calculate a VIRTUAL_URL and put it into the environment. This is basically\n  the URL that the end user sees. repoze.zope2 >= 1.0.2 uses this to compute\n  the ACTUAL_URL request variable, for example.\n\n0.10 (2009-08-26)\n-----------------\n\n- Apply the HTTP_HOST port number fix to the VHM Path filter as well.\n\n0.9 (2009-07-09)\n----------------\n\n- 100% test coverage.\n\n- ``HTTP_HOST`` parameter now includes port number if not http:80 or\n  https:443.  Thanks to Martin Aspeli.\n\n0.8 (2009-01-10)\n----------------\n\n- Set 'HTTP_HOST' in environ to the same value as 'SERVER_NAME', FBO apps\n  which need it.\n\n0.7 (2008-05-07)\n----------------\n\n- Remove 'dependency-links=' to dist.repoze.org to prevent easy_install\n  from searching there inappropriately.\n\n0.6 (2008-04-17)\n----------------\n\n- Re-added the path-segment-based filter as an option, to support scenarios\n  in which the reverse proxy can be configured to rewrite the URL but not\n  to add headers.\n\n0.5 (2008-03-09)\n----------------\n\n- Brown bag release: I fudged the entry point for the xheaders filter.\n\n0.4 (2008-03-09)\n----------------\n\n- Kill off path-segment-based filter (repoze.vhm.zope2).  Only the\n  xheaders filter remains.\n\n- Add license headers.\n\n- The middleware now sets a 'repoze.vhm.virtual_host_base' which is\n  preferred by setServerUrl over 'HTTP_HOST' when present.\n\n- Add a getVirtualRoot API.\n\n0.3 (2007-10-25)\n----------------\n\n- Fix setServerURL method to take into account HTTP_HOST passed by\n  client.\n\n0.2 (2007-09-22)\n----------------\n\n- Change repoze.vhm.zope2:setServerURL to allow Zope 2 to generate the\n  correct request['URL'] value when the vhm is in the pipeline.\n\n0.1 (2007-09-21)\n----------------\n\n- Initial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.repoze.org", "keywords": "web application server wsgi zope repoze", "license": "BSD-derived (http://www.repoze.org/LICENSE.txt)", "maintainer": null, "maintainer_email": null, "name": "repoze.vhm", "package_url": "https://pypi.org/project/repoze.vhm/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/repoze.vhm/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.repoze.org"}, "release_url": "https://pypi.org/project/repoze.vhm/0.14/", "requires_dist": null, "requires_python": null, "summary": "repoze virtual hosting middleware.", "version": "0.14", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"repoze-vhm-readme\">\n<h2><a href=\"#id15\" rel=\"nofollow\">repoze.vhm README</a></h2>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#repoze-vhm-readme\" id=\"id15\" rel=\"nofollow\">repoze.vhm README</a><ul>\n<li><a href=\"#overview\" id=\"id16\" rel=\"nofollow\">Overview</a></li>\n<li><a href=\"#virtual-hosting-in-a-nutshell\" id=\"id17\" rel=\"nofollow\">Virtual Hosting in a Nutshell</a></li>\n<li><a href=\"#cgi-environment-variables\" id=\"id18\" rel=\"nofollow\">CGI Environment Variables</a></li>\n<li><a href=\"#repoze-vhm-vhm-xheaders-wsgi-filter\" id=\"id19\" rel=\"nofollow\"><tt>repoze.vhm#vhm_xheaders</tt> WSGI Filter</a></li>\n<li><a href=\"#repoze-vhm-vhm-explicit-wsgi-filter\" id=\"id20\" rel=\"nofollow\"><tt>repoze.vhm#vhm_explicit</tt> WSGI Filter</a></li>\n<li><a href=\"#repoze-vhm-vhm-path-wsgi-filter\" id=\"id21\" rel=\"nofollow\"><tt>repoze.vhm#vhm_path</tt> WSGI Filter</a></li>\n<li><a href=\"#example-a-deliverance-middleware-filtering-out-a-stock-zope2-plone-server\" id=\"id22\" rel=\"nofollow\">Example: a deliverance middleware filtering out a stock zope2+plone server</a></li>\n<li><a href=\"#repoze-vhm-virtual-hosting-model\" id=\"id23\" rel=\"nofollow\">repoze.vhm Virtual Hosting Model</a></li>\n<li><a href=\"#repoze-vhm-library-api\" id=\"id24\" rel=\"nofollow\"><tt>repoze.vhm</tt> Library API</a></li>\n</ul>\n</li>\n<li><a href=\"#repoze-vhm-changelog\" id=\"id25\" rel=\"nofollow\">repoze.vhm Changelog</a><ul>\n<li><a href=\"#id1\" id=\"id26\" rel=\"nofollow\">0.14 (2012-03-24)</a></li>\n<li><a href=\"#id2\" id=\"id27\" rel=\"nofollow\">0.13 (2010-04-18)</a></li>\n<li><a href=\"#id3\" id=\"id28\" rel=\"nofollow\">0.12 (2010-01-01)</a></li>\n<li><a href=\"#id4\" id=\"id29\" rel=\"nofollow\">0.11 (2009-08-31)</a></li>\n<li><a href=\"#id5\" id=\"id30\" rel=\"nofollow\">0.10 (2009-08-26)</a></li>\n<li><a href=\"#id6\" id=\"id31\" rel=\"nofollow\">0.9 (2009-07-09)</a></li>\n<li><a href=\"#id7\" id=\"id32\" rel=\"nofollow\">0.8 (2009-01-10)</a></li>\n<li><a href=\"#id8\" id=\"id33\" rel=\"nofollow\">0.7 (2008-05-07)</a></li>\n<li><a href=\"#id9\" id=\"id34\" rel=\"nofollow\">0.6 (2008-04-17)</a></li>\n<li><a href=\"#id10\" id=\"id35\" rel=\"nofollow\">0.5 (2008-03-09)</a></li>\n<li><a href=\"#id11\" id=\"id36\" rel=\"nofollow\">0.4 (2008-03-09)</a></li>\n<li><a href=\"#id12\" id=\"id37\" rel=\"nofollow\">0.3 (2007-10-25)</a></li>\n<li><a href=\"#id13\" id=\"id38\" rel=\"nofollow\">0.2 (2007-09-22)</a></li>\n<li><a href=\"#id14\" id=\"id39\" rel=\"nofollow\">0.1 (2007-09-21)</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"overview\">\n<h3><a href=\"#id16\" rel=\"nofollow\">Overview</a></h3>\n<p>This package provides middleware and utilities for doing virtual\nhosting within a WSGI/Repoze environment.  It is particularly useful\nwithin a <tt>repoze.zope2</tt> environment, where it may be used as an\nalternative to the classic <a href=\"http://www.zope.org/Members/4am/SiteAccess2/info\" rel=\"nofollow\">VirtualHostMonster</a>: method of doing\nvirtual hosting.</p>\n</div>\n<div id=\"virtual-hosting-in-a-nutshell\">\n<h3><a href=\"#id17\" rel=\"nofollow\">Virtual Hosting in a Nutshell</a></h3>\n<p>\u201cVirtual hosting\u201d enables dynamic applications to be served from\nwithin a larger URL namespace, independent of the physical location of\nthe script files used to serve the application, or the precise layout\nof objects within the application.  In particular, the application and\nthe server collaborate to generate URLs for links in the application,\nsuch that the links preserve the \u201capparent\u201d location of the\napplication.</p>\n<p>The simplest case requires no effort at all: links rendered as\nrelative paths from within pages work nicely.  However, such links\nbegin to be problematic quickly, e.g. when the page is serving as the\ndefault index view for its folder, and the URL does not end in a\n<tt>/</tt>.  In that case, the browser interprets the links relative to the\nfolder\u2019s parent, and chaos ensues.</p>\n</div>\n<div id=\"cgi-environment-variables\">\n<h3><a href=\"#id18\" rel=\"nofollow\">CGI Environment Variables</a></h3>\n<p>As used for applications running \u201cinside\u201d Apache (e.g., using\n<tt>mod_python</tt>), there follwing environment variables are of interest\nwhen doing virtual hosting:</p>\n<p>SERVER_NAME</p>\n<blockquote>\nthe name which the server believes it has.</blockquote>\n<p>HTTP_HOST</p>\n<blockquote>\nthe apparent hostname of the server (i.e., as passed in the <tt>Host:</tt>\nheader)</blockquote>\n<p>SERVER_PORT</p>\n<blockquote>\nthe apparent port of the server</blockquote>\n<p>SCRIPT_NAME</p>\n<blockquote>\nany path prefix used by Apache to dispatch to the application (as\ndefined via the <tt>ScriptAlias</tt> directive).</blockquote>\n<p>PATH_INFO</p>\n<blockquote>\nthe remainder of the path, after removing any parts used in\ndispatch.</blockquote>\n</div>\n<div id=\"repoze-vhm-vhm-xheaders-wsgi-filter\">\n<h3><a href=\"#id19\" rel=\"nofollow\"><tt>repoze.vhm#vhm_xheaders</tt> WSGI Filter</a></h3>\n<p>When configured as WSGI middleware, this filter will convert the path\ninformation in the environment from the \u201cX-Vhm\u201d headers added to the\nrequest into the \u201cstandard\u201d CGI environment variables outlined above.\nIt will also place repoze.vhm-specific environment variables into the\nWSGI environment for consumption by repoze.zope2 (or another\napplication which chooses to use its services).</p>\n<p>If this filter is placed into the pipeline in front of a Zope 2\napplication, the standard Virtual Host Monster object\n(<tt>/virtual_hosting</tt>) may be deleted, as it is no longer necessary.\nHowever, it does not need to be deleted; repoze.vhm will work if it is\npresent.</p>\n<p>The filter requires no configuration; it can be added to any pipeline\nvia its egg name: <tt>egg:repoze.vhm#vhm_xheaders</tt>.</p>\n</div>\n<div id=\"repoze-vhm-vhm-explicit-wsgi-filter\">\n<h3><a href=\"#id20\" rel=\"nofollow\"><tt>repoze.vhm#vhm_explicit</tt> WSGI Filter</a></h3>\n<p>This filter is like the repoze.vhm#vhm_xheaders filter, but instead of taking\nthe virtual host and/or root from the environment, they are explicitly\nconfigured when the middleware is instantiated.</p>\n<p>If using paste.deploy, this looks like:</p>\n<pre>[filter:vhm]\nuse = egg:repoze.vhm#vhm_explicit\nhost = http://www.example.com\nroot = /mysite\n</pre>\n<p>Both \u2018host\u2019 and \u2018root\u2019 are optional, but you probably want to specify at\nleast one of them.</p>\n</div>\n<div id=\"repoze-vhm-vhm-path-wsgi-filter\">\n<h3><a href=\"#id21\" rel=\"nofollow\"><tt>repoze.vhm#vhm_path</tt> WSGI Filter</a></h3>\n<p>As a fallback for proxies which cannot add headers to proxied\nrequests, this filter implements the same path-based virtual hosting\nsyntax used by the Zope2 Virtual Host Monster.  Because this syntax is\nquite arcane (so much that there is a web-app for generating the\nrewrite rules!), this filter is not recommended except for\nenvironments which cannot be configured to add headers (e.g., Apache\nhas <tt>mod_rewrite</tt> enabled, but cannot be changed to enable\n<tt>mod_headers</tt>).</p>\n<p>When configured as WSGI middleware, this filter will convert the path\ninformation in the environment from the classic \u201cZope2 virtual hosting\nmungned URL\u201d into the \u201cstandard\u201d CGI environment variables outlined\nabove.  It will also place repoze.vhm-specific environment variables\ninto the WSGI environment for consumption by repoze.zope2 (or another\napplication which chooses to use its services).</p>\n<p>If this filter is placed into the pipeline in front of a Zope 2\napplication, the standard Virtual Host Monster object\n(<tt>/virtual_hosting</tt>) may be deleted, as it is no longer necessary.\nHowever, it does not need to be deleted; repoze.vhm will work if it is\npresent.</p>\n<p>The filter requires no configuration; it can be added to any pipeline\nvia its egg name: <tt>egg:repoze.vhm#vhm_path</tt>.</p>\n<p>You can set the <tt>conserve_path_infos</tt> parameter if you want only the host and port bits to be touched.:</p>\n<pre>[filter:vhm]\nuse = egg:repoze.vhm#vhm_path\nconserve_path_infos = true\n</pre>\n<p>This trick can be useful to forward the url AS-IS to an underlying equipment wiwhtout touching to the URI. Eg, a wsgi pipeline where our repoze.vhm filters some content from a stock zope2 server which do the VHM stuff also on its own.</p>\n</div>\n<div id=\"example-a-deliverance-middleware-filtering-out-a-stock-zope2-plone-server\">\n<h3><a href=\"#id22\" rel=\"nofollow\">Example: a deliverance middleware filtering out a stock zope2+plone server</a></h3>\n<p>We have in this setup a frontal apache server reverse proxyfing a deliverance server.</p>\n<p>First, we will tell apache to proxy our requests to our backends.</p>\n<p>Apache will tell:</p>\n<blockquote>\n<ul>\n<li>At the wsgi level, rewrite links using things in the request headers</li>\n<li>At the zope2 level, use the URL with vhmonster to rewrite links.</li>\n</ul>\n</blockquote>\n<pre># Rewrite links in paste\nRequestHeader add        X-Vhm-Host http://host.tld:80/\n# /_themes &amp; .deliverance -&gt; deliverance\nProxyPassMatch   /(_themes|\\.deliverance)(.*) http://localhost:8378/$1$2\nProxyPassReverse /_themes/                    http://localhost:8378/_themes/\nProxyPassReverse /.deliverance/               http://localhost:8378/.deliverance/\n\n# application mounted on / does not needs _vh_\n# /zmiroot -&gt; access to zmi\nProxyPassMatch   ^/zmiroot(.*) http://localhost:8381/VirtualHostBase/http/host.tld:80/VirtualHostRoot/_vh_zmiroot$1\nProxyPassReverse ^/zmiroot/    http://localhost:8381/VirtualHostBase/http/host.tld:80/VirtualHostRoot/_vh_zmiroot/\n\n# /plone-plonesiteid-&gt; vhmonster without deliverance filtering\nProxyPassMatch   ^/plone-plonesiteid(.*) http://localhost:8381/VirtualHostBase/http/host.tld:80/plonesiteid/VirtualHostRoot/_vh_plone-plonesiteid$1\nProxyPassReverse ^/plone-plonesiteid/    http://localhost:8381/VirtualHostBase/http/host.tld:80/plonesiteid/VirtualHostRoot/_vh_plone-plonesiteid/\n\n# /-&gt; zope2vhmonster\nProxyPass        /               http://localhost:8378/VirtualHostBase/http/host.tld:80/plonesiteid/VirtualHostRoot/\nProxyPassReverse /               http://localhost:8378/VirtualHostBase/http/host.tld:80/plonesiteid/VirtualHostRoot/\n</pre>\n<p>This deliverance server is just another PasteDeploy setup which query somehow a zope2 server listening somewhere.</p>\n<pre>[DEFAULT]\ndebug=false\n\n[app:athemes]\nuse = egg:Paste#static\ndocument_root=%(here)s/sometheme/path\n\n[app:azopeproxy]\nuse = egg:Paste#proxy\naddress=http://ZOPE:8381/\n\n[filter:fdeliverance]\nuse=egg:Deliverance\ntheme_uri = sometheme\nrule_uri = file://somerules\nexecute_pyref=true\n\n[filter:ftranslogger]\nuse=egg:Paste#translogger\nsetup_console_handler=true\n\n[filter:fexc]\nuse=egg:WebError#evalerror\n\n[filter:fvhm]\nuse = egg:repoze.vhm#vhm_xheaders\n\n[pipeline:pmain]\npipeline =  fexc\n            ftranslogger\n            fvhm\n            fdeliverance\n            azopeproxy\n\n[composite:main]\nuse = egg:Paste#urlmap\n/ = pmain\n/_themes = athemes\n\n[server:main]\nuse=egg:Paste#http\nhost = localhost\nport = 8378\n</pre>\n</div>\n<div id=\"repoze-vhm-virtual-hosting-model\">\n<h3><a href=\"#id23\" rel=\"nofollow\">repoze.vhm Virtual Hosting Model</a></h3>\n<p>This model (based on a <a href=\"http://blog.ianbicking.org/2007/08/10/defaults-inheritance/\" rel=\"nofollow\">suggestion of Ian Bicking\u2019s ,</a>),\npasses virtual hosting information from the proxy / web server to the\napplication by adding extra headers to the proxied request:</p>\n<p>HTTP_X_VHM_HOST</p>\n<blockquote>\nindicates the apparent URL prefix of the root of the application\n(concatenating <tt>wsgi.url_scheme</tt>, <tt>SERVER_NAME</tt>,\n<tt>SERVER_PORT</tt>, and <tt>SCRIPT_NAME</tt> variables; the equivalent of\nZope2\u2019s <tt>SERVER_URL</tt>).</blockquote>\n<p>HTTP_X_VHM_ROOT</p>\n<blockquote>\npath of the object within the application which is supposed to\nfunction as the \u201cvirtual root\u201d.</blockquote>\n<p>When serving an application from \u201cwithin\u201d Apache via mod_wsgi, we can\njust set the environment directly:</p>\n<pre>&lt;Directory /path/to/wsgiapp&gt;\n  SetEnv HTTP_X_VHM_HOST http://www.example.com\n  SetEnv HTTP_X_VHM_ROOT /cms\n&lt;/Directory&gt;\n</pre>\n<p>If you are serving repoze.zope2 via a proxy rewrite rule, you may pass\nthis information by adding additional headers.  E.g., a sample Apache\nconfiguration for the example above might be:</p>\n<pre>&lt;VirtualHost *:80&gt;\n  ServerName www.example.com\n  RewriteEngine on\n  RewriteRule ^/(.*) http://localhost:8080/$1 [P,L]\n  RequestHeader add X-Vhm-Host http://www.example.com\n  RequestHeader add X-Vhm-Root /cms\n&lt;/VirtualHost&gt;\n</pre>\n<p>In either of the above example cases, the effect on repoze.zope2 when\nrepoze.vhm\u2019s filter is in the WSGI pipeline is the same: the apparent\nroot of <tt><span class=\"pre\">http://www.example.com</span></tt> will be the default view of the\nobject that has a physical path of <tt>/cms</tt>.  Additionally, paths in\nURLs generated by Zope will not start with <tt>/cms</tt>, and the scheme\nand hostname in URLs will be \u201c<a href=\"http://www.example.com\" rel=\"nofollow\">http://www.example.com</a>\u201d as opposed to\n<tt><span class=\"pre\">http://localhost:8080</span></tt>.</p>\n<p>The \u201cvhm host\u201d header may contain further path information as\nnecessary; further path information can (and will, in the case of\nrepoze.zope2) be respected by downstream applications to root an\napplication at a non-server-root path</p>\n<pre>&lt;Directory /path/to/wsgiapp&gt;\n  SetEnv HTTP_X_VHM_HOST http://www.example.com/further/path\n  SetEnv HTTP_X_VHM_ROOT /cms\n&lt;/Directory&gt;\n</pre>\n<p>In this case, URLs generated by Zope will begin with\n<tt><span class=\"pre\">http://www.example.com/further/path</span></tt>.  This syntax replaces the\n\u201cinside out\u201d virtual hosting syntax (<tt>_vh_</tt> segment markers in the\nURL) as described in the \u201cVirtual Host Monster\u201d documentation.</p>\n<p>The \u201cvhm host\u201d and \u201cvhm root\u201d headers can be used independently (the\nsystem will operate as you would expect in the absence of one or the\nother).</p>\n</div>\n<div id=\"repoze-vhm-library-api\">\n<h3><a href=\"#id24\" rel=\"nofollow\"><tt>repoze.vhm</tt> Library API</a></h3>\n<p>Because the existing Zope 2 virtual hosting machinery does not rely on\nthe \u201cstandard\u201d CGI variables, the application dispatcher needs to \u201cfix\nup\u201d the environment to match Zope\u2019s expectations.  <tt>repoze.vhm</tt>\noffers the following functions to aid in this fixup:</p>\n<p>repoze.vhm.utils.setServerURL</p>\n<blockquote>\nconvert the standard CGI virtual hosting environment into the form\nexpected by Zope2 (adding the <tt>SERVER_URL</tt> key).</blockquote>\n<p>repoze.vhm.utils.getVirtualRoot</p>\n<blockquote>\nreturn the virtual root path (<tt>repoze.vhm.virtual_root</tt>) as set\nby the middleware.</blockquote>\n</div>\n</div>\n<div id=\"repoze-vhm-changelog\">\n<h2><a href=\"#id25\" rel=\"nofollow\">repoze.vhm Changelog</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id26\" rel=\"nofollow\">0.14 (2012-03-24)</a></h3>\n<ul>\n<li>Ensure HTTP_HOST is set correctly for non-standard ports under VHM paths.\nThis header requires a trailing port if not the default for a given service.\nSee <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.23\" rel=\"nofollow\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.23</a>.\n[davidjb]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id27\" rel=\"nofollow\">0.13 (2010-04-18)</a></h3>\n<ul>\n<li>add conserve_path_infos for the VHMPathFilter middleware [kiorky]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id28\" rel=\"nofollow\">0.12 (2010-01-01)</a></h3>\n<ul>\n<li>Update tests of middleware to check only that <tt>munge</tt> is called correctly.</li>\n<li>Test <tt>munge</tt> sepearately.</li>\n<li>100% test coverage.</li>\n<li>fixed xheaders filter to set PATH_INFO correctly\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id29\" rel=\"nofollow\">0.11 (2009-08-31)</a></h3>\n<ul>\n<li>Add a repoze.vhm#vhm_explicit filter. This is like the vhm_xheaders\nmiddleware, but the VHM host and/or root are set in the WSGI configuration\ninstead of in the request.</li>\n<li>Calculate a VIRTUAL_URL and put it into the environment. This is basically\nthe URL that the end user sees. repoze.zope2 &gt;= 1.0.2 uses this to compute\nthe ACTUAL_URL request variable, for example.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id30\" rel=\"nofollow\">0.10 (2009-08-26)</a></h3>\n<ul>\n<li>Apply the HTTP_HOST port number fix to the VHM Path filter as well.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3><a href=\"#id31\" rel=\"nofollow\">0.9 (2009-07-09)</a></h3>\n<ul>\n<li>100% test coverage.</li>\n<li><tt>HTTP_HOST</tt> parameter now includes port number if not <a href=\"http:80\" rel=\"nofollow\">http:80</a> or\n<a href=\"https:443\" rel=\"nofollow\">https:443</a>.  Thanks to Martin Aspeli.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3><a href=\"#id32\" rel=\"nofollow\">0.8 (2009-01-10)</a></h3>\n<ul>\n<li>Set \u2018HTTP_HOST\u2019 in environ to the same value as \u2018SERVER_NAME\u2019, FBO apps\nwhich need it.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3><a href=\"#id33\" rel=\"nofollow\">0.7 (2008-05-07)</a></h3>\n<ul>\n<li>Remove \u2018dependency-links=\u2019 to dist.repoze.org to prevent easy_install\nfrom searching there inappropriately.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3><a href=\"#id34\" rel=\"nofollow\">0.6 (2008-04-17)</a></h3>\n<ul>\n<li>Re-added the path-segment-based filter as an option, to support scenarios\nin which the reverse proxy can be configured to rewrite the URL but not\nto add headers.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3><a href=\"#id35\" rel=\"nofollow\">0.5 (2008-03-09)</a></h3>\n<ul>\n<li>Brown bag release: I fudged the entry point for the xheaders filter.</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3><a href=\"#id36\" rel=\"nofollow\">0.4 (2008-03-09)</a></h3>\n<ul>\n<li>Kill off path-segment-based filter (repoze.vhm.zope2).  Only the\nxheaders filter remains.</li>\n<li>Add license headers.</li>\n<li>The middleware now sets a \u2018repoze.vhm.virtual_host_base\u2019 which is\npreferred by setServerUrl over \u2018HTTP_HOST\u2019 when present.</li>\n<li>Add a getVirtualRoot API.</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3><a href=\"#id37\" rel=\"nofollow\">0.3 (2007-10-25)</a></h3>\n<ul>\n<li>Fix setServerURL method to take into account HTTP_HOST passed by\nclient.</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3><a href=\"#id38\" rel=\"nofollow\">0.2 (2007-09-22)</a></h3>\n<ul>\n<li>Change repoze.vhm.zope2:setServerURL to allow Zope 2 to generate the\ncorrect request[\u2018URL\u2019] value when the vhm is in the pipeline.</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3><a href=\"#id39\" rel=\"nofollow\">0.1 (2007-09-21)</a></h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 804718, "releases": {"0.10": [{"comment_text": "", "digests": {"md5": "1f920e64c0a2d70048a183dc2b3e9c1b", "sha256": "0f8ff1b12265fe6ada069eeba4cdf6b6d472af461ed73788ec6dcd6fcd52c491"}, "downloads": -1, "filename": "repoze.vhm-0.10.tar.gz", "has_sig": false, "md5_digest": "1f920e64c0a2d70048a183dc2b3e9c1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12847, "upload_time": "2009-08-26T16:32:06", "upload_time_iso_8601": "2009-08-26T16:32:06.148143Z", "url": "https://files.pythonhosted.org/packages/d9/4a/770c07cc89686a7912367f9f0b09c1c84deb8036c1a3f4af10bc71ea7eae/repoze.vhm-0.10.tar.gz", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "d6f74e479163bee04c138aec04af95a8", "sha256": "ea3aca8b6f70a3f4da622b1b642da928bbb53f66a66a47a8c4cc423e571a5ed6"}, "downloads": -1, "filename": "repoze.vhm-0.11.tar.gz", "has_sig": false, "md5_digest": "d6f74e479163bee04c138aec04af95a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13743, "upload_time": "2009-08-31T18:00:37", "upload_time_iso_8601": "2009-08-31T18:00:37.849827Z", "url": "https://files.pythonhosted.org/packages/bc/a1/20b34e616b6015f48872cb8d788783898b2d5269bc1c69d991d1a814ae08/repoze.vhm-0.11.tar.gz", "yanked": false}], "0.12": [{"comment_text": "", "digests": {"md5": "88ee49fec23090679f05faaf7a73b216", "sha256": "3a3407c39559ac5eb85b0ef561b1ca70de5229c6750ec6514994843e835cc37b"}, "downloads": -1, "filename": "repoze.vhm-0.12.tar.gz", "has_sig": false, "md5_digest": "88ee49fec23090679f05faaf7a73b216", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14800, "upload_time": "2010-01-01T08:49:07", "upload_time_iso_8601": "2010-01-01T08:49:07.903456Z", "url": "https://files.pythonhosted.org/packages/37/6e/46f8eaa27292be2d193d9fd23dccf959d17daa57a228d63de78d5249c4ca/repoze.vhm-0.12.tar.gz", "yanked": false}], "0.13": [{"comment_text": "", "digests": {"md5": "b457ee2c98bccb4efa9bba081f17114f", "sha256": "865e9dcf9c8c62e549aa547e8edfda037b4382e93b3b490744b467266bf3bc79"}, "downloads": -1, "filename": "repoze.vhm-0.13.zip", "has_sig": false, "md5_digest": "b457ee2c98bccb4efa9bba081f17114f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25855, "upload_time": "2010-04-18T18:19:41", "upload_time_iso_8601": "2010-04-18T18:19:41.978607Z", "url": "https://files.pythonhosted.org/packages/bc/dc/eb59230ec1b624a44eb0a39420e024ebc7041f36a87e170747710542486a/repoze.vhm-0.13.zip", "yanked": false}], "0.14": [{"comment_text": "", "digests": {"md5": "363beb4d81fe7cc0c8c42b8864f110bd", "sha256": "2b76ac63dac4fa5c707222cf5d75dbaefc6b53861405424ac79d2cdb7c7c1532"}, "downloads": -1, "filename": "repoze.vhm-0.14.tar.gz", "has_sig": false, "md5_digest": "363beb4d81fe7cc0c8c42b8864f110bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21368, "upload_time": "2012-03-25T01:54:26", "upload_time_iso_8601": "2012-03-25T01:54:26.436984Z", "url": "https://files.pythonhosted.org/packages/76/df/0175302b40198e77ad213562ce41f1d8a8ddcd537296c44ef2fa352bc9d8/repoze.vhm-0.14.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "293c06ee633219dd7008273e97d40f21", "sha256": "a899157db65aeab5a64bc355c4b61a60527ca5ad53b3a5f4e4f7dec6c9d3bf77"}, "downloads": -1, "filename": "repoze.vhm-0.9.tar.gz", "has_sig": false, "md5_digest": "293c06ee633219dd7008273e97d40f21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12499, "upload_time": "2009-08-09T19:01:04", "upload_time_iso_8601": "2009-08-09T19:01:04.974540Z", "url": "https://files.pythonhosted.org/packages/9e/9f/8e048c7936946db59064e9c880916e7b66a004c8e9e987ac990726e7c07f/repoze.vhm-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "363beb4d81fe7cc0c8c42b8864f110bd", "sha256": "2b76ac63dac4fa5c707222cf5d75dbaefc6b53861405424ac79d2cdb7c7c1532"}, "downloads": -1, "filename": "repoze.vhm-0.14.tar.gz", "has_sig": false, "md5_digest": "363beb4d81fe7cc0c8c42b8864f110bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21368, "upload_time": "2012-03-25T01:54:26", "upload_time_iso_8601": "2012-03-25T01:54:26.436984Z", "url": "https://files.pythonhosted.org/packages/76/df/0175302b40198e77ad213562ce41f1d8a8ddcd537296c44ef2fa352bc9d8/repoze.vhm-0.14.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:24 2020"}