{"info": {"author": "Tim Fischer", "author_email": "tim.fischer98@hotmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "# wrangle_pypes\n_Easy, model based data wrangling._\n\n<a href=\"https://mypy-lang.org/\"><img alt=\"Checked with mypy\" src=\"http://www.mypy-lang.org/static/mypy_badge.svg\"></a>\n<a href=\"https://github.com/python/black\"><img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>\n\n## Origin\nThis project came about thanks to having implemented this concept in a prior project ([dfb_predict](https://github.com/tim-fi/dfb_predict)) and wanting to reuse it. In said previous project it came about, because we wanted to play around with data-oriented design and figured that if we break up the transformations required during data-wrangling/munging into a simple \"_AST_\" where each node represents a single transformation. And to further the idea we to some inspiration from one of the [Unix philosophy](https://en.wikipedia.org/wiki/Unix_philosophy) core tenants, i.e. a single transformation should do one simple thing only, and allow for composition to implement more complex behavior.\n\n## Example\n```python\nfrom dataclasses import dataclass\nimport json\n\nfrom wrangle_pypes import Pipeline\nfrom wrangle_pypes.transformations import Get, Create, Cast\n\n@dataclass\nclass Point:\n    x: int\n    y: int\n\n\n@dataclass\nclass Square:\n    A: Point\n    B: Point\n\n\npipeline = Pipline({\n    Square: {\n        \"A\": Get(\"A\") | Create(Point),\n        \"A\": Get(\"B\") | Create(Point),\n    },\n    Point: {\n        \"x\": Get(\"x\") | Cast(int),\n        \"y\": Get(\"y\") | Cast(int),\n    }\n})\n\ndata = \"\"\"\n[\n    {\n        \"A\": {\"x\": 0, \"y\", 0},\n        \"B\": {\"x\": 1, \"y\", 1},\n    }, {\n        \"A\": {\"x\": 10, \"y\", 10},\n        \"B\": {\"x\": 11, \"y\", 11},\n    }\n]\n\"\"\"\n\nsquares = list(pipeline.create_multiple(json.loads(data)))\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tim-fi/wrangle_pypes", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "wrangle-pypes", "package_url": "https://pypi.org/project/wrangle-pypes/", "platform": "", "project_url": "https://pypi.org/project/wrangle-pypes/", "project_urls": {"Homepage": "https://github.com/tim-fi/wrangle_pypes"}, "release_url": "https://pypi.org/project/wrangle-pypes/0.3/", "requires_dist": null, "requires_python": "", "summary": "Easy, model based data wrangling.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>wrangle_pypes</h1>\n<p><em>Easy, model based data wrangling.</em></p>\n<p><a href=\"https://mypy-lang.org/\" rel=\"nofollow\"><img alt=\"Checked with mypy\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0db8f5dcbf5f340f278004d5db3d16b4cdf33ba/687474703a2f2f7777772e6d7970792d6c616e672e6f72672f7374617469632f6d7970795f62616467652e737667\"></a>\n<a href=\"https://github.com/python/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<h2>Origin</h2>\n<p>This project came about thanks to having implemented this concept in a prior project (<a href=\"https://github.com/tim-fi/dfb_predict\" rel=\"nofollow\">dfb_predict</a>) and wanting to reuse it. In said previous project it came about, because we wanted to play around with data-oriented design and figured that if we break up the transformations required during data-wrangling/munging into a simple \"<em>AST</em>\" where each node represents a single transformation. And to further the idea we to some inspiration from one of the <a href=\"https://en.wikipedia.org/wiki/Unix_philosophy\" rel=\"nofollow\">Unix philosophy</a> core tenants, i.e. a single transformation should do one simple thing only, and allow for composition to implement more complex behavior.</p>\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dataclasses</span> <span class=\"kn\">import</span> <span class=\"n\">dataclass</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">wrangle_pypes</span> <span class=\"kn\">import</span> <span class=\"n\">Pipeline</span>\n<span class=\"kn\">from</span> <span class=\"nn\">wrangle_pypes.transformations</span> <span class=\"kn\">import</span> <span class=\"n\">Get</span><span class=\"p\">,</span> <span class=\"n\">Create</span><span class=\"p\">,</span> <span class=\"n\">Cast</span>\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">Point</span><span class=\"p\">:</span>\n    <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n    <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">Square</span><span class=\"p\">:</span>\n    <span class=\"n\">A</span><span class=\"p\">:</span> <span class=\"n\">Point</span>\n    <span class=\"n\">B</span><span class=\"p\">:</span> <span class=\"n\">Point</span>\n\n\n<span class=\"n\">pipeline</span> <span class=\"o\">=</span> <span class=\"n\">Pipline</span><span class=\"p\">({</span>\n    <span class=\"n\">Square</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"A\"</span><span class=\"p\">:</span> <span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"s2\">\"A\"</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"n\">Create</span><span class=\"p\">(</span><span class=\"n\">Point</span><span class=\"p\">),</span>\n        <span class=\"s2\">\"A\"</span><span class=\"p\">:</span> <span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"s2\">\"B\"</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"n\">Create</span><span class=\"p\">(</span><span class=\"n\">Point</span><span class=\"p\">),</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">Point</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"x\"</span><span class=\"p\">:</span> <span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"s2\">\"x\"</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"n\">Cast</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">),</span>\n        <span class=\"s2\">\"y\"</span><span class=\"p\">:</span> <span class=\"n\">Get</span><span class=\"p\">(</span><span class=\"s2\">\"y\"</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"n\">Cast</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">),</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">[</span>\n<span class=\"s2\">    {</span>\n<span class=\"s2\">        \"A\": {\"x\": 0, \"y\", 0},</span>\n<span class=\"s2\">        \"B\": {\"x\": 1, \"y\", 1},</span>\n<span class=\"s2\">    }, {</span>\n<span class=\"s2\">        \"A\": {\"x\": 10, \"y\", 10},</span>\n<span class=\"s2\">        \"B\": {\"x\": 11, \"y\", 11},</span>\n<span class=\"s2\">    }</span>\n<span class=\"s2\">]</span>\n<span class=\"s2\">\"\"\"</span>\n\n<span class=\"n\">squares</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">pipeline</span><span class=\"o\">.</span><span class=\"n\">create_multiple</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)))</span>\n</pre>\n\n          </div>"}, "last_serial": 5573585, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3cdbc3661c5bf77fa7f2af370357dc02", "sha256": "9c55841deb7a39b578b1d2e5a0001c51be001821f6c2488ce3779a10c583b4f2"}, "downloads": -1, "filename": "wrangle_pypes-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3cdbc3661c5bf77fa7f2af370357dc02", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4972, "upload_time": "2019-07-02T10:37:16", "upload_time_iso_8601": "2019-07-02T10:37:16.560420Z", "url": "https://files.pythonhosted.org/packages/13/a6/08f961b4f28ba00eab5c60214a6224fe3b49f22eeb64eadff821bd24a3a5/wrangle_pypes-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3d2b6125e7eaf2e43ced536a52149a5", "sha256": "7ecb8bea5216399b434f714caaeacf64f530f43282c59f297b49227dd02c4247"}, "downloads": -1, "filename": "wrangle_pypes-0.1.tar.gz", "has_sig": false, "md5_digest": "e3d2b6125e7eaf2e43ced536a52149a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4050, "upload_time": "2019-07-02T10:37:18", "upload_time_iso_8601": "2019-07-02T10:37:18.467874Z", "url": "https://files.pythonhosted.org/packages/00/50/a0e0478ae8b61fb160a3bd76c6b93ec8debcfa0a2f881c3ac720d3c58389/wrangle_pypes-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "f940dcfcd1b437410ecca1b7cc4f5ee5", "sha256": "a340f59824d7c2ed3c360e8f69e6a1032853b150aabd345c7611793eaaa9b57b"}, "downloads": -1, "filename": "wrangle_pypes-0.2.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "f940dcfcd1b437410ecca1b7cc4f5ee5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4146, "upload_time": "2019-07-23T16:41:20", "upload_time_iso_8601": "2019-07-23T16:41:20.233000Z", "url": "https://files.pythonhosted.org/packages/ba/50/236727cef2669a052e7b6b6b1bbb61efe04334605739358e7531edb43bfe/wrangle_pypes-0.2.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "8fc10e5b8f0813cd06879b53e0ef3ab4", "sha256": "b18be3627acc357c06c042af17f717952e42c11ddaebde9fd588e250bee243ae"}, "downloads": -1, "filename": "wrangle_pypes-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8fc10e5b8f0813cd06879b53e0ef3ab4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5924, "upload_time": "2019-07-23T16:54:01", "upload_time_iso_8601": "2019-07-23T16:54:01.402711Z", "url": "https://files.pythonhosted.org/packages/f8/02/67a5463612254a431c927e37964a16d5a0cc6a9c61a5317d8115f256e348/wrangle_pypes-0.2-py3-none-any.whl", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "38d696fdbddb5b2022b3076730d4a977", "sha256": "ba1a7643a7436d6dc71a2216e7bb9a1f49a07520adf16162a8a6c9ddeb2609c4"}, "downloads": -1, "filename": "wrangle_pypes-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "38d696fdbddb5b2022b3076730d4a977", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5917, "upload_time": "2019-07-23T17:34:16", "upload_time_iso_8601": "2019-07-23T17:34:16.102938Z", "url": "https://files.pythonhosted.org/packages/3e/be/4e4339d857653425f678fb2b6723cd53922ce90cb1b8ee597315270de35f/wrangle_pypes-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f8666d25bdf6bd729759ca4060ded0e", "sha256": "624347838dd19bf2904440bc4bf36c41229aed519963ca0c2b6b14f6288a5c78"}, "downloads": -1, "filename": "wrangle_pypes-0.3.tar.gz", "has_sig": false, "md5_digest": "4f8666d25bdf6bd729759ca4060ded0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4183, "upload_time": "2019-07-23T17:34:17", "upload_time_iso_8601": "2019-07-23T17:34:17.477406Z", "url": "https://files.pythonhosted.org/packages/a3/c9/c2a66e803f5d7e86dad77c409a4eb05f2111423d03c3d2c6ad3e384a306a/wrangle_pypes-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "38d696fdbddb5b2022b3076730d4a977", "sha256": "ba1a7643a7436d6dc71a2216e7bb9a1f49a07520adf16162a8a6c9ddeb2609c4"}, "downloads": -1, "filename": "wrangle_pypes-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "38d696fdbddb5b2022b3076730d4a977", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5917, "upload_time": "2019-07-23T17:34:16", "upload_time_iso_8601": "2019-07-23T17:34:16.102938Z", "url": "https://files.pythonhosted.org/packages/3e/be/4e4339d857653425f678fb2b6723cd53922ce90cb1b8ee597315270de35f/wrangle_pypes-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f8666d25bdf6bd729759ca4060ded0e", "sha256": "624347838dd19bf2904440bc4bf36c41229aed519963ca0c2b6b14f6288a5c78"}, "downloads": -1, "filename": "wrangle_pypes-0.3.tar.gz", "has_sig": false, "md5_digest": "4f8666d25bdf6bd729759ca4060ded0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4183, "upload_time": "2019-07-23T17:34:17", "upload_time_iso_8601": "2019-07-23T17:34:17.477406Z", "url": "https://files.pythonhosted.org/packages/a3/c9/c2a66e803f5d7e86dad77c409a4eb05f2111423d03c3d2c6ad3e384a306a/wrangle_pypes-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:23 2020"}