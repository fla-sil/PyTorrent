{"info": {"author": "Jelle Smet", "author_email": "development@smetj.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: PyPy"], "description": "::\n\n              __       __    __\n    .--.--.--|__.-----|  |--|  |--.-----.-----.-----.\n    |  |  |  |  |__ --|     |  _  |  _  |     |  -__|\n    |________|__|_____|__|__|_____|_____|__|__|_____|\n                                       version 2.1.2\n\n    Build composable event pipeline servers with minimal effort.\n\n\n    =========================\n    wishbone.input.livestatus\n    =========================\n\n    Version: 1.0.0\n\n    Queries Livestatus at the chosen interval.\n    ------------------------------------------\n\n\n        Queries LiveStatus with the predefined query and returns each returned\n        record as new event\n\n\n        Parameters:\n\n            - host(str)(\"127.0.0.1\")\n               |  The Livestatus address/hostname to connect to.\n\n            - port(int)(6557)\n               |  Explaining the parameter.\n\n            - timeout(int)(10)\n               |  Timeout in seconds to connect.\n\n            - query(str)(\"GET Status\")\n               |  The query to execute\n\n            - interval(int)(10)\n               |  The interval to query\n\n        Queues:\n\n            - outbox\n               |  A description of the queue", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/smetj/wishbone-input-livestatus/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/smetj/wishbone-input-livestatus", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "wishbone_input_livestatus", "package_url": "https://pypi.org/project/wishbone_input_livestatus/", "platform": "Linux", "project_url": "https://pypi.org/project/wishbone_input_livestatus/", "project_urls": {"Download": "https://github.com/smetj/wishbone-input-livestatus/tarball/master", "Homepage": "https://github.com/smetj/wishbone-input-livestatus"}, "release_url": "https://pypi.org/project/wishbone_input_livestatus/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "A Wishbone Livestatus input module.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <pre>          __       __    __\n.--.--.--|__.-----|  |--|  |--.-----.-----.-----.\n|  |  |  |  |__ --|     |  _  |  _  |     |  -__|\n|________|__|_____|__|__|_____|_____|__|__|_____|\n                                   version 2.1.2\n\nBuild composable event pipeline servers with minimal effort.\n\n\n=========================\nwishbone.input.livestatus\n=========================\n\nVersion: 1.0.0\n\nQueries Livestatus at the chosen interval.\n------------------------------------------\n\n\n    Queries LiveStatus with the predefined query and returns each returned\n    record as new event\n\n\n    Parameters:\n\n        - host(str)(\"127.0.0.1\")\n           |  The Livestatus address/hostname to connect to.\n\n        - port(int)(6557)\n           |  Explaining the parameter.\n\n        - timeout(int)(10)\n           |  Timeout in seconds to connect.\n\n        - query(str)(\"GET Status\")\n           |  The query to execute\n\n        - interval(int)(10)\n           |  The interval to query\n\n    Queues:\n\n        - outbox\n           |  A description of the queue\n</pre>\n\n          </div>"}, "last_serial": 2031520, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "8aa9ebe59d1770119bba1bbd105ef897", "sha256": "f77c856fe7f6fae92da3f8f406e9c345f3479f45d8535bc2023c31865412a677"}, "downloads": -1, "filename": "wishbone_input_livestatus-1.0.0.tar.gz", "has_sig": false, "md5_digest": "8aa9ebe59d1770119bba1bbd105ef897", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3447, "upload_time": "2016-03-28T11:20:18", "upload_time_iso_8601": "2016-03-28T11:20:18.653075Z", "url": "https://files.pythonhosted.org/packages/ad/1d/8cbde0c6309519046dc0086345cde641a283532472cb4ec6ba238d195984/wishbone_input_livestatus-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8aa9ebe59d1770119bba1bbd105ef897", "sha256": "f77c856fe7f6fae92da3f8f406e9c345f3479f45d8535bc2023c31865412a677"}, "downloads": -1, "filename": "wishbone_input_livestatus-1.0.0.tar.gz", "has_sig": false, "md5_digest": "8aa9ebe59d1770119bba1bbd105ef897", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3447, "upload_time": "2016-03-28T11:20:18", "upload_time_iso_8601": "2016-03-28T11:20:18.653075Z", "url": "https://files.pythonhosted.org/packages/ad/1d/8cbde0c6309519046dc0086345cde641a283532472cb4ec6ba238d195984/wishbone_input_livestatus-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:28:36 2020"}