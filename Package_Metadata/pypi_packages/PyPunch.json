{"info": {"author": "TheToddLuci0", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# PyPunch\n### Python Punch Card Maker\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=TheToddLuci0_PyPunch&metric=alert_status)](https://sonarcloud.io/dashboard?id=TheToddLuci0_PyPunch)\n[![PyPI version fury.io](https://badge.fury.io/py/PyPunch.svg)](https://pypi.python.org/pypi/PyPunch/)\n[![GitHub license](https://img.shields.io/github/license/TheToddLuci0/PyPunch.svg)](https://github.com/TheToddLuci0/PyPunch/blob/master/LICENSE)\n\n\n## Overview\nThis package creates a simple graphical representation of an old IBM 029 keypunch puchcard.\nBy default, saves the punch card to `out_card.png`. This can be changed by specifying a different\nfilepath (see below). It uses Pillow internally, so _most_ image types are supported, depending on\nfilename extension.\n\n\n## Usage\nThe following methods are available: \n<hr>\n\n`PyPunch.build_card(command: str = \"Example Command\", out_file=\"out_card.png\")`:\n\nThis is the main function of this module. Optionally takes a command and a filename, then generates\na punch card with this command, and saves it at `out_file`. \n\n***NOTE: THIS IS NOT A COMPILER!***\nThe output of this module is just an encoded string. Compilation is much more complex, and requires\nknowledge of the whole program and system architecture, and is therefore left as an exercise for the\nreader.\n<hr>\n\n`PyPunch.mappings`:\n\nThis is a dict consisting of valid characters mapped to a list of the positions that need to be punched \nout of the card. For example, `'I': (0, 11)` indicates that punching I requires a punch in positions 0 \nand 11. \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TheToddLuci0/PyPunch", "keywords": "punchcard", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "PyPunch", "package_url": "https://pypi.org/project/PyPunch/", "platform": "", "project_url": "https://pypi.org/project/PyPunch/", "project_urls": {"Homepage": "https://github.com/TheToddLuci0/PyPunch"}, "release_url": "https://pypi.org/project/PyPunch/1.0.0/", "requires_dist": ["pillow"], "requires_python": ">=3", "summary": "A Punchcard generation package", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyPunch</h1>\n<h3>Python Punch Card Maker</h3>\n<p><a href=\"https://sonarcloud.io/dashboard?id=TheToddLuci0_PyPunch\" rel=\"nofollow\"><img alt=\"Quality Gate Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/331d4fc8f5bf0ab7a896e39fb13006a5cc147649/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d546865546f64644c756369305f507950756e6368266d65747269633d616c6572745f737461747573\"></a>\n<a href=\"https://pypi.python.org/pypi/PyPunch/\" rel=\"nofollow\"><img alt=\"PyPI version fury.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d1b2159ea330ed47bd19bf39de6da0c5dac2920c/68747470733a2f2f62616467652e667572792e696f2f70792f507950756e63682e737667\"></a>\n<a href=\"https://github.com/TheToddLuci0/PyPunch/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/488508ba4d10d2d975c1e482bd7963a874d2502b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f546865546f64644c756369302f507950756e63682e737667\"></a></p>\n<h2>Overview</h2>\n<p>This package creates a simple graphical representation of an old IBM 029 keypunch puchcard.\nBy default, saves the punch card to <code>out_card.png</code>. This can be changed by specifying a different\nfilepath (see below). It uses Pillow internally, so <em>most</em> image types are supported, depending on\nfilename extension.</p>\n<h2>Usage</h2>\n<p>The following methods are available:</p>\n<hr>\n<p><code>PyPunch.build_card(command: str = \"Example Command\", out_file=\"out_card.png\")</code>:</p>\n<p>This is the main function of this module. Optionally takes a command and a filename, then generates\na punch card with this command, and saves it at <code>out_file</code>.</p>\n<p><em><strong>NOTE: THIS IS NOT A COMPILER!</strong></em>\nThe output of this module is just an encoded string. Compilation is much more complex, and requires\nknowledge of the whole program and system architecture, and is therefore left as an exercise for the\nreader.</p>\n<hr>\n<p><code>PyPunch.mappings</code>:</p>\n<p>This is a dict consisting of valid characters mapped to a list of the positions that need to be punched\nout of the card. For example, <code>'I': (0, 11)</code> indicates that punching I requires a punch in positions 0\nand 11.</p>\n\n          </div>"}, "last_serial": 6172779, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "6e2ed9d83e67e0f9becc18674f18353b", "sha256": "9d93dda94a8d9d7bdc6b13d31b9dc559ce005182305a1a4ebbc1fbab3f2ae93d"}, "downloads": -1, "filename": "PyPunch-1.0.0-py3-none-any.whl", "has_sig": true, "md5_digest": "6e2ed9d83e67e0f9becc18674f18353b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 121486, "upload_time": "2019-11-21T03:17:16", "upload_time_iso_8601": "2019-11-21T03:17:16.421276Z", "url": "https://files.pythonhosted.org/packages/f7/13/f4833cb8be4f8ed30e004d02d8d8c3f5821ee1681148a622f9dadfa1c619/PyPunch-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ecd7eafe3a465f1a0092b75cb2d41b1", "sha256": "ae2cae303220fd620172fa48a01760a4da9005243bf21e6175bb45064ed3e1c7"}, "downloads": -1, "filename": "PyPunch-1.0.0.tar.gz", "has_sig": true, "md5_digest": "6ecd7eafe3a465f1a0092b75cb2d41b1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 121932, "upload_time": "2019-11-21T03:17:19", "upload_time_iso_8601": "2019-11-21T03:17:19.444607Z", "url": "https://files.pythonhosted.org/packages/18/a6/76380f1cdcab38ec470f0a136f33e1964a877398c6e0d0c9f5e09a2b11c8/PyPunch-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6e2ed9d83e67e0f9becc18674f18353b", "sha256": "9d93dda94a8d9d7bdc6b13d31b9dc559ce005182305a1a4ebbc1fbab3f2ae93d"}, "downloads": -1, "filename": "PyPunch-1.0.0-py3-none-any.whl", "has_sig": true, "md5_digest": "6e2ed9d83e67e0f9becc18674f18353b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 121486, "upload_time": "2019-11-21T03:17:16", "upload_time_iso_8601": "2019-11-21T03:17:16.421276Z", "url": "https://files.pythonhosted.org/packages/f7/13/f4833cb8be4f8ed30e004d02d8d8c3f5821ee1681148a622f9dadfa1c619/PyPunch-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ecd7eafe3a465f1a0092b75cb2d41b1", "sha256": "ae2cae303220fd620172fa48a01760a4da9005243bf21e6175bb45064ed3e1c7"}, "downloads": -1, "filename": "PyPunch-1.0.0.tar.gz", "has_sig": true, "md5_digest": "6ecd7eafe3a465f1a0092b75cb2d41b1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 121932, "upload_time": "2019-11-21T03:17:19", "upload_time_iso_8601": "2019-11-21T03:17:19.444607Z", "url": "https://files.pythonhosted.org/packages/18/a6/76380f1cdcab38ec470f0a136f33e1964a877398c6e0d0c9f5e09a2b11c8/PyPunch-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:58 2020"}