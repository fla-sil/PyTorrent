{"info": {"author": "Federico Calendino", "author_email": "federico@calendino.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# nintendeals\n> \"nintendeals was a bot, he loved learning and deals on nintendo's eshop.\" **LetsFunHans** \ud83d\udcac\ufe0f\n\n[![Version](https://img.shields.io/pypi/v/nintendeals?logo=pypi)](https://pypi.org/project/nintendeals)\n[![Build Status](https://img.shields.io/travis/fedecalendino/nintendeals/master?logo=travis)](https://travis-ci.com/fedecalendino/nintendeals)\n[![Quality Gate Status](https://img.shields.io/sonar/alert_status/fedecalendino_nintendeals?logo=sonarcloud&server=https://sonarcloud.io)](https://sonarcloud.io/dashboard?id=fedecalendino_nintendeals)\n[![CodeCoverage](https://img.shields.io/codecov/c/gh/fedecalendino/nintendeals?logo=codecov)](https://codecov.io/gh/fedecalendino/nintendeals)\n\n\n-----\n\nNamed after the my old [reddit bot](https://reddit.com/u/nintendeals), nintendeals is now a library with \nall the scrapers and integrations of nintendo services that I used.\n\n\n## Terminology\n\nBefore getting into any details first we need too get into the same page with a few terms:\n\n### Region\n\nHere we have three regions NA, EU and JP each one corresponding to Nintendo of America (NoA), Nintendo of Europe (NoE)\nand Nintendo of Japan (NoJ). Each of these regions have set of countries they are \"in charge of\":\n\nNoA:\n  * Canada\n  * Mexico\n  * United Stated\n\nNoE:\n  * Every country in the European Union\n  * Australia\n  * New Zealand\n  * South Africa\n\nNoJ:\n  * Japan\n\n### nsuid\n\nAn nsuid is a 14 digit long string which Nintendo uses to identify games on each region. \nTaking Breath of the Wild as an example, we have these 3 nsuids for it (one per region):\n\n* \"70010000000025\" (NA)\n* \"70010000000023\" (EU)\n* \"70010000000026\" (JP)\n\n### Product Code\n\nThe product code is another type of ID that Nintendo uses, it usually is a 8/9 character long string.\nTaking Splatoon 2 as an example, we have these 3 product codes for it (one per region):\n\n* \"HACP**AAB6**B\" (NA)\n* \"HACP**AAB6**C\" (EU)\n* \"HAC**AAB6**A\" (JP)\n\nThe difference with the nsuid is that (as you can see bolded) the product code has a constant between all regions, \nand this is what I decided to call [unique_id](https://github.com/fedecalendino/nintendeals/blob/master/nintendeals/classes/games.py#L55) \nand it is what we can you to join a game across all regions.\n\nYou can also see this code in the front of your Nintendo Switch [cartridge](https://media.karousell.com/media/photos/products/2019/08/17/splatoon_2_cartridge_only_1566040350_4f38e061_progressive.jpg).\n\n## Services\n\nThis library provides three types of services: Info, Listing, Searching and Pricing. Each region has a different \nversion of Info, Listing and Searching, but Pricing is the same for all as it only requires a country and an nsuid.\n\n### Listing\n\nEven thought there are different version for each region, they all work in the same way. Given a supported \nplatform ([for this library](https://github.com/fedecalendino/nintendeals/blob/master/nintendeals/constants.py#L15))\nthey will retrieve a list games in the selected region (in the form of an iterator).\n\n```python\nfrom nintendeals import noa\n\nfor game in noa.list_switch_games():\n    print(game.title, \"/\", game.nsuid)\n```\n\n```text\n>> ARMS / 70010000000392\n>> Astro Duel Deluxe / 70010000000301\n>> Axiom Verge / 70010000000821\n>> Azure Striker GUNVOLT: STRIKER PACK / 70010000000645\n>> Beach Buggy Racing / 70010000000721\n```\n\n```python\nfrom nintendeals import noe\n\nfor game in noe.list_switch_games():\n    print(game.title, \"/\", game.nsuid)\n```\n\n```text\n>> I and Me / 70010000000314\n>> In Between / 70010000009184\n>> Ghost 1.0 / 70010000001386\n>> Resident Evil 0 / 70010000012848\n>> 64.0 / 70010000020867\n```\n\n### Searching\n\nBuilt on top of the listing services, these provide a simple way to search for games by title or release_date:\n\n```python\nfrom nintendeals import noa\n\nfor game in noa.search_switch_games(title=\"Zelda\"):\n    print(game.title, \"/\", game.nsuid)\n```\n\n```text\n>>> The Legend of Zelda: Breath of the Wild / 70010000000025\n>>> The Legend of Zelda: Breath of the Wild - Master Edition / None\n>>> The Legend of Zelda: Breath of the Wild - Special Edition / None\n>>> The Legend of Zelda: Breath of the Wild Explorer's Edition / None\n>>> The Legend of Zelda: Breath of the Wild: Starter Pack / None\n>>> The Legend of Zelda: Link's Awakening / 70010000020033\n>>> The Legend of Zelda: Link's Awakening: Dreamer Edition / None\n>>> Cadence of Hyrule - Crypt of the NecroDancer Featuring the Legend of Zelda / 70010000021364\n```\n\n```python\nfrom datetime import datetime\nfrom nintendeals import noe\n\nfor game in noe.search_switch_games(\n    title=\"Hollow Knight\",\n    released_before=datetime(2018, 12, 31)\n):\n    print(game.title, \"/\", game.nsuid)\n```\n\n```text\n>> Hollow Knight / 70010000003207\n```\n\n\n### Info\n\nOnce you have the nsuid of the game that you want, you can call the `game_info` service. And again, each region has their\nown version but they all work the same, but keep in mind that you need to use the correct nsuid for each region.\nComing back to the nsuid of Breath of the Wild as an example:\n\n```python\nfrom nintendeals import noa\n\ngame = noa.game_info(nsuid=\"70010000000025\")\nprint(game.title)\nprint(game.unique_id)\nprint(game.release_date)\nprint(game.players)\nprint(game.dlc)\n```\n\n```text\nThe Legend of Zelda\u2122: Breath of the Wild\nAAAA\n2017-03-03 00:00:00\n1\nTrue\n```\n\n```python\nfrom nintendeals import noe\n\ngame = noe.game_info(nsuid=\"70010000000023\")\nprint(game.title)\nprint(game.unique_id)\nprint(game.release_date)\nprint(game.players)\nprint(game.dlc)\n```\n\n```text\n>> The Legend of Zelda: Breath of the Wild\n>> AAAA\n>> 2017-03-03 00:00:00\n>> 1\n>> True\n```\n\n> Keep in mind that each call to these services will trigger a call to a nintendo eshop website.\n\n### Pricing\n\nGiven a country code (using the alpha-2 iso standard) and a game or list of games this service will fetch the current \npricing of that/those games for that country. Since this service uses nsuids to fetch the price, make sure that the\ngames that you provide have the regional nsuid that matches the country that you want. For example, only the nsuid for\nthe American region will be able to fetch you the prices of Canada, Mexico and United Stated but not for Japan or Spain.\n\n```python\nfrom nintendeals import noe\nfrom nintendeals.api import prices\n\ngame = noe.game_info(country=\"70010000007705\")\nprint(game.title)\nprint()\n\nprice = prices.get_price(country=\"CZ\", game=game)  # Czech Republic\nprint(price.currency)\nprint(price.value)\nprint(price.sale_discount, \"%\")\nprint(price.sale_value)\nprint(price.sale_start)\nprint(price.sale_end)\n\n# Alternatively you can do this for the same effect:\nprice = game.price(country=\"CZ\") \n``` \n\n```text\nDead Cells\n\nCZK\n625.0\n80 %\n500.0\n2020-04-19 22:00:00\n2020-05-03 21:59:59\n```\n\nTo reduce the amount of call to the prices api, you can also use the `get_prices` service that works in a similar way\nbut it expects a list of games instead of only one:\n\n```python\nfrom nintendeals import noa\nfrom nintendeals.api import prices\n\nbotw = noa.game_info(nsuid=\"70010000000025\")\nprint(botw.title)\nceleste = noa.game_info(nsuid=\"70010000006442\")\nprint(celeste.title)\n\nprices = prices.get_prices(country=\"US\", games=[botw, celeste])\n\nfor nsuid, price in prices:\n    print(nsuid)\n    print(price.value)\n    print(price.sale_value)\n    print()\n```\n\n```text\nThe Legend of Zelda\u2122: Breath of the Wild\nCeleste\n\n70010000000025\n59.99\nNone\n\n70010000006442\n19.99\n4.99\n```\n\n\n## To Do list\n\n* Improve exception management for unexisting games or prices\n* Improve performance\n* Lazy attributes on Game class to reduce scraping.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fedecalendino/nintendeals", "keywords": "nintendo,eshop,deals", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "nintendeals", "package_url": "https://pypi.org/project/nintendeals/", "platform": "", "project_url": "https://pypi.org/project/nintendeals/", "project_urls": {"Homepage": "https://github.com/fedecalendino/nintendeals"}, "release_url": "https://pypi.org/project/nintendeals/1.2/", "requires_dist": ["algoliasearch", "beautifulsoup4", "pycountry", "python-dateutil", "requests", "xmltodict"], "requires_python": "", "summary": "Scraping tools for Nintendo games and prices on NA, EU and JP.", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>nintendeals</h1>\n<blockquote>\n<p>\"nintendeals was a bot, he loved learning and deals on nintendo's eshop.\" <strong>LetsFunHans</strong> \ud83d\udcac\ufe0f</p>\n</blockquote>\n<p><a href=\"https://pypi.org/project/nintendeals\" rel=\"nofollow\"><img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/378ce7fdbb8cee25a6f3a1cd54a71d9d02f20f65/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6e696e74656e6465616c733f6c6f676f3d70797069\"></a>\n<a href=\"https://travis-ci.com/fedecalendino/nintendeals\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ec716c8e010f524d7cd2b0f1ef6369a8291908e/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6665646563616c656e64696e6f2f6e696e74656e6465616c732f6d61737465723f6c6f676f3d747261766973\"></a>\n<a href=\"https://sonarcloud.io/dashboard?id=fedecalendino_nintendeals\" rel=\"nofollow\"><img alt=\"Quality Gate Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f5a41495671ee5b2a14f46627dea453999b356a0/68747470733a2f2f696d672e736869656c64732e696f2f736f6e61722f616c6572745f7374617475732f6665646563616c656e64696e6f5f6e696e74656e6465616c733f6c6f676f3d736f6e6172636c6f7564267365727665723d68747470733a2f2f736f6e6172636c6f75642e696f\"></a>\n<a href=\"https://codecov.io/gh/fedecalendino/nintendeals\" rel=\"nofollow\"><img alt=\"CodeCoverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5116e9b6d6b27c927b2842e04205fe5e159784e2/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f67682f6665646563616c656e64696e6f2f6e696e74656e6465616c733f6c6f676f3d636f6465636f76\"></a></p>\n<hr>\n<p>Named after the my old <a href=\"https://reddit.com/u/nintendeals\" rel=\"nofollow\">reddit bot</a>, nintendeals is now a library with\nall the scrapers and integrations of nintendo services that I used.</p>\n<h2>Terminology</h2>\n<p>Before getting into any details first we need too get into the same page with a few terms:</p>\n<h3>Region</h3>\n<p>Here we have three regions NA, EU and JP each one corresponding to Nintendo of America (NoA), Nintendo of Europe (NoE)\nand Nintendo of Japan (NoJ). Each of these regions have set of countries they are \"in charge of\":</p>\n<p>NoA:</p>\n<ul>\n<li>Canada</li>\n<li>Mexico</li>\n<li>United Stated</li>\n</ul>\n<p>NoE:</p>\n<ul>\n<li>Every country in the European Union</li>\n<li>Australia</li>\n<li>New Zealand</li>\n<li>South Africa</li>\n</ul>\n<p>NoJ:</p>\n<ul>\n<li>Japan</li>\n</ul>\n<h3>nsuid</h3>\n<p>An nsuid is a 14 digit long string which Nintendo uses to identify games on each region.\nTaking Breath of the Wild as an example, we have these 3 nsuids for it (one per region):</p>\n<ul>\n<li>\"70010000000025\" (NA)</li>\n<li>\"70010000000023\" (EU)</li>\n<li>\"70010000000026\" (JP)</li>\n</ul>\n<h3>Product Code</h3>\n<p>The product code is another type of ID that Nintendo uses, it usually is a 8/9 character long string.\nTaking Splatoon 2 as an example, we have these 3 product codes for it (one per region):</p>\n<ul>\n<li>\"HACP<strong>AAB6</strong>B\" (NA)</li>\n<li>\"HACP<strong>AAB6</strong>C\" (EU)</li>\n<li>\"HAC<strong>AAB6</strong>A\" (JP)</li>\n</ul>\n<p>The difference with the nsuid is that (as you can see bolded) the product code has a constant between all regions,\nand this is what I decided to call <a href=\"https://github.com/fedecalendino/nintendeals/blob/master/nintendeals/classes/games.py#L55\" rel=\"nofollow\">unique_id</a>\nand it is what we can you to join a game across all regions.</p>\n<p>You can also see this code in the front of your Nintendo Switch <a href=\"https://media.karousell.com/media/photos/products/2019/08/17/splatoon_2_cartridge_only_1566040350_4f38e061_progressive.jpg\" rel=\"nofollow\">cartridge</a>.</p>\n<h2>Services</h2>\n<p>This library provides three types of services: Info, Listing, Searching and Pricing. Each region has a different\nversion of Info, Listing and Searching, but Pricing is the same for all as it only requires a country and an nsuid.</p>\n<h3>Listing</h3>\n<p>Even thought there are different version for each region, they all work in the same way. Given a supported\nplatform (<a href=\"https://github.com/fedecalendino/nintendeals/blob/master/nintendeals/constants.py#L15\" rel=\"nofollow\">for this library</a>)\nthey will retrieve a list games in the selected region (in the form of an iterator).</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nintendeals</span> <span class=\"kn\">import</span> <span class=\"n\">noa</span>\n\n<span class=\"k\">for</span> <span class=\"n\">game</span> <span class=\"ow\">in</span> <span class=\"n\">noa</span><span class=\"o\">.</span><span class=\"n\">list_switch_games</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">nsuid</span><span class=\"p\">)</span>\n</pre>\n<pre>&gt;&gt; ARMS / 70010000000392\n&gt;&gt; Astro Duel Deluxe / 70010000000301\n&gt;&gt; Axiom Verge / 70010000000821\n&gt;&gt; Azure Striker GUNVOLT: STRIKER PACK / 70010000000645\n&gt;&gt; Beach Buggy Racing / 70010000000721\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nintendeals</span> <span class=\"kn\">import</span> <span class=\"n\">noe</span>\n\n<span class=\"k\">for</span> <span class=\"n\">game</span> <span class=\"ow\">in</span> <span class=\"n\">noe</span><span class=\"o\">.</span><span class=\"n\">list_switch_games</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">nsuid</span><span class=\"p\">)</span>\n</pre>\n<pre>&gt;&gt; I and Me / 70010000000314\n&gt;&gt; In Between / 70010000009184\n&gt;&gt; Ghost 1.0 / 70010000001386\n&gt;&gt; Resident Evil 0 / 70010000012848\n&gt;&gt; 64.0 / 70010000020867\n</pre>\n<h3>Searching</h3>\n<p>Built on top of the listing services, these provide a simple way to search for games by title or release_date:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nintendeals</span> <span class=\"kn\">import</span> <span class=\"n\">noa</span>\n\n<span class=\"k\">for</span> <span class=\"n\">game</span> <span class=\"ow\">in</span> <span class=\"n\">noa</span><span class=\"o\">.</span><span class=\"n\">search_switch_games</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Zelda\"</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">nsuid</span><span class=\"p\">)</span>\n</pre>\n<pre>&gt;&gt;&gt; The Legend of Zelda: Breath of the Wild / 70010000000025\n&gt;&gt;&gt; The Legend of Zelda: Breath of the Wild - Master Edition / None\n&gt;&gt;&gt; The Legend of Zelda: Breath of the Wild - Special Edition / None\n&gt;&gt;&gt; The Legend of Zelda: Breath of the Wild Explorer's Edition / None\n&gt;&gt;&gt; The Legend of Zelda: Breath of the Wild: Starter Pack / None\n&gt;&gt;&gt; The Legend of Zelda: Link's Awakening / 70010000020033\n&gt;&gt;&gt; The Legend of Zelda: Link's Awakening: Dreamer Edition / None\n&gt;&gt;&gt; Cadence of Hyrule - Crypt of the NecroDancer Featuring the Legend of Zelda / 70010000021364\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nintendeals</span> <span class=\"kn\">import</span> <span class=\"n\">noe</span>\n\n<span class=\"k\">for</span> <span class=\"n\">game</span> <span class=\"ow\">in</span> <span class=\"n\">noe</span><span class=\"o\">.</span><span class=\"n\">search_switch_games</span><span class=\"p\">(</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Hollow Knight\"</span><span class=\"p\">,</span>\n    <span class=\"n\">released_before</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">)</span>\n<span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">nsuid</span><span class=\"p\">)</span>\n</pre>\n<pre>&gt;&gt; Hollow Knight / 70010000003207\n</pre>\n<h3>Info</h3>\n<p>Once you have the nsuid of the game that you want, you can call the <code>game_info</code> service. And again, each region has their\nown version but they all work the same, but keep in mind that you need to use the correct nsuid for each region.\nComing back to the nsuid of Breath of the Wild as an example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nintendeals</span> <span class=\"kn\">import</span> <span class=\"n\">noa</span>\n\n<span class=\"n\">game</span> <span class=\"o\">=</span> <span class=\"n\">noa</span><span class=\"o\">.</span><span class=\"n\">game_info</span><span class=\"p\">(</span><span class=\"n\">nsuid</span><span class=\"o\">=</span><span class=\"s2\">\"70010000000025\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">unique_id</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">release_date</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">players</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">dlc</span><span class=\"p\">)</span>\n</pre>\n<pre>The Legend of Zelda\u2122: Breath of the Wild\nAAAA\n2017-03-03 00:00:00\n1\nTrue\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nintendeals</span> <span class=\"kn\">import</span> <span class=\"n\">noe</span>\n\n<span class=\"n\">game</span> <span class=\"o\">=</span> <span class=\"n\">noe</span><span class=\"o\">.</span><span class=\"n\">game_info</span><span class=\"p\">(</span><span class=\"n\">nsuid</span><span class=\"o\">=</span><span class=\"s2\">\"70010000000023\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">unique_id</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">release_date</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">players</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">dlc</span><span class=\"p\">)</span>\n</pre>\n<pre>&gt;&gt; The Legend of Zelda: Breath of the Wild\n&gt;&gt; AAAA\n&gt;&gt; 2017-03-03 00:00:00\n&gt;&gt; 1\n&gt;&gt; True\n</pre>\n<blockquote>\n<p>Keep in mind that each call to these services will trigger a call to a nintendo eshop website.</p>\n</blockquote>\n<h3>Pricing</h3>\n<p>Given a country code (using the alpha-2 iso standard) and a game or list of games this service will fetch the current\npricing of that/those games for that country. Since this service uses nsuids to fetch the price, make sure that the\ngames that you provide have the regional nsuid that matches the country that you want. For example, only the nsuid for\nthe American region will be able to fetch you the prices of Canada, Mexico and United Stated but not for Japan or Spain.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nintendeals</span> <span class=\"kn\">import</span> <span class=\"n\">noe</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nintendeals.api</span> <span class=\"kn\">import</span> <span class=\"n\">prices</span>\n\n<span class=\"n\">game</span> <span class=\"o\">=</span> <span class=\"n\">noe</span><span class=\"o\">.</span><span class=\"n\">game_info</span><span class=\"p\">(</span><span class=\"n\">country</span><span class=\"o\">=</span><span class=\"s2\">\"70010000007705\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">()</span>\n\n<span class=\"n\">price</span> <span class=\"o\">=</span> <span class=\"n\">prices</span><span class=\"o\">.</span><span class=\"n\">get_price</span><span class=\"p\">(</span><span class=\"n\">country</span><span class=\"o\">=</span><span class=\"s2\">\"CZ\"</span><span class=\"p\">,</span> <span class=\"n\">game</span><span class=\"o\">=</span><span class=\"n\">game</span><span class=\"p\">)</span>  <span class=\"c1\"># Czech Republic</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">price</span><span class=\"o\">.</span><span class=\"n\">currency</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">price</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">price</span><span class=\"o\">.</span><span class=\"n\">sale_discount</span><span class=\"p\">,</span> <span class=\"s2\">\"%\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">price</span><span class=\"o\">.</span><span class=\"n\">sale_value</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">price</span><span class=\"o\">.</span><span class=\"n\">sale_start</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">price</span><span class=\"o\">.</span><span class=\"n\">sale_end</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Alternatively you can do this for the same effect:</span>\n<span class=\"n\">price</span> <span class=\"o\">=</span> <span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">price</span><span class=\"p\">(</span><span class=\"n\">country</span><span class=\"o\">=</span><span class=\"s2\">\"CZ\"</span><span class=\"p\">)</span> \n</pre>\n<pre>Dead Cells\n\nCZK\n625.0\n80 %\n500.0\n2020-04-19 22:00:00\n2020-05-03 21:59:59\n</pre>\n<p>To reduce the amount of call to the prices api, you can also use the <code>get_prices</code> service that works in a similar way\nbut it expects a list of games instead of only one:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nintendeals</span> <span class=\"kn\">import</span> <span class=\"n\">noa</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nintendeals.api</span> <span class=\"kn\">import</span> <span class=\"n\">prices</span>\n\n<span class=\"n\">botw</span> <span class=\"o\">=</span> <span class=\"n\">noa</span><span class=\"o\">.</span><span class=\"n\">game_info</span><span class=\"p\">(</span><span class=\"n\">nsuid</span><span class=\"o\">=</span><span class=\"s2\">\"70010000000025\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">botw</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">)</span>\n<span class=\"n\">celeste</span> <span class=\"o\">=</span> <span class=\"n\">noa</span><span class=\"o\">.</span><span class=\"n\">game_info</span><span class=\"p\">(</span><span class=\"n\">nsuid</span><span class=\"o\">=</span><span class=\"s2\">\"70010000006442\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">celeste</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">)</span>\n\n<span class=\"n\">prices</span> <span class=\"o\">=</span> <span class=\"n\">prices</span><span class=\"o\">.</span><span class=\"n\">get_prices</span><span class=\"p\">(</span><span class=\"n\">country</span><span class=\"o\">=</span><span class=\"s2\">\"US\"</span><span class=\"p\">,</span> <span class=\"n\">games</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">botw</span><span class=\"p\">,</span> <span class=\"n\">celeste</span><span class=\"p\">])</span>\n\n<span class=\"k\">for</span> <span class=\"n\">nsuid</span><span class=\"p\">,</span> <span class=\"n\">price</span> <span class=\"ow\">in</span> <span class=\"n\">prices</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">nsuid</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">price</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">price</span><span class=\"o\">.</span><span class=\"n\">sale_value</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">()</span>\n</pre>\n<pre>The Legend of Zelda\u2122: Breath of the Wild\nCeleste\n\n70010000000025\n59.99\nNone\n\n70010000006442\n19.99\n4.99\n</pre>\n<h2>To Do list</h2>\n<ul>\n<li>Improve exception management for unexisting games or prices</li>\n<li>Improve performance</li>\n<li>Lazy attributes on Game class to reduce scraping.</li>\n</ul>\n\n          </div>"}, "last_serial": 7152522, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "2e4caad19e584b727ec705546f0514b9", "sha256": "c586b64d6eb1578f0806b7710b2913ffd0bcfe57646c1967189c9294aaa92eb2"}, "downloads": -1, "filename": "nintendeals-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2e4caad19e584b727ec705546f0514b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2419, "upload_time": "2020-04-21T12:44:03", "upload_time_iso_8601": "2020-04-21T12:44:03.055056Z", "url": "https://files.pythonhosted.org/packages/bc/45/27835eab1b1c57de4824f1284d89fa9a043c62362d8f7344915c65eb5d96/nintendeals-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5927aa2e4c07422d26aac1a3424bf58e", "sha256": "799d5aa52579a79aedcb684b7c546c5202999411b011ca71cbd77c1b781992ea"}, "downloads": -1, "filename": "nintendeals-0.1.tar.gz", "has_sig": false, "md5_digest": "5927aa2e4c07422d26aac1a3424bf58e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2046, "upload_time": "2020-04-21T12:44:05", "upload_time_iso_8601": "2020-04-21T12:44:05.094414Z", "url": "https://files.pythonhosted.org/packages/11/4a/8c4d54d5def3ab5255e3a663bc0bdbf23c7112e2e68ac3cc319a95dd0b21/nintendeals-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "6c53f152a0e82a1b0deea20d13a347d7", "sha256": "0e9a62c00f19af86ed3663ceadd06d6b311114d97290ebbb934cb0577a2bf16e"}, "downloads": -1, "filename": "nintendeals-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6c53f152a0e82a1b0deea20d13a347d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9281, "upload_time": "2020-04-21T12:57:01", "upload_time_iso_8601": "2020-04-21T12:57:01.227377Z", "url": "https://files.pythonhosted.org/packages/47/fa/e19b0c6cfc63ca98d089376e756bb6c5f12c7351c686aa833ffb017b34d3/nintendeals-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "353f110956d6791b4f9657419936c49a", "sha256": "d35275a74193b8188a314b08d303979711b8f697dcd563bc99cab10e1a03232f"}, "downloads": -1, "filename": "nintendeals-0.2.tar.gz", "has_sig": false, "md5_digest": "353f110956d6791b4f9657419936c49a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6418, "upload_time": "2020-04-21T12:57:02", "upload_time_iso_8601": "2020-04-21T12:57:02.055278Z", "url": "https://files.pythonhosted.org/packages/a0/84/f55cc3585a7e5a4c40fae697c50bd0fd35d7d0c84952fe5d9c9508783640/nintendeals-0.2.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "c67f95f1b90157ef693891d5d7143fa1", "sha256": "b8cf0d87bdf3c0e32ad984b78a66151df3ae5e92ef55716b19822109f3db3182"}, "downloads": -1, "filename": "nintendeals-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c67f95f1b90157ef693891d5d7143fa1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18966, "upload_time": "2020-04-25T15:41:55", "upload_time_iso_8601": "2020-04-25T15:41:55.438902Z", "url": "https://files.pythonhosted.org/packages/63/5c/165bbc5956036baabbfe24c81117148d60a7afdb3d8a2270ebef87111e5d/nintendeals-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee634f1e2d754dcaf3c1c5a8faeea309", "sha256": "6627f93a71e0375c1186523028cba5d14759a4c3a7a67a0bf59b139e3925b8cc"}, "downloads": -1, "filename": "nintendeals-1.0.tar.gz", "has_sig": false, "md5_digest": "ee634f1e2d754dcaf3c1c5a8faeea309", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15223, "upload_time": "2020-04-25T15:41:56", "upload_time_iso_8601": "2020-04-25T15:41:56.494619Z", "url": "https://files.pythonhosted.org/packages/ce/10/3d1c4b812e7f298fca110c25590a05d84e216e3af116dd8b8a22475b3171/nintendeals-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "ac5ef685abd5d97ff8d2a442d9ca5f7e", "sha256": "75cb91539c74aad4066e8ecb9ac591914d6fc5e391f0b8aa3e840d9c4e3e1b6e"}, "downloads": -1, "filename": "nintendeals-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ac5ef685abd5d97ff8d2a442d9ca5f7e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20014, "upload_time": "2020-04-29T22:55:12", "upload_time_iso_8601": "2020-04-29T22:55:12.227160Z", "url": "https://files.pythonhosted.org/packages/f1/4c/05ac56b2c82123a22ef1cf3f9cb125f2555d76a0db06017a8172374beb05/nintendeals-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f84a5f19eaae2ed6a8d7b91fb67ee21", "sha256": "7b1c2867a66d09747971c229d271259fd9d8d8a5dee594fc200bde5da536c668"}, "downloads": -1, "filename": "nintendeals-1.1.tar.gz", "has_sig": false, "md5_digest": "7f84a5f19eaae2ed6a8d7b91fb67ee21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15336, "upload_time": "2020-04-29T22:55:13", "upload_time_iso_8601": "2020-04-29T22:55:13.311736Z", "url": "https://files.pythonhosted.org/packages/00/d9/d4c3dc84ef610e87f3d271a8dce0a211634ceaed593d394148456003aa75/nintendeals-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "afeb8076da0966e2563ae9910f3a5c0c", "sha256": "38ef41e318a00d093a372f586b5fc5224558d09d22e640c7cfef6a9f185e9706"}, "downloads": -1, "filename": "nintendeals-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "afeb8076da0966e2563ae9910f3a5c0c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24269, "upload_time": "2020-05-02T17:12:22", "upload_time_iso_8601": "2020-05-02T17:12:22.537511Z", "url": "https://files.pythonhosted.org/packages/a3/bc/677fc7e223ae379c210bc3422acaac4c571d5ac723fc96f8c20dd3d07f8e/nintendeals-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6301e6107c2c084bd9d55686c9ed3d60", "sha256": "2799250d2afa6b2d150504d35508e3d48976254b65e4c3f0615516da908fed2d"}, "downloads": -1, "filename": "nintendeals-1.2.tar.gz", "has_sig": false, "md5_digest": "6301e6107c2c084bd9d55686c9ed3d60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17243, "upload_time": "2020-05-02T17:12:23", "upload_time_iso_8601": "2020-05-02T17:12:23.410878Z", "url": "https://files.pythonhosted.org/packages/d4/56/fe638a3f87f1b379f098adca68d9cd2a6d662e4443f807c125f2f2814dfa/nintendeals-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "afeb8076da0966e2563ae9910f3a5c0c", "sha256": "38ef41e318a00d093a372f586b5fc5224558d09d22e640c7cfef6a9f185e9706"}, "downloads": -1, "filename": "nintendeals-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "afeb8076da0966e2563ae9910f3a5c0c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24269, "upload_time": "2020-05-02T17:12:22", "upload_time_iso_8601": "2020-05-02T17:12:22.537511Z", "url": "https://files.pythonhosted.org/packages/a3/bc/677fc7e223ae379c210bc3422acaac4c571d5ac723fc96f8c20dd3d07f8e/nintendeals-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6301e6107c2c084bd9d55686c9ed3d60", "sha256": "2799250d2afa6b2d150504d35508e3d48976254b65e4c3f0615516da908fed2d"}, "downloads": -1, "filename": "nintendeals-1.2.tar.gz", "has_sig": false, "md5_digest": "6301e6107c2c084bd9d55686c9ed3d60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17243, "upload_time": "2020-05-02T17:12:23", "upload_time_iso_8601": "2020-05-02T17:12:23.410878Z", "url": "https://files.pythonhosted.org/packages/d4/56/fe638a3f87f1b379f098adca68d9cd2a6d662e4443f807c125f2f2814dfa/nintendeals-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:18 2020"}