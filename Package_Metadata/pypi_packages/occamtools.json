{"info": {"author": "Morten Ledum", "author_email": "morten.ledum@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only"], "description": "OccamTools\n&middot;\n[![Build Status](https://travis-ci.com/mortele/OccamTools.svg?token=81VUNKkUYjZSicZzs1NR&branch=master)](https://travis-ci.com/mortele/OccamTools) [![Codacy Badge](https://api.codacy.com/project/badge/Grade/b91377a289bc42868314310dd6be2b60)](https://www.codacy.com?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=mortele/OccamTools&amp;utm_campaign=Badge_Grade) [![codecov](https://codecov.io/gh/mortele/OccamTools/branch/master/graph/badge.svg?token=IXlriBpSwo)](https://codecov.io/gh/mortele/OccamTools) [![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0) [![PyPI version](https://badge.fury.io/py/occamtools.svg)](https://badge.fury.io/py/occamtools)\n=========\nAnalysis and synthesis tools for [OCCAM](#OCCAM) molecular dynamics/hybrid particle-field simulations.\n\nInput to [OCCAM](#OCCAM) consists mainly of three file types; `fort.1` (simulation metadata), `fort.3` (particle and bond parameters), and `fort.5` (positions and bond structure). The output from the run is a `fort.8` file, adhering to the [`.xyz`](https://en.wikipedia.org/wiki/XYZ_file_format) file format. The `occamtools` python package provides a reader for these file formats (both input and output) and generates a single object containing all the information about the simulation, making analysis of simulation runs and comparison between runs easier.\n\nInstallation\n---------\nInstall by (requires **python >= 3.6**)\n```bash\n> pip install occamtools\n```\n\nUsage\n---------\n**Loading data**\n&middot;\nLoading simulation data is done by\n```python\nimport numpy as np\nfrom occamtools import OccamData\n\ndata = OccamData('your/file/or/directory/here')\n```\nwhere the `data` object now holds all information about the simulation run, e.g. print what kinds of particles a simulation consists of\n```python\nprint('Simulation consists of...')\nfor type_name in data.type_dict:\n    num_type = sum(data.type == data.type_dict[type_name])\n    print(f'  - {num_type} particles of type {type_name}')\n\n# Simulation consists of...\n#   - 400 particles of type H\n#   - 100 particles of type C\n#   - 250 particles of type Ar\n#   ...\n```\nor make a simple plot of particles in a section of the simulation box diffusing (requires `pip install asciichartpy`)\n```python\nfrom asciichartpy import plot\n\nindices = (data.x[0, :] > 20.0) & (data.x[0, :] < 25.0)\ndiffused = data.x[-1, indices]\nbins, hist = np.histogram(diffused)\nprint(plot(bins.tolist(), hist.tolist()))\n\n# 9.00  \u2524  \u256d\u2500\u256e\n# 8.00  \u2524  \u2502 \u2570\u256e\n# 7.00  \u2524  \u2502  \u2502\n# 6.00  \u2524 \u256d\u256f  \u2570\u256e\n# 5.00  \u2524 \u2502    \u2570\u256e\n# 4.00  \u2524 \u2502     \u2502\n# 3.00  \u2524\u256d\u256f     \u2502\n# 2.00  \u2524\u2502      \u2570\u256e\n# 1.00  \u253c\u256f       \u2570\n```\nor plot the deviations of the total kinetic energy from the mean over the simulation run (again requires `pip install asciichartpy`)\n```python\nkinetic_energy_deviations = data.kinetic_energy - np.mean(data.kinetic_energy)\nprint(plot(kinetic_energy_deviations.tolist()))\n\n#  60.53  \u2524            \u256d\u256e\n#  50.62  \u2524            \u2502\u2502  \u256d\u256e\u256d\u256e\n#  40.71  \u2524            \u2502\u2502  \u2502\u2502\u2502\u2502              \u256d\u256e\n#  30.81  \u2524            \u2502\u2502  \u2502\u2502\u2502\u2502              \u2502\u2502     \u256d\u256e    \u256d\u2500\n#  20.90  \u2524 \u256d\u256e         \u2502\u2502  \u2502\u2502\u2502\u2502    \u256d\u2500\u256e       \u2502\u2502     \u2502\u2502    \u2502\n#  10.99  \u2524 \u2502\u2502 \u256d\u2500\u256e \u256d\u256e \u256d\u256f\u2502  \u2502\u2502\u2502\u2502\u256d\u256e  \u2502 \u2502 \u256d\u256e    \u2502\u2502     \u2502\u2502    \u2502\n#  10.09  \u2524 \u2502\u2502 \u2502 \u2502 \u2502\u2502 \u2502 \u2502  \u2502\u2502\u2502\u2502\u2502\u2570\u256e \u2502 \u2570\u256e\u2502\u2502    \u2502\u2502 \u256d\u256e  \u2502\u2502\u256d\u256e\u256d\u256e\u2502\n#   0.18  \u253c\u256e\u2502\u2502 \u2502 \u2502 \u2502\u2502 \u2502 \u2570\u256e \u2502\u2502\u2502\u2570\u256f \u2502 \u2502  \u2570\u256f\u2502\u256d\u256e  \u2502\u2570\u256e\u2502\u2502\u256d\u256e\u2502\u2502\u2502\u2502\u2502\u2502\u2502\n# -00.73  \u2524\u2502\u2502\u2502 \u2502 \u2502 \u2502\u2502 \u2502  \u2570\u2500\u256f\u2502\u2502   \u2502\u256d\u256f    \u2502\u2502\u2570\u2500\u2500\u256f \u2570\u256f\u2502\u2502\u2502\u2502\u2502\u2502\u2502\u2502\u2502\u2502\n# -10.64  \u2524\u2502\u2502\u2502\u256d\u256f \u2502 \u2502\u2502\u256d\u256f     \u2502\u2502   \u2502\u2502     \u2570\u256f       \u2502\u2502\u2502\u2502\u2502\u2502\u2502\u2502\u2570\u256f\n# -20.54  \u2524\u2502\u2502\u2570\u256f  \u2502 \u2502\u2570\u256f      \u2570\u256f   \u2570\u256f              \u2502\u2502\u2502\u2502\u2502\u2502\u2570\u256f\n# -30.45  \u2524\u2570\u256f    \u2570\u2500\u256f                             \u2502\u2502\u2502\u2502\u2570\u256f\n# -40.36  \u2524                                      \u2502\u2502\u2502\u2502\n# -50.26  \u2524                                      \u2502\u2502\u2570\u256f\n# -60.17  \u2524                                      \u2570\u256f\n```\n\n**File storage**\n&middot;\nBehind the scenes, `.npy` (for numpy arrays) and `.json` (for anything else) files are used to represent the simulation data. By default, loading a simulation run causes the saving of small (relative to the original `fort.5/7/8`) binary files containing the data. These are used to load from on subsequent calls. This means calls to `OccamData.load('your/file/here')` of `OccamData('your/file/here')` will be significantly faster *after* the first call. In this specific example, a 25x speedup is achieved (but your mileage may vary).\n![load example](https://i.imgur.com/Wssbx9B.gif)\n\nRunning tests with `tox`\n---------\nAssuming python `3.7` is already installed, install separate `3.6` and `3.8` instances using `pyenv` by\n```bash\n> brew install pyenv\n> pyenv install 3.6.6\n> pyenv install 3.8-dev\n```\nand then inside the `occamtools` directory do\n```bash\n> git clone git@github.com:mortele/OccamTools.git occamtools\n> cd occamtools\n> pyenv local 3.6.6 3.8-dev\n> pip3 install tox-pyenv\n> tox\n```\nwhich will run unit tests (using `pytest`) with python versions `3.6`, `3.7`, and the `3.8` development build.\n\nOCCAM\n---------\nOCCAM is a program for Molecular Dynamics Simulations able to perform Hybrid Particle-Field (PF) Theoretical Molecular Dynamics simulations. This recent PF technique combines molecular dynamics (MD) and self consistent field theory (SCF). [Read more.](http://www.occammd.org/about/)\n\n[![occam-website](http://www.occammd.org/wp-content/uploads/2018/08/cropped-Untitled-2-01-2.png)](http://www.occammd.org/)\n\nChangelog\n---------\n**0.3.3**: Add option to not save `.npy` files when loading `OccamData` objects. Fix a bug causing errors when reading very short `.xyz` files. Fix a bug causing the grid size to not correctly update when using `replace_in_fort3`. <br>\n**0.3.2**: Add testing with python alpha version `3.8-dev`, stream line travis integration and coverage reporting. <br>\n**0.3.1**: Move the `bins` keyword argument to `histogram` from an explicit argument to `**kwargs` handled by `np.histogram`. <br>\n**0.3.0**: Add histogram computation capabilities. <br>\n**0.2.7**: Add the `velocity_traj` flag to `fort1` file reader. <br>\n**0.2.6**: Add proper testing for python `3.6` and `3.7` using [`tox`](https://pypi.org/project/tox/). <br>\n**0.2.5**: Change python version required to `>=3.6` (from `>=3.7`). <br>\n**0.2.4**: Add functionality for reading `.xyz` files with additional velocity information, as output by OCCAM when the `velocity_traj` flag is set in `fort.1`. <br>\n**0.2.3**: Code clean-up. <br>\n**0.2.2**: Extend `repace_in_fort3` to allow for changing compressibility and non-bonded interactions. Fix a bug causing new particle types added to break the chi matrix when writing `fort.3` files. <br>\n**0.2.1**: Update the `__all__` variable of `__init__.py` to reflect newly added classes and methods. <br>\n**0.2.0**: Add functionality for editing `fort.3` files (in-place or creating new ones). <br>\n**0.1.0**: Add functionality for editing `fort.1` files (in-place or creating new ones). <br>", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mortele/OccamTools", "keywords": "", "license": "GPL-3", "maintainer": "", "maintainer_email": "", "name": "occamtools", "package_url": "https://pypi.org/project/occamtools/", "platform": "", "project_url": "https://pypi.org/project/occamtools/", "project_urls": {"Homepage": "https://github.com/mortele/OccamTools"}, "release_url": "https://pypi.org/project/occamtools/0.3.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Analysis and synthesis tools for OCCAM hPF simulations", "version": "0.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>OccamTools\n\u00b7\n<a href=\"https://travis-ci.com/mortele/OccamTools\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b0ad4e624895d92a9fb5e6d787b2a7a94ae79c4/68747470733a2f2f7472617669732d63692e636f6d2f6d6f7274656c652f4f6363616d546f6f6c732e7376673f746f6b656e3d383156554e4b6b55596a5a5369635a7a73314e52266272616e63683d6d6173746572\"></a> <a href=\"https://www.codacy.com?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=mortele/OccamTools&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f60b324916ef08bf6e7be8b6299d6444e720d78e/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6239313337376132383962633432383638333134333130646436626532623630\"></a> <a href=\"https://codecov.io/gh/mortele/OccamTools\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/579779b0190481f2ba2bf276b511119d474dbf27/68747470733a2f2f636f6465636f762e696f2f67682f6d6f7274656c652f4f6363616d546f6f6c732f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d49586c7269427053776f\"></a> <a href=\"https://www.gnu.org/licenses/gpl-3.0\" rel=\"nofollow\"><img alt=\"License: GPL v3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8de17537dd1659a5a076ce547de301e27c839e67/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c76332d626c75652e737667\"></a> <a href=\"https://badge.fury.io/py/occamtools\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cf59325ccc78ad465b054f323ce305d4abbcdde9/68747470733a2f2f62616467652e667572792e696f2f70792f6f6363616d746f6f6c732e737667\"></a></h1>\n<p>Analysis and synthesis tools for <a href=\"#OCCAM\" rel=\"nofollow\">OCCAM</a> molecular dynamics/hybrid particle-field simulations.</p>\n<p>Input to <a href=\"#OCCAM\" rel=\"nofollow\">OCCAM</a> consists mainly of three file types; <code>fort.1</code> (simulation metadata), <code>fort.3</code> (particle and bond parameters), and <code>fort.5</code> (positions and bond structure). The output from the run is a <code>fort.8</code> file, adhering to the <a href=\"https://en.wikipedia.org/wiki/XYZ_file_format\" rel=\"nofollow\"><code>.xyz</code></a> file format. The <code>occamtools</code> python package provides a reader for these file formats (both input and output) and generates a single object containing all the information about the simulation, making analysis of simulation runs and comparison between runs easier.</p>\n<h2>Installation</h2>\n<p>Install by (requires <strong>python &gt;= 3.6</strong>)</p>\n<pre>&gt; pip install occamtools\n</pre>\n<h2>Usage</h2>\n<p><strong>Loading data</strong>\n\u00b7\nLoading simulation data is done by</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">occamtools</span> <span class=\"kn\">import</span> <span class=\"n\">OccamData</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">OccamData</span><span class=\"p\">(</span><span class=\"s1\">'your/file/or/directory/here'</span><span class=\"p\">)</span>\n</pre>\n<p>where the <code>data</code> object now holds all information about the simulation run, e.g. print what kinds of particles a simulation consists of</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Simulation consists of...'</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">type_name</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">type_dict</span><span class=\"p\">:</span>\n    <span class=\"n\">num_type</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">type_dict</span><span class=\"p\">[</span><span class=\"n\">type_name</span><span class=\"p\">])</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'  - </span><span class=\"si\">{</span><span class=\"n\">num_type</span><span class=\"si\">}</span><span class=\"s1\"> particles of type </span><span class=\"si\">{</span><span class=\"n\">type_name</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Simulation consists of...</span>\n<span class=\"c1\">#   - 400 particles of type H</span>\n<span class=\"c1\">#   - 100 particles of type C</span>\n<span class=\"c1\">#   - 250 particles of type Ar</span>\n<span class=\"c1\">#   ...</span>\n</pre>\n<p>or make a simple plot of particles in a section of the simulation box diffusing (requires <code>pip install asciichartpy</code>)</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">asciichartpy</span> <span class=\"kn\">import</span> <span class=\"n\">plot</span>\n\n<span class=\"n\">indices</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">:]</span> <span class=\"o\">&gt;</span> <span class=\"mf\">20.0</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">:]</span> <span class=\"o\">&lt;</span> <span class=\"mf\">25.0</span><span class=\"p\">)</span>\n<span class=\"n\">diffused</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">indices</span><span class=\"p\">]</span>\n<span class=\"n\">bins</span><span class=\"p\">,</span> <span class=\"n\">hist</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">histogram</span><span class=\"p\">(</span><span class=\"n\">diffused</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">bins</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">(),</span> <span class=\"n\">hist</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()))</span>\n\n<span class=\"c1\"># 9.00  \u2524  \u256d\u2500\u256e</span>\n<span class=\"c1\"># 8.00  \u2524  \u2502 \u2570\u256e</span>\n<span class=\"c1\"># 7.00  \u2524  \u2502  \u2502</span>\n<span class=\"c1\"># 6.00  \u2524 \u256d\u256f  \u2570\u256e</span>\n<span class=\"c1\"># 5.00  \u2524 \u2502    \u2570\u256e</span>\n<span class=\"c1\"># 4.00  \u2524 \u2502     \u2502</span>\n<span class=\"c1\"># 3.00  \u2524\u256d\u256f     \u2502</span>\n<span class=\"c1\"># 2.00  \u2524\u2502      \u2570\u256e</span>\n<span class=\"c1\"># 1.00  \u253c\u256f       \u2570</span>\n</pre>\n<p>or plot the deviations of the total kinetic energy from the mean over the simulation run (again requires <code>pip install asciichartpy</code>)</p>\n<pre><span class=\"n\">kinetic_energy_deviations</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">kinetic_energy</span> <span class=\"o\">-</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">kinetic_energy</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">kinetic_energy_deviations</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()))</span>\n\n<span class=\"c1\">#  60.53  \u2524            \u256d\u256e</span>\n<span class=\"c1\">#  50.62  \u2524            \u2502\u2502  \u256d\u256e\u256d\u256e</span>\n<span class=\"c1\">#  40.71  \u2524            \u2502\u2502  \u2502\u2502\u2502\u2502              \u256d\u256e</span>\n<span class=\"c1\">#  30.81  \u2524            \u2502\u2502  \u2502\u2502\u2502\u2502              \u2502\u2502     \u256d\u256e    \u256d\u2500</span>\n<span class=\"c1\">#  20.90  \u2524 \u256d\u256e         \u2502\u2502  \u2502\u2502\u2502\u2502    \u256d\u2500\u256e       \u2502\u2502     \u2502\u2502    \u2502</span>\n<span class=\"c1\">#  10.99  \u2524 \u2502\u2502 \u256d\u2500\u256e \u256d\u256e \u256d\u256f\u2502  \u2502\u2502\u2502\u2502\u256d\u256e  \u2502 \u2502 \u256d\u256e    \u2502\u2502     \u2502\u2502    \u2502</span>\n<span class=\"c1\">#  10.09  \u2524 \u2502\u2502 \u2502 \u2502 \u2502\u2502 \u2502 \u2502  \u2502\u2502\u2502\u2502\u2502\u2570\u256e \u2502 \u2570\u256e\u2502\u2502    \u2502\u2502 \u256d\u256e  \u2502\u2502\u256d\u256e\u256d\u256e\u2502</span>\n<span class=\"c1\">#   0.18  \u253c\u256e\u2502\u2502 \u2502 \u2502 \u2502\u2502 \u2502 \u2570\u256e \u2502\u2502\u2502\u2570\u256f \u2502 \u2502  \u2570\u256f\u2502\u256d\u256e  \u2502\u2570\u256e\u2502\u2502\u256d\u256e\u2502\u2502\u2502\u2502\u2502\u2502\u2502</span>\n<span class=\"c1\"># -00.73  \u2524\u2502\u2502\u2502 \u2502 \u2502 \u2502\u2502 \u2502  \u2570\u2500\u256f\u2502\u2502   \u2502\u256d\u256f    \u2502\u2502\u2570\u2500\u2500\u256f \u2570\u256f\u2502\u2502\u2502\u2502\u2502\u2502\u2502\u2502\u2502\u2502</span>\n<span class=\"c1\"># -10.64  \u2524\u2502\u2502\u2502\u256d\u256f \u2502 \u2502\u2502\u256d\u256f     \u2502\u2502   \u2502\u2502     \u2570\u256f       \u2502\u2502\u2502\u2502\u2502\u2502\u2502\u2502\u2570\u256f</span>\n<span class=\"c1\"># -20.54  \u2524\u2502\u2502\u2570\u256f  \u2502 \u2502\u2570\u256f      \u2570\u256f   \u2570\u256f              \u2502\u2502\u2502\u2502\u2502\u2502\u2570\u256f</span>\n<span class=\"c1\"># -30.45  \u2524\u2570\u256f    \u2570\u2500\u256f                             \u2502\u2502\u2502\u2502\u2570\u256f</span>\n<span class=\"c1\"># -40.36  \u2524                                      \u2502\u2502\u2502\u2502</span>\n<span class=\"c1\"># -50.26  \u2524                                      \u2502\u2502\u2570\u256f</span>\n<span class=\"c1\"># -60.17  \u2524                                      \u2570\u256f</span>\n</pre>\n<p><strong>File storage</strong>\n\u00b7\nBehind the scenes, <code>.npy</code> (for numpy arrays) and <code>.json</code> (for anything else) files are used to represent the simulation data. By default, loading a simulation run causes the saving of small (relative to the original <code>fort.5/7/8</code>) binary files containing the data. These are used to load from on subsequent calls. This means calls to <code>OccamData.load('your/file/here')</code> of <code>OccamData('your/file/here')</code> will be significantly faster <em>after</em> the first call. In this specific example, a 25x speedup is achieved (but your mileage may vary).\n<img alt=\"load example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5ad9d46a0ccaaa79db505d3d520c1c88a3e0d511/68747470733a2f2f692e696d6775722e636f6d2f577373627839422e676966\"></p>\n<h2>Running tests with <code>tox</code></h2>\n<p>Assuming python <code>3.7</code> is already installed, install separate <code>3.6</code> and <code>3.8</code> instances using <code>pyenv</code> by</p>\n<pre>&gt; brew install pyenv\n&gt; pyenv install <span class=\"m\">3</span>.6.6\n&gt; pyenv install <span class=\"m\">3</span>.8-dev\n</pre>\n<p>and then inside the <code>occamtools</code> directory do</p>\n<pre>&gt; git clone git@github.com:mortele/OccamTools.git occamtools\n&gt; <span class=\"nb\">cd</span> occamtools\n&gt; pyenv <span class=\"nb\">local</span> <span class=\"m\">3</span>.6.6 <span class=\"m\">3</span>.8-dev\n&gt; pip3 install tox-pyenv\n&gt; tox\n</pre>\n<p>which will run unit tests (using <code>pytest</code>) with python versions <code>3.6</code>, <code>3.7</code>, and the <code>3.8</code> development build.</p>\n<h2>OCCAM</h2>\n<p>OCCAM is a program for Molecular Dynamics Simulations able to perform Hybrid Particle-Field (PF) Theoretical Molecular Dynamics simulations. This recent PF technique combines molecular dynamics (MD) and self consistent field theory (SCF). <a href=\"http://www.occammd.org/about/\" rel=\"nofollow\">Read more.</a></p>\n<p><a href=\"http://www.occammd.org/\" rel=\"nofollow\"><img alt=\"occam-website\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c53b45972c4ea6cf6b4814abab8804dfc74edc8/687474703a2f2f7777772e6f6363616d6d642e6f72672f77702d636f6e74656e742f75706c6f6164732f323031382f30382f63726f707065642d556e7469746c65642d322d30312d322e706e67\"></a></p>\n<h2>Changelog</h2>\n<p><strong>0.3.3</strong>: Add option to not save <code>.npy</code> files when loading <code>OccamData</code> objects. Fix a bug causing errors when reading very short <code>.xyz</code> files. Fix a bug causing the grid size to not correctly update when using <code>replace_in_fort3</code>. <br>\n<strong>0.3.2</strong>: Add testing with python alpha version <code>3.8-dev</code>, stream line travis integration and coverage reporting. <br>\n<strong>0.3.1</strong>: Move the <code>bins</code> keyword argument to <code>histogram</code> from an explicit argument to <code>**kwargs</code> handled by <code>np.histogram</code>. <br>\n<strong>0.3.0</strong>: Add histogram computation capabilities. <br>\n<strong>0.2.7</strong>: Add the <code>velocity_traj</code> flag to <code>fort1</code> file reader. <br>\n<strong>0.2.6</strong>: Add proper testing for python <code>3.6</code> and <code>3.7</code> using <a href=\"https://pypi.org/project/tox/\" rel=\"nofollow\"><code>tox</code></a>. <br>\n<strong>0.2.5</strong>: Change python version required to <code>&gt;=3.6</code> (from <code>&gt;=3.7</code>). <br>\n<strong>0.2.4</strong>: Add functionality for reading <code>.xyz</code> files with additional velocity information, as output by OCCAM when the <code>velocity_traj</code> flag is set in <code>fort.1</code>. <br>\n<strong>0.2.3</strong>: Code clean-up. <br>\n<strong>0.2.2</strong>: Extend <code>repace_in_fort3</code> to allow for changing compressibility and non-bonded interactions. Fix a bug causing new particle types added to break the chi matrix when writing <code>fort.3</code> files. <br>\n<strong>0.2.1</strong>: Update the <code>__all__</code> variable of <code>__init__.py</code> to reflect newly added classes and methods. <br>\n<strong>0.2.0</strong>: Add functionality for editing <code>fort.3</code> files (in-place or creating new ones). <br>\n<strong>0.1.0</strong>: Add functionality for editing <code>fort.1</code> files (in-place or creating new ones). <br></p>\n\n          </div>"}, "last_serial": 5333065, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "13c839716e41ee26f48242ae04da7d5a", "sha256": "76bd300feeeff1ef8c26213e4691fb12af12a9d29f47827a8faf16df00f7cfc5"}, "downloads": -1, "filename": "occamtools-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "13c839716e41ee26f48242ae04da7d5a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 24582, "upload_time": "2019-03-15T14:19:48", "upload_time_iso_8601": "2019-03-15T14:19:48.049423Z", "url": "https://files.pythonhosted.org/packages/9b/c6/8dd4e094602a7606c342ec72726bf280855141d7fabed10e41fcaf9d4349/occamtools-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e2a78996b16da65aa5a332c03fea204", "sha256": "f9f025ec78ea8a6f7c91cbb84835aa731817583a6336910d2424498bd4f53f05"}, "downloads": -1, "filename": "occamtools-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4e2a78996b16da65aa5a332c03fea204", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 61470, "upload_time": "2019-03-15T14:19:50", "upload_time_iso_8601": "2019-03-15T14:19:50.462286Z", "url": "https://files.pythonhosted.org/packages/6f/da/058e5904244a8072ee278503dc8b8ad16519ea2ede78d0e72c438dfd4019/occamtools-0.0.1.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "0277b9e0858173f1d5854cb1bee4ba2f", "sha256": "4da5de4a01adcfed0ca5e558ce3df12031132091281a50e860cf6656636d528b"}, "downloads": -1, "filename": "occamtools-0.0.5.tar.gz", "has_sig": false, "md5_digest": "0277b9e0858173f1d5854cb1bee4ba2f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 58663, "upload_time": "2019-03-15T14:52:48", "upload_time_iso_8601": "2019-03-15T14:52:48.627555Z", "url": "https://files.pythonhosted.org/packages/ff/3a/a2ee2d28244a9a30e9812bf61506cf47b140a47dde55aeb3336fae9220fa/occamtools-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "7e36feb7854f17f09bdecafd5137efa1", "sha256": "82965a0d580b19389a01327bf241f700fe6957791bbf733206f0148d8667189d"}, "downloads": -1, "filename": "occamtools-0.0.6.tar.gz", "has_sig": false, "md5_digest": "7e36feb7854f17f09bdecafd5137efa1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 61214, "upload_time": "2019-03-15T15:08:27", "upload_time_iso_8601": "2019-03-15T15:08:27.478586Z", "url": "https://files.pythonhosted.org/packages/e6/57/118488045765866e766900c1fbf6d4f9cf767cbf3db072d45e45c3dcd205/occamtools-0.0.6.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "51617eb0ab391629c910b70915bb9ecb", "sha256": "ca55edb1c1b97ab249d12cf0235575c1fcc06bac1a6cc2c4282889fb604564a2"}, "downloads": -1, "filename": "occamtools-0.1.0.tar.gz", "has_sig": false, "md5_digest": "51617eb0ab391629c910b70915bb9ecb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 62365, "upload_time": "2019-03-26T11:55:51", "upload_time_iso_8601": "2019-03-26T11:55:51.597082Z", "url": "https://files.pythonhosted.org/packages/39/85/a5f78b79ce1275a707d88609858f1e79e5c1af29d9a600c8491563da1450/occamtools-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "7010ba8fc7e18f888beea819117e6267", "sha256": "a29468543af38e51d01ddd3e1030ecbd6ffd0e81ce00339d52835fe4b5bfa619"}, "downloads": -1, "filename": "occamtools-0.2.0.tar.gz", "has_sig": false, "md5_digest": "7010ba8fc7e18f888beea819117e6267", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 69541, "upload_time": "2019-04-04T13:49:54", "upload_time_iso_8601": "2019-04-04T13:49:54.768977Z", "url": "https://files.pythonhosted.org/packages/e4/9d/b264ccbddba19feb7256f1d43d63ac0de671f90092d7cb0ed5991e33cf03/occamtools-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "7d8bb2364f1fdedefb57ea91686a0828", "sha256": "0528d4e2be94a9d1c155f898b0fff09050f82fca9ce98ddb32c66de45ad7ff0e"}, "downloads": -1, "filename": "occamtools-0.2.1.tar.gz", "has_sig": false, "md5_digest": "7d8bb2364f1fdedefb57ea91686a0828", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 69595, "upload_time": "2019-04-04T14:39:15", "upload_time_iso_8601": "2019-04-04T14:39:15.271602Z", "url": "https://files.pythonhosted.org/packages/23/80/2f688c2f35af46e493e227d1028634ee435931dc95f27ddf2c82edd86aac/occamtools-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "dc9fe893562254a6bf723927927ccb8e", "sha256": "8b569ab105a79d7384450204aedb2356c29bad2d561ed7457906c6606dd72fa6"}, "downloads": -1, "filename": "occamtools-0.2.2.tar.gz", "has_sig": false, "md5_digest": "dc9fe893562254a6bf723927927ccb8e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 70116, "upload_time": "2019-04-04T15:39:54", "upload_time_iso_8601": "2019-04-04T15:39:54.930061Z", "url": "https://files.pythonhosted.org/packages/d1/b3/8dfd3fc7ea4bcb78ceb4106e1afd1de277c8b33c5763cf161db217955ad9/occamtools-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "06cd208debc3502ade20692ead4273f8", "sha256": "ddecbbc3440246a668cd310135e16a59c4b181485e4e35653e24240e8c8a7d6a"}, "downloads": -1, "filename": "occamtools-0.2.3.tar.gz", "has_sig": false, "md5_digest": "06cd208debc3502ade20692ead4273f8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 69993, "upload_time": "2019-04-04T22:40:31", "upload_time_iso_8601": "2019-04-04T22:40:31.485125Z", "url": "https://files.pythonhosted.org/packages/f1/ed/443545924f6f381a6d34cc1dc5f6df4d436d9562006534d251f4d4db1ad1/occamtools-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "22d33209d36eea38bfc888e5bdd7dd16", "sha256": "b850caeaa9c7c61ab8f77794a89dffc64fa15bfd1c938178e0542bb90dc3b603"}, "downloads": -1, "filename": "occamtools-0.2.4.tar.gz", "has_sig": false, "md5_digest": "22d33209d36eea38bfc888e5bdd7dd16", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 71020, "upload_time": "2019-04-05T09:03:36", "upload_time_iso_8601": "2019-04-05T09:03:36.504845Z", "url": "https://files.pythonhosted.org/packages/d3/ff/44fdc1485a3a0155b5e45178d8486eb8d979830a203865b8c2a23ea82b12/occamtools-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "07ee06830497d957508188416ed77c41", "sha256": "5c673e54d20f9c59bd182950688202f326b6a9fcb450b445993ab2519d83a979"}, "downloads": -1, "filename": "occamtools-0.2.5.tar.gz", "has_sig": false, "md5_digest": "07ee06830497d957508188416ed77c41", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 73871, "upload_time": "2019-04-05T14:05:43", "upload_time_iso_8601": "2019-04-05T14:05:43.302087Z", "url": "https://files.pythonhosted.org/packages/0f/01/b6e77c4a5e80dbb13665e2ae65f224b43e29a8d522499f4a8e7c92da243d/occamtools-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "763e09e1bf653000d51d1141dd2c45bc", "sha256": "88dcfc452ac4de0794780664e3559f169eae650ef1fbc120bc1ba322aa514e85"}, "downloads": -1, "filename": "occamtools-0.2.6.tar.gz", "has_sig": false, "md5_digest": "763e09e1bf653000d51d1141dd2c45bc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 74844, "upload_time": "2019-04-05T16:02:22", "upload_time_iso_8601": "2019-04-05T16:02:22.154052Z", "url": "https://files.pythonhosted.org/packages/6c/73/9c5f5e1f01f35af0e2f5ed9706caae4d911970d770ea2125d60428c448b4/occamtools-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "fb7b30c2900fc8c40368c0600e920ed0", "sha256": "e82775926db5b52b19d0b6f14c69360e749de6ccd7ec440ffd2f2f82f419a88c"}, "downloads": -1, "filename": "occamtools-0.2.7.tar.gz", "has_sig": false, "md5_digest": "fb7b30c2900fc8c40368c0600e920ed0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 74875, "upload_time": "2019-04-24T08:44:04", "upload_time_iso_8601": "2019-04-24T08:44:04.353297Z", "url": "https://files.pythonhosted.org/packages/04/de/c7393c645b756ff5bbfb67a4accc5aa35731ba207e1e7c506b76cf129ef5/occamtools-0.2.7.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "98627a3f5c7666d8898b339a5c1b7446", "sha256": "0ed317326fa2939e3f22f59df23ee5a4e51c3548929e3adbd88e450e62a68ab2"}, "downloads": -1, "filename": "occamtools-0.3.0.tar.gz", "has_sig": false, "md5_digest": "98627a3f5c7666d8898b339a5c1b7446", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 76191, "upload_time": "2019-04-24T16:49:32", "upload_time_iso_8601": "2019-04-24T16:49:32.213632Z", "url": "https://files.pythonhosted.org/packages/70/71/25905564325fb1f59f8ed9b64288cea30fd1602259e1b04e895f43d65725/occamtools-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "6cf33c92b2911ca8d722ce5916871339", "sha256": "eefdca9c42a25ce7717ebefab35079b79a02a41db6cbc58b96b8e7fc8f1e859d"}, "downloads": -1, "filename": "occamtools-0.3.1.tar.gz", "has_sig": false, "md5_digest": "6cf33c92b2911ca8d722ce5916871339", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 76185, "upload_time": "2019-04-25T07:55:56", "upload_time_iso_8601": "2019-04-25T07:55:56.677360Z", "url": "https://files.pythonhosted.org/packages/57/b5/39d9096227907a653c5b5d5dfdc43245447c837f10b86e472400138f4cf4/occamtools-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "9a6bc7574939bb5bdaaf9c9a4afd49a4", "sha256": "b3d4e449b13c307d88a09a299d92484eea48564c19a99e801c5071306ac34571"}, "downloads": -1, "filename": "occamtools-0.3.2.tar.gz", "has_sig": false, "md5_digest": "9a6bc7574939bb5bdaaf9c9a4afd49a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 73926, "upload_time": "2019-04-25T12:11:09", "upload_time_iso_8601": "2019-04-25T12:11:09.335064Z", "url": "https://files.pythonhosted.org/packages/9a/42/4d8590fc2b942055f5b000af20d17f57097c2b4238a51cb2acede83d61a6/occamtools-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "4a319e20d92e0d9c516ae144af72c15b", "sha256": "6ae4dbddb9ea8b054dfeb2c72f097c1cdf0f41cfbb9031b070edea1d6d4ed513"}, "downloads": -1, "filename": "occamtools-0.3.3.tar.gz", "has_sig": false, "md5_digest": "4a319e20d92e0d9c516ae144af72c15b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 74397, "upload_time": "2019-05-29T15:59:41", "upload_time_iso_8601": "2019-05-29T15:59:41.490258Z", "url": "https://files.pythonhosted.org/packages/94/18/4f634bf177d08c07afa0385a8d2dbf0d0c6e7bbf87eed489c7de67ca9de2/occamtools-0.3.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4a319e20d92e0d9c516ae144af72c15b", "sha256": "6ae4dbddb9ea8b054dfeb2c72f097c1cdf0f41cfbb9031b070edea1d6d4ed513"}, "downloads": -1, "filename": "occamtools-0.3.3.tar.gz", "has_sig": false, "md5_digest": "4a319e20d92e0d9c516ae144af72c15b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 74397, "upload_time": "2019-05-29T15:59:41", "upload_time_iso_8601": "2019-05-29T15:59:41.490258Z", "url": "https://files.pythonhosted.org/packages/94/18/4f634bf177d08c07afa0385a8d2dbf0d0c6e7bbf87eed489c7de67ca9de2/occamtools-0.3.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:45 2020"}