{"info": {"author": "Remi Rampin", "author_email": "remi.rampin@nyu.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Environment :: Console", "Environment :: Web Environment", "Intended Audience :: End Users/Desktop", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: SQL", "Programming Language :: Unix Shell", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Visualization", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Interpreters", "Topic :: System :: Distributed Computing", "Topic :: Text Processing :: Markup", "Topic :: Utilities"], "description": "CacheFlow\n=========\n\nCacheFlow is a caching workflow engine, capable of executing dataflows while\nreusing previous results where appropriate, for efficiency. It is very\nextensible and can be used in many projects.\n\nGoals\n-----\n\n* \u2611 Python 3 workflow system\n* \u2611 Executes dataflows from JSON or YAML files\n* \u2610 `Can also load from SQL database <https://gitlab.com/remram44/cacheflow/issues/4>`__\n* \u2610 `Parallel execution <https://gitlab.com/remram44/cacheflow/issues/14>`__\n* \u2610 `Streaming/batching <https://gitlab.com/remram44/cacheflow/issues/13>`__\n* \u2611 Extensible: can add new components, new storage formats, new caching mechanism, new executors\n* \u2610 Pluggable: extensions can be installed from PyPI without forking\n* \u2611 Re-usable: can execute workflows by itself, but can also be embedded into applications. Some I plan on developing myself:\n\n  * \u2611 `Literate programming app <https://gitlab.com/remram44/cacheflow/issues/2>`__: snippets or components embedded into a markdown file, which are executed on render (similar to Rmarkdown). Results would be cached, making later rendering fast\n  * \u2610 Integrate in some of my NYU research projects (VisTrails, Vizier, D3M)\n\n* \u2610 `Web-based interface allowing collaborative edition of workflows, with automatic re-execution on change <https://gitlab.com/remram44/cacheflow/issues/11>`__\n\nOther ideas:\n\n* \u2610 Use Jupyter kernels as backends to execute code (giving me quick access to all the languages they support)\n* \u2610 Isolate script execution (to run untrusted Python/... code, for example with Docker)\n\nNon-goals\n---------\n\n* Make a super-scalable and fast workflow execution engine: I'd rather `make executors based on Spark, Dask, Ray <https://gitlab.com/remram44/cacheflow/issues/14>`__ than try to re-implement those from scratch.\n\nStatus\n------\n\nBasic structures are here, extracted from D3M. Execution works. Very few components available. Working on web interface.\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/remram44/cacheflow", "keywords": "workflow,execution,cache,caching,notebook", "license": "BSD-3-Clause", "maintainer": "", "maintainer_email": "", "name": "cacheflow", "package_url": "https://pypi.org/project/cacheflow/", "platform": "", "project_url": "https://pypi.org/project/cacheflow/", "project_urls": {"Homepage": "https://gitlab.com/remram44/cacheflow", "Repository": "https://gitlab.com/remram44/cacheflow"}, "release_url": "https://pypi.org/project/cacheflow/0.3/", "requires_dist": ["PyYAML (>=5.3,<6.0)", "cloudpickle (>=1.2,<2.0)", "markdown (>=3,<4)", "requests (>=2.22,<3.0)", "tornado (>=6.0,<6.1)"], "requires_python": ">=3.6,<4.0", "summary": "Caching Workflow Engine", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>CacheFlow is a caching workflow engine, capable of executing dataflows while\nreusing previous results where appropriate, for efficiency. It is very\nextensible and can be used in many projects.</p>\n<div id=\"goals\">\n<h2>Goals</h2>\n<ul>\n<li>\u2611 Python 3 workflow system</li>\n<li>\u2611 Executes dataflows from JSON or YAML files</li>\n<li>\u2610 <a href=\"https://gitlab.com/remram44/cacheflow/issues/4\" rel=\"nofollow\">Can also load from SQL database</a></li>\n<li>\u2610 <a href=\"https://gitlab.com/remram44/cacheflow/issues/14\" rel=\"nofollow\">Parallel execution</a></li>\n<li>\u2610 <a href=\"https://gitlab.com/remram44/cacheflow/issues/13\" rel=\"nofollow\">Streaming/batching</a></li>\n<li>\u2611 Extensible: can add new components, new storage formats, new caching mechanism, new executors</li>\n<li>\u2610 Pluggable: extensions can be installed from PyPI without forking</li>\n<li>\u2611 Re-usable: can execute workflows by itself, but can also be embedded into applications. Some I plan on developing myself:<ul>\n<li>\u2611 <a href=\"https://gitlab.com/remram44/cacheflow/issues/2\" rel=\"nofollow\">Literate programming app</a>: snippets or components embedded into a markdown file, which are executed on render (similar to Rmarkdown). Results would be cached, making later rendering fast</li>\n<li>\u2610 Integrate in some of my NYU research projects (VisTrails, Vizier, D3M)</li>\n</ul>\n</li>\n<li>\u2610 <a href=\"https://gitlab.com/remram44/cacheflow/issues/11\" rel=\"nofollow\">Web-based interface allowing collaborative edition of workflows, with automatic re-execution on change</a></li>\n</ul>\n<p>Other ideas:</p>\n<ul>\n<li>\u2610 Use Jupyter kernels as backends to execute code (giving me quick access to all the languages they support)</li>\n<li>\u2610 Isolate script execution (to run untrusted Python/\u2026 code, for example with Docker)</li>\n</ul>\n</div>\n<div id=\"non-goals\">\n<h2>Non-goals</h2>\n<ul>\n<li>Make a super-scalable and fast workflow execution engine: I\u2019d rather <a href=\"https://gitlab.com/remram44/cacheflow/issues/14\" rel=\"nofollow\">make executors based on Spark, Dask, Ray</a> than try to re-implement those from scratch.</li>\n</ul>\n</div>\n<div id=\"status\">\n<h2>Status</h2>\n<p>Basic structures are here, extracted from D3M. Execution works. Very few components available. Working on web interface.</p>\n</div>\n\n          </div>"}, "last_serial": 6523427, "releases": {"0.0": [{"comment_text": "", "digests": {"md5": "8e19c1d0285f5356bf5bd08baad61107", "sha256": "15182f8ac224d7c9b74810498cc1750d83ba3b7394b26a521d1f03434109ed9e"}, "downloads": -1, "filename": "cacheflow-0.0.tar.gz", "has_sig": false, "md5_digest": "8e19c1d0285f5356bf5bd08baad61107", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 946, "upload_time": "2018-04-19T12:54:25", "upload_time_iso_8601": "2018-04-19T12:54:25.834935Z", "url": "https://files.pythonhosted.org/packages/e0/28/54ac8b2f42e3d58768e178bc02376b39e335e6052fdce96e229a8180da1b/cacheflow-0.0.tar.gz", "yanked": false}], "0.1": [{"comment_text": "", "digests": {"md5": "599e1f84b7f02a4e66b3692d8b87c857", "sha256": "c5ebf0c8418c708d9e463a6986266b835dc70eec1771f8e25aedbddfa0e1db66"}, "downloads": -1, "filename": "cacheflow-0.1-py3-none-any.whl", "has_sig": true, "md5_digest": "599e1f84b7f02a4e66b3692d8b87c857", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11883, "upload_time": "2018-04-25T14:25:50", "upload_time_iso_8601": "2018-04-25T14:25:50.577689Z", "url": "https://files.pythonhosted.org/packages/2a/eb/f8e3c8f26f321e6b41310b9e1750b71278c41c135cd80ec66d6870081412/cacheflow-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c19e03d2c94df0dda6abbc07b80ebd3c", "sha256": "43b3afe5838d673fd8d31c6685c49e357c40caed30833a9de065fde0db35547b"}, "downloads": -1, "filename": "cacheflow-0.1.tar.gz", "has_sig": true, "md5_digest": "c19e03d2c94df0dda6abbc07b80ebd3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8271, "upload_time": "2018-04-25T14:26:29", "upload_time_iso_8601": "2018-04-25T14:26:29.614517Z", "url": "https://files.pythonhosted.org/packages/b1/64/440a5c17f74c42f96d9e2f5a336ac72aef947cadd08d75ebde9d2172fec9/cacheflow-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "6f3468552cf17c24168e8a43b40ad9bc", "sha256": "dffc74f115db64444ea0c53c473570c4eca13d116a12655a2d9ae8c4f8ce8d03"}, "downloads": -1, "filename": "cacheflow-0.2-py3-none-any.whl", "has_sig": true, "md5_digest": "6f3468552cf17c24168e8a43b40ad9bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 14769, "upload_time": "2020-01-26T20:52:16", "upload_time_iso_8601": "2020-01-26T20:52:16.418862Z", "url": "https://files.pythonhosted.org/packages/cc/5d/04a4b09e6ba0d88a16656958b4d397c9cc0c599662e7895d4440557b4081/cacheflow-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2bfd1254be97e3c0958d007954a2c15", "sha256": "e281696f957473025a060f36e745ce33d9efe5b9fc90be4db947a9eaff44b8fb"}, "downloads": -1, "filename": "cacheflow-0.2.tar.gz", "has_sig": true, "md5_digest": "a2bfd1254be97e3c0958d007954a2c15", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 12574, "upload_time": "2020-01-26T20:52:03", "upload_time_iso_8601": "2020-01-26T20:52:03.825870Z", "url": "https://files.pythonhosted.org/packages/81/0d/200a2bcbce13b4ada0b6e30f942d9daf5f9bdcd2c3f54f3a9439e420f5fd/cacheflow-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "b8c487d37742327556b8b852cd4cfe8c", "sha256": "552569e6207558c132c2fe26eb18fb7b529ef9b0d9622cca7921f2a4af3f1830"}, "downloads": -1, "filename": "cacheflow-0.3-py3-none-any.whl", "has_sig": true, "md5_digest": "b8c487d37742327556b8b852cd4cfe8c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 239986, "upload_time": "2020-01-26T21:06:20", "upload_time_iso_8601": "2020-01-26T21:06:20.036811Z", "url": "https://files.pythonhosted.org/packages/11/18/8677bb2c3b3ca37c286b22abbe61cd0f65fc3f6831f01709670b70082536/cacheflow-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a427d7744302124acc329802c13a96e7", "sha256": "3e9aabef06ae7cbfceb25f3a9e0b672a3ba18a620f8cf957513ddc14caeb0702"}, "downloads": -1, "filename": "cacheflow-0.3.tar.gz", "has_sig": true, "md5_digest": "a427d7744302124acc329802c13a96e7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 232378, "upload_time": "2020-01-26T21:06:10", "upload_time_iso_8601": "2020-01-26T21:06:10.280956Z", "url": "https://files.pythonhosted.org/packages/2d/02/293a2299acd5a4f63188dda52ce341ebbd1f22b4c6e70b28414d225bbb07/cacheflow-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b8c487d37742327556b8b852cd4cfe8c", "sha256": "552569e6207558c132c2fe26eb18fb7b529ef9b0d9622cca7921f2a4af3f1830"}, "downloads": -1, "filename": "cacheflow-0.3-py3-none-any.whl", "has_sig": true, "md5_digest": "b8c487d37742327556b8b852cd4cfe8c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 239986, "upload_time": "2020-01-26T21:06:20", "upload_time_iso_8601": "2020-01-26T21:06:20.036811Z", "url": "https://files.pythonhosted.org/packages/11/18/8677bb2c3b3ca37c286b22abbe61cd0f65fc3f6831f01709670b70082536/cacheflow-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a427d7744302124acc329802c13a96e7", "sha256": "3e9aabef06ae7cbfceb25f3a9e0b672a3ba18a620f8cf957513ddc14caeb0702"}, "downloads": -1, "filename": "cacheflow-0.3.tar.gz", "has_sig": true, "md5_digest": "a427d7744302124acc329802c13a96e7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 232378, "upload_time": "2020-01-26T21:06:10", "upload_time_iso_8601": "2020-01-26T21:06:10.280956Z", "url": "https://files.pythonhosted.org/packages/2d/02/293a2299acd5a4f63188dda52ce341ebbd1f22b4c6e70b28414d225bbb07/cacheflow-0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:43 2020"}