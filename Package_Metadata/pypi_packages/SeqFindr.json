{"info": {"author": "Mitchell Stanton-Cook", "author_email": "m.stantoncook@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 2 :: Only", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Scientific/Engineering :: Visualization"], "description": "SeqFindr\n========\n\nSeqFindr - easily create informative genomic feature plots. It's a \nbioinfomagicians tool to detect the presence or absence of genomic features \ngiven a database describing these features & a set of draft and/or complete \ngenomes. We work with bacterial genomes & as such SeqFindr has only been \ntested with bacterial genomes.\n\n\n**I am on vacation from 08/12/14 -> 06/01/15**. User support will not happen \nin this period. **Stupidly I've done some releases the day/night before I \nleave.** \n\nIf you have problems::\n\n    $ # (sudo if neded)\n    $ pip uninstall SeqFindr\n    $ # Run the above command numerous times to ensure it's gone\n    # pip install SeqFindr==0.33.1\n\n\n.. image:: https://pypip.in/version/SeqFindr/badge.svg\n        :target: https://pypi.python.org/pypi/SeqFindr/\n        :alt: Latest Version\n\n.. image:: https://pypip.in/download/SeqFindr/badge.svg\n        :target: https://pypi.python.org/pypi/SeqFindr/\n        :alt: Downloads\n\n.. image:: https://travis-ci.org/mscook/SeqFindR.svg?branch=master\n        :target: https://travis-ci.org/mscook/SeqFindR\n        :alt: Build status\n\n.. image:: https://landscape.io/github/mscook/SeqFindR/master/landscape.png\n        :target: https://landscape.io/github/mscook/SeqFindR/master\n        :alt: Code Health\n\n\nDocumentation\n-------------\n\nPlease use this README.rst as the core SeqFindr user documentation. \n\nThese are works in progress:\n    * `SeqFindr documentation`_\n    * `SeqFindr official site`_\n\n\nNews\n----\n\n**07/12/14: I am on vacation from 08/12/14 -> 06/01/15**. User support will \nnot happen in this period. **Stupidly I've done some releases the day/night \nbefore I leave.** \n\nIf you have problems::\n\n    $ # (sudo if neded)\n    $ pip uninstall SeqFindr\n    $ # Run the above command numerous times to ensure it's gone\n    # pip install SeqFindr==0.33.1\n\n\n**18/11/14:** Version 0.4.0 now has new\u00a0option --remove_empty_cols. It will \nstrip out entire columns where no hits were detected.\n\n\n**28/07/14:** Fixed a bug where axes were shifted when using newer versions \nof matplotlib. \n\n\n**Important:** Were you using a specific SeqFindr version as a dependency \nfor you project and it has disappeared from PyPI? \n\nWe recently activated a name change of SeqFind*R* to SeqFind*r*. This was to \navoid potential users believing this was a R package. Unfortunately, PyPI \nwhile aware that SeqFindR and SeqFindr were different packages did not like \nthe potential confusion. As a consequence the only resolution was to delete \nSeqFind*R* completely (and losing all PyPI published releases) and registering \nSeqFind*r* and starting fresh. All previous 10 releases, while not available \non PyPi are still available on GitHub. If you require a previous release you \ncan actually do something like this (SeqFindr v0.26)::\n\n    pip install -e git://github.com/mscook/SeqFindr.git@v0.26\n\n\n**Version 0.31.1 released on 10 July 2014.**\n\n**We are now testing SeqFindr builds on both Linux & MacOSX systems.**\n\nBest use \"git log\" for a changelog as the changelog_ for most recent \nchanges/fixes/enhancements may not be up to date.\n\n\nCitation\n--------\n\nCite this Github repository if you use SeqFindr to generate figures \nfor publications:: \n\n    STANTON-COOK M, NF ALIKHAN, FORDE BM, BEN ZAKOUR NL & BEATSON SA^. \n    SeqFindr - easily create informative genomic feature plots.\n    https://github.com/mscook/SeqFindr.\n\nTODO: Couple SeqFindr with ZENODO!\n\n\nInstallation\n------------\n\nSeqFindr is a commandline application. If you're not familiar with the \ncommandline we recommend you ask local IT support to help you install it.\n\nWe now test SeqFindr builds on both Linux (Ubuntu >= 12.04) and MacOSX \n(Mavericks) systems. \n\nYou will need to install/have installed:\n    * ncbiblast >= 2.2.27\n    * python >= 2.7 (**Python 3 is not supported**)\n\nYou can check these are installed by::\n\n    $ python --version\n    $ blastn -version\n\nInstallation of python or blastn (without a package manager) is beyond the \nscope of this document.\n\nIf you have both python and blastn you need to (if not already present) \ninstall pip_.\n\nYou can check if pip_ exists with::\n\n    $ which pip\n\nIf you get a \"not found\", please read the `pip installation instructions`_. \n\n**If you already have pip we do suggest you upgrade it.** We are using version \n1.5.6 at the time of writing this document. \n\nYou can upgrade pip_ like this::\n\n    $ pip install --upgrade pip\n\n\nThe following python libraries_ should be installed (automatically) if you follow \nthe installation instructions detailed below.\n\nWe use the following python libraries_:\n    * numpy >= 1.6.1\n    * scipy >= 0.10.1\n    * matplotlib >= 1.1.0\n    * biopython >= 1.59\n    * ghalton>=0.6\n\nThese libraries will also have dependencies (i.e. atlas, lapack, fortran \ncompilers, freetype and png). **These most likely won't be installed on \nyour computer. Please install these before attempting the installation.**\n\nLinux (Ubuntu)\n~~~~~~~~~~~~~~\n\nSeqFindr uses 3rd party packages that are extremely important for scientific \ncomputing but are notoriously difficult to install. While *pip install * \n*--user SeqFindr* may work we recommend you install these 3rd party packages \nusing apt-get.\n\nRun::\n\n    $ sudo apt-get install python-numpy python-scipy python-matplotlib python-biopython python-dev libatlas-dev liblapack-dev gfortran libfreetype6-dev libfreetype6 libpng-dev \n\nNow pip_ install SeqFindr::\n\n    $ pip install --user SeqFindr\n\nWe use the --user option of pip_ to put SeqFindr in: /home/$USER/.local/bin/\nYou need to add this location to you ~/.bash_profile. \n\nAdd SeqFindr to your path::\n\n    $ echo 'export PATH=$PATH:/home/$USER/.local/bin/' >> ~/.bash_profile\n\nFinally install BLAST+::\n\n    $ sudo apt-get install ncbi-blast+ \n\n**Test it:**\n\nRun::\n\n    $ SeqFindr -h \n    $ python -c 'import SeqFindr; print SeqFindr'\n\n\nMacOSX (Mavericks)\n~~~~~~~~~~~~~~~~~~\n\n**You'll need to have the equivalents of python-dev libatlas-dev liblapack-dev \ngfortran libfreetype6-dev libfreetype6 & libpng-dev installed.** We had no \nproblems installing SeqFindr on a recently acquired OSX Mavericks machine \nusing the homebrew package manager.\n\nThe installed packages on this machine via::\n\n    $ brew list \n\nAre available at this gist_.\n\npip install SeqFindr::\n\n    $ pip install --user SeqFindr\n\nWe use the --user option of pip_ to put SeqFindr in: /home/$USER/.local/bin/\nYou need to add this location to you ~/.bash_profile. \n\nAdd SeqFindr to your path::\n\n    $ echo 'export PATH=$PATH:/home/$USER/.local/bin/' >> ~/.bash_profile\n\nFinally install BLAST+::\n\n    $ sudo brew install blast \n\n**Test it:**\n\nRun::\n\n    $ SeqFindr -h \n    $ python -c 'import SeqFindr; print SeqFindr'\n\n\nUpgrading SeqFindr \n~~~~~~~~~~~~~~~~~~\n\nYou can upgrade like this::\n\n    pip install --upgrade SeqFindr\n\n\n**Please regularly check back to make sure you're running the most recent \nSeqFindr version.**\n\n\n\nExample figure produced by SeqFindr\n-----------------------------------\n\nSeqFindr CU fimbriae genes image. 110 E. *coli* strains were investigated. \nOrder is according to phylogenetic analysis. Black blocks represent gene \npresence.\n\n.. image:: https://raw.github.com/mscook/SeqFindr/master/example/CU_fimbriae.png\n    :alt: SeqFindr CU fimbriae genes image\n    :align: center\n\n\nSeqFindr database files\n-----------------------\n\nThe SeqFindr database is in multi-fasta format. The header needs to be\nformatted with *4 comma separated* elements. We concede that inventing \nanother file format is annoying, but, future versions of SeqFindr will \nexploit this information.\n\nThe elements headers are:\n    * identifier,\n    * common name **(this is taken as the gene label in the plot)**,\n    * description and \n    * species\n\nThe final element, separated by **[]** contains a classification. This\ninformation is used by SeqFindr to draw different coloured blocks.\n\nAn example::\n\n    >70-tem8674, bla-TEM, Beta-lactams Antibiotic resistance (ampicillin), Unknown sp. [Beta-lactams]\n    AAAGTTCTGCTATGTGGCGCGGTATTATCCCGTGTTGACGCCGGGCAAGAGCAACTCGGTCGCCGCATAC\n    >70-shv86, bla-SHV, Beta-lactams Antibiotic resistance (ampicillin), Unknown sp. [Beta-lactams]\n    CTCAAGCGGCTGCGGGCTGGCGTGTACCGCCAGCGGCAGGGTGGCTAACAGGGAGATAATACACAGGCGA\n    >70-oxa(1)256, bla-OXA-1, Beta-lactams Antibiotic resistance (ampicillin), Unknown sp. [Beta-lactams]\n    >70-tetB190, tet(B), Tetracycline Antibiotic resistance (tetracycline), Unknown sp. [Tetracycline]\n    CAAAGTGGTTAGCGATATCTTCCGAAGCAATAAATTCACGTAATAACGTTGGCAAGACTGGCATGATAAG\n\n**Note:** if you do not have all information you can simplify the expected \ndatabase header to::\n\n     >, bla-TEM, , [classification]\n\n\nThe script **vfdb_to_seqfindr** is now included in SeqFindr to convert VFDB \nformatted files (or like) to SeqFindr formatted database files.\n\nVFDB: Virulence Factors Database (www.mgc.ac.cn/VFs/) is a reference database \nfor bacterial virulence factors.\n\nAt this stage we have tested this script on limited internal datasets.\nSuccess/mileage will depend on the consistency of the VFDB formatting.\n\n\nExample usage of **vfdb_to_seqfindr**::\n\n    # Default (will set VFDB classification identifiers as the classification)\n    $ vfdb_to_seqfindr -i TOTAL_Strep_VFs.fas -o TOTAL_Strep_VFs.sqf\n\n    # Sets any classification to blank ([ ])\n    $ vfdb_to_seqfindr -i TOTAL_Strep_VFs.fas -o TOTAL_Strep_VFs.sqf -b\n\n    # Reads a user defined classification. 1 per in same order as input \n    # sequences\n    $ python convert_vfdb_to_SeqFindr.py -i TOTAL_Strep_VFs.fas -o TOTAL_Strep_VFs.sqf -c user.class\n\n\nThe -c (--class_file) option is very useful. Suppose you want to annotate your \nsequences of interest with user defined classification values. Simply develop a \nfile containing the scheme as pass using the -c option (3rd example above). \nA sample file for the situation where you had 7 input sequences with the first \n3 Fe transporters, the next two  Toxins, the next a Misc and the final \nsequence is a Toxin would look like this::\n\n    Fe transporter\n    Fe transporter\n    Fe transporter\n    Toxin\n    Toxin\n    Misc\n    Toxin\n\n\nHow does SeqFindr determine positive hits\n-----------------------------------------\n\nWe use the following calculation::\n\n    hsp.identities/float(record.query_length) >= tol\n\nWhere:\n    * hsp.identities is number of identities in the high-scoring pairs between\n      the query (database entry) and subject (contig/scaffold/mapping\n      consensus),\n    * record.query_length is the length of the database entry and,\n    * tol is the cutoff threshold to accept a hit (0.95 default)\n\nFor a database entry of 200 bp you can have up to 10 mismatches/gaps without \nbeing penalised.\n\n**Why not just use max identity?**\n    * Eliminate effects of scaffolding characters/gaps,\n    * Handle poor coverage etc. in mapping consensuses where N characters/gaps\n      may be introduced\n\n**What problems may this approach cause?** I'm still looking into it...\n\n\nFine grain configuration\n------------------------\n\nSeqFindr can read a configuration file. At the moment you can only redefine \nthe category colors (suppose you want to use a set of fixed colors instead of \nthe default randomly generated). The configuration file is expected to expand \nin the future.\n\nTo define category colors::\n\n    touch ~/.SeqFindr.cfg\n    vi ~/.SeqFindr.cfg\n    # Add something like\n    category_colors = [(100,60,201), (255,0,99)]\n\nCategory colors can be any RGB triplet. You could use a tool similar to this\none: http://www.colorschemer.com/online.html\n\nFor example the first row of colors in RGB is: \n(51,102,255), (102,51,255), (204,51,255), (255,51,204)\n\n\nShort PCR primers\n-----------------\n\nIn some cases you may want to screen using PCR primers. Please use the --short \noption. Here we adjust BLASTn parameters wordsize = 7 & Expect Value = 1000\n\n\nTutorial\n--------\n\nWe provide a script_ to run all the examples. **Note:** We have changed the \ncolor generation code. As a consequence the background colors will be \ndifferent when running this yourself. The results will not change.\n\nNavigate to the SeqFindr/example directory (from git clone). The following files should be present:\n    * A database file called *Antibiotic_markers.fa* \n    * An ordering file called *dummy.order* (-i option)\n    * An assemblies directory containing *strain1.fa, strain2.fa and strain3.fa*\n    * A consensus directory containing *strain1.fa, strain2.fa and strain3.fa*\n      (-m option)\n\n**Note:** the assembly and consensus directories contain:\n    * the same number of files (3 each)\n    * there is a 1-1 filename mapping (strain1.fa, strain2.fa, strain3.fa == \n      strain1.fa, strain2.fa, strain3.fa)\n    * there are only fasta files. If you wish to include complete genomes \n      either download the genomes in fasta format OR convert the Genbank or \n      EMBL files to fasta format. \n\nThe toy assemblies and consensuses were generated such that:\n    * **strain1** was missing: 70-shv86, 70-ctx143 and 70-aac3(IV)380 with \n      mis-assembly of 70-aphA(1)1310 & 70-tem8674\n    * **strain2** was missing: 70-oxa(7)295, 70-pse(4)348 70-ctx143, \n      70-aadA1588, 70-aadB1778 and 70-aacC(2)200\n    * **strain2** was missing 70-shv86, 70-ctx143 and 70-aac3(IV)380 with \n      mis-assembly of 70-aphA(1)1310, 70-tem8674 and 70-aadA1588\n\n\nRunning all the examples at once\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSomething like this::\n\n    $ # Assuming you git cloned, python setup.py install\n    $ cd SeqFindr/example\n    $ ./run_examples.sh\n    $ # See directories run1/ run2/ run3/ run4/\n\n\nRun 1 - Looking at only assemblies\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCommand::\n\n    SeqFindr Antibiotic_markers.fa assemblies/ -o run1 -l \n\n.. image:: https://raw.github.com/mscook/SeqFindr/master/example/run1_small.png\n    :alt: run1\n    :align: center\n\n\nLink to full size run1_.\n\n\nRun 2 - Combining assembly and mapping consensus data\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCommand::\n\n    SeqFindr Antibiotic_markers.fa assemblies/ -m consensus/ -o run2 -l\n\n.. image:: https://raw.github.com/mscook/SeqFindr/master/example/run2_small.png\n    :alt: run2\n    :align: center\n\n\nLink to full size run2_.\n\n\nRun 3 - Combining assembly and mapping consensus data with differentiation between hits\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCommand::\n\n    SeqFindr Antibiotic_markers.fa assemblies/ -m consensus/ -o run3 -l -r\n\n.. image:: https://raw.github.com/mscook/SeqFindr/master/example/run3_small.png\n    :alt: run3\n    :align: center\n\n\nLink to full size run3_.\n\n\nThe clustering dendrogram looks like this:\n\n.. image:: https://raw.github.com/mscook/SeqFindr/master/example/dendrogram_run3_small.png\n    :alt: run3 dendrogram\n    :align: center\n\n\nLink to full size dendrogram_.\n\n\nRun 4 - Combining assembly and mapping consensus data with defined ordering\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n**Note:** the ordering file is defined using the option *--index_file*. The \nordering file **must** contain the same number of strains as the assemblies \ndirectory and the strain names must agree (TODO - add a script to flag issues).\n\nCommand::\n\n    SeqFindr Antibiotic_markers.fa assemblies/ -m consensus/ -o run4 -l -r --index_file dummy.order\n\n.. image:: https://raw.github.com/mscook/SeqFindr/master/example/run4_small.png\n    :alt: run4\n    :align: center\n\n\nLink to full size run4_.\n\n\nHow to generate mapping consensus data\n--------------------------------------\n\n**We strongly recommend that you use mapping consensus data.** It minimises \nthe effects of missassembly and collapsed repeats.\n\nWe use Nesoni_. We use the database file (in multi-fasta format) as the \nreference for mapping. Nesoni_ has no issues with multifasta files as \nreferences (BWA will treat them as separate chromosomes). \nThe workflow is something like this::\n\n    $ nesoni make-reference myref ref-sequences.fa\n    $ # for each strain\n    $ #     nesoni analyse-sample: mysample myref pairs: reads1.fastq reads2.fastq\n    $ #     extract the consensus.fa file\n\n\nFor those of you using a cluster running PBSPro see:\nhttps://github.com/mscook/SeqFindr_nesoni\nThis is a script that generates a job array, submits and cleans up the\nmapping results ready for input to SeqFindr.\n\nThe output from the described workflow and SeqFindr_nesoni is a consensus.fa \nfile which we term the mapping consensus. This file is a multi-fasta file of \nthe consensus base calls relative to the database sequences.\n\nCaveats: \n    * you will probably want to allow multi-mapping reads (giving *--monogamous\n      no --random yes* to nesoni consensus) (this is default for\n      SeqFindr_nesoni), \n    * The (poor) alignment of reads at the start and the end of the database \n      genes can result in N base calls. This can result in downstream false \n      negatives.\n\n**SeqFindr now provides a solution to minimise the effects of poor mapping at \nthe start and end of the given sequences.** \n\nThe SeqFindr option is -s or --STRIP::\n\n    -s STRIP, --strip STRIP Strip the 1st and last N bases of mapping consensuses & database [default = 10]\n\nBy default this strips the 1st and last 10 bases from the mapping consensuses. \nWe have had good results with this value. Feel free to experiment with \ndifferent values (say, -s 0, -s 5, -s 10, -s 15). Please see image-compare_ \na script we developed to compare the effects of different values of -s on the \nresultant figures. \n\n\nSeqFindr usage options\n----------------------\n\nSee the help listing_. You can get this yourself with::\n\n    $ SeqFindr -h\n\n\nFuture\n------\n\nPlease see the TODO_ for future SeqFindr project directions.\n\n\n\n\n\n.. _pip: http://www.pip-installer.org/en/latest/\n.. _libraries: https://github.com/mscook/SeqFindr/blob/master/requirements.txt\n.. _image-compare: https://github.com/mscook/image-compare\n.. _listing: https://github.com/mscook/SeqFindr/blob/master/HELP.rst\n.. _changelog: https://github.com/mscook/SeqFindr/blob/master/CHANGES.rst\n.. _TODO:  https://github.com/mscook/SeqFindr/blob/master/TODO.rst\n.. _script: https://raw.github.com/mscook/SeqFindr/master/example/run_examples.sh\n.. _run1: https://raw.github.com/mscook/SeqFindr/master/example/run1.png\n.. _run2: https://raw.github.com/mscook/SeqFindr/master/example/run2.png\n.. _run3: https://raw.github.com/mscook/SeqFindr/master/example/run3.png\n.. _dendrogram: https://raw.github.com/mscook/SeqFindr/master/example/dendrogram_run3.png\n.. _run4: https://raw.github.com/mscook/SeqFindr/master/example/run4.png\n.. _Nesoni: http://www.vicbioinformatics.com/software.nesoni.shtml\n.. _SeqFindr documentation: http://seqfindr.rtfd.org\n.. _SeqFindr official site: http://mscook.github.io/SeqFindR/\n.. _gist: https://gist.github.com/mscook/ef7499fc9d2138f17c7f\n.. _pip installation instructions: http://pip.readthedocs.org/en/latest/installing.html", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/mscook/SeqFindr", "keywords": null, "license": "ECL 2.0", "maintainer": null, "maintainer_email": null, "name": "SeqFindr", "package_url": "https://pypi.org/project/SeqFindr/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/SeqFindr/", "project_urls": {"Homepage": "http://github.com/mscook/SeqFindr"}, "release_url": "https://pypi.org/project/SeqFindr/0.35.0/", "requires_dist": ["numpy (==1.8.1)", "scipy (==0.14.0)", "matplotlib (==1.3.1)", "biopython (==1.64)", "ghalton (==0.6)"], "requires_python": null, "summary": "A tool to easily create informative genomic feature plots", "version": "0.35.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>SeqFindr - easily create informative genomic feature plots. It\u2019s a\nbioinfomagicians tool to detect the presence or absence of genomic features\ngiven a database describing these features &amp; a set of draft and/or complete\ngenomes. We work with bacterial genomes &amp; as such SeqFindr has only been\ntested with bacterial genomes.</p>\n<p><strong>I am on vacation from 08/12/14 -&gt; 06/01/15</strong>. User support will not happen\nin this period. <strong>Stupidly I\u2019ve done some releases the day/night before I\nleave.</strong></p>\n<p>If you have problems:</p>\n<pre>$ # (sudo if neded)\n$ pip uninstall SeqFindr\n$ # Run the above command numerous times to ensure it's gone\n# pip install SeqFindr==0.33.1\n</pre>\n<a href=\"https://pypi.python.org/pypi/SeqFindr/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e3732a3e7d7d9e4355e53e3bbd2b0a4a59af1723/68747470733a2f2f70797069702e696e2f76657273696f6e2f53657146696e64722f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/SeqFindr/\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5621f19dc67717537a2e921129e342a25ab9cb20/68747470733a2f2f70797069702e696e2f646f776e6c6f61642f53657146696e64722f62616467652e737667\"></a>\n<a href=\"https://travis-ci.org/mscook/SeqFindR\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a5fa9af9b48994f66582a0a71a472e067507a941/68747470733a2f2f7472617669732d63692e6f72672f6d73636f6f6b2f53657146696e64522e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://landscape.io/github/mscook/SeqFindR/master\" rel=\"nofollow\"><img alt=\"Code Health\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d7058fe2c8e3bf991e5d05bccfef975aca20e096/68747470733a2f2f6c616e6473636170652e696f2f6769746875622f6d73636f6f6b2f53657146696e64522f6d61737465722f6c616e6473636170652e706e67\"></a>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Please use this README.rst as the core SeqFindr user documentation.</p>\n<dl>\n<dt>These are works in progress:</dt>\n<dd><ul>\n<li><a href=\"http://seqfindr.rtfd.org\" rel=\"nofollow\">SeqFindr documentation</a></li>\n<li><a href=\"http://mscook.github.io/SeqFindR/\" rel=\"nofollow\">SeqFindr official site</a></li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"news\">\n<h2>News</h2>\n<p><strong>07/12/14: I am on vacation from 08/12/14 -&gt; 06/01/15</strong>. User support will\nnot happen in this period. <strong>Stupidly I\u2019ve done some releases the day/night\nbefore I leave.</strong></p>\n<p>If you have problems:</p>\n<pre>$ # (sudo if neded)\n$ pip uninstall SeqFindr\n$ # Run the above command numerous times to ensure it's gone\n# pip install SeqFindr==0.33.1\n</pre>\n<p><strong>18/11/14:</strong> Version 0.4.0 now has new\u00a0option \u2013remove_empty_cols. It will\nstrip out entire columns where no hits were detected.</p>\n<p><strong>28/07/14:</strong> Fixed a bug where axes were shifted when using newer versions\nof matplotlib.</p>\n<p><strong>Important:</strong> Were you using a specific SeqFindr version as a dependency\nfor you project and it has disappeared from PyPI?</p>\n<p>We recently activated a name change of SeqFind*R* to SeqFind*r*. This was to\navoid potential users believing this was a R package. Unfortunately, PyPI\nwhile aware that SeqFindR and SeqFindr were different packages did not like\nthe potential confusion. As a consequence the only resolution was to delete\nSeqFind*R* completely (and losing all PyPI published releases) and registering\nSeqFind*r* and starting fresh. All previous 10 releases, while not available\non PyPi are still available on GitHub. If you require a previous release you\ncan actually do something like this (SeqFindr v0.26):</p>\n<pre>pip install -e git://github.com/mscook/SeqFindr.git@v0.26\n</pre>\n<p><strong>Version 0.31.1 released on 10 July 2014.</strong></p>\n<p><strong>We are now testing SeqFindr builds on both Linux &amp; MacOSX systems.</strong></p>\n<p>Best use \u201cgit log\u201d for a changelog as the <a href=\"https://github.com/mscook/SeqFindr/blob/master/CHANGES.rst\" rel=\"nofollow\">changelog</a> for most recent\nchanges/fixes/enhancements may not be up to date.</p>\n</div>\n<div id=\"citation\">\n<h2>Citation</h2>\n<p>Cite this Github repository if you use SeqFindr to generate figures\nfor publications:</p>\n<pre>STANTON-COOK M, NF ALIKHAN, FORDE BM, BEN ZAKOUR NL &amp; BEATSON SA^.\nSeqFindr - easily create informative genomic feature plots.\nhttps://github.com/mscook/SeqFindr.\n</pre>\n<p>TODO: Couple SeqFindr with ZENODO!</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>SeqFindr is a commandline application. If you\u2019re not familiar with the\ncommandline we recommend you ask local IT support to help you install it.</p>\n<p>We now test SeqFindr builds on both Linux (Ubuntu &gt;= 12.04) and MacOSX\n(Mavericks) systems.</p>\n<dl>\n<dt>You will need to install/have installed:</dt>\n<dd><ul>\n<li>ncbiblast &gt;= 2.2.27</li>\n<li>python &gt;= 2.7 (<strong>Python 3 is not supported</strong>)</li>\n</ul>\n</dd>\n</dl>\n<p>You can check these are installed by:</p>\n<pre>$ python --version\n$ blastn -version\n</pre>\n<p>Installation of python or blastn (without a package manager) is beyond the\nscope of this document.</p>\n<p>If you have both python and blastn you need to (if not already present)\ninstall <a href=\"http://www.pip-installer.org/en/latest/\" rel=\"nofollow\">pip</a>.</p>\n<p>You can check if <a href=\"http://www.pip-installer.org/en/latest/\" rel=\"nofollow\">pip</a> exists with:</p>\n<pre>$ which pip\n</pre>\n<p>If you get a \u201cnot found\u201d, please read the <a href=\"http://pip.readthedocs.org/en/latest/installing.html\" rel=\"nofollow\">pip installation instructions</a>.</p>\n<p><strong>If you already have pip we do suggest you upgrade it.</strong> We are using version\n1.5.6 at the time of writing this document.</p>\n<p>You can upgrade <a href=\"http://www.pip-installer.org/en/latest/\" rel=\"nofollow\">pip</a> like this:</p>\n<pre>$ pip install --upgrade pip\n</pre>\n<p>The following python <a href=\"https://github.com/mscook/SeqFindr/blob/master/requirements.txt\" rel=\"nofollow\">libraries</a> should be installed (automatically) if you follow\nthe installation instructions detailed below.</p>\n<dl>\n<dt>We use the following python <a href=\"https://github.com/mscook/SeqFindr/blob/master/requirements.txt\" rel=\"nofollow\">libraries</a>:</dt>\n<dd><ul>\n<li>numpy &gt;= 1.6.1</li>\n<li>scipy &gt;= 0.10.1</li>\n<li>matplotlib &gt;= 1.1.0</li>\n<li>biopython &gt;= 1.59</li>\n<li>ghalton&gt;=0.6</li>\n</ul>\n</dd>\n</dl>\n<p>These libraries will also have dependencies (i.e. atlas, lapack, fortran\ncompilers, freetype and png). <strong>These most likely won\u2019t be installed on\nyour computer. Please install these before attempting the installation.</strong></p>\n<div id=\"linux-ubuntu\">\n<h3>Linux (Ubuntu)</h3>\n<p>SeqFindr uses 3rd party packages that are extremely important for scientific\ncomputing but are notoriously difficult to install. While <em>pip install *\n*\u2013user SeqFindr</em> may work we recommend you install these 3rd party packages\nusing apt-get.</p>\n<p>Run:</p>\n<pre>$ sudo apt-get install python-numpy python-scipy python-matplotlib python-biopython python-dev libatlas-dev liblapack-dev gfortran libfreetype6-dev libfreetype6 libpng-dev\n</pre>\n<p>Now <a href=\"http://www.pip-installer.org/en/latest/\" rel=\"nofollow\">pip</a> install SeqFindr:</p>\n<pre>$ pip install --user SeqFindr\n</pre>\n<p>We use the \u2013user option of <a href=\"http://www.pip-installer.org/en/latest/\" rel=\"nofollow\">pip</a> to put SeqFindr in: /home/$USER/.local/bin/\nYou need to add this location to you ~/.bash_profile.</p>\n<p>Add SeqFindr to your path:</p>\n<pre>$ echo 'export PATH=$PATH:/home/$USER/.local/bin/' &gt;&gt; ~/.bash_profile\n</pre>\n<p>Finally install BLAST+:</p>\n<pre>$ sudo apt-get install ncbi-blast+\n</pre>\n<p><strong>Test it:</strong></p>\n<p>Run:</p>\n<pre>$ SeqFindr -h\n$ python -c 'import SeqFindr; print SeqFindr'\n</pre>\n</div>\n<div id=\"macosx-mavericks\">\n<h3>MacOSX (Mavericks)</h3>\n<p><strong>You\u2019ll need to have the equivalents of python-dev libatlas-dev liblapack-dev\ngfortran libfreetype6-dev libfreetype6 &amp; libpng-dev installed.</strong> We had no\nproblems installing SeqFindr on a recently acquired OSX Mavericks machine\nusing the homebrew package manager.</p>\n<p>The installed packages on this machine via:</p>\n<pre>$ brew list\n</pre>\n<p>Are available at this <a href=\"https://gist.github.com/mscook/ef7499fc9d2138f17c7f\" rel=\"nofollow\">gist</a>.</p>\n<p>pip install SeqFindr:</p>\n<pre>$ pip install --user SeqFindr\n</pre>\n<p>We use the \u2013user option of <a href=\"http://www.pip-installer.org/en/latest/\" rel=\"nofollow\">pip</a> to put SeqFindr in: /home/$USER/.local/bin/\nYou need to add this location to you ~/.bash_profile.</p>\n<p>Add SeqFindr to your path:</p>\n<pre>$ echo 'export PATH=$PATH:/home/$USER/.local/bin/' &gt;&gt; ~/.bash_profile\n</pre>\n<p>Finally install BLAST+:</p>\n<pre>$ sudo brew install blast\n</pre>\n<p><strong>Test it:</strong></p>\n<p>Run:</p>\n<pre>$ SeqFindr -h\n$ python -c 'import SeqFindr; print SeqFindr'\n</pre>\n</div>\n<div id=\"upgrading-seqfindr\">\n<h3>Upgrading SeqFindr</h3>\n<p>You can upgrade like this:</p>\n<pre>pip install --upgrade SeqFindr\n</pre>\n<p><strong>Please regularly check back to make sure you\u2019re running the most recent\nSeqFindr version.</strong></p>\n</div>\n</div>\n<div id=\"example-figure-produced-by-seqfindr\">\n<h2>Example figure produced by SeqFindr</h2>\n<p>SeqFindr CU fimbriae genes image. 110 E. <em>coli</em> strains were investigated.\nOrder is according to phylogenetic analysis. Black blocks represent gene\npresence.</p>\n<img alt=\"SeqFindr CU fimbriae genes image\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ee79dc1fce31412a07240e0a7db1f98505c8f5f/68747470733a2f2f7261772e6769746875622e636f6d2f6d73636f6f6b2f53657146696e64722f6d61737465722f6578616d706c652f43555f66696d62726961652e706e67\">\n</div>\n<div id=\"seqfindr-database-files\">\n<h2>SeqFindr database files</h2>\n<p>The SeqFindr database is in multi-fasta format. The header needs to be\nformatted with <em>4 comma separated</em> elements. We concede that inventing\nanother file format is annoying, but, future versions of SeqFindr will\nexploit this information.</p>\n<dl>\n<dt>The elements headers are:</dt>\n<dd><ul>\n<li>identifier,</li>\n<li>common name <strong>(this is taken as the gene label in the plot)</strong>,</li>\n<li>description and</li>\n<li>species</li>\n</ul>\n</dd>\n</dl>\n<p>The final element, separated by <strong>[]</strong> contains a classification. This\ninformation is used by SeqFindr to draw different coloured blocks.</p>\n<p>An example:</p>\n<pre>&gt;70-tem8674, bla-TEM, Beta-lactams Antibiotic resistance (ampicillin), Unknown sp. [Beta-lactams]\nAAAGTTCTGCTATGTGGCGCGGTATTATCCCGTGTTGACGCCGGGCAAGAGCAACTCGGTCGCCGCATAC\n&gt;70-shv86, bla-SHV, Beta-lactams Antibiotic resistance (ampicillin), Unknown sp. [Beta-lactams]\nCTCAAGCGGCTGCGGGCTGGCGTGTACCGCCAGCGGCAGGGTGGCTAACAGGGAGATAATACACAGGCGA\n&gt;70-oxa(1)256, bla-OXA-1, Beta-lactams Antibiotic resistance (ampicillin), Unknown sp. [Beta-lactams]\n&gt;70-tetB190, tet(B), Tetracycline Antibiotic resistance (tetracycline), Unknown sp. [Tetracycline]\nCAAAGTGGTTAGCGATATCTTCCGAAGCAATAAATTCACGTAATAACGTTGGCAAGACTGGCATGATAAG\n</pre>\n<p><strong>Note:</strong> if you do not have all information you can simplify the expected\ndatabase header to:</p>\n<pre>&gt;, bla-TEM, , [classification]\n</pre>\n<p>The script <strong>vfdb_to_seqfindr</strong> is now included in SeqFindr to convert VFDB\nformatted files (or like) to SeqFindr formatted database files.</p>\n<p>VFDB: Virulence Factors Database (www.mgc.ac.cn/VFs/) is a reference database\nfor bacterial virulence factors.</p>\n<p>At this stage we have tested this script on limited internal datasets.\nSuccess/mileage will depend on the consistency of the VFDB formatting.</p>\n<p>Example usage of <strong>vfdb_to_seqfindr</strong>:</p>\n<pre># Default (will set VFDB classification identifiers as the classification)\n$ vfdb_to_seqfindr -i TOTAL_Strep_VFs.fas -o TOTAL_Strep_VFs.sqf\n\n# Sets any classification to blank ([ ])\n$ vfdb_to_seqfindr -i TOTAL_Strep_VFs.fas -o TOTAL_Strep_VFs.sqf -b\n\n# Reads a user defined classification. 1 per in same order as input\n# sequences\n$ python convert_vfdb_to_SeqFindr.py -i TOTAL_Strep_VFs.fas -o TOTAL_Strep_VFs.sqf -c user.class\n</pre>\n<p>The -c (\u2013class_file) option is very useful. Suppose you want to annotate your\nsequences of interest with user defined classification values. Simply develop a\nfile containing the scheme as pass using the -c option (3rd example above).\nA sample file for the situation where you had 7 input sequences with the first\n3 Fe transporters, the next two  Toxins, the next a Misc and the final\nsequence is a Toxin would look like this:</p>\n<pre>Fe transporter\nFe transporter\nFe transporter\nToxin\nToxin\nMisc\nToxin\n</pre>\n</div>\n<div id=\"how-does-seqfindr-determine-positive-hits\">\n<h2>How does SeqFindr determine positive hits</h2>\n<p>We use the following calculation:</p>\n<pre>hsp.identities/float(record.query_length) &gt;= tol\n</pre>\n<dl>\n<dt>Where:</dt>\n<dd><ul>\n<li>hsp.identities is number of identities in the high-scoring pairs between\nthe query (database entry) and subject (contig/scaffold/mapping\nconsensus),</li>\n<li>record.query_length is the length of the database entry and,</li>\n<li>tol is the cutoff threshold to accept a hit (0.95 default)</li>\n</ul>\n</dd>\n</dl>\n<p>For a database entry of 200 bp you can have up to 10 mismatches/gaps without\nbeing penalised.</p>\n<dl>\n<dt><strong>Why not just use max identity?</strong></dt>\n<dd><ul>\n<li>Eliminate effects of scaffolding characters/gaps,</li>\n<li>Handle poor coverage etc. in mapping consensuses where N characters/gaps\nmay be introduced</li>\n</ul>\n</dd>\n</dl>\n<p><strong>What problems may this approach cause?</strong> I\u2019m still looking into it\u2026</p>\n</div>\n<div id=\"fine-grain-configuration\">\n<h2>Fine grain configuration</h2>\n<p>SeqFindr can read a configuration file. At the moment you can only redefine\nthe category colors (suppose you want to use a set of fixed colors instead of\nthe default randomly generated). The configuration file is expected to expand\nin the future.</p>\n<p>To define category colors:</p>\n<pre>touch ~/.SeqFindr.cfg\nvi ~/.SeqFindr.cfg\n# Add something like\ncategory_colors = [(100,60,201), (255,0,99)]\n</pre>\n<p>Category colors can be any RGB triplet. You could use a tool similar to this\none: <a href=\"http://www.colorschemer.com/online.html\" rel=\"nofollow\">http://www.colorschemer.com/online.html</a></p>\n<p>For example the first row of colors in RGB is:\n(51,102,255), (102,51,255), (204,51,255), (255,51,204)</p>\n</div>\n<div id=\"short-pcr-primers\">\n<h2>Short PCR primers</h2>\n<p>In some cases you may want to screen using PCR primers. Please use the \u2013short\noption. Here we adjust BLASTn parameters wordsize = 7 &amp; Expect Value = 1000</p>\n</div>\n<div id=\"tutorial\">\n<h2>Tutorial</h2>\n<p>We provide a <a href=\"https://raw.github.com/mscook/SeqFindr/master/example/run_examples.sh\" rel=\"nofollow\">script</a> to run all the examples. <strong>Note:</strong> We have changed the\ncolor generation code. As a consequence the background colors will be\ndifferent when running this yourself. The results will not change.</p>\n<dl>\n<dt>Navigate to the SeqFindr/example directory (from git clone). The following files should be present:</dt>\n<dd><ul>\n<li>A database file called <em>Antibiotic_markers.fa</em></li>\n<li>An ordering file called <em>dummy.order</em> (-i option)</li>\n<li>An assemblies directory containing <em>strain1.fa, strain2.fa and strain3.fa</em></li>\n<li>A consensus directory containing <em>strain1.fa, strain2.fa and strain3.fa</em>\n(-m option)</li>\n</ul>\n</dd>\n<dt><strong>Note:</strong> the assembly and consensus directories contain:</dt>\n<dd><ul>\n<li>the same number of files (3 each)</li>\n<li>there is a 1-1 filename mapping (strain1.fa, strain2.fa, strain3.fa ==\nstrain1.fa, strain2.fa, strain3.fa)</li>\n<li>there are only fasta files. If you wish to include complete genomes\neither download the genomes in fasta format OR convert the Genbank or\nEMBL files to fasta format.</li>\n</ul>\n</dd>\n<dt>The toy assemblies and consensuses were generated such that:</dt>\n<dd><ul>\n<li><strong>strain1</strong> was missing: 70-shv86, 70-ctx143 and 70-aac3(IV)380 with\nmis-assembly of 70-aphA(1)1310 &amp; 70-tem8674</li>\n<li><strong>strain2</strong> was missing: 70-oxa(7)295, 70-pse(4)348 70-ctx143,\n70-aadA1588, 70-aadB1778 and 70-aacC(2)200</li>\n<li><strong>strain2</strong> was missing 70-shv86, 70-ctx143 and 70-aac3(IV)380 with\nmis-assembly of 70-aphA(1)1310, 70-tem8674 and 70-aadA1588</li>\n</ul>\n</dd>\n</dl>\n<div id=\"running-all-the-examples-at-once\">\n<h3>Running all the examples at once</h3>\n<p>Something like this:</p>\n<pre>$ # Assuming you git cloned, python setup.py install\n$ cd SeqFindr/example\n$ ./run_examples.sh\n$ # See directories run1/ run2/ run3/ run4/\n</pre>\n</div>\n<div id=\"run-1-looking-at-only-assemblies\">\n<h3>Run 1 - Looking at only assemblies</h3>\n<p>Command:</p>\n<pre>SeqFindr Antibiotic_markers.fa assemblies/ -o run1 -l\n</pre>\n<img alt=\"run1\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/694300fb95ee72a5f17ce3eb925b26d72124ab7e/68747470733a2f2f7261772e6769746875622e636f6d2f6d73636f6f6b2f53657146696e64722f6d61737465722f6578616d706c652f72756e315f736d616c6c2e706e67\">\n<p>Link to full size <a href=\"https://raw.github.com/mscook/SeqFindr/master/example/run1.png\" rel=\"nofollow\">run1</a>.</p>\n</div>\n<div id=\"run-2-combining-assembly-and-mapping-consensus-data\">\n<h3>Run 2 - Combining assembly and mapping consensus data</h3>\n<p>Command:</p>\n<pre>SeqFindr Antibiotic_markers.fa assemblies/ -m consensus/ -o run2 -l\n</pre>\n<img alt=\"run2\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5813c0a35de09a0fff5807c62093bfb704240c05/68747470733a2f2f7261772e6769746875622e636f6d2f6d73636f6f6b2f53657146696e64722f6d61737465722f6578616d706c652f72756e325f736d616c6c2e706e67\">\n<p>Link to full size <a href=\"https://raw.github.com/mscook/SeqFindr/master/example/run2.png\" rel=\"nofollow\">run2</a>.</p>\n</div>\n<div id=\"run-3-combining-assembly-and-mapping-consensus-data-with-differentiation-between-hits\">\n<h3>Run 3 - Combining assembly and mapping consensus data with differentiation between hits</h3>\n<p>Command:</p>\n<pre>SeqFindr Antibiotic_markers.fa assemblies/ -m consensus/ -o run3 -l -r\n</pre>\n<img alt=\"run3\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1772641e2443bafcc728de47e9322da0f309ec96/68747470733a2f2f7261772e6769746875622e636f6d2f6d73636f6f6b2f53657146696e64722f6d61737465722f6578616d706c652f72756e335f736d616c6c2e706e67\">\n<p>Link to full size <a href=\"https://raw.github.com/mscook/SeqFindr/master/example/run3.png\" rel=\"nofollow\">run3</a>.</p>\n<p>The clustering dendrogram looks like this:</p>\n<img alt=\"run3 dendrogram\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1653affa3ce3d945a65778727b117c9d7c27ea6f/68747470733a2f2f7261772e6769746875622e636f6d2f6d73636f6f6b2f53657146696e64722f6d61737465722f6578616d706c652f64656e64726f6772616d5f72756e335f736d616c6c2e706e67\">\n<p>Link to full size <a href=\"https://raw.github.com/mscook/SeqFindr/master/example/dendrogram_run3.png\" rel=\"nofollow\">dendrogram</a>.</p>\n</div>\n<div id=\"run-4-combining-assembly-and-mapping-consensus-data-with-defined-ordering\">\n<h3>Run 4 - Combining assembly and mapping consensus data with defined ordering</h3>\n<p><strong>Note:</strong> the ordering file is defined using the option <em>\u2013index_file</em>. The\nordering file <strong>must</strong> contain the same number of strains as the assemblies\ndirectory and the strain names must agree (TODO - add a script to flag issues).</p>\n<p>Command:</p>\n<pre>SeqFindr Antibiotic_markers.fa assemblies/ -m consensus/ -o run4 -l -r --index_file dummy.order\n</pre>\n<img alt=\"run4\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a7e137e0e980670e2ce0b13f39384a0e2c694e12/68747470733a2f2f7261772e6769746875622e636f6d2f6d73636f6f6b2f53657146696e64722f6d61737465722f6578616d706c652f72756e345f736d616c6c2e706e67\">\n<p>Link to full size <a href=\"https://raw.github.com/mscook/SeqFindr/master/example/run4.png\" rel=\"nofollow\">run4</a>.</p>\n</div>\n</div>\n<div id=\"how-to-generate-mapping-consensus-data\">\n<h2>How to generate mapping consensus data</h2>\n<p><strong>We strongly recommend that you use mapping consensus data.</strong> It minimises\nthe effects of missassembly and collapsed repeats.</p>\n<p>We use <a href=\"http://www.vicbioinformatics.com/software.nesoni.shtml\" rel=\"nofollow\">Nesoni</a>. We use the database file (in multi-fasta format) as the\nreference for mapping. <a href=\"http://www.vicbioinformatics.com/software.nesoni.shtml\" rel=\"nofollow\">Nesoni</a> has no issues with multifasta files as\nreferences (BWA will treat them as separate chromosomes).\nThe workflow is something like this:</p>\n<pre>$ nesoni make-reference myref ref-sequences.fa\n$ # for each strain\n$ #     nesoni analyse-sample: mysample myref pairs: reads1.fastq reads2.fastq\n$ #     extract the consensus.fa file\n</pre>\n<p>For those of you using a cluster running PBSPro see:\n<a href=\"https://github.com/mscook/SeqFindr_nesoni\" rel=\"nofollow\">https://github.com/mscook/SeqFindr_nesoni</a>\nThis is a script that generates a job array, submits and cleans up the\nmapping results ready for input to SeqFindr.</p>\n<p>The output from the described workflow and SeqFindr_nesoni is a consensus.fa\nfile which we term the mapping consensus. This file is a multi-fasta file of\nthe consensus base calls relative to the database sequences.</p>\n<dl>\n<dt>Caveats:</dt>\n<dd><ul>\n<li>you will probably want to allow multi-mapping reads (giving <em>\u2013monogamous\nno \u2013random yes</em> to nesoni consensus) (this is default for\nSeqFindr_nesoni),</li>\n<li>The (poor) alignment of reads at the start and the end of the database\ngenes can result in N base calls. This can result in downstream false\nnegatives.</li>\n</ul>\n</dd>\n</dl>\n<p><strong>SeqFindr now provides a solution to minimise the effects of poor mapping at\nthe start and end of the given sequences.</strong></p>\n<p>The SeqFindr option is -s or \u2013STRIP:</p>\n<pre>-s STRIP, --strip STRIP Strip the 1st and last N bases of mapping consensuses &amp; database [default = 10]\n</pre>\n<p>By default this strips the 1st and last 10 bases from the mapping consensuses.\nWe have had good results with this value. Feel free to experiment with\ndifferent values (say, -s 0, -s 5, -s 10, -s 15). Please see <a href=\"https://github.com/mscook/image-compare\" rel=\"nofollow\">image-compare</a>\na script we developed to compare the effects of different values of -s on the\nresultant figures.</p>\n</div>\n<div id=\"seqfindr-usage-options\">\n<h2>SeqFindr usage options</h2>\n<p>See the help <a href=\"https://github.com/mscook/SeqFindr/blob/master/HELP.rst\" rel=\"nofollow\">listing</a>. You can get this yourself with:</p>\n<pre>$ SeqFindr -h\n</pre>\n</div>\n<div id=\"future\">\n<h2>Future</h2>\n<p>Please see the <a href=\"https://github.com/mscook/SeqFindr/blob/master/TODO.rst\" rel=\"nofollow\">TODO</a> for future SeqFindr project directions.</p>\n</div>\n\n          </div>"}, "last_serial": 1333970, "releases": {"0.31.1": [{"comment_text": "", "digests": {"md5": "f22068f79c1c20cb4474c6cc0a9c6ec3", "sha256": "57c2f571344f9d291c7f78ab6b7c240dfb7f343b99ecd97d725c2bf539000545"}, "downloads": -1, "filename": "SeqFindr-0.31.1-py2-none-any.whl", "has_sig": false, "md5_digest": "f22068f79c1c20cb4474c6cc0a9c6ec3", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 158693, "upload_time": "2014-07-10T03:13:40", "upload_time_iso_8601": "2014-07-10T03:13:40.313352Z", "url": "https://files.pythonhosted.org/packages/f2/e8/23d95cc97907ff2ef0ed06d6e70a63e6614512eacace4ab949ae04c75cf8/SeqFindr-0.31.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e4d0a9c3f2de7957eb7eb392d20bc17", "sha256": "5b511af0e44038146cadbdfe4aaacb99b8793ff9a672bebb24b5a76fe0245477"}, "downloads": -1, "filename": "SeqFindr-0.31.1.tar.gz", "has_sig": false, "md5_digest": "3e4d0a9c3f2de7957eb7eb392d20bc17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 112114, "upload_time": "2014-07-10T03:13:43", "upload_time_iso_8601": "2014-07-10T03:13:43.782871Z", "url": "https://files.pythonhosted.org/packages/15/c3/01acd03db663e33c2b1bcabf5f15c4eb2808fad4295081696afe99b18fb9/SeqFindr-0.31.1.tar.gz", "yanked": false}], "0.31.2": [{"comment_text": "", "digests": {"md5": "de71d866c0c0a8b541c0b227e8bcfe4d", "sha256": "4cfe676f24ae54169e8b82a59a92d9fb4c3e5e4a742ee2d7c9cb2d57fd99c3a5"}, "downloads": -1, "filename": "SeqFindr-0.31.2-py2-none-any.whl", "has_sig": false, "md5_digest": "de71d866c0c0a8b541c0b227e8bcfe4d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 160261, "upload_time": "2014-07-27T23:31:06", "upload_time_iso_8601": "2014-07-27T23:31:06.091708Z", "url": "https://files.pythonhosted.org/packages/5b/a0/a424e1ce429a5cc0cca92d81f606740bb2a6005274fc5e67863728033c3f/SeqFindr-0.31.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c7e0a3050529eb98b6d412dc18ee14a3", "sha256": "c1f37aa2717524c2fc66a9ed2230df4d5d30593a2466e1c99561face71e60027"}, "downloads": -1, "filename": "SeqFindr-0.31.2.tar.gz", "has_sig": false, "md5_digest": "c7e0a3050529eb98b6d412dc18ee14a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 113297, "upload_time": "2014-07-27T23:31:09", "upload_time_iso_8601": "2014-07-27T23:31:09.243984Z", "url": "https://files.pythonhosted.org/packages/d6/35/9daf3dc5941e62a3efd380360923d5ee0207cda75cce6971ad36d45108d3/SeqFindr-0.31.2.tar.gz", "yanked": false}], "0.31.3": [{"comment_text": "", "digests": {"md5": "bcfca8c4d6e1fc5ea0807871af5af444", "sha256": "d97d883de01e9f161a861ecb257437356ee61852282671c764e759bd10b71b37"}, "downloads": -1, "filename": "SeqFindr-0.31.3-py2-none-any.whl", "has_sig": false, "md5_digest": "bcfca8c4d6e1fc5ea0807871af5af444", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 160662, "upload_time": "2014-07-28T04:39:56", "upload_time_iso_8601": "2014-07-28T04:39:56.461402Z", "url": "https://files.pythonhosted.org/packages/b9/f2/71b9504b9ccc978a220300bacafc76fe1eddf0037ff9d714573e549991ef/SeqFindr-0.31.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aeed99aae20c8be363bca85c2d88600e", "sha256": "d79c5a9b631b2449b85bb1c342a0c5c5456e9ca2a7bf007a434bf61c2ab241d2"}, "downloads": -1, "filename": "SeqFindr-0.31.3.tar.gz", "has_sig": false, "md5_digest": "aeed99aae20c8be363bca85c2d88600e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 113509, "upload_time": "2014-07-28T04:40:00", "upload_time_iso_8601": "2014-07-28T04:40:00.599636Z", "url": "https://files.pythonhosted.org/packages/9e/f0/f8a86a33f4c218c595195ea90fa4609aded69784a5a33c333597afb3fe7e/SeqFindr-0.31.3.tar.gz", "yanked": false}], "0.31.4": [{"comment_text": "", "digests": {"md5": "fc7a1c06fe5556a6eb6467377537f738", "sha256": "eef96c2b0525493fe7ec289ac14483a738e48adc10984e6bda7a3b0b0a048ea9"}, "downloads": -1, "filename": "SeqFindr-0.31.4-py2-none-any.whl", "has_sig": false, "md5_digest": "fc7a1c06fe5556a6eb6467377537f738", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 160800, "upload_time": "2014-07-29T02:13:02", "upload_time_iso_8601": "2014-07-29T02:13:02.304174Z", "url": "https://files.pythonhosted.org/packages/85/57/bde709764e7e090915c79444b9c2a67f0501908b00668b87cd226f5f3ecb/SeqFindr-0.31.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ae2288b455663e0bb765396eeecacd5", "sha256": "15f92ade06198e1e6ed12571d772711e65329b86574c6ddc8603f35cd8195b86"}, "downloads": -1, "filename": "SeqFindr-0.31.4.tar.gz", "has_sig": false, "md5_digest": "9ae2288b455663e0bb765396eeecacd5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 113536, "upload_time": "2014-07-29T02:13:06", "upload_time_iso_8601": "2014-07-29T02:13:06.027702Z", "url": "https://files.pythonhosted.org/packages/d4/07/731b5cdda8594b45dbe5625411a0cd8144b0915029fcf1e9b8afb686a805/SeqFindr-0.31.4.tar.gz", "yanked": false}], "0.32.0": [{"comment_text": "", "digests": {"md5": "4e04259fe0dc6bf2b485a5f6a6fa1469", "sha256": "8e04725648108be9269bdc1a8957f5501b609df1013c2424b5c27016cf4a0120"}, "downloads": -1, "filename": "SeqFindr-0.32.0-py2-none-any.whl", "has_sig": false, "md5_digest": "4e04259fe0dc6bf2b485a5f6a6fa1469", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 163132, "upload_time": "2014-11-18T03:46:03", "upload_time_iso_8601": "2014-11-18T03:46:03.742924Z", "url": "https://files.pythonhosted.org/packages/1c/84/21bbf5b5ad4a88c6aaad8abe1005c0c0ad685d949a19a899779a211a9220/SeqFindr-0.32.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d987f1677a947ffb35e099ee0c7042d", "sha256": "5e95a03edf84dae301b702d2e646e1cd5a12b62b2ba48c500f3e197e1d53db96"}, "downloads": -1, "filename": "SeqFindr-0.32.0.tar.gz", "has_sig": false, "md5_digest": "1d987f1677a947ffb35e099ee0c7042d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 114680, "upload_time": "2014-11-18T03:46:08", "upload_time_iso_8601": "2014-11-18T03:46:08.967322Z", "url": "https://files.pythonhosted.org/packages/72/dd/dccc1b0efe5bc59cb54ffa82584fe83c5e0553e3a97e8103b091206a3f1b/SeqFindr-0.32.0.tar.gz", "yanked": false}], "0.32.1": [{"comment_text": "", "digests": {"md5": "4808e8f562794ec8ac0d7c6709c3747e", "sha256": "208e32b3af19aaafef179e22e9e6859014f3a12c9aba4ee047c33f96ca426eb2"}, "downloads": -1, "filename": "SeqFindr-0.32.1-py2-none-any.whl", "has_sig": false, "md5_digest": "4808e8f562794ec8ac0d7c6709c3747e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 164071, "upload_time": "2014-11-18T06:32:14", "upload_time_iso_8601": "2014-11-18T06:32:14.722399Z", "url": "https://files.pythonhosted.org/packages/b3/97/f5ba0463da713440f2337c62ae741837085aa40825144838bd2020a8ad1f/SeqFindr-0.32.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d7e67b4ff4698e46f1483912ca5976d3", "sha256": "76d7d0aa15730fb20be9a020b298488e0b69a2412179a36c2c97605f92823d20"}, "downloads": -1, "filename": "SeqFindr-0.32.1.tar.gz", "has_sig": false, "md5_digest": "d7e67b4ff4698e46f1483912ca5976d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115558, "upload_time": "2014-11-18T06:32:18", "upload_time_iso_8601": "2014-11-18T06:32:18.648505Z", "url": "https://files.pythonhosted.org/packages/d6/00/1556566e86ec186b74c0a793fcf3e97cc724ecd5fe505a734402b7a1be5b/SeqFindr-0.32.1.tar.gz", "yanked": false}], "0.32.2": [{"comment_text": "", "digests": {"md5": "45359b2a8f3d756ed92d190c47839b22", "sha256": "18010962c2d984b72cdd50b7ffee4fd6050dba3918f909731596ac4dc05bdc92"}, "downloads": -1, "filename": "SeqFindr-0.32.2-py2-none-any.whl", "has_sig": false, "md5_digest": "45359b2a8f3d756ed92d190c47839b22", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 164817, "upload_time": "2014-11-19T01:12:42", "upload_time_iso_8601": "2014-11-19T01:12:42.386275Z", "url": "https://files.pythonhosted.org/packages/89/1f/752b7534f09d30d8848fa57b587a74da8c0b98c93b10d3766a335a5de5ca/SeqFindr-0.32.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "13f59a4573fc447662ddc265380cd386", "sha256": "a83165b19a60c8a5239d239969950a4f3f24f78fa5c6a385756117cfe9ad0c6d"}, "downloads": -1, "filename": "SeqFindr-0.32.2.tar.gz", "has_sig": false, "md5_digest": "13f59a4573fc447662ddc265380cd386", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115802, "upload_time": "2014-11-19T01:12:48", "upload_time_iso_8601": "2014-11-19T01:12:48.380661Z", "url": "https://files.pythonhosted.org/packages/a1/ce/db31acd64502e2e8bb5add857ce0881861082fe55a9ea6afa0850e1903e0/SeqFindr-0.32.2.tar.gz", "yanked": false}], "0.33.0": [{"comment_text": "", "digests": {"md5": "ee0fdf3c9fbd074be68e879fcab80ca5", "sha256": "ffcc896174651e4e95483dbf55f0663504ec4b8add18aa22a31060fa3953e00a"}, "downloads": -1, "filename": "SeqFindr-0.33.0-py2-none-any.whl", "has_sig": false, "md5_digest": "ee0fdf3c9fbd074be68e879fcab80ca5", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 165784, "upload_time": "2014-11-20T06:02:49", "upload_time_iso_8601": "2014-11-20T06:02:49.573171Z", "url": "https://files.pythonhosted.org/packages/eb/ed/6653904b1666e609567cf9dcedad6c6180f7fc988a55f38a732d2882eaf1/SeqFindr-0.33.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d34b10486b4c9f9da7110e667b8d43ac", "sha256": "5029d3d1a7b1d54863586fc746c04280a74925593b63d8fc1d2cb2abe43dea1d"}, "downloads": -1, "filename": "SeqFindr-0.33.0.tar.gz", "has_sig": false, "md5_digest": "d34b10486b4c9f9da7110e667b8d43ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 116410, "upload_time": "2014-11-20T06:02:54", "upload_time_iso_8601": "2014-11-20T06:02:54.047874Z", "url": "https://files.pythonhosted.org/packages/85/1c/e6324595bf7e58bc4aeb7f19716b5415e388dc80ae3a2fbfad039a47bcf4/SeqFindr-0.33.0.tar.gz", "yanked": false}], "0.33.1": [{"comment_text": "", "digests": {"md5": "095d8f3cda01c4bf0fa71aca01472164", "sha256": "70a4d4e4f68056d344b08a7f5606b3a644a38af824fa52ec84ee8f53cfe8488b"}, "downloads": -1, "filename": "SeqFindr-0.33.1-py2-none-any.whl", "has_sig": false, "md5_digest": "095d8f3cda01c4bf0fa71aca01472164", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 165964, "upload_time": "2014-11-20T07:27:35", "upload_time_iso_8601": "2014-11-20T07:27:35.976626Z", "url": "https://files.pythonhosted.org/packages/3c/5e/e2231a160c07619152f7594ac597c76fff4084f0f3caa008b5cad3573933/SeqFindr-0.33.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54aad0c8671d3f687564ad4144abb4b8", "sha256": "fe2fa962e75d7c1041e6916d333ae4384534ba797e7e9b10dd958e52caad1158"}, "downloads": -1, "filename": "SeqFindr-0.33.1.tar.gz", "has_sig": false, "md5_digest": "54aad0c8671d3f687564ad4144abb4b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 116570, "upload_time": "2014-11-20T07:27:39", "upload_time_iso_8601": "2014-11-20T07:27:39.930392Z", "url": "https://files.pythonhosted.org/packages/c4/e9/65aba136132b3ccc134c525f4ea70ab7238111a63b5cecb988e838444552/SeqFindr-0.33.1.tar.gz", "yanked": false}], "0.34.0": [{"comment_text": "", "digests": {"md5": "de6f9fdd35f208b0ba40858355512c36", "sha256": "b20fcdc5d7ceb6eabdfe6c92230fee8bb7c0a9ef3e5d1f9758c8e46a2a35bcd4"}, "downloads": -1, "filename": "SeqFindr-0.34.0-py2-none-any.whl", "has_sig": false, "md5_digest": "de6f9fdd35f208b0ba40858355512c36", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 167515, "upload_time": "2014-12-07T07:33:55", "upload_time_iso_8601": "2014-12-07T07:33:55.576390Z", "url": "https://files.pythonhosted.org/packages/7c/83/bb58771e87909c65c68e7798fa79bff9ea400089a380174e6facc68d043d/SeqFindr-0.34.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "370fdd873f9c411db0079ce288e0f413", "sha256": "969e9520d7f61289c4852c499dc67333446865f415f18824685cc3c80cfb4e98"}, "downloads": -1, "filename": "SeqFindr-0.34.0.tar.gz", "has_sig": false, "md5_digest": "370fdd873f9c411db0079ce288e0f413", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 117338, "upload_time": "2014-12-07T07:34:03", "upload_time_iso_8601": "2014-12-07T07:34:03.136041Z", "url": "https://files.pythonhosted.org/packages/fc/bb/6dad243131e87013aa52df54b2fb3b3a34d104782123e5512d2f88429890/SeqFindr-0.34.0.tar.gz", "yanked": false}], "0.35.0": [{"comment_text": "", "digests": {"md5": "83e9e7e69cc5834346e54a0a0275af4c", "sha256": "acc8a54f681863d182db84a0c31f6509042dba7245ff88a7095d7ced8cecef68"}, "downloads": -1, "filename": "SeqFindr-0.35.0-py2-none-any.whl", "has_sig": false, "md5_digest": "83e9e7e69cc5834346e54a0a0275af4c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 168018, "upload_time": "2014-12-07T08:17:31", "upload_time_iso_8601": "2014-12-07T08:17:31.723963Z", "url": "https://files.pythonhosted.org/packages/b1/28/7e85a36de8516fc1d637bc910f228b8d60579e3103630991652478a047de/SeqFindr-0.35.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31abfe0f6ed0a99a337d5bede13e8b73", "sha256": "5f840d84472bf39e8b59559018f70eb3b4ad2a992a093a49de74cde71851f2b0"}, "downloads": -1, "filename": "SeqFindr-0.35.0.tar.gz", "has_sig": false, "md5_digest": "31abfe0f6ed0a99a337d5bede13e8b73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 117523, "upload_time": "2014-12-07T08:17:38", "upload_time_iso_8601": "2014-12-07T08:17:38.633895Z", "url": "https://files.pythonhosted.org/packages/f6/f1/941f4b6f207b45b3282c058d3bec68e1517a2fc399cf5c38f707a8bc063c/SeqFindr-0.35.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "83e9e7e69cc5834346e54a0a0275af4c", "sha256": "acc8a54f681863d182db84a0c31f6509042dba7245ff88a7095d7ced8cecef68"}, "downloads": -1, "filename": "SeqFindr-0.35.0-py2-none-any.whl", "has_sig": false, "md5_digest": "83e9e7e69cc5834346e54a0a0275af4c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 168018, "upload_time": "2014-12-07T08:17:31", "upload_time_iso_8601": "2014-12-07T08:17:31.723963Z", "url": "https://files.pythonhosted.org/packages/b1/28/7e85a36de8516fc1d637bc910f228b8d60579e3103630991652478a047de/SeqFindr-0.35.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31abfe0f6ed0a99a337d5bede13e8b73", "sha256": "5f840d84472bf39e8b59559018f70eb3b4ad2a992a093a49de74cde71851f2b0"}, "downloads": -1, "filename": "SeqFindr-0.35.0.tar.gz", "has_sig": false, "md5_digest": "31abfe0f6ed0a99a337d5bede13e8b73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 117523, "upload_time": "2014-12-07T08:17:38", "upload_time_iso_8601": "2014-12-07T08:17:38.633895Z", "url": "https://files.pythonhosted.org/packages/f6/f1/941f4b6f207b45b3282c058d3bec68e1517a2fc399cf5c38f707a8bc063c/SeqFindr-0.35.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:52 2020"}