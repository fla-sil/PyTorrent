{"info": {"author": "Shunta Saito", "author_email": "shunta.saito@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "PyNVVL\n======\n[![pypi-pynvvl-cuda80](https://img.shields.io/pypi/v/pynvvl-cuda80.svg)](https://pypi.org/project/pynvvl-cuda80)\n[![pypi-pynvvl-cuda90](https://img.shields.io/pypi/v/pynvvl-cuda90.svg)](https://pypi.org/project/pynvvl-cuda90)\n[![pypi-pynvvl-cuda91](https://img.shields.io/pypi/v/pynvvl-cuda91.svg)](https://pypi.org/project/pynvvl-cuda91)\n[![pypi-pynvvl-cuda92](https://img.shields.io/pypi/v/pynvvl-cuda92.svg)](https://pypi.org/project/pynvvl-cuda92)\n[![GitHub license](https://img.shields.io/github/license/mitmul/pynvvl.svg)](https://github.com/mitmul/pynvvl)\n\nPyNVVL is a thin wrapper of [NVIDIA Video Loader (NVVL)](https://github.com/NVIDIA/nvvl). This package enables you to load videos directoly to GPU memory and access them as [CuPy](https://github.com/cupy/cupy) ndarrays with zero copy. The pre-built binaries of PyNVVL include NVVL itself, so you do not need to install NVVL.\n\n## Requirements\n\n- CUDA 8.0, 9.0, 9.1, or 9.2\n- Python 2.7.6+, 3.4.7+, 3.5.1+, or 3.6.0+\n- [CuPy](https://github.com/cupy/cupy) v4.5.0\n\n## Tested Environment\n\n- Ubuntu 16.04\n- Python 2.7.6+, 3.4.7+, 3.5.1+, and 3.6.0+\n- CUDA 8.0, 9.0, 9.1, and 9.2\n\n## Install the pre-built binary\n\nPlease choose a right package depending on your CUDA version.\n\n```bash\n# [For CUDA 8.0]\npip install pynvvl-cuda80\n\n# [For CUDA 9.0]\npip install pynvvl-cuda90\n\n# [For CUDA 9.1]\npip install pynvvl-cuda91\n\n# [For CUDA 9.2]\npip install pynvvl-cuda92\n```\n\n## Usage\n\n```python\nimport pynvvl\nimport matplotlib.pyplot as plt\n\n# Create NVVLVideoLoader object\nloader = pynvvl.NVVLVideoLoader(device_id=0, log_level='error')\n\n# Show the number of frames in the video\nn_frames = loader.frame_count('examples/sample.mp4')\nprint('Number of frames:', n_frames)\n\n# Load a video and return it as a CuPy array\nvideo = loader.read_sequence(\n    'examples/sample.mp4',\n    horiz_flip=True,\n    scale_height=512,\n    scale_width=512,\n    crop_y=60,\n    crop_height=385,\n    crop_width=512,\n    scale_method='Linear',\n    normalized=True\n)\n\nprint(video.shape)  # => (91, 3, 385, 512): (n_frames, channels, height, width)\nprint(video.dtype)  # => float32\n\n# Get the first frame as numpy array\nframe = video[0].get()\nframe = frame.transpose(1, 2, 0)\n\nplt.imshow(frame)\nplt.savefig('examples/sample.png')\n```\n\n![](https://github.com/mitmul/pynvvl/raw/master/examples/sample.png)\n\nThis video is `flickr-2-6-3-3-5-2-7-6-5626335276_4.mp4` from the Moments-In-Time dataset.\n\nNote that cropping is performed after scaling. In the above example, NVVL performs scaling up from 256 x 256 to 512 x 512 first, then cropping the region [60:60 + 385, 0:512]. See the following section to know more about the transformation options.\n\n## VideoLoader options\n\nPlease specify the GPU device id when you create a `NVVLVideoLoader` object.\nYou can also specify the logging level with a argument `log_level` for the constructor of `NVVLVideoLoader`.\n\n```\nWrapper of NVVL VideoLoader\n\n    Args:\n        device_id (int): Specify the device id used to load a video.\n        log_level (str): Logging level which should be either 'debug',\n            'info', 'warn', 'error', or 'none'.\n            Logs with levels >= log_level is shown. The default is 'warn'.\n```\n\n## Transformation Options\n\n`pynvvl.NVVLVideoLoader.read_sequence` can take some options to specify the color space, the value range, and what transformations you want to perform to the video.\n\n```\nLoads the video from disk and returns it as a CuPy ndarray.\n\n    Args:\n        filename (str): The path to the video.\n        frame (int): The initial frame number of the returned sequence.\n            Default is 0.\n        count (int): The number of frames of the returned sequence.\n            If it is None, whole frames of the video are loaded.\n        channels (int): The number of color channels of the video.\n            Default is 3.\n        scale_height (int): The height of the scaled video.\n            Note that scaling is performed before cropping.\n            If it is 0 no scaling is performed. Default is 0.\n        scale_width (int): The width of the scaled video.\n            Note that scaling is performed before cropping.\n            If it is 0, no scaling is performed. Default is 0.\n        crop_x (int): Location of the crop within the scaled frame.\n            Must be set such that crop_y + height <= original height.\n            Default is 0.\n        crop_y (int): Location of the crop within the scaled frame.\n            Must be set such that crop_x + width <= original height.\n            Default is 0.\n        crop_height (int): The height of cropped region of the video.\n            If it is None, no cropping is performed. Default is None.\n        crop_width (int): The width of cropped region of the video.\n            If it is None, no cropping is performed. Default is None.\n        scale_method (str): Scaling method. It should be either of\n            'Nearest' or 'Lienar'. Default is 'Linear'.\n        horiz_flip (bool): Whether horizontal flipping is performed or not.\n            Default is False.\n        normalized (bool): If it is True, the values of returned video is\n            normalized into [0, 1], otherwise the value range is [0, 255].\n            Default is False.\n        color_space (str): The color space of the values of returned video.\n            It should be either 'RGB' or 'YCbCr'. Default is 'RGB'.\n        chroma_up_method (str): How the chroma channels are upscaled from\n            yuv 4:2:0 to 4:4:4. It should be 'Linear' currently.\n        out (cupy.ndarray): Alternate output array where place the result.\n            It must have the same shape and the dtype as the expected\n            output, and its order must be C-contiguous.\n```\n\n## How to build\n\n### Build wheels using Docker: \n\nRequirements:\n\n- Docker\n- nvidia-docker (v1/v2)\n\n```\nbash docker/build_wheels.sh\n```\n\n### Setup development environment without Docker:\n\nThe `setup.py` script searches for necessary libraries.\n\nRequirements: the following libraries are available in `LIBRARY_PATH`.\n\n- libnvvl.so\n- libavformat.so.57\n- libavfilter.so.6\n- libavcodec.so.57\n- libavutil.so.55\n\nYou can build `libnvvl.so` in the `nvvl` repository. Follow the instructions\nof `nvvl` library. The `build` directory must be in `LIBRARY_PATH`.\n\nOther three libraries are available as packages in Ubuntu 16.04.\nThey are installed under `/usr/lib/x86_64-linux-gnu`, so they must be in `LIBRARY_PATH` as well.\n\n```\npython setup.py develop\npython setup.py bdist_wheel\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mitmul/pynvvl", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "pynvvl-cuda80", "package_url": "https://pypi.org/project/pynvvl-cuda80/", "platform": "", "project_url": "https://pypi.org/project/pynvvl-cuda80/", "project_urls": {"Homepage": "https://github.com/mitmul/pynvvl"}, "release_url": "https://pypi.org/project/pynvvl-cuda80/0.0.3a2/", "requires_dist": ["cupy-cuda80 (>=4.5.0)"], "requires_python": "", "summary": "PyNVVL: A Python wrapper for NVIDIA Video Loader (NVVL) with CuPy", "version": "0.0.3a2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyNVVL</h1>\n<p><a href=\"https://pypi.org/project/pynvvl-cuda80\" rel=\"nofollow\"><img alt=\"pypi-pynvvl-cuda80\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/417e6a942ee22ce2455e69edb2794e375c2a4552/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796e76766c2d6375646138302e737667\"></a>\n<a href=\"https://pypi.org/project/pynvvl-cuda90\" rel=\"nofollow\"><img alt=\"pypi-pynvvl-cuda90\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5299cec07bd6e73c990b113554c93f5213c340be/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796e76766c2d6375646139302e737667\"></a>\n<a href=\"https://pypi.org/project/pynvvl-cuda91\" rel=\"nofollow\"><img alt=\"pypi-pynvvl-cuda91\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f57166277aa7eea1dff4f9b635589db27b36c90/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796e76766c2d6375646139312e737667\"></a>\n<a href=\"https://pypi.org/project/pynvvl-cuda92\" rel=\"nofollow\"><img alt=\"pypi-pynvvl-cuda92\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6d0b9c57cc13a19c13e39cddba52a436a136e5bf/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796e76766c2d6375646139322e737667\"></a>\n<a href=\"https://github.com/mitmul/pynvvl\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aa4de23b1dd68d34e1bbd771562ad70603b87045/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d69746d756c2f70796e76766c2e737667\"></a></p>\n<p>PyNVVL is a thin wrapper of <a href=\"https://github.com/NVIDIA/nvvl\" rel=\"nofollow\">NVIDIA Video Loader (NVVL)</a>. This package enables you to load videos directoly to GPU memory and access them as <a href=\"https://github.com/cupy/cupy\" rel=\"nofollow\">CuPy</a> ndarrays with zero copy. The pre-built binaries of PyNVVL include NVVL itself, so you do not need to install NVVL.</p>\n<h2>Requirements</h2>\n<ul>\n<li>CUDA 8.0, 9.0, 9.1, or 9.2</li>\n<li>Python 2.7.6+, 3.4.7+, 3.5.1+, or 3.6.0+</li>\n<li><a href=\"https://github.com/cupy/cupy\" rel=\"nofollow\">CuPy</a> v4.5.0</li>\n</ul>\n<h2>Tested Environment</h2>\n<ul>\n<li>Ubuntu 16.04</li>\n<li>Python 2.7.6+, 3.4.7+, 3.5.1+, and 3.6.0+</li>\n<li>CUDA 8.0, 9.0, 9.1, and 9.2</li>\n</ul>\n<h2>Install the pre-built binary</h2>\n<p>Please choose a right package depending on your CUDA version.</p>\n<pre><span class=\"c1\"># [For CUDA 8.0]</span>\npip install pynvvl-cuda80\n\n<span class=\"c1\"># [For CUDA 9.0]</span>\npip install pynvvl-cuda90\n\n<span class=\"c1\"># [For CUDA 9.1]</span>\npip install pynvvl-cuda91\n\n<span class=\"c1\"># [For CUDA 9.2]</span>\npip install pynvvl-cuda92\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pynvvl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"c1\"># Create NVVLVideoLoader object</span>\n<span class=\"n\">loader</span> <span class=\"o\">=</span> <span class=\"n\">pynvvl</span><span class=\"o\">.</span><span class=\"n\">NVVLVideoLoader</span><span class=\"p\">(</span><span class=\"n\">device_id</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">log_level</span><span class=\"o\">=</span><span class=\"s1\">'error'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Show the number of frames in the video</span>\n<span class=\"n\">n_frames</span> <span class=\"o\">=</span> <span class=\"n\">loader</span><span class=\"o\">.</span><span class=\"n\">frame_count</span><span class=\"p\">(</span><span class=\"s1\">'examples/sample.mp4'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Number of frames:'</span><span class=\"p\">,</span> <span class=\"n\">n_frames</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Load a video and return it as a CuPy array</span>\n<span class=\"n\">video</span> <span class=\"o\">=</span> <span class=\"n\">loader</span><span class=\"o\">.</span><span class=\"n\">read_sequence</span><span class=\"p\">(</span>\n    <span class=\"s1\">'examples/sample.mp4'</span><span class=\"p\">,</span>\n    <span class=\"n\">horiz_flip</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">scale_height</span><span class=\"o\">=</span><span class=\"mi\">512</span><span class=\"p\">,</span>\n    <span class=\"n\">scale_width</span><span class=\"o\">=</span><span class=\"mi\">512</span><span class=\"p\">,</span>\n    <span class=\"n\">crop_y</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span>\n    <span class=\"n\">crop_height</span><span class=\"o\">=</span><span class=\"mi\">385</span><span class=\"p\">,</span>\n    <span class=\"n\">crop_width</span><span class=\"o\">=</span><span class=\"mi\">512</span><span class=\"p\">,</span>\n    <span class=\"n\">scale_method</span><span class=\"o\">=</span><span class=\"s1\">'Linear'</span><span class=\"p\">,</span>\n    <span class=\"n\">normalized</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>  <span class=\"c1\"># =&gt; (91, 3, 385, 512): (n_frames, channels, height, width)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span>  <span class=\"c1\"># =&gt; float32</span>\n\n<span class=\"c1\"># Get the first frame as numpy array</span>\n<span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">video</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">'examples/sample.png'</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/16bd58960e288621e0b33a28f5219f20fb5b534e/68747470733a2f2f6769746875622e636f6d2f6d69746d756c2f70796e76766c2f7261772f6d61737465722f6578616d706c65732f73616d706c652e706e67\"></p>\n<p>This video is <code>flickr-2-6-3-3-5-2-7-6-5626335276_4.mp4</code> from the Moments-In-Time dataset.</p>\n<p>Note that cropping is performed after scaling. In the above example, NVVL performs scaling up from 256 x 256 to 512 x 512 first, then cropping the region [60:60 + 385, 0:512]. See the following section to know more about the transformation options.</p>\n<h2>VideoLoader options</h2>\n<p>Please specify the GPU device id when you create a <code>NVVLVideoLoader</code> object.\nYou can also specify the logging level with a argument <code>log_level</code> for the constructor of <code>NVVLVideoLoader</code>.</p>\n<pre><code>Wrapper of NVVL VideoLoader\n\n    Args:\n        device_id (int): Specify the device id used to load a video.\n        log_level (str): Logging level which should be either 'debug',\n            'info', 'warn', 'error', or 'none'.\n            Logs with levels &gt;= log_level is shown. The default is 'warn'.\n</code></pre>\n<h2>Transformation Options</h2>\n<p><code>pynvvl.NVVLVideoLoader.read_sequence</code> can take some options to specify the color space, the value range, and what transformations you want to perform to the video.</p>\n<pre><code>Loads the video from disk and returns it as a CuPy ndarray.\n\n    Args:\n        filename (str): The path to the video.\n        frame (int): The initial frame number of the returned sequence.\n            Default is 0.\n        count (int): The number of frames of the returned sequence.\n            If it is None, whole frames of the video are loaded.\n        channels (int): The number of color channels of the video.\n            Default is 3.\n        scale_height (int): The height of the scaled video.\n            Note that scaling is performed before cropping.\n            If it is 0 no scaling is performed. Default is 0.\n        scale_width (int): The width of the scaled video.\n            Note that scaling is performed before cropping.\n            If it is 0, no scaling is performed. Default is 0.\n        crop_x (int): Location of the crop within the scaled frame.\n            Must be set such that crop_y + height &lt;= original height.\n            Default is 0.\n        crop_y (int): Location of the crop within the scaled frame.\n            Must be set such that crop_x + width &lt;= original height.\n            Default is 0.\n        crop_height (int): The height of cropped region of the video.\n            If it is None, no cropping is performed. Default is None.\n        crop_width (int): The width of cropped region of the video.\n            If it is None, no cropping is performed. Default is None.\n        scale_method (str): Scaling method. It should be either of\n            'Nearest' or 'Lienar'. Default is 'Linear'.\n        horiz_flip (bool): Whether horizontal flipping is performed or not.\n            Default is False.\n        normalized (bool): If it is True, the values of returned video is\n            normalized into [0, 1], otherwise the value range is [0, 255].\n            Default is False.\n        color_space (str): The color space of the values of returned video.\n            It should be either 'RGB' or 'YCbCr'. Default is 'RGB'.\n        chroma_up_method (str): How the chroma channels are upscaled from\n            yuv 4:2:0 to 4:4:4. It should be 'Linear' currently.\n        out (cupy.ndarray): Alternate output array where place the result.\n            It must have the same shape and the dtype as the expected\n            output, and its order must be C-contiguous.\n</code></pre>\n<h2>How to build</h2>\n<h3>Build wheels using Docker:</h3>\n<p>Requirements:</p>\n<ul>\n<li>Docker</li>\n<li>nvidia-docker (v1/v2)</li>\n</ul>\n<pre><code>bash docker/build_wheels.sh\n</code></pre>\n<h3>Setup development environment without Docker:</h3>\n<p>The <code>setup.py</code> script searches for necessary libraries.</p>\n<p>Requirements: the following libraries are available in <code>LIBRARY_PATH</code>.</p>\n<ul>\n<li>libnvvl.so</li>\n<li>libavformat.so.57</li>\n<li>libavfilter.so.6</li>\n<li>libavcodec.so.57</li>\n<li>libavutil.so.55</li>\n</ul>\n<p>You can build <code>libnvvl.so</code> in the <code>nvvl</code> repository. Follow the instructions\nof <code>nvvl</code> library. The <code>build</code> directory must be in <code>LIBRARY_PATH</code>.</p>\n<p>Other three libraries are available as packages in Ubuntu 16.04.\nThey are installed under <code>/usr/lib/x86_64-linux-gnu</code>, so they must be in <code>LIBRARY_PATH</code> as well.</p>\n<pre><code>python setup.py develop\npython setup.py bdist_wheel\n</code></pre>\n\n          </div>"}, "last_serial": 4785192, "releases": {"0.0.2a1": [{"comment_text": "", "digests": {"md5": "41de65c8647f0e870acea9c52a8e3fc8", "sha256": "d6aa4bdb22fdf79309e690dd3684281a1ee15b45d0c197b40b7205974c3f2608"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a1-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "41de65c8647f0e870acea9c52a8e3fc8", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1505086, "upload_time": "2018-05-05T00:10:52", "upload_time_iso_8601": "2018-05-05T00:10:52.300823Z", "url": "https://files.pythonhosted.org/packages/0f/9f/a4d9d53265da6051521164f06c7198595f28c94803c83e34db085cdabfd8/pynvvl_cuda80-0.0.2a1-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7847ad3175f6451789c8a7f8eb4104b9", "sha256": "95fd993454ec12c7d427b32b5ce675c9df15f40a2a4137d7fca4d4b6919d3956"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a1-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "7847ad3175f6451789c8a7f8eb4104b9", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1514064, "upload_time": "2018-05-05T00:10:56", "upload_time_iso_8601": "2018-05-05T00:10:56.210732Z", "url": "https://files.pythonhosted.org/packages/f1/59/8db5978e21e1e0a274692e1657826b42bf2cb087a0892386f5768f17a373/pynvvl_cuda80-0.0.2a1-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ba4a9e56be4095db53d557c4c0f7977", "sha256": "94b47fe72e8eb3c128a1eed3b0c4112ac2f4e9e41f0e3e5a2f591519da29f00d"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a1-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "4ba4a9e56be4095db53d557c4c0f7977", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1511726, "upload_time": "2018-05-05T00:11:00", "upload_time_iso_8601": "2018-05-05T00:11:00.153618Z", "url": "https://files.pythonhosted.org/packages/17/a2/9dd709f15f0c80b4677967663732fd59438154093fcdb652fbe0601dea05/pynvvl_cuda80-0.0.2a1-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6b9718e5302504826a4341adf3b1b83", "sha256": "9f4e3064fdc5d39645706a6873350673008f3aa30d88e4ae04155408e5db5926"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a1-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e6b9718e5302504826a4341adf3b1b83", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1514456, "upload_time": "2018-05-05T00:11:04", "upload_time_iso_8601": "2018-05-05T00:11:04.067337Z", "url": "https://files.pythonhosted.org/packages/08/9b/f38ad859db5edaac38c672c9a3a3657f528f06b5f1c099943f7e393411b7/pynvvl_cuda80-0.0.2a1-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "0.0.2a2": [{"comment_text": "", "digests": {"md5": "7f90e2837bf460d95c34bfa7ccde03e7", "sha256": "3ebf3c323d817ed0234904ec22873bd61fd58839250b3b91442e8330ca20b1fc"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a2-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "7f90e2837bf460d95c34bfa7ccde03e7", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1508455, "upload_time": "2018-05-05T03:13:08", "upload_time_iso_8601": "2018-05-05T03:13:08.991180Z", "url": "https://files.pythonhosted.org/packages/d9/ba/e64c6335cd1ecc18c66068005fa9b9ea48bc8545989f4c26558fce162e44/pynvvl_cuda80-0.0.2a2-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "63b1adca7f1dc0e7882e7bf14c24b50a", "sha256": "31fb43321b1bcf196b77d718480c46e48da9bd6f11b9a1ea56812a16d30c66f3"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a2-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "63b1adca7f1dc0e7882e7bf14c24b50a", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1518738, "upload_time": "2018-05-05T03:13:13", "upload_time_iso_8601": "2018-05-05T03:13:13.282069Z", "url": "https://files.pythonhosted.org/packages/ab/95/cd67501649655d59f85e890fac21e398fe9f8af6cc158d370c162cc72f91/pynvvl_cuda80-0.0.2a2-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d440eac59f6508f6364fb0a4ab34ec2", "sha256": "368e9dc8f3f782dc2705a060649a6603818855b1d8619a0e634433cd91c13afe"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a2-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "0d440eac59f6508f6364fb0a4ab34ec2", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1516610, "upload_time": "2018-05-05T03:13:16", "upload_time_iso_8601": "2018-05-05T03:13:16.817196Z", "url": "https://files.pythonhosted.org/packages/94/f4/5b7d3cc7292e4b65b6dd6cc2cd871abe7624e088d2128fe2ee5327ca2a13/pynvvl_cuda80-0.0.2a2-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3acc06888b734a11b774d432da2fd3e7", "sha256": "a4e270055d6d71995480f27954a181073d0ff7001ce59e3f9f59310f77f7390b"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a2-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "3acc06888b734a11b774d432da2fd3e7", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1518597, "upload_time": "2018-05-05T03:13:20", "upload_time_iso_8601": "2018-05-05T03:13:20.905408Z", "url": "https://files.pythonhosted.org/packages/d2/d0/c55ff9901e275c5fcf1b20f08bd6f9b683bdc7dfaf9fb0987b91b29e5424/pynvvl_cuda80-0.0.2a2-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "0.0.2a3": [{"comment_text": "", "digests": {"md5": "dc874189f3a72dcd459e655c375d3b9b", "sha256": "40372fe5a7a9cb31921a9e0f5f9b0d0daf9bef2ca168bedd580423fbe56deb3e"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a3-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "dc874189f3a72dcd459e655c375d3b9b", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1510943, "upload_time": "2018-05-07T10:13:25", "upload_time_iso_8601": "2018-05-07T10:13:25.661690Z", "url": "https://files.pythonhosted.org/packages/1f/ca/573f9cf884608fa211c9e6008c3f31698600b14691c4148e63e0d6c04c99/pynvvl_cuda80-0.0.2a3-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9706308ba33914e09c3d74cc236635f", "sha256": "a426bdee141d3ae62aa071f22d744dc8f055793590e7d52a71ba68384eb1813f"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a3-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e9706308ba33914e09c3d74cc236635f", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1523992, "upload_time": "2018-05-07T10:13:30", "upload_time_iso_8601": "2018-05-07T10:13:30.429475Z", "url": "https://files.pythonhosted.org/packages/2f/d8/232d2ea5a6d5166211d69d0d945353a11b18e88435fd698eb8478cc42e59/pynvvl_cuda80-0.0.2a3-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74018a45b8bb990dee1d787601f4287d", "sha256": "b3f65cef979ce5da4e60db506c0beaf4be1582e2ddad94caa420e86f211ffb9b"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a3-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "74018a45b8bb990dee1d787601f4287d", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1521663, "upload_time": "2018-05-07T10:13:33", "upload_time_iso_8601": "2018-05-07T10:13:33.855514Z", "url": "https://files.pythonhosted.org/packages/9b/ad/a4a124783014a1b69f4c35a55210ba8f5d48d254222672b8e9095af52a9d/pynvvl_cuda80-0.0.2a3-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "37bde76b7e7f91ae63ee28d66982717a", "sha256": "952410737725d8e05c4c2e7fac689e9e8545e978773ad022d4ed462b262a710d"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a3-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "37bde76b7e7f91ae63ee28d66982717a", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1524607, "upload_time": "2018-05-07T10:13:37", "upload_time_iso_8601": "2018-05-07T10:13:37.959918Z", "url": "https://files.pythonhosted.org/packages/c7/fa/7becf7a474ce22aad7a82e1e41807c01282023f4136588391f7d30ac450f/pynvvl_cuda80-0.0.2a3-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "0.0.2a4": [{"comment_text": "", "digests": {"md5": "46dbe0e3499bf16b0fae986e7e7cc64e", "sha256": "5425aa2da688a20a2b7be906809a871710f9714afae349f4868d6c988517f33b"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a4-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "46dbe0e3499bf16b0fae986e7e7cc64e", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1511099, "upload_time": "2018-05-15T07:58:06", "upload_time_iso_8601": "2018-05-15T07:58:06.391827Z", "url": "https://files.pythonhosted.org/packages/66/0c/7ad28b940fce88568b52e57c7a8c6c90994a490ae3ca4f9ffd84cfea587a/pynvvl_cuda80-0.0.2a4-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6996e1662f6ee2858792395c2964a31", "sha256": "3033b33cf3341337f5c864857b56bfad29bdf950b2e5302004885d2893014bc2"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a4-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "a6996e1662f6ee2858792395c2964a31", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1524086, "upload_time": "2018-05-15T07:58:10", "upload_time_iso_8601": "2018-05-15T07:58:10.575475Z", "url": "https://files.pythonhosted.org/packages/86/0d/5a01d1a5735f3172e1d784406bc4fbfe02e15bc6e4cae1bfbcc7f0f133b6/pynvvl_cuda80-0.0.2a4-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff043af2793a03927295abffef1558f9", "sha256": "e96b4b4892ff4bb401eadab0fe2a234b566454d4b752e24307d18e01a298546a"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a4-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "ff043af2793a03927295abffef1558f9", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1521675, "upload_time": "2018-05-15T07:58:14", "upload_time_iso_8601": "2018-05-15T07:58:14.516999Z", "url": "https://files.pythonhosted.org/packages/26/65/ef9bb44fd9cff8bc1c5d2a7b77bd533f3944c63ac35db8c116907dc2f64c/pynvvl_cuda80-0.0.2a4-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04c29f346a5389872288b877fc652074", "sha256": "36129a6444934c4c555f93ace107fc27310d63b6689606d96808f02934e2eefa"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a4-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "04c29f346a5389872288b877fc652074", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1524665, "upload_time": "2018-05-15T07:58:18", "upload_time_iso_8601": "2018-05-15T07:58:18.669396Z", "url": "https://files.pythonhosted.org/packages/07/4a/85438b02f48dc81fe7dcb770769ff40811fcaa0fd453a622d3fc07936dc0/pynvvl_cuda80-0.0.2a4-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "0.0.2a5": [{"comment_text": "", "digests": {"md5": "9d195b24d1a33b0c15cbc1f3723a6ad7", "sha256": "5abb00420ace89f518da20432f9fd5eceac5da1c1022f7d7227946cb451cacbd"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a5-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "9d195b24d1a33b0c15cbc1f3723a6ad7", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1520726, "upload_time": "2018-05-18T08:52:49", "upload_time_iso_8601": "2018-05-18T08:52:49.194457Z", "url": "https://files.pythonhosted.org/packages/83/5f/247de8367a2233e9fca8d207f1d47dfd159ec97d2c40f6d72203c77dc4b1/pynvvl_cuda80-0.0.2a5-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "110be40fe286446d3d10acdaa05873a3", "sha256": "52873bf77380aae990707e072e7c56052265be84da33926116c812fff0e1f63e"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a5-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "110be40fe286446d3d10acdaa05873a3", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1535418, "upload_time": "2018-05-18T08:52:54", "upload_time_iso_8601": "2018-05-18T08:52:54.143316Z", "url": "https://files.pythonhosted.org/packages/8a/26/4ee7cfbe6c733a82cbf2b6e669e5300a5a468f8bd3fc3e671a223fd9144f/pynvvl_cuda80-0.0.2a5-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d74e08e550d62ae5a4ab82a034aac694", "sha256": "e73501e7fddeb3f1f7adf53ef2fcc4e0631eefc7b30499504693d01557bd2d4c"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a5-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "d74e08e550d62ae5a4ab82a034aac694", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1532592, "upload_time": "2018-05-18T08:52:58", "upload_time_iso_8601": "2018-05-18T08:52:58.394037Z", "url": "https://files.pythonhosted.org/packages/a1/51/f3539ff08775a0f42541842963ffbb04814b289b726576d05a08b579c53c/pynvvl_cuda80-0.0.2a5-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c00b6742ba27a6fb7b27bc1cd53d7095", "sha256": "8b08816fb48f5eaf4f57cd2618518681162d4a5c6ac5e565b7bf92d78972408f"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.2a5-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "c00b6742ba27a6fb7b27bc1cd53d7095", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1537010, "upload_time": "2018-05-18T08:53:02", "upload_time_iso_8601": "2018-05-18T08:53:02.002266Z", "url": "https://files.pythonhosted.org/packages/be/81/af3461433949fef40ec0d68e2a6a4f2b973800a42521482ce47ec2e4740e/pynvvl_cuda80-0.0.2a5-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "0.0.3a1": [{"comment_text": "", "digests": {"md5": "849593bb07e9d5ad6af543052e71be43", "sha256": "3102f2a7e9b4a7d767b205d36467eac7f277640ba4c9804df57e052523943f1c"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.3a1-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "849593bb07e9d5ad6af543052e71be43", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 779825, "upload_time": "2018-09-30T16:25:26", "upload_time_iso_8601": "2018-09-30T16:25:26.132599Z", "url": "https://files.pythonhosted.org/packages/1a/f0/a5065bbf23858f1aa25c10d62827d778cc44075e51318d63d589edad85bd/pynvvl_cuda80-0.0.3a1-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff17d8156f5ed490158f1be3f0d8f6ae", "sha256": "b9a3b8a8de54f1aa34b14b7c40b99876d72469b60a8ea5328474df4a431fb154"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.3a1-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "ff17d8156f5ed490158f1be3f0d8f6ae", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 794520, "upload_time": "2018-09-30T16:25:28", "upload_time_iso_8601": "2018-09-30T16:25:28.469862Z", "url": "https://files.pythonhosted.org/packages/18/90/80f1cafecc1523d61b6b9cab730786f2a23bdb9fbf2f26abb4ccca2d8be7/pynvvl_cuda80-0.0.3a1-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36f4bf45272c6dc6bf87ddf5e6c13de1", "sha256": "cbb549963d592800b95d60de807026f2007b3fd4363d3874e15c82d8e1e972ff"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.3a1-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "36f4bf45272c6dc6bf87ddf5e6c13de1", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 791691, "upload_time": "2018-09-30T16:25:30", "upload_time_iso_8601": "2018-09-30T16:25:30.864255Z", "url": "https://files.pythonhosted.org/packages/d3/3d/7fc9a942f44094a23a208b807ff587bd1f52550cf9c47101a85add324efa/pynvvl_cuda80-0.0.3a1-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "adcdc706ea53eb6ffdbba99cb6e15db7", "sha256": "d65e81fa03de34bcd3f69b7e8f45c79d27dae3240be105c8490ae31242450b35"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.3a1-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "adcdc706ea53eb6ffdbba99cb6e15db7", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 796113, "upload_time": "2018-09-30T16:25:33", "upload_time_iso_8601": "2018-09-30T16:25:33.008106Z", "url": "https://files.pythonhosted.org/packages/99/4c/c571631a5f694e2dd6fa6b3a87e954c36ca4d88d6f8ee02c349021238dbf/pynvvl_cuda80-0.0.3a1-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "0.0.3a2": [{"comment_text": "", "digests": {"md5": "1bb45508c6583ed0c5691f19e685433f", "sha256": "939ad5061f3a8c3ed3bf809567fea04b6c935b7850f904d55a8a268b6cfc5219"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.3a2-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "1bb45508c6583ed0c5691f19e685433f", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 779875, "upload_time": "2018-09-30T17:10:11", "upload_time_iso_8601": "2018-09-30T17:10:11.883200Z", "url": "https://files.pythonhosted.org/packages/f4/1a/ff4823d3b451030391cb1aab89274082d222674884fe03280ef7b72bab7d/pynvvl_cuda80-0.0.3a2-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66b686ff47754384544ec035edc80eda", "sha256": "3094b8cd04b976003956901d99441b47692cd9b7372b90571d6bba209ca9a479"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.3a2-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "66b686ff47754384544ec035edc80eda", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 794570, "upload_time": "2018-09-30T17:10:14", "upload_time_iso_8601": "2018-09-30T17:10:14.132175Z", "url": "https://files.pythonhosted.org/packages/75/1c/df3bb0821fea70421105e51d34e5c01e0c7d538a8695602f650e28db23cb/pynvvl_cuda80-0.0.3a2-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7da76f4ebd063b1e9f751209ac630f8a", "sha256": "329f0e463425854666dcdaf86dedd859a3a4b8e2bdb15c10e10c1ef6c3d80284"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.3a2-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "7da76f4ebd063b1e9f751209ac630f8a", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 791738, "upload_time": "2018-09-30T17:10:16", "upload_time_iso_8601": "2018-09-30T17:10:16.571532Z", "url": "https://files.pythonhosted.org/packages/25/e9/cdbeddbae5a48e99fb6788f95925ac00ae037a38062fc912b7b0aa0dea01/pynvvl_cuda80-0.0.3a2-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9cd64000f8392fc8842b84116bcf67b", "sha256": "4123c69a0b04ac5f1eca84ade2d63e1c493252328278d1915656a514fb16691d"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.3a2-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "c9cd64000f8392fc8842b84116bcf67b", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 796161, "upload_time": "2018-09-30T17:10:19", "upload_time_iso_8601": "2018-09-30T17:10:19.274958Z", "url": "https://files.pythonhosted.org/packages/b4/98/b0dcf71fe33ca72dde21e2a770ba6899c1d5e9e5243fbe80c75c1f61ce55/pynvvl_cuda80-0.0.3a2-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1bb45508c6583ed0c5691f19e685433f", "sha256": "939ad5061f3a8c3ed3bf809567fea04b6c935b7850f904d55a8a268b6cfc5219"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.3a2-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "1bb45508c6583ed0c5691f19e685433f", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 779875, "upload_time": "2018-09-30T17:10:11", "upload_time_iso_8601": "2018-09-30T17:10:11.883200Z", "url": "https://files.pythonhosted.org/packages/f4/1a/ff4823d3b451030391cb1aab89274082d222674884fe03280ef7b72bab7d/pynvvl_cuda80-0.0.3a2-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66b686ff47754384544ec035edc80eda", "sha256": "3094b8cd04b976003956901d99441b47692cd9b7372b90571d6bba209ca9a479"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.3a2-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "66b686ff47754384544ec035edc80eda", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 794570, "upload_time": "2018-09-30T17:10:14", "upload_time_iso_8601": "2018-09-30T17:10:14.132175Z", "url": "https://files.pythonhosted.org/packages/75/1c/df3bb0821fea70421105e51d34e5c01e0c7d538a8695602f650e28db23cb/pynvvl_cuda80-0.0.3a2-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7da76f4ebd063b1e9f751209ac630f8a", "sha256": "329f0e463425854666dcdaf86dedd859a3a4b8e2bdb15c10e10c1ef6c3d80284"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.3a2-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "7da76f4ebd063b1e9f751209ac630f8a", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 791738, "upload_time": "2018-09-30T17:10:16", "upload_time_iso_8601": "2018-09-30T17:10:16.571532Z", "url": "https://files.pythonhosted.org/packages/25/e9/cdbeddbae5a48e99fb6788f95925ac00ae037a38062fc912b7b0aa0dea01/pynvvl_cuda80-0.0.3a2-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9cd64000f8392fc8842b84116bcf67b", "sha256": "4123c69a0b04ac5f1eca84ade2d63e1c493252328278d1915656a514fb16691d"}, "downloads": -1, "filename": "pynvvl_cuda80-0.0.3a2-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "c9cd64000f8392fc8842b84116bcf67b", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 796161, "upload_time": "2018-09-30T17:10:19", "upload_time_iso_8601": "2018-09-30T17:10:19.274958Z", "url": "https://files.pythonhosted.org/packages/b4/98/b0dcf71fe33ca72dde21e2a770ba6899c1d5e9e5243fbe80c75c1f61ce55/pynvvl_cuda80-0.0.3a2-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "timestamp": "Fri May  8 03:00:57 2020"}