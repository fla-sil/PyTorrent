{"info": {"author": "Carlos Gil Gonzalez", "author_email": "carlosgilglez@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Embedded Systems", "Topic :: System :: Monitoring", "Topic :: Terminals"], "description": "# uPydevice\n\n[![PyPI version](https://badge.fury.io/py/upydevice.svg)](https://badge.fury.io/py/upydevice)[![PyPI license](https://img.shields.io/pypi/l/ansicolortags.svg)](https://pypi.python.org/pypi/ansicolortags/)\n\nPython library to interface with MicroPython devices through websockets (WebREPL protocol) or through Serial connection (USB).\n\n### Requirements\n* [upydev](https://github.com/Carglglz/upydev)\n* [picocom](https://github.com/npat-efault/picocom)\n* [pyserial](https://github.com/pyserial/pyserial/)\n* [dill](https://github.com/uqfoundation/dill)\n* [pexpect](https://github.com/pexpect/pexpect)\n\n*upydev , pyserial and dill will be automatically installed with pip*  \n\n*to install picocom do:*  `brew install picocom`\n\n### Requirements * (New in version 0.2.0):\n\nFor the new classes `SERIAL_DEVICE` , `WS_DEVICE` and `DEVGROUP` only [pyserial](https://github.com/pyserial/pyserial/) is required.\n\n### Tested on\n\n- OS: \n  - MacOS Mojave 10.14.6\n  - Raspbian Stretch (9.11) (RPY ZERO W) (*just WebREPL protocol)\n- BOARDS:\n  - Esp32 (Adafruit feather Huzzah)\n  - Esp8266 (Adafruit feather Huzzah)\n  - Pyboard Little\n  - Pyboard v1.1\n  - CircuitPlayground Express\n\n### Install\n`pip install upydevice`\n\n*To install in a raspberry pi do:*\n\n`sudo apt-get install picocom`\n\n*Install upydev manually as indicated in upydev README then*\n\n```\n$ git clone https://github.com/Carglglz/upydevice.git\n$ cd upydevice/rpy_upydevice\n$ sudo pip3 install . --no deps\n[...]\n$ sudo pip3 install pyserial\n$ sudo pip3 install dill\n```\n\n#### Documentation:\n\nSee [DOCS](https://github.com/Carglglz/upydevice/blob/master/DOCS/Documentation.md)\n\n#### Example usage * (New classes in version 0.2.0):\n\n### WIRELESS DEVICE (WebREPL Protocol): `WS_DEVICE`\n\n```\n>>> from upydevice import WS_DEVICE\n>>> esp32 = ('192.168.1.56', 'mypass', init=True, autodetect=True)\n>>> esp32.wr_cmd('led.on()')\n>>> esp32.wr_cmd(\"uos.listdir()\")\n['boot.py', 'webrepl_cfg.py', 'main.py'] # this output is stored in [upydevice].output\n\n>>> esp32.output\n['boot.py', 'webrepl_cfg.py', 'main.py']\n>>>> esp32.wr_cmd('x = [1,2,3];my_var = len(x);print(my_var)')\n3\n# Soft Reset:\n>>> esp32.reset()\n    Rebooting device...\n    Done!\n```\n\n\n\n### SERIAL DEVICE (Pyserial) : `SERIAL_DEVICE`\n\nWorks for any serial device (esp, pyboard, circuitplayground...)\n\n```\nfrom upydevice import SERIAL_DEVICE\n>>> esp32 = SERIAL_DEVICE('/dev/tty.SLAB_USBtoUART', autodetect=True) # baudrate default is 115200\n>>> esp32.wr_cmd('led.on()')\n>>> esp32.wr_cmd(\"uos.listdir()\")\n['boot.py', 'webrepl_cfg.py', 'main.py'] # this output is stored in [upydevice].output\n\n>>> esp32.output\n['boot.py', 'webrepl_cfg.py', 'main.py']\n>>>> esp32.wr_cmd('x = [1,2,3];my_var = len(x);print(my_var)')\n3\n# Soft Reset:\n>>> esp32.reset()\n    Rebooting device...\n    Done!\n```\n\n\n\n#### Example usage (OLD CLASSES):\n\n### WIRELESS DEVICE (WebREPL Protocol)\n        >>> from upydevice import W_UPYDEVICE\n    # Setup and configurate a device :\n\n        >>> esp32 = W_UPYDEVICE('192.168.1.56', 'mypass') # (target_ip, password)\n\n    # Send command:\n        >>> esp32.cmd('led.on()')\n\n        >>> esp32.cmd(\"uos.listdir('/')\")\n          ['boot.py', 'webrepl_cfg.py', 'main.py'] # this output is stored in [upydevice].output\n\n        >>> esp32.output\n          ['boot.py', 'webrepl_cfg.py', 'main.py']\n\n        >>> esp32.cmd('foo()')\n\n        >>> esp32.cmd('x = [1,2,3];my_var = len(x);print(my_var)')\n        3\n\n    # Soft Reset:\n        >>> esp32.reset()\n        Rebooting device...\n\n        ### closed ###\n\n        Done!\n\n### SERIAL DEVICE (Picocom, Pyserial)\n        >>> from upydevice import S_UPYDEVICE\n\n    # Setup and configurate a device :\n        >>> esp32 = S_UPYDEVICE('/dev/tty.SLAB_USBtoUART', 1000, 115200) # defaults (serial_port, timeout=1000, baudrate=9600)\n\n    # Send command:\n        >>> esp32.cmd('led.on()')\n\n        >>> esp32.cmd(\"uos.listdir('/')\")\n        ['boot.py', 'webrepl_cfg.py', 'main.py'] # this output is stored in [upydevice].output\n\n        >>> esp32.output\n        ['boot.py', 'webrepl_cfg.py', 'main.py']\n\n        >>> esp32.cmd('foo()')\n\n        >>> esp32.cmd('x = [1,2,3];my_var = len(x);print(my_var)')\n        3\n\n    # Soft Reset:\n        >>> esp32.reset()\n        Rebooting device...\n        Done!\n\n### PYBOARD (Picocom, Pyserial)\n\n        >>> from upydevice import PYBOARD\n\n    # Setup and configurate a device :\n        pyboard = PYBOARD('/dev/tty.usbmodem3370377430372') # defaults (serial_port, timeout=1000, baudrate=9600)\n\n    # Send command:\n        >>> pyboard.cmd('pyb.LED(1).toggle()', timeout=100)\n\n        >>> pyboard.cmd(\"import uos;uos.listdir('/flash')\")\n        ['main.py', 'pybcdc.inf', 'README.txt', 'boot.py', '.fseventsd', '.Trashes'] # this output is stored in [upydevice].output\n\n        >>> pyboard.output\n        ['main.py', 'pybcdc.inf', 'README.txt', 'boot.py', '.fseventsd', '.Trashes']\n\n        >>> pyboard.cmd('foo()')\n\n        >>> pyboard.cmd('x = [1,2,3];my_var = len(x);print(my_var)')\n        3\n\n    # Soft Reset:\n        >>> pyboard.reset()\n        Rebooting pyboard...\n        Done!\n\n### GROUP (to send commands to several devices at a time)\n\n```\n# Setup and configurate the devices :\n    >>> from upydevice import W_UPYDEVICE, PYBOARD, GROUP\n# PYBOARD\n    >>> pyboard = PYBOARD('/dev/tty.usbmodem387E386731342')\n# ESP32\n    >>> esp32_A = W_UPYDEVICE('192.168.1.73', 'mypass')\n    >>> esp32_B = W_UPYDEVICE('192.168.1.44', 'mypass')\n\n# Setup and configurate the group:\n    >>> my_group = GROUP([esp32_A, esp32_B, pyboard])\n\n# Each upydevice has a name attribute that can be set at creation momment or after\n# pyboard = PYBOARD('/dev/tty.usbmodem387E386731342', name='my_pyboard_1'); or pyboard.name = 'my_pyboard_1')\n# If not set an automatic name will be set as 'upydev_class'+'ip or serial port'\n\n# Send command:\n    >>> my_group.cmd('import machine;import  ubinascii;ubinascii.hexlify(machine.unique_id())')\n    Sending command to wupydev_73\n    b'30aea4233564'\n\n    Sending command to wupydev_44\n    b'807d3a809b30'\n\n    Sending command to pyboard_tty.usbmodem387E386731342\n    b'33004e000351343134383038'\n\n# There is an option to silent the group messages with group_silent = True, and or each device ouput with device_silent=True\n\n# Output is stored in group output attribute:\n    >>> my_group.output\n    {'wupydev_73': b'30aea4233564', 'wupydev_44': b'807d3a809b30', 'pyboard_tty.usbmodem387E386731342': b'33004e000351343134383038'}\n\n# Send command parallel mode **: (experimental mode, may not work 100% of the times, depends on the connection quality (for wireless devices))\n    >>> my_group.cmd_p('6*12')\n    Sending command to: wupydev_73, wupydev_44, pyboard_tty.usbmodem387E386731342\n    72\n\n\n    72\n\n    72\n\n    Done!\n# To see which ouput corresponds to which device use 'id=True' parameter:\n\n    >>> my_group.cmd_p('ubinascii.hexlify(machine.unique_id())', id=True)\n    Sending command to: wupydev_73, wupydev_44, pyboard_tty.usbmodem387E386731342\n    pyboard_tty.usbmodem387E386731342:b'33004e000351343134383038'\n    pyboard_tty.usbmodem387E386731342:\n    pyboard_tty.usbmodem387E386731342:\n    wupydev_44:b'807d3a809b30'\n    wupydev_73:b'30aea4233564'\n    wupydev_44:\n    wupydev_73:\n    Done!\n    >>>\n    >>> my_group.output\n    {'wupydev_73': b'30aea4233564', 'wupydev_44': b'807d3a809b30', 'pyboard_tty.usbmodem387E386731342': b'33004e000351343134383038'}\n```\n\n\n\n## More advanced examples:\n\n### Phantom module\n\nThis module has some python 'phantom' classes to make easier the interaction with the same classes in the upydevice. These classes are made using a series of decorators described in [DOCS](https://github.com/Carglglz/upydevice/blob/master/DOCS/Documentation.md#PARSER-AND-DECORATORS) \n\nAvailable classes:\n\n* MicroPython classes:\n  * **MACHINE** (just unique_id() method)\n  * **Pin**\n  * **I2C**\n  * **UOS**\n  * **pyb_LED**\n  * **pyb_Timer**\n  * **pyb_Servo**\n  * **machine_Timer**\n  * **WLAN**\n  * **AP**\n* Sensor classes:\n  * **LSM9DS1**\n  * **BME280**\n  * **ADS1115**\n* Custom classes:\n  * **IRQ_MG** (This needs *IRQ_util.py in the micropython device*)\n  * **STREAMER** (to use as a super class, and this needs *STREAMER_util.py in the micropython device*)\n  * **IMU_STREAMER**  (This needs *IMU_util.py in the micropython device*)\n  * **BME_STREAMER** (This needs *BME_util.py in the micropython device*)\n  * **ADS_STREAMER**  (This needs *ADS_util.py in the micropython device*)\n\nExamples:\n\n**UOS**\n\n```\nfrom upydevice import W_UPYDEVICE\nfrom upydevice.phantom import UOS\nesp32 = W_UPYDEVICE('192.168.1.73', 'mypass')\nuos = UOS(esp32)\nuos.listdir('/')\n ['boot.py', 'webrepl_cfg.py', 'main.py']\nuos.uname()\n (sysname='esp32', nodename='esp32', release='1.11.0', version='v1.11-530-g25946d1ef on 2019-10-29', machine='ESP32 module with ESP32')\n```\n\n\n\n## Upydevice_utils\n\nThese are some useful modules to put in the micropython device:\n\n* **IRQ_util.py** : A module to test/setup hardware interrupts easily\n* **STREAMER_util.py**: A module with U_STREAMER 'super' class to make streaming sensor data in real time easily.\n* **IMU_util.py**: A module with U_IMU_IRQ and U_IMU_STREAMER example classes.\n* **BME_util.py**: A module with U_BME_IRQ and U_BME_STREAMER example classes.\n* **ADS_util.py**: A module with U_ADS_IRQ and U_ADS_STREAMER example classes.\n\n\n\nExample: *phantom IMU_STREAMER + U_IMU_STREAMER classes*\n\n*In MicroPython*\n\n```\nfrom IMU_util import i2c, U_IMU_STREAMER\nfrom lsm9ds1 import LSM9DS1\nimu_st = U_IMU_STREAMER(LSM9DS1, i2c)\n```\n\n*Now the device is ready to be controlled from Python3*\n\n*In Python3*\n\n```\nfrom upydevice import W_UPYDEVICE\nesp32 = W_UPYDEVICE('192.168.1.73', 'mypass')\nfrom upydevice.phantom import IMU_STREAMER\nimu_st = IMU_STREAMER(esp32, name='imu_st', init_soc=True)\n\t192.168.1.43  # (This prints host ip)\n\n# SIMPLE SAMPLE (this use upydevice.cmd)\nimu_st.read_data()\n\tarray('f', [-0.4462279975414276, -0.12023930251598358, -0.9497069716453552])\nimu_st.setup_mode('gyro')\nimu_st.read_data()\n\tarray('f', [-0.007476807106286287, 0.9719849824905396, -0.0971985012292862])\nimu_st.setup_mode('mag')\nimu_st.read_data()\n\tarray('f', [0.4848633110523224, 0.1734618991613388, 0.2396239936351776])\nimu_st.setup_mode('acc')\nimu_st.read_data()\n\tarray('f', [-0.4470824897289276, -0.12023930251598358, -0.9493408203125])\n\n# SOCKETS\nimu_st.start_server()\n\tServer listening...\n\tConnection received from: 192.168.1.73:50185\nimu_st.shot_read(imu_st.data_print, timeout=1)\n\tX: -0.44537353515625, Y: -0.12030029296875, Z: -0.94879150390625 (g=-9.8m/s^2)\n\n# CONTINUOUS STREAMING THROUGH SOCKETS + TEST\n\nimu_st.continuous_stream(imu_st.data_print_static, timeout=10, static=True, test=True)\n\tStreaming IMU ACCELEROMETER: X, Y, Z (g=-9.8m/s^2),fq=100.0Hz\n\n\n       X              Y              Z\n^C  -0.4431        -0.1184        -0.9482\n\n\tFlushed!\n\tDone!\n\nimu_st.get_stream_test()\n  STREAM TEST RESULTS ARE:\n  TEST DURATION : 11.31895899772644 (s)\n  DATA PACKETS : 1077 packets\n  SAMPLES PER PACKET : 1\n  VARIABLES PER SAMPLE : 3; ['X', 'Y', 'Z']\n  SIZE OF PACKETS: 12 bytes\n  Period: 10 ms ; Fs:100.0 Hz, Data send rate: 95 packets/s of 1 samples\n  DATA TRANSFER RATE (kBps): 1.11328125 kB/s\n  DATA TRANSFER RATE (Mbps): 0.00890625 Mbps\n\nimu_st.stop_server()\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/Carglglz/upydevice", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "upydevice", "package_url": "https://pypi.org/project/upydevice/", "platform": "", "project_url": "https://pypi.org/project/upydevice/", "project_urls": {"Homepage": "http://github.com/Carglglz/upydevice"}, "release_url": "https://pypi.org/project/upydevice/0.2.2/", "requires_dist": ["upydev (>=0.2.9)", "pyserial", "dill", "pexpect"], "requires_python": "", "summary": "Python library to interface with wireless/serial MicroPython devices", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>uPydevice</h1>\n<p><a href=\"https://badge.fury.io/py/upydevice\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/daccdc8029e421de8aa8d4a65d216984eea0af56/68747470733a2f2f62616467652e667572792e696f2f70792f7570796465766963652e737667\"></a><a href=\"https://pypi.python.org/pypi/ansicolortags/\" rel=\"nofollow\"><img alt=\"PyPI license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cb7554d3f165ac5e7bc396a6fbc22d51a890512a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f616e7369636f6c6f72746167732e737667\"></a></p>\n<p>Python library to interface with MicroPython devices through websockets (WebREPL protocol) or through Serial connection (USB).</p>\n<h3>Requirements</h3>\n<ul>\n<li><a href=\"https://github.com/Carglglz/upydev\" rel=\"nofollow\">upydev</a></li>\n<li><a href=\"https://github.com/npat-efault/picocom\" rel=\"nofollow\">picocom</a></li>\n<li><a href=\"https://github.com/pyserial/pyserial/\" rel=\"nofollow\">pyserial</a></li>\n<li><a href=\"https://github.com/uqfoundation/dill\" rel=\"nofollow\">dill</a></li>\n<li><a href=\"https://github.com/pexpect/pexpect\" rel=\"nofollow\">pexpect</a></li>\n</ul>\n<p><em>upydev , pyserial and dill will be automatically installed with pip</em></p>\n<p><em>to install picocom do:</em>  <code>brew install picocom</code></p>\n<h3>Requirements * (New in version 0.2.0):</h3>\n<p>For the new classes <code>SERIAL_DEVICE</code> , <code>WS_DEVICE</code> and <code>DEVGROUP</code> only <a href=\"https://github.com/pyserial/pyserial/\" rel=\"nofollow\">pyserial</a> is required.</p>\n<h3>Tested on</h3>\n<ul>\n<li>OS:\n<ul>\n<li>MacOS Mojave 10.14.6</li>\n<li>Raspbian Stretch (9.11) (RPY ZERO W) (*just WebREPL protocol)</li>\n</ul>\n</li>\n<li>BOARDS:\n<ul>\n<li>Esp32 (Adafruit feather Huzzah)</li>\n<li>Esp8266 (Adafruit feather Huzzah)</li>\n<li>Pyboard Little</li>\n<li>Pyboard v1.1</li>\n<li>CircuitPlayground Express</li>\n</ul>\n</li>\n</ul>\n<h3>Install</h3>\n<p><code>pip install upydevice</code></p>\n<p><em>To install in a raspberry pi do:</em></p>\n<p><code>sudo apt-get install picocom</code></p>\n<p><em>Install upydev manually as indicated in upydev README then</em></p>\n<pre><code>$ git clone https://github.com/Carglglz/upydevice.git\n$ cd upydevice/rpy_upydevice\n$ sudo pip3 install . --no deps\n[...]\n$ sudo pip3 install pyserial\n$ sudo pip3 install dill\n</code></pre>\n<h4>Documentation:</h4>\n<p>See <a href=\"https://github.com/Carglglz/upydevice/blob/master/DOCS/Documentation.md\" rel=\"nofollow\">DOCS</a></p>\n<h4>Example usage * (New classes in version 0.2.0):</h4>\n<h3>WIRELESS DEVICE (WebREPL Protocol): <code>WS_DEVICE</code></h3>\n<pre><code>&gt;&gt;&gt; from upydevice import WS_DEVICE\n&gt;&gt;&gt; esp32 = ('192.168.1.56', 'mypass', init=True, autodetect=True)\n&gt;&gt;&gt; esp32.wr_cmd('led.on()')\n&gt;&gt;&gt; esp32.wr_cmd(\"uos.listdir()\")\n['boot.py', 'webrepl_cfg.py', 'main.py'] # this output is stored in [upydevice].output\n\n&gt;&gt;&gt; esp32.output\n['boot.py', 'webrepl_cfg.py', 'main.py']\n&gt;&gt;&gt;&gt; esp32.wr_cmd('x = [1,2,3];my_var = len(x);print(my_var)')\n3\n# Soft Reset:\n&gt;&gt;&gt; esp32.reset()\n    Rebooting device...\n    Done!\n</code></pre>\n<h3>SERIAL DEVICE (Pyserial) : <code>SERIAL_DEVICE</code></h3>\n<p>Works for any serial device (esp, pyboard, circuitplayground...)</p>\n<pre><code>from upydevice import SERIAL_DEVICE\n&gt;&gt;&gt; esp32 = SERIAL_DEVICE('/dev/tty.SLAB_USBtoUART', autodetect=True) # baudrate default is 115200\n&gt;&gt;&gt; esp32.wr_cmd('led.on()')\n&gt;&gt;&gt; esp32.wr_cmd(\"uos.listdir()\")\n['boot.py', 'webrepl_cfg.py', 'main.py'] # this output is stored in [upydevice].output\n\n&gt;&gt;&gt; esp32.output\n['boot.py', 'webrepl_cfg.py', 'main.py']\n&gt;&gt;&gt;&gt; esp32.wr_cmd('x = [1,2,3];my_var = len(x);print(my_var)')\n3\n# Soft Reset:\n&gt;&gt;&gt; esp32.reset()\n    Rebooting device...\n    Done!\n</code></pre>\n<h4>Example usage (OLD CLASSES):</h4>\n<h3>WIRELESS DEVICE (WebREPL Protocol)</h3>\n<pre><code>    &gt;&gt;&gt; from upydevice import W_UPYDEVICE\n# Setup and configurate a device :\n\n    &gt;&gt;&gt; esp32 = W_UPYDEVICE('192.168.1.56', 'mypass') # (target_ip, password)\n\n# Send command:\n    &gt;&gt;&gt; esp32.cmd('led.on()')\n\n    &gt;&gt;&gt; esp32.cmd(\"uos.listdir('/')\")\n      ['boot.py', 'webrepl_cfg.py', 'main.py'] # this output is stored in [upydevice].output\n\n    &gt;&gt;&gt; esp32.output\n      ['boot.py', 'webrepl_cfg.py', 'main.py']\n\n    &gt;&gt;&gt; esp32.cmd('foo()')\n\n    &gt;&gt;&gt; esp32.cmd('x = [1,2,3];my_var = len(x);print(my_var)')\n    3\n\n# Soft Reset:\n    &gt;&gt;&gt; esp32.reset()\n    Rebooting device...\n\n    ### closed ###\n\n    Done!\n</code></pre>\n<h3>SERIAL DEVICE (Picocom, Pyserial)</h3>\n<pre><code>    &gt;&gt;&gt; from upydevice import S_UPYDEVICE\n\n# Setup and configurate a device :\n    &gt;&gt;&gt; esp32 = S_UPYDEVICE('/dev/tty.SLAB_USBtoUART', 1000, 115200) # defaults (serial_port, timeout=1000, baudrate=9600)\n\n# Send command:\n    &gt;&gt;&gt; esp32.cmd('led.on()')\n\n    &gt;&gt;&gt; esp32.cmd(\"uos.listdir('/')\")\n    ['boot.py', 'webrepl_cfg.py', 'main.py'] # this output is stored in [upydevice].output\n\n    &gt;&gt;&gt; esp32.output\n    ['boot.py', 'webrepl_cfg.py', 'main.py']\n\n    &gt;&gt;&gt; esp32.cmd('foo()')\n\n    &gt;&gt;&gt; esp32.cmd('x = [1,2,3];my_var = len(x);print(my_var)')\n    3\n\n# Soft Reset:\n    &gt;&gt;&gt; esp32.reset()\n    Rebooting device...\n    Done!\n</code></pre>\n<h3>PYBOARD (Picocom, Pyserial)</h3>\n<pre><code>    &gt;&gt;&gt; from upydevice import PYBOARD\n\n# Setup and configurate a device :\n    pyboard = PYBOARD('/dev/tty.usbmodem3370377430372') # defaults (serial_port, timeout=1000, baudrate=9600)\n\n# Send command:\n    &gt;&gt;&gt; pyboard.cmd('pyb.LED(1).toggle()', timeout=100)\n\n    &gt;&gt;&gt; pyboard.cmd(\"import uos;uos.listdir('/flash')\")\n    ['main.py', 'pybcdc.inf', 'README.txt', 'boot.py', '.fseventsd', '.Trashes'] # this output is stored in [upydevice].output\n\n    &gt;&gt;&gt; pyboard.output\n    ['main.py', 'pybcdc.inf', 'README.txt', 'boot.py', '.fseventsd', '.Trashes']\n\n    &gt;&gt;&gt; pyboard.cmd('foo()')\n\n    &gt;&gt;&gt; pyboard.cmd('x = [1,2,3];my_var = len(x);print(my_var)')\n    3\n\n# Soft Reset:\n    &gt;&gt;&gt; pyboard.reset()\n    Rebooting pyboard...\n    Done!\n</code></pre>\n<h3>GROUP (to send commands to several devices at a time)</h3>\n<pre><code># Setup and configurate the devices :\n    &gt;&gt;&gt; from upydevice import W_UPYDEVICE, PYBOARD, GROUP\n# PYBOARD\n    &gt;&gt;&gt; pyboard = PYBOARD('/dev/tty.usbmodem387E386731342')\n# ESP32\n    &gt;&gt;&gt; esp32_A = W_UPYDEVICE('192.168.1.73', 'mypass')\n    &gt;&gt;&gt; esp32_B = W_UPYDEVICE('192.168.1.44', 'mypass')\n\n# Setup and configurate the group:\n    &gt;&gt;&gt; my_group = GROUP([esp32_A, esp32_B, pyboard])\n\n# Each upydevice has a name attribute that can be set at creation momment or after\n# pyboard = PYBOARD('/dev/tty.usbmodem387E386731342', name='my_pyboard_1'); or pyboard.name = 'my_pyboard_1')\n# If not set an automatic name will be set as 'upydev_class'+'ip or serial port'\n\n# Send command:\n    &gt;&gt;&gt; my_group.cmd('import machine;import  ubinascii;ubinascii.hexlify(machine.unique_id())')\n    Sending command to wupydev_73\n    b'30aea4233564'\n\n    Sending command to wupydev_44\n    b'807d3a809b30'\n\n    Sending command to pyboard_tty.usbmodem387E386731342\n    b'33004e000351343134383038'\n\n# There is an option to silent the group messages with group_silent = True, and or each device ouput with device_silent=True\n\n# Output is stored in group output attribute:\n    &gt;&gt;&gt; my_group.output\n    {'wupydev_73': b'30aea4233564', 'wupydev_44': b'807d3a809b30', 'pyboard_tty.usbmodem387E386731342': b'33004e000351343134383038'}\n\n# Send command parallel mode **: (experimental mode, may not work 100% of the times, depends on the connection quality (for wireless devices))\n    &gt;&gt;&gt; my_group.cmd_p('6*12')\n    Sending command to: wupydev_73, wupydev_44, pyboard_tty.usbmodem387E386731342\n    72\n\n\n    72\n\n    72\n\n    Done!\n# To see which ouput corresponds to which device use 'id=True' parameter:\n\n    &gt;&gt;&gt; my_group.cmd_p('ubinascii.hexlify(machine.unique_id())', id=True)\n    Sending command to: wupydev_73, wupydev_44, pyboard_tty.usbmodem387E386731342\n    pyboard_tty.usbmodem387E386731342:b'33004e000351343134383038'\n    pyboard_tty.usbmodem387E386731342:\n    pyboard_tty.usbmodem387E386731342:\n    wupydev_44:b'807d3a809b30'\n    wupydev_73:b'30aea4233564'\n    wupydev_44:\n    wupydev_73:\n    Done!\n    &gt;&gt;&gt;\n    &gt;&gt;&gt; my_group.output\n    {'wupydev_73': b'30aea4233564', 'wupydev_44': b'807d3a809b30', 'pyboard_tty.usbmodem387E386731342': b'33004e000351343134383038'}\n</code></pre>\n<h2>More advanced examples:</h2>\n<h3>Phantom module</h3>\n<p>This module has some python 'phantom' classes to make easier the interaction with the same classes in the upydevice. These classes are made using a series of decorators described in <a href=\"https://github.com/Carglglz/upydevice/blob/master/DOCS/Documentation.md#PARSER-AND-DECORATORS\" rel=\"nofollow\">DOCS</a></p>\n<p>Available classes:</p>\n<ul>\n<li>MicroPython classes:\n<ul>\n<li><strong>MACHINE</strong> (just unique_id() method)</li>\n<li><strong>Pin</strong></li>\n<li><strong>I2C</strong></li>\n<li><strong>UOS</strong></li>\n<li><strong>pyb_LED</strong></li>\n<li><strong>pyb_Timer</strong></li>\n<li><strong>pyb_Servo</strong></li>\n<li><strong>machine_Timer</strong></li>\n<li><strong>WLAN</strong></li>\n<li><strong>AP</strong></li>\n</ul>\n</li>\n<li>Sensor classes:\n<ul>\n<li><strong>LSM9DS1</strong></li>\n<li><strong>BME280</strong></li>\n<li><strong>ADS1115</strong></li>\n</ul>\n</li>\n<li>Custom classes:\n<ul>\n<li><strong>IRQ_MG</strong> (This needs <em>IRQ_util.py in the micropython device</em>)</li>\n<li><strong>STREAMER</strong> (to use as a super class, and this needs <em>STREAMER_util.py in the micropython device</em>)</li>\n<li><strong>IMU_STREAMER</strong>  (This needs <em>IMU_util.py in the micropython device</em>)</li>\n<li><strong>BME_STREAMER</strong> (This needs <em>BME_util.py in the micropython device</em>)</li>\n<li><strong>ADS_STREAMER</strong>  (This needs <em>ADS_util.py in the micropython device</em>)</li>\n</ul>\n</li>\n</ul>\n<p>Examples:</p>\n<p><strong>UOS</strong></p>\n<pre><code>from upydevice import W_UPYDEVICE\nfrom upydevice.phantom import UOS\nesp32 = W_UPYDEVICE('192.168.1.73', 'mypass')\nuos = UOS(esp32)\nuos.listdir('/')\n ['boot.py', 'webrepl_cfg.py', 'main.py']\nuos.uname()\n (sysname='esp32', nodename='esp32', release='1.11.0', version='v1.11-530-g25946d1ef on 2019-10-29', machine='ESP32 module with ESP32')\n</code></pre>\n<h2>Upydevice_utils</h2>\n<p>These are some useful modules to put in the micropython device:</p>\n<ul>\n<li><strong>IRQ_util.py</strong> : A module to test/setup hardware interrupts easily</li>\n<li><strong>STREAMER_util.py</strong>: A module with U_STREAMER 'super' class to make streaming sensor data in real time easily.</li>\n<li><strong>IMU_util.py</strong>: A module with U_IMU_IRQ and U_IMU_STREAMER example classes.</li>\n<li><strong>BME_util.py</strong>: A module with U_BME_IRQ and U_BME_STREAMER example classes.</li>\n<li><strong>ADS_util.py</strong>: A module with U_ADS_IRQ and U_ADS_STREAMER example classes.</li>\n</ul>\n<p>Example: <em>phantom IMU_STREAMER + U_IMU_STREAMER classes</em></p>\n<p><em>In MicroPython</em></p>\n<pre><code>from IMU_util import i2c, U_IMU_STREAMER\nfrom lsm9ds1 import LSM9DS1\nimu_st = U_IMU_STREAMER(LSM9DS1, i2c)\n</code></pre>\n<p><em>Now the device is ready to be controlled from Python3</em></p>\n<p><em>In Python3</em></p>\n<pre><code>from upydevice import W_UPYDEVICE\nesp32 = W_UPYDEVICE('192.168.1.73', 'mypass')\nfrom upydevice.phantom import IMU_STREAMER\nimu_st = IMU_STREAMER(esp32, name='imu_st', init_soc=True)\n\t192.168.1.43  # (This prints host ip)\n\n# SIMPLE SAMPLE (this use upydevice.cmd)\nimu_st.read_data()\n\tarray('f', [-0.4462279975414276, -0.12023930251598358, -0.9497069716453552])\nimu_st.setup_mode('gyro')\nimu_st.read_data()\n\tarray('f', [-0.007476807106286287, 0.9719849824905396, -0.0971985012292862])\nimu_st.setup_mode('mag')\nimu_st.read_data()\n\tarray('f', [0.4848633110523224, 0.1734618991613388, 0.2396239936351776])\nimu_st.setup_mode('acc')\nimu_st.read_data()\n\tarray('f', [-0.4470824897289276, -0.12023930251598358, -0.9493408203125])\n\n# SOCKETS\nimu_st.start_server()\n\tServer listening...\n\tConnection received from: 192.168.1.73:50185\nimu_st.shot_read(imu_st.data_print, timeout=1)\n\tX: -0.44537353515625, Y: -0.12030029296875, Z: -0.94879150390625 (g=-9.8m/s^2)\n\n# CONTINUOUS STREAMING THROUGH SOCKETS + TEST\n\nimu_st.continuous_stream(imu_st.data_print_static, timeout=10, static=True, test=True)\n\tStreaming IMU ACCELEROMETER: X, Y, Z (g=-9.8m/s^2),fq=100.0Hz\n\n\n       X              Y              Z\n^C  -0.4431        -0.1184        -0.9482\n\n\tFlushed!\n\tDone!\n\nimu_st.get_stream_test()\n  STREAM TEST RESULTS ARE:\n  TEST DURATION : 11.31895899772644 (s)\n  DATA PACKETS : 1077 packets\n  SAMPLES PER PACKET : 1\n  VARIABLES PER SAMPLE : 3; ['X', 'Y', 'Z']\n  SIZE OF PACKETS: 12 bytes\n  Period: 10 ms ; Fs:100.0 Hz, Data send rate: 95 packets/s of 1 samples\n  DATA TRANSFER RATE (kBps): 1.11328125 kB/s\n  DATA TRANSFER RATE (Mbps): 0.00890625 Mbps\n\nimu_st.stop_server()\n</code></pre>\n\n          </div>"}, "last_serial": 6689394, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "fb1029113d7a8659e105bd246af3c600", "sha256": "607b839533cb0353199e6139e3da5261739e62b393b5253184057eb243d1d3df"}, "downloads": -1, "filename": "upydevice-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fb1029113d7a8659e105bd246af3c600", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5843, "upload_time": "2019-08-18T20:28:50", "upload_time_iso_8601": "2019-08-18T20:28:50.432813Z", "url": "https://files.pythonhosted.org/packages/93/37/81249718dcdc8f780dc2d9ec3e5affc788340a871b0147abcd37b51d7756/upydevice-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6766c6d97b7deb650bc94fc352502f75", "sha256": "ae0ae88cb9755c1729985a67ba1043a39f4501bd94a23fcd7e7f8934792fbea8"}, "downloads": -1, "filename": "upydevice-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6766c6d97b7deb650bc94fc352502f75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4303, "upload_time": "2019-08-18T20:28:52", "upload_time_iso_8601": "2019-08-18T20:28:52.610781Z", "url": "https://files.pythonhosted.org/packages/53/b6/683506f517c136475c16818eb13a9cab0a4122da8fe36fe1b833cbd9ab13/upydevice-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "8d3c651c4cc8bc1a6242c48c8e95409a", "sha256": "9bddf2147e2318d619d0529950b0b38fcb4d81a8f4e7a9b89ef145a2323c06b8"}, "downloads": -1, "filename": "upydevice-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8d3c651c4cc8bc1a6242c48c8e95409a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5904, "upload_time": "2019-08-28T22:45:05", "upload_time_iso_8601": "2019-08-28T22:45:05.135330Z", "url": "https://files.pythonhosted.org/packages/7b/d2/aceaed67a9c61580d3797b5a99d85bc2fe6b89d4c88f0affcded73d2148e/upydevice-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80a1219d0ae08cf08bcf12a5945699ad", "sha256": "7929f8c14d4826a6ee45bb3c9d6d723b79d35c937a38a5ded1766ad6b0381ca8"}, "downloads": -1, "filename": "upydevice-0.0.2.tar.gz", "has_sig": false, "md5_digest": "80a1219d0ae08cf08bcf12a5945699ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4375, "upload_time": "2019-08-28T22:45:06", "upload_time_iso_8601": "2019-08-28T22:45:06.684161Z", "url": "https://files.pythonhosted.org/packages/0e/50/036ce7f7e18069d07d67f1776ccb313d7e024875dfb3e1479c3f98f8cd4f/upydevice-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "a4873b07b628faf93ca4b83a1a1b94cd", "sha256": "f6e08c26e17b4de91f04e35a1f3bdeb9ed45faed8537e50beba07af58e3d7083"}, "downloads": -1, "filename": "upydevice-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a4873b07b628faf93ca4b83a1a1b94cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5958, "upload_time": "2019-09-28T15:25:55", "upload_time_iso_8601": "2019-09-28T15:25:55.055526Z", "url": "https://files.pythonhosted.org/packages/76/0f/4cb41e8dffa067e652dffbe1eb09364cf463f3696cb636c8e8fceb02e31b/upydevice-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c544bfccca5726af88956ed3c9ba2c78", "sha256": "32432d0f5a496496c6433d22b8f9d51bf75e729a0b8ec87bb1e47841f602006b"}, "downloads": -1, "filename": "upydevice-0.0.3.tar.gz", "has_sig": false, "md5_digest": "c544bfccca5726af88956ed3c9ba2c78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4442, "upload_time": "2019-09-28T15:25:56", "upload_time_iso_8601": "2019-09-28T15:25:56.721437Z", "url": "https://files.pythonhosted.org/packages/90/86/61926204c975a1531791f9f956a6756b6261e55bbcfa9f0eccf11d9a7ced/upydevice-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "7c05a2cd760802b34175b3afcfd23b54", "sha256": "f7d5070b526e03cd794a183a2a379062b944eb0a3ec36df56ba4c5a767689c98"}, "downloads": -1, "filename": "upydevice-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "7c05a2cd760802b34175b3afcfd23b54", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5973, "upload_time": "2019-10-14T14:54:37", "upload_time_iso_8601": "2019-10-14T14:54:37.090605Z", "url": "https://files.pythonhosted.org/packages/98/58/1aa6713c09c5c85dcb49afbca42042aba6730aada18b6fd7602a561a8365/upydevice-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d92944c793f44685da61af78a18801cf", "sha256": "f7724e15a4568a5a4bb2f9e7057c62c5aed4a7413542a8e2629fa6389eed2be1"}, "downloads": -1, "filename": "upydevice-0.0.4.tar.gz", "has_sig": false, "md5_digest": "d92944c793f44685da61af78a18801cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4449, "upload_time": "2019-10-14T14:54:39", "upload_time_iso_8601": "2019-10-14T14:54:39.058089Z", "url": "https://files.pythonhosted.org/packages/02/83/10e05af84ed4427bdf8d48b56facd2bc9f118c3e238bd942ef8954ec9f52/upydevice-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "393f65a8be6b96b8ebb043e1c4905023", "sha256": "f2e1af777bc534a50638dfebc7b42481ccdd8f328db3be81a3d138b78f706aed"}, "downloads": -1, "filename": "upydevice-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "393f65a8be6b96b8ebb043e1c4905023", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8272, "upload_time": "2019-10-21T00:14:54", "upload_time_iso_8601": "2019-10-21T00:14:54.702354Z", "url": "https://files.pythonhosted.org/packages/f6/50/bf64697fed9db0e53d468e92fb3271d47cf76c01649e3f4912623f96e402/upydevice-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "55c255624e66d1ff574f23fe91fc6525", "sha256": "ec09c32c549bb2363ced5abc2670d29c6595a2874a5a41a02defcf1cfd969cf7"}, "downloads": -1, "filename": "upydevice-0.0.5.tar.gz", "has_sig": false, "md5_digest": "55c255624e66d1ff574f23fe91fc6525", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6160, "upload_time": "2019-10-21T00:14:56", "upload_time_iso_8601": "2019-10-21T00:14:56.478782Z", "url": "https://files.pythonhosted.org/packages/2f/96/08b4d7c0fdd42ab0bad573f1f5b360ad0b34824413cc9b9b2140124994b1/upydevice-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "b934e912793174be3916e2954333316d", "sha256": "fcbe7f2d15fdf6b36aae151279aefd8b193fa87f7f791efbe86720f0de2c645d"}, "downloads": -1, "filename": "upydevice-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "b934e912793174be3916e2954333316d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9230, "upload_time": "2019-10-27T13:50:09", "upload_time_iso_8601": "2019-10-27T13:50:09.648266Z", "url": "https://files.pythonhosted.org/packages/5f/91/ad8e6472fc6bda7b4e8bfb2bc38678adf8d88dd692bc3bb068742a856020/upydevice-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de8a34fc8507f3f8a6a6980830b735bb", "sha256": "9c2c1fc392a1268aa14d0ef8d506fdc3ad5a570c3508073c105e1830a6350b22"}, "downloads": -1, "filename": "upydevice-0.0.6.tar.gz", "has_sig": false, "md5_digest": "de8a34fc8507f3f8a6a6980830b735bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7152, "upload_time": "2019-10-27T13:50:11", "upload_time_iso_8601": "2019-10-27T13:50:11.433884Z", "url": "https://files.pythonhosted.org/packages/d8/1f/2a7b3e26b0e83ba23e46414e70b1baa09db6ca1cc40141407fc67d406d19/upydevice-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "10bc7b350acd33fd75a86ddcd19f6d53", "sha256": "75a700564276135342848034b57b2d881ea9a861e625fc9c0383247163852c45"}, "downloads": -1, "filename": "upydevice-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "10bc7b350acd33fd75a86ddcd19f6d53", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9492, "upload_time": "2019-10-28T15:28:14", "upload_time_iso_8601": "2019-10-28T15:28:14.206213Z", "url": "https://files.pythonhosted.org/packages/d0/56/19896754246187abfcd010aca9dd8f2f25ebe6afa8ae0926702b1ad3cd4b/upydevice-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd3b1e4ed707adfe0022dd81cd840445", "sha256": "eafd2b4e85b9f7c9185cdb51fc8195e106f7c355635d2fb934f2379bd1d4c6f7"}, "downloads": -1, "filename": "upydevice-0.0.7.tar.gz", "has_sig": false, "md5_digest": "cd3b1e4ed707adfe0022dd81cd840445", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7435, "upload_time": "2019-10-28T15:28:15", "upload_time_iso_8601": "2019-10-28T15:28:15.450794Z", "url": "https://files.pythonhosted.org/packages/f8/f6/dcfa1d2b006e1873f24a04b7ac646cd5727b66c9c2c5a7cec93c09523c96/upydevice-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "e6a99e9c31ec4f0c3b8a230d42d70810", "sha256": "bd89f6bff09e9ae318947b58a6343ddff193a7693c540daad4bb994e092de30f"}, "downloads": -1, "filename": "upydevice-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "e6a99e9c31ec4f0c3b8a230d42d70810", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9521, "upload_time": "2019-10-28T16:34:41", "upload_time_iso_8601": "2019-10-28T16:34:41.275024Z", "url": "https://files.pythonhosted.org/packages/40/96/c926c5d85dff7939447fee620aace5e8cbcacbcd6beb7ac732ff9cffceb2/upydevice-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "90b6f6684a4d024a0c726f7087183b92", "sha256": "57cefd7e72f925e7e9db217e37fcda676c06fdbe66981edc4fd38fdcacae9878"}, "downloads": -1, "filename": "upydevice-0.0.8.tar.gz", "has_sig": false, "md5_digest": "90b6f6684a4d024a0c726f7087183b92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7454, "upload_time": "2019-10-28T16:34:42", "upload_time_iso_8601": "2019-10-28T16:34:42.632959Z", "url": "https://files.pythonhosted.org/packages/0a/0a/dc0ddf3961d61b8c3418421de9962e26986138f100beb735bff92938dfba/upydevice-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "5da184e8a5694864cb8260d123297e31", "sha256": "424eba08c290152b9f6e6156a461c14a46c26e7b34e8b6e5b95600360613bd11"}, "downloads": -1, "filename": "upydevice-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "5da184e8a5694864cb8260d123297e31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9591, "upload_time": "2019-10-28T20:38:54", "upload_time_iso_8601": "2019-10-28T20:38:54.644044Z", "url": "https://files.pythonhosted.org/packages/cd/fc/4c20b59a6e5d31b2a2deb64e16bd8f6652770b241b49eefd2cb762375b8f/upydevice-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b03053f4254a00b5cc6613c087d60918", "sha256": "4e486d504cffad1235b529d225a18d0809c8c41fa8310eec711772e7dfdce42b"}, "downloads": -1, "filename": "upydevice-0.0.9.tar.gz", "has_sig": false, "md5_digest": "b03053f4254a00b5cc6613c087d60918", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7517, "upload_time": "2019-10-28T20:38:57", "upload_time_iso_8601": "2019-10-28T20:38:57.099606Z", "url": "https://files.pythonhosted.org/packages/a1/8d/f6394dc2b6404a1f96f8e1eb4d70ef05ac8c5fc29b820a7523153688a6ea/upydevice-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "696f451ee657e352d9230771daf9f096", "sha256": "fcb4fe483b575232b5e808c77d3b337bdc970b3c845d4091de34e09dc9027f0e"}, "downloads": -1, "filename": "upydevice-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "696f451ee657e352d9230771daf9f096", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9629, "upload_time": "2019-10-29T14:13:41", "upload_time_iso_8601": "2019-10-29T14:13:41.099035Z", "url": "https://files.pythonhosted.org/packages/66/81/29b052b462332dfdec79bd76d355c37def74a998386baf3099ffa21eb199/upydevice-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71c42fca7ab6dac338d03a3168ad7465", "sha256": "63133a3228d6090c60ef3a278511744d8f16c80c3af93277787b492eb722439e"}, "downloads": -1, "filename": "upydevice-0.1.0.tar.gz", "has_sig": false, "md5_digest": "71c42fca7ab6dac338d03a3168ad7465", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7570, "upload_time": "2019-10-29T14:13:42", "upload_time_iso_8601": "2019-10-29T14:13:42.452414Z", "url": "https://files.pythonhosted.org/packages/5d/91/befd7722eec22d5061f52c0d8a30dd3f1fe1a6b2f6325befff39e2fb218a/upydevice-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "86b7632a2918b1e8111846d2a8ec43d5", "sha256": "89e55d5795b765d8c041ba1e25954b1dcbc3c6e6a4f2b40cfb036557ae84fab7"}, "downloads": -1, "filename": "upydevice-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "86b7632a2918b1e8111846d2a8ec43d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11281, "upload_time": "2019-11-02T19:15:52", "upload_time_iso_8601": "2019-11-02T19:15:52.001183Z", "url": "https://files.pythonhosted.org/packages/82/cd/c7091a5669381800b3d432bed147ad61c1cbfeadd0efc4bbee287644ef70/upydevice-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "297629385bccba2e431fac0303704876", "sha256": "03a13525019de632fb03d4f7d897c1bc80d2db08e400260406f8fd970033332d"}, "downloads": -1, "filename": "upydevice-0.1.1.tar.gz", "has_sig": false, "md5_digest": "297629385bccba2e431fac0303704876", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8902, "upload_time": "2019-11-02T19:15:53", "upload_time_iso_8601": "2019-11-02T19:15:53.779404Z", "url": "https://files.pythonhosted.org/packages/1c/34/9ae1be16379a97c336a41eda59a9351cc1313fe8ebd17b1c0b39f2942fe6/upydevice-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "12781eb530f71e38c29973a913fdb009", "sha256": "ea5564be73545d7752749ddfb4cdbca5c5767c2ac7fc06a54ef156e5433384aa"}, "downloads": -1, "filename": "upydevice-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "12781eb530f71e38c29973a913fdb009", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19382, "upload_time": "2019-11-12T21:05:28", "upload_time_iso_8601": "2019-11-12T21:05:28.202150Z", "url": "https://files.pythonhosted.org/packages/c0/a4/8d82e40b5bafbe7a342990cee072932abb8f897ea3047d2a237f1f878d22/upydevice-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a8f52249fa8a209e1e550f8474ef538", "sha256": "763d002ea80457c6a9e458a3d6d571480b31301b8cb49b5cc12ed1cce0564a59"}, "downloads": -1, "filename": "upydevice-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7a8f52249fa8a209e1e550f8474ef538", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18487, "upload_time": "2019-11-12T21:05:29", "upload_time_iso_8601": "2019-11-12T21:05:29.750512Z", "url": "https://files.pythonhosted.org/packages/ca/91/d50da8552230443ee209452714523f98cbd2a4578a9ac360b4315a8592f5/upydevice-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "5c94b734398aa9779e81b180fe7acabf", "sha256": "d9c4d92ae1502d5f2974425a9d8763d91ad363b217da063e4aca72b2d328b4c5"}, "downloads": -1, "filename": "upydevice-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5c94b734398aa9779e81b180fe7acabf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20793, "upload_time": "2019-11-23T18:01:55", "upload_time_iso_8601": "2019-11-23T18:01:55.261519Z", "url": "https://files.pythonhosted.org/packages/e3/05/a0e7f7985ffc1e43bdda4539cc4fa98e3094e772a1d355171aaf5dd35be2/upydevice-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebdd30f3698ea157c6b8633ba4a945fa", "sha256": "2c058855dba6aae2b058bca17f7dac7c567c7b375007e45b3940b49ab11a79a0"}, "downloads": -1, "filename": "upydevice-0.1.3.tar.gz", "has_sig": false, "md5_digest": "ebdd30f3698ea157c6b8633ba4a945fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19504, "upload_time": "2019-11-23T18:01:56", "upload_time_iso_8601": "2019-11-23T18:01:56.748647Z", "url": "https://files.pythonhosted.org/packages/46/52/504dccd475e962b7cb20c39d8889f7df8631c95254a1a2b7337c56a802b8/upydevice-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "f9a3287f8353653d9d31477fae238779", "sha256": "e5bc743dcc4823485809a89a60ae02ec599cd16fa6c532b33cba523778c761de"}, "downloads": -1, "filename": "upydevice-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "f9a3287f8353653d9d31477fae238779", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24215, "upload_time": "2019-12-24T14:09:30", "upload_time_iso_8601": "2019-12-24T14:09:30.719285Z", "url": "https://files.pythonhosted.org/packages/5e/1a/c382b082223bdb93b03015ed71ab8abc290b96249bc14a9234ae5b411504/upydevice-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "595a426de6548696bd362f57058d51e5", "sha256": "8340810f2a79158dbcea41b13bc8bbaaaff41f2db7d7c8cc924f235ae168b791"}, "downloads": -1, "filename": "upydevice-0.1.4.tar.gz", "has_sig": false, "md5_digest": "595a426de6548696bd362f57058d51e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22571, "upload_time": "2019-12-24T14:09:32", "upload_time_iso_8601": "2019-12-24T14:09:32.140619Z", "url": "https://files.pythonhosted.org/packages/eb/41/8e036b66b52ca88fb50e90039471403e7ea5185152513c877dcc7acb8c65/upydevice-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "9baa891a6b37ae723b48b2e0d406194d", "sha256": "2001f25d85c76ce612c209819872bb73b52081c443cad97b69a5ecf3fa8d7550"}, "downloads": -1, "filename": "upydevice-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "9baa891a6b37ae723b48b2e0d406194d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32529, "upload_time": "2020-01-07T23:00:26", "upload_time_iso_8601": "2020-01-07T23:00:26.456559Z", "url": "https://files.pythonhosted.org/packages/56/ac/4171d2b8ab0524613136bef0669746a8f3ecd7a1ac9f3b20b230c9176101/upydevice-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03efafb78096f0a6277bf10d79a4c88e", "sha256": "44815d41e406ced7c30ba6e194e402fa3eb09ce258e2d10d35dfce7f06cb54c7"}, "downloads": -1, "filename": "upydevice-0.1.5.tar.gz", "has_sig": false, "md5_digest": "03efafb78096f0a6277bf10d79a4c88e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30261, "upload_time": "2020-01-07T23:00:28", "upload_time_iso_8601": "2020-01-07T23:00:28.351620Z", "url": "https://files.pythonhosted.org/packages/41/c1/3ff545384c409b467402f26f38b0e2dcc86518c2f57fc24a1e13fcc63481/upydevice-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "1b0836281eb13e4fd7058904b453e22a", "sha256": "83f1f88d962e34720311b017ecb1759d3d6ce53443d26b164aee97ff83747c47"}, "downloads": -1, "filename": "upydevice-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "1b0836281eb13e4fd7058904b453e22a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32559, "upload_time": "2020-01-10T16:59:49", "upload_time_iso_8601": "2020-01-10T16:59:49.136443Z", "url": "https://files.pythonhosted.org/packages/1b/06/d01326a171c73e94a8f3d388c67de427f9749be6519b01dce47b0c1dd788/upydevice-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "320c4672bcbb4263eb8233b944e01c13", "sha256": "5745e37cd85e63b5c3ae77ef72602aaf47b1dddffdc0c51342249eec50ba44bf"}, "downloads": -1, "filename": "upydevice-0.1.6.tar.gz", "has_sig": false, "md5_digest": "320c4672bcbb4263eb8233b944e01c13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30288, "upload_time": "2020-01-10T16:59:51", "upload_time_iso_8601": "2020-01-10T16:59:51.531050Z", "url": "https://files.pythonhosted.org/packages/40/4d/82625a4033b6c04ab4e79791c3d248eb2746caa18158f0382baa352fe40c/upydevice-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "00416d707f0374af2edddd54834cb168", "sha256": "6ef9ba2ade79a0ec3e8c34dda5f6b2fdb9e497fe1c9bc054889094b49096f9e6"}, "downloads": -1, "filename": "upydevice-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "00416d707f0374af2edddd54834cb168", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32698, "upload_time": "2020-01-19T19:09:40", "upload_time_iso_8601": "2020-01-19T19:09:40.986782Z", "url": "https://files.pythonhosted.org/packages/2d/7a/25b79a2406c3286d5e274c31c39d77fd21d8772fb7f311525b69c2765b8e/upydevice-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4cc0f96155b00737cd9fa1a36287d94c", "sha256": "cb04fe459033300e246378edc03e2673c49e5eb78409ff354e355960dbff6791"}, "downloads": -1, "filename": "upydevice-0.1.7.tar.gz", "has_sig": false, "md5_digest": "4cc0f96155b00737cd9fa1a36287d94c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30462, "upload_time": "2020-01-19T19:09:42", "upload_time_iso_8601": "2020-01-19T19:09:42.416295Z", "url": "https://files.pythonhosted.org/packages/36/fc/8488c88169ace5b03a31efcf4a7a61f481a7d14a76a170113e0f22e4ff63/upydevice-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "14c640511a58ce6f0f389b2e6f6c8de0", "sha256": "baca8faef82b207e4e67bd4cb6ee9f2549e1d346cfca09c262bb5575c4276a08"}, "downloads": -1, "filename": "upydevice-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "14c640511a58ce6f0f389b2e6f6c8de0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37311, "upload_time": "2020-02-02T00:22:16", "upload_time_iso_8601": "2020-02-02T00:22:16.384046Z", "url": "https://files.pythonhosted.org/packages/80/97/5e1d146ed3d9548666356027616132acd584e56a7f33dc704cbbbbdb810a/upydevice-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d90cb5943fd5098e5c6b91f46f05103d", "sha256": "78267737f5f4013c129c29a2c594ee1dcef9db3c6fb70482124366223a4c3dba"}, "downloads": -1, "filename": "upydevice-0.1.8.tar.gz", "has_sig": false, "md5_digest": "d90cb5943fd5098e5c6b91f46f05103d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37066, "upload_time": "2020-02-02T00:22:18", "upload_time_iso_8601": "2020-02-02T00:22:18.375134Z", "url": "https://files.pythonhosted.org/packages/6d/8a/75e7ac58d5ef6c11a0ee1cb5f5769d9f9cfdb620f2a5cb11472ca2778b7d/upydevice-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "74e79e21d3a2234614493f54097e7cf3", "sha256": "499c7a5fd5faa7642fdbba405fc6bcf1ff19367c46c529d91e54921bcc65c4be"}, "downloads": -1, "filename": "upydevice-0.1.9-py3-none-any.whl", "has_sig": false, "md5_digest": "74e79e21d3a2234614493f54097e7cf3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37882, "upload_time": "2020-02-08T17:18:07", "upload_time_iso_8601": "2020-02-08T17:18:07.256795Z", "url": "https://files.pythonhosted.org/packages/6c/4c/971afe9c79c0fd1aa9c9c245773773f8621eada03542ad3068b90d4429d8/upydevice-0.1.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "622688fb2d83cc980aafdee89db06384", "sha256": "1bddf5bc78113d823548e8430ee52998eb7150dd637813eeef65f3daee48d5bc"}, "downloads": -1, "filename": "upydevice-0.1.9.tar.gz", "has_sig": false, "md5_digest": "622688fb2d83cc980aafdee89db06384", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37637, "upload_time": "2020-02-08T17:18:09", "upload_time_iso_8601": "2020-02-08T17:18:09.199369Z", "url": "https://files.pythonhosted.org/packages/f2/b3/91eb6148748b915a087366120842b4f601f87285d7147ef22096e9f707bf/upydevice-0.1.9.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a0536713be71dac2f048f7d2a938bcb3", "sha256": "ea2bf2b25dbb7811c2c8f0ec7fd06aea90f55e5986d48c9a306d75e68585b76c"}, "downloads": -1, "filename": "upydevice-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a0536713be71dac2f048f7d2a938bcb3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 41504, "upload_time": "2020-02-16T18:36:42", "upload_time_iso_8601": "2020-02-16T18:36:42.373151Z", "url": "https://files.pythonhosted.org/packages/34/9d/f7197ff8a87f484dcb69d9026a60e90b54037e127dd545193937e8c77b4d/upydevice-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5a95f43a99c115e3cb0ee74522f5640", "sha256": "236e623d4c555e0d8661a09a6ea46b53827e18cd9e4624fa88f096ee3d7029d6"}, "downloads": -1, "filename": "upydevice-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e5a95f43a99c115e3cb0ee74522f5640", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41618, "upload_time": "2020-02-16T18:36:48", "upload_time_iso_8601": "2020-02-16T18:36:48.621614Z", "url": "https://files.pythonhosted.org/packages/9f/72/f62708f86ae110dea5e1078d2398a0ae15dde72a7fe25bdd00aabc491210/upydevice-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "48ac913112bca17123ed14487b8f4f71", "sha256": "a406869c097f172f74ca4896a49e36d42812d87eb145e4f7414568bab4165089"}, "downloads": -1, "filename": "upydevice-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "48ac913112bca17123ed14487b8f4f71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 41568, "upload_time": "2020-02-17T17:21:50", "upload_time_iso_8601": "2020-02-17T17:21:50.641924Z", "url": "https://files.pythonhosted.org/packages/8e/20/22a47c023d2ca93fa08208c7e80a65d686813d94ed791e073afcf4c023dc/upydevice-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bebde97ebde37185334372296319b08d", "sha256": "ff4cb91f261d81b3f2647f612d30ad228ce843f0a6d16ac57228128493c4b0c9"}, "downloads": -1, "filename": "upydevice-0.2.1.tar.gz", "has_sig": false, "md5_digest": "bebde97ebde37185334372296319b08d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41669, "upload_time": "2020-02-17T17:21:52", "upload_time_iso_8601": "2020-02-17T17:21:52.779837Z", "url": "https://files.pythonhosted.org/packages/9c/a5/b7dd4cc83066dfc5147515435e57ce2485536a7460f6d254000919c08270/upydevice-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "40e1337977e61f391b1ec8eaa12b79bc", "sha256": "30a517cb2b07b46368bfec1753094207d8dd524b0033f8fe4f9eca977d4c4590"}, "downloads": -1, "filename": "upydevice-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "40e1337977e61f391b1ec8eaa12b79bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 41647, "upload_time": "2020-02-24T16:00:53", "upload_time_iso_8601": "2020-02-24T16:00:53.762785Z", "url": "https://files.pythonhosted.org/packages/ce/12/077779cf9fecf8db0dca10217b574c2a4932a2159cbfed9d990a1f54f290/upydevice-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c64d3c6d0999cc14aacb78686b865c9", "sha256": "7bdf3f681585f88ca72d6d52dd683ef4c693e51da29f439c0db20ac68f3197fe"}, "downloads": -1, "filename": "upydevice-0.2.2.tar.gz", "has_sig": false, "md5_digest": "5c64d3c6d0999cc14aacb78686b865c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41721, "upload_time": "2020-02-24T16:00:56", "upload_time_iso_8601": "2020-02-24T16:00:56.375138Z", "url": "https://files.pythonhosted.org/packages/61/d4/3fd64698e9425c874210774e4454587917520959045e9c633e8cdec10197/upydevice-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "40e1337977e61f391b1ec8eaa12b79bc", "sha256": "30a517cb2b07b46368bfec1753094207d8dd524b0033f8fe4f9eca977d4c4590"}, "downloads": -1, "filename": "upydevice-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "40e1337977e61f391b1ec8eaa12b79bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 41647, "upload_time": "2020-02-24T16:00:53", "upload_time_iso_8601": "2020-02-24T16:00:53.762785Z", "url": "https://files.pythonhosted.org/packages/ce/12/077779cf9fecf8db0dca10217b574c2a4932a2159cbfed9d990a1f54f290/upydevice-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c64d3c6d0999cc14aacb78686b865c9", "sha256": "7bdf3f681585f88ca72d6d52dd683ef4c693e51da29f439c0db20ac68f3197fe"}, "downloads": -1, "filename": "upydevice-0.2.2.tar.gz", "has_sig": false, "md5_digest": "5c64d3c6d0999cc14aacb78686b865c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41721, "upload_time": "2020-02-24T16:00:56", "upload_time_iso_8601": "2020-02-24T16:00:56.375138Z", "url": "https://files.pythonhosted.org/packages/61/d4/3fd64698e9425c874210774e4454587917520959045e9c633e8cdec10197/upydevice-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:39:40 2020"}