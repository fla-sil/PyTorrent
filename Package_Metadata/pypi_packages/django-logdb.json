{"info": {"author": "Joeri Bekker", "author_email": "joeri@maykinmedia.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development"], "description": "DJANGO-LOGDB\r\n============\r\n\r\nDjango-logdb enables you to log entries to a database, aggregate and act on \r\nthem with certain rules, and gives you more insight in what's going on.\r\n\r\nDjango-logdb requires Django 1.1 and higher.\r\n\r\nDescription\r\n-----------\r\n\r\nDjango-logdb has a custom logging handler that writes log entries to the\r\ndatabase. It therefore integrates nicely with your existing logging \r\nconfiguration and you can decide what log entries are written to the database.\r\n\r\nThe Django admin site is extended with a graphical view of recent log entries\r\nto provide more insight in what is going on. The log messages are grouped by\r\nlog level or \"type of log entry\".\r\n\r\nTo minimize database access, aggregation is done via a Django command that you\r\ncan call periodically (as a cronjob).\r\n\r\nInstall\r\n-------\r\n\r\nThe easiest way to install the package is via setuptools::\r\n\r\n    easy_install django-logdb\r\n\r\nOnce installed, update your Django `settings.py` and add ``djangologdb`` to your \r\nINSTALLED_APPS::\r\n\r\n    INSTALLED_APPS = (\r\n        'django.contrib.admin',\r\n        'django.contrib.auth',\r\n        'django.contrib.contenttypes',\r\n        'django.contrib.sessions',\r\n        ...\r\n        'djangologdb',\r\n    )\r\n\r\nIn your Django `urls.py`, include the `djangologdb.urls` before the admin::\r\n\r\n    urlpatterns = patterns('',\r\n        ...\r\n        (r'^admin/djangologdb/', include('djangologdb.urls')),\r\n        ...\r\n        (r'^admin/', include(admin.site.urls)),\r\n    )\r\n\r\nOptionally, if you want to log exceptions, add the middleware::\r\n\r\n    MIDDLEWARE_CLASSES = (\r\n        'django.middleware.common.CommonMiddleware',\r\n        'django.contrib.sessions.middleware.SessionMiddleware',\r\n        'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n        ...\r\n        'djangologdb.middleware.LoggingMiddleware',\r\n    )\r\n\r\nRun ``python manage.py syncdb`` to create the database tables.\r\n\r\nSetup logging\r\n-------------\r\n\r\nNow, for the actual logging part, you should use the database logging handler.\r\nThere are two ways to do this: Using only Python code, or, by using a \r\nconfiguration file. Both methods are explained below. \r\n\r\nTo add this handler via Python to, for example, your root logger, you can add\r\nthe following to your Django `settings.py`::\r\n\r\n    import logging\r\n    from djangologdb.handler import DjangoDatabaseHandler, add_handler\r\n    \r\n    logging.basicConfig(level=logging.DEBUG)\r\n    logger = logging.getLogger()\r\n    \r\n    # A bug in Django causes the settings to load twice. Using \r\n    # this handler instead of logging.addHandler works around that.\r\n    add_handler(logger, DjangoDatabaseHandler())\r\n        \r\nTo use this handler via a logging configuration file, simply import the \r\n``handlers`` module from ``djangologdb`` in your Django `settings.py` before \r\nloading the configuration from a file::\r\n\r\n    from djangologdb import handlers\r\n    logging.config.fileConfig(...)\r\n    \r\nThen in your logging configuration file, you can add it from the handlers \r\nnamespace and add it to any logger you want::\r\n\r\n    [handlers]\r\n    keys=djangologdb\r\n    \r\n    [logger_root]\r\n    level=NOTSET\r\n    handlers=djangologdb\r\n    \r\n    [handler_djangologdb]\r\n    class=handlers.DjangoDatabaseHandler\r\n    args=()\r\n\r\nConfiguration\r\n-------------\r\n\r\nYou can set the following settings in your Django `settings.py` file:\r\n\r\nLOGDB_HISTORY_DAYS\r\n\tThe number of days to show in the various graphs.\r\n\t\r\n\tDefault::\r\n\t\r\n\t\tLOGDB_HISTORY_DAYS = 30\r\n\r\nLOGDB_INTERVAL\r\n\tThe ``timedelta`` between each datapoint in the various graphs.\r\n\t\r\n\tDefault::\r\n\r\n\t\tLOGDB_INTERVAL = datetime.timedelta(1) # 1 day\r\n\r\nLOGDB_RULES\r\n    Define rules to create a new log entry when certain conditions are true.\r\n    \r\n    Default::\r\n    \r\n        LOGDB_RULES = \r\n            [{\r\n                # If 3 logs with level WARNING or higher occur in 5 minutes or\r\n                # less, create a new log with level CRITICAL.\r\n                'conditions': {\r\n                    'min_level': logging.WARNING,\r\n                    'qualname': '',\r\n                    'min_times_seen': 3,\r\n                    'within_time': datetime.timedelta(0, 5 * 60),\r\n                },\r\n                'actions': {\r\n                    'level': logging.CRITICAL,\r\n                }\r\n            }]\r\n\r\nLOGDB_LEVEL_COLORS\r\n    Set colors to use in the graph for level based datasets.\r\n\r\n    Default::\r\n    \r\n        LOGDB_LEVEL_COLORS =\r\n            {\r\n                logging.DEBUG: '#c2c7d1',\r\n                logging.INFO: '#aad2e9',\r\n                logging.WARNING: '#b9a6d7',\r\n                logging.ERROR: '#deb7c1',\r\n                logging.CRITICAL: '#e9a8ab',\r\n            }\r\n\r\nLOGDB_MEDIA_ROOT\r\n    Set the absolute path to the directory of `django-logdb` media.\r\n    \r\n    Default::\r\n        \r\n        LOGDB_MEDIA_ROOT = os.path.join(djangologdb.__path__[0], 'media')\r\n    \r\nLOGDB_MEDIA_URL\r\n    Set the URL that handles the media served from ``LOGDB_MEDIA_ROOT``. Make \r\n    sure to add a trailing slash at the end. If ``settings.DEBUG=True``, the \r\n    media will be served by Django.\r\n    \r\n    Default::    \r\n    \r\n        LOGDB_MEDIA_URL = '/admin/djangologdb/media/'\r\n\r\nCommands\r\n--------\r\n\r\naggregate_logs\r\n    Aggregates log entries and triggers any action with matching rules. \r\n    \r\n    *Usage*:\r\n        ``python django-admin.py aggregate_logs``\r\n        \r\n    *Options*:\r\n        -s, --skip-actions    Do not use the rules to create new logs.\r\n        --cleanup=CLEANUP     Specifies the number of days to keep log entries\r\n                              and deletes the rest.\r\n\r\nFAQ\r\n---\r\n\r\nThe graph doesn't show in the Django admin.\r\n    If you don't have ``settings.DEBUG=True``, the media will not be served by \r\n    Django. You should copy the media directory to your own media directory and\r\n    set LOGDB_MEDIA_ROOT and LOGDB_MEDIA_URL accordingly.\r\n    \r\n    Example::\r\n    \t\r\n    \tLOGDB_MEDIA_ROOT = '/myproject/media/djanglogdb/'\r\n    \tLOGDB_MEDIA_URL = '/media/djanglogdb/'\r\n    \r\n    Instead of copying, you can also use Apache's Alias directive to serve the \r\n    static files, as you probably also did for Django's own media files. It is\r\n    explained here: http://docs.djangoproject.com/en/dev/howto/deployment/modwsgi/#serving-media-files\r\n    This boils down to adding the following line to your VirtualHost entry::\r\n    \r\n    \tAlias <your LOGDB_MEDIA_URL setting> <path to django-logdb media dir>\r\n    \r\n    Example::\r\n\r\n\t\tAlias /admin/djangologdb/media/ /myproject/eggs/django_logdb-0.9.5-py2.6.egg/djangologdb/media/\r\n\r\nThe Django admin pages for django-logdb load very slow.\r\n    If you have a lot of datapoints in the graph, it executes a lot of queries.\r\n    This can take some time. You should decrease the time period or increase the\r\n    interval. By default, the last 30 days with an interval of 1 day is used, \r\n    resulting in 30 datapoints.\r\n    See the settings ``LOGDB_HISTORY_DAYS`` and ``LOGDB_INTERVAL``.\r\n    \r\nWhy is there 1 query executed for each datapoint?\r\n    Django does not (yet) allow to group by certain date information. Even \r\n    though a timestamp is stored in the database, there is no way to tell the \r\n    Django ORM to group by day, by hour, etc. The solution I used was to \r\n    filter/limit the results needed to construct 1 datapoint.\r\n\r\nWhen I run my tests, I see ``ERROR:djangologdb.middleware`` [...]\r\n    When you run, for example, the testproject, the configuration is set so\r\n    that any error is also displayed on ``sys.stderr``. As you you'll see, the\r\n    tests all succeed but the exceptions that are tested are just displayed in\r\n    the console. This is not an error!\r\n\r\n    You can disable this behaviour by disabling logging to the console for your\r\n    test configuration (ie. remove the handler).\r\n\r\nWhy are the templates extending a local version of the Django base templates?\r\n    This is done for optimal flexibility regarding custom templates. Skins like\r\n    Grappelli override a lot of templates and sometimes you want to be able to\r\n    change and use the base template in django-logdb and change some specifics\r\n    in the django-logdb template itself without copying all the base template\r\n    stuff.\r\n\r\nTest project\r\n------------\r\n\r\nThe testproject is a sample installation of django-logdb. It provides a \r\nsettings file for Django 1.1 and Django 1.2, just to run it.\r\n\r\nIn the directory below the testproject, create a virtual environment::\r\n\r\n    $ virtualenv .\r\n    $ source bin/activate\r\n\r\nInstall Django and run the internal server using one of the setting files for\r\nyour Django version.\r\n\r\n    $ bin/python bin/pip install django\r\n    $ bin/python bin/django-admin.py runserver --settings=testproject.settings_django_1_1\r\n\r\n\r\nThanks\r\n------\r\nTo the various people that helped making this project better and better:\r\n\r\n- Maciek Szczesniak (vvarp)\r\n- Victor van den Elzen\r\n\r\nThanks to David Cramer for his work on django-db-log \r\n(http://github.com/dcramer/django-db-log/) on which this package was based.\n\nCHANGES\n=======\n\n1.0\n---\n- Changed jQuery to use noConflict to be more compatible with other frameworks.\n- Added setting files for Django 1.1 and Django 1.2.\n- Added short howto on getting the testproject up and running.\n\n0.9.11\n------\n- Fixed an issue with applications that add log entries to the tables before \n  the unit tests are run, which caused unit tests for django-logdb to fail.\n\n0.9.10\n------\n- Fixed a problem with django-logdb test suite being used in a project with\n  an existing logging configuration.\n- Updated testproject to Django 1.2.\n- Added the license (MIT) file (sorry Jacob).\n\n0.9.9\n-----\n- Added templates for LogEntry in manifest file.\n- Fixed a problem that occurred when something other then a string was passed as\n  a message.\n\n0.9.8\n-----\n- Use int64-friendly field for storing thread ID (vvarp).\n- Fixed a problem with invalid characters passed as logging argument.\n\n0.9.7\n-----\n- Aggregation of logs is now done in a transaction.\n- Changed templates to allow for easier customization.\n- Fixed an error in tests.py that occured with Python 2.5.\n- Added 2 new settings: INTERVAL and HISTORY_DAYS with the defaults as before.\n- Moved JS code from extrastyle to extrahead block in templates.\n\n0.9.6\n-----\n\n- Updated README to include examples to serve the media.\n- Fixed a problem with saving objects or instances as log record arguments\n  (picklefield).\n- Fixed a problem with unicode characters in the arguments.\n- Replaced library picklefield with JSONField and TupleField.\n\n0.9.5\n-----\n- Removed Django as a requirement (although it's still required) to prevent\n  conflicts with djangorecipe.\n\n0.9.4\n-----\n- Fixed manifest to include changes.\n\n0.9.3\n-----\n- Added template for LogEntry view.\n- Renamed templates to Django's default. You can still override them.\n\n0.9.2\n-----\n- Initial release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/joeribekker/django-logdb", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-logdb", "package_url": "https://pypi.org/project/django-logdb/", "platform": "any", "project_url": "https://pypi.org/project/django-logdb/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/joeribekker/django-logdb"}, "release_url": "https://pypi.org/project/django-logdb/1.1/", "requires_dist": null, "requires_python": null, "summary": "Django-logdb enables you to log entries to a database and aggregate them periodically.", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-logdb\">\n<h2>DJANGO-LOGDB</h2>\n<p>Django-logdb enables you to log entries to a database, aggregate and act on\nthem with certain rules, and gives you more insight in what\u2019s going on.</p>\n<p>Django-logdb requires Django 1.1 and higher.</p>\n<div id=\"description\">\n<h3>Description</h3>\n<p>Django-logdb has a custom logging handler that writes log entries to the\ndatabase. It therefore integrates nicely with your existing logging\nconfiguration and you can decide what log entries are written to the database.</p>\n<p>The Django admin site is extended with a graphical view of recent log entries\nto provide more insight in what is going on. The log messages are grouped by\nlog level or \u201ctype of log entry\u201d.</p>\n<p>To minimize database access, aggregation is done via a Django command that you\ncan call periodically (as a cronjob).</p>\n</div>\n<div id=\"install\">\n<h3>Install</h3>\n<p>The easiest way to install the package is via setuptools:</p>\n<pre>easy_install django-logdb\n</pre>\n<p>Once installed, update your Django <cite>settings.py</cite> and add <tt>djangologdb</tt> to your\nINSTALLED_APPS:</p>\n<pre>INSTALLED_APPS = (\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    ...\n    'djangologdb',\n)\n</pre>\n<p>In your Django <cite>urls.py</cite>, include the <cite>djangologdb.urls</cite> before the admin:</p>\n<pre>urlpatterns = patterns('',\n    ...\n    (r'^admin/djangologdb/', include('djangologdb.urls')),\n    ...\n    (r'^admin/', include(admin.site.urls)),\n)\n</pre>\n<p>Optionally, if you want to log exceptions, add the middleware:</p>\n<pre>MIDDLEWARE_CLASSES = (\n    'django.middleware.common.CommonMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    ...\n    'djangologdb.middleware.LoggingMiddleware',\n)\n</pre>\n<p>Run <tt>python manage.py syncdb</tt> to create the database tables.</p>\n</div>\n<div id=\"setup-logging\">\n<h3>Setup logging</h3>\n<p>Now, for the actual logging part, you should use the database logging handler.\nThere are two ways to do this: Using only Python code, or, by using a\nconfiguration file. Both methods are explained below.</p>\n<p>To add this handler via Python to, for example, your root logger, you can add\nthe following to your Django <cite>settings.py</cite>:</p>\n<pre>import logging\nfrom djangologdb.handler import DjangoDatabaseHandler, add_handler\n\nlogging.basicConfig(level=logging.DEBUG)\nlogger = logging.getLogger()\n\n# A bug in Django causes the settings to load twice. Using\n# this handler instead of logging.addHandler works around that.\nadd_handler(logger, DjangoDatabaseHandler())\n</pre>\n<p>To use this handler via a logging configuration file, simply import the\n<tt>handlers</tt> module from <tt>djangologdb</tt> in your Django <cite>settings.py</cite> before\nloading the configuration from a file:</p>\n<pre>from djangologdb import handlers\nlogging.config.fileConfig(...)\n</pre>\n<p>Then in your logging configuration file, you can add it from the handlers\nnamespace and add it to any logger you want:</p>\n<pre>[handlers]\nkeys=djangologdb\n\n[logger_root]\nlevel=NOTSET\nhandlers=djangologdb\n\n[handler_djangologdb]\nclass=handlers.DjangoDatabaseHandler\nargs=()\n</pre>\n</div>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<p>You can set the following settings in your Django <cite>settings.py</cite> file:</p>\n<dl>\n<dt>LOGDB_HISTORY_DAYS</dt>\n<dd><p>The number of days to show in the various graphs.</p>\n<p>Default:</p>\n<pre>LOGDB_HISTORY_DAYS = 30\n</pre>\n</dd>\n<dt>LOGDB_INTERVAL</dt>\n<dd><p>The <tt>timedelta</tt> between each datapoint in the various graphs.</p>\n<p>Default:</p>\n<pre>LOGDB_INTERVAL = datetime.timedelta(1) # 1 day\n</pre>\n</dd>\n<dt>LOGDB_RULES</dt>\n<dd><p>Define rules to create a new log entry when certain conditions are true.</p>\n<p>Default:</p>\n<pre>LOGDB_RULES =\n    [{\n        # If 3 logs with level WARNING or higher occur in 5 minutes or\n        # less, create a new log with level CRITICAL.\n        'conditions': {\n            'min_level': logging.WARNING,\n            'qualname': '',\n            'min_times_seen': 3,\n            'within_time': datetime.timedelta(0, 5 * 60),\n        },\n        'actions': {\n            'level': logging.CRITICAL,\n        }\n    }]\n</pre>\n</dd>\n<dt>LOGDB_LEVEL_COLORS</dt>\n<dd><p>Set colors to use in the graph for level based datasets.</p>\n<p>Default:</p>\n<pre>LOGDB_LEVEL_COLORS =\n    {\n        logging.DEBUG: '#c2c7d1',\n        logging.INFO: '#aad2e9',\n        logging.WARNING: '#b9a6d7',\n        logging.ERROR: '#deb7c1',\n        logging.CRITICAL: '#e9a8ab',\n    }\n</pre>\n</dd>\n<dt>LOGDB_MEDIA_ROOT</dt>\n<dd><p>Set the absolute path to the directory of <cite>django-logdb</cite> media.</p>\n<p>Default:</p>\n<pre>LOGDB_MEDIA_ROOT = os.path.join(djangologdb.__path__[0], 'media')\n</pre>\n</dd>\n<dt>LOGDB_MEDIA_URL</dt>\n<dd><p>Set the URL that handles the media served from <tt>LOGDB_MEDIA_ROOT</tt>. Make\nsure to add a trailing slash at the end. If <tt>settings.DEBUG=True</tt>, the\nmedia will be served by Django.</p>\n<p>Default:</p>\n<pre>LOGDB_MEDIA_URL = '/admin/djangologdb/media/'\n</pre>\n</dd>\n</dl>\n</div>\n<div id=\"commands\">\n<h3>Commands</h3>\n<dl>\n<dt>aggregate_logs</dt>\n<dd><p>Aggregates log entries and triggers any action with matching rules.</p>\n<dl>\n<dt><em>Usage</em>:</dt>\n<dd><tt>python <span class=\"pre\">django-admin.py</span> aggregate_logs</tt></dd>\n<dt><em>Options</em>:</dt>\n<dd><table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">-s</span>, <span class=\"option\">--skip-actions</span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Do not use the rules to create new logs.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--cleanup=<var>CLEANUP</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Specifies the number of days to keep log entries\nand deletes the rest.</td></tr>\n</tbody>\n</table>\n</dd>\n</dl>\n</dd>\n</dl>\n</div>\n<div id=\"faq\">\n<h3>FAQ</h3>\n<dl>\n<dt>The graph doesn\u2019t show in the Django admin.</dt>\n<dd><p>If you don\u2019t have <tt>settings.DEBUG=True</tt>, the media will not be served by\nDjango. You should copy the media directory to your own media directory and\nset LOGDB_MEDIA_ROOT and LOGDB_MEDIA_URL accordingly.</p>\n<p>Example:</p>\n<pre>LOGDB_MEDIA_ROOT = '/myproject/media/djanglogdb/'\nLOGDB_MEDIA_URL = '/media/djanglogdb/'\n</pre>\n<p>Instead of copying, you can also use Apache\u2019s Alias directive to serve the\nstatic files, as you probably also did for Django\u2019s own media files. It is\nexplained here: <a href=\"http://docs.djangoproject.com/en/dev/howto/deployment/modwsgi/#serving-media-files\" rel=\"nofollow\">http://docs.djangoproject.com/en/dev/howto/deployment/modwsgi/#serving-media-files</a>\nThis boils down to adding the following line to your VirtualHost entry:</p>\n<pre>Alias &lt;your LOGDB_MEDIA_URL setting&gt; &lt;path to django-logdb media dir&gt;\n</pre>\n<p>Example:</p>\n<pre>Alias /admin/djangologdb/media/ /myproject/eggs/django_logdb-0.9.5-py2.6.egg/djangologdb/media/\n</pre>\n</dd>\n<dt>The Django admin pages for django-logdb load very slow.</dt>\n<dd>If you have a lot of datapoints in the graph, it executes a lot of queries.\nThis can take some time. You should decrease the time period or increase the\ninterval. By default, the last 30 days with an interval of 1 day is used,\nresulting in 30 datapoints.\nSee the settings <tt>LOGDB_HISTORY_DAYS</tt> and <tt>LOGDB_INTERVAL</tt>.</dd>\n<dt>Why is there 1 query executed for each datapoint?</dt>\n<dd>Django does not (yet) allow to group by certain date information. Even\nthough a timestamp is stored in the database, there is no way to tell the\nDjango ORM to group by day, by hour, etc. The solution I used was to\nfilter/limit the results needed to construct 1 datapoint.</dd>\n<dt>When I run my tests, I see <tt>ERROR:djangologdb.middleware</tt> [\u2026]</dt>\n<dd><p>When you run, for example, the testproject, the configuration is set so\nthat any error is also displayed on <tt>sys.stderr</tt>. As you you\u2019ll see, the\ntests all succeed but the exceptions that are tested are just displayed in\nthe console. This is not an error!</p>\n<p>You can disable this behaviour by disabling logging to the console for your\ntest configuration (ie. remove the handler).</p>\n</dd>\n<dt>Why are the templates extending a local version of the Django base templates?</dt>\n<dd>This is done for optimal flexibility regarding custom templates. Skins like\nGrappelli override a lot of templates and sometimes you want to be able to\nchange and use the base template in django-logdb and change some specifics\nin the django-logdb template itself without copying all the base template\nstuff.</dd>\n</dl>\n</div>\n<div id=\"test-project\">\n<h3>Test project</h3>\n<p>The testproject is a sample installation of django-logdb. It provides a\nsettings file for Django 1.1 and Django 1.2, just to run it.</p>\n<p>In the directory below the testproject, create a virtual environment:</p>\n<pre>$ virtualenv .\n$ source bin/activate\n</pre>\n<p>Install Django and run the internal server using one of the setting files for\nyour Django version.</p>\n<blockquote>\n$ bin/python bin/pip install django\n$ bin/python bin/django-admin.py runserver \u2013settings=testproject.settings_django_1_1</blockquote>\n</div>\n<div id=\"thanks\">\n<h3>Thanks</h3>\n<p>To the various people that helped making this project better and better:</p>\n<ul>\n<li>Maciek Szczesniak (vvarp)</li>\n<li>Victor van den Elzen</li>\n</ul>\n<p>Thanks to David Cramer for his work on django-db-log\n(<a href=\"http://github.com/dcramer/django-db-log/\" rel=\"nofollow\">http://github.com/dcramer/django-db-log/</a>) on which this package was based.</p>\n</div>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<div id=\"id1\">\n<h3>1.0</h3>\n<ul>\n<li>Changed jQuery to use noConflict to be more compatible with other frameworks.</li>\n<li>Added setting files for Django 1.1 and Django 1.2.</li>\n<li>Added short howto on getting the testproject up and running.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.9.11</h3>\n<ul>\n<li>Fixed an issue with applications that add log entries to the tables before\nthe unit tests are run, which caused unit tests for django-logdb to fail.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.9.10</h3>\n<ul>\n<li>Fixed a problem with django-logdb test suite being used in a project with\nan existing logging configuration.</li>\n<li>Updated testproject to Django 1.2.</li>\n<li>Added the license (MIT) file (sorry Jacob).</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.9.9</h3>\n<ul>\n<li>Added templates for LogEntry in manifest file.</li>\n<li>Fixed a problem that occurred when something other then a string was passed as\na message.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.9.8</h3>\n<ul>\n<li>Use int64-friendly field for storing thread ID (vvarp).</li>\n<li>Fixed a problem with invalid characters passed as logging argument.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.9.7</h3>\n<ul>\n<li>Aggregation of logs is now done in a transaction.</li>\n<li>Changed templates to allow for easier customization.</li>\n<li>Fixed an error in tests.py that occured with Python 2.5.</li>\n<li>Added 2 new settings: INTERVAL and HISTORY_DAYS with the defaults as before.</li>\n<li>Moved JS code from extrastyle to extrahead block in templates.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.9.6</h3>\n<ul>\n<li>Updated README to include examples to serve the media.</li>\n<li>Fixed a problem with saving objects or instances as log record arguments\n(picklefield).</li>\n<li>Fixed a problem with unicode characters in the arguments.</li>\n<li>Replaced library picklefield with JSONField and TupleField.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.9.5</h3>\n<ul>\n<li>Removed Django as a requirement (although it\u2019s still required) to prevent\nconflicts with djangorecipe.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.9.4</h3>\n<ul>\n<li>Fixed manifest to include changes.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.9.3</h3>\n<ul>\n<li>Added template for LogEntry view.</li>\n<li>Renamed templates to Django\u2019s default. You can still override them.</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.9.2</h3>\n<ul>\n<li>Initial release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 790007, "releases": {"0.9": [{"comment_text": "", "digests": {"md5": "c9c9f37c3240772c2c5e0edab6f5a2aa", "sha256": "5c51880f5b370020979e9b2864b41305b61df9a3ca8a33077dd34396fc803733"}, "downloads": -1, "filename": "django-logdb-0.9.zip", "has_sig": false, "md5_digest": "c9c9f37c3240772c2c5e0edab6f5a2aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18303, "upload_time": "2010-01-09T18:42:06", "upload_time_iso_8601": "2010-01-09T18:42:06.463639Z", "url": "https://files.pythonhosted.org/packages/a4/16/224fbafbdd672413dc8a814f1d179852e2958802964ebffab6bffdf27094/django-logdb-0.9.zip", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "e75e9b6689e2097e6137f3a38d1748d2", "sha256": "6353d838340a93629092d919b46e58c86914ee335b134e8767c1f486e3e967c2"}, "downloads": -1, "filename": "django-logdb-0.9.1.zip", "has_sig": false, "md5_digest": "e75e9b6689e2097e6137f3a38d1748d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18438, "upload_time": "2010-01-10T19:18:16", "upload_time_iso_8601": "2010-01-10T19:18:16.166779Z", "url": "https://files.pythonhosted.org/packages/83/a5/035893fb4e08c263e5302f41cfcab8c71eaf48cc67a4724c018d670843c8/django-logdb-0.9.1.zip", "yanked": false}], "0.9.10": [{"comment_text": "", "digests": {"md5": "de66a783b0a41b6c6f1f250cf0c39daa", "sha256": "2eb655b16ad8366b12dc2abb20026b0ea52b6ea76ae6412a05f7583664eb35a4"}, "downloads": -1, "filename": "django-logdb-0.9.10.tar.gz", "has_sig": false, "md5_digest": "de66a783b0a41b6c6f1f250cf0c39daa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65802, "upload_time": "2010-06-07T13:26:26", "upload_time_iso_8601": "2010-06-07T13:26:26.168837Z", "url": "https://files.pythonhosted.org/packages/3a/2d/aa1035f05f70a457a1dbbc913fb7bfa949adda7895eca86d9d1467caf3b6/django-logdb-0.9.10.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "00e90a89907f941b41060d0e6acf70a0", "sha256": "9b1e6763429f638f2648bc56549df7d19e6edfffaf50f89c6079880481372a4b"}, "downloads": -1, "filename": "django-logdb-0.9.10.zip", "has_sig": false, "md5_digest": "00e90a89907f941b41060d0e6acf70a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79341, "upload_time": "2010-06-07T13:26:17", "upload_time_iso_8601": "2010-06-07T13:26:17.072129Z", "url": "https://files.pythonhosted.org/packages/5b/d2/470d18467e77635ce6b72f1c820a24bfbab84bdf99e10b961f14515cad8c/django-logdb-0.9.10.zip", "yanked": false}], "0.9.11": [{"comment_text": "", "digests": {"md5": "b81ce723aa8d19b95ce93cbba5c3a3e1", "sha256": "b34e279e51da517a8211651e5e1164a9a1db3488263ef2318aadcbac50aeee1b"}, "downloads": -1, "filename": "django-logdb-0.9.11.tar.gz", "has_sig": false, "md5_digest": "b81ce723aa8d19b95ce93cbba5c3a3e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66061, "upload_time": "2010-06-24T16:05:38", "upload_time_iso_8601": "2010-06-24T16:05:38.213788Z", "url": "https://files.pythonhosted.org/packages/02/da/013f5350bbf13301bfec95804968a7e304011c5fce26c31c21ab1d05a973/django-logdb-0.9.11.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "0a8bdf44e2f919fe6e6748bf63d136c2", "sha256": "97b0783035d5abe59d036cfce5e4679bbd2718860f891505f3af68c2cd8e9eb7"}, "downloads": -1, "filename": "django-logdb-0.9.2.zip", "has_sig": false, "md5_digest": "0a8bdf44e2f919fe6e6748bf63d136c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66183, "upload_time": "2010-01-11T00:07:59", "upload_time_iso_8601": "2010-01-11T00:07:59.255662Z", "url": "https://files.pythonhosted.org/packages/80/f9/0958a87001490699b1748d08b7e946f82e8c0ffe04002ad6c957ed845c54/django-logdb-0.9.2.zip", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "f92b56fa9cb57acdd984251d2d1ca08e", "sha256": "dba370c53bbf27b75c10baa46651ec0e1cb81dbf8dc399151a14c515927e0946"}, "downloads": -1, "filename": "django-logdb-0.9.3.zip", "has_sig": false, "md5_digest": "f92b56fa9cb57acdd984251d2d1ca08e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72057, "upload_time": "2010-01-15T15:02:55", "upload_time_iso_8601": "2010-01-15T15:02:55.870948Z", "url": "https://files.pythonhosted.org/packages/d2/a8/9979c8846efeced89de9c2ab7bd18e02e7be3e0bba495e28c2031e640561/django-logdb-0.9.3.zip", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "d85e7027f575a71392eff3469a9036bd", "sha256": "1c5671a06c84af13e86c548e865a7e66f6316b3b66137289e08564fdc8b7a4a3"}, "downloads": -1, "filename": "django-logdb-0.9.4.zip", "has_sig": false, "md5_digest": "d85e7027f575a71392eff3469a9036bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72539, "upload_time": "2010-01-15T15:09:47", "upload_time_iso_8601": "2010-01-15T15:09:47.552228Z", "url": "https://files.pythonhosted.org/packages/b2/26/8dd58cb04cb9e840f612133df61f0a2d4f7da7f073881502a653e807fcc6/django-logdb-0.9.4.zip", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "aba58699f64bbd72894067559316d132", "sha256": "32c4aae46ad2c980840935d8fe0fc9e1a9bbeaa6fda46d88fa371830ee22f1a8"}, "downloads": -1, "filename": "django-logdb-0.9.5.zip", "has_sig": false, "md5_digest": "aba58699f64bbd72894067559316d132", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72700, "upload_time": "2010-01-15T16:58:19", "upload_time_iso_8601": "2010-01-15T16:58:19.129934Z", "url": "https://files.pythonhosted.org/packages/b6/b1/878b313fc6aa8ec054b2af912b8ff6ec1bfdf20173a472409b51d32280ed/django-logdb-0.9.5.zip", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "5a8aac6c0200496d4b14c6868bc91afc", "sha256": "34fce663dea45003d7de18b94319b5f819ba0d07001e3465d6fa40f1fa6e7271"}, "downloads": -1, "filename": "django-logdb-0.9.6.zip", "has_sig": false, "md5_digest": "5a8aac6c0200496d4b14c6868bc91afc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74193, "upload_time": "2010-01-24T17:35:09", "upload_time_iso_8601": "2010-01-24T17:35:09.539431Z", "url": "https://files.pythonhosted.org/packages/1b/b5/66ee1a1820e14914d3bec69044d930b4314337c5a83d0c311a0fd913eb04/django-logdb-0.9.6.zip", "yanked": false}], "0.9.7": [{"comment_text": "", "digests": {"md5": "b3b0acba575daa0332ea73ddb619b466", "sha256": "0fa457fdcfa5fc78a3da5aa1b344f3c36f15e54e8a82309924932c6b98e285c8"}, "downloads": -1, "filename": "django-logdb-0.9.7.zip", "has_sig": false, "md5_digest": "b3b0acba575daa0332ea73ddb619b466", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76255, "upload_time": "2010-02-07T11:14:23", "upload_time_iso_8601": "2010-02-07T11:14:23.319574Z", "url": "https://files.pythonhosted.org/packages/29/0e/2e0d2d78f643912ec6b3c8c0c943264e4b3499161fb2f753a9f3e8d281d7/django-logdb-0.9.7.zip", "yanked": false}], "0.9.8": [{"comment_text": "", "digests": {"md5": "ca05be26c20ccab3064313fdde23d61c", "sha256": "78901f6469a0b3f35bcf9c7cd65ccb3b6cd990ae5e05827e3663802b0066f75f"}, "downloads": -1, "filename": "django-logdb-0.9.8.tar.gz", "has_sig": false, "md5_digest": "ca05be26c20ccab3064313fdde23d61c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63542, "upload_time": "2010-02-17T16:51:08", "upload_time_iso_8601": "2010-02-17T16:51:08.744551Z", "url": "https://files.pythonhosted.org/packages/49/37/a16bc4519433e299e12b0ec4089859c6ae17851e3a732328cbad6521247d/django-logdb-0.9.8.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "85b9c6812a7df94cf51e78ca688ae3c0", "sha256": "d2198548f84d681a368c904832df4f0339d3f9f775b8db86c84f7e43977eb021"}, "downloads": -1, "filename": "django-logdb-0.9.8.zip", "has_sig": false, "md5_digest": "85b9c6812a7df94cf51e78ca688ae3c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76999, "upload_time": "2010-02-17T11:11:01", "upload_time_iso_8601": "2010-02-17T11:11:01.814335Z", "url": "https://files.pythonhosted.org/packages/7b/8a/1e928f33c9ffb541ce6487341a07d3442469ceb743d54ad29654b5aa8af2/django-logdb-0.9.8.zip", "yanked": false}], "0.9.9": [{"comment_text": "", "digests": {"md5": "27d7fd7089a6289a9625d9454f04cb45", "sha256": "843155fe29b39ac7404295fb7cd4b7155e8e8dce4a8747ebd067ec3a93e02545"}, "downloads": -1, "filename": "django-logdb-0.9.9.tar.gz", "has_sig": false, "md5_digest": "27d7fd7089a6289a9625d9454f04cb45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64148, "upload_time": "2010-03-04T16:21:57", "upload_time_iso_8601": "2010-03-04T16:21:57.836357Z", "url": "https://files.pythonhosted.org/packages/d8/07/4024a496e37e6f345bdc3552cdffbb4a0072a4f4d703ce47eb0028d2414d/django-logdb-0.9.9.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "deba56cf417023bc66cd3ab33eb6f24c", "sha256": "61af33039dfdd80672d4b80a732887233d20920dbc11ac6c9751854ea1843212"}, "downloads": -1, "filename": "django-logdb-0.9.9.zip", "has_sig": false, "md5_digest": "deba56cf417023bc66cd3ab33eb6f24c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77387, "upload_time": "2010-03-04T16:19:51", "upload_time_iso_8601": "2010-03-04T16:19:51.245982Z", "url": "https://files.pythonhosted.org/packages/79/c7/c215eb36164eba115356d9f70206ce3855880a4d04afc4b5d326ca4a1c51/django-logdb-0.9.9.zip", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "d001f4050743c799abf285c22788a2a2", "sha256": "6f1c6545854bed5a688c1d7877ec6e70730e9e3cf8c6d9172d6847aed3a74c5f"}, "downloads": -1, "filename": "django-logdb-1.0.tar.gz", "has_sig": false, "md5_digest": "d001f4050743c799abf285c22788a2a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65723, "upload_time": "2010-08-03T11:53:05", "upload_time_iso_8601": "2010-08-03T11:53:05.648571Z", "url": "https://files.pythonhosted.org/packages/8a/fc/a40e0c2ea47bae633c65c4ca97a7ad0dcccd196cd02385e5b355632a29ea/django-logdb-1.0.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebf3a3dbabbbddbb1b8897f1a404005f", "sha256": "7af3ab1ca70742032150e1012011a445b403f3f6c8422102c0fd8357e3220807"}, "downloads": -1, "filename": "django-logdb-1.0.zip", "has_sig": false, "md5_digest": "ebf3a3dbabbbddbb1b8897f1a404005f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79334, "upload_time": "2010-08-03T11:52:25", "upload_time_iso_8601": "2010-08-03T11:52:25.259365Z", "url": "https://files.pythonhosted.org/packages/f5/39/df39ad378eb81ef38c52622345ecbd6a37c0afb8675c57684596a2e69a55/django-logdb-1.0.zip", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "2800b3722d906ced5216951e549d5a88", "sha256": "0ab26f2e0f8730b64b74dddf0d55ad5fca6091f8dfa8c3b74943a59005fd2c9c"}, "downloads": -1, "filename": "django-logdb-1.1.tar.gz", "has_sig": false, "md5_digest": "2800b3722d906ced5216951e549d5a88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65761, "upload_time": "2010-12-08T16:35:13", "upload_time_iso_8601": "2010-12-08T16:35:13.827659Z", "url": "https://files.pythonhosted.org/packages/6a/97/7f6ebcf08c3f973fe8f9c7529f4ad6e6049d243e9a41bb9002767624e2ba/django-logdb-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2800b3722d906ced5216951e549d5a88", "sha256": "0ab26f2e0f8730b64b74dddf0d55ad5fca6091f8dfa8c3b74943a59005fd2c9c"}, "downloads": -1, "filename": "django-logdb-1.1.tar.gz", "has_sig": false, "md5_digest": "2800b3722d906ced5216951e549d5a88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65761, "upload_time": "2010-12-08T16:35:13", "upload_time_iso_8601": "2010-12-08T16:35:13.827659Z", "url": "https://files.pythonhosted.org/packages/6a/97/7f6ebcf08c3f973fe8f9c7529f4ad6e6049d243e9a41bb9002767624e2ba/django-logdb-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:17 2020"}