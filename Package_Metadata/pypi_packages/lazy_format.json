{"info": {"author": "Miphreal Adler", "author_email": "miphreal@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)"], "description": "Simple way to have partially applied formatted strings.\r\n\r\nThis python package provides a wrapper around the 'str.format' functionality in order to skip unresolved formatting parts. All arguments are applied lazily.\r\n\r\nInstall\r\n\r\nEnter the following command:\r\n\r\n  $ pip install lazy_format\r\n\r\nExamples\r\n\r\nMore examples you can find in the tests.\r\n\r\nCommon use case:\r\n\r\n>>> from lazy_format import LazyFormat\r\n>>>\r\n>>> lazy = LazyFormat('{0} {1} {0} {msg} {var1} {var2} {obj!r} {x:.2f}', 'fist arg', msg='Hello')\r\n>>> lazy\r\n<lazy_format.format.LazyFormat at 0x22a2590>\r\n>>> print lazy\r\nfist arg {1} fist arg Hello {var1} {var2} {obj!r} {x:.2f}\r\n>>>\r\n>>> lazy.format('second arg', obj=LazyFormat, x=22/7.)\r\n\"fist arg second arg fist arg Hello {var1} {var2} <class 'lazy_format.format.LazyFormat'> 3.14\"\r\n>>>\r\n>>> lazy.format('second arg', obj=LazyFormat, x=22/7., var1='1', var2=2)\r\n\"fist arg second arg fist arg Hello 1 2 <class 'lazy_format.format.LazyFormat'> 3.14\"\r\n>>>\r\n>>> lazy.format('second arg', obj=LazyFormat, x=22/7., var1='1', var2=2, msg='Bye')\r\n\"fist arg second arg fist arg Bye 1 2 <class 'lazy_format.format.LazyFormat'> 3.14\"\r\n\r\n\r\nGlobal context:\r\n\r\n>>> LazyFormat.global_context.update_context_with({'global_var1': 'GV1', 'global_var2': 'GV2'})\r\n>>> lazy2 = LazyFormat('{global_var1}, {global_var2}')\r\n>>> print lazy2\r\nGV1, GV2\r\n>>> print lazy2.format(global_var1='my var1')\r\nmy var1, GV2\r\n\r\n\r\nExtra features:\r\n\r\n>>> from lazy_format import Aliases\r\n>>> from lazy_format import LazyAliasFormat\r\n>>>\r\n>>> Aliases.add_alias('project_name', 'LazyFormat')\r\n>>> lazy3 = LazyAliasFormat('{alias.project_name}')\r\n>>> print lazy3\r\nLazyFormat\r\n>>>\r\n>>>\r\n>>> def func(alias, context):\r\n>>>     return 'dyn value for ' + alias\r\n>>>\r\n>>> Aliases.add_alias('val', func)\r\n>>> lazy4 = LazyAliasFormat('{alias.val}')\r\n>>> print lazy4\r\ndyn value for val\r\n>>>\r\n>>>\r\n>>> LazyAliasFormat('{project_dir}', alias='dir')\r\n<lazy_format.format.LazyAliasFormat at 0x22a2a50>\r\n>>> templates = LazyAliasFormat('{alias.dir}/{template_dir_name}',\r\n>>>                             template_dir_name='templates',\r\n>>>                             alias='template_dir')\r\n>>>\r\n>>> my_prj_templates = LazyAliasFormat('{alias.template_dir}',\r\n>>>                                    project_dir='/code/lazy_format',\r\n>>>                                    template_dir_name='tmps')\r\n>>> print templates\r\n{project_dir}/templates\r\n>>> print my_prj_templates\r\n/code/lazy_format/tmps\r\n>>> print my_prj_templates.format(project_dir='/code2')\r\n/code2/tmps", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/miphreal/lazy_format/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/miphreal/lazy_format", "keywords": "", "license": "LGPL", "maintainer": "", "maintainer_email": "", "name": "lazy_format", "package_url": "https://pypi.org/project/lazy_format/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/lazy_format/", "project_urls": {"Download": "https://github.com/miphreal/lazy_format/archive/master.zip", "Homepage": "https://github.com/miphreal/lazy_format"}, "release_url": "https://pypi.org/project/lazy_format/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Simple way to have partially applied formatted strings.</p>\n<p>This python package provides a wrapper around the \u2018str.format\u2019 functionality in order to skip unresolved formatting parts. All arguments are applied lazily.</p>\n<p>Install</p>\n<p>Enter the following command:</p>\n<blockquote>\n$ pip install lazy_format</blockquote>\n<p>Examples</p>\n<p>More examples you can find in the tests.</p>\n<p>Common use case:</p>\n<pre>&gt;&gt;&gt; from lazy_format import LazyFormat\n&gt;&gt;&gt;\n&gt;&gt;&gt; lazy = LazyFormat('{0} {1} {0} {msg} {var1} {var2} {obj!r} {x:.2f}', 'fist arg', msg='Hello')\n&gt;&gt;&gt; lazy\n&lt;lazy_format.format.LazyFormat at 0x22a2590&gt;\n&gt;&gt;&gt; print lazy\nfist arg {1} fist arg Hello {var1} {var2} {obj!r} {x:.2f}\n&gt;&gt;&gt;\n&gt;&gt;&gt; lazy.format('second arg', obj=LazyFormat, x=22/7.)\n\"fist arg second arg fist arg Hello {var1} {var2} &lt;class 'lazy_format.format.LazyFormat'&gt; 3.14\"\n&gt;&gt;&gt;\n&gt;&gt;&gt; lazy.format('second arg', obj=LazyFormat, x=22/7., var1='1', var2=2)\n\"fist arg second arg fist arg Hello 1 2 &lt;class 'lazy_format.format.LazyFormat'&gt; 3.14\"\n&gt;&gt;&gt;\n&gt;&gt;&gt; lazy.format('second arg', obj=LazyFormat, x=22/7., var1='1', var2=2, msg='Bye')\n\"fist arg second arg fist arg Bye 1 2 &lt;class 'lazy_format.format.LazyFormat'&gt; 3.14\"\n</pre>\n<p>Global context:</p>\n<pre>&gt;&gt;&gt; LazyFormat.global_context.update_context_with({'global_var1': 'GV1', 'global_var2': 'GV2'})\n&gt;&gt;&gt; lazy2 = LazyFormat('{global_var1}, {global_var2}')\n&gt;&gt;&gt; print lazy2\nGV1, GV2\n&gt;&gt;&gt; print lazy2.format(global_var1='my var1')\nmy var1, GV2\n</pre>\n<p>Extra features:</p>\n<pre>&gt;&gt;&gt; from lazy_format import Aliases\n&gt;&gt;&gt; from lazy_format import LazyAliasFormat\n&gt;&gt;&gt;\n&gt;&gt;&gt; Aliases.add_alias('project_name', 'LazyFormat')\n&gt;&gt;&gt; lazy3 = LazyAliasFormat('{alias.project_name}')\n&gt;&gt;&gt; print lazy3\nLazyFormat\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; def func(alias, context):\n&gt;&gt;&gt;     return 'dyn value for ' + alias\n&gt;&gt;&gt;\n&gt;&gt;&gt; Aliases.add_alias('val', func)\n&gt;&gt;&gt; lazy4 = LazyAliasFormat('{alias.val}')\n&gt;&gt;&gt; print lazy4\ndyn value for val\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; LazyAliasFormat('{project_dir}', alias='dir')\n&lt;lazy_format.format.LazyAliasFormat at 0x22a2a50&gt;\n&gt;&gt;&gt; templates = LazyAliasFormat('{alias.dir}/{template_dir_name}',\n&gt;&gt;&gt;                             template_dir_name='templates',\n&gt;&gt;&gt;                             alias='template_dir')\n&gt;&gt;&gt;\n&gt;&gt;&gt; my_prj_templates = LazyAliasFormat('{alias.template_dir}',\n&gt;&gt;&gt;                                    project_dir='/code/lazy_format',\n&gt;&gt;&gt;                                    template_dir_name='tmps')\n&gt;&gt;&gt; print templates\n{project_dir}/templates\n&gt;&gt;&gt; print my_prj_templates\n/code/lazy_format/tmps\n&gt;&gt;&gt; print my_prj_templates.format(project_dir='/code2')\n/code2/tmps\n</pre>\n\n          </div>"}, "last_serial": 781422, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a4ca16afb0ef449b32ede1e652627a37", "sha256": "7040c67396e0cf93d97dba8adcfaa2ce0477336c93b2e80ec94298b72bdffaf4"}, "downloads": -1, "filename": "lazy_format-0.0.1.linux-x86_64.exe", "has_sig": false, "md5_digest": "a4ca16afb0ef449b32ede1e652627a37", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 64835, "upload_time": "2013-06-19T21:24:55", "upload_time_iso_8601": "2013-06-19T21:24:55.391238Z", "url": "https://files.pythonhosted.org/packages/6a/21/d2fe0458b7faf146ffaa6d1d34eb6e7760a114632fe5d056788a443b7577/lazy_format-0.0.1.linux-x86_64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "52a4fae8c1a0335f8cbcffbb92ddf8ba", "sha256": "01fbab539971ef46ae53683ec728c743e596debdb0a2032b255d9a3025037a9c"}, "downloads": -1, "filename": "lazy_format-0.0.1.tar.gz", "has_sig": false, "md5_digest": "52a4fae8c1a0335f8cbcffbb92ddf8ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2241, "upload_time": "2013-06-19T21:24:50", "upload_time_iso_8601": "2013-06-19T21:24:50.028967Z", "url": "https://files.pythonhosted.org/packages/fb/77/5802c3e8449bb1b212ec93cb08fa52d1c71986c25e154a38a71116b9e8f0/lazy_format-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "4ac34c3ec7f8f503f32f26d77e28253d", "sha256": "f9be9630fbd8233dba3afa3d106a48469d77748c010ffd32ed13e95ec4b83541"}, "downloads": -1, "filename": "lazy_format-0.0.2.linux-x86_64.exe", "has_sig": false, "md5_digest": "4ac34c3ec7f8f503f32f26d77e28253d", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 64855, "upload_time": "2013-06-19T23:03:50", "upload_time_iso_8601": "2013-06-19T23:03:50.607090Z", "url": "https://files.pythonhosted.org/packages/2c/a6/504d07f1cc17aa066520e2b656b1cbc74e97bdc0208c13e12114f6454cf9/lazy_format-0.0.2.linux-x86_64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "a49d523ed46d2f6d3b86069119f09840", "sha256": "08a2bc589374ea60da87034971c7c8200a9966d8809876593288bed96fdd737e"}, "downloads": -1, "filename": "lazy_format-0.0.2.tar.gz", "has_sig": false, "md5_digest": "a49d523ed46d2f6d3b86069119f09840", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2250, "upload_time": "2013-06-19T23:03:46", "upload_time_iso_8601": "2013-06-19T23:03:46.952391Z", "url": "https://files.pythonhosted.org/packages/8f/4b/494bcfb10f0e01912bc6b7d49dbb6a7430c7957e2f1a59ebaec7689ffe12/lazy_format-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4ac34c3ec7f8f503f32f26d77e28253d", "sha256": "f9be9630fbd8233dba3afa3d106a48469d77748c010ffd32ed13e95ec4b83541"}, "downloads": -1, "filename": "lazy_format-0.0.2.linux-x86_64.exe", "has_sig": false, "md5_digest": "4ac34c3ec7f8f503f32f26d77e28253d", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 64855, "upload_time": "2013-06-19T23:03:50", "upload_time_iso_8601": "2013-06-19T23:03:50.607090Z", "url": "https://files.pythonhosted.org/packages/2c/a6/504d07f1cc17aa066520e2b656b1cbc74e97bdc0208c13e12114f6454cf9/lazy_format-0.0.2.linux-x86_64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "a49d523ed46d2f6d3b86069119f09840", "sha256": "08a2bc589374ea60da87034971c7c8200a9966d8809876593288bed96fdd737e"}, "downloads": -1, "filename": "lazy_format-0.0.2.tar.gz", "has_sig": false, "md5_digest": "a49d523ed46d2f6d3b86069119f09840", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2250, "upload_time": "2013-06-19T23:03:46", "upload_time_iso_8601": "2013-06-19T23:03:46.952391Z", "url": "https://files.pythonhosted.org/packages/8f/4b/494bcfb10f0e01912bc6b7d49dbb6a7430c7957e2f1a59ebaec7689ffe12/lazy_format-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:36 2020"}