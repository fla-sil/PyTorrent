{"info": {"author": "Dmitri Vasilishin", "author_email": "vasilishin.d.o@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "# Elasticsearch Partition\n[![image](https://img.shields.io/pypi/v/elasticsearch-partition.svg)](https://pypi.python.org/pypi/elasticsearch-partition)\n[![Build Status](https://travis-ci.com/dmvass/elasticsearch-partition.svg?branch=master)](https://travis-ci.com/kandziu/elasticsearch-partition)\n[![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/dmvass/elasticsearch-partition/blob/master/LICENSE)\n\nA Python library is written on Cython for creating Elasticsearch indexes by\ndate range.\n\nFor time oriented data, such as logs, a common strategy is to partition data\ninto indexes that hold data for a certain time range. For example, the index\n`logstash-2018.01.01` holds data for events that happened on `2018-01-01`, i.e.\na time range of a day. You can of course choose bigger or smaller time ranges\nas well(`year`, `month` or `day` frequencies), depending on your needs. Using\nindex templates, you can easily manage settings and mappings for any index\ncreated with a name starting with e.g. `logstash-*`.\n\n## Installation\nInstall the elasticsearch partition package with pip:\n```\npip install elasticsearch-partition\n```\n\n## How to Use\n### Basic usage\nHow to import and use partition module with `since` and `until` dates:\n```python\nimport datetime\nfrom elasticsearch_partition import partition\n\npartition('logs-*', datetime.date(2016, 11, 29), datetime.date(2018, 2, 4))\n# ['logs-2016-11-29', 'logs-2016-11-30', 'logs-2016-12-*', 'logs-2017-*',\n# 'logs-2018-01-*', 'logs-2018-02-01', 'logs-2018-02-02', 'logs-2018-02-03',\n# 'logs-2018-02-04']\n```\n\nWhen you are using `partition` only with `since` date, `until` will be replaced\non a current date.\n```python\npartition('logs-*', since=datetime.date(2018, 7, 10))\n# ['logs-2018-07-10', 'logs-2018-07-11', 'logs-2018-07-12', 'logs-2018-07-13',\n# 'logs-2018-07-14', 'logs-2018-07-15', 'logs-2018-07-16', 'logs-2018-07-17']\n```\n\nOr when you are using `partition` only with `until` all dates from `until` to\ncurrent date will be excluded.\n```python\npartition('logs-*', until=datetime.date(2018, 7, 10))\n# ['-logs-2018-07-10', '-logs-2018-07-11', '-logs-2018-07-12',\n# '-logs-2018-07-13', '-logs-2018-07-14', '-logs-2018-07-15',\n# '-logs-2018-07-16', '-logs-2018-07-17', 'logs-*']\n```\n\n> Note: If `until` more then current date you will get an error.\n\n### How to customize partitioning\nIf you want to change some `partition` bahavior you can do it ease with\n`RangePartition` and `formatters` module, also you can use your custom date\n`now` functions.\n```python\nfrom elasticsearch_partition import RangePartition\nfrom elasticsearch_partition.partitioning import MONTH\nfrom elasticsearch_partition.formatters import LittleEndianDateFormatter\n\n# frequency - Index partitioning frequency\n# formatter - Formatter instance\n# escape - Special character which will be replaced on a date\n# now_func - Get now date function\nmy_partition = RangePartition(\n    frequency=MONTH,\n    formatter=LittleEndianDateFormatter(sep='.'),\n    escape='@',\n    now_func=custom_date_now,\n)\n\nmy_partition('logs-@', datetime.date(2016, 11, 29), datetime.date(2018, 2, 4))\n# ['logs-11.2016', 'logs-12.2016', 'logs-*.2017', 'logs-01.2018', 'logs-02.2018']\n```\n\n### How to create custom date formatter\nAll date formatters must be inherited from abstract `DateFormatter` class and\nimplement `fmt_year`, `fmt_month` and `fmt_day` methods. Some method accept\nadditional keyword parameter `wildcard` which used for creating formatted date\nwith specified wildcard character. For example `2018-04` will be replced on\n`2018-04-*`, `2018` on `2018-*` etc.\n```python\nclass MyDateFormatter(DateFormatter):\n    def fmt_year(self, year, wildcard):\n        # Should be implemented\n\n    def fmt_month(self, year, month, wildcard):\n        # Should be implemented\n\n    def fmt_day(self, year, month, day):\n        # Should be implemented\n\npartition = RangePartition(formatter=MyDateFormatter())\n```\n\n### How to use with [elasticsearch-py](https://github.com/elastic/elasticsearch-py)\nThis is useful for all Elasticsearch APIs that refer to an index parameter\nsupport execution across multiple indices.\n```python\nfrom elasticsearch import Elasticsearch\n\nes = Elasticsearch()\nindexes = partition(\n    'logs-*',\n    datetime.date(2016, 11, 29),\n    datetime.date(2018, 2, 4)\n)\nres = es.search(index=indexes, body={\"query\": {\"match_all\": {}}})\n```\n\n### How to use with [elasticsearch-dsl-py](https://github.com/elastic/elasticsearch-dsl-py)\nThis is useful for all Elasticsearch APIs that refer to an index parameter\nsupport execution across multiple indices and similar for simple Search and\nPersistance DSL.\n```python\nfrom elasticsearch import Elasticsearch\nfrom elasticsearch_dsl import Search\n\nclient = Elasticsearch()\n\nindexes = partition(\n    'logs-*',\n    datetime.date(2016, 11, 29),\n    datetime.date(2018, 2, 4)\n)\nsearch = Search(using=client, index=indexes) \\\n    .filter(\"term\", category=\"search\") \\\n    .query(\"match\", title=\"python\") \\\n    .exclude(\"match\", description=\"beta\")\n\nresponse = search.execute()\n```\n\n## Changes\nA full changelog is maintained in the [CAHNGELOG](https://github.com/dmvass/elasticsearch-partition/blob/master/CHANGELOG.md) file.\n\n## Contributing \n**elasticsearch-partition** is an open source project and contributions are\nwelcome! Check out the [Issues](https://github.com/dmvass/elasticsearch-partition/issues)\npage to see if your idea for a contribution has already been mentioned, and feel\nfree to raise an issue or submit a pull request.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dmvass/elasticsearch-partition", "keywords": "elasticsearch,partition,cython,bigdata", "license": "", "maintainer": "", "maintainer_email": "", "name": "elasticsearch-partition", "package_url": "https://pypi.org/project/elasticsearch-partition/", "platform": "", "project_url": "https://pypi.org/project/elasticsearch-partition/", "project_urls": {"Homepage": "https://github.com/dmvass/elasticsearch-partition"}, "release_url": "https://pypi.org/project/elasticsearch-partition/2.0.0/", "requires_dist": ["cython", "tox; extra == 'dev'", "bumpversion; extra == 'dev'"], "requires_python": "", "summary": "A Python library for creating Elasticsearch partitioned indexes by date range", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Elasticsearch Partition</h1>\n<p><a href=\"https://pypi.python.org/pypi/elasticsearch-partition\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85d812d89947fa8906eb5f880ca3ae56cd68e706/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f656c61737469637365617263682d706172746974696f6e2e737667\"></a>\n<a href=\"https://travis-ci.com/kandziu/elasticsearch-partition\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3b5670a0095c1a05221fae0ec0beedc9900b7e25/68747470733a2f2f7472617669732d63692e636f6d2f646d766173732f656c61737469637365617263682d706172746974696f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/dmvass/elasticsearch-partition/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c88fab50b4a1dc0cd91faeb7ba5654d56e380260/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667\"></a></p>\n<p>A Python library is written on Cython for creating Elasticsearch indexes by\ndate range.</p>\n<p>For time oriented data, such as logs, a common strategy is to partition data\ninto indexes that hold data for a certain time range. For example, the index\n<code>logstash-2018.01.01</code> holds data for events that happened on <code>2018-01-01</code>, i.e.\na time range of a day. You can of course choose bigger or smaller time ranges\nas well(<code>year</code>, <code>month</code> or <code>day</code> frequencies), depending on your needs. Using\nindex templates, you can easily manage settings and mappings for any index\ncreated with a name starting with e.g. <code>logstash-*</code>.</p>\n<h2>Installation</h2>\n<p>Install the elasticsearch partition package with pip:</p>\n<pre><code>pip install elasticsearch-partition\n</code></pre>\n<h2>How to Use</h2>\n<h3>Basic usage</h3>\n<p>How to import and use partition module with <code>since</code> and <code>until</code> dates:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"kn\">from</span> <span class=\"nn\">elasticsearch_partition</span> <span class=\"kn\">import</span> <span class=\"n\">partition</span>\n\n<span class=\"n\">partition</span><span class=\"p\">(</span><span class=\"s1\">'logs-*'</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2016</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">29</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"c1\"># ['logs-2016-11-29', 'logs-2016-11-30', 'logs-2016-12-*', 'logs-2017-*',</span>\n<span class=\"c1\"># 'logs-2018-01-*', 'logs-2018-02-01', 'logs-2018-02-02', 'logs-2018-02-03',</span>\n<span class=\"c1\"># 'logs-2018-02-04']</span>\n</pre>\n<p>When you are using <code>partition</code> only with <code>since</code> date, <code>until</code> will be replaced\non a current date.</p>\n<pre><span class=\"n\">partition</span><span class=\"p\">(</span><span class=\"s1\">'logs-*'</span><span class=\"p\">,</span> <span class=\"n\">since</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n<span class=\"c1\"># ['logs-2018-07-10', 'logs-2018-07-11', 'logs-2018-07-12', 'logs-2018-07-13',</span>\n<span class=\"c1\"># 'logs-2018-07-14', 'logs-2018-07-15', 'logs-2018-07-16', 'logs-2018-07-17']</span>\n</pre>\n<p>Or when you are using <code>partition</code> only with <code>until</code> all dates from <code>until</code> to\ncurrent date will be excluded.</p>\n<pre><span class=\"n\">partition</span><span class=\"p\">(</span><span class=\"s1\">'logs-*'</span><span class=\"p\">,</span> <span class=\"n\">until</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n<span class=\"c1\"># ['-logs-2018-07-10', '-logs-2018-07-11', '-logs-2018-07-12',</span>\n<span class=\"c1\"># '-logs-2018-07-13', '-logs-2018-07-14', '-logs-2018-07-15',</span>\n<span class=\"c1\"># '-logs-2018-07-16', '-logs-2018-07-17', 'logs-*']</span>\n</pre>\n<blockquote>\n<p>Note: If <code>until</code> more then current date you will get an error.</p>\n</blockquote>\n<h3>How to customize partitioning</h3>\n<p>If you want to change some <code>partition</code> bahavior you can do it ease with\n<code>RangePartition</code> and <code>formatters</code> module, also you can use your custom date\n<code>now</code> functions.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">elasticsearch_partition</span> <span class=\"kn\">import</span> <span class=\"n\">RangePartition</span>\n<span class=\"kn\">from</span> <span class=\"nn\">elasticsearch_partition.partitioning</span> <span class=\"kn\">import</span> <span class=\"n\">MONTH</span>\n<span class=\"kn\">from</span> <span class=\"nn\">elasticsearch_partition.formatters</span> <span class=\"kn\">import</span> <span class=\"n\">LittleEndianDateFormatter</span>\n\n<span class=\"c1\"># frequency - Index partitioning frequency</span>\n<span class=\"c1\"># formatter - Formatter instance</span>\n<span class=\"c1\"># escape - Special character which will be replaced on a date</span>\n<span class=\"c1\"># now_func - Get now date function</span>\n<span class=\"n\">my_partition</span> <span class=\"o\">=</span> <span class=\"n\">RangePartition</span><span class=\"p\">(</span>\n    <span class=\"n\">frequency</span><span class=\"o\">=</span><span class=\"n\">MONTH</span><span class=\"p\">,</span>\n    <span class=\"n\">formatter</span><span class=\"o\">=</span><span class=\"n\">LittleEndianDateFormatter</span><span class=\"p\">(</span><span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s1\">'.'</span><span class=\"p\">),</span>\n    <span class=\"n\">escape</span><span class=\"o\">=</span><span class=\"s1\">'@'</span><span class=\"p\">,</span>\n    <span class=\"n\">now_func</span><span class=\"o\">=</span><span class=\"n\">custom_date_now</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">my_partition</span><span class=\"p\">(</span><span class=\"s1\">'logs-@'</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2016</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">29</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"c1\"># ['logs-11.2016', 'logs-12.2016', 'logs-*.2017', 'logs-01.2018', 'logs-02.2018']</span>\n</pre>\n<h3>How to create custom date formatter</h3>\n<p>All date formatters must be inherited from abstract <code>DateFormatter</code> class and\nimplement <code>fmt_year</code>, <code>fmt_month</code> and <code>fmt_day</code> methods. Some method accept\nadditional keyword parameter <code>wildcard</code> which used for creating formatted date\nwith specified wildcard character. For example <code>2018-04</code> will be replced on\n<code>2018-04-*</code>, <code>2018</code> on <code>2018-*</code> etc.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MyDateFormatter</span><span class=\"p\">(</span><span class=\"n\">DateFormatter</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">fmt_year</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">year</span><span class=\"p\">,</span> <span class=\"n\">wildcard</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Should be implemented</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">fmt_month</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">year</span><span class=\"p\">,</span> <span class=\"n\">month</span><span class=\"p\">,</span> <span class=\"n\">wildcard</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Should be implemented</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">fmt_day</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">year</span><span class=\"p\">,</span> <span class=\"n\">month</span><span class=\"p\">,</span> <span class=\"n\">day</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Should be implemented</span>\n\n<span class=\"n\">partition</span> <span class=\"o\">=</span> <span class=\"n\">RangePartition</span><span class=\"p\">(</span><span class=\"n\">formatter</span><span class=\"o\">=</span><span class=\"n\">MyDateFormatter</span><span class=\"p\">())</span>\n</pre>\n<h3>How to use with <a href=\"https://github.com/elastic/elasticsearch-py\" rel=\"nofollow\">elasticsearch-py</a></h3>\n<p>This is useful for all Elasticsearch APIs that refer to an index parameter\nsupport execution across multiple indices.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">elasticsearch</span> <span class=\"kn\">import</span> <span class=\"n\">Elasticsearch</span>\n\n<span class=\"n\">es</span> <span class=\"o\">=</span> <span class=\"n\">Elasticsearch</span><span class=\"p\">()</span>\n<span class=\"n\">indexes</span> <span class=\"o\">=</span> <span class=\"n\">partition</span><span class=\"p\">(</span>\n    <span class=\"s1\">'logs-*'</span><span class=\"p\">,</span>\n    <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2016</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">29</span><span class=\"p\">),</span>\n    <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">es</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"o\">=</span><span class=\"n\">indexes</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"query\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"match_all\"</span><span class=\"p\">:</span> <span class=\"p\">{}}})</span>\n</pre>\n<h3>How to use with <a href=\"https://github.com/elastic/elasticsearch-dsl-py\" rel=\"nofollow\">elasticsearch-dsl-py</a></h3>\n<p>This is useful for all Elasticsearch APIs that refer to an index parameter\nsupport execution across multiple indices and similar for simple Search and\nPersistance DSL.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">elasticsearch</span> <span class=\"kn\">import</span> <span class=\"n\">Elasticsearch</span>\n<span class=\"kn\">from</span> <span class=\"nn\">elasticsearch_dsl</span> <span class=\"kn\">import</span> <span class=\"n\">Search</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Elasticsearch</span><span class=\"p\">()</span>\n\n<span class=\"n\">indexes</span> <span class=\"o\">=</span> <span class=\"n\">partition</span><span class=\"p\">(</span>\n    <span class=\"s1\">'logs-*'</span><span class=\"p\">,</span>\n    <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2016</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">29</span><span class=\"p\">),</span>\n    <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"n\">search</span> <span class=\"o\">=</span> <span class=\"n\">Search</span><span class=\"p\">(</span><span class=\"n\">using</span><span class=\"o\">=</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"n\">indexes</span><span class=\"p\">)</span> \\\n    <span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"s2\">\"term\"</span><span class=\"p\">,</span> <span class=\"n\">category</span><span class=\"o\">=</span><span class=\"s2\">\"search\"</span><span class=\"p\">)</span> \\\n    <span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s2\">\"match\"</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"python\"</span><span class=\"p\">)</span> \\\n    <span class=\"o\">.</span><span class=\"n\">exclude</span><span class=\"p\">(</span><span class=\"s2\">\"match\"</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"beta\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">search</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">()</span>\n</pre>\n<h2>Changes</h2>\n<p>A full changelog is maintained in the <a href=\"https://github.com/dmvass/elasticsearch-partition/blob/master/CHANGELOG.md\" rel=\"nofollow\">CAHNGELOG</a> file.</p>\n<h2>Contributing</h2>\n<p><strong>elasticsearch-partition</strong> is an open source project and contributions are\nwelcome! Check out the <a href=\"https://github.com/dmvass/elasticsearch-partition/issues\" rel=\"nofollow\">Issues</a>\npage to see if your idea for a contribution has already been mentioned, and feel\nfree to raise an issue or submit a pull request.</p>\n\n          </div>"}, "last_serial": 4973186, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "8602938698d2ec55915f82ece4595c03", "sha256": "ead0169f15603075d3bf3834aec56fda718802d9c8dc64572f7bfd5bd30ca4b7"}, "downloads": -1, "filename": "elasticsearch_partition-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8602938698d2ec55915f82ece4595c03", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3744, "upload_time": "2018-07-17T20:15:26", "upload_time_iso_8601": "2018-07-17T20:15:26.287106Z", "url": "https://files.pythonhosted.org/packages/71/64/b33116619fdd50026f712c43aa38cd696894c59ed4835acc2f87167b2725/elasticsearch_partition-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1571c575e56b5830f03acc8588e963ad", "sha256": "3ddba2779196b2f42c334d4bf50f2a087b835836a62dee69899952a40730cd96"}, "downloads": -1, "filename": "elasticsearch_partition-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1571c575e56b5830f03acc8588e963ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9277, "upload_time": "2018-07-17T20:15:27", "upload_time_iso_8601": "2018-07-17T20:15:27.824822Z", "url": "https://files.pythonhosted.org/packages/84/90/fcd998f46b9ffc06cdc1c4e2bf04058e101d27c90ba07af68b80d6bd89da/elasticsearch_partition-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "0958059a4910ca370203bb37aee8a73a", "sha256": "4a84977c166af8032b829f1d2ffa9bd78dfa4addc110a4729c28252a39561454"}, "downloads": -1, "filename": "elasticsearch_partition-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0958059a4910ca370203bb37aee8a73a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3808, "upload_time": "2018-07-19T08:58:05", "upload_time_iso_8601": "2018-07-19T08:58:05.839640Z", "url": "https://files.pythonhosted.org/packages/88/3e/c50641b6dc6e6cb92defee70c7aa5aaf021e5a06629056321ab79f59786e/elasticsearch_partition-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2f6f47592a6529fca18f5570e9bd8c3", "sha256": "a5662520e1105a23cf28b6a8bc29a0be1f1d60512b1b6576e6a6c29595c52b47"}, "downloads": -1, "filename": "elasticsearch_partition-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f2f6f47592a6529fca18f5570e9bd8c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9415, "upload_time": "2018-07-19T08:58:07", "upload_time_iso_8601": "2018-07-19T08:58:07.737609Z", "url": "https://files.pythonhosted.org/packages/ab/8b/6e80f9717db1e48026a6ea308604a116d8426e6297b44f2dfd57ffe77525/elasticsearch_partition-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "a21af9c9177988660987231c0ea80c6b", "sha256": "4b0d4d529223e88cc31972011a14b561a35f9b5f1a25f523321400fd205f3dc5"}, "downloads": -1, "filename": "elasticsearch_partition-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a21af9c9177988660987231c0ea80c6b", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 10000, "upload_time": "2019-02-23T21:45:37", "upload_time_iso_8601": "2019-02-23T21:45:37.547012Z", "url": "https://files.pythonhosted.org/packages/4d/be/8696c17d44bb2d5f129eb865491cd742eef30c82be0a5c4bb18cdf50aa64/elasticsearch_partition-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbe164560f8ae96f1e86858c9e203f55", "sha256": "85fd32be465e928a46221b6f2718eb911784d09bd8d0748d17413787ff3f71e3"}, "downloads": -1, "filename": "elasticsearch_partition-1.0.2.tar.gz", "has_sig": false, "md5_digest": "cbe164560f8ae96f1e86858c9e203f55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10149, "upload_time": "2019-02-23T21:45:35", "upload_time_iso_8601": "2019-02-23T21:45:35.157159Z", "url": "https://files.pythonhosted.org/packages/b1/d1/a86a279e6ac670d937db5a0a5736c4bb3db6ddf7071e453f7034ce524aa4/elasticsearch_partition-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "54a7988d703008066b1f4f007ae670db", "sha256": "73995c67172b916ff23c3273c3ef81fa2700d27785b2accfe83b8f7d2ef4715e"}, "downloads": -1, "filename": "elasticsearch_partition-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "54a7988d703008066b1f4f007ae670db", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 10025, "upload_time": "2019-02-23T21:54:10", "upload_time_iso_8601": "2019-02-23T21:54:10.250166Z", "url": "https://files.pythonhosted.org/packages/62/55/e187bded46f6dad12e4930060fa00891b93583c2264a90ca249ee134ceab/elasticsearch_partition-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8715fc00da328a63f6b9c7f9c96e888", "sha256": "53786e25b6ce218676bdabb92836af8481a643aefce406de99a9c2b918ebc3c8"}, "downloads": -1, "filename": "elasticsearch_partition-1.0.3.tar.gz", "has_sig": false, "md5_digest": "c8715fc00da328a63f6b9c7f9c96e888", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10203, "upload_time": "2019-02-23T21:54:07", "upload_time_iso_8601": "2019-02-23T21:54:07.968720Z", "url": "https://files.pythonhosted.org/packages/5c/86/8f04b43e4efc249d9cab29d84149ab68d85077cc149d4b5ea685556e8ba8/elasticsearch_partition-1.0.3.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "990f9d5573d287d5f57f441ca89275cf", "sha256": "1ce136ab71cd71205ce4a24fa400aaf0f2a2bb0723ffcbb35064985fef03689b"}, "downloads": -1, "filename": "elasticsearch_partition-2.0.0-cp37-cp37m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "990f9d5573d287d5f57f441ca89275cf", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 213037, "upload_time": "2019-03-22T14:55:15", "upload_time_iso_8601": "2019-03-22T14:55:15.798256Z", "url": "https://files.pythonhosted.org/packages/a5/a7/1b2cc1a58c2f86c1c1f71b2ce4aea4a3f0e4bef86cadf9eec743d805d528/elasticsearch_partition-2.0.0-cp37-cp37m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2560a9620b57a8180b4b4109776f7ad0", "sha256": "35cf55df7858559a1c5ce316ee4b0d9a41f088136a13f635b165575300c5391c"}, "downloads": -1, "filename": "elasticsearch_partition-2.0.0.tar.gz", "has_sig": false, "md5_digest": "2560a9620b57a8180b4b4109776f7ad0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 130902, "upload_time": "2019-03-22T14:55:18", "upload_time_iso_8601": "2019-03-22T14:55:18.350172Z", "url": "https://files.pythonhosted.org/packages/62/9c/a2ea71c80491a0c9635c8e949174a74dc3f68a4859a717added3fc643cc7/elasticsearch_partition-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "990f9d5573d287d5f57f441ca89275cf", "sha256": "1ce136ab71cd71205ce4a24fa400aaf0f2a2bb0723ffcbb35064985fef03689b"}, "downloads": -1, "filename": "elasticsearch_partition-2.0.0-cp37-cp37m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "990f9d5573d287d5f57f441ca89275cf", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 213037, "upload_time": "2019-03-22T14:55:15", "upload_time_iso_8601": "2019-03-22T14:55:15.798256Z", "url": "https://files.pythonhosted.org/packages/a5/a7/1b2cc1a58c2f86c1c1f71b2ce4aea4a3f0e4bef86cadf9eec743d805d528/elasticsearch_partition-2.0.0-cp37-cp37m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2560a9620b57a8180b4b4109776f7ad0", "sha256": "35cf55df7858559a1c5ce316ee4b0d9a41f088136a13f635b165575300c5391c"}, "downloads": -1, "filename": "elasticsearch_partition-2.0.0.tar.gz", "has_sig": false, "md5_digest": "2560a9620b57a8180b4b4109776f7ad0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 130902, "upload_time": "2019-03-22T14:55:18", "upload_time_iso_8601": "2019-03-22T14:55:18.350172Z", "url": "https://files.pythonhosted.org/packages/62/9c/a2ea71c80491a0c9635c8e949174a74dc3f68a4859a717added3fc643cc7/elasticsearch_partition-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:59 2020"}