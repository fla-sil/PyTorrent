{"info": {"author": "SamHDev", "author_email": "sam02h.huddart@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Cosmo Network Discovery API \nDocumentation for The OpenSource Cosmo Network Discovery API \n\nThis is the main implemtation written in python. For other implementations see [Implemtations](implemtations.md)\nand for a description on the API and Protocol see [API Docs](apidocs.md)\n\n### Installation\n\nYou can Install it with Pip and PyPi\n```\npython3 -m pip install cosmodiscovery\n```\nor with Pip and Github without PyPi\n```\npython3 -m pip install git+https://github.com/SamHDev/CosmoDiscovery.git\n```\n\n### Usage\nImport the libary\n```py\nimport cosmodiscovery as discovery\n```\n#### A Discovery Server\n```py\nserver = discovery.DiscoveryServer()\nserver.listen()\n```\nYep! Thats it! \n\nIf you want a custom `scheme` or `port` you can do it like this:\n\n```py\nserver = discovery.DiscoveryServer(port=12892, scheme=\"_discovery._cosmo.home_device\"))\n```\nSending Custom Data with the discovery reply. `cls` is a `DiscoveryRequestMessage` Object\n```py\n@server.discovery_callback\ndef on_msg(cls):\ncls.reply(data={})\n```\n\n#### A Discovery Client\n\nCreate a DiscoveryClient Object like this\n```py\nserver = discovery.DiscoveryServer()\n```\nOr with Paramaters like so\n```py\nclient = discovery.DiscoveryClient(port=12892, scheme=\"_discovery._cosmo.home_device\"))\n```\n\nOne Created you can run this\n```py\nresults = client.discovery()\n```\nThis function returns a list of `DiscoveryResult` objects. If the list is empty, then no devices were found.\n\nIf you wish to add arguments such as custom data to send within the Discovery Request or shorten the discovey reply wait time\nyou can do so like this:\n`\nresults = discovery(timeout=1, data={})\n`\nAgain! Its that simple\n\n#### Further Documentation\nFor Further Documentation see docs.md\n\n---\n\nWritten for [CosmoHome](https://cosmosmarthome.com) by [SamHDev](https://github.com/SamHDev/). Licensed under `GNU General Public License v3.0` as per [License File](LICENSE)\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SamHDev/CosmoDiscovery/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cosmodiscovery", "package_url": "https://pypi.org/project/cosmodiscovery/", "platform": "", "project_url": "https://pypi.org/project/cosmodiscovery/", "project_urls": {"Homepage": "https://github.com/SamHDev/CosmoDiscovery/"}, "release_url": "https://pypi.org/project/cosmodiscovery/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "A Free Network Discovery Service", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Cosmo Network Discovery API</h1>\n<p>Documentation for The OpenSource Cosmo Network Discovery API</p>\n<p>This is the main implemtation written in python. For other implementations see <a href=\"implemtations.md\" rel=\"nofollow\">Implemtations</a>\nand for a description on the API and Protocol see <a href=\"apidocs.md\" rel=\"nofollow\">API Docs</a></p>\n<h3>Installation</h3>\n<p>You can Install it with Pip and PyPi</p>\n<pre><code>python3 -m pip install cosmodiscovery\n</code></pre>\n<p>or with Pip and Github without PyPi</p>\n<pre><code>python3 -m pip install git+https://github.com/SamHDev/CosmoDiscovery.git\n</code></pre>\n<h3>Usage</h3>\n<p>Import the libary</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cosmodiscovery</span> <span class=\"k\">as</span> <span class=\"nn\">discovery</span>\n</pre>\n<h4>A Discovery Server</h4>\n<pre><span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">discovery</span><span class=\"o\">.</span><span class=\"n\">DiscoveryServer</span><span class=\"p\">()</span>\n<span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">listen</span><span class=\"p\">()</span>\n</pre>\n<p>Yep! Thats it!</p>\n<p>If you want a custom <code>scheme</code> or <code>port</code> you can do it like this:</p>\n<pre><span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">discovery</span><span class=\"o\">.</span><span class=\"n\">DiscoveryServer</span><span class=\"p\">(</span><span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">12892</span><span class=\"p\">,</span> <span class=\"n\">scheme</span><span class=\"o\">=</span><span class=\"s2\">\"_discovery._cosmo.home_device\"</span><span class=\"p\">))</span>\n</pre>\n<p>Sending Custom Data with the discovery reply. <code>cls</code> is a <code>DiscoveryRequestMessage</code> Object</p>\n<pre><span class=\"nd\">@server</span><span class=\"o\">.</span><span class=\"n\">discovery_callback</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_msg</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">):</span>\n<span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">reply</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{})</span>\n</pre>\n<h4>A Discovery Client</h4>\n<p>Create a DiscoveryClient Object like this</p>\n<pre><span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">discovery</span><span class=\"o\">.</span><span class=\"n\">DiscoveryServer</span><span class=\"p\">()</span>\n</pre>\n<p>Or with Paramaters like so</p>\n<pre><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">discovery</span><span class=\"o\">.</span><span class=\"n\">DiscoveryClient</span><span class=\"p\">(</span><span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">12892</span><span class=\"p\">,</span> <span class=\"n\">scheme</span><span class=\"o\">=</span><span class=\"s2\">\"_discovery._cosmo.home_device\"</span><span class=\"p\">))</span>\n</pre>\n<p>One Created you can run this</p>\n<pre><span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">discovery</span><span class=\"p\">()</span>\n</pre>\n<p>This function returns a list of <code>DiscoveryResult</code> objects. If the list is empty, then no devices were found.</p>\n<p>If you wish to add arguments such as custom data to send within the Discovery Request or shorten the discovey reply wait time\nyou can do so like this:\n<code>results = discovery(timeout=1, data={})</code>\nAgain! Its that simple</p>\n<h4>Further Documentation</h4>\n<p>For Further Documentation see docs.md</p>\n<hr>\n<p>Written for <a href=\"https://cosmosmarthome.com\" rel=\"nofollow\">CosmoHome</a> by <a href=\"https://github.com/SamHDev/\" rel=\"nofollow\">SamHDev</a>. Licensed under <code>GNU General Public License v3.0</code> as per <a href=\"LICENSE\" rel=\"nofollow\">License File</a></p>\n\n          </div>"}, "last_serial": 5727804, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f9bca0f59047d5f650d9319ec5a8493a", "sha256": "4523ca40ed4b522ba3d209066f3af585bdfe55c5209d5281ae8f92fafffd2103"}, "downloads": -1, "filename": "cosmodiscovery-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f9bca0f59047d5f650d9319ec5a8493a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17507, "upload_time": "2019-08-25T19:39:55", "upload_time_iso_8601": "2019-08-25T19:39:55.772420Z", "url": "https://files.pythonhosted.org/packages/22/0b/cc1fd5965bbaedff2fe1ea645c450c9e92da790de1cdb1a5876271a156f1/cosmodiscovery-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "25a0007693e2438917368184cd3461bf", "sha256": "719d7bd979b62a55464e99eb9c8d6790cd5a6cbae32f7f88320f324575ba7107"}, "downloads": -1, "filename": "cosmodiscovery-0.1.0.tar.gz", "has_sig": false, "md5_digest": "25a0007693e2438917368184cd3461bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3523, "upload_time": "2019-08-25T19:39:58", "upload_time_iso_8601": "2019-08-25T19:39:58.409325Z", "url": "https://files.pythonhosted.org/packages/a8/24/fd2dcb6babee9ee93472cbccd45d42aad0914f4e146fdef6261dcab61e29/cosmodiscovery-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f9bca0f59047d5f650d9319ec5a8493a", "sha256": "4523ca40ed4b522ba3d209066f3af585bdfe55c5209d5281ae8f92fafffd2103"}, "downloads": -1, "filename": "cosmodiscovery-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f9bca0f59047d5f650d9319ec5a8493a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17507, "upload_time": "2019-08-25T19:39:55", "upload_time_iso_8601": "2019-08-25T19:39:55.772420Z", "url": "https://files.pythonhosted.org/packages/22/0b/cc1fd5965bbaedff2fe1ea645c450c9e92da790de1cdb1a5876271a156f1/cosmodiscovery-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "25a0007693e2438917368184cd3461bf", "sha256": "719d7bd979b62a55464e99eb9c8d6790cd5a6cbae32f7f88320f324575ba7107"}, "downloads": -1, "filename": "cosmodiscovery-0.1.0.tar.gz", "has_sig": false, "md5_digest": "25a0007693e2438917368184cd3461bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3523, "upload_time": "2019-08-25T19:39:58", "upload_time_iso_8601": "2019-08-25T19:39:58.409325Z", "url": "https://files.pythonhosted.org/packages/a8/24/fd2dcb6babee9ee93472cbccd45d42aad0914f4e146fdef6261dcab61e29/cosmodiscovery-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:59 2020"}