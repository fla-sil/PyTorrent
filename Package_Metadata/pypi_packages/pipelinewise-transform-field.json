{"info": {"author": "TransferWise", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3 :: Only"], "description": "# pipelinewise-transform-field\n\n[![PyPI version](https://badge.fury.io/py/pipelinewise-transform-field.svg)](https://badge.fury.io/py/pipelinewise-transform-field)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pipelinewise-transform-field.svg)](https://pypi.org/project/pipelinewise-transform-field/)\n[![License: Apache2](https://img.shields.io/badge/License-Apache2-yellow.svg)](https://opensource.org/licenses/Apache-2.0)\n\nTransformation component between [Singer](https://www.singer.io/) taps and targets.\n\nThis is a [PipelineWise](https://transferwise.github.io/pipelinewise) compatible component.\n\n## How to use it\n\nThe recommended method of running this component is to use it from [PipelineWise](https://transferwise.github.io/pipelinewise). When running it from PipelineWise you don't need to configure this tap with JSON files and most of things are automated. Please check the related documentation at [Transformations](https://transferwise.github.io/pipelinewise/user_guide/transformations.html)\n\nIf you want to run this [Singer](https://singer.io) compatible component independently please read further.\n\n## Install\n\nFirst, make sure Python 3 is installed on your system or follow these\ninstallation instructions for [Mac](http://docs.python-guide.org/en/latest/starting/install3/osx/) or\n[Ubuntu](https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-local-programming-environment-on-ubuntu-16-04).\n\nIt's recommended to use a virtualenv:\n\n```bash\n  python3 -m venv venv\n  pip install pipelinewise-transform-field\n```\n\nor\n\n```bash\n  python3 -m venv venv\n  . venv/bin/activate\n  pip install --upgrade pip\n  pip install .\n```\n\n### To run\n\nPut it between a tap and a target with simple unix pipes:\n\n`some-singer-tap | transform-field --config [config.json] | some-singer-target`\n\nIt's reading incoming messages from STDIN and using `config.json` to transform incoming RECORD messages.\n\n**Note**: To avoid version conflicts run `tap`, `transform` and `targets` in separate virtual environments.\n\n### Configuration\n\nYou need to defines which columns have to be transformed by which method and in which condition the transformation needs to be applied.\n\n**Example config.json**:\n\n  ```json\n  {\n    \"transformations\": [\n        {\n            \"field_id\": \"password_hash\",\n            \"tap_stream_name\": \"stream-id-sent-by-the-tap\",\n            \"type\": \"SET-NULL\"\n        },\n        {\n            \"field_id\": \"salt\",\n            \"tap_stream_name\": \"stream-id-sent-by-the-tap\",\n            \"type\": \"SET-NULL\"\n        },\n        {\n            \"field_id\": \"value\",\n            \"tap_stream_name\": \"stream-id-sent-by-the-tap\",\n            \"type\": \"SET-NULL\",\n            \"when\": [\n                {\"column\": \"string_column_1\", \"equals\": \"Property\" },\n                {\"column\": \"numeric_column\", \"equals\": 200 },\n                {\"column\": \"string_column_2\", \"regex_match\": \"sensitive.*PII\" }\n              ]\n        }\n\n    ]\n  }\n  ```\n\n(Tip: PipelineWise generating this for you from a more readable YAML format)\n\n### Transformation types\n\n* **SET-NULL**: Transforms any input to NULL\n* **HASH**: Transfroms string input to hash\n* **HASH-SKIP-FIRST-n**: Transforms string input to hash skipping first n characters, e.g. HASH-SKIP-FIRST-2\n* **MASK-DATA**: Transforms any date to stg\n* **MASK-NUMBER**: Transforms any number to zero\n* **MASK-HIDDEN**: Transforms any value to 'hidden'\n\n### To run tests:\n\n1. Install python dependencies in a virtual env and run nose unit and integration tests\n```\n  python3 -m venv venv\n  . venv/bin/activate\n  pip install --upgrade pip\n  pip install .\n  pip install nose\n```\n\n1. To run tests:\n```\n  nosetests --where=tests\n```\n\n## License\n\nApache License Version 2.0\n\nSee [LICENSE](LICENSE) to see the full text.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/transferwise/pipelinewise-transform-field", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pipelinewise-transform-field", "package_url": "https://pypi.org/project/pipelinewise-transform-field/", "platform": "", "project_url": "https://pypi.org/project/pipelinewise-transform-field/", "project_urls": {"Homepage": "https://github.com/transferwise/pipelinewise-transform-field"}, "release_url": "https://pypi.org/project/pipelinewise-transform-field/2.0.0/", "requires_dist": ["pipelinewise-singer-python (==1.*)", "nose (==1.3) ; extra == 'test'"], "requires_python": "", "summary": "Singer.io simple field transformator between taps and targets - PipelineWise compatible", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pipelinewise-transform-field</h1>\n<p><a href=\"https://badge.fury.io/py/pipelinewise-transform-field\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2bc90af92ae64d377e2ff7c132c1d67773350cc0/68747470733a2f2f62616467652e667572792e696f2f70792f706970656c696e65776973652d7472616e73666f726d2d6669656c642e737667\"></a>\n<a href=\"https://pypi.org/project/pipelinewise-transform-field/\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2fbcce28a09b345f55c957356bf183554ccfc5e8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f706970656c696e65776973652d7472616e73666f726d2d6669656c642e737667\"></a>\n<a href=\"https://opensource.org/licenses/Apache-2.0\" rel=\"nofollow\"><img alt=\"License: Apache2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3de771321fd79ecbcb9be75b224c030b66bc28b5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865322d79656c6c6f772e737667\"></a></p>\n<p>Transformation component between <a href=\"https://www.singer.io/\" rel=\"nofollow\">Singer</a> taps and targets.</p>\n<p>This is a <a href=\"https://transferwise.github.io/pipelinewise\" rel=\"nofollow\">PipelineWise</a> compatible component.</p>\n<h2>How to use it</h2>\n<p>The recommended method of running this component is to use it from <a href=\"https://transferwise.github.io/pipelinewise\" rel=\"nofollow\">PipelineWise</a>. When running it from PipelineWise you don't need to configure this tap with JSON files and most of things are automated. Please check the related documentation at <a href=\"https://transferwise.github.io/pipelinewise/user_guide/transformations.html\" rel=\"nofollow\">Transformations</a></p>\n<p>If you want to run this <a href=\"https://singer.io\" rel=\"nofollow\">Singer</a> compatible component independently please read further.</p>\n<h2>Install</h2>\n<p>First, make sure Python 3 is installed on your system or follow these\ninstallation instructions for <a href=\"http://docs.python-guide.org/en/latest/starting/install3/osx/\" rel=\"nofollow\">Mac</a> or\n<a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-local-programming-environment-on-ubuntu-16-04\" rel=\"nofollow\">Ubuntu</a>.</p>\n<p>It's recommended to use a virtualenv:</p>\n<pre>  python3 -m venv venv\n  pip install pipelinewise-transform-field\n</pre>\n<p>or</p>\n<pre>  python3 -m venv venv\n  . venv/bin/activate\n  pip install --upgrade pip\n  pip install .\n</pre>\n<h3>To run</h3>\n<p>Put it between a tap and a target with simple unix pipes:</p>\n<p><code>some-singer-tap | transform-field --config [config.json] | some-singer-target</code></p>\n<p>It's reading incoming messages from STDIN and using <code>config.json</code> to transform incoming RECORD messages.</p>\n<p><strong>Note</strong>: To avoid version conflicts run <code>tap</code>, <code>transform</code> and <code>targets</code> in separate virtual environments.</p>\n<h3>Configuration</h3>\n<p>You need to defines which columns have to be transformed by which method and in which condition the transformation needs to be applied.</p>\n<p><strong>Example config.json</strong>:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"transformations\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"p\">{</span>\n          <span class=\"nt\">\"field_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"password_hash\"</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"tap_stream_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"stream-id-sent-by-the-tap\"</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"SET-NULL\"</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n          <span class=\"nt\">\"field_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"salt\"</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"tap_stream_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"stream-id-sent-by-the-tap\"</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"SET-NULL\"</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n          <span class=\"nt\">\"field_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value\"</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"tap_stream_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"stream-id-sent-by-the-tap\"</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"SET-NULL\"</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"when\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n              <span class=\"p\">{</span><span class=\"nt\">\"column\"</span><span class=\"p\">:</span> <span class=\"s2\">\"string_column_1\"</span><span class=\"p\">,</span> <span class=\"nt\">\"equals\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Property\"</span> <span class=\"p\">},</span>\n              <span class=\"p\">{</span><span class=\"nt\">\"column\"</span><span class=\"p\">:</span> <span class=\"s2\">\"numeric_column\"</span><span class=\"p\">,</span> <span class=\"nt\">\"equals\"</span><span class=\"p\">:</span> <span class=\"mi\">200</span> <span class=\"p\">},</span>\n              <span class=\"p\">{</span><span class=\"nt\">\"column\"</span><span class=\"p\">:</span> <span class=\"s2\">\"string_column_2\"</span><span class=\"p\">,</span> <span class=\"nt\">\"regex_match\"</span><span class=\"p\">:</span> <span class=\"s2\">\"sensitive.*PII\"</span> <span class=\"p\">}</span>\n            <span class=\"p\">]</span>\n      <span class=\"p\">}</span>\n\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>(Tip: PipelineWise generating this for you from a more readable YAML format)</p>\n<h3>Transformation types</h3>\n<ul>\n<li><strong>SET-NULL</strong>: Transforms any input to NULL</li>\n<li><strong>HASH</strong>: Transfroms string input to hash</li>\n<li><strong>HASH-SKIP-FIRST-n</strong>: Transforms string input to hash skipping first n characters, e.g. HASH-SKIP-FIRST-2</li>\n<li><strong>MASK-DATA</strong>: Transforms any date to stg</li>\n<li><strong>MASK-NUMBER</strong>: Transforms any number to zero</li>\n<li><strong>MASK-HIDDEN</strong>: Transforms any value to 'hidden'</li>\n</ul>\n<h3>To run tests:</h3>\n<ol>\n<li>Install python dependencies in a virtual env and run nose unit and integration tests</li>\n</ol>\n<pre><code>  python3 -m venv venv\n  . venv/bin/activate\n  pip install --upgrade pip\n  pip install .\n  pip install nose\n</code></pre>\n<ol>\n<li>To run tests:</li>\n</ol>\n<pre><code>  nosetests --where=tests\n</code></pre>\n<h2>License</h2>\n<p>Apache License Version 2.0</p>\n<p>See <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> to see the full text.</p>\n\n          </div>"}, "last_serial": 6828766, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "e34d0632190ad247b466eec7b94ff119", "sha256": "1ef29ae3ed1ae11f6a29602eedd2e14848f64c09dc119c7917bb3cd9c3942ef7"}, "downloads": -1, "filename": "pipelinewise-transform-field-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e34d0632190ad247b466eec7b94ff119", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6083, "upload_time": "2019-06-02T23:39:00", "upload_time_iso_8601": "2019-06-02T23:39:00.123812Z", "url": "https://files.pythonhosted.org/packages/1f/7a/db2cc2e65264636d2167412c02deeab13b2ba71356b2609dbbf003e5dadc/pipelinewise-transform-field-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "0e973e2fea7d2c00c6a505ad02b0ef06", "sha256": "b1e81e0a077482eb15ec8229fa2abe6b7c514aae63e23892f9a8ab8e906c61f3"}, "downloads": -1, "filename": "pipelinewise-transform-field-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0e973e2fea7d2c00c6a505ad02b0ef06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6176, "upload_time": "2019-08-16T15:59:19", "upload_time_iso_8601": "2019-08-16T15:59:19.105456Z", "url": "https://files.pythonhosted.org/packages/cf/96/1c5d60f28e0ac5a13581053cc673b038bfbd291b8d7f5fd8a6ed511d789c/pipelinewise-transform-field-1.0.1.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "f9cd38e369b7c41105fe0731e81f0b59", "sha256": "ae28e972a40aba1b9102703972c74ec7b4d1f8b27b57bceed2d84a07db884ced"}, "downloads": -1, "filename": "pipelinewise-transform-field-1.1.1.tar.gz", "has_sig": false, "md5_digest": "f9cd38e369b7c41105fe0731e81f0b59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6217, "upload_time": "2019-09-23T14:19:03", "upload_time_iso_8601": "2019-09-23T14:19:03.366269Z", "url": "https://files.pythonhosted.org/packages/51/07/9447db07f22dea748440a18a2c1f9f1455d0bcc1abba36aec7fb09a05b05/pipelinewise-transform-field-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "6a02df25f68e6e43820686a3d69848d4", "sha256": "561c88ef160a75b2abc380c8b6f9959005c1daafedbbc6460f404c718bd875d1"}, "downloads": -1, "filename": "pipelinewise_transform_field-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6a02df25f68e6e43820686a3d69848d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10215, "upload_time": "2020-01-31T16:28:18", "upload_time_iso_8601": "2020-01-31T16:28:18.989311Z", "url": "https://files.pythonhosted.org/packages/d1/11/c9e66e3fb40d9ad3f723a76d08251f84b75107f6ae463f4c84b12e6fa4aa/pipelinewise_transform_field-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf2ac859430aba1fe161a633b3e52852", "sha256": "9bee147470283d7be4d99632e24015c3d96d1ef57e20a1368e52065920091360"}, "downloads": -1, "filename": "pipelinewise-transform-field-1.1.2.tar.gz", "has_sig": false, "md5_digest": "cf2ac859430aba1fe161a633b3e52852", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6535, "upload_time": "2020-01-31T16:28:20", "upload_time_iso_8601": "2020-01-31T16:28:20.052581Z", "url": "https://files.pythonhosted.org/packages/63/55/845afd8a93bfd502540a3a7f563c01b80a4c907406b34be47d9f62c11420/pipelinewise-transform-field-1.1.2.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "a49dd170dee4f789f81f1c009c9943e9", "sha256": "4cfa966c1a10d8aa6251f78d924c64186be4465531b90cf61aa5d1b5b3cda0e7"}, "downloads": -1, "filename": "pipelinewise_transform_field-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a49dd170dee4f789f81f1c009c9943e9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11629, "upload_time": "2020-02-18T13:31:47", "upload_time_iso_8601": "2020-02-18T13:31:47.991575Z", "url": "https://files.pythonhosted.org/packages/29/e3/4ea25ec2bb27aca4b19650fd9948db6548f65af0ca3886e59100f14a48a9/pipelinewise_transform_field-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9bc3240924c58b47e561c88cd260015", "sha256": "78a6e17c0d448c5e60dbef2c3142a68e9853480eacb86c96c21cbb49478f5f4a"}, "downloads": -1, "filename": "pipelinewise-transform-field-1.2.0.tar.gz", "has_sig": false, "md5_digest": "a9bc3240924c58b47e561c88cd260015", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6934, "upload_time": "2020-02-18T13:31:49", "upload_time_iso_8601": "2020-02-18T13:31:49.066145Z", "url": "https://files.pythonhosted.org/packages/24/29/ca26785bd9a543a10fef44b22060165fe904b6b57a6274db82d7380e165a/pipelinewise-transform-field-1.2.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "4a85057bd3d50c093ecc110998bf94a3", "sha256": "3f9988e4742d00a80214e2f33b62e8cba1107374e69f0d76937e68787ffce3d5"}, "downloads": -1, "filename": "pipelinewise_transform_field-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4a85057bd3d50c093ecc110998bf94a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11532, "upload_time": "2020-03-17T14:02:49", "upload_time_iso_8601": "2020-03-17T14:02:49.380324Z", "url": "https://files.pythonhosted.org/packages/53/ac/cfb504144a3e49ec8442520382fdce3fd7922cbe8016aa33dd3c647d6879/pipelinewise_transform_field-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "547d4caf2ca13cf2350c11f25cb4a6e5", "sha256": "1bfefd4886c34cb81e7ec3be4699c69b9c5469042254ba768dbd89d8955ec097"}, "downloads": -1, "filename": "pipelinewise-transform-field-2.0.0.tar.gz", "has_sig": false, "md5_digest": "547d4caf2ca13cf2350c11f25cb4a6e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6856, "upload_time": "2020-03-17T14:02:50", "upload_time_iso_8601": "2020-03-17T14:02:50.820638Z", "url": "https://files.pythonhosted.org/packages/b6/33/c3e6a50fb744e3808796c992b9d925a0f0499f85ec04017a7f97d7a07cd5/pipelinewise-transform-field-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4a85057bd3d50c093ecc110998bf94a3", "sha256": "3f9988e4742d00a80214e2f33b62e8cba1107374e69f0d76937e68787ffce3d5"}, "downloads": -1, "filename": "pipelinewise_transform_field-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4a85057bd3d50c093ecc110998bf94a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11532, "upload_time": "2020-03-17T14:02:49", "upload_time_iso_8601": "2020-03-17T14:02:49.380324Z", "url": "https://files.pythonhosted.org/packages/53/ac/cfb504144a3e49ec8442520382fdce3fd7922cbe8016aa33dd3c647d6879/pipelinewise_transform_field-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "547d4caf2ca13cf2350c11f25cb4a6e5", "sha256": "1bfefd4886c34cb81e7ec3be4699c69b9c5469042254ba768dbd89d8955ec097"}, "downloads": -1, "filename": "pipelinewise-transform-field-2.0.0.tar.gz", "has_sig": false, "md5_digest": "547d4caf2ca13cf2350c11f25cb4a6e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6856, "upload_time": "2020-03-17T14:02:50", "upload_time_iso_8601": "2020-03-17T14:02:50.820638Z", "url": "https://files.pythonhosted.org/packages/b6/33/c3e6a50fb744e3808796c992b9d925a0f0499f85ec04017a7f97d7a07cd5/pipelinewise-transform-field-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:18 2020"}