{"info": {"author": "Avinash Kak", "author_email": "kak@purdue.edu", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Image Recognition"], "description": "\n\nConsult the module API page at\n\n      https://engineering.purdue.edu/kak/distRPG/RegionProposalGenerator-1.0.4.html\n\nfor all information related to this module, including information related\nto the latest changes to the code.  The page at the URL shown above lists\nall of the module functionality you can invoke in your own code.\n\n::\n\n        from RegionProposalGenerator import *\n\n        rpg = RegionProposalGenerator(\n                       ###  The first 6 options affect only the graph-based part of the algo\n                       sigma = 1.0,\n                       max_iterations = 40,\n                       kay = 0.05,\n                       image_normalization_required = True,\n                       image_size_reduction_factor = 4,\n                       min_size_for_graph_based_blobs = 4,\n                       ###  The next 4 options affect only the Selective Search part of the algo\n                       color_homogeneity_thresh = [20,20,20],\n                       gray_var_thresh = 16000,           \n                       texture_homogeneity_thresh = 120,\n                       max_num_blobs_expected = 8,\n              )\n        \n        image_name = \"images/mondrian.jpg\"\n        segmented_graph,color_map = rpg.graph_based_segmentation(image_name)\n        rpg.visualize_segmentation_in_pseudocolor(segmented_graph[0], color_map, \"graph_based\" )\n        merged_blobs, color_map = rpg.selective_search_for_region_proposals( segmented_graph, image_name )\n        rpg.visualize_segmentation_with_mean_gray(merged_blobs, \"ss_based_segmentation_in_bw\" )\n\n          ", "description_content_type": "", "docs_url": null, "download_url": "https://engineering.purdue.edu/kak/distRPG/RegionProposalGenerator-1.0.4.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://engineering.purdue.edu/kak/distRPG/RegionProposalGenerator-1.0.4.html", "keywords": "object detection", "license": "Python Software Foundation License", "maintainer": "", "maintainer_email": "", "name": "RegionProposalGenerator", "package_url": "https://pypi.org/project/RegionProposalGenerator/", "platform": "All platforms", "project_url": "https://pypi.org/project/RegionProposalGenerator/", "project_urls": {"Download": "https://engineering.purdue.edu/kak/distRPG/RegionProposalGenerator-1.0.4.tar.gz", "Homepage": "https://engineering.purdue.edu/kak/distRPG/RegionProposalGenerator-1.0.4.html"}, "release_url": "https://pypi.org/project/RegionProposalGenerator/1.0.4/", "requires_dist": null, "requires_python": "", "summary": "An educational module for generating region proposals for object detection", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Consult the module API page at</p>\n<blockquote>\n<a href=\"https://engineering.purdue.edu/kak/distRPG/RegionProposalGenerator-1.0.4.html\" rel=\"nofollow\">https://engineering.purdue.edu/kak/distRPG/RegionProposalGenerator-1.0.4.html</a></blockquote>\n<p>for all information related to this module, including information related\nto the latest changes to the code.  The page at the URL shown above lists\nall of the module functionality you can invoke in your own code.</p>\n<pre>from RegionProposalGenerator import *\n\nrpg = RegionProposalGenerator(\n               ###  The first 6 options affect only the graph-based part of the algo\n               sigma = 1.0,\n               max_iterations = 40,\n               kay = 0.05,\n               image_normalization_required = True,\n               image_size_reduction_factor = 4,\n               min_size_for_graph_based_blobs = 4,\n               ###  The next 4 options affect only the Selective Search part of the algo\n               color_homogeneity_thresh = [20,20,20],\n               gray_var_thresh = 16000,\n               texture_homogeneity_thresh = 120,\n               max_num_blobs_expected = 8,\n      )\n\nimage_name = \"images/mondrian.jpg\"\nsegmented_graph,color_map = rpg.graph_based_segmentation(image_name)\nrpg.visualize_segmentation_in_pseudocolor(segmented_graph[0], color_map, \"graph_based\" )\nmerged_blobs, color_map = rpg.selective_search_for_region_proposals( segmented_graph, image_name )\nrpg.visualize_segmentation_with_mean_gray(merged_blobs, \"ss_based_segmentation_in_bw\" )\n</pre>\n\n          </div>"}, "last_serial": 6385686, "releases": {"1.0.4": [{"comment_text": "", "digests": {"md5": "657b585ac88c2b50647c96191f926628", "sha256": "80008741f33fbd89e3455ed1deeb5dc343ca4c609486c6812d5076ec13a28887"}, "downloads": -1, "filename": "RegionProposalGenerator-1.0.4.tar.gz", "has_sig": false, "md5_digest": "657b585ac88c2b50647c96191f926628", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 150770, "upload_time": "2020-01-02T11:40:06", "upload_time_iso_8601": "2020-01-02T11:40:06.464801Z", "url": "https://files.pythonhosted.org/packages/c2/9e/92a08e37f0b46815f01ebccea753cec7ae4afd0186cbb9e6e72e45d1c914/RegionProposalGenerator-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "657b585ac88c2b50647c96191f926628", "sha256": "80008741f33fbd89e3455ed1deeb5dc343ca4c609486c6812d5076ec13a28887"}, "downloads": -1, "filename": "RegionProposalGenerator-1.0.4.tar.gz", "has_sig": false, "md5_digest": "657b585ac88c2b50647c96191f926628", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 150770, "upload_time": "2020-01-02T11:40:06", "upload_time_iso_8601": "2020-01-02T11:40:06.464801Z", "url": "https://files.pythonhosted.org/packages/c2/9e/92a08e37f0b46815f01ebccea753cec7ae4afd0186cbb9e6e72e45d1c914/RegionProposalGenerator-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:12 2020"}