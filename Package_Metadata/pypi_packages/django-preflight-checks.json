{"info": {"author": "Bas Peschier", "author_email": "bpeschier@fizzgig.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "=========\nPreflight\n=========\n\nPreflight is a set of deploy checks for Django 1.8 and higher which inspect \nyour settings and setup for common configuration errors on production \nenvironments. Often these are flags which are disabled during development \n(``DEBUG = True``) and can easily be overlooked before going live.\n\nBuilt-in checks cover inspections for non-production settings in caches, \ndatabases, email, logging, storages, templates and more. They are \nopinionated, either for \"common\" packages (raven, django-compressor, ...) or \n(in our eyes) optimal configurations, but Django's check framework lets you \nsilence the ones you do not need.\n\n\nInstallation\n============\n\nRun ``pip install git+https://github.com/bpeschier/django-preflight.git``.\n\nAdd ``preflight`` to your ``INSTALLED_APPS`` setting::\n\n    INSTALLED_APPS = (\n        ...\n        'preflight',\n    )\n\n\nRunning checks \n==============\n\nChecks are part of the Django deploy checks, you can run them with::\n\n    python manage.py check --deploy", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/bpeschier/django-preflight-checks", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-preflight-checks", "package_url": "https://pypi.org/project/django-preflight-checks/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-preflight-checks/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/bpeschier/django-preflight-checks"}, "release_url": "https://pypi.org/project/django-preflight-checks/0.1.dev1/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "0.1.dev1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Preflight is a set of deploy checks for Django 1.8 and higher which inspect\nyour settings and setup for common configuration errors on production\nenvironments. Often these are flags which are disabled during development\n(<tt>DEBUG = True</tt>) and can easily be overlooked before going live.</p>\n<p>Built-in checks cover inspections for non-production settings in caches,\ndatabases, email, logging, storages, templates and more. They are\nopinionated, either for \u201ccommon\u201d packages (raven, django-compressor, \u2026) or\n(in our eyes) optimal configurations, but Django\u2019s check framework lets you\nsilence the ones you do not need.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Run <tt>pip install <span class=\"pre\">git+https://github.com/bpeschier/django-preflight.git</span></tt>.</p>\n<p>Add <tt>preflight</tt> to your <tt>INSTALLED_APPS</tt> setting:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'preflight',\n)\n</pre>\n</div>\n<div id=\"running-checks\">\n<h2>Running checks</h2>\n<p>Checks are part of the Django deploy checks, you can run them with:</p>\n<pre>python manage.py check --deploy\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1232082, "releases": {"0.1.dev1": []}, "urls": [], "timestamp": "Fri May  8 00:54:46 2020"}