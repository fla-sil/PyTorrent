{"info": {"author": "Jonathan Slenders", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "Redis client for Python asyncio.\n================================\n\n|Build Status|\n\n..\n    # Don't show the Build status on drone.io. Update script first. It's still\n    # using an older Redis version.\n    # |Build Status2| \n\n\nRedis client for the `PEP 3156`_ Python event loop.\n\n.. _PEP 3156: http://legacy.python.org/dev/peps/pep-3156/\n\nThis Redis library is a completely asynchronous, non-blocking client for a\nRedis server. It depends on asyncio (PEP 3156) and therefor it requires Python\n3.3 or greater. If you're new to asyncio, it can be helpful to check out\n`the asyncio documentation`_ first.\n\n.. _the asyncio documentation: http://docs.python.org/dev/library/asyncio.html\n\nFeatures\n--------\n\n- Works for the asyncio (PEP3156) event loop\n- No dependencies except asyncio\n- Connection pooling\n- Automatic conversion from unicode (Python) to bytes (inside Redis.)\n- Bytes and str protocols.\n- Completely tested\n- Blocking calls and transactions supported\n- Streaming of some multi bulk replies\n- Pubsub support\n\n\n*Trollius support*: There is `a fork by Ben Jolitz`_ that has the necessary\nchanges for using this asyncio-redis library with Trollius.\n\n.. _a fork by Ben Jolitz: https://github.com/benjolitz/trollius-redis\n\n\nInstallation\n------------\n\n.. code::\n\n    pip install asyncio_redis\n\nDocumentation\n-------------\n\nView documentation at `read-the-docs`_\n\n.. _read-the-docs: http://asyncio-redis.readthedocs.org/en/latest/\n\n\nThe connection class\n--------------------\n\nA ``asyncio_redis.Connection`` instance will take care of the connection and\nwill automatically reconnect, using a new transport when the connection drops.\nThis connection class also acts as a proxy to a ``asyncio_redis.RedisProtocol``\ninstance; any Redis command of the protocol can be called directly at the\nconnection.\n\n\n.. code:: python\n\n    import asyncio\n    import asyncio_redis\n\n    @asyncio.coroutine\n    def example():\n        # Create Redis connection\n        connection = yield from asyncio_redis.Connection.create(host='127.0.0.1', port=6379)\n\n        # Set a key\n        yield from connection.set('my_key', 'my_value')\n\n        # When finished, close the connection.\n        connection.close()\n\n    if __name__ == '__main__':\n        loop = asyncio.get_event_loop()\n        loop.run_until_complete(example())\n\n\nConnection pooling\n------------------\n\nRequests will automatically be distributed among all connections in a pool. If\na connection is blocking because of --for instance-- a blocking rpop, another\nconnection will be used for new commands.\n\n\n.. code:: python\n\n    import asyncio\n    import asyncio_redis\n\n    @asyncio.coroutine\n    def example():\n        # Create Redis connection\n        connection = yield from asyncio_redis.Pool.create(host='127.0.0.1', port=6379, poolsize=10)\n\n        # Set a key\n        yield from connection.set('my_key', 'my_value')\n\n        # When finished, close the connection pool.\n        connection.close()\n\n\nTransactions example\n--------------------\n\n.. code:: python\n\n    import asyncio\n    import asyncio_redis\n\n    @asyncio.coroutine\n    def example():\n        # Create Redis connection\n        connection = yield from asyncio_redis.Pool.create(host='127.0.0.1', port=6379, poolsize=10)\n\n        # Create transaction\n        transaction = yield from connection.multi()\n\n        # Run commands in transaction (they return future objects)\n        f1 = yield from transaction.set('key', 'value')\n        f2 = yield from transaction.set('another_key', 'another_value')\n\n        # Commit transaction\n        yield from transaction.exec()\n\n        # Retrieve results\n        result1 = yield from f1\n        result2 = yield from f2\n\n        # When finished, close the connection pool.\n        connection.close()\n\nIt's recommended to use a large enough poolsize. A connection will be occupied\nas long as there's a transaction running in there.\n\n\nPubsub example\n--------------\n\n.. code:: python\n\n    import asyncio\n    import asyncio_redis\n\n    @asyncio.coroutine\n    def example():\n        # Create connection\n        connection = yield from asyncio_redis.Connection.create(host='127.0.0.1', port=6379)\n\n        # Create subscriber.\n        subscriber = yield from connection.start_subscribe()\n\n        # Subscribe to channel.\n        yield from subscriber.subscribe([ 'our-channel' ])\n\n        # Inside a while loop, wait for incoming events.\n        while True:\n            reply = yield from subscriber.next_published()\n            print('Received: ', repr(reply.value), 'on channel', reply.channel)\n\n        # When finished, close the connection.\n        connection.close()\n\n\nLUA Scripting example\n---------------------\n\n.. code:: python\n\n    import asyncio\n    import asyncio_redis\n\n    code = \\\n    \"\"\"\n    local value = redis.call('GET', KEYS[1])\n    value = tonumber(value)\n    return value * ARGV[1]\n    \"\"\"\n\n    @asyncio.coroutine\n    def example():\n        connection = yield from asyncio_redis.Connection.create(host='127.0.0.1', port=6379)\n\n        # Set a key\n        yield from connection.set('my_key', '2')\n\n        # Register script\n        multiply = yield from connection.register_script(code)\n\n        # Run script\n        script_reply = yield from multiply.run(keys=['my_key'], args=['5'])\n        result = yield from script_reply.return_value()\n        print(result) # prints 2 * 5\n\n        # When finished, close the connection.\n        connection.close()\n\n\nExample using the Protocol class\n--------------------------------\n\n.. code:: python\n\n    import asyncio\n    import asyncio_redis\n\n    @asyncio.coroutine\n    def example():\n        loop = asyncio.get_event_loop()\n\n        # Create Redis connection\n        transport, protocol = yield from loop.create_connection(\n                    asyncio_redis.RedisProtocol, '127.0.0.1', 6379)\n\n        # Set a key\n        yield from protocol.set('my_key', 'my_value')\n\n        # Get a key\n        result = yield from protocol.get('my_key')\n        print(result)\n\n        # Close transport when finished.\n        transport.close()\n\n    if __name__ == '__main__':\n        asyncio.get_event_loop().run_until_complete(example())\n\n\n\n.. |Build Status| image:: https://travis-ci.org/jonathanslenders/asyncio-redis.png\n    :target: https://travis-ci.org/jonathanslenders/asyncio-redis#\n\n.. |Build Status2| image:: https://drone.io/github.com/jonathanslenders/asyncio-redis/status.png\n    :target: https://drone.io/github.com/jonathanslenders/asyncio-redis/latest\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jonathanslenders/asyncio-redis", "keywords": "", "license": "LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "asyncio_redis", "package_url": "https://pypi.org/project/asyncio_redis/", "platform": "", "project_url": "https://pypi.org/project/asyncio_redis/", "project_urls": {"Homepage": "https://github.com/jonathanslenders/asyncio-redis"}, "release_url": "https://pypi.org/project/asyncio_redis/0.15.1/", "requires_dist": null, "requires_python": "", "summary": "PEP 3156 implementation of the redis protocol.", "version": "0.15.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/jonathanslenders/asyncio-redis#\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/409af3f6f868185e25136dd4f01ca9017c9a05d3/68747470733a2f2f7472617669732d63692e6f72672f6a6f6e617468616e736c656e646572732f6173796e63696f2d72656469732e706e67\"></a></p>\n<p>Redis client for the <a href=\"http://legacy.python.org/dev/peps/pep-3156/\" rel=\"nofollow\">PEP 3156</a> Python event loop.</p>\n<p>This Redis library is a completely asynchronous, non-blocking client for a\nRedis server. It depends on asyncio (PEP 3156) and therefor it requires Python\n3.3 or greater. If you\u2019re new to asyncio, it can be helpful to check out\n<a href=\"http://docs.python.org/dev/library/asyncio.html\" rel=\"nofollow\">the asyncio documentation</a> first.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Works for the asyncio (PEP3156) event loop</li>\n<li>No dependencies except asyncio</li>\n<li>Connection pooling</li>\n<li>Automatic conversion from unicode (Python) to bytes (inside Redis.)</li>\n<li>Bytes and str protocols.</li>\n<li>Completely tested</li>\n<li>Blocking calls and transactions supported</li>\n<li>Streaming of some multi bulk replies</li>\n<li>Pubsub support</li>\n</ul>\n<p><em>Trollius support</em>: There is <a href=\"https://github.com/benjolitz/trollius-redis\" rel=\"nofollow\">a fork by Ben Jolitz</a> that has the necessary\nchanges for using this asyncio-redis library with Trollius.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install asyncio_redis\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>View documentation at <a href=\"http://asyncio-redis.readthedocs.org/en/latest/\" rel=\"nofollow\">read-the-docs</a></p>\n</div>\n<div id=\"the-connection-class\">\n<h2>The connection class</h2>\n<p>A <tt>asyncio_redis.Connection</tt> instance will take care of the connection and\nwill automatically reconnect, using a new transport when the connection drops.\nThis connection class also acts as a proxy to a <tt>asyncio_redis.RedisProtocol</tt>\ninstance; any Redis command of the protocol can be called directly at the\nconnection.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio_redis</span>\n\n<span class=\"nd\">@asyncio</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Create Redis connection</span>\n    <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">asyncio_redis</span><span class=\"o\">.</span><span class=\"n\">Connection</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">6379</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Set a key</span>\n    <span class=\"k\">yield from</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'my_key'</span><span class=\"p\">,</span> <span class=\"s1\">'my_value'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># When finished, close the connection.</span>\n    <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">example</span><span class=\"p\">())</span>\n</pre>\n</div>\n<div id=\"connection-pooling\">\n<h2>Connection pooling</h2>\n<p>Requests will automatically be distributed among all connections in a pool. If\na connection is blocking because of \u2013for instance\u2013 a blocking rpop, another\nconnection will be used for new commands.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio_redis</span>\n\n<span class=\"nd\">@asyncio</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Create Redis connection</span>\n    <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">asyncio_redis</span><span class=\"o\">.</span><span class=\"n\">Pool</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">6379</span><span class=\"p\">,</span> <span class=\"n\">poolsize</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Set a key</span>\n    <span class=\"k\">yield from</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'my_key'</span><span class=\"p\">,</span> <span class=\"s1\">'my_value'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># When finished, close the connection pool.</span>\n    <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"transactions-example\">\n<h2>Transactions example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio_redis</span>\n\n<span class=\"nd\">@asyncio</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Create Redis connection</span>\n    <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">asyncio_redis</span><span class=\"o\">.</span><span class=\"n\">Pool</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">6379</span><span class=\"p\">,</span> <span class=\"n\">poolsize</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Create transaction</span>\n    <span class=\"n\">transaction</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">multi</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Run commands in transaction (they return future objects)</span>\n    <span class=\"n\">f1</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">transaction</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'key'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">)</span>\n    <span class=\"n\">f2</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">transaction</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'another_key'</span><span class=\"p\">,</span> <span class=\"s1\">'another_value'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Commit transaction</span>\n    <span class=\"k\">yield from</span> <span class=\"n\">transaction</span><span class=\"o\">.</span><span class=\"n\">exec</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Retrieve results</span>\n    <span class=\"n\">result1</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">f1</span>\n    <span class=\"n\">result2</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">f2</span>\n\n    <span class=\"c1\"># When finished, close the connection pool.</span>\n    <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<p>It\u2019s recommended to use a large enough poolsize. A connection will be occupied\nas long as there\u2019s a transaction running in there.</p>\n</div>\n<div id=\"pubsub-example\">\n<h2>Pubsub example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio_redis</span>\n\n<span class=\"nd\">@asyncio</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Create connection</span>\n    <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">asyncio_redis</span><span class=\"o\">.</span><span class=\"n\">Connection</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">6379</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Create subscriber.</span>\n    <span class=\"n\">subscriber</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">start_subscribe</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Subscribe to channel.</span>\n    <span class=\"k\">yield from</span> <span class=\"n\">subscriber</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">([</span> <span class=\"s1\">'our-channel'</span> <span class=\"p\">])</span>\n\n    <span class=\"c1\"># Inside a while loop, wait for incoming events.</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">reply</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">subscriber</span><span class=\"o\">.</span><span class=\"n\">next_published</span><span class=\"p\">()</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Received: '</span><span class=\"p\">,</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">reply</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">),</span> <span class=\"s1\">'on channel'</span><span class=\"p\">,</span> <span class=\"n\">reply</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># When finished, close the connection.</span>\n    <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"lua-scripting-example\">\n<h2>LUA Scripting example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio_redis</span>\n\n<span class=\"n\">code</span> <span class=\"o\">=</span> \\\n<span class=\"sd\">\"\"\"\nlocal value = redis.call('GET', KEYS[1])\nvalue = tonumber(value)\nreturn value * ARGV[1]\n\"\"\"</span>\n\n<span class=\"nd\">@asyncio</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">():</span>\n    <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">asyncio_redis</span><span class=\"o\">.</span><span class=\"n\">Connection</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">6379</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Set a key</span>\n    <span class=\"k\">yield from</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'my_key'</span><span class=\"p\">,</span> <span class=\"s1\">'2'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Register script</span>\n    <span class=\"n\">multiply</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">register_script</span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Run script</span>\n    <span class=\"n\">script_reply</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">multiply</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'my_key'</span><span class=\"p\">],</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'5'</span><span class=\"p\">])</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">script_reply</span><span class=\"o\">.</span><span class=\"n\">return_value</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span> <span class=\"c1\"># prints 2 * 5</span>\n\n    <span class=\"c1\"># When finished, close the connection.</span>\n    <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"example-using-the-protocol-class\">\n<h2>Example using the Protocol class</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio_redis</span>\n\n<span class=\"nd\">@asyncio</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">():</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Create Redis connection</span>\n    <span class=\"n\">transport</span><span class=\"p\">,</span> <span class=\"n\">protocol</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">create_connection</span><span class=\"p\">(</span>\n                <span class=\"n\">asyncio_redis</span><span class=\"o\">.</span><span class=\"n\">RedisProtocol</span><span class=\"p\">,</span> <span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"mi\">6379</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Set a key</span>\n    <span class=\"k\">yield from</span> <span class=\"n\">protocol</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'my_key'</span><span class=\"p\">,</span> <span class=\"s1\">'my_value'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Get a key</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"k\">yield from</span> <span class=\"n\">protocol</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'my_key'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Close transport when finished.</span>\n    <span class=\"n\">transport</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">example</span><span class=\"p\">())</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4115454, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "e7becd5b6043c3bb8eb76dd2738da1c9", "sha256": "c8d6bb6759d382520823448915ea3d68b6a812f058a00087024c2c3ebaa1506c"}, "downloads": -1, "filename": "asyncio_redis-0.1.tar.gz", "has_sig": false, "md5_digest": "e7becd5b6043c3bb8eb76dd2738da1c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10517, "upload_time": "2013-11-21T12:06:10", "upload_time_iso_8601": "2013-11-21T12:06:10.185588Z", "url": "https://files.pythonhosted.org/packages/6d/21/7557b8d70c55d533a8227f9dddfa87b4170d9cbdfa6fcfd8aa68893888c1/asyncio_redis-0.1.tar.gz", "yanked": false}], "0.10": [{"comment_text": "", "digests": {"md5": "917c63421cc4bfcb1c7f984a2398ad4c", "sha256": "3d343827d32259b10865cb1db7debefdb19b67d0983b36e746a8fa33c5c00dae"}, "downloads": -1, "filename": "asyncio_redis-0.10.tar.gz", "has_sig": false, "md5_digest": "917c63421cc4bfcb1c7f984a2398ad4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24697, "upload_time": "2014-03-13T11:22:32", "upload_time_iso_8601": "2014-03-13T11:22:32.072034Z", "url": "https://files.pythonhosted.org/packages/8a/8c/b400d71cfbef5b8f9a1eb2a5453ac59123702a82280593ce31634586c2b6/asyncio_redis-0.10.tar.gz", "yanked": false}], "0.10.1": [{"comment_text": "", "digests": {"md5": "5a6dabbfc60c37842a12bcb1570f9b63", "sha256": "36cb9e4126406efe5f66d99520c099d3b87c4f1886f8dabf2e4a3c91d2df78ca"}, "downloads": -1, "filename": "asyncio_redis-0.10.1.tar.gz", "has_sig": false, "md5_digest": "5a6dabbfc60c37842a12bcb1570f9b63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24773, "upload_time": "2014-03-19T10:21:55", "upload_time_iso_8601": "2014-03-19T10:21:55.806917Z", "url": "https://files.pythonhosted.org/packages/41/d8/ede1290000fc6b0b92e172643371d6c41fb21d2c47eefd71a97a2e45e818/asyncio_redis-0.10.1.tar.gz", "yanked": false}], "0.11.1": [{"comment_text": "", "digests": {"md5": "5bf88a9e56867e15e34b8870a541829b", "sha256": "e607a7429a2357f52050d41f7aa46e1f04a1f5556f4957cb9480a597c6356286"}, "downloads": -1, "filename": "asyncio_redis-0.11.1.tar.gz", "has_sig": false, "md5_digest": "5bf88a9e56867e15e34b8870a541829b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25151, "upload_time": "2014-03-30T12:56:46", "upload_time_iso_8601": "2014-03-30T12:56:46.138031Z", "url": "https://files.pythonhosted.org/packages/c1/87/ef15aee558cf271b55fc1f71ac95e2f3bec8b8ae882ecbaa83dc7bdfaecf/asyncio_redis-0.11.1.tar.gz", "yanked": false}], "0.11.2": [{"comment_text": "", "digests": {"md5": "d2c8e9dfac2653fd2ad6953520da5ec8", "sha256": "f64f1adc907dbb4c59cf76f77ca03649f61f22b12b361dc742909f38e65a9f42"}, "downloads": -1, "filename": "asyncio_redis-0.11.2.tar.gz", "has_sig": false, "md5_digest": "d2c8e9dfac2653fd2ad6953520da5ec8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25106, "upload_time": "2014-03-30T13:32:44", "upload_time_iso_8601": "2014-03-30T13:32:44.059205Z", "url": "https://files.pythonhosted.org/packages/c4/7a/c0972d6e2187f56774e000435e3b7a0ac8e9117b6074ac55a3db5981a4b7/asyncio_redis-0.11.2.tar.gz", "yanked": false}], "0.12.1": [{"comment_text": "", "digests": {"md5": "e3771e2558ba04e2f2256e97b8b0b49d", "sha256": "7fb3828f569e5e46ab40966036293cc5f80cb75d899b20e64aac8d5b4524a4ea"}, "downloads": -1, "filename": "asyncio_redis-0.12.1.tar.gz", "has_sig": false, "md5_digest": "e3771e2558ba04e2f2256e97b8b0b49d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25467, "upload_time": "2014-04-03T13:28:59", "upload_time_iso_8601": "2014-04-03T13:28:59.887227Z", "url": "https://files.pythonhosted.org/packages/6a/fe/669282bb0e534e2914a52b14eeb65e4397e40ce8cb14f18bcd2b55498e68/asyncio_redis-0.12.1.tar.gz", "yanked": false}], "0.12.2": [{"comment_text": "", "digests": {"md5": "36e7a4289e8a1a6e884fc9799a9a1e12", "sha256": "e6330d1da0ad96a7529ef263dfe33e4c5a963d139d8282904baed49071e7b8d6"}, "downloads": -1, "filename": "asyncio_redis-0.12.2.tar.gz", "has_sig": false, "md5_digest": "36e7a4289e8a1a6e884fc9799a9a1e12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25522, "upload_time": "2014-04-09T11:26:34", "upload_time_iso_8601": "2014-04-09T11:26:34.402374Z", "url": "https://files.pythonhosted.org/packages/0c/28/99c7ebb00c762608df750471150e53eede2f200622403b88291dea92fd0c/asyncio_redis-0.12.2.tar.gz", "yanked": false}], "0.12.3": [{"comment_text": "", "digests": {"md5": "d271bd6872ec569de72ca39391baa765", "sha256": "f0348f95ad4e81cf5dabd0f358a7a898cbfc56a6dfec13d077999a6eb5e862a0"}, "downloads": -1, "filename": "asyncio_redis-0.12.3.tar.gz", "has_sig": false, "md5_digest": "d271bd6872ec569de72ca39391baa765", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25615, "upload_time": "2014-04-18T07:58:50", "upload_time_iso_8601": "2014-04-18T07:58:50.157047Z", "url": "https://files.pythonhosted.org/packages/06/42/fdba2d08f0fc9eba23d595a805f8d7bdf22738bf94d440a002b06fd112c0/asyncio_redis-0.12.3.tar.gz", "yanked": false}], "0.12.4": [{"comment_text": "", "digests": {"md5": "c82731f7a92be7b516a05a18f179c3ed", "sha256": "491c57e69eb827e10d0cdc1b573d7468d7f85e2fb9d279f65c7cb43bf187b9b1"}, "downloads": -1, "filename": "asyncio_redis-0.12.4.tar.gz", "has_sig": false, "md5_digest": "c82731f7a92be7b516a05a18f179c3ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25780, "upload_time": "2014-05-28T10:29:18", "upload_time_iso_8601": "2014-05-28T10:29:18.320006Z", "url": "https://files.pythonhosted.org/packages/de/7e/979c4bed62559d72e4e0665a5981cb625a6f024de3bba732cf240620bcb9/asyncio_redis-0.12.4.tar.gz", "yanked": false}], "0.12.5": [{"comment_text": "", "digests": {"md5": "cb323d17a6c19844814fabad998246eb", "sha256": "fa8529a021ff6b462c4f59b14444149b7c1911e176865b1c0e2fbb93313c7b1b"}, "downloads": -1, "filename": "asyncio_redis-0.12.5.tar.gz", "has_sig": false, "md5_digest": "cb323d17a6c19844814fabad998246eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25857, "upload_time": "2014-06-03T09:55:52", "upload_time_iso_8601": "2014-06-03T09:55:52.891085Z", "url": "https://files.pythonhosted.org/packages/fd/74/016c97c19ddbbe9a1a3f3ce7ecaa0146014e2e271d3655c357731645eb55/asyncio_redis-0.12.5.tar.gz", "yanked": false}], "0.12.6": [{"comment_text": "", "digests": {"md5": "fc219eca4b779d044d91851769cbe906", "sha256": "7ef387ef0134724b1ac53837e746182b369ca05b5f4321cd6828564e91c708a1"}, "downloads": -1, "filename": "asyncio_redis-0.12.6.tar.gz", "has_sig": false, "md5_digest": "fc219eca4b779d044d91851769cbe906", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27288, "upload_time": "2014-06-17T11:34:35", "upload_time_iso_8601": "2014-06-17T11:34:35.498878Z", "url": "https://files.pythonhosted.org/packages/fc/a0/ef35fb6d259daf3bb854b850c6d4c1038d682d3d94d9089493693100149c/asyncio_redis-0.12.6.tar.gz", "yanked": false}], "0.13.1": [{"comment_text": "", "digests": {"md5": "f2f47d17f58626b9f7e81445abbae605", "sha256": "8fb2ea94560c0b08a1ed4a011ff854ff32d8b8795040f7fa763ec294dbdcfcf9"}, "downloads": -1, "filename": "asyncio_redis-0.13.1.tar.gz", "has_sig": false, "md5_digest": "f2f47d17f58626b9f7e81445abbae605", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26835, "upload_time": "2014-06-29T12:10:36", "upload_time_iso_8601": "2014-06-29T12:10:36.429447Z", "url": "https://files.pythonhosted.org/packages/ae/0e/ca95b490dc533a3f39b8f0dde174e3a943b9740a2c93a22a0b4b4ab55a21/asyncio_redis-0.13.1.tar.gz", "yanked": false}], "0.13.2": [{"comment_text": "", "digests": {"md5": "2edcd9c3c64ffb32aed6bff1761af332", "sha256": "a1a4e3aed21a9125956387ca6ed95c2c64ce6f2a6461f03107c0145dc6284611"}, "downloads": -1, "filename": "asyncio_redis-0.13.2.tar.gz", "has_sig": false, "md5_digest": "2edcd9c3c64ffb32aed6bff1761af332", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26949, "upload_time": "2014-07-06T17:41:48", "upload_time_iso_8601": "2014-07-06T17:41:48.654114Z", "url": "https://files.pythonhosted.org/packages/53/ef/c0b8b516b4b63356640a9379d357a798f2b04a6aeb85fdf08f36f26c6984/asyncio_redis-0.13.2.tar.gz", "yanked": false}], "0.13.3": [{"comment_text": "", "digests": {"md5": "aab96b6e87e64ab8d0f20ef93ce52864", "sha256": "4fffc8da1178e09c235cc08873c4cc3a6f0cc1a59e9228118b518bfde50a481a"}, "downloads": -1, "filename": "asyncio_redis-0.13.3.tar.gz", "has_sig": false, "md5_digest": "aab96b6e87e64ab8d0f20ef93ce52864", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27138, "upload_time": "2014-07-13T18:18:10", "upload_time_iso_8601": "2014-07-13T18:18:10.796268Z", "url": "https://files.pythonhosted.org/packages/8d/16/655d45b8dffafbdfa866da4f70e84765e8bc2a7e56d65ed9ac0bc26bbb63/asyncio_redis-0.13.3.tar.gz", "yanked": false}], "0.13.4": [{"comment_text": "", "digests": {"md5": "f1c90a8d77471ab9706058f666ea3594", "sha256": "4c7b70a8eb87f10b8f648ec532a1b6f977339d941b1bb7dda3862bc72d1278e8"}, "downloads": -1, "filename": "asyncio_redis-0.13.4.tar.gz", "has_sig": false, "md5_digest": "f1c90a8d77471ab9706058f666ea3594", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27133, "upload_time": "2014-08-18T08:37:30", "upload_time_iso_8601": "2014-08-18T08:37:30.335267Z", "url": "https://files.pythonhosted.org/packages/d0/a5/c195f0cd6c0ca7cb77732bed33bf1019f1c483f3b1c2a892da482cd0f702/asyncio_redis-0.13.4.tar.gz", "yanked": false}], "0.14.1": [{"comment_text": "", "digests": {"md5": "db7fc05f6a2166c6eb4d5f211dd41345", "sha256": "c10331e9b3f67dbc8825e324c27e36c6ac09821e9ab0a0b800219cff0ca61693"}, "downloads": -1, "filename": "asyncio_redis-0.14.1-py3-none-any.whl", "has_sig": false, "md5_digest": "db7fc05f6a2166c6eb4d5f211dd41345", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 33775, "upload_time": "2015-08-08T09:17:37", "upload_time_iso_8601": "2015-08-08T09:17:37.197459Z", "url": "https://files.pythonhosted.org/packages/e3/f8/e366f465c9674ed80d1ce2d0c6bae3f3628cdd59a48262a8bde829e36456/asyncio_redis-0.14.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "83b58be29cb0d1552dc69e3cf4004544", "sha256": "afd71b9e13c33d145ce2bb2ef0a0cf1012a011f31889cab5e2240ac4e213f145"}, "downloads": -1, "filename": "asyncio_redis-0.14.1.tar.gz", "has_sig": false, "md5_digest": "83b58be29cb0d1552dc69e3cf4004544", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29607, "upload_time": "2015-08-08T09:16:47", "upload_time_iso_8601": "2015-08-08T09:16:47.451352Z", "url": "https://files.pythonhosted.org/packages/e9/dc/e0d04578447b47f51e1e2b24d35bc7751adae052399619804fc58c70fca3/asyncio_redis-0.14.1.tar.gz", "yanked": false}], "0.14.2": [{"comment_text": "", "digests": {"md5": "1e2cdd8737fdfa4b2ba26b90b7b8493f", "sha256": "feda9b544e932cd9d57400b4368d971e46453fcc8499585aa6f7632b1af00951"}, "downloads": -1, "filename": "asyncio_redis-0.14.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1e2cdd8737fdfa4b2ba26b90b7b8493f", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 33540, "upload_time": "2015-12-16T21:15:36", "upload_time_iso_8601": "2015-12-16T21:15:36.708768Z", "url": "https://files.pythonhosted.org/packages/78/fa/e2f8a60d9e02e60438d23229326241e099c45094225ded4e372655656624/asyncio_redis-0.14.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "64b406770643f789699b2fb6619b010b", "sha256": "c9356097c9f90d2bad7b982ed1bbd09ec868e89afbb47864d14a0546841ae165"}, "downloads": -1, "filename": "asyncio_redis-0.14.2.tar.gz", "has_sig": false, "md5_digest": "64b406770643f789699b2fb6619b010b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27752, "upload_time": "2015-12-16T21:15:18", "upload_time_iso_8601": "2015-12-16T21:15:18.792655Z", "url": "https://files.pythonhosted.org/packages/88/68/dc064bfca2def8bd611d0cf386e28dc32d977f687c7b570b5d3cc533774b/asyncio_redis-0.14.2.tar.gz", "yanked": false}], "0.14.3": [{"comment_text": "", "digests": {"md5": "189d2a313d0a9598d67ab4c24a080937", "sha256": "e455952b399c3380d7d6e444b66c46183fc40df9536fafcb9ad7753d9e1520d7"}, "downloads": -1, "filename": "asyncio_redis-0.14.3-py3-none-any.whl", "has_sig": false, "md5_digest": "189d2a313d0a9598d67ab4c24a080937", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 34496, "upload_time": "2016-09-04T12:02:44", "upload_time_iso_8601": "2016-09-04T12:02:44.587333Z", "url": "https://files.pythonhosted.org/packages/ae/58/09808589e6411ac84f3f4a27d56b2fbfe430a57127542898f22141c26bf6/asyncio_redis-0.14.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33238318954986d7d876dbdaa2676925", "sha256": "fae40dc59c7268dfb9a44542cb3f48a885c8f5f7438b13f0dfec1fbd10a82369"}, "downloads": -1, "filename": "asyncio_redis-0.14.3.tar.gz", "has_sig": false, "md5_digest": "33238318954986d7d876dbdaa2676925", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30336, "upload_time": "2016-09-04T12:02:41", "upload_time_iso_8601": "2016-09-04T12:02:41.857639Z", "url": "https://files.pythonhosted.org/packages/ae/50/51a84640ec65b4bcda65d2a21a1310c431b475338a8108c01e2c43f0ae6f/asyncio_redis-0.14.3.tar.gz", "yanked": false}], "0.15.1": [{"comment_text": "", "digests": {"md5": "5dfdc90b8863cbec1863f8a23f5a2f33", "sha256": "f49e2c6626f3fcfddb478ee1d01f0335e22b6656add274e8a88fcdec9bd78745"}, "downloads": -1, "filename": "asyncio_redis-0.15.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5dfdc90b8863cbec1863f8a23f5a2f33", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 31813, "upload_time": "2018-07-30T08:12:21", "upload_time_iso_8601": "2018-07-30T08:12:21.847311Z", "url": "https://files.pythonhosted.org/packages/05/a1/3a175b786548615f11b405d241218ef4e8fbcc7dcb58da1b53e67b508509/asyncio_redis-0.15.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f68b6279bffcf505e323deded79b38b0", "sha256": "067dbc251ab84d6e53ef8b33dbfd8afd62987ab08f72ca922f6870c96be53b54"}, "downloads": -1, "filename": "asyncio_redis-0.15.1.tar.gz", "has_sig": false, "md5_digest": "f68b6279bffcf505e323deded79b38b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30222, "upload_time": "2018-07-30T08:12:19", "upload_time_iso_8601": "2018-07-30T08:12:19.613377Z", "url": "https://files.pythonhosted.org/packages/b0/e6/79c6fe13acc0f21c8b2647ac41a5375bdaa4666c13b9ec5121f7f986964c/asyncio_redis-0.15.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "286e5036b0cd7659666790cf9ac04945", "sha256": "f146eb995a3369168997a814ef5052ec5adfe68716dbde3bdd282db0a9f62a4f"}, "downloads": -1, "filename": "asyncio_redis-0.2.tar.gz", "has_sig": false, "md5_digest": "286e5036b0cd7659666790cf9ac04945", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13251, "upload_time": "2013-11-27T23:11:07", "upload_time_iso_8601": "2013-11-27T23:11:07.264215Z", "url": "https://files.pythonhosted.org/packages/2a/e1/69ba52cf3849bb5ce1e343e2ed7d890ec37e2f0e5be61e22c20d50bcea43/asyncio_redis-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "c2e00e20cc16336bf0a051aff7fe2d2e", "sha256": "b412a54311ae62f01a87235d59205db7f7ed102538859e60b373088c4390c790"}, "downloads": -1, "filename": "asyncio_redis-0.3.tar.gz", "has_sig": false, "md5_digest": "c2e00e20cc16336bf0a051aff7fe2d2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14356, "upload_time": "2013-12-02T22:29:50", "upload_time_iso_8601": "2013-12-02T22:29:50.705274Z", "url": "https://files.pythonhosted.org/packages/31/1a/057cf2b0594026145f69237bdbab187b435eea9187ac2e71ec4051f25403/asyncio_redis-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "b14ac251f73be4d312f4f41f7b27c497", "sha256": "d84d641f1db6cf07eaf45b58c50466804071b09596b7dfd0707c24b1e6d42489"}, "downloads": -1, "filename": "asyncio_redis-0.4.tar.gz", "has_sig": false, "md5_digest": "b14ac251f73be4d312f4f41f7b27c497", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18299, "upload_time": "2013-12-26T12:24:20", "upload_time_iso_8601": "2013-12-26T12:24:20.792588Z", "url": "https://files.pythonhosted.org/packages/dd/1d/08f06c5683f715ef88411a32c4bd793541eb390918e2e483e3561c7e6cfc/asyncio_redis-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "9a8ad1228193184c506f4f9b82e43756", "sha256": "6bc71a3a787b21d23938694c11164727775997d12256e52d848e1d88f3292cb1"}, "downloads": -1, "filename": "asyncio_redis-0.5.tar.gz", "has_sig": false, "md5_digest": "9a8ad1228193184c506f4f9b82e43756", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18893, "upload_time": "2014-01-23T21:34:06", "upload_time_iso_8601": "2014-01-23T21:34:06.595988Z", "url": "https://files.pythonhosted.org/packages/42/0b/1da9984fccbd6622070654b0668ca51b2dd0c3d74374acfe2cea26569648/asyncio_redis-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "7b7896b397edff87c248ea9e461c1848", "sha256": "5573cc1f6430352ef580e5783f2050772731153990ba2e20a65c537945d23526"}, "downloads": -1, "filename": "asyncio_redis-0.6.tar.gz", "has_sig": false, "md5_digest": "7b7896b397edff87c248ea9e461c1848", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21373, "upload_time": "2014-02-07T17:39:57", "upload_time_iso_8601": "2014-02-07T17:39:57.725518Z", "url": "https://files.pythonhosted.org/packages/44/5f/45ecdefb54eaa74f8d15c983d1c680d134704cc97278a8f6d1bea219ec6e/asyncio_redis-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "77087af38b02132e53f36cce65ad1bb6", "sha256": "ee60877762c232b881ec5a123f30a128b0eba33a935e19fce478ed40ca656d87"}, "downloads": -1, "filename": "asyncio_redis-0.7.tar.gz", "has_sig": false, "md5_digest": "77087af38b02132e53f36cce65ad1bb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21673, "upload_time": "2014-02-16T18:43:20", "upload_time_iso_8601": "2014-02-16T18:43:20.629418Z", "url": "https://files.pythonhosted.org/packages/10/be/3bbff7fe514bef96b67c0ac3e8217e83b17814cffed2c31bcfc287f487fa/asyncio_redis-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "0a031474ba40ee08f706fc77cb1833b0", "sha256": "74e04f96b3667ede0346001d8df8730db3e9a91f212b84876665852251b982d9"}, "downloads": -1, "filename": "asyncio_redis-0.8.tar.gz", "has_sig": false, "md5_digest": "0a031474ba40ee08f706fc77cb1833b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24155, "upload_time": "2014-02-23T17:42:09", "upload_time_iso_8601": "2014-02-23T17:42:09.994047Z", "url": "https://files.pythonhosted.org/packages/96/ce/264254d629584155d5a7766229f19976b02d3bcafae37a1df99573bed911/asyncio_redis-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "c63f14aeefcc618b2d2a63a22d3a812d", "sha256": "a5f2b828ee1f58a2a2c6e7fd5cc23a8666b7d1d18606860a84bd3d19e1773210"}, "downloads": -1, "filename": "asyncio_redis-0.9.tar.gz", "has_sig": false, "md5_digest": "c63f14aeefcc618b2d2a63a22d3a812d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24410, "upload_time": "2014-02-27T12:15:53", "upload_time_iso_8601": "2014-02-27T12:15:53.041570Z", "url": "https://files.pythonhosted.org/packages/f3/44/83eeeb7346e892c236222d7da8bc7e80b46bb24faa83e3a9c7042ea3303c/asyncio_redis-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5dfdc90b8863cbec1863f8a23f5a2f33", "sha256": "f49e2c6626f3fcfddb478ee1d01f0335e22b6656add274e8a88fcdec9bd78745"}, "downloads": -1, "filename": "asyncio_redis-0.15.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5dfdc90b8863cbec1863f8a23f5a2f33", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 31813, "upload_time": "2018-07-30T08:12:21", "upload_time_iso_8601": "2018-07-30T08:12:21.847311Z", "url": "https://files.pythonhosted.org/packages/05/a1/3a175b786548615f11b405d241218ef4e8fbcc7dcb58da1b53e67b508509/asyncio_redis-0.15.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f68b6279bffcf505e323deded79b38b0", "sha256": "067dbc251ab84d6e53ef8b33dbfd8afd62987ab08f72ca922f6870c96be53b54"}, "downloads": -1, "filename": "asyncio_redis-0.15.1.tar.gz", "has_sig": false, "md5_digest": "f68b6279bffcf505e323deded79b38b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30222, "upload_time": "2018-07-30T08:12:19", "upload_time_iso_8601": "2018-07-30T08:12:19.613377Z", "url": "https://files.pythonhosted.org/packages/b0/e6/79c6fe13acc0f21c8b2647ac41a5375bdaa4666c13b9ec5121f7f986964c/asyncio_redis-0.15.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:44 2020"}