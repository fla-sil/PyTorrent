{"info": {"author": "Frederik Aalund", "author_email": "fpa@sbtinstruments.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "![license](https://img.shields.io/github/license/sbtinstruments/asyncio-mqtt)\n![semver](https://img.shields.io/github/v/tag/sbtinstruments/asyncio-mqtt?sort=semver)\n\n# MQTT client with idiomatic asyncio interface \ud83d\ude4c\n\nWrite code like this:\n\n```python\nasync with Client('test.mosquitto.org') as client:\n    await client.subscribe('floors/#')\n\n    async with client.filtered_messages('floors/+/humidity') as messages:\n        async for message in messages:\n            print(message.payload.decode())\n```\n\nasyncio-mqtt combines the stability of the time-proven [paho-mqtt](https://github.com/eclipse/paho.mqtt.python) library with a modern, asyncio-based interface.\n\n* No more callbacks! \ud83d\udc4d\n* No more return codes (welcome to the `MqttError`)\n* Graceful disconnection (forget about `on_unsubscribe`, `on_disconnect`, etc.)\n* Compatible with `async` code\n* Did we mention no more callbacks?\n\nThe whole thing is less than [250 lines of code](https://github.com/sbtinstruments/asyncio-mqtt/blob/master/asyncio_mqtt/client.py).\n\n## Installation \ud83d\udcda\n\n`pip install asyncio-mqtt`\n\n## Advanced use \u26a1\n\nLet's make the example from before more interesting:\n\n```python\nimport asyncio\nfrom random import randrange\nfrom asyncio_mqtt import Client\n\nasync def log_filtered_messages(client, topic_filter):\n    async with client.filtered_messages(topic_filter) as messages:\n        async for message in messages:\n            print(f'[topic_filter=\"{topic_filter}\"]: {message.payload.decode()}')\n\nasync def log_unfiltered_messages(client):\n    async with client.unfiltered_messages() as messages:\n        async for message in messages:\n            print(f'[unfiltered]: {message.payload.decode()}')\n\nasync def main():\n    async with Client('test.mosquitto.org') as client:\n        await client.subscribe('floors/#')\n\n        # You can create any number of message filters\n        asyncio.create_task(log_filtered_messages(client, 'floors/+/humidity'))\n        asyncio.create_task(log_filtered_messages(client, 'floors/rooftop/#'))\n        # \ud83d\udc49 Try to add more filters!\n\n        # All messages that doesn't match a filter will get logged here\n        asyncio.create_task(log_unfiltered_messages(client))\n\n        # Publish a random value to each of these topics\n        topics = [\n            'floors/basement/humidity',\n            'floors/rooftop/humidity',\n            'floors/rooftop/illuminance',\n            # \ud83d\udc49 Try to add more topics!\n        ]\n        while True:\n            for topic in topics:\n                message = randrange(100)\n                print(f'[topic=\"{topic}\"] Publishing message={message}')\n                await client.publish(topic, message, qos=1)\n                await asyncio.sleep(2)\n\nasyncio.run(main())\n```\n\n## Alternative asyncio-based MQTT clients\n\nIs asyncio-mqtt not what you are looking for? Try another client:\n\n * [hbmqtt](https://github.com/beerfactory/hbmqtt) - Own protocol implementation. Includes a broker.  \n   ![GitHub stars](https://img.shields.io/github/stars/beerfactory/hbmqtt)\n   ![license](https://img.shields.io/github/license/beerfactory/hbmqtt)\n * [gmqtt](https://github.com/wialon/gmqtt) - Own protocol implementation. No dependencies.  \n   ![GitHub stars](https://img.shields.io/github/stars/wialon/gmqtt)\n   ![license](https://img.shields.io/github/license/wialon/gmqtt)\n * [aiomqtt](https://github.com/mossblaser/aiomqtt) - Wrapper around paho-mqtt.  \n   ![GitHub stars](https://img.shields.io/github/stars/mossblaser/aiomqtt)\n   ![license](https://img.shields.io/github/license/mossblaser/aiomqtt)\n * [mqttools](https://github.com/eerimoq/mqttools) - Own protocol implementation. No dependencies.  \n   ![GitHub stars](https://img.shields.io/github/stars/eerimoq/mqttools)\n   ![license](https://img.shields.io/github/license/eerimoq/mqttools)\n * [aio-mqtt](https://github.com/NotJustAToy/aio-mqtt) - Own protocol implementation. No dependencies.  \n   ![GitHub stars](https://img.shields.io/github/stars/NotJustAToy/aio-mqtt)\n   ![license](https://img.shields.io/github/license/NotJustAToy/aio-mqtt)\n\nThis is not an exhaustive list.\n\n### Honorable mentions\n\n * [trio-paho-mqtt](https://github.com/bkanuka/trio-paho-mqtt) - Trio-based. Wrapper around paho-mqtt.  \n   ![GitHub stars](https://img.shields.io/github/stars/bkanuka/trio-paho-mqtt)\n   ![license](https://img.shields.io/github/license/bkanuka/trio-paho-mqtt)\n\n## Requirements\n\nPython 3.7 or later.\n\nThere is only a single dependency:\n\n * [paho-mqtt](https://github.com/eclipse/paho.mqtt.python)  \n   ![GitHub stars](https://img.shields.io/github/stars/eclipse/paho.mqtt.python) ![license](https://img.shields.io/github/license/eclipse/paho.mqtt.python)\n\n## Changelog\n\nPlease refer to the [CHANGELOG](https://github.com/sbtinstruments/asyncio-mqtt/blob/master/CHANGELOG.md) document. It adheres to the principles of [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n\n## Versioning\n\n![semver](https://img.shields.io/github/v/tag/sbtinstruments/asyncio-mqtt?sort=semver)\n\nThis project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\nExpect API changes until we reach version `1.0.0`. After `1.0.0`, breaking changes will only occur in major release (e.g., `2.0.0`, `3.0.0`, etc.).\n\n## License\n\n![license](https://img.shields.io/github/license/sbtinstruments/asyncio-mqtt)\n\nNote that the underlying paho-mqtt library is dual-licensed. One of the licenses is the so-called [Eclipse Distribution License v1.0](https://www.eclipse.org/org/documents/edl-v10.php). It is almost word-for-word identical to the [BSD 3-clause License](https://opensource.org/licenses/BSD-3-Clause). The only differences are:\n * One use of \"COPYRIGHT OWNER\" (EDL) instead of \"COPYRIGHT HOLDER\" (BSD)\n * One use of \"Eclipse Foundation, Inc.\" (EDL) instead of \"copyright holder\" (BSD)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sbtinstruments/asyncio-mqtt", "keywords": "mqtt async asyncio paho-mqtt wrapper", "license": "BSD 3-clause License", "maintainer": "", "maintainer_email": "", "name": "asyncio-mqtt", "package_url": "https://pypi.org/project/asyncio-mqtt/", "platform": "", "project_url": "https://pypi.org/project/asyncio-mqtt/", "project_urls": {"Homepage": "https://github.com/sbtinstruments/asyncio-mqtt"}, "release_url": "https://pypi.org/project/asyncio-mqtt/0.4.0/", "requires_dist": ["paho-mqtt (>=1.5.0)"], "requires_python": "", "summary": "Idomatic asyncio wrapper around paho-mqtt.", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9d34aeb3c59d3554dfff448a3ea4cf5eec9a33b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f736274696e737472756d656e74732f6173796e63696f2d6d717474\">\n<img alt=\"semver\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/80fdc98420e795b2bb9ed54eabcd40e23a915f89/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f7461672f736274696e737472756d656e74732f6173796e63696f2d6d7174743f736f72743d73656d766572\"></p>\n<h1>MQTT client with idiomatic asyncio interface \ud83d\ude4c</h1>\n<p>Write code like this:</p>\n<pre><span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'test.mosquitto.org'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"s1\">'floors/#'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">filtered_messages</span><span class=\"p\">(</span><span class=\"s1\">'floors/+/humidity'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">messages</span><span class=\"p\">:</span>\n        <span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">message</span> <span class=\"ow\">in</span> <span class=\"n\">messages</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">payload</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">())</span>\n</pre>\n<p>asyncio-mqtt combines the stability of the time-proven <a href=\"https://github.com/eclipse/paho.mqtt.python\" rel=\"nofollow\">paho-mqtt</a> library with a modern, asyncio-based interface.</p>\n<ul>\n<li>No more callbacks! \ud83d\udc4d</li>\n<li>No more return codes (welcome to the <code>MqttError</code>)</li>\n<li>Graceful disconnection (forget about <code>on_unsubscribe</code>, <code>on_disconnect</code>, etc.)</li>\n<li>Compatible with <code>async</code> code</li>\n<li>Did we mention no more callbacks?</li>\n</ul>\n<p>The whole thing is less than <a href=\"https://github.com/sbtinstruments/asyncio-mqtt/blob/master/asyncio_mqtt/client.py\" rel=\"nofollow\">250 lines of code</a>.</p>\n<h2>Installation \ud83d\udcda</h2>\n<p><code>pip install asyncio-mqtt</code></p>\n<h2>Advanced use \u26a1</h2>\n<p>Let's make the example from before more interesting:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">random</span> <span class=\"kn\">import</span> <span class=\"n\">randrange</span>\n<span class=\"kn\">from</span> <span class=\"nn\">asyncio_mqtt</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">log_filtered_messages</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">topic_filter</span><span class=\"p\">):</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">filtered_messages</span><span class=\"p\">(</span><span class=\"n\">topic_filter</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">messages</span><span class=\"p\">:</span>\n        <span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">message</span> <span class=\"ow\">in</span> <span class=\"n\">messages</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'[topic_filter=\"</span><span class=\"si\">{</span><span class=\"n\">topic_filter</span><span class=\"si\">}</span><span class=\"s1\">\"]: </span><span class=\"si\">{</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">payload</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">log_unfiltered_messages</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">):</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">unfiltered_messages</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">messages</span><span class=\"p\">:</span>\n        <span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">message</span> <span class=\"ow\">in</span> <span class=\"n\">messages</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'[unfiltered]: </span><span class=\"si\">{</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">payload</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'test.mosquitto.org'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n        <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"s1\">'floors/#'</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># You can create any number of message filters</span>\n        <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">log_filtered_messages</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"s1\">'floors/+/humidity'</span><span class=\"p\">))</span>\n        <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">log_filtered_messages</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"s1\">'floors/rooftop/#'</span><span class=\"p\">))</span>\n        <span class=\"c1\"># \ud83d\udc49 Try to add more filters!</span>\n\n        <span class=\"c1\"># All messages that doesn't match a filter will get logged here</span>\n        <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">log_unfiltered_messages</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># Publish a random value to each of these topics</span>\n        <span class=\"n\">topics</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s1\">'floors/basement/humidity'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'floors/rooftop/humidity'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'floors/rooftop/illuminance'</span><span class=\"p\">,</span>\n            <span class=\"c1\"># \ud83d\udc49 Try to add more topics!</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">topic</span> <span class=\"ow\">in</span> <span class=\"n\">topics</span><span class=\"p\">:</span>\n                <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">randrange</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'[topic=\"</span><span class=\"si\">{</span><span class=\"n\">topic</span><span class=\"si\">}</span><span class=\"s1\">\"] Publishing message=</span><span class=\"si\">{</span><span class=\"n\">message</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n                <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">(</span><span class=\"n\">topic</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">qos</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n                <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<h2>Alternative asyncio-based MQTT clients</h2>\n<p>Is asyncio-mqtt not what you are looking for? Try another client:</p>\n<ul>\n<li><a href=\"https://github.com/beerfactory/hbmqtt\" rel=\"nofollow\">hbmqtt</a> - Own protocol implementation. Includes a broker.<br>\n<img alt=\"GitHub stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dabfb90f4e220f4a031e1de89d712ba5bd39506d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f62656572666163746f72792f68626d717474\">\n<img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1fc3bb05299186819d69c8a23d36a3347161e62c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f62656572666163746f72792f68626d717474\"></li>\n<li><a href=\"https://github.com/wialon/gmqtt\" rel=\"nofollow\">gmqtt</a> - Own protocol implementation. No dependencies.<br>\n<img alt=\"GitHub stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9ef8f8091cf68ad00c867b3f65059e25c265989/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f7769616c6f6e2f676d717474\">\n<img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dbccdafd0be76d5c74094260e94724edafc31185/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f7769616c6f6e2f676d717474\"></li>\n<li><a href=\"https://github.com/mossblaser/aiomqtt\" rel=\"nofollow\">aiomqtt</a> - Wrapper around paho-mqtt.<br>\n<img alt=\"GitHub stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c17eef28a9a1e116e8ea286ba5da92c02b5fbf51/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6d6f7373626c617365722f61696f6d717474\">\n<img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2fb2ae192abf2dabd6d18fe59fc6a321be7253c7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6f7373626c617365722f61696f6d717474\"></li>\n<li><a href=\"https://github.com/eerimoq/mqttools\" rel=\"nofollow\">mqttools</a> - Own protocol implementation. No dependencies.<br>\n<img alt=\"GitHub stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2efb3254bb3087d551a72e22ead0b2f1a6d2dfe7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f656572696d6f712f6d7174746f6f6c73\">\n<img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8e26aada6b56d30341e035104147501adcb15aaa/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f656572696d6f712f6d7174746f6f6c73\"></li>\n<li><a href=\"https://github.com/NotJustAToy/aio-mqtt\" rel=\"nofollow\">aio-mqtt</a> - Own protocol implementation. No dependencies.<br>\n<img alt=\"GitHub stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9d0baec68cd933da2ba4e8213d7f92c4d830de00/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f4e6f744a75737441546f792f61696f2d6d717474\">\n<img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a1702857263f9c49623c5dc54cc75d8e63964b23/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f4e6f744a75737441546f792f61696f2d6d717474\"></li>\n</ul>\n<p>This is not an exhaustive list.</p>\n<h3>Honorable mentions</h3>\n<ul>\n<li><a href=\"https://github.com/bkanuka/trio-paho-mqtt\" rel=\"nofollow\">trio-paho-mqtt</a> - Trio-based. Wrapper around paho-mqtt.<br>\n<img alt=\"GitHub stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/998bbacbd1c0ef0cc7056b6b83b331faafc3b962/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f626b616e756b612f7472696f2d7061686f2d6d717474\">\n<img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2059d19a3918f6914f4b9c5fd2d6c1bd7ab56219/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f626b616e756b612f7472696f2d7061686f2d6d717474\"></li>\n</ul>\n<h2>Requirements</h2>\n<p>Python 3.7 or later.</p>\n<p>There is only a single dependency:</p>\n<ul>\n<li><a href=\"https://github.com/eclipse/paho.mqtt.python\" rel=\"nofollow\">paho-mqtt</a><br>\n<img alt=\"GitHub stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/95490222ea94f384fcc8fb91e916b923082e83a1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f65636c697073652f7061686f2e6d7174742e707974686f6e\"> <img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/04fbecdb9946eeea2c15b4c6a86c25212581b4dc/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f65636c697073652f7061686f2e6d7174742e707974686f6e\"></li>\n</ul>\n<h2>Changelog</h2>\n<p>Please refer to the <a href=\"https://github.com/sbtinstruments/asyncio-mqtt/blob/master/CHANGELOG.md\" rel=\"nofollow\">CHANGELOG</a> document. It adheres to the principles of <a href=\"https://keepachangelog.com/en/1.0.0/\" rel=\"nofollow\">Keep a Changelog</a>.</p>\n<h2>Versioning</h2>\n<p><img alt=\"semver\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/80fdc98420e795b2bb9ed54eabcd40e23a915f89/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f7461672f736274696e737472756d656e74732f6173796e63696f2d6d7174743f736f72743d73656d766572\"></p>\n<p>This project adheres to <a href=\"https://semver.org/spec/v2.0.0.html\" rel=\"nofollow\">Semantic Versioning</a>.</p>\n<p>Expect API changes until we reach version <code>1.0.0</code>. After <code>1.0.0</code>, breaking changes will only occur in major release (e.g., <code>2.0.0</code>, <code>3.0.0</code>, etc.).</p>\n<h2>License</h2>\n<p><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9d34aeb3c59d3554dfff448a3ea4cf5eec9a33b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f736274696e737472756d656e74732f6173796e63696f2d6d717474\"></p>\n<p>Note that the underlying paho-mqtt library is dual-licensed. One of the licenses is the so-called <a href=\"https://www.eclipse.org/org/documents/edl-v10.php\" rel=\"nofollow\">Eclipse Distribution License v1.0</a>. It is almost word-for-word identical to the <a href=\"https://opensource.org/licenses/BSD-3-Clause\" rel=\"nofollow\">BSD 3-clause License</a>. The only differences are:</p>\n<ul>\n<li>One use of \"COPYRIGHT OWNER\" (EDL) instead of \"COPYRIGHT HOLDER\" (BSD)</li>\n<li>One use of \"Eclipse Foundation, Inc.\" (EDL) instead of \"copyright holder\" (BSD)</li>\n</ul>\n\n          </div>"}, "last_serial": 7178409, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "70c9634dbd6e4a130b0b9199a6c77b19", "sha256": "169f3ccf4c9d207f00f0b68a2de4fb076296fc9863effac2154a50e724759ef4"}, "downloads": -1, "filename": "asyncio_mqtt-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "70c9634dbd6e4a130b0b9199a6c77b19", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7060, "upload_time": "2020-04-06T13:52:32", "upload_time_iso_8601": "2020-04-06T13:52:32.686107Z", "url": "https://files.pythonhosted.org/packages/2d/1b/31543713218f4359492cdcbd5ee6d8170fb92597e2764fb68f2c798885d7/asyncio_mqtt-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "28c90b524a20f5e8b7040b9c803f7e46", "sha256": "04f1d4e9ee184cffe1953b2ce972e1cdb8fcab5fa56c7484956c1539b908b5a7"}, "downloads": -1, "filename": "asyncio_mqtt-0.1.0.tar.gz", "has_sig": false, "md5_digest": "28c90b524a20f5e8b7040b9c803f7e46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6224, "upload_time": "2020-04-06T13:52:35", "upload_time_iso_8601": "2020-04-06T13:52:35.355190Z", "url": "https://files.pythonhosted.org/packages/c3/23/8dd726d7abb7b9965e4f4a45a05aeea1d9c16729a51881aa12b052bdefbf/asyncio_mqtt-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6eda5b8a435ae8b4a1d6408f76aa3d9b", "sha256": "5211dc6ea6b2629a049d9acc0cc71cd2f41ff0ed841f659b8ba4f4df9a5e6606"}, "downloads": -1, "filename": "asyncio_mqtt-0.1.1-py3.8.egg", "has_sig": false, "md5_digest": "6eda5b8a435ae8b4a1d6408f76aa3d9b", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": null, "size": 11356, "upload_time": "2020-04-06T17:26:49", "upload_time_iso_8601": "2020-04-06T17:26:49.085002Z", "url": "https://files.pythonhosted.org/packages/a9/c7/936418d05aa043927d6be7e867601f97f15a712bb877727168766c02cf15/asyncio_mqtt-0.1.1-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ffb33f41961a9a8b3babc642e9502fb5", "sha256": "453b7e7d5bc7e7df6138dd30c3690a4a523eb1aab1bd69e3448bcbd928628e2f"}, "downloads": -1, "filename": "asyncio_mqtt-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ffb33f41961a9a8b3babc642e9502fb5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7360, "upload_time": "2020-04-06T17:26:47", "upload_time_iso_8601": "2020-04-06T17:26:47.975827Z", "url": "https://files.pythonhosted.org/packages/03/af/5e6a9d129d1225b83707451816df505e020a024c44fef4ad1d62e6238023/asyncio_mqtt-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14cee38d57c809f0b41a23081dc36ec5", "sha256": "7c9a126c253c3433c7769f5efd69168787256b66d0a2544f27b4a3ac406216cd"}, "downloads": -1, "filename": "asyncio_mqtt-0.1.1.tar.gz", "has_sig": false, "md5_digest": "14cee38d57c809f0b41a23081dc36ec5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6679, "upload_time": "2020-04-06T17:26:50", "upload_time_iso_8601": "2020-04-06T17:26:50.362370Z", "url": "https://files.pythonhosted.org/packages/91/75/0ad88ad52ccec16bceedaa89125f8ea3a1aade561a5b58e91e08229c27da/asyncio_mqtt-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7ec7297ae8142026d4ba9a737b0ab902", "sha256": "04301b59b41e4b294a4f169fc4a9ae52b9ab57640122bb42caf6af274c9fd477"}, "downloads": -1, "filename": "asyncio_mqtt-0.1.2-py3.8.egg", "has_sig": false, "md5_digest": "7ec7297ae8142026d4ba9a737b0ab902", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": null, "size": 11312, "upload_time": "2020-04-06T17:30:23", "upload_time_iso_8601": "2020-04-06T17:30:23.559542Z", "url": "https://files.pythonhosted.org/packages/b0/c4/a354bbb3df3d929b55b9a9ca3666c17bdf54c7d1b33d518d86a908cf4ef9/asyncio_mqtt-0.1.2-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5221c669f4a7f5eca2f5845bc8289dbe", "sha256": "47122e29c7899f92f0d61bb27f36d48e0a5c1117609b9fc5165a373058fd3dd7"}, "downloads": -1, "filename": "asyncio_mqtt-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5221c669f4a7f5eca2f5845bc8289dbe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7342, "upload_time": "2020-04-06T17:30:22", "upload_time_iso_8601": "2020-04-06T17:30:22.019009Z", "url": "https://files.pythonhosted.org/packages/d1/ad/17da1c8401ea82502029b5bff55bf59f6332881b3b2578d5e69d44f18588/asyncio_mqtt-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2e60f3c96690048f5de64f46e5a44954", "sha256": "4249f519758c5f4e0b8507fe0eaf1184fa148fffaca8b53beb5eb2a996c39840"}, "downloads": -1, "filename": "asyncio_mqtt-0.1.2.tar.gz", "has_sig": false, "md5_digest": "2e60f3c96690048f5de64f46e5a44954", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6664, "upload_time": "2020-04-06T17:30:24", "upload_time_iso_8601": "2020-04-06T17:30:24.677575Z", "url": "https://files.pythonhosted.org/packages/ee/a8/5b65cebd16519216da5f0691c5f0d28b0ff0b8d4c7363a701e32b43ebd77/asyncio_mqtt-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "21ed96247d89478937ec35bb079f382c", "sha256": "98d58c9fb8aa18025ae6888496f74c7aba0a06d48d4e9bdd91804622eee20ef6"}, "downloads": -1, "filename": "asyncio_mqtt-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "21ed96247d89478937ec35bb079f382c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7347, "upload_time": "2020-04-07T11:02:21", "upload_time_iso_8601": "2020-04-07T11:02:21.235120Z", "url": "https://files.pythonhosted.org/packages/86/ed/e7e6bb0adaa361498811b58090026ea4cd2b96c18fc0a49cb106f1f1a436/asyncio_mqtt-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3cd9327a5ee3c315dcdfb5e67d476e95", "sha256": "8fc1b77b8125c446eb97ab67a129650204ab5991e81a51c514fc9f1aa581ae5f"}, "downloads": -1, "filename": "asyncio_mqtt-0.1.3.tar.gz", "has_sig": false, "md5_digest": "3cd9327a5ee3c315dcdfb5e67d476e95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6676, "upload_time": "2020-04-07T11:02:22", "upload_time_iso_8601": "2020-04-07T11:02:22.923538Z", "url": "https://files.pythonhosted.org/packages/ab/b3/c5a5b1dbda51cb9b3a2e357ee57bcb7f339ff1c6b8125341157a5fee37f3/asyncio_mqtt-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "eb6c89052ffb143c68248b9caedd97db", "sha256": "e35dc6deb99b76608567dcde272efe2a2ded7e1595361c24968a663886c5fa02"}, "downloads": -1, "filename": "asyncio_mqtt-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eb6c89052ffb143c68248b9caedd97db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7448, "upload_time": "2020-04-07T12:34:45", "upload_time_iso_8601": "2020-04-07T12:34:45.203368Z", "url": "https://files.pythonhosted.org/packages/a0/2a/97f1e42c1125e1395a7ab7ff54783484d1d9eafe3632c3e1ad925827294d/asyncio_mqtt-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b46a3cba4d3e875f23e6b590a51646c", "sha256": "c093cc76c68240440aa9d0f2d1dd620ba3f47a5b89d6f8b9525ede0559b27dc8"}, "downloads": -1, "filename": "asyncio_mqtt-0.2.0.tar.gz", "has_sig": false, "md5_digest": "6b46a3cba4d3e875f23e6b590a51646c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6746, "upload_time": "2020-04-07T12:34:46", "upload_time_iso_8601": "2020-04-07T12:34:46.954087Z", "url": "https://files.pythonhosted.org/packages/55/f2/8089e6988b5895481969049150000122a58f5508f48c4a70dc9fac6f0cdd/asyncio_mqtt-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "1fa52a20d0bb3e44fcb9c870a43b07ec", "sha256": "2b673f604a5b9339e17f971ef5a66c14314c4d62666a5f16478ca7f5ea18f2d2"}, "downloads": -1, "filename": "asyncio_mqtt-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1fa52a20d0bb3e44fcb9c870a43b07ec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7446, "upload_time": "2020-04-07T12:37:38", "upload_time_iso_8601": "2020-04-07T12:37:38.174172Z", "url": "https://files.pythonhosted.org/packages/29/d3/33d39725d63b2c06eff053bc336905c4a8ceeebd3eda8c5da2ba63880966/asyncio_mqtt-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df702bc64ad6af6c0eb655cc2d66f9bc", "sha256": "bf4c83a869687298effec95d360a784b1a993a4c996836e3114e0a8b70e57ddc"}, "downloads": -1, "filename": "asyncio_mqtt-0.2.1.tar.gz", "has_sig": false, "md5_digest": "df702bc64ad6af6c0eb655cc2d66f9bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6747, "upload_time": "2020-04-07T12:37:39", "upload_time_iso_8601": "2020-04-07T12:37:39.811197Z", "url": "https://files.pythonhosted.org/packages/1b/4e/f634be96258ae3cef9adcb8f7616c1657d8c8d7f2ea2b5d48f6494d53a48/asyncio_mqtt-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "fc62da3142e45d53cb45a1b253b19467", "sha256": "227288c279cd63cf687a7c58a6705046b909612afc668b9a4acd58a8ef572486"}, "downloads": -1, "filename": "asyncio_mqtt-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fc62da3142e45d53cb45a1b253b19467", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7494, "upload_time": "2020-04-13T13:14:51", "upload_time_iso_8601": "2020-04-13T13:14:51.021487Z", "url": "https://files.pythonhosted.org/packages/25/bc/aad3fdd86cf583d73364578c93af64329e9dacab7580c5152a5a4e524796/asyncio_mqtt-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ff6133155d0f1818e26c2707948f246", "sha256": "18760a55528dbdc6553e2bbc60179e8f6dcd04d242d72e76a556a3996c72480b"}, "downloads": -1, "filename": "asyncio_mqtt-0.3.0.tar.gz", "has_sig": false, "md5_digest": "8ff6133155d0f1818e26c2707948f246", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6800, "upload_time": "2020-04-13T13:14:52", "upload_time_iso_8601": "2020-04-13T13:14:52.471030Z", "url": "https://files.pythonhosted.org/packages/a9/e2/3d69f4256fbbfd9bd7577cec8b5fbcabe7e1f0f3f06c88c1198b39b2c975/asyncio_mqtt-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "dfa5673f75f055d0bc5e429910c5613c", "sha256": "2ed34e1f0fd772979309ac82aff0913e2b32098a7bb829bc37c19d47c239a062"}, "downloads": -1, "filename": "asyncio_mqtt-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dfa5673f75f055d0bc5e429910c5613c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7702, "upload_time": "2020-05-06T08:03:31", "upload_time_iso_8601": "2020-05-06T08:03:31.173130Z", "url": "https://files.pythonhosted.org/packages/a7/9c/912a9be7d4a66c9286718ce8b193b9c947c9bc40619c574ada88124aeedb/asyncio_mqtt-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "185479237203e4dfa5ee2cd10601a61a", "sha256": "27da76465ba13e591c14e3b7daad8973f4e099b56031bb60dc31a6db1e9980b5"}, "downloads": -1, "filename": "asyncio_mqtt-0.4.0.tar.gz", "has_sig": false, "md5_digest": "185479237203e4dfa5ee2cd10601a61a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7124, "upload_time": "2020-05-06T08:03:33", "upload_time_iso_8601": "2020-05-06T08:03:33.013419Z", "url": "https://files.pythonhosted.org/packages/f6/2a/678af07db57252d246c65d9d36280e0026734945e76b5e3e8e4d00447a4a/asyncio_mqtt-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dfa5673f75f055d0bc5e429910c5613c", "sha256": "2ed34e1f0fd772979309ac82aff0913e2b32098a7bb829bc37c19d47c239a062"}, "downloads": -1, "filename": "asyncio_mqtt-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dfa5673f75f055d0bc5e429910c5613c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7702, "upload_time": "2020-05-06T08:03:31", "upload_time_iso_8601": "2020-05-06T08:03:31.173130Z", "url": "https://files.pythonhosted.org/packages/a7/9c/912a9be7d4a66c9286718ce8b193b9c947c9bc40619c574ada88124aeedb/asyncio_mqtt-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "185479237203e4dfa5ee2cd10601a61a", "sha256": "27da76465ba13e591c14e3b7daad8973f4e099b56031bb60dc31a6db1e9980b5"}, "downloads": -1, "filename": "asyncio_mqtt-0.4.0.tar.gz", "has_sig": false, "md5_digest": "185479237203e4dfa5ee2cd10601a61a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7124, "upload_time": "2020-05-06T08:03:33", "upload_time_iso_8601": "2020-05-06T08:03:33.013419Z", "url": "https://files.pythonhosted.org/packages/f6/2a/678af07db57252d246c65d9d36280e0026734945e76b5e3e8e4d00447a4a/asyncio_mqtt-0.4.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:44 2020"}