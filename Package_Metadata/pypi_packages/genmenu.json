{"info": {"author": "P\u00e4r Berge", "author_email": "paer.berge@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "genmenu: A meal planner written in python\n=========================================\n\n.. image:: https://travis-ci.org/peerster/genmenu.svg?branch=master\n    :target: https://travis-ci.org/peerster/genmenu\n   \nWhy\n---\nTo try to simplify and automate the process of planning what to\neat.\n\nInstall\n-------\n\n.. code-block:: bash\n\n    $ pip install genmenu\n\nExample\n-------\n.. code-block:: python\n\n    >>> example_menu = genmenu.GenMenu()\n    >>> example_menu.insert_lunch_menu(['spam', 'eggs'])\n    >>> example_menu.insert_dinner_menu(['spam', 'eggs'])\n    >>> example_menu.generate_menu()\n    >>> example_menu.my_menu\n    OrderedDict([('Monday', {'dinner': 'spam', 'lunch': 'spam'}), ('Tuesday', {'dinner': 'eggs', 'lunch': 'eggs'}), ('Wednesday', {'dinner': '', 'lunch': ''}), ('Thursday', {'dinner': '', 'lunch': ''}), ('Friday', {'dinner': '', 'lunch': ''}), ('Saturday', {'dinner': '', 'lunch': ''}), ('Sunday', {'dinner': '', 'lunch': ''})])\n    >>>\n\nWhat I want to add\n------------------\n\n-  A simple webpage (what web framework to use?)\n-  Simple DB backend (probably nosql. What DB to use?)\n-  Fetch recipies from external resources (what resources to use?)\n-  Make it multilingual (what tool and how to do that?)\n-  The option to specify how many days/weeks to plan for\n-  Add the dates to the days", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/peerster/genmenu", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "genmenu", "package_url": "https://pypi.org/project/genmenu/", "platform": "", "project_url": "https://pypi.org/project/genmenu/", "project_urls": {"Homepage": "https://github.com/peerster/genmenu"}, "release_url": "https://pypi.org/project/genmenu/0.1.8/", "requires_dist": null, "requires_python": "", "summary": "A meal menu planner", "version": "0.1.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/peerster/genmenu\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/peerster/genmenu.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0ed2cac3320e859cc68f31cb165782277c691056/68747470733a2f2f7472617669732d63692e6f72672f70656572737465722f67656e6d656e752e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"why\">\n<h2>Why</h2>\n<p>To try to simplify and automate the process of planning what to\neat.</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>$ pip install genmenu\n</pre>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">example_menu</span> <span class=\"o\">=</span> <span class=\"n\">genmenu</span><span class=\"o\">.</span><span class=\"n\">GenMenu</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">example_menu</span><span class=\"o\">.</span><span class=\"n\">insert_lunch_menu</span><span class=\"p\">([</span><span class=\"s1\">'spam'</span><span class=\"p\">,</span> <span class=\"s1\">'eggs'</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">example_menu</span><span class=\"o\">.</span><span class=\"n\">insert_dinner_menu</span><span class=\"p\">([</span><span class=\"s1\">'spam'</span><span class=\"p\">,</span> <span class=\"s1\">'eggs'</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">example_menu</span><span class=\"o\">.</span><span class=\"n\">generate_menu</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">example_menu</span><span class=\"o\">.</span><span class=\"n\">my_menu</span>\n<span class=\"n\">OrderedDict</span><span class=\"p\">([(</span><span class=\"s1\">'Monday'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'dinner'</span><span class=\"p\">:</span> <span class=\"s1\">'spam'</span><span class=\"p\">,</span> <span class=\"s1\">'lunch'</span><span class=\"p\">:</span> <span class=\"s1\">'spam'</span><span class=\"p\">}),</span> <span class=\"p\">(</span><span class=\"s1\">'Tuesday'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'dinner'</span><span class=\"p\">:</span> <span class=\"s1\">'eggs'</span><span class=\"p\">,</span> <span class=\"s1\">'lunch'</span><span class=\"p\">:</span> <span class=\"s1\">'eggs'</span><span class=\"p\">}),</span> <span class=\"p\">(</span><span class=\"s1\">'Wednesday'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'dinner'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"s1\">'lunch'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">}),</span> <span class=\"p\">(</span><span class=\"s1\">'Thursday'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'dinner'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"s1\">'lunch'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">}),</span> <span class=\"p\">(</span><span class=\"s1\">'Friday'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'dinner'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"s1\">'lunch'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">}),</span> <span class=\"p\">(</span><span class=\"s1\">'Saturday'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'dinner'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"s1\">'lunch'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">}),</span> <span class=\"p\">(</span><span class=\"s1\">'Sunday'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'dinner'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"s1\">'lunch'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">})])</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n</div>\n<div id=\"what-i-want-to-add\">\n<h2>What I want to add</h2>\n<ul>\n<li>A simple webpage (what web framework to use?)</li>\n<li>Simple DB backend (probably nosql. What DB to use?)</li>\n<li>Fetch recipies from external resources (what resources to use?)</li>\n<li>Make it multilingual (what tool and how to do that?)</li>\n<li>The option to specify how many days/weeks to plan for</li>\n<li>Add the dates to the days</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2676504, "releases": {"0.1.8": [{"comment_text": "", "digests": {"md5": "576b2025349ffb6517bb1124dc2ea22e", "sha256": "26adb4cd0cfbc6389d5861413aa4e7f55eb51b91e5130b74da13ca45d9321f78"}, "downloads": -1, "filename": "genmenu-0.1.8.tar.gz", "has_sig": false, "md5_digest": "576b2025349ffb6517bb1124dc2ea22e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2622, "upload_time": "2017-03-01T19:27:17", "upload_time_iso_8601": "2017-03-01T19:27:17.192780Z", "url": "https://files.pythonhosted.org/packages/e7/86/e706ff3335110ca9e70181b14ce139f896f44278ea97d326851d147c1fdd/genmenu-0.1.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "576b2025349ffb6517bb1124dc2ea22e", "sha256": "26adb4cd0cfbc6389d5861413aa4e7f55eb51b91e5130b74da13ca45d9321f78"}, "downloads": -1, "filename": "genmenu-0.1.8.tar.gz", "has_sig": false, "md5_digest": "576b2025349ffb6517bb1124dc2ea22e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2622, "upload_time": "2017-03-01T19:27:17", "upload_time_iso_8601": "2017-03-01T19:27:17.192780Z", "url": "https://files.pythonhosted.org/packages/e7/86/e706ff3335110ca9e70181b14ce139f896f44278ea97d326851d147c1fdd/genmenu-0.1.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:17 2020"}