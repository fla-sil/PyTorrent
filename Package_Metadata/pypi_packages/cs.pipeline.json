{"info": {"author": "Cameron Simpson", "author_email": "cs@cskk.id.au", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "*Latest release 20191007.1*:\nPipeline functionality extracted from cs.later: asynchronous pipelines mediated with a cs.later.Later.\n\nFunction pipelines mediated by queues and a Later.\n\n## Class `Pipeline`\n\nMRO: `cs.resources.MultiOpenMixin`  \nA Pipeline encapsulates the chain of PushQueues created by\na call to Later.pipeline.\n\n### Method `Pipeline.__init__(self, name, L, actions, outQ)`\n\nInitialise the Pipeline from `name`, Later instance `L`,\nlist of filter functions `actions` and output queue `outQ`.\n\nEach action is either a 2-tuple of (sig, functor) or an\nobject with a .sig attribute and a .functor method returning\na callable.\n\n## Function `pipeline(later, actions, inputs=None, outQ=None, name=None)`\n\nConstruct a function pipeline to be mediated by this Later queue.\nReturn: `input, output`\nwhere `input`` is a closeable queue on which more data items can be put\nand `output` is an iterable from which result can be collected.\n\nParameters:\n* `actions`: an iterable of filter functions accepting\n  single items from the iterable `inputs`, returning an\n  iterable output.\n* `inputs`: the initial iterable inputs; this may be None.\n  If missing or None, it is expected that the caller will\n  be supplying input items via `input.put()`.\n* `outQ`: the optional output queue; if None, an IterableQueue() will be\n  allocated.\n* `name`: name for the PushQueue implementing this pipeline.\n\nIf `inputs` is None or `open` is true, the returned `input` requires\na call to `input.close()` when no further inputs are to be supplied.\n\nExample use with presupplied Later `L`:\n\n    input, output = L.pipeline(\n            [\n              ls,\n              filter_ls,\n              ( FUNC_MANY_TO_MANY, lambda items: sorted(list(items)) ),\n            ],\n            ('.', '..', '../..'),\n           )\n    for item in output:\n      print(item)\n\n\n\n# Release Log\n\n*Release 20191007.1*:\nPipeline functionality extracted from cs.later: asynchronous pipelines mediated with a cs.later.Later.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/cameron_simpson/css/commits/all", "keywords": "python2,python3", "license": "GNU General Public License v3 or later (GPLv3+)", "maintainer": "", "maintainer_email": "", "name": "cs.pipeline", "package_url": "https://pypi.org/project/cs.pipeline/", "platform": "", "project_url": "https://pypi.org/project/cs.pipeline/", "project_urls": {"Homepage": "https://bitbucket.org/cameron_simpson/css/commits/all"}, "release_url": "https://pypi.org/project/cs.pipeline/20191007.1/", "requires_dist": null, "requires_python": "", "summary": "Function pipelines mediated by queues and a Later.", "version": "20191007.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><em>Latest release 20191007.1</em>:\nPipeline functionality extracted from cs.later: asynchronous pipelines mediated with a cs.later.Later.</p>\n<p>Function pipelines mediated by queues and a Later.</p>\n<h2>Class <code>Pipeline</code></h2>\n<p>MRO: <code>cs.resources.MultiOpenMixin</code><br>\nA Pipeline encapsulates the chain of PushQueues created by\na call to Later.pipeline.</p>\n<h3>Method <code>Pipeline.__init__(self, name, L, actions, outQ)</code></h3>\n<p>Initialise the Pipeline from <code>name</code>, Later instance <code>L</code>,\nlist of filter functions <code>actions</code> and output queue <code>outQ</code>.</p>\n<p>Each action is either a 2-tuple of (sig, functor) or an\nobject with a .sig attribute and a .functor method returning\na callable.</p>\n<h2>Function <code>pipeline(later, actions, inputs=None, outQ=None, name=None)</code></h2>\n<p>Construct a function pipeline to be mediated by this Later queue.\nReturn: <code>input, output</code>\nwhere <code>input`` is a closeable queue on which more data items can be put and</code>output` is an iterable from which result can be collected.</p>\n<p>Parameters:</p>\n<ul>\n<li><code>actions</code>: an iterable of filter functions accepting\nsingle items from the iterable <code>inputs</code>, returning an\niterable output.</li>\n<li><code>inputs</code>: the initial iterable inputs; this may be None.\nIf missing or None, it is expected that the caller will\nbe supplying input items via <code>input.put()</code>.</li>\n<li><code>outQ</code>: the optional output queue; if None, an IterableQueue() will be\nallocated.</li>\n<li><code>name</code>: name for the PushQueue implementing this pipeline.</li>\n</ul>\n<p>If <code>inputs</code> is None or <code>open</code> is true, the returned <code>input</code> requires\na call to <code>input.close()</code> when no further inputs are to be supplied.</p>\n<p>Example use with presupplied Later <code>L</code>:</p>\n<pre><code>input, output = L.pipeline(\n        [\n          ls,\n          filter_ls,\n          ( FUNC_MANY_TO_MANY, lambda items: sorted(list(items)) ),\n        ],\n        ('.', '..', '../..'),\n       )\nfor item in output:\n  print(item)\n</code></pre>\n<h1>Release Log</h1>\n<p><em>Release 20191007.1</em>:\nPipeline functionality extracted from cs.later: asynchronous pipelines mediated with a cs.later.Later.</p>\n\n          </div>"}, "last_serial": 5936648, "releases": {"20191007.1": [{"comment_text": "", "digests": {"md5": "a217aafb37a90c0474abcbcb29573281", "sha256": "192d6b0eede7623bdd7c32653461df45a5c88da5883d35409461b41f113b5ac5"}, "downloads": -1, "filename": "cs.pipeline-20191007.1.tar.gz", "has_sig": false, "md5_digest": "a217aafb37a90c0474abcbcb29573281", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4978, "upload_time": "2019-10-07T02:33:02", "upload_time_iso_8601": "2019-10-07T02:33:02.259421Z", "url": "https://files.pythonhosted.org/packages/3f/5f/781bdbe5f455480b6e73ba844447a626ddf73681bd448e1e0c2129a5e769/cs.pipeline-20191007.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a217aafb37a90c0474abcbcb29573281", "sha256": "192d6b0eede7623bdd7c32653461df45a5c88da5883d35409461b41f113b5ac5"}, "downloads": -1, "filename": "cs.pipeline-20191007.1.tar.gz", "has_sig": false, "md5_digest": "a217aafb37a90c0474abcbcb29573281", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4978, "upload_time": "2019-10-07T02:33:02", "upload_time_iso_8601": "2019-10-07T02:33:02.259421Z", "url": "https://files.pythonhosted.org/packages/3f/5f/781bdbe5f455480b6e73ba844447a626ddf73681bd448e1e0c2129a5e769/cs.pipeline-20191007.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:47 2020"}