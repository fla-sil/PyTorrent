{"info": {"author": "Tatsuya Abe", "author_email": "abe12@mccc.jp", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7"], "description": "RWave\n=====\n\n[![PyPi](https://badge.fury.io/py/rwave.svg)](https://pypi.python.org/pypi/rwave/)\n[![MIT License](http://img.shields.io/badge/license-MIT-blue.svg?style=flat)](LICENSE)\n\nA utility that handle audio for Python.\n\n\n## Usage\n### Simple Example\n```python\nimport rwave\n# Load audio file\nwave, fs = rwave.read_wave('wave file path')\n\n# Write audio file\n# (wave file path, wave data, fs)\nrwave.write_wave('wave file path', wave, 16000)\n\n# Nomalize wave data\nrwave.nomalize(wave)\n# => audio data normalized to 0~1\n\n# Convert sampling rate (16000->8000)\nwave, fs = rwave.convert_fs(wave, 16000, 8000)\n\n# Convert audio length (->5.0s)\nwave, fs = rwave.convert_fs(wave, 16000, 5.0)\n\n# Convert to MFCC\nmfcc = rwave.to_mfcc('wave file path', 16000)\n```\n\n\n## Installation\n```sh\n$ pip install rwave\n```\n\n\n## Contributing\nBug reports and pull requests are welcome on GitHub at [https://github.com/AjxLab/RWave](https://github.com/AjxLab/RWave).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AjxLab/RWave", "keywords": "audio wave wav convert mfcc fft fs", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "rwave", "package_url": "https://pypi.org/project/rwave/", "platform": "", "project_url": "https://pypi.org/project/rwave/", "project_urls": {"Homepage": "https://github.com/AjxLab/RWave"}, "release_url": "https://pypi.org/project/rwave/0.1.2/", "requires_dist": ["numpy", "scipy", "librosa"], "requires_python": "", "summary": "", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>RWave</h1>\n<p><a href=\"https://pypi.python.org/pypi/rwave/\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/56c221646e63f7162e0f1ec9f74d8255a22e5c98/68747470733a2f2f62616467652e667572792e696f2f70792f72776176652e737667\"></a>\n<a href=\"LICENSE\" rel=\"nofollow\"><img alt=\"MIT License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9f8168092fab8a1e348f4b089c1ff9cc0c137bf/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c6174\"></a></p>\n<p>A utility that handle audio for Python.</p>\n<h2>Usage</h2>\n<h3>Simple Example</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">rwave</span>\n<span class=\"c1\"># Load audio file</span>\n<span class=\"n\">wave</span><span class=\"p\">,</span> <span class=\"n\">fs</span> <span class=\"o\">=</span> <span class=\"n\">rwave</span><span class=\"o\">.</span><span class=\"n\">read_wave</span><span class=\"p\">(</span><span class=\"s1\">'wave file path'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Write audio file</span>\n<span class=\"c1\"># (wave file path, wave data, fs)</span>\n<span class=\"n\">rwave</span><span class=\"o\">.</span><span class=\"n\">write_wave</span><span class=\"p\">(</span><span class=\"s1\">'wave file path'</span><span class=\"p\">,</span> <span class=\"n\">wave</span><span class=\"p\">,</span> <span class=\"mi\">16000</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Nomalize wave data</span>\n<span class=\"n\">rwave</span><span class=\"o\">.</span><span class=\"n\">nomalize</span><span class=\"p\">(</span><span class=\"n\">wave</span><span class=\"p\">)</span>\n<span class=\"c1\"># =&gt; audio data normalized to 0~1</span>\n\n<span class=\"c1\"># Convert sampling rate (16000-&gt;8000)</span>\n<span class=\"n\">wave</span><span class=\"p\">,</span> <span class=\"n\">fs</span> <span class=\"o\">=</span> <span class=\"n\">rwave</span><span class=\"o\">.</span><span class=\"n\">convert_fs</span><span class=\"p\">(</span><span class=\"n\">wave</span><span class=\"p\">,</span> <span class=\"mi\">16000</span><span class=\"p\">,</span> <span class=\"mi\">8000</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Convert audio length (-&gt;5.0s)</span>\n<span class=\"n\">wave</span><span class=\"p\">,</span> <span class=\"n\">fs</span> <span class=\"o\">=</span> <span class=\"n\">rwave</span><span class=\"o\">.</span><span class=\"n\">convert_fs</span><span class=\"p\">(</span><span class=\"n\">wave</span><span class=\"p\">,</span> <span class=\"mi\">16000</span><span class=\"p\">,</span> <span class=\"mf\">5.0</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Convert to MFCC</span>\n<span class=\"n\">mfcc</span> <span class=\"o\">=</span> <span class=\"n\">rwave</span><span class=\"o\">.</span><span class=\"n\">to_mfcc</span><span class=\"p\">(</span><span class=\"s1\">'wave file path'</span><span class=\"p\">,</span> <span class=\"mi\">16000</span><span class=\"p\">)</span>\n</pre>\n<h2>Installation</h2>\n<pre>$ pip install rwave\n</pre>\n<h2>Contributing</h2>\n<p>Bug reports and pull requests are welcome on GitHub at <a href=\"https://github.com/AjxLab/RWave\" rel=\"nofollow\">https://github.com/AjxLab/RWave</a>.</p>\n\n          </div>"}, "last_serial": 6609777, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ae085532e1bb75febbb0c7c46ac345ae", "sha256": "13d877e1f3793eefaf4128d5b94bc0dd1f5a25ec1711f569254ac580a0075424"}, "downloads": -1, "filename": "rwave-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ae085532e1bb75febbb0c7c46ac345ae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3837, "upload_time": "2020-01-17T22:31:38", "upload_time_iso_8601": "2020-01-17T22:31:38.884503Z", "url": "https://files.pythonhosted.org/packages/26/87/601d5de569ad62092da2235164032c144978603e4a40fefa85e2c741408e/rwave-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "30dc51c4bf2bc1ef0f86810caba4bae8", "sha256": "fa96935818af9f3eff963a076962546a4b7a362b4f41709b1f24658c86ab0b9d"}, "downloads": -1, "filename": "rwave-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "30dc51c4bf2bc1ef0f86810caba4bae8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3809, "upload_time": "2020-01-18T06:12:03", "upload_time_iso_8601": "2020-01-18T06:12:03.037865Z", "url": "https://files.pythonhosted.org/packages/32/5e/621977616edfa26b07233a854927acecdc72ce95d3110b36a5d19baa1c77/rwave-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7a0e9f6bc844936d3ee1702b8950f196", "sha256": "7cd9d731153166d881ab16e260e4a837ebef1e426d136bf691666da2fdf5c7f5"}, "downloads": -1, "filename": "rwave-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7a0e9f6bc844936d3ee1702b8950f196", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4133, "upload_time": "2020-02-11T14:14:59", "upload_time_iso_8601": "2020-02-11T14:14:59.605737Z", "url": "https://files.pythonhosted.org/packages/a8/32/056683fb0d8574ed2ebf3a588dd20f8c31523377b6162c680ea04296797e/rwave-0.1.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7a0e9f6bc844936d3ee1702b8950f196", "sha256": "7cd9d731153166d881ab16e260e4a837ebef1e426d136bf691666da2fdf5c7f5"}, "downloads": -1, "filename": "rwave-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7a0e9f6bc844936d3ee1702b8950f196", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4133, "upload_time": "2020-02-11T14:14:59", "upload_time_iso_8601": "2020-02-11T14:14:59.605737Z", "url": "https://files.pythonhosted.org/packages/a8/32/056683fb0d8574ed2ebf3a588dd20f8c31523377b6162c680ea04296797e/rwave-0.1.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:59:48 2020"}