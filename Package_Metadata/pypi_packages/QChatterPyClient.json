{"info": {"author": "Polis Flatt", "author_email": "polisflatt@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "\n# QChatterPyClient\nA client for QChatter made in Python using QChatterPy\n\n*QChatterPyClient, version 1.5*\n*Cleanup Edition*\n\n*Server is at http://polisflatt.servehttp.com!*\n\n## Screenshots\n![enter image description here](https://i.ibb.co/6mGj4py/2019-05-05-152410-1213x626-scrot.png)\n![enter image description here](https://i.ibb.co/7QCZ4Jv/2019-05-05-162659-1336x717-scrot.png)\n## Information\nQChatterPyClient is a *free* program written in Python 3 that interfaces with QChatterServer, and acts as a client, being able to send and receive messages from two or more parties. It also includes the QChatterPy library that can interface with QChatterServer on a level more easier to create external programs for. This program is not a TUI nor it is a GUI, but rather, it is a simple terminal program that gets from stdin and outputs to stdout. It is a very basic program, and is mainly a proof of concept.\n\n## Installation\n\nInstalling is now easier than ever, thanks to the greatness and versatility of pip. In order to install on your (Linux) system, do `pip install QChatterPyClient`\n\n## Directions\n\nTo run you will need:\n\n - Python 3 (3.6+, most likely; I don't know)\n - libQChatterPy `sudo pip install libQChatterPy`\n - Requests Python Library `sudo pip install requests`\n - Asyncio Python Library (asynchronous programming)  `sudo pip install asyncio`\n - PyGame Python Library (sound) `sudo install pygame`\n - Blessed Python Library (Terminal colors, formatting, etc) `sudo pip install blessed`\n - Knowledge of Python 3, because you need to edit configuration files written lazily in Python 3 and you must be able to deal with errors, due to the instability and crudeness of the program. [Python 3 Documentation here](https://docs.python.org/3/)\n\n~Before you begin, you may want to edit the **settings.py** and **constants.py** file, which contains both some options and the server URL.~ *Outdated*\n\nRun **qchatterpy** with Python 3 and get ready for any kind of error. Fix them, then, you will be asked for a username and password. There is a 99.99% chance that you don't have one! You must register an account. \n\nRun **qchatterpy** with the argument --register. After --register, type your username, your password, and then your confirmed password. Enclose any string that has spaces with \"\".\n\nNow, run **qchatterpy** and sign in with the credentials. You are now asked for a channel, but, you don't know any, chances are. Type anything, and press enter. Typing a message will print your message, but you will see an alphanumerical string that seems almost magical--and it is. You need to add yourself to the channel list first (sorry, too lazy to make it do this automatically!). But, you also need to create a channel before you can join it.\n\nType \"/create_channel,\" followed by (spaced) the channel name, a password for it, and a confirmation of the password. You should either see: nothing (error), PHP errors (normal), random alphanumerical string (error/normal), or text that says something meaningful (error/normal/good). \n\nNow, type \"/join_channel\", followed by (spaced) the channel name. You are now in the channel. You can now, hopefully, type without any kind of error.\n\nType \"/help\" to see some other basic commands.\n\nDominance over a channel is denoted by a master password. If you want to be an OP visibly, type \"/get_op,\" followed by the master password. Your master password is the password you used when you created the channel.\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/polisflatt/QChatterPyClient/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "QChatterPyClient", "package_url": "https://pypi.org/project/QChatterPyClient/", "platform": "", "project_url": "https://pypi.org/project/QChatterPyClient/", "project_urls": {"Homepage": "https://github.com/polisflatt/QChatterPyClient/"}, "release_url": "https://pypi.org/project/QChatterPyClient/1.6/", "requires_dist": null, "requires_python": "", "summary": "A client which interfaces with the QChatterServer.", "version": "1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>QChatterPyClient</h1>\n<p>A client for QChatter made in Python using QChatterPy</p>\n<p><em>QChatterPyClient, version 1.5</em>\n<em>Cleanup Edition</em></p>\n<p><em>Server is at <a href=\"http://polisflatt.servehttp.com\" rel=\"nofollow\">http://polisflatt.servehttp.com</a>!</em></p>\n<h2>Screenshots</h2>\n<p><img alt=\"enter image description here\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2051b3599ecd5d2c6976eb5a001ba54caa6dd562/68747470733a2f2f692e6962622e636f2f366d476a3470792f323031392d30352d30352d3135323431302d31323133783632362d7363726f742e706e67\">\n<img alt=\"enter image description here\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6105921d6c49473d1052d4e710d4068593cee9d3/68747470733a2f2f692e6962622e636f2f3751435a344a762f323031392d30352d30352d3136323635392d31333336783731372d7363726f742e706e67\"></p>\n<h2>Information</h2>\n<p>QChatterPyClient is a <em>free</em> program written in Python 3 that interfaces with QChatterServer, and acts as a client, being able to send and receive messages from two or more parties. It also includes the QChatterPy library that can interface with QChatterServer on a level more easier to create external programs for. This program is not a TUI nor it is a GUI, but rather, it is a simple terminal program that gets from stdin and outputs to stdout. It is a very basic program, and is mainly a proof of concept.</p>\n<h2>Installation</h2>\n<p>Installing is now easier than ever, thanks to the greatness and versatility of pip. In order to install on your (Linux) system, do <code>pip install QChatterPyClient</code></p>\n<h2>Directions</h2>\n<p>To run you will need:</p>\n<ul>\n<li>Python 3 (3.6+, most likely; I don't know)</li>\n<li>libQChatterPy <code>sudo pip install libQChatterPy</code></li>\n<li>Requests Python Library <code>sudo pip install requests</code></li>\n<li>Asyncio Python Library (asynchronous programming)  <code>sudo pip install asyncio</code></li>\n<li>PyGame Python Library (sound) <code>sudo install pygame</code></li>\n<li>Blessed Python Library (Terminal colors, formatting, etc) <code>sudo pip install blessed</code></li>\n<li>Knowledge of Python 3, because you need to edit configuration files written lazily in Python 3 and you must be able to deal with errors, due to the instability and crudeness of the program. <a href=\"https://docs.python.org/3/\" rel=\"nofollow\">Python 3 Documentation here</a></li>\n</ul>\n<p><del>Before you begin, you may want to edit the <strong>settings.py</strong> and <strong>constants.py</strong> file, which contains both some options and the server URL.</del> <em>Outdated</em></p>\n<p>Run <strong>qchatterpy</strong> with Python 3 and get ready for any kind of error. Fix them, then, you will be asked for a username and password. There is a 99.99% chance that you don't have one! You must register an account.</p>\n<p>Run <strong>qchatterpy</strong> with the argument --register. After --register, type your username, your password, and then your confirmed password. Enclose any string that has spaces with \"\".</p>\n<p>Now, run <strong>qchatterpy</strong> and sign in with the credentials. You are now asked for a channel, but, you don't know any, chances are. Type anything, and press enter. Typing a message will print your message, but you will see an alphanumerical string that seems almost magical--and it is. You need to add yourself to the channel list first (sorry, too lazy to make it do this automatically!). But, you also need to create a channel before you can join it.</p>\n<p>Type \"/create_channel,\" followed by (spaced) the channel name, a password for it, and a confirmation of the password. You should either see: nothing (error), PHP errors (normal), random alphanumerical string (error/normal), or text that says something meaningful (error/normal/good).</p>\n<p>Now, type \"/join_channel\", followed by (spaced) the channel name. You are now in the channel. You can now, hopefully, type without any kind of error.</p>\n<p>Type \"/help\" to see some other basic commands.</p>\n<p>Dominance over a channel is denoted by a master password. If you want to be an OP visibly, type \"/get_op,\" followed by the master password. Your master password is the password you used when you created the channel.</p>\n\n          </div>"}, "last_serial": 5460914, "releases": {"1.5": [{"comment_text": "", "digests": {"md5": "821856440ea118e275ee8809fbba0a90", "sha256": "8cb8da87fc4e695e7d08b500121db9871a8495e5bb65ed8c7fdafa6e59ae2d75"}, "downloads": -1, "filename": "QChatterPyClient-1.5-py3.6.egg", "has_sig": false, "md5_digest": "821856440ea118e275ee8809fbba0a90", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 12614, "upload_time": "2019-05-23T23:38:38", "upload_time_iso_8601": "2019-05-23T23:38:38.034362Z", "url": "https://files.pythonhosted.org/packages/84/eb/c2756a590415dd7183c40edd0e02554c7a79833e35ed6757430047bcb936/QChatterPyClient-1.5-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "92bec666d100a258a3038a6c8240c559", "sha256": "9336afae452b9ed59c954aefb94aaa69da62fd7d14739a31277afb4a6f87dd40"}, "downloads": -1, "filename": "QChatterPyClient-1.5.tar.gz", "has_sig": false, "md5_digest": "92bec666d100a258a3038a6c8240c559", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12787, "upload_time": "2019-05-23T23:38:39", "upload_time_iso_8601": "2019-05-23T23:38:39.913172Z", "url": "https://files.pythonhosted.org/packages/5c/2f/8b118b705cb425183ff7df5d56dda084e065d2e504950063f984ac9aa8c3/QChatterPyClient-1.5.tar.gz", "yanked": false}], "1.6": [{"comment_text": "", "digests": {"md5": "d067f27e6fcc15199a8d6bed4e727e78", "sha256": "4cab90b6e295daaac77bb012d74a2efc10c1d4c55ed0bf7e2303a36ff2c86a8e"}, "downloads": -1, "filename": "QChatterPyClient-1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "d067f27e6fcc15199a8d6bed4e727e78", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25558, "upload_time": "2019-06-28T09:59:28", "upload_time_iso_8601": "2019-06-28T09:59:28.058458Z", "url": "https://files.pythonhosted.org/packages/d7/73/c9e55c4cea4d71a5983f820e0a4307968f198e15e47a9b085c21f4783487/QChatterPyClient-1.6-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d067f27e6fcc15199a8d6bed4e727e78", "sha256": "4cab90b6e295daaac77bb012d74a2efc10c1d4c55ed0bf7e2303a36ff2c86a8e"}, "downloads": -1, "filename": "QChatterPyClient-1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "d067f27e6fcc15199a8d6bed4e727e78", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25558, "upload_time": "2019-06-28T09:59:28", "upload_time_iso_8601": "2019-06-28T09:59:28.058458Z", "url": "https://files.pythonhosted.org/packages/d7/73/c9e55c4cea4d71a5983f820e0a4307968f198e15e47a9b085c21f4783487/QChatterPyClient-1.6-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:10:01 2020"}