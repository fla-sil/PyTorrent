{"info": {"author": "Lum\u00edr Balhar", "author_email": "frenzy.madness@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# IPyWalrus\n\nIPyWalrus is a simple IPython (Jupyter) extension which enables you to use the walrus\noperator ([PEP 572 - Assignment Expressions](https://www.python.org/dev/peps/pep-0572/)) `:=`\nfor usual assignments in IPython or Jupyter.\n\nThis part of the PEP:\n\n```\nThere are a few places where assignment expressions are not allowed, in order to avoid ambiguities or user confusion:\n\nUnparenthesized assignment expressions are prohibited at the top level of an expression statement. Example:\n\ny := f(x)  # INVALID\n(y := f(x))  # Valid, though not recommended\n\nThis rule is included to simplify the choice for the user between an assignment statement and an assignment expression -- there is no syntactic position where both are valid.\n\n```\n\nis completely valid but my IPython sessions of Jupyter notebooks are full of cells like this one:\n\n![standard](images/standard.png)\n\nand because it does not work in pure Python\n\n![error](images/error.png)\n\nI've prepared a small extension which makes it work:\n\n![ipywalrus](images/ipywalrus.png)\n\n## Usage\n\nInstall the extension from pip or download the ipywalrus.py and put it somewhere in `PYTHONPATH`:\n\n```\n# pip install ipywalrus\n```\n\nand load it in IPython or Jupyter\n\n```\n%load_ext ipywalrus\n```\n\nIf you want to enable this extension permamently, create a default profile (if you don't have one already) `ipython profile create` and then add ipywalrus to the list of extensions in `~/.ipython/profile_default/ipython_config.py`.\n\n## License\n\nMIT\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/frenzymadness/ipywalrus", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ipywalrus", "package_url": "https://pypi.org/project/ipywalrus/", "platform": "", "project_url": "https://pypi.org/project/ipywalrus/", "project_urls": {"Homepage": "http://github.com/frenzymadness/ipywalrus"}, "release_url": "https://pypi.org/project/ipywalrus/0.2/", "requires_dist": null, "requires_python": ">=3.8", "summary": "('IPython extension which allows assignment expressions (:=)', 'at the top level of an expression statement')", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>IPyWalrus</h1>\n<p>IPyWalrus is a simple IPython (Jupyter) extension which enables you to use the walrus\noperator (<a href=\"https://www.python.org/dev/peps/pep-0572/\" rel=\"nofollow\">PEP 572 - Assignment Expressions</a>) <code>:=</code>\nfor usual assignments in IPython or Jupyter.</p>\n<p>This part of the PEP:</p>\n<pre><code>There are a few places where assignment expressions are not allowed, in order to avoid ambiguities or user confusion:\n\nUnparenthesized assignment expressions are prohibited at the top level of an expression statement. Example:\n\ny := f(x)  # INVALID\n(y := f(x))  # Valid, though not recommended\n\nThis rule is included to simplify the choice for the user between an assignment statement and an assignment expression -- there is no syntactic position where both are valid.\n\n</code></pre>\n<p>is completely valid but my IPython sessions of Jupyter notebooks are full of cells like this one:</p>\n<p><img alt=\"standard\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8eeffa475f29b4d068d0a4628bbf78cd86e7fd12/696d616765732f7374616e646172642e706e67\"></p>\n<p>and because it does not work in pure Python</p>\n<p><img alt=\"error\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec77bd2c29bfe8f91a077d5ea709fe6f2ce5dd41/696d616765732f6572726f722e706e67\"></p>\n<p>I've prepared a small extension which makes it work:</p>\n<p><img alt=\"ipywalrus\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/04754cc83f7f52b20b3f58e573d74e5197261963/696d616765732f69707977616c7275732e706e67\"></p>\n<h2>Usage</h2>\n<p>Install the extension from pip or download the ipywalrus.py and put it somewhere in <code>PYTHONPATH</code>:</p>\n<pre><code># pip install ipywalrus\n</code></pre>\n<p>and load it in IPython or Jupyter</p>\n<pre><code>%load_ext ipywalrus\n</code></pre>\n<p>If you want to enable this extension permamently, create a default profile (if you don't have one already) <code>ipython profile create</code> and then add ipywalrus to the list of extensions in <code>~/.ipython/profile_default/ipython_config.py</code>.</p>\n<h2>License</h2>\n<p>MIT</p>\n\n          </div>"}, "last_serial": 6903108, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "40d5f8c28816a8ea482d3132397acff3", "sha256": "91e707dfe49898ad1fc8e84be9a2c04f480a37fee992fc05b60d25b5307f81ed"}, "downloads": -1, "filename": "ipywalrus-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "40d5f8c28816a8ea482d3132397acff3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 3467, "upload_time": "2020-03-28T10:08:18", "upload_time_iso_8601": "2020-03-28T10:08:18.616773Z", "url": "https://files.pythonhosted.org/packages/32/21/ba1001c4e28b7c23c456f1170bcf4a2702a095cddae41cd042f6f8d5c430/ipywalrus-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30399d2655b069c420b2396600dcc817", "sha256": "079db087d751da05c1819b5c146fc65a0b98697107a1538fb7d514184ed702ca"}, "downloads": -1, "filename": "ipywalrus-0.1.tar.gz", "has_sig": false, "md5_digest": "30399d2655b069c420b2396600dcc817", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 2666, "upload_time": "2020-03-28T10:08:20", "upload_time_iso_8601": "2020-03-28T10:08:20.573817Z", "url": "https://files.pythonhosted.org/packages/d4/50/90b95579e5fcc3baaae80221431e6ab434d91eb6a175485d32d1bd8e76d5/ipywalrus-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "143b5bb53a26ab50b48c09e5df0d4349", "sha256": "5cd3ac89123d27eeaebf1f8e126dae174e6ec9ae6d5ec0e965ce44f1b61229b7"}, "downloads": -1, "filename": "ipywalrus-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "143b5bb53a26ab50b48c09e5df0d4349", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 3548, "upload_time": "2020-03-28T19:10:16", "upload_time_iso_8601": "2020-03-28T19:10:16.267208Z", "url": "https://files.pythonhosted.org/packages/ee/71/64e1ed8abd6eb981aa8ededbac196bccef287e730997179b617a1dcf4df9/ipywalrus-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e727d39c20517cb6a4d1983441bffef2", "sha256": "267761ccacbc742916933d7e8ce79d0f6628636c1bcbd2a2b9c92ac38d4441b5"}, "downloads": -1, "filename": "ipywalrus-0.2.tar.gz", "has_sig": false, "md5_digest": "e727d39c20517cb6a4d1983441bffef2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 2750, "upload_time": "2020-03-28T19:10:17", "upload_time_iso_8601": "2020-03-28T19:10:17.726786Z", "url": "https://files.pythonhosted.org/packages/2f/14/405c2d62ebc158a32a3e21c7f1d987360e1e258d9535e6844931f35ebf84/ipywalrus-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "143b5bb53a26ab50b48c09e5df0d4349", "sha256": "5cd3ac89123d27eeaebf1f8e126dae174e6ec9ae6d5ec0e965ce44f1b61229b7"}, "downloads": -1, "filename": "ipywalrus-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "143b5bb53a26ab50b48c09e5df0d4349", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 3548, "upload_time": "2020-03-28T19:10:16", "upload_time_iso_8601": "2020-03-28T19:10:16.267208Z", "url": "https://files.pythonhosted.org/packages/ee/71/64e1ed8abd6eb981aa8ededbac196bccef287e730997179b617a1dcf4df9/ipywalrus-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e727d39c20517cb6a4d1983441bffef2", "sha256": "267761ccacbc742916933d7e8ce79d0f6628636c1bcbd2a2b9c92ac38d4441b5"}, "downloads": -1, "filename": "ipywalrus-0.2.tar.gz", "has_sig": false, "md5_digest": "e727d39c20517cb6a4d1983441bffef2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 2750, "upload_time": "2020-03-28T19:10:17", "upload_time_iso_8601": "2020-03-28T19:10:17.726786Z", "url": "https://files.pythonhosted.org/packages/2f/14/405c2d62ebc158a32a3e21c7f1d987360e1e258d9535e6844931f35ebf84/ipywalrus-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:23 2020"}