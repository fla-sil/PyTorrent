{"info": {"author": "Derrick Gilland", "author_email": "dgilland@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "*******\nomdb.py\n*******\n\n|version| |travis| |coveralls| |license|\n\nPython wrapper around ``The Open Movie Database API`` (a.k.a. ``OMDb API``): http://omdbapi.com/\n\n**NOTE:** This library and its author are not endorsed by or affiliated with `OMDbAPI.com <http://omdbapi.com/>`_.\n\n\nInstallation\n============\n\nUsing ``pip``:\n\n\n::\n\n\tpip install omdb\n\n\nDependencies\n============\n\n- requests >= 2.0.1\n\n\nAPI\n===\n\nEach ``omdb.py`` method supports the same parameters as the ``OMDb API``.\n\n\nParamters\n---------\n\n=================  ==================  =======================  ===================================================================\nOMDb API Param     omdb.py Param       Value                    Description\n=================  ==================  =======================  ===================================================================\n``s``              ``search``          string **(optional)**    title of media to search for\n``i``              ``imdbid``          string **(optional)**    a valid IMDb ID\n``t``              ``title``           string **(optional)**    title of media to return\n``y``              ``year``            year **(optional)**      year of media\n``page``           ``page``            page **(optional)**      page to return\n``Season``         ``season``          season **(optional)**    season number\n``Episode``        ``episode``         episode **(optional)**   episode number\n``type``           ``media_type``      string **(optional)**    media type to return (one of ``movie``, ``episode``, or ``series``)\n``plot=full``      ``fullplot=True``   ``full``                 include extended plot\n``plot=short``     ``fullplot=False``  ``short``                include short plot **(default)**\n``tomatoes=true``  ``tomatoes=True``   ``true`` **(optional)**  add Rotten Tomatoes data to response\n=================  ==================  =======================  ===================================================================\n\n**NOTE:** By default all ``OMDb API`` responses are formatted as ``JSON``. However, ``OMDb API`` also supports responses formatted as ``XML``. Since ``omdb.py`` will handle ``JSON`` to ``dict`` conversion automatically, it's generally not necessary (nor is it supported by the main ``ombd.py`` methods) to return ``XML`` formatted responses. But this can be accomplished by directly using ``omdb.request``:\n\n\n.. code-block:: python\n\n\timport omdb\n\n\t# must use OMDb API parameters\n\tres = omdb.request(t='True Grit', y=1969, r='xml')\n\txml_content = res.content\n\n\nMethods\n-------\n\nAll methods are accessible via:\n\n\n.. code-block:: python\n\n\timport omdb\n\n\t# omdb.<method>\n\n=====================================  =======================================================================================  ==========\nMethod                                 Description                                                                              Returns\n=====================================  =======================================================================================  ==========\n``get(**params)``                      Generic request to OMDb API (requires keyword argument passing of all parameters).       ``dict``\n``search(search, **params)``           Search by string.                                                                        ``list``\n``search_movie(search, **params)``     Search movies by string.                                                                 ``list``\n``search_episode(search, **params)``   Search episodes by string.                                                               ``list``\n``search_series(search, **params)``    Search series by string.                                                                 ``list``\n``imdbid(imdbid, **params)``           Get by IMDB ID                                                                           ``dict``\n``title(title, **params)``             Get by title                                                                             ``dict``\n``set_default(key, default)``          Set default request parameter                                                            ``None``\n=====================================  =======================================================================================  ==========\n\n\nClient\n------\n\nInstead of using the ``omdb`` module to access the OMDb API, one can create an ``OMDBClient`` instance:\n\n\n.. code-block:: python\n\n    from omdb import OMDBClient\n\n    client = OMDBClient(apikey=API_KEY)\n\n=============================  =========================================================================================  =========================\nClass Methods                  Description                                                                                Returns\n=============================  =========================================================================================  =========================\n``get(**omdb_params)``         Generic request to OMDb API which can be used for any type of query.                       ``list`` or ``dict``\n``request(**omdbapi_params)``  Lower-level request to OMDb API which accepts URL query parameters supported by OMDb API.  ``request.Response``\n``set_default(key, default)``  Set default request parameter.                                                             ``None``\n=============================  =========================================================================================  =========================\n\n\nAPI Data\n--------\n\nAPI data returned from the ``OMDb API`` is returned as a dictionary with their fields converted from ``CamelCase`` to ``underscore_case``.\n\n\nSearch Model Fields\n~~~~~~~~~~~~~~~~~~~\n\n==============  =============\nOMDb API Field  omdb.py Field\n==============  =============\n``Title``       ``title``\n``Year``        ``year``\n``Type``        ``type``\n``imdbID``      ``imdb_id``\n==============  =============\n\n\nGet Model Fields (tomatoes=False)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n==============  ===============\nOMDb API Field  omdb.py Field\n==============  ===============\n``Title``       ``title``\n``Year``        ``year``\n``Type``        ``type``\n``Actors``      ``actors``\n``Awards``      ``awards``\n``Country``     ``country``\n``Director``    ``director``\n``Genre``       ``genre``\n``Episode``     ``episode``\n``Episodes``    ``episodes``\n``Season``      ``season``\n``SeriesID``    ``series_id``\n``Language``    ``language``\n``Metascore``   ``metascore``\n``Plot``        ``plot``\n``Poster``      ``poster``\n``Rated``       ``rated``\n``Ratings``     ``ratings``\n``Released``    ``released``\n``Response``    ``response``\n``Runtime``     ``runtime``\n``Writer``      ``writer``\n``imdbID``      ``imdb_id``\n``imdbRating``  ``imdb_rating``\n``imdbVotes``   ``imdb_votes``\n==============  ===============\n\n\nGet Model Fields (tomatoes=True)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n=====================  =======================\nOMDb API Field         omdb.py Field\n=====================  =======================\n``Title``              ``title``\n``Year``               ``year``\n``Type``               ``type``\n``Actors``             ``actors``\n``Awards``             ``awards``\n``Country``            ``country``\n``Director``           ``director``\n``Genre``              ``genre``\n``Episode``            ``episode``\n``Season``             ``season``\n``SeriesID``           ``series_id``\n``Language``           ``language``\n``Metascore``          ``metascore``\n``Plot``               ``plot``\n``Poster``             ``poster``\n``Rated``              ``rated``\n``Ratings``            ``ratings``\n``Released``           ``released``\n``Runtime``            ``runtime``\n``Writer``             ``writer``\n``imdbID``             ``imdb_id``\n``imdbRating``         ``imdb_rating``\n``imdbVotes``          ``imdb_votes``\n``BoxOffice``          ``box_office``\n``DVD``                ``dvd``\n``Production``         ``production``\n``Website``            ``website``\n``tomatoConsensus``    ``tomato_consensus``\n``tomatoFresh``        ``tomato_fresh``\n``tomatoImage``        ``tomato_image``\n``tomatoMeter``        ``tomato_meter``\n``tomatoRating``       ``tomato_rating``\n``tomatoReviews``      ``tomato_reviews``\n``tomatoRotten``       ``tomato_rotten``\n``tomatoUserMeter``    ``tomato_user_meter``\n``tomatoUserRating``   ``tomato_user_rating``\n``tomatoUserReviews``  ``tomato_user_reviews``\n=====================  =======================\n\n\nUsage\n=====\n\n\nGeneral Import\n--------------\n\n\n.. code-block:: python\n\n\timport omdb\n\n\n.. note::\n\n    All functions below support a ``timeout`` keyword argument that will be forwarded to the underlying ``requests.get`` function call. You can also set a global default using ``omdb.set_default('timeout', <timeout>)`` that will be used when ``timeout`` is not explicitly provided.\n\nAPI Key\n-------\n\nUsage of the OMDb API currently requires an API key. Set the OMDb API key with ``omdb.set_default`` or when creating a new ``omdb.OMDBClient`` instance:\n\n.. code-block:: python\n\n    # if using the module level client\n    omdb.set_default('apikey', API_KEY)\n\n    # if creating a new client instance\n    client = omdb.OMDBClient(apikey=API_KEY)\n\n\nomdb.get()\n----------\n\n\n.. code-block:: python\n\n\t# include full plot and Rotten Tomatoes data\n\tomdb.get(title='True Grit', year=1969, fullplot=True, tomatoes=True)\n\n\t# set timeout of 5 seconds for this request\n\tomdb.get(title='True Grit', year=1969, fullplot=True, tomatoes=True, timeout=5)\n\n\nomdb.search()\n-------------\n\n\n.. code-block:: python\n\n\t# search by string\n\tomdb.search('True Grit')\n\tomdb.search('True Grit', timeout=5)\n\tomdb.search('true', page=2)\n\n\nomdb.search_movie()\n-------------------\n\n\n.. code-block:: python\n\n\t# search movies by string\n\tomdb.search_movie('True Grit')\n\tomdb.search_movie('True Grit', timeout=5)\n\tomdb.search_movie('true', page=2)\n\n\nomdb.search_episode()\n---------------------\n\n\n.. code-block:: python\n\n\t# search episodes by string\n\tomdb.search_episode('True Grit')\n\tomdb.search_episode('True Grit', timeout=5)\n\tomdb.search_episode('true', page=2)\n\n\nomdb.search_series()\n--------------------\n\n\n.. code-block:: python\n\n\t# search series by string\n\tomdb.search_series('True Grit')\n\tomdb.search_series('True Grit', timeout=5)\n\tomdb.search_series('true', page=2)\n\n\nomdb.imdbid()\n-------------\n\n\n.. code-block:: python\n\n\t# get by IMDB id\n\tomdb.imdbid('tt0065126')\n\tomdb.imdbid('tt0065126', timeout=5)\n\n\nomdb.title()\n------------\n\n\n.. code-block:: python\n\n\t# get by title\n\tomdb.title('True Grit')\n\tomdb.title('True Grit', timeout=5)\n\n\nomdb.set_default()\n------------------\n\n\n.. code-block:: python\n\n\t# include tomatoes data by default\n\tomdb.set_default('tomatoes', True)\n\tomdb.title('True Grit') == omdb.title('True Grit', tomatoes=True)\n\n\t# set a global timeout of 5 seconds for all HTTP requests\n\tomdb.set_default('timeout', 5)\n\n\nomdb.request()\n--------------\n\n\n.. code-block:: python\n\n\t# lower level API request\n\tomdb.request(t='True Grit', y=1969, plot='full', tomatoes='true', timeout=5)\n\n\n**Returns:**\n\nA ``requests.Response`` object.\n\n\nErrors and Exceptions\n=====================\n\nUnder the hood, ``omdb.py`` uses the `requests <http://www.python-requests.org/>`_ library. For a listing of explicit exceptions raised by ``requests``, see `Requests: Errors and Exceptions <http://www.python-requests.org/en/latest/user/quickstart/#errors-and-exceptions>`_.\n\nBy default ``requests`` will not raise an ``Exception`` when an HTTP response's status code is not ``200``. However, ``omdb.py`` *WILL* raise an ``requests.exceptions.HTTPError`` error for any response with a non-200 status code.\n\n\n.. |version| image:: http://img.shields.io/pypi/v/omdb.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/omdb\n\n.. |travis| image:: http://img.shields.io/travis/dgilland/omdb.py/master.svg?style=flat-square\n    :target: https://travis-ci.org/dgilland/omdb.py\n\n.. |coveralls| image:: http://img.shields.io/coveralls/dgilland/omdb.py/master.svg?style=flat-square\n    :target: https://coveralls.io/r/dgilland/omdb.py\n\n.. |license| image:: http://img.shields.io/pypi/l/omdb.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/omdb\n\n\nChangelog\n=========\n\n\nv0.10.1 (2018-12-10)\n--------------------\n\n- Fix mishandling of ``fullplot``, ``tomatoes``, and ``timeout`` parameters in ``OMDBClient.get()`` that did not work correctly in conjuction with ``OMDBClient.set_default()``.\n- Fix mishandling of ``type`` parameter which was not being serialized to API request.\n\n\nv0.10.0 (2018-04-08)\n--------------------\n\n- Add methods to ``OMDBClient`` that mirror module functions:\n\n  - ``search()``\n  - ``search_movie()``\n  - ``search_episode()``\n  - ``search_series()``\n  - ``imdbid()``\n  - ``title()``\n\n\nv0.9.1 (2018-03-24)\n-------------------\n\n- Remove ``omdb.models`` module and return plain dictionaries from search results instead of custom model classes. (**breaking change**)\n\n  - Previously, one could access result items using attributes (e.g. ``result.title``) or indexes (e.g. ``result['title']``). Now, results are ``dict`` objects so must use ``result['title']``.\n\n- Rename ``omdb.Client`` to ``omdb.OMDBClient``. (**breaking change**)\n- Make ``omdb.request|omdb.OMDBClient.request`` use an API key if it's set.\n\n\nv0.8.1 (2017-08-10)\n-------------------\n\n- Add support for OMDb API key via ``omdb.set_default(apikey=API_KEY)`` or ``client = omdb.Client(apikey=API_KEY)``. Thanks oshribr_!\n- Add ``Epiodes`` OMDb API fields as ``episodes`` model field.\n\n\nv0.7.0 (2016-08-03)\n-------------------\n\n- Add support for ``page`` parameter to ``search``. Thanks taserian_!\n\n\nv0.6.0 (2016-05-22)\n-------------------\n\n- Add support for ``timeout`` parameter to all HTTP requests.\n\n\nv0.5.0 (2015-07-29)\n-------------------\n\n- Add support for ``Season``/``Episode`` OMDb parameter via ``season``/``episode`` arguments to every main API function. Thanks cihansahin_!\n\n\nv0.4.0 (2015-04-29)\n-------------------\n\n- Add ``Season``, ``Episode``, and ``SeriesID`` OMDb API fields as ``season``, ``episode``, and ``series_id`` model fields.\n\n\nv0.3.1 (2015-01-27)\n-------------------\n\n- Add metadata to main module:\n\n    - ``__title__``\n    - ``__summary__``\n    - ``__url__``\n    - ``__version__``\n    - ``__author__``\n    - ``__email__``\n    - ``__license__``\n\n\nv0.3.0 (2015-01-13)\n-------------------\n\n- Add ``search_movie``.\n- Add ``search_episode``.\n- Add ``search_series``.\n- Add support for ``type`` OMDb parameter via ``media_type`` argument to every main API function.\n\n\nv0.2.0 (2014-10-16)\n-------------------\n\n- Update ``models.Item`` with additional ``OMDb API`` fields: ``Awards``, ``Country``, ``Language``, and ``Metascore``.\n- Add ``omdb.request`` method for easier access to raw request response.\n- Initialization of ``omdb.Client`` now accepts keyword arguments for API request parameter defaults. Previously, a ``dict`` object needed to be passed in.\n- Full PEP8 compliance.\n- Integrate ``tox`` testing into ``setup.py``.\n\n\nv0.1.1 (2014-02-09)\n-------------------\n\n- Python3 support. Thanks agronholm_!\n- PEP8 compliance excluding max-line-length. Thanks agronholm_!\n- Wheel support. Thanks agronholm_!\n\n\nv0.1.0 (2013-11-24)\n-------------------\n\n- Convert API response to data models (see omdb/models.py).\n- Add /tests folder and move appropriate doctests there.\n- Return empty data for ``search`` and ``get`` requests which return no record(s).\n- Add ``omdb.set_default()`` for setting default request parameters (e.g. ``set_default(tomatoes=True)`` to always include tomatoes data)\n\n\nv0.0.1 (2013-11-12)\n-------------------\n\n- Initial release.\n\n\n.. _agronholm: https://github.com/agronholm\n.. _cihansahin: https://github.com/cihansahin\n.. _taserian: https://github.com/taserian\n.. _oshribr: https://github.com/oshribr\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dgilland/omdb.py", "keywords": "omdb imdb movies", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "omdb", "package_url": "https://pypi.org/project/omdb/", "platform": "", "project_url": "https://pypi.org/project/omdb/", "project_urls": {"Homepage": "https://github.com/dgilland/omdb.py"}, "release_url": "https://pypi.org/project/omdb/0.10.1/", "requires_dist": ["requests (>=2.0.1)"], "requires_python": "", "summary": "Python wrapper for OMDb API: http://www.omdbapi.com/", "version": "0.10.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/omdb\" rel=\"nofollow\"><img alt=\"version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1dcde3d650f0e8d39ec78e74077c108455d24105/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f6f6d64622e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://travis-ci.org/dgilland/omdb.py\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ebc1c0db582dabb7deee51ac61169a135b0870af/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f6467696c6c616e642f6f6d64622e70792f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://coveralls.io/r/dgilland/omdb.py\" rel=\"nofollow\"><img alt=\"coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f4153df8378d7a4feb4103abb2455e8e9c1889c6/687474703a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6467696c6c616e642f6f6d64622e70792f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://pypi.python.org/pypi/omdb\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/346f52dc18d3a321cc1ef781a7441b0d568fb617/687474703a2f2f696d672e736869656c64732e696f2f707970692f6c2f6f6d64622e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<p>Python wrapper around <tt>The Open Movie Database API</tt> (a.k.a. <tt>OMDb API</tt>): <a href=\"http://omdbapi.com/\" rel=\"nofollow\">http://omdbapi.com/</a></p>\n<p><strong>NOTE:</strong> This library and its author are not endorsed by or affiliated with <a href=\"http://omdbapi.com/\" rel=\"nofollow\">OMDbAPI.com</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Using <tt>pip</tt>:</p>\n<pre>pip install omdb\n</pre>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li>requests &gt;= 2.0.1</li>\n</ul>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n<p>Each <tt>omdb.py</tt> method supports the same parameters as the <tt>OMDb API</tt>.</p>\n<div id=\"paramters\">\n<h3>Paramters</h3>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>OMDb API Param</th>\n<th>omdb.py Param</th>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>s</tt></td>\n<td><tt>search</tt></td>\n<td>string <strong>(optional)</strong></td>\n<td>title of media to search for</td>\n</tr>\n<tr><td><tt>i</tt></td>\n<td><tt>imdbid</tt></td>\n<td>string <strong>(optional)</strong></td>\n<td>a valid IMDb ID</td>\n</tr>\n<tr><td><tt>t</tt></td>\n<td><tt>title</tt></td>\n<td>string <strong>(optional)</strong></td>\n<td>title of media to return</td>\n</tr>\n<tr><td><tt>y</tt></td>\n<td><tt>year</tt></td>\n<td>year <strong>(optional)</strong></td>\n<td>year of media</td>\n</tr>\n<tr><td><tt>page</tt></td>\n<td><tt>page</tt></td>\n<td>page <strong>(optional)</strong></td>\n<td>page to return</td>\n</tr>\n<tr><td><tt>Season</tt></td>\n<td><tt>season</tt></td>\n<td>season <strong>(optional)</strong></td>\n<td>season number</td>\n</tr>\n<tr><td><tt>Episode</tt></td>\n<td><tt>episode</tt></td>\n<td>episode <strong>(optional)</strong></td>\n<td>episode number</td>\n</tr>\n<tr><td><tt>type</tt></td>\n<td><tt>media_type</tt></td>\n<td>string <strong>(optional)</strong></td>\n<td>media type to return (one of <tt>movie</tt>, <tt>episode</tt>, or <tt>series</tt>)</td>\n</tr>\n<tr><td><tt>plot=full</tt></td>\n<td><tt>fullplot=True</tt></td>\n<td><tt>full</tt></td>\n<td>include extended plot</td>\n</tr>\n<tr><td><tt>plot=short</tt></td>\n<td><tt>fullplot=False</tt></td>\n<td><tt>short</tt></td>\n<td>include short plot <strong>(default)</strong></td>\n</tr>\n<tr><td><tt>tomatoes=true</tt></td>\n<td><tt>tomatoes=True</tt></td>\n<td><tt>true</tt> <strong>(optional)</strong></td>\n<td>add Rotten Tomatoes data to response</td>\n</tr>\n</tbody>\n</table>\n<p><strong>NOTE:</strong> By default all <tt>OMDb API</tt> responses are formatted as <tt>JSON</tt>. However, <tt>OMDb API</tt> also supports responses formatted as <tt>XML</tt>. Since <tt>omdb.py</tt> will handle <tt>JSON</tt> to <tt>dict</tt> conversion automatically, it\u2019s generally not necessary (nor is it supported by the main <tt>ombd.py</tt> methods) to return <tt>XML</tt> formatted responses. But this can be accomplished by directly using <tt>omdb.request</tt>:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">omdb</span>\n\n<span class=\"c1\"># must use OMDb API parameters</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"o\">=</span><span class=\"s1\">'True Grit'</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">1969</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"o\">=</span><span class=\"s1\">'xml'</span><span class=\"p\">)</span>\n<span class=\"n\">xml_content</span> <span class=\"o\">=</span> <span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">content</span>\n</pre>\n</div>\n<div id=\"methods\">\n<h3>Methods</h3>\n<p>All methods are accessible via:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">omdb</span>\n\n<span class=\"c1\"># omdb.&lt;method&gt;</span>\n</pre>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Method</th>\n<th>Description</th>\n<th>Returns</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt><span class=\"pre\">get(**params)</span></tt></td>\n<td>Generic request to OMDb API (requires keyword argument passing of all parameters).</td>\n<td><tt>dict</tt></td>\n</tr>\n<tr><td><tt>search(search, **params)</tt></td>\n<td>Search by string.</td>\n<td><tt>list</tt></td>\n</tr>\n<tr><td><tt>search_movie(search, **params)</tt></td>\n<td>Search movies by string.</td>\n<td><tt>list</tt></td>\n</tr>\n<tr><td><tt>search_episode(search, **params)</tt></td>\n<td>Search episodes by string.</td>\n<td><tt>list</tt></td>\n</tr>\n<tr><td><tt>search_series(search, **params)</tt></td>\n<td>Search series by string.</td>\n<td><tt>list</tt></td>\n</tr>\n<tr><td><tt>imdbid(imdbid, **params)</tt></td>\n<td>Get by IMDB ID</td>\n<td><tt>dict</tt></td>\n</tr>\n<tr><td><tt>title(title, **params)</tt></td>\n<td>Get by title</td>\n<td><tt>dict</tt></td>\n</tr>\n<tr><td><tt>set_default(key, default)</tt></td>\n<td>Set default request parameter</td>\n<td><tt>None</tt></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"client\">\n<h3>Client</h3>\n<p>Instead of using the <tt>omdb</tt> module to access the OMDb API, one can create an <tt>OMDBClient</tt> instance:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">omdb</span> <span class=\"kn\">import</span> <span class=\"n\">OMDBClient</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">OMDBClient</span><span class=\"p\">(</span><span class=\"n\">apikey</span><span class=\"o\">=</span><span class=\"n\">API_KEY</span><span class=\"p\">)</span>\n</pre>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Class Methods</th>\n<th>Description</th>\n<th>Returns</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt><span class=\"pre\">get(**omdb_params)</span></tt></td>\n<td>Generic request to OMDb API which can be used for any type of query.</td>\n<td><tt>list</tt> or <tt>dict</tt></td>\n</tr>\n<tr><td><tt><span class=\"pre\">request(**omdbapi_params)</span></tt></td>\n<td>Lower-level request to OMDb API which accepts URL query parameters supported by OMDb API.</td>\n<td><tt>request.Response</tt></td>\n</tr>\n<tr><td><tt>set_default(key, default)</tt></td>\n<td>Set default request parameter.</td>\n<td><tt>None</tt></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"api-data\">\n<h3>API Data</h3>\n<p>API data returned from the <tt>OMDb API</tt> is returned as a dictionary with their fields converted from <tt>CamelCase</tt> to <tt>underscore_case</tt>.</p>\n<div id=\"search-model-fields\">\n<h4>Search Model Fields</h4>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>OMDb API Field</th>\n<th>omdb.py Field</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>Title</tt></td>\n<td><tt>title</tt></td>\n</tr>\n<tr><td><tt>Year</tt></td>\n<td><tt>year</tt></td>\n</tr>\n<tr><td><tt>Type</tt></td>\n<td><tt>type</tt></td>\n</tr>\n<tr><td><tt>imdbID</tt></td>\n<td><tt>imdb_id</tt></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"get-model-fields-tomatoes-false\">\n<h4>Get Model Fields (tomatoes=False)</h4>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>OMDb API Field</th>\n<th>omdb.py Field</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>Title</tt></td>\n<td><tt>title</tt></td>\n</tr>\n<tr><td><tt>Year</tt></td>\n<td><tt>year</tt></td>\n</tr>\n<tr><td><tt>Type</tt></td>\n<td><tt>type</tt></td>\n</tr>\n<tr><td><tt>Actors</tt></td>\n<td><tt>actors</tt></td>\n</tr>\n<tr><td><tt>Awards</tt></td>\n<td><tt>awards</tt></td>\n</tr>\n<tr><td><tt>Country</tt></td>\n<td><tt>country</tt></td>\n</tr>\n<tr><td><tt>Director</tt></td>\n<td><tt>director</tt></td>\n</tr>\n<tr><td><tt>Genre</tt></td>\n<td><tt>genre</tt></td>\n</tr>\n<tr><td><tt>Episode</tt></td>\n<td><tt>episode</tt></td>\n</tr>\n<tr><td><tt>Episodes</tt></td>\n<td><tt>episodes</tt></td>\n</tr>\n<tr><td><tt>Season</tt></td>\n<td><tt>season</tt></td>\n</tr>\n<tr><td><tt>SeriesID</tt></td>\n<td><tt>series_id</tt></td>\n</tr>\n<tr><td><tt>Language</tt></td>\n<td><tt>language</tt></td>\n</tr>\n<tr><td><tt>Metascore</tt></td>\n<td><tt>metascore</tt></td>\n</tr>\n<tr><td><tt>Plot</tt></td>\n<td><tt>plot</tt></td>\n</tr>\n<tr><td><tt>Poster</tt></td>\n<td><tt>poster</tt></td>\n</tr>\n<tr><td><tt>Rated</tt></td>\n<td><tt>rated</tt></td>\n</tr>\n<tr><td><tt>Ratings</tt></td>\n<td><tt>ratings</tt></td>\n</tr>\n<tr><td><tt>Released</tt></td>\n<td><tt>released</tt></td>\n</tr>\n<tr><td><tt>Response</tt></td>\n<td><tt>response</tt></td>\n</tr>\n<tr><td><tt>Runtime</tt></td>\n<td><tt>runtime</tt></td>\n</tr>\n<tr><td><tt>Writer</tt></td>\n<td><tt>writer</tt></td>\n</tr>\n<tr><td><tt>imdbID</tt></td>\n<td><tt>imdb_id</tt></td>\n</tr>\n<tr><td><tt>imdbRating</tt></td>\n<td><tt>imdb_rating</tt></td>\n</tr>\n<tr><td><tt>imdbVotes</tt></td>\n<td><tt>imdb_votes</tt></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"get-model-fields-tomatoes-true\">\n<h4>Get Model Fields (tomatoes=True)</h4>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>OMDb API Field</th>\n<th>omdb.py Field</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>Title</tt></td>\n<td><tt>title</tt></td>\n</tr>\n<tr><td><tt>Year</tt></td>\n<td><tt>year</tt></td>\n</tr>\n<tr><td><tt>Type</tt></td>\n<td><tt>type</tt></td>\n</tr>\n<tr><td><tt>Actors</tt></td>\n<td><tt>actors</tt></td>\n</tr>\n<tr><td><tt>Awards</tt></td>\n<td><tt>awards</tt></td>\n</tr>\n<tr><td><tt>Country</tt></td>\n<td><tt>country</tt></td>\n</tr>\n<tr><td><tt>Director</tt></td>\n<td><tt>director</tt></td>\n</tr>\n<tr><td><tt>Genre</tt></td>\n<td><tt>genre</tt></td>\n</tr>\n<tr><td><tt>Episode</tt></td>\n<td><tt>episode</tt></td>\n</tr>\n<tr><td><tt>Season</tt></td>\n<td><tt>season</tt></td>\n</tr>\n<tr><td><tt>SeriesID</tt></td>\n<td><tt>series_id</tt></td>\n</tr>\n<tr><td><tt>Language</tt></td>\n<td><tt>language</tt></td>\n</tr>\n<tr><td><tt>Metascore</tt></td>\n<td><tt>metascore</tt></td>\n</tr>\n<tr><td><tt>Plot</tt></td>\n<td><tt>plot</tt></td>\n</tr>\n<tr><td><tt>Poster</tt></td>\n<td><tt>poster</tt></td>\n</tr>\n<tr><td><tt>Rated</tt></td>\n<td><tt>rated</tt></td>\n</tr>\n<tr><td><tt>Ratings</tt></td>\n<td><tt>ratings</tt></td>\n</tr>\n<tr><td><tt>Released</tt></td>\n<td><tt>released</tt></td>\n</tr>\n<tr><td><tt>Runtime</tt></td>\n<td><tt>runtime</tt></td>\n</tr>\n<tr><td><tt>Writer</tt></td>\n<td><tt>writer</tt></td>\n</tr>\n<tr><td><tt>imdbID</tt></td>\n<td><tt>imdb_id</tt></td>\n</tr>\n<tr><td><tt>imdbRating</tt></td>\n<td><tt>imdb_rating</tt></td>\n</tr>\n<tr><td><tt>imdbVotes</tt></td>\n<td><tt>imdb_votes</tt></td>\n</tr>\n<tr><td><tt>BoxOffice</tt></td>\n<td><tt>box_office</tt></td>\n</tr>\n<tr><td><tt>DVD</tt></td>\n<td><tt>dvd</tt></td>\n</tr>\n<tr><td><tt>Production</tt></td>\n<td><tt>production</tt></td>\n</tr>\n<tr><td><tt>Website</tt></td>\n<td><tt>website</tt></td>\n</tr>\n<tr><td><tt>tomatoConsensus</tt></td>\n<td><tt>tomato_consensus</tt></td>\n</tr>\n<tr><td><tt>tomatoFresh</tt></td>\n<td><tt>tomato_fresh</tt></td>\n</tr>\n<tr><td><tt>tomatoImage</tt></td>\n<td><tt>tomato_image</tt></td>\n</tr>\n<tr><td><tt>tomatoMeter</tt></td>\n<td><tt>tomato_meter</tt></td>\n</tr>\n<tr><td><tt>tomatoRating</tt></td>\n<td><tt>tomato_rating</tt></td>\n</tr>\n<tr><td><tt>tomatoReviews</tt></td>\n<td><tt>tomato_reviews</tt></td>\n</tr>\n<tr><td><tt>tomatoRotten</tt></td>\n<td><tt>tomato_rotten</tt></td>\n</tr>\n<tr><td><tt>tomatoUserMeter</tt></td>\n<td><tt>tomato_user_meter</tt></td>\n</tr>\n<tr><td><tt>tomatoUserRating</tt></td>\n<td><tt>tomato_user_rating</tt></td>\n</tr>\n<tr><td><tt>tomatoUserReviews</tt></td>\n<td><tt>tomato_user_reviews</tt></td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"general-import\">\n<h3>General Import</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">omdb</span>\n</pre>\n<div>\n<p>Note</p>\n<p>All functions below support a <tt>timeout</tt> keyword argument that will be forwarded to the underlying <tt>requests.get</tt> function call. You can also set a global default using <tt><span class=\"pre\">omdb.set_default('timeout',</span> &lt;timeout&gt;)</tt> that will be used when <tt>timeout</tt> is not explicitly provided.</p>\n</div>\n</div>\n<div id=\"api-key\">\n<h3>API Key</h3>\n<p>Usage of the OMDb API currently requires an API key. Set the OMDb API key with <tt>omdb.set_default</tt> or when creating a new <tt>omdb.OMDBClient</tt> instance:</p>\n<pre><span class=\"c1\"># if using the module level client</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">set_default</span><span class=\"p\">(</span><span class=\"s1\">'apikey'</span><span class=\"p\">,</span> <span class=\"n\">API_KEY</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># if creating a new client instance</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">OMDBClient</span><span class=\"p\">(</span><span class=\"n\">apikey</span><span class=\"o\">=</span><span class=\"n\">API_KEY</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"omdb-get\">\n<h3>omdb.get()</h3>\n<pre><span class=\"c1\"># include full plot and Rotten Tomatoes data</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'True Grit'</span><span class=\"p\">,</span> <span class=\"n\">year</span><span class=\"o\">=</span><span class=\"mi\">1969</span><span class=\"p\">,</span> <span class=\"n\">fullplot</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">tomatoes</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set timeout of 5 seconds for this request</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'True Grit'</span><span class=\"p\">,</span> <span class=\"n\">year</span><span class=\"o\">=</span><span class=\"mi\">1969</span><span class=\"p\">,</span> <span class=\"n\">fullplot</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">tomatoes</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"omdb-search\">\n<h3>omdb.search()</h3>\n<pre><span class=\"c1\"># search by string</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s1\">'True Grit'</span><span class=\"p\">)</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s1\">'True Grit'</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s1\">'true'</span><span class=\"p\">,</span> <span class=\"n\">page</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"omdb-search-movie\">\n<h3>omdb.search_movie()</h3>\n<pre><span class=\"c1\"># search movies by string</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">search_movie</span><span class=\"p\">(</span><span class=\"s1\">'True Grit'</span><span class=\"p\">)</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">search_movie</span><span class=\"p\">(</span><span class=\"s1\">'True Grit'</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">search_movie</span><span class=\"p\">(</span><span class=\"s1\">'true'</span><span class=\"p\">,</span> <span class=\"n\">page</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"omdb-search-episode\">\n<h3>omdb.search_episode()</h3>\n<pre><span class=\"c1\"># search episodes by string</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">search_episode</span><span class=\"p\">(</span><span class=\"s1\">'True Grit'</span><span class=\"p\">)</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">search_episode</span><span class=\"p\">(</span><span class=\"s1\">'True Grit'</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">search_episode</span><span class=\"p\">(</span><span class=\"s1\">'true'</span><span class=\"p\">,</span> <span class=\"n\">page</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"omdb-search-series\">\n<h3>omdb.search_series()</h3>\n<pre><span class=\"c1\"># search series by string</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">search_series</span><span class=\"p\">(</span><span class=\"s1\">'True Grit'</span><span class=\"p\">)</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">search_series</span><span class=\"p\">(</span><span class=\"s1\">'True Grit'</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">search_series</span><span class=\"p\">(</span><span class=\"s1\">'true'</span><span class=\"p\">,</span> <span class=\"n\">page</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"omdb-imdbid\">\n<h3>omdb.imdbid()</h3>\n<pre><span class=\"c1\"># get by IMDB id</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">imdbid</span><span class=\"p\">(</span><span class=\"s1\">'tt0065126'</span><span class=\"p\">)</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">imdbid</span><span class=\"p\">(</span><span class=\"s1\">'tt0065126'</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"omdb-title\">\n<h3>omdb.title()</h3>\n<pre><span class=\"c1\"># get by title</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'True Grit'</span><span class=\"p\">)</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'True Grit'</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"omdb-set-default\">\n<h3>omdb.set_default()</h3>\n<pre><span class=\"c1\"># include tomatoes data by default</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">set_default</span><span class=\"p\">(</span><span class=\"s1\">'tomatoes'</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'True Grit'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'True Grit'</span><span class=\"p\">,</span> <span class=\"n\">tomatoes</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set a global timeout of 5 seconds for all HTTP requests</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">set_default</span><span class=\"p\">(</span><span class=\"s1\">'timeout'</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"omdb-request\">\n<h3>omdb.request()</h3>\n<pre><span class=\"c1\"># lower level API request</span>\n<span class=\"n\">omdb</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"o\">=</span><span class=\"s1\">'True Grit'</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">1969</span><span class=\"p\">,</span> <span class=\"n\">plot</span><span class=\"o\">=</span><span class=\"s1\">'full'</span><span class=\"p\">,</span> <span class=\"n\">tomatoes</span><span class=\"o\">=</span><span class=\"s1\">'true'</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Returns:</strong></p>\n<p>A <tt>requests.Response</tt> object.</p>\n</div>\n</div>\n<div id=\"errors-and-exceptions\">\n<h2>Errors and Exceptions</h2>\n<p>Under the hood, <tt>omdb.py</tt> uses the <a href=\"http://www.python-requests.org/\" rel=\"nofollow\">requests</a> library. For a listing of explicit exceptions raised by <tt>requests</tt>, see <a href=\"http://www.python-requests.org/en/latest/user/quickstart/#errors-and-exceptions\" rel=\"nofollow\">Requests: Errors and Exceptions</a>.</p>\n<p>By default <tt>requests</tt> will not raise an <tt>Exception</tt> when an HTTP response\u2019s status code is not <tt>200</tt>. However, <tt>omdb.py</tt> <em>WILL</em> raise an <tt>requests.exceptions.HTTPError</tt> error for any response with a non-200 status code.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"v0-10-1-2018-12-10\">\n<h3>v0.10.1 (2018-12-10)</h3>\n<ul>\n<li>Fix mishandling of <tt>fullplot</tt>, <tt>tomatoes</tt>, and <tt>timeout</tt> parameters in <tt>OMDBClient.get()</tt> that did not work correctly in conjuction with <tt>OMDBClient.set_default()</tt>.</li>\n<li>Fix mishandling of <tt>type</tt> parameter which was not being serialized to API request.</li>\n</ul>\n</div>\n<div id=\"v0-10-0-2018-04-08\">\n<h3>v0.10.0 (2018-04-08)</h3>\n<ul>\n<li>Add methods to <tt>OMDBClient</tt> that mirror module functions:<ul>\n<li><tt>search()</tt></li>\n<li><tt>search_movie()</tt></li>\n<li><tt>search_episode()</tt></li>\n<li><tt>search_series()</tt></li>\n<li><tt>imdbid()</tt></li>\n<li><tt>title()</tt></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"v0-9-1-2018-03-24\">\n<h3>v0.9.1 (2018-03-24)</h3>\n<ul>\n<li>Remove <tt>omdb.models</tt> module and return plain dictionaries from search results instead of custom model classes. (<strong>breaking change</strong>)<ul>\n<li>Previously, one could access result items using attributes (e.g. <tt>result.title</tt>) or indexes (e.g. <tt><span class=\"pre\">result['title']</span></tt>). Now, results are <tt>dict</tt> objects so must use <tt><span class=\"pre\">result['title']</span></tt>.</li>\n</ul>\n</li>\n<li>Rename <tt>omdb.Client</tt> to <tt>omdb.OMDBClient</tt>. (<strong>breaking change</strong>)</li>\n<li>Make <tt>omdb.request|omdb.OMDBClient.request</tt> use an API key if it\u2019s set.</li>\n</ul>\n</div>\n<div id=\"v0-8-1-2017-08-10\">\n<h3>v0.8.1 (2017-08-10)</h3>\n<ul>\n<li>Add support for OMDb API key via <tt>omdb.set_default(apikey=API_KEY)</tt> or <tt>client = omdb.Client(apikey=API_KEY)</tt>. Thanks <a href=\"https://github.com/oshribr\" rel=\"nofollow\">oshribr</a>!</li>\n<li>Add <tt>Epiodes</tt> OMDb API fields as <tt>episodes</tt> model field.</li>\n</ul>\n</div>\n<div id=\"v0-7-0-2016-08-03\">\n<h3>v0.7.0 (2016-08-03)</h3>\n<ul>\n<li>Add support for <tt>page</tt> parameter to <tt>search</tt>. Thanks <a href=\"https://github.com/taserian\" rel=\"nofollow\">taserian</a>!</li>\n</ul>\n</div>\n<div id=\"v0-6-0-2016-05-22\">\n<h3>v0.6.0 (2016-05-22)</h3>\n<ul>\n<li>Add support for <tt>timeout</tt> parameter to all HTTP requests.</li>\n</ul>\n</div>\n<div id=\"v0-5-0-2015-07-29\">\n<h3>v0.5.0 (2015-07-29)</h3>\n<ul>\n<li>Add support for <tt>Season</tt>/<tt>Episode</tt> OMDb parameter via <tt>season</tt>/<tt>episode</tt> arguments to every main API function. Thanks <a href=\"https://github.com/cihansahin\" rel=\"nofollow\">cihansahin</a>!</li>\n</ul>\n</div>\n<div id=\"v0-4-0-2015-04-29\">\n<h3>v0.4.0 (2015-04-29)</h3>\n<ul>\n<li>Add <tt>Season</tt>, <tt>Episode</tt>, and <tt>SeriesID</tt> OMDb API fields as <tt>season</tt>, <tt>episode</tt>, and <tt>series_id</tt> model fields.</li>\n</ul>\n</div>\n<div id=\"v0-3-1-2015-01-27\">\n<h3>v0.3.1 (2015-01-27)</h3>\n<ul>\n<li><p>Add metadata to main module:</p>\n<blockquote>\n<ul>\n<li><tt>__title__</tt></li>\n<li><tt>__summary__</tt></li>\n<li><tt>__url__</tt></li>\n<li><tt>__version__</tt></li>\n<li><tt>__author__</tt></li>\n<li><tt>__email__</tt></li>\n<li><tt>__license__</tt></li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"v0-3-0-2015-01-13\">\n<h3>v0.3.0 (2015-01-13)</h3>\n<ul>\n<li>Add <tt>search_movie</tt>.</li>\n<li>Add <tt>search_episode</tt>.</li>\n<li>Add <tt>search_series</tt>.</li>\n<li>Add support for <tt>type</tt> OMDb parameter via <tt>media_type</tt> argument to every main API function.</li>\n</ul>\n</div>\n<div id=\"v0-2-0-2014-10-16\">\n<h3>v0.2.0 (2014-10-16)</h3>\n<ul>\n<li>Update <tt>models.Item</tt> with additional <tt>OMDb API</tt> fields: <tt>Awards</tt>, <tt>Country</tt>, <tt>Language</tt>, and <tt>Metascore</tt>.</li>\n<li>Add <tt>omdb.request</tt> method for easier access to raw request response.</li>\n<li>Initialization of <tt>omdb.Client</tt> now accepts keyword arguments for API request parameter defaults. Previously, a <tt>dict</tt> object needed to be passed in.</li>\n<li>Full PEP8 compliance.</li>\n<li>Integrate <tt>tox</tt> testing into <tt>setup.py</tt>.</li>\n</ul>\n</div>\n<div id=\"v0-1-1-2014-02-09\">\n<h3>v0.1.1 (2014-02-09)</h3>\n<ul>\n<li>Python3 support. Thanks <a href=\"https://github.com/agronholm\" rel=\"nofollow\">agronholm</a>!</li>\n<li>PEP8 compliance excluding max-line-length. Thanks <a href=\"https://github.com/agronholm\" rel=\"nofollow\">agronholm</a>!</li>\n<li>Wheel support. Thanks <a href=\"https://github.com/agronholm\" rel=\"nofollow\">agronholm</a>!</li>\n</ul>\n</div>\n<div id=\"v0-1-0-2013-11-24\">\n<h3>v0.1.0 (2013-11-24)</h3>\n<ul>\n<li>Convert API response to data models (see omdb/models.py).</li>\n<li>Add /tests folder and move appropriate doctests there.</li>\n<li>Return empty data for <tt>search</tt> and <tt>get</tt> requests which return no record(s).</li>\n<li>Add <tt>omdb.set_default()</tt> for setting default request parameters (e.g. <tt>set_default(tomatoes=True)</tt> to always include tomatoes data)</li>\n</ul>\n</div>\n<div id=\"v0-0-1-2013-11-12\">\n<h3>v0.0.1 (2013-11-12)</h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4583462, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "128130300346fb52acf802dd7f7b7681", "sha256": "7a6d9d00fbf857327151bb60307e549bcab0c323862944b4475e179b7f436c4d"}, "downloads": -1, "filename": "omdb-0.0.1.tar.gz", "has_sig": false, "md5_digest": "128130300346fb52acf802dd7f7b7681", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3077, "upload_time": "2013-11-13T02:08:33", "upload_time_iso_8601": "2013-11-13T02:08:33.821491Z", "url": "https://files.pythonhosted.org/packages/83/d8/0e0ea28febe1a5e9b1a191a6a71289692e8d850d1ef5fc9061980b3fd703/omdb-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "3827b237bcadedb63ec9879354341be9", "sha256": "a38361434908931d8823e0a8f0031c794ed5c8febcf9093edb68702a4de2e27a"}, "downloads": -1, "filename": "omdb-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3827b237bcadedb63ec9879354341be9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4471, "upload_time": "2013-11-25T02:39:05", "upload_time_iso_8601": "2013-11-25T02:39:05.664740Z", "url": "https://files.pythonhosted.org/packages/65/a3/ae1968686f5a89e2edac5e37fd8508d06767faefac0781f5d7d34abee929/omdb-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "130e3b6b3dab01c43c87dc0b3b77ef8e", "sha256": "6d0a7d7f155c5f28941f23a4e6b85c29c1f9c0884741e5391ace38b8fe8d4c2a"}, "downloads": -1, "filename": "omdb-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "130e3b6b3dab01c43c87dc0b3b77ef8e", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 5157, "upload_time": "2014-02-10T23:28:46", "upload_time_iso_8601": "2014-02-10T23:28:46.830142Z", "url": "https://files.pythonhosted.org/packages/24/68/4a9e2c3bd732f0d4b63aae7bbdf8d873cf91a9ee9987e77fc6cfd053e70f/omdb-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75f46b32c8d0cca2a5509abeaa95efec", "sha256": "83dee08307c541ce47e4e89beeae632180b7d2defb4f2f121e40700227f4c133"}, "downloads": -1, "filename": "omdb-0.1.1.tar.gz", "has_sig": false, "md5_digest": "75f46b32c8d0cca2a5509abeaa95efec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6482, "upload_time": "2014-02-10T04:54:40", "upload_time_iso_8601": "2014-02-10T04:54:40.873068Z", "url": "https://files.pythonhosted.org/packages/2e/fc/f70d4faf5b443bbec6dcaeeec2cbf2931976a110954dc29b46901e94b870/omdb-0.1.1.tar.gz", "yanked": false}], "0.10.0": [{"comment_text": "", "digests": {"md5": "f31803ef4a7dfcc2068fe32d3e545449", "sha256": "574e61722f8848cb3aa68ef4deb1b462b12949638e4419e844abb1d64a9ee3e7"}, "downloads": -1, "filename": "omdb-0.10.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f31803ef4a7dfcc2068fe32d3e545449", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13494, "upload_time": "2018-04-09T04:13:00", "upload_time_iso_8601": "2018-04-09T04:13:00.995349Z", "url": "https://files.pythonhosted.org/packages/5b/1e/c4896acd3cf84449b50f873c291dbd6b47204d73fa19b58df240d0aea409/omdb-0.10.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f2d85be8d0b497c265d3217c51166ec", "sha256": "2527a2cd5faf0822c6f68672cecf7e78ad65760ac2fe7a45c6ecda313748d3ae"}, "downloads": -1, "filename": "omdb-0.10.0.tar.gz", "has_sig": false, "md5_digest": "0f2d85be8d0b497c265d3217c51166ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22603, "upload_time": "2018-04-09T04:13:01", "upload_time_iso_8601": "2018-04-09T04:13:01.903740Z", "url": "https://files.pythonhosted.org/packages/f6/77/e27f78854104e14adacd48743b155b22ccf95ed1ccf4ae508d07498ef334/omdb-0.10.0.tar.gz", "yanked": false}], "0.10.1": [{"comment_text": "", "digests": {"md5": "eaf7deb42587c9260495a010211e47eb", "sha256": "2f44b25942f6ed4a2b51af3597417a8eaade30d2776cdbde9d9740cec8ff159c"}, "downloads": -1, "filename": "omdb-0.10.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eaf7deb42587c9260495a010211e47eb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9846, "upload_time": "2018-12-11T02:03:32", "upload_time_iso_8601": "2018-12-11T02:03:32.765457Z", "url": "https://files.pythonhosted.org/packages/d5/b9/818c582f11000771372b3d043eaafb76386ef5f7f3318c1fee18c595534e/omdb-0.10.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "156f430b043250e266ac5a4aa82a3b9a", "sha256": "eeac363f1c2eb634e4ae898e227dedae810cce9b7ceba7e90c00c9219ee8f23b"}, "downloads": -1, "filename": "omdb-0.10.1.tar.gz", "has_sig": false, "md5_digest": "156f430b043250e266ac5a4aa82a3b9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23185, "upload_time": "2018-12-11T02:03:34", "upload_time_iso_8601": "2018-12-11T02:03:34.075275Z", "url": "https://files.pythonhosted.org/packages/4f/be/ae1560e5f45c22df31b2ac293a3403097e844ac3aa7e05405e7afc9d2b4f/omdb-0.10.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "db5699cb9bca2e92bd61682ac99d72f8", "sha256": "da348cd5afa8a5dc25b993dfd5ea06d56bafe9ea2d30f39161ccd86cff61de13"}, "downloads": -1, "filename": "omdb-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "db5699cb9bca2e92bd61682ac99d72f8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10714, "upload_time": "2014-10-16T16:21:42", "upload_time_iso_8601": "2014-10-16T16:21:42.119447Z", "url": "https://files.pythonhosted.org/packages/83/45/5c194dd35ceaf9d36bf19ad647d8843478dba23d95f89d83773e1869089c/omdb-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4df85fdcd81b39fdc2d9ae6491cfaa58", "sha256": "fffce4cb4b1fa40533184f0f690fb294e6f4e5433199eca5d5feec1c453a6c8f"}, "downloads": -1, "filename": "omdb-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4df85fdcd81b39fdc2d9ae6491cfaa58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9425, "upload_time": "2014-10-16T16:21:44", "upload_time_iso_8601": "2014-10-16T16:21:44.942290Z", "url": "https://files.pythonhosted.org/packages/a5/df/2c63346c43c024322e7b64f7a4b11ee2ba87faf859f0611c45ef374ef976/omdb-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "30e60fbaee40af2330e4d948016afd04", "sha256": "7e093b0481e7c2af404cc595e302bc787837a901477cc8e6bf78b8baac0ff924"}, "downloads": -1, "filename": "omdb-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "30e60fbaee40af2330e4d948016afd04", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11103, "upload_time": "2015-01-14T00:31:07", "upload_time_iso_8601": "2015-01-14T00:31:07.999254Z", "url": "https://files.pythonhosted.org/packages/3e/2f/75d495d3fe09215d69db386a3465e29f7771e30d0eded4782acc843a8902/omdb-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2cd4fdda333cbd1f45d37f3ed0e3f811", "sha256": "5dc44e162c465a98d643ddcc0e9fb62df2b631019daedba4b13ba0a81bc61760"}, "downloads": -1, "filename": "omdb-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2cd4fdda333cbd1f45d37f3ed0e3f811", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9830, "upload_time": "2015-01-14T00:31:09", "upload_time_iso_8601": "2015-01-14T00:31:09.955582Z", "url": "https://files.pythonhosted.org/packages/45/49/381884b98cb4d479d2448b76de0ebf47857718a94afb3e33b02f0305c913/omdb-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "679079ebca77f70c9a5943eb27440e29", "sha256": "f5bff3c66a2dce3baf1b92926d05f7009143d9df8b106ee6a5709b7b5a531437"}, "downloads": -1, "filename": "omdb-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "679079ebca77f70c9a5943eb27440e29", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11085, "upload_time": "2015-01-27T15:51:10", "upload_time_iso_8601": "2015-01-27T15:51:10.438359Z", "url": "https://files.pythonhosted.org/packages/e6/dd/c28f257526c2de8569573d4ee5fd4eda10923f41aec1c95e34db90ee400c/omdb-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "475c42c854b3ebde3f8cab2a1ea2d86b", "sha256": "165e5a4339ef7dcaf589f3ec1c431539075bd7a31462ea3db5dbba7fb2dbe5b5"}, "downloads": -1, "filename": "omdb-0.3.1.tar.gz", "has_sig": false, "md5_digest": "475c42c854b3ebde3f8cab2a1ea2d86b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9886, "upload_time": "2015-01-27T15:51:12", "upload_time_iso_8601": "2015-01-27T15:51:12.852815Z", "url": "https://files.pythonhosted.org/packages/6b/be/ad1ef3dd615046de73b25a0ec9e0cb72a5e6e522c5692dafca303f9364fb/omdb-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "8082e2760de0bb6d06dd8ae09b877044", "sha256": "5747580c01bf9bbb8ea0d84cec10530b0b79216b533a5d2e09f7a2cfc4830323"}, "downloads": -1, "filename": "omdb-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8082e2760de0bb6d06dd8ae09b877044", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11564, "upload_time": "2015-04-29T17:17:34", "upload_time_iso_8601": "2015-04-29T17:17:34.660974Z", "url": "https://files.pythonhosted.org/packages/aa/4d/044990bcae8386ae44e2dadf191d853df8f2fe163924b7a5a7498a168a74/omdb-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9ba4c9682acda66319a287cc311d8e9", "sha256": "9f6fec727120e6b8b9b3697f68ffe0d771cbc87893567910946d82407816ce67"}, "downloads": -1, "filename": "omdb-0.4.0.tar.gz", "has_sig": false, "md5_digest": "e9ba4c9682acda66319a287cc311d8e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10259, "upload_time": "2015-04-29T17:17:37", "upload_time_iso_8601": "2015-04-29T17:17:37.285000Z", "url": "https://files.pythonhosted.org/packages/3a/9e/8187ea7a97e0bf7cd08eb8e6cc60ecbde1d4369bb9fbfff0be6943c86c7e/omdb-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "76d98a356f5732528c2631d1699e663a", "sha256": "ba1eb831618374bd3449f697f14a8ab27187d2b22e811448daa6918854a84b5b"}, "downloads": -1, "filename": "omdb-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "76d98a356f5732528c2631d1699e663a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11669, "upload_time": "2015-07-29T13:55:18", "upload_time_iso_8601": "2015-07-29T13:55:18.984379Z", "url": "https://files.pythonhosted.org/packages/df/0b/cef40e3db9fd173652e8e21be6d20ea08e7fb30cfc2fe89a24c399e9937c/omdb-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b94e859fe0878c857341c954ff9094b", "sha256": "bcfa9ed4158827623716d7776bb7c21f571aaba2df5cba99f887603711d67cd6"}, "downloads": -1, "filename": "omdb-0.5.0.tar.gz", "has_sig": false, "md5_digest": "5b94e859fe0878c857341c954ff9094b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10478, "upload_time": "2015-07-29T13:55:22", "upload_time_iso_8601": "2015-07-29T13:55:22.434492Z", "url": "https://files.pythonhosted.org/packages/81/4d/7049d7149b7b991615b6ed2228edf1aa50a30ee22dac2642850300be2677/omdb-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "da2ebaf8aae5d1fc5ca2da39ad41cc36", "sha256": "01a764d6bc71a764ff300106b863782d74df6e3e427d7cc8d1c60e9567455eba"}, "downloads": -1, "filename": "omdb-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "da2ebaf8aae5d1fc5ca2da39ad41cc36", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12220, "upload_time": "2016-05-23T00:56:58", "upload_time_iso_8601": "2016-05-23T00:56:58.587086Z", "url": "https://files.pythonhosted.org/packages/b5/b7/57409cf08ef78c70a66486dbce5f5aff709e5c7aa338e09885f220769cda/omdb-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "602e603e36128171172cb2b7826be112", "sha256": "5cb7f599461c2cf4e11f8cc3c52590e4759516026865f9ebd927367e192dd597"}, "downloads": -1, "filename": "omdb-0.6.0.tar.gz", "has_sig": false, "md5_digest": "602e603e36128171172cb2b7826be112", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10929, "upload_time": "2016-05-23T00:57:23", "upload_time_iso_8601": "2016-05-23T00:57:23.150387Z", "url": "https://files.pythonhosted.org/packages/81/18/8f9c54b14ea88408aff47fd74108f673dafbb4b03d92f89342972673ee85/omdb-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "ab978abdadf6c71fc59ef36462aa7b78", "sha256": "e8203a6833627245e004506061c77d817bfff4e1d1c443fb1052392229c713b6"}, "downloads": -1, "filename": "omdb-0.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ab978abdadf6c71fc59ef36462aa7b78", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12316, "upload_time": "2016-08-03T23:21:39", "upload_time_iso_8601": "2016-08-03T23:21:39.052178Z", "url": "https://files.pythonhosted.org/packages/a5/67/418d9380af7caaa1e8dc295123396c68d2179161fb61a248d9d3d7981eec/omdb-0.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "173bf8c1960957718b4cc56289bfc1eb", "sha256": "e9aec36babed923c24d7de8085511be8f57bbcd7108f107972c4ec8d6f59c311"}, "downloads": -1, "filename": "omdb-0.7.0.tar.gz", "has_sig": false, "md5_digest": "173bf8c1960957718b4cc56289bfc1eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11060, "upload_time": "2016-08-03T23:21:41", "upload_time_iso_8601": "2016-08-03T23:21:41.302816Z", "url": "https://files.pythonhosted.org/packages/46/55/d1c10a654d677730b62c268600fcc23fc13d1cdb021171d01e35c0f94d87/omdb-0.7.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "ae2013737589f95779ccb45ce745b96f", "sha256": "efcd346ee591f22af8daffdb4c59b0f5a90e58effbce3202a61ebb963cb73fdd"}, "downloads": -1, "filename": "omdb-0.8.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ae2013737589f95779ccb45ce745b96f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12588, "upload_time": "2017-08-11T02:46:34", "upload_time_iso_8601": "2017-08-11T02:46:34.158880Z", "url": "https://files.pythonhosted.org/packages/1d/5d/e61709d96857b3f71c9698e56ce377bbf6cc06d3714401786f37e3f27bf7/omdb-0.8.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2cf791d9e2c87ce283d47a94ef10984d", "sha256": "7baf298c375cb93559b4c19126dc01f7aac2b5c90897851e3d626b2c3b4ad589"}, "downloads": -1, "filename": "omdb-0.8.1.tar.gz", "has_sig": false, "md5_digest": "2cf791d9e2c87ce283d47a94ef10984d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11311, "upload_time": "2017-08-11T02:46:36", "upload_time_iso_8601": "2017-08-11T02:46:36.032821Z", "url": "https://files.pythonhosted.org/packages/be/4a/94b464b41fe244dda0f04dd10319374cf823cb7ebffee0f0015b5593c827/omdb-0.8.1.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "8bf743331e0b1dca52639b28748dd555", "sha256": "7fa4fdfdb2905d10389635733c7078f2572ceb37ada2ca1f84ca83f6d4fcab02"}, "downloads": -1, "filename": "omdb-0.9.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8bf743331e0b1dca52639b28748dd555", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13250, "upload_time": "2018-03-24T04:22:25", "upload_time_iso_8601": "2018-03-24T04:22:25.628970Z", "url": "https://files.pythonhosted.org/packages/f9/df/eef36e875804c2896df591c58d8c018d22318ad8e7b3c796eb9ec0ea58fc/omdb-0.9.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87e65b949e72dd7661cf7184bcf50830", "sha256": "3a6ba52b68677c2da1f39b9977d80c753492376c0f4a7631d7af6cead02a798e"}, "downloads": -1, "filename": "omdb-0.9.1.tar.gz", "has_sig": false, "md5_digest": "87e65b949e72dd7661cf7184bcf50830", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22333, "upload_time": "2018-03-24T04:22:26", "upload_time_iso_8601": "2018-03-24T04:22:26.464737Z", "url": "https://files.pythonhosted.org/packages/ee/81/022900819e827926dcd67d7a0aae411ce0717cfd22e06c99a0674829dc71/omdb-0.9.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eaf7deb42587c9260495a010211e47eb", "sha256": "2f44b25942f6ed4a2b51af3597417a8eaade30d2776cdbde9d9740cec8ff159c"}, "downloads": -1, "filename": "omdb-0.10.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eaf7deb42587c9260495a010211e47eb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9846, "upload_time": "2018-12-11T02:03:32", "upload_time_iso_8601": "2018-12-11T02:03:32.765457Z", "url": "https://files.pythonhosted.org/packages/d5/b9/818c582f11000771372b3d043eaafb76386ef5f7f3318c1fee18c595534e/omdb-0.10.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "156f430b043250e266ac5a4aa82a3b9a", "sha256": "eeac363f1c2eb634e4ae898e227dedae810cce9b7ceba7e90c00c9219ee8f23b"}, "downloads": -1, "filename": "omdb-0.10.1.tar.gz", "has_sig": false, "md5_digest": "156f430b043250e266ac5a4aa82a3b9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23185, "upload_time": "2018-12-11T02:03:34", "upload_time_iso_8601": "2018-12-11T02:03:34.075275Z", "url": "https://files.pythonhosted.org/packages/4f/be/ae1560e5f45c22df31b2ac293a3403097e844ac3aa7e05405e7afc9d2b4f/omdb-0.10.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:36 2020"}