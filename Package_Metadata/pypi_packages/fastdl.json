{"info": {"author": "Rub\u00e9n Salas", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# fastdl\nDownload and extract files fast and easily.\n\n```py\nfile_path = fastdl.download(url, extract=True, dir_prefix=\"downloads\")\n```\n\n## Features\n\n- Parallel downloads (threads and processes)\n- Cache for downloads and extractions\n- Easy extractions\n- Progress bars\n- Easily configurable\n\n## Installation\n```console\n$ pip install fastdl\n```\n\n## Usage\n`fastdl` can be be used in two different ways, download a single file or download multiple files in parallel:\n\n**Single file**\n```py\nfile_path = fastdl.download(url, dir_prefix=\"downloads\", extract=True)\n```\n\n**Multiple files**\n```py\nwith fastdl.Parallel(prefer=\"threads\"):\n    downloads = []\n\n    for url in urls:\n        download = p.download(url, dir_prefix=\"downloads\") # same arguments\n\n    for download in downloads:\n        file_path = download.get()  # block until download is finished\n```\n\n\n### Parameters\n\n| Parameter | Description | Type | Default |\n| --- | --- | --- | --- |\n| `url` | Url to download | str |  |\n| `fname` | File name of download file. Can be an absolute path. Can receive a function with [response](https://docs.python.org/3/library/urllib.request.html#urllib.request.urlopen) as an argument | str or callable | `None` |\n| `dir_prefix` | Directory to store download file. Used only if `fname` is not an absolute path. Defaults to current directory or value specified by `fastdl.conf[\"default_dir_prefix\"]` | str | `None` |\n| `subdir_prefix` | Subdirectory inside `dir_prefix` to store download. Defaults to no subdirectory. | str | `\"\"` |\n| `headers` | Dictionnary of HTTP headers to send. For example: `{\"User-Agent\": \"fastdl/0.1\"}` | dict | `{}` |\n| `blocksize` | Number of bytes to read and write for each iteration | int | `8192` |\n| `file_hash` | File hash. If the file hash doesn't match, it will be re-downloaded. | str | `None` |\n| `hash_algorithm` | Hash algorithm. One of the following: `\"sha256\"`, `\"sha512\"`, `\"sha1\"`, `\"md5\"` or `auto`. By default, it will try to infer the algorithm according to the length of the `file_hash` | str | `auto` |\n| `extract` | Whether or not extract file | bool | `False` |\n| `extract_dir` | Directory to store extracted files. By default same directory as the file | str | `None` |\n| `progressbar` | Whether or not show a progress bar | bool | `True` |\n| `force_download` | Whether or not force download if file already exists. By default, it doesn't re-download file unless file hash doesn't match | bool | `False` |\n| `force_extraction` | Whether or not force extraction if file already exists | bool | `False` |\n\n\n## Examples\n\n### Download file and re-download if hash doesn't match\n\n```python\nimport fastdl\n\nfile_hash = \"155fdb3732e82cc4864c441e6400def0\"\nurl = \"https://file-examples.com/wp-content/uploads/2017/02/zip_2MB.zip\"\n\nfile_path = fastdl.download(url, extract=True, dir_prefix=\"downloads\", file_hash=file_hash)\n```\n\n### Download multiple files in parallel\n\n```python\nimport fastdl\n\nurls = [\n    \"https://file-examples.com/wp-content/uploads/2017/04/file_example_MP4_480_1_5MG.mp4\",\n    \"https://file-examples.com/wp-content/uploads/2017/04/file_example_MP4_640_3MG.mp4\",\n    \"https://file-examples.com/wp-content/uploads/2017/04/file_example_MP4_1280_10MG.mp4\"\n]\n\nwith fastdl.Parallel(prefer=\"processes\", max_workers=2) as p:\n    downloads = []\n\n    for url in urls:\n        download = p.download(url, dir_prefix=\"downloads\")\n\n    for download in downloads:\n        file_path = download.get(timeout=10)  # wait 10 seconds or raise timeout if download hasn't finished\n```\n\n### Download from a list of urls in parallel\n\n```python\nimport fastdl\nfrom fastdl.utils import lines\n\nwith fastdl.Parallel() as p:\n    downloads = []\n\n    for url in lines(\"urls.txt\"):\n        download = p.download(url)\n        downloads.append(download)\n\n    for download in downloads:\n        file_path = download.get()\n```\n\n### Change default download directory\n\nIf you're using a directory for all your downloads (e.g ~/.myapp), you can easily change the default directory for your downloads:\n\n```python\n# myapp/__init__.py\n\nimport fastdl\n\nfastdl.conf[\"default_dir_prefix\"] = \"~/.myapp\"\n\n# myapp/file.py\n\nfile_path = fastdl.download(\"https://file-examples.com/wp-content/uploads/2017/02/zip_2MB.zip\")\nfile_path == \"~/.myapp/zip_2MB.zip\"\n```\nCheck [examples](examples/) folder to see examples in action.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/r-salas/fastdl", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "fastdl", "package_url": "https://pypi.org/project/fastdl/", "platform": "", "project_url": "https://pypi.org/project/fastdl/", "project_urls": {"Homepage": "https://github.com/r-salas/fastdl"}, "release_url": "https://pypi.org/project/fastdl/0.1/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Download and extract files fast and easily", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>fastdl</h1>\n<p>Download and extract files fast and easily.</p>\n<pre><span class=\"n\">file_path</span> <span class=\"o\">=</span> <span class=\"n\">fastdl</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">extract</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">dir_prefix</span><span class=\"o\">=</span><span class=\"s2\">\"downloads\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Features</h2>\n<ul>\n<li>Parallel downloads (threads and processes)</li>\n<li>Cache for downloads and extractions</li>\n<li>Easy extractions</li>\n<li>Progress bars</li>\n<li>Easily configurable</li>\n</ul>\n<h2>Installation</h2>\n<pre><span class=\"gp\">$</span> pip install fastdl\n</pre>\n<h2>Usage</h2>\n<p><code>fastdl</code> can be be used in two different ways, download a single file or download multiple files in parallel:</p>\n<p><strong>Single file</strong></p>\n<pre><span class=\"n\">file_path</span> <span class=\"o\">=</span> <span class=\"n\">fastdl</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">dir_prefix</span><span class=\"o\">=</span><span class=\"s2\">\"downloads\"</span><span class=\"p\">,</span> <span class=\"n\">extract</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Multiple files</strong></p>\n<pre><span class=\"k\">with</span> <span class=\"n\">fastdl</span><span class=\"o\">.</span><span class=\"n\">Parallel</span><span class=\"p\">(</span><span class=\"n\">prefer</span><span class=\"o\">=</span><span class=\"s2\">\"threads\"</span><span class=\"p\">):</span>\n    <span class=\"n\">downloads</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">url</span> <span class=\"ow\">in</span> <span class=\"n\">urls</span><span class=\"p\">:</span>\n        <span class=\"n\">download</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">dir_prefix</span><span class=\"o\">=</span><span class=\"s2\">\"downloads\"</span><span class=\"p\">)</span> <span class=\"c1\"># same arguments</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">download</span> <span class=\"ow\">in</span> <span class=\"n\">downloads</span><span class=\"p\">:</span>\n        <span class=\"n\">file_path</span> <span class=\"o\">=</span> <span class=\"n\">download</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>  <span class=\"c1\"># block until download is finished</span>\n</pre>\n<h3>Parameters</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>url</code></td>\n<td>Url to download</td>\n<td>str</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fname</code></td>\n<td>File name of download file. Can be an absolute path. Can receive a function with <a href=\"https://docs.python.org/3/library/urllib.request.html#urllib.request.urlopen\" rel=\"nofollow\">response</a> as an argument</td>\n<td>str or callable</td>\n<td><code>None</code></td>\n</tr>\n<tr>\n<td><code>dir_prefix</code></td>\n<td>Directory to store download file. Used only if <code>fname</code> is not an absolute path. Defaults to current directory or value specified by <code>fastdl.conf[\"default_dir_prefix\"]</code></td>\n<td>str</td>\n<td><code>None</code></td>\n</tr>\n<tr>\n<td><code>subdir_prefix</code></td>\n<td>Subdirectory inside <code>dir_prefix</code> to store download. Defaults to no subdirectory.</td>\n<td>str</td>\n<td><code>\"\"</code></td>\n</tr>\n<tr>\n<td><code>headers</code></td>\n<td>Dictionnary of HTTP headers to send. For example: <code>{\"User-Agent\": \"fastdl/0.1\"}</code></td>\n<td>dict</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td><code>blocksize</code></td>\n<td>Number of bytes to read and write for each iteration</td>\n<td>int</td>\n<td><code>8192</code></td>\n</tr>\n<tr>\n<td><code>file_hash</code></td>\n<td>File hash. If the file hash doesn't match, it will be re-downloaded.</td>\n<td>str</td>\n<td><code>None</code></td>\n</tr>\n<tr>\n<td><code>hash_algorithm</code></td>\n<td>Hash algorithm. One of the following: <code>\"sha256\"</code>, <code>\"sha512\"</code>, <code>\"sha1\"</code>, <code>\"md5\"</code> or <code>auto</code>. By default, it will try to infer the algorithm according to the length of the <code>file_hash</code></td>\n<td>str</td>\n<td><code>auto</code></td>\n</tr>\n<tr>\n<td><code>extract</code></td>\n<td>Whether or not extract file</td>\n<td>bool</td>\n<td><code>False</code></td>\n</tr>\n<tr>\n<td><code>extract_dir</code></td>\n<td>Directory to store extracted files. By default same directory as the file</td>\n<td>str</td>\n<td><code>None</code></td>\n</tr>\n<tr>\n<td><code>progressbar</code></td>\n<td>Whether or not show a progress bar</td>\n<td>bool</td>\n<td><code>True</code></td>\n</tr>\n<tr>\n<td><code>force_download</code></td>\n<td>Whether or not force download if file already exists. By default, it doesn't re-download file unless file hash doesn't match</td>\n<td>bool</td>\n<td><code>False</code></td>\n</tr>\n<tr>\n<td><code>force_extraction</code></td>\n<td>Whether or not force extraction if file already exists</td>\n<td>bool</td>\n<td><code>False</code></td>\n</tr></tbody></table>\n<h2>Examples</h2>\n<h3>Download file and re-download if hash doesn't match</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fastdl</span>\n\n<span class=\"n\">file_hash</span> <span class=\"o\">=</span> <span class=\"s2\">\"155fdb3732e82cc4864c441e6400def0\"</span>\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://file-examples.com/wp-content/uploads/2017/02/zip_2MB.zip\"</span>\n\n<span class=\"n\">file_path</span> <span class=\"o\">=</span> <span class=\"n\">fastdl</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">extract</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">dir_prefix</span><span class=\"o\">=</span><span class=\"s2\">\"downloads\"</span><span class=\"p\">,</span> <span class=\"n\">file_hash</span><span class=\"o\">=</span><span class=\"n\">file_hash</span><span class=\"p\">)</span>\n</pre>\n<h3>Download multiple files in parallel</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fastdl</span>\n\n<span class=\"n\">urls</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"https://file-examples.com/wp-content/uploads/2017/04/file_example_MP4_480_1_5MG.mp4\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"https://file-examples.com/wp-content/uploads/2017/04/file_example_MP4_640_3MG.mp4\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"https://file-examples.com/wp-content/uploads/2017/04/file_example_MP4_1280_10MG.mp4\"</span>\n<span class=\"p\">]</span>\n\n<span class=\"k\">with</span> <span class=\"n\">fastdl</span><span class=\"o\">.</span><span class=\"n\">Parallel</span><span class=\"p\">(</span><span class=\"n\">prefer</span><span class=\"o\">=</span><span class=\"s2\">\"processes\"</span><span class=\"p\">,</span> <span class=\"n\">max_workers</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">p</span><span class=\"p\">:</span>\n    <span class=\"n\">downloads</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">url</span> <span class=\"ow\">in</span> <span class=\"n\">urls</span><span class=\"p\">:</span>\n        <span class=\"n\">download</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">dir_prefix</span><span class=\"o\">=</span><span class=\"s2\">\"downloads\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">download</span> <span class=\"ow\">in</span> <span class=\"n\">downloads</span><span class=\"p\">:</span>\n        <span class=\"n\">file_path</span> <span class=\"o\">=</span> <span class=\"n\">download</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>  <span class=\"c1\"># wait 10 seconds or raise timeout if download hasn't finished</span>\n</pre>\n<h3>Download from a list of urls in parallel</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fastdl</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fastdl.utils</span> <span class=\"kn\">import</span> <span class=\"n\">lines</span>\n\n<span class=\"k\">with</span> <span class=\"n\">fastdl</span><span class=\"o\">.</span><span class=\"n\">Parallel</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">p</span><span class=\"p\">:</span>\n    <span class=\"n\">downloads</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">url</span> <span class=\"ow\">in</span> <span class=\"n\">lines</span><span class=\"p\">(</span><span class=\"s2\">\"urls.txt\"</span><span class=\"p\">):</span>\n        <span class=\"n\">download</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n        <span class=\"n\">downloads</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">download</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">download</span> <span class=\"ow\">in</span> <span class=\"n\">downloads</span><span class=\"p\">:</span>\n        <span class=\"n\">file_path</span> <span class=\"o\">=</span> <span class=\"n\">download</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n</pre>\n<h3>Change default download directory</h3>\n<p>If you're using a directory for all your downloads (e.g ~/.myapp), you can easily change the default directory for your downloads:</p>\n<pre><span class=\"c1\"># myapp/__init__.py</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">fastdl</span>\n\n<span class=\"n\">fastdl</span><span class=\"o\">.</span><span class=\"n\">conf</span><span class=\"p\">[</span><span class=\"s2\">\"default_dir_prefix\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"~/.myapp\"</span>\n\n<span class=\"c1\"># myapp/file.py</span>\n\n<span class=\"n\">file_path</span> <span class=\"o\">=</span> <span class=\"n\">fastdl</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"s2\">\"https://file-examples.com/wp-content/uploads/2017/02/zip_2MB.zip\"</span><span class=\"p\">)</span>\n<span class=\"n\">file_path</span> <span class=\"o\">==</span> <span class=\"s2\">\"~/.myapp/zip_2MB.zip\"</span>\n</pre>\n<p>Check <a href=\"examples/\" rel=\"nofollow\">examples</a> folder to see examples in action.</p>\n\n          </div>"}, "last_serial": 6953235, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "f2a8d86e3b6f0470022d3ef2edaf6ec0", "sha256": "c130a56c85542cffa41ce283cb46efe7117cdd1353a4b93dc022b44ecff6b174"}, "downloads": -1, "filename": "fastdl-0.1.tar.gz", "has_sig": false, "md5_digest": "f2a8d86e3b6f0470022d3ef2edaf6ec0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7569, "upload_time": "2020-04-04T23:37:45", "upload_time_iso_8601": "2020-04-04T23:37:45.352072Z", "url": "https://files.pythonhosted.org/packages/2e/f8/8e8766e807203bfa339e3a556136d5bfc01b7ceafc00731297103e17c004/fastdl-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f2a8d86e3b6f0470022d3ef2edaf6ec0", "sha256": "c130a56c85542cffa41ce283cb46efe7117cdd1353a4b93dc022b44ecff6b174"}, "downloads": -1, "filename": "fastdl-0.1.tar.gz", "has_sig": false, "md5_digest": "f2a8d86e3b6f0470022d3ef2edaf6ec0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7569, "upload_time": "2020-04-04T23:37:45", "upload_time_iso_8601": "2020-04-04T23:37:45.352072Z", "url": "https://files.pythonhosted.org/packages/2e/f8/8e8766e807203bfa339e3a556136d5bfc01b7ceafc00731297103e17c004/fastdl-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:34 2020"}