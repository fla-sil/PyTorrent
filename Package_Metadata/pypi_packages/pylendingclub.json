{"info": {"author": "Brandon Dean Barney", "author_email": "brandon.barney213@yahoo.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "========\nOverview\n========\n\n\n\n* Free software: BSD 3-Clause License\n\nInstallation\n========================\n\n::\n\n    pip install pylendingclub\n\n\nAbout\n========================\n\nA Python based wrapper for Lending Club's API that enables easier programmatic use of the API. Also extends the functionality of the API through a higher-level wrapper for ease of use, and an AutoInvestor. More features to come.\n\nSee the API documentation here: https://www.lendingclub.com/developers/api-overview.\n\n\nGetting Started\n========================\n\nTo get started, download the package with pip:\n\n::\n\n    pip install pylendingclub\n\n\nOnce the package is installed, you will need a Session object. You can create one directly, by passing your api-key_ and investor-id_.\n\n    .. _api-key: https://www.lendingclub.com/account/profile.action\n    .. _investor-id: https://www.lendingclub.com/account/summary.action\n\n::\n\n    from pylendingclub.session import LendingClubSession\n    session = LendingClubSession(api_key, investor_id)\n\n\n\n\nAlternatively, you can create environment variables for both of these values. Make sure they are created as 'LC_API_KEY' and 'LC_INVESTOR_ID'.\n\nWith environment variables set, you can create a `Session` with them like so:\n\n::\n\n    from pylendingclub import Session\n    session = LendingClubSession.from_environment_variables()\n\n\n\nUsing the Session Object\n========================\n\nSessions and Responses\n========================\nCalls to the API through the `Session` will return a Response_ object. You can then work with this response as needed. If you just want the JSON data from the response, use the following syntax:\n\n    .. _Response : http://docs.python-requests.org/en/master/api/#requests.Response\n\n::\n\n    response = session.resource.property\n    json_data = response.json()\n\n\nor\n\n::\n\n    response = session.resource.method()\n    json_data = response.json()\n\nYou can also chain the `.json()` call directly onto the property, or method, but this won't allow you to handle an error with the response without making a separate call to get the original response. Especially when working with the `POST` methods, it is recommended to store the response separate from the JSON, but it is not required.\n\n\nAccessing Resources\n========================\nThere are two primary resources available within the API. These are the `Account` and `Loan` resources. You can access them within the `Session` like so:\n\n::\n\n    account = session.account\n    loan = session.loan\n\n\nThese two resources expose the sub-resources/services within the API. More on this below.\n\n**Remember, all of these services will return a `Response`.**\n\nAccount Resource\n========================\n\nAccount Summary\n========================\n\nAPI Documentation: https://www.lendingclub.com/developers/summary\n\nMethod Type: GET\n\nSyntax:\n::\n\n    account_summary = session.account.summary\n\n\nAvailable Cash\n========================\n\nAPI Documentation: https://www.lendingclub.com/developers/available-cash\n\nMethod Type: GET\n\nSyntax:\n::\n\n    available_cash = session.account.available_cash\n\nNotes\n========================\n\nAPI Documentation: https://www.lendingclub.com/developers/notes-owned\n\nMethod Type: GET\n\nSyntax:\n::\n\n    notes = session.account.notes\n\nDetailed Notes\n========================\n\nAPI Documentation: https://www.lendingclub.com/developers/detailed-notes-owned\n\nMethod Type: GET\n\nSyntax:\n::\n\n    detailed_notes = session.account.detailed_notes\n\nPortfolios Owned\n========================\n\nAPI Documentation: https://www.lendingclub.com/developers/portfolios-owned\n\nMethod Type: GET\n\nSyntax:\n::\n\n    portfolios_owned = session.account.portfolios_owned\n\nFilters\n========================\n\nAPI Documentation: https://www.lendingclub.com/developers/filters\n\nMethod Type: GET\n\nSyntax:\n::\n\n    filters = session.account.filters\n\nCreate Portfolio\n========================\n\nAPI Documentation: https://www.lendingclub.com/developers/create-portfolio\n\nMethod Type: POST\n\nSyntax:\n::\n\n    create_portfolio = session.account.create_portfolio(portfolio_name, [portfolio_description])\n\nSubmit Orders\n========================\n\nAPI Documentation: https://www.lendingclub.com/developers/submit-order\n\nNote:\n\nThe orders must be a list of dicts in the format:\n::\n\n    [\n      {\n        'loanId' : loan_id,\n        'requestedAmount' : amount,\n        'portfolioId' : portfolio_id\n      }\n    ]\n\nWhere `loanId` and `requestedAmount` are required, and `requestedAmount` must be a denomination of 25.\n\nFor example:\n\n::\n\n    [\n      {\n        'loanId' : 1234,\n        'requestedAmount' : 25,\n      },\n      {\n        'loanId' : 1345,\n        'requestedAmount' : 50,\n        'portfolioId' : 12345\n      }\n    ]\n\nMethod Type: POST\n\nSyntax:\n::\n\n    submit_orders = session.account.submit_orders(orders)\n\nSubmit Order\n========================\n\nAPI Documentation: https://www.lendingclub.com/developers/submit-order\n\nMethod Type: POST\n\nNote: The `requested_amount` must be a denomination of $25.00. For example, 25, 100, and 2000 are all accepted values but 26, 115, and 2010 are not.\n\nSyntax:\n::\n\n    submit_order = session.account.submit_order(loan_id, requested_amount, [portfolio_id])\n\nAccount/Funds\n========================\n\nPending Transfers\n========================\n\nAPI Documentation: https://www.lendingclub.com/developers/pending-transfers\n\nMethod Type: GET\n\nSyntax:\n::\n\n    pending_transfers = session.account.funds.pending\n\nAdd\n========================\n\nAPI Documentation: https://www.lendingclub.com/developers/add-funds\n\nMethod Type: POST\n\nNotes:\n\nThe `transfer_frequency` argument must be one of `[LOAD_NOW, LOAD_ONCE, LOAD_WEEKLY, LOAD_BIWEEKLY, LOAD_ON_DAY_1_AND_16, LOAD_MONTHLY]`\n\nThe 'start_date' argument is required for recurring transfers, and for `LOAD_ONCE`.\n\nSyntax:\n::\n\n    add_funds = session.account.funds.add(amount, transfer_frequency, [start_date], [end_date])\n\nWithdraw\n========================\n\nAPI Documentation: https://www.lendingclub.com/developers/add-funds\n\nMethod Type: POST\n\nSyntax:\n::\n\n    withdraw_funds = session.account.funds.withdraw(amount)\n\nCancel Transfer\n========================\n\nAPI Documentation: https://www.lendingclub.com/developers/cancel-transfers\n\nMethod Type: POST\n\nSyntax:\n::\n\n    cancel_transfer = session.account.funds.cancel(transfer_id)\n\nLoan Resource\n========================\n\nListed Loans\n========================\n\nAPI Documentation: https://www.lendingclub.com/developers/listed-loans\n\nMethod Type: GET\n\nNotes:\n\nThe `show_all` argument will determine whether all loans are shown, or only the loans from the most recent listing period are shown.\n\nThe `filter_id` argument, if provided, will only show loans matching the filter.\n\nSyntax:\n::\n\n    listed_loans = session.loan.listed_loans([filter_id], [show_all]=True)\n\n\nChangelog\n=========\n\n4.0.0 (2018-10-16)\n------------------\n\n* First release on PyPI.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bbarney213/PyLendingClub", "keywords": "python,investing,finance,api-wrapper,lending-club,lending-club-api,p2p-investing", "license": "BSD 3-Clause License", "maintainer": "", "maintainer_email": "", "name": "pylendingclub", "package_url": "https://pypi.org/project/pylendingclub/", "platform": "", "project_url": "https://pypi.org/project/pylendingclub/", "project_urls": {"Homepage": "https://github.com/bbarney213/PyLendingClub"}, "release_url": "https://pypi.org/project/pylendingclub/3.0.2/", "requires_dist": null, "requires_python": "", "summary": "A python package for automating the LendingClub API.", "version": "3.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <ul>\n<li>Free software: BSD 3-Clause License</li>\n</ul>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install pylendingclub\n</pre>\n</div>\n<div id=\"about\">\n<h2>About</h2>\n<p>A Python based wrapper for Lending Club\u2019s API that enables easier programmatic use of the API. Also extends the functionality of the API through a higher-level wrapper for ease of use, and an AutoInvestor. More features to come.</p>\n<p>See the API documentation here: <a href=\"https://www.lendingclub.com/developers/api-overview\" rel=\"nofollow\">https://www.lendingclub.com/developers/api-overview</a>.</p>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>To get started, download the package with pip:</p>\n<pre>pip install pylendingclub\n</pre>\n<p>Once the package is installed, you will need a Session object. You can create one directly, by passing your <a href=\"https://www.lendingclub.com/account/profile.action\" rel=\"nofollow\">api-key</a> and <a href=\"https://www.lendingclub.com/account/summary.action\" rel=\"nofollow\">investor-id</a>.</p>\n<blockquote>\n</blockquote>\n<pre>from pylendingclub.session import LendingClubSession\nsession = LendingClubSession(api_key, investor_id)\n</pre>\n<p>Alternatively, you can create environment variables for both of these values. Make sure they are created as \u2018LC_API_KEY\u2019 and \u2018LC_INVESTOR_ID\u2019.</p>\n<p>With environment variables set, you can create a <cite>Session</cite> with them like so:</p>\n<pre>from pylendingclub import Session\nsession = LendingClubSession.from_environment_variables()\n</pre>\n</div>\n<div id=\"using-the-session-object\">\n<h2>Using the Session Object</h2>\n</div>\n<div id=\"sessions-and-responses\">\n<h2>Sessions and Responses</h2>\n<p>Calls to the API through the <cite>Session</cite> will return a <a href=\"http://docs.python-requests.org/en/master/api/#requests.Response\" rel=\"nofollow\">Response</a> object. You can then work with this response as needed. If you just want the JSON data from the response, use the following syntax:</p>\n<blockquote>\n</blockquote>\n<pre>response = session.resource.property\njson_data = response.json()\n</pre>\n<p>or</p>\n<pre>response = session.resource.method()\njson_data = response.json()\n</pre>\n<p>You can also chain the <cite>.json()</cite> call directly onto the property, or method, but this won\u2019t allow you to handle an error with the response without making a separate call to get the original response. Especially when working with the <cite>POST</cite> methods, it is recommended to store the response separate from the JSON, but it is not required.</p>\n</div>\n<div id=\"accessing-resources\">\n<h2>Accessing Resources</h2>\n<p>There are two primary resources available within the API. These are the <cite>Account</cite> and <cite>Loan</cite> resources. You can access them within the <cite>Session</cite> like so:</p>\n<pre>account = session.account\nloan = session.loan\n</pre>\n<p>These two resources expose the sub-resources/services within the API. More on this below.</p>\n<p><strong>Remember, all of these services will return a `Response`.</strong></p>\n</div>\n<div id=\"account-resource\">\n<h2>Account Resource</h2>\n</div>\n<div id=\"account-summary\">\n<h2>Account Summary</h2>\n<p>API Documentation: <a href=\"https://www.lendingclub.com/developers/summary\" rel=\"nofollow\">https://www.lendingclub.com/developers/summary</a></p>\n<p>Method Type: GET</p>\n<p>Syntax:</p>\n<pre>account_summary = session.account.summary\n</pre>\n</div>\n<div id=\"available-cash\">\n<h2>Available Cash</h2>\n<p>API Documentation: <a href=\"https://www.lendingclub.com/developers/available-cash\" rel=\"nofollow\">https://www.lendingclub.com/developers/available-cash</a></p>\n<p>Method Type: GET</p>\n<p>Syntax:</p>\n<pre>available_cash = session.account.available_cash\n</pre>\n</div>\n<div id=\"notes\">\n<h2>Notes</h2>\n<p>API Documentation: <a href=\"https://www.lendingclub.com/developers/notes-owned\" rel=\"nofollow\">https://www.lendingclub.com/developers/notes-owned</a></p>\n<p>Method Type: GET</p>\n<p>Syntax:</p>\n<pre>notes = session.account.notes\n</pre>\n</div>\n<div id=\"detailed-notes\">\n<h2>Detailed Notes</h2>\n<p>API Documentation: <a href=\"https://www.lendingclub.com/developers/detailed-notes-owned\" rel=\"nofollow\">https://www.lendingclub.com/developers/detailed-notes-owned</a></p>\n<p>Method Type: GET</p>\n<p>Syntax:</p>\n<pre>detailed_notes = session.account.detailed_notes\n</pre>\n</div>\n<div id=\"portfolios-owned\">\n<h2>Portfolios Owned</h2>\n<p>API Documentation: <a href=\"https://www.lendingclub.com/developers/portfolios-owned\" rel=\"nofollow\">https://www.lendingclub.com/developers/portfolios-owned</a></p>\n<p>Method Type: GET</p>\n<p>Syntax:</p>\n<pre>portfolios_owned = session.account.portfolios_owned\n</pre>\n</div>\n<div id=\"filters\">\n<h2>Filters</h2>\n<p>API Documentation: <a href=\"https://www.lendingclub.com/developers/filters\" rel=\"nofollow\">https://www.lendingclub.com/developers/filters</a></p>\n<p>Method Type: GET</p>\n<p>Syntax:</p>\n<pre>filters = session.account.filters\n</pre>\n</div>\n<div id=\"create-portfolio\">\n<h2>Create Portfolio</h2>\n<p>API Documentation: <a href=\"https://www.lendingclub.com/developers/create-portfolio\" rel=\"nofollow\">https://www.lendingclub.com/developers/create-portfolio</a></p>\n<p>Method Type: POST</p>\n<p>Syntax:</p>\n<pre>create_portfolio = session.account.create_portfolio(portfolio_name, [portfolio_description])\n</pre>\n</div>\n<div id=\"submit-orders\">\n<h2>Submit Orders</h2>\n<p>API Documentation: <a href=\"https://www.lendingclub.com/developers/submit-order\" rel=\"nofollow\">https://www.lendingclub.com/developers/submit-order</a></p>\n<p>Note:</p>\n<p>The orders must be a list of dicts in the format:</p>\n<pre>[\n  {\n    'loanId' : loan_id,\n    'requestedAmount' : amount,\n    'portfolioId' : portfolio_id\n  }\n]\n</pre>\n<p>Where <cite>loanId</cite> and <cite>requestedAmount</cite> are required, and <cite>requestedAmount</cite> must be a denomination of 25.</p>\n<p>For example:</p>\n<pre>[\n  {\n    'loanId' : 1234,\n    'requestedAmount' : 25,\n  },\n  {\n    'loanId' : 1345,\n    'requestedAmount' : 50,\n    'portfolioId' : 12345\n  }\n]\n</pre>\n<p>Method Type: POST</p>\n<p>Syntax:</p>\n<pre>submit_orders = session.account.submit_orders(orders)\n</pre>\n</div>\n<div id=\"submit-order\">\n<h2>Submit Order</h2>\n<p>API Documentation: <a href=\"https://www.lendingclub.com/developers/submit-order\" rel=\"nofollow\">https://www.lendingclub.com/developers/submit-order</a></p>\n<p>Method Type: POST</p>\n<p>Note: The <cite>requested_amount</cite> must be a denomination of $25.00. For example, 25, 100, and 2000 are all accepted values but 26, 115, and 2010 are not.</p>\n<p>Syntax:</p>\n<pre>submit_order = session.account.submit_order(loan_id, requested_amount, [portfolio_id])\n</pre>\n</div>\n<div id=\"account-funds\">\n<h2>Account/Funds</h2>\n</div>\n<div id=\"pending-transfers\">\n<h2>Pending Transfers</h2>\n<p>API Documentation: <a href=\"https://www.lendingclub.com/developers/pending-transfers\" rel=\"nofollow\">https://www.lendingclub.com/developers/pending-transfers</a></p>\n<p>Method Type: GET</p>\n<p>Syntax:</p>\n<pre>pending_transfers = session.account.funds.pending\n</pre>\n</div>\n<div id=\"add\">\n<h2>Add</h2>\n<p>API Documentation: <a href=\"https://www.lendingclub.com/developers/add-funds\" rel=\"nofollow\">https://www.lendingclub.com/developers/add-funds</a></p>\n<p>Method Type: POST</p>\n<p>Notes:</p>\n<p>The <cite>transfer_frequency</cite> argument must be one of <cite>[LOAD_NOW, LOAD_ONCE, LOAD_WEEKLY, LOAD_BIWEEKLY, LOAD_ON_DAY_1_AND_16, LOAD_MONTHLY]</cite></p>\n<p>The \u2018start_date\u2019 argument is required for recurring transfers, and for <cite>LOAD_ONCE</cite>.</p>\n<p>Syntax:</p>\n<pre>add_funds = session.account.funds.add(amount, transfer_frequency, [start_date], [end_date])\n</pre>\n</div>\n<div id=\"withdraw\">\n<h2>Withdraw</h2>\n<p>API Documentation: <a href=\"https://www.lendingclub.com/developers/add-funds\" rel=\"nofollow\">https://www.lendingclub.com/developers/add-funds</a></p>\n<p>Method Type: POST</p>\n<p>Syntax:</p>\n<pre>withdraw_funds = session.account.funds.withdraw(amount)\n</pre>\n</div>\n<div id=\"cancel-transfer\">\n<h2>Cancel Transfer</h2>\n<p>API Documentation: <a href=\"https://www.lendingclub.com/developers/cancel-transfers\" rel=\"nofollow\">https://www.lendingclub.com/developers/cancel-transfers</a></p>\n<p>Method Type: POST</p>\n<p>Syntax:</p>\n<pre>cancel_transfer = session.account.funds.cancel(transfer_id)\n</pre>\n</div>\n<div id=\"loan-resource\">\n<h2>Loan Resource</h2>\n</div>\n<div id=\"listed-loans\">\n<h2>Listed Loans</h2>\n<p>API Documentation: <a href=\"https://www.lendingclub.com/developers/listed-loans\" rel=\"nofollow\">https://www.lendingclub.com/developers/listed-loans</a></p>\n<p>Method Type: GET</p>\n<p>Notes:</p>\n<p>The <cite>show_all</cite> argument will determine whether all loans are shown, or only the loans from the most recent listing period are shown.</p>\n<p>The <cite>filter_id</cite> argument, if provided, will only show loans matching the filter.</p>\n<p>Syntax:</p>\n<pre>listed_loans = session.loan.listed_loans([filter_id], [show_all]=True)\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">4.0.0 (2018-10-16)</span></h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4407439, "releases": {"3.0.2": [{"comment_text": "", "digests": {"md5": "c335326d7d536abb7ebb1274470012c5", "sha256": "22741f3b24961d036ae62575549d9108a154373d103a77d045bd6fdd5e2663bb"}, "downloads": -1, "filename": "pylendingclub-3.0.2.tar.gz", "has_sig": false, "md5_digest": "c335326d7d536abb7ebb1274470012c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23816, "upload_time": "2018-10-23T17:34:59", "upload_time_iso_8601": "2018-10-23T17:34:59.543189Z", "url": "https://files.pythonhosted.org/packages/8e/c6/09516670ed4955e785a75b54349dfa3857de6f42433098e45923ae403d9d/pylendingclub-3.0.2.tar.gz", "yanked": false}], "v1.2": [{"comment_text": "", "digests": {"md5": "e9658e158f1ea5983380bdb0f0a34c5f", "sha256": "50b16e863ddb30c4f4523c762380a08ac417826d125cef7ceaf1e0ab71a27ef9"}, "downloads": -1, "filename": "pylendingclub-v1.2.tar.gz", "has_sig": false, "md5_digest": "e9658e158f1ea5983380bdb0f0a34c5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4104, "upload_time": "2018-06-07T03:06:02", "upload_time_iso_8601": "2018-06-07T03:06:02.570092Z", "url": "https://files.pythonhosted.org/packages/48/ec/4be7f9e2fa20cab95064094915516aa90fc55cf5ad6cd740ad8816d756e4/pylendingclub-v1.2.tar.gz", "yanked": false}], "v1.3": [{"comment_text": "", "digests": {"md5": "4d30609a3b23beaebb535e021509721f", "sha256": "b6af05acf41c02a1a80074f66a7847914e71cf5c176f1e8874bc20e88d8ab5bc"}, "downloads": -1, "filename": "pylendingclub-v1.3.tar.gz", "has_sig": false, "md5_digest": "4d30609a3b23beaebb535e021509721f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4150, "upload_time": "2018-06-07T03:59:49", "upload_time_iso_8601": "2018-06-07T03:59:49.749395Z", "url": "https://files.pythonhosted.org/packages/47/eb/06165834e37b19419253184db8adbadd9cc3a490a16120b0b26a442b3929/pylendingclub-v1.3.tar.gz", "yanked": false}], "v1.4": [{"comment_text": "", "digests": {"md5": "b44425a03a18dbc5a514b6a91da77516", "sha256": "851373cf4d81a96835624eba20aba5da94a2502a26f4db5f5936d241281a8851"}, "downloads": -1, "filename": "pylendingclub-v1.4.tar.gz", "has_sig": false, "md5_digest": "b44425a03a18dbc5a514b6a91da77516", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4140, "upload_time": "2018-06-07T04:06:48", "upload_time_iso_8601": "2018-06-07T04:06:48.092546Z", "url": "https://files.pythonhosted.org/packages/aa/43/2ddfd2cedd6e80d60989656532d347f279022e19a3c4985a332bb8ae43eb/pylendingclub-v1.4.tar.gz", "yanked": false}], "v1.5": [{"comment_text": "", "digests": {"md5": "31388102a2b92f638280b02e07aaceeb", "sha256": "53d353a5abc778888d1a984c37fe9d7f625fc58c3e228115ea11f62d520a8177"}, "downloads": -1, "filename": "pylendingclub-v1.5.zip", "has_sig": false, "md5_digest": "31388102a2b92f638280b02e07aaceeb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6888, "upload_time": "2018-06-12T12:30:03", "upload_time_iso_8601": "2018-06-12T12:30:03.009054Z", "url": "https://files.pythonhosted.org/packages/07/67/ad966fb896f9f0370d0b4bc81acb1b777a18e77d843e997a509a4f661c03/pylendingclub-v1.5.zip", "yanked": false}], "v1.6": [{"comment_text": "", "digests": {"md5": "a8a4e3576c1fc281ccfece8ea793dc39", "sha256": "d8ad4dbca87fbd7331ada10f8e0a84a3cd9e05e09a1536d1e9733e8e1030615e"}, "downloads": -1, "filename": "pylendingclub-v1.6.zip", "has_sig": false, "md5_digest": "a8a4e3576c1fc281ccfece8ea793dc39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6890, "upload_time": "2018-06-12T13:47:33", "upload_time_iso_8601": "2018-06-12T13:47:33.224475Z", "url": "https://files.pythonhosted.org/packages/da/09/230eea22e01cc7addcd426bcba7cfd1de33c77456d8f39dc8d42ac9446f7/pylendingclub-v1.6.zip", "yanked": false}], "v1.7": [{"comment_text": "", "digests": {"md5": "c4dde48594936576e04141f9a8d84cc1", "sha256": "133126cff6a7447a0dba6ed4e00bf9483e5de88219184e97ed338deb8f2dfdc9"}, "downloads": -1, "filename": "pylendingclub-v1.7.zip", "has_sig": false, "md5_digest": "c4dde48594936576e04141f9a8d84cc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7206, "upload_time": "2018-06-12T16:26:12", "upload_time_iso_8601": "2018-06-12T16:26:12.160162Z", "url": "https://files.pythonhosted.org/packages/87/5d/0cf0613434c6c2a5a646261776981c46a9053dd19ccf0bf676e494d11e3c/pylendingclub-v1.7.zip", "yanked": false}], "v2.0.1": [{"comment_text": "", "digests": {"md5": "e8bcf7e0ac816bbc444a6f04354223bd", "sha256": "25da47d3081af37aae088dd0170b356b65ad09e130607d5f14daefaab4f27338"}, "downloads": -1, "filename": "pylendingclub-v2.0.1.zip", "has_sig": false, "md5_digest": "e8bcf7e0ac816bbc444a6f04354223bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7263, "upload_time": "2018-06-12T17:29:08", "upload_time_iso_8601": "2018-06-12T17:29:08.973981Z", "url": "https://files.pythonhosted.org/packages/19/eb/742d9254cfe492aa8a9e6193d37de7c5a2be15795bcddc729b6260b26612/pylendingclub-v2.0.1.zip", "yanked": false}], "v2.0.2": [{"comment_text": "", "digests": {"md5": "168e36ba25068136ce5919f988f4878c", "sha256": "386922c2faac6d4d1fce5dfc1ca6cd45d58f789040c6c9c99166304d88a3eae3"}, "downloads": -1, "filename": "pylendingclub-v2.0.2.zip", "has_sig": false, "md5_digest": "168e36ba25068136ce5919f988f4878c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10422, "upload_time": "2018-08-08T11:15:16", "upload_time_iso_8601": "2018-08-08T11:15:16.612686Z", "url": "https://files.pythonhosted.org/packages/39/e5/0d45a84d674187d9edc9d665f60994870d2663b68c70c2fec4a1883dc30c/pylendingclub-v2.0.2.zip", "yanked": false}], "v3.0.1": [{"comment_text": "", "digests": {"md5": "b59ed47a6a1ccb8915404ea416207d2f", "sha256": "27ba05a080dac4d62ac115ae593df09f99b975aa1f5e82788e636b88266e3383"}, "downloads": -1, "filename": "pylendingclub-v3.0.1.zip", "has_sig": false, "md5_digest": "b59ed47a6a1ccb8915404ea416207d2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10436, "upload_time": "2018-08-08T11:44:31", "upload_time_iso_8601": "2018-08-08T11:44:31.583270Z", "url": "https://files.pythonhosted.org/packages/6d/88/a5267c52d39d071e528e84a7802de7e4f208e772c8511dc5c3266a9cf52e/pylendingclub-v3.0.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c335326d7d536abb7ebb1274470012c5", "sha256": "22741f3b24961d036ae62575549d9108a154373d103a77d045bd6fdd5e2663bb"}, "downloads": -1, "filename": "pylendingclub-3.0.2.tar.gz", "has_sig": false, "md5_digest": "c335326d7d536abb7ebb1274470012c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23816, "upload_time": "2018-10-23T17:34:59", "upload_time_iso_8601": "2018-10-23T17:34:59.543189Z", "url": "https://files.pythonhosted.org/packages/8e/c6/09516670ed4955e785a75b54349dfa3857de6f42433098e45923ae403d9d/pylendingclub-3.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:14 2020"}