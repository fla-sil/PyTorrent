{"info": {"author": "Varshneyabhushan", "author_email": "varshneyacoder@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "kudoSudoku \n**********\n|p3| |p1| |p2| \n\n\n\n.. |p1| image:: https://img.shields.io/travis/Varshneyabhushan/kudoSudoku.svg\n   :alt: Build status\n   :target: https://travis-ci.org/Varshneyabhushan/kudoSudoku\n   \n\n.. |p2| image:: https://img.shields.io/github/stars/Varshneyabhushan/kudoSudoku.svg?style=social&logo=github&label=Stars\n   :alt: GitHub stars\n   :target: https://github.com/Varshneyabhushan/kudoSudoku\n\n\n.. |p3| image:: https://img.shields.io/github/license/mashape/apistatus.svg \n   :alt: license\n\n\n\n\nA sudoku solver that solves the puzzle using constraint programming\n\nInstallation\n============\n\nInstallation through pip:\n\n.. code-block:: shell\n\n    pip install kudosudoku\n\nInstallation through cloning:\n\n.. code-block:: shell\n\n    git clone https://github.com/Varshneyabhushan/kudoSudoku.git\n    cd kudoSudoku\n    python setup.py install\n\n\nUsage\n=====\n\n* import class **sudoku** from the module.\n* pass puzzle to be solved as list of lists\n* **sudoku** has a method called **solve( )** that returns the solved puzzle\n* output will be an object with the following keys\n    1. `done` : \"describing status if its done or not\"\n    2. `iterations` : \"number of times puzzle is re visited\"\n    3. `guesses` : \"number of places where it had to guess\"\n    4. `timeTaken` : \"Time taken to conclude\"\n    5. `solution` : \"Final answer(will be a list of list of integers)\"\n\n\n\nExample\n=======\n\nTo solve this sudoku\n\n.. image:: https://raw.githubusercontent.com/Varshneyabhushan/kudoSudoku/master/2x2.png\n   :alt: a 2x2 sudoku\n\nInput has to be:\n\n\n.. code-block:: python\n\n   [[0,2,4,0],[1,0,0,3],[4,0,0,2],[0,1,3,0]]\n\n\n\nAs python language is case sensitive,you have to import **kudoSudoku**,not **kudosudoku**.\n\n\n.. code-block:: python\n\n    from kudoSudoku import sudoku\n    puzzle = [[0,2,4,0],[1,0,0,3],[4,0,0,2],[0,1,3,0]]\n    table = sudoku(puzzle)\n    result = table.solve()\n    print(result)\n\n\nOutput:\n\n.. code-block:: python\n\n\n    {'done': True, 'iterations': 2, 'guesses': 0, 'timeTaken': 0.0013199988754573474, 'solution': [[3, 2, 4, 1], [1, 4, 2, 3], [4, 3, 1, 2], [2, 1, 3, 4]]}\n\n\n2X2 sudoku is taken just to demonstrate. It works for any nxn sudoku", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/VarshneyaB/kudoSudoku.git", "keywords": "sudoku solving solve puzzle kudos constraint", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "kudosudoku", "package_url": "https://pypi.org/project/kudosudoku/", "platform": "", "project_url": "https://pypi.org/project/kudosudoku/", "project_urls": {"Homepage": "https://github.com/VarshneyaB/kudoSudoku.git"}, "release_url": "https://pypi.org/project/kudosudoku/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Sudoku solver,that solves sudoku puzzles using constraint programming", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/36686084675cebbeff3809cb9d8291b8e6ebd672/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6173686170652f6170697374617475732e737667\"> <a href=\"https://travis-ci.org/Varshneyabhushan/kudoSudoku\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/481b017d8ca47850b8cf30039e7c8182c2680524/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f56617273686e6579616268757368616e2f6b75646f5375646f6b752e737667\"></a> <a href=\"https://github.com/Varshneyabhushan/kudoSudoku\" rel=\"nofollow\"><img alt=\"GitHub stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3bb38dfae08feff5ad480d933aa558e3a13177ff/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f56617273686e6579616268757368616e2f6b75646f5375646f6b752e7376673f7374796c653d736f6369616c266c6f676f3d676974687562266c6162656c3d5374617273\"></a></p>\n<p>A sudoku solver that solves the puzzle using constraint programming</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Installation through pip:</p>\n<pre>pip install kudosudoku\n</pre>\n<p>Installation through cloning:</p>\n<pre>git clone https://github.com/Varshneyabhushan/kudoSudoku.git\n<span class=\"nb\">cd</span> kudoSudoku\npython setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<ul>\n<li>import class <strong>sudoku</strong> from the module.</li>\n<li>pass puzzle to be solved as list of lists</li>\n<li><strong>sudoku</strong> has a method called <strong>solve( )</strong> that returns the solved puzzle</li>\n<li><dl>\n<dt>output will be an object with the following keys</dt>\n<dd><ol>\n<li><cite>done</cite> : \u201cdescribing status if its done or not\u201d</li>\n<li><cite>iterations</cite> : \u201cnumber of times puzzle is re visited\u201d</li>\n<li><cite>guesses</cite> : \u201cnumber of places where it had to guess\u201d</li>\n<li><cite>timeTaken</cite> : \u201cTime taken to conclude\u201d</li>\n<li><cite>solution</cite> : \u201cFinal answer(will be a list of list of integers)\u201d</li>\n</ol>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>To solve this sudoku</p>\n<img alt=\"a 2x2 sudoku\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05852f9b67fad015f4570c751ab51a88434c290b/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f56617273686e6579616268757368616e2f6b75646f5375646f6b752f6d61737465722f3278322e706e67\">\n<p>Input has to be:</p>\n<pre><span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]]</span>\n</pre>\n<p>As python language is case sensitive,you have to import <strong>kudoSudoku</strong>,not <strong>kudosudoku</strong>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">kudoSudoku</span> <span class=\"kn\">import</span> <span class=\"n\">sudoku</span>\n<span class=\"n\">puzzle</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]]</span>\n<span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">sudoku</span><span class=\"p\">(</span><span class=\"n\">puzzle</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">solve</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><span class=\"p\">{</span><span class=\"s1\">'done'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">'iterations'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'guesses'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'timeTaken'</span><span class=\"p\">:</span> <span class=\"mf\">0.0013199988754573474</span><span class=\"p\">,</span> <span class=\"s1\">'solution'</span><span class=\"p\">:</span> <span class=\"p\">[[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]]}</span>\n</pre>\n<p>2X2 sudoku is taken just to demonstrate. It works for any nxn sudoku</p>\n</div>\n\n          </div>"}, "last_serial": 3658559, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "2c8328400b926aa07aa2ac8463b8682f", "sha256": "4b9f3bca03f9c18290dee3a7b996918892af497c17f17977a22fa8a026561aef"}, "downloads": -1, "filename": "kudosudoku-1.0.2.tar.gz", "has_sig": false, "md5_digest": "2c8328400b926aa07aa2ac8463b8682f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4782, "upload_time": "2018-03-11T08:14:27", "upload_time_iso_8601": "2018-03-11T08:14:27.504698Z", "url": "https://files.pythonhosted.org/packages/77/91/ae255806f02ba7c9db5ac62e2ae5ccca65fd139eaaae5a8cf2e618120e48/kudosudoku-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2c8328400b926aa07aa2ac8463b8682f", "sha256": "4b9f3bca03f9c18290dee3a7b996918892af497c17f17977a22fa8a026561aef"}, "downloads": -1, "filename": "kudosudoku-1.0.2.tar.gz", "has_sig": false, "md5_digest": "2c8328400b926aa07aa2ac8463b8682f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4782, "upload_time": "2018-03-11T08:14:27", "upload_time_iso_8601": "2018-03-11T08:14:27.504698Z", "url": "https://files.pythonhosted.org/packages/77/91/ae255806f02ba7c9db5ac62e2ae5ccca65fd139eaaae5a8cf2e618120e48/kudosudoku-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:35 2020"}