{"info": {"author": "Flavio Curella", "author_email": "flavio.curella@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Framework :: Django", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "Django Multiple Include\n======================================\n\nA version of ``{% include %}`` that accepts multiple template names.\n\nUsage\n-----\nAdd ``multiple_include`` to ``INSTALLED_APPS``.\n\nThen, in your template::\n\n    {% load multiple_include %}\n\n    {% multiple_include \"template1.html\" \"template2.html\" \"template2.html\" with object=item %}\n\nThe templatetag will include the first existing template from the list. This allows more interesting uses as::\n\n    {% load multiple_include %}\n\n    {% with \"story_\"|add:object.category_slug|add:\".html\" as category_template %}\n    {% multiple_include category_template \"news/story_default.html\" %}\n    {% endwith %}\n\nNote: For a cleaner string concatenation, you can use the ``capture`` tag shipped with  `Django Basic Apps <https://github.com/nathanborror/django-basic-apps/>`_:\n\nIn your settings::\n\n    INSTALLED_APPS += ('basic.tools')\n\nTemplate::\n\n    {% load multiple_include capture %}\n\n    {% capture as category_template %}\n        story_{{ object.category_slug}}.html\n    {% endcapture %}\n\n    {% multiple_include category_template \"news/story_default.html\" %}", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fcurella/django-multiple-include", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-multiple-include", "package_url": "https://pypi.org/project/django-multiple-include/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-multiple-include/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/fcurella/django-multiple-include"}, "release_url": "https://pypi.org/project/django-multiple-include/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "A version of ``{% include %}`` that accepts multiple template names.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A version of <tt>{% include %}</tt> that accepts multiple template names.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Add <tt>multiple_include</tt> to <tt>INSTALLED_APPS</tt>.</p>\n<p>Then, in your template:</p>\n<pre>{% load multiple_include %}\n\n{% multiple_include \"template1.html\" \"template2.html\" \"template2.html\" with object=item %}\n</pre>\n<p>The templatetag will include the first existing template from the list. This allows more interesting uses as:</p>\n<pre>{% load multiple_include %}\n\n{% with \"story_\"|add:object.category_slug|add:\".html\" as category_template %}\n{% multiple_include category_template \"news/story_default.html\" %}\n{% endwith %}\n</pre>\n<p>Note: For a cleaner string concatenation, you can use the <tt>capture</tt> tag shipped with  <a href=\"https://github.com/nathanborror/django-basic-apps/\" rel=\"nofollow\">Django Basic Apps</a>:</p>\n<p>In your settings:</p>\n<pre>INSTALLED_APPS += ('basic.tools')\n</pre>\n<p>Template:</p>\n<pre>{% load multiple_include capture %}\n\n{% capture as category_template %}\n    story_{{ object.category_slug}}.html\n{% endcapture %}\n\n{% multiple_include category_template \"news/story_default.html\" %}\n</pre>\n</div>\n\n          </div>"}, "last_serial": 745409, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a13ba864e5eb1855bd44365cdb3d9a6a", "sha256": "272208fe8f8d7247f4fffc81a3f924424daf93093999244ccd4f0b91ff89ef2c"}, "downloads": -1, "filename": "django-multiple-include-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a13ba864e5eb1855bd44365cdb3d9a6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6476, "upload_time": "2013-05-13T17:08:49", "upload_time_iso_8601": "2013-05-13T17:08:49.808847Z", "url": "https://files.pythonhosted.org/packages/b0/27/30f0c6a2f80f85ac7962471ba88e49f32e66013aa72121147ca785207644/django-multiple-include-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a13ba864e5eb1855bd44365cdb3d9a6a", "sha256": "272208fe8f8d7247f4fffc81a3f924424daf93093999244ccd4f0b91ff89ef2c"}, "downloads": -1, "filename": "django-multiple-include-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a13ba864e5eb1855bd44365cdb3d9a6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6476, "upload_time": "2013-05-13T17:08:49", "upload_time_iso_8601": "2013-05-13T17:08:49.808847Z", "url": "https://files.pythonhosted.org/packages/b0/27/30f0c6a2f80f85ac7962471ba88e49f32e66013aa72121147ca785207644/django-multiple-include-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:48 2020"}