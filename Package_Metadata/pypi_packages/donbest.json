{"info": {"author": "Matthew McManus", "author_email": "matt@rexmark.co", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "\n|header image|\n\n|build badge| |pypi badge| |MIT license|\n\nDonbest.py is an easy-to-use Python wrapper for the `Don Best Sports Data API. <http://xml.donbest.com/v2/home>`_\n\nInstallation\n------------\n\nDonbest.py is available for download through the Python Package Index (PyPi). You can install it right away using pip or easy_install.\n\n.. code:: bash\n\n    pip install donbest\n\nUsage\n-----\n\nTo get started, you're going to need to get your Don Best API token from the `token generator <http://xml.donbest.com/v2/token>`_ on the Don Best website. Once you've got that, you're ready to go. In order to be able to generate a token you need to have an account with Don Best. You can get an account by contacting `Don Best <http://www.donbestcorp.com/xml-odds-feed/>`_. \n\n.. code:: pycon\n\n    >>> import donbest\n    >>> db = donbest.Donbest(api_token)\n\nOnce you've done this, you can now use the ``db`` object to make calls to the Don Best API. Here are some examples:\n\nGet Odds for Upcoming NBA games\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: pycon\n\n    >>> events = don.schedule_inplay()\n    >>> nba_events = [event for event in events if event.league.name == \"NBA\"]\n    >>> for event in nba_events:\n    >>>        print(event.get_live_odds())\n    [<Line event=<Event id=817071, season=None, date=2018-05-25 01:05:00, opentime=None, name=None, event_type=None, event_state=None, time_changed=None, neutral=None, game_number=None, group=None, participants=None, league=None, location=None, live=None>, away_rot=507, home_rot=508, time=2018-05-23 15:20:21, period_id=1, period=FG, type=previous, sportsbook=347, ps=<PointSpread away_spread=0.00, home_spread=0.00, away_price=-110, home_price=-110>, money=<MoneyLine away_money=-110, home_money=-110, draw_money=0>, total=<Total total=220.00, over_price=-110, under_price=-110>, team_total=<TeamTotal away_total=109.50, away_over_price=-115, away_under_price=-105, home_total=110.00, home_over_price=-105, home_under_price=-115>, display_away=-1, display_home=219%BD, no_line=None>,\n    ....]\n\nEvent Schedule\n~~~~~~~~~~~~~~\n\nIn-play schedule:\n\nReturns a list of the upcoming scheduled competitions and propositions for the next several days. Does not return competitions that have already been played prior to the current day.\n\n.. code:: pycon\n\n    >>> schedule = db.schedule_inplay()\n    >>> event = schedule[0]\n    >>> event\n    <Event id=806300, season=regular, date=None, opentime=2018-09-07 00:20:00+00:00, name=Atlanta Falcons vs Philadelphia Eagles, event_type=None, event_state=circled, time_changed=False, neutral=False, game_number=1, group=<Group id=515449, name=None, description=NFL WEEK 1 (REGULAR SEASON) - Thursday, September 6th, type=event, type_id=1>, participants=[<Team id=11, name=Atlanta Falcons, abbreviation=atlanta, full_name=None, information=None, league=None, rotation=451, side=away>, <Team id=2, name=Philadelphia Eagles, abbreviation=philadelphia, full_name=None, information=None, league=None, rotation=452, side=home>], league=<League id=1, name=NFL, abbreviation=None, information=None, sport=<Sport id=1, name=Football, abbreviation=None, information=None>>, location=<Location id=680, name=Lincoln Financial Field, description=None, abbreviation=None, stadium_type=None, surface_type=None, seating_capacity=None, elevation=None, city=None>, live=True, event_state_id=10>\n\n    # Available Event attributes:\n    event.id\n    event.season\n    event.date\n    event.opentime\n    event.name\n    event.event_type\n    event.event_state\n    event.time_changed\n    event.neutral\n    event.game_number\n    event.group\n    event.group.id\n    event.group.name\n    event.group.type\n    event.group.type_id\n    event.live\n\n    ## See Team section to view what attributes are \n    ## available on the items returned in the list of\n    ## participants\n    event.participants\n\n    ## See League section for what attributes\n    ## are available on League objects\n    event.league\n\n    ## See Location section for what attributes\n    ## may be available on Location objects\n    event.location\n\n    # Available methods:\n    event.get_live_odds()\n    event.get_opening_odds()\n    event.get_closing_odds()\n    event.get_score()\n\n\nFull schedule:\n\nEither of the commands below return the full schedule of upcoming events including competitions and propositions months in the future.\n\n.. code:: pycon\n\n    >>> db.schedule()\n    >>> db.current_schedue()\n    [<Event id=819810, .... >,\n    <Event id =819811, .... >,\n    ........................]\n\nScores\n~~~~~~\n\nReturns a list containing the state of the live competition, current scores and period summary. Don Best ensures that their period scores are correct without using 3rd party providers which means that the scores are live and accurate.\n\nLive scores:\n\n.. code:: pycon\n\n    >>> scores = db.score()\n    >>> score = scores[0]\n    <Score id=818854, league_id=12, away_rot=8205, home_rot=8206, away_score=6, home_score=7, description=FINAL, time=2018-05-22 14:18:26+00:00, period=FINAL, period_id=0, away_score_ext=None, home_score_ext=None, period_summary=[<Period name=Set 1, description=END-, time=2018-05-22 12:36:26+00:00, period_id=331, scores=[{'rot': '8205', 'value': '6'}, {'rot': '8206', 'value': '2'}]>, <Period name=Set 2, description=END-, time=2018-05-22 13:27:28+00:00, period_id=332, scores=[{'rot': '8205', 'value': '6'}, {'rot': '8206', 'value': '7'}]>, <Period name=Set 3, description=END-, time=2018-05-22 14:18:26+00:00, period_id=333, scores=[{'rot': '8205', 'value': '6'}, {'rot': '8206', 'value': '7'}]>]>\n\n    # Available Score attributes:\n    ## The Score id is the id of the event it relates to...they are the same value\n    score.id\n    score.league_id\n    score.away_rot\n    score.home_rot\n    score.away_score\n    score.home_score\n    score.description\n    score.time\n    score.period\n    score.period_id\n    score.away_score_ext\n    score.home_score_ext\n\n    for period in score.period_summary:\n        period.name\n        period.description\n        period.time_changed\n        period.id\n        for score in period.scores:\n            score[\"rot\"]\n            score[\"value\"]\n\nLines\n~~~~~\n\nReturns a list of opening odds, live odds, and closing odds for competitions and propositions by league. *League id is a required parameter for all of the Lines endpoints*\n\nOpening Odds (NBA):\n\n.. code:: pycon\n\n    >>> nba_lines = db.open(league_id=3)\n    >>> line = nba_lines[0]\n    <Line event=<Event id=817069, season=None, date=2018-05-23 01:05:00+00:00, opentime=None, name=None, event_type=None, event_state=None, time_changed=None, neutral=None, game_number=None, group=None, participants=None, league=None, location=None, live=None>, away_rot=505, home_rot=506, time=2018-05-22 21:11:47+00:00, period_id=1, period=FG, type=previous, sportsbook=347, ps=<PointSpread away_spread=8.00, home_spread=-8.00, away_price=-110, home_price=-110>, money=<MoneyLine away_money=330, home_money=-430, draw_money=0>, total=<Total total=226.50, over_price=-110, under_price=-110>, team_total=<TeamTotal away_total=109.00, away_over_price=-110, away_under_price=-110, home_total=117.50, home_over_price=-110, home_under_price=-110>, display_away=226%BD, display_home=-8%BD>\n\n    # Available Line attributes:\n    line.event\n    line.away_rot\n    line.home_rot\n    line.time\n    line.period_id\n    line.period\n    line.type\n    line.sportsbook\n    line.no_line\n    line.display_home\n    line.display_away\n    line.ps\n    line.ps.away_spread\n    line.ps.home_spread\n    line.ps.away_price\n    line.ps.home_price\n    line.money\n    line.money.away_money\n    line.money.home_money\n    line.money.draw_money\n    line.total\n    line.total.total\n    line.total.over_price\n    line.total.under_price\n    line.team_total\n    line.team_total.away_total\n    line.team_total.away_over_price\n    line.team_total.away_under_price\n    line.team_total.home_total\n    line.team_total.home_over_price\n    line.team_total.home_under_price\n\nLive Odds and Closing Odds (NBA):\n\n.. code:: pycon\n\n    >>> db.odds(league_id=3)\n    >>> db.close(league_id=3)\n\nTeams\n~~~~~~~~~~~~~\n\nReturns a list of Teams covered by Don Best Sports */v2/team*\n\n.. code:: pycon\n\n    >>> teams = db.team()\n    >>> team = teams[0]\n    <Team id=1, name=Washington, abbreviation=WAS, full_name=Washington Redskins, information=nfc - east, league=<League id=1, name=NFL, abbreviation=None, information=None, sport=<Sport id=1, name=Football, abbreviation=None, information=None>>, rotation=None, side=None>>\n\n    # Available Team attributes:\n    team.id\n    team.name\n    team.abbreviation\n    team.full_name\n    team.information\n    team.league\n    team.rotation\n    team.side\n\nLeagues\n~~~~~~~~~~~~~\n\nReturns a list of Leagues covered by Don Best Sports */v2/league*\n\n.. code:: pycon\n\n    >>> leagues = db.league()\n    >>> league = leagues[0]\n    <League id=1, name=NFL, abbreviation=NFL, information=None, sport=<Sport id=1, name=Football, abbreviation=FB, information=None>\n\n    # Available League attributes\n    league.id\n    league.name\n    league.abbreviation\n    league.information\n    league.sport\n\nSportsbooks\n~~~~~~~~~~~~~\n\nReturns a list of Sports Books covered by Don Best Sports */v2/sportsbook*\n\n.. code:: pycon\n\n    >>> sportsbooks = db.sportsbook()\n    >>> sportsbook = sportsbooks[0]\n    <Sportsbook id=276, name=5D Reduced Juice, abbreviation=5DReduced>\n\n    # Available Sportsbook attributes:\n    sportsbook.id\n    sportsbook.name\n    sportsbook.abbreviation\n\nSports\n~~~~~~~~~~~~~\n\nReturns a list of Sports covered by Don Best Sports */v2/sport*\n\n.. code:: pycon\n\n    >>> sports = db.sport()\n    >>> sport = sports[1]\n    <Sport id=1, name=Football, abbreviation=FB, information=None>\n\n    # Available Sports attributes:\n    sport.id\n    sport.name\n    sport.abbreviation\n    sport.information\n\nLocations\n~~~~~~~~~~~~~\n\nReturns a list of Stadium and Arenas for all competitions in the schedule feed. */v2/location*\n\n.. code:: pycon\n\n    >>> locations = db.location()\n    >>> location = locations[0]\n    <Location id=1, name=Wilson Stadium, description=None, abbreviation=None, stadium_type=None, surface_type=None, seating_capacity=75339, elevation=0, city=<City id=2, name=Buffalo, country=USA, postalCode=14127, state=NY>>\n\n    # Available Location attributes:\n    location.id\n    location.name\n    location.description\n    location.abbreviation\n    location.stadium_type\n    location.surface_type\n    location.seating_capacity\n    location.elevation\n    location.city\n    location.city.id\n    location.city.name\n    location.city.country\n    location.city.postalCode\n    location.city.state\n\nMiscellaneous\n~~~~~~~~~~~~~\n\nBy default, donbest.py will return parsed python objects. If you\u2019d like the raw XML response for a request, just pass in ``parse_response=False``.\n\n.. code:: pycon\n\n    >>> response = db.schedule_inplay(parse_response=False)\n    >>> response\n    b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<don_best_sports><id>schedule_inplay</id><updated>2018-05-22T13:16:32+0</updated><schedule><sport id=\"1\" name=\"Football\">....\n\nIn most cases, the values of the object attributes are returned as the type you would expect (e.g. dates are returned as native python datetime objects). The main scenario in which this differs is for the unique 'id' of each object. All unique ids are returned as strings. Here is the quote from the Don Best API documentation that suggests this approach.\n\n    Note: The Don Best Sports API exposes identifiers for uniquely identifiable objects such as Events, Teams and Sports\n    Books. These IDs should always be treated as opaque strings, rather than integers of any specific type. The format of\n    the IDs can change over time, so relying on the current format may cause you problems in the future\n\nDonbest.py maps 1-1 to the Don Best Sports API (e.g., db.one.two.three() will\nsend a request to \u201chttp://xml.donbest.com/v2/one/two/three\u201d). However, the library does not currently support the *event_state* or *market_list* endpoint. It also does not support the Don Best Streaming Message API since that requires your IP to be whitelisted, which makes it harder to test.\n\nFor more information on all methods and usage, please read the `Don Best Sports API documentation. <http://members.donbest.com/integration/index.html>`_\n\n\nLicense |MIT License|\n----------------------\n\nMIT License. See `LICENSE <LICENSE>`__ for details.\n\nTODO\n-----------------\n* Add support for the `/v2/event_state/` endpoint\n* Add support for the Streaming API\n* Add option to have all objects return as properly formatted nested dictionaries\n\n.. |header image| image:: https://s3.amazonaws.com/random-images-for-github/donbest.png\n.. |MIT license| image:: https://img.shields.io/badge/License-MIT-yellow.svg\n   :target: https://opensource.org/licenses/MIT\n.. |build badge| image:: https://travis-ci.org/mamcmanus/donbest.py.svg?branch=master\n    :target: https://travis-ci.org/mamcmanus/donbest.py\n.. |pypi badge|  image:: https://img.shields.io/pypi/v/donbest.svg \n   :target: https://pypi.org/project/donbest/\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mamcmanus/donbest.py", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "donbest", "package_url": "https://pypi.org/project/donbest/", "platform": "", "project_url": "https://pypi.org/project/donbest/", "project_urls": {"Homepage": "https://github.com/mamcmanus/donbest.py"}, "release_url": "https://pypi.org/project/donbest/1.0.2/", "requires_dist": ["requests"], "requires_python": ">=3", "summary": "An easy-to-use python wrapper for the Don Best Sports API", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"header image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/677fc712479dfe681e8813f5f1565974de4dfb54/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f72616e646f6d2d696d616765732d666f722d6769746875622f646f6e626573742e706e67\"></p>\n<p><a href=\"https://travis-ci.org/mamcmanus/donbest.py\" rel=\"nofollow\"><img alt=\"build badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5c5c825ce0670c9d96a0f63ad876b450713ecc81/68747470733a2f2f7472617669732d63692e6f72672f6d616d636d616e75732f646f6e626573742e70792e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.org/project/donbest/\" rel=\"nofollow\"><img alt=\"pypi badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b61eefec00209362e44ce8d272bf14cf11cae7da/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646f6e626573742e737667\"></a> <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"MIT license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a></p>\n<p>Donbest.py is an easy-to-use Python wrapper for the <a href=\"http://xml.donbest.com/v2/home\" rel=\"nofollow\">Don Best Sports Data API.</a></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Donbest.py is available for download through the Python Package Index (PyPi). You can install it right away using pip or easy_install.</p>\n<pre>pip install donbest\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To get started, you\u2019re going to need to get your Don Best API token from the <a href=\"http://xml.donbest.com/v2/token\" rel=\"nofollow\">token generator</a> on the Don Best website. Once you\u2019ve got that, you\u2019re ready to go. In order to be able to generate a token you need to have an account with Don Best. You can get an account by contacting <a href=\"http://www.donbestcorp.com/xml-odds-feed/\" rel=\"nofollow\">Don Best</a>.</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">donbest</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">donbest</span><span class=\"o\">.</span><span class=\"n\">Donbest</span><span class=\"p\">(</span><span class=\"n\">api_token</span><span class=\"p\">)</span>\n</pre>\n<p>Once you\u2019ve done this, you can now use the <tt>db</tt> object to make calls to the Don Best API. Here are some examples:</p>\n<div id=\"get-odds-for-upcoming-nba-games\">\n<h3>Get Odds for Upcoming NBA games</h3>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">events</span> <span class=\"o\">=</span> <span class=\"n\">don</span><span class=\"o\">.</span><span class=\"n\">schedule_inplay</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nba_events</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">event</span> <span class=\"k\">for</span> <span class=\"n\">event</span> <span class=\"ow\">in</span> <span class=\"n\">events</span> <span class=\"k\">if</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">league</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">\"NBA\"</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">event</span> <span class=\"ow\">in</span> <span class=\"n\">nba_events</span><span class=\"p\">:</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>       <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">get_live_odds</span><span class=\"p\">())</span>\n<span class=\"go\">[&lt;Line event=&lt;Event id=817071, season=None, date=2018-05-25 01:05:00, opentime=None, name=None, event_type=None, event_state=None, time_changed=None, neutral=None, game_number=None, group=None, participants=None, league=None, location=None, live=None&gt;, away_rot=507, home_rot=508, time=2018-05-23 15:20:21, period_id=1, period=FG, type=previous, sportsbook=347, ps=&lt;PointSpread away_spread=0.00, home_spread=0.00, away_price=-110, home_price=-110&gt;, money=&lt;MoneyLine away_money=-110, home_money=-110, draw_money=0&gt;, total=&lt;Total total=220.00, over_price=-110, under_price=-110&gt;, team_total=&lt;TeamTotal away_total=109.50, away_over_price=-115, away_under_price=-105, home_total=110.00, home_over_price=-105, home_under_price=-115&gt;, display_away=-1, display_home=219%BD, no_line=None&gt;,\n....]</span>\n</pre>\n</div>\n<div id=\"event-schedule\">\n<h3>Event Schedule</h3>\n<p>In-play schedule:</p>\n<p>Returns a list of the upcoming scheduled competitions and propositions for the next several days. Does not return competitions that have already been played prior to the current day.</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">schedule</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">schedule_inplay</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">event</span> <span class=\"o\">=</span> <span class=\"n\">schedule</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">event</span>\n<span class=\"go\">&lt;Event id=806300, season=regular, date=None, opentime=2018-09-07 00:20:00+00:00, name=Atlanta Falcons vs Philadelphia Eagles, event_type=None, event_state=circled, time_changed=False, neutral=False, game_number=1, group=&lt;Group id=515449, name=None, description=NFL WEEK 1 (REGULAR SEASON) - Thursday, September 6th, type=event, type_id=1&gt;, participants=[&lt;Team id=11, name=Atlanta Falcons, abbreviation=atlanta, full_name=None, information=None, league=None, rotation=451, side=away&gt;, &lt;Team id=2, name=Philadelphia Eagles, abbreviation=philadelphia, full_name=None, information=None, league=None, rotation=452, side=home&gt;], league=&lt;League id=1, name=NFL, abbreviation=None, information=None, sport=&lt;Sport id=1, name=Football, abbreviation=None, information=None&gt;&gt;, location=&lt;Location id=680, name=Lincoln Financial Field, description=None, abbreviation=None, stadium_type=None, surface_type=None, seating_capacity=None, elevation=None, city=None&gt;, live=True, event_state_id=10&gt;\n\n# Available Event attributes:\nevent.id\nevent.season\nevent.date\nevent.opentime\nevent.name\nevent.event_type\nevent.event_state\nevent.time_changed\nevent.neutral\nevent.game_number\nevent.group\nevent.group.id\nevent.group.name\nevent.group.type\nevent.group.type_id\nevent.live\n\n## See Team section to view what attributes are\n## available on the items returned in the list of\n## participants\nevent.participants\n\n## See League section for what attributes\n## are available on League objects\nevent.league\n\n## See Location section for what attributes\n## may be available on Location objects\nevent.location\n\n# Available methods:\nevent.get_live_odds()\nevent.get_opening_odds()\nevent.get_closing_odds()\nevent.get_score()</span>\n</pre>\n<p>Full schedule:</p>\n<p>Either of the commands below return the full schedule of upcoming events including competitions and propositions months in the future.</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">schedule</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">current_schedue</span><span class=\"p\">()</span>\n<span class=\"go\">[&lt;Event id=819810, .... &gt;,\n&lt;Event id =819811, .... &gt;,\n........................]</span>\n</pre>\n</div>\n<div id=\"scores\">\n<h3>Scores</h3>\n<p>Returns a list containing the state of the live competition, current scores and period summary. Don Best ensures that their period scores are correct without using 3rd party providers which means that the scores are live and accurate.</p>\n<p>Live scores:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">score</span> <span class=\"o\">=</span> <span class=\"n\">scores</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Score id=818854, league_id=12, away_rot=8205, home_rot=8206, away_score=6, home_score=7, description=FINAL, time=2018-05-22 14:18:26+00:00, period=FINAL, period_id=0, away_score_ext=None, home_score_ext=None, period_summary=[&lt;Period name=Set 1, description=END-, time=2018-05-22 12:36:26+00:00, period_id=331, scores=[{'rot': '8205', 'value': '6'}, {'rot': '8206', 'value': '2'}]&gt;, &lt;Period name=Set 2, description=END-, time=2018-05-22 13:27:28+00:00, period_id=332, scores=[{'rot': '8205', 'value': '6'}, {'rot': '8206', 'value': '7'}]&gt;, &lt;Period name=Set 3, description=END-, time=2018-05-22 14:18:26+00:00, period_id=333, scores=[{'rot': '8205', 'value': '6'}, {'rot': '8206', 'value': '7'}]&gt;]&gt;\n\n# Available Score attributes:\n## The Score id is the id of the event it relates to...they are the same value\nscore.id\nscore.league_id\nscore.away_rot\nscore.home_rot\nscore.away_score\nscore.home_score\nscore.description\nscore.time\nscore.period\nscore.period_id\nscore.away_score_ext\nscore.home_score_ext\n\nfor period in score.period_summary:\n    period.name\n    period.description\n    period.time_changed\n    period.id\n    for score in period.scores:\n        score[\"rot\"]\n        score[\"value\"]</span>\n</pre>\n</div>\n<div id=\"lines\">\n<h3>Lines</h3>\n<p>Returns a list of opening odds, live odds, and closing odds for competitions and propositions by league. <em>League id is a required parameter for all of the Lines endpoints</em></p>\n<p>Opening Odds (NBA):</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nba_lines</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">league_id</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"n\">nba_lines</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Line event=&lt;Event id=817069, season=None, date=2018-05-23 01:05:00+00:00, opentime=None, name=None, event_type=None, event_state=None, time_changed=None, neutral=None, game_number=None, group=None, participants=None, league=None, location=None, live=None&gt;, away_rot=505, home_rot=506, time=2018-05-22 21:11:47+00:00, period_id=1, period=FG, type=previous, sportsbook=347, ps=&lt;PointSpread away_spread=8.00, home_spread=-8.00, away_price=-110, home_price=-110&gt;, money=&lt;MoneyLine away_money=330, home_money=-430, draw_money=0&gt;, total=&lt;Total total=226.50, over_price=-110, under_price=-110&gt;, team_total=&lt;TeamTotal away_total=109.00, away_over_price=-110, away_under_price=-110, home_total=117.50, home_over_price=-110, home_under_price=-110&gt;, display_away=226%BD, display_home=-8%BD&gt;\n\n# Available Line attributes:\nline.event\nline.away_rot\nline.home_rot\nline.time\nline.period_id\nline.period\nline.type\nline.sportsbook\nline.no_line\nline.display_home\nline.display_away\nline.ps\nline.ps.away_spread\nline.ps.home_spread\nline.ps.away_price\nline.ps.home_price\nline.money\nline.money.away_money\nline.money.home_money\nline.money.draw_money\nline.total\nline.total.total\nline.total.over_price\nline.total.under_price\nline.team_total\nline.team_total.away_total\nline.team_total.away_over_price\nline.team_total.away_under_price\nline.team_total.home_total\nline.team_total.home_over_price\nline.team_total.home_under_price</span>\n</pre>\n<p>Live Odds and Closing Odds (NBA):</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">odds</span><span class=\"p\">(</span><span class=\"n\">league_id</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">league_id</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"teams\">\n<h3>Teams</h3>\n<p>Returns a list of Teams covered by Don Best Sports <em>/v2/team</em></p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">teams</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">team</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">team</span> <span class=\"o\">=</span> <span class=\"n\">teams</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Team id=1, name=Washington, abbreviation=WAS, full_name=Washington Redskins, information=nfc - east, league=&lt;League id=1, name=NFL, abbreviation=None, information=None, sport=&lt;Sport id=1, name=Football, abbreviation=None, information=None&gt;&gt;, rotation=None, side=None&gt;&gt;\n\n# Available Team attributes:\nteam.id\nteam.name\nteam.abbreviation\nteam.full_name\nteam.information\nteam.league\nteam.rotation\nteam.side</span>\n</pre>\n</div>\n<div id=\"leagues\">\n<h3>Leagues</h3>\n<p>Returns a list of Leagues covered by Don Best Sports <em>/v2/league</em></p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">leagues</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">league</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">league</span> <span class=\"o\">=</span> <span class=\"n\">leagues</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;League id=1, name=NFL, abbreviation=NFL, information=None, sport=&lt;Sport id=1, name=Football, abbreviation=FB, information=None&gt;\n\n# Available League attributes\nleague.id\nleague.name\nleague.abbreviation\nleague.information\nleague.sport</span>\n</pre>\n</div>\n<div id=\"sportsbooks\">\n<h3>Sportsbooks</h3>\n<p>Returns a list of Sports Books covered by Don Best Sports <em>/v2/sportsbook</em></p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sportsbooks</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">sportsbook</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sportsbook</span> <span class=\"o\">=</span> <span class=\"n\">sportsbooks</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Sportsbook id=276, name=5D Reduced Juice, abbreviation=5DReduced&gt;\n\n# Available Sportsbook attributes:\nsportsbook.id\nsportsbook.name\nsportsbook.abbreviation</span>\n</pre>\n</div>\n<div id=\"sports\">\n<h3>Sports</h3>\n<p>Returns a list of Sports covered by Don Best Sports <em>/v2/sport</em></p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sports</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">sport</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sport</span> <span class=\"o\">=</span> <span class=\"n\">sports</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Sport id=1, name=Football, abbreviation=FB, information=None&gt;\n\n# Available Sports attributes:\nsport.id\nsport.name\nsport.abbreviation\nsport.information</span>\n</pre>\n</div>\n<div id=\"locations\">\n<h3>Locations</h3>\n<p>Returns a list of Stadium and Arenas for all competitions in the schedule feed. <em>/v2/location</em></p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">locations</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"n\">locations</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Location id=1, name=Wilson Stadium, description=None, abbreviation=None, stadium_type=None, surface_type=None, seating_capacity=75339, elevation=0, city=&lt;City id=2, name=Buffalo, country=USA, postalCode=14127, state=NY&gt;&gt;\n\n# Available Location attributes:\nlocation.id\nlocation.name\nlocation.description\nlocation.abbreviation\nlocation.stadium_type\nlocation.surface_type\nlocation.seating_capacity\nlocation.elevation\nlocation.city\nlocation.city.id\nlocation.city.name\nlocation.city.country\nlocation.city.postalCode\nlocation.city.state</span>\n</pre>\n</div>\n<div id=\"miscellaneous\">\n<h3>Miscellaneous</h3>\n<p>By default, donbest.py will return parsed python objects. If you\u2019d like the raw XML response for a request, just pass in <tt>parse_response=False</tt>.</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">schedule_inplay</span><span class=\"p\">(</span><span class=\"n\">parse_response</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">response</span>\n<span class=\"go\">b'&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\\n&lt;don_best_sports&gt;&lt;id&gt;schedule_inplay&lt;/id&gt;&lt;updated&gt;2018-05-22T13:16:32+0&lt;/updated&gt;&lt;schedule&gt;&lt;sport id=\"1\" name=\"Football\"&gt;....</span>\n</pre>\n<p>In most cases, the values of the object attributes are returned as the type you would expect (e.g. dates are returned as native python datetime objects). The main scenario in which this differs is for the unique \u2018id\u2019 of each object. All unique ids are returned as strings. Here is the quote from the Don Best API documentation that suggests this approach.</p>\n<blockquote>\nNote: The Don Best Sports API exposes identifiers for uniquely identifiable objects such as Events, Teams and Sports\nBooks. These IDs should always be treated as opaque strings, rather than integers of any specific type. The format of\nthe IDs can change over time, so relying on the current format may cause you problems in the future</blockquote>\n<p>Donbest.py maps 1-1 to the Don Best Sports API (e.g., db.one.two.three() will\nsend a request to \u201c<a href=\"http://xml.donbest.com/v2/one/two/three\" rel=\"nofollow\">http://xml.donbest.com/v2/one/two/three</a>\u201d). However, the library does not currently support the <em>event_state</em> or <em>market_list</em> endpoint. It also does not support the Don Best Streaming Message API since that requires your IP to be whitelisted, which makes it harder to test.</p>\n<p>For more information on all methods and usage, please read the <a href=\"http://members.donbest.com/integration/index.html\" rel=\"nofollow\">Don Best Sports API documentation.</a></p>\n</div>\n</div>\n<div id=\"license-mit-license\">\n<h2>License <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"MIT license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a></h2>\n<p>MIT License. See <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> for details.</p>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Add support for the <cite>/v2/event_state/</cite> endpoint</li>\n<li>Add support for the Streaming API</li>\n<li>Add option to have all objects return as properly formatted nested dictionaries</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3951280, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "184d7311a691d5f4fb85a14299a45864", "sha256": "3c6d47cea2ce3c4761d562c1a4389820836bde7702d55322a77673eab314ad14"}, "downloads": -1, "filename": "donbest-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "184d7311a691d5f4fb85a14299a45864", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 10850, "upload_time": "2018-05-23T02:28:47", "upload_time_iso_8601": "2018-05-23T02:28:47.450080Z", "url": "https://files.pythonhosted.org/packages/c0/4d/607801e5d76a747ef3a4b625b28adcfe9b34b3bea342337e2acca77f48bb/donbest-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71eb12a4bcfa577b1f1d985bce68eab2", "sha256": "c1d890586bd898f3734c640547967eb77c9f4c094285bc3a2c7bd2969dd98d42"}, "downloads": -1, "filename": "donbest-0.1.tar.gz", "has_sig": false, "md5_digest": "71eb12a4bcfa577b1f1d985bce68eab2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 14134, "upload_time": "2018-05-23T02:28:48", "upload_time_iso_8601": "2018-05-23T02:28:48.703250Z", "url": "https://files.pythonhosted.org/packages/b1/b5/3b7b5a768398482b8af426bb2c12786b3bd13460b0f62d4a0aa66e905b6f/donbest-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "9c55cdd3d64bb213443dcfe6d55a144c", "sha256": "bdb0bcf49de2c1d0beb398b6051c7fbdfe87b0cb4d37fa5f42f6b3f0072e003d"}, "downloads": -1, "filename": "donbest-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9c55cdd3d64bb213443dcfe6d55a144c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 11140, "upload_time": "2018-05-23T18:12:37", "upload_time_iso_8601": "2018-05-23T18:12:37.037490Z", "url": "https://files.pythonhosted.org/packages/d1/8a/45731b41a3c4a8cb4c9341252ea7c76968836a1442e7c750c6d02229cc60/donbest-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b768f4876f0561785893906995db2ba", "sha256": "0b18feedaee7e236b465173dd0431eee30880c04a133a09c8c70ec09f7e2d5f0"}, "downloads": -1, "filename": "donbest-0.2.tar.gz", "has_sig": false, "md5_digest": "0b768f4876f0561785893906995db2ba", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 14737, "upload_time": "2018-05-23T18:12:38", "upload_time_iso_8601": "2018-05-23T18:12:38.165051Z", "url": "https://files.pythonhosted.org/packages/37/b2/062704d48b8a756d5d7b76579945a8a86385bbae097d8aa3167d713750f3/donbest-0.2.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "528d9b47d87c8c6805494ad6ee41456c", "sha256": "01355e675efe047e279b4434254e3fd8d17042d630d46ca5a2fd6f684df5226d"}, "downloads": -1, "filename": "donbest-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "528d9b47d87c8c6805494ad6ee41456c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 11130, "upload_time": "2018-05-25T17:39:36", "upload_time_iso_8601": "2018-05-25T17:39:36.778484Z", "url": "https://files.pythonhosted.org/packages/f8/39/95128c818ecee7d64c53e990b07f9934b73ebdfb0f4475bd85eb3ca3879e/donbest-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2cc6282702704744eddb24d64377402", "sha256": "e556ca0cbbbd3a5857fb739cacf42b8f98894e7d289687198e2aea015912ac3e"}, "downloads": -1, "filename": "donbest-1.0.tar.gz", "has_sig": false, "md5_digest": "c2cc6282702704744eddb24d64377402", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 14707, "upload_time": "2018-05-25T17:39:38", "upload_time_iso_8601": "2018-05-25T17:39:38.156956Z", "url": "https://files.pythonhosted.org/packages/42/ef/aa0dc77f455b873423ec508dc7b60936b08f48270ac1a5e1a4d59c595d08/donbest-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "ab1aea2085c91b158b5b5c7c744e966e", "sha256": "9cc8e581a4e65c35c09fbb136c288d61b03b0aa24ab51592dea845b74c726eea"}, "downloads": -1, "filename": "donbest-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ab1aea2085c91b158b5b5c7c744e966e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 11172, "upload_time": "2018-06-04T13:26:44", "upload_time_iso_8601": "2018-06-04T13:26:44.084906Z", "url": "https://files.pythonhosted.org/packages/ff/97/7f1f203962c9357ee6bd3c9f76411b5bcad61d140a0c645934d66a5f0978/donbest-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b21ea43bddf43a1d54e337479b58af22", "sha256": "c96fe2f8c2ece8a46f6b4a267c981e0317b031b60720cb9d494868620fa909b2"}, "downloads": -1, "filename": "donbest-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b21ea43bddf43a1d54e337479b58af22", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 14735, "upload_time": "2018-06-04T13:26:45", "upload_time_iso_8601": "2018-06-04T13:26:45.402055Z", "url": "https://files.pythonhosted.org/packages/94/8b/0623922b2d659685ab80d31ddd03b1b10c51dc71d1becd990939a66971e5/donbest-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "b4e4be0feb1e1696f74db39b10d662a9", "sha256": "f8e3ca80b1e1b04f816c44cb7368fd9bd1722a28ddfbf929c61c341fa741e2e5"}, "downloads": -1, "filename": "donbest-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b4e4be0feb1e1696f74db39b10d662a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 11158, "upload_time": "2018-06-11T18:12:23", "upload_time_iso_8601": "2018-06-11T18:12:23.066986Z", "url": "https://files.pythonhosted.org/packages/f7/05/d55a4c73335514397de09ce5d9401f382ab6cbbbf81bbad2053783e4c964/donbest-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "edcc30ab095ea6f7d0012fb263067c60", "sha256": "32d58041e0ac2d4a14416c3e35adab0268970a26d607d5dc1b4cf7350320caa7"}, "downloads": -1, "filename": "donbest-1.0.2.tar.gz", "has_sig": false, "md5_digest": "edcc30ab095ea6f7d0012fb263067c60", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 14726, "upload_time": "2018-06-11T18:12:24", "upload_time_iso_8601": "2018-06-11T18:12:24.343282Z", "url": "https://files.pythonhosted.org/packages/48/c7/5846e1b0fe8f3a4080daa5f34846327f7d4f55994c15cc9004c134dd775c/donbest-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b4e4be0feb1e1696f74db39b10d662a9", "sha256": "f8e3ca80b1e1b04f816c44cb7368fd9bd1722a28ddfbf929c61c341fa741e2e5"}, "downloads": -1, "filename": "donbest-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b4e4be0feb1e1696f74db39b10d662a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 11158, "upload_time": "2018-06-11T18:12:23", "upload_time_iso_8601": "2018-06-11T18:12:23.066986Z", "url": "https://files.pythonhosted.org/packages/f7/05/d55a4c73335514397de09ce5d9401f382ab6cbbbf81bbad2053783e4c964/donbest-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "edcc30ab095ea6f7d0012fb263067c60", "sha256": "32d58041e0ac2d4a14416c3e35adab0268970a26d607d5dc1b4cf7350320caa7"}, "downloads": -1, "filename": "donbest-1.0.2.tar.gz", "has_sig": false, "md5_digest": "edcc30ab095ea6f7d0012fb263067c60", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 14726, "upload_time": "2018-06-11T18:12:24", "upload_time_iso_8601": "2018-06-11T18:12:24.343282Z", "url": "https://files.pythonhosted.org/packages/48/c7/5846e1b0fe8f3a4080daa5f34846327f7d4f55994c15cc9004c134dd775c/donbest-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:23 2020"}