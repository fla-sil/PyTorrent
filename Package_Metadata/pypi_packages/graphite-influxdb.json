{"info": {"author": "Dieter Plaetinck", "author_email": "dieter@vimeo.com", "bugtrack_url": null, "classifiers": [], "description": "Graphite-InfluxDB\n=================\n\nAn influxdb (0.8-rc5 or higher) backend for Graphite-web (source or 0.10.x) or graphite-api.\n\n\nInstall and configure using docker\n----------------------------------\n\nUsing docker is an easy way to get graphite-api + graphite-influx up and running.\nSee https://github.com/Dieterbe/graphite-api-influxdb-docker\n\nOtherwise, follow instructions below.\nGraphite-api is the simplest to setup, though graphite-web might perform better.\nYou can use the experimental statsd support in graphite-api to have this backend\nsubmit performance metrics (not supported with graphite-web)\n\n\nManual installation\n-------------------\n\n::\n\n    pip install graphite_influxdb\n\n\nAbout the retention schemas\n---------------------------\n\nIn the configs below, you'll see that you need to configure the schemas (datapoint resolutions) explicitly.\nIt basically contains the same information as /etc/carbon/storage-schemas.conf would for whisper.\nBut Influxdb currently has no way to supply us this information (yet), so we must configure it explicitly here.\nAlso, it seems like internally, the graphite-web/graphite-api is to configure the step (resolution in seconds)\nper metric (i.e. per Node/Reader), without looking at the timeframe.   I don't know how to deal with this yet (TODO), so for now it's one step per\npattern, so we don't need to specify retention timeframes.\n(In fact, in the code we can assume the data exists from now to -infinity, missing data you query for\nwill just show up as nulls anyway)\n\n\nUsing with graphite-api\n-----------------------\n\nYou need the patched version from https://github.com/brutasse/graphite-api/pull/36\nThis adds support for caching, statsd instrumentation, and graphite-style templates\n\nIn your graphite-api config file::\n\n    finders:\n      - graphite_influxdb.InfluxdbFinder\n    influxdb:\n       host: localhost\n       port: 8086\n       user: graphite\n       pass: graphite\n       db:   graphite\n       schema:\n         - ['', 60]\n         - ['high-res-metrics', 10]\n\n\n\nAlso enable the cache. memcache doesn't seem to work well because the list of series is too big.\nfilesystem seems to work well::\n\n    cache:\n        CACHE_TYPE: 'filesystem'\n        CACHE_DIR: '/tmp/graphite-api-cache'\n\n\nUsing with graphite-web\n-----------------------\n\nIn graphite's ``local_settings.py``::\n\n    STORAGE_FINDERS = (\n        'graphite_influxdb.InfluxdbFinder',\n    )\n    INFLUXDB_HOST = \"localhost\"\n    INFLUXDB_PORT = 8086\n    INFLUXDB_USER = \"graphite\"\n    INFLUXDB_PASS = \"graphite\"\n    INFLUXDB_DB =  \"graphite\"\n    INFLUXDB_SCHEMA = [\n        ('', 60),\n        ('high-res-metrics', 10)\n    ]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vimeo/graphite-influxdb", "keywords": null, "license": "apache2", "maintainer": null, "maintainer_email": null, "name": "graphite-influxdb", "package_url": "https://pypi.org/project/graphite-influxdb/", "platform": "any", "project_url": "https://pypi.org/project/graphite-influxdb/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/vimeo/graphite-influxdb"}, "release_url": "https://pypi.org/project/graphite-influxdb/0.4/", "requires_dist": null, "requires_python": null, "summary": "Influxdb backend plugin for graphite-web and graphite-api", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>An influxdb (0.8-rc5 or higher) backend for Graphite-web (source or 0.10.x) or graphite-api.</p>\n<div id=\"install-and-configure-using-docker\">\n<h2>Install and configure using docker</h2>\n<p>Using docker is an easy way to get graphite-api + graphite-influx up and running.\nSee <a href=\"https://github.com/Dieterbe/graphite-api-influxdb-docker\" rel=\"nofollow\">https://github.com/Dieterbe/graphite-api-influxdb-docker</a></p>\n<p>Otherwise, follow instructions below.\nGraphite-api is the simplest to setup, though graphite-web might perform better.\nYou can use the experimental statsd support in graphite-api to have this backend\nsubmit performance metrics (not supported with graphite-web)</p>\n</div>\n<div id=\"manual-installation\">\n<h2>Manual installation</h2>\n<pre>pip install graphite_influxdb\n</pre>\n</div>\n<div id=\"about-the-retention-schemas\">\n<h2>About the retention schemas</h2>\n<p>In the configs below, you\u2019ll see that you need to configure the schemas (datapoint resolutions) explicitly.\nIt basically contains the same information as /etc/carbon/storage-schemas.conf would for whisper.\nBut Influxdb currently has no way to supply us this information (yet), so we must configure it explicitly here.\nAlso, it seems like internally, the graphite-web/graphite-api is to configure the step (resolution in seconds)\nper metric (i.e. per Node/Reader), without looking at the timeframe.   I don\u2019t know how to deal with this yet (TODO), so for now it\u2019s one step per\npattern, so we don\u2019t need to specify retention timeframes.\n(In fact, in the code we can assume the data exists from now to -infinity, missing data you query for\nwill just show up as nulls anyway)</p>\n</div>\n<div id=\"using-with-graphite-api\">\n<h2>Using with graphite-api</h2>\n<p>You need the patched version from <a href=\"https://github.com/brutasse/graphite-api/pull/36\" rel=\"nofollow\">https://github.com/brutasse/graphite-api/pull/36</a>\nThis adds support for caching, statsd instrumentation, and graphite-style templates</p>\n<p>In your graphite-api config file:</p>\n<pre>finders:\n  - graphite_influxdb.InfluxdbFinder\ninfluxdb:\n   host: localhost\n   port: 8086\n   user: graphite\n   pass: graphite\n   db:   graphite\n   schema:\n     - ['', 60]\n     - ['high-res-metrics', 10]\n</pre>\n<p>Also enable the cache. memcache doesn\u2019t seem to work well because the list of series is too big.\nfilesystem seems to work well:</p>\n<pre>cache:\n    CACHE_TYPE: 'filesystem'\n    CACHE_DIR: '/tmp/graphite-api-cache'\n</pre>\n</div>\n<div id=\"using-with-graphite-web\">\n<h2>Using with graphite-web</h2>\n<p>In graphite\u2019s <tt>local_settings.py</tt>:</p>\n<pre>STORAGE_FINDERS = (\n    'graphite_influxdb.InfluxdbFinder',\n)\nINFLUXDB_HOST = \"localhost\"\nINFLUXDB_PORT = 8086\nINFLUXDB_USER = \"graphite\"\nINFLUXDB_PASS = \"graphite\"\nINFLUXDB_DB =  \"graphite\"\nINFLUXDB_SCHEMA = [\n    ('', 60),\n    ('high-res-metrics', 10)\n]\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1227150, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4f81553a33f04f19e5fd831a02528ae2", "sha256": "56cfdcf6cabb1d14f1a2eb16b1b578e587092d3859fac61f20be45d8c6efbe3f"}, "downloads": -1, "filename": "graphite-influxdb-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4f81553a33f04f19e5fd831a02528ae2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1538, "upload_time": "2014-04-08T19:36:55", "upload_time_iso_8601": "2014-04-08T19:36:55.711866Z", "url": "https://files.pythonhosted.org/packages/55/68/b32987b7c59ae7c4c6e617ab05bb66087ec9809bf40d8ba0cba85e3af883/graphite-influxdb-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6c969847190fbb209e8ccdb89f65e086", "sha256": "85a333fad393bc047a6913a2c76657b3a379f89f67809c06b71bd5fbe4786928"}, "downloads": -1, "filename": "graphite-influxdb-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6c969847190fbb209e8ccdb89f65e086", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2501, "upload_time": "2014-04-08T20:38:31", "upload_time_iso_8601": "2014-04-08T20:38:31.553168Z", "url": "https://files.pythonhosted.org/packages/d6/28/a1c40209f7bb9769883b3b9cc9a3ee20127900ff5d94954cdbddf0fea043/graphite-influxdb-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "23223812388001f6e042a21b9230d640", "sha256": "a77680cdb00330079fdd4b159b60328c54a50fd93fb47ad7686f747543e099b0"}, "downloads": -1, "filename": "graphite-influxdb-0.1.2.tar.gz", "has_sig": false, "md5_digest": "23223812388001f6e042a21b9230d640", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2754, "upload_time": "2014-04-09T18:36:30", "upload_time_iso_8601": "2014-04-09T18:36:30.347465Z", "url": "https://files.pythonhosted.org/packages/19/02/388e9467384a75ecdc869fcc123a6de8895c1f7b9ae7a19b439415c97aa3/graphite-influxdb-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "bab475798ba3b461eb8e7e2f82679353", "sha256": "0f04bac470fd64356495acc46910bc5f8e3ff7df142482fdd6932cb27ed16601"}, "downloads": -1, "filename": "graphite-influxdb-0.1.3.tar.gz", "has_sig": false, "md5_digest": "bab475798ba3b461eb8e7e2f82679353", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2808, "upload_time": "2014-04-11T15:06:11", "upload_time_iso_8601": "2014-04-11T15:06:11.717999Z", "url": "https://files.pythonhosted.org/packages/be/d7/f00f984f8db3b74df6bc511d4e173599a9422d85c3b0b141ce5f827e7364/graphite-influxdb-0.1.3.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "91fc0948951b84b72a96181ea70755f0", "sha256": "2ff7e6f1feab50f539ee503d8041e91f073a9d0966b576300a3f0bd98b33ed53"}, "downloads": -1, "filename": "graphite-influxdb-0.2.tar.gz", "has_sig": false, "md5_digest": "91fc0948951b84b72a96181ea70755f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4635, "upload_time": "2014-06-18T14:19:25", "upload_time_iso_8601": "2014-06-18T14:19:25.753912Z", "url": "https://files.pythonhosted.org/packages/e4/cb/9fdc154288fb474180f159a905334957a3bc8196b71e5968cb4de0e13644/graphite-influxdb-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "5ce64ff6bb0b41c99e57486d6ec86eb7", "sha256": "0a704ae8ed2d1e7b7af076519812fe72a8f06a9f9e217a2cf1b5d5ac21c5649a"}, "downloads": -1, "filename": "graphite-influxdb-0.3.tar.gz", "has_sig": false, "md5_digest": "5ce64ff6bb0b41c99e57486d6ec86eb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8317, "upload_time": "2014-08-11T15:41:18", "upload_time_iso_8601": "2014-08-11T15:41:18.340324Z", "url": "https://files.pythonhosted.org/packages/29/37/702fbbcec4bee8e59e69c3f8ce978860fa6e8280f0f81ffaab68da951fd4/graphite-influxdb-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "b22fd2b730b765df976d814d8c46e61a", "sha256": "d8ee54b2645b8022d0bf1ce939502bc049827bd71220822c1230ecbd8ed07b32"}, "downloads": -1, "filename": "graphite-influxdb-0.4.tar.gz", "has_sig": false, "md5_digest": "b22fd2b730b765df976d814d8c46e61a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6844, "upload_time": "2014-09-16T19:55:15", "upload_time_iso_8601": "2014-09-16T19:55:15.023381Z", "url": "https://files.pythonhosted.org/packages/36/d5/6de565e03d598c344fe0ca62c94f41b953be727eff4816c2a8f554aa049f/graphite-influxdb-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b22fd2b730b765df976d814d8c46e61a", "sha256": "d8ee54b2645b8022d0bf1ce939502bc049827bd71220822c1230ecbd8ed07b32"}, "downloads": -1, "filename": "graphite-influxdb-0.4.tar.gz", "has_sig": false, "md5_digest": "b22fd2b730b765df976d814d8c46e61a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6844, "upload_time": "2014-09-16T19:55:15", "upload_time_iso_8601": "2014-09-16T19:55:15.023381Z", "url": "https://files.pythonhosted.org/packages/36/d5/6de565e03d598c344fe0ca62c94f41b953be727eff4816c2a8f554aa049f/graphite-influxdb-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:38 2020"}