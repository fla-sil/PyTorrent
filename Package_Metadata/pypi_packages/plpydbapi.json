{"info": {"author": "Peter Eisentraut", "author_email": "peter@eisentraut.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Plugins", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Database", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "plpydbapi\n=========\n\nThis module provides a (sort of) Python DB-API 2.0 compatible\ninterface on top of PL/Python.\n\nAbout DB-API: <http://www.python.org/dev/peps/pep-0249/>\n\nAbout PL/Python: <http://www.postgresql.org/docs/current/static/plpython.html>\n\nInstallation\n------------\n\nplpydbapi supports Python 2.6 and later, including Python 3.x, and\nrequires PostgreSQL 9.1 or later.  Using `cursor.description` requires\nPostgreSQL 9.2.\n\nJust install it like any setuptools-enabled Python module, for example\n\n    python setup.py install\n\nor use easy_install.  Make sure you use the Python version that your\ninstallation of PL/Python was built against.\n\nUsing\n-----\n\nHere is an example how to use it:\n\n    import plpydbapi\n\n    dbconn = plpydbapi.connect()\n    cursor = dbconn.cursor()\n    cursor.execute(\"SELECT ... FROM ...\")\n    for row in cursor.fetchall():\n        plpy.notice(\"got row %s\" % row)\n    dbconn.close()\n\nTest suite\n----------\n\n[![Build Status](https://secure.travis-ci.org/petere/plpydbapi.png)](http://travis-ci.org/petere/plpydbapi)\n\nThere is a test suite in the test/ subdirectory.  It uses the DB-API\ncompliance test framework from\n<https://launchpad.net/dbapi-compliance>.  So first fetch, er, clone,\ner, branch yourself a copy of that\n\n    bzr branch lp:dbapi-compliance\n\ninto the current directory.  If you have\n[mr](http://kitenet.net/~joey/code/mr/), just run `mr up`.\n\nIf you are using Python 2.6, you also need the unittest2 package; with\nPython 2.7 and later, the unittest module in the standard library is\nenough.\n\nThen run\n\n    python setup.py test\n\nThis will run the unittest suite inside the PostgreSQL server,\nforwarding the output for the client to see.\n\nIf you have a complicated setup, such as multiple PostgreSQL versions\nor nonstandard ports, use libpq environment variables such as PGHOST\nand PGPORT to point the test suite driver to an instance it can use.\nYou can also look into the files setup.py and\ntest/run_test_plpydbapi_dbapi20.sql for some additional ways to tweak\nthe process.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/petere/plpydbapi", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "plpydbapi", "package_url": "https://pypi.org/project/plpydbapi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/plpydbapi/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/petere/plpydbapi"}, "release_url": "https://pypi.org/project/plpydbapi/0.20121018/", "requires_dist": null, "requires_python": null, "summary": "DB-API compatible interface on top of PL/Python", "version": "0.20121018", "yanked": false, "html_description": "<div class=\"project-description\">\n            plpydbapi<br>=========<br><br>This module provides a (sort of) Python DB-API 2.0 compatible<br>interface on top of PL/Python.<br><br>About DB-API: &lt;http://www.python.org/dev/peps/pep-0249/&gt;<br><br>About PL/Python: &lt;http://www.postgresql.org/docs/current/static/plpython.html&gt;<br><br>Installation<br>------------<br><br>plpydbapi supports Python 2.6 and later, including Python 3.x, and<br>requires PostgreSQL 9.1 or later.  Using `cursor.description` requires<br>PostgreSQL 9.2.<br><br>Just install it like any setuptools-enabled Python module, for example<br><br>    python setup.py install<br><br>or use easy_install.  Make sure you use the Python version that your<br>installation of PL/Python was built against.<br><br>Using<br>-----<br><br>Here is an example how to use it:<br><br>    import plpydbapi<br><br>    dbconn = plpydbapi.connect()<br>    cursor = dbconn.cursor()<br>    cursor.execute(\"SELECT ... FROM ...\")<br>    for row in cursor.fetchall():<br>        plpy.notice(\"got row %s\" % row)<br>    dbconn.close()<br><br>Test suite<br>----------<br><br>[![Build Status](https://secure.travis-ci.org/petere/plpydbapi.png)](http://travis-ci.org/petere/plpydbapi)<br><br>There is a test suite in the test/ subdirectory.  It uses the DB-API<br>compliance test framework from<br>&lt;https://launchpad.net/dbapi-compliance&gt;.  So first fetch, er, clone,<br>er, branch yourself a copy of that<br><br>    bzr branch lp:dbapi-compliance<br><br>into the current directory.  If you have<br>[mr](http://kitenet.net/~joey/code/mr/), just run `mr up`.<br><br>If you are using Python 2.6, you also need the unittest2 package; with<br>Python 2.7 and later, the unittest module in the standard library is<br>enough.<br><br>Then run<br><br>    python setup.py test<br><br>This will run the unittest suite inside the PostgreSQL server,<br>forwarding the output for the client to see.<br><br>If you have a complicated setup, such as multiple PostgreSQL versions<br>or nonstandard ports, use libpq environment variables such as PGHOST<br>and PGPORT to point the test suite driver to an instance it can use.<br>You can also look into the files setup.py and<br>test/run_test_plpydbapi_dbapi20.sql for some additional ways to tweak<br>the process.<br>\n          </div>"}, "last_serial": 743650, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f69aaee83e8cdd3e9e31466c5c572e17", "sha256": "566233c32690cbf7544fa5d6329f3745da01beeeb047fdf909a122f52eb43edd"}, "downloads": -1, "filename": "plpydbapi-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f69aaee83e8cdd3e9e31466c5c572e17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5885, "upload_time": "2011-11-10T19:50:35", "upload_time_iso_8601": "2011-11-10T19:50:35.663432Z", "url": "https://files.pythonhosted.org/packages/46/b5/b9e599ceb798febcd407289a80af8408c3e2d03161015236dbc70d2096ca/plpydbapi-0.1.0.tar.gz", "yanked": false}], "0.1.0dev": [], "0.20121018": [{"comment_text": "", "digests": {"md5": "7f93c91dd45b37315b4cbdaee5400fa4", "sha256": "12a59f30b4fc7621f0780cbae275fead1e0c71e0c0d749b4d5d8dee7ddab35a4"}, "downloads": -1, "filename": "plpydbapi-0.20121018.tar.gz", "has_sig": true, "md5_digest": "7f93c91dd45b37315b4cbdaee5400fa4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6641, "upload_time": "2012-10-19T02:21:57", "upload_time_iso_8601": "2012-10-19T02:21:57.063407Z", "url": "https://files.pythonhosted.org/packages/7b/a5/b66027be2d693d18437594ebed429cb9e65d7404ee1e4685aad6406eddac/plpydbapi-0.20121018.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7f93c91dd45b37315b4cbdaee5400fa4", "sha256": "12a59f30b4fc7621f0780cbae275fead1e0c71e0c0d749b4d5d8dee7ddab35a4"}, "downloads": -1, "filename": "plpydbapi-0.20121018.tar.gz", "has_sig": true, "md5_digest": "7f93c91dd45b37315b4cbdaee5400fa4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6641, "upload_time": "2012-10-19T02:21:57", "upload_time_iso_8601": "2012-10-19T02:21:57.063407Z", "url": "https://files.pythonhosted.org/packages/7b/a5/b66027be2d693d18437594ebed429cb9e65d7404ee1e4685aad6406eddac/plpydbapi-0.20121018.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:52:30 2020"}