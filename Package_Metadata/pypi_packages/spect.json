{"info": {"author": "con-f-use", "author_email": "con-f-use@gmx.net", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "spect\n-----\n\nCategorize the `dir()` of a python object.\n\nEssentially filters Python's [dir()](https://docs.python.org/3/library/functions.html#dir) built-in for a given object nicely. Might become a `dir()` pretty printer on steroids at some point and/or a nice helper for quick, interactive debugging / introspecting.\n\n\nUsage\n-----\n\n```python\nimport spect\nimport re\n\nrespect = spect(re)\nprint(respect.dunder)  # {'__all__', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', '__version__'}\nprint(respect.private)  # {'_compile', '_locale', '_alphanum_bytes', '_expand', '_alphanum_str', '_MAXCACHE', '_pickle', '_subx', '_pattern_type', '_compile_repl', '_cache'}\nprint(repsect.const_private) # {'_MAXCACHE'}\n```\n\nSo far `spect` knows these categories:\n\n- _regular_: `varname`\n\n - _alias_: `varname_`\n - _dunder_: `__varname__`\n - _private_: `_varname`\n - _superprivate_: `__varname`\n - _general_: an alias for _regular_, so `varname` as well\n - _magic_: double underscore delimitered (dunder) and callable (e.g. `__init__`)\n - _const_: any of the above as long as it has letters and all of them are uppercase (e.g. `_MAXCACHE`)\n\nThe categories can be combined and are sets (as are their combinations):\n\n - _const_dunder_superprivate_: all that are either double underscore delimitered\n   or superprivate and contain at least one upper case letter no lower case.\n\n   ```python\n   x = spect(...)\n   x.const_dunder_superprivate == (x.dunder | x.superprivate) & x.const  # True\n   ```\n\n - _private_alias_: combination of _alias_ and _private_ from above, i.e. equivalent to the set notation:\n\n   ```python\n   x.private_alias == x.alias | x.private  # True\n   # has all in x.private and x.alias\n   ```\n\n\nInstallation\n------------\n\n```shell\npython -m pip install --user spect\n```\n\n\nToDo\n----\n\n - Make Python 2 compatible (maybe)\n - Ponder getting magic methods from a list (version dependent!\n   hard to future-proof! but no false positives)\n   - Think about the use `callable` for Python versions 3.0 to 3.2 where `callable` was deprecated\n - Maybe add a filter for `snake_case`, `camelCase` and `PascalCase`\n   (`kebab-case` does not make for valid variable names)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/con-f-use/spect", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "spect", "package_url": "https://pypi.org/project/spect/", "platform": "", "project_url": "https://pypi.org/project/spect/", "project_urls": {"Homepage": "https://github.com/con-f-use/spect"}, "release_url": "https://pypi.org/project/spect/0.3/", "requires_dist": null, "requires_python": "", "summary": "Categorize the `dir()` of a python object.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>spect</h2>\n<p>Categorize the <code>dir()</code> of a python object.</p>\n<p>Essentially filters Python's <a href=\"https://docs.python.org/3/library/functions.html#dir\" rel=\"nofollow\">dir()</a> built-in for a given object nicely. Might become a <code>dir()</code> pretty printer on steroids at some point and/or a nice helper for quick, interactive debugging / introspecting.</p>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">spect</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n\n<span class=\"n\">respect</span> <span class=\"o\">=</span> <span class=\"n\">spect</span><span class=\"p\">(</span><span class=\"n\">re</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">respect</span><span class=\"o\">.</span><span class=\"n\">dunder</span><span class=\"p\">)</span>  <span class=\"c1\"># {'__all__', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', '__version__'}</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">respect</span><span class=\"o\">.</span><span class=\"n\">private</span><span class=\"p\">)</span>  <span class=\"c1\"># {'_compile', '_locale', '_alphanum_bytes', '_expand', '_alphanum_str', '_MAXCACHE', '_pickle', '_subx', '_pattern_type', '_compile_repl', '_cache'}</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">repsect</span><span class=\"o\">.</span><span class=\"n\">const_private</span><span class=\"p\">)</span> <span class=\"c1\"># {'_MAXCACHE'}</span>\n</pre>\n<p>So far <code>spect</code> knows these categories:</p>\n<ul>\n<li>\n<p><em>regular</em>: <code>varname</code></p>\n</li>\n<li>\n<p><em>alias</em>: <code>varname_</code></p>\n</li>\n<li>\n<p><em>dunder</em>: <code>__varname__</code></p>\n</li>\n<li>\n<p><em>private</em>: <code>_varname</code></p>\n</li>\n<li>\n<p><em>superprivate</em>: <code>__varname</code></p>\n</li>\n<li>\n<p><em>general</em>: an alias for <em>regular</em>, so <code>varname</code> as well</p>\n</li>\n<li>\n<p><em>magic</em>: double underscore delimitered (dunder) and callable (e.g. <code>__init__</code>)</p>\n</li>\n<li>\n<p><em>const</em>: any of the above as long as it has letters and all of them are uppercase (e.g. <code>_MAXCACHE</code>)</p>\n</li>\n</ul>\n<p>The categories can be combined and are sets (as are their combinations):</p>\n<ul>\n<li>\n<p><em>const_dunder_superprivate</em>: all that are either double underscore delimitered\nor superprivate and contain at least one upper case letter no lower case.</p>\n<pre><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">spect</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">const_dunder_superprivate</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">dunder</span> <span class=\"o\">|</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">superprivate</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">const</span>  <span class=\"c1\"># True</span>\n</pre>\n</li>\n<li>\n<p><em>private_alias</em>: combination of <em>alias</em> and <em>private</em> from above, i.e. equivalent to the set notation:</p>\n<pre><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">private_alias</span> <span class=\"o\">==</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">alias</span> <span class=\"o\">|</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">private</span>  <span class=\"c1\"># True</span>\n<span class=\"c1\"># has all in x.private and x.alias</span>\n</pre>\n</li>\n</ul>\n<h2>Installation</h2>\n<pre>python -m pip install --user spect\n</pre>\n<h2>ToDo</h2>\n<ul>\n<li>Make Python 2 compatible (maybe)</li>\n<li>Ponder getting magic methods from a list (version dependent!\nhard to future-proof! but no false positives)\n<ul>\n<li>Think about the use <code>callable</code> for Python versions 3.0 to 3.2 where <code>callable</code> was deprecated</li>\n</ul>\n</li>\n<li>Maybe add a filter for <code>snake_case</code>, <code>camelCase</code> and <code>PascalCase</code>\n(<code>kebab-case</code> does not make for valid variable names)</li>\n</ul>\n\n          </div>"}, "last_serial": 6514827, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "9f06b8a03f5aa733b58dd09838fe0d18", "sha256": "67fe7d72821502743f435a12f2cc6487e67d82e5845840a4e2e9bf53bfa3264e"}, "downloads": -1, "filename": "spect-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9f06b8a03f5aa733b58dd09838fe0d18", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1815, "upload_time": "2020-01-13T12:14:14", "upload_time_iso_8601": "2020-01-13T12:14:14.782161Z", "url": "https://files.pythonhosted.org/packages/f5/cb/b2ab5169ca7493cd5beadb6df0f8f0be04c7ef80c396a0bc2017e93b1fa0/spect-0.1-py2.py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "af65b8f7f6aae67be22d64ba42665f95", "sha256": "21a701b339d0d96a7aca497ac72ccc04428845d04118e4d31254df9f306dcaa9"}, "downloads": -1, "filename": "spect-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "af65b8f7f6aae67be22d64ba42665f95", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3308, "upload_time": "2020-01-14T18:54:14", "upload_time_iso_8601": "2020-01-14T18:54:14.447233Z", "url": "https://files.pythonhosted.org/packages/84/80/9ecd89b3fe7fe43dcb3edc0999be968be44b66fa475675266bbe1da0b99d/spect-0.2-py2.py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "a14d1409381e0a41d1ad23a0f5adf4ea", "sha256": "115f89b7f034c51bbf440fc6600b0510c5c85912e640b2f049fcd29c6df4d39d"}, "downloads": -1, "filename": "spect-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a14d1409381e0a41d1ad23a0f5adf4ea", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3719, "upload_time": "2020-01-15T12:15:30", "upload_time_iso_8601": "2020-01-15T12:15:30.767357Z", "url": "https://files.pythonhosted.org/packages/da/39/95d5f5ebd3cdcae55efdb9b37c75fa89aba1e9b633c51095e5c41ba99d50/spect-0.2.1-py2.py3-none-any.whl", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "f0e993f5dcdef8371925769f9fbbb441", "sha256": "3cf0202f35bb6ea96de0aba16e051cac16ac71287f8558be9d5c8d944b2f3434"}, "downloads": -1, "filename": "spect-0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f0e993f5dcdef8371925769f9fbbb441", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3757, "upload_time": "2020-01-24T16:10:43", "upload_time_iso_8601": "2020-01-24T16:10:43.038742Z", "url": "https://files.pythonhosted.org/packages/c0/e6/313b998253cfcfc19a04e7f887490a8b4991d8a4d60468326c99b812f6b4/spect-0.3-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f0e993f5dcdef8371925769f9fbbb441", "sha256": "3cf0202f35bb6ea96de0aba16e051cac16ac71287f8558be9d5c8d944b2f3434"}, "downloads": -1, "filename": "spect-0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f0e993f5dcdef8371925769f9fbbb441", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3757, "upload_time": "2020-01-24T16:10:43", "upload_time_iso_8601": "2020-01-24T16:10:43.038742Z", "url": "https://files.pythonhosted.org/packages/c0/e6/313b998253cfcfc19a04e7f887490a8b4991d8a4d60468326c99b812f6b4/spect-0.3-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:05:39 2020"}