{"info": {"author": "Evan Stratford", "author_email": "evan.stratford@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Code Generators", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Markup"], "description": "XHPy: XHP for Python\n====================\n\n`XHPy <https://github.com/candu/xhpy>`_ extends Python syntax such that XML document\nfragments become valid Python expressions. It is based off\n`XHP <https://github.com/facebook/xhp>`_, a similar framework for PHP.\n\nAdvantages\n----------\n- *Simplicity*: write UI logic in a simple, expressive syntax without the need for external\n  templates or templating languages.\n\n- *Flexibility*: use Python expressions freely within XHPy tags, and vice-versa.\n\n- *Security*: benefit from automatic escaping of text within XHPy tags.\n\n- *Reusability*: build reusable components by subclassing :x:element.\n\nAn example\n----------\nIn bar.py:\n\n::\n\n    from xhpy.init import register_xhpy_module\n    register_xhpy_module('foo')\n    import foo\n\nIn foo.py:\n\n::\n\n    from xhpy.pylib import *\n    class :ui:foo(:x:element):\n      attribute list bar\n      category %flow\n      def render(self):\n        a = <ul />\n        for b in self.getAttribute('bar'):\n          a.appendChild(<li>{b}</li>)\n        return a\n    print <div class=\"baz\"><ui:foo bar={range(3)} /></div>\n\nWe can now run bar.py as a normal Python script:\n\n::\n\n    $ python bar.py\n    <div class=\"baz\"><ul><li>0</li><li>1</li><li>2</li></ul></div>\n\nCongratulations! You just wrote your first snippet of XHPy.\n\nSyntax\n------\n\nXHPy adds some new syntax to Python. Line by line replay time!\n\n::\n\n    from xhpy.init import register_xhpy_module\n\nThis initializes XHPy and allows you to register modules to be interpreted as XHPy.\n\n::\n\n    register_xhpy_module('foo')\n\nNow the ``foo`` module in ``foo.py`` will be interpreted as XHPy when imported.\nIf ``foo`` were a package, all of its submodules would also be registered; this is\nuseful for registering UI libraries.\n\n::\n\n    import foo\n\nTo actually use XHPy, however, you will probably want the core library:\n\n::\n\n    from xhpy.pylib import *\n\nNow you have access to all the standard HTML 4.0 elements, the ``:x:element`` base class\n(this is what you build custom components on top of!), and some utilities.\n\n::\n\n    class :ui:foo(:x:element):\n\nMaking new components is easy: just subclass ``:x:element``. For your component class to be\nregistered, it must start with ``:`` - this clearly distinguishes your components from\nordinary Python classes.\n\n::\n\n    attribute list bar\n\nThis is an attribute declaration, meaning that ``:ui:foo`` allows bar attributes on ``<ui:foo>``\ntags. Note the\n\n::\n\n    <ui:foo bar={range(3)} />\n\nlater on - like XHP, XHPy uses XML attribute syntax.\n\n::\n\n    category %flow\n\nThis is a category declaration - ``:ui:foo`` is part of the ``%flow`` category. Categories are\nprimarily useful as a way of identifying elements that are similar without using\ninheritance; for example, the ``<a>`` tag in pylib.html has\n\n::\n\n    children (pcdata | %flow)*\n\nindicating that its children must either contain text or be of the ``%flow`` category. (So\nwe can put ``<ui:foo>`` inside ``<a>``!)\n\n::\n\n    def render(self):    \n\nWhen you print an ``:x:element`` (or call ``str`` on it), the ``render()`` method is invoked; this\nis where you put your UI logic.\n\n::\n\n    a = <ul />\n    for b in self.getAttribute('bar'):\n        a.appendChild(<li>{b}</li>)\n    return a\n\nHere, ``<ui:foo>`` is a thin wrapper around ``<ul>`` that allows you to construct an unordered\nlist out of a Python list. Standard HTML elements like ``<ul>`` and ``<li>`` are automatically\nrendered - except that, in XHPy, you can use Python expressions within tags, so that\n\n::\n\n    {b}\n\nis replaced by the value of b. Note the use of ``getAttribute()`` and ``appendChild()``:\n\n::\n\n    self.getAttribute('bar')\n\nfetches the value of attribute ``bar`` (in this case, ``range(3)``), whereas\n\n::\n\n    a.appendChild(<li>{b}</li>)\n\nadds ``<li>{b}</li>`` as a child of ``a = <ul />``.\n\nXHPy is largely based off XHP; for more details on the latter, see the\n`XHP wiki <https://github.com/facebook/xhp/wiki/>`_. The syntax has been adapted for\nPython; in particular:\n\n- there are no semicolons;\n- XHPy class names may be used anywhere ordinary Python classes can;\n- XHPy tags ignore internal whitespace, but must externally obey indentation and\n  line continuation rules.\n  \nMore on the last point:\n\n::\n\n    def foo(href):\n      return <a href={href}></a>\n\n    def bar(href):\n      return\\\n      <a href={href}></a>\n\nare valid, whereas\n\n::\n\n    def foo(href):\n      return\\\n        <a href={href}>\n        </a>\n\nis not, as it introduces an extra dedent after ``</a>``.\n\nHow it works\n------------\nWhen you\n\n::\n\n    import xhpy.init\n\nXHPy installs an `import hook <http://www.python.org/dev/peps/pep-0302/>`_.\nThis hook traps subsequent import statements, running them through a preprocessor\nthat parses a superset of Python. This preprocessor translates XHPy tags and class\nnames to valid Python, then executes the translated code in module scope.\n\nThis is similar to how XHP works, except:\n\n- with, e.g., `pythonenv <http://pypi.python.org/pypi/virtualenv>`_, you can always use\n  XHPy even without access to system-wide Python package installation directories;\n- by default, Python compiles bytecode .pyc files from your modules, so the\n  preprocessing only needs to be done once when a module is first imported.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/candu/xhpy", "keywords": "xhp,html,xml", "license": "Apache", "maintainer": null, "maintainer_email": null, "name": "xhpy", "package_url": "https://pypi.org/project/xhpy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/xhpy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/candu/xhpy"}, "release_url": "https://pypi.org/project/xhpy/0.83/", "requires_dist": null, "requires_python": null, "summary": "XHP for Python", "version": "0.83", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/candu/xhpy\" rel=\"nofollow\">XHPy</a> extends Python syntax such that XML document\nfragments become valid Python expressions. It is based off\n<a href=\"https://github.com/facebook/xhp\" rel=\"nofollow\">XHP</a>, a similar framework for PHP.</p>\n<div id=\"advantages\">\n<h2>Advantages</h2>\n<ul>\n<li><em>Simplicity</em>: write UI logic in a simple, expressive syntax without the need for external\ntemplates or templating languages.</li>\n<li><em>Flexibility</em>: use Python expressions freely within XHPy tags, and vice-versa.</li>\n<li><em>Security</em>: benefit from automatic escaping of text within XHPy tags.</li>\n<li><em>Reusability</em>: build reusable components by subclassing :x:element.</li>\n</ul>\n</div>\n<div id=\"an-example\">\n<h2>An example</h2>\n<p>In bar.py:</p>\n<pre>from xhpy.init import register_xhpy_module\nregister_xhpy_module('foo')\nimport foo\n</pre>\n<p>In foo.py:</p>\n<pre>from xhpy.pylib import *\nclass :ui:foo(:x:element):\n  attribute list bar\n  category %flow\n  def render(self):\n    a = &lt;ul /&gt;\n    for b in self.getAttribute('bar'):\n      a.appendChild(&lt;li&gt;{b}&lt;/li&gt;)\n    return a\nprint &lt;div class=\"baz\"&gt;&lt;ui:foo bar={range(3)} /&gt;&lt;/div&gt;\n</pre>\n<p>We can now run bar.py as a normal Python script:</p>\n<pre>$ python bar.py\n&lt;div class=\"baz\"&gt;&lt;ul&gt;&lt;li&gt;0&lt;/li&gt;&lt;li&gt;1&lt;/li&gt;&lt;li&gt;2&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;\n</pre>\n<p>Congratulations! You just wrote your first snippet of XHPy.</p>\n</div>\n<div id=\"syntax\">\n<h2>Syntax</h2>\n<p>XHPy adds some new syntax to Python. Line by line replay time!</p>\n<pre>from xhpy.init import register_xhpy_module\n</pre>\n<p>This initializes XHPy and allows you to register modules to be interpreted as XHPy.</p>\n<pre>register_xhpy_module('foo')\n</pre>\n<p>Now the <tt>foo</tt> module in <tt>foo.py</tt> will be interpreted as XHPy when imported.\nIf <tt>foo</tt> were a package, all of its submodules would also be registered; this is\nuseful for registering UI libraries.</p>\n<pre>import foo\n</pre>\n<p>To actually use XHPy, however, you will probably want the core library:</p>\n<pre>from xhpy.pylib import *\n</pre>\n<p>Now you have access to all the standard HTML 4.0 elements, the <tt>:x:element</tt> base class\n(this is what you build custom components on top of!), and some utilities.</p>\n<pre>class :ui:foo(:x:element):\n</pre>\n<p>Making new components is easy: just subclass <tt>:x:element</tt>. For your component class to be\nregistered, it must start with <tt>:</tt> - this clearly distinguishes your components from\nordinary Python classes.</p>\n<pre>attribute list bar\n</pre>\n<p>This is an attribute declaration, meaning that <tt>:ui:foo</tt> allows bar attributes on <tt>&lt;ui:foo&gt;</tt>\ntags. Note the</p>\n<pre>&lt;ui:foo bar={range(3)} /&gt;\n</pre>\n<p>later on - like XHP, XHPy uses XML attribute syntax.</p>\n<pre>category %flow\n</pre>\n<p>This is a category declaration - <tt>:ui:foo</tt> is part of the <tt>%flow</tt> category. Categories are\nprimarily useful as a way of identifying elements that are similar without using\ninheritance; for example, the <tt>&lt;a&gt;</tt> tag in pylib.html has</p>\n<pre>children (pcdata | %flow)*\n</pre>\n<p>indicating that its children must either contain text or be of the <tt>%flow</tt> category. (So\nwe can put <tt>&lt;ui:foo&gt;</tt> inside <tt>&lt;a&gt;</tt>!)</p>\n<pre>def render(self):\n</pre>\n<p>When you print an <tt>:x:element</tt> (or call <tt>str</tt> on it), the <tt>render()</tt> method is invoked; this\nis where you put your UI logic.</p>\n<pre>a = &lt;ul /&gt;\nfor b in self.getAttribute('bar'):\n    a.appendChild(&lt;li&gt;{b}&lt;/li&gt;)\nreturn a\n</pre>\n<p>Here, <tt>&lt;ui:foo&gt;</tt> is a thin wrapper around <tt>&lt;ul&gt;</tt> that allows you to construct an unordered\nlist out of a Python list. Standard HTML elements like <tt>&lt;ul&gt;</tt> and <tt>&lt;li&gt;</tt> are automatically\nrendered - except that, in XHPy, you can use Python expressions within tags, so that</p>\n<pre>{b}\n</pre>\n<p>is replaced by the value of b. Note the use of <tt>getAttribute()</tt> and <tt>appendChild()</tt>:</p>\n<pre>self.getAttribute('bar')\n</pre>\n<p>fetches the value of attribute <tt>bar</tt> (in this case, <tt>range(3)</tt>), whereas</p>\n<pre>a.appendChild(&lt;li&gt;{b}&lt;/li&gt;)\n</pre>\n<p>adds <tt><span class=\"pre\">&lt;li&gt;{b}&lt;/li&gt;</span></tt> as a child of <tt>a = &lt;ul /&gt;</tt>.</p>\n<p>XHPy is largely based off XHP; for more details on the latter, see the\n<a href=\"https://github.com/facebook/xhp/wiki/\" rel=\"nofollow\">XHP wiki</a>. The syntax has been adapted for\nPython; in particular:</p>\n<ul>\n<li>there are no semicolons;</li>\n<li>XHPy class names may be used anywhere ordinary Python classes can;</li>\n<li>XHPy tags ignore internal whitespace, but must externally obey indentation and\nline continuation rules.</li>\n</ul>\n<p>More on the last point:</p>\n<pre>def foo(href):\n  return &lt;a href={href}&gt;&lt;/a&gt;\n\ndef bar(href):\n  return\\\n  &lt;a href={href}&gt;&lt;/a&gt;\n</pre>\n<p>are valid, whereas</p>\n<pre>def foo(href):\n  return\\\n    &lt;a href={href}&gt;\n    &lt;/a&gt;\n</pre>\n<p>is not, as it introduces an extra dedent after <tt>&lt;/a&gt;</tt>.</p>\n</div>\n<div id=\"how-it-works\">\n<h2>How it works</h2>\n<p>When you</p>\n<pre>import xhpy.init\n</pre>\n<p>XHPy installs an <a href=\"http://www.python.org/dev/peps/pep-0302/\" rel=\"nofollow\">import hook</a>.\nThis hook traps subsequent import statements, running them through a preprocessor\nthat parses a superset of Python. This preprocessor translates XHPy tags and class\nnames to valid Python, then executes the translated code in module scope.</p>\n<p>This is similar to how XHP works, except:</p>\n<ul>\n<li>with, e.g., <a href=\"http://pypi.python.org/pypi/virtualenv\" rel=\"nofollow\">pythonenv</a>, you can always use\nXHPy even without access to system-wide Python package installation directories;</li>\n<li>by default, Python compiles bytecode .pyc files from your modules, so the\npreprocessing only needs to be done once when a module is first imported.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 762351, "releases": {"0.6": [{"comment_text": "", "digests": {"md5": "e3e4a9907371d8b61c6f80f45dab69b9", "sha256": "9b648417546636322f2f0894d8e3415ba23170a05a0f0b14e42b1a879eeac272"}, "downloads": -1, "filename": "xhpy-0.6.tar.bz2", "has_sig": false, "md5_digest": "e3e4a9907371d8b61c6f80f45dab69b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20901, "upload_time": "2011-02-05T08:07:03", "upload_time_iso_8601": "2011-02-05T08:07:03.194246Z", "url": "https://files.pythonhosted.org/packages/5f/28/4b395c13468d3fe9e82d1ab234eb641aac427b1400a6e80667f01d1a363c/xhpy-0.6.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "66726aad3e2a7e58cc9e01431c26b1f0", "sha256": "248febba94c4e387f22392888d9bc9309101dc046afafa9edd5db280107b2283"}, "downloads": -1, "filename": "xhpy-0.6.tar.gz", "has_sig": false, "md5_digest": "66726aad3e2a7e58cc9e01431c26b1f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23589, "upload_time": "2011-02-05T08:07:01", "upload_time_iso_8601": "2011-02-05T08:07:01.024545Z", "url": "https://files.pythonhosted.org/packages/50/6f/d28da36ea272a4089ad94a6932bc506e445ebcf580f1bf82c2e00fddb9cd/xhpy-0.6.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "78a45bd65ed55dd09da125cfa5bde003", "sha256": "b1f6c34ba700d8af3a4e07c4174da205dba31570e7f257010c679b86962bab70"}, "downloads": -1, "filename": "xhpy-0.6.zip", "has_sig": false, "md5_digest": "78a45bd65ed55dd09da125cfa5bde003", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35660, "upload_time": "2011-02-05T08:06:58", "upload_time_iso_8601": "2011-02-05T08:06:58.835356Z", "url": "https://files.pythonhosted.org/packages/79/a0/040dc5374a655dec9bfdd5b69ba8af5a92d580c5156fa3a622d3382f2ab5/xhpy-0.6.zip", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "9cb7ff859e3f525ba6c1624828f8553b", "sha256": "009df9cdf75c343f5cfe178019916d03dc370c6e61845e2bad5c072893b9504c"}, "downloads": -1, "filename": "xhpy-0.7.tar.bz2", "has_sig": false, "md5_digest": "9cb7ff859e3f525ba6c1624828f8553b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20926, "upload_time": "2011-02-08T20:35:01", "upload_time_iso_8601": "2011-02-08T20:35:01.269728Z", "url": "https://files.pythonhosted.org/packages/8d/ff/1bc230dbbb8a56f556d52505cb7302e2a381719290161187de8503ec91ec/xhpy-0.7.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a7f5687df676fc9a3c392d10d0dd497", "sha256": "0c32c1b11429917c416339b4f85200492994b89b3ba4282461844b7396c2348b"}, "downloads": -1, "filename": "xhpy-0.7.tar.gz", "has_sig": false, "md5_digest": "6a7f5687df676fc9a3c392d10d0dd497", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23238, "upload_time": "2011-02-08T20:34:59", "upload_time_iso_8601": "2011-02-08T20:34:59.739416Z", "url": "https://files.pythonhosted.org/packages/93/f1/e54e1a4376acf9248d504b14e19955ac989442d95fb80d6d309e91a0d966/xhpy-0.7.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9d3de891efdcf26b55dae97e175fcbe", "sha256": "3095417d6f359dcf5f31de65bccb7612dfff57b809c55f1706b042cddfc9d5f1"}, "downloads": -1, "filename": "xhpy-0.7.zip", "has_sig": false, "md5_digest": "a9d3de891efdcf26b55dae97e175fcbe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35378, "upload_time": "2011-02-08T20:34:57", "upload_time_iso_8601": "2011-02-08T20:34:57.845033Z", "url": "https://files.pythonhosted.org/packages/fb/6c/20f1332de079ae00096889621156b0bbb77e2b4d2ef2756413fdf7af48f3/xhpy-0.7.zip", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "6cde7656c02058404787cbe1d929e16e", "sha256": "9c1c2f4382cad2a2c37c46bf4cd9377b50c9a1908c8a81a6ddeb41f3e3520dd3"}, "downloads": -1, "filename": "xhpy-0.8.tar.bz2", "has_sig": false, "md5_digest": "6cde7656c02058404787cbe1d929e16e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20869, "upload_time": "2011-02-15T17:59:28", "upload_time_iso_8601": "2011-02-15T17:59:28.669650Z", "url": "https://files.pythonhosted.org/packages/e5/a3/c8b51c8d3b58b41872a45ddfab1beb78fd5b3e6519136745a0caadd5e909/xhpy-0.8.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "ffac31fcb6beb142d26c0f04d9a153c6", "sha256": "3340da0fc220c86efb7d61192d31a77b6a483933aa926a6cf2943e8b33d090a5"}, "downloads": -1, "filename": "xhpy-0.8.tar.gz", "has_sig": false, "md5_digest": "ffac31fcb6beb142d26c0f04d9a153c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23164, "upload_time": "2011-02-15T17:59:27", "upload_time_iso_8601": "2011-02-15T17:59:27.416947Z", "url": "https://files.pythonhosted.org/packages/01/76/dd41105c48ba3c711e946eaf7515b2f3dfbee3ef8b34e0593a489daae417/xhpy-0.8.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd92ff4d881c801397612eb74335443a", "sha256": "c51ad15a6a170db052a562c37e8842a974ccc5a1b7da64bd6cccd96a2303a459"}, "downloads": -1, "filename": "xhpy-0.8.zip", "has_sig": false, "md5_digest": "cd92ff4d881c801397612eb74335443a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35315, "upload_time": "2011-02-15T17:59:26", "upload_time_iso_8601": "2011-02-15T17:59:26.227499Z", "url": "https://files.pythonhosted.org/packages/b1/62/027eb6c71f5591ed6d5d0676b363df7489f895ccfd08395481ea1395e08c/xhpy-0.8.zip", "yanked": false}], "0.81": [{"comment_text": "", "digests": {"md5": "88e3c769079de3e46a8689f0c3fbcb96", "sha256": "bdef3e147cfa695c9c01ae478b66cb6be32f58d7a8897da0e11583e0209305eb"}, "downloads": -1, "filename": "xhpy-0.81.tar.bz2", "has_sig": false, "md5_digest": "88e3c769079de3e46a8689f0c3fbcb96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21010, "upload_time": "2011-11-28T05:37:03", "upload_time_iso_8601": "2011-11-28T05:37:03.622166Z", "url": "https://files.pythonhosted.org/packages/e8/a6/be765db330fd480b1eaa52b11741f859ac25e6fb6cd7051485fe9dfc0936/xhpy-0.81.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "5afc3acfa9c693a66555750c8acb8c1d", "sha256": "4f05adea7cf6cfe062d018ff3ccf768ddab3a97ad9e882fbd86b1a525e5bd6ae"}, "downloads": -1, "filename": "xhpy-0.81.tar.gz", "has_sig": false, "md5_digest": "5afc3acfa9c693a66555750c8acb8c1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23229, "upload_time": "2011-11-28T05:37:01", "upload_time_iso_8601": "2011-11-28T05:37:01.294151Z", "url": "https://files.pythonhosted.org/packages/f4/c1/f6d662ec1b9652867a8cd8888e6c00cfb8d169edb3498ba2aec1201a3694/xhpy-0.81.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b96aa7128b21147234038dc39ca5f58", "sha256": "c242fea6a51cd4c979f475de33becc532142b1a5ef1538012fa76f033e4bf615"}, "downloads": -1, "filename": "xhpy-0.81.zip", "has_sig": false, "md5_digest": "2b96aa7128b21147234038dc39ca5f58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35930, "upload_time": "2011-11-28T05:36:45", "upload_time_iso_8601": "2011-11-28T05:36:45.036221Z", "url": "https://files.pythonhosted.org/packages/d9/dc/b691bf1b2adc8227a599a258d8908f6e53a1b2ee0d2eafd2df4f26cef93c/xhpy-0.81.zip", "yanked": false}], "0.82": [{"comment_text": "", "digests": {"md5": "aa14d8b690f7f5fc56804233b5eef636", "sha256": "992a65afa994cf0d044fc3ba8d0cf555e23b35bf6a16cf9c7dcad3b90138ad64"}, "downloads": -1, "filename": "xhpy-0.82.tar.bz2", "has_sig": false, "md5_digest": "aa14d8b690f7f5fc56804233b5eef636", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22700, "upload_time": "2012-05-29T03:33:49", "upload_time_iso_8601": "2012-05-29T03:33:49.189036Z", "url": "https://files.pythonhosted.org/packages/f7/01/b7dc8d96263bd5845d372be471dab134288b3077efc42e29430c183df432/xhpy-0.82.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "2e637dd232bd4ea7a7d04876d8e21d4d", "sha256": "b0993edbbc67b8dad6d2022f1396bd449f1342032d10b5c1e7a33556f8279d1c"}, "downloads": -1, "filename": "xhpy-0.82.tar.gz", "has_sig": false, "md5_digest": "2e637dd232bd4ea7a7d04876d8e21d4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25958, "upload_time": "2012-05-29T03:33:47", "upload_time_iso_8601": "2012-05-29T03:33:47.104632Z", "url": "https://files.pythonhosted.org/packages/fa/a8/d2a5f0478c4891688ad62351ca067e765e68fba20c55e45e5eac69001b9d/xhpy-0.82.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "4552b92da82238138a009d8be16da77e", "sha256": "10e322e39d7074c5882e71298aae18a19c4f9560e3c17266d953c26827460a1b"}, "downloads": -1, "filename": "xhpy-0.82.zip", "has_sig": false, "md5_digest": "4552b92da82238138a009d8be16da77e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37519, "upload_time": "2012-05-29T03:33:51", "upload_time_iso_8601": "2012-05-29T03:33:51.013298Z", "url": "https://files.pythonhosted.org/packages/25/8e/a92487d75975c09cafcdbed787864256bcd7806eeb70eda6d676af35d492/xhpy-0.82.zip", "yanked": false}], "0.83": [{"comment_text": "", "digests": {"md5": "bbe51b0de571ea44ef235a404b4b2750", "sha256": "9cfdc65ebc61a33557343764da0db90b1b60ed4484c5f14cc410e61c1832a04b"}, "downloads": -1, "filename": "xhpy-0.83.tar.bz2", "has_sig": false, "md5_digest": "bbe51b0de571ea44ef235a404b4b2750", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22529, "upload_time": "2012-06-21T07:59:10", "upload_time_iso_8601": "2012-06-21T07:59:10.985869Z", "url": "https://files.pythonhosted.org/packages/93/63/6e15b88439e23c575b91bcfbefe4ca9269c5f74a194e1e33f2d277a01524/xhpy-0.83.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "85f814529b2b413db9e1b6bb1132e219", "sha256": "c727980266ed576fccdc757589d246f09a025180ca70b33f445bf60a3aadf9d5"}, "downloads": -1, "filename": "xhpy-0.83.tar.gz", "has_sig": false, "md5_digest": "85f814529b2b413db9e1b6bb1132e219", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25066, "upload_time": "2012-06-21T07:59:08", "upload_time_iso_8601": "2012-06-21T07:59:08.284033Z", "url": "https://files.pythonhosted.org/packages/dd/24/7fd8a68272332d2cc9b83a876372c03f005ce0ffff580d47bafa8653c1fe/xhpy-0.83.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "e92ec5497145be51e731eeb4cca5deec", "sha256": "4c2511ffc421ae14304692b34ea148e3438ec74bb4ed1434483c50ceac20ef0c"}, "downloads": -1, "filename": "xhpy-0.83.zip", "has_sig": false, "md5_digest": "e92ec5497145be51e731eeb4cca5deec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38991, "upload_time": "2012-06-21T07:59:06", "upload_time_iso_8601": "2012-06-21T07:59:06.187016Z", "url": "https://files.pythonhosted.org/packages/db/2a/ad9a1d4984cb64fbd826eda113a9e19d155895f68105a3fc2c06ce57ca5b/xhpy-0.83.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bbe51b0de571ea44ef235a404b4b2750", "sha256": "9cfdc65ebc61a33557343764da0db90b1b60ed4484c5f14cc410e61c1832a04b"}, "downloads": -1, "filename": "xhpy-0.83.tar.bz2", "has_sig": false, "md5_digest": "bbe51b0de571ea44ef235a404b4b2750", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22529, "upload_time": "2012-06-21T07:59:10", "upload_time_iso_8601": "2012-06-21T07:59:10.985869Z", "url": "https://files.pythonhosted.org/packages/93/63/6e15b88439e23c575b91bcfbefe4ca9269c5f74a194e1e33f2d277a01524/xhpy-0.83.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "85f814529b2b413db9e1b6bb1132e219", "sha256": "c727980266ed576fccdc757589d246f09a025180ca70b33f445bf60a3aadf9d5"}, "downloads": -1, "filename": "xhpy-0.83.tar.gz", "has_sig": false, "md5_digest": "85f814529b2b413db9e1b6bb1132e219", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25066, "upload_time": "2012-06-21T07:59:08", "upload_time_iso_8601": "2012-06-21T07:59:08.284033Z", "url": "https://files.pythonhosted.org/packages/dd/24/7fd8a68272332d2cc9b83a876372c03f005ce0ffff580d47bafa8653c1fe/xhpy-0.83.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "e92ec5497145be51e731eeb4cca5deec", "sha256": "4c2511ffc421ae14304692b34ea148e3438ec74bb4ed1434483c50ceac20ef0c"}, "downloads": -1, "filename": "xhpy-0.83.zip", "has_sig": false, "md5_digest": "e92ec5497145be51e731eeb4cca5deec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38991, "upload_time": "2012-06-21T07:59:06", "upload_time_iso_8601": "2012-06-21T07:59:06.187016Z", "url": "https://files.pythonhosted.org/packages/db/2a/ad9a1d4984cb64fbd826eda113a9e19d155895f68105a3fc2c06ce57ca5b/xhpy-0.83.zip", "yanked": false}], "timestamp": "Fri May  8 03:25:33 2020"}