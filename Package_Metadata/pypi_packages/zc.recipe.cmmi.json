{"info": {"author": "Jim Fulton", "author_email": "jim@zope.com", "bugtrack_url": null, "classifiers": ["Environment :: Plugins", "Framework :: Buildout", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Build Tools", "Topic :: System :: Software Distribution"], "description": "==============================================================\n Recipe installing a download via configure/make/make install\n==============================================================\n\nThe configure-make-make-install recipe automates installation of\nconfigure-based source distribution into buildouts.\n\n.. contents::\n\n\nOptions\n=======\n\nurl\n   The URL of a source archive to download\n\nconfigure-command\n   The name of the configure script.\n\n   The option defaults to ``./configure``.\n\nconfigure-options\n   Basic configure options.\n\n   Defaults to a ``--prefix`` option that points to the part directory.\n\nextra_options\n   A string of extra options to pass to configure in *addition to* the\n   base options.\n\nenvironment\n   Optional environment variable settings of the forme NAME=VALUE.\n\n   Newlines are ignored. Spaces may be included in environment values\n   as long as they can't be mistaken for environment settings.  So::\n\n      environment = FOO=bar\n                    baz\n\n   Sets the environment variable FOO, but::\n\n      environment = FOO=bar xxx=baz\n\n   Sets 2 environment values, FOO and xxx.\n\npatch\n   The name of an optional patch file to apply to the distribution.\n\npatch_options\n   Options to supply to the patch command (if a patch file is used).\n\n   This defaults to ``-p0``\n\nshared\n   Share the build accross buildouts.\n\nautogen\n   The name of a script to run to generate a configure script.\n\nsource-directory-contains\n   The name of a file in the distribution's source directory.\n\n   This is used by the recipe to determine if it has found the source\n   directory. It defaults top \"configure\".\n\n\n.. note::\n\n    This recipe is not expected to work in a Microsoft Windows environment.\n\n=================\n Release History\n=================\n\n3.0.0 (2019-03-30)\n==================\n\n- Drop support for Python 3.4.\n\n- Add support for Python 3.7 and 3.8a2.\n\n- Flake8 the code.\n\n\n2.0.0 (2017-06-21)\n==================\n\n- Add support for Python 3.4, 3.5, 3.6 and PyPy.\n\n- Automated testing is enabled on Travis CI.\n\n1.3.6 (2014-04-14)\n==================\n\n- Fixed: Strings were incorrectly compared using \"is not ''\" rather than !=\n\n- Fixed: Spaces weren't allowed in the installation location.\n\n1.3.5 (2011-08-06)\n==================\n\n- Fixed: Spaces weren't allowed in environment variables.\n\n- Fixed: Added missing option reference documentation.\n\n\n1.3.4 (2011-01-18)\n==================\n\n- Fixed a bug in location book-keeping that caused shared builds to be deleted\n  from disk when a part didn't need them anymore. (#695977)\n\n- Made tests pass with both zc.buildout 1.4 and 1.5, lifted the upper version\n  bound on zc.buildout. (#695732)\n\n1.3.3 (2010-11-10)\n==================\n\n- Remove the temporary build directory when cmmi succeeds.\n\n- Specify that the zc.buildout version be <1.5.0b1, as the recipe is\n  currently not compatible with zc.buildout 1.5.\n\n1.3.2 (2010-08-09)\n==================\n\n- Remove the build directory for a shared build when the source cannot be\n  downloaded.\n\n- Declared a test dependency on zope.testing.\n\n\n1.3.1 (2009-09-10)\n==================\n\n- Declare dependency on zc.buildout 1.4 or later. This dependency was introduced\n  in version 1.3.\n\n\n1.3 (2009-09-03)\n================\n\n- Use zc.buildout's download API. As this allows MD5 checking, added the\n  md5sum and patch-md5sum options.\n\n- Added options for changing the name of the configure script and\n  overriding the ``--prefix`` parameter.\n\n- Moved the core \"configure; make; make install\" command sequence to a\n  method that can be overridden in other recipes, to support packages\n  whose installation process is slightly different.\n\n1.2.1 (2009-08-12)\n==================\n\nBug fix: keep track of reused shared builds.\n\n\n1.2.0 (2009-05-18)\n==================\n\nEnabled using a shared directory for completed builds.\n\n1.1.6 (2009-03-17)\n==================\n\nMoved 'zc' package from root of checkout into 'src', to prevent testrunner\nfrom finding eggs installed locally by buildout.\n\nRemoved deprecations under Python 2.6.\n\n1.1.5 (2008-11-07)\n==================\n\n- Added to the README.txt file a link to the SVN repository, so that Setuptools\n  can automatically find the development version when asked to install the\n  \"-dev\" version of zc.recipe.cmmi.\n\n- Applied fix for bug #261367 i.e. changed open() of file being downloaded to\n  binary, so that errors like the following no longer occur under Windows.\n\n  uncompress = self.decompress.decompress(buf)\n  error: Error -3 while decompressing: invalid distance too far back\n\n1.1.4 (2008-06-25)\n==================\n\nAdd support to autogen configure files.\n\n1.1.3 (2008-06-03)\n==================\n\nAdd support for updating the environment.\n\n1.1.2 (2008-02-28)\n==================\n\n- Check if the ``location`` folder exists before creating it.\n\nAfter 1.1.0\n===========\n\nAdded support for patches to be downloaded from a url rather than only using\npatches on the filesystem\n\n1.1.0\n=====\n\nAdded support for:\n\n - download-cache: downloaded files are cached in the 'cmmi' subdirectory of\n   the cache cache keys are hashes of the url that the file was downloaded from\n   cache information recorded in the cache.ini file within each directory\n\n - offline mode: cmmi will not go online if the package is not in the cache\n\n - variable location: build files other than in the parts directory if required\n\n - additional logging/output\n\n1.0.2 (2007-06-03)\n==================\n\n- Added support for patches.\n\n- Tests fixed (buildout's output changed)\n\n1.0.1 (2006-11-22)\n==================\n\n- Added missing zip_safe flag.\n\n1.0 (2006-11-22)\n================\n\nInitial release.\n\n======================\nDetailed Documentation\n======================\n\nWe have an archive with a demo foo tar ball and publish it by http in order\nto see  offline effects:\n\n    >>> ls(distros)\n    -  bar.tgz\n    -  baz.tgz\n    -  foo.tgz\n\n    >>> distros_url = start_server(distros)\n\nLet's update a sample buildout to installs it:\n\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = foo\n    ...\n    ... [foo]\n    ... recipe = zc.recipe.cmmi\n    ... url = %sfoo.tgz\n    ... \"\"\" % distros_url)\n\nWe used the url option to specify the location of the archive.\n\nIf we run the buildout, the configure script in the archive is run.\nIt creates a make file which is also run:\n\n    >>> print(system('bin/buildout').strip())\n    Installing foo.\n    foo: Downloading http://localhost/foo.tgz\n    foo: Unpacking and configuring\n    configuring foo --prefix=/sample-buildout/parts/foo\n    echo building foo\n    building foo\n    echo installing foo\n    installing foo\n\nThe recipe also creates the parts directory:\n\n    >>> import os.path\n    >>> os.path.isdir(join(sample_buildout, \"parts\", \"foo\"))\n    True\n\nIf we run the buildout again, the update method will be called, which\ndoes nothing:\n\n    >>> print(system('bin/buildout').strip())\n    Updating foo.\n\nYou can supply extra configure options:\n\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = foo\n    ...\n    ... [foo]\n    ... recipe = zc.recipe.cmmi\n    ... url = %sfoo.tgz\n    ... extra_options = -a -b c\n    ... \"\"\" % distros_url)\n\n    >>> print(system('bin/buildout').strip())\n    Uninstalling foo.\n    Installing foo.\n    foo: Downloading http://localhost/foo.tgz\n    foo: Unpacking and configuring\n    configuring foo --prefix=/sample-buildout/parts/foo -a -b c\n    echo building foo\n    building foo\n    echo installing foo\n    installing foo\n\nThe recipe sets the location option, which can be read by other\nrecipes, to the location where the part is installed:\n\n    >>> cat('.installed.cfg')\n    [buildout]\n    installed_develop_eggs =\n    parts = foo\n    <BLANKLINE>\n    [foo]\n\t...\n    location = /sample_buildout/parts/foo\n\t...\n\nIt may be necessary to set some environment variables when running configure\nor make. This can be done by adding an environment statement:\n\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = foo\n    ...\n    ... [foo]\n    ... recipe = zc.recipe.cmmi\n    ... url = %sfoo.tgz\n    ... environment =\n    ...   CFLAGS=-I/usr/lib/postgresql7.4/include\n    ... \"\"\" % distros_url)\n\n\n    >>> print(system('bin/buildout').strip())\n    Uninstalling foo.\n    Installing foo.\n    foo: Downloading http://localhost/foo.tgz\n    foo: Unpacking and configuring\n    foo: Updating environment: CFLAGS=-I/usr/lib/postgresql7.4/include\n    configuring foo --prefix=/sample_buildout/parts/foo\n    echo building foo\n    building foo\n    echo installing foo\n    installing foo\n\nSometimes it's necessary to patch the sources before building a package.\nYou can specify the name of the patch to apply and (optional) patch options:\n\nFirst of all let's write a patchfile:\n\n    >>> import sys\n    >>> mkdir('patches')\n    >>> write('patches/config.patch',\n    ... \"\"\"--- configure\n    ... +++ /dev/null\n    ... @@ -1,13 +1,13 @@\n    ...  #!%s\n    ...  import sys\n    ... -print(\"configuring foo \" + ' '.join(sys.argv[1:]))\n    ... +print(\"configuring foo patched \" + ' '.join(sys.argv[1:]))\n    ...\n    ...  Makefile_template = '''\n    ...  all:\n    ... -\\techo building foo\n    ... +\\techo building foo patched\n    ...\n    ...  install:\n    ... -\\techo installing foo\n    ... +\\techo installing foo patched\n    ...  '''\n    ...\n    ...  with open('Makefile', 'w') as f:\n    ...      _ = f.write(Makefile_template)\n    ...\n    ... \"\"\" % sys.executable)\n\nNow let's create a buildout.cfg file. Note: If no patch option is beeing\npassed, -p0 is appended by default.\n\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = foo\n    ...\n    ... [foo]\n    ... recipe = zc.recipe.cmmi\n    ... url = %sfoo.tgz\n    ... patch = ${buildout:directory}/patches/config.patch\n    ... patch_options = -p0\n    ... \"\"\" % distros_url)\n\n    >>> print(system('bin/buildout').strip())\n    Uninstalling foo.\n    Installing foo.\n    foo: Downloading http://localhost/foo.tgz\n    foo: Unpacking and configuring\n    patching file configure\n    ...\n    configuring foo patched --prefix=/sample_buildout/parts/foo\n    echo building foo patched\n    building foo patched\n    echo installing foo patched\n    installing foo patched\n\nIt is possible to autogenerate the configure files:\n\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = foo\n    ...\n    ... [foo]\n    ... recipe = zc.recipe.cmmi\n    ... url = %s/bar.tgz\n    ... autogen = autogen.sh\n    ... \"\"\" % distros_url)\n\n    >>> print(system('bin/buildout').strip())\n    Uninstalling foo.\n    Installing foo.\n    foo: Downloading http://localhost//bar.tgz\n    foo: Unpacking and configuring\n    foo: auto generating configure files\n    configuring foo --prefix=/sample_buildout/parts/foo\n    echo building foo\n    building foo\n    echo installing foo\n    installing foo\n\nIt is also possible to support configure commands other than \"./configure\":\n\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = foo\n    ...\n    ... [foo]\n    ... recipe = zc.recipe.cmmi\n    ... url = %s/baz.tgz\n    ... source-directory-contains = configure.py\n    ... configure-command = ./configure.py\n    ... configure-options =\n    ...     --bindir=bin\n    ... \"\"\" % distros_url)\n\n    >>> print(system('bin/buildout').strip())\n    Uninstalling foo.\n    Installing foo.\n    foo: Downloading http://localhost//baz.tgz\n    foo: Unpacking and configuring\n    configuring foo --bindir=bin\n    echo building foo\n    building foo\n    echo installing foo\n    installing foo\n\nWhen downloading a source archive or a patch, we can optionally make sure of\nits authenticity by supplying an MD5 checksum that must be matched. If it\nmatches, we'll not be bothered with the check by buildout's output:\n\n    >>> from hashlib import md5\n    >>> with open(join(distros, 'foo.tgz'), 'rb') as f:\n    ...     foo_md5sum = md5(f.read()).hexdigest()\n\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = foo\n    ...\n    ... [foo]\n    ... recipe = zc.recipe.cmmi\n    ... url = %sfoo.tgz\n    ... md5sum = %s\n    ... \"\"\" % (distros_url, foo_md5sum))\n\n    >>> print(system('bin/buildout').strip())\n    Uninstalling foo.\n    Installing foo.\n    foo: Downloading http://localhost/foo.tgz\n    foo: Unpacking and configuring\n    configuring foo --prefix=/sample_buildout/parts/foo\n    echo building foo\n    building foo\n    echo installing foo\n    installing foo\n\nBut if the archive doesn't match the checksum, the recipe refuses to install:\n\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = foo\n    ...\n    ... [foo]\n    ... recipe = zc.recipe.cmmi\n    ... url = %sbar.tgz\n    ... md5sum = %s\n    ... patch = ${buildout:directory}/patches/config.patch\n    ... \"\"\" % (distros_url, foo_md5sum))\n\n    >>> print(system('bin/buildout').strip())\n    Uninstalling foo.\n    Installing foo.\n    foo: Downloading http://localhost:20617/bar.tgz\n    While:\n      Installing foo.\n    Error: MD5 checksum mismatch downloading 'http://localhost/bar.tgz'\n\nSimilarly, a checksum mismatch for the patch will cause the buildout run to be\naborted:\n\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = foo\n    ...\n    ... [foo]\n    ... recipe = zc.recipe.cmmi\n    ... url = %sfoo.tgz\n    ... patch = ${buildout:directory}/patches/config.patch\n    ... patch-md5sum = %s\n    ... \"\"\" % (distros_url, foo_md5sum))\n\n    >>> print(system('bin/buildout').strip())\n    Installing foo.\n    foo: Downloading http://localhost:21669/foo.tgz\n    foo: Unpacking and configuring\n    While:\n      Installing foo.\n    Error: MD5 checksum mismatch for local resource at '/.../sample-buildout/patches/config.patch'.\n\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = foo\n    ...\n    ... [foo]\n    ... recipe = zc.recipe.cmmi\n    ... url = %sfoo.tgz\n    ... patch = ${buildout:directory}/patches/config.patch\n    ... \"\"\" % (distros_url))\n\nIf the build fails, the temporary directory where the tarball was unpacked\nis logged to stdout, and left intact for debugging purposes.\n\n    >>> write('patches/config.patch', \"dgdgdfgdfg\")\n\n    >>> res =  system('bin/buildout')\n    >>> print(res)\n    Installing foo.\n    foo: Downloading http://localhost/foo.tgz\n    foo: Unpacking and configuring\n    patch unexpectedly ends in middle of line\n    foo: cmmi failed: /.../...buildout-foo\n    patch: **** Only garbage was found in the patch input.\n    While:\n      Installing foo.\n    <BLANKLINE>\n    An internal error occurred due to a bug in either zc.buildout or in a\n    recipe being used:\n    ...\n    CalledProcessError: Command 'patch -p0 < ...' returned non-zero exit status ...\n    <BLANKLINE>\n\n    >>> import re\n    >>> import os.path\n    >>> import shutil\n    >>> path = re.search('foo: cmmi failed: (.*)', res).group(1)\n    >>> os.path.exists(path)\n    True\n    >>> shutil.rmtree(path)\n\nAfter a successful build, such temporary directories are removed.\n\n    >>> import glob\n    >>> import tempfile\n\n    >>> old_tempdir = tempfile.gettempdir()\n    >>> tempdir = tempfile.tempdir = tempfile.mkdtemp(suffix='.buildout.build')\n    >>> dirs = glob.glob(os.path.join(tempdir, '*buildout-foo'))\n\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = foo\n    ...\n    ... [foo]\n    ... recipe = zc.recipe.cmmi\n    ... url = %sfoo.tgz\n    ... \"\"\" % (distros_url,))\n\n    >>> print(system(\"bin/buildout\"))\n    Installing foo.\n    foo: Downloading http://localhost:21445/foo.tgz\n    foo: Unpacking and configuring\n    configuring foo --prefix=/sample_buildout/parts/foo\n    echo building foo\n    building foo\n    echo installing foo\n    installing foo\n    <BLANKLINE>\n\n    >>> new_dirs = glob.glob(os.path.join(tempdir, '*buildout-foo'))\n    >>> len(dirs) == len(new_dirs) == 0\n    True\n    >>> tempfile.tempdir = old_tempdir\n\n==============\nDownload Cache\n==============\nThe recipe supports use of a download cache in the same way\nas zc.buildout. See downloadcache.txt for details\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/zopefoundation/zc.recipe.cmmi", "keywords": "zc.buildout buildout recipe cmmi configure make install", "license": "ZPL 2.1", "maintainer": "", "maintainer_email": "", "name": "zc.recipe.cmmi", "package_url": "https://pypi.org/project/zc.recipe.cmmi/", "platform": "", "project_url": "https://pypi.org/project/zc.recipe.cmmi/", "project_urls": {"Homepage": "http://github.com/zopefoundation/zc.recipe.cmmi"}, "release_url": "https://pypi.org/project/zc.recipe.cmmi/3.0.0/", "requires_dist": ["setuptools", "zc.buildout (>=2.9.4)", "manuel; extra == 'test'", "zope.testing; extra == 'test'", "zope.testrunner; extra == 'test'"], "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "summary": "ZC Buildout recipe for configure/make/make install", "version": "3.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"recipe-installing-a-download-via-configure-make-make-install\">\n<h2><a href=\"#id21\" rel=\"nofollow\">Recipe installing a download via configure/make/make install</a></h2>\n<p>The configure-make-make-install recipe automates installation of\nconfigure-based source distribution into buildouts.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#recipe-installing-a-download-via-configure-make-make-install\" id=\"id21\" rel=\"nofollow\">Recipe installing a download via configure/make/make install</a><ul>\n<li><a href=\"#options\" id=\"id22\" rel=\"nofollow\">Options</a></li>\n</ul>\n</li>\n<li><a href=\"#release-history\" id=\"id23\" rel=\"nofollow\">Release History</a><ul>\n<li><a href=\"#id1\" id=\"id24\" rel=\"nofollow\">3.0.0 (2019-03-30)</a></li>\n<li><a href=\"#id2\" id=\"id25\" rel=\"nofollow\">2.0.0 (2017-06-21)</a></li>\n<li><a href=\"#id3\" id=\"id26\" rel=\"nofollow\">1.3.6 (2014-04-14)</a></li>\n<li><a href=\"#id4\" id=\"id27\" rel=\"nofollow\">1.3.5 (2011-08-06)</a></li>\n<li><a href=\"#id5\" id=\"id28\" rel=\"nofollow\">1.3.4 (2011-01-18)</a></li>\n<li><a href=\"#id6\" id=\"id29\" rel=\"nofollow\">1.3.3 (2010-11-10)</a></li>\n<li><a href=\"#id7\" id=\"id30\" rel=\"nofollow\">1.3.2 (2010-08-09)</a></li>\n<li><a href=\"#id8\" id=\"id31\" rel=\"nofollow\">1.3.1 (2009-09-10)</a></li>\n<li><a href=\"#id9\" id=\"id32\" rel=\"nofollow\">1.3 (2009-09-03)</a></li>\n<li><a href=\"#id10\" id=\"id33\" rel=\"nofollow\">1.2.1 (2009-08-12)</a></li>\n<li><a href=\"#id11\" id=\"id34\" rel=\"nofollow\">1.2.0 (2009-05-18)</a></li>\n<li><a href=\"#id12\" id=\"id35\" rel=\"nofollow\">1.1.6 (2009-03-17)</a></li>\n<li><a href=\"#id13\" id=\"id36\" rel=\"nofollow\">1.1.5 (2008-11-07)</a></li>\n<li><a href=\"#id14\" id=\"id37\" rel=\"nofollow\">1.1.4 (2008-06-25)</a></li>\n<li><a href=\"#id15\" id=\"id38\" rel=\"nofollow\">1.1.3 (2008-06-03)</a></li>\n<li><a href=\"#id16\" id=\"id39\" rel=\"nofollow\">1.1.2 (2008-02-28)</a></li>\n<li><a href=\"#after-1-1-0\" id=\"id40\" rel=\"nofollow\">After 1.1.0</a></li>\n<li><a href=\"#id17\" id=\"id41\" rel=\"nofollow\">1.1.0</a></li>\n<li><a href=\"#id18\" id=\"id42\" rel=\"nofollow\">1.0.2 (2007-06-03)</a></li>\n<li><a href=\"#id19\" id=\"id43\" rel=\"nofollow\">1.0.1 (2006-11-22)</a></li>\n<li><a href=\"#id20\" id=\"id44\" rel=\"nofollow\">1.0 (2006-11-22)</a></li>\n</ul>\n</li>\n<li><a href=\"#detailed-documentation\" id=\"id45\" rel=\"nofollow\">Detailed Documentation</a></li>\n<li><a href=\"#download-cache\" id=\"id46\" rel=\"nofollow\">Download Cache</a></li>\n</ul>\n</div>\n<div id=\"options\">\n<h3><a href=\"#id22\" rel=\"nofollow\">Options</a></h3>\n<dl>\n<dt>url</dt>\n<dd>The URL of a source archive to download</dd>\n<dt>configure-command</dt>\n<dd><p>The name of the configure script.</p>\n<p>The option defaults to <tt>./configure</tt>.</p>\n</dd>\n<dt>configure-options</dt>\n<dd><p>Basic configure options.</p>\n<p>Defaults to a <tt><span class=\"pre\">--prefix</span></tt> option that points to the part directory.</p>\n</dd>\n<dt>extra_options</dt>\n<dd>A string of extra options to pass to configure in <em>addition to</em> the\nbase options.</dd>\n<dt>environment</dt>\n<dd><p>Optional environment variable settings of the forme NAME=VALUE.</p>\n<p>Newlines are ignored. Spaces may be included in environment values\nas long as they can\u2019t be mistaken for environment settings.  So:</p>\n<pre>environment = FOO=bar\n              baz\n</pre>\n<p>Sets the environment variable FOO, but:</p>\n<pre>environment = FOO=bar xxx=baz\n</pre>\n<p>Sets 2 environment values, FOO and xxx.</p>\n</dd>\n<dt>patch</dt>\n<dd>The name of an optional patch file to apply to the distribution.</dd>\n<dt>patch_options</dt>\n<dd><p>Options to supply to the patch command (if a patch file is used).</p>\n<p>This defaults to <tt><span class=\"pre\">-p0</span></tt></p>\n</dd>\n<dt>shared</dt>\n<dd>Share the build accross buildouts.</dd>\n<dt>autogen</dt>\n<dd>The name of a script to run to generate a configure script.</dd>\n<dt>source-directory-contains</dt>\n<dd><p>The name of a file in the distribution\u2019s source directory.</p>\n<p>This is used by the recipe to determine if it has found the source\ndirectory. It defaults top \u201cconfigure\u201d.</p>\n</dd>\n</dl>\n<div>\n<p>Note</p>\n<p>This recipe is not expected to work in a Microsoft Windows environment.</p>\n</div>\n</div>\n</div>\n<div id=\"release-history\">\n<h2><a href=\"#id23\" rel=\"nofollow\">Release History</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id24\" rel=\"nofollow\">3.0.0 (2019-03-30)</a></h3>\n<ul>\n<li>Drop support for Python 3.4.</li>\n<li>Add support for Python 3.7 and 3.8a2.</li>\n<li>Flake8 the code.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id25\" rel=\"nofollow\">2.0.0 (2017-06-21)</a></h3>\n<ul>\n<li>Add support for Python 3.4, 3.5, 3.6 and PyPy.</li>\n<li>Automated testing is enabled on Travis CI.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id26\" rel=\"nofollow\">1.3.6 (2014-04-14)</a></h3>\n<ul>\n<li>Fixed: Strings were incorrectly compared using \u201cis not \u2018\u2019\u201d rather than !=</li>\n<li>Fixed: Spaces weren\u2019t allowed in the installation location.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id27\" rel=\"nofollow\">1.3.5 (2011-08-06)</a></h3>\n<ul>\n<li>Fixed: Spaces weren\u2019t allowed in environment variables.</li>\n<li>Fixed: Added missing option reference documentation.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id28\" rel=\"nofollow\">1.3.4 (2011-01-18)</a></h3>\n<ul>\n<li>Fixed a bug in location book-keeping that caused shared builds to be deleted\nfrom disk when a part didn\u2019t need them anymore. (#695977)</li>\n<li>Made tests pass with both zc.buildout 1.4 and 1.5, lifted the upper version\nbound on zc.buildout. (#695732)</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3><a href=\"#id29\" rel=\"nofollow\">1.3.3 (2010-11-10)</a></h3>\n<ul>\n<li>Remove the temporary build directory when cmmi succeeds.</li>\n<li>Specify that the zc.buildout version be &lt;1.5.0b1, as the recipe is\ncurrently not compatible with zc.buildout 1.5.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3><a href=\"#id30\" rel=\"nofollow\">1.3.2 (2010-08-09)</a></h3>\n<ul>\n<li>Remove the build directory for a shared build when the source cannot be\ndownloaded.</li>\n<li>Declared a test dependency on zope.testing.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3><a href=\"#id31\" rel=\"nofollow\">1.3.1 (2009-09-10)</a></h3>\n<ul>\n<li>Declare dependency on zc.buildout 1.4 or later. This dependency was introduced\nin version 1.3.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3><a href=\"#id32\" rel=\"nofollow\">1.3 (2009-09-03)</a></h3>\n<ul>\n<li>Use zc.buildout\u2019s download API. As this allows MD5 checking, added the\nmd5sum and patch-md5sum options.</li>\n<li>Added options for changing the name of the configure script and\noverriding the <tt><span class=\"pre\">--prefix</span></tt> parameter.</li>\n<li>Moved the core \u201cconfigure; make; make install\u201d command sequence to a\nmethod that can be overridden in other recipes, to support packages\nwhose installation process is slightly different.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3><a href=\"#id33\" rel=\"nofollow\">1.2.1 (2009-08-12)</a></h3>\n<p>Bug fix: keep track of reused shared builds.</p>\n</div>\n<div id=\"id11\">\n<h3><a href=\"#id34\" rel=\"nofollow\">1.2.0 (2009-05-18)</a></h3>\n<p>Enabled using a shared directory for completed builds.</p>\n</div>\n<div id=\"id12\">\n<h3><a href=\"#id35\" rel=\"nofollow\">1.1.6 (2009-03-17)</a></h3>\n<p>Moved \u2018zc\u2019 package from root of checkout into \u2018src\u2019, to prevent testrunner\nfrom finding eggs installed locally by buildout.</p>\n<p>Removed deprecations under Python 2.6.</p>\n</div>\n<div id=\"id13\">\n<h3><a href=\"#id36\" rel=\"nofollow\">1.1.5 (2008-11-07)</a></h3>\n<ul>\n<li><p>Added to the README.txt file a link to the SVN repository, so that Setuptools\ncan automatically find the development version when asked to install the\n\u201c-dev\u201d version of zc.recipe.cmmi.</p>\n</li>\n<li><p>Applied fix for bug #261367 i.e. changed open() of file being downloaded to\nbinary, so that errors like the following no longer occur under Windows.</p>\n<p>uncompress = self.decompress.decompress(buf)\nerror: Error -3 while decompressing: invalid distance too far back</p>\n</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3><a href=\"#id37\" rel=\"nofollow\">1.1.4 (2008-06-25)</a></h3>\n<p>Add support to autogen configure files.</p>\n</div>\n<div id=\"id15\">\n<h3><a href=\"#id38\" rel=\"nofollow\">1.1.3 (2008-06-03)</a></h3>\n<p>Add support for updating the environment.</p>\n</div>\n<div id=\"id16\">\n<h3><a href=\"#id39\" rel=\"nofollow\">1.1.2 (2008-02-28)</a></h3>\n<ul>\n<li>Check if the <tt>location</tt> folder exists before creating it.</li>\n</ul>\n</div>\n<div id=\"after-1-1-0\">\n<h3><a href=\"#id40\" rel=\"nofollow\">After 1.1.0</a></h3>\n<p>Added support for patches to be downloaded from a url rather than only using\npatches on the filesystem</p>\n</div>\n<div id=\"id17\">\n<h3><a href=\"#id41\" rel=\"nofollow\">1.1.0</a></h3>\n<p>Added support for:</p>\n<blockquote>\n<ul>\n<li>download-cache: downloaded files are cached in the \u2018cmmi\u2019 subdirectory of\nthe cache cache keys are hashes of the url that the file was downloaded from\ncache information recorded in the cache.ini file within each directory</li>\n<li>offline mode: cmmi will not go online if the package is not in the cache</li>\n<li>variable location: build files other than in the parts directory if required</li>\n<li>additional logging/output</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id18\">\n<h3><a href=\"#id42\" rel=\"nofollow\">1.0.2 (2007-06-03)</a></h3>\n<ul>\n<li>Added support for patches.</li>\n<li>Tests fixed (buildout\u2019s output changed)</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3><a href=\"#id43\" rel=\"nofollow\">1.0.1 (2006-11-22)</a></h3>\n<ul>\n<li>Added missing zip_safe flag.</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3><a href=\"#id44\" rel=\"nofollow\">1.0 (2006-11-22)</a></h3>\n<p>Initial release.</p>\n</div>\n</div>\n<div id=\"detailed-documentation\">\n<h2><a href=\"#id45\" rel=\"nofollow\">Detailed Documentation</a></h2>\n<p>We have an archive with a demo foo tar ball and publish it by http in order\nto see  offline effects:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; ls(distros)\n-  bar.tgz\n-  baz.tgz\n-  foo.tgz\n</pre>\n<pre>&gt;&gt;&gt; distros_url = start_server(distros)\n</pre>\n</blockquote>\n<p>Let\u2019s update a sample buildout to installs it:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = foo\n...\n... [foo]\n... recipe = zc.recipe.cmmi\n... url = %sfoo.tgz\n... \"\"\" % distros_url)\n</pre>\n</blockquote>\n<p>We used the url option to specify the location of the archive.</p>\n<p>If we run the buildout, the configure script in the archive is run.\nIt creates a make file which is also run:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print(system('bin/buildout').strip())\nInstalling foo.\nfoo: Downloading http://localhost/foo.tgz\nfoo: Unpacking and configuring\nconfiguring foo --prefix=/sample-buildout/parts/foo\necho building foo\nbuilding foo\necho installing foo\ninstalling foo\n</pre>\n</blockquote>\n<p>The recipe also creates the parts directory:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import os.path\n&gt;&gt;&gt; os.path.isdir(join(sample_buildout, \"parts\", \"foo\"))\nTrue\n</pre>\n</blockquote>\n<p>If we run the buildout again, the update method will be called, which\ndoes nothing:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print(system('bin/buildout').strip())\nUpdating foo.\n</pre>\n</blockquote>\n<p>You can supply extra configure options:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = foo\n...\n... [foo]\n... recipe = zc.recipe.cmmi\n... url = %sfoo.tgz\n... extra_options = -a -b c\n... \"\"\" % distros_url)\n</pre>\n<pre>&gt;&gt;&gt; print(system('bin/buildout').strip())\nUninstalling foo.\nInstalling foo.\nfoo: Downloading http://localhost/foo.tgz\nfoo: Unpacking and configuring\nconfiguring foo --prefix=/sample-buildout/parts/foo -a -b c\necho building foo\nbuilding foo\necho installing foo\ninstalling foo\n</pre>\n</blockquote>\n<p>The recipe sets the location option, which can be read by other\nrecipes, to the location where the part is installed:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; cat('.installed.cfg')\n[buildout]\ninstalled_develop_eggs =\nparts = foo\n&lt;BLANKLINE&gt;\n[foo]\n    ...\nlocation = /sample_buildout/parts/foo\n    ...\n</pre>\n</blockquote>\n<p>It may be necessary to set some environment variables when running configure\nor make. This can be done by adding an environment statement:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = foo\n...\n... [foo]\n... recipe = zc.recipe.cmmi\n... url = %sfoo.tgz\n... environment =\n...   CFLAGS=-I/usr/lib/postgresql7.4/include\n... \"\"\" % distros_url)\n</pre>\n<pre>&gt;&gt;&gt; print(system('bin/buildout').strip())\nUninstalling foo.\nInstalling foo.\nfoo: Downloading http://localhost/foo.tgz\nfoo: Unpacking and configuring\nfoo: Updating environment: CFLAGS=-I/usr/lib/postgresql7.4/include\nconfiguring foo --prefix=/sample_buildout/parts/foo\necho building foo\nbuilding foo\necho installing foo\ninstalling foo\n</pre>\n</blockquote>\n<p>Sometimes it\u2019s necessary to patch the sources before building a package.\nYou can specify the name of the patch to apply and (optional) patch options:</p>\n<p>First of all let\u2019s write a patchfile:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import sys\n&gt;&gt;&gt; mkdir('patches')\n&gt;&gt;&gt; write('patches/config.patch',\n... \"\"\"--- configure\n... +++ /dev/null\n... @@ -1,13 +1,13 @@\n...  #!%s\n...  import sys\n... -print(\"configuring foo \" + ' '.join(sys.argv[1:]))\n... +print(\"configuring foo patched \" + ' '.join(sys.argv[1:]))\n...\n...  Makefile_template = '''\n...  all:\n... -\\techo building foo\n... +\\techo building foo patched\n...\n...  install:\n... -\\techo installing foo\n... +\\techo installing foo patched\n...  '''\n...\n...  with open('Makefile', 'w') as f:\n...      _ = f.write(Makefile_template)\n...\n... \"\"\" % sys.executable)\n</pre>\n</blockquote>\n<p>Now let\u2019s create a buildout.cfg file. Note: If no patch option is beeing\npassed, -p0 is appended by default.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = foo\n...\n... [foo]\n... recipe = zc.recipe.cmmi\n... url = %sfoo.tgz\n... patch = ${buildout:directory}/patches/config.patch\n... patch_options = -p0\n... \"\"\" % distros_url)\n</pre>\n<pre>&gt;&gt;&gt; print(system('bin/buildout').strip())\nUninstalling foo.\nInstalling foo.\nfoo: Downloading http://localhost/foo.tgz\nfoo: Unpacking and configuring\npatching file configure\n...\nconfiguring foo patched --prefix=/sample_buildout/parts/foo\necho building foo patched\nbuilding foo patched\necho installing foo patched\ninstalling foo patched\n</pre>\n</blockquote>\n<p>It is possible to autogenerate the configure files:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = foo\n...\n... [foo]\n... recipe = zc.recipe.cmmi\n... url = %s/bar.tgz\n... autogen = autogen.sh\n... \"\"\" % distros_url)\n</pre>\n<pre>&gt;&gt;&gt; print(system('bin/buildout').strip())\nUninstalling foo.\nInstalling foo.\nfoo: Downloading http://localhost//bar.tgz\nfoo: Unpacking and configuring\nfoo: auto generating configure files\nconfiguring foo --prefix=/sample_buildout/parts/foo\necho building foo\nbuilding foo\necho installing foo\ninstalling foo\n</pre>\n</blockquote>\n<p>It is also possible to support configure commands other than \u201c./configure\u201d:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = foo\n...\n... [foo]\n... recipe = zc.recipe.cmmi\n... url = %s/baz.tgz\n... source-directory-contains = configure.py\n... configure-command = ./configure.py\n... configure-options =\n...     --bindir=bin\n... \"\"\" % distros_url)\n</pre>\n<pre>&gt;&gt;&gt; print(system('bin/buildout').strip())\nUninstalling foo.\nInstalling foo.\nfoo: Downloading http://localhost//baz.tgz\nfoo: Unpacking and configuring\nconfiguring foo --bindir=bin\necho building foo\nbuilding foo\necho installing foo\ninstalling foo\n</pre>\n</blockquote>\n<p>When downloading a source archive or a patch, we can optionally make sure of\nits authenticity by supplying an MD5 checksum that must be matched. If it\nmatches, we\u2019ll not be bothered with the check by buildout\u2019s output:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from hashlib import md5\n&gt;&gt;&gt; with open(join(distros, 'foo.tgz'), 'rb') as f:\n...     foo_md5sum = md5(f.read()).hexdigest()\n</pre>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = foo\n...\n... [foo]\n... recipe = zc.recipe.cmmi\n... url = %sfoo.tgz\n... md5sum = %s\n... \"\"\" % (distros_url, foo_md5sum))\n</pre>\n<pre>&gt;&gt;&gt; print(system('bin/buildout').strip())\nUninstalling foo.\nInstalling foo.\nfoo: Downloading http://localhost/foo.tgz\nfoo: Unpacking and configuring\nconfiguring foo --prefix=/sample_buildout/parts/foo\necho building foo\nbuilding foo\necho installing foo\ninstalling foo\n</pre>\n</blockquote>\n<p>But if the archive doesn\u2019t match the checksum, the recipe refuses to install:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = foo\n...\n... [foo]\n... recipe = zc.recipe.cmmi\n... url = %sbar.tgz\n... md5sum = %s\n... patch = ${buildout:directory}/patches/config.patch\n... \"\"\" % (distros_url, foo_md5sum))\n</pre>\n<pre>&gt;&gt;&gt; print(system('bin/buildout').strip())\nUninstalling foo.\nInstalling foo.\nfoo: Downloading http://localhost:20617/bar.tgz\nWhile:\n  Installing foo.\nError: MD5 checksum mismatch downloading 'http://localhost/bar.tgz'\n</pre>\n</blockquote>\n<p>Similarly, a checksum mismatch for the patch will cause the buildout run to be\naborted:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = foo\n...\n... [foo]\n... recipe = zc.recipe.cmmi\n... url = %sfoo.tgz\n... patch = ${buildout:directory}/patches/config.patch\n... patch-md5sum = %s\n... \"\"\" % (distros_url, foo_md5sum))\n</pre>\n<pre>&gt;&gt;&gt; print(system('bin/buildout').strip())\nInstalling foo.\nfoo: Downloading http://localhost:21669/foo.tgz\nfoo: Unpacking and configuring\nWhile:\n  Installing foo.\nError: MD5 checksum mismatch for local resource at '/.../sample-buildout/patches/config.patch'.\n</pre>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = foo\n...\n... [foo]\n... recipe = zc.recipe.cmmi\n... url = %sfoo.tgz\n... patch = ${buildout:directory}/patches/config.patch\n... \"\"\" % (distros_url))\n</pre>\n</blockquote>\n<p>If the build fails, the temporary directory where the tarball was unpacked\nis logged to stdout, and left intact for debugging purposes.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write('patches/config.patch', \"dgdgdfgdfg\")\n</pre>\n<pre>&gt;&gt;&gt; res =  system('bin/buildout')\n&gt;&gt;&gt; print(res)\nInstalling foo.\nfoo: Downloading http://localhost/foo.tgz\nfoo: Unpacking and configuring\npatch unexpectedly ends in middle of line\nfoo: cmmi failed: /.../...buildout-foo\npatch: **** Only garbage was found in the patch input.\nWhile:\n  Installing foo.\n&lt;BLANKLINE&gt;\nAn internal error occurred due to a bug in either zc.buildout or in a\nrecipe being used:\n...\nCalledProcessError: Command 'patch -p0 &lt; ...' returned non-zero exit status ...\n&lt;BLANKLINE&gt;\n</pre>\n<pre>&gt;&gt;&gt; import re\n&gt;&gt;&gt; import os.path\n&gt;&gt;&gt; import shutil\n&gt;&gt;&gt; path = re.search('foo: cmmi failed: (.*)', res).group(1)\n&gt;&gt;&gt; os.path.exists(path)\nTrue\n&gt;&gt;&gt; shutil.rmtree(path)\n</pre>\n</blockquote>\n<p>After a successful build, such temporary directories are removed.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import glob\n&gt;&gt;&gt; import tempfile\n</pre>\n<pre>&gt;&gt;&gt; old_tempdir = tempfile.gettempdir()\n&gt;&gt;&gt; tempdir = tempfile.tempdir = tempfile.mkdtemp(suffix='.buildout.build')\n&gt;&gt;&gt; dirs = glob.glob(os.path.join(tempdir, '*buildout-foo'))\n</pre>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = foo\n...\n... [foo]\n... recipe = zc.recipe.cmmi\n... url = %sfoo.tgz\n... \"\"\" % (distros_url,))\n</pre>\n<pre>&gt;&gt;&gt; print(system(\"bin/buildout\"))\nInstalling foo.\nfoo: Downloading http://localhost:21445/foo.tgz\nfoo: Unpacking and configuring\nconfiguring foo --prefix=/sample_buildout/parts/foo\necho building foo\nbuilding foo\necho installing foo\ninstalling foo\n&lt;BLANKLINE&gt;\n</pre>\n<pre>&gt;&gt;&gt; new_dirs = glob.glob(os.path.join(tempdir, '*buildout-foo'))\n&gt;&gt;&gt; len(dirs) == len(new_dirs) == 0\nTrue\n&gt;&gt;&gt; tempfile.tempdir = old_tempdir\n</pre>\n</blockquote>\n</div>\n<div id=\"download-cache\">\n<h2><a href=\"#id46\" rel=\"nofollow\">Download Cache</a></h2>\n<p>The recipe supports use of a download cache in the same way\nas zc.buildout. See downloadcache.txt for details</p>\n</div>\n\n          </div>"}, "last_serial": 5006355, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "e05b23dcfa36ed185e9875ead786a882", "sha256": "cf67b027c7e638b0f45a785fa850b1dbeca54c6eaf40fb46d03bcdcd3f0b442d"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.0.tar.gz", "has_sig": false, "md5_digest": "e05b23dcfa36ed185e9875ead786a882", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4097, "upload_time": "2006-11-22T12:08:02", "upload_time_iso_8601": "2006-11-22T12:08:02Z", "url": "https://files.pythonhosted.org/packages/0f/58/8cff77b72c7d11e4278e9826ea77de4f30c310d427667a2ddca868fc6d97/zc.recipe.cmmi-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "1b0a9b840f3d838ac4af29e02dc3516e", "sha256": "f243c9d9b0d7a46a48cb5b3298828f4d94123a8ff7cf28bb141be141296f5aa9"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.0.1.tar.gz", "has_sig": false, "md5_digest": "1b0a9b840f3d838ac4af29e02dc3516e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4151, "upload_time": "2006-11-22T12:15:55", "upload_time_iso_8601": "2006-11-22T12:15:55Z", "url": "https://files.pythonhosted.org/packages/7b/1d/40e83a33f3f8afa44e6bf96b3503e83cb8c78fe035079a8c0fd92efdeaa7/zc.recipe.cmmi-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "68bdfca19d5e92e0cdfc3d22a23e0002", "sha256": "fcac35d64b31079dabcbdd750db57c277dcf2db3c262f9756c35ea9fb2668658"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.0.2-py2.4.egg", "has_sig": false, "md5_digest": "68bdfca19d5e92e0cdfc3d22a23e0002", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 9986, "upload_time": "2007-06-03T17:10:50", "upload_time_iso_8601": "2007-06-03T17:10:50Z", "url": "https://files.pythonhosted.org/packages/5a/53/de1a1c1315c76100473e0260a1c409d12c56b6641cc84b4023a705573776/zc.recipe.cmmi-1.0.2-py2.4.egg", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "39b215ad57710d8564cc5fab6138dc4d", "sha256": "7509643a87ae78596b244af0c6da88454fd099d686bc8612a4b79d41da16b004"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.1.0.tar.gz", "has_sig": false, "md5_digest": "39b215ad57710d8564cc5fab6138dc4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8704, "upload_time": "2007-08-09T20:06:01", "upload_time_iso_8601": "2007-08-09T20:06:01Z", "url": "https://files.pythonhosted.org/packages/2f/52/b1be059018390d992de6e387e3af42f8906a4a1fd3e4a501b190f74683d9/zc.recipe.cmmi-1.1.0.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "f38c391d83222b94b0056558bb897c99", "sha256": "e4ec36e547b33311e04a5873caf272e0d6be3b4f185f4ac6d42ec507ba60864c"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.1.2.tar.gz", "has_sig": false, "md5_digest": "f38c391d83222b94b0056558bb897c99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10430, "upload_time": "2008-02-29T08:51:23", "upload_time_iso_8601": "2008-02-29T08:51:23Z", "url": "https://files.pythonhosted.org/packages/6c/92/1ce6abfc374941d2cb5933d8826c2016b178076cb0a6103e3abcb7039b96/zc.recipe.cmmi-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "7a91ee1838fa511faf63a3c42b96217d", "sha256": "90aa8378f673161de28f89172f383f09f2e0f1b9e9de930e45a284e404a32084"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.1.3.tar.gz", "has_sig": false, "md5_digest": "7a91ee1838fa511faf63a3c42b96217d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10446, "upload_time": "2008-06-03T12:59:25", "upload_time_iso_8601": "2008-06-03T12:59:25Z", "url": "https://files.pythonhosted.org/packages/18/99/4a31db8e78b4328ca5334fdbf8921698b1e9940a178564d8350d1d014c26/zc.recipe.cmmi-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "9264646422e121fe067836a52f72b5e8", "sha256": "18d287b8a1e26509cae2439f1ddeb5b25133c106909efb85064f809caf880379"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.1.4-py2.5.egg", "has_sig": false, "md5_digest": "9264646422e121fe067836a52f72b5e8", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 16936, "upload_time": "2008-06-25T15:52:46", "upload_time_iso_8601": "2008-06-25T15:52:46Z", "url": "https://files.pythonhosted.org/packages/32/11/6c841fb8050958e3cc81993c57456ff019fe92066820f2ad71d135a27b80/zc.recipe.cmmi-1.1.4-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "99d783f2721a96b9044ab88ee43eccb8", "sha256": "f876b6c9e11e7800e4e72ccef0abe5cd99b9999517986496bffba19786d3188d"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.1.4.tar.gz", "has_sig": false, "md5_digest": "99d783f2721a96b9044ab88ee43eccb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10852, "upload_time": "2008-06-25T15:52:45", "upload_time_iso_8601": "2008-06-25T15:52:45Z", "url": "https://files.pythonhosted.org/packages/ed/6d/ce04481c02953f3b224ebfd0f9bdbcd83242f50dbc148b015e7ada332aa6/zc.recipe.cmmi-1.1.4.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "fb1c72ab5d9302e9954857ee31052fa5", "sha256": "3991e40abb1096f2ce0ca1adbbc209387ac9f763cc96d8e89c425621e0bf2c94"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.1.5-py2.5.egg", "has_sig": false, "md5_digest": "fb1c72ab5d9302e9954857ee31052fa5", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 17273, "upload_time": "2008-11-08T03:14:11", "upload_time_iso_8601": "2008-11-08T03:14:11Z", "url": "https://files.pythonhosted.org/packages/82/93/6e59793cd195130be4b86bb8925d81d8989f131e298389e9cbe10f129e11/zc.recipe.cmmi-1.1.5-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f9c1495e5c44d894dfc560ec62a98d5", "sha256": "a2726b8bf86a8bca1cf1ba338c3aa84a0d6b95b375fe0932218cfbe74f85f36a"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.1.5.tar.gz", "has_sig": false, "md5_digest": "3f9c1495e5c44d894dfc560ec62a98d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10139, "upload_time": "2008-11-08T03:12:08", "upload_time_iso_8601": "2008-11-08T03:12:08Z", "url": "https://files.pythonhosted.org/packages/31/8b/88f245965cef7c535f835f1361b0d0c77425561c457ab099b85891e70e03/zc.recipe.cmmi-1.1.5.tar.gz", "yanked": false}], "1.1.6": [{"comment_text": "", "digests": {"md5": "0f862a3047da29fb16802cce03f0bbbc", "sha256": "b8ef22eacfe04ef7c2f47e9a31b1103a06a64f1fd752038a3eed9bf670bfb74b"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.1.6.tar.gz", "has_sig": false, "md5_digest": "0f862a3047da29fb16802cce03f0bbbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12046, "upload_time": "2009-03-17T15:14:35", "upload_time_iso_8601": "2009-03-17T15:14:35.795313Z", "url": "https://files.pythonhosted.org/packages/d7/d7/583ec660e377674b5313ac5c0bdcdeed6c3254912cca5e93b3bbd708150a/zc.recipe.cmmi-1.1.6.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "d52fa224f8184a228d5967e4f46dab0a", "sha256": "32f3ebc439b8fe3b2ea22f3c35f8baa6e78516291e408ddbc673432c79018c37"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.2.0.tar.gz", "has_sig": false, "md5_digest": "d52fa224f8184a228d5967e4f46dab0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11939, "upload_time": "2009-05-18T08:36:12", "upload_time_iso_8601": "2009-05-18T08:36:12.491997Z", "url": "https://files.pythonhosted.org/packages/c8/b5/5670d7cf2ff70eb18965d67e9dace326ab4e5a867af92935476f612aa9cc/zc.recipe.cmmi-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "ac8214a091ae7b320b496a61391f510a", "sha256": "89754515758a5e7d601478978244f4a8afddf74af4fb94cab4d95fd965fdfe39"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.2.1.tar.gz", "has_sig": true, "md5_digest": "ac8214a091ae7b320b496a61391f510a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11857, "upload_time": "2009-08-12T10:44:58", "upload_time_iso_8601": "2009-08-12T10:44:58.416690Z", "url": "https://files.pythonhosted.org/packages/f8/b6/ad63be61d6a84b68af96d8806d30dd9bb716abc9cade36ebd6bcf8bcefa7/zc.recipe.cmmi-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "ae20cc46416c8eeb75608b9dfb51c281", "sha256": "7e241ef2fe2a40a295f1f304e59943265c479b1328af3e15da2509c4343a1707"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.2.2.tar.gz", "has_sig": false, "md5_digest": "ae20cc46416c8eeb75608b9dfb51c281", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15994, "upload_time": "2010-11-11T19:46:58", "upload_time_iso_8601": "2010-11-11T19:46:58.084015Z", "url": "https://files.pythonhosted.org/packages/bc/40/da7c2d9842f330231cba9ce473a4f5f1aa2adeaa4077a29fe7fbfc615e64/zc.recipe.cmmi-1.2.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "bd39fac3792ddea4cc256a7e2526c340", "sha256": "4b5d24f93828a3d8c6138de66843d504424a3196baed8ac9c8d5fcea577a808a"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.3.tar.gz", "has_sig": true, "md5_digest": "bd39fac3792ddea4cc256a7e2526c340", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13105, "upload_time": "2009-09-03T15:24:12", "upload_time_iso_8601": "2009-09-03T15:24:12.884296Z", "url": "https://files.pythonhosted.org/packages/da/07/f848d4424a50f80a9c60ab21dbf2490738a93fcb96ebe90838eb591afd4f/zc.recipe.cmmi-1.3.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "ed832a28d8913f54bd35eb92bcd9b4c3", "sha256": "3f77351a1eca3d188a60c28cdaeec5b463dab1ad7aebc212621d0ed4f078cf44"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.3.1.tar.gz", "has_sig": true, "md5_digest": "ed832a28d8913f54bd35eb92bcd9b4c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13186, "upload_time": "2009-09-10T16:04:43", "upload_time_iso_8601": "2009-09-10T16:04:43.984569Z", "url": "https://files.pythonhosted.org/packages/66/7f/960caca59b6ead57f2eeb2f1738663e4766fb5a5a4b9ad8597c7c218a78f/zc.recipe.cmmi-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "718526605f146065606da444a514100d", "sha256": "818602eae2904d3b1a349a5f82a85df092583b2d941114c061de6fd95e90721f"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.3.2.tar.gz", "has_sig": true, "md5_digest": "718526605f146065606da444a514100d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16963, "upload_time": "2010-08-09T19:46:17", "upload_time_iso_8601": "2010-08-09T19:46:17.319509Z", "url": "https://files.pythonhosted.org/packages/25/80/778f14af0cde21fea350c112c352d0cfb1ebcbca28738572938fd2e45193/zc.recipe.cmmi-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "6c1b8b85dedfeb13ac96689c261562a2", "sha256": "57dc3598ab341e865bcccc418842610d3ccb09f4b6793a6b311c2c69fa3ce204"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.3.3.tar.gz", "has_sig": false, "md5_digest": "6c1b8b85dedfeb13ac96689c261562a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18041, "upload_time": "2010-11-11T19:46:19", "upload_time_iso_8601": "2010-11-11T19:46:19.254325Z", "url": "https://files.pythonhosted.org/packages/86/98/2e1653dc378227bafe5f84a4c4e2ad6d5446c902df2383c6155b1097690e/zc.recipe.cmmi-1.3.3.tar.gz", "yanked": false}], "1.3.4": [{"comment_text": "", "digests": {"md5": "95b07e1bb7b08b35af74cd3dbc922cd8", "sha256": "330dd89dd5512ffd440ef330310c0d40ea975c608550dc13c16e19df2f336a31"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.3.4.tar.gz", "has_sig": true, "md5_digest": "95b07e1bb7b08b35af74cd3dbc922cd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19280, "upload_time": "2011-01-18T08:47:30", "upload_time_iso_8601": "2011-01-18T08:47:30.249870Z", "url": "https://files.pythonhosted.org/packages/18/c1/582e9a4e8ccd94e0e3c03f7ad7d02c76088c0b91c4bf88d26e56d6605843/zc.recipe.cmmi-1.3.4.tar.gz", "yanked": false}], "1.3.5": [{"comment_text": "", "digests": {"md5": "83cf5de8408eace9908b948d7889b3be", "sha256": "7f5b976b90c63300673747af3c6f8ee539dd7d1b75e6f276f5ba212f22056275"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.3.5.tar.gz", "has_sig": false, "md5_digest": "83cf5de8408eace9908b948d7889b3be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24149, "upload_time": "2011-08-06T18:03:50", "upload_time_iso_8601": "2011-08-06T18:03:50.595830Z", "url": "https://files.pythonhosted.org/packages/ee/44/d9baf25a6b0832efe3910ea7a2b0e6a8b7f0e25d1a98296e89c7449df05e/zc.recipe.cmmi-1.3.5.tar.gz", "yanked": false}], "1.3.6": [{"comment_text": "", "digests": {"md5": "e55102cb2acc335ef8981c7eb448573a", "sha256": "cf1f0a61c48f655793ef5ce38fbac1aa6e6b5dec950c989bcf465c6968a05fdd"}, "downloads": -1, "filename": "zc.recipe.cmmi-1.3.6.zip", "has_sig": false, "md5_digest": "e55102cb2acc335ef8981c7eb448573a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31770, "upload_time": "2014-04-14T20:15:24", "upload_time_iso_8601": "2014-04-14T20:15:24.640361Z", "url": "https://files.pythonhosted.org/packages/56/14/d3da592d8dbc34bb1b464275b5a7fa608b0ec917c7523ea4a8c835b884b4/zc.recipe.cmmi-1.3.6.zip", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "418b0bcbf1956e286bcd937c46eef685", "sha256": "5b5b82e05390cfb6a06538e6aec8b452b5703e8dff4e7f477941a021e0449c73"}, "downloads": -1, "filename": "zc.recipe.cmmi-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "418b0bcbf1956e286bcd937c46eef685", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26255, "upload_time": "2017-06-21T16:38:46", "upload_time_iso_8601": "2017-06-21T16:38:46.610020Z", "url": "https://files.pythonhosted.org/packages/4c/23/fa87060d030f9daa62e500bf9c1e0af89386bbde4f03a744fb657c0e2848/zc.recipe.cmmi-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79b07492df40f61db06a11f44aded380", "sha256": "8a306c46f799d7d0ad4a1c99d96ab402394a9b15606039ed9fffd76eb21a1ceb"}, "downloads": -1, "filename": "zc.recipe.cmmi-2.0.0.tar.gz", "has_sig": false, "md5_digest": "79b07492df40f61db06a11f44aded380", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23080, "upload_time": "2017-06-21T16:38:49", "upload_time_iso_8601": "2017-06-21T16:38:49.724171Z", "url": "https://files.pythonhosted.org/packages/e4/f7/7cb226d56a992a00627bc0f6d33d00ef5ba53126c2569677a2d92b2f6748/zc.recipe.cmmi-2.0.0.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "570dbf50cb05d4b078d71390fd6f20e0", "sha256": "a1febeb9344dea8020d46ca2eac14f0fa5b6b35d03f6ba9ddb6e43611970f311"}, "downloads": -1, "filename": "zc.recipe.cmmi-3.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "570dbf50cb05d4b078d71390fd6f20e0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "size": 26370, "upload_time": "2019-03-30T08:10:54", "upload_time_iso_8601": "2019-03-30T08:10:54.715138Z", "url": "https://files.pythonhosted.org/packages/4f/d1/be81decdc1ad91e9771db70d8bad3ffc0f9d794aef1cb0ee66cac61d3be0/zc.recipe.cmmi-3.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11f9a9333fd2a5dfc9e4ebfc3959ee92", "sha256": "592304c91d406cdfd1f3f28401942961f3e57cfe26180d1228a1fbc34acf4a0c"}, "downloads": -1, "filename": "zc.recipe.cmmi-3.0.0.tar.gz", "has_sig": false, "md5_digest": "11f9a9333fd2a5dfc9e4ebfc3959ee92", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "size": 23898, "upload_time": "2019-03-30T08:10:56", "upload_time_iso_8601": "2019-03-30T08:10:56.604901Z", "url": "https://files.pythonhosted.org/packages/e4/4f/2c621d34dc79e3dabeafc8f44e183dde53c927880e551e977c9fdbc36b89/zc.recipe.cmmi-3.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "570dbf50cb05d4b078d71390fd6f20e0", "sha256": "a1febeb9344dea8020d46ca2eac14f0fa5b6b35d03f6ba9ddb6e43611970f311"}, "downloads": -1, "filename": "zc.recipe.cmmi-3.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "570dbf50cb05d4b078d71390fd6f20e0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "size": 26370, "upload_time": "2019-03-30T08:10:54", "upload_time_iso_8601": "2019-03-30T08:10:54.715138Z", "url": "https://files.pythonhosted.org/packages/4f/d1/be81decdc1ad91e9771db70d8bad3ffc0f9d794aef1cb0ee66cac61d3be0/zc.recipe.cmmi-3.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11f9a9333fd2a5dfc9e4ebfc3959ee92", "sha256": "592304c91d406cdfd1f3f28401942961f3e57cfe26180d1228a1fbc34acf4a0c"}, "downloads": -1, "filename": "zc.recipe.cmmi-3.0.0.tar.gz", "has_sig": false, "md5_digest": "11f9a9333fd2a5dfc9e4ebfc3959ee92", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "size": 23898, "upload_time": "2019-03-30T08:10:56", "upload_time_iso_8601": "2019-03-30T08:10:56.604901Z", "url": "https://files.pythonhosted.org/packages/e4/4f/2c621d34dc79e3dabeafc8f44e183dde53c927880e551e977c9fdbc36b89/zc.recipe.cmmi-3.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:19:12 2020"}