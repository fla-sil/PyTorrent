{"info": {"author": "Chaitanya Chinni", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Python Discord Logger\n\nA custom message logger to Discord for Python 3.\n\n## Install\n\nInstall via pip: `pip install discord-logger`\n\n## Basic Usage\n\n```python\nfrom discord_logger import DiscordLogger\n\noptions = {\n    \"application_name\": \"My Server\",\n    \"service_name\": \"My API\",\n    \"service_icon_url\": \"your icon url\",\n    \"service_environment\": \"Production\",\n    \"default_level\": \"info\",\n}\n\nlogger = DiscordLogger(webhook_url=\"your discord webhook url\", **options)\nlogger.construct(title=\"Health Check\", description=\"All services are running normally!\")\n\nresponse = logger.send()\n```\n\n![Image](images/basic_message.png \"Basic Usage\")\n\n## Configure various options\n\n\n\n## Examples\n\n### Set Service Name, Icon and Environment for easy identification\n\nYou can configure the log message with service name, icon and environment for easy identification. The `Host` field which is the hostname of the server is automatically added for every message.\n\n```python\nfrom discord_logger import DiscordLogger\n\nwebhook_url = \"your discord webhook url\"\noptions = {\n    \"application_name\": \"My Server\",\n    \"service_name\": \"Backend API\",\n    \"service_icon_url\": \"your icon url\",\n    \"service_environment\": \"Production\",\n    \"default_level\": \"info\",\n}\n\nlogger = DiscordLogger(webhook_url=webhook_url, **options)\nlogger.construct(\n    title=\"Health Check\",\n    description=\"Issue in Auth API!\",\n    error=\"Traceback (most recent call last):\\n ValueError: Database connect accepts only string as a parameter!\",\n)\n\nresponse = logger.send()\n```\n\n![Image](images/error_message.png \"Message with Service Name, Icon and Environment\")\n\n### Send messages with different log-levels\n\nThe log-level indicates the importance of the message. It changes the color of the discord message in particular. Currently supported levels are,\n\n- `error`\n- `warn`\n- `info`\n- `verbose`\n- `debug`\n- `success`\n\nThe log-level can be set during construction of the message like through the parameter `level`.\n\nIf the parameter isn't provided, it'll be set to the one given in `default_level`. Any invalid input would be ignored and the log-level would be automatically be set to `default`.\n\n```python\nfrom discord_logger import DiscordLogger\n\noptions = {\n    \"application_name\": \"My Server\",\n    \"service_name\": \"My API\",\n    \"service_icon_url\": \"your icon url\",\n    \"service_environment\": \"Production\",\n    \"default_level\": \"info\",\n}\n\nlogger = DiscordLogger(webhook_url=webhook_url, **options)\nlogger.construct(\n    title=\"Celery Task Manager\",\n    description=\"Successfully completed training job for model v1.3.3!\",\n    level=\"success\",\n)\n\nresponse = logger.send()\n```\n\n![Image](images/success_message.png \"Message with success log-level\")\n\n- Send complete error traceback\n\nThe `error` field can contain any error message. It will be automatically be formatted in the final message. For example, you can send a complete traceback of an error message to debug faster!\n\n```python\nimport traceback\n\nfrom discord_logger import DiscordLogger\n\n\ndef get_traceback(e):\n    tb = (\n        \"Traceback (most recent call last):\\n\"\n        + \"\".join(traceback.format_list(traceback.extract_tb(e.__traceback__)))\n        + type(e).__name__\n        + \": \"\n        + str(e)\n    )\n    return tb\n\n\nwebhook_url = \"your discord webhook url\"\noptions = {\n    \"application_name\": \"My Server\",\n    \"service_name\": \"Backend API\",\n    \"service_icon_url\": \"your icon url\",\n    \"service_environment\": \"Production\",\n    \"default_level\": \"info\",\n}\n\nerr = KeyError(\"`email` field cannot be None\")\n\nlogger = DiscordLogger(webhook_url=webhook_url, **options)\nlogger.construct(\n    title=\"Runtime Exception\", description=err.__str__(), error=get_traceback(err),\n)\n\nresponse = logger.send()\n```\n\n![Image](images/complete_error_traceback.png \"Message with complete error traceback\")\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chinnichaitanya/python-discord-logger", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "discord-logger", "package_url": "https://pypi.org/project/discord-logger/", "platform": "", "project_url": "https://pypi.org/project/discord-logger/", "project_urls": {"Homepage": "https://github.com/chinnichaitanya/python-discord-logger"}, "release_url": "https://pypi.org/project/discord-logger/1.0.2/", "requires_dist": ["discord-webhook"], "requires_python": ">=3", "summary": "Disccord Logger is a custom message logger to Discord for Python 3.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python Discord Logger</h1>\n<p>A custom message logger to Discord for Python 3.</p>\n<h2>Install</h2>\n<p>Install via pip: <code>pip install discord-logger</code></p>\n<h2>Basic Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">discord_logger</span> <span class=\"kn\">import</span> <span class=\"n\">DiscordLogger</span>\n\n<span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"application_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"My Server\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"service_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"My API\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"service_icon_url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"your icon url\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"service_environment\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Production\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"default_level\"</span><span class=\"p\">:</span> <span class=\"s2\">\"info\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">DiscordLogger</span><span class=\"p\">(</span><span class=\"n\">webhook_url</span><span class=\"o\">=</span><span class=\"s2\">\"your discord webhook url\"</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">options</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">construct</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Health Check\"</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"All services are running normally!\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8e3a59e4e608b40b1185bcfb1ea4c74e0e5f92ba/696d616765732f62617369635f6d6573736167652e706e67\"></p>\n<h2>Configure various options</h2>\n<h2>Examples</h2>\n<h3>Set Service Name, Icon and Environment for easy identification</h3>\n<p>You can configure the log message with service name, icon and environment for easy identification. The <code>Host</code> field which is the hostname of the server is automatically added for every message.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">discord_logger</span> <span class=\"kn\">import</span> <span class=\"n\">DiscordLogger</span>\n\n<span class=\"n\">webhook_url</span> <span class=\"o\">=</span> <span class=\"s2\">\"your discord webhook url\"</span>\n<span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"application_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"My Server\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"service_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Backend API\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"service_icon_url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"your icon url\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"service_environment\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Production\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"default_level\"</span><span class=\"p\">:</span> <span class=\"s2\">\"info\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">DiscordLogger</span><span class=\"p\">(</span><span class=\"n\">webhook_url</span><span class=\"o\">=</span><span class=\"n\">webhook_url</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">options</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">construct</span><span class=\"p\">(</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Health Check\"</span><span class=\"p\">,</span>\n    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"Issue in Auth API!\"</span><span class=\"p\">,</span>\n    <span class=\"n\">error</span><span class=\"o\">=</span><span class=\"s2\">\"Traceback (most recent call last):</span><span class=\"se\">\\n</span><span class=\"s2\"> ValueError: Database connect accepts only string as a parameter!\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae7daa63da77d99c5bfaa8376070dc79d5c4c7b2/696d616765732f6572726f725f6d6573736167652e706e67\"></p>\n<h3>Send messages with different log-levels</h3>\n<p>The log-level indicates the importance of the message. It changes the color of the discord message in particular. Currently supported levels are,</p>\n<ul>\n<li><code>error</code></li>\n<li><code>warn</code></li>\n<li><code>info</code></li>\n<li><code>verbose</code></li>\n<li><code>debug</code></li>\n<li><code>success</code></li>\n</ul>\n<p>The log-level can be set during construction of the message like through the parameter <code>level</code>.</p>\n<p>If the parameter isn't provided, it'll be set to the one given in <code>default_level</code>. Any invalid input would be ignored and the log-level would be automatically be set to <code>default</code>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">discord_logger</span> <span class=\"kn\">import</span> <span class=\"n\">DiscordLogger</span>\n\n<span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"application_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"My Server\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"service_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"My API\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"service_icon_url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"your icon url\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"service_environment\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Production\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"default_level\"</span><span class=\"p\">:</span> <span class=\"s2\">\"info\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">DiscordLogger</span><span class=\"p\">(</span><span class=\"n\">webhook_url</span><span class=\"o\">=</span><span class=\"n\">webhook_url</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">options</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">construct</span><span class=\"p\">(</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Celery Task Manager\"</span><span class=\"p\">,</span>\n    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"Successfully completed training job for model v1.3.3!\"</span><span class=\"p\">,</span>\n    <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"s2\">\"success\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/22cde64920319bd30d8cef2cd5d2d4b751ba2171/696d616765732f737563636573735f6d6573736167652e706e67\"></p>\n<ul>\n<li>Send complete error traceback</li>\n</ul>\n<p>The <code>error</code> field can contain any error message. It will be automatically be formatted in the final message. For example, you can send a complete traceback of an error message to debug faster!</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">traceback</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">discord_logger</span> <span class=\"kn\">import</span> <span class=\"n\">DiscordLogger</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">get_traceback</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">):</span>\n    <span class=\"n\">tb</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"s2\">\"Traceback (most recent call last):</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n        <span class=\"o\">+</span> <span class=\"s2\">\"\"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">traceback</span><span class=\"o\">.</span><span class=\"n\">format_list</span><span class=\"p\">(</span><span class=\"n\">traceback</span><span class=\"o\">.</span><span class=\"n\">extract_tb</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">__traceback__</span><span class=\"p\">)))</span>\n        <span class=\"o\">+</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"vm\">__name__</span>\n        <span class=\"o\">+</span> <span class=\"s2\">\": \"</span>\n        <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">tb</span>\n\n\n<span class=\"n\">webhook_url</span> <span class=\"o\">=</span> <span class=\"s2\">\"your discord webhook url\"</span>\n<span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"application_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"My Server\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"service_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Backend API\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"service_icon_url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"your icon url\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"service_environment\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Production\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"default_level\"</span><span class=\"p\">:</span> <span class=\"s2\">\"info\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"ne\">KeyError</span><span class=\"p\">(</span><span class=\"s2\">\"`email` field cannot be None\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">DiscordLogger</span><span class=\"p\">(</span><span class=\"n\">webhook_url</span><span class=\"o\">=</span><span class=\"n\">webhook_url</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">options</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">construct</span><span class=\"p\">(</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Runtime Exception\"</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"n\">err</span><span class=\"o\">.</span><span class=\"fm\">__str__</span><span class=\"p\">(),</span> <span class=\"n\">error</span><span class=\"o\">=</span><span class=\"n\">get_traceback</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6021be5b7443d9cead5b62ac81cdd08977d59224/696d616765732f636f6d706c6574655f6572726f725f74726163656261636b2e706e67\"></p>\n\n          </div>"}, "last_serial": 7106332, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "dbe07ee810e1cf8afb0ac3d4f32e9994", "sha256": "a9bc45f1fe0ba64f5e44f57c59b9e1ee2301b8092100107915f6e0c96d80a4e1"}, "downloads": -1, "filename": "discord_logger-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dbe07ee810e1cf8afb0ac3d4f32e9994", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 6670, "upload_time": "2020-04-24T22:34:23", "upload_time_iso_8601": "2020-04-24T22:34:23.081679Z", "url": "https://files.pythonhosted.org/packages/c7/0a/030410620f3baa5f5b0a8df012d6becde3c3a957829916ab4dd664ab03c8/discord_logger-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac25c9266c7d351a972c19e10af4af19", "sha256": "353a88a289f248700fcd91a739868045a89e8e99ceddb35b65168173c7eadae4"}, "downloads": -1, "filename": "discord-logger-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ac25c9266c7d351a972c19e10af4af19", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 275187, "upload_time": "2020-04-24T22:34:28", "upload_time_iso_8601": "2020-04-24T22:34:28.874833Z", "url": "https://files.pythonhosted.org/packages/8e/7e/17ce8a809854c98a0c232f62de71913a1b5982856a27cc8fe3ae700d1ed7/discord-logger-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "93341b154795940d51d9e5450b988e1b", "sha256": "b9dc1f22b82188b42d7cde4ab7a91db78805b4f1c49400556dd12befc2bb1ae2"}, "downloads": -1, "filename": "discord_logger-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "93341b154795940d51d9e5450b988e1b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 6694, "upload_time": "2020-04-26T18:19:39", "upload_time_iso_8601": "2020-04-26T18:19:39.530319Z", "url": "https://files.pythonhosted.org/packages/5f/a4/81ed1f0a199e32fc2eca95436a7b9ab5aef86e41ade5421f2192225a4f3c/discord_logger-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80265e743be5ab4eef9c30027e082898", "sha256": "94dad949d4f626bfa7b15ae56c3499d00f0d1243501bfd2d7343d5e57a6fbeae"}, "downloads": -1, "filename": "discord-logger-1.0.1.tar.gz", "has_sig": false, "md5_digest": "80265e743be5ab4eef9c30027e082898", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 275256, "upload_time": "2020-04-26T18:19:41", "upload_time_iso_8601": "2020-04-26T18:19:41.996036Z", "url": "https://files.pythonhosted.org/packages/40/81/94cde63b066b0caa71052b73caa083dd675b425a3f6549ef7a2562becc31/discord-logger-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "ae9222f063af8e8fb4c6014b472a9880", "sha256": "ddf06e0fbb25838fb311320bb109c4b37d5190047aeb4ed92a9ecd4837f33395"}, "downloads": -1, "filename": "discord_logger-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ae9222f063af8e8fb4c6014b472a9880", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 6923, "upload_time": "2020-04-26T18:47:53", "upload_time_iso_8601": "2020-04-26T18:47:53.299184Z", "url": "https://files.pythonhosted.org/packages/58/7d/dc5d9fd75e41b7605678d672c0ce2fdb6fbe4a0846a96e22e57685df2261/discord_logger-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cbc739fe34c880b303bbf7f5b5ff68e", "sha256": "d953fe86a068c74497a241043505b95321d4f5a317703e751f911ecca42e20c8"}, "downloads": -1, "filename": "discord-logger-1.0.2.tar.gz", "has_sig": false, "md5_digest": "0cbc739fe34c880b303bbf7f5b5ff68e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 275515, "upload_time": "2020-04-26T18:47:56", "upload_time_iso_8601": "2020-04-26T18:47:56.728893Z", "url": "https://files.pythonhosted.org/packages/d0/05/e7d82fafdccd1036ddd25153779a4f843126df652dccf81ff64e2ffc9e34/discord-logger-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ae9222f063af8e8fb4c6014b472a9880", "sha256": "ddf06e0fbb25838fb311320bb109c4b37d5190047aeb4ed92a9ecd4837f33395"}, "downloads": -1, "filename": "discord_logger-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ae9222f063af8e8fb4c6014b472a9880", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 6923, "upload_time": "2020-04-26T18:47:53", "upload_time_iso_8601": "2020-04-26T18:47:53.299184Z", "url": "https://files.pythonhosted.org/packages/58/7d/dc5d9fd75e41b7605678d672c0ce2fdb6fbe4a0846a96e22e57685df2261/discord_logger-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cbc739fe34c880b303bbf7f5b5ff68e", "sha256": "d953fe86a068c74497a241043505b95321d4f5a317703e751f911ecca42e20c8"}, "downloads": -1, "filename": "discord-logger-1.0.2.tar.gz", "has_sig": false, "md5_digest": "0cbc739fe34c880b303bbf7f5b5ff68e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 275515, "upload_time": "2020-04-26T18:47:56", "upload_time_iso_8601": "2020-04-26T18:47:56.728893Z", "url": "https://files.pythonhosted.org/packages/d0/05/e7d82fafdccd1036ddd25153779a4f843126df652dccf81ff64e2ffc9e34/discord-logger-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:12 2020"}