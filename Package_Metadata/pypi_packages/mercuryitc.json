{"info": {"author": "Florian Forster, Sam Schott", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "[![PyPi Release](https://img.shields.io/pypi/v/mercuryitc.svg)](https://pypi.org/project/mercuryitc/)\n\n# MercuryITC driver\n\n## About\n\nThis is a purely python based driver to remotely control the \nOxford Mercury iTC cryogenic \nenvironment controller <http://www.oxford-instruments.com/>.\n\nThis driver is requires pyvisa-py but can be easily modified to use another interface.\n\nThis driver supports the aux, heater and temperature, and gasflow modules. Look\nat the class docstrings to see all the implemented commands (which is almost all).\n\n## How to use\n\nThe core of this module is the class MercuryITC. To initialize a driver object,\njust create an instance of this class with the device's visa address, e. g.:\n\n```python\n>>> from mercuryitc import MercuryITC\n>>> m = MercuryITC('TCPIP0:172.20.91.43:7020:SOCKET')\n```\n\nAll the instrument attributes can be accessed through instance attributes, e.g.:\n```python\n>>> print(m.serl)\n```\nAll MercuryITC modules are automatically recognized and added to the modules\nattribute:\n```python\n>>> print(m.modules)\n```\nValues can be read from and written to the instrument in the same way as for\nmain models:\n```python\n>>> htr = m.modules[0]\n>>> print(htr.nick)\n>>> htr.nick = 'Main heater'\n>>> print(htr.nick)\n```\nThere exists a special kind of attributes called *signals* in the MercuryITC\nmanual. These contain a numeric value as well as a unit. Signals are read\nand set as tuples, e.g.:\n```python\n>>> print(htr.volt)\n>>> htr.volt = (2.5, 'V')\n>>> print(htr.volt)\n```\nNote that all attributes which are not *signals* are cached and retrieved only\nonce from the device. They are stored and read from memory afterwards. To \nremove these variables from memory for whatever reason, simply call the \ndestructor:\n```python\n>>> del m.serl\n```\nIt's also possible to empty the entire cache of an object by calling the\nclear_cache method:\n```python\n>>> m.clear_cache()\n```\n\n\n## Installation\nDownload or clone the repository. Install the package by running \n```console\n$ pip install /path/to/folder\n```\nwhere \"/path/to/folder\" is the path to the folder containing setup.py. \n\n## To fix\n\n- MercuryITC: USER and PASS property not implemented\n- Add support for level meter module", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/crazyfermions/python-mercury_driver", "keywords": "", "license": "MIT", "maintainer": "Florian Forster", "maintainer_email": "florian.forster@rwth-aachen.de", "name": "mercuryitc", "package_url": "https://pypi.org/project/mercuryitc/", "platform": "", "project_url": "https://pypi.org/project/mercuryitc/", "project_urls": {"Homepage": "https://github.com/crazyfermions/python-mercury_driver"}, "release_url": "https://pypi.org/project/mercuryitc/0.2.2/", "requires_dist": null, "requires_python": "", "summary": "Full Python driver for the Oxford Mercury iTC cryogenic environment controller.", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/mercuryitc/\" rel=\"nofollow\"><img alt=\"PyPi Release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2f3d7da0a7af9d87c9eaea03736b2b94356cd846/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d6572637572796974632e737667\"></a></p>\n<h1>MercuryITC driver</h1>\n<h2>About</h2>\n<p>This is a purely python based driver to remotely control the\nOxford Mercury iTC cryogenic\nenvironment controller <a href=\"http://www.oxford-instruments.com/\" rel=\"nofollow\">http://www.oxford-instruments.com/</a>.</p>\n<p>This driver is requires pyvisa-py but can be easily modified to use another interface.</p>\n<p>This driver supports the aux, heater and temperature, and gasflow modules. Look\nat the class docstrings to see all the implemented commands (which is almost all).</p>\n<h2>How to use</h2>\n<p>The core of this module is the class MercuryITC. To initialize a driver object,\njust create an instance of this class with the device's visa address, e. g.:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">mercuryitc</span> <span class=\"kn\">import</span> <span class=\"n\">MercuryITC</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">MercuryITC</span><span class=\"p\">(</span><span class=\"s1\">'TCPIP0:172.20.91.43:7020:SOCKET'</span><span class=\"p\">)</span>\n</pre>\n<p>All the instrument attributes can be accessed through instance attributes, e.g.:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">serl</span><span class=\"p\">)</span>\n</pre>\n<p>All MercuryITC modules are automatically recognized and added to the modules\nattribute:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"p\">)</span>\n</pre>\n<p>Values can be read from and written to the instrument in the same way as for\nmain models:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">htr</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">htr</span><span class=\"o\">.</span><span class=\"n\">nick</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">htr</span><span class=\"o\">.</span><span class=\"n\">nick</span> <span class=\"o\">=</span> <span class=\"s1\">'Main heater'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">htr</span><span class=\"o\">.</span><span class=\"n\">nick</span><span class=\"p\">)</span>\n</pre>\n<p>There exists a special kind of attributes called <em>signals</em> in the MercuryITC\nmanual. These contain a numeric value as well as a unit. Signals are read\nand set as tuples, e.g.:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">htr</span><span class=\"o\">.</span><span class=\"n\">volt</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">htr</span><span class=\"o\">.</span><span class=\"n\">volt</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">2.5</span><span class=\"p\">,</span> <span class=\"s1\">'V'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">htr</span><span class=\"o\">.</span><span class=\"n\">volt</span><span class=\"p\">)</span>\n</pre>\n<p>Note that all attributes which are not <em>signals</em> are cached and retrieved only\nonce from the device. They are stored and read from memory afterwards. To\nremove these variables from memory for whatever reason, simply call the\ndestructor:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">del</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">serl</span>\n</pre>\n<p>It's also possible to empty the entire cache of an object by calling the\nclear_cache method:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">clear_cache</span><span class=\"p\">()</span>\n</pre>\n<h2>Installation</h2>\n<p>Download or clone the repository. Install the package by running</p>\n<pre><span class=\"gp\">$</span> pip install /path/to/folder\n</pre>\n<p>where \"/path/to/folder\" is the path to the folder containing setup.py.</p>\n<h2>To fix</h2>\n<ul>\n<li>MercuryITC: USER and PASS property not implemented</li>\n<li>Add support for level meter module</li>\n</ul>\n\n          </div>"}, "last_serial": 6248523, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "41873d695c6bd553af5f7975bc532350", "sha256": "5523bd4d31ef807e0b49ffad29834ad0c37906996e10138fb2b352a09be407d1"}, "downloads": -1, "filename": "mercuryitc-0.1.0.tar.gz", "has_sig": false, "md5_digest": "41873d695c6bd553af5f7975bc532350", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7446, "upload_time": "2014-03-18T16:21:44", "upload_time_iso_8601": "2014-03-18T16:21:44.331936Z", "url": "https://files.pythonhosted.org/packages/f6/86/8e9ddb098d35b51e10455b1c3be1bb82945948f83c3c1bb027167ccb5979/mercuryitc-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4e917406bbeac32acc44c5b4cba601ac", "sha256": "6cf8cfb3b6f8dbfbe1075e9a2f9deecbd6b60c866f2d6444a92076ca45afc46e"}, "downloads": -1, "filename": "mercuryitc-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4e917406bbeac32acc44c5b4cba601ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8868, "upload_time": "2019-02-09T13:01:10", "upload_time_iso_8601": "2019-02-09T13:01:10.921913Z", "url": "https://files.pythonhosted.org/packages/aa/6e/560eecdc0212334e944d4ed757b7c441c48b64d6bcf6aed4d8ecade6c01b/mercuryitc-0.2.0.tar.gz", "yanked": false}], "0.2.0.post1": [{"comment_text": "", "digests": {"md5": "f746773379c16484d90b0c55ce69de51", "sha256": "9c74272a12db781729a1133708e1c98ffcd7c18d86405aa2d262e4f5cb0b69a3"}, "downloads": -1, "filename": "mercuryitc-0.2.0.post1.tar.gz", "has_sig": false, "md5_digest": "f746773379c16484d90b0c55ce69de51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8949, "upload_time": "2019-02-09T13:05:14", "upload_time_iso_8601": "2019-02-09T13:05:14.761339Z", "url": "https://files.pythonhosted.org/packages/57/0d/774dd731fca15b385138e1268c13d05a1c334094ce7f8701fe97ab74e6ca/mercuryitc-0.2.0.post1.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "56028291ff8154e8d6bd167f2420b7e1", "sha256": "dca356650537c560a3f60ab71583ffde47efb1bc6ecd57a6674e4b7c18dca40e"}, "downloads": -1, "filename": "mercuryitc-0.2.1.tar.gz", "has_sig": false, "md5_digest": "56028291ff8154e8d6bd167f2420b7e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9250, "upload_time": "2019-08-04T11:17:14", "upload_time_iso_8601": "2019-08-04T11:17:14.788130Z", "url": "https://files.pythonhosted.org/packages/86/53/d3c993499f8721dcdcda4733137b6853f88795f80e004af7bda026afd71f/mercuryitc-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "785401e0940e2348f3b07f0158f7ecdc", "sha256": "cb8fbf51b7eeee91ef31358ab1cf5ee8127e0c6c3fed3ed7b50782fc6d03f67f"}, "downloads": -1, "filename": "mercuryitc-0.2.2.tar.gz", "has_sig": false, "md5_digest": "785401e0940e2348f3b07f0158f7ecdc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8353, "upload_time": "2019-12-05T17:20:08", "upload_time_iso_8601": "2019-12-05T17:20:08.172915Z", "url": "https://files.pythonhosted.org/packages/9d/17/f57d5c3d96220a71de3acea422b9ce83e49fd936e464d38efd11c34d6dd5/mercuryitc-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "785401e0940e2348f3b07f0158f7ecdc", "sha256": "cb8fbf51b7eeee91ef31358ab1cf5ee8127e0c6c3fed3ed7b50782fc6d03f67f"}, "downloads": -1, "filename": "mercuryitc-0.2.2.tar.gz", "has_sig": false, "md5_digest": "785401e0940e2348f3b07f0158f7ecdc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8353, "upload_time": "2019-12-05T17:20:08", "upload_time_iso_8601": "2019-12-05T17:20:08.172915Z", "url": "https://files.pythonhosted.org/packages/9d/17/f57d5c3d96220a71de3acea422b9ce83e49fd936e464d38efd11c34d6dd5/mercuryitc-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:09 2020"}