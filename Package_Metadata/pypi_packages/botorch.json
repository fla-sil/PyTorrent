{"info": {"author": "Facebook, Inc.", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering"], "description": "<a href=\"https://botorch.org\">\n  <img width=\"350\" src=\"./botorch_logo_lockup.svg\" alt=\"BoTorch Logo\" />\n</a>\n\n<hr/>\n\n[![Conda](https://img.shields.io/conda/v/pytorch/botorch.svg)](https://anaconda.org/pytorch/botorch)\n[![PyPI](https://img.shields.io/pypi/v/botorch.svg)](https://pypi.org/project/botorch)\n[![License](https://img.shields.io/badge/license-MIT-green.svg)](LICENSE)\n[![CircleCI](https://circleci.com/gh/pytorch/botorch.svg?style=shield)](https://circleci.com/gh/pytorch/botorch)\n[![Codecov](https://img.shields.io/codecov/c/github/pytorch/botorch.svg)](https://codecov.io/github/pytorch/botorch)\n\nBoTorch is a library for Bayesian Optimization built on PyTorch.\n\n*BoTorch is currently in beta and under active development!*\n\n\n#### Why BoTorch ?\nBoTorch\n* Provides a modular and easily extensible interface for composing Bayesian\n  optimization primitives, including probabilistic models, acquisition functions,\n  and optimizers.\n* Harnesses the power of PyTorch, including auto-differentiation, native support\n  for highly parallelized modern hardware (e.g. GPUs) using device-agnostic code,\n  and a dynamic computation graph.\n* Supports Monte Carlo-based acquisition functions via the\n  [reparameterization trick](https://arxiv.org/abs/1312.6114), which makes it\n  straightforward to implement new ideas without having to impose restrictive\n  assumptions about the underlying model.\n* Enables seamless integration with deep and/or convolutional architectures in PyTorch.\n* Has first-class support for state-of-the art probabilistic models in\n  [GPyTorch](http://www.gpytorch.ai/), including support for multi-task Gaussian\n  Processes (GPs) deep kernel learning, deep GPs, and approximate inference.\n\n\n#### Target Audience\n\nThe primary audience for hands-on use of BoTorch are researchers and\nsophisticated practitioners in Bayesian Optimization and AI.\nWe recommend using BoTorch as a low-level API for implementing new algorithms\nfor [Ax](https://ax.dev). Ax has been designed to be an easy-to-use platform\nfor end-users, which at the same time is flexible enough for Bayesian\nOptimization researchers to plug into for handling of feature transformations,\n(meta-)data management, storage, etc.\nWe recommend that end-users who are not actively doing research on Bayesian\nOptimization simply use Ax.\n\n\n## Installation\n\n**Installation Requirements**\n- Python >= 3.7\n- PyTorch >= 1.5\n- gpytorch >= 1.1.1\n- scipy\n\n\n##### Installing the latest release\n\nThe latest release of BoTorch is easily installed either via\n[Anaconda](https://www.anaconda.com/distribution/#download-section) (recommended):\n```bash\nconda install botorch -c pytorch -c gpytorch\n```\nor via `pip`:\n```bash\npip install botorch\n```\n\nYou can customize your PyTorch installation (i.e. CUDA version, CPU only option)\nby following the [PyTorch installation instructions](https://pytorch.org/get-started/locally/).\n\n***Important note for MacOS users:***\n* Make sure your PyTorch build is linked against MKL (the non-optimized version\n  of BoTorch can be up to an order of magnitude slower in some settings).\n  Setting this up manually on MacOS can be tricky - to ensure this works properly,\n  please follow the [PyTorch installation instructions](https://pytorch.org/get-started/locally/).\n* If you need CUDA on MacOS, you will need to build PyTorch from source. Please\n  consult the PyTorch installation instructions above.\n\n\n##### Installing from latest master\n\nIf you would like to try our bleeding edge features (and don't mind potentially\nrunning into the occasional bug here or there), you can install the latest\nmaster directly from GitHub (this will also require installing the current GPyTorch master):\n```bash\npip install --upgrade git+https://github.com/cornellius-gp/gpytorch.git\npip install --upgrade git+https://github.com/pytorch/botorch.git\n```\n\n**Manual / Dev install**\n\nAlternatively, you can do a manual install. For a basic install, run:\n```bash\ngit clone https://github.com/pytorch/botorch.git\ncd botorch\npip install -e .\n```\n\nTo customize the installation, you can also run the following variants of the\nabove:\n* `pip install -e .[dev]`: Also installs all tools necessary for development\n  (testing, linting, docs building; see [Contributing](#contributing) below).\n* `pip install -e .[tutorials]`: Also installs all packages necessary for running the tutorial notebooks.\n\n\n## Getting Started\n\nHere's a quick run down of the main components of a Bayesian optimization loop.\nFor more details see our [Documentation](https://botorch.org/docs/introduction) and the\n[Tutorials](https://botorch.org/tutorials).\n\n1. Fit a Gaussian Process model to data\n  ```python\n  import torch\n  from botorch.models import SingleTaskGP\n  from botorch.fit import fit_gpytorch_model\n  from gpytorch.mlls import ExactMarginalLogLikelihood\n\n  train_X = torch.rand(10, 2)\n  Y = 1 - (train_X - 0.5).norm(dim=-1, keepdim=True)  # explicit output dimension\n  Y += 0.1 * torch.rand_like(Y)\n  train_Y = (Y - Y.mean()) / Y.std()\n\n  gp = SingleTaskGP(train_X, train_Y)\n  mll = ExactMarginalLogLikelihood(gp.likelihood, gp)\n  fit_gpytorch_model(mll)\n  ```\n\n2. Construct an acquisition function\n  ```python\n  from botorch.acquisition import UpperConfidenceBound\n\n  UCB = UpperConfidenceBound(gp, beta=0.1)\n  ```\n\n3. Optimize the acquisition function\n  ```python\n  from botorch.optim import optimize_acqf\n\n  bounds = torch.stack([torch.zeros(2), torch.ones(2)])\n  candidate, acq_value = optimize_acqf(\n      UCB, bounds=bounds, q=1, num_restarts=5, raw_samples=20,\n  )\n  ```\n\n\n## Citing BoTorch\n\nIf you use BoTorch, please cite the following paper:\n> [M. Balandat, B. Karrer, D. R. Jiang, S. Daulton, B. Letham, A. G. Wilson, and E. Bakshy. BoTorch: Programmable Bayesian Optimization in PyTorch. ArXiv e-prints, 2019.](http://arxiv.org/abs/1910.06403)\n\n```\n@article{balandat2019botorch,\n  Author = {Balandat, Maximilian and Karrer, Brian and Jiang, Daniel R. and Daulton, Samuel and Letham, Benjamin and Wilson, Andrew Gordon and Bakshy, Eytan},\n  Journal = {arxiv e-prints},\n  Title = {{BoTorch: Programmable Bayesian Optimization in PyTorch}},\n  Year = {2019},\n  url = {http://arxiv.org/abs/1910.06403}\n}\n```\n\n\n## Contributing\nSee the [CONTRIBUTING](CONTRIBUTING.md) file for how to help out.\n\n\n## License\nBoTorch is MIT licensed, as found in the [LICENSE](LICENSE) file.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://botorch.org", "keywords": "Bayesian optimization,PyTorch", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "botorch", "package_url": "https://pypi.org/project/botorch/", "platform": "", "project_url": "https://pypi.org/project/botorch/", "project_urls": {"Documentation": "https://botorch.org", "Homepage": "https://botorch.org", "Source": "https://github.com/pytorch/botorch", "conda": "https://anaconda.org/pytorch/botorch"}, "release_url": "https://pypi.org/project/botorch/0.2.3/", "requires_dist": ["torch (>=1.4)", "gpytorch (>=1.1.1)", "scipy", "pytest ; extra == 'dev'", "pytest-cov ; extra == 'dev'", "black ; extra == 'dev'", "flake8 ; extra == 'dev'", "sphinx ; extra == 'dev'", "sphinx-autodoc-typehints ; extra == 'dev'", "pytest ; extra == 'test'", "pytest-cov ; extra == 'test'", "jupyter ; extra == 'tutorials'", "matplotlib ; extra == 'tutorials'", "cma ; extra == 'tutorials'", "torchvision ; extra == 'tutorials'"], "requires_python": ">=3.7", "summary": "Bayesian Optimization in PyTorch", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://botorch.org\" rel=\"nofollow\">\n  <img alt=\"BoTorch Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7e306bea871e48db5a741bdf612f0603e2c9d4c6/2e2f626f746f7263685f6c6f676f5f6c6f636b75702e737667\" width=\"350\">\n</a>\n<hr>\n<p><a href=\"https://anaconda.org/pytorch/botorch\" rel=\"nofollow\"><img alt=\"Conda\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9dfecaa8edf8ff6fea7c8891b3d030a5fb7a2c8e/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f762f7079746f7263682f626f746f7263682e737667\"></a>\n<a href=\"https://pypi.org/project/botorch\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35010fb940ed2a5fd9c7dffb1b22bd1424ce2e49/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f626f746f7263682e737667\"></a>\n<a href=\"LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f7db8d43223f55fabe102838639f47819829c1ca/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d677265656e2e737667\"></a>\n<a href=\"https://circleci.com/gh/pytorch/botorch\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/206f6bdcb7aca6a6c51936322af8fa919a73a052/68747470733a2f2f636972636c6563692e636f6d2f67682f7079746f7263682f626f746f7263682e7376673f7374796c653d736869656c64\"></a>\n<a href=\"https://codecov.io/github/pytorch/botorch\" rel=\"nofollow\"><img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/61428e3bfa74abddd07ceac91c30803d25e641fb/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f7079746f7263682f626f746f7263682e737667\"></a></p>\n<p>BoTorch is a library for Bayesian Optimization built on PyTorch.</p>\n<p><em>BoTorch is currently in beta and under active development!</em></p>\n<h4>Why BoTorch ?</h4>\n<p>BoTorch</p>\n<ul>\n<li>Provides a modular and easily extensible interface for composing Bayesian\noptimization primitives, including probabilistic models, acquisition functions,\nand optimizers.</li>\n<li>Harnesses the power of PyTorch, including auto-differentiation, native support\nfor highly parallelized modern hardware (e.g. GPUs) using device-agnostic code,\nand a dynamic computation graph.</li>\n<li>Supports Monte Carlo-based acquisition functions via the\n<a href=\"https://arxiv.org/abs/1312.6114\" rel=\"nofollow\">reparameterization trick</a>, which makes it\nstraightforward to implement new ideas without having to impose restrictive\nassumptions about the underlying model.</li>\n<li>Enables seamless integration with deep and/or convolutional architectures in PyTorch.</li>\n<li>Has first-class support for state-of-the art probabilistic models in\n<a href=\"http://www.gpytorch.ai/\" rel=\"nofollow\">GPyTorch</a>, including support for multi-task Gaussian\nProcesses (GPs) deep kernel learning, deep GPs, and approximate inference.</li>\n</ul>\n<h4>Target Audience</h4>\n<p>The primary audience for hands-on use of BoTorch are researchers and\nsophisticated practitioners in Bayesian Optimization and AI.\nWe recommend using BoTorch as a low-level API for implementing new algorithms\nfor <a href=\"https://ax.dev\" rel=\"nofollow\">Ax</a>. Ax has been designed to be an easy-to-use platform\nfor end-users, which at the same time is flexible enough for Bayesian\nOptimization researchers to plug into for handling of feature transformations,\n(meta-)data management, storage, etc.\nWe recommend that end-users who are not actively doing research on Bayesian\nOptimization simply use Ax.</p>\n<h2>Installation</h2>\n<p><strong>Installation Requirements</strong></p>\n<ul>\n<li>Python &gt;= 3.7</li>\n<li>PyTorch &gt;= 1.5</li>\n<li>gpytorch &gt;= 1.1.1</li>\n<li>scipy</li>\n</ul>\n<h5>Installing the latest release</h5>\n<p>The latest release of BoTorch is easily installed either via\n<a href=\"https://www.anaconda.com/distribution/#download-section\" rel=\"nofollow\">Anaconda</a> (recommended):</p>\n<pre>conda install botorch -c pytorch -c gpytorch\n</pre>\n<p>or via <code>pip</code>:</p>\n<pre>pip install botorch\n</pre>\n<p>You can customize your PyTorch installation (i.e. CUDA version, CPU only option)\nby following the <a href=\"https://pytorch.org/get-started/locally/\" rel=\"nofollow\">PyTorch installation instructions</a>.</p>\n<p><em><strong>Important note for MacOS users:</strong></em></p>\n<ul>\n<li>Make sure your PyTorch build is linked against MKL (the non-optimized version\nof BoTorch can be up to an order of magnitude slower in some settings).\nSetting this up manually on MacOS can be tricky - to ensure this works properly,\nplease follow the <a href=\"https://pytorch.org/get-started/locally/\" rel=\"nofollow\">PyTorch installation instructions</a>.</li>\n<li>If you need CUDA on MacOS, you will need to build PyTorch from source. Please\nconsult the PyTorch installation instructions above.</li>\n</ul>\n<h5>Installing from latest master</h5>\n<p>If you would like to try our bleeding edge features (and don't mind potentially\nrunning into the occasional bug here or there), you can install the latest\nmaster directly from GitHub (this will also require installing the current GPyTorch master):</p>\n<pre>pip install --upgrade git+https://github.com/cornellius-gp/gpytorch.git\npip install --upgrade git+https://github.com/pytorch/botorch.git\n</pre>\n<p><strong>Manual / Dev install</strong></p>\n<p>Alternatively, you can do a manual install. For a basic install, run:</p>\n<pre>git clone https://github.com/pytorch/botorch.git\n<span class=\"nb\">cd</span> botorch\npip install -e .\n</pre>\n<p>To customize the installation, you can also run the following variants of the\nabove:</p>\n<ul>\n<li><code>pip install -e .[dev]</code>: Also installs all tools necessary for development\n(testing, linting, docs building; see <a href=\"#contributing\" rel=\"nofollow\">Contributing</a> below).</li>\n<li><code>pip install -e .[tutorials]</code>: Also installs all packages necessary for running the tutorial notebooks.</li>\n</ul>\n<h2>Getting Started</h2>\n<p>Here's a quick run down of the main components of a Bayesian optimization loop.\nFor more details see our <a href=\"https://botorch.org/docs/introduction\" rel=\"nofollow\">Documentation</a> and the\n<a href=\"https://botorch.org/tutorials\" rel=\"nofollow\">Tutorials</a>.</p>\n<ol>\n<li>Fit a Gaussian Process model to data</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n<span class=\"kn\">from</span> <span class=\"nn\">botorch.models</span> <span class=\"kn\">import</span> <span class=\"n\">SingleTaskGP</span>\n<span class=\"kn\">from</span> <span class=\"nn\">botorch.fit</span> <span class=\"kn\">import</span> <span class=\"n\">fit_gpytorch_model</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gpytorch.mlls</span> <span class=\"kn\">import</span> <span class=\"n\">ExactMarginalLogLikelihood</span>\n\n<span class=\"n\">train_X</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">Y</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"n\">train_X</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">keepdim</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>  <span class=\"c1\"># explicit output dimension</span>\n<span class=\"n\">Y</span> <span class=\"o\">+=</span> <span class=\"mf\">0.1</span> <span class=\"o\">*</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">rand_like</span><span class=\"p\">(</span><span class=\"n\">Y</span><span class=\"p\">)</span>\n<span class=\"n\">train_Y</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">Y</span> <span class=\"o\">-</span> <span class=\"n\">Y</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">())</span> <span class=\"o\">/</span> <span class=\"n\">Y</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"p\">()</span>\n\n<span class=\"n\">gp</span> <span class=\"o\">=</span> <span class=\"n\">SingleTaskGP</span><span class=\"p\">(</span><span class=\"n\">train_X</span><span class=\"p\">,</span> <span class=\"n\">train_Y</span><span class=\"p\">)</span>\n<span class=\"n\">mll</span> <span class=\"o\">=</span> <span class=\"n\">ExactMarginalLogLikelihood</span><span class=\"p\">(</span><span class=\"n\">gp</span><span class=\"o\">.</span><span class=\"n\">likelihood</span><span class=\"p\">,</span> <span class=\"n\">gp</span><span class=\"p\">)</span>\n<span class=\"n\">fit_gpytorch_model</span><span class=\"p\">(</span><span class=\"n\">mll</span><span class=\"p\">)</span>\n</pre>\n<ol>\n<li>Construct an acquisition function</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">botorch.acquisition</span> <span class=\"kn\">import</span> <span class=\"n\">UpperConfidenceBound</span>\n\n<span class=\"n\">UCB</span> <span class=\"o\">=</span> <span class=\"n\">UpperConfidenceBound</span><span class=\"p\">(</span><span class=\"n\">gp</span><span class=\"p\">,</span> <span class=\"n\">beta</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n</pre>\n<ol>\n<li>Optimize the acquisition function</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">botorch.optim</span> <span class=\"kn\">import</span> <span class=\"n\">optimize_acqf</span>\n\n<span class=\"n\">bounds</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">stack</span><span class=\"p\">([</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)])</span>\n<span class=\"n\">candidate</span><span class=\"p\">,</span> <span class=\"n\">acq_value</span> <span class=\"o\">=</span> <span class=\"n\">optimize_acqf</span><span class=\"p\">(</span>\n    <span class=\"n\">UCB</span><span class=\"p\">,</span> <span class=\"n\">bounds</span><span class=\"o\">=</span><span class=\"n\">bounds</span><span class=\"p\">,</span> <span class=\"n\">q</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">num_restarts</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">raw_samples</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Citing BoTorch</h2>\n<p>If you use BoTorch, please cite the following paper:</p>\n<blockquote>\n<p><a href=\"http://arxiv.org/abs/1910.06403\" rel=\"nofollow\">M. Balandat, B. Karrer, D. R. Jiang, S. Daulton, B. Letham, A. G. Wilson, and E. Bakshy. BoTorch: Programmable Bayesian Optimization in PyTorch. ArXiv e-prints, 2019.</a></p>\n</blockquote>\n<pre><code>@article{balandat2019botorch,\n  Author = {Balandat, Maximilian and Karrer, Brian and Jiang, Daniel R. and Daulton, Samuel and Letham, Benjamin and Wilson, Andrew Gordon and Bakshy, Eytan},\n  Journal = {arxiv e-prints},\n  Title = {{BoTorch: Programmable Bayesian Optimization in PyTorch}},\n  Year = {2019},\n  url = {http://arxiv.org/abs/1910.06403}\n}\n</code></pre>\n<h2>Contributing</h2>\n<p>See the <a href=\"CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING</a> file for how to help out.</p>\n<h2>License</h2>\n<p>BoTorch is MIT licensed, as found in the <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> file.</p>\n\n          </div>"}, "last_serial": 7106276, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "dd0eeb4462c9dae4ad72f3b6dc4724f5", "sha256": "52c2c9402cee5c01239c57cabe336e0618df780282e7d98f84ae8cd03a8bfe21"}, "downloads": -1, "filename": "botorch-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dd0eeb4462c9dae4ad72f3b6dc4724f5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 110449, "upload_time": "2019-05-01T01:04:39", "upload_time_iso_8601": "2019-05-01T01:04:39.896787Z", "url": "https://files.pythonhosted.org/packages/2f/ad/6450fea40cc4cbd6535a623b2c5ea14be2c6dd25a786147036e24c03666a/botorch-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6af226f51fd1e72d5e1bc648f98df9d0", "sha256": "6a96a9badb061eb4616ccc81ca1fd13940e0f96b081a3fbbfe16a1bc75cbcc7e"}, "downloads": -1, "filename": "botorch-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6af226f51fd1e72d5e1bc648f98df9d0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 73664, "upload_time": "2019-05-01T01:04:42", "upload_time_iso_8601": "2019-05-01T01:04:42.110778Z", "url": "https://files.pythonhosted.org/packages/c7/4d/d4d2091fe084191b359ed0ee10d7134864d381e6bda73b51a3303f2ca926/botorch-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6c6ba7b6110874488d82ddcf1809d6b1", "sha256": "83c157fc31f7e9b16c4c6e6feeed4f2a5654ba72e93733de8d8139dcb83c9ff4"}, "downloads": -1, "filename": "botorch-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6c6ba7b6110874488d82ddcf1809d6b1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 162133, "upload_time": "2019-06-28T00:13:57", "upload_time_iso_8601": "2019-06-28T00:13:57.994050Z", "url": "https://files.pythonhosted.org/packages/3b/11/beea30f343eff5ded0e47abdbce79f47f8d91d9dbee49bbaea34bbf48f20/botorch-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04f92637ec8653eaede9486be9a27730", "sha256": "9ba4014784f090e20e8824fa6b7572ee91949806ef16f4df4b0d73c4eda400cd"}, "downloads": -1, "filename": "botorch-0.1.1.tar.gz", "has_sig": false, "md5_digest": "04f92637ec8653eaede9486be9a27730", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 94678, "upload_time": "2019-06-28T00:13:59", "upload_time_iso_8601": "2019-06-28T00:13:59.896211Z", "url": "https://files.pythonhosted.org/packages/e4/d2/eabcb767e526042a8b65ff974eaf15321f6693e76ece96e413a7daf755d3/botorch-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "15feb3f8814017f17e42fec50189010c", "sha256": "78947af79d2e9696343dc5fdc01c28fdcef3b73c69b5ff4b58e77af252baa043"}, "downloads": -1, "filename": "botorch-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "15feb3f8814017f17e42fec50189010c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 161680, "upload_time": "2019-07-10T03:19:13", "upload_time_iso_8601": "2019-07-10T03:19:13.836309Z", "url": "https://files.pythonhosted.org/packages/d6/cc/0ae7b3751631078299271c24d13d68391645fbde8a4662fae8f8b63003ce/botorch-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0d19bbfae19b9fe762f7f7f5e12e6ad", "sha256": "2f30fd4b2e42d8f810382d5175dc4f1c49c9fb427b8709ec072525765f6e5075"}, "downloads": -1, "filename": "botorch-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c0d19bbfae19b9fe762f7f7f5e12e6ad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 100762, "upload_time": "2019-07-10T03:19:15", "upload_time_iso_8601": "2019-07-10T03:19:15.666781Z", "url": "https://files.pythonhosted.org/packages/55/26/6da49802ed7c80c3e08f339f0885168dda37677de8ac9efa80448426be73/botorch-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "60cb2e45cda5230e441714a92acaa558", "sha256": "bdc712027ab0432de664decb54452c291e65337242a5f7b0890887574a5850c6"}, "downloads": -1, "filename": "botorch-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "60cb2e45cda5230e441714a92acaa558", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 169975, "upload_time": "2019-08-10T23:28:38", "upload_time_iso_8601": "2019-08-10T23:28:38.239046Z", "url": "https://files.pythonhosted.org/packages/9d/94/15177eb5675109ebf63f18047371320dde678648bb5cd5761325c772269f/botorch-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a71efee80a905456d89c57175f296f45", "sha256": "d158a28a77cb7bfc364b10814be13a826cbd1deed06163f19d6f6ea9a11f9488"}, "downloads": -1, "filename": "botorch-0.1.3.tar.gz", "has_sig": false, "md5_digest": "a71efee80a905456d89c57175f296f45", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 106814, "upload_time": "2019-08-10T23:28:40", "upload_time_iso_8601": "2019-08-10T23:28:40.102463Z", "url": "https://files.pythonhosted.org/packages/f3/5a/d272bd521e4a77873f34c5196bad792aa3b7f4c1757da8abb3e5dcb4bbce/botorch-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "4dcea1869d41c7b04ee120e1a7751b5e", "sha256": "d54940b986d4c0cb28aa1210b25986d841375c9bd6bbe22aed0c730cf64d08f7"}, "downloads": -1, "filename": "botorch-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4dcea1869d41c7b04ee120e1a7751b5e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 170964, "upload_time": "2019-10-02T01:02:08", "upload_time_iso_8601": "2019-10-02T01:02:08.294261Z", "url": "https://files.pythonhosted.org/packages/60/4a/eeec07acafa624c0657c9d70e2860f289f0d991da303bf07be618c770585/botorch-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "caca1591910c16ac2380364b8d590e87", "sha256": "36aa32c1a9a6fa19def9141def19225198d0d2d778beefe5b7bada5141f5cd1d"}, "downloads": -1, "filename": "botorch-0.1.4.tar.gz", "has_sig": false, "md5_digest": "caca1591910c16ac2380364b8d590e87", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 118666, "upload_time": "2019-10-02T01:02:10", "upload_time_iso_8601": "2019-10-02T01:02:10.113052Z", "url": "https://files.pythonhosted.org/packages/da/09/db684ca8d6e00f78975ee521b0602e3641cf28878e066d03c69577fd1429/botorch-0.1.4.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "5e4927208e57421e608ef77ef801b56b", "sha256": "ce2983137766f52c600e717dd9dcb85ca22f0a18be94c2ed09f6ea2dfacef4d5"}, "downloads": -1, "filename": "botorch-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5e4927208e57421e608ef77ef801b56b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 219961, "upload_time": "2019-12-20T21:58:09", "upload_time_iso_8601": "2019-12-20T21:58:09.376786Z", "url": "https://files.pythonhosted.org/packages/6f/dc/dc3b886d3b48f3999dd8f13e63a4fed999f78026bcf49e3995b2c6dea5a1/botorch-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee949230cf4b7f33122cbf08bb1707ad", "sha256": "c55722070fcdab8f0afb133779b60fb681ff4f082e488a2b2745ef88a6c2d587"}, "downloads": -1, "filename": "botorch-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ee949230cf4b7f33122cbf08bb1707ad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 152109, "upload_time": "2019-12-20T21:58:11", "upload_time_iso_8601": "2019-12-20T21:58:11.441043Z", "url": "https://files.pythonhosted.org/packages/cc/7e/47f8d37ed5fbc3dcc2a344849948943af36ad0bf5e607a600b83c035a69d/botorch-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "09c0c507a8296839fda705e2f06d8aab", "sha256": "435c854add0f9d8269e6ec21df33b0fd7f57c568a00864c7150e5ae80077236e"}, "downloads": -1, "filename": "botorch-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "09c0c507a8296839fda705e2f06d8aab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 221279, "upload_time": "2020-01-16T19:38:32", "upload_time_iso_8601": "2020-01-16T19:38:32.751337Z", "url": "https://files.pythonhosted.org/packages/64/e4/d696b12a84d505e9592fb6f8458a968b19efc22e30cc517dd2d2817e27e4/botorch-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ae7a02ec18e18e8a129ab63d8f9adf5", "sha256": "53682373cd51b6c2a82acf7bc4b0e54571eb2a1bcc43bb00ce2087a6f09471c5"}, "downloads": -1, "filename": "botorch-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0ae7a02ec18e18e8a129ab63d8f9adf5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 152851, "upload_time": "2020-01-16T19:38:34", "upload_time_iso_8601": "2020-01-16T19:38:34.654780Z", "url": "https://files.pythonhosted.org/packages/85/d0/4b07ef546c26fd601a379452f6be38b1acb2474f2f36996ef8ab6df01beb/botorch-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "5fbcb3079649e84d59c9a8dc2d00e40d", "sha256": "d729422c2793ef161f13f11a0abf5b62b7171abb1fdbc89dc195593091add593"}, "downloads": -1, "filename": "botorch-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5fbcb3079649e84d59c9a8dc2d00e40d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 228719, "upload_time": "2020-03-09T17:00:50", "upload_time_iso_8601": "2020-03-09T17:00:50.150785Z", "url": "https://files.pythonhosted.org/packages/97/36/021c39efcac2ce653215165cca1a07690fa61da687f6f6866bcd1043e039/botorch-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f89fcc9e24ef2e76153ae7103df0c5d", "sha256": "448005bf1840b348d61444a03e1ff7b114075cc86053954d84072f8acaaf9fc5"}, "downloads": -1, "filename": "botorch-0.2.2.tar.gz", "has_sig": false, "md5_digest": "0f89fcc9e24ef2e76153ae7103df0c5d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 153846, "upload_time": "2020-03-09T17:00:52", "upload_time_iso_8601": "2020-03-09T17:00:52.588511Z", "url": "https://files.pythonhosted.org/packages/f7/ec/cf5520a32ccb59b1923c5737362723aa9d1131033e7e56711820eb6c2a1c/botorch-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "109e092e50430d9da38f1ee652f68bd0", "sha256": "131161e7ad8a6794374817f6daadc4643f3b194e1febb4eb329fa3e5be4c679a"}, "downloads": -1, "filename": "botorch-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "109e092e50430d9da38f1ee652f68bd0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 259174, "upload_time": "2020-04-26T18:34:40", "upload_time_iso_8601": "2020-04-26T18:34:40.597747Z", "url": "https://files.pythonhosted.org/packages/f6/1f/cb3ce37a0746f589a30a83045157622769fb033117fec60261901e659cc2/botorch-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "446571109401bd5391683a47eb687489", "sha256": "8ba079604e12907822cf4fc439cab9cf3eaed574a7c2bbb6708e8147d0e60eeb"}, "downloads": -1, "filename": "botorch-0.2.3.tar.gz", "has_sig": false, "md5_digest": "446571109401bd5391683a47eb687489", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 176121, "upload_time": "2020-04-26T18:34:42", "upload_time_iso_8601": "2020-04-26T18:34:42.170370Z", "url": "https://files.pythonhosted.org/packages/53/37/3616ba5aff17a85e426d2710529ff77be171df001400f357df895e2d3177/botorch-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "109e092e50430d9da38f1ee652f68bd0", "sha256": "131161e7ad8a6794374817f6daadc4643f3b194e1febb4eb329fa3e5be4c679a"}, "downloads": -1, "filename": "botorch-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "109e092e50430d9da38f1ee652f68bd0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 259174, "upload_time": "2020-04-26T18:34:40", "upload_time_iso_8601": "2020-04-26T18:34:40.597747Z", "url": "https://files.pythonhosted.org/packages/f6/1f/cb3ce37a0746f589a30a83045157622769fb033117fec60261901e659cc2/botorch-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "446571109401bd5391683a47eb687489", "sha256": "8ba079604e12907822cf4fc439cab9cf3eaed574a7c2bbb6708e8147d0e60eeb"}, "downloads": -1, "filename": "botorch-0.2.3.tar.gz", "has_sig": false, "md5_digest": "446571109401bd5391683a47eb687489", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 176121, "upload_time": "2020-04-26T18:34:42", "upload_time_iso_8601": "2020-04-26T18:34:42.170370Z", "url": "https://files.pythonhosted.org/packages/53/37/3616ba5aff17a85e426d2710529ff77be171df001400f357df895e2d3177/botorch-0.2.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:35 2020"}