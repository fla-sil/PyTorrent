{"info": {"author": "Lane", "author_email": "GeekerLane@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# aliyun-table\n\n\u963f\u91cc\u4e91\u8868\u683c\u76f8\u5173\u64cd\u4f5c\n\n\u76ee\u524d\u652f\u6301\uff1a\n\n\n[ ] \u67e5\u8be2\u5168\u90e8\u6570\u636e\n\n[x] \u8868\u683c\u67e5\u8be2\uff1a\u77ed\u8bed\u67e5\u8be2\uff0c\u524d\u7f00\u5339\u914d\u67e5\u8be2\uff0c\u7cbe\u51c6\u67e5\u8be2\uff0c\u8303\u56f4\u67e5\u8be2\n\n[x] \u63d2\u5165\u6570\u636e\n\n[x] \u66f4\u65b0\u6570\u636e\n\n\n\n\u5df2\u77e5bug:\n\n\n[ ] \u67e5\u8be2\u8d85\u8fc7100\u6761\u65f6\uff0c\u4e0d\u52a0\u6392\u5e8f\u53ef\u80fd\u5bfc\u81f4\u67e5\u8be2\u65e0\u6cd5\u7ffb\u9875.\n\n\n# CHANGELOG\n\n\nv0.1.2 (2020-03-19)\n\n- \u73b0\u5728```put_row```\u548c```update_row```\u4f1a\u4ee5\u5b57\u5178\u5f62\u5f0f\u8fd4\u56de\u4e3b\u952e\u4fe1\u606f.\n\n\n\n## \u5b89\u88c5\n\n```bash\npip install --upgrade aliyun-table\n```\n\n\n\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u5728\u4ea4\u4e92\u754c\u9762\u6267\u884c\uff1a\n\n\n```python\n>>> from aliyun_table import TableClient\n>>>\n```\n\n\u5982\u679c\u6ca1\u6709\u62a5\u9519\uff0c\u8bf4\u660e\u5b89\u88c5\u6210\u529f\n\n\n### \u521d\u59cb\u5316\n\n\u4ee5\u4e0b\u53d8\u91cf\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u73af\u5883\u53d8\u91cf\n\n```OTS_END_POINT```\n\n```OTS_ACCESS_KEY_ID```\n\n```OTS_ACCESS_KEY_SECRET```\n\n\n```python\nfrom aliyun_table import TableClient\ntable_cli = TableClient()\n```\n\n\n\n### \u63d2\u5165\u6570\u636e\u548c\u66f4\u65b0\u6570\u636e\n\n```python\n\ntable_cli = TableClient(instance_name='\u5b9e\u4f8b\u540d',\n                        end_point='endpoint',\n                        access_key_id='access_key_secret', \n                        access_key_secret='access_key_secret'):\ndata = {\n    'pk1': '123',\n    # pk2\u4e3a\u81ea\u589e\u5217\uff0c\u9700\u8981\u4f20None.\n    'pk2': None,\n    'col1': 'test'\n    'article': 'This is a test article.'\n}\npk_dict = table_cli.put_row(table_name='table_name', \n                       pk_list=['primary_key1', 'primary_key2'], \n                       data=data)\nprint(pk_dict)\n```\n\n### Reference\n\n```python\n\nclass TableClient(object):\n    def __init__(\n                 self,\n                 table_name,\n                 instance_name,\n                 end_point=None,\n                 access_key_id=None, \n                 access_key_secret=None):\n        ...\n\n    def show_index(self, index_name='filter'):\n        ...\n\n    def put_row(self, table_name, pk_list, data):\n        \"\"\"\n        \u5199\u5165\u6570\u636e,\u5199\u5165\u6210\u529f\u8fd4\u56de\u6d88\u8017cu.\n\n        :param pk_list [list]: primary key name list. e.g. ['pk1', 'pk2']\n        :param data [dict]: \u5305\u62ec\u4e3b\u952e\u5728\u5185\u7684\u6570\u636e\u5b57\u5178.\n        \"\"\"\n        ... \n\n    def update_row(self, pk_list, data):\n        \"\"\"\n        Update row\n\n        :param pk_list [list]: primary key name list. e.g. ['pk1', 'pk2']\n        :param data [dict]: \u5305\u62ec\u4e3b\u952e\u5728\u5185\u7684\u6570\u636e\u5b57\u5178.\n        \"\"\"\n        ...\n\n    def query(self, \n              table_name,\n              must_query_list=[], \n              must_not_query_list=[], \n              should_query_list=[], \n              get_total_count=False, \n              sort_list=None, \n              index_name='filter', \n              column_to_get=None, \n              limit=None):\n        \"\"\"\n        \u7b2c\u4e00\u4e2a\u7248\u672c\u7684and\u67e5\u8be2.\n        \u6839\u636e\u7528\u6237\u8f93\u5165\u7684\u67e5\u8be2\u6761\u4ef6\u6784\u9020\u963f\u91cc\u4e91\u67e5\u8be2.\n        :param must_query_list [list]: \u9700\u8981\u6ee1\u8db3\u7684\u67e5\u8be2\u6761\u4ef6\u5217\u8868, \u4e0d\u6307\u5b9a\u5219\u9ed8\u8ba4\u4e3a\u67e5\u8be2\u5168\u90e8\u6570\u636e\n        :param must_not_query_list [list]: \u4e0d\u67e5\u8be2\u7684\u6761\u4ef6\u5217\u8868\uff08\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\u7684\u6570\u636e\u4e0d\u67e5\u8be2\uff09\n        :param should_query_list [list]: \u4e0d\u67e5\u8be2\u7684\u6761\u4ef6\u5217\u8868\uff08\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\u7684\u6570\u636e\u4e0d\u67e5\u8be2\uff09\n        :param get_total_count [bool]: \u662f\u5426\u9700\u8981\u83b7\u53d6\u67e5\u8be2\u5230\u7684\u603b\u6570\u91cf\n        :param sort_list [list]: \u5217\u7684\u6392\u5e8f\u5217\u8868\uff0c\u683c\u5f0f\u4e3alist. \u9ed8\u8ba4\u4e0d\u6392\u5e8f\n        :param limit [int]: \u6700\u591a\u8fd4\u56de\u591a\u5c11\u6570\u91cf\u7684\u6570\u636e\n        :return: \u67e5\u8be2\u5230\u6570\u636e\u7684\u8fed\u4ee3\u5668\uff0c\u6bcf\u4e2a\u6570\u636e\u6839\u636eget_total_count\u7684\u53d6\u503c\u6709\u6240\u4e0d\u540c\n        ...\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/RunningIkkyu/aliyun-table", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aliyun-table", "package_url": "https://pypi.org/project/aliyun-table/", "platform": "", "project_url": "https://pypi.org/project/aliyun-table/", "project_urls": {"Homepage": "https://github.com/RunningIkkyu/aliyun-table"}, "release_url": "https://pypi.org/project/aliyun-table/0.1.2/", "requires_dist": ["pprint", "tablestore", "prettytable"], "requires_python": ">=3.6", "summary": "Aliyun Tablestore Operations, make aliyun tablestore more simple.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aliyun-table</h1>\n<p>\u963f\u91cc\u4e91\u8868\u683c\u76f8\u5173\u64cd\u4f5c</p>\n<p>\u76ee\u524d\u652f\u6301\uff1a</p>\n<p>[ ] \u67e5\u8be2\u5168\u90e8\u6570\u636e</p>\n<p>[x] \u8868\u683c\u67e5\u8be2\uff1a\u77ed\u8bed\u67e5\u8be2\uff0c\u524d\u7f00\u5339\u914d\u67e5\u8be2\uff0c\u7cbe\u51c6\u67e5\u8be2\uff0c\u8303\u56f4\u67e5\u8be2</p>\n<p>[x] \u63d2\u5165\u6570\u636e</p>\n<p>[x] \u66f4\u65b0\u6570\u636e</p>\n<p>\u5df2\u77e5bug:</p>\n<p>[ ] \u67e5\u8be2\u8d85\u8fc7100\u6761\u65f6\uff0c\u4e0d\u52a0\u6392\u5e8f\u53ef\u80fd\u5bfc\u81f4\u67e5\u8be2\u65e0\u6cd5\u7ffb\u9875.</p>\n<h1>CHANGELOG</h1>\n<p>v0.1.2 (2020-03-19)</p>\n<ul>\n<li>\u73b0\u5728<code>put_row</code>\u548c<code>update_row</code>\u4f1a\u4ee5\u5b57\u5178\u5f62\u5f0f\u8fd4\u56de\u4e3b\u952e\u4fe1\u606f.</li>\n</ul>\n<h2>\u5b89\u88c5</h2>\n<pre>pip install --upgrade aliyun-table\n</pre>\n<p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u5728\u4ea4\u4e92\u754c\u9762\u6267\u884c\uff1a</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">aliyun_table</span> <span class=\"kn\">import</span> <span class=\"n\">TableClient</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n<p>\u5982\u679c\u6ca1\u6709\u62a5\u9519\uff0c\u8bf4\u660e\u5b89\u88c5\u6210\u529f</p>\n<h3>\u521d\u59cb\u5316</h3>\n<p>\u4ee5\u4e0b\u53d8\u91cf\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u73af\u5883\u53d8\u91cf</p>\n<p><code>OTS_END_POINT</code></p>\n<p><code>OTS_ACCESS_KEY_ID</code></p>\n<p><code>OTS_ACCESS_KEY_SECRET</code></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aliyun_table</span> <span class=\"kn\">import</span> <span class=\"n\">TableClient</span>\n<span class=\"n\">table_cli</span> <span class=\"o\">=</span> <span class=\"n\">TableClient</span><span class=\"p\">()</span>\n</pre>\n<h3>\u63d2\u5165\u6570\u636e\u548c\u66f4\u65b0\u6570\u636e</h3>\n<pre><span class=\"n\">table_cli</span> <span class=\"o\">=</span> <span class=\"n\">TableClient</span><span class=\"p\">(</span><span class=\"n\">instance_name</span><span class=\"o\">=</span><span class=\"s1\">'\u5b9e\u4f8b\u540d'</span><span class=\"p\">,</span>\n                        <span class=\"n\">end_point</span><span class=\"o\">=</span><span class=\"s1\">'endpoint'</span><span class=\"p\">,</span>\n                        <span class=\"n\">access_key_id</span><span class=\"o\">=</span><span class=\"s1\">'access_key_secret'</span><span class=\"p\">,</span> \n                        <span class=\"n\">access_key_secret</span><span class=\"o\">=</span><span class=\"s1\">'access_key_secret'</span><span class=\"p\">):</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'pk1'</span><span class=\"p\">:</span> <span class=\"s1\">'123'</span><span class=\"p\">,</span>\n    <span class=\"c1\"># pk2\u4e3a\u81ea\u589e\u5217\uff0c\u9700\u8981\u4f20None.</span>\n    <span class=\"s1\">'pk2'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"s1\">'col1'</span><span class=\"p\">:</span> <span class=\"s1\">'test'</span>\n    <span class=\"s1\">'article'</span><span class=\"p\">:</span> <span class=\"s1\">'This is a test article.'</span>\n<span class=\"p\">}</span>\n<span class=\"n\">pk_dict</span> <span class=\"o\">=</span> <span class=\"n\">table_cli</span><span class=\"o\">.</span><span class=\"n\">put_row</span><span class=\"p\">(</span><span class=\"n\">table_name</span><span class=\"o\">=</span><span class=\"s1\">'table_name'</span><span class=\"p\">,</span> \n                       <span class=\"n\">pk_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'primary_key1'</span><span class=\"p\">,</span> <span class=\"s1\">'primary_key2'</span><span class=\"p\">],</span> \n                       <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pk_dict</span><span class=\"p\">)</span>\n</pre>\n<h3>Reference</h3>\n<pre><span class=\"k\">class</span> <span class=\"nc\">TableClient</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n                 <span class=\"bp\">self</span><span class=\"p\">,</span>\n                 <span class=\"n\">table_name</span><span class=\"p\">,</span>\n                 <span class=\"n\">instance_name</span><span class=\"p\">,</span>\n                 <span class=\"n\">end_point</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">access_key_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> \n                 <span class=\"n\">access_key_secret</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">show_index</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">index_name</span><span class=\"o\">=</span><span class=\"s1\">'filter'</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">put_row</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">table_name</span><span class=\"p\">,</span> <span class=\"n\">pk_list</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        \u5199\u5165\u6570\u636e,\u5199\u5165\u6210\u529f\u8fd4\u56de\u6d88\u8017cu.</span>\n\n<span class=\"sd\">        :param pk_list [list]: primary key name list. e.g. ['pk1', 'pk2']</span>\n<span class=\"sd\">        :param data [dict]: \u5305\u62ec\u4e3b\u952e\u5728\u5185\u7684\u6570\u636e\u5b57\u5178.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"o\">...</span> \n\n    <span class=\"k\">def</span> <span class=\"nf\">update_row</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pk_list</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        Update row</span>\n\n<span class=\"sd\">        :param pk_list [list]: primary key name list. e.g. ['pk1', 'pk2']</span>\n<span class=\"sd\">        :param data [dict]: \u5305\u62ec\u4e3b\u952e\u5728\u5185\u7684\u6570\u636e\u5b57\u5178.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">query</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> \n              <span class=\"n\">table_name</span><span class=\"p\">,</span>\n              <span class=\"n\">must_query_list</span><span class=\"o\">=</span><span class=\"p\">[],</span> \n              <span class=\"n\">must_not_query_list</span><span class=\"o\">=</span><span class=\"p\">[],</span> \n              <span class=\"n\">should_query_list</span><span class=\"o\">=</span><span class=\"p\">[],</span> \n              <span class=\"n\">get_total_count</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> \n              <span class=\"n\">sort_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> \n              <span class=\"n\">index_name</span><span class=\"o\">=</span><span class=\"s1\">'filter'</span><span class=\"p\">,</span> \n              <span class=\"n\">column_to_get</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> \n              <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">        \u7b2c\u4e00\u4e2a\u7248\u672c\u7684and\u67e5\u8be2.</span>\n<span class=\"s2\">        \u6839\u636e\u7528\u6237\u8f93\u5165\u7684\u67e5\u8be2\u6761\u4ef6\u6784\u9020\u963f\u91cc\u4e91\u67e5\u8be2.</span>\n<span class=\"s2\">        :param must_query_list [list]: \u9700\u8981\u6ee1\u8db3\u7684\u67e5\u8be2\u6761\u4ef6\u5217\u8868, \u4e0d\u6307\u5b9a\u5219\u9ed8\u8ba4\u4e3a\u67e5\u8be2\u5168\u90e8\u6570\u636e</span>\n<span class=\"s2\">        :param must_not_query_list [list]: \u4e0d\u67e5\u8be2\u7684\u6761\u4ef6\u5217\u8868\uff08\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\u7684\u6570\u636e\u4e0d\u67e5\u8be2\uff09</span>\n<span class=\"s2\">        :param should_query_list [list]: \u4e0d\u67e5\u8be2\u7684\u6761\u4ef6\u5217\u8868\uff08\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\u7684\u6570\u636e\u4e0d\u67e5\u8be2\uff09</span>\n<span class=\"s2\">        :param get_total_count [bool]: \u662f\u5426\u9700\u8981\u83b7\u53d6\u67e5\u8be2\u5230\u7684\u603b\u6570\u91cf</span>\n<span class=\"s2\">        :param sort_list [list]: \u5217\u7684\u6392\u5e8f\u5217\u8868\uff0c\u683c\u5f0f\u4e3alist. \u9ed8\u8ba4\u4e0d\u6392\u5e8f</span>\n<span class=\"s2\">        :param limit [int]: \u6700\u591a\u8fd4\u56de\u591a\u5c11\u6570\u91cf\u7684\u6570\u636e</span>\n<span class=\"s2\">        :return: \u67e5\u8be2\u5230\u6570\u636e\u7684\u8fed\u4ee3\u5668\uff0c\u6bcf\u4e2a\u6570\u636e\u6839\u636eget_total_count\u7684\u53d6\u503c\u6709\u6240\u4e0d\u540c</span>\n<span class=\"s2\">        ...</span>\n</pre>\n\n          </div>"}, "last_serial": 6841558, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "5219edb9c02f765560dce9563807837a", "sha256": "3ddca5752b30f3cbc2718fd51559e1247b5d69b72b5da13a7bb936b003e2f02f"}, "downloads": -1, "filename": "aliyun_table-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5219edb9c02f765560dce9563807837a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10221, "upload_time": "2020-03-10T07:18:12", "upload_time_iso_8601": "2020-03-10T07:18:12.009404Z", "url": "https://files.pythonhosted.org/packages/4a/0b/54126cd317d9aa190deaf1e40269bd6f27e804267723667ad0b4103a112f/aliyun_table-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "853d78cc99cfa7351bd7cf357d7990a5", "sha256": "7a98977ee3cf1cd34a2d1323c8e677e6eff72adeb8eea387b6e92f2ec300cff3"}, "downloads": -1, "filename": "aliyun_table-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "853d78cc99cfa7351bd7cf357d7990a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10412, "upload_time": "2020-03-19T07:06:12", "upload_time_iso_8601": "2020-03-19T07:06:12.017948Z", "url": "https://files.pythonhosted.org/packages/65/36/4470ac418408e569c9063cad39d02d62622d04a0a2cc07263fec49bdfc96/aliyun_table-0.1.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "853d78cc99cfa7351bd7cf357d7990a5", "sha256": "7a98977ee3cf1cd34a2d1323c8e677e6eff72adeb8eea387b6e92f2ec300cff3"}, "downloads": -1, "filename": "aliyun_table-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "853d78cc99cfa7351bd7cf357d7990a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10412, "upload_time": "2020-03-19T07:06:12", "upload_time_iso_8601": "2020-03-19T07:06:12.017948Z", "url": "https://files.pythonhosted.org/packages/65/36/4470ac418408e569c9063cad39d02d62622d04a0a2cc07263fec49bdfc96/aliyun_table-0.1.2-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 16:19:34 2020"}