{"info": {"author": "makubob", "author_email": "makupi@icloud.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# async-fivem\nAsynchronous FiveM package for retrieving Player and Server infos utilizing the [aiohttp](https://docs.aiohttp.org/en/stable/) package.\n\n## Usage\n```python\nimport asyncio\nfrom fivem import FiveM\n\nip = \"127.0.0.1\"\nport = 30120\n\nasync def main():\n    fivem = FiveM(ip=ip, port=port)\n    # raw list of players like you get from /players.json\n    players = await fivem.get_players_raw()\n    # raw json of server-info like you get from /info.json\n    info = await fivem.get_info_raw()\n    # raw json of server-info like you get from /dynamic.json\n    dynamic = await fivem.get_dynamic_raw()\n    # parsed list of Player objects \n    players = await fivem.get_players()\n    # parsed Server object\n    server = await fivem.get_server_info()\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\n```\n\n## Api Reference\n\n### FiveM\n\n*class* FiveM(ip: *str*, port: *int*):\n- **await get_players_raw()** -> list: */players.json endpoint - raw list of players*\n- **await get_info_raw()** -> dict: */info.json endpoint - raw dict with server-info*\n- **await get_dynamic_raw()** -> dict: */dynamic.json endpoint - raw dict with server-info*\n- **await get_players()** -> [[Player](#Player)]: *returns parsed list of [Player](#Player) objects*\n- **await get_server_info()** -> [Server](#Server): *returns parsed server info [Server](#Server)*\n\n### Player\n*class* Player:\n- **name**: *player username*\n- **id**: *player id*\n- **ping**: *current player ping*\n- **xbl_id**: *xbl id, None if not available*\n- **steam_id**: *steam id, None if not available*\n- **discord_id**: *discord id, None if not available*\n- **live_id**: *live id, None if not available*\n- **license_id**: *license id, None if not available*\n\n### Server\n*class* Server:\n- **hostname**: *servers hostname*\n- **clients**: *current number of clients*\n- **max_clients**: *max clients allowed on server*\n- **game_type**: *servers game type*\n- **map_name**: *servers map name*\n\n# Requirements\n- Python >= 3.6\n- [aiohttp](https://docs.aiohttp.org/en/stable/)\n\n# Issues and Features\nIf you're having any issues or want additional features please create an Issue on [github](https://github.com/makupi/async-fivem/issues).\n\n[![ko-fi](https://www.ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/A0A015HXK)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/makupi/async-fivem", "keywords": "", "license": "GPL-3.0", "maintainer": "", "maintainer_email": "", "name": "async-fivem", "package_url": "https://pypi.org/project/async-fivem/", "platform": "", "project_url": "https://pypi.org/project/async-fivem/", "project_urls": {"Homepage": "https://github.com/makupi/async-fivem", "Repository": "https://github.com/makupi/async-fivem"}, "release_url": "https://pypi.org/project/async-fivem/1.0.2/", "requires_dist": ["aiohttp", "toml (>=0.10.0,<0.11.0)"], "requires_python": ">=3.6,<4.0", "summary": "Async API for FiveM endpoints", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>async-fivem</h1>\n<p>Asynchronous FiveM package for retrieving Player and Server infos utilizing the <a href=\"https://docs.aiohttp.org/en/stable/\" rel=\"nofollow\">aiohttp</a> package.</p>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fivem</span> <span class=\"kn\">import</span> <span class=\"n\">FiveM</span>\n\n<span class=\"n\">ip</span> <span class=\"o\">=</span> <span class=\"s2\">\"127.0.0.1\"</span>\n<span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"mi\">30120</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">fivem</span> <span class=\"o\">=</span> <span class=\"n\">FiveM</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"n\">ip</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"n\">port</span><span class=\"p\">)</span>\n    <span class=\"c1\"># raw list of players like you get from /players.json</span>\n    <span class=\"n\">players</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">fivem</span><span class=\"o\">.</span><span class=\"n\">get_players_raw</span><span class=\"p\">()</span>\n    <span class=\"c1\"># raw json of server-info like you get from /info.json</span>\n    <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">fivem</span><span class=\"o\">.</span><span class=\"n\">get_info_raw</span><span class=\"p\">()</span>\n    <span class=\"c1\"># raw json of server-info like you get from /dynamic.json</span>\n    <span class=\"n\">dynamic</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">fivem</span><span class=\"o\">.</span><span class=\"n\">get_dynamic_raw</span><span class=\"p\">()</span>\n    <span class=\"c1\"># parsed list of Player objects </span>\n    <span class=\"n\">players</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">fivem</span><span class=\"o\">.</span><span class=\"n\">get_players</span><span class=\"p\">()</span>\n    <span class=\"c1\"># parsed Server object</span>\n    <span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">fivem</span><span class=\"o\">.</span><span class=\"n\">get_server_info</span><span class=\"p\">()</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<h2>Api Reference</h2>\n<h3>FiveM</h3>\n<p><em>class</em> FiveM(ip: <em>str</em>, port: <em>int</em>):</p>\n<ul>\n<li><strong>await get_players_raw()</strong> -&gt; list: <em>/players.json endpoint - raw list of players</em></li>\n<li><strong>await get_info_raw()</strong> -&gt; dict: <em>/info.json endpoint - raw dict with server-info</em></li>\n<li><strong>await get_dynamic_raw()</strong> -&gt; dict: <em>/dynamic.json endpoint - raw dict with server-info</em></li>\n<li><strong>await get_players()</strong> -&gt; [<a href=\"#Player\" rel=\"nofollow\">Player</a>]: <em>returns parsed list of <a href=\"#Player\" rel=\"nofollow\">Player</a> objects</em></li>\n<li><strong>await get_server_info()</strong> -&gt; <a href=\"#Server\" rel=\"nofollow\">Server</a>: <em>returns parsed server info <a href=\"#Server\" rel=\"nofollow\">Server</a></em></li>\n</ul>\n<h3>Player</h3>\n<p><em>class</em> Player:</p>\n<ul>\n<li><strong>name</strong>: <em>player username</em></li>\n<li><strong>id</strong>: <em>player id</em></li>\n<li><strong>ping</strong>: <em>current player ping</em></li>\n<li><strong>xbl_id</strong>: <em>xbl id, None if not available</em></li>\n<li><strong>steam_id</strong>: <em>steam id, None if not available</em></li>\n<li><strong>discord_id</strong>: <em>discord id, None if not available</em></li>\n<li><strong>live_id</strong>: <em>live id, None if not available</em></li>\n<li><strong>license_id</strong>: <em>license id, None if not available</em></li>\n</ul>\n<h3>Server</h3>\n<p><em>class</em> Server:</p>\n<ul>\n<li><strong>hostname</strong>: <em>servers hostname</em></li>\n<li><strong>clients</strong>: <em>current number of clients</em></li>\n<li><strong>max_clients</strong>: <em>max clients allowed on server</em></li>\n<li><strong>game_type</strong>: <em>servers game type</em></li>\n<li><strong>map_name</strong>: <em>servers map name</em></li>\n</ul>\n<h1>Requirements</h1>\n<ul>\n<li>Python &gt;= 3.6</li>\n<li><a href=\"https://docs.aiohttp.org/en/stable/\" rel=\"nofollow\">aiohttp</a></li>\n</ul>\n<h1>Issues and Features</h1>\n<p>If you're having any issues or want additional features please create an Issue on <a href=\"https://github.com/makupi/async-fivem/issues\" rel=\"nofollow\">github</a>.</p>\n<p><a href=\"https://ko-fi.com/A0A015HXK\" rel=\"nofollow\"><img alt=\"ko-fi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/739b1f359fc797305c21d85dbf65d00930070b1e/68747470733a2f2f7777772e6b6f2d66692e636f6d2f696d672f676974687562627574746f6e5f736d2e737667\"></a></p>\n\n          </div>"}, "last_serial": 7115512, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "8b92ee2cc54bd9ea65f27541dc894f67", "sha256": "8f14f24363adf91356b22b8308f245416d5594ecce77273af3a6d4d34474644c"}, "downloads": -1, "filename": "async_fivem-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8b92ee2cc54bd9ea65f27541dc894f67", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 15203, "upload_time": "2020-04-27T21:28:08", "upload_time_iso_8601": "2020-04-27T21:28:08.722522Z", "url": "https://files.pythonhosted.org/packages/39/dc/56579ff452733b0cf33ca48385f5e7ee57047f398b02eca4a804e08596a8/async_fivem-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8684d5685de3c1baaf8c27e4345f6c93", "sha256": "e50d9381d2544c3d8993fe3c9a5555c7987f12cd9520e04e15505cf940a0ac26"}, "downloads": -1, "filename": "async-fivem-1.0.0.tar.gz", "has_sig": false, "md5_digest": "8684d5685de3c1baaf8c27e4345f6c93", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 14575, "upload_time": "2020-04-27T21:28:06", "upload_time_iso_8601": "2020-04-27T21:28:06.669930Z", "url": "https://files.pythonhosted.org/packages/d0/6e/c1a2d1933a42970de46afd651b0c566c77d01dc9271a8eb8d3f5387e9e62/async-fivem-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "b697a8ea68dfb4602003b0daa4c029a8", "sha256": "5f8e219b0b7bdbbf5cd786697ff94f7594b84ab80844bc8408e59739ab198a1f"}, "downloads": -1, "filename": "async_fivem-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b697a8ea68dfb4602003b0daa4c029a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 16079, "upload_time": "2020-04-27T21:32:29", "upload_time_iso_8601": "2020-04-27T21:32:29.181113Z", "url": "https://files.pythonhosted.org/packages/23/cc/f8f33d123b95bb903504dee9e2c2936b8d2489d63b74e9567d06e61b2116/async_fivem-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a0f743141eb18f42def48409def3524", "sha256": "2ea4b904027c79ef8e6561ebfa5aac8e70e9f300d0a871fa19ed3d03d05383c7"}, "downloads": -1, "filename": "async-fivem-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6a0f743141eb18f42def48409def3524", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 15982, "upload_time": "2020-04-27T21:32:28", "upload_time_iso_8601": "2020-04-27T21:32:28.127780Z", "url": "https://files.pythonhosted.org/packages/53/35/2c0eac117e630c06fae3ea64855bdba403dd229940501b8a7e463dc60613/async-fivem-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "9bca4efba4cb9d9676c947974af47151", "sha256": "b832f210cd17a22b562591dfb17c4d1268cb92c0336ac803825465c8bd5d691f"}, "downloads": -1, "filename": "async_fivem-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9bca4efba4cb9d9676c947974af47151", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 16085, "upload_time": "2020-04-27T21:59:47", "upload_time_iso_8601": "2020-04-27T21:59:47.078370Z", "url": "https://files.pythonhosted.org/packages/2b/44/0ef76760a95acf6257b79f5b04cbbee305bbfff2098b2fb234e6f4350fe8/async_fivem-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7886bc9502cb413c50f0188800e8fcc4", "sha256": "77877a1e98057752c50c2fbe65fb2ab95c31d258ce59c481a00b961c4b1fd359"}, "downloads": -1, "filename": "async-fivem-1.0.2.tar.gz", "has_sig": false, "md5_digest": "7886bc9502cb413c50f0188800e8fcc4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 15993, "upload_time": "2020-04-27T21:59:45", "upload_time_iso_8601": "2020-04-27T21:59:45.655756Z", "url": "https://files.pythonhosted.org/packages/93/df/fe6e7fcb074fbf0e12d651da122fa2dbaf22beaf4315776aa63f4500d7e9/async-fivem-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9bca4efba4cb9d9676c947974af47151", "sha256": "b832f210cd17a22b562591dfb17c4d1268cb92c0336ac803825465c8bd5d691f"}, "downloads": -1, "filename": "async_fivem-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9bca4efba4cb9d9676c947974af47151", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 16085, "upload_time": "2020-04-27T21:59:47", "upload_time_iso_8601": "2020-04-27T21:59:47.078370Z", "url": "https://files.pythonhosted.org/packages/2b/44/0ef76760a95acf6257b79f5b04cbbee305bbfff2098b2fb234e6f4350fe8/async_fivem-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7886bc9502cb413c50f0188800e8fcc4", "sha256": "77877a1e98057752c50c2fbe65fb2ab95c31d258ce59c481a00b961c4b1fd359"}, "downloads": -1, "filename": "async-fivem-1.0.2.tar.gz", "has_sig": false, "md5_digest": "7886bc9502cb413c50f0188800e8fcc4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 15993, "upload_time": "2020-04-27T21:59:45", "upload_time_iso_8601": "2020-04-27T21:59:45.655756Z", "url": "https://files.pythonhosted.org/packages/93/df/fe6e7fcb074fbf0e12d651da122fa2dbaf22beaf4315776aa63f4500d7e9/async-fivem-1.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:45 2020"}