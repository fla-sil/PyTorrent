{"info": {"author": "Jelle Smet", "author_email": "development@smetj.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: PyPy"], "description": "::\n\n              __       __    __\n    .--.--.--|__.-----|  |--|  |--.-----.-----.-----.\n    |  |  |  |  |__ --|     |  _  |  _  |     |  -__|\n    |________|__|_____|__|__|_____|_____|__|__|_____|\n                                       version 2.1.2\n\n    Build composable event pipeline servers with minimal effort.\n\n\n\n    ========================\n    wishbone.output.zmqtopic\n    ========================\n\n    Version: 1.0.0\n\n    Publishes data to one or more ZeroMQ Topic subscribe modules.\n    -------------------------------------------------------------\n\n\n        Expects wishbone.input.topic modules to take the initiative and connect to\n        this module.  The clients subscribe to a topic of interest.  When multiple\n        subscribers subscriber to the same topic, they will all receive the same\n        messages resulting into a fanout messaging pattern.\n\n        Parameters:\n\n            - selection(str)(\"@data\")\n               |  The part of the event to submit externally.\n               |  Use an empty string to refer to the complete event\n\n            - port(int)(19283)\n               |  The port to bind to.\n\n            - timeout(int)(1)\n               |  The time in seconds to timeout when connecting.\n\n            - topic(str)(\"\")*\n               |  The default topic to use when none is set in the header.\n\n\n        Queues:\n\n            - inbox\n               |  Incoming events submitted to the outside.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/smetj/wishbone-output-zmqtopic/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/smetj/wishbone-output-zmqtopic", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "wishbone_output_zmqtopic", "package_url": "https://pypi.org/project/wishbone_output_zmqtopic/", "platform": "Linux", "project_url": "https://pypi.org/project/wishbone_output_zmqtopic/", "project_urls": {"Download": "https://github.com/smetj/wishbone-output-zmqtopic/tarball/master", "Homepage": "https://github.com/smetj/wishbone-output-zmqtopic"}, "release_url": "https://pypi.org/project/wishbone_output_zmqtopic/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "A Wishbone output module to push events to one or more ZeroMQ topic subscriber sockets", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <pre>          __       __    __\n.--.--.--|__.-----|  |--|  |--.-----.-----.-----.\n|  |  |  |  |__ --|     |  _  |  _  |     |  -__|\n|________|__|_____|__|__|_____|_____|__|__|_____|\n                                   version 2.1.2\n\nBuild composable event pipeline servers with minimal effort.\n\n\n\n========================\nwishbone.output.zmqtopic\n========================\n\nVersion: 1.0.0\n\nPublishes data to one or more ZeroMQ Topic subscribe modules.\n-------------------------------------------------------------\n\n\n    Expects wishbone.input.topic modules to take the initiative and connect to\n    this module.  The clients subscribe to a topic of interest.  When multiple\n    subscribers subscriber to the same topic, they will all receive the same\n    messages resulting into a fanout messaging pattern.\n\n    Parameters:\n\n        - selection(str)(\"@data\")\n           |  The part of the event to submit externally.\n           |  Use an empty string to refer to the complete event\n\n        - port(int)(19283)\n           |  The port to bind to.\n\n        - timeout(int)(1)\n           |  The time in seconds to timeout when connecting.\n\n        - topic(str)(\"\")*\n           |  The default topic to use when none is set in the header.\n\n\n    Queues:\n\n        - inbox\n           |  Incoming events submitted to the outside.\n</pre>\n\n          </div>"}, "last_serial": 2031914, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "a17b9488de37a1ff88afbfac05ad8c5a", "sha256": "fecaf4545c471cc7ddfa6a04951796cde807bbce4c67474972418a93bbe7ad6a"}, "downloads": -1, "filename": "wishbone_output_zmqtopic-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a17b9488de37a1ff88afbfac05ad8c5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3243, "upload_time": "2016-03-28T15:57:53", "upload_time_iso_8601": "2016-03-28T15:57:53.295498Z", "url": "https://files.pythonhosted.org/packages/4e/04/15148c181d7dc773263778473f00ffd90d103e8216a32b7782e5edf3122f/wishbone_output_zmqtopic-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a17b9488de37a1ff88afbfac05ad8c5a", "sha256": "fecaf4545c471cc7ddfa6a04951796cde807bbce4c67474972418a93bbe7ad6a"}, "downloads": -1, "filename": "wishbone_output_zmqtopic-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a17b9488de37a1ff88afbfac05ad8c5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3243, "upload_time": "2016-03-28T15:57:53", "upload_time_iso_8601": "2016-03-28T15:57:53.295498Z", "url": "https://files.pythonhosted.org/packages/4e/04/15148c181d7dc773263778473f00ffd90d103e8216a32b7782e5edf3122f/wishbone_output_zmqtopic-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:28:36 2020"}