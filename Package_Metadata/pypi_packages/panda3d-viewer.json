{"info": {"author": "Igor Kalevatykh", "author_email": "kalevatykhia@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Scientific/Engineering"], "description": "# panda3d_viewer\nA simple 3D geometry viewer based on [Panda3D](https://github.com/panda3d/panda3d) game engine.\n\n## Install\n\n### Using pip\n\n```bash\npip install panda3d_viewer\n```\n\n### From source code\n\n```bash\ngit clone https://github.com/ikalevatykh/panda3d_viewer.git\ncd panda3d_viewer\npython setup.py install\n```\n\n## Examples\n\n### A simple scene in a GUI window\n\n![Box and sphere](/images/box_and_sphere.png?raw=true \"Box and sphere\")\n\n```python\nfrom panda3d_viewer import Viewer, ViewerConfig\n\nconfig = ViewerConfig()\nconfig.set_window_size(320, 240)\nconfig.enable_antialiasing(True, multisamples=4)\n\nviewer = Viewer(window_type='onscreen', window_title='example', config=config)\n\nviewer.append_group('root')\nviewer.append_box('root', 'box_node', size=(1, 1, 1))\nviewer.append_sphere('root', 'sphere_node', radius=0.5)\n\nviewer.set_material('root', 'box_node', color_rgba=(0.7, 0.1, 0.1, 1))\nviewer.set_material('root', 'sphere_node', color_rgba=(0.1, 0.7, 0.1, 1))\n\nviewer.move_nodes('root', {\n    'box_node': ((0, 0, 0.5), (1, 0, 0, 0)),\n    'sphere_node': ((0, 0, 1.5), (1, 0, 0, 0))})\n\nviewer.reset_camera(pos=(4, 4, 2), look_at=(0, 0, 1))\nviewer.save_screenshot(filename='box_and_sphere.png')\n\nviewer.join() # wait until user close the window\n```\n\n### Render an animation offscreen\n\n![Sphere animation](/images/sphere_anim.gif?raw=true \"Sphere animation\")\n\n```python\nfrom math import cos, sin, pi\nimport imageio # install imageio: pip install imageio\n\nfrom panda3d_viewer import Viewer, ViewerConfig\n\nconfig = ViewerConfig()\nconfig.set_window_size(320, 240)\nconfig.enable_antialiasing(True, multisamples=4)\nconfig.enable_shadow(True)\nconfig.show_axes(False)\nconfig.show_grid(False)\nconfig.show_floor(True)\n\nviewer = Viewer(window_type='offscreen', config=config)\n\nviewer.append_group('root')\nviewer.append_sphere('root', 'sphere_node', radius=0.5)\nviewer.set_material('root', 'sphere_node', color_rgba=(0.1, 0.7, 0.1, 1))\n\nwith imageio.get_writer('sphere_anim.gif', mode='I') as writer:\n    for i in range(50):\n        angle = 2 * pi * i / 50\n        x = 4 * cos(angle)\n        y = 4 * sin(angle)\n        z = 0.5 + 0.5 * abs(sin(angle))\n\n        viewer.move_nodes('root', {'sphere_node': ((0, 0, z), (1, 0, 0, 0))})\n        viewer.reset_camera(pos=(x, y, 2), look_at=(0, 0, 1))\n\n        image_rgb = viewer.get_screenshot(requested_format='RGB')\n        writer.append_data(image_rgb)\n```\n\n### Using with Pinocchio\n\n![Pinocchio robots](/images/pinocchio.png?raw=true \"Pinocchio robots\")\n\n[Pinocchio](https://github.com/stack-of-tasks/pinocchio/) is a library for rigid multi-body dynamics computation. To see how to use this package with Pinocchio see [example 1](https://github.com/stack-of-tasks/pinocchio/examples/panda3d-viewer.py), [example 2](https://github.com/stack-of-tasks/pinocchio/examples/panda3d-viewer-play.py).\n\n## API\n\n### Viewer\n\nThis package contains `Viewer`, a thin wrapper on top of [Panda3D ShowBase](https://docs.panda3d.org/1.10/python/reference/direct.showbase.ShowBase), an application framework responsible for opening a graphical display, setting up input devices and creating the scene graph.\n\n`Viewer` constructor takes `window_type` parameter wich should be one of `'onscreen'`, `'offscreen'`. When selected `'onscreen'` the viewer open a GUI window. When selected `'offscreen'` the viewer render to an offscreen buffer. \n\nOptional `config` parameter allows manage the viewer appearance. Configuration provided by `ViewerConfig` class, which contains methods:\n\n- `set_window_size` set window size (default: 800x600)\n- `set_window_fixed` disable window resizing (default: on)\n- `enable_antialiasing` turn antialiasing on or off and specify number of MSAA multisamples: 2,4,8,16 (default: off)\n- `enable_lights` turn lighting on or off (default: on)\n- `enable_shadow` turn shadows rendering on or off (default: off)\n- `enable_hdr` turn HDR effect on or off (default: off)\n- `enable_fog` turn fog rendering on or off (default: off)\n- `show_axes` turn the axes rendering on or off (default: on)\n- `show_grid` turn the grid rendering on or off (default: on)\n- `show_floor` turn the floor plane rendering on or off (default: off)\n\nTo stop the viewer use `stop` method. Use `join` method to wait until a user close the window.\n\n### Managing 3D scene\n\nAll scene geometries organized in named groups. Each group contains arbitrary number of nodes. To manage the groups use `append_group` and `remove_group`. To hide or show all geometries inside a group use `show_group`.\n\nTo append a mesh node to a group use `append_mesh`, to append a primitive geometry node use `append_capsule`, `append_cylinder`, `append_box`, `append_plane`, `append_sphere`. To modify material of a node use `set_material`.\n\nTo specify nodes position in the space use `move_nodes` function. It takes a dictionary with `node_name` - `position, quaternion` pairs, so you can specify the position of all/any nodes in a group simultaneously.\n\n### Render to file or memory buffer\n\nTo capture an image and save it on the disk use `save_screenshot`. Specify path to the image file with extention in a `filename` parameter. If the `filename` is ommited it will be generated automatically based on the current date time.\n\nTo capture an image to a memory buffer use `get_screenshot`. Specify the color channels order in `requested_format` parameter. Default format is BGRA, allow any combinations of R,G,B,A channels. The function returns an image as a numpy array.\n\n### Scene appearance\n\nTo move the camera use `reset_camera` method which takes the desired camera position and target point.\n\nViewer provide several methods to manage visual appearance:\n- `set_background_color` change background color\n- `enable_lights` turn lighting on or off\n- `enable_shadow` turn shadows rendering on or off\n- `enable_hdr` turn HDR effect on or off\n- `enable_fog` turn fog rendering on or off\n- `show_axes` turn the axes rendering on or off\n- `show_grid` turn the grid rendering on or off\n- `show_floor` turn the floor plane rendering on or off\n\n## Window control\n\nKeyboard shortcuts:\n- Show help:\t**F1**, **h**\n- Quit window:\t**Escape**, **q**\n- Screenshot:\t**Space**\n- Toggle axes:\t**a**\n- Toggle HDR:\t**d**\n- Toggle grid:\t**g**\n- Toggle fps meter:\t**f**\n- Toggle lighting:\t**l**\n- Toggle fog:\t**o**\n- Toggle plane:\t**p**\n- Reset camera:\t**r**\n- Toggle shadows:\t**s**\n- Toggle texture:\t**t**\n- Toggle wireframe:\t**w**\n\nMouse control:\n- Move:\t**LMB**\n- Scale:\t**RMB**, **Ctrl+LMB**\n- Rotate:\t**LMB+RMB**, **Alt+LMB**\n- Tilt:\t**Alt+Ctrl+LMB**\n\n## License\n\npanda3d_viewer is licensed under the MIT License - see the LICENSE file for details\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ikalevatykh/panda3d_viewer", "keywords": "rendering graphics 3d visualization", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "panda3d-viewer", "package_url": "https://pypi.org/project/panda3d-viewer/", "platform": "", "project_url": "https://pypi.org/project/panda3d-viewer/", "project_urls": {"Homepage": "https://github.com/ikalevatykh/panda3d_viewer"}, "release_url": "https://pypi.org/project/panda3d-viewer/0.2.0/", "requires_dist": ["numpy", "panda3d (>=1.10)"], "requires_python": "", "summary": "Easy-to-use python 3D graphics viewer", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>panda3d_viewer</h1>\n<p>A simple 3D geometry viewer based on <a href=\"https://github.com/panda3d/panda3d\" rel=\"nofollow\">Panda3D</a> game engine.</p>\n<h2>Install</h2>\n<h3>Using pip</h3>\n<pre>pip install panda3d_viewer\n</pre>\n<h3>From source code</h3>\n<pre>git clone https://github.com/ikalevatykh/panda3d_viewer.git\n<span class=\"nb\">cd</span> panda3d_viewer\npython setup.py install\n</pre>\n<h2>Examples</h2>\n<h3>A simple scene in a GUI window</h3>\n<p><img alt=\"Box and sphere\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b45468f95c3aaab1931261eab76a8c87fa210ddd/2f696d616765732f626f785f616e645f7370686572652e706e673f7261773d74727565\"></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">panda3d_viewer</span> <span class=\"kn\">import</span> <span class=\"n\">Viewer</span><span class=\"p\">,</span> <span class=\"n\">ViewerConfig</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">ViewerConfig</span><span class=\"p\">()</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">set_window_size</span><span class=\"p\">(</span><span class=\"mi\">320</span><span class=\"p\">,</span> <span class=\"mi\">240</span><span class=\"p\">)</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">enable_antialiasing</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">multisamples</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n\n<span class=\"n\">viewer</span> <span class=\"o\">=</span> <span class=\"n\">Viewer</span><span class=\"p\">(</span><span class=\"n\">window_type</span><span class=\"o\">=</span><span class=\"s1\">'onscreen'</span><span class=\"p\">,</span> <span class=\"n\">window_title</span><span class=\"o\">=</span><span class=\"s1\">'example'</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">)</span>\n\n<span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">append_group</span><span class=\"p\">(</span><span class=\"s1\">'root'</span><span class=\"p\">)</span>\n<span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">append_box</span><span class=\"p\">(</span><span class=\"s1\">'root'</span><span class=\"p\">,</span> <span class=\"s1\">'box_node'</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">append_sphere</span><span class=\"p\">(</span><span class=\"s1\">'root'</span><span class=\"p\">,</span> <span class=\"s1\">'sphere_node'</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n\n<span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">set_material</span><span class=\"p\">(</span><span class=\"s1\">'root'</span><span class=\"p\">,</span> <span class=\"s1\">'box_node'</span><span class=\"p\">,</span> <span class=\"n\">color_rgba</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">set_material</span><span class=\"p\">(</span><span class=\"s1\">'root'</span><span class=\"p\">,</span> <span class=\"s1\">'sphere_node'</span><span class=\"p\">,</span> <span class=\"n\">color_rgba</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n\n<span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">move_nodes</span><span class=\"p\">(</span><span class=\"s1\">'root'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'box_node'</span><span class=\"p\">:</span> <span class=\"p\">((</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)),</span>\n    <span class=\"s1\">'sphere_node'</span><span class=\"p\">:</span> <span class=\"p\">((</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">1.5</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))})</span>\n\n<span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">reset_camera</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">look_at</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">save_screenshot</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'box_and_sphere.png'</span><span class=\"p\">)</span>\n\n<span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">()</span> <span class=\"c1\"># wait until user close the window</span>\n</pre>\n<h3>Render an animation offscreen</h3>\n<p><img alt=\"Sphere animation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e1313463f061fb4276650be6027716dbdb479f34/2f696d616765732f7370686572655f616e696d2e6769663f7261773d74727565\"></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">math</span> <span class=\"kn\">import</span> <span class=\"n\">cos</span><span class=\"p\">,</span> <span class=\"n\">sin</span><span class=\"p\">,</span> <span class=\"n\">pi</span>\n<span class=\"kn\">import</span> <span class=\"nn\">imageio</span> <span class=\"c1\"># install imageio: pip install imageio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">panda3d_viewer</span> <span class=\"kn\">import</span> <span class=\"n\">Viewer</span><span class=\"p\">,</span> <span class=\"n\">ViewerConfig</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">ViewerConfig</span><span class=\"p\">()</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">set_window_size</span><span class=\"p\">(</span><span class=\"mi\">320</span><span class=\"p\">,</span> <span class=\"mi\">240</span><span class=\"p\">)</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">enable_antialiasing</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">multisamples</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">enable_shadow</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">show_axes</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">show_grid</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">show_floor</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">viewer</span> <span class=\"o\">=</span> <span class=\"n\">Viewer</span><span class=\"p\">(</span><span class=\"n\">window_type</span><span class=\"o\">=</span><span class=\"s1\">'offscreen'</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">)</span>\n\n<span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">append_group</span><span class=\"p\">(</span><span class=\"s1\">'root'</span><span class=\"p\">)</span>\n<span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">append_sphere</span><span class=\"p\">(</span><span class=\"s1\">'root'</span><span class=\"p\">,</span> <span class=\"s1\">'sphere_node'</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">set_material</span><span class=\"p\">(</span><span class=\"s1\">'root'</span><span class=\"p\">,</span> <span class=\"s1\">'sphere_node'</span><span class=\"p\">,</span> <span class=\"n\">color_rgba</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n\n<span class=\"k\">with</span> <span class=\"n\">imageio</span><span class=\"o\">.</span><span class=\"n\">get_writer</span><span class=\"p\">(</span><span class=\"s1\">'sphere_anim.gif'</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">'I'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">writer</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">):</span>\n        <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">pi</span> <span class=\"o\">*</span> <span class=\"n\">i</span> <span class=\"o\">/</span> <span class=\"mi\">50</span>\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"mi\">4</span> <span class=\"o\">*</span> <span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">angle</span><span class=\"p\">)</span>\n        <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"mi\">4</span> <span class=\"o\">*</span> <span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">angle</span><span class=\"p\">)</span>\n        <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span> <span class=\"o\">+</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">angle</span><span class=\"p\">))</span>\n\n        <span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">move_nodes</span><span class=\"p\">(</span><span class=\"s1\">'root'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'sphere_node'</span><span class=\"p\">:</span> <span class=\"p\">((</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))})</span>\n        <span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">reset_camera</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">look_at</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n\n        <span class=\"n\">image_rgb</span> <span class=\"o\">=</span> <span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">get_screenshot</span><span class=\"p\">(</span><span class=\"n\">requested_format</span><span class=\"o\">=</span><span class=\"s1\">'RGB'</span><span class=\"p\">)</span>\n        <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">append_data</span><span class=\"p\">(</span><span class=\"n\">image_rgb</span><span class=\"p\">)</span>\n</pre>\n<h3>Using with Pinocchio</h3>\n<p><img alt=\"Pinocchio robots\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3042af03faf720eb2b5c975af3080c6239de4004/2f696d616765732f70696e6f636368696f2e706e673f7261773d74727565\"></p>\n<p><a href=\"https://github.com/stack-of-tasks/pinocchio/\" rel=\"nofollow\">Pinocchio</a> is a library for rigid multi-body dynamics computation. To see how to use this package with Pinocchio see <a href=\"https://github.com/stack-of-tasks/pinocchio/examples/panda3d-viewer.py\" rel=\"nofollow\">example 1</a>, <a href=\"https://github.com/stack-of-tasks/pinocchio/examples/panda3d-viewer-play.py\" rel=\"nofollow\">example 2</a>.</p>\n<h2>API</h2>\n<h3>Viewer</h3>\n<p>This package contains <code>Viewer</code>, a thin wrapper on top of <a href=\"https://docs.panda3d.org/1.10/python/reference/direct.showbase.ShowBase\" rel=\"nofollow\">Panda3D ShowBase</a>, an application framework responsible for opening a graphical display, setting up input devices and creating the scene graph.</p>\n<p><code>Viewer</code> constructor takes <code>window_type</code> parameter wich should be one of <code>'onscreen'</code>, <code>'offscreen'</code>. When selected <code>'onscreen'</code> the viewer open a GUI window. When selected <code>'offscreen'</code> the viewer render to an offscreen buffer.</p>\n<p>Optional <code>config</code> parameter allows manage the viewer appearance. Configuration provided by <code>ViewerConfig</code> class, which contains methods:</p>\n<ul>\n<li><code>set_window_size</code> set window size (default: 800x600)</li>\n<li><code>set_window_fixed</code> disable window resizing (default: on)</li>\n<li><code>enable_antialiasing</code> turn antialiasing on or off and specify number of MSAA multisamples: 2,4,8,16 (default: off)</li>\n<li><code>enable_lights</code> turn lighting on or off (default: on)</li>\n<li><code>enable_shadow</code> turn shadows rendering on or off (default: off)</li>\n<li><code>enable_hdr</code> turn HDR effect on or off (default: off)</li>\n<li><code>enable_fog</code> turn fog rendering on or off (default: off)</li>\n<li><code>show_axes</code> turn the axes rendering on or off (default: on)</li>\n<li><code>show_grid</code> turn the grid rendering on or off (default: on)</li>\n<li><code>show_floor</code> turn the floor plane rendering on or off (default: off)</li>\n</ul>\n<p>To stop the viewer use <code>stop</code> method. Use <code>join</code> method to wait until a user close the window.</p>\n<h3>Managing 3D scene</h3>\n<p>All scene geometries organized in named groups. Each group contains arbitrary number of nodes. To manage the groups use <code>append_group</code> and <code>remove_group</code>. To hide or show all geometries inside a group use <code>show_group</code>.</p>\n<p>To append a mesh node to a group use <code>append_mesh</code>, to append a primitive geometry node use <code>append_capsule</code>, <code>append_cylinder</code>, <code>append_box</code>, <code>append_plane</code>, <code>append_sphere</code>. To modify material of a node use <code>set_material</code>.</p>\n<p>To specify nodes position in the space use <code>move_nodes</code> function. It takes a dictionary with <code>node_name</code> - <code>position, quaternion</code> pairs, so you can specify the position of all/any nodes in a group simultaneously.</p>\n<h3>Render to file or memory buffer</h3>\n<p>To capture an image and save it on the disk use <code>save_screenshot</code>. Specify path to the image file with extention in a <code>filename</code> parameter. If the <code>filename</code> is ommited it will be generated automatically based on the current date time.</p>\n<p>To capture an image to a memory buffer use <code>get_screenshot</code>. Specify the color channels order in <code>requested_format</code> parameter. Default format is BGRA, allow any combinations of R,G,B,A channels. The function returns an image as a numpy array.</p>\n<h3>Scene appearance</h3>\n<p>To move the camera use <code>reset_camera</code> method which takes the desired camera position and target point.</p>\n<p>Viewer provide several methods to manage visual appearance:</p>\n<ul>\n<li><code>set_background_color</code> change background color</li>\n<li><code>enable_lights</code> turn lighting on or off</li>\n<li><code>enable_shadow</code> turn shadows rendering on or off</li>\n<li><code>enable_hdr</code> turn HDR effect on or off</li>\n<li><code>enable_fog</code> turn fog rendering on or off</li>\n<li><code>show_axes</code> turn the axes rendering on or off</li>\n<li><code>show_grid</code> turn the grid rendering on or off</li>\n<li><code>show_floor</code> turn the floor plane rendering on or off</li>\n</ul>\n<h2>Window control</h2>\n<p>Keyboard shortcuts:</p>\n<ul>\n<li>Show help:\t<strong>F1</strong>, <strong>h</strong></li>\n<li>Quit window:\t<strong>Escape</strong>, <strong>q</strong></li>\n<li>Screenshot:\t<strong>Space</strong></li>\n<li>Toggle axes:\t<strong>a</strong></li>\n<li>Toggle HDR:\t<strong>d</strong></li>\n<li>Toggle grid:\t<strong>g</strong></li>\n<li>Toggle fps meter:\t<strong>f</strong></li>\n<li>Toggle lighting:\t<strong>l</strong></li>\n<li>Toggle fog:\t<strong>o</strong></li>\n<li>Toggle plane:\t<strong>p</strong></li>\n<li>Reset camera:\t<strong>r</strong></li>\n<li>Toggle shadows:\t<strong>s</strong></li>\n<li>Toggle texture:\t<strong>t</strong></li>\n<li>Toggle wireframe:\t<strong>w</strong></li>\n</ul>\n<p>Mouse control:</p>\n<ul>\n<li>Move:\t<strong>LMB</strong></li>\n<li>Scale:\t<strong>RMB</strong>, <strong>Ctrl+LMB</strong></li>\n<li>Rotate:\t<strong>LMB+RMB</strong>, <strong>Alt+LMB</strong></li>\n<li>Tilt:\t<strong>Alt+Ctrl+LMB</strong></li>\n</ul>\n<h2>License</h2>\n<p>panda3d_viewer is licensed under the MIT License - see the LICENSE file for details</p>\n\n          </div>"}, "last_serial": 7152838, "releases": {"0.1.dev5": [{"comment_text": "", "digests": {"md5": "86c38be03ac9c2714d06dde134fd4313", "sha256": "953fd44726a5f35bdecea5a997084b4652b3fdf070e8600324f303f42608af5c"}, "downloads": -1, "filename": "panda3d_viewer-0.1.dev5-py3-none-any.whl", "has_sig": false, "md5_digest": "86c38be03ac9c2714d06dde134fd4313", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11848, "upload_time": "2020-04-24T16:35:25", "upload_time_iso_8601": "2020-04-24T16:35:25.467218Z", "url": "https://files.pythonhosted.org/packages/9d/01/4c3921a7fdf6735eed9b2daf6959911ef83e197d714e50c69f51f74230be/panda3d_viewer-0.1.dev5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4e36b02234106cd5b2f672f5a0e2ce4", "sha256": "59f4a716986b4e5756c220a2c35bc1bfc9ddbfa9f002f82979dee50e5860d367"}, "downloads": -1, "filename": "panda3d_viewer-0.1.dev5.tar.gz", "has_sig": false, "md5_digest": "d4e36b02234106cd5b2f672f5a0e2ce4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8461, "upload_time": "2020-04-24T16:35:26", "upload_time_iso_8601": "2020-04-24T16:35:26.625782Z", "url": "https://files.pythonhosted.org/packages/00/2e/a3e62ad59f609544f36f69db51f0be42cc81923f0096c6169ab64a481dfc/panda3d_viewer-0.1.dev5.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "cbead5d2331dfc0f9855f7a66f4d5873", "sha256": "9308212179fadeabb2c972380ade7f0e7b303777794d2a50c9c19606edf82710"}, "downloads": -1, "filename": "panda3d_viewer-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cbead5d2331dfc0f9855f7a66f4d5873", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16053, "upload_time": "2020-05-02T18:29:46", "upload_time_iso_8601": "2020-05-02T18:29:46.335312Z", "url": "https://files.pythonhosted.org/packages/c5/9c/f141f02ef4c6474f9c8cd8a1d9311fb4bba94fd99bddb0a11ff4ca1176e2/panda3d_viewer-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ad01bf9213cfb871cd5aac78af6cadd", "sha256": "3eb7bdcc734fcc56e5749237bfeaacfc6160138831b9c73fb88f49b383e0a83a"}, "downloads": -1, "filename": "panda3d_viewer-0.2.0.tar.gz", "has_sig": false, "md5_digest": "0ad01bf9213cfb871cd5aac78af6cadd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 650819, "upload_time": "2020-05-02T18:29:47", "upload_time_iso_8601": "2020-05-02T18:29:47.814804Z", "url": "https://files.pythonhosted.org/packages/c8/97/576e1678b639d43080980bc91315d0f2ce1c531c37c7e0278a66ba1951fe/panda3d_viewer-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cbead5d2331dfc0f9855f7a66f4d5873", "sha256": "9308212179fadeabb2c972380ade7f0e7b303777794d2a50c9c19606edf82710"}, "downloads": -1, "filename": "panda3d_viewer-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cbead5d2331dfc0f9855f7a66f4d5873", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16053, "upload_time": "2020-05-02T18:29:46", "upload_time_iso_8601": "2020-05-02T18:29:46.335312Z", "url": "https://files.pythonhosted.org/packages/c5/9c/f141f02ef4c6474f9c8cd8a1d9311fb4bba94fd99bddb0a11ff4ca1176e2/panda3d_viewer-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ad01bf9213cfb871cd5aac78af6cadd", "sha256": "3eb7bdcc734fcc56e5749237bfeaacfc6160138831b9c73fb88f49b383e0a83a"}, "downloads": -1, "filename": "panda3d_viewer-0.2.0.tar.gz", "has_sig": false, "md5_digest": "0ad01bf9213cfb871cd5aac78af6cadd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 650819, "upload_time": "2020-05-02T18:29:47", "upload_time_iso_8601": "2020-05-02T18:29:47.814804Z", "url": "https://files.pythonhosted.org/packages/c8/97/576e1678b639d43080980bc91315d0f2ce1c531c37c7e0278a66ba1951fe/panda3d_viewer-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:38 2020"}