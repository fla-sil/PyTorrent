{"info": {"author": "Miguel de Val-Borro", "author_email": "miguel.deval@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "===============================\nCINE: Comet INfrared Excitation\n===============================\n\n\n``cine`` is a command-line tool for calculating infrared pumping efficiencies.\nAt large nucleocentric distances, one of the main mechanisms for molecular\nexcitation in comets is the fluorescence by the solar radiation followed by\nradiative decay to the ground vibrational state.  This code calculates the\neffective pumping rates for rotational levels in the ground vibrational state\nscaled by the heliocentric distance of the comet.  These coefficients are\nuseful for modeling rotational emission lines observed in cometary spectra at\nsub-millimeter wavelengths.\n\nCode releases are available on `PyPI <https://pypi.python.org/pypi/cine>`_, and\ndevelopment happens in the `github project page\n<https://github.com/migueldvb/cine>`_.\n\n\nInstallation\n------------\n\ncine can be installed using `pip <https://pypi.python.org/pypi/pip>`_:\n\n.. code-block:: bash\n\n    $ pip install cine\n\nor by cloning the github repository:\n\n.. code-block:: bash\n\n    $ # If you have a github account:\n    $ git clone git@github.com:migueldvb/cine.git\n    $ # If you do not:\n    $ git clone https://github.com/migueldvb/cine.git\n    $ cd cine\n    $ python setup.py install\n    $ # Or if you do not have root privileges:\n    $ python setup.py install --user\n\nWhen the package is installed using either method, the ``cine`` script will be\ncopied to a directory in the PATH environment variable and will be available\nfor general use.\n\nRequirements\n------------\n\nThe code requires the standard scientific Python packages (`numpy\n<http://www.numpy.org/>`_, `scipy <https://www.scipy.org/>`_, and `pandas\n<http://pandas.pydata.org/>`_) and astropy's affiliated package `astroquery\n<https://github.com/astropy/astroquery>`_.  to access the HITRAN and Lamda\ndatabases. Running the tests requires `nose\n<https://pypi.python.org/pypi/nose>`_.\n\n\nExample\n-------\n\n``cine`` is a command-line tool that is included in the package to generate\npumping rates for several molecules. For example, to obtain the effective\npumping rates between the seven lowest rotational levels in the ground\nvibrational state of HDO you can run the following command once ``CINE`` has\nbeen installed:\n\n.. code-block:: bash\n\n    $ cine --mol HDO --nlevels 7\n\nThis should create a file named ``G_HDO.dat`` which contains the pumping rates\nG :subscript:`ij` in units of s :superscript:`-1` between the rotational levels\ni and j shown in the first two columns. Note that the levels use zero-based\nindexing.\n\n.. code-block:: bash\n\n    0 3 2.568872e-05\n    0 4 2.570305e-05\n    0 5 1.552757e-05\n    1 2 6.253229e-05\n    1 6 2.987896e-05\n    2 1 6.196215e-05\n    2 6 4.410062e-05\n    3 0 7.547422e-05\n    3 4 3.103947e-05\n    3 5 5.048423e-05\n    4 0 1.253741e-04\n    4 3 5.128064e-05\n    4 5 4.679292e-05\n    5 0 7.481781e-05\n    5 3 8.287649e-05\n    5 4 4.643613e-05\n    6 1 4.820172e-05\n    6 2 7.201329e-05\n\nTo include more levels in the calculation, change the ``-n/-nlevels`` command-line\noption to a larger value.  cine has a ``-h/--help`` argument that presents an\nusage explanation describing each optional argument.\n\nThese coefficients are useful for deriving molecular production rates from cometary\nlines observed at sub-millimeter wavelengths combined with a code that\nsolves the radiative transfer equations such as `LIME\n<https://github.com/lime-rt/lime>`_.\n\n\nDownloading HITRAN data\n-----------------------\n\nTo download the molecular data cine uses the ``astroquery.hitran`` and\n``astroquery.lamda`` tools.  Set the ``LAMDA_DATA`` and ``HITRAN_DATA``\nenvironment variables (otherwise, the default\n``~/.astropy/cache/astroquery/Lamda``  and\n``~/.astropy/cache/astroquery/hitran`` will be used),\n\n\nTests\n-----\n\nIf ``nose`` is installed the tests can be run from the root of the repository as:\n\n.. code-block:: bash\n\n    $ python setup.py test\n\n\nContributing\n------------\n\nAny questions or bug reports can be raised in github's `issue tracker\n<https://github.com/migueldvb/cine/issues>`_ or `pull requests\n<https://github.com/migueldvb/cine/pulls>`_.\n\n\nProject Status\n--------------\n\n.. image:: https://travis-ci.org/migueldvb/cine.svg?branch=master\n    :target: https://travis-ci.org/migueldvb/cine?branch=master\n\n.. image:: https://coveralls.io/repos/github/migueldvb/cine/badge.svg?branch=master\n    :target: https://coveralls.io/github/migueldvb/cine?branch=master\n\n\nLicense\n-------\n\nCopyright 2017 Miguel de Val-Borro\n\n``CINE`` is free software made available under the MIT License.\nFor details see the LICENSE file.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/migueldvb/cine", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cine", "package_url": "https://pypi.org/project/cine/", "platform": "", "project_url": "https://pypi.org/project/cine/", "project_urls": {"Homepage": "https://github.com/migueldvb/cine"}, "release_url": "https://pypi.org/project/cine/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Calculate infrared pumping rates by solar radiation", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>cine</tt> is a command-line tool for calculating infrared pumping efficiencies.\nAt large nucleocentric distances, one of the main mechanisms for molecular\nexcitation in comets is the fluorescence by the solar radiation followed by\nradiative decay to the ground vibrational state.  This code calculates the\neffective pumping rates for rotational levels in the ground vibrational state\nscaled by the heliocentric distance of the comet.  These coefficients are\nuseful for modeling rotational emission lines observed in cometary spectra at\nsub-millimeter wavelengths.</p>\n<p>Code releases are available on <a href=\"https://pypi.python.org/pypi/cine\" rel=\"nofollow\">PyPI</a>, and\ndevelopment happens in the <a href=\"https://github.com/migueldvb/cine\" rel=\"nofollow\">github project page</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>cine can be installed using <a href=\"https://pypi.python.org/pypi/pip\" rel=\"nofollow\">pip</a>:</p>\n<pre>$ pip install cine\n</pre>\n<p>or by cloning the github repository:</p>\n<pre>$ <span class=\"c1\"># If you have a github account:\n</span>$ git clone git@github.com:migueldvb/cine.git\n$ <span class=\"c1\"># If you do not:\n</span>$ git clone https://github.com/migueldvb/cine.git\n$ <span class=\"nb\">cd</span> cine\n$ python setup.py install\n$ <span class=\"c1\"># Or if you do not have root privileges:\n</span>$ python setup.py install --user\n</pre>\n<p>When the package is installed using either method, the <tt>cine</tt> script will be\ncopied to a directory in the PATH environment variable and will be available\nfor general use.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>The code requires the standard scientific Python packages (<a href=\"http://www.numpy.org/\" rel=\"nofollow\">numpy</a>, <a href=\"https://www.scipy.org/\" rel=\"nofollow\">scipy</a>, and <a href=\"http://pandas.pydata.org/\" rel=\"nofollow\">pandas</a>) and astropy\u2019s affiliated package <a href=\"https://github.com/astropy/astroquery\" rel=\"nofollow\">astroquery</a>.  to access the HITRAN and Lamda\ndatabases. Running the tests requires <a href=\"https://pypi.python.org/pypi/nose\" rel=\"nofollow\">nose</a>.</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p><tt>cine</tt> is a command-line tool that is included in the package to generate\npumping rates for several molecules. For example, to obtain the effective\npumping rates between the seven lowest rotational levels in the ground\nvibrational state of HDO you can run the following command once <tt>CINE</tt> has\nbeen installed:</p>\n<pre>$ cine --mol HDO --nlevels <span class=\"m\">7</span>\n</pre>\n<p>This should create a file named <tt>G_HDO.dat</tt> which contains the pumping rates\nG <sub>ij</sub> in units of s <sup>-1</sup> between the rotational levels\ni and j shown in the first two columns. Note that the levels use zero-based\nindexing.</p>\n<pre><span class=\"m\">0</span> <span class=\"m\">3</span> <span class=\"m\">2</span>.568872e-05\n<span class=\"m\">0</span> <span class=\"m\">4</span> <span class=\"m\">2</span>.570305e-05\n<span class=\"m\">0</span> <span class=\"m\">5</span> <span class=\"m\">1</span>.552757e-05\n<span class=\"m\">1</span> <span class=\"m\">2</span> <span class=\"m\">6</span>.253229e-05\n<span class=\"m\">1</span> <span class=\"m\">6</span> <span class=\"m\">2</span>.987896e-05\n<span class=\"m\">2</span> <span class=\"m\">1</span> <span class=\"m\">6</span>.196215e-05\n<span class=\"m\">2</span> <span class=\"m\">6</span> <span class=\"m\">4</span>.410062e-05\n<span class=\"m\">3</span> <span class=\"m\">0</span> <span class=\"m\">7</span>.547422e-05\n<span class=\"m\">3</span> <span class=\"m\">4</span> <span class=\"m\">3</span>.103947e-05\n<span class=\"m\">3</span> <span class=\"m\">5</span> <span class=\"m\">5</span>.048423e-05\n<span class=\"m\">4</span> <span class=\"m\">0</span> <span class=\"m\">1</span>.253741e-04\n<span class=\"m\">4</span> <span class=\"m\">3</span> <span class=\"m\">5</span>.128064e-05\n<span class=\"m\">4</span> <span class=\"m\">5</span> <span class=\"m\">4</span>.679292e-05\n<span class=\"m\">5</span> <span class=\"m\">0</span> <span class=\"m\">7</span>.481781e-05\n<span class=\"m\">5</span> <span class=\"m\">3</span> <span class=\"m\">8</span>.287649e-05\n<span class=\"m\">5</span> <span class=\"m\">4</span> <span class=\"m\">4</span>.643613e-05\n<span class=\"m\">6</span> <span class=\"m\">1</span> <span class=\"m\">4</span>.820172e-05\n<span class=\"m\">6</span> <span class=\"m\">2</span> <span class=\"m\">7</span>.201329e-05\n</pre>\n<p>To include more levels in the calculation, change the <tt><span class=\"pre\">-n/-nlevels</span></tt> command-line\noption to a larger value.  cine has a <tt><span class=\"pre\">-h/--help</span></tt> argument that presents an\nusage explanation describing each optional argument.</p>\n<p>These coefficients are useful for deriving molecular production rates from cometary\nlines observed at sub-millimeter wavelengths combined with a code that\nsolves the radiative transfer equations such as <a href=\"https://github.com/lime-rt/lime\" rel=\"nofollow\">LIME</a>.</p>\n</div>\n<div id=\"downloading-hitran-data\">\n<h2>Downloading HITRAN data</h2>\n<p>To download the molecular data cine uses the <tt>astroquery.hitran</tt> and\n<tt>astroquery.lamda</tt> tools.  Set the <tt>LAMDA_DATA</tt> and <tt>HITRAN_DATA</tt>\nenvironment variables (otherwise, the default\n<tt><span class=\"pre\">~/.astropy/cache/astroquery/Lamda</span></tt>  and\n<tt><span class=\"pre\">~/.astropy/cache/astroquery/hitran</span></tt> will be used),</p>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>If <tt>nose</tt> is installed the tests can be run from the root of the repository as:</p>\n<pre>$ python setup.py <span class=\"nb\">test</span>\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Any questions or bug reports can be raised in github\u2019s <a href=\"https://github.com/migueldvb/cine/issues\" rel=\"nofollow\">issue tracker</a> or <a href=\"https://github.com/migueldvb/cine/pulls\" rel=\"nofollow\">pull requests</a>.</p>\n</div>\n<div id=\"project-status\">\n<h2>Project Status</h2>\n<a href=\"https://travis-ci.org/migueldvb/cine?branch=master\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/migueldvb/cine.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e60674d30705ebb9dfa93433fc4fc0e57fd3283d/68747470733a2f2f7472617669732d63692e6f72672f6d696775656c6476622f63696e652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/migueldvb/cine?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/migueldvb/cine/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b1576f65402644bd1e3567f167af2cf7da62db20/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d696775656c6476622f63696e652f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright 2017 Miguel de Val-Borro</p>\n<p><tt>CINE</tt> is free software made available under the MIT License.\nFor details see the LICENSE file.</p>\n</div>\n\n          </div>"}, "last_serial": 2687385, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "4a2236fd19fe26a5d59e291568367512", "sha256": "c408947f6a59a7ef8cc3061d8e1ff805b4dfcb319e69d24afb465a3bc4fe111b"}, "downloads": -1, "filename": "cine-0.1.tar.gz", "has_sig": false, "md5_digest": "4a2236fd19fe26a5d59e291568367512", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4079, "upload_time": "2017-01-24T01:04:30", "upload_time_iso_8601": "2017-01-24T01:04:30.600189Z", "url": "https://files.pythonhosted.org/packages/a6/9f/c6bf51d614f13a2f4810d5b9c27db84ea823db2af15e525c084a6cfa0ea4/cine-0.1.tar.gz", "yanked": false}], "0.1.1.3": [{"comment_text": "", "digests": {"md5": "2f1559cf2a75d7699428559e0db0b50a", "sha256": "1a7177f3556b248f1bae42d60a189ec814e0a549a144409900faae07a16539cf"}, "downloads": -1, "filename": "cine-0.1.1.3.tar.gz", "has_sig": false, "md5_digest": "2f1559cf2a75d7699428559e0db0b50a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5384, "upload_time": "2017-01-24T20:36:44", "upload_time_iso_8601": "2017-01-24T20:36:44.072805Z", "url": "https://files.pythonhosted.org/packages/6b/02/02bd41436153ba034a71ece06e9cf03617cce880144e30093bf007427c2a/cine-0.1.1.3.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "2f95f6dbc9ac7d5e253ec2bdd1432f58", "sha256": "633d2e3f26c4a30d4b3db6a9938e81583ba6572e6393abd07a767841e62e829e"}, "downloads": -1, "filename": "cine-0.2.tar.gz", "has_sig": false, "md5_digest": "2f95f6dbc9ac7d5e253ec2bdd1432f58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12622, "upload_time": "2017-02-06T21:48:08", "upload_time_iso_8601": "2017-02-06T21:48:08.176746Z", "url": "https://files.pythonhosted.org/packages/57/37/e3c35e0c5659c8e5e5e3b41febe45adb4860e04f7b15c36f3fbe515da7de/cine-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "624b0d708f0a6c6e12e7ca4a2c856f8a", "sha256": "c9f81c2e5a93af83fb9d3c14a638ded9e73621f191546c4cd15c324ae041bb69"}, "downloads": -1, "filename": "cine-0.2.1.tar.gz", "has_sig": false, "md5_digest": "624b0d708f0a6c6e12e7ca4a2c856f8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13001, "upload_time": "2017-03-06T23:02:50", "upload_time_iso_8601": "2017-03-06T23:02:50.020334Z", "url": "https://files.pythonhosted.org/packages/f2/84/6b3a90c18a863caf3089e4e0d178fcba0199d244f8afb77a83cd08a2fb1c/cine-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "624b0d708f0a6c6e12e7ca4a2c856f8a", "sha256": "c9f81c2e5a93af83fb9d3c14a638ded9e73621f191546c4cd15c324ae041bb69"}, "downloads": -1, "filename": "cine-0.2.1.tar.gz", "has_sig": false, "md5_digest": "624b0d708f0a6c6e12e7ca4a2c856f8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13001, "upload_time": "2017-03-06T23:02:50", "upload_time_iso_8601": "2017-03-06T23:02:50.020334Z", "url": "https://files.pythonhosted.org/packages/f2/84/6b3a90c18a863caf3089e4e0d178fcba0199d244f8afb77a83cd08a2fb1c/cine-0.2.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:22 2020"}