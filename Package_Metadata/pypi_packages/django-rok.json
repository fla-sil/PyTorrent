{"info": {"author": "Ankur Jain", "author_email": "ankurj630@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5"], "description": "=====\nDjango-Rok\n=====\n\nDjango-rok is an ssh tunnel tool that provide a public url for your local web server and help in testing webhook integrations.\nThe django-rok is inspired from <a href=\"https://ngrok.com/\" traget=\"_blank\">ngrock</a> and built using <a href=\"http://www.paramiko.org/\" targat=\"_blank\">paramiko</a>.\n\n# Installation\n\nInstall using `pip`...\n\n    pip install django-rok\n\n\n# Quick Start\n1. Add <b>\"django_rok\"</b> to your INSTALLED_APPS setting like this::\n   ```python\n    INSTALLED_APPS = [\n        ...\n        'django_rok',\n    ]\n    ```\n2. Add the following parameters to the settings.py::\n    ```python\n    ROK_REMOTE_HOST=\"192.168.1.1\" # remote host ip\n    ROK_REMOTE_PORT=9000 # remote host port to connect to\n    ROK_USERNAME=\"root\" # remote host username\n    ROK_PASSWORD=\"root\" # remote host password\n    ```\n\n3. Instead of django runsver run this command::\n    ```python\n    python manage.py runrok\n    ```\n    This will run the rokserver as well as the django development server.\n\n\n4. Now go to the url ```http://192.168.1.1:9000``` to access your local development server publicaly.\n\n\n# Additional Configuration\n1. Private key can be used to connect to the remote server. To do so add the following parameter to settings.py\n     ```python\n    ROK_KEY=\"/path/to/private/key\" # private key for remote host connection\n    ROK_PASSWORD=None # remote host password is not required since we are using private key\n    ```\n\n 2. Rokserver can be started standalone without invoking the django development server. Thing can be achieved by setting env variable\n     ```python\n    ROK_ENV=\"PRODUCTION\"\n    ```\n3. Local port for rokserver can be changed by passing the ```-lp``` parameter\n    ```\n    python manage.py runrok -lp 8080\n    ```\n\n# Command Line Usage\n  You can also pass the parameters through command line.\n\n  <b>Example:</b>\n  ```\n  python manage.py runrok -r 192.168.1.1 -rp 9000 -u 'root' -p 'root'\n  ```\n\n  To check the command line parameters run ```python manage.py runrok --help```\n\n  ```\n  usage: manage.py runrok [-h] [--version] [-v {0,1,2,3}] [--settings SETTINGS]\n                        [--pythonpath PYTHONPATH] [--traceback] [--no-color]\n                        [-lp LOCAL_PORT] [-rp REMOTE_PORT] [-r REMOTE_HOST]\n                        [-u USER_NAME] [-p PASSWORD] [-key PKEY] [-env ENV]\n\nCommand to run runrok server along with django development server\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  -v {0,1,2,3}, --verbosity {0,1,2,3}\n                        Verbosity level; 0=minimal output, 1=normal output,\n                        2=verbose output, 3=very verbose output\n  --settings SETTINGS   The Python path to a settings module, e.g.\n                        \"myproject.settings.main\". If this isn't provided, the\n                        DJANGO_SETTINGS_MODULE environment variable will be\n                        used.\n  --pythonpath PYTHONPATH\n                        A directory to add to the Python path, e.g.\n                        \"/home/djangoprojects/myproject\".\n  --traceback           Raise on CommandError exceptions\n  --no-color            Don't colorize the command output.\n  -lp LOCAL_PORT        The local port to forward the request.\n  -rp REMOTE_PORT       The remote port for ssh connection.\n  -r REMOTE_HOST        The remote host for ssh connection\n  -u USER_NAME          The username for remote host\n  -p PASSWORD           The password for remote host(If there)\n  -key PKEY             The private key for remote host(If there)\n  -env ENV              Which env the server is running on\n```\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/droidlife/django-rok", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-rok", "package_url": "https://pypi.org/project/django-rok/", "platform": "", "project_url": "https://pypi.org/project/django-rok/", "project_urls": {"Homepage": "https://github.com/droidlife/django-rok"}, "release_url": "https://pypi.org/project/django-rok/1.0.1/", "requires_dist": ["paramiko (>=2.4.1)"], "requires_python": "", "summary": "Public url for your local web server.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            =====<br>Django-Rok<br>=====<br><br>Django-rok is an ssh tunnel tool that provide a public url for your local web server and help in testing webhook integrations.<br>The django-rok is inspired from &lt;a href=\"https://ngrok.com/\" traget=\"_blank\"&gt;ngrock&lt;/a&gt; and built using &lt;a href=\"http://www.paramiko.org/\" targat=\"_blank\"&gt;paramiko&lt;/a&gt;.<br><br># Installation<br><br>Install using `pip`...<br><br>    pip install django-rok<br><br><br># Quick Start<br>1. Add &lt;b&gt;\"django_rok\"&lt;/b&gt; to your INSTALLED_APPS setting like this::<br>   ```python<br>    INSTALLED_APPS = [<br>        ...<br>        'django_rok',<br>    ]<br>    ```<br>2. Add the following parameters to the settings.py::<br>    ```python<br>    ROK_REMOTE_HOST=\"192.168.1.1\" # remote host ip<br>    ROK_REMOTE_PORT=9000 # remote host port to connect to<br>    ROK_USERNAME=\"root\" # remote host username<br>    ROK_PASSWORD=\"root\" # remote host password<br>    ```<br><br>3. Instead of django runsver run this command::<br>    ```python<br>    python manage.py runrok<br>    ```<br>    This will run the rokserver as well as the django development server.<br><br><br>4. Now go to the url ```http://192.168.1.1:9000``` to access your local development server publicaly.<br><br><br># Additional Configuration<br>1. Private key can be used to connect to the remote server. To do so add the following parameter to settings.py<br>     ```python<br>    ROK_KEY=\"/path/to/private/key\" # private key for remote host connection<br>    ROK_PASSWORD=None # remote host password is not required since we are using private key<br>    ```<br><br> 2. Rokserver can be started standalone without invoking the django development server. Thing can be achieved by setting env variable<br>     ```python<br>    ROK_ENV=\"PRODUCTION\"<br>    ```<br>3. Local port for rokserver can be changed by passing the ```-lp``` parameter<br>    ```<br>    python manage.py runrok -lp 8080<br>    ```<br><br># Command Line Usage<br>  You can also pass the parameters through command line.<br><br>  &lt;b&gt;Example:&lt;/b&gt;<br>  ```<br>  python manage.py runrok -r 192.168.1.1 -rp 9000 -u 'root' -p 'root'<br>  ```<br><br>  To check the command line parameters run ```python manage.py runrok --help```<br><br>  ```<br>  usage: manage.py runrok [-h] [--version] [-v {0,1,2,3}] [--settings SETTINGS]<br>                        [--pythonpath PYTHONPATH] [--traceback] [--no-color]<br>                        [-lp LOCAL_PORT] [-rp REMOTE_PORT] [-r REMOTE_HOST]<br>                        [-u USER_NAME] [-p PASSWORD] [-key PKEY] [-env ENV]<br><br>Command to run runrok server along with django development server<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  --version             show program's version number and exit<br>  -v {0,1,2,3}, --verbosity {0,1,2,3}<br>                        Verbosity level; 0=minimal output, 1=normal output,<br>                        2=verbose output, 3=very verbose output<br>  --settings SETTINGS   The Python path to a settings module, e.g.<br>                        \"myproject.settings.main\". If this isn't provided, the<br>                        DJANGO_SETTINGS_MODULE environment variable will be<br>                        used.<br>  --pythonpath PYTHONPATH<br>                        A directory to add to the Python path, e.g.<br>                        \"/home/djangoprojects/myproject\".<br>  --traceback           Raise on CommandError exceptions<br>  --no-color            Don't colorize the command output.<br>  -lp LOCAL_PORT        The local port to forward the request.<br>  -rp REMOTE_PORT       The remote port for ssh connection.<br>  -r REMOTE_HOST        The remote host for ssh connection<br>  -u USER_NAME          The username for remote host<br>  -p PASSWORD           The password for remote host(If there)<br>  -key PKEY             The private key for remote host(If there)<br>  -env ENV              Which env the server is running on<br>```<br><br><br>\n          </div>"}, "last_serial": 4076786, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "1e0dfa5ecb199e1cd91930f57279a194", "sha256": "bf79680b6cb4812d45443295a5eaa34d3ac302e4ed6ff1e15028d6ea6e82fe47"}, "downloads": -1, "filename": "django_rok-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1e0dfa5ecb199e1cd91930f57279a194", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6269, "upload_time": "2018-07-17T17:10:28", "upload_time_iso_8601": "2018-07-17T17:10:28.596678Z", "url": "https://files.pythonhosted.org/packages/c2/92/59f1636fbb3728fce0350796d0c8b6611c0a532ded437089903adb575660/django_rok-1.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "582b98891852c4908362bf3d0c1aa070", "sha256": "b8bb03529764cc0781bdae99ce589671a51b2e3a0c90f0fea0ad32f26910e8b3"}, "downloads": -1, "filename": "django_rok-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "582b98891852c4908362bf3d0c1aa070", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6288, "upload_time": "2018-07-18T07:24:07", "upload_time_iso_8601": "2018-07-18T07:24:07.142572Z", "url": "https://files.pythonhosted.org/packages/1b/9a/e194afabceda29f66640bb17acd3fd44181c133e8741ebf87063031a5e2a/django_rok-1.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "582b98891852c4908362bf3d0c1aa070", "sha256": "b8bb03529764cc0781bdae99ce589671a51b2e3a0c90f0fea0ad32f26910e8b3"}, "downloads": -1, "filename": "django_rok-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "582b98891852c4908362bf3d0c1aa070", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6288, "upload_time": "2018-07-18T07:24:07", "upload_time_iso_8601": "2018-07-18T07:24:07.142572Z", "url": "https://files.pythonhosted.org/packages/1b/9a/e194afabceda29f66640bb17acd3fd44181c133e8741ebf87063031a5e2a/django_rok-1.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:53:54 2020"}