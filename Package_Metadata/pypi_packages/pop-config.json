{"info": {"author": "Thomas S Hatch", "author_email": "thatch45@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "==========\nPop Config\n==========\n\nPop-config is the official tool to allow for creating and app-merging\nconfiguration options for `pop` projects. Plugin Oriented Programming\npresents a means to merge multiple applications together dynamically.\nThis capabilities requires that the startup of these applications needs\nto be managed from within the programming paradigm. Since this is the case\n`pop-config` becomes a critical and hard requirement of `pop`.\n\nPop-config is not just about being able to work with `pop` projects\nto facilitate app-merging, it has also been designed to make the startup\nof an application much simpler, and to make the expensive boiler plate\nof startup and configuration as transparent as possible. When making\n`pop` projects the idea is that projects are developed in very small\nchunks and are then dynamically merged together. So the creation of\nthese mergeable apps needs to be quick and easy!\n\nPop-config also solves a problem with configuration of applications,\nwhen making a new application, if you want robust configuration\nloading, you need to be able to take options from the command line,\nenvironment variables, and configuration files. Pop-config does all\nof this for you, and loads them in the correct order, all behind the\nscenes, making your life easier.\n\nUnderstanding the conf.py\n=========================\n\nPop relies on a configuration file to manage how to merge apps, and\nalso how to manage and merge configuration data. The data in this file\nis presented in 4 Python dictionaries and defines every aspect of\nconfiguration loading.\n\nThe 4 dictionaries are called *CONFIG*, *CLI_CONFIG*, *SUBCOMMANDS*\nand *DYNE*. Each dictionary serves a specific purpose. Between them\nyou can define how the cli arguments are presented, all configuration\ndefaults, documentation, etc.\n\nThe CONFIG Dictionary\n=====================\n\nThe bulk of the configuration will be present in the *CONFIG* dictionary.\nall of your configuration options are defined here. Most entries in the\n*CONFIG* dictionary will be very simple and just expose the most basic\nvalues:\n\n.. code-block:: python\n\n    CONFIG = {\n        \"name\": {\n            \"default\": \"frank\",\n            \"help\": \"Enter the name to use\",\n        },\n    }\n\nThis simple example presents the documentation for the configuration value\nand what the default value should be.\n\nMany more options can be used, but they will be covered in the reference\ndocument.\n\nThe CLI_CONFIG Dictionary\n=========================\n\nAdding a configuration value does not make it appear on the command line.\nEach application can be extended to include command line options.\nLets extend our earlier example to expose the \"name\" option as a command\nline argument:\n\n.. code-block:: python\n\n    CLI_CONFIG = {\n        \"name\": {},\n    }\n    CONFIG = {\n        \"name\": {\n            \"default\": \"frank\",\n            \"help\": \"Enter the name to use\",\n        },\n    }\n\nThat's it! The \"name\" option is now available on the command line and can\nbe used as `--name bob`.\n\nBut what if we want it to be a positional argument? Simple! Just add the\npositional option to the *CLI_CONFIG*:\n\n.. code-block:: python\n\n    CLI_CONFIG = {\n        \"name\": {\n            \"positional\": True,\n        },\n    }\n    CONFIG = {\n        \"name\": {\n            \"default\": \"frank\",\n            \"help\": \"Enter the name to use\",\n        },\n    }\n\nMany more options exist that allow you to control every aspect of the user's\ncommand line experience.\n\nThe SUBCOMMANDS Dictionary\n==========================\n\nSometimes it is desirable to have subcommands. Subcommands allow your CLI\nto work in a way similar to the git cli, where you have multiple routines\nthat all can be called from a single command.\n\nLets add a few more things to our example so that we can have subcommands.\n\n.. code-block:: python\n\n    CLI_CONFIG = {\n        \"name\": {\n            \"subcommands\": [\"test\", \"apply\"],\n        },\n        \"weight\": {},\n        \"power\": {\n            \"subcommands\": [\"apply\"],\n        },\n    }\n    CONFIG = {\n        \"name\": {\n            \"default\": \"frank\",\n            \"help\": \"Enter the name to use\",\n        },\n        \"weight\": {\n            \"default\": \"150\",\n            \"help\": \"Enter how heavy it should be\",\n        },\n        \"power\": {\n            \"default\": \"100\",\n            \"help\": \"Enter how powerful it should be\",\n        },\n    }\n\n    SUBCOMMANDS = {\n        \"test\": {\n            \"help\": \"Used to test\",\n            \"desc\": \"When running in test mode, things will be tested\",\n        },\n        \"apply\": {\n            \"help\": \"Used to apply\",\n            \"desc\": \"When running in apply mode, things will be applied\",\n        },\n    }\n\n\nIn this example we see that the option `name` will be available under\nthe subcommands `test` and `apply`. The option `power` will be available\nonly under the subcommand `apply` and the option `weight` is globally\navailable.\n\nThe DYNE Dictionary\n===================\n\nThe *DYNE* dictionary allows you to control what dynamic names your app is\npresenting to other `pop` projects. This name gets used not only inside\nof `pop-config` but also inside of `pop` to determine what plugin subsystems\nthis application merges with. The *DYNE* system allows for your cli to be\nextended by third party code, enabling configuration options to be made\navailable to your application via external code.\n\nThe *DYNE* system is very powerful. But since it is not critical to getting\nstarted with `pop-config` it will be covered in more depth in another document.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.saltstack.com", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pop-config", "package_url": "https://pypi.org/project/pop-config/", "platform": "", "project_url": "https://pypi.org/project/pop-config/", "project_urls": {"Homepage": "https://www.saltstack.com"}, "release_url": "https://pypi.org/project/pop-config/5.6/", "requires_dist": ["pop"], "requires_python": ">=3.6", "summary": "", "version": "5.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Pop-config is the official tool to allow for creating and app-merging\nconfiguration options for <cite>pop</cite> projects. Plugin Oriented Programming\npresents a means to merge multiple applications together dynamically.\nThis capabilities requires that the startup of these applications needs\nto be managed from within the programming paradigm. Since this is the case\n<cite>pop-config</cite> becomes a critical and hard requirement of <cite>pop</cite>.</p>\n<p>Pop-config is not just about being able to work with <cite>pop</cite> projects\nto facilitate app-merging, it has also been designed to make the startup\nof an application much simpler, and to make the expensive boiler plate\nof startup and configuration as transparent as possible. When making\n<cite>pop</cite> projects the idea is that projects are developed in very small\nchunks and are then dynamically merged together. So the creation of\nthese mergeable apps needs to be quick and easy!</p>\n<p>Pop-config also solves a problem with configuration of applications,\nwhen making a new application, if you want robust configuration\nloading, you need to be able to take options from the command line,\nenvironment variables, and configuration files. Pop-config does all\nof this for you, and loads them in the correct order, all behind the\nscenes, making your life easier.</p>\n<div id=\"understanding-the-conf-py\">\n<h2>Understanding the conf.py</h2>\n<p>Pop relies on a configuration file to manage how to merge apps, and\nalso how to manage and merge configuration data. The data in this file\nis presented in 4 Python dictionaries and defines every aspect of\nconfiguration loading.</p>\n<p>The 4 dictionaries are called <em>CONFIG</em>, <em>CLI_CONFIG</em>, <em>SUBCOMMANDS</em>\nand <em>DYNE</em>. Each dictionary serves a specific purpose. Between them\nyou can define how the cli arguments are presented, all configuration\ndefaults, documentation, etc.</p>\n</div>\n<div id=\"the-config-dictionary\">\n<h2>The CONFIG Dictionary</h2>\n<p>The bulk of the configuration will be present in the <em>CONFIG</em> dictionary.\nall of your configuration options are defined here. Most entries in the\n<em>CONFIG</em> dictionary will be very simple and just expose the most basic\nvalues:</p>\n<pre><span class=\"n\">CONFIG</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"default\"</span><span class=\"p\">:</span> <span class=\"s2\">\"frank\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"help\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Enter the name to use\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n<p>This simple example presents the documentation for the configuration value\nand what the default value should be.</p>\n<p>Many more options can be used, but they will be covered in the reference\ndocument.</p>\n</div>\n<div id=\"the-cli-config-dictionary\">\n<h2>The CLI_CONFIG Dictionary</h2>\n<p>Adding a configuration value does not make it appear on the command line.\nEach application can be extended to include command line options.\nLets extend our earlier example to expose the \u201cname\u201d option as a command\nline argument:</p>\n<pre><span class=\"n\">CLI_CONFIG</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">{},</span>\n<span class=\"p\">}</span>\n<span class=\"n\">CONFIG</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"default\"</span><span class=\"p\">:</span> <span class=\"s2\">\"frank\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"help\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Enter the name to use\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n<p>That\u2019s it! The \u201cname\u201d option is now available on the command line and can\nbe used as <cite>\u2013name bob</cite>.</p>\n<p>But what if we want it to be a positional argument? Simple! Just add the\npositional option to the <em>CLI_CONFIG</em>:</p>\n<pre><span class=\"n\">CLI_CONFIG</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"positional\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n<span class=\"n\">CONFIG</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"default\"</span><span class=\"p\">:</span> <span class=\"s2\">\"frank\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"help\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Enter the name to use\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Many more options exist that allow you to control every aspect of the user\u2019s\ncommand line experience.</p>\n</div>\n<div id=\"the-subcommands-dictionary\">\n<h2>The SUBCOMMANDS Dictionary</h2>\n<p>Sometimes it is desirable to have subcommands. Subcommands allow your CLI\nto work in a way similar to the git cli, where you have multiple routines\nthat all can be called from a single command.</p>\n<p>Lets add a few more things to our example so that we can have subcommands.</p>\n<pre><span class=\"n\">CLI_CONFIG</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"subcommands\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"test\"</span><span class=\"p\">,</span> <span class=\"s2\">\"apply\"</span><span class=\"p\">],</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"weight\"</span><span class=\"p\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s2\">\"power\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"subcommands\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"apply\"</span><span class=\"p\">],</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n<span class=\"n\">CONFIG</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"default\"</span><span class=\"p\">:</span> <span class=\"s2\">\"frank\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"help\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Enter the name to use\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"weight\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"default\"</span><span class=\"p\">:</span> <span class=\"s2\">\"150\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"help\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Enter how heavy it should be\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"power\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"default\"</span><span class=\"p\">:</span> <span class=\"s2\">\"100\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"help\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Enter how powerful it should be\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">SUBCOMMANDS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"test\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"help\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Used to test\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"desc\"</span><span class=\"p\">:</span> <span class=\"s2\">\"When running in test mode, things will be tested\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"apply\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"help\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Used to apply\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"desc\"</span><span class=\"p\">:</span> <span class=\"s2\">\"When running in apply mode, things will be applied\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n<p>In this example we see that the option <cite>name</cite> will be available under\nthe subcommands <cite>test</cite> and <cite>apply</cite>. The option <cite>power</cite> will be available\nonly under the subcommand <cite>apply</cite> and the option <cite>weight</cite> is globally\navailable.</p>\n</div>\n<div id=\"the-dyne-dictionary\">\n<h2>The DYNE Dictionary</h2>\n<p>The <em>DYNE</em> dictionary allows you to control what dynamic names your app is\npresenting to other <cite>pop</cite> projects. This name gets used not only inside\nof <cite>pop-config</cite> but also inside of <cite>pop</cite> to determine what plugin subsystems\nthis application merges with. The <em>DYNE</em> system allows for your cli to be\nextended by third party code, enabling configuration options to be made\navailable to your application via external code.</p>\n<p>The <em>DYNE</em> system is very powerful. But since it is not critical to getting\nstarted with <cite>pop-config</cite> it will be covered in more depth in another document.</p>\n</div>\n\n          </div>"}, "last_serial": 7145396, "releases": {"4": [{"comment_text": "", "digests": {"md5": "ec03cd3b628963c2fecfc4fd9200a344", "sha256": "b3c2279d67fda9cfd9a0e3ad76dc251a383bebdd8f77da0d6414eedfeff437fc"}, "downloads": -1, "filename": "pop_config-4-py3-none-any.whl", "has_sig": false, "md5_digest": "ec03cd3b628963c2fecfc4fd9200a344", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15744, "upload_time": "2020-03-12T21:40:27", "upload_time_iso_8601": "2020-03-12T21:40:27.590586Z", "url": "https://files.pythonhosted.org/packages/87/c9/789edc01927c071ab34c592ba270736dd59042757447c3a3020b44a46478/pop_config-4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5aea42e62a1c452e0d22678c1a784fe3", "sha256": "776664ca14d6a6df9194754135f0dd8b1eb8dae5042f625ca92eb8efa4ebc22c"}, "downloads": -1, "filename": "pop-config-4.tar.gz", "has_sig": false, "md5_digest": "5aea42e62a1c452e0d22678c1a784fe3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14365, "upload_time": "2020-03-12T21:40:30", "upload_time_iso_8601": "2020-03-12T21:40:30.207460Z", "url": "https://files.pythonhosted.org/packages/25/da/3e0ac0df651ec57231c0555288772639dd85dc88f5bac27449bec258b84a/pop-config-4.tar.gz", "yanked": false}], "5": [{"comment_text": "", "digests": {"md5": "44df08332a2c90226f347209b17fd631", "sha256": "c1a9f5a783c775b9233caa31243d4f70681388f5bc61847283680198fbfe9e45"}, "downloads": -1, "filename": "pop_config-5-py3-none-any.whl", "has_sig": false, "md5_digest": "44df08332a2c90226f347209b17fd631", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16226, "upload_time": "2020-03-13T14:26:44", "upload_time_iso_8601": "2020-03-13T14:26:44.507759Z", "url": "https://files.pythonhosted.org/packages/bb/f7/2bcd0578001e56baddf980f34da07b53e7092b3a72fa30f5b045c14230cf/pop_config-5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e45633f4c85e92bd2e044a7f20ce59a2", "sha256": "7b4cd6582e8f047f351735737d9204288b2146dc9228e95d54ef61420a517f4f"}, "downloads": -1, "filename": "pop-config-5.tar.gz", "has_sig": false, "md5_digest": "e45633f4c85e92bd2e044a7f20ce59a2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14672, "upload_time": "2020-03-13T14:26:46", "upload_time_iso_8601": "2020-03-13T14:26:46.059690Z", "url": "https://files.pythonhosted.org/packages/1e/fe/9867db7549dacb371045acb5b8f0d852b681f78fbc0e8bf00fae10098e70/pop-config-5.tar.gz", "yanked": false}], "5.1": [{"comment_text": "", "digests": {"md5": "4258b477b050ee31f70354f436ff08de", "sha256": "64721fed8e158bc903c01948082780c3da1c5fb805a6ee51b12e68457e4ff33e"}, "downloads": -1, "filename": "pop_config-5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4258b477b050ee31f70354f436ff08de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16261, "upload_time": "2020-03-14T16:01:56", "upload_time_iso_8601": "2020-03-14T16:01:56.284389Z", "url": "https://files.pythonhosted.org/packages/45/88/c10ae80fa129a02080204cf5c532719cb24724a9163b2c1a63f2f8d2d0bc/pop_config-5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5af49895f7a8bf25c7c90f8ca9967f6d", "sha256": "df286fe0cd84c59bfc44465c926f811ca5d42d8e74e4f0fc1fb80cfdccc1446a"}, "downloads": -1, "filename": "pop-config-5.1.tar.gz", "has_sig": false, "md5_digest": "5af49895f7a8bf25c7c90f8ca9967f6d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14671, "upload_time": "2020-03-14T16:01:57", "upload_time_iso_8601": "2020-03-14T16:01:57.954314Z", "url": "https://files.pythonhosted.org/packages/ca/9d/bc39c428a1b5d2c5998b05a383a5a267b1e53a7572e9c7aedd4aa2c8bcd2/pop-config-5.1.tar.gz", "yanked": false}], "5.2": [{"comment_text": "", "digests": {"md5": "3e0930b41fe25ea02aa5a4e24c402275", "sha256": "805ce66364dd9da1913dec5df194bd6ebbd7dfc1b2b5acd6c37b18af167d1d9f"}, "downloads": -1, "filename": "pop_config-5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3e0930b41fe25ea02aa5a4e24c402275", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16371, "upload_time": "2020-03-16T16:37:47", "upload_time_iso_8601": "2020-03-16T16:37:47.219650Z", "url": "https://files.pythonhosted.org/packages/99/fc/b466e387b3b39901bd56e676a7f3e6317a18533e6f015e9bc3449535fb99/pop_config-5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1869d66b544f16735b4f6e90c3f60238", "sha256": "3ee8306d62a4b786e62d57e3f0a418860161d487321bf8cdb4eb2c6d1f4f1d7b"}, "downloads": -1, "filename": "pop-config-5.2.tar.gz", "has_sig": false, "md5_digest": "1869d66b544f16735b4f6e90c3f60238", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14784, "upload_time": "2020-03-16T16:37:48", "upload_time_iso_8601": "2020-03-16T16:37:48.859566Z", "url": "https://files.pythonhosted.org/packages/76/1b/5fe691bd40529b73f76b01e03af36f0d82c38688a75b720e6154c6854517/pop-config-5.2.tar.gz", "yanked": false}], "5.3": [{"comment_text": "", "digests": {"md5": "613edbcaee7ae55e94bc85f6b31049c8", "sha256": "c8d6a6746ce3403960e7fac947537d78fc0673e8afdc9a2136791fb13960fa78"}, "downloads": -1, "filename": "pop_config-5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "613edbcaee7ae55e94bc85f6b31049c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16359, "upload_time": "2020-04-01T18:48:07", "upload_time_iso_8601": "2020-04-01T18:48:07.379136Z", "url": "https://files.pythonhosted.org/packages/ce/47/e15e527a74d612b26fd4a54e2d6cab238234a5d91689cbbde9e7230a5bbc/pop_config-5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "381b5d19362d3f8c00d86084a4941ca3", "sha256": "aa55a99083184e0f0358ec53ff52e191d039e3d448fa2587ce864f892e46d2e9"}, "downloads": -1, "filename": "pop-config-5.3.tar.gz", "has_sig": false, "md5_digest": "381b5d19362d3f8c00d86084a4941ca3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14767, "upload_time": "2020-04-01T18:48:08", "upload_time_iso_8601": "2020-04-01T18:48:08.860617Z", "url": "https://files.pythonhosted.org/packages/24/c5/6aa9d72c49d9148318b31d8067db379a3f4e67394822e2bdb4057e71119b/pop-config-5.3.tar.gz", "yanked": false}], "5.4": [{"comment_text": "", "digests": {"md5": "fb52f7ebca0d42f12bc0683ffe0d0736", "sha256": "b4c944b34a8a87d1a57dd43fc2f3fafe3079104641930570b0aa9b644d0ddcfa"}, "downloads": -1, "filename": "pop_config-5.4-py3-none-any.whl", "has_sig": false, "md5_digest": "fb52f7ebca0d42f12bc0683ffe0d0736", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16368, "upload_time": "2020-04-07T17:03:13", "upload_time_iso_8601": "2020-04-07T17:03:13.608576Z", "url": "https://files.pythonhosted.org/packages/f1/7e/2d2129e9949a970b2ee36a6aa4ae40c0574bb5a36a5a0a74cfbf522b2cc3/pop_config-5.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad7ebf16f0cf368ca46127c0d8a9dd15", "sha256": "c416127be6296d9434b4b92ab8c5b238b50c8ce7dcc056dd07b677287a5bed90"}, "downloads": -1, "filename": "pop-config-5.4.tar.gz", "has_sig": false, "md5_digest": "ad7ebf16f0cf368ca46127c0d8a9dd15", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14792, "upload_time": "2020-04-07T17:03:15", "upload_time_iso_8601": "2020-04-07T17:03:15.297329Z", "url": "https://files.pythonhosted.org/packages/0c/3e/90e63aa5fee7fb9639f751940142e98334cfca610cbda34c07a1d78ea16b/pop-config-5.4.tar.gz", "yanked": false}], "5.5": [{"comment_text": "", "digests": {"md5": "b66357308b7c6fc36269905d68aeb02b", "sha256": "07862de62ff879e54093a9a30a989fc11c730e32d37b2dd5e091b0f038615a5c"}, "downloads": -1, "filename": "pop_config-5.5-py3-none-any.whl", "has_sig": false, "md5_digest": "b66357308b7c6fc36269905d68aeb02b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16336, "upload_time": "2020-04-07T17:24:00", "upload_time_iso_8601": "2020-04-07T17:24:00.993947Z", "url": "https://files.pythonhosted.org/packages/b8/aa/443ca2f6fc848f77b58ec86d8a91bc0b619b756d5cef7040e8c909b5e5d1/pop_config-5.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "64d7e2f48b2a97b704379224b4b1c572", "sha256": "eff5bd1cfd98281720cd25cb41c62a5c0316d2d6e941d9114151b75c45b1ba3a"}, "downloads": -1, "filename": "pop-config-5.5.tar.gz", "has_sig": false, "md5_digest": "64d7e2f48b2a97b704379224b4b1c572", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14751, "upload_time": "2020-04-07T17:24:02", "upload_time_iso_8601": "2020-04-07T17:24:02.639844Z", "url": "https://files.pythonhosted.org/packages/3a/e1/5ced792a9ea3b991b313231a66cfee8ab5a5efed0cd294e4a0d44782ee4e/pop-config-5.5.tar.gz", "yanked": false}], "5.6": [{"comment_text": "", "digests": {"md5": "540eaa71b334bfb58b3a79a8e81e970d", "sha256": "6a5091b30bcaa4218356f2f0afaa61c008189f59f0ba3dcaef14fbfc57d086ab"}, "downloads": -1, "filename": "pop_config-5.6-py3-none-any.whl", "has_sig": false, "md5_digest": "540eaa71b334bfb58b3a79a8e81e970d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16366, "upload_time": "2020-05-01T14:37:28", "upload_time_iso_8601": "2020-05-01T14:37:28.324885Z", "url": "https://files.pythonhosted.org/packages/09/89/761ee5a40c147a42d509b07020dafa838adcc9d361d5fcc857f1ad843364/pop_config-5.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6d348ce3767eb93d036f4ae8530b1c4", "sha256": "1203d6f831a251b625b186a3b2e75bcc802584958785ea8cf4c0215d91b012c8"}, "downloads": -1, "filename": "pop-config-5.6.tar.gz", "has_sig": false, "md5_digest": "b6d348ce3767eb93d036f4ae8530b1c4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14841, "upload_time": "2020-05-01T14:37:29", "upload_time_iso_8601": "2020-05-01T14:37:29.538806Z", "url": "https://files.pythonhosted.org/packages/a7/df/390f0ed066a08a4f2c7757a88a3b65b844a56ffbb981f52438fee96c3705/pop-config-5.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "540eaa71b334bfb58b3a79a8e81e970d", "sha256": "6a5091b30bcaa4218356f2f0afaa61c008189f59f0ba3dcaef14fbfc57d086ab"}, "downloads": -1, "filename": "pop_config-5.6-py3-none-any.whl", "has_sig": false, "md5_digest": "540eaa71b334bfb58b3a79a8e81e970d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16366, "upload_time": "2020-05-01T14:37:28", "upload_time_iso_8601": "2020-05-01T14:37:28.324885Z", "url": "https://files.pythonhosted.org/packages/09/89/761ee5a40c147a42d509b07020dafa838adcc9d361d5fcc857f1ad843364/pop_config-5.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6d348ce3767eb93d036f4ae8530b1c4", "sha256": "1203d6f831a251b625b186a3b2e75bcc802584958785ea8cf4c0215d91b012c8"}, "downloads": -1, "filename": "pop-config-5.6.tar.gz", "has_sig": false, "md5_digest": "b6d348ce3767eb93d036f4ae8530b1c4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14841, "upload_time": "2020-05-01T14:37:29", "upload_time_iso_8601": "2020-05-01T14:37:29.538806Z", "url": "https://files.pythonhosted.org/packages/a7/df/390f0ed066a08a4f2c7757a88a3b65b844a56ffbb981f52438fee96c3705/pop-config-5.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:51:35 2020"}