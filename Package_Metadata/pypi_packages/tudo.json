{"info": {"author": "Markus M\u00fcller, Martin Zehendner", "author_email": "mail@muellermarkus.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Office/Business :: Scheduling"], "description": "TUDO\n====\n\nA simple command-line based TODO-app in Python\n\nCommands\n--------\n\n- ``main.py add <task_description> <...>``: Add new tasks. Default priorities: Important = No/0, Urgent = No/0\n- ``main.py add --prio <task_description> <important_val> <urgent_val> <...>``: Add new tasks with non-default priorities (possible priority values: 0 => No, 1 => Yes)\n- ``main.py list``: List all non-finished tasks\n- ``main.py list all``: List all tasks including the finished ones\n- ``main.py list --prio [all] <important_val> <urgent_val>``: List tasks, filter for specific important/urgent values\n- ``main.py rm <task_id> <...>``: Delete tasks\n- ``main.py done <task_id> <...>``: Set a task as done/finished\n- ``main.py stats``: Display number of finished tasks per day\n- ``main.py eisenhower``: Display open tasks in an Eisenhower matrix according to set priorities (see https://en.wikipedia.org/wiki/Time_management#The_Eisenhower_Method)\n\nHow to continue development (tested on Windows)\n-----------------------------------------------\n\n1. Navigate to the root directory of this repository\n2. ``pip install -e .``\n3. Now, you can use ``tudo list`` etc. while still applying changes to the underlaying source code\n4. To uninstall, use ``pip uninstall tudo``\n\nHow to publish to PyPi (already done)\n-------------------------------------\n\n#. Register on PyPi (or, for tests, on TestPyPi) the  and create a personal ``.pypirc`` file in your HOME directory (see https://packaging.python.org/distributing/#create-an-account)\n#. Register the package with ``python setup.py register -r <testpypi|pypi>`` (see https://packaging.python.org/distributing/#register-your-project)\n\n  a. **Attention**: This does not work with the live PyPi version (``Server response (410): This API is no longer supported, instead simply upload the file.``). Using the register form (https://pypi.python.org/pypi?%3Aaction=submit_form) works.\n\n#. Upload the package with ``twine upload dist/* -r <testpypi|pipy>`` (see https://wiki.python.org/moin/TestPyPI)\n#. Install the package with ``pip install [-i https://testpypi.python.org/pypi] tudo``\n#. To uninstall, use ``pip uninstall tudo``\n\nAlso probably a good guide: http://peterdowns.com/posts/first-time-with-pypi.html\n\nOpen issues\n-----------\n\n- ``database.db`` is currently created & saved in the same directory from where the ``tudo`` command was executed (leads to multiple ``database.db`` files). But our app should always use the same database location! (What is a good location? The user directory?)\n- Editing tasks", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Sukram21/TUDO", "keywords": "todo organization command-line", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tudo", "package_url": "https://pypi.org/project/tudo/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tudo/", "project_urls": {"Homepage": "https://github.com/Sukram21/TUDO"}, "release_url": "https://pypi.org/project/tudo/0.1.0.dev6/", "requires_dist": ["pytz", "tabulate"], "requires_python": "", "summary": "A simple command-line based TODO-app in Python", "version": "0.1.0.dev6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A simple command-line based TODO-app in Python</p>\n<div id=\"commands\">\n<h2>Commands</h2>\n<ul>\n<li><tt>main.py add &lt;task_description&gt; <span class=\"pre\">&lt;...&gt;</span></tt>: Add new tasks. Default priorities: Important = No/0, Urgent = No/0</li>\n<li><tt>main.py add <span class=\"pre\">--prio</span> &lt;task_description&gt; &lt;important_val&gt; &lt;urgent_val&gt; <span class=\"pre\">&lt;...&gt;</span></tt>: Add new tasks with non-default priorities (possible priority values: 0 =&gt; No, 1 =&gt; Yes)</li>\n<li><tt>main.py list</tt>: List all non-finished tasks</li>\n<li><tt>main.py list all</tt>: List all tasks including the finished ones</li>\n<li><tt>main.py list <span class=\"pre\">--prio</span> [all] &lt;important_val&gt; &lt;urgent_val&gt;</tt>: List tasks, filter for specific important/urgent values</li>\n<li><tt>main.py rm &lt;task_id&gt; <span class=\"pre\">&lt;...&gt;</span></tt>: Delete tasks</li>\n<li><tt>main.py done &lt;task_id&gt; <span class=\"pre\">&lt;...&gt;</span></tt>: Set a task as done/finished</li>\n<li><tt>main.py stats</tt>: Display number of finished tasks per day</li>\n<li><tt>main.py eisenhower</tt>: Display open tasks in an Eisenhower matrix according to set priorities (see <a href=\"https://en.wikipedia.org/wiki/Time_management#The_Eisenhower_Method\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Time_management#The_Eisenhower_Method</a>)</li>\n</ul>\n</div>\n<div id=\"how-to-continue-development-tested-on-windows\">\n<h2>How to continue development (tested on Windows)</h2>\n<ol>\n<li>Navigate to the root directory of this repository</li>\n<li><tt>pip install <span class=\"pre\">-e</span> .</tt></li>\n<li>Now, you can use <tt>tudo list</tt> etc. while still applying changes to the underlaying source code</li>\n<li>To uninstall, use <tt>pip uninstall tudo</tt></li>\n</ol>\n</div>\n<div id=\"how-to-publish-to-pypi-already-done\">\n<h2>How to publish to PyPi (already done)</h2>\n<ol>\n<li>Register on PyPi (or, for tests, on TestPyPi) the  and create a personal <tt>.pypirc</tt> file in your HOME directory (see <a href=\"https://packaging.python.org/distributing/#create-an-account\" rel=\"nofollow\">https://packaging.python.org/distributing/#create-an-account</a>)</li>\n<li>Register the package with <tt>python setup.py register <span class=\"pre\">-r</span> &lt;testpypi|pypi&gt;</tt> (see <a href=\"https://packaging.python.org/distributing/#register-your-project\" rel=\"nofollow\">https://packaging.python.org/distributing/#register-your-project</a>)</li>\n</ol>\n<blockquote>\n<ol>\n<li><strong>Attention</strong>: This does not work with the live PyPi version (<tt>Server response (410): This API is no longer supported, instead simply upload the file.</tt>). Using the register form (<a href=\"https://pypi.python.org/pypi?%3Aaction=submit_form\" rel=\"nofollow\">https://pypi.python.org/pypi?%3Aaction=submit_form</a>) works.</li>\n</ol>\n</blockquote>\n<ol>\n<li>Upload the package with <tt>twine upload dist/* <span class=\"pre\">-r</span> &lt;testpypi|pipy&gt;</tt> (see <a href=\"https://wiki.python.org/moin/TestPyPI\" rel=\"nofollow\">https://wiki.python.org/moin/TestPyPI</a>)</li>\n<li>Install the package with <tt>pip install <span class=\"pre\">[-i</span> <span class=\"pre\">https://testpypi.python.org/pypi]</span> tudo</tt></li>\n<li>To uninstall, use <tt>pip uninstall tudo</tt></li>\n</ol>\n<p>Also probably a good guide: <a href=\"http://peterdowns.com/posts/first-time-with-pypi.html\" rel=\"nofollow\">http://peterdowns.com/posts/first-time-with-pypi.html</a></p>\n</div>\n<div id=\"open-issues\">\n<h2>Open issues</h2>\n<ul>\n<li><tt>database.db</tt> is currently created &amp; saved in the same directory from where the <tt>tudo</tt> command was executed (leads to multiple <tt>database.db</tt> files). But our app should always use the same database location! (What is a good location? The user directory?)</li>\n<li>Editing tasks</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2546292, "releases": {"0.1.0.dev1": [], "0.1.0.dev2": [{"comment_text": "", "digests": {"md5": "67cb5741d64d0c8f82f4c6f9fa8ef3bd", "sha256": "3712f7fdffdf23ff463f154c912b5d8fd6855e9147b1e685f0f10f4792854fda"}, "downloads": -1, "filename": "tudo-0.1.0.dev2-py3-none-any.whl", "has_sig": false, "md5_digest": "67cb5741d64d0c8f82f4c6f9fa8ef3bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5515, "upload_time": "2016-12-30T15:56:06", "upload_time_iso_8601": "2016-12-30T15:56:06.850317Z", "url": "https://files.pythonhosted.org/packages/00/0c/4d88a11ce1b2a26c48e12d7f838c30cb56d2fbc38d5057046e2f0007e6c2/tudo-0.1.0.dev2-py3-none-any.whl", "yanked": false}], "0.1.0.dev3": [{"comment_text": "", "digests": {"md5": "3df1af9d3429c6ce7f9d0af9e27d0180", "sha256": "0d8b032008d50ba05c3060c06658fd861be9ddf9db42a3583b6f13e9d8a6874a"}, "downloads": -1, "filename": "tudo-0.1.0.dev3-py3-none-any.whl", "has_sig": false, "md5_digest": "3df1af9d3429c6ce7f9d0af9e27d0180", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5518, "upload_time": "2016-12-30T16:00:38", "upload_time_iso_8601": "2016-12-30T16:00:38.943550Z", "url": "https://files.pythonhosted.org/packages/94/0c/e5418991b01ff093e89e8bea62460267e888e1aad1f4cac7f2eab4f859f2/tudo-0.1.0.dev3-py3-none-any.whl", "yanked": false}], "0.1.0.dev4": [{"comment_text": "", "digests": {"md5": "f52537975c6c8813387d219094909122", "sha256": "732281f35d4085aa120e8b9e3a31680c48c2626e703c9e8e17390d60381265bd"}, "downloads": -1, "filename": "tudo-0.1.0.dev4-py3-none-any.whl", "has_sig": false, "md5_digest": "f52537975c6c8813387d219094909122", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5518, "upload_time": "2016-12-30T16:07:10", "upload_time_iso_8601": "2016-12-30T16:07:10.102731Z", "url": "https://files.pythonhosted.org/packages/8f/38/cb3e8957dab0612eaf7e35e3cd7e07f013b4572df9236cff91fea543b109/tudo-0.1.0.dev4-py3-none-any.whl", "yanked": false}], "0.1.0.dev5": [{"comment_text": "", "digests": {"md5": "0571d3fd45e5560445995ed1c78305f7", "sha256": "7620e38ae65a8d64656bb1853c72becbff7ca18e4ee8a8bfb1aee47385f1bf3a"}, "downloads": -1, "filename": "tudo-0.1.0.dev5-py3-none-any.whl", "has_sig": false, "md5_digest": "0571d3fd45e5560445995ed1c78305f7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5519, "upload_time": "2016-12-30T16:08:19", "upload_time_iso_8601": "2016-12-30T16:08:19.960878Z", "url": "https://files.pythonhosted.org/packages/67/bf/fc08624bdaf943f5ae47e7e8971fce884df483e7d5e48fbb524f2284f8a2/tudo-0.1.0.dev5-py3-none-any.whl", "yanked": false}], "0.1.0.dev6": [{"comment_text": "", "digests": {"md5": "8a8b3cf55a65427c7096dd9363fe4e8a", "sha256": "9fea19245964f3e6d36056f248b3a0b066246942d39646c7ac998a82e3c0383a"}, "downloads": -1, "filename": "tudo-0.1.0.dev6-py3-none-any.whl", "has_sig": false, "md5_digest": "8a8b3cf55a65427c7096dd9363fe4e8a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8059, "upload_time": "2016-12-30T16:13:46", "upload_time_iso_8601": "2016-12-30T16:13:46.234901Z", "url": "https://files.pythonhosted.org/packages/8f/fb/e1457590a3411c592553d2e74c39e4fdb37da9ca6da2eb025e431a1605a2/tudo-0.1.0.dev6-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8a8b3cf55a65427c7096dd9363fe4e8a", "sha256": "9fea19245964f3e6d36056f248b3a0b066246942d39646c7ac998a82e3c0383a"}, "downloads": -1, "filename": "tudo-0.1.0.dev6-py3-none-any.whl", "has_sig": false, "md5_digest": "8a8b3cf55a65427c7096dd9363fe4e8a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8059, "upload_time": "2016-12-30T16:13:46", "upload_time_iso_8601": "2016-12-30T16:13:46.234901Z", "url": "https://files.pythonhosted.org/packages/8f/fb/e1457590a3411c592553d2e74c39e4fdb37da9ca6da2eb025e431a1605a2/tudo-0.1.0.dev6-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:44:52 2020"}