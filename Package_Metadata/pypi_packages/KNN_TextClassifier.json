{"info": {"author": "Arnold_Gaius", "author_email": "jiangcmd@qq.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7"], "description": "KNN_TextClassifier\r\n------------------------------\r\n\r\nKNN_TextClassifier\r\n\r\n\r\nSample Usage\r\n````````````\r\n.. code:: python\r\n\r\n\t>>> import KNN_TextClassifier\r\n\t\t#load random Data,Labels\r\n\t>>> dataMatrix,labels = KNN_TextClassifier.loadData(feature_num = 4,rows = 10)\r\n\t\t#norm Data reduce influence of high ranges\r\n\t>>> normDataSet = KNN_TextClassifier.norm(dataMatrix)\r\n\r\n\t\t#predict K should be odd to avoid voting result like {('A',2),('B',2)} difficult choice. \r\n\t\t#Parameter format classify(testData,TrainData,TrainData_Labels,K) \r\n\t\t'''\r\n\t\t\ttestData and TrainData should be 2-D list. row represents a text data. Columns represent feature values.\r\n\t\t\tTrainData_Labels should be a list like ['A','B','C'] an element represents a row of TrainData's class.\r\n\t\t\tK should be odd as I said before.\r\n\t\t'''        \r\n\t>>> print KNN_TextClassifier.classify([[1,2,3,4],[2],[3]], dataMatrix, labels, K=3)\r\n\t\t['C', 'C', 'C']\r\n    \r\n\t\t#predict\r\n\t>>> print KNN_TextClassifier.classify([['\u5929\u6c14\u597d','2','3','4'],['2'],['3']], dataMatrix, labels, K=3)\r\n\t\t['C', 'A', 'C']\r\n    \r\n\t\t#get transformed vector\r\n\t>>> vector,vocabList = KNN_TextClassifier.word2VectorMatrix([['1','2','3','4'],['2'],['3']])\r\n\t>>> print vector\r\n\t\t[[ 1.  1.  1.  1.]\r\n\t\t[ 0.  0.  1.  0.]\r\n\t\t[ 0.  1.  0.  0.]]\r\n    \r\n\t\t#get transformed vocabList\r\n\t>>> print vocabList\r\n\t\t['1', '3', '2', '4']\r\n\r\nInstallation \r\n```````````` \r\n.. code:: bash \r\n\r\n    $ pip install KNN_TextClassifier\r\n\r\nLinks \r\n````` \r\n\r\n* `Code on Github <https://github.com/ArnoldGaius/KNN_TextClassifier>`_", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ArnoldGaius/KNN_TextClassifier", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "KNN_TextClassifier", "package_url": "https://pypi.org/project/KNN_TextClassifier/", "platform": "", "project_url": "https://pypi.org/project/KNN_TextClassifier/", "project_urls": {"Homepage": "https://github.com/ArnoldGaius/KNN_TextClassifier"}, "release_url": "https://pypi.org/project/KNN_TextClassifier/0.0.0/", "requires_dist": null, "requires_python": "", "summary": "KNN_TextClassifier", "version": "0.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>KNN_TextClassifier</p>\n<div id=\"sample-usage\">\n<h2>Sample Usage</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">KNN_TextClassifier</span>\n        <span class=\"c1\">#load random Data,Labels</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dataMatrix</span><span class=\"p\">,</span><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">KNN_TextClassifier</span><span class=\"o\">.</span><span class=\"n\">loadData</span><span class=\"p\">(</span><span class=\"n\">feature_num</span> <span class=\"o\">=</span> <span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"n\">rows</span> <span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n        <span class=\"c1\">#norm Data reduce influence of high ranges</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">normDataSet</span> <span class=\"o\">=</span> <span class=\"n\">KNN_TextClassifier</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">dataMatrix</span><span class=\"p\">)</span>\n\n        <span class=\"c1\">#predict K should be odd to avoid voting result like {('A',2),('B',2)} difficult choice.</span>\n        <span class=\"c1\">#Parameter format classify(testData,TrainData,TrainData_Labels,K)</span>\n        <span class=\"sd\">'''\n                testData and TrainData should be 2-D list. row represents a text data. Columns represent feature values.\n                TrainData_Labels should be a list like ['A','B','C'] an element represents a row of TrainData's class.\n                K should be odd as I said before.\n        '''</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span> <span class=\"n\">KNN_TextClassifier</span><span class=\"o\">.</span><span class=\"n\">classify</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">],[</span><span class=\"mi\">2</span><span class=\"p\">],[</span><span class=\"mi\">3</span><span class=\"p\">]],</span> <span class=\"n\">dataMatrix</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">K</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n        <span class=\"p\">[</span><span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'C'</span><span class=\"p\">]</span>\n\n        <span class=\"c1\">#predict</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span> <span class=\"n\">KNN_TextClassifier</span><span class=\"o\">.</span><span class=\"n\">classify</span><span class=\"p\">([[</span><span class=\"s1\">'\u5929\u6c14\u597d'</span><span class=\"p\">,</span><span class=\"s1\">'2'</span><span class=\"p\">,</span><span class=\"s1\">'3'</span><span class=\"p\">,</span><span class=\"s1\">'4'</span><span class=\"p\">],[</span><span class=\"s1\">'2'</span><span class=\"p\">],[</span><span class=\"s1\">'3'</span><span class=\"p\">]],</span> <span class=\"n\">dataMatrix</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">K</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n        <span class=\"p\">[</span><span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"s1\">'C'</span><span class=\"p\">]</span>\n\n        <span class=\"c1\">#get transformed vector</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">vector</span><span class=\"p\">,</span><span class=\"n\">vocabList</span> <span class=\"o\">=</span> <span class=\"n\">KNN_TextClassifier</span><span class=\"o\">.</span><span class=\"n\">word2VectorMatrix</span><span class=\"p\">([[</span><span class=\"s1\">'1'</span><span class=\"p\">,</span><span class=\"s1\">'2'</span><span class=\"p\">,</span><span class=\"s1\">'3'</span><span class=\"p\">,</span><span class=\"s1\">'4'</span><span class=\"p\">],[</span><span class=\"s1\">'2'</span><span class=\"p\">],[</span><span class=\"s1\">'3'</span><span class=\"p\">]])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span> <span class=\"n\">vector</span>\n        <span class=\"p\">[[</span> <span class=\"mf\">1.</span>  <span class=\"mf\">1.</span>  <span class=\"mf\">1.</span>  <span class=\"mf\">1.</span><span class=\"p\">]</span>\n        <span class=\"p\">[</span> <span class=\"mf\">0.</span>  <span class=\"mf\">0.</span>  <span class=\"mf\">1.</span>  <span class=\"mf\">0.</span><span class=\"p\">]</span>\n        <span class=\"p\">[</span> <span class=\"mf\">0.</span>  <span class=\"mf\">1.</span>  <span class=\"mf\">0.</span>  <span class=\"mf\">0.</span><span class=\"p\">]]</span>\n\n        <span class=\"c1\">#get transformed vocabList</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span> <span class=\"n\">vocabList</span>\n        <span class=\"p\">[</span><span class=\"s1\">'1'</span><span class=\"p\">,</span> <span class=\"s1\">'3'</span><span class=\"p\">,</span> <span class=\"s1\">'2'</span><span class=\"p\">,</span> <span class=\"s1\">'4'</span><span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install KNN_TextClassifier\n</pre>\n</div>\n<div id=\"links\">\n<h2>Links</h2>\n<ul>\n<li><a href=\"https://github.com/ArnoldGaius/KNN_TextClassifier\" rel=\"nofollow\">Code on Github</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2941267, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "8c554fd0030cfc2aa3d460d8e47f4004", "sha256": "963f04c49f7e5f560a6225ef524d295cba2829922d0f713abef3c30447307930"}, "downloads": -1, "filename": "KNN_TextClassifier-0.0.0.tar.gz", "has_sig": false, "md5_digest": "8c554fd0030cfc2aa3d460d8e47f4004", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2574, "upload_time": "2017-06-11T02:12:40", "upload_time_iso_8601": "2017-06-11T02:12:40.989609Z", "url": "https://files.pythonhosted.org/packages/13/47/c3b59f905f265d7f8b6c59888446a4095ab88fb27b1cb1a87904c6a02e2d/KNN_TextClassifier-0.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8c554fd0030cfc2aa3d460d8e47f4004", "sha256": "963f04c49f7e5f560a6225ef524d295cba2829922d0f713abef3c30447307930"}, "downloads": -1, "filename": "KNN_TextClassifier-0.0.0.tar.gz", "has_sig": false, "md5_digest": "8c554fd0030cfc2aa3d460d8e47f4004", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2574, "upload_time": "2017-06-11T02:12:40", "upload_time_iso_8601": "2017-06-11T02:12:40.989609Z", "url": "https://files.pythonhosted.org/packages/13/47/c3b59f905f265d7f8b6c59888446a4095ab88fb27b1cb1a87904c6a02e2d/KNN_TextClassifier-0.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:13 2020"}