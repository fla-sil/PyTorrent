{"info": {"author": "Peter Demin", "author_email": "peterdemin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "=================================\nreshell - Reverse shell in Python\n=================================\n\nDeployment debugging with hacker's tools.\n\nInstall\n-------\n\n.. code:: bash\n\n    pip install reshell\n\nUsage\n-----\n\nOn the host launch receiver with\n\n.. code:: bash\n\n    $ nc -lvp 12345\n\nOn destination host launch reverse shell:\n\n.. code:: bash\n\n    $ reshell 127.0.0.1:12345\n\n(or with env variable instead of argument):\n\n.. code:: bash\n\n    $ export RESHELL_TARGET=127.0.0.1:12345\n    $ reshell\n\nTeamCity Command Line Build Step:\n\n.. code:: bash\n\n    virtualenv .env\n    . .env/bin/activate\n    pip install reshell\n    reshell\n\nMake sure you add ``env.RESHELL_TARGET`` to Build Parameters.\n\n``reshell`` will try to connect to it's target every 10 seconds for 10 minutes.\nAfter 10 minutes it will exit.\n\nTerminology\n-----------\n\nSince not all developers are familiar with hacker's technics,\nI'll briefly describe what is this all about.\n\nWhen you open terminal on your machine, it's **local** shell.\n\nWhen you run SSH to connect to remote machine, it's **remote** shell.\n\nWhen you listen on port on your machine and make remote machine to connect to you, it's **reverse** shell.\n\nEthics\n------\n\nThis tool is **not** usefull **for** actual **hacking**.\nSince you already have an ability to execute arbitrary code on remote machine,\nit won't buy anything in terms of access.\nYou just need a shell as an *arbitrary code*.\n\nReverse benefits\n----------------\n\nReverse shells have some advantages over remote shells:\n\n1. **Bypass firewall** - incoming connections are often blocked on unused ports.\n   Whereas outgoing connections are usually allowed.\n2. **More secure** - instead of inviting everyone to backdoor, reverse shell communicates with single host:port\n3. **Destination can be unknown** - even inaccessible.\n   It's the host machine that must be accessible from the destination.\n   Not the other way around.\n\nBackground (use case)\n---------------------\n\nImagine *crazy* environment.\nYou can deploy Python application to *cloudy* remote host and have it running.\nBut you don't have SSH access and can't debug it or see startup logs.\nAlso you don't know in advance what will be network address of the remote host.\n\nBut you have a dev machine in the same network, where you are free to run anything:\n1. So you launch server on dev machine and deploy reverse shell through regular deployment process.\n2. Once the application is deployed, it will connect to the server and turn itself into bash.\n3. ... You can poke around and figure out what's wrong ...\n4. PROFIT!\n\nBonus (Pro tips)\n----------------\n\n``nc`` is not the most convinient shell, you would want to use in day job.\nYou won't have access to shortcuts, such as up arrow, or Ctrl-P for previous command.\nIt doesn't expand tabs in-place, but does it after command is sent.\nFor example you could write:\n\n.. code:: console\n\n    $ ls /us<TAB>loc<TAB>li\n    ls /usr/local/lib\n\nSpecial caution should be taken when dealing with Keyboard Interrupt.\nIf you press ``Ctrl+C`` inside ``nc`` session, it will be caught by ``nc`` process\nitself and though will not be sent to remote machine.\nInstead you can place a signal trap for SIGINT before launching ``nc``:\n\n.. code:: console\n\n    $ trap '' INT\n    $ nc -lvp 12345\n\nTo send ``Ctrl+C`` to remote machine (to iterrupt current process)\nyou can use combination ``Ctrl+V Ctrl+C Return``. ``Ctrl+V`` says bash to send following symbol as-is,\nwithout processing it. ``Return`` is needed to actually send ``^C`` command.\n\nWhen finished, terminate remote session with:\n\n.. code:: console\n\n    $ exit\n\n\nHistory\n=========\n\n0.1.0 (2015-02-30)\n---------------------\n\n* First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/peterdemin/reshell", "keywords": "reshell", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "reshell", "package_url": "https://pypi.org/project/reshell/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/reshell/", "project_urls": {"Homepage": "https://github.com/peterdemin/reshell"}, "release_url": "https://pypi.org/project/reshell/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Python reverse bash shell", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Deployment debugging with hacker\u2019s tools.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip install reshell\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>On the host launch receiver with</p>\n<pre>$ nc -lvp <span class=\"m\">12345</span>\n</pre>\n<p>On destination host launch reverse shell:</p>\n<pre>$ reshell <span class=\"m\">127</span>.0.0.1:12345\n</pre>\n<p>(or with env variable instead of argument):</p>\n<pre>$ <span class=\"nb\">export</span> <span class=\"nv\">RESHELL_TARGET</span><span class=\"o\">=</span><span class=\"m\">127</span>.0.0.1:12345\n$ reshell\n</pre>\n<p>TeamCity Command Line Build Step:</p>\n<pre>virtualenv .env\n. .env/bin/activate\npip install reshell\nreshell\n</pre>\n<p>Make sure you add <tt>env.RESHELL_TARGET</tt> to Build Parameters.</p>\n<p><tt>reshell</tt> will try to connect to it\u2019s target every 10 seconds for 10 minutes.\nAfter 10 minutes it will exit.</p>\n</div>\n<div id=\"terminology\">\n<h2>Terminology</h2>\n<p>Since not all developers are familiar with hacker\u2019s technics,\nI\u2019ll briefly describe what is this all about.</p>\n<p>When you open terminal on your machine, it\u2019s <strong>local</strong> shell.</p>\n<p>When you run SSH to connect to remote machine, it\u2019s <strong>remote</strong> shell.</p>\n<p>When you listen on port on your machine and make remote machine to connect to you, it\u2019s <strong>reverse</strong> shell.</p>\n</div>\n<div id=\"ethics\">\n<h2>Ethics</h2>\n<p>This tool is <strong>not</strong> usefull <strong>for</strong> actual <strong>hacking</strong>.\nSince you already have an ability to execute arbitrary code on remote machine,\nit won\u2019t buy anything in terms of access.\nYou just need a shell as an <em>arbitrary code</em>.</p>\n</div>\n<div id=\"reverse-benefits\">\n<h2>Reverse benefits</h2>\n<p>Reverse shells have some advantages over remote shells:</p>\n<ol>\n<li><strong>Bypass firewall</strong> - incoming connections are often blocked on unused ports.\nWhereas outgoing connections are usually allowed.</li>\n<li><strong>More secure</strong> - instead of inviting everyone to backdoor, reverse shell communicates with single host:port</li>\n<li><strong>Destination can be unknown</strong> - even inaccessible.\nIt\u2019s the host machine that must be accessible from the destination.\nNot the other way around.</li>\n</ol>\n</div>\n<div id=\"background-use-case\">\n<h2>Background (use case)</h2>\n<p>Imagine <em>crazy</em> environment.\nYou can deploy Python application to <em>cloudy</em> remote host and have it running.\nBut you don\u2019t have SSH access and can\u2019t debug it or see startup logs.\nAlso you don\u2019t know in advance what will be network address of the remote host.</p>\n<p>But you have a dev machine in the same network, where you are free to run anything:\n1. So you launch server on dev machine and deploy reverse shell through regular deployment process.\n2. Once the application is deployed, it will connect to the server and turn itself into bash.\n3. \u2026 You can poke around and figure out what\u2019s wrong \u2026\n4. PROFIT!</p>\n</div>\n<div id=\"bonus-pro-tips\">\n<h2>Bonus (Pro tips)</h2>\n<p><tt>nc</tt> is not the most convinient shell, you would want to use in day job.\nYou won\u2019t have access to shortcuts, such as up arrow, or Ctrl-P for previous command.\nIt doesn\u2019t expand tabs in-place, but does it after command is sent.\nFor example you could write:</p>\n<pre><span class=\"gp\">$</span> ls /us&lt;TAB&gt;loc&lt;TAB&gt;li\n<span class=\"go\">ls /usr/local/lib</span>\n</pre>\n<p>Special caution should be taken when dealing with Keyboard Interrupt.\nIf you press <tt>Ctrl+C</tt> inside <tt>nc</tt> session, it will be caught by <tt>nc</tt> process\nitself and though will not be sent to remote machine.\nInstead you can place a signal trap for SIGINT before launching <tt>nc</tt>:</p>\n<pre><span class=\"gp\">$</span> <span class=\"nb\">trap</span> <span class=\"s1\">''</span> INT\n<span class=\"gp\">$</span> nc -lvp <span class=\"m\">12345</span>\n</pre>\n<p>To send <tt>Ctrl+C</tt> to remote machine (to iterrupt current process)\nyou can use combination <tt>Ctrl+V Ctrl+C Return</tt>. <tt>Ctrl+V</tt> says bash to send following symbol as-is,\nwithout processing it. <tt>Return</tt> is needed to actually send <tt>^C</tt> command.</p>\n<p>When finished, terminate remote session with:</p>\n<pre><span class=\"gp\">$</span> <span class=\"nb\">exit</span>\n</pre>\n<div id=\"history\">\n<h3>History</h3>\n</div>\n</div>\n<div id=\"id1\">\n<h2>0.1.0 (2015-02-30)</h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2969740, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5ac9d640dbe327cd23fe5f754c5daf91", "sha256": "c68c420ce249a6e2d5857649cfc88d642aa3024e3dd511bbed3634b577ad23db"}, "downloads": -1, "filename": "reshell-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5ac9d640dbe327cd23fe5f754c5daf91", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3211, "upload_time": "2017-05-04T18:12:02", "upload_time_iso_8601": "2017-05-04T18:12:02.173691Z", "url": "https://files.pythonhosted.org/packages/fb/99/aa495d86fe9ecdd9fee57c925455eb469a4228da6925cea1f5ce89f685ab/reshell-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14dc388e0c3e2381ad1c249070deb1ef", "sha256": "7d006242be8e2d76926797980fb4ca9b6a2616f6f5565b17b85fa227c13b489d"}, "downloads": -1, "filename": "reshell-0.1.0.tar.gz", "has_sig": false, "md5_digest": "14dc388e0c3e2381ad1c249070deb1ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4587, "upload_time": "2017-05-04T18:12:03", "upload_time_iso_8601": "2017-05-04T18:12:03.782369Z", "url": "https://files.pythonhosted.org/packages/18/b9/99bdbb761f682a4389e2b8726163f04235f2b4dfb56165e1e842176ab696/reshell-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "3c0c3ed44ef883b45b01c926d4e915fe", "sha256": "d68c4cd620c711de459a2adaf44611480d72ccac71e2c694870e4a31d54c3845"}, "downloads": -1, "filename": "reshell-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3c0c3ed44ef883b45b01c926d4e915fe", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3236, "upload_time": "2017-05-04T18:40:58", "upload_time_iso_8601": "2017-05-04T18:40:58.614141Z", "url": "https://files.pythonhosted.org/packages/ae/98/f595b447f75ba0c050418ecb49d2e29e49f7f282bdcc0cd04724fee0938b/reshell-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1024307662938c7ff9eabdfbcd7589c7", "sha256": "c795881903813b418a9fabdc5de85cd217df93c8b9532e394b71db6ec96fc293"}, "downloads": -1, "filename": "reshell-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1024307662938c7ff9eabdfbcd7589c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4683, "upload_time": "2017-05-04T18:41:00", "upload_time_iso_8601": "2017-05-04T18:41:00.498198Z", "url": "https://files.pythonhosted.org/packages/00/6b/a94a397e80fe2451aaf3f7ebf4c6cbf5d2064d9b65c12f1d6580325cb92e/reshell-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a77114782c18f7317f6f8223370a195d", "sha256": "1aa12c51305962d0f803059e7068eee7e4ff84e25cf413122148b3b46c0c2350"}, "downloads": -1, "filename": "reshell-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a77114782c18f7317f6f8223370a195d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3783, "upload_time": "2017-05-04T19:35:24", "upload_time_iso_8601": "2017-05-04T19:35:24.726068Z", "url": "https://files.pythonhosted.org/packages/37/21/365ad10cdfac62c808685f92e71274e9018b8a1d485c0a4fc0a4defd53aa/reshell-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dfe4da26cebd7aba4bee34b98bbe0570", "sha256": "470002058559db7b078a0c806dcb9844c2b5929d0f729415686f2ef3759168a6"}, "downloads": -1, "filename": "reshell-0.1.2.tar.gz", "has_sig": false, "md5_digest": "dfe4da26cebd7aba4bee34b98bbe0570", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4996, "upload_time": "2017-05-04T19:35:26", "upload_time_iso_8601": "2017-05-04T19:35:26.112614Z", "url": "https://files.pythonhosted.org/packages/c1/94/af21f13e9d38e301ada9fa0ecd18c87f504ac8c650d6717e8196da8e58f4/reshell-0.1.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "c78224bedd50e0d1499cbd4e7847fec1", "sha256": "6d3eea3f6d66567bf210914245eb9766ad2c2b8a5e63f3cc1d01bdd1ab5be9cc"}, "downloads": -1, "filename": "reshell-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c78224bedd50e0d1499cbd4e7847fec1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5081, "upload_time": "2017-05-05T14:05:43", "upload_time_iso_8601": "2017-05-05T14:05:43.560878Z", "url": "https://files.pythonhosted.org/packages/1f/07/3434bb254c92a9f7b200dcedded6e276ea121fb21a1c7d000056ab82dc76/reshell-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6953bbf7592943aff1b422b89adf9a17", "sha256": "4a27310ab8bf05517af72d72448aee219fbc04e4ea0ca6177915ee96647dc407"}, "downloads": -1, "filename": "reshell-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6953bbf7592943aff1b422b89adf9a17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5867, "upload_time": "2017-05-05T14:05:45", "upload_time_iso_8601": "2017-05-05T14:05:45.263219Z", "url": "https://files.pythonhosted.org/packages/8b/7c/eac37b62e45da339b4bc17fdf49ed12d985f266aa145b1dc90cd4df3ce11/reshell-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "faca239ab305ad62623daafe724adb0b", "sha256": "38de44f99e14b9c55835312aac8792704cfb38bbf71b5a7328eba174a3f7a114"}, "downloads": -1, "filename": "reshell-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "faca239ab305ad62623daafe724adb0b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6233, "upload_time": "2017-06-09T19:33:59", "upload_time_iso_8601": "2017-06-09T19:33:59.695830Z", "url": "https://files.pythonhosted.org/packages/6f/08/5cb6ecca9de413042b7537fd44eccfe651d3e5e299a736ec408c0499c960/reshell-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e1a410a684e5f1af0b4b61d17a55755", "sha256": "5973698438df62378fedb068b6e79f537b10f50ba5d3d08af88ad2d0bdcb7df8"}, "downloads": -1, "filename": "reshell-1.0.1.tar.gz", "has_sig": false, "md5_digest": "8e1a410a684e5f1af0b4b61d17a55755", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6553, "upload_time": "2017-06-09T19:34:01", "upload_time_iso_8601": "2017-06-09T19:34:01.539761Z", "url": "https://files.pythonhosted.org/packages/98/59/734bba4a3426b753fb5952ba79318d677eb71d1cdf557d3a14b5a6509382/reshell-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "1dfbbd57af8cc64d256780996da8cd9d", "sha256": "2bea9935012d8bf99f1b2520ee58756806ab17a363774c96857c855944811f23"}, "downloads": -1, "filename": "reshell-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1dfbbd57af8cc64d256780996da8cd9d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6171, "upload_time": "2017-06-22T19:46:49", "upload_time_iso_8601": "2017-06-22T19:46:49.773532Z", "url": "https://files.pythonhosted.org/packages/06/10/6f0f1a455925f86d79863ceaaf3008dcf3526642e1eede143354e8427264/reshell-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4aa54c992751b31e42fa63ccec82341b", "sha256": "ba8c4735ad62311eb3461d684bb2609166c310418d2478cc46eba3db3adb6657"}, "downloads": -1, "filename": "reshell-1.0.2.tar.gz", "has_sig": false, "md5_digest": "4aa54c992751b31e42fa63ccec82341b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6406, "upload_time": "2017-06-22T19:46:51", "upload_time_iso_8601": "2017-06-22T19:46:51.832415Z", "url": "https://files.pythonhosted.org/packages/96/07/86bb41ce973b169609c66e8661d7e7d27b85b8dc6a60cddb34d4ca1f4800/reshell-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1dfbbd57af8cc64d256780996da8cd9d", "sha256": "2bea9935012d8bf99f1b2520ee58756806ab17a363774c96857c855944811f23"}, "downloads": -1, "filename": "reshell-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1dfbbd57af8cc64d256780996da8cd9d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6171, "upload_time": "2017-06-22T19:46:49", "upload_time_iso_8601": "2017-06-22T19:46:49.773532Z", "url": "https://files.pythonhosted.org/packages/06/10/6f0f1a455925f86d79863ceaaf3008dcf3526642e1eede143354e8427264/reshell-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4aa54c992751b31e42fa63ccec82341b", "sha256": "ba8c4735ad62311eb3461d684bb2609166c310418d2478cc46eba3db3adb6657"}, "downloads": -1, "filename": "reshell-1.0.2.tar.gz", "has_sig": false, "md5_digest": "4aa54c992751b31e42fa63ccec82341b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6406, "upload_time": "2017-06-22T19:46:51", "upload_time_iso_8601": "2017-06-22T19:46:51.832415Z", "url": "https://files.pythonhosted.org/packages/96/07/86bb41ce973b169609c66e8661d7e7d27b85b8dc6a60cddb34d4ca1f4800/reshell-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:52 2020"}