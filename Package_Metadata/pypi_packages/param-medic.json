{"info": {"author": "Damon May", "author_email": "damonmay@uw.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "param-medic\n===========\n\nParam-Medic breathes new life into MS/MS database searches by optimizing\nsearch parameter settings for your data.\n\nUsage:\n------\n\nparam-medic [--options] <spectra file>+\n\nDescription:\n------------\n\nIn shotgun proteomics analysis, search engines compare tandem mass\nspectrometry spectra with theoretical spectra to make peptide-spectrum\nmatches (PSMs). Proper selection of various parameters is critical to\nachieving good search performance. In particular,\n\n-  precursor mass tolerance defines the peptide candidates considered\n   for each spectrum, and\n-  fragment mass tolerance (or bin size) determines how close observed\n   and theoretical fragments must be in order to be considered a match.\n\nFor each of these parameters, too large a setting yields randomly\nhigh-scoring false PSMs, while too small excludes true PSMs.\n\nParam-Medic finds pairs of spectra that are likely to have been\ngenerated by the same peptide and uses these pairs to infer optimal\nparameters for search with Comet, Tide and other search engines. If\nmultiple input files are provided, then they will be processed together.\n\nParam-Medic may fail if too few paired spectra are discovered, or if the\nobserved precursor m/z values appear to have been artificially\nmanipulated.\n\nWith permission, Param-Medic makes use of code repurposed from Jacob\nSchreiber's `Pomegranate <https://github.com/jmschrei/pomegranate>`__\nmixture-modeling software.\n\nInput\n-----\n\n-  <spectra file>+: The path to one or more files from which to parse\n   fragmentation spectra, in .mzML or .ms2 format.\n\nOutput\n------\n\nThe program prints to standard output the estimated parameter values for\nprecursor mass tolerance (in ppm) and fragment bin size (in Th), as well\nas the standard deviations of the estimated error distributions for\nprecursor and fragment masses.\n\nOptions\n-------\n\n-  --min-precursor-mz : Minimum precursor m/z value to consider.\n-  --max-precursor-mz : Maximum precursor m/z value to consider.\n-  --min-frag-mz : Minimum fragment m/z value to consider.\n-  --max-frag-mz : Maximum fragment m/z value to consider.\n-  --min-scan-frag-peaks : Minimum fragment peaks an MS/MS scan must\n   contain to be considered.\n-  --max-precursor-delta-ppm : Maximum ppm distance between precursor\n   m/z values to consider two scans potentially generated by the same\n   peptide.\n-  --charge : Precursor charge state to consider MS/MS spectra from.\n   Ideally, this should be the most frequently occurring charge state in\n   the given data.\n-  --top-n-frag-peaks : Number of most-intense fragment peaks to\n   consider, per MS/MS spectrum.\n-  --pair-top-n-frag-peaks : Number of fragment peaks per spectrum pair\n   to be used in fragment error estimation.\n-  --min-common-frag-peaks : Number of the most-intense peaks that two\n   spectra must share in order to be potentially generated by the same\n   peptide.\n-  --max-scan-separation : Maximum number of scans two spectra can be\n   separated by in order to be considered potentially generated by the\n   same peptide.\n-  --min-peak-pairs : Minimum number of peak pairs (for precursor or\n   fragment) that must be successfully paired in order to attempt to\n   estimate error distribution.\n-  --debug : If this flag is set, verbose debug logging will be enabled.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "proteomics LC-MS/MS MS/MS spectrometry", "license": "Apache", "maintainer": null, "maintainer_email": null, "name": "param-medic", "package_url": "https://pypi.org/project/param-medic/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/param-medic/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/param-medic/0.2/", "requires_dist": null, "requires_python": null, "summary": "Param-Medic optimizes MS/MS search parameter settings.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Param-Medic breathes new life into MS/MS database searches by optimizing\nsearch parameter settings for your data.</p>\n<div id=\"usage\">\n<h2>Usage:</h2>\n<p>param-medic [\u2013options] &lt;spectra file&gt;+</p>\n</div>\n<div id=\"description\">\n<h2>Description:</h2>\n<p>In shotgun proteomics analysis, search engines compare tandem mass\nspectrometry spectra with theoretical spectra to make peptide-spectrum\nmatches (PSMs). Proper selection of various parameters is critical to\nachieving good search performance. In particular,</p>\n<ul>\n<li>precursor mass tolerance defines the peptide candidates considered\nfor each spectrum, and</li>\n<li>fragment mass tolerance (or bin size) determines how close observed\nand theoretical fragments must be in order to be considered a match.</li>\n</ul>\n<p>For each of these parameters, too large a setting yields randomly\nhigh-scoring false PSMs, while too small excludes true PSMs.</p>\n<p>Param-Medic finds pairs of spectra that are likely to have been\ngenerated by the same peptide and uses these pairs to infer optimal\nparameters for search with Comet, Tide and other search engines. If\nmultiple input files are provided, then they will be processed together.</p>\n<p>Param-Medic may fail if too few paired spectra are discovered, or if the\nobserved precursor m/z values appear to have been artificially\nmanipulated.</p>\n<p>With permission, Param-Medic makes use of code repurposed from Jacob\nSchreiber\u2019s <a href=\"https://github.com/jmschrei/pomegranate\" rel=\"nofollow\">Pomegranate</a>\nmixture-modeling software.</p>\n</div>\n<div id=\"input\">\n<h2>Input</h2>\n<ul>\n<li>&lt;spectra file&gt;+: The path to one or more files from which to parse\nfragmentation spectra, in .mzML or .ms2 format.</li>\n</ul>\n</div>\n<div id=\"output\">\n<h2>Output</h2>\n<p>The program prints to standard output the estimated parameter values for\nprecursor mass tolerance (in ppm) and fragment bin size (in Th), as well\nas the standard deviations of the estimated error distributions for\nprecursor and fragment masses.</p>\n</div>\n<div id=\"options\">\n<h2>Options</h2>\n<ul>\n<li>\u2013min-precursor-mz : Minimum precursor m/z value to consider.</li>\n<li>\u2013max-precursor-mz : Maximum precursor m/z value to consider.</li>\n<li>\u2013min-frag-mz : Minimum fragment m/z value to consider.</li>\n<li>\u2013max-frag-mz : Maximum fragment m/z value to consider.</li>\n<li>\u2013min-scan-frag-peaks : Minimum fragment peaks an MS/MS scan must\ncontain to be considered.</li>\n<li>\u2013max-precursor-delta-ppm : Maximum ppm distance between precursor\nm/z values to consider two scans potentially generated by the same\npeptide.</li>\n<li>\u2013charge : Precursor charge state to consider MS/MS spectra from.\nIdeally, this should be the most frequently occurring charge state in\nthe given data.</li>\n<li>\u2013top-n-frag-peaks : Number of most-intense fragment peaks to\nconsider, per MS/MS spectrum.</li>\n<li>\u2013pair-top-n-frag-peaks : Number of fragment peaks per spectrum pair\nto be used in fragment error estimation.</li>\n<li>\u2013min-common-frag-peaks : Number of the most-intense peaks that two\nspectra must share in order to be potentially generated by the same\npeptide.</li>\n<li>\u2013max-scan-separation : Maximum number of scans two spectra can be\nseparated by in order to be considered potentially generated by the\nsame peptide.</li>\n<li>\u2013min-peak-pairs : Minimum number of peak pairs (for precursor or\nfragment) that must be successfully paired in order to attempt to\nestimate error distribution.</li>\n<li>\u2013debug : If this flag is set, verbose debug logging will be enabled.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2453427, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "4558628c8d387f2ff5d0c2041d55dc5f", "sha256": "edf176fca2bf1c65edfd2f9dda3d363218f41adebbdefa19fd6218a6a421e88e"}, "downloads": -1, "filename": "param-medic-0.2.tar.gz", "has_sig": false, "md5_digest": "4558628c8d387f2ff5d0c2041d55dc5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21762, "upload_time": "2016-11-10T17:02:12", "upload_time_iso_8601": "2016-11-10T17:02:12.363184Z", "url": "https://files.pythonhosted.org/packages/fb/6d/bcdc39d74a3c9ab0544768ba3c3ce0703633cea3c4e44a6c2054f35bf47a/param-medic-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4558628c8d387f2ff5d0c2041d55dc5f", "sha256": "edf176fca2bf1c65edfd2f9dda3d363218f41adebbdefa19fd6218a6a421e88e"}, "downloads": -1, "filename": "param-medic-0.2.tar.gz", "has_sig": false, "md5_digest": "4558628c8d387f2ff5d0c2041d55dc5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21762, "upload_time": "2016-11-10T17:02:12", "upload_time_iso_8601": "2016-11-10T17:02:12.363184Z", "url": "https://files.pythonhosted.org/packages/fb/6d/bcdc39d74a3c9ab0544768ba3c3ce0703633cea3c4e44a6c2054f35bf47a/param-medic-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:33 2020"}