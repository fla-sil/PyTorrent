{"info": {"author": "Jon Grace-Cox", "author_email": "jongracecox@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License"], "description": "# anybadge\n\nPython project for generating badges for your projects\n\n[![pypi package](https://badge.fury.io/py/anybadge.svg)](https://pypi.org/project/anybadge)\n[![build status](https://api.travis-ci.org/jongracecox/anybadge.svg?branch=master)](https://travis-ci.org/jongracecox/anybadge)\n[![downloads](https://img.shields.io/pypi/dm/anybadge.svg)](https://pypistats.org/packages/anybadge)\n[![GitHub last commit](https://img.shields.io/github/last-commit/jongracecox/anybadge.svg)](https://github.com/jongracecox/anybadge/commits/master)\n[![GitHub](https://img.shields.io/github/license/jongracecox/anybadge.svg)](https://github.com/jongracecox/anybadge/blob/master/LICENSE)\n[![GitHub stars](https://img.shields.io/github/stars/jongracecox/anybadge.svg?style=social)](https://github.com/jongracecox/anybadge/stargazers)\n\n## Overview\n\n`anybadge` can be used to add badge generation to your Python projects,\nand also provides a command line interface.\n\nThis utility can be used to generate .svg badge images, using configurable\nthresholds for coloring the badges based on the badge value.  Many badge\ngeneration tools just provide the ability to specify the color of badge.\n`anybadge` allows you to specify the label, badge value, and color, but\nit also allows you to specify a set of thresholds that can be used to\nselect a color based on the badge value.\n\n`anybadge` may be useful for companies developing internally, or any time\nmaking calls to external badge services is not possible, or undesirable.\nIn this situation using `anybadge` will be easier than running your own\ninternal badge service.\n\nThe package can be imported into your python code, or run direct from the\ncommand line.\n\n## Demo\n\nYou can find a [repl.it demo here](https://repl.it/@JonGrace_Cox/anybadge-demo).\nThis will allow you to see what the package can do and play with it to test outputs.\n\n## Basic usage\n\n### Command line\n\nAs an example, if you want to produce a pylint badge, you may run `anybadge`\nfrom the command line like this:\n\n```bash\nanybadge -l pylint -v 2.22 -f pylint.svg 2=red 4=orange 8=yellow 10=green\n```\n\nThis would result in a badge like this:\n\n![pylint](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/pylint.svg)\n\nIn this example the label is set to \"pylint\", the value \"2.22\", and an\noutput file called \"pylint.svg\".  The thresholds are provided in pairs\nof `<value>=color`  Values can be integer or floats for ranges, and\nstring values are also supported.\n\n### Python\n\nHere is the same example implemented in Python code:\n\n```python\nimport anybadge\n\n# Define thresholds: <2=red, <4=orange <8=yellow <10=green\nthresholds = {2: 'red',\n              4: 'orange',\n              6: 'yellow',\n              10: 'green'}\n\nbadge = anybadge.Badge('pylint', 2.22, thresholds=thresholds)\n\nbadge.write_badge('pylint.svg')\n```\n\n## Installation\n\n`anybadge` is available in PyPi at https://pypi.python.org/pypi/anybadge\n\nYou can install the latest release of `anybadge` using `pip`:\n\n```bash\npip install anybadge\n```\n\nThis will install the Python package, and also make `anybadge` available\nas a command line utility.\n\n## Getting help\n\nTo get help from the command line utility, just run:\n\n```bash\nanybadge --help\n```\n\n## Command line usage\n\n### Output\n\nRunning the utility with the `--file` option will result in the .svg image being\nwritten to file.  Without the `--file` option the `.svg` file content will be\nwritten to stdout, so can be redirected to a file.\n\n### Thresholds\n\nSome thresholds have been built in to save time.  To use these thresholds you\ncan simply specify the template name instead of threshold value/color pairs.\n\n```bash\nanybadge --value=<VALUE> --file=<FILE> <TEMPLATE-NAME>\n```\n\nFor example:\n\n```bash\nanybadge --value=2.22 --file=pylint.svg pylint\n```\n\n### Colors\n\nAnybadge comes with some pre-defined colors, which can be referred to by name.  It also\nsupports the use of custom colors by using the hex representation of the color.  Both color\ntypes can be used in the `default_color`, `text_color` and `thresholds` attributes.\n\nHere is a Python example showing use of a named color and a custom color.\n\n```python\nimport anybadge\n\nbadge = anybadge.Badge(label='custom color', value='teal', default_color='teal', num_padding_chars=1)\nbadge = anybadge.Badge(label='custom color', value='teal', default_color='#008080', num_padding_chars=1)\n```\n\nAvailable named colors are:\n\n| Color Name | Hex Code | Example |\n| ---------- | -------- | ------- |\n| aqua | #00FFFF | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_aqua.svg) |\n| black | #000000 | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_black.svg) |\n| blue | #0000FF | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_blue.svg) |\n| brightred | #FF0000 | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_brightred.svg) |\n| brightyellow | #FFFF00 | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_brightyellow.svg) |\n| fuchsia | #FF00FF | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_fuchsia.svg) |\n| gray | #808080 | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_gray.svg) |\n| green | #4C1 | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_green.svg) |\n| lightgrey | #9F9F9F | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_lightgrey.svg) |\n| lime | #00FF00 | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_lime.svg) |\n| maroon | #800000 | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_maroon.svg) |\n| navy | #000080 | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_navy.svg) |\n| olive | #808000 | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_olive.svg) |\n| orange | #FE7D37 | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_orange.svg) |\n| purple | #800080 | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_purple.svg) |\n| red | #E05D44 | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_red.svg) |\n| silver | #C0C0C0 | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_silver.svg) |\n| teal | #008080 | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_teal.svg) |\n| white | #FFFFFF | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_white.svg) |\n| yellow | #DFB317 | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_yellow.svg) |\n| yellowgreen | #A4A61D | ![](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/color_yellowgreen.svg) |\n\nThis table was generated with the following code:\n\n```python\nprint(\"\"\"| Color Name | Hex Code | Example |\n| ---------- | -------- | ------- |\"\"\")\nfor color, hex in sorted(anybadge.COLORS.items()):\n    file = 'examples/color_' + color + '.svg'\n    url = 'https://cdn.rawgit.com/jongracecox/anybadge/master/' + file\n    anybadge.Badge(label='Color', value=color, default_color=color).write_badge(file, overwrite=True)\n    print(\"| {color} | {hex} | ![]({url}) |\".format(color=color, hex=hex.upper(), url=url))\n```\n\n### Examples\n\n#### Pylint using template\n```bash\nanybadge --value=2.22 --file=pylint.svg pylint\n```\n![pylint](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/pylint.svg) \n\n#### Pylint using arguments\n```bash\nanybadge -l pylint -v 2.22 -f pylint.svg 2=red 4=orange 8=yellow 10=green\n```\n![pylint](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/pylint.svg) \n\n#### Coverage using template\n```bash\nanybadge --value=65 --file=coverage.svg coverage\n``` \n![pylint](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/coverage.svg)\n\n#### Pipeline, using labeled colors\n```bash\nanybadge --label=pipeline --value=passing --file=pipeline.svg passing=green failing=red\n```\n![pylint](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/pipeline.svg)\n\n#### Badge with fixed color\n```bash\nanybadge --label=awesomeness --value=\"110%\" --file=awesomeness.svg --color=#97CA00\n```\n![pylint](https://cdn.rawgit.com/jongracecox/anybadge/master/examples/awesomeness.svg)\n\n### Options\n\nThese are the command line options:\n\n```\npositional arguments:\n  args                  Pairs of <upper>=<color>. For example 2=red 4=orange\n                        6=yellow 8=good. Read this as \"Less than 2 = red, less\n                        than 4 = orange...\".\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -l LABEL, --label LABEL\n                        The badge label.\n  -v VALUE, --value VALUE\n                        The badge value.\n  -m VALUE_FORMAT, --value-format VALUE_FORMAT\n                        Formatting string for value (e.g. \"%.2f\" for 2dp\n                        floats)\n  -c COLOR, --color COLOR\n                        For fixed color badges use --colorto specify the badge\n                        color.\n  -p PREFIX, --prefix PREFIX\n                        Optional prefix for value.\n  -s SUFFIX, --suffix SUFFIX\n                        Optional suffix for value.\n  -d PADDING, --padding PADDING\n                        Number of characters to pad on either side of the\n                        badge text.\n  -lp LABEL_PADDING, --label-padding LABEL_PADDING\n                        Number of characters to pad on either side of the\n                        badge label.\n  -vp VALUE_PADDING, --value-padding VALUE_PADDING\n                        Number of characters to pad on either side of the\n                        badge value.\n  -n FONT, --font FONT  \"DejaVu Sans,Verdana,Geneva,sans-serif\"Font name.\n                        Supported fonts: ,\"Arial, Helvetica, sans-serif\"\n  -z FONT_SIZE, --font-size FONT_SIZE\n                        Font size.\n  -t TEMPLATE, --template TEMPLATE\n                        Location of alternative template .svg file.\n  -u, --use-max         Use the maximum threshold color when the value exceeds\n                        the maximum threshold.\n  -f FILE, --file FILE  Output file location.\n  -o, --overwrite       Overwrite output file if it already exists.\n  -r TEXT_COLOR, --text-color TEXT_COLOR\n                        Text color. Single value affects both labeland value\n                        colors. A comma separated pair affects label and value\n                        text respectively.\nExamples\n--------\n\nHere are some usage specific command line examples that may save time on defining\nthresholds.\n\nPylint::\n\nanybadge.py --value=2.22 --file=pylint.svg pylint\nanybadge.py --label=pylint --value=2.22 --file=pylint.svg 2=red 4=orange 8=yellow 10=green\n\nCoverage::\n\nanybadge.py --value=65 --file=coverage.svg coverage\nanybadge.py --label=coverage --value=65 --suffix='%%' --file=coverage.svg 50=red 60=orange 80=yellow 100=green\n\nCI Pipeline::\n\nanybadge.py --label=pipeline --value=passing --file=pipeline.svg passing=green failing=red\n\nPython usage\n============\nHere is the output of ``help(anybadge)``::\n\nHelp on module anybadge:\n\nNAME\n    anybadge - anybadge\n\nDESCRIPTION\n    A Python module for generating badges for your projects, with a focus on\n    simplicity and flexibility.\n\nCLASSES\n    builtins.object\n        Badge\n\n    class Badge(builtins.object)\n     |  Badge(label, value, font_name='DejaVu Sans,Verdana,Geneva,sans-serif', font_size=11, num_padding_chars=0.5, template='<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"{{ badge width }}\" height=\"20\">\\n    <linearGradient id=\"b\" x2=\"0\" y2=\"100%\">\\n        <stop offset=\"0\" stop-color=\"#bbb\" stop-opacity=\".1\"/>\\n        <stop offset=\"1\" stop-opacity=\".1\"/>\\n    </linearGradient>\\n    <mask id=\"a\">\\n        <rect width=\"{{ badge width }}\" height=\"20\" rx=\"3\" fill=\"#fff\"/>\\n    </mask>\\n    <g mask=\"url(#a)\">\\n        <path fill=\"#555\" d=\"M0 0h{{ color split x }}v20H0z\"/>\\n        <path fill=\"{{ color }}\" d=\"M{{ color split x }} 0h{{ value width }}v20H{{ color split x }}z\"/>\\n        <path fill=\"url(#b)\" d=\"M0 0h{{ badge width }}v20H0z\"/>\\n    </g>\\n    <g fill=\"{{ label text color }}\" text-anchor=\"middle\" font-family=\"{{ font name }}\" font-size=\"{{ font size }}\">\\n        <text x=\"{{ label anchor shadow }}\" y=\"15\" fill=\"#010101\" fill-opacity=\".3\">{{ label }}</text>\\n        <text x=\"{{ label anchor }}\" y=\"14\">{{ label }}</text>\\n    </g>\\n    <g fill=\"{{ value text color }}\" text-anchor=\"middle\" font-family=\"{{ font name }}\" font-size=\"{{ font size }}\">\\n        <text x=\"{{ value anchor shadow }}\" y=\"15\" fill=\"#010101\" fill-opacity=\".3\">{{ value }}</text>\\n        <text x=\"{{ value anchor }}\" y=\"14\">{{ value }}</text>\\n    </g>\\n</svg>', value_prefix='', value_suffix='', thresholds=None, default_color='#4c1', use_max_when_value_exceeds=True, value_format=None, text_color='#fff')\n     |  \n     |  Badge class used to generate badges.\n     |  \n     |  Examples:\n     |  \n     |      Create a simple green badge:\n     |  \n     |      >>> badge = Badge('label', 123, default_color='green')\n     |  \n     |      Write a badge to file, overwriting any existing file:\n     |  \n     |      >>> badge = Badge('label', 123, default_color='green')\n     |      >>> badge.write_badge('demo.svg', overwrite=True)\n     |  \n     |      Here are a number of examples showing thresholds, since there\n     |      are certain situations that may not be obvious:\n     |  \n     |      >>> badge = Badge('pipeline', 'passing', thresholds={'passing': 'green', 'failing': 'red'})\n     |      >>> badge.badge_color\n     |      'green'\n     |  \n     |      2.32 is not <2\n     |      2.32 is < 4, so 2.32 yields orange\n     |      >>> badge = Badge('pylint', 2.32, thresholds={2: 'red',\n     |      ...                                           4: 'orange',\n     |      ...                                           8: 'yellow',\n     |      ...                                           10: 'green'})\n     |      >>> badge.badge_color\n     |      'orange'\n     |  \n     |      8 is not <8\n     |      8 is <4, so 8 yields orange\n     |      >>> badge = Badge('pylint', 8, thresholds={2: 'red',\n     |      ...                                        4: 'orange',\n     |      ...                                        8: 'yellow',\n     |      ...                                        10: 'green'})\n     |      >>> badge.badge_color\n     |      'green'\n     |  \n     |      10 is not <8, but use_max_when_value_exceeds defaults to\n     |      True, so 10 yields green\n     |      >>> badge = Badge('pylint', 11, thresholds={2: 'red',\n     |      ...                                         4: 'orange',\n     |      ...                                         8: 'yellow',\n     |      ...                                         10: 'green'})\n     |      >>> badge.badge_color\n     |      'green'\n     |  \n     |      11 is not <10, and use_max_when_value_exceeds is set to\n     |      False, so 11 yields the default color '#4c1'\n     |      >>> badge = Badge('pylint', 11, use_max_when_value_exceeds=False,\n     |      ...               thresholds={2: 'red', 4: 'orange', 8: 'yellow',\n     |      ...                           10: 'green'})\n     |      >>> badge.badge_color\n     |      '#4c1'\n     |  \n     |  Methods defined here:\n     |  \n     |  __init__(self, label, value, font_name='DejaVu Sans,Verdana,Geneva,sans-serif', font_size=11, num_padding_chars=0.5, template='<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"{{ badge width }}\" height=\"20\">\\n    <linearGradient id=\"b\" x2=\"0\" y2=\"100%\">\\n        <stop offset=\"0\" stop-color=\"#bbb\" stop-opacity=\".1\"/>\\n        <stop offset=\"1\" stop-opacity=\".1\"/>\\n    </linearGradient>\\n    <mask id=\"a\">\\n        <rect width=\"{{ badge width }}\" height=\"20\" rx=\"3\" fill=\"#fff\"/>\\n    </mask>\\n    <g mask=\"url(#a)\">\\n        <path fill=\"#555\" d=\"M0 0h{{ color split x }}v20H0z\"/>\\n        <path fill=\"{{ color }}\" d=\"M{{ color split x }} 0h{{ value width }}v20H{{ color split x }}z\"/>\\n        <path fill=\"url(#b)\" d=\"M0 0h{{ badge width }}v20H0z\"/>\\n    </g>\\n    <g fill=\"{{ label text color }}\" text-anchor=\"middle\" font-family=\"{{ font name }}\" font-size=\"{{ font size }}\">\\n        <text x=\"{{ label anchor shadow }}\" y=\"15\" fill=\"#010101\" fill-opacity=\".3\">{{ label }}</text>\\n        <text x=\"{{ label anchor }}\" y=\"14\">{{ label }}</text>\\n    </g>\\n    <g fill=\"{{ value text color }}\" text-anchor=\"middle\" font-family=\"{{ font name }}\" font-size=\"{{ font size }}\">\\n        <text x=\"{{ value anchor shadow }}\" y=\"15\" fill=\"#010101\" fill-opacity=\".3\">{{ value }}</text>\\n        <text x=\"{{ value anchor }}\" y=\"14\">{{ value }}</text>\\n    </g>\\n</svg>', value_prefix='', value_suffix='', thresholds=None, default_color='#4c1', use_max_when_value_exceeds=True, value_format=None, text_color='#fff')\n     |      Constructor for Badge class.\n     |  \n     |  get_text_width(self, text)\n     |      Return the width of text.\n     |      \n     |      Args:\n     |          text(str): Text to get the pixel width of.\n     |      \n     |      Returns:\n     |          int: Pixel width of the given text based on the badges selected font.\n     |      \n     |      This implementation assumes a fixed font of:\n     |      \n     |      font-family=\"DejaVu Sans,Verdana,Geneva,sans-serif\" font-size=\"11\"\n     |      >>> badge = Badge('x', 1, font_name='DejaVu Sans,Verdana,Geneva,sans-serif', font_size=11)\n     |      >>> badge.get_text_width('pylint')\n     |      34\n     |  \n     |  write_badge(self, file_path, overwrite=False)\n     |      Write badge to file.\n     |  \n     |  ----------------------------------------------------------------------\n     |  Data descriptors defined here:\n     |  \n     |  __dict__\n     |      dictionary for instance variables (if defined)\n     |  \n     |  __weakref__\n     |      list of weak references to the object (if defined)\n     |  \n     |  badge_color\n     |      Badge color based on the configured thresholds.\n     |      \n     |      Returns: str\n     |  \n     |  badge_color_code\n     |      Return the color code for the badge.\n     |      \n     |      Returns: str\n     |  \n     |  badge_svg_text\n     |      The badge SVG text.\n     |      \n     |      Returns: str\n     |  \n     |  badge_width\n     |      The total width of badge.\n     |      \n     |      Returns: int\n     |      \n     |      Examples:\n     |      \n     |          >>> badge = Badge('pylint', '5')\n     |          >>> badge.badge_width\n     |          103\n     |  \n     |  color_split_position\n     |      The SVG x position where the color split should occur.\n     |      \n     |      Returns: int\n     |  \n     |  font_width\n     |      Return the width multiplier for a font.\n     |      \n     |      Returns:\n     |          int: Maximum pixel width of badges selected font.\n     |      \n     |      Example:\n     |      \n     |          >>> Badge(label='x', value='1').font_width\n     |          10\n     |  \n     |  label_anchor\n     |      The SVG x position of the middle anchor for the label text.\n     |      \n     |      Returns: float\n     |  \n     |  label_anchor_shadow\n     |      The SVG x position of the label shadow anchor.\n     |      \n     |      Returns: float\n     |  \n     |  label_width\n     |      The SVG width of the label text.\n     |      \n     |      Returns: int\n     |  \n     |  value_anchor\n     |      The SVG x position of the middle anchor for the value text.\n     |      \n     |      Returns: float\n     |  \n     |  value_anchor_shadow\n     |      The SVG x position of the value shadow anchor.\n     |      \n     |      Returns: float\n     |  \n     |  value_is_float\n     |      Identify whether the value text is a float.\n     |      \n     |      Returns: bool\n     |  \n     |  value_is_int\n     |      Identify whether the value text is an int.\n     |      \n     |      Returns: bool\n     |  \n     |  value_type\n     |      The Python type associated with the value.\n     |      \n     |      Returns: type\n     |  \n     |  value_width\n     |      The SVG width of the value text.\n     |      \n     |      Returns: int\n\nFUNCTIONS\n    main()\n        Generate a badge based on command line arguments.\n\n    parse_args()\n        Parse the command line arguments.\n\nDATA\n    BADGE_TEMPLATES = {'coverage': {'label': 'coverage', 'suffix': '%', 't...\n    COLORS = {'green': '#4c1', 'lightgrey': '#9f9f9f', 'orange': '#fe7d37'...\n    DEFAULT_COLOR = '#4c1'\n    DEFAULT_FONT = 'DejaVu Sans,Verdana,Geneva,sans-serif'\n    DEFAULT_FONT_SIZE = 11\n    DEFAULT_TEXT_COLOR = '#fff'\n    FONT_WIDTHS = {'DejaVu Sans,Verdana,Geneva,sans-serif': {11: 10}}\n    NUM_PADDING_CHARS = 0.5\n    TEMPLATE_SVG = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<svg xmln...ho...\n    __summary__ = 'A simple, flexible badge generator.'\n    __title__ = 'anybadge'\n    __uri__ = 'https://github.com/jongracecox/anybadge'\n    __version_info__ = ('0', '0', '0')\n    digits = '0123456789'\n    version = '0.0.0'\n\nVERSION\n    0.0.0\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jongracecox/anybadge", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "anybadge", "package_url": "https://pypi.org/project/anybadge/", "platform": "", "project_url": "https://pypi.org/project/anybadge/", "project_urls": {"Homepage": "https://github.com/jongracecox/anybadge"}, "release_url": "https://pypi.org/project/anybadge/1.7.0/", "requires_dist": null, "requires_python": "", "summary": "Simple, flexible badge generator for project badges.", "version": "1.7.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>anybadge</h1>\n<p>Python project for generating badges for your projects</p>\n<p><a href=\"https://pypi.org/project/anybadge\" rel=\"nofollow\"><img alt=\"pypi package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/262dd3efd14078096cadc316856d7725605fff2c/68747470733a2f2f62616467652e667572792e696f2f70792f616e7962616467652e737667\"></a>\n<a href=\"https://travis-ci.org/jongracecox/anybadge\" rel=\"nofollow\"><img alt=\"build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/99267bee4b4942e5a04073374f0273b02ce240aa/68747470733a2f2f6170692e7472617669732d63692e6f72672f6a6f6e6772616365636f782f616e7962616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypistats.org/packages/anybadge\" rel=\"nofollow\"><img alt=\"downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/15ca480db88e732a767675adf1ce1717e0416d17/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f616e7962616467652e737667\"></a>\n<a href=\"https://github.com/jongracecox/anybadge/commits/master\" rel=\"nofollow\"><img alt=\"GitHub last commit\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/69bbd2c157bf38a135eabe340afb246a693b6804/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f6a6f6e6772616365636f782f616e7962616467652e737667\"></a>\n<a href=\"https://github.com/jongracecox/anybadge/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aadd99df547473488d52a71749d800287160ced7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6a6f6e6772616365636f782f616e7962616467652e737667\"></a>\n<a href=\"https://github.com/jongracecox/anybadge/stargazers\" rel=\"nofollow\"><img alt=\"GitHub stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a91eb87f0a9c6d1f69cbb0cd03b6aba4c9269d8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6a6f6e6772616365636f782f616e7962616467652e7376673f7374796c653d736f6369616c\"></a></p>\n<h2>Overview</h2>\n<p><code>anybadge</code> can be used to add badge generation to your Python projects,\nand also provides a command line interface.</p>\n<p>This utility can be used to generate .svg badge images, using configurable\nthresholds for coloring the badges based on the badge value.  Many badge\ngeneration tools just provide the ability to specify the color of badge.\n<code>anybadge</code> allows you to specify the label, badge value, and color, but\nit also allows you to specify a set of thresholds that can be used to\nselect a color based on the badge value.</p>\n<p><code>anybadge</code> may be useful for companies developing internally, or any time\nmaking calls to external badge services is not possible, or undesirable.\nIn this situation using <code>anybadge</code> will be easier than running your own\ninternal badge service.</p>\n<p>The package can be imported into your python code, or run direct from the\ncommand line.</p>\n<h2>Demo</h2>\n<p>You can find a <a href=\"https://repl.it/@JonGrace_Cox/anybadge-demo\" rel=\"nofollow\">repl.it demo here</a>.\nThis will allow you to see what the package can do and play with it to test outputs.</p>\n<h2>Basic usage</h2>\n<h3>Command line</h3>\n<p>As an example, if you want to produce a pylint badge, you may run <code>anybadge</code>\nfrom the command line like this:</p>\n<pre>anybadge -l pylint -v <span class=\"m\">2</span>.22 -f pylint.svg <span class=\"nv\">2</span><span class=\"o\">=</span>red <span class=\"nv\">4</span><span class=\"o\">=</span>orange <span class=\"nv\">8</span><span class=\"o\">=</span>yellow <span class=\"nv\">10</span><span class=\"o\">=</span>green\n</pre>\n<p>This would result in a badge like this:</p>\n<p><img alt=\"pylint\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1bb85f3bd6c8dadc6f4bb98d8a9354589b747bc2/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f70796c696e742e737667\"></p>\n<p>In this example the label is set to \"pylint\", the value \"2.22\", and an\noutput file called \"pylint.svg\".  The thresholds are provided in pairs\nof <code>&lt;value&gt;=color</code>  Values can be integer or floats for ranges, and\nstring values are also supported.</p>\n<h3>Python</h3>\n<p>Here is the same example implemented in Python code:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">anybadge</span>\n\n<span class=\"c1\"># Define thresholds: &lt;2=red, &lt;4=orange &lt;8=yellow &lt;10=green</span>\n<span class=\"n\">thresholds</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">:</span> <span class=\"s1\">'red'</span><span class=\"p\">,</span>\n              <span class=\"mi\">4</span><span class=\"p\">:</span> <span class=\"s1\">'orange'</span><span class=\"p\">,</span>\n              <span class=\"mi\">6</span><span class=\"p\">:</span> <span class=\"s1\">'yellow'</span><span class=\"p\">,</span>\n              <span class=\"mi\">10</span><span class=\"p\">:</span> <span class=\"s1\">'green'</span><span class=\"p\">}</span>\n\n<span class=\"n\">badge</span> <span class=\"o\">=</span> <span class=\"n\">anybadge</span><span class=\"o\">.</span><span class=\"n\">Badge</span><span class=\"p\">(</span><span class=\"s1\">'pylint'</span><span class=\"p\">,</span> <span class=\"mf\">2.22</span><span class=\"p\">,</span> <span class=\"n\">thresholds</span><span class=\"o\">=</span><span class=\"n\">thresholds</span><span class=\"p\">)</span>\n\n<span class=\"n\">badge</span><span class=\"o\">.</span><span class=\"n\">write_badge</span><span class=\"p\">(</span><span class=\"s1\">'pylint.svg'</span><span class=\"p\">)</span>\n</pre>\n<h2>Installation</h2>\n<p><code>anybadge</code> is available in PyPi at <a href=\"https://pypi.python.org/pypi/anybadge\" rel=\"nofollow\">https://pypi.python.org/pypi/anybadge</a></p>\n<p>You can install the latest release of <code>anybadge</code> using <code>pip</code>:</p>\n<pre>pip install anybadge\n</pre>\n<p>This will install the Python package, and also make <code>anybadge</code> available\nas a command line utility.</p>\n<h2>Getting help</h2>\n<p>To get help from the command line utility, just run:</p>\n<pre>anybadge --help\n</pre>\n<h2>Command line usage</h2>\n<h3>Output</h3>\n<p>Running the utility with the <code>--file</code> option will result in the .svg image being\nwritten to file.  Without the <code>--file</code> option the <code>.svg</code> file content will be\nwritten to stdout, so can be redirected to a file.</p>\n<h3>Thresholds</h3>\n<p>Some thresholds have been built in to save time.  To use these thresholds you\ncan simply specify the template name instead of threshold value/color pairs.</p>\n<pre>anybadge --value<span class=\"o\">=</span>&lt;VALUE&gt; --file<span class=\"o\">=</span>&lt;FILE&gt; &lt;TEMPLATE-NAME&gt;\n</pre>\n<p>For example:</p>\n<pre>anybadge --value<span class=\"o\">=</span><span class=\"m\">2</span>.22 --file<span class=\"o\">=</span>pylint.svg pylint\n</pre>\n<h3>Colors</h3>\n<p>Anybadge comes with some pre-defined colors, which can be referred to by name.  It also\nsupports the use of custom colors by using the hex representation of the color.  Both color\ntypes can be used in the <code>default_color</code>, <code>text_color</code> and <code>thresholds</code> attributes.</p>\n<p>Here is a Python example showing use of a named color and a custom color.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">anybadge</span>\n\n<span class=\"n\">badge</span> <span class=\"o\">=</span> <span class=\"n\">anybadge</span><span class=\"o\">.</span><span class=\"n\">Badge</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">'custom color'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s1\">'teal'</span><span class=\"p\">,</span> <span class=\"n\">default_color</span><span class=\"o\">=</span><span class=\"s1\">'teal'</span><span class=\"p\">,</span> <span class=\"n\">num_padding_chars</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">badge</span> <span class=\"o\">=</span> <span class=\"n\">anybadge</span><span class=\"o\">.</span><span class=\"n\">Badge</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">'custom color'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s1\">'teal'</span><span class=\"p\">,</span> <span class=\"n\">default_color</span><span class=\"o\">=</span><span class=\"s1\">'#008080'</span><span class=\"p\">,</span> <span class=\"n\">num_padding_chars</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<p>Available named colors are:</p>\n<table>\n<thead>\n<tr>\n<th>Color Name</th>\n<th>Hex Code</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>aqua</td>\n<td>#00FFFF</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eb99c65a6a928fa3429cce5e85426d00be7469eb/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f617175612e737667\"></td>\n</tr>\n<tr>\n<td>black</td>\n<td>#000000</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c2bd0c1dfec1751c1d2f3497468d231bf163d02d/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f626c61636b2e737667\"></td>\n</tr>\n<tr>\n<td>blue</td>\n<td>#0000FF</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/586bc3463caf785ff2d139636b8168dc8a5e4d8d/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f626c75652e737667\"></td>\n</tr>\n<tr>\n<td>brightred</td>\n<td>#FF0000</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/65ecbbb5d916e9aa2f9a204d49ebc3f3d4894daa/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f6272696768747265642e737667\"></td>\n</tr>\n<tr>\n<td>brightyellow</td>\n<td>#FFFF00</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51509881e1d52948d604d93ec578a72a2de20104/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f62726967687479656c6c6f772e737667\"></td>\n</tr>\n<tr>\n<td>fuchsia</td>\n<td>#FF00FF</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/813019f7ece2821ab2d87c45513fb1a6b7f49b03/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f667563687369612e737667\"></td>\n</tr>\n<tr>\n<td>gray</td>\n<td>#808080</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d448475d6f277c07bfab665b1a37e976f1c9478/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f677261792e737667\"></td>\n</tr>\n<tr>\n<td>green</td>\n<td>#4C1</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49b48e624f361cc930a84ffc4f62985d99383be8/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f677265656e2e737667\"></td>\n</tr>\n<tr>\n<td>lightgrey</td>\n<td>#9F9F9F</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64622e0a56300d10f465f814dfd25b0fa5ed4135/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f6c69676874677265792e737667\"></td>\n</tr>\n<tr>\n<td>lime</td>\n<td>#00FF00</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f5da684d421a93d85f5db41c7f4588a98500c39/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f6c696d652e737667\"></td>\n</tr>\n<tr>\n<td>maroon</td>\n<td>#800000</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a8b6ea5d6fda0807698218ce4f59986774eae09/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f6d61726f6f6e2e737667\"></td>\n</tr>\n<tr>\n<td>navy</td>\n<td>#000080</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9868ff33cd2e1485879d7466f7c6a9fb0ab25c3d/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f6e6176792e737667\"></td>\n</tr>\n<tr>\n<td>olive</td>\n<td>#808000</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b869990c7c975f02f17e27b19f5d5425f803f96/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f6f6c6976652e737667\"></td>\n</tr>\n<tr>\n<td>orange</td>\n<td>#FE7D37</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85a2e5efd49adce6caeb252985ed411602d1a7e7/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f6f72616e67652e737667\"></td>\n</tr>\n<tr>\n<td>purple</td>\n<td>#800080</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d7d3462e3de0c7a001a44ad2c42155c900045695/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f707572706c652e737667\"></td>\n</tr>\n<tr>\n<td>red</td>\n<td>#E05D44</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/984ace43ed57300f00787c747ecdbba27a095c58/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f7265642e737667\"></td>\n</tr>\n<tr>\n<td>silver</td>\n<td>#C0C0C0</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea0f5de8b26954276952be0102abb0cf3e34f20d/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f73696c7665722e737667\"></td>\n</tr>\n<tr>\n<td>teal</td>\n<td>#008080</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/71bc06af1a3f9e1d8fd0cc9a58053ce26fcd4b18/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f7465616c2e737667\"></td>\n</tr>\n<tr>\n<td>white</td>\n<td>#FFFFFF</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/757f367b43a5f3f2eaf9db02ea642bf597931341/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f77686974652e737667\"></td>\n</tr>\n<tr>\n<td>yellow</td>\n<td>#DFB317</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7fa6af3b3c2c5594d233a55fffbeab9d74ef0bda/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f79656c6c6f772e737667\"></td>\n</tr>\n<tr>\n<td>yellowgreen</td>\n<td>#A4A61D</td>\n<td><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9fa68f151eb864b200b40b73e6ad4a8af001bf0/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f6c6f725f79656c6c6f77677265656e2e737667\"></td>\n</tr></tbody></table>\n<p>This table was generated with the following code:</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"| Color Name | Hex Code | Example |</span>\n<span class=\"s2\">| ---------- | -------- | ------- |\"\"\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">color</span><span class=\"p\">,</span> <span class=\"nb\">hex</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">anybadge</span><span class=\"o\">.</span><span class=\"n\">COLORS</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()):</span>\n    <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"s1\">'examples/color_'</span> <span class=\"o\">+</span> <span class=\"n\">color</span> <span class=\"o\">+</span> <span class=\"s1\">'.svg'</span>\n    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s1\">'https://cdn.rawgit.com/jongracecox/anybadge/master/'</span> <span class=\"o\">+</span> <span class=\"n\">file</span>\n    <span class=\"n\">anybadge</span><span class=\"o\">.</span><span class=\"n\">Badge</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">'Color'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">color</span><span class=\"p\">,</span> <span class=\"n\">default_color</span><span class=\"o\">=</span><span class=\"n\">color</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">write_badge</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"| </span><span class=\"si\">{color}</span><span class=\"s2\"> | </span><span class=\"si\">{hex}</span><span class=\"s2\"> | ![](</span><span class=\"si\">{url}</span><span class=\"s2\">) |\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">color</span><span class=\"p\">,</span> <span class=\"nb\">hex</span><span class=\"o\">=</span><span class=\"nb\">hex</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">(),</span> <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"n\">url</span><span class=\"p\">))</span>\n</pre>\n<h3>Examples</h3>\n<h4>Pylint using template</h4>\n<pre>anybadge --value<span class=\"o\">=</span><span class=\"m\">2</span>.22 --file<span class=\"o\">=</span>pylint.svg pylint\n</pre>\n<p><img alt=\"pylint\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1bb85f3bd6c8dadc6f4bb98d8a9354589b747bc2/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f70796c696e742e737667\"></p>\n<h4>Pylint using arguments</h4>\n<pre>anybadge -l pylint -v <span class=\"m\">2</span>.22 -f pylint.svg <span class=\"nv\">2</span><span class=\"o\">=</span>red <span class=\"nv\">4</span><span class=\"o\">=</span>orange <span class=\"nv\">8</span><span class=\"o\">=</span>yellow <span class=\"nv\">10</span><span class=\"o\">=</span>green\n</pre>\n<p><img alt=\"pylint\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1bb85f3bd6c8dadc6f4bb98d8a9354589b747bc2/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f70796c696e742e737667\"></p>\n<h4>Coverage using template</h4>\n<pre>anybadge --value<span class=\"o\">=</span><span class=\"m\">65</span> --file<span class=\"o\">=</span>coverage.svg coverage\n</pre>\n<p><img alt=\"pylint\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e85fdae996ec13a3e4b340cc14d4b68fb927ef6d/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f636f7665726167652e737667\"></p>\n<h4>Pipeline, using labeled colors</h4>\n<pre>anybadge --label<span class=\"o\">=</span>pipeline --value<span class=\"o\">=</span>passing --file<span class=\"o\">=</span>pipeline.svg <span class=\"nv\">passing</span><span class=\"o\">=</span>green <span class=\"nv\">failing</span><span class=\"o\">=</span>red\n</pre>\n<p><img alt=\"pylint\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/693f680d2f6edcba327113f464a29846bc6b59ad/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f706970656c696e652e737667\"></p>\n<h4>Badge with fixed color</h4>\n<pre>anybadge --label<span class=\"o\">=</span>awesomeness --value<span class=\"o\">=</span><span class=\"s2\">\"110%\"</span> --file<span class=\"o\">=</span>awesomeness.svg --color<span class=\"o\">=</span><span class=\"c1\">#97CA00</span>\n</pre>\n<p><img alt=\"pylint\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3a0188a484b23fc299cc4c0bb73d8a8e348188f4/68747470733a2f2f63646e2e7261776769742e636f6d2f6a6f6e6772616365636f782f616e7962616467652f6d61737465722f6578616d706c65732f617765736f6d656e6573732e737667\"></p>\n<h3>Options</h3>\n<p>These are the command line options:</p>\n<pre><code>positional arguments:\n  args                  Pairs of &lt;upper&gt;=&lt;color&gt;. For example 2=red 4=orange\n                        6=yellow 8=good. Read this as \"Less than 2 = red, less\n                        than 4 = orange...\".\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -l LABEL, --label LABEL\n                        The badge label.\n  -v VALUE, --value VALUE\n                        The badge value.\n  -m VALUE_FORMAT, --value-format VALUE_FORMAT\n                        Formatting string for value (e.g. \"%.2f\" for 2dp\n                        floats)\n  -c COLOR, --color COLOR\n                        For fixed color badges use --colorto specify the badge\n                        color.\n  -p PREFIX, --prefix PREFIX\n                        Optional prefix for value.\n  -s SUFFIX, --suffix SUFFIX\n                        Optional suffix for value.\n  -d PADDING, --padding PADDING\n                        Number of characters to pad on either side of the\n                        badge text.\n  -lp LABEL_PADDING, --label-padding LABEL_PADDING\n                        Number of characters to pad on either side of the\n                        badge label.\n  -vp VALUE_PADDING, --value-padding VALUE_PADDING\n                        Number of characters to pad on either side of the\n                        badge value.\n  -n FONT, --font FONT  \"DejaVu Sans,Verdana,Geneva,sans-serif\"Font name.\n                        Supported fonts: ,\"Arial, Helvetica, sans-serif\"\n  -z FONT_SIZE, --font-size FONT_SIZE\n                        Font size.\n  -t TEMPLATE, --template TEMPLATE\n                        Location of alternative template .svg file.\n  -u, --use-max         Use the maximum threshold color when the value exceeds\n                        the maximum threshold.\n  -f FILE, --file FILE  Output file location.\n  -o, --overwrite       Overwrite output file if it already exists.\n  -r TEXT_COLOR, --text-color TEXT_COLOR\n                        Text color. Single value affects both labeland value\n                        colors. A comma separated pair affects label and value\n                        text respectively.\nExamples\n--------\n\nHere are some usage specific command line examples that may save time on defining\nthresholds.\n\nPylint::\n\nanybadge.py --value=2.22 --file=pylint.svg pylint\nanybadge.py --label=pylint --value=2.22 --file=pylint.svg 2=red 4=orange 8=yellow 10=green\n\nCoverage::\n\nanybadge.py --value=65 --file=coverage.svg coverage\nanybadge.py --label=coverage --value=65 --suffix='%%' --file=coverage.svg 50=red 60=orange 80=yellow 100=green\n\nCI Pipeline::\n\nanybadge.py --label=pipeline --value=passing --file=pipeline.svg passing=green failing=red\n\nPython usage\n============\nHere is the output of ``help(anybadge)``::\n\nHelp on module anybadge:\n\nNAME\n    anybadge - anybadge\n\nDESCRIPTION\n    A Python module for generating badges for your projects, with a focus on\n    simplicity and flexibility.\n\nCLASSES\n    builtins.object\n        Badge\n\n    class Badge(builtins.object)\n     |  Badge(label, value, font_name='DejaVu Sans,Verdana,Geneva,sans-serif', font_size=11, num_padding_chars=0.5, template='&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\\n&lt;svg xmlns=\"http://www.w3.org/2000/svg\" width=\"{{ badge width }}\" height=\"20\"&gt;\\n    &lt;linearGradient id=\"b\" x2=\"0\" y2=\"100%\"&gt;\\n        &lt;stop offset=\"0\" stop-color=\"#bbb\" stop-opacity=\".1\"/&gt;\\n        &lt;stop offset=\"1\" stop-opacity=\".1\"/&gt;\\n    &lt;/linearGradient&gt;\\n    &lt;mask id=\"a\"&gt;\\n        &lt;rect width=\"{{ badge width }}\" height=\"20\" rx=\"3\" fill=\"#fff\"/&gt;\\n    &lt;/mask&gt;\\n    &lt;g mask=\"url(#a)\"&gt;\\n        &lt;path fill=\"#555\" d=\"M0 0h{{ color split x }}v20H0z\"/&gt;\\n        &lt;path fill=\"{{ color }}\" d=\"M{{ color split x }} 0h{{ value width }}v20H{{ color split x }}z\"/&gt;\\n        &lt;path fill=\"url(#b)\" d=\"M0 0h{{ badge width }}v20H0z\"/&gt;\\n    &lt;/g&gt;\\n    &lt;g fill=\"{{ label text color }}\" text-anchor=\"middle\" font-family=\"{{ font name }}\" font-size=\"{{ font size }}\"&gt;\\n        &lt;text x=\"{{ label anchor shadow }}\" y=\"15\" fill=\"#010101\" fill-opacity=\".3\"&gt;{{ label }}&lt;/text&gt;\\n        &lt;text x=\"{{ label anchor }}\" y=\"14\"&gt;{{ label }}&lt;/text&gt;\\n    &lt;/g&gt;\\n    &lt;g fill=\"{{ value text color }}\" text-anchor=\"middle\" font-family=\"{{ font name }}\" font-size=\"{{ font size }}\"&gt;\\n        &lt;text x=\"{{ value anchor shadow }}\" y=\"15\" fill=\"#010101\" fill-opacity=\".3\"&gt;{{ value }}&lt;/text&gt;\\n        &lt;text x=\"{{ value anchor }}\" y=\"14\"&gt;{{ value }}&lt;/text&gt;\\n    &lt;/g&gt;\\n&lt;/svg&gt;', value_prefix='', value_suffix='', thresholds=None, default_color='#4c1', use_max_when_value_exceeds=True, value_format=None, text_color='#fff')\n     |  \n     |  Badge class used to generate badges.\n     |  \n     |  Examples:\n     |  \n     |      Create a simple green badge:\n     |  \n     |      &gt;&gt;&gt; badge = Badge('label', 123, default_color='green')\n     |  \n     |      Write a badge to file, overwriting any existing file:\n     |  \n     |      &gt;&gt;&gt; badge = Badge('label', 123, default_color='green')\n     |      &gt;&gt;&gt; badge.write_badge('demo.svg', overwrite=True)\n     |  \n     |      Here are a number of examples showing thresholds, since there\n     |      are certain situations that may not be obvious:\n     |  \n     |      &gt;&gt;&gt; badge = Badge('pipeline', 'passing', thresholds={'passing': 'green', 'failing': 'red'})\n     |      &gt;&gt;&gt; badge.badge_color\n     |      'green'\n     |  \n     |      2.32 is not &lt;2\n     |      2.32 is &lt; 4, so 2.32 yields orange\n     |      &gt;&gt;&gt; badge = Badge('pylint', 2.32, thresholds={2: 'red',\n     |      ...                                           4: 'orange',\n     |      ...                                           8: 'yellow',\n     |      ...                                           10: 'green'})\n     |      &gt;&gt;&gt; badge.badge_color\n     |      'orange'\n     |  \n     |      8 is not &lt;8\n     |      8 is &lt;4, so 8 yields orange\n     |      &gt;&gt;&gt; badge = Badge('pylint', 8, thresholds={2: 'red',\n     |      ...                                        4: 'orange',\n     |      ...                                        8: 'yellow',\n     |      ...                                        10: 'green'})\n     |      &gt;&gt;&gt; badge.badge_color\n     |      'green'\n     |  \n     |      10 is not &lt;8, but use_max_when_value_exceeds defaults to\n     |      True, so 10 yields green\n     |      &gt;&gt;&gt; badge = Badge('pylint', 11, thresholds={2: 'red',\n     |      ...                                         4: 'orange',\n     |      ...                                         8: 'yellow',\n     |      ...                                         10: 'green'})\n     |      &gt;&gt;&gt; badge.badge_color\n     |      'green'\n     |  \n     |      11 is not &lt;10, and use_max_when_value_exceeds is set to\n     |      False, so 11 yields the default color '#4c1'\n     |      &gt;&gt;&gt; badge = Badge('pylint', 11, use_max_when_value_exceeds=False,\n     |      ...               thresholds={2: 'red', 4: 'orange', 8: 'yellow',\n     |      ...                           10: 'green'})\n     |      &gt;&gt;&gt; badge.badge_color\n     |      '#4c1'\n     |  \n     |  Methods defined here:\n     |  \n     |  __init__(self, label, value, font_name='DejaVu Sans,Verdana,Geneva,sans-serif', font_size=11, num_padding_chars=0.5, template='&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\\n&lt;svg xmlns=\"http://www.w3.org/2000/svg\" width=\"{{ badge width }}\" height=\"20\"&gt;\\n    &lt;linearGradient id=\"b\" x2=\"0\" y2=\"100%\"&gt;\\n        &lt;stop offset=\"0\" stop-color=\"#bbb\" stop-opacity=\".1\"/&gt;\\n        &lt;stop offset=\"1\" stop-opacity=\".1\"/&gt;\\n    &lt;/linearGradient&gt;\\n    &lt;mask id=\"a\"&gt;\\n        &lt;rect width=\"{{ badge width }}\" height=\"20\" rx=\"3\" fill=\"#fff\"/&gt;\\n    &lt;/mask&gt;\\n    &lt;g mask=\"url(#a)\"&gt;\\n        &lt;path fill=\"#555\" d=\"M0 0h{{ color split x }}v20H0z\"/&gt;\\n        &lt;path fill=\"{{ color }}\" d=\"M{{ color split x }} 0h{{ value width }}v20H{{ color split x }}z\"/&gt;\\n        &lt;path fill=\"url(#b)\" d=\"M0 0h{{ badge width }}v20H0z\"/&gt;\\n    &lt;/g&gt;\\n    &lt;g fill=\"{{ label text color }}\" text-anchor=\"middle\" font-family=\"{{ font name }}\" font-size=\"{{ font size }}\"&gt;\\n        &lt;text x=\"{{ label anchor shadow }}\" y=\"15\" fill=\"#010101\" fill-opacity=\".3\"&gt;{{ label }}&lt;/text&gt;\\n        &lt;text x=\"{{ label anchor }}\" y=\"14\"&gt;{{ label }}&lt;/text&gt;\\n    &lt;/g&gt;\\n    &lt;g fill=\"{{ value text color }}\" text-anchor=\"middle\" font-family=\"{{ font name }}\" font-size=\"{{ font size }}\"&gt;\\n        &lt;text x=\"{{ value anchor shadow }}\" y=\"15\" fill=\"#010101\" fill-opacity=\".3\"&gt;{{ value }}&lt;/text&gt;\\n        &lt;text x=\"{{ value anchor }}\" y=\"14\"&gt;{{ value }}&lt;/text&gt;\\n    &lt;/g&gt;\\n&lt;/svg&gt;', value_prefix='', value_suffix='', thresholds=None, default_color='#4c1', use_max_when_value_exceeds=True, value_format=None, text_color='#fff')\n     |      Constructor for Badge class.\n     |  \n     |  get_text_width(self, text)\n     |      Return the width of text.\n     |      \n     |      Args:\n     |          text(str): Text to get the pixel width of.\n     |      \n     |      Returns:\n     |          int: Pixel width of the given text based on the badges selected font.\n     |      \n     |      This implementation assumes a fixed font of:\n     |      \n     |      font-family=\"DejaVu Sans,Verdana,Geneva,sans-serif\" font-size=\"11\"\n     |      &gt;&gt;&gt; badge = Badge('x', 1, font_name='DejaVu Sans,Verdana,Geneva,sans-serif', font_size=11)\n     |      &gt;&gt;&gt; badge.get_text_width('pylint')\n     |      34\n     |  \n     |  write_badge(self, file_path, overwrite=False)\n     |      Write badge to file.\n     |  \n     |  ----------------------------------------------------------------------\n     |  Data descriptors defined here:\n     |  \n     |  __dict__\n     |      dictionary for instance variables (if defined)\n     |  \n     |  __weakref__\n     |      list of weak references to the object (if defined)\n     |  \n     |  badge_color\n     |      Badge color based on the configured thresholds.\n     |      \n     |      Returns: str\n     |  \n     |  badge_color_code\n     |      Return the color code for the badge.\n     |      \n     |      Returns: str\n     |  \n     |  badge_svg_text\n     |      The badge SVG text.\n     |      \n     |      Returns: str\n     |  \n     |  badge_width\n     |      The total width of badge.\n     |      \n     |      Returns: int\n     |      \n     |      Examples:\n     |      \n     |          &gt;&gt;&gt; badge = Badge('pylint', '5')\n     |          &gt;&gt;&gt; badge.badge_width\n     |          103\n     |  \n     |  color_split_position\n     |      The SVG x position where the color split should occur.\n     |      \n     |      Returns: int\n     |  \n     |  font_width\n     |      Return the width multiplier for a font.\n     |      \n     |      Returns:\n     |          int: Maximum pixel width of badges selected font.\n     |      \n     |      Example:\n     |      \n     |          &gt;&gt;&gt; Badge(label='x', value='1').font_width\n     |          10\n     |  \n     |  label_anchor\n     |      The SVG x position of the middle anchor for the label text.\n     |      \n     |      Returns: float\n     |  \n     |  label_anchor_shadow\n     |      The SVG x position of the label shadow anchor.\n     |      \n     |      Returns: float\n     |  \n     |  label_width\n     |      The SVG width of the label text.\n     |      \n     |      Returns: int\n     |  \n     |  value_anchor\n     |      The SVG x position of the middle anchor for the value text.\n     |      \n     |      Returns: float\n     |  \n     |  value_anchor_shadow\n     |      The SVG x position of the value shadow anchor.\n     |      \n     |      Returns: float\n     |  \n     |  value_is_float\n     |      Identify whether the value text is a float.\n     |      \n     |      Returns: bool\n     |  \n     |  value_is_int\n     |      Identify whether the value text is an int.\n     |      \n     |      Returns: bool\n     |  \n     |  value_type\n     |      The Python type associated with the value.\n     |      \n     |      Returns: type\n     |  \n     |  value_width\n     |      The SVG width of the value text.\n     |      \n     |      Returns: int\n\nFUNCTIONS\n    main()\n        Generate a badge based on command line arguments.\n\n    parse_args()\n        Parse the command line arguments.\n\nDATA\n    BADGE_TEMPLATES = {'coverage': {'label': 'coverage', 'suffix': '%', 't...\n    COLORS = {'green': '#4c1', 'lightgrey': '#9f9f9f', 'orange': '#fe7d37'...\n    DEFAULT_COLOR = '#4c1'\n    DEFAULT_FONT = 'DejaVu Sans,Verdana,Geneva,sans-serif'\n    DEFAULT_FONT_SIZE = 11\n    DEFAULT_TEXT_COLOR = '#fff'\n    FONT_WIDTHS = {'DejaVu Sans,Verdana,Geneva,sans-serif': {11: 10}}\n    NUM_PADDING_CHARS = 0.5\n    TEMPLATE_SVG = '&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\\n&lt;svg xmln...ho...\n    __summary__ = 'A simple, flexible badge generator.'\n    __title__ = 'anybadge'\n    __uri__ = 'https://github.com/jongracecox/anybadge'\n    __version_info__ = ('0', '0', '0')\n    digits = '0123456789'\n    version = '0.0.0'\n\nVERSION\n    0.0.0\n</code></pre>\n\n          </div>"}, "last_serial": 6816466, "releases": {"0.1.0.dev0": [{"comment_text": "", "digests": {"md5": "2628e4dc11cf20ce97cd2e259cc90e58", "sha256": "e5665afcb7c8e5630301a220696a0fb55e1d79f1399591232633775801ee9eea"}, "downloads": -1, "filename": "anybadge-0.1.0.dev0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2628e4dc11cf20ce97cd2e259cc90e58", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6930, "upload_time": "2017-09-12T01:10:26", "upload_time_iso_8601": "2017-09-12T01:10:26.756535Z", "url": "https://files.pythonhosted.org/packages/6b/49/2b92198c69f5eda386214b7eacfc1d9f0cb369a189209c0d36eea4093cc1/anybadge-0.1.0.dev0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "892761623dec5c5fcb4623c4c3611e7f", "sha256": "704d15205f99e5cbd4c8e1e36484b49b234a180de4e63b6d81d7c9b7dea30288"}, "downloads": -1, "filename": "anybadge-0.1.0.dev0.zip", "has_sig": false, "md5_digest": "892761623dec5c5fcb4623c4c3611e7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7482, "upload_time": "2017-09-12T01:10:28", "upload_time_iso_8601": "2017-09-12T01:10:28.183054Z", "url": "https://files.pythonhosted.org/packages/af/e4/3b25aa83e1f76e4d1df1f1061c80e12b6ae4515f00d7889919b232d4ce17/anybadge-0.1.0.dev0.zip", "yanked": false}], "0.1.0.dev1": [{"comment_text": "", "digests": {"md5": "4639d9d2e5cb32cab40e5066a1721d2e", "sha256": "b8db8014de02f3cdf056ee11112e2135eda5ab28ed32e56a7ef9ed86429d1173"}, "downloads": -1, "filename": "anybadge-0.1.0.dev1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4639d9d2e5cb32cab40e5066a1721d2e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7226, "upload_time": "2017-09-12T01:26:59", "upload_time_iso_8601": "2017-09-12T01:26:59.537229Z", "url": "https://files.pythonhosted.org/packages/11/f8/2d139c2704b87a8a57041dba7734b27827d53f1afc756f009643f34aa04e/anybadge-0.1.0.dev1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01990d4a54a1560565c88e9a30869460", "sha256": "69b90041d87bb01d890d35ea5a1e0c1b5c25f2493cc770c75faf602943767f0b"}, "downloads": -1, "filename": "anybadge-0.1.0.dev1.zip", "has_sig": false, "md5_digest": "01990d4a54a1560565c88e9a30869460", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7663, "upload_time": "2017-09-12T01:27:00", "upload_time_iso_8601": "2017-09-12T01:27:00.910918Z", "url": "https://files.pythonhosted.org/packages/1e/e4/8f6245bf2348afe5ff2f115480c543029dc2dbd4754daed3d332525bbbe3/anybadge-0.1.0.dev1.zip", "yanked": false}], "0.1.0.dev2": [{"comment_text": "", "digests": {"md5": "e810de4895e5df10362d8872a351d705", "sha256": "b1e32850f1f6831907eb46d85d9ce722c68a7674d54cb798b230be0df9558b1d"}, "downloads": -1, "filename": "anybadge-0.1.0.dev2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e810de4895e5df10362d8872a351d705", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7408, "upload_time": "2017-09-28T01:37:36", "upload_time_iso_8601": "2017-09-28T01:37:36.424203Z", "url": "https://files.pythonhosted.org/packages/79/35/89e5ed3abe6673249e67e72d2b89346ba9ddca1af991c6e157a767c634b0/anybadge-0.1.0.dev2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "261a71da5c3166475a73ffdfcdca9771", "sha256": "ed9367892451505043c78dfe9dbb1c4eb85b540f95c8b2fe4cb3ead2f284f27f"}, "downloads": -1, "filename": "anybadge-0.1.0.dev2.zip", "has_sig": false, "md5_digest": "261a71da5c3166475a73ffdfcdca9771", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11461, "upload_time": "2017-09-28T01:37:37", "upload_time_iso_8601": "2017-09-28T01:37:37.541729Z", "url": "https://files.pythonhosted.org/packages/16/11/408b8ffb0c255ee4ca2ffae0bc4520ba86494ccc13466bc1dc537cec44b7/anybadge-0.1.0.dev2.zip", "yanked": false}], "0.1.0rc1": [{"comment_text": "", "digests": {"md5": "165366fba29961dec09af055adb0df0a", "sha256": "494c23d0d4e6ebba43d9e7623da872d7bc89e12706677c95fbb15dee5f8ac582"}, "downloads": -1, "filename": "anybadge-0.1.0rc1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "165366fba29961dec09af055adb0df0a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7378, "upload_time": "2018-02-10T02:44:20", "upload_time_iso_8601": "2018-02-10T02:44:20.809447Z", "url": "https://files.pythonhosted.org/packages/e6/3a/9a510fdeab8a1d735f0add2f160e0e0e206c7294bce6336b07b47a12d3ed/anybadge-0.1.0rc1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f07c256f318e689ec1b821d6eff246e", "sha256": "cb328f7267627780beac81703401be4d480025229bde72615d14c29a5cef2db6"}, "downloads": -1, "filename": "anybadge-0.1.0rc1.zip", "has_sig": false, "md5_digest": "2f07c256f318e689ec1b821d6eff246e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11261, "upload_time": "2018-02-10T02:44:22", "upload_time_iso_8601": "2018-02-10T02:44:22.588063Z", "url": "https://files.pythonhosted.org/packages/65/52/94862c66009c3f090de8feffdd1941ff6e4e9b4eb6735b950e5d8551fd5c/anybadge-0.1.0rc1.zip", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "c8d709de0709d1d190b05947414c7959", "sha256": "516f3d2aa33ec61f34536cc71e682c9156ffe824b52645bde4675d6a04012584"}, "downloads": -1, "filename": "anybadge-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c8d709de0709d1d190b05947414c7959", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7328, "upload_time": "2018-02-10T02:47:37", "upload_time_iso_8601": "2018-02-10T02:47:37.869210Z", "url": "https://files.pythonhosted.org/packages/27/80/6b923d5575257c24c72242ce025b4c09dfabde248781b7d21b5387771dda/anybadge-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "53dab60ed6a1f2c8d7932fc63cee42da", "sha256": "f965c92188e57c4b61af52135d2357282578199fa1cff7c8c95b1a0eb063eef6"}, "downloads": -1, "filename": "anybadge-1.0.0.zip", "has_sig": false, "md5_digest": "53dab60ed6a1f2c8d7932fc63cee42da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11191, "upload_time": "2018-02-10T02:47:38", "upload_time_iso_8601": "2018-02-10T02:47:38.953026Z", "url": "https://files.pythonhosted.org/packages/a1/01/c5f329c05e5ba6e17676afb70f6e7c62f02acc217ddf1612514075dc681b/anybadge-1.0.0.zip", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "e4b31e7225bee577df2d6fd750863eaf", "sha256": "23ab6b4ad492c4342661b14e85a04eea338f3ba7d5a766d77ba792f268bd1cf4"}, "downloads": -1, "filename": "anybadge-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e4b31e7225bee577df2d6fd750863eaf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15165, "upload_time": "2018-02-10T15:51:52", "upload_time_iso_8601": "2018-02-10T15:51:52.018218Z", "url": "https://files.pythonhosted.org/packages/4b/54/22d667630a657f286e5b42dd18e7f3b85ee941b93fa73dbc0fdcd53ac021/anybadge-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70c7341258a4252bc4559b2243767eca", "sha256": "55d20b4170deb27b6a0227f295d5a96547415c8518b09a34af036ae6bcf34fd2"}, "downloads": -1, "filename": "anybadge-1.1.0.zip", "has_sig": false, "md5_digest": "70c7341258a4252bc4559b2243767eca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19457, "upload_time": "2018-02-10T15:51:53", "upload_time_iso_8601": "2018-02-10T15:51:53.663474Z", "url": "https://files.pythonhosted.org/packages/0e/4b/4acfe740cde29b741ee49833999f680ae0ab299cfa9528e1c6316f09d136/anybadge-1.1.0.zip", "yanked": false}], "1.1.0rc1": [{"comment_text": "", "digests": {"md5": "84309744fac61153ed6506b15c23e39f", "sha256": "12ccaff966bd4d15d963d1c089e2ae1a28718ef205f8896b08f9d2e886cd181d"}, "downloads": -1, "filename": "anybadge-1.1.0rc1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "84309744fac61153ed6506b15c23e39f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14927, "upload_time": "2018-02-10T15:24:00", "upload_time_iso_8601": "2018-02-10T15:24:00.765987Z", "url": "https://files.pythonhosted.org/packages/ad/e7/5b170816625ad03182bcc236ec538931323d969ebd37d0ea40223b14e8d9/anybadge-1.1.0rc1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65b290de4d5391383a6edb0915989882", "sha256": "a5f62d26df290b492d379069c55e81ec2ec0e3e99e3f1bff2348a6c9f4b0814d"}, "downloads": -1, "filename": "anybadge-1.1.0rc1.zip", "has_sig": false, "md5_digest": "65b290de4d5391383a6edb0915989882", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19079, "upload_time": "2018-02-10T15:24:02", "upload_time_iso_8601": "2018-02-10T15:24:02.252273Z", "url": "https://files.pythonhosted.org/packages/e2/c4/8b8a28362f3474f9ca993a4e58b8304e005360f49c7ee42b05f0a90f6d0b/anybadge-1.1.0rc1.zip", "yanked": false}], "1.1.0rc3": [{"comment_text": "", "digests": {"md5": "a172370ebac6162cb3437ebbd93e9f0a", "sha256": "54fcb64b58232c4264fc13711b2e044a97d929faa41df317f50b263b3386d895"}, "downloads": -1, "filename": "anybadge-1.1.0rc3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a172370ebac6162cb3437ebbd93e9f0a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15160, "upload_time": "2018-02-10T15:32:16", "upload_time_iso_8601": "2018-02-10T15:32:16.065850Z", "url": "https://files.pythonhosted.org/packages/a5/e3/b3a861e38f8f9e77d616480f28280a4db71518f92eb84731ef2fb416ea54/anybadge-1.1.0rc3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d049af2b985446a617118790e38e5aed", "sha256": "b505659f81c760b9f06b415ff4d04b04da6c24c83a7b76afdffc54ed84cfeec5"}, "downloads": -1, "filename": "anybadge-1.1.0rc3.zip", "has_sig": false, "md5_digest": "d049af2b985446a617118790e38e5aed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19427, "upload_time": "2018-02-10T15:32:17", "upload_time_iso_8601": "2018-02-10T15:32:17.323893Z", "url": "https://files.pythonhosted.org/packages/cd/75/718115bbd56b2eaa94f8d7d3835b2d3fd06c0f847923648d805022259f8e/anybadge-1.1.0rc3.zip", "yanked": false}], "1.1.0rc4": [{"comment_text": "", "digests": {"md5": "d0996dde563c77d8ba21e75b07418581", "sha256": "54034ce4348c043afaa3ecbf18320a8e5ca3edcac5e4229a17ab02fe7a901166"}, "downloads": -1, "filename": "anybadge-1.1.0rc4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d0996dde563c77d8ba21e75b07418581", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15158, "upload_time": "2018-02-10T15:47:42", "upload_time_iso_8601": "2018-02-10T15:47:42.857983Z", "url": "https://files.pythonhosted.org/packages/f5/1e/a3d5ab9335674fc09c8442e8db4328177f7e57dd088a2233571a9ba4c9c1/anybadge-1.1.0rc4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08157e2c450ce0e767b37308bdc9d804", "sha256": "12ae1a844cef4ad4a8ece93ea14de04eab725c4a23bb75ecb5b39cc496b891ae"}, "downloads": -1, "filename": "anybadge-1.1.0rc4.zip", "has_sig": false, "md5_digest": "08157e2c450ce0e767b37308bdc9d804", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19436, "upload_time": "2018-02-10T15:47:44", "upload_time_iso_8601": "2018-02-10T15:47:44.222108Z", "url": "https://files.pythonhosted.org/packages/db/6e/cc20d927f4807392dfa485bb35815dc2cf228663a4bc1c7f936612976bda/anybadge-1.1.0rc4.zip", "yanked": false}], "1.1.0rc5": [{"comment_text": "", "digests": {"md5": "9a6df1cd2219e32776d03f2ea0a5b952", "sha256": "0c16e404cfb8dd85753a79a7a7f5ef58723df734716a7586229716094ec0acf1"}, "downloads": -1, "filename": "anybadge-1.1.0rc5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9a6df1cd2219e32776d03f2ea0a5b952", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15219, "upload_time": "2018-02-10T15:50:17", "upload_time_iso_8601": "2018-02-10T15:50:17.841453Z", "url": "https://files.pythonhosted.org/packages/02/39/a4164fd1d8cd97d8fb52e3ee5cfe44069ad91182b573b4d4b1fb5143850b/anybadge-1.1.0rc5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d970fae237bf359763efd83acb49807", "sha256": "3ca403e230c08ea01fd0a17d000b2fa6f906613989c59c43f8a33dc53ae6f4dc"}, "downloads": -1, "filename": "anybadge-1.1.0rc5.zip", "has_sig": false, "md5_digest": "0d970fae237bf359763efd83acb49807", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19523, "upload_time": "2018-02-10T15:50:19", "upload_time_iso_8601": "2018-02-10T15:50:19.369477Z", "url": "https://files.pythonhosted.org/packages/70/be/2d4509e9eda0169eadb66e892133a454f5fcd4bdd260066301c266d37c6a/anybadge-1.1.0rc5.zip", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "4f26790741ed9dbe9a46a10bfcda4621", "sha256": "0bec4aff0c973c9fc209b31d3b80802943e3598da07200c0b47d8f91bc4909a6"}, "downloads": -1, "filename": "anybadge-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4f26790741ed9dbe9a46a10bfcda4621", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17120, "upload_time": "2018-03-26T11:48:40", "upload_time_iso_8601": "2018-03-26T11:48:40.576763Z", "url": "https://files.pythonhosted.org/packages/3e/1b/7f0a94bcf6724fbf6cabdcdf40a2a59df53f888de16b3008dbddcb551c7b/anybadge-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "487f0c260a54ca2fcdb9170679102a74", "sha256": "0055443f92287531fa8f35748fd0a8ab263367a7076f3f9d8684db484febf72a"}, "downloads": -1, "filename": "anybadge-1.1.1.tar.gz", "has_sig": false, "md5_digest": "487f0c260a54ca2fcdb9170679102a74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14495, "upload_time": "2018-03-26T11:48:41", "upload_time_iso_8601": "2018-03-26T11:48:41.474504Z", "url": "https://files.pythonhosted.org/packages/19/56/1b82b423605e49430a7880820a4ee073cd8bde5db3fcbb33ba78fb79ca7b/anybadge-1.1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "6d505ac8752d19cadbb4fc1fb9f6e5a5", "sha256": "800f33d62225ed18515540d2120df6b117909c8669af4e82020c277f423d7684"}, "downloads": -1, "filename": "anybadge-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6d505ac8752d19cadbb4fc1fb9f6e5a5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15506, "upload_time": "2019-06-01T08:16:03", "upload_time_iso_8601": "2019-06-01T08:16:03.425680Z", "url": "https://files.pythonhosted.org/packages/c4/a3/dba038415a6e80f3fab528574b36b18c1ac6e584e19d2704cb0f0553ec16/anybadge-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95f6c325cd139653c8b080b74555c1e0", "sha256": "b5ee54b669a2b580cb18111158b786485c138338990898a01cf0e97ae5084cdb"}, "downloads": -1, "filename": "anybadge-1.2.0.tar.gz", "has_sig": false, "md5_digest": "95f6c325cd139653c8b080b74555c1e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15178, "upload_time": "2019-06-01T08:16:05", "upload_time_iso_8601": "2019-06-01T08:16:05.129283Z", "url": "https://files.pythonhosted.org/packages/d0/1c/ff4b122de367a2d815e06cdd593e8b18ebfddc91a30a3fb9710bf519d00f/anybadge-1.2.0.tar.gz", "yanked": false}], "1.2.0rc1": [{"comment_text": "", "digests": {"md5": "f446279a31a7f14c6b432f755dd1fbc1", "sha256": "403cdd4625531f22a7b6f918763cf5b88c1616f2b12d01694de5dcecc1a2984a"}, "downloads": -1, "filename": "anybadge-1.2.0rc1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f446279a31a7f14c6b432f755dd1fbc1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15214, "upload_time": "2018-02-10T16:04:13", "upload_time_iso_8601": "2018-02-10T16:04:13.316391Z", "url": "https://files.pythonhosted.org/packages/59/56/d1886e34055c082bc57a3ff36761288c7ee9fe59a1cbef88314a67965459/anybadge-1.2.0rc1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b17197cf4ea7e68c8be2cf1b49a8bbc", "sha256": "1bb514eabb24e2a956bd21f8214fec4d4c9878c0e8c4143dab98188c86f28a29"}, "downloads": -1, "filename": "anybadge-1.2.0rc1.tar.gz", "has_sig": false, "md5_digest": "3b17197cf4ea7e68c8be2cf1b49a8bbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12420, "upload_time": "2018-02-10T16:04:14", "upload_time_iso_8601": "2018-02-10T16:04:14.972197Z", "url": "https://files.pythonhosted.org/packages/3c/9e/623fff3ce9082d7fd474639c9afa8128f13ebc2cfb1d6a99795c87c3a502/anybadge-1.2.0rc1.tar.gz", "yanked": false}], "1.2.0rc3": [{"comment_text": "", "digests": {"md5": "523d02775ea8db31143678eaef935125", "sha256": "3d98ff3996a7449e64a42ae63a11992552638757d7fb7fbc8ca67db9d334ef7d"}, "downloads": -1, "filename": "anybadge-1.2.0rc3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "523d02775ea8db31143678eaef935125", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15193, "upload_time": "2018-02-10T16:32:10", "upload_time_iso_8601": "2018-02-10T16:32:10.201819Z", "url": "https://files.pythonhosted.org/packages/e6/1a/f93bd7b075bad53cbb94c9f62cf1e6d897966b1d06774ab1563c18e1fe9d/anybadge-1.2.0rc3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33e2ff5f46ba611081beb24a83c824e4", "sha256": "51eb915c8355d746d08e30f86e7af128330178a7cf3c67b4092a02442b9234e8"}, "downloads": -1, "filename": "anybadge-1.2.0rc3.tar.gz", "has_sig": false, "md5_digest": "33e2ff5f46ba611081beb24a83c824e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12562, "upload_time": "2018-02-10T16:32:12", "upload_time_iso_8601": "2018-02-10T16:32:12.625358Z", "url": "https://files.pythonhosted.org/packages/7a/48/d5e5eb7857a61152380e55818842b3c3d313339510bc92bb0b4b833513a9/anybadge-1.2.0rc3.tar.gz", "yanked": false}], "1.2.0rc4": [{"comment_text": "", "digests": {"md5": "59285e558f8b8798476b7dc957e763c0", "sha256": "8f1969122a5fc8de70c143509f8763c2f845659cd5b85791874af5f380576f81"}, "downloads": -1, "filename": "anybadge-1.2.0rc4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "59285e558f8b8798476b7dc957e763c0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15206, "upload_time": "2018-02-10T16:44:13", "upload_time_iso_8601": "2018-02-10T16:44:13.778111Z", "url": "https://files.pythonhosted.org/packages/2f/12/8498f64767b6d4949f0431458b42a94d952561a0ad05074fa275b40cd883/anybadge-1.2.0rc4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9178f1c1f45eeaeab0a27104a432fc9", "sha256": "3610201622f78c904ac5c53328c301f5e33161853d65cb5f1d30dc43f5b6f291"}, "downloads": -1, "filename": "anybadge-1.2.0rc4.tar.gz", "has_sig": false, "md5_digest": "a9178f1c1f45eeaeab0a27104a432fc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12572, "upload_time": "2018-02-10T16:44:15", "upload_time_iso_8601": "2018-02-10T16:44:15.159150Z", "url": "https://files.pythonhosted.org/packages/99/23/dbc019b2c46b652d95f2c5328c4c99120bb620608a5e03e67f6c69ec11f0/anybadge-1.2.0rc4.tar.gz", "yanked": false}], "1.2.0rc5": [{"comment_text": "", "digests": {"md5": "e00ab145539888d66ae09104893028b1", "sha256": "f1a9ea8bea302994da4baf9ba401979eba8bf01063a7e28ece93b621bb437fb1"}, "downloads": -1, "filename": "anybadge-1.2.0rc5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e00ab145539888d66ae09104893028b1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17050, "upload_time": "2018-02-19T04:04:58", "upload_time_iso_8601": "2018-02-19T04:04:58.918320Z", "url": "https://files.pythonhosted.org/packages/bc/12/c96818dadaf3a13413e472259911bdd0e5ce04cfdfcd60f4e99d29da1519/anybadge-1.2.0rc5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b812b001f1a1b5b04b1122cf962da4bc", "sha256": "8e45f9a36aaf3709081e62262ece3ee032243956b3516bfcc116b834f254b0f2"}, "downloads": -1, "filename": "anybadge-1.2.0rc5.tar.gz", "has_sig": false, "md5_digest": "b812b001f1a1b5b04b1122cf962da4bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14387, "upload_time": "2018-02-19T04:05:03", "upload_time_iso_8601": "2018-02-19T04:05:03.083403Z", "url": "https://files.pythonhosted.org/packages/9a/d1/d94a48cdf57863807c8b4b1ed67bb6de8d5313d2fe0499343f418b03f56a/anybadge-1.2.0rc5.tar.gz", "yanked": false}], "1.2.0rc6": [{"comment_text": "", "digests": {"md5": "a50d802a7ceae7ba6144177cc50ed391", "sha256": "b40b966a2ece6b1d083e4a589b3a078bc22a69bba18655a097fffb3a07f2a281"}, "downloads": -1, "filename": "anybadge-1.2.0rc6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a50d802a7ceae7ba6144177cc50ed391", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17214, "upload_time": "2018-02-21T05:27:11", "upload_time_iso_8601": "2018-02-21T05:27:11.779006Z", "url": "https://files.pythonhosted.org/packages/a0/1f/07744b5feb0928e9b3beb642993fa532c5eac4af6b5882c4cb8d9d13ca07/anybadge-1.2.0rc6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec8d06101747fb13f447c937e0dfe77a", "sha256": "b60ca90a40df126c588eaf70a930ed6ff6f3371cdc4c75bb3b00e5f579c441bc"}, "downloads": -1, "filename": "anybadge-1.2.0rc6.tar.gz", "has_sig": false, "md5_digest": "ec8d06101747fb13f447c937e0dfe77a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14507, "upload_time": "2018-02-21T05:27:13", "upload_time_iso_8601": "2018-02-21T05:27:13.239824Z", "url": "https://files.pythonhosted.org/packages/dd/b5/23c89cf212b9da434998918f9dda1f118b19c28d0adc3013ef277c8e88c9/anybadge-1.2.0rc6.tar.gz", "yanked": false}], "1.2.0rc7": [{"comment_text": "", "digests": {"md5": "f4fcd912cdef19a2297ecda9fe2aada8", "sha256": "398799ff1b817bfe3e10ca2eb90962cad844a5d503df33df46ef1698dadce02d"}, "downloads": -1, "filename": "anybadge-1.2.0rc7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f4fcd912cdef19a2297ecda9fe2aada8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17171, "upload_time": "2018-03-26T11:46:00", "upload_time_iso_8601": "2018-03-26T11:46:00.215571Z", "url": "https://files.pythonhosted.org/packages/c3/7c/0ef7a0d2b9b2622bf19737fe9a4fa5c797632bc364947114fd21d10090be/anybadge-1.2.0rc7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5b08d9f264a5e7c1fa172297dd201d0", "sha256": "46e58e812301638617454007e66f01d5506daa8a34e304cde29e85c390068d01"}, "downloads": -1, "filename": "anybadge-1.2.0rc7.tar.gz", "has_sig": false, "md5_digest": "f5b08d9f264a5e7c1fa172297dd201d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14499, "upload_time": "2018-03-26T11:46:01", "upload_time_iso_8601": "2018-03-26T11:46:01.096401Z", "url": "https://files.pythonhosted.org/packages/4c/aa/3ce4e5370e8b0bcfe895085181b0392dae6fe1d1f0099db88c26f12ffd4b/anybadge-1.2.0rc7.tar.gz", "yanked": false}], "1.2.0rc8": [{"comment_text": "", "digests": {"md5": "dfc4fa538bfa22ed60fe1f745e9ede77", "sha256": "22fd40bca746e67a713322ad33d42e36393532fb034e3aa7617b132caf2e011a"}, "downloads": -1, "filename": "anybadge-1.2.0rc8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "dfc4fa538bfa22ed60fe1f745e9ede77", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15550, "upload_time": "2019-06-01T07:54:26", "upload_time_iso_8601": "2019-06-01T07:54:26.135426Z", "url": "https://files.pythonhosted.org/packages/43/35/fd88e23ce2d38a973aabe08b364ee0668657beb415d10d63e626eec82674/anybadge-1.2.0rc8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b24a53a2fcf222779f9ea4208eb08a29", "sha256": "2d4611086261ad3ad89d8e8dc11c926ad1337bfb49ce0045f7b4d58f03806582"}, "downloads": -1, "filename": "anybadge-1.2.0rc8.tar.gz", "has_sig": false, "md5_digest": "b24a53a2fcf222779f9ea4208eb08a29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15186, "upload_time": "2019-06-01T07:54:27", "upload_time_iso_8601": "2019-06-01T07:54:27.896021Z", "url": "https://files.pythonhosted.org/packages/c6/fd/45e489977596b412cfd46959affebdd70fbfd10c78050a6231d74b914ae2/anybadge-1.2.0rc8.tar.gz", "yanked": false}], "1.2.0rc9": [{"comment_text": "", "digests": {"md5": "7ea8e619e93c44923f8f968e11b23037", "sha256": "c777a1f724c1fee12d13f5e565264991a7d762be79b84b7e428165e12be1275f"}, "downloads": -1, "filename": "anybadge-1.2.0rc9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7ea8e619e93c44923f8f968e11b23037", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15554, "upload_time": "2019-06-01T08:10:00", "upload_time_iso_8601": "2019-06-01T08:10:00.346990Z", "url": "https://files.pythonhosted.org/packages/41/ae/91ffca106421f2de4e7eb481cd5ee2388440b4d8cf90390e1772725ccccc/anybadge-1.2.0rc9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ded8136c45479da5b82ff1d2d575d3f4", "sha256": "0870048c04a3ca25b32444667b4d5c769f32a85c86c391e64ef5413f1da6f146"}, "downloads": -1, "filename": "anybadge-1.2.0rc9.tar.gz", "has_sig": false, "md5_digest": "ded8136c45479da5b82ff1d2d575d3f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15190, "upload_time": "2019-06-01T08:10:01", "upload_time_iso_8601": "2019-06-01T08:10:01.958994Z", "url": "https://files.pythonhosted.org/packages/55/e3/e4579373f8e9e1deb96d6cbea7ef78231e13b0c6a48cbae1ce6276eda888/anybadge-1.2.0rc9.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "cfc2bd0874825027b506a743011562d9", "sha256": "cccb8fdd46987380160529f8050e5753dc9b42f5a4dd846bd33c03228cc0d2ed"}, "downloads": -1, "filename": "anybadge-1.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cfc2bd0874825027b506a743011562d9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16393, "upload_time": "2019-06-02T03:22:40", "upload_time_iso_8601": "2019-06-02T03:22:40.530369Z", "url": "https://files.pythonhosted.org/packages/08/cc/9301edec373813474b31897d90ce7b753db63f6210b6e53f2b95ad564f95/anybadge-1.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f629d196cbd7739d49262160ea3215a6", "sha256": "3f61d41ed25b7b71552cdea70c5125a5c40c0b76bf999518a98ac4951c4486a7"}, "downloads": -1, "filename": "anybadge-1.3.0.tar.gz", "has_sig": false, "md5_digest": "f629d196cbd7739d49262160ea3215a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16236, "upload_time": "2019-06-02T03:22:42", "upload_time_iso_8601": "2019-06-02T03:22:42.169229Z", "url": "https://files.pythonhosted.org/packages/f4/b5/5925790233147955a44bc32f1b86b4da824936005f24c80b6e9c03b12ef3/anybadge-1.3.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "9b7ea1df13809c041d13d91872dedb1e", "sha256": "8abb285064fbf3c2e3a3e8f5999cc53b4ee477398ab9bb3b5518400491a93ab5"}, "downloads": -1, "filename": "anybadge-1.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9b7ea1df13809c041d13d91872dedb1e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16550, "upload_time": "2019-06-02T03:54:57", "upload_time_iso_8601": "2019-06-02T03:54:57.365630Z", "url": "https://files.pythonhosted.org/packages/e7/02/343b9047edefbeef2005393cf915c1fcea304efb9c58662538fc2782d434/anybadge-1.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2a9193846d9e4f76456543a505ce2b6", "sha256": "a1c56c5233c48020d248fca96802c8fd46f5869ea408953ae96826411085634f"}, "downloads": -1, "filename": "anybadge-1.4.0.tar.gz", "has_sig": false, "md5_digest": "f2a9193846d9e4f76456543a505ce2b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16385, "upload_time": "2019-06-02T03:54:59", "upload_time_iso_8601": "2019-06-02T03:54:59.035884Z", "url": "https://files.pythonhosted.org/packages/a1/1d/c109ff3528c9037b220bfac08e8fcee613490b7434f2d70668ccbcbd0cf8/anybadge-1.4.0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "50f8f06f9bb8e2387ec992fdcb823627", "sha256": "7d052641a4c4bc7e9bb90dabe758fa51ee961dee771b6f57b6fc0d37d481b936"}, "downloads": -1, "filename": "anybadge-1.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "50f8f06f9bb8e2387ec992fdcb823627", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16867, "upload_time": "2019-07-13T00:26:53", "upload_time_iso_8601": "2019-07-13T00:26:53.625034Z", "url": "https://files.pythonhosted.org/packages/80/65/f7441a3932a45c7160b2adb13cdd6957297a13b46fec5481b69fea90e49e/anybadge-1.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2d6346e70ba0e274aea71bbff508e50", "sha256": "6ea1587a54e3848b79646777cff5cf035fa80df749748d64ec79d4b4740bfa07"}, "downloads": -1, "filename": "anybadge-1.5.0.tar.gz", "has_sig": false, "md5_digest": "f2d6346e70ba0e274aea71bbff508e50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16861, "upload_time": "2019-07-13T00:26:55", "upload_time_iso_8601": "2019-07-13T00:26:55.447337Z", "url": "https://files.pythonhosted.org/packages/19/8b/311c4b70d89274fafd64d518256d58a636b1107f9756bc007a6c90f6a4eb/anybadge-1.5.0.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "e04175ae949cbc37bf083edb2cffddf4", "sha256": "ddb40f8f009b5b0959a9958fb3e08d2e91a1951620d627d7957360819f9a06ab"}, "downloads": -1, "filename": "anybadge-1.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e04175ae949cbc37bf083edb2cffddf4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16865, "upload_time": "2019-07-16T21:53:12", "upload_time_iso_8601": "2019-07-16T21:53:12.601930Z", "url": "https://files.pythonhosted.org/packages/2b/6e/37ff7095e6861fa79e327a7c6f4190150c1ed798ea7d5413d8e6391e8a6d/anybadge-1.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "234534d8fcc0a79ec3fc65896e58cd42", "sha256": "cf317576b0de3317a1c155d851e3fe475fe4c5704b8f17d188cc84d257dec328"}, "downloads": -1, "filename": "anybadge-1.5.1.tar.gz", "has_sig": false, "md5_digest": "234534d8fcc0a79ec3fc65896e58cd42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16869, "upload_time": "2019-07-16T21:53:14", "upload_time_iso_8601": "2019-07-16T21:53:14.180108Z", "url": "https://files.pythonhosted.org/packages/3f/1c/accfc9386963350c903f17d60e275e1f3a7d6254ea80a01c43c46c8bfca6/anybadge-1.5.1.tar.gz", "yanked": false}], "1.6.1": [{"comment_text": "", "digests": {"md5": "1987b410c8bc34b9f8e4443c932663b0", "sha256": "291dfa48520f936ee65b7e1bbdadb041fbbd21d0501453be0a3be824a62cbe2c"}, "downloads": -1, "filename": "anybadge-1.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1987b410c8bc34b9f8e4443c932663b0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17531, "upload_time": "2019-11-17T04:27:33", "upload_time_iso_8601": "2019-11-17T04:27:33.986470Z", "url": "https://files.pythonhosted.org/packages/4b/0e/c9057eab949b324991cc4c2c17961c28558f45ac63560c6168f584e27d28/anybadge-1.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81347f396e11b2343ee3fdf136b905c3", "sha256": "0da3c9b9e7a55dff965647db5794910bde7bd17e70d247191acdda9e0ff4f38f"}, "downloads": -1, "filename": "anybadge-1.6.1.tar.gz", "has_sig": false, "md5_digest": "81347f396e11b2343ee3fdf136b905c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17431, "upload_time": "2019-11-17T04:27:35", "upload_time_iso_8601": "2019-11-17T04:27:35.794036Z", "url": "https://files.pythonhosted.org/packages/07/81/2793be4319971f4437d5f0166afec2b8261ce95c8b1704297c275d97b0df/anybadge-1.6.1.tar.gz", "yanked": false}], "1.6.2": [{"comment_text": "", "digests": {"md5": "e1fad104b2068ed1ff200e17df68fa23", "sha256": "1e366bff42ad8efc6195a6ef0578b0d3ac80487247215c9a06433dce03f8d21b"}, "downloads": -1, "filename": "anybadge-1.6.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e1fad104b2068ed1ff200e17df68fa23", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17551, "upload_time": "2019-11-17T04:36:57", "upload_time_iso_8601": "2019-11-17T04:36:57.069637Z", "url": "https://files.pythonhosted.org/packages/91/44/8910649ef583869bf0eda26a067144b3722f5f1acc1918284e18ef887633/anybadge-1.6.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "376d0c688cb3b1000cea3c73be52b950", "sha256": "1efbb3fcf959d4fda7a63091bac6133bd893b7a9f6d74d1e2c651bfb43d135f4"}, "downloads": -1, "filename": "anybadge-1.6.2.tar.gz", "has_sig": false, "md5_digest": "376d0c688cb3b1000cea3c73be52b950", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17470, "upload_time": "2019-11-17T04:36:58", "upload_time_iso_8601": "2019-11-17T04:36:58.718659Z", "url": "https://files.pythonhosted.org/packages/6d/ac/2ecf9d3f8e465095145673a62058ea621d10101023dc7c4ff600b09aa8f6/anybadge-1.6.2.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "3a9db2ccc980f1331445435a56e85528", "sha256": "91ab1cbbdc08ee2d04bcae7d061274193f04875036326c42c98bac9347a22a9d"}, "downloads": -1, "filename": "anybadge-1.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3a9db2ccc980f1331445435a56e85528", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18156, "upload_time": "2020-03-15T17:46:51", "upload_time_iso_8601": "2020-03-15T17:46:51.818341Z", "url": "https://files.pythonhosted.org/packages/14/20/5fc5badcc7f348a5135b3199be8cca438fefc3c8c8bbaffa596b807597db/anybadge-1.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "faf2d0a9d13dc4083aeea35632396917", "sha256": "44f5d76926b6085cfcd1b8518a534d741bf25a0ae4a30e548fed26bf4ac8d887"}, "downloads": -1, "filename": "anybadge-1.7.0.tar.gz", "has_sig": false, "md5_digest": "faf2d0a9d13dc4083aeea35632396917", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18095, "upload_time": "2020-03-15T17:46:53", "upload_time_iso_8601": "2020-03-15T17:46:53.266262Z", "url": "https://files.pythonhosted.org/packages/2b/dc/174a7ee51ecf08b85ae56ff6d90e0530087aa59a644bbd864542d6c7dd84/anybadge-1.7.0.tar.gz", "yanked": false}], "1.7.0rc1": [{"comment_text": "", "digests": {"md5": "28cf1a201390dcec9b6bd915c9fe80ce", "sha256": "55bd6baf66a260fbc758eae15727b4eb823256397156dec3184bd96b356e190a"}, "downloads": -1, "filename": "anybadge-1.7.0rc1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "28cf1a201390dcec9b6bd915c9fe80ce", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18054, "upload_time": "2020-03-15T17:03:12", "upload_time_iso_8601": "2020-03-15T17:03:12.110470Z", "url": "https://files.pythonhosted.org/packages/95/6f/c9b13fdefc6e23915e68ebfecc864d93276b69fa569f3bcc1162389c67e9/anybadge-1.7.0rc1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d68477ed521eef24b566ada544826c3", "sha256": "d8f69da97833d8d61597cc7a414f042fbeac2247293b6102642caaae34edefbb"}, "downloads": -1, "filename": "anybadge-1.7.0rc1.tar.gz", "has_sig": false, "md5_digest": "8d68477ed521eef24b566ada544826c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17932, "upload_time": "2020-03-15T17:03:13", "upload_time_iso_8601": "2020-03-15T17:03:13.653529Z", "url": "https://files.pythonhosted.org/packages/f7/c4/0bdb39efce0d1e498f2be624defc5cbed018a8787c19ad3ac2a5a2caf7d2/anybadge-1.7.0rc1.tar.gz", "yanked": false}], "1.7.0rc2": [{"comment_text": "", "digests": {"md5": "73b2c1243f6711fd6e7652a9ff7a1622", "sha256": "c4d5a16e0135427ea5944288cc918d3b913730b9d34e59a3dde2dbb80c8f8f59"}, "downloads": -1, "filename": "anybadge-1.7.0rc2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "73b2c1243f6711fd6e7652a9ff7a1622", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18092, "upload_time": "2020-03-15T17:14:45", "upload_time_iso_8601": "2020-03-15T17:14:45.525019Z", "url": "https://files.pythonhosted.org/packages/f5/00/0b8db617cb5df82de4260cd447542adfca34e3dc38543eeae8ab87fc2e95/anybadge-1.7.0rc2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "716e7024877e5c7c25d6efdc7792e9cb", "sha256": "a547ccffdb936e9f239658c6611af5cc0b7c4760fc713f24df234505d914e465"}, "downloads": -1, "filename": "anybadge-1.7.0rc2.tar.gz", "has_sig": false, "md5_digest": "716e7024877e5c7c25d6efdc7792e9cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17962, "upload_time": "2020-03-15T17:14:46", "upload_time_iso_8601": "2020-03-15T17:14:46.676216Z", "url": "https://files.pythonhosted.org/packages/e2/1e/9d97742a3aede7c79f041f190f515400ce67ec89c535a1a632296eb6da89/anybadge-1.7.0rc2.tar.gz", "yanked": false}], "1.7.0rc3": [{"comment_text": "", "digests": {"md5": "897afbe198e49f6837fa690426fe4051", "sha256": "d235fc6fa291c58015b6fff02a749d6ebd22c7146980d1fb327436b2507290f3"}, "downloads": -1, "filename": "anybadge-1.7.0rc3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "897afbe198e49f6837fa690426fe4051", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18207, "upload_time": "2020-03-15T17:31:30", "upload_time_iso_8601": "2020-03-15T17:31:30.892418Z", "url": "https://files.pythonhosted.org/packages/58/e6/b78ffeb491a1ac3447dd23eb58d3614ecf6d2a57c3230887388075bc1720/anybadge-1.7.0rc3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5964fb48d3ef0940ea0539a95cec1715", "sha256": "56e5eab47d8c3da4208b969879f5a073adf6a444664b0b7d4dffb7bc44db7fd1"}, "downloads": -1, "filename": "anybadge-1.7.0rc3.tar.gz", "has_sig": false, "md5_digest": "5964fb48d3ef0940ea0539a95cec1715", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18099, "upload_time": "2020-03-15T17:31:32", "upload_time_iso_8601": "2020-03-15T17:31:32.363120Z", "url": "https://files.pythonhosted.org/packages/19/20/5a31f865549b30c36208a386d8cd984f119c78f0c9d07a07b636f412fde3/anybadge-1.7.0rc3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3a9db2ccc980f1331445435a56e85528", "sha256": "91ab1cbbdc08ee2d04bcae7d061274193f04875036326c42c98bac9347a22a9d"}, "downloads": -1, "filename": "anybadge-1.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3a9db2ccc980f1331445435a56e85528", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18156, "upload_time": "2020-03-15T17:46:51", "upload_time_iso_8601": "2020-03-15T17:46:51.818341Z", "url": "https://files.pythonhosted.org/packages/14/20/5fc5badcc7f348a5135b3199be8cca438fefc3c8c8bbaffa596b807597db/anybadge-1.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "faf2d0a9d13dc4083aeea35632396917", "sha256": "44f5d76926b6085cfcd1b8518a534d741bf25a0ae4a30e548fed26bf4ac8d887"}, "downloads": -1, "filename": "anybadge-1.7.0.tar.gz", "has_sig": false, "md5_digest": "faf2d0a9d13dc4083aeea35632396917", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18095, "upload_time": "2020-03-15T17:46:53", "upload_time_iso_8601": "2020-03-15T17:46:53.266262Z", "url": "https://files.pythonhosted.org/packages/2b/dc/174a7ee51ecf08b85ae56ff6d90e0530087aa59a644bbd864542d6c7dd84/anybadge-1.7.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:58 2020"}