{"info": {"author": "Matthias K\u00fcmmerer", "author_email": "matthias.kuemmerer@bethgelab.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering"], "description": "Pysaliency\n==========\n\nPysaliency is a python package for saliency modelling. It aims at providing a unified interface\nto both the traditional saliency maps used in saliency modeling as well as probabilistic saliency\nmodels.\n\nPysaliency can evaluate most commonly used saliency metrics, including AUC, sAUC, NSS, CC\nimage-based KL divergence, fixation based KL divergence and SIM for saliency map models and\nlog likelihoods and information gain for probabilistic models.\n\nPysaliency provides several important datasets:\n\n* MIT1003\n* MIT300\n* CAT2000\n* Toronto\n* Koehler\n* iSUN\n* SALICON (both the 2015 and the 2017 edition and each with both the original mouse traces and the inferred fixations)\n* FIGRIM\n* OSIE\n* NUSEF (the part with public images)\n\nand some influential models:\n* AIM\n* SUN\n* ContextAwareSaliency\n* BMS\n* GBVS\n* GBVSIttiKoch\n* Judd\n* IttiKoch\n* RARE2012\n* CovSal\n\n\nThese models are using the original code which is often matlab.\nTherefore, a matlab licence is required to make use of these models, although quite some of them\nwork with octave, too (see below).\n\n\nInstallation\n------------\n\nYou can install pysaliency from pypi via\n\n    pip install pysaliency\n\n\nQuickstart\n----------\n\n    import pysaliency\n    \n    dataset_location = 'datasets'\n    model_location = 'models'\n\n    mit_stimuli, mit_fixations = pysaliency.external_datasets.get_mit1003(location=dataset_location)\n    aim = pysaliency.AIM(location=model_location)\n    saliency_map = aim.saliency_map(mit_stimuli.stimuli[0])\n\n    plt.imshow(saliency_map)\n\n\n    auc = aim.AUC(mit_stimuli, mit_fixations)\n\nIf you already have saliency maps for some dataset, you can import them into pysaliency easily:\n\n    my_model = pysaliency.SaliencyMapModelFromDirectory(mit_stimuli, '/path/to/my/saliency_maps')\n    auc = my_model.AUC(mit_stimuli, mit_fixations)\n\n\nUsing Octave\n------------\n\npysaliency will fall back to octave if no matlab is installed.\nSome models might work with octave, e.g. AIM and GBVSIttiKoch. In Debian/Ubuntu you need to install\n`octave`, `octave-image`, `octave-statistics`, `liboctave-dev`.\n\nThese models and dataset seem to work with octave:\n\n- models\n  - AIM\n  - GBVSIttiKoch\n- datasets\n  - Toronto\n  - MIT1003\n  - MIT300\n  - SALICON\n\nDependencies\n-----------\n\nThe Judd Model needs some libraries to work. In ubuntu/debian you need to install these packages:\n`libopencv-core-dev, libopencv-flann-dev, libopencv-imgproc-dev, libopencv-photo-dev, libopencv-video-dev, libopencv-features2d-dev, libopencv-objdetect-dev, libopencv-calib3d-dev, libopencv-ml-dev, opencv2/contrib/contrib.hpp`", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/matthiask/pysaliency", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pysaliency", "package_url": "https://pypi.org/project/pysaliency/", "platform": "", "project_url": "https://pypi.org/project/pysaliency/", "project_urls": {"Homepage": "https://github.com/matthiask/pysaliency"}, "release_url": "https://pypi.org/project/pysaliency/0.2.19/", "requires_dist": null, "requires_python": "", "summary": "python library to develop, evaluate and benchmark saliency models", "version": "0.2.19", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pysaliency</h1>\n<p>Pysaliency is a python package for saliency modelling. It aims at providing a unified interface\nto both the traditional saliency maps used in saliency modeling as well as probabilistic saliency\nmodels.</p>\n<p>Pysaliency can evaluate most commonly used saliency metrics, including AUC, sAUC, NSS, CC\nimage-based KL divergence, fixation based KL divergence and SIM for saliency map models and\nlog likelihoods and information gain for probabilistic models.</p>\n<p>Pysaliency provides several important datasets:</p>\n<ul>\n<li>MIT1003</li>\n<li>MIT300</li>\n<li>CAT2000</li>\n<li>Toronto</li>\n<li>Koehler</li>\n<li>iSUN</li>\n<li>SALICON (both the 2015 and the 2017 edition and each with both the original mouse traces and the inferred fixations)</li>\n<li>FIGRIM</li>\n<li>OSIE</li>\n<li>NUSEF (the part with public images)</li>\n</ul>\n<p>and some influential models:</p>\n<ul>\n<li>AIM</li>\n<li>SUN</li>\n<li>ContextAwareSaliency</li>\n<li>BMS</li>\n<li>GBVS</li>\n<li>GBVSIttiKoch</li>\n<li>Judd</li>\n<li>IttiKoch</li>\n<li>RARE2012</li>\n<li>CovSal</li>\n</ul>\n<p>These models are using the original code which is often matlab.\nTherefore, a matlab licence is required to make use of these models, although quite some of them\nwork with octave, too (see below).</p>\n<h2>Installation</h2>\n<p>You can install pysaliency from pypi via</p>\n<pre><code>pip install pysaliency\n</code></pre>\n<h2>Quickstart</h2>\n<pre><code>import pysaliency\n\ndataset_location = 'datasets'\nmodel_location = 'models'\n\nmit_stimuli, mit_fixations = pysaliency.external_datasets.get_mit1003(location=dataset_location)\naim = pysaliency.AIM(location=model_location)\nsaliency_map = aim.saliency_map(mit_stimuli.stimuli[0])\n\nplt.imshow(saliency_map)\n\n\nauc = aim.AUC(mit_stimuli, mit_fixations)\n</code></pre>\n<p>If you already have saliency maps for some dataset, you can import them into pysaliency easily:</p>\n<pre><code>my_model = pysaliency.SaliencyMapModelFromDirectory(mit_stimuli, '/path/to/my/saliency_maps')\nauc = my_model.AUC(mit_stimuli, mit_fixations)\n</code></pre>\n<h2>Using Octave</h2>\n<p>pysaliency will fall back to octave if no matlab is installed.\nSome models might work with octave, e.g. AIM and GBVSIttiKoch. In Debian/Ubuntu you need to install\n<code>octave</code>, <code>octave-image</code>, <code>octave-statistics</code>, <code>liboctave-dev</code>.</p>\n<p>These models and dataset seem to work with octave:</p>\n<ul>\n<li>models\n<ul>\n<li>AIM</li>\n<li>GBVSIttiKoch</li>\n</ul>\n</li>\n<li>datasets\n<ul>\n<li>Toronto</li>\n<li>MIT1003</li>\n<li>MIT300</li>\n<li>SALICON</li>\n</ul>\n</li>\n</ul>\n<h2>Dependencies</h2>\n<p>The Judd Model needs some libraries to work. In ubuntu/debian you need to install these packages:\n<code>libopencv-core-dev, libopencv-flann-dev, libopencv-imgproc-dev, libopencv-photo-dev, libopencv-video-dev, libopencv-features2d-dev, libopencv-objdetect-dev, libopencv-calib3d-dev, libopencv-ml-dev, opencv2/contrib/contrib.hpp</code></p>\n\n          </div>"}, "last_serial": 7061578, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "a6d9919823081b53edf6646a6a38b848", "sha256": "98ec293b83899727e4488febfd088311d1b6db5f6a8f57d6341cdf13ac9ad525"}, "downloads": -1, "filename": "pysaliency-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a6d9919823081b53edf6646a6a38b848", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138151, "upload_time": "2018-10-07T11:09:26", "upload_time_iso_8601": "2018-10-07T11:09:26.957907Z", "url": "https://files.pythonhosted.org/packages/4f/f8/e4cdd8d8f31a29293ff32dae5b8442aba10f95d813596052d5899fe5c842/pysaliency-0.2.0.tar.gz", "yanked": false}], "0.2.17": [{"comment_text": "", "digests": {"md5": "e211b970208182b8f8e2c3a5c86b256c", "sha256": "08c738aad2dfded11c72ceecf0cadfe10bcbf62752906c1455e1310a76b1436f"}, "downloads": -1, "filename": "pysaliency-0.2.17.tar.gz", "has_sig": false, "md5_digest": "e211b970208182b8f8e2c3a5c86b256c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 144882, "upload_time": "2020-03-16T14:57:51", "upload_time_iso_8601": "2020-03-16T14:57:51.378831Z", "url": "https://files.pythonhosted.org/packages/41/a4/a216f1e61f895de99a96138a19fb43159785dcd4568eb7d2b0c1cf4d6e83/pysaliency-0.2.17.tar.gz", "yanked": false}], "0.2.19": [{"comment_text": "", "digests": {"md5": "fc4f3e2c529827a705df01b6b9d2ea5d", "sha256": "ccc9ec32a3b849550c0d370a93db80da90de4e893e7a82a9f56ebb76626d5134"}, "downloads": -1, "filename": "pysaliency-0.2.19.tar.gz", "has_sig": false, "md5_digest": "fc4f3e2c529827a705df01b6b9d2ea5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 149707, "upload_time": "2020-04-20T17:17:56", "upload_time_iso_8601": "2020-04-20T17:17:56.034955Z", "url": "https://files.pythonhosted.org/packages/c5/dc/1379c86f4b1683af944ca7085cf201c74bd0c7ec1eb120bc45a7467492a1/pysaliency-0.2.19.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "d3dca6eb78b25a2908cf81c17cc9336e", "sha256": "a213e74c93493f8de3993e7cafd7747a026f74f9fd4eac5aca09946a864f5d68"}, "downloads": -1, "filename": "pysaliency-0.2.3.tar.gz", "has_sig": false, "md5_digest": "d3dca6eb78b25a2908cf81c17cc9336e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138243, "upload_time": "2018-11-23T14:45:27", "upload_time_iso_8601": "2018-11-23T14:45:27.945001Z", "url": "https://files.pythonhosted.org/packages/b2/02/bfc186ddb31f5ff3df5ba598b4bba5a9c0b14fbcd2789a8f55f7b87ef4ad/pysaliency-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fc4f3e2c529827a705df01b6b9d2ea5d", "sha256": "ccc9ec32a3b849550c0d370a93db80da90de4e893e7a82a9f56ebb76626d5134"}, "downloads": -1, "filename": "pysaliency-0.2.19.tar.gz", "has_sig": false, "md5_digest": "fc4f3e2c529827a705df01b6b9d2ea5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 149707, "upload_time": "2020-04-20T17:17:56", "upload_time_iso_8601": "2020-04-20T17:17:56.034955Z", "url": "https://files.pythonhosted.org/packages/c5/dc/1379c86f4b1683af944ca7085cf201c74bd0c7ec1eb120bc45a7467492a1/pysaliency-0.2.19.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:26 2020"}