{"info": {"author": "Samtec - ASH", "author_email": "samtec-ash@samtec.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "# PyRPIO\n\n\u26a0\ufe0f **WARNING: This is a very early pre-release. Expect things to break.** \u26a0\ufe0f\n\n#### A Python 3 addon which provides high-speed access to the Raspberry Pi GPIO interface, supporting regular GPIO as well as i\u00b2c, PWM, and SPI.\n#### This package is inspired by [node-rpio](https://github.com/jperkin/node-rpio) which is a node.js addon.\n\n![PyPI](https://img.shields.io/pypi/v/pyrpio)\n\n# Compatibility\n* Raspberry Pi Models: A, B (revisions 1.0 and 2.0), A+, B+, 2, 3, 3+, 3 A+, 4, Compute Module 3, Zero.\n* Python 3.7+\n\n# Install\n\nInstall the latest from PyPi:\n\n> ```pip install pyrpio```\n\n_-OR-_ using __pipenv__:\n\n> ```pipenv install pyrpio```\n\nInstall from source:\n\n> ```python3 setup.py install```\n\n\n# Supported Interfaces\n\n* GPIO\n* PWM\n* I2C\n* MDIO\n* SPI\n\n# Examples\n\n```python\nimport pyrpio\nfrom pyrpio import i2c, mdio\n\n# Configure options\noptions = pyrpio.RPIOOptions(\n  gpiomem=True\n)\n# Must be called prior to using any interface\npyrpio.configure(options)\n\n### I2C Operations ###\n\ni2c_bus = i2c.I2C('/dev/i2c-3')\ni2c_bus.open()\n\ni2c_bus.set_address(0x50)\n\n# Read 8-bit value using 8-bit addressing\nval = i2c_bus.read_register(0x0)\ni2c_bus.set_address(0x21)\n\n# Read uint16_t using 8-bit addressing\nval = i2c_bus.read_register(0x0, reg_nbytes=1, val_nbytes=2)\n\n# Read int16_t using 8-bit addressing\nval = i2c_bus.read_register(0x0, reg_nbytes=1, val_nbytes=2, signed=True)\n\n# Seq read 8 regs starting @ 0x0 using I2C repeat start\nregs = i2c_bus.read_register_sequential(0,8)\n\n# Close up shop\ni2c_bus.close()\n\n### MDIO Operations ###\n\n# Create bus using GPIO pins 23 and 24 (bit-bang)\nmdio_bus = mdio.MDIO(23, 24)\nmdio_bus.open()\n\n# Read register 0x10 from device 0x30 (CLAUSE-45)\nmdio_bus.read_c45_register(0x30, 0x00, 0x10)\n\n# Read register set from device 0x30 (CLAUSE-45)\nmdio_bus.read_c45_registers(0x30, 0x00, [0,1,2,3,4])\n\n# Close up shop\nmdio_bus.close()\n```\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n## Maintainers\n\n- [Samtec - ASH](https://samtec-ash.com)\n\n# TODO\n\n* Expose all major, high-level C routines in bcm2835\n* Create convenience Python class for each interface: I2C, SPI, MDIO, PWM, GPIO\n* Enable specifying I2C bus:\n  - RPI 4 has 6 I2C buses\n  - For older RPIs, later Raspbian images enable kernel-level bit-bang i2c.\n* Make thread safe and support locking mechanism\n* Make mock version to allow testing/developing on non-RPI (MacOS, x86 Linux)\n*\n* Testing...", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Samtec-ASH/pyrpio", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "PyRPIO", "package_url": "https://pypi.org/project/PyRPIO/", "platform": "", "project_url": "https://pypi.org/project/PyRPIO/", "project_urls": {"Homepage": "https://github.com/Samtec-ASH/pyrpio"}, "release_url": "https://pypi.org/project/PyRPIO/0.0.5/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Python-wrapped RPIO", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyRPIO</h1>\n<p>\u26a0\ufe0f <strong>WARNING: This is a very early pre-release. Expect things to break.</strong> \u26a0\ufe0f</p>\n<h4>A Python 3 addon which provides high-speed access to the Raspberry Pi GPIO interface, supporting regular GPIO as well as i\u00b2c, PWM, and SPI.</h4>\n<h4>This package is inspired by <a href=\"https://github.com/jperkin/node-rpio\" rel=\"nofollow\">node-rpio</a> which is a node.js addon.</h4>\n<p><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8c72870203fb65d231fde6949d00fb637a80d5e3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70797270696f\"></p>\n<h1>Compatibility</h1>\n<ul>\n<li>Raspberry Pi Models: A, B (revisions 1.0 and 2.0), A+, B+, 2, 3, 3+, 3 A+, 4, Compute Module 3, Zero.</li>\n<li>Python 3.7+</li>\n</ul>\n<h1>Install</h1>\n<p>Install the latest from PyPi:</p>\n<blockquote>\n<p><code>pip install pyrpio</code></p>\n</blockquote>\n<p><em>-OR-</em> using <strong>pipenv</strong>:</p>\n<blockquote>\n<p><code>pipenv install pyrpio</code></p>\n</blockquote>\n<p>Install from source:</p>\n<blockquote>\n<p><code>python3 setup.py install</code></p>\n</blockquote>\n<h1>Supported Interfaces</h1>\n<ul>\n<li>GPIO</li>\n<li>PWM</li>\n<li>I2C</li>\n<li>MDIO</li>\n<li>SPI</li>\n</ul>\n<h1>Examples</h1>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyrpio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyrpio</span> <span class=\"kn\">import</span> <span class=\"n\">i2c</span><span class=\"p\">,</span> <span class=\"n\">mdio</span>\n\n<span class=\"c1\"># Configure options</span>\n<span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"n\">pyrpio</span><span class=\"o\">.</span><span class=\"n\">RPIOOptions</span><span class=\"p\">(</span>\n  <span class=\"n\">gpiomem</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># Must be called prior to using any interface</span>\n<span class=\"n\">pyrpio</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"n\">options</span><span class=\"p\">)</span>\n\n<span class=\"c1\">### I2C Operations ###</span>\n\n<span class=\"n\">i2c_bus</span> <span class=\"o\">=</span> <span class=\"n\">i2c</span><span class=\"o\">.</span><span class=\"n\">I2C</span><span class=\"p\">(</span><span class=\"s1\">'/dev/i2c-3'</span><span class=\"p\">)</span>\n<span class=\"n\">i2c_bus</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">()</span>\n\n<span class=\"n\">i2c_bus</span><span class=\"o\">.</span><span class=\"n\">set_address</span><span class=\"p\">(</span><span class=\"mh\">0x50</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Read 8-bit value using 8-bit addressing</span>\n<span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">i2c_bus</span><span class=\"o\">.</span><span class=\"n\">read_register</span><span class=\"p\">(</span><span class=\"mh\">0x0</span><span class=\"p\">)</span>\n<span class=\"n\">i2c_bus</span><span class=\"o\">.</span><span class=\"n\">set_address</span><span class=\"p\">(</span><span class=\"mh\">0x21</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Read uint16_t using 8-bit addressing</span>\n<span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">i2c_bus</span><span class=\"o\">.</span><span class=\"n\">read_register</span><span class=\"p\">(</span><span class=\"mh\">0x0</span><span class=\"p\">,</span> <span class=\"n\">reg_nbytes</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">val_nbytes</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Read int16_t using 8-bit addressing</span>\n<span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">i2c_bus</span><span class=\"o\">.</span><span class=\"n\">read_register</span><span class=\"p\">(</span><span class=\"mh\">0x0</span><span class=\"p\">,</span> <span class=\"n\">reg_nbytes</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">val_nbytes</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">signed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Seq read 8 regs starting @ 0x0 using I2C repeat start</span>\n<span class=\"n\">regs</span> <span class=\"o\">=</span> <span class=\"n\">i2c_bus</span><span class=\"o\">.</span><span class=\"n\">read_register_sequential</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Close up shop</span>\n<span class=\"n\">i2c_bus</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"c1\">### MDIO Operations ###</span>\n\n<span class=\"c1\"># Create bus using GPIO pins 23 and 24 (bit-bang)</span>\n<span class=\"n\">mdio_bus</span> <span class=\"o\">=</span> <span class=\"n\">mdio</span><span class=\"o\">.</span><span class=\"n\">MDIO</span><span class=\"p\">(</span><span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">)</span>\n<span class=\"n\">mdio_bus</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Read register 0x10 from device 0x30 (CLAUSE-45)</span>\n<span class=\"n\">mdio_bus</span><span class=\"o\">.</span><span class=\"n\">read_c45_register</span><span class=\"p\">(</span><span class=\"mh\">0x30</span><span class=\"p\">,</span> <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mh\">0x10</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Read register set from device 0x30 (CLAUSE-45)</span>\n<span class=\"n\">mdio_bus</span><span class=\"o\">.</span><span class=\"n\">read_c45_registers</span><span class=\"p\">(</span><span class=\"mh\">0x30</span><span class=\"p\">,</span> <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Close up shop</span>\n<span class=\"n\">mdio_bus</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE.md\" rel=\"nofollow\">LICENSE.md</a> file for details</p>\n<h2>Maintainers</h2>\n<ul>\n<li><a href=\"https://samtec-ash.com\" rel=\"nofollow\">Samtec - ASH</a></li>\n</ul>\n<h1>TODO</h1>\n<ul>\n<li>Expose all major, high-level C routines in bcm2835</li>\n<li>Create convenience Python class for each interface: I2C, SPI, MDIO, PWM, GPIO</li>\n<li>Enable specifying I2C bus:\n<ul>\n<li>RPI 4 has 6 I2C buses</li>\n<li>For older RPIs, later Raspbian images enable kernel-level bit-bang i2c.</li>\n</ul>\n</li>\n<li>Make thread safe and support locking mechanism</li>\n<li>Make mock version to allow testing/developing on non-RPI (MacOS, x86 Linux)</li>\n<li>\n<li>Testing...</li>\n</ul>\n\n          </div>"}, "last_serial": 6422419, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "71ffbdd2a8167cc4102c4452928f7253", "sha256": "3d2b5e638fd371e69f35eb6b955bce45a44ce83148a7e441b5d0e22dca0486f7"}, "downloads": -1, "filename": "PyRPIO-0.0.2.tar.gz", "has_sig": false, "md5_digest": "71ffbdd2a8167cc4102c4452928f7253", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43314, "upload_time": "2019-10-31T03:40:40", "upload_time_iso_8601": "2019-10-31T03:40:40.279291Z", "url": "https://files.pythonhosted.org/packages/d2/62/e460e0303cd79b543a165bb778ce66dd38e4a6291d3a743e7cdf0928a224/PyRPIO-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "88d441677d910947e28e674087b38efd", "sha256": "ef945f2132aa087edb0d81822c1094b05fb8746a8f0dd8eb234a584e63df3986"}, "downloads": -1, "filename": "PyRPIO-0.0.3.tar.gz", "has_sig": false, "md5_digest": "88d441677d910947e28e674087b38efd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 43959, "upload_time": "2019-10-31T11:59:38", "upload_time_iso_8601": "2019-10-31T11:59:38.934418Z", "url": "https://files.pythonhosted.org/packages/c0/22/bfd5827c055bb0b21eb359a64d06f8f815fd34319daba7d186cb9e0ea1e7/PyRPIO-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "17996a7c8af61c9ecfb33f7b043775fd", "sha256": "4cc2ea16b0f34ed75ee2311c98bd787bb5632bb4d2c23df8ab3c508815d7b5ad"}, "downloads": -1, "filename": "PyRPIO-0.0.4.tar.gz", "has_sig": false, "md5_digest": "17996a7c8af61c9ecfb33f7b043775fd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 55956, "upload_time": "2019-11-20T14:56:57", "upload_time_iso_8601": "2019-11-20T14:56:57.042781Z", "url": "https://files.pythonhosted.org/packages/4d/db/2f468ee60609eed14e9d976f2f1613de18311587c3dfc8859c7586c878c4/PyRPIO-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "3ae9538fd245c58d99258fed4c71123e", "sha256": "48b8ccc7e148000cca853a3ce56084d49c6d1487d0dd328e9186cd3c8aef053b"}, "downloads": -1, "filename": "PyRPIO-0.0.5.tar.gz", "has_sig": false, "md5_digest": "3ae9538fd245c58d99258fed4c71123e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 56128, "upload_time": "2020-01-09T14:16:03", "upload_time_iso_8601": "2020-01-09T14:16:03.712553Z", "url": "https://files.pythonhosted.org/packages/45/51/4d5130e2ed0d2091519ac8e697482739ab1a6c48e8026ff6a917f07e16ce/PyRPIO-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3ae9538fd245c58d99258fed4c71123e", "sha256": "48b8ccc7e148000cca853a3ce56084d49c6d1487d0dd328e9186cd3c8aef053b"}, "downloads": -1, "filename": "PyRPIO-0.0.5.tar.gz", "has_sig": false, "md5_digest": "3ae9538fd245c58d99258fed4c71123e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 56128, "upload_time": "2020-01-09T14:16:03", "upload_time_iso_8601": "2020-01-09T14:16:03.712553Z", "url": "https://files.pythonhosted.org/packages/45/51/4d5130e2ed0d2091519ac8e697482739ab1a6c48e8026ff6a917f07e16ce/PyRPIO-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:35 2020"}