{"info": {"author": "3g0r", "author_email": "eg0r.n1k0l43v@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "ZeroC Ice logging utils\n=======================\n\nlogging.conf example\n^^^^^^^^^^^^^^^^^^^^\n\n.. code::\n\n  # https://docs.python.org/3.6/library/logging.config.html\n  #\n  # Level\t        Numeric value\n  # CRITICAL      50\n  # ERROR         40\n  # WARNING       30\n  # INFO          20\n  # DEBUG         10\n  # NOTSET        0\n  # higher level - less logs\n\n  [loggers]\n  keys=root\n\n  [handlers]\n  keys=consoleHandler\n\n  [logger_root]\n  level=DEBUG\n  handlers=consoleHandler\n\n  [handler_consoleHandler]\n  class=StreamHandler\n  level=DEBUG\n  formatter=consoleFormatter\n  args=(sys.stdout,)\n\n  [formatter_consoleFormatter]\n  class=ice_yml_log_formatter.YAMLLogFormatter\n  format=[%(levelname)s] %(name)s: %(msg)s\n  datefmt=\n\nsimple usage example\n^^^^^^^^^^^^^^^^^^^^\n.. code:: python\n\n  import os\n  import logging.config\n  import logging\n\n  logging.config.fileConfig('./logging.conf')\n\n  #....\n  #....\n  # in your ice servant method\n  try:\n    raise Exception('Any cause')\n  except:\n    logging.exception('Oops!',\n                      extra={\n                        'ice_current': current,\n                        'context': {\n                          'any_info_key': 'any info value',\n                        },\n                      })\n\nUse ``ice_current`` for ice request metatada print, and ``context`` for extra structured information.\n\nlog example\n^^^^^^^^^^^\n.. code::\n\n  [DEBUG] services.fun - Dispatch\n    iceIdentity: ZeroC/Fun\n    iceOperation: something\n    iceRequestId: 1\n\n  [ERROR] services.fun - Unexpected error\n    iceIdentity: ZeroC/Fun\n    iceOperation: something\n    iceRequestId: 1\n    context:\n      any_info_key: any info value\n    Error: Fun::ExampleException\n      error_data:\n        some_prop: 1\n      stack_trace:\n        File \"path-to-source/fun.py\", line 71, in wrapped\n          return method(self, *args, **kwargs)\n\n        File \"path-to-source/fun.py\", line 123, in something\n          raise Fun.ExampleException(some_prop=1)\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/3g0r/ice-yml-log-formatter", "keywords": "ice", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ice-yml-log-formatter", "package_url": "https://pypi.org/project/ice-yml-log-formatter/", "platform": "", "project_url": "https://pypi.org/project/ice-yml-log-formatter/", "project_urls": {"Homepage": "https://github.com/3g0r/ice-yml-log-formatter"}, "release_url": "https://pypi.org/project/ice-yml-log-formatter/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "ZeroC Ice logging utils", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"logging-conf-example\">\n<h2>logging.conf example</h2>\n<pre># https://docs.python.org/3.6/library/logging.config.html\n#\n# Level               Numeric value\n# CRITICAL      50\n# ERROR         40\n# WARNING       30\n# INFO          20\n# DEBUG         10\n# NOTSET        0\n# higher level - less logs\n\n[loggers]\nkeys=root\n\n[handlers]\nkeys=consoleHandler\n\n[logger_root]\nlevel=DEBUG\nhandlers=consoleHandler\n\n[handler_consoleHandler]\nclass=StreamHandler\nlevel=DEBUG\nformatter=consoleFormatter\nargs=(sys.stdout,)\n\n[formatter_consoleFormatter]\nclass=ice_yml_log_formatter.YAMLLogFormatter\nformat=[%(levelname)s] %(name)s: %(msg)s\ndatefmt=\n</pre>\n</div>\n<div id=\"simple-usage-example\">\n<h2>simple usage example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging.config</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">fileConfig</span><span class=\"p\">(</span><span class=\"s1\">'./logging.conf'</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#....</span>\n<span class=\"c1\">#....</span>\n<span class=\"c1\"># in your ice servant method</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n  <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s1\">'Any cause'</span><span class=\"p\">)</span>\n<span class=\"k\">except</span><span class=\"p\">:</span>\n  <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">exception</span><span class=\"p\">(</span><span class=\"s1\">'Oops!'</span><span class=\"p\">,</span>\n                    <span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                      <span class=\"s1\">'ice_current'</span><span class=\"p\">:</span> <span class=\"n\">current</span><span class=\"p\">,</span>\n                      <span class=\"s1\">'context'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                        <span class=\"s1\">'any_info_key'</span><span class=\"p\">:</span> <span class=\"s1\">'any info value'</span><span class=\"p\">,</span>\n                      <span class=\"p\">},</span>\n                    <span class=\"p\">})</span>\n</pre>\n<p>Use <tt>ice_current</tt> for ice request metatada print, and <tt>context</tt> for extra structured information.</p>\n</div>\n<div id=\"log-example\">\n<h2>log example</h2>\n<pre>[DEBUG] services.fun - Dispatch\n  iceIdentity: ZeroC/Fun\n  iceOperation: something\n  iceRequestId: 1\n\n[ERROR] services.fun - Unexpected error\n  iceIdentity: ZeroC/Fun\n  iceOperation: something\n  iceRequestId: 1\n  context:\n    any_info_key: any info value\n  Error: Fun::ExampleException\n    error_data:\n      some_prop: 1\n    stack_trace:\n      File \"path-to-source/fun.py\", line 71, in wrapped\n        return method(self, *args, **kwargs)\n\n      File \"path-to-source/fun.py\", line 123, in something\n        raise Fun.ExampleException(some_prop=1)\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2967261, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b30bbb579c23249d0e347bbd969ecaa8", "sha256": "428f9cd8c02a7815744536bfd4705098c6618d968314e5636beb6c8c64345d04"}, "downloads": -1, "filename": "ice-yml-log-formatter-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b30bbb579c23249d0e347bbd969ecaa8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4234, "upload_time": "2017-06-22T07:14:22", "upload_time_iso_8601": "2017-06-22T07:14:22.625510Z", "url": "https://files.pythonhosted.org/packages/4e/6c/ffa6c015f3a4a5ca8bb3bd877d7cf551ed3b7e50b96abc46ec33a48cdeb8/ice-yml-log-formatter-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7105cc6777161c6e62ad804732d2f2f0", "sha256": "732dc83964acda92818ce198f339b7cf648e730042f8312f53b21bc4a65e69af"}, "downloads": -1, "filename": "ice-yml-log-formatter-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7105cc6777161c6e62ad804732d2f2f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4211, "upload_time": "2017-06-22T07:20:49", "upload_time_iso_8601": "2017-06-22T07:20:49.233705Z", "url": "https://files.pythonhosted.org/packages/48/21/3ebbed2d332ba1ec7048fb1999d8cd67a7563abd420c3778c86823482b18/ice-yml-log-formatter-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ab17abb5530c2c80a9907ce41aa4e006", "sha256": "6ae46e4341f334defc8fe49f0e1ad33144735ec0439a0c3269a904bd8d0bd735"}, "downloads": -1, "filename": "ice-yml-log-formatter-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ab17abb5530c2c80a9907ce41aa4e006", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4188, "upload_time": "2017-06-22T07:33:01", "upload_time_iso_8601": "2017-06-22T07:33:01.120352Z", "url": "https://files.pythonhosted.org/packages/a5/28/75cec642529aa9c55b5fb88c8f1cb4f6dc36ec2814b82ea3de6fa0b8e71e/ice-yml-log-formatter-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ab17abb5530c2c80a9907ce41aa4e006", "sha256": "6ae46e4341f334defc8fe49f0e1ad33144735ec0439a0c3269a904bd8d0bd735"}, "downloads": -1, "filename": "ice-yml-log-formatter-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ab17abb5530c2c80a9907ce41aa4e006", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4188, "upload_time": "2017-06-22T07:33:01", "upload_time_iso_8601": "2017-06-22T07:33:01.120352Z", "url": "https://files.pythonhosted.org/packages/a5/28/75cec642529aa9c55b5fb88c8f1cb4f6dc36ec2814b82ea3de6fa0b8e71e/ice-yml-log-formatter-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:04 2020"}