{"info": {"author": "David Delassus", "author_email": "david.jose.delassus@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "TCP to Canopsis connector\n=========================\n\n.. image:: https://travis-ci.org/linkdd/tcp2canopsis.svg?branch=master\n\n\nThis package provides a connector which listen for events on a TCP port.\n\nUsage\n-----\n\nRun the script on a designated port (``8000`` in this example) and with the URL\nof the AMQP server :\n\n.. code-block::\n\n   $ tcp2canopsis -p 8000 -a \"amqp://guest:guest@localhost:5672/\" -t token\n\nThen use ``telnet`` to publish events :\n\n.. code-block::\n\n   $ telnet localhost 8000\n   Trying ::1...\n   Connected to localhost.\n   Escape character is '^]'.\n   token\n   {\"connector\": \"test\", \"connector_name\": \"testname\", \"event_type\": \"check\", \"source_type\": \"resource\", \"component\": \"testcmp\", \"resource\": \"testrsrc\", \"state\": 0, \"output\": \"test output\"}\n   {\"connector\": \"test\", \"connector_name\": \"testname\", \"event_type\": \"check\", \"source_type\": \"resource\", \"component\": \"testcmp\", \"resource\": \"testrsrc\", \"state\": 1, \"output\": \"test output 2\"}\n   {\"connector\": \"test\", \"connector_name\": \"testname\", \"event_type\": \"check\", \"source_type\": \"resource\", \"component\": \"testcmp\", \"resource\": \"testrsrc\", \"state\": 0, \"output\": \"test output 3\"}\n   Connection closed by foreign host.\n\nOr in a JSON file :\n\n.. code-block:: javascript\n\n   {\"tcp2canopsis\": {\n       \"port\": 8000,\n       \"amqp\": \"amqp://guest:guest@localhost:5672/\",\n       \"token\": \"token\"\n   }}\n\nAnd load the file using :\n\n.. code-block::\n\n   $ tcp2canopsis -c path/to/config.json\n\nInstallation\n------------\n\nJust type :\n\n.. code-block::\n\n   $ pip install tcp2canopsis\n\nOr, to install it in a locally :\n\n.. code-block::\n\n   $ ./makefile\n\nThis will create a virtual Python environment in the current folder, and install the dependencies listed by ``requirements.txt``.\nFinally, it will perform a ``python setup.py install``.\n\nAfter executing this script, the connector will be available in the current folder (which is now a virtual Python environment).\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/linkdd/tcp2canopsis/tarball/0.2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/linkdd/tcp2canopsis", "keywords": "canopsis", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "tcp2canopsis", "package_url": "https://pypi.org/project/tcp2canopsis/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tcp2canopsis/", "project_urls": {"Download": "https://github.com/linkdd/tcp2canopsis/tarball/0.2", "Homepage": "https://github.com/linkdd/tcp2canopsis"}, "release_url": "https://pypi.org/project/tcp2canopsis/0.3/", "requires_dist": null, "requires_python": null, "summary": "Canopsis Connector which listen for JSON events on TCP port", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://travis-ci.org/linkdd/tcp2canopsis.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/da95abcb6e84523f05e0fa6c1e51f3017f7c8a09/68747470733a2f2f7472617669732d63692e6f72672f6c696e6b64642f7463703263616e6f707369732e7376673f6272616e63683d6d6173746572\">\n<p>This package provides a connector which listen for events on a TCP port.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Run the script on a designated port (<tt>8000</tt> in this example) and with the URL\nof the AMQP server :</p>\n<pre>$ tcp2canopsis -p 8000 -a \"amqp://guest:guest@localhost:5672/\" -t token\n</pre>\n<p>Then use <tt>telnet</tt> to publish events :</p>\n<pre>$ telnet localhost 8000\nTrying ::1...\nConnected to localhost.\nEscape character is '^]'.\ntoken\n{\"connector\": \"test\", \"connector_name\": \"testname\", \"event_type\": \"check\", \"source_type\": \"resource\", \"component\": \"testcmp\", \"resource\": \"testrsrc\", \"state\": 0, \"output\": \"test output\"}\n{\"connector\": \"test\", \"connector_name\": \"testname\", \"event_type\": \"check\", \"source_type\": \"resource\", \"component\": \"testcmp\", \"resource\": \"testrsrc\", \"state\": 1, \"output\": \"test output 2\"}\n{\"connector\": \"test\", \"connector_name\": \"testname\", \"event_type\": \"check\", \"source_type\": \"resource\", \"component\": \"testcmp\", \"resource\": \"testrsrc\", \"state\": 0, \"output\": \"test output 3\"}\nConnection closed by foreign host.\n</pre>\n<p>Or in a JSON file :</p>\n<pre><span class=\"p\">{</span><span class=\"s2\">\"tcp2canopsis\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"port\"</span><span class=\"o\">:</span> <span class=\"mi\">8000</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"amqp\"</span><span class=\"o\">:</span> <span class=\"s2\">\"amqp://guest:guest@localhost:5672/\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"token\"</span><span class=\"o\">:</span> <span class=\"s2\">\"token\"</span>\n<span class=\"p\">}}</span>\n</pre>\n<p>And load the file using :</p>\n<pre>$ tcp2canopsis -c path/to/config.json\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Just type :</p>\n<pre>$ pip install tcp2canopsis\n</pre>\n<p>Or, to install it in a locally :</p>\n<pre>$ ./makefile\n</pre>\n<p>This will create a virtual Python environment in the current folder, and install the dependencies listed by <tt>requirements.txt</tt>.\nFinally, it will perform a <tt>python setup.py install</tt>.</p>\n<p>After executing this script, the connector will be available in the current folder (which is now a virtual Python environment).</p>\n</div>\n\n          </div>"}, "last_serial": 1341372, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3022cc604e85d912e8ef0cd4f932412f", "sha256": "5ee53ef6be131807a161fe42d6a183354a013067d7f808c2c1d4ba31bb118305"}, "downloads": -1, "filename": "tcp2canopsis-0.1.tar.gz", "has_sig": false, "md5_digest": "3022cc604e85d912e8ef0cd4f932412f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2816, "upload_time": "2014-12-06T02:29:59", "upload_time_iso_8601": "2014-12-06T02:29:59.594702Z", "url": "https://files.pythonhosted.org/packages/80/00/e32cbf314ad7145c2d2cb521239cf04a411a6523db15788c4949ef29a58e/tcp2canopsis-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "fbd34aaa8d9e260f1a87cd454ae3789d", "sha256": "59a6a54f966c96b26abf5254d3c1e6b2a5cdc27ee47ad357c9426f53716bf040"}, "downloads": -1, "filename": "tcp2canopsis-0.1.1.tar.gz", "has_sig": false, "md5_digest": "fbd34aaa8d9e260f1a87cd454ae3789d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2831, "upload_time": "2014-12-06T02:38:55", "upload_time_iso_8601": "2014-12-06T02:38:55.930212Z", "url": "https://files.pythonhosted.org/packages/78/2d/2af5557c320f1f8b356c82ee670b2ea43b1231ca8043ad7fbfb544cad6a2/tcp2canopsis-0.1.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "4c98016ec71cfa68a644712b87812df5", "sha256": "48b86523c096591beb3263563ee6f7a31a3a94d32cb27eadd52ed31e1aaca661"}, "downloads": -1, "filename": "tcp2canopsis-0.2.tar.gz", "has_sig": false, "md5_digest": "4c98016ec71cfa68a644712b87812df5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3274, "upload_time": "2014-12-08T13:43:30", "upload_time_iso_8601": "2014-12-08T13:43:30.157175Z", "url": "https://files.pythonhosted.org/packages/49/d5/fb9b477540cec37415f0ee07fd86d3b3ff5aa9f57af61c8d773c45f08cde/tcp2canopsis-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "4a8b0ec40fa427c71cfd10c7a1e91ca5", "sha256": "60683c3d333146a026d16f175fe0b2fb93b98c34502a7041f3b8c93807612072"}, "downloads": -1, "filename": "tcp2canopsis-0.3.tar.gz", "has_sig": false, "md5_digest": "4a8b0ec40fa427c71cfd10c7a1e91ca5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3414, "upload_time": "2014-12-12T12:59:40", "upload_time_iso_8601": "2014-12-12T12:59:40.113508Z", "url": "https://files.pythonhosted.org/packages/cf/d5/4bd89b558f3136b394ab8c9bc0d457c6119d3329f5cb54fa955df5ede004/tcp2canopsis-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4a8b0ec40fa427c71cfd10c7a1e91ca5", "sha256": "60683c3d333146a026d16f175fe0b2fb93b98c34502a7041f3b8c93807612072"}, "downloads": -1, "filename": "tcp2canopsis-0.3.tar.gz", "has_sig": false, "md5_digest": "4a8b0ec40fa427c71cfd10c7a1e91ca5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3414, "upload_time": "2014-12-12T12:59:40", "upload_time_iso_8601": "2014-12-12T12:59:40.113508Z", "url": "https://files.pythonhosted.org/packages/cf/d5/4bd89b558f3136b394ab8c9bc0d457c6119d3329f5cb54fa955df5ede004/tcp2canopsis-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:19 2020"}