{"info": {"author": "Luke Pomfrey", "author_email": "luke.pomfrey@titanemail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP"], "description": "django-filemaker\n================\n\nPythonic FileMaker\u00ae access and FileMaker layout to Django model mapping.\n\n.. image:: https://badge.fury.io/py/django-filemaker.png\n    :target: http://badge.fury.io/py/django-filemaker\n\n.. image:: https://travis-ci.org/TitanEntertainmentGroup/django-filemaker.png?branch=master\n    :target: https://travis-ci.org/TitanEntertainmentGroup/django-filemaker\n\n.. image:: https://coveralls.io/repos/TitanEntertainmentGroup/django-filemaker/badge.png?branch=master\n    :target: https://coveralls.io/r/TitanEntertainmentGroup/django-filemaker?branch=master\n\n.. image:: https://pypip.in/d/django-filemaker/badge.png\n        :target: https://crate.io/packages/django-filemaker?version=latest\n\nQuickstart\n----------\n\nCreate a ``FileMakerModel``:\n::\n    \n    from django.contrib.flatpages.models import FlatPage\n    from django.contrib.sites.models import Site\n    from filemaker import fields, FileMakerModel\n\n\n    class FileMakerFlatPage(FileMakerModel):\n\n        # The first argument to a FileMaker field should be the field name for\n        # that item on the FileMaker layout\n        pk = fields.IntegerField('zpkFlatpageID')\n        url = fields.CharField('Url_FileMaker_Field')\n        title = fields.CharField('Title_FileMaker_Field')\n        content = fields.CharField('Content_FileMaker_Field')\n        # You can pass in a default value to any field\n        template_name = fields.CharField(\n            'Template_Name_Field', default='flatpages/default.html')\n        registration_required = fields.BooleanField(\n            'Registration_Required_Field', default=False)\n        sites = fields.ModelListField('SITES', model=FileMakerSite)\n\n        meta = {\n            'connection': {\n                'url': 'http://user:password@example.com/',\n                'db': 'Db_Name',\n                'layout': 'Layout_Name',\n            },\n            'model': FlatPage,\n            'pk_name': 'pk',\n        }\n\n    class FileMakerSite(FileMakerModel):\n        # On related fields we specify the relative field to the field name\n        # specified on the calling model (FileMakerFlatPage), unless the\n        # calling model uses the special '+self' value which passes the layout\n        # of that model to the sub model\n        domain = fields.CharField('Domain_field')\n        name = fields.CharField('Name_Field')\n\n        meta = {\n            'model': Site,\n            # abstract here means it is a child of an actual FileMaker layout\n            'abstract': True,  \n        }\n\n\nQuery FileMaker for instances of your model, and convert them to django\ninstances using the ``to_django`` method:\n::\n    >>> # The Django style methods will convert field names\n    >>> FlatPage.objects.count() == 0\n    True\n    >>> fm_page = FileMakerFlatPage.objects.get(pk=1)\n    >>> fm_page.to_django()\n    <FlatPage: pk=1>\n    >>> FlatPage.objects.count() == 1\n    True\n\n\nYou can also use the FileMaker style manager methods to query:\n::\n\n    >>> FileMakerFlatPage.objects.find(zpkFlatpageID=1)\n    <FMXMLObject...>\n\nDocumentation\n-------------\n\nFull documentation is available on `ReadTheDocs\n<https://django-filemaker.readthedocs.org/en/latest/>`_\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/TitanEntertainmentGroup/django-filemaker", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-filemaker", "package_url": "https://pypi.org/project/django-filemaker/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-filemaker/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/TitanEntertainmentGroup/django-filemaker"}, "release_url": "https://pypi.org/project/django-filemaker/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "FileMaker access and integration with Django", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            django-filemaker<br>================<br><br>Pythonic FileMaker\u00ae access and FileMaker layout to Django model mapping.<br><br>.. image:: https://badge.fury.io/py/django-filemaker.png<br>    :target: http://badge.fury.io/py/django-filemaker<br><br>.. image:: https://travis-ci.org/TitanEntertainmentGroup/django-filemaker.png?branch=master<br>    :target: https://travis-ci.org/TitanEntertainmentGroup/django-filemaker<br><br>.. image:: https://coveralls.io/repos/TitanEntertainmentGroup/django-filemaker/badge.png?branch=master<br>    :target: https://coveralls.io/r/TitanEntertainmentGroup/django-filemaker?branch=master<br><br>.. image:: https://pypip.in/d/django-filemaker/badge.png<br>        :target: https://crate.io/packages/django-filemaker?version=latest<br><br>Quickstart<br>----------<br><br>Create a ``FileMakerModel``:<br>::<br>    <br>    from django.contrib.flatpages.models import FlatPage<br>    from django.contrib.sites.models import Site<br>    from filemaker import fields, FileMakerModel<br><br><br>    class FileMakerFlatPage(FileMakerModel):<br><br>        # The first argument to a FileMaker field should be the field name for<br>        # that item on the FileMaker layout<br>        pk = fields.IntegerField('zpkFlatpageID')<br>        url = fields.CharField('Url_FileMaker_Field')<br>        title = fields.CharField('Title_FileMaker_Field')<br>        content = fields.CharField('Content_FileMaker_Field')<br>        # You can pass in a default value to any field<br>        template_name = fields.CharField(<br>            'Template_Name_Field', default='flatpages/default.html')<br>        registration_required = fields.BooleanField(<br>            'Registration_Required_Field', default=False)<br>        sites = fields.ModelListField('SITES', model=FileMakerSite)<br><br>        meta = {<br>            'connection': {<br>                'url': 'http://user:password@example.com/',<br>                'db': 'Db_Name',<br>                'layout': 'Layout_Name',<br>            },<br>            'model': FlatPage,<br>            'pk_name': 'pk',<br>        }<br><br>    class FileMakerSite(FileMakerModel):<br>        # On related fields we specify the relative field to the field name<br>        # specified on the calling model (FileMakerFlatPage), unless the<br>        # calling model uses the special '+self' value which passes the layout<br>        # of that model to the sub model<br>        domain = fields.CharField('Domain_field')<br>        name = fields.CharField('Name_Field')<br><br>        meta = {<br>            'model': Site,<br>            # abstract here means it is a child of an actual FileMaker layout<br>            'abstract': True,  <br>        }<br><br><br>Query FileMaker for instances of your model, and convert them to django<br>instances using the ``to_django`` method:<br>::<br>    &gt;&gt;&gt; # The Django style methods will convert field names<br>    &gt;&gt;&gt; FlatPage.objects.count() == 0<br>    True<br>    &gt;&gt;&gt; fm_page = FileMakerFlatPage.objects.get(pk=1)<br>    &gt;&gt;&gt; fm_page.to_django()<br>    &lt;FlatPage: pk=1&gt;<br>    &gt;&gt;&gt; FlatPage.objects.count() == 1<br>    True<br><br><br>You can also use the FileMaker style manager methods to query:<br>::<br><br>    &gt;&gt;&gt; FileMakerFlatPage.objects.find(zpkFlatpageID=1)<br>    &lt;FMXMLObject...&gt;<br><br>Documentation<br>-------------<br><br>Full documentation is available on `ReadTheDocs<br>&lt;https://django-filemaker.readthedocs.org/en/latest/&gt;`_<br>\n          </div>"}, "last_serial": 1068868, "releases": {"0.1.0": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "90ae155416aa068193747cbb70cf4dbb", "sha256": "53bb11d413b3487048145f6ea1b9d0fb9f2830f514359e98fc69ebe2e479ad42"}, "downloads": -1, "filename": "django-filemaker-0.1.1.tar.gz", "has_sig": false, "md5_digest": "90ae155416aa068193747cbb70cf4dbb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31724, "upload_time": "2013-07-09T10:52:13", "upload_time_iso_8601": "2013-07-09T10:52:13.435313Z", "url": "https://files.pythonhosted.org/packages/f6/b5/8cb67a3c704b0486dcfed0ff7f68c58814cd94ed52a423acbe06509de285/django-filemaker-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "0cf373c7029959042abdd168929a62e0", "sha256": "3595e04c8da589d63dee39c9ba89fe0abb9e298739a24b296d77d70773cca06e"}, "downloads": -1, "filename": "django-filemaker-0.1.2.tar.gz", "has_sig": false, "md5_digest": "0cf373c7029959042abdd168929a62e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32719, "upload_time": "2013-07-30T12:50:09", "upload_time_iso_8601": "2013-07-30T12:50:09.469812Z", "url": "https://files.pythonhosted.org/packages/c7/9a/adbddc02dbea2325187c8ea6c0bae0884d1a8581dd748157ef6d1abd4a04/django-filemaker-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "75ec6e3b609c74d9a05af09990f51531", "sha256": "56ddb8550795aa38849fdddf1520aaecc7fad90cf0b2c6a396424c93c0c2116b"}, "downloads": -1, "filename": "django-filemaker-0.2.0.tar.gz", "has_sig": false, "md5_digest": "75ec6e3b609c74d9a05af09990f51531", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32803, "upload_time": "2013-08-27T19:22:23", "upload_time_iso_8601": "2013-08-27T19:22:23.673633Z", "url": "https://files.pythonhosted.org/packages/21/57/4665b313d2cb23301050c2b24b7dd90ed66ae3ae12e010491ccc5574f488/django-filemaker-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "aacff1cda30864f5e62fc2375baec4b2", "sha256": "07d2bca1899327f6a9a82ae4d83670a900710c04ad6c7454a299757093cc594b"}, "downloads": -1, "filename": "django-filemaker-0.2.1.tar.gz", "has_sig": false, "md5_digest": "aacff1cda30864f5e62fc2375baec4b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34613, "upload_time": "2014-04-23T07:22:34", "upload_time_iso_8601": "2014-04-23T07:22:34.829062Z", "url": "https://files.pythonhosted.org/packages/b4/ff/03b2c29ade82b9a91a4dba5948b3a513e02cf60a09fac1adbef4c5a70873/django-filemaker-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "c0483568816f6e0aadee4dcdb5464c71", "sha256": "140bd2319dd14875aeedfd61b6ae9d4ee70a882618b76b48fe23fb84a590430f"}, "downloads": -1, "filename": "django-filemaker-0.2.2.tar.gz", "has_sig": false, "md5_digest": "c0483568816f6e0aadee4dcdb5464c71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34762, "upload_time": "2014-04-23T07:27:55", "upload_time_iso_8601": "2014-04-23T07:27:55.968471Z", "url": "https://files.pythonhosted.org/packages/8c/3c/e1a80048765192065e59f97facebb4b0decbe2b4292f8f4d5e6dc8fb5b9f/django-filemaker-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c0483568816f6e0aadee4dcdb5464c71", "sha256": "140bd2319dd14875aeedfd61b6ae9d4ee70a882618b76b48fe23fb84a590430f"}, "downloads": -1, "filename": "django-filemaker-0.2.2.tar.gz", "has_sig": false, "md5_digest": "c0483568816f6e0aadee4dcdb5464c71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34762, "upload_time": "2014-04-23T07:27:55", "upload_time_iso_8601": "2014-04-23T07:27:55.968471Z", "url": "https://files.pythonhosted.org/packages/8c/3c/e1a80048765192065e59f97facebb4b0decbe2b4292f8f4d5e6dc8fb5b9f/django-filemaker-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:09 2020"}