{"info": {"author": "Denis Krienb\u00fchl", "author_email": "denis.krienbuehl@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "SHIP - Swiss Healthcare Insurance Premiums\r\n==========================================\r\n\r\nProvides access to the official records for the health-insurance\r\npremiums provided by the Bundesamt f\u00fcr Gesundheit (BAG).\r\n\r\nSHIP tries to do two things right:\r\n\r\n-  Parses the CSV files that we acquired by asking the BAG and puts them\r\n   into the SQL Database of your choice, renaming certain fields\r\n   (because we think that 'franchise' is better than 'F' and 'canton'\r\n   better than 'C\\_ID').\r\n\r\n-  Makes it easy to run a number of queries against the database. The\r\n   idea is to gather useful queries and routines with the goal to\r\n   eventually provide a nice API.\r\n\r\nUnder Development\r\n=================\r\n\r\nCurrently, SHIP is under development, which is why the following\r\ninstructions are meant for developers. Expect this README to grow in the\r\nfuture.\r\n\r\nInstallation\r\n============\r\n\r\nCreate Project\r\n--------------\r\n\r\n::\r\n\r\n    mkdir ship && cd ship\r\n    git clone git://github.com/seantis/ship.git .\r\n\r\nInstall SHIP\r\n------------\r\n\r\n(Virtualenv or Virtualenvrwapper are highly recommended)\r\n\r\n::\r\n\r\n    virtualenv -p python2.7 --no-site-packages .\r\n    source bin/activate\r\n    python setup.py develop\r\n\r\nTest SHIP\r\n---------\r\n\r\n::\r\n\r\n    python setup.py test\r\n\r\nUsage\r\n=====\r\n\r\nThere's an interactive example using IPython notebook in the \"docs\"\r\nfolder. Read docs/example.txt for further instructions.\r\n\r\nFor now it is best to get a database running, grab a coffee and read the\r\nsource.\r\n\r\nTo get a simple sqlite database running:\r\n\r\n::\r\n\r\n    from ship import config\r\n    config.connect('sqlite:///premiums.db')\r\n\r\n    from ship import load\r\n    load.all()\r\n\r\nTo understand the data read models/premium.py and db.py\r\n\r\nImport latest data\r\n==================\r\n\r\nThe latest data for the Swiss healthinsurance premiums are not yet\r\npublically available, but they will be soon. Currently to get them one\r\nhas to contact the Swiss governement.\r\n\r\nThe data they release is a mixture of csv and xls files. To import them\r\ninto ship one has to do the following:\r\n\r\n1. Check if the data structure has changed.\r\n\r\n   Compare Doku\\_PraemienDaten.txt in the data release with\r\n   ``ship/rawdata/doku_praemien_daten.txt``. The field descriptions should\r\n   match.\r\n\r\n2. Copy the premiums.\r\n\r\n   Praemien\\_CH.csv and Praemien\\_EU.csv can be used without changes.\r\n   Just copy them to the ``ship/rawdata`` folder, renaming them\r\n   appropriately. E.g. if 2014 rename them as follows:\r\n\r\n   ::\r\n\r\n       Praemien_CH.csv -> ship/rawdata/2014_ch.csv\r\n       Praemien_EU.csv -> ship/rawdata/2014_eu.csv\r\n\r\n   The first line (headers) may be omitted, though it should also work\r\n   with the header line present.\r\n\r\n3. Copy the insurers.\r\n\r\n   Open the Praemien\\_CH.xls file, select the \"(G)\" sheet, and copy the\r\n   columns \"G\\_ID\" and \"G\\_KBEZ\" to the new 2014\\_insurers.csv file. Use\r\n   semicolons as separator. When in doubt, check the insurers file of a\r\n   previous year.\r\n\r\n4. Copy the towns.\r\n\r\n   The towns and the regions they are in can be acquired through the\r\n   following website:\r\n\r\n   http://www.priminfo.ch/praemien/regionen/de/index.php\r\n\r\n   From the B\\_NPA\\_2014 copy PLZ, Ortsbezeichnung, Kanton, BFS-Nr.,\r\n   Region and Gemeinde into a csv in the same format as the insurers in\r\n   step three.\r\n\r\n   Note that the BFS-Nr. comes before the region. The column order\r\n   *must* be as follows:\r\n\r\n   ``PLZ, Ortsbezeichnung, Kanton, BFS-Nr., Region, Gemeinde``\r\n\r\n   Store this as ``ship/rawdata/2014_towns.csv``\r\n\r\n5. Adjust the test.\r\n\r\n   Add the newly added year to ``ship/tests/test_db.py`` and run python\r\n   setup.py test. If there's an unicode error you should save the csv\r\n   files using UTF-8 encoding.\r\n\r\nLicense\r\n=======\r\n\r\nThis project is released under the GPL v3. See LICENSE.txt.\r\n\r\n\r\nChangelog\r\n=========\r\n\r\n0.3\r\n---\r\n\r\n- Rerelase of 0.3rc2\r\n\r\n0.3rc2\r\n------\r\n\r\n- Fixes data not being served when executing 'map-run'\r\n\r\n0.3rc1\r\n------\r\n\r\n- Includes insurance data for 2014\r\n\r\n- Moves map example inside the module, including it on PyPI. \r\n\r\n0.2\r\n---\r\n\r\n- Inclues insurance data for 2013\r\n\r\n0.1\r\n---\r\n\r\n- Includes insurance data for 2012", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/seantis/ship", "keywords": "", "license": "LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "ship", "package_url": "https://pypi.org/project/ship/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ship/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/seantis/ship"}, "release_url": "https://pypi.org/project/ship/0.3/", "requires_dist": null, "requires_python": null, "summary": "Swiss Health Insurance Premiums.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"ship-swiss-healthcare-insurance-premiums\">\n<h2>SHIP - Swiss Healthcare Insurance Premiums</h2>\n<p>Provides access to the official records for the health-insurance\npremiums provided by the Bundesamt f\u00fcr Gesundheit (BAG).</p>\n<p>SHIP tries to do two things right:</p>\n<ul>\n<li>Parses the CSV files that we acquired by asking the BAG and puts them\ninto the SQL Database of your choice, renaming certain fields\n(because we think that \u2018franchise\u2019 is better than \u2018F\u2019 and \u2018canton\u2019\nbetter than \u2018C_ID\u2019).</li>\n<li>Makes it easy to run a number of queries against the database. The\nidea is to gather useful queries and routines with the goal to\neventually provide a nice API.</li>\n</ul>\n</div>\n<div id=\"under-development\">\n<h2>Under Development</h2>\n<p>Currently, SHIP is under development, which is why the following\ninstructions are meant for developers. Expect this README to grow in the\nfuture.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"create-project\">\n<h3>Create Project</h3>\n<pre>mkdir ship &amp;&amp; cd ship\ngit clone git://github.com/seantis/ship.git .\n</pre>\n</div>\n<div id=\"install-ship\">\n<h3>Install SHIP</h3>\n<p>(Virtualenv or Virtualenvrwapper are highly recommended)</p>\n<pre>virtualenv -p python2.7 --no-site-packages .\nsource bin/activate\npython setup.py develop\n</pre>\n</div>\n<div id=\"test-ship\">\n<h3>Test SHIP</h3>\n<pre>python setup.py test\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>There\u2019s an interactive example using IPython notebook in the \u201cdocs\u201d\nfolder. Read docs/example.txt for further instructions.</p>\n<p>For now it is best to get a database running, grab a coffee and read the\nsource.</p>\n<p>To get a simple sqlite database running:</p>\n<pre>from ship import config\nconfig.connect('sqlite:///premiums.db')\n\nfrom ship import load\nload.all()\n</pre>\n<p>To understand the data read models/premium.py and db.py</p>\n</div>\n<div id=\"import-latest-data\">\n<h2>Import latest data</h2>\n<p>The latest data for the Swiss healthinsurance premiums are not yet\npublically available, but they will be soon. Currently to get them one\nhas to contact the Swiss governement.</p>\n<p>The data they release is a mixture of csv and xls files. To import them\ninto ship one has to do the following:</p>\n<ol>\n<li><p>Check if the data structure has changed.</p>\n<p>Compare Doku_PraemienDaten.txt in the data release with\n<tt>ship/rawdata/doku_praemien_daten.txt</tt>. The field descriptions should\nmatch.</p>\n</li>\n<li><p>Copy the premiums.</p>\n<p>Praemien_CH.csv and Praemien_EU.csv can be used without changes.\nJust copy them to the <tt>ship/rawdata</tt> folder, renaming them\nappropriately. E.g. if 2014 rename them as follows:</p>\n<pre>Praemien_CH.csv -&gt; ship/rawdata/2014_ch.csv\nPraemien_EU.csv -&gt; ship/rawdata/2014_eu.csv\n</pre>\n<p>The first line (headers) may be omitted, though it should also work\nwith the header line present.</p>\n</li>\n<li><p>Copy the insurers.</p>\n<p>Open the Praemien_CH.xls file, select the \u201c(G)\u201d sheet, and copy the\ncolumns \u201cG_ID\u201d and \u201cG_KBEZ\u201d to the new 2014_insurers.csv file. Use\nsemicolons as separator. When in doubt, check the insurers file of a\nprevious year.</p>\n</li>\n<li><p>Copy the towns.</p>\n<p>The towns and the regions they are in can be acquired through the\nfollowing website:</p>\n<p><a href=\"http://www.priminfo.ch/praemien/regionen/de/index.php\" rel=\"nofollow\">http://www.priminfo.ch/praemien/regionen/de/index.php</a></p>\n<p>From the B_NPA_2014 copy PLZ, Ortsbezeichnung, Kanton, BFS-Nr.,\nRegion and Gemeinde into a csv in the same format as the insurers in\nstep three.</p>\n<p>Note that the BFS-Nr. comes before the region. The column order\n<em>must</em> be as follows:</p>\n<p><tt>PLZ, Ortsbezeichnung, Kanton, <span class=\"pre\">BFS-Nr.,</span> Region, Gemeinde</tt></p>\n<p>Store this as <tt>ship/rawdata/2014_towns.csv</tt></p>\n</li>\n<li><p>Adjust the test.</p>\n<p>Add the newly added year to <tt>ship/tests/test_db.py</tt> and run python\nsetup.py test. If there\u2019s an unicode error you should save the csv\nfiles using UTF-8 encoding.</p>\n</li>\n</ol>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This project is released under the GPL v3. See LICENSE.txt.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.3</h3>\n<ul>\n<li>Rerelase of 0.3rc2</li>\n</ul>\n</div>\n<div id=\"rc2\">\n<h3>0.3rc2</h3>\n<ul>\n<li>Fixes data not being served when executing \u2018map-run\u2019</li>\n</ul>\n</div>\n<div id=\"rc1\">\n<h3>0.3rc1</h3>\n<ul>\n<li>Includes insurance data for 2014</li>\n<li>Moves map example inside the module, including it on PyPI.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.2</h3>\n<ul>\n<li>Inclues insurance data for 2013</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1</h3>\n<ul>\n<li>Includes insurance data for 2012</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1003946, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "2a088927e7998e4dc6dc4aff6dfebfd1", "sha256": "725c6ba424bf8c321cb0dfe3fcfeeaf8ae62dfad15c873bebd5ea6a890df6730"}, "downloads": -1, "filename": "ship-0.1-py2.7.egg", "has_sig": false, "md5_digest": "2a088927e7998e4dc6dc4aff6dfebfd1", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 22580, "upload_time": "2012-09-28T12:33:49", "upload_time_iso_8601": "2012-09-28T12:33:49.944966Z", "url": "https://files.pythonhosted.org/packages/f3/f3/d0f59a0702ffb5661ddf7e7e523c58ba2878333edca521458e3871dee945/ship-0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed4a7f3f2f2fa03b3d3ed4ab19cfe11e", "sha256": "82430da7f52e94f5f7f1fbb7136e1464990ef5f875c643ab7690f04c88572fcf"}, "downloads": -1, "filename": "ship-0.1.tar.gz", "has_sig": false, "md5_digest": "ed4a7f3f2f2fa03b3d3ed4ab19cfe11e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6998, "upload_time": "2012-09-28T12:33:46", "upload_time_iso_8601": "2012-09-28T12:33:46.266249Z", "url": "https://files.pythonhosted.org/packages/de/63/3f7809176e18d86012433bc336e2c7fa5ec7da5d1904e81a776f5e8f9ea3/ship-0.1.tar.gz", "yanked": false}], "0.2": [], "0.3": [{"comment_text": "", "digests": {"md5": "8ca9e2ec76d0e7264787713f5e9b0ee2", "sha256": "433f2dc2b640930e76d4511a2c56b430629e05818c5f205b00cc5b7730ab91dd"}, "downloads": -1, "filename": "ship-0.3.tar.gz", "has_sig": false, "md5_digest": "8ca9e2ec76d0e7264787713f5e9b0ee2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8103789, "upload_time": "2014-02-18T09:01:07", "upload_time_iso_8601": "2014-02-18T09:01:07.785086Z", "url": "https://files.pythonhosted.org/packages/8c/71/e4d6280b1cb775657a9ee1dfaefe1c96318679f822b74ba894e7ad499112/ship-0.3.tar.gz", "yanked": false}], "0.3rc1": [{"comment_text": "", "digests": {"md5": "f17de813a1702d92dbc7400769d9e7a6", "sha256": "3f2a5e5a5b9ab0f55bb06654aec361b6708070d0828a7ba4ceaa64fa23921b1b"}, "downloads": -1, "filename": "ship-0.3rc1.tar.gz", "has_sig": false, "md5_digest": "f17de813a1702d92dbc7400769d9e7a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8103892, "upload_time": "2014-02-17T13:11:25", "upload_time_iso_8601": "2014-02-17T13:11:25.171392Z", "url": "https://files.pythonhosted.org/packages/0e/5b/1d303862257ac168137e68bc727a8de85531ae04b2b9cb6bb36df7996768/ship-0.3rc1.tar.gz", "yanked": false}], "0.3rc2": [{"comment_text": "", "digests": {"md5": "1996a632a77c094b49a3ca2f1e9c8a2a", "sha256": "392fd3d95161ec3631c8e1c2504705aafb81fe6ca507106880543de29a9f6639"}, "downloads": -1, "filename": "ship-0.3rc2.tar.gz", "has_sig": false, "md5_digest": "1996a632a77c094b49a3ca2f1e9c8a2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8104036, "upload_time": "2014-02-17T15:47:47", "upload_time_iso_8601": "2014-02-17T15:47:47.159466Z", "url": "https://files.pythonhosted.org/packages/76/d9/2f585869962debeedc9302df185151f43e328e2533482c9a0a7666eac45f/ship-0.3rc2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8ca9e2ec76d0e7264787713f5e9b0ee2", "sha256": "433f2dc2b640930e76d4511a2c56b430629e05818c5f205b00cc5b7730ab91dd"}, "downloads": -1, "filename": "ship-0.3.tar.gz", "has_sig": false, "md5_digest": "8ca9e2ec76d0e7264787713f5e9b0ee2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8103789, "upload_time": "2014-02-18T09:01:07", "upload_time_iso_8601": "2014-02-18T09:01:07.785086Z", "url": "https://files.pythonhosted.org/packages/8c/71/e4d6280b1cb775657a9ee1dfaefe1c96318679f822b74ba894e7ad499112/ship-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:00 2020"}