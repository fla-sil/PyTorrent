{"info": {"author": "Gertjan van Zwieten", "author_email": "git@gjvz.nl", "bugtrack_url": null, "classifiers": [], "description": "Organising large amounts of files via the command line is cumbersome. The\nstandard UNIX `mv` command can rename a file or directory, or move items in\nbulk, but the two operations cannot be combined. Furthermore, editing\ncapabilities on the command line offered by most shells are too limited to\ncomfortably alter long file or directory names, or add characters from foreign\ncharacter sets. Names containing spaces or other special characters should be\nquoted or escaped, adding yet another layer of annoyance.\n\nLarry Wall's `rename` complements `mv` with the ability to rename in bulk, but\nbeing based on regular expressions it is suited mostly for file sets that share\na common naming structure. It also requires fluidity in Perl's regular\nexpression syntax to be useful, which sets a very high bar for entry.\n\nMvi (which can be seen to be either a contraction of \"mv vi\" or a more general\nabbreviation of \"move interactively\") aims to simplify bulk renames of files\nand directories by opening the directory listing in a text editor, thus\nproviding a powerful interface for editing destination paths. Names can be\nchanged by editing the lines in place while preserving order. Upon save and\nexit mvi will show a list of scheduled rename operations and ask for\nconfirmation before performing the changes on disk.\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gertjanvanzwieten/mvi", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mvi", "package_url": "https://pypi.org/project/mvi/", "platform": "", "project_url": "https://pypi.org/project/mvi/", "project_urls": {"Homepage": "https://github.com/gertjanvanzwieten/mvi"}, "release_url": "https://pypi.org/project/mvi/1.0/", "requires_dist": null, "requires_python": ">=3", "summary": "Move files by text edit", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Organising large amounts of files via the command line is cumbersome. The\nstandard UNIX <cite>mv</cite> command can rename a file or directory, or move items in\nbulk, but the two operations cannot be combined. Furthermore, editing\ncapabilities on the command line offered by most shells are too limited to\ncomfortably alter long file or directory names, or add characters from foreign\ncharacter sets. Names containing spaces or other special characters should be\nquoted or escaped, adding yet another layer of annoyance.</p>\n<p>Larry Wall\u2019s <cite>rename</cite> complements <cite>mv</cite> with the ability to rename in bulk, but\nbeing based on regular expressions it is suited mostly for file sets that share\na common naming structure. It also requires fluidity in Perl\u2019s regular\nexpression syntax to be useful, which sets a very high bar for entry.</p>\n<p>Mvi (which can be seen to be either a contraction of \u201cmv vi\u201d or a more general\nabbreviation of \u201cmove interactively\u201d) aims to simplify bulk renames of files\nand directories by opening the directory listing in a text editor, thus\nproviding a powerful interface for editing destination paths. Names can be\nchanged by editing the lines in place while preserving order. Upon save and\nexit mvi will show a list of scheduled rename operations and ask for\nconfirmation before performing the changes on disk.</p>\n\n          </div>"}, "last_serial": 2978849, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "5435cef3334d676affc52eda4dc3445b", "sha256": "7c270a1872a97205477a336c44976abc7864f7bae5342a780002ef949480430f"}, "downloads": -1, "filename": "mvi-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5435cef3334d676affc52eda4dc3445b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 5190, "upload_time": "2017-06-26T08:53:54", "upload_time_iso_8601": "2017-06-26T08:53:54.727167Z", "url": "https://files.pythonhosted.org/packages/6e/f1/6b94bc55cff2540ba3da5cdc0b4ea77c3d63faf26de3e250a859b8e9d5ab/mvi-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "153a8de1dcec8dcedb0ed337af902125", "sha256": "017532ba595104302aa84be53921b06ef9d11af8f89cc18503275f92c5094902"}, "downloads": -1, "filename": "mvi-1.0.tar.gz", "has_sig": false, "md5_digest": "153a8de1dcec8dcedb0ed337af902125", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 3314, "upload_time": "2017-06-26T08:53:55", "upload_time_iso_8601": "2017-06-26T08:53:55.911330Z", "url": "https://files.pythonhosted.org/packages/51/f5/21d9512723a4bb58229b85baa25175685d64d84e6ff6221cec3656b6bd07/mvi-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5435cef3334d676affc52eda4dc3445b", "sha256": "7c270a1872a97205477a336c44976abc7864f7bae5342a780002ef949480430f"}, "downloads": -1, "filename": "mvi-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5435cef3334d676affc52eda4dc3445b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 5190, "upload_time": "2017-06-26T08:53:54", "upload_time_iso_8601": "2017-06-26T08:53:54.727167Z", "url": "https://files.pythonhosted.org/packages/6e/f1/6b94bc55cff2540ba3da5cdc0b4ea77c3d63faf26de3e250a859b8e9d5ab/mvi-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "153a8de1dcec8dcedb0ed337af902125", "sha256": "017532ba595104302aa84be53921b06ef9d11af8f89cc18503275f92c5094902"}, "downloads": -1, "filename": "mvi-1.0.tar.gz", "has_sig": false, "md5_digest": "153a8de1dcec8dcedb0ed337af902125", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 3314, "upload_time": "2017-06-26T08:53:55", "upload_time_iso_8601": "2017-06-26T08:53:55.911330Z", "url": "https://files.pythonhosted.org/packages/51/f5/21d9512723a4bb58229b85baa25175685d64d84e6ff6221cec3656b6bd07/mvi-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:02 2020"}