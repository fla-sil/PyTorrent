{"info": {"author": "tibOin", "author_email": "tiboin@protonmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7"], "description": "# macos_speech\nEver wanted to leverage the macOS builtin speech synthesis directly into python ? Or just make your code to talk...<br>\nWith the Python macos_speech package you can do it in a pythonic way. Easy and zen.\n\n### Getting Started:\n\n#### Installation\n`pip install macos_speech`\n\n#### Requirements\nmacOS 10.x or for oldest OS X <br>\nFor now, this package only works on Python >= 2.6 and Python >= 3.6.x <br>\nOnly tested on Python 2.7.10 and 3.7.2.\n\n#### Basic usage\n```python\nfrom macos_speech import Synthesizer\n\nspeaker = Synthesizer(voice='Alex', device='Built-in')\n\nspeaker.text = \"\"\"How my God! I can make my python code to talk!\n\nAnd I can even send multiple lines! Awesome.\n\"\"\"\n\nspeaker.talk()\n```\n\n#### Some informations\n\n```python\nfrom macos_speech import Synthesizer\n\nspeaker = Synthesizer()\n\nprint '''Voices:\nNAME    LANGUAGE    DESCRIPTION\n'''\nfor voice in speaker.voices:\n  print '{} {} {}'.format(voice.name, voice.lang, voice.desc)\n\nprint ''\n\nprint 'Audio devices:'\nfor device in speaker.devices:\n  print 'ID: {}, NAME: {}'.format(device.id, device.name)\n\nprint ''\n\nprint '''Output file possible formats:\nID    NAME    FILE_EXT    DATA_FORMATS    BIT_RATES\n'''\nfor format in speaker.formats:\n  print '{}\u00a0{} ({}) [{}] [{}]'.format(format.id, format.name,\n                                      ','.join(format.exts),\n                                      ','.join(format.formats),\n                                      ','.join(format.bitrates))\n\n```\n\n#### Synthesizer Properties\n```python\nfrom macos_speech import Synthesizer\n\nsynthe = Synthesizer()\n\n# Helper properties\nsynthe.devices\nsynthe.voices\nsynthe.formats\n\n# Configuration properties\n\n# File IO (takes absolute pathes strings)\nsynthe.infile  # A file containing text to say (mutually exclusive with self.text - high priority)\nsynthe.outfile # The output audio file (default should be 'output.aiff'\n               # but you can specify file and data formats)\n\n# Simple configs (takes strings)\nsynthe.rate    # The speech rate\nsynthe.quality # The audio quality (between 0 and 127 both included)\nsynthe.text    # The text to say (mutually exclusive with self.infile - low priority)\n\n# Pythonified configs (takes macos_speech.CustomClasses)\nsynthe.format  # The audio output file/data format : macos_speech.AudioFormat\n               # (Works only with self.outfile populated)\n\nsynthe.device  # The audio output device           : macos_speech.AudioDevice\n               #                                 (or 'name' or 'id' on Python 3)\n               # (Only used if no self.outfile)\n\nsynthe.voice   # The voice to use                  : macos_speech.Voice\n               #                                   (or 'name' on Python 3) \n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tibOin/macos_speech/", "keywords": "macos,say,speech synthesis", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "macos-speech", "package_url": "https://pypi.org/project/macos-speech/", "platform": "", "project_url": "https://pypi.org/project/macos-speech/", "project_urls": {"Homepage": "https://github.com/tibOin/macos_speech/"}, "release_url": "https://pypi.org/project/macos-speech/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Leverage the macOS `say` command into you scripts", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>macos_speech</h1>\n<p>Ever wanted to leverage the macOS builtin speech synthesis directly into python ? Or just make your code to talk...<br>\nWith the Python macos_speech package you can do it in a pythonic way. Easy and zen.</p>\n<h3>Getting Started:</h3>\n<h4>Installation</h4>\n<p><code>pip install macos_speech</code></p>\n<h4>Requirements</h4>\n<p>macOS 10.x or for oldest OS X <br>\nFor now, this package only works on Python &gt;= 2.6 and Python &gt;= 3.6.x <br>\nOnly tested on Python 2.7.10 and 3.7.2.</p>\n<h4>Basic usage</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">macos_speech</span> <span class=\"kn\">import</span> <span class=\"n\">Synthesizer</span>\n\n<span class=\"n\">speaker</span> <span class=\"o\">=</span> <span class=\"n\">Synthesizer</span><span class=\"p\">(</span><span class=\"n\">voice</span><span class=\"o\">=</span><span class=\"s1\">'Alex'</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"o\">=</span><span class=\"s1\">'Built-in'</span><span class=\"p\">)</span>\n\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"How my God! I can make my python code to talk!</span>\n\n<span class=\"s2\">And I can even send multiple lines! Awesome.</span>\n<span class=\"s2\">\"\"\"</span>\n\n<span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">talk</span><span class=\"p\">()</span>\n</pre>\n<h4>Some informations</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">macos_speech</span> <span class=\"kn\">import</span> <span class=\"n\">Synthesizer</span>\n\n<span class=\"n\">speaker</span> <span class=\"o\">=</span> <span class=\"n\">Synthesizer</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span> <span class=\"s1\">'''Voices:</span>\n<span class=\"s1\">NAME    LANGUAGE    DESCRIPTION</span>\n<span class=\"s1\">'''</span>\n<span class=\"k\">for</span> <span class=\"n\">voice</span> <span class=\"ow\">in</span> <span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">voices</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span> <span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\"> </span><span class=\"si\">{}</span><span class=\"s1\"> </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">voice</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">voice</span><span class=\"o\">.</span><span class=\"n\">lang</span><span class=\"p\">,</span> <span class=\"n\">voice</span><span class=\"o\">.</span><span class=\"n\">desc</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span> <span class=\"s1\">''</span>\n\n<span class=\"nb\">print</span> <span class=\"s1\">'Audio devices:'</span>\n<span class=\"k\">for</span> <span class=\"n\">device</span> <span class=\"ow\">in</span> <span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">devices</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span> <span class=\"s1\">'ID: </span><span class=\"si\">{}</span><span class=\"s1\">, NAME: </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span> <span class=\"s1\">''</span>\n\n<span class=\"nb\">print</span> <span class=\"s1\">'''Output file possible formats:</span>\n<span class=\"s1\">ID    NAME    FILE_EXT    DATA_FORMATS    BIT_RATES</span>\n<span class=\"s1\">'''</span>\n<span class=\"k\">for</span> <span class=\"nb\">format</span> <span class=\"ow\">in</span> <span class=\"n\">speaker</span><span class=\"o\">.</span><span class=\"n\">formats</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span> <span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\">\u00a0</span><span class=\"si\">{}</span><span class=\"s1\"> (</span><span class=\"si\">{}</span><span class=\"s1\">) [</span><span class=\"si\">{}</span><span class=\"s1\">] [</span><span class=\"si\">{}</span><span class=\"s1\">]'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"nb\">format</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"nb\">format</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n                                      <span class=\"s1\">','</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"nb\">format</span><span class=\"o\">.</span><span class=\"n\">exts</span><span class=\"p\">),</span>\n                                      <span class=\"s1\">','</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"nb\">format</span><span class=\"o\">.</span><span class=\"n\">formats</span><span class=\"p\">),</span>\n                                      <span class=\"s1\">','</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"nb\">format</span><span class=\"o\">.</span><span class=\"n\">bitrates</span><span class=\"p\">))</span>\n</pre>\n<h4>Synthesizer Properties</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">macos_speech</span> <span class=\"kn\">import</span> <span class=\"n\">Synthesizer</span>\n\n<span class=\"n\">synthe</span> <span class=\"o\">=</span> <span class=\"n\">Synthesizer</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Helper properties</span>\n<span class=\"n\">synthe</span><span class=\"o\">.</span><span class=\"n\">devices</span>\n<span class=\"n\">synthe</span><span class=\"o\">.</span><span class=\"n\">voices</span>\n<span class=\"n\">synthe</span><span class=\"o\">.</span><span class=\"n\">formats</span>\n\n<span class=\"c1\"># Configuration properties</span>\n\n<span class=\"c1\"># File IO (takes absolute pathes strings)</span>\n<span class=\"n\">synthe</span><span class=\"o\">.</span><span class=\"n\">infile</span>  <span class=\"c1\"># A file containing text to say (mutually exclusive with self.text - high priority)</span>\n<span class=\"n\">synthe</span><span class=\"o\">.</span><span class=\"n\">outfile</span> <span class=\"c1\"># The output audio file (default should be 'output.aiff'</span>\n               <span class=\"c1\"># but you can specify file and data formats)</span>\n\n<span class=\"c1\"># Simple configs (takes strings)</span>\n<span class=\"n\">synthe</span><span class=\"o\">.</span><span class=\"n\">rate</span>    <span class=\"c1\"># The speech rate</span>\n<span class=\"n\">synthe</span><span class=\"o\">.</span><span class=\"n\">quality</span> <span class=\"c1\"># The audio quality (between 0 and 127 both included)</span>\n<span class=\"n\">synthe</span><span class=\"o\">.</span><span class=\"n\">text</span>    <span class=\"c1\"># The text to say (mutually exclusive with self.infile - low priority)</span>\n\n<span class=\"c1\"># Pythonified configs (takes macos_speech.CustomClasses)</span>\n<span class=\"n\">synthe</span><span class=\"o\">.</span><span class=\"n\">format</span>  <span class=\"c1\"># The audio output file/data format : macos_speech.AudioFormat</span>\n               <span class=\"c1\"># (Works only with self.outfile populated)</span>\n\n<span class=\"n\">synthe</span><span class=\"o\">.</span><span class=\"n\">device</span>  <span class=\"c1\"># The audio output device           : macos_speech.AudioDevice</span>\n               <span class=\"c1\">#                                 (or 'name' or 'id' on Python 3)</span>\n               <span class=\"c1\"># (Only used if no self.outfile)</span>\n\n<span class=\"n\">synthe</span><span class=\"o\">.</span><span class=\"n\">voice</span>   <span class=\"c1\"># The voice to use                  : macos_speech.Voice</span>\n               <span class=\"c1\">#                                   (or 'name' on Python 3) </span>\n</pre>\n\n          </div>"}, "last_serial": 5010525, "releases": {"0.1a0": [{"comment_text": "", "digests": {"md5": "9eaf171961ad85caeedaa4179c3f9d19", "sha256": "0392e3c7f83db2dda0da8174d1e31faa2b5cd1e32bb11b956da2c1fdf7930c93"}, "downloads": -1, "filename": "macos_speech-0.1a0.tar.gz", "has_sig": false, "md5_digest": "9eaf171961ad85caeedaa4179c3f9d19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4004, "upload_time": "2019-03-31T21:01:50", "upload_time_iso_8601": "2019-03-31T21:01:50.814029Z", "url": "https://files.pythonhosted.org/packages/39/62/04b7a5a68d8b5e388ee2d96dead20a4f3db5cdece74d65fc9c2e2d98a671/macos_speech-0.1a0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "7bffdb7b63d3616e164bd40b8b1fd331", "sha256": "ed077eaf06a78e94699705cf48f48adc8f050725536ace84085c84377d7a9921"}, "downloads": -1, "filename": "macos_speech-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7bffdb7b63d3616e164bd40b8b1fd331", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4028, "upload_time": "2019-03-31T21:18:39", "upload_time_iso_8601": "2019-03-31T21:18:39.209449Z", "url": "https://files.pythonhosted.org/packages/f2/89/9df04824177cc804fc1a8bbb2861be3912e01806f249da92093f079b59aa/macos_speech-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7bffdb7b63d3616e164bd40b8b1fd331", "sha256": "ed077eaf06a78e94699705cf48f48adc8f050725536ace84085c84377d7a9921"}, "downloads": -1, "filename": "macos_speech-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7bffdb7b63d3616e164bd40b8b1fd331", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4028, "upload_time": "2019-03-31T21:18:39", "upload_time_iso_8601": "2019-03-31T21:18:39.209449Z", "url": "https://files.pythonhosted.org/packages/f2/89/9df04824177cc804fc1a8bbb2861be3912e01806f249da92093f079b59aa/macos_speech-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:18 2020"}