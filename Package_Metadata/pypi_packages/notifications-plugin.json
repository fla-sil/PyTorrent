{"info": {"author": "Aditya Palaparthy", "author_email": "aditya94palaparthy@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Utilities"], "description": "Notifications Plugin\n====================\n\nIntroduction\n============\n\nA Django app to create notifications\n\nRequirements\n============\n\n- Python 3.5, 3.6, 3.7, 3.8\n- Django 2.2, 3.0\n\nInstallation\n============\n\nInstall the app using pip\n\n::\n\n    $ pip install notifications-plugin\n\n\nor get it from source\n\n::\n\n    $ git clone https://github.com/adityacp/notifications_plugin.git\n    $ cd notifications_plugin\n    $ python setup.py sdist\n    $ pip install dist/notifications_plugin*\n\n\nAdd the django app to your Project\n    \n::\n\n    INSTALLED_APPS = (\n        'django.contrib.auth',\n        ...\n        'notifications_plugin',\n        ...\n    )\n\n\nTo run schema migration, execute ``python manage.py makemigrations notifications_plugin`` and then run ``python manage.py migrate``.\n\nCreating Notifications\n======================\n\nQuerySet methods\n~~~~~~~~~~~~~~~~\n\n* *Create Single notification message*\n\n  To add an notification message, simply import the NotificationMessage model from the notifications_plugin app.\n\n  ::\n\n      from notifications_plugin.models import NotificationMessage\n\n      NotificationMessage.objects.add_single_message(creator_id, summary, description, msg_type)\n\n  Arguments:\n  \n  * **creator_id**: An user's id who is creating the message.\n  * **summary**: A summary of the message\n  * **description**: A description of the actual message\n  * **msg_type**: Message Type i.e. whether it is informational message, danger message, success message or warning message.     Default is the informational message (info).\n    \n    ``Available message types are info, danger, warning, success.``\n\n* *Create Bulk notification Message*\n\n  ::\n\n      NotificationMessage.objects.add_bulk_messages(messages)\n\n  Arguments:\n\n  * **messsages**: A list of dictionaries containing the following values. Sample messages list is as follows\n    \n    ``messages = [{\"creator_id\" : 1, \"summary\" : \"test\", \"description\": \"test description\", \"message_type\": \"info\"}]``\n \n* *Create notifications*\n\n  * To create notification for multiple receivers with single message\n  \n    ::\n\n        from notifications_plugin.models import Notification\n\n        Notification.objects.add_bulk_user_notifications(receiver_ids, msg_id)\n\n    Arguments:\n     \n    * **receiver_ids**: A list of receiver ids to whom the notification is to be sent\n    * **msg_id**: A NotificationMessage id which will be sent to the receivers\n\n  * To create notification for single receiver with multiple messages\n  \n    ::\n        \n        Notification.objects.add_bulk_msg_notifications(receiver_id, msg_ids)\n  \n  \n  * To create notification for single receiver with single message\n  \n    ::\n    \n        Notification.objects.add_single_notification(receiver_id, msg_id)\n\n* *Getting and Marking Notifications*\n\n  * To mark notifications for multiple receivers with single message\n  \n    ::\n    \n       Notification.objects.mark_bulk_user_notifications(receiver_ids, msg_uuid, read)\n    \n    Arguments:\n    \n    * **receiver_ids**: A list of receiver ids to whose notification is to be marked\n    * **msg_id**: A NotificationMessage uuid(unique identifier) whose message is supposed to be marked. To get the uuid of the message just type ``message.uid``\n    * **read**: Indicates if the message for the particular receiver is marked or not. Default is `False`. To mark as read, make it `True`.\n\n  * To mark notifications for single receiver with multiple messages\n  \n    ::\n\n        Notification.objects.mark_bulk_msg_notifications(receiver_id, msg_uuids, read)\n  \n  * To mark notification for single receiver with single message\n  \n    ::\n    \n        Notification.objects.mark_single_notification(receiver_id, msg_uuid, read)\n  \n  * To get a particular receiver's all notifications\n  \n    ::\n    \n        Notification.objects.get_receiver_notifications(receiver_id)\n  \n  * To get unread notifications of a particular receiver\n  \n    ::\n    \n        Notification.objects.get_unread_receiver_notifications(receiver_id)\n\n  * To get read notifications of a particular receiver\n  \n    ::\n    \n        Notification.objects.get_read_receiver_notifications(receiver_id)\n  \n  * To get multiple receivers notifications\n  \n    ::\n    \n        Notification.objects.get_multiple_user_notifications(receiver_ids)\n  \n  * To get notifications by a specific message\n  \n    ::\n    \n        Notification.objects.get_notifications_by_msg(msg_uuid)\n\nIssues\n======\n\nIf you find any issues or want a specific functionality, please file a issue here:\nhttps://github.com/adityacp/notifications_plugin/issues/new/choose", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.python.org/pypi/notifications-plugin/", "keywords": "", "license": "GNU General Public License v3.0", "maintainer": "", "maintainer_email": "", "name": "notifications-plugin", "package_url": "https://pypi.org/project/notifications-plugin/", "platform": "", "project_url": "https://pypi.org/project/notifications-plugin/", "project_urls": {"Homepage": "https://pypi.python.org/pypi/notifications-plugin/"}, "release_url": "https://pypi.org/project/notifications-plugin/0.1.2/", "requires_dist": null, "requires_python": ">=3.1", "summary": "A django app to create simple notifications", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"notifications-plugin\">\n<h2>Notifications Plugin</h2>\n</div>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>A Django app to create notifications</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.5, 3.6, 3.7, 3.8</li>\n<li>Django 2.2, 3.0</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install the app using pip</p>\n<pre>$ pip install notifications-plugin\n</pre>\n<p>or get it from source</p>\n<pre>$ git clone https://github.com/adityacp/notifications_plugin.git\n$ cd notifications_plugin\n$ python setup.py sdist\n$ pip install dist/notifications_plugin*\n</pre>\n<p>Add the django app to your Project</p>\n<pre>INSTALLED_APPS = (\n    'django.contrib.auth',\n    ...\n    'notifications_plugin',\n    ...\n)\n</pre>\n<p>To run schema migration, execute <tt>python manage.py makemigrations notifications_plugin</tt> and then run <tt>python manage.py migrate</tt>.</p>\n</div>\n<div id=\"creating-notifications\">\n<h2>Creating Notifications</h2>\n<h2 id=\"queryset-methods\"><span class=\"section-subtitle\">QuerySet methods</span></h2>\n<ul>\n<li><p><em>Create Single notification message</em></p>\n<p>To add an notification message, simply import the NotificationMessage model from the notifications_plugin app.</p>\n<pre>from notifications_plugin.models import NotificationMessage\n\nNotificationMessage.objects.add_single_message(creator_id, summary, description, msg_type)\n</pre>\n<p>Arguments:</p>\n<ul>\n<li><p><strong>creator_id</strong>: An user\u2019s id who is creating the message.</p>\n</li>\n<li><p><strong>summary</strong>: A summary of the message</p>\n</li>\n<li><p><strong>description</strong>: A description of the actual message</p>\n</li>\n<li><p><strong>msg_type</strong>: Message Type i.e. whether it is informational message, danger message, success message or warning message.     Default is the informational message (info).</p>\n<p><tt>Available message types are info, danger, warning, success.</tt></p>\n</li>\n</ul>\n</li>\n<li><p><em>Create Bulk notification Message</em></p>\n<pre>NotificationMessage.objects.add_bulk_messages(messages)\n</pre>\n<p>Arguments:</p>\n<ul>\n<li><p><strong>messsages</strong>: A list of dictionaries containing the following values. Sample messages list is as follows</p>\n<p><tt>messages = <span class=\"pre\">[{\"creator_id\"</span> : 1, \"summary\" : \"test\", \"description\": \"test description\", \"message_type\": <span class=\"pre\">\"info\"}]</span></tt></p>\n</li>\n</ul>\n</li>\n<li><p><em>Create notifications</em></p>\n<ul>\n<li><p>To create notification for multiple receivers with single message</p>\n<pre>from notifications_plugin.models import Notification\n\nNotification.objects.add_bulk_user_notifications(receiver_ids, msg_id)\n</pre>\n<p>Arguments:</p>\n<ul>\n<li><strong>receiver_ids</strong>: A list of receiver ids to whom the notification is to be sent</li>\n<li><strong>msg_id</strong>: A NotificationMessage id which will be sent to the receivers</li>\n</ul>\n</li>\n<li><p>To create notification for single receiver with multiple messages</p>\n<pre>Notification.objects.add_bulk_msg_notifications(receiver_id, msg_ids)\n</pre>\n</li>\n<li><p>To create notification for single receiver with single message</p>\n<pre>Notification.objects.add_single_notification(receiver_id, msg_id)\n</pre>\n</li>\n</ul>\n</li>\n<li><p><em>Getting and Marking Notifications</em></p>\n<ul>\n<li><p>To mark notifications for multiple receivers with single message</p>\n<pre>Notification.objects.mark_bulk_user_notifications(receiver_ids, msg_uuid, read)\n</pre>\n<p>Arguments:</p>\n<ul>\n<li><strong>receiver_ids</strong>: A list of receiver ids to whose notification is to be marked</li>\n<li><strong>msg_id</strong>: A NotificationMessage uuid(unique identifier) whose message is supposed to be marked. To get the uuid of the message just type <tt>message.uid</tt></li>\n<li><strong>read</strong>: Indicates if the message for the particular receiver is marked or not. Default is <cite>False</cite>. To mark as read, make it <cite>True</cite>.</li>\n</ul>\n</li>\n<li><p>To mark notifications for single receiver with multiple messages</p>\n<pre>Notification.objects.mark_bulk_msg_notifications(receiver_id, msg_uuids, read)\n</pre>\n</li>\n<li><p>To mark notification for single receiver with single message</p>\n<pre>Notification.objects.mark_single_notification(receiver_id, msg_uuid, read)\n</pre>\n</li>\n<li><p>To get a particular receiver\u2019s all notifications</p>\n<pre>Notification.objects.get_receiver_notifications(receiver_id)\n</pre>\n</li>\n<li><p>To get unread notifications of a particular receiver</p>\n<pre>Notification.objects.get_unread_receiver_notifications(receiver_id)\n</pre>\n</li>\n<li><p>To get read notifications of a particular receiver</p>\n<pre>Notification.objects.get_read_receiver_notifications(receiver_id)\n</pre>\n</li>\n<li><p>To get multiple receivers notifications</p>\n<pre>Notification.objects.get_multiple_user_notifications(receiver_ids)\n</pre>\n</li>\n<li><p>To get notifications by a specific message</p>\n<pre>Notification.objects.get_notifications_by_msg(msg_uuid)\n</pre>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"issues\">\n<h2>Issues</h2>\n<p>If you find any issues or want a specific functionality, please file a issue here:\n<a href=\"https://github.com/adityacp/notifications_plugin/issues/new/choose\" rel=\"nofollow\">https://github.com/adityacp/notifications_plugin/issues/new/choose</a></p>\n</div>\n\n          </div>"}, "last_serial": 7065741, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "a158cf359b7f72f72f3c6eace8614686", "sha256": "3851318ecf353337806c0b5334c5e504a604aa51097a601be6d69180ca16d443"}, "downloads": -1, "filename": "notifications_plugin-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a158cf359b7f72f72f3c6eace8614686", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.1", "size": 17789, "upload_time": "2020-03-31T14:05:21", "upload_time_iso_8601": "2020-03-31T14:05:21.204033Z", "url": "https://files.pythonhosted.org/packages/89/30/d1ab5bac23db3988d7e1a0504089fe914b07b997cb9542550467cd188c9a/notifications_plugin-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69d5085353ed2c9ed5eacdc26f775743", "sha256": "4a9c4a35662ff1694c3b5dc2083c57b4988f81c8251d9b204a585ce4e40f33ae"}, "downloads": -1, "filename": "notifications-plugin-0.1.1.tar.gz", "has_sig": false, "md5_digest": "69d5085353ed2c9ed5eacdc26f775743", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.1", "size": 4717, "upload_time": "2020-03-31T14:05:24", "upload_time_iso_8601": "2020-03-31T14:05:24.320471Z", "url": "https://files.pythonhosted.org/packages/c2/ac/fc36928f87f51b50fdaf86f65034d47d1a8e002aa4b0b43dc550bbb24e8c/notifications-plugin-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7cd533c3ae58a89e5cfce4a0deeba551", "sha256": "1a5c235ef05138d257b369c13cfb66754b16096c59359d2e405d8725ac30c73f"}, "downloads": -1, "filename": "notifications-plugin-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7cd533c3ae58a89e5cfce4a0deeba551", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.1", "size": 4637, "upload_time": "2020-04-21T06:29:41", "upload_time_iso_8601": "2020-04-21T06:29:41.972470Z", "url": "https://files.pythonhosted.org/packages/66/5b/c1d9359f5e25e2eaffa66d7a209a51ca1c01789e2383356ec3ce36693c74/notifications-plugin-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7cd533c3ae58a89e5cfce4a0deeba551", "sha256": "1a5c235ef05138d257b369c13cfb66754b16096c59359d2e405d8725ac30c73f"}, "downloads": -1, "filename": "notifications-plugin-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7cd533c3ae58a89e5cfce4a0deeba551", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.1", "size": 4637, "upload_time": "2020-04-21T06:29:41", "upload_time_iso_8601": "2020-04-21T06:29:41.972470Z", "url": "https://files.pythonhosted.org/packages/66/5b/c1d9359f5e25e2eaffa66d7a209a51ca1c01789e2383356ec3ce36693c74/notifications-plugin-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:38 2020"}