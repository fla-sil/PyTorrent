{"info": {"author": "Arcady Usov", "author_email": "itcrab@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "|Build Status| |Coverage Status| |Code Climate| |license|\n\nDark Keeper\n===========\n\nDark Keeper is open source simple web-parser for podcast-sites.\n\nGoal idea\n=========\n\nI like listen IT-podcasts and learn something new. For really good\npodcasts I want download all episodes. Goal idea is create simple tool\nfor this.\n\nFeatures\n========\n\n-  [x] simple web-spider walking on site\n-  [x] cache for all downloaded pages\n-  [x] parse any information from pages\n-  [x] export parsed data to MongoDB\n\nQuick start\n===========\n\n``$ mkvirtualenv keeper``\n\n``(keeper)$ pip install dark-keeper``\n\n``(keeper)$ cat app.py``\n\n.. code:: python\n\n    from collections import OrderedDict\n\n    from dark_keeper import DarkKeeper\n\n\n    class PodcastKeeper(DarkKeeper):\n        base_url = 'https://radio-t.com/archives/'\n        mongo_uri = 'mongodb://localhost/podcasts/radio-t.com'\n\n        def parse_urls(self, content):\n            urls = content.parse_urls('#blog-archives h1 a', self.base_url)\n\n            return urls\n\n        def parse_data(self, content):\n            data = OrderedDict()\n            data['title'] = content.parse_text('.hentry .entry-title')\n            data['desc'] = content.parse_text('.hentry .entry-content')\n            data['mp3'] = content.parse_attr('.hentry audio', 'src')\n\n            if data['title'] and data['mp3']:\n                return data\n\n\n    if __name__ == '__main__':\n        pk = PodcastKeeper()\n        pk.run()\n\n.. |Build Status| image:: https://travis-ci.org/itcrab/dark-keeper.svg?branch=master\n   :target: https://travis-ci.org/itcrab/dark-keeper\n.. |Coverage Status| image:: https://coveralls.io/repos/github/itcrab/dark-keeper/badge.svg?branch=master\n   :target: https://coveralls.io/github/itcrab/dark-keeper?branch=master\n.. |Code Climate| image:: https://codeclimate.com/github/itcrab/dark-keeper/badges/gpa.svg\n   :target: https://codeclimate.com/github/itcrab/dark-keeper\n.. |license| image:: https://img.shields.io/github/license/mashape/apistatus.svg\n   :target: https://github.com/itcrab/dark-keeper", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/itcrab/dark-keeper", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "dark-keeper", "package_url": "https://pypi.org/project/dark-keeper/", "platform": "", "project_url": "https://pypi.org/project/dark-keeper/", "project_urls": {"Homepage": "https://github.com/itcrab/dark-keeper"}, "release_url": "https://pypi.org/project/dark-keeper/0.2.7/", "requires_dist": null, "requires_python": "", "summary": "Dark Keeper is open source simple web-parser for podcast-sites", "version": "0.2.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/itcrab/dark-keeper\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a96da19e8bfc050fe3e603c2633e50b43f39a2c9/68747470733a2f2f7472617669732d63692e6f72672f6974637261622f6461726b2d6b65657065722e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/itcrab/dark-keeper?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f094404a75edd0337f208d0a7a953d44d9aab694/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6974637261622f6461726b2d6b65657065722f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codeclimate.com/github/itcrab/dark-keeper\" rel=\"nofollow\"><img alt=\"Code Climate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df83576a7a022f1e33810c245a6570d3c0c5081a/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f6974637261622f6461726b2d6b65657065722f6261646765732f6770612e737667\"></a> <a href=\"https://github.com/itcrab/dark-keeper\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/36686084675cebbeff3809cb9d8291b8e6ebd672/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6173686170652f6170697374617475732e737667\"></a></p>\n<div id=\"dark-keeper\">\n<h2>Dark Keeper</h2>\n<p>Dark Keeper is open source simple web-parser for podcast-sites.</p>\n</div>\n<div id=\"goal-idea\">\n<h2>Goal idea</h2>\n<p>I like listen IT-podcasts and learn something new. For really good\npodcasts I want download all episodes. Goal idea is create simple tool\nfor this.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>[x] simple web-spider walking on site</li>\n<li>[x] cache for all downloaded pages</li>\n<li>[x] parse any information from pages</li>\n<li>[x] export parsed data to MongoDB</li>\n</ul>\n</div>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<p><tt>$ mkvirtualenv keeper</tt></p>\n<p><tt>(keeper)$ pip install <span class=\"pre\">dark-keeper</span></tt></p>\n<p><tt>(keeper)$ cat app.py</tt></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">OrderedDict</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dark_keeper</span> <span class=\"kn\">import</span> <span class=\"n\">DarkKeeper</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PodcastKeeper</span><span class=\"p\">(</span><span class=\"n\">DarkKeeper</span><span class=\"p\">):</span>\n    <span class=\"n\">base_url</span> <span class=\"o\">=</span> <span class=\"s1\">'https://radio-t.com/archives/'</span>\n    <span class=\"n\">mongo_uri</span> <span class=\"o\">=</span> <span class=\"s1\">'mongodb://localhost/podcasts/radio-t.com'</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">parse_urls</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">content</span><span class=\"p\">):</span>\n        <span class=\"n\">urls</span> <span class=\"o\">=</span> <span class=\"n\">content</span><span class=\"o\">.</span><span class=\"n\">parse_urls</span><span class=\"p\">(</span><span class=\"s1\">'#blog-archives h1 a'</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_url</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">urls</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">parse_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">content</span><span class=\"p\">):</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">()</span>\n        <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'title'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">content</span><span class=\"o\">.</span><span class=\"n\">parse_text</span><span class=\"p\">(</span><span class=\"s1\">'.hentry .entry-title'</span><span class=\"p\">)</span>\n        <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'desc'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">content</span><span class=\"o\">.</span><span class=\"n\">parse_text</span><span class=\"p\">(</span><span class=\"s1\">'.hentry .entry-content'</span><span class=\"p\">)</span>\n        <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'mp3'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">content</span><span class=\"o\">.</span><span class=\"n\">parse_attr</span><span class=\"p\">(</span><span class=\"s1\">'.hentry audio'</span><span class=\"p\">,</span> <span class=\"s1\">'src'</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'title'</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'mp3'</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"n\">data</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">pk</span> <span class=\"o\">=</span> <span class=\"n\">PodcastKeeper</span><span class=\"p\">()</span>\n    <span class=\"n\">pk</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3162159, "releases": {"0.2.6": [{"comment_text": "", "digests": {"md5": "a4f904e7cf56763fb66e3240ed12a130", "sha256": "f427c325dcff95081bb837a24588ae0e0ee66744c5c18ec9339fa13bd7827764"}, "downloads": -1, "filename": "dark-keeper-0.2.6.tar.gz", "has_sig": false, "md5_digest": "a4f904e7cf56763fb66e3240ed12a130", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4464, "upload_time": "2017-07-08T20:57:55", "upload_time_iso_8601": "2017-07-08T20:57:55.289520Z", "url": "https://files.pythonhosted.org/packages/3f/22/09619a0b781899ca3157ba472ec397bf4bdbb88327d7ae787550eb3c54c7/dark-keeper-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "d5dbe1a464d81ba0e22c0032c6e1aa05", "sha256": "bdc3cf438e04b09532837fc8662e8a5f469a20f5d792a2f1e4f0c97fc46b81b1"}, "downloads": -1, "filename": "dark-keeper-0.2.7.tar.gz", "has_sig": false, "md5_digest": "d5dbe1a464d81ba0e22c0032c6e1aa05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4616, "upload_time": "2017-09-09T19:31:05", "upload_time_iso_8601": "2017-09-09T19:31:05.053668Z", "url": "https://files.pythonhosted.org/packages/a2/12/975b6f4af983006622e4ecfaf9ecbc7a51712ee1b40ee0fa4ac86c541f76/dark-keeper-0.2.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d5dbe1a464d81ba0e22c0032c6e1aa05", "sha256": "bdc3cf438e04b09532837fc8662e8a5f469a20f5d792a2f1e4f0c97fc46b81b1"}, "downloads": -1, "filename": "dark-keeper-0.2.7.tar.gz", "has_sig": false, "md5_digest": "d5dbe1a464d81ba0e22c0032c6e1aa05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4616, "upload_time": "2017-09-09T19:31:05", "upload_time_iso_8601": "2017-09-09T19:31:05.053668Z", "url": "https://files.pythonhosted.org/packages/a2/12/975b6f4af983006622e4ecfaf9ecbc7a51712ee1b40ee0fa4ac86c541f76/dark-keeper-0.2.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:40 2020"}