{"info": {"author": "Alexandre Conrad, Jonathan Ellis, Ga\u00ebl Pasgrimaud, Matthias Urlichs", "author_email": "formalchemy@googlegroups.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: User Interfaces", "Topic :: Text Processing :: Markup :: HTML", "Topic :: Utilities"], "description": ".. contents:: :depth:1\n\nDescription\n===========\n\nFormAlchemy eliminates boilerplate by autogenerating HTML input fields from a\ngiven model. FormAlchemy will try to figure out what kind of HTML code should\nbe returned by introspecting the model's properties and generate ready-to-use\nHTML code that will fit the developer's application.\n\nOf course, FormAlchemy can't figure out everything, i.e, the developer might\nwant to display only a few columns from the given model. Thus, FormAlchemy is\nalso highly customizable.\n\nPlease visit the FormAlchemy's homepage for documentation and more information:\n\n  http://docs.formalchemy.org/\n\nYou can subscribe to FormAlchemy's mailing list:\n\n  http://groups.google.com/group/formalchemy\n\n\nChanges\n=======\n\n1.5.3\n-----\n\n* Allow overriding renderer_opts via an \"attrs=\u2026\" column option\n\n1.5.2\n-----\n\n* Pull in the 1.4.5-dev changes. Sorry about that.\n\n1.5.1\n-----\n\n* minor code reorg\n\n1.5.0\n-----\n\n* The big one: be compatible with Python 3.x.\n\n  * actually, Python 3.3+, because of u'' string literals\n\n  * drop Pylons support because that won't be ported to Py3\n\n  * skip HTML5 tests until Selenium works with Py3\n\n1.4.5-dev\n------------------\n\n* Add FieldSet.reconfigure (like configure, but doesn't toss your previous changes)\n\n* Don't test whether the session you pass in is a member of well-known session class.\n  It may be a proxy object.\n\n1.4.4\n-----\n\n* SQLAlchemy 0.9+ support\n\n* dropped sqlalchemy 0.4 compatibility\n\n* Enable passing 'attrs' to field options\n\n* Interoperability with Werkzeug\n\n* Grid interface: iterate columns directly\n\n* XSS protection: always HTML-escape field contents\n\n* added an iterator to Grid\n\n1.4.3\n-----\n\n* Allow fields to set their `readonly` status to False as well as True.\n\n* SQLAlchemy 0.8+ support\n\n* Broke the test system and added questionable fixes (IMHO -- smurfix)\n\n1.4.2\n-----\n\n* WebOb1.2 compat\n\n* Add some HTML5 renderer\n\n* Improve fsblob deletion. issue 16\n\n* Add support for fanstatic in pytlons (thanks to Bruno Binet aka inneos)\n\n1.4.1\n-----\n\n* Implemented WebOb-like request passing to FieldSet directly.\n\n* Also implemented request passing to Grid\n\n* Added support to set `.html_options` with Field.set(html={'some': 'thing'})\n\n* Added support for set(validators=[validator1, validator2]) which adds the\n  specified validators.\n\n* Fixed the set(null_as=...), was nul_as and badly wired in.\n\n* Improved documentation for the Field.set() method\n\n* Support zope.schema.Password\n\n* Fix issues 9, 10, 11, 12\n\n\n1.4\n----\n\n* Fix issue 5, 7\n\n* Allow to binf form to a webob like request\n\n* Add Column wrapper to store some form options in models\n\n* Field label translation\n\n1.3.9\n-----\n\n* fix unicode issue with non webob based framework\n\n1.3.8\n-----\n\n* use webob.multidict as ``data``. This will improve unicode handling in the\n  future (eg: py3k migration). WebOb is now a dependency.\n\n* add to_dict() method and .bind(with_prefix=True/False) to help to work with json data\n\n* improve ext.fsblob. files are wrote on the file system using\n  ``shutil.copyfileobj`` from the ``cgi.FieldStorage`` field\n\n* Add a HiddenFieldRendererFactory and allow to hide Date/Time fields via\n  ``.hidden()`` and ``.set(hidden=True)`` (Thanks to tarek to put this idea in\n  my brain)\n\n* added german translation (thanks @disko for pull request)\n\n* fix issue 1, 2 (on github)\n\n1.3.6\n-----\n\n* fix issues 150, 151, 153, 161, 162\n\n* Added `field.label()` and `field.label_tags()`\n\n* Major refactoring. The `base` module no longer existe.\n\n1.3.5\n-----\n\n* No longer use Binary type. Use LargeBinary instead.\n\n* fix issues 145, 147\n\n1.3.4\n------\n\n* renderer._value is deprecated. Use renderer.value\n\n* added renderer.raw_value\n\n* Model.__html__() (if any) is used to render model in read_only mode.\n\n1.3.3\n-----\n\n* Added `.insert_after(field, new_field)` to the `FieldSet` object.  Same\n  as `.insert()`, except it adds it after the specified field.\n\n* Docs improvements\n\n* Fix 131 to 137\n\n1.3.2\n-----\n\n* Added `.value_objects` to both Field and FieldRenderer objects. Returns the\n  objects instead of list of primary keys when working with ForeignKeys.\n\n* add IntervalFieldRenderer\n\n* switch back to WebHelpers\n\n* add Hungarian translation (125)\n\n* fix bug with latest version of couchdbkit\n\n* update paster template to Pylons 1.0b1\n\n* fix issues 123, 124, 127, 128\n\n1.3.1\n-------\n\n* include css in MANIFEST.in\n\n1.3\n-----\n\n* new controllers to generate CRUD interfaces based on pylons RESTController\n\n* couchdb support improvement (allow to use RESTController)\n\n* Experimental RDFAlchemy support\n\n* Add date formats to config module.\n\n* add fs.copy()\n\n* zope.schema.List and zope.schema.Choice support (thanks to Christophe Combelles)\n\n* fix issues 107, 113, 114, 117, 118\n\n* css improvement for pylons admin interface\n\n1.2.1\n-----\n\n* Added fs.append(field) fs.insert(field, new_field) and del fs.field to\n  Fieldset. fs.add() is deprecated.\n\n* Added field.set() to modify the field inplace.\n\n* bug fixes: issues 70, 80, 82, 97\n\n* added spanish tanslation (thanks to robarago)\n\n* added the `.with_html` method to `AbstractField` which will be\n  passed to the renderers, allowing to add some HTML attributes to rendered\n  HTML tags.  Removed html_options from render method.  (See issue #60)\n\n* validators are now passed as second argument the `field` being validated. WARN:\n  this will mean adding the parameter to your functions to be backwards compatible.\n  The validator function signature changed from `myfunc(value)` to\n  `myfunc(value, field=None)`.\n\n* ext.couchdb now use couchdbkit instead of py-simplecouchdb\n\n* added the `.with_metadata` method to `AbstractField` which allows\n  you to add metadata to your field. The difference with `.with_html()` is that\n  the attributes passed in will not be rendered in the HTML element, but are there\n  only to be used in your templates, to tweak the output according to those\n  properties. See docs/forms.txt\n\n\n1.2\n---\n\n* add a paster template to bootstrap a pylons project with FA support enabled\n\n* much sexier look for admin interface\n\n* performance improvements\n\n* non-SQLA Fields are no longer considered \"experimental\"\n\n* with_null_as feature (see issue #52)\n\n* prefix feature (see issue #59)\n\n* when auto-querying for option values, the order_by given on the relation is used, if any\n\n* synonym awareness (you don't have to manually exclude the shadowed attribute)\n\n* ext.couchdb (experimental)\n\n\n1.1.1\n-----\n\n* bug fixes: issues 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49\n\n* added EscapingReadonlyRenderer\n\n* add Date*Renderer translation\n\n\n1.1\n---\n\n* formalchemy.ext.pylons.admin added; see\n  http://docs.formalchemy.org/ext/pylons.html\n\n* formalchemy.ext.fsblob added; see\n  http://docs.formalchemy.org/ext/fsblob.html\n\n* support for composite primary keys\n\n* support for composite foreign keys of primitive types\n\n* model argument now optional for FieldSet.bind\n\n* apply i8n to Grid labels\n\n* documentation improvement\n\n* bug fixes\n\n\n1.0.1\n-----\n\n* Bug fixes\n\n\n1.0\n---\n\n* i18n support (gael.pasgrimaud)\n\n* file upload support (gael.pasgrimaud)\n\n* mapper property alias support (gael.pasgrimaud)\n\n* add `kwargs` to FieldSet and Grid render methods, which are passed\n  on to the template.  this allows easy custom template use w/o having\n  to subclass.  (lbruno)\n\n* removed query_options.  Just pass the query as the argument to the\n  options parameter, and FA will turn it into (description, value)\n  pairs.  FA will also accept an iterable of objects as a value to the\n  options parameter.\n\n* unicode(object) is used as the default option description, not\n  str(object).  (Before, unicode was only used if the engine had\n  convert_unicode turned on.)  This is more consistent with normal SA\n  behavior.\n\n* added sanity checks to disallow getting into an inconsistent state.\n  notably, binding to an object that belongs to a session but does NOT\n  have a primary key set is not allowed.  workaround: bind to the\n  class, and FA will instantiate it and take it out of the session\n  [until sync()].  Then you can pull that instance out as the .model\n  attribute.\n\n* sync() will save model to session, if necessary\n\n* add Field.with_renderer\n\n* allow manually-added fields to pull their value from the bound model\n\n* fs.[field] returns the configured version of the field, not the\n  unconfigured.  fs.fields renamed to fs._fields.  Added Field.reset()\n  to deepcopy the unconfigured version.\n\n* explicit renderers required for custom types (FieldRenderer.render removed)\n\n* new documentation http://docs.formalchemy.org (gael.pasgrimaud)\n\n* bug fixes\n\n\n0.5.1\n-----\n\n* Synonym support\n\n* Bug fixes\n\n\n0.5\n---\n\n* Composite field and custom type support\n\n* Joined table support\n\n* Grid (companion to FieldSet) renders and edits multiple instances\n  at once.\n\n* readonly support for FieldSet (replacing undocumented Table), Grid\n  (replacing TableCollection)\n\n* FieldSet can render Fields from a non-mapped class (experimental)\n\n* Saner (backwards-incompatible, but easy port) widget\n  (FieldRenderer) API\n\n* FieldSet.render_fields is now an OrderedDict like FieldSet.fields.\n  Use render_fields.[iter]values() to get an iterable like the old\n  render_fields.\n\n* Bug fixes\n\n\n0.3.1\n-----\n\n* Bug fixes\n\n* Much better DateTime support\n\n* Extensible widget API (want to use your favorite date picker instead?  No problem.)\n\n* `FieldRenderer` is now part of `from formalchemy import *` for use here\n\n* Minor changes to template API (details in documentation).  Does not affect\n  you unless you already wrote a custom template\n\n* order fields by declared order as much as possible, instead of alphabetical,\n  when include= is absent\n\n* Validator suite fleshed out (minlength, maxlength, regex, email, currency)\n\n* Added doc sections on widget API and validation functions\n\n\n0.3\n---\n\n* Completely new API, based on Fields instead of column names\n\n* Support manually added Fields, not just attributes from the SA model\n\n* Relations (a FK will be rendered with a dropdown of related objects)\n\n* Validation + sync\n\n* Template-based rendering for greater customizibility.  Tempita is included;\n  Mako is detected and used if present\n\n* WebHelpers is no longer a dependency; the small parts FA needs have been\n  moved into helpers.py.  (This was prompted by WebHelpers 0.6 breaking\n  backwards compatibility in nontrivial ways.)\n\n* Pervasive docstrings\n\n* Preliminary SA 0.5 support\n\n* Regression test suite\n\n\n0.2\n---\n\n* Added 'disable', 'disable_pk', 'disable_fk' options.\n\n* Fixed a bug where 'readonly*' options only worked for 'password' fields.\n\n* Added 'date', 'time' and 'datetime' options for date/time fields formatting.\n\n* Added 'bool_as_radio' option.\n\n* Added a hack to force browsers to POST unckecked checkboxes.\n\n* Fixed a bug where 'opts' from the 'dropdown' option is no longer rendered as\n  an attribute of the &lt;select&gt; tag.\n\n* Fixed a compatibility issue with SQLAlchemy 0.4.1. The 'foreign_key' Column\n  attribute is now 'foreign_keys'.\n\n* Added 'fieldset' option.\n\n* Added 'include' option. Patch from Adam Gomaa.\n\n* Added 'textarea' option. Additionnal patch provided by Adam Gomaa for passing\n  native tuple of intergers as `size` argument value.\n\n* Added new experimental, little customizable, 'TableItem' and\n  'TableCollection'. TableItem renders a table from a bound model.\n  TableCollection renders a table from a collection of items that are of the\n  same class than the bound model: TableCollection(bind=client,\n  collection=client_list). The bound model can be a non-instantiated mapped\n  class.\n\n* Removed NullType type column detection for now, as it seems to be a SA 0.4\n  only thing. What would a NullType HTML field represent anyway?\n\n* FieldSet now returns fields embedded in &lt;fieldset&gt; HTML tags.\n\n* Implemented the 'legend' option for FieldSet to provide an optional and\n  customizable &lt;legend&gt; tag. FieldSet uses the bound model's class name as the\n  legend by default. The legend can be customized by passing a string to the\n  'legend' option: `legend='My legend'`. The fieldset can be legend-less by\n  passing `legend=False`.\n\n* Big core changes. Splitted the single formalchemy.py module into a\n  formalchemy package. More classes, more flexibility. Plus, we're now using\n  model-level and column-level rendering engines: 'ModelRenderer' and\n  'FieldRenderer'.\n\n* 'ModelRender' and 'FieldRender' allows you to render a whole model (like\n  FieldSet, but without the fieldset/legend tags) or a single column.\n\n* FieldSet now uses 'ModelRenderer'.\n\n* Added new experimental, little customizable, non-form related, 'TableItem'\n  and 'TableCollection'. TableItem renders a table from a bound model.\n  TableCollection renders a table from a collection of items that are of the\n  same class than the bound model: TableCollection(bind=client,\n  collection=client_list). The bound model can be a non-instantiated mapped\n  class.\n\n\n0.1\n---\n\n* Initial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://docs.formalchemy.org/", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "FormAlchemy", "package_url": "https://pypi.org/project/FormAlchemy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/FormAlchemy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://docs.formalchemy.org/"}, "release_url": "https://pypi.org/project/FormAlchemy/1.5.5/", "requires_dist": null, "requires_python": null, "summary": "FormAlchemy greatly speeds development with SQLAlchemy mapped classes (models) in a HTML forms environment.", "version": "1.5.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"depth-1\">\n<p>:depth:1</p>\n<ul>\n<li><a href=\"#description\" id=\"id31\" rel=\"nofollow\">Description</a></li>\n<li><a href=\"#changes\" id=\"id32\" rel=\"nofollow\">Changes</a><ul>\n<li><a href=\"#id1\" id=\"id33\" rel=\"nofollow\">1.5.3</a></li>\n<li><a href=\"#id2\" id=\"id34\" rel=\"nofollow\">1.5.2</a></li>\n<li><a href=\"#id3\" id=\"id35\" rel=\"nofollow\">1.5.1</a></li>\n<li><a href=\"#id4\" id=\"id36\" rel=\"nofollow\">1.5.0</a></li>\n<li><a href=\"#dev\" id=\"id37\" rel=\"nofollow\">1.4.5-dev</a></li>\n<li><a href=\"#id5\" id=\"id38\" rel=\"nofollow\">1.4.4</a></li>\n<li><a href=\"#id6\" id=\"id39\" rel=\"nofollow\">1.4.3</a></li>\n<li><a href=\"#id7\" id=\"id40\" rel=\"nofollow\">1.4.2</a></li>\n<li><a href=\"#id8\" id=\"id41\" rel=\"nofollow\">1.4.1</a></li>\n<li><a href=\"#id9\" id=\"id42\" rel=\"nofollow\">1.4</a></li>\n<li><a href=\"#id10\" id=\"id43\" rel=\"nofollow\">1.3.9</a></li>\n<li><a href=\"#id11\" id=\"id44\" rel=\"nofollow\">1.3.8</a></li>\n<li><a href=\"#id12\" id=\"id45\" rel=\"nofollow\">1.3.6</a></li>\n<li><a href=\"#id13\" id=\"id46\" rel=\"nofollow\">1.3.5</a></li>\n<li><a href=\"#id14\" id=\"id47\" rel=\"nofollow\">1.3.4</a></li>\n<li><a href=\"#id15\" id=\"id48\" rel=\"nofollow\">1.3.3</a></li>\n<li><a href=\"#id16\" id=\"id49\" rel=\"nofollow\">1.3.2</a></li>\n<li><a href=\"#id17\" id=\"id50\" rel=\"nofollow\">1.3.1</a></li>\n<li><a href=\"#id18\" id=\"id51\" rel=\"nofollow\">1.3</a></li>\n<li><a href=\"#id19\" id=\"id52\" rel=\"nofollow\">1.2.1</a></li>\n<li><a href=\"#id20\" id=\"id53\" rel=\"nofollow\">1.2</a></li>\n<li><a href=\"#id21\" id=\"id54\" rel=\"nofollow\">1.1.1</a></li>\n<li><a href=\"#id22\" id=\"id55\" rel=\"nofollow\">1.1</a></li>\n<li><a href=\"#id23\" id=\"id56\" rel=\"nofollow\">1.0.1</a></li>\n<li><a href=\"#id24\" id=\"id57\" rel=\"nofollow\">1.0</a></li>\n<li><a href=\"#id25\" id=\"id58\" rel=\"nofollow\">0.5.1</a></li>\n<li><a href=\"#id26\" id=\"id59\" rel=\"nofollow\">0.5</a></li>\n<li><a href=\"#id27\" id=\"id60\" rel=\"nofollow\">0.3.1</a></li>\n<li><a href=\"#id28\" id=\"id61\" rel=\"nofollow\">0.3</a></li>\n<li><a href=\"#id29\" id=\"id62\" rel=\"nofollow\">0.2</a></li>\n<li><a href=\"#id30\" id=\"id63\" rel=\"nofollow\">0.1</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"description\">\n<h2><a href=\"#id31\" rel=\"nofollow\">Description</a></h2>\n<p>FormAlchemy eliminates boilerplate by autogenerating HTML input fields from a\ngiven model. FormAlchemy will try to figure out what kind of HTML code should\nbe returned by introspecting the model\u2019s properties and generate ready-to-use\nHTML code that will fit the developer\u2019s application.</p>\n<p>Of course, FormAlchemy can\u2019t figure out everything, i.e, the developer might\nwant to display only a few columns from the given model. Thus, FormAlchemy is\nalso highly customizable.</p>\n<p>Please visit the FormAlchemy\u2019s homepage for documentation and more information:</p>\n<blockquote>\n<a href=\"http://docs.formalchemy.org/\" rel=\"nofollow\">http://docs.formalchemy.org/</a></blockquote>\n<p>You can subscribe to FormAlchemy\u2019s mailing list:</p>\n<blockquote>\n<a href=\"http://groups.google.com/group/formalchemy\" rel=\"nofollow\">http://groups.google.com/group/formalchemy</a></blockquote>\n</div>\n<div id=\"changes\">\n<h2><a href=\"#id32\" rel=\"nofollow\">Changes</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id33\" rel=\"nofollow\">1.5.3</a></h3>\n<ul>\n<li>Allow overriding renderer_opts via an \u201cattrs=\u2026\u201d column option</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id34\" rel=\"nofollow\">1.5.2</a></h3>\n<ul>\n<li>Pull in the 1.4.5-dev changes. Sorry about that.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id35\" rel=\"nofollow\">1.5.1</a></h3>\n<ul>\n<li>minor code reorg</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id36\" rel=\"nofollow\">1.5.0</a></h3>\n<ul>\n<li>The big one: be compatible with Python 3.x.<ul>\n<li>actually, Python 3.3+, because of u\u2019\u2019 string literals</li>\n<li>drop Pylons support because that won\u2019t be ported to Py3</li>\n<li>skip HTML5 tests until Selenium works with Py3</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"dev\">\n<h3><a href=\"#id37\" rel=\"nofollow\">1.4.5-dev</a></h3>\n<ul>\n<li>Add FieldSet.reconfigure (like configure, but doesn\u2019t toss your previous changes)</li>\n<li>Don\u2019t test whether the session you pass in is a member of well-known session class.\nIt may be a proxy object.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id38\" rel=\"nofollow\">1.4.4</a></h3>\n<ul>\n<li>SQLAlchemy 0.9+ support</li>\n<li>dropped sqlalchemy 0.4 compatibility</li>\n<li>Enable passing \u2018attrs\u2019 to field options</li>\n<li>Interoperability with Werkzeug</li>\n<li>Grid interface: iterate columns directly</li>\n<li>XSS protection: always HTML-escape field contents</li>\n<li>added an iterator to Grid</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3><a href=\"#id39\" rel=\"nofollow\">1.4.3</a></h3>\n<ul>\n<li>Allow fields to set their <cite>readonly</cite> status to False as well as True.</li>\n<li>SQLAlchemy 0.8+ support</li>\n<li>Broke the test system and added questionable fixes (IMHO \u2013 smurfix)</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3><a href=\"#id40\" rel=\"nofollow\">1.4.2</a></h3>\n<ul>\n<li>WebOb1.2 compat</li>\n<li>Add some HTML5 renderer</li>\n<li>Improve fsblob deletion. issue 16</li>\n<li>Add support for fanstatic in pytlons (thanks to Bruno Binet aka inneos)</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3><a href=\"#id41\" rel=\"nofollow\">1.4.1</a></h3>\n<ul>\n<li>Implemented WebOb-like request passing to FieldSet directly.</li>\n<li>Also implemented request passing to Grid</li>\n<li>Added support to set <cite>.html_options</cite> with Field.set(html={\u2018some\u2019: \u2018thing\u2019})</li>\n<li>Added support for set(validators=[validator1, validator2]) which adds the\nspecified validators.</li>\n<li>Fixed the set(null_as=\u2026), was nul_as and badly wired in.</li>\n<li>Improved documentation for the Field.set() method</li>\n<li>Support zope.schema.Password</li>\n<li>Fix issues 9, 10, 11, 12</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3><a href=\"#id42\" rel=\"nofollow\">1.4</a></h3>\n<ul>\n<li>Fix issue 5, 7</li>\n<li>Allow to binf form to a webob like request</li>\n<li>Add Column wrapper to store some form options in models</li>\n<li>Field label translation</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3><a href=\"#id43\" rel=\"nofollow\">1.3.9</a></h3>\n<ul>\n<li>fix unicode issue with non webob based framework</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3><a href=\"#id44\" rel=\"nofollow\">1.3.8</a></h3>\n<ul>\n<li>use webob.multidict as <tt>data</tt>. This will improve unicode handling in the\nfuture (eg: py3k migration). WebOb is now a dependency.</li>\n<li>add to_dict() method and .bind(with_prefix=True/False) to help to work with json data</li>\n<li>improve ext.fsblob. files are wrote on the file system using\n<tt>shutil.copyfileobj</tt> from the <tt>cgi.FieldStorage</tt> field</li>\n<li>Add a HiddenFieldRendererFactory and allow to hide Date/Time fields via\n<tt>.hidden()</tt> and <tt>.set(hidden=True)</tt> (Thanks to tarek to put this idea in\nmy brain)</li>\n<li>added german translation (thanks @disko for pull request)</li>\n<li>fix issue 1, 2 (on github)</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3><a href=\"#id45\" rel=\"nofollow\">1.3.6</a></h3>\n<ul>\n<li>fix issues 150, 151, 153, 161, 162</li>\n<li>Added <cite>field.label()</cite> and <cite>field.label_tags()</cite></li>\n<li>Major refactoring. The <cite>base</cite> module no longer existe.</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3><a href=\"#id46\" rel=\"nofollow\">1.3.5</a></h3>\n<ul>\n<li>No longer use Binary type. Use LargeBinary instead.</li>\n<li>fix issues 145, 147</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3><a href=\"#id47\" rel=\"nofollow\">1.3.4</a></h3>\n<ul>\n<li>renderer._value is deprecated. Use renderer.value</li>\n<li>added renderer.raw_value</li>\n<li>Model.__html__() (if any) is used to render model in read_only mode.</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3><a href=\"#id48\" rel=\"nofollow\">1.3.3</a></h3>\n<ul>\n<li>Added <cite>.insert_after(field, new_field)</cite> to the <cite>FieldSet</cite> object.  Same\nas <cite>.insert()</cite>, except it adds it after the specified field.</li>\n<li>Docs improvements</li>\n<li>Fix 131 to 137</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3><a href=\"#id49\" rel=\"nofollow\">1.3.2</a></h3>\n<ul>\n<li>Added <cite>.value_objects</cite> to both Field and FieldRenderer objects. Returns the\nobjects instead of list of primary keys when working with ForeignKeys.</li>\n<li>add IntervalFieldRenderer</li>\n<li>switch back to WebHelpers</li>\n<li>add Hungarian translation (125)</li>\n<li>fix bug with latest version of couchdbkit</li>\n<li>update paster template to Pylons 1.0b1</li>\n<li>fix issues 123, 124, 127, 128</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3><a href=\"#id50\" rel=\"nofollow\">1.3.1</a></h3>\n<ul>\n<li>include css in MANIFEST.in</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3><a href=\"#id51\" rel=\"nofollow\">1.3</a></h3>\n<ul>\n<li>new controllers to generate CRUD interfaces based on pylons RESTController</li>\n<li>couchdb support improvement (allow to use RESTController)</li>\n<li>Experimental RDFAlchemy support</li>\n<li>Add date formats to config module.</li>\n<li>add fs.copy()</li>\n<li>zope.schema.List and zope.schema.Choice support (thanks to Christophe Combelles)</li>\n<li>fix issues 107, 113, 114, 117, 118</li>\n<li>css improvement for pylons admin interface</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3><a href=\"#id52\" rel=\"nofollow\">1.2.1</a></h3>\n<ul>\n<li>Added fs.append(field) fs.insert(field, new_field) and del fs.field to\nFieldset. fs.add() is deprecated.</li>\n<li>Added field.set() to modify the field inplace.</li>\n<li>bug fixes: issues 70, 80, 82, 97</li>\n<li>added spanish tanslation (thanks to robarago)</li>\n<li>added the <cite>.with_html</cite> method to <cite>AbstractField</cite> which will be\npassed to the renderers, allowing to add some HTML attributes to rendered\nHTML tags.  Removed html_options from render method.  (See issue #60)</li>\n<li>validators are now passed as second argument the <cite>field</cite> being validated. WARN:\nthis will mean adding the parameter to your functions to be backwards compatible.\nThe validator function signature changed from <cite>myfunc(value)</cite> to\n<cite>myfunc(value, field=None)</cite>.</li>\n<li>ext.couchdb now use couchdbkit instead of py-simplecouchdb</li>\n<li>added the <cite>.with_metadata</cite> method to <cite>AbstractField</cite> which allows\nyou to add metadata to your field. The difference with <cite>.with_html()</cite> is that\nthe attributes passed in will not be rendered in the HTML element, but are there\nonly to be used in your templates, to tweak the output according to those\nproperties. See docs/forms.txt</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3><a href=\"#id53\" rel=\"nofollow\">1.2</a></h3>\n<ul>\n<li>add a paster template to bootstrap a pylons project with FA support enabled</li>\n<li>much sexier look for admin interface</li>\n<li>performance improvements</li>\n<li>non-SQLA Fields are no longer considered \u201cexperimental\u201d</li>\n<li>with_null_as feature (see issue #52)</li>\n<li>prefix feature (see issue #59)</li>\n<li>when auto-querying for option values, the order_by given on the relation is used, if any</li>\n<li>synonym awareness (you don\u2019t have to manually exclude the shadowed attribute)</li>\n<li>ext.couchdb (experimental)</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3><a href=\"#id54\" rel=\"nofollow\">1.1.1</a></h3>\n<ul>\n<li>bug fixes: issues 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49</li>\n<li>added EscapingReadonlyRenderer</li>\n<li>add Date*Renderer translation</li>\n</ul>\n</div>\n<div id=\"id22\">\n<h3><a href=\"#id55\" rel=\"nofollow\">1.1</a></h3>\n<ul>\n<li>formalchemy.ext.pylons.admin added; see\n<a href=\"http://docs.formalchemy.org/ext/pylons.html\" rel=\"nofollow\">http://docs.formalchemy.org/ext/pylons.html</a></li>\n<li>formalchemy.ext.fsblob added; see\n<a href=\"http://docs.formalchemy.org/ext/fsblob.html\" rel=\"nofollow\">http://docs.formalchemy.org/ext/fsblob.html</a></li>\n<li>support for composite primary keys</li>\n<li>support for composite foreign keys of primitive types</li>\n<li>model argument now optional for FieldSet.bind</li>\n<li>apply i8n to Grid labels</li>\n<li>documentation improvement</li>\n<li>bug fixes</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h3><a href=\"#id56\" rel=\"nofollow\">1.0.1</a></h3>\n<ul>\n<li>Bug fixes</li>\n</ul>\n</div>\n<div id=\"id24\">\n<h3><a href=\"#id57\" rel=\"nofollow\">1.0</a></h3>\n<ul>\n<li>i18n support (gael.pasgrimaud)</li>\n<li>file upload support (gael.pasgrimaud)</li>\n<li>mapper property alias support (gael.pasgrimaud)</li>\n<li>add <cite>kwargs</cite> to FieldSet and Grid render methods, which are passed\non to the template.  this allows easy custom template use w/o having\nto subclass.  (lbruno)</li>\n<li>removed query_options.  Just pass the query as the argument to the\noptions parameter, and FA will turn it into (description, value)\npairs.  FA will also accept an iterable of objects as a value to the\noptions parameter.</li>\n<li>unicode(object) is used as the default option description, not\nstr(object).  (Before, unicode was only used if the engine had\nconvert_unicode turned on.)  This is more consistent with normal SA\nbehavior.</li>\n<li>added sanity checks to disallow getting into an inconsistent state.\nnotably, binding to an object that belongs to a session but does NOT\nhave a primary key set is not allowed.  workaround: bind to the\nclass, and FA will instantiate it and take it out of the session\n[until sync()].  Then you can pull that instance out as the .model\nattribute.</li>\n<li>sync() will save model to session, if necessary</li>\n<li>add Field.with_renderer</li>\n<li>allow manually-added fields to pull their value from the bound model</li>\n<li>fs.[field] returns the configured version of the field, not the\nunconfigured.  fs.fields renamed to fs._fields.  Added Field.reset()\nto deepcopy the unconfigured version.</li>\n<li>explicit renderers required for custom types (FieldRenderer.render removed)</li>\n<li>new documentation <a href=\"http://docs.formalchemy.org\" rel=\"nofollow\">http://docs.formalchemy.org</a> (gael.pasgrimaud)</li>\n<li>bug fixes</li>\n</ul>\n</div>\n<div id=\"id25\">\n<h3><a href=\"#id58\" rel=\"nofollow\">0.5.1</a></h3>\n<ul>\n<li>Synonym support</li>\n<li>Bug fixes</li>\n</ul>\n</div>\n<div id=\"id26\">\n<h3><a href=\"#id59\" rel=\"nofollow\">0.5</a></h3>\n<ul>\n<li>Composite field and custom type support</li>\n<li>Joined table support</li>\n<li>Grid (companion to FieldSet) renders and edits multiple instances\nat once.</li>\n<li>readonly support for FieldSet (replacing undocumented Table), Grid\n(replacing TableCollection)</li>\n<li>FieldSet can render Fields from a non-mapped class (experimental)</li>\n<li>Saner (backwards-incompatible, but easy port) widget\n(FieldRenderer) API</li>\n<li>FieldSet.render_fields is now an OrderedDict like FieldSet.fields.\nUse render_fields.[iter]values() to get an iterable like the old\nrender_fields.</li>\n<li>Bug fixes</li>\n</ul>\n</div>\n<div id=\"id27\">\n<h3><a href=\"#id60\" rel=\"nofollow\">0.3.1</a></h3>\n<ul>\n<li>Bug fixes</li>\n<li>Much better DateTime support</li>\n<li>Extensible widget API (want to use your favorite date picker instead?  No problem.)</li>\n<li><cite>FieldRenderer</cite> is now part of <cite>from formalchemy import *</cite> for use here</li>\n<li>Minor changes to template API (details in documentation).  Does not affect\nyou unless you already wrote a custom template</li>\n<li>order fields by declared order as much as possible, instead of alphabetical,\nwhen include= is absent</li>\n<li>Validator suite fleshed out (minlength, maxlength, regex, email, currency)</li>\n<li>Added doc sections on widget API and validation functions</li>\n</ul>\n</div>\n<div id=\"id28\">\n<h3><a href=\"#id61\" rel=\"nofollow\">0.3</a></h3>\n<ul>\n<li>Completely new API, based on Fields instead of column names</li>\n<li>Support manually added Fields, not just attributes from the SA model</li>\n<li>Relations (a FK will be rendered with a dropdown of related objects)</li>\n<li>Validation + sync</li>\n<li>Template-based rendering for greater customizibility.  Tempita is included;\nMako is detected and used if present</li>\n<li>WebHelpers is no longer a dependency; the small parts FA needs have been\nmoved into helpers.py.  (This was prompted by WebHelpers 0.6 breaking\nbackwards compatibility in nontrivial ways.)</li>\n<li>Pervasive docstrings</li>\n<li>Preliminary SA 0.5 support</li>\n<li>Regression test suite</li>\n</ul>\n</div>\n<div id=\"id29\">\n<h3><a href=\"#id62\" rel=\"nofollow\">0.2</a></h3>\n<ul>\n<li>Added \u2018disable\u2019, \u2018disable_pk\u2019, \u2018disable_fk\u2019 options.</li>\n<li>Fixed a bug where \u2018readonly*\u2019 options only worked for \u2018password\u2019 fields.</li>\n<li>Added \u2018date\u2019, \u2018time\u2019 and \u2018datetime\u2019 options for date/time fields formatting.</li>\n<li>Added \u2018bool_as_radio\u2019 option.</li>\n<li>Added a hack to force browsers to POST unckecked checkboxes.</li>\n<li>Fixed a bug where \u2018opts\u2019 from the \u2018dropdown\u2019 option is no longer rendered as\nan attribute of the &amp;lt;select&amp;gt; tag.</li>\n<li>Fixed a compatibility issue with SQLAlchemy 0.4.1. The \u2018foreign_key\u2019 Column\nattribute is now \u2018foreign_keys\u2019.</li>\n<li>Added \u2018fieldset\u2019 option.</li>\n<li>Added \u2018include\u2019 option. Patch from Adam Gomaa.</li>\n<li>Added \u2018textarea\u2019 option. Additionnal patch provided by Adam Gomaa for passing\nnative tuple of intergers as <cite>size</cite> argument value.</li>\n<li>Added new experimental, little customizable, \u2018TableItem\u2019 and\n\u2018TableCollection\u2019. TableItem renders a table from a bound model.\nTableCollection renders a table from a collection of items that are of the\nsame class than the bound model: TableCollection(bind=client,\ncollection=client_list). The bound model can be a non-instantiated mapped\nclass.</li>\n<li>Removed NullType type column detection for now, as it seems to be a SA 0.4\nonly thing. What would a NullType HTML field represent anyway?</li>\n<li>FieldSet now returns fields embedded in &amp;lt;fieldset&amp;gt; HTML tags.</li>\n<li>Implemented the \u2018legend\u2019 option for FieldSet to provide an optional and\ncustomizable &amp;lt;legend&amp;gt; tag. FieldSet uses the bound model\u2019s class name as the\nlegend by default. The legend can be customized by passing a string to the\n\u2018legend\u2019 option: <cite>legend=\u2019My legend\u2019</cite>. The fieldset can be legend-less by\npassing <cite>legend=False</cite>.</li>\n<li>Big core changes. Splitted the single formalchemy.py module into a\nformalchemy package. More classes, more flexibility. Plus, we\u2019re now using\nmodel-level and column-level rendering engines: \u2018ModelRenderer\u2019 and\n\u2018FieldRenderer\u2019.</li>\n<li>\u2018ModelRender\u2019 and \u2018FieldRender\u2019 allows you to render a whole model (like\nFieldSet, but without the fieldset/legend tags) or a single column.</li>\n<li>FieldSet now uses \u2018ModelRenderer\u2019.</li>\n<li>Added new experimental, little customizable, non-form related, \u2018TableItem\u2019\nand \u2018TableCollection\u2019. TableItem renders a table from a bound model.\nTableCollection renders a table from a collection of items that are of the\nsame class than the bound model: TableCollection(bind=client,\ncollection=client_list). The bound model can be a non-instantiated mapped\nclass.</li>\n</ul>\n</div>\n<div id=\"id30\">\n<h3><a href=\"#id63\" rel=\"nofollow\">0.1</a></h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1184850, "releases": {"0.2": [], "0.3": [], "1.0": [], "1.0.1": [], "1.1": [], "1.2": [], "1.2.1": [], "1.2.2": [], "1.2.3": [], "1.3": [], "1.3.1": [], "1.3.2": [], "1.3.3": [], "1.3.4": [{"comment_text": "", "digests": {"md5": "0b7d6b3d393335ecce6d7c9cc1eec4f9", "sha256": "781da510a02f33b026a476aee2dbd71c42227fd9c1bd9fc92fb01cc192778503"}, "downloads": -1, "filename": "FormAlchemy-1.3.4.tar.gz", "has_sig": false, "md5_digest": "0b7d6b3d393335ecce6d7c9cc1eec4f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 105953, "upload_time": "2010-04-12T00:30:13", "upload_time_iso_8601": "2010-04-12T00:30:13.629967Z", "url": "https://files.pythonhosted.org/packages/b0/07/64114263cff8c1d586c2d61c53b6fb71805ef83dd3517cfcd51d05d7bd1e/FormAlchemy-1.3.4.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc858676a7eca468005bd3684cf15a04", "sha256": "68656efa2bed34bd12d79e46ed0c57c1c986b48092b96d76817cb08de41493c0"}, "downloads": -1, "filename": "FormAlchemy-1.3.4.zip", "has_sig": false, "md5_digest": "cc858676a7eca468005bd3684cf15a04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 147931, "upload_time": "2010-04-12T00:30:12", "upload_time_iso_8601": "2010-04-12T00:30:12.123282Z", "url": "https://files.pythonhosted.org/packages/06/8b/44e7c09ac0328fbf84a935ad50c38e500cbe3602673d7c89e1e4f11932f6/FormAlchemy-1.3.4.zip", "yanked": false}], "1.3.5": [{"comment_text": "", "digests": {"md5": "097c9650b20bfaf4ac07424a6b79e467", "sha256": "d47a61b057c2610cbfaea290812c7f8217914b9ab0212d384d3af2ec85f7b514"}, "downloads": -1, "filename": "FormAlchemy-1.3.5.tar.gz", "has_sig": false, "md5_digest": "097c9650b20bfaf4ac07424a6b79e467", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102209, "upload_time": "2010-10-05T02:48:53", "upload_time_iso_8601": "2010-10-05T02:48:53.121047Z", "url": "https://files.pythonhosted.org/packages/0e/be/490ca43ef7045a5b7b542101ceb0ba59f1fb45329a15f3fbd9ddf222f83d/FormAlchemy-1.3.5.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d645a82ba59b565ddaae0b936a76b07", "sha256": "a3d24b7b874709eb7fc19f9db29cc093cd7e6256c48a3f16b19df732269ee6f1"}, "downloads": -1, "filename": "FormAlchemy-1.3.5.zip", "has_sig": false, "md5_digest": "6d645a82ba59b565ddaae0b936a76b07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 148835, "upload_time": "2010-10-05T02:48:51", "upload_time_iso_8601": "2010-10-05T02:48:51.420461Z", "url": "https://files.pythonhosted.org/packages/38/7b/229fbce1c08e09f5719a5dd5bafe3c25a50bdffac84374320ca3dfdbe7aa/FormAlchemy-1.3.5.zip", "yanked": false}], "1.3.6": [{"comment_text": "", "digests": {"md5": "c44dd117cd87a2373139c1e94b185819", "sha256": "72e0ce62688a21ce9695b88a3b119d4ab62215d0df510072c115a3110eea30ce"}, "downloads": -1, "filename": "FormAlchemy-1.3.6.tar.gz", "has_sig": false, "md5_digest": "c44dd117cd87a2373139c1e94b185819", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 103414, "upload_time": "2011-03-25T01:54:27", "upload_time_iso_8601": "2011-03-25T01:54:27.558668Z", "url": "https://files.pythonhosted.org/packages/ad/89/95ef2d75490a67cf4d59d745da68e75b819f6f2f2643dbf64cc4c2c60143/FormAlchemy-1.3.6.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "df59933de33e271d4595b9698cc055de", "sha256": "0034bd6e03c27b404cc28af40c8656a9f40712adad2f5ead942a6432398098b9"}, "downloads": -1, "filename": "FormAlchemy-1.3.6.zip", "has_sig": false, "md5_digest": "df59933de33e271d4595b9698cc055de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152606, "upload_time": "2011-03-25T01:54:25", "upload_time_iso_8601": "2011-03-25T01:54:25.946695Z", "url": "https://files.pythonhosted.org/packages/54/41/0014697ed813f750e2f5dadf2e707d581ec11bade79cf3f6fa8a385169c1/FormAlchemy-1.3.6.zip", "yanked": false}], "1.3.7": [{"comment_text": "", "digests": {"md5": "5a82540c202007c1f12705f7cb78dbb1", "sha256": "2c6c6c44e81c1db2dac77a9d376261e166c9e0711371ee5ba82fd268b466ac71"}, "downloads": -1, "filename": "FormAlchemy-1.3.7.tar.gz", "has_sig": false, "md5_digest": "5a82540c202007c1f12705f7cb78dbb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 103031, "upload_time": "2011-03-25T16:32:09", "upload_time_iso_8601": "2011-03-25T16:32:09.426358Z", "url": "https://files.pythonhosted.org/packages/25/9b/d3db01979bfd73e5f89423215480ba365c9d1133bd6fc50d9cbb245df34b/FormAlchemy-1.3.7.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1223dda1a2bbde84f0b54b37a31b14a", "sha256": "0b3671a3a62e7d4687b8cc792d9021d7e711e7217eddf170507fbc4ca2f41482"}, "downloads": -1, "filename": "FormAlchemy-1.3.7.zip", "has_sig": false, "md5_digest": "e1223dda1a2bbde84f0b54b37a31b14a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152128, "upload_time": "2011-03-25T16:32:07", "upload_time_iso_8601": "2011-03-25T16:32:07.914565Z", "url": "https://files.pythonhosted.org/packages/99/70/a3df37643f7eeb3339db6ae8e8f4bfffc5cdec195b08bd7c5ff7b8988cdd/FormAlchemy-1.3.7.zip", "yanked": false}], "1.3.8": [{"comment_text": "", "digests": {"md5": "fb2493e8190d3e13ad26f259cf12eff4", "sha256": "de48d75cdd838a70c0478dc0316845d4ace5b272c9a400604eed3b1e102bb5fc"}, "downloads": -1, "filename": "FormAlchemy-1.3.8.tar.gz", "has_sig": false, "md5_digest": "fb2493e8190d3e13ad26f259cf12eff4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 105786, "upload_time": "2011-05-03T17:45:15", "upload_time_iso_8601": "2011-05-03T17:45:15.026170Z", "url": "https://files.pythonhosted.org/packages/33/8f/416ab6bde70d1eb71f2f13cec23c990b24266cca1cd8e948def17f289c53/FormAlchemy-1.3.8.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "569d01a31932f375c230c622c32375cf", "sha256": "3fc00057db9ebc8b39faed42302e03979e66571785ab8530b4d3162fae9357b4"}, "downloads": -1, "filename": "FormAlchemy-1.3.8.zip", "has_sig": false, "md5_digest": "569d01a31932f375c230c622c32375cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 158102, "upload_time": "2011-05-03T17:45:12", "upload_time_iso_8601": "2011-05-03T17:45:12.903215Z", "url": "https://files.pythonhosted.org/packages/b2/75/18ad52fd403f4466e404130a50ef2b15a67aa49c1944ce45e224ba84f073/FormAlchemy-1.3.8.zip", "yanked": false}], "1.3.9": [{"comment_text": "", "digests": {"md5": "af9969424db5a7a32b468f97df09c45d", "sha256": "e9ea32ad2a74cd63d29aea03312e26f244fe45fdb4a79658d2799a2dcac2b92f"}, "downloads": -1, "filename": "FormAlchemy-1.3.9.tar.gz", "has_sig": false, "md5_digest": "af9969424db5a7a32b468f97df09c45d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 106187, "upload_time": "2011-05-22T11:28:37", "upload_time_iso_8601": "2011-05-22T11:28:37.905731Z", "url": "https://files.pythonhosted.org/packages/45/54/3211fefa35915d457a1a7aa7f653ced54a8b83701b83c5c3880a6b14c5ba/FormAlchemy-1.3.9.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b39bd037990a832c8c30bc5ca40d983", "sha256": "92f1e87d77e565ae388a73f9dde0d34f7cb1a46a1fdef33730ea95a09eb5008b"}, "downloads": -1, "filename": "FormAlchemy-1.3.9.zip", "has_sig": false, "md5_digest": "6b39bd037990a832c8c30bc5ca40d983", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 158485, "upload_time": "2011-05-22T11:28:36", "upload_time_iso_8601": "2011-05-22T11:28:36.251660Z", "url": "https://files.pythonhosted.org/packages/d9/a7/117f2d13d0d3fe200d85d6f9c3a6dd968f278e0519cc40210dac36bd4808/FormAlchemy-1.3.9.zip", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "652f35ed078efb64645abc4684c93ab9", "sha256": "facc00168b964fe9a838f6b7c8f98df2dc371bc09e887e4acfd36b4700bf2b78"}, "downloads": -1, "filename": "FormAlchemy-1.4.tar.gz", "has_sig": false, "md5_digest": "652f35ed078efb64645abc4684c93ab9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 107646, "upload_time": "2011-06-21T16:26:08", "upload_time_iso_8601": "2011-06-21T16:26:08.940378Z", "url": "https://files.pythonhosted.org/packages/6e/b5/f42f07fc456b6b5223a671235ef977e05db1e6bb0cb296d33b571577a123/FormAlchemy-1.4.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b8551b5e6b200d02ce4ca8be329eeea", "sha256": "cb896dad5c7bc3fabbd2df5d5e58e4d1049fccc9111c74efe682f9810c58524b"}, "downloads": -1, "filename": "FormAlchemy-1.4.zip", "has_sig": false, "md5_digest": "1b8551b5e6b200d02ce4ca8be329eeea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 159620, "upload_time": "2011-06-21T16:25:54", "upload_time_iso_8601": "2011-06-21T16:25:54.492982Z", "url": "https://files.pythonhosted.org/packages/ca/51/ce087ba9a2f2bcbe0b6231ce6a7694de0e72af39777f8f4ef34b7007c918/FormAlchemy-1.4.zip", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "78ca0cbc1b6db4dd2f93677eb9c71437", "sha256": "a04a906a738d96bd61c3893407f877383bc68b8f4a04f8a836f775fb24a5b5f2"}, "downloads": -1, "filename": "FormAlchemy-1.4.1.tar.gz", "has_sig": false, "md5_digest": "78ca0cbc1b6db4dd2f93677eb9c71437", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 109965, "upload_time": "2011-07-21T20:24:45", "upload_time_iso_8601": "2011-07-21T20:24:45.905477Z", "url": "https://files.pythonhosted.org/packages/c6/41/869661d08dfb3b1c727d0c43f9c0a4f6b78a169f0fd4113e8cd6b31f758a/FormAlchemy-1.4.1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "fca52193cd9ffd09a709fc25a3e3f201", "sha256": "1eda78eacf4f6822588bd64e5f3929502a6cd4a1576ffa12802b365f5a12b5e8"}, "downloads": -1, "filename": "FormAlchemy-1.4.1.zip", "has_sig": false, "md5_digest": "fca52193cd9ffd09a709fc25a3e3f201", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 163762, "upload_time": "2011-07-21T20:24:44", "upload_time_iso_8601": "2011-07-21T20:24:44.273979Z", "url": "https://files.pythonhosted.org/packages/b1/49/525e282d39b42eaba82a2428de1422d13066e935ca8569baa3a50978f1d2/FormAlchemy-1.4.1.zip", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "aa4301df284b87f702a76564f1a21a9e", "sha256": "ca4f302d06b130972ef8718a9aa7bc9e9592189a0865a13d24ec434ac38db1fe"}, "downloads": -1, "filename": "FormAlchemy-1.4.2.tar.gz", "has_sig": false, "md5_digest": "aa4301df284b87f702a76564f1a21a9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115322, "upload_time": "2011-11-19T22:59:26", "upload_time_iso_8601": "2011-11-19T22:59:26.763566Z", "url": "https://files.pythonhosted.org/packages/e9/bf/fbdd86d4d27a67a1334096ed571747e4f0578e0d76229a66bedee422c89d/FormAlchemy-1.4.2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "98f4737a7abfb3e54e2713c95047abd8", "sha256": "c254b8253ffd6546313ca5d6f98bf7aaa0de19a3d56730f2d24d0139b119a1ee"}, "downloads": -1, "filename": "FormAlchemy-1.4.2.zip", "has_sig": false, "md5_digest": "98f4737a7abfb3e54e2713c95047abd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 172193, "upload_time": "2011-11-19T22:59:24", "upload_time_iso_8601": "2011-11-19T22:59:24.946074Z", "url": "https://files.pythonhosted.org/packages/f0/cf/c3281e4960ba0b0367e3332d9efe7c7ceabb37bad052fba0259c1078c2d8/FormAlchemy-1.4.2.zip", "yanked": false}], "1.4.3": [{"comment_text": "", "digests": {"md5": "c28e3f6392ca3973ba43ec0fc09cbe3f", "sha256": "e2509096595bdb7c55b3274bf11b408f4dad9b663bc26f1b5fda39986f8aad61"}, "downloads": -1, "filename": "FormAlchemy-1.4.3.tar.gz", "has_sig": false, "md5_digest": "c28e3f6392ca3973ba43ec0fc09cbe3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119725, "upload_time": "2013-01-26T15:04:19", "upload_time_iso_8601": "2013-01-26T15:04:19.286233Z", "url": "https://files.pythonhosted.org/packages/42/6e/a526331a020f9d6daf5f55d066508da283b1e1dc272832cfb6a4f393a272/FormAlchemy-1.4.3.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "f81cd7a4090a0e77d414f8e1d918d0bf", "sha256": "7f52d4f09eddf5534171b1489e012c9f10ac1acd40d46015882db60990307c32"}, "downloads": -1, "filename": "FormAlchemy-1.4.3.zip", "has_sig": false, "md5_digest": "f81cd7a4090a0e77d414f8e1d918d0bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 181168, "upload_time": "2013-01-26T15:04:16", "upload_time_iso_8601": "2013-01-26T15:04:16.429061Z", "url": "https://files.pythonhosted.org/packages/2c/2a/7a5f95df4832253c452a4b6c3c726dc4eb1ddf57451175cd021a562fce3e/FormAlchemy-1.4.3.zip", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "21677ffffdf0866febf8063c91b18ed4", "sha256": "33cf9fadf5f67b9ade0f359d2c67428577c0ab32ddfbd021a9a34fc9a6978b9e"}, "downloads": -1, "filename": "FormAlchemy-1.5.1.tar.gz", "has_sig": false, "md5_digest": "21677ffffdf0866febf8063c91b18ed4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 126976, "upload_time": "2014-06-10T18:47:53", "upload_time_iso_8601": "2014-06-10T18:47:53.578538Z", "url": "https://files.pythonhosted.org/packages/ae/99/91ef16f165fefc83b0414181525649dc0eac00bf4f3e0c3b2fa3744c3b62/FormAlchemy-1.5.1.tar.gz", "yanked": false}], "1.5.2-dev": [], "1.5.3": [{"comment_text": "", "digests": {"md5": "903fd8e55c3af1801c099035e5283498", "sha256": "78a7207049aa9692c4f50c0b57888419d836dc7da77400da69f47f362512c0e0"}, "downloads": -1, "filename": "FormAlchemy-1.5.3.tar.gz", "has_sig": false, "md5_digest": "903fd8e55c3af1801c099035e5283498", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 108204, "upload_time": "2014-06-11T20:37:22", "upload_time_iso_8601": "2014-06-11T20:37:22.610598Z", "url": "https://files.pythonhosted.org/packages/92/49/27024e26704c32e17ebd910f308d902d7b0b75dbe1bc4f1e6926c742c881/FormAlchemy-1.5.3.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "54478b17181fc379598d45ce49a852a3", "sha256": "659502b1cd64652002ed4f261569ca0323c5da968148814333f8d33d08a3f736"}, "downloads": -1, "filename": "FormAlchemy-1.5.3.zip", "has_sig": false, "md5_digest": "54478b17181fc379598d45ce49a852a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 160420, "upload_time": "2014-06-11T20:37:19", "upload_time_iso_8601": "2014-06-11T20:37:19.100855Z", "url": "https://files.pythonhosted.org/packages/f2/d2/28f699c4908b28a762413a4e4f4705d515533e9ea317067bc5c87ea4a4e1/FormAlchemy-1.5.3.zip", "yanked": false}], "1.5.4": [{"comment_text": "", "digests": {"md5": "31b61f61c1804ffb5bd4bff6da37302c", "sha256": "8f4ddfda1b7833ff79d1ac9f17a77e88ed995991ca343a629db4878c199b23db"}, "downloads": -1, "filename": "FormAlchemy-1.5.4.tar.gz", "has_sig": false, "md5_digest": "31b61f61c1804ffb5bd4bff6da37302c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 108616, "upload_time": "2014-08-09T06:11:15", "upload_time_iso_8601": "2014-08-09T06:11:15.806264Z", "url": "https://files.pythonhosted.org/packages/03/c1/4ab8a4d10ea586d1fa324fec7b9eb5333d2050ab70d655633ae7d47c06f4/FormAlchemy-1.5.4.tar.gz", "yanked": false}], "1.5.5": [{"comment_text": "", "digests": {"md5": "474793453f74e950e857b206c36948fc", "sha256": "3be7c312edaa29f865afed7a3007e5ba047698aea7939eb1b524f0b717a0c796"}, "downloads": -1, "filename": "FormAlchemy-1.5.5.tar.gz", "has_sig": false, "md5_digest": "474793453f74e950e857b206c36948fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 108591, "upload_time": "2014-08-09T07:06:58", "upload_time_iso_8601": "2014-08-09T07:06:58.238186Z", "url": "https://files.pythonhosted.org/packages/2b/5c/f63bc770c89e736ef14b0abf4d3a4d5d53c030625682ea61618499e0a58b/FormAlchemy-1.5.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "474793453f74e950e857b206c36948fc", "sha256": "3be7c312edaa29f865afed7a3007e5ba047698aea7939eb1b524f0b717a0c796"}, "downloads": -1, "filename": "FormAlchemy-1.5.5.tar.gz", "has_sig": false, "md5_digest": "474793453f74e950e857b206c36948fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 108591, "upload_time": "2014-08-09T07:06:58", "upload_time_iso_8601": "2014-08-09T07:06:58.238186Z", "url": "https://files.pythonhosted.org/packages/2b/5c/f63bc770c89e736ef14b0abf4d3a4d5d53c030625682ea61618499e0a58b/FormAlchemy-1.5.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:51 2020"}