{"info": {"author": "Clearcode - The A Room", "author_email": "thearoom@clearcode.cc", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Topic :: Software Development :: Libraries :: Python Modules"], "description": ".. image:: https://raw.githubusercontent.com/ClearcodeHQ/pytest-rabbitmq/master/logo.png\n    :width: 100px\n    :height: 100px\n\npytest-rabbitmq\n===============\n\n.. image:: https://img.shields.io/pypi/v/pytest-rabbitmq.svg\n    :target: https://pypi.python.org/pypi/pytest-rabbitmq/\n    :alt: Latest PyPI version\n\n.. image:: https://img.shields.io/pypi/wheel/pytest-rabbitmq.svg\n    :target: https://pypi.python.org/pypi/pytest-rabbitmq/\n    :alt: Wheel Status\n\n.. image:: https://img.shields.io/pypi/pyversions/pytest-rabbitmq.svg\n    :target: https://pypi.python.org/pypi/pytest-rabbitmq/\n    :alt: Supported Python Versions\n\n.. image:: https://img.shields.io/pypi/l/pytest-rabbitmq.svg\n    :target: https://pypi.python.org/pypi/pytest-rabbitmq/\n    :alt: License\n\nPackage status\n--------------\n\n.. image:: https://travis-ci.org/ClearcodeHQ/pytest-rabbitmq.svg?branch=v2.0.1\n    :target: https://travis-ci.org/ClearcodeHQ/pytest-rabbitmq\n    :alt: Tests\n\n.. image:: https://coveralls.io/repos/ClearcodeHQ/pytest-rabbitmq/badge.png?branch=v2.0.1\n    :target: https://coveralls.io/r/ClearcodeHQ/pytest-rabbitmq?branch=v2.0.1\n    :alt: Coverage Status\n\nWhat is this?\n=============\n\nThis is a pytest plugin, that enables you to test your code that relies on a running RabbitMQ Queues.\nIt allows you to specify additional fixtures for RabbitMQ process and client.\n\nHow to use\n==========\n\nPlugin contains two fixtures\n\n* **rabbitmq** - it's a client fixture that has functional scope. After each test, it cleans RabbitMQ, cleans queues and exchanges for more reliable tests.\n* **rabbitmq_proc** - session scoped fixture, that starts RabbitMQ instance at it's first use and stops at the end of the tests.\n\nSimply include one of these fixtures into your tests fixture list.\n\nYou can also create additional rabbitmq client and process fixtures if you'd need to:\n\n\n.. code-block:: python\n\n    from pytest_rabbitmq import factories\n\n    rabbitmq_my_proc = factories.rabbitmq_proc(\n        port=None, logsdir='/tmp')\n    rabbitmq_my = factories.rabbitmq('rabbitmq_my_proc')\n\n.. note::\n\n    Each RabbitMQ process fixture can be configured in a different way than the others through the fixture factory arguments.\n\nConfiguration\n=============\n\nYou can define your settings in three ways, it's fixture factory argument, command line option and pytest.ini configuration option.\nYou can pick which you prefer, but remember that these settings are handled in the following order:\n\n    * ``Fixture factory argument``\n    * ``Command line option``\n    * ``Configuration option in your pytest.ini file``\n\n.. list-table:: Configuration options\n   :header-rows: 1\n\n   * - RabbitMQ option\n     - Fixture factory argument\n     - Command line option\n     - pytest.ini option\n     - Default\n   * - host\n     - host\n     - --rabbitmq-host\n     - rabbitmq_host\n     - 127.0.0.1\n   * - port\n     - port\n     - --rabbitmq-port\n     - rabbitmq_port\n     - random\n   * - rabbitmqctl path\n     - ctl\n     - --rabbitmq-ctl\n     - rabbitmq_ctl\n     - /usr/lib/rabbitmq/bin/rabbitmqctl\n   * - rabbitmq server path\n     - server\n     - --rabbitmq-server\n     - rabbitmq_server\n     - /usr/lib/rabbitmq/bin/rabbitmq-server\n   * - Log directory location\n     - logsdir\n     - --rabbitmq-logsdir\n     - rabbitmq_logsdir\n     - $TMPDIR\n   * - Node name\n     - node\n     - --rabbitmq-node\n     - rabbitmq_node\n     - rabbitmq-test-{port}\n\n\nExample usage:\n\n* pass it as an argument in your own fixture\n\n    .. code-block:: python\n\n        rabbitmq_proc = factories.rabbitmq_proc(port=8888)\n\n* use ``--rabbitmq-port`` command line option when you run your tests\n\n    .. code-block::\n\n        py.test tests --rabbitmq-port=8888\n\n\n* specify your port as ``rabbitmq_port`` in your ``pytest.ini`` file.\n\n    To do so, put a line like the following under the ``[pytest]`` section of your ``pytest.ini``:\n\n    .. code-block:: ini\n\n        [pytest]\n        rabbitmq_port = 8888\n\nPackage resources\n-----------------\n\n* Bug tracker: https://github.com/ClearcodeHQ/pytest-rabbitmq/issues\n\n\nCHANGELOG\n=========\n\n2.0.1\n----------\n\n- [fix] Adjust for mirakuru 2.2.0 and up\n\n2.0.0\n----------\n\n- [cleanup] Move more rabbitmq related logic into the executor\n- [enhancements] Base environment variables support on the mirakuru functionality itself\n- [feature] Drop support for python 2.7. From now on, only support python 3.6 and up\n\n1.1.2\n----------\n\n- [fix] Fix list queues functionality\n\n1.1.1\n----------\n\n- [enhancemet] removed path.py dependency\n\n1.1.0\n----------\n\n- [enhancements] adjust pytest-rabbitmq to pytest 3. require pytest 3.\n\n1.0.0\n----------\n\n- [enhancements] command line and pytest.ini options for modifying rabbitmq node name\n- [enhancements] command line and pytest.ini options for modifying server exec path\n- [enhancements] command line and pytest.ini options for modifying ctl exec path\n- [enhancements] command line and pytest.ini options for modifying host\n- [enhancements] command line and pytest.ini options for modifying port\n- [enhancements] command line and pytest.ini options for modifying logs directory destination\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ClearcodeHQ/pytest-rabbitmq", "keywords": "RabbitMQ process and client fixtures for pytest", "license": "LGPLv3", "maintainer": "", "maintainer_email": "", "name": "pytest-rabbitmq", "package_url": "https://pypi.org/project/pytest-rabbitmq/", "platform": "", "project_url": "https://pypi.org/project/pytest-rabbitmq/", "project_urls": {"Homepage": "https://github.com/ClearcodeHQ/pytest-rabbitmq"}, "release_url": "https://pypi.org/project/pytest-rabbitmq/2.0.1/", "requires_dist": ["pytest (>=3.0.0)", "port-for", "mirakuru (>=2.0.0)", "rabbitpy", "sphinx ; extra == 'docs'", "pytest-xdist ; extra == 'tests'", "pytest-cov ; extra == 'tests'"], "requires_python": ">=3.6", "summary": "RabbitMQ process and client fixtures for pytest", "version": "2.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://raw.githubusercontent.com/ClearcodeHQ/pytest-rabbitmq/master/logo.png\" height=\"100px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a5346abf529838ed78dfbaaa73d965036848c42/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f436c656172636f646548512f7079746573742d7261626269746d712f6d61737465722f6c6f676f2e706e67\" width=\"100px\">\n<div id=\"pytest-rabbitmq\">\n<h2>pytest-rabbitmq</h2>\n<a href=\"https://pypi.python.org/pypi/pytest-rabbitmq/\" rel=\"nofollow\"><img alt=\"Latest PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/08781a30c30dc28b3e8a9a8d57eec9b36b09edcf/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079746573742d7261626269746d712e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pytest-rabbitmq/\" rel=\"nofollow\"><img alt=\"Wheel Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c08bab0816da3cfdb495b253cb6080006cbf5143/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f7079746573742d7261626269746d712e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pytest-rabbitmq/\" rel=\"nofollow\"><img alt=\"Supported Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b958dedaa4d1bf305e189c39df4c0f9f86251fb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7079746573742d7261626269746d712e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pytest-rabbitmq/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cdde8b625e4cf69513051aa66e62bc2de21af7dd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7079746573742d7261626269746d712e737667\"></a>\n<div id=\"package-status\">\n<h3>Package status</h3>\n<a href=\"https://travis-ci.org/ClearcodeHQ/pytest-rabbitmq\" rel=\"nofollow\"><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b947cf6a6ff212320df433f26cd9e4ac813357f/68747470733a2f2f7472617669732d63692e6f72672f436c656172636f646548512f7079746573742d7261626269746d712e7376673f6272616e63683d76322e302e31\"></a>\n<a href=\"https://coveralls.io/r/ClearcodeHQ/pytest-rabbitmq?branch=v2.0.1\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dea6fc78488938a8358b03628c6dbcf390294010/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f436c656172636f646548512f7079746573742d7261626269746d712f62616467652e706e673f6272616e63683d76322e302e31\"></a>\n</div>\n</div>\n<div id=\"what-is-this\">\n<h2>What is this?</h2>\n<p>This is a pytest plugin, that enables you to test your code that relies on a running RabbitMQ Queues.\nIt allows you to specify additional fixtures for RabbitMQ process and client.</p>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<p>Plugin contains two fixtures</p>\n<ul>\n<li><strong>rabbitmq</strong> - it\u2019s a client fixture that has functional scope. After each test, it cleans RabbitMQ, cleans queues and exchanges for more reliable tests.</li>\n<li><strong>rabbitmq_proc</strong> - session scoped fixture, that starts RabbitMQ instance at it\u2019s first use and stops at the end of the tests.</li>\n</ul>\n<p>Simply include one of these fixtures into your tests fixture list.</p>\n<p>You can also create additional rabbitmq client and process fixtures if you\u2019d need to:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytest_rabbitmq</span> <span class=\"kn\">import</span> <span class=\"n\">factories</span>\n\n<span class=\"n\">rabbitmq_my_proc</span> <span class=\"o\">=</span> <span class=\"n\">factories</span><span class=\"o\">.</span><span class=\"n\">rabbitmq_proc</span><span class=\"p\">(</span>\n    <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">logsdir</span><span class=\"o\">=</span><span class=\"s1\">'/tmp'</span><span class=\"p\">)</span>\n<span class=\"n\">rabbitmq_my</span> <span class=\"o\">=</span> <span class=\"n\">factories</span><span class=\"o\">.</span><span class=\"n\">rabbitmq</span><span class=\"p\">(</span><span class=\"s1\">'rabbitmq_my_proc'</span><span class=\"p\">)</span>\n</pre>\n<div>\n<p>Note</p>\n<p>Each RabbitMQ process fixture can be configured in a different way than the others through the fixture factory arguments.</p>\n</div>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>You can define your settings in three ways, it\u2019s fixture factory argument, command line option and pytest.ini configuration option.\nYou can pick which you prefer, but remember that these settings are handled in the following order:</p>\n<blockquote>\n<ul>\n<li><tt>Fixture factory argument</tt></li>\n<li><tt>Command line option</tt></li>\n<li><tt>Configuration option in your pytest.ini file</tt></li>\n</ul>\n</blockquote>\n<table>\n<caption>Configuration options</caption>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>RabbitMQ option</th>\n<th>Fixture factory argument</th>\n<th>Command line option</th>\n<th>pytest.ini option</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>host</td>\n<td>host</td>\n<td>\u2013rabbitmq-host</td>\n<td>rabbitmq_host</td>\n<td>127.0.0.1</td>\n</tr>\n<tr><td>port</td>\n<td>port</td>\n<td>\u2013rabbitmq-port</td>\n<td>rabbitmq_port</td>\n<td>random</td>\n</tr>\n<tr><td>rabbitmqctl path</td>\n<td>ctl</td>\n<td>\u2013rabbitmq-ctl</td>\n<td>rabbitmq_ctl</td>\n<td>/usr/lib/rabbitmq/bin/rabbitmqctl</td>\n</tr>\n<tr><td>rabbitmq server path</td>\n<td>server</td>\n<td>\u2013rabbitmq-server</td>\n<td>rabbitmq_server</td>\n<td>/usr/lib/rabbitmq/bin/rabbitmq-server</td>\n</tr>\n<tr><td>Log directory location</td>\n<td>logsdir</td>\n<td>\u2013rabbitmq-logsdir</td>\n<td>rabbitmq_logsdir</td>\n<td>$TMPDIR</td>\n</tr>\n<tr><td>Node name</td>\n<td>node</td>\n<td>\u2013rabbitmq-node</td>\n<td>rabbitmq_node</td>\n<td>rabbitmq-test-{port}</td>\n</tr>\n</tbody>\n</table>\n<p>Example usage:</p>\n<ul>\n<li><p>pass it as an argument in your own fixture</p>\n<blockquote>\n<pre><span class=\"n\">rabbitmq_proc</span> <span class=\"o\">=</span> <span class=\"n\">factories</span><span class=\"o\">.</span><span class=\"n\">rabbitmq_proc</span><span class=\"p\">(</span><span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">8888</span><span class=\"p\">)</span>\n</pre>\n</blockquote>\n</li>\n<li><p>use <tt><span class=\"pre\">--rabbitmq-port</span></tt> command line option when you run your tests</p>\n<blockquote>\n<pre>py.test tests --rabbitmq-port=8888\n</pre>\n</blockquote>\n</li>\n<li><p>specify your port as <tt>rabbitmq_port</tt> in your <tt>pytest.ini</tt> file.</p>\n<blockquote>\n<p>To do so, put a line like the following under the <tt>[pytest]</tt> section of your <tt>pytest.ini</tt>:</p>\n<pre><span class=\"k\">[pytest]</span>\n<span class=\"na\">rabbitmq_port</span> <span class=\"o\">=</span> <span class=\"s\">8888</span>\n</pre>\n</blockquote>\n</li>\n</ul>\n<div id=\"package-resources\">\n<h3>Package resources</h3>\n<ul>\n<li>Bug tracker: <a href=\"https://github.com/ClearcodeHQ/pytest-rabbitmq/issues\" rel=\"nofollow\">https://github.com/ClearcodeHQ/pytest-rabbitmq/issues</a></li>\n</ul>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>CHANGELOG</h2>\n<div id=\"id1\">\n<h3>2.0.1</h3>\n<ul>\n<li>[fix] Adjust for mirakuru 2.2.0 and up</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>2.0.0</h3>\n<ul>\n<li>[cleanup] Move more rabbitmq related logic into the executor</li>\n<li>[enhancements] Base environment variables support on the mirakuru functionality itself</li>\n<li>[feature] Drop support for python 2.7. From now on, only support python 3.6 and up</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.1.2</h3>\n<ul>\n<li>[fix] Fix list queues functionality</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.1.1</h3>\n<ul>\n<li>[enhancemet] removed path.py dependency</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.1.0</h3>\n<ul>\n<li>[enhancements] adjust pytest-rabbitmq to pytest 3. require pytest 3.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.0.0</h3>\n<ul>\n<li>[enhancements] command line and pytest.ini options for modifying rabbitmq node name</li>\n<li>[enhancements] command line and pytest.ini options for modifying server exec path</li>\n<li>[enhancements] command line and pytest.ini options for modifying ctl exec path</li>\n<li>[enhancements] command line and pytest.ini options for modifying host</li>\n<li>[enhancements] command line and pytest.ini options for modifying port</li>\n<li>[enhancements] command line and pytest.ini options for modifying logs directory destination</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6653719, "releases": {"0.0.0": [], "1.0.0": [{"comment_text": "", "digests": {"md5": "a02dd8145197097b187ddaa9ea9c1aa2", "sha256": "c7ef238c272a775c881902b17a11a992bb3dd57f9ecfc922dfd34df7278c2daf"}, "downloads": -1, "filename": "pytest_rabbitmq-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a02dd8145197097b187ddaa9ea9c1aa2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14281, "upload_time": "2016-11-24T23:40:50", "upload_time_iso_8601": "2016-11-24T23:40:50.316602Z", "url": "https://files.pythonhosted.org/packages/6c/7a/c08ed99d2f61647f93b8223c7e35ec453c1841b719cac64002b8e58201f3/pytest_rabbitmq-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce826b4962285740111dd00388942620", "sha256": "a3be7fccbbfec73aab6169405d798ef80f1dd879dda6e09308f3588836be6318"}, "downloads": -1, "filename": "pytest-rabbitmq-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ce826b4962285740111dd00388942620", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9335, "upload_time": "2016-11-24T23:40:52", "upload_time_iso_8601": "2016-11-24T23:40:52.255363Z", "url": "https://files.pythonhosted.org/packages/41/18/4c8e81e51169971dc864177bd75b5a21e9a8c288dca56e999e8b5f5ce094/pytest-rabbitmq-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "97b4a194facba3136a701ae9ef7e396a", "sha256": "d970ad8b15eaa0bc271079c84083d63303cfa43c3d1294935a2f3b4314514bb1"}, "downloads": -1, "filename": "pytest_rabbitmq-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "97b4a194facba3136a701ae9ef7e396a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14343, "upload_time": "2016-11-25T13:47:52", "upload_time_iso_8601": "2016-11-25T13:47:52.005330Z", "url": "https://files.pythonhosted.org/packages/ee/13/88416d38b74f59374efdc57213d6d6c19c2f2772cc7729b99c41c1a30b26/pytest_rabbitmq-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f9f0fea405797a495e0d05b6b70c45a", "sha256": "827fdb2d8f432180a5e53afdce866da836c81cb38e58d715bc2d9331288f6077"}, "downloads": -1, "filename": "pytest-rabbitmq-1.1.0.tar.gz", "has_sig": false, "md5_digest": "9f9f0fea405797a495e0d05b6b70c45a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9376, "upload_time": "2016-11-25T13:47:54", "upload_time_iso_8601": "2016-11-25T13:47:54.124841Z", "url": "https://files.pythonhosted.org/packages/e8/8e/4eb4f572448f9cbf6bacdb35fa44876351c771ef6d596be75846021c119d/pytest-rabbitmq-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "1313d9cc8881c0ae942bb32220f113f8", "sha256": "7ab6581fd9dca574649180b2d8adb32a82b12fe66d278ff7ef4d45367b8cd759"}, "downloads": -1, "filename": "pytest_rabbitmq-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1313d9cc8881c0ae942bb32220f113f8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14400, "upload_time": "2017-04-17T22:23:55", "upload_time_iso_8601": "2017-04-17T22:23:55.696510Z", "url": "https://files.pythonhosted.org/packages/52/81/170d9f3024cfa358c98a07f377a3a7dae2e04951b0dc1f64137d8f3524b4/pytest_rabbitmq-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9e403e6f3b9292370af25e8e8cbf051", "sha256": "1b31ed4a2b78a4da1b9dd24eedecdb0aa094df586e86fa05c3c004a000fc6ed7"}, "downloads": -1, "filename": "pytest-rabbitmq-1.1.1.tar.gz", "has_sig": false, "md5_digest": "d9e403e6f3b9292370af25e8e8cbf051", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9751, "upload_time": "2017-04-17T22:23:57", "upload_time_iso_8601": "2017-04-17T22:23:57.565477Z", "url": "https://files.pythonhosted.org/packages/cc/42/54edeaed1e6ff166ab66c4725afa80fc1659b9e4727347ad6dd805db4a82/pytest-rabbitmq-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "4dd83a762a03957afc80267fd5b23851", "sha256": "cb432792ac5807e6e1091c0544608ec8552e90eec59a983d6a6ffbbea0b9df63"}, "downloads": -1, "filename": "pytest_rabbitmq-1.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4dd83a762a03957afc80267fd5b23851", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11756, "upload_time": "2018-08-10T13:16:07", "upload_time_iso_8601": "2018-08-10T13:16:07.078171Z", "url": "https://files.pythonhosted.org/packages/c0/ab/f4dec314e82b01afb22d61df8b37c8164ddce889255b43cf61a2a0a02b62/pytest_rabbitmq-1.1.2-py2.py3-none-any.whl", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "edcad1bac05b4c1edc77c5a00180fd7e", "sha256": "c88ebbc242b2fe6ce2167762de44da07091eca75ea610ebd99b92b6e66d36d09"}, "downloads": -1, "filename": "pytest_rabbitmq-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "edcad1bac05b4c1edc77c5a00180fd7e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27498, "upload_time": "2019-11-22T14:12:38", "upload_time_iso_8601": "2019-11-22T14:12:38.399238Z", "url": "https://files.pythonhosted.org/packages/36/d7/8eb605b9e7bbaba7fc3aaf8f5ce2e0ff45797d2c08fa3473d96e7f956cb3/pytest_rabbitmq-2.0.0-py3-none-any.whl", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "3d004a06757fc48f9147859f85c4c2db", "sha256": "a290e064cd21f68bc0974598d6bf9ef056ca44388e707574e8f740527a504c71"}, "downloads": -1, "filename": "pytest_rabbitmq-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3d004a06757fc48f9147859f85c4c2db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27550, "upload_time": "2020-02-18T14:47:03", "upload_time_iso_8601": "2020-02-18T14:47:03.970451Z", "url": "https://files.pythonhosted.org/packages/68/01/b8964dd6061b4e8cccfdfb40d2d9f7c652d3eaed49e33fd8007121eb20e7/pytest_rabbitmq-2.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3d004a06757fc48f9147859f85c4c2db", "sha256": "a290e064cd21f68bc0974598d6bf9ef056ca44388e707574e8f740527a504c71"}, "downloads": -1, "filename": "pytest_rabbitmq-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3d004a06757fc48f9147859f85c4c2db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27550, "upload_time": "2020-02-18T14:47:03", "upload_time_iso_8601": "2020-02-18T14:47:03.970451Z", "url": "https://files.pythonhosted.org/packages/68/01/b8964dd6061b4e8cccfdfb40d2d9f7c652d3eaed49e33fd8007121eb20e7/pytest_rabbitmq-2.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:54:48 2020"}