{"info": {"author": "LOGILAB S.A. (Paris, FRANCE)", "author_email": "contact@logilab.fr", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: CubicWeb", "Programming Language :: JavaScript", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Database", "Topic :: Scientific/Engineering :: GIS"], "description": "Summary\n-------\n\nAdd types and functions to work with geometric attributes that are stored in a\nPostgis database (that is a PostgreSQL database with Postgis extension\nenabled).\n\nThe present cube supports only version *2.0 and later* of Postgis.\n\nIt introduces one new type when defining attributes in the data model schema:\n\n* a ``Geometry`` type. Additionally, you should give the following elements\n  along with a `Geometry` attribute:\n\n  * ``geom_type``. The Postgis type of geometries that this attribute will\n    accept, for example ``POINT``, ``MULTILINESTRING`` or ``POLYGON``,\n\n  * ``srid``. The spatial reference system the geometry coordinates will live\n    in. This is an integer and a foreign key that must match the ``srid`` key\n    in the ``spatial_ref_sys`` table. Most of the time, it will be the same as\n    the spatial system EPSG code,\n\n  * ``coord_dimension``. The number of dimensions used by geometries. Defaults\n    to 2.\n\n* a ``Geography`` type (see the description_).\n\n.. _description: https://postgis.net/docs/using_postgis_dbmanagement.html#PostGIS_Geography\n\n\nThen you can also use geometric functions like ``ST_INTERSECTS``, ``ST_WITHIN``\nor ``ST_UNION`` to work with this new type.\n\nSee `Postgis manual`_ for reference documentation about Postgis.\n\n.. _Postgis manual: http://postgis.net/docs/\n\n\nExample\n-------\n\nIn ``schema.py``, one can declare a ``City`` entity like the following.\n\n.. code-block:: python\n\n    class City(EntityType):\n        name = String(required=True)\n        geometry = Geometry(geom_type='POLYGON', srid=4326)\n\nYou may then make queries like:\n\n.. code-block:: python\n\n   # get all cities in a given bounding box\n   rql('City C WHERE C geometry G HAVING(ST_WITHIN(G, ST_MAKEENVELOPE('\n       '%(left)s, %(bottom)s, %(right)s, %(top)s, 4326)) = TRUE)',\n\t   {'left': 2.2,\n\t   'right': 2.6,\n\t   'top': 49,\n\t   'bottom': 48})\n\n   # get all cities at a given distance from a point, sorted by distance\n   rql('Any C, ST_DISTANCE(G, ST_SETSRID(ST_MAKEPOINT(2.2, 48.4), 4326)) '\n       'ORDERBY 5 WHERE '\n\t   'C geometry G HAVING ('\n\t   ' ST_DWITHIN(G, ST_SETSRID(ST_MAKEPOINT(2.2, 48.4), 4326), 0.1) = TRUE)')", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.cubicweb.org/project/cubicweb-postgis", "keywords": "", "license": "LGPL", "maintainer": "", "maintainer_email": "", "name": "cubicweb-postgis", "package_url": "https://pypi.org/project/cubicweb-postgis/", "platform": "", "project_url": "https://pypi.org/project/cubicweb-postgis/", "project_urls": {"Homepage": "http://www.cubicweb.org/project/cubicweb-postgis"}, "release_url": "https://pypi.org/project/cubicweb-postgis/0.7.0/", "requires_dist": null, "requires_python": "", "summary": "Test for postgis", "version": "0.7.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"summary\">\n<h2>Summary</h2>\n<p>Add types and functions to work with geometric attributes that are stored in a\nPostgis database (that is a PostgreSQL database with Postgis extension\nenabled).</p>\n<p>The present cube supports only version <em>2.0 and later</em> of Postgis.</p>\n<p>It introduces one new type when defining attributes in the data model schema:</p>\n<ul>\n<li>a <tt>Geometry</tt> type. Additionally, you should give the following elements\nalong with a <cite>Geometry</cite> attribute:<ul>\n<li><tt>geom_type</tt>. The Postgis type of geometries that this attribute will\naccept, for example <tt>POINT</tt>, <tt>MULTILINESTRING</tt> or <tt>POLYGON</tt>,</li>\n<li><tt>srid</tt>. The spatial reference system the geometry coordinates will live\nin. This is an integer and a foreign key that must match the <tt>srid</tt> key\nin the <tt>spatial_ref_sys</tt> table. Most of the time, it will be the same as\nthe spatial system EPSG code,</li>\n<li><tt>coord_dimension</tt>. The number of dimensions used by geometries. Defaults\nto 2.</li>\n</ul>\n</li>\n<li>a <tt>Geography</tt> type (see the <a href=\"https://postgis.net/docs/using_postgis_dbmanagement.html#PostGIS_Geography\" rel=\"nofollow\">description</a>).</li>\n</ul>\n<p>Then you can also use geometric functions like <tt>ST_INTERSECTS</tt>, <tt>ST_WITHIN</tt>\nor <tt>ST_UNION</tt> to work with this new type.</p>\n<p>See <a href=\"http://postgis.net/docs/\" rel=\"nofollow\">Postgis manual</a> for reference documentation about Postgis.</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>In <tt>schema.py</tt>, one can declare a <tt>City</tt> entity like the following.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">City</span><span class=\"p\">(</span><span class=\"n\">EntityType</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">String</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">geometry</span> <span class=\"o\">=</span> <span class=\"n\">Geometry</span><span class=\"p\">(</span><span class=\"n\">geom_type</span><span class=\"o\">=</span><span class=\"s1\">'POLYGON'</span><span class=\"p\">,</span> <span class=\"n\">srid</span><span class=\"o\">=</span><span class=\"mi\">4326</span><span class=\"p\">)</span>\n</pre>\n<p>You may then make queries like:</p>\n<pre><span class=\"c1\"># get all cities in a given bounding box</span>\n<span class=\"n\">rql</span><span class=\"p\">(</span><span class=\"s1\">'City C WHERE C geometry G HAVING(ST_WITHIN(G, ST_MAKEENVELOPE('</span>\n    <span class=\"s1\">'</span><span class=\"si\">%(left)s</span><span class=\"s1\">, </span><span class=\"si\">%(bottom)s</span><span class=\"s1\">, </span><span class=\"si\">%(right)s</span><span class=\"s1\">, </span><span class=\"si\">%(top)s</span><span class=\"s1\">, 4326)) = TRUE)'</span><span class=\"p\">,</span>\n        <span class=\"p\">{</span><span class=\"s1\">'left'</span><span class=\"p\">:</span> <span class=\"mf\">2.2</span><span class=\"p\">,</span>\n        <span class=\"s1\">'right'</span><span class=\"p\">:</span> <span class=\"mf\">2.6</span><span class=\"p\">,</span>\n        <span class=\"s1\">'top'</span><span class=\"p\">:</span> <span class=\"mi\">49</span><span class=\"p\">,</span>\n        <span class=\"s1\">'bottom'</span><span class=\"p\">:</span> <span class=\"mi\">48</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># get all cities at a given distance from a point, sorted by distance</span>\n<span class=\"n\">rql</span><span class=\"p\">(</span><span class=\"s1\">'Any C, ST_DISTANCE(G, ST_SETSRID(ST_MAKEPOINT(2.2, 48.4), 4326)) '</span>\n    <span class=\"s1\">'ORDERBY 5 WHERE '</span>\n        <span class=\"s1\">'C geometry G HAVING ('</span>\n        <span class=\"s1\">' ST_DWITHIN(G, ST_SETSRID(ST_MAKEPOINT(2.2, 48.4), 4326), 0.1) = TRUE)'</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4850364, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "258bfef2abbd30c40bac56b85b8d8e9c", "sha256": "e84d415d65838880180133ca00b3cf2328f3051ed4ccb61940b1ff0ae6cac0d1"}, "downloads": -1, "filename": "cubicweb-postgis-0.2.0.tar.gz", "has_sig": false, "md5_digest": "258bfef2abbd30c40bac56b85b8d8e9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7426, "upload_time": "2013-12-20T12:57:04", "upload_time_iso_8601": "2013-12-20T12:57:04.252195Z", "url": "https://files.pythonhosted.org/packages/cc/77/4b7d4b2491834c15015c24d33ab7844d416e5c7c6d70a3e964440c8ea423/cubicweb-postgis-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "999c5f240a6a5bbf9a82f446fecbf6c6", "sha256": "450e010474be54387cb080c8a0ba421db467aacc350d3f17efa708386671ac58"}, "downloads": -1, "filename": "cubicweb-postgis-0.3.0.tar.gz", "has_sig": false, "md5_digest": "999c5f240a6a5bbf9a82f446fecbf6c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8033, "upload_time": "2014-11-04T13:32:58", "upload_time_iso_8601": "2014-11-04T13:32:58.564304Z", "url": "https://files.pythonhosted.org/packages/68/e1/0079a67a78c481fb142ad607d9da9dd3d4d93f2df3ca2dde6d930fd25f1f/cubicweb-postgis-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "e2308be529b417e07ada5d5cc06fe478", "sha256": "2889c3a192b32ac7f4e1824a805d921d0f4fc83a978f261c87ecde697ac607d8"}, "downloads": -1, "filename": "cubicweb-postgis-0.3.1.tar.gz", "has_sig": false, "md5_digest": "e2308be529b417e07ada5d5cc06fe478", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8110, "upload_time": "2015-03-24T09:54:36", "upload_time_iso_8601": "2015-03-24T09:54:36.630412Z", "url": "https://files.pythonhosted.org/packages/f2/ba/26c0ead3aae74c15bd4608850671d6547738c298cdab4455d60de39dfa96/cubicweb-postgis-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "006f30c880529fcef1dc535f51561ddf", "sha256": "c675fc79e2516d7ead32a589320f7f7c892e349e28b29d26f019092c0e79a6b3"}, "downloads": -1, "filename": "cubicweb-postgis-0.4.0.tar.gz", "has_sig": false, "md5_digest": "006f30c880529fcef1dc535f51561ddf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8326, "upload_time": "2016-01-18T11:08:25", "upload_time_iso_8601": "2016-01-18T11:08:25.978969Z", "url": "https://files.pythonhosted.org/packages/20/8f/03e1d41d3dd69952a75d496c36fd245e1b5dbb2a5eecb3a2d77a2af45661/cubicweb-postgis-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "de2ab78d54f2abfe8641d63016d47ff9", "sha256": "76a742ad10030f74e119eb01f4cca1bfaaa12c1ba2140eebf9f740827f71d6fb"}, "downloads": -1, "filename": "cubicweb-postgis-0.5.0.tar.gz", "has_sig": false, "md5_digest": "de2ab78d54f2abfe8641d63016d47ff9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8677, "upload_time": "2016-03-22T16:09:49", "upload_time_iso_8601": "2016-03-22T16:09:49.727732Z", "url": "https://files.pythonhosted.org/packages/7e/25/47e5cfd0af48541f0cd166361cd2417d055d81c33f51a2231ec4f912ac87/cubicweb-postgis-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "e2c50e4ce411b10ef0c42d71e0d5b214", "sha256": "a66064f6535529eab7bdaab94416bc135832d5abe3d17c22b8cc73c7dcb03c44"}, "downloads": -1, "filename": "cubicweb-postgis-0.6.0.tar.gz", "has_sig": false, "md5_digest": "e2c50e4ce411b10ef0c42d71e0d5b214", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7491, "upload_time": "2017-09-28T13:57:22", "upload_time_iso_8601": "2017-09-28T13:57:22.446520Z", "url": "https://files.pythonhosted.org/packages/82/5b/ae50702f5acd85d73a4c40bbb5732cd4edf015ee70c5e8e6c883ae2d430b/cubicweb-postgis-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "b6ff320dbdc997c89d375ca24327c37d", "sha256": "2f03ab5e053d9a3764595a83fc0c7242b01120f08ce435a811d76576126e74f2"}, "downloads": -1, "filename": "cubicweb-postgis-0.7.0.tar.gz", "has_sig": false, "md5_digest": "b6ff320dbdc997c89d375ca24327c37d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11783, "upload_time": "2019-02-21T14:31:33", "upload_time_iso_8601": "2019-02-21T14:31:33.666952Z", "url": "https://files.pythonhosted.org/packages/a2/f7/84f3fe0f5e628d7a81814a9e3e208f9fa25daa8dd6aa3058bd3860a4ab79/cubicweb-postgis-0.7.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b6ff320dbdc997c89d375ca24327c37d", "sha256": "2f03ab5e053d9a3764595a83fc0c7242b01120f08ce435a811d76576126e74f2"}, "downloads": -1, "filename": "cubicweb-postgis-0.7.0.tar.gz", "has_sig": false, "md5_digest": "b6ff320dbdc997c89d375ca24327c37d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11783, "upload_time": "2019-02-21T14:31:33", "upload_time_iso_8601": "2019-02-21T14:31:33.666952Z", "url": "https://files.pythonhosted.org/packages/a2/f7/84f3fe0f5e628d7a81814a9e3e208f9fa25daa8dd6aa3058bd3860a4ab79/cubicweb-postgis-0.7.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:28 2020"}