{"info": {"author": "Schuyler Duveen", "author_email": "sky.duveen@moveon.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Natural Language :: English", "Operating System :: OS Independent", "Topic :: Internet :: WWW/HTTP"], "description": "ActionKit Template Renderer\n===========================\n\n### What this is\n\nIf you use [ActionKit](http://actionkit.com/) and edit its templates, then you might want to see what they look like\nlocally.  If you install this (`pip install actionkit-templates`) then you can run\n\n   aktemplates runserver\n\nYou can also run it on a different port than the default like so:\n\n   aktemplates runserver 0.0.0.0:1234\n\nin a directory where you have a set of ActionKit templates (`wrapper.html`, etc), then you can \nview them on from a local port.  This runs Django in a similar environment that ActionKit\nruns itself.\n\n\nEnvironment\n===========\n\nYou can set some environment variables that will help you develop locally (e.g. static file versions).\n\nThis is a 0.1 codebase, so things might change across versions -- probably limiting the full Django\nmanage.py context and to expose those things by commandline, instead.  In the meantime, you can\nlook at `actionkit_templates/settings.py` and search for `os.environ` for what it does.\n\nTEMPLATE_DIR\n: By default we search the local directory and a directory called template_set.  If you run:\n\n    TEMPLATE_DIR=actionkittemplates aktemplates runserver\n\n  it will also look in the directory `actionkittemplates/`\n\nSTATIC_ROOT\n: By default we serve the `./static/` directory at /static/  This goes well with code in your\n  wrapper.html template like this:\n```\n    {% if args.env == \"dev\" or devenv.enabled or 'devdevdev' in page.custom_fields.layout_options %}\n      <!-- development of stylesheets locally -->\n      <link href=\"/static/stylesheets/site.css\" rel=\"stylesheet\" />\n    {% else %}\n      <!-- production location of stylesheets -->\n      <link href=\"https://EXAMPLE.COM/static/stylesheets/site.css\" rel=\"stylesheet\" />\n    {% endif %}\n```\n\nSTATIC_FALLBACK\n: In the occasional moment when you are developing without an internet connection this will fail\n  to load:\n\n  ```\n  {% load_js %}\n  //ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\n  {% end %}\n  ```\n\n  In that situation, if you set STATIC_FALLBACK to a directory where, e.g. `jquery.min.js`\n  is present, then it will look for all the internet-external files in that directory.\n  Note that this only works with `load_js` and `load_css` template tags.\n\n\nContributing When You Run Into Something Not Covered\n====================================================\n\nTemplate Tags\n-------------\n\nUsually, these are easy to add here `actionkit_templates/templatetags/actionkit_tags.py`\nWe should aim for support of all these:\n  https://roboticdogs.actionkit.com/docs/manual/guide/customtags.html\n\nExtra contexts\n--------------\n\nIf you make a context that's not covered already, please contribute with a patch to\n`actionkit_templates/contexts/`  Note that these are also useful to browser, to see\nwhat variables you can access from a particular page context.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MoveOnOrg/actionkit-templates", "keywords": "python actionkit", "license": "GPL3", "maintainer": null, "maintainer_email": null, "name": "actionkit-templates", "package_url": "https://pypi.org/project/actionkit-templates/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/actionkit-templates/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/MoveOnOrg/actionkit-templates"}, "release_url": "https://pypi.org/project/actionkit-templates/0.1/", "requires_dist": null, "requires_python": null, "summary": "actionkit-templates allows you to view your ActionKit templates locally testing different configurations for each page type.  It also documents by-code many context variables for each page", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            ActionKit Template Renderer<br>===========================<br><br>### What this is<br><br>If you use [ActionKit](http://actionkit.com/) and edit its templates, then you might want to see what they look like<br>locally.  If you install this (`pip install actionkit-templates`) then you can run<br><br>   aktemplates runserver<br><br>You can also run it on a different port than the default like so:<br><br>   aktemplates runserver 0.0.0.0:1234<br><br>in a directory where you have a set of ActionKit templates (`wrapper.html`, etc), then you can <br>view them on from a local port.  This runs Django in a similar environment that ActionKit<br>runs itself.<br><br><br>Environment<br>===========<br><br>You can set some environment variables that will help you develop locally (e.g. static file versions).<br><br>This is a 0.1 codebase, so things might change across versions -- probably limiting the full Django<br>manage.py context and to expose those things by commandline, instead.  In the meantime, you can<br>look at `actionkit_templates/settings.py` and search for `os.environ` for what it does.<br><br>TEMPLATE_DIR<br>: By default we search the local directory and a directory called template_set.  If you run:<br><br>    TEMPLATE_DIR=actionkittemplates aktemplates runserver<br><br>  it will also look in the directory `actionkittemplates/`<br><br>STATIC_ROOT<br>: By default we serve the `./static/` directory at /static/  This goes well with code in your<br>  wrapper.html template like this:<br>```<br>    {% if args.env == \"dev\" or devenv.enabled or 'devdevdev' in page.custom_fields.layout_options %}<br>      &lt;!-- development of stylesheets locally --&gt;<br>      &lt;link href=\"/static/stylesheets/site.css\" rel=\"stylesheet\" /&gt;<br>    {% else %}<br>      &lt;!-- production location of stylesheets --&gt;<br>      &lt;link href=\"https://EXAMPLE.COM/static/stylesheets/site.css\" rel=\"stylesheet\" /&gt;<br>    {% endif %}<br>```<br><br>STATIC_FALLBACK<br>: In the occasional moment when you are developing without an internet connection this will fail<br>  to load:<br><br>  ```<br>  {% load_js %}<br>  //ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js<br>  {% end %}<br>  ```<br><br>  In that situation, if you set STATIC_FALLBACK to a directory where, e.g. `jquery.min.js`<br>  is present, then it will look for all the internet-external files in that directory.<br>  Note that this only works with `load_js` and `load_css` template tags.<br><br><br>Contributing When You Run Into Something Not Covered<br>====================================================<br><br>Template Tags<br>-------------<br><br>Usually, these are easy to add here `actionkit_templates/templatetags/actionkit_tags.py`<br>We should aim for support of all these:<br>  https://roboticdogs.actionkit.com/docs/manual/guide/customtags.html<br><br>Extra contexts<br>--------------<br><br>If you make a context that's not covered already, please contribute with a patch to<br>`actionkit_templates/contexts/`  Note that these are also useful to browser, to see<br>what variables you can access from a particular page context.\n          </div>"}, "last_serial": 2460513, "releases": {"0.1": []}, "urls": [], "timestamp": "Thu May  7 16:24:20 2020"}