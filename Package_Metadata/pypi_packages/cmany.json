{"info": {"author": "Joao Paulo Magalhaes", "author_email": "dev@jpmag.me", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: C", "Programming Language :: C++", "Programming Language :: Python :: 3", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Compilers", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "=========== ===========  ===============  ========================  ======================\n |pypi|      |license|    |readthedocs|    Linux + OS X: |travis|    Windows: |appveyor|\n=========== ===========  ===============  ========================  ======================\n\ncmany\n=====\n\nEasily batch-build cmake projects!\n\n`cmany <https://github.com/biojppm/cmany>`_ is a command line tool to easily\nbuild variations of a CMake C/C++ project.  It combines different compilers,\ncmake build types, bundles of compilation flags, processor architectures and\noperating systems. Each of these items can also have associated compilation\nflags.\n\nFor example, to configure and build a project combining clang++ and g++\nwith both Debug and Release::\n\n    $ cmany build -c clang++,g++ -t Debug,Release path/to/CMakeLists.txt\n\nThe command above will result in four different build trees, placed by default\nunder a ``build`` subdirectory in the current working directory::\n\n    $ ls build/*\n    build/linux-x86_64-clang++3.9-Debug\n    build/linux-x86_64-clang++3.9-Release\n    build/linux-x86_64-gcc++6.1-Debug\n    build/linux-x86_64-gcc++6.1-Release\n\nEach build tree is obtained by first configuring the project with the items\nin each combination, and then invoking ``cmake --build`` to build the project\nat once.\n\nYou can also use cmany just to simplify your cmake workflow! These two\ncommand sequences have the same effect (``b`` is an alias to ``build``):\n\n+-------------------------------+-------------------------------+\n| typical cmake                 | cmany                         |\n+===============================+===============================+\n| | ``$ mkdir build``           | | ``$ cmany b``               |\n| | ``$ cd build``              |                               |\n| | ``$ cmake ..``              |                               |\n| | ``$ cmake --build .``       |                               |\n+-------------------------------+-------------------------------+\n\nFeatures\n--------\n* Easily configures and builds many variations of your project with one\n  simple command.\n* Saves the tedious and error-prone work of dealing with many build trees by\n  hand.\n* Sensible defaults: ``cmany build`` will create and build a single project\n  using CMake's defaults.\n* Transparently pass flags (compiler flags, processor defines or cmake cache\n  variables) to any or all of the builds.\n* Useful for build comparison and benchmarking. You can easily setup bundles\n  of flags, aka variants.\n* Useful for validating and unit-testing your project with different\n  compilers and flags.\n* Useful for creating distributions of your project.\n* Avoids a full rebuild when the build type is changed. Although this feature\n  already exists in multi-configuration cmake generators like Visual Studio,\n  it is missing from mono-configuration generators like Unix Makefiles.\n* Runs arbitrary commands in every build tree or install tree.\n* Full control over how the build items are combined.\n* Emacs integration! `<https://github.com/biojppm/cmany.el>`_\n\nMore info\n---------\n* `Project home <https://github.com/biojppm/cmany>`_\n* `Installing <https://cmany.readthedocs.io/en/latest/installing/>`_\n* `Getting started <https://cmany.readthedocs.io/en/latest/quick_tour/>`_\n\nSupport\n-------\n* send bug reports to `<https://github.com/biojppm/cmany/issues>`_.\n* send pull requests to `<https://github.com/biojppm/cmany/pulls>`_.\n\nCurrent status\n--------------\ncmany is in alpha state, under current development.\n\nKnown issues\n^^^^^^^^^^^^\n\n* cmany invokes the compilers given to it to find their name and version. So\n  far, this successfully works with Visual Studio, gcc (also with arm-linux and\n  mips-linux counterparts), clang, icc and zapcc. However, the current\n  implementation for guessing the name and version is fragile and may fail in\n  some compilers which were not tested. Please submit a bug or PR if you\n  see such a failure.\n* Though cmany works in OS X with gcc and clang, using Xcode has not been\n  tested at all. Get in touch if you are interested in getting cmany to work\n  with Xcode.\n* Pure C projects (ie not C++) should work but have not yet been tested. Some\n  bugs may be present.\n\nLicense\n-------\ncmany is permissively licensed under the `MIT license`_.\n\n.. _MIT license: LICENSE.txt\n\n.. |pypi| image:: https://img.shields.io/pypi/v/cmany.svg\n      :alt: Version\n      :target: https://pypi.python.org/pypi/cmany/\n.. |license| image:: https://img.shields.io/badge/License-MIT-green.svg\n   :alt: License: MIT\n   :target: https://github.com/biojppm/cmany/blob/master/LICENSE.txt\n.. |travis| image:: https://travis-ci.org/biojppm/cmany.svg?branch=master\n    :alt: Linux+OSX build status\n    :target: https://travis-ci.org/biojppm/cmany\n.. |appveyor| image:: https://ci.appveyor.com/api/projects/status/github/biojppm/cmany?branch=master&svg=true\n    :alt: Windows build status\n    :target: https://ci.appveyor.com/project/biojppm/cmany\n.. |readthedocs| image:: https://readthedocs.org/projects/docs/badge/?version=latest\n    :alt: Documentation status\n    :target: https://cmany.readthedocs.io/\n\nCopyright (c) 2016, Joao Paulo Magalhaes <dev@jpmag.me>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/biojppm/cmany", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/biojppm/cmany", "keywords": "cmake,c++,c", "license": "License :: OSI Approved :: MIT License", "maintainer": "", "maintainer_email": "", "name": "cmany", "package_url": "https://pypi.org/project/cmany/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cmany/", "project_urls": {"Download": "https://github.com/biojppm/cmany", "Homepage": "https://github.com/biojppm/cmany"}, "release_url": "https://pypi.org/project/cmany/0.1.2/", "requires_dist": ["argcomplete", "colorama", "ruamel.yaml (>=0.15.0)"], "requires_python": "", "summary": "CMake build tree batching tool", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td><a href=\"https://pypi.python.org/pypi/cmany/\" rel=\"nofollow\"><img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/03b08701bb46bd74ed36cace086c4dc2d1c4916a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636d616e792e737667\"></a></td>\n<td><a href=\"https://github.com/biojppm/cmany/blob/master/LICENSE.txt\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5aab1d039acf22567ba072834df6bce204ac48ad/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d677265656e2e737667\"></a></td>\n<td><a href=\"https://cmany.readthedocs.io/\" rel=\"nofollow\"><img alt=\"Documentation status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4c897f7f94eaa2fe0954c5ac7bbea063de95f039/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f646f63732f62616467652f3f76657273696f6e3d6c6174657374\"></a></td>\n<td>Linux + OS X: <a href=\"https://travis-ci.org/biojppm/cmany\" rel=\"nofollow\"><img alt=\"Linux+OSX build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9defef31ea355f399f03a49866b329866e18a776/68747470733a2f2f7472617669732d63692e6f72672f62696f6a70706d2f636d616e792e7376673f6272616e63683d6d6173746572\"></a></td>\n<td>Windows: <a href=\"https://ci.appveyor.com/project/biojppm/cmany\" rel=\"nofollow\"><img alt=\"Windows build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/028575f11186aeaf74362ac8f6a5f25f3c6c9aec/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f62696f6a70706d2f636d616e793f6272616e63683d6d6173746572267376673d74727565\"></a></td>\n</tr>\n</tbody>\n</table>\n<div id=\"cmany\">\n<h2>cmany</h2>\n<p>Easily batch-build cmake projects!</p>\n<p><a href=\"https://github.com/biojppm/cmany\" rel=\"nofollow\">cmany</a> is a command line tool to easily\nbuild variations of a CMake C/C++ project.  It combines different compilers,\ncmake build types, bundles of compilation flags, processor architectures and\noperating systems. Each of these items can also have associated compilation\nflags.</p>\n<p>For example, to configure and build a project combining clang++ and g++\nwith both Debug and Release:</p>\n<pre>$ cmany build -c clang++,g++ -t Debug,Release path/to/CMakeLists.txt\n</pre>\n<p>The command above will result in four different build trees, placed by default\nunder a <tt>build</tt> subdirectory in the current working directory:</p>\n<pre>$ ls build/*\nbuild/linux-x86_64-clang++3.9-Debug\nbuild/linux-x86_64-clang++3.9-Release\nbuild/linux-x86_64-gcc++6.1-Debug\nbuild/linux-x86_64-gcc++6.1-Release\n</pre>\n<p>Each build tree is obtained by first configuring the project with the items\nin each combination, and then invoking <tt>cmake <span class=\"pre\">--build</span></tt> to build the project\nat once.</p>\n<p>You can also use cmany just to simplify your cmake workflow! These two\ncommand sequences have the same effect (<tt>b</tt> is an alias to <tt>build</tt>):</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>typical cmake</th>\n<th>cmany</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><div>\n<div><tt>$ mkdir build</tt></div>\n<div><tt>$ cd build</tt></div>\n<div><tt>$ cmake ..</tt></div>\n<div><tt>$ cmake <span class=\"pre\">--build</span> .</tt></div>\n</div>\n</td>\n<td><div>\n<div><tt>$ cmany b</tt></div>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Easily configures and builds many variations of your project with one\nsimple command.</li>\n<li>Saves the tedious and error-prone work of dealing with many build trees by\nhand.</li>\n<li>Sensible defaults: <tt>cmany build</tt> will create and build a single project\nusing CMake\u2019s defaults.</li>\n<li>Transparently pass flags (compiler flags, processor defines or cmake cache\nvariables) to any or all of the builds.</li>\n<li>Useful for build comparison and benchmarking. You can easily setup bundles\nof flags, aka variants.</li>\n<li>Useful for validating and unit-testing your project with different\ncompilers and flags.</li>\n<li>Useful for creating distributions of your project.</li>\n<li>Avoids a full rebuild when the build type is changed. Although this feature\nalready exists in multi-configuration cmake generators like Visual Studio,\nit is missing from mono-configuration generators like Unix Makefiles.</li>\n<li>Runs arbitrary commands in every build tree or install tree.</li>\n<li>Full control over how the build items are combined.</li>\n<li>Emacs integration! <a href=\"https://github.com/biojppm/cmany.el\" rel=\"nofollow\">https://github.com/biojppm/cmany.el</a></li>\n</ul>\n</div>\n<div id=\"more-info\">\n<h3>More info</h3>\n<ul>\n<li><a href=\"https://github.com/biojppm/cmany\" rel=\"nofollow\">Project home</a></li>\n<li><a href=\"https://cmany.readthedocs.io/en/latest/installing/\" rel=\"nofollow\">Installing</a></li>\n<li><a href=\"https://cmany.readthedocs.io/en/latest/quick_tour/\" rel=\"nofollow\">Getting started</a></li>\n</ul>\n</div>\n<div id=\"support\">\n<h3>Support</h3>\n<ul>\n<li>send bug reports to <a href=\"https://github.com/biojppm/cmany/issues\" rel=\"nofollow\">https://github.com/biojppm/cmany/issues</a>.</li>\n<li>send pull requests to <a href=\"https://github.com/biojppm/cmany/pulls\" rel=\"nofollow\">https://github.com/biojppm/cmany/pulls</a>.</li>\n</ul>\n</div>\n<div id=\"current-status\">\n<h3>Current status</h3>\n<p>cmany is in alpha state, under current development.</p>\n<div id=\"known-issues\">\n<h4>Known issues</h4>\n<ul>\n<li>cmany invokes the compilers given to it to find their name and version. So\nfar, this successfully works with Visual Studio, gcc (also with arm-linux and\nmips-linux counterparts), clang, icc and zapcc. However, the current\nimplementation for guessing the name and version is fragile and may fail in\nsome compilers which were not tested. Please submit a bug or PR if you\nsee such a failure.</li>\n<li>Though cmany works in OS X with gcc and clang, using Xcode has not been\ntested at all. Get in touch if you are interested in getting cmany to work\nwith Xcode.</li>\n<li>Pure C projects (ie not C++) should work but have not yet been tested. Some\nbugs may be present.</li>\n</ul>\n</div>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>cmany is permissively licensed under the <a href=\"LICENSE.txt\" rel=\"nofollow\">MIT license</a>.</p>\n<p>Copyright (c) 2016, Joao Paulo Magalhaes &lt;<a href=\"mailto:dev%40jpmag.me\">dev<span>@</span>jpmag<span>.</span>me</a>&gt;</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the \u201cSoftware\u201d),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2934021, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "018742f9b02fd769493f878ec341303b", "sha256": "8e7e3779155d5491a0a6a16a579bdafa342148761b7d7fa80f3ef03f16786647"}, "downloads": -1, "filename": "cmany-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "018742f9b02fd769493f878ec341303b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 82455, "upload_time": "2017-05-11T23:13:30", "upload_time_iso_8601": "2017-05-11T23:13:30.471186Z", "url": "https://files.pythonhosted.org/packages/17/cb/a06d3de0ff1bbdc0da20c256340882222050624a8003ab0eaa62808ef258/cmany-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.0.post0": [{"comment_text": "", "digests": {"md5": "6a4651900347b4585cba4d78391e7c7f", "sha256": "44499129b9479691da123285477f49d900a1282b065695781ebfabf52e58d18f"}, "downloads": -1, "filename": "cmany-0.1.0.post0-py3-none-any.whl", "has_sig": false, "md5_digest": "6a4651900347b4585cba4d78391e7c7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 82579, "upload_time": "2017-05-11T23:14:48", "upload_time_iso_8601": "2017-05-11T23:14:48.698739Z", "url": "https://files.pythonhosted.org/packages/50/c8/91f4bb55131646fb602abeb196c57dfabe5133b8b210db22a773e192371e/cmany-0.1.0.post0-py3-none-any.whl", "yanked": false}], "0.1.0.post1": [{"comment_text": "", "digests": {"md5": "17b292d8ec351e4cb5b2f6d79341da78", "sha256": "9605e5cb6962ceab8e850af93ed268368517d56dbe7775634d417e5359dc334a"}, "downloads": -1, "filename": "cmany-0.1.0.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "17b292d8ec351e4cb5b2f6d79341da78", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 82580, "upload_time": "2017-05-11T23:16:19", "upload_time_iso_8601": "2017-05-11T23:16:19.756732Z", "url": "https://files.pythonhosted.org/packages/2b/04/83849d5a24a5b09b29b2e3a65d32ee34aaac1870d8ed444e8573fb63b9ae/cmany-0.1.0.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce56322667f4e72f7dc1d58f80c1e6c8", "sha256": "fc40dd3691a79369702aa299e143fefacbda43c60ec12ef5205d66e4a82a0d23"}, "downloads": -1, "filename": "cmany-0.1.0.post1.tar.gz", "has_sig": false, "md5_digest": "ce56322667f4e72f7dc1d58f80c1e6c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58519, "upload_time": "2017-05-11T23:16:22", "upload_time_iso_8601": "2017-05-11T23:16:22.495589Z", "url": "https://files.pythonhosted.org/packages/23/86/4d3ca6079a54616922799d32d0ca5cf5439a11c0a0515bdd5e7d24d8ef97/cmany-0.1.0.post1.tar.gz", "yanked": false}], "0.1.0.post2": [{"comment_text": "", "digests": {"md5": "e7be81827331fe47a9e8e6904efd120e", "sha256": "d027565a5af9e6601c14845209251d26f6b19fdaff6aef0772fff66b53cabb71"}, "downloads": -1, "filename": "cmany-0.1.0.post2-py3-none-any.whl", "has_sig": false, "md5_digest": "e7be81827331fe47a9e8e6904efd120e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 84104, "upload_time": "2017-06-05T21:08:06", "upload_time_iso_8601": "2017-06-05T21:08:06.236378Z", "url": "https://files.pythonhosted.org/packages/0b/dc/4447fd68058c6ffed3299d730e23063930005597922a81c3e21733511783/cmany-0.1.0.post2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df2e904b50cda5215cce2d4c9c37f3f4", "sha256": "fbf59bf8274e294259ff490367818a9727da46c435f46e6f51d3d2190efb426b"}, "downloads": -1, "filename": "cmany-0.1.0.post2.tar.gz", "has_sig": false, "md5_digest": "df2e904b50cda5215cce2d4c9c37f3f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59391, "upload_time": "2017-06-05T19:05:29", "upload_time_iso_8601": "2017-06-05T19:05:29.948421Z", "url": "https://files.pythonhosted.org/packages/0c/f6/175e6fa2ea0b1b7833ae4a7f2023df3641c50fa297d373eeda78e0dc13b3/cmany-0.1.0.post2.tar.gz", "yanked": false}], "0.1.0.post4": [], "0.1.0.post5": [{"comment_text": "", "digests": {"md5": "fca15765b625d4b3ad779229c67aa9a2", "sha256": "cadbdb5f7510a83437e238163624eb0ea40530a8b77efbe5dc07cfa1bbfddc2f"}, "downloads": -1, "filename": "cmany-0.1.0.post5-py3-none-any.whl", "has_sig": false, "md5_digest": "fca15765b625d4b3ad779229c67aa9a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 84238, "upload_time": "2017-06-06T08:11:42", "upload_time_iso_8601": "2017-06-06T08:11:42.554165Z", "url": "https://files.pythonhosted.org/packages/b4/e5/612e4955839a95dd2315ff8b59a1a19c9f9257c92abe2160b055255917d5/cmany-0.1.0.post5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8a63c8ad89015b33f8175c9054a16cd", "sha256": "136bfc583fdea37c3e466303bcd8661e86801fe28c53f66aad056b34c03b4a89"}, "downloads": -1, "filename": "cmany-0.1.0.post5.tar.gz", "has_sig": false, "md5_digest": "b8a63c8ad89015b33f8175c9054a16cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59181, "upload_time": "2017-06-06T08:11:44", "upload_time_iso_8601": "2017-06-06T08:11:44.943543Z", "url": "https://files.pythonhosted.org/packages/1d/33/030cc2e368d3522c6d2c0ed41d52561b112e7fea3d4174ef3a477d1e7204/cmany-0.1.0.post5.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "2326b5f1828c737bdd84b216be229f53", "sha256": "7ed22200fdda2df4284882175fadc5397f50382fe1271cca051c53a0baf04449"}, "downloads": -1, "filename": "cmany-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2326b5f1828c737bdd84b216be229f53", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 84404, "upload_time": "2017-06-07T07:39:40", "upload_time_iso_8601": "2017-06-07T07:39:40.379093Z", "url": "https://files.pythonhosted.org/packages/5f/16/25db95f8f444baa4a2abacea94544d44309a0a9daa96b02e554b7776cf14/cmany-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "268027ed198ff5cecec3cc20d39101a6", "sha256": "5f9ad50efff0ccec0a00a1690657051f9d3fda327daeb55535a45d1c6c125207"}, "downloads": -1, "filename": "cmany-0.1.1.tar.gz", "has_sig": false, "md5_digest": "268027ed198ff5cecec3cc20d39101a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59747, "upload_time": "2017-06-07T07:39:42", "upload_time_iso_8601": "2017-06-07T07:39:42.991737Z", "url": "https://files.pythonhosted.org/packages/7b/d6/dc9ee2fd5ecb24ab5dc34847ed5bf73784e5bdf89da2cb641d1ec5260c0b/cmany-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "e6f857abbdcefedf743e5e493b6d59fb", "sha256": "5db84eca42fa71caa5ee8d31a370001e5be2a7015b9e55c2c7075b64557e1d7c"}, "downloads": -1, "filename": "cmany-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e6f857abbdcefedf743e5e493b6d59fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 83634, "upload_time": "2017-06-08T00:05:46", "upload_time_iso_8601": "2017-06-08T00:05:46.159766Z", "url": "https://files.pythonhosted.org/packages/b6/fa/ac9fcbb94ea31cdc7eb9abf40302c9eec3d1f7d8f2eb5649e29aa99e23ab/cmany-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4052a11c9a8baae3fc7bfef9cfa02faa", "sha256": "11c30bcee88987ddc0611673577418da2b184ce9b1a6eff4a8cf9a366736da2f"}, "downloads": -1, "filename": "cmany-0.1.2.tar.gz", "has_sig": false, "md5_digest": "4052a11c9a8baae3fc7bfef9cfa02faa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59926, "upload_time": "2017-06-08T00:05:48", "upload_time_iso_8601": "2017-06-08T00:05:48.716960Z", "url": "https://files.pythonhosted.org/packages/fb/3f/b482d4c38d369cac42d03ef3f84c2c1e5eac2078aed2da300c4e4c076e22/cmany-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e6f857abbdcefedf743e5e493b6d59fb", "sha256": "5db84eca42fa71caa5ee8d31a370001e5be2a7015b9e55c2c7075b64557e1d7c"}, "downloads": -1, "filename": "cmany-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e6f857abbdcefedf743e5e493b6d59fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 83634, "upload_time": "2017-06-08T00:05:46", "upload_time_iso_8601": "2017-06-08T00:05:46.159766Z", "url": "https://files.pythonhosted.org/packages/b6/fa/ac9fcbb94ea31cdc7eb9abf40302c9eec3d1f7d8f2eb5649e29aa99e23ab/cmany-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4052a11c9a8baae3fc7bfef9cfa02faa", "sha256": "11c30bcee88987ddc0611673577418da2b184ce9b1a6eff4a8cf9a366736da2f"}, "downloads": -1, "filename": "cmany-0.1.2.tar.gz", "has_sig": false, "md5_digest": "4052a11c9a8baae3fc7bfef9cfa02faa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59926, "upload_time": "2017-06-08T00:05:48", "upload_time_iso_8601": "2017-06-08T00:05:48.716960Z", "url": "https://files.pythonhosted.org/packages/fb/3f/b482d4c38d369cac42d03ef3f84c2c1e5eac2078aed2da300c4e4c076e22/cmany-0.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:37 2020"}