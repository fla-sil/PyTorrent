{"info": {"author": "Daniele Esposti", "author_email": "daniele.esposti@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "[![Build Status](https://travis-ci.org/expobrain/json-schema-codegen.svg?branch=master)](https://travis-ci.org/expobrain/json-schema-codegen)\n\n# json-schema-codegen\n\nGenerate code from JSON schema files.\n\n# Table of contents\n\n- [Introduction](#introduction)\n- [Currently supported languages](#currently-supported-languages)\n- [Requirements](#requirements)\n- [Installation](#installation)\n- [Usage](#usage)\n- [Code generation](#code-generation)\n  - [Python2](#python-2)\n  - [Python3](#python-3)\n  - [Python3+Marshmallow](#python-3marshmallow)\n  - [JavaScript+Flow and Flow](#javascriptflow-and-flow)\n- [Contribute](#contribute)\n\n# Introduction\n\nThis is a command line tool to take a [json-schema](http://json-schema.org/) file and generate code automatically.\n\nFor instance this `json-schema` definition:\n\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Test\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": { \"type\": \"integer\" }\n  }\n}\n```\n\nwill generate this Python code:\n\n```python\nclass Test(object):\n    def __init__(self, data=None):\n        data = data or {}\n\n        self.id = data.get(\"id\")\n```\n\nor this JavaScript+Flow code:\n\n```javascript\nexport class Test {\n  id: ?number;\n\n  constructor(data: Object = {}) {\n    this.id = data.id;\n  }\n}\n```\n\nCurrently this tool generates code for Python and JavaScript with [Flow](https://flow.org/) annotations but it can be extended to generate code for any language.\n\nThe code generation is divided in two stages:\n\n1.  generate the [AST](https://en.wikipedia.org/wiki/Abstract_syntax_tree) for the target language from the `json-schema` file\n1.  convert the AST into the target language\n\nThis allows the tool to be language agnostic, that is it just needs to generate the AST in JSON format for the target language and then a language specific tool will convert this AST into proper code.\n\n# Currently supported languages\n\nList of currently supported languages:\n\n- Python 2.7+\n- JavaScript ES7+ with Flow annotations\n- pure Flow annotations\n\n# Requirements\n\n- Python 3.x\n- Node v8.4+\n\n# Installation\n\nUntil this [pull request](https://github.com/pypa/setuptools/pull/1389) in [`setuptools`](https://pypi.org/project/setuptools/) is fixed, the only way to install `json-schema-codegen` is to clone the repo:\n\n```shell\ngit clone https://github.com/expobrain/json-schema-codegen.git\n```\n\n# Usage\n\n```shell\nusage: json_codegen.py [-h] [--prefix PREFIX] [--language LANGUAGE]\n                       [--output OUTPUT]\n                       schema\n\npositional arguments:\n  schema                Definition of the PRD as JSON schema\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --prefix PREFIX, -p PREFIX\n                        Optional prefix for generated classes\n  --language LANGUAGE, -l LANGUAGE\n                        Output language. Default is python\n  --output OUTPUT, -o OUTPUT\n                        Output filename for the generated code\n```\n\n# Code generation\n\n## Python 2\n\nThe generation of Python's code is integrated into the tool so it needs just a single invocation:\n\n```shell\njson_codegen --language python --output <output_py_file> <json-schema>\n```\n\n## Python 3\n\nThe egenerator of pure Python 3 compatible code:\n\n```shell\njson_codegen --language python3 --output <output_py_file> <json-schema>\n```\n\n## Python 3+Marshmallow\n\nThe generation of Python 3's code with [Marshmallow](https://marshmallow.readthedocs.io/en/2.x-line/) support is integrated into the tool so it needs just a single invocation:\n\n```shell\njson_codegen --language python3+marshmallow --output <output_py_file> <json-schema>\n```\n\n## JavaScript+Flow and Flow\n\nGenerating JavaScript+Flow and Flow code involves two steps, generating the AST:\n\n```shell\njson_codegen --language [javascript+flow|flow] --output <output_ast_json> <json-schema>\n```\n\nand generating the code from the AST:\n\n```shell\nbin/ast_to_js <output_ast_json> <output_js_file>\n```\n\n# Contribute\n\nClone the repository, install packages and setup git hooks:\n\n```shell\ngit clone https://github.com/expobrain/json-schema-codegen\npip install -r requirements_dev.txt\nyarn install\ngit config core.hooksPath .githooks\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/expobrain/json-schema-codegen", "keywords": "python javascript json-schema codegen", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "json-codegen", "package_url": "https://pypi.org/project/json-codegen/", "platform": "", "project_url": "https://pypi.org/project/json-codegen/", "project_urls": {"Homepage": "https://github.com/expobrain/json-schema-codegen"}, "release_url": "https://pypi.org/project/json-codegen/0.4.5/", "requires_dist": ["astor (>=0.7.1)", "setuptools (>=40.1.0)"], "requires_python": ">=3", "summary": "", "version": "0.4.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/expobrain/json-schema-codegen\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86e1853b0a3ee2c861a7c8c07535464136ca1bc7/68747470733a2f2f7472617669732d63692e6f72672f6578706f627261696e2f6a736f6e2d736368656d612d636f646567656e2e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>json-schema-codegen</h1>\n<p>Generate code from JSON schema files.</p>\n<h1>Table of contents</h1>\n<ul>\n<li><a href=\"#introduction\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#currently-supported-languages\" rel=\"nofollow\">Currently supported languages</a></li>\n<li><a href=\"#requirements\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#code-generation\" rel=\"nofollow\">Code generation</a>\n<ul>\n<li><a href=\"#python-2\" rel=\"nofollow\">Python2</a></li>\n<li><a href=\"#python-3\" rel=\"nofollow\">Python3</a></li>\n<li><a href=\"#python-3marshmallow\" rel=\"nofollow\">Python3+Marshmallow</a></li>\n<li><a href=\"#javascriptflow-and-flow\" rel=\"nofollow\">JavaScript+Flow and Flow</a></li>\n</ul>\n</li>\n<li><a href=\"#contribute\" rel=\"nofollow\">Contribute</a></li>\n</ul>\n<h1>Introduction</h1>\n<p>This is a command line tool to take a <a href=\"http://json-schema.org/\" rel=\"nofollow\">json-schema</a> file and generate code automatically.</p>\n<p>For instance this <code>json-schema</code> definition:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"$schema\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://json-schema.org/draft-04/schema#\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Test\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"integer\"</span> <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>will generate this Python code:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Test</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">data</span> <span class=\"ow\">or</span> <span class=\"p\">{}</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"id\"</span><span class=\"p\">)</span>\n</pre>\n<p>or this JavaScript+Flow code:</p>\n<pre><span class=\"kr\">export</span> <span class=\"kr\">class</span> <span class=\"nx\">Test</span> <span class=\"p\">{</span>\n  <span class=\"nx\">id</span><span class=\"o\">:</span> <span class=\"o\">?</span><span class=\"nx\">number</span><span class=\"p\">;</span>\n\n  <span class=\"nx\">constructor</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"o\">:</span> <span class=\"nb\">Object</span> <span class=\"o\">=</span> <span class=\"p\">{})</span> <span class=\"p\">{</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">id</span> <span class=\"o\">=</span> <span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Currently this tool generates code for Python and JavaScript with <a href=\"https://flow.org/\" rel=\"nofollow\">Flow</a> annotations but it can be extended to generate code for any language.</p>\n<p>The code generation is divided in two stages:</p>\n<ol>\n<li>generate the <a href=\"https://en.wikipedia.org/wiki/Abstract_syntax_tree\" rel=\"nofollow\">AST</a> for the target language from the <code>json-schema</code> file</li>\n<li>convert the AST into the target language</li>\n</ol>\n<p>This allows the tool to be language agnostic, that is it just needs to generate the AST in JSON format for the target language and then a language specific tool will convert this AST into proper code.</p>\n<h1>Currently supported languages</h1>\n<p>List of currently supported languages:</p>\n<ul>\n<li>Python 2.7+</li>\n<li>JavaScript ES7+ with Flow annotations</li>\n<li>pure Flow annotations</li>\n</ul>\n<h1>Requirements</h1>\n<ul>\n<li>Python 3.x</li>\n<li>Node v8.4+</li>\n</ul>\n<h1>Installation</h1>\n<p>Until this <a href=\"https://github.com/pypa/setuptools/pull/1389\" rel=\"nofollow\">pull request</a> in <a href=\"https://pypi.org/project/setuptools/\" rel=\"nofollow\"><code>setuptools</code></a> is fixed, the only way to install <code>json-schema-codegen</code> is to clone the repo:</p>\n<pre>git clone https://github.com/expobrain/json-schema-codegen.git\n</pre>\n<h1>Usage</h1>\n<pre>usage: json_codegen.py <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--prefix PREFIX<span class=\"o\">]</span> <span class=\"o\">[</span>--language LANGUAGE<span class=\"o\">]</span>\n                       <span class=\"o\">[</span>--output OUTPUT<span class=\"o\">]</span>\n                       schema\n\npositional arguments:\n  schema                Definition of the PRD as JSON schema\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --prefix PREFIX, -p PREFIX\n                        Optional prefix <span class=\"k\">for</span> generated classes\n  --language LANGUAGE, -l LANGUAGE\n                        Output language. Default is python\n  --output OUTPUT, -o OUTPUT\n                        Output filename <span class=\"k\">for</span> the generated code\n</pre>\n<h1>Code generation</h1>\n<h2>Python 2</h2>\n<p>The generation of Python's code is integrated into the tool so it needs just a single invocation:</p>\n<pre>json_codegen --language python --output &lt;output_py_file&gt; &lt;json-schema&gt;\n</pre>\n<h2>Python 3</h2>\n<p>The egenerator of pure Python 3 compatible code:</p>\n<pre>json_codegen --language python3 --output &lt;output_py_file&gt; &lt;json-schema&gt;\n</pre>\n<h2>Python 3+Marshmallow</h2>\n<p>The generation of Python 3's code with <a href=\"https://marshmallow.readthedocs.io/en/2.x-line/\" rel=\"nofollow\">Marshmallow</a> support is integrated into the tool so it needs just a single invocation:</p>\n<pre>json_codegen --language python3+marshmallow --output &lt;output_py_file&gt; &lt;json-schema&gt;\n</pre>\n<h2>JavaScript+Flow and Flow</h2>\n<p>Generating JavaScript+Flow and Flow code involves two steps, generating the AST:</p>\n<pre>json_codegen --language <span class=\"o\">[</span>javascript+flow<span class=\"p\">|</span>flow<span class=\"o\">]</span> --output &lt;output_ast_json&gt; &lt;json-schema&gt;\n</pre>\n<p>and generating the code from the AST:</p>\n<pre>bin/ast_to_js &lt;output_ast_json&gt; &lt;output_js_file&gt;\n</pre>\n<h1>Contribute</h1>\n<p>Clone the repository, install packages and setup git hooks:</p>\n<pre>git clone https://github.com/expobrain/json-schema-codegen\npip install -r requirements_dev.txt\nyarn install\ngit config core.hooksPath .githooks\n</pre>\n\n          </div>"}, "last_serial": 4930028, "releases": {"0.3.1": [{"comment_text": "", "digests": {"md5": "687cfd033e68baea5be7dbd296f5a9ea", "sha256": "6482a2f45ea617025262237faff2a4ec00a7ce4977f4a41dee5c2a3bc6343607"}, "downloads": -1, "filename": "json_codegen-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "687cfd033e68baea5be7dbd296f5a9ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 149012, "upload_time": "2019-03-01T12:13:20", "upload_time_iso_8601": "2019-03-01T12:13:20.058894Z", "url": "https://files.pythonhosted.org/packages/e6/55/ae382c8aab4021a89aaaa5406ab3a1aaf31278a4b538ad2e452a398ea024/json_codegen-0.3.1-py3-none-any.whl", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "cc55b8feb6f8e1c851bb076eb827a878", "sha256": "6d58b53e68178f3fcf1124fc819a71743d69d5407ab9bfd8572ec7fd18c759ea"}, "downloads": -1, "filename": "json_codegen-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cc55b8feb6f8e1c851bb076eb827a878", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 149719, "upload_time": "2019-03-04T21:55:34", "upload_time_iso_8601": "2019-03-04T21:55:34.320906Z", "url": "https://files.pythonhosted.org/packages/79/e1/401c4d56b86d87b0799f0b49c8a0101acf2f3f6fa50fcdec8d54b98b9e3f/json_codegen-0.4.0-py3-none-any.whl", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "b34e82f9b179fac7a002bc51ec57850f", "sha256": "d297398ae091d1860b3e291ed82a80f6db248937e1645d3822012d3267b53560"}, "downloads": -1, "filename": "json_codegen-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b34e82f9b179fac7a002bc51ec57850f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 139374, "upload_time": "2019-03-05T00:57:59", "upload_time_iso_8601": "2019-03-05T00:57:59.146127Z", "url": "https://files.pythonhosted.org/packages/1a/89/d5a7acc7dc545f60bd62a0fb0fb41bb6ad6fc3666205a1c919d9721d1541/json_codegen-0.4.1-py3-none-any.whl", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "b76e8a4fd94de14720c7165fbbe934aa", "sha256": "690cb23510546ce8ca21251dae050dba1bd7962201fde9ee31b28d0cecb5d2a3"}, "downloads": -1, "filename": "json_codegen-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b76e8a4fd94de14720c7165fbbe934aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 139566, "upload_time": "2019-03-05T10:01:17", "upload_time_iso_8601": "2019-03-05T10:01:17.302055Z", "url": "https://files.pythonhosted.org/packages/f6/b9/17bd912abfed0e5951d0096ccb6ee8f2e335e2706e2ab70cf74f1185a647/json_codegen-0.4.2-py3-none-any.whl", "yanked": false}], "0.4.3.1": [{"comment_text": "", "digests": {"md5": "040988613a54cc73be8abab2062041c3", "sha256": "afa92e0c9c983c103640428aad9df79fb4daa9c74f6b4031ec201f6d908c14fe"}, "downloads": -1, "filename": "json_codegen-0.4.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "040988613a54cc73be8abab2062041c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 139923, "upload_time": "2019-03-05T22:39:16", "upload_time_iso_8601": "2019-03-05T22:39:16.965488Z", "url": "https://files.pythonhosted.org/packages/98/df/61e54324913d50e89f5d6894b4c12f94e0743a22905de094f433b89ee9e1/json_codegen-0.4.3.1-py3-none-any.whl", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "40619c0555c84b4895e89c99d38e7af5", "sha256": "bb80bde48bd9e05942b1f957e355421b14a0ab812d7ce814f17b05bf87058aa4"}, "downloads": -1, "filename": "json_codegen-0.4.4-py3-none-any.whl", "has_sig": false, "md5_digest": "40619c0555c84b4895e89c99d38e7af5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 139886, "upload_time": "2019-03-06T14:01:12", "upload_time_iso_8601": "2019-03-06T14:01:12.091373Z", "url": "https://files.pythonhosted.org/packages/ec/dc/ffb5f1ba58c7104626645a1a3e6f255bd3183c9b53c99802745aa2232200/json_codegen-0.4.4-py3-none-any.whl", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "d80a63fcfe75c863e31e25a226720ecb", "sha256": "4d15ed20774eef04b70533870e8902a87224ea454718e72f29513ced546f8df5"}, "downloads": -1, "filename": "json_codegen-0.4.5-py3-none-any.whl", "has_sig": false, "md5_digest": "d80a63fcfe75c863e31e25a226720ecb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 140214, "upload_time": "2019-03-12T12:56:27", "upload_time_iso_8601": "2019-03-12T12:56:27.067626Z", "url": "https://files.pythonhosted.org/packages/af/50/c588cd64a29b8d2e8070965e52e7439c90fde665be72711e1f8551801ee6/json_codegen-0.4.5-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d80a63fcfe75c863e31e25a226720ecb", "sha256": "4d15ed20774eef04b70533870e8902a87224ea454718e72f29513ced546f8df5"}, "downloads": -1, "filename": "json_codegen-0.4.5-py3-none-any.whl", "has_sig": false, "md5_digest": "d80a63fcfe75c863e31e25a226720ecb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 140214, "upload_time": "2019-03-12T12:56:27", "upload_time_iso_8601": "2019-03-12T12:56:27.067626Z", "url": "https://files.pythonhosted.org/packages/af/50/c588cd64a29b8d2e8070965e52e7439c90fde665be72711e1f8551801ee6/json_codegen-0.4.5-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:51:52 2020"}