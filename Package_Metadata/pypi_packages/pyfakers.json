{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# py-fake-rs \n\n\nA fake data generator (a faker) for Python, extended with Rust.\n\nThis module contains bindings to [fake-rs](https//github.com/cksac/fake-rs),\na fake-data generator written in [Rust](https//www.rust-lang.org/).\n\n\nThe reason for this library is performance. When you're generating large amounts\nof fake data, this library will serve you well.\n\n\n## Example API\n\n```python\nfrom pyfakers import Name\n\nprint(Name.first_name())\nprint(Name.last_name())\n```\n\n\n## Installation\n\nInstall with pip, wheel files are provided for Linux and macOS\n\nTHIS WONT WORK YET (BUT WILL SHORTLY)    pip install pyfakers \n\n\n## Building from source\n\nInstall libffi, python3 headers, setuptools and wheel. The following command will install these on Ubuntu\n\n    apt-get install libffi-dev python3-dev python3-setuptools python3-wheel\n\nCheck out the repository\n\n    git clone git@github.comdowwie/pyfakers.git\n    cd pyfakers\n\nIn order to compile the Rust code, you'll need to have Rust nightly toolchain installed and enabled.\n\nUse rustup to set this up, find installation instructions for rustup at https//www.rustup.rs/\n\nTo use Rust nightly, run the following commands (from the project root)\n\n    rustup update nightly\n    rustup override add nightly\n\nInstall the ``pipenv`` utility from pypi\n\n\tpip install pipenv\n\nInstall dependencies (from the project root)\n\n\tpipenv install\n\nLaunch a virtual environment (from the project root)\n\n\tpipenv shell\n\nNow you can build the package\n\n    python3 setup.py bdist_wheel\n\nInstall the wheel\n\n\tpip install dist/<wheel file name>\n\n\n## Full API \n\n```python\nfrom pyfakers import Name, Internet, Company, Address, PhoneNumber\n\nprint(Name.first_name())\nprint(Name.last_name())\nprint(Name.full_name())\nprint(Name.title_descriptor())\nprint(Name.title_level())\nprint(Name.title_job())\nprint(Name.title())\n\nprint(Internet.free_email_provider())\nprint(Internet.domain_suffix())\nprint(Internet.user_name())\nprint(Internet.free_email())\nprint(Internet.safe_email())\n\nprint(Company.suffix())\nprint(Company.name())\nprint(Company.buzzword())\nprint(Company.catch_phrase())\nprint(Company.bs())\nprint(Company.profession())\nprint(Company.industry())\n\nprint(Address.time_zone())\nprint(Address.city_prefix())\nprint(Address.city_suffix())\nprint(Address.street_suffix())\nprint(Address.state())\nprint(Address.state_abbr())\nprint(Address.city())\nprint(Address.street_name())\nprint(Address.building_number())\nprint(Address.street_address())\nprint(Address.secondary_address())\nprint(Address.postal_code())\nprint(Address.latitude())\nprint(Address.longitude())\n\nprint(PhoneNumber.phone_number())\n```\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyfakers", "package_url": "https://pypi.org/project/pyfakers/", "platform": "any", "project_url": "https://pypi.org/project/pyfakers/", "project_urls": null, "release_url": "https://pypi.org/project/pyfakers/0.1.0/", "requires_dist": ["wheel", "milksnake", "pipenv", "pytest"], "requires_python": "", "summary": "A fake data generator backed by fake-rs", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # py-fake-rs <br><br><br>A fake data generator (a faker) for Python, extended with Rust.<br><br>This module contains bindings to [fake-rs](https//github.com/cksac/fake-rs),<br>a fake-data generator written in [Rust](https//www.rust-lang.org/).<br><br><br>The reason for this library is performance. When you're generating large amounts<br>of fake data, this library will serve you well.<br><br><br>## Example API<br><br>```python<br>from pyfakers import Name<br><br>print(Name.first_name())<br>print(Name.last_name())<br>```<br><br><br>## Installation<br><br>Install with pip, wheel files are provided for Linux and macOS<br><br>THIS WONT WORK YET (BUT WILL SHORTLY)    pip install pyfakers <br><br><br>## Building from source<br><br>Install libffi, python3 headers, setuptools and wheel. The following command will install these on Ubuntu<br><br>    apt-get install libffi-dev python3-dev python3-setuptools python3-wheel<br><br>Check out the repository<br><br>    git clone git@github.comdowwie/pyfakers.git<br>    cd pyfakers<br><br>In order to compile the Rust code, you'll need to have Rust nightly toolchain installed and enabled.<br><br>Use rustup to set this up, find installation instructions for rustup at https//www.rustup.rs/<br><br>To use Rust nightly, run the following commands (from the project root)<br><br>    rustup update nightly<br>    rustup override add nightly<br><br>Install the ``pipenv`` utility from pypi<br><br>\tpip install pipenv<br><br>Install dependencies (from the project root)<br><br>\tpipenv install<br><br>Launch a virtual environment (from the project root)<br><br>\tpipenv shell<br><br>Now you can build the package<br><br>    python3 setup.py bdist_wheel<br><br>Install the wheel<br><br>\tpip install dist/&lt;wheel file name&gt;<br><br><br>## Full API <br><br>```python<br>from pyfakers import Name, Internet, Company, Address, PhoneNumber<br><br>print(Name.first_name())<br>print(Name.last_name())<br>print(Name.full_name())<br>print(Name.title_descriptor())<br>print(Name.title_level())<br>print(Name.title_job())<br>print(Name.title())<br><br>print(Internet.free_email_provider())<br>print(Internet.domain_suffix())<br>print(Internet.user_name())<br>print(Internet.free_email())<br>print(Internet.safe_email())<br><br>print(Company.suffix())<br>print(Company.name())<br>print(Company.buzzword())<br>print(Company.catch_phrase())<br>print(Company.bs())<br>print(Company.profession())<br>print(Company.industry())<br><br>print(Address.time_zone())<br>print(Address.city_prefix())<br>print(Address.city_suffix())<br>print(Address.street_suffix())<br>print(Address.state())<br>print(Address.state_abbr())<br>print(Address.city())<br>print(Address.street_name())<br>print(Address.building_number())<br>print(Address.street_address())<br>print(Address.secondary_address())<br>print(Address.postal_code())<br>print(Address.latitude())<br>print(Address.longitude())<br><br>print(PhoneNumber.phone_number())<br>```<br><br><br>\n          </div>"}, "last_serial": 3497323, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "17c5e17f1d144aafe075c79f87f30f48", "sha256": "e699ab55128abd659c5331f933642537cbaacceef12fe52285d2ff7a1569cafc"}, "downloads": -1, "filename": "pyfakers-0.0.0-py2.py3-none-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "17c5e17f1d144aafe075c79f87f30f48", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 853145, "upload_time": "2018-01-17T14:09:43", "upload_time_iso_8601": "2018-01-17T14:09:43.059419Z", "url": "https://files.pythonhosted.org/packages/d7/83/11660a80b6f61fd289e0d32a51f1a56978108860567275c5d1b90dcf8866/pyfakers-0.0.0-py2.py3-none-manylinux1_x86_64.whl", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "f7e02199d7b428af73ccfd621691bb8a", "sha256": "98c3a29bb7d962cb3c927e8f2d8e449d0b96ad7118e1ba6943c7c853d4d4fbb1"}, "downloads": -1, "filename": "pyfakers-0.1.0-py2.py3-none-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "f7e02199d7b428af73ccfd621691bb8a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 853108, "upload_time": "2018-01-17T14:34:46", "upload_time_iso_8601": "2018-01-17T14:34:46.167966Z", "url": "https://files.pythonhosted.org/packages/66/41/3c54ba40f49a0e1da5cc6ca8c4c54195a120f130f06b9176dc5c8dacb69f/pyfakers-0.1.0-py2.py3-none-manylinux1_x86_64.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f7e02199d7b428af73ccfd621691bb8a", "sha256": "98c3a29bb7d962cb3c927e8f2d8e449d0b96ad7118e1ba6943c7c853d4d4fbb1"}, "downloads": -1, "filename": "pyfakers-0.1.0-py2.py3-none-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "f7e02199d7b428af73ccfd621691bb8a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 853108, "upload_time": "2018-01-17T14:34:46", "upload_time_iso_8601": "2018-01-17T14:34:46.167966Z", "url": "https://files.pythonhosted.org/packages/66/41/3c54ba40f49a0e1da5cc6ca8c4c54195a120f130f06b9176dc5c8dacb69f/pyfakers-0.1.0-py2.py3-none-manylinux1_x86_64.whl", "yanked": false}], "timestamp": "Fri May  8 03:06:02 2020"}