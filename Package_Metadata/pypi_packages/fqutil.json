{"info": {"author": "Jeff Stafford", "author_email": "jeff.stafford@queensu.ca", "bugtrack_url": null, "classifiers": [], "description": "# fqutils\n\nA couple Python-based FASTQ QC tools that perform several useful file handling operations, \nnotably check read-pairing, repair read-pairing, and trim reads. \nNotably, `fq-repair` is the only tool (to my knowledge) \nthat can successfully re-pair reads from gzipped FASTQ input.\nAll tools are designed to be as fast and memory-efficient as possible.\nInput is assumed to be 4-line FASTQ and may be gzipped.\n\n## Installation and tests\n\n`fqutils` has no dependencies aside from the Python 3 standard library \n(if this Python is installed, things will work).\nJust clone the repository with with `git clone https://github.com/jstaf/fqutils.git`.\nClever users will also note that this repository can be installed as a python package with `pip install .`  \n\nTo run tests: `pytest`\n\n## Current scripts\n\nRun `commandname --help` for individual usage instructions.\nSample commands can also be found in the `tests/` directory.\n\n* **fq-checkpair** - Check if two FASTQ files are properly paired and highlight errors.\n\n* **fq-trim** - Starting from both ends, trim a read so that bases below a certain Phred quality score are removed. Resulting reads shorter than a minimum length are removed. Fast, dirty, and idiot-proof trimming.\n\n* **fq-repair** - Re-pair the reads in two FASTQ files if reads have been filtered out or otherwise reordered. \n\n* **fq-zwc** - Just a wrapper around `wc -l` for gzipped files.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jstaf/fqutil", "keywords": "", "license": "BSD-3", "maintainer": "", "maintainer_email": "", "name": "fqutil", "package_url": "https://pypi.org/project/fqutil/", "platform": "", "project_url": "https://pypi.org/project/fqutil/", "project_urls": {"Homepage": "https://github.com/jstaf/fqutil"}, "release_url": "https://pypi.org/project/fqutil/1.1/", "requires_dist": null, "requires_python": "", "summary": "Several useful tools for manipulating FASTQ files.", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># fqutils</p>\n<p>A couple Python-based FASTQ QC tools that perform several useful file handling operations,\nnotably check read-pairing, repair read-pairing, and trim reads.\nNotably, <cite>fq-repair</cite> is the only tool (to my knowledge)\nthat can successfully re-pair reads from gzipped FASTQ input.\nAll tools are designed to be as fast and memory-efficient as possible.\nInput is assumed to be 4-line FASTQ and may be gzipped.</p>\n<p>## Installation and tests</p>\n<p><cite>fqutils</cite> has no dependencies aside from the Python 3 standard library\n(if this Python is installed, things will work).\nJust clone the repository with with <cite>git clone https://github.com/jstaf/fqutils.git</cite>.\nClever users will also note that this repository can be installed as a python package with <cite>pip install .</cite></p>\n<p>To run tests: <cite>pytest</cite></p>\n<p>## Current scripts</p>\n<p>Run <cite>commandname \u2013help</cite> for individual usage instructions.\nSample commands can also be found in the <cite>tests/</cite> directory.</p>\n<ul>\n<li><strong>fq-checkpair</strong> - Check if two FASTQ files are properly paired and highlight errors.</li>\n<li><strong>fq-trim</strong> - Starting from both ends, trim a read so that bases below a certain Phred quality score are removed. Resulting reads shorter than a minimum length are removed. Fast, dirty, and idiot-proof trimming.</li>\n<li><strong>fq-repair</strong> - Re-pair the reads in two FASTQ files if reads have been filtered out or otherwise reordered.</li>\n<li><strong>fq-zwc</strong> - Just a wrapper around <cite>wc -l</cite> for gzipped files.</li>\n</ul>\n\n          </div>"}, "last_serial": 3767647, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "ccdece58a3aaaca643804789398cc29e", "sha256": "b07d3844d573ae19e43d7461ec46b7ad57f8477de271ba3ca9418817ecfaf7fc"}, "downloads": -1, "filename": "fqutil-1.0.tar.gz", "has_sig": false, "md5_digest": "ccdece58a3aaaca643804789398cc29e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5550, "upload_time": "2018-02-16T02:41:12", "upload_time_iso_8601": "2018-02-16T02:41:12.162231Z", "url": "https://files.pythonhosted.org/packages/38/2b/5eab2e0534876180f8c03d8b9092dcd9308e692f85aec49c68bfd2b29f9b/fqutil-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "f623dced6d82b47dc977c1d5e6c1a835", "sha256": "86714a4993871b16cc9a3f7509c6a2e7166f89086aa383af2569f971a3749ce6"}, "downloads": -1, "filename": "fqutil-1.1.tar.gz", "has_sig": false, "md5_digest": "f623dced6d82b47dc977c1d5e6c1a835", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5679, "upload_time": "2018-04-16T02:57:40", "upload_time_iso_8601": "2018-04-16T02:57:40.047548Z", "url": "https://files.pythonhosted.org/packages/b1/32/4cbbbd20dfa1a9bc11dc9edc59fb3709bbf6c12add4c660be3caca14006f/fqutil-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f623dced6d82b47dc977c1d5e6c1a835", "sha256": "86714a4993871b16cc9a3f7509c6a2e7166f89086aa383af2569f971a3749ce6"}, "downloads": -1, "filename": "fqutil-1.1.tar.gz", "has_sig": false, "md5_digest": "f623dced6d82b47dc977c1d5e6c1a835", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5679, "upload_time": "2018-04-16T02:57:40", "upload_time_iso_8601": "2018-04-16T02:57:40.047548Z", "url": "https://files.pythonhosted.org/packages/b1/32/4cbbbd20dfa1a9bc11dc9edc59fb3709bbf6c12add4c660be3caca14006f/fqutil-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:35 2020"}