{"info": {"author": "S\u00e9bastien Keim", "author_email": "s.keim@free.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Markup"], "description": "############\r\nIntroduction\r\n############\r\n\r\nWith the dum module you can easily map data from structured files\r\nto a set of python classes. \r\nThe current version can be used with json, csv or xlm formats, \r\nmore are expected to come.\r\n\r\n\r\nParsing and projecting\r\n======================\r\n\r\nThe main idea is that your code is designed with objects that share more or less the same\r\norganization than the data in the original file.  With a few directives, it must then be possible \r\nto directly project the data parsed from the file to the class model of your application.\r\n\r\nFor sample a minimal (all the display methods are still to write...)  `Atom <https://en.wikipedia.org/wiki/Atom_%28standard%29>`_ application\r\ncould look like \r\n\r\n::\r\n    \r\n    class Author:\r\n        class dum: \r\n            name =\"\"\r\n            email=\"\"\r\n \r\n    class Link:\r\n        class dum:\r\n            rel=\"\"\r\n            href=\"\"\r\n\r\n    class Entry:\r\n        class dum:\r\n            title = \"\"\r\n            author = [Author]\r\n            link = [Link]\r\n            updated = dateutil.parser.parse\r\n\r\n    class Atom:\r\n        class dum:\r\n            title =\"\"\r\n            subtitle= \"\"\r\n            entry = [Entry]\r\n            link = [Link]\r\n            updated = dateutil.parser.parse\r\n        \r\n    atom = dum.xml(Atom, open(\"myrss\"))\r\n\r\n\r\n\r\n\r\nRequirements\r\n============\r\n\r\nThe library has been tested for Python 3.4 \r\nThere is no external dependencies.", "description_content_type": null, "docs_url": "https://pythonhosted.org/dum/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/sebkeim/dum", "keywords": "xml csv json", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dum", "package_url": "https://pypi.org/project/dum/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dum/", "project_urls": {"Homepage": "https://bitbucket.org/sebkeim/dum"}, "release_url": "https://pypi.org/project/dum/0.4/", "requires_dist": null, "requires_python": null, "summary": "Direct data to object for xml, jon and csv", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>With the dum module you can easily map data from structured files\nto a set of python classes.\nThe current version can be used with json, csv or xlm formats,\nmore are expected to come.</p>\n<div id=\"parsing-and-projecting\">\n<h2>Parsing and projecting</h2>\n<p>The main idea is that your code is designed with objects that share more or less the same\norganization than the data in the original file.  With a few directives, it must then be possible\nto directly project the data parsed from the file to the class model of your application.</p>\n<p>For sample a minimal (all the display methods are still to write\u2026)  <a href=\"https://en.wikipedia.org/wiki/Atom_%28standard%29\" rel=\"nofollow\">Atom</a> application\ncould look like</p>\n<pre>class Author:\n    class dum:\n        name =\"\"\n        email=\"\"\n\nclass Link:\n    class dum:\n        rel=\"\"\n        href=\"\"\n\nclass Entry:\n    class dum:\n        title = \"\"\n        author = [Author]\n        link = [Link]\n        updated = dateutil.parser.parse\n\nclass Atom:\n    class dum:\n        title =\"\"\n        subtitle= \"\"\n        entry = [Entry]\n        link = [Link]\n        updated = dateutil.parser.parse\n\natom = dum.xml(Atom, open(\"myrss\"))\n</pre>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>The library has been tested for Python 3.4\nThere is no external dependencies.</p>\n</div>\n\n          </div>"}, "last_serial": 1253994, "releases": {"0.1": [{"comment_text": "For any python 3.x version", "digests": {"md5": "a19710a3f123e4e7ebf160a4e7c210d4", "sha256": "61bd8a76196c17900911fafe37a2303a88e32c3362b862d2917cb14f84192ecc"}, "downloads": -1, "filename": "dum-0.1.tar.gz", "has_sig": false, "md5_digest": "a19710a3f123e4e7ebf160a4e7c210d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16141, "upload_time": "2014-09-22T05:56:59", "upload_time_iso_8601": "2014-09-22T05:56:59.556575Z", "url": "https://files.pythonhosted.org/packages/35/5b/b99c5b86bce5ada04652a564ef54d71df0ba47d2888d29b4a49619b7b0e2/dum-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "0e64587fc1e82fe564db60507e1e0907", "sha256": "3cdee3419ac1a29c02e2478842478a0a551f0d2fe79da50f413fbfe5194f2f71"}, "downloads": -1, "filename": "dum-0.2.tar.gz", "has_sig": false, "md5_digest": "0e64587fc1e82fe564db60507e1e0907", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16606, "upload_time": "2014-09-23T20:59:22", "upload_time_iso_8601": "2014-09-23T20:59:22.604630Z", "url": "https://files.pythonhosted.org/packages/cd/92/d510be3b28cc459065f15b5b4f183262244fde8ab68d578675a409ff5bd9/dum-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "json xpath, xml in attributes or child only, namespaces", "digests": {"md5": "61a571d9a89efabf3bbf0a5f9d11b0ed", "sha256": "f8da8244264fb0ecafe52b8a4ba7bb28ec2512b16bdcf38303a684d098941889"}, "downloads": -1, "filename": "dum-0.3.tar.gz", "has_sig": false, "md5_digest": "61a571d9a89efabf3bbf0a5f9d11b0ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19844, "upload_time": "2014-10-05T13:36:40", "upload_time_iso_8601": "2014-10-05T13:36:40.974742Z", "url": "https://files.pythonhosted.org/packages/14/29/3b66243a7d70013d8b3ea1040d81f3d268e917bd127c8033f9a067c7bb3d/dum-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "6129b1b7cf7ee8cae409345c9ddb6d85", "sha256": "e6a3b0d08653471da0a5a5225dc2c38f89a4d2dd3bd0040f1d3fbe4c7e9a926e"}, "downloads": -1, "filename": "dum-0.4.tar.gz", "has_sig": false, "md5_digest": "6129b1b7cf7ee8cae409345c9ddb6d85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20191, "upload_time": "2014-10-10T06:09:32", "upload_time_iso_8601": "2014-10-10T06:09:32.168223Z", "url": "https://files.pythonhosted.org/packages/77/96/538fcc4623c12d4d5880dd055a1c9aea7694de08d34824b69bb722587132/dum-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6129b1b7cf7ee8cae409345c9ddb6d85", "sha256": "e6a3b0d08653471da0a5a5225dc2c38f89a4d2dd3bd0040f1d3fbe4c7e9a926e"}, "downloads": -1, "filename": "dum-0.4.tar.gz", "has_sig": false, "md5_digest": "6129b1b7cf7ee8cae409345c9ddb6d85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20191, "upload_time": "2014-10-10T06:09:32", "upload_time_iso_8601": "2014-10-10T06:09:32.168223Z", "url": "https://files.pythonhosted.org/packages/77/96/538fcc4623c12d4d5880dd055a1c9aea7694de08d34824b69bb722587132/dum-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:04 2020"}