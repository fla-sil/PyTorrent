{"info": {"author": "night-crawler", "author_email": "lilo.panic@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "django-docker-helpers\n=====================\n\n|Docs| |Coverage| |Build status| |PyPI version| |PyPI Wheel|\n|Requirements Status| |Supported versions| |Supported implementations|\n\nThis package provides some useful tools you can use with your\n``manage.py``, so you have no need to use bash entry points and\nnon-python scripting. As well it: - reads configs with typing support\nfrom env, yaml, redis, consul; - provides some helper functions\n\nInstallation\n------------\n\n.. code:: bash\n\n    pip install -e git+https://github.com/night-crawler/django-docker-helpers.git#egg=django-docker-helpers\n        # OR\n    pip install django-docker-helpers\n\nUtils\n~~~~~\n\n-  ``env_bool_flag(flag_name, strict)`` - check if ENV option specified,\n   is it set to true, 1, 0, etc.\n-  ``run_env_once`` ensure django management don't call\n   ``twice <https://stackoverflow.com/questions/16546652/why-does-django-run-everything-twice>``\\ \\_\n-  ``is_dockerized`` - reads ``DOCKERIZED`` flag from env\n-  ``is_production`` - reads ``PRODUCTION`` flag from env\n\nManagement Helper functions\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n-  ``ensure_databases_alive(max_retries=100)`` - tries to execute\n   ``SELECT 1`` for every specified database alias in ``DATABASES``\n   until success or max\\_retries reached\n-  ``ensure_caches_alive(max_retries=100)`` - tries to execute\n   ``SELECT 1`` for every specified cache alias in ``CACHES`` until\n   success or max\\_retries reached\n-  ``migrate`` - executes ``./manage.py migrate``\n-  ``modeltranslation_sync_translation_fields`` - run\n   ``sync_translation_fields`` if ``modeltranslation`` is present\n-  ``collect_static`` - alias for\n   ``./manage.py collectstatic -c --noinput -v0``\n-  ``create_admin`` - create superuser from\n   ``settings.CONFIG['superuser']`` if user does not exists and user has\n   no usable password\n-  ``run_gunicorn(application: WSGIHandler, gunicorn_module_name: str='gunicorn_prod')``\n   - runs gunicorn\n\nSample config\n~~~~~~~~~~~~~\n\n.. code:: yaml\n\n    debug: true\n        db:\n            engine: django.db.backends.postgresql\n            host: postgres\n            port: 5432\n            database: mydb\n            user: mydb_user\n            password: mydb_password\n            conn_max_age: 60\n\nRead config\n~~~~~~~~~~~\n\n.. code:: python\n\n    import os\n    from django_docker_helpers.config import ConfigLoader, EnvironmentParser, RedisParser, YamlParser\n\n    yml_conf = '/tmp/my/config/without-docker.yml'\n    redis_conf = os.environ.get('DJANGO_CONFIG_REDIS_KEY', 'msa_cas/conf.yml')\n\n    parsers = [\n        EnvironmentParser(),\n        RedisParser(endpoint=redis_conf),\n        YamlParser(config=yml_conf),\n    ]\n    configure = ConfigLoader(parsers=parsers, silent=True)\n\n\n\n    DATABASES = {\n        'default': {\n            'ENGINE': configure('db.name', 'django.db.backends.postgresql'),\n            'HOST': configure('db.host', 'localhost'),\n            'PORT': configure('db.port', 5432),\n            'NAME': configure('db.database', 'project_default'),\n            'USER': configure('db.user', 'project_default'),\n            'PASSWORD': configure('db.password', 'project_default'),\n            'CONN_MAX_AGE': configure('db.conn_max_age', 60, coerce_type=int),\n        }\n    }\n\nUsage\n~~~~~\n\nIn the most cases your manage.py may look like:\n\n.. code:: python\n\n    #!/usr/bin/env python\n    #!/usr/bin/env python\n    import os\n    import sys\n\n    from django_docker_helpers.db import (\n        ensure_caches_alive, ensure_databases_alive, migrate\n    )\n    from django_docker_helpers.files import collect_static\n    from django_docker_helpers.management import create_admin, run_gunicorn\n    from django_docker_helpers.utils import env_bool_flag, run_env_once, wf\n\n    from setproctitle import setproctitle\n\n\n    @run_env_once\n    def invalidate_static_rev():\n        from django.core.management import call_command\n        call_command('invalidate_static_rev')\n\n\n    @run_env_once\n    def load_lang_fixtures():\n        from django.core.management import call_command\n        call_command('populate_languages')\n\n\n    @run_env_once\n    def load_dev_fixtures():\n        from django.core.management import call_command\n\n        wf('Loading DEVELOPMENT fixtures... ', False)\n        call_command(\n            'loaddata',\n            'fixtures/dev/service_api__api_key.json'\n        )\n        wf('[DONE]\\n')\n\n\n    if __name__ == '__main__':\n        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_project.settings')\n\n        setproctitle('MyProject')\n\n        if env_bool_flag('CHECK_CONNECTIONS'):\n            ensure_databases_alive(100)\n            ensure_caches_alive(100)\n\n        if env_bool_flag('RUN_PREPARE'):\n            collect_static()\n            migrate()\n            invalidate_static_rev()\n            load_lang_fixtures()\n            create_admin('SUPERUSER')\n\n        if env_bool_flag('LOAD_DEV_FIXTURES'):\n            load_dev_fixtures()\n\n        if len(sys.argv) == 2:\n            if sys.argv[1] == 'rungunicorn':\n                from my_project.wsgi import application\n\n                gunicorn_module_name = os.getenv('GUNICORN_MODULE_NAME', 'gunicorn_dev')\n                run_gunicorn(application, gunicorn_module_name=gunicorn_module_name)\n                exit()\n\n        from django.core.management import execute_from_command_line\n        execute_from_command_line(sys.argv)\n\nTesting\n~~~~~~~\n\n1. ``$ pip install -r requirements/dev.txt``\n2. `Download Consul <https://www.consul.io/downloads.html>`__ and unzip\n   it into the project's directory.\n\n   -  ``CONSUL_VERSION=1.4.0 bash -c 'curl -sLo consul.zip https://releases.hashicorp.com/consul/\"$CONSUL_VERSION\"/consul_\"$CONSUL_VERSION\"_linux_amd64.zip' && unzip consul.zip``\n\n3. ``$ ./consul agent -server -ui -dev``\n4. ``$ pytest``\n\n.. |Docs| image:: https://readthedocs.org/projects/django-docker-helpers/badge/?style=flat\n   :target: https://readthedocs.org/projects/django-docker-helpers/\n.. |Coverage| image:: https://codecov.io/gh/night-crawler/django-docker-helpers/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/night-crawler/django-docker-helpers\n.. |Build status| image:: https://travis-ci.org/night-crawler/django-docker-helpers.svg?branch=master\n   :target: https://travis-ci.org/night-crawler/django-docker-helpers\n.. |PyPI version| image:: https://img.shields.io/pypi/v/django-docker-helpers.svg\n   :target: https://pypi.python.org/pypi/django-docker-helpers\n.. |PyPI Wheel| image:: https://img.shields.io/pypi/wheel/django-docker-helpers.svg\n   :target: https://pypi.python.org/pypi/django-docker-helpers\n.. |Requirements Status| image:: https://requires.io/github/night-crawler/django-docker-helpers/requirements.svg?branch=master\n   :target: https://requires.io/github/night-crawler/django-docker-helpers/requirements/?branch=master\n.. |Supported versions| image:: https://img.shields.io/pypi/pyversions/django-docker-helpers.svg\n   :target: https://pypi.python.org/pypi/django-docker-helpers\n.. |Supported implementations| image:: https://img.shields.io/pypi/implementation/django-docker-helpers.svg\n   :target: https://pypi.python.org/pypi/django-docker-helpers\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/night-crawler/django-docker-helpers", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-docker-helpers", "package_url": "https://pypi.org/project/django-docker-helpers/", "platform": "", "project_url": "https://pypi.org/project/django-docker-helpers/", "project_urls": {"Homepage": "https://github.com/night-crawler/django-docker-helpers"}, "release_url": "https://pypi.org/project/django-docker-helpers/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Django Docker helpers", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://readthedocs.org/projects/django-docker-helpers/\" rel=\"nofollow\"><img alt=\"Docs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d93505be4686698ac468055c0b0c43721163515/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f646a616e676f2d646f636b65722d68656c706572732f62616467652f3f7374796c653d666c6174\"></a> <a href=\"https://codecov.io/gh/night-crawler/django-docker-helpers\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9601bcbb4e8d17044dc0cae5e961317fc83721e/68747470733a2f2f636f6465636f762e696f2f67682f6e696768742d637261776c65722f646a616e676f2d646f636b65722d68656c706572732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a> <a href=\"https://travis-ci.org/night-crawler/django-docker-helpers\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0557c5474110ec8cee36085c6150cc8a280d651c/68747470733a2f2f7472617669732d63692e6f72672f6e696768742d637261776c65722f646a616e676f2d646f636b65722d68656c706572732e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/django-docker-helpers\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6351f6c493554017aceacd059afaf63c44d820aa/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d646f636b65722d68656c706572732e737667\"></a> <a href=\"https://pypi.python.org/pypi/django-docker-helpers\" rel=\"nofollow\"><img alt=\"PyPI Wheel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/32ca6e1f8999cdec28ce4d8b174d57f0b4f09e4d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f646a616e676f2d646f636b65722d68656c706572732e737667\"></a>\n<a href=\"https://requires.io/github/night-crawler/django-docker-helpers/requirements/?branch=master\" rel=\"nofollow\"><img alt=\"Requirements Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/364653378c75a02c4a6026add82cc5d6c9bf7d7a/68747470733a2f2f72657175697265732e696f2f6769746875622f6e696768742d637261776c65722f646a616e676f2d646f636b65722d68656c706572732f726571756972656d656e74732e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/django-docker-helpers\" rel=\"nofollow\"><img alt=\"Supported versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/acb6f09552906565497ad66bbdf53a95cd515e9f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f646a616e676f2d646f636b65722d68656c706572732e737667\"></a> <a href=\"https://pypi.python.org/pypi/django-docker-helpers\" rel=\"nofollow\"><img alt=\"Supported implementations\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/97289cbafcd0b51ab122e1b3b9321dd84a589c70/68747470733a2f2f696d672e736869656c64732e696f2f707970692f696d706c656d656e746174696f6e2f646a616e676f2d646f636b65722d68656c706572732e737667\"></a></p>\n<p>This package provides some useful tools you can use with your\n<tt>manage.py</tt>, so you have no need to use bash entry points and\nnon-python scripting. As well it: - reads configs with typing support\nfrom env, yaml, redis, consul; - provides some helper functions</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install -e git+https://github.com/night-crawler/django-docker-helpers.git#egg<span class=\"o\">=</span>django-docker-helpers\n    <span class=\"c1\"># OR\n</span>pip install django-docker-helpers\n</pre>\n<div id=\"utils\">\n<h3>Utils</h3>\n<ul>\n<li><tt>env_bool_flag(flag_name, strict)</tt> - check if ENV option specified,\nis it set to true, 1, 0, etc.</li>\n<li><tt>run_env_once</tt> ensure django management don\u2019t call\n<tt>twice <span class=\"pre\">&lt;https://stackoverflow.com/questions/16546652/why-does-django-run-everything-twice&gt;</span></tt>_</li>\n<li><tt>is_dockerized</tt> - reads <tt>DOCKERIZED</tt> flag from env</li>\n<li><tt>is_production</tt> - reads <tt>PRODUCTION</tt> flag from env</li>\n</ul>\n</div>\n<div id=\"management-helper-functions\">\n<h3>Management Helper functions</h3>\n<ul>\n<li><tt>ensure_databases_alive(max_retries=100)</tt> - tries to execute\n<tt>SELECT 1</tt> for every specified database alias in <tt>DATABASES</tt>\nuntil success or max_retries reached</li>\n<li><tt>ensure_caches_alive(max_retries=100)</tt> - tries to execute\n<tt>SELECT 1</tt> for every specified cache alias in <tt>CACHES</tt> until\nsuccess or max_retries reached</li>\n<li><tt>migrate</tt> - executes <tt>./manage.py migrate</tt></li>\n<li><tt>modeltranslation_sync_translation_fields</tt> - run\n<tt>sync_translation_fields</tt> if <tt>modeltranslation</tt> is present</li>\n<li><tt>collect_static</tt> - alias for\n<tt>./manage.py collectstatic <span class=\"pre\">-c</span> <span class=\"pre\">--noinput</span> <span class=\"pre\">-v0</span></tt></li>\n<li><tt>create_admin</tt> - create superuser from\n<tt><span class=\"pre\">settings.CONFIG['superuser']</span></tt> if user does not exists and user has\nno usable password</li>\n<li><tt>run_gunicorn(application: WSGIHandler, gunicorn_module_name: <span class=\"pre\">str='gunicorn_prod')</span></tt>\n- runs gunicorn</li>\n</ul>\n</div>\n<div id=\"sample-config\">\n<h3>Sample config</h3>\n<pre><span class=\"nt\">debug</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">true</span>\n    <span class=\"l-Scalar-Plain\">db</span><span class=\"p-Indicator\">:</span>\n        <span class=\"nt\">engine</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">django.db.backends.postgresql</span>\n        <span class=\"nt\">host</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">postgres</span>\n        <span class=\"nt\">port</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">5432</span>\n        <span class=\"nt\">database</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">mydb</span>\n        <span class=\"nt\">user</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">mydb_user</span>\n        <span class=\"nt\">password</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">mydb_password</span>\n        <span class=\"nt\">conn_max_age</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">60</span>\n</pre>\n</div>\n<div id=\"read-config\">\n<h3>Read config</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_docker_helpers.config</span> <span class=\"kn\">import</span> <span class=\"n\">ConfigLoader</span><span class=\"p\">,</span> <span class=\"n\">EnvironmentParser</span><span class=\"p\">,</span> <span class=\"n\">RedisParser</span><span class=\"p\">,</span> <span class=\"n\">YamlParser</span>\n\n<span class=\"n\">yml_conf</span> <span class=\"o\">=</span> <span class=\"s1\">'/tmp/my/config/without-docker.yml'</span>\n<span class=\"n\">redis_conf</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'DJANGO_CONFIG_REDIS_KEY'</span><span class=\"p\">,</span> <span class=\"s1\">'msa_cas/conf.yml'</span><span class=\"p\">)</span>\n\n<span class=\"n\">parsers</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">EnvironmentParser</span><span class=\"p\">(),</span>\n    <span class=\"n\">RedisParser</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"n\">redis_conf</span><span class=\"p\">),</span>\n    <span class=\"n\">YamlParser</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">yml_conf</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n<span class=\"n\">configure</span> <span class=\"o\">=</span> <span class=\"n\">ConfigLoader</span><span class=\"p\">(</span><span class=\"n\">parsers</span><span class=\"o\">=</span><span class=\"n\">parsers</span><span class=\"p\">,</span> <span class=\"n\">silent</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n\n\n<span class=\"n\">DATABASES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ENGINE'</span><span class=\"p\">:</span> <span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"s1\">'db.name'</span><span class=\"p\">,</span> <span class=\"s1\">'django.db.backends.postgresql'</span><span class=\"p\">),</span>\n        <span class=\"s1\">'HOST'</span><span class=\"p\">:</span> <span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"s1\">'db.host'</span><span class=\"p\">,</span> <span class=\"s1\">'localhost'</span><span class=\"p\">),</span>\n        <span class=\"s1\">'PORT'</span><span class=\"p\">:</span> <span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"s1\">'db.port'</span><span class=\"p\">,</span> <span class=\"mi\">5432</span><span class=\"p\">),</span>\n        <span class=\"s1\">'NAME'</span><span class=\"p\">:</span> <span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"s1\">'db.database'</span><span class=\"p\">,</span> <span class=\"s1\">'project_default'</span><span class=\"p\">),</span>\n        <span class=\"s1\">'USER'</span><span class=\"p\">:</span> <span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"s1\">'db.user'</span><span class=\"p\">,</span> <span class=\"s1\">'project_default'</span><span class=\"p\">),</span>\n        <span class=\"s1\">'PASSWORD'</span><span class=\"p\">:</span> <span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"s1\">'db.password'</span><span class=\"p\">,</span> <span class=\"s1\">'project_default'</span><span class=\"p\">),</span>\n        <span class=\"s1\">'CONN_MAX_AGE'</span><span class=\"p\">:</span> <span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"s1\">'db.conn_max_age'</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"n\">coerce_type</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">),</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>In the most cases your manage.py may look like:</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"c1\">#!/usr/bin/env python</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django_docker_helpers.db</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">ensure_caches_alive</span><span class=\"p\">,</span> <span class=\"n\">ensure_databases_alive</span><span class=\"p\">,</span> <span class=\"n\">migrate</span>\n<span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_docker_helpers.files</span> <span class=\"kn\">import</span> <span class=\"n\">collect_static</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_docker_helpers.management</span> <span class=\"kn\">import</span> <span class=\"n\">create_admin</span><span class=\"p\">,</span> <span class=\"n\">run_gunicorn</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_docker_helpers.utils</span> <span class=\"kn\">import</span> <span class=\"n\">env_bool_flag</span><span class=\"p\">,</span> <span class=\"n\">run_env_once</span><span class=\"p\">,</span> <span class=\"n\">wf</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">setproctitle</span> <span class=\"kn\">import</span> <span class=\"n\">setproctitle</span>\n\n\n<span class=\"nd\">@run_env_once</span>\n<span class=\"k\">def</span> <span class=\"nf\">invalidate_static_rev</span><span class=\"p\">():</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">django.core.management</span> <span class=\"kn\">import</span> <span class=\"n\">call_command</span>\n    <span class=\"n\">call_command</span><span class=\"p\">(</span><span class=\"s1\">'invalidate_static_rev'</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@run_env_once</span>\n<span class=\"k\">def</span> <span class=\"nf\">load_lang_fixtures</span><span class=\"p\">():</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">django.core.management</span> <span class=\"kn\">import</span> <span class=\"n\">call_command</span>\n    <span class=\"n\">call_command</span><span class=\"p\">(</span><span class=\"s1\">'populate_languages'</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@run_env_once</span>\n<span class=\"k\">def</span> <span class=\"nf\">load_dev_fixtures</span><span class=\"p\">():</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">django.core.management</span> <span class=\"kn\">import</span> <span class=\"n\">call_command</span>\n\n    <span class=\"n\">wf</span><span class=\"p\">(</span><span class=\"s1\">'Loading DEVELOPMENT fixtures... '</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">call_command</span><span class=\"p\">(</span>\n        <span class=\"s1\">'loaddata'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'fixtures/dev/service_api__api_key.json'</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">wf</span><span class=\"p\">(</span><span class=\"s1\">'[DONE]</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">setdefault</span><span class=\"p\">(</span><span class=\"s1\">'DJANGO_SETTINGS_MODULE'</span><span class=\"p\">,</span> <span class=\"s1\">'my_project.settings'</span><span class=\"p\">)</span>\n\n    <span class=\"n\">setproctitle</span><span class=\"p\">(</span><span class=\"s1\">'MyProject'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">env_bool_flag</span><span class=\"p\">(</span><span class=\"s1\">'CHECK_CONNECTIONS'</span><span class=\"p\">):</span>\n        <span class=\"n\">ensure_databases_alive</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n        <span class=\"n\">ensure_caches_alive</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">env_bool_flag</span><span class=\"p\">(</span><span class=\"s1\">'RUN_PREPARE'</span><span class=\"p\">):</span>\n        <span class=\"n\">collect_static</span><span class=\"p\">()</span>\n        <span class=\"n\">migrate</span><span class=\"p\">()</span>\n        <span class=\"n\">invalidate_static_rev</span><span class=\"p\">()</span>\n        <span class=\"n\">load_lang_fixtures</span><span class=\"p\">()</span>\n        <span class=\"n\">create_admin</span><span class=\"p\">(</span><span class=\"s1\">'SUPERUSER'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">env_bool_flag</span><span class=\"p\">(</span><span class=\"s1\">'LOAD_DEV_FIXTURES'</span><span class=\"p\">):</span>\n        <span class=\"n\">load_dev_fixtures</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'rungunicorn'</span><span class=\"p\">:</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">my_project.wsgi</span> <span class=\"kn\">import</span> <span class=\"n\">application</span>\n\n            <span class=\"n\">gunicorn_module_name</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'GUNICORN_MODULE_NAME'</span><span class=\"p\">,</span> <span class=\"s1\">'gunicorn_dev'</span><span class=\"p\">)</span>\n            <span class=\"n\">run_gunicorn</span><span class=\"p\">(</span><span class=\"n\">application</span><span class=\"p\">,</span> <span class=\"n\">gunicorn_module_name</span><span class=\"o\">=</span><span class=\"n\">gunicorn_module_name</span><span class=\"p\">)</span>\n            <span class=\"n\">exit</span><span class=\"p\">()</span>\n\n    <span class=\"kn\">from</span> <span class=\"nn\">django.core.management</span> <span class=\"kn\">import</span> <span class=\"n\">execute_from_command_line</span>\n    <span class=\"n\">execute_from_command_line</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"testing\">\n<h3>Testing</h3>\n<ol>\n<li><tt>$ pip install <span class=\"pre\">-r</span> requirements/dev.txt</tt></li>\n<li><a href=\"https://www.consul.io/downloads.html\" rel=\"nofollow\">Download Consul</a> and unzip\nit into the project\u2019s directory.<ul>\n<li><tt>CONSUL_VERSION=1.4.0 bash <span class=\"pre\">-c</span> 'curl <span class=\"pre\">-sLo</span> consul.zip <span class=\"pre\">https://releases.hashicorp.com/consul/\"$CONSUL_VERSION\"/consul_\"$CONSUL_VERSION\"_linux_amd64.zip'</span> &amp;&amp; unzip consul.zip</tt></li>\n</ul>\n</li>\n<li><tt>$ ./consul agent <span class=\"pre\">-server</span> <span class=\"pre\">-ui</span> <span class=\"pre\">-dev</span></tt></li>\n<li><tt>$ pytest</tt></li>\n</ol>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4953069, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "7e11f582020d3ceea7086ee9faab8bbe", "sha256": "96d141c3b3939ef379859d85b2b87b6d0b6ec7739f2c2c63c408bc8cda00f12e"}, "downloads": -1, "filename": "django_docker_helpers-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "7e11f582020d3ceea7086ee9faab8bbe", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 9416, "upload_time": "2017-12-29T14:57:56", "upload_time_iso_8601": "2017-12-29T14:57:56.621465Z", "url": "https://files.pythonhosted.org/packages/6c/52/5c88b45745209986def2ffbc6b1b81f4248429b1bddcf5125eba5847f131/django_docker_helpers-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2425ecef0dceb470b113657be6193259", "sha256": "d1d71eaab62ef9c3494bf4ee969b50adc3a2bb92dba1b286433221bed28842fe"}, "downloads": -1, "filename": "django-docker-helpers-0.0.10.tar.gz", "has_sig": false, "md5_digest": "2425ecef0dceb470b113657be6193259", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5202, "upload_time": "2017-12-29T14:57:53", "upload_time_iso_8601": "2017-12-29T14:57:53.424596Z", "url": "https://files.pythonhosted.org/packages/28/ba/102ad60ced37f8d3879cbeb4292989579434222d69ccaa61e4080c04d46f/django-docker-helpers-0.0.10.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "9ce29f1b51f00e1d4cc6d694d925afaf", "sha256": "869a6cd800a7d986b102f180588a5cb1a0d880e5af5beb09c53c081373097d10"}, "downloads": -1, "filename": "django_docker_helpers-0.1.10-py3-none-any.whl", "has_sig": false, "md5_digest": "9ce29f1b51f00e1d4cc6d694d925afaf", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 32006, "upload_time": "2018-01-29T14:07:58", "upload_time_iso_8601": "2018-01-29T14:07:58.630377Z", "url": "https://files.pythonhosted.org/packages/c0/fc/4fa69baf5314d4057d368da2d28c2117ac242b2cf2fa010e049fb8199441/django_docker_helpers-0.1.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03f404e9e274987069cbc14506cf0099", "sha256": "f37dbb4f96eb653b28f941cc832c559d2a0ee9f207ab3f6a71898d576c004421"}, "downloads": -1, "filename": "django-docker-helpers-0.1.10.tar.gz", "has_sig": false, "md5_digest": "03f404e9e274987069cbc14506cf0099", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18083, "upload_time": "2018-01-29T14:07:56", "upload_time_iso_8601": "2018-01-29T14:07:56.411982Z", "url": "https://files.pythonhosted.org/packages/96/46/b3221114391bf5e6ea2d1035ea82b7da44427fe76c1cf845d81ed1503c46/django-docker-helpers-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "2a5fcf37ef390c24ac411612b3fec736", "sha256": "838ee581102b062b0181e11946601d4894d5c45edfd1e7dce394fc017b182247"}, "downloads": -1, "filename": "django_docker_helpers-0.1.11-py3-none-any.whl", "has_sig": false, "md5_digest": "2a5fcf37ef390c24ac411612b3fec736", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 32869, "upload_time": "2018-01-30T14:53:22", "upload_time_iso_8601": "2018-01-30T14:53:22.234439Z", "url": "https://files.pythonhosted.org/packages/f8/c2/0312d8098ec38dac6db61bf1cf2eecad94abb8d9fdf90ee98ba7d394b3b6/django_docker_helpers-0.1.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf74949705bb509aa65d31ee1d827208", "sha256": "2b523b9cab593a8e4fdad603992769c7b453ec86d607900a8942b4aa8a00a99f"}, "downloads": -1, "filename": "django-docker-helpers-0.1.11.tar.gz", "has_sig": false, "md5_digest": "cf74949705bb509aa65d31ee1d827208", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18553, "upload_time": "2018-01-30T14:53:19", "upload_time_iso_8601": "2018-01-30T14:53:19.983901Z", "url": "https://files.pythonhosted.org/packages/dd/f1/57101559216562b1f6d367e9d10132fd74cbbd58b8e732a031abe98633ba/django-docker-helpers-0.1.11.tar.gz", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "59c3c56cc3c08c843fbf209480b7cdc8", "sha256": "fd66936fa55301a09e126b0b5147ba922c7480600d95333b9c0e3458ec9034cd"}, "downloads": -1, "filename": "django_docker_helpers-0.1.12-py3-none-any.whl", "has_sig": false, "md5_digest": "59c3c56cc3c08c843fbf209480b7cdc8", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 33139, "upload_time": "2018-01-31T00:43:48", "upload_time_iso_8601": "2018-01-31T00:43:48.082935Z", "url": "https://files.pythonhosted.org/packages/85/b5/1a7d8c92e4f041f3e6ae0f974c2c30286f5c1001653d43c3b52abfc47967/django_docker_helpers-0.1.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c3e9d4e2dff481bd1d1d60b6dcab4de", "sha256": "a8083faa5a82762046dd8ff46ba20652f8de516b9b56a0788c8f5734b02a17fc"}, "downloads": -1, "filename": "django-docker-helpers-0.1.12.tar.gz", "has_sig": false, "md5_digest": "0c3e9d4e2dff481bd1d1d60b6dcab4de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19165, "upload_time": "2018-01-31T00:40:28", "upload_time_iso_8601": "2018-01-31T00:40:28.132919Z", "url": "https://files.pythonhosted.org/packages/4a/21/8449f12a78bcb5ea7c4ed6b32f05287933501125b907b7a7fd7b470438a8/django-docker-helpers-0.1.12.tar.gz", "yanked": false}], "0.1.13": [{"comment_text": "", "digests": {"md5": "0622f374fce5c1d8dda0f76907afb600", "sha256": "42ed87d65a20e2a9f97d83b3747b067dd6c70e0a9ab5c91d5923c4280f43c99f"}, "downloads": -1, "filename": "django_docker_helpers-0.1.13-py3-none-any.whl", "has_sig": false, "md5_digest": "0622f374fce5c1d8dda0f76907afb600", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 44485, "upload_time": "2018-02-19T14:13:01", "upload_time_iso_8601": "2018-02-19T14:13:01.351830Z", "url": "https://files.pythonhosted.org/packages/f3/8a/983d13fea17351edc840e3b10fe5beaa6d7fd5e2db3063fc14affaee674e/django_docker_helpers-0.1.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "53f88bb516dae6ef71a277a485635b3a", "sha256": "f12d0e3db6327384a8e9400d61ab330c772b8821c422de51615f53bb5b3348cf"}, "downloads": -1, "filename": "django-docker-helpers-0.1.13.tar.gz", "has_sig": false, "md5_digest": "53f88bb516dae6ef71a277a485635b3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26131, "upload_time": "2018-02-19T14:12:58", "upload_time_iso_8601": "2018-02-19T14:12:58.405245Z", "url": "https://files.pythonhosted.org/packages/cd/34/048deaeab1ea2281e99a17e1cd69dcb292e70489d2f7fa8e74720eb5c90b/django-docker-helpers-0.1.13.tar.gz", "yanked": false}], "0.1.14": [{"comment_text": "", "digests": {"md5": "6d9eeed157d51fa5350712c656c33d6e", "sha256": "6f97e07bc99db3d4a209c46c70a519327a0938d77f9406fbb41b1f7f5cdde4dc"}, "downloads": -1, "filename": "django_docker_helpers-0.1.14-py3-none-any.whl", "has_sig": false, "md5_digest": "6d9eeed157d51fa5350712c656c33d6e", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 42360, "upload_time": "2018-07-24T12:23:27", "upload_time_iso_8601": "2018-07-24T12:23:27.086075Z", "url": "https://files.pythonhosted.org/packages/f8/cf/40498b11967dcd7e1d76cdc0a5c54148d24393d6cdd2b68e61c14d204ae3/django_docker_helpers-0.1.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3bb00aa78c0b22c90cee50f2d6d1c542", "sha256": "86014e25e2b02b436dc6f614626f028e2a49fee4bf6ef0e29ecf5435873f2725"}, "downloads": -1, "filename": "django-docker-helpers-0.1.14.tar.gz", "has_sig": false, "md5_digest": "3bb00aa78c0b22c90cee50f2d6d1c542", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27215, "upload_time": "2018-07-24T12:23:25", "upload_time_iso_8601": "2018-07-24T12:23:25.526104Z", "url": "https://files.pythonhosted.org/packages/74/2a/67615ded90e2649028f5be19022cd9393af4adb881370388d8cb9c14814c/django-docker-helpers-0.1.14.tar.gz", "yanked": false}], "0.1.15": [{"comment_text": "", "digests": {"md5": "ea89dc768e0a13e93775b1a7a30aef0f", "sha256": "edcfa641aa2220b4d9754b3d5d01aaee88df020dc554a702421f48317bfaed62"}, "downloads": -1, "filename": "django_docker_helpers-0.1.15-py3-none-any.whl", "has_sig": false, "md5_digest": "ea89dc768e0a13e93775b1a7a30aef0f", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 42375, "upload_time": "2018-07-24T13:41:51", "upload_time_iso_8601": "2018-07-24T13:41:51.809812Z", "url": "https://files.pythonhosted.org/packages/ad/7e/8d43a1f613f6dae5f3d77c6791947b597e006a61d46334921ea8402c124d/django_docker_helpers-0.1.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6284259971c3c8578fb30e7fa3135343", "sha256": "16c0ad00c354347d22855d2fb5a09c39c43e5e94e4b67a3ca8cf584fc12bd63b"}, "downloads": -1, "filename": "django-docker-helpers-0.1.15.tar.gz", "has_sig": false, "md5_digest": "6284259971c3c8578fb30e7fa3135343", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27240, "upload_time": "2018-07-24T13:41:50", "upload_time_iso_8601": "2018-07-24T13:41:50.172425Z", "url": "https://files.pythonhosted.org/packages/24/02/73097d6388e6485ae7159054c127d2e5b0fa7bb474ee42fcca380af11f28/django-docker-helpers-0.1.15.tar.gz", "yanked": false}], "0.1.16": [{"comment_text": "", "digests": {"md5": "1bbf4f7df1650f52d5e8172132fd6260", "sha256": "3961b6d86610b0340d8717b79c9141ab8c05cc0de658aecc9fbb273ea636942a"}, "downloads": -1, "filename": "django-docker-helpers-0.1.16.tar.gz", "has_sig": false, "md5_digest": "1bbf4f7df1650f52d5e8172132fd6260", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29130, "upload_time": "2018-12-10T14:44:01", "upload_time_iso_8601": "2018-12-10T14:44:01.507582Z", "url": "https://files.pythonhosted.org/packages/cd/d8/b46eece93b64c65989131cb76bf8c1eed00129337727dd5684d0294efc69/django-docker-helpers-0.1.16.tar.gz", "yanked": false}], "0.1.17": [{"comment_text": "", "digests": {"md5": "97aa620e4662cbf834fa9e4b752d0c08", "sha256": "b6ce95da1a79ff2755e3e5785e73ce61f1f4f2ce095dcc585973f7b9b45db935"}, "downloads": -1, "filename": "django_docker_helpers-0.1.17-py3-none-any.whl", "has_sig": false, "md5_digest": "97aa620e4662cbf834fa9e4b752d0c08", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 43289, "upload_time": "2019-03-18T07:49:44", "upload_time_iso_8601": "2019-03-18T07:49:44.200671Z", "url": "https://files.pythonhosted.org/packages/78/e8/e58c4f1cff04d0d408fb8c6d7d2dc364e76d22d3fa2e73029028a106d54c/django_docker_helpers-0.1.17-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0190c886035c7bb30612bac486996974", "sha256": "a374d5d644a8b7e9eb74f33ae372ead12e22827c836f6ca51bc71d8b87ea9db4"}, "downloads": -1, "filename": "django-docker-helpers-0.1.17.tar.gz", "has_sig": false, "md5_digest": "0190c886035c7bb30612bac486996974", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29152, "upload_time": "2019-03-18T07:49:42", "upload_time_iso_8601": "2019-03-18T07:49:42.334374Z", "url": "https://files.pythonhosted.org/packages/6c/0c/8238979fac1769dd946df0cadadcd5e5099f1d1d48490005a53f24e8c9a2/django-docker-helpers-0.1.17.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "54db98c953da4489125065f4e907bf0f", "sha256": "5bcbd725bff29fc7f0df4f19a0b086a43964c3fc1349849abc34487810b2d79b"}, "downloads": -1, "filename": "django_docker_helpers-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "54db98c953da4489125065f4e907bf0f", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 31863, "upload_time": "2018-01-25T12:23:26", "upload_time_iso_8601": "2018-01-25T12:23:26.394467Z", "url": "https://files.pythonhosted.org/packages/7e/d0/96dc7f97aba7dd1f15c1b2f7d34579e16ae7730424a4094ea3b867fa16f1/django_docker_helpers-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d1178b9ee81d04d03eb54bfb87571a93", "sha256": "cfdd067a3927b5c7b29add2945aa9df021148c2c21f8f51ccdbab17618f87f96"}, "downloads": -1, "filename": "django-docker-helpers-0.1.8.tar.gz", "has_sig": false, "md5_digest": "d1178b9ee81d04d03eb54bfb87571a93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17962, "upload_time": "2018-01-25T12:23:24", "upload_time_iso_8601": "2018-01-25T12:23:24.874984Z", "url": "https://files.pythonhosted.org/packages/f3/11/0b20c2937e568907be0fa7e492489692294b14da0b799d4cc285b8ac7d74/django-docker-helpers-0.1.8.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "7415a166daf2c74741fe166a4d005408", "sha256": "bedf2678ebdfe1534ea3f844ca3fd92ae81aacfa3e742686ce373810647d2681"}, "downloads": -1, "filename": "django_docker_helpers-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7415a166daf2c74741fe166a4d005408", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 43460, "upload_time": "2019-03-18T09:12:16", "upload_time_iso_8601": "2019-03-18T09:12:16.238150Z", "url": "https://files.pythonhosted.org/packages/d0/18/c42844c5edcceb15dc0c2243ae17f7a5752204a9cd8be883128e42dd8484/django_docker_helpers-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62e202067ba224491da285d2836c8107", "sha256": "844b8c4f7dc1abf0b3e1820b16d73298e5acd2fcc5418b1fde0a24122c1e11b4"}, "downloads": -1, "filename": "django-docker-helpers-0.2.0.tar.gz", "has_sig": false, "md5_digest": "62e202067ba224491da285d2836c8107", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29333, "upload_time": "2019-03-18T09:12:14", "upload_time_iso_8601": "2019-03-18T09:12:14.086839Z", "url": "https://files.pythonhosted.org/packages/b0/d5/98b1128dfd6d24d16531dabd7b48c5033cccd0549068b1f0eca8e1123e09/django-docker-helpers-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7415a166daf2c74741fe166a4d005408", "sha256": "bedf2678ebdfe1534ea3f844ca3fd92ae81aacfa3e742686ce373810647d2681"}, "downloads": -1, "filename": "django_docker_helpers-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7415a166daf2c74741fe166a4d005408", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 43460, "upload_time": "2019-03-18T09:12:16", "upload_time_iso_8601": "2019-03-18T09:12:16.238150Z", "url": "https://files.pythonhosted.org/packages/d0/18/c42844c5edcceb15dc0c2243ae17f7a5752204a9cd8be883128e42dd8484/django_docker_helpers-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62e202067ba224491da285d2836c8107", "sha256": "844b8c4f7dc1abf0b3e1820b16d73298e5acd2fcc5418b1fde0a24122c1e11b4"}, "downloads": -1, "filename": "django-docker-helpers-0.2.0.tar.gz", "has_sig": false, "md5_digest": "62e202067ba224491da285d2836c8107", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29333, "upload_time": "2019-03-18T09:12:14", "upload_time_iso_8601": "2019-03-18T09:12:14.086839Z", "url": "https://files.pythonhosted.org/packages/b0/d5/98b1128dfd6d24d16531dabd7b48c5033cccd0549068b1f0eca8e1123e09/django-docker-helpers-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:32 2020"}