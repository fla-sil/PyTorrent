{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "\nHave you been searching for hours trying to figure out how to make and update pip libraries? Well, search no more! LibMaker makes it easy to upload your code to pip. Note that you will need a pip account.\n\n**Installation**\n\nAs easy as ``pip install LibraryMaker`` or you could download it with the button on the right unzip it, go inside the directory, and run ``python setup.py install``\n\n\n**Usage**\n\nimport the library, libmaker, and then use the create and update functions as shown below\n\n**Create**: *create(name,path_to_code,description,version,username,password,readme='',keywords=[])*\n\nThe create function, as the name implies, creates a library. Basic example usage is shown below.\n\n    ``import libmaker``\n    \n    ``libmaker.create('mylibrary','/path/to/my/code','This is a random test library','0.1','myusername','mypassword')``\n\nYou can also add extra parameters like a readme file (long description) and a special list of keywords so your library can be found. Example usage of these is below:\n    \n    ``import libmaker``\n    \n    ``readmestring=\"\"\"this is a multiline string made of restructured text\"\"\"``\n    \n    ``libmaker.create('mylibrary','/path/to/my/code','This is a random test library','0.1','myusername','mypassword',readme=readmestring,keywords=['random','library'])``\n    \nHere is a list of the required parameters and what they do:\n\n\n    name - *The name of your library. Will not work if you use a name that already exists.*\n    \n    path_to_code - *The absolute path to your code. This is the code that will be in your library*\n    \n    description - *A short description of your library*\n    \n    version - *The first version of your library (a string)*\n    \n    username - *Your pip account username*\n    \n    password - *Your pip account password*\n\nHere is a list of the flags (non-required parameters) and what they do:\n\n    readme - *A multiline string of ReStructuredText that will be displayed on your pip homepage*\n    \n    keywords - *A list of keywords that will be used to help find your library when people search for it*\n\n**Update**: *update(name,path_to_code,version,username,password,readme='what it was before',keywords=['what it was before'],description='what it was before')*\n\nThe update function updates a library. Make sure you are in the same directory as when you created the library. Basic usage is shown below.\n\n    ``import libmaker``\n    \n    ``libmaker.update('mylibrary','/path/to/code','0.2','myusername','mypassword')``\n    \nThis will update pypi with your new code. You can also make other changes as shown below.\n\n    ``import libmaker``\n    \n    ``libmaker.update('mylibrary','/path/to/code','0.3','myusername','mypassword',readme='new restructured text',keywords=['random','library','updated'],description='the new and improved mylibrary')``\n\nHere is a list of the required parameters:\n\n    name - *The name of your library, you may not change it or it won't work*\n    \n    path_to_code - *The path to your python code*\n    \n    version - *Your new version (if it was 0.1, you need to change it to 0.2 for it to work)*\n    \n    username - *Your pip account username*\n        \n    password - *Your pip account password*\n\nHere is a list of the non-required parameters\n\n    readme - *A multiline string of ReStructuredText that will be displayed on your pip homepage. You may make changes from the previous updates*\n    \n    keywords - *A list of keywords that will be used to help find your library when people search for it. You may make changes from the previous updates*\n\n    description - *A short description of your library. You may change this from the previous updates*\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "library create make easy", "license": "", "maintainer": "", "maintainer_email": "", "name": "libmaker", "package_url": "https://pypi.org/project/libmaker/", "platform": "", "project_url": "https://pypi.org/project/libmaker/", "project_urls": null, "release_url": "https://pypi.org/project/libmaker/0.1/", "requires_dist": null, "requires_python": "", "summary": "A library that makes making libraries and uploading them to pypi easy", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Have you been searching for hours trying to figure out how to make and update pip libraries? Well, search no more! LibMaker makes it easy to upload your code to pip. Note that you will need a pip account.</p>\n<p><strong>Installation</strong></p>\n<p>As easy as <tt>pip install LibraryMaker</tt> or you could download it with the button on the right unzip it, go inside the directory, and run <tt>python setup.py install</tt></p>\n<p><strong>Usage</strong></p>\n<p>import the library, libmaker, and then use the create and update functions as shown below</p>\n<p><strong>Create</strong>: <em>create(name,path_to_code,description,version,username,password,readme=\u2019\u2019,keywords=[])</em></p>\n<p>The create function, as the name implies, creates a library. Basic example usage is shown below.</p>\n<blockquote>\n<p><tt>import libmaker</tt></p>\n<p><tt><span class=\"pre\">libmaker.create('mylibrary','/path/to/my/code','This</span> is a random test <span class=\"pre\">library','0.1','myusername','mypassword')</span></tt></p>\n</blockquote>\n<p>You can also add extra parameters like a readme file (long description) and a special list of keywords so your library can be found. Example usage of these is below:</p>\n<blockquote>\n<p><tt>import libmaker</tt></p>\n<p><tt><span class=\"pre\">readmestring=\"\"\"this</span> is a multiline string made of restructured <span class=\"pre\">text\"\"\"</span></tt></p>\n<p><tt><span class=\"pre\">libmaker.create('mylibrary','/path/to/my/code','This</span> is a random test <span class=\"pre\">library','0.1','myusername','mypassword',readme=readmestring,keywords=['random','library'])</span></tt></p>\n</blockquote>\n<p>Here is a list of the required parameters and what they do:</p>\n<blockquote>\n<p>name - <em>The name of your library. Will not work if you use a name that already exists.</em></p>\n<p>path_to_code - <em>The absolute path to your code. This is the code that will be in your library</em></p>\n<p>description - <em>A short description of your library</em></p>\n<p>version - <em>The first version of your library (a string)</em></p>\n<p>username - <em>Your pip account username</em></p>\n<p>password - <em>Your pip account password</em></p>\n</blockquote>\n<p>Here is a list of the flags (non-required parameters) and what they do:</p>\n<blockquote>\n<p>readme - <em>A multiline string of ReStructuredText that will be displayed on your pip homepage</em></p>\n<p>keywords - <em>A list of keywords that will be used to help find your library when people search for it</em></p>\n</blockquote>\n<p><strong>Update</strong>: <em>update(name,path_to_code,version,username,password,readme=\u2019what it was before\u2019,keywords=[\u2018what it was before\u2019],description=\u2019what it was before\u2019)</em></p>\n<p>The update function updates a library. Make sure you are in the same directory as when you created the library. Basic usage is shown below.</p>\n<blockquote>\n<p><tt>import libmaker</tt></p>\n<p><tt><span class=\"pre\">libmaker.update('mylibrary','/path/to/code','0.2','myusername','mypassword')</span></tt></p>\n</blockquote>\n<p>This will update pypi with your new code. You can also make other changes as shown below.</p>\n<blockquote>\n<p><tt>import libmaker</tt></p>\n<p><tt><span class=\"pre\">libmaker.update('mylibrary','/path/to/code','0.3','myusername','mypassword',readme='new</span> restructured <span class=\"pre\">text',keywords=['random','library','updated'],description='the</span> new and improved mylibrary')</tt></p>\n</blockquote>\n<p>Here is a list of the required parameters:</p>\n<blockquote>\n<p>name - <em>The name of your library, you may not change it or it won\u2019t work</em></p>\n<p>path_to_code - <em>The path to your python code</em></p>\n<p>version - <em>Your new version (if it was 0.1, you need to change it to 0.2 for it to work)</em></p>\n<p>username - <em>Your pip account username</em></p>\n<p>password - <em>Your pip account password</em></p>\n</blockquote>\n<p>Here is a list of the non-required parameters</p>\n<blockquote>\n<p>readme - <em>A multiline string of ReStructuredText that will be displayed on your pip homepage. You may make changes from the previous updates</em></p>\n<p>keywords - <em>A list of keywords that will be used to help find your library when people search for it. You may make changes from the previous updates</em></p>\n<p>description - <em>A short description of your library. You may change this from the previous updates</em></p>\n</blockquote>\n\n          </div>"}, "last_serial": 3034655, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "dedf5d262d64ea8119621ff09151abd5", "sha256": "5d75199dabdcfb2c0003485bbff9dfd97207870935d128ad7ebda002a1cd9fb0"}, "downloads": -1, "filename": "libmaker-0.1.tar.gz", "has_sig": false, "md5_digest": "dedf5d262d64ea8119621ff09151abd5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2892, "upload_time": "2017-07-19T17:18:57", "upload_time_iso_8601": "2017-07-19T17:18:57.192871Z", "url": "https://files.pythonhosted.org/packages/ba/04/bcb68b491a61201cf2a8db3da38bdf070b2baf17d33da3aa1882ccdb7a84/libmaker-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dedf5d262d64ea8119621ff09151abd5", "sha256": "5d75199dabdcfb2c0003485bbff9dfd97207870935d128ad7ebda002a1cd9fb0"}, "downloads": -1, "filename": "libmaker-0.1.tar.gz", "has_sig": false, "md5_digest": "dedf5d262d64ea8119621ff09151abd5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2892, "upload_time": "2017-07-19T17:18:57", "upload_time_iso_8601": "2017-07-19T17:18:57.192871Z", "url": "https://files.pythonhosted.org/packages/ba/04/bcb68b491a61201cf2a8db3da38bdf070b2baf17d33da3aa1882ccdb7a84/libmaker-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:33 2020"}