{"info": {"author": "Victor Stinner", "author_email": "vstinner@redhat.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "******\npyperf\n******\n\n.. image:: https://img.shields.io/pypi/v/pyperf.svg\n   :alt: Latest release on the Python Cheeseshop (PyPI)\n   :target: https://pypi.python.org/pypi/pyperf\n\n.. image:: https://travis-ci.org/vstinner/pyperf.svg?branch=master\n   :alt: Build status of pyperf on Travis CI\n   :target: https://travis-ci.org/vstinner/pyperf\n\nThe Python ``pyperf`` module is a toolkit to write, run and analyze benchmarks.\n\nFeatures\n========\n\n* Simple API to run reliable benchmarks\n* Automatically calibrate a benchmark for a time budget.\n* Spawn multiple worker processes.\n* Compute the mean and standard deviation.\n* Detect if a benchmark result seems unstable.\n* JSON format to store benchmark results.\n* Support multiple units: seconds, bytes and integer.\n\n\nUsage\n=====\n\nTo `run a benchmark`_ use the ``pyperf timeit`` command (result written into\n``bench.json``)::\n\n    $ python3 -m pyperf timeit '[1,2]*1000' -o bench.json\n    .....................\n    Mean +- std dev: 4.22 us +- 0.08 us\n\nOr write a benchmark script ``bench.py``:\n\n.. code:: python\n\n    #!/usr/bin/env python3\n    import pyperf\n\n    runner = pyperf.Runner()\n    runner.timeit(name=\"sort a sorted list\",\n                  stmt=\"sorted(s, key=f)\",\n                  setup=\"f = lambda x: x; s = list(range(1000))\")\n\nSee `the API docs`_ for full details on the ``timeit`` function and the\n``Runner`` class. To run the script and dump the results into a file named\n``bench.json``::\n\n    $ python3 bench.py -o bench.json\n\nTo `analyze benchmark results`_ use the ``pyperf stats`` command::\n\n    $ python3 -m pyperf stats bench.json\n    Total duration: 29.2 sec\n    Start date: 2016-10-21 03:14:19\n    End date: 2016-10-21 03:14:53\n    Raw value minimum: 177 ms\n    Raw value maximum: 183 ms\n\n    Number of calibration run: 1\n    Number of run with values: 40\n    Total number of run: 41\n\n    Number of warmup per run: 1\n    Number of value per run: 3\n    Loop iterations per value: 8\n    Total number of values: 120\n\n    Minimum:         22.1 ms\n    Median +- MAD:   22.5 ms +- 0.1 ms\n    Mean +- std dev: 22.5 ms +- 0.2 ms\n    Maximum:         22.9 ms\n\n      0th percentile: 22.1 ms (-2% of the mean) -- minimum\n      5th percentile: 22.3 ms (-1% of the mean)\n     25th percentile: 22.4 ms (-1% of the mean) -- Q1\n     50th percentile: 22.5 ms (-0% of the mean) -- median\n     75th percentile: 22.7 ms (+1% of the mean) -- Q3\n     95th percentile: 22.9 ms (+2% of the mean)\n    100th percentile: 22.9 ms (+2% of the mean) -- maximum\n\n    Number of outlier (out of 22.0 ms..23.0 ms): 0\n\nThere's also:\n\n* ``pyperf compare_to`` command tests if a difference is\n  significant. It supports comparison between multiple benchmark suites (made\n  of multiple benchmarks)\n  ::\n\n    $ python3 -m pyperf compare_to py36.json py38.json --table\n    +-----------+---------+------------------------------+\n    | Benchmark | py36    | py38                         |\n    +===========+=========+==============================+\n    | timeit    | 4.70 us | 4.22 us: 1.11x faster (-10%) |\n    +-----------+---------+------------------------------+\n\n* ``pyperf system tune`` command to tune your system to run stable benchmarks.\n* Automatically collect metadata on the computer and the benchmark:\n  use the ``pyperf metadata`` command to display them, or the\n  ``pyperf collect_metadata`` command to manually collect them.\n* ``--track-memory`` and ``--tracemalloc`` options to track\n  the memory usage of a benchmark.\n\n\nQuick Links\n===========\n\n* `pyperf documentation\n  <https://pyperf.readthedocs.io/>`_\n* `pyperf project homepage at GitHub\n  <https://github.com/vstinner/pyperf>`_ (code, bugs)\n* `Download latest pyperf release at the Python Cheeseshop (PyPI)\n  <https://pypi.python.org/pypi/pyperf>`_\n\nCommand to install pyperf on Python 3::\n\n    python3 -m pip install pyperf\n\npyperf requires Python 3.6 or newer. It is distributed under the MIT license.\n\n.. _run a benchmark: https://pyperf.readthedocs.io/en/latest/run_benchmark.html\n.. _the API docs: http://pyperf.readthedocs.io/en/latest/api.html#Runner.timeit\n.. _analyze benchmark results: https://pyperf.readthedocs.io/en/latest/analyze.html\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vstinner/pyperf", "keywords": "", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "pyperf", "package_url": "https://pypi.org/project/pyperf/", "platform": "", "project_url": "https://pypi.org/project/pyperf/", "project_urls": {"Homepage": "https://github.com/vstinner/pyperf"}, "release_url": "https://pypi.org/project/pyperf/2.0.0/", "requires_dist": ["statistics ; python_version < '3.4'"], "requires_python": "", "summary": "Python module to run and analyze benchmarks", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/pyperf\" rel=\"nofollow\"><img alt=\"Latest release on the Python Cheeseshop (PyPI)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/23ce8b34a47e0f7bca80b4d02465387267147c3f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079706572662e737667\"></a>\n<a href=\"https://travis-ci.org/vstinner/pyperf\" rel=\"nofollow\"><img alt=\"Build status of pyperf on Travis CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e4c1b0d44a06d0544b7b0b5bf6596b9729b0ce87/68747470733a2f2f7472617669732d63692e6f72672f767374696e6e65722f7079706572662e7376673f6272616e63683d6d6173746572\"></a>\n<p>The Python <tt>pyperf</tt> module is a toolkit to write, run and analyze benchmarks.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Simple API to run reliable benchmarks</li>\n<li>Automatically calibrate a benchmark for a time budget.</li>\n<li>Spawn multiple worker processes.</li>\n<li>Compute the mean and standard deviation.</li>\n<li>Detect if a benchmark result seems unstable.</li>\n<li>JSON format to store benchmark results.</li>\n<li>Support multiple units: seconds, bytes and integer.</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To <a href=\"https://pyperf.readthedocs.io/en/latest/run_benchmark.html\" rel=\"nofollow\">run a benchmark</a> use the <tt>pyperf timeit</tt> command (result written into\n<tt>bench.json</tt>):</p>\n<pre>$ python3 -m pyperf timeit '[1,2]*1000' -o bench.json\n.....................\nMean +- std dev: 4.22 us +- 0.08 us\n</pre>\n<p>Or write a benchmark script <tt>bench.py</tt>:</p>\n<pre><span class=\"ch\">#!/usr/bin/env python3</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyperf</span>\n\n<span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">pyperf</span><span class=\"o\">.</span><span class=\"n\">Runner</span><span class=\"p\">()</span>\n<span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">timeit</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"sort a sorted list\"</span><span class=\"p\">,</span>\n              <span class=\"n\">stmt</span><span class=\"o\">=</span><span class=\"s2\">\"sorted(s, key=f)\"</span><span class=\"p\">,</span>\n              <span class=\"n\">setup</span><span class=\"o\">=</span><span class=\"s2\">\"f = lambda x: x; s = list(range(1000))\"</span><span class=\"p\">)</span>\n</pre>\n<p>See <a href=\"http://pyperf.readthedocs.io/en/latest/api.html#Runner.timeit\" rel=\"nofollow\">the API docs</a> for full details on the <tt>timeit</tt> function and the\n<tt>Runner</tt> class. To run the script and dump the results into a file named\n<tt>bench.json</tt>:</p>\n<pre>$ python3 bench.py -o bench.json\n</pre>\n<p>To <a href=\"https://pyperf.readthedocs.io/en/latest/analyze.html\" rel=\"nofollow\">analyze benchmark results</a> use the <tt>pyperf stats</tt> command:</p>\n<pre>$ python3 -m pyperf stats bench.json\nTotal duration: 29.2 sec\nStart date: 2016-10-21 03:14:19\nEnd date: 2016-10-21 03:14:53\nRaw value minimum: 177 ms\nRaw value maximum: 183 ms\n\nNumber of calibration run: 1\nNumber of run with values: 40\nTotal number of run: 41\n\nNumber of warmup per run: 1\nNumber of value per run: 3\nLoop iterations per value: 8\nTotal number of values: 120\n\nMinimum:         22.1 ms\nMedian +- MAD:   22.5 ms +- 0.1 ms\nMean +- std dev: 22.5 ms +- 0.2 ms\nMaximum:         22.9 ms\n\n  0th percentile: 22.1 ms (-2% of the mean) -- minimum\n  5th percentile: 22.3 ms (-1% of the mean)\n 25th percentile: 22.4 ms (-1% of the mean) -- Q1\n 50th percentile: 22.5 ms (-0% of the mean) -- median\n 75th percentile: 22.7 ms (+1% of the mean) -- Q3\n 95th percentile: 22.9 ms (+2% of the mean)\n100th percentile: 22.9 ms (+2% of the mean) -- maximum\n\nNumber of outlier (out of 22.0 ms..23.0 ms): 0\n</pre>\n<p>There\u2019s also:</p>\n<ul>\n<li><p><tt>pyperf compare_to</tt> command tests if a difference is\nsignificant. It supports comparison between multiple benchmark suites (made\nof multiple benchmarks)</p>\n<pre>$ python3 -m pyperf compare_to py36.json py38.json --table\n+-----------+---------+------------------------------+\n| Benchmark | py36    | py38                         |\n+===========+=========+==============================+\n| timeit    | 4.70 us | 4.22 us: 1.11x faster (-10%) |\n+-----------+---------+------------------------------+\n</pre>\n</li>\n<li><p><tt>pyperf system tune</tt> command to tune your system to run stable benchmarks.</p>\n</li>\n<li><p>Automatically collect metadata on the computer and the benchmark:\nuse the <tt>pyperf metadata</tt> command to display them, or the\n<tt>pyperf collect_metadata</tt> command to manually collect them.</p>\n</li>\n<li><p><tt><span class=\"pre\">--track-memory</span></tt> and <tt><span class=\"pre\">--tracemalloc</span></tt> options to track\nthe memory usage of a benchmark.</p>\n</li>\n</ul>\n</div>\n<div id=\"quick-links\">\n<h2>Quick Links</h2>\n<ul>\n<li><a href=\"https://pyperf.readthedocs.io/\" rel=\"nofollow\">pyperf documentation</a></li>\n<li><a href=\"https://github.com/vstinner/pyperf\" rel=\"nofollow\">pyperf project homepage at GitHub</a> (code, bugs)</li>\n<li><a href=\"https://pypi.python.org/pypi/pyperf\" rel=\"nofollow\">Download latest pyperf release at the Python Cheeseshop (PyPI)</a></li>\n</ul>\n<p>Command to install pyperf on Python 3:</p>\n<pre>python3 -m pip install pyperf\n</pre>\n<p>pyperf requires Python 3.6 or newer. It is distributed under the MIT license.</p>\n</div>\n\n          </div>"}, "last_serial": 7180766, "releases": {"1.6.1": [{"comment_text": "", "digests": {"md5": "8ee00140e5a268b63eb7ddd0ef1973be", "sha256": "b9074a5e16e526ebe260922005ee96b67621ce804efd3e8dd49de49b513397a8"}, "downloads": -1, "filename": "pyperf-1.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8ee00140e5a268b63eb7ddd0ef1973be", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 87633, "upload_time": "2019-05-21T23:23:06", "upload_time_iso_8601": "2019-05-21T23:23:06.246413Z", "url": "https://files.pythonhosted.org/packages/7f/34/12f4f27e43ed9d2269162fbb07005a08b45b6ed275a0e50cc3afda84af76/pyperf-1.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d67fe5f447963da8873f3e9923f76de1", "sha256": "8d0143a22a13ee10c997a648f30b82cdc40175d5a20b11055ae058a82e45d371"}, "downloads": -1, "filename": "pyperf-1.6.1.tar.gz", "has_sig": false, "md5_digest": "d67fe5f447963da8873f3e9923f76de1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 174419, "upload_time": "2019-05-21T23:23:09", "upload_time_iso_8601": "2019-05-21T23:23:09.811369Z", "url": "https://files.pythonhosted.org/packages/ca/f8/885eb690f4098cd1c9b473f4b877b4aa8e0551b57a963ac36621737f3c65/pyperf-1.6.1.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "615a7d82bd8702c26459ae5c8cb22b1f", "sha256": "d512f79868b45ebe9b5dca60a0b0e89c29609de49303a93dbedc02f6316e6c05"}, "downloads": -1, "filename": "pyperf-1.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "615a7d82bd8702c26459ae5c8cb22b1f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 87788, "upload_time": "2019-12-17T21:12:06", "upload_time_iso_8601": "2019-12-17T21:12:06.855335Z", "url": "https://files.pythonhosted.org/packages/f0/25/b1dfb25b64808deaf4a7f5b5ccedf8e8234e009f3c66d5d0dac86d195064/pyperf-1.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e30b67b62a4e30e4504352d0778c622c", "sha256": "0d214aa65e085d3e4108a36152cb12f7cd0f4e7fda93b5134b43a9687c975786"}, "downloads": -1, "filename": "pyperf-1.7.0.tar.gz", "has_sig": false, "md5_digest": "e30b67b62a4e30e4504352d0778c622c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 174678, "upload_time": "2019-12-17T21:12:09", "upload_time_iso_8601": "2019-12-17T21:12:09.424809Z", "url": "https://files.pythonhosted.org/packages/04/6a/8efd2be0f883e5cef006db69e14224b49b2df57633b759ee5c8fee9f3017/pyperf-1.7.0.tar.gz", "yanked": false}], "1.7.1": [{"comment_text": "", "digests": {"md5": "0d7bfdc14f2b49a582eae85b4a9e5a89", "sha256": "893ec2ebccb7b544e55fcf93e8efbc7d8ebbc7b59cf91139907cc0cdb3d68c1c"}, "downloads": -1, "filename": "pyperf-1.7.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0d7bfdc14f2b49a582eae85b4a9e5a89", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 87853, "upload_time": "2020-03-09T16:07:26", "upload_time_iso_8601": "2020-03-09T16:07:26.858717Z", "url": "https://files.pythonhosted.org/packages/d1/a3/624b96d449cff918925879034ade5fd90af4b0480122f1eeebb035fd4269/pyperf-1.7.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9e894dc843bb7f0abff109931a29895", "sha256": "c37690e810116a83a244dfeec47885e2f0475b4c450313904be3bc2cdaf6d50a"}, "downloads": -1, "filename": "pyperf-1.7.1.tar.gz", "has_sig": false, "md5_digest": "d9e894dc843bb7f0abff109931a29895", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 174838, "upload_time": "2020-03-09T16:07:28", "upload_time_iso_8601": "2020-03-09T16:07:28.591387Z", "url": "https://files.pythonhosted.org/packages/0e/68/605d68755c8c5d88c7c1c798b6b82f8c13d8435c8ef1cb224c436811b99b/pyperf-1.7.1.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "95ab6b557e92f3a19b3b7497c56bc26b", "sha256": "839192bafba79893fd2ec51d346561ac951d304ef03069faeecec063a58aff52"}, "downloads": -1, "filename": "pyperf-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "95ab6b557e92f3a19b3b7497c56bc26b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 85509, "upload_time": "2020-03-19T14:24:40", "upload_time_iso_8601": "2020-03-19T14:24:40.755056Z", "url": "https://files.pythonhosted.org/packages/95/76/8a6d15e652d0c1bce48562b4f08215d8406497312ca52f4a1ee6bf438023/pyperf-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f62d3f6fc5475138791d3d883fdf4cd", "sha256": "2189fbc4af08d519f85468e70e32c902eab0f1341b2c41028b94b2832d3169a7"}, "downloads": -1, "filename": "pyperf-2.0.0.tar.gz", "has_sig": false, "md5_digest": "7f62d3f6fc5475138791d3d883fdf4cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 173007, "upload_time": "2020-03-19T14:24:42", "upload_time_iso_8601": "2020-03-19T14:24:42.780250Z", "url": "https://files.pythonhosted.org/packages/84/49/8a5fb8eed0c600e763b33b6d4e62ffc7b0b9b13b03a69e7969fea5985f3a/pyperf-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "95ab6b557e92f3a19b3b7497c56bc26b", "sha256": "839192bafba79893fd2ec51d346561ac951d304ef03069faeecec063a58aff52"}, "downloads": -1, "filename": "pyperf-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "95ab6b557e92f3a19b3b7497c56bc26b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 85509, "upload_time": "2020-03-19T14:24:40", "upload_time_iso_8601": "2020-03-19T14:24:40.755056Z", "url": "https://files.pythonhosted.org/packages/95/76/8a6d15e652d0c1bce48562b4f08215d8406497312ca52f4a1ee6bf438023/pyperf-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f62d3f6fc5475138791d3d883fdf4cd", "sha256": "2189fbc4af08d519f85468e70e32c902eab0f1341b2c41028b94b2832d3169a7"}, "downloads": -1, "filename": "pyperf-2.0.0.tar.gz", "has_sig": false, "md5_digest": "7f62d3f6fc5475138791d3d883fdf4cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 173007, "upload_time": "2020-03-19T14:24:42", "upload_time_iso_8601": "2020-03-19T14:24:42.780250Z", "url": "https://files.pythonhosted.org/packages/84/49/8a5fb8eed0c600e763b33b6d4e62ffc7b0b9b13b03a69e7969fea5985f3a/pyperf-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:43 2020"}