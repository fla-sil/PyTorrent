{"info": {"author": "Robin Thomas", "author_email": "rthomas900@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Office/Business :: Financial :: Spreadsheet", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "gspread-formatting\n------------------\n\n.. image:: https://badge.fury.io/py/gspread-formatting.svg\n    :target: https://badge.fury.io/py/gspread-formatting\n\n.. image:: https://travis-ci.org/robin900/gspread-formatting.svg?branch=master\n    :target: https://travis-ci.org/robin900/gspread-formatting\n\nThis package provides complete cell formatting for Google spreadsheets\nusing the popular ``gspread`` package, along with a few related features such as setting\n\"frozen\" rows and columns in a worksheet. Both basic and conditional formatting operations\nare supported.\n\nThe package also offers graceful formatting of Google spreadsheets using a Pandas DataFrame.\nSee the section below for usage and details.\n\nUsage\n~~~~~\n\nBasic formatting of a range of cells in a worksheet is offered by the ``format_cell_range`` function. \nAll basic formatting components of the v4 Sheets API's ``CellFormat`` are present as classes \nin the ``gspread_formatting`` module, available both by ``InitialCaps`` names and ``camelCase`` names: \nfor example, the background color class is ``BackgroundColor`` but is also available as \n``backgroundColor``, while the color class is ``Color`` but available also as ``color``. \nAttributes of formatting components are best specified as keyword arguments using ``camelCase`` \nnaming, e.g. ``backgroundColor=...``. Complex formats may be composed easily, by nesting the calls to the classes.  \n\nSee `the CellFormat page of the Sheets API documentation <https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets#CellFormat>`_\nto learn more about each formatting component.::\n\n    from gspread_formatting import *\n\n    fmt = cellFormat(\n        backgroundColor=color(1, 0.9, 0.9),\n        textFormat=textFormat(bold=True, foregroundColor=color(1, 0, 1)),\n        horizontalAlignment='CENTER'\n        )\n\n    format_cell_range(worksheet, 'A1:J1', fmt)\n\nThe ``format_cell_ranges`` function allows for formatting multiple ranges with corresponding formats,\nall in one function call and Sheets API operation::\n\n    fmt = cellFormat(\n        backgroundColor=color(1, 0.9, 0.9),\n        textFormat=textFormat(bold=True, foregroundColor=color(1, 0, 1)),\n        horizontalAlignment='CENTER'\n        )\n\n    fmt2 = cellFormat(\n        backgroundColor=color(0.9, 0.9, 0.9),\n        horizontalAlignment='RIGHT'\n        )\n\n    format_cell_ranges(worksheet, [('A1:J1', fmt), ('K1:K200', fmt2)])\n\nSpecifying Cell Ranges\n~~~~~~~~~~~~~~~~~~~~~~\n\nThe `format_cell_range` function and friends allow a string to specify a cell range using the \"A1\" convention\nto name a column-and-row cell address with column letter and row number; in addition, one may specify\nan entire column or column range with unbounded rows, or an entire row or row range with unbounded columns,\nor a combination thereof. Here are some examples::\n\n    A1     # column A row 1\n    A1:A2  # column A, rows 1-2\n    A      # entire column A, rows unbounded\n    A:A    # entire column A, rows unbounded\n    A:C    # entire columns A through C\n    A:B100 # columns A and B, unbounded start through row 100\n    A100:B # columns A and B, from row 100 with unbounded end \n    1:3    # entire rows 1 through 3, all columns\n    1      # entire row 1\n\n\nRetrieving, Comparing, and Composing CellFormats\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nA Google spreadsheet's own default format, as a CellFormat object, is available via ``get_default_format(spreadsheet)``.\n``get_effective_format(worksheet, label)`` and ``get_user_entered_format(worksheet, label)`` also will return\nfor any provided cell label either a CellFormat object (if any formatting is present) or None.\n\n``CellFormat`` objects are comparable with ``==`` and ``!=``, and are mutable at all times; \nthey can be safely copied with Python's ``copy.deepcopy`` function. ``CellFormat`` objects can be combined\ninto a new ``CellFormat`` object using the ``add`` method (or ``+`` operator). ``CellFormat`` objects also offer \n``difference`` and ``intersection`` methods, as well as the corresponding\noperators ``-`` (for difference) and ``&`` (for intersection).::\n\n    >>> default_format = CellFormat(backgroundColor=color(1,1,1), textFormat=textFormat(bold=True))\n    >>> user_format = CellFormat(textFormat=textFormat(italic=True))\n    >>> effective_format = default_format + user_format\n    >>> effective_format\n    CellFormat(backgroundColor=color(1,1,1), textFormat=textFormat(bold=True, italic=True))\n    >>> effective_format - user_format \n    CellFormat(backgroundColor=color(1,1,1), textFormat=textFormat(bold=True))\n    >>> effective_format - user_format == default_format\n    True\n\nFrozen Rows and Columns\n~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following functions get or set \"frozen\" row or column counts for a worksheet::\n\n    get_frozen_row_count(worksheet)\n    get_frozen_column_count(worksheet)\n    set_frozen(worksheet, rows=1)\n    set_frozen(worksheet, cols=1)\n    set_frozen(worksheet, rows=1, cols=0)\n\nSetting Row Heights and Column Widths\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following functions set the height (in pixels) of rows or width (in pixels) of columns::\n\n    set_row_height(worksheet, 1, 42)\n    set_row_height(worksheet, '1:100', 42)\n    set_row_heights(worksheet, [ ('1:100', 42), ('101:', 22) ])\n    set_column_width(worksheet, 'A', 190)\n    set_column_width(worksheet, 'A:D', 100)\n    set_column_widths(worksheet, [ ('A', 200), ('B:', 100) ])\n\nGetting and Setting Data Validation Rules for Cells and Cell Ranges\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following functions get or set the \"data validation rule\" for a cell or cell range::\n\n    get_data_validation_rule(worksheet, label)\n    set_data_validation_for_cell_range(worksheet, range, rule)\n    set_data_validation_for_cell_ranges(worksheet, ranges)\n\nThe full functionality of data validation rules is supported: all of ``BooleanCondition``. \nSee `the API documentation <https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/cells#DataValidationRule>`_\nfor more information. Here's a short example::\n\n    validation_rule = DataValidationRule(\n        BooleanCondition('ONE_OF_LIST', ['1', '2', '3', '4']),\n        showCustomUi=True\n    )\n    set_data_validation_for_cell_range(worksheet, 'A2:D2', validation_rule)\n    # data validation for A2\n    eff_rule = get_data_validation_rule(worksheet, 'A2')\n    eff_rule.condition.type\n    >>> 'ONE_OF_LIST'\n    eff_rule.showCustomUi\n    >>> True\n    # No data validation for A1\n    eff_rule = get_data_validation_rule(worksheet, 'A1')\n    eff_rule\n    >>> None\n\nConditional Formatting Rules\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nConditional format rules are supported by this package! See the `Conditional Format Rules docs <./CONDITIONALS.rst>`_.\n\nFormatting a Worksheet Using a Pandas DataFrame\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you are using Pandas DataFrames to provide data to a Google spreadsheet -- using perhaps\nthe ``gspread-dataframe`` package `available on PyPI <https://pypi.org/project/gspread-dataframe/>`_ --\nthe ``format_with_dataframe`` function in ``gspread_formatting.dataframe`` allows you to use that same \nDataFrame object and specify formatting for a worksheet. There is a ``DEFAULT_FORMATTER`` in the module,\nwhich will be used if no formatter object is provided to ``format_with_dataframe``::\n\n    from gspread_formatting.dataframe import format_with_dataframe, BasicFormatter\n    from gspread_formatting import Color\n\n    # uses DEFAULT_FORMATTER\n    format_with_dataframe(worksheet, dataframe, include_index=True, include_column_header=True)\n\n    formatter = BasicFormatter(\n        header_background_color=Color(0,0,0), \n        header_text_color=Color(1,1,1),\n        decimal_format='#,##0.00'\n    )\n\n    format_with_dataframe(worksheet, dataframe, formatter, include_index=False, include_column_header=True)\n\nInstallation\n------------\n\nRequirements\n~~~~~~~~~~~~\n\n* Python 2.6+ or Python 3+\n* gspread >= 3.0.0\n\nFrom PyPI\n~~~~~~~~~\n\n::\n\n    pip install gspread-formatting\n\nFrom GitHub\n~~~~~~~~~~~\n\n::\n\n    git clone https://github.com/robin900/gspread-formatting.git\n    cd gspread-formatting\n    python setup.py install\n\nDevelopment and Testing\n-----------------------\n\nInstall packages listed in ``requirements-dev.txt``. To run the test suite\nin ``test.py`` you will need to:\n\n* Authorize as the Google account you wish to use as a test, and download\n  a JSON file containing the credentials. Name the file ``creds.json``\n  and locate it in the top-level folder of the repository.\n* Set up a ``tests.config`` file using the ``tests.config.example`` file as a template.\n  Specify the ID of a spreadsheet that the Google account you are using\n  can access with write privileges.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/robin900/gspread-formatting", "keywords": "spreadsheets,google-spreadsheets,formatting,cell-format", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gspread-formatting", "package_url": "https://pypi.org/project/gspread-formatting/", "platform": "", "project_url": "https://pypi.org/project/gspread-formatting/", "project_urls": {"Homepage": "https://github.com/robin900/gspread-formatting"}, "release_url": "https://pypi.org/project/gspread-formatting/0.2.4/", "requires_dist": ["gspread (>=3.0.0)"], "requires_python": "", "summary": "Apply cell formatting to gspread worksheets", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"gspread-formatting\">\n<h2>gspread-formatting</h2>\n<a href=\"https://badge.fury.io/py/gspread-formatting\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/gspread-formatting.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/572ac0e0ddf75a284187df19cfba91e5483846fd/68747470733a2f2f62616467652e667572792e696f2f70792f677370726561642d666f726d617474696e672e737667\"></a>\n<a href=\"https://travis-ci.org/robin900/gspread-formatting\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/robin900/gspread-formatting.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6981fa147ed6bd00f6f52b37fac1de16c3b793e9/68747470733a2f2f7472617669732d63692e6f72672f726f62696e3930302f677370726561642d666f726d617474696e672e7376673f6272616e63683d6d6173746572\"></a>\n<p>This package provides complete cell formatting for Google spreadsheets\nusing the popular <tt>gspread</tt> package, along with a few related features such as setting\n\u201cfrozen\u201d rows and columns in a worksheet. Both basic and conditional formatting operations\nare supported.</p>\n<p>The package also offers graceful formatting of Google spreadsheets using a Pandas DataFrame.\nSee the section below for usage and details.</p>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Basic formatting of a range of cells in a worksheet is offered by the <tt>format_cell_range</tt> function.\nAll basic formatting components of the v4 Sheets API\u2019s <tt>CellFormat</tt> are present as classes\nin the <tt>gspread_formatting</tt> module, available both by <tt>InitialCaps</tt> names and <tt>camelCase</tt> names:\nfor example, the background color class is <tt>BackgroundColor</tt> but is also available as\n<tt>backgroundColor</tt>, while the color class is <tt>Color</tt> but available also as <tt>color</tt>.\nAttributes of formatting components are best specified as keyword arguments using <tt>camelCase</tt>\nnaming, e.g. <tt><span class=\"pre\">backgroundColor=...</span></tt>. Complex formats may be composed easily, by nesting the calls to the classes.</p>\n<p>See <a href=\"https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets#CellFormat\" rel=\"nofollow\">the CellFormat page of the Sheets API documentation</a>\nto learn more about each formatting component.:</p>\n<pre>from gspread_formatting import *\n\nfmt = cellFormat(\n    backgroundColor=color(1, 0.9, 0.9),\n    textFormat=textFormat(bold=True, foregroundColor=color(1, 0, 1)),\n    horizontalAlignment='CENTER'\n    )\n\nformat_cell_range(worksheet, 'A1:J1', fmt)\n</pre>\n<p>The <tt>format_cell_ranges</tt> function allows for formatting multiple ranges with corresponding formats,\nall in one function call and Sheets API operation:</p>\n<pre>fmt = cellFormat(\n    backgroundColor=color(1, 0.9, 0.9),\n    textFormat=textFormat(bold=True, foregroundColor=color(1, 0, 1)),\n    horizontalAlignment='CENTER'\n    )\n\nfmt2 = cellFormat(\n    backgroundColor=color(0.9, 0.9, 0.9),\n    horizontalAlignment='RIGHT'\n    )\n\nformat_cell_ranges(worksheet, [('A1:J1', fmt), ('K1:K200', fmt2)])\n</pre>\n</div>\n<div id=\"specifying-cell-ranges\">\n<h3>Specifying Cell Ranges</h3>\n<p>The <cite>format_cell_range</cite> function and friends allow a string to specify a cell range using the \u201cA1\u201d convention\nto name a column-and-row cell address with column letter and row number; in addition, one may specify\nan entire column or column range with unbounded rows, or an entire row or row range with unbounded columns,\nor a combination thereof. Here are some examples:</p>\n<pre>A1     # column A row 1\nA1:A2  # column A, rows 1-2\nA      # entire column A, rows unbounded\nA:A    # entire column A, rows unbounded\nA:C    # entire columns A through C\nA:B100 # columns A and B, unbounded start through row 100\nA100:B # columns A and B, from row 100 with unbounded end\n1:3    # entire rows 1 through 3, all columns\n1      # entire row 1\n</pre>\n</div>\n<div id=\"retrieving-comparing-and-composing-cellformats\">\n<h3>Retrieving, Comparing, and Composing CellFormats</h3>\n<p>A Google spreadsheet\u2019s own default format, as a CellFormat object, is available via <tt>get_default_format(spreadsheet)</tt>.\n<tt>get_effective_format(worksheet, label)</tt> and <tt>get_user_entered_format(worksheet, label)</tt> also will return\nfor any provided cell label either a CellFormat object (if any formatting is present) or None.</p>\n<p><tt>CellFormat</tt> objects are comparable with <tt>==</tt> and <tt>!=</tt>, and are mutable at all times;\nthey can be safely copied with Python\u2019s <tt>copy.deepcopy</tt> function. <tt>CellFormat</tt> objects can be combined\ninto a new <tt>CellFormat</tt> object using the <tt>add</tt> method (or <tt>+</tt> operator). <tt>CellFormat</tt> objects also offer\n<tt>difference</tt> and <tt>intersection</tt> methods, as well as the corresponding\noperators <tt>-</tt> (for difference) and <tt>&amp;</tt> (for intersection).:</p>\n<pre>&gt;&gt;&gt; default_format = CellFormat(backgroundColor=color(1,1,1), textFormat=textFormat(bold=True))\n&gt;&gt;&gt; user_format = CellFormat(textFormat=textFormat(italic=True))\n&gt;&gt;&gt; effective_format = default_format + user_format\n&gt;&gt;&gt; effective_format\nCellFormat(backgroundColor=color(1,1,1), textFormat=textFormat(bold=True, italic=True))\n&gt;&gt;&gt; effective_format - user_format\nCellFormat(backgroundColor=color(1,1,1), textFormat=textFormat(bold=True))\n&gt;&gt;&gt; effective_format - user_format == default_format\nTrue\n</pre>\n</div>\n<div id=\"frozen-rows-and-columns\">\n<h3>Frozen Rows and Columns</h3>\n<p>The following functions get or set \u201cfrozen\u201d row or column counts for a worksheet:</p>\n<pre>get_frozen_row_count(worksheet)\nget_frozen_column_count(worksheet)\nset_frozen(worksheet, rows=1)\nset_frozen(worksheet, cols=1)\nset_frozen(worksheet, rows=1, cols=0)\n</pre>\n</div>\n<div id=\"setting-row-heights-and-column-widths\">\n<h3>Setting Row Heights and Column Widths</h3>\n<p>The following functions set the height (in pixels) of rows or width (in pixels) of columns:</p>\n<pre>set_row_height(worksheet, 1, 42)\nset_row_height(worksheet, '1:100', 42)\nset_row_heights(worksheet, [ ('1:100', 42), ('101:', 22) ])\nset_column_width(worksheet, 'A', 190)\nset_column_width(worksheet, 'A:D', 100)\nset_column_widths(worksheet, [ ('A', 200), ('B:', 100) ])\n</pre>\n</div>\n<div id=\"getting-and-setting-data-validation-rules-for-cells-and-cell-ranges\">\n<h3>Getting and Setting Data Validation Rules for Cells and Cell Ranges</h3>\n<p>The following functions get or set the \u201cdata validation rule\u201d for a cell or cell range:</p>\n<pre>get_data_validation_rule(worksheet, label)\nset_data_validation_for_cell_range(worksheet, range, rule)\nset_data_validation_for_cell_ranges(worksheet, ranges)\n</pre>\n<p>The full functionality of data validation rules is supported: all of <tt>BooleanCondition</tt>.\nSee <a href=\"https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/cells#DataValidationRule\" rel=\"nofollow\">the API documentation</a>\nfor more information. Here\u2019s a short example:</p>\n<pre>validation_rule = DataValidationRule(\n    BooleanCondition('ONE_OF_LIST', ['1', '2', '3', '4']),\n    showCustomUi=True\n)\nset_data_validation_for_cell_range(worksheet, 'A2:D2', validation_rule)\n# data validation for A2\neff_rule = get_data_validation_rule(worksheet, 'A2')\neff_rule.condition.type\n&gt;&gt;&gt; 'ONE_OF_LIST'\neff_rule.showCustomUi\n&gt;&gt;&gt; True\n# No data validation for A1\neff_rule = get_data_validation_rule(worksheet, 'A1')\neff_rule\n&gt;&gt;&gt; None\n</pre>\n</div>\n<div id=\"conditional-formatting-rules\">\n<h3>Conditional Formatting Rules</h3>\n<p>Conditional format rules are supported by this package! See the <a href=\"./CONDITIONALS.rst\" rel=\"nofollow\">Conditional Format Rules docs</a>.</p>\n</div>\n<div id=\"formatting-a-worksheet-using-a-pandas-dataframe\">\n<h3>Formatting a Worksheet Using a Pandas DataFrame</h3>\n<p>If you are using Pandas DataFrames to provide data to a Google spreadsheet \u2013 using perhaps\nthe <tt><span class=\"pre\">gspread-dataframe</span></tt> package <a href=\"https://pypi.org/project/gspread-dataframe/\" rel=\"nofollow\">available on PyPI</a> \u2013\nthe <tt>format_with_dataframe</tt> function in <tt>gspread_formatting.dataframe</tt> allows you to use that same\nDataFrame object and specify formatting for a worksheet. There is a <tt>DEFAULT_FORMATTER</tt> in the module,\nwhich will be used if no formatter object is provided to <tt>format_with_dataframe</tt>:</p>\n<pre>from gspread_formatting.dataframe import format_with_dataframe, BasicFormatter\nfrom gspread_formatting import Color\n\n# uses DEFAULT_FORMATTER\nformat_with_dataframe(worksheet, dataframe, include_index=True, include_column_header=True)\n\nformatter = BasicFormatter(\n    header_background_color=Color(0,0,0),\n    header_text_color=Color(1,1,1),\n    decimal_format='#,##0.00'\n)\n\nformat_with_dataframe(worksheet, dataframe, formatter, include_index=False, include_column_header=True)\n</pre>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li>Python 2.6+ or Python 3+</li>\n<li>gspread &gt;= 3.0.0</li>\n</ul>\n</div>\n<div id=\"from-pypi\">\n<h3>From PyPI</h3>\n<pre>pip install gspread-formatting\n</pre>\n</div>\n<div id=\"from-github\">\n<h3>From GitHub</h3>\n<pre>git clone https://github.com/robin900/gspread-formatting.git\ncd gspread-formatting\npython setup.py install\n</pre>\n</div>\n</div>\n<div id=\"development-and-testing\">\n<h2>Development and Testing</h2>\n<p>Install packages listed in <tt><span class=\"pre\">requirements-dev.txt</span></tt>. To run the test suite\nin <tt>test.py</tt> you will need to:</p>\n<ul>\n<li>Authorize as the Google account you wish to use as a test, and download\na JSON file containing the credentials. Name the file <tt>creds.json</tt>\nand locate it in the top-level folder of the repository.</li>\n<li>Set up a <tt>tests.config</tt> file using the <tt>tests.config.example</tt> file as a template.\nSpecify the ID of a spreadsheet that the Google account you are using\ncan access with write privileges.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 7165758, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3e488df502459749a923589379b4c3c6", "sha256": "418fd63ed96a6f69d74753018e8e1a18aef6dcaf3f9c80f09b8afc2e02c01059"}, "downloads": -1, "filename": "gspread_formatting-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3e488df502459749a923589379b4c3c6", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 7073, "upload_time": "2018-07-20T14:39:36", "upload_time_iso_8601": "2018-07-20T14:39:36.551636Z", "url": "https://files.pythonhosted.org/packages/29/57/eaaab16b0571d03a630f83e9926268e938b42bb2d921e6ef6a82f33b85b8/gspread_formatting-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8358cc08d815302aeba2ee0e203ed04", "sha256": "9b7b3e3faf609f0bd68012a40c9aa36844d822410661f2dfef8b05b4f4f4263e"}, "downloads": -1, "filename": "gspread-formatting-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e8358cc08d815302aeba2ee0e203ed04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6091, "upload_time": "2018-07-20T14:39:35", "upload_time_iso_8601": "2018-07-20T14:39:35.344408Z", "url": "https://files.pythonhosted.org/packages/d8/9b/45442cc53a3e971589a16ef5f9d682f1af51bb8836dbbb71686c0dc6a1d4/gspread-formatting-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "5db252795fb382c2c6b4994a2b4efe5d", "sha256": "c9e948623e6a91eaea26096ca1ebf8263a7723a7cd476c7670c4c58615132261"}, "downloads": -1, "filename": "gspread_formatting-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5db252795fb382c2c6b4994a2b4efe5d", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 7464, "upload_time": "2018-07-23T18:17:11", "upload_time_iso_8601": "2018-07-23T18:17:11.230765Z", "url": "https://files.pythonhosted.org/packages/30/06/4e76a37c5a1e59f1d106312c6b841d8e39d90ea91344f39b793fb371ee8b/gspread_formatting-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f741f9a160a7ba5e61c8fbaa857ab39c", "sha256": "2e7001c438b0bf36f469104a3d1ecee68f322bdbdbcb3006f3b8d884aa4b7f76"}, "downloads": -1, "filename": "gspread-formatting-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f741f9a160a7ba5e61c8fbaa857ab39c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6541, "upload_time": "2018-07-23T18:17:09", "upload_time_iso_8601": "2018-07-23T18:17:09.849623Z", "url": "https://files.pythonhosted.org/packages/7f/ee/1495b86934b2f44a0d8c754a4437f77c7ce9a95edfc333ef50dc01a80eb8/gspread-formatting-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "f03cf883a8e336d61160f9da1c6f3ffb", "sha256": "fd060d06282402059f9f3a08247362ea831886db507d6198674fee15abe43735"}, "downloads": -1, "filename": "gspread_formatting-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f03cf883a8e336d61160f9da1c6f3ffb", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 10190, "upload_time": "2018-08-24T13:54:13", "upload_time_iso_8601": "2018-08-24T13:54:13.747270Z", "url": "https://files.pythonhosted.org/packages/be/df/0d49b776d2bf9069f1441eebb6252aed8762d72524ae98252130f181e754/gspread_formatting-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b98525db36a8e6de60cc88fa2a71c6e0", "sha256": "8883fdd70fe7bbbe97f3f50eec63a68abba91b4bbe75a22d8547e618c33b028b"}, "downloads": -1, "filename": "gspread-formatting-0.0.3.tar.gz", "has_sig": false, "md5_digest": "b98525db36a8e6de60cc88fa2a71c6e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6873, "upload_time": "2018-08-24T13:54:12", "upload_time_iso_8601": "2018-08-24T13:54:12.398722Z", "url": "https://files.pythonhosted.org/packages/4d/2d/82084d7ebac7575b5086223f9af0ac80c5300e832948f2d2ff2c2d63f11b/gspread-formatting-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "6a5a693c805ffcbc80da70ae914e2b70", "sha256": "90069d321d1e8b1ca4b325cfaa3028167df192b1391634d42796ca26ba956d9f"}, "downloads": -1, "filename": "gspread_formatting-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6a5a693c805ffcbc80da70ae914e2b70", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11603, "upload_time": "2019-03-26T14:00:18", "upload_time_iso_8601": "2019-03-26T14:00:18.135420Z", "url": "https://files.pythonhosted.org/packages/c5/aa/3e9de77985a55137543ca4fab14a5e16a847ef48041213e89f1c994fdbaa/gspread_formatting-0.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89431761c7b19385cf7b54e00e877783", "sha256": "973ccc4e2437b2e82bfbe1f823690c408b14228a6a32e4f3359cc0cdec62ebe1"}, "downloads": -1, "filename": "gspread-formatting-0.0.4.tar.gz", "has_sig": false, "md5_digest": "89431761c7b19385cf7b54e00e877783", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4091, "upload_time": "2019-03-26T14:00:19", "upload_time_iso_8601": "2019-03-26T14:00:19.985052Z", "url": "https://files.pythonhosted.org/packages/fa/41/13fc1f2d4018bbc576a2e76d50fee84ed1d6c34b341ced6619b8ba5061d0/gspread-formatting-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "ce83b40b7c743dc46ba982be748813a1", "sha256": "cf205e193696e1c7d05dc9f8e5174279a40116dba540f65e1c72f33267a8618e"}, "downloads": -1, "filename": "gspread_formatting-0.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ce83b40b7c743dc46ba982be748813a1", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11603, "upload_time": "2019-04-30T13:50:42", "upload_time_iso_8601": "2019-04-30T13:50:42.898576Z", "url": "https://files.pythonhosted.org/packages/77/3c/b25a02573f6ab57fbe20264fd0be15f835f733c881b1376eb59da8e59382/gspread_formatting-0.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "708eb34575036d175c22731fe1198c2a", "sha256": "4c5b8fb707ad117b253ba4fdce89aa63f77ca92737e3f41f5782379cd40d8977"}, "downloads": -1, "filename": "gspread-formatting-0.0.5.tar.gz", "has_sig": false, "md5_digest": "708eb34575036d175c22731fe1198c2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4098, "upload_time": "2019-04-30T13:50:40", "upload_time_iso_8601": "2019-04-30T13:50:40.190163Z", "url": "https://files.pythonhosted.org/packages/74/95/1ae2556f7b4460edc849b6838fe2363272d30d6a81bb2b386918eceaf630/gspread-formatting-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "340b64bf7645bb93f24fa36416acd896", "sha256": "398ec316e91c4f2125765972df837214f5e1649d0736ff7e971eb17d4d87d1a6"}, "downloads": -1, "filename": "gspread_formatting-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "340b64bf7645bb93f24fa36416acd896", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11602, "upload_time": "2019-04-30T14:25:48", "upload_time_iso_8601": "2019-04-30T14:25:48.459029Z", "url": "https://files.pythonhosted.org/packages/ca/47/5c25ab77cd3b4c7fe1abe29ffe1c29f47521e2a1a5286fe9349be1aba28b/gspread_formatting-0.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54824b9f08db3076f409f94dc711041e", "sha256": "f29f348cc3be6d3f613ac7664cf4b6eb4c41759906684bed41e53ac54f7b712a"}, "downloads": -1, "filename": "gspread-formatting-0.0.6.tar.gz", "has_sig": false, "md5_digest": "54824b9f08db3076f409f94dc711041e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4096, "upload_time": "2019-04-30T14:25:46", "upload_time_iso_8601": "2019-04-30T14:25:46.410801Z", "url": "https://files.pythonhosted.org/packages/21/2d/e83202da8c3cb9d4474eb2b2b54d51037b3795cbaa28cc0a0148ddd14d66/gspread-formatting-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "a4f3fcbe2de91d0c52f06bb4839fd790", "sha256": "8e62254ef630b64f55ffd12ff0659355d61fca3197c4396126b5a056364e16cd"}, "downloads": -1, "filename": "gspread_formatting-0.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a4f3fcbe2de91d0c52f06bb4839fd790", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11720, "upload_time": "2019-08-20T15:28:41", "upload_time_iso_8601": "2019-08-20T15:28:41.014779Z", "url": "https://files.pythonhosted.org/packages/a0/c0/eeda413d0ca4355227705d59126075abd127aec2b5e85b16e0b03f56616f/gspread_formatting-0.0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7efa368ee976a020099af2a620647f6f", "sha256": "92122165af5e4d3b75140fd9afa43a13472635d757a291ffc6ee451211eab500"}, "downloads": -1, "filename": "gspread-formatting-0.0.7.tar.gz", "has_sig": false, "md5_digest": "7efa368ee976a020099af2a620647f6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13230, "upload_time": "2019-08-20T15:28:42", "upload_time_iso_8601": "2019-08-20T15:28:42.216905Z", "url": "https://files.pythonhosted.org/packages/d0/c6/2da11a48d3cc554b526d954ac7c17116a852cd61c14b5fe30c84f30b1895/gspread-formatting-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "5ee87ea7fcb7419a59160e42bb0aa868", "sha256": "0822177c858df71d314842ae9cd662babb3be80c91ce7a179086c741c2dcd931"}, "downloads": -1, "filename": "gspread_formatting-0.0.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5ee87ea7fcb7419a59160e42bb0aa868", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11872, "upload_time": "2020-02-06T15:58:11", "upload_time_iso_8601": "2020-02-06T15:58:11.921322Z", "url": "https://files.pythonhosted.org/packages/bf/fb/1ffaf96e6df663f44470c52f57bb3ac52490ad464d7f48eef74fdad75eb1/gspread_formatting-0.0.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e0872a2b50a38446875d9fdbf00ba55", "sha256": "b6c65a38db13838b0f5828a6d3a0a5c195fcf56969a41686fcf027632d6a7a6b"}, "downloads": -1, "filename": "gspread-formatting-0.0.8.tar.gz", "has_sig": false, "md5_digest": "5e0872a2b50a38446875d9fdbf00ba55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11178, "upload_time": "2020-02-06T15:58:13", "upload_time_iso_8601": "2020-02-06T15:58:13.561524Z", "url": "https://files.pythonhosted.org/packages/2e/e7/a2c94d5743171fb9d8121a651cb7d23fbad10080ab411625d0a19a711900/gspread-formatting-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "482999573bc7557e4db22b6e2518d961", "sha256": "0385bcab7cff26f9119626f803afdb44233f596ba70fb3ae00b61bd07d341e8f"}, "downloads": -1, "filename": "gspread_formatting-0.0.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "482999573bc7557e4db22b6e2518d961", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15697, "upload_time": "2020-02-09T18:36:29", "upload_time_iso_8601": "2020-02-09T18:36:29.875574Z", "url": "https://files.pythonhosted.org/packages/0a/85/4e535b7b67894d6cef58d3e8c0d0b403ed4feadb9fc505071b2c185bffd1/gspread_formatting-0.0.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3dafcb82c483b3a96b67ab2d09c194c5", "sha256": "ae0242e629720044b148478407ccc28c25f0df81b8724cc6af7d551db71203fd"}, "downloads": -1, "filename": "gspread-formatting-0.0.9.tar.gz", "has_sig": false, "md5_digest": "3dafcb82c483b3a96b67ab2d09c194c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13748, "upload_time": "2020-02-09T18:36:32", "upload_time_iso_8601": "2020-02-09T18:36:32.225885Z", "url": "https://files.pythonhosted.org/packages/28/7e/f12a52046b648468eb3819b0f7c7c6bd06fb9bfbd3006cdadf11f9ec1ca3/gspread-formatting-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "fef39da538cad3be30f41eb0d7dcfc56", "sha256": "8a428f0a70a0d328879b85e9ccf9bfe3e8bf221cc0313aaf31a7dd5c43f50ef5"}, "downloads": -1, "filename": "gspread_formatting-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fef39da538cad3be30f41eb0d7dcfc56", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16626, "upload_time": "2020-02-11T15:00:07", "upload_time_iso_8601": "2020-02-11T15:00:07.711961Z", "url": "https://files.pythonhosted.org/packages/86/6d/9fe25c4bd87787610052df95b2592635e688c2971b310bb6d63ad24e1a0d/gspread_formatting-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b9b026b48d333cf02fc82150e523ed4", "sha256": "4415abef36cb738501b6375285871e367a42e2a2eab11925322e1f999797b27b"}, "downloads": -1, "filename": "gspread-formatting-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2b9b026b48d333cf02fc82150e523ed4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14591, "upload_time": "2020-02-11T15:00:08", "upload_time_iso_8601": "2020-02-11T15:00:08.946781Z", "url": "https://files.pythonhosted.org/packages/db/93/e3b56edaafc5aa8f643b74c029d6074ea159075fc51c084f9ce0eb1e1d0c/gspread-formatting-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b970cdf836c550a48efdd3c8ad69b350", "sha256": "d7f2a544e6730fc00b6fce17f1921f28e56f7aa91d04d4950dd4a8bf0e978785"}, "downloads": -1, "filename": "gspread_formatting-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b970cdf836c550a48efdd3c8ad69b350", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17197, "upload_time": "2020-02-28T20:19:10", "upload_time_iso_8601": "2020-02-28T20:19:10.856563Z", "url": "https://files.pythonhosted.org/packages/26/20/2e76c5f2eb5cc1f5b0767218b81292846c0136d525f791c367866b95357c/gspread_formatting-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae1c8f93f58e4249bc800f5ca1fc45d2", "sha256": "28c2c200b4c0064f2c2af02b8a13cf45de588e0d8a7ff6ff595b53a59db9c93d"}, "downloads": -1, "filename": "gspread-formatting-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ae1c8f93f58e4249bc800f5ca1fc45d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15277, "upload_time": "2020-02-28T20:19:12", "upload_time_iso_8601": "2020-02-28T20:19:12.194034Z", "url": "https://files.pythonhosted.org/packages/f5/ca/6592c5322156454d4492b521cf7750778e0e6fa1feddae8ac52859858ffe/gspread-formatting-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "40c47557becfb4f419b429fb189850c4", "sha256": "96d620fcfd473592ca284809fc1696bd07344e1d792dae49d41c7ae300fda252"}, "downloads": -1, "filename": "gspread_formatting-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "40c47557becfb4f419b429fb189850c4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17886, "upload_time": "2020-03-31T21:58:34", "upload_time_iso_8601": "2020-03-31T21:58:34.359245Z", "url": "https://files.pythonhosted.org/packages/04/fd/7bef6376fb6cab0324b0a7b013986509b6216e95d256819e19385d575b55/gspread_formatting-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a966c9c3daab0ee55b33d08cb81e9b8", "sha256": "2c4e35029735d4a4de814e11f5ba28f06593550218b70e586f340d3793db9f75"}, "downloads": -1, "filename": "gspread-formatting-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1a966c9c3daab0ee55b33d08cb81e9b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19582, "upload_time": "2020-03-31T21:58:35", "upload_time_iso_8601": "2020-03-31T21:58:35.575688Z", "url": "https://files.pythonhosted.org/packages/9b/24/31153c2ba0ae0ec14296168f273c9a401fc5f11a33a836c497acd83144fe/gspread-formatting-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "028a1d631780a4c850e6bf0bc1e8736e", "sha256": "a067ca84a85667dcc9795f78cce71fd4e2d880e0011e97ef2e4c9e1fa0ea0f5a"}, "downloads": -1, "filename": "gspread_formatting-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "028a1d631780a4c850e6bf0bc1e8736e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18123, "upload_time": "2020-04-02T21:53:01", "upload_time_iso_8601": "2020-04-02T21:53:01.064824Z", "url": "https://files.pythonhosted.org/packages/e6/a5/f58f42dc48a0aae0a1318623cf2341967ee41ac2ea609a74a0640c72cbfa/gspread_formatting-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf2767d297b4db31c306b4491363ba4d", "sha256": "7b12ec8f4b5bf80529eff3dd5e689373ab8364545e4a3efed919a1a3303439db"}, "downloads": -1, "filename": "gspread-formatting-0.2.1.tar.gz", "has_sig": false, "md5_digest": "cf2767d297b4db31c306b4491363ba4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19834, "upload_time": "2020-04-02T21:53:02", "upload_time_iso_8601": "2020-04-02T21:53:02.260303Z", "url": "https://files.pythonhosted.org/packages/bb/ef/48ce070c94ecaa47005bdc4fcf0820a11b55dc57fbbc3e4a7b49dca377dd/gspread-formatting-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "f235919bddbc9105df5c9e8a3717a68d", "sha256": "959794742ebed45f657dc95be9e2069964ba681525e5c6297b46cabfb0d97749"}, "downloads": -1, "filename": "gspread_formatting-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f235919bddbc9105df5c9e8a3717a68d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18123, "upload_time": "2020-04-19T14:43:55", "upload_time_iso_8601": "2020-04-19T14:43:55.026920Z", "url": "https://files.pythonhosted.org/packages/a5/e0/115b9a0e452af7c25db36cb97cabf7353610427da1910f1a98ec9b137234/gspread_formatting-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3b398bf84c74ac1a59538dd7a7256fd", "sha256": "6ff1365a76ebc44c6fc1d1c9bb506bea505415baca4080f5c97cae062abb21ce"}, "downloads": -1, "filename": "gspread-formatting-0.2.2.tar.gz", "has_sig": false, "md5_digest": "f3b398bf84c74ac1a59538dd7a7256fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20052, "upload_time": "2020-04-19T14:43:56", "upload_time_iso_8601": "2020-04-19T14:43:56.304280Z", "url": "https://files.pythonhosted.org/packages/3f/3a/9182ffefa23feb24fc4bc7d7e0f3f25a7918b5eaee8bcdd2476749699b6c/gspread-formatting-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "4d4b9d984983b06e3f3bf9e7c7b7c245", "sha256": "23981c19ef7d423153aa7039aebcc76a56cdaab67d4274845db6e64836970ff5"}, "downloads": -1, "filename": "gspread_formatting-0.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4d4b9d984983b06e3f3bf9e7c7b7c245", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18595, "upload_time": "2020-05-04T14:07:44", "upload_time_iso_8601": "2020-05-04T14:07:44.720211Z", "url": "https://files.pythonhosted.org/packages/57/76/d3516ef8dc76aa99746ddc45fb880cbce877afd69c67e4877ec7c6929c97/gspread_formatting-0.2.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d2ecc5194c57c8981f8cd83f8a902ec", "sha256": "ba09e8860f5156f3113f223079f7dfe150364b0bbb557e1699149b12881c4335"}, "downloads": -1, "filename": "gspread-formatting-0.2.3.tar.gz", "has_sig": false, "md5_digest": "1d2ecc5194c57c8981f8cd83f8a902ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34839, "upload_time": "2020-05-04T14:07:46", "upload_time_iso_8601": "2020-05-04T14:07:46.000558Z", "url": "https://files.pythonhosted.org/packages/2a/cc/f6262eb752bdd4c6a4243342df59ceef4f8d636341a6200f7eca70008e84/gspread-formatting-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "9150a72b8a11cdadfcb34fb7b668ad38", "sha256": "a5073474231c57a76b2eb27427081f23984a73383772ab7fe59b89a094877782"}, "downloads": -1, "filename": "gspread_formatting-0.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9150a72b8a11cdadfcb34fb7b668ad38", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18625, "upload_time": "2020-05-04T16:45:13", "upload_time_iso_8601": "2020-05-04T16:45:13.288279Z", "url": "https://files.pythonhosted.org/packages/a1/84/07331a43e6abcf0493f693c43226484d2d54b327d3ce24a679d7d763d935/gspread_formatting-0.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6909bde305cbeccdf19989f458a418d", "sha256": "26980d596128ee39194d54c16fb6d0ff8e9a8e329c2f1f93b1555ddf5166cd50"}, "downloads": -1, "filename": "gspread-formatting-0.2.4.tar.gz", "has_sig": false, "md5_digest": "a6909bde305cbeccdf19989f458a418d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34893, "upload_time": "2020-05-04T16:45:14", "upload_time_iso_8601": "2020-05-04T16:45:14.749124Z", "url": "https://files.pythonhosted.org/packages/20/1f/66ae20fe1c86a026457d1a8764a6e3ac3a8f60b8cbad071773c546361316/gspread-formatting-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9150a72b8a11cdadfcb34fb7b668ad38", "sha256": "a5073474231c57a76b2eb27427081f23984a73383772ab7fe59b89a094877782"}, "downloads": -1, "filename": "gspread_formatting-0.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9150a72b8a11cdadfcb34fb7b668ad38", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18625, "upload_time": "2020-05-04T16:45:13", "upload_time_iso_8601": "2020-05-04T16:45:13.288279Z", "url": "https://files.pythonhosted.org/packages/a1/84/07331a43e6abcf0493f693c43226484d2d54b327d3ce24a679d7d763d935/gspread_formatting-0.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6909bde305cbeccdf19989f458a418d", "sha256": "26980d596128ee39194d54c16fb6d0ff8e9a8e329c2f1f93b1555ddf5166cd50"}, "downloads": -1, "filename": "gspread-formatting-0.2.4.tar.gz", "has_sig": false, "md5_digest": "a6909bde305cbeccdf19989f458a418d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34893, "upload_time": "2020-05-04T16:45:14", "upload_time_iso_8601": "2020-05-04T16:45:14.749124Z", "url": "https://files.pythonhosted.org/packages/20/1f/66ae20fe1c86a026457d1a8764a6e3ac3a8f60b8cbad071773c546361316/gspread-formatting-0.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:38 2020"}