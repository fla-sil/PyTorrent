{"info": {"author": "Filip Malczak", "author_email": "filip(dot)malczak(at)gmail(dot)com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "WHS Ltd provides collection of pure-python modules.\n\nThis is implementation of lock, that allows only one kind of operation be\nexecuted at the time (reading or writing). Any number of callers\ncan acquire reading or writing at once, but if someone tries to acquire writing\nwhile reading is acquired, it will wait, until all readers that acquired lock\nrelease it (and vice versa).\n\nAt the moment it works only with threading, but few simple modifications will\nresult in multiprocessing-enabled implementation.\n\nwhs.utils.rwlock is a package, but should be used as a module (all code is in\n__init__.py).", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "devzone.itadmin.pl", "keywords": null, "license": "BSD license (http://opensource.org/licenses/bsd-license.php); owner: Web Harvesting Solutions Ltd; year: 2013", "maintainer": null, "maintainer_email": null, "name": "whs.utils.rwlock", "package_url": "https://pypi.org/project/whs.utils.rwlock/", "platform": "Any", "project_url": "https://pypi.org/project/whs.utils.rwlock/", "project_urls": {"Download": "UNKNOWN", "Homepage": "devzone.itadmin.pl"}, "release_url": "https://pypi.org/project/whs.utils.rwlock/0.6.0/", "requires_dist": null, "requires_python": null, "summary": "This is specific kind of lock, that allows only one operation at the time (read or write) by any number of callers.", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>WHS Ltd provides collection of pure-python modules.</p>\n<p>This is implementation of lock, that allows only one kind of operation be\nexecuted at the time (reading or writing). Any number of callers\ncan acquire reading or writing at once, but if someone tries to acquire writing\nwhile reading is acquired, it will wait, until all readers that acquired lock\nrelease it (and vice versa).</p>\n<p>At the moment it works only with threading, but few simple modifications will\nresult in multiprocessing-enabled implementation.</p>\n<p>whs.utils.rwlock is a package, but should be used as a module (all code is in\n__init__.py).</p>\n\n          </div>"}, "last_serial": 964417, "releases": {"0.6.0": [{"comment_text": "", "digests": {"md5": "7f63671c8c5bf9619e610cc5ba9b07f4", "sha256": "1d9a43bb20b0ce3d5aa8942109dd3b32e330e793fa4503cbad9b029727bb3d12"}, "downloads": -1, "filename": "whs.utils.rwlock-0.6.0.tar.gz", "has_sig": false, "md5_digest": "7f63671c8c5bf9619e610cc5ba9b07f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6890, "upload_time": "2014-01-09T14:20:21", "upload_time_iso_8601": "2014-01-09T14:20:21.251848Z", "url": "https://files.pythonhosted.org/packages/fe/53/df84d2e5993fd9f78f4f2ab2198684846c4d5b1c57f2014af0c629addf3b/whs.utils.rwlock-0.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7f63671c8c5bf9619e610cc5ba9b07f4", "sha256": "1d9a43bb20b0ce3d5aa8942109dd3b32e330e793fa4503cbad9b029727bb3d12"}, "downloads": -1, "filename": "whs.utils.rwlock-0.6.0.tar.gz", "has_sig": false, "md5_digest": "7f63671c8c5bf9619e610cc5ba9b07f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6890, "upload_time": "2014-01-09T14:20:21", "upload_time_iso_8601": "2014-01-09T14:20:21.251848Z", "url": "https://files.pythonhosted.org/packages/fe/53/df84d2e5993fd9f78f4f2ab2198684846c4d5b1c57f2014af0c629addf3b/whs.utils.rwlock-0.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:29:31 2020"}