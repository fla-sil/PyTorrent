{"info": {"author": "Andrey Kislyuk", "author_email": "kislyuk@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Fusillade\n=========\n\nFusillade (Federated User Identity Login & Access Decision Engine) is a\nservice and library for managing user authentication and authorization\nin federated services. Fusillade is built to be simple and to leverage\nwell-known auth protocols and standards toegther with existing global,\nscalable and supported IaaS APIs.\n\n-  The AuthN functionality in Fusillade consists of a login endpoint\n   that delegates user authentication to any configured `OpenID\n   Connect <http://openid.net/connect/>`__ compatible identity\n   providers.\n-  The AuthZ part of Fusillade is an\n   `ABAC <https://en.wikipedia.org/wiki/Attribute-based_access_control>`__\n   system leveraging the familiar syntax and reliable infrastructure of\n   `AWS IAM <https://aws.amazon.com/iam/>`__.\n\nTogether, these two subsystems provide an easy API for your application\nto answer the following questions:\n\n-  How do I instruct the user to log in?\n-  Who is the user performing this API request?\n-  Is this user authorized to perform action A on resource R?\n-  How do I delegate to the user an appropriately restricted ability to\n   access cloud (IaaS) resources directly through IaaS (GCE, AWS) APIs?\n\nTo do this, your application should define an access control model\nconsisting of the following:\n\n-  A list of trusted OIDC-compatible identity providers\n-  A naming schema for actions (for example, ``GetWidget``,\n   ``CreateFolder``, ``DeleteAppointment``, ``UpdateDocument``)\n-  A naming schema for resources in the following format:\n   ``arn:org-name:service-name:*:*:path/to/resource``\n-  A default policy assigned to new users, for example:\n   ``json   { \"Statement\": [   {     \"Effect\": \"Allow\",     \"Action\": [       \"dss:*\",     ],     \"Resource\": \"arn:hca:dss:*:*:subscriptions/FIXME/*\"   } ]   }``\n\nInstalling and configuring Fusillade\n------------------------------------\n\nUsing Fusillade as a service\n----------------------------\n\nUsing Fusillade as a library\n----------------------------\n\nUsing Fusillade as a proxy\n--------------------------\n\nBundling native cloud credentials\n---------------------------------\n\nAWS\n~~~\n\nGCP\n~~~\n\nService access control\n----------------------\n\nTo use Fusillade, your service must itself be authenticated and\nauthorized. The access control model for this depends on how you're\nusing Fusillade.\n\nLibrary - Cooperative model\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhen using Fusillade as a library, your application's AWS IAM role is\nalso your Fusillade access role. The library uses AWS Cloud Directory\nand AWS IAM using your application's IAM credentials. (TODO: add links\nfor ACD/IAM IAM and show sample policy)\n\nService - Enforced model\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhen using Fusillade as a service, your application is itself subject to\nan IAM policy governing its ability to read and write permissions data.\nThe Fusillade service administrator configures the Fusillade policy\ngoverning this in the service configuration.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/humancellatlas/fusillade", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "fusillade", "package_url": "https://pypi.org/project/fusillade/", "platform": "MacOS X", "project_url": "https://pypi.org/project/fusillade/", "project_urls": {"Homepage": "https://github.com/humancellatlas/fusillade"}, "release_url": "https://pypi.org/project/fusillade/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Federated User Identity Login & Access Decision Engine", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Fusillade (Federated User Identity Login &amp; Access Decision Engine) is a\nservice and library for managing user authentication and authorization\nin federated services. Fusillade is built to be simple and to leverage\nwell-known auth protocols and standards toegther with existing global,\nscalable and supported IaaS APIs.</p>\n<ul>\n<li>The AuthN functionality in Fusillade consists of a login endpoint\nthat delegates user authentication to any configured <a href=\"http://openid.net/connect/\" rel=\"nofollow\">OpenID\nConnect</a> compatible identity\nproviders.</li>\n<li>The AuthZ part of Fusillade is an\n<a href=\"https://en.wikipedia.org/wiki/Attribute-based_access_control\" rel=\"nofollow\">ABAC</a>\nsystem leveraging the familiar syntax and reliable infrastructure of\n<a href=\"https://aws.amazon.com/iam/\" rel=\"nofollow\">AWS IAM</a>.</li>\n</ul>\n<p>Together, these two subsystems provide an easy API for your application\nto answer the following questions:</p>\n<ul>\n<li>How do I instruct the user to log in?</li>\n<li>Who is the user performing this API request?</li>\n<li>Is this user authorized to perform action A on resource R?</li>\n<li>How do I delegate to the user an appropriately restricted ability to\naccess cloud (IaaS) resources directly through IaaS (GCE, AWS) APIs?</li>\n</ul>\n<p>To do this, your application should define an access control model\nconsisting of the following:</p>\n<ul>\n<li>A list of trusted OIDC-compatible identity providers</li>\n<li>A naming schema for actions (for example, <tt>GetWidget</tt>,\n<tt>CreateFolder</tt>, <tt>DeleteAppointment</tt>, <tt>UpdateDocument</tt>)</li>\n<li>A naming schema for resources in the following format:\n<tt><span class=\"pre\">arn:org-name:service-name:*:*:path/to/resource</span></tt></li>\n<li>A default policy assigned to new users, for example:\n<tt>json\u00a0\u00a0 { \"Statement\": [\u00a0\u00a0 {\u00a0\u00a0\u00a0\u00a0 \"Effect\": \"Allow\",\u00a0\u00a0\u00a0\u00a0 \"Action\": [\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"pre\">\"dss:*\",</span>\u00a0\u00a0\u00a0\u00a0 ],\u00a0\u00a0\u00a0\u00a0 \"Resource\": <span class=\"pre\">\"arn:hca:dss:*:*:subscriptions/FIXME/*\"</span>\u00a0\u00a0 } ]\u00a0\u00a0 }</tt></li>\n</ul>\n<div id=\"installing-and-configuring-fusillade\">\n<h2>Installing and configuring Fusillade</h2>\n</div>\n<div id=\"using-fusillade-as-a-service\">\n<h2>Using Fusillade as a service</h2>\n</div>\n<div id=\"using-fusillade-as-a-library\">\n<h2>Using Fusillade as a library</h2>\n</div>\n<div id=\"using-fusillade-as-a-proxy\">\n<h2>Using Fusillade as a proxy</h2>\n</div>\n<div id=\"bundling-native-cloud-credentials\">\n<h2>Bundling native cloud credentials</h2>\n<div id=\"aws\">\n<h3>AWS</h3>\n</div>\n<div id=\"gcp\">\n<h3>GCP</h3>\n</div>\n</div>\n<div id=\"service-access-control\">\n<h2>Service access control</h2>\n<p>To use Fusillade, your service must itself be authenticated and\nauthorized. The access control model for this depends on how you\u2019re\nusing Fusillade.</p>\n<div id=\"library-cooperative-model\">\n<h3>Library - Cooperative model</h3>\n<p>When using Fusillade as a library, your application\u2019s AWS IAM role is\nalso your Fusillade access role. The library uses AWS Cloud Directory\nand AWS IAM using your application\u2019s IAM credentials. (TODO: add links\nfor ACD/IAM IAM and show sample policy)</p>\n</div>\n<div id=\"service-enforced-model\">\n<h3>Service - Enforced model</h3>\n<p>When using Fusillade as a service, your application is itself subject to\nan IAM policy governing its ability to read and write permissions data.\nThe Fusillade service administrator configures the Fusillade policy\ngoverning this in the service configuration.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4289857, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "eb74f00af51450a4586d201de0d98446", "sha256": "868ea60640b85c02ed60e86d1ad650c309dea12aa48678a9607e8a60681911b0"}, "downloads": -1, "filename": "fusillade-0.0.1.tar.gz", "has_sig": true, "md5_digest": "eb74f00af51450a4586d201de0d98446", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2916, "upload_time": "2018-01-11T19:15:15", "upload_time_iso_8601": "2018-01-11T19:15:15.650848Z", "url": "https://files.pythonhosted.org/packages/66/02/a83d11a8b2b4aaa48d9e728db7bed2fa5a7dece668da7862bc8a2e00a166/fusillade-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eb74f00af51450a4586d201de0d98446", "sha256": "868ea60640b85c02ed60e86d1ad650c309dea12aa48678a9607e8a60681911b0"}, "downloads": -1, "filename": "fusillade-0.0.1.tar.gz", "has_sig": true, "md5_digest": "eb74f00af51450a4586d201de0d98446", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2916, "upload_time": "2018-01-11T19:15:15", "upload_time_iso_8601": "2018-01-11T19:15:15.650848Z", "url": "https://files.pythonhosted.org/packages/66/02/a83d11a8b2b4aaa48d9e728db7bed2fa5a7dece668da7862bc8a2e00a166/fusillade-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:35 2020"}