{"info": {"author": "Sever Banesiu", "author_email": "banesiu.sever@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "django-cms-smartsnippets\n========================\n\n``smartsnippets`` is a `django-cms`_ plugin similar to the builtin `snippet`_\nplugin but instead of allowing only plain HTML you can use any valid\nDjango template syntax inside. When a smartsnippet is added in a page\nthe user can provide values for all detected used variables. This is much\nmore flexible than the standard ``snippet`` if you want to parametrize\nand reuse your static snippets.\n\n.. NOTE::\n  All variables enclosed in curly-braces are automatically detected. In some\n  cases you may need to artificially create such a construct for a variable to\n  be detected. If a variable name ends with ``_`` it won't be detected.\n\nExample\n=======\n\nA simple smartsnippet using the `Twitter profile example`_::\n\n    <script src=\"http://widgets.twimg.com/j/2/widget.js\"></script>\n    <script>\n    new TWTR.Widget({\n      version: 2,\n      type: 'profile',\n      rpp: 4,\n      interval: 30000,\n      width: 250,\n      height: 300,\n      theme: {\n        shell: {\n          background: '#333333',\n          color: '#ffffff'\n        },\n        tweets: {\n          background: '#000000',\n          color: '#ffffff',\n          links: '#4aed05'\n        }\n      },\n      features: {\n        scrollbar: false,\n        loop: false,\n        live: false,\n        behavior: 'all'\n      }\n    }).render().setUser('{{twitter_username}}').start();\n    </script>\n\nNote the ``{{twitter_username}}`` variable used as a standard Django\nvariable. When adding the smartsnippet in a page, the form will\nprovide an input field where you can set a value of that variable.\n\n\nSettings\n========\n\nThere are three configuration variables available:\n\n* ``SMARTSNIPPETS_SHARED_SITES`` a list of site names defaulting\n  to an empty list. All the sites listed here will share their\n  smartsnippets with all the other sites as read-only. This can be\n  Useful in a shared environment to enable code sharing.\n\n* ``SMARTSNIPPETS_INCLUDE_ORPHAN`` a boolean flag that defaults to\n  ``True``. If this option is enabled, selecting a site in the\n  smartsnippet creation form is optional. If a smartsnippet doesn't\n  belong to any site it will behave as global and will be available\n  in all sites. If set to ``False`` the user will be forced to link\n  the smartsnipptes that he creates to at least one site.\n\n* ``SMARTSNIPPETS_RESTRICT_USER`` a boolean flag that defaults to\n  ``False``. This flag, if set, will limit the smartsnippets that\n  a user can access based on his relation to sites trough the global\n  pages permission system. This can be useful in a shared environment.\n  By default a user can access all the smartsnippets in the system.\n\n.. WARNING::\n  This plugin is a potential security hazard, since it allows admins to place\n  custom JavaScript on pages. This may allow administrators with the right to\n  add snippets to elevate their privileges to superusers. This plugin should\n  only be used during the initial development phase for rapid prototyping and\n  should be disabled on production sites.\n\n\n.. _Twitter profile example:\n    http://twitter.com/about/resources/widgets/widget_profile/\n\n.. _django-cms:\n    http://django-cms.org/\n\n.. _snippet:\n    http://readthedocs.org/docs/django-cms/en/latest/getting_started/plugin_reference.html#snippet", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "django-cms-smartsnippets", "package_url": "https://pypi.org/project/django-cms-smartsnippets/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-cms-smartsnippets/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/django-cms-smartsnippets/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "Parametrizable Django CMS snippets.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-cms-smartsnippets\">\n<h2>django-cms-smartsnippets</h2>\n<p><tt>smartsnippets</tt> is a <a href=\"http://django-cms.org/\" rel=\"nofollow\">django-cms</a> plugin similar to the builtin <a href=\"http://readthedocs.org/docs/django-cms/en/latest/getting_started/plugin_reference.html#snippet\" rel=\"nofollow\">snippet</a>\nplugin but instead of allowing only plain HTML you can use any valid\nDjango template syntax inside. When a smartsnippet is added in a page\nthe user can provide values for all detected used variables. This is much\nmore flexible than the standard <tt>snippet</tt> if you want to parametrize\nand reuse your static snippets.</p>\n<div>\n<p>Note</p>\n<p>All variables enclosed in curly-braces are automatically detected. In some\ncases you may need to artificially create such a construct for a variable to\nbe detected. If a variable name ends with <tt>_</tt> it won\u2019t be detected.</p>\n</div>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>A simple smartsnippet using the <a href=\"http://twitter.com/about/resources/widgets/widget_profile/\" rel=\"nofollow\">Twitter profile example</a>:</p>\n<pre>&lt;script src=\"http://widgets.twimg.com/j/2/widget.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\nnew TWTR.Widget({\n  version: 2,\n  type: 'profile',\n  rpp: 4,\n  interval: 30000,\n  width: 250,\n  height: 300,\n  theme: {\n    shell: {\n      background: '#333333',\n      color: '#ffffff'\n    },\n    tweets: {\n      background: '#000000',\n      color: '#ffffff',\n      links: '#4aed05'\n    }\n  },\n  features: {\n    scrollbar: false,\n    loop: false,\n    live: false,\n    behavior: 'all'\n  }\n}).render().setUser('{{twitter_username}}').start();\n&lt;/script&gt;\n</pre>\n<p>Note the <tt>{{twitter_username}}</tt> variable used as a standard Django\nvariable. When adding the smartsnippet in a page, the form will\nprovide an input field where you can set a value of that variable.</p>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p>There are three configuration variables available:</p>\n<ul>\n<li><tt>SMARTSNIPPETS_SHARED_SITES</tt> a list of site names defaulting\nto an empty list. All the sites listed here will share their\nsmartsnippets with all the other sites as read-only. This can be\nUseful in a shared environment to enable code sharing.</li>\n<li><tt>SMARTSNIPPETS_INCLUDE_ORPHAN</tt> a boolean flag that defaults to\n<tt>True</tt>. If this option is enabled, selecting a site in the\nsmartsnippet creation form is optional. If a smartsnippet doesn\u2019t\nbelong to any site it will behave as global and will be available\nin all sites. If set to <tt>False</tt> the user will be forced to link\nthe smartsnipptes that he creates to at least one site.</li>\n<li><tt>SMARTSNIPPETS_RESTRICT_USER</tt> a boolean flag that defaults to\n<tt>False</tt>. This flag, if set, will limit the smartsnippets that\na user can access based on his relation to sites trough the global\npages permission system. This can be useful in a shared environment.\nBy default a user can access all the smartsnippets in the system.</li>\n</ul>\n<div>\n<p>Warning</p>\n<p>This plugin is a potential security hazard, since it allows admins to place\ncustom JavaScript on pages. This may allow administrators with the right to\nadd snippets to elevate their privileges to superusers. This plugin should\nonly be used during the initial development phase for rapid prototyping and\nshould be disabled on production sites.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1908440, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "9705f2ce627b0b8edd8b5d5ace7e27b1", "sha256": "268b6fc5beb2e68c7be2d45e6f5cde483ab7abbd25bbe46398d1c44ecfcc0298"}, "downloads": -1, "filename": "django-cms-smartsnippets-0.1.tar.gz", "has_sig": false, "md5_digest": "9705f2ce627b0b8edd8b5d5ace7e27b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9959, "upload_time": "2011-11-03T11:11:35", "upload_time_iso_8601": "2011-11-03T11:11:35.442784Z", "url": "https://files.pythonhosted.org/packages/6d/a4/3b0254473507dcf241409d402cf3f2853f5b293e82a66f77e047b07aba75/django-cms-smartsnippets-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d432a25df616a0e0bdd97ead5aa90bde", "sha256": "d98b1cdd059fed68dc96b5fe29c896a3a7d14a3f01d2bd8b6a809d1b751493fa"}, "downloads": -1, "filename": "django-cms-smartsnippets-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d432a25df616a0e0bdd97ead5aa90bde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11442, "upload_time": "2011-11-03T11:14:31", "upload_time_iso_8601": "2011-11-03T11:14:31.367230Z", "url": "https://files.pythonhosted.org/packages/80/66/35067fe365eafdd83357f05e423cdc41bf9cd2e56d2b72dc2dabef775a7a/django-cms-smartsnippets-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "2de6ecb04701ba3ed83fff7846f1567c", "sha256": "3cb31732621407383aaac55ce623cabc5b0e93513cba77735bfea451ff9ed862"}, "downloads": -1, "filename": "django-cms-smartsnippets-0.1.2.tar.gz", "has_sig": false, "md5_digest": "2de6ecb04701ba3ed83fff7846f1567c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11462, "upload_time": "2011-11-03T11:16:44", "upload_time_iso_8601": "2011-11-03T11:16:44.519403Z", "url": "https://files.pythonhosted.org/packages/a3/98/e5fa243993743b6d4633a28bf3b706c61932df627861066747d022820367/django-cms-smartsnippets-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "7ed7add8b8d1990fc98c7219dbcacdcc", "sha256": "9c404a0c3e74678c2fd0b82670117398053b15936e1acf03aba1562233a52a80"}, "downloads": -1, "filename": "django-cms-smartsnippets-0.1.3.tar.gz", "has_sig": false, "md5_digest": "7ed7add8b8d1990fc98c7219dbcacdcc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12765, "upload_time": "2011-12-02T15:44:40", "upload_time_iso_8601": "2011-12-02T15:44:40.402065Z", "url": "https://files.pythonhosted.org/packages/01/6b/9395e12c61d6b26cf914ef8df28b8e49ae635f3e6100bceff70a7f0c4643/django-cms-smartsnippets-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7ed7add8b8d1990fc98c7219dbcacdcc", "sha256": "9c404a0c3e74678c2fd0b82670117398053b15936e1acf03aba1562233a52a80"}, "downloads": -1, "filename": "django-cms-smartsnippets-0.1.3.tar.gz", "has_sig": false, "md5_digest": "7ed7add8b8d1990fc98c7219dbcacdcc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12765, "upload_time": "2011-12-02T15:44:40", "upload_time_iso_8601": "2011-12-02T15:44:40.402065Z", "url": "https://files.pythonhosted.org/packages/01/6b/9395e12c61d6b26cf914ef8df28b8e49ae635f3e6100bceff70a7f0c4643/django-cms-smartsnippets-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:00 2020"}