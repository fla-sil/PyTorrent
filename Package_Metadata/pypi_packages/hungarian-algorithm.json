{"info": {"author": "Ben Chaplin", "author_email": "benchaplin@protonmail.ch", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Hungarian Algorithm\n\nA Python 3 implementation of the **Hungarian Algorithm** (a.k.a. the Kuhn-Munkres algorithm), an O(n^3) solution for the **assignment problem**, or **maximum-weighted bipartite matching problem**.\n\n## Example\n\nSuppose you're choosing 11 starting positions for a soccer team. \n\nThe 11 players submit their top 3 position choices, and it is your job to create the optimal team.\n\nThe situation can be modeled with a **weighted bipartite graph**:\n\n<img src=\"https://github.com/benchaplin/hungarian-algorithm/raw/master/soccer_ex.png\" alt=\"Example\" width=\"500\"/>\n\nThen, if you assign weight 3 to blue edges, weight 2 to red edges and weight 1 to green edges, your job is simply to find the matching that maximizes total weight. This is the **assignment problem**, for which the **Hungarian Algorithm** offers a solution.\n\n*Notice: although no one has chosen LB, the algorithm will still assign a player there. In fact, the first step of the algorithm is to create a complete bipartite graph (all possible edges exist), giving new edges weight 0.*\n\n## Usage\n\n### Install\n\n```\npip3 install hungarian-algorithm\n```\n\n### Import \n\n```python\nfrom hungarian_algorithm import algorithm\n```\n### Required Input\n\nDefine your **weighted bipartite graph** in the following manner:\n\n```python\nG = {\n\t'Ann': {'RB': 3, 'CAM': 2, 'GK': 1},\n\t'Ben': {'LW': 3, 'S': 2, 'CM': 1},\n\t'Cal': {'CAM': 3, 'RW': 2, 'SWP': 1},\n\t'Dan': {'S': 3, 'LW': 2, 'GK': 1},\n\t'Ela': {'GK': 3, 'LW': 2, 'F': 1},\n\t'Fae': {'CM': 3, 'GK': 2, 'CAM': 1},\n\t'Gio': {'GK': 3, 'CM': 2, 'S': 1},\n\t'Hol': {'CAM': 3, 'F': 2, 'SWP': 1},\n\t'Ian': {'S': 3, 'RW': 2, 'RB': 1},\n\t'Jon': {'F': 3, 'LW': 2, 'CB': 1},\n\t'Kay': {'GK': 3, 'RW': 2, 'LW': 1, 'LB': 0}\n}\n```\n\nthus defining a **complete bipartite graph** G = (L &#8746; R, E) with:\n\n* Vertex set L (Players) = {'Ann', 'Ben', 'Cal', 'Dan', 'Ela', 'Fae', 'Gio', 'Hol', 'Ian', 'Jon', 'Kay'}\n* Vertex set R (Positions) = {'GK', 'LB', 'SWP', 'CB', 'RB', 'LW', 'CM', 'CAM', 'RW', 'F', 'S'}\n* Edge set E = {*e* = *(Player, Position)* : for all Players, for all Positions}\n* Weight function:\n\t* w(*Player*, *Position*) = 3 for a first choice\n\t* w(*Player*, *Position*) = 2 for a second choice\n\t* w(*Player*, *Position*) = 1 for a third choice\n\t* w(*Player*, *Position*) = 0 otherwise\n\nThen pass the graph as an input:\n\n```python\nalgorithm.find_matching(G)\n```\n\n### Output\n\nDetermine your desired output with an optional input. For an output listing (*Player*, *Position*) pairs in the **maximum-weighted matching** along with w(*Player*, *Position*), use the input 'list' (default):\n\n```python\nalgorithm.find_matching(G, 'list')\n# -> [(('Ann', 'RB'), 3), (('Gio', 'CB'), 0), (('Ben', 'LW'), 3), (('Ian', 'RW'), 2), (('Cal', 'CAM'), 3), (('Fae', 'CM'), 3),\n#     (('Ela', 'LB'), 0), (('Kay', 'GK'), 3), (('Jon', 'F'), 3), (('Dan', 'S'), 3), (('Hol', 'SWP'), 1)]\n```\n\n**Note:** Outputs may vary per run if more than one **maximum-weighted matching** exists.\n\nFor an output of the total weight of the **maximum-weighted matching**, use the input 'total':\n\n```python\nalgorithm.find_matching(G, 'total')\n# -> 24\n```\n\n## History\n\nThe algorithm was published by Harold Kuhn in 1955 paper *The Hungarian Method for the Assignment Problem*. Kuhn's work relied heavily on that of Hungarian mathematicians D&eacute;nes K&#337;nig and Jen&#337; Eg&eacute;vary.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/benchaplin/hungarian-algorithm", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "hungarian-algorithm", "package_url": "https://pypi.org/project/hungarian-algorithm/", "platform": "", "project_url": "https://pypi.org/project/hungarian-algorithm/", "project_urls": {"Homepage": "https://github.com/benchaplin/hungarian-algorithm"}, "release_url": "https://pypi.org/project/hungarian-algorithm/0.1.10/", "requires_dist": null, "requires_python": "", "summary": "Python 3 implementation of the Hungarian Algorithm for the assignment problem.", "version": "0.1.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Hungarian Algorithm</h1>\n<p>A Python 3 implementation of the <strong>Hungarian Algorithm</strong> (a.k.a. the Kuhn-Munkres algorithm), an O(n^3) solution for the <strong>assignment problem</strong>, or <strong>maximum-weighted bipartite matching problem</strong>.</p>\n<h2>Example</h2>\n<p>Suppose you're choosing 11 starting positions for a soccer team.</p>\n<p>The 11 players submit their top 3 position choices, and it is your job to create the optimal team.</p>\n<p>The situation can be modeled with a <strong>weighted bipartite graph</strong>:</p>\n<img alt=\"Example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9ce6f90fe3fc8310543fa27abb5a5294c92071da/68747470733a2f2f6769746875622e636f6d2f62656e636861706c696e2f68756e67617269616e2d616c676f726974686d2f7261772f6d61737465722f736f636365725f65782e706e67\" width=\"500\">\n<p>Then, if you assign weight 3 to blue edges, weight 2 to red edges and weight 1 to green edges, your job is simply to find the matching that maximizes total weight. This is the <strong>assignment problem</strong>, for which the <strong>Hungarian Algorithm</strong> offers a solution.</p>\n<p><em>Notice: although no one has chosen LB, the algorithm will still assign a player there. In fact, the first step of the algorithm is to create a complete bipartite graph (all possible edges exist), giving new edges weight 0.</em></p>\n<h2>Usage</h2>\n<h3>Install</h3>\n<pre><code>pip3 install hungarian-algorithm\n</code></pre>\n<h3>Import</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">hungarian_algorithm</span> <span class=\"kn\">import</span> <span class=\"n\">algorithm</span>\n</pre>\n<h3>Required Input</h3>\n<p>Define your <strong>weighted bipartite graph</strong> in the following manner:</p>\n<pre><span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n\t<span class=\"s1\">'Ann'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'RB'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'CAM'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'GK'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span>\n\t<span class=\"s1\">'Ben'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'LW'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'S'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'CM'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span>\n\t<span class=\"s1\">'Cal'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'CAM'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'RW'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'SWP'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span>\n\t<span class=\"s1\">'Dan'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'S'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'LW'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'GK'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span>\n\t<span class=\"s1\">'Ela'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'GK'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'LW'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'F'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span>\n\t<span class=\"s1\">'Fae'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'CM'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'GK'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'CAM'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span>\n\t<span class=\"s1\">'Gio'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'GK'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'CM'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'S'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span>\n\t<span class=\"s1\">'Hol'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'CAM'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'F'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'SWP'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span>\n\t<span class=\"s1\">'Ian'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'S'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'RW'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'RB'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span>\n\t<span class=\"s1\">'Jon'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'F'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'LW'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'CB'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span>\n\t<span class=\"s1\">'Kay'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'GK'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'RW'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'LW'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'LB'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>thus defining a <strong>complete bipartite graph</strong> G = (L \u222a R, E) with:</p>\n<ul>\n<li>Vertex set L (Players) = {'Ann', 'Ben', 'Cal', 'Dan', 'Ela', 'Fae', 'Gio', 'Hol', 'Ian', 'Jon', 'Kay'}</li>\n<li>Vertex set R (Positions) = {'GK', 'LB', 'SWP', 'CB', 'RB', 'LW', 'CM', 'CAM', 'RW', 'F', 'S'}</li>\n<li>Edge set E = {<em>e</em> = <em>(Player, Position)</em> : for all Players, for all Positions}</li>\n<li>Weight function:\n<ul>\n<li>w(<em>Player</em>, <em>Position</em>) = 3 for a first choice</li>\n<li>w(<em>Player</em>, <em>Position</em>) = 2 for a second choice</li>\n<li>w(<em>Player</em>, <em>Position</em>) = 1 for a third choice</li>\n<li>w(<em>Player</em>, <em>Position</em>) = 0 otherwise</li>\n</ul>\n</li>\n</ul>\n<p>Then pass the graph as an input:</p>\n<pre><span class=\"n\">algorithm</span><span class=\"o\">.</span><span class=\"n\">find_matching</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">)</span>\n</pre>\n<h3>Output</h3>\n<p>Determine your desired output with an optional input. For an output listing (<em>Player</em>, <em>Position</em>) pairs in the <strong>maximum-weighted matching</strong> along with w(<em>Player</em>, <em>Position</em>), use the input 'list' (default):</p>\n<pre><span class=\"n\">algorithm</span><span class=\"o\">.</span><span class=\"n\">find_matching</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">,</span> <span class=\"s1\">'list'</span><span class=\"p\">)</span>\n<span class=\"c1\"># -&gt; [(('Ann', 'RB'), 3), (('Gio', 'CB'), 0), (('Ben', 'LW'), 3), (('Ian', 'RW'), 2), (('Cal', 'CAM'), 3), (('Fae', 'CM'), 3),</span>\n<span class=\"c1\">#     (('Ela', 'LB'), 0), (('Kay', 'GK'), 3), (('Jon', 'F'), 3), (('Dan', 'S'), 3), (('Hol', 'SWP'), 1)]</span>\n</pre>\n<p><strong>Note:</strong> Outputs may vary per run if more than one <strong>maximum-weighted matching</strong> exists.</p>\n<p>For an output of the total weight of the <strong>maximum-weighted matching</strong>, use the input 'total':</p>\n<pre><span class=\"n\">algorithm</span><span class=\"o\">.</span><span class=\"n\">find_matching</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">,</span> <span class=\"s1\">'total'</span><span class=\"p\">)</span>\n<span class=\"c1\"># -&gt; 24</span>\n</pre>\n<h2>History</h2>\n<p>The algorithm was published by Harold Kuhn in 1955 paper <em>The Hungarian Method for the Assignment Problem</em>. Kuhn's work relied heavily on that of Hungarian mathematicians D\u00e9nes K\u0151nig and Jen\u0151 Eg\u00e9vary.</p>\n\n          </div>"}, "last_serial": 7131215, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "e7c682f750974001543638dec5ac75eb", "sha256": "217204b19445f55d955253639d54305138a8e2e783290e368c926d23f43af3b6"}, "downloads": -1, "filename": "hungarian_algorithm-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e7c682f750974001543638dec5ac75eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7333, "upload_time": "2020-04-13T17:13:35", "upload_time_iso_8601": "2020-04-13T17:13:35.009889Z", "url": "https://files.pythonhosted.org/packages/81/93/4d1086571df80952f97de587c2f25872dc32e475ab5845bb57de77ce2742/hungarian_algorithm-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79de8a1a3fe27bfee11382ef5604039a", "sha256": "fe06ee5d504e95d588aafbcf2420e42e6e02d34bb8034f7102db96185f1dfd24"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.tar.gz", "has_sig": false, "md5_digest": "79de8a1a3fe27bfee11382ef5604039a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5576, "upload_time": "2020-04-13T17:13:37", "upload_time_iso_8601": "2020-04-13T17:13:37.172354Z", "url": "https://files.pythonhosted.org/packages/79/1a/1579680bcf90a5d0e20a407086dfaa81da377a2ec1f2cb80fa18415b3084/hungarian_algorithm-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "1023dd8b4fe658f15f24d139ba0dc1e4", "sha256": "d09d6c2b04b07d565b99170ca2e66f9d843259bf3047ad9dc98acbbc4f6dca77"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1023dd8b4fe658f15f24d139ba0dc1e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7369, "upload_time": "2020-04-13T17:22:42", "upload_time_iso_8601": "2020-04-13T17:22:42.087258Z", "url": "https://files.pythonhosted.org/packages/98/50/61485d7c65687a8dec7bd44aab4d4d7b7db5a2ac4985361fcc8b0db37851/hungarian_algorithm-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c31faf588c42780c374f5ebc130fd1dd", "sha256": "aa4b065009a5e5a92e08458147a8d560186d0763f377f8506e96c7c9b47b6406"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c31faf588c42780c374f5ebc130fd1dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5590, "upload_time": "2020-04-13T17:22:43", "upload_time_iso_8601": "2020-04-13T17:22:43.435565Z", "url": "https://files.pythonhosted.org/packages/40/9a/4a7b3b1ada67cc4cd575772cc602086c2f40f9e1bf5cfaa0a0275bcbe899/hungarian_algorithm-0.1.1.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "e8a7dd43e5a5ae5fcfcd244d543ddbb7", "sha256": "7be6a6612ae9f4ecdab843343331b21340aba9d0f570693caca73f8f00bfcf45"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.10-py3-none-any.whl", "has_sig": false, "md5_digest": "e8a7dd43e5a5ae5fcfcd244d543ddbb7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6810, "upload_time": "2020-04-29T18:38:22", "upload_time_iso_8601": "2020-04-29T18:38:22.164370Z", "url": "https://files.pythonhosted.org/packages/e0/29/be074068777207aaa437a1e34192c68ef80fd168686cea5f280f3c919725/hungarian_algorithm-0.1.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "291466750894b61bb47193e695e201aa", "sha256": "7780e2264acc40e913bbe6e2731cc8139441b7f1f5e500382643c95763bf1d13"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.10.tar.gz", "has_sig": false, "md5_digest": "291466750894b61bb47193e695e201aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5580, "upload_time": "2020-04-29T18:38:23", "upload_time_iso_8601": "2020-04-29T18:38:23.506357Z", "url": "https://files.pythonhosted.org/packages/99/73/8579f34a83e783160bb41c1d4456e2516f97ea3a1d4eb5f5f768deb47def/hungarian_algorithm-0.1.10.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "43de71e152af7cc8ceb61af2d1c4b16c", "sha256": "9aab663c6efe3e796c8a3a2be1ad1399eceafa4b1b24ce04407ae23a14e03554"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "43de71e152af7cc8ceb61af2d1c4b16c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7374, "upload_time": "2020-04-13T17:24:44", "upload_time_iso_8601": "2020-04-13T17:24:44.862266Z", "url": "https://files.pythonhosted.org/packages/11/68/02dc0af59f5bd390c16c5079f5739de5f9547b10416ef8f7cdba479a6c69/hungarian_algorithm-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef3d4c24d9a3a6aa3a74a63a3d624187", "sha256": "3003733604273a9c36a79b43cf8808e0a06c2eb16a357b0f5c427ca3ed49d905"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ef3d4c24d9a3a6aa3a74a63a3d624187", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5593, "upload_time": "2020-04-13T17:24:45", "upload_time_iso_8601": "2020-04-13T17:24:45.787675Z", "url": "https://files.pythonhosted.org/packages/77/10/77b0f82ba0390479cb4a37779841ba2f63e873a03532ec6a783a0c8aa924/hungarian_algorithm-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e967f3b8e116ff5098a2e9963d522b77", "sha256": "99ffa9078616fe8d40149de99a35510e6dee6af0cb7d84bd953c187346fff26d"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e967f3b8e116ff5098a2e9963d522b77", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7345, "upload_time": "2020-04-13T17:30:02", "upload_time_iso_8601": "2020-04-13T17:30:02.536914Z", "url": "https://files.pythonhosted.org/packages/fa/1a/2c7ff5b5e4acec752a23ef75f7efaaad25ab410c6c9ad7d5f7eae9fa49ac/hungarian_algorithm-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6491f0660a309c81975e556ab57060c8", "sha256": "b38516b1cc3b021aaedac69908430abfd0055c74b835cca1333f420cd890b616"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.3.tar.gz", "has_sig": false, "md5_digest": "6491f0660a309c81975e556ab57060c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5568, "upload_time": "2020-04-13T17:30:04", "upload_time_iso_8601": "2020-04-13T17:30:04.967312Z", "url": "https://files.pythonhosted.org/packages/34/9c/4b2e4dea46e50681c77631bb308f7e7d136fc9fb85b85d4bd3001866559f/hungarian_algorithm-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "fec7ca3e7e68ff9f55e7876b52327e24", "sha256": "e2c17f11fda9511c58a4cc6d10172a06dee682c4765a407ca34b1376d5323832"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "fec7ca3e7e68ff9f55e7876b52327e24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7373, "upload_time": "2020-04-13T17:36:05", "upload_time_iso_8601": "2020-04-13T17:36:05.292566Z", "url": "https://files.pythonhosted.org/packages/3c/d8/f9f573b2b290eace1694fbf5f1d3bac710aa85a96dffd67db10a4330b498/hungarian_algorithm-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "68e72a15d083bc0fa062edb3f6b4ba0f", "sha256": "c30903cbe9abbf3e47edd14a5e2adf00a380b612e6fab41e4b9e85046154741c"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.4.tar.gz", "has_sig": false, "md5_digest": "68e72a15d083bc0fa062edb3f6b4ba0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5583, "upload_time": "2020-04-13T17:36:06", "upload_time_iso_8601": "2020-04-13T17:36:06.362579Z", "url": "https://files.pythonhosted.org/packages/20/bc/7df95364bf711f80a35d687c7f0dfa7baaa8622564b4ca33e6d8e36822a5/hungarian_algorithm-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "3ada72e3c6bcf208c90019347f2c33da", "sha256": "a31467d3fffbfb5864a8fb4fe59e9c9771e86b1f97e079b5fa5c94305b099af3"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "3ada72e3c6bcf208c90019347f2c33da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6737, "upload_time": "2020-04-13T18:16:42", "upload_time_iso_8601": "2020-04-13T18:16:42.927083Z", "url": "https://files.pythonhosted.org/packages/2e/86/db3f0d16f73cc3c198947f4fe00854ee8c696ba8bb5b2f51fb57e226f545/hungarian_algorithm-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f03198cfb407580966b4b3cc9de284cc", "sha256": "af54e53208d103a09a1edbfd69c1962e9af1ba2f59dcaecd3e5d4a291afea72f"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.5.tar.gz", "has_sig": false, "md5_digest": "f03198cfb407580966b4b3cc9de284cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5506, "upload_time": "2020-04-13T18:16:44", "upload_time_iso_8601": "2020-04-13T18:16:44.257031Z", "url": "https://files.pythonhosted.org/packages/7a/c9/1990d0d3da38a28b24bfc85252cbf06ead0bfbd3417bcd8227590ea5679d/hungarian_algorithm-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "50e7e87c7c312afe9b5e142c67bb332d", "sha256": "f9185107ccce05162a5cddbaeadeb0e7a9e0498044f0ec2ccc2c7e0765a39727"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "50e7e87c7c312afe9b5e142c67bb332d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6756, "upload_time": "2020-04-13T18:23:43", "upload_time_iso_8601": "2020-04-13T18:23:43.190943Z", "url": "https://files.pythonhosted.org/packages/57/2e/19667094574a71e5b198732af03cb6d864258c4da86ab8ec299c32628cd1/hungarian_algorithm-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f80741b6b99775b76cc315a0f18cc885", "sha256": "a2e2e571731334e67b303bec96fc66522abfb05fb64ee7fd2614f203710f557e"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.6.tar.gz", "has_sig": false, "md5_digest": "f80741b6b99775b76cc315a0f18cc885", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5539, "upload_time": "2020-04-13T18:23:44", "upload_time_iso_8601": "2020-04-13T18:23:44.508037Z", "url": "https://files.pythonhosted.org/packages/72/92/ed1d1e5934be239285dd3b43455d000f549fef650b5c961b2aa2a1bf012b/hungarian_algorithm-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "2d56c8b83d12acd8a24a170ac9f68ee5", "sha256": "5fea7946fdb3b35535e847c2888095cb20f6f6a8281c5fc2be22aec6b819d24e"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "2d56c8b83d12acd8a24a170ac9f68ee5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6957, "upload_time": "2020-04-29T18:24:43", "upload_time_iso_8601": "2020-04-29T18:24:43.211767Z", "url": "https://files.pythonhosted.org/packages/60/7e/7cfca108066fdfc3aa72a09684ecc6463f8fd96982f42b635e1466cff636/hungarian_algorithm-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dbb697e3785c4092689d4238a21c3084", "sha256": "de7bda69e2422a4bc6f01ce909f46b05d6ceb70292cd693250a791820f28cf23"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.7.tar.gz", "has_sig": false, "md5_digest": "dbb697e3785c4092689d4238a21c3084", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5597, "upload_time": "2020-04-29T18:24:45", "upload_time_iso_8601": "2020-04-29T18:24:45.987694Z", "url": "https://files.pythonhosted.org/packages/16/cd/42c1e913197c3867a2c2a0859cbc3fdc5da47b9f3444b7f983c03a56b48f/hungarian_algorithm-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "053839382cd99dcd8a7ce0f962385eb2", "sha256": "649f718d091a25c72a092f4d1e6f20657f61f4d010ca3dd68973267d5328f963"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "053839382cd99dcd8a7ce0f962385eb2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6790, "upload_time": "2020-04-29T18:28:27", "upload_time_iso_8601": "2020-04-29T18:28:27.021416Z", "url": "https://files.pythonhosted.org/packages/2b/58/59ca83781295e7cc604e42067160ef3af0fd214ed280e3791c37bda24fce/hungarian_algorithm-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30b28740f5d20b73ad4cb09f19c1d345", "sha256": "502e249392099400b012cfda441a790791058b0eaf3e51c446062020d4d3316b"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.8.tar.gz", "has_sig": false, "md5_digest": "30b28740f5d20b73ad4cb09f19c1d345", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5577, "upload_time": "2020-04-29T18:28:28", "upload_time_iso_8601": "2020-04-29T18:28:28.340434Z", "url": "https://files.pythonhosted.org/packages/60/1e/044689e45fbad804a038f057572683465993914532df84ff23985ea6b11c/hungarian_algorithm-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "29f57db026ee2e6c7c34e562c0d39d60", "sha256": "f63571a2b7a5d2f5533a03d46141460927fcdf9cb7196a3bcbb784c287859774"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.9-py3-none-any.whl", "has_sig": false, "md5_digest": "29f57db026ee2e6c7c34e562c0d39d60", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6796, "upload_time": "2020-04-29T18:34:00", "upload_time_iso_8601": "2020-04-29T18:34:00.411686Z", "url": "https://files.pythonhosted.org/packages/b5/de/dfb4bc5878840da56cc82a7979efc9d3fb79fd806542a42906ebfe28f295/hungarian_algorithm-0.1.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "46d632e7b0b80d1de4ebd40929d9ff0c", "sha256": "5849fa894869d94ae5e849b6ea949670acc17491adca031b2583a383aeebeeea"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.9.tar.gz", "has_sig": false, "md5_digest": "46d632e7b0b80d1de4ebd40929d9ff0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5582, "upload_time": "2020-04-29T18:34:01", "upload_time_iso_8601": "2020-04-29T18:34:01.625094Z", "url": "https://files.pythonhosted.org/packages/a6/d0/2c15b75f8d88ffe674be6339dc6235aa11acda4e4ebe877614777425c4c1/hungarian_algorithm-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e8a7dd43e5a5ae5fcfcd244d543ddbb7", "sha256": "7be6a6612ae9f4ecdab843343331b21340aba9d0f570693caca73f8f00bfcf45"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.10-py3-none-any.whl", "has_sig": false, "md5_digest": "e8a7dd43e5a5ae5fcfcd244d543ddbb7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6810, "upload_time": "2020-04-29T18:38:22", "upload_time_iso_8601": "2020-04-29T18:38:22.164370Z", "url": "https://files.pythonhosted.org/packages/e0/29/be074068777207aaa437a1e34192c68ef80fd168686cea5f280f3c919725/hungarian_algorithm-0.1.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "291466750894b61bb47193e695e201aa", "sha256": "7780e2264acc40e913bbe6e2731cc8139441b7f1f5e500382643c95763bf1d13"}, "downloads": -1, "filename": "hungarian_algorithm-0.1.10.tar.gz", "has_sig": false, "md5_digest": "291466750894b61bb47193e695e201aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5580, "upload_time": "2020-04-29T18:38:23", "upload_time_iso_8601": "2020-04-29T18:38:23.506357Z", "url": "https://files.pythonhosted.org/packages/99/73/8579f34a83e783160bb41c1d4456e2516f97ea3a1d4eb5f5f768deb47def/hungarian_algorithm-0.1.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:49 2020"}