{"info": {"author": "Joe Trotta", "author_email": "jht6437@rit.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)"], "description": "===========\nstatuspi.py\n===========\n\nA simple headless status box utility for the Raspberry Pi.  Released\nunder the GPL.\n\nSetup\n-----\n\nDownload the script, then install the GPIO library::\n\n    sudo pip install rpi.gpio\n\nThen write your own python script to define when you want your LED to\nilluminate.  This script will be called with a five second delay each time.\nWhen your script returns 1, the LED will illuminate; when the script\nreturns anything else, the light will turn off.\n\nFinally, wire up the LED to pin 18 and ground.  For you non-hardware types,\nhere's a quick explanation:  connect the longer lead of the LED to GND,\nand the shorter lead to an empty space on your breadboard.  Connect that\nshorter lead to a 220 Ohm or greater resistor, and connect the other end of\nthe resistor to the pin on your breakout board that reads '#18'.\n\nUsage\n-----\n\nThis script **must** be run as su, or the GPIO library won't be able to\naccess the hardware correctly.  Usage is as follows::\n\n    sudo python statuspi.py <your script>\n\nTo do\n-----\n\n- Gracefully closing the GPIO library\n- Allowing the use of multiple scripts and multiple LEDs through a yaml\n    config file\n- Customizable repeat time for scripts\n\nLicense\n-------\n\nstatuspi.py is licensed under the GPLv3.  See 'LICENSE' for details.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/h2g2guy/statuspi.py", "keywords": "", "license": "GPLv3+", "maintainer": null, "maintainer_email": null, "name": "statuspi.py", "package_url": "https://pypi.org/project/statuspi.py/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/statuspi.py/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/h2g2guy/statuspi.py"}, "release_url": "https://pypi.org/project/statuspi.py/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "A simple headless status box utility for the Raspberry Pi.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A simple headless status box utility for the Raspberry Pi.  Released\nunder the GPL.</p>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>Download the script, then install the GPIO library:</p>\n<pre>sudo pip install rpi.gpio\n</pre>\n<p>Then write your own python script to define when you want your LED to\nilluminate.  This script will be called with a five second delay each time.\nWhen your script returns 1, the LED will illuminate; when the script\nreturns anything else, the light will turn off.</p>\n<p>Finally, wire up the LED to pin 18 and ground.  For you non-hardware types,\nhere\u2019s a quick explanation:  connect the longer lead of the LED to GND,\nand the shorter lead to an empty space on your breadboard.  Connect that\nshorter lead to a 220 Ohm or greater resistor, and connect the other end of\nthe resistor to the pin on your breakout board that reads \u2018#18\u2019.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>This script <strong>must</strong> be run as su, or the GPIO library won\u2019t be able to\naccess the hardware correctly.  Usage is as follows:</p>\n<pre>sudo python statuspi.py &lt;your script&gt;\n</pre>\n</div>\n<div id=\"to-do\">\n<h2>To do</h2>\n<ul>\n<li>Gracefully closing the GPIO library</li>\n<li><dl>\n<dt>Allowing the use of multiple scripts and multiple LEDs through a yaml</dt>\n<dd>config file</dd>\n</dl>\n</li>\n<li>Customizable repeat time for scripts</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>statuspi.py is licensed under the GPLv3.  See \u2018LICENSE\u2019 for details.</p>\n</div>\n\n          </div>"}, "last_serial": 1034048, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "bcc604a55e96922f9dd97de0d52bd97c", "sha256": "c0b3042239666d998df0c8caf928aa7cd6bb0604370b6f1a05a43515e887e955"}, "downloads": -1, "filename": "statuspi.py-0.1.0.tar.gz", "has_sig": false, "md5_digest": "bcc604a55e96922f9dd97de0d52bd97c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7371, "upload_time": "2014-03-18T18:14:07", "upload_time_iso_8601": "2014-03-18T18:14:07.423515Z", "url": "https://files.pythonhosted.org/packages/ca/6e/f9487acaa10f56facade14a720fbf948e39ca8dbdd5958a8d6437e674df9/statuspi.py-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bcc604a55e96922f9dd97de0d52bd97c", "sha256": "c0b3042239666d998df0c8caf928aa7cd6bb0604370b6f1a05a43515e887e955"}, "downloads": -1, "filename": "statuspi.py-0.1.0.tar.gz", "has_sig": false, "md5_digest": "bcc604a55e96922f9dd97de0d52bd97c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7371, "upload_time": "2014-03-18T18:14:07", "upload_time_iso_8601": "2014-03-18T18:14:07.423515Z", "url": "https://files.pythonhosted.org/packages/ca/6e/f9487acaa10f56facade14a720fbf948e39ca8dbdd5958a8d6437e674df9/statuspi.py-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:18 2020"}