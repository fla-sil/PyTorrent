{"info": {"author": "Tommy Mckinnon", "author_email": "tommy@HeliosProtocol.io", "bugtrack_url": null, "classifiers": [], "description": "======================\nAtomars Alterdice API\n======================\n\n.. image:: https://img.shields.io/badge/python-3.6-blue.svg\n    :target: https://www.python.org/downloads/release/python-360/\n    :alt: Python3.6\n\n\n\nThis is an unofficial python API for Atomars and Alterdice exchanges.\n\nInstall\n-----------------------\n\nInstall using pip\n\n.. code:: bash\n\n    $ pip install atom-alter-api\n\n\nUsage\n---------\nNote: Many of the functions in the API are async. So you have to use await or ensure_future etc... To use the API in another python program, first import asyncio and the API, then login using your username and password, then call whatever function you would like. Because the API is asyncio, we will need to do this within a class so that we can \"await\" for functions to complete. Here is a simple example to get the balances:\n\n    .. code:: python\n\n        import asyncio\n        from atom_alter_API.api import AtomarsAlterdiceAPI\n\n        class TestClass():\n\n            def __init__(self):\n                self.api = AtomarsAlterdiceAPI(API_login_username, API_login_password)\n\n            async def run(self):\n                await self.api.login()\n                balances = await self.api.get_balances()\n                print(balances)\n\n        if __name__ == \"__main__\":\n\n            testClass = TestClass()\n            asyncio.ensure_future(testClass.run())\n\n            loop = asyncio.get_event_loop()\n            loop.run_forever()\n            loop.close()\n\n\n\nSee the docs folder for more info. Also see tests for some more code examples.\n\n\nInstall for development\n-----------------------\n\n1)  Clone this repo\n\n    .. code:: bash\n\n        $ cd ~/\n        $ git clone https://github.com/hyperevo/Atomars-alterdice-API\n\n\n2)  Install using pip\n\n    .. code:: bash\n\n        $ cd Atomars-alterdice-API\n        $ pip3 install -e .\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hyperevo/Atomars-alterdice-API", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "atom-alter-api", "package_url": "https://pypi.org/project/atom-alter-api/", "platform": "", "project_url": "https://pypi.org/project/atom-alter-api/", "project_urls": {"Homepage": "https://github.com/hyperevo/Atomars-alterdice-API"}, "release_url": "https://pypi.org/project/atom-alter-api/0.1.4/", "requires_dist": ["aiohttp (==3.5.4)", "eth-utils (==1.8.1)", "aiohttp (==3.5.4) ; extra == 'api'", "eth-utils (==1.8.1) ; extra == 'api'"], "requires_python": ">=3.6", "summary": "An unofficial python library for communication with the Atomars and Alterdice exchanges API", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://www.python.org/downloads/release/python-360/\" rel=\"nofollow\"><img alt=\"Python3.6\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01419d339114693587408dd14856677a4789006a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e362d626c75652e737667\"></a>\n<p>This is an unofficial python API for Atomars and Alterdice exchanges.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Install using pip</p>\n<pre>$ pip install atom-alter-api\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Note: Many of the functions in the API are async. So you have to use await or ensure_future etc\u2026 To use the API in another python program, first import asyncio and the API, then login using your username and password, then call whatever function you would like. Because the API is asyncio, we will need to do this within a class so that we can \u201cawait\u201d for functions to complete. Here is a simple example to get the balances:</p>\n<blockquote>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">atom_alter_API.api</span> <span class=\"kn\">import</span> <span class=\"n\">AtomarsAlterdiceAPI</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">TestClass</span><span class=\"p\">():</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">AtomarsAlterdiceAPI</span><span class=\"p\">(</span><span class=\"n\">API_login_username</span><span class=\"p\">,</span> <span class=\"n\">API_login_password</span><span class=\"p\">)</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">()</span>\n        <span class=\"n\">balances</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get_balances</span><span class=\"p\">()</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">balances</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n\n    <span class=\"n\">testClass</span> <span class=\"o\">=</span> <span class=\"n\">TestClass</span><span class=\"p\">()</span>\n    <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">ensure_future</span><span class=\"p\">(</span><span class=\"n\">testClass</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">())</span>\n\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">()</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</blockquote>\n<p>See the docs folder for more info. Also see tests for some more code examples.</p>\n</div>\n<div id=\"install-for-development\">\n<h2>Install for development</h2>\n<ol>\n<li><p>Clone this repo</p>\n<pre>$ <span class=\"nb\">cd</span> ~/\n$ git clone https://github.com/hyperevo/Atomars-alterdice-API\n</pre>\n</li>\n<li><p>Install using pip</p>\n<pre>$ <span class=\"nb\">cd</span> Atomars-alterdice-API\n$ pip3 install -e .\n</pre>\n</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 6281198, "releases": {"0.1.4": [{"comment_text": "", "digests": {"md5": "fcf9d04292bde9ed6d292b7bb95ae0ce", "sha256": "1869cb4a1e1f59326083641349053c11f53961c29015bc0dea6087fe5f0f411d"}, "downloads": -1, "filename": "atom_alter_api-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "fcf9d04292bde9ed6d292b7bb95ae0ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10382, "upload_time": "2019-12-11T21:59:06", "upload_time_iso_8601": "2019-12-11T21:59:06.415892Z", "url": "https://files.pythonhosted.org/packages/73/7c/55e3a526d1ec0115888508aaffe6f260003ea03e0e29f6f12a9efd587dd0/atom_alter_api-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "90070336b0cb6af9218a8c05f87032ea", "sha256": "f11b7c4c1c1c424805f9afc2fb63cb0311fe35ad9fd3c2165cf9a8f49d874124"}, "downloads": -1, "filename": "atom_alter_api-0.1.4.tar.gz", "has_sig": false, "md5_digest": "90070336b0cb6af9218a8c05f87032ea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7915, "upload_time": "2019-12-11T21:59:08", "upload_time_iso_8601": "2019-12-11T21:59:08.011140Z", "url": "https://files.pythonhosted.org/packages/97/e3/07dc31dbac8481cc244aac07986f70013d097500a6cd16eaf635ba9ece77/atom_alter_api-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fcf9d04292bde9ed6d292b7bb95ae0ce", "sha256": "1869cb4a1e1f59326083641349053c11f53961c29015bc0dea6087fe5f0f411d"}, "downloads": -1, "filename": "atom_alter_api-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "fcf9d04292bde9ed6d292b7bb95ae0ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10382, "upload_time": "2019-12-11T21:59:06", "upload_time_iso_8601": "2019-12-11T21:59:06.415892Z", "url": "https://files.pythonhosted.org/packages/73/7c/55e3a526d1ec0115888508aaffe6f260003ea03e0e29f6f12a9efd587dd0/atom_alter_api-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "90070336b0cb6af9218a8c05f87032ea", "sha256": "f11b7c4c1c1c424805f9afc2fb63cb0311fe35ad9fd3c2165cf9a8f49d874124"}, "downloads": -1, "filename": "atom_alter_api-0.1.4.tar.gz", "has_sig": false, "md5_digest": "90070336b0cb6af9218a8c05f87032ea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7915, "upload_time": "2019-12-11T21:59:08", "upload_time_iso_8601": "2019-12-11T21:59:08.011140Z", "url": "https://files.pythonhosted.org/packages/97/e3/07dc31dbac8481cc244aac07986f70013d097500a6cd16eaf635ba9ece77/atom_alter_api-0.1.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:34 2020"}