{"info": {"author": "Arthur Douillard, Timoth\u00e9e Lesort", "author_email": "ar.douillard@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Continual Loader (CLLoader)\n\n[![PyPI version](https://badge.fury.io/py/clloader.svg)](https://badge.fury.io/py/clloader) [![Build Status](https://travis-ci.com/arthurdouillard/continual_loader.svg?branch=master)](https://travis-ci.com/arthurdouillard/continual_loader) [![Codacy Badge](https://api.codacy.com/project/badge/Grade/c3a31475bebc4036a13e6048c24eb3e0)](https://www.codacy.com/gh/Continvvm/continuum?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Continvvm/continuum&amp;utm_campaign=Badge_Grade) [![DOI](https://zenodo.org/badge/254864913.svg)](https://zenodo.org/badge/latestdoi/254864913) [![Documentation Status](https://readthedocs.org/projects/continuum/badge/?version=latest)](https://continuum.readthedocs.io/en/latest/?badge=latest)\n\n## A library for PyTorch's loading of datasets in the field of Continual Learning\n\nAka Continual Learning, Lifelong-Learning, Incremental Learning, etc.\n\n\n### Example:\n\nInstall from and PyPi:\n```bash\npip3 install continuum\n```\n\nAnd run!\n```python\nfrom torch.utils.data import DataLoader\n\nfrom continuum import ClassIncremental\nfrom continuum.datasets import MNIST\n\nclloader = ClassIncremental(\n    MNIST(\"my/data/path\", download=True),\n    increment=1,\n    initial_increment=5,\n    train=True  # a different loader for test\n)\n\nprint(f\"Number of classes: {clloader.nb_classes}.\")\nprint(f\"Number of tasks: {clloader.nb_tasks}.\")\n\nfor task_id, train_dataset in enumerate(clloader):\n    train_dataset, val_dataset = split_train_val(train_dataset)\n    train_loader = DataLoader(train_dataset)\n    val_loader = DataLoader(val_dataset)\n\n    # Do your cool stuff here\n```\n\n### Supported Scenarios\n\n|Name | Acronym |\u00a0Supported |\n|:----|:---|:---:|\n| **New Instances** |\u00a0NI | :white_check_mark: |\n| **New Classes** |\u00a0NC | :white_check_mark: |\n| **New Instances & Classes** |\u00a0NIC | :x: |\n\n### Supported Datasets:\n\nNote that the task sizes are fully customizable.\n\n|Name | Nb classes |\u00a0Image Size | Automatic Download |\n|:----|:---:|:----:|:---:|\n| **MNIST** | 10 |\u00a028x28x1 | :white_check_mark: |\n| **Fashion MNIST** | 10 |\u00a028x28x1 | :white_check_mark: |\n| **KMNIST** | 10 |\u00a028x28x1 | :white_check_mark: |\n| **EMNIST** | 10 |\u00a028x28x1 | :white_check_mark: |\n| **QMNIST** | 10 |\u00a028x28x1 | :white_check_mark: |\n| **MNIST Fellowship** | 30 |\u00a028x28x1 | :white_check_mark: |\n| **CIFAR10** | 10 | 32x32x3 | :white_check_mark: |\n| **CIFAR100** | 100 | 32x32x3 | :white_check_mark: |\n| **CIFAR Fellowship** | 110 | 32x32x3 | :white_check_mark: |\n| **ImageNet100** | 100 | 224x224x3 | :x: |\n| **ImageNet1000** | 1000 | 224x224x3 | :x: |\n| **Permuted MNIST** | 10 | 28x28x1 | :white_check_mark: |\n| **Rotated MNIST** | 10 | 28x28x1 | :white_check_mark: |\n\nFurthermore some \"Meta\"-datasets are available:\n\n**InMemoryDataset**, for in-memory numpy array:\n```python\nx_train, y_train = gen_numpy_array()\nx_test, y_test = gen_numpy_array()\n\nclloader = CLLoader(\n    InMemoryDataset(x_train, y_train, x_test, y_test),\n    increment=10,\n)\n```\n\n**PyTorchDataset**,for any dataset defined in torchvision:\n```python\nclloader = CLLoader(\n    PyTorchDataset(\"/my/data/path\", dataset_type=torchvision.datasets.CIFAR10),\n    increment=10,\n)\n```\n\n**ImageFolderDataset**, for datasets having a tree-like structure, with one folder per class:\n```python\nclloader = CLLoader(\n    ImageFolderDataset(\"/my/train/folder\", \"/my/test/folder\"),\n    increment=10,\n)\n```\n\n**Fellowship**, to combine several continual datasets.:\n```python\nclloader = CLLoader(\n    Fellowship(\"/my/data/path\", dataset_list=[CIFAR10, CIFAR100]),\n    increment=10,\n)\n```\n\nSome datasets cannot provide an automatic download of the data for miscealleneous reasons. For example for ImageNet, you'll need to download the data from the [official page](http://www.image-net.org/challenges/LSVRC/2012/downloads). Then load it likewise:\n```python\nclloader = CLLoader(\n    ImageNet1000(\"/my/train/folder\", \"/my/test/folder\"),\n    increment=10,\n)\n```\n\nSome papers use a subset, called ImageNet100 or ImageNetSubset. You'll need to get the subset ids. It's either a file in the following format:\n```\nmy/path/to/image0.JPEG target0\nmy/path/to/image1.JPEG target1\n```\nOr a list of tuple `[(\"my/path/to/image0.JPEG\", target0), ...]`. Then loading the continual loader is very simple:\n```python\nclloader = CLLoader(\n    ImageNet100(\n        \"/my/train/folder\",\n        \"/my/test/folder\",\n        train_subset=... # My subset ids\n        test_subset=... # My subset ids\n    ),\n    increment=10,\n)\n```\n\n### Continual Loader\n\nThe Continual Loader `CLLoader` loads the data and batch it in several tasks. See there some example arguments:\n\n```python\nclloader = CLLoader(\n    my_continual_dataset,\n    increment=10,\n    initial_increment=2,\n    train_transformations=[transforms.RandomHorizontalFlip()],\n    common_transformations=[\n        transforms.ToTensor(),\n        transforms.Normalize((0.4914, 0.4822, 0.4465), (0.2023, 0.1994, 0.2010))\n    ],\n    evaluate_on=\"seen\"\n)\n```\n\nHere the first task is made of 2 classes, then all following tasks of 10 classes. You can have a more finegrained increment by providing a list of `increment=[2, 10, 5, 10]`.\n\nThe `train_transformations` is applied only on the training data, while the `common_transformations` on both the training and testing data.\n\nBy default, we evaluate our model after each task on `seen` classes. But you can evalute only on `current` classes, or even on `all` classes.\n\n\n### Sample Images\n\n**MNIST**:\n\n|<img src=\"images/mnist_0.jpg\" width=\"150\">|<img src=\"images/mnist_1.jpg\" width=\"150\">|<img src=\"images/mnist_2.jpg\" width=\"150\">|<img src=\"images/mnist_3.jpg\" width=\"150\">|<img src=\"images/mnist_4.jpg\" width=\"150\">|\n|:-------------------------:|:-------------------------:|:-------------------------:|:-------------------------:|:-------------------------:|\n|Task 0 | Task 1 | Task 2 | Task 3 | Task 4|\n\n**FashionMNIST**:\n\n|<img src=\"images/fashion_mnist_0.jpg\" width=\"150\">|<img src=\"images/fashion_mnist_1.jpg\" width=\"150\">|<img src=\"images/fashion_mnist_2.jpg\" width=\"150\">|<img src=\"images/fashion_mnist_3.jpg\" width=\"150\">|<img src=\"images/fashion_mnist_4.jpg\" width=\"150\">|\n|:-------------------------:|:-------------------------:|:-------------------------:|:-------------------------:|:-------------------------:|\n|Task 0 | Task 1 | Task 2 | Task 3 | Task 4|\n\n**CIFAR10**:\n\n|<img src=\"images/cifar10_0.jpg\" width=\"150\">|<img src=\"images/cifar10_1.jpg\" width=\"150\">|<img src=\"images/cifar10_2.jpg\" width=\"150\">|<img src=\"images/cifar10_3.jpg\" width=\"150\">|<img src=\"images/cifar10_4.jpg\" width=\"150\">|\n|:-------------------------:|:-------------------------:|:-------------------------:|:-------------------------:|:-------------------------:|\n|Task 0 | Task 1 | Task 2 | Task 3 | Task 4|\n\n**MNIST Fellowship (MNIST + FashionMNIST + KMNIST)**:\n\n|<img src=\"images/mnist_fellowship_0.jpg\" width=\"150\">|<img src=\"images/mnist_fellowship_1.jpg\" width=\"150\">|<img src=\"images/mnist_fellowship_2.jpg\" width=\"150\">|\n|:-------------------------:|:-------------------------:|:-------------------------:|\n|Task 0 | Task 1 | Task 2 |\n\n\n**PermutedMNIST**:\n\n|<img src=\"images/mnist_permuted_0.jpg\" width=\"150\">|<img src=\"images/mnist_permuted_1.jpg\" width=\"150\">|<img src=\"images/mnist_permuted_2.jpg\" width=\"150\">|<img src=\"images/mnist_permuted_3.jpg\" width=\"150\">|<img src=\"images/mnist_permuted_4.jpg\" width=\"150\">|\n|:-------------------------:|:-------------------------:|:-------------------------:|:-------------------------:|:-------------------------:|\n|Task 0 | Task 1 | Task 2 | Task 3 | Task 4|\n\n**RotatedMNIST**:\n\n|<img src=\"images/mnist_rotated_0.jpg\" width=\"150\">|<img src=\"images/mnist_rotated_1.jpg\" width=\"150\">|<img src=\"images/mnist_rotated_2.jpg\" width=\"150\">|<img src=\"images/mnist_rotated_3.jpg\" width=\"150\">|<img src=\"images/mnist_rotated_4.jpg\" width=\"150\">|\n|:-------------------------:|:-------------------------:|:-------------------------:|:-------------------------:|:-------------------------:|\n|Task 0 | Task 1 | Task 2 | Task 3 | Task 4|\n\n\n**ImageNet100**:\n\n|<img src=\"images/imagenet100_0.jpg\" width=\"150\">|<img src=\"images/imagenet100_1.jpg\" width=\"150\">|<img src=\"images/imagenet100_2.jpg\" width=\"150\">|<img src=\"images/imagenet100_3.jpg\" width=\"150\">| ... |\n|:-------------------------:|:-------------------------:|:-------------------------:|:-------------------------:|:-------------------------:|\n|Task 0 | Task 1 | Task 2 | Task 3 | ... |\n\n\n### Citation\n\nIf you find this library useful in your work, please consider citing it:\n\n```\n@software{douillard_lesort_continuum20,\n  author       = {Arthur Douillard, Timoth\u00e9e LESORT},\n  title        = {Continuum library},\n  month        = {April},\n  year         = {2020},\n  publisher    = {Zenodo},\n  version      = {v1.0},\n  doi          = {10.5281/zenodo.8475},\n  url          = {https://doi.org/10.5281/zenodo.8475}\n}\n```\n\n### On PyPi\n\nOur project is available on PyPi!\n\n```bash\npip3 install continuum\n```\n\nNote that previously another project, a CI tool, was using that name. It is now\nthere [continuum_ci](https://pypi.org/project/continuum_ci/).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Continvvm/continuum", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "continuum", "package_url": "https://pypi.org/project/continuum/", "platform": "", "project_url": "https://pypi.org/project/continuum/", "project_urls": {"Homepage": "https://github.com/Continvvm/continuum"}, "release_url": "https://pypi.org/project/continuum/0.0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A clean and simple library for Continual Learning in PyTorch.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Continual Loader (CLLoader)</h1>\n<p><a href=\"https://badge.fury.io/py/clloader\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9802252d09947937a84ff084eb49dd46b9ab3293/68747470733a2f2f62616467652e667572792e696f2f70792f636c6c6f616465722e737667\"></a> <a href=\"https://travis-ci.com/arthurdouillard/continual_loader\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b42fba6ea17b25c2916bf9448c870358e45f049/68747470733a2f2f7472617669732d63692e636f6d2f617274687572646f75696c6c6172642f636f6e74696e75616c5f6c6f616465722e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://www.codacy.com/gh/Continvvm/continuum?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Continvvm/continuum&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0575b17f9f1f9394128a3068b6226e66179bba2d/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6333613331343735626562633430333661313365363034386332346562336530\"></a> <a href=\"https://zenodo.org/badge/latestdoi/254864913\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/80ab109cbd3345a0e417a552dc59d65974a9ce99/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3235343836343931332e737667\"></a> <a href=\"https://continuum.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81d7187d6ec9f5a69e40383caff4a14172cdc237/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f636f6e74696e75756d2f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<h2>A library for PyTorch's loading of datasets in the field of Continual Learning</h2>\n<p>Aka Continual Learning, Lifelong-Learning, Incremental Learning, etc.</p>\n<h3>Example:</h3>\n<p>Install from and PyPi:</p>\n<pre>pip3 install continuum\n</pre>\n<p>And run!</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">torch.utils.data</span> <span class=\"kn\">import</span> <span class=\"n\">DataLoader</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">continuum</span> <span class=\"kn\">import</span> <span class=\"n\">ClassIncremental</span>\n<span class=\"kn\">from</span> <span class=\"nn\">continuum.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">MNIST</span>\n\n<span class=\"n\">clloader</span> <span class=\"o\">=</span> <span class=\"n\">ClassIncremental</span><span class=\"p\">(</span>\n    <span class=\"n\">MNIST</span><span class=\"p\">(</span><span class=\"s2\">\"my/data/path\"</span><span class=\"p\">,</span> <span class=\"n\">download</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>\n    <span class=\"n\">increment</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"n\">initial_increment</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"n\">train</span><span class=\"o\">=</span><span class=\"kc\">True</span>  <span class=\"c1\"># a different loader for test</span>\n<span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Number of classes: </span><span class=\"si\">{</span><span class=\"n\">clloader</span><span class=\"o\">.</span><span class=\"n\">nb_classes</span><span class=\"si\">}</span><span class=\"s2\">.\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Number of tasks: </span><span class=\"si\">{</span><span class=\"n\">clloader</span><span class=\"o\">.</span><span class=\"n\">nb_tasks</span><span class=\"si\">}</span><span class=\"s2\">.\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">task_id</span><span class=\"p\">,</span> <span class=\"n\">train_dataset</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">clloader</span><span class=\"p\">):</span>\n    <span class=\"n\">train_dataset</span><span class=\"p\">,</span> <span class=\"n\">val_dataset</span> <span class=\"o\">=</span> <span class=\"n\">split_train_val</span><span class=\"p\">(</span><span class=\"n\">train_dataset</span><span class=\"p\">)</span>\n    <span class=\"n\">train_loader</span> <span class=\"o\">=</span> <span class=\"n\">DataLoader</span><span class=\"p\">(</span><span class=\"n\">train_dataset</span><span class=\"p\">)</span>\n    <span class=\"n\">val_loader</span> <span class=\"o\">=</span> <span class=\"n\">DataLoader</span><span class=\"p\">(</span><span class=\"n\">val_dataset</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Do your cool stuff here</span>\n</pre>\n<h3>Supported Scenarios</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Name</th>\n<th align=\"left\">Acronym</th>\n<th align=\"center\">\u00a0Supported</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><strong>New Instances</strong></td>\n<td align=\"left\">\u00a0NI</td>\n<td align=\"center\">:white_check_mark:</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>New Classes</strong></td>\n<td align=\"left\">\u00a0NC</td>\n<td align=\"center\">:white_check_mark:</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>New Instances &amp; Classes</strong></td>\n<td align=\"left\">\u00a0NIC</td>\n<td align=\"center\">:x:</td>\n</tr></tbody></table>\n<h3>Supported Datasets:</h3>\n<p>Note that the task sizes are fully customizable.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Name</th>\n<th align=\"center\">Nb classes</th>\n<th align=\"center\">\u00a0Image Size</th>\n<th align=\"center\">Automatic Download</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><strong>MNIST</strong></td>\n<td align=\"center\">10</td>\n<td align=\"center\">\u00a028x28x1</td>\n<td align=\"center\">:white_check_mark:</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>Fashion MNIST</strong></td>\n<td align=\"center\">10</td>\n<td align=\"center\">\u00a028x28x1</td>\n<td align=\"center\">:white_check_mark:</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>KMNIST</strong></td>\n<td align=\"center\">10</td>\n<td align=\"center\">\u00a028x28x1</td>\n<td align=\"center\">:white_check_mark:</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>EMNIST</strong></td>\n<td align=\"center\">10</td>\n<td align=\"center\">\u00a028x28x1</td>\n<td align=\"center\">:white_check_mark:</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>QMNIST</strong></td>\n<td align=\"center\">10</td>\n<td align=\"center\">\u00a028x28x1</td>\n<td align=\"center\">:white_check_mark:</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>MNIST Fellowship</strong></td>\n<td align=\"center\">30</td>\n<td align=\"center\">\u00a028x28x1</td>\n<td align=\"center\">:white_check_mark:</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>CIFAR10</strong></td>\n<td align=\"center\">10</td>\n<td align=\"center\">32x32x3</td>\n<td align=\"center\">:white_check_mark:</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>CIFAR100</strong></td>\n<td align=\"center\">100</td>\n<td align=\"center\">32x32x3</td>\n<td align=\"center\">:white_check_mark:</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>CIFAR Fellowship</strong></td>\n<td align=\"center\">110</td>\n<td align=\"center\">32x32x3</td>\n<td align=\"center\">:white_check_mark:</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>ImageNet100</strong></td>\n<td align=\"center\">100</td>\n<td align=\"center\">224x224x3</td>\n<td align=\"center\">:x:</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>ImageNet1000</strong></td>\n<td align=\"center\">1000</td>\n<td align=\"center\">224x224x3</td>\n<td align=\"center\">:x:</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>Permuted MNIST</strong></td>\n<td align=\"center\">10</td>\n<td align=\"center\">28x28x1</td>\n<td align=\"center\">:white_check_mark:</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>Rotated MNIST</strong></td>\n<td align=\"center\">10</td>\n<td align=\"center\">28x28x1</td>\n<td align=\"center\">:white_check_mark:</td>\n</tr></tbody></table>\n<p>Furthermore some \"Meta\"-datasets are available:</p>\n<p><strong>InMemoryDataset</strong>, for in-memory numpy array:</p>\n<pre><span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span> <span class=\"o\">=</span> <span class=\"n\">gen_numpy_array</span><span class=\"p\">()</span>\n<span class=\"n\">x_test</span><span class=\"p\">,</span> <span class=\"n\">y_test</span> <span class=\"o\">=</span> <span class=\"n\">gen_numpy_array</span><span class=\"p\">()</span>\n\n<span class=\"n\">clloader</span> <span class=\"o\">=</span> <span class=\"n\">CLLoader</span><span class=\"p\">(</span>\n    <span class=\"n\">InMemoryDataset</span><span class=\"p\">(</span><span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">x_test</span><span class=\"p\">,</span> <span class=\"n\">y_test</span><span class=\"p\">),</span>\n    <span class=\"n\">increment</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p><strong>PyTorchDataset</strong>,for any dataset defined in torchvision:</p>\n<pre><span class=\"n\">clloader</span> <span class=\"o\">=</span> <span class=\"n\">CLLoader</span><span class=\"p\">(</span>\n    <span class=\"n\">PyTorchDataset</span><span class=\"p\">(</span><span class=\"s2\">\"/my/data/path\"</span><span class=\"p\">,</span> <span class=\"n\">dataset_type</span><span class=\"o\">=</span><span class=\"n\">torchvision</span><span class=\"o\">.</span><span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">CIFAR10</span><span class=\"p\">),</span>\n    <span class=\"n\">increment</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p><strong>ImageFolderDataset</strong>, for datasets having a tree-like structure, with one folder per class:</p>\n<pre><span class=\"n\">clloader</span> <span class=\"o\">=</span> <span class=\"n\">CLLoader</span><span class=\"p\">(</span>\n    <span class=\"n\">ImageFolderDataset</span><span class=\"p\">(</span><span class=\"s2\">\"/my/train/folder\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/my/test/folder\"</span><span class=\"p\">),</span>\n    <span class=\"n\">increment</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p><strong>Fellowship</strong>, to combine several continual datasets.:</p>\n<pre><span class=\"n\">clloader</span> <span class=\"o\">=</span> <span class=\"n\">CLLoader</span><span class=\"p\">(</span>\n    <span class=\"n\">Fellowship</span><span class=\"p\">(</span><span class=\"s2\">\"/my/data/path\"</span><span class=\"p\">,</span> <span class=\"n\">dataset_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">CIFAR10</span><span class=\"p\">,</span> <span class=\"n\">CIFAR100</span><span class=\"p\">]),</span>\n    <span class=\"n\">increment</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Some datasets cannot provide an automatic download of the data for miscealleneous reasons. For example for ImageNet, you'll need to download the data from the <a href=\"http://www.image-net.org/challenges/LSVRC/2012/downloads\" rel=\"nofollow\">official page</a>. Then load it likewise:</p>\n<pre><span class=\"n\">clloader</span> <span class=\"o\">=</span> <span class=\"n\">CLLoader</span><span class=\"p\">(</span>\n    <span class=\"n\">ImageNet1000</span><span class=\"p\">(</span><span class=\"s2\">\"/my/train/folder\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/my/test/folder\"</span><span class=\"p\">),</span>\n    <span class=\"n\">increment</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Some papers use a subset, called ImageNet100 or ImageNetSubset. You'll need to get the subset ids. It's either a file in the following format:</p>\n<pre><code>my/path/to/image0.JPEG target0\nmy/path/to/image1.JPEG target1\n</code></pre>\n<p>Or a list of tuple <code>[(\"my/path/to/image0.JPEG\", target0), ...]</code>. Then loading the continual loader is very simple:</p>\n<pre><span class=\"n\">clloader</span> <span class=\"o\">=</span> <span class=\"n\">CLLoader</span><span class=\"p\">(</span>\n    <span class=\"n\">ImageNet100</span><span class=\"p\">(</span>\n        <span class=\"s2\">\"/my/train/folder\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"/my/test/folder\"</span><span class=\"p\">,</span>\n        <span class=\"n\">train_subset</span><span class=\"o\">=...</span> <span class=\"c1\"># My subset ids</span>\n        <span class=\"n\">test_subset</span><span class=\"o\">=...</span> <span class=\"c1\"># My subset ids</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">increment</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<h3>Continual Loader</h3>\n<p>The Continual Loader <code>CLLoader</code> loads the data and batch it in several tasks. See there some example arguments:</p>\n<pre><span class=\"n\">clloader</span> <span class=\"o\">=</span> <span class=\"n\">CLLoader</span><span class=\"p\">(</span>\n    <span class=\"n\">my_continual_dataset</span><span class=\"p\">,</span>\n    <span class=\"n\">increment</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n    <span class=\"n\">initial_increment</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"n\">train_transformations</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">RandomHorizontalFlip</span><span class=\"p\">()],</span>\n    <span class=\"n\">common_transformations</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">ToTensor</span><span class=\"p\">(),</span>\n        <span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">Normalize</span><span class=\"p\">((</span><span class=\"mf\">0.4914</span><span class=\"p\">,</span> <span class=\"mf\">0.4822</span><span class=\"p\">,</span> <span class=\"mf\">0.4465</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mf\">0.2023</span><span class=\"p\">,</span> <span class=\"mf\">0.1994</span><span class=\"p\">,</span> <span class=\"mf\">0.2010</span><span class=\"p\">))</span>\n    <span class=\"p\">],</span>\n    <span class=\"n\">evaluate_on</span><span class=\"o\">=</span><span class=\"s2\">\"seen\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Here the first task is made of 2 classes, then all following tasks of 10 classes. You can have a more finegrained increment by providing a list of <code>increment=[2, 10, 5, 10]</code>.</p>\n<p>The <code>train_transformations</code> is applied only on the training data, while the <code>common_transformations</code> on both the training and testing data.</p>\n<p>By default, we evaluate our model after each task on <code>seen</code> classes. But you can evalute only on <code>current</code> classes, or even on <code>all</code> classes.</p>\n<h3>Sample Images</h3>\n<p><strong>MNIST</strong>:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2f22a4b4c02dbda83e1cc015f10fe11e3879ae6b/696d616765732f6d6e6973745f302e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1508b49f69bc2f36aceeda1d4d6efcd7d899345d/696d616765732f6d6e6973745f312e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d9b402971a0c319aad29b2846fee3dc75bf1ebad/696d616765732f6d6e6973745f322e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a2ba58995ba62b269457d1f68f98fc08082ccdcc/696d616765732f6d6e6973745f332e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9929c14751950afb0a23f80a43d8fd6439db631c/696d616765732f6d6e6973745f342e6a7067\" width=\"150\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Task 0</td>\n<td align=\"center\">Task 1</td>\n<td align=\"center\">Task 2</td>\n<td align=\"center\">Task 3</td>\n<td align=\"center\">Task 4</td>\n</tr></tbody></table>\n<p><strong>FashionMNIST</strong>:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8badbf69665df4682e9bbb2a9c4333cfa8cf10ab/696d616765732f66617368696f6e5f6d6e6973745f302e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5216182a719c433193f9c7e6d2eedaad61c0b2e4/696d616765732f66617368696f6e5f6d6e6973745f312e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ca1fd0a3b90e10a5d33f5524691b70203bec9bf/696d616765732f66617368696f6e5f6d6e6973745f322e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c012dba31f14b4b7120e3b6451ce2173423f0960/696d616765732f66617368696f6e5f6d6e6973745f332e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8624e66c910152a53710a4b5c06f9db963deb91e/696d616765732f66617368696f6e5f6d6e6973745f342e6a7067\" width=\"150\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Task 0</td>\n<td align=\"center\">Task 1</td>\n<td align=\"center\">Task 2</td>\n<td align=\"center\">Task 3</td>\n<td align=\"center\">Task 4</td>\n</tr></tbody></table>\n<p><strong>CIFAR10</strong>:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9ea440ec04b59c87c280254f504654cc6c261a8e/696d616765732f636966617231305f302e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e07a7ec73346d0568fb98c9bb2c4eefd0df8c1a2/696d616765732f636966617231305f312e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60fb7d1a43af1016868cf0fd6018a5818de36312/696d616765732f636966617231305f322e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8de7ab41d5c033b5983b7908988f374d0aafa120/696d616765732f636966617231305f332e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e3eda4f86de4a2e19d741933c9bdfec249941bc/696d616765732f636966617231305f342e6a7067\" width=\"150\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Task 0</td>\n<td align=\"center\">Task 1</td>\n<td align=\"center\">Task 2</td>\n<td align=\"center\">Task 3</td>\n<td align=\"center\">Task 4</td>\n</tr></tbody></table>\n<p><strong>MNIST Fellowship (MNIST + FashionMNIST + KMNIST)</strong>:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/18ca81f7503676a215ac2b0ca373f1f4a0fb471e/696d616765732f6d6e6973745f66656c6c6f77736869705f302e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/143d4a8c81d385bb1498bbcc1af2b5e1b7d72951/696d616765732f6d6e6973745f66656c6c6f77736869705f312e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/58b565ca65d89ea34e130f7d202a21b28fe09d64/696d616765732f6d6e6973745f66656c6c6f77736869705f322e6a7067\" width=\"150\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Task 0</td>\n<td align=\"center\">Task 1</td>\n<td align=\"center\">Task 2</td>\n</tr></tbody></table>\n<p><strong>PermutedMNIST</strong>:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d4367e740eba437dc792391b3216a6717ab452b1/696d616765732f6d6e6973745f7065726d757465645f302e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/50f922597b14c3e2222b54b72abbdd190d40f2fa/696d616765732f6d6e6973745f7065726d757465645f312e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/105e4c7aa5fe69da68ffd67a2529857dfbc313e5/696d616765732f6d6e6973745f7065726d757465645f322e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7d098fc15411ab80d81ff8655ef3f897cfdf11f0/696d616765732f6d6e6973745f7065726d757465645f332e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea6d36fdd9c6f7200458e6f5c96e45d7121f3731/696d616765732f6d6e6973745f7065726d757465645f342e6a7067\" width=\"150\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Task 0</td>\n<td align=\"center\">Task 1</td>\n<td align=\"center\">Task 2</td>\n<td align=\"center\">Task 3</td>\n<td align=\"center\">Task 4</td>\n</tr></tbody></table>\n<p><strong>RotatedMNIST</strong>:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b687d2776b2a8a136def5cd6fa10c728d7601055/696d616765732f6d6e6973745f726f74617465645f302e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f9080becbf286180b1d44379cf368ff473692b1b/696d616765732f6d6e6973745f726f74617465645f312e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ba7ffbdf36898480479e411ae4c28bf1ed06300/696d616765732f6d6e6973745f726f74617465645f322e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/428dea429aadc9ab3d14465c4932861c641a76c4/696d616765732f6d6e6973745f726f74617465645f332e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/acb625d59007e9c996dd3b36cd56eddfc4317b78/696d616765732f6d6e6973745f726f74617465645f342e6a7067\" width=\"150\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Task 0</td>\n<td align=\"center\">Task 1</td>\n<td align=\"center\">Task 2</td>\n<td align=\"center\">Task 3</td>\n<td align=\"center\">Task 4</td>\n</tr></tbody></table>\n<p><strong>ImageNet100</strong>:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4d111c4a02e9713e4a9a15395a012ca025136723/696d616765732f696d6167656e65743130305f302e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/32478346d77ff4852801674ada45e12cf1663b4c/696d616765732f696d6167656e65743130305f312e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9cc4f17f048f8c3cc08317a8176f2d5cd7442809/696d616765732f696d6167656e65743130305f322e6a7067\" width=\"150\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/640e5d557336351bca44123a0744f098a43dbf5e/696d616765732f696d6167656e65743130305f332e6a7067\" width=\"150\"></th>\n<th align=\"center\">...</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Task 0</td>\n<td align=\"center\">Task 1</td>\n<td align=\"center\">Task 2</td>\n<td align=\"center\">Task 3</td>\n<td align=\"center\">...</td>\n</tr></tbody></table>\n<h3>Citation</h3>\n<p>If you find this library useful in your work, please consider citing it:</p>\n<pre><code>@software{douillard_lesort_continuum20,\n  author       = {Arthur Douillard, Timoth\u00e9e LESORT},\n  title        = {Continuum library},\n  month        = {April},\n  year         = {2020},\n  publisher    = {Zenodo},\n  version      = {v1.0},\n  doi          = {10.5281/zenodo.8475},\n  url          = {https://doi.org/10.5281/zenodo.8475}\n}\n</code></pre>\n<h3>On PyPi</h3>\n<p>Our project is available on PyPi!</p>\n<pre>pip3 install continuum\n</pre>\n<p>Note that previously another project, a CI tool, was using that name. It is now\nthere <a href=\"https://pypi.org/project/continuum_ci/\" rel=\"nofollow\">continuum_ci</a>.</p>\n\n          </div>"}, "last_serial": 7167486, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "77900109e874cafde094b73277a957ae", "sha256": "7b58e22a3abe6ea3a49c00d7552a04d5a9a0d1639d1834ad0953ef7120d16c31"}, "downloads": -1, "filename": "continuum-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "77900109e874cafde094b73277a957ae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27411, "upload_time": "2020-05-04T20:04:32", "upload_time_iso_8601": "2020-05-04T20:04:32.720384Z", "url": "https://files.pythonhosted.org/packages/18/cd/40746d3f748e1a89f5843061ec26204945071dffd8b9104b49a819ec77f7/continuum-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf15dfe12465266875580818d0dbfce4", "sha256": "3b625f605cd54239a1f7d8a6d4dcd5b4311051750a72fb78b5a8cbc2024c117d"}, "downloads": -1, "filename": "continuum-0.0.1.tar.gz", "has_sig": false, "md5_digest": "cf15dfe12465266875580818d0dbfce4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 747110, "upload_time": "2020-05-04T20:04:35", "upload_time_iso_8601": "2020-05-04T20:04:35.227911Z", "url": "https://files.pythonhosted.org/packages/6e/6b/ddd90f4b50bd5c19de7f90f8cf22f1ab450f793635de4f01be04dc2f7ef7/continuum-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f7fbdd883bc65737dff4cfc0780b3bb2", "sha256": "b13aaf9a6001c1dc1d52fed844f790ba8de54212a561b7438d9d4b25afe094e3"}, "downloads": -1, "filename": "continuum-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f7fbdd883bc65737dff4cfc0780b3bb2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 45308, "upload_time": "2020-05-04T20:22:11", "upload_time_iso_8601": "2020-05-04T20:22:11.942114Z", "url": "https://files.pythonhosted.org/packages/07/cc/21effbf89c304289ac9269d23093d08f6dd0cd0d01faa3c6911afbfbd279/continuum-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f79c83e352725141217962b42b01a82", "sha256": "8f00547ea1344fb69bf17db5daf5da1c73618041215b703e3099fdedd5592696"}, "downloads": -1, "filename": "continuum-0.0.2.tar.gz", "has_sig": false, "md5_digest": "6f79c83e352725141217962b42b01a82", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 747378, "upload_time": "2020-05-04T20:22:13", "upload_time_iso_8601": "2020-05-04T20:22:13.829038Z", "url": "https://files.pythonhosted.org/packages/aa/24/8ba512aa50e5f551217de874a2bbdebcb7d05b3bfccfbc41c77816e1de22/continuum-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f7fbdd883bc65737dff4cfc0780b3bb2", "sha256": "b13aaf9a6001c1dc1d52fed844f790ba8de54212a561b7438d9d4b25afe094e3"}, "downloads": -1, "filename": "continuum-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f7fbdd883bc65737dff4cfc0780b3bb2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 45308, "upload_time": "2020-05-04T20:22:11", "upload_time_iso_8601": "2020-05-04T20:22:11.942114Z", "url": "https://files.pythonhosted.org/packages/07/cc/21effbf89c304289ac9269d23093d08f6dd0cd0d01faa3c6911afbfbd279/continuum-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f79c83e352725141217962b42b01a82", "sha256": "8f00547ea1344fb69bf17db5daf5da1c73618041215b703e3099fdedd5592696"}, "downloads": -1, "filename": "continuum-0.0.2.tar.gz", "has_sig": false, "md5_digest": "6f79c83e352725141217962b42b01a82", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 747378, "upload_time": "2020-05-04T20:22:13", "upload_time_iso_8601": "2020-05-04T20:22:13.829038Z", "url": "https://files.pythonhosted.org/packages/aa/24/8ba512aa50e5f551217de874a2bbdebcb7d05b3bfccfbc41c77816e1de22/continuum-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:31 2020"}