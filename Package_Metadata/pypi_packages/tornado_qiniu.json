{"info": {"author": "HuangBiao", "author_email": "19941222hb@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "qiniu storage asynchronous sdk for tornado\n=================================================\n\n.. image:: https://img.shields.io/github/license/mashape/apistatus.svg\n  :target: LICENSE\n\n\nInstallation\n---------------\n\n.. code-block:: bash\n\n    $ python3.x setup.py install\n\n\nor\n\n.. code-block:: bash\n    \n    $ pip3.x install tornado_qiniu\n\n\nEnvironment\n-------------------\n\n.. list-table::\n   :widths: 50 50\n   :header-rows: 1\n\n   * - tornado_qiniu version \n     - python version\n   * - 1.0\n     - 3.4,3.5\n\n\nQuick Start\n---------------------\n\nResource Upload and Download\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    from tornado import gen,ioloop\n    from tornado_qiniu import QiniuClient\n\n    access_key = \"your qiniu access key\"\n    secret_key = \"your qiniu secret key\"\n    bucket_name = \"your bucket name\"\n    domain = \"your domain\"\n    bucket_acp = 0   #bucket access property,1 ===>private bucket,0===>public bucket\n\n    client = QiniuClient(access_key, secret_key, domain)\n    loop = ioloop.IOLoop.current()\n\n    #get a bucket instance\n    bucket = client.bucket(bucket_name, bucket_acp=1)\n\n    #get bucket upload token\n    bucket.upload_token()\n\n    # get resource url\n    bucket.res(\"resource_key\").url()\n    bucket.res('key1','key2').url()\n\n    # download resource\n    @gen.coroutine\n    def get_resource():\n        response = yield bucket.res(\"resource_key\").get() #return   saved name\n        # get multi resource \n        response = yield bucket.res('key1','key2').get()  #return a list of the  saved  name\n    loop.run_sync(get_resource)\n\n    # upload resource\n    @gen.coroutine\n    def upload():\n        #when file's size greater than 4MB,using shard uploading \n        #after uploading successfully,return key name and file hash value\n        response = yield bucket.res(\"key\").put(\"./testfile\") #return resource hash value,and key\n\n    loop.run_sync(upload)\n    loop.close()\n\n\nResource Management\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    from tornado import gen,ioloop\n    from tornado_qiniu import QiniuClient\n\n    access_key = \"your qiniu access key\"\n    secret_key = \"your qiniu secret key\"\n    bucket_name = \"your bucket name\"\n    domain=\"your domain\"\n    bucket_acp = 0   #bucket access property,1 ===>private bucket,0===>public bucket\n\n    client = QiniuClient(access_key,secret_key,domain)\n    bucket = client.bucket(bucket_name,bucket_acp=bucket_acp)\n    loop = ioloop.IOLoop.current()\n\n    #single resource management\n    @gen.coroutine\n    def single_resource_manage():\n        #resource state\n        state = yield bucket.res('key').stat()\n\n        #resource deleting\n        yield bucket.res('key').delete()\n\t\n        #resource moving\n        yield bucket.res('src_key').moveto('dest_key', 'dest_bucket')\n\t\n        #resource coping\n        yield bucket.res('src_key').copyto('dest_key', 'dest_bucket')\n    loop.run_sync(single_resource_manage)\n\t\n    #multi resource management\n    @gen.coroutine\n    def multi_resource_manage():\n        #multi resource state\n        state = yield bucket.res('key1', 'key2', 'key3').multi_stat()\n\t\n        #multi resource deleting\n        yield bucket.res('key1', 'key2', 'key3').multi_delete()\n\t\n        #multi resource coping\n        yield bucket.res(*['key1', 'key2']).multi_copyto(['dest_key1', 'dest_key2'],'dest_bucket')\n\t\n        #multi resource moving\n        yield bucket.res('key1', 'key2').multi_moveto(['dest_key1', 'dest_key2'],'dest_bucket')\n    loop.run_sync(multi_resource_manage)\n\n    # resource management batch operation\n    @gen.coroutine\n    def batch_ops():\n        #get batch instance\n        batch = bucket.res().batch()\n        batch.stat('keyname1')\t\n        batch.delete('keyname2')\n        #execute batch\n        yield batch.execute()\n\t\n        #multi resource batch operation\n        batch = bucket.res('key1', 'key2').batch()\n        batch.multi_stat()\n        batch.multi_copy(['dest_key1', 'dest_key2'], 'dest_bucket')\n        batch.multi_move(['dest_key1', 'dest_key2'], 'dest_bucket')\n\n        #list all resources in current bucket\n        batch.list()\n        #execute batch ,return json format data\n        yield bacth.execute()\n    loop.run_sync(batch_ops)\n\n\nResource Process\n^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    from tornado import gen,ioloop\n    from tornado_qiniu import QiniuClient\n\n    access_key = \"your qiniu access key\"\n    secret_key = \"your qiniu secret key\"\n    bucket_name = \"your bucket name\"\n    domain=\"your domain\"\n    bucket_acp = 0   #bucket access property,1 ===>private bucket,0===>public bucket\n\n    client = QiniuClient(access_key,secret_key,domain)\n    bucket = client.bucket(bucket_name,bucket_acp=bucket_acp)\n    loop = ioloop.IOLoop.current()\n\n    # get resource info\n    @gen.coroutine\n    def get_info():\n    \n        # get image info\n        imginfo = yield bucket.res(\"dummy_img_key\").imageinfo().get()\n    \n        # get image ave\n        imgave = yield bucket.res(\"dummy_img_key\").imageave().get()\n    \n        # get image exif\n        imgexif = yield bucket.res(\"dummy_img_key\").imageexif().get()\n    \n    loop.run_sync(get_info)\n\n    # resource fops\n    @gen.coroutine\n    def resource_fops():\n        # resource qrcode url\n        qrcodeurl = bucket.res(\"dummy_img_key\").fops().qrcode().url()\n    \n        # get resource qrcode img\n        qrcodeimg = yield bucket.res(\"dummy_img_key\").fops().qrcode().get()\n\n        # resource text_watermark\n        text_watermark_url = bucket.res(\"dummy_img_key\").fops().text_watermark(\"dummy\").url()\n        text_watermark_img = yield bucket.res(\"dummy_img_key\").fops().text_watermark(\"dummy\").get()\n\n        #  resource image watermark\n        img_url = bucket.res(\"water_img\").url()\n        watered_img_url = bucket.res(\"dummy_img_key\").fops().image_watermark(img_url).url()\n        waterd_img = yield bucket.res(\"dummy_img_key\").fops().image_watermark(img_url).get()\n    \n        # resource fops saveas\n        saveas_url = bucket.res(\"dummy_key\").fops().text_watermark(\"dummy\").saveas(\"dummy_watermark\").url()\n        yield bucket.res(\"dummy_key\").fops().text_watermark(\"dummy\").saveas(\"dummy_watermark\").get()\n\n        # resource fops persistent\n   \n        # audio/vedio slice operation, the detail args refer to:\n        # http://developer.qiniu.com/code/v6/api/dora-api/av/segtime.html\n\n        yield bucket.res(\"dummy_av\").fops().avthumb_slice(no_domain=1).persistent()\n    \n        # audio/vedio transcoding operation,the detail args refer to:\n        # http://developer.qiniu.com/code/v6/api/dora-api/av/avthumb.html\n        yield bucket.res(\"dummy_av\").fops().avthumb_transcoding(\"mp3\").persistent()\n   \n        # audio/vedio concat operation,the detail args refer to :\n        # http://developer.qiniu.com/code/v6/api/dora-api/av/avconcat.html\n        yield bucket.res(\"dummy_av\").fops().avconcat(mode=2, frmt=\"mp4\", url1=\"http://**\",url2=\"http://**\").persistent()\n    \n        # audio/vedio vframe operation ,the detail args refer to:\n        # http://developer.qiniu.com/code/v6/api/dora-api/av/vframe.html\n        yield bucket.res(\"dummy_av\").fops().vframe(\"jpg\", 200, w=1000, h=3030).persistent()\n    \n        # get audio/vedio information\n        avinfo = yield bucket.res(\"dummy_av\").avinfo().get()\n        avinfo_url = bucket.res(\"dummy_av\").avinfo().url()\n\n        # prefop interface\n        response = yield bucket.res(\"key1\").prefop(\"persistent_id\")\n    \n\nLicense\n-----------------\n\n`MIT License <LICENSE>`_", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/free-free/tornaqiniu", "keywords": "tornado,qiniu,sdk", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "tornado_qiniu", "package_url": "https://pypi.org/project/tornado_qiniu/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tornado_qiniu/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/free-free/tornaqiniu"}, "release_url": "https://pypi.org/project/tornado_qiniu/1.2/", "requires_dist": null, "requires_python": null, "summary": "An asynchronous qiniu cloud storage sdk for tornado", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"LICENSE\" rel=\"nofollow\"><img alt=\"https://img.shields.io/github/license/mashape/apistatus.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/36686084675cebbeff3809cb9d8291b8e6ebd672/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6173686170652f6170697374617475732e737667\"></a>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ python3.x setup.py install\n</pre>\n<p>or</p>\n<pre>$ pip3.x install tornado_qiniu\n</pre>\n</div>\n<div id=\"environment\">\n<h2>Environment</h2>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>tornado_qiniu version</th>\n<th>python version</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>1.0</td>\n<td>3.4,3.5</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<div id=\"resource-upload-and-download\">\n<h3>Resource Upload and Download</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tornado</span> <span class=\"kn\">import</span> <span class=\"n\">gen</span><span class=\"p\">,</span><span class=\"n\">ioloop</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tornado_qiniu</span> <span class=\"kn\">import</span> <span class=\"n\">QiniuClient</span>\n\n<span class=\"n\">access_key</span> <span class=\"o\">=</span> <span class=\"s2\">\"your qiniu access key\"</span>\n<span class=\"n\">secret_key</span> <span class=\"o\">=</span> <span class=\"s2\">\"your qiniu secret key\"</span>\n<span class=\"n\">bucket_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"your bucket name\"</span>\n<span class=\"n\">domain</span> <span class=\"o\">=</span> <span class=\"s2\">\"your domain\"</span>\n<span class=\"n\">bucket_acp</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>   <span class=\"c1\">#bucket access property,1 ===&gt;private bucket,0===&gt;public bucket</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">QiniuClient</span><span class=\"p\">(</span><span class=\"n\">access_key</span><span class=\"p\">,</span> <span class=\"n\">secret_key</span><span class=\"p\">,</span> <span class=\"n\">domain</span><span class=\"p\">)</span>\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">ioloop</span><span class=\"o\">.</span><span class=\"n\">IOLoop</span><span class=\"o\">.</span><span class=\"n\">current</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#get a bucket instance</span>\n<span class=\"n\">bucket</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">bucket</span><span class=\"p\">(</span><span class=\"n\">bucket_name</span><span class=\"p\">,</span> <span class=\"n\">bucket_acp</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#get bucket upload token</span>\n<span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">upload_token</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># get resource url</span>\n<span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"resource_key\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">()</span>\n<span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s1\">'key1'</span><span class=\"p\">,</span><span class=\"s1\">'key2'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># download resource</span>\n<span class=\"nd\">@gen</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_resource</span><span class=\"p\">():</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"resource_key\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span> <span class=\"c1\">#return   saved name</span>\n    <span class=\"c1\"># get multi resource</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s1\">'key1'</span><span class=\"p\">,</span><span class=\"s1\">'key2'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>  <span class=\"c1\">#return a list of the  saved  name</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_sync</span><span class=\"p\">(</span><span class=\"n\">get_resource</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># upload resource</span>\n<span class=\"nd\">@gen</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">upload</span><span class=\"p\">():</span>\n    <span class=\"c1\">#when file's size greater than 4MB,using shard uploading</span>\n    <span class=\"c1\">#after uploading successfully,return key name and file hash value</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"key\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"s2\">\"./testfile\"</span><span class=\"p\">)</span> <span class=\"c1\">#return resource hash value,and key</span>\n\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_sync</span><span class=\"p\">(</span><span class=\"n\">upload</span><span class=\"p\">)</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"resource-management\">\n<h3>Resource Management</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tornado</span> <span class=\"kn\">import</span> <span class=\"n\">gen</span><span class=\"p\">,</span><span class=\"n\">ioloop</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tornado_qiniu</span> <span class=\"kn\">import</span> <span class=\"n\">QiniuClient</span>\n\n<span class=\"n\">access_key</span> <span class=\"o\">=</span> <span class=\"s2\">\"your qiniu access key\"</span>\n<span class=\"n\">secret_key</span> <span class=\"o\">=</span> <span class=\"s2\">\"your qiniu secret key\"</span>\n<span class=\"n\">bucket_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"your bucket name\"</span>\n<span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"s2\">\"your domain\"</span>\n<span class=\"n\">bucket_acp</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>   <span class=\"c1\">#bucket access property,1 ===&gt;private bucket,0===&gt;public bucket</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">QiniuClient</span><span class=\"p\">(</span><span class=\"n\">access_key</span><span class=\"p\">,</span><span class=\"n\">secret_key</span><span class=\"p\">,</span><span class=\"n\">domain</span><span class=\"p\">)</span>\n<span class=\"n\">bucket</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">bucket</span><span class=\"p\">(</span><span class=\"n\">bucket_name</span><span class=\"p\">,</span><span class=\"n\">bucket_acp</span><span class=\"o\">=</span><span class=\"n\">bucket_acp</span><span class=\"p\">)</span>\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">ioloop</span><span class=\"o\">.</span><span class=\"n\">IOLoop</span><span class=\"o\">.</span><span class=\"n\">current</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#single resource management</span>\n<span class=\"nd\">@gen</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">single_resource_manage</span><span class=\"p\">():</span>\n    <span class=\"c1\">#resource state</span>\n    <span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s1\">'key'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">stat</span><span class=\"p\">()</span>\n\n    <span class=\"c1\">#resource deleting</span>\n    <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s1\">'key'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n\n    <span class=\"c1\">#resource moving</span>\n    <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s1\">'src_key'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">moveto</span><span class=\"p\">(</span><span class=\"s1\">'dest_key'</span><span class=\"p\">,</span> <span class=\"s1\">'dest_bucket'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\">#resource coping</span>\n    <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s1\">'src_key'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">copyto</span><span class=\"p\">(</span><span class=\"s1\">'dest_key'</span><span class=\"p\">,</span> <span class=\"s1\">'dest_bucket'</span><span class=\"p\">)</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_sync</span><span class=\"p\">(</span><span class=\"n\">single_resource_manage</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#multi resource management</span>\n<span class=\"nd\">@gen</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">multi_resource_manage</span><span class=\"p\">():</span>\n    <span class=\"c1\">#multi resource state</span>\n    <span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s1\">'key1'</span><span class=\"p\">,</span> <span class=\"s1\">'key2'</span><span class=\"p\">,</span> <span class=\"s1\">'key3'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">multi_stat</span><span class=\"p\">()</span>\n\n    <span class=\"c1\">#multi resource deleting</span>\n    <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s1\">'key1'</span><span class=\"p\">,</span> <span class=\"s1\">'key2'</span><span class=\"p\">,</span> <span class=\"s1\">'key3'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">multi_delete</span><span class=\"p\">()</span>\n\n    <span class=\"c1\">#multi resource coping</span>\n    <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">[</span><span class=\"s1\">'key1'</span><span class=\"p\">,</span> <span class=\"s1\">'key2'</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">multi_copyto</span><span class=\"p\">([</span><span class=\"s1\">'dest_key1'</span><span class=\"p\">,</span> <span class=\"s1\">'dest_key2'</span><span class=\"p\">],</span><span class=\"s1\">'dest_bucket'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\">#multi resource moving</span>\n    <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s1\">'key1'</span><span class=\"p\">,</span> <span class=\"s1\">'key2'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">multi_moveto</span><span class=\"p\">([</span><span class=\"s1\">'dest_key1'</span><span class=\"p\">,</span> <span class=\"s1\">'dest_key2'</span><span class=\"p\">],</span><span class=\"s1\">'dest_bucket'</span><span class=\"p\">)</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_sync</span><span class=\"p\">(</span><span class=\"n\">multi_resource_manage</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># resource management batch operation</span>\n<span class=\"nd\">@gen</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">batch_ops</span><span class=\"p\">():</span>\n    <span class=\"c1\">#get batch instance</span>\n    <span class=\"n\">batch</span> <span class=\"o\">=</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">batch</span><span class=\"p\">()</span>\n    <span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">stat</span><span class=\"p\">(</span><span class=\"s1\">'keyname1'</span><span class=\"p\">)</span>\n    <span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"s1\">'keyname2'</span><span class=\"p\">)</span>\n    <span class=\"c1\">#execute batch</span>\n    <span class=\"k\">yield</span> <span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">()</span>\n\n    <span class=\"c1\">#multi resource batch operation</span>\n    <span class=\"n\">batch</span> <span class=\"o\">=</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s1\">'key1'</span><span class=\"p\">,</span> <span class=\"s1\">'key2'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">batch</span><span class=\"p\">()</span>\n    <span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">multi_stat</span><span class=\"p\">()</span>\n    <span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">multi_copy</span><span class=\"p\">([</span><span class=\"s1\">'dest_key1'</span><span class=\"p\">,</span> <span class=\"s1\">'dest_key2'</span><span class=\"p\">],</span> <span class=\"s1\">'dest_bucket'</span><span class=\"p\">)</span>\n    <span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">multi_move</span><span class=\"p\">([</span><span class=\"s1\">'dest_key1'</span><span class=\"p\">,</span> <span class=\"s1\">'dest_key2'</span><span class=\"p\">],</span> <span class=\"s1\">'dest_bucket'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\">#list all resources in current bucket</span>\n    <span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n    <span class=\"c1\">#execute batch ,return json format data</span>\n    <span class=\"k\">yield</span> <span class=\"n\">bacth</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_sync</span><span class=\"p\">(</span><span class=\"n\">batch_ops</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"resource-process\">\n<h3>Resource Process</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tornado</span> <span class=\"kn\">import</span> <span class=\"n\">gen</span><span class=\"p\">,</span><span class=\"n\">ioloop</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tornado_qiniu</span> <span class=\"kn\">import</span> <span class=\"n\">QiniuClient</span>\n\n<span class=\"n\">access_key</span> <span class=\"o\">=</span> <span class=\"s2\">\"your qiniu access key\"</span>\n<span class=\"n\">secret_key</span> <span class=\"o\">=</span> <span class=\"s2\">\"your qiniu secret key\"</span>\n<span class=\"n\">bucket_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"your bucket name\"</span>\n<span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"s2\">\"your domain\"</span>\n<span class=\"n\">bucket_acp</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>   <span class=\"c1\">#bucket access property,1 ===&gt;private bucket,0===&gt;public bucket</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">QiniuClient</span><span class=\"p\">(</span><span class=\"n\">access_key</span><span class=\"p\">,</span><span class=\"n\">secret_key</span><span class=\"p\">,</span><span class=\"n\">domain</span><span class=\"p\">)</span>\n<span class=\"n\">bucket</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">bucket</span><span class=\"p\">(</span><span class=\"n\">bucket_name</span><span class=\"p\">,</span><span class=\"n\">bucket_acp</span><span class=\"o\">=</span><span class=\"n\">bucket_acp</span><span class=\"p\">)</span>\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">ioloop</span><span class=\"o\">.</span><span class=\"n\">IOLoop</span><span class=\"o\">.</span><span class=\"n\">current</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># get resource info</span>\n<span class=\"nd\">@gen</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_info</span><span class=\"p\">():</span>\n\n    <span class=\"c1\"># get image info</span>\n    <span class=\"n\">imginfo</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_img_key\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">imageinfo</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># get image ave</span>\n    <span class=\"n\">imgave</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_img_key\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">imageave</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># get image exif</span>\n    <span class=\"n\">imgexif</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_img_key\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">imageexif</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_sync</span><span class=\"p\">(</span><span class=\"n\">get_info</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># resource fops</span>\n<span class=\"nd\">@gen</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">resource_fops</span><span class=\"p\">():</span>\n    <span class=\"c1\"># resource qrcode url</span>\n    <span class=\"n\">qrcodeurl</span> <span class=\"o\">=</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_img_key\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fops</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">qrcode</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># get resource qrcode img</span>\n    <span class=\"n\">qrcodeimg</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_img_key\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fops</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">qrcode</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># resource text_watermark</span>\n    <span class=\"n\">text_watermark_url</span> <span class=\"o\">=</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_img_key\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fops</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">text_watermark</span><span class=\"p\">(</span><span class=\"s2\">\"dummy\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">()</span>\n    <span class=\"n\">text_watermark_img</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_img_key\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fops</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">text_watermark</span><span class=\"p\">(</span><span class=\"s2\">\"dummy\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n\n    <span class=\"c1\">#  resource image watermark</span>\n    <span class=\"n\">img_url</span> <span class=\"o\">=</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"water_img\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">()</span>\n    <span class=\"n\">watered_img_url</span> <span class=\"o\">=</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_img_key\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fops</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">image_watermark</span><span class=\"p\">(</span><span class=\"n\">img_url</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">()</span>\n    <span class=\"n\">waterd_img</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_img_key\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fops</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">image_watermark</span><span class=\"p\">(</span><span class=\"n\">img_url</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># resource fops saveas</span>\n    <span class=\"n\">saveas_url</span> <span class=\"o\">=</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_key\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fops</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">text_watermark</span><span class=\"p\">(</span><span class=\"s2\">\"dummy\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">saveas</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_watermark\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">()</span>\n    <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_key\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fops</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">text_watermark</span><span class=\"p\">(</span><span class=\"s2\">\"dummy\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">saveas</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_watermark\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># resource fops persistent</span>\n\n    <span class=\"c1\"># audio/vedio slice operation, the detail args refer to:</span>\n    <span class=\"c1\"># http://developer.qiniu.com/code/v6/api/dora-api/av/segtime.html</span>\n\n    <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_av\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fops</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">avthumb_slice</span><span class=\"p\">(</span><span class=\"n\">no_domain</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">persistent</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># audio/vedio transcoding operation,the detail args refer to:</span>\n    <span class=\"c1\"># http://developer.qiniu.com/code/v6/api/dora-api/av/avthumb.html</span>\n    <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_av\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fops</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">avthumb_transcoding</span><span class=\"p\">(</span><span class=\"s2\">\"mp3\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">persistent</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># audio/vedio concat operation,the detail args refer to :</span>\n    <span class=\"c1\"># http://developer.qiniu.com/code/v6/api/dora-api/av/avconcat.html</span>\n    <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_av\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fops</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">avconcat</span><span class=\"p\">(</span><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">frmt</span><span class=\"o\">=</span><span class=\"s2\">\"mp4\"</span><span class=\"p\">,</span> <span class=\"n\">url1</span><span class=\"o\">=</span><span class=\"s2\">\"http://**\"</span><span class=\"p\">,</span><span class=\"n\">url2</span><span class=\"o\">=</span><span class=\"s2\">\"http://**\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">persistent</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># audio/vedio vframe operation ,the detail args refer to:</span>\n    <span class=\"c1\"># http://developer.qiniu.com/code/v6/api/dora-api/av/vframe.html</span>\n    <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_av\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">fops</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">vframe</span><span class=\"p\">(</span><span class=\"s2\">\"jpg\"</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"o\">=</span><span class=\"mi\">3030</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">persistent</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># get audio/vedio information</span>\n    <span class=\"n\">avinfo</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_av\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">avinfo</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n    <span class=\"n\">avinfo_url</span> <span class=\"o\">=</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"dummy_av\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">avinfo</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># prefop interface</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">res</span><span class=\"p\">(</span><span class=\"s2\">\"key1\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">prefop</span><span class=\"p\">(</span><span class=\"s2\">\"persistent_id\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><a href=\"LICENSE\" rel=\"nofollow\">MIT License</a></p>\n</div>\n\n          </div>"}, "last_serial": 2292769, "releases": {"1.1": [], "1.2": [{"comment_text": "", "digests": {"md5": "1ca3508a1ffabd509d11c8afdc468414", "sha256": "a8d75a34ded41f28d92b29cbaf6ce7ae25ba0553eabdef4ded57191765cda881"}, "downloads": -1, "filename": "tornado_qiniu-1.2.tar.gz", "has_sig": false, "md5_digest": "1ca3508a1ffabd509d11c8afdc468414", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18253, "upload_time": "2016-08-20T16:59:09", "upload_time_iso_8601": "2016-08-20T16:59:09.634808Z", "url": "https://files.pythonhosted.org/packages/e4/ca/60af0093227fb82013e553af1458eb5b48d65649189f52094794b717f81b/tornado_qiniu-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1ca3508a1ffabd509d11c8afdc468414", "sha256": "a8d75a34ded41f28d92b29cbaf6ce7ae25ba0553eabdef4ded57191765cda881"}, "downloads": -1, "filename": "tornado_qiniu-1.2.tar.gz", "has_sig": false, "md5_digest": "1ca3508a1ffabd509d11c8afdc468414", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18253, "upload_time": "2016-08-20T16:59:09", "upload_time_iso_8601": "2016-08-20T16:59:09.634808Z", "url": "https://files.pythonhosted.org/packages/e4/ca/60af0093227fb82013e553af1458eb5b48d65649189f52094794b717f81b/tornado_qiniu-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:49:49 2020"}