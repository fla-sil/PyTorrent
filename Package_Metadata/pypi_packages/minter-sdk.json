{"info": {"author": "U-node Team", "author_email": "rymka1989@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "<p align=\"center\" background=\"black\"><img src=\"UN_logo_on_white.svg\" width=\"450\"></p>\n\n<p align=\"center\">\n</p>\n\nPython SDK\n\nPorted from official Minter's <a href=\"https://github.com/MinterTeam/minter-php-sdk\">php SDK</a>\n\nCreated by <a href=\"https://www.u-node.net\">https://www.u-node.net</a>'s masternode co-founder Roman Matusevich \n\nYou can support our project by sending any Minter's coins to our wallet Mx6e0cd64694b1e143adaa7d4914080e748837aec9\n\nFeel free to delegate to our 3% masternode Mp02bc3c3f77d5ab9732ef9fc3801a6d72dc18f88328c14dc735648abfe551f50f\n\n\n# Installation\n`pip install minter-sdk`\n\n\n\n# Using API\n```python\nfrom mintersdk.minterapi import MinterAPI\n\nnode_url = 'https://minter-node-1.testnet.minter.network:8841'  # Example of a node url\napi = MinterAPI(api_url=node_url)\n\n# 'connect_timeout', 'read_timeout', 'headers' kwargs would be passed to request, if provided\napi = MinterAPI(api_url=node_url, connect_timeout=1, read_timeout=3, headers={})\n```\nNumeric strings automatically are converted to integers in `response['result']` dict.\n\nSome API methods accept `pip2bip (bool)` argument to convert coin values from PIP to BIP.  \nValues are `Decimal` type after conversion.\n\n## Methods\n- `get_addresses(addresses, height=None, pip2bip=False)`  \n  Returns addresses balances.\n\n- `get_balance(address, height=None, pip2bip=False)`  \n  Returns coins list, balance and transaction count (for nonce) of an address.\n\n- `get_block(height, pip2bip=False)`\n  Returns block data at given height.\n\n- `get_candidate(public_key, height=None, pip2bip=False)`  \n  Returns candidate\u2019s info by provided public_key. It will respond with 404 code if candidate is not found.\n\n- `get_candidates(height=None, include_stakes=False, pip2bip=False)`  \n  Returns list of candidates.\n\n- `get_coin_info(symbol, height=None, pip2bip=False)`  \n  Returns information about coin. Note: this method does not return information about base coins (MNT and BIP).\n\n- `get_events(height, pip2bip=False)`  \n  Returns events at given height.\n\n- `get_genesis(pip2bip=False)`  \n  Return network genesis.\n\n- `get_latest_block_height()`  \n  Returns latest block height.\n\n- `get_max_gas_price(height=None)`  \n  Returns current max gas price.\n\n- `get_min_gas_price()`  \n  Returns current min gas price.\n\n- `get_missed_blocks(public_key, height=None)`  \n  Returns missed blocks by validator public key.\n\n- `get_network_info()`  \n  Return node network information.\n\n- `get_nonce(address)`  \n  Returns next transaction number (nonce) of an address.\n\n- `get_status()`  \n  Returns node status info.\n\n- `get_transaction(tx_hash, pip2bip=False)`  \n  Returns transaction info.\n\n- `get_transactions(query, page=None, limit=None, pip2bip=False)`  \n  Return transactions by query.\n\n- `get_unconfirmed_transactions(limit=None)`  \n  Returns unconfirmed transactions.\n\n- `get_validators(height=None, page=None, limit=None)`  \n  Returns list of active validators.\n\n- `estimate_coin_buy(coin_to_sell, value_to_buy, coin_to_buy, height=None, pip2bip=False)`  \n  Return estimate of buy coin transaction.  \n  Provide value in PIP if `pip2bip is False` or in BIP if `pip2bip is True`\n\n- `estimate_coin_sell(coin_to_sell, value_to_sell, coin_to_buy, height=None, pip2bip=False)`  \n  Return estimate of sell coin transaction.  \n  Provide value in PIP if `pip2bip is False` or in BIP if `pip2bip is True`\n\n- `estimate_coin_sell_all(coin_to_sell, value_to_sell, coin_to_buy, height=None, pip2bip=False)`  \n  Return estimate of sell all coin transaction.  \n  Provide value in PIP if `pip2bip is False` or in BIP if `pip2bip is True`\n\n- `estimate_tx_commission(tx, height=None, pip2bip=False)`  \n  Return estimate of transaction.\n\n- `send_transaction(tx)`  \n  Returns the result of sending signed tx.\n\n\n\n# SDK use\n## Create transactions\nEach Minter transaction requires `nonce, gas_coin` to be passed.  Also you can pass `payload, chain_id, gas_price`.\n\n`MiterTx(nonce, gas_coin, payload='', service_data='', chain_id=1, gas_price=1, **kwargs)`\n\n**To create Minter transaction you MUST use concrete transaction class.**\n\nAll transaction values should be passed in BIP, you shouldn't convert them to PIP.  \nAll coin symbols are case insensitive, e.g. you can pass `gas_coin='BIP'` or `gas_coin='bip'`\n\n### Transactions\n- MinterBuyCoinTx\n  ```python\n  from mintersdk.sdk.transactions import MinterBuyCoinTx\n  tx = MinterBuyCoinTx(coin_to_buy='SYMBOL', value_to_buy=1, coin_to_sell='SYMBOL', max_value_to_sell=2, nonce=1, gas_coin='SYMBOL')\n  ```\n\n- MinterCreateCoinTx\n  ```python\n  from mintersdk.sdk.transactions import MinterCreateCoinTx\n  tx = MinterCreateCoinTx(name='Coin description', symbol='SYMBOL', initial_amount=1.5, initial_reserve=10000, crr=50, max_supply=1000, nonce=1, gas_coin='SYMBOL')\n  ```\n\n- MinterDeclareCandidacyTx\n  ```python\n  from mintersdk.sdk.transactions import MinterDeclareCandidacyTx\n  tx = MinterDeclareCandidacyTx(address='Mx...', pub_key='Mp...', commission=1, coin='SYMBOL', stake=100, nonce=1, gas_coin='SYMBOL')\n  ```\n\n- MinterDelegateTx\n  ```python\n  from mintersdk.sdk.transactions import MinterDelegateTx\n  tx = MinterDelegateTx(pub_key='Mp...', coin='SYMBOL', stake=100, nonce=1, gas_coin='SYMBOL')\n  ```\n\n- MinterRedeemCheckTx\n  ```python\n  from mintersdk.sdk.transactions import MinterRedeemCheckTx\n  tx = MinterRedeemCheckTx(check='check hash str', proof='proof hash str', nonce=1, gas_coin='SYMBOL')\n  ```\n\n- MinterSellAllCoinTx\n  ```python\n  from mintersdk.sdk.transactions import MinterSellAllCoinTx\n  tx = MinterSellAllCoinTx(coin_to_sell='SYMBOL', coin_to_buy='SYMBOL', min_value_to_buy=100, nonce=1, gas_coin='SYMBOL')\n  ```\n\n- MinterSellCoinTx\n  ```python\n  from mintersdk.sdk.transactions import MinterSellCoinTx\n  tx = MinterSellCoinTx(coin_to_sell='SYMBOL', value_to_sell=1, coin_to_buy='SYMBOL', min_value_to_buy=2, nonce=1, gas_coin='SYMBOL')\n  ```\n\n- MinterSendCoinTx\n  ```python\n  from mintersdk.sdk.transactions import MinterSendCoinTx\n  tx = MinterSendCoinTx(coin='SYMBOL', to='Mx...', value=5, nonce=1, gas_coin='SYMBOL')\n  ```\n\n- MinterMultiSendCoinTx\n  ```python\n  from mintersdk.sdk.transactions import MinterMultiSendCoinTx\n\n  txs = [\n      {'coin': 'SYMBOL', 'to': 'Mx..1', 'value': 5},\n      {'coin': 'SYMBOL', 'to': 'Mx..2', 'value': 1},\n      {'coin': 'SYMBOL', 'to': 'Mx..3', 'value': 4}\n  ]\n  tx = MinterMultiSendCoinTx(txs=txs, nonce=1, gas_coin='SYMBOL')\n  ```\n\n- MinterSetCandidateOffTx\n  ```python\n  from mintersdk.sdk.transactions import MinterSetCandidateOffTx\n  tx = MinterSetCandidateOffTx(pub_key='Mp...', nonce=1, gas_coin='SYMBOL')\n  ```\n\n- MinterSetCandidateOnTx\n  ```python\n  from mintersdk.sdk.transactions import MinterSetCandidateOnTx\n  tx = MinterSetCandidateOnTx(pub_key='Mp...', nonce=1, gas_coin='SYMBOL')\n  ```\n\n- MinterUnbondTx\n  ```python\n  from mintersdk.sdk.transactions import MinterUnbondTx\n  tx = MinterUnbondTx(pub_key='Mp...', coin='SYMBOL', value=100, nonce=1, gas_coin='SYMBOL')\n  ```\n\n- MinterEditCandidateTx\n  ```python\n  from mintersdk.sdk.transactions import MinterEditCandidateTx\n  tx = MinterEditCandidateTx(pub_key='Mp...', reward_address='Mx...', owner_address='Mx...', nonce=1, gas_coin='SYMBOL')\n  ```\n\n\n## Sign transaction\nWhen your transaction object is created, you can sign it.\nEvery transaction can be signed by private key or/and by signature.  \nKeep in mind, we have some `tx = MinterSomeTx(...)` and API `api = MinterAPI(...)`\n\n- Sign single signature type transaction\n  ```python\n  # Sign with private key\n  tx.sign(private_key='PRIVATE_KEY')\n\n  # Sign with signature\n  tx.signature_type = tx.SIGNATURE_SINGLE_TYPE\n\n  signature = tx.generate_signature(private_key='PRIVATE_KEY')\n\n  tx.sign(signature=signature)\n  ```\n\n- Sign multi signature type transaction\n  ```python\n  # Sign with private keys\n  tx.sign(private_key=['PRIVATE_KEY_1', 'PRIVATE_KEY_2', ...], ms_address='Multisig address Mx...')\n\n  # Sign with signatures\n  tx.signature_type = tx.SIGNATURE_MULTI_TYPE\n\n  signature_1 = tx.generate_signature(private_key='PRIVATE_KEY_1')\n  signature_2 = tx.generate_signature(private_key='PRIVATE_KEY_2')\n\n  tx.sign(signature=[signature_1, signature_2], ms_address='Multisig address Mx...')\n\n  # Sign with both private keys and signatures\n  tx.signature_type = tx.SIGNATURE_MULTI_TYPE\n\n  private_key_1 = 'PRIVATE_KEY_1'\n  private_key_2 = 'PRIVATE_KEY_2'\n\n  signature_1 = tx.generate_signature(private_key='PRIVATE_KEY_3')\n  signature_2 = tx.generate_signature(private_key='PRIVATE_KEY_4')\n\n  tx.sign(private_key=[private_key_1, private_key_2], signature=[signature_1, signature_2], ms_address='Multisig address Mx...'))\n  ```\n\nAs you see above, to generate signature we must set transaction `signature_type` before generating signature.  \n\nYou can set this argument while creating transaction.  \n`tx = MinterSomeTx(..., signature_type=MinterTx.SIGNATURE_MULTI_TYPE)`  \n`tx = MinterSomeTx(..., signature_type=MinterTx.SIGNATURE_SINGLE_TYPE)`  \n\nAfter that you can simply generate signature without setting it's signature type by overriding attribute.   \n`signature = tx.generate_signature(private_key='PRIVATE_KEY')`\n\n### Adding signature to multi signature type transaction\nWhen multi signature transaction is created it can be partially signed, e.g. signed by 2 of 3 private keys.  \nThen partially signed transaction can be transferred to another client and this client can add own signature to transaction.  \n```python\nfrom mintersdk.sdk.transactions import MinterTx\n\n# Client 1\n# Create transaction\ntx = MinterSomeTx(...)\n\n# Sign transaction\ntx.sign(private_key=['PK_1', 'PK_2'], ms_address='Mx...')\n\n# Then tx.signed_tx is transferred to Client 2\n\n\n# Client 2\n# Received raw_tx (tx.signed_tx from Client 1)\ntx = MinterTx.add_signature(signed_tx=raw_tx, private_key='PK_3')\n```  \nClient 2 will get new tx object with client's 2 signature.  \nClient 2 may pass `tx.signed_tx` to next client or just send `tx.signed_tx` to the network.\n\n\n## Send transaction\nWhen transaction is created and signed, you can send transaction to network. Signed transaction for sending can be found in `tx.signed_tx` attribute.  \n```python\n# Create transaction\ntx = MinterSomeTx(...)\n\n# Sign transaction\ntx.sign(...)\n\n# Send transaction\nresponse = api.send_transaction(tx=tx.signed_tx)\n```\n\n\n\n# Create transaction from raw\nYou can create transaction object from raw transaction hash. You will get tx object of tx type.\n\n```python\nfrom mintersdk.sdk.transactions import MinterTx\n\ntx = MinterTx.from_raw(raw_tx='...')\n```\n\n\n\n# Minter deeplink\nLet's create a MinterSendCoinTx\n```python\nfrom mintersdk.sdk.transactions import MinterSendCoinTx\ntx = MinterSendCoinTx(coin='BIP', to='Mx18467bbb64a8edf890201d526c35957d82be3d95', value=1.23456789, nonce=1, gas_coin='MNT', gas_price=1, payload='Hello World')\n```\n\nNow it's time to create deeplink\n```python\nfrom mintersdk.sdk.deeplink import MinterDeeplink\ndl = MinterDeeplink(tx=tx, data_only=False)\n\n# Deeplink is generated by all tx params (nonce, gas_price, gas_coin, payload) by default.\n# If you want to create deeplink only by tx data, set `data_only=True`\n```\n\nAfter deeplink object is created, you can override it's attributes, e.g.\n```python\ndl = MinterDeeplink(tx=tx)\ndl.nonce = ''\ndl.gas_coin = 'MNT'\ndl.gas_price = 10\n```\n\nWhen your deeplink object is ready, generate it\n```python\nurl_link = dl.generate()\n\n# If password check is needed, pass password to generate method\nurl_link = dl.generate(password='mystrongpassword')\n```\n\nThen you might want to create QR-code from your deeplink\n```python\nfrom mintersdk import MinterHelper\nqr_code_filepath = MinterHelper.generate_qr(text=url_link)\n\n# For additional params information for `MinterHelper.generate_qr()`, please see sourcecode for this method.\n```\n\n\n\n# Minter check\n## Create and sign check\n```python\nfrom mintersdk.sdk.check import MinterCheck\n\n# Create check without password\ncheck = MinterCheck(nonce=1, due_block=300000, coin='MNT', value=1, gas_coin='MNT')\n\n# Or create check with password\ncheck = MinterCheck(nonce=1, due_block=300000, coin='MNT', value=1, gas_coin='MNT', passphrase='pass')\n\n# Sign check\nsigned_check = check.sign(private_key='PRIVATE_KEY')\n```\n\n\n## Create proof\n```python\nfrom mintersdk.sdk.check import MinterCheck\n\nproof = MinterCheck.proof(address='Mx...', passphrase='pass')\n```\n\n\n## Create check object from raw\n```python\nfrom mintersdk.sdk.check import MinterCheck\n\n# Create and sign check\ncheck = MinterCheck(nonce=1, due_block=300000, coin='MNT', value=1, gas_coin='MNT')\nsigned_check = check.sign(private_key='PRIVATE_KEY')\n\n# Create object from signed check\ncheck = MinterCheck.from_raw(rawcheck=signed_check)\n```\n\n\n\n# Minter Wallet\n```python\nfrom mintersdk.sdk.wallet import MinterWallet\n\n# Create new wallet\nwallet = MinterWallet.create()\n\n# Get wallet data from existing mnemonic\nwallet = MinterWallet.create(mnemonic='YOUR MNEMONIC PHRASE')\n```\n\n\n\n# Helpers\n## Convert between PIP and BIP\n```python\nfrom mintersdk.shortcuts import to_pip, to_bip\n\n# Get BIP from PIP\npip_value = 1000000000000000000\nbip_value = to_bip(pip_value)\n\n# Get PIP from BIP\nbip_value = 100\npip_value = to_pip(bip_value)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/U-node/minter-sdk", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "minter-sdk", "package_url": "https://pypi.org/project/minter-sdk/", "platform": "", "project_url": "https://pypi.org/project/minter-sdk/", "project_urls": {"Homepage": "https://github.com/U-node/minter-sdk"}, "release_url": "https://pypi.org/project/minter-sdk/1.0.32/", "requires_dist": ["rlp", "sslcrypto", "mnemonic", "pysha3", "requests", "pyqrcode", "deprecated"], "requires_python": "", "summary": "Python SDK for Minter Network", "version": "1.0.32", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f91396de65d4ee46daf4022eb33967e3e5e93ad8/554e5f6c6f676f5f6f6e5f77686974652e737667\" width=\"450\"></p>\n<p align=\"center\">\n</p>\n<p>Python SDK</p>\n<p>Ported from official Minter's <a href=\"https://github.com/MinterTeam/minter-php-sdk\" rel=\"nofollow\">php SDK</a></p>\n<p>Created by <a href=\"https://www.u-node.net\" rel=\"nofollow\"></a><a href=\"https://www.u-node.net\" rel=\"nofollow\">https://www.u-node.net</a>'s masternode co-founder Roman Matusevich</p>\n<p>You can support our project by sending any Minter's coins to our wallet Mx6e0cd64694b1e143adaa7d4914080e748837aec9</p>\n<p>Feel free to delegate to our 3% masternode Mp02bc3c3f77d5ab9732ef9fc3801a6d72dc18f88328c14dc735648abfe551f50f</p>\n<h1>Installation</h1>\n<p><code>pip install minter-sdk</code></p>\n<h1>Using API</h1>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.minterapi</span> <span class=\"kn\">import</span> <span class=\"n\">MinterAPI</span>\n\n<span class=\"n\">node_url</span> <span class=\"o\">=</span> <span class=\"s1\">'https://minter-node-1.testnet.minter.network:8841'</span>  <span class=\"c1\"># Example of a node url</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">MinterAPI</span><span class=\"p\">(</span><span class=\"n\">api_url</span><span class=\"o\">=</span><span class=\"n\">node_url</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># 'connect_timeout', 'read_timeout', 'headers' kwargs would be passed to request, if provided</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">MinterAPI</span><span class=\"p\">(</span><span class=\"n\">api_url</span><span class=\"o\">=</span><span class=\"n\">node_url</span><span class=\"p\">,</span> <span class=\"n\">connect_timeout</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">read_timeout</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">{})</span>\n</pre>\n<p>Numeric strings automatically are converted to integers in <code>response['result']</code> dict.</p>\n<p>Some API methods accept <code>pip2bip (bool)</code> argument to convert coin values from PIP to BIP.<br>\nValues are <code>Decimal</code> type after conversion.</p>\n<h2>Methods</h2>\n<ul>\n<li>\n<p><code>get_addresses(addresses, height=None, pip2bip=False)</code><br>\nReturns addresses balances.</p>\n</li>\n<li>\n<p><code>get_balance(address, height=None, pip2bip=False)</code><br>\nReturns coins list, balance and transaction count (for nonce) of an address.</p>\n</li>\n<li>\n<p><code>get_block(height, pip2bip=False)</code>\nReturns block data at given height.</p>\n</li>\n<li>\n<p><code>get_candidate(public_key, height=None, pip2bip=False)</code><br>\nReturns candidate\u2019s info by provided public_key. It will respond with 404 code if candidate is not found.</p>\n</li>\n<li>\n<p><code>get_candidates(height=None, include_stakes=False, pip2bip=False)</code><br>\nReturns list of candidates.</p>\n</li>\n<li>\n<p><code>get_coin_info(symbol, height=None, pip2bip=False)</code><br>\nReturns information about coin. Note: this method does not return information about base coins (MNT and BIP).</p>\n</li>\n<li>\n<p><code>get_events(height, pip2bip=False)</code><br>\nReturns events at given height.</p>\n</li>\n<li>\n<p><code>get_genesis(pip2bip=False)</code><br>\nReturn network genesis.</p>\n</li>\n<li>\n<p><code>get_latest_block_height()</code><br>\nReturns latest block height.</p>\n</li>\n<li>\n<p><code>get_max_gas_price(height=None)</code><br>\nReturns current max gas price.</p>\n</li>\n<li>\n<p><code>get_min_gas_price()</code><br>\nReturns current min gas price.</p>\n</li>\n<li>\n<p><code>get_missed_blocks(public_key, height=None)</code><br>\nReturns missed blocks by validator public key.</p>\n</li>\n<li>\n<p><code>get_network_info()</code><br>\nReturn node network information.</p>\n</li>\n<li>\n<p><code>get_nonce(address)</code><br>\nReturns next transaction number (nonce) of an address.</p>\n</li>\n<li>\n<p><code>get_status()</code><br>\nReturns node status info.</p>\n</li>\n<li>\n<p><code>get_transaction(tx_hash, pip2bip=False)</code><br>\nReturns transaction info.</p>\n</li>\n<li>\n<p><code>get_transactions(query, page=None, limit=None, pip2bip=False)</code><br>\nReturn transactions by query.</p>\n</li>\n<li>\n<p><code>get_unconfirmed_transactions(limit=None)</code><br>\nReturns unconfirmed transactions.</p>\n</li>\n<li>\n<p><code>get_validators(height=None, page=None, limit=None)</code><br>\nReturns list of active validators.</p>\n</li>\n<li>\n<p><code>estimate_coin_buy(coin_to_sell, value_to_buy, coin_to_buy, height=None, pip2bip=False)</code><br>\nReturn estimate of buy coin transaction.<br>\nProvide value in PIP if <code>pip2bip is False</code> or in BIP if <code>pip2bip is True</code></p>\n</li>\n<li>\n<p><code>estimate_coin_sell(coin_to_sell, value_to_sell, coin_to_buy, height=None, pip2bip=False)</code><br>\nReturn estimate of sell coin transaction.<br>\nProvide value in PIP if <code>pip2bip is False</code> or in BIP if <code>pip2bip is True</code></p>\n</li>\n<li>\n<p><code>estimate_coin_sell_all(coin_to_sell, value_to_sell, coin_to_buy, height=None, pip2bip=False)</code><br>\nReturn estimate of sell all coin transaction.<br>\nProvide value in PIP if <code>pip2bip is False</code> or in BIP if <code>pip2bip is True</code></p>\n</li>\n<li>\n<p><code>estimate_tx_commission(tx, height=None, pip2bip=False)</code><br>\nReturn estimate of transaction.</p>\n</li>\n<li>\n<p><code>send_transaction(tx)</code><br>\nReturns the result of sending signed tx.</p>\n</li>\n</ul>\n<h1>SDK use</h1>\n<h2>Create transactions</h2>\n<p>Each Minter transaction requires <code>nonce, gas_coin</code> to be passed.  Also you can pass <code>payload, chain_id, gas_price</code>.</p>\n<p><code>MiterTx(nonce, gas_coin, payload='', service_data='', chain_id=1, gas_price=1, **kwargs)</code></p>\n<p><strong>To create Minter transaction you MUST use concrete transaction class.</strong></p>\n<p>All transaction values should be passed in BIP, you shouldn't convert them to PIP.<br>\nAll coin symbols are case insensitive, e.g. you can pass <code>gas_coin='BIP'</code> or <code>gas_coin='bip'</code></p>\n<h3>Transactions</h3>\n<ul>\n<li>\n<p>MinterBuyCoinTx</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.transactions</span> <span class=\"kn\">import</span> <span class=\"n\">MinterBuyCoinTx</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">MinterBuyCoinTx</span><span class=\"p\">(</span><span class=\"n\">coin_to_buy</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">,</span> <span class=\"n\">value_to_buy</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">coin_to_sell</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">,</span> <span class=\"n\">max_value_to_sell</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">nonce</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">gas_coin</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>MinterCreateCoinTx</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.transactions</span> <span class=\"kn\">import</span> <span class=\"n\">MinterCreateCoinTx</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">MinterCreateCoinTx</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Coin description'</span><span class=\"p\">,</span> <span class=\"n\">symbol</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">,</span> <span class=\"n\">initial_amount</span><span class=\"o\">=</span><span class=\"mf\">1.5</span><span class=\"p\">,</span> <span class=\"n\">initial_reserve</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">,</span> <span class=\"n\">crr</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">max_supply</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">nonce</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">gas_coin</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>MinterDeclareCandidacyTx</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.transactions</span> <span class=\"kn\">import</span> <span class=\"n\">MinterDeclareCandidacyTx</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">MinterDeclareCandidacyTx</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"o\">=</span><span class=\"s1\">'Mx...'</span><span class=\"p\">,</span> <span class=\"n\">pub_key</span><span class=\"o\">=</span><span class=\"s1\">'Mp...'</span><span class=\"p\">,</span> <span class=\"n\">commission</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">coin</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">,</span> <span class=\"n\">stake</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">nonce</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">gas_coin</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>MinterDelegateTx</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.transactions</span> <span class=\"kn\">import</span> <span class=\"n\">MinterDelegateTx</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">MinterDelegateTx</span><span class=\"p\">(</span><span class=\"n\">pub_key</span><span class=\"o\">=</span><span class=\"s1\">'Mp...'</span><span class=\"p\">,</span> <span class=\"n\">coin</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">,</span> <span class=\"n\">stake</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">nonce</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">gas_coin</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>MinterRedeemCheckTx</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.transactions</span> <span class=\"kn\">import</span> <span class=\"n\">MinterRedeemCheckTx</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">MinterRedeemCheckTx</span><span class=\"p\">(</span><span class=\"n\">check</span><span class=\"o\">=</span><span class=\"s1\">'check hash str'</span><span class=\"p\">,</span> <span class=\"n\">proof</span><span class=\"o\">=</span><span class=\"s1\">'proof hash str'</span><span class=\"p\">,</span> <span class=\"n\">nonce</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">gas_coin</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>MinterSellAllCoinTx</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.transactions</span> <span class=\"kn\">import</span> <span class=\"n\">MinterSellAllCoinTx</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">MinterSellAllCoinTx</span><span class=\"p\">(</span><span class=\"n\">coin_to_sell</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">,</span> <span class=\"n\">coin_to_buy</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">,</span> <span class=\"n\">min_value_to_buy</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">nonce</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">gas_coin</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>MinterSellCoinTx</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.transactions</span> <span class=\"kn\">import</span> <span class=\"n\">MinterSellCoinTx</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">MinterSellCoinTx</span><span class=\"p\">(</span><span class=\"n\">coin_to_sell</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">,</span> <span class=\"n\">value_to_sell</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">coin_to_buy</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">,</span> <span class=\"n\">min_value_to_buy</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">nonce</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">gas_coin</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>MinterSendCoinTx</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.transactions</span> <span class=\"kn\">import</span> <span class=\"n\">MinterSendCoinTx</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">MinterSendCoinTx</span><span class=\"p\">(</span><span class=\"n\">coin</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">,</span> <span class=\"n\">to</span><span class=\"o\">=</span><span class=\"s1\">'Mx...'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">nonce</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">gas_coin</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>MinterMultiSendCoinTx</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.transactions</span> <span class=\"kn\">import</span> <span class=\"n\">MinterMultiSendCoinTx</span>\n\n<span class=\"n\">txs</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span><span class=\"s1\">'coin'</span><span class=\"p\">:</span> <span class=\"s1\">'SYMBOL'</span><span class=\"p\">,</span> <span class=\"s1\">'to'</span><span class=\"p\">:</span> <span class=\"s1\">'Mx..1'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s1\">'coin'</span><span class=\"p\">:</span> <span class=\"s1\">'SYMBOL'</span><span class=\"p\">,</span> <span class=\"s1\">'to'</span><span class=\"p\">:</span> <span class=\"s1\">'Mx..2'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s1\">'coin'</span><span class=\"p\">:</span> <span class=\"s1\">'SYMBOL'</span><span class=\"p\">,</span> <span class=\"s1\">'to'</span><span class=\"p\">:</span> <span class=\"s1\">'Mx..3'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">}</span>\n<span class=\"p\">]</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">MinterMultiSendCoinTx</span><span class=\"p\">(</span><span class=\"n\">txs</span><span class=\"o\">=</span><span class=\"n\">txs</span><span class=\"p\">,</span> <span class=\"n\">nonce</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">gas_coin</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>MinterSetCandidateOffTx</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.transactions</span> <span class=\"kn\">import</span> <span class=\"n\">MinterSetCandidateOffTx</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">MinterSetCandidateOffTx</span><span class=\"p\">(</span><span class=\"n\">pub_key</span><span class=\"o\">=</span><span class=\"s1\">'Mp...'</span><span class=\"p\">,</span> <span class=\"n\">nonce</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">gas_coin</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>MinterSetCandidateOnTx</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.transactions</span> <span class=\"kn\">import</span> <span class=\"n\">MinterSetCandidateOnTx</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">MinterSetCandidateOnTx</span><span class=\"p\">(</span><span class=\"n\">pub_key</span><span class=\"o\">=</span><span class=\"s1\">'Mp...'</span><span class=\"p\">,</span> <span class=\"n\">nonce</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">gas_coin</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>MinterUnbondTx</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.transactions</span> <span class=\"kn\">import</span> <span class=\"n\">MinterUnbondTx</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">MinterUnbondTx</span><span class=\"p\">(</span><span class=\"n\">pub_key</span><span class=\"o\">=</span><span class=\"s1\">'Mp...'</span><span class=\"p\">,</span> <span class=\"n\">coin</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">nonce</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">gas_coin</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>MinterEditCandidateTx</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.transactions</span> <span class=\"kn\">import</span> <span class=\"n\">MinterEditCandidateTx</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">MinterEditCandidateTx</span><span class=\"p\">(</span><span class=\"n\">pub_key</span><span class=\"o\">=</span><span class=\"s1\">'Mp...'</span><span class=\"p\">,</span> <span class=\"n\">reward_address</span><span class=\"o\">=</span><span class=\"s1\">'Mx...'</span><span class=\"p\">,</span> <span class=\"n\">owner_address</span><span class=\"o\">=</span><span class=\"s1\">'Mx...'</span><span class=\"p\">,</span> <span class=\"n\">nonce</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">gas_coin</span><span class=\"o\">=</span><span class=\"s1\">'SYMBOL'</span><span class=\"p\">)</span>\n</pre>\n</li>\n</ul>\n<h2>Sign transaction</h2>\n<p>When your transaction object is created, you can sign it.\nEvery transaction can be signed by private key or/and by signature.<br>\nKeep in mind, we have some <code>tx = MinterSomeTx(...)</code> and API <code>api = MinterAPI(...)</code></p>\n<ul>\n<li>\n<p>Sign single signature type transaction</p>\n<pre><span class=\"c1\"># Sign with private key</span>\n<span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">sign</span><span class=\"p\">(</span><span class=\"n\">private_key</span><span class=\"o\">=</span><span class=\"s1\">'PRIVATE_KEY'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Sign with signature</span>\n<span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">signature_type</span> <span class=\"o\">=</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">SIGNATURE_SINGLE_TYPE</span>\n\n<span class=\"n\">signature</span> <span class=\"o\">=</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">generate_signature</span><span class=\"p\">(</span><span class=\"n\">private_key</span><span class=\"o\">=</span><span class=\"s1\">'PRIVATE_KEY'</span><span class=\"p\">)</span>\n\n<span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">sign</span><span class=\"p\">(</span><span class=\"n\">signature</span><span class=\"o\">=</span><span class=\"n\">signature</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>Sign multi signature type transaction</p>\n<pre><span class=\"c1\"># Sign with private keys</span>\n<span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">sign</span><span class=\"p\">(</span><span class=\"n\">private_key</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'PRIVATE_KEY_1'</span><span class=\"p\">,</span> <span class=\"s1\">'PRIVATE_KEY_2'</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">ms_address</span><span class=\"o\">=</span><span class=\"s1\">'Multisig address Mx...'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Sign with signatures</span>\n<span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">signature_type</span> <span class=\"o\">=</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">SIGNATURE_MULTI_TYPE</span>\n\n<span class=\"n\">signature_1</span> <span class=\"o\">=</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">generate_signature</span><span class=\"p\">(</span><span class=\"n\">private_key</span><span class=\"o\">=</span><span class=\"s1\">'PRIVATE_KEY_1'</span><span class=\"p\">)</span>\n<span class=\"n\">signature_2</span> <span class=\"o\">=</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">generate_signature</span><span class=\"p\">(</span><span class=\"n\">private_key</span><span class=\"o\">=</span><span class=\"s1\">'PRIVATE_KEY_2'</span><span class=\"p\">)</span>\n\n<span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">sign</span><span class=\"p\">(</span><span class=\"n\">signature</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">signature_1</span><span class=\"p\">,</span> <span class=\"n\">signature_2</span><span class=\"p\">],</span> <span class=\"n\">ms_address</span><span class=\"o\">=</span><span class=\"s1\">'Multisig address Mx...'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Sign with both private keys and signatures</span>\n<span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">signature_type</span> <span class=\"o\">=</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">SIGNATURE_MULTI_TYPE</span>\n\n<span class=\"n\">private_key_1</span> <span class=\"o\">=</span> <span class=\"s1\">'PRIVATE_KEY_1'</span>\n<span class=\"n\">private_key_2</span> <span class=\"o\">=</span> <span class=\"s1\">'PRIVATE_KEY_2'</span>\n\n<span class=\"n\">signature_1</span> <span class=\"o\">=</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">generate_signature</span><span class=\"p\">(</span><span class=\"n\">private_key</span><span class=\"o\">=</span><span class=\"s1\">'PRIVATE_KEY_3'</span><span class=\"p\">)</span>\n<span class=\"n\">signature_2</span> <span class=\"o\">=</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">generate_signature</span><span class=\"p\">(</span><span class=\"n\">private_key</span><span class=\"o\">=</span><span class=\"s1\">'PRIVATE_KEY_4'</span><span class=\"p\">)</span>\n\n<span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">sign</span><span class=\"p\">(</span><span class=\"n\">private_key</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">private_key_1</span><span class=\"p\">,</span> <span class=\"n\">private_key_2</span><span class=\"p\">],</span> <span class=\"n\">signature</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">signature_1</span><span class=\"p\">,</span> <span class=\"n\">signature_2</span><span class=\"p\">],</span> <span class=\"n\">ms_address</span><span class=\"o\">=</span><span class=\"s1\">'Multisig address Mx...'</span><span class=\"p\">))</span>\n</pre>\n</li>\n</ul>\n<p>As you see above, to generate signature we must set transaction <code>signature_type</code> before generating signature.</p>\n<p>You can set this argument while creating transaction.<br>\n<code>tx = MinterSomeTx(..., signature_type=MinterTx.SIGNATURE_MULTI_TYPE)</code><br>\n<code>tx = MinterSomeTx(..., signature_type=MinterTx.SIGNATURE_SINGLE_TYPE)</code></p>\n<p>After that you can simply generate signature without setting it's signature type by overriding attribute.<br>\n<code>signature = tx.generate_signature(private_key='PRIVATE_KEY')</code></p>\n<h3>Adding signature to multi signature type transaction</h3>\n<p>When multi signature transaction is created it can be partially signed, e.g. signed by 2 of 3 private keys.<br>\nThen partially signed transaction can be transferred to another client and this client can add own signature to transaction.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.transactions</span> <span class=\"kn\">import</span> <span class=\"n\">MinterTx</span>\n\n<span class=\"c1\"># Client 1</span>\n<span class=\"c1\"># Create transaction</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">MinterSomeTx</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Sign transaction</span>\n<span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">sign</span><span class=\"p\">(</span><span class=\"n\">private_key</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'PK_1'</span><span class=\"p\">,</span> <span class=\"s1\">'PK_2'</span><span class=\"p\">],</span> <span class=\"n\">ms_address</span><span class=\"o\">=</span><span class=\"s1\">'Mx...'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Then tx.signed_tx is transferred to Client 2</span>\n\n\n<span class=\"c1\"># Client 2</span>\n<span class=\"c1\"># Received raw_tx (tx.signed_tx from Client 1)</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">MinterTx</span><span class=\"o\">.</span><span class=\"n\">add_signature</span><span class=\"p\">(</span><span class=\"n\">signed_tx</span><span class=\"o\">=</span><span class=\"n\">raw_tx</span><span class=\"p\">,</span> <span class=\"n\">private_key</span><span class=\"o\">=</span><span class=\"s1\">'PK_3'</span><span class=\"p\">)</span>\n</pre>\n<p>Client 2 will get new tx object with client's 2 signature.<br>\nClient 2 may pass <code>tx.signed_tx</code> to next client or just send <code>tx.signed_tx</code> to the network.</p>\n<h2>Send transaction</h2>\n<p>When transaction is created and signed, you can send transaction to network. Signed transaction for sending can be found in <code>tx.signed_tx</code> attribute.</p>\n<pre><span class=\"c1\"># Create transaction</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">MinterSomeTx</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Sign transaction</span>\n<span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">sign</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Send transaction</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">send_transaction</span><span class=\"p\">(</span><span class=\"n\">tx</span><span class=\"o\">=</span><span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">signed_tx</span><span class=\"p\">)</span>\n</pre>\n<h1>Create transaction from raw</h1>\n<p>You can create transaction object from raw transaction hash. You will get tx object of tx type.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.transactions</span> <span class=\"kn\">import</span> <span class=\"n\">MinterTx</span>\n\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">MinterTx</span><span class=\"o\">.</span><span class=\"n\">from_raw</span><span class=\"p\">(</span><span class=\"n\">raw_tx</span><span class=\"o\">=</span><span class=\"s1\">'...'</span><span class=\"p\">)</span>\n</pre>\n<h1>Minter deeplink</h1>\n<p>Let's create a MinterSendCoinTx</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.transactions</span> <span class=\"kn\">import</span> <span class=\"n\">MinterSendCoinTx</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">MinterSendCoinTx</span><span class=\"p\">(</span><span class=\"n\">coin</span><span class=\"o\">=</span><span class=\"s1\">'BIP'</span><span class=\"p\">,</span> <span class=\"n\">to</span><span class=\"o\">=</span><span class=\"s1\">'Mx18467bbb64a8edf890201d526c35957d82be3d95'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mf\">1.23456789</span><span class=\"p\">,</span> <span class=\"n\">nonce</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">gas_coin</span><span class=\"o\">=</span><span class=\"s1\">'MNT'</span><span class=\"p\">,</span> <span class=\"n\">gas_price</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"s1\">'Hello World'</span><span class=\"p\">)</span>\n</pre>\n<p>Now it's time to create deeplink</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.deeplink</span> <span class=\"kn\">import</span> <span class=\"n\">MinterDeeplink</span>\n<span class=\"n\">dl</span> <span class=\"o\">=</span> <span class=\"n\">MinterDeeplink</span><span class=\"p\">(</span><span class=\"n\">tx</span><span class=\"o\">=</span><span class=\"n\">tx</span><span class=\"p\">,</span> <span class=\"n\">data_only</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Deeplink is generated by all tx params (nonce, gas_price, gas_coin, payload) by default.</span>\n<span class=\"c1\"># If you want to create deeplink only by tx data, set `data_only=True`</span>\n</pre>\n<p>After deeplink object is created, you can override it's attributes, e.g.</p>\n<pre><span class=\"n\">dl</span> <span class=\"o\">=</span> <span class=\"n\">MinterDeeplink</span><span class=\"p\">(</span><span class=\"n\">tx</span><span class=\"o\">=</span><span class=\"n\">tx</span><span class=\"p\">)</span>\n<span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">nonce</span> <span class=\"o\">=</span> <span class=\"s1\">''</span>\n<span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">gas_coin</span> <span class=\"o\">=</span> <span class=\"s1\">'MNT'</span>\n<span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">gas_price</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n</pre>\n<p>When your deeplink object is ready, generate it</p>\n<pre><span class=\"n\">url_link</span> <span class=\"o\">=</span> <span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># If password check is needed, pass password to generate method</span>\n<span class=\"n\">url_link</span> <span class=\"o\">=</span> <span class=\"n\">dl</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'mystrongpassword'</span><span class=\"p\">)</span>\n</pre>\n<p>Then you might want to create QR-code from your deeplink</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk</span> <span class=\"kn\">import</span> <span class=\"n\">MinterHelper</span>\n<span class=\"n\">qr_code_filepath</span> <span class=\"o\">=</span> <span class=\"n\">MinterHelper</span><span class=\"o\">.</span><span class=\"n\">generate_qr</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">url_link</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># For additional params information for `MinterHelper.generate_qr()`, please see sourcecode for this method.</span>\n</pre>\n<h1>Minter check</h1>\n<h2>Create and sign check</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.check</span> <span class=\"kn\">import</span> <span class=\"n\">MinterCheck</span>\n\n<span class=\"c1\"># Create check without password</span>\n<span class=\"n\">check</span> <span class=\"o\">=</span> <span class=\"n\">MinterCheck</span><span class=\"p\">(</span><span class=\"n\">nonce</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">due_block</span><span class=\"o\">=</span><span class=\"mi\">300000</span><span class=\"p\">,</span> <span class=\"n\">coin</span><span class=\"o\">=</span><span class=\"s1\">'MNT'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">gas_coin</span><span class=\"o\">=</span><span class=\"s1\">'MNT'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Or create check with password</span>\n<span class=\"n\">check</span> <span class=\"o\">=</span> <span class=\"n\">MinterCheck</span><span class=\"p\">(</span><span class=\"n\">nonce</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">due_block</span><span class=\"o\">=</span><span class=\"mi\">300000</span><span class=\"p\">,</span> <span class=\"n\">coin</span><span class=\"o\">=</span><span class=\"s1\">'MNT'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">gas_coin</span><span class=\"o\">=</span><span class=\"s1\">'MNT'</span><span class=\"p\">,</span> <span class=\"n\">passphrase</span><span class=\"o\">=</span><span class=\"s1\">'pass'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Sign check</span>\n<span class=\"n\">signed_check</span> <span class=\"o\">=</span> <span class=\"n\">check</span><span class=\"o\">.</span><span class=\"n\">sign</span><span class=\"p\">(</span><span class=\"n\">private_key</span><span class=\"o\">=</span><span class=\"s1\">'PRIVATE_KEY'</span><span class=\"p\">)</span>\n</pre>\n<h2>Create proof</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.check</span> <span class=\"kn\">import</span> <span class=\"n\">MinterCheck</span>\n\n<span class=\"n\">proof</span> <span class=\"o\">=</span> <span class=\"n\">MinterCheck</span><span class=\"o\">.</span><span class=\"n\">proof</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"o\">=</span><span class=\"s1\">'Mx...'</span><span class=\"p\">,</span> <span class=\"n\">passphrase</span><span class=\"o\">=</span><span class=\"s1\">'pass'</span><span class=\"p\">)</span>\n</pre>\n<h2>Create check object from raw</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.check</span> <span class=\"kn\">import</span> <span class=\"n\">MinterCheck</span>\n\n<span class=\"c1\"># Create and sign check</span>\n<span class=\"n\">check</span> <span class=\"o\">=</span> <span class=\"n\">MinterCheck</span><span class=\"p\">(</span><span class=\"n\">nonce</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">due_block</span><span class=\"o\">=</span><span class=\"mi\">300000</span><span class=\"p\">,</span> <span class=\"n\">coin</span><span class=\"o\">=</span><span class=\"s1\">'MNT'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">gas_coin</span><span class=\"o\">=</span><span class=\"s1\">'MNT'</span><span class=\"p\">)</span>\n<span class=\"n\">signed_check</span> <span class=\"o\">=</span> <span class=\"n\">check</span><span class=\"o\">.</span><span class=\"n\">sign</span><span class=\"p\">(</span><span class=\"n\">private_key</span><span class=\"o\">=</span><span class=\"s1\">'PRIVATE_KEY'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create object from signed check</span>\n<span class=\"n\">check</span> <span class=\"o\">=</span> <span class=\"n\">MinterCheck</span><span class=\"o\">.</span><span class=\"n\">from_raw</span><span class=\"p\">(</span><span class=\"n\">rawcheck</span><span class=\"o\">=</span><span class=\"n\">signed_check</span><span class=\"p\">)</span>\n</pre>\n<h1>Minter Wallet</h1>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.sdk.wallet</span> <span class=\"kn\">import</span> <span class=\"n\">MinterWallet</span>\n\n<span class=\"c1\"># Create new wallet</span>\n<span class=\"n\">wallet</span> <span class=\"o\">=</span> <span class=\"n\">MinterWallet</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Get wallet data from existing mnemonic</span>\n<span class=\"n\">wallet</span> <span class=\"o\">=</span> <span class=\"n\">MinterWallet</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">mnemonic</span><span class=\"o\">=</span><span class=\"s1\">'YOUR MNEMONIC PHRASE'</span><span class=\"p\">)</span>\n</pre>\n<h1>Helpers</h1>\n<h2>Convert between PIP and BIP</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mintersdk.shortcuts</span> <span class=\"kn\">import</span> <span class=\"n\">to_pip</span><span class=\"p\">,</span> <span class=\"n\">to_bip</span>\n\n<span class=\"c1\"># Get BIP from PIP</span>\n<span class=\"n\">pip_value</span> <span class=\"o\">=</span> <span class=\"mi\">1000000000000000000</span>\n<span class=\"n\">bip_value</span> <span class=\"o\">=</span> <span class=\"n\">to_bip</span><span class=\"p\">(</span><span class=\"n\">pip_value</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get PIP from BIP</span>\n<span class=\"n\">bip_value</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n<span class=\"n\">pip_value</span> <span class=\"o\">=</span> <span class=\"n\">to_pip</span><span class=\"p\">(</span><span class=\"n\">bip_value</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 7025615, "releases": {"1.0.13": [{"comment_text": "", "digests": {"md5": "528e5b227f26a6c91177426f0775f8b0", "sha256": "30f1a2e3877d8dccee9534cd617e30fb6cf29f200cf5add5efe48a3dbd029970"}, "downloads": -1, "filename": "minter_sdk-1.0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "528e5b227f26a6c91177426f0775f8b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 50776, "upload_time": "2019-12-01T10:16:03", "upload_time_iso_8601": "2019-12-01T10:16:03.924018Z", "url": "https://files.pythonhosted.org/packages/e3/a2/92447717359dc3dd38ef4ca0bee57feb372c8497671e886a626702638a06/minter_sdk-1.0.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3885fcc3e537cf79eca9da59bbe6c3c", "sha256": "b6d84ec6f92f96a0f7340a64bd93e59d1e73336ced93136f8cde9d3f34f276fc"}, "downloads": -1, "filename": "minter-sdk-1.0.13.tar.gz", "has_sig": false, "md5_digest": "b3885fcc3e537cf79eca9da59bbe6c3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41290, "upload_time": "2019-12-01T10:16:06", "upload_time_iso_8601": "2019-12-01T10:16:06.224668Z", "url": "https://files.pythonhosted.org/packages/98/9c/4128d2686d776f00c18658d6faa9fc9a15f26cf6aa737faf49d6127e4b86/minter-sdk-1.0.13.tar.gz", "yanked": false}], "1.0.14": [{"comment_text": "", "digests": {"md5": "20a3da058c2fa7b0e28af5f9449a43d2", "sha256": "acdea179e630c1130d98a3260da4776337358602d4a9bc32da73ad6f0c95fda9"}, "downloads": -1, "filename": "minter_sdk-1.0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "20a3da058c2fa7b0e28af5f9449a43d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 50889, "upload_time": "2019-12-19T21:57:02", "upload_time_iso_8601": "2019-12-19T21:57:02.523689Z", "url": "https://files.pythonhosted.org/packages/c9/d9/50976a07e2e9ad82bdddf9b77b60a18e4bf874796cc043cceac191c131e9/minter_sdk-1.0.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f0eecbd55213315bd3276db7f0bf4ab", "sha256": "dbc44e429f00ef7a4cdb9d31a1406237930169820a2ac3ff23df29779adc05c1"}, "downloads": -1, "filename": "minter-sdk-1.0.14.tar.gz", "has_sig": false, "md5_digest": "2f0eecbd55213315bd3276db7f0bf4ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41492, "upload_time": "2019-12-19T21:57:04", "upload_time_iso_8601": "2019-12-19T21:57:04.434783Z", "url": "https://files.pythonhosted.org/packages/e9/81/1a15bb07274a5b38073bf9922a5f59646a64853c3d6fd23c8b4b6f0cd4ba/minter-sdk-1.0.14.tar.gz", "yanked": false}], "1.0.15": [{"comment_text": "", "digests": {"md5": "b509a906c88a5de8ae967f6b67bc358f", "sha256": "a46e28e136f5cd5e5d66c9ca1bfe9db3bc099cbd68dbae87629dece18fc3348f"}, "downloads": -1, "filename": "minter_sdk-1.0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "b509a906c88a5de8ae967f6b67bc358f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 53580, "upload_time": "2019-12-26T01:03:45", "upload_time_iso_8601": "2019-12-26T01:03:45.350657Z", "url": "https://files.pythonhosted.org/packages/46/3e/a1ff5f37ea4685a07fa06917bce46b32a33b350683fd05b2e7362490a701/minter_sdk-1.0.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7067b69ce443b5ef0b5d39bb698955b1", "sha256": "3c074b7fbb64907c9be9a00b35f0e8b5833f9b1eef4549fb0ecc32e4a80d57c4"}, "downloads": -1, "filename": "minter-sdk-1.0.15.tar.gz", "has_sig": false, "md5_digest": "7067b69ce443b5ef0b5d39bb698955b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43662, "upload_time": "2019-12-26T01:03:47", "upload_time_iso_8601": "2019-12-26T01:03:47.363384Z", "url": "https://files.pythonhosted.org/packages/99/b7/202c1668b916bbcced5f98f8bcd0f5904fa1e1bfd3184ca350802b3b065e/minter-sdk-1.0.15.tar.gz", "yanked": false}], "1.0.16": [{"comment_text": "", "digests": {"md5": "2c202a91041e150459288e7d6e4168d4", "sha256": "a4b7393e1c87fbf26ad13b4e7349e506dcca585192806ae2976b093e9ba8e588"}, "downloads": -1, "filename": "minter_sdk-1.0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "2c202a91041e150459288e7d6e4168d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 54071, "upload_time": "2020-01-24T13:16:55", "upload_time_iso_8601": "2020-01-24T13:16:55.792283Z", "url": "https://files.pythonhosted.org/packages/0e/be/21503853eee6734bedd9c8fd6899807032e4f546b1364e81f8eff350d476/minter_sdk-1.0.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aea20ec8eed234dee1de295bca8e8987", "sha256": "8d5bf663326ddc4d80a8e95d1dd4ed6891e111b3bbd6ea3dcf46b8b7cabfd96d"}, "downloads": -1, "filename": "minter-sdk-1.0.16.tar.gz", "has_sig": false, "md5_digest": "aea20ec8eed234dee1de295bca8e8987", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44185, "upload_time": "2020-01-24T13:16:57", "upload_time_iso_8601": "2020-01-24T13:16:57.689427Z", "url": "https://files.pythonhosted.org/packages/55/90/636c3ad9d4eb9d404b6796129474bbec59458c7c84b4912fb0e2006e9a61/minter-sdk-1.0.16.tar.gz", "yanked": false}], "1.0.17": [{"comment_text": "", "digests": {"md5": "285e8d6184999dd934a9990bdbdb3fd0", "sha256": "34dee679ed77dd629f232ba4bb66ecb9c768ff6c7ea37a96be49ffa6fce198f2"}, "downloads": -1, "filename": "minter_sdk-1.0.17-py3-none-any.whl", "has_sig": false, "md5_digest": "285e8d6184999dd934a9990bdbdb3fd0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 55023, "upload_time": "2020-03-06T09:47:12", "upload_time_iso_8601": "2020-03-06T09:47:12.755970Z", "url": "https://files.pythonhosted.org/packages/b4/35/3b286bb06967506e4cfffee438ea73d7c6fbbb6475d01f64e5a103ed5167/minter_sdk-1.0.17-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "751a3ca4b214e0f45aa1fb43a5801a49", "sha256": "4b755ff0de0f04025a3b104878241928b9859f46a3e3c3ea93aca60773a6de25"}, "downloads": -1, "filename": "minter-sdk-1.0.17.tar.gz", "has_sig": false, "md5_digest": "751a3ca4b214e0f45aa1fb43a5801a49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45169, "upload_time": "2020-03-06T09:47:14", "upload_time_iso_8601": "2020-03-06T09:47:14.278946Z", "url": "https://files.pythonhosted.org/packages/62/4b/e4a0dbfc0a0cfa513fc9238b3c887ac02f296a76113bed05d716e88b1259/minter-sdk-1.0.17.tar.gz", "yanked": false}], "1.0.18": [{"comment_text": "", "digests": {"md5": "f2b11dfa79ccba3b8acb559ec6277438", "sha256": "a490e5e98026c72530602b6f8a204c294fb46a726892516beddc4c1f452715f1"}, "downloads": -1, "filename": "minter_sdk-1.0.18-py3-none-any.whl", "has_sig": false, "md5_digest": "f2b11dfa79ccba3b8acb559ec6277438", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 55602, "upload_time": "2020-03-09T11:40:53", "upload_time_iso_8601": "2020-03-09T11:40:53.843883Z", "url": "https://files.pythonhosted.org/packages/3f/1a/063887156b1bcba971d352f03b9245cc768ad9eb56cbba46323e57e5947f/minter_sdk-1.0.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be238ca02d0cc7f8c018146f51bfcd87", "sha256": "c43f371295ab7b348346c21a8cd8eaf904285e257798a1a4791763f4254fa3f4"}, "downloads": -1, "filename": "minter-sdk-1.0.18.tar.gz", "has_sig": false, "md5_digest": "be238ca02d0cc7f8c018146f51bfcd87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45719, "upload_time": "2020-03-09T11:40:55", "upload_time_iso_8601": "2020-03-09T11:40:55.586766Z", "url": "https://files.pythonhosted.org/packages/15/94/5a36811ec3f6507e9751cdb8ef19ab2ded9a06f075b1c06116798e50869d/minter-sdk-1.0.18.tar.gz", "yanked": false}], "1.0.19": [{"comment_text": "", "digests": {"md5": "2ce316df1e9c6693da7201f10d937563", "sha256": "60570beacda0680e31d761b46e1997c61de68796a25bd60ac8b6de4012ca28ae"}, "downloads": -1, "filename": "minter_sdk-1.0.19-py3-none-any.whl", "has_sig": false, "md5_digest": "2ce316df1e9c6693da7201f10d937563", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 56239, "upload_time": "2020-03-09T15:54:27", "upload_time_iso_8601": "2020-03-09T15:54:27.440393Z", "url": "https://files.pythonhosted.org/packages/03/3e/df12559d711570d78e873e6aca7a5039eb560acf3021247c7e42c76492e1/minter_sdk-1.0.19-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9f60b6f47a3f1869cf821e9168d5a36", "sha256": "83d397a9b1e7a6c949a64db5377b95e782265be32385fabebd20053a71f3430d"}, "downloads": -1, "filename": "minter-sdk-1.0.19.tar.gz", "has_sig": false, "md5_digest": "f9f60b6f47a3f1869cf821e9168d5a36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46398, "upload_time": "2020-03-09T15:54:28", "upload_time_iso_8601": "2020-03-09T15:54:28.729761Z", "url": "https://files.pythonhosted.org/packages/d2/01/fa28cac59b4e1d58c413fb266177c3738525e13f82d642074dde0bdf062a/minter-sdk-1.0.19.tar.gz", "yanked": false}], "1.0.20": [{"comment_text": "", "digests": {"md5": "a7b0c11110a499ead365779892e0428f", "sha256": "758489927408784227883af0f9d885260c2cd7430df3c0f14100771d71b54c02"}, "downloads": -1, "filename": "minter_sdk-1.0.20-py3-none-any.whl", "has_sig": false, "md5_digest": "a7b0c11110a499ead365779892e0428f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 58468, "upload_time": "2020-03-15T09:08:50", "upload_time_iso_8601": "2020-03-15T09:08:50.957916Z", "url": "https://files.pythonhosted.org/packages/79/9f/20e1d87d6adb93d700d2d95d8d44af10059884ff55d5fb2614bfe1a27333/minter_sdk-1.0.20-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14c55e53f0972d3ae98638f8bdb06a3d", "sha256": "2dfff0baea7f2380c1c245d73fffe0b315e72c248cecbf3af83cacab71ba20df"}, "downloads": -1, "filename": "minter-sdk-1.0.20.tar.gz", "has_sig": false, "md5_digest": "14c55e53f0972d3ae98638f8bdb06a3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49240, "upload_time": "2020-03-15T09:08:52", "upload_time_iso_8601": "2020-03-15T09:08:52.976393Z", "url": "https://files.pythonhosted.org/packages/97/3c/325d3da3bffaf4a734a098dd22841390cc58ea65262a9b15aaf859497746/minter-sdk-1.0.20.tar.gz", "yanked": false}], "1.0.21": [{"comment_text": "", "digests": {"md5": "f20cadac1cf68817de16441be2e7d79b", "sha256": "ba5f5b152f3a92c82a7398daef562a5aa533b881bf9020c0359e7a0badb983f7"}, "downloads": -1, "filename": "minter_sdk-1.0.21-py3-none-any.whl", "has_sig": false, "md5_digest": "f20cadac1cf68817de16441be2e7d79b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 58764, "upload_time": "2020-03-19T09:08:22", "upload_time_iso_8601": "2020-03-19T09:08:22.161455Z", "url": "https://files.pythonhosted.org/packages/76/46/2455fdc2e524c92fbcab95ddea42629660ae40b8442e2fba951e6221832c/minter_sdk-1.0.21-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c41427ade69004b64fd8dcbff781b28", "sha256": "8c8600357d6a9b87bab54a6b6fa41675c47b0402be6d3b54f4eb2cf3d589e5da"}, "downloads": -1, "filename": "minter-sdk-1.0.21.tar.gz", "has_sig": false, "md5_digest": "1c41427ade69004b64fd8dcbff781b28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49577, "upload_time": "2020-03-19T09:08:25", "upload_time_iso_8601": "2020-03-19T09:08:25.089619Z", "url": "https://files.pythonhosted.org/packages/b6/00/ba2c0cb3b4c5e986848dfff2645147aecd7228b1a87bab258ddd6e555b0e/minter-sdk-1.0.21.tar.gz", "yanked": false}], "1.0.22": [{"comment_text": "", "digests": {"md5": "d7ab30cf377057e6cebdb035b7ac97b2", "sha256": "4e8346c68fd2fc76b186c94e245aaf14eda2a72d946d7cf40c57562eadc5edf2"}, "downloads": -1, "filename": "minter_sdk-1.0.22-py3-none-any.whl", "has_sig": false, "md5_digest": "d7ab30cf377057e6cebdb035b7ac97b2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 60720, "upload_time": "2020-03-20T10:00:36", "upload_time_iso_8601": "2020-03-20T10:00:36.866786Z", "url": "https://files.pythonhosted.org/packages/33/3a/df66a3112a6f91ac003b6cd0cbf4b0e3c96da09631add52244111d2536ff/minter_sdk-1.0.22-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4bf840439d645359b7ced3159bfc94fc", "sha256": "3476960b60fd50026b8d7119c726883ab28b837dd6d6af8743cdf28cfd30d407"}, "downloads": -1, "filename": "minter-sdk-1.0.22.tar.gz", "has_sig": false, "md5_digest": "4bf840439d645359b7ced3159bfc94fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51617, "upload_time": "2020-03-20T10:00:39", "upload_time_iso_8601": "2020-03-20T10:00:39.278210Z", "url": "https://files.pythonhosted.org/packages/f4/b0/8364025d171c805c18814a10fa6906aca01fba26cb4f4a44164b16b83105/minter-sdk-1.0.22.tar.gz", "yanked": false}], "1.0.23": [{"comment_text": "", "digests": {"md5": "cdfa40a8ebc712b74f8f4b2140f78f49", "sha256": "1c27c34ddf8fdf6f3daca8765ea7411efc9abdbfab73efa38aed83ae781f604d"}, "downloads": -1, "filename": "minter_sdk-1.0.23-py3-none-any.whl", "has_sig": false, "md5_digest": "cdfa40a8ebc712b74f8f4b2140f78f49", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 60852, "upload_time": "2020-03-21T09:24:21", "upload_time_iso_8601": "2020-03-21T09:24:21.673514Z", "url": "https://files.pythonhosted.org/packages/29/45/29c8bec1c2043c6d35944be1862a7aa53a40f031be2938e07f52d74407ad/minter_sdk-1.0.23-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0c2f68fc4e01444a167b979a95fc412", "sha256": "69a7f51c66f2ab59fb6bb424afe3d1e24b7f126f241c0d5f4944d544ab4e3c28"}, "downloads": -1, "filename": "minter-sdk-1.0.23.tar.gz", "has_sig": false, "md5_digest": "d0c2f68fc4e01444a167b979a95fc412", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51725, "upload_time": "2020-03-21T09:24:23", "upload_time_iso_8601": "2020-03-21T09:24:23.395302Z", "url": "https://files.pythonhosted.org/packages/8f/95/9269952698d60ef5c5586b5075bf960c9bc9298f20d11afcb71a9c3b32be/minter-sdk-1.0.23.tar.gz", "yanked": false}], "1.0.24": [{"comment_text": "", "digests": {"md5": "c020743dd35c756d0b0e90812d7f4639", "sha256": "ee36c2f97af4ea27c28cd883dfcbdd5316c8d6a3f1043aba83b5ccde63c9227f"}, "downloads": -1, "filename": "minter_sdk-1.0.24-py3-none-any.whl", "has_sig": false, "md5_digest": "c020743dd35c756d0b0e90812d7f4639", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 61427, "upload_time": "2020-03-24T10:10:38", "upload_time_iso_8601": "2020-03-24T10:10:38.064861Z", "url": "https://files.pythonhosted.org/packages/c5/3e/1069798a9afe785a3fa1034d84f6995c8ba74d1c9d30b0e99e5706724d0f/minter_sdk-1.0.24-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ffa86889ba0c77f1649a8f5f2efd9ca6", "sha256": "cc4ab1f1ecee77f775800174a3647b6b4d4894c456b69a0542bb940170e7d81b"}, "downloads": -1, "filename": "minter-sdk-1.0.24.tar.gz", "has_sig": false, "md5_digest": "ffa86889ba0c77f1649a8f5f2efd9ca6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52145, "upload_time": "2020-03-24T10:10:39", "upload_time_iso_8601": "2020-03-24T10:10:39.916390Z", "url": "https://files.pythonhosted.org/packages/50/72/67ee2c1e09fe9cfe947c02331f94823557a187015a8faaf66b6998f85ded/minter-sdk-1.0.24.tar.gz", "yanked": false}], "1.0.25": [{"comment_text": "", "digests": {"md5": "79b77dd7d9e0f1aa77c568cc966536fc", "sha256": "7c7a2fe4ad238bb66a0147e28ba4442d2670a13b629af8e4296bd12682664f48"}, "downloads": -1, "filename": "minter_sdk-1.0.25-py3-none-any.whl", "has_sig": false, "md5_digest": "79b77dd7d9e0f1aa77c568cc966536fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 64319, "upload_time": "2020-03-25T18:38:32", "upload_time_iso_8601": "2020-03-25T18:38:32.984398Z", "url": "https://files.pythonhosted.org/packages/27/55/952181d9a9195cca28d9fe889d1e3a41c15235a6b8a5d5278ed4133d9a63/minter_sdk-1.0.25-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "665a6084214a25214e74e5d695a21c92", "sha256": "80c4b46bf26ec55866ba97aa4ef3f7fa144f294169fc973f86a917ebfe0fe5f4"}, "downloads": -1, "filename": "minter-sdk-1.0.25.tar.gz", "has_sig": false, "md5_digest": "665a6084214a25214e74e5d695a21c92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55326, "upload_time": "2020-03-25T18:38:35", "upload_time_iso_8601": "2020-03-25T18:38:35.882629Z", "url": "https://files.pythonhosted.org/packages/83/63/7cd3569410743ef719c32b806e75217c581fb3625fe4ec3e0736a00f10a3/minter-sdk-1.0.25.tar.gz", "yanked": false}], "1.0.26": [{"comment_text": "", "digests": {"md5": "1737f77d54c5194aab1bb323a32fa2b6", "sha256": "36051729788a318755d94fbb35db991687bd51fe4199c8242dd676cef8e6cc50"}, "downloads": -1, "filename": "minter_sdk-1.0.26-py3-none-any.whl", "has_sig": false, "md5_digest": "1737f77d54c5194aab1bb323a32fa2b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 64530, "upload_time": "2020-03-27T18:21:23", "upload_time_iso_8601": "2020-03-27T18:21:23.841893Z", "url": "https://files.pythonhosted.org/packages/a5/7d/177bb26b28d36c5883ddc57c6e2c605e93d951c23fcf63ed4529c1b8662f/minter_sdk-1.0.26-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d424514b5610025bfdc27cb99d068278", "sha256": "f8ee91134cd542dcb5b4a0d4a9a66a88866dc1272cfd27c9567e52f968a170e5"}, "downloads": -1, "filename": "minter-sdk-1.0.26.tar.gz", "has_sig": false, "md5_digest": "d424514b5610025bfdc27cb99d068278", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55619, "upload_time": "2020-03-27T18:21:25", "upload_time_iso_8601": "2020-03-27T18:21:25.665682Z", "url": "https://files.pythonhosted.org/packages/d7/88/171e435198dd6f96619e8b938473e60035de0b8fcb44471557dc78256eb7/minter-sdk-1.0.26.tar.gz", "yanked": false}], "1.0.27": [{"comment_text": "", "digests": {"md5": "0c94024fa217585af922df7fd5acc059", "sha256": "36e65baa4ada92d6c5ccb12f70436b8b7f2cb9e5fdd82301a8dfe7996e1a7614"}, "downloads": -1, "filename": "minter_sdk-1.0.27-py3-none-any.whl", "has_sig": false, "md5_digest": "0c94024fa217585af922df7fd5acc059", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35477, "upload_time": "2020-04-07T09:34:14", "upload_time_iso_8601": "2020-04-07T09:34:14.517172Z", "url": "https://files.pythonhosted.org/packages/90/a0/b8a74ad6221c95ead1a9b2df59011ab78e85fd3cf90be54e34591a7afd98/minter_sdk-1.0.27-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6368de8eb1e2629a940573a6807450fd", "sha256": "90a6ceb41414104ab33c14e206f91dc276b0d5b6d05824ec6b17604a2894e4de"}, "downloads": -1, "filename": "minter-sdk-1.0.27.tar.gz", "has_sig": false, "md5_digest": "6368de8eb1e2629a940573a6807450fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34136, "upload_time": "2020-04-07T09:34:16", "upload_time_iso_8601": "2020-04-07T09:34:16.786494Z", "url": "https://files.pythonhosted.org/packages/95/71/761cc8354b50a7f81167d00c216708fe86fe250fa53ed32dcd8fd8598ed3/minter-sdk-1.0.27.tar.gz", "yanked": false}], "1.0.28": [{"comment_text": "", "digests": {"md5": "7f088e8ba67da19c3cc604d95fdf95ce", "sha256": "5fca403e9e959e3137a0175a5175af225a8a225ed785454e8fc69ffcbecab308"}, "downloads": -1, "filename": "minter_sdk-1.0.28-py3-none-any.whl", "has_sig": false, "md5_digest": "7f088e8ba67da19c3cc604d95fdf95ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35594, "upload_time": "2020-04-08T19:37:40", "upload_time_iso_8601": "2020-04-08T19:37:40.066154Z", "url": "https://files.pythonhosted.org/packages/b6/a6/fff5e8aa8dbd28b145a874c4f44db4e27d54a739a104e1531e7b98dbc726/minter_sdk-1.0.28-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75d4980e90042eb9f57c101108728852", "sha256": "ee5171b5d5384becbc59df659fc419a8d5b24af9f670bd577883d17561b94df1"}, "downloads": -1, "filename": "minter-sdk-1.0.28.tar.gz", "has_sig": false, "md5_digest": "75d4980e90042eb9f57c101108728852", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34248, "upload_time": "2020-04-08T19:37:44", "upload_time_iso_8601": "2020-04-08T19:37:44.267544Z", "url": "https://files.pythonhosted.org/packages/1a/aa/b017a9acaccd7f331f6303762a120fa281d70118dd07a30936aec77fa652/minter-sdk-1.0.28.tar.gz", "yanked": false}], "1.0.29": [{"comment_text": "", "digests": {"md5": "063f2e327b78fd1ba66ee77036779d79", "sha256": "ef4cf59a574179a940c801d55652e9319edd6b4c70b75159fe0807478df3bbc5"}, "downloads": -1, "filename": "minter_sdk-1.0.29-py3-none-any.whl", "has_sig": false, "md5_digest": "063f2e327b78fd1ba66ee77036779d79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35528, "upload_time": "2020-04-08T22:02:47", "upload_time_iso_8601": "2020-04-08T22:02:47.465411Z", "url": "https://files.pythonhosted.org/packages/d5/68/204a629eab4b1c010815366a34fc6b9edcd2deaf968a0e72925f6d9b5146/minter_sdk-1.0.29-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ccb3693806a2984d74cfc29c3af3f64", "sha256": "8333a67a219f7410d3ff347cb1e66eeb28b3c8b00194949ecf5e46b8d9cf306b"}, "downloads": -1, "filename": "minter-sdk-1.0.29.tar.gz", "has_sig": false, "md5_digest": "2ccb3693806a2984d74cfc29c3af3f64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34197, "upload_time": "2020-04-08T22:02:50", "upload_time_iso_8601": "2020-04-08T22:02:50.122973Z", "url": "https://files.pythonhosted.org/packages/69/e8/8fd4f06a5658171f1caf41eea4f0e41542a81a74a53764504884ae2a54bf/minter-sdk-1.0.29.tar.gz", "yanked": false}], "1.0.30": [{"comment_text": "", "digests": {"md5": "70419aeca39f9daa4eb67bc634d48fcd", "sha256": "0615d7f14e84dc743e9d189029b27d6da9b2dec4bb7e34b2cad0622b7da2199b"}, "downloads": -1, "filename": "minter_sdk-1.0.30-py3-none-any.whl", "has_sig": false, "md5_digest": "70419aeca39f9daa4eb67bc634d48fcd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35517, "upload_time": "2020-04-12T11:44:43", "upload_time_iso_8601": "2020-04-12T11:44:43.312978Z", "url": "https://files.pythonhosted.org/packages/ca/f2/c8a2394864357de6768e3891ef4462bfa90697454b8051a0be9fb32b5b4e/minter_sdk-1.0.30-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e8770acef5fb4b0d9f64260bcee8ba1", "sha256": "b1f78cd31ada95cad1b444181238cecf332f7be25d77ca9aec430b8b9348ea56"}, "downloads": -1, "filename": "minter-sdk-1.0.30.tar.gz", "has_sig": false, "md5_digest": "1e8770acef5fb4b0d9f64260bcee8ba1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34196, "upload_time": "2020-04-12T11:44:47", "upload_time_iso_8601": "2020-04-12T11:44:47.541166Z", "url": "https://files.pythonhosted.org/packages/97/2e/2531c242b963e7dc9b5562c176bb98d6ba8a679a1bcb5bbd8836446f1e5d/minter-sdk-1.0.30.tar.gz", "yanked": false}], "1.0.31": [{"comment_text": "", "digests": {"md5": "b70645bbe58208cb0930790781691586", "sha256": "8d7997a12eeff41a3ab1fdeaf014e5a2d704f7fa51cc5164bbd78e6017dfe86a"}, "downloads": -1, "filename": "minter_sdk-1.0.31-py3-none-any.whl", "has_sig": false, "md5_digest": "b70645bbe58208cb0930790781691586", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35482, "upload_time": "2020-04-15T14:36:46", "upload_time_iso_8601": "2020-04-15T14:36:46.482845Z", "url": "https://files.pythonhosted.org/packages/b9/dc/40f69062a865a9be765d3138dde46d09fa05f5fd50b7b8063288996baa94/minter_sdk-1.0.31-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d5d461a1ad3afe3d1f1682f78dbff1ee", "sha256": "9b8a365c13bc5fa9a84beff1f0c67e727a996cb482aada6bd68a81fd9ead12ef"}, "downloads": -1, "filename": "minter-sdk-1.0.31.tar.gz", "has_sig": false, "md5_digest": "d5d461a1ad3afe3d1f1682f78dbff1ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34162, "upload_time": "2020-04-15T14:36:47", "upload_time_iso_8601": "2020-04-15T14:36:47.973271Z", "url": "https://files.pythonhosted.org/packages/7d/4a/c5476c26ed253de88ff177e7225bbe8bf8c947b360011723c226e6b2f569/minter-sdk-1.0.31.tar.gz", "yanked": false}], "1.0.32": [{"comment_text": "", "digests": {"md5": "24b0875c77746c794120233470404167", "sha256": "332f41345d003f3277b1ba16da653c3f1a1d6e1c70d16a5fce70f4e89c1ebfaf"}, "downloads": -1, "filename": "minter_sdk-1.0.32-py3-none-any.whl", "has_sig": false, "md5_digest": "24b0875c77746c794120233470404167", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35476, "upload_time": "2020-04-15T16:04:18", "upload_time_iso_8601": "2020-04-15T16:04:18.181564Z", "url": "https://files.pythonhosted.org/packages/14/da/44b5d58d7fa338fe5a302c9c39ff55ae23bddcf5fb05cdf2fe9f7b66760e/minter_sdk-1.0.32-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "650dcb1faf46e971d77cfaff3dd5081e", "sha256": "1e4960a9fbcc9264b32747421e50ef2bb3613b384007f0a82185b6be9caac9ef"}, "downloads": -1, "filename": "minter-sdk-1.0.32.tar.gz", "has_sig": false, "md5_digest": "650dcb1faf46e971d77cfaff3dd5081e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34155, "upload_time": "2020-04-15T16:04:19", "upload_time_iso_8601": "2020-04-15T16:04:19.910731Z", "url": "https://files.pythonhosted.org/packages/df/14/a6c1f41bf81f88ee8f031df1422c85ce8fa6f75da988ea683c7753a7aa64/minter-sdk-1.0.32.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "24b0875c77746c794120233470404167", "sha256": "332f41345d003f3277b1ba16da653c3f1a1d6e1c70d16a5fce70f4e89c1ebfaf"}, "downloads": -1, "filename": "minter_sdk-1.0.32-py3-none-any.whl", "has_sig": false, "md5_digest": "24b0875c77746c794120233470404167", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35476, "upload_time": "2020-04-15T16:04:18", "upload_time_iso_8601": "2020-04-15T16:04:18.181564Z", "url": "https://files.pythonhosted.org/packages/14/da/44b5d58d7fa338fe5a302c9c39ff55ae23bddcf5fb05cdf2fe9f7b66760e/minter_sdk-1.0.32-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "650dcb1faf46e971d77cfaff3dd5081e", "sha256": "1e4960a9fbcc9264b32747421e50ef2bb3613b384007f0a82185b6be9caac9ef"}, "downloads": -1, "filename": "minter-sdk-1.0.32.tar.gz", "has_sig": false, "md5_digest": "650dcb1faf46e971d77cfaff3dd5081e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34155, "upload_time": "2020-04-15T16:04:19", "upload_time_iso_8601": "2020-04-15T16:04:19.910731Z", "url": "https://files.pythonhosted.org/packages/df/14/a6c1f41bf81f88ee8f031df1422c85ce8fa6f75da988ea683c7753a7aa64/minter-sdk-1.0.32.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:13 2020"}