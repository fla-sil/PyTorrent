{"info": {"author": "Kevin Kwok", "author_email": "antimatter15@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Jupyter", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering"], "description": "<img src=\"https://raw.githubusercontent.com/antimatter15/lambdu/master/images/logo.png\" alt=\"eigensheep\" width=\"500\"/>\n\n![PyPI](https://img.shields.io/pypi/v/eigensheep.svg)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/eigensheep.svg)\n![PyPI - License](https://img.shields.io/pypi/l/eigensheep.svg)\n\nEigensheep is a python package that lets you effortlessly run Jupyter Notebook cells on AWS Lambda, with massive parallelism. \nTo instantly provision and run your code on 1000 tiny VMs, prefix a cell with `%%eigensheep -n 1000`. \n\nEigensheep gives your Lambda code full access both to packages from PyPi, and to layers from [Lambda Layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html), including typically tricky-to-install things like `Z3`, `ffmpeg`, and `puppeteer`.\n\n\n## Features\n\n- Just prefix a cell with `%%eigensheep` to run it on AWS Lambda\n- Automatically generates Lambda deployment packages with pre-installed dependencies via `pip`. \n- Supports Lambda Layers for easily including external libraries like Z3, FFmpeg, Puppeteer/Chromium, LibreOffice, Tesseract OCR, YOLOv3 on Darknet, and Spacy\n- Automatically caches Lambda configurations\n- Supports response sizes over 6MB by saving results to S3\n- Integrates `tqdm` for interactively displaying progress\n- Easy setup and configuration powered by AWS CloudFormation \n- Automatically copies variables from notebook scope\n\n\n<img src=\"https://raw.githubusercontent.com/antimatter15/lambdu/master/images/chart.png\" alt=\"Sequentially opening 50 websites with Puppeteer and taking screenshots takes 105.6 seconds, while the same task split into 50 concurrent Lambda invocations finishes in 9.8 seconds\" width=\"500\"  />\n\nHere we compare the task of capturing screenshots of the 50 most popular websites (according to Moz) with Pyppeteer. In the first bar, we're doing this sequentially with a Python `for` loop. In the second one, each website is run as a different Lambda. The estimated cost of the full sequential test (at the current `us-east-1` price) is $0.0051 (or 0.07% of the monthly free quota). The estimated cost of the full parallel test is $0.0073 (or 0.11% of the monthly free quota).\n\n## Getting Started\n\nOpen up your Terminal and install `eigensheep` with `pip`\n\n    pip install eigensheep\n\nOpen a Jupyter notebook with `jupyter notebook` and create a new Python notebook. Eigensheep supports both Python 2 and Python 3. Run the following code in a cell:\n\n    import eigensheep\n\nFollow the on-screen instructions to configure AWS credentials. AWS credentials will be saved to `~/.aws/config` under the `eigensheep` profile for subsequent invocations. Eigensheep uses AWS CloudFormation so you only need a few clicks to get started (see our [guided video walkthrough](https://www.youtube.com/watch?v=jdurk2DRdAs)). \n\n[<img src=\"https://raw.githubusercontent.com/antimatter15/lambdu/master/images/setup.png\" alt=\"eigensheep setup\" width=\"500\" />](https://www.youtube.com/watch?v=jdurk2DRdAs)\n\nOnce Eigensheep is set up, you can run any code on Lambda by prefixing the cell with `%%eigensheep`. You can include dependencies from `pip` by typing `%%eigensheep <list of package names>`, for example `%%eigensheep requests numpy`. You can invoke a cell multiple times concurrently with the `-n` parameter, for example `%%eigensheep -n 100`. \n\n[<img src=\"https://raw.githubusercontent.com/antimatter15/lambdu/master/images/parallel.gif\" alt=\"eigensheep usage\" width=\"500\"  />](https://www.youtube.com/watch?v=jdurk2DRdAs)\n\n## Frequently Asked Questions\n\n**Q: Why is this library called Eigensheep?**\n\nThe name comes from the classic math joke:\n\n> What do you call a baby eigensheep? \n> \n> A [lamb, duh](https://en.wikipedia.org/wiki/Eigenvalues_and_eigenvectors#Overview). \n\n**Q: Does this work on Python 2 and Python 3?**\n\nA: Both Python 2 and Python 3 are supported. If the library is imported from a Python 2.x notebook, the Lambda runtime will default to \"python2.6\". If the library is imported from a Python 3.x notebook, the Lambda runtime defaults to \"python3.6\". This can be manually overridden with the \"--runtime\" option.\n\n**Q: Can I use this to do GPU stuff?**\n\nA: Currently the AWS Lambda execution environment does not expose access to any GPU acceleration. Eigensheep probably won't be that useful for training deep neural nets.\n\n**Q: How much does it cost to run stuff on AWS Lambda?**\n\nA: Unlike a traditional VM, you don't get charged while you're idling and not actively computing. You don't have to worry about accidentally forgetting to turn off a machine, and provisioning a VM takes only milliseconds rather than minutes. \n\nAWS provides a pretty generous Free Tier for Lambda which does not expire after 12 months. It's 400,000 GB-seconds/month. That's 36 continuous hours of a single maxed out 3108MB Lambda job for free every month. Alternatively, it's about 20 minutes of 100 concurrent maxed out instances. After that it's about $7 for every subsequent free-tier equivalent. \n\n**Q: Can this be used for web scraping?**\n\nA: Yes, Eigensheep can be used for web scraping. However, note that different Lambda VM instances often share the same IP address. \n\n**Q: Can Eigensheep be used for long running computations?**\n\nA: The maximum allowed duration of any Lambda job is 15 minutes. Eigensheep works best for tasks which can be broken up into smaller chunks. \n\n\n**Q: What are the security implications of using Eigensheep?**\n\nA: The Eigensheep CloudFormation stack creates an IAM User, Access Key, and Lambda Role with as few permissions as possible. If the access keys are compromised, the attacker only has access to a bucket containing Eigensheep-specific content, and can not use it to access any of your other AWS resources. \n\nThe IAM User can only read/write from a specific bucket earmarked for use with Eigensheep, and can only update a specific lambda function (all the different variants are stored as different versions on a single Lambda function). The Lambda function only has access to the specific bucket and the ability to write to CloudWatch logs and XRay tracing streams. \n\nAll of the access keys can be revoked and all of the resources can be removed simply by deleting the CloudFormation stack from the AWS console. \n\n\n**Q: Where does Eigensheep store its configuration?**\n\nA: Eigensheep stores its access keys and configuration in the `~/.aws/config` file under the `eigensheep` profile.\n\n\n**Q: Can I use Eigensheep without installing the CloudFormation Stack?**\n\nA: Yes. Although it's a bit more complicated to set up. You can use any AWS access key and secret, so long as it has the ability to modify/invoke a Lambda named \"EigensheepLambda\" (which must be manually created). You must also create an S3 bucket named \"eigensheep-YOUR_ACCOUNT_ID\", where YOUR_ACCOUNT_ID is your numerical AWS account ID.\n\n## Usage\n\n```\nusage: %%eigensheep [-h] [-n N] [--memory MEMORY] [--timeout TIMEOUT]\n                    [--runtime RUNTIME] [--layer LAYER] [--reinstall]\n                    [--no_install] [--clean] [--rm] [--name NAME] [--verbose]\n                    [deps [deps ...]]\n\nJupyter cell magic to invoke cell on AWS Lambda\n\npositional arguments:\n  deps               dependencies to be installed via pip\n\noptional arguments:\n  -h, --help         show this help message and exit\n  -n N               number of parallel lambdas to invoke\n  --memory MEMORY    amount of memory in 64MB increments from 128 up to 3008\n  --timeout TIMEOUT  lambda execution timeout in seconds up to 900 (15\n                     minutes)\n  --runtime RUNTIME  lambda runtime (python3.7, python2.7) defaults configured\n                     based on host environment\n  --layer LAYER      ARNs of lambda layers to include\n  --reinstall        regenerate lambda configuration and dependencies\n  --no_install       do not install dependencies if configration not found\n  --clean            clear all deployed lambda configurations\n  --rm               remove a specific lambda configuration\n  --name NAME        store the lambda for later use with `eigensheep.map` or\n                     `eigensheep.invoke`\n  --verbose          show additional information from lambda invocation\n```\n\n\n`eigensheep.map(\"do_stuff\", [1, 2, 3, 4])`\n\n\n`eigensheep.invoke(\"do_stuff\")`\n\n\n\n```\n%eigensheep --clean\n```\n\n\n## Acknowledgements\n\nThis library was written by [Kevin Kwok](https://twitter.com/antimatter15) and [Guillermo Webster](https://twitter.com/biject). It is based on Jupyter/IPython, `tqdm`, `boto3`, and countless Stackoverflow answers.\n\nIf you're interested in this project, you should also check out [PyWren](http://pywren.io/) by Eric Jonas, and [ExCamera](https://www.usenix.org/system/files/conference/nsdi17/nsdi17-fouladi.pdf) from Sadjad Fouladi, et al. \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/antimatter15/eigensheep", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "eigensheep", "package_url": "https://pypi.org/project/eigensheep/", "platform": "", "project_url": "https://pypi.org/project/eigensheep/", "project_urls": {"Homepage": "https://github.com/antimatter15/eigensheep"}, "release_url": "https://pypi.org/project/eigensheep/1.0.0/", "requires_dist": ["tqdm", "boto3", "ipython", "ipywidgets", "futures ; python_version == \"2.7\""], "requires_python": "", "summary": "Run Jupyter cells in AWS Lambda for massively parallel experimentation", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"eigensheep\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/568e4dbb5b2819054a40765611507a3392e951b5/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f616e74696d617474657231352f6c616d6264752f6d61737465722f696d616765732f6c6f676f2e706e67\" width=\"500\">\n<p><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b8697171f3cd41d725f2e1669e2670e091216592/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f656967656e73686565702e737667\">\n<img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7b5ce372985190c50dfdf21b4d0e450fbd7f412d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f656967656e73686565702e737667\">\n<img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a4f7381eb1a8c2ef905a4699b3af4bdf4ae2b0d6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f656967656e73686565702e737667\"></p>\n<p>Eigensheep is a python package that lets you effortlessly run Jupyter Notebook cells on AWS Lambda, with massive parallelism.\nTo instantly provision and run your code on 1000 tiny VMs, prefix a cell with <code>%%eigensheep -n 1000</code>.</p>\n<p>Eigensheep gives your Lambda code full access both to packages from PyPi, and to layers from <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\" rel=\"nofollow\">Lambda Layers</a>, including typically tricky-to-install things like <code>Z3</code>, <code>ffmpeg</code>, and <code>puppeteer</code>.</p>\n<h2>Features</h2>\n<ul>\n<li>Just prefix a cell with <code>%%eigensheep</code> to run it on AWS Lambda</li>\n<li>Automatically generates Lambda deployment packages with pre-installed dependencies via <code>pip</code>.</li>\n<li>Supports Lambda Layers for easily including external libraries like Z3, FFmpeg, Puppeteer/Chromium, LibreOffice, Tesseract OCR, YOLOv3 on Darknet, and Spacy</li>\n<li>Automatically caches Lambda configurations</li>\n<li>Supports response sizes over 6MB by saving results to S3</li>\n<li>Integrates <code>tqdm</code> for interactively displaying progress</li>\n<li>Easy setup and configuration powered by AWS CloudFormation</li>\n<li>Automatically copies variables from notebook scope</li>\n</ul>\n<img alt=\"Sequentially opening 50 websites with Puppeteer and taking screenshots takes 105.6 seconds, while the same task split into 50 concurrent Lambda invocations finishes in 9.8 seconds\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0d3c9226e423d8d9b367818eaf19448a5ae261be/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f616e74696d617474657231352f6c616d6264752f6d61737465722f696d616765732f63686172742e706e67\" width=\"500\">\n<p>Here we compare the task of capturing screenshots of the 50 most popular websites (according to Moz) with Pyppeteer. In the first bar, we're doing this sequentially with a Python <code>for</code> loop. In the second one, each website is run as a different Lambda. The estimated cost of the full sequential test (at the current <code>us-east-1</code> price) is $0.0051 (or 0.07% of the monthly free quota). The estimated cost of the full parallel test is $0.0073 (or 0.11% of the monthly free quota).</p>\n<h2>Getting Started</h2>\n<p>Open up your Terminal and install <code>eigensheep</code> with <code>pip</code></p>\n<pre><code>pip install eigensheep\n</code></pre>\n<p>Open a Jupyter notebook with <code>jupyter notebook</code> and create a new Python notebook. Eigensheep supports both Python 2 and Python 3. Run the following code in a cell:</p>\n<pre><code>import eigensheep\n</code></pre>\n<p>Follow the on-screen instructions to configure AWS credentials. AWS credentials will be saved to <code>~/.aws/config</code> under the <code>eigensheep</code> profile for subsequent invocations. Eigensheep uses AWS CloudFormation so you only need a few clicks to get started (see our <a href=\"https://www.youtube.com/watch?v=jdurk2DRdAs\" rel=\"nofollow\">guided video walkthrough</a>).</p>\n<p><a href=\"https://www.youtube.com/watch?v=jdurk2DRdAs\" rel=\"nofollow\"><img alt=\"eigensheep setup\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5ae4a6c864387e3a33664d08eead00a86dfc5849/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f616e74696d617474657231352f6c616d6264752f6d61737465722f696d616765732f73657475702e706e67\" width=\"500\"></a></p>\n<p>Once Eigensheep is set up, you can run any code on Lambda by prefixing the cell with <code>%%eigensheep</code>. You can include dependencies from <code>pip</code> by typing <code>%%eigensheep &lt;list of package names&gt;</code>, for example <code>%%eigensheep requests numpy</code>. You can invoke a cell multiple times concurrently with the <code>-n</code> parameter, for example <code>%%eigensheep -n 100</code>.</p>\n<p><a href=\"https://www.youtube.com/watch?v=jdurk2DRdAs\" rel=\"nofollow\"><img alt=\"eigensheep usage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e255d169d0e0fdefd8a89210eafb7746d2215d44/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f616e74696d617474657231352f6c616d6264752f6d61737465722f696d616765732f706172616c6c656c2e676966\" width=\"500\"></a></p>\n<h2>Frequently Asked Questions</h2>\n<p><strong>Q: Why is this library called Eigensheep?</strong></p>\n<p>The name comes from the classic math joke:</p>\n<blockquote>\n<p>What do you call a baby eigensheep?</p>\n<p>A <a href=\"https://en.wikipedia.org/wiki/Eigenvalues_and_eigenvectors#Overview\" rel=\"nofollow\">lamb, duh</a>.</p>\n</blockquote>\n<p><strong>Q: Does this work on Python 2 and Python 3?</strong></p>\n<p>A: Both Python 2 and Python 3 are supported. If the library is imported from a Python 2.x notebook, the Lambda runtime will default to \"python2.6\". If the library is imported from a Python 3.x notebook, the Lambda runtime defaults to \"python3.6\". This can be manually overridden with the \"--runtime\" option.</p>\n<p><strong>Q: Can I use this to do GPU stuff?</strong></p>\n<p>A: Currently the AWS Lambda execution environment does not expose access to any GPU acceleration. Eigensheep probably won't be that useful for training deep neural nets.</p>\n<p><strong>Q: How much does it cost to run stuff on AWS Lambda?</strong></p>\n<p>A: Unlike a traditional VM, you don't get charged while you're idling and not actively computing. You don't have to worry about accidentally forgetting to turn off a machine, and provisioning a VM takes only milliseconds rather than minutes.</p>\n<p>AWS provides a pretty generous Free Tier for Lambda which does not expire after 12 months. It's 400,000 GB-seconds/month. That's 36 continuous hours of a single maxed out 3108MB Lambda job for free every month. Alternatively, it's about 20 minutes of 100 concurrent maxed out instances. After that it's about $7 for every subsequent free-tier equivalent.</p>\n<p><strong>Q: Can this be used for web scraping?</strong></p>\n<p>A: Yes, Eigensheep can be used for web scraping. However, note that different Lambda VM instances often share the same IP address.</p>\n<p><strong>Q: Can Eigensheep be used for long running computations?</strong></p>\n<p>A: The maximum allowed duration of any Lambda job is 15 minutes. Eigensheep works best for tasks which can be broken up into smaller chunks.</p>\n<p><strong>Q: What are the security implications of using Eigensheep?</strong></p>\n<p>A: The Eigensheep CloudFormation stack creates an IAM User, Access Key, and Lambda Role with as few permissions as possible. If the access keys are compromised, the attacker only has access to a bucket containing Eigensheep-specific content, and can not use it to access any of your other AWS resources.</p>\n<p>The IAM User can only read/write from a specific bucket earmarked for use with Eigensheep, and can only update a specific lambda function (all the different variants are stored as different versions on a single Lambda function). The Lambda function only has access to the specific bucket and the ability to write to CloudWatch logs and XRay tracing streams.</p>\n<p>All of the access keys can be revoked and all of the resources can be removed simply by deleting the CloudFormation stack from the AWS console.</p>\n<p><strong>Q: Where does Eigensheep store its configuration?</strong></p>\n<p>A: Eigensheep stores its access keys and configuration in the <code>~/.aws/config</code> file under the <code>eigensheep</code> profile.</p>\n<p><strong>Q: Can I use Eigensheep without installing the CloudFormation Stack?</strong></p>\n<p>A: Yes. Although it's a bit more complicated to set up. You can use any AWS access key and secret, so long as it has the ability to modify/invoke a Lambda named \"EigensheepLambda\" (which must be manually created). You must also create an S3 bucket named \"eigensheep-YOUR_ACCOUNT_ID\", where YOUR_ACCOUNT_ID is your numerical AWS account ID.</p>\n<h2>Usage</h2>\n<pre><code>usage: %%eigensheep [-h] [-n N] [--memory MEMORY] [--timeout TIMEOUT]\n                    [--runtime RUNTIME] [--layer LAYER] [--reinstall]\n                    [--no_install] [--clean] [--rm] [--name NAME] [--verbose]\n                    [deps [deps ...]]\n\nJupyter cell magic to invoke cell on AWS Lambda\n\npositional arguments:\n  deps               dependencies to be installed via pip\n\noptional arguments:\n  -h, --help         show this help message and exit\n  -n N               number of parallel lambdas to invoke\n  --memory MEMORY    amount of memory in 64MB increments from 128 up to 3008\n  --timeout TIMEOUT  lambda execution timeout in seconds up to 900 (15\n                     minutes)\n  --runtime RUNTIME  lambda runtime (python3.7, python2.7) defaults configured\n                     based on host environment\n  --layer LAYER      ARNs of lambda layers to include\n  --reinstall        regenerate lambda configuration and dependencies\n  --no_install       do not install dependencies if configration not found\n  --clean            clear all deployed lambda configurations\n  --rm               remove a specific lambda configuration\n  --name NAME        store the lambda for later use with `eigensheep.map` or\n                     `eigensheep.invoke`\n  --verbose          show additional information from lambda invocation\n</code></pre>\n<p><code>eigensheep.map(\"do_stuff\", [1, 2, 3, 4])</code></p>\n<p><code>eigensheep.invoke(\"do_stuff\")</code></p>\n<pre><code>%eigensheep --clean\n</code></pre>\n<h2>Acknowledgements</h2>\n<p>This library was written by <a href=\"https://twitter.com/antimatter15\" rel=\"nofollow\">Kevin Kwok</a> and <a href=\"https://twitter.com/biject\" rel=\"nofollow\">Guillermo Webster</a>. It is based on Jupyter/IPython, <code>tqdm</code>, <code>boto3</code>, and countless Stackoverflow answers.</p>\n<p>If you're interested in this project, you should also check out <a href=\"http://pywren.io/\" rel=\"nofollow\">PyWren</a> by Eric Jonas, and <a href=\"https://www.usenix.org/system/files/conference/nsdi17/nsdi17-fouladi.pdf\" rel=\"nofollow\">ExCamera</a> from Sadjad Fouladi, et al.</p>\n\n          </div>"}, "last_serial": 5578958, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6db7b55470c0fd174a4d51d20c325fac", "sha256": "3f2ae4b0dc044decabfa7948ef2df0b50a80ab1cc0a3f96177eaf4103f91ddee"}, "downloads": -1, "filename": "eigensheep-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6db7b55470c0fd174a4d51d20c325fac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13357, "upload_time": "2019-07-21T07:08:06", "upload_time_iso_8601": "2019-07-21T07:08:06.842777Z", "url": "https://files.pythonhosted.org/packages/61/a6/2df6a7fa193ba5f2e5d15b3bd69237364315e96c016c57620f5b1f39d5a7/eigensheep-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d0b7eababd7e0dccb8cd17da24b5cd6", "sha256": "50eb8ec38f23da702877f09afcb54384e5595bf0ffd69bc4b4ce4f83fb0b6ef9"}, "downloads": -1, "filename": "eigensheep-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8d0b7eababd7e0dccb8cd17da24b5cd6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11191, "upload_time": "2019-07-21T07:08:09", "upload_time_iso_8601": "2019-07-21T07:08:09.124280Z", "url": "https://files.pythonhosted.org/packages/1b/d5/6ec59599294adebdaccf93435b2159da72877bdca405073ebee8f9991cc2/eigensheep-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "0e20d367c75fa4e0e61ad6640cdd24d6", "sha256": "13dae8326e905c33f4a8ce61b032812012ea765fdd7d362c96fc3f2b27d42f4a"}, "downloads": -1, "filename": "eigensheep-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0e20d367c75fa4e0e61ad6640cdd24d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14853, "upload_time": "2019-07-21T08:54:36", "upload_time_iso_8601": "2019-07-21T08:54:36.182477Z", "url": "https://files.pythonhosted.org/packages/5e/39/d30abb1e0c61c34fe2e52f516326961bb9472ccffbb1e2380ba93dac9407/eigensheep-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfbb3d99149f33e4f45cfe43da8e9d1e", "sha256": "bd989337b674a58794505beddec0e11c5bd6da9496bcdd43bba02ccbff2be8c5"}, "downloads": -1, "filename": "eigensheep-0.0.2.tar.gz", "has_sig": false, "md5_digest": "bfbb3d99149f33e4f45cfe43da8e9d1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12493, "upload_time": "2019-07-21T08:54:37", "upload_time_iso_8601": "2019-07-21T08:54:37.693864Z", "url": "https://files.pythonhosted.org/packages/b2/49/9682d8ba0f9dc19d720dfd9c53ce916f470c3cd8404ccd8dbc90a97bdf99/eigensheep-0.0.2.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "897922ee47d7d942956729e1b95e9ac1", "sha256": "992d2b34756650f300c57fa5e89b9231f20b5cc3836701e2d4d178df7a073d63"}, "downloads": -1, "filename": "eigensheep-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "897922ee47d7d942956729e1b95e9ac1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17428, "upload_time": "2019-07-23T08:36:23", "upload_time_iso_8601": "2019-07-23T08:36:23.332634Z", "url": "https://files.pythonhosted.org/packages/3b/72/5f2c7d1278667eba82292a8c1852c4b90bf785e24cf31df34ec2f37afd74/eigensheep-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbd082e539a23624aeac69ca71ffd2bf", "sha256": "586d0a1e0bed71fd0ff76aadfe38d66e5356bf24983ce5cda5233c7444a832f4"}, "downloads": -1, "filename": "eigensheep-0.9.0.tar.gz", "has_sig": false, "md5_digest": "cbd082e539a23624aeac69ca71ffd2bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16524, "upload_time": "2019-07-23T08:36:25", "upload_time_iso_8601": "2019-07-23T08:36:25.133708Z", "url": "https://files.pythonhosted.org/packages/22/c0/dc097e8f4850a5a06883a89c8fcb22aaef24ded5bee79fd54702550fdc1a/eigensheep-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "7707875132edc4ff30997e5d29f9c0b9", "sha256": "697eae83b5271deab81a961a50ea0abdc2ad8cc2dfbe44f7e5ed007deeb9c484"}, "downloads": -1, "filename": "eigensheep-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7707875132edc4ff30997e5d29f9c0b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19126, "upload_time": "2019-07-24T00:30:38", "upload_time_iso_8601": "2019-07-24T00:30:38.892298Z", "url": "https://files.pythonhosted.org/packages/2e/89/58e5412b7759f84c22d4e527c19aec225f74b14e8b75a086bdafbc0ac8a5/eigensheep-0.9.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1450b99e6e44eee0d20c3ef7f289820a", "sha256": "d8544a655be1b5759b36a363761ca27302e33f8acd5769a6f0d9e4511a8eb28d"}, "downloads": -1, "filename": "eigensheep-0.9.1.tar.gz", "has_sig": false, "md5_digest": "1450b99e6e44eee0d20c3ef7f289820a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18416, "upload_time": "2019-07-24T00:30:40", "upload_time_iso_8601": "2019-07-24T00:30:40.502738Z", "url": "https://files.pythonhosted.org/packages/3c/94/72b1d6049201cf3a0e3ab4c8fc9f129e9f33f96743c09b9afcc6fffb4441/eigensheep-0.9.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "8684a9e70c2e32423298f8c451c0df2d", "sha256": "a728a9ca7f67b4849f7fcb82bd2d800972594b03c71675d84b50594211ab32d8"}, "downloads": -1, "filename": "eigensheep-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8684a9e70c2e32423298f8c451c0df2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19826, "upload_time": "2019-07-24T18:17:25", "upload_time_iso_8601": "2019-07-24T18:17:25.441916Z", "url": "https://files.pythonhosted.org/packages/c8/f5/30f02cc4d2b80a30e93eb9f6b065f8263564d543b5e4b73ae592fffadcd1/eigensheep-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85b36f24850dee02bc07bf4b4d238e24", "sha256": "02889dad4a354b5a1e1a9bb3125049d19fc392faa7f2da456c7cb2ac4413b7ca"}, "downloads": -1, "filename": "eigensheep-1.0.0.tar.gz", "has_sig": false, "md5_digest": "85b36f24850dee02bc07bf4b4d238e24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19793, "upload_time": "2019-07-24T18:17:27", "upload_time_iso_8601": "2019-07-24T18:17:27.067117Z", "url": "https://files.pythonhosted.org/packages/69/97/2f82e97cc406c663e51299274511d6891bd5816db64dc0416c39d91d1222/eigensheep-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8684a9e70c2e32423298f8c451c0df2d", "sha256": "a728a9ca7f67b4849f7fcb82bd2d800972594b03c71675d84b50594211ab32d8"}, "downloads": -1, "filename": "eigensheep-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8684a9e70c2e32423298f8c451c0df2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19826, "upload_time": "2019-07-24T18:17:25", "upload_time_iso_8601": "2019-07-24T18:17:25.441916Z", "url": "https://files.pythonhosted.org/packages/c8/f5/30f02cc4d2b80a30e93eb9f6b065f8263564d543b5e4b73ae592fffadcd1/eigensheep-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85b36f24850dee02bc07bf4b4d238e24", "sha256": "02889dad4a354b5a1e1a9bb3125049d19fc392faa7f2da456c7cb2ac4413b7ca"}, "downloads": -1, "filename": "eigensheep-1.0.0.tar.gz", "has_sig": false, "md5_digest": "85b36f24850dee02bc07bf4b4d238e24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19793, "upload_time": "2019-07-24T18:17:27", "upload_time_iso_8601": "2019-07-24T18:17:27.067117Z", "url": "https://files.pythonhosted.org/packages/69/97/2f82e97cc406c663e51299274511d6891bd5816db64dc0416c39d91d1222/eigensheep-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:14 2020"}