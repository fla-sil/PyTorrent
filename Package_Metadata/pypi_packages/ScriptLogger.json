{"info": {"author": "FourOhFour", "author_email": "404.fourohfour@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Software Development :: Debuggers", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Note: Versions before 1.0.3 are likely to be broken or not contain code\r\n# because I was still learning about packages and stuff, and messed up a few attempts.\r\n\r\n# Note: This README is saved as a txt file but could be run as\r\n# python code if it would help you learn about the package.\r\n\r\nfrom Logger import *\r\nfrom enum import Enum\r\n\r\n### Documentation - Logger ###\r\n\r\n# Create a new logger\r\n#  The first argument, False:\r\n#  This specifies if new logs should be automatically printed\r\n#\r\n#  The second argument, \"LOG START\"\r\n#  This is the header; the first line to be printed to the log\r\n#\r\n#  The third optional argument (not shown here)\r\n#  This specifies how the time is rendered by the logger\r\n#  This should be a string, and can contain the following\r\n#  %y - Year; %m - Month; %d - Day;\r\n#  %H - Hour; %M - Minute; %S - Second;\r\n\r\nlogger = Logger(False, \"LOG START\")\r\n\r\n# Add a log to the logger\r\n#  The arguments specify the type of log and the text to be logged\r\n#  More Log Types can be added in a new Enum.\r\n\r\nlogger.log(LogType.INFO, \"Command Parsed\")\r\n\r\n\r\n## Main Methods\r\n\r\n# This prints all new logs and moves the pointer forward to the current one\r\n#  New refers to any logs since the last time the logs were read\r\n#  The position of New in the list is held by a pointer variable\r\n#  The position of the pointer is not changed by autoprint\r\n\r\nlogger.printNew()\r\n\r\n# This method prints everything regardless of the pointer position\r\n\r\nlogger.printAll()\r\n\r\n\r\n## Pointer Methods\r\n\r\n# Sets Pointer to 0 - the start of the log\r\nlogger.setPointerToStart()\r\n\r\n# Sets the Pointer to the end of the log\r\nlogger.setPointerToEnd()\r\n\r\n# Gets the Pointer value\r\nlogger.getPointer()\r\n\r\n# Sets the Pointer value\r\n#  If the argument is < 0 it becomes zero\r\n#  If the argument is > log length it becomes log length\r\nlogger.setPointer(3)\r\n\r\n# Adds to the Pointer\r\n#  Prevents Illegal Values\r\nlogger.incrementPointer() # Adds 1 by default\r\nlogger.incrementPointer(3)# Optional Argument\r\n\r\n# Takes from the Pointer\r\n#  Prevents Illegal Values\r\nlogger.decrementPointer() # Takes 1 by default\r\nlogger.decrementPointer(3)# Optional Argument\r\n\r\n\r\n## Misc. Methods\r\n\r\n# Gets new values and returns as list\r\n#  Moves Pointer forward\r\nlogger.getNew()\r\n\r\n# Gets all values and returns as list\r\nlogger.getAll()\r\n\r\n\r\n## Use of a custom Enum for additional log values\r\n\r\n# New Enum to be used with additional values to the normal Enum\r\n#  Underscores are replaced with spaces when the message is formatted\r\nclass DisasterType(Enum):\r\n    OH_CRAP = 0\r\n    OVERHEATING_CORE = 1\r\n\r\n# Create a log with the new Enum Type as an argument\r\nlogger.log(DisasterType.OH_CRAP, \"Critical Error: Shutting Down Reactor Core\")\r\n\r\n\r\n## Final Print\r\n\r\nprint(\"\\n All Logs added \\n\")\r\n\r\n# Printing all the logs\r\nlogger.printAll()", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fourohfour/ScriptLogger", "keywords": "", "license": "UNKNOWN", "maintainer": "", "maintainer_email": "", "name": "ScriptLogger", "package_url": "https://pypi.org/project/ScriptLogger/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ScriptLogger/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/fourohfour/ScriptLogger"}, "release_url": "https://pypi.org/project/ScriptLogger/1.0.3/", "requires_dist": null, "requires_python": null, "summary": "A simple tool that helps with logging info during the process of running a script.", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Note: Versions before 1.0.3 are likely to be broken or not contain code\n<br># because I was still learning about packages and stuff, and messed up a few attempts.\n<br>\n<br># Note: This README is saved as a txt file but could be run as\n<br># python code if it would help you learn about the package.\n<br>\n<br>from Logger import *\n<br>from enum import Enum\n<br>\n<br>### Documentation - Logger ###\n<br>\n<br># Create a new logger\n<br>#  The first argument, False:\n<br>#  This specifies if new logs should be automatically printed\n<br>#\n<br>#  The second argument, \"LOG START\"\n<br>#  This is the header; the first line to be printed to the log\n<br>#\n<br>#  The third optional argument (not shown here)\n<br>#  This specifies how the time is rendered by the logger\n<br>#  This should be a string, and can contain the following\n<br>#  %y - Year; %m - Month; %d - Day;\n<br>#  %H - Hour; %M - Minute; %S - Second;\n<br>\n<br>logger = Logger(False, \"LOG START\")\n<br>\n<br># Add a log to the logger\n<br>#  The arguments specify the type of log and the text to be logged\n<br>#  More Log Types can be added in a new Enum.\n<br>\n<br>logger.log(LogType.INFO, \"Command Parsed\")\n<br>\n<br>\n<br>## Main Methods\n<br>\n<br># This prints all new logs and moves the pointer forward to the current one\n<br>#  New refers to any logs since the last time the logs were read\n<br>#  The position of New in the list is held by a pointer variable\n<br>#  The position of the pointer is not changed by autoprint\n<br>\n<br>logger.printNew()\n<br>\n<br># This method prints everything regardless of the pointer position\n<br>\n<br>logger.printAll()\n<br>\n<br>\n<br>## Pointer Methods\n<br>\n<br># Sets Pointer to 0 - the start of the log\n<br>logger.setPointerToStart()\n<br>\n<br># Sets the Pointer to the end of the log\n<br>logger.setPointerToEnd()\n<br>\n<br># Gets the Pointer value\n<br>logger.getPointer()\n<br>\n<br># Sets the Pointer value\n<br>#  If the argument is &lt; 0 it becomes zero\n<br>#  If the argument is &gt; log length it becomes log length\n<br>logger.setPointer(3)\n<br>\n<br># Adds to the Pointer\n<br>#  Prevents Illegal Values\n<br>logger.incrementPointer() # Adds 1 by default\n<br>logger.incrementPointer(3)# Optional Argument\n<br>\n<br># Takes from the Pointer\n<br>#  Prevents Illegal Values\n<br>logger.decrementPointer() # Takes 1 by default\n<br>logger.decrementPointer(3)# Optional Argument\n<br>\n<br>\n<br>## Misc. Methods\n<br>\n<br># Gets new values and returns as list\n<br>#  Moves Pointer forward\n<br>logger.getNew()\n<br>\n<br># Gets all values and returns as list\n<br>logger.getAll()\n<br>\n<br>\n<br>## Use of a custom Enum for additional log values\n<br>\n<br># New Enum to be used with additional values to the normal Enum\n<br>#  Underscores are replaced with spaces when the message is formatted\n<br>class DisasterType(Enum):\n<br>    OH_CRAP = 0\n<br>    OVERHEATING_CORE = 1\n<br>\n<br># Create a log with the new Enum Type as an argument\n<br>logger.log(DisasterType.OH_CRAP, \"Critical Error: Shutting Down Reactor Core\")\n<br>\n<br>\n<br>## Final Print\n<br>\n<br>print(\"\\n All Logs added \\n\")\n<br>\n<br># Printing all the logs\n<br>logger.printAll()\n          </div>"}, "last_serial": 1286824, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "4c5ec10f2a4242dd068fe5f312b0c49f", "sha256": "926c83cf7fcd854454047464069cee5f4e228837a9189570b0d5a8309a5162d6"}, "downloads": -1, "filename": "ScriptLogger-1.0.win-amd64.exe", "has_sig": false, "md5_digest": "4c5ec10f2a4242dd068fe5f312b0c49f", "packagetype": "bdist_wininst", "python_version": "3.4", "requires_python": null, "size": 224205, "upload_time": "2014-10-29T09:17:08", "upload_time_iso_8601": "2014-10-29T09:17:08.069496Z", "url": "https://files.pythonhosted.org/packages/a1/ba/3d0b1c78e16b96e5f781d8af2672e38e2c80662606abc89b0e81147bea69/ScriptLogger-1.0.win-amd64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "7eeb57cb8b0d0d401049b7786644e0ea", "sha256": "475c09d61495aee60276814d87994ecae05ad64a917d6f713bd7851bb91e7c9f"}, "downloads": -1, "filename": "ScriptLogger-1.0.zip", "has_sig": false, "md5_digest": "7eeb57cb8b0d0d401049b7786644e0ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3024, "upload_time": "2014-10-29T09:16:44", "upload_time_iso_8601": "2014-10-29T09:16:44.616718Z", "url": "https://files.pythonhosted.org/packages/06/37/97f1abc40507816b67aa5ebe717e4e67cdb3104451aea3d270afc1a5405e/ScriptLogger-1.0.zip", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "d7a6b50cdc5036de0a41220814dfea70", "sha256": "3d50f5b6f3edf3ec528d495a7d8b67f8ba38c5fef0a5272d270f22b44adf3889"}, "downloads": -1, "filename": "ScriptLogger-1.0.1.win-amd64.exe", "has_sig": false, "md5_digest": "d7a6b50cdc5036de0a41220814dfea70", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 224215, "upload_time": "2014-10-29T09:35:41", "upload_time_iso_8601": "2014-10-29T09:35:41.611321Z", "url": "https://files.pythonhosted.org/packages/46/02/ba58556896d87c9bf682db7abbe24e1ba18a36769d57dafebf4793bb5e37/ScriptLogger-1.0.1.win-amd64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "53adaaf943655260a69c8e9d38731af0", "sha256": "9376d072b89b78f2722f93ebb66cfc0039d5798e192565884589e72804cb96be"}, "downloads": -1, "filename": "ScriptLogger-1.0.1.zip", "has_sig": false, "md5_digest": "53adaaf943655260a69c8e9d38731af0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3041, "upload_time": "2014-10-29T09:35:38", "upload_time_iso_8601": "2014-10-29T09:35:38.839166Z", "url": "https://files.pythonhosted.org/packages/0e/40/ca75890e6e167247a6fc050e5ab9e48d45223d0c57a4b496b45dfc30f3c0/ScriptLogger-1.0.1.zip", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "eea707d53bdcf7ccdee0ec63586e77b0", "sha256": "dcdbac8f27b640c97576786137a14f9f126a21354533034606e83195920ae1ff"}, "downloads": -1, "filename": "ScriptLogger-1.0.2.win-amd64.exe", "has_sig": false, "md5_digest": "eea707d53bdcf7ccdee0ec63586e77b0", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 224216, "upload_time": "2014-10-29T09:44:12", "upload_time_iso_8601": "2014-10-29T09:44:12.307722Z", "url": "https://files.pythonhosted.org/packages/ac/18/d3174ca1c8b940cfaa4243cd679e705937a3ed872fe04736ba5efbf6a7fc/ScriptLogger-1.0.2.win-amd64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "c731bdd652f3a5e2f305e2947b86ebc2", "sha256": "76cb65ba2044a39204d041ef44cff0cddcded5587af040d719fc1f47f02be021"}, "downloads": -1, "filename": "ScriptLogger-1.0.2.zip", "has_sig": false, "md5_digest": "c731bdd652f3a5e2f305e2947b86ebc2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1289, "upload_time": "2014-10-29T09:44:09", "upload_time_iso_8601": "2014-10-29T09:44:09.752144Z", "url": "https://files.pythonhosted.org/packages/c7/0e/32cca176935597dcf8c7d0f92849eb1018b07b7e5e1868611156ab0611c3/ScriptLogger-1.0.2.zip", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "6309cf8a8c6850ce6c5788e2f07b3d19", "sha256": "619cc01b4630579948d5a2d583f179f60bb5c56f54b5b0a5aae9bec83088c8ab"}, "downloads": -1, "filename": "ScriptLogger-1.0.3.win-amd64.exe", "has_sig": false, "md5_digest": "6309cf8a8c6850ce6c5788e2f07b3d19", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 224217, "upload_time": "2014-10-29T09:45:29", "upload_time_iso_8601": "2014-10-29T09:45:29.169084Z", "url": "https://files.pythonhosted.org/packages/08/65/c4a8bf5a42fd6add03573e4b192ff59d1bff2011e7bb9f9b2abcfec93532/ScriptLogger-1.0.3.win-amd64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "19017b34dc15717e410272b1449aa2f5", "sha256": "f3dc66e86ba8f34708acdcf6b9af377d489025172090e080229be7fc420c6e1b"}, "downloads": -1, "filename": "ScriptLogger-1.0.3.zip", "has_sig": false, "md5_digest": "19017b34dc15717e410272b1449aa2f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3887, "upload_time": "2014-10-29T09:45:26", "upload_time_iso_8601": "2014-10-29T09:45:26.761919Z", "url": "https://files.pythonhosted.org/packages/a0/10/a0b86da6fcfaab111a15d70840d5e97d09bef0c9d5f4097e3903639f423f/ScriptLogger-1.0.3.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6309cf8a8c6850ce6c5788e2f07b3d19", "sha256": "619cc01b4630579948d5a2d583f179f60bb5c56f54b5b0a5aae9bec83088c8ab"}, "downloads": -1, "filename": "ScriptLogger-1.0.3.win-amd64.exe", "has_sig": false, "md5_digest": "6309cf8a8c6850ce6c5788e2f07b3d19", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 224217, "upload_time": "2014-10-29T09:45:29", "upload_time_iso_8601": "2014-10-29T09:45:29.169084Z", "url": "https://files.pythonhosted.org/packages/08/65/c4a8bf5a42fd6add03573e4b192ff59d1bff2011e7bb9f9b2abcfec93532/ScriptLogger-1.0.3.win-amd64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "19017b34dc15717e410272b1449aa2f5", "sha256": "f3dc66e86ba8f34708acdcf6b9af377d489025172090e080229be7fc420c6e1b"}, "downloads": -1, "filename": "ScriptLogger-1.0.3.zip", "has_sig": false, "md5_digest": "19017b34dc15717e410272b1449aa2f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3887, "upload_time": "2014-10-29T09:45:26", "upload_time_iso_8601": "2014-10-29T09:45:26.761919Z", "url": "https://files.pythonhosted.org/packages/a0/10/a0b86da6fcfaab111a15d70840d5e97d09bef0c9d5f4097e3903639f423f/ScriptLogger-1.0.3.zip", "yanked": false}], "timestamp": "Fri May  8 02:56:31 2020"}