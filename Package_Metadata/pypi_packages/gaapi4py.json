{"info": {"author": "Oleh Omelchenko", "author_email": "ptrvtch@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# gaapi4py\n\nGoogle Analytics Reporting API v4 for Python 3\n\n## Prerequisites\n\nTo use this library, you need to have a project in Google Cloud Platform and a service account key that has access to Google Analytics account you want to get data from.\n\n## Quick Start\n\n```python\nfrom gaapi4py import GAClient\n# if GOOGLE_APPLICATION_CREDENTIALS is set:\nc = GAClient() \n# or you may specify keyfile path:\nc = GAClient(json_keyfile=\"path/to/keyfile.json\")\n\n\nrequest_body = {\n    'view_id': '123456789',\n    'start_date': '2019-01-01',\n    'end_date': '2019-01-31',\n    'dimensions': {\n        'ga:sourceMedium',\n        'ga:date'\n    },\n    'metrics': {\n        'ga:sessions'\n    },\n    'filter': 'ga:sourceMedium==google / organic' # optional filter clause\n}\n\nresponse = c.get_all_data(request_body)\n\nresponse['info'] # sampling and \"golden\" metadata\n\nresponse['data'] # Pandas dataframe that contains data from GA\n```\n\nIf you want to make many requests to a speficic view or with specific dateranges, you can set date ranges for all future requests:\n\n```python\n# Pass arguments to class init\nc = GAClient(view_id=\"123456789\", start_date=\"2019-09-01\", end_date=\"2019-09-07\") \n# or use methods to overwrite viewID or dateranges\nc.set_view_id('123456789')\nc.set_dateranges('2019-01-01', '2019-01-31')\n\nrequest_body_1 = {\n    'dimensions': {\n        'ga:sourceMedium',\n        'ga:date'\n    },\n    'metrics': {\n        'ga:sessions'\n    }\n}\n\nrequest_body_2 = {\n    'dimensions': {\n        'ga:deviceCategory',\n        'ga:date'\n    },\n    'metrics': {\n        'ga:sessions'\n    }\n}\n\nresponse_1 = c.get_all_data(request_body_1)\nresponse_2 = c.get_all_data(request_body_2)\n```\n\n## Avoid sampling by taking data day-by-day\n\n>Important! Google Analytics reporting API has a limit of maximum 100 requests per 100 seconds. If you want to iterate over large period of days, you might consider adding `time.sleep(1)` at the end of the loop to avoid reaching this limit.\n\n```python\nfrom datetime import date, timedelta\nfrom time import sleep\n\nimport pandas as pd\nfrom gaapi4py import GAClient\n\nc = GAClient(view_id='123456789')\n\nstart_date = date(2019,7,1)\nend_date = date(2019,7,14)\n\ndf_list = []\niter_date = start_date\nwhile iter_date <= end_date:\n    c.set_dateranges(iter_date, iter_date)\n    response = c.get_all_data({\n        'dimensions': {\n            'ga:sourceMedium',\n            'ga:deviceCategory'\n        },\n        'metrics': {\n            'ga:sessions'\n        }\n    })\n    df = response['data']\n    df['date'] = iter_date\n    df_list.append(response['data'])\n    iter_date = iter_date + timedelta(days=1)\n    time.sleep(1)\n\nall_data = pd.concat(df_list, ignore_index=True)\n\n```\n\n## Avoid \"maximum 7 dimensions\" restriction\n\nIf you store sessionId and/or hitId as custom dimensions ([Example implementation on Simo Ahava's blog](https://www.simoahava.com/analytics/improve-data-collection-with-four-custom-dimensions/)), you can circumvent restriction on maximum number of dimensions and metrics in one report. Example below:\n\n> If sampling starts to appear, try to break the set of dimensions into smaller parts and run queries on them.\n\n```python\none_day = date(2019,7,1)\nc.set_dateranges(one_day, one_day)\n\nSESSION_ID_CD_INDEX = '2'\nHIT_ID_CD_INDEX = '5'\n\nsession_id = 'dimension' + SESSION_ID_CD_INDEX\nhit_id = 'dimension' + HIT_ID_CD_INDEX\n\n\n#Get session scope data\nresponse_1 = c.get_all_data({\n    'dimensions': {\n        'ga:' + session_id,\n        'ga:sourceMedium',\n        'ga:campaign',\n        'ga:keyword',\n        'ga:adContent',\n        'ga:userType',\n        'ga:deviceCategory'\n    },\n    'metrics': {\n        'ga:sessions'\n    }\n})\n\nresponse2 = c.get_all_data({\n    'dimensions': {\n        'ga:' + session_id,\n        'ga:landingPagePath',\n        'ga:secondPagePath',\n        'ga:exitPagePath',\n        'ga:pageDepth',\n        'ga:daysSinceLastSession',\n        'ga:sessionCount'\n    },\n    'metrics': {\n        'ga:hits',\n        'ga:totalEvents',\n        'ga:bounces',\n        'ga:sessionDuration'\n    }\n})\n\nall_data = response_1['data'].merge(response2['data'], on=session_id, how='left')\n\nall_data.rename(index=str, columns={\n    session_id: 'session_id'\n}, inplace=True)\n\nall_data.head()\n\n# Get hit scope data\nhits_response_1 = c.get_all_data({\n    'dimensions': {\n        'ga:' + session_id,\n        'ga:' + hit_id,\n        'ga:pagePath',\n        'ga:previousPagePath',\n        'ga:dateHourMinute'\n    },\n    'metrics': {\n        'ga:hits',\n        'ga:totalEvents',\n        'ga:pageviews'\n    }\n})\n\nhits_response_2 = c.get_all_data({\n    'dimensions': {\n        'ga:' + session_id,\n        'ga:' + hit_id,\n        'ga:eventCategory',\n        'ga:eventAction',\n        'ga:eventLabel'\n    },\n    'metrics': {\n        'ga:totalEvents'\n    }\n})\n\nall_hits_data = hits_response_1['data'].merge(hits_response_2['data'],\n                                              on=[session_id, hit_id],\n                                              how='left')\nall_hits_data.rename(index=str, columns={\n    session_id: 'session_id',\n    hit_id: 'hit_id'\n}, inplace=True)\n\nall_hits_data.head()\n\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/gaapi4py/gaapi4py", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gaapi4py", "package_url": "https://pypi.org/project/gaapi4py/", "platform": "", "project_url": "https://pypi.org/project/gaapi4py/", "project_urls": {"Homepage": "http://github.com/gaapi4py/gaapi4py"}, "release_url": "https://pypi.org/project/gaapi4py/1.2.0/", "requires_dist": ["pandas", "oauth2client", "google-api-python-client"], "requires_python": "", "summary": "Google Analytics Reporting API v4 for Python 3", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>gaapi4py</h1>\n<p>Google Analytics Reporting API v4 for Python 3</p>\n<h2>Prerequisites</h2>\n<p>To use this library, you need to have a project in Google Cloud Platform and a service account key that has access to Google Analytics account you want to get data from.</p>\n<h2>Quick Start</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gaapi4py</span> <span class=\"kn\">import</span> <span class=\"n\">GAClient</span>\n<span class=\"c1\"># if GOOGLE_APPLICATION_CREDENTIALS is set:</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">GAClient</span><span class=\"p\">()</span> \n<span class=\"c1\"># or you may specify keyfile path:</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">GAClient</span><span class=\"p\">(</span><span class=\"n\">json_keyfile</span><span class=\"o\">=</span><span class=\"s2\">\"path/to/keyfile.json\"</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">request_body</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'view_id'</span><span class=\"p\">:</span> <span class=\"s1\">'123456789'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'start_date'</span><span class=\"p\">:</span> <span class=\"s1\">'2019-01-01'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'end_date'</span><span class=\"p\">:</span> <span class=\"s1\">'2019-01-31'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'dimensions'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ga:sourceMedium'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:date'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'metrics'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ga:sessions'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'filter'</span><span class=\"p\">:</span> <span class=\"s1\">'ga:sourceMedium==google / organic'</span> <span class=\"c1\"># optional filter clause</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get_all_data</span><span class=\"p\">(</span><span class=\"n\">request_body</span><span class=\"p\">)</span>\n\n<span class=\"n\">response</span><span class=\"p\">[</span><span class=\"s1\">'info'</span><span class=\"p\">]</span> <span class=\"c1\"># sampling and \"golden\" metadata</span>\n\n<span class=\"n\">response</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">]</span> <span class=\"c1\"># Pandas dataframe that contains data from GA</span>\n</pre>\n<p>If you want to make many requests to a speficic view or with specific dateranges, you can set date ranges for all future requests:</p>\n<pre><span class=\"c1\"># Pass arguments to class init</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">GAClient</span><span class=\"p\">(</span><span class=\"n\">view_id</span><span class=\"o\">=</span><span class=\"s2\">\"123456789\"</span><span class=\"p\">,</span> <span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-09-01\"</span><span class=\"p\">,</span> <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-09-07\"</span><span class=\"p\">)</span> \n<span class=\"c1\"># or use methods to overwrite viewID or dateranges</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">set_view_id</span><span class=\"p\">(</span><span class=\"s1\">'123456789'</span><span class=\"p\">)</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">set_dateranges</span><span class=\"p\">(</span><span class=\"s1\">'2019-01-01'</span><span class=\"p\">,</span> <span class=\"s1\">'2019-01-31'</span><span class=\"p\">)</span>\n\n<span class=\"n\">request_body_1</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'dimensions'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ga:sourceMedium'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:date'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'metrics'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ga:sessions'</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">request_body_2</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'dimensions'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ga:deviceCategory'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:date'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'metrics'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ga:sessions'</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">response_1</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get_all_data</span><span class=\"p\">(</span><span class=\"n\">request_body_1</span><span class=\"p\">)</span>\n<span class=\"n\">response_2</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get_all_data</span><span class=\"p\">(</span><span class=\"n\">request_body_2</span><span class=\"p\">)</span>\n</pre>\n<h2>Avoid sampling by taking data day-by-day</h2>\n<blockquote>\n<p>Important! Google Analytics reporting API has a limit of maximum 100 requests per 100 seconds. If you want to iterate over large period of days, you might consider adding <code>time.sleep(1)</code> at the end of the loop to avoid reaching this limit.</p>\n</blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">date</span><span class=\"p\">,</span> <span class=\"n\">timedelta</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gaapi4py</span> <span class=\"kn\">import</span> <span class=\"n\">GAClient</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">GAClient</span><span class=\"p\">(</span><span class=\"n\">view_id</span><span class=\"o\">=</span><span class=\"s1\">'123456789'</span><span class=\"p\">)</span>\n\n<span class=\"n\">start_date</span> <span class=\"o\">=</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">end_date</span> <span class=\"o\">=</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">14</span><span class=\"p\">)</span>\n\n<span class=\"n\">df_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">iter_date</span> <span class=\"o\">=</span> <span class=\"n\">start_date</span>\n<span class=\"k\">while</span> <span class=\"n\">iter_date</span> <span class=\"o\">&lt;=</span> <span class=\"n\">end_date</span><span class=\"p\">:</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">set_dateranges</span><span class=\"p\">(</span><span class=\"n\">iter_date</span><span class=\"p\">,</span> <span class=\"n\">iter_date</span><span class=\"p\">)</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get_all_data</span><span class=\"p\">({</span>\n        <span class=\"s1\">'dimensions'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'ga:sourceMedium'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'ga:deviceCategory'</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'metrics'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'ga:sessions'</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">})</span>\n    <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">]</span>\n    <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'date'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">iter_date</span>\n    <span class=\"n\">df_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">])</span>\n    <span class=\"n\">iter_date</span> <span class=\"o\">=</span> <span class=\"n\">iter_date</span> <span class=\"o\">+</span> <span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">all_data</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">concat</span><span class=\"p\">(</span><span class=\"n\">df_list</span><span class=\"p\">,</span> <span class=\"n\">ignore_index</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h2>Avoid \"maximum 7 dimensions\" restriction</h2>\n<p>If you store sessionId and/or hitId as custom dimensions (<a href=\"https://www.simoahava.com/analytics/improve-data-collection-with-four-custom-dimensions/\" rel=\"nofollow\">Example implementation on Simo Ahava's blog</a>), you can circumvent restriction on maximum number of dimensions and metrics in one report. Example below:</p>\n<blockquote>\n<p>If sampling starts to appear, try to break the set of dimensions into smaller parts and run queries on them.</p>\n</blockquote>\n<pre><span class=\"n\">one_day</span> <span class=\"o\">=</span> <span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">set_dateranges</span><span class=\"p\">(</span><span class=\"n\">one_day</span><span class=\"p\">,</span> <span class=\"n\">one_day</span><span class=\"p\">)</span>\n\n<span class=\"n\">SESSION_ID_CD_INDEX</span> <span class=\"o\">=</span> <span class=\"s1\">'2'</span>\n<span class=\"n\">HIT_ID_CD_INDEX</span> <span class=\"o\">=</span> <span class=\"s1\">'5'</span>\n\n<span class=\"n\">session_id</span> <span class=\"o\">=</span> <span class=\"s1\">'dimension'</span> <span class=\"o\">+</span> <span class=\"n\">SESSION_ID_CD_INDEX</span>\n<span class=\"n\">hit_id</span> <span class=\"o\">=</span> <span class=\"s1\">'dimension'</span> <span class=\"o\">+</span> <span class=\"n\">HIT_ID_CD_INDEX</span>\n\n\n<span class=\"c1\">#Get session scope data</span>\n<span class=\"n\">response_1</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get_all_data</span><span class=\"p\">({</span>\n    <span class=\"s1\">'dimensions'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ga:'</span> <span class=\"o\">+</span> <span class=\"n\">session_id</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:sourceMedium'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:campaign'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:keyword'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:adContent'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:userType'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:deviceCategory'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'metrics'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ga:sessions'</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n\n<span class=\"n\">response2</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get_all_data</span><span class=\"p\">({</span>\n    <span class=\"s1\">'dimensions'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ga:'</span> <span class=\"o\">+</span> <span class=\"n\">session_id</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:landingPagePath'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:secondPagePath'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:exitPagePath'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:pageDepth'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:daysSinceLastSession'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:sessionCount'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'metrics'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ga:hits'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:totalEvents'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:bounces'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:sessionDuration'</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n\n<span class=\"n\">all_data</span> <span class=\"o\">=</span> <span class=\"n\">response_1</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">merge</span><span class=\"p\">(</span><span class=\"n\">response2</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">],</span> <span class=\"n\">on</span><span class=\"o\">=</span><span class=\"n\">session_id</span><span class=\"p\">,</span> <span class=\"n\">how</span><span class=\"o\">=</span><span class=\"s1\">'left'</span><span class=\"p\">)</span>\n\n<span class=\"n\">all_data</span><span class=\"o\">.</span><span class=\"n\">rename</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"n\">session_id</span><span class=\"p\">:</span> <span class=\"s1\">'session_id'</span>\n<span class=\"p\">},</span> <span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">all_data</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Get hit scope data</span>\n<span class=\"n\">hits_response_1</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get_all_data</span><span class=\"p\">({</span>\n    <span class=\"s1\">'dimensions'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ga:'</span> <span class=\"o\">+</span> <span class=\"n\">session_id</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:'</span> <span class=\"o\">+</span> <span class=\"n\">hit_id</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:pagePath'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:previousPagePath'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:dateHourMinute'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'metrics'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ga:hits'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:totalEvents'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:pageviews'</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n\n<span class=\"n\">hits_response_2</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get_all_data</span><span class=\"p\">({</span>\n    <span class=\"s1\">'dimensions'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ga:'</span> <span class=\"o\">+</span> <span class=\"n\">session_id</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:'</span> <span class=\"o\">+</span> <span class=\"n\">hit_id</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:eventCategory'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:eventAction'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ga:eventLabel'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'metrics'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ga:totalEvents'</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n\n<span class=\"n\">all_hits_data</span> <span class=\"o\">=</span> <span class=\"n\">hits_response_1</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">merge</span><span class=\"p\">(</span><span class=\"n\">hits_response_2</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">],</span>\n                                              <span class=\"n\">on</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">session_id</span><span class=\"p\">,</span> <span class=\"n\">hit_id</span><span class=\"p\">],</span>\n                                              <span class=\"n\">how</span><span class=\"o\">=</span><span class=\"s1\">'left'</span><span class=\"p\">)</span>\n<span class=\"n\">all_hits_data</span><span class=\"o\">.</span><span class=\"n\">rename</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"n\">session_id</span><span class=\"p\">:</span> <span class=\"s1\">'session_id'</span><span class=\"p\">,</span>\n    <span class=\"n\">hit_id</span><span class=\"p\">:</span> <span class=\"s1\">'hit_id'</span>\n<span class=\"p\">},</span> <span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">all_hits_data</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 5809844, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "52edf7935eb732ed9aca5430bbf47389", "sha256": "665475fc26e3fb8b86f5386eb8475d0408a8a05691c2bcc25b50f4f3e21d5b5e"}, "downloads": -1, "filename": "gaapi4py-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "52edf7935eb732ed9aca5430bbf47389", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5849, "upload_time": "2019-08-03T11:51:43", "upload_time_iso_8601": "2019-08-03T11:51:43.275290Z", "url": "https://files.pythonhosted.org/packages/5d/ef/a0999af4d9cda06d53d8bdce79c1b456933f0f8aa3c3c4657d2a8216a6cb/gaapi4py-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef95e47ee3f064c42c37887068b8b3b1", "sha256": "fd5d420c587cac7480f5f0f4769a8ffa555c3de4dcff87d6e3abdca9c3f59dbb"}, "downloads": -1, "filename": "gaapi4py-1.0.1.tar.gz", "has_sig": false, "md5_digest": "ef95e47ee3f064c42c37887068b8b3b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5077, "upload_time": "2019-08-03T11:51:45", "upload_time_iso_8601": "2019-08-03T11:51:45.573823Z", "url": "https://files.pythonhosted.org/packages/e9/29/3f4325aa6333ba6e146e0d5145c04398f1e861f7f322cd0844b861abd83e/gaapi4py-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "4b8ec5042e5a5d118f25c5c78d2314db", "sha256": "062ddf1cf5c50adbd2fc6028237f449481b87838e086729ccbbee3d6a5c6e7e0"}, "downloads": -1, "filename": "gaapi4py-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4b8ec5042e5a5d118f25c5c78d2314db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6100, "upload_time": "2019-08-15T10:11:31", "upload_time_iso_8601": "2019-08-15T10:11:31.034775Z", "url": "https://files.pythonhosted.org/packages/d6/a1/4e9fc9545f6b141af0a9eaebca42a10a54c4a6b28277c2045333320fa34f/gaapi4py-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60ee8362d27980a2b39b8db23ea5b6cc", "sha256": "eb7226b7152ebef5e933347c95be263864bf18be611915856055d41f2421c56b"}, "downloads": -1, "filename": "gaapi4py-1.1.0.tar.gz", "has_sig": false, "md5_digest": "60ee8362d27980a2b39b8db23ea5b6cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5152, "upload_time": "2019-08-15T10:11:32", "upload_time_iso_8601": "2019-08-15T10:11:32.597336Z", "url": "https://files.pythonhosted.org/packages/32/ca/50cb572d28795347ba54d16f1e26dab853d7ac2fd644fe15eca1b7df798f/gaapi4py-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "fa0186a133a9cbef6bd0b14899d3166f", "sha256": "ac5beacc396267462fbc1f264ff04a82db635cdf93552f9570afbfe3d8b0a578"}, "downloads": -1, "filename": "gaapi4py-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fa0186a133a9cbef6bd0b14899d3166f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6291, "upload_time": "2019-09-10T16:04:36", "upload_time_iso_8601": "2019-09-10T16:04:36.150776Z", "url": "https://files.pythonhosted.org/packages/aa/9b/7e550f4b38562df683ad3471b0bb0aa269da7be74603215e73c6d95e0b08/gaapi4py-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c146c83c3d963db1343788073f19d139", "sha256": "8b6b28584fed1f14a8de5fe24d2444a9d70bea19b4ab781dfbe1b31afbaf047c"}, "downloads": -1, "filename": "gaapi4py-1.2.0.tar.gz", "has_sig": false, "md5_digest": "c146c83c3d963db1343788073f19d139", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5385, "upload_time": "2019-09-10T16:04:37", "upload_time_iso_8601": "2019-09-10T16:04:37.541845Z", "url": "https://files.pythonhosted.org/packages/c9/78/eb5bd058aa3f2b03f5dd068efaf504e29217e7772a7b7f0beae35b7dac57/gaapi4py-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fa0186a133a9cbef6bd0b14899d3166f", "sha256": "ac5beacc396267462fbc1f264ff04a82db635cdf93552f9570afbfe3d8b0a578"}, "downloads": -1, "filename": "gaapi4py-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fa0186a133a9cbef6bd0b14899d3166f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6291, "upload_time": "2019-09-10T16:04:36", "upload_time_iso_8601": "2019-09-10T16:04:36.150776Z", "url": "https://files.pythonhosted.org/packages/aa/9b/7e550f4b38562df683ad3471b0bb0aa269da7be74603215e73c6d95e0b08/gaapi4py-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c146c83c3d963db1343788073f19d139", "sha256": "8b6b28584fed1f14a8de5fe24d2444a9d70bea19b4ab781dfbe1b31afbaf047c"}, "downloads": -1, "filename": "gaapi4py-1.2.0.tar.gz", "has_sig": false, "md5_digest": "c146c83c3d963db1343788073f19d139", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5385, "upload_time": "2019-09-10T16:04:37", "upload_time_iso_8601": "2019-09-10T16:04:37.541845Z", "url": "https://files.pythonhosted.org/packages/c9/78/eb5bd058aa3f2b03f5dd068efaf504e29217e7772a7b7f0beae35b7dac57/gaapi4py-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:24 2020"}