{"info": {"author": "Gael Pasgrimaud", "author_email": "gael@gawel.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"], "description": "==============\nrequests_proxy\n==============\n\nA WSGI Proxy using `requests <http://docs.python-requests.org/>`_.\n\n\nInstallation\n============\n\nWith pip::\n\n  $ pip install requests_proxy\n\nUsage\n=====\n\nCreate a proxy::\n\n  >>> from requests_proxy import Proxy\n  >>> proxy = Proxy(application_url)\n\nThen use it. Here is an example with WebOb but you can use it like a classic WSGI application::\n\n  >>> from webob import Request\n  >>> req = Request.blank('/form.html')\n  >>> resp = req.get_response(proxy)\n  >>> print(resp.text)\n  <html>...\n  ...</html>\n\nThe Proxy application accept some keyword arguments. Those arguments are passed to requests during the process.\nBy default ``allow_redirects`` and ``verify`` are set to ``False`` but you can change the behavior::\n\n  >>> proxy = Proxy(application_url, verify=True, allow_redirects=True, max_redirects=10)\n\nCheers\n\n\n\nChanges\n=======\n\n0.1\n---\n\nInitial public release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gawel/requests_proxy", "keywords": "wsgi proxy", "license": "Copyright 2012 Gael Pasgrimaud\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.", "maintainer": null, "maintainer_email": null, "name": "requests_proxy", "package_url": "https://pypi.org/project/requests_proxy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/requests_proxy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/gawel/requests_proxy"}, "release_url": "https://pypi.org/project/requests_proxy/0.1/", "requires_dist": null, "requires_python": null, "summary": "A WSGI Proxy using requests", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A WSGI Proxy using <a href=\"http://docs.python-requests.org/\" rel=\"nofollow\">requests</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>With pip:</p>\n<pre>$ pip install requests_proxy\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Create a proxy:</p>\n<pre>&gt;&gt;&gt; from requests_proxy import Proxy\n&gt;&gt;&gt; proxy = Proxy(application_url)\n</pre>\n<p>Then use it. Here is an example with WebOb but you can use it like a classic WSGI application:</p>\n<pre>&gt;&gt;&gt; from webob import Request\n&gt;&gt;&gt; req = Request.blank('/form.html')\n&gt;&gt;&gt; resp = req.get_response(proxy)\n&gt;&gt;&gt; print(resp.text)\n&lt;html&gt;...\n...&lt;/html&gt;\n</pre>\n<p>The Proxy application accept some keyword arguments. Those arguments are passed to requests during the process.\nBy default <tt>allow_redirects</tt> and <tt>verify</tt> are set to <tt>False</tt> but you can change the behavior:</p>\n<pre>&gt;&gt;&gt; proxy = Proxy(application_url, verify=True, allow_redirects=True, max_redirects=10)\n</pre>\n<p>Cheers</p>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1</span></h2>\n<p>Initial public release</p>\n</div>\n\n          </div>"}, "last_serial": 754525, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ab2d094cfacb34256027b02ef0de3b16", "sha256": "43868ce1deac0b490b5acceb0fa55bb4d643f18860ea07bdf55bbcedeea1b1af"}, "downloads": -1, "filename": "requests_proxy-0.1.tar.gz", "has_sig": false, "md5_digest": "ab2d094cfacb34256027b02ef0de3b16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3092, "upload_time": "2012-12-17T21:27:07", "upload_time_iso_8601": "2012-12-17T21:27:07.210273Z", "url": "https://files.pythonhosted.org/packages/c5/25/27e8dbe9cb1a5e5d9640933deeba3c159031d1656079d6f1f357a0fedb3b/requests_proxy-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ab2d094cfacb34256027b02ef0de3b16", "sha256": "43868ce1deac0b490b5acceb0fa55bb4d643f18860ea07bdf55bbcedeea1b1af"}, "downloads": -1, "filename": "requests_proxy-0.1.tar.gz", "has_sig": false, "md5_digest": "ab2d094cfacb34256027b02ef0de3b16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3092, "upload_time": "2012-12-17T21:27:07", "upload_time_iso_8601": "2012-12-17T21:27:07.210273Z", "url": "https://files.pythonhosted.org/packages/c5/25/27e8dbe9cb1a5e5d9640933deeba3c159031d1656079d6f1f357a0fedb3b/requests_proxy-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:02 2020"}