{"info": {"author": "Beto Dealmeida", "author_email": "roberto@dealmeida.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python"], "description": "==========\nnefelibata\n==========\n\nA weblog engine focusing on data ownership and persistence.\n\nHow is it different?\n====================\n\nNefelibata (Portuguese for \"one who walks on clouds\") focus on preserving your content. In order to achieve that goal, it works similarly to common static website generators, with the following design decisions:\n\n- Each post is a separate directory. The actual post is written in `Markdown <https://www.markdownguide.org/>`_, and each post can have its own images, CSS, Javascript and other files. This way each post is relatively self-contained.\n- Posts are converted into HTML, and the resulting weblog is composed of **only static files**. There are no databases, and all extra data is stored as JSON.\n- External images are downloaded when the weblog is built, and the link is altered to point to the local resource. The engine **will warn you** if the generated HTML has any external resources (CSS, for example).\n- The files are then **published** to a location using a plugin architecture (currently only S3 is supported).\n\nAll this is done with a command line utility called ``nb``.\n\nAdditionally, nefelibata recognizes that most interactions occur in social networks, like Twitter or Facebook. The engine can be configured with global or per-post **announcers**, that will post the content to social networks, so that people can comment and discuss it. When the weblog is rebuilt, the announcers will collect any replies and store them locally, so that the comments are displayed in the weblog with your post. A post can be announced to multiple social networks, and the comments will be aggregated with it.\n\nGetting started\n===============\n\nInstallation\n------------\n\nI recommend installing nefelibata using a virtual environment:\n\n.. code-block:: bash\n\n    $ virtualenv -p python3 venv\n    $ source venv/bin/activate\n    $ pip install nefelibata\n\nThis will add a program called ``nb`` to your path.\n\nIf you're impatient, you can run:\n\n.. code-block:: bash\n\n    $ nb init blog\n    $ cd blog\n    $ nb build\n    $ nb preview\n\nAnd open http://localhost:8000/ to see your weblog. Read below for details.\n\nCreating the weblog directory\n-----------------------------\n\nOnce you have installed nefelibata you should initialize a directory that will hold your content:\n\n.. code-block:: bash\n\n    $ nb init blog\n    $ ls blog\n    nefelibata.yaml  posts/  templates/\n\nHere, the file ``nefelibata.yaml`` stores the configuration for your weblog. The ```posts`` directory will contain your posts, and should have a directory called ``first``. The ``templates`` directory has the templates for generating your blog and its Atom feed. Multiple themes are supported, but there's currently only one called \"pure-blog\", based on `Pure.css <https://purecss.io/>`_.\n\nConfiguring your weblog\n-----------------------\n\nOpen the file `nefelibata.yaml`. The first part is self-explanatory:\n\n.. code-block:: yaml\n\n    title: Tao etc.\n    subtitle: Musings about the path and other things\n    author:\n        name: Beto Dealmeida\n        email: roberto@dealmeida.net\n    url: https://blog.taoetc.org/  # slashing trail is important\n    posts-to-show: 5\n    theme: pure-blog\n    language: en\n\n    # These are social icons displayed on the footer\n    social:\n        - title: Code\n          url: \"https://github.com/betodealmeida\"\n          icon: icon-github\n        - title: Facebook\n          url: \"https://www.facebook.com/beto\"\n          icon: icon-facebook\n        - title: Twitter\n          url: \"https://twitter.com/dealmeida\"\n          icon: icon-twitter\n\nThis is copied from `my weblog <https://blog.taoetc.org/>`_.\n\nThe second part defines where your weblog will be published to, and where new posts are announced:\n\n.. code-block:: yaml\n\n    publish-to: S3\n    announce-on: twitter, facebook\n\nIn this example, the static files from the weblog will be published to an S3 bucket, and new posts will be published to both Twitter and Facebook.\n\nThe S3 section looks like this:\n\n.. code-block:: yaml\n\n    S3:\n        AWS_ACCESS_KEY_ID:\n        AWS_SECRET_ACCESS_KEY:\n        bucket: blog.taoetc.org\n\n        # Nefelibata will configure the bucket as website and also set your DNS\n        # if you're using Route 53\n        configure_website: true\n        configure_route53: blog.taoetc.org.\n\nYou need to `create an S3 account <http://aws.amazon.com/s3/>`_ in order to get the AWS credentials. If you want the S3 publisher to create the bucket, configure it as a website, upload the website and configure Route 53 to point the domain name to it you need the following policy in your IAM account (replace ``blog.taoetc.org`` with your domain):\n\n.. code-block:: json\n\n    {\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [\n            {\n                \"Sid\": \"VisualEditor0\",\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                    \"s3:GetBucketWebsite\",\n                    \"s3:PutBucketWebsite\",\n                    \"route53:ChangeResourceRecordSets\",\n                    \"s3:PutBucketAcl\",\n                    \"s3:CreateBucket\"\n                ],\n                \"Resource\": [\n                    \"arn:aws:route53:::hostedzone/taoetc.org\",\n                    \"arn:aws:s3:::blog.taoetc.org\"\n                ]\n            },\n            {\n                \"Sid\": \"VisualEditor1\",\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                    \"s3:PutObject\",\n                    \"s3:GetObject\",\n                    \"s3:PutObjectAcl\"\n                ],\n                \"Resource\": \"arn:aws:s3:::blog.taoetc.org/*\"\n            },\n            {\n                \"Sid\": \"VisualEditor2\",\n                \"Effect\": \"Allow\",\n                \"Action\": \"route53:ListHostedZones\",\n                \"Resource\": \"*\"\n            }\n        ]\n    }\n\nThis will upload your weblog to an S3 bucket and run the website from it over HTTP. If you want to serve the website over HTTPS (as I do), you need to disable Route 53 (``configure_route53`` should be empty) and `configure CloudFront <https://www.freecodecamp.org/news/simple-site-hosting-with-amazon-s3-and-https-5e78017f482a/>`_.\n\nFinally, if you want to announce your posts on Twitter or Facebook you need to create custom applications on the respeective developer websites, and add the access tokens to the file `nefelibata.yaml`. The skeleton file has instructions on how to do this for each announcer. (There's also an announcer for `FAWM <https://fawm.org/>`_, but it's currently work in progress).\n\nCreating a new post\n-------------------\n\nYour skeleton blog already has a post called ``first``. You can edit that post, or create a new one with the command:\n\n.. code-block:: bash\n\n    $ nb new \"Hello, World!\"\n\n(Note that you always need to run the ``nb`` command from inside your weblog directory.)\n\nThis will create a new directory called `hello_world`, with the following structure:\n\n.. code-block:: bash\n\n    posts/hello_world/\n    posts/hello_world/index.mkd\n    posts/hello_world/img/\n    posts/hello_world/css/\n    posts/hello_world/js/\n\nIf you have the ``EDITOR`` environment set, nefelibata will automatically open your editor to edit ``index.mkd``. You can place any custom CSS, Javascript or images in the corresponding directories, or any other extra files in the ``hello_world/`` directory.\n\nYou'll notice that the ``index.mkd`` file has headers and a body. The file itself is actually stored as an email, using the `RFC 5322 format <https://tools.ietf.org/html/rfc5322.html>`_. The most important headers are:\n\n- ``subject``: this is the title of your post.\n- ``summary``: this is a one-line summary of your post.\n- ``keywords``: a comma-separated list of keywords/tags/categories.\n\nAdditionally, once the post is published a ``date`` header will be added. If the psot is announced to Twitter/Facebook/etc. a corresponding header (eg, ``facebook-url``) will also be added.\n\nIf you want to announce your post to a custom social network you can either override the default announcers by using the ``announce-on`` header, or add an extra announcer by using the ``announce-on-extra`` header.\n\nBuilding the weblog\n-------------------\n\nTo build your webblog, simply run:\n\n.. code-block:: bash\n\n    $ nb build\n\nThis will convert the Markdown files to HTML and build the weblog, with pages for archives and categories as well. Later, once posts have been announced to social networks, this command will also collect replies and store them locally.\n\nPreviewing the weblog\n---------------------\n\nTo preview your weblog, simply run:\n\n.. code-block:: bash\n\n    $ nb preview\n\nThis will run an HTTP server on port 8000. Open http://localhost:8000/ on your browser so you can preview your changes.\n\nPublishing the weblog\n---------------------\n\nFinally, you can publish your weblog with the command:\n\n.. code-block:: bash\n\n    $ nb publish\n\nThis will upload the weblog using any configured publisherd (like S3), and announce new posts to social networks.\n\nWhat's next?\n============\n\nIf you want to customize your weblog, take a look at the ``templates/`` directory inside your weblog. The templates are written in `Jinja2 <https://palletsprojects.com/p/jinja/>`_.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/betodealmeida/nefelibata/", "keywords": "", "license": "mit", "maintainer": "", "maintainer_email": "", "name": "nefelibata", "package_url": "https://pypi.org/project/nefelibata/", "platform": "any", "project_url": "https://pypi.org/project/nefelibata/", "project_urls": {"Homepage": "https://github.com/betodealmeida/nefelibata/"}, "release_url": "https://pypi.org/project/nefelibata/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "A weblog engine focusing on data ownership and persistence.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A weblog engine focusing on data ownership and persistence.</p>\n<div id=\"how-is-it-different\">\n<h2>How is it different?</h2>\n<p>Nefelibata (Portuguese for \u201cone who walks on clouds\u201d) focus on preserving your content. In order to achieve that goal, it works similarly to common static website generators, with the following design decisions:</p>\n<ul>\n<li>Each post is a separate directory. The actual post is written in <a href=\"https://www.markdownguide.org/\" rel=\"nofollow\">Markdown</a>, and each post can have its own images, CSS, Javascript and other files. This way each post is relatively self-contained.</li>\n<li>Posts are converted into HTML, and the resulting weblog is composed of <strong>only static files</strong>. There are no databases, and all extra data is stored as JSON.</li>\n<li>External images are downloaded when the weblog is built, and the link is altered to point to the local resource. The engine <strong>will warn you</strong> if the generated HTML has any external resources (CSS, for example).</li>\n<li>The files are then <strong>published</strong> to a location using a plugin architecture (currently only S3 is supported).</li>\n</ul>\n<p>All this is done with a command line utility called <tt>nb</tt>.</p>\n<p>Additionally, nefelibata recognizes that most interactions occur in social networks, like Twitter or Facebook. The engine can be configured with global or per-post <strong>announcers</strong>, that will post the content to social networks, so that people can comment and discuss it. When the weblog is rebuilt, the announcers will collect any replies and store them locally, so that the comments are displayed in the weblog with your post. A post can be announced to multiple social networks, and the comments will be aggregated with it.</p>\n</div>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>I recommend installing nefelibata using a virtual environment:</p>\n<pre>$ virtualenv -p python3 venv\n$ <span class=\"nb\">source</span> venv/bin/activate\n$ pip install nefelibata\n</pre>\n<p>This will add a program called <tt>nb</tt> to your path.</p>\n<p>If you\u2019re impatient, you can run:</p>\n<pre>$ nb init blog\n$ <span class=\"nb\">cd</span> blog\n$ nb build\n$ nb preview\n</pre>\n<p>And open <a href=\"http://localhost:8000/\" rel=\"nofollow\">http://localhost:8000/</a> to see your weblog. Read below for details.</p>\n</div>\n<div id=\"creating-the-weblog-directory\">\n<h3>Creating the weblog directory</h3>\n<p>Once you have installed nefelibata you should initialize a directory that will hold your content:</p>\n<pre>$ nb init blog\n$ ls blog\nnefelibata.yaml  posts/  templates/\n</pre>\n<p>Here, the file <tt>nefelibata.yaml</tt> stores the configuration for your weblog. The <tt>`posts</tt> directory will contain your posts, and should have a directory called <tt>first</tt>. The <tt>templates</tt> directory has the templates for generating your blog and its Atom feed. Multiple themes are supported, but there\u2019s currently only one called \u201cpure-blog\u201d, based on <a href=\"https://purecss.io/\" rel=\"nofollow\">Pure.css</a>.</p>\n</div>\n<div id=\"configuring-your-weblog\">\n<h3>Configuring your weblog</h3>\n<p>Open the file <cite>nefelibata.yaml</cite>. The first part is self-explanatory:</p>\n<pre><span class=\"nt\">title</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Tao etc.</span>\n<span class=\"nt\">subtitle</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Musings about the path and other things</span>\n<span class=\"nt\">author</span><span class=\"p\">:</span>\n    <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Beto Dealmeida</span>\n    <span class=\"nt\">email</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">roberto@dealmeida.net</span>\n<span class=\"nt\">url</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">https://blog.taoetc.org/</span>  <span class=\"c1\"># slashing trail is important</span>\n<span class=\"nt\">posts-to-show</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">5</span>\n<span class=\"nt\">theme</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">pure-blog</span>\n<span class=\"nt\">language</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">en</span>\n\n<span class=\"c1\"># These are social icons displayed on the footer</span>\n<span class=\"nt\">social</span><span class=\"p\">:</span>\n    <span class=\"p-Indicator\">-</span> <span class=\"nt\">title</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Code</span>\n      <span class=\"nt\">url</span><span class=\"p\">:</span> <span class=\"s\">\"https://github.com/betodealmeida\"</span>\n      <span class=\"nt\">icon</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">icon-github</span>\n    <span class=\"p-Indicator\">-</span> <span class=\"nt\">title</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Facebook</span>\n      <span class=\"nt\">url</span><span class=\"p\">:</span> <span class=\"s\">\"https://www.facebook.com/beto\"</span>\n      <span class=\"nt\">icon</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">icon-facebook</span>\n    <span class=\"p-Indicator\">-</span> <span class=\"nt\">title</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Twitter</span>\n      <span class=\"nt\">url</span><span class=\"p\">:</span> <span class=\"s\">\"https://twitter.com/dealmeida\"</span>\n      <span class=\"nt\">icon</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">icon-twitter</span>\n</pre>\n<p>This is copied from <a href=\"https://blog.taoetc.org/\" rel=\"nofollow\">my weblog</a>.</p>\n<p>The second part defines where your weblog will be published to, and where new posts are announced:</p>\n<pre><span class=\"nt\">publish-to</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">S3</span>\n<span class=\"nt\">announce-on</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">twitter, facebook</span>\n</pre>\n<p>In this example, the static files from the weblog will be published to an S3 bucket, and new posts will be published to both Twitter and Facebook.</p>\n<p>The S3 section looks like this:</p>\n<pre><span class=\"nt\">S3</span><span class=\"p\">:</span>\n    <span class=\"nt\">AWS_ACCESS_KEY_ID</span><span class=\"p\">:</span>\n    <span class=\"nt\">AWS_SECRET_ACCESS_KEY</span><span class=\"p\">:</span>\n    <span class=\"nt\">bucket</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">blog.taoetc.org</span>\n\n    <span class=\"c1\"># Nefelibata will configure the bucket as website and also set your DNS</span>\n    <span class=\"c1\"># if you're using Route 53</span>\n    <span class=\"nt\">configure_website</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">true</span>\n    <span class=\"nt\">configure_route53</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">blog.taoetc.org.</span>\n</pre>\n<p>You need to <a href=\"http://aws.amazon.com/s3/\" rel=\"nofollow\">create an S3 account</a> in order to get the AWS credentials. If you want the S3 publisher to create the bucket, configure it as a website, upload the website and configure Route 53 to point the domain name to it you need the following policy in your IAM account (replace <tt>blog.taoetc.org</tt> with your domain):</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"Version\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2012-10-17\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"Statement\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">\"Sid\"</span><span class=\"p\">:</span> <span class=\"s2\">\"VisualEditor0\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"Effect\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Allow\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"Action\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s2\">\"s3:GetBucketWebsite\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"s3:PutBucketWebsite\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"route53:ChangeResourceRecordSets\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"s3:PutBucketAcl\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"s3:CreateBucket\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"nt\">\"Resource\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s2\">\"arn:aws:route53:::hostedzone/taoetc.org\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"arn:aws:s3:::blog.taoetc.org\"</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">\"Sid\"</span><span class=\"p\">:</span> <span class=\"s2\">\"VisualEditor1\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"Effect\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Allow\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"Action\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s2\">\"s3:PutObject\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"s3:GetObject\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"s3:PutObjectAcl\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"nt\">\"Resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"arn:aws:s3:::blog.taoetc.org/*\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">\"Sid\"</span><span class=\"p\">:</span> <span class=\"s2\">\"VisualEditor2\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"Effect\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Allow\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"Action\"</span><span class=\"p\">:</span> <span class=\"s2\">\"route53:ListHostedZones\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"Resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"*\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>This will upload your weblog to an S3 bucket and run the website from it over HTTP. If you want to serve the website over HTTPS (as I do), you need to disable Route 53 (<tt>configure_route53</tt> should be empty) and <a href=\"https://www.freecodecamp.org/news/simple-site-hosting-with-amazon-s3-and-https-5e78017f482a/\" rel=\"nofollow\">configure CloudFront</a>.</p>\n<p>Finally, if you want to announce your posts on Twitter or Facebook you need to create custom applications on the respeective developer websites, and add the access tokens to the file <cite>nefelibata.yaml</cite>. The skeleton file has instructions on how to do this for each announcer. (There\u2019s also an announcer for <a href=\"https://fawm.org/\" rel=\"nofollow\">FAWM</a>, but it\u2019s currently work in progress).</p>\n</div>\n<div id=\"creating-a-new-post\">\n<h3>Creating a new post</h3>\n<p>Your skeleton blog already has a post called <tt>first</tt>. You can edit that post, or create a new one with the command:</p>\n<pre>$ nb new <span class=\"s2\">\"Hello, World!\"</span>\n</pre>\n<p>(Note that you always need to run the <tt>nb</tt> command from inside your weblog directory.)</p>\n<p>This will create a new directory called <cite>hello_world</cite>, with the following structure:</p>\n<pre>posts/hello_world/\nposts/hello_world/index.mkd\nposts/hello_world/img/\nposts/hello_world/css/\nposts/hello_world/js/\n</pre>\n<p>If you have the <tt>EDITOR</tt> environment set, nefelibata will automatically open your editor to edit <tt>index.mkd</tt>. You can place any custom CSS, Javascript or images in the corresponding directories, or any other extra files in the <tt>hello_world/</tt> directory.</p>\n<p>You\u2019ll notice that the <tt>index.mkd</tt> file has headers and a body. The file itself is actually stored as an email, using the <a href=\"https://tools.ietf.org/html/rfc5322.html\" rel=\"nofollow\">RFC 5322 format</a>. The most important headers are:</p>\n<ul>\n<li><tt>subject</tt>: this is the title of your post.</li>\n<li><tt>summary</tt>: this is a one-line summary of your post.</li>\n<li><tt>keywords</tt>: a comma-separated list of keywords/tags/categories.</li>\n</ul>\n<p>Additionally, once the post is published a <tt>date</tt> header will be added. If the psot is announced to Twitter/Facebook/etc. a corresponding header (eg, <tt><span class=\"pre\">facebook-url</span></tt>) will also be added.</p>\n<p>If you want to announce your post to a custom social network you can either override the default announcers by using the <tt><span class=\"pre\">announce-on</span></tt> header, or add an extra announcer by using the <tt><span class=\"pre\">announce-on-extra</span></tt> header.</p>\n</div>\n<div id=\"building-the-weblog\">\n<h3>Building the weblog</h3>\n<p>To build your webblog, simply run:</p>\n<pre>$ nb build\n</pre>\n<p>This will convert the Markdown files to HTML and build the weblog, with pages for archives and categories as well. Later, once posts have been announced to social networks, this command will also collect replies and store them locally.</p>\n</div>\n<div id=\"previewing-the-weblog\">\n<h3>Previewing the weblog</h3>\n<p>To preview your weblog, simply run:</p>\n<pre>$ nb preview\n</pre>\n<p>This will run an HTTP server on port 8000. Open <a href=\"http://localhost:8000/\" rel=\"nofollow\">http://localhost:8000/</a> on your browser so you can preview your changes.</p>\n</div>\n<div id=\"publishing-the-weblog\">\n<h3>Publishing the weblog</h3>\n<p>Finally, you can publish your weblog with the command:</p>\n<pre>$ nb publish\n</pre>\n<p>This will upload the weblog using any configured publisherd (like S3), and announce new posts to social networks.</p>\n</div>\n</div>\n<div id=\"what-s-next\">\n<h2>What\u2019s next?</h2>\n<p>If you want to customize your weblog, take a look at the <tt>templates/</tt> directory inside your weblog. The templates are written in <a href=\"https://palletsprojects.com/p/jinja/\" rel=\"nofollow\">Jinja2</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6378092, "releases": {"0.1": [], "0.2": [{"comment_text": "", "digests": {"md5": "818f218854aaf637311904f18dd69283", "sha256": "e287c5a0393871614d8d6a4ce05096e348b6eeacad5c33bb163362c684ca69b3"}, "downloads": -1, "filename": "nefelibata-0.2.tar.gz", "has_sig": false, "md5_digest": "818f218854aaf637311904f18dd69283", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42775, "upload_time": "2019-12-31T05:29:37", "upload_time_iso_8601": "2019-12-31T05:29:37.719288Z", "url": "https://files.pythonhosted.org/packages/7a/4c/d27a10bfbbfbc48415f7e922cc227784078e7b8d4414a03bada771c7edd8/nefelibata-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "c4ddc7f71922d05b5beedd816832fde6", "sha256": "cd57c3086497b83545284d2c3f2e4e7876bad44e0fefe5cdcf04ba5a0d4e06bd"}, "downloads": -1, "filename": "nefelibata-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c4ddc7f71922d05b5beedd816832fde6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42777, "upload_time": "2019-12-31T05:31:22", "upload_time_iso_8601": "2019-12-31T05:31:22.589352Z", "url": "https://files.pythonhosted.org/packages/f9/dd/f144ccf16cbc1d86e47b45f82e5c6ca695c6e3ce5cf8c326c06c2ac29ead/nefelibata-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c4ddc7f71922d05b5beedd816832fde6", "sha256": "cd57c3086497b83545284d2c3f2e4e7876bad44e0fefe5cdcf04ba5a0d4e06bd"}, "downloads": -1, "filename": "nefelibata-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c4ddc7f71922d05b5beedd816832fde6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42777, "upload_time": "2019-12-31T05:31:22", "upload_time_iso_8601": "2019-12-31T05:31:22.589352Z", "url": "https://files.pythonhosted.org/packages/f9/dd/f144ccf16cbc1d86e47b45f82e5c6ca695c6e3ce5cf8c326c06c2ac29ead/nefelibata-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:36 2020"}