{"info": {"author": "Bruce Frederiksen", "author_email": "dangyogi@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Education", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Education", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Code Generators", "Topic :: Software Development :: Compilers", "Topic :: Software Development :: Embedded Systems"], "description": "# robot-brains\n\nFTC \"easy robot programming\" alternative to Blockly (overly simple with no\nsupport for modules) and Java (vastly too complicated with no real support for\nrobot programming).\n\n# Goals\n\n- First, and foremost, easy to program.\n\n  - This is targeted at high school students who have never programmed before.\n\n- Modularity\n\n  - Allow the program to be represented as a set of independent bite-sized\n    modules.\n\n  - Allow re-use of modules across different programs (FTC \"opmodes\").\n\n  - Support the creation of team libraries that can be re-used from season to\n    season.\n\n    - This allows teams to capture and reuse what they've learned, so that they\n      can continually improve from one season to the next.\n\n- Direct support for State Machines.\n\n  - Often robot autonomous routines are diagrammed as state machines with\n    chains of actions linked together, branching at decision points.\n\n  - This language directly supports that using Decision Logic Tables for the\n    branching decision points, and labeled blocks of code for actions that are\n    linked with simple \"goto\" statements.\n\n    - This language has no stack, so infinite loops of gotos are directly\n      supported.\n\n- Autonomous programming is easy.\n\n  - With no stack, it is very easy to run multiple autonomous threads\n    concurrantly.  For example, move forward 5 ft while raising the elevator\n    14 inches.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dangyogi/robot-brains.git", "keywords": "FTC robot programming blockly", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "robot-brains", "package_url": "https://pypi.org/project/robot-brains/", "platform": "", "project_url": "https://pypi.org/project/robot-brains/", "project_urls": {"Homepage": "https://github.com/dangyogi/robot-brains.git"}, "release_url": "https://pypi.org/project/robot-brains/0.1.0/", "requires_dist": ["ply (>=3.11)"], "requires_python": "", "summary": "FTC alternative robot programming language", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>robot-brains</h1>\n<p>FTC \"easy robot programming\" alternative to Blockly (overly simple with no\nsupport for modules) and Java (vastly too complicated with no real support for\nrobot programming).</p>\n<h1>Goals</h1>\n<ul>\n<li>\n<p>First, and foremost, easy to program.</p>\n<ul>\n<li>This is targeted at high school students who have never programmed before.</li>\n</ul>\n</li>\n<li>\n<p>Modularity</p>\n<ul>\n<li>\n<p>Allow the program to be represented as a set of independent bite-sized\nmodules.</p>\n</li>\n<li>\n<p>Allow re-use of modules across different programs (FTC \"opmodes\").</p>\n</li>\n<li>\n<p>Support the creation of team libraries that can be re-used from season to\nseason.</p>\n<ul>\n<li>This allows teams to capture and reuse what they've learned, so that they\ncan continually improve from one season to the next.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Direct support for State Machines.</p>\n<ul>\n<li>\n<p>Often robot autonomous routines are diagrammed as state machines with\nchains of actions linked together, branching at decision points.</p>\n</li>\n<li>\n<p>This language directly supports that using Decision Logic Tables for the\nbranching decision points, and labeled blocks of code for actions that are\nlinked with simple \"goto\" statements.</p>\n<ul>\n<li>This language has no stack, so infinite loops of gotos are directly\nsupported.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Autonomous programming is easy.</p>\n<ul>\n<li>With no stack, it is very easy to run multiple autonomous threads\nconcurrantly.  For example, move forward 5 ft while raising the elevator\n14 inches.</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 5273827, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a86feb51fdbd49d1b22c05935809cff3", "sha256": "e748977cb3b079e30edade31126c845413fa88e49b389dd765bc9cf4cabea3a6"}, "downloads": -1, "filename": "robot_brains-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a86feb51fdbd49d1b22c05935809cff3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 46461, "upload_time": "2019-05-15T18:42:11", "upload_time_iso_8601": "2019-05-15T18:42:11.941602Z", "url": "https://files.pythonhosted.org/packages/eb/11/a51a45143514932b484d885e6e368e0049251bdeb9474d287331e302259a/robot_brains-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1198226c24516ceb713b38e3f2eb337b", "sha256": "59477d2db605d866a3c78bb1bdcbf1f5c5d3ddec4e3d465e2578740e16ddb18c"}, "downloads": -1, "filename": "robot-brains-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1198226c24516ceb713b38e3f2eb337b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43461, "upload_time": "2019-05-15T18:42:14", "upload_time_iso_8601": "2019-05-15T18:42:14.717476Z", "url": "https://files.pythonhosted.org/packages/88/8f/640659c3894308292adab9597e76b5613d923ed212304ff810e297851b16/robot-brains-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a86feb51fdbd49d1b22c05935809cff3", "sha256": "e748977cb3b079e30edade31126c845413fa88e49b389dd765bc9cf4cabea3a6"}, "downloads": -1, "filename": "robot_brains-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a86feb51fdbd49d1b22c05935809cff3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 46461, "upload_time": "2019-05-15T18:42:11", "upload_time_iso_8601": "2019-05-15T18:42:11.941602Z", "url": "https://files.pythonhosted.org/packages/eb/11/a51a45143514932b484d885e6e368e0049251bdeb9474d287331e302259a/robot_brains-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1198226c24516ceb713b38e3f2eb337b", "sha256": "59477d2db605d866a3c78bb1bdcbf1f5c5d3ddec4e3d465e2578740e16ddb18c"}, "downloads": -1, "filename": "robot-brains-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1198226c24516ceb713b38e3f2eb337b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43461, "upload_time": "2019-05-15T18:42:14", "upload_time_iso_8601": "2019-05-15T18:42:14.717476Z", "url": "https://files.pythonhosted.org/packages/88/8f/640659c3894308292adab9597e76b5613d923ed212304ff810e297851b16/robot-brains-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:00 2020"}