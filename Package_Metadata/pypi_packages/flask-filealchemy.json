{"info": {"author": "Siddhant Goel", "author_email": "me@sgoel.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Flask", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Database", "Topic :: Database :: Front-Ends", "Topic :: Text Processing :: Markup"], "description": "Flask-FileAlchemy\n=================\n\n.. image:: https://github.com/siddhantgoel/flask-filealchemy/workflows/flask-filealchemy/badge.svg\n    :target: https://github.com/siddhantgoel/flask-filealchemy/workflows/flask-filealchemy/badge.svg\n\n.. image:: https://badge.fury.io/py/flask-filealchemy.svg\n    :target: https://pypi.python.org/pypi/flask-filealchemy\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n\n:code:`Flask-FileAlchemy` lets you use YAML-formatted plain-text files as the\ndata store for your Flask_ app.\n\nInstallation\n------------\n\n.. code-block:: bash\n\n   $ pip install flask-filealchemy\n\nBackground\n----------\n\nWhile there are better data stores to use in production than plain-text, the\nconstraints on data stores for applications that only have to run locally are\nmuch more relaxed. For such applications, it's normally OK to sacrifice on\nperformance for ease of use.\n\nOne very strong use case here is generating static sites. While you can use\n`Frozen-Flask`_ to \"freeze\" an entire Flask application to a set of HTML files,\nyour application still needs to read data from somewhere. This means you'll need\nto set up a data store, which (locally) tends to be file based SQLite. While\nthat does the job extremely well, this also means executing SQL statements to\ninput data.\n\nDepending on how many data models you have and what types they contain, this\ncan quickly get out of hand (imagine having to write an :code:`INSERT` statement\nfor a blog post).\n\nIn addition, you can't version control your data. Well, technically you can,\nbut the diffs won't make any sense to a human.\n\nFlask-FileAlchemy lets you use an alternative data store - plain text files.\n\nPlain text files have the advantage of being much easier to handle for a human.\nPlus, you can version control them so your application data and code are both\nchecked in together and share history.\n\nFlask-FileAlchemy lets you enter your data in YAML formatted plain text files\nand loads them according to the SQLAlchemy_ models you've defined using\n`Flask-SQLAlchemy`_ This data is then put into whatever data store you're using\n(in-memory SQLite works best) and is then ready for your app to query however it\npleases.\n\nThis lets you retain the comfort of dynamic sites without compromising on the\nsimplicity of static sites.\n\nUsage\n-----\n\nDefine your data models using the standard (Flask-)SQLAlchemy API.\n\n.. code-block:: python\n\n   app = Flask(__name__)\n\n   # configure Flask-SQLAlchemy\n   app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///:memory:'\n\n   db = SQLAlchemy(app)\n\n   class BlogPost(db.Model):\n       __tablename__ = 'blog_posts'\n\n       slug = Column(String(255), primary_key=True)\n       title = Column(String(255), nullable=False)\n       contents = Column(Text, nullable=False)\n\nThen, create a :code:`data/` directory somewhere on your disk (to keep things\nsimple, it's recommended to have this directory in the application root). For\neach model you've defined, create a directory under this :code:`data/` directory\nwith the same name as the :code:`__tablename__` attribute.\n\nIn this example, we'll add the following contents to\n:code:`data/blog_posts/first-post-ever.yml`.\n\n.. code-block:: yaml\n\n   slug: first-post-ever\n   title: First post ever!\n   contents: |\n      This blog post talks about how it's the first post ever!\n\nFor \"smaller\" models which don't have more than 2-3 fields, Flask-FileAlchemy\nsupports reading from an :code:`_all.yml` file. In such a case, instead of\nadding one file for every row, simply add all the rows in the :code:`_all.yml`\nfile inside the table directory.\n\nIn this example, this could look like the following.\n\n.. code-block:: yaml\n\n   - slug: first-post-ever\n     title: First post ever!\n     contents: This blog post talks about how it's the first post ever!\n   - slug: second-post-ever\n     title: second post ever!\n     contents: This blog post talks about how it's the second post ever!\n\nFinally, configure :code:`Flask-FileAlchemy` with your setup and ask it to load\nall your data.\n\n.. code-block:: python\n\n   # configure Flask-FileAlchemy\n   app.config['FILEALCHEMY_DATA_DIR'] = os.path.join(\n       os.path.dirname(os.path.realpath(__file__)), 'data'\n   )\n   app.config['FILEALCHEMY_MODELS'] = (BlogPost,)\n\n   # load tables\n   FileAlchemy(app, db).load_tables()\n\n:code:`Flask-FileAlchemy` then reads your data from the given directory, and\nstores them in the data store of your choice that you configured\n:code:`Flask-FileAlchemy` with (the preference being\n:code:`sqlite:///:memory:`).\n\nPlease note that it's not possible to write to this database using\n:code:`db.session`. Well, technically it's allowed, but the changes your app\nmakes will only be reflected in the in-memory data store but won't be persisted\nto disk.\n\nContributing\n------------\n\nContributions are most welcome!\n\nPlease make sure you have Python 3.5+ and Poetry_ installed.\n\n1. Git clone the repository -\n   :code:`git clone https://github.com/siddhantgoel/flask-filealchemy`.\n\n2. Install the packages required for development -\n   :code:`poetry install`.\n\n3. That's basically it. You should now be able to run the test suite -\n   :code:`poetry run py.test`.\n\n.. _Flask: http://flask.pocoo.org\n.. _Flask-SQLAlchemy: http://flask-sqlalchemy.pocoo.org/\n.. _Frozen-Flask: https://pythonhosted.org/Frozen-Flask/\n.. _Poetry: https://poetry.eustace.io/\n.. _SQLAlchemy: https://www.sqlalchemy.org/\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/siddhantgoel/flask-filealchemy", "keywords": "flask,sqlalchemy,yaml,plaintext,web", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "flask-filealchemy", "package_url": "https://pypi.org/project/flask-filealchemy/", "platform": "", "project_url": "https://pypi.org/project/flask-filealchemy/", "project_urls": {"Documentation": "https://github.com/siddhantgoel/flask-filealchemy", "Homepage": "https://github.com/siddhantgoel/flask-filealchemy", "Repository": "https://github.com/siddhantgoel/flask-filealchemy"}, "release_url": "https://pypi.org/project/flask-filealchemy/0.4.1/", "requires_dist": ["flask (>=1.0,<2.0)", "flask-sqlalchemy (>=2.4,<3.0)", "ruamel-yaml (>=0.16,<0.17)"], "requires_python": ">=3.5,<4.0", "summary": "YAML-formatted plain-text file based models for Flask backed by Flask-SQLAlchemy", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://github.com/siddhantgoel/flask-filealchemy/workflows/flask-filealchemy/badge.svg\" rel=\"nofollow\"><img alt=\"https://github.com/siddhantgoel/flask-filealchemy/workflows/flask-filealchemy/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/23eaf746feb381e6e2aff7922b9d45e9c108343c/68747470733a2f2f6769746875622e636f6d2f7369646468616e74676f656c2f666c61736b2d66696c65616c6368656d792f776f726b666c6f77732f666c61736b2d66696c65616c6368656d792f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/flask-filealchemy\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/flask-filealchemy.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bf213b4ed48792b05d10f0cf3fecb4ee63aece09/68747470733a2f2f62616467652e667572792e696f2f70792f666c61736b2d66696c65616c6368656d792e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/code%20style-black-000000.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<p><code>Flask-FileAlchemy</code> lets you use YAML-formatted plain-text files as the\ndata store for your <a href=\"http://flask.pocoo.org\" rel=\"nofollow\">Flask</a> app.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install flask-filealchemy\n</pre>\n</div>\n<div id=\"background\">\n<h2>Background</h2>\n<p>While there are better data stores to use in production than plain-text, the\nconstraints on data stores for applications that only have to run locally are\nmuch more relaxed. For such applications, it\u2019s normally OK to sacrifice on\nperformance for ease of use.</p>\n<p>One very strong use case here is generating static sites. While you can use\n<a href=\"https://pythonhosted.org/Frozen-Flask/\" rel=\"nofollow\">Frozen-Flask</a> to \u201cfreeze\u201d an entire Flask application to a set of HTML files,\nyour application still needs to read data from somewhere. This means you\u2019ll need\nto set up a data store, which (locally) tends to be file based SQLite. While\nthat does the job extremely well, this also means executing SQL statements to\ninput data.</p>\n<p>Depending on how many data models you have and what types they contain, this\ncan quickly get out of hand (imagine having to write an <code>INSERT</code> statement\nfor a blog post).</p>\n<p>In addition, you can\u2019t version control your data. Well, technically you can,\nbut the diffs won\u2019t make any sense to a human.</p>\n<p>Flask-FileAlchemy lets you use an alternative data store - plain text files.</p>\n<p>Plain text files have the advantage of being much easier to handle for a human.\nPlus, you can version control them so your application data and code are both\nchecked in together and share history.</p>\n<p>Flask-FileAlchemy lets you enter your data in YAML formatted plain text files\nand loads them according to the <a href=\"https://www.sqlalchemy.org/\" rel=\"nofollow\">SQLAlchemy</a> models you\u2019ve defined using\n<a href=\"http://flask-sqlalchemy.pocoo.org/\" rel=\"nofollow\">Flask-SQLAlchemy</a> This data is then put into whatever data store you\u2019re using\n(in-memory SQLite works best) and is then ready for your app to query however it\npleases.</p>\n<p>This lets you retain the comfort of dynamic sites without compromising on the\nsimplicity of static sites.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Define your data models using the standard (Flask-)SQLAlchemy API.</p>\n<pre><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># configure Flask-SQLAlchemy</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'SQLALCHEMY_DATABASE_URI'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'sqlite:///:memory:'</span>\n\n<span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">SQLAlchemy</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">BlogPost</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s1\">'blog_posts'</span>\n\n    <span class=\"n\">slug</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">contents</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Text</span><span class=\"p\">,</span> <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>Then, create a <code>data/</code> directory somewhere on your disk (to keep things\nsimple, it\u2019s recommended to have this directory in the application root). For\neach model you\u2019ve defined, create a directory under this <code>data/</code> directory\nwith the same name as the <code>__tablename__</code> attribute.</p>\n<p>In this example, we\u2019ll add the following contents to\n<code>data/blog_posts/first-post-ever.yml</code>.</p>\n<pre><span class=\"nt\">slug</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">first-post-ever</span>\n<span class=\"nt\">title</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">First post ever!</span>\n<span class=\"nt\">contents</span><span class=\"p\">:</span> <span class=\"p-Indicator\">|</span>\n   <span class=\"no\">This blog post talks about how it's the first post ever!</span>\n</pre>\n<p>For \u201csmaller\u201d models which don\u2019t have more than 2-3 fields, Flask-FileAlchemy\nsupports reading from an <code>_all.yml</code> file. In such a case, instead of\nadding one file for every row, simply add all the rows in the <code>_all.yml</code>\nfile inside the table directory.</p>\n<p>In this example, this could look like the following.</p>\n<pre><span class=\"p-Indicator\">-</span> <span class=\"nt\">slug</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">first-post-ever</span>\n  <span class=\"nt\">title</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">First post ever!</span>\n  <span class=\"nt\">contents</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">This blog post talks about how it's the first post ever!</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">slug</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">second-post-ever</span>\n  <span class=\"nt\">title</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">second post ever!</span>\n  <span class=\"nt\">contents</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">This blog post talks about how it's the second post ever!</span>\n</pre>\n<p>Finally, configure <code>Flask-FileAlchemy</code> with your setup and ask it to load\nall your data.</p>\n<pre><span class=\"c1\"># configure Flask-FileAlchemy</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'FILEALCHEMY_DATA_DIR'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)),</span> <span class=\"s1\">'data'</span>\n<span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'FILEALCHEMY_MODELS'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">BlogPost</span><span class=\"p\">,)</span>\n\n<span class=\"c1\"># load tables</span>\n<span class=\"n\">FileAlchemy</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">load_tables</span><span class=\"p\">()</span>\n</pre>\n<p><code>Flask-FileAlchemy</code> then reads your data from the given directory, and\nstores them in the data store of your choice that you configured\n<code>Flask-FileAlchemy</code> with (the preference being\n<code>sqlite:///:memory:</code>).</p>\n<p>Please note that it\u2019s not possible to write to this database using\n<code>db.session</code>. Well, technically it\u2019s allowed, but the changes your app\nmakes will only be reflected in the in-memory data store but won\u2019t be persisted\nto disk.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Contributions are most welcome!</p>\n<p>Please make sure you have Python 3.5+ and <a href=\"https://poetry.eustace.io/\" rel=\"nofollow\">Poetry</a> installed.</p>\n<ol>\n<li>Git clone the repository -\n<code>git clone https://github.com/siddhantgoel/flask-filealchemy</code>.</li>\n<li>Install the packages required for development -\n<code>poetry install</code>.</li>\n<li>That\u2019s basically it. You should now be able to run the test suite -\n<code>poetry run py.test</code>.</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 6918680, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e260ee25aba1a1674f34c3f037d9c187", "sha256": "e7208f13b22bc8fa10c2dc2abf9a4663c7c39704ae3a9ce8229cbb7416d956a7"}, "downloads": -1, "filename": "flask_filealchemy-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e260ee25aba1a1674f34c3f037d9c187", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.0", "size": 5101, "upload_time": "2018-10-13T12:21:51", "upload_time_iso_8601": "2018-10-13T12:21:51.010788Z", "url": "https://files.pythonhosted.org/packages/df/4a/0efbf636d35974c93dacea03522a6070020a03f6fdbd9739a9fad32bf3ba/flask_filealchemy-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01259fe4f96031c5b75a921ec3f145e2", "sha256": "7a5d3862020729ae106772d9dfc77e123caa575b53f86f89f8079c34107a10ba"}, "downloads": -1, "filename": "flask-filealchemy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "01259fe4f96031c5b75a921ec3f145e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 5504, "upload_time": "2018-10-13T12:21:52", "upload_time_iso_8601": "2018-10-13T12:21:52.442346Z", "url": "https://files.pythonhosted.org/packages/19/be/11982a77211a14e258a834dc154ca83a6500a478f7f55799334d7d41279a/flask-filealchemy-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "6b0b24056a918fb57d7c06670ead3100", "sha256": "1dee909522880acaa3ed2bc7ea363e0c5a24a7b692aa5c60aeeb5a2a5b067ed8"}, "downloads": -1, "filename": "flask_filealchemy-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6b0b24056a918fb57d7c06670ead3100", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.0", "size": 5315, "upload_time": "2018-10-18T16:31:49", "upload_time_iso_8601": "2018-10-18T16:31:49.085995Z", "url": "https://files.pythonhosted.org/packages/df/1d/266d49724b822d34be619fdc5a9afd78868c3652be72d00a8af21adc1c08/flask_filealchemy-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a62937d3f489d1d19e373645601f907d", "sha256": "d29f745844ed41c3a0a4c53c3b237707a915019f5bf88cfb4e199fd8cd8a7086"}, "downloads": -1, "filename": "flask-filealchemy-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a62937d3f489d1d19e373645601f907d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 5718, "upload_time": "2018-10-18T16:31:51", "upload_time_iso_8601": "2018-10-18T16:31:51.885887Z", "url": "https://files.pythonhosted.org/packages/07/c0/1d96a24b1ee09bb0600abf24a406d7bd60d82beaa23f9ea07cbd522cb857/flask-filealchemy-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "e51df4cb05383f34d997a419ccc5017c", "sha256": "ca2ae6afdf80d26271c5d69b38927afe7553e4cffb1e6a3c5882b247bee2858d"}, "downloads": -1, "filename": "flask_filealchemy-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e51df4cb05383f34d997a419ccc5017c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4.0", "size": 5605, "upload_time": "2018-11-16T07:42:54", "upload_time_iso_8601": "2018-11-16T07:42:54.041284Z", "url": "https://files.pythonhosted.org/packages/2b/84/40e1d1f52aac97a9dca215633783956e62f5cffe34579b108fab4e5911fd/flask_filealchemy-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9698c7dd7c9e57835fff17316ef53a50", "sha256": "188bae1a8a252958772efc1cb87c6143e44d60e68c1a90354a7c1ea684b43c3f"}, "downloads": -1, "filename": "flask-filealchemy-0.3.0.tar.gz", "has_sig": false, "md5_digest": "9698c7dd7c9e57835fff17316ef53a50", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4.0", "size": 6074, "upload_time": "2018-11-16T07:42:55", "upload_time_iso_8601": "2018-11-16T07:42:55.980002Z", "url": "https://files.pythonhosted.org/packages/f1/f7/2ab0402f45dbbc2ebb50cedb91b8be282ef782a5ff7b11905d238d755030/flask-filealchemy-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "5e2f457bf0049667ad527bd0b2d38e65", "sha256": "4c18f3261f7230d53b976477a0d20d584af156017427a7b9b96b7de101419e1f"}, "downloads": -1, "filename": "flask_filealchemy-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5e2f457bf0049667ad527bd0b2d38e65", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 5480, "upload_time": "2019-11-04T13:48:07", "upload_time_iso_8601": "2019-11-04T13:48:07.678267Z", "url": "https://files.pythonhosted.org/packages/75/ca/6e11c3cdf6e7ab0a8a4fc5a70b625e0de811c2cd0ffd4cd62ba0fd11511e/flask_filealchemy-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5884a46adec9013f48d2c2efe0384a89", "sha256": "89a2718aed2e70adc92383afe22b439e63f6a09acc9d2f0f0ef364ec6cd07a7f"}, "downloads": -1, "filename": "flask-filealchemy-0.3.1.tar.gz", "has_sig": false, "md5_digest": "5884a46adec9013f48d2c2efe0384a89", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 6065, "upload_time": "2019-11-04T13:48:06", "upload_time_iso_8601": "2019-11-04T13:48:06.139385Z", "url": "https://files.pythonhosted.org/packages/07/2e/ba7842c20f7d9296522ee1b427f3877e921f09cd867b1c9c299695af3368/flask-filealchemy-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "318965dbd616cb91f2e01ae488331d2d", "sha256": "fffb82855e0f18bec461501da5a385c717a7b2e3bcea149be2c5b1c610665d00"}, "downloads": -1, "filename": "flask_filealchemy-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "318965dbd616cb91f2e01ae488331d2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 6814, "upload_time": "2020-03-20T13:09:08", "upload_time_iso_8601": "2020-03-20T13:09:08.127859Z", "url": "https://files.pythonhosted.org/packages/35/9a/adcf5cd53630ad50f1998387e47da3644bed7a3626a831341d5997156eee/flask_filealchemy-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "91b342694f7423bc637a39f8bc33fd02", "sha256": "5df4c953ce5e398bccf6ab4683dce06dda2ea39115760cab246f56de0078bd06"}, "downloads": -1, "filename": "flask-filealchemy-0.4.0.tar.gz", "has_sig": false, "md5_digest": "91b342694f7423bc637a39f8bc33fd02", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 6753, "upload_time": "2020-03-20T13:09:06", "upload_time_iso_8601": "2020-03-20T13:09:06.772638Z", "url": "https://files.pythonhosted.org/packages/b5/0c/add9172b6e616d8f9488e908614b5490a0431921dd9965d44bb182658a32/flask-filealchemy-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "a1a53351540815251f25d5ed8cf7f434", "sha256": "e7135f0bee7b748d065a29704fd087658b19bf25609a93c47f35a71028307f7e"}, "downloads": -1, "filename": "flask_filealchemy-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a1a53351540815251f25d5ed8cf7f434", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 6821, "upload_time": "2020-03-31T08:49:17", "upload_time_iso_8601": "2020-03-31T08:49:17.918330Z", "url": "https://files.pythonhosted.org/packages/67/f5/cd2ee0568a601561bf9d754b19f1f1e243817de65fe1214e62b9033308f1/flask_filealchemy-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cfc6780e18cfb3b44eae036d31ec177a", "sha256": "6d5d8a9217fe1818e32db827e64b586b38e6ca310a5ae4b22c57fdb2d6661d3f"}, "downloads": -1, "filename": "flask-filealchemy-0.4.1.tar.gz", "has_sig": false, "md5_digest": "cfc6780e18cfb3b44eae036d31ec177a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 7202, "upload_time": "2020-03-31T08:49:16", "upload_time_iso_8601": "2020-03-31T08:49:16.070514Z", "url": "https://files.pythonhosted.org/packages/39/c6/8e05506995e4b4f27c7d5d4c282db21a8b8ed49a1d2966ffc3f48976f51d/flask-filealchemy-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a1a53351540815251f25d5ed8cf7f434", "sha256": "e7135f0bee7b748d065a29704fd087658b19bf25609a93c47f35a71028307f7e"}, "downloads": -1, "filename": "flask_filealchemy-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a1a53351540815251f25d5ed8cf7f434", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 6821, "upload_time": "2020-03-31T08:49:17", "upload_time_iso_8601": "2020-03-31T08:49:17.918330Z", "url": "https://files.pythonhosted.org/packages/67/f5/cd2ee0568a601561bf9d754b19f1f1e243817de65fe1214e62b9033308f1/flask_filealchemy-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cfc6780e18cfb3b44eae036d31ec177a", "sha256": "6d5d8a9217fe1818e32db827e64b586b38e6ca310a5ae4b22c57fdb2d6661d3f"}, "downloads": -1, "filename": "flask-filealchemy-0.4.1.tar.gz", "has_sig": false, "md5_digest": "cfc6780e18cfb3b44eae036d31ec177a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 7202, "upload_time": "2020-03-31T08:49:16", "upload_time_iso_8601": "2020-03-31T08:49:16.070514Z", "url": "https://files.pythonhosted.org/packages/39/c6/8e05506995e4b4f27c7d5d4c282db21a8b8ed49a1d2966ffc3f48976f51d/flask-filealchemy-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:52 2020"}