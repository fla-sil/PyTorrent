{"info": {"author": "Matthew Treinish", "author_email": "mtreinish@kortar.org", "bugtrack_url": null, "classifiers": ["Environment :: OpenStack", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "===========\nmqtt_statsd\n===========\n\nAs the name implies this a script to publish MQTT metrics into statsd. It was\noriginally designed to handle metrics from the $SYS/ topics in the mosquitto\nbroker, but the framework is generic enough that any MQTT topic can be used.\n\nInstallation\n------------\n\nmqtt_statsd is available via pypi, so all you need to do is run::\n\n  pip install -U mqtt_statsd\n\nto get mqtt_statsd on your system. If you need to use a development version of\nmqtt_statsd you can clone the repo and install it locally with::\n\n  git clone https://github.com/mtreinish/mqtt_statsd.git && pip install -e mqtt_statsd\n\nwhich will install mqtt_statsd in your python environment in editable mode for\nlocal development.\n\nConfiguring mqtt_statsd\n-----------------------\n\nBefore you run mqtt_statsd you have to create a yaml configuration file to tell\nmqtt_statsd how to connect to both the MQTT broker, and statsd. As well as which\nMQTT topics to subscribe to and how to populate statsd with the data it gets\nfrom that MQTT topic. For example::\n\n    statsd:\n      hostname: localhost\n      # port is optional, the default is shown\n      port: 8125\n      # prefix is optional, the default is shown\n      prefix: mosquitto.stats\n    mqtt:\n      hostname: localhost\n      # port is optional, the default is shown\n      port: 1883\n      # keepalive is optional, the default is shown\n      keepalive: 60\n      # username is optional, there is no default\n      username: foo\n      # password is optional, there is no default. If username isn't set this\n      # is ignored\n      password: PASS\n      # qos is optional, the default is shown\n      qos: 0\n      # websocket is optional, it defaults to False\n      websocket: True\n    topics:\n      # You can specify as many topics as you want, and mqtt_statsd will\n      # listen to all of them\n      - $SYS/broker/messages/publish/sent:\n        statsd_topic: publish_messages_sent\n        # statsd_type is optional, the default is shown. Valid options are\n        # gague, counter, and timer\n        statsd_type: gauge\n      - $SYS/broker/clients/connected:\n        statsd_topic: connected_clients\n\nRunning mqtt_statsd\n-------------------\n\nAftering installing and configuring mqtt_statsd running it is incredibly\nstraightforward. Just call ``mqtt_statsd`` and it takes 1 mandatory argument,\nthe path to the yaml config file. For example::\n\n  mqtt_statsd my_config_file.yaml", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.openstack.org/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mqtt-statsd", "package_url": "https://pypi.org/project/mqtt-statsd/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mqtt-statsd/", "project_urls": {"Homepage": "http://www.openstack.org/"}, "release_url": "https://pypi.org/project/mqtt-statsd/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "A script to publish MQTT metrics into statsd", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>As the name implies this a script to publish MQTT metrics into statsd. It was\noriginally designed to handle metrics from the $SYS/ topics in the mosquitto\nbroker, but the framework is generic enough that any MQTT topic can be used.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>mqtt_statsd is available via pypi, so all you need to do is run:</p>\n<pre>pip install -U mqtt_statsd\n</pre>\n<p>to get mqtt_statsd on your system. If you need to use a development version of\nmqtt_statsd you can clone the repo and install it locally with:</p>\n<pre>git clone https://github.com/mtreinish/mqtt_statsd.git &amp;&amp; pip install -e mqtt_statsd\n</pre>\n<p>which will install mqtt_statsd in your python environment in editable mode for\nlocal development.</p>\n</div>\n<div id=\"configuring-mqtt-statsd\">\n<h2>Configuring mqtt_statsd</h2>\n<p>Before you run mqtt_statsd you have to create a yaml configuration file to tell\nmqtt_statsd how to connect to both the MQTT broker, and statsd. As well as which\nMQTT topics to subscribe to and how to populate statsd with the data it gets\nfrom that MQTT topic. For example:</p>\n<pre>statsd:\n  hostname: localhost\n  # port is optional, the default is shown\n  port: 8125\n  # prefix is optional, the default is shown\n  prefix: mosquitto.stats\nmqtt:\n  hostname: localhost\n  # port is optional, the default is shown\n  port: 1883\n  # keepalive is optional, the default is shown\n  keepalive: 60\n  # username is optional, there is no default\n  username: foo\n  # password is optional, there is no default. If username isn't set this\n  # is ignored\n  password: PASS\n  # qos is optional, the default is shown\n  qos: 0\n  # websocket is optional, it defaults to False\n  websocket: True\ntopics:\n  # You can specify as many topics as you want, and mqtt_statsd will\n  # listen to all of them\n  - $SYS/broker/messages/publish/sent:\n    statsd_topic: publish_messages_sent\n    # statsd_type is optional, the default is shown. Valid options are\n    # gague, counter, and timer\n    statsd_type: gauge\n  - $SYS/broker/clients/connected:\n    statsd_topic: connected_clients\n</pre>\n</div>\n<div id=\"running-mqtt-statsd\">\n<h2>Running mqtt_statsd</h2>\n<p>Aftering installing and configuring mqtt_statsd running it is incredibly\nstraightforward. Just call <tt>mqtt_statsd</tt> and it takes 1 mandatory argument,\nthe path to the yaml config file. For example:</p>\n<pre>mqtt_statsd my_config_file.yaml\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2760877, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f9d8e240ed0cd6c8a70473c7d9d3ad42", "sha256": "31bc30912f7d0cd4e19fbc1b840ba55a3a4fa8fb7b1ff1bfaaff800f59f3e517"}, "downloads": -1, "filename": "mqtt_statsd-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f9d8e240ed0cd6c8a70473c7d9d3ad42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16143, "upload_time": "2017-04-04T02:53:34", "upload_time_iso_8601": "2017-04-04T02:53:34.543805Z", "url": "https://files.pythonhosted.org/packages/cb/5f/310e171a057a07d45ca8c00891cdd7eaf74c068651a98e6700d1cf236507/mqtt_statsd-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f9d8e240ed0cd6c8a70473c7d9d3ad42", "sha256": "31bc30912f7d0cd4e19fbc1b840ba55a3a4fa8fb7b1ff1bfaaff800f59f3e517"}, "downloads": -1, "filename": "mqtt_statsd-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f9d8e240ed0cd6c8a70473c7d9d3ad42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16143, "upload_time": "2017-04-04T02:53:34", "upload_time_iso_8601": "2017-04-04T02:53:34.543805Z", "url": "https://files.pythonhosted.org/packages/cb/5f/310e171a057a07d45ca8c00891cdd7eaf74c068651a98e6700d1cf236507/mqtt_statsd-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:05 2020"}