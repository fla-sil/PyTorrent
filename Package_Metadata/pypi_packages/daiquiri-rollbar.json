{"info": {"author": "Julien Enselme", "author_email": "jenselme@jujens.eu", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: System :: Logging"], "description": "daiquiri-rollbar\n=================\n\nEasy way to use `Rollbar <http://rollbar.com/>`__ with `daiquiri <http://daiquiri.readthedocs.io/en/latest/>`__.\n\nThe level of the messages is preserved. So ``logger.info('smth')`` will be registered as ``info`` in Rollbar. If you configure daiquiri to log messages above a certain level, only those messages will be sent to Rollbar. You can also configure the ``RollbarOutput`` to only log messages for a level that is different from the global configuration.\n\nException should be logged with ``logger.exception``. The stacktrace will then be sent to Rollbar with ``report_exc_info``.\n\nTo use it, just add ``RollbarOutput`` to the list of daiquiri outputs and use daiquiri normally:\n\n.. code:: python\n\n    import logging\n    from daiquiri_rollbar import RollbarOutput\n\n    rollbar_output = RollbarOutput(access_token='access_token')\n    daiquiri.setup(\n        level=logging.INFO,\n        outputs=(rollbar_output,)\n    )\n    logger = daiquiri.getLogger(__name__)\n\n    logger.info('Test')\n\nTo log message of a certain level:\n\n.. code:: python\n\n    import logging\n    from daiquiri_rollbar import RollbarOutput\n\n    rollbar_output = RollbarOutput(access_token='access_token', level=logging.WARNING)\n    daiquiri.setup(\n        level=logging.INFO,\n        outputs=(rollbar_output,)\n    )\n    logger = daiquiri.getLogger(__name__)\n\n    logger.info('Test')\n\nBy default, log messages will be logged for production. To change the environment, build ``RollbarOutput`` like this:\n\n.. code:: python\n\n    rollbar_output = RollbarOutput(access_token='access_token', environment='development')\n\nIf you don't pass an access token, ``RollbarOutput`` will not log anything.\n\nError messages from the ``rollbar`` module are not sent into Rollbar to prevent an infinite loop. They are sent to stderr instead. They will be logged by other outputs if you have any.\n\n\nChangelog\n=========\n\n0.2.1 (2017-08-15)\n------------------\n\n- Improve documentation\n\n\n0.2.0 (2017-08-15)\n------------------\n\n- Log messages into rollbar", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/Jenselme/daiquiri-rollbar", "keywords": "daiquiri logging rollbar", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "daiquiri-rollbar", "package_url": "https://pypi.org/project/daiquiri-rollbar/", "platform": "", "project_url": "https://pypi.org/project/daiquiri-rollbar/", "project_urls": {"Homepage": "https://gitlab.com/Jenselme/daiquiri-rollbar"}, "release_url": "https://pypi.org/project/daiquiri-rollbar/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Easy way to integrate Rollbar into daiquiri", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"daiquiri-rollbar\">\n<h2>daiquiri-rollbar</h2>\n<p>Easy way to use <a href=\"http://rollbar.com/\" rel=\"nofollow\">Rollbar</a> with <a href=\"http://daiquiri.readthedocs.io/en/latest/\" rel=\"nofollow\">daiquiri</a>.</p>\n<p>The level of the messages is preserved. So <tt><span class=\"pre\">logger.info('smth')</span></tt> will be registered as <tt>info</tt> in Rollbar. If you configure daiquiri to log messages above a certain level, only those messages will be sent to Rollbar. You can also configure the <tt>RollbarOutput</tt> to only log messages for a level that is different from the global configuration.</p>\n<p>Exception should be logged with <tt>logger.exception</tt>. The stacktrace will then be sent to Rollbar with <tt>report_exc_info</tt>.</p>\n<p>To use it, just add <tt>RollbarOutput</tt> to the list of daiquiri outputs and use daiquiri normally:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">daiquiri_rollbar</span> <span class=\"kn\">import</span> <span class=\"n\">RollbarOutput</span>\n\n<span class=\"n\">rollbar_output</span> <span class=\"o\">=</span> <span class=\"n\">RollbarOutput</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"o\">=</span><span class=\"s1\">'access_token'</span><span class=\"p\">)</span>\n<span class=\"n\">daiquiri</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">(</span>\n    <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">,</span>\n    <span class=\"n\">outputs</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">rollbar_output</span><span class=\"p\">,)</span>\n<span class=\"p\">)</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">daiquiri</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Test'</span><span class=\"p\">)</span>\n</pre>\n<p>To log message of a certain level:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">daiquiri_rollbar</span> <span class=\"kn\">import</span> <span class=\"n\">RollbarOutput</span>\n\n<span class=\"n\">rollbar_output</span> <span class=\"o\">=</span> <span class=\"n\">RollbarOutput</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"o\">=</span><span class=\"s1\">'access_token'</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">WARNING</span><span class=\"p\">)</span>\n<span class=\"n\">daiquiri</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">(</span>\n    <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">,</span>\n    <span class=\"n\">outputs</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">rollbar_output</span><span class=\"p\">,)</span>\n<span class=\"p\">)</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">daiquiri</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Test'</span><span class=\"p\">)</span>\n</pre>\n<p>By default, log messages will be logged for production. To change the environment, build <tt>RollbarOutput</tt> like this:</p>\n<pre><span class=\"n\">rollbar_output</span> <span class=\"o\">=</span> <span class=\"n\">RollbarOutput</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"o\">=</span><span class=\"s1\">'access_token'</span><span class=\"p\">,</span> <span class=\"n\">environment</span><span class=\"o\">=</span><span class=\"s1\">'development'</span><span class=\"p\">)</span>\n</pre>\n<p>If you don\u2019t pass an access token, <tt>RollbarOutput</tt> will not log anything.</p>\n<p>Error messages from the <tt>rollbar</tt> module are not sent into Rollbar to prevent an infinite loop. They are sent to stderr instead. They will be logged by other outputs if you have any.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.2.1 (2017-08-15)</h3>\n<ul>\n<li>Improve documentation</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.2.0 (2017-08-15)</h3>\n<ul>\n<li>Log messages into rollbar</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3104465, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "2815f7e5bffa5642262edb8dfa228e70", "sha256": "fd56d7f7191f68f7db5603dab56e3fba821448a1e461360c1c7db167dac3a7df"}, "downloads": -1, "filename": "daiquiri-rollbar-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2815f7e5bffa5642262edb8dfa228e70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4614, "upload_time": "2017-08-15T13:29:07", "upload_time_iso_8601": "2017-08-15T13:29:07.986130Z", "url": "https://files.pythonhosted.org/packages/c4/3b/7237af7e92ab88f6128b1ca0db719bebf0da691925462b61033b4d717145/daiquiri-rollbar-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "a95cb518cd68e0572bf58f1005bae62e", "sha256": "b7839909613de3d6b4ce5c588e3bea06d72894714495219a0f15e865ee0af63d"}, "downloads": -1, "filename": "daiquiri-rollbar-0.2.1.tar.gz", "has_sig": false, "md5_digest": "a95cb518cd68e0572bf58f1005bae62e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4973, "upload_time": "2017-08-17T19:22:23", "upload_time_iso_8601": "2017-08-17T19:22:23.685819Z", "url": "https://files.pythonhosted.org/packages/f3/f7/fc71e4bb95f480a6dbbda4912662a0a61b3e09ec53c92483afd59b566670/daiquiri-rollbar-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a95cb518cd68e0572bf58f1005bae62e", "sha256": "b7839909613de3d6b4ce5c588e3bea06d72894714495219a0f15e865ee0af63d"}, "downloads": -1, "filename": "daiquiri-rollbar-0.2.1.tar.gz", "has_sig": false, "md5_digest": "a95cb518cd68e0572bf58f1005bae62e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4973, "upload_time": "2017-08-17T19:22:23", "upload_time_iso_8601": "2017-08-17T19:22:23.685819Z", "url": "https://files.pythonhosted.org/packages/f3/f7/fc71e4bb95f480a6dbbda4912662a0a61b3e09ec53c92483afd59b566670/daiquiri-rollbar-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:47 2020"}