{"info": {"author": "University of Brasilia at Gama", "author_email": "fabiomacedomendes@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries"], "description": ".. These are the Travis-CI and Coveralls badges for your repository. Replace\n   your *github_repository* and uncomment these lines by removing the leading\n   two dots.\n\n.. .. image:: https://travis-ci.org/*github_repository*.svg?branch=master\n    :target: https://travis-ci.org/*github_repository*\n\n.. .. image:: https://coveralls.io/repos/github/*github_repository*/badge.svg?branch=master\n    :target: https://coveralls.io/github/*github_repository*?branch=master\n\n\nThis project is a Python parser for the Aiken question format used in Moodle. \nAiken is a very simple format to represent multiple choice questions (https://docs.moodle.org/24/en/Aiken_format)\nIt accept two very similar syntaxes::\n\n    What is the correct answer to this question?\n    A. Is it this one?\n    B. Maybe this answer?\n    C. Possibly this one?\n    D. Must be this one!\n    ANSWER: D\n\nAnd this::\n\n    Which LMS has the most quiz import formats?\n    A) Moodle\n    B) ATutor\n    C) Claroline\n    D) Blackboard\n    E) WebCT\n    F) Ilias\n    ANSWER: A \n\n\nUsage\n=====\n\nThe aiken module simply expose the `load` and `dump` functions that respectively \nparse a question file and convert a parsed question object back to code. Let us\nparse a question string:\n\n>>> import aiken\n>>> question = aiken.load(\"\"\"\n... Is this a valid Aiken Question?\n... A. Yes\n... B. No\n... ANSWER: A\n... \"\"\")\n>>> question.options\n['Yes', 'No']\n\nNow, we make some changes and convert it back to a string of code:\n\n>>> question.options.append('Who knows?')\n>>> print(aiken.dump(question))\nIs this a valid Aiken Question?\nA. Yes\nB. No\nC. Who knows?\nANSWER: A\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aiken", "package_url": "https://pypi.org/project/aiken/", "platform": "any", "project_url": "https://pypi.org/project/aiken/", "project_urls": null, "release_url": "https://pypi.org/project/aiken/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "A short description for your project.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This project is a Python parser for the Aiken question format used in Moodle.\nAiken is a very simple format to represent multiple choice questions (<a href=\"https://docs.moodle.org/24/en/Aiken_format\" rel=\"nofollow\">https://docs.moodle.org/24/en/Aiken_format</a>)\nIt accept two very similar syntaxes:</p>\n<pre>What is the correct answer to this question?\nA. Is it this one?\nB. Maybe this answer?\nC. Possibly this one?\nD. Must be this one!\nANSWER: D\n</pre>\n<p>And this:</p>\n<pre>Which LMS has the most quiz import formats?\nA) Moodle\nB) ATutor\nC) Claroline\nD) Blackboard\nE) WebCT\nF) Ilias\nANSWER: A\n</pre>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The aiken module simply expose the <cite>load</cite> and <cite>dump</cite> functions that respectively\nparse a question file and convert a parsed question object back to code. Let us\nparse a question string:</p>\n<pre>&gt;&gt;&gt; import aiken\n&gt;&gt;&gt; question = aiken.load(\"\"\"\n... Is this a valid Aiken Question?\n... A. Yes\n... B. No\n... ANSWER: A\n... \"\"\")\n&gt;&gt;&gt; question.options\n['Yes', 'No']\n</pre>\n<p>Now, we make some changes and convert it back to a string of code:</p>\n<pre>&gt;&gt;&gt; question.options.append('Who knows?')\n&gt;&gt;&gt; print(aiken.dump(question))\nIs this a valid Aiken Question?\nA. Yes\nB. No\nC. Who knows?\nANSWER: A\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3187910, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "48fdb665b6877948558f48c97f71a044", "sha256": "7a348b068a9b78fbb9c0c8365fcbfdc4f95ba4f6107badcb8121746d6dd603ea"}, "downloads": -1, "filename": "aiken-0.1.0.tar.gz", "has_sig": false, "md5_digest": "48fdb665b6877948558f48c97f71a044", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4555, "upload_time": "2017-09-20T10:18:39", "upload_time_iso_8601": "2017-09-20T10:18:39.987412Z", "url": "https://files.pythonhosted.org/packages/d9/89/00f369882d73259863fdde10c455caae37875859679c01e68bcfff0ffa71/aiken-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "48fdb665b6877948558f48c97f71a044", "sha256": "7a348b068a9b78fbb9c0c8365fcbfdc4f95ba4f6107badcb8121746d6dd603ea"}, "downloads": -1, "filename": "aiken-0.1.0.tar.gz", "has_sig": false, "md5_digest": "48fdb665b6877948558f48c97f71a044", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4555, "upload_time": "2017-09-20T10:18:39", "upload_time_iso_8601": "2017-09-20T10:18:39.987412Z", "url": "https://files.pythonhosted.org/packages/d9/89/00f369882d73259863fdde10c455caae37875859679c01e68bcfff0ffa71/aiken-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:58 2020"}