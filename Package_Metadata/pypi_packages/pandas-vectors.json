{"info": {"author": "Richard Joyce", "author_email": "rjoyce@ucdavis.edu", "bugtrack_url": null, "classifiers": [], "description": "pandas_vectors\n===============\n\nThese are a bunch of convenience functions to help with the use of\nvectors stored in pandas dataframes.\n\n\nFor example, if you have a dataframe with columns of ``my_vector_x``,\n``my_vector_y`` and ``my_vector_z`` then you find yourself writing code like\nthis:\n\n.. code:: python\n\n  for vector in ['my_vector_x', 'my_vector_y', 'my_vector_z']:\n    df[vector[:-2] + '_new' + vector[-2:]] = func(df[vector])\n\nNow, you can write:\n\n.. code:: python\n\n  import pandas_vectors as pv\n  for vector,new in zip(pv.indexer('my_vector'), pv.indexer('my_vector_new')):\n    df[new] = func(df[vector])\n\nIn fact, you can simplify it more:\n\n.. code:: python\n\n  df = pv.transform(df, 'my_vector', '_new', func)\n\nAll the functions that take a vector as an input take a list of vectors.\n\n.. code:: python\n\n  df = pv.magnitude(df, ['my_vector', 'my_new_vector'])\n\nFunctions that take ``df`` as the first argument return the modified ``df``.\n\nDon't use ``_x``, ``_y`` and ``_z`` for your vector names? No problem.\n\n.. code:: python\n\n  # Set the vector suffixes to the argument given\n  pv.set_vectornames(['_u', '_v', '_w'])\n  # There are also some builtin shortcuts\n  pv.set_vectornames('xy') # ['_x', '_y']\n  pv.set_vectornames('xyz') # ['_x', '_y', '_z']\n  pv.set_vectornames('pyr') # ['_p', '_y', '_r']\n  pv.set_vectornames('PYR') # ['_pitch', '_yaw', '_roll']\n\nThis can also be set temporarily using ``with``:\n\n.. code:: python\n\n  pv.set_vectornames('xyz')\n  with pv.vectornames('xy'):\n    df = pv.magnitude(df, 'my_vector', '_magxy') # only xy magnitude\n  df = pv.magnitude(df, 'my_vector', '_mag') # xyz magnitude\n\nInstallation\n------------\n\n`pandas_vectors` is available in the PyPi repository as `pandas-vectors <https://pypi.python.org/pypi/pandas-vectors>`_.\n\n.. code:: bash\n\n  $ pip install pandas-vectors\n\n\nCHANGELOG\n---------\n\n*0.1.1* Bugfix on function/variable\n*0.1* Initial Release\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/richjoyce/pandas_vectors", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pandas-vectors", "package_url": "https://pypi.org/project/pandas-vectors/", "platform": "", "project_url": "https://pypi.org/project/pandas-vectors/", "project_urls": {"Homepage": "https://github.com/richjoyce/pandas_vectors"}, "release_url": "https://pypi.org/project/pandas-vectors/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "convenience functions for dealing with vectors in panda dataframes", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>These are a bunch of convenience functions to help with the use of\nvectors stored in pandas dataframes.</p>\n<p>For example, if you have a dataframe with columns of <tt>my_vector_x</tt>,\n<tt>my_vector_y</tt> and <tt>my_vector_z</tt> then you find yourself writing code like\nthis:</p>\n<pre><span class=\"k\">for</span> <span class=\"n\">vector</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">'my_vector_x'</span><span class=\"p\">,</span> <span class=\"s1\">'my_vector_y'</span><span class=\"p\">,</span> <span class=\"s1\">'my_vector_z'</span><span class=\"p\">]:</span>\n  <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"n\">vector</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s1\">'_new'</span> <span class=\"o\">+</span> <span class=\"n\">vector</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">:]]</span> <span class=\"o\">=</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"n\">vector</span><span class=\"p\">])</span>\n</pre>\n<p>Now, you can write:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas_vectors</span> <span class=\"k\">as</span> <span class=\"nn\">pv</span>\n<span class=\"k\">for</span> <span class=\"n\">vector</span><span class=\"p\">,</span><span class=\"n\">new</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">indexer</span><span class=\"p\">(</span><span class=\"s1\">'my_vector'</span><span class=\"p\">),</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">indexer</span><span class=\"p\">(</span><span class=\"s1\">'my_vector_new'</span><span class=\"p\">)):</span>\n  <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"n\">new</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"n\">vector</span><span class=\"p\">])</span>\n</pre>\n<p>In fact, you can simplify it more:</p>\n<pre><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"s1\">'my_vector'</span><span class=\"p\">,</span> <span class=\"s1\">'_new'</span><span class=\"p\">,</span> <span class=\"n\">func</span><span class=\"p\">)</span>\n</pre>\n<p>All the functions that take a vector as an input take a list of vectors.</p>\n<pre><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">magnitude</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'my_vector'</span><span class=\"p\">,</span> <span class=\"s1\">'my_new_vector'</span><span class=\"p\">])</span>\n</pre>\n<p>Functions that take <tt>df</tt> as the first argument return the modified <tt>df</tt>.</p>\n<p>Don\u2019t use <tt>_x</tt>, <tt>_y</tt> and <tt>_z</tt> for your vector names? No problem.</p>\n<pre><span class=\"c1\"># Set the vector suffixes to the argument given</span>\n<span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">set_vectornames</span><span class=\"p\">([</span><span class=\"s1\">'_u'</span><span class=\"p\">,</span> <span class=\"s1\">'_v'</span><span class=\"p\">,</span> <span class=\"s1\">'_w'</span><span class=\"p\">])</span>\n<span class=\"c1\"># There are also some builtin shortcuts</span>\n<span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">set_vectornames</span><span class=\"p\">(</span><span class=\"s1\">'xy'</span><span class=\"p\">)</span> <span class=\"c1\"># ['_x', '_y']</span>\n<span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">set_vectornames</span><span class=\"p\">(</span><span class=\"s1\">'xyz'</span><span class=\"p\">)</span> <span class=\"c1\"># ['_x', '_y', '_z']</span>\n<span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">set_vectornames</span><span class=\"p\">(</span><span class=\"s1\">'pyr'</span><span class=\"p\">)</span> <span class=\"c1\"># ['_p', '_y', '_r']</span>\n<span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">set_vectornames</span><span class=\"p\">(</span><span class=\"s1\">'PYR'</span><span class=\"p\">)</span> <span class=\"c1\"># ['_pitch', '_yaw', '_roll']</span>\n</pre>\n<p>This can also be set temporarily using <tt>with</tt>:</p>\n<pre><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">set_vectornames</span><span class=\"p\">(</span><span class=\"s1\">'xyz'</span><span class=\"p\">)</span>\n<span class=\"k\">with</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">vectornames</span><span class=\"p\">(</span><span class=\"s1\">'xy'</span><span class=\"p\">):</span>\n  <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">magnitude</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"s1\">'my_vector'</span><span class=\"p\">,</span> <span class=\"s1\">'_magxy'</span><span class=\"p\">)</span> <span class=\"c1\"># only xy magnitude</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">magnitude</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"s1\">'my_vector'</span><span class=\"p\">,</span> <span class=\"s1\">'_mag'</span><span class=\"p\">)</span> <span class=\"c1\"># xyz magnitude</span>\n</pre>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><cite>pandas_vectors</cite> is available in the PyPi repository as <a href=\"https://pypi.python.org/pypi/pandas-vectors\" rel=\"nofollow\">pandas-vectors</a>.</p>\n<pre>$ pip install pandas-vectors\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>CHANGELOG</h2>\n<p><em>0.1.1</em> Bugfix on function/variable\n<em>0.1</em> Initial Release</p>\n</div>\n\n          </div>"}, "last_serial": 3157362, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "9c1d6a9b8b4b268f9ed9e6713b1b73c4", "sha256": "fbbc06714c4e088692ad182b35a51d9d1d5c6e1c7ea6c66bfb6c6ff56294b98f"}, "downloads": -1, "filename": "pandas_vectors-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9c1d6a9b8b4b268f9ed9e6713b1b73c4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5372, "upload_time": "2016-12-14T07:27:04", "upload_time_iso_8601": "2016-12-14T07:27:04.057827Z", "url": "https://files.pythonhosted.org/packages/cb/70/ffca8a1b6fa797df0f9e159e651c59ee06954d5b0b13b75e0a9a7bfce7f0/pandas_vectors-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fa8ea0aac76d9876babdd58595ab8b17", "sha256": "091897e847c0dc2313a0a99f78f7190927a8b13813499fe9a933cf80a4700101"}, "downloads": -1, "filename": "pandas_vectors-0.1.tar.gz", "has_sig": false, "md5_digest": "fa8ea0aac76d9876babdd58595ab8b17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3690, "upload_time": "2016-12-14T07:27:06", "upload_time_iso_8601": "2016-12-14T07:27:06.172481Z", "url": "https://files.pythonhosted.org/packages/65/dc/5835cc513bd1d38a31ad159fc9344793563aceb3a103d6f8b0d5d0b0fd18/pandas_vectors-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9c59e15f49d29f6aee699e1f03c2636e", "sha256": "80ba14760e7a86026fe841f88255745c6691e989753dd3459e0a7bc4fe9130e9"}, "downloads": -1, "filename": "pandas_vectors-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9c59e15f49d29f6aee699e1f03c2636e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5696, "upload_time": "2017-09-07T20:38:39", "upload_time_iso_8601": "2017-09-07T20:38:39.946613Z", "url": "https://files.pythonhosted.org/packages/7b/e1/a9eb46db959040fa59adb5e6bdfcfb807286ed3560067f19934eb7fe16be/pandas_vectors-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3f5e6254059361270fa89d4223a3c08", "sha256": "12acc0158c34270ec3c5f31c283d6c0ac0d256fe644d3676e47d9611b78dfc4b"}, "downloads": -1, "filename": "pandas_vectors-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a3f5e6254059361270fa89d4223a3c08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3877, "upload_time": "2017-09-07T20:38:42", "upload_time_iso_8601": "2017-09-07T20:38:42.639073Z", "url": "https://files.pythonhosted.org/packages/21/ee/d1dd0c7371606998bbea75717c525ae6517326397180c6aa920e03512ca1/pandas_vectors-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c59e15f49d29f6aee699e1f03c2636e", "sha256": "80ba14760e7a86026fe841f88255745c6691e989753dd3459e0a7bc4fe9130e9"}, "downloads": -1, "filename": "pandas_vectors-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9c59e15f49d29f6aee699e1f03c2636e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5696, "upload_time": "2017-09-07T20:38:39", "upload_time_iso_8601": "2017-09-07T20:38:39.946613Z", "url": "https://files.pythonhosted.org/packages/7b/e1/a9eb46db959040fa59adb5e6bdfcfb807286ed3560067f19934eb7fe16be/pandas_vectors-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3f5e6254059361270fa89d4223a3c08", "sha256": "12acc0158c34270ec3c5f31c283d6c0ac0d256fe644d3676e47d9611b78dfc4b"}, "downloads": -1, "filename": "pandas_vectors-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a3f5e6254059361270fa89d4223a3c08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3877, "upload_time": "2017-09-07T20:38:42", "upload_time_iso_8601": "2017-09-07T20:38:42.639073Z", "url": "https://files.pythonhosted.org/packages/21/ee/d1dd0c7371606998bbea75717c525ae6517326397180c6aa920e03512ca1/pandas_vectors-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:26 2020"}