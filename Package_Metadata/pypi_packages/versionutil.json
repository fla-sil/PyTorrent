{"info": {"author": "Johan Nestaas", "author_email": "johannestaas@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Environment :: MacOS X", "Environment :: Win32 (MS Windows)", "Environment :: X11 Applications :: Qt", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python"], "description": "versionutil\n===========\n\nConvenience function for comparing Python system version\n\nInstallation\n------------\n\nFrom the project root directory::\n\n    $ python setup.py install\n\nUsage\n-----\n\nProvides compare_python version so that you can check against the major, minor and micro version::\n    \n    from versionutil import compare_python, PYTHON\n\n    # compare_python will return a boolean value against the current system version.\n    # PYTHON represents an instance of an object that is the current system version.\n\n    # It will check at the most significant value you signify. Default is equality check.\n    # True using 2.7.9:\n    PYTHON == '2'\n    PYTHON == '2.7'\n    PYTHON == '2.7.9'\n    compare_python('2')\n    compare_python('2.7')\n    compare_python('2.7.9')\n\n    # True using 3.4.4:\n    PYTHON == '3'\n    PYTHON == '3.4'\n    PYTHON == '3.4.4'\n    compare_python('3')\n    compare_python('3.4')\n    compare_python('3.4.4')\n\n    # False in 3.4.4:\n    PYTHON != '3.5'\n    PYTHON != '3.4.5'\n    compare_python('3.5')\n    compare_python('3.4.5')\n    \n    # Works with ints and even floats:\n    PYTHON == 2.7\n    compare_python(2.7)\n\n    # Different comparisons exist, default comp='=='\n    PYTHON != 3\n    PYTHON < 3\n    PYTHON < 3.0\n    PYTHON > 2.6\n    PYTHON >= 2.7\n    PYTHON < 3.1\n    compare_python(3, '!=')\n    compare_python(3, '<')\n    compare_python(3.0, '<')\n    compare_python(2.6, '>')\n    compare_python(2.7, '>=')\n    compare_python(3.1, comp='<')\n\n    # To test against a custom system version (ignore sys.version_info):\n    compare_python(5.4, sysv=(5, 4, 5))\n    # or to create a PYTHON like object for 5.4.5:\n    from versionutil import PythonVersion\n    pv545 = PythonVersion(sysv=(5, 4, 5))\n    if pv545 == 5.4: # True...\n\n    # Useful for handling imports, where otherwise pyfuture and pasteurize might not have what you need.\n    if PYTHON < 3:\n        from oldapi import OldAPI as API\n    elif PYTHON == 3.0 or PYTHON == 3.1:\n        from newapi import OtherAPI as API\n    elif PYTHON >= 3.2:\n        from newapi import NewAPI as API\n\nRelease Notes\n-------------\n\n:0.1.2:\n    Check is_instance(str) for 3.4 and basestring for <\n:0.1.1:\n    Added PYTHON global and PythonVersion class for easier usage (PYTHON < 2.7)\n:0.1.0:\n    Alpha finished, tested fully with tox\n:0.0.1:\n    Project created", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.bitbucket.org/johannestaas/versionutil", "keywords": "", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "versionutil", "package_url": "https://pypi.org/project/versionutil/", "platform": "", "project_url": "https://pypi.org/project/versionutil/", "project_urls": {"Homepage": "https://www.bitbucket.org/johannestaas/versionutil"}, "release_url": "https://pypi.org/project/versionutil/0.1.3/", "requires_dist": null, "requires_python": "", "summary": "Convenience functions for comparing Python system version", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Convenience function for comparing Python system version</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>From the project root directory:</p>\n<pre>$ python setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Provides compare_python version so that you can check against the major, minor and micro version:</p>\n<pre>from versionutil import compare_python, PYTHON\n\n# compare_python will return a boolean value against the current system version.\n# PYTHON represents an instance of an object that is the current system version.\n\n# It will check at the most significant value you signify. Default is equality check.\n# True using 2.7.9:\nPYTHON == '2'\nPYTHON == '2.7'\nPYTHON == '2.7.9'\ncompare_python('2')\ncompare_python('2.7')\ncompare_python('2.7.9')\n\n# True using 3.4.4:\nPYTHON == '3'\nPYTHON == '3.4'\nPYTHON == '3.4.4'\ncompare_python('3')\ncompare_python('3.4')\ncompare_python('3.4.4')\n\n# False in 3.4.4:\nPYTHON != '3.5'\nPYTHON != '3.4.5'\ncompare_python('3.5')\ncompare_python('3.4.5')\n\n# Works with ints and even floats:\nPYTHON == 2.7\ncompare_python(2.7)\n\n# Different comparisons exist, default comp='=='\nPYTHON != 3\nPYTHON &lt; 3\nPYTHON &lt; 3.0\nPYTHON &gt; 2.6\nPYTHON &gt;= 2.7\nPYTHON &lt; 3.1\ncompare_python(3, '!=')\ncompare_python(3, '&lt;')\ncompare_python(3.0, '&lt;')\ncompare_python(2.6, '&gt;')\ncompare_python(2.7, '&gt;=')\ncompare_python(3.1, comp='&lt;')\n\n# To test against a custom system version (ignore sys.version_info):\ncompare_python(5.4, sysv=(5, 4, 5))\n# or to create a PYTHON like object for 5.4.5:\nfrom versionutil import PythonVersion\npv545 = PythonVersion(sysv=(5, 4, 5))\nif pv545 == 5.4: # True...\n\n# Useful for handling imports, where otherwise pyfuture and pasteurize might not have what you need.\nif PYTHON &lt; 3:\n    from oldapi import OldAPI as API\nelif PYTHON == 3.0 or PYTHON == 3.1:\n    from newapi import OtherAPI as API\nelif PYTHON &gt;= 3.2:\n    from newapi import NewAPI as API\n</pre>\n</div>\n<div id=\"release-notes\">\n<h2>Release Notes</h2>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>0.1.2:</th><td>Check is_instance(str) for 3.4 and basestring for &lt;</td>\n</tr>\n<tr><th>0.1.1:</th><td>Added PYTHON global and PythonVersion class for easier usage (PYTHON &lt; 2.7)</td>\n</tr>\n<tr><th>0.1.0:</th><td>Alpha finished, tested fully with tox</td>\n</tr>\n<tr><th>0.0.1:</th><td>Project created</td>\n</tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 4088028, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2a894f915bacb589bf5bbdd7ff95d7bf", "sha256": "9ed8f191793159a40acdd4b02297c2729d0e9bd76e88cbc4cf44e6cae6b1368b"}, "downloads": -1, "filename": "versionutil-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2a894f915bacb589bf5bbdd7ff95d7bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5186, "upload_time": "2016-05-23T08:54:30", "upload_time_iso_8601": "2016-05-23T08:54:30.492527Z", "url": "https://files.pythonhosted.org/packages/da/ea/78a20756db27bf8c99ab7bddd936dc70c870c0158c4b598901f3d4b5a7af/versionutil-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "78d5d1c95af6ed114303df6462170012", "sha256": "28eea0d3c4f0fbdd175956a02c5dc28314708f539daefa5855ca498e9ee2d5af"}, "downloads": -1, "filename": "versionutil-0.1.1.tar.gz", "has_sig": false, "md5_digest": "78d5d1c95af6ed114303df6462170012", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5671, "upload_time": "2016-05-25T07:10:19", "upload_time_iso_8601": "2016-05-25T07:10:19.730040Z", "url": "https://files.pythonhosted.org/packages/b9/d7/908e3ed424641ffcee6b1dfbb6dbaed63130091d0a7d11b916dd1e3f5664/versionutil-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "19015084174b7c44a4fad9f1a2f9a959", "sha256": "786e5141dcafe8e19f82abf18d5c0c7c155ebfeaddf4c0e0697fd6b76f234463"}, "downloads": -1, "filename": "versionutil-0.1.2.tar.gz", "has_sig": false, "md5_digest": "19015084174b7c44a4fad9f1a2f9a959", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5720, "upload_time": "2016-05-25T07:19:25", "upload_time_iso_8601": "2016-05-25T07:19:25.026167Z", "url": "https://files.pythonhosted.org/packages/e3/7a/5877f904ba5b740ea9cf80cfe3316636ce5a0156138359c8bb9819d02dcb/versionutil-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "19ad9f0fb21be82f2417956750ad01f5", "sha256": "22aa2c880f479504fa6441b3fc3b7d15be8953cfcf7db00a55c197d2296fe02c"}, "downloads": -1, "filename": "versionutil-0.1.3.tar.gz", "has_sig": false, "md5_digest": "19ad9f0fb21be82f2417956750ad01f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5700, "upload_time": "2018-07-21T08:04:08", "upload_time_iso_8601": "2018-07-21T08:04:08.992686Z", "url": "https://files.pythonhosted.org/packages/6f/25/c64381e6578d58c6bafe86d129c1e6c00e1174ed85226c489922786a49e0/versionutil-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "19ad9f0fb21be82f2417956750ad01f5", "sha256": "22aa2c880f479504fa6441b3fc3b7d15be8953cfcf7db00a55c197d2296fe02c"}, "downloads": -1, "filename": "versionutil-0.1.3.tar.gz", "has_sig": false, "md5_digest": "19ad9f0fb21be82f2417956750ad01f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5700, "upload_time": "2018-07-21T08:04:08", "upload_time_iso_8601": "2018-07-21T08:04:08.992686Z", "url": "https://files.pythonhosted.org/packages/6f/25/c64381e6578d58c6bafe86d129c1e6c00e1174ed85226c489922786a49e0/versionutil-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:36:37 2020"}