{"info": {"author": "Gabriel Gonz\u00e1lez", "author_email": "zurg.cei@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "django-socialnetworks\n=====================\n\nInitially this package was intended to provide \"Log in with...\"\ncapabilities to Django projects, but slowly as it was included in some\nof my projects it has growth to be a simple but powerful API client for\nsome of the services that actually supports OAuth.\n\nThis package is built on top of the `Python Requests\nlibrary <http://docs.python-requests.org/>`__ and heavyly based/inspired\nin `django-socialregistration\napp <https://github.com/flashingpumpkin/django-socialregistration>`__\nbut with some improvements and needs required in my projects.\n\nInstallation\n------------\n\n.. code:: bash\n\n    # Default installation\n    $ pip install django-socialnetworks\n\n    # Install security egg\n    $ pip install django-socialnetworks[security]\n\nUsage\n-----\n\n#. Add ``socialnetworks`` and the service's apps that you require to\n   your ``INSTALLED_APPS``.\n\n   .. code:: python\n\n       # my_project/settings.py\n\n       INSTALLED_APPS = (\n           ...\n           ...\n           'socialnetworks',\n           'socialnetworks.facebook',\n           'socialnetworks.twitter'\n           ...\n           ...\n       )\n\n#. Set the ``SOCIALNETWORKS_CONFIGURATION`` dictionary.\n\n   .. code:: python\n\n       # my_project/settings.py\n\n       SOCIALNETWORKS_CONFIGURATION = {\n           'EMAIL_IS_USERNAME': False,\n           'FACEBOOK': {\n               'APP_ID': 'my-facebook-app-id',\n               'APP_SECRET': 'my-facebook-app-secret',\n               'SCOPE': ['first_name', 'last_name', 'username']\n           },\n           'TWITTER': {\n               'APP_ID': 'my-twitter-app-id',\n               'APP_SECRET': 'my-twitter-app-secret',\n               'SCOPE': ['name', 'screen_name']\n           },\n       }\n\n#. Add the allowed for login app backends to your\n   ``AUTHENTICATION_BACKENDS``.\n\n   .. code:: python\n\n       # my_project/settings.py\n\n       AUTHENTICATION_BACKENDS = (\n           ...\n           ...\n           'socialnetworks.facebook.backends.FacebookBackend',\n           'socialnetworks.twitter.backends.TwitterBackend',\n           ...\n           ...\n       )\n\n#. Add ``socialnetworks`` to your project urls.\n\n   .. code:: python\n\n       # my_project/urls.py\n\n       urlpatterns = patterns('',\n           ...\n           ...\n           url(r'^social/', include('socialnetworks.urls', namespace='socialnetwork')),\n           ...\n           ...\n       )\n\n#. Show ``Log in with...`` button in your templates.\n\n   .. code:: html\n\n       ...\n       ...\n       {% load facebook %}\n       ...\n       ...\n       {% facebook_login 'Button text' 'css_class' %}\n       ...\n       ...\n\n#. Request data from the service's API. Note that the clients **must be\n   initialized** with the proper OAuth profile.\n\n   .. code:: python\n\n       from socialnetworks.facebook.clients import FacebookClient\n\n       client = FacebookClient(user.facebookoauthprofile)\n       data = client.get('me', params={'fields': 'first_name,last_name'})\n       data['first_name']\n       >>> 'John'\n\nAvailable settings\n------------------\n\nGlobal:\n\n-  ``COOKIE_MAX_AGE``: The max age of the cookies if you are storing\n   social account data in cookies. Defaults to 900.\n-  ``EMAIL_IS_USERNAME``: Tell whether the email is used as username in\n   the site. Defaults to True.\n-  ``ACTIVATE_ALREADY_REGISTERED_USERS``: Tell wheter to activate\n   already registed but inactive users whose match a profile retrieved\n   from the service's API. This is useful if you implement registration\n   by sending an activation link and allow social login/registration at\n   the same time. Defaults to False.\n-  ``SETUP_TEMPLATE``: The name of the template used to render the setup\n   view if needed.\n-  ``SETUP_FORM_CLASS``: The name of the form class to be used to\n   complete the setup process if needed.\n\nApp specific:\n\n-  ``APP_ID``: The id of your app given by the service.\n-  ``APP_SECRET``: The secret key of your app given by the service.\n-  ``APP_ACCESS_TOKEN``: The access token of your app if required/given\n   by the service (Facebook).\n-  ``SCOPE``: A list of strings representing the scope of the tokens to\n   be generated, you must check the available scopesprovided by the\n   service you are using and it may require your app to be configured to\n   request these scopes. By default it tries to request the email in the\n   way it is provided specifically by each service.\n-  ``SESSION_KEY``: The key to be used to store the relevant OAuth\n   process data in the user's session. Defaults to 'dsn' + the\n   representative letters of each service, ie, 'dsnfb', 'dsntw', etc.\n-  ``SESSION_FIELDS``: The retrieved fields from the service's API that\n   will be stored in the user's session if you are using cookies to\n   store social account data.\n-  ``SETUP_URL_NAME``: A custom url name for redirect the users to\n   complete the account setup. This url name must be provided in the\n   format 'namespace:url-name' since it will be resolved by using\n   django.core.urlresolvers.reverse. This setting is useful if you want\n   to complete the setup in an AJAX view. When the user is redirected to\n   this url a 'dsnstp' cookie containing the user's data retrived from\n   the service's API wit a max age of two minutes (120 seconds). Note\n   that this cookie is a base64 encoded JSON dumped string.\n\nService specific:\n\n-  PayPal:\n\n   -  ``IS_LIVE``: Tell if your app is in live or sandbox mode to make\n      the requests to the proper API endpoints.\n\nPreload social account data in your views\n=========================================\n\nThis is useful if you need to display data retrieved from the service's\nAPI in your views, for example if you want to display the username and\nprofile picture of the current user in the service.\n\nFirst you need to set the fields that will be retrieved from the service\nand stored in a cookie (cookies are used to avoid the data not to be\nupdated if the user updates its profile in the service, cookies are by\ndefault set to live for 15 minutes before a new requests to the\nservice's API is made).\n\n.. code:: python\n\n    # my_project/settings.py\n\n    SOCIALNETWORKS_CONFIGURATION = {\n        ...\n        ...\n        'FACEBOOK': {\n            'APP_ID': 'my-facebook-app-id',\n            'APP_SECRET': 'my-facebook-app-secret',\n            'SCOPE': ['first_name', 'last_name', 'username'],\n            'SESSION_FIELDS': ['username', 'picture.type(normal)']\n        },\n        ...\n        ...\n    }\n\n**Note that since these methods make requests to the service's APIs is\nhighly probably that the applied views results in slower rendering or\ntimeout errors.**\n\n.. code:: python\n\n    # my_project/views.py\n\n    from socialnetworks.facebook.decorators import fetch_facebook_data\n    from socialnetworks.facebook.utils import read_facebook_data\n\n\n    class MyDecoratedView(TemplateView):\n        def get_context_data(self, **kwargs):\n            context = super(MyDecoratedView, self).get_context_data(**kwargs)\n\n            # Read the social data previously stored in a cookie and makes it\n            # available in the view's context.\n            context['facebook_data'] = read_facebook_data(self.request)\n\n            return context\n\n        # Prefetch the social data for the current authenticated user and store it\n        # in a cookie.\n        @method_decorator(fetch_facebook_data)\n        def dispatch(self, request, *args, **kwargs):\n            return super(MyDecoratedView, self).dispatch(request, *args, **kwargs)\n\nThen render the retrieved data in the view's template.\n\n.. code:: html\n\n    ...\n    ...\n    <span>{{ facebook_data.username }}</span>\n    <img src=\"{{ facebook_data.picture.data.url }}\" />\n    ...\n    ...\n\nMaking requests to the service's APIs\n-------------------------------------\n\nFirst you need to initialize a client, then call the proper ``get`` or\n``post`` method for the action you want to make passing the resource and\nthe parameters or the data tu retrive/put.\n\n**Nothe that this is a work in progress, GET requests should work ok,\nbut POST must have some caveats depending on the service.**\\ \\*\n\n.. code:: python\n\n    from socialnetwork.facebook.clients import FacebookClient\n\n\n    client = Facebook.client(user.facebookoauthprofile)\n\n    # Retrieve data\n    data = client.get('me', params={'fields': 'first_name', 'last_name'})\n    print data\n    >>> {'first_name': 'John', 'last_name': 'Smith'}\n\n    # Post data\n    client.post('me', data={'first_name': 'Juan'})\n    data = client.get('me', params={'fields': 'first_name', 'last_name'})\n    print data\n    >>> {'first_name': 'Juan', 'last_name': 'Smith'}", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gGonz/django-socialnetworks", "keywords": null, "license": "Apache License (2.0)", "maintainer": null, "maintainer_email": null, "name": "django-socialnetworks", "package_url": "https://pypi.org/project/django-socialnetworks/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-socialnetworks/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/gGonz/django-socialnetworks"}, "release_url": "https://pypi.org/project/django-socialnetworks/0.4.12/", "requires_dist": null, "requires_python": null, "summary": "Extends Django with \u201clog in\u201d and \u201cshare\u201d functionalities for the most common social networks.", "version": "0.4.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-socialnetworks\">\n<h2>django-socialnetworks</h2>\n<p>Initially this package was intended to provide \u201cLog in with\u2026\u201d\ncapabilities to Django projects, but slowly as it was included in some\nof my projects it has growth to be a simple but powerful API client for\nsome of the services that actually supports OAuth.</p>\n<p>This package is built on top of the <a href=\"http://docs.python-requests.org/\" rel=\"nofollow\">Python Requests\nlibrary</a> and heavyly based/inspired\nin <a href=\"https://github.com/flashingpumpkin/django-socialregistration\" rel=\"nofollow\">django-socialregistration\napp</a>\nbut with some improvements and needs required in my projects.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre><span class=\"c1\"># Default installation\n</span>$ pip install django-socialnetworks\n\n<span class=\"c1\"># Install security egg\n</span>$ pip install django-socialnetworks<span class=\"o\">[</span>security<span class=\"o\">]</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<ol>\n<li><p>Add <tt>socialnetworks</tt> and the service\u2019s apps that you require to\nyour <tt>INSTALLED_APPS</tt>.</p>\n<pre><span class=\"c1\"># my_project/settings.py</span>\n\n<span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'socialnetworks'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'socialnetworks.facebook'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'socialnetworks.twitter'</span>\n    <span class=\"o\">...</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n</li>\n<li><p>Set the <tt>SOCIALNETWORKS_CONFIGURATION</tt> dictionary.</p>\n<pre><span class=\"c1\"># my_project/settings.py</span>\n\n<span class=\"n\">SOCIALNETWORKS_CONFIGURATION</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'EMAIL_IS_USERNAME'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s1\">'FACEBOOK'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'APP_ID'</span><span class=\"p\">:</span> <span class=\"s1\">'my-facebook-app-id'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'APP_SECRET'</span><span class=\"p\">:</span> <span class=\"s1\">'my-facebook-app-secret'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'SCOPE'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'first_name'</span><span class=\"p\">,</span> <span class=\"s1\">'last_name'</span><span class=\"p\">,</span> <span class=\"s1\">'username'</span><span class=\"p\">]</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'TWITTER'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'APP_ID'</span><span class=\"p\">:</span> <span class=\"s1\">'my-twitter-app-id'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'APP_SECRET'</span><span class=\"p\">:</span> <span class=\"s1\">'my-twitter-app-secret'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'SCOPE'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'screen_name'</span><span class=\"p\">]</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n</li>\n<li><p>Add the allowed for login app backends to your\n<tt>AUTHENTICATION_BACKENDS</tt>.</p>\n<pre><span class=\"c1\"># my_project/settings.py</span>\n\n<span class=\"n\">AUTHENTICATION_BACKENDS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'socialnetworks.facebook.backends.FacebookBackend'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'socialnetworks.twitter.backends.TwitterBackend'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n</li>\n<li><p>Add <tt>socialnetworks</tt> to your project urls.</p>\n<pre><span class=\"c1\"># my_project/urls.py</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"n\">patterns</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^social/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'socialnetworks.urls'</span><span class=\"p\">,</span> <span class=\"n\">namespace</span><span class=\"o\">=</span><span class=\"s1\">'socialnetwork'</span><span class=\"p\">)),</span>\n    <span class=\"o\">...</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n</li>\n<li><p>Show <tt>Log in <span class=\"pre\">with...</span></tt> button in your templates.</p>\n<pre>...\n...\n{% load facebook %}\n...\n...\n{% facebook_login 'Button text' 'css_class' %}\n...\n...\n</pre>\n</li>\n<li><p>Request data from the service\u2019s API. Note that the clients <strong>must be\ninitialized</strong> with the proper OAuth profile.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">socialnetworks.facebook.clients</span> <span class=\"kn\">import</span> <span class=\"n\">FacebookClient</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">FacebookClient</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">facebookoauthprofile</span><span class=\"p\">)</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'me'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'fields'</span><span class=\"p\">:</span> <span class=\"s1\">'first_name,last_name'</span><span class=\"p\">})</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'first_name'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'John'</span>\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"available-settings\">\n<h3>Available settings</h3>\n<p>Global:</p>\n<ul>\n<li><tt>COOKIE_MAX_AGE</tt>: The max age of the cookies if you are storing\nsocial account data in cookies. Defaults to 900.</li>\n<li><tt>EMAIL_IS_USERNAME</tt>: Tell whether the email is used as username in\nthe site. Defaults to True.</li>\n<li><tt>ACTIVATE_ALREADY_REGISTERED_USERS</tt>: Tell wheter to activate\nalready registed but inactive users whose match a profile retrieved\nfrom the service\u2019s API. This is useful if you implement registration\nby sending an activation link and allow social login/registration at\nthe same time. Defaults to False.</li>\n<li><tt>SETUP_TEMPLATE</tt>: The name of the template used to render the setup\nview if needed.</li>\n<li><tt>SETUP_FORM_CLASS</tt>: The name of the form class to be used to\ncomplete the setup process if needed.</li>\n</ul>\n<p>App specific:</p>\n<ul>\n<li><tt>APP_ID</tt>: The id of your app given by the service.</li>\n<li><tt>APP_SECRET</tt>: The secret key of your app given by the service.</li>\n<li><tt>APP_ACCESS_TOKEN</tt>: The access token of your app if required/given\nby the service (Facebook).</li>\n<li><tt>SCOPE</tt>: A list of strings representing the scope of the tokens to\nbe generated, you must check the available scopesprovided by the\nservice you are using and it may require your app to be configured to\nrequest these scopes. By default it tries to request the email in the\nway it is provided specifically by each service.</li>\n<li><tt>SESSION_KEY</tt>: The key to be used to store the relevant OAuth\nprocess data in the user\u2019s session. Defaults to \u2018dsn\u2019 + the\nrepresentative letters of each service, ie, \u2018dsnfb\u2019, \u2018dsntw\u2019, etc.</li>\n<li><tt>SESSION_FIELDS</tt>: The retrieved fields from the service\u2019s API that\nwill be stored in the user\u2019s session if you are using cookies to\nstore social account data.</li>\n<li><tt>SETUP_URL_NAME</tt>: A custom url name for redirect the users to\ncomplete the account setup. This url name must be provided in the\nformat \u2018namespace:url-name\u2019 since it will be resolved by using\ndjango.core.urlresolvers.reverse. This setting is useful if you want\nto complete the setup in an AJAX view. When the user is redirected to\nthis url a \u2018dsnstp\u2019 cookie containing the user\u2019s data retrived from\nthe service\u2019s API wit a max age of two minutes (120 seconds). Note\nthat this cookie is a base64 encoded JSON dumped string.</li>\n</ul>\n<p>Service specific:</p>\n<ul>\n<li>PayPal:<ul>\n<li><tt>IS_LIVE</tt>: Tell if your app is in live or sandbox mode to make\nthe requests to the proper API endpoints.</li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"preload-social-account-data-in-your-views\">\n<h2>Preload social account data in your views</h2>\n<p>This is useful if you need to display data retrieved from the service\u2019s\nAPI in your views, for example if you want to display the username and\nprofile picture of the current user in the service.</p>\n<p>First you need to set the fields that will be retrieved from the service\nand stored in a cookie (cookies are used to avoid the data not to be\nupdated if the user updates its profile in the service, cookies are by\ndefault set to live for 15 minutes before a new requests to the\nservice\u2019s API is made).</p>\n<pre><span class=\"c1\"># my_project/settings.py</span>\n\n<span class=\"n\">SOCIALNETWORKS_CONFIGURATION</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"o\">...</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'FACEBOOK'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'APP_ID'</span><span class=\"p\">:</span> <span class=\"s1\">'my-facebook-app-id'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'APP_SECRET'</span><span class=\"p\">:</span> <span class=\"s1\">'my-facebook-app-secret'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'SCOPE'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'first_name'</span><span class=\"p\">,</span> <span class=\"s1\">'last_name'</span><span class=\"p\">,</span> <span class=\"s1\">'username'</span><span class=\"p\">],</span>\n        <span class=\"s1\">'SESSION_FIELDS'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'username'</span><span class=\"p\">,</span> <span class=\"s1\">'picture.type(normal)'</span><span class=\"p\">]</span>\n    <span class=\"p\">},</span>\n    <span class=\"o\">...</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">}</span>\n</pre>\n<p><strong>Note that since these methods make requests to the service\u2019s APIs is\nhighly probably that the applied views results in slower rendering or\ntimeout errors.</strong></p>\n<pre><span class=\"c1\"># my_project/views.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">socialnetworks.facebook.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">fetch_facebook_data</span>\n<span class=\"kn\">from</span> <span class=\"nn\">socialnetworks.facebook.utils</span> <span class=\"kn\">import</span> <span class=\"n\">read_facebook_data</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyDecoratedView</span><span class=\"p\">(</span><span class=\"n\">TemplateView</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_context_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">MyDecoratedView</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_context_data</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Read the social data previously stored in a cookie and makes it</span>\n        <span class=\"c1\"># available in the view's context.</span>\n        <span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s1\">'facebook_data'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">read_facebook_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">context</span>\n\n    <span class=\"c1\"># Prefetch the social data for the current authenticated user and store it</span>\n    <span class=\"c1\"># in a cookie.</span>\n    <span class=\"nd\">@method_decorator</span><span class=\"p\">(</span><span class=\"n\">fetch_facebook_data</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">dispatch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">MyDecoratedView</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dispatch</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre>\n<p>Then render the retrieved data in the view\u2019s template.</p>\n<pre>...\n...\n<span class=\"p\">&lt;</span><span class=\"nt\">span</span><span class=\"p\">&gt;</span>{{ facebook_data.username }}<span class=\"p\">&lt;/</span><span class=\"nt\">span</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">img</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"{{ facebook_data.picture.data.url }}\"</span> <span class=\"p\">/&gt;</span>\n...\n...\n</pre>\n<div id=\"making-requests-to-the-service-s-apis\">\n<h3>Making requests to the service\u2019s APIs</h3>\n<p>First you need to initialize a client, then call the proper <tt>get</tt> or\n<tt>post</tt> method for the action you want to make passing the resource and\nthe parameters or the data tu retrive/put.</p>\n<p><strong>Nothe that this is a work in progress, GET requests should work ok,\nbut POST must have some caveats depending on the service.</strong>*</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">socialnetwork.facebook.clients</span> <span class=\"kn\">import</span> <span class=\"n\">FacebookClient</span>\n\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Facebook</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">facebookoauthprofile</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Retrieve data</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'me'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'fields'</span><span class=\"p\">:</span> <span class=\"s1\">'first_name'</span><span class=\"p\">,</span> <span class=\"s1\">'last_name'</span><span class=\"p\">})</span>\n<span class=\"nb\">print</span> <span class=\"n\">data</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">{</span><span class=\"s1\">'first_name'</span><span class=\"p\">:</span> <span class=\"s1\">'John'</span><span class=\"p\">,</span> <span class=\"s1\">'last_name'</span><span class=\"p\">:</span> <span class=\"s1\">'Smith'</span><span class=\"p\">}</span>\n\n<span class=\"c1\"># Post data</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'me'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'first_name'</span><span class=\"p\">:</span> <span class=\"s1\">'Juan'</span><span class=\"p\">})</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'me'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'fields'</span><span class=\"p\">:</span> <span class=\"s1\">'first_name'</span><span class=\"p\">,</span> <span class=\"s1\">'last_name'</span><span class=\"p\">})</span>\n<span class=\"nb\">print</span> <span class=\"n\">data</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">{</span><span class=\"s1\">'first_name'</span><span class=\"p\">:</span> <span class=\"s1\">'Juan'</span><span class=\"p\">,</span> <span class=\"s1\">'last_name'</span><span class=\"p\">:</span> <span class=\"s1\">'Smith'</span><span class=\"p\">}</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2341289, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "bc545145a8ac627d4181f5c58c9480fc", "sha256": "e5cdcb4abc7c5e85f454812443afa0886e8b5404195d82c6bd90ca478d4cf781"}, "downloads": -1, "filename": "django-socialnetworks-0.2.0.tar.gz", "has_sig": false, "md5_digest": "bc545145a8ac627d4181f5c58c9480fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31006, "upload_time": "2014-07-07T23:53:28", "upload_time_iso_8601": "2014-07-07T23:53:28.655983Z", "url": "https://files.pythonhosted.org/packages/5d/05/7605fddb241521be96cfc7c981f107b88047070417435ab2d12386041621/django-socialnetworks-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "f99b3f72f8c057d00d6278ae40274243", "sha256": "61ca12a7085680955beb644bd0e3511bc37d70f91815d009f830f2343dc3ca7f"}, "downloads": -1, "filename": "django-socialnetworks-0.2.1.tar.gz", "has_sig": false, "md5_digest": "f99b3f72f8c057d00d6278ae40274243", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31611, "upload_time": "2014-07-08T00:05:52", "upload_time_iso_8601": "2014-07-08T00:05:52.567477Z", "url": "https://files.pythonhosted.org/packages/07/70/8e70c2ef81ac9d6a73757e4a4f661e3c34afd175f50114f9a9f689a7ee2f/django-socialnetworks-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "acb031dcacff2230c162bda4b4aa5d06", "sha256": "aa42eb8f92714cef49698cb3b774ca068e751c5b68e51bafa50447a8521d72b7"}, "downloads": -1, "filename": "django-socialnetworks-0.3.0.tar.gz", "has_sig": false, "md5_digest": "acb031dcacff2230c162bda4b4aa5d06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34404, "upload_time": "2014-08-01T01:49:00", "upload_time_iso_8601": "2014-08-01T01:49:00.999289Z", "url": "https://files.pythonhosted.org/packages/fe/d2/9a365720ce4091c70d430f15ed19ddf7b30ddb9a5dcea9635295595b8c39/django-socialnetworks-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "90b9559bd948ac90ad853d2e9988c74f", "sha256": "e7f2a07c99ab3312a60362acddf0fe45672de4d0114b8512324c428cd298796e"}, "downloads": -1, "filename": "django-socialnetworks-0.3.1.tar.gz", "has_sig": false, "md5_digest": "90b9559bd948ac90ad853d2e9988c74f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36304, "upload_time": "2014-09-08T22:06:51", "upload_time_iso_8601": "2014-09-08T22:06:51.890241Z", "url": "https://files.pythonhosted.org/packages/94/ac/9e65804584b07978a1ee4d873fa90560dd09569be321fd1138d640b7911a/django-socialnetworks-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "edafc5e3fb238792d9e1666c0fa9bb49", "sha256": "6fe87d644da4a016038227241bf6717d2f3d9a14b30268ef41cf59cf71e0f2d2"}, "downloads": -1, "filename": "django-socialnetworks-0.3.2.tar.gz", "has_sig": false, "md5_digest": "edafc5e3fb238792d9e1666c0fa9bb49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36294, "upload_time": "2014-09-09T21:02:56", "upload_time_iso_8601": "2014-09-09T21:02:56.609473Z", "url": "https://files.pythonhosted.org/packages/b1/18/f1e279ca2a0de9d1e3fc733bdf6b7d5cdedb929ed124fc0852367ce2783f/django-socialnetworks-0.3.2.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "c82df676a462e952ac803b309095d509", "sha256": "cd8139c2ca0bdcdb60a2120b205eee7c4494c7bd7548fcfe44bcd8a4008b9312"}, "downloads": -1, "filename": "django-socialnetworks-0.4.0.tar.gz", "has_sig": false, "md5_digest": "c82df676a462e952ac803b309095d509", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38195, "upload_time": "2014-09-11T22:09:09", "upload_time_iso_8601": "2014-09-11T22:09:09.868944Z", "url": "https://files.pythonhosted.org/packages/7b/81/594ce03cbee1149e4df5008d837fe3f6f741ff536f34ef1fc0a2ec659409/django-socialnetworks-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "8b11badcc9fcda2ca5029f031a0d0602", "sha256": "4b09f4242a208bc707e50d28ae2374b3701a374dd0b47668cdf621eb743e08e6"}, "downloads": -1, "filename": "django-socialnetworks-0.4.1.tar.gz", "has_sig": false, "md5_digest": "8b11badcc9fcda2ca5029f031a0d0602", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38214, "upload_time": "2014-09-12T00:27:18", "upload_time_iso_8601": "2014-09-12T00:27:18.858889Z", "url": "https://files.pythonhosted.org/packages/98/83/aeee6db4f2575b69b33e03a2cd219c01727fd80e87c31a2f577b23056f68/django-socialnetworks-0.4.1.tar.gz", "yanked": false}], "0.4.10": [{"comment_text": "", "digests": {"md5": "26e83cdd08a8d2bd3dc2bd92c74385f5", "sha256": "fdb559362de5aecc1db7c2e8631d7c1d4a1dd3f6dcb34816bed9700df0a6b8ac"}, "downloads": -1, "filename": "django-socialnetworks-0.4.10.tar.gz", "has_sig": false, "md5_digest": "26e83cdd08a8d2bd3dc2bd92c74385f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39260, "upload_time": "2015-04-30T22:42:28", "upload_time_iso_8601": "2015-04-30T22:42:28.223746Z", "url": "https://files.pythonhosted.org/packages/39/a6/87b3a57f2ac29f49c5b3d241c11392e45ba951a4620a9d06a48d166c5598/django-socialnetworks-0.4.10.tar.gz", "yanked": false}], "0.4.11": [{"comment_text": "", "digests": {"md5": "9a80eadf50255b25ec06920d909d92d3", "sha256": "2096c5ceac4b5deec6016fd0dd4bac0d795c5b9c395e86e379d1c65eef630589"}, "downloads": -1, "filename": "django-socialnetworks-0.4.11.tar.gz", "has_sig": false, "md5_digest": "9a80eadf50255b25ec06920d909d92d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43287, "upload_time": "2015-06-19T02:00:56", "upload_time_iso_8601": "2015-06-19T02:00:56.765765Z", "url": "https://files.pythonhosted.org/packages/ef/a9/b5153c89db92d29dfd94df027d2a7ee418a6a58946aea72989222e47d0c5/django-socialnetworks-0.4.11.tar.gz", "yanked": false}], "0.4.12": [{"comment_text": "", "digests": {"md5": "21c57debfbca3a2af1aa8ee577910bfa", "sha256": "85a273997117a3dbf412c080d4016f21d6cb3e0f72b8014b9715ec28b3f1b870"}, "downloads": -1, "filename": "django-socialnetworks-0.4.12.tar.gz", "has_sig": false, "md5_digest": "21c57debfbca3a2af1aa8ee577910bfa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43363, "upload_time": "2015-06-25T19:43:50", "upload_time_iso_8601": "2015-06-25T19:43:50.780735Z", "url": "https://files.pythonhosted.org/packages/c6/49/2e0cc067528f5b7f9214caefccae2a90ec715658d01a06c8da7b734f03a1/django-socialnetworks-0.4.12.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "2936a927a9e3da77ea26d4728f06c49c", "sha256": "2fc21510ac62c428fd3f84ae36ea0f1c924ef2381fdfc3c2e6e05ce48b6c0640"}, "downloads": -1, "filename": "django-socialnetworks-0.4.2.tar.gz", "has_sig": false, "md5_digest": "2936a927a9e3da77ea26d4728f06c49c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38260, "upload_time": "2014-09-15T20:42:34", "upload_time_iso_8601": "2014-09-15T20:42:34.731865Z", "url": "https://files.pythonhosted.org/packages/ab/51/0195dc067867d39a60c0a32de753d49c182d798c2f9dc5d9af1946efb328/django-socialnetworks-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "485befbe6c8e237bc9df15ca1a3e37de", "sha256": "5599055a6d2d7be2f9ee097aefa3796c1eded3b55c6790ef58697f0de1651d24"}, "downloads": -1, "filename": "django-socialnetworks-0.4.3.tar.gz", "has_sig": false, "md5_digest": "485befbe6c8e237bc9df15ca1a3e37de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38304, "upload_time": "2014-09-18T17:10:57", "upload_time_iso_8601": "2014-09-18T17:10:57.899750Z", "url": "https://files.pythonhosted.org/packages/bc/9e/9860d0ebee8bff6e13061cec05580de44eb3d865e07c789e53f8ce003802/django-socialnetworks-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "06c99234a8fab1c94772eb70a65ba690", "sha256": "3a41c380b27c8e949110f75dfadb2c8a0bbc86532b2bb4b89122d2dbc31b652f"}, "downloads": -1, "filename": "django-socialnetworks-0.4.4.tar.gz", "has_sig": false, "md5_digest": "06c99234a8fab1c94772eb70a65ba690", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38212, "upload_time": "2014-10-01T18:21:55", "upload_time_iso_8601": "2014-10-01T18:21:55.608884Z", "url": "https://files.pythonhosted.org/packages/56/8c/a3590f92bf694a3074e24ed0277226c99873b42a43e642eb8b6e6e31e079/django-socialnetworks-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "053434c87965ac17a5b2694ee3798eed", "sha256": "a6954471dfc5e784f5ce37ffded7dbd7d0459f0d64cb1f8cf7af8dce255b2103"}, "downloads": -1, "filename": "django-socialnetworks-0.4.5.tar.gz", "has_sig": false, "md5_digest": "053434c87965ac17a5b2694ee3798eed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38296, "upload_time": "2014-10-24T20:04:40", "upload_time_iso_8601": "2014-10-24T20:04:40.084945Z", "url": "https://files.pythonhosted.org/packages/a2/90/7ec00e1d673e0283ad57e81c9aa5cf8aa381d7a6e85bb8504f49041f6611/django-socialnetworks-0.4.5.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "dd0732df0e528046ef5c4f522d440769", "sha256": "1fced0b659ec3d0b0e9013c5e74c9f5b4467c1e66fa656b4929820e9d646dbbf"}, "downloads": -1, "filename": "django-socialnetworks-0.4.6.tar.gz", "has_sig": false, "md5_digest": "dd0732df0e528046ef5c4f522d440769", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38989, "upload_time": "2014-11-15T00:34:02", "upload_time_iso_8601": "2014-11-15T00:34:02.331458Z", "url": "https://files.pythonhosted.org/packages/ed/19/4b5dc50f241ddc4afc2ae6488f6a7e97b3e841309cef79ed332e9747127a/django-socialnetworks-0.4.6.tar.gz", "yanked": false}], "0.4.7": [{"comment_text": "", "digests": {"md5": "791923d78b2daf27d4500adac0878941", "sha256": "f2c5b7e1718dc6c9bcb19efd465fdefc9ada8a90d9bbbaceb5bdefe337eaabe3"}, "downloads": -1, "filename": "django-socialnetworks-0.4.7.tar.gz", "has_sig": false, "md5_digest": "791923d78b2daf27d4500adac0878941", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39113, "upload_time": "2014-11-28T17:52:43", "upload_time_iso_8601": "2014-11-28T17:52:43.843368Z", "url": "https://files.pythonhosted.org/packages/a1/3a/5a13497ddb72c74d3600c05575bee9bd39f2929ec56b547185b96db232d4/django-socialnetworks-0.4.7.tar.gz", "yanked": false}], "0.4.8": [{"comment_text": "", "digests": {"md5": "f46eb6a1943a7caf12335c6567f54861", "sha256": "d9748bd068094b7a78bce7d3f353ce9ad0f915aaeef551a530afb7ea2ec0c3b4"}, "downloads": -1, "filename": "django-socialnetworks-0.4.8.tar.gz", "has_sig": false, "md5_digest": "f46eb6a1943a7caf12335c6567f54861", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39263, "upload_time": "2015-04-15T21:42:44", "upload_time_iso_8601": "2015-04-15T21:42:44.348610Z", "url": "https://files.pythonhosted.org/packages/ab/68/27d0257e150f58453bb52174237bbd71f435fcee50a46348c8570b6cd39e/django-socialnetworks-0.4.8.tar.gz", "yanked": false}], "0.4.9": [{"comment_text": "", "digests": {"md5": "72c5aef781e557452cf6f63f945b1668", "sha256": "df1e5941fbe494cdc4b373fafb819218020f2afcced82aaa268be27e5f5f0d32"}, "downloads": -1, "filename": "django-socialnetworks-0.4.9.tar.gz", "has_sig": false, "md5_digest": "72c5aef781e557452cf6f63f945b1668", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39216, "upload_time": "2015-04-25T00:20:13", "upload_time_iso_8601": "2015-04-25T00:20:13.840165Z", "url": "https://files.pythonhosted.org/packages/a8/ec/59e74474f4bccfe5afe91726905edf96b7caf2dbe833432824b6a723ed15/django-socialnetworks-0.4.9.tar.gz", "yanked": false}], "0.5.0a1": [], "0.5.0a2": [{"comment_text": "", "digests": {"md5": "4ae2fe23e25485f46334feccdfb1a956", "sha256": "5f2c74ebe4f5c73002d5bd3bb99b47265861812d1f1add39cc9d2405382085df"}, "downloads": -1, "filename": "django-socialnetworks-0.5.0a2.tar.gz", "has_sig": false, "md5_digest": "4ae2fe23e25485f46334feccdfb1a956", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61474, "upload_time": "2015-07-18T02:11:26", "upload_time_iso_8601": "2015-07-18T02:11:26.135091Z", "url": "https://files.pythonhosted.org/packages/17/97/67148b80eb4bf6f1163b80f8f2a16a25080365bb7716b5cbeb6922783e92/django-socialnetworks-0.5.0a2.tar.gz", "yanked": false}], "0.5.0a3": [{"comment_text": "", "digests": {"md5": "360d67526c301a10d630543136c0b28f", "sha256": "bb26d95f2722ab94bb2a7b3eb9a4bf1da55f08b5ebcb8aff28024b3e1f5a8030"}, "downloads": -1, "filename": "django_socialnetworks-0.5.0a3-py2-none-any.whl", "has_sig": false, "md5_digest": "360d67526c301a10d630543136c0b28f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 87540, "upload_time": "2015-10-13T22:16:19", "upload_time_iso_8601": "2015-10-13T22:16:19.357534Z", "url": "https://files.pythonhosted.org/packages/36/c7/52af4e8b25c4366e6daa0204fcdea35c19c51419ddee36596b27d998eda3/django_socialnetworks-0.5.0a3-py2-none-any.whl", "yanked": false}], "0.5.0a4": [{"comment_text": "", "digests": {"md5": "7979aebd8690d7935e7854db96d52126", "sha256": "60c1e5723272feffe310c6472fd18ceb208a00aa81794e5bf982ae49bb0abb2d"}, "downloads": -1, "filename": "django_socialnetworks-0.5.0a4-py2-none-any.whl", "has_sig": false, "md5_digest": "7979aebd8690d7935e7854db96d52126", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 87483, "upload_time": "2015-10-16T19:16:51", "upload_time_iso_8601": "2015-10-16T19:16:51.890795Z", "url": "https://files.pythonhosted.org/packages/bd/89/5c58d5f9f80c3d25935b674b3bd822afa65cf3948f2ca2bd32b36a72ae88/django_socialnetworks-0.5.0a4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ee4525eae5806482429147c4357eb70", "sha256": "87ac1f6e1bd6d785e527111ec738fcb0104d3ef55634dc5651bfabe56bc08e98"}, "downloads": -1, "filename": "django-socialnetworks-0.5.0a4.tar.gz", "has_sig": false, "md5_digest": "7ee4525eae5806482429147c4357eb70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57136, "upload_time": "2015-10-16T19:33:29", "upload_time_iso_8601": "2015-10-16T19:33:29.231713Z", "url": "https://files.pythonhosted.org/packages/ef/ba/3f524ebc8ca48d64e6b636d11212e48bf80eb046dd64e4bb0eaeb0c513c0/django-socialnetworks-0.5.0a4.tar.gz", "yanked": false}], "0.5.0a5": [{"comment_text": "", "digests": {"md5": "5d31987e7b52b371c5dfa6843d137291", "sha256": "8da7bc5f420b412af914816b62e9ccfb065d425a23dd992829461c85fdeb76ae"}, "downloads": -1, "filename": "django_socialnetworks-0.5.0a5-py2-none-any.whl", "has_sig": false, "md5_digest": "5d31987e7b52b371c5dfa6843d137291", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 93857, "upload_time": "2015-11-05T00:06:00", "upload_time_iso_8601": "2015-11-05T00:06:00.752946Z", "url": "https://files.pythonhosted.org/packages/0d/f8/ed6f1c2d25eef71362c0cf4a0797e12ca9c5d2fc25f757b8aae73892e770/django_socialnetworks-0.5.0a5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9eb2fb283d0d90bb91c9add7b535786", "sha256": "a3dc29c2a189a3a877dd88cc774ad85738ed8d809f3185d4806a4d6773c81541"}, "downloads": -1, "filename": "django-socialnetworks-0.5.0a5.tar.gz", "has_sig": false, "md5_digest": "e9eb2fb283d0d90bb91c9add7b535786", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57132, "upload_time": "2015-11-05T00:06:11", "upload_time_iso_8601": "2015-11-05T00:06:11.144112Z", "url": "https://files.pythonhosted.org/packages/a9/5a/d9370c7cdb394d38e65204cfadb9c3e4cb738816a48bde65745c30b58681/django-socialnetworks-0.5.0a5.tar.gz", "yanked": false}], "0.5.0a6": [{"comment_text": "", "digests": {"md5": "9a5b03b6827e3dcad99981ea55f0a2cb", "sha256": "1cdccdbef4160500ff5e0983e24a7ff6e28098c4ad112f5bbf68a0871a112169"}, "downloads": -1, "filename": "django_socialnetworks-0.5.0a6-py2-none-any.whl", "has_sig": false, "md5_digest": "9a5b03b6827e3dcad99981ea55f0a2cb", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 93870, "upload_time": "2015-11-05T23:39:40", "upload_time_iso_8601": "2015-11-05T23:39:40.371264Z", "url": "https://files.pythonhosted.org/packages/69/94/016266a16453c2a1a6fe19c5a16c423b2ffda12a1c6f1f2945b1fc98ecb9/django_socialnetworks-0.5.0a6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80d1c88a196bb1300d4a124a3e26e21e", "sha256": "7ae2a6c377601307ebfb73d167d416ecacbd5c54bc2d1325ecee19b3503ed6d8"}, "downloads": -1, "filename": "django-socialnetworks-0.5.0a6.tar.gz", "has_sig": false, "md5_digest": "80d1c88a196bb1300d4a124a3e26e21e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57040, "upload_time": "2015-11-05T23:40:39", "upload_time_iso_8601": "2015-11-05T23:40:39.994323Z", "url": "https://files.pythonhosted.org/packages/11/38/fe7de5131bed9a57b68cdbd221dbda775eeb3e12561eda950725ccdd53ba/django-socialnetworks-0.5.0a6.tar.gz", "yanked": false}], "0.5.0a7": [{"comment_text": "", "digests": {"md5": "b19ef21ecb1ce14ed209058d8b6c46c6", "sha256": "e112b7c54105b036ee063784a8e1beab2528e6607a68b1965859a04d34d6be77"}, "downloads": -1, "filename": "django_socialnetworks-0.5.0a7-py2-none-any.whl", "has_sig": false, "md5_digest": "b19ef21ecb1ce14ed209058d8b6c46c6", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 93968, "upload_time": "2016-09-14T00:48:00", "upload_time_iso_8601": "2016-09-14T00:48:00.967711Z", "url": "https://files.pythonhosted.org/packages/14/9c/62568b8c97eb8cc2391c115708a47e1a4036a7adfafbb77abcb486194bfe/django_socialnetworks-0.5.0a7-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2e1a04b9d3e48dd09b6da7c6e17c7940", "sha256": "7772d5266ae71e14dd21ea36f2340d94c62e89e16838fcdbce65226ce4898ed3"}, "downloads": -1, "filename": "django-socialnetworks-0.5.0a7.tar.gz", "has_sig": false, "md5_digest": "2e1a04b9d3e48dd09b6da7c6e17c7940", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62078, "upload_time": "2016-09-14T00:47:57", "upload_time_iso_8601": "2016-09-14T00:47:57.981457Z", "url": "https://files.pythonhosted.org/packages/2e/82/26f810ee6634b61e6c1396b7d19b2a3bf141283d930c4ecf53a8aa8996a9/django-socialnetworks-0.5.0a7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "21c57debfbca3a2af1aa8ee577910bfa", "sha256": "85a273997117a3dbf412c080d4016f21d6cb3e0f72b8014b9715ec28b3f1b870"}, "downloads": -1, "filename": "django-socialnetworks-0.4.12.tar.gz", "has_sig": false, "md5_digest": "21c57debfbca3a2af1aa8ee577910bfa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43363, "upload_time": "2015-06-25T19:43:50", "upload_time_iso_8601": "2015-06-25T19:43:50.780735Z", "url": "https://files.pythonhosted.org/packages/c6/49/2e0cc067528f5b7f9214caefccae2a90ec715658d01a06c8da7b734f03a1/django-socialnetworks-0.4.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:07 2020"}