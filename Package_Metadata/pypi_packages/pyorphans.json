{"info": {"author": "Depop", "author_email": "dev@depop.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "pyorphans\n=========\n\n|PyPI Version| |Build Status|\n\n.. |PyPI Version| image:: http://img.shields.io/pypi/v/pyorphans.svg?style=flat\n   :target: https://pypi.python.org/pypi/pyorphans/\n   :alt: Latest PyPI version\n\n.. |Build Status| image:: https://circleci.com/gh/depop/pyorphans.svg?style=shield&circle-token=772399d6adddb34029f8360892979c06b36c4df8\n    :alt: Build Status\n\nFind dirs which appear to be broken python packages, i.e. dirs which\ncontain ``*.py`` files without the necessary ``__init__.py``\n\nSuggested use is to run as a `Pre-commit <https://pre-commit.com>`_ hook.\n\n\nWhy?\n----\n\nIn your main code it's unlikely to have orphan modules since they are not importable and likely a cause of visible errors.\n\nHowever in your unit tests, particularly if you have a lot of tests, you may find orphans. They go undetected because while developing you maybe pass the full path to the orphan to your test runner, and it works. But when you run the full suite of tests the orphans won't be found and so you have tests which aren't running!\n\nBy running ``pyorphans`` as a pre-commit hook you can catch the orphans and fix them immediately.\n\n\nCLI Usage\n---------\n\n.. code:: bash\n\n    pip install pyorphans\n\nThis will install a console script ``pyorphans``.\n\nTo run the checker, just pass it a list of the root packages in your project:\n\n.. code:: bash\n\n    pyorphans tests myproject\n\nIt returns output like:\n\n.. code:: bash\n\n\ttests/unit\n\t-> test_important_stuff.py\n\n\ttests/integration/important_stuff\n\ttests/integration/important_stuff/api\n\t-> test_views.py\n\nWe can see here that ``tests/unit`` dir is missing an ``__init__.py`` but contains ``test_important_stuff.py``\n\nAlso ``tests/integration/important_stuff`` and ``tests/integration/important_stuff/api`` dirs are both missing their ``__init__.py`` files. Inside both directories is found a single 'orphan' file, ``tests/integration/important_stuff/api/test_views.py``.\n\nSay you get an output like:\n\n.. code:: bash\n\n\tmyproject/scripts\n\t-> do_something.py\n\nMaybe ``scripts`` is not intended to be a package and ``do_something.py`` is a perfectly good standalone script that runs from the command-line.\n\nIn this case create a ``.pyorphans_ignore`` file in the root of your project (the dir that pyorphans will be run from), containing:\n\n.. code:: bash\n\n\tmyproject/scripts\n\nNow ``myproject/scripts`` (and all its subdirs) will be excluded from the search for orphans.\n\n\nPre-commit Hook\n---------------\n\nWe suggest using `Pre-commit <https://pre-commit.com>`_.\n\n.. code:: bash\n\n\tpip install pre-commit\n\nPyorphans is configured as a Pre-commit plugin. To apply it to your project, add a ``.pre-commit-config.yaml`` file to the root of your project like so:\n\n.. code:: yaml\n\n\trepos:\n\t  - repo: https://github.com/depop/pyorphans\n\t    rev: \"0.2.0\"\n\t    hooks:\n\t    - id: pyorphans\n\t      args:\n\t        - myproject\n\t        - tests\n\nNow every time you commit, Pyorphans will run and ask you to fix any that it finds. Pyorphans runs fast so you'll hardly notice it's there!", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/depop/pyorphans", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "pyorphans", "package_url": "https://pypi.org/project/pyorphans/", "platform": "", "project_url": "https://pypi.org/project/pyorphans/", "project_urls": {"Homepage": "https://github.com/depop/pyorphans"}, "release_url": "https://pypi.org/project/pyorphans/0.2.2/", "requires_dist": null, "requires_python": "", "summary": "Find dirs which appear to be broken python packages, as a pre-commit hook.", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/pyorphans/\" rel=\"nofollow\"><img alt=\"Latest PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/58cd912f605b0bd143b767700d00d1ff30d6def9/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f70796f727068616e732e7376673f7374796c653d666c6174\"></a> <img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ef3f98ca21c6e3b4fb546bd102b84a03e895e7d0/68747470733a2f2f636972636c6563692e636f6d2f67682f6465706f702f70796f727068616e732e7376673f7374796c653d736869656c6426636972636c652d746f6b656e3d37373233393964366164646462333430323966383336303839323937396330366233366334646638\"></p>\n<p>Find dirs which appear to be broken python packages, i.e. dirs which\ncontain <tt>*.py</tt> files without the necessary <tt>__init__.py</tt></p>\n<p>Suggested use is to run as a <a href=\"https://pre-commit.com\" rel=\"nofollow\">Pre-commit</a> hook.</p>\n<div id=\"why\">\n<h2>Why?</h2>\n<p>In your main code it\u2019s unlikely to have orphan modules since they are not importable and likely a cause of visible errors.</p>\n<p>However in your unit tests, particularly if you have a lot of tests, you may find orphans. They go undetected because while developing you maybe pass the full path to the orphan to your test runner, and it works. But when you run the full suite of tests the orphans won\u2019t be found and so you have tests which aren\u2019t running!</p>\n<p>By running <tt>pyorphans</tt> as a pre-commit hook you can catch the orphans and fix them immediately.</p>\n</div>\n<div id=\"cli-usage\">\n<h2>CLI Usage</h2>\n<pre>pip install pyorphans\n</pre>\n<p>This will install a console script <tt>pyorphans</tt>.</p>\n<p>To run the checker, just pass it a list of the root packages in your project:</p>\n<pre>pyorphans tests myproject\n</pre>\n<p>It returns output like:</p>\n<pre>tests/unit\n-&gt; test_important_stuff.py\n\ntests/integration/important_stuff\ntests/integration/important_stuff/api\n-&gt; test_views.py\n</pre>\n<p>We can see here that <tt>tests/unit</tt> dir is missing an <tt>__init__.py</tt> but contains <tt>test_important_stuff.py</tt></p>\n<p>Also <tt>tests/integration/important_stuff</tt> and <tt>tests/integration/important_stuff/api</tt> dirs are both missing their <tt>__init__.py</tt> files. Inside both directories is found a single \u2018orphan\u2019 file, <tt>tests/integration/important_stuff/api/test_views.py</tt>.</p>\n<p>Say you get an output like:</p>\n<pre>myproject/scripts\n-&gt; do_something.py\n</pre>\n<p>Maybe <tt>scripts</tt> is not intended to be a package and <tt>do_something.py</tt> is a perfectly good standalone script that runs from the command-line.</p>\n<p>In this case create a <tt>.pyorphans_ignore</tt> file in the root of your project (the dir that pyorphans will be run from), containing:</p>\n<pre>myproject/scripts\n</pre>\n<p>Now <tt>myproject/scripts</tt> (and all its subdirs) will be excluded from the search for orphans.</p>\n</div>\n<div id=\"pre-commit-hook\">\n<h2>Pre-commit Hook</h2>\n<p>We suggest using <a href=\"https://pre-commit.com\" rel=\"nofollow\">Pre-commit</a>.</p>\n<pre>pip install pre-commit\n</pre>\n<p>Pyorphans is configured as a Pre-commit plugin. To apply it to your project, add a <tt><span class=\"pre\">.pre-commit-config.yaml</span></tt> file to the root of your project like so:</p>\n<pre><span class=\"nt\">repos</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"nt\">repo</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">https://github.com/depop/pyorphans</span>\n    <span class=\"nt\">rev</span><span class=\"p\">:</span> <span class=\"s\">\"0.2.0\"</span>\n    <span class=\"nt\">hooks</span><span class=\"p\">:</span>\n    <span class=\"p-Indicator\">-</span> <span class=\"nt\">id</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">pyorphans</span>\n      <span class=\"nt\">args</span><span class=\"p\">:</span>\n        <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">myproject</span>\n        <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">tests</span>\n</pre>\n<p>Now every time you commit, Pyorphans will run and ask you to fix any that it finds. Pyorphans runs fast so you\u2019ll hardly notice it\u2019s there!</p>\n</div>\n\n          </div>"}, "last_serial": 6624544, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "254990eadda1b62ecc0cda954efd1190", "sha256": "a83eb39b820525a66fffb813dbb38e9ac6e7a38112f9559029e66a324e5c64a4"}, "downloads": -1, "filename": "pyorphans-0.1.0.tar.gz", "has_sig": false, "md5_digest": "254990eadda1b62ecc0cda954efd1190", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3122, "upload_time": "2019-02-12T14:07:42", "upload_time_iso_8601": "2019-02-12T14:07:42.100609Z", "url": "https://files.pythonhosted.org/packages/04/5a/52a0262153da6437904ea2ad2054d45fe70ae1c33dffa9779a15f6166698/pyorphans-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "53139afa64bf959e4c6e765981951bd4", "sha256": "ebbc4b8b83a14fb329daa4da01a0a0bf8159a8e09c5931191d8bb4e240961be8"}, "downloads": -1, "filename": "pyorphans-0.2.0.tar.gz", "has_sig": false, "md5_digest": "53139afa64bf959e4c6e765981951bd4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4220, "upload_time": "2019-02-12T14:48:51", "upload_time_iso_8601": "2019-02-12T14:48:51.389562Z", "url": "https://files.pythonhosted.org/packages/7e/5c/e4e83be8332642c56e385eec3f9f95790de777e4685ac78a48f4dc532ddd/pyorphans-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "32ee2836cd2047b1e9519a72fb24286a", "sha256": "d1fd0be70ba6421ac37fec90bbbab02ae02290d412751abd6d908d97642c489c"}, "downloads": -1, "filename": "pyorphans-0.2.1.tar.gz", "has_sig": false, "md5_digest": "32ee2836cd2047b1e9519a72fb24286a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4229, "upload_time": "2019-02-20T11:56:31", "upload_time_iso_8601": "2019-02-20T11:56:31.950785Z", "url": "https://files.pythonhosted.org/packages/6c/54/23a88ba640427fd8778687d29f1c1dcf1db8b1e4d68aea58302097f27a18/pyorphans-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "334cc0da540414612193ddb2057127ae", "sha256": "91eefe133d4258e23b6d1e767c8a3339178510f704c0fe39e7da037f176f9f57"}, "downloads": -1, "filename": "pyorphans-0.2.2.tar.gz", "has_sig": false, "md5_digest": "334cc0da540414612193ddb2057127ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4221, "upload_time": "2020-02-13T16:15:17", "upload_time_iso_8601": "2020-02-13T16:15:17.298545Z", "url": "https://files.pythonhosted.org/packages/ae/fa/2bc111a28eac8c53b8e98e6a5490de92d77428a0ce63086ac6aa3d7ed7ae/pyorphans-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "334cc0da540414612193ddb2057127ae", "sha256": "91eefe133d4258e23b6d1e767c8a3339178510f704c0fe39e7da037f176f9f57"}, "downloads": -1, "filename": "pyorphans-0.2.2.tar.gz", "has_sig": false, "md5_digest": "334cc0da540414612193ddb2057127ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4221, "upload_time": "2020-02-13T16:15:17", "upload_time_iso_8601": "2020-02-13T16:15:17.298545Z", "url": "https://files.pythonhosted.org/packages/ae/fa/2bc111a28eac8c53b8e98e6a5490de92d77428a0ce63086ac6aa3d7ed7ae/pyorphans-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:05 2020"}