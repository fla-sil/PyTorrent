{"info": {"author": "Gauthier Bastien", "author_email": "gauthier.bastien@imio.be", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Plone", "Framework :: Plone :: 4.3", "Programming Language :: Python", "Programming Language :: Python :: 2.7"], "description": ".. image:: https://travis-ci.org/IMIO/imio.prettylink.svg?branch=master\n   :target: https://travis-ci.org/IMIO/imio.prettylink\n\n.. image:: https://coveralls.io/repos/IMIO/imio.prettylink/badge.png?branch=master\n   :target: https://coveralls.io/r/IMIO/imio.prettylink?branch=master\n\n\n====================\nimio.prettylink\n====================\n\nManage generation of a pretty link to an element including coloration, leading icons, ...\n\nChangelog\n=========\n\n1.16 (2020-01-10)\n-----------------\n\n- While generating not viewable URL, avoid double blank before tag title.\n  [gbastien]\n- Adapted `PrettyLinkAdapter.CSSClasses` to manage `<a>` tag CSS classes and\n  `<span>` tag CSS classes. `additionalCSSClasses` are set on the `<a>` tag.\n  [gbastien]\n\n1.15 (2019-11-26)\n-----------------\n\n- Removed `unittest2`.\n  [gbastien]\n- Moved the state related CSS class from the `<a>/<div>` tag to the `<span>`\n  inner tag, this way it is easier to define CSS compatible for\n  `imio.prettylink` and `imio.history`.\n  [gbastien]\n\n1.14 (2019-05-16)\n-----------------\n\n- Use context.UID instead context in ram.cache cachekey.\n  [gbastien]\n- Moved rendering link HTML pattern to the link_pattern so it can be changed.\n  [gbastien]\n\n1.13 (2019-01-31)\n-----------------\n\n- Fixed `getLink` cachekey to use `SERVER_URL` instead `ACTUAL_URL` or value is\n  computed depending on current URL and it leads to be computed on several\n  places (dashboard, view, ...).  What we need is just to compute if application\n  is accessed thru different portal URL.\n  [gbastien]\n\n1.12 (2018-08-22)\n-----------------\n\n- Small fixes, `isort`, do not compute `icons_tag` at 2 places and\n  `self.notViewableHelpMessage` is always defined.\n  [gbastien]\n\n1.11 (2018-07-24)\n-----------------\n\n- Use `self.context.wl_isLocked()` to show locking icon so it does not break\n  on non lockable objects.\n  [gbastien]\n- Added boolean `display_tag_title` parameter.\n  [sgeulette]\n\n1.10 (2018-01-06)\n-----------------\n\n- Handle icon path correctly.\n  [sgeulette]\n\n1.9 (2017-02-17)\n----------------\n\n- Do simplify link to file the download by just appending the @@download to\n  the URL, this is enough if current context has a primary field.\n  [gbastien]\n\n1.8 (2017-02-13)\n----------------\n\n- Take `ACTUAL_URL` stored in the REQUEST into account in the `getLink` caching\n  cachekey to manage the fact that the URL to the element changed.  This can\n  be the case when accessing element thru different domains or if a parent\n  of the element was renamed.\n  [gbastien]\n\n1.7 (2017-02-02)\n----------------\n\n- Do not break in `PrettyLinkAdapter.getLink_cachekey` if context does not have\n  a workflow.\n  [gbastien]\n\n1.6 (2017-02-01)\n----------------\n\n- Added caching for `PrettyLinkAdapter.getLink`, the cachekey returns context,\n  modified, is_locked, review_state and every parameters defined in\n  `PrettyLinkAdapter.__init__`.\n  [gbastien]\n- Moved link computation from `PrettyLinkAdapter.getLink` that is now a cached\n  method to `PrettyLinkAdapter._getLink` so it is possible to call it directly\n  without caching or to override it.\n  [gbastien]\n- Finalized testing configuration to be able to test the getLink caching.\n  [gbastien]\n\n1.5 (2017-01-25)\n----------------\n\n- Added submethod _get_url that does the url computation.\n  Additionally it manages the fact that context is a Dexterity file and\n  append relevant part to the url (/@@download/...).\n  [gbastien]\n- Do not break if icon name contains special characters.\n  [gbastien]\n\n1.4 (2016-08-17)\n----------------\n\n- Added CSS class 'no_access' to <span> \"can_not_access_this_element\"\n  in addition to class 'discreet' so it may be customized if necessary.\n  [gbastien]\n- Initialize the 'title' attribute with contentValue, this way if a\n  content is cropped to be displayed (maxLength=...), the complete content\n  is displayed on hover.\n  [gbastien]\n\n1.3 (2016-04-20)\n----------------\n\n- Make sure quotes used in title are not breaking formatted strings,\n  we escape it by replacing quotes by it's HTML entity &#39;\n  [gbastien]\n\n1.2 (2016-02-16)\n----------------\n\n- If 'isViewable' is True (default), check that current user have\n  'View' on the linked element, if it is forced to False, leave it False.\n  This way, 'View' check to linked element is managed by imio.prettylink.\n  [gbastien]\n\n1.1 (2015-11-13)\n----------------\n\n- When using 'showColors', do not fail if element has no workflow.\n  [gbastien]\n- Makes 'showContentIcon' work, fixed several bugs.\n  [gbastien]\n\n1.0 (2015-07-14)\n----------------\n\n- Initial release.\n  [gbastien]", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/imio.prettylink", "keywords": "plone pretty link utils dev imio", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "imio.prettylink", "package_url": "https://pypi.org/project/imio.prettylink/", "platform": "", "project_url": "https://pypi.org/project/imio.prettylink/", "project_urls": {"Homepage": "http://pypi.python.org/pypi/imio.prettylink"}, "release_url": "https://pypi.org/project/imio.prettylink/1.16/", "requires_dist": null, "requires_python": "", "summary": "Manage generation of a pretty link to an element including coloration, leading icons, ...", "version": "1.16", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/IMIO/imio.prettylink\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/IMIO/imio.prettylink.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cb79a945a5db30b0cf29f180ba3db1c22f58165f/68747470733a2f2f7472617669732d63692e6f72672f494d494f2f696d696f2e7072657474796c696e6b2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/IMIO/imio.prettylink?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/IMIO/imio.prettylink/badge.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/32d38dc0a2a93f205245bea52874bbfe6e9c38a1/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f494d494f2f696d696f2e7072657474796c696e6b2f62616467652e706e673f6272616e63683d6d6173746572\"></a>\n<div id=\"imio-prettylink\">\n<h2>imio.prettylink</h2>\n<p>Manage generation of a pretty link to an element including coloration, leading icons, \u2026</p>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n<div id=\"id1\">\n<h4>1.16 (2020-01-10)</h4>\n<ul>\n<li>While generating not viewable URL, avoid double blank before tag title.\n[gbastien]</li>\n<li>Adapted <cite>PrettyLinkAdapter.CSSClasses</cite> to manage <cite>&lt;a&gt;</cite> tag CSS classes and\n<cite>&lt;span&gt;</cite> tag CSS classes. <cite>additionalCSSClasses</cite> are set on the <cite>&lt;a&gt;</cite> tag.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h4>1.15 (2019-11-26)</h4>\n<ul>\n<li>Removed <cite>unittest2</cite>.\n[gbastien]</li>\n<li>Moved the state related CSS class from the <cite>&lt;a&gt;/&lt;div&gt;</cite> tag to the <cite>&lt;span&gt;</cite>\ninner tag, this way it is easier to define CSS compatible for\n<cite>imio.prettylink</cite> and <cite>imio.history</cite>.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h4>1.14 (2019-05-16)</h4>\n<ul>\n<li>Use context.UID instead context in ram.cache cachekey.\n[gbastien]</li>\n<li>Moved rendering link HTML pattern to the link_pattern so it can be changed.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h4>1.13 (2019-01-31)</h4>\n<ul>\n<li>Fixed <cite>getLink</cite> cachekey to use <cite>SERVER_URL</cite> instead <cite>ACTUAL_URL</cite> or value is\ncomputed depending on current URL and it leads to be computed on several\nplaces (dashboard, view, \u2026).  What we need is just to compute if application\nis accessed thru different portal URL.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h4>1.12 (2018-08-22)</h4>\n<ul>\n<li>Small fixes, <cite>isort</cite>, do not compute <cite>icons_tag</cite> at 2 places and\n<cite>self.notViewableHelpMessage</cite> is always defined.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h4>1.11 (2018-07-24)</h4>\n<ul>\n<li>Use <cite>self.context.wl_isLocked()</cite> to show locking icon so it does not break\non non lockable objects.\n[gbastien]</li>\n<li>Added boolean <cite>display_tag_title</cite> parameter.\n[sgeulette]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h4>1.10 (2018-01-06)</h4>\n<ul>\n<li>Handle icon path correctly.\n[sgeulette]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h4>1.9 (2017-02-17)</h4>\n<ul>\n<li>Do simplify link to file the download by just appending the @@download to\nthe URL, this is enough if current context has a primary field.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h4>1.8 (2017-02-13)</h4>\n<ul>\n<li>Take <cite>ACTUAL_URL</cite> stored in the REQUEST into account in the <cite>getLink</cite> caching\ncachekey to manage the fact that the URL to the element changed.  This can\nbe the case when accessing element thru different domains or if a parent\nof the element was renamed.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h4>1.7 (2017-02-02)</h4>\n<ul>\n<li>Do not break in <cite>PrettyLinkAdapter.getLink_cachekey</cite> if context does not have\na workflow.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h4>1.6 (2017-02-01)</h4>\n<ul>\n<li>Added caching for <cite>PrettyLinkAdapter.getLink</cite>, the cachekey returns context,\nmodified, is_locked, review_state and every parameters defined in\n<cite>PrettyLinkAdapter.__init__</cite>.\n[gbastien]</li>\n<li>Moved link computation from <cite>PrettyLinkAdapter.getLink</cite> that is now a cached\nmethod to <cite>PrettyLinkAdapter._getLink</cite> so it is possible to call it directly\nwithout caching or to override it.\n[gbastien]</li>\n<li>Finalized testing configuration to be able to test the getLink caching.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h4>1.5 (2017-01-25)</h4>\n<ul>\n<li>Added submethod _get_url that does the url computation.\nAdditionally it manages the fact that context is a Dexterity file and\nappend relevant part to the url (/@@download/\u2026).\n[gbastien]</li>\n<li>Do not break if icon name contains special characters.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h4>1.4 (2016-08-17)</h4>\n<ul>\n<li>Added CSS class \u2018no_access\u2019 to &lt;span&gt; \u201ccan_not_access_this_element\u201d\nin addition to class \u2018discreet\u2019 so it may be customized if necessary.\n[gbastien]</li>\n<li>Initialize the \u2018title\u2019 attribute with contentValue, this way if a\ncontent is cropped to be displayed (maxLength=\u2026), the complete content\nis displayed on hover.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h4>1.3 (2016-04-20)</h4>\n<ul>\n<li>Make sure quotes used in title are not breaking formatted strings,\nwe escape it by replacing quotes by it\u2019s HTML entity '\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h4>1.2 (2016-02-16)</h4>\n<ul>\n<li>If \u2018isViewable\u2019 is True (default), check that current user have\n\u2018View\u2019 on the linked element, if it is forced to False, leave it False.\nThis way, \u2018View\u2019 check to linked element is managed by imio.prettylink.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h4>1.1 (2015-11-13)</h4>\n<ul>\n<li>When using \u2018showColors\u2019, do not fail if element has no workflow.\n[gbastien]</li>\n<li>Makes \u2018showContentIcon\u2019 work, fixed several bugs.\n[gbastien]</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h4>1.0 (2015-07-14)</h4>\n<ul>\n<li>Initial release.\n[gbastien]</li>\n</ul>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6430183, "releases": {"1.12": [{"comment_text": "", "digests": {"md5": "79de94d75057d0e67031d07836a718b2", "sha256": "514f727c822c48b0c41c1c648ef008cc789bd048e684ed434cc98027863e4c04"}, "downloads": -1, "filename": "imio.prettylink-1.12.tar.gz", "has_sig": false, "md5_digest": "79de94d75057d0e67031d07836a718b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21664, "upload_time": "2018-08-22T12:53:14", "upload_time_iso_8601": "2018-08-22T12:53:14.007382Z", "url": "https://files.pythonhosted.org/packages/8f/b8/07f8d1ef0ec7fac9141ceb4b3d3bc9a80630a572e639375205f6eae91b81/imio.prettylink-1.12.tar.gz", "yanked": false}], "1.13": [{"comment_text": "", "digests": {"md5": "36ca0e6fbe00de221491664480478d6c", "sha256": "eaf60f8bbe86126156a172c558d1ec96236e49b3d67db315ee7ebbe2af58a0e9"}, "downloads": -1, "filename": "imio.prettylink-1.13.tar.gz", "has_sig": false, "md5_digest": "36ca0e6fbe00de221491664480478d6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22426, "upload_time": "2019-01-31T10:30:42", "upload_time_iso_8601": "2019-01-31T10:30:42.557961Z", "url": "https://files.pythonhosted.org/packages/32/1d/92692a4bf68512e7b50dde397457f8130b315d6c61f2fcb9fd3a8d7f22e3/imio.prettylink-1.13.tar.gz", "yanked": false}], "1.14": [{"comment_text": "", "digests": {"md5": "58bea8a111ef38e58f7d5895bbd6af4d", "sha256": "4452bdc605a9cac30ea5c174ed48d2936ca9e6c6ecd9f8f9e24aa4b58d6b7592"}, "downloads": -1, "filename": "imio.prettylink-1.14.tar.gz", "has_sig": false, "md5_digest": "58bea8a111ef38e58f7d5895bbd6af4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22578, "upload_time": "2019-05-16T14:51:04", "upload_time_iso_8601": "2019-05-16T14:51:04.273865Z", "url": "https://files.pythonhosted.org/packages/05/a3/dd18b20318d964b1e9d47529966fafffec138b3dbe1b629bef9929ae1d96/imio.prettylink-1.14.tar.gz", "yanked": false}], "1.15": [{"comment_text": "", "digests": {"md5": "b035606c45b4092c1dc68160483a0f38", "sha256": "1675a2385fb65f5c0fa68255958de5886686c5b54057cf713f32face2b746ef7"}, "downloads": -1, "filename": "imio.prettylink-1.15.tar.gz", "has_sig": false, "md5_digest": "b035606c45b4092c1dc68160483a0f38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22639, "upload_time": "2019-11-26T15:46:14", "upload_time_iso_8601": "2019-11-26T15:46:14.233881Z", "url": "https://files.pythonhosted.org/packages/f1/f9/bd2b149c4b57f7c3c1063c371fb710d519f0de16554abfab5c97a6abbdb9/imio.prettylink-1.15.tar.gz", "yanked": false}], "1.16": [{"comment_text": "", "digests": {"md5": "62dd73e8d8a73fc7a8618b67925af7d1", "sha256": "43ac419f6f3281684787973be688be8236c9ea47146817200128f25ecde70b2f"}, "downloads": -1, "filename": "imio.prettylink-1.16.tar.gz", "has_sig": false, "md5_digest": "62dd73e8d8a73fc7a8618b67925af7d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22931, "upload_time": "2020-01-10T14:11:51", "upload_time_iso_8601": "2020-01-10T14:11:51.322020Z", "url": "https://files.pythonhosted.org/packages/bc/4b/6328278e8894c361111d83e21842cd013f178eb302b753169ae46981ba15/imio.prettylink-1.16.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "62dd73e8d8a73fc7a8618b67925af7d1", "sha256": "43ac419f6f3281684787973be688be8236c9ea47146817200128f25ecde70b2f"}, "downloads": -1, "filename": "imio.prettylink-1.16.tar.gz", "has_sig": false, "md5_digest": "62dd73e8d8a73fc7a8618b67925af7d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22931, "upload_time": "2020-01-10T14:11:51", "upload_time_iso_8601": "2020-01-10T14:11:51.322020Z", "url": "https://files.pythonhosted.org/packages/bc/4b/6328278e8894c361111d83e21842cd013f178eb302b753169ae46981ba15/imio.prettylink-1.16.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:38 2020"}