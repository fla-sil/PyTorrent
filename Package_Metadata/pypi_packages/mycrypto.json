{"info": {"author": "ZhiShi", "author_email": "foxfoxfox940@foxmail.com", "bugtrack_url": null, "classifiers": [], "description": "> A common cryptography encryption and decryption tools\n\n\n# Feature\n\n* Caesar \n* Affine \n* viger \n\n\n# how to use\n```\nimport mycrypto\n```\n\n## caesar\n\n* encryption\n```\n    mycrypto.Caesar_encode(plaintext,offset)\n```\n* decryption\n```\n    mycrypto.Caesar_decode(ciphertext,offset)\n```\n\n\n## Affine\n\n* encryption\n```\n    mycrypto.Affine_encode(plaintext,m,n)\n```\n* decryption\n```\n    mycrypto.Affine_decode(ciphertext,m,n)\n```\n\n## viger\n\n* encryption\n```\n mycrypto.viger_encode(plaintext,key)\n```\n* decryption\n    * if u know the key\n    ```\n    mycrypto.viger_decode(ciphertext,key)\n    ```\n    * else u can\n    ```\n    mycrypto.viger_nokey(ciphertext,choice)\n    ```\n    if choice==0 , then the tool will burte the key\n\n    if choice==1 , then the tool will use my dictionary to get the plaintext", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nightRainy/my_crypto", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mycrypto", "package_url": "https://pypi.org/project/mycrypto/", "platform": "", "project_url": "https://pypi.org/project/mycrypto/", "project_urls": {"Homepage": "https://github.com/nightRainy/my_crypto"}, "release_url": "https://pypi.org/project/mycrypto/1.3/", "requires_dist": null, "requires_python": "", "summary": "A common cryptography encryption and decryption tools", "version": "1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <blockquote>\n<p>A common cryptography encryption and decryption tools</p>\n</blockquote>\n<h1>Feature</h1>\n<ul>\n<li>Caesar</li>\n<li>Affine</li>\n<li>viger</li>\n</ul>\n<h1>how to use</h1>\n<pre><code>import mycrypto\n</code></pre>\n<h2>caesar</h2>\n<ul>\n<li>encryption</li>\n</ul>\n<pre><code>    mycrypto.Caesar_encode(plaintext,offset)\n</code></pre>\n<ul>\n<li>decryption</li>\n</ul>\n<pre><code>    mycrypto.Caesar_decode(ciphertext,offset)\n</code></pre>\n<h2>Affine</h2>\n<ul>\n<li>encryption</li>\n</ul>\n<pre><code>    mycrypto.Affine_encode(plaintext,m,n)\n</code></pre>\n<ul>\n<li>decryption</li>\n</ul>\n<pre><code>    mycrypto.Affine_decode(ciphertext,m,n)\n</code></pre>\n<h2>viger</h2>\n<ul>\n<li>encryption</li>\n</ul>\n<pre><code> mycrypto.viger_encode(plaintext,key)\n</code></pre>\n<ul>\n<li>\n<p>decryption</p>\n<ul>\n<li>if u know the key</li>\n</ul>\n<pre><code>mycrypto.viger_decode(ciphertext,key)\n</code></pre>\n<ul>\n<li>else u can</li>\n</ul>\n<pre><code>mycrypto.viger_nokey(ciphertext,choice)\n</code></pre>\n<p>if choice==0 , then the tool will burte the key</p>\n<p>if choice==1 , then the tool will use my dictionary to get the plaintext</p>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 5869590, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "61ff7f2245e6109592f8076df47f3bba", "sha256": "e144004ba3f8a7d2bf3d4fbfe98c05cf25bd7fb531d419f9e8adacd1d083d218"}, "downloads": -1, "filename": "mycrypto-1.0.tar.gz", "has_sig": false, "md5_digest": "61ff7f2245e6109592f8076df47f3bba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2597, "upload_time": "2019-09-16T12:08:00", "upload_time_iso_8601": "2019-09-16T12:08:00.562048Z", "url": "https://files.pythonhosted.org/packages/8a/66/03d87066cb5354970ec4bfd4d201248297ab30289dd0c022f3debaf9c18a/mycrypto-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "371cce80ddb4c3c90e27d61169552fa2", "sha256": "84ea9f5e8eb59a156567a3e46ed46d96b59fc521a8847ed97dac31dc7c64834b"}, "downloads": -1, "filename": "mycrypto-1.1.tar.gz", "has_sig": false, "md5_digest": "371cce80ddb4c3c90e27d61169552fa2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2611, "upload_time": "2019-09-16T12:22:39", "upload_time_iso_8601": "2019-09-16T12:22:39.907258Z", "url": "https://files.pythonhosted.org/packages/0a/65/d439d81205be17acfa529f7150778325526e29414f1f7d9238842102cdc9/mycrypto-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "b71352ae8ed6bcde2d2d1afeb1f423c3", "sha256": "ffba72e31444e3be84b0c23a095b261d222ebbc4a2ad2c53f0bcde42e0e821f3"}, "downloads": -1, "filename": "mycrypto-1.2.tar.gz", "has_sig": false, "md5_digest": "b71352ae8ed6bcde2d2d1afeb1f423c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2655, "upload_time": "2019-09-16T12:49:45", "upload_time_iso_8601": "2019-09-16T12:49:45.082779Z", "url": "https://files.pythonhosted.org/packages/1c/e5/ab689fad14bc422972be29e2421f1ccdab5e2f1745114c6fa436c5a5d8c1/mycrypto-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "a1b6ee12116649dad11719a67eace88c", "sha256": "852c09f7ec6edc505614820e4b92a97916688d9af1cd7e394cfb46bf82df5813"}, "downloads": -1, "filename": "mycrypto-1.3.tar.gz", "has_sig": false, "md5_digest": "a1b6ee12116649dad11719a67eace88c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3397, "upload_time": "2019-09-22T16:32:40", "upload_time_iso_8601": "2019-09-22T16:32:40.125240Z", "url": "https://files.pythonhosted.org/packages/cd/24/c2111e73222211709dfca61086ec74bfe28e2c975493485ca8395de1580a/mycrypto-1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a1b6ee12116649dad11719a67eace88c", "sha256": "852c09f7ec6edc505614820e4b92a97916688d9af1cd7e394cfb46bf82df5813"}, "downloads": -1, "filename": "mycrypto-1.3.tar.gz", "has_sig": false, "md5_digest": "a1b6ee12116649dad11719a67eace88c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3397, "upload_time": "2019-09-22T16:32:40", "upload_time_iso_8601": "2019-09-22T16:32:40.125240Z", "url": "https://files.pythonhosted.org/packages/cd/24/c2111e73222211709dfca61086ec74bfe28e2c975493485ca8395de1580a/mycrypto-1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:35 2020"}