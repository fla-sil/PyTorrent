{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "Intended Audience :: Telecommunications Industry", "Operating System :: Unix", "Programming Language :: Python", "Topic :: Scientific/Engineering", "Topic :: Software Development"], "description": "\n\n[![Build Status](https://secure.travis-ci.org/veeresht/CommPy.svg?branch=master)](https://secure.travis-ci.org/veeresht/CommPy)\n[![Coverage](https://coveralls.io/repos/veeresht/CommPy/badge.svg)](https://coveralls.io/r/veeresht/CommPy)\n[![PyPi](https://badge.fury.io/py/scikit-commpy.svg)](https://badge.fury.io/py/scikit-commpy)\n[![Docs](https://readthedocs.org/projects/commpy/badge/?version=latest)](http://commpy.readthedocs.io/en/latest/?badge=latest)\n\nCommPy\n======\n\nCommPy is an open source toolkit implementing digital communications algorithms\nin Python using NumPy and SciPy.\n\nObjectives\n----------\n- To provide readable and useable implementations of algorithms used in the research, design and implementation of digital communication systems.\n\nAvailable Features\n------------------\n[Channel Coding](https://github.com/veeresht/CommPy/tree/master/commpy/channelcoding)\n--------------\n- Encoder for Convolutional Codes (Polynomial, Recursive Systematic). Supports all rates and puncture matrices.\n- Viterbi Decoder for Convolutional Codes (Hard Decision Output).\n- MAP Decoder for Convolutional Codes (Based on the BCJR algorithm).\n- Encoder for a rate-1/3 systematic parallel concatenated Turbo Code.\n- Turbo Decoder for a rate-1/3 systematic parallel concatenated turbo code (Based on the MAP decoder/BCJR algorithm).\n- Binary Galois Field GF(2^m) with minimal polynomials and cyclotomic cosets.\n- Create all possible generator polynomials for a (n,k) cyclic code.\n- Random Interleavers and De-interleavers.\n- Belief Propagation (BP) Decoder and triangular systematic encoder for LDPC Codes.\n\n[Channel Models](https://github.com/veeresht/CommPy/blob/master/commpy/channels.py)\n--------------\n- SISO Channel with Rayleigh or Rician fading.\n- MIMO Channel with Rayleigh or Rician fading.\n- Binary Erasure Channel (BEC)\n- Binary Symmetric Channel (BSC)\n- Binary AWGN Channel (BAWGNC)\n\n[Filters](https://github.com/veeresht/CommPy/blob/master/commpy/filters.py)\n-------\n- Rectangular\n- Raised Cosine (RC), Root Raised Cosine (RRC)\n- Gaussian\n\n[Impairments](https://github.com/veeresht/CommPy/blob/master/commpy/impairments.py)\n-----------\n- Carrier Frequency Offset (CFO)\n\n[Modulation/Demodulation](https://github.com/veeresht/CommPy/blob/master/commpy/modulation.py)\n-----------------------\n- Phase Shift Keying (PSK)\n- Quadrature Amplitude Modulation (QAM)\n- OFDM Tx/Rx signal processing\n- MIMO Maximum Likelihood (ML) Detection.\n- MIMO K-best Schnorr-Euchner Detection.\n- Convert channel matrix to Bit-level representation.\n- Computation of LogLikelihood ratio using max-log approximation.\n\n[Sequences](https://github.com/veeresht/CommPy/blob/master/commpy/sequences.py)\n---------\n- PN Sequence\n- Zadoff-Chu (ZC) Sequence\n\n[Utilities](https://github.com/veeresht/CommPy/blob/master/commpy/utilities.py)\n---------\n- Decimal to bit-array, bit-array to decimal.\n- Hamming distance, Euclidean distance.\n- Upsample\n- Power of a discrete-time signal\n\n[Links](https://github.com/veeresht/CommPy/blob/master/commpy/links.py)\n-----\n- Estimate the BER performance of a link model with Monte Carlo simulation.\n- Link model object.\n- Helper function for MIMO Iteration Detection and Decoding scheme.\n\nFAQs\n----\nWhy are you developing this?\n----------------------------\nDuring my coursework in communication theory and systems at UCSD, I realized that the best way to actually learn and understand the theory is to try and implement ''the Math'' in practice :). Having used Scipy before, I thought there should be a similar package for Digital Communications in Python. This is a start!\n\nWhat programming languages do you use?\n--------------------------------------\nCommPy uses Python as its base programming language and python packages like NumPy, SciPy and Matplotlib.\n\nHow can I contribute?\n---------------------\nImplement any feature you want and send me a pull request :). If you want to suggest new features or discuss anything related to CommPy, please get in touch with me (veeresht@gmail.com).\n\nHow do I use CommPy?\n--------------------\nRequirements/Dependencies\n-------------------------\n- python 3.2 or above\n- numpy 1.10 or above\n- scipy 0.15 or above\n- matplotlib 1.4 or above\n- nose 1.3 or above\n\nInstallation\n------------\n\n- To use the released version on PyPi, use pip to install as follows::\n```\n$ pip install scikit-commpy\n```\n- To work with the development branch, clone from github and install as follows::\n```\n$ git clone https://github.com/veeresht/CommPy.git\n$ cd CommPy\n$ python setup.py install\n```\n- conda version is curently outdated but v0.3 is still available using::\n```\n$ conda install -c https://conda.binstar.org/veeresht scikit-commpy\n```\n\nCiting CommPy\n-------------\nIf you use CommPy for a publication, presentation or a demo, I request you to please cite CommPy as follows:\n\nVeeresh Taranalli, \"CommPy: Digital Communication with Python, version 0.3.0. Available at https://github.com/veeresht/CommPy\", 2015.\n\nI would also greatly appreciate your feedback if you have found CommPy useful. Just send me a mail: veeresht@gmail.com\n\nFor more details on CommPy, please visit http://veeresht.github.com/CommPy\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://veeresht.github.com/CommPy", "keywords": "", "license": "BSD 3-Clause", "maintainer": "Veeresh Taranalli & Bastien Trotobas", "maintainer_email": "veeresht@gmail.com", "name": "scikit-commpy", "package_url": "https://pypi.org/project/scikit-commpy/", "platform": "", "project_url": "https://pypi.org/project/scikit-commpy/", "project_urls": {"Homepage": "http://veeresht.github.com/CommPy"}, "release_url": "https://pypi.org/project/scikit-commpy/0.5.0/", "requires_dist": ["numpy", "scipy", "matplotlib"], "requires_python": ">=3.2", "summary": "Digital Communication Algorithms with Python", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://secure.travis-ci.org/veeresht/CommPy\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fe393c2657448e765b19c0596682538fb2234fe8/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f76656572657368742f436f6d6d50792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/veeresht/CommPy\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c42fd133cd4296cfd0c7c52dc93675e7f94c2a2e/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f76656572657368742f436f6d6d50792f62616467652e737667\"></a>\n<a href=\"https://badge.fury.io/py/scikit-commpy\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6c207f916ebd7aec42bc5e074abfb4664bde7b24/68747470733a2f2f62616467652e667572792e696f2f70792f7363696b69742d636f6d6d70792e737667\"></a>\n<a href=\"http://commpy.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Docs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4d3a887c99fcc61157b9accfd59e736acd01f8c5/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f636f6d6d70792f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<h1>CommPy</h1>\n<p>CommPy is an open source toolkit implementing digital communications algorithms\nin Python using NumPy and SciPy.</p>\n<h2>Objectives</h2>\n<ul>\n<li>To provide readable and useable implementations of algorithms used in the research, design and implementation of digital communication systems.</li>\n</ul>\n<h2>Available Features</h2>\n<h2><a href=\"https://github.com/veeresht/CommPy/tree/master/commpy/channelcoding\" rel=\"nofollow\">Channel Coding</a></h2>\n<ul>\n<li>Encoder for Convolutional Codes (Polynomial, Recursive Systematic). Supports all rates and puncture matrices.</li>\n<li>Viterbi Decoder for Convolutional Codes (Hard Decision Output).</li>\n<li>MAP Decoder for Convolutional Codes (Based on the BCJR algorithm).</li>\n<li>Encoder for a rate-1/3 systematic parallel concatenated Turbo Code.</li>\n<li>Turbo Decoder for a rate-1/3 systematic parallel concatenated turbo code (Based on the MAP decoder/BCJR algorithm).</li>\n<li>Binary Galois Field GF(2^m) with minimal polynomials and cyclotomic cosets.</li>\n<li>Create all possible generator polynomials for a (n,k) cyclic code.</li>\n<li>Random Interleavers and De-interleavers.</li>\n<li>Belief Propagation (BP) Decoder and triangular systematic encoder for LDPC Codes.</li>\n</ul>\n<h2><a href=\"https://github.com/veeresht/CommPy/blob/master/commpy/channels.py\" rel=\"nofollow\">Channel Models</a></h2>\n<ul>\n<li>SISO Channel with Rayleigh or Rician fading.</li>\n<li>MIMO Channel with Rayleigh or Rician fading.</li>\n<li>Binary Erasure Channel (BEC)</li>\n<li>Binary Symmetric Channel (BSC)</li>\n<li>Binary AWGN Channel (BAWGNC)</li>\n</ul>\n<h2><a href=\"https://github.com/veeresht/CommPy/blob/master/commpy/filters.py\" rel=\"nofollow\">Filters</a></h2>\n<ul>\n<li>Rectangular</li>\n<li>Raised Cosine (RC), Root Raised Cosine (RRC)</li>\n<li>Gaussian</li>\n</ul>\n<h2><a href=\"https://github.com/veeresht/CommPy/blob/master/commpy/impairments.py\" rel=\"nofollow\">Impairments</a></h2>\n<ul>\n<li>Carrier Frequency Offset (CFO)</li>\n</ul>\n<h2><a href=\"https://github.com/veeresht/CommPy/blob/master/commpy/modulation.py\" rel=\"nofollow\">Modulation/Demodulation</a></h2>\n<ul>\n<li>Phase Shift Keying (PSK)</li>\n<li>Quadrature Amplitude Modulation (QAM)</li>\n<li>OFDM Tx/Rx signal processing</li>\n<li>MIMO Maximum Likelihood (ML) Detection.</li>\n<li>MIMO K-best Schnorr-Euchner Detection.</li>\n<li>Convert channel matrix to Bit-level representation.</li>\n<li>Computation of LogLikelihood ratio using max-log approximation.</li>\n</ul>\n<h2><a href=\"https://github.com/veeresht/CommPy/blob/master/commpy/sequences.py\" rel=\"nofollow\">Sequences</a></h2>\n<ul>\n<li>PN Sequence</li>\n<li>Zadoff-Chu (ZC) Sequence</li>\n</ul>\n<h2><a href=\"https://github.com/veeresht/CommPy/blob/master/commpy/utilities.py\" rel=\"nofollow\">Utilities</a></h2>\n<ul>\n<li>Decimal to bit-array, bit-array to decimal.</li>\n<li>Hamming distance, Euclidean distance.</li>\n<li>Upsample</li>\n<li>Power of a discrete-time signal</li>\n</ul>\n<h2><a href=\"https://github.com/veeresht/CommPy/blob/master/commpy/links.py\" rel=\"nofollow\">Links</a></h2>\n<ul>\n<li>Estimate the BER performance of a link model with Monte Carlo simulation.</li>\n<li>Link model object.</li>\n<li>Helper function for MIMO Iteration Detection and Decoding scheme.</li>\n</ul>\n<h2>FAQs</h2>\n<h2>Why are you developing this?</h2>\n<p>During my coursework in communication theory and systems at UCSD, I realized that the best way to actually learn and understand the theory is to try and implement ''the Math'' in practice :). Having used Scipy before, I thought there should be a similar package for Digital Communications in Python. This is a start!</p>\n<h2>What programming languages do you use?</h2>\n<p>CommPy uses Python as its base programming language and python packages like NumPy, SciPy and Matplotlib.</p>\n<h2>How can I contribute?</h2>\n<p>Implement any feature you want and send me a pull request :). If you want to suggest new features or discuss anything related to CommPy, please get in touch with me (<a href=\"mailto:veeresht@gmail.com\">veeresht@gmail.com</a>).</p>\n<h2>How do I use CommPy?</h2>\n<h2>Requirements/Dependencies</h2>\n<ul>\n<li>python 3.2 or above</li>\n<li>numpy 1.10 or above</li>\n<li>scipy 0.15 or above</li>\n<li>matplotlib 1.4 or above</li>\n<li>nose 1.3 or above</li>\n</ul>\n<h2>Installation</h2>\n<ul>\n<li>To use the released version on PyPi, use pip to install as follows::</li>\n</ul>\n<pre><code>$ pip install scikit-commpy\n</code></pre>\n<ul>\n<li>To work with the development branch, clone from github and install as follows::</li>\n</ul>\n<pre><code>$ git clone https://github.com/veeresht/CommPy.git\n$ cd CommPy\n$ python setup.py install\n</code></pre>\n<ul>\n<li>conda version is curently outdated but v0.3 is still available using::</li>\n</ul>\n<pre><code>$ conda install -c https://conda.binstar.org/veeresht scikit-commpy\n</code></pre>\n<h2>Citing CommPy</h2>\n<p>If you use CommPy for a publication, presentation or a demo, I request you to please cite CommPy as follows:</p>\n<p>Veeresh Taranalli, \"CommPy: Digital Communication with Python, version 0.3.0. Available at <a href=\"https://github.com/veeresht/CommPy\" rel=\"nofollow\">https://github.com/veeresht/CommPy</a>\", 2015.</p>\n<p>I would also greatly appreciate your feedback if you have found CommPy useful. Just send me a mail: <a href=\"mailto:veeresht@gmail.com\">veeresht@gmail.com</a></p>\n<p>For more details on CommPy, please visit <a href=\"http://veeresht.github.com/CommPy\" rel=\"nofollow\">http://veeresht.github.com/CommPy</a></p>\n\n          </div>"}, "last_serial": 6487058, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6591599e80049435e6fd8bf3fb9f4c23", "sha256": "dbaf8d07bc0d802d64a0936f6fb83d837942a4a4c7340456272aa7310a1432d7"}, "downloads": -1, "filename": "scikit-commpy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6591599e80049435e6fd8bf3fb9f4c23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 268782, "upload_time": "2012-04-04T05:54:50", "upload_time_iso_8601": "2012-04-04T05:54:50.823077Z", "url": "https://files.pythonhosted.org/packages/fc/7c/62a95d0fe48973cdac40dc9bd92130d670f11164ed04f9387317596204a9/scikit-commpy-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "0d1b0f743a955a0f944ae7765c40cc97", "sha256": "787a530eeffaf6a0a9e34b84e3cbec533b16c2afe3dc9731d3b4cfbf02178f5d"}, "downloads": -1, "filename": "scikit-commpy-0.2.0.tar.gz", "has_sig": false, "md5_digest": "0d1b0f743a955a0f944ae7765c40cc97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 308946, "upload_time": "2013-05-19T08:10:56", "upload_time_iso_8601": "2013-05-19T08:10:56.701401Z", "url": "https://files.pythonhosted.org/packages/15/7a/762046631004b2b66cffac98568b86abd1657a1396daaf7b9a962e6b215f/scikit-commpy-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "4bd7d5f80a8a953a0c9e6550d484dd7a", "sha256": "456fc0caa59e6d79dd6948f53070d34b3c11b33cdda490a5823c348ad9e0e4b8"}, "downloads": -1, "filename": "scikit-commpy-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4bd7d5f80a8a953a0c9e6550d484dd7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21592, "upload_time": "2015-04-08T02:26:10", "upload_time_iso_8601": "2015-04-08T02:26:10.172854Z", "url": "https://files.pythonhosted.org/packages/cc/d3/d9e7f811c6879fb7dd0aa39554bc4c8b6972e7692a3520930b22666e8e8f/scikit-commpy-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "ef1e342173f2e16b2db27f9280e0b287", "sha256": "e39baeb8f705d048461e27f9a07c7133df1371896241439d604d8e1ef4114f53"}, "downloads": -1, "filename": "scikit_commpy-0.4.0-py2-none-any.whl", "has_sig": false, "md5_digest": "ef1e342173f2e16b2db27f9280e0b287", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 33818, "upload_time": "2019-05-10T05:00:48", "upload_time_iso_8601": "2019-05-10T05:00:48.654217Z", "url": "https://files.pythonhosted.org/packages/55/b2/175afee1e40820f8f60d6721abfaed79bcdedc557dfe81ec6e7918b937f8/scikit_commpy-0.4.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94c4aa4852beaf364c3e336a6b971e43", "sha256": "a3903df1a9af50654f354eaf3371d13406514405d75a7c0f8f4cf5957fac90e0"}, "downloads": -1, "filename": "scikit-commpy-0.4.0.tar.gz", "has_sig": false, "md5_digest": "94c4aa4852beaf364c3e336a6b971e43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26768, "upload_time": "2019-05-10T05:00:50", "upload_time_iso_8601": "2019-05-10T05:00:50.031314Z", "url": "https://files.pythonhosted.org/packages/90/ed/5cc5461543cd29fd59346354c02703a89b7991f4f35f8b9229ace33afb1d/scikit-commpy-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "7da4dfcb6adb0d6a574b92db96dc1e81", "sha256": "26327e656c33f80b74e5b672d7137d87db88b6f30bb49c4b624cd10ef30f271d"}, "downloads": -1, "filename": "scikit_commpy-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7da4dfcb6adb0d6a574b92db96dc1e81", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.2", "size": 49913, "upload_time": "2020-01-20T13:41:28", "upload_time_iso_8601": "2020-01-20T13:41:28.930409Z", "url": "https://files.pythonhosted.org/packages/06/b4/f7fa5bc8864e0ddbd3e7a2290b624b92690f53523474024915c33321802d/scikit_commpy-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc245980fd8ff1d37b343440f4be9d36", "sha256": "5cd94641e0916425e8370a2d4ba36669b4fc1516a96ef4aed79d8a5f8ab1da4e"}, "downloads": -1, "filename": "scikit-commpy-0.5.0.tar.gz", "has_sig": false, "md5_digest": "cc245980fd8ff1d37b343440f4be9d36", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.2", "size": 42700, "upload_time": "2020-01-20T13:41:30", "upload_time_iso_8601": "2020-01-20T13:41:30.320864Z", "url": "https://files.pythonhosted.org/packages/d3/97/f7b75e23d46c6b1fda1496e7267d39adaf6623ff90fd4df70f46e25bdc7c/scikit-commpy-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7da4dfcb6adb0d6a574b92db96dc1e81", "sha256": "26327e656c33f80b74e5b672d7137d87db88b6f30bb49c4b624cd10ef30f271d"}, "downloads": -1, "filename": "scikit_commpy-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7da4dfcb6adb0d6a574b92db96dc1e81", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.2", "size": 49913, "upload_time": "2020-01-20T13:41:28", "upload_time_iso_8601": "2020-01-20T13:41:28.930409Z", "url": "https://files.pythonhosted.org/packages/06/b4/f7fa5bc8864e0ddbd3e7a2290b624b92690f53523474024915c33321802d/scikit_commpy-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc245980fd8ff1d37b343440f4be9d36", "sha256": "5cd94641e0916425e8370a2d4ba36669b4fc1516a96ef4aed79d8a5f8ab1da4e"}, "downloads": -1, "filename": "scikit-commpy-0.5.0.tar.gz", "has_sig": false, "md5_digest": "cc245980fd8ff1d37b343440f4be9d36", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.2", "size": 42700, "upload_time": "2020-01-20T13:41:30", "upload_time_iso_8601": "2020-01-20T13:41:30.320864Z", "url": "https://files.pythonhosted.org/packages/d3/97/f7b75e23d46c6b1fda1496e7267d39adaf6623ff90fd4df70f46e25bdc7c/scikit-commpy-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:36 2020"}