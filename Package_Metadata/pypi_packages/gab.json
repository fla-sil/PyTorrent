{"info": {"author": "Adam Talsma", "author_email": "adam@talsma.ca", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Gab.com API Client\n\n[![Build\nStatus](https://travis-ci.org/a-tal/gab.svg?branch=master)](https://travis-ci.org/a-tal/gab)\n[![Coverage Status](https://coveralls.io/repos/github/a-tal/gab/badge.svg?branch=master)](https://coveralls.io/github/a-tal/gab?branch=master)\n\nBased on the popular requests module, this is a minimal Gab.com API client.\n\nThere is a `help` method available on all created objects, which can\nbe used to discover API methods and their call arguments.\n\nThe client object is dynamically created during init time. To speed things\nup, you can create a Client object with a cached copy of the collections.json\nobject. Please see the [example.py](example.py) for one such example. To prime\na new cache, save the response of `gab.Client()._get_api_collections()`.\n\nBasic usage example:\n\n```python\n>>> import gab\n>>> client = gab.Client(gab.Options(\n...   ...\n... ))\n>>>\n>>> client.help()\nGab.com API Client 0.0.1.\n\nThe following collections are known:\n  creating_posts\n  engaging_with_other_users\n  feeds\n  groups\n  notifications\n  popular\n  reacting_to_posts\n  user_details\n>>>\n>>> client.groups.help()\nGab.com API collection Groups.\n\nThese are the endpoints to access groups.\n\nThe following operations are defined:\n  group_details\n  group_moderation_logs\n  group_users\n  popular_groups\n>>>\n>>> client.groups.group_users.help()\nGab.com API collection Groups method Group Users.\n\nReturns a list of given group's members. Requires read scope.\n\nRequires the following path parameters:\n  group-id\n\nThe following headers are defined:\n  Authorization\n\nAdditional optional parameters defined:\n  before: (example: 0)\n>>>\n>>> client.groups.group_users(1234)\nTraceback (most recent call last):\n  File \"<console>\", line 1, in <module>\n<snipped>\nrequests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: <snip>\n>>>\n```\n\nWow! The example ran into an auth error? What the heck?\n\nYeah, this client library doesn't do auth, never write your own auth.\nInstead, use someone else's auth, and pass in a session object.\n\nPlease see [example.py](example.py) for a full working CLI example with authentication.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/a-tal/gab", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/a-tal/gab", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gab", "package_url": "https://pypi.org/project/gab/", "platform": "", "project_url": "https://pypi.org/project/gab/", "project_urls": {"Download": "https://github.com/a-tal/gab", "Homepage": "https://github.com/a-tal/gab"}, "release_url": "https://pypi.org/project/gab/0.0.1/", "requires_dist": ["requests (>=2.19.1)", "beautifulsoup4 (>=4.6.3)", "dataclasses (>=0.6); python_version < '3.7'"], "requires_python": "", "summary": "Python client library for the Gab.com API", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Gab.com API Client<br><br>[![Build<br>Status](https://travis-ci.org/a-tal/gab.svg?branch=master)](https://travis-ci.org/a-tal/gab)<br>[![Coverage Status](https://coveralls.io/repos/github/a-tal/gab/badge.svg?branch=master)](https://coveralls.io/github/a-tal/gab?branch=master)<br><br>Based on the popular requests module, this is a minimal Gab.com API client.<br><br>There is a `help` method available on all created objects, which can<br>be used to discover API methods and their call arguments.<br><br>The client object is dynamically created during init time. To speed things<br>up, you can create a Client object with a cached copy of the collections.json<br>object. Please see the [example.py](example.py) for one such example. To prime<br>a new cache, save the response of `gab.Client()._get_api_collections()`.<br><br>Basic usage example:<br><br>```python<br>&gt;&gt;&gt; import gab<br>&gt;&gt;&gt; client = gab.Client(gab.Options(<br>...   ...<br>... ))<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; client.help()<br>Gab.com API Client 0.0.1.<br><br>The following collections are known:<br>  creating_posts<br>  engaging_with_other_users<br>  feeds<br>  groups<br>  notifications<br>  popular<br>  reacting_to_posts<br>  user_details<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; client.groups.help()<br>Gab.com API collection Groups.<br><br>These are the endpoints to access groups.<br><br>The following operations are defined:<br>  group_details<br>  group_moderation_logs<br>  group_users<br>  popular_groups<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; client.groups.group_users.help()<br>Gab.com API collection Groups method Group Users.<br><br>Returns a list of given group's members. Requires read scope.<br><br>Requires the following path parameters:<br>  group-id<br><br>The following headers are defined:<br>  Authorization<br><br>Additional optional parameters defined:<br>  before: (example: 0)<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; client.groups.group_users(1234)<br>Traceback (most recent call last):<br>  File \"&lt;console&gt;\", line 1, in &lt;module&gt;<br>&lt;snipped&gt;<br>requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: &lt;snip&gt;<br>&gt;&gt;&gt;<br>```<br><br>Wow! The example ran into an auth error? What the heck?<br><br>Yeah, this client library doesn't do auth, never write your own auth.<br>Instead, use someone else's auth, and pass in a session object.<br><br>Please see [example.py](example.py) for a full working CLI example with authentication.<br><br><br>\n          </div>"}, "last_serial": 4367315, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "79b5808354bc70b4b24e14d031ff7e75", "sha256": "370991d083c5d72dee37b86c28a6e265a0978fca2a8ed6b8bba05012f2548265"}, "downloads": -1, "filename": "gab-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "79b5808354bc70b4b24e14d031ff7e75", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6543, "upload_time": "2018-10-12T05:54:14", "upload_time_iso_8601": "2018-10-12T05:54:14.861163Z", "url": "https://files.pythonhosted.org/packages/60/92/6d89002a720e5c6ae3b404bf1b9056aebbac972c8fca9342f2b702c93d89/gab-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4dab07925f5bfdb9476379699dd3e96", "sha256": "373b26cb35c009da4901ee7cb19127da6f50556d72e36639d8604d67a33aa5ae"}, "downloads": -1, "filename": "gab-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f4dab07925f5bfdb9476379699dd3e96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6122, "upload_time": "2018-10-12T05:54:16", "upload_time_iso_8601": "2018-10-12T05:54:16.297883Z", "url": "https://files.pythonhosted.org/packages/fe/18/0a5bf9666579c5442dd432d14a783e6709f1cd9d44f9c14d835fab1d4326/gab-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "79b5808354bc70b4b24e14d031ff7e75", "sha256": "370991d083c5d72dee37b86c28a6e265a0978fca2a8ed6b8bba05012f2548265"}, "downloads": -1, "filename": "gab-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "79b5808354bc70b4b24e14d031ff7e75", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6543, "upload_time": "2018-10-12T05:54:14", "upload_time_iso_8601": "2018-10-12T05:54:14.861163Z", "url": "https://files.pythonhosted.org/packages/60/92/6d89002a720e5c6ae3b404bf1b9056aebbac972c8fca9342f2b702c93d89/gab-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4dab07925f5bfdb9476379699dd3e96", "sha256": "373b26cb35c009da4901ee7cb19127da6f50556d72e36639d8604d67a33aa5ae"}, "downloads": -1, "filename": "gab-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f4dab07925f5bfdb9476379699dd3e96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6122, "upload_time": "2018-10-12T05:54:16", "upload_time_iso_8601": "2018-10-12T05:54:16.297883Z", "url": "https://files.pythonhosted.org/packages/fe/18/0a5bf9666579c5442dd432d14a783e6709f1cd9d44f9c14d835fab1d4326/gab-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:24 2020"}