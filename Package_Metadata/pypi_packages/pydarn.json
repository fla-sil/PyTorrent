{"info": {"author": "SuperDARN", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "![pydarn](https://raw.githubusercontent.com/SuperDARN/pydarn/master/docs/imgs/pydarn_logo.png)\n\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0) [![Python 3.6](https://img.shields.io/badge/python-3.6-blue.svg)](https://www.python.org/downloads/release/python-360/) [![GitHub version](https://badge.fury.io/gh/boennemann%2Fbadges.svg)](http://badge.fury.io/gh/boennemann%2Fbadges)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.3727270.svg)](https://doi.org/10.5281/zenodo.3727270)\n\nPython data visualization library for the Super Dual Auroral Radar Network (SuperDARN).\n\n## Changelog\n\n## Version 1.0 - Release!\n\npyDARN is released! Included are the following features:\n- Reading and writing DMap format IQDAT, RAWACF, FITACF, GRID/GRD and MAP files\n- Reading and writing HDF5 format files for Borealis radar data, as well as conversion to and from DMap format\n- Range-time parameter style plots for RAWACF and FITACF files\n- Summary plots for RAWACF and FITACF files\n- Time series plots for RAWACF and FITACF files\n\n## Documentation\n\npyDARN's documentation can found [here](https://pydarn.readthedocs.io/en/latest)\n\n## Getting Started\n\n\n`pip install pydarn`\n\nOr read the [installation guide](https://pydarn.readthedocs.io/en/latest/user/install/).\n\nIf wish to get access to SuperDARN data please read the [SuperDARN data access documentation](https://pydarn.readthedocs.io/en/latest/user/superdarn_data/).\nPlease make sure to also read the documentation on [**citing superDARN and pydarn**](https://pydarn.readthedocs.io/en/latest/user/citing/). \n\nAs a quick tutorial on using pydarn to read a non-compressed file: \n```python\nimport pydarn \n\n# read a non-compressed file\nfitacf_file = '20180220.C0.rkn.stream.fitacf'\n\n# pyDARN functions to read a fitacf file\nreader = pydarn.SDarnRead(fitacf_file)\nrecords = reader.read_fitacf()\n```\n\nor to read a compressed file:\n``` python\nimport bz2\nimport pydarn \n\n# read in compressed file\nfitacf_file = '20180220.C0.rkn.stream.fitacf.bz2'\nwith bz2.open(fitacf_file) as fp: \n      fitacf_stream = fp.read()\n\n# pyDARN functions to read a fitacf file stream\nreader = pydarn.SDarnRead(fitacf_stream, True)\nrecords = reader.read_fitacf()\n```\n\nFor more information and tutorials on pyDARN please see the [tutorial section](https://pydarn.readthedocs.io/en/latest/)\n\n## Getting involved\n\npyDARN is always looking for testers and developers keen on learning python, github, and/or SuperDARN data visualizations! \nHere are some ways to get started: \n\n  - **Testing Pull Request**: to determine which [pull requests](https://github.com/SuperDARN/pydarn/pulls) need to be tested right away, filter them by their milestones (v1.1.0 is currently highest priority).\n  - **Getting involved in projects**: if you are looking to help in a specific area, look at pyDARN's [projects tab](https://github.com/SuperDARN/pydarn/projects). The project you are interested in will give you information on what is needed to reach completion. This includes things currently in progress, and those awaiting reviews. \n  - **Answer questions**: if you want to try your hand at answering some pyDARN questions, or adding to the discussion, look at pyDARN's [issues](https://github.com/SuperDARN/pydarn/issues) and filter by labels.\n  - **Become a developer**: if you want to practice those coding skills and add to the library, look at pyDARN [issues](https://github.com/SuperDARN/pydarn/issues) and filter by milestone's to see what needs to get done right away. \n\nPlease contact the leading developer, Marina Schmidt (marina.t.schmidt@gmail.com), if you would like to become a member of the team!\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SuperDARN/pydarn.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pydarn", "package_url": "https://pypi.org/project/pydarn/", "platform": "", "project_url": "https://pypi.org/project/pydarn/", "project_urls": {"Homepage": "https://github.com/SuperDARN/pydarn.git"}, "release_url": "https://pypi.org/project/pydarn/1.0.0.1/", "requires_dist": ["pyyaml", "numpy", "matplotlib", "h5py", "deepdish", "pathlib2"], "requires_python": ">=3.6", "summary": "Data visualization library for SuperDARN data", "version": "1.0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"pydarn\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/66b54c0ec3a7ddcef78997a16782a31bb63966b1/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f53757065724441524e2f70796461726e2f6d61737465722f646f63732f696d67732f70796461726e5f6c6f676f2e706e67\"></p>\n<p><a href=\"https://www.gnu.org/licenses/gpl-3.0\" rel=\"nofollow\"><img alt=\"License: GPL v3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8de17537dd1659a5a076ce547de301e27c839e67/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c76332d626c75652e737667\"></a> <a href=\"https://www.python.org/downloads/release/python-360/\" rel=\"nofollow\"><img alt=\"Python 3.6\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01419d339114693587408dd14856677a4789006a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e362d626c75652e737667\"></a> <a href=\"http://badge.fury.io/gh/boennemann%2Fbadges\" rel=\"nofollow\"><img alt=\"GitHub version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/24cead34cdfce09b92c7b49fea375ee09e21b8fa/68747470733a2f2f62616467652e667572792e696f2f67682f626f656e6e656d616e6e2532466261646765732e737667\"></a>\n<a href=\"https://doi.org/10.5281/zenodo.3727270\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5302abd4b2de2af677d6bea646d73ad69b90019f/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e333732373237302e737667\"></a></p>\n<p>Python data visualization library for the Super Dual Auroral Radar Network (SuperDARN).</p>\n<h2>Changelog</h2>\n<h2>Version 1.0 - Release!</h2>\n<p>pyDARN is released! Included are the following features:</p>\n<ul>\n<li>Reading and writing DMap format IQDAT, RAWACF, FITACF, GRID/GRD and MAP files</li>\n<li>Reading and writing HDF5 format files for Borealis radar data, as well as conversion to and from DMap format</li>\n<li>Range-time parameter style plots for RAWACF and FITACF files</li>\n<li>Summary plots for RAWACF and FITACF files</li>\n<li>Time series plots for RAWACF and FITACF files</li>\n</ul>\n<h2>Documentation</h2>\n<p>pyDARN's documentation can found <a href=\"https://pydarn.readthedocs.io/en/latest\" rel=\"nofollow\">here</a></p>\n<h2>Getting Started</h2>\n<p><code>pip install pydarn</code></p>\n<p>Or read the <a href=\"https://pydarn.readthedocs.io/en/latest/user/install/\" rel=\"nofollow\">installation guide</a>.</p>\n<p>If wish to get access to SuperDARN data please read the <a href=\"https://pydarn.readthedocs.io/en/latest/user/superdarn_data/\" rel=\"nofollow\">SuperDARN data access documentation</a>.\nPlease make sure to also read the documentation on <a href=\"https://pydarn.readthedocs.io/en/latest/user/citing/\" rel=\"nofollow\"><strong>citing superDARN and pydarn</strong></a>.</p>\n<p>As a quick tutorial on using pydarn to read a non-compressed file:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pydarn</span> \n\n<span class=\"c1\"># read a non-compressed file</span>\n<span class=\"n\">fitacf_file</span> <span class=\"o\">=</span> <span class=\"s1\">'20180220.C0.rkn.stream.fitacf'</span>\n\n<span class=\"c1\"># pyDARN functions to read a fitacf file</span>\n<span class=\"n\">reader</span> <span class=\"o\">=</span> <span class=\"n\">pydarn</span><span class=\"o\">.</span><span class=\"n\">SDarnRead</span><span class=\"p\">(</span><span class=\"n\">fitacf_file</span><span class=\"p\">)</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">read_fitacf</span><span class=\"p\">()</span>\n</pre>\n<p>or to read a compressed file:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">bz2</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pydarn</span> \n\n<span class=\"c1\"># read in compressed file</span>\n<span class=\"n\">fitacf_file</span> <span class=\"o\">=</span> <span class=\"s1\">'20180220.C0.rkn.stream.fitacf.bz2'</span>\n<span class=\"k\">with</span> <span class=\"n\">bz2</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">fitacf_file</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fp</span><span class=\"p\">:</span> \n      <span class=\"n\">fitacf_stream</span> <span class=\"o\">=</span> <span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># pyDARN functions to read a fitacf file stream</span>\n<span class=\"n\">reader</span> <span class=\"o\">=</span> <span class=\"n\">pydarn</span><span class=\"o\">.</span><span class=\"n\">SDarnRead</span><span class=\"p\">(</span><span class=\"n\">fitacf_stream</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">read_fitacf</span><span class=\"p\">()</span>\n</pre>\n<p>For more information and tutorials on pyDARN please see the <a href=\"https://pydarn.readthedocs.io/en/latest/\" rel=\"nofollow\">tutorial section</a></p>\n<h2>Getting involved</h2>\n<p>pyDARN is always looking for testers and developers keen on learning python, github, and/or SuperDARN data visualizations!\nHere are some ways to get started:</p>\n<ul>\n<li><strong>Testing Pull Request</strong>: to determine which <a href=\"https://github.com/SuperDARN/pydarn/pulls\" rel=\"nofollow\">pull requests</a> need to be tested right away, filter them by their milestones (v1.1.0 is currently highest priority).</li>\n<li><strong>Getting involved in projects</strong>: if you are looking to help in a specific area, look at pyDARN's <a href=\"https://github.com/SuperDARN/pydarn/projects\" rel=\"nofollow\">projects tab</a>. The project you are interested in will give you information on what is needed to reach completion. This includes things currently in progress, and those awaiting reviews.</li>\n<li><strong>Answer questions</strong>: if you want to try your hand at answering some pyDARN questions, or adding to the discussion, look at pyDARN's <a href=\"https://github.com/SuperDARN/pydarn/issues\" rel=\"nofollow\">issues</a> and filter by labels.</li>\n<li><strong>Become a developer</strong>: if you want to practice those coding skills and add to the library, look at pyDARN <a href=\"https://github.com/SuperDARN/pydarn/issues\" rel=\"nofollow\">issues</a> and filter by milestone's to see what needs to get done right away.</li>\n</ul>\n<p>Please contact the leading developer, Marina Schmidt (<a href=\"mailto:marina.t.schmidt@gmail.com\">marina.t.schmidt@gmail.com</a>), if you would like to become a member of the team!</p>\n\n          </div>"}, "last_serial": 6885794, "releases": {"1.0.0.1": [{"comment_text": "", "digests": {"md5": "268eebeea8a6e5f48f26aa13f1360f36", "sha256": "458c80f17c5d8e1f2d51bc6e93fca886a59644c510facd3c3f5d64c321086662"}, "downloads": -1, "filename": "pydarn-1.0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "268eebeea8a6e5f48f26aa13f1360f36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 185058, "upload_time": "2020-03-25T23:48:44", "upload_time_iso_8601": "2020-03-25T23:48:44.916149Z", "url": "https://files.pythonhosted.org/packages/37/ad/e5968b9e67373c81643cedf43dbc2b5364fabb0c8947d9070dbe6bcba162/pydarn-1.0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e5b4442cfa10118b73dd4bd9cadee1d", "sha256": "861e3890af6d1b5bb0656a5f0dda4980eb927ba1764ea02a77be5f066cee5c31"}, "downloads": -1, "filename": "pydarn-1.0.0.1.tar.gz", "has_sig": false, "md5_digest": "4e5b4442cfa10118b73dd4bd9cadee1d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 90573, "upload_time": "2020-03-25T23:48:46", "upload_time_iso_8601": "2020-03-25T23:48:46.650393Z", "url": "https://files.pythonhosted.org/packages/d8/a8/82a732dc4d661bbce5e8b4535b7ea8fe544f53b1f3799f135972fabb17dd/pydarn-1.0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "268eebeea8a6e5f48f26aa13f1360f36", "sha256": "458c80f17c5d8e1f2d51bc6e93fca886a59644c510facd3c3f5d64c321086662"}, "downloads": -1, "filename": "pydarn-1.0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "268eebeea8a6e5f48f26aa13f1360f36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 185058, "upload_time": "2020-03-25T23:48:44", "upload_time_iso_8601": "2020-03-25T23:48:44.916149Z", "url": "https://files.pythonhosted.org/packages/37/ad/e5968b9e67373c81643cedf43dbc2b5364fabb0c8947d9070dbe6bcba162/pydarn-1.0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e5b4442cfa10118b73dd4bd9cadee1d", "sha256": "861e3890af6d1b5bb0656a5f0dda4980eb927ba1764ea02a77be5f066cee5c31"}, "downloads": -1, "filename": "pydarn-1.0.0.1.tar.gz", "has_sig": false, "md5_digest": "4e5b4442cfa10118b73dd4bd9cadee1d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 90573, "upload_time": "2020-03-25T23:48:46", "upload_time_iso_8601": "2020-03-25T23:48:46.650393Z", "url": "https://files.pythonhosted.org/packages/d8/a8/82a732dc4d661bbce5e8b4535b7ea8fe544f53b1f3799f135972fabb17dd/pydarn-1.0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:25 2020"}