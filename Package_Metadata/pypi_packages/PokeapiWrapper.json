{"info": {"author": "Adithya Mohan", "author_email": "Socketphys@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Pokeapi-Wrapper\n===============\n\nA wrapper for the Pok\u00e9api in python\n===================================\n\nPurpose\n=======\n\nThis wrapper simplifies the retrieval and parsing of data from the\ndatabase. All methods either return a string, number or a dictionary\nthat you can loop through to find what data you want. I will be adding\nmore features as time passes\n\nInstallation\n===========\n\n``sudo pip install PokeapiWrapper``\n\nUsage\n=====\n\nFirst you must import the class like:\n\n``from pokeapi import pokemon. Pokemon``\n\nThen you must create an object of Pokemon and pass the name of the\npokemon you wish to retrieve information about like:\n\n``charizard = Pokemon(\"charizard\")``\n\nFollowing are a list of methods that you can use currently:\n\n``getMoves()`` This method returns a list of all the names of the moves\nthat the pokemon knows\n\n``getName()`` This method returns the name of the pokemon\n\n``getAbilities()`` This method returns a list of dictionaries. Each\ndictionary contains an ``isHidden``, ``slot``, and ``name`` key for the\nabilities\n\n``getForms()`` This method returns a list of the forms of the pokemon\n\n``getGameIndices()`` This method returns a list of dictionaries. Each\ndictionary contains a ``gameIndex``, and ``version`` key for the games\n\n``getHeldItems()`` This method returns the held items of the Pokemon.\n\n``getLocationAreaEncounters()`` This method returns a list of names of\nthe Areas you can locate the pokemon.\n\n``getSpecies()`` This method returns the species of the pokemon\n\n``getStats()`` This method returns a list of dictionaries. Each\ndictionary contains a ``baseStat``, ``effort``, and ``name`` of the\nstats.\n\n``getTypes()`` This method returns a list of dictionaries. Each\ndictionary contains a ``slot``, and ``name`` of the types.\n\n``getId(self)`` This method returns the ID of the pokemon.\n\n``getBaseExperience()`` This method returns the Base Experience of the\npokemon.\n\n``getHeight()`` This method returns the height of the pokemon.\n\n``def isDefault()`` This method returns whether or not the pokemon is\ndefault.\n\n``getOrder()`` This method returns the order of the pokemon.\n\n``getWeight()`` This method returns the weight of the pokemon.\n\n``getMoveVersionDetails(move)`` Given a move this method returns a list\nof dictionaries containing information about the version details of the\nmove.\n``{'level':level,'versionName':versionName,'moveLearnMethod':moveLearnMethod``\n\n``getLocationVersionDetails(area)`` Given a location this method returns\na list of dictionaries containing information about the version details\nof the locations.\n``{'maxChance':maxChance,'minLevel':minLevel,'maxLevel':maxLevel,'conditionValues':conditionValues,'chance':chance,'methodName':methodName,'versionName':versionName}``\n\nExample\n========\ncharizard = Pokemon(\"charizard\")\nprint(charizard.getMoves())\n\n\nFuture Plans\n============\n\nMy next goal will be to implement some other data retrieval using the\ndatabase including berries. I will also focus on making methods that can\ncompare pokemon in different ways and overall help you do more things\nwith the pokemon objects.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SocketPhys/Pokeapi-Wrapper", "keywords": "pokeapi wrapper", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "PokeapiWrapper", "package_url": "https://pypi.org/project/PokeapiWrapper/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/PokeapiWrapper/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/SocketPhys/Pokeapi-Wrapper"}, "release_url": "https://pypi.org/project/PokeapiWrapper/0.9/", "requires_dist": null, "requires_python": null, "summary": "This is a Pokeapi wrapper", "version": "0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            Pokeapi-Wrapper<br>===============<br><br>A wrapper for the Pok\u00e9api in python<br>===================================<br><br>Purpose<br>=======<br><br>This wrapper simplifies the retrieval and parsing of data from the<br>database. All methods either return a string, number or a dictionary<br>that you can loop through to find what data you want. I will be adding<br>more features as time passes<br><br>Installation<br>===========<br><br>``sudo pip install PokeapiWrapper``<br><br>Usage<br>=====<br><br>First you must import the class like:<br><br>``from pokeapi import pokemon. Pokemon``<br><br>Then you must create an object of Pokemon and pass the name of the<br>pokemon you wish to retrieve information about like:<br><br>``charizard = Pokemon(\"charizard\")``<br><br>Following are a list of methods that you can use currently:<br><br>``getMoves()`` This method returns a list of all the names of the moves<br>that the pokemon knows<br><br>``getName()`` This method returns the name of the pokemon<br><br>``getAbilities()`` This method returns a list of dictionaries. Each<br>dictionary contains an ``isHidden``, ``slot``, and ``name`` key for the<br>abilities<br><br>``getForms()`` This method returns a list of the forms of the pokemon<br><br>``getGameIndices()`` This method returns a list of dictionaries. Each<br>dictionary contains a ``gameIndex``, and ``version`` key for the games<br><br>``getHeldItems()`` This method returns the held items of the Pokemon.<br><br>``getLocationAreaEncounters()`` This method returns a list of names of<br>the Areas you can locate the pokemon.<br><br>``getSpecies()`` This method returns the species of the pokemon<br><br>``getStats()`` This method returns a list of dictionaries. Each<br>dictionary contains a ``baseStat``, ``effort``, and ``name`` of the<br>stats.<br><br>``getTypes()`` This method returns a list of dictionaries. Each<br>dictionary contains a ``slot``, and ``name`` of the types.<br><br>``getId(self)`` This method returns the ID of the pokemon.<br><br>``getBaseExperience()`` This method returns the Base Experience of the<br>pokemon.<br><br>``getHeight()`` This method returns the height of the pokemon.<br><br>``def isDefault()`` This method returns whether or not the pokemon is<br>default.<br><br>``getOrder()`` This method returns the order of the pokemon.<br><br>``getWeight()`` This method returns the weight of the pokemon.<br><br>``getMoveVersionDetails(move)`` Given a move this method returns a list<br>of dictionaries containing information about the version details of the<br>move.<br>``{'level':level,'versionName':versionName,'moveLearnMethod':moveLearnMethod``<br><br>``getLocationVersionDetails(area)`` Given a location this method returns<br>a list of dictionaries containing information about the version details<br>of the locations.<br>``{'maxChance':maxChance,'minLevel':minLevel,'maxLevel':maxLevel,'conditionValues':conditionValues,'chance':chance,'methodName':methodName,'versionName':versionName}``<br><br>Example<br>========<br>charizard = Pokemon(\"charizard\")<br>print(charizard.getMoves())<br><br><br>Future Plans<br>============<br><br>My next goal will be to implement some other data retrieval using the<br>database including berries. I will also focus on making methods that can<br>compare pokemon in different ways and overall help you do more things<br>with the pokemon objects.<br>\n          </div>"}, "last_serial": 2093148, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "dc27202ec1ef2fb6f7bbb693d20a3357", "sha256": "7b9abdb9dd50cd38a3379e62ffc7ab16894b088556cb239f5428a5c3378d7042"}, "downloads": -1, "filename": "PokeapiWrapper-0.2.tar.gz", "has_sig": false, "md5_digest": "dc27202ec1ef2fb6f7bbb693d20a3357", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3680, "upload_time": "2016-05-01T01:14:58", "upload_time_iso_8601": "2016-05-01T01:14:58.523064Z", "url": "https://files.pythonhosted.org/packages/82/fa/a6463a082e99cc1038a18e512e557603e4414009abd69c7afb36e55ca3bc/PokeapiWrapper-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "eb5c698a2a08f8356c63ae76b5ebc907", "sha256": "98ae48ba93c5f0d46feddbade374c36f110a0750a288367f96c22fc30b961f88"}, "downloads": -1, "filename": "PokeapiWrapper-0.3.tar.gz", "has_sig": false, "md5_digest": "eb5c698a2a08f8356c63ae76b5ebc907", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3677, "upload_time": "2016-05-01T01:24:55", "upload_time_iso_8601": "2016-05-01T01:24:55.111939Z", "url": "https://files.pythonhosted.org/packages/a6/90/447df66e9197344465cf7aaea555a644a58f88da8a6fd279b19ddfefa57e/PokeapiWrapper-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "ca6f3c6c29189fffd22f7e411678b5f7", "sha256": "d52a17eb7046828108e2e94663b076eb6b93fecc43c553a5c8fb8ecca4307baa"}, "downloads": -1, "filename": "PokeapiWrapper-0.4.tar.gz", "has_sig": false, "md5_digest": "ca6f3c6c29189fffd22f7e411678b5f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3694, "upload_time": "2016-05-01T01:39:29", "upload_time_iso_8601": "2016-05-01T01:39:29.862160Z", "url": "https://files.pythonhosted.org/packages/53/81/47d2248be94013601034c04209b5212cf001248182ba6ce7ba65797b3f9a/PokeapiWrapper-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "0e7e524190f49341ae848556bebbf2a4", "sha256": "08e1bb71fb7513df10042df99585bdf4bb658127ed330f165765a339414d9553"}, "downloads": -1, "filename": "PokeapiWrapper-0.5.tar.gz", "has_sig": false, "md5_digest": "0e7e524190f49341ae848556bebbf2a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3728, "upload_time": "2016-05-01T01:49:24", "upload_time_iso_8601": "2016-05-01T01:49:24.143723Z", "url": "https://files.pythonhosted.org/packages/f3/fa/a508a2c0bad1d1c62d21438535cf5be91c5defcbbe083915b418ccee2b5a/PokeapiWrapper-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "54c5b8ed401c2e32ba76aeb4c898d5af", "sha256": "b2b8fb3643e8c4309477738e121572532967ecbe27a139e623e75a3944c877fe"}, "downloads": -1, "filename": "PokeapiWrapper-0.6.tar.gz", "has_sig": false, "md5_digest": "54c5b8ed401c2e32ba76aeb4c898d5af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3728, "upload_time": "2016-05-01T01:51:51", "upload_time_iso_8601": "2016-05-01T01:51:51.651539Z", "url": "https://files.pythonhosted.org/packages/c9/f9/e4b785128c1297efb80c7804589a10788394af907c56d668147e2c439cb5/PokeapiWrapper-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "4324a3557473f92a02a598037cb4b68b", "sha256": "1392888398b85a772d96132d1f04176c1ef11cb1c9e964a205ca7484deb5727c"}, "downloads": -1, "filename": "PokeapiWrapper-0.7.tar.gz", "has_sig": false, "md5_digest": "4324a3557473f92a02a598037cb4b68b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3841, "upload_time": "2016-05-01T01:53:37", "upload_time_iso_8601": "2016-05-01T01:53:37.571760Z", "url": "https://files.pythonhosted.org/packages/12/3a/5e924eb0097788b5961c82b0906594f005def6fbeeb4a7ef6324b7eec713/PokeapiWrapper-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "efb84a9443959a2f77447c4b01a41cdd", "sha256": "ed3ffe78eef09d4b6eba0da09387e4c2a100a79b9ceace11e3ce03972e914776"}, "downloads": -1, "filename": "PokeapiWrapper-0.8.tar.gz", "has_sig": false, "md5_digest": "efb84a9443959a2f77447c4b01a41cdd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3273, "upload_time": "2016-05-01T01:59:24", "upload_time_iso_8601": "2016-05-01T01:59:24.687798Z", "url": "https://files.pythonhosted.org/packages/17/93/9ee57c803698044eaebb7f1c7f4da3b608ba18cb976586cae0e1e37ff44e/PokeapiWrapper-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "b5aab1408c07a533ee3768b5a6bdb862", "sha256": "0ea61dab449b625bf0c9dde16e84c51fbd4bec00be4d06c78ef91d20be708272"}, "downloads": -1, "filename": "PokeapiWrapper-0.9.tar.gz", "has_sig": false, "md5_digest": "b5aab1408c07a533ee3768b5a6bdb862", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3321, "upload_time": "2016-05-01T05:16:49", "upload_time_iso_8601": "2016-05-01T05:16:49.757369Z", "url": "https://files.pythonhosted.org/packages/46/33/b4e9fcbf6ed17a8038996702866b0c5a092e6cbbf7efcba9f31a3752b3f4/PokeapiWrapper-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b5aab1408c07a533ee3768b5a6bdb862", "sha256": "0ea61dab449b625bf0c9dde16e84c51fbd4bec00be4d06c78ef91d20be708272"}, "downloads": -1, "filename": "PokeapiWrapper-0.9.tar.gz", "has_sig": false, "md5_digest": "b5aab1408c07a533ee3768b5a6bdb862", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3321, "upload_time": "2016-05-01T05:16:49", "upload_time_iso_8601": "2016-05-01T05:16:49.757369Z", "url": "https://files.pythonhosted.org/packages/46/33/b4e9fcbf6ed17a8038996702866b0c5a092e6cbbf7efcba9f31a3752b3f4/PokeapiWrapper-0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:51:59 2020"}