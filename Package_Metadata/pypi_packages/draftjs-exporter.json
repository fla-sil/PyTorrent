{"info": {"author": "Springload", "author_email": "hello@springload.co.nz", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Internet :: WWW/HTTP :: Site Management", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Editors :: Word Processors"], "description": "# Draft.js exporter\n\n[![PyPI](https://img.shields.io/pypi/v/draftjs_exporter.svg)](https://pypi.org/project/draftjs_exporter/) [![PyPI downloads](https://img.shields.io/pypi/dm/draftjs_exporter.svg)](https://pypi.org/project/draftjs_exporter/) [![Travis](https://travis-ci.org/springload/draftjs_exporter.svg?branch=master)](https://travis-ci.org/springload/draftjs_exporter) [![Coveralls](https://coveralls.io/repos/github/springload/draftjs_exporter/badge.svg?branch=master)](https://coveralls.io/github/springload/draftjs_exporter?branch=master) [![Total alerts](https://img.shields.io/lgtm/alerts/g/springload/draftjs_exporter.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/springload/draftjs_exporter/alerts/) [![Language grade: Python](https://img.shields.io/lgtm/grade/python/g/springload/draftjs_exporter.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/springload/draftjs_exporter/context:python)\n\n\n> Library to convert rich text from Draft.js raw ContentState to HTML.\n\nIt is developed alongside the [Draftail](https://www.draftail.org/) rich text editor, for [Wagtail](https://github.com/wagtail/wagtail). Check out the [online demo](http://playground.draftail.org/), and our [introductory blog post](https://www.draftail.org/blog/2018/03/13/rethinking-rich-text-pipelines-with-draft-js).\n\n## Why\n\n[Draft.js](https://draftjs.org/) is a rich text editor framework for [React](https://reactjs.org/). Its approach is different from most rich text editors because it does not store data as HTML, but rather in its own representation called ContentState. This exporter is useful when the ContentState to HTML conversion has to be done in a Python ecosystem.\n\nThe initial use case was to gain more control over the content managed by rich text editors in a Wagtail/Django site. If you want to read the full story, have a look at our blog post: [Rethinking rich text pipelines with Draft.js](https://www.draftail.org/blog/2018/03/13/rethinking-rich-text-pipelines-with-draft-js).\n\n## Features\n\nThis project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html), and [measures performance](https://thib.me/python-memory-profiling-for-the-draft-js-exporter) and [code coverage](https://coveralls.io/github/springload/draftjs_exporter). Code is checked with [mypy](https://mypy.readthedocs.io/en/latest/index.html).\n\n* Extensive configuration of the generated HTML.\n* Default, extensible block & inline style maps for common HTML elements.\n* Convert line breaks to `<br>` elements.\n* Define any attribute in the block map \u2013 custom class names for elements.\n* React-like API to create custom components.\n* Automatic conversion of entity data to HTML attributes (int & boolean to string, style object to style string).\n* Nested lists (`<li>` elements go inside `<ul>` or `<ol>`, with multiple levels).\n* Output inline styles as inline elements (`<em>`, `<strong>`, pick and choose, with any attribute).\n* Overlapping inline style and entity ranges.\n* Python 3.5+ type annotations.\n\n## Usage\n\nDraft.js stores data in a JSON representation based on blocks, representing lines of content in the editor, annotated with entities and styles to represent rich text. For more information, [this article](https://medium.com/@rajaraodv/how-draft-js-represents-rich-text-data-eeabb5f25cf2) covers the concepts further.\n\n### Getting started\n\nThis exporter takes the Draft.js ContentState data as input, and outputs HTML based on its configuration. To get started, install the package:\n\n```sh\npip install draftjs_exporter\n```\n\nWe support the following Python versions: 3.5, 3.6, 3.7, 3.8. For Python 2.7 and 3.4 support, please use [v2.1.7](https://github.com/springload/draftjs_exporter/tree/v2.1.7) of the exporter.\n\nIn your code, create an exporter and use the `render` method to create HTML:\n\n```python\nfrom draftjs_exporter.dom import DOM\nfrom draftjs_exporter.html import HTML\n\n# Configuration options are detailed below.\nconfig = {}\n\n# Initialise the exporter.\nexporter = HTML(config)\n\n# Render a Draft.js `contentState`\nhtml = exporter.render({\n    'entityMap': {},\n    'blocks': [{\n        'key': '6mgfh',\n        'text': 'Hello, world!',\n        'type': 'unstyled',\n        'depth': 0,\n        'inlineStyleRanges': [],\n        'entityRanges': []\n    }]\n})\n\nprint(html)\n```\n\nYou can also run an example by downloading this repository and then using `python example.py`, or by using our [online Draft.js demo](http://playground.draftail.org/).\n\n### Configuration\n\nThe exporter output is extensively configurable to cater for varied rich text requirements.\n\n```python\n# draftjs_exporter provides default configurations and predefined constants for reuse.\nfrom draftjs_exporter.constants import BLOCK_TYPES, ENTITY_TYPES\nfrom draftjs_exporter.defaults import BLOCK_MAP, STYLE_MAP\nfrom draftjs_exporter.dom import DOM\n\nconfig = {\n    # `block_map` is a mapping from Draft.js block types to a definition of their HTML representation.\n    # Extend BLOCK_MAP to start with sane defaults, or make your own from scratch.\n    'block_map': dict(BLOCK_MAP, **{\n        # The most basic mapping format, block type to tag name.\n        BLOCK_TYPES.HEADER_TWO: 'h2',\n        # Use a dict to define props on the block.\n        BLOCK_TYPES.HEADER_THREE: {'element': 'h3', 'props': {'class': 'u-text-center'}},\n        # Add a wrapper (and wrapper_props) to wrap adjacent blocks.\n        BLOCK_TYPES.UNORDERED_LIST_ITEM: {\n            'element': 'li',\n            'wrapper': 'ul',\n            'wrapper_props': {'class': 'bullet-list'},\n        },\n        # Use a custom component for more flexibility (reading block data or depth).\n        BLOCK_TYPES.BLOCKQUOTE: blockquote,\n        BLOCK_TYPES.ORDERED_LIST_ITEM: {\n            'element': list_item,\n            'wrapper': ordered_list,\n        },\n        # Provide a fallback component (advanced).\n        BLOCK_TYPES.FALLBACK: block_fallback\n    }),\n    # `style_map` defines the HTML representation of inline elements.\n    # Extend STYLE_MAP to start with sane defaults, or make your own from scratch.\n    'style_map': dict(STYLE_MAP, **{\n        # Use the same mapping format as in the `block_map`.\n        'KBD': 'kbd',\n        # The `style` prop can be defined as a dict, that will automatically be converted to a string.\n        'HIGHLIGHT': {'element': 'strong', 'props': {'style': {'textDecoration': 'underline'}}},\n        # Provide a fallback component (advanced).\n        INLINE_STYLES.FALLBACK: style_fallback,\n    }),\n    'entity_decorators': {\n        # Map entities to components so they can be rendered with their data.\n        ENTITY_TYPES.IMAGE: image,\n        ENTITY_TYPES.LINK: link\n        # Lambdas work too.\n        ENTITY_TYPES.HORIZONTAL_RULE: lambda props: DOM.create_element('hr'),\n        # Discard those entities.\n        ENTITY_TYPES.EMBED: None,\n        # Provide a fallback component (advanced).\n        ENTITY_TYPES.FALLBACK: entity_fallback,\n    },\n    'composite_decorators': [\n        # Use composite decorators to replace text based on a regular expression.\n        {\n            'strategy': re.compile(r'\\n'),\n            'component': br,\n        },\n        {\n            'strategy': re.compile(r'#\\w+'),\n            'component': hashtag,\n        },\n        {\n            'strategy': LINKIFY_RE,\n            'component': linkify,\n        },\n    ],\n}\n```\n\nSee [examples.py](https://github.com/springload/draftjs_exporter/blob/master/example.py) for more details.\n\n## Advanced usage\n\n### Custom components\n\nTo generate arbitrary markup with dynamic data, the exporter comes with an API to create rendering components. This API mirrors React\u2019s [createElement](https://facebook.github.io/react/docs/top-level-api.html#react.createelement) API (what JSX compiles to).\n\n```python\n# All of the API is available from a single `DOM` namespace\nfrom draftjs_exporter.dom import DOM\n\n\n# Components are simple functions that take `props` as parameter and return DOM elements.\ndef image(props):\n    # This component creates an image element, with the relevant attributes.\n    return DOM.create_element('img', {\n        'src': props.get('src'),\n        'width': props.get('width'),\n        'height': props.get('height'),\n        'alt': props.get('alt'),\n    })\n\n\ndef blockquote(props):\n    # This component uses block data to render a blockquote.\n    block_data = props['block']['data']\n\n    # Here, we want to display the block's content so we pass the `children` prop as the last parameter.\n    return DOM.create_element('blockquote', {\n        'cite': block_data.get('cite')\n    }, props['children'])\n\n\ndef button(props):\n    href = props.get('href', '#')\n    icon_name = props.get('icon', None)\n    text = props.get('text', '')\n\n    return DOM.create_element('a', {\n            'class': 'icon-text' if icon_name else None,\n            'href': href,\n        },\n        # There can be as many `children` as required.\n        # It is also possible to reuse other components and render them instead of HTML tags.\n        DOM.create_element(icon, {'name': icon_name}) if icon_name else None,\n        DOM.create_element('span', {'class': 'icon-text'}, text) if icon_name else text\n    )\n```\n\nApart from `create_element`, a `parse_html` method is also available. Use it to interface with other HTML generators, like template engines.\n\nSee `examples.py` in the repository for more details.\n\n### Fallback components\n\nWhen dealing with changes in the content schema, as part of ongoing development or migrations, some content can go stale.\nTo solve this, the exporter allows the definition of fallback components for blocks, styles, and entities.\nThis feature is only used for development at the moment, if you have a use case for this in production we would love to hear from you.\nPlease get in touch!\n\nAdd the following to the exporter config,\n\n```python\nconfig = {\n    'block_map': dict(BLOCK_MAP, **{\n        # Provide a fallback for block types.\n        BLOCK_TYPES.FALLBACK: block_fallback\n    }),\n}\n```\n\nThis fallback component can now control the exporter behavior when normal components are not found. Here is an example:\n\n```python\ndef block_fallback(props):\n    type_ = props['block']['type']\n\n    if type_ == 'example-discard':\n        logging.warn('Missing config for \"%s\". Discarding block, keeping content.' % type_)\n        # Directly return the block's children to keep its content.\n        return props['children']\n    elif type_ == 'example-delete':\n        logging.error('Missing config for \"%s\". Deleting block.' % type_)\n        # Return None to not render anything, removing the whole block.\n        return None\n    else:\n        logging.warn('Missing config for \"%s\". Using div instead.' % type_)\n        # Provide a fallback.\n        return DOM.create_element('div', {}, props['children'])\n```\n\nSee `examples.py` in the repository for more details.\n\n### Alternative backing engines\n\nBy default, the exporter uses a dependency-free engine called `string` to build the DOM tree. There are two alternative backing engines: `html5lib` (via BeautifulSoup) and `lxml`.\n\nThe `string` engine is the fastest, and does not have any dependencies. Its only drawback is that the `parse_html` method does not escape/sanitise HTML like that of other engines.\n\n* For `html5lib`, do `pip install draftjs_exporter[html5lib]`.\n* For `lxml`, do `pip install draftjs_exporter[lxml]`. It also requires `libxml2` and `libxslt` to be available on your system.\n\nThen, use the `engine` attribute of the exporter config:\n\n```python\nconfig = {\n    # Specify which DOM backing engine to use.\n    'engine': DOM.HTML5LIB,\n    # Or for lxml:\n    'engine': DOM.LXML,\n}\n```\n\n### Custom backing engines\n\nThe exporter supports using custom engines to generate its output via the `DOM` API. This can be useful to implement custom export formats, e.g. [to Markdown (experimental)](https://github.com/thibaudcolas/draftjs_exporter_markdown).\n\nHere is an example implementation:\n\n```python\nfrom draftjs_exporter import DOMEngine\n\nclass DOMListTree(DOMEngine):\n    \"\"\"\n    Element tree using nested lists.\n    \"\"\"\n\n    @staticmethod\n    def create_tag(t, attr=None):\n        return [t, attr, []]\n\n    @staticmethod\n    def append_child(elt, child):\n        elt[2].append(child)\n\n    @staticmethod\n    def render(elt):\n        return elt\n\n\nexporter = HTML({\n    # Use the dotted module syntax to point to the DOMEngine implementation.\n    'engine': 'myproject.example.DOMListTree'\n})\n```\n\n### Type annotations\n\nThe exporter\u2019s codebase is typed with annotations from the Python 3.5+ standard library, checked with mypy. Reusable types are made available:\n\n```python\nfrom draftjs_exporter.dom import DOM\nfrom draftjs_exporter.types import Element, Props\n\n\n# Components are simple functions that take `props` as parameter and return DOM elements.\ndef image(props: Props) -> Element:\n    # This component creates an image element, with the relevant attributes.\n    return DOM.create_element('img', {\n        'src': props.get('src'),\n        'width': props.get('width'),\n        'height': props.get('height'),\n        'alt': props.get('alt'),\n    })\n```\n\n## Contributing\n\nSee anything you like in here? Anything missing? We welcome all support, whether on bug reports, feature requests, code, design, reviews, tests, documentation, and more. Please have a look at our [contribution guidelines](docs/CONTRIBUTING.md).\n\nIf you just want to set up the project on your own computer, the contribution guidelines also contain all of the setup commands.\n\n## Credits\n\nThis project is made possible by the work of [Springload](https://github.com/springload), a New Zealand digital agency, and. The _beautiful_ demo site is the work of [@thibaudcolas](https://github.com/thibaudcolas).\n\nView the full list of [contributors](https://github.com/springload/draftjs_exporter/graphs/contributors). [MIT](https://github.com/springload/draftjs_exporter/blob/master/LICENSE) licensed.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/springload/draftjs_exporter", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "draftjs-exporter", "package_url": "https://pypi.org/project/draftjs-exporter/", "platform": "", "project_url": "https://pypi.org/project/draftjs-exporter/", "project_urls": {"Homepage": "https://github.com/springload/draftjs_exporter"}, "release_url": "https://pypi.org/project/draftjs-exporter/3.0.0/", "requires_dist": null, "requires_python": "", "summary": "Library to convert rich text from Draft.js raw ContentState to HTML", "version": "3.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Draft.js exporter</h1>\n<p><a href=\"https://pypi.org/project/draftjs_exporter/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a47a423dd60b647b44a2860924ea39947fbf0e93/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f64726166746a735f6578706f727465722e737667\"></a> <a href=\"https://pypi.org/project/draftjs_exporter/\" rel=\"nofollow\"><img alt=\"PyPI downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f53ee20e0ff278eeaac075c766f3469b03e63337/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f64726166746a735f6578706f727465722e737667\"></a> <a href=\"https://travis-ci.org/springload/draftjs_exporter\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/633d1c2060b76fe4dc1e66ff7b1efd2ac6c183a9/68747470733a2f2f7472617669732d63692e6f72672f737072696e676c6f61642f64726166746a735f6578706f727465722e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/springload/draftjs_exporter?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/411ad2ca1bab12f505377eb9da4c3c05edced2ed/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f737072696e676c6f61642f64726166746a735f6578706f727465722f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://lgtm.com/projects/g/springload/draftjs_exporter/alerts/\" rel=\"nofollow\"><img alt=\"Total alerts\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca05695ef3e8ea10f1681d22071671fb00aef816/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f672f737072696e676c6f61642f64726166746a735f6578706f727465722e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138\"></a> <a href=\"https://lgtm.com/projects/g/springload/draftjs_exporter/context:python\" rel=\"nofollow\"><img alt=\"Language grade: Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/256b9cecfaade462b73abf0a53c3facfc456b7a0/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f707974686f6e2f672f737072696e676c6f61642f64726166746a735f6578706f727465722e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138\"></a></p>\n<blockquote>\n<p>Library to convert rich text from Draft.js raw ContentState to HTML.</p>\n</blockquote>\n<p>It is developed alongside the <a href=\"https://www.draftail.org/\" rel=\"nofollow\">Draftail</a> rich text editor, for <a href=\"https://github.com/wagtail/wagtail\" rel=\"nofollow\">Wagtail</a>. Check out the <a href=\"http://playground.draftail.org/\" rel=\"nofollow\">online demo</a>, and our <a href=\"https://www.draftail.org/blog/2018/03/13/rethinking-rich-text-pipelines-with-draft-js\" rel=\"nofollow\">introductory blog post</a>.</p>\n<h2>Why</h2>\n<p><a href=\"https://draftjs.org/\" rel=\"nofollow\">Draft.js</a> is a rich text editor framework for <a href=\"https://reactjs.org/\" rel=\"nofollow\">React</a>. Its approach is different from most rich text editors because it does not store data as HTML, but rather in its own representation called ContentState. This exporter is useful when the ContentState to HTML conversion has to be done in a Python ecosystem.</p>\n<p>The initial use case was to gain more control over the content managed by rich text editors in a Wagtail/Django site. If you want to read the full story, have a look at our blog post: <a href=\"https://www.draftail.org/blog/2018/03/13/rethinking-rich-text-pipelines-with-draft-js\" rel=\"nofollow\">Rethinking rich text pipelines with Draft.js</a>.</p>\n<h2>Features</h2>\n<p>This project adheres to <a href=\"http://semver.org/spec/v2.0.0.html\" rel=\"nofollow\">Semantic Versioning</a>, and <a href=\"https://thib.me/python-memory-profiling-for-the-draft-js-exporter\" rel=\"nofollow\">measures performance</a> and <a href=\"https://coveralls.io/github/springload/draftjs_exporter\" rel=\"nofollow\">code coverage</a>. Code is checked with <a href=\"https://mypy.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">mypy</a>.</p>\n<ul>\n<li>Extensive configuration of the generated HTML.</li>\n<li>Default, extensible block &amp; inline style maps for common HTML elements.</li>\n<li>Convert line breaks to <code>&lt;br&gt;</code> elements.</li>\n<li>Define any attribute in the block map \u2013 custom class names for elements.</li>\n<li>React-like API to create custom components.</li>\n<li>Automatic conversion of entity data to HTML attributes (int &amp; boolean to string, style object to style string).</li>\n<li>Nested lists (<code>&lt;li&gt;</code> elements go inside <code>&lt;ul&gt;</code> or <code>&lt;ol&gt;</code>, with multiple levels).</li>\n<li>Output inline styles as inline elements (<code>&lt;em&gt;</code>, <code>&lt;strong&gt;</code>, pick and choose, with any attribute).</li>\n<li>Overlapping inline style and entity ranges.</li>\n<li>Python 3.5+ type annotations.</li>\n</ul>\n<h2>Usage</h2>\n<p>Draft.js stores data in a JSON representation based on blocks, representing lines of content in the editor, annotated with entities and styles to represent rich text. For more information, <a href=\"https://medium.com/@rajaraodv/how-draft-js-represents-rich-text-data-eeabb5f25cf2\" rel=\"nofollow\">this article</a> covers the concepts further.</p>\n<h3>Getting started</h3>\n<p>This exporter takes the Draft.js ContentState data as input, and outputs HTML based on its configuration. To get started, install the package:</p>\n<pre>pip install draftjs_exporter\n</pre>\n<p>We support the following Python versions: 3.5, 3.6, 3.7, 3.8. For Python 2.7 and 3.4 support, please use <a href=\"https://github.com/springload/draftjs_exporter/tree/v2.1.7\" rel=\"nofollow\">v2.1.7</a> of the exporter.</p>\n<p>In your code, create an exporter and use the <code>render</code> method to create HTML:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">draftjs_exporter.dom</span> <span class=\"kn\">import</span> <span class=\"n\">DOM</span>\n<span class=\"kn\">from</span> <span class=\"nn\">draftjs_exporter.html</span> <span class=\"kn\">import</span> <span class=\"n\">HTML</span>\n\n<span class=\"c1\"># Configuration options are detailed below.</span>\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n<span class=\"c1\"># Initialise the exporter.</span>\n<span class=\"n\">exporter</span> <span class=\"o\">=</span> <span class=\"n\">HTML</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Render a Draft.js `contentState`</span>\n<span class=\"n\">html</span> <span class=\"o\">=</span> <span class=\"n\">exporter</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">({</span>\n    <span class=\"s1\">'entityMap'</span><span class=\"p\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s1\">'blocks'</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n        <span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"s1\">'6mgfh'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'text'</span><span class=\"p\">:</span> <span class=\"s1\">'Hello, world!'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'unstyled'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'depth'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"s1\">'inlineStyleRanges'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n        <span class=\"s1\">'entityRanges'</span><span class=\"p\">:</span> <span class=\"p\">[]</span>\n    <span class=\"p\">}]</span>\n<span class=\"p\">})</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">html</span><span class=\"p\">)</span>\n</pre>\n<p>You can also run an example by downloading this repository and then using <code>python example.py</code>, or by using our <a href=\"http://playground.draftail.org/\" rel=\"nofollow\">online Draft.js demo</a>.</p>\n<h3>Configuration</h3>\n<p>The exporter output is extensively configurable to cater for varied rich text requirements.</p>\n<pre><span class=\"c1\"># draftjs_exporter provides default configurations and predefined constants for reuse.</span>\n<span class=\"kn\">from</span> <span class=\"nn\">draftjs_exporter.constants</span> <span class=\"kn\">import</span> <span class=\"n\">BLOCK_TYPES</span><span class=\"p\">,</span> <span class=\"n\">ENTITY_TYPES</span>\n<span class=\"kn\">from</span> <span class=\"nn\">draftjs_exporter.defaults</span> <span class=\"kn\">import</span> <span class=\"n\">BLOCK_MAP</span><span class=\"p\">,</span> <span class=\"n\">STYLE_MAP</span>\n<span class=\"kn\">from</span> <span class=\"nn\">draftjs_exporter.dom</span> <span class=\"kn\">import</span> <span class=\"n\">DOM</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># `block_map` is a mapping from Draft.js block types to a definition of their HTML representation.</span>\n    <span class=\"c1\"># Extend BLOCK_MAP to start with sane defaults, or make your own from scratch.</span>\n    <span class=\"s1\">'block_map'</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">BLOCK_MAP</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"p\">{</span>\n        <span class=\"c1\"># The most basic mapping format, block type to tag name.</span>\n        <span class=\"n\">BLOCK_TYPES</span><span class=\"o\">.</span><span class=\"n\">HEADER_TWO</span><span class=\"p\">:</span> <span class=\"s1\">'h2'</span><span class=\"p\">,</span>\n        <span class=\"c1\"># Use a dict to define props on the block.</span>\n        <span class=\"n\">BLOCK_TYPES</span><span class=\"o\">.</span><span class=\"n\">HEADER_THREE</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'element'</span><span class=\"p\">:</span> <span class=\"s1\">'h3'</span><span class=\"p\">,</span> <span class=\"s1\">'props'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'class'</span><span class=\"p\">:</span> <span class=\"s1\">'u-text-center'</span><span class=\"p\">}},</span>\n        <span class=\"c1\"># Add a wrapper (and wrapper_props) to wrap adjacent blocks.</span>\n        <span class=\"n\">BLOCK_TYPES</span><span class=\"o\">.</span><span class=\"n\">UNORDERED_LIST_ITEM</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'element'</span><span class=\"p\">:</span> <span class=\"s1\">'li'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'wrapper'</span><span class=\"p\">:</span> <span class=\"s1\">'ul'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'wrapper_props'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'class'</span><span class=\"p\">:</span> <span class=\"s1\">'bullet-list'</span><span class=\"p\">},</span>\n        <span class=\"p\">},</span>\n        <span class=\"c1\"># Use a custom component for more flexibility (reading block data or depth).</span>\n        <span class=\"n\">BLOCK_TYPES</span><span class=\"o\">.</span><span class=\"n\">BLOCKQUOTE</span><span class=\"p\">:</span> <span class=\"n\">blockquote</span><span class=\"p\">,</span>\n        <span class=\"n\">BLOCK_TYPES</span><span class=\"o\">.</span><span class=\"n\">ORDERED_LIST_ITEM</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'element'</span><span class=\"p\">:</span> <span class=\"n\">list_item</span><span class=\"p\">,</span>\n            <span class=\"s1\">'wrapper'</span><span class=\"p\">:</span> <span class=\"n\">ordered_list</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"c1\"># Provide a fallback component (advanced).</span>\n        <span class=\"n\">BLOCK_TYPES</span><span class=\"o\">.</span><span class=\"n\">FALLBACK</span><span class=\"p\">:</span> <span class=\"n\">block_fallback</span>\n    <span class=\"p\">}),</span>\n    <span class=\"c1\"># `style_map` defines the HTML representation of inline elements.</span>\n    <span class=\"c1\"># Extend STYLE_MAP to start with sane defaults, or make your own from scratch.</span>\n    <span class=\"s1\">'style_map'</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">STYLE_MAP</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"p\">{</span>\n        <span class=\"c1\"># Use the same mapping format as in the `block_map`.</span>\n        <span class=\"s1\">'KBD'</span><span class=\"p\">:</span> <span class=\"s1\">'kbd'</span><span class=\"p\">,</span>\n        <span class=\"c1\"># The `style` prop can be defined as a dict, that will automatically be converted to a string.</span>\n        <span class=\"s1\">'HIGHLIGHT'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'element'</span><span class=\"p\">:</span> <span class=\"s1\">'strong'</span><span class=\"p\">,</span> <span class=\"s1\">'props'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'style'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'textDecoration'</span><span class=\"p\">:</span> <span class=\"s1\">'underline'</span><span class=\"p\">}}},</span>\n        <span class=\"c1\"># Provide a fallback component (advanced).</span>\n        <span class=\"n\">INLINE_STYLES</span><span class=\"o\">.</span><span class=\"n\">FALLBACK</span><span class=\"p\">:</span> <span class=\"n\">style_fallback</span><span class=\"p\">,</span>\n    <span class=\"p\">}),</span>\n    <span class=\"s1\">'entity_decorators'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"c1\"># Map entities to components so they can be rendered with their data.</span>\n        <span class=\"n\">ENTITY_TYPES</span><span class=\"o\">.</span><span class=\"n\">IMAGE</span><span class=\"p\">:</span> <span class=\"n\">image</span><span class=\"p\">,</span>\n        <span class=\"n\">ENTITY_TYPES</span><span class=\"o\">.</span><span class=\"n\">LINK</span><span class=\"p\">:</span> <span class=\"n\">link</span>\n        <span class=\"c1\"># Lambdas work too.</span>\n        <span class=\"n\">ENTITY_TYPES</span><span class=\"o\">.</span><span class=\"n\">HORIZONTAL_RULE</span><span class=\"p\">:</span> <span class=\"k\">lambda</span> <span class=\"n\">props</span><span class=\"p\">:</span> <span class=\"n\">DOM</span><span class=\"o\">.</span><span class=\"n\">create_element</span><span class=\"p\">(</span><span class=\"s1\">'hr'</span><span class=\"p\">),</span>\n        <span class=\"c1\"># Discard those entities.</span>\n        <span class=\"n\">ENTITY_TYPES</span><span class=\"o\">.</span><span class=\"n\">EMBED</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"c1\"># Provide a fallback component (advanced).</span>\n        <span class=\"n\">ENTITY_TYPES</span><span class=\"o\">.</span><span class=\"n\">FALLBACK</span><span class=\"p\">:</span> <span class=\"n\">entity_fallback</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'composite_decorators'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"c1\"># Use composite decorators to replace text based on a regular expression.</span>\n        <span class=\"p\">{</span>\n            <span class=\"s1\">'strategy'</span><span class=\"p\">:</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'\\n'</span><span class=\"p\">),</span>\n            <span class=\"s1\">'component'</span><span class=\"p\">:</span> <span class=\"n\">br</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"s1\">'strategy'</span><span class=\"p\">:</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'#\\w+'</span><span class=\"p\">),</span>\n            <span class=\"s1\">'component'</span><span class=\"p\">:</span> <span class=\"n\">hashtag</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"s1\">'strategy'</span><span class=\"p\">:</span> <span class=\"n\">LINKIFY_RE</span><span class=\"p\">,</span>\n            <span class=\"s1\">'component'</span><span class=\"p\">:</span> <span class=\"n\">linkify</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">],</span>\n<span class=\"p\">}</span>\n</pre>\n<p>See <a href=\"https://github.com/springload/draftjs_exporter/blob/master/example.py\" rel=\"nofollow\">examples.py</a> for more details.</p>\n<h2>Advanced usage</h2>\n<h3>Custom components</h3>\n<p>To generate arbitrary markup with dynamic data, the exporter comes with an API to create rendering components. This API mirrors React\u2019s <a href=\"https://facebook.github.io/react/docs/top-level-api.html#react.createelement\" rel=\"nofollow\">createElement</a> API (what JSX compiles to).</p>\n<pre><span class=\"c1\"># All of the API is available from a single `DOM` namespace</span>\n<span class=\"kn\">from</span> <span class=\"nn\">draftjs_exporter.dom</span> <span class=\"kn\">import</span> <span class=\"n\">DOM</span>\n\n\n<span class=\"c1\"># Components are simple functions that take `props` as parameter and return DOM elements.</span>\n<span class=\"k\">def</span> <span class=\"nf\">image</span><span class=\"p\">(</span><span class=\"n\">props</span><span class=\"p\">):</span>\n    <span class=\"c1\"># This component creates an image element, with the relevant attributes.</span>\n    <span class=\"k\">return</span> <span class=\"n\">DOM</span><span class=\"o\">.</span><span class=\"n\">create_element</span><span class=\"p\">(</span><span class=\"s1\">'img'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'src'</span><span class=\"p\">:</span> <span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'src'</span><span class=\"p\">),</span>\n        <span class=\"s1\">'width'</span><span class=\"p\">:</span> <span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'width'</span><span class=\"p\">),</span>\n        <span class=\"s1\">'height'</span><span class=\"p\">:</span> <span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'height'</span><span class=\"p\">),</span>\n        <span class=\"s1\">'alt'</span><span class=\"p\">:</span> <span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'alt'</span><span class=\"p\">),</span>\n    <span class=\"p\">})</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">blockquote</span><span class=\"p\">(</span><span class=\"n\">props</span><span class=\"p\">):</span>\n    <span class=\"c1\"># This component uses block data to render a blockquote.</span>\n    <span class=\"n\">block_data</span> <span class=\"o\">=</span> <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s1\">'block'</span><span class=\"p\">][</span><span class=\"s1\">'data'</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># Here, we want to display the block's content so we pass the `children` prop as the last parameter.</span>\n    <span class=\"k\">return</span> <span class=\"n\">DOM</span><span class=\"o\">.</span><span class=\"n\">create_element</span><span class=\"p\">(</span><span class=\"s1\">'blockquote'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'cite'</span><span class=\"p\">:</span> <span class=\"n\">block_data</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'cite'</span><span class=\"p\">)</span>\n    <span class=\"p\">},</span> <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s1\">'children'</span><span class=\"p\">])</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">button</span><span class=\"p\">(</span><span class=\"n\">props</span><span class=\"p\">):</span>\n    <span class=\"n\">href</span> <span class=\"o\">=</span> <span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'href'</span><span class=\"p\">,</span> <span class=\"s1\">'#'</span><span class=\"p\">)</span>\n    <span class=\"n\">icon_name</span> <span class=\"o\">=</span> <span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'icon'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n    <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'text'</span><span class=\"p\">,</span> <span class=\"s1\">''</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">DOM</span><span class=\"o\">.</span><span class=\"n\">create_element</span><span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'class'</span><span class=\"p\">:</span> <span class=\"s1\">'icon-text'</span> <span class=\"k\">if</span> <span class=\"n\">icon_name</span> <span class=\"k\">else</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n            <span class=\"s1\">'href'</span><span class=\"p\">:</span> <span class=\"n\">href</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"c1\"># There can be as many `children` as required.</span>\n        <span class=\"c1\"># It is also possible to reuse other components and render them instead of HTML tags.</span>\n        <span class=\"n\">DOM</span><span class=\"o\">.</span><span class=\"n\">create_element</span><span class=\"p\">(</span><span class=\"n\">icon</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"n\">icon_name</span><span class=\"p\">})</span> <span class=\"k\">if</span> <span class=\"n\">icon_name</span> <span class=\"k\">else</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">DOM</span><span class=\"o\">.</span><span class=\"n\">create_element</span><span class=\"p\">(</span><span class=\"s1\">'span'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'class'</span><span class=\"p\">:</span> <span class=\"s1\">'icon-text'</span><span class=\"p\">},</span> <span class=\"n\">text</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">icon_name</span> <span class=\"k\">else</span> <span class=\"n\">text</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>Apart from <code>create_element</code>, a <code>parse_html</code> method is also available. Use it to interface with other HTML generators, like template engines.</p>\n<p>See <code>examples.py</code> in the repository for more details.</p>\n<h3>Fallback components</h3>\n<p>When dealing with changes in the content schema, as part of ongoing development or migrations, some content can go stale.\nTo solve this, the exporter allows the definition of fallback components for blocks, styles, and entities.\nThis feature is only used for development at the moment, if you have a use case for this in production we would love to hear from you.\nPlease get in touch!</p>\n<p>Add the following to the exporter config,</p>\n<pre><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'block_map'</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">BLOCK_MAP</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"p\">{</span>\n        <span class=\"c1\"># Provide a fallback for block types.</span>\n        <span class=\"n\">BLOCK_TYPES</span><span class=\"o\">.</span><span class=\"n\">FALLBACK</span><span class=\"p\">:</span> <span class=\"n\">block_fallback</span>\n    <span class=\"p\">}),</span>\n<span class=\"p\">}</span>\n</pre>\n<p>This fallback component can now control the exporter behavior when normal components are not found. Here is an example:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">block_fallback</span><span class=\"p\">(</span><span class=\"n\">props</span><span class=\"p\">):</span>\n    <span class=\"n\">type_</span> <span class=\"o\">=</span> <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s1\">'block'</span><span class=\"p\">][</span><span class=\"s1\">'type'</span><span class=\"p\">]</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">type_</span> <span class=\"o\">==</span> <span class=\"s1\">'example-discard'</span><span class=\"p\">:</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s1\">'Missing config for \"</span><span class=\"si\">%s</span><span class=\"s1\">\". Discarding block, keeping content.'</span> <span class=\"o\">%</span> <span class=\"n\">type_</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Directly return the block's children to keep its content.</span>\n        <span class=\"k\">return</span> <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s1\">'children'</span><span class=\"p\">]</span>\n    <span class=\"k\">elif</span> <span class=\"n\">type_</span> <span class=\"o\">==</span> <span class=\"s1\">'example-delete'</span><span class=\"p\">:</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">'Missing config for \"</span><span class=\"si\">%s</span><span class=\"s1\">\". Deleting block.'</span> <span class=\"o\">%</span> <span class=\"n\">type_</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Return None to not render anything, removing the whole block.</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s1\">'Missing config for \"</span><span class=\"si\">%s</span><span class=\"s1\">\". Using div instead.'</span> <span class=\"o\">%</span> <span class=\"n\">type_</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Provide a fallback.</span>\n        <span class=\"k\">return</span> <span class=\"n\">DOM</span><span class=\"o\">.</span><span class=\"n\">create_element</span><span class=\"p\">(</span><span class=\"s1\">'div'</span><span class=\"p\">,</span> <span class=\"p\">{},</span> <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s1\">'children'</span><span class=\"p\">])</span>\n</pre>\n<p>See <code>examples.py</code> in the repository for more details.</p>\n<h3>Alternative backing engines</h3>\n<p>By default, the exporter uses a dependency-free engine called <code>string</code> to build the DOM tree. There are two alternative backing engines: <code>html5lib</code> (via BeautifulSoup) and <code>lxml</code>.</p>\n<p>The <code>string</code> engine is the fastest, and does not have any dependencies. Its only drawback is that the <code>parse_html</code> method does not escape/sanitise HTML like that of other engines.</p>\n<ul>\n<li>For <code>html5lib</code>, do <code>pip install draftjs_exporter[html5lib]</code>.</li>\n<li>For <code>lxml</code>, do <code>pip install draftjs_exporter[lxml]</code>. It also requires <code>libxml2</code> and <code>libxslt</code> to be available on your system.</li>\n</ul>\n<p>Then, use the <code>engine</code> attribute of the exporter config:</p>\n<pre><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># Specify which DOM backing engine to use.</span>\n    <span class=\"s1\">'engine'</span><span class=\"p\">:</span> <span class=\"n\">DOM</span><span class=\"o\">.</span><span class=\"n\">HTML5LIB</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Or for lxml:</span>\n    <span class=\"s1\">'engine'</span><span class=\"p\">:</span> <span class=\"n\">DOM</span><span class=\"o\">.</span><span class=\"n\">LXML</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Custom backing engines</h3>\n<p>The exporter supports using custom engines to generate its output via the <code>DOM</code> API. This can be useful to implement custom export formats, e.g. <a href=\"https://github.com/thibaudcolas/draftjs_exporter_markdown\" rel=\"nofollow\">to Markdown (experimental)</a>.</p>\n<p>Here is an example implementation:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">draftjs_exporter</span> <span class=\"kn\">import</span> <span class=\"n\">DOMEngine</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">DOMListTree</span><span class=\"p\">(</span><span class=\"n\">DOMEngine</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Element tree using nested lists.</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_tag</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">attr</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">attr</span><span class=\"p\">,</span> <span class=\"p\">[]]</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">append_child</span><span class=\"p\">(</span><span class=\"n\">elt</span><span class=\"p\">,</span> <span class=\"n\">child</span><span class=\"p\">):</span>\n        <span class=\"n\">elt</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">child</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">render</span><span class=\"p\">(</span><span class=\"n\">elt</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">elt</span>\n\n\n<span class=\"n\">exporter</span> <span class=\"o\">=</span> <span class=\"n\">HTML</span><span class=\"p\">({</span>\n    <span class=\"c1\"># Use the dotted module syntax to point to the DOMEngine implementation.</span>\n    <span class=\"s1\">'engine'</span><span class=\"p\">:</span> <span class=\"s1\">'myproject.example.DOMListTree'</span>\n<span class=\"p\">})</span>\n</pre>\n<h3>Type annotations</h3>\n<p>The exporter\u2019s codebase is typed with annotations from the Python 3.5+ standard library, checked with mypy. Reusable types are made available:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">draftjs_exporter.dom</span> <span class=\"kn\">import</span> <span class=\"n\">DOM</span>\n<span class=\"kn\">from</span> <span class=\"nn\">draftjs_exporter.types</span> <span class=\"kn\">import</span> <span class=\"n\">Element</span><span class=\"p\">,</span> <span class=\"n\">Props</span>\n\n\n<span class=\"c1\"># Components are simple functions that take `props` as parameter and return DOM elements.</span>\n<span class=\"k\">def</span> <span class=\"nf\">image</span><span class=\"p\">(</span><span class=\"n\">props</span><span class=\"p\">:</span> <span class=\"n\">Props</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Element</span><span class=\"p\">:</span>\n    <span class=\"c1\"># This component creates an image element, with the relevant attributes.</span>\n    <span class=\"k\">return</span> <span class=\"n\">DOM</span><span class=\"o\">.</span><span class=\"n\">create_element</span><span class=\"p\">(</span><span class=\"s1\">'img'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'src'</span><span class=\"p\">:</span> <span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'src'</span><span class=\"p\">),</span>\n        <span class=\"s1\">'width'</span><span class=\"p\">:</span> <span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'width'</span><span class=\"p\">),</span>\n        <span class=\"s1\">'height'</span><span class=\"p\">:</span> <span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'height'</span><span class=\"p\">),</span>\n        <span class=\"s1\">'alt'</span><span class=\"p\">:</span> <span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'alt'</span><span class=\"p\">),</span>\n    <span class=\"p\">})</span>\n</pre>\n<h2>Contributing</h2>\n<p>See anything you like in here? Anything missing? We welcome all support, whether on bug reports, feature requests, code, design, reviews, tests, documentation, and more. Please have a look at our <a href=\"docs/CONTRIBUTING.md\" rel=\"nofollow\">contribution guidelines</a>.</p>\n<p>If you just want to set up the project on your own computer, the contribution guidelines also contain all of the setup commands.</p>\n<h2>Credits</h2>\n<p>This project is made possible by the work of <a href=\"https://github.com/springload\" rel=\"nofollow\">Springload</a>, a New Zealand digital agency, and. The <em>beautiful</em> demo site is the work of <a href=\"https://github.com/thibaudcolas\" rel=\"nofollow\">@thibaudcolas</a>.</p>\n<p>View the full list of <a href=\"https://github.com/springload/draftjs_exporter/graphs/contributors\" rel=\"nofollow\">contributors</a>. <a href=\"https://github.com/springload/draftjs_exporter/blob/master/LICENSE\" rel=\"nofollow\">MIT</a> licensed.</p>\n\n          </div>"}, "last_serial": 6522124, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2814d784b39dad8d009119d0edffb380", "sha256": "2ee5c318a5f19b31d665450be877cc5bc94c411b071a7a2ad20d82555b8230e4"}, "downloads": -1, "filename": "draftjs_exporter-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2814d784b39dad8d009119d0edffb380", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14643, "upload_time": "2016-07-04T14:07:01", "upload_time_iso_8601": "2016-07-04T14:07:01.415234Z", "url": "https://files.pythonhosted.org/packages/ad/8c/5615bbf335577bab7bb2b3f095d98ee4f5f2a276adafa9528898e94aded3/draftjs_exporter-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "519c8625f0c9ca99c917e3090c024ca4", "sha256": "45a2e79e7599f06912e83edd630ead2f66c6ab1354578d07bbbd24e73ec1cd60"}, "downloads": -1, "filename": "draftjs_exporter-0.2.0.tar.gz", "has_sig": false, "md5_digest": "519c8625f0c9ca99c917e3090c024ca4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14812, "upload_time": "2016-07-05T20:13:52", "upload_time_iso_8601": "2016-07-05T20:13:52.768730Z", "url": "https://files.pythonhosted.org/packages/ad/63/434c7a36b6aea869016f3ed5831f3d68b193e90b0069c0d3d5b8470b229e/draftjs_exporter-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "27dbeb9e3fb01090edd586334adb6cfe", "sha256": "d015f63567958ab866dae184c4d13cc7eb48f7075af7a011f1e71ec187aa75d6"}, "downloads": -1, "filename": "draftjs_exporter-0.3.0.tar.gz", "has_sig": false, "md5_digest": "27dbeb9e3fb01090edd586334adb6cfe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17767, "upload_time": "2016-07-20T12:28:42", "upload_time_iso_8601": "2016-07-20T12:28:42.068533Z", "url": "https://files.pythonhosted.org/packages/1c/12/a0089f81d7b15d50162ddeb54dd1052475021e03d91fb36589cc1f103cc6/draftjs_exporter-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "5cae5d53c1a88668589b8831ea69511c", "sha256": "4309daec172698b5bf9c9e74aaf3ff5385446a0c3dcd2018734701f37e1ac9e2"}, "downloads": -1, "filename": "draftjs_exporter-0.3.1.tar.gz", "has_sig": false, "md5_digest": "5cae5d53c1a88668589b8831ea69511c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17734, "upload_time": "2016-07-20T14:55:46", "upload_time_iso_8601": "2016-07-20T14:55:46.746096Z", "url": "https://files.pythonhosted.org/packages/54/3c/033b5cda04a3b4a7417e0b3eae1a709d98ff1e9291ad56956a8f1df37f1e/draftjs_exporter-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "26a40b990141f37663061c1b51cc5029", "sha256": "1e7e35fca3a8954f0feba25913ea7bd0aa2a252adfeb6db20c7d6f2c0df4d4c6"}, "downloads": -1, "filename": "draftjs_exporter-0.3.2.tar.gz", "has_sig": false, "md5_digest": "26a40b990141f37663061c1b51cc5029", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17805, "upload_time": "2016-07-25T10:59:21", "upload_time_iso_8601": "2016-07-25T10:59:21.874679Z", "url": "https://files.pythonhosted.org/packages/b3/33/67485300e32dd35d12340ce5752f0d3175d66e71d5c66e71963ce6b89236/draftjs_exporter-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "90f8a2a3d7a314217eb61e7117649f64", "sha256": "b7b6071cc428572f9bafef2830f4b80e1d12ef6c790e76b3b2d2c36e2c4e140c"}, "downloads": -1, "filename": "draftjs_exporter-0.3.3.tar.gz", "has_sig": false, "md5_digest": "90f8a2a3d7a314217eb61e7117649f64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18035, "upload_time": "2016-10-06T15:54:16", "upload_time_iso_8601": "2016-10-06T15:54:16.797249Z", "url": "https://files.pythonhosted.org/packages/1a/53/133af002003cae2fbb3c704842c13bdc96e22ac7ef9e396cdc41d1bcb408/draftjs_exporter-0.3.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "de47a5895491157c80fece7a4e1222e6", "sha256": "91dc4a50ba7f6ceb2ff902d7e5e65921cc01da313b2435927f8785e0456cefef"}, "downloads": -1, "filename": "draftjs_exporter-0.4.0.tar.gz", "has_sig": false, "md5_digest": "de47a5895491157c80fece7a4e1222e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19268, "upload_time": "2016-10-17T10:13:14", "upload_time_iso_8601": "2016-10-17T10:13:14.548364Z", "url": "https://files.pythonhosted.org/packages/6e/e9/23a3baf07468c75e0d275e7f6c547ca477003cbcb81865dc9bf044c7ffe3/draftjs_exporter-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "7db3353154159a83ebe407218b0472b4", "sha256": "b1db2331288110da0e73749e2907a34e000847cd1679f7fb2b64b30865f69f31"}, "downloads": -1, "filename": "draftjs_exporter-0.5.0.tar.gz", "has_sig": false, "md5_digest": "7db3353154159a83ebe407218b0472b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20115, "upload_time": "2016-11-17T17:52:42", "upload_time_iso_8601": "2016-11-17T17:52:42.196932Z", "url": "https://files.pythonhosted.org/packages/70/50/8b3a92952e70b644def42b3bd8f37b9648c5f35de7e21a0f231dd060223d/draftjs_exporter-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "fa8c0e5f496eedfc9f2c5f375c581b10", "sha256": "caf19099ca3c05a2bfe2dbb4920be98c014b61041d237933b84b3f4a4d0deac2"}, "downloads": -1, "filename": "draftjs_exporter-0.5.1.tar.gz", "has_sig": false, "md5_digest": "fa8c0e5f496eedfc9f2c5f375c581b10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20112, "upload_time": "2016-11-17T18:07:15", "upload_time_iso_8601": "2016-11-17T18:07:15.517447Z", "url": "https://files.pythonhosted.org/packages/12/3b/e45ffd0eb87ac0dcba66da6f7479820264325234819e477e390b441f1f83/draftjs_exporter-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "55dd6b0ff80427591fffefe8d19ef603", "sha256": "f139ef983a55ac0254a3069eaf372bbdfb32a70d4c4727547137b9d892ba5066"}, "downloads": -1, "filename": "draftjs_exporter-0.5.2.tar.gz", "has_sig": false, "md5_digest": "55dd6b0ff80427591fffefe8d19ef603", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20332, "upload_time": "2016-12-09T21:04:30", "upload_time_iso_8601": "2016-12-09T21:04:30.009232Z", "url": "https://files.pythonhosted.org/packages/e0/e6/13971b13c671dded6c35c18ae370b367b31b9b2b93aa809d9e6336958bb3/draftjs_exporter-0.5.2.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "2756ccd12fee652654075ff86830e424", "sha256": "7a9c9b6a8a8f930384d36c1350f261c39ed34d3333851e75948741f490f1984c"}, "downloads": -1, "filename": "draftjs_exporter-0.6.0.tar.gz", "has_sig": false, "md5_digest": "2756ccd12fee652654075ff86830e424", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20405, "upload_time": "2016-12-19T09:32:26", "upload_time_iso_8601": "2016-12-19T09:32:26.746867Z", "url": "https://files.pythonhosted.org/packages/11/b9/f307b8ed6e128e228b561bff5d1e3d794de1fc3fe551ef2aad019ce907ca/draftjs_exporter-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "a4dfbc200625ca87c782a6e3dc52aa73", "sha256": "677c09109caa9943d754b5512387c821998969ce454944bf12045cad19c51a47"}, "downloads": -1, "filename": "draftjs_exporter-0.6.1.tar.gz", "has_sig": false, "md5_digest": "a4dfbc200625ca87c782a6e3dc52aa73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20863, "upload_time": "2016-12-21T00:27:14", "upload_time_iso_8601": "2016-12-21T00:27:14.900845Z", "url": "https://files.pythonhosted.org/packages/59/20/720ea40aafe943741335ce7ce649e2eec6324c3e8bc7a844a0cf14f4f76e/draftjs_exporter-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "164aa249c2ca5f5db7b4dc3725215e5d", "sha256": "550caa54beb91711c0c5eb535ace2874215679505b77b9073fd0775293098d74"}, "downloads": -1, "filename": "draftjs_exporter-0.6.2.tar.gz", "has_sig": false, "md5_digest": "164aa249c2ca5f5db7b4dc3725215e5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21141, "upload_time": "2017-01-18T19:57:14", "upload_time_iso_8601": "2017-01-18T19:57:14.958328Z", "url": "https://files.pythonhosted.org/packages/21/f2/dd10dae80b9cf82ad8139fb439187a50ce809d25e3219c588fd44060321b/draftjs_exporter-0.6.2.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "66165f12135f903ed356ebb7a6446f66", "sha256": "3518cf7d19efd101df7ee3462b0896ae042398901a98248ca482b2c65caa0b25"}, "downloads": -1, "filename": "draftjs_exporter-0.7.0.tar.gz", "has_sig": false, "md5_digest": "66165f12135f903ed356ebb7a6446f66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23024, "upload_time": "2017-02-16T14:47:49", "upload_time_iso_8601": "2017-02-16T14:47:49.834681Z", "url": "https://files.pythonhosted.org/packages/de/15/d88ea301bc83e3b6f65ac85742350eea4af9f2f83331209fdf179d3102ee/draftjs_exporter-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "802557b7e356b4da13755f08f59cbfb9", "sha256": "bb70f1ae170f2fb6769676a9b1a89f33a1253e939e2a453d58ba8401c7cbe549"}, "downloads": -1, "filename": "draftjs_exporter-0.8.0.tar.gz", "has_sig": false, "md5_digest": "802557b7e356b4da13755f08f59cbfb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26456, "upload_time": "2017-04-03T22:38:16", "upload_time_iso_8601": "2017-04-03T22:38:16.857323Z", "url": "https://files.pythonhosted.org/packages/42/50/1ebc8c1c6269ab582bae3954c884551200f4763fcb8614f9422c2f7d676d/draftjs_exporter-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "d7d08a79f25de5c564eb95561a368dba", "sha256": "5fc8a463c16759fe9677c842ebd30ad3c403b3222f9cf2de7a8869b20149c9bc"}, "downloads": -1, "filename": "draftjs_exporter-0.8.1.tar.gz", "has_sig": false, "md5_digest": "d7d08a79f25de5c564eb95561a368dba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26329, "upload_time": "2017-04-06T02:24:37", "upload_time_iso_8601": "2017-04-06T02:24:37.814216Z", "url": "https://files.pythonhosted.org/packages/69/4a/c9c278a7e7a874032e3617462c7713f1544941dc72c00ffe197729b3aebb/draftjs_exporter-0.8.1.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "2fff82de6aa7983da2a29087da877831", "sha256": "3cc11493fbf1c93506dfff5090fffe9879ccee9e88bd3c8aaf51e346826e30ba"}, "downloads": -1, "filename": "draftjs_exporter-0.9.0.tar.gz", "has_sig": false, "md5_digest": "2fff82de6aa7983da2a29087da877831", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30574, "upload_time": "2017-04-25T14:27:28", "upload_time_iso_8601": "2017-04-25T14:27:28.304752Z", "url": "https://files.pythonhosted.org/packages/7a/30/a9137cdc420837828113a2e083e9ace54378a33dd43fbbea7693829121ef/draftjs_exporter-0.9.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "ac36e1b62ce26e4342ec99d87fce8db2", "sha256": "aebf86c63e9b5075b0f88121a9abb26412c72e71f5d3029597b543141bdff70a"}, "downloads": -1, "filename": "draftjs_exporter-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ac36e1b62ce26e4342ec99d87fce8db2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30682, "upload_time": "2017-04-25T15:31:26", "upload_time_iso_8601": "2017-04-25T15:31:26.490248Z", "url": "https://files.pythonhosted.org/packages/0d/3d/ac2d8aae353aefc674ac6cf6bd98250af8310879c5ca4377aebe30c6fa7f/draftjs_exporter-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "dc22765846e65ce1c12d64f06bac56aa", "sha256": "9b419303a4c92572a8c211689a508b50d2e47d58a19616f7e294ddb71cb54ebf"}, "downloads": -1, "filename": "draftjs_exporter-1.1.0.tar.gz", "has_sig": false, "md5_digest": "dc22765846e65ce1c12d64f06bac56aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37904, "upload_time": "2017-11-21T10:55:19", "upload_time_iso_8601": "2017-11-21T10:55:19.662477Z", "url": "https://files.pythonhosted.org/packages/c4/28/fb3c01d361e77b089495ca9f0eed0f9782c587e36c1cf1b5d8ed3fb4ed39/draftjs_exporter-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "01c37f22b18a8c887635dab075b56653", "sha256": "0b7d4e61b3560910249f718509cd86c545625829e4f414dd7304cd84108cf445"}, "downloads": -1, "filename": "draftjs_exporter-1.1.1.tar.gz", "has_sig": false, "md5_digest": "01c37f22b18a8c887635dab075b56653", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38164, "upload_time": "2017-12-08T02:58:03", "upload_time_iso_8601": "2017-12-08T02:58:03.659997Z", "url": "https://files.pythonhosted.org/packages/27/ba/7843d6e8781fa112b748e67eedf2344ea943a093b61b895a20af61d005bc/draftjs_exporter-1.1.1.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "ceb94e337fcd115b1c70d41d33af4604", "sha256": "6d29c45ea12fef51fff65665a1c9c41fd5785b46f0d1ee70f2e61af7bfcfe77c"}, "downloads": -1, "filename": "draftjs_exporter-2.0.0.tar.gz", "has_sig": false, "md5_digest": "ceb94e337fcd115b1c70d41d33af4604", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28062, "upload_time": "2017-12-12T19:41:35", "upload_time_iso_8601": "2017-12-12T19:41:35.955361Z", "url": "https://files.pythonhosted.org/packages/1b/ea/34bad7bcf278cef729c909b0f31b9f464f295ab09bf13740cd0f8bb4db4d/draftjs_exporter-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "de2e05d84299a0f44271711e14be1313", "sha256": "81d5ee40f95d88bf03f50ed30fdb8bf5911d3a0537cf3b3bed5edf15ff511b36"}, "downloads": -1, "filename": "draftjs_exporter-2.1.0.tar.gz", "has_sig": false, "md5_digest": "de2e05d84299a0f44271711e14be1313", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28879, "upload_time": "2018-03-01T17:45:55", "upload_time_iso_8601": "2018-03-01T17:45:55.622901Z", "url": "https://files.pythonhosted.org/packages/6d/e5/fcf88a5dab82ca619ff6824a062b46d9315ba91e64204275213a1a712125/draftjs_exporter-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "77851280d1eb83a2a0305603c178c200", "sha256": "24282376e9ee71e5dc25e027308e5d61f9412bf5e07f8e68bda7f2bc025f7a34"}, "downloads": -1, "filename": "draftjs_exporter-2.1.1.tar.gz", "has_sig": false, "md5_digest": "77851280d1eb83a2a0305603c178c200", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26703, "upload_time": "2018-05-13T20:14:58", "upload_time_iso_8601": "2018-05-13T20:14:58.455817Z", "url": "https://files.pythonhosted.org/packages/c3/98/2ae0db16e3841d9d0623b1a2248987e1edd037ab7eaa04e45e4fdf18873b/draftjs_exporter-2.1.1.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "4029f1338298813d085efb174118f396", "sha256": "d2ceeef98185ba02355496851aee17d25951f5d8c72c12f8af6c186e312e9598"}, "downloads": -1, "filename": "draftjs_exporter-2.1.2.tar.gz", "has_sig": false, "md5_digest": "4029f1338298813d085efb174118f396", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26804, "upload_time": "2018-06-04T21:38:55", "upload_time_iso_8601": "2018-06-04T21:38:55.862464Z", "url": "https://files.pythonhosted.org/packages/90/d6/561281b28f134c4cdd80631ba778b63a44af9fca17f9d9ecabac9ba4540f/draftjs_exporter-2.1.2.tar.gz", "yanked": false}], "2.1.3": [{"comment_text": "", "digests": {"md5": "817a028ea951c409862e690dde6dfb14", "sha256": "9809f140c39d2084022c9ade69fe14c558a574dea5c1e34ba3bfe07c4b5f7844"}, "downloads": -1, "filename": "draftjs_exporter-2.1.3.tar.gz", "has_sig": false, "md5_digest": "817a028ea951c409862e690dde6dfb14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26812, "upload_time": "2018-10-24T22:10:46", "upload_time_iso_8601": "2018-10-24T22:10:46.629508Z", "url": "https://files.pythonhosted.org/packages/ec/47/89a2a8fc4ecd5eaa606af62927c11fb3fc28da23f5a21007156f630c1e25/draftjs_exporter-2.1.3.tar.gz", "yanked": false}], "2.1.4": [{"comment_text": "", "digests": {"md5": "8bd958b98b04bff4df8881d1352790e2", "sha256": "1a4252b40bd3b6d251969e9fa59965a617108d48661367ab8406322422600fad"}, "downloads": -1, "filename": "draftjs_exporter-2.1.4.tar.gz", "has_sig": false, "md5_digest": "8bd958b98b04bff4df8881d1352790e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27088, "upload_time": "2018-11-09T21:25:20", "upload_time_iso_8601": "2018-11-09T21:25:20.975917Z", "url": "https://files.pythonhosted.org/packages/56/20/29d19e4034677e552859ff657c3cee5ddc37f437a3f2e5b29a5d2a152463/draftjs_exporter-2.1.4.tar.gz", "yanked": false}], "2.1.5": [{"comment_text": "", "digests": {"md5": "5adc8fd1dd1b0916066aa47844914736", "sha256": "8430b6c0f2a1c644ef9959b36f2f36f093f8209b94f81b4443216d3f386a3bce"}, "downloads": -1, "filename": "draftjs_exporter-2.1.5.tar.gz", "has_sig": false, "md5_digest": "5adc8fd1dd1b0916066aa47844914736", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27107, "upload_time": "2018-11-20T11:01:09", "upload_time_iso_8601": "2018-11-20T11:01:09.559676Z", "url": "https://files.pythonhosted.org/packages/e9/e3/77f3a74f5b43c6694479f68215c1a1b8bc7fd275b44462efc0b0f3302606/draftjs_exporter-2.1.5.tar.gz", "yanked": false}], "2.1.6": [{"comment_text": "", "digests": {"md5": "88d31d787eec29028d1672af7df843f7", "sha256": "503f222c81de9a0619158d8f88b638f9069af8de233dc020faa782c7a3b22100"}, "downloads": -1, "filename": "draftjs_exporter-2.1.6.tar.gz", "has_sig": false, "md5_digest": "88d31d787eec29028d1672af7df843f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27342, "upload_time": "2019-05-28T00:54:38", "upload_time_iso_8601": "2019-05-28T00:54:38.871660Z", "url": "https://files.pythonhosted.org/packages/49/ca/99b4c06f03052bed4aaa43d47cd5f43668075e9f7a0d66f93c312991e74e/draftjs_exporter-2.1.6.tar.gz", "yanked": false}], "2.1.7": [{"comment_text": "", "digests": {"md5": "9bbe1635e47c3f0bb7013f7cdbf3f278", "sha256": "5839cbc29d7bce2fb99837a404ca40c3a07313f2a20e2700de7ad6aa9a9a18fb"}, "downloads": -1, "filename": "draftjs_exporter-2.1.7.tar.gz", "has_sig": false, "md5_digest": "9bbe1635e47c3f0bb7013f7cdbf3f278", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27941, "upload_time": "2019-09-26T21:16:21", "upload_time_iso_8601": "2019-09-26T21:16:21.768758Z", "url": "https://files.pythonhosted.org/packages/8d/ee/eeb5d159b6ad55efb7f2ad96803b6527fb5a29737b4e2ec9cd8e4635dada/draftjs_exporter-2.1.7.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "c35c0d63b890c2d2eca15a8a3f7d4196", "sha256": "e98d3ff0af0974c3f3640145e194e5fb0ae2aa8a9ddc403e5fd9c9c0200bc176"}, "downloads": -1, "filename": "draftjs_exporter-3.0.0.tar.gz", "has_sig": false, "md5_digest": "c35c0d63b890c2d2eca15a8a3f7d4196", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30473, "upload_time": "2020-01-01T19:35:18", "upload_time_iso_8601": "2020-01-01T19:35:18.579518Z", "url": "https://files.pythonhosted.org/packages/cb/89/1102c688c0783bee5882e68a227abde7374e839bbd37f1f5ac259cbf7b23/draftjs_exporter-3.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c35c0d63b890c2d2eca15a8a3f7d4196", "sha256": "e98d3ff0af0974c3f3640145e194e5fb0ae2aa8a9ddc403e5fd9c9c0200bc176"}, "downloads": -1, "filename": "draftjs_exporter-3.0.0.tar.gz", "has_sig": false, "md5_digest": "c35c0d63b890c2d2eca15a8a3f7d4196", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30473, "upload_time": "2020-01-01T19:35:18", "upload_time_iso_8601": "2020-01-01T19:35:18.579518Z", "url": "https://files.pythonhosted.org/packages/cb/89/1102c688c0783bee5882e68a227abde7374e839bbd37f1f5ac259cbf7b23/draftjs_exporter-3.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:55 2020"}