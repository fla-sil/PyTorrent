{"info": {"author": "Robert Romano", "author_email": "rromano@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Internet :: Log Analysis", "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware", "Topic :: Security", "Topic :: System :: Logging"], "description": "# Django Admin Restrict\n\n[![build-status-image]][travis]\n[![coverage-status-image]][codecov]\n[![pypi-version]][pypi]\n\n**Restrict admin pages using simple IP address rules.**\n\n## Overview\n\n``django-adminrestrict`` secures access to the Django admin pages. It works\nby blocking requests for the admin page path unless the requests come from specific IP addresses\nthat you specify in a model.  \n\n\n## Requirements\n\n``django-adminrestrict`` requires Django 1.4 or later.  The\napplication is intended improve the security around the Django admin\nlogin pages.\n\n## Installation\n\nDownload and install ``django-adminrestrict`` using **one** of the following methods:\n\n### pip\n\nYou can install the latest stable package running this command:\n\n    $ pip install django-adminrestrict\n\n### Setuptools\n\nYou can install the latest stable package running:\n\n    $ easy_install django-adminrestrict\n\n\n## Development\n\nYou can contribute to this project forking it from github and sending pull requests.\n\n\n## Configuration\n\nFirst of all, you must add this project to your list of ``INSTALLED_APPS`` in\n``settings.py``\n\n    INSTALLED_APPS = (\n        'django.contrib.admin',\n        'django.contrib.auth',\n        'django.contrib.contenttypes',\n        'django.contrib.sessions',\n        'django.contrib.sites',\n        ...\n        'adminrestrict',\n        ...\n    )\n\nNext, install the ``AdminPagesRestrictMiddleware`` middleware:\n\n    MIDDLEWARE_CLASSES = (\n        'django.middleware.common.CommonMiddleware',\n        'django.contrib.sessions.middleware.SessionMiddleware',\n        'django.contrib.auth.middleware.AuthenticationMiddleware',\n        'adminrestrict.middleware.AdminPagesRestrictMiddleware',\n    )\n\n\nCreate the appropriate tables in your database that are necessary for operation.\n\nFor django(<1.7), run ``python manage.py syncdb``.\n\nFor django(>=1.7), run ``python manage.py makemigrations adminrestrict; python manage.py migrate``. \n\nIMPORTANT: When the package is configured in your project, an empty table called `AllowedIP`\nwill be created in your database. If this table is empty or has one record with\na \"\\*\" the package will not restrict any IPs. If you want to add specific restrictions\nplease go to the next section.\n\n## Usage\n\nUsing ``django-adminrestrict`` is extremely simple.  Once you install the application\nand the middleware, all you need to do is update the allowed IP addresses `AllowedIP`\nsection of the admin pages.\n\n### Adding allowed IP addresses\n\nLogin to the admin pages and browse to the Adminrestrict app, and\nstart creating recorded in the `AllowedIP` table.  Just type in the IP\naddresses and save records.\n\n### Adding allowed IP addresses with wildcards\n\nCreate a `AllowedIP` entries ending with a \"\\*\" to any IPs that start\nwith the specified pattern. For example, adding `192.*` would allow\naddreses starting matching 192.*.*.* to login to the admin pages.\n\n### Adding * to disable all restrictions\n\nCreate a single `AllowedIP` record with \"\\*\" as the IP address, to\ntemporarily disable restrictions. In this way, you do not have to\nmodify settings.py and remove the middleware if you need to disable.\n\nHaving at least one `AllowedIP` record with * as the IP address\neffectively disables all restrictions.\n\n[build-status-image]: https://secure.travis-ci.org/robromano/django-adminrestrict.svg?branch=master\n[travis]: https://travis-ci.org/robromano/django-adminrestrict?branch=master\n[pypi-version]: https://badge.fury.io/py/django-adminrestrict.svg\n[pypi]: https://pypi.org/project/django-adminrestrict/\n[coverage-status-image]: https://img.shields.io/codecov/c/github/robromano/django-adminrestrict/master.svg\n[codecov]: https://codecov.io/github/robromano/django-adminrestrict?branch=master\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/robromano/django-adminrestrict", "keywords": "authentication,django,security", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-adminrestrict", "package_url": "https://pypi.org/project/django-adminrestrict/", "platform": "", "project_url": "https://pypi.org/project/django-adminrestrict/", "project_urls": {"Homepage": "https://github.com/robromano/django-adminrestrict"}, "release_url": "https://pypi.org/project/django-adminrestrict/2.0.2/", "requires_dist": null, "requires_python": "", "summary": "Restrict admin pages using simple IP address rules", "version": "2.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django Admin Restrict</h1>\n<p><a href=\"https://travis-ci.org/robromano/django-adminrestrict?branch=master\" rel=\"nofollow\"><img alt=\"build-status-image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1844360bc8d68db673721b43d2179c113a6be77c/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f726f62726f6d616e6f2f646a616e676f2d61646d696e72657374726963742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/github/robromano/django-adminrestrict?branch=master\" rel=\"nofollow\"><img alt=\"coverage-status-image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8c588a4cd087f772c7cef3eec9f67eb5684a6bfd/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f726f62726f6d616e6f2f646a616e676f2d61646d696e72657374726963742f6d61737465722e737667\"></a>\n<a href=\"https://pypi.org/project/django-adminrestrict/\" rel=\"nofollow\"><img alt=\"pypi-version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a019d79fc161ea1ac2b7217c2e73412fd53f31bf/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d61646d696e72657374726963742e737667\"></a></p>\n<p><strong>Restrict admin pages using simple IP address rules.</strong></p>\n<h2>Overview</h2>\n<p><code>django-adminrestrict</code> secures access to the Django admin pages. It works\nby blocking requests for the admin page path unless the requests come from specific IP addresses\nthat you specify in a model.</p>\n<h2>Requirements</h2>\n<p><code>django-adminrestrict</code> requires Django 1.4 or later.  The\napplication is intended improve the security around the Django admin\nlogin pages.</p>\n<h2>Installation</h2>\n<p>Download and install <code>django-adminrestrict</code> using <strong>one</strong> of the following methods:</p>\n<h3>pip</h3>\n<p>You can install the latest stable package running this command:</p>\n<pre><code>$ pip install django-adminrestrict\n</code></pre>\n<h3>Setuptools</h3>\n<p>You can install the latest stable package running:</p>\n<pre><code>$ easy_install django-adminrestrict\n</code></pre>\n<h2>Development</h2>\n<p>You can contribute to this project forking it from github and sending pull requests.</p>\n<h2>Configuration</h2>\n<p>First of all, you must add this project to your list of <code>INSTALLED_APPS</code> in\n<code>settings.py</code></p>\n<pre><code>INSTALLED_APPS = (\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.sites',\n    ...\n    'adminrestrict',\n    ...\n)\n</code></pre>\n<p>Next, install the <code>AdminPagesRestrictMiddleware</code> middleware:</p>\n<pre><code>MIDDLEWARE_CLASSES = (\n    'django.middleware.common.CommonMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'adminrestrict.middleware.AdminPagesRestrictMiddleware',\n)\n</code></pre>\n<p>Create the appropriate tables in your database that are necessary for operation.</p>\n<p>For django(&lt;1.7), run <code>python manage.py syncdb</code>.</p>\n<p>For django(&gt;=1.7), run <code>python manage.py makemigrations adminrestrict; python manage.py migrate</code>.</p>\n<p>IMPORTANT: When the package is configured in your project, an empty table called <code>AllowedIP</code>\nwill be created in your database. If this table is empty or has one record with\na \"*\" the package will not restrict any IPs. If you want to add specific restrictions\nplease go to the next section.</p>\n<h2>Usage</h2>\n<p>Using <code>django-adminrestrict</code> is extremely simple.  Once you install the application\nand the middleware, all you need to do is update the allowed IP addresses <code>AllowedIP</code>\nsection of the admin pages.</p>\n<h3>Adding allowed IP addresses</h3>\n<p>Login to the admin pages and browse to the Adminrestrict app, and\nstart creating recorded in the <code>AllowedIP</code> table.  Just type in the IP\naddresses and save records.</p>\n<h3>Adding allowed IP addresses with wildcards</h3>\n<p>Create a <code>AllowedIP</code> entries ending with a \"*\" to any IPs that start\nwith the specified pattern. For example, adding <code>192.*</code> would allow\naddreses starting matching 192.<em>.</em>.* to login to the admin pages.</p>\n<h3>Adding * to disable all restrictions</h3>\n<p>Create a single <code>AllowedIP</code> record with \"*\" as the IP address, to\ntemporarily disable restrictions. In this way, you do not have to\nmodify settings.py and remove the middleware if you need to disable.</p>\n<p>Having at least one <code>AllowedIP</code> record with * as the IP address\neffectively disables all restrictions.</p>\n\n          </div>"}, "last_serial": 6281675, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "1e98e5f9e7879e9178c0223251ad7379", "sha256": "2b5cd0837583df3ccb8da31ee1abd149dea5ac48d885427cb3b86ad77a1a56d5"}, "downloads": -1, "filename": "django-adminrestrict-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1e98e5f9e7879e9178c0223251ad7379", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5679, "upload_time": "2014-10-09T20:22:56", "upload_time_iso_8601": "2014-10-09T20:22:56.150255Z", "url": "https://files.pythonhosted.org/packages/f2/20/deb8b56412c9793ca2c45d140956558f1300a59c0464821a7d4e8fb1741c/django-adminrestrict-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "67511325da2a06c54a874de483226edb", "sha256": "6e6af103c13c8980f1c9ac98847dd1519bd4803d9f5bb05f55a0ccb9b2a5bbee"}, "downloads": -1, "filename": "django-adminrestrict-1.0.1.tar.gz", "has_sig": false, "md5_digest": "67511325da2a06c54a874de483226edb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5989, "upload_time": "2014-10-11T19:53:26", "upload_time_iso_8601": "2014-10-11T19:53:26.837221Z", "url": "https://files.pythonhosted.org/packages/11/ff/969a06136f98018ac17edb9161b16bff20cfe6fc338f947434b1de3fe7c0/django-adminrestrict-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "0cd0ee73bb546615b9b4534e7d149a61", "sha256": "41ffea74c30debc5986e59e905f3cc3d7d6aef1710cd39a49e6b0f825d2e2bad"}, "downloads": -1, "filename": "django-adminrestrict-1.0.2.tar.gz", "has_sig": false, "md5_digest": "0cd0ee73bb546615b9b4534e7d149a61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6225, "upload_time": "2016-03-09T01:50:43", "upload_time_iso_8601": "2016-03-09T01:50:43.438766Z", "url": "https://files.pythonhosted.org/packages/6b/d2/c3d03e52a09b24add003d2bbabc4addf886f2a6d77be4ff86cd58c1db48c/django-adminrestrict-1.0.2.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "79b442955072279b13f4a254a2945131", "sha256": "5ca29bc9feae8e68152b7dfbeda0292d2cdafb12231fb7675b4cc9242edebddc"}, "downloads": -1, "filename": "django-adminrestrict-1.0.4.tar.gz", "has_sig": false, "md5_digest": "79b442955072279b13f4a254a2945131", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6512, "upload_time": "2017-09-15T03:05:36", "upload_time_iso_8601": "2017-09-15T03:05:36.701730Z", "url": "https://files.pythonhosted.org/packages/1f/60/ae2d0b668c4ab58b961a94eb8fc69db289fa6fe84e6d9fee30fb670fc86b/django-adminrestrict-1.0.4.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "e556271b4d1581bd215138767188598c", "sha256": "1454820e4a8155af03338413864667124660261811aa4bad18e759186af1a607"}, "downloads": -1, "filename": "django_adminrestrict-2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "e556271b4d1581bd215138767188598c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 8002, "upload_time": "2019-03-28T00:52:00", "upload_time_iso_8601": "2019-03-28T00:52:00.093395Z", "url": "https://files.pythonhosted.org/packages/d3/6a/b565adc94d478a41fb535d3de80a0e5a5abb5526426bbf9e1ba40099a111/django_adminrestrict-2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bb9d23104905570710503c7d31f39502", "sha256": "e62b3befb1b5804650843a991bf0e1bc43b1b410dd4cfdffdb9839d8b236caf5"}, "downloads": -1, "filename": "django-adminrestrict-2.0.tar.gz", "has_sig": false, "md5_digest": "bb9d23104905570710503c7d31f39502", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6789, "upload_time": "2019-03-28T00:52:01", "upload_time_iso_8601": "2019-03-28T00:52:01.282937Z", "url": "https://files.pythonhosted.org/packages/e0/89/9d9e98a6a6618c9a70be6f9ca29cd627529ed34448f5bbf997a53d9c08cf/django-adminrestrict-2.0.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "2149e65b59cd2e326d40a2014db32d71", "sha256": "bba7a0d3af1015a639d90c3ef279e53adbd7932efbfc853e8a7efafe8f8a6af6"}, "downloads": -1, "filename": "django_adminrestrict-2.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2149e65b59cd2e326d40a2014db32d71", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8847, "upload_time": "2019-12-11T23:57:35", "upload_time_iso_8601": "2019-12-11T23:57:35.051823Z", "url": "https://files.pythonhosted.org/packages/a8/98/3f940bc912c000f94e47f19e594e6fb8261b877f2f953a5c31c9f33755b8/django_adminrestrict-2.0.2-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2149e65b59cd2e326d40a2014db32d71", "sha256": "bba7a0d3af1015a639d90c3ef279e53adbd7932efbfc853e8a7efafe8f8a6af6"}, "downloads": -1, "filename": "django_adminrestrict-2.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2149e65b59cd2e326d40a2014db32d71", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8847, "upload_time": "2019-12-11T23:57:35", "upload_time_iso_8601": "2019-12-11T23:57:35.051823Z", "url": "https://files.pythonhosted.org/packages/a8/98/3f940bc912c000f94e47f19e594e6fb8261b877f2f953a5c31c9f33755b8/django_adminrestrict-2.0.2-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:37:47 2020"}