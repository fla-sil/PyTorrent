{"info": {"author": "Alyssa Kramer Morrow", "author_email": "akmorrow@berkeley.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "# Epitome\n\nFull pipeline for learning TFBS from epigenetic datasets.\n\n![Epitome Diagram](docs/figures/epitome_diagram.png)\n\nEpitome leverages chromatin accessibility data to predict transcription factor binding sites on a novel cell type of interest. Epitome computes the chromatin similarity between 11 cell types in ENCODE and the novel cell types, and uses chromatin similarity to transfer binding information in known cell types to a novel cell type of interest.\n\n\n## Requirements:\n* [conda](https://docs.conda.io/en/latest/miniconda.html)\n* python > 3.6\n\n## Setup and Installation:\n1. Create and activate a conda venv:\n```\nconda create --name EpitomeEnv python=3.6 pip\nsource activate EpitomeEnv\n```\n2. Install Epitome:\n```\npip install epitome\n```\n\n# Install Epitome for development:\n```\npip install -e .\n```\n\nNote: Epitome is configured for tensorflow 1.12/Cuda 9. If you have a different\nversion of cuda, update tensorflow-gpu version accordingly.\n\nTo check your Cuda version:\n```\nnvcc --version\n```\n\n## Training a Model\n\n```python\n\n    assays = list_assays()[0:3] # list of available ChIP-seq targets epitome can predict on\n\n    from epitome.models import *\n    model = VLP(['CTCF', 'SMC3', 'RAD21'])\n    model.train(5000) # train for 5000 iterations\n```\n\n## Evaluate a Model:\n\n```python\n\n   model.test(1000) # evaluate how well the model performs on a validation set\n\n```\n\n## Predict using a Model:\n\nEpitome can perform genome wide predictions or region specific predictions on\na new DNase-seq or ATAC-seq sample.\n\nTo score specific regions:\n\n```python\n\n   chromatin_peak_file = ... # path to peak called ATAC-seq or DNase-seq in bed format\n   regions_file = ...        # path to bed file of regions to score\n   results = model.score_peak_file(chromatin_peak_file, regions_file)\n\n```\n\nTo score on the whole genome:\n```python\n\n   chromatin_peak_file = ... # path to peak called ATAC-seq or DNase-seq in bed format\n   file_prefix = ...        # file to save compressed numpy predictions to.\n   model.score_peak_file(chromatin_peak_file, file_prefix)\n\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "ENCODE ChIP-seq_peaks prediction histone transcription_factor", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "epitome", "package_url": "https://pypi.org/project/epitome/", "platform": "", "project_url": "https://pypi.org/project/epitome/", "project_urls": {"Documentation": "https://readthedocs.org", "Source": "https://github.com/akmorrow13/epitome"}, "release_url": "https://pypi.org/project/epitome/0.0.1a1/", "requires_dist": null, "requires_python": ">=3", "summary": "ML model for predicting ChIP-seq peaks in new cell types from ENCODE cell lines", "version": "0.0.1a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Epitome</h1>\n<p>Full pipeline for learning TFBS from epigenetic datasets.</p>\n<p><img alt=\"Epitome Diagram\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5502438cd2809de6dd5dc5fbdc9f4bfc6cba65e3/646f63732f666967757265732f657069746f6d655f6469616772616d2e706e67\"></p>\n<p>Epitome leverages chromatin accessibility data to predict transcription factor binding sites on a novel cell type of interest. Epitome computes the chromatin similarity between 11 cell types in ENCODE and the novel cell types, and uses chromatin similarity to transfer binding information in known cell types to a novel cell type of interest.</p>\n<h2>Requirements:</h2>\n<ul>\n<li><a href=\"https://docs.conda.io/en/latest/miniconda.html\" rel=\"nofollow\">conda</a></li>\n<li>python &gt; 3.6</li>\n</ul>\n<h2>Setup and Installation:</h2>\n<ol>\n<li>Create and activate a conda venv:</li>\n</ol>\n<pre><code>conda create --name EpitomeEnv python=3.6 pip\nsource activate EpitomeEnv\n</code></pre>\n<ol>\n<li>Install Epitome:</li>\n</ol>\n<pre><code>pip install epitome\n</code></pre>\n<h1>Install Epitome for development:</h1>\n<pre><code>pip install -e .\n</code></pre>\n<p>Note: Epitome is configured for tensorflow 1.12/Cuda 9. If you have a different\nversion of cuda, update tensorflow-gpu version accordingly.</p>\n<p>To check your Cuda version:</p>\n<pre><code>nvcc --version\n</code></pre>\n<h2>Training a Model</h2>\n<pre>    <span class=\"n\">assays</span> <span class=\"o\">=</span> <span class=\"n\">list_assays</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"c1\"># list of available ChIP-seq targets epitome can predict on</span>\n\n    <span class=\"kn\">from</span> <span class=\"nn\">epitome.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">VLP</span><span class=\"p\">([</span><span class=\"s1\">'CTCF'</span><span class=\"p\">,</span> <span class=\"s1\">'SMC3'</span><span class=\"p\">,</span> <span class=\"s1\">'RAD21'</span><span class=\"p\">])</span>\n    <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span><span class=\"mi\">5000</span><span class=\"p\">)</span> <span class=\"c1\"># train for 5000 iterations</span>\n</pre>\n<h2>Evaluate a Model:</h2>\n<pre>   <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">)</span> <span class=\"c1\"># evaluate how well the model performs on a validation set</span>\n</pre>\n<h2>Predict using a Model:</h2>\n<p>Epitome can perform genome wide predictions or region specific predictions on\na new DNase-seq or ATAC-seq sample.</p>\n<p>To score specific regions:</p>\n<pre>   <span class=\"n\">chromatin_peak_file</span> <span class=\"o\">=</span> <span class=\"o\">...</span> <span class=\"c1\"># path to peak called ATAC-seq or DNase-seq in bed format</span>\n   <span class=\"n\">regions_file</span> <span class=\"o\">=</span> <span class=\"o\">...</span>        <span class=\"c1\"># path to bed file of regions to score</span>\n   <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">score_peak_file</span><span class=\"p\">(</span><span class=\"n\">chromatin_peak_file</span><span class=\"p\">,</span> <span class=\"n\">regions_file</span><span class=\"p\">)</span>\n</pre>\n<p>To score on the whole genome:</p>\n<pre>   <span class=\"n\">chromatin_peak_file</span> <span class=\"o\">=</span> <span class=\"o\">...</span> <span class=\"c1\"># path to peak called ATAC-seq or DNase-seq in bed format</span>\n   <span class=\"n\">file_prefix</span> <span class=\"o\">=</span> <span class=\"o\">...</span>        <span class=\"c1\"># file to save compressed numpy predictions to.</span>\n   <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">score_peak_file</span><span class=\"p\">(</span><span class=\"n\">chromatin_peak_file</span><span class=\"p\">,</span> <span class=\"n\">file_prefix</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6500819, "releases": {"0.0.1a0": [{"comment_text": "", "digests": {"md5": "1392b466199b7b98a0ae841d30ebeab4", "sha256": "35a93f4c2887ddd304be7baa144282d4a6bd22684c4cf88cc7e17ec9f8ecbe29"}, "downloads": -1, "filename": "epitome-0.0.1a0-py3.7.egg", "has_sig": false, "md5_digest": "1392b466199b7b98a0ae841d30ebeab4", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3", "size": 62354, "upload_time": "2020-01-22T14:06:41", "upload_time_iso_8601": "2020-01-22T14:06:41.111954Z", "url": "https://files.pythonhosted.org/packages/7a/2c/f4c4175dd15fb34114de3fc7bef7444d35583de6a25867c1ae6a9c2d3b46/epitome-0.0.1a0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c76588435134cce1963591136f412acd", "sha256": "7f66250242081347558c8053b0c46605d173173bd96229ffaf97355627ea58bf"}, "downloads": -1, "filename": "epitome-0.0.1a0.tar.gz", "has_sig": false, "md5_digest": "c76588435134cce1963591136f412acd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 27445, "upload_time": "2020-01-22T14:06:43", "upload_time_iso_8601": "2020-01-22T14:06:43.390879Z", "url": "https://files.pythonhosted.org/packages/a4/05/d7e267338ba474fda85773506274ec354a3f8e444b685719f4c1d47f738b/epitome-0.0.1a0.tar.gz", "yanked": false}], "0.0.1a1": [{"comment_text": "", "digests": {"md5": "5066938047b3ad3064a0a0d940ba1baf", "sha256": "4bb1e170bc62a23905a1caab37ad6be51f244d4b5004c13c8ac506e3346a371b"}, "downloads": -1, "filename": "epitome-0.0.1a1-py3.6.egg", "has_sig": false, "md5_digest": "5066938047b3ad3064a0a0d940ba1baf", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3", "size": 60438, "upload_time": "2020-01-22T15:14:49", "upload_time_iso_8601": "2020-01-22T15:14:49.651397Z", "url": "https://files.pythonhosted.org/packages/d2/ce/0308a3e8134b66a07ced01730e2f5c83b6b92944267f215cfad31af2eba7/epitome-0.0.1a1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f418c076b0e15d36c8bc3598592e1e34", "sha256": "62015016917ccf22fdc2a0116902277485693e953aa64dd66437e60140ca2de6"}, "downloads": -1, "filename": "epitome-0.0.1a1.tar.gz", "has_sig": false, "md5_digest": "f418c076b0e15d36c8bc3598592e1e34", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 157500, "upload_time": "2020-01-22T15:14:51", "upload_time_iso_8601": "2020-01-22T15:14:51.535918Z", "url": "https://files.pythonhosted.org/packages/ca/a9/8322e6993146d1c3e5c812ba8432ad50036f9fd4f1e901b69c8b0412ebcc/epitome-0.0.1a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5066938047b3ad3064a0a0d940ba1baf", "sha256": "4bb1e170bc62a23905a1caab37ad6be51f244d4b5004c13c8ac506e3346a371b"}, "downloads": -1, "filename": "epitome-0.0.1a1-py3.6.egg", "has_sig": false, "md5_digest": "5066938047b3ad3064a0a0d940ba1baf", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3", "size": 60438, "upload_time": "2020-01-22T15:14:49", "upload_time_iso_8601": "2020-01-22T15:14:49.651397Z", "url": "https://files.pythonhosted.org/packages/d2/ce/0308a3e8134b66a07ced01730e2f5c83b6b92944267f215cfad31af2eba7/epitome-0.0.1a1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f418c076b0e15d36c8bc3598592e1e34", "sha256": "62015016917ccf22fdc2a0116902277485693e953aa64dd66437e60140ca2de6"}, "downloads": -1, "filename": "epitome-0.0.1a1.tar.gz", "has_sig": false, "md5_digest": "f418c076b0e15d36c8bc3598592e1e34", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 157500, "upload_time": "2020-01-22T15:14:51", "upload_time_iso_8601": "2020-01-22T15:14:51.535918Z", "url": "https://files.pythonhosted.org/packages/ca/a9/8322e6993146d1c3e5c812ba8432ad50036f9fd4f1e901b69c8b0412ebcc/epitome-0.0.1a1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:57 2020"}