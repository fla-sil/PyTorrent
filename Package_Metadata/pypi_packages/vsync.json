{"info": {"author": "Yahel Agassi", "author_email": "yahel2410@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7"], "description": "# vsync\n\nA tool to sync data between dissimilar Vertica clusters\n\n\n## Installation Methods\n- using pip\n- using docker (in development)\n\n\n## Using pip\n\n### 1. Prerequisites\n- Install unixodbc, unixodbc-dev:\n\n    RHEL based systems:\n\n    `sudo yum install unixODBC unixODBC-devel`\n\n    Debian based systems:\n\n    `sudo apt-get install unixodbc unixodbc-dev`\n\n- Install official Vertica client from [here](https://www.vertica.com/download/vertica/client-drivers/)\n\n\n\n- Setup odbc.ini file with 2 DSNs, for source DB and destination DB\n\n    For example:\n    ```\n    [vertica_src]\n    Driver = /opt/vertica/lib64/libverticaodbc.so\n    Servername = 172.18.0.2\n    Database = my_db\n    Port = 5433\n    UserName = my_user\n    Password = my_pass\n\n    [vertica_dest]\n    Driver = /opt/vertica/lib64/libverticaodbc.so\n    Servername = 172.18.0.3\n    Database = my_db\n    Port = 5433\n    UserName = my_user\n    Password = my_pass\n\n    ```\n\n    > Note:     \n    > - Source DSN requires read only privileges, e.g: `USAGE` on schemas and `SELECT` on tables.     \n    > - Destination DSN requires write privileges, e.g: `CREATE` on schemas, `OWNER` on tables, or the `DBADMIN` role.\n\n- Optional: with dbadmin, enable CompressNetworkData\n\n    `SELECT set_config_parameter('CompressNetworkData',1);`\n\n\n\n- Optional: In some installations you may need to setup Vertica export subnet on both source and destination DBs:\n    1. Get the subent's IP you wish to export on from `network_interfaces`:\n\n        `SELECT distinct subnet FROM network_interfaces WHERE subnet NOT LIKE '127.0%';` \n    2. Create new subnet in Vertica:\n\n        `CREATE SUBNET export WITH '<SUBNET IP HERE>'`\n    3. Set this subnet as default for export:\n\n        `ALTER DATABASE docker EXPORT ON export`\n\n\n### 2. Install:\n`pip install vsync`\n\n\n### 3. Optional: Add Bash Autocomplete\n\nput `eval \"$(_VSYNC_COMPLETE=source vsync)\"` in ~/.bashrc and re-login.\n\n\n## Usage\n### Synopsis\n`vsync [options] <command> [parameters]` \n\n### Options\n`-f, --force` (boolean): \n\nDo not ask for override confirmation.\n\n`--log-file` (string): \n\nPath to log file.\n\n\n`--debug` [1|2|3]: \n\nLog level.\n\n\n### Commands\n### `sync-table-schema`\nSync table's schema (DDL) from source DSN to destination DSN \n\n#### Parameters\n`-s, --source-dsn` (string) [required]\n\nSource DSN\n\n\n`-d, --dest-dsn` (string) [required]             \n\nDestination DSN\n\n\n`-t, --table` (string) [required]\n\nTable to sync\n\n\n`--dest-table` (string) [optional]\n\nDestination table, default as TABLE\n\n\n`--sync-projections / --no-projections` (boolean) [optional] \n\n Sync / don't sync projections. Default: true\n\n\n### `sync-table`\nSync table's data from source DSN to destination DSN. \n\nCreates the table if not exists.\n\n#### Parameters\n`-s, --source-dsn` (string) [required]\n\nSource DSN\n\n\n`-d, --dest-dsn` (string) [required]             \n\nDestination DSN\n\n\n`-t, --table` (string) [required]\n\nTable to sync\n\n\n`--dest-table` (string) [optional]\n\nDestination table. Default: as --table\n\n\n`--sync-projections / --no-projections` (boolean) [optional] \n\n Sync / don't sync projections. Default: true\n\n\n### `sync-table-parts`\nSync table's partitions from source DSN to destination DSN. \n\nCreates the partitions if not exists.\n\n\n#### Parameters\n`-s, --source-dsn` (string) [required]\n\nSource DSN\n\n\n`-d, --dest-dsn` (string) [required]             \n\nDestination DSN\n\n\n`-t, --table` (string) [required]\n\nTable to sync\n\n\n`--dest-table` (string) [optional]\n\nDestination table, default as TABLE\n\n\n`--sync-projections / --no-projections` (boolean) [optional] \n\n Sync / don't sync projections. Default: true\n\n`-p, --parts` (string) [optional] \n\nComma seperated list of partitions. Default: all partitions\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/vsync/vsync", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "vsync", "package_url": "https://pypi.org/project/vsync/", "platform": "", "project_url": "https://pypi.org/project/vsync/", "project_urls": {"Homepage": "https://gitlab.com/vsync/vsync"}, "release_url": "https://pypi.org/project/vsync/1.0.1/", "requires_dist": ["pyodbc", "click (>=7)", "configparser"], "requires_python": "", "summary": "A tool to sync data between dissimilar Vertica clusters", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>vsync</h1>\n<p>A tool to sync data between dissimilar Vertica clusters</p>\n<h2>Installation Methods</h2>\n<ul>\n<li>using pip</li>\n<li>using docker (in development)</li>\n</ul>\n<h2>Using pip</h2>\n<h3>1. Prerequisites</h3>\n<ul>\n<li>\n<p>Install unixodbc, unixodbc-dev:</p>\n<p>RHEL based systems:</p>\n<p><code>sudo yum install unixODBC unixODBC-devel</code></p>\n<p>Debian based systems:</p>\n<p><code>sudo apt-get install unixodbc unixodbc-dev</code></p>\n</li>\n<li>\n<p>Install official Vertica client from <a href=\"https://www.vertica.com/download/vertica/client-drivers/\" rel=\"nofollow\">here</a></p>\n</li>\n<li>\n<p>Setup odbc.ini file with 2 DSNs, for source DB and destination DB</p>\n<p>For example:</p>\n<pre><code>[vertica_src]\nDriver = /opt/vertica/lib64/libverticaodbc.so\nServername = 172.18.0.2\nDatabase = my_db\nPort = 5433\nUserName = my_user\nPassword = my_pass\n\n[vertica_dest]\nDriver = /opt/vertica/lib64/libverticaodbc.so\nServername = 172.18.0.3\nDatabase = my_db\nPort = 5433\nUserName = my_user\nPassword = my_pass\n\n</code></pre>\n<blockquote>\n<p>Note:</p>\n<ul>\n<li>Source DSN requires read only privileges, e.g: <code>USAGE</code> on schemas and <code>SELECT</code> on tables.</li>\n<li>Destination DSN requires write privileges, e.g: <code>CREATE</code> on schemas, <code>OWNER</code> on tables, or the <code>DBADMIN</code> role.</li>\n</ul>\n</blockquote>\n</li>\n<li>\n<p>Optional: with dbadmin, enable CompressNetworkData</p>\n<p><code>SELECT set_config_parameter('CompressNetworkData',1);</code></p>\n</li>\n<li>\n<p>Optional: In some installations you may need to setup Vertica export subnet on both source and destination DBs:</p>\n<ol>\n<li>\n<p>Get the subent's IP you wish to export on from <code>network_interfaces</code>:</p>\n<p><code>SELECT distinct subnet FROM network_interfaces WHERE subnet NOT LIKE '127.0%';</code></p>\n</li>\n<li>\n<p>Create new subnet in Vertica:</p>\n<p><code>CREATE SUBNET export WITH '&lt;SUBNET IP HERE&gt;'</code></p>\n</li>\n<li>\n<p>Set this subnet as default for export:</p>\n<p><code>ALTER DATABASE docker EXPORT ON export</code></p>\n</li>\n</ol>\n</li>\n</ul>\n<h3>2. Install:</h3>\n<p><code>pip install vsync</code></p>\n<h3>3. Optional: Add Bash Autocomplete</h3>\n<p>put <code>eval \"$(_VSYNC_COMPLETE=source vsync)\"</code> in ~/.bashrc and re-login.</p>\n<h2>Usage</h2>\n<h3>Synopsis</h3>\n<p><code>vsync [options] &lt;command&gt; [parameters]</code></p>\n<h3>Options</h3>\n<p><code>-f, --force</code> (boolean):</p>\n<p>Do not ask for override confirmation.</p>\n<p><code>--log-file</code> (string):</p>\n<p>Path to log file.</p>\n<p><code>--debug</code> [1|2|3]:</p>\n<p>Log level.</p>\n<h3>Commands</h3>\n<h3><code>sync-table-schema</code></h3>\n<p>Sync table's schema (DDL) from source DSN to destination DSN</p>\n<h4>Parameters</h4>\n<p><code>-s, --source-dsn</code> (string) [required]</p>\n<p>Source DSN</p>\n<p><code>-d, --dest-dsn</code> (string) [required]</p>\n<p>Destination DSN</p>\n<p><code>-t, --table</code> (string) [required]</p>\n<p>Table to sync</p>\n<p><code>--dest-table</code> (string) [optional]</p>\n<p>Destination table, default as TABLE</p>\n<p><code>--sync-projections / --no-projections</code> (boolean) [optional]</p>\n<p>Sync / don't sync projections. Default: true</p>\n<h3><code>sync-table</code></h3>\n<p>Sync table's data from source DSN to destination DSN.</p>\n<p>Creates the table if not exists.</p>\n<h4>Parameters</h4>\n<p><code>-s, --source-dsn</code> (string) [required]</p>\n<p>Source DSN</p>\n<p><code>-d, --dest-dsn</code> (string) [required]</p>\n<p>Destination DSN</p>\n<p><code>-t, --table</code> (string) [required]</p>\n<p>Table to sync</p>\n<p><code>--dest-table</code> (string) [optional]</p>\n<p>Destination table. Default: as --table</p>\n<p><code>--sync-projections / --no-projections</code> (boolean) [optional]</p>\n<p>Sync / don't sync projections. Default: true</p>\n<h3><code>sync-table-parts</code></h3>\n<p>Sync table's partitions from source DSN to destination DSN.</p>\n<p>Creates the partitions if not exists.</p>\n<h4>Parameters</h4>\n<p><code>-s, --source-dsn</code> (string) [required]</p>\n<p>Source DSN</p>\n<p><code>-d, --dest-dsn</code> (string) [required]</p>\n<p>Destination DSN</p>\n<p><code>-t, --table</code> (string) [required]</p>\n<p>Table to sync</p>\n<p><code>--dest-table</code> (string) [optional]</p>\n<p>Destination table, default as TABLE</p>\n<p><code>--sync-projections / --no-projections</code> (boolean) [optional]</p>\n<p>Sync / don't sync projections. Default: true</p>\n<p><code>-p, --parts</code> (string) [optional]</p>\n<p>Comma seperated list of partitions. Default: all partitions</p>\n\n          </div>"}, "last_serial": 4450196, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "07d238b5ed1313fd51e15cce050e242f", "sha256": "1b2c95c3cfac1e5c4d5d996f3103ff4e5a44c737830d992cf38d293b4912d375"}, "downloads": -1, "filename": "vsync-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "07d238b5ed1313fd51e15cce050e242f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21392, "upload_time": "2018-10-27T14:48:10", "upload_time_iso_8601": "2018-10-27T14:48:10.127145Z", "url": "https://files.pythonhosted.org/packages/62/2e/3d86dff6ac165ea11bb2dde3badba0ad3fec78ff1b26fb0c092e3d2a52fd/vsync-1.0.0-py2-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "a652ba783b9a4f8f62ce9a0d16bdd54c", "sha256": "fdb0d611a687b0ccf2851be94167ea51a1379c13287c1b14f799cdc996e635e1"}, "downloads": -1, "filename": "vsync-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "a652ba783b9a4f8f62ce9a0d16bdd54c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21406, "upload_time": "2018-11-04T17:26:53", "upload_time_iso_8601": "2018-11-04T17:26:53.949210Z", "url": "https://files.pythonhosted.org/packages/fc/cb/1dd7692f35e4287833660b09e331f1ad6554b4b988c83ef617d84641d29c/vsync-1.0.1-py2-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a652ba783b9a4f8f62ce9a0d16bdd54c", "sha256": "fdb0d611a687b0ccf2851be94167ea51a1379c13287c1b14f799cdc996e635e1"}, "downloads": -1, "filename": "vsync-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "a652ba783b9a4f8f62ce9a0d16bdd54c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21406, "upload_time": "2018-11-04T17:26:53", "upload_time_iso_8601": "2018-11-04T17:26:53.949210Z", "url": "https://files.pythonhosted.org/packages/fc/cb/1dd7692f35e4287833660b09e331f1ad6554b4b988c83ef617d84641d29c/vsync-1.0.1-py2-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:33:47 2020"}