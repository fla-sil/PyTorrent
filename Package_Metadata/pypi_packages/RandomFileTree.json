{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "RandomFileTree: Generate random file tree\n===========================================================================\n\n|Build Status| |Coveralls| |Doc Status| |Pypi status| |Chat| |License|\n\n.. |Build Status| image:: https://travis-ci.org/klieret/RandomFileTree.svg?branch=master\n   :target: https://travis-ci.org/klieret/RandomFileTree\n\n.. |Coveralls| image:: https://coveralls.io/repos/github/klieret/RandomFileTree/badge.svg?branch=master\n   :target: https://coveralls.io/github/klieret/RandomFileTree?branch=master\n\n.. |Doc Status| image:: https://readthedocs.org/projects/randomfiletree/badge/?version=latest\n   :target: https://randomfiletree.readthedocs.io/\n   :alt: Documentation Status\n\n.. |Pypi Status| image:: https://badge.fury.io/py/RandomFileTree.svg\n    :target: https://badge.fury.io/py/RandomFileTree\n    :alt: Pypi status\n\n.. |Chat| image:: https://img.shields.io/gitter/room/RandomFileTree/community.svg\n   :target: https://gitter.im/RandomFileTree/community\n   :alt: Gitter\n\n.. |License| image:: https://img.shields.io/github/license/klieret/RandomFileTree.svg\n   :target: https://github.com/klieret/RandomFileTree/blob/master/LICENSE.txt\n   :alt: License\n\n.. start-body\n\nDescription\n-----------\n\nCreate a random file and directory tree/structure for testing purposes.\n\n\nInstallation\n------------\n\n``AnkiPandas`` can be installed with the python package manager:\n\n.. code:: sh\n\n    pip3 install randomfiletree\n\nFor a local installation, you might want to use the ``--user`` switch of ``pip``.\nYou can also update your current installation with ``pip3 install --upgrade ankipandas``.\n\nFor the latest development version you can also work from a cloned version\nof this repository:\n\n.. code:: sh\n\n    git clone https://github.com/klieret/randomfiletree/\n    cd randomfiletree\n    pip3 install --user .\n\nUsage\n-----\n\nSimple command line interface:\n\n.. code:: sh\n\n    randomfiletree <folder> -f <file creation probability> -d <directory creation probability> -r <repeat>\n\nType ``randomfiletree -h`` to see all supported arguments.\n\nIf the executable is not in your path after installation, you can also use\n``python3 -m randomfiletree <arguments as above>``.\n\n.. code:: python\n\n    import randomfiletree\n\n    randomfiletree.iterative_gaussian_tree(\n        \"/path/to/basedir\",\n        nfiles=2.0,\n        nfolders=0.5,\n        maxdepth=5,\n        repeat=4\n    )\n\n\nRandomfiletree will now crawl through all directories in ``/path/to/basedir`` and\ncreate new files with the probabilities given in the arguments.\n\nIt is possible to pass an optional function to generate the random filenames oneself:\n\n.. code:: python\n\n    import random\n    import string\n\n    def fname():\n        length = random.randint(5, 10)\n        return \"\".join(\n            random.choice(string.ascii_uppercase + string.digits)\n            for _ in range(length)\n        ) + '.docx'\n\n    randomfiletree.core.iterative_gaussian_tree(\n        \"/path/to/basedir\",\n        nfiles=100,\n        nfolders=10,\n        maxdepth=2,\n        filename=fname\n    )\n\nThe ``payload`` optional argument can be used to generate file contents together with their names.\nFor example, it can be used to replicate some template files with randomized names:\n\n.. code:: python\n\n    import itertools\n    import pathlib\n    import randomfiletree\n\n    def callback(target_dir: pathlib.Path) -> pathlib.Path:\n        sourcedir = pathlib.Path(\"/path/to/templates/\")\n        sources = []\n        for srcfile in sourcedir.iterdir():\n            with open(srcfile, 'rb') as f:\n                content = f.read()\n            sources.append((srcfile.suffix, content))\n        for srcfile in itertools.cycle(sources):\n            path = target_dir / (randomfiletree.core.random_string() + srcfile[0])\n            with path.open('wb') as f:\n                f.write(srcfile[1])\n            yield path\n\n    randomfiletree.core.iterative_gaussian_tree(\n        \"/path/to/basedir\",\n        nfiles=10,\n        nfolders=10,\n        maxdepth=5,\n        repeat=4,\n        payload=callback\n    )\n\nif both ``filename`` and ``payload`` passed, the first option is ignored.\n\nTake a look at the documentation_ to find out more about the additional functionality provided.\n\n.. _documentation: https://randomfiletree.readthedocs.io/\n\nLicense\n-------\n\nThis software is lienced under the `MIT license`_.\n\n.. _MIT  license: https://github.com/klieret/ankipandas/blob/master/LICENSE.txt\n\n.. end-body\n\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/klieret/RandomFileTree", "keywords": "testing,filetree,tree", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "RandomFileTree", "package_url": "https://pypi.org/project/RandomFileTree/", "platform": "", "project_url": "https://pypi.org/project/RandomFileTree/", "project_urls": {"Bug Tracker": "https://github.com/klieret/RandomFileTree/issues", "Documentation": "https://randomfiletree.readthedocs.io/", "Homepage": "https://github.com/klieret/RandomFileTree", "Source Code": "https://github.com/klieret/RandomFileTree/"}, "release_url": "https://pypi.org/project/RandomFileTree/1.2.0/", "requires_dist": null, "requires_python": "", "summary": "Create a random file/directory tree/structure in python fortesting purposes.", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/klieret/RandomFileTree\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a5bd548631029595d7aa3d8a77ecc80e67480a79/68747470733a2f2f7472617669732d63692e6f72672f6b6c69657265742f52616e646f6d46696c65547265652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/klieret/RandomFileTree?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88bb7c427680e0c9d5b0acb01c2f0d8fcecd15fe/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6b6c69657265742f52616e646f6d46696c65547265652f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://randomfiletree.readthedocs.io/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4cee53ab2c8d24d288a25e3a49f638d1545c2f1a/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f72616e646f6d66696c65747265652f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://badge.fury.io/py/RandomFileTree\" rel=\"nofollow\"><img alt=\"Pypi status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d1f4443f1333261df2ebf5bac68044d52f3a6e79/68747470733a2f2f62616467652e667572792e696f2f70792f52616e646f6d46696c65547265652e737667\"></a> <a href=\"https://gitter.im/RandomFileTree/community\" rel=\"nofollow\"><img alt=\"Gitter\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae95cabc67edaf92a39dfddcc6b5b33796ade258/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f52616e646f6d46696c65547265652f636f6d6d756e6974792e737667\"></a> <a href=\"https://github.com/klieret/RandomFileTree/blob/master/LICENSE.txt\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/093abdf9ef8bd206e509bc409fa6c5eea5d8ab36/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6b6c69657265742f52616e646f6d46696c65547265652e737667\"></a></p>\n<div id=\"description\">\n<h2>Description</h2>\n<p>Create a random file and directory tree/structure for testing purposes.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>AnkiPandas</tt> can be installed with the python package manager:</p>\n<pre>pip3 install randomfiletree\n</pre>\n<p>For a local installation, you might want to use the <tt><span class=\"pre\">--user</span></tt> switch of <tt>pip</tt>.\nYou can also update your current installation with <tt>pip3 install <span class=\"pre\">--upgrade</span> ankipandas</tt>.</p>\n<p>For the latest development version you can also work from a cloned version\nof this repository:</p>\n<pre>git clone https://github.com/klieret/randomfiletree/\n<span class=\"nb\">cd</span> randomfiletree\npip3 install --user .\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Simple command line interface:</p>\n<pre>randomfiletree &lt;folder&gt; -f &lt;file creation probability&gt; -d &lt;directory creation probability&gt; -r &lt;repeat&gt;\n</pre>\n<p>Type <tt>randomfiletree <span class=\"pre\">-h</span></tt> to see all supported arguments.</p>\n<p>If the executable is not in your path after installation, you can also use\n<tt>python3 <span class=\"pre\">-m</span> randomfiletree &lt;arguments as above&gt;</tt>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">randomfiletree</span>\n\n<span class=\"n\">randomfiletree</span><span class=\"o\">.</span><span class=\"n\">iterative_gaussian_tree</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"/path/to/basedir\"</span><span class=\"p\">,</span>\n    <span class=\"n\">nfiles</span><span class=\"o\">=</span><span class=\"mf\">2.0</span><span class=\"p\">,</span>\n    <span class=\"n\">nfolders</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">,</span>\n    <span class=\"n\">maxdepth</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"n\">repeat</span><span class=\"o\">=</span><span class=\"mi\">4</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Randomfiletree will now crawl through all directories in <tt>/path/to/basedir</tt> and\ncreate new files with the probabilities given in the arguments.</p>\n<p>It is possible to pass an optional function to generate the random filenames oneself:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">random</span>\n<span class=\"kn\">import</span> <span class=\"nn\">string</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">fname</span><span class=\"p\">():</span>\n    <span class=\"n\">length</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"s2\">\"\"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n        <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">(</span><span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">ascii_uppercase</span> <span class=\"o\">+</span> <span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">digits</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">'.docx'</span>\n\n<span class=\"n\">randomfiletree</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">iterative_gaussian_tree</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"/path/to/basedir\"</span><span class=\"p\">,</span>\n    <span class=\"n\">nfiles</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>\n    <span class=\"n\">nfolders</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n    <span class=\"n\">maxdepth</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"n\">fname</span>\n<span class=\"p\">)</span>\n</pre>\n<p>The <tt>payload</tt> optional argument can be used to generate file contents together with their names.\nFor example, it can be used to replicate some template files with randomized names:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">itertools</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pathlib</span>\n<span class=\"kn\">import</span> <span class=\"nn\">randomfiletree</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">callback</span><span class=\"p\">(</span><span class=\"n\">target_dir</span><span class=\"p\">:</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">:</span>\n    <span class=\"n\">sourcedir</span> <span class=\"o\">=</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/templates/\"</span><span class=\"p\">)</span>\n    <span class=\"n\">sources</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">srcfile</span> <span class=\"ow\">in</span> <span class=\"n\">sourcedir</span><span class=\"o\">.</span><span class=\"n\">iterdir</span><span class=\"p\">():</span>\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">srcfile</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n        <span class=\"n\">sources</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">srcfile</span><span class=\"o\">.</span><span class=\"n\">suffix</span><span class=\"p\">,</span> <span class=\"n\">content</span><span class=\"p\">))</span>\n    <span class=\"k\">for</span> <span class=\"n\">srcfile</span> <span class=\"ow\">in</span> <span class=\"n\">itertools</span><span class=\"o\">.</span><span class=\"n\">cycle</span><span class=\"p\">(</span><span class=\"n\">sources</span><span class=\"p\">):</span>\n        <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">target_dir</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">randomfiletree</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">random_string</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">srcfile</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"k\">with</span> <span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'wb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">srcfile</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"k\">yield</span> <span class=\"n\">path</span>\n\n<span class=\"n\">randomfiletree</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">iterative_gaussian_tree</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"/path/to/basedir\"</span><span class=\"p\">,</span>\n    <span class=\"n\">nfiles</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n    <span class=\"n\">nfolders</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n    <span class=\"n\">maxdepth</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"n\">repeat</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span>\n    <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">callback</span>\n<span class=\"p\">)</span>\n</pre>\n<p>if both <tt>filename</tt> and <tt>payload</tt> passed, the first option is ignored.</p>\n<p>Take a look at the <a href=\"https://randomfiletree.readthedocs.io/\" rel=\"nofollow\">documentation</a> to find out more about the additional functionality provided.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This software is lienced under the <a href=\"https://github.com/klieret/ankipandas/blob/master/LICENSE.txt\" rel=\"nofollow\">MIT license</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6992989, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "56942e1b642fd49bd3056c8d0df16698", "sha256": "c8b4842635ae75d37ee7e0d640a44b0d0bd8b395bc6e1ab20df7e405aeb23283"}, "downloads": -1, "filename": "RandomFileTree-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "56942e1b642fd49bd3056c8d0df16698", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7930, "upload_time": "2019-04-19T08:28:20", "upload_time_iso_8601": "2019-04-19T08:28:20.449086Z", "url": "https://files.pythonhosted.org/packages/68/16/92e4b12a7af8e7f3954ce2f496fbce4d2b9099af7a55eb0026afda58b2a8/RandomFileTree-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22fa0bda16087d907101ad977fae6980", "sha256": "313765d8e014edb365e377e77ab8f77a2864db52661ca7f4ecc6831c0366d3a0"}, "downloads": -1, "filename": "RandomFileTree-1.0.0.tar.gz", "has_sig": false, "md5_digest": "22fa0bda16087d907101ad977fae6980", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5490, "upload_time": "2019-04-19T08:28:22", "upload_time_iso_8601": "2019-04-19T08:28:22.541982Z", "url": "https://files.pythonhosted.org/packages/8b/30/b3062aa50bbf568f71f5ce4bcb0862ad77e40331015fe13f5fba29e57d8d/RandomFileTree-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "9330870b4772bf32a698888550599376", "sha256": "37f16cce372dcac10f0b276c43ce707ed811bb0b30836bc9e3e67e76b6096298"}, "downloads": -1, "filename": "RandomFileTree-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9330870b4772bf32a698888550599376", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8289, "upload_time": "2019-05-03T11:10:50", "upload_time_iso_8601": "2019-05-03T11:10:50.074107Z", "url": "https://files.pythonhosted.org/packages/34/8c/2f5547ab1a8152229a4c17c3e772e00ee324966ed6b9ea55b58aeec60fee/RandomFileTree-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "786b0a2e4fff4060905f94ec2bc80063", "sha256": "d20d592d57ac00eb20d8e5e793a709b240f5e9b0655848e7dc9dded084c68d40"}, "downloads": -1, "filename": "RandomFileTree-1.1.0.tar.gz", "has_sig": false, "md5_digest": "786b0a2e4fff4060905f94ec2bc80063", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5802, "upload_time": "2019-05-03T11:10:51", "upload_time_iso_8601": "2019-05-03T11:10:51.536675Z", "url": "https://files.pythonhosted.org/packages/9a/df/4ab403d880cbe8ea0aefc05791efd6f4edeb9eca8a186f77a5b15e5422bc/RandomFileTree-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "9dcfdd616f120b0d115e0176a8e3d6a3", "sha256": "5c22868879754231452c715b97829a6ddb1d5d59941ed05822f7a0285204c8fe"}, "downloads": -1, "filename": "RandomFileTree-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9dcfdd616f120b0d115e0176a8e3d6a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9435, "upload_time": "2020-04-10T12:41:15", "upload_time_iso_8601": "2020-04-10T12:41:15.325567Z", "url": "https://files.pythonhosted.org/packages/34/8d/436df1300452ef6991aa5013fc75356f14ccb94dfacedc58f2139e935358/RandomFileTree-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f98c28f5d46a222bf71c77ea946f4273", "sha256": "3a92e12ecbf093dc6b3fc1405c69030ed32db3a8a4a71f28724bd347f4c49afc"}, "downloads": -1, "filename": "RandomFileTree-1.2.0.tar.gz", "has_sig": false, "md5_digest": "f98c28f5d46a222bf71c77ea946f4273", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6977, "upload_time": "2020-04-10T12:41:17", "upload_time_iso_8601": "2020-04-10T12:41:17.004464Z", "url": "https://files.pythonhosted.org/packages/8d/72/0ffefe0e5a4d9c9c289947f8ee9467cf66780cfd5c2346b8b1ad4ba84944/RandomFileTree-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9dcfdd616f120b0d115e0176a8e3d6a3", "sha256": "5c22868879754231452c715b97829a6ddb1d5d59941ed05822f7a0285204c8fe"}, "downloads": -1, "filename": "RandomFileTree-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9dcfdd616f120b0d115e0176a8e3d6a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9435, "upload_time": "2020-04-10T12:41:15", "upload_time_iso_8601": "2020-04-10T12:41:15.325567Z", "url": "https://files.pythonhosted.org/packages/34/8d/436df1300452ef6991aa5013fc75356f14ccb94dfacedc58f2139e935358/RandomFileTree-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f98c28f5d46a222bf71c77ea946f4273", "sha256": "3a92e12ecbf093dc6b3fc1405c69030ed32db3a8a4a71f28724bd347f4c49afc"}, "downloads": -1, "filename": "RandomFileTree-1.2.0.tar.gz", "has_sig": false, "md5_digest": "f98c28f5d46a222bf71c77ea946f4273", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6977, "upload_time": "2020-04-10T12:41:17", "upload_time_iso_8601": "2020-04-10T12:41:17.004464Z", "url": "https://files.pythonhosted.org/packages/8d/72/0ffefe0e5a4d9c9c289947f8ee9467cf66780cfd5c2346b8b1ad4ba84944/RandomFileTree-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:39 2020"}