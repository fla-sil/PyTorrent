{"info": {"author": "GoPythonGo.com", "author_email": "info@gopythongo.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Operating System :: POSIX", "Programming Language :: Python :: 3 :: Only"], "description": "Vault 12factor and Django integration\n=====================================\n\nThis project provides helper classes for integrating\n`Hashicorp Vault <https://vaultproject.io/>`__ with your Python projects and\nDjango.\n\n**Please note that this is still under active development and APIs are subject\nto change.**\n\n\nInstallation\n------------\nThis has been uploaded to the Cheeseshop aka Pypi as\n`12factor-vault <https://pypi.python.org/pypi/12factor-vault>`__. So just add\n``12factor-vault`` to your ``requirements.txt`` or ``setup.py``.\n\n``pip install 12factor-vault`` also works.\n\n\nEnvironment variables\n+++++++++++++++++++++\n============================  =========================  ======================\nEnvironment Variable          Vault auth backend         Direct configuration\n                                                         static method on\n                                                         BaseVaultAuthenticator\n============================  =========================  ======================\nVAULT_TOKEN                   Token authentication       token(str)\nVAULT_APPID, VAULT_USERID     App-id authenticaion       app_id(str, str)\nVAULT_ROLEID, VAULT_SECRETID  Approle authentication     approle(str, str, str,\n                                                         bool)\nVAULT_SSLCERT, VAULT_SSLKEY   SSL Client authentication  ssl_client_cert(str,\n                                                         str)\n============================  =========================  ======================\n\nThe Django example below uses the following environment variables:\n\n===========================  ==================================================\nEnvironment Variable         Description\n===========================  ==================================================\nVAULT_DATABASE_PATH          The path to Vault's credential-issuing backend\nVAULT_CA                     The CA issuing Vault's HTTPS SSL certificate (for\n                             CA pinning)\nDATABASE_NAME                Name of the database to connect to on the database\n                             server.\nDATABASE_OWNERROLE           The PostgreSQL role to use for ``SET ROLE`` after\n                             connecting to the database\n===========================  ==================================================\n\nGeneral usage\n-------------\nBasically after configuring a ``BaseVaultAuthenticator`` instance which creates\nauthenticated Vault clients (relying on the excellent\n`hvac library <https://github.com/ianunruh/hvac>`__) you can use that to create\n``VaultCredentialProvider`` instances which manage leases and renew credentials\nas needed (e.g. database credentials managed by one of Vault's *secrets*\nbackends).\n\n``VaultAuth12Factor`` is a subclass of ``BaseVaultAuthenticator`` that reads\nall necessary configuration from environment variables.\n\n\nDjango\n------\nIntegrating with Django requires a small monkeypatch that retries failed\ndatabase connections after refreshing the database credentials from Vault. The\n``vault12factor`` Django App will install that patch automatically. You also\nhave to wrap your database settings dict in a\n``DjangoAutoRefreshDBCredentialsDict`` instance that knows hot to refresh\ndatabase credentials from Vault.\n\n``vault12factor`` will check if an instance of\n``DjangoAutoRefreshDBCredentialsDict`` is configured in ``settings.DATABASES``\nbefore monkey-patching Django. So if you want to use ``vault12factor`` but\nconfigure your databases in separate Django apps or other things that this code\ncan't detect, you will want to call ``vault12factor.monkeypatch_django()``\nyourself.\n\nHere is an example for integrating this with Django, using Vault to get\ndatabase credentials. When using PostgreSQL you will also want to look at\n`django-postgresql-setrole <https://github.com/jdelic/django-postgresql-setrole>`__.\n\n.. code-block:: python\n\n    # in settings.py\n    INSTALLED_APPS += ['django-dbconn-retry', 'vault12factor',]\n\n    from vault12factor import \\\n        VaultCredentialProvider, \\\n        VaultAuth12Factor, \\\n        DjangoAutoRefreshDBCredentialsDict\n\n    if DEBUG and not VaultAuth12Factor.has_envconfig():\n        SECRET_KEY = \"secretsekrit\"  # FOR DEBUG ONLY!\n        DATABASES = {\n            'default': {\n                'ENGINE': 'django.db.backends.sqlite3',\n                'NAME': 'authserver.sqlite3',\n            }\n        }\n    else:\n        if DEBUG:\n            SECRET_KEY = \"secretsekrit\"  # FOR DEBUG ONLY!\n\n        VAULT = VaultAuth12Factor.fromenv()\n        CREDS = VaultCredentialProvider(\"https://vault.local:8200/\", VAULT,\n                                        os.getenv(\"VAULT_DATABASE_PATH\",\n                                        \"db-mydatabase/creds/fullaccess\"),\n                                        os.getenv(\"VAULT_CA\", None), True,\n                                        DEBUG)\n\n        DATABASES = {\n            'default': DjangoAutoRefreshDBCredentialsDict(CREDS, {\n                'ENGINE': 'django.db.backends.postgresql',\n                'NAME': os.getenv(\"DATABASE_NAME\", \"mydatabase\"),\n                'USER': CREDS.username,\n                'PASSWORD': CREDS.password,\n                'HOST': '127.0.0.1',\n                'PORT': '5432',\n                # requires django-postgresql-setrole\n                'SET_ROLE': os.getenv(\"DATABASE_OWNERROLE\", \"mydatabaseowner\")\n            }),\n        }\n\n\nLicense\n=======\n\nCopyright (c) 2016-2017, Jonas Maurus\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\n   may be used to endorse or promote products derived from this software\n   without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jdelic/12factor-vault/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "12factor-vault", "package_url": "https://pypi.org/project/12factor-vault/", "platform": "", "project_url": "https://pypi.org/project/12factor-vault/", "project_urls": {"Homepage": "https://github.com/jdelic/12factor-vault/"}, "release_url": "https://pypi.org/project/12factor-vault/0.1.20/", "requires_dist": ["django-dbconn-retry (>=0.1.5)", "hvac (>=0.3.0)"], "requires_python": "", "summary": "Helper classes to integrate Django and other projects with Vault", "version": "0.1.20", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"vault-12factor-and-django-integration\">\n<h2>Vault 12factor and Django integration</h2>\n<p>This project provides helper classes for integrating\n<a href=\"https://vaultproject.io/\" rel=\"nofollow\">Hashicorp Vault</a> with your Python projects and\nDjango.</p>\n<p><strong>Please note that this is still under active development and APIs are subject\nto change.</strong></p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>This has been uploaded to the Cheeseshop aka Pypi as\n<a href=\"https://pypi.python.org/pypi/12factor-vault\" rel=\"nofollow\">12factor-vault</a>. So just add\n<tt><span class=\"pre\">12factor-vault</span></tt> to your <tt>requirements.txt</tt> or <tt>setup.py</tt>.</p>\n<p><tt>pip install <span class=\"pre\">12factor-vault</span></tt> also works.</p>\n<div id=\"environment-variables\">\n<h4>Environment variables</h4>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Environment Variable</th>\n<th>Vault auth backend</th>\n<th>Direct configuration\nstatic method on\nBaseVaultAuthenticator</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>VAULT_TOKEN</td>\n<td>Token authentication</td>\n<td>token(str)</td>\n</tr>\n<tr><td>VAULT_APPID, VAULT_USERID</td>\n<td>App-id authenticaion</td>\n<td>app_id(str, str)</td>\n</tr>\n<tr><td>VAULT_ROLEID, VAULT_SECRETID</td>\n<td>Approle authentication</td>\n<td>approle(str, str, str,\nbool)</td>\n</tr>\n<tr><td>VAULT_SSLCERT, VAULT_SSLKEY</td>\n<td>SSL Client authentication</td>\n<td>ssl_client_cert(str,\nstr)</td>\n</tr>\n</tbody>\n</table>\n<p>The Django example below uses the following environment variables:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Environment Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>VAULT_DATABASE_PATH</td>\n<td>The path to Vault\u2019s credential-issuing backend</td>\n</tr>\n<tr><td>VAULT_CA</td>\n<td>The CA issuing Vault\u2019s HTTPS SSL certificate (for\nCA pinning)</td>\n</tr>\n<tr><td>DATABASE_NAME</td>\n<td>Name of the database to connect to on the database\nserver.</td>\n</tr>\n<tr><td>DATABASE_OWNERROLE</td>\n<td>The PostgreSQL role to use for <tt>SET ROLE</tt> after\nconnecting to the database</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"general-usage\">\n<h3>General usage</h3>\n<p>Basically after configuring a <tt>BaseVaultAuthenticator</tt> instance which creates\nauthenticated Vault clients (relying on the excellent\n<a href=\"https://github.com/ianunruh/hvac\" rel=\"nofollow\">hvac library</a>) you can use that to create\n<tt>VaultCredentialProvider</tt> instances which manage leases and renew credentials\nas needed (e.g. database credentials managed by one of Vault\u2019s <em>secrets</em>\nbackends).</p>\n<p><tt>VaultAuth12Factor</tt> is a subclass of <tt>BaseVaultAuthenticator</tt> that reads\nall necessary configuration from environment variables.</p>\n</div>\n<div id=\"django\">\n<h3>Django</h3>\n<p>Integrating with Django requires a small monkeypatch that retries failed\ndatabase connections after refreshing the database credentials from Vault. The\n<tt>vault12factor</tt> Django App will install that patch automatically. You also\nhave to wrap your database settings dict in a\n<tt>DjangoAutoRefreshDBCredentialsDict</tt> instance that knows hot to refresh\ndatabase credentials from Vault.</p>\n<p><tt>vault12factor</tt> will check if an instance of\n<tt>DjangoAutoRefreshDBCredentialsDict</tt> is configured in <tt>settings.DATABASES</tt>\nbefore monkey-patching Django. So if you want to use <tt>vault12factor</tt> but\nconfigure your databases in separate Django apps or other things that this code\ncan\u2019t detect, you will want to call <tt>vault12factor.monkeypatch_django()</tt>\nyourself.</p>\n<p>Here is an example for integrating this with Django, using Vault to get\ndatabase credentials. When using PostgreSQL you will also want to look at\n<a href=\"https://github.com/jdelic/django-postgresql-setrole\" rel=\"nofollow\">django-postgresql-setrole</a>.</p>\n<pre><span class=\"c1\"># in settings.py</span>\n<span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">+=</span> <span class=\"p\">[</span><span class=\"s1\">'django-dbconn-retry'</span><span class=\"p\">,</span> <span class=\"s1\">'vault12factor'</span><span class=\"p\">,]</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">vault12factor</span> <span class=\"kn\">import</span> \\\n    <span class=\"n\">VaultCredentialProvider</span><span class=\"p\">,</span> \\\n    <span class=\"n\">VaultAuth12Factor</span><span class=\"p\">,</span> \\\n    <span class=\"n\">DjangoAutoRefreshDBCredentialsDict</span>\n\n<span class=\"k\">if</span> <span class=\"n\">DEBUG</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">VaultAuth12Factor</span><span class=\"o\">.</span><span class=\"n\">has_envconfig</span><span class=\"p\">():</span>\n    <span class=\"n\">SECRET_KEY</span> <span class=\"o\">=</span> <span class=\"s2\">\"secretsekrit\"</span>  <span class=\"c1\"># FOR DEBUG ONLY!</span>\n    <span class=\"n\">DATABASES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'ENGINE'</span><span class=\"p\">:</span> <span class=\"s1\">'django.db.backends.sqlite3'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'NAME'</span><span class=\"p\">:</span> <span class=\"s1\">'authserver.sqlite3'</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">DEBUG</span><span class=\"p\">:</span>\n        <span class=\"n\">SECRET_KEY</span> <span class=\"o\">=</span> <span class=\"s2\">\"secretsekrit\"</span>  <span class=\"c1\"># FOR DEBUG ONLY!</span>\n\n    <span class=\"n\">VAULT</span> <span class=\"o\">=</span> <span class=\"n\">VaultAuth12Factor</span><span class=\"o\">.</span><span class=\"n\">fromenv</span><span class=\"p\">()</span>\n    <span class=\"n\">CREDS</span> <span class=\"o\">=</span> <span class=\"n\">VaultCredentialProvider</span><span class=\"p\">(</span><span class=\"s2\">\"https://vault.local:8200/\"</span><span class=\"p\">,</span> <span class=\"n\">VAULT</span><span class=\"p\">,</span>\n                                    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">\"VAULT_DATABASE_PATH\"</span><span class=\"p\">,</span>\n                                    <span class=\"s2\">\"db-mydatabase/creds/fullaccess\"</span><span class=\"p\">),</span>\n                                    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">\"VAULT_CA\"</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                                    <span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n\n    <span class=\"n\">DATABASES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"n\">DjangoAutoRefreshDBCredentialsDict</span><span class=\"p\">(</span><span class=\"n\">CREDS</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'ENGINE'</span><span class=\"p\">:</span> <span class=\"s1\">'django.db.backends.postgresql'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'NAME'</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">\"DATABASE_NAME\"</span><span class=\"p\">,</span> <span class=\"s2\">\"mydatabase\"</span><span class=\"p\">),</span>\n            <span class=\"s1\">'USER'</span><span class=\"p\">:</span> <span class=\"n\">CREDS</span><span class=\"o\">.</span><span class=\"n\">username</span><span class=\"p\">,</span>\n            <span class=\"s1\">'PASSWORD'</span><span class=\"p\">:</span> <span class=\"n\">CREDS</span><span class=\"o\">.</span><span class=\"n\">password</span><span class=\"p\">,</span>\n            <span class=\"s1\">'HOST'</span><span class=\"p\">:</span> <span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'PORT'</span><span class=\"p\">:</span> <span class=\"s1\">'5432'</span><span class=\"p\">,</span>\n            <span class=\"c1\"># requires django-postgresql-setrole</span>\n            <span class=\"s1\">'SET_ROLE'</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">\"DATABASE_OWNERROLE\"</span><span class=\"p\">,</span> <span class=\"s2\">\"mydatabaseowner\"</span><span class=\"p\">)</span>\n        <span class=\"p\">}),</span>\n    <span class=\"p\">}</span>\n</pre>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright (c) 2016-2017, Jonas Maurus\nAll rights reserved.</p>\n<p>Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:</p>\n<ol>\n<li>Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.</li>\n<li>Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.</li>\n<li>Neither the name of the copyright holder nor the names of its contributors\nmay be used to endorse or promote products derived from this software\nwithout specific prior written permission.</li>\n</ol>\n<p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \u201cAS IS\u201d AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n</div>\n\n          </div>"}, "last_serial": 3561051, "releases": {"0.1.10": [{"comment_text": "", "digests": {"md5": "c3cb715737b8517e652cc7ad4b9b25dc", "sha256": "7ca426c00517e7c1ebf1208d08b24cd2acce94c10abf9b3d4e8d5ee3dbc76fd9"}, "downloads": -1, "filename": "12factor_vault-0.1.10-py3-none-any.whl", "has_sig": false, "md5_digest": "c3cb715737b8517e652cc7ad4b9b25dc", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 10976, "upload_time": "2017-04-27T20:17:32", "upload_time_iso_8601": "2017-04-27T20:17:32.206027Z", "url": "https://files.pythonhosted.org/packages/6f/b1/7040423be02e74044ac43027934a7b8f669c90590cbfa1494f083f1ad277/12factor_vault-0.1.10-py3-none-any.whl", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "ed4149006b3066befa02e80419cb34e1", "sha256": "b50f5fc7a33643c21630ab3daff693e604321992f57e0a4f1b523d593b154864"}, "downloads": -1, "filename": "12factor_vault-0.1.11-py3-none-any.whl", "has_sig": false, "md5_digest": "ed4149006b3066befa02e80419cb34e1", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 10986, "upload_time": "2017-04-27T20:32:30", "upload_time_iso_8601": "2017-04-27T20:32:30.032528Z", "url": "https://files.pythonhosted.org/packages/61/43/006556bf7d773acdd8e1cc276e051358bb0617b4b40639d09d6bffd3c5b6/12factor_vault-0.1.11-py3-none-any.whl", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "c4416417bc445f480fcab39d649e5f2e", "sha256": "b9b33e4c5c6146183f3a2821554d4ac4302825b3d7654cc0414bdd8cc7e67d66"}, "downloads": -1, "filename": "12factor_vault-0.1.12-py3-none-any.whl", "has_sig": false, "md5_digest": "c4416417bc445f480fcab39d649e5f2e", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 10905, "upload_time": "2017-05-10T20:18:00", "upload_time_iso_8601": "2017-05-10T20:18:00.950646Z", "url": "https://files.pythonhosted.org/packages/89/fd/e13bc262f6ae93616de869a39bf26701870a8cb91c82ae9f468f9d48c3eb/12factor_vault-0.1.12-py3-none-any.whl", "yanked": false}], "0.1.13": [{"comment_text": "", "digests": {"md5": "4adcc0afe840d044aba4345e7fe71ba9", "sha256": "770008f25eacb1c9d6265518ccb612ed506dfab21073066fc6ddebb2eae0a4ce"}, "downloads": -1, "filename": "12factor_vault-0.1.13-py3-none-any.whl", "has_sig": false, "md5_digest": "4adcc0afe840d044aba4345e7fe71ba9", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 10932, "upload_time": "2017-05-11T22:30:58", "upload_time_iso_8601": "2017-05-11T22:30:58.154507Z", "url": "https://files.pythonhosted.org/packages/00/6b/a900af615d1afe3491432868c2527b2453295bcdd13179ea73956dabf019/12factor_vault-0.1.13-py3-none-any.whl", "yanked": false}], "0.1.14": [{"comment_text": "", "digests": {"md5": "14a500ef7891d3bc13ff6ec5ba39a93a", "sha256": "d901674a8a0c3adc5e879bc49226521d247bdac210ee20965df3da94c7d7ecbb"}, "downloads": -1, "filename": "12factor_vault-0.1.14-py3-none-any.whl", "has_sig": false, "md5_digest": "14a500ef7891d3bc13ff6ec5ba39a93a", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 10931, "upload_time": "2017-05-11T22:33:17", "upload_time_iso_8601": "2017-05-11T22:33:17.318091Z", "url": "https://files.pythonhosted.org/packages/8f/6e/939ae9a44733e7f3bcc5c41018b8b31cc5abfd3364cbce47f4e7507e092c/12factor_vault-0.1.14-py3-none-any.whl", "yanked": false}], "0.1.15": [{"comment_text": "", "digests": {"md5": "51a60d4090d5a99e4043a1a58c788919", "sha256": "99ebd0747ebb85d2f806f12bae524ffe6fca8cc13b2ada4256c3ab71e7f81d36"}, "downloads": -1, "filename": "12factor_vault-0.1.15-py3-none-any.whl", "has_sig": false, "md5_digest": "51a60d4090d5a99e4043a1a58c788919", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10911, "upload_time": "2017-07-14T14:05:40", "upload_time_iso_8601": "2017-07-14T14:05:40.826929Z", "url": "https://files.pythonhosted.org/packages/fa/9e/004dfd25e80e6db1e4a0f7649cc6d5bdcc1a1fb0a19970e3ac93d8cf48d9/12factor_vault-0.1.15-py3-none-any.whl", "yanked": false}], "0.1.16": [{"comment_text": "", "digests": {"md5": "615d2e1a46539c7300353290ef9b226d", "sha256": "b5eeedc8b57757fff57d7ff8b143d03e91d6bae35d9c607b9c11bcef2dbf0012"}, "downloads": -1, "filename": "12factor_vault-0.1.16-py3-none-any.whl", "has_sig": false, "md5_digest": "615d2e1a46539c7300353290ef9b226d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11103, "upload_time": "2017-12-05T16:54:27", "upload_time_iso_8601": "2017-12-05T16:54:27.682060Z", "url": "https://files.pythonhosted.org/packages/f5/24/86ecac71f8458a7c853a4b07cc19c912a8a18fca5152c37693e344bda260/12factor_vault-0.1.16-py3-none-any.whl", "yanked": false}], "0.1.17": [{"comment_text": "", "digests": {"md5": "d9d4652f6d9b6f52d2f269f750a0e227", "sha256": "92e17784c11f9ba693314b0baa751a6bc92f6293fd6d3d99074948152d3df96d"}, "downloads": -1, "filename": "12factor_vault-0.1.17-py3-none-any.whl", "has_sig": false, "md5_digest": "d9d4652f6d9b6f52d2f269f750a0e227", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10773, "upload_time": "2018-01-25T16:12:01", "upload_time_iso_8601": "2018-01-25T16:12:01.909588Z", "url": "https://files.pythonhosted.org/packages/a8/05/a012dd9885b3b37c0ab0f9813e85772a0af3f41f3e33e144f37802e53442/12factor_vault-0.1.17-py3-none-any.whl", "yanked": false}], "0.1.18": [{"comment_text": "", "digests": {"md5": "857291734288a55b82ff6e09b324a6cf", "sha256": "6f694ea0add4a6e8467838327f614a500b1250eed2e60507d1005a903dbaeb19"}, "downloads": -1, "filename": "12factor_vault-0.1.18-py3-none-any.whl", "has_sig": false, "md5_digest": "857291734288a55b82ff6e09b324a6cf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10788, "upload_time": "2018-01-28T23:28:28", "upload_time_iso_8601": "2018-01-28T23:28:28.520765Z", "url": "https://files.pythonhosted.org/packages/e8/62/47735f2804e832cab54d912cbc5fec8b70c31af568074b9a77fa67f14c7f/12factor_vault-0.1.18-py3-none-any.whl", "yanked": false}], "0.1.19": [{"comment_text": "", "digests": {"md5": "8a3ab3e6f65897bbc59c9639a7edbadd", "sha256": "257c3425e3f0632c4ebf15fd70704094f5e64059ef4e04a0d637cf00a449c4f8"}, "downloads": -1, "filename": "12factor_vault-0.1.19-py3-none-any.whl", "has_sig": false, "md5_digest": "8a3ab3e6f65897bbc59c9639a7edbadd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10788, "upload_time": "2018-01-29T10:29:52", "upload_time_iso_8601": "2018-01-29T10:29:52.276463Z", "url": "https://files.pythonhosted.org/packages/57/84/901928d8de9c28ceb66fe1f6c8295a87602bff442f5b8220d0fd79ed1436/12factor_vault-0.1.19-py3-none-any.whl", "yanked": false}], "0.1.20": [{"comment_text": "", "digests": {"md5": "1b32c40b454bf794be4f469a94d06c18", "sha256": "9c85e99585f1a8eecc8577e4e763a99296c9f8f5ca5b95166bca24763e5b6de9"}, "downloads": -1, "filename": "12factor_vault-0.1.20-py3-none-any.whl", "has_sig": false, "md5_digest": "1b32c40b454bf794be4f469a94d06c18", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10787, "upload_time": "2018-02-07T17:03:31", "upload_time_iso_8601": "2018-02-07T17:03:31.694017Z", "url": "https://files.pythonhosted.org/packages/e4/57/7a8e9e9717dc6c1db36767cbb41177dc27bfd36af02bc4619e2430eb607e/12factor_vault-0.1.20-py3-none-any.whl", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "090f256456d03b7ebe896043e22eedbe", "sha256": "2f738e651e620bdddf924260c8b1e7043e9340120eb5fe3e3813acdb228babc6"}, "downloads": -1, "filename": "12factor_vault-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "090f256456d03b7ebe896043e22eedbe", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 10752, "upload_time": "2016-12-20T01:44:09", "upload_time_iso_8601": "2016-12-20T01:44:09.514288Z", "url": "https://files.pythonhosted.org/packages/d1/76/a2b5de0b37c30eecda7da6621c9deb04c171c8cefa8d6073b73bcac779e0/12factor_vault-0.1.8-py3-none-any.whl", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "13959b416d71b3c350ba2bd2b3c856b3", "sha256": "914624bebe0f4e1571ee790817062c67ad8ae18d8f342294620abab671208814"}, "downloads": -1, "filename": "12factor_vault-0.1.9-py3-none-any.whl", "has_sig": false, "md5_digest": "13959b416d71b3c350ba2bd2b3c856b3", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 10809, "upload_time": "2017-04-09T09:21:41", "upload_time_iso_8601": "2017-04-09T09:21:41.950013Z", "url": "https://files.pythonhosted.org/packages/80/32/18f257ed1a17cf64398fadb45408db4ec626a96446bd867bdd76d7861763/12factor_vault-0.1.9-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1b32c40b454bf794be4f469a94d06c18", "sha256": "9c85e99585f1a8eecc8577e4e763a99296c9f8f5ca5b95166bca24763e5b6de9"}, "downloads": -1, "filename": "12factor_vault-0.1.20-py3-none-any.whl", "has_sig": false, "md5_digest": "1b32c40b454bf794be4f469a94d06c18", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10787, "upload_time": "2018-02-07T17:03:31", "upload_time_iso_8601": "2018-02-07T17:03:31.694017Z", "url": "https://files.pythonhosted.org/packages/e4/57/7a8e9e9717dc6c1db36767cbb41177dc27bfd36af02bc4619e2430eb607e/12factor_vault-0.1.20-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 15:55:40 2020"}