{"info": {"author": "AIno", "author_email": "hello@aino.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: ISC License (ISCL)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4"], "description": "What is it?\n===========\nA light weight attempt at spicing up the django admin.\n\nIdea\n----\nWe wanted to make the admin look more up-to-date without making sacrifices.\nThese are the main goals and guidelines:\n\n1. Attractive design\n2. Upgrading Django version should cause no problems\n3. Drop in replacement, no python coding required\n4. Compatible with third-party admin widgets and apps\n5. Keep most UX patterns from django admin, diversion should need good motivation\n6. Edit css first, templates when css is insufficient\n7. Keep it very stable, no fast moves, it must work\n\n\nInstallation\n------------\n::\n\n    INSTALLED_APPS = (\n        ...\n        'nimda',\n        ...\n        'django.contrib.admin',\n        ....\n    )\n\n\nDevelopment\n-----------\nIf you want to contriute and develop make sure to edit the scss files in the\nroot of the project. You then need to compile them to css files, this process\ncan be automatized using node and gulp. First run ``npm install`` in the\n``django-nimda`` directory, then run ``gulp`` to keep a watcher compiling\nscss on the fly outputing css to the correct locations. If you want to\ncompile manually run ``npm build``.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/aino/django-nimda", "keywords": null, "license": "ICS", "maintainer": null, "maintainer_email": null, "name": "django-nimda", "package_url": "https://pypi.org/project/django-nimda/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-nimda/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/aino/django-nimda"}, "release_url": "https://pypi.org/project/django-nimda/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "A light weight attempt at spicing up the django admin", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A light weight attempt at spicing up the django admin.</p>\n<div id=\"idea\">\n<h2>Idea</h2>\n<p>We wanted to make the admin look more up-to-date without making sacrifices.\nThese are the main goals and guidelines:</p>\n<ol>\n<li>Attractive design</li>\n<li>Upgrading Django version should cause no problems</li>\n<li>Drop in replacement, no python coding required</li>\n<li>Compatible with third-party admin widgets and apps</li>\n<li>Keep most UX patterns from django admin, diversion should need good motivation</li>\n<li>Edit css first, templates when css is insufficient</li>\n<li>Keep it very stable, no fast moves, it must work</li>\n</ol>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>INSTALLED_APPS = (\n    ...\n    'nimda',\n    ...\n    'django.contrib.admin',\n    ....\n)\n</pre>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>If you want to contriute and develop make sure to edit the scss files in the\nroot of the project. You then need to compile them to css files, this process\ncan be automatized using node and gulp. First run <tt>npm install</tt> in the\n<tt><span class=\"pre\">django-nimda</span></tt> directory, then run <tt>gulp</tt> to keep a watcher compiling\nscss on the fly outputing css to the correct locations. If you want to\ncompile manually run <tt>npm build</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 4528502, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b931448876a8c4dcef0c800d15d85b6c", "sha256": "685aed4b80b125b3a8fcff6b2dbe75180552214196fc98b21948fb7aa9a1d89d"}, "downloads": -1, "filename": "django-nimda-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b931448876a8c4dcef0c800d15d85b6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 214530, "upload_time": "2015-10-15T17:56:23", "upload_time_iso_8601": "2015-10-15T17:56:23.523228Z", "url": "https://files.pythonhosted.org/packages/68/a2/cc1dd4b8559b5a3a010e39578b1c12809497967dcaa31e1f7d03fec70efe/django-nimda-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b931448876a8c4dcef0c800d15d85b6c", "sha256": "685aed4b80b125b3a8fcff6b2dbe75180552214196fc98b21948fb7aa9a1d89d"}, "downloads": -1, "filename": "django-nimda-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b931448876a8c4dcef0c800d15d85b6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 214530, "upload_time": "2015-10-15T17:56:23", "upload_time_iso_8601": "2015-10-15T17:56:23.523228Z", "url": "https://files.pythonhosted.org/packages/68/a2/cc1dd4b8559b5a3a010e39578b1c12809497967dcaa31e1f7d03fec70efe/django-nimda-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:40 2020"}