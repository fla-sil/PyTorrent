{"info": {"author": "Doug Winter", "author_email": "doug.winter@isotoma.com", "bugtrack_url": null, "classifiers": [], "description": "==================\ndjango-stackhelper\n==================\n\nGenerate configuration files for other parts of your Django stack.\n\nAs well as your django application, your stack might contain other components,\nsuch as:\n\n * nginx\n * apache\n * memcached\n * redis\n * varnish\n\nAny or all of these will need some configuration to work with your application.\nWriting these configuration files by hand can be error prone and needs to be\ncoordinated around changes to your software.\n\nThis django application will help you manage these files. You might want to\npair this with django-json-settings, or something else that provides local\nsettings, so you can easily configure your stack ona per-environment basis.\n\nWorkflow\n========\n\nPackaging template configuration files\n--------------------------------------\n\nDuring application development, template files for other production stack\ncomponents are placed in the \"stack\" directory of your django project::\n\n  mysite/\n      myapp/\n          ...\n      stack_templates/\n          apache/\n              apache.conf\n          varnish/\n              varnish.vcf\n\nBuilding configuration files for the current environment\n--------------------------------------------------------\n\nA management command is provided to generate configuration files based on the\ncurrent settings for the project in the current environment. \n\nIf you are running inside a virtual environment then the files will be written to::\n\n    <sys.prefix>/etc\n    \nOtherwise you will need to provide a destination directory as an argument.\n    \nCreating production configuration files\n---------------------------------------\n\nSince files are placed in <sys.prefix>/etc when run in a virtual environment,\nyou can symlink these directly into place if you wish:\n\nFor example, it produces the files::\n\n    <sys.prefix>/etc/apache/apache.conf\n    <sys.prefix>/etc/varnish/varnish.vcf\n\nYou can link them straight into your config::\n\n    ln -s <sys.prefix>/etc/apache/apache.conf /etc/apache2/sites-available/mysite.conf\n\n\n\nAlternatively, it may be that these files may not be suitable for use in\nproduction yet - some settings may not be available to the django application\nand so it requires further manual changes. In this case, review these\nfiles, editing them as required, and placing them in the right location.\n\nRunning stackhelper\n===================\n\nThe following management commands are provided:\n\nstack_generate\n--------------\n\nUsage: manage.py stack_generate [--force] [directory]\n\nGenerates new versions of configuration files in the specified directory,\nif specified. Otherwise to <sys.prefix>/etc if in a virtual environment.\n\nFiles will not be overwritten unless --force is specified.\n\nstack_diff\n----------\n\nUsage: manage.py stack_diff [directory]\n\nPrints out differences if the generated files would be different. Returns 0\nif the files are all identical, or 1 if the files should be regenerated.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/isotoma/django-stackhelper", "keywords": null, "license": "Apache Software License", "maintainer": null, "maintainer_email": null, "name": "django-stackhelper", "package_url": "https://pypi.org/project/django-stackhelper/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-stackhelper/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/isotoma/django-stackhelper"}, "release_url": "https://pypi.org/project/django-stackhelper/0.3/", "requires_dist": null, "requires_python": null, "summary": "A Django application to help you configure other components of your deployment stack", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Generate configuration files for other parts of your Django stack.</p>\n<p>As well as your django application, your stack might contain other components,\nsuch as:</p>\n<blockquote>\n<ul>\n<li>nginx</li>\n<li>apache</li>\n<li>memcached</li>\n<li>redis</li>\n<li>varnish</li>\n</ul>\n</blockquote>\n<p>Any or all of these will need some configuration to work with your application.\nWriting these configuration files by hand can be error prone and needs to be\ncoordinated around changes to your software.</p>\n<p>This django application will help you manage these files. You might want to\npair this with django-json-settings, or something else that provides local\nsettings, so you can easily configure your stack ona per-environment basis.</p>\n<div id=\"workflow\">\n<h2>Workflow</h2>\n<div id=\"packaging-template-configuration-files\">\n<h3>Packaging template configuration files</h3>\n<p>During application development, template files for other production stack\ncomponents are placed in the \u201cstack\u201d directory of your django project:</p>\n<pre>mysite/\n    myapp/\n        ...\n    stack_templates/\n        apache/\n            apache.conf\n        varnish/\n            varnish.vcf\n</pre>\n</div>\n<div id=\"building-configuration-files-for-the-current-environment\">\n<h3>Building configuration files for the current environment</h3>\n<p>A management command is provided to generate configuration files based on the\ncurrent settings for the project in the current environment.</p>\n<p>If you are running inside a virtual environment then the files will be written to:</p>\n<pre>&lt;sys.prefix&gt;/etc\n</pre>\n<p>Otherwise you will need to provide a destination directory as an argument.</p>\n</div>\n<div id=\"creating-production-configuration-files\">\n<h3>Creating production configuration files</h3>\n<p>Since files are placed in &lt;sys.prefix&gt;/etc when run in a virtual environment,\nyou can symlink these directly into place if you wish:</p>\n<p>For example, it produces the files:</p>\n<pre>&lt;sys.prefix&gt;/etc/apache/apache.conf\n&lt;sys.prefix&gt;/etc/varnish/varnish.vcf\n</pre>\n<p>You can link them straight into your config:</p>\n<pre>ln -s &lt;sys.prefix&gt;/etc/apache/apache.conf /etc/apache2/sites-available/mysite.conf\n</pre>\n<p>Alternatively, it may be that these files may not be suitable for use in\nproduction yet - some settings may not be available to the django application\nand so it requires further manual changes. In this case, review these\nfiles, editing them as required, and placing them in the right location.</p>\n</div>\n</div>\n<div id=\"running-stackhelper\">\n<h2>Running stackhelper</h2>\n<p>The following management commands are provided:</p>\n<div id=\"stack-generate\">\n<h3>stack_generate</h3>\n<p>Usage: manage.py stack_generate [\u2013force] [directory]</p>\n<p>Generates new versions of configuration files in the specified directory,\nif specified. Otherwise to &lt;sys.prefix&gt;/etc if in a virtual environment.</p>\n<p>Files will not be overwritten unless \u2013force is specified.</p>\n</div>\n<div id=\"stack-diff\">\n<h3>stack_diff</h3>\n<p>Usage: manage.py stack_diff [directory]</p>\n<p>Prints out differences if the generated files would be different. Returns 0\nif the files are all identical, or 1 if the files should be regenerated.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1494286, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d9313b309f52a4990600f764d25601e3", "sha256": "089fb5384ecf5aa56c0900e72b369fe77dc9c22e66de03a720bd453ba0d545ab"}, "downloads": -1, "filename": "django-stackhelper-0.1.zip", "has_sig": false, "md5_digest": "d9313b309f52a4990600f764d25601e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12949, "upload_time": "2014-01-27T15:13:17", "upload_time_iso_8601": "2014-01-27T15:13:17.988659Z", "url": "https://files.pythonhosted.org/packages/3b/ac/91e842b31eea4567a7edb16f7f392295f48935bad00eed42225bac3f59fb/django-stackhelper-0.1.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "7b2fe8379df55df51128ff304f7b380b", "sha256": "d85970c411ca68efdfe08f3a04956320eb660b57ea1d71916eacb153f191cc7f"}, "downloads": -1, "filename": "django-stackhelper-0.2.zip", "has_sig": false, "md5_digest": "7b2fe8379df55df51128ff304f7b380b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13334, "upload_time": "2015-01-13T12:04:38", "upload_time_iso_8601": "2015-01-13T12:04:38.752497Z", "url": "https://files.pythonhosted.org/packages/97/b0/1df83e2976e3f70f6db6b57e94ac9bb3432f88b5959247708e0a180b1a21/django-stackhelper-0.2.zip", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "3f13eb5b0c2defb469d32adac89c45bf", "sha256": "3484ac1e767823691244357ce780c2f391396d23ffa92ce959b2fed4bbeb836d"}, "downloads": -1, "filename": "django-stackhelper-0.3.zip", "has_sig": false, "md5_digest": "3f13eb5b0c2defb469d32adac89c45bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13110, "upload_time": "2015-04-07T14:41:46", "upload_time_iso_8601": "2015-04-07T14:41:46.296385Z", "url": "https://files.pythonhosted.org/packages/0e/f1/b5c806514226de4a1d2085a3e8ebf9b42b62a946cb71d2eb8f202a898f63/django-stackhelper-0.3.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3f13eb5b0c2defb469d32adac89c45bf", "sha256": "3484ac1e767823691244357ce780c2f391396d23ffa92ce959b2fed4bbeb836d"}, "downloads": -1, "filename": "django-stackhelper-0.3.zip", "has_sig": false, "md5_digest": "3f13eb5b0c2defb469d32adac89c45bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13110, "upload_time": "2015-04-07T14:41:46", "upload_time_iso_8601": "2015-04-07T14:41:46.296385Z", "url": "https://files.pythonhosted.org/packages/0e/f1/b5c806514226de4a1d2085a3e8ebf9b42b62a946cb71d2eb8f202a898f63/django-stackhelper-0.3.zip", "yanked": false}], "timestamp": "Fri May  8 00:52:59 2020"}