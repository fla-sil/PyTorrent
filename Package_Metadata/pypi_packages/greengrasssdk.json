{"info": {"author": "Amazon Web Services", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.7"], "description": "Greengrass Core Python SDK\n==========================\n\nThe AWS IoT Greengrass Core SDK is meant to be used by AWS Lambda functions running on an AWS IoT Greengrass Core. It will enable Lambda functions to invoke other Lambda functions deployed to the Greengrass Core, publish messages to the Greengrass Core and work with the local Shadow service.\n\n=================================\nUsing AWS IoT Greengrass Core SDK\n=================================\n\nTo use the AWS IoT Greengrass Core SDK, you must first import the AWS IoT Greengrass Core SDK in your Lambda function as you would with any other external libraries. You then need to create a client for 'iot-data' or 'lambda'. Use 'iot-data' if you wish to publish messages to the local Greengrass Core and interact with the local Shadow service. Use 'lambda' if you wish to invoke other Lambda functions deployed to the same Greengrass Core.\n\nHere is an example for using the 'iot-data' client\n\n.. code-block:: python\n\n    import greengrasssdk\n\n    # Let's instantiate the iot-data client\n    client = greengrasssdk.client('iot-data')\n\n\nNow that you have an ``iot-data`` client, you can publish requests.\n\n.. code-block:: python\n\n    response = client.publish(\n        topic='someTopic',\n        payload='some data'.encode()\n    )\n\nHere is an example for using the 'lambda' client.\n\n.. code-block:: python\n\n    import greengrasssdk\n\n    client = greengrasssdk.client('lambda')\n\nNow that you have a lambda client, you can publish requests.\n\n.. code-block:: python\n\n    # Define the payload to pass to the invoked lambda function\n    msg = json.dumps({\n        'message':\"hello\"\n    })\n\n    # Invoke the lambda function\n    response = client.invoke(\n        FunctionName='arn:<partition>:lambda:<region>:<account id>:function:<function name>',\n        InvocationType='RequestResponse',\n        Payload=payload,\n        Qualifier='2'\n    )\n\n==============\nCompatibility\n==============\n\nAs new features are added to AWS IoT Greengrass, previous versions of the AWS IoT Greengrass SDK will be incompatible with newer versions of the AWS IoT Greengrass core. The following table lists the compatible SDKs for all GGC releases.\n\n+-------------+------------------------+\n| GGC Version | Compatible SDK Versions|\n+=============+========================+\n| 1.0.x-1.6.x | 1.0.x-1.2.x            |\n+-------------+------------------------+\n| 1.7.x-1.8.x | 1.0.x-1.3.x            |\n+-------------+------------------------+\n| 1.9.x       | 1.0.x-1.4.x            |\n+-------------+------------------------+\n| 1.10.x      | 1.0.x-1.5.x            |\n+-------------+------------------------+\n\n==============\nStream Manager\n==============\n\nGreengrass version 1.10 comes with a new optional feature, Stream Manager. This SDK supports Stream Manager, but it has additional requirements. Specifically, Stream Manager requires Python version 3.7 or above. It also has package requirements listed in the requirements.txt file. Please install these requirements and bundle it with your lambda zip package.\n\nTo install the requirements you can use pip such as :code:`pip install --target . -r requirements.txt`. This will install the requirements to the directory that you run the command in. In order to work in Greengrass the dependencies must be bundled in the zip with your lambda code.\nWith the pip command above, the dependencies will be installed to the current directory. The dependencies must be bundled with your lambda code, so if the current directory doesn't have your\nlambda code, then simply copy the installed dependencies to the directory which contains your code.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "greengrasssdk", "package_url": "https://pypi.org/project/greengrasssdk/", "platform": "", "project_url": "https://pypi.org/project/greengrasssdk/", "project_urls": null, "release_url": "https://pypi.org/project/greengrasssdk/1.5.0/", "requires_dist": ["cbor2 (==4.1.2)"], "requires_python": "", "summary": "The AWS IoT Greengrass SDK for Python", "version": "1.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The AWS IoT Greengrass Core SDK is meant to be used by AWS Lambda functions running on an AWS IoT Greengrass Core. It will enable Lambda functions to invoke other Lambda functions deployed to the Greengrass Core, publish messages to the Greengrass Core and work with the local Shadow service.</p>\n<div id=\"using-aws-iot-greengrass-core-sdk\">\n<h2>Using AWS IoT Greengrass Core SDK</h2>\n<p>To use the AWS IoT Greengrass Core SDK, you must first import the AWS IoT Greengrass Core SDK in your Lambda function as you would with any other external libraries. You then need to create a client for \u2018iot-data\u2019 or \u2018lambda\u2019. Use \u2018iot-data\u2019 if you wish to publish messages to the local Greengrass Core and interact with the local Shadow service. Use \u2018lambda\u2019 if you wish to invoke other Lambda functions deployed to the same Greengrass Core.</p>\n<p>Here is an example for using the \u2018iot-data\u2019 client</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">greengrasssdk</span>\n\n<span class=\"c1\"># Let's instantiate the iot-data client</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">greengrasssdk</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">(</span><span class=\"s1\">'iot-data'</span><span class=\"p\">)</span>\n</pre>\n<p>Now that you have an <tt><span class=\"pre\">iot-data</span></tt> client, you can publish requests.</p>\n<pre><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">(</span>\n    <span class=\"n\">topic</span><span class=\"o\">=</span><span class=\"s1\">'someTopic'</span><span class=\"p\">,</span>\n    <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"s1\">'some data'</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Here is an example for using the \u2018lambda\u2019 client.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">greengrasssdk</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">greengrasssdk</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">(</span><span class=\"s1\">'lambda'</span><span class=\"p\">)</span>\n</pre>\n<p>Now that you have a lambda client, you can publish requests.</p>\n<pre><span class=\"c1\"># Define the payload to pass to the invoked lambda function</span>\n<span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">({</span>\n    <span class=\"s1\">'message'</span><span class=\"p\">:</span><span class=\"s2\">\"hello\"</span>\n<span class=\"p\">})</span>\n\n<span class=\"c1\"># Invoke the lambda function</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">invoke</span><span class=\"p\">(</span>\n    <span class=\"n\">FunctionName</span><span class=\"o\">=</span><span class=\"s1\">'arn:&lt;partition&gt;:lambda:&lt;region&gt;:&lt;account id&gt;:function:&lt;function name&gt;'</span><span class=\"p\">,</span>\n    <span class=\"n\">InvocationType</span><span class=\"o\">=</span><span class=\"s1\">'RequestResponse'</span><span class=\"p\">,</span>\n    <span class=\"n\">Payload</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">,</span>\n    <span class=\"n\">Qualifier</span><span class=\"o\">=</span><span class=\"s1\">'2'</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"compatibility\">\n<h2>Compatibility</h2>\n<p>As new features are added to AWS IoT Greengrass, previous versions of the AWS IoT Greengrass SDK will be incompatible with newer versions of the AWS IoT Greengrass core. The following table lists the compatible SDKs for all GGC releases.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>GGC Version</th>\n<th>Compatible SDK Versions</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>1.0.x-1.6.x</td>\n<td>1.0.x-1.2.x</td>\n</tr>\n<tr><td>1.7.x-1.8.x</td>\n<td>1.0.x-1.3.x</td>\n</tr>\n<tr><td>1.9.x</td>\n<td>1.0.x-1.4.x</td>\n</tr>\n<tr><td>1.10.x</td>\n<td>1.0.x-1.5.x</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"stream-manager\">\n<h2>Stream Manager</h2>\n<p>Greengrass version 1.10 comes with a new optional feature, Stream Manager. This SDK supports Stream Manager, but it has additional requirements. Specifically, Stream Manager requires Python version 3.7 or above. It also has package requirements listed in the requirements.txt file. Please install these requirements and bundle it with your lambda zip package.</p>\n<p>To install the requirements you can use pip such as <code>pip install --target . -r requirements.txt</code>. This will install the requirements to the directory that you run the command in. In order to work in Greengrass the dependencies must be bundled in the zip with your lambda code.\nWith the pip command above, the dependencies will be installed to the current directory. The dependencies must be bundled with your lambda code, so if the current directory doesn\u2019t have your\nlambda code, then simply copy the installed dependencies to the directory which contains your code.</p>\n</div>\n\n          </div>"}, "last_serial": 6196529, "releases": {"1.3.0": [{"comment_text": "", "digests": {"md5": "21f4276c5321c20e6486160a1eb54210", "sha256": "c5255a9ab54e549892e0f1a781f4ce4f842bc082072ed48dac7e4b707d38e799"}, "downloads": -1, "filename": "greengrasssdk-1.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "21f4276c5321c20e6486160a1eb54210", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10276, "upload_time": "2018-11-27T00:50:34", "upload_time_iso_8601": "2018-11-27T00:50:34.482311Z", "url": "https://files.pythonhosted.org/packages/c8/3b/d384af794304e068fb11dcb0a743b0cdfebf9b8240738853152b1607b492/greengrasssdk-1.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c23e2185c420f75f2b4b7c10ea2ef22", "sha256": "6d0855e721dbe1d91455439b94e67476cdd4898868009a3e4dd3f8ee09f617fd"}, "downloads": -1, "filename": "greengrasssdk-1.3.0.tar.gz", "has_sig": false, "md5_digest": "3c23e2185c420f75f2b4b7c10ea2ef22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7588, "upload_time": "2018-11-27T00:50:37", "upload_time_iso_8601": "2018-11-27T00:50:37.029334Z", "url": "https://files.pythonhosted.org/packages/c5/81/3beee87831e48e8107b68effbbc345ea42df4ff449b83215b10230842a05/greengrasssdk-1.3.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "a75c8f51ebd44f6e5a8f33f3444fd0f0", "sha256": "f37eb09dad09d0d0fe3b354aa29fc12226c139ff421dd34f525d6b80df89aae5"}, "downloads": -1, "filename": "greengrasssdk-1.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a75c8f51ebd44f6e5a8f33f3444fd0f0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10372, "upload_time": "2019-05-01T00:05:32", "upload_time_iso_8601": "2019-05-01T00:05:32.682868Z", "url": "https://files.pythonhosted.org/packages/58/7f/7c48616e8632bc5d44b58d04087ee85bad4ee8db3a2d2cca5ef26434b5e4/greengrasssdk-1.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24e649b05a9ec25f4dc5e26076cc8e12", "sha256": "fcaca111236b684b42c3fdff9568ab1f86505ead9f488a2df35bf4cd20547bf4"}, "downloads": -1, "filename": "greengrasssdk-1.4.0.tar.gz", "has_sig": false, "md5_digest": "24e649b05a9ec25f4dc5e26076cc8e12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7700, "upload_time": "2019-05-01T00:05:34", "upload_time_iso_8601": "2019-05-01T00:05:34.622780Z", "url": "https://files.pythonhosted.org/packages/23/cc/028662d7e43eaa7ae6f311b59b9a7e498ad4c5547ae7338284a163d1bef7/greengrasssdk-1.4.0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "f6b9a96f64e810f60ab11144a49ce3aa", "sha256": "122c9d6295b845d3719e62a7dde88a592c57c1214ecc13b5768cf535bf4a884d"}, "downloads": -1, "filename": "greengrasssdk-1.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f6b9a96f64e810f60ab11144a49ce3aa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36236, "upload_time": "2019-11-25T19:49:24", "upload_time_iso_8601": "2019-11-25T19:49:24.244219Z", "url": "https://files.pythonhosted.org/packages/78/a0/a058fa4cf44478ee2e28fc42dcbe7b2510ede6be4fa38329a78aff8c436f/greengrasssdk-1.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3b74a1cd39b86d1bdf62f0373b6b9f4", "sha256": "5a943d55ff94c2357fbced353f8710f928533a86223ac5c80e5c16c2636b6da3"}, "downloads": -1, "filename": "greengrasssdk-1.5.0.tar.gz", "has_sig": false, "md5_digest": "a3b74a1cd39b86d1bdf62f0373b6b9f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29119, "upload_time": "2019-11-25T19:49:25", "upload_time_iso_8601": "2019-11-25T19:49:25.929791Z", "url": "https://files.pythonhosted.org/packages/dc/87/6d0c01ccbae91ee0a98ddc4f895187eadb272af8953fffe8cdaad2d3fc87/greengrasssdk-1.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f6b9a96f64e810f60ab11144a49ce3aa", "sha256": "122c9d6295b845d3719e62a7dde88a592c57c1214ecc13b5768cf535bf4a884d"}, "downloads": -1, "filename": "greengrasssdk-1.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f6b9a96f64e810f60ab11144a49ce3aa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36236, "upload_time": "2019-11-25T19:49:24", "upload_time_iso_8601": "2019-11-25T19:49:24.244219Z", "url": "https://files.pythonhosted.org/packages/78/a0/a058fa4cf44478ee2e28fc42dcbe7b2510ede6be4fa38329a78aff8c436f/greengrasssdk-1.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3b74a1cd39b86d1bdf62f0373b6b9f4", "sha256": "5a943d55ff94c2357fbced353f8710f928533a86223ac5c80e5c16c2636b6da3"}, "downloads": -1, "filename": "greengrasssdk-1.5.0.tar.gz", "has_sig": false, "md5_digest": "a3b74a1cd39b86d1bdf62f0373b6b9f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29119, "upload_time": "2019-11-25T19:49:25", "upload_time_iso_8601": "2019-11-25T19:49:25.929791Z", "url": "https://files.pythonhosted.org/packages/dc/87/6d0c01ccbae91ee0a98ddc4f895187eadb272af8953fffe8cdaad2d3fc87/greengrasssdk-1.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:20 2020"}