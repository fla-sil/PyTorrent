{"info": {"author": "Adam Coddington", "author_email": "me@adamcoddington.net", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Physics", "Topic :: System :: Hardware", "Topic :: System :: Hardware :: Hardware Drivers"], "description": "Easily gather measurements from your multimeter using the\nFortune Semiconductors FS9721_LP3 protocol.\n\nInstallation\n------------\n\nInstall from Github directly::\n    \n    git clone https://github.com/coddingtonbear/python-fs9721.git\n    cd python-fs9721\n    python setup.py install\n\nor, install from PyPI using ``pip``::\n\n    pip install fs9721\n\nUse as a Library\n----------------\n\nCreate the client you'll use for gathering measurements first.  Using\nthe path to the serial device, create an instance of ``fs9721.Client``::\n\n    from fs9721 import Client\n\n    my_multimeter = Client('/dev/tty.usbserial')\n\nThen, you can gather measurements from your multimeter using::\n\n    print(my_multimeter.getMeasurement())\n\nCommand-Line Use\n----------------\n\nFor basic use, just run::\n\n    fs9721 /path/to/serial/port\n\nFor example, on my computer the device is connected via the serial port\nat ``/dev/tty.usbserial``, for me to gather measurements directly from\nthe multimeter, I would run::\n\n    fs9721 /dev/tty.usbserial\n\nCommand-Line Options\n~~~~~~~~~~~~~~~~~~~~\n\n* ``--timeout=3.0``: Number of seconds to wait before timing out when\n  communicating with the multimeter.  Default: 3 seconds.\n* ``--retries=COUNT``: Number of times to retry after failing to communicate\n  with the multimeter.\n* ``--format=FORMAT``: One of ``json``, ``csv``, or ``text`` (defaulting to\n  ``text``) corresponding with the format in which you would like the data\n  formatted.\n* ``--file=PATH``: Rather than writing the output to the console via stdout,\n  write file to the specified file.\n* ``--raise``: Due to the relative commonness of errors in communication with\n  the multimeter, communication errors are suppressed by default.  Use this\n  option to raise exceptions for errors that occur.\n* ``-show-null``: Null measurements from the multimeter are suppressed by\n  default, use this option to display null measurements when they are returned.\n* ``-separator``: Separator to use for CSV formatter.  Defaults to ','','.\n\nCommand-Line Examples\n~~~~~~~~~~~~~~~~~~~~~\n\nThe following examples all assume that your device is connected to\n``/dev/mydevice``.\n\n* Write output to console in the simple text format::\n\n  fs9721 /dev/mydevice\n\n* Write output to console in CSV (comma-separated values) format::\n\n  fs9721 --format=csv /dev/mydevice\n\n* Write output to the console in tab-delimited format::\n\n  fs9721 --format=csv --separator=$'\\t' /dev/mydevice\n\n* Write output to file at ``/tmp/myoutput.tdv.csv`` in tab-delimited format::\n\n  fs9721 --format=csv --file=/tmp/myoutput.tdv.csv --separator=$'\\t' /dev/mydevice\n\n* Write output to console in JSON format::\n\n  fs9721 --format=json /dev/mydevice\n\n.. note::\n\n   If you aren't familiar with the ``$'\\t'`` notation: when preceding a string\n   with a dollar sign symbol, you are instructing Bash (assuming you are using\n   Bash as your shell) to convert the basckslash notation into the actual\n   character the backslash notation refers to.  For more information, please consult\n   `this article on Stack Overflow <http://stackoverflow.com/questions/14251307/can-i-pass-t-to-python-from-the-command-line>`_.\n\nDoes this support my multimeter?\n--------------------------------\n\nThis library should support any multimeter using the\nFortune Semiconductors FS9721_LP3 chip.\nCommon multimeters using this chip are often low-end and include the following:\n\n* TekPower TP4000ZC\n* UNI-T_UT60E\n* V&A V18b\n* Voltcraft VC-820 and VC-840\n\nIf your multimeter is not on the above list, do not despair!\nThis specific IC is very common, and it may very use this chip.\nSigrok has a nice reference of which chips various multimeters use;\n`search for your multimeter on their wiki <http://sigrok.org/wiki/Main_Page>`_\nto see if yours also uses this DMM IC.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/coddingtonbear/python-fs9721/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "fs9721", "package_url": "https://pypi.org/project/fs9721/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fs9721/", "project_urls": {"Homepage": "http://github.com/coddingtonbear/python-fs9721/"}, "release_url": "https://pypi.org/project/fs9721/1.2.1/", "requires_dist": null, "requires_python": "", "summary": "", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Easily gather measurements from your multimeter using the<br>Fortune Semiconductors FS9721_LP3 protocol.<br><br>Installation<br>------------<br><br>Install from Github directly::<br>    <br>    git clone https://github.com/coddingtonbear/python-fs9721.git<br>    cd python-fs9721<br>    python setup.py install<br><br>or, install from PyPI using ``pip``::<br><br>    pip install fs9721<br><br>Use as a Library<br>----------------<br><br>Create the client you'll use for gathering measurements first.  Using<br>the path to the serial device, create an instance of ``fs9721.Client``::<br><br>    from fs9721 import Client<br><br>    my_multimeter = Client('/dev/tty.usbserial')<br><br>Then, you can gather measurements from your multimeter using::<br><br>    print(my_multimeter.getMeasurement())<br><br>Command-Line Use<br>----------------<br><br>For basic use, just run::<br><br>    fs9721 /path/to/serial/port<br><br>For example, on my computer the device is connected via the serial port<br>at ``/dev/tty.usbserial``, for me to gather measurements directly from<br>the multimeter, I would run::<br><br>    fs9721 /dev/tty.usbserial<br><br>Command-Line Options<br>~~~~~~~~~~~~~~~~~~~~<br><br>* ``--timeout=3.0``: Number of seconds to wait before timing out when<br>  communicating with the multimeter.  Default: 3 seconds.<br>* ``--retries=COUNT``: Number of times to retry after failing to communicate<br>  with the multimeter.<br>* ``--format=FORMAT``: One of ``json``, ``csv``, or ``text`` (defaulting to<br>  ``text``) corresponding with the format in which you would like the data<br>  formatted.<br>* ``--file=PATH``: Rather than writing the output to the console via stdout,<br>  write file to the specified file.<br>* ``--raise``: Due to the relative commonness of errors in communication with<br>  the multimeter, communication errors are suppressed by default.  Use this<br>  option to raise exceptions for errors that occur.<br>* ``-show-null``: Null measurements from the multimeter are suppressed by<br>  default, use this option to display null measurements when they are returned.<br>* ``-separator``: Separator to use for CSV formatter.  Defaults to ','','.<br><br>Command-Line Examples<br>~~~~~~~~~~~~~~~~~~~~~<br><br>The following examples all assume that your device is connected to<br>``/dev/mydevice``.<br><br>* Write output to console in the simple text format::<br><br>  fs9721 /dev/mydevice<br><br>* Write output to console in CSV (comma-separated values) format::<br><br>  fs9721 --format=csv /dev/mydevice<br><br>* Write output to the console in tab-delimited format::<br><br>  fs9721 --format=csv --separator=$'\\t' /dev/mydevice<br><br>* Write output to file at ``/tmp/myoutput.tdv.csv`` in tab-delimited format::<br><br>  fs9721 --format=csv --file=/tmp/myoutput.tdv.csv --separator=$'\\t' /dev/mydevice<br><br>* Write output to console in JSON format::<br><br>  fs9721 --format=json /dev/mydevice<br><br>.. note::<br><br>   If you aren't familiar with the ``$'\\t'`` notation: when preceding a string<br>   with a dollar sign symbol, you are instructing Bash (assuming you are using<br>   Bash as your shell) to convert the basckslash notation into the actual<br>   character the backslash notation refers to.  For more information, please consult<br>   `this article on Stack Overflow &lt;http://stackoverflow.com/questions/14251307/can-i-pass-t-to-python-from-the-command-line&gt;`_.<br><br>Does this support my multimeter?<br>--------------------------------<br><br>This library should support any multimeter using the<br>Fortune Semiconductors FS9721_LP3 chip.<br>Common multimeters using this chip are often low-end and include the following:<br><br>* TekPower TP4000ZC<br>* UNI-T_UT60E<br>* V&amp;A V18b<br>* Voltcraft VC-820 and VC-840<br><br>If your multimeter is not on the above list, do not despair!<br>This specific IC is very common, and it may very use this chip.<br>Sigrok has a nice reference of which chips various multimeters use;<br>`search for your multimeter on their wiki &lt;http://sigrok.org/wiki/Main_Page&gt;`_<br>to see if yours also uses this DMM IC.<br>\n          </div>"}, "last_serial": 2561646, "releases": {"0.1": [], "1.0": [{"comment_text": "", "digests": {"md5": "06d79192fe5289b6fd25be8cd7241b85", "sha256": "b1ef17980062a407a4bc395cc837d2f43e051beee0168569558a4cbf5233bee2"}, "downloads": -1, "filename": "fs9721-1.0.tar.gz", "has_sig": false, "md5_digest": "06d79192fe5289b6fd25be8cd7241b85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6752, "upload_time": "2014-05-08T23:41:18", "upload_time_iso_8601": "2014-05-08T23:41:18.507574Z", "url": "https://files.pythonhosted.org/packages/10/ae/f9e86333a03fb4a70ee8fd0515f7ff4e0737944440383aee21057527314c/fs9721-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "24cf013ccf5bac7b2e4c45ccddc0de0e", "sha256": "22e9864680a942b6f87717870b7c2fec924c9547066bc63cc2023a96a1d5d04a"}, "downloads": -1, "filename": "fs9721-1.1.tar.gz", "has_sig": false, "md5_digest": "24cf013ccf5bac7b2e4c45ccddc0de0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8199, "upload_time": "2014-05-10T04:53:40", "upload_time_iso_8601": "2014-05-10T04:53:40.147747Z", "url": "https://files.pythonhosted.org/packages/ce/a1/cd0a42079a24e6a83686bc98a095147ac5bb9e4b96930783c8f8010e23f9/fs9721-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "13ebbb1eade58b7f590ca7492b0a5374", "sha256": "5da601e677f568e7f04cce503273962437a1bf3b1c7850b60d038a524526b07c"}, "downloads": -1, "filename": "fs9721-1.2.tar.gz", "has_sig": false, "md5_digest": "13ebbb1eade58b7f590ca7492b0a5374", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7309, "upload_time": "2015-06-28T01:11:50", "upload_time_iso_8601": "2015-06-28T01:11:50.394761Z", "url": "https://files.pythonhosted.org/packages/0e/f3/24de5f82f6fd3bb58cecaa3b5ad002416338b3a7a54e747fffef175599b4/fs9721-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "bab28fde7f3c34dd817126ee565ac2b6", "sha256": "6c6c1cf222dc81a663617009de6491348f6aadcef57128d8577becea778b29aa"}, "downloads": -1, "filename": "fs9721-1.2.1.tar.gz", "has_sig": false, "md5_digest": "bab28fde7f3c34dd817126ee565ac2b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8975, "upload_time": "2017-01-09T06:09:43", "upload_time_iso_8601": "2017-01-09T06:09:43.677796Z", "url": "https://files.pythonhosted.org/packages/a8/42/c80ee29599f844e23aba5a845b77b3b3ac30962be75701c31899d6aef739/fs9721-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bab28fde7f3c34dd817126ee565ac2b6", "sha256": "6c6c1cf222dc81a663617009de6491348f6aadcef57128d8577becea778b29aa"}, "downloads": -1, "filename": "fs9721-1.2.1.tar.gz", "has_sig": false, "md5_digest": "bab28fde7f3c34dd817126ee565ac2b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8975, "upload_time": "2017-01-09T06:09:43", "upload_time_iso_8601": "2017-01-09T06:09:43.677796Z", "url": "https://files.pythonhosted.org/packages/a8/42/c80ee29599f844e23aba5a845b77b3b3ac30962be75701c31899d6aef739/fs9721-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:07 2020"}