{"info": {"author": "Rick van Hattem", "author_email": "Rick.van.Hattem@Fawo.nl", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License"], "description": "Introduction\n============\n\n`Mailjet <http://www.mailjet.com>`__ is a real-time Cloud Emailing\nplatform and this is a python library to access the `Mailjet Web\nAPI <https://mailjet.com/docs/api>`__.\n\nInstallation\n============\n\n-  Clone this repository:\n\n``git clone https://github.com/WoLpH/mailjet``\n\n-  ``cd`` into the cloned directory and execute:\n\n``python setup.py install``.\n\nThe settings can be configured from a Django settings file through\n``MAILJET_API_KEY`` and ``MAILJET_SECRET_KEY``, or through environment\nvariables with the same name.\n\ni.e.\n\n.. code:: py\n\n    export MAILJET_API_KEY='YOUR_API_KEY'\n    export MAILJET_SECRET_KEY='YOUR_SECRET_KEY'\n\nAlternatively, you can just pass the API key and Secret key as\nparameters when initializing the mailjet API as follows:\n\n.. code:: py\n\n    import mailjet\n\n    mailjet_api = mailjet.Api(api_key='YOUR_API_KEY', secret_key='YOUR_SECRET_KEY')\n\nUsage\n=====\n\n-  To get your account and profile information:\n\n.. code:: py\n\n    import mailjet\n\n    mailjet_api = mailjet.Api(api_key='YOUR_API_KEY', secret_key='YOUR_SECRET_KEY')\n    account_info = mailjet_api.user.infos()\n\n``acount_info`` would now be assigned the following python dict:\n\n.. code:: py\n\n    {\n        'status': 'OK',\n        'infos': {\n            'username': 'user@domain.com',\n            'firstname': 'firstname',\n            'locale': 'en_US',\n            'lastname': 'lastname',\n            'company_name': 'company_name',\n            'contact_phone': None,\n        }\n    }\n\n-  Create a new list of contacts, following on from the previous\n   example:\n\n.. code:: py\n\n    contact_list = mailjet_api.lists.create(\n        label='test',\n        name='testlist',  # Only alphanumeric characters are allowed!\n        method='POST'\n    )\n\n``contact_list`` will now contain a dictionary with the status and list\nid as below:\n\n.. code:: py\n\n    {\n        'status': 'OK',\n        'contact_id': 000000000\n    }\n\n-  You can now add contacts to your list using the ``contact_id``:\n\n.. code:: py\n\n    mailjet_api.lists.addcontact(\n        contact='example@example.com',\n        id=contact_list['list_id'],\n        method='POST'\n    )\n\nFAQ\n===\n\nHow do I give reserved python keywords as parameters?\n-----------------------------------------------------\n\nMethods such as creating a campaign require you to use reserved python\nkeywords, such as ``from`` - hence, in order to overcome this, do the\nfollowing:\n\n.. code:: py\n\n    params = dict()\n    params['method'] ='POST'\n    params['subject'] = 'My first campaign'\n    params['list_id'] = contact_list['list_id']\n    params['lang'] = 'en'\n    params['from'] = 'noreply@example.com'\n    params['from_name'] = 'Your name'\n    params['footer'] = 'default'\n    campaign = mailjet_api.message.createcampaign(**params)\n\nHow do I debug errors?\n----------------------\n\nThe errors produced by the ``mailjet`` library (or actually, produced by\nthe ``urllib2`` library) are still normal http responses. So if you wish\nto read the actual response, do something like this:\n\n.. code:: py\n\n    try:\n        contact_list = mailjet_api.lists.create(\n            label='test',\n            name='Test list',  # Incorrect because of the space in the name\n            method='POST'\n        )\n    except Exception, e:\n        print 'Mailjet response: %r, %r' % (e, e.read())", "description_content_type": null, "docs_url": "https://pythonhosted.org/mailjet/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/WoLpH/mailjet", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "mailjet", "package_url": "https://pypi.org/project/mailjet/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mailjet/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/WoLpH/mailjet"}, "release_url": "https://pypi.org/project/mailjet/1.4.1/", "requires_dist": null, "requires_python": null, "summary": "mailjet is a django app to implement the mailjet REST API", "version": "1.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p><a href=\"http://www.mailjet.com\" rel=\"nofollow\">Mailjet</a> is a real-time Cloud Emailing\nplatform and this is a python library to access the <a href=\"https://mailjet.com/docs/api\" rel=\"nofollow\">Mailjet Web\nAPI</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ul>\n<li>Clone this repository:</li>\n</ul>\n<p><tt>git clone <span class=\"pre\">https://github.com/WoLpH/mailjet</span></tt></p>\n<ul>\n<li><tt>cd</tt> into the cloned directory and execute:</li>\n</ul>\n<p><tt>python setup.py install</tt>.</p>\n<p>The settings can be configured from a Django settings file through\n<tt>MAILJET_API_KEY</tt> and <tt>MAILJET_SECRET_KEY</tt>, or through environment\nvariables with the same name.</p>\n<p>i.e.</p>\n<pre><span class=\"n\">export</span> <span class=\"n\">MAILJET_API_KEY</span><span class=\"o\">=</span><span class=\"s1\">'YOUR_API_KEY'</span>\n<span class=\"n\">export</span> <span class=\"n\">MAILJET_SECRET_KEY</span><span class=\"o\">=</span><span class=\"s1\">'YOUR_SECRET_KEY'</span>\n</pre>\n<p>Alternatively, you can just pass the API key and Secret key as\nparameters when initializing the mailjet API as follows:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">mailjet</span>\n\n<span class=\"n\">mailjet_api</span> <span class=\"o\">=</span> <span class=\"n\">mailjet</span><span class=\"o\">.</span><span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s1\">'YOUR_API_KEY'</span><span class=\"p\">,</span> <span class=\"n\">secret_key</span><span class=\"o\">=</span><span class=\"s1\">'YOUR_SECRET_KEY'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<ul>\n<li>To get your account and profile information:</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">mailjet</span>\n\n<span class=\"n\">mailjet_api</span> <span class=\"o\">=</span> <span class=\"n\">mailjet</span><span class=\"o\">.</span><span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s1\">'YOUR_API_KEY'</span><span class=\"p\">,</span> <span class=\"n\">secret_key</span><span class=\"o\">=</span><span class=\"s1\">'YOUR_SECRET_KEY'</span><span class=\"p\">)</span>\n<span class=\"n\">account_info</span> <span class=\"o\">=</span> <span class=\"n\">mailjet_api</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">infos</span><span class=\"p\">()</span>\n</pre>\n<p><tt>acount_info</tt> would now be assigned the following python dict:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s1\">'status'</span><span class=\"p\">:</span> <span class=\"s1\">'OK'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'infos'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'username'</span><span class=\"p\">:</span> <span class=\"s1\">'user@domain.com'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'firstname'</span><span class=\"p\">:</span> <span class=\"s1\">'firstname'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'locale'</span><span class=\"p\">:</span> <span class=\"s1\">'en_US'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'lastname'</span><span class=\"p\">:</span> <span class=\"s1\">'lastname'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'company_name'</span><span class=\"p\">:</span> <span class=\"s1\">'company_name'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'contact_phone'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<ul>\n<li>Create a new list of contacts, following on from the previous\nexample:</li>\n</ul>\n<pre><span class=\"n\">contact_list</span> <span class=\"o\">=</span> <span class=\"n\">mailjet_api</span><span class=\"o\">.</span><span class=\"n\">lists</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n    <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">'test'</span><span class=\"p\">,</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'testlist'</span><span class=\"p\">,</span>  <span class=\"c1\"># Only alphanumeric characters are allowed!</span>\n    <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'POST'</span>\n<span class=\"p\">)</span>\n</pre>\n<p><tt>contact_list</tt> will now contain a dictionary with the status and list\nid as below:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s1\">'status'</span><span class=\"p\">:</span> <span class=\"s1\">'OK'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'contact_id'</span><span class=\"p\">:</span> <span class=\"mi\">000000000</span>\n<span class=\"p\">}</span>\n</pre>\n<ul>\n<li>You can now add contacts to your list using the <tt>contact_id</tt>:</li>\n</ul>\n<pre><span class=\"n\">mailjet_api</span><span class=\"o\">.</span><span class=\"n\">lists</span><span class=\"o\">.</span><span class=\"n\">addcontact</span><span class=\"p\">(</span>\n    <span class=\"n\">contact</span><span class=\"o\">=</span><span class=\"s1\">'example@example.com'</span><span class=\"p\">,</span>\n    <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">contact_list</span><span class=\"p\">[</span><span class=\"s1\">'list_id'</span><span class=\"p\">],</span>\n    <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'POST'</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"faq\">\n<h2>FAQ</h2>\n<div id=\"how-do-i-give-reserved-python-keywords-as-parameters\">\n<h3>How do I give reserved python keywords as parameters?</h3>\n<p>Methods such as creating a campaign require you to use reserved python\nkeywords, such as <tt>from</tt> - hence, in order to overcome this, do the\nfollowing:</p>\n<pre><span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">()</span>\n<span class=\"n\">params</span><span class=\"p\">[</span><span class=\"s1\">'method'</span><span class=\"p\">]</span> <span class=\"o\">=</span><span class=\"s1\">'POST'</span>\n<span class=\"n\">params</span><span class=\"p\">[</span><span class=\"s1\">'subject'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'My first campaign'</span>\n<span class=\"n\">params</span><span class=\"p\">[</span><span class=\"s1\">'list_id'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">contact_list</span><span class=\"p\">[</span><span class=\"s1\">'list_id'</span><span class=\"p\">]</span>\n<span class=\"n\">params</span><span class=\"p\">[</span><span class=\"s1\">'lang'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'en'</span>\n<span class=\"n\">params</span><span class=\"p\">[</span><span class=\"s1\">'from'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'noreply@example.com'</span>\n<span class=\"n\">params</span><span class=\"p\">[</span><span class=\"s1\">'from_name'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'Your name'</span>\n<span class=\"n\">params</span><span class=\"p\">[</span><span class=\"s1\">'footer'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'default'</span>\n<span class=\"n\">campaign</span> <span class=\"o\">=</span> <span class=\"n\">mailjet_api</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">createcampaign</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">params</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"how-do-i-debug-errors\">\n<h3>How do I debug errors?</h3>\n<p>The errors produced by the <tt>mailjet</tt> library (or actually, produced by\nthe <tt>urllib2</tt> library) are still normal http responses. So if you wish\nto read the actual response, do something like this:</p>\n<pre><span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">contact_list</span> <span class=\"o\">=</span> <span class=\"n\">mailjet_api</span><span class=\"o\">.</span><span class=\"n\">lists</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n        <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">'test'</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Test list'</span><span class=\"p\">,</span>  <span class=\"c1\"># Incorrect because of the space in the name</span>\n        <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'POST'</span>\n    <span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"s1\">'Mailjet response: </span><span class=\"si\">%r</span><span class=\"s1\">, </span><span class=\"si\">%r</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1985326, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "14e8510cfa57c6264619c4957e597cbc", "sha256": "b003b2ca1a274d9636ae04f57ad0c253f770d72779f37b38b9318d6bab4a169b"}, "downloads": -1, "filename": "mailjet-1.0-py2.7.egg", "has_sig": false, "md5_digest": "14e8510cfa57c6264619c4957e597cbc", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 10237, "upload_time": "2012-04-11T03:40:36", "upload_time_iso_8601": "2012-04-11T03:40:36.972786Z", "url": "https://files.pythonhosted.org/packages/5f/a3/e00c1e3ac6bb4fd3c1070f91003c95d0dcb493960127582e9e6bf015001b/mailjet-1.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3076dacaea2bd3c85d248fa6aaa14c9", "sha256": "a829fff6235e8f2e4e7731c351e074fb005d29a4633a4e1613bd16c4c0e97d84"}, "downloads": -1, "filename": "mailjet-1.0.tar.gz", "has_sig": false, "md5_digest": "e3076dacaea2bd3c85d248fa6aaa14c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3870, "upload_time": "2012-04-11T03:40:35", "upload_time_iso_8601": "2012-04-11T03:40:35.401827Z", "url": "https://files.pythonhosted.org/packages/ec/cd/9f523799596916ee14ef01d9bad0552336e6e07f7be9d35c49eddc0009c7/mailjet-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "3f5417b1137bf6954c74dfbe463b6321", "sha256": "5939ca128085b0536457343b583d37efa319e9a5ce8365c41bd62dcf7684f166"}, "downloads": -1, "filename": "mailjet-1.1.tar.gz", "has_sig": false, "md5_digest": "3f5417b1137bf6954c74dfbe463b6321", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4002, "upload_time": "2012-09-08T02:07:55", "upload_time_iso_8601": "2012-09-08T02:07:55.394113Z", "url": "https://files.pythonhosted.org/packages/ba/92/124bedea34af50021b616c0af597808b03fe0463ee32818099ce25f1f460/mailjet-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "3c3a4eb6b73752f94dbcb5816b23b165", "sha256": "246220d15331b6b41e15f0ec4500284c61e5c4beaa60243a7f6d8c2667aa2585"}, "downloads": -1, "filename": "mailjet-1.2.tar.gz", "has_sig": false, "md5_digest": "3c3a4eb6b73752f94dbcb5816b23b165", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4462, "upload_time": "2013-02-27T13:10:37", "upload_time_iso_8601": "2013-02-27T13:10:37.623758Z", "url": "https://files.pythonhosted.org/packages/25/0b/e0a61c3c961b26030280e8eb6e3922c99f67cb308fcd2db9bf5a959d88da/mailjet-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "1fd79ea641e77e8c9cad5a7f0af245b5", "sha256": "4f56c788e4279e382658486fed2cfe3f230b4006bb5a060a6d9cf0ec432b4a14"}, "downloads": -1, "filename": "mailjet-1.3.tar.gz", "has_sig": false, "md5_digest": "1fd79ea641e77e8c9cad5a7f0af245b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4482, "upload_time": "2013-04-17T23:36:16", "upload_time_iso_8601": "2013-04-17T23:36:16.400403Z", "url": "https://files.pythonhosted.org/packages/3b/f6/e5fb331dad9cce451dc6d87f97a64bbba27ac46913c347cecbcae9eccfbc/mailjet-1.3.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "3f8505ef0d7cd6240aafa8ecd7ab3217", "sha256": "7af682ecd7efa71815f564d78352d57f9625d702189a1d85d6832a1309e4f5ae"}, "downloads": -1, "filename": "mailjet-1.3.1.tar.gz", "has_sig": false, "md5_digest": "3f8505ef0d7cd6240aafa8ecd7ab3217", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4607, "upload_time": "2013-05-12T18:58:37", "upload_time_iso_8601": "2013-05-12T18:58:37.582871Z", "url": "https://files.pythonhosted.org/packages/c1/49/a5b1bbc3f0bd0862ab49c39f6b408106dd621e2a5df5b5ab47832698a79d/mailjet-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "08d5b097b536e72d379a6e552cc46d45", "sha256": "517fe14c08fb70fde3a91197a68aa82362b66ee987396513d6e761cc270bddf4"}, "downloads": -1, "filename": "mailjet-1.3.2.tar.gz", "has_sig": false, "md5_digest": "08d5b097b536e72d379a6e552cc46d45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4968, "upload_time": "2013-09-12T14:04:20", "upload_time_iso_8601": "2013-09-12T14:04:20.638307Z", "url": "https://files.pythonhosted.org/packages/6e/90/4ade4eff38bd871e3afd2d426eaf5384a4397fb094ccfd5333f4f74ce0a4/mailjet-1.3.2.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "91f3dd51d616c7abf5381531f29b490f", "sha256": "8ba68460382da2ff090321a9e9ab78f9cdfec05019bba1cd3a45efbdc1a1b8c5"}, "downloads": -1, "filename": "mailjet-1.4.0.tar.gz", "has_sig": false, "md5_digest": "91f3dd51d616c7abf5381531f29b490f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9533, "upload_time": "2013-09-12T15:31:14", "upload_time_iso_8601": "2013-09-12T15:31:14.885595Z", "url": "https://files.pythonhosted.org/packages/22/ef/b3de4ddd7f37acd495586e90ea1186d71fd93bc2eeecc3930984d469809e/mailjet-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "b1d7abf588ee15cc56dcbe52580ecfb2", "sha256": "8ecb23ea3cfb0bc52ddc0678cfed7f36eab4904c4c21ddf8d0f94125bcac7e71"}, "downloads": -1, "filename": "mailjet-1.4.1.tar.gz", "has_sig": false, "md5_digest": "b1d7abf588ee15cc56dcbe52580ecfb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10653, "upload_time": "2016-03-02T08:48:03", "upload_time_iso_8601": "2016-03-02T08:48:03.394950Z", "url": "https://files.pythonhosted.org/packages/39/77/a678087c632014668b8902e3f822b9ad392bef9434cc13d0cb2abf4558c0/mailjet-1.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b1d7abf588ee15cc56dcbe52580ecfb2", "sha256": "8ecb23ea3cfb0bc52ddc0678cfed7f36eab4904c4c21ddf8d0f94125bcac7e71"}, "downloads": -1, "filename": "mailjet-1.4.1.tar.gz", "has_sig": false, "md5_digest": "b1d7abf588ee15cc56dcbe52580ecfb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10653, "upload_time": "2016-03-02T08:48:03", "upload_time_iso_8601": "2016-03-02T08:48:03.394950Z", "url": "https://files.pythonhosted.org/packages/39/77/a678087c632014668b8902e3f822b9ad392bef9434cc13d0cb2abf4558c0/mailjet-1.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:55 2020"}