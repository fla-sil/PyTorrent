{"info": {"author": "Webinterpret", "author_email": "funky_chicken@webinterpret.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "# falcon-telegraf-middleware\n\n[![forthebadge](https://forthebadge.com/images/badges/no-ragrets.svg)](https://forthebadge.com)\n\n[![PyPI](https://img.shields.io/pypi/v/falcon-telegraf-middleware.svg?style=for-the-badge)](https://pypi.org/project/falcon-telegraf-middleware/)\n\n[![Build Status](https://travis-ci.org/Webinterpret/falcon-telegraf-middleware.svg?branch=master)](https://travis-ci.org/Webinterpret/falcon-telegraf-middleware)\n\n## What is this?\n\nPackage to ease gathering metrics from [Falcon](http://falcon.readthedocs.io/) APIs into InfluxDB via a Telegraf.\nBy use of middlewares this orthogonal functionality is added in a hassle-free way minimizing required work. Sane defaults make quickstart really quick \ud83d\udc4d\n\n## How?\nInject the middleware (or couple of them) when creating `Api` instance:\n\n```python\nfrom falcon_telegraf import LogHits, Timer\n\ntelegraf_client = TelegrafClient('localhost', 8094)\napp = falcon.API(\n    middleware=[\n        LogHits(telegraf_client),\n        Timer(),\n    ]\n)\n```\n\nNote that passing `telegraf_client` is totally optional.\nMeasurement names can be set when creating middleware, prefixed or autogenerated.\n\n## Middlewares\n### `LogHits`\nCreates a metric named hits-path/to/endpoint with one fields called `hits` with value 1.\nExecutes *after* `on-*` method was called. Because of this you can add custom tags and values.\nExample:\n```python\ndef on_get(self, request, response, some_path_variable):\n    request.context['telegraf_tags']['my_new_tag'] = 'this_tags_value'\n    request.context['telegraf_values']['some_path_variable'] = some_path_variable\n    ...\n```\n### `Timer`\nReports time in ms elapsed between registering response and registering request. Default metric prefix is `time-`.\nOther things in processing pipeline can affect it's readings so take them with a grain of salt.\n## Deploy\nFirst bump version in `setup.py` in master branch via merge request. Afterwards push a version tag and wait.\n\n```bash\ngit tag `date +\"%Y.%-m.%-d.1\"`\ngit push --tags\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Webinterpret/falcon-telegraf-middleware", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "falcon-telegraf-middleware", "package_url": "https://pypi.org/project/falcon-telegraf-middleware/", "platform": "", "project_url": "https://pypi.org/project/falcon-telegraf-middleware/", "project_urls": {"Homepage": "https://github.com/Webinterpret/falcon-telegraf-middleware"}, "release_url": "https://pypi.org/project/falcon-telegraf-middleware/2019.8.5.1/", "requires_dist": null, "requires_python": "", "summary": "Falcon to Telegraf middlewares", "version": "2019.8.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>falcon-telegraf-middleware</h1>\n<p><a href=\"https://forthebadge.com\" rel=\"nofollow\"><img alt=\"forthebadge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/939728425d0273b97bdf2fac7e45cac862aa42ef/68747470733a2f2f666f7274686562616467652e636f6d2f696d616765732f6261646765732f6e6f2d726167726574732e737667\"></a></p>\n<p><a href=\"https://pypi.org/project/falcon-telegraf-middleware/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cde66da656dcf5415d6b67e13128471413d07a73/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f66616c636f6e2d74656c65677261662d6d6964646c65776172652e7376673f7374796c653d666f722d7468652d6261646765\"></a></p>\n<p><a href=\"https://travis-ci.org/Webinterpret/falcon-telegraf-middleware\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e14f0211cb0c203171e77d32b9e2cf09b7a583b6/68747470733a2f2f7472617669732d63692e6f72672f576562696e746572707265742f66616c636f6e2d74656c65677261662d6d6964646c65776172652e7376673f6272616e63683d6d6173746572\"></a></p>\n<h2>What is this?</h2>\n<p>Package to ease gathering metrics from <a href=\"http://falcon.readthedocs.io/\" rel=\"nofollow\">Falcon</a> APIs into InfluxDB via a Telegraf.\nBy use of middlewares this orthogonal functionality is added in a hassle-free way minimizing required work. Sane defaults make quickstart really quick \ud83d\udc4d</p>\n<h2>How?</h2>\n<p>Inject the middleware (or couple of them) when creating <code>Api</code> instance:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">falcon_telegraf</span> <span class=\"kn\">import</span> <span class=\"n\">LogHits</span><span class=\"p\">,</span> <span class=\"n\">Timer</span>\n\n<span class=\"n\">telegraf_client</span> <span class=\"o\">=</span> <span class=\"n\">TelegrafClient</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"mi\">8094</span><span class=\"p\">)</span>\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">falcon</span><span class=\"o\">.</span><span class=\"n\">API</span><span class=\"p\">(</span>\n    <span class=\"n\">middleware</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">LogHits</span><span class=\"p\">(</span><span class=\"n\">telegraf_client</span><span class=\"p\">),</span>\n        <span class=\"n\">Timer</span><span class=\"p\">(),</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Note that passing <code>telegraf_client</code> is totally optional.\nMeasurement names can be set when creating middleware, prefixed or autogenerated.</p>\n<h2>Middlewares</h2>\n<h3><code>LogHits</code></h3>\n<p>Creates a metric named hits-path/to/endpoint with one fields called <code>hits</code> with value 1.\nExecutes <em>after</em> <code>on-*</code> method was called. Because of this you can add custom tags and values.\nExample:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">on_get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">some_path_variable</span><span class=\"p\">):</span>\n    <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s1\">'telegraf_tags'</span><span class=\"p\">][</span><span class=\"s1\">'my_new_tag'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'this_tags_value'</span>\n    <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s1\">'telegraf_values'</span><span class=\"p\">][</span><span class=\"s1\">'some_path_variable'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">some_path_variable</span>\n    <span class=\"o\">...</span>\n</pre>\n<h3><code>Timer</code></h3>\n<p>Reports time in ms elapsed between registering response and registering request. Default metric prefix is <code>time-</code>.\nOther things in processing pipeline can affect it's readings so take them with a grain of salt.</p>\n<h2>Deploy</h2>\n<p>First bump version in <code>setup.py</code> in master branch via merge request. Afterwards push a version tag and wait.</p>\n<pre>git tag <span class=\"sb\">`</span>date +<span class=\"s2\">\"%Y.%-m.%-d.1\"</span><span class=\"sb\">`</span>\ngit push --tags\n</pre>\n\n          </div>"}, "last_serial": 5633788, "releases": {"2018.10.11.1": [{"comment_text": "", "digests": {"md5": "98cd90c75388704d180ffebc9aaee5af", "sha256": "6aac32436da864cd0d65540263394a8e976a082338cbe11a82656d3a6175bfef"}, "downloads": -1, "filename": "falcon-telegraf-middleware-2018.10.11.1.tar.gz", "has_sig": false, "md5_digest": "98cd90c75388704d180ffebc9aaee5af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6100, "upload_time": "2018-10-11T10:01:12", "upload_time_iso_8601": "2018-10-11T10:01:12.804098Z", "url": "https://files.pythonhosted.org/packages/2e/c2/63927be61f8c006432caf420b1c15ab27012525e088216d5bf19cd9a0a79/falcon-telegraf-middleware-2018.10.11.1.tar.gz", "yanked": false}], "2018.10.12.1": [{"comment_text": "", "digests": {"md5": "9c96688b8eb9bd7f1c9b6a695d52d1e5", "sha256": "ced5d23f0576e49c3ab824a180f5b78ed7beac155815f3b6c5d97b6222c6739a"}, "downloads": -1, "filename": "falcon-telegraf-middleware-2018.10.12.1.tar.gz", "has_sig": false, "md5_digest": "9c96688b8eb9bd7f1c9b6a695d52d1e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6079, "upload_time": "2018-10-12T11:04:22", "upload_time_iso_8601": "2018-10-12T11:04:22.076052Z", "url": "https://files.pythonhosted.org/packages/51/5b/e07b0397c1ea4e0753fce56ca55ab94818860ad578333d1e1a27d302070c/falcon-telegraf-middleware-2018.10.12.1.tar.gz", "yanked": false}], "2018.10.12.2": [{"comment_text": "", "digests": {"md5": "79ce74283378ff6e136301b9d363015d", "sha256": "023ed1b2885986d0cff7a2b38d470870762c343f1d951d6e11d10b2be4446f69"}, "downloads": -1, "filename": "falcon-telegraf-middleware-2018.10.12.2.tar.gz", "has_sig": false, "md5_digest": "79ce74283378ff6e136301b9d363015d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6160, "upload_time": "2018-10-15T07:42:34", "upload_time_iso_8601": "2018-10-15T07:42:34.105380Z", "url": "https://files.pythonhosted.org/packages/45/73/2e69a28216e041e7b006c60359527c2409a38744ab22bead2e600c9c31af/falcon-telegraf-middleware-2018.10.12.2.tar.gz", "yanked": false}], "2018.10.15.1": [{"comment_text": "", "digests": {"md5": "f02842b21f28d57447eaad9f1ea10a6b", "sha256": "a89cd2d1c6719d028b2a098fe1c5ed87263ccad75b3daa9538527984b099b639"}, "downloads": -1, "filename": "falcon-telegraf-middleware-2018.10.15.1.tar.gz", "has_sig": false, "md5_digest": "f02842b21f28d57447eaad9f1ea10a6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6165, "upload_time": "2018-10-15T08:01:36", "upload_time_iso_8601": "2018-10-15T08:01:36.635221Z", "url": "https://files.pythonhosted.org/packages/8a/e1/f62cb90265c7ab4c176787879b126eff058cf89ddc0808ebacdedc766b50/falcon-telegraf-middleware-2018.10.15.1.tar.gz", "yanked": false}], "2018.4.19.3": [{"comment_text": "", "digests": {"md5": "30327020330c30304d9a3118c3418382", "sha256": "9c3e73ae2f64f5574815ec70f80275a270283cd6895d32c3a808918d4bb356d2"}, "downloads": -1, "filename": "falcon-telegraf-middleware-2018.4.19.3.tar.gz", "has_sig": false, "md5_digest": "30327020330c30304d9a3118c3418382", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5874, "upload_time": "2018-04-19T10:35:26", "upload_time_iso_8601": "2018-04-19T10:35:26.237865Z", "url": "https://files.pythonhosted.org/packages/8f/d8/6b573e8c08025cd920b9a4258a2c035407b2c9bbe293db3db23a5d8dcee9/falcon-telegraf-middleware-2018.4.19.3.tar.gz", "yanked": false}], "2018.4.20.1": [{"comment_text": "", "digests": {"md5": "6867997146210328e89dfce9d7fb20aa", "sha256": "dfed7aa2efb09445e322271733343c09546c53642587d474c6e23494ee7a3e79"}, "downloads": -1, "filename": "falcon-telegraf-middleware-2018.4.20.1.tar.gz", "has_sig": false, "md5_digest": "6867997146210328e89dfce9d7fb20aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5919, "upload_time": "2018-04-20T09:43:30", "upload_time_iso_8601": "2018-04-20T09:43:30.834073Z", "url": "https://files.pythonhosted.org/packages/07/b6/5464f0302f5397c14a39f0421e83aad764fa3bc23759b7d8bd101b0e6e3f/falcon-telegraf-middleware-2018.4.20.1.tar.gz", "yanked": false}], "2018.6.18.2": [{"comment_text": "", "digests": {"md5": "09a41f689cb4a160785843a4de265737", "sha256": "b5e497822fab6f8da3009dfd465b946c83341f46e411f734c4f3e203dca7c1f8"}, "downloads": -1, "filename": "falcon-telegraf-middleware-2018.6.18.2.tar.gz", "has_sig": false, "md5_digest": "09a41f689cb4a160785843a4de265737", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5922, "upload_time": "2018-06-18T08:48:56", "upload_time_iso_8601": "2018-06-18T08:48:56.702410Z", "url": "https://files.pythonhosted.org/packages/81/11/320a69b48d2f62775d548d90480903c70e994068112b27d652ff3d931878/falcon-telegraf-middleware-2018.6.18.2.tar.gz", "yanked": false}], "2018.7.12.1": [{"comment_text": "", "digests": {"md5": "63dcd1afb92989e7f6c2006f51d45932", "sha256": "52ff3500755dc0e6a56fdfdd900a55ffa3d92a64e93ffdf7059554308b79277e"}, "downloads": -1, "filename": "falcon-telegraf-middleware-2018.7.12.1.tar.gz", "has_sig": false, "md5_digest": "63dcd1afb92989e7f6c2006f51d45932", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5918, "upload_time": "2018-07-12T12:23:15", "upload_time_iso_8601": "2018-07-12T12:23:15.383177Z", "url": "https://files.pythonhosted.org/packages/12/08/47653ad4183c179152e639891f585331776957551420be6f3d521c2f8b3d/falcon-telegraf-middleware-2018.7.12.1.tar.gz", "yanked": false}], "2018.9.10.1": [{"comment_text": "", "digests": {"md5": "dbf5887921f10381c6213e84010d59f0", "sha256": "9098d675adcb21d2817e736e1d45c6fb054186496fdc4714a667e618535ef8cc"}, "downloads": -1, "filename": "falcon-telegraf-middleware-2018.9.10.1.tar.gz", "has_sig": false, "md5_digest": "dbf5887921f10381c6213e84010d59f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5976, "upload_time": "2018-09-10T09:08:38", "upload_time_iso_8601": "2018-09-10T09:08:38.331569Z", "url": "https://files.pythonhosted.org/packages/87/b0/b928b753a97e1ed1b991787657194a6e0d10bd55a60815ebb2c8e065e385/falcon-telegraf-middleware-2018.9.10.1.tar.gz", "yanked": false}], "2019.8.5.1": [{"comment_text": "", "digests": {"md5": "177abe9170f6be3cb552a67bd973b5ad", "sha256": "89d885a1c8a1b2cbddc8d8163510fa0d637382907ba7607c835e469c8e96ddd6"}, "downloads": -1, "filename": "falcon-telegraf-middleware-2019.8.5.1.tar.gz", "has_sig": false, "md5_digest": "177abe9170f6be3cb552a67bd973b5ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6139, "upload_time": "2019-08-05T11:39:51", "upload_time_iso_8601": "2019-08-05T11:39:51.280044Z", "url": "https://files.pythonhosted.org/packages/43/e8/33dd0109f6f4034697ca40f871f89cf6ae2b7deab0c95c2bfbd978dee980/falcon-telegraf-middleware-2019.8.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "177abe9170f6be3cb552a67bd973b5ad", "sha256": "89d885a1c8a1b2cbddc8d8163510fa0d637382907ba7607c835e469c8e96ddd6"}, "downloads": -1, "filename": "falcon-telegraf-middleware-2019.8.5.1.tar.gz", "has_sig": false, "md5_digest": "177abe9170f6be3cb552a67bd973b5ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6139, "upload_time": "2019-08-05T11:39:51", "upload_time_iso_8601": "2019-08-05T11:39:51.280044Z", "url": "https://files.pythonhosted.org/packages/43/e8/33dd0109f6f4034697ca40f871f89cf6ae2b7deab0c95c2bfbd978dee980/falcon-telegraf-middleware-2019.8.5.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:50 2020"}