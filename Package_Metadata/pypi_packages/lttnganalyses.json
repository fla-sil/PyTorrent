{"info": {"author": "Julien Desfossez", "author_email": "jdesfossez@efficios.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.4", "Topic :: System :: Monitoring"], "description": "LTTng analyses\n**************\n\n.. image:: https://img.shields.io/pypi/v/lttnganalyses.svg?label=Latest%20version\n   :target: https://pypi.python.org/pypi/lttnganalyses\n   :alt: Latest version released on PyPi\n\n.. image:: https://travis-ci.org/lttng/lttng-analyses.svg?branch=master&label=Travis%20CI%20build\n   :target: https://travis-ci.org/lttng/lttng-analyses\n   :alt: Status of Travis CI\n\n.. image:: https://img.shields.io/jenkins/s/https/ci.lttng.org/lttng-analyses_master_build.svg?label=LTTng%20CI%20build\n   :target: https://ci.lttng.org/job/lttng-analyses_master_build\n   :alt: Status of LTTng CI\n\nThe **LTTng analyses** are a set of various executable analyses to\nextract and visualize monitoring data and metrics from\n`LTTng <http://lttng.org/>`_ kernel traces on the command line.\n\nAs opposed to other \"live\" diagnostic or monitoring solutions, this\napproach is based on the following workflow:\n\n#. Record your system's activity with LTTng, a low-overhead tracer.\n#. Do whatever it takes for your problem to occur.\n#. Diagnose your problem's cause **offline** (when tracing is stopped).\n\nThis solution allows you to target problems that are hard to find and\nto \"dig\" until the root cause is found.\n\n**Current limitations**:\n\n- The LTTng analyses can be quite slow to execute. There are a number of\n  places where they could be optimized, but using the Python interpreter\n  seems to be an important impediment.\n\n  This project is regarded by its authors as a testing ground to\n  experiment analysis features, user interfaces, and usability in\n  general. It is not considered ready to analyze long traces.\n\n**Contents**:\n\n.. contents::\n   :local:\n   :depth: 3\n   :backlinks: none\n\n\nInstall LTTng analyses\n======================\n\n.. NOTE::\n\n   The version 2.0 of `Trace Compass <http://tracecompass.org/>`_\n   requires LTTng analyses 0.4: Trace Compass 2.0 is not compatible\n   with LTTng analyses 0.5 and after.\n\n   In this case, we suggest that you install LTTng analyses from the\n   ``stable-0.4`` branch of the project's Git repository (see\n   `Install from the Git repository`_). You can also\n   `download <https://github.com/lttng/lttng-analyses/releases>`_ the\n   latest 0.4 release tarball and follow the\n   `Install from a release tarball`_ procedure.\n\n\nRequired dependencies\n---------------------\n\n- `Python <https://www.python.org/>`_ \u2265 3.4\n- `setuptools <https://pypi.python.org/pypi/setuptools>`_\n- `pyparsing <http://pyparsing.wikispaces.com/>`_ \u2265 2.0.0\n- `Babeltrace <http://diamon.org/babeltrace/>`_ \u2265 1.2 with Python\n  bindings (``--enable-python-bindings`` when building from source)\n\n\nOptional dependencies\n---------------------\n\n- `LTTng <http://lttng.org/>`_ \u2265 2.5: to use the\n  ``lttng-analyses-record`` script and to trace the system in\n  general\n- `termcolor <https://pypi.python.org/pypi/termcolor/>`_: color\n  support\n- `progressbar <https://pypi.python.org/pypi/progressbar/>`_:\n  terminal progress bar support (this is not required for the\n  machine interface's progress indication feature)\n\n\nInstall from PyPI (online repository)\n-------------------------------------\n\nTo install the latest LTTng analyses release on your system from\n`PyPI <https://pypi.python.org/pypi/lttnganalyses>`_:\n\n#. Install the required dependencies.\n#. **Optional**: Install the optional dependencies.\n#. Make sure ``pip`` for Python 3 is installed on your system. The\n   package is named ``python3-pip`` on most distributions\n   (``python-pip`` on Arch Linux).\n#. Use ``pip3`` to install LTTng analyses:\n\n   .. code-block:: bash\n\n      sudo pip3 install --upgrade lttnganalyses\n\n   Note that you can also install LTTng analyses locally, only for\n   your user:\n\n   .. code-block:: bash\n\n      pip3 install --user --upgrade lttnganalyses\n\n   Files are installed in ``~/.local``, therefore ``~/.local/bin`` must\n   be part of your ``PATH`` environment variable for the LTTng analyses\n   to be launchable.\n\n\nInstall from a release tarball\n------------------------------\n\nTo install a specific LTTng analyses release (tarball) on your system:\n\n#. Install the required dependencies.\n#. **Optional**: Install the optional dependencies.\n#. `Download <https://github.com/lttng/lttng-analyses/releases>`_ and\n   extract the desired release tarball.\n#. Use ``setup.py`` to install LTTng analyses:\n\n   .. code-block:: bash\n\n      sudo ./setup.py install\n\n\nInstall from the Git repository\n-------------------------------\n\nTo install LTTng analyses from a specific branch or tag of the\nproject's Git repository:\n\n#. Install the required dependencies.\n#. **Optional**: Install the optional dependencies.\n#. Make sure ``pip`` for Python 3 is installed on your system. The\n   package is named ``python3-pip`` on most distributions\n   (``python-pip`` on Arch Linux).\n#. Use ``pip3`` to install LTTng analyses:\n\n   .. code-block:: bash\n\n      sudo pip3 install --upgrade git+git://github.com/lttng/lttng-analyses.git@master\n\n   Replace ``master`` with the desired branch or tag name to install\n   in the previous URL.\n\n   Note that you can also install LTTng analyses locally, only for\n   your user:\n\n   .. code-block:: bash\n\n      sudo pip3 install --user --upgrade git+git://github.com/lttng/lttng-analyses.git@master\n\n   Files are installed in ``~/.local``, therefore ``~/.local/bin`` must\n   be part of your ``PATH`` environment variable for the LTTng analyses\n   to be launchable.\n\n\nInstall on Ubuntu\n-----------------\n\nTo install LTTng analyses on Ubuntu \u2265 12.04:\n\n#. Add the *LTTng Latest Stable* PPA repository:\n\n   .. code-block:: bash\n\n      sudo apt-get install -y software-properties-common\n      sudo apt-add-repository -y ppa:lttng/ppa\n      sudo apt-get update\n\n   Replace ``software-properties-common`` with\n   ``python-software-properties`` on Ubuntu 12.04.\n#. Install the required dependencies:\n\n   .. code-block:: bash\n\n      sudo apt-get install -y babeltrace\n      sudo apt-get install -y python3-babeltrace\n      sudo apt-get install -y python3-setuptools\n\n   On Ubuntu > 12.04:\n\n   .. code-block:: bash\n\n      sudo apt-get install -y python3-pyparsing\n\n   On Ubuntu 12.04:\n\n   .. code-block:: bash\n\n      sudo pip3 install --upgrade pyparsing\n#. **Optional**: Install the optional dependencies:\n\n   .. code-block:: bash\n\n      sudo apt-get install -y lttng-tools\n      sudo apt-get install -y lttng-modules-dkms\n      sudo apt-get install -y python3-progressbar\n      sudo apt-get install -y python3-termcolor\n#. Install LTTng analyses:\n\n   .. code-block:: bash\n\n      sudo apt-get install -y python3-lttnganalyses\n\n\nInstall on Debian \"sid\"\n-----------------------\n\nTo install LTTng analyses on Debian \"sid\":\n\n#. Install the required dependencies:\n\n   .. code-block:: bash\n\n      sudo apt-get install -y babeltrace\n      sudo apt-get install -y python3-babeltrace\n      sudo apt-get install -y python3-setuptools\n      sudo apt-get install -y python3-pyparsing\n#. **Optional**: Install the optional dependencies:\n\n   .. code-block:: bash\n\n      sudo apt-get install -y lttng-tools\n      sudo apt-get install -y lttng-modules-dkms\n      sudo apt-get install -y python3-progressbar\n      sudo apt-get install -y python3-termcolor\n#. Install LTTng analyses:\n\n   .. code-block:: bash\n\n      sudo apt-get install -y python3-lttnganalyses\n\n\nRecord a trace\n==============\n\nThis section is a quick reminder of how to record an LTTng kernel\ntrace. See LTTng's `quick start guide\n<http://lttng.org/docs/v2.7/#doc-getting-started>`_ to familiarize\nwith LTTng.\n\n\nAutomatic\n---------\n\nLTTng analyses ships with a handy (installed) script,\n``lttng-analyses-record``, which automates\nthe steps to record a kernel trace with the events required by the\nanalyses.\n\nTo use ``lttng-analyses-record``:\n\n#. Launch the installed script:\n\n   .. code-block:: bash\n\n      lttng-analyses-record\n#. Do whatever it takes for your problem to occur.\n#. When you are done recording, press Ctrl+C where the script is\n   running.\n\n\nManual\n------\n\nTo record an LTTng kernel trace suitable for the LTTng analyses:\n\n#. Create a tracing session:\n\n   .. code-block:: bash\n\n      sudo lttng create\n#. Create a channel with a large sub-buffer size:\n\n   .. code-block:: bash\n\n      sudo lttng enable-channel --kernel chan --subbuf-size=8M\n#. Create event rules to capture the needed events:\n\n   .. code-block:: bash\n\n      sudo lttng enable-event --kernel --channel=chan block_bio_backmerge\n      sudo lttng enable-event --kernel --channel=chan block_bio_remap\n      sudo lttng enable-event --kernel --channel=chan block_rq_complete\n      sudo lttng enable-event --kernel --channel=chan block_rq_issue\n      sudo lttng enable-event --kernel --channel=chan irq_handler_entry\n      sudo lttng enable-event --kernel --channel=chan irq_handler_exit\n      sudo lttng enable-event --kernel --channel=chan irq_softirq_entry\n      sudo lttng enable-event --kernel --channel=chan irq_softirq_exit\n      sudo lttng enable-event --kernel --channel=chan irq_softirq_raise\n      sudo lttng enable-event --kernel --channel=chan kmem_mm_page_alloc\n      sudo lttng enable-event --kernel --channel=chan kmem_mm_page_free\n      sudo lttng enable-event --kernel --channel=chan lttng_statedump_block_device\n      sudo lttng enable-event --kernel --channel=chan lttng_statedump_file_descriptor\n      sudo lttng enable-event --kernel --channel=chan lttng_statedump_process_state\n      sudo lttng enable-event --kernel --channel=chan mm_page_alloc\n      sudo lttng enable-event --kernel --channel=chan mm_page_free\n      sudo lttng enable-event --kernel --channel=chan net_dev_xmit\n      sudo lttng enable-event --kernel --channel=chan netif_receive_skb\n      sudo lttng enable-event --kernel --channel=chan sched_pi_setprio\n      sudo lttng enable-event --kernel --channel=chan sched_process_exec\n      sudo lttng enable-event --kernel --channel=chan sched_process_fork\n      sudo lttng enable-event --kernel --channel=chan sched_switch\n      sudo lttng enable-event --kernel --channel=chan sched_wakeup\n      sudo lttng enable-event --kernel --channel=chan sched_waking\n      sudo lttng enable-event --kernel --channel=chan softirq_entry\n      sudo lttng enable-event --kernel --channel=chan softirq_exit\n      sudo lttng enable-event --kernel --channel=chan softirq_raise\n      sudo lttng enable-event --kernel --channel=chan --syscall --all\n#. Start recording:\n\n   .. code-block:: bash\n\n      sudo lttng start\n#. Do whatever it takes for your problem to occur.\n#. Stop recording and destroy the tracing session to free its\n   resources:\n\n   .. code-block:: bash\n\n      sudo lttng stop\n      sudo lttng destroy\n\n\nSee the `LTTng Documentation <http://lttng.org/docs/>`_ for other\nuse cases, like sending the trace data over the network instead of\nrecording trace files on the target's file system.\n\n\nRun an LTTng analysis\n=====================\n\nThe **LTTng analyses** are a set of various command-line\nanalyses. Each analysis accepts the path to a recorded trace\n(see `Record a trace`_) as its argument, as well as various command-line\noptions to control the analysis and its output.\n\nMany command-line options are common to all the analyses, so that you\ncan filter by timerange, process name, process ID, minimum and maximum\nvalues, and the rest. Also note that the reported timestamps can\noptionally be expressed in the GMT time zone.\n\nEach analysis is installed as an executable starting with the\n``lttng-`` prefix.\n\n.. list-table:: Available LTTng analyses\n   :header-rows: 1\n\n   * - Command\n     - Description\n   * - ``lttng-cputop``\n     - Per-TID, per-CPU, and total top CPU usage.\n   * - ``lttng-iolatencyfreq``\n     - I/O request latency distribution.\n   * - ``lttng-iolatencystats``\n     - Partition and system call latency statistics.\n   * - ``lttng-iolatencytop``\n     - Top system call latencies.\n   * - ``lttng-iolog``\n     - I/O operations log.\n   * - ``lttng-iousagetop``\n     - I/O usage top.\n   * - ``lttng-irqfreq``\n     - Interrupt handler duration frequency distribution.\n   * - ``lttng-irqlog``\n     - Interrupt log.\n   * - ``lttng-irqstats``\n     - Hardware and software interrupt statistics.\n   * - ``lttng-memtop``\n     - Per-TID top allocated/freed memory.\n   * - ``lttng-schedfreq``\n     - Scheduling latency frequency distribution.\n   * - ``lttng-schedlog``\n     - Scheduling top.\n   * - ``lttng-schedstats``\n     - Scheduling latency stats.\n   * - ``lttng-schedtop``\n     - Scheduling top.\n   * - ``lttng-periodlog``\n     - Period log.\n   * - ``lttng-periodstats``\n     - Period duration stats.\n   * - ``lttng-periodtop``\n     - Period duration top.\n   * - ``lttng-periodfreq``\n     - Period duration frequency distribution.\n   * - ``lttng-syscallstats``\n     - Per-TID and global system call statistics.\n\nUse the ``--help`` option of any command to list the descriptions\nof the possible command-line options.\n\n.. NOTE::\n\n   You can set the ``LTTNG_ANALYSES_DEBUG`` environment variable to\n   ``1`` when you launch an analysis to enable a debug output. You can\n   also use the general ``--debug`` option.\n\n\nFiltering options\n-----------------\n\nDepending on the analysis, filter options are available. The complete\nlist of filter options is:\n\n.. list-table:: Available filtering command-line options\n   :header-rows: 1\n\n   * - Command-line option\n     - Description\n   * - ``--begin``\n     - Trace time at which to begin the analysis.\n\n       Format: ``HH:MM:SS[.NNNNNNNNN]``.\n   * - ``--cpu``\n     - Comma-delimited list of CPU IDs for which to display the\n       results.\n   * - ``--end``\n     - Trace time at which to end the analysis.\n\n       Format: ``HH:MM:SS[.NNNNNNNNN]``.\n   * - ``--irq``\n     - List of hardware IRQ numbers for which to display the results.\n   * - ``--limit``\n     - Maximum number of output rows per table. This option is useful\n       for \"top\" analyses, like ``lttng-cputop``.\n   * - ``--min``\n     - Minimum duration (\u00b5s) to keep in results.\n   * - ``--minsize``\n     - Minimum I/O operation size (B) to keep in results.\n   * - ``--max``\n     - Maximum duration (\u00b5s) to keep in results.\n   * - ``--maxsize``\n     - Maximum I/O operation size (B) to keep in results.\n   * - ``--procname``\n     - Comma-delimited list of process names for which to display\n       the results.\n   * - ``--softirq``\n     - List of software IRQ numbers for which to display the results.\n   * - ``--tid``\n     - Comma-delimited list of thread IDs for which to display the\n       results.\n\n\nPeriod options\n--------------\n\nLTTng analyses feature a powerful \"period engine\". A *period* is an\ninterval which begins and ends under specific conditions. When the\nanalysis results are displayed, they are isolated for the periods\nthat were opened and closed during the process.\n\nA period can have a parent. If it's the case, then its parent needs\nto exist for the period to begin at all. This tree structure of\nperiods is useful to keep a form of custom user state during the\ngeneric kernel analysis.\n\n.. ATTENTION::\n\n   The ``--period`` and ``--period-captures`` options's arguments\n   include characters that are considered special by most shells,\n   like ``$``, ``*``, and ``&``.\n\n   Make sure to always **single-quote** those arguments when running\n   the LTTng analyses on the command line.\n\n\nPeriod definition\n~~~~~~~~~~~~~~~~~\n\nYou can define one or more periods on the command line, when launching\nan analysis, with the ``--period`` option. This option's argument\naccepts the following form (content within square brackets is optional)::\n\n    [ NAME [ (PARENT) ] ] : BEGINEXPR [ : ENDEXPR ]\n\n``NAME``\n  Optional name of the period definition. All periods opened from this\n  definition have this name.\n\n  The syntax of this name is the same as a C identifier.\n\n``PARENT``\n  Optional name of a *previously defined* period which acts as the\n  parent period definition of this definition.\n\n  ``NAME`` must be set for ``PARENT`` to be set.\n\n``BEGINEXPR``\n  Matching expression which a given event must match in order for an\n  actual period to be instantiated by this definition.\n\n``ENDEXPR``\n  Matching expression which a given event must match in order for an\n  instance of this definition to be closed.\n\n  If this part is omitted, ``BEGINEXPR`` is used for the ending\n  expression too.\n\n\nMatching expression\n...................\n\nA matching expression is a C-like logical expression. It supports\nnesting expressions with ``(`` and ``)``, as well as the ``&&`` (logical\n*AND*), ``||`` (logical *OR*), and ``!`` (logical *NOT*) operators. The\nprecedence of those operators is the same as in the C language.\n\nThe atomic operands in those logical expressions are comparisons. For\nthe following comparison syntaxes, consider that:\n\n- ``EVT`` indicates an event source. The available event sources are:\n\n  ``$evt``\n    Current event.\n\n  ``$begin.$evt``\n    In ``BEGINEXPR``: current event (same as ``$evt``).\n\n    In ``ENDEXPR``: event which, for this period instance, was matched\n    when ``BEGINEXPR`` was evaluated.\n\n  ``$parent.$begin.$evt``\n    Event which, for the parent period instance of this period instance,\n    was matched when ``BEGINEXPR`` of the parent was evaluated.\n- ``FIELD`` indicates an event field source. The available event field\n  sources are:\n\n  ``NAME`` (direct field name)\n    Automatic scope: try to find the field named ``NAME`` in the dynamic\n    scopes in this order:\n\n    #. Event payload\n    #. Event context\n    #. Event header\n    #. Stream event context\n    #. Packet context\n    #. Packet header\n\n  ``$payload.NAME``\n    Event payload field named ``NAME``.\n\n  ``$ctx.NAME``\n    Event context field named ``NAME``.\n\n  ``$header.NAME``\n    Event header field named ``NAME``.\n\n  ``$stream_ctx.NAME``\n    Stream event context field named ``NAME``.\n\n  ``$pkt_ctx.NAME``\n    Packet context field named ``NAME``.\n\n  ``$pkt_header.NAME``\n    Packet header field named ``NAME``.\n- ``VALUE`` indicates one of:\n\n  - A constant, decimal number. This can be an integer or a real\n    number, positive or negative, and supports the ``e`` scientific\n    notation.\n\n    Examples: ``23``, ``-18.28``, ``7.2e9``.\n  - A double-quoted literal string. ``\"`` and ``\\`` can be escaped\n    with ``\\``.\n\n    Examples: ``\"hello, world!\"``, ``\"here's another \\\"quoted\\\" string\"``.\n  - An event field, that is, ``EVT.FIELD``, considering the replacements\n    described above.\n\n- ``NUMVALUE`` indicates one of:\n\n  - A constant, decimal number. This can be an integer or a real\n    number, positive or negative, and supports the ``e`` scientific\n    notation.\n\n    Examples: ``23``, ``-18.28``, ``7.2e9``.\n  - An event field, that is, ``EVT.FIELD``, considering the replacements\n    described above.\n\n.. list-table:: Available comparison syntaxes for matching expressions\n   :header-rows: 1\n\n   * - Comparison syntax\n     - Description\n   * - #. ``EVT.$name == \"NAME\"``\n       #. ``EVT.$name != \"NAME\"``\n       #. ``EVT.$name =* \"PATTERN\"``\n     - Name matching:\n\n       #. Name of event source ``EVT`` is equal to ``NAME``.\n       #. Name of event source ``EVT`` is not equal to ``NAME``.\n       #. Name of event source ``EVT`` satisfies the globbing pattern\n          ``PATTERN``\n          (see `fnmatch <https://docs.python.org/3/library/fnmatch.html>`_).\n   * - #. ``EVT.FIELD == VALUE``\n       #. ``EVT.FIELD != VALUE``\n       #. ``EVT.FIELD < NUMVALUE``\n       #. ``EVT.FIELD <= NUMVALUE``\n       #. ``EVT.FIELD > NUMVALUE``\n       #. ``EVT.FIELD >= NUMVALUE``\n       #. ``EVT.FIELD =* \"PATTERN\"``\n     - Value matching:\n\n       #. The value of the field ``EVT.FIELD`` is equal\n          to the value ``VALUE``.\n       #. The value of the field ``EVT.FIELD`` is not\n          equal to the value ``VALUE``.\n       #. The value of the field ``EVT.FIELD`` is lesser\n          than the value ``NUMVALUE``.\n       #. The value of the field ``EVT.FIELD`` is lesser\n          than or equal to the value ``NUMVALUE``.\n       #. The value of the field ``EVT.FIELD`` is greater\n          than the value ``NUMVALUE``.\n       #. The value of the field ``EVT.FIELD`` is greater\n          than or equal to the value ``NUMVALUE``.\n       #. The value of the field ``EVT.FIELD`` satisfies\n          the globbing pattern ``PATTERN``\n          (see `fnmatch <https://docs.python.org/3/library/fnmatch.html>`_).\n\nIn any case, if ``EVT.FIELD`` does not target an existing field, the\ncomparison including it fails. Also, string fields cannot be compared to\nnumber values (constant or fields).\n\n\nExamples\n........\n\n- Create a period instance named ``switch`` when:\n\n  - The current event name is ``sched_switch``.\n\n  End this period instance when:\n\n  - The current event name is ``sched_switch``.\n\n  Period definition::\n\n      switch : $evt.$name == \"sched_switch\"\n\n- Create a period instance named ``switch`` when:\n\n  - The current event name is ``sched_switch`` *AND*\n  - The current event's ``next_tid`` field is *NOT* equal to 0.\n\n  End this period instance when:\n\n  - The current event name is ``sched_switch`` *AND*\n  - The current event's ``prev_tid`` field is equal to\n    the ``next_tid`` field of the matched event in the begin expression *AND*\n  - The current event's ``cpu_id`` field is equal to\n    the ``cpu_id`` field of the matched event in the begin expression.\n\n  Period definition::\n\n      switch\n      : $evt.$name == \"sched_switch\" &&\n        $evt.next_tid != 0\n      : $evt.$name == \"sched_switch\" &&\n        $evt.prev_tid == $begin.$evt.next_tid &&\n        $evt.cpu_id == $begin.$evt.cpu_id\n\n- Create a period instance named ``irq`` when:\n\n  - A parent period instance named ``switch`` is currently opened.\n  - The current event name satisfies the ``irq_*_entry`` globbing\n    pattern *AND*\n  - The current event's ``cpu_id`` field is equal to the ``cpu_id``\n    field of the matched event in the begin expression of the parent\n    period instance.\n\n  End this period instance when:\n\n  - The current event name is ``irq_handler_exit`` *AND*\n  - The current event's ``cpu_id`` field is equal to\n    the ``cpu_id`` field of the matched event in the begin expression.\n\n  Period definition::\n\n      irq(switch)\n      : $evt.$name =* \"irq_*_entry\" &&\n        $evt.cpu_id == $parent.$begin.$evt.cpu_id\n      : $evt.$name == \"irq_handler_exit\" &&\n        $evt.cpu_id == $begin.$evt.cpu_id\n\n- Create a period instance named ``hello`` when:\n\n  - The current event name satisfies the ``hello*`` globbing pattern,\n    but excludes ``hello world``.\n\n  End this period instance when:\n\n  - The current event name is the same as the name of the matched event\n    in the begin expression *AND*\n  - The current event's ``theid`` header field is lesser than or equal\n    to 231.\n\n  Period definition::\n\n      hello\n      : $evt.$name =* \"hello*\" &&\n        $evt.$name != \"hello world\"\n      : $evt.$name == $begin.$evt.$name &&\n        $evt.$header.theid <= 231\n\n\nPeriod captures\n~~~~~~~~~~~~~~~\n\nWhen a period instance begins or ends, the analysis can capture the\ncurrent values of specific event fields and display them in its\nresults.\n\nYou can set period captures with the ``--period-captures`` command-line\noption. This option's argument accepts the following form\n(content within square brackets is optional)::\n\n    NAME : BEGINCAPTURES [ : ENDCAPTURES ]\n\n``NAME``\n  Name of period instances on which to apply those captures.\n\n  A ``--period`` option in the same command line must define this name.\n\n``BEGINCAPTURES``\n  Comma-delimited list of event fields to capture when the beginning\n  expression of the period definition named ``NAME`` is matched.\n\n``ENDCAPTURES``\n  Comma-delimited list of event fields to capture when the ending\n  expression of the period definition named ``NAME`` is matched.\n\n  If this part is omitted, there are no end captures.\n\nThe format of ``BEGINCAPTURES`` and ``ENDCAPTURES`` is a comma-delimited\nlist of tokens having this format::\n\n    [ CAPTURENAME = ] EVT.FIELD\n\nor::\n\n    [ CAPTURENAME = ] EVT.$name\n\n``CAPTURENAME``\n  Custom name for this capture. The syntax of this name is the same as\n  a C identifier.\n\n  If this part is omitted, the literal expression used for ``EVT.FIELD``\n  is used.\n\n``EVT`` and ``FIELD``\n  See `Matching expression`_.\n\n\nPeriod select and aggregate parameters\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWith ``lttng-periodlog``, it is possible to see the list of periods in the\ncontext of their parent. By specifying the ``--aggregate-by``, the lines in\nthe log present on the same line the timerange of the period specified by\nthe ``--select`` argument at the timerange of the parent period that contains\nit. In ``lttng-periodstats`` and ``lttng-periodfreq``, these two flags are\nused as filter to limit the output to only the relevant periods. If omitted,\nall existing combinations of parent/child statistics and frequency\ndistributions are output.\n\n\nGrouping\n~~~~~~~~\n\nWhen fields are captured during the period analyses, it is possible to compute\nthe statistics and frequency distribution grouped by values of the these\nfields, instead of globally for the trace. The format is::\n\n    --group-by \"PERIODNAME.CAPTURENAME[, PERIODNAME.CAPTURENAME]\"\n\nIf multiple values are passed, the analysis outputs one list of tables\n(statistics and/or frequency distribution) for each unique combination of the\nfield's values.\n\nFor example, if we track the ``open`` system call and we are interested in the\naverage duration of this call by filename, we only have to capture the filename\nfield and group the results by ``open.filename``.\n\n\nExamples\n........\n\nBegin captures only::\n\n    switch\n    : $evt.next_tid,\n      name = $evt.$name,\n      msg_id = $parent.$begin.$evt.id\n\nBegin and end captures::\n\n    hello\n    : beginning = $evt.$ctx.begin_ts,\n      $evt.received_bytes\n    : $evt.send_bytes,\n      $evt.$name,\n      begin = $begin.$evt.$ctx.begin_ts\n      end = $evt.$ctx.end_ts\n\nTop scheduling latency (delay between ``sched_waking(tid=$TID)`` and ``sched_switch(next_tid=$TID)``)\nwith recording of the procname of the waker (dependant of the ``procname`` context in the trace),\npriority and target CPU:\n\n.. code-block:: bash\n\n   lttng-periodtop /path/to/trace \\\n       --period 'wake : $evt.$name == \"sched_waking\" : $evt.$name == \"sched_switch\" && $evt.next_tid == $begin.$evt.$payload.tid' \\\n       --period-capture 'wake : waker = $evt.procname, prio = $evt.prio : wakee = $evt.next_comm, cpu = $evt.cpu_id'\n\n::\n\n    Timerange: [2016-07-21 17:07:47.832234248, 2016-07-21 17:07:48.948152659]\n    Period top\n    Begin                End                   Duration (us) Name            Begin capture                       End capture\n    [17:07:47.835338581, 17:07:47.946834976]      111496.395 wake            waker = lttng-consumerd             wakee = kworker/0:2\n                                                                             prio = 20                           cpu = 0\n    [17:07:47.850409057, 17:07:47.946829256]       96420.199 wake            waker = swapper/2                   wakee = migration/0\n                                                                             prio = -100                         cpu = 0\n    [17:07:48.300313282, 17:07:48.300993892]         680.610 wake            waker = Xorg                        wakee = ibus-ui-gtk3\n                                                                             prio = 20                           cpu = 3\n    [17:07:48.300330060, 17:07:48.300920648]         590.588 wake            waker = Xorg                        wakee = ibus-x11\n                                                                             prio = 20                           cpu = 3\n\n\nLog of all the IRQ handled while a user-space process was running, capture the procname of the process interrupted, the name and number of the IRQ:\n\n.. code-block:: bash\n\n    lttng-periodlog /path/to/trace \\\n        --period 'switch : $evt.$name == \"sched_switch\" && $evt.next_tid != 0 : $evt.$name == \"sched_switch\" && $evt.prev_tid == $begin.$evt.next_tid && $evt.cpu_id == $begin.$evt.cpu_id' \\\n        --period 'irq(switch) : $evt.$name == \"irq_handler_entry\" && $evt.cpu_id == $parent.$begin.$evt.cpu_id : $evt.$name == \"irq_handler_exit\" && $evt.cpu_id == $begin.$evt.cpu_id' \\\n        --period-capture 'irq : name = $evt.name, irq = $evt.irq, current = $parent.$begin.$evt.next_comm'\n\n::\n\n    Period log\n    Begin                End                   Duration (us) Name            Begin capture                       End capture\n    [10:58:26.169238875, 10:58:26.169244920]           6.045 switch\n    [10:58:26.169598385, 10:58:26.169602967]           4.582 irq             name = ahci\n                                                                             irq = 41\n                                                                             current = lttng-consumerd\n    [10:58:26.169811553, 10:58:26.169816218]           4.665 irq             name = ahci\n                                                                             irq = 41\n                                                                             current = lttng-consumerd\n    [10:58:26.170025600, 10:58:26.170030197]           4.597 irq             name = ahci\n                                                                             irq = 41\n                                                                             current = lttng-consumerd\n    [10:58:26.169236842, 10:58:26.170105711]         868.869 switch\n\n\nLog of all the ``open`` system call periods aggregated by the ``sched_switch`` in which they occurred:\n\n.. code-block:: bash\n\n    lttng-periodlog /path/to/trace \\\n        --period 'switch : $evt.$name == \"sched_switch\" : $evt.$name == \"sched_switch\" && $begin.$evt.next_tid == $evt.prev_tid && $begin.$evt.cpu_id == $evt.cpu_id' \\\n        --period 'open(switch) : $evt.$name == \"syscall_entry_open\" && $parent.$begin.$evt.cpu_id == $evt.cpu_id : $evt.$name == \"syscall_exit_open\" && $begin.$evt.cpu_id == $evt.cpu_id' \\\n        --period-captures 'switch : comm = $evt.next_comm, cpu = $evt.cpu_id, tid = $evt.next_tid' \\\n        --period-captures 'open : filename = $evt.filename : fd = $evt.ret' \\\n        --select open\n        --aggregate-by switch\n\n::\n\n    Aggregated log\n    Aggregation of (open) by switch\n                                        Parent                                  |                                     |                           Durations (us)                        |\n    Begin                End                      Duration (us) Name            | Child name                    Count |        Min          Avg          Max         Stdev      Runtime | Parent captures\n    [10:58:26.222823677, 10:58:26.224039381]           1215.704 switch          | switch/open                       3 |      7.517        9.548       11.248        1.887        28.644 | switch.comm = bash, switch.cpu = 3, switch.tid = 12420\n    [10:58:26.856224058, 10:58:26.856589867]            365.809 switch          | switch/open                       1 |     77.620       77.620       77.620            ?        77.620 | switch.comm = ntpd, switch.cpu = 0, switch.tid = 11132\n    [10:58:27.000068031, 10:58:27.000954859]            886.828 switch          | switch/open                      15 |      9.224       16.126       37.190        6.681       241.894 | switch.comm = irqbalance, switch.cpu = 0, switch.tid = 1656\n    [10:58:27.225474282, 10:58:27.229160014]           3685.732 switch          | switch/open                      22 |      5.797        6.767        9.308        0.972       148.881 | switch.comm = bash, switch.cpu = 1, switch.tid = 12421\n\n\nStatistics about the memory allocation performed within an ``open`` system call\nwithin a single ``sched_switch`` (no blocking or preemption):\n\n.. code-block:: bash\n\n    lttng-periodstats /path/to/trace \\\n        --period 'switch : $evt.$name == \"sched_switch\" : $evt.$name == \"sched_switch\" && $begin.$evt.next_tid == $evt.prev_tid && $begin.$evt.cpu_id == $evt.cpu_id' \\\n        --period 'open(switch) : $evt.$name == \"syscall_entry_open\" && $parent.$begin.$evt.cpu_id == $evt.cpu_id : $evt.$name == \"syscall_exit_open\" && $begin.$evt.cpu_id == $evt.cpu_id' \\\n        --period 'alloc(open) : $evt.$name == \"kmem_cache_alloc\" && $parent.$begin.$evt.cpu_id == $evt.cpu_id : $evt.$name == \"kmem_cache_free\" && $evt.ptr == $begin.$evt.ptr' \\\n        --period-captures 'switch : comm = $evt.next_comm, cpu = $evt.cpu_id, tid = $evt.next_tid' \\\n        --period-captures 'open : filename = $evt.filename : fd = $evt.ret' \\\n        --period-captures 'alloc : ptr = $evt.ptr'\n\n::\n\n   Timerange: [2015-01-06 10:58:26.140545481, 2015-01-06 10:58:27.229358936]\n   Period tree:\n   switch\n   |-- open\n       |-- alloc\n\n   Period statistics (us)\n   Period                       Count           Min           Avg           Max         Stdev      Runtime\n   switch                         831         2.824      5233.363    172056.802     16197.531  4348924.614\n   switch/open                     41         5.797        12.123        77.620        12.076      497.039\n   switch/open/alloc               44         1.152        10.277        74.476        11.582      452.175\n\n   Per-parent period duration statistics (us)\n   With active children\n   Period                    Parent                              Min           Avg           Max         Stdev\n   switch/open               switch                           28.644       124.260       241.894        92.667\n   switch/open/alloc         switch                           24.036       113.044       229.713        87.827\n   switch/open/alloc         switch/open                       4.550        11.029        74.476        11.768\n\n   Per-parent duration ratio (%)\n   With active children\n   Period                    Parent                              Min           Avg           Max         Stdev\n   switch/open               switch                                2        13.723            27        12.421\n   switch/open/alloc         switch                                1        12.901            25        12.041\n   switch/open/alloc         switch/open                          76        88.146           115         7.529\n\n   Per-parent period count statistics\n   With active children\n   Period                    Parent                              Min           Avg           Max         Stdev\n   switch/open               switch                                1        10.250            22         9.979\n   switch/open/alloc         switch                                1        11.000            22        10.551\n   switch/open/alloc         switch/open                           1         1.073             2         0.264\n\n   Per-parent period duration statistics (us)\n   Globally\n   Period                    Parent                              Min           Avg           Max         Stdev\n   switch/open               switch                            0.000         0.598       241.894        10.251\n   switch/open/alloc         switch                            0.000         0.544       229.713         9.443\n   switch/open/alloc         switch/open                       4.550        11.029        74.476        11.768\n\n   Per-parent duration ratio (%)\n   Globally\n   Period                    Parent                              Min           Avg           Max         Stdev\n   switch/open               switch                                0         0.066            27         1.209\n   switch/open/alloc         switch                                0         0.062            25         1.150\n   switch/open/alloc         switch/open                          76        88.146           115         7.529\n\n   Per-parent period count statistics\n   Globally\n   Period                    Parent                              Min           Avg           Max         Stdev\n   switch/open               switch                                0         0.049            22         0.929\n   switch/open/alloc         switch                                0         0.053            22         0.991\n   switch/open/alloc         switch/open                           1         1.073             2         0.264\n\n\nThese statistics can also be scoped by value of the FD returned by the ``open``\nsystem, by appending ``--group-by \"open.fd\"`` to the previous command line.\nThat way previous tables will be output for each value of FD returned, so it\nis possible to observe the behaviour based on the parameters of a system call.\n\nUsing the ``lttng-periodfreq`` or the ``--freq`` parameter, these tables can\nalso be presented as frequency distributions.\n\n\nProgress options\n----------------\n\nIf the `progressbar <https://pypi.python.org/pypi/progressbar/>`_\noptional dependency is installed, a progress bar is available to\nindicate the progress of the analysis.\n\nBy default, the progress bar is based on the current event's timestamp.\n\nProgress options are:\n\n.. list-table:: Available progress command-line options\n   :header-rows: 1\n\n   * - Command-line option\n     - Description\n   * - ``--no-progress``\n     - Disable the progress bar.\n   * - ``--progress-use-size``\n     - Use the approximate event size instead of the current event's\n       timestamp to estimate the progress value.\n\n\nMachine interface\n-----------------\n\nIf you want to display LTTng analyses results in a custom viewer,\nyou can use the JSON-based LTTng analyses machine interface (LAMI).\nEach command in the previous table has its corresponding LAMI version\nwith the ``-mi`` suffix. For example, the LAMI version of\n``lttng-cputop`` is ``lttng-cputop-mi``.\n\nThis version of LTTng analyses conforms to\n`LAMI 1.0 <http://lttng.org/files/lami/lami-1.0.1.html>`_.\n\n\n\n\n\nExamples\n========\n\nThis section shows a few examples of using some LTTng analyses.\n\nI/O\n---\n\nPartition and system call latency statistics\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: bash\n\n   lttng-iolatencystats /path/to/trace\n\n::\n\n    Timerange: [2015-01-06 10:58:26.140545481, 2015-01-06 10:58:27.229358936]\n    Syscalls latency statistics (usec):\n    Type                    Count            Min        Average            Max          Stdev\n    -----------------------------------------------------------------------------------------\n    Open                       45          5.562         13.835         77.683         15.263\n    Read                      109          0.316          5.774         62.569          9.277\n    Write                     101          0.256          7.060         48.531          8.555\n    Sync                      207         19.384         40.664        160.188         21.201\n\n    Disk latency statistics (usec):\n    Name                    Count            Min        Average            Max          Stdev\n    -----------------------------------------------------------------------------------------\n    dm-0                      108          0.001          0.004          0.007          1.306\n\n\nI/O request latency distribution\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: bash\n\n   lttng-iolatencyfreq /path/to/trace\n\n::\n\n    Timerange: [2015-01-06 10:58:26.140545481, 2015-01-06 10:58:27.229358936]\n    Open latency distribution (usec)\n    ###############################################################################\n     5.562 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  25\n     9.168 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                            4\n    12.774 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                 8\n    16.380 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                              3\n    19.986 \u2588\u2588\u2588\u2588\u2588                                                                 2\n    23.592                                                                       0\n    27.198                                                                       0\n    30.804                                                                       0\n    34.410 \u2588\u2588                                                                    1\n    38.016                                                                       0\n    41.623                                                                       0\n    45.229                                                                       0\n    48.835                                                                       0\n    52.441                                                                       0\n    56.047                                                                       0\n    59.653                                                                       0\n    63.259                                                                       0\n    66.865                                                                       0\n    70.471                                                                       0\n    74.077 \u2588\u2588\u2588\u2588\u2588                                                                 2\n\n\nTop system call latencies\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: bash\n\n   lttng-iolatencytop /path/to/trace --limit=3 --minsize=2\n\n::\n\n    Checking the trace for lost events...\n    Timerange: [2015-01-15 12:18:37.216484041, 2015-01-15 12:18:53.821580313]\n    Top open syscall latencies (usec)\n    Begin               End                  Name             Duration (usec)         Size  Proc                     PID      Filename\n    [12:18:50.432950815,12:18:50.870648568]  open                  437697.753          N/A  apache2                  31517    /var/lib/php5/sess_0ifir2hangm8ggaljdphl9o5b5 (fd=13)\n    [12:18:52.946080165,12:18:52.946132278]  open                      52.113          N/A  apache2                  31588    /var/lib/php5/sess_mr9045p1k55vin1h0vg7rhgd63 (fd=13)\n    [12:18:46.800846035,12:18:46.800874916]  open                      28.881          N/A  apache2                  31591    /var/lib/php5/sess_r7c12pccfvjtas15g3j69u14h0 (fd=13)\n    [12:18:51.389797604,12:18:51.389824426]  open                      26.822          N/A  apache2                  31520    /var/lib/php5/sess_4sdb1rtjkhb78sabnoj8gpbl00 (fd=13)\n\n    Top read syscall latencies (usec)\n    Begin               End                  Name             Duration (usec)         Size  Proc                     PID      Filename\n    [12:18:37.256073107,12:18:37.256555967]  read                     482.860       7.00 B  bash                     10237    unknown (origin not found) (fd=3)\n    [12:18:52.000209798,12:18:52.000252304]  read                      42.506      1.00 KB  irqbalance               1337     /proc/interrupts (fd=3)\n    [12:18:37.256559439,12:18:37.256601615]  read                      42.176       5.00 B  bash                     10237    unknown (origin not found) (fd=3)\n    [12:18:42.000281918,12:18:42.000320016]  read                      38.098      1.00 KB  irqbalance               1337     /proc/interrupts (fd=3)\n\n    Top write syscall latencies (usec)\n    Begin               End                  Name             Duration (usec)         Size  Proc                     PID      Filename\n    [12:18:49.913241516,12:18:49.915908862]  write                   2667.346      95.00 B  apache2                  31584    /var/log/apache2/access.log (fd=8)\n    [12:18:37.472823631,12:18:37.472859836]  writev                    36.205     21.97 KB  apache2                  31544    unknown (origin not found) (fd=12)\n    [12:18:37.991578372,12:18:37.991612724]  writev                    34.352     21.97 KB  apache2                  31589    unknown (origin not found) (fd=12)\n    [12:18:39.547778549,12:18:39.547812515]  writev                    33.966     21.97 KB  apache2                  31584    unknown (origin not found) (fd=12)\n\n    Top sync syscall latencies (usec)\n    Begin               End                  Name             Duration (usec)         Size  Proc                     PID      Filename\n    [12:18:50.162776739,12:18:51.157522361]  sync                  994745.622          N/A  sync                     22791    None (fd=None)\n    [12:18:37.227867532,12:18:37.232289687]  sync_file_range         4422.155          N/A  lttng-consumerd          19964    /home/julien/lttng-traces/analysis-20150115-120942/kernel/metadata (fd=32)\n    [12:18:37.238076585,12:18:37.239012027]  sync_file_range          935.442          N/A  lttng-consumerd          19964    /home/julien/lttng-traces/analysis-20150115-120942/kernel/metadata (fd=32)\n    [12:18:37.220974711,12:18:37.221647124]  sync_file_range          672.413          N/A  lttng-consumerd          19964    /home/julien/lttng-traces/analysis-20150115-120942/kernel/metadata (fd=32)\n\n\nI/O operations log\n~~~~~~~~~~~~~~~~~~\n\n.. code-block:: bash\n\n   lttng-iolog /path/to/trace\n\n::\n\n    [10:58:26.221618530,10:58:26.221620659]  write                      2.129       8.00 B  /usr/bin/x-term          11793    anon_inode:[eventfd] (fd=5)\n    [10:58:26.221623609,10:58:26.221628055]  read                       4.446      50.00 B  /usr/bin/x-term          11793    /dev/ptmx (fd=24)\n    [10:58:26.221638929,10:58:26.221640008]  write                      1.079       8.00 B  /usr/bin/x-term          11793    anon_inode:[eventfd] (fd=5)\n    [10:58:26.221676232,10:58:26.221677385]  read                       1.153       8.00 B  /usr/bin/x-term          11793    anon_inode:[eventfd] (fd=5)\n    [10:58:26.223401804,10:58:26.223411683]  open                       9.879          N/A  sleep                    12420    /etc/ld.so.cache (fd=3)\n    [10:58:26.223448060,10:58:26.223455577]  open                       7.517          N/A  sleep                    12420    /lib/x86_64-linux-gnu/libc.so.6 (fd=3)\n    [10:58:26.223456522,10:58:26.223458898]  read                       2.376     832.00 B  sleep                    12420    /lib/x86_64-linux-gnu/libc.so.6 (fd=3)\n    [10:58:26.223918068,10:58:26.223929316]  open                      11.248          N/A  sleep                    12420     (fd=3)\n    [10:58:26.231881565,10:58:26.231895970]  writev                    14.405      16.00 B  /usr/bin/x-term          11793    socket:[45650] (fd=4)\n    [10:58:26.231979636,10:58:26.231988446]  recvmsg                    8.810      16.00 B  Xorg                     1827     socket:[47480] (fd=38)\n\n\nI/O usage top\n~~~~~~~~~~~~~\n\n.. code-block:: bash\n\n   lttng-iousagetop /path/to/trace\n\n::\n\n    Timerange: [2014-10-07 16:36:00.733214969, 2014-10-07 16:36:18.804584183]\n    Per-process I/O Read\n    ###############################################################################\n    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588    16.00 MB lttng-consumerd (2619)         0 B  file   4.00 B  net  16.00 MB unknown\n    \u2588\u2588\u2588\u2588\u2588                                                  1.72 MB lttng-consumerd (2619)         0 B  file      0 B  net   1.72 MB unknown\n    \u2588                                                    398.13 KB postgres (4219)           121.05 KB file 277.07 KB net   8.00 B  unknown\n                                                         256.09 KB postgres (1348)                0 B  file 255.97 KB net 117.00 B  unknown\n                                                         204.81 KB postgres (4218)           204.81 KB file      0 B  net      0 B  unknown\n                                                         123.77 KB postgres (4220)           117.50 KB file   6.26 KB net   8.00 B  unknown\n    Per-process I/O Write\n    ###############################################################################\n    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588    16.00 MB lttng-consumerd (2619)         0 B  file   8.00 MB net   8.00 MB unknown\n    \u2588\u2588\u2588\u2588\u2588\u2588                                                 2.20 MB postgres (4219)             2.00 MB file 202.23 KB net      0 B  unknown\n    \u2588\u2588\u2588\u2588\u2588                                                  1.73 MB lttng-consumerd (2619)         0 B  file 887.73 KB net 882.58 KB unknown\n    \u2588\u2588                                                   726.33 KB postgres (1165)             8.00 KB file   6.33 KB net 712.00 KB unknown\n                                                         158.69 KB postgres (1168)           158.69 KB file      0 B  net      0 B  unknown\n                                                          80.66 KB postgres (1348)                0 B  file  80.66 KB net      0 B  unknown\n    Files Read\n    ###############################################################################\n    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588     8.00 MB anon_inode:[lttng_stream] (lttng-consumerd) 'fd 32 in lttng-consumerd (2619)'\n    \u2588\u2588\u2588\u2588\u2588                                                834.41 KB base/16384/pg_internal.init 'fd 7 in postgres (4219)', 'fd 7 in postgres (4220)', 'fd 7 in postgres (4221)', 'fd 7 in postgres (4222)', 'fd 7 in postgres (4223)', 'fd 7 in postgres (4224)', 'fd 7 in postgres (4225)', 'fd 7 in postgres (4226)'\n    \u2588                                                    256.09 KB socket:[8893] (postgres) 'fd 9 in postgres (1348)'\n    \u2588                                                    174.69 KB pg_stat_tmp/pgstat.stat 'fd 9 in postgres (4218)', 'fd 9 in postgres (1167)'\n                                                         109.48 KB global/pg_internal.init 'fd 7 in postgres (4218)', 'fd 7 in postgres (4219)', 'fd 7 in postgres (4220)', 'fd 7 in postgres (4221)', 'fd 7 in postgres (4222)', 'fd 7 in postgres (4223)', 'fd 7 in postgres (4224)', 'fd 7 in postgres (4225)', 'fd 7 in postgres (4226)'\n                                                         104.30 KB base/11951/pg_internal.init 'fd 7 in postgres (4218)'\n                                                          12.85 KB socket (lttng-sessiond) 'fd 30 in lttng-sessiond (384)'\n                                                           4.50 KB global/pg_filenode.map 'fd 7 in postgres (4218)', 'fd 7 in postgres (4219)', 'fd 7 in postgres (4220)', 'fd 7 in postgres (4221)', 'fd 7 in postgres (4222)', 'fd 7 in postgres (4223)', 'fd 7 in postgres (4224)', 'fd 7 in postgres (4225)', 'fd 7 in postgres (4226)'\n                                                           4.16 KB socket (postgres) 'fd 9 in postgres (4226)'\n                                                           4.00 KB /proc/interrupts 'fd 3 in irqbalance (1104)'\n    Files Write\n    ###############################################################################\n    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588     8.00 MB socket:[56371] (lttng-consumerd) 'fd 30 in lttng-consumerd (2619)'\n    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588      8.00 MB pipe:[53306] (lttng-consumerd) 'fd 12 in lttng-consumerd (2619)'\n    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                             1.76 MB pg_xlog/00000001000000000000000B 'fd 31 in postgres (4219)'\n    \u2588\u2588\u2588\u2588\u2588                                                887.82 KB socket:[56369] (lttng-consumerd) 'fd 26 in lttng-consumerd (2619)'\n    \u2588\u2588\u2588\u2588\u2588                                                882.58 KB pipe:[53309] (lttng-consumerd) 'fd 18 in lttng-consumerd (2619)'\n                                                         160.00 KB /var/lib/postgresql/9.1/main/base/16384/16602 'fd 14 in postgres (1165)'\n                                                         158.69 KB pg_stat_tmp/pgstat.tmp 'fd 3 in postgres (1168)'\n                                                         144.00 KB /var/lib/postgresql/9.1/main/base/16384/16613 'fd 12 in postgres (1165)'\n                                                          88.00 KB /var/lib/postgresql/9.1/main/base/16384/16609 'fd 11 in postgres (1165)'\n                                                          78.28 KB socket:[8893] (postgres) 'fd 9 in postgres (1348)'\n    Block I/O Read\n    ###############################################################################\n    Block I/O Write\n    ###############################################################################\n    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588     1.76 MB postgres (pid=4219)\n    \u2588\u2588\u2588\u2588                                                 160.00 KB postgres (pid=1168)\n    \u2588\u2588                                                   100.00 KB kworker/u8:0 (pid=1540)\n    \u2588\u2588                                                    96.00 KB jbd2/vda1-8 (pid=257)\n    \u2588                                                     40.00 KB postgres (pid=1166)\n                                                           8.00 KB kworker/u9:0 (pid=4197)\n                                                           4.00 KB kworker/u9:2 (pid=1381)\n    Disk nr_sector\n    ###############################################################################\n    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  4416.00 sectors  vda1\n    Disk nr_requests\n    ###############################################################################\n    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  177.00 requests  vda1\n    Disk request time/sector\n    ###############################################################################\n    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588   0.01 ms  vda1\n    Network recv_bytes\n    ###############################################################################\n    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  739.50 KB eth0\n    \u2588\u2588\u2588\u2588\u2588                                                    80.27 KB lo\n    Network sent_bytes\n    ###############################################################################\n    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  9.36 MB eth0\n\n\nSystem calls\n--------\n\nPer-TID and global system call statistics\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: bash\n\n   lttng-syscallstats /path/to/trace\n\n::\n\n    Timerange: [2015-01-15 12:18:37.216484041, 2015-01-15 12:18:53.821580313]\n    Per-TID syscalls statistics (usec)\n    find (22785)                          Count            Min        Average          Max      Stdev  Return values\n     - getdents                           14240          0.380        364.301    43372.450   1629.390  {'success': 14240}\n     - close                              14236          0.233          0.506        4.932      0.217  {'success': 14236}\n     - fchdir                             14231          0.252          0.407        5.769      0.117  {'success': 14231}\n     - open                                7123          0.779          2.321       12.697      0.936  {'success': 7119, 'ENOENT': 4}\n     - newfstatat                          7118          1.457        143.562    28103.532   1410.281  {'success': 7118}\n     - openat                              7118          1.525          2.411        9.107      0.771  {'success': 7118}\n     - newfstat                            7117          0.272          0.654        8.707      0.248  {'success': 7117}\n     - write                                573          0.298          0.715        8.584      0.391  {'success': 573}\n     - brk                                   27          0.615          5.768       30.792      7.830  {'success': 27}\n     - rt_sigaction                          22          0.227          0.283        0.589      0.098  {'success': 22}\n     - mmap                                  12          1.116          2.116        3.597      0.762  {'success': 12}\n     - mprotect                               6          1.185          2.235        3.923      1.148  {'success': 6}\n     - read                                   5          0.925          2.101        6.300      2.351  {'success': 5}\n     - ioctl                                  4          0.342          1.151        2.280      0.873  {'success': 2, 'ENOTTY': 2}\n     - access                                 4          1.166          2.530        4.202      1.527  {'ENOENT': 4}\n     - rt_sigprocmask                         3          0.325          0.570        0.979      0.357  {'success': 3}\n     - dup2                                   2          0.250          0.562        0.874          ?  {'success': 2}\n     - munmap                                 2          3.006          5.399        7.792          ?  {'success': 2}\n     - execve                                 1       7277.974       7277.974     7277.974          ?  {'success': 1}\n     - setpgid                                1          0.945          0.945        0.945          ?  {'success': 1}\n     - fcntl                                  1              ?          0.000        0.000          ?  {}\n     - newuname                               1          1.240          1.240        1.240          ?  {'success': 1}\n    Total:                                71847\n    -----------------------------------------------------------------------------------------------------------------\n    apache2 (31517)                       Count            Min        Average          Max      Stdev  Return values\n     - fcntl                                192              ?          0.000        0.000          ?  {}\n     - newfstat                             156          0.237          0.484        1.102      0.222  {'success': 156}\n     - read                                 144          0.307          1.602       16.307      1.698  {'success': 117, 'EAGAIN': 27}\n     - access                                96          0.705          1.580        3.364      0.670  {'success': 12, 'ENOENT': 84}\n     - newlstat                              84          0.459          0.738        1.456      0.186  {'success': 63, 'ENOENT': 21}\n     - newstat                               74          0.735          2.266       11.212      1.772  {'success': 50, 'ENOENT': 24}\n     - lseek                                 72          0.317          0.522        0.915      0.112  {'success': 72}\n     - close                                 39          0.471          0.615        0.867      0.069  {'success': 39}\n     - open                                  36          2.219      12162.689   437697.753  72948.868  {'success': 36}\n     - getcwd                                28          0.287          0.701        1.331      0.277  {'success': 28}\n     - poll                                  27          1.080       1139.669     2851.163    856.723  {'success': 27}\n     - times                                 24          0.765          0.956        1.327      0.107  {'success': 24}\n     - setitimer                             24          0.499          5.848       16.668      4.041  {'success': 24}\n     - write                                 24          5.467          6.784       16.827      2.459  {'success': 24}\n     - writev                                24         10.241         17.645       29.817      5.116  {'success': 24}\n     - mmap                                  15          3.060          3.482        4.406      0.317  {'success': 15}\n     - munmap                                15          2.944          3.502        4.154      0.427  {'success': 15}\n     - brk                                   12          0.738          4.579       13.795      4.437  {'success': 12}\n     - chdir                                 12          0.989          1.600        2.353      0.385  {'success': 12}\n     - flock                                  6          0.906          1.282        2.043      0.423  {'success': 6}\n     - rt_sigaction                           6          0.530          0.725        1.123      0.217  {'success': 6}\n     - pwrite64                               6          1.262          1.430        1.692      0.143  {'success': 6}\n     - rt_sigprocmask                         6          0.539          0.650        0.976      0.162  {'success': 6}\n     - shutdown                               3          7.323          8.487       10.281      1.576  {'success': 3}\n     - getsockname                            3          1.015          1.228        1.585      0.311  {'success': 3}\n     - accept4                                3    5174453.611    3450157.282  5176018.235          ?  {'success': 2}\n    Total:                                 1131\n\n\nInterrupts\n----------\n\nHardware and software interrupt statistics\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: bash\n\n   lttng-irqstats /path/to/trace\n\n::\n\n    Timerange: [2014-03-11 16:05:41.314824752, 2014-03-11 16:05:45.041994298]\n    Hard IRQ                                             Duration (us)\n                           count          min          avg          max        stdev\n    ----------------------------------------------------------------------------------|\n    1:  <i8042>               30       10.901       45.500       64.510       18.447  |\n    42: <ahci>               259        3.203        7.863       21.426        3.183  |\n    43: <eth0>                 2        3.859        3.976        4.093        0.165  |\n    44: <iwlwifi>             92        0.300        3.995        6.542        2.181  |\n\n    Soft IRQ                                             Duration (us)                                        Raise latency (us)\n                           count          min          avg          max        stdev  |  count          min          avg          max        stdev\n    ----------------------------------------------------------------------------------|------------------------------------------------------------\n    1:  <TIMER_SOFTIRQ>      495        0.202       21.058       51.060       11.047  |     53        2.141       11.217       20.005        7.233\n    3:  <NET_RX_SOFTIRQ>      14        0.133        9.177       32.774       10.483  |     14        0.763        3.703       10.902        3.448\n    4:  <BLOCK_SOFTIRQ>      257        5.981       29.064      125.862       15.891  |    257        0.891        3.104       15.054        2.046\n    6:  <TASKLET_SOFTIRQ>     26        0.309        1.198        1.748        0.329  |     26        9.636       39.222       51.430       11.246\n    7:  <SCHED_SOFTIRQ>      299        1.185       14.768       90.465       15.992  |    298        1.286       31.387       61.700       11.866\n    9:  <RCU_SOFTIRQ>        338        0.592        3.387       13.745        1.356  |    147        2.480       29.299       64.453       14.286\n\n\nInterrupt handler duration frequency distribution\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: bash\n\n   lttng-irqfreq --timerange=[16:05:42,16:05:45] --irq=44 --stats /path/to/trace\n\n::\n\n    Timerange: [2014-03-11 16:05:42.042034570, 2014-03-11 16:05:44.998914297]\n    Hard IRQ                                             Duration (us)\n                           count          min          avg          max        stdev\n    ----------------------------------------------------------------------------------|\n    44: <iwlwifi>             72        0.300        4.018        6.542        2.164  |\n    Frequency distribution iwlwifi (44)\n    ###############################################################################\n    0.300 \u2588\u2588\u2588\u2588\u2588                                                                 1.00\n    0.612 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588        12.00\n    0.924 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                  4.00\n    1.236 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                            2.00\n    1.548                                                                       0.00\n    1.861 \u2588\u2588\u2588\u2588\u2588                                                                 1.00\n    2.173                                                                       0.00\n    2.485 \u2588\u2588\u2588\u2588\u2588                                                                 1.00\n    2.797 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                            5.00\n    3.109 \u2588\u2588\u2588\u2588\u2588                                                                 1.00\n    3.421 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                       3.00\n    3.733                                                                       0.00\n    4.045 \u2588\u2588\u2588\u2588\u2588                                                                 1.00\n    4.357 \u2588\u2588\u2588\u2588\u2588                                                                 1.00\n    4.669 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                            2.00\n    4.981 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                            2.00\n    5.294 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                             8.00\n    5.606 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  13.00\n    5.918 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588        12.00\n    6.230 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                       3.00\n\n\nCommunity\n=========\n\nLTTng analyses is part of the `LTTng <http://lttng.org/>`_ project\nand shares its community.\n\nWe hope you have fun trying this project and please remember it is a\nwork in progress; feedback, bug reports and improvement ideas are always\nwelcome!\n\n.. list-table:: LTTng analyses project's communication channels\n   :header-rows: 1\n\n   * - Item\n     - Location\n     - Notes\n   * - Mailing list\n     - `lttng-dev <https://lists.lttng.org/cgi-bin/mailman/listinfo/lttng-dev>`_\n       (``lttng-dev@lists.lttng.org``)\n     - Preferably, use the ``[lttng-analyses]`` subject prefix\n   * - IRC\n     - ``#lttng`` on the OFTC network\n     -\n   * - Code contribution\n     - Create a new GitHub\n       `pull request <https://github.com/lttng/lttng-analyses/pulls>`_\n     -\n   * - Bug reporting\n     - Create a new GitHub\n       `issue <https://github.com/lttng/lttng-analyses/issues/new>`_\n     -\n   * - Continuous integration\n     - `lttng-analyses_master_build item\n       <https://ci.lttng.org/job/lttng-analyses_master_build/>`_ on\n       LTTng's CI and `lttng/lttng-analyses project\n       <https://travis-ci.org/lttng/lttng-analyses>`_\n       on Travis CI\n     -\n   * - Blog\n     - The `LTTng blog <http://lttng.org/blog/>`_ contains some posts\n       about LTTng analyses\n     -", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lttng/lttng-analyses", "keywords": "lttng tracing", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "lttnganalyses", "package_url": "https://pypi.org/project/lttnganalyses/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/lttnganalyses/", "project_urls": {"Homepage": "https://github.com/lttng/lttng-analyses"}, "release_url": "https://pypi.org/project/lttnganalyses/0.6.1/", "requires_dist": ["pyparsing", "progressbar; extra == 'progressbar'"], "requires_python": null, "summary": "LTTng analyses", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            LTTng analyses<br>**************<br><br>.. image:: https://img.shields.io/pypi/v/lttnganalyses.svg?label=Latest%20version<br>   :target: https://pypi.python.org/pypi/lttnganalyses<br>   :alt: Latest version released on PyPi<br><br>.. image:: https://travis-ci.org/lttng/lttng-analyses.svg?branch=master&amp;label=Travis%20CI%20build<br>   :target: https://travis-ci.org/lttng/lttng-analyses<br>   :alt: Status of Travis CI<br><br>.. image:: https://img.shields.io/jenkins/s/https/ci.lttng.org/lttng-analyses_master_build.svg?label=LTTng%20CI%20build<br>   :target: https://ci.lttng.org/job/lttng-analyses_master_build<br>   :alt: Status of LTTng CI<br><br>The **LTTng analyses** are a set of various executable analyses to<br>extract and visualize monitoring data and metrics from<br>`LTTng &lt;http://lttng.org/&gt;`_ kernel traces on the command line.<br><br>As opposed to other \"live\" diagnostic or monitoring solutions, this<br>approach is based on the following workflow:<br><br>#. Record your system's activity with LTTng, a low-overhead tracer.<br>#. Do whatever it takes for your problem to occur.<br>#. Diagnose your problem's cause **offline** (when tracing is stopped).<br><br>This solution allows you to target problems that are hard to find and<br>to \"dig\" until the root cause is found.<br><br>**Current limitations**:<br><br>- The LTTng analyses can be quite slow to execute. There are a number of<br>  places where they could be optimized, but using the Python interpreter<br>  seems to be an important impediment.<br><br>  This project is regarded by its authors as a testing ground to<br>  experiment analysis features, user interfaces, and usability in<br>  general. It is not considered ready to analyze long traces.<br><br>**Contents**:<br><br>.. contents::<br>   :local:<br>   :depth: 3<br>   :backlinks: none<br><br><br>Install LTTng analyses<br>======================<br><br>.. NOTE::<br><br>   The version 2.0 of `Trace Compass &lt;http://tracecompass.org/&gt;`_<br>   requires LTTng analyses 0.4: Trace Compass 2.0 is not compatible<br>   with LTTng analyses 0.5 and after.<br><br>   In this case, we suggest that you install LTTng analyses from the<br>   ``stable-0.4`` branch of the project's Git repository (see<br>   `Install from the Git repository`_). You can also<br>   `download &lt;https://github.com/lttng/lttng-analyses/releases&gt;`_ the<br>   latest 0.4 release tarball and follow the<br>   `Install from a release tarball`_ procedure.<br><br><br>Required dependencies<br>---------------------<br><br>- `Python &lt;https://www.python.org/&gt;`_ \u2265 3.4<br>- `setuptools &lt;https://pypi.python.org/pypi/setuptools&gt;`_<br>- `pyparsing &lt;http://pyparsing.wikispaces.com/&gt;`_ \u2265 2.0.0<br>- `Babeltrace &lt;http://diamon.org/babeltrace/&gt;`_ \u2265 1.2 with Python<br>  bindings (``--enable-python-bindings`` when building from source)<br><br><br>Optional dependencies<br>---------------------<br><br>- `LTTng &lt;http://lttng.org/&gt;`_ \u2265 2.5: to use the<br>  ``lttng-analyses-record`` script and to trace the system in<br>  general<br>- `termcolor &lt;https://pypi.python.org/pypi/termcolor/&gt;`_: color<br>  support<br>- `progressbar &lt;https://pypi.python.org/pypi/progressbar/&gt;`_:<br>  terminal progress bar support (this is not required for the<br>  machine interface's progress indication feature)<br><br><br>Install from PyPI (online repository)<br>-------------------------------------<br><br>To install the latest LTTng analyses release on your system from<br>`PyPI &lt;https://pypi.python.org/pypi/lttnganalyses&gt;`_:<br><br>#. Install the required dependencies.<br>#. **Optional**: Install the optional dependencies.<br>#. Make sure ``pip`` for Python 3 is installed on your system. The<br>   package is named ``python3-pip`` on most distributions<br>   (``python-pip`` on Arch Linux).<br>#. Use ``pip3`` to install LTTng analyses:<br><br>   .. code-block:: bash<br><br>      sudo pip3 install --upgrade lttnganalyses<br><br>   Note that you can also install LTTng analyses locally, only for<br>   your user:<br><br>   .. code-block:: bash<br><br>      pip3 install --user --upgrade lttnganalyses<br><br>   Files are installed in ``~/.local``, therefore ``~/.local/bin`` must<br>   be part of your ``PATH`` environment variable for the LTTng analyses<br>   to be launchable.<br><br><br>Install from a release tarball<br>------------------------------<br><br>To install a specific LTTng analyses release (tarball) on your system:<br><br>#. Install the required dependencies.<br>#. **Optional**: Install the optional dependencies.<br>#. `Download &lt;https://github.com/lttng/lttng-analyses/releases&gt;`_ and<br>   extract the desired release tarball.<br>#. Use ``setup.py`` to install LTTng analyses:<br><br>   .. code-block:: bash<br><br>      sudo ./setup.py install<br><br><br>Install from the Git repository<br>-------------------------------<br><br>To install LTTng analyses from a specific branch or tag of the<br>project's Git repository:<br><br>#. Install the required dependencies.<br>#. **Optional**: Install the optional dependencies.<br>#. Make sure ``pip`` for Python 3 is installed on your system. The<br>   package is named ``python3-pip`` on most distributions<br>   (``python-pip`` on Arch Linux).<br>#. Use ``pip3`` to install LTTng analyses:<br><br>   .. code-block:: bash<br><br>      sudo pip3 install --upgrade git+git://github.com/lttng/lttng-analyses.git@master<br><br>   Replace ``master`` with the desired branch or tag name to install<br>   in the previous URL.<br><br>   Note that you can also install LTTng analyses locally, only for<br>   your user:<br><br>   .. code-block:: bash<br><br>      sudo pip3 install --user --upgrade git+git://github.com/lttng/lttng-analyses.git@master<br><br>   Files are installed in ``~/.local``, therefore ``~/.local/bin`` must<br>   be part of your ``PATH`` environment variable for the LTTng analyses<br>   to be launchable.<br><br><br>Install on Ubuntu<br>-----------------<br><br>To install LTTng analyses on Ubuntu \u2265 12.04:<br><br>#. Add the *LTTng Latest Stable* PPA repository:<br><br>   .. code-block:: bash<br><br>      sudo apt-get install -y software-properties-common<br>      sudo apt-add-repository -y ppa:lttng/ppa<br>      sudo apt-get update<br><br>   Replace ``software-properties-common`` with<br>   ``python-software-properties`` on Ubuntu 12.04.<br>#. Install the required dependencies:<br><br>   .. code-block:: bash<br><br>      sudo apt-get install -y babeltrace<br>      sudo apt-get install -y python3-babeltrace<br>      sudo apt-get install -y python3-setuptools<br><br>   On Ubuntu &gt; 12.04:<br><br>   .. code-block:: bash<br><br>      sudo apt-get install -y python3-pyparsing<br><br>   On Ubuntu 12.04:<br><br>   .. code-block:: bash<br><br>      sudo pip3 install --upgrade pyparsing<br>#. **Optional**: Install the optional dependencies:<br><br>   .. code-block:: bash<br><br>      sudo apt-get install -y lttng-tools<br>      sudo apt-get install -y lttng-modules-dkms<br>      sudo apt-get install -y python3-progressbar<br>      sudo apt-get install -y python3-termcolor<br>#. Install LTTng analyses:<br><br>   .. code-block:: bash<br><br>      sudo apt-get install -y python3-lttnganalyses<br><br><br>Install on Debian \"sid\"<br>-----------------------<br><br>To install LTTng analyses on Debian \"sid\":<br><br>#. Install the required dependencies:<br><br>   .. code-block:: bash<br><br>      sudo apt-get install -y babeltrace<br>      sudo apt-get install -y python3-babeltrace<br>      sudo apt-get install -y python3-setuptools<br>      sudo apt-get install -y python3-pyparsing<br>#. **Optional**: Install the optional dependencies:<br><br>   .. code-block:: bash<br><br>      sudo apt-get install -y lttng-tools<br>      sudo apt-get install -y lttng-modules-dkms<br>      sudo apt-get install -y python3-progressbar<br>      sudo apt-get install -y python3-termcolor<br>#. Install LTTng analyses:<br><br>   .. code-block:: bash<br><br>      sudo apt-get install -y python3-lttnganalyses<br><br><br>Record a trace<br>==============<br><br>This section is a quick reminder of how to record an LTTng kernel<br>trace. See LTTng's `quick start guide<br>&lt;http://lttng.org/docs/v2.7/#doc-getting-started&gt;`_ to familiarize<br>with LTTng.<br><br><br>Automatic<br>---------<br><br>LTTng analyses ships with a handy (installed) script,<br>``lttng-analyses-record``, which automates<br>the steps to record a kernel trace with the events required by the<br>analyses.<br><br>To use ``lttng-analyses-record``:<br><br>#. Launch the installed script:<br><br>   .. code-block:: bash<br><br>      lttng-analyses-record<br>#. Do whatever it takes for your problem to occur.<br>#. When you are done recording, press Ctrl+C where the script is<br>   running.<br><br><br>Manual<br>------<br><br>To record an LTTng kernel trace suitable for the LTTng analyses:<br><br>#. Create a tracing session:<br><br>   .. code-block:: bash<br><br>      sudo lttng create<br>#. Create a channel with a large sub-buffer size:<br><br>   .. code-block:: bash<br><br>      sudo lttng enable-channel --kernel chan --subbuf-size=8M<br>#. Create event rules to capture the needed events:<br><br>   .. code-block:: bash<br><br>      sudo lttng enable-event --kernel --channel=chan block_bio_backmerge<br>      sudo lttng enable-event --kernel --channel=chan block_bio_remap<br>      sudo lttng enable-event --kernel --channel=chan block_rq_complete<br>      sudo lttng enable-event --kernel --channel=chan block_rq_issue<br>      sudo lttng enable-event --kernel --channel=chan irq_handler_entry<br>      sudo lttng enable-event --kernel --channel=chan irq_handler_exit<br>      sudo lttng enable-event --kernel --channel=chan irq_softirq_entry<br>      sudo lttng enable-event --kernel --channel=chan irq_softirq_exit<br>      sudo lttng enable-event --kernel --channel=chan irq_softirq_raise<br>      sudo lttng enable-event --kernel --channel=chan kmem_mm_page_alloc<br>      sudo lttng enable-event --kernel --channel=chan kmem_mm_page_free<br>      sudo lttng enable-event --kernel --channel=chan lttng_statedump_block_device<br>      sudo lttng enable-event --kernel --channel=chan lttng_statedump_file_descriptor<br>      sudo lttng enable-event --kernel --channel=chan lttng_statedump_process_state<br>      sudo lttng enable-event --kernel --channel=chan mm_page_alloc<br>      sudo lttng enable-event --kernel --channel=chan mm_page_free<br>      sudo lttng enable-event --kernel --channel=chan net_dev_xmit<br>      sudo lttng enable-event --kernel --channel=chan netif_receive_skb<br>      sudo lttng enable-event --kernel --channel=chan sched_pi_setprio<br>      sudo lttng enable-event --kernel --channel=chan sched_process_exec<br>      sudo lttng enable-event --kernel --channel=chan sched_process_fork<br>      sudo lttng enable-event --kernel --channel=chan sched_switch<br>      sudo lttng enable-event --kernel --channel=chan sched_wakeup<br>      sudo lttng enable-event --kernel --channel=chan sched_waking<br>      sudo lttng enable-event --kernel --channel=chan softirq_entry<br>      sudo lttng enable-event --kernel --channel=chan softirq_exit<br>      sudo lttng enable-event --kernel --channel=chan softirq_raise<br>      sudo lttng enable-event --kernel --channel=chan --syscall --all<br>#. Start recording:<br><br>   .. code-block:: bash<br><br>      sudo lttng start<br>#. Do whatever it takes for your problem to occur.<br>#. Stop recording and destroy the tracing session to free its<br>   resources:<br><br>   .. code-block:: bash<br><br>      sudo lttng stop<br>      sudo lttng destroy<br><br><br>See the `LTTng Documentation &lt;http://lttng.org/docs/&gt;`_ for other<br>use cases, like sending the trace data over the network instead of<br>recording trace files on the target's file system.<br><br><br>Run an LTTng analysis<br>=====================<br><br>The **LTTng analyses** are a set of various command-line<br>analyses. Each analysis accepts the path to a recorded trace<br>(see `Record a trace`_) as its argument, as well as various command-line<br>options to control the analysis and its output.<br><br>Many command-line options are common to all the analyses, so that you<br>can filter by timerange, process name, process ID, minimum and maximum<br>values, and the rest. Also note that the reported timestamps can<br>optionally be expressed in the GMT time zone.<br><br>Each analysis is installed as an executable starting with the<br>``lttng-`` prefix.<br><br>.. list-table:: Available LTTng analyses<br>   :header-rows: 1<br><br>   * - Command<br>     - Description<br>   * - ``lttng-cputop``<br>     - Per-TID, per-CPU, and total top CPU usage.<br>   * - ``lttng-iolatencyfreq``<br>     - I/O request latency distribution.<br>   * - ``lttng-iolatencystats``<br>     - Partition and system call latency statistics.<br>   * - ``lttng-iolatencytop``<br>     - Top system call latencies.<br>   * - ``lttng-iolog``<br>     - I/O operations log.<br>   * - ``lttng-iousagetop``<br>     - I/O usage top.<br>   * - ``lttng-irqfreq``<br>     - Interrupt handler duration frequency distribution.<br>   * - ``lttng-irqlog``<br>     - Interrupt log.<br>   * - ``lttng-irqstats``<br>     - Hardware and software interrupt statistics.<br>   * - ``lttng-memtop``<br>     - Per-TID top allocated/freed memory.<br>   * - ``lttng-schedfreq``<br>     - Scheduling latency frequency distribution.<br>   * - ``lttng-schedlog``<br>     - Scheduling top.<br>   * - ``lttng-schedstats``<br>     - Scheduling latency stats.<br>   * - ``lttng-schedtop``<br>     - Scheduling top.<br>   * - ``lttng-periodlog``<br>     - Period log.<br>   * - ``lttng-periodstats``<br>     - Period duration stats.<br>   * - ``lttng-periodtop``<br>     - Period duration top.<br>   * - ``lttng-periodfreq``<br>     - Period duration frequency distribution.<br>   * - ``lttng-syscallstats``<br>     - Per-TID and global system call statistics.<br><br>Use the ``--help`` option of any command to list the descriptions<br>of the possible command-line options.<br><br>.. NOTE::<br><br>   You can set the ``LTTNG_ANALYSES_DEBUG`` environment variable to<br>   ``1`` when you launch an analysis to enable a debug output. You can<br>   also use the general ``--debug`` option.<br><br><br>Filtering options<br>-----------------<br><br>Depending on the analysis, filter options are available. The complete<br>list of filter options is:<br><br>.. list-table:: Available filtering command-line options<br>   :header-rows: 1<br><br>   * - Command-line option<br>     - Description<br>   * - ``--begin``<br>     - Trace time at which to begin the analysis.<br><br>       Format: ``HH:MM:SS[.NNNNNNNNN]``.<br>   * - ``--cpu``<br>     - Comma-delimited list of CPU IDs for which to display the<br>       results.<br>   * - ``--end``<br>     - Trace time at which to end the analysis.<br><br>       Format: ``HH:MM:SS[.NNNNNNNNN]``.<br>   * - ``--irq``<br>     - List of hardware IRQ numbers for which to display the results.<br>   * - ``--limit``<br>     - Maximum number of output rows per table. This option is useful<br>       for \"top\" analyses, like ``lttng-cputop``.<br>   * - ``--min``<br>     - Minimum duration (\u00b5s) to keep in results.<br>   * - ``--minsize``<br>     - Minimum I/O operation size (B) to keep in results.<br>   * - ``--max``<br>     - Maximum duration (\u00b5s) to keep in results.<br>   * - ``--maxsize``<br>     - Maximum I/O operation size (B) to keep in results.<br>   * - ``--procname``<br>     - Comma-delimited list of process names for which to display<br>       the results.<br>   * - ``--softirq``<br>     - List of software IRQ numbers for which to display the results.<br>   * - ``--tid``<br>     - Comma-delimited list of thread IDs for which to display the<br>       results.<br><br><br>Period options<br>--------------<br><br>LTTng analyses feature a powerful \"period engine\". A *period* is an<br>interval which begins and ends under specific conditions. When the<br>analysis results are displayed, they are isolated for the periods<br>that were opened and closed during the process.<br><br>A period can have a parent. If it's the case, then its parent needs<br>to exist for the period to begin at all. This tree structure of<br>periods is useful to keep a form of custom user state during the<br>generic kernel analysis.<br><br>.. ATTENTION::<br><br>   The ``--period`` and ``--period-captures`` options's arguments<br>   include characters that are considered special by most shells,<br>   like ``$``, ``*``, and ``&amp;``.<br><br>   Make sure to always **single-quote** those arguments when running<br>   the LTTng analyses on the command line.<br><br><br>Period definition<br>~~~~~~~~~~~~~~~~~<br><br>You can define one or more periods on the command line, when launching<br>an analysis, with the ``--period`` option. This option's argument<br>accepts the following form (content within square brackets is optional)::<br><br>    [ NAME [ (PARENT) ] ] : BEGINEXPR [ : ENDEXPR ]<br><br>``NAME``<br>  Optional name of the period definition. All periods opened from this<br>  definition have this name.<br><br>  The syntax of this name is the same as a C identifier.<br><br>``PARENT``<br>  Optional name of a *previously defined* period which acts as the<br>  parent period definition of this definition.<br><br>  ``NAME`` must be set for ``PARENT`` to be set.<br><br>``BEGINEXPR``<br>  Matching expression which a given event must match in order for an<br>  actual period to be instantiated by this definition.<br><br>``ENDEXPR``<br>  Matching expression which a given event must match in order for an<br>  instance of this definition to be closed.<br><br>  If this part is omitted, ``BEGINEXPR`` is used for the ending<br>  expression too.<br><br><br>Matching expression<br>...................<br><br>A matching expression is a C-like logical expression. It supports<br>nesting expressions with ``(`` and ``)``, as well as the ``&amp;&amp;`` (logical<br>*AND*), ``||`` (logical *OR*), and ``!`` (logical *NOT*) operators. The<br>precedence of those operators is the same as in the C language.<br><br>The atomic operands in those logical expressions are comparisons. For<br>the following comparison syntaxes, consider that:<br><br>- ``EVT`` indicates an event source. The available event sources are:<br><br>  ``$evt``<br>    Current event.<br><br>  ``$begin.$evt``<br>    In ``BEGINEXPR``: current event (same as ``$evt``).<br><br>    In ``ENDEXPR``: event which, for this period instance, was matched<br>    when ``BEGINEXPR`` was evaluated.<br><br>  ``$parent.$begin.$evt``<br>    Event which, for the parent period instance of this period instance,<br>    was matched when ``BEGINEXPR`` of the parent was evaluated.<br>- ``FIELD`` indicates an event field source. The available event field<br>  sources are:<br><br>  ``NAME`` (direct field name)<br>    Automatic scope: try to find the field named ``NAME`` in the dynamic<br>    scopes in this order:<br><br>    #. Event payload<br>    #. Event context<br>    #. Event header<br>    #. Stream event context<br>    #. Packet context<br>    #. Packet header<br><br>  ``$payload.NAME``<br>    Event payload field named ``NAME``.<br><br>  ``$ctx.NAME``<br>    Event context field named ``NAME``.<br><br>  ``$header.NAME``<br>    Event header field named ``NAME``.<br><br>  ``$stream_ctx.NAME``<br>    Stream event context field named ``NAME``.<br><br>  ``$pkt_ctx.NAME``<br>    Packet context field named ``NAME``.<br><br>  ``$pkt_header.NAME``<br>    Packet header field named ``NAME``.<br>- ``VALUE`` indicates one of:<br><br>  - A constant, decimal number. This can be an integer or a real<br>    number, positive or negative, and supports the ``e`` scientific<br>    notation.<br><br>    Examples: ``23``, ``-18.28``, ``7.2e9``.<br>  - A double-quoted literal string. ``\"`` and ``\\`` can be escaped<br>    with ``\\``.<br><br>    Examples: ``\"hello, world!\"``, ``\"here's another \\\"quoted\\\" string\"``.<br>  - An event field, that is, ``EVT.FIELD``, considering the replacements<br>    described above.<br><br>- ``NUMVALUE`` indicates one of:<br><br>  - A constant, decimal number. This can be an integer or a real<br>    number, positive or negative, and supports the ``e`` scientific<br>    notation.<br><br>    Examples: ``23``, ``-18.28``, ``7.2e9``.<br>  - An event field, that is, ``EVT.FIELD``, considering the replacements<br>    described above.<br><br>.. list-table:: Available comparison syntaxes for matching expressions<br>   :header-rows: 1<br><br>   * - Comparison syntax<br>     - Description<br>   * - #. ``EVT.$name == \"NAME\"``<br>       #. ``EVT.$name != \"NAME\"``<br>       #. ``EVT.$name =* \"PATTERN\"``<br>     - Name matching:<br><br>       #. Name of event source ``EVT`` is equal to ``NAME``.<br>       #. Name of event source ``EVT`` is not equal to ``NAME``.<br>       #. Name of event source ``EVT`` satisfies the globbing pattern<br>          ``PATTERN``<br>          (see `fnmatch &lt;https://docs.python.org/3/library/fnmatch.html&gt;`_).<br>   * - #. ``EVT.FIELD == VALUE``<br>       #. ``EVT.FIELD != VALUE``<br>       #. ``EVT.FIELD &lt; NUMVALUE``<br>       #. ``EVT.FIELD &lt;= NUMVALUE``<br>       #. ``EVT.FIELD &gt; NUMVALUE``<br>       #. ``EVT.FIELD &gt;= NUMVALUE``<br>       #. ``EVT.FIELD =* \"PATTERN\"``<br>     - Value matching:<br><br>       #. The value of the field ``EVT.FIELD`` is equal<br>          to the value ``VALUE``.<br>       #. The value of the field ``EVT.FIELD`` is not<br>          equal to the value ``VALUE``.<br>       #. The value of the field ``EVT.FIELD`` is lesser<br>          than the value ``NUMVALUE``.<br>       #. The value of the field ``EVT.FIELD`` is lesser<br>          than or equal to the value ``NUMVALUE``.<br>       #. The value of the field ``EVT.FIELD`` is greater<br>          than the value ``NUMVALUE``.<br>       #. The value of the field ``EVT.FIELD`` is greater<br>          than or equal to the value ``NUMVALUE``.<br>       #. The value of the field ``EVT.FIELD`` satisfies<br>          the globbing pattern ``PATTERN``<br>          (see `fnmatch &lt;https://docs.python.org/3/library/fnmatch.html&gt;`_).<br><br>In any case, if ``EVT.FIELD`` does not target an existing field, the<br>comparison including it fails. Also, string fields cannot be compared to<br>number values (constant or fields).<br><br><br>Examples<br>........<br><br>- Create a period instance named ``switch`` when:<br><br>  - The current event name is ``sched_switch``.<br><br>  End this period instance when:<br><br>  - The current event name is ``sched_switch``.<br><br>  Period definition::<br><br>      switch : $evt.$name == \"sched_switch\"<br><br>- Create a period instance named ``switch`` when:<br><br>  - The current event name is ``sched_switch`` *AND*<br>  - The current event's ``next_tid`` field is *NOT* equal to 0.<br><br>  End this period instance when:<br><br>  - The current event name is ``sched_switch`` *AND*<br>  - The current event's ``prev_tid`` field is equal to<br>    the ``next_tid`` field of the matched event in the begin expression *AND*<br>  - The current event's ``cpu_id`` field is equal to<br>    the ``cpu_id`` field of the matched event in the begin expression.<br><br>  Period definition::<br><br>      switch<br>      : $evt.$name == \"sched_switch\" &amp;&amp;<br>        $evt.next_tid != 0<br>      : $evt.$name == \"sched_switch\" &amp;&amp;<br>        $evt.prev_tid == $begin.$evt.next_tid &amp;&amp;<br>        $evt.cpu_id == $begin.$evt.cpu_id<br><br>- Create a period instance named ``irq`` when:<br><br>  - A parent period instance named ``switch`` is currently opened.<br>  - The current event name satisfies the ``irq_*_entry`` globbing<br>    pattern *AND*<br>  - The current event's ``cpu_id`` field is equal to the ``cpu_id``<br>    field of the matched event in the begin expression of the parent<br>    period instance.<br><br>  End this period instance when:<br><br>  - The current event name is ``irq_handler_exit`` *AND*<br>  - The current event's ``cpu_id`` field is equal to<br>    the ``cpu_id`` field of the matched event in the begin expression.<br><br>  Period definition::<br><br>      irq(switch)<br>      : $evt.$name =* \"irq_*_entry\" &amp;&amp;<br>        $evt.cpu_id == $parent.$begin.$evt.cpu_id<br>      : $evt.$name == \"irq_handler_exit\" &amp;&amp;<br>        $evt.cpu_id == $begin.$evt.cpu_id<br><br>- Create a period instance named ``hello`` when:<br><br>  - The current event name satisfies the ``hello*`` globbing pattern,<br>    but excludes ``hello world``.<br><br>  End this period instance when:<br><br>  - The current event name is the same as the name of the matched event<br>    in the begin expression *AND*<br>  - The current event's ``theid`` header field is lesser than or equal<br>    to 231.<br><br>  Period definition::<br><br>      hello<br>      : $evt.$name =* \"hello*\" &amp;&amp;<br>        $evt.$name != \"hello world\"<br>      : $evt.$name == $begin.$evt.$name &amp;&amp;<br>        $evt.$header.theid &lt;= 231<br><br><br>Period captures<br>~~~~~~~~~~~~~~~<br><br>When a period instance begins or ends, the analysis can capture the<br>current values of specific event fields and display them in its<br>results.<br><br>You can set period captures with the ``--period-captures`` command-line<br>option. This option's argument accepts the following form<br>(content within square brackets is optional)::<br><br>    NAME : BEGINCAPTURES [ : ENDCAPTURES ]<br><br>``NAME``<br>  Name of period instances on which to apply those captures.<br><br>  A ``--period`` option in the same command line must define this name.<br><br>``BEGINCAPTURES``<br>  Comma-delimited list of event fields to capture when the beginning<br>  expression of the period definition named ``NAME`` is matched.<br><br>``ENDCAPTURES``<br>  Comma-delimited list of event fields to capture when the ending<br>  expression of the period definition named ``NAME`` is matched.<br><br>  If this part is omitted, there are no end captures.<br><br>The format of ``BEGINCAPTURES`` and ``ENDCAPTURES`` is a comma-delimited<br>list of tokens having this format::<br><br>    [ CAPTURENAME = ] EVT.FIELD<br><br>or::<br><br>    [ CAPTURENAME = ] EVT.$name<br><br>``CAPTURENAME``<br>  Custom name for this capture. The syntax of this name is the same as<br>  a C identifier.<br><br>  If this part is omitted, the literal expression used for ``EVT.FIELD``<br>  is used.<br><br>``EVT`` and ``FIELD``<br>  See `Matching expression`_.<br><br><br>Period select and aggregate parameters<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>With ``lttng-periodlog``, it is possible to see the list of periods in the<br>context of their parent. By specifying the ``--aggregate-by``, the lines in<br>the log present on the same line the timerange of the period specified by<br>the ``--select`` argument at the timerange of the parent period that contains<br>it. In ``lttng-periodstats`` and ``lttng-periodfreq``, these two flags are<br>used as filter to limit the output to only the relevant periods. If omitted,<br>all existing combinations of parent/child statistics and frequency<br>distributions are output.<br><br><br>Grouping<br>~~~~~~~~<br><br>When fields are captured during the period analyses, it is possible to compute<br>the statistics and frequency distribution grouped by values of the these<br>fields, instead of globally for the trace. The format is::<br><br>    --group-by \"PERIODNAME.CAPTURENAME[, PERIODNAME.CAPTURENAME]\"<br><br>If multiple values are passed, the analysis outputs one list of tables<br>(statistics and/or frequency distribution) for each unique combination of the<br>field's values.<br><br>For example, if we track the ``open`` system call and we are interested in the<br>average duration of this call by filename, we only have to capture the filename<br>field and group the results by ``open.filename``.<br><br><br>Examples<br>........<br><br>Begin captures only::<br><br>    switch<br>    : $evt.next_tid,<br>      name = $evt.$name,<br>      msg_id = $parent.$begin.$evt.id<br><br>Begin and end captures::<br><br>    hello<br>    : beginning = $evt.$ctx.begin_ts,<br>      $evt.received_bytes<br>    : $evt.send_bytes,<br>      $evt.$name,<br>      begin = $begin.$evt.$ctx.begin_ts<br>      end = $evt.$ctx.end_ts<br><br>Top scheduling latency (delay between ``sched_waking(tid=$TID)`` and ``sched_switch(next_tid=$TID)``)<br>with recording of the procname of the waker (dependant of the ``procname`` context in the trace),<br>priority and target CPU:<br><br>.. code-block:: bash<br><br>   lttng-periodtop /path/to/trace \\<br>       --period 'wake : $evt.$name == \"sched_waking\" : $evt.$name == \"sched_switch\" &amp;&amp; $evt.next_tid == $begin.$evt.$payload.tid' \\<br>       --period-capture 'wake : waker = $evt.procname, prio = $evt.prio : wakee = $evt.next_comm, cpu = $evt.cpu_id'<br><br>::<br><br>    Timerange: [2016-07-21 17:07:47.832234248, 2016-07-21 17:07:48.948152659]<br>    Period top<br>    Begin                End                   Duration (us) Name            Begin capture                       End capture<br>    [17:07:47.835338581, 17:07:47.946834976]      111496.395 wake            waker = lttng-consumerd             wakee = kworker/0:2<br>                                                                             prio = 20                           cpu = 0<br>    [17:07:47.850409057, 17:07:47.946829256]       96420.199 wake            waker = swapper/2                   wakee = migration/0<br>                                                                             prio = -100                         cpu = 0<br>    [17:07:48.300313282, 17:07:48.300993892]         680.610 wake            waker = Xorg                        wakee = ibus-ui-gtk3<br>                                                                             prio = 20                           cpu = 3<br>    [17:07:48.300330060, 17:07:48.300920648]         590.588 wake            waker = Xorg                        wakee = ibus-x11<br>                                                                             prio = 20                           cpu = 3<br><br><br>Log of all the IRQ handled while a user-space process was running, capture the procname of the process interrupted, the name and number of the IRQ:<br><br>.. code-block:: bash<br><br>    lttng-periodlog /path/to/trace \\<br>        --period 'switch : $evt.$name == \"sched_switch\" &amp;&amp; $evt.next_tid != 0 : $evt.$name == \"sched_switch\" &amp;&amp; $evt.prev_tid == $begin.$evt.next_tid &amp;&amp; $evt.cpu_id == $begin.$evt.cpu_id' \\<br>        --period 'irq(switch) : $evt.$name == \"irq_handler_entry\" &amp;&amp; $evt.cpu_id == $parent.$begin.$evt.cpu_id : $evt.$name == \"irq_handler_exit\" &amp;&amp; $evt.cpu_id == $begin.$evt.cpu_id' \\<br>        --period-capture 'irq : name = $evt.name, irq = $evt.irq, current = $parent.$begin.$evt.next_comm'<br><br>::<br><br>    Period log<br>    Begin                End                   Duration (us) Name            Begin capture                       End capture<br>    [10:58:26.169238875, 10:58:26.169244920]           6.045 switch<br>    [10:58:26.169598385, 10:58:26.169602967]           4.582 irq             name = ahci<br>                                                                             irq = 41<br>                                                                             current = lttng-consumerd<br>    [10:58:26.169811553, 10:58:26.169816218]           4.665 irq             name = ahci<br>                                                                             irq = 41<br>                                                                             current = lttng-consumerd<br>    [10:58:26.170025600, 10:58:26.170030197]           4.597 irq             name = ahci<br>                                                                             irq = 41<br>                                                                             current = lttng-consumerd<br>    [10:58:26.169236842, 10:58:26.170105711]         868.869 switch<br><br><br>Log of all the ``open`` system call periods aggregated by the ``sched_switch`` in which they occurred:<br><br>.. code-block:: bash<br><br>    lttng-periodlog /path/to/trace \\<br>        --period 'switch : $evt.$name == \"sched_switch\" : $evt.$name == \"sched_switch\" &amp;&amp; $begin.$evt.next_tid == $evt.prev_tid &amp;&amp; $begin.$evt.cpu_id == $evt.cpu_id' \\<br>        --period 'open(switch) : $evt.$name == \"syscall_entry_open\" &amp;&amp; $parent.$begin.$evt.cpu_id == $evt.cpu_id : $evt.$name == \"syscall_exit_open\" &amp;&amp; $begin.$evt.cpu_id == $evt.cpu_id' \\<br>        --period-captures 'switch : comm = $evt.next_comm, cpu = $evt.cpu_id, tid = $evt.next_tid' \\<br>        --period-captures 'open : filename = $evt.filename : fd = $evt.ret' \\<br>        --select open<br>        --aggregate-by switch<br><br>::<br><br>    Aggregated log<br>    Aggregation of (open) by switch<br>                                        Parent                                  |                                     |                           Durations (us)                        |<br>    Begin                End                      Duration (us) Name            | Child name                    Count |        Min          Avg          Max         Stdev      Runtime | Parent captures<br>    [10:58:26.222823677, 10:58:26.224039381]           1215.704 switch          | switch/open                       3 |      7.517        9.548       11.248        1.887        28.644 | switch.comm = bash, switch.cpu = 3, switch.tid = 12420<br>    [10:58:26.856224058, 10:58:26.856589867]            365.809 switch          | switch/open                       1 |     77.620       77.620       77.620            ?        77.620 | switch.comm = ntpd, switch.cpu = 0, switch.tid = 11132<br>    [10:58:27.000068031, 10:58:27.000954859]            886.828 switch          | switch/open                      15 |      9.224       16.126       37.190        6.681       241.894 | switch.comm = irqbalance, switch.cpu = 0, switch.tid = 1656<br>    [10:58:27.225474282, 10:58:27.229160014]           3685.732 switch          | switch/open                      22 |      5.797        6.767        9.308        0.972       148.881 | switch.comm = bash, switch.cpu = 1, switch.tid = 12421<br><br><br>Statistics about the memory allocation performed within an ``open`` system call<br>within a single ``sched_switch`` (no blocking or preemption):<br><br>.. code-block:: bash<br><br>    lttng-periodstats /path/to/trace \\<br>        --period 'switch : $evt.$name == \"sched_switch\" : $evt.$name == \"sched_switch\" &amp;&amp; $begin.$evt.next_tid == $evt.prev_tid &amp;&amp; $begin.$evt.cpu_id == $evt.cpu_id' \\<br>        --period 'open(switch) : $evt.$name == \"syscall_entry_open\" &amp;&amp; $parent.$begin.$evt.cpu_id == $evt.cpu_id : $evt.$name == \"syscall_exit_open\" &amp;&amp; $begin.$evt.cpu_id == $evt.cpu_id' \\<br>        --period 'alloc(open) : $evt.$name == \"kmem_cache_alloc\" &amp;&amp; $parent.$begin.$evt.cpu_id == $evt.cpu_id : $evt.$name == \"kmem_cache_free\" &amp;&amp; $evt.ptr == $begin.$evt.ptr' \\<br>        --period-captures 'switch : comm = $evt.next_comm, cpu = $evt.cpu_id, tid = $evt.next_tid' \\<br>        --period-captures 'open : filename = $evt.filename : fd = $evt.ret' \\<br>        --period-captures 'alloc : ptr = $evt.ptr'<br><br>::<br><br>   Timerange: [2015-01-06 10:58:26.140545481, 2015-01-06 10:58:27.229358936]<br>   Period tree:<br>   switch<br>   |-- open<br>       |-- alloc<br><br>   Period statistics (us)<br>   Period                       Count           Min           Avg           Max         Stdev      Runtime<br>   switch                         831         2.824      5233.363    172056.802     16197.531  4348924.614<br>   switch/open                     41         5.797        12.123        77.620        12.076      497.039<br>   switch/open/alloc               44         1.152        10.277        74.476        11.582      452.175<br><br>   Per-parent period duration statistics (us)<br>   With active children<br>   Period                    Parent                              Min           Avg           Max         Stdev<br>   switch/open               switch                           28.644       124.260       241.894        92.667<br>   switch/open/alloc         switch                           24.036       113.044       229.713        87.827<br>   switch/open/alloc         switch/open                       4.550        11.029        74.476        11.768<br><br>   Per-parent duration ratio (%)<br>   With active children<br>   Period                    Parent                              Min           Avg           Max         Stdev<br>   switch/open               switch                                2        13.723            27        12.421<br>   switch/open/alloc         switch                                1        12.901            25        12.041<br>   switch/open/alloc         switch/open                          76        88.146           115         7.529<br><br>   Per-parent period count statistics<br>   With active children<br>   Period                    Parent                              Min           Avg           Max         Stdev<br>   switch/open               switch                                1        10.250            22         9.979<br>   switch/open/alloc         switch                                1        11.000            22        10.551<br>   switch/open/alloc         switch/open                           1         1.073             2         0.264<br><br>   Per-parent period duration statistics (us)<br>   Globally<br>   Period                    Parent                              Min           Avg           Max         Stdev<br>   switch/open               switch                            0.000         0.598       241.894        10.251<br>   switch/open/alloc         switch                            0.000         0.544       229.713         9.443<br>   switch/open/alloc         switch/open                       4.550        11.029        74.476        11.768<br><br>   Per-parent duration ratio (%)<br>   Globally<br>   Period                    Parent                              Min           Avg           Max         Stdev<br>   switch/open               switch                                0         0.066            27         1.209<br>   switch/open/alloc         switch                                0         0.062            25         1.150<br>   switch/open/alloc         switch/open                          76        88.146           115         7.529<br><br>   Per-parent period count statistics<br>   Globally<br>   Period                    Parent                              Min           Avg           Max         Stdev<br>   switch/open               switch                                0         0.049            22         0.929<br>   switch/open/alloc         switch                                0         0.053            22         0.991<br>   switch/open/alloc         switch/open                           1         1.073             2         0.264<br><br><br>These statistics can also be scoped by value of the FD returned by the ``open``<br>system, by appending ``--group-by \"open.fd\"`` to the previous command line.<br>That way previous tables will be output for each value of FD returned, so it<br>is possible to observe the behaviour based on the parameters of a system call.<br><br>Using the ``lttng-periodfreq`` or the ``--freq`` parameter, these tables can<br>also be presented as frequency distributions.<br><br><br>Progress options<br>----------------<br><br>If the `progressbar &lt;https://pypi.python.org/pypi/progressbar/&gt;`_<br>optional dependency is installed, a progress bar is available to<br>indicate the progress of the analysis.<br><br>By default, the progress bar is based on the current event's timestamp.<br><br>Progress options are:<br><br>.. list-table:: Available progress command-line options<br>   :header-rows: 1<br><br>   * - Command-line option<br>     - Description<br>   * - ``--no-progress``<br>     - Disable the progress bar.<br>   * - ``--progress-use-size``<br>     - Use the approximate event size instead of the current event's<br>       timestamp to estimate the progress value.<br><br><br>Machine interface<br>-----------------<br><br>If you want to display LTTng analyses results in a custom viewer,<br>you can use the JSON-based LTTng analyses machine interface (LAMI).<br>Each command in the previous table has its corresponding LAMI version<br>with the ``-mi`` suffix. For example, the LAMI version of<br>``lttng-cputop`` is ``lttng-cputop-mi``.<br><br>This version of LTTng analyses conforms to<br>`LAMI 1.0 &lt;http://lttng.org/files/lami/lami-1.0.1.html&gt;`_.<br><br><br><br><br><br>Examples<br>========<br><br>This section shows a few examples of using some LTTng analyses.<br><br>I/O<br>---<br><br>Partition and system call latency statistics<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>.. code-block:: bash<br><br>   lttng-iolatencystats /path/to/trace<br><br>::<br><br>    Timerange: [2015-01-06 10:58:26.140545481, 2015-01-06 10:58:27.229358936]<br>    Syscalls latency statistics (usec):<br>    Type                    Count            Min        Average            Max          Stdev<br>    -----------------------------------------------------------------------------------------<br>    Open                       45          5.562         13.835         77.683         15.263<br>    Read                      109          0.316          5.774         62.569          9.277<br>    Write                     101          0.256          7.060         48.531          8.555<br>    Sync                      207         19.384         40.664        160.188         21.201<br><br>    Disk latency statistics (usec):<br>    Name                    Count            Min        Average            Max          Stdev<br>    -----------------------------------------------------------------------------------------<br>    dm-0                      108          0.001          0.004          0.007          1.306<br><br><br>I/O request latency distribution<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>.. code-block:: bash<br><br>   lttng-iolatencyfreq /path/to/trace<br><br>::<br><br>    Timerange: [2015-01-06 10:58:26.140545481, 2015-01-06 10:58:27.229358936]<br>    Open latency distribution (usec)<br>    ###############################################################################<br>     5.562 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  25<br>     9.168 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                            4<br>    12.774 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                 8<br>    16.380 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                              3<br>    19.986 \u2588\u2588\u2588\u2588\u2588                                                                 2<br>    23.592                                                                       0<br>    27.198                                                                       0<br>    30.804                                                                       0<br>    34.410 \u2588\u2588                                                                    1<br>    38.016                                                                       0<br>    41.623                                                                       0<br>    45.229                                                                       0<br>    48.835                                                                       0<br>    52.441                                                                       0<br>    56.047                                                                       0<br>    59.653                                                                       0<br>    63.259                                                                       0<br>    66.865                                                                       0<br>    70.471                                                                       0<br>    74.077 \u2588\u2588\u2588\u2588\u2588                                                                 2<br><br><br>Top system call latencies<br>~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>.. code-block:: bash<br><br>   lttng-iolatencytop /path/to/trace --limit=3 --minsize=2<br><br>::<br><br>    Checking the trace for lost events...<br>    Timerange: [2015-01-15 12:18:37.216484041, 2015-01-15 12:18:53.821580313]<br>    Top open syscall latencies (usec)<br>    Begin               End                  Name             Duration (usec)         Size  Proc                     PID      Filename<br>    [12:18:50.432950815,12:18:50.870648568]  open                  437697.753          N/A  apache2                  31517    /var/lib/php5/sess_0ifir2hangm8ggaljdphl9o5b5 (fd=13)<br>    [12:18:52.946080165,12:18:52.946132278]  open                      52.113          N/A  apache2                  31588    /var/lib/php5/sess_mr9045p1k55vin1h0vg7rhgd63 (fd=13)<br>    [12:18:46.800846035,12:18:46.800874916]  open                      28.881          N/A  apache2                  31591    /var/lib/php5/sess_r7c12pccfvjtas15g3j69u14h0 (fd=13)<br>    [12:18:51.389797604,12:18:51.389824426]  open                      26.822          N/A  apache2                  31520    /var/lib/php5/sess_4sdb1rtjkhb78sabnoj8gpbl00 (fd=13)<br><br>    Top read syscall latencies (usec)<br>    Begin               End                  Name             Duration (usec)         Size  Proc                     PID      Filename<br>    [12:18:37.256073107,12:18:37.256555967]  read                     482.860       7.00 B  bash                     10237    unknown (origin not found) (fd=3)<br>    [12:18:52.000209798,12:18:52.000252304]  read                      42.506      1.00 KB  irqbalance               1337     /proc/interrupts (fd=3)<br>    [12:18:37.256559439,12:18:37.256601615]  read                      42.176       5.00 B  bash                     10237    unknown (origin not found) (fd=3)<br>    [12:18:42.000281918,12:18:42.000320016]  read                      38.098      1.00 KB  irqbalance               1337     /proc/interrupts (fd=3)<br><br>    Top write syscall latencies (usec)<br>    Begin               End                  Name             Duration (usec)         Size  Proc                     PID      Filename<br>    [12:18:49.913241516,12:18:49.915908862]  write                   2667.346      95.00 B  apache2                  31584    /var/log/apache2/access.log (fd=8)<br>    [12:18:37.472823631,12:18:37.472859836]  writev                    36.205     21.97 KB  apache2                  31544    unknown (origin not found) (fd=12)<br>    [12:18:37.991578372,12:18:37.991612724]  writev                    34.352     21.97 KB  apache2                  31589    unknown (origin not found) (fd=12)<br>    [12:18:39.547778549,12:18:39.547812515]  writev                    33.966     21.97 KB  apache2                  31584    unknown (origin not found) (fd=12)<br><br>    Top sync syscall latencies (usec)<br>    Begin               End                  Name             Duration (usec)         Size  Proc                     PID      Filename<br>    [12:18:50.162776739,12:18:51.157522361]  sync                  994745.622          N/A  sync                     22791    None (fd=None)<br>    [12:18:37.227867532,12:18:37.232289687]  sync_file_range         4422.155          N/A  lttng-consumerd          19964    /home/julien/lttng-traces/analysis-20150115-120942/kernel/metadata (fd=32)<br>    [12:18:37.238076585,12:18:37.239012027]  sync_file_range          935.442          N/A  lttng-consumerd          19964    /home/julien/lttng-traces/analysis-20150115-120942/kernel/metadata (fd=32)<br>    [12:18:37.220974711,12:18:37.221647124]  sync_file_range          672.413          N/A  lttng-consumerd          19964    /home/julien/lttng-traces/analysis-20150115-120942/kernel/metadata (fd=32)<br><br><br>I/O operations log<br>~~~~~~~~~~~~~~~~~~<br><br>.. code-block:: bash<br><br>   lttng-iolog /path/to/trace<br><br>::<br><br>    [10:58:26.221618530,10:58:26.221620659]  write                      2.129       8.00 B  /usr/bin/x-term          11793    anon_inode:[eventfd] (fd=5)<br>    [10:58:26.221623609,10:58:26.221628055]  read                       4.446      50.00 B  /usr/bin/x-term          11793    /dev/ptmx (fd=24)<br>    [10:58:26.221638929,10:58:26.221640008]  write                      1.079       8.00 B  /usr/bin/x-term          11793    anon_inode:[eventfd] (fd=5)<br>    [10:58:26.221676232,10:58:26.221677385]  read                       1.153       8.00 B  /usr/bin/x-term          11793    anon_inode:[eventfd] (fd=5)<br>    [10:58:26.223401804,10:58:26.223411683]  open                       9.879          N/A  sleep                    12420    /etc/ld.so.cache (fd=3)<br>    [10:58:26.223448060,10:58:26.223455577]  open                       7.517          N/A  sleep                    12420    /lib/x86_64-linux-gnu/libc.so.6 (fd=3)<br>    [10:58:26.223456522,10:58:26.223458898]  read                       2.376     832.00 B  sleep                    12420    /lib/x86_64-linux-gnu/libc.so.6 (fd=3)<br>    [10:58:26.223918068,10:58:26.223929316]  open                      11.248          N/A  sleep                    12420     (fd=3)<br>    [10:58:26.231881565,10:58:26.231895970]  writev                    14.405      16.00 B  /usr/bin/x-term          11793    socket:[45650] (fd=4)<br>    [10:58:26.231979636,10:58:26.231988446]  recvmsg                    8.810      16.00 B  Xorg                     1827     socket:[47480] (fd=38)<br><br><br>I/O usage top<br>~~~~~~~~~~~~~<br><br>.. code-block:: bash<br><br>   lttng-iousagetop /path/to/trace<br><br>::<br><br>    Timerange: [2014-10-07 16:36:00.733214969, 2014-10-07 16:36:18.804584183]<br>    Per-process I/O Read<br>    ###############################################################################<br>    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588    16.00 MB lttng-consumerd (2619)         0 B  file   4.00 B  net  16.00 MB unknown<br>    \u2588\u2588\u2588\u2588\u2588                                                  1.72 MB lttng-consumerd (2619)         0 B  file      0 B  net   1.72 MB unknown<br>    \u2588                                                    398.13 KB postgres (4219)           121.05 KB file 277.07 KB net   8.00 B  unknown<br>                                                         256.09 KB postgres (1348)                0 B  file 255.97 KB net 117.00 B  unknown<br>                                                         204.81 KB postgres (4218)           204.81 KB file      0 B  net      0 B  unknown<br>                                                         123.77 KB postgres (4220)           117.50 KB file   6.26 KB net   8.00 B  unknown<br>    Per-process I/O Write<br>    ###############################################################################<br>    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588    16.00 MB lttng-consumerd (2619)         0 B  file   8.00 MB net   8.00 MB unknown<br>    \u2588\u2588\u2588\u2588\u2588\u2588                                                 2.20 MB postgres (4219)             2.00 MB file 202.23 KB net      0 B  unknown<br>    \u2588\u2588\u2588\u2588\u2588                                                  1.73 MB lttng-consumerd (2619)         0 B  file 887.73 KB net 882.58 KB unknown<br>    \u2588\u2588                                                   726.33 KB postgres (1165)             8.00 KB file   6.33 KB net 712.00 KB unknown<br>                                                         158.69 KB postgres (1168)           158.69 KB file      0 B  net      0 B  unknown<br>                                                          80.66 KB postgres (1348)                0 B  file  80.66 KB net      0 B  unknown<br>    Files Read<br>    ###############################################################################<br>    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588     8.00 MB anon_inode:[lttng_stream] (lttng-consumerd) 'fd 32 in lttng-consumerd (2619)'<br>    \u2588\u2588\u2588\u2588\u2588                                                834.41 KB base/16384/pg_internal.init 'fd 7 in postgres (4219)', 'fd 7 in postgres (4220)', 'fd 7 in postgres (4221)', 'fd 7 in postgres (4222)', 'fd 7 in postgres (4223)', 'fd 7 in postgres (4224)', 'fd 7 in postgres (4225)', 'fd 7 in postgres (4226)'<br>    \u2588                                                    256.09 KB socket:[8893] (postgres) 'fd 9 in postgres (1348)'<br>    \u2588                                                    174.69 KB pg_stat_tmp/pgstat.stat 'fd 9 in postgres (4218)', 'fd 9 in postgres (1167)'<br>                                                         109.48 KB global/pg_internal.init 'fd 7 in postgres (4218)', 'fd 7 in postgres (4219)', 'fd 7 in postgres (4220)', 'fd 7 in postgres (4221)', 'fd 7 in postgres (4222)', 'fd 7 in postgres (4223)', 'fd 7 in postgres (4224)', 'fd 7 in postgres (4225)', 'fd 7 in postgres (4226)'<br>                                                         104.30 KB base/11951/pg_internal.init 'fd 7 in postgres (4218)'<br>                                                          12.85 KB socket (lttng-sessiond) 'fd 30 in lttng-sessiond (384)'<br>                                                           4.50 KB global/pg_filenode.map 'fd 7 in postgres (4218)', 'fd 7 in postgres (4219)', 'fd 7 in postgres (4220)', 'fd 7 in postgres (4221)', 'fd 7 in postgres (4222)', 'fd 7 in postgres (4223)', 'fd 7 in postgres (4224)', 'fd 7 in postgres (4225)', 'fd 7 in postgres (4226)'<br>                                                           4.16 KB socket (postgres) 'fd 9 in postgres (4226)'<br>                                                           4.00 KB /proc/interrupts 'fd 3 in irqbalance (1104)'<br>    Files Write<br>    ###############################################################################<br>    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588     8.00 MB socket:[56371] (lttng-consumerd) 'fd 30 in lttng-consumerd (2619)'<br>    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588      8.00 MB pipe:[53306] (lttng-consumerd) 'fd 12 in lttng-consumerd (2619)'<br>    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                             1.76 MB pg_xlog/00000001000000000000000B 'fd 31 in postgres (4219)'<br>    \u2588\u2588\u2588\u2588\u2588                                                887.82 KB socket:[56369] (lttng-consumerd) 'fd 26 in lttng-consumerd (2619)'<br>    \u2588\u2588\u2588\u2588\u2588                                                882.58 KB pipe:[53309] (lttng-consumerd) 'fd 18 in lttng-consumerd (2619)'<br>                                                         160.00 KB /var/lib/postgresql/9.1/main/base/16384/16602 'fd 14 in postgres (1165)'<br>                                                         158.69 KB pg_stat_tmp/pgstat.tmp 'fd 3 in postgres (1168)'<br>                                                         144.00 KB /var/lib/postgresql/9.1/main/base/16384/16613 'fd 12 in postgres (1165)'<br>                                                          88.00 KB /var/lib/postgresql/9.1/main/base/16384/16609 'fd 11 in postgres (1165)'<br>                                                          78.28 KB socket:[8893] (postgres) 'fd 9 in postgres (1348)'<br>    Block I/O Read<br>    ###############################################################################<br>    Block I/O Write<br>    ###############################################################################<br>    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588     1.76 MB postgres (pid=4219)<br>    \u2588\u2588\u2588\u2588                                                 160.00 KB postgres (pid=1168)<br>    \u2588\u2588                                                   100.00 KB kworker/u8:0 (pid=1540)<br>    \u2588\u2588                                                    96.00 KB jbd2/vda1-8 (pid=257)<br>    \u2588                                                     40.00 KB postgres (pid=1166)<br>                                                           8.00 KB kworker/u9:0 (pid=4197)<br>                                                           4.00 KB kworker/u9:2 (pid=1381)<br>    Disk nr_sector<br>    ###############################################################################<br>    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  4416.00 sectors  vda1<br>    Disk nr_requests<br>    ###############################################################################<br>    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  177.00 requests  vda1<br>    Disk request time/sector<br>    ###############################################################################<br>    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588   0.01 ms  vda1<br>    Network recv_bytes<br>    ###############################################################################<br>    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  739.50 KB eth0<br>    \u2588\u2588\u2588\u2588\u2588                                                    80.27 KB lo<br>    Network sent_bytes<br>    ###############################################################################<br>    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  9.36 MB eth0<br><br><br>System calls<br>--------<br><br>Per-TID and global system call statistics<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>.. code-block:: bash<br><br>   lttng-syscallstats /path/to/trace<br><br>::<br><br>    Timerange: [2015-01-15 12:18:37.216484041, 2015-01-15 12:18:53.821580313]<br>    Per-TID syscalls statistics (usec)<br>    find (22785)                          Count            Min        Average          Max      Stdev  Return values<br>     - getdents                           14240          0.380        364.301    43372.450   1629.390  {'success': 14240}<br>     - close                              14236          0.233          0.506        4.932      0.217  {'success': 14236}<br>     - fchdir                             14231          0.252          0.407        5.769      0.117  {'success': 14231}<br>     - open                                7123          0.779          2.321       12.697      0.936  {'success': 7119, 'ENOENT': 4}<br>     - newfstatat                          7118          1.457        143.562    28103.532   1410.281  {'success': 7118}<br>     - openat                              7118          1.525          2.411        9.107      0.771  {'success': 7118}<br>     - newfstat                            7117          0.272          0.654        8.707      0.248  {'success': 7117}<br>     - write                                573          0.298          0.715        8.584      0.391  {'success': 573}<br>     - brk                                   27          0.615          5.768       30.792      7.830  {'success': 27}<br>     - rt_sigaction                          22          0.227          0.283        0.589      0.098  {'success': 22}<br>     - mmap                                  12          1.116          2.116        3.597      0.762  {'success': 12}<br>     - mprotect                               6          1.185          2.235        3.923      1.148  {'success': 6}<br>     - read                                   5          0.925          2.101        6.300      2.351  {'success': 5}<br>     - ioctl                                  4          0.342          1.151        2.280      0.873  {'success': 2, 'ENOTTY': 2}<br>     - access                                 4          1.166          2.530        4.202      1.527  {'ENOENT': 4}<br>     - rt_sigprocmask                         3          0.325          0.570        0.979      0.357  {'success': 3}<br>     - dup2                                   2          0.250          0.562        0.874          ?  {'success': 2}<br>     - munmap                                 2          3.006          5.399        7.792          ?  {'success': 2}<br>     - execve                                 1       7277.974       7277.974     7277.974          ?  {'success': 1}<br>     - setpgid                                1          0.945          0.945        0.945          ?  {'success': 1}<br>     - fcntl                                  1              ?          0.000        0.000          ?  {}<br>     - newuname                               1          1.240          1.240        1.240          ?  {'success': 1}<br>    Total:                                71847<br>    -----------------------------------------------------------------------------------------------------------------<br>    apache2 (31517)                       Count            Min        Average          Max      Stdev  Return values<br>     - fcntl                                192              ?          0.000        0.000          ?  {}<br>     - newfstat                             156          0.237          0.484        1.102      0.222  {'success': 156}<br>     - read                                 144          0.307          1.602       16.307      1.698  {'success': 117, 'EAGAIN': 27}<br>     - access                                96          0.705          1.580        3.364      0.670  {'success': 12, 'ENOENT': 84}<br>     - newlstat                              84          0.459          0.738        1.456      0.186  {'success': 63, 'ENOENT': 21}<br>     - newstat                               74          0.735          2.266       11.212      1.772  {'success': 50, 'ENOENT': 24}<br>     - lseek                                 72          0.317          0.522        0.915      0.112  {'success': 72}<br>     - close                                 39          0.471          0.615        0.867      0.069  {'success': 39}<br>     - open                                  36          2.219      12162.689   437697.753  72948.868  {'success': 36}<br>     - getcwd                                28          0.287          0.701        1.331      0.277  {'success': 28}<br>     - poll                                  27          1.080       1139.669     2851.163    856.723  {'success': 27}<br>     - times                                 24          0.765          0.956        1.327      0.107  {'success': 24}<br>     - setitimer                             24          0.499          5.848       16.668      4.041  {'success': 24}<br>     - write                                 24          5.467          6.784       16.827      2.459  {'success': 24}<br>     - writev                                24         10.241         17.645       29.817      5.116  {'success': 24}<br>     - mmap                                  15          3.060          3.482        4.406      0.317  {'success': 15}<br>     - munmap                                15          2.944          3.502        4.154      0.427  {'success': 15}<br>     - brk                                   12          0.738          4.579       13.795      4.437  {'success': 12}<br>     - chdir                                 12          0.989          1.600        2.353      0.385  {'success': 12}<br>     - flock                                  6          0.906          1.282        2.043      0.423  {'success': 6}<br>     - rt_sigaction                           6          0.530          0.725        1.123      0.217  {'success': 6}<br>     - pwrite64                               6          1.262          1.430        1.692      0.143  {'success': 6}<br>     - rt_sigprocmask                         6          0.539          0.650        0.976      0.162  {'success': 6}<br>     - shutdown                               3          7.323          8.487       10.281      1.576  {'success': 3}<br>     - getsockname                            3          1.015          1.228        1.585      0.311  {'success': 3}<br>     - accept4                                3    5174453.611    3450157.282  5176018.235          ?  {'success': 2}<br>    Total:                                 1131<br><br><br>Interrupts<br>----------<br><br>Hardware and software interrupt statistics<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>.. code-block:: bash<br><br>   lttng-irqstats /path/to/trace<br><br>::<br><br>    Timerange: [2014-03-11 16:05:41.314824752, 2014-03-11 16:05:45.041994298]<br>    Hard IRQ                                             Duration (us)<br>                           count          min          avg          max        stdev<br>    ----------------------------------------------------------------------------------|<br>    1:  &lt;i8042&gt;               30       10.901       45.500       64.510       18.447  |<br>    42: &lt;ahci&gt;               259        3.203        7.863       21.426        3.183  |<br>    43: &lt;eth0&gt;                 2        3.859        3.976        4.093        0.165  |<br>    44: &lt;iwlwifi&gt;             92        0.300        3.995        6.542        2.181  |<br><br>    Soft IRQ                                             Duration (us)                                        Raise latency (us)<br>                           count          min          avg          max        stdev  |  count          min          avg          max        stdev<br>    ----------------------------------------------------------------------------------|------------------------------------------------------------<br>    1:  &lt;TIMER_SOFTIRQ&gt;      495        0.202       21.058       51.060       11.047  |     53        2.141       11.217       20.005        7.233<br>    3:  &lt;NET_RX_SOFTIRQ&gt;      14        0.133        9.177       32.774       10.483  |     14        0.763        3.703       10.902        3.448<br>    4:  &lt;BLOCK_SOFTIRQ&gt;      257        5.981       29.064      125.862       15.891  |    257        0.891        3.104       15.054        2.046<br>    6:  &lt;TASKLET_SOFTIRQ&gt;     26        0.309        1.198        1.748        0.329  |     26        9.636       39.222       51.430       11.246<br>    7:  &lt;SCHED_SOFTIRQ&gt;      299        1.185       14.768       90.465       15.992  |    298        1.286       31.387       61.700       11.866<br>    9:  &lt;RCU_SOFTIRQ&gt;        338        0.592        3.387       13.745        1.356  |    147        2.480       29.299       64.453       14.286<br><br><br>Interrupt handler duration frequency distribution<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>.. code-block:: bash<br><br>   lttng-irqfreq --timerange=[16:05:42,16:05:45] --irq=44 --stats /path/to/trace<br><br>::<br><br>    Timerange: [2014-03-11 16:05:42.042034570, 2014-03-11 16:05:44.998914297]<br>    Hard IRQ                                             Duration (us)<br>                           count          min          avg          max        stdev<br>    ----------------------------------------------------------------------------------|<br>    44: &lt;iwlwifi&gt;             72        0.300        4.018        6.542        2.164  |<br>    Frequency distribution iwlwifi (44)<br>    ###############################################################################<br>    0.300 \u2588\u2588\u2588\u2588\u2588                                                                 1.00<br>    0.612 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588        12.00<br>    0.924 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                  4.00<br>    1.236 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                            2.00<br>    1.548                                                                       0.00<br>    1.861 \u2588\u2588\u2588\u2588\u2588                                                                 1.00<br>    2.173                                                                       0.00<br>    2.485 \u2588\u2588\u2588\u2588\u2588                                                                 1.00<br>    2.797 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                            5.00<br>    3.109 \u2588\u2588\u2588\u2588\u2588                                                                 1.00<br>    3.421 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                       3.00<br>    3.733                                                                       0.00<br>    4.045 \u2588\u2588\u2588\u2588\u2588                                                                 1.00<br>    4.357 \u2588\u2588\u2588\u2588\u2588                                                                 1.00<br>    4.669 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                            2.00<br>    4.981 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                            2.00<br>    5.294 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                             8.00<br>    5.606 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  13.00<br>    5.918 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588        12.00<br>    6.230 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                       3.00<br><br><br>Community<br>=========<br><br>LTTng analyses is part of the `LTTng &lt;http://lttng.org/&gt;`_ project<br>and shares its community.<br><br>We hope you have fun trying this project and please remember it is a<br>work in progress; feedback, bug reports and improvement ideas are always<br>welcome!<br><br>.. list-table:: LTTng analyses project's communication channels<br>   :header-rows: 1<br><br>   * - Item<br>     - Location<br>     - Notes<br>   * - Mailing list<br>     - `lttng-dev &lt;https://lists.lttng.org/cgi-bin/mailman/listinfo/lttng-dev&gt;`_<br>       (``lttng-dev@lists.lttng.org``)<br>     - Preferably, use the ``[lttng-analyses]`` subject prefix<br>   * - IRC<br>     - ``#lttng`` on the OFTC network<br>     -<br>   * - Code contribution<br>     - Create a new GitHub<br>       `pull request &lt;https://github.com/lttng/lttng-analyses/pulls&gt;`_<br>     -<br>   * - Bug reporting<br>     - Create a new GitHub<br>       `issue &lt;https://github.com/lttng/lttng-analyses/issues/new&gt;`_<br>     -<br>   * - Continuous integration<br>     - `lttng-analyses_master_build item<br>       &lt;https://ci.lttng.org/job/lttng-analyses_master_build/&gt;`_ on<br>       LTTng's CI and `lttng/lttng-analyses project<br>       &lt;https://travis-ci.org/lttng/lttng-analyses&gt;`_<br>       on Travis CI<br>     -<br>   * - Blog<br>     - The `LTTng blog &lt;http://lttng.org/blog/&gt;`_ contains some posts<br>       about LTTng analyses<br>     -\n          </div>"}, "last_serial": 2558034, "releases": {"0.2.0": [], "0.3.0": [{"comment_text": "", "digests": {"md5": "728f9fda2f971d4642e57062847367fe", "sha256": "82e1cce6abf26a4eb2faea94da5f6ddc8bfd0d2025256988ed7d22ad36891ee6"}, "downloads": -1, "filename": "lttnganalyses-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "728f9fda2f971d4642e57062847367fe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 119350, "upload_time": "2015-07-13T22:20:01", "upload_time_iso_8601": "2015-07-13T22:20:01.499914Z", "url": "https://files.pythonhosted.org/packages/3d/6d/304aa51016eeb1f76921b64ff1b119a43466548af6ae1497102e7059c911/lttnganalyses-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e2bc26d3362cfa380d242b888e517a7", "sha256": "311bc47b3f5f156e112f8b3a1d1b5b3ebe6501eb09a987f1f03cc5a8ce378c29"}, "downloads": -1, "filename": "lttnganalyses-0.3.0.tar.gz", "has_sig": false, "md5_digest": "5e2bc26d3362cfa380d242b888e517a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111104, "upload_time": "2015-07-13T22:20:05", "upload_time_iso_8601": "2015-07-13T22:20:05.257912Z", "url": "https://files.pythonhosted.org/packages/8c/50/93abf0d70b7ddd5c8d8d8ff5335656fbca73451e6ae0d1be1c7da320d694/lttnganalyses-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "5f156d7a86958c80cc02ebef86fee25b", "sha256": "ec2f8486ec0c463d909eef481475edcee270f711ad0c1b5c2c7cfffde7d9d7b7"}, "downloads": -1, "filename": "lttnganalyses-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5f156d7a86958c80cc02ebef86fee25b", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 144337, "upload_time": "2016-02-29T17:17:49", "upload_time_iso_8601": "2016-02-29T17:17:49.674170Z", "url": "https://files.pythonhosted.org/packages/c8/34/df2a97f966005c4808aa79690bab87e5f8ecde970aae3ab9543e1674d520/lttnganalyses-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a112588087c21a7362f9abfc5e05e475", "sha256": "ab8e2464c3d8f637e59054601f51ccc07d88a8595659a079af1a8516afd31400"}, "downloads": -1, "filename": "lttnganalyses-0.4.0.tar.gz", "has_sig": false, "md5_digest": "a112588087c21a7362f9abfc5e05e475", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 129050, "upload_time": "2016-02-29T17:17:27", "upload_time_iso_8601": "2016-02-29T17:17:27.194050Z", "url": "https://files.pythonhosted.org/packages/b7/cc/4651ab36c48e8d519adc757bd15f6889c527ff180727cd694d352555a064/lttnganalyses-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "82fb242d93ad690294125f4f00b10227", "sha256": "11b94ed282d670107e04de2e1527daba4f86df52533ca97c5a67793fda1b315b"}, "downloads": -1, "filename": "lttnganalyses-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "82fb242d93ad690294125f4f00b10227", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 144339, "upload_time": "2016-02-29T19:07:05", "upload_time_iso_8601": "2016-02-29T19:07:05.621166Z", "url": "https://files.pythonhosted.org/packages/14/72/22899b8cbf387e5652c5182b2943ff5745a3343974db3e12836b08ecf8db/lttnganalyses-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8aa9b8f6d6f3d1bcb4678ee6d2276410", "sha256": "4948f10929cb4d3218b31b473f7804c2a34362bdc3fee6c42b799176201d631a"}, "downloads": -1, "filename": "lttnganalyses-0.4.1.tar.gz", "has_sig": false, "md5_digest": "8aa9b8f6d6f3d1bcb4678ee6d2276410", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 136378, "upload_time": "2016-02-29T19:06:55", "upload_time_iso_8601": "2016-02-29T19:06:55.145901Z", "url": "https://files.pythonhosted.org/packages/f7/32/e455dd2d2f02707aed62b756843a06518821c6b72c569a9fb1c65fb76d8c/lttnganalyses-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "bbaf5cb12c267d95e542f3b80df26a45", "sha256": "bb817f386dd86733da525567efc46c1be8899424570ecb47e4391c2c885242a5"}, "downloads": -1, "filename": "lttnganalyses-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bbaf5cb12c267d95e542f3b80df26a45", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 144339, "upload_time": "2016-02-29T22:52:39", "upload_time_iso_8601": "2016-02-29T22:52:39.356211Z", "url": "https://files.pythonhosted.org/packages/3b/9c/a5703606549fb27d10fe0f2e7325f06e5be85cc2a85431edb71f6da77e75/lttnganalyses-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "017ef30038e8dccd7dc3d5ced6edec1a", "sha256": "6083629e1f9b850c04ed6057e39a932fd9bf861be857bd8692729172e801c6de"}, "downloads": -1, "filename": "lttnganalyses-0.4.2.tar.gz", "has_sig": false, "md5_digest": "017ef30038e8dccd7dc3d5ced6edec1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 140372, "upload_time": "2016-02-29T22:52:32", "upload_time_iso_8601": "2016-02-29T22:52:32.640952Z", "url": "https://files.pythonhosted.org/packages/8f/fb/f528dc35d458059551c76d77517b1f1d867b540dbe47f9cdff05605c28ba/lttnganalyses-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "1967e85109f33fdad8bf7f8731bfb142", "sha256": "cd654eb444ceaf7236278e6fba2cad6e4ca9fb3a81771aeb34655c34063e9754"}, "downloads": -1, "filename": "lttnganalyses-0.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1967e85109f33fdad8bf7f8731bfb142", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 144342, "upload_time": "2016-03-08T00:52:36", "upload_time_iso_8601": "2016-03-08T00:52:36.475499Z", "url": "https://files.pythonhosted.org/packages/55/cc/cb56b7abe8767b504bdeb5e67804c035b1001e3ac73e4660b98dc566e8ea/lttnganalyses-0.4.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ce5f1b34482455d45c2d8ad08962c8f", "sha256": "149af3142c21aa7fab0ec9f629e219699e033311e3c675261b626c0ee09fbd75"}, "downloads": -1, "filename": "lttnganalyses-0.4.3.tar.gz", "has_sig": false, "md5_digest": "4ce5f1b34482455d45c2d8ad08962c8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 143996, "upload_time": "2016-03-08T00:52:25", "upload_time_iso_8601": "2016-03-08T00:52:25.532511Z", "url": "https://files.pythonhosted.org/packages/8e/91/e32def1c9c20fadbdf0b1a9c5f854a0af9b9c9d95aa07b5aa542780ad23b/lttnganalyses-0.4.3.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "dafa39355928408ee24da8c2e8af6c08", "sha256": "1b98f33ef8aec9e257c0bbec733ef49d28196cce34bbaa28e8f9e6c16131fec8"}, "downloads": -1, "filename": "lttnganalyses-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dafa39355928408ee24da8c2e8af6c08", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 150530, "upload_time": "2016-05-30T18:19:58", "upload_time_iso_8601": "2016-05-30T18:19:58.294304Z", "url": "https://files.pythonhosted.org/packages/d6/df/1fd07cf8f7f606110762a867746c024dd71fc639d4df3208ee64af2ce0e7/lttnganalyses-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d20a0a94bdea44502c910953c9b9a5bc", "sha256": "447c8f38570b82685db0c5a1f987fbdabb4f7ee4957bdc73de9fb2fdfbd956fe"}, "downloads": -1, "filename": "lttnganalyses-0.5.0.tar.gz", "has_sig": false, "md5_digest": "d20a0a94bdea44502c910953c9b9a5bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 150408, "upload_time": "2016-05-30T18:21:58", "upload_time_iso_8601": "2016-05-30T18:21:58.181176Z", "url": "https://files.pythonhosted.org/packages/f4/6c/015d9443ab32e547b9d7122468dc822ece4fa8f6afed761868fb5e8ffb6b/lttnganalyses-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "4c362f8cb46ffdaba5b80f0ad94bf886", "sha256": "43eafcfd2a0812461051ec32bd73fd6647ffae73dcaa0a340aafc9fc1b436106"}, "downloads": -1, "filename": "lttnganalyses-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4c362f8cb46ffdaba5b80f0ad94bf886", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 150529, "upload_time": "2016-06-01T15:43:36", "upload_time_iso_8601": "2016-06-01T15:43:36.419436Z", "url": "https://files.pythonhosted.org/packages/6e/43/aa1f3fdb0fb5f4ca221c85a82c65d90c51bc0e24f3c24384f81671a0b472/lttnganalyses-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed7f1f9d4e266034042e542f8371677e", "sha256": "6149744468cb0e96d9b46c8a606f7cad9c9faf09f3f3c357894233c62d17ae11"}, "downloads": -1, "filename": "lttnganalyses-0.5.1.tar.gz", "has_sig": false, "md5_digest": "ed7f1f9d4e266034042e542f8371677e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 150425, "upload_time": "2016-06-01T15:43:44", "upload_time_iso_8601": "2016-06-01T15:43:44.391661Z", "url": "https://files.pythonhosted.org/packages/98/56/c8ee5f39f49bd20b297ddd05e62596616b4bbc6bcaf9adb94530911e905f/lttnganalyses-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "2206c0458b6c3dfc22bcc5d319df0ee0", "sha256": "4f1bcc135af8005299c206239beff9d60eb7c452aed60bcc4797a84d705a3fc8"}, "downloads": -1, "filename": "lttnganalyses-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2206c0458b6c3dfc22bcc5d319df0ee0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 150530, "upload_time": "2016-06-07T20:07:36", "upload_time_iso_8601": "2016-06-07T20:07:36.196312Z", "url": "https://files.pythonhosted.org/packages/fb/33/d1650526b8df1c5d338a4b96bbed54c226f6914df8b9d764224d45d6ddd2/lttnganalyses-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "32ea54a120e149e8433ef10f0bfa6b8c", "sha256": "0bb49a008b640df03bb1c7848056baa27a31dc30d0aa43b25707987c28490a4c"}, "downloads": -1, "filename": "lttnganalyses-0.5.2.tar.gz", "has_sig": false, "md5_digest": "32ea54a120e149e8433ef10f0bfa6b8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 169361, "upload_time": "2016-06-07T20:07:39", "upload_time_iso_8601": "2016-06-07T20:07:39.927956Z", "url": "https://files.pythonhosted.org/packages/7a/81/84ead03da5e1c077a57821ce47c688c2d60cc48c779e7323c9c6383db97a/lttnganalyses-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "f46b03cd9119f34fff3054a68d26e0b7", "sha256": "12a29d1d995125f0c4548d0a43bddf968d317b80d6ed9a56403a6ba7d12cce59"}, "downloads": -1, "filename": "lttnganalyses-0.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f46b03cd9119f34fff3054a68d26e0b7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 150888, "upload_time": "2016-06-13T17:18:29", "upload_time_iso_8601": "2016-06-13T17:18:29.847328Z", "url": "https://files.pythonhosted.org/packages/ba/ce/664526880d17f7891a5c04df2a0726e41e0eedff98262e4cd0a5294fbd87/lttnganalyses-0.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6fe70724144d8612c009b425d070aa57", "sha256": "deb38682d1e2559e2862254035ae5d2e5b9c3f97a138fc54d7ae40786881947b"}, "downloads": -1, "filename": "lttnganalyses-0.5.3.tar.gz", "has_sig": false, "md5_digest": "6fe70724144d8612c009b425d070aa57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 151487, "upload_time": "2016-06-13T17:18:52", "upload_time_iso_8601": "2016-06-13T17:18:52.008106Z", "url": "https://files.pythonhosted.org/packages/ef/ae/3ba5cd607c8d5538923d79539728ea20849601eaf58ba1d186ec322499f4/lttnganalyses-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "142fa44bdc0898989cea216fef647dce", "sha256": "973bc58f280e34eabba436ebf4654b86b3251d9aa62c3cce3a63fdf8ee94940b"}, "downloads": -1, "filename": "lttnganalyses-0.5.4-py3-none-any.whl", "has_sig": true, "md5_digest": "142fa44bdc0898989cea216fef647dce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 150825, "upload_time": "2016-07-25T15:08:47", "upload_time_iso_8601": "2016-07-25T15:08:47.700618Z", "url": "https://files.pythonhosted.org/packages/f1/9c/ff2eea069196f56c00b101cf4ec8551e9d5a88d77e88946aeeed7e00abb1/lttnganalyses-0.5.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0704f798ff570b5a96fa7b65589f8b6b", "sha256": "4888cf52e891aaa9611b0673523e7c09cc99eec3a19d7b8052cc5d7f0d271e99"}, "downloads": -1, "filename": "lttnganalyses-0.5.4.tar.gz", "has_sig": true, "md5_digest": "0704f798ff570b5a96fa7b65589f8b6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 151824, "upload_time": "2016-07-25T15:08:51", "upload_time_iso_8601": "2016-07-25T15:08:51.702693Z", "url": "https://files.pythonhosted.org/packages/b6/24/24cbd6875a5bbfb9b436bd0aa24cb22de00bb347c13c39aec6111e54fda1/lttnganalyses-0.5.4.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "389307e5c01be9950bdab340616a784c", "sha256": "bbb73ac7aea153f15462455730b9bffc361b5b3316b61da6f91e742307c8e3a0"}, "downloads": -1, "filename": "lttnganalyses-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "389307e5c01be9950bdab340616a784c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 193008, "upload_time": "2017-01-05T17:06:22", "upload_time_iso_8601": "2017-01-05T17:06:22.267955Z", "url": "https://files.pythonhosted.org/packages/c0/89/72f8fdef5eca9d8044257a04cbef1ec6d5fd02af8cf09eee92d4332c2987/lttnganalyses-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cec2983915cd1dd98e4a32bc6e327812", "sha256": "1c312b202eaf3dba99265e84c95fbccb1674e0ad2f92261e8282708c719fd6f3"}, "downloads": -1, "filename": "lttnganalyses-0.6.0.tar.gz", "has_sig": false, "md5_digest": "cec2983915cd1dd98e4a32bc6e327812", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 196763, "upload_time": "2017-01-05T17:06:25", "upload_time_iso_8601": "2017-01-05T17:06:25.052594Z", "url": "https://files.pythonhosted.org/packages/e1/f0/f6251b48b7056b3c84124fddc5cadd45d0d254e9e0539391b6a365a358b9/lttnganalyses-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "30cb23e9f4c080c1572ceb43ac171e3d", "sha256": "728d66b4606f1fff7676918668688154b3df5ace9a2655a2b14e7575f8e26e08"}, "downloads": -1, "filename": "lttnganalyses-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "30cb23e9f4c080c1572ceb43ac171e3d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 194599, "upload_time": "2017-01-06T16:28:14", "upload_time_iso_8601": "2017-01-06T16:28:14.861430Z", "url": "https://files.pythonhosted.org/packages/04/16/b5b69781167f65985321b33e107d6d69cf8318156eac63220b068fa1dd04/lttnganalyses-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "068d984cfe8399fd84f66d2589f05ad4", "sha256": "bca867b09e492fe4cc37b0919337ca40ba8e86c69588e296c4c095e23ff394be"}, "downloads": -1, "filename": "lttnganalyses-0.6.1.tar.gz", "has_sig": false, "md5_digest": "068d984cfe8399fd84f66d2589f05ad4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 199822, "upload_time": "2017-01-06T16:28:17", "upload_time_iso_8601": "2017-01-06T16:28:17.479819Z", "url": "https://files.pythonhosted.org/packages/6d/22/ceed7ca9f30442383eeb9c81aa3709bb295fe032a46e8922ce42071771a6/lttnganalyses-0.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "30cb23e9f4c080c1572ceb43ac171e3d", "sha256": "728d66b4606f1fff7676918668688154b3df5ace9a2655a2b14e7575f8e26e08"}, "downloads": -1, "filename": "lttnganalyses-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "30cb23e9f4c080c1572ceb43ac171e3d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 194599, "upload_time": "2017-01-06T16:28:14", "upload_time_iso_8601": "2017-01-06T16:28:14.861430Z", "url": "https://files.pythonhosted.org/packages/04/16/b5b69781167f65985321b33e107d6d69cf8318156eac63220b068fa1dd04/lttnganalyses-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "068d984cfe8399fd84f66d2589f05ad4", "sha256": "bca867b09e492fe4cc37b0919337ca40ba8e86c69588e296c4c095e23ff394be"}, "downloads": -1, "filename": "lttnganalyses-0.6.1.tar.gz", "has_sig": false, "md5_digest": "068d984cfe8399fd84f66d2589f05ad4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 199822, "upload_time": "2017-01-06T16:28:17", "upload_time_iso_8601": "2017-01-06T16:28:17.479819Z", "url": "https://files.pythonhosted.org/packages/6d/22/ceed7ca9f30442383eeb9c81aa3709bb295fe032a46e8922ce42071771a6/lttnganalyses-0.6.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:20 2020"}