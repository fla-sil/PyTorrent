{"info": {"author": "Jensun Ravichandran", "author_email": "jjensun@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# ProtoFlow\n\nProtoFlow is a TensorFlow-based Python toolbox for bleeding-edge research in prototype-based machine learning algorithms.\n\n## Description\n\nThis is a Python toolbox brewed at the Mittweida University of Applied Sciences\nin Germany for bleeding-edge research in Learning Vector Quantization (LVQ)\nmethods. Although, there are other (perhaps more extensive) LVQ toolboxes\navailable out there, the focus of ProtoFlow is ease-of-use, extensibility and\nspeed.\n\nMany popular prototype-based Machine Learning (ML) algorithms like K-Nearest\nNeighbors (KNN), Generalized Learning Vector Quantization (GLVQ) and Generalized\nMatrix Learning Vector Quantization (GMLVQ) including the recent Learning Vector\nQuantization Multi-Layer Network (LVQMLN) are implemented as Tensorflow models\nusing the Keras API.\n\n## Installation\n\nProtoFlow can be installed using `pip`.\n```\npip install protoflow\n```\n\n## Usage\n\nProtoFlow is modular. It is very easy to use the modular pieces provided by\nProtoFlow, like the layers, losses, callbacks and metrics to build your own\nprototype-based(instance-based) models. These pieces blend-in seamlessly with\nKeras allowing you to mix and match the modules from ProtoFlow with other Keras\nmodules.\n\nProtoFlow comes prepackaged with many popular LVQ algorithms in a convenient API,\nwith more algorithms and techniques coming soon. If you would simply like to be\nable to use those algorithms to train large ML models on a GPU, ProtoFlow lets\nyou do this without requiring a black-belt in high-performance Tensor computation.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/si-cim/protoflow.git", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/si-cim/protoflow", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "protoflow", "package_url": "https://pypi.org/project/protoflow/", "platform": "", "project_url": "https://pypi.org/project/protoflow/", "project_urls": {"Download": "https://github.com/si-cim/protoflow.git", "Homepage": "https://github.com/si-cim/protoflow"}, "release_url": "https://pypi.org/project/protoflow/0.1.1/", "requires_dist": ["tensorflow (>=2.0.1)", "numpy (>=1.9.1)", "matplotlib", "sklearn", "xlrd ; extra == 'other'", "pandas ; extra == 'other'", "seaborn ; extra == 'other'", "imageio ; extra == 'other'", "pytest ; extra == 'tests'"], "requires_python": "", "summary": "Highly extensible, GPU-supported Learning Vector Quantization (LVQ) toolbox built using Tensorflow 2.x and its Keras API.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ProtoFlow</h1>\n<p>ProtoFlow is a TensorFlow-based Python toolbox for bleeding-edge research in prototype-based machine learning algorithms.</p>\n<h2>Description</h2>\n<p>This is a Python toolbox brewed at the Mittweida University of Applied Sciences\nin Germany for bleeding-edge research in Learning Vector Quantization (LVQ)\nmethods. Although, there are other (perhaps more extensive) LVQ toolboxes\navailable out there, the focus of ProtoFlow is ease-of-use, extensibility and\nspeed.</p>\n<p>Many popular prototype-based Machine Learning (ML) algorithms like K-Nearest\nNeighbors (KNN), Generalized Learning Vector Quantization (GLVQ) and Generalized\nMatrix Learning Vector Quantization (GMLVQ) including the recent Learning Vector\nQuantization Multi-Layer Network (LVQMLN) are implemented as Tensorflow models\nusing the Keras API.</p>\n<h2>Installation</h2>\n<p>ProtoFlow can be installed using <code>pip</code>.</p>\n<pre><code>pip install protoflow\n</code></pre>\n<h2>Usage</h2>\n<p>ProtoFlow is modular. It is very easy to use the modular pieces provided by\nProtoFlow, like the layers, losses, callbacks and metrics to build your own\nprototype-based(instance-based) models. These pieces blend-in seamlessly with\nKeras allowing you to mix and match the modules from ProtoFlow with other Keras\nmodules.</p>\n<p>ProtoFlow comes prepackaged with many popular LVQ algorithms in a convenient API,\nwith more algorithms and techniques coming soon. If you would simply like to be\nable to use those algorithms to train large ML models on a GPU, ProtoFlow lets\nyou do this without requiring a black-belt in high-performance Tensor computation.</p>\n\n          </div>"}, "last_serial": 6537381, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3dd7c2ebba2cd9a569e9b332624a5e4a", "sha256": "e258b7bd2964b08a95ed3fef157eb5938289dc0572c99a3fd4b2cbf3e41975e1"}, "downloads": -1, "filename": "protoflow-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3dd7c2ebba2cd9a569e9b332624a5e4a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52953, "upload_time": "2020-01-27T10:36:13", "upload_time_iso_8601": "2020-01-27T10:36:13.126191Z", "url": "https://files.pythonhosted.org/packages/64/f4/b0014ac889499698ebb68df999299f1232caa4525765a4827c56dc1f24f3/protoflow-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "441657cd591019232c0b5e83aa7ea357", "sha256": "eff047b47d7ad84f6c9513e6b3dfe1f136714d810a31eb25921088ffb63d6ede"}, "downloads": -1, "filename": "protoflow-0.0.1.tar.gz", "has_sig": false, "md5_digest": "441657cd591019232c0b5e83aa7ea357", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76193, "upload_time": "2020-01-27T10:36:15", "upload_time_iso_8601": "2020-01-27T10:36:15.950515Z", "url": "https://files.pythonhosted.org/packages/c0/54/9b1da5da26e4eacccc3cef8033e1386645af5b7575239869ebb391e15875/protoflow-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "4eb872673ef2be13791a2d16dd92e576", "sha256": "b4a282ed96f029597d6eb27bdf470eb25789ca9c3f6338977add33ff7467c0ce"}, "downloads": -1, "filename": "protoflow-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4eb872673ef2be13791a2d16dd92e576", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52946, "upload_time": "2020-01-28T12:50:01", "upload_time_iso_8601": "2020-01-28T12:50:01.780079Z", "url": "https://files.pythonhosted.org/packages/d3/11/5540730be5e100818a304eef06d1541ed05db2d386bffbc9f5e051520084/protoflow-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41820879ec4a3a624548aa969c91971c", "sha256": "0c9fce900f33fea6571dda1a5449f2ca740909c6e065b9e9d9f3c20d6189f117"}, "downloads": -1, "filename": "protoflow-0.1.0.tar.gz", "has_sig": false, "md5_digest": "41820879ec4a3a624548aa969c91971c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76192, "upload_time": "2020-01-28T12:50:04", "upload_time_iso_8601": "2020-01-28T12:50:04.194778Z", "url": "https://files.pythonhosted.org/packages/cb/1a/b03db9780480185ff85b141a1db3274ce9b30b228d14f105e1db4da662a8/protoflow-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d65e92e9381f268bc1543337f6f84d26", "sha256": "3e88a1ef6fe094a1d6c07155676341ac21b2037d4381978fadad822ea5139872"}, "downloads": -1, "filename": "protoflow-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d65e92e9381f268bc1543337f6f84d26", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52938, "upload_time": "2020-01-29T11:32:54", "upload_time_iso_8601": "2020-01-29T11:32:54.741531Z", "url": "https://files.pythonhosted.org/packages/03/17/aaafa2961a40dfe0e8505644c11bed919f4a4dbc96aca5d612053d6cc1dd/protoflow-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "296aee2e5ef9a3523341b5dab7bbaa66", "sha256": "23ad13e0e2f02a28f6dd6cf9bb0e0b4cb61f2041e7671e44a35a7fb61190ae58"}, "downloads": -1, "filename": "protoflow-0.1.1.tar.gz", "has_sig": false, "md5_digest": "296aee2e5ef9a3523341b5dab7bbaa66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76198, "upload_time": "2020-01-29T11:32:57", "upload_time_iso_8601": "2020-01-29T11:32:57.915330Z", "url": "https://files.pythonhosted.org/packages/a5/46/da838b6cc4f0a70090b8422529f15d766ef90cbe9218606f5a5bf0a62382/protoflow-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d65e92e9381f268bc1543337f6f84d26", "sha256": "3e88a1ef6fe094a1d6c07155676341ac21b2037d4381978fadad822ea5139872"}, "downloads": -1, "filename": "protoflow-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d65e92e9381f268bc1543337f6f84d26", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 52938, "upload_time": "2020-01-29T11:32:54", "upload_time_iso_8601": "2020-01-29T11:32:54.741531Z", "url": "https://files.pythonhosted.org/packages/03/17/aaafa2961a40dfe0e8505644c11bed919f4a4dbc96aca5d612053d6cc1dd/protoflow-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "296aee2e5ef9a3523341b5dab7bbaa66", "sha256": "23ad13e0e2f02a28f6dd6cf9bb0e0b4cb61f2041e7671e44a35a7fb61190ae58"}, "downloads": -1, "filename": "protoflow-0.1.1.tar.gz", "has_sig": false, "md5_digest": "296aee2e5ef9a3523341b5dab7bbaa66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76198, "upload_time": "2020-01-29T11:32:57", "upload_time_iso_8601": "2020-01-29T11:32:57.915330Z", "url": "https://files.pythonhosted.org/packages/a5/46/da838b6cc4f0a70090b8422529f15d766ef90cbe9218606f5a5bf0a62382/protoflow-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:31 2020"}