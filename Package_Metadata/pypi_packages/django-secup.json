{"info": {"author": "Yusuf Ozer", "author_email": "realsby@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.1", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# django-secup\n\nAllow django users to securely communicating sensitive files over the internet.\n\nOnly django users which is staff can invite an external user to upload a sensitive file.\n\nOrdinary django users can send file with description to the django staff users if have valid emails. If invalid email address is used, secup managers defined in the settings will be notified.\n\nSigned urls created to navigates users to secup.\n\n\n## Warning\n\nIf we want to securly serve files from Cloud, it is easy. But if we don't use a cloud provider, the best solution requires cooperation of django and web server like X-Sendfile. Other methods not included web servers is not completely secure or should not prefered if the file sizes are large. \n\nThis application package uses a secure method not included web servers, but it's not ideal way to serve large files expecting high traffic.\n\n\n## Todos\n\n- Create a new flow for staff to sends files to external users.\n- Create a structure to sign files which uploaded by staff with GnuPG.\n- Write tests with high coverage.\n\n\n## Quick start\n\n1. Install the secup module::\n```sh\n    pip install django-secup\n```\n\n2. Add \"secup\" to your INSTALLED_APPS setting like this::\n```python\n    INSTALLED_APPS = [\n        ...\n        'secup',\n    ]\n```\n\n3. Include the secup URLconf in your project urls.py like this::\n```python\n    path('secup/', include('secup.urls')),\n```\n\n4. Run migrations to create the secup models::\n```sh\n    python manage.py migrate\n```\n\n5. You have to define secup managers in the settings.py, superusers or a tuple of users::\n```python\nSUPERUSERS_AS_SECUP_MANAGERS = True\n# or\nCUSTOM_SECUP_MANAGERS = (\n    ('Yusuf Ozer', 'realsby@gmail.com'),\n)\n```\n\n6. You can set secure media folder in the settings.py, default is 'secure-media' folder::\n```python\nSECURE_MEDIA_URL_PREFIX = '/secure-media/'\nSECURE_MEDIA_ROOT = os.path.join(BASE_DIR, 'secure-media/')\n```\n\n7. To send notification mails with signed urls to related users set::\n```python\nSEND_SECUP_NOTIFICATION_MAILS = True\n```\n\n8. Edit notification email templates if you set true previous setting. All templates included related 'SecureUpload' object as context::\n\n- templates/secup/email_invited.html\n- templates/secup/email_invited.txt\n- templates/secup/email_managers.html\n- templates/secup/email_managers.txt\n- templates/secup/email_uploaded.html\n- templates/secup/email_uploaded.txt\n\n9. Set default timeout for signed urls::\n```python\nSECUP_LINKS_VALID_SECONDS = 7200  # default is 2 hours \n```\n\n\n## To Check Locally\n\n```sh\n    python manage.py runserver 127.0.0.1:8000\n```\nTo invite external user to upload file (django staff required):\nhttp://127.0.0.1:8000/secup/create-invite/\n\nTo see files uploaded to you (django user required):\nhttp://127.0.0.1:8000/secup/files/\n\nTo upload files to staff members (django user required):\nhttp://127.0.0.1:8000/secup/upload-to-secup/", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/realsby/django-secup", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "django-secup", "package_url": "https://pypi.org/project/django-secup/", "platform": "", "project_url": "https://pypi.org/project/django-secup/", "project_urls": {"Homepage": "https://github.com/realsby/django-secup"}, "release_url": "https://pypi.org/project/django-secup/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Allow django users to securely communicating sensitive files over the internet.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # django-secup<br><br>Allow django users to securely communicating sensitive files over the internet.<br><br>Only django users which is staff can invite an external user to upload a sensitive file.<br><br>Ordinary django users can send file with description to the django staff users if have valid emails. If invalid email address is used, secup managers defined in the settings will be notified.<br><br>Signed urls created to navigates users to secup.<br><br><br>## Warning<br><br>If we want to securly serve files from Cloud, it is easy. But if we don't use a cloud provider, the best solution requires cooperation of django and web server like X-Sendfile. Other methods not included web servers is not completely secure or should not prefered if the file sizes are large. <br><br>This application package uses a secure method not included web servers, but it's not ideal way to serve large files expecting high traffic.<br><br><br>## Todos<br><br>- Create a new flow for staff to sends files to external users.<br>- Create a structure to sign files which uploaded by staff with GnuPG.<br>- Write tests with high coverage.<br><br><br>## Quick start<br><br>1. Install the secup module::<br>```sh<br>    pip install django-secup<br>```<br><br>2. Add \"secup\" to your INSTALLED_APPS setting like this::<br>```python<br>    INSTALLED_APPS = [<br>        ...<br>        'secup',<br>    ]<br>```<br><br>3. Include the secup URLconf in your project urls.py like this::<br>```python<br>    path('secup/', include('secup.urls')),<br>```<br><br>4. Run migrations to create the secup models::<br>```sh<br>    python manage.py migrate<br>```<br><br>5. You have to define secup managers in the settings.py, superusers or a tuple of users::<br>```python<br>SUPERUSERS_AS_SECUP_MANAGERS = True<br># or<br>CUSTOM_SECUP_MANAGERS = (<br>    ('Yusuf Ozer', 'realsby@gmail.com'),<br>)<br>```<br><br>6. You can set secure media folder in the settings.py, default is 'secure-media' folder::<br>```python<br>SECURE_MEDIA_URL_PREFIX = '/secure-media/'<br>SECURE_MEDIA_ROOT = os.path.join(BASE_DIR, 'secure-media/')<br>```<br><br>7. To send notification mails with signed urls to related users set::<br>```python<br>SEND_SECUP_NOTIFICATION_MAILS = True<br>```<br><br>8. Edit notification email templates if you set true previous setting. All templates included related 'SecureUpload' object as context::<br><br>- templates/secup/email_invited.html<br>- templates/secup/email_invited.txt<br>- templates/secup/email_managers.html<br>- templates/secup/email_managers.txt<br>- templates/secup/email_uploaded.html<br>- templates/secup/email_uploaded.txt<br><br>9. Set default timeout for signed urls::<br>```python<br>SECUP_LINKS_VALID_SECONDS = 7200  # default is 2 hours <br>```<br><br><br>## To Check Locally<br><br>```sh<br>    python manage.py runserver 127.0.0.1:8000<br>```<br>To invite external user to upload file (django staff required):<br>http://127.0.0.1:8000/secup/create-invite/<br><br>To see files uploaded to you (django user required):<br>http://127.0.0.1:8000/secup/files/<br><br>To upload files to staff members (django user required):<br>http://127.0.0.1:8000/secup/upload-to-secup/\n          </div>"}, "last_serial": 4412778, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "a55565f2f3f6dbd421942f24509df2c2", "sha256": "b92f89efcb66e9b736fc48810ce36175e08e5f2f0e362c91843913044f60383e"}, "downloads": -1, "filename": "django-secup-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a55565f2f3f6dbd421942f24509df2c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9599, "upload_time": "2018-10-24T21:54:42", "upload_time_iso_8601": "2018-10-24T21:54:42.159100Z", "url": "https://files.pythonhosted.org/packages/14/17/7818b752aa558c29d97893f77d1afd50914d2873abb67d36f9bc6263b1a9/django-secup-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a55565f2f3f6dbd421942f24509df2c2", "sha256": "b92f89efcb66e9b736fc48810ce36175e08e5f2f0e362c91843913044f60383e"}, "downloads": -1, "filename": "django-secup-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a55565f2f3f6dbd421942f24509df2c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9599, "upload_time": "2018-10-24T21:54:42", "upload_time_iso_8601": "2018-10-24T21:54:42.159100Z", "url": "https://files.pythonhosted.org/packages/14/17/7818b752aa558c29d97893f77d1afd50914d2873abb67d36f9bc6263b1a9/django-secup-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:41 2020"}