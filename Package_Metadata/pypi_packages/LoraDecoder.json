{"info": {"author": "timvandervoord", "author_email": "timvandervoord@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# LoraPacket decoder\nPython library for decoding LoraWAN 1.0. protocol messages\n\n## Example usage\n\nThe RAW HTTP response data of the LoraWAN concentrator containing the data\n```\n\tRAW_LORA_DATA = 'HTTP/1.1 200 OK Date: Mon, 27 Jul 2009 12:28:53 GMT Server: Apache/2.2.14 (Win32) Last-Modified: Wed, 22 Jul 2009 19:15:56 GMT Content-Length: 88 Content-Type: text/html Connection: Closed <?xml version=\"1.0\" encoding=\"UTF-8\"?><DevEUI_uplink xmlns=\"http://uri.actility.com/lora\"><Time>2015-06-04T22:25:04.417+02:00</Time><DevEUI>00000000ABBA0005</DevEUI><FPort>10</FPort><FCntUp>10</FCntUp><FCntDn>0</FCntDn><payload_hex>74696d0ded3b347834</payload_hex><mic_hex>b034b910</mic_hex><Lrcid>00000065</Lrcid><LrrRSSI>-76.000000</LrrRSSI><LrrSNR>9.500000</LrrSNR><SpFact>7</SpFact><SubBand>G1</SubBand><Channel>LC3</Channel><DevLrrCnt>1</DevLrrCnt><Lrrid>2900000b</Lrrid><LrrLAT>52.070118</LrrLAT><LrrLON>4.478749</LrrLON><Lrrs><Lrr><Lrrid>2900000b</Lrrid><LrrRSSI>-76.000000</LrrRSSI><LrrSNR>9.500000</LrrSNR></Lrr></Lrrs><CustomerID>100000571</CustomerID><CustomerData>{\"alr\":{\"pro\":\"MC/IOT\",\"ver\":\"1\"}}</CustomerData></DevEUI_uplink>'\n```\n\nDefine a format for the package. This can also be done after initialization of the decoder class, for example if you wish to select for format based on UID, customerID or customerData\n```\n\tLPformat = loraPayLoad()\n```\n\nDefine format items as <MEANING>, <NUMBER OF BYTES IN PAYLOAD>, <REPRESENTATION CHOOSE: INT, STRING or FLOAT>\n```\n\tLPformat.addItem('TEMP', \t1, 'INT')  # Add item TEMP that is represented in the first byte as an integer in the payload\n\tLPformat.addItem('HUM', \t1, 'INT')  \t# Add item HUM that is represented in the second byte as an integer in the payload\n```\n\nDefine a new loraPacketDecoder class\n```\n\tLp = loraPacketDecoder(RAW_LORA_DATA, LPformat)\n\n\t## Lp.setFormat(LPformat) # for setting the format after initialization\n```\n\nPrint the received data using the format\n```\n\tfor (key, value) in lpD.getPayloadItems().iteritems():\n\t\tprint key, value\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Timvandervoord/LoraDecoder.git", "keywords": null, "license": "GNU", "maintainer": null, "maintainer_email": null, "name": "LoraDecoder", "package_url": "https://pypi.org/project/LoraDecoder/", "platform": "any", "project_url": "https://pypi.org/project/LoraDecoder/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Timvandervoord/LoraDecoder.git"}, "release_url": "https://pypi.org/project/LoraDecoder/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "LoRaWan1.0 packet decoder", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # LoraPacket decoder<br>Python library for decoding LoraWAN 1.0. protocol messages<br><br>## Example usage<br><br>The RAW HTTP response data of the LoraWAN concentrator containing the data<br>```<br>\tRAW_LORA_DATA = 'HTTP/1.1 200 OK Date: Mon, 27 Jul 2009 12:28:53 GMT Server: Apache/2.2.14 (Win32) Last-Modified: Wed, 22 Jul 2009 19:15:56 GMT Content-Length: 88 Content-Type: text/html Connection: Closed &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;DevEUI_uplink xmlns=\"http://uri.actility.com/lora\"&gt;&lt;Time&gt;2015-06-04T22:25:04.417+02:00&lt;/Time&gt;&lt;DevEUI&gt;00000000ABBA0005&lt;/DevEUI&gt;&lt;FPort&gt;10&lt;/FPort&gt;&lt;FCntUp&gt;10&lt;/FCntUp&gt;&lt;FCntDn&gt;0&lt;/FCntDn&gt;&lt;payload_hex&gt;74696d0ded3b347834&lt;/payload_hex&gt;&lt;mic_hex&gt;b034b910&lt;/mic_hex&gt;&lt;Lrcid&gt;00000065&lt;/Lrcid&gt;&lt;LrrRSSI&gt;-76.000000&lt;/LrrRSSI&gt;&lt;LrrSNR&gt;9.500000&lt;/LrrSNR&gt;&lt;SpFact&gt;7&lt;/SpFact&gt;&lt;SubBand&gt;G1&lt;/SubBand&gt;&lt;Channel&gt;LC3&lt;/Channel&gt;&lt;DevLrrCnt&gt;1&lt;/DevLrrCnt&gt;&lt;Lrrid&gt;2900000b&lt;/Lrrid&gt;&lt;LrrLAT&gt;52.070118&lt;/LrrLAT&gt;&lt;LrrLON&gt;4.478749&lt;/LrrLON&gt;&lt;Lrrs&gt;&lt;Lrr&gt;&lt;Lrrid&gt;2900000b&lt;/Lrrid&gt;&lt;LrrRSSI&gt;-76.000000&lt;/LrrRSSI&gt;&lt;LrrSNR&gt;9.500000&lt;/LrrSNR&gt;&lt;/Lrr&gt;&lt;/Lrrs&gt;&lt;CustomerID&gt;100000571&lt;/CustomerID&gt;&lt;CustomerData&gt;{\"alr\":{\"pro\":\"MC/IOT\",\"ver\":\"1\"}}&lt;/CustomerData&gt;&lt;/DevEUI_uplink&gt;'<br>```<br><br>Define a format for the package. This can also be done after initialization of the decoder class, for example if you wish to select for format based on UID, customerID or customerData<br>```<br>\tLPformat = loraPayLoad()<br>```<br><br>Define format items as &lt;MEANING&gt;, &lt;NUMBER OF BYTES IN PAYLOAD&gt;, &lt;REPRESENTATION CHOOSE: INT, STRING or FLOAT&gt;<br>```<br>\tLPformat.addItem('TEMP', \t1, 'INT')  # Add item TEMP that is represented in the first byte as an integer in the payload<br>\tLPformat.addItem('HUM', \t1, 'INT')  \t# Add item HUM that is represented in the second byte as an integer in the payload<br>```<br><br>Define a new loraPacketDecoder class<br>```<br>\tLp = loraPacketDecoder(RAW_LORA_DATA, LPformat)<br><br>\t## Lp.setFormat(LPformat) # for setting the format after initialization<br>```<br><br>Print the received data using the format<br>```<br>\tfor (key, value) in lpD.getPayloadItems().iteritems():<br>\t\tprint key, value<br>```\n          </div>"}, "last_serial": 2177006, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "556a7b9cee09478301077b5b0dd527e3", "sha256": "f6024faea07474924b5eb47ff368499bc616d7594ef3ab92146a6347d19cb7f6"}, "downloads": -1, "filename": "LoraDecoder-0.1.0-py2.7.egg", "has_sig": false, "md5_digest": "556a7b9cee09478301077b5b0dd527e3", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 11979, "upload_time": "2016-06-20T11:08:47", "upload_time_iso_8601": "2016-06-20T11:08:47.442803Z", "url": "https://files.pythonhosted.org/packages/68/a7/a59b0ed4decc6c1d5341bb5d8209aa960fd83ada1d6a221f1224eed638f3/LoraDecoder-0.1.0-py2.7.egg", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "556a7b9cee09478301077b5b0dd527e3", "sha256": "f6024faea07474924b5eb47ff368499bc616d7594ef3ab92146a6347d19cb7f6"}, "downloads": -1, "filename": "LoraDecoder-0.1.0-py2.7.egg", "has_sig": false, "md5_digest": "556a7b9cee09478301077b5b0dd527e3", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 11979, "upload_time": "2016-06-20T11:08:47", "upload_time_iso_8601": "2016-06-20T11:08:47.442803Z", "url": "https://files.pythonhosted.org/packages/68/a7/a59b0ed4decc6c1d5341bb5d8209aa960fd83ada1d6a221f1224eed638f3/LoraDecoder-0.1.0-py2.7.egg", "yanked": false}], "timestamp": "Fri May  8 00:43:50 2020"}