{"info": {"author": "Jonathan Tushman", "author_email": "jonathan@zefr.com", "bugtrack_url": null, "classifiers": [], "description": "dict_digger\n===========\n\nDigs into Dicts\n\nUseful syntax for digging into nested dictionaries, lists and tuples, and removes the need to check if a key or index exists, or handling of\nKeyError or IndexError\n\n\nInstallation\n------------\n\n.. code-block:: bash\n\n    $ pip install dict_digger\n\n\nUsage\n-----\n\n.. code-block:: python\n\n    import dict_digger\n\n    h = {\n        'a': {\n             'b': 'tuna',\n             'c': 'fish'\n         },\n         'b': {}\n    }\n\n    result = dict_digger.dig(h, 'a','b')\n    print result  # prints 'tuna'\n\n    result = dict_digger.dig(h, 'c','a')\n    print result # prints None\n    # Important!!  Does not through an error, just returns None\n\n    #but if you like\n    result = dict_digger.dig(h, 'c','a', fail=True)\n    # raises a KeyError\n\n    # also support complex objects so ...\n\n    complex = {\n        'a': {\n             ['tuna','fish']\n         },\n         'b': {}\n    }\n    result = dict_digger.dig(complex, 'a',0)\n    print result #prints tuna\n\n\n\nAlternatives\n------------\n\n.. code-block:: python\n\n    try:\n        result = h['c']['a']\n    except KeyError:\n        result = None\n\nTesting\n-------\n\nWe are using nose\n\n.. code-block:: bash\n\n    $ nosetests\n\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jtushman/dict_digger", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "dict_digger", "package_url": "https://pypi.org/project/dict_digger/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dict_digger/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/jtushman/dict_digger"}, "release_url": "https://pypi.org/project/dict_digger/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Useful syntax for digging into nested dictionaries, lists and tuples, and removes the need to check if a key exists", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Digs into Dicts</p>\n<p>Useful syntax for digging into nested dictionaries, lists and tuples, and removes the need to check if a key or index exists, or handling of\nKeyError or IndexError</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install dict_digger\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">dict_digger</span>\n\n<span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n         <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"s1\">'tuna'</span><span class=\"p\">,</span>\n         <span class=\"s1\">'c'</span><span class=\"p\">:</span> <span class=\"s1\">'fish'</span>\n     <span class=\"p\">},</span>\n     <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">dict_digger</span><span class=\"o\">.</span><span class=\"n\">dig</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"s1\">'a'</span><span class=\"p\">,</span><span class=\"s1\">'b'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">result</span>  <span class=\"c1\"># prints 'tuna'</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">dict_digger</span><span class=\"o\">.</span><span class=\"n\">dig</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"s1\">'c'</span><span class=\"p\">,</span><span class=\"s1\">'a'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">result</span> <span class=\"c1\"># prints None</span>\n<span class=\"c1\"># Important!!  Does not through an error, just returns None</span>\n\n<span class=\"c1\">#but if you like</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">dict_digger</span><span class=\"o\">.</span><span class=\"n\">dig</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"s1\">'c'</span><span class=\"p\">,</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"n\">fail</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># raises a KeyError</span>\n\n<span class=\"c1\"># also support complex objects so ...</span>\n\n<span class=\"nb\">complex</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n         <span class=\"p\">[</span><span class=\"s1\">'tuna'</span><span class=\"p\">,</span><span class=\"s1\">'fish'</span><span class=\"p\">]</span>\n     <span class=\"p\">},</span>\n     <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"p\">{}</span>\n<span class=\"p\">}</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">dict_digger</span><span class=\"o\">.</span><span class=\"n\">dig</span><span class=\"p\">(</span><span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"s1\">'a'</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">result</span> <span class=\"c1\">#prints tuna</span>\n</pre>\n</div>\n<div id=\"alternatives\">\n<h2>Alternatives</h2>\n<pre><span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">h</span><span class=\"p\">[</span><span class=\"s1\">'c'</span><span class=\"p\">][</span><span class=\"s1\">'a'</span><span class=\"p\">]</span>\n<span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>We are using nose</p>\n<pre>$ nosetests\n</pre>\n</div>\n\n          </div>"}, "last_serial": 913212, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "10152038b0f8d35faf6885ee80cb21d1", "sha256": "de05951de8a0e862bd597cf5755a5e037bced6db38f31254f16958d70b41da33"}, "downloads": -1, "filename": "dict_digger-0.1.1.tar.gz", "has_sig": false, "md5_digest": "10152038b0f8d35faf6885ee80cb21d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1314, "upload_time": "2013-06-18T13:03:20", "upload_time_iso_8601": "2013-06-18T13:03:20.081137Z", "url": "https://files.pythonhosted.org/packages/11/d3/92f82a91bc89153bc5b9477d7498c863c43fdd38c773e37789daec617f8c/dict_digger-0.1.1.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "0cad877db7638700ce738ece96ccdd9b", "sha256": "85db80169b93bfa3df55f1f111bc2ca695a48e7f4cbcb09aaee37df52094efdd"}, "downloads": -1, "filename": "dict_digger-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0cad877db7638700ce738ece96ccdd9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1627, "upload_time": "2013-11-07T02:06:59", "upload_time_iso_8601": "2013-11-07T02:06:59.593254Z", "url": "https://files.pythonhosted.org/packages/77/86/21a269637c44bbcd0a6b1cf8e2e72e56ebaf70e354cce4df852089a907ed/dict_digger-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0cad877db7638700ce738ece96ccdd9b", "sha256": "85db80169b93bfa3df55f1f111bc2ca695a48e7f4cbcb09aaee37df52094efdd"}, "downloads": -1, "filename": "dict_digger-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0cad877db7638700ce738ece96ccdd9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1627, "upload_time": "2013-11-07T02:06:59", "upload_time_iso_8601": "2013-11-07T02:06:59.593254Z", "url": "https://files.pythonhosted.org/packages/77/86/21a269637c44bbcd0a6b1cf8e2e72e56ebaf70e354cce4df852089a907ed/dict_digger-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:33 2020"}