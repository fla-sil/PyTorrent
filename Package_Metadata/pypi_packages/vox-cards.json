{"info": {"author": "VoxLight", "author_email": "tkkt392@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Vox Cards\nThis is an easy to use dependancy free deck manager, making it easy to develope the logic of\ncard games without worrying about creating ways to handle the decks, cards, and hands.\n\n### Installation\nInstall using pip:\n`py -m pip install vox_cards`\n\n### Basic Usage\n```Python\nimport vox_cards.deck as cards\n\ndeck = cards.Deck(2) # Pass the number of hands to construct this deck with.\n\ndeck.deal() # The default number of cards to deal is 7\n\nplayer_1, player_2 = deck.hands\n\nfor card in player_1: # Print all cards in the first hand.\n    print(card.full) # Prints the full name of the card (i.e. \"10 of Clubs\").\n```\nKeep in mind that hands are iterable, but only return the cards they hold.\nWith that in mind, there is also the ability for hands to draw and discard cards.\n```Python\n# This will draw the top 2 cards for each palyer, then discard 2 cards at random.\nplayer_1.draw(2)\nplayer_1.discard(2)\n\nplayer_2.draw(2)\nplayer_2.discard(2)\n\n\n# You can also pass a card instance to hand.discard for discarding specific card(s).\nplayer_1.discard(player_1.cards[0])\nplayer_2.discard(player_2.cards[0])\n```\n\n##### More complex use case\nHere is a more complex use case that features the main components of this module. It doesn't use any logic, but hopefully it gives you an idea of some use cases for this project.\n```Python\nimport vox_cards.deck as cards\n\ndeck = cards.Deck(3)\n\nfor _ in range(3):\n    deck.shuffle()\n\nplayer_1, player_2, river = deck.hands\n\nfor _ in range(2):\n    player_1.draw()\n    player_2.draw()\n\nriver.draw(3)\nriver.draw()\nriver.draw()\n\nprint(\"\\nPlayer 1's hand:\")\nfor card in player_1:\n    print(card.full)\n\nprint(\"\\nPlayer 2's hand:\")\nfor card in player_2:\n    print(card.full)\n\nprint(\"\\n\\nAnd the river is:\")\nfor card in river:\n    print(card.full)\n```\n\nHere is the output for the code above:\n```Python\n>>>py example.py\nPlayer 1's hand:\nQueen of Spades\nJack of Spades\n\nPlayer 2's hand:\n6 of Clubs\n8 of Spades\n\n\nAnd the river is:\n6 of Hearts\n8 of Clubs\n5 of Hearts\n4 of Hearts\n9 of Spades\n```\n\nLooks like player 2 wins with a 2-pair, how fitting.\n\n### Documentation\n\n<s>This entire project is still a WIP and has not been officially released yet.\nFull documentation will come for this project whenever it has been released\nin a stable state. Until then, refer to the usage examples and the github\nrepo for most use cases. </s>\n\nFor a full list of everything you can do, view the [docs](https://vox-cards.readthedocs.io/en/latest/)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/voxlight/vox_cards", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "vox-cards", "package_url": "https://pypi.org/project/vox-cards/", "platform": "", "project_url": "https://pypi.org/project/vox-cards/", "project_urls": {"Homepage": "https://github.com/voxlight/vox_cards"}, "release_url": "https://pypi.org/project/vox-cards/0.1.8/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A dependancy free deck, card, and hand manager.", "version": "0.1.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Vox Cards</h1>\n<p>This is an easy to use dependancy free deck manager, making it easy to develope the logic of\ncard games without worrying about creating ways to handle the decks, cards, and hands.</p>\n<h3>Installation</h3>\n<p>Install using pip:\n<code>py -m pip install vox_cards</code></p>\n<h3>Basic Usage</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">vox_cards.deck</span> <span class=\"k\">as</span> <span class=\"nn\">cards</span>\n\n<span class=\"n\">deck</span> <span class=\"o\">=</span> <span class=\"n\">cards</span><span class=\"o\">.</span><span class=\"n\">Deck</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"c1\"># Pass the number of hands to construct this deck with.</span>\n\n<span class=\"n\">deck</span><span class=\"o\">.</span><span class=\"n\">deal</span><span class=\"p\">()</span> <span class=\"c1\"># The default number of cards to deal is 7</span>\n\n<span class=\"n\">player_1</span><span class=\"p\">,</span> <span class=\"n\">player_2</span> <span class=\"o\">=</span> <span class=\"n\">deck</span><span class=\"o\">.</span><span class=\"n\">hands</span>\n\n<span class=\"k\">for</span> <span class=\"n\">card</span> <span class=\"ow\">in</span> <span class=\"n\">player_1</span><span class=\"p\">:</span> <span class=\"c1\"># Print all cards in the first hand.</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">card</span><span class=\"o\">.</span><span class=\"n\">full</span><span class=\"p\">)</span> <span class=\"c1\"># Prints the full name of the card (i.e. \"10 of Clubs\").</span>\n</pre>\n<p>Keep in mind that hands are iterable, but only return the cards they hold.\nWith that in mind, there is also the ability for hands to draw and discard cards.</p>\n<pre><span class=\"c1\"># This will draw the top 2 cards for each palyer, then discard 2 cards at random.</span>\n<span class=\"n\">player_1</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">player_1</span><span class=\"o\">.</span><span class=\"n\">discard</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">player_2</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">player_2</span><span class=\"o\">.</span><span class=\"n\">discard</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># You can also pass a card instance to hand.discard for discarding specific card(s).</span>\n<span class=\"n\">player_1</span><span class=\"o\">.</span><span class=\"n\">discard</span><span class=\"p\">(</span><span class=\"n\">player_1</span><span class=\"o\">.</span><span class=\"n\">cards</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"n\">player_2</span><span class=\"o\">.</span><span class=\"n\">discard</span><span class=\"p\">(</span><span class=\"n\">player_2</span><span class=\"o\">.</span><span class=\"n\">cards</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n</pre>\n<h5>More complex use case</h5>\n<p>Here is a more complex use case that features the main components of this module. It doesn't use any logic, but hopefully it gives you an idea of some use cases for this project.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">vox_cards.deck</span> <span class=\"k\">as</span> <span class=\"nn\">cards</span>\n\n<span class=\"n\">deck</span> <span class=\"o\">=</span> <span class=\"n\">cards</span><span class=\"o\">.</span><span class=\"n\">Deck</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n    <span class=\"n\">deck</span><span class=\"o\">.</span><span class=\"n\">shuffle</span><span class=\"p\">()</span>\n\n<span class=\"n\">player_1</span><span class=\"p\">,</span> <span class=\"n\">player_2</span><span class=\"p\">,</span> <span class=\"n\">river</span> <span class=\"o\">=</span> <span class=\"n\">deck</span><span class=\"o\">.</span><span class=\"n\">hands</span>\n\n<span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">):</span>\n    <span class=\"n\">player_1</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">()</span>\n    <span class=\"n\">player_2</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">()</span>\n\n<span class=\"n\">river</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">river</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">()</span>\n<span class=\"n\">river</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">Player 1's hand:\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">card</span> <span class=\"ow\">in</span> <span class=\"n\">player_1</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">card</span><span class=\"o\">.</span><span class=\"n\">full</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">Player 2's hand:\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">card</span> <span class=\"ow\">in</span> <span class=\"n\">player_2</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">card</span><span class=\"o\">.</span><span class=\"n\">full</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\n\\n</span><span class=\"s2\">And the river is:\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">card</span> <span class=\"ow\">in</span> <span class=\"n\">river</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">card</span><span class=\"o\">.</span><span class=\"n\">full</span><span class=\"p\">)</span>\n</pre>\n<p>Here is the output for the code above:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span><span class=\"n\">py</span> <span class=\"n\">example</span><span class=\"o\">.</span><span class=\"n\">py</span>\n<span class=\"n\">Player</span> <span class=\"mi\">1</span><span class=\"s1\">'s hand:</span>\n<span class=\"n\">Queen</span> <span class=\"n\">of</span> <span class=\"n\">Spades</span>\n<span class=\"n\">Jack</span> <span class=\"n\">of</span> <span class=\"n\">Spades</span>\n\n<span class=\"n\">Player</span> <span class=\"mi\">2</span><span class=\"s1\">'s hand:</span>\n<span class=\"mi\">6</span> <span class=\"n\">of</span> <span class=\"n\">Clubs</span>\n<span class=\"mi\">8</span> <span class=\"n\">of</span> <span class=\"n\">Spades</span>\n\n\n<span class=\"n\">And</span> <span class=\"n\">the</span> <span class=\"n\">river</span> <span class=\"ow\">is</span><span class=\"p\">:</span>\n<span class=\"mi\">6</span> <span class=\"n\">of</span> <span class=\"n\">Hearts</span>\n<span class=\"mi\">8</span> <span class=\"n\">of</span> <span class=\"n\">Clubs</span>\n<span class=\"mi\">5</span> <span class=\"n\">of</span> <span class=\"n\">Hearts</span>\n<span class=\"mi\">4</span> <span class=\"n\">of</span> <span class=\"n\">Hearts</span>\n<span class=\"mi\">9</span> <span class=\"n\">of</span> <span class=\"n\">Spades</span>\n</pre>\n<p>Looks like player 2 wins with a 2-pair, how fitting.</p>\n<h3>Documentation</h3>\n<p>&lt;s&gt;This entire project is still a WIP and has not been officially released yet.\nFull documentation will come for this project whenever it has been released\nin a stable state. Until then, refer to the usage examples and the github\nrepo for most use cases. &lt;/s&gt;</p>\n<p>For a full list of everything you can do, view the <a href=\"https://vox-cards.readthedocs.io/en/latest/\" rel=\"nofollow\">docs</a></p>\n\n          </div>"}, "last_serial": 6536705, "releases": {"0.1.7": [{"comment_text": "", "digests": {"md5": "138c482e42878a28473729fd649cce17", "sha256": "ae9f98b2888fabd75b0cb5100bdf1ba84aa616e16d3db43e6098db0b6c06c7de"}, "downloads": -1, "filename": "vox_cards-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "138c482e42878a28473729fd649cce17", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6052, "upload_time": "2020-01-27T12:46:24", "upload_time_iso_8601": "2020-01-27T12:46:24.103044Z", "url": "https://files.pythonhosted.org/packages/2c/fb/ab4608d65bf29e279029bec810569c289b0b99b6f8230697625d18d2e491/vox_cards-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24ed2ecb1209e09dc57364a57501d9d8", "sha256": "8a427dd6565b89887f800dc7972b6b586eed65f6a55125082b9fafcb22b25db4"}, "downloads": -1, "filename": "vox_cards-0.1.7.tar.gz", "has_sig": false, "md5_digest": "24ed2ecb1209e09dc57364a57501d9d8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4683, "upload_time": "2020-01-27T12:46:25", "upload_time_iso_8601": "2020-01-27T12:46:25.974466Z", "url": "https://files.pythonhosted.org/packages/21/fb/2af92f2883bc0a39a23cad3da371f0fe51a5b40fa4da6ccc49a9a6f4bd6f/vox_cards-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "8d5ec0f542e7473e0844bbfbe906e609", "sha256": "5b74e460b430bc9faf4457a9208eaeb3556e09e17feec6c94b1a0c71d6acfb3a"}, "downloads": -1, "filename": "vox_cards-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "8d5ec0f542e7473e0844bbfbe906e609", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6744, "upload_time": "2020-01-29T08:13:06", "upload_time_iso_8601": "2020-01-29T08:13:06.725109Z", "url": "https://files.pythonhosted.org/packages/c4/a5/9812a7bd74ad3910dbb8e8ce1aef8397eda6b2e16c4c6282dba4e7fc4711/vox_cards-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae763c9159acc406f1f0f8480b8b446a", "sha256": "3c5200adf879895eed0d5a018fb42a876fc51cd8b5e1599c42c278fc94898853"}, "downloads": -1, "filename": "vox_cards-0.1.8.tar.gz", "has_sig": false, "md5_digest": "ae763c9159acc406f1f0f8480b8b446a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5740, "upload_time": "2020-01-29T08:13:07", "upload_time_iso_8601": "2020-01-29T08:13:07.828718Z", "url": "https://files.pythonhosted.org/packages/40/05/b592c02fc58718cf98f8e6920363630c78b25b075799fc9ea27934a04071/vox_cards-0.1.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8d5ec0f542e7473e0844bbfbe906e609", "sha256": "5b74e460b430bc9faf4457a9208eaeb3556e09e17feec6c94b1a0c71d6acfb3a"}, "downloads": -1, "filename": "vox_cards-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "8d5ec0f542e7473e0844bbfbe906e609", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6744, "upload_time": "2020-01-29T08:13:06", "upload_time_iso_8601": "2020-01-29T08:13:06.725109Z", "url": "https://files.pythonhosted.org/packages/c4/a5/9812a7bd74ad3910dbb8e8ce1aef8397eda6b2e16c4c6282dba4e7fc4711/vox_cards-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae763c9159acc406f1f0f8480b8b446a", "sha256": "3c5200adf879895eed0d5a018fb42a876fc51cd8b5e1599c42c278fc94898853"}, "downloads": -1, "filename": "vox_cards-0.1.8.tar.gz", "has_sig": false, "md5_digest": "ae763c9159acc406f1f0f8480b8b446a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5740, "upload_time": "2020-01-29T08:13:07", "upload_time_iso_8601": "2020-01-29T08:13:07.828718Z", "url": "https://files.pythonhosted.org/packages/40/05/b592c02fc58718cf98f8e6920363630c78b25b075799fc9ea27934a04071/vox_cards-0.1.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:34:16 2020"}