{"info": {"author": "Martijn Faassen and community", "author_email": "info@infrae.com", "bugtrack_url": null, "classifiers": ["Framework :: Zope2", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Formulator\n==========\n\nFormulator is a tool to help with the creation and validation of web\nforms. Form fields are stored as objects in Zope 2, in a special Form\nfolder.\n\n.. contents::\n\n\nFeatures\n--------\n\n* manage form fields through the Zope management interface.\n\n* manage field look & feel as well as validation and processing\n  behavior.\n\n* automatic field validation.\n\n* determine field order and group fields together.\n\n* easy extensibility with new field types.\n\n* online help.\n\n* serialization of form to XML and back.\n\n\nDependencies\n------------\n\nYou need to install either zeam.form. The best to install this product\nis to use buildout and let it resolves the dependencies.\n\nInformation\n-----------\n\nFormulator comes with online help, so click on *Help!* in the Zope\nmanagement screens. If you want your brain to explode, read the\n*How Formulator Eats its Own Dogfood* help topic.\n\nInformation is also available at the Formulator web site::\n\n   http://www.infrae.com/products/formulator\n\nThere are also instructions to join the Formulator mailing list there.\nDiscussion about Formulator should preferably happen on the mailing list\nfirst, though you can always mail me as well. But please consider the\nlist if you have questions or suggestions.\n\nEven more info can be found by reading the source. :)\n\nCredits\n=======\n\nDevelopers:\n\n- Martijn Faassen (faassen@vet.uu.nl) -- Main developer, design and\n  implementation.\n\n- Clemens Klein-Robbenhaar (robbenhaar at espresto.com) -- Many\n  bugfixes and feature additions.\n\nMany thanks go to:\n\n- Kit Blake (kitblake at v2.nl) -- UI help and design help.\n\n- Yury Don (yura at vpcit.ru) -- contributed EmailField and\n  FloatField, design and implementation help.\n\n- Stephan Richter (srichter at iuveno-net.de) -- contributed LinkField\n  and FileField. Contributed PatternChecker module used by\n  PatternField. Other design and implementation help.\n\n- Nicola Larosa (nico at tekNico.net) -- feedback and bugfixes.\n\n- Magnus Heino (magus.heino at rivermen.se) -- feedback and bugfixes.\n\n- Joel Burton (jburton at scw.org) -- feedback and bugfixes.\n\n- Ulrich Eck (ueck at net-labs.de) -- much help and patience with the\n  TALES tab.\n\n- Dirk Datzert (Dirk.Datzert at rasselstein-hoesch.de) -- feedback and\n  bugfixes.\n\n- Max Petrich (petrich.max at kis-solution.de) -- feedback and\n  bugfixes.\n\n- Matt Behrens (matt.behrens at kohler.com) -- feedback and bugfixes.\n\n- Nikolay Kim (fafhrd at datacom.kz) -- code inspiration for\n  XMLToForm/FormToXML.\n\n- Godefroid Chapelle (gotcha at swing.be) -- Bugfixes.\n\n- Alan Runyan (runyaga at runyaga.com) -- Fix to email regular expression.\n\n- Sascha Welter (welter at network-ag.com) -- Extensive help with email\n  regular expression.\n\n- Christian Zagrodnick (cz at gocept.com) -- Unicode awareness fixes\n  and XML entry form.\n\n- Iutin Vyacheslav (iutin at whirix.com) -- am/pm feature for DateTime\n  fields.\n\n- Kapil Thangavelu (k_vertigo at objectrealms.net) -- Enabled\n  ':record' rendering.\n\n- Pierre-Julien Grizel (grizel at ingeniweb.com) -- ProductForm.\n\n- Sebastien Robin (seb at nexedi.com) -- more consistent ordering in\n  XML serialization, bugfixes\n\n- Guido Wesdorp (guido at infrae.com) -- Added extra_item attribute on\n  compound fields, bugfixes. Fixed unicode error in XMLToForm.\n\n- Yura Petrov (ypetrov at naumen.ru) -- Various FSForm related\n  improvements.\n\n- Vladimir Voznesensky (vovic at smtp.ru) -- Enabling/disabling of fields,\n  bugfix in ``render_view``.\n\n- Jeff Kowalczyk -- Whitespace normalization of sources.\n\n- Paul Winkler, Dieter Maurer -- help with fix so that help system\n  doesn't cause ZODB writes on every startup.\n\n- Garito (garito at sistes.net) -- bugfix with the XML serialization\n  of DateTime values.\n\n- Maciej Pietrzak (magh at apcoh.org) -- Fixes for DateTime validation\n  issues in Zope 2.7.\n\n- Patrick Earl (pat at dril.com) -- Fixes for DateTime / CheckBox\n  field rendering.\n\n- He Wei (hewei at ied.org.cn) -- ZMI and Unicode related fixes.\n\n- Bertrand Croq (bertrand.croq at freeskop.com) -- Fixes for a Unicode\n  issue related to titles of new fields and label for radiobuttons\n  patch\n\n- Ian Duggan (ian at swishmark.com) -- \"Hide day\" in DateTimeField\n  feature\n\n- Reinout van Rees (reinout at vanrees.org) -- LabelField validation\n  bugfix.\n\n- Mikael Barbero (mikael at emu-france.com) -- ZMI enhancement.\n\nSpecial thanks also goes to Rik Hoekstra.\n\nAlso a thank you to those few valiant souls who suffered through the\nbugs of ZFormulator, the previous implementation. Let's hope this\none's better!\n\n\n\n\n\nChanges\n=======\n\n1.15.5 (2013/10/08)\n-------------------\n\n- Fix various unicode issues following the modifications of the 1.15\n  series.\n\n1.15.4 (2013/08/26)\n-------------------\n\n- ``test_form`` now except a list of bad identifiers for fields as a\n  parameter. An error will be returned if one of those identifier is\n  used by a field.\n\n- HTML entities are now escaped by default inside field values.\n\n- Formulator Widgets will now return unicode when it is possible.\n\n- ``zeam.form`` extrators have been updated to have the same Acquisition\n  wrapping than the ``zeam.form`` widgets.\n\n- Dependencies got properly defined in ``setup.py`` to facilate the\n  installation of the product.\n\n1.15.3 (2013/05/23)\n-------------------\n\n- Fix unicode issues with the integration of ``zeam.form``.\n\n- Fix required and readonly attributes with the interface of\n  ``zeam.form``.\n\n- Fix ListTextAreaField so it properly works with values from the request.\n\n1.15.2 (2013/03/05)\n-------------------\n\n- Fix compability with the latest version of ``zeam.form``.\n\n1.15.1 (2012/12/12)\n-------------------\n\n- Don't validate values against criterias when deserializing\n  when. This makes impossible to deserialize values that are\n  well-formed, but invalid on a given instance, loosing all\n  information by doing so.\n\n1.15 (2012/09/04)\n-----------------\n\n- Add support to integrate with ``zeam.form``.\n\n- Add support for validators to validate already extracted values from\n  the request.\n\n- Some level of validation can be disabled when extracting values from\n  the request, if a value with the id ``field.id_novalidate`` is\n  present as well in the request. This is usefull to extract form\n  values from a request intended for an older version of your form.\n\n1.14 (2011/11/10)\n-----------------\n\n- Compatibility fixes for Zope 2.13 and Python 2.7.\n\n- DateTime widget now support datetime values.\n\n- Add a method ``test_form`` on a Form to know if it is broken (have\n  ZODB broken fields, or other problems).\n\n- Add a way to programmatically change all fields options for a form.\n\n- Add support to serialize/deserialize form values on a content\n  object (see the adapters code).\n\n- TAL expressions in fields now have access to a context value: the\n  acquisition parent of the form.\n\n- Add some fields that where somewhere else in the past,\n  EmailLinesField and an InterfaceField.\n\n- Add support for interfaces in XML import/export, for an interface\n  field.\n\n- Support for FileSystemSite is optional.\n\n1.13 (2010/07/15)\n-----------------\n\n- Compatibility fixes for Zope 2.12 and Python 2.6. Those are the\n  requirements now.\n\nPorted from 1.11 branch:\n\n- Fix problem with MultiListFields not showing values from request\n  if in unicode mode, as the incoming values from the request\n  did not get converted to unicode in the Field._get_default\n\n- The \"convert_unicode\" helper now expects a separate parameter\n  \"encoding\" instead of assuming utf8 encoding always.\n\n\nPorted from 1.12 branch:\n\n- The majority of Widgets now auto-generate an html 'id' attribute for the\n  rendered widget.  This 'id' attribute is accessible in page templates via\n  the field/html_id.  If the field has an id attribute set in the 'extra'\n  parameter, the value of this attribute is returned, rather than the\n  auto-generated id.  The html id and name attributes are now visible\n  in the ZMI edit screen for the fields.  The widgets which do not have\n  html_ids are: RadioWidget, MultiCheckBoxWidget, DateTimeWidget.  The widgets\n  have a property \"has_html_id\" that templates can use to determine whether\n  to place a label around the field title.\n\n\n1.11.6 (2009/11/11)\n-------------------\n- Added the option for the DateTime Widget to use a popup calendar to input\n  the date and time.\n\n- The DateTime Widget popup defaults to midnight for the time.\n\n- The DateTime Widget now understands both upper and lower case 'am' and 'pm'.\n\n- Fix the factor that a REQUEST is required to use a field object on\n  recent Zope (2.11).\n\n- Fixed field events: copy of forms containing fields and folders\n  containing forms was broken.\n\n- Added a 'required' validator property to FileFields\n\n- Added a validator for FileFields to check whether the value is a\n  StringType, which is an indicator that the form encoding is set\n  incorrectly.  The error message informs the user the form\n  encoding should be set to multipart/form-data.\n\n- Property descriptions are now displayed on the edit tab.  These already existed\n  but were never exposed in the ZMI.\n\n1.11.5 (2008/30/09)\n-------------------\n\n- Reformat documentation to ReST to release an egg.\n\n1.11.4\n------\n\nBugs fixed:\n\n- Zope i18n *needs* an 'en' directory, or browsers like firefox will\n  use the first language in the language preferences list that does\n  have a translation, even if english is above it in the list of\n  preferences.\n\n- Tainted strings caused instance error, converted tainted strings\n  back to strings.\n\n- Small fix to Selection Field Validators, whose 'validate' functions\n  failed if items values are stored as unicode\n\n- update imports needed by the file system Formulator form\n  representation, if CMF is installed.  Now both CMF 1.x (for Plone\n  2.x) and CMF 2.x (for Plone 3.x) should work.  Patch provided by\n  \"lcanacheu\".\n\n- checkbox fields and multicheckboxfield items are now rendered with\n  labels around them.\n\n1.11.3\n------\n\nBugs fixed:\n\n- Field Validators 'validate' functions did not accept unicode\n  values as input on fields that require unicode.\n\n- Zope 2.10 compatibility: \"MessageIDFactory\" got renamed to\n  \"MessageFactory\"; same for \"MessageID\"; the monkey to allow\n  this class got influenced, too, so all ZODB importing that\n  class need to be updated, too (Problem reported by Yinghoong\n  Chan and Josef Meile)\n\n- Zope 2.10 event handling. Formulator now uses Zope 3 style\n  event handling so that no deprecation warnings are seen\n  anymore.\n\n- in Zope 2.10 copy & paste of fields did not work anymore, as\n  apparently Zope now requires permission info in the data\n  structure returned by all_meta_types. We have created a new\n  permission \"Add Formulator Fields\" which is checked when you\n  create a formulator field, or copy & paste it.\n\n  Note that there is still a \"cosmetic\" security issue if a\n  non-manager user tries to add a formulator field. \"Add and\n  Edit\" works, but \"Add\" gives a login dialog. Actually the\n  field *did* get added, but the URL to which the system tries\n  to return afterwards does not allow access.\n\n1.11.2\n------\n\nBugs fixed:\n\n- Copied fix from the 1.10 branch, TypeError when passing something other\n  than a string into the Validator.\n\n1.11.1\n------\n\nBugs fixed\n\n- Shut up startup warnings about security declarations in Zope\n  2.8.5.\n\n1.11\n----\n\nFeatures Added:\n\n- Formulator now needs Zope 2.8.4 + Five 1.2. It uses Five's i18n\n  architecture instead of PlacelessTranslationService.  Five 1.2 can\n  be downloaded at http://codespeak.net/z3/five\n\n  If you do not want to install Five 1.2 for some reason, simply\n  remove 'configure.zcml' in the Formulator package. Formulator will\n  then work (but not have i18n support) in a plain Zope 2.8\n  installation.\n\n- Radiobuttons are now rendered with a label around their field value,\n  allowing to click on the value instead of the radio button itself.\n  (Patch from Bertrand Croq).\n\nBugs fixed:\n\n- Fixed unicode issues in FormToXML, when the form was in unicode mode\n  and message fields contained non-ascii chars, XML serialization\n  didn't work.\n\n1.10\n----\n\nFeatures Added:\n\n- Allow to group fields of the ZMI form for each field\n  into more groups than the default \"widget\" and \"validator\"\n  (Patch from Mikael Barbero)\n\nBugs fixed:\n\n- Fixed AttributeError (on __call__) on DummyMessageID.\n\n1.9.0\n-----\n\nFeatures Added:\n\n- Added the 'modules' namespace for TALES expresions.\n\n- when reordering a field in the \"Order\" tab the current field\n  is \"sticky\" for faster moving up and down.\n  (Patch from Sebastien Robin)\n\n- Addes serializeValue and deserializeValue methods to the\n  validator classes. The former takes a sax handler as an argument\n  and sends it sax events to serialize the field value, the latter\n  takes serialized values and massages them back into valid formulator\n  values. These methods are not used within formulator itself, and\n  introduce no new dependencies.\n\n- A new flag to the DateTimeField widget allows to hide the day,\n  allowing to specify month and year only. The day defaults to the\n  first day of the month in this case.\n  (Patch from Ian Duggan)\n\nBugs Fixed:\n\n- Fixed issue for render_view of list fields with no default\n  value.\n\n- Fixed issue with non-ascii characters in the title of a newly\n  created form or field if the unicode property has been set\n  (Patch from Bertrand Croq)\n\n- Calling \"validate\" on LabelField directly failed with a\n  KeyError: 'external_validator' (Patch from Reinout van Rees)\n\n- A PatternField may have returned garbled results if the pattern\n  has several 'e' or 'f' in the pattern and 'd', 'e' of 'f' in the\n  field value\n\n1.8.0\n-----\n\nFeatures Added:\n\n- Remove i18n prefix and message id generation strategy from\n  Formulator.  It is cleaner to do this with i18n:translate in\n  ZPT. Extraction of messages can be done from .form XML files\n  (though this functionality is not yet part of Formulator).\n\n- Introduce message id markers and .po file for Formulator generated\n  error messages. These can be made translated in your own\n  page templates like this::\n\n     <p i18n:domain=\"formulator\" i18n:translate=\"\"\n        tal:content=\"my_error_text\"></p>\n\n- Test framework now uses (and requires) ZopeTestCase. This allowed\n  some testing setup cruft to be removed.\n\nBugs Fixed:\n\n- Added explicit security declaration for the \"fieldAdd\" DTML-file.\n  This fixed a problem with copy & paste fields in Zope 2.7.3.\n\n- Fields having been removed via the XML tab in the ZMI still\n  showed up in the \"Contents\" tab.\n\n- As a convenience TALES expressions now may return \"None\" for\n  the default value, which is rendered as the empty string.\n  (previously it has been rendered as \"value\".)\n\n1.7.0\n-----\n\nFeatures Added:\n\n- Added FormulatorFormFile, which can be used to load XML\n  representations of forms from filesystem code like PageTemplateFile.\n\n- i18n-id and i18n-domain support for forms, including descriptions,\n  error-messages, etc.\n\nBugs Fixed:\n\n- changed way selection fields check whether their items property is a\n  list or single item.\n\n- Made system not reregister help for Fields which already have help,\n  to avoid ZODB writes on startup.\n\n- Fixed singleton submit button that wasn't properly closed.\n\n- Zope 2.7 compatibility: In Zope 2.7 the behaviour when trying to\n  construct invalid DateTime object changed from raising string\n  exceptions to class based exceptions. This has caused the\n  DateTimeField's to pass through the new exceptions instead of\n  converting them to ValidationError.\n\n- PatternFields are no longer documented as \"experimental\" in the Help\n  system.\n\n- DateTime values field values (like start or end time) have been\n  wrongly represented as strings in the XML representation.\n\n- Fixed bug with rendering of ListField's similar to the \"single\n  element list with one two-char string\" bug fixed for validation in\n  1.6.2.\n\n- Fixed bug in DateTime field where a set \"default to now\" overwrote\n  values in the request.\n\n- Severel spelling bugs.\n\n- Fixed bug where a set \"default\" for a checkbox field would always\n  render a checked checkbox, even if redisplaying a submitted form\n  where the user has unchecked the checkbox Actually the works only if\n  the opening ``<form>`` tag is rendered by the ``form.header()`` method, or\n  if a hidden field \"formulator_submission\" is included manually in\n  the form.\n\n- Added tests for the LinesValidator.\n\n- Fixed bug with ``render_from_request`` LinesField, which splitted\n  strings coming in as raw unvalidated data from the request into many\n  lines with one single character on each line\n\n- Fixed bug where entering non ascii values in the ListField items has\n  not been handled properly in unicode mode\n\n- Worked around Zope2.7/python2.3 compatibility bug.  If a character\n  like \"<\" has inserted in a string field this triggered an obscure\n  Zope bug when feeding this value into the ``string.strip()`` function\n  on validation.\n\n\n1.6.2\n-----\n\nBugs Fixed:\n\n- Fixed bug which caused validation of listfields to throw an\n  exception when a list of strings was used as the value of\n  ``<items>`` and one of the elements was 2 characters long.\n\n- Formulator should now work again in Zope 2.7; Zope 2.7 has a change\n  to the way it retrieved the character set it used to to display the\n  ZMI. This interacted badly with the recent changes in Formulator to\n  support unicode.\n\n- Added 'refresh.txt'. I don't consider it a bug if this doesn't work\n  for you though -- I'm not using it. :)\n\n- XML representation of method-values attributes did not work.\n\n- python 2.1.3 compatibility: boolean values like \"required\" are\n  translated to int on XML serializations/deserialization.\n\n  The last two fixes are due to Sebastien Robin\n\n- render_hidden of DateTimeField's and fields allowing multiple\n  selections did not lead to something useful for validation.\n\n- RadioField and ListField did not display the text but the value in\n  ``render_view``.\n\nOther:\n\n- Whitespace normalization in sources.\n\n1.6.1\n-----\n\nBugs Fixed:\n\n- Adding Fields to empty Groups had not been possible.\n\n- ZMI \"Order\" tab of an empty form did raise an exception.\n\n1.6.0\n-----\n\nFeatures Added:\n\n- FileSystemSite/DirectoryView improvements:\n\n  * XML filesystem representation of Formulator forms can now\n    also be used with CMF (if FileSystemSite is not installed).\n\n  * FSForm gets automatically registered with the directory\n    view system if CMF or FileSystemSite is installed.\n\n- Infrastructure for Validators not to get taken into account in\n  validation procedures (``need_validate``).\n\n- A new label field. Doesn't participate in validation. It shows\n  its text as a label in the form.\n\n- Unicode mode. A form can now be put in 'unicode mode', which\n  means it stores all its textual data as unicode strings. This\n  allows for easier integration with Zope systems that use unicode\n  internally, such as Silva.\n\n- Disabling of fields. A field can now be disabled from being\n  displayed or validated by unchecking the 'Enabled' validator\n  property. This can be done dynamically as well using TALES\n  overrides.\n\nBugs Fixed:\n\n- The css_class value of a DateTime field had been ignored.  It\n  is now properly passed down to its subfields, so all subfield\n  elements are rendered with the given css_class value.\n\n1.5.0\n-----\n\nFeatures Added:\n\n- Added ProductForm, which provides a wrapping around\n  Formulator.BasicForm, allowing it to be created inside a\n  product but used outside it.\n\n- Allow turning off of XML prologue section.\n\n- Optimization of TALESMethod by caching compiled expression.\n  This speeds SilvaMetadata indexing up by a lot if a fallback\n  on default is made, especially in the case of Python\n  expressions, as it avoids lots of compilation overhead.\n\n- Extra attribute defined for list/multicheckbox/radio fields\n  called 'extra_item', which allows setting HTML attributes to\n  individual list item/checkbox/radio button.\n\nBugs Fixed:\n\n- XML serialization should be more consistent now; field properties\n  are now ordered by name upon serialization.\n\n- Allow XML export of BasicForm.\n\n1.4.2\n-----\n\nBugs Fixed:\n\n- Sticky forms should now work correctly in the presence of unicode.\n  Encoded data is automatically converted to unicode if the information\n  is pulled from the REQUEST form.\n\n1.4.1\n-----\n\nBugs Fixed\n\n- It was not possible to make DateTime fields not required when\n  ``allow_empty_time`` was enabled. Fixed.\n\n1.4.0\n-----\n\nFeatures Added\n\n- Added limited ability to output unicode for selected\n  fields. Only works properly in Zope 2.6.x, and the HTML pages\n  these forms are in need an output encoding set (such as\n  UTF-8, which is also Formulator's default encoding). If\n  'unicode' checkbox is checked Formulator will try to interpret\n  its input in the Form's encoding (default is UTF-8). It will\n  also try to display its values in that encoding. Note that\n  only field values and items currently work with unicode -- the\n  rest of the textual properties of a field are still stored as\n  8-bits. If you make sure that these properties are encoded as\n  UTF-8 (or whatever encoding you choose for the form) things\n  should be okay, however.\n\n- Can now also change forms using XML (not just view it).\n\n- DateTime fields can now optionally input AM/PM.\n\n- DateTime fields can now optionally be set to allow time to\n  be left empty.\n\n- 'whitespace_preserve' option on string type fields. If turned on,\n  whitespace will not be automatically stripped and will count as\n  input.\n\n- 'render_view' method on fields to render the value outside a\n  widget.\n\n- Added some code support used by SilvaMetadata to enable rendering\n  of fields with Zope's ':record' syntax.\n\nBugs Fixed:\n\n- Fixed a Python2.2 compatibility bug in ``XMLObjects.py``.\n\n- DateTimeField now picks up default values from REQUEST\n  properly if necessary.\n\n- XML representation of the LinkField \"check_timeout\" value\n  messed the type=\"float\" attribute.\n\n- Additional unit tests.\n\n1.3.1 (2002/12/20)\n------------------\n\nFeatures Added:\n\n- Error messages can now be included in the XML serialization.\n\n- Ability to encode lists as a special type in values.\n\nBugs Fixed:\n\n- Some more proper encodings.\n\n- Handle case where group has no field.\n\n- Handle DateTime field better.\n\n1.3.0 (2002/11/26)\n------------------\n\nFeatures Added:\n\n- FormToXML and XMLToForm modules have functions to serialize\n  (most of) form to XML and read it in again (over an existing\n  form).\n\n- New XML tab for forms which shows the XML serialization (no\n  saving option yet).\n\n- FSForm.py uses XML serialization to provide a formulator form\n  version for FileSystemSite. It does not get imported by\n  default.\n\nBugs Fixed:\n\n- The email validator has an improved regular expression.\n\n- Fix error that occured when trying to render DateTimeField as\n  hidden.\n\n1.2.0 (2002/03/06)\n------------------\n\nFeatures Added:\n\n- Changes to exception infrastructure so errors can now be\n  imported and caught in a through the web Python script. Example::\n\n    from Products.Formulator.Errors import ValidationError, FormValidationError\n\n- added ``__getitem__`` to Field so instead of using ``get_value()`` you can\n  also do this in Python: form.field['title'], and in ZPT you can\n  use this in path expressions: form/field/title\n\n- made a start with Formulator unit tests; some validators get\n  automatically tested now.\n\nBugs Fixed:\n\n- Removed dependencies of the name of 'Add and Edit' button to make\n  internationalization of the management interface easier.\n\n- added permission to make ZClasses work a bit better (but they\n  still don't cooperate well with Formulator, I think. I don't use\n  ZClasses, so I hope to hear from this from ZClass users)\n\n- Form's properties tab now visible and form tabs stopped\n  misbehaving.\n\n- Lists and such should handle multiple items with the same value\n  a bit better, selecting only one.\n\n- the LinkField now checks site-internal links better.\n\n1.1.0 (2001/10/26)\n------------------\n\nBugs Fixed:\n\n- Fixed bug in form settings tab.\n\n- the LinkField now checks site-internal links better.\n\n1.0.9 (2001/10/05)\n------------------\n\nFeatures Added:\n\n- New TALES tab for fields as a more powerful Override tab;\n  PageTemplates needs to be installed to make it work.\n\n- added 'name' attribute for forms. When the form header is\n  rendered, name will be an attribute. This can be used to\n  control forms with Javascript.\n\nBugs Fixed:\n\n- More compliance with Zope product guidelines; moved dtml\n  files from www dir to dtml dir.\n\n- Fixed a bug in that form titles would not work. Forms now have\n  titles, and you can change them in the settings tab. (Formulator\n  does not use the title property internally though)\n\n1.0.1 (2001/07/27)\n------------------\n\nBugs Fixed:\n\n- Fixed bug with renaming groups. Previously, renamed groups were not\n  properly stored in the ZODB.\n\n- Made MultiSelectionValidator (used by MultiListField among others)\n  deal better with integer values.\n\n- Hacked around CopySupport changes in Zope 2.4.0; renames work\n  again now.\n\n1.0 (2001/07/10)\n----------------\n\nFeatures Added:\n\n- New field: RawTextAreaField. A textarea field that doesn't\n  do a lot of processing on the text input.\n\n- Checked in BSD license text.\n\nBugs Fixed:\n\n- Fixed minor bug in year handling of DateTimeField.\n\n- Now hidden fields also take text from 'extra' property.\n\n- Fixed bug in MultiItemsWidget; would not deal with only a\n  single item being selected.\n\n0.9.5 (2001/06/27)\n------------------\n\nFeatures Added:\n\n- Added FileField (with browse button). Can be used to upload\n  files if form is set to multipart/form-data.\n\n- Added LinkField for URLs.\n\n- Made ListField and RadioField more tolerant of integer\n  (and possibly other) values, not only strings.\n\n- Made ListField and RadioField happy to deal with non-tuples too in the\n  items list. In this case, the item text and value will be identical.\n\n- Refactored ListWidget and RadioWidget so they share code; they both\n  inherit from SingleItemsWidget now.\n\n- Added LinesField to submit a list of lines in a textarea.\n\n- Added MultiListField and MultiCheckBoxField, both use new\n  MultiItemsWidget and MultiSelectionValidator.\n\n- Added EXPERIMENTAL PatternField.\n\n0.9.4 (2001/06/20)\n------------------\n\nFeatures Added:\n\n- Added API docs for Form, BasicForm and ZMIForm.\n\n- Renamed the confusingly named PythonForm and PythonField to\n  ZMIForm and ZMIField, as they are used from the Zope Management\n  Interface and not from Python.\n\n- Added render() method to form for basic form rendering.\n\n- Added Formulator HOWTO document.\n\nBugs Fixed:\n\n- Removed some validation code that wasn't in use anymore (items_method).\n\n- Removed 'has_field_id' in Form as this duplicated\n  the functionality of 'has_field'.\n\n- Turned <br> in Python sources to <br /> for XHTML compliance.\n\n- Tweaked radiobutton; text is now closer to the button itself,\n  different buttons are further apart.\n\n0.9.3 (2001/06/12)\n------------------\n\nFeatures Added:\n\n- added RadioField for simple display of radio buttons.\n\n- added action, method and enctype property to form settings.\n  These are displayed using the special form.header() and form.footer()\n  methods.\n\n- added override tab to allow all properties to be overridden by\n  method calls instead. 'items_method' in ListField went\n  away.\n\n- added ability to display DateTimeFields using drop down lists\n  instead of text input. Added some other bells and whistles to\n  DateTimeField. Changed some of the inner workings of composite\n  fields; component fields are now unique per field instance\n  instead of shared between them.\n\n- is_required() utility method on field to check whether a field\n  is required.\n\n- some internal features, such the ability to have a method\n  called as soon as a property has changed.\n\nBugs Fixed:\n\n- Fixed typos in security assertions.\n\n- use REQUEST.form instead of REQUEST where possible.\n\n- display month and day with initial zero in DateTimeField.\n\n- Fixed bug in validate_all_to_request(); what can be validated\n  will now be added to REQUEST if possible, even if a\n  FormValidationError is raised.\n\n0.9.2 (2001/05/23)\n------------------\n\nFeatures Added:\n\n- Ability to rename groups, including the first 'Default' group.\n\n- Improved support for sticky forms; form.render() can now\n  take an optional second argument, REQUEST, which can come\n  from a previous form submit. Even unvalidated fields will\n  then be sticky.\n\n- fields can call an extra optional external validation\n  function (such as a Python script).\n\n- New alternate name property: the alternate name is added to\n  the result dictionary or REQUEST object after validation. This\n  can be useful to support field names which wouldn't be valid\n  field names, which can occur in some locales.\n\n- New extra property; can be used to add extra attributes to\n  a HTML tag.\n\n- Some IntegerField properties can now be left empty if\n  no value is required, instead of having to set them to 0.\n\n- Merged functionality of RangedIntegerField into IntegerField.\n  RangedIntegerField is not addable anymore, though supported\n  as a clone of IntegerField for backwards compatibility. Leaving\n  'start' and 'end' empty in the new IntegerField will mean those\n  checks will not be performed.\n\nBugs Fixed:\n\n- Added more missing security declarations.\n\n- html_quote added in various places to make fields display\n  various HTML entities the right way.\n\n0.9.1 (2001/05/13)\n------------------\n\nFeatures Added:\n\n- Widgets now have a 'hidden' property. If set, the widget is\n  drawn as a 'hidden' field. 'hidden' fields do get validated\n  normally, however.\n\n- Changed API of Widget and Validator slightly; render() and\n  validate() methods now take an extra 'key' argument indicating\n  the name the field should have in the form. This is necessarily\n  to handle sub fields of composite fields.\n\n- Added EmailField and FloatField.\n\n- Added some infrastructure to support 'composite fields'; fields\n  composed out of multiple sub fields.\n\n- Added DateTimeField, the first example of a composite field\n  (field made of other fields).\n\nBugs Fixed:\n\n- General code cleanups; removed some unused methods.\n\n- Fixed security assertion for validate_all_to_request() method.\n\n- MethodFields now check whether they have 'View' permission to\n  execute listed Python Script or DTML Method.\n\n- RangedInteger is now < end, instead of <=, compatible with the\n  documentation.\n\n0.9 (2001/04/30)\n----------------\n\n- Initial public release of Formulator.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://infrae.com/products/formulator", "keywords": "form generator zope2", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "Products.Formulator", "package_url": "https://pypi.org/project/Products.Formulator/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Products.Formulator/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://infrae.com/products/formulator"}, "release_url": "https://pypi.org/project/Products.Formulator/1.15.5/", "requires_dist": null, "requires_python": null, "summary": "Form library for Zope 2.", "version": "1.15.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"formulator\">\n<h2><a href=\"#id40\" rel=\"nofollow\">Formulator</a></h2>\n<p>Formulator is a tool to help with the creation and validation of web\nforms. Form fields are stored as objects in Zope 2, in a special Form\nfolder.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#formulator\" id=\"id40\" rel=\"nofollow\">Formulator</a><ul>\n<li><a href=\"#features\" id=\"id41\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#dependencies\" id=\"id42\" rel=\"nofollow\">Dependencies</a></li>\n<li><a href=\"#information\" id=\"id43\" rel=\"nofollow\">Information</a></li>\n</ul>\n</li>\n<li><a href=\"#credits\" id=\"id44\" rel=\"nofollow\">Credits</a></li>\n<li><a href=\"#changes\" id=\"id45\" rel=\"nofollow\">Changes</a><ul>\n<li><a href=\"#id1\" id=\"id46\" rel=\"nofollow\">1.15.5 (2013/10/08)</a></li>\n<li><a href=\"#id2\" id=\"id47\" rel=\"nofollow\">1.15.4 (2013/08/26)</a></li>\n<li><a href=\"#id3\" id=\"id48\" rel=\"nofollow\">1.15.3 (2013/05/23)</a></li>\n<li><a href=\"#id4\" id=\"id49\" rel=\"nofollow\">1.15.2 (2013/03/05)</a></li>\n<li><a href=\"#id5\" id=\"id50\" rel=\"nofollow\">1.15.1 (2012/12/12)</a></li>\n<li><a href=\"#id6\" id=\"id51\" rel=\"nofollow\">1.15 (2012/09/04)</a></li>\n<li><a href=\"#id7\" id=\"id52\" rel=\"nofollow\">1.14 (2011/11/10)</a></li>\n<li><a href=\"#id8\" id=\"id53\" rel=\"nofollow\">1.13 (2010/07/15)</a></li>\n<li><a href=\"#id9\" id=\"id54\" rel=\"nofollow\">1.11.6 (2009/11/11)</a></li>\n<li><a href=\"#id10\" id=\"id55\" rel=\"nofollow\">1.11.5 (2008/30/09)</a></li>\n<li><a href=\"#id11\" id=\"id56\" rel=\"nofollow\">1.11.4</a></li>\n<li><a href=\"#id12\" id=\"id57\" rel=\"nofollow\">1.11.3</a></li>\n<li><a href=\"#id13\" id=\"id58\" rel=\"nofollow\">1.11.2</a></li>\n<li><a href=\"#id14\" id=\"id59\" rel=\"nofollow\">1.11.1</a></li>\n<li><a href=\"#id15\" id=\"id60\" rel=\"nofollow\">1.11</a></li>\n<li><a href=\"#id16\" id=\"id61\" rel=\"nofollow\">1.10</a></li>\n<li><a href=\"#id17\" id=\"id62\" rel=\"nofollow\">1.9.0</a></li>\n<li><a href=\"#id18\" id=\"id63\" rel=\"nofollow\">1.8.0</a></li>\n<li><a href=\"#id19\" id=\"id64\" rel=\"nofollow\">1.7.0</a></li>\n<li><a href=\"#id20\" id=\"id65\" rel=\"nofollow\">1.6.2</a></li>\n<li><a href=\"#id21\" id=\"id66\" rel=\"nofollow\">1.6.1</a></li>\n<li><a href=\"#id22\" id=\"id67\" rel=\"nofollow\">1.6.0</a></li>\n<li><a href=\"#id23\" id=\"id68\" rel=\"nofollow\">1.5.0</a></li>\n<li><a href=\"#id24\" id=\"id69\" rel=\"nofollow\">1.4.2</a></li>\n<li><a href=\"#id25\" id=\"id70\" rel=\"nofollow\">1.4.1</a></li>\n<li><a href=\"#id26\" id=\"id71\" rel=\"nofollow\">1.4.0</a></li>\n<li><a href=\"#id27\" id=\"id72\" rel=\"nofollow\">1.3.1 (2002/12/20)</a></li>\n<li><a href=\"#id28\" id=\"id73\" rel=\"nofollow\">1.3.0 (2002/11/26)</a></li>\n<li><a href=\"#id29\" id=\"id74\" rel=\"nofollow\">1.2.0 (2002/03/06)</a></li>\n<li><a href=\"#id30\" id=\"id75\" rel=\"nofollow\">1.1.0 (2001/10/26)</a></li>\n<li><a href=\"#id31\" id=\"id76\" rel=\"nofollow\">1.0.9 (2001/10/05)</a></li>\n<li><a href=\"#id32\" id=\"id77\" rel=\"nofollow\">1.0.1 (2001/07/27)</a></li>\n<li><a href=\"#id33\" id=\"id78\" rel=\"nofollow\">1.0 (2001/07/10)</a></li>\n<li><a href=\"#id34\" id=\"id79\" rel=\"nofollow\">0.9.5 (2001/06/27)</a></li>\n<li><a href=\"#id35\" id=\"id80\" rel=\"nofollow\">0.9.4 (2001/06/20)</a></li>\n<li><a href=\"#id36\" id=\"id81\" rel=\"nofollow\">0.9.3 (2001/06/12)</a></li>\n<li><a href=\"#id37\" id=\"id82\" rel=\"nofollow\">0.9.2 (2001/05/23)</a></li>\n<li><a href=\"#id38\" id=\"id83\" rel=\"nofollow\">0.9.1 (2001/05/13)</a></li>\n<li><a href=\"#id39\" id=\"id84\" rel=\"nofollow\">0.9 (2001/04/30)</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"features\">\n<h3><a href=\"#id41\" rel=\"nofollow\">Features</a></h3>\n<ul>\n<li>manage form fields through the Zope management interface.</li>\n<li>manage field look &amp; feel as well as validation and processing\nbehavior.</li>\n<li>automatic field validation.</li>\n<li>determine field order and group fields together.</li>\n<li>easy extensibility with new field types.</li>\n<li>online help.</li>\n<li>serialization of form to XML and back.</li>\n</ul>\n</div>\n<div id=\"dependencies\">\n<h3><a href=\"#id42\" rel=\"nofollow\">Dependencies</a></h3>\n<p>You need to install either zeam.form. The best to install this product\nis to use buildout and let it resolves the dependencies.</p>\n</div>\n<div id=\"information\">\n<h3><a href=\"#id43\" rel=\"nofollow\">Information</a></h3>\n<p>Formulator comes with online help, so click on <em>Help!</em> in the Zope\nmanagement screens. If you want your brain to explode, read the\n<em>How Formulator Eats its Own Dogfood</em> help topic.</p>\n<p>Information is also available at the Formulator web site:</p>\n<pre>http://www.infrae.com/products/formulator\n</pre>\n<p>There are also instructions to join the Formulator mailing list there.\nDiscussion about Formulator should preferably happen on the mailing list\nfirst, though you can always mail me as well. But please consider the\nlist if you have questions or suggestions.</p>\n<p>Even more info can be found by reading the source. :)</p>\n</div>\n</div>\n<div id=\"credits\">\n<h2><a href=\"#id44\" rel=\"nofollow\">Credits</a></h2>\n<p>Developers:</p>\n<ul>\n<li>Martijn Faassen (<a href=\"mailto:faassen%40vet.uu.nl\">faassen<span>@</span>vet<span>.</span>uu<span>.</span>nl</a>) \u2013 Main developer, design and\nimplementation.</li>\n<li>Clemens Klein-Robbenhaar (robbenhaar at espresto.com) \u2013 Many\nbugfixes and feature additions.</li>\n</ul>\n<p>Many thanks go to:</p>\n<ul>\n<li>Kit Blake (kitblake at v2.nl) \u2013 UI help and design help.</li>\n<li>Yury Don (yura at vpcit.ru) \u2013 contributed EmailField and\nFloatField, design and implementation help.</li>\n<li>Stephan Richter (srichter at iuveno-net.de) \u2013 contributed LinkField\nand FileField. Contributed PatternChecker module used by\nPatternField. Other design and implementation help.</li>\n<li>Nicola Larosa (nico at tekNico.net) \u2013 feedback and bugfixes.</li>\n<li>Magnus Heino (magus.heino at rivermen.se) \u2013 feedback and bugfixes.</li>\n<li>Joel Burton (jburton at scw.org) \u2013 feedback and bugfixes.</li>\n<li>Ulrich Eck (ueck at net-labs.de) \u2013 much help and patience with the\nTALES tab.</li>\n<li>Dirk Datzert (Dirk.Datzert at rasselstein-hoesch.de) \u2013 feedback and\nbugfixes.</li>\n<li>Max Petrich (petrich.max at kis-solution.de) \u2013 feedback and\nbugfixes.</li>\n<li>Matt Behrens (matt.behrens at kohler.com) \u2013 feedback and bugfixes.</li>\n<li>Nikolay Kim (fafhrd at datacom.kz) \u2013 code inspiration for\nXMLToForm/FormToXML.</li>\n<li>Godefroid Chapelle (gotcha at swing.be) \u2013 Bugfixes.</li>\n<li>Alan Runyan (runyaga at runyaga.com) \u2013 Fix to email regular expression.</li>\n<li>Sascha Welter (welter at network-ag.com) \u2013 Extensive help with email\nregular expression.</li>\n<li>Christian Zagrodnick (cz at gocept.com) \u2013 Unicode awareness fixes\nand XML entry form.</li>\n<li>Iutin Vyacheslav (iutin at whirix.com) \u2013 am/pm feature for DateTime\nfields.</li>\n<li>Kapil Thangavelu (k_vertigo at objectrealms.net) \u2013 Enabled\n\u2018:record\u2019 rendering.</li>\n<li>Pierre-Julien Grizel (grizel at ingeniweb.com) \u2013 ProductForm.</li>\n<li>Sebastien Robin (seb at nexedi.com) \u2013 more consistent ordering in\nXML serialization, bugfixes</li>\n<li>Guido Wesdorp (guido at infrae.com) \u2013 Added extra_item attribute on\ncompound fields, bugfixes. Fixed unicode error in XMLToForm.</li>\n<li>Yura Petrov (ypetrov at naumen.ru) \u2013 Various FSForm related\nimprovements.</li>\n<li>Vladimir Voznesensky (vovic at smtp.ru) \u2013 Enabling/disabling of fields,\nbugfix in <tt>render_view</tt>.</li>\n<li>Jeff Kowalczyk \u2013 Whitespace normalization of sources.</li>\n<li>Paul Winkler, Dieter Maurer \u2013 help with fix so that help system\ndoesn\u2019t cause ZODB writes on every startup.</li>\n<li>Garito (garito at sistes.net) \u2013 bugfix with the XML serialization\nof DateTime values.</li>\n<li>Maciej Pietrzak (magh at apcoh.org) \u2013 Fixes for DateTime validation\nissues in Zope 2.7.</li>\n<li>Patrick Earl (pat at dril.com) \u2013 Fixes for DateTime / CheckBox\nfield rendering.</li>\n<li>He Wei (hewei at ied.org.cn) \u2013 ZMI and Unicode related fixes.</li>\n<li>Bertrand Croq (bertrand.croq at freeskop.com) \u2013 Fixes for a Unicode\nissue related to titles of new fields and label for radiobuttons\npatch</li>\n<li>Ian Duggan (ian at swishmark.com) \u2013 \u201cHide day\u201d in DateTimeField\nfeature</li>\n<li>Reinout van Rees (reinout at vanrees.org) \u2013 LabelField validation\nbugfix.</li>\n<li>Mikael Barbero (mikael at emu-france.com) \u2013 ZMI enhancement.</li>\n</ul>\n<p>Special thanks also goes to Rik Hoekstra.</p>\n<p>Also a thank you to those few valiant souls who suffered through the\nbugs of ZFormulator, the previous implementation. Let\u2019s hope this\none\u2019s better!</p>\n</div>\n<div id=\"changes\">\n<h2><a href=\"#id45\" rel=\"nofollow\">Changes</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id46\" rel=\"nofollow\">1.15.5 (2013/10/08)</a></h3>\n<ul>\n<li>Fix various unicode issues following the modifications of the 1.15\nseries.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id47\" rel=\"nofollow\">1.15.4 (2013/08/26)</a></h3>\n<ul>\n<li><tt>test_form</tt> now except a list of bad identifiers for fields as a\nparameter. An error will be returned if one of those identifier is\nused by a field.</li>\n<li>HTML entities are now escaped by default inside field values.</li>\n<li>Formulator Widgets will now return unicode when it is possible.</li>\n<li><tt>zeam.form</tt> extrators have been updated to have the same Acquisition\nwrapping than the <tt>zeam.form</tt> widgets.</li>\n<li>Dependencies got properly defined in <tt>setup.py</tt> to facilate the\ninstallation of the product.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id48\" rel=\"nofollow\">1.15.3 (2013/05/23)</a></h3>\n<ul>\n<li>Fix unicode issues with the integration of <tt>zeam.form</tt>.</li>\n<li>Fix required and readonly attributes with the interface of\n<tt>zeam.form</tt>.</li>\n<li>Fix ListTextAreaField so it properly works with values from the request.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id49\" rel=\"nofollow\">1.15.2 (2013/03/05)</a></h3>\n<ul>\n<li>Fix compability with the latest version of <tt>zeam.form</tt>.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id50\" rel=\"nofollow\">1.15.1 (2012/12/12)</a></h3>\n<ul>\n<li>Don\u2019t validate values against criterias when deserializing\nwhen. This makes impossible to deserialize values that are\nwell-formed, but invalid on a given instance, loosing all\ninformation by doing so.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3><a href=\"#id51\" rel=\"nofollow\">1.15 (2012/09/04)</a></h3>\n<ul>\n<li>Add support to integrate with <tt>zeam.form</tt>.</li>\n<li>Add support for validators to validate already extracted values from\nthe request.</li>\n<li>Some level of validation can be disabled when extracting values from\nthe request, if a value with the id <tt>field.id_novalidate</tt> is\npresent as well in the request. This is usefull to extract form\nvalues from a request intended for an older version of your form.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3><a href=\"#id52\" rel=\"nofollow\">1.14 (2011/11/10)</a></h3>\n<ul>\n<li>Compatibility fixes for Zope 2.13 and Python 2.7.</li>\n<li>DateTime widget now support datetime values.</li>\n<li>Add a method <tt>test_form</tt> on a Form to know if it is broken (have\nZODB broken fields, or other problems).</li>\n<li>Add a way to programmatically change all fields options for a form.</li>\n<li>Add support to serialize/deserialize form values on a content\nobject (see the adapters code).</li>\n<li>TAL expressions in fields now have access to a context value: the\nacquisition parent of the form.</li>\n<li>Add some fields that where somewhere else in the past,\nEmailLinesField and an InterfaceField.</li>\n<li>Add support for interfaces in XML import/export, for an interface\nfield.</li>\n<li>Support for FileSystemSite is optional.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3><a href=\"#id53\" rel=\"nofollow\">1.13 (2010/07/15)</a></h3>\n<ul>\n<li>Compatibility fixes for Zope 2.12 and Python 2.6. Those are the\nrequirements now.</li>\n</ul>\n<p>Ported from 1.11 branch:</p>\n<ul>\n<li>Fix problem with MultiListFields not showing values from request\nif in unicode mode, as the incoming values from the request\ndid not get converted to unicode in the Field._get_default</li>\n<li>The \u201cconvert_unicode\u201d helper now expects a separate parameter\n\u201cencoding\u201d instead of assuming utf8 encoding always.</li>\n</ul>\n<p>Ported from 1.12 branch:</p>\n<ul>\n<li>The majority of Widgets now auto-generate an html \u2018id\u2019 attribute for the\nrendered widget.  This \u2018id\u2019 attribute is accessible in page templates via\nthe field/html_id.  If the field has an id attribute set in the \u2018extra\u2019\nparameter, the value of this attribute is returned, rather than the\nauto-generated id.  The html id and name attributes are now visible\nin the ZMI edit screen for the fields.  The widgets which do not have\nhtml_ids are: RadioWidget, MultiCheckBoxWidget, DateTimeWidget.  The widgets\nhave a property \u201chas_html_id\u201d that templates can use to determine whether\nto place a label around the field title.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3><a href=\"#id54\" rel=\"nofollow\">1.11.6 (2009/11/11)</a></h3>\n<ul>\n<li>Added the option for the DateTime Widget to use a popup calendar to input\nthe date and time.</li>\n<li>The DateTime Widget popup defaults to midnight for the time.</li>\n<li>The DateTime Widget now understands both upper and lower case \u2018am\u2019 and \u2018pm\u2019.</li>\n<li>Fix the factor that a REQUEST is required to use a field object on\nrecent Zope (2.11).</li>\n<li>Fixed field events: copy of forms containing fields and folders\ncontaining forms was broken.</li>\n<li>Added a \u2018required\u2019 validator property to FileFields</li>\n<li>Added a validator for FileFields to check whether the value is a\nStringType, which is an indicator that the form encoding is set\nincorrectly.  The error message informs the user the form\nencoding should be set to multipart/form-data.</li>\n<li>Property descriptions are now displayed on the edit tab.  These already existed\nbut were never exposed in the ZMI.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3><a href=\"#id55\" rel=\"nofollow\">1.11.5 (2008/30/09)</a></h3>\n<ul>\n<li>Reformat documentation to ReST to release an egg.</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3><a href=\"#id56\" rel=\"nofollow\">1.11.4</a></h3>\n<p>Bugs fixed:</p>\n<ul>\n<li>Zope i18n <em>needs</em> an \u2018en\u2019 directory, or browsers like firefox will\nuse the first language in the language preferences list that does\nhave a translation, even if english is above it in the list of\npreferences.</li>\n<li>Tainted strings caused instance error, converted tainted strings\nback to strings.</li>\n<li>Small fix to Selection Field Validators, whose \u2018validate\u2019 functions\nfailed if items values are stored as unicode</li>\n<li>update imports needed by the file system Formulator form\nrepresentation, if CMF is installed.  Now both CMF 1.x (for Plone\n2.x) and CMF 2.x (for Plone 3.x) should work.  Patch provided by\n\u201clcanacheu\u201d.</li>\n<li>checkbox fields and multicheckboxfield items are now rendered with\nlabels around them.</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3><a href=\"#id57\" rel=\"nofollow\">1.11.3</a></h3>\n<p>Bugs fixed:</p>\n<ul>\n<li><p>Field Validators \u2018validate\u2019 functions did not accept unicode\nvalues as input on fields that require unicode.</p>\n</li>\n<li><p>Zope 2.10 compatibility: \u201cMessageIDFactory\u201d got renamed to\n\u201cMessageFactory\u201d; same for \u201cMessageID\u201d; the monkey to allow\nthis class got influenced, too, so all ZODB importing that\nclass need to be updated, too (Problem reported by Yinghoong\nChan and Josef Meile)</p>\n</li>\n<li><p>Zope 2.10 event handling. Formulator now uses Zope 3 style\nevent handling so that no deprecation warnings are seen\nanymore.</p>\n</li>\n<li><p>in Zope 2.10 copy &amp; paste of fields did not work anymore, as\napparently Zope now requires permission info in the data\nstructure returned by all_meta_types. We have created a new\npermission \u201cAdd Formulator Fields\u201d which is checked when you\ncreate a formulator field, or copy &amp; paste it.</p>\n<p>Note that there is still a \u201ccosmetic\u201d security issue if a\nnon-manager user tries to add a formulator field. \u201cAdd and\nEdit\u201d works, but \u201cAdd\u201d gives a login dialog. Actually the\nfield <em>did</em> get added, but the URL to which the system tries\nto return afterwards does not allow access.</p>\n</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3><a href=\"#id58\" rel=\"nofollow\">1.11.2</a></h3>\n<p>Bugs fixed:</p>\n<ul>\n<li>Copied fix from the 1.10 branch, TypeError when passing something other\nthan a string into the Validator.</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3><a href=\"#id59\" rel=\"nofollow\">1.11.1</a></h3>\n<p>Bugs fixed</p>\n<ul>\n<li>Shut up startup warnings about security declarations in Zope\n2.8.5.</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3><a href=\"#id60\" rel=\"nofollow\">1.11</a></h3>\n<p>Features Added:</p>\n<ul>\n<li><p>Formulator now needs Zope 2.8.4 + Five 1.2. It uses Five\u2019s i18n\narchitecture instead of PlacelessTranslationService.  Five 1.2 can\nbe downloaded at <a href=\"http://codespeak.net/z3/five\" rel=\"nofollow\">http://codespeak.net/z3/five</a></p>\n<p>If you do not want to install Five 1.2 for some reason, simply\nremove \u2018configure.zcml\u2019 in the Formulator package. Formulator will\nthen work (but not have i18n support) in a plain Zope 2.8\ninstallation.</p>\n</li>\n<li><p>Radiobuttons are now rendered with a label around their field value,\nallowing to click on the value instead of the radio button itself.\n(Patch from Bertrand Croq).</p>\n</li>\n</ul>\n<p>Bugs fixed:</p>\n<ul>\n<li>Fixed unicode issues in FormToXML, when the form was in unicode mode\nand message fields contained non-ascii chars, XML serialization\ndidn\u2019t work.</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3><a href=\"#id61\" rel=\"nofollow\">1.10</a></h3>\n<p>Features Added:</p>\n<ul>\n<li>Allow to group fields of the ZMI form for each field\ninto more groups than the default \u201cwidget\u201d and \u201cvalidator\u201d\n(Patch from Mikael Barbero)</li>\n</ul>\n<p>Bugs fixed:</p>\n<ul>\n<li>Fixed AttributeError (on __call__) on DummyMessageID.</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3><a href=\"#id62\" rel=\"nofollow\">1.9.0</a></h3>\n<p>Features Added:</p>\n<ul>\n<li>Added the \u2018modules\u2019 namespace for TALES expresions.</li>\n<li>when reordering a field in the \u201cOrder\u201d tab the current field\nis \u201csticky\u201d for faster moving up and down.\n(Patch from Sebastien Robin)</li>\n<li>Addes serializeValue and deserializeValue methods to the\nvalidator classes. The former takes a sax handler as an argument\nand sends it sax events to serialize the field value, the latter\ntakes serialized values and massages them back into valid formulator\nvalues. These methods are not used within formulator itself, and\nintroduce no new dependencies.</li>\n<li>A new flag to the DateTimeField widget allows to hide the day,\nallowing to specify month and year only. The day defaults to the\nfirst day of the month in this case.\n(Patch from Ian Duggan)</li>\n</ul>\n<p>Bugs Fixed:</p>\n<ul>\n<li>Fixed issue for render_view of list fields with no default\nvalue.</li>\n<li>Fixed issue with non-ascii characters in the title of a newly\ncreated form or field if the unicode property has been set\n(Patch from Bertrand Croq)</li>\n<li>Calling \u201cvalidate\u201d on LabelField directly failed with a\nKeyError: \u2018external_validator\u2019 (Patch from Reinout van Rees)</li>\n<li>A PatternField may have returned garbled results if the pattern\nhas several \u2018e\u2019 or \u2018f\u2019 in the pattern and \u2018d\u2019, \u2018e\u2019 of \u2018f\u2019 in the\nfield value</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3><a href=\"#id63\" rel=\"nofollow\">1.8.0</a></h3>\n<p>Features Added:</p>\n<ul>\n<li><p>Remove i18n prefix and message id generation strategy from\nFormulator.  It is cleaner to do this with i18n:translate in\nZPT. Extraction of messages can be done from .form XML files\n(though this functionality is not yet part of Formulator).</p>\n</li>\n<li><p>Introduce message id markers and .po file for Formulator generated\nerror messages. These can be made translated in your own\npage templates like this:</p>\n<pre>&lt;p i18n:domain=\"formulator\" i18n:translate=\"\"\n   tal:content=\"my_error_text\"&gt;&lt;/p&gt;\n</pre>\n</li>\n<li><p>Test framework now uses (and requires) ZopeTestCase. This allowed\nsome testing setup cruft to be removed.</p>\n</li>\n</ul>\n<p>Bugs Fixed:</p>\n<ul>\n<li>Added explicit security declaration for the \u201cfieldAdd\u201d DTML-file.\nThis fixed a problem with copy &amp; paste fields in Zope 2.7.3.</li>\n<li>Fields having been removed via the XML tab in the ZMI still\nshowed up in the \u201cContents\u201d tab.</li>\n<li>As a convenience TALES expressions now may return \u201cNone\u201d for\nthe default value, which is rendered as the empty string.\n(previously it has been rendered as \u201cvalue\u201d.)</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3><a href=\"#id64\" rel=\"nofollow\">1.7.0</a></h3>\n<p>Features Added:</p>\n<ul>\n<li>Added FormulatorFormFile, which can be used to load XML\nrepresentations of forms from filesystem code like PageTemplateFile.</li>\n<li>i18n-id and i18n-domain support for forms, including descriptions,\nerror-messages, etc.</li>\n</ul>\n<p>Bugs Fixed:</p>\n<ul>\n<li>changed way selection fields check whether their items property is a\nlist or single item.</li>\n<li>Made system not reregister help for Fields which already have help,\nto avoid ZODB writes on startup.</li>\n<li>Fixed singleton submit button that wasn\u2019t properly closed.</li>\n<li>Zope 2.7 compatibility: In Zope 2.7 the behaviour when trying to\nconstruct invalid DateTime object changed from raising string\nexceptions to class based exceptions. This has caused the\nDateTimeField\u2019s to pass through the new exceptions instead of\nconverting them to ValidationError.</li>\n<li>PatternFields are no longer documented as \u201cexperimental\u201d in the Help\nsystem.</li>\n<li>DateTime values field values (like start or end time) have been\nwrongly represented as strings in the XML representation.</li>\n<li>Fixed bug with rendering of ListField\u2019s similar to the \u201csingle\nelement list with one two-char string\u201d bug fixed for validation in\n1.6.2.</li>\n<li>Fixed bug in DateTime field where a set \u201cdefault to now\u201d overwrote\nvalues in the request.</li>\n<li>Severel spelling bugs.</li>\n<li>Fixed bug where a set \u201cdefault\u201d for a checkbox field would always\nrender a checked checkbox, even if redisplaying a submitted form\nwhere the user has unchecked the checkbox Actually the works only if\nthe opening <tt>&lt;form&gt;</tt> tag is rendered by the <tt>form.header()</tt> method, or\nif a hidden field \u201cformulator_submission\u201d is included manually in\nthe form.</li>\n<li>Added tests for the LinesValidator.</li>\n<li>Fixed bug with <tt>render_from_request</tt> LinesField, which splitted\nstrings coming in as raw unvalidated data from the request into many\nlines with one single character on each line</li>\n<li>Fixed bug where entering non ascii values in the ListField items has\nnot been handled properly in unicode mode</li>\n<li>Worked around Zope2.7/python2.3 compatibility bug.  If a character\nlike \u201c&lt;\u201d has inserted in a string field this triggered an obscure\nZope bug when feeding this value into the <tt>string.strip()</tt> function\non validation.</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3><a href=\"#id65\" rel=\"nofollow\">1.6.2</a></h3>\n<p>Bugs Fixed:</p>\n<ul>\n<li><p>Fixed bug which caused validation of listfields to throw an\nexception when a list of strings was used as the value of\n<tt>&lt;items&gt;</tt> and one of the elements was 2 characters long.</p>\n</li>\n<li><p>Formulator should now work again in Zope 2.7; Zope 2.7 has a change\nto the way it retrieved the character set it used to to display the\nZMI. This interacted badly with the recent changes in Formulator to\nsupport unicode.</p>\n</li>\n<li><p>Added \u2018refresh.txt\u2019. I don\u2019t consider it a bug if this doesn\u2019t work\nfor you though \u2013 I\u2019m not using it. :)</p>\n</li>\n<li><p>XML representation of method-values attributes did not work.</p>\n</li>\n<li><p>python 2.1.3 compatibility: boolean values like \u201crequired\u201d are\ntranslated to int on XML serializations/deserialization.</p>\n<p>The last two fixes are due to Sebastien Robin</p>\n</li>\n<li><p>render_hidden of DateTimeField\u2019s and fields allowing multiple\nselections did not lead to something useful for validation.</p>\n</li>\n<li><p>RadioField and ListField did not display the text but the value in\n<tt>render_view</tt>.</p>\n</li>\n</ul>\n<p>Other:</p>\n<ul>\n<li>Whitespace normalization in sources.</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3><a href=\"#id66\" rel=\"nofollow\">1.6.1</a></h3>\n<p>Bugs Fixed:</p>\n<ul>\n<li>Adding Fields to empty Groups had not been possible.</li>\n<li>ZMI \u201cOrder\u201d tab of an empty form did raise an exception.</li>\n</ul>\n</div>\n<div id=\"id22\">\n<h3><a href=\"#id67\" rel=\"nofollow\">1.6.0</a></h3>\n<p>Features Added:</p>\n<ul>\n<li>FileSystemSite/DirectoryView improvements:<ul>\n<li>XML filesystem representation of Formulator forms can now\nalso be used with CMF (if FileSystemSite is not installed).</li>\n<li>FSForm gets automatically registered with the directory\nview system if CMF or FileSystemSite is installed.</li>\n</ul>\n</li>\n<li>Infrastructure for Validators not to get taken into account in\nvalidation procedures (<tt>need_validate</tt>).</li>\n<li>A new label field. Doesn\u2019t participate in validation. It shows\nits text as a label in the form.</li>\n<li>Unicode mode. A form can now be put in \u2018unicode mode\u2019, which\nmeans it stores all its textual data as unicode strings. This\nallows for easier integration with Zope systems that use unicode\ninternally, such as Silva.</li>\n<li>Disabling of fields. A field can now be disabled from being\ndisplayed or validated by unchecking the \u2018Enabled\u2019 validator\nproperty. This can be done dynamically as well using TALES\noverrides.</li>\n</ul>\n<p>Bugs Fixed:</p>\n<ul>\n<li>The css_class value of a DateTime field had been ignored.  It\nis now properly passed down to its subfields, so all subfield\nelements are rendered with the given css_class value.</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h3><a href=\"#id68\" rel=\"nofollow\">1.5.0</a></h3>\n<p>Features Added:</p>\n<ul>\n<li>Added ProductForm, which provides a wrapping around\nFormulator.BasicForm, allowing it to be created inside a\nproduct but used outside it.</li>\n<li>Allow turning off of XML prologue section.</li>\n<li>Optimization of TALESMethod by caching compiled expression.\nThis speeds SilvaMetadata indexing up by a lot if a fallback\non default is made, especially in the case of Python\nexpressions, as it avoids lots of compilation overhead.</li>\n<li>Extra attribute defined for list/multicheckbox/radio fields\ncalled \u2018extra_item\u2019, which allows setting HTML attributes to\nindividual list item/checkbox/radio button.</li>\n</ul>\n<p>Bugs Fixed:</p>\n<ul>\n<li>XML serialization should be more consistent now; field properties\nare now ordered by name upon serialization.</li>\n<li>Allow XML export of BasicForm.</li>\n</ul>\n</div>\n<div id=\"id24\">\n<h3><a href=\"#id69\" rel=\"nofollow\">1.4.2</a></h3>\n<p>Bugs Fixed:</p>\n<ul>\n<li>Sticky forms should now work correctly in the presence of unicode.\nEncoded data is automatically converted to unicode if the information\nis pulled from the REQUEST form.</li>\n</ul>\n</div>\n<div id=\"id25\">\n<h3><a href=\"#id70\" rel=\"nofollow\">1.4.1</a></h3>\n<p>Bugs Fixed</p>\n<ul>\n<li>It was not possible to make DateTime fields not required when\n<tt>allow_empty_time</tt> was enabled. Fixed.</li>\n</ul>\n</div>\n<div id=\"id26\">\n<h3><a href=\"#id71\" rel=\"nofollow\">1.4.0</a></h3>\n<p>Features Added</p>\n<ul>\n<li>Added limited ability to output unicode for selected\nfields. Only works properly in Zope 2.6.x, and the HTML pages\nthese forms are in need an output encoding set (such as\nUTF-8, which is also Formulator\u2019s default encoding). If\n\u2018unicode\u2019 checkbox is checked Formulator will try to interpret\nits input in the Form\u2019s encoding (default is UTF-8). It will\nalso try to display its values in that encoding. Note that\nonly field values and items currently work with unicode \u2013 the\nrest of the textual properties of a field are still stored as\n8-bits. If you make sure that these properties are encoded as\nUTF-8 (or whatever encoding you choose for the form) things\nshould be okay, however.</li>\n<li>Can now also change forms using XML (not just view it).</li>\n<li>DateTime fields can now optionally input AM/PM.</li>\n<li>DateTime fields can now optionally be set to allow time to\nbe left empty.</li>\n<li>\u2018whitespace_preserve\u2019 option on string type fields. If turned on,\nwhitespace will not be automatically stripped and will count as\ninput.</li>\n<li>\u2018render_view\u2019 method on fields to render the value outside a\nwidget.</li>\n<li>Added some code support used by SilvaMetadata to enable rendering\nof fields with Zope\u2019s \u2018:record\u2019 syntax.</li>\n</ul>\n<p>Bugs Fixed:</p>\n<ul>\n<li>Fixed a Python2.2 compatibility bug in <tt>XMLObjects.py</tt>.</li>\n<li>DateTimeField now picks up default values from REQUEST\nproperly if necessary.</li>\n<li>XML representation of the LinkField \u201ccheck_timeout\u201d value\nmessed the type=\u201dfloat\u201d attribute.</li>\n<li>Additional unit tests.</li>\n</ul>\n</div>\n<div id=\"id27\">\n<h3><a href=\"#id72\" rel=\"nofollow\">1.3.1 (2002/12/20)</a></h3>\n<p>Features Added:</p>\n<ul>\n<li>Error messages can now be included in the XML serialization.</li>\n<li>Ability to encode lists as a special type in values.</li>\n</ul>\n<p>Bugs Fixed:</p>\n<ul>\n<li>Some more proper encodings.</li>\n<li>Handle case where group has no field.</li>\n<li>Handle DateTime field better.</li>\n</ul>\n</div>\n<div id=\"id28\">\n<h3><a href=\"#id73\" rel=\"nofollow\">1.3.0 (2002/11/26)</a></h3>\n<p>Features Added:</p>\n<ul>\n<li>FormToXML and XMLToForm modules have functions to serialize\n(most of) form to XML and read it in again (over an existing\nform).</li>\n<li>New XML tab for forms which shows the XML serialization (no\nsaving option yet).</li>\n<li>FSForm.py uses XML serialization to provide a formulator form\nversion for FileSystemSite. It does not get imported by\ndefault.</li>\n</ul>\n<p>Bugs Fixed:</p>\n<ul>\n<li>The email validator has an improved regular expression.</li>\n<li>Fix error that occured when trying to render DateTimeField as\nhidden.</li>\n</ul>\n</div>\n<div id=\"id29\">\n<h3><a href=\"#id74\" rel=\"nofollow\">1.2.0 (2002/03/06)</a></h3>\n<p>Features Added:</p>\n<ul>\n<li><p>Changes to exception infrastructure so errors can now be\nimported and caught in a through the web Python script. Example:</p>\n<pre>from Products.Formulator.Errors import ValidationError, FormValidationError\n</pre>\n</li>\n<li><p>added <tt>__getitem__</tt> to Field so instead of using <tt>get_value()</tt> you can\nalso do this in Python: form.field[\u2018title\u2019], and in ZPT you can\nuse this in path expressions: form/field/title</p>\n</li>\n<li><p>made a start with Formulator unit tests; some validators get\nautomatically tested now.</p>\n</li>\n</ul>\n<p>Bugs Fixed:</p>\n<ul>\n<li>Removed dependencies of the name of \u2018Add and Edit\u2019 button to make\ninternationalization of the management interface easier.</li>\n<li>added permission to make ZClasses work a bit better (but they\nstill don\u2019t cooperate well with Formulator, I think. I don\u2019t use\nZClasses, so I hope to hear from this from ZClass users)</li>\n<li>Form\u2019s properties tab now visible and form tabs stopped\nmisbehaving.</li>\n<li>Lists and such should handle multiple items with the same value\na bit better, selecting only one.</li>\n<li>the LinkField now checks site-internal links better.</li>\n</ul>\n</div>\n<div id=\"id30\">\n<h3><a href=\"#id75\" rel=\"nofollow\">1.1.0 (2001/10/26)</a></h3>\n<p>Bugs Fixed:</p>\n<ul>\n<li>Fixed bug in form settings tab.</li>\n<li>the LinkField now checks site-internal links better.</li>\n</ul>\n</div>\n<div id=\"id31\">\n<h3><a href=\"#id76\" rel=\"nofollow\">1.0.9 (2001/10/05)</a></h3>\n<p>Features Added:</p>\n<ul>\n<li>New TALES tab for fields as a more powerful Override tab;\nPageTemplates needs to be installed to make it work.</li>\n<li>added \u2018name\u2019 attribute for forms. When the form header is\nrendered, name will be an attribute. This can be used to\ncontrol forms with Javascript.</li>\n</ul>\n<p>Bugs Fixed:</p>\n<ul>\n<li>More compliance with Zope product guidelines; moved dtml\nfiles from www dir to dtml dir.</li>\n<li>Fixed a bug in that form titles would not work. Forms now have\ntitles, and you can change them in the settings tab. (Formulator\ndoes not use the title property internally though)</li>\n</ul>\n</div>\n<div id=\"id32\">\n<h3><a href=\"#id77\" rel=\"nofollow\">1.0.1 (2001/07/27)</a></h3>\n<p>Bugs Fixed:</p>\n<ul>\n<li>Fixed bug with renaming groups. Previously, renamed groups were not\nproperly stored in the ZODB.</li>\n<li>Made MultiSelectionValidator (used by MultiListField among others)\ndeal better with integer values.</li>\n<li>Hacked around CopySupport changes in Zope 2.4.0; renames work\nagain now.</li>\n</ul>\n</div>\n<div id=\"id33\">\n<h3><a href=\"#id78\" rel=\"nofollow\">1.0 (2001/07/10)</a></h3>\n<p>Features Added:</p>\n<ul>\n<li>New field: RawTextAreaField. A textarea field that doesn\u2019t\ndo a lot of processing on the text input.</li>\n<li>Checked in BSD license text.</li>\n</ul>\n<p>Bugs Fixed:</p>\n<ul>\n<li>Fixed minor bug in year handling of DateTimeField.</li>\n<li>Now hidden fields also take text from \u2018extra\u2019 property.</li>\n<li>Fixed bug in MultiItemsWidget; would not deal with only a\nsingle item being selected.</li>\n</ul>\n</div>\n<div id=\"id34\">\n<h3><a href=\"#id79\" rel=\"nofollow\">0.9.5 (2001/06/27)</a></h3>\n<p>Features Added:</p>\n<ul>\n<li>Added FileField (with browse button). Can be used to upload\nfiles if form is set to multipart/form-data.</li>\n<li>Added LinkField for URLs.</li>\n<li>Made ListField and RadioField more tolerant of integer\n(and possibly other) values, not only strings.</li>\n<li>Made ListField and RadioField happy to deal with non-tuples too in the\nitems list. In this case, the item text and value will be identical.</li>\n<li>Refactored ListWidget and RadioWidget so they share code; they both\ninherit from SingleItemsWidget now.</li>\n<li>Added LinesField to submit a list of lines in a textarea.</li>\n<li>Added MultiListField and MultiCheckBoxField, both use new\nMultiItemsWidget and MultiSelectionValidator.</li>\n<li>Added EXPERIMENTAL PatternField.</li>\n</ul>\n</div>\n<div id=\"id35\">\n<h3><a href=\"#id80\" rel=\"nofollow\">0.9.4 (2001/06/20)</a></h3>\n<p>Features Added:</p>\n<ul>\n<li>Added API docs for Form, BasicForm and ZMIForm.</li>\n<li>Renamed the confusingly named PythonForm and PythonField to\nZMIForm and ZMIField, as they are used from the Zope Management\nInterface and not from Python.</li>\n<li>Added render() method to form for basic form rendering.</li>\n<li>Added Formulator HOWTO document.</li>\n</ul>\n<p>Bugs Fixed:</p>\n<ul>\n<li>Removed some validation code that wasn\u2019t in use anymore (items_method).</li>\n<li>Removed \u2018has_field_id\u2019 in Form as this duplicated\nthe functionality of \u2018has_field\u2019.</li>\n<li>Turned &lt;br&gt; in Python sources to &lt;br /&gt; for XHTML compliance.</li>\n<li>Tweaked radiobutton; text is now closer to the button itself,\ndifferent buttons are further apart.</li>\n</ul>\n</div>\n<div id=\"id36\">\n<h3><a href=\"#id81\" rel=\"nofollow\">0.9.3 (2001/06/12)</a></h3>\n<p>Features Added:</p>\n<ul>\n<li>added RadioField for simple display of radio buttons.</li>\n<li>added action, method and enctype property to form settings.\nThese are displayed using the special form.header() and form.footer()\nmethods.</li>\n<li>added override tab to allow all properties to be overridden by\nmethod calls instead. \u2018items_method\u2019 in ListField went\naway.</li>\n<li>added ability to display DateTimeFields using drop down lists\ninstead of text input. Added some other bells and whistles to\nDateTimeField. Changed some of the inner workings of composite\nfields; component fields are now unique per field instance\ninstead of shared between them.</li>\n<li>is_required() utility method on field to check whether a field\nis required.</li>\n<li>some internal features, such the ability to have a method\ncalled as soon as a property has changed.</li>\n</ul>\n<p>Bugs Fixed:</p>\n<ul>\n<li>Fixed typos in security assertions.</li>\n<li>use REQUEST.form instead of REQUEST where possible.</li>\n<li>display month and day with initial zero in DateTimeField.</li>\n<li>Fixed bug in validate_all_to_request(); what can be validated\nwill now be added to REQUEST if possible, even if a\nFormValidationError is raised.</li>\n</ul>\n</div>\n<div id=\"id37\">\n<h3><a href=\"#id82\" rel=\"nofollow\">0.9.2 (2001/05/23)</a></h3>\n<p>Features Added:</p>\n<ul>\n<li>Ability to rename groups, including the first \u2018Default\u2019 group.</li>\n<li>Improved support for sticky forms; form.render() can now\ntake an optional second argument, REQUEST, which can come\nfrom a previous form submit. Even unvalidated fields will\nthen be sticky.</li>\n<li>fields can call an extra optional external validation\nfunction (such as a Python script).</li>\n<li>New alternate name property: the alternate name is added to\nthe result dictionary or REQUEST object after validation. This\ncan be useful to support field names which wouldn\u2019t be valid\nfield names, which can occur in some locales.</li>\n<li>New extra property; can be used to add extra attributes to\na HTML tag.</li>\n<li>Some IntegerField properties can now be left empty if\nno value is required, instead of having to set them to 0.</li>\n<li>Merged functionality of RangedIntegerField into IntegerField.\nRangedIntegerField is not addable anymore, though supported\nas a clone of IntegerField for backwards compatibility. Leaving\n\u2018start\u2019 and \u2018end\u2019 empty in the new IntegerField will mean those\nchecks will not be performed.</li>\n</ul>\n<p>Bugs Fixed:</p>\n<ul>\n<li>Added more missing security declarations.</li>\n<li>html_quote added in various places to make fields display\nvarious HTML entities the right way.</li>\n</ul>\n</div>\n<div id=\"id38\">\n<h3><a href=\"#id83\" rel=\"nofollow\">0.9.1 (2001/05/13)</a></h3>\n<p>Features Added:</p>\n<ul>\n<li>Widgets now have a \u2018hidden\u2019 property. If set, the widget is\ndrawn as a \u2018hidden\u2019 field. \u2018hidden\u2019 fields do get validated\nnormally, however.</li>\n<li>Changed API of Widget and Validator slightly; render() and\nvalidate() methods now take an extra \u2018key\u2019 argument indicating\nthe name the field should have in the form. This is necessarily\nto handle sub fields of composite fields.</li>\n<li>Added EmailField and FloatField.</li>\n<li>Added some infrastructure to support \u2018composite fields\u2019; fields\ncomposed out of multiple sub fields.</li>\n<li>Added DateTimeField, the first example of a composite field\n(field made of other fields).</li>\n</ul>\n<p>Bugs Fixed:</p>\n<ul>\n<li>General code cleanups; removed some unused methods.</li>\n<li>Fixed security assertion for validate_all_to_request() method.</li>\n<li>MethodFields now check whether they have \u2018View\u2019 permission to\nexecute listed Python Script or DTML Method.</li>\n<li>RangedInteger is now &lt; end, instead of &lt;=, compatible with the\ndocumentation.</li>\n</ul>\n</div>\n<div id=\"id39\">\n<h3><a href=\"#id84\" rel=\"nofollow\">0.9 (2001/04/30)</a></h3>\n<ul>\n<li>Initial public release of Formulator.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 945382, "releases": {"1.13": [{"comment_text": "", "digests": {"md5": "6de2bf7990eabfa285d0b4a297c1ae62", "sha256": "535fec9fd28b03e23af07ea238701f4a6834fdacc488719a0fc8ae9be2dd8295"}, "downloads": -1, "filename": "Products.Formulator-1.13.tar.gz", "has_sig": false, "md5_digest": "6de2bf7990eabfa285d0b4a297c1ae62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119328, "upload_time": "2011-11-10T12:59:54", "upload_time_iso_8601": "2011-11-10T12:59:54.057316Z", "url": "https://files.pythonhosted.org/packages/e1/ab/cb14a475062ec2593df83712f3ecb4661d43b383b52c3afce3b4afd54aa5/Products.Formulator-1.13.tar.gz", "yanked": false}], "1.14": [{"comment_text": "", "digests": {"md5": "4d8043cd83b86dd6462f335ac3f3e1a8", "sha256": "18399a75e48675c575eb285cbb89c3138eb91ca1fd0e092297c0661f333f384f"}, "downloads": -1, "filename": "Products.Formulator-1.14.tar.gz", "has_sig": false, "md5_digest": "4d8043cd83b86dd6462f335ac3f3e1a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 121961, "upload_time": "2011-11-10T12:57:32", "upload_time_iso_8601": "2011-11-10T12:57:32.370486Z", "url": "https://files.pythonhosted.org/packages/d6/36/491ac2d871ee25e9def4114059b920b3771469fbcedc57fe18498c51a7d6/Products.Formulator-1.14.tar.gz", "yanked": false}], "1.15": [{"comment_text": "", "digests": {"md5": "2daac66208697a0eec5a9ecb0fc95c5e", "sha256": "7616b9da6c3582719dfec6a775d64039c8c2d539b15bfc00a2a8f4d18802cef2"}, "downloads": -1, "filename": "Products.Formulator-1.15.tar.gz", "has_sig": false, "md5_digest": "2daac66208697a0eec5a9ecb0fc95c5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 121979, "upload_time": "2012-09-04T08:03:07", "upload_time_iso_8601": "2012-09-04T08:03:07.805141Z", "url": "https://files.pythonhosted.org/packages/34/f6/92c4beed24f52138bef57e94fcf96c58b77037c2a6699c611382dc3e1371/Products.Formulator-1.15.tar.gz", "yanked": false}], "1.15.1": [{"comment_text": "", "digests": {"md5": "db2079a1235a96b9ff882c9dee16d7af", "sha256": "933cd7431bc3fd614e11191e3922600f98aee9cf32b1ab97d8a2b44a4a5490df"}, "downloads": -1, "filename": "Products.Formulator-1.15.1.tar.gz", "has_sig": false, "md5_digest": "db2079a1235a96b9ff882c9dee16d7af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 122048, "upload_time": "2012-12-12T11:08:12", "upload_time_iso_8601": "2012-12-12T11:08:12.199923Z", "url": "https://files.pythonhosted.org/packages/f7/77/99141cecd5004539288600ceea5604e22937086eff439e7c7afe44a0bf51/Products.Formulator-1.15.1.tar.gz", "yanked": false}], "1.15.2": [{"comment_text": "", "digests": {"md5": "a3f90079c9ccb0bac68fa126ec1c1d6f", "sha256": "a00ff0194c80915799934494f59d5c0a6b66fdc598106d81f34c0c2f75dc756b"}, "downloads": -1, "filename": "Products.Formulator-1.15.2.tar.gz", "has_sig": false, "md5_digest": "a3f90079c9ccb0bac68fa126ec1c1d6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 122317, "upload_time": "2013-03-05T17:23:37", "upload_time_iso_8601": "2013-03-05T17:23:37.761667Z", "url": "https://files.pythonhosted.org/packages/3a/d5/47750394a1d683a6d6afceb0609d3ed647d96d4caa2a5c88b5875db03260/Products.Formulator-1.15.2.tar.gz", "yanked": false}], "1.15.3": [{"comment_text": "", "digests": {"md5": "277cbd0dfcfc37246a3a0955a5fc038f", "sha256": "bb5932849b6da827a1aecbd03a0b9b527774ebb5fd9a9623bf932deeea14408d"}, "downloads": -1, "filename": "Products.Formulator-1.15.3.tar.gz", "has_sig": false, "md5_digest": "277cbd0dfcfc37246a3a0955a5fc038f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 122984, "upload_time": "2013-05-23T12:00:04", "upload_time_iso_8601": "2013-05-23T12:00:04.055502Z", "url": "https://files.pythonhosted.org/packages/d5/fc/9e7ca9d140c98827d72e7d4e7dc71c31415be8399dc81096edca732f19bf/Products.Formulator-1.15.3.tar.gz", "yanked": false}], "1.15.4": [{"comment_text": "", "digests": {"md5": "f6e7e0361bad328ef8021cb65abf7d03", "sha256": "7b72954f47732f7ab8b9d034ae76c2e794581ac75e5863f9391a0c0f21ef58bf"}, "downloads": -1, "filename": "Products.Formulator-1.15.4.tar.gz", "has_sig": false, "md5_digest": "f6e7e0361bad328ef8021cb65abf7d03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 126216, "upload_time": "2013-08-26T13:19:03", "upload_time_iso_8601": "2013-08-26T13:19:03.529640Z", "url": "https://files.pythonhosted.org/packages/24/a5/4debe4721b0804c7b4f7ae18c7444b64076645a98921e30511faecd44064/Products.Formulator-1.15.4.tar.gz", "yanked": false}], "1.15.5": [{"comment_text": "", "digests": {"md5": "05cc0e997aa0ece30bf8d4c622de17a5", "sha256": "e53ed4bf6b619efcd570cb0515332700dd3f729ef1630bad4798a888cfd2d7ae"}, "downloads": -1, "filename": "Products.Formulator-1.15.5.tar.gz", "has_sig": false, "md5_digest": "05cc0e997aa0ece30bf8d4c622de17a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 125364, "upload_time": "2013-10-08T14:14:19", "upload_time_iso_8601": "2013-10-08T14:14:19.925945Z", "url": "https://files.pythonhosted.org/packages/80/8c/7e5c971a913ef57c6d5db60f6bdb903d2ff0df9f8e87a59c874ba66fecb1/Products.Formulator-1.15.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "05cc0e997aa0ece30bf8d4c622de17a5", "sha256": "e53ed4bf6b619efcd570cb0515332700dd3f729ef1630bad4798a888cfd2d7ae"}, "downloads": -1, "filename": "Products.Formulator-1.15.5.tar.gz", "has_sig": false, "md5_digest": "05cc0e997aa0ece30bf8d4c622de17a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 125364, "upload_time": "2013-10-08T14:14:19", "upload_time_iso_8601": "2013-10-08T14:14:19.925945Z", "url": "https://files.pythonhosted.org/packages/80/8c/7e5c971a913ef57c6d5db60f6bdb903d2ff0df9f8e87a59c874ba66fecb1/Products.Formulator-1.15.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:18:17 2020"}