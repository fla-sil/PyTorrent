{"info": {"author": "lin3x", "author_email": "544670411@qq.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Easy Spider\n## release note \n1.0.13: \u6dfb\u52a0\u81ea\u52a8\u4fdd\u5b58\u529f\u80fd\n\n1.1.2: \u5f15\u5165\u4e2d\u95f4\u4ef6\u5904\u7406\uff0c\u4f18\u5316 easy_spider.core.Spider \u4e2d\u5bf9\u8bf7\u6c42\u8fdb\u884c\u5904\u7406\u7684\u903b\u8f91\u3002\n\n## quick start\n``` python\nfrom easy_spider import async_env, AsyncSpider, Request, HTMLResponse\n    \nclass MySpider(AsyncSpider):\n\n    def init(self):\n        super().__init__()\n        self.start_targets = [\"https://github.blog/\"]\n\n    def handle(self, response: HTMLResponse):\n        titles = response.bs.select(\".post-list__item a\")\n        print([title.text for title in titles])\n\nasync_env.run(MySpider())\n```\n\n\u8fd9\u6bb5\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a`spider`\u5bf9\u8c61\uff0c\u5e76\u722c\u53d6\u4e86[github-blog](https://github.blog/) \u4e2d\u6587\u7ae0\u7684\u6807\u9898\u3002\u5176\u4e2d\u4e3b\u8981\u5305\u542b\u4e86`init` \u4ee5\u53ca `handle` \u4e24\u4e2a\u65b9\u6cd5\u3002\u5728`init`\u65b9\u6cd5\u4e2d\u53ef\u4ee5\u5bf9\u722c\u866b\u7684\u53c2\u6570\u8fdb\u884c\u8bbe\u7f6e\u3002\u4f8b\u5982 `self.start_targets = [\"https://github.blog/\"]` \u8bbe\u7f6e\u4e86\u521d\u59cb\u722c\u53d6\u76ee\u6807\u3002\u800c `handle(self, response: HTMLResponse)`  \u65b9\u6cd5\u4e3b\u8981\u7528\u4e8e\u5bf9\u670d\u52a1\u5668\u8fd4\u56de\u7684\u5185\u5bb9\u8fdb\u884c\u5904\u7406\u3002`response.bs` \u8868\u793a\u4e00\u4e2a\u7531\u8fd4\u56de\u7684\u7f51\u9875\u6784\u9020\u7684 [Beautiful Soup4](https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/) \u5bf9\u8c61\uff0c\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u63d0\u53d6\u9700\u8981\u7684\u5185\u5bb9\u3002\n\n## \u53d1\u73b0\u65b0\u94fe\u63a5\n\n`handle` \u65b9\u6cd5\u9664\u4e86\u5904\u7406\u670d\u52a1\u5668\u8fd4\u56de\u7684\u54cd\u5e94\u5bf9\u8c61[Response](https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/network/response.py)\u4ee5\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u529f\u80fd\u5219\u662f\u53d1\u73b0\u65b0\u7684\u94fe\u63a5\u3002\u5728 `easy_spider` \u4e2d\uff0c\u4e00\u4e2a\u65b0\u7684\u94fe\u63a5\u9700\u8981\u7ec4\u88c5\u6210\u4e00\u4e2a\u8bf7\u6c42\u5bf9\u8c61 [Request](https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/network/request.py?tab=files) \u3002\u8bf7\u6c42\u5bf9\u8c61\u9664\u4e86\u5305\u542b\u9700\u8981\u722c\u53d6\u7684\u94fe\u63a5\u5916\uff0c\u8fd8\u5305\u542b\u722c\u53d6\u8fd9\u4e2a\u94fe\u63a5\u7684\u53c2\u6570\u6216`Cookies`\u7b49\u5185\u5bb9\uff0c\u8fd9\u4e9b\u5185\u5bb9\u5927\u90e8\u5206\u5177\u6709\u9ed8\u8ba4\u503c\u3002\u4e00\u4e2a\u8ddf\u968f\u94fe\u63a5\u7684\u793a\u4f8b\u4e3a:\n\n``` python\nfrom easy_spider import async_env, AsyncSpider, Request, HTMLResponse\n\nclass MySpider(AsyncSpider):\n\n    def init(self):\n        self.start_targets = [\"https://github.blog/\"]\n        \n    def handle(self, response: HTMLResponse):\n        for a in response.bs.select(\"a\"):\n            if \"href\" in a.attrs:\n                yield Request.of(response.url_join(a.attrs[\"href\"]))\n```\n\n`response.url_join` \u65b9\u6cd5\u5c06\u7f51\u9875\u4e2d\u7684\u76f8\u5bf9\u94fe\u63a5\u53d8\u4e3a\u7edd\u5bf9\u94fe\u63a5\uff0c\u4f8b\u5982\u4ece `page/2` \u53d8\u4e3a `https://github.blog/2`\u3002`Request.of` \u65b9\u6cd5\u5229\u7528 `url` \u521b\u5efa\u5177\u6709\u9ed8\u8ba4\u53c2\u6570\u7684 `Request` \u5bf9\u8c61\u3002`handle` \u65b9\u6cd5\u53ef\u4ee5\u662f\u4e00\u4e2a\u751f\u6210\u5668\u6216\u8005\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u53ef\u8fed\u4ee3 `Request` \u5bf9\u8c61\u96c6\u5408\u3002\u6240\u6709 `handle` \u4ea7\u751f\u7684\u65b0 `Request` \u5bf9\u8c61\u90fd\u5c06\u653e\u5165\u5f85\u8bf7\u6c42\u961f\u5217\u4e2d\uff0c\u9010\u4e2a\u8fdb\u884c\u8bf7\u6c42\u3002\u5f53\u67d0\u4e2a\u8bf7\u6c42\u5b8c\u6210\u540e\uff0c\u5c06\u7ee7\u7eed\u8c03\u7528 `handle` \u65b9\u6cd5\u8fdb\u884c\u5904\u7406\u3002\n\n`easy_spider` \u4e2d\u5df2\u7ecf\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7075\u6d3b\u7684\u53d1\u73b0\u65b0\u94fe\u63a5\u7684\u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5:\n\n``` python\nfrom easy_spider import async_env, AsyncSpider, Request, HTMLResponse\n\nclass MySpider(AsyncSpider):\n\n    def init(self):\n        self.start_targets = [\"https://github.blog/\"]\n        \n    def handle(self, response: HTMLResponse):\n        yield from super().handle(response)  # \u9ed8\u8ba4\u53d1\u73b0\u65b0\u8fde\u63a5\u7684\u65b9\u6cd5\n```\n\n\u53d1\u73b0 `response` \u4e2d\u7684\u6240\u6709\u94fe\u63a5\u3002\n\n## \u8fdb\u9636\u4f7f\u7528\n\n### \u4f7f\u7528\u8fc7\u6ee4\u5668\n\n\u5728\u9ed8\u8ba4\u7684\u60c5\u51b5\u4e0b\uff0c\u9664\u521d\u59cb\u8bf7\u6c42\u5916\u7684\u6240\u6709\u8bf7\u6c42\u90fd\u5c06\u4f7f\u7528\u8fc7\u6ee4\u5668 [Filter](https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/filters/filter.py) \u8fdb\u884c\u8fc7\u6ee4\u3002\u8fc7\u6ee4\u5668\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u5e03\u5c14\u503c\uff0c\u8868\u793a\u63a5\u53d7\u6216\u662f\u62d2\u7edd\u8fd9\u4e2a\u53c2\u6570\u3002\u5728\u5b9a\u4e49 `spider` \u5bf9\u8c61\u65f6\u53ef\u4ee5\u6307\u5b9a `self.filter`\uff0c\u8868\u793a\u4e0d\u88ab\u8be5 `filter` \u63a5\u6536\u7684\u8bf7\u6c42\u90fd\u4e0d\u4f1a\u653e\u5165\u8bf7\u6c42\u961f\u5217\u4e2d\u3002\u4f8b\u5982:\n\n```python\nclass MySpider(AsyncSpider):\n\n    def init(self):\n        self.start_targets = [\"https://github.blog/\"]\n        self.filter = URLRegFilter(r\"^https://github\\.blog.+\")\n\n    def handle(self, response: HTMLResponse):\n        for a in response.bs.select(\"a\"):\n            if \"href\" in a.attrs:\n                yield Request.of(response.url_join(a.attrs[\"href\"]))\n```\n\n\u5728 `handle` \u65b9\u6cd5\u4e2d\u867d\u7136\u63d0\u53d6\u4e86\u6240\u6709\u7684 URL\uff0c\u4f46\u91c7\u7528 `URLRegFilter` \u5bf9\u5176\u8fdb\u884c\u4e86\u8fc7\u6ee4\u3002\u53ea\u6709 `URL` \u6ee1\u8db3 `r\"^https://github\\.blog.+\"` \u7684\u8bf7\u6c42\u4f1a\u88ab\u653e\u5165\u961f\u5217\uff0c\u5426\u5219\u5c06\u88ab\u4e22\u5f03\u3002\u5728 `easy_spider` \u4e2d\u4e3b\u8981\u5305\u542b**\u666e\u901a\u8fc7\u6ee4\u5668** \u4ee5\u53ca**\u53bb\u91cd\u8fc7\u6ee4\u5668**\u4e24\u79cd\u7c7b\u578b\u7684\u8fc7\u6ee4\u5668\uff0c\u666e\u901a\u8fc7\u6ee4\u5668\u6709\u5982\u4e0b\u51e0\u79cd:\n\n- RegexFilter: \u6b63\u5219\u8868\u8fbe\u5f0f\u8fc7\u6ee4\u5668\n- static_filter: \u9759\u6001\u6587\u4ef6\u8fc7\u6ee4\u5668(\u907f\u514d\u722c\u53d6\u5230 jpg|css \u7b49\u7c7b\u578b\u6587\u4ef6)\n- url_filter: \u5408\u6cd5 URL \u8fc7\u6ee4\u5668\n- html_filter: \u54cd\u5e94\u7c7b\u578b\u4e3a html \u7684 URL \u8fc7\u6ee4\u5668(\u901a\u8fc7\u540e\u7f00\u5224\u5b9a\uff0c\u6709\u4e00\u5b9a\u7684\u8bef\u5224\u51e0\u7387)\n- all_pass_filter: \u5168\u90e8\u63a5\u6536\u8fc7\u6ee4\u5668\n- all_reject_filter: \u5168\u90e8\u62d2\u7edd\u8fc7\u6ee4\u5668\n- GenerationFilter: \u62d2\u7edd\u6df1\u5ea6\u5927\u4e8e\u67d0\u4e2a\u503c\u7684\u8bf7\u6c42\n\n\u8fc7\u6ee4\u5668\u652f\u6301\u67d0\u4e9b\u8fd0\u7b97\u7b26\u64cd\u4f5c\uff0c\u4f8b\u5982 `static_filter` \u867d\u7136\u8868\u793a\u63a5\u53d7\u9759\u6001\u6587\u4ef6\uff0c\u4f46\u5728\u5982\u679c `-static_filter`  \u5219\u53d8\u4e3a\u62d2\u7edd\u9759\u6001\u6587\u4ef6\u3002\u8fd9\u91cc\u8bbe\u6709\u4e24\u4e2a\u8fc7\u6ee4\u5668\u4e3a`f1 f2`\uff0c\u5219\u6709:\n\n* `f1` + `f2`: `f1 f2` \u540c\u65f6\u63a5\u6536\u5219\u63a5\u53d7\uff0c\u5426\u5219\u62d2\u7edd\n* `f1` -`f2`\uff1a `f1` \u63a5\u53d7\u540c\u65f6 `f2` \u62d2\u7edd\u5219\u63a5\u53d7\uff0c\u5426\u5219\u62d2\u7edd\n* `f1` | `f2`\uff1a `f1` \u63a5\u53d7\u6216\u8005 `f2` \u62d2\u7edd\u5219\u63a5\u53d7\uff0c\u5426\u5219\u62d2\u7edd\n* `-f1`: `f1` \u62d2\u7edd\u5219\u63a5\u53d7\uff0c\u5426\u5219\u62d2\u7edd\n\n\u6240\u6709\u7684\u8fd0\u7b97\u7b26\u652f\u6301\u591a\u4e2a\u8fc7\u6ee4\u5668\u7ea7\u8054\u4f7f\u7528\u3002 `self.filter` \u9ed8\u8ba4\u4e3a `html_filter`\uff0c\u5b9e\u9645\u4e0a `html_filter = url_filter - static_filter` \uff0c \u5373\u63d0\u53d6\u63a5\u53d7\u6240\u6709\u5177\u6709\u5408\u6cd5URL[1]\u4e14\u4e0d\u4e3a\u9759\u6001\u6587\u4ef6\u7684\u8bf7\u6c42\u3002\n\n`GenerationFilter` \u5e76\u4e0d\u5bf9\u8bf7\u6c42\u7684 URL \u8fdb\u884c\u68c0\u67e5\uff0c\u800c\u662f\u68c0\u67e5\u8bf7\u6c42\u7684\u6df1\u5ea6(`Request.generation`)\uff0c\u6bcf\u4e00\u4e2a\u521d\u59cb\u8bf7\u6c42\u7684\u6df1\u5ea6\u4e3a0\uff0c\u521d\u59cb\u8bf7\u6c42\u4ea7\u751f\u7684\u8bf7\u6c42\u6df1\u5ea6\u4e3a1\uff0c\u6df1\u5ea6\u4e3a1\u7684\u8bf7\u6c42\u4ea7\u751f\u7684\u8bf7\u6c42\u6df1\u5ea6\u4e3a2\u3002`easy_spider` \u722c\u53d6\u7684\u65b9\u6cd5\u4e3a**\u5e7f\u5ea6\u4f18\u5148**\u3002\n\n\u53bb\u91cd\u8fc7\u6ee4\u5668\u8fd8\u5305\u542b\u4e86 [BloomFilter](https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/filters/history_filter.py) \u4ee5\u53ca [HashFilter](https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/filters/history_filter.py) \u5bf9\u5df2\u5b8c\u6210\u7684\u8bf7\u6c42\u8fdb\u884c\u8fc7\u6ee4\uff0c\u5373 `URL` \u53bb\u91cd\u7684\u529f\u80fd\u3002`easy_spider` \u9ed8\u8ba4\u91c7\u7528 `HashFilter` \u8fdb\u884c\u53bb\u91cd\uff0c\u53ef\u4ee5\u5c06 `self.crawled_filter` [2] \u4fee\u6539\u4e3a `BloomFilter` \u4ee5\u8282\u7ea6\u5185\u5b58\u3002\n\n1. \u67d0\u4e9b\u65f6\u5019\u5982  `<a href=\"javascript: callback\">click</a>` \u63d0\u53d6\u7684 `URL` \u4e3a `javascript: callback` \uff0c\u4e0d\u662f\u5408\u6cd5\u7684URL \u3002\n2. \u8fd9\u91cc\u5fc5\u987b\u8bbe\u7f6e `self.crawled_filter` \u800c\u4e0d\u662f\u4f7f\u7528 `self.filter`\u3002\u8fd9\u53bb\u91cd\u8fc7\u6ee4\u5668\u4e5f\u65e0\u6cd5\u548c\u666e\u901a\u7684\u8fc7\u6ee4\u5668\u8fdb\u884c\u8fd0\u7b97\uff0c\u5426\u5219\u65e0\u6cd5\u5b9e\u73b0\u53bb\u91cd\u7684\u529f\u80fd\u3002\n\n### \u8bf7\u6c42\u5bf9\u8c61\n\n\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u7684 `Request` \u5bf9\u8c61\u80fd\u6ee1\u8db3\u5927\u90e8\u5206\u7684\u9700\u6c42\uff0c\u4f46\u662f `Request` \u4e5f\u652f\u6301\u8bb8\u591a\u81ea\u5b9a\u4e49\u7684\u53c2\u6570:\n\n```\nmethod: str = \u8bf7\u6c42\u65b9\u6cd5 GET|POST|PUT|DELETE \ntimeout: int = \u8d85\u65f6\u65f6\u95f4\nheaders: dict = \u8bf7\u6c42\u5934\uff0c\u9ed8\u8ba4{}\ncookies: dict = cookies\uff0c\u9ed8\u8ba4{}\nencoding: str = \u7f16\u7801\u65b9\u5f0f\uff0c\u9ed8\u8ba4utf-8\nparams: dict = URL\u53c2\u6570\uff0c\u9ed8\u8ba4{}\ndata: dict = \u6570\u636e\uff0c\u53d6\u51b3\u4e8e data_format\ndata_format: str = \u6570\u636e\u683c\u5f0f FORM|JSON\uff0c\u82e5\u4e3a FORM \u6570\u636e\u901a\u8fc7 application/x-www-form-urlencoded \u683c\u5f0f\u4f20\u9012\uff0c\u82e5\u4e3a JSON \u5219\u901a\u8fc7 application/json\u3002\nproxy: str = \u4ee3\u7406\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\nhandler: str = \u5904\u7406\u8be5 Request \u7684\u56de\u8c03\u51fd\u6570\n```\n\u5176\u4e2d `handler` \u5c5e\u6027\u7528\u4e8e\u5b9a\u4e49\u8be5\u8bf7\u6c42\u5b8c\u6210\u65f6\u7684\u56de\u8c03\u5904\u7406\u51fd\u6570\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5c06\u91c7\u7528 `Spider` \u5bf9\u8c61\u4e2d\u7684`handle` \u65b9\u6cd5\u3002\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u4efb\u4f55\u81ea\u5df1\u7684\u65b9\u6cd5\u8fdb\u884c\u5904\u7406\u3002\n\n### \u54cd\u5e94\u5bf9\u8c61\n\n\u4e00\u4e2a\u8bf7\u6c42\u5bf9\u8c61\u7ecf\u7531[AsyncClient](https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/network/client.py)[1]\uff0c\u53d1\u8d77\u8bf7\u6c42\u540e\u5c06\u8fd4\u56de\u4e00\u4e2a\u54cd\u5e94\u5bf9\u8c61\uff0c\u5373\u5728 handle \u65b9\u6cd5\u4e2d\u5904\u7406\u7684\u5bf9\u8c61\u3002`easy_spider` \u9ed8\u8ba4\u6839\u636e `content_type` \u751f\u6210\u4e09\u79cd\u4e0d\u540c\u7684\u54cd\u5e94\u5bf9\u8c61\uff0c\u5982\u679c `content_type` \u5305\u542b`text/html` \u5219  [HtmlResponse](https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/network/response.py)\uff0c\u5982\u679c `content_type` \u5305\u542b\u9664 `text/html` \u4ee5\u5916\u7684 `text/*` \u5bf9\u8c61\uff0c\u5219\u8fd4\u56de[TextResponse](https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/network/response.py)\uff0c\u5426\u5219\u8fd4\u56de[Response](https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/network/response.py)\u3002\u5176\u4e2d\u4e0d\u540c\u7684\u54cd\u5e94\u5bf9\u8c61\u6709\u4e0d\u540c\u7684\u5c5e\u6027\uff0c\u4ece `Response -> TextResponse -> HtmlResponse` \u9010\u6e10\u589e\u591a\u3002\n\n`Response` \u5bf9\u8c61\u5177\u6709\u7684\u5c5e\u6027:\n\n* headers: HTTP \u54cd\u5e94\u5934\n\n* body: HTTP \u54cd\u5e94\u4f53\uff0c\u4e3a\u672a\u89e3\u7801\u7684 bytes \u7c7b\u578b\n* url: \u54cd\u5e94\u5bf9\u8c61\u7684 `URL`\n* request: \u4ea7\u751f\u8be5\u54cd\u5e94\u5bf9\u5e94\u7684\u8bf7\u6c42\n\n`TextResponse` \u5728 `Response` \u57fa\u7840\u4e0a\u589e\u52a0\u4e86:\n\n* text: \u89e3\u7801\u540e\u7684\u6587\u672c\u5185\u5bb9\uff0c`TextResponse` \u4f1a\u81ea\u52a8\u731c\u6d4b `body` \u7684\u7f16\u7801\u7c7b\u578b\u8fdb\u884c\u89e3\u7801\uff0c\u5c3d\u91cf\u907f\u514d\u4e71\u7801\u4ea7\u751f\n\n`HtmlResponse`  \u5728 `TextResponse` \u57fa\u7840\u4e0a\u589e\u52a0\u4e86:\n\n* bs:  \u5229\u7528 text \u5c5e\u6027\u6784\u5efa\u7684 [Beautiful Soup4](https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/) \u5bf9\u8c61\n\n### \u9ed8\u8ba4\u8bf7\u6c42\u53c2\u6570\n\n\u5f88\u591a\u65f6\u5019\u9700\u8981\u5b9a\u4e49\u4e00\u7cfb\u5217\u9ed8\u8ba4\u53c2\u6570\uff0c\u800c\u4e0d\u662f\u5728\u6bcf\u4e2a\u8bf7\u6c42\u4e2d\u90fd\u58f0\u660e\uff0c\u5728 `easy_spider` \u4e2d\u6240\u6709\u5b9a\u4e49\u5728 `spider` \u4e2d\u4e0e\u8bf7\u6c42\u5bf9\u8c61\u76f8\u540c\u7684\u5c5e\u6027\u90fd\u5c06\u590d\u5236\u7ed9\u6bcf\u4e00\u4e2a\u65b0\u4ea7\u751f\u7684\u8bf7\u6c42\uff0c\u5305\u62ec\u521d\u59cb\u8bf7\u6c42:\n\n```python\nclass MySpider(AsyncSpider):\n\n    def init(self):\n        self.start_targets = [\"https://github.blog/\"]\n        self.cookies = {\"key\": \"value\"}  # \u7528\u4e8e\u8bbe\u7f6e\u9ed8\u8ba4\u8bf7\u6c42\u53c2\u6570\n\n    def handle(self, response: HTMLResponse):\n        urls = [response.url_join(a.attrs[\"href\"]) for a in response.bs.select(\"a\")]\n        yield self.from_url(urls)  # \u6240\u6709\u8bf7\u6c42\u7684 cookies \u90fd\u5c06\u8bbe\u7f6e\u4e0e self.cookies \u76f8\u540c\n```\n\n### \u81ea\u5b9a\u4e49\u5904\u7406\u65b9\u6cd5\n\n\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u8bf7\u6c42\u5bf9\u8c61\u7684 `handler` \u5c5e\u6027\u6765\u8bbe\u7f6e\u5904\u7406\u8be5\u8bf7\u6c42\u8fd4\u56de\u7684\u54cd\u5e94:\n```python\nfrom easy_spider import async_env, AsyncSpider, Request, HTMLResponse\n\nclass MySpider(AsyncSpider):\n\n    def init(self):\n        self.cookies = {\"key\": \"value\"}  # \u7528\u4e8e\u8bbe\u7f6e\u9ed8\u8ba4\u8bf7\u6c42\u53c2\u6570\n        self.start_targets = [\"https://github.blog/\"]\n\n    def handle(self, response: HTMLResponse):\n        urls = [response.url_join(a.attrs[\"href\"]) for a in response.bs.select(\"a\")]\n        for url in urls:\n            if url.endswith(\"xxx\"):\n                yield Request(url, handler=self.handle_other)  # \u8be5\u8bf7\u6c42\u8fd4\u56de\u7684 response \u5c06\u7531 handle_other \u65b9\u6cd5\u5904\u7406\n            else:\n                yield Request(url, handler=self.handle)\n\n    def handle_other(self, response):\n        # do something\n        pass\n\nasync_env.run(MySpider())\n```\n\n### \u8bf7\u6c42\u4e2d\u95f4\u4ef6\n\n\u5728 `easy_spider` \u4e2d\uff0c\u6240\u6709\u7684\u8bf7\u6c42\u90fd\u5c06\u7ecf\u8fc7\u8bf7\u6c42\u4e2d\u95f4\u4ef6\u7684\u5904\u7406\u3002\u8bf7\u6c42\u4e2d\u95f4\u4ef6\u662f\u4e00\u7cfb\u5217\u5bf9\u8bf7\u6c42\u8fdb\u884c\u53d8\u6362\u7684\u7c7b\uff0c\u5176\u90fd\u7ee7\u627f\u4e8e[RequestMiddleware](https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/middlewares/build_in.py)\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b:\n\n``` python\nclass RequestMiddleware(ABC):\n\n    @abstractmethod\n    def transform(self, requests: Iterable[Request], response: Optional[Response]) -> Iterable[Request]: pass\n```\n\n\u5176\u6838\u5fc3\u65b9\u6cd5`transform`\u63a5\u53d7\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7684\u8bf7\u6c42\u96c6\u5408\uff0c\u4ee5\u53ca\u4ea7\u751f\u8fd9\u4e9b\u8bf7\u6c42\u7684 `Response` \u5bf9\u8c61\u5982\u679c\u4e3a\u521d\u59cb\u8bf7\u6c42\uff0c\u5219 `Response` \u5bf9\u8c61\u4e3a `None`\u3002`transform`\u6839\u636e\u8fd9\u4e9b\u53c2\u6570\u4ea7\u751f\u65b0\u7684\u53ef\u8fed\u4ee3\u7684\u8bf7\u6c42\u96c6\u5408\u3002\n\n`easy_spider` \u8bb8\u591a\u529f\u80fd\u90fd\u901a\u8fc7\u4e2d\u95f4\u4ef6\u5b9e\u73b0\uff0c\u5982`\u8fc7\u6ee4\u5668`\u3001`\u53bb\u91cd\u8fc7\u6ee4\u5668` \u4ee5\u53ca `\u9ed8\u8ba4\u53c2\u6570`\u3002\u4f8b\u5982`ExtractorFilterMiddleware(self.filter)`  \u63a5\u53d7 `self.filter `\u4e3a\u53c2\u6570\uff0c\u5c06\u6240\u6709 `self.filter ` \u62d2\u7edd\u7684\u8bf7\u6c42\u4ece\u8f93\u5165\u7684\u8bf7\u6c42\u96c6\u5408\u4e2d\u9664\u53bb\u3002 \u9ed8\u8ba4\u91c7\u7528\u4e86\u4ee5\u4e0b\u4e2d\u95f4\u4ef6:\n\n```python\n    def middlewares(self):\n        return ChainMiddleware(GenerationMiddleware(),  # \u8bbe\u7f6e\u8bf7\u6c42\u4e3a\u7b2c n \u4ee3\uff0c\u652f\u6301GenerationFilter \u8fc7\u6ee4\u5668\n                               ExtractorFilterMiddleware(self.filter),  # \u7528\u4e8e\u652f\u6301\u8fc7\u6ee4\u5668\n                               FilterMiddleware(self.crawled_filter),  # \u652f\u6301\u53bb\u91cd\u8fc7\u6ee4\u5668\n                               SetAttrMiddleware(self))  # \u7528\u4e8e\u8bbe\u7f6e\u8bf7\u6c42\u9ed8\u8ba4\u53c2\u6570\n```\n\n\u5176\u4e2d `ChainMiddleware` \u7528\u4e8e\u5c06\u591a\u4e2a\u4e2d\u95f4\u4ef6\u5408\u5e76\u4e3a\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u8fdb\u884c\u6267\u884c[1]\u3002\u7528\u4e8e\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u8bf7\u6c42\u4e2d\u95f4\u5e76\u91cd\u5199`spider` \u5bf9\u8c61\u7684`middlewares` \u65b9\u6cd5\u4ee5\u6269\u5c55 `easy_spider` \u7684\u529f\u80fd\u3002\u4f8b\u5982\u67d0\u4e9b\u65f6\u5019\u9700\u8981\u5c06\u521d\u59cb\u722c\u53d6\u76ee\u6807\u4fdd\u5b58\u5728\u6587\u4ef6\u4e2d\uff0c\u4f7f\u7528\u65f6\u8bfb\u53d6:\n\n```python\nfrom typing import Iterable, Optional\nfrom easy_spider import async_env, AsyncSpider, Request, HTMLResponse, Response\nfrom easy_spider.middlewares.build_in import RequestMiddleware, ChainMiddleware\nfrom easy_spider.tool import get_abs_path\nfrom easy_spider import GenerationFilter\nfrom os.path import join\n\nclass LoadFileMiddleware(RequestMiddleware):\n    def transform(self, requests: Iterable[Request], response: Optional[Response]) -> Iterable[Request]:\n        if not response:  # \u5982\u679c\u4e3a\u521d\u59cb\u8bf7\u6c42\uff0c\u5219\u4ece\u6587\u4ef6\u4e2d\u6784\u9020\u8bf7\u6c42\n            url = list(requests)[0].url\n            with open(join(get_abs_path(__file__), url), encoding='utf-8') as fd:\n                for line in fd.readlines():\n                    yield Request.of(line.strip(\"\\n\"))\n        else:  # \u5426\u5219\u4e0d\u505a\u4efb\u4f55\u4e8b\u60c5\n            yield from requests\n\nclass MySpider(AsyncSpider):\n\n    def init(self):\n        self.start_targets = [\"urls.txt\"]\n\n    def handle(self, response: HTMLResponse):\n        titles = response.bs.select(\".post-list__item a\")\n        print([title.text for title in titles])\n\n    def middlewares(self):\n        return ChainMiddleware(LoadFileMiddleware()).extend(super().middlewares())\n\nasync_env.run(MySpider())\n```\n\n\u5176\u4e2d\uff0c`middlewares` \u4e2d\u91c7\u7528 `ChainMiddleware(LoadFileMiddleware()).extend(super().middlewares())`  \u5c06\u65b0\u7684\u4e2d\u95f4\u4ef6\u4ee5\u53ca\u9ed8\u8ba4\u7684\u4e2d\u95f4\u4ef6\u7ed3\u5408\u5728\u4e00\u8d77[2]\uff0c\u5f62\u6210\u65b0\u7684\u4e2d\u95f4\u4ef6\u5e76\u8fd4\u56de\u3002\n\n1. `ChainMiddleware` \u5c06\u6240\u6709\u4e2d\u95f4\u4ef6\u6309\u7167\u4f20\u5165\u7684\u987a\u5e8f\u8fdb\u884c\u6267\u884c\n2. \u5982\u679c\u4f60\u4e0d\u662f\u5341\u5206\u4e86\u89e3\u9ed8\u8ba4\u4e2d\u95f4\u4ef6\u6267\u884c\u7684\u529f\u80fd\u4ee5\u53ca\u53bb\u6389\u5b83\u6240\u4ea7\u751f\u7684\u5f71\u54cd\uff0c\u5efa\u8bae\u5728\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u65f6\u4e00\u5b9a\u8981\u4fdd\u7559\u9ed8\u8ba4\u4e2d\u95f4\u4ef6\uff0c\u5e76\u4f7f\u5f97\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u5728\u9ed8\u8ba4\u4e2d\u95f4\u4ef6\u524d\u6267\u884c\u3002\n\n### \u6062\u590d\u722c\u866b\n\n`easy_spider` \u5b9e\u73b0\u4e86\u4e24\u79cd\u53ef\u6062\u590d\u7684\u722c\u866b\uff0c\u4e00\u79cd\u662f\u5f53\u7528\u6237\u4e3b\u52a8\u7ed3\u675f\u722c\u866b\uff0c\u4e00\u79cd\u662f\u88ab\u610f\u5916\u5173\u95ed\u7684\u722c\u866b\u3002\u5bf9\u4e8e\u7b2c\u4e00\u79cd\uff0c`easy_spider` \u6355\u83b7\u4e86`ctrl + c`\uff0c\u5f53\u4f60\u6309\u4e0b`ctrl + c` \u65f6\u4f1a\u8fdb\u884c\u4e00\u7cfb\u5217\u8be2\u95ee\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u662f\u5426\u4fdd\u5b58\u4f60\u7684\u722c\u866b[1]\u3002\u5982\u679c\u7b2c\u4e8c\u6b21\u8fd0\u884c\u8be5\u722c\u866b\uff0c\u5982\u679c\u68c0\u6d4b\u5df2\u5230\u4fdd\u5b58\u7684\u8bb0\u5f55\uff0c\u4f1a\u8be2\u95ee\u4f60\u662f\u5426\u7ee7\u7eed\u3002\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\uff0c`easy_spider`\u63d0\u4f9b\u4e86\u81ea\u52a8\u4fdd\u5b58\u7684\u529f\u80fd\u3002\n\n\u4f60\u53ef\u4ee5\u7ee7\u627f[RecoverableSpider](https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/core/spider.py)\u6765\u5b9e\u73b0\u53ef\u6062\u590d\u7684\u722c\u866b\u3002\u8be5\u722c\u866b\u5bf9\u8c61\u4e0e `AsyncSpider` \u4f7f\u7528\u65b9\u6cd5\u76f8\u540c\uff0c\u53ea\u662f\u591a\u4e86\u9700\u8981\u8bbe\u7f6e\u7684\u53c2\u6570:\n\n* name: \u722c\u866b\u7684\u540d\u79f0\n* auto_save_frequence: \u81ea\u52a8\u4fdd\u5b58\u9891\u7387\n\n`name` \u5c06\u51b3\u5b9a\u722c\u866b\u4fdd\u5b58\u7684\u8def\u5f84\uff0c\u800c `auto_save_frequence` \u5c06\u51b3\u5b9a\u722c\u866b\u81ea\u52a8\u4fdd\u5b58\u7684\u9891\u7387\u3002`auto_save_frequence = 1000` \u8868\u793a\u6bcf\u8fdb\u884c `1000` \u8bf7\u6c42\u5219\u4fdd\u5b58\u4e00\u6b21\u722c\u866b\u3002`auto_save_frequence = 0` \u5219\u4e0d\u8fdb\u884c\u81ea\u52a8\u4fdd\u5b58\u3002\n\n1.  \u722c\u866b\u4fdd\u5b58\u7684\u5185\u5b58\u5305\u62ec `\u5df2\u722c\u53d6\u7684\u8bf7\u6c42` \u4ee5\u53ca `\u4e3a\u722c\u53d6\u7684\u8bf7\u6c42` \u4e24\u5927\u90e8\u5206\uff0c\u5176\u4e2d\u4fdd\u5b58\u7684\u6587\u4ef6\u4f4d\u7f6e\u4e3a`\u4ee3\u7801\u6267\u884c\u76ee\u5f55/.easy_spider/{name}` \u5176\u4e2d `{name}` \u722c\u866b\u7684\u5c5e\u6027 `self.name`\u3002\n\n### \u8bf7\u6c42\u6ea2\u51fa\n\n\u8bf7\u6c42\u6ea2\u51fa\u662f\u6307\u5f53\u8bf7\u6c42\u8fbe\u5230\u4e00\u5b9a\u6570\u91cf\u65f6\u5c06\u8bf7\u6c42\u6ea2\u51fa\u5230\u78c1\u76d8\u4e2d\u5df2\u8282\u7ea6\u5185\u5b58\uff0c`easy_spider` \u9ed8\u8ba4\u5df2\u7ecf\u5f00\u542f\u4e86\u6b64\u529f\u80fd\uff0c\u53ef\u4ee5\u8bbe\u7f6e `self.num_of_spill = 0`  \u6765\u5173\u95ed\u3002\u540c\u6837 `self.num_of_spill ` \u4e5f\u6307\u5b9a\u4e86\u6ea2\u51fa\u7684\u95e8\u9650\u503c\uff0c\u5373\u82e5\u8bf7\u6c42\u8fbe\u5230 `self.num_of_spill * 2` \u5219\u5c06\u5176\u4e2d\u7684  `self.num_of_spill` \u8bf7\u6c42\u6ea2\u51fa\u5230\u78c1\u76d8\u4e2d\u3002\u8be6\u7ec6\u7684\u6ea2\u51fa\u903b\u8f91\u8bf7\u53c2\u8003[SpillRequestQueueProxy](https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/core/queue.py)\u3002", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://lin3x.coding.net/p/easy_spider", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "easy-spider", "package_url": "https://pypi.org/project/easy-spider/", "platform": "", "project_url": "https://pypi.org/project/easy-spider/", "project_urls": {"Homepage": "https://lin3x.coding.net/p/easy_spider"}, "release_url": "https://pypi.org/project/easy-spider/1.1.2/", "requires_dist": null, "requires_python": "", "summary": "A asynchronous spider with aiohttp", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Easy Spider</h1>\n<h2>release note</h2>\n<p>1.0.13: \u6dfb\u52a0\u81ea\u52a8\u4fdd\u5b58\u529f\u80fd</p>\n<p>1.1.2: \u5f15\u5165\u4e2d\u95f4\u4ef6\u5904\u7406\uff0c\u4f18\u5316 easy_spider.core.Spider \u4e2d\u5bf9\u8bf7\u6c42\u8fdb\u884c\u5904\u7406\u7684\u903b\u8f91\u3002</p>\n<h2>quick start</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">easy_spider</span> <span class=\"kn\">import</span> <span class=\"n\">async_env</span><span class=\"p\">,</span> <span class=\"n\">AsyncSpider</span><span class=\"p\">,</span> <span class=\"n\">Request</span><span class=\"p\">,</span> <span class=\"n\">HTMLResponse</span>\n    \n<span class=\"k\">class</span> <span class=\"nc\">MySpider</span><span class=\"p\">(</span><span class=\"n\">AsyncSpider</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">start_targets</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"https://github.blog/\"</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">handle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">HTMLResponse</span><span class=\"p\">):</span>\n        <span class=\"n\">titles</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">bs</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s2\">\".post-list__item a\"</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">([</span><span class=\"n\">title</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"k\">for</span> <span class=\"n\">title</span> <span class=\"ow\">in</span> <span class=\"n\">titles</span><span class=\"p\">])</span>\n\n<span class=\"n\">async_env</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">MySpider</span><span class=\"p\">())</span>\n</pre>\n<p>\u8fd9\u6bb5\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a<code>spider</code>\u5bf9\u8c61\uff0c\u5e76\u722c\u53d6\u4e86<a href=\"https://github.blog/\" rel=\"nofollow\">github-blog</a> \u4e2d\u6587\u7ae0\u7684\u6807\u9898\u3002\u5176\u4e2d\u4e3b\u8981\u5305\u542b\u4e86<code>init</code> \u4ee5\u53ca <code>handle</code> \u4e24\u4e2a\u65b9\u6cd5\u3002\u5728<code>init</code>\u65b9\u6cd5\u4e2d\u53ef\u4ee5\u5bf9\u722c\u866b\u7684\u53c2\u6570\u8fdb\u884c\u8bbe\u7f6e\u3002\u4f8b\u5982 <code>self.start_targets = [\"https://github.blog/\"]</code> \u8bbe\u7f6e\u4e86\u521d\u59cb\u722c\u53d6\u76ee\u6807\u3002\u800c <code>handle(self, response: HTMLResponse)</code>  \u65b9\u6cd5\u4e3b\u8981\u7528\u4e8e\u5bf9\u670d\u52a1\u5668\u8fd4\u56de\u7684\u5185\u5bb9\u8fdb\u884c\u5904\u7406\u3002<code>response.bs</code> \u8868\u793a\u4e00\u4e2a\u7531\u8fd4\u56de\u7684\u7f51\u9875\u6784\u9020\u7684 <a href=\"https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/\" rel=\"nofollow\">Beautiful Soup4</a> \u5bf9\u8c61\uff0c\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u63d0\u53d6\u9700\u8981\u7684\u5185\u5bb9\u3002</p>\n<h2>\u53d1\u73b0\u65b0\u94fe\u63a5</h2>\n<p><code>handle</code> \u65b9\u6cd5\u9664\u4e86\u5904\u7406\u670d\u52a1\u5668\u8fd4\u56de\u7684\u54cd\u5e94\u5bf9\u8c61<a href=\"https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/network/response.py\" rel=\"nofollow\">Response</a>\u4ee5\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u529f\u80fd\u5219\u662f\u53d1\u73b0\u65b0\u7684\u94fe\u63a5\u3002\u5728 <code>easy_spider</code> \u4e2d\uff0c\u4e00\u4e2a\u65b0\u7684\u94fe\u63a5\u9700\u8981\u7ec4\u88c5\u6210\u4e00\u4e2a\u8bf7\u6c42\u5bf9\u8c61 <a href=\"https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/network/request.py?tab=files\" rel=\"nofollow\">Request</a> \u3002\u8bf7\u6c42\u5bf9\u8c61\u9664\u4e86\u5305\u542b\u9700\u8981\u722c\u53d6\u7684\u94fe\u63a5\u5916\uff0c\u8fd8\u5305\u542b\u722c\u53d6\u8fd9\u4e2a\u94fe\u63a5\u7684\u53c2\u6570\u6216<code>Cookies</code>\u7b49\u5185\u5bb9\uff0c\u8fd9\u4e9b\u5185\u5bb9\u5927\u90e8\u5206\u5177\u6709\u9ed8\u8ba4\u503c\u3002\u4e00\u4e2a\u8ddf\u968f\u94fe\u63a5\u7684\u793a\u4f8b\u4e3a:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">easy_spider</span> <span class=\"kn\">import</span> <span class=\"n\">async_env</span><span class=\"p\">,</span> <span class=\"n\">AsyncSpider</span><span class=\"p\">,</span> <span class=\"n\">Request</span><span class=\"p\">,</span> <span class=\"n\">HTMLResponse</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MySpider</span><span class=\"p\">(</span><span class=\"n\">AsyncSpider</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">start_targets</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"https://github.blog/\"</span><span class=\"p\">]</span>\n        \n    <span class=\"k\">def</span> <span class=\"nf\">handle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">HTMLResponse</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">bs</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"s2\">\"href\"</span> <span class=\"ow\">in</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">attrs</span><span class=\"p\">:</span>\n                <span class=\"k\">yield</span> <span class=\"n\">Request</span><span class=\"o\">.</span><span class=\"n\">of</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">url_join</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">attrs</span><span class=\"p\">[</span><span class=\"s2\">\"href\"</span><span class=\"p\">]))</span>\n</pre>\n<p><code>response.url_join</code> \u65b9\u6cd5\u5c06\u7f51\u9875\u4e2d\u7684\u76f8\u5bf9\u94fe\u63a5\u53d8\u4e3a\u7edd\u5bf9\u94fe\u63a5\uff0c\u4f8b\u5982\u4ece <code>page/2</code> \u53d8\u4e3a <code>https://github.blog/2</code>\u3002<code>Request.of</code> \u65b9\u6cd5\u5229\u7528 <code>url</code> \u521b\u5efa\u5177\u6709\u9ed8\u8ba4\u53c2\u6570\u7684 <code>Request</code> \u5bf9\u8c61\u3002<code>handle</code> \u65b9\u6cd5\u53ef\u4ee5\u662f\u4e00\u4e2a\u751f\u6210\u5668\u6216\u8005\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u53ef\u8fed\u4ee3 <code>Request</code> \u5bf9\u8c61\u96c6\u5408\u3002\u6240\u6709 <code>handle</code> \u4ea7\u751f\u7684\u65b0 <code>Request</code> \u5bf9\u8c61\u90fd\u5c06\u653e\u5165\u5f85\u8bf7\u6c42\u961f\u5217\u4e2d\uff0c\u9010\u4e2a\u8fdb\u884c\u8bf7\u6c42\u3002\u5f53\u67d0\u4e2a\u8bf7\u6c42\u5b8c\u6210\u540e\uff0c\u5c06\u7ee7\u7eed\u8c03\u7528 <code>handle</code> \u65b9\u6cd5\u8fdb\u884c\u5904\u7406\u3002</p>\n<p><code>easy_spider</code> \u4e2d\u5df2\u7ecf\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7075\u6d3b\u7684\u53d1\u73b0\u65b0\u94fe\u63a5\u7684\u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">easy_spider</span> <span class=\"kn\">import</span> <span class=\"n\">async_env</span><span class=\"p\">,</span> <span class=\"n\">AsyncSpider</span><span class=\"p\">,</span> <span class=\"n\">Request</span><span class=\"p\">,</span> <span class=\"n\">HTMLResponse</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MySpider</span><span class=\"p\">(</span><span class=\"n\">AsyncSpider</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">start_targets</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"https://github.blog/\"</span><span class=\"p\">]</span>\n        \n    <span class=\"k\">def</span> <span class=\"nf\">handle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">HTMLResponse</span><span class=\"p\">):</span>\n        <span class=\"k\">yield from</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">)</span>  <span class=\"c1\"># \u9ed8\u8ba4\u53d1\u73b0\u65b0\u8fde\u63a5\u7684\u65b9\u6cd5</span>\n</pre>\n<p>\u53d1\u73b0 <code>response</code> \u4e2d\u7684\u6240\u6709\u94fe\u63a5\u3002</p>\n<h2>\u8fdb\u9636\u4f7f\u7528</h2>\n<h3>\u4f7f\u7528\u8fc7\u6ee4\u5668</h3>\n<p>\u5728\u9ed8\u8ba4\u7684\u60c5\u51b5\u4e0b\uff0c\u9664\u521d\u59cb\u8bf7\u6c42\u5916\u7684\u6240\u6709\u8bf7\u6c42\u90fd\u5c06\u4f7f\u7528\u8fc7\u6ee4\u5668 <a href=\"https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/filters/filter.py\" rel=\"nofollow\">Filter</a> \u8fdb\u884c\u8fc7\u6ee4\u3002\u8fc7\u6ee4\u5668\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u5e03\u5c14\u503c\uff0c\u8868\u793a\u63a5\u53d7\u6216\u662f\u62d2\u7edd\u8fd9\u4e2a\u53c2\u6570\u3002\u5728\u5b9a\u4e49 <code>spider</code> \u5bf9\u8c61\u65f6\u53ef\u4ee5\u6307\u5b9a <code>self.filter</code>\uff0c\u8868\u793a\u4e0d\u88ab\u8be5 <code>filter</code> \u63a5\u6536\u7684\u8bf7\u6c42\u90fd\u4e0d\u4f1a\u653e\u5165\u8bf7\u6c42\u961f\u5217\u4e2d\u3002\u4f8b\u5982:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MySpider</span><span class=\"p\">(</span><span class=\"n\">AsyncSpider</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">start_targets</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"https://github.blog/\"</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">filter</span> <span class=\"o\">=</span> <span class=\"n\">URLRegFilter</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"^https://github\\.blog.+\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">handle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">HTMLResponse</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">bs</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"s2\">\"href\"</span> <span class=\"ow\">in</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">attrs</span><span class=\"p\">:</span>\n                <span class=\"k\">yield</span> <span class=\"n\">Request</span><span class=\"o\">.</span><span class=\"n\">of</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">url_join</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">attrs</span><span class=\"p\">[</span><span class=\"s2\">\"href\"</span><span class=\"p\">]))</span>\n</pre>\n<p>\u5728 <code>handle</code> \u65b9\u6cd5\u4e2d\u867d\u7136\u63d0\u53d6\u4e86\u6240\u6709\u7684 URL\uff0c\u4f46\u91c7\u7528 <code>URLRegFilter</code> \u5bf9\u5176\u8fdb\u884c\u4e86\u8fc7\u6ee4\u3002\u53ea\u6709 <code>URL</code> \u6ee1\u8db3 <code>r\"^https://github\\.blog.+\"</code> \u7684\u8bf7\u6c42\u4f1a\u88ab\u653e\u5165\u961f\u5217\uff0c\u5426\u5219\u5c06\u88ab\u4e22\u5f03\u3002\u5728 <code>easy_spider</code> \u4e2d\u4e3b\u8981\u5305\u542b<strong>\u666e\u901a\u8fc7\u6ee4\u5668</strong> \u4ee5\u53ca<strong>\u53bb\u91cd\u8fc7\u6ee4\u5668</strong>\u4e24\u79cd\u7c7b\u578b\u7684\u8fc7\u6ee4\u5668\uff0c\u666e\u901a\u8fc7\u6ee4\u5668\u6709\u5982\u4e0b\u51e0\u79cd:</p>\n<ul>\n<li>RegexFilter: \u6b63\u5219\u8868\u8fbe\u5f0f\u8fc7\u6ee4\u5668</li>\n<li>static_filter: \u9759\u6001\u6587\u4ef6\u8fc7\u6ee4\u5668(\u907f\u514d\u722c\u53d6\u5230 jpg|css \u7b49\u7c7b\u578b\u6587\u4ef6)</li>\n<li>url_filter: \u5408\u6cd5 URL \u8fc7\u6ee4\u5668</li>\n<li>html_filter: \u54cd\u5e94\u7c7b\u578b\u4e3a html \u7684 URL \u8fc7\u6ee4\u5668(\u901a\u8fc7\u540e\u7f00\u5224\u5b9a\uff0c\u6709\u4e00\u5b9a\u7684\u8bef\u5224\u51e0\u7387)</li>\n<li>all_pass_filter: \u5168\u90e8\u63a5\u6536\u8fc7\u6ee4\u5668</li>\n<li>all_reject_filter: \u5168\u90e8\u62d2\u7edd\u8fc7\u6ee4\u5668</li>\n<li>GenerationFilter: \u62d2\u7edd\u6df1\u5ea6\u5927\u4e8e\u67d0\u4e2a\u503c\u7684\u8bf7\u6c42</li>\n</ul>\n<p>\u8fc7\u6ee4\u5668\u652f\u6301\u67d0\u4e9b\u8fd0\u7b97\u7b26\u64cd\u4f5c\uff0c\u4f8b\u5982 <code>static_filter</code> \u867d\u7136\u8868\u793a\u63a5\u53d7\u9759\u6001\u6587\u4ef6\uff0c\u4f46\u5728\u5982\u679c <code>-static_filter</code>  \u5219\u53d8\u4e3a\u62d2\u7edd\u9759\u6001\u6587\u4ef6\u3002\u8fd9\u91cc\u8bbe\u6709\u4e24\u4e2a\u8fc7\u6ee4\u5668\u4e3a<code>f1 f2</code>\uff0c\u5219\u6709:</p>\n<ul>\n<li><code>f1</code> + <code>f2</code>: <code>f1 f2</code> \u540c\u65f6\u63a5\u6536\u5219\u63a5\u53d7\uff0c\u5426\u5219\u62d2\u7edd</li>\n<li><code>f1</code> -<code>f2</code>\uff1a <code>f1</code> \u63a5\u53d7\u540c\u65f6 <code>f2</code> \u62d2\u7edd\u5219\u63a5\u53d7\uff0c\u5426\u5219\u62d2\u7edd</li>\n<li><code>f1</code> | <code>f2</code>\uff1a <code>f1</code> \u63a5\u53d7\u6216\u8005 <code>f2</code> \u62d2\u7edd\u5219\u63a5\u53d7\uff0c\u5426\u5219\u62d2\u7edd</li>\n<li><code>-f1</code>: <code>f1</code> \u62d2\u7edd\u5219\u63a5\u53d7\uff0c\u5426\u5219\u62d2\u7edd</li>\n</ul>\n<p>\u6240\u6709\u7684\u8fd0\u7b97\u7b26\u652f\u6301\u591a\u4e2a\u8fc7\u6ee4\u5668\u7ea7\u8054\u4f7f\u7528\u3002 <code>self.filter</code> \u9ed8\u8ba4\u4e3a <code>html_filter</code>\uff0c\u5b9e\u9645\u4e0a <code>html_filter = url_filter - static_filter</code> \uff0c \u5373\u63d0\u53d6\u63a5\u53d7\u6240\u6709\u5177\u6709\u5408\u6cd5URL[1]\u4e14\u4e0d\u4e3a\u9759\u6001\u6587\u4ef6\u7684\u8bf7\u6c42\u3002</p>\n<p><code>GenerationFilter</code> \u5e76\u4e0d\u5bf9\u8bf7\u6c42\u7684 URL \u8fdb\u884c\u68c0\u67e5\uff0c\u800c\u662f\u68c0\u67e5\u8bf7\u6c42\u7684\u6df1\u5ea6(<code>Request.generation</code>)\uff0c\u6bcf\u4e00\u4e2a\u521d\u59cb\u8bf7\u6c42\u7684\u6df1\u5ea6\u4e3a0\uff0c\u521d\u59cb\u8bf7\u6c42\u4ea7\u751f\u7684\u8bf7\u6c42\u6df1\u5ea6\u4e3a1\uff0c\u6df1\u5ea6\u4e3a1\u7684\u8bf7\u6c42\u4ea7\u751f\u7684\u8bf7\u6c42\u6df1\u5ea6\u4e3a2\u3002<code>easy_spider</code> \u722c\u53d6\u7684\u65b9\u6cd5\u4e3a<strong>\u5e7f\u5ea6\u4f18\u5148</strong>\u3002</p>\n<p>\u53bb\u91cd\u8fc7\u6ee4\u5668\u8fd8\u5305\u542b\u4e86 <a href=\"https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/filters/history_filter.py\" rel=\"nofollow\">BloomFilter</a> \u4ee5\u53ca <a href=\"https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/filters/history_filter.py\" rel=\"nofollow\">HashFilter</a> \u5bf9\u5df2\u5b8c\u6210\u7684\u8bf7\u6c42\u8fdb\u884c\u8fc7\u6ee4\uff0c\u5373 <code>URL</code> \u53bb\u91cd\u7684\u529f\u80fd\u3002<code>easy_spider</code> \u9ed8\u8ba4\u91c7\u7528 <code>HashFilter</code> \u8fdb\u884c\u53bb\u91cd\uff0c\u53ef\u4ee5\u5c06 <code>self.crawled_filter</code> [2] \u4fee\u6539\u4e3a <code>BloomFilter</code> \u4ee5\u8282\u7ea6\u5185\u5b58\u3002</p>\n<ol>\n<li>\u67d0\u4e9b\u65f6\u5019\u5982  <code>&lt;a href=\"javascript: callback\"&gt;click&lt;/a&gt;</code> \u63d0\u53d6\u7684 <code>URL</code> \u4e3a <code>javascript: callback</code> \uff0c\u4e0d\u662f\u5408\u6cd5\u7684URL \u3002</li>\n<li>\u8fd9\u91cc\u5fc5\u987b\u8bbe\u7f6e <code>self.crawled_filter</code> \u800c\u4e0d\u662f\u4f7f\u7528 <code>self.filter</code>\u3002\u8fd9\u53bb\u91cd\u8fc7\u6ee4\u5668\u4e5f\u65e0\u6cd5\u548c\u666e\u901a\u7684\u8fc7\u6ee4\u5668\u8fdb\u884c\u8fd0\u7b97\uff0c\u5426\u5219\u65e0\u6cd5\u5b9e\u73b0\u53bb\u91cd\u7684\u529f\u80fd\u3002</li>\n</ol>\n<h3>\u8bf7\u6c42\u5bf9\u8c61</h3>\n<p>\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u7684 <code>Request</code> \u5bf9\u8c61\u80fd\u6ee1\u8db3\u5927\u90e8\u5206\u7684\u9700\u6c42\uff0c\u4f46\u662f <code>Request</code> \u4e5f\u652f\u6301\u8bb8\u591a\u81ea\u5b9a\u4e49\u7684\u53c2\u6570:</p>\n<pre><code>method: str = \u8bf7\u6c42\u65b9\u6cd5 GET|POST|PUT|DELETE \ntimeout: int = \u8d85\u65f6\u65f6\u95f4\nheaders: dict = \u8bf7\u6c42\u5934\uff0c\u9ed8\u8ba4{}\ncookies: dict = cookies\uff0c\u9ed8\u8ba4{}\nencoding: str = \u7f16\u7801\u65b9\u5f0f\uff0c\u9ed8\u8ba4utf-8\nparams: dict = URL\u53c2\u6570\uff0c\u9ed8\u8ba4{}\ndata: dict = \u6570\u636e\uff0c\u53d6\u51b3\u4e8e data_format\ndata_format: str = \u6570\u636e\u683c\u5f0f FORM|JSON\uff0c\u82e5\u4e3a FORM \u6570\u636e\u901a\u8fc7 application/x-www-form-urlencoded \u683c\u5f0f\u4f20\u9012\uff0c\u82e5\u4e3a JSON \u5219\u901a\u8fc7 application/json\u3002\nproxy: str = \u4ee3\u7406\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\nhandler: str = \u5904\u7406\u8be5 Request \u7684\u56de\u8c03\u51fd\u6570\n</code></pre>\n<p>\u5176\u4e2d <code>handler</code> \u5c5e\u6027\u7528\u4e8e\u5b9a\u4e49\u8be5\u8bf7\u6c42\u5b8c\u6210\u65f6\u7684\u56de\u8c03\u5904\u7406\u51fd\u6570\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5c06\u91c7\u7528 <code>Spider</code> \u5bf9\u8c61\u4e2d\u7684<code>handle</code> \u65b9\u6cd5\u3002\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u4efb\u4f55\u81ea\u5df1\u7684\u65b9\u6cd5\u8fdb\u884c\u5904\u7406\u3002</p>\n<h3>\u54cd\u5e94\u5bf9\u8c61</h3>\n<p>\u4e00\u4e2a\u8bf7\u6c42\u5bf9\u8c61\u7ecf\u7531<a href=\"https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/network/client.py\" rel=\"nofollow\">AsyncClient</a>[1]\uff0c\u53d1\u8d77\u8bf7\u6c42\u540e\u5c06\u8fd4\u56de\u4e00\u4e2a\u54cd\u5e94\u5bf9\u8c61\uff0c\u5373\u5728 handle \u65b9\u6cd5\u4e2d\u5904\u7406\u7684\u5bf9\u8c61\u3002<code>easy_spider</code> \u9ed8\u8ba4\u6839\u636e <code>content_type</code> \u751f\u6210\u4e09\u79cd\u4e0d\u540c\u7684\u54cd\u5e94\u5bf9\u8c61\uff0c\u5982\u679c <code>content_type</code> \u5305\u542b<code>text/html</code> \u5219  <a href=\"https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/network/response.py\" rel=\"nofollow\">HtmlResponse</a>\uff0c\u5982\u679c <code>content_type</code> \u5305\u542b\u9664 <code>text/html</code> \u4ee5\u5916\u7684 <code>text/*</code> \u5bf9\u8c61\uff0c\u5219\u8fd4\u56de<a href=\"https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/network/response.py\" rel=\"nofollow\">TextResponse</a>\uff0c\u5426\u5219\u8fd4\u56de<a href=\"https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/network/response.py\" rel=\"nofollow\">Response</a>\u3002\u5176\u4e2d\u4e0d\u540c\u7684\u54cd\u5e94\u5bf9\u8c61\u6709\u4e0d\u540c\u7684\u5c5e\u6027\uff0c\u4ece <code>Response -&gt; TextResponse -&gt; HtmlResponse</code> \u9010\u6e10\u589e\u591a\u3002</p>\n<p><code>Response</code> \u5bf9\u8c61\u5177\u6709\u7684\u5c5e\u6027:</p>\n<ul>\n<li>\n<p>headers: HTTP \u54cd\u5e94\u5934</p>\n</li>\n<li>\n<p>body: HTTP \u54cd\u5e94\u4f53\uff0c\u4e3a\u672a\u89e3\u7801\u7684 bytes \u7c7b\u578b</p>\n</li>\n<li>\n<p>url: \u54cd\u5e94\u5bf9\u8c61\u7684 <code>URL</code></p>\n</li>\n<li>\n<p>request: \u4ea7\u751f\u8be5\u54cd\u5e94\u5bf9\u5e94\u7684\u8bf7\u6c42</p>\n</li>\n</ul>\n<p><code>TextResponse</code> \u5728 <code>Response</code> \u57fa\u7840\u4e0a\u589e\u52a0\u4e86:</p>\n<ul>\n<li>text: \u89e3\u7801\u540e\u7684\u6587\u672c\u5185\u5bb9\uff0c<code>TextResponse</code> \u4f1a\u81ea\u52a8\u731c\u6d4b <code>body</code> \u7684\u7f16\u7801\u7c7b\u578b\u8fdb\u884c\u89e3\u7801\uff0c\u5c3d\u91cf\u907f\u514d\u4e71\u7801\u4ea7\u751f</li>\n</ul>\n<p><code>HtmlResponse</code>  \u5728 <code>TextResponse</code> \u57fa\u7840\u4e0a\u589e\u52a0\u4e86:</p>\n<ul>\n<li>bs:  \u5229\u7528 text \u5c5e\u6027\u6784\u5efa\u7684 <a href=\"https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/\" rel=\"nofollow\">Beautiful Soup4</a> \u5bf9\u8c61</li>\n</ul>\n<h3>\u9ed8\u8ba4\u8bf7\u6c42\u53c2\u6570</h3>\n<p>\u5f88\u591a\u65f6\u5019\u9700\u8981\u5b9a\u4e49\u4e00\u7cfb\u5217\u9ed8\u8ba4\u53c2\u6570\uff0c\u800c\u4e0d\u662f\u5728\u6bcf\u4e2a\u8bf7\u6c42\u4e2d\u90fd\u58f0\u660e\uff0c\u5728 <code>easy_spider</code> \u4e2d\u6240\u6709\u5b9a\u4e49\u5728 <code>spider</code> \u4e2d\u4e0e\u8bf7\u6c42\u5bf9\u8c61\u76f8\u540c\u7684\u5c5e\u6027\u90fd\u5c06\u590d\u5236\u7ed9\u6bcf\u4e00\u4e2a\u65b0\u4ea7\u751f\u7684\u8bf7\u6c42\uff0c\u5305\u62ec\u521d\u59cb\u8bf7\u6c42:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MySpider</span><span class=\"p\">(</span><span class=\"n\">AsyncSpider</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">start_targets</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"https://github.blog/\"</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cookies</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value\"</span><span class=\"p\">}</span>  <span class=\"c1\"># \u7528\u4e8e\u8bbe\u7f6e\u9ed8\u8ba4\u8bf7\u6c42\u53c2\u6570</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">handle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">HTMLResponse</span><span class=\"p\">):</span>\n        <span class=\"n\">urls</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">url_join</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">attrs</span><span class=\"p\">[</span><span class=\"s2\">\"href\"</span><span class=\"p\">])</span> <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">bs</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">)]</span>\n        <span class=\"k\">yield</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">from_url</span><span class=\"p\">(</span><span class=\"n\">urls</span><span class=\"p\">)</span>  <span class=\"c1\"># \u6240\u6709\u8bf7\u6c42\u7684 cookies \u90fd\u5c06\u8bbe\u7f6e\u4e0e self.cookies \u76f8\u540c</span>\n</pre>\n<h3>\u81ea\u5b9a\u4e49\u5904\u7406\u65b9\u6cd5</h3>\n<p>\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u8bf7\u6c42\u5bf9\u8c61\u7684 <code>handler</code> \u5c5e\u6027\u6765\u8bbe\u7f6e\u5904\u7406\u8be5\u8bf7\u6c42\u8fd4\u56de\u7684\u54cd\u5e94:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">easy_spider</span> <span class=\"kn\">import</span> <span class=\"n\">async_env</span><span class=\"p\">,</span> <span class=\"n\">AsyncSpider</span><span class=\"p\">,</span> <span class=\"n\">Request</span><span class=\"p\">,</span> <span class=\"n\">HTMLResponse</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MySpider</span><span class=\"p\">(</span><span class=\"n\">AsyncSpider</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cookies</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value\"</span><span class=\"p\">}</span>  <span class=\"c1\"># \u7528\u4e8e\u8bbe\u7f6e\u9ed8\u8ba4\u8bf7\u6c42\u53c2\u6570</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">start_targets</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"https://github.blog/\"</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">handle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">HTMLResponse</span><span class=\"p\">):</span>\n        <span class=\"n\">urls</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">url_join</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">attrs</span><span class=\"p\">[</span><span class=\"s2\">\"href\"</span><span class=\"p\">])</span> <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">bs</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">)]</span>\n        <span class=\"k\">for</span> <span class=\"n\">url</span> <span class=\"ow\">in</span> <span class=\"n\">urls</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s2\">\"xxx\"</span><span class=\"p\">):</span>\n                <span class=\"k\">yield</span> <span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">handler</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handle_other</span><span class=\"p\">)</span>  <span class=\"c1\"># \u8be5\u8bf7\u6c42\u8fd4\u56de\u7684 response \u5c06\u7531 handle_other \u65b9\u6cd5\u5904\u7406</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">yield</span> <span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">handler</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">handle_other</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">):</span>\n        <span class=\"c1\"># do something</span>\n        <span class=\"k\">pass</span>\n\n<span class=\"n\">async_env</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">MySpider</span><span class=\"p\">())</span>\n</pre>\n<h3>\u8bf7\u6c42\u4e2d\u95f4\u4ef6</h3>\n<p>\u5728 <code>easy_spider</code> \u4e2d\uff0c\u6240\u6709\u7684\u8bf7\u6c42\u90fd\u5c06\u7ecf\u8fc7\u8bf7\u6c42\u4e2d\u95f4\u4ef6\u7684\u5904\u7406\u3002\u8bf7\u6c42\u4e2d\u95f4\u4ef6\u662f\u4e00\u7cfb\u5217\u5bf9\u8bf7\u6c42\u8fdb\u884c\u53d8\u6362\u7684\u7c7b\uff0c\u5176\u90fd\u7ee7\u627f\u4e8e<a href=\"https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/middlewares/build_in.py\" rel=\"nofollow\">RequestMiddleware</a>\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">RequestMiddleware</span><span class=\"p\">(</span><span class=\"n\">ABC</span><span class=\"p\">):</span>\n\n    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">transform</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">Request</span><span class=\"p\">],</span> <span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Response</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">Request</span><span class=\"p\">]:</span> <span class=\"k\">pass</span>\n</pre>\n<p>\u5176\u6838\u5fc3\u65b9\u6cd5<code>transform</code>\u63a5\u53d7\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7684\u8bf7\u6c42\u96c6\u5408\uff0c\u4ee5\u53ca\u4ea7\u751f\u8fd9\u4e9b\u8bf7\u6c42\u7684 <code>Response</code> \u5bf9\u8c61\u5982\u679c\u4e3a\u521d\u59cb\u8bf7\u6c42\uff0c\u5219 <code>Response</code> \u5bf9\u8c61\u4e3a <code>None</code>\u3002<code>transform</code>\u6839\u636e\u8fd9\u4e9b\u53c2\u6570\u4ea7\u751f\u65b0\u7684\u53ef\u8fed\u4ee3\u7684\u8bf7\u6c42\u96c6\u5408\u3002</p>\n<p><code>easy_spider</code> \u8bb8\u591a\u529f\u80fd\u90fd\u901a\u8fc7\u4e2d\u95f4\u4ef6\u5b9e\u73b0\uff0c\u5982<code>\u8fc7\u6ee4\u5668</code>\u3001<code>\u53bb\u91cd\u8fc7\u6ee4\u5668</code> \u4ee5\u53ca <code>\u9ed8\u8ba4\u53c2\u6570</code>\u3002\u4f8b\u5982<code>ExtractorFilterMiddleware(self.filter)</code>  \u63a5\u53d7 <code>self.filter</code>\u4e3a\u53c2\u6570\uff0c\u5c06\u6240\u6709 <code>self.filter</code> \u62d2\u7edd\u7684\u8bf7\u6c42\u4ece\u8f93\u5165\u7684\u8bf7\u6c42\u96c6\u5408\u4e2d\u9664\u53bb\u3002 \u9ed8\u8ba4\u91c7\u7528\u4e86\u4ee5\u4e0b\u4e2d\u95f4\u4ef6:</p>\n<pre>    <span class=\"k\">def</span> <span class=\"nf\">middlewares</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">ChainMiddleware</span><span class=\"p\">(</span><span class=\"n\">GenerationMiddleware</span><span class=\"p\">(),</span>  <span class=\"c1\"># \u8bbe\u7f6e\u8bf7\u6c42\u4e3a\u7b2c n \u4ee3\uff0c\u652f\u6301GenerationFilter \u8fc7\u6ee4\u5668</span>\n                               <span class=\"n\">ExtractorFilterMiddleware</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">),</span>  <span class=\"c1\"># \u7528\u4e8e\u652f\u6301\u8fc7\u6ee4\u5668</span>\n                               <span class=\"n\">FilterMiddleware</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">crawled_filter</span><span class=\"p\">),</span>  <span class=\"c1\"># \u652f\u6301\u53bb\u91cd\u8fc7\u6ee4\u5668</span>\n                               <span class=\"n\">SetAttrMiddleware</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">))</span>  <span class=\"c1\"># \u7528\u4e8e\u8bbe\u7f6e\u8bf7\u6c42\u9ed8\u8ba4\u53c2\u6570</span>\n</pre>\n<p>\u5176\u4e2d <code>ChainMiddleware</code> \u7528\u4e8e\u5c06\u591a\u4e2a\u4e2d\u95f4\u4ef6\u5408\u5e76\u4e3a\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u8fdb\u884c\u6267\u884c[1]\u3002\u7528\u4e8e\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u8bf7\u6c42\u4e2d\u95f4\u5e76\u91cd\u5199<code>spider</code> \u5bf9\u8c61\u7684<code>middlewares</code> \u65b9\u6cd5\u4ee5\u6269\u5c55 <code>easy_spider</code> \u7684\u529f\u80fd\u3002\u4f8b\u5982\u67d0\u4e9b\u65f6\u5019\u9700\u8981\u5c06\u521d\u59cb\u722c\u53d6\u76ee\u6807\u4fdd\u5b58\u5728\u6587\u4ef6\u4e2d\uff0c\u4f7f\u7528\u65f6\u8bfb\u53d6:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Iterable</span><span class=\"p\">,</span> <span class=\"n\">Optional</span>\n<span class=\"kn\">from</span> <span class=\"nn\">easy_spider</span> <span class=\"kn\">import</span> <span class=\"n\">async_env</span><span class=\"p\">,</span> <span class=\"n\">AsyncSpider</span><span class=\"p\">,</span> <span class=\"n\">Request</span><span class=\"p\">,</span> <span class=\"n\">HTMLResponse</span><span class=\"p\">,</span> <span class=\"n\">Response</span>\n<span class=\"kn\">from</span> <span class=\"nn\">easy_spider.middlewares.build_in</span> <span class=\"kn\">import</span> <span class=\"n\">RequestMiddleware</span><span class=\"p\">,</span> <span class=\"n\">ChainMiddleware</span>\n<span class=\"kn\">from</span> <span class=\"nn\">easy_spider.tool</span> <span class=\"kn\">import</span> <span class=\"n\">get_abs_path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">easy_spider</span> <span class=\"kn\">import</span> <span class=\"n\">GenerationFilter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os.path</span> <span class=\"kn\">import</span> <span class=\"n\">join</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">LoadFileMiddleware</span><span class=\"p\">(</span><span class=\"n\">RequestMiddleware</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">transform</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">requests</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">Request</span><span class=\"p\">],</span> <span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Response</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">Request</span><span class=\"p\">]:</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">response</span><span class=\"p\">:</span>  <span class=\"c1\"># \u5982\u679c\u4e3a\u521d\u59cb\u8bf7\u6c42\uff0c\u5219\u4ece\u6587\u4ef6\u4e2d\u6784\u9020\u8bf7\u6c42</span>\n            <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">requests</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">url</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">get_abs_path</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">),</span> <span class=\"n\">url</span><span class=\"p\">),</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'utf-8'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fd</span><span class=\"p\">:</span>\n                <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">fd</span><span class=\"o\">.</span><span class=\"n\">readlines</span><span class=\"p\">():</span>\n                    <span class=\"k\">yield</span> <span class=\"n\">Request</span><span class=\"o\">.</span><span class=\"n\">of</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">))</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>  <span class=\"c1\"># \u5426\u5219\u4e0d\u505a\u4efb\u4f55\u4e8b\u60c5</span>\n            <span class=\"k\">yield from</span> <span class=\"n\">requests</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MySpider</span><span class=\"p\">(</span><span class=\"n\">AsyncSpider</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">start_targets</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"urls.txt\"</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">handle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">HTMLResponse</span><span class=\"p\">):</span>\n        <span class=\"n\">titles</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">bs</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s2\">\".post-list__item a\"</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">([</span><span class=\"n\">title</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"k\">for</span> <span class=\"n\">title</span> <span class=\"ow\">in</span> <span class=\"n\">titles</span><span class=\"p\">])</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">middlewares</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">ChainMiddleware</span><span class=\"p\">(</span><span class=\"n\">LoadFileMiddleware</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">middlewares</span><span class=\"p\">())</span>\n\n<span class=\"n\">async_env</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">MySpider</span><span class=\"p\">())</span>\n</pre>\n<p>\u5176\u4e2d\uff0c<code>middlewares</code> \u4e2d\u91c7\u7528 <code>ChainMiddleware(LoadFileMiddleware()).extend(super().middlewares())</code>  \u5c06\u65b0\u7684\u4e2d\u95f4\u4ef6\u4ee5\u53ca\u9ed8\u8ba4\u7684\u4e2d\u95f4\u4ef6\u7ed3\u5408\u5728\u4e00\u8d77[2]\uff0c\u5f62\u6210\u65b0\u7684\u4e2d\u95f4\u4ef6\u5e76\u8fd4\u56de\u3002</p>\n<ol>\n<li><code>ChainMiddleware</code> \u5c06\u6240\u6709\u4e2d\u95f4\u4ef6\u6309\u7167\u4f20\u5165\u7684\u987a\u5e8f\u8fdb\u884c\u6267\u884c</li>\n<li>\u5982\u679c\u4f60\u4e0d\u662f\u5341\u5206\u4e86\u89e3\u9ed8\u8ba4\u4e2d\u95f4\u4ef6\u6267\u884c\u7684\u529f\u80fd\u4ee5\u53ca\u53bb\u6389\u5b83\u6240\u4ea7\u751f\u7684\u5f71\u54cd\uff0c\u5efa\u8bae\u5728\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u65f6\u4e00\u5b9a\u8981\u4fdd\u7559\u9ed8\u8ba4\u4e2d\u95f4\u4ef6\uff0c\u5e76\u4f7f\u5f97\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u5728\u9ed8\u8ba4\u4e2d\u95f4\u4ef6\u524d\u6267\u884c\u3002</li>\n</ol>\n<h3>\u6062\u590d\u722c\u866b</h3>\n<p><code>easy_spider</code> \u5b9e\u73b0\u4e86\u4e24\u79cd\u53ef\u6062\u590d\u7684\u722c\u866b\uff0c\u4e00\u79cd\u662f\u5f53\u7528\u6237\u4e3b\u52a8\u7ed3\u675f\u722c\u866b\uff0c\u4e00\u79cd\u662f\u88ab\u610f\u5916\u5173\u95ed\u7684\u722c\u866b\u3002\u5bf9\u4e8e\u7b2c\u4e00\u79cd\uff0c<code>easy_spider</code> \u6355\u83b7\u4e86<code>ctrl + c</code>\uff0c\u5f53\u4f60\u6309\u4e0b<code>ctrl + c</code> \u65f6\u4f1a\u8fdb\u884c\u4e00\u7cfb\u5217\u8be2\u95ee\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u662f\u5426\u4fdd\u5b58\u4f60\u7684\u722c\u866b[1]\u3002\u5982\u679c\u7b2c\u4e8c\u6b21\u8fd0\u884c\u8be5\u722c\u866b\uff0c\u5982\u679c\u68c0\u6d4b\u5df2\u5230\u4fdd\u5b58\u7684\u8bb0\u5f55\uff0c\u4f1a\u8be2\u95ee\u4f60\u662f\u5426\u7ee7\u7eed\u3002\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\uff0c<code>easy_spider</code>\u63d0\u4f9b\u4e86\u81ea\u52a8\u4fdd\u5b58\u7684\u529f\u80fd\u3002</p>\n<p>\u4f60\u53ef\u4ee5\u7ee7\u627f<a href=\"https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/core/spider.py\" rel=\"nofollow\">RecoverableSpider</a>\u6765\u5b9e\u73b0\u53ef\u6062\u590d\u7684\u722c\u866b\u3002\u8be5\u722c\u866b\u5bf9\u8c61\u4e0e <code>AsyncSpider</code> \u4f7f\u7528\u65b9\u6cd5\u76f8\u540c\uff0c\u53ea\u662f\u591a\u4e86\u9700\u8981\u8bbe\u7f6e\u7684\u53c2\u6570:</p>\n<ul>\n<li>name: \u722c\u866b\u7684\u540d\u79f0</li>\n<li>auto_save_frequence: \u81ea\u52a8\u4fdd\u5b58\u9891\u7387</li>\n</ul>\n<p><code>name</code> \u5c06\u51b3\u5b9a\u722c\u866b\u4fdd\u5b58\u7684\u8def\u5f84\uff0c\u800c <code>auto_save_frequence</code> \u5c06\u51b3\u5b9a\u722c\u866b\u81ea\u52a8\u4fdd\u5b58\u7684\u9891\u7387\u3002<code>auto_save_frequence = 1000</code> \u8868\u793a\u6bcf\u8fdb\u884c <code>1000</code> \u8bf7\u6c42\u5219\u4fdd\u5b58\u4e00\u6b21\u722c\u866b\u3002<code>auto_save_frequence = 0</code> \u5219\u4e0d\u8fdb\u884c\u81ea\u52a8\u4fdd\u5b58\u3002</p>\n<ol>\n<li>\u722c\u866b\u4fdd\u5b58\u7684\u5185\u5b58\u5305\u62ec <code>\u5df2\u722c\u53d6\u7684\u8bf7\u6c42</code> \u4ee5\u53ca <code>\u4e3a\u722c\u53d6\u7684\u8bf7\u6c42</code> \u4e24\u5927\u90e8\u5206\uff0c\u5176\u4e2d\u4fdd\u5b58\u7684\u6587\u4ef6\u4f4d\u7f6e\u4e3a<code>\u4ee3\u7801\u6267\u884c\u76ee\u5f55/.easy_spider/{name}</code> \u5176\u4e2d <code>{name}</code> \u722c\u866b\u7684\u5c5e\u6027 <code>self.name</code>\u3002</li>\n</ol>\n<h3>\u8bf7\u6c42\u6ea2\u51fa</h3>\n<p>\u8bf7\u6c42\u6ea2\u51fa\u662f\u6307\u5f53\u8bf7\u6c42\u8fbe\u5230\u4e00\u5b9a\u6570\u91cf\u65f6\u5c06\u8bf7\u6c42\u6ea2\u51fa\u5230\u78c1\u76d8\u4e2d\u5df2\u8282\u7ea6\u5185\u5b58\uff0c<code>easy_spider</code> \u9ed8\u8ba4\u5df2\u7ecf\u5f00\u542f\u4e86\u6b64\u529f\u80fd\uff0c\u53ef\u4ee5\u8bbe\u7f6e <code>self.num_of_spill = 0</code>  \u6765\u5173\u95ed\u3002\u540c\u6837 <code>self.num_of_spill</code> \u4e5f\u6307\u5b9a\u4e86\u6ea2\u51fa\u7684\u95e8\u9650\u503c\uff0c\u5373\u82e5\u8bf7\u6c42\u8fbe\u5230 <code>self.num_of_spill * 2</code> \u5219\u5c06\u5176\u4e2d\u7684  <code>self.num_of_spill</code> \u8bf7\u6c42\u6ea2\u51fa\u5230\u78c1\u76d8\u4e2d\u3002\u8be6\u7ec6\u7684\u6ea2\u51fa\u903b\u8f91\u8bf7\u53c2\u8003<a href=\"https://lin3x.coding.net/p/easy_spider/d/easy_spider/git/tree/function/easy_spider/core/queue.py\" rel=\"nofollow\">SpillRequestQueueProxy</a>\u3002</p>\n\n          </div>"}, "last_serial": 6926019, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "7d6e774c3e38697777b48036f2e40f0e", "sha256": "62dfc81938500a2cb067aa1f0e24b30f55f056ec24ca6d3702b414bb5ca9841d"}, "downloads": -1, "filename": "easy-spider-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7d6e774c3e38697777b48036f2e40f0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6511, "upload_time": "2020-03-16T14:51:27", "upload_time_iso_8601": "2020-03-16T14:51:27.509021Z", "url": "https://files.pythonhosted.org/packages/d0/b7/188cfd43a00d0662228f418d9fa88b4ebf97de229de42b0bb68390e2cf2b/easy-spider-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "0ef048b347ed00651b8e9b0cdf962c3f", "sha256": "0d1f2cc311ab6e3334f669867265031a31dea5c47030775c74126b6069510084"}, "downloads": -1, "filename": "easy-spider-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0ef048b347ed00651b8e9b0cdf962c3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7078, "upload_time": "2020-03-16T15:06:51", "upload_time_iso_8601": "2020-03-16T15:06:51.081545Z", "url": "https://files.pythonhosted.org/packages/34/87/36fd49c47fb60bec22a05fb73fb909cb05d3602045f857f306aee226901f/easy-spider-1.0.1.tar.gz", "yanked": false}], "1.0.10": [{"comment_text": "", "digests": {"md5": "255375726638f4750d60820081b79e04", "sha256": "fd58e8ca008cdc85017d30b34363e5255cd772c3af357593de0b15ca55dbabc7"}, "downloads": -1, "filename": "easy-spider-1.0.10.tar.gz", "has_sig": false, "md5_digest": "255375726638f4750d60820081b79e04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15014, "upload_time": "2020-03-21T02:06:08", "upload_time_iso_8601": "2020-03-21T02:06:08.606523Z", "url": "https://files.pythonhosted.org/packages/71/f0/c4a424b6c7bd5e7dcb6e2f8d58c3f6a4b77c6994b3ebed4cc06ab308ba40/easy-spider-1.0.10.tar.gz", "yanked": false}], "1.0.11": [{"comment_text": "", "digests": {"md5": "73f3a26f32786641f6104ceb6943317d", "sha256": "dfb2d096a65805975c3c2da6245a7a7719e1cc2842a6eac9e7b4f184ddf486ea"}, "downloads": -1, "filename": "easy-spider-1.0.11.tar.gz", "has_sig": false, "md5_digest": "73f3a26f32786641f6104ceb6943317d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17805, "upload_time": "2020-03-23T01:48:25", "upload_time_iso_8601": "2020-03-23T01:48:25.579472Z", "url": "https://files.pythonhosted.org/packages/9b/85/806d1dbfccf862bfe95300256ad67c66e58581112f1b7481c9c4faa5bbf8/easy-spider-1.0.11.tar.gz", "yanked": false}], "1.0.12": [{"comment_text": "", "digests": {"md5": "8f2997abd6961de2fa1844ea424085d0", "sha256": "0e15def3fb78edee99af41fdf6402015be4f6d20e33c32425295db0a5cb0d113"}, "downloads": -1, "filename": "easy-spider-1.0.12.tar.gz", "has_sig": false, "md5_digest": "8f2997abd6961de2fa1844ea424085d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19447, "upload_time": "2020-03-24T12:55:35", "upload_time_iso_8601": "2020-03-24T12:55:35.177200Z", "url": "https://files.pythonhosted.org/packages/f2/7a/5b94389d5ffe0a4eba2e44454bd5de8367043bca4a5963aca6fd936bc269/easy-spider-1.0.12.tar.gz", "yanked": false}], "1.0.13": [{"comment_text": "", "digests": {"md5": "5020d8edd3bd63d12cb0d988c672a878", "sha256": "e04c1004b0b5fb59047049d67d81886ee6b06bf964b394f00870041ef0d377e5"}, "downloads": -1, "filename": "easy-spider-1.0.13.tar.gz", "has_sig": false, "md5_digest": "5020d8edd3bd63d12cb0d988c672a878", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20507, "upload_time": "2020-03-27T06:26:00", "upload_time_iso_8601": "2020-03-27T06:26:00.931265Z", "url": "https://files.pythonhosted.org/packages/5f/f8/f3b7e74d3ae2f1f9541ca468585538efcba891e14758c7db32dd8c026ace/easy-spider-1.0.13.tar.gz", "yanked": false}], "1.0.14": [{"comment_text": "", "digests": {"md5": "54867f8b25b984d02ba1258d6bf18f00", "sha256": "f5e651f0275f256d5706177493a39ebd0ee623979680523a69ca1497651047e4"}, "downloads": -1, "filename": "easy-spider-1.0.14.tar.gz", "has_sig": false, "md5_digest": "54867f8b25b984d02ba1258d6bf18f00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24080, "upload_time": "2020-04-01T07:53:28", "upload_time_iso_8601": "2020-04-01T07:53:28.240978Z", "url": "https://files.pythonhosted.org/packages/82/8c/6b4411ee6afc57b7472b04c8b9959e57ad9862dd470f630040d91decbef5/easy-spider-1.0.14.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "cf3c7baabb85c1f49a6890705d38b33d", "sha256": "1a280ce2a01784d930be8d73a103c1400572bbc06c355d55f10472f8bdf0b689"}, "downloads": -1, "filename": "easy-spider-1.0.2.tar.gz", "has_sig": false, "md5_digest": "cf3c7baabb85c1f49a6890705d38b33d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12372, "upload_time": "2020-03-16T15:18:21", "upload_time_iso_8601": "2020-03-16T15:18:21.759086Z", "url": "https://files.pythonhosted.org/packages/90/07/f4e0ddab3a7b765d8f7a6d9650290bdfad0b063f71a01f1f498faf17ed02/easy-spider-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "b78b686bbbdbe32335410d7d904adf8e", "sha256": "b341509de29745cc142600039b939d88022f414660da6576d95fce8619517792"}, "downloads": -1, "filename": "easy-spider-1.0.3.tar.gz", "has_sig": false, "md5_digest": "b78b686bbbdbe32335410d7d904adf8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12885, "upload_time": "2020-03-17T08:35:55", "upload_time_iso_8601": "2020-03-17T08:35:55.167462Z", "url": "https://files.pythonhosted.org/packages/c6/ef/d08dfb53b6ab7b6d393c290b6f369c6e4847561e4098d024e8f220c69b3e/easy-spider-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "fa8f807fd0ba18f2cf5e1ded720a7b04", "sha256": "c8874228a6c930c70f746815b9565f2fba52e2fb57323ffd0cc723a3e0f2f291"}, "downloads": -1, "filename": "easy-spider-1.0.4.tar.gz", "has_sig": false, "md5_digest": "fa8f807fd0ba18f2cf5e1ded720a7b04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13040, "upload_time": "2020-03-17T13:15:20", "upload_time_iso_8601": "2020-03-17T13:15:20.114953Z", "url": "https://files.pythonhosted.org/packages/f2/76/3017b9eaf1dcb4d39ada87cc3f11333ec580609491d74ee2d8a1e5208aa8/easy-spider-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "2dac740b2b13e116252137506e21d253", "sha256": "56dce71a99b6c83279ede4fb3178f7db2ad1183c673a0087edb6ecbc6c9a6192"}, "downloads": -1, "filename": "easy-spider-1.0.5.tar.gz", "has_sig": false, "md5_digest": "2dac740b2b13e116252137506e21d253", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13036, "upload_time": "2020-03-18T02:41:16", "upload_time_iso_8601": "2020-03-18T02:41:16.598735Z", "url": "https://files.pythonhosted.org/packages/74/db/100dd711fac9c1b8f392d415050030297d4ff6ee13f1b385657f0d7077a2/easy-spider-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "cbaca0b784428a446b4aeacf9336320f", "sha256": "26a8bfb82e21b9718fb16d1dcdfe4afbb35f8d9bb919bc1c246a0b38882c8f7e"}, "downloads": -1, "filename": "easy-spider-1.0.6.tar.gz", "has_sig": false, "md5_digest": "cbaca0b784428a446b4aeacf9336320f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12721, "upload_time": "2020-03-18T06:41:46", "upload_time_iso_8601": "2020-03-18T06:41:46.254184Z", "url": "https://files.pythonhosted.org/packages/c8/72/29dac7c64cbdd897fef63dda0e1c3cb7286b0afe1e9a9beb1a5daf69adef/easy-spider-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "f56eff83176349906438525c89404448", "sha256": "2b2b76de4391b26aefb753a79af3f9c1710342b1c4a1b7b414b2a73be0db0f6b"}, "downloads": -1, "filename": "easy-spider-1.0.7.tar.gz", "has_sig": false, "md5_digest": "f56eff83176349906438525c89404448", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13543, "upload_time": "2020-03-18T12:58:37", "upload_time_iso_8601": "2020-03-18T12:58:37.993534Z", "url": "https://files.pythonhosted.org/packages/fb/6f/98d8df61d87610f28877f73e7aafc291c4e6606f09407c5ca56f35344f84/easy-spider-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "9ca662afd2e002f323f0d829891a791f", "sha256": "3ba64e5fcb2074bd5e6513de6df96d6577ee0cda4fb671cc5a6c97feec218157"}, "downloads": -1, "filename": "easy-spider-1.0.8.tar.gz", "has_sig": false, "md5_digest": "9ca662afd2e002f323f0d829891a791f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13535, "upload_time": "2020-03-18T13:14:19", "upload_time_iso_8601": "2020-03-18T13:14:19.917488Z", "url": "https://files.pythonhosted.org/packages/d9/0e/a59747b34dbcb30c6cf728e5fa03833aed2dac628e8d32c90492545612c3/easy-spider-1.0.8.tar.gz", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "c1d7ea2876598cd82330e3dc5b7ddd55", "sha256": "d3083bd6272d7762aff8689fc4e94baef2a43dfb50bbfda1efc947497a955a5a"}, "downloads": -1, "filename": "easy-spider-1.0.9.tar.gz", "has_sig": false, "md5_digest": "c1d7ea2876598cd82330e3dc5b7ddd55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13646, "upload_time": "2020-03-19T03:17:06", "upload_time_iso_8601": "2020-03-19T03:17:06.047355Z", "url": "https://files.pythonhosted.org/packages/ea/be/f65c7d96c3da1ec69dbf52fa9bba8361633281fd73435cd68834888cd0f6/easy-spider-1.0.9.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "ab04d91625d566c9277bb38e07c94e69", "sha256": "a973dfb793445fe4ca4089512b1d27d00f631a3806a9862de12f5da83c734850"}, "downloads": -1, "filename": "easy-spider-1.1.2.tar.gz", "has_sig": false, "md5_digest": "ab04d91625d566c9277bb38e07c94e69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24091, "upload_time": "2020-04-01T08:19:02", "upload_time_iso_8601": "2020-04-01T08:19:02.860247Z", "url": "https://files.pythonhosted.org/packages/6f/a1/c2ef28f012d461774a81bf1f850913b2984b771e12088c9d07ba1fc99bf7/easy-spider-1.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ab04d91625d566c9277bb38e07c94e69", "sha256": "a973dfb793445fe4ca4089512b1d27d00f631a3806a9862de12f5da83c734850"}, "downloads": -1, "filename": "easy-spider-1.1.2.tar.gz", "has_sig": false, "md5_digest": "ab04d91625d566c9277bb38e07c94e69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24091, "upload_time": "2020-04-01T08:19:02", "upload_time_iso_8601": "2020-04-01T08:19:02.860247Z", "url": "https://files.pythonhosted.org/packages/6f/a1/c2ef28f012d461774a81bf1f850913b2984b771e12088c9d07ba1fc99bf7/easy-spider-1.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:14 2020"}