{"info": {"author": "Woody Allen Montilus", "author_email": "thewamcoding@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# timelibWAM\n\ntimelibWAM is an open source package meant to alert the user about the \ncompletion of a program. This can work best with larger\nprojects in which may take longer periods of time to \nfinish running. The package can also alert the user\nabout errors that occur.\n\n## Installation\nCopy into terminal/command prompt:\n\n    pip install timelibWAM\n\n## Use \n\n### 1. Run: \n\n    from timelibWAM import * \n\n**IMPORTANT:**\n  When utilizing the library, run the import statement by itself. After \n  completing the entry, run the rest of your code. You will incur errors otherwise!\n\n### 2. Run tl.start() and save its return value in a variable\n\n    from timelibWAM import * \n\n    s = tl.start()\n\n### 3. Enter your code!\n\n    from timelibWAM import * \n\n    s = tl.start()\n\n    #Your code here\n\n### 4. Run one of our ending functions (print_end(), frame_end(), send_end(), or send_frame_end()) after your code\n\n    from timelibWAM import * \n\n    s = tl.start()\n\n    #Your code here\n\n    tl.send_frame_end(s)\n\n**IMPORTANT:**\n  If you'd like to be alerted in the case of error, steps 2-4 should be within a try statement\n  followed by an except statement that runs one of our error functions (frame_alert() or error_alert())\n\n**Best Setup -**\nCopy and paste this bad boy for text and frame alerts:\n\n    from timelibWAM import *\n\n      try:\n        s = tl.start() \n\n        *your code*\n\n        tl.send_frame_end(s)\n\n      except Exception as e:\n\n        tl.error_alert()\n\nWe know that there are plenty of things to be improved upon, so please let us know, or better yet, join in to create a better experience!\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/theWAM/timelib.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "timelibWAM", "package_url": "https://pypi.org/project/timelibWAM/", "platform": "", "project_url": "https://pypi.org/project/timelibWAM/", "project_urls": {"Homepage": "https://github.com/theWAM/timelib.git"}, "release_url": "https://pypi.org/project/timelibWAM/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "A library made to alert users about program completion", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>timelibWAM</h1>\n<p>timelibWAM is an open source package meant to alert the user about the\ncompletion of a program. This can work best with larger\nprojects in which may take longer periods of time to\nfinish running. The package can also alert the user\nabout errors that occur.</p>\n<h2>Installation</h2>\n<p>Copy into terminal/command prompt:</p>\n<pre><code>pip install timelibWAM\n</code></pre>\n<h2>Use</h2>\n<h3>1. Run:</h3>\n<pre><code>from timelibWAM import * \n</code></pre>\n<p><strong>IMPORTANT:</strong>\nWhen utilizing the library, run the import statement by itself. After\ncompleting the entry, run the rest of your code. You will incur errors otherwise!</p>\n<h3>2. Run tl.start() and save its return value in a variable</h3>\n<pre><code>from timelibWAM import * \n\ns = tl.start()\n</code></pre>\n<h3>3. Enter your code!</h3>\n<pre><code>from timelibWAM import * \n\ns = tl.start()\n\n#Your code here\n</code></pre>\n<h3>4. Run one of our ending functions (print_end(), frame_end(), send_end(), or send_frame_end()) after your code</h3>\n<pre><code>from timelibWAM import * \n\ns = tl.start()\n\n#Your code here\n\ntl.send_frame_end(s)\n</code></pre>\n<p><strong>IMPORTANT:</strong>\nIf you'd like to be alerted in the case of error, steps 2-4 should be within a try statement\nfollowed by an except statement that runs one of our error functions (frame_alert() or error_alert())</p>\n<p><strong>Best Setup -</strong>\nCopy and paste this bad boy for text and frame alerts:</p>\n<pre><code>from timelibWAM import *\n\n  try:\n    s = tl.start() \n\n    *your code*\n\n    tl.send_frame_end(s)\n\n  except Exception as e:\n\n    tl.error_alert()\n</code></pre>\n<p>We know that there are plenty of things to be improved upon, so please let us know, or better yet, join in to create a better experience!</p>\n\n          </div>"}, "last_serial": 4639857, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "2c3d2ac4dab84c7a71a13bd7f680bd79", "sha256": "3056b959cc0ce9312a8ae8e7c6c0763a8ba8d64732421e1dc29bf6a2ddcab19e"}, "downloads": -1, "filename": "timelibWAM-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2c3d2ac4dab84c7a71a13bd7f680bd79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2367, "upload_time": "2018-12-28T04:05:07", "upload_time_iso_8601": "2018-12-28T04:05:07.968779Z", "url": "https://files.pythonhosted.org/packages/46/dd/f12df9aa851c7d7c1b683425beac0adae0f7680ec425dc8509876f3556d2/timelibWAM-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc6a2c7b576cbdb9b230cb01b5f232c0", "sha256": "58c6d4319e17cf47eb94a116ceb9fa5ef67e62e438b5547f717086bde92dd2e5"}, "downloads": -1, "filename": "timelibWAM-0.0.1.tar.gz", "has_sig": false, "md5_digest": "cc6a2c7b576cbdb9b230cb01b5f232c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1410, "upload_time": "2018-12-28T04:05:09", "upload_time_iso_8601": "2018-12-28T04:05:09.802951Z", "url": "https://files.pythonhosted.org/packages/6f/c5/d3ca0d517dc7d9f734778e27a7e9264f844088acd44f24167cc24116f836/timelibWAM-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d8a3e7459f683c16c4dc5f829ec86a36", "sha256": "80af74ef10bc8748ec206e4009a27063fff8a8e696b0c8de543e77c2c9181778"}, "downloads": -1, "filename": "timelibWAM-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d8a3e7459f683c16c4dc5f829ec86a36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2705, "upload_time": "2018-12-28T04:54:44", "upload_time_iso_8601": "2018-12-28T04:54:44.413145Z", "url": "https://files.pythonhosted.org/packages/2d/77/c55d76d26e5c999d4d6c26259c21c0c3d424af957f71455ca1adb6fbf683/timelibWAM-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f994b5c1408dda644ed35d838a0379d", "sha256": "63cc17a838c97b1d2829c8c8f55967991e6663d5d782d7f31b552d9aa5734357"}, "downloads": -1, "filename": "timelibWAM-0.0.2.tar.gz", "has_sig": false, "md5_digest": "3f994b5c1408dda644ed35d838a0379d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1853, "upload_time": "2018-12-28T04:54:45", "upload_time_iso_8601": "2018-12-28T04:54:45.738672Z", "url": "https://files.pythonhosted.org/packages/bd/a5/a70aabe815d3362e62382131cb293389021a292ae65edbaede136e00a863/timelibWAM-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "4d0800524d3b04a24ee5cd28abcc311d", "sha256": "e2f973d08f5de2c21f0118f2c3ba85425b094fd99d059a57206d16f191cc159e"}, "downloads": -1, "filename": "timelibWAM-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4d0800524d3b04a24ee5cd28abcc311d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2707, "upload_time": "2018-12-28T05:08:04", "upload_time_iso_8601": "2018-12-28T05:08:04.606946Z", "url": "https://files.pythonhosted.org/packages/5a/cf/7142586e988ad1114557096d99c87f5a66d626754060f5a2b3a54b178d37/timelibWAM-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8770777a2c333308377ea1c2c38bbb39", "sha256": "2b54fc2bf64b3c64c0650c5c2ae1e0b614e65b66e3e9b66a4d2ca065d773622a"}, "downloads": -1, "filename": "timelibWAM-0.0.3.tar.gz", "has_sig": false, "md5_digest": "8770777a2c333308377ea1c2c38bbb39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1860, "upload_time": "2018-12-28T05:08:05", "upload_time_iso_8601": "2018-12-28T05:08:05.841580Z", "url": "https://files.pythonhosted.org/packages/64/99/a879bb29bfbf566cd1eca26530629e6a1a6a16ffebbf16272e3fc15ea239/timelibWAM-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4d0800524d3b04a24ee5cd28abcc311d", "sha256": "e2f973d08f5de2c21f0118f2c3ba85425b094fd99d059a57206d16f191cc159e"}, "downloads": -1, "filename": "timelibWAM-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4d0800524d3b04a24ee5cd28abcc311d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2707, "upload_time": "2018-12-28T05:08:04", "upload_time_iso_8601": "2018-12-28T05:08:04.606946Z", "url": "https://files.pythonhosted.org/packages/5a/cf/7142586e988ad1114557096d99c87f5a66d626754060f5a2b3a54b178d37/timelibWAM-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8770777a2c333308377ea1c2c38bbb39", "sha256": "2b54fc2bf64b3c64c0650c5c2ae1e0b614e65b66e3e9b66a4d2ca065d773622a"}, "downloads": -1, "filename": "timelibWAM-0.0.3.tar.gz", "has_sig": false, "md5_digest": "8770777a2c333308377ea1c2c38bbb39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1860, "upload_time": "2018-12-28T05:08:05", "upload_time_iso_8601": "2018-12-28T05:08:05.841580Z", "url": "https://files.pythonhosted.org/packages/64/99/a879bb29bfbf566cd1eca26530629e6a1a6a16ffebbf16272e3fc15ea239/timelibWAM-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:53:33 2020"}