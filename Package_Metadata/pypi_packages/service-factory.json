{"info": {"author": "Artem Malyshev", "author_email": "proofit404@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Software Development"], "description": ".. |travis| image:: https://travis-ci.org/proofit404/service-factory.png\n    :target: https://travis-ci.org/proofit404/service-factory\n    :alt: Build Status\n\n.. |coveralls| image:: https://coveralls.io/repos/proofit404/service-factory/badge.png\n    :target: https://coveralls.io/r/proofit404/service-factory\n    :alt: Coverage Status\n\n.. |requires| image:: https://requires.io/github/proofit404/service-factory/requirements.svg\n    :target: https://requires.io/github/proofit404/service-factory/requirements\n    :alt: Requirements Status\n\n.. |landscape| image:: https://landscape.io/github/proofit404/service-factory/master/landscape.svg\n    :target: https://landscape.io/github/proofit404/service-factory/master\n    :alt: Code Health\n\n===============\nservice-factory\n===============\n\n|travis| |coveralls| |requires| |landscape|\n\nJSON RPC service factory for Python.\n\nUsage\n-----\n\nService factory in a nutshell:\n\n.. code:: python\n\n    from service_factory import service_factory\n\n    def add(one, two):\n        \"\"\"Add two numbers.\"\"\"\n        return one + two\n\n    def mul(one, two):\n        \"\"\"Multiply two numbers.\"\"\"\n        return one * two\n\n    app = [add, mul]\n\n    if __name__ == '__main__':\n        service_factory(app, host='localhost', port=0)\n\nRun this as usual python file:\n\n.. code:: bash\n\n    $ python calc.py\n    service factory starts at port 9001\n\nSee it works:\n\n.. code:: bash\n\n    $ curl -X POST -d '{\"jsonrpc\": \"2.0\", \"method\": \"add\", \"params\": [1, 2], \"id\": 1}' -H 'Content-Type:application/json;' http://localhost:9001/\n\nYou can use any callable list from arbitrary module to run your\napplication:\n\n.. code:: bash\n\n    $ python -m service_factory calc:app --host=localhost --port=auto\n    # or\n    $ service_factory calc:app --host=localhost --port=auto\n\nTODO\n----\n\n* process all errors codes\n* batch processing\n* notifications\n* WSGI provider\n* tornado provider\n* aiohttp provider\n* --port-file option\n* console entry point\n* make providers act as context managers\n* ``user_error(code, message, data=None)``\n* WSGI authorization\n* sphinx docs\n* Django user permissions for rpc method\n* Celery service implementation\n* RQ service implementation\n\n.. :changelog:\n\nChangelog\n---------\n\n0.1.5 (2016-10-09)\n++++++++++++++++++\n\n- Zip unsafe for setuptools.\n\n0.1.4 (2016-09-02)\n++++++++++++++++++\n\n- Use 0 port value for automatic port detection.\n\n0.1.3 (2016-08-25)\n++++++++++++++++++\n\n- Remove ``six`` library from install requires.\n\n0.1.2 (2015-03-05)\n++++++++++++++++++\n\n- Remove allowed hosts parameters from ``service_factory`` function.\n\n0.1.1 (2015-03-05)\n++++++++++++++++++\n\n- Remove wildcard parameters from ``service_factory`` function.  This\n  fix ``provider_cls`` resolution issue.\n\n0.1.0 (2015-03-04)\n++++++++++++++++++\n\n- Initial release.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/proofit404/service-factory", "keywords": "", "license": "GPL3", "maintainer": "Artem Malyshev", "maintainer_email": "proofit404@gmail.com", "name": "service-factory", "package_url": "https://pypi.org/project/service-factory/", "platform": "any", "project_url": "https://pypi.org/project/service-factory/", "project_urls": {"Homepage": "https://github.com/proofit404/service-factory"}, "release_url": "https://pypi.org/project/service-factory/0.1.6/", "requires_dist": null, "requires_python": "", "summary": "JSON RPC service factory for Python.", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/proofit404/service-factory\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3dc1069bfc0b6f436340f3a2990a5e4578f52cf5/68747470733a2f2f7472617669732d63692e6f72672f70726f6f6669743430342f736572766963652d666163746f72792e706e67\"></a> <a href=\"https://coveralls.io/r/proofit404/service-factory\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/660d0da7495db350503654d30d48a5a1c2271998/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f70726f6f6669743430342f736572766963652d666163746f72792f62616467652e706e67\"></a> <a href=\"https://requires.io/github/proofit404/service-factory/requirements\" rel=\"nofollow\"><img alt=\"Requirements Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5cf740bb0b181ec95fc862dc44c0d2860d957083/68747470733a2f2f72657175697265732e696f2f6769746875622f70726f6f6669743430342f736572766963652d666163746f72792f726571756972656d656e74732e737667\"></a> <a href=\"https://landscape.io/github/proofit404/service-factory/master\" rel=\"nofollow\"><img alt=\"Code Health\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/147f07f15ad8e234636da23214b4e384c20f1000/68747470733a2f2f6c616e6473636170652e696f2f6769746875622f70726f6f6669743430342f736572766963652d666163746f72792f6d61737465722f6c616e6473636170652e737667\"></a></p>\n<p>JSON RPC service factory for Python.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Service factory in a nutshell:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">service_factory</span> <span class=\"kn\">import</span> <span class=\"n\">service_factory</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">one</span><span class=\"p\">,</span> <span class=\"n\">two</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Add two numbers.\"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">one</span> <span class=\"o\">+</span> <span class=\"n\">two</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">mul</span><span class=\"p\">(</span><span class=\"n\">one</span><span class=\"p\">,</span> <span class=\"n\">two</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Multiply two numbers.\"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">one</span> <span class=\"o\">*</span> <span class=\"n\">two</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">add</span><span class=\"p\">,</span> <span class=\"n\">mul</span><span class=\"p\">]</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">service_factory</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n<p>Run this as usual python file:</p>\n<pre>$ python calc.py\nservice factory starts at port <span class=\"m\">9001</span>\n</pre>\n<p>See it works:</p>\n<pre>$ curl -X POST -d <span class=\"s1\">'{\"jsonrpc\": \"2.0\", \"method\": \"add\", \"params\": [1, 2], \"id\": 1}'</span> -H <span class=\"s1\">'Content-Type:application/json;'</span> http://localhost:9001/\n</pre>\n<p>You can use any callable list from arbitrary module to run your\napplication:</p>\n<pre>$ python -m service_factory calc:app --host<span class=\"o\">=</span>localhost --port<span class=\"o\">=</span>auto\n<span class=\"c1\"># or\n</span>$ service_factory calc:app --host<span class=\"o\">=</span>localhost --port<span class=\"o\">=</span>auto\n</pre>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>process all errors codes</li>\n<li>batch processing</li>\n<li>notifications</li>\n<li>WSGI provider</li>\n<li>tornado provider</li>\n<li>aiohttp provider</li>\n<li>\u2013port-file option</li>\n<li>console entry point</li>\n<li>make providers act as context managers</li>\n<li><tt>user_error(code, message, data=None)</tt></li>\n<li>WSGI authorization</li>\n<li>sphinx docs</li>\n<li>Django user permissions for rpc method</li>\n<li>Celery service implementation</li>\n<li>RQ service implementation</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.1.5 (2016-10-09)</h3>\n<ul>\n<li>Zip unsafe for setuptools.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.4 (2016-09-02)</h3>\n<ul>\n<li>Use 0 port value for automatic port detection.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.3 (2016-08-25)</h3>\n<ul>\n<li>Remove <tt>six</tt> library from install requires.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1.2 (2015-03-05)</h3>\n<ul>\n<li>Remove allowed hosts parameters from <tt>service_factory</tt> function.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.1.1 (2015-03-05)</h3>\n<ul>\n<li>Remove wildcard parameters from <tt>service_factory</tt> function.  This\nfix <tt>provider_cls</tt> resolution issue.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.1.0 (2015-03-04)</h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6857486, "releases": {"0.1.6": [{"comment_text": "", "digests": {"md5": "5b5262193170fb062d54c4eaa7fb39a1", "sha256": "abd8e715e2d32ee83ea4bbe365d34e0f94e3068ec03683f09f4512f657e1cd64"}, "downloads": -1, "filename": "service_factory-0.1.6.tar.gz", "has_sig": false, "md5_digest": "5b5262193170fb062d54c4eaa7fb39a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19553, "upload_time": "2020-03-21T22:33:11", "upload_time_iso_8601": "2020-03-21T22:33:11.947610Z", "url": "https://files.pythonhosted.org/packages/33/15/5beb1df57ec538bfa48f61f34a8de6061139ff7aca0f2bcf30b525bc07cb/service_factory-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5b5262193170fb062d54c4eaa7fb39a1", "sha256": "abd8e715e2d32ee83ea4bbe365d34e0f94e3068ec03683f09f4512f657e1cd64"}, "downloads": -1, "filename": "service_factory-0.1.6.tar.gz", "has_sig": false, "md5_digest": "5b5262193170fb062d54c4eaa7fb39a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19553, "upload_time": "2020-03-21T22:33:11", "upload_time_iso_8601": "2020-03-21T22:33:11.947610Z", "url": "https://files.pythonhosted.org/packages/33/15/5beb1df57ec538bfa48f61f34a8de6061139ff7aca0f2bcf30b525bc07cb/service_factory-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:57 2020"}