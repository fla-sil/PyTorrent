{"info": {"author": "Iain Wong", "author_email": "iainwong@outlook.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "wids_datathon_2020\n==============================\n\nThe challenge is to create a model that uses data from the first 24 hours of intensive care to predict patient survival. (Kaggle Proj) https://www.kaggle.com/c/widsdatathon2020/overview\n\n# How-to Perform Inference\nThis project provides a publicly-accessible and straight forward way to perform batch or realtime inference based on WiDS Datathon 2020 data.\n\n```bash\n$ pip install wids-datathon-2020\n\n$ mkdir -p data/external data/raw data/interim data/processed data/predictions models/\n$ wget -O data/external/widsdatathon2020.zip https://github.com/iainwo/kaggle/blob/master/wids-datathon-2020/data/external/widsdatathon2020.zip\n\n$ python -m wids_datathon_2020.data.unzip_dataset\n$ python -m wids_datathon_2020.learn data/raw/training_v2.csv\n$ python -m wids_datathon_2020.inference data/raw/unlabeled.csv\n\n$ head data/predictions/unlabeled.csv\n```\n\n# How-to Develop\n\n```bash\n$ echo 'setup development environment'\n$ git clone https://github.com/iainwo/kaggle.git\n$ cd wids-datathon-2020/\n$ make create_environment\n$ conda activate wids_datathon_2020\n$ make requirements\n\n$ echo 'make some changes to the wids-datathon-2020 python module'\n$ vim my-file.py\n\n$ echo 'use the module'\n$ make data\n$ make model\n$ make predictions\n```\n\n# Other Commands\n```sh\n(wids_datathon_2020) talisman-2:wids-datathon-2020 iainwong$ make\nAvailable rules:\n\nclean               Delete all compiled Python files \ncreate_environment  Set up python interpreter environment \ndata                Make Dataset \ndata_final          Make Dataset for Kaggle Submission \neda                 Generate visuals for feature EDA \nlint                Lint using flake8 \nmodel               Make Model \npredictions         Make Predictions \nrequirements        Install Python Dependencies \nrequirements_dev    Install Development Deps \nsync_data_from_s3   Download Data from S3 \nsync_data_to_s3     Upload Data to S3 \ntest                Run unit tests \ntest_environment    Test python environment is setup correctly \n```\n\nProject Organization\n------------\n\n    \u251c\u2500\u2500 LICENSE\n    \u251c\u2500\u2500 Makefile           <- Makefile with commands like `make data` or `make train`\n    \u251c\u2500\u2500 README.md          <- The top-level README for developers using this project.\n    \u251c\u2500\u2500 data\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 external       <- Data from third party sources.\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 interim        <- Intermediate data that has been transformed.\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 processed      <- The final, canonical data sets for modeling.\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 raw            <- The original, immutable data dump.\n    \u2502\n    \u251c\u2500\u2500 docs               <- A default Sphinx project; see sphinx-doc.org for details\n    \u2502\n    \u251c\u2500\u2500 models             <- Trained and serialized models, model predictions, or model summaries\n    \u2502\n    \u251c\u2500\u2500 notebooks          <- Jupyter notebooks. Naming convention is a number (for ordering),\n    \u2502                         the creator's initials, and a short `-` delimited description, e.g.\n    \u2502                         `1.0-jqp-initial-data-exploration`.\n    \u2502\n    \u251c\u2500\u2500 references         <- Data dictionaries, manuals, and all other explanatory materials.\n    \u2502\n    \u251c\u2500\u2500 reports            <- Generated analysis as HTML, PDF, LaTeX, etc.\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 figures        <- Generated graphics and figures to be used in reporting\n    \u2502\n    \u251c\u2500\u2500 requirements.txt   <- The requirements file for reproducing the analysis environment, e.g.\n    \u2502                         generated with `pip freeze > requirements.txt`\n    \u2502\n    \u251c\u2500\u2500 setup.py           <- makes project pip installable (pip install -e .) so src can be imported\n    \u251c\u2500\u2500 src                <- Source code for use in this project.\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py    <- Makes src a Python module\n    \u2502   \u2502\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 data           <- Scripts to download or generate data\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 make_dataset.py\n    \u2502   \u2502\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 features       <- Scripts to turn raw data into features for modeling\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 build_features.py\n    \u2502   \u2502\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 models         <- Scripts to train models and then use trained models to make\n    \u2502   \u2502   \u2502                 predictions\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 predict_model.py\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 train_model.py\n    \u2502   \u2502\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 visualization  <- Scripts to create exploratory and results oriented visualizations\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 visualize.py\n    \u2502\n    \u2514\u2500\u2500 tox.ini            <- tox file with settings for running tox; see tox.testrun.org\n\n\n--------\n\n<p><small>Project based on the <a target=\"_blank\" href=\"../kaggle-data-science/\">kaggle-data-science</a> project template.</small></p>\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/iainwo/kaggle/tree/master/wids-datathon-2020", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "wids-datathon-2020", "package_url": "https://pypi.org/project/wids-datathon-2020/", "platform": "", "project_url": "https://pypi.org/project/wids-datathon-2020/", "project_urls": {"Homepage": "https://github.com/iainwo/kaggle/tree/master/wids-datathon-2020"}, "release_url": "https://pypi.org/project/wids-datathon-2020/0.1.5/", "requires_dist": ["pandas", "python-dotenv", "Click", "pyarrow", "numpy", "scikit-learn"], "requires_python": ">=3.6", "summary": "The challenge is to create a model that uses data from the first 24 hours of intensive care to predict patient survival. (Kaggle Proj) https://www.kaggle.com/c/widsdatathon2020/overview", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>wids_datathon_2020</h1>\n<p>The challenge is to create a model that uses data from the first 24 hours of intensive care to predict patient survival. (Kaggle Proj) <a href=\"https://www.kaggle.com/c/widsdatathon2020/overview\" rel=\"nofollow\">https://www.kaggle.com/c/widsdatathon2020/overview</a></p>\n<h1>How-to Perform Inference</h1>\n<p>This project provides a publicly-accessible and straight forward way to perform batch or realtime inference based on WiDS Datathon 2020 data.</p>\n<pre>$ pip install wids-datathon-2020\n\n$ mkdir -p data/external data/raw data/interim data/processed data/predictions models/\n$ wget -O data/external/widsdatathon2020.zip https://github.com/iainwo/kaggle/blob/master/wids-datathon-2020/data/external/widsdatathon2020.zip\n\n$ python -m wids_datathon_2020.data.unzip_dataset\n$ python -m wids_datathon_2020.learn data/raw/training_v2.csv\n$ python -m wids_datathon_2020.inference data/raw/unlabeled.csv\n\n$ head data/predictions/unlabeled.csv\n</pre>\n<h1>How-to Develop</h1>\n<pre>$ <span class=\"nb\">echo</span> <span class=\"s1\">'setup development environment'</span>\n$ git clone https://github.com/iainwo/kaggle.git\n$ <span class=\"nb\">cd</span> wids-datathon-2020/\n$ make create_environment\n$ conda activate wids_datathon_2020\n$ make requirements\n\n$ <span class=\"nb\">echo</span> <span class=\"s1\">'make some changes to the wids-datathon-2020 python module'</span>\n$ vim my-file.py\n\n$ <span class=\"nb\">echo</span> <span class=\"s1\">'use the module'</span>\n$ make data\n$ make model\n$ make predictions\n</pre>\n<h1>Other Commands</h1>\n<pre><span class=\"o\">(</span>wids_datathon_2020<span class=\"o\">)</span> talisman-2:wids-datathon-2020 iainwong$ make\nAvailable rules:\n\nclean               Delete all compiled Python files \ncreate_environment  Set up python interpreter environment \ndata                Make Dataset \ndata_final          Make Dataset <span class=\"k\">for</span> Kaggle Submission \neda                 Generate visuals <span class=\"k\">for</span> feature EDA \nlint                Lint using flake8 \nmodel               Make Model \npredictions         Make Predictions \nrequirements        Install Python Dependencies \nrequirements_dev    Install Development Deps \nsync_data_from_s3   Download Data from S3 \nsync_data_to_s3     Upload Data to S3 \n<span class=\"nb\">test</span>                Run unit tests \ntest_environment    Test python environment is setup correctly \n</pre>\n<h2>Project Organization</h2>\n<pre><code>\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 Makefile           &lt;- Makefile with commands like `make data` or `make train`\n\u251c\u2500\u2500 README.md          &lt;- The top-level README for developers using this project.\n\u251c\u2500\u2500 data\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 external       &lt;- Data from third party sources.\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 interim        &lt;- Intermediate data that has been transformed.\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 processed      &lt;- The final, canonical data sets for modeling.\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 raw            &lt;- The original, immutable data dump.\n\u2502\n\u251c\u2500\u2500 docs               &lt;- A default Sphinx project; see sphinx-doc.org for details\n\u2502\n\u251c\u2500\u2500 models             &lt;- Trained and serialized models, model predictions, or model summaries\n\u2502\n\u251c\u2500\u2500 notebooks          &lt;- Jupyter notebooks. Naming convention is a number (for ordering),\n\u2502                         the creator's initials, and a short `-` delimited description, e.g.\n\u2502                         `1.0-jqp-initial-data-exploration`.\n\u2502\n\u251c\u2500\u2500 references         &lt;- Data dictionaries, manuals, and all other explanatory materials.\n\u2502\n\u251c\u2500\u2500 reports            &lt;- Generated analysis as HTML, PDF, LaTeX, etc.\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 figures        &lt;- Generated graphics and figures to be used in reporting\n\u2502\n\u251c\u2500\u2500 requirements.txt   &lt;- The requirements file for reproducing the analysis environment, e.g.\n\u2502                         generated with `pip freeze &gt; requirements.txt`\n\u2502\n\u251c\u2500\u2500 setup.py           &lt;- makes project pip installable (pip install -e .) so src can be imported\n\u251c\u2500\u2500 src                &lt;- Source code for use in this project.\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py    &lt;- Makes src a Python module\n\u2502   \u2502\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 data           &lt;- Scripts to download or generate data\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 make_dataset.py\n\u2502   \u2502\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 features       &lt;- Scripts to turn raw data into features for modeling\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 build_features.py\n\u2502   \u2502\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 models         &lt;- Scripts to train models and then use trained models to make\n\u2502   \u2502   \u2502                 predictions\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 predict_model.py\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 train_model.py\n\u2502   \u2502\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 visualization  &lt;- Scripts to create exploratory and results oriented visualizations\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 visualize.py\n\u2502\n\u2514\u2500\u2500 tox.ini            &lt;- tox file with settings for running tox; see tox.testrun.org\n</code></pre>\n<hr>\n<p>&lt;small&gt;Project based on the <a href=\"../kaggle-data-science/\" rel=\"nofollow\">kaggle-data-science</a> project template.&lt;/small&gt;</p>\n\n          </div>"}, "last_serial": 6774164, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ca17602efdb1bb22a3dc25d2e7721b3c", "sha256": "146e110333856ff26707dca6fde9a0317c92dbb25d4ac4b825a90d784e62e6d9"}, "downloads": -1, "filename": "wids_datathon_2020-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ca17602efdb1bb22a3dc25d2e7721b3c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19844, "upload_time": "2020-02-29T22:33:51", "upload_time_iso_8601": "2020-02-29T22:33:51.625513Z", "url": "https://files.pythonhosted.org/packages/9a/a7/ad51a191677c2c4e0e2bb1cbbe2bd17501e0021e59e1043246288233cf74/wids_datathon_2020-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "603907f24baaca61239c6e575301fc3d", "sha256": "bb9403b5c3c15a6eb106b3c49c0387b62aa150134a139971bdd3a40a192e8142"}, "downloads": -1, "filename": "wids-datathon-2020-0.0.1.tar.gz", "has_sig": false, "md5_digest": "603907f24baaca61239c6e575301fc3d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16717, "upload_time": "2020-02-29T22:33:53", "upload_time_iso_8601": "2020-02-29T22:33:53.528660Z", "url": "https://files.pythonhosted.org/packages/e1/cb/3fb20b9c13fa818900c1b8801ace009f4a33a93b16efee09aacbfdfdd61e/wids-datathon-2020-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f7c62628e6135b463b48b131f782f358", "sha256": "216aae361bb2fddbd264908449d414cb179405f0e0da6527394a6947198aba6e"}, "downloads": -1, "filename": "wids_datathon_2020-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f7c62628e6135b463b48b131f782f358", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20739, "upload_time": "2020-03-01T03:24:22", "upload_time_iso_8601": "2020-03-01T03:24:22.211616Z", "url": "https://files.pythonhosted.org/packages/25/40/d7d371f9cf2bd0ae103978ad8bd00e1d5450e1bf6e8c13eb3ebf13bc3725/wids_datathon_2020-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c747f383b8177079c8a82d1a8326fcdf", "sha256": "008ca19816f33098b8e51c27d45fab1ecfeb45b643fe79aa7a57c42a752c021a"}, "downloads": -1, "filename": "wids-datathon-2020-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c747f383b8177079c8a82d1a8326fcdf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19063, "upload_time": "2020-03-01T03:24:24", "upload_time_iso_8601": "2020-03-01T03:24:24.100007Z", "url": "https://files.pythonhosted.org/packages/7a/68/b2012535fd3231c0eb6c9000ac8a034532efc3edc33902c79855b432c707/wids-datathon-2020-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "5252110fe12151bd85a2ccd4e94bf1c9", "sha256": "bebca90edef53c828fb6b3a2e99c98a92a670a39320cd6b25bcf6537d5aa4e3f"}, "downloads": -1, "filename": "wids_datathon_2020-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5252110fe12151bd85a2ccd4e94bf1c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 29136, "upload_time": "2020-03-01T08:40:28", "upload_time_iso_8601": "2020-03-01T08:40:28.227872Z", "url": "https://files.pythonhosted.org/packages/22/21/06c16703eb5fcc1706c70ca2f8b7a30eff3dce8fa584d3d5ff7e39cbec52/wids_datathon_2020-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5564b6de1cd98b22128a7fff8c26ca3e", "sha256": "7a266aa6c7584449bde31947e73d6a03930341709a59a3ecf3bed100a537fead"}, "downloads": -1, "filename": "wids-datathon-2020-0.0.3.tar.gz", "has_sig": false, "md5_digest": "5564b6de1cd98b22128a7fff8c26ca3e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23264, "upload_time": "2020-03-01T08:40:29", "upload_time_iso_8601": "2020-03-01T08:40:29.558017Z", "url": "https://files.pythonhosted.org/packages/04/d0/95f0a9ae0aa7b7cc98b9acf2eafd1a877aa706952d5e56cd94132dad82e7/wids-datathon-2020-0.0.3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "a27d1b909d9fe3eaee31a291482692e8", "sha256": "f155484180a83020a317b45aeec8fd9497f9c2b49808b0360f8a5ec85981bd9c"}, "downloads": -1, "filename": "wids_datathon_2020-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a27d1b909d9fe3eaee31a291482692e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 30942, "upload_time": "2020-03-02T03:18:44", "upload_time_iso_8601": "2020-03-02T03:18:44.948641Z", "url": "https://files.pythonhosted.org/packages/47/76/ccdee2489c779d7491849409a3d3bda3183ca755f9c581fa4ca63fe47be2/wids_datathon_2020-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6edf91da49b0887a0ed3075e703e4d5f", "sha256": "a0504ba193c1e4663f8ce36fc5f5146e027ac65a872514569bd36737cc53dc5f"}, "downloads": -1, "filename": "wids-datathon-2020-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6edf91da49b0887a0ed3075e703e4d5f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22659, "upload_time": "2020-03-02T03:18:46", "upload_time_iso_8601": "2020-03-02T03:18:46.248628Z", "url": "https://files.pythonhosted.org/packages/f0/3a/ac34a044c3a1dd27f1ca3c4da12c29233a01e390caf09aa7e96cdefdc9d6/wids-datathon-2020-0.1.0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ade1a5f6b4a030bc14dd1366a8ff33cc", "sha256": "a00e3be7ffef61632274a0459d3b6c01ad3e546f63f85f79eb573e9fbcd4dee5"}, "downloads": -1, "filename": "wids_datathon_2020-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ade1a5f6b4a030bc14dd1366a8ff33cc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 30942, "upload_time": "2020-03-02T06:54:23", "upload_time_iso_8601": "2020-03-02T06:54:23.391534Z", "url": "https://files.pythonhosted.org/packages/61/6a/51ec419f12cb12afd8ea1afec658aafdd099450b36ec2df9f2188d1ae95d/wids_datathon_2020-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38c55b3e82f7723a65e8dbd4bb8a91ce", "sha256": "fb50617ef6bd7e499c7f600429e7af5c0d0b4f47a224be2d06ccb05d0c9220c8"}, "downloads": -1, "filename": "wids-datathon-2020-0.1.2.tar.gz", "has_sig": false, "md5_digest": "38c55b3e82f7723a65e8dbd4bb8a91ce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22660, "upload_time": "2020-03-02T06:54:25", "upload_time_iso_8601": "2020-03-02T06:54:25.145958Z", "url": "https://files.pythonhosted.org/packages/98/dc/76d71cfc9c01f4d209c6e612f6b260918a7ab099747d9f9a764606a873a8/wids-datathon-2020-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "668202e1554ad781e3e0aaf7bda8da2d", "sha256": "c837843fe38f8a22ed81d310f3a4594ced56c513ef56210de92a07b04690d06c"}, "downloads": -1, "filename": "wids_datathon_2020-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "668202e1554ad781e3e0aaf7bda8da2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 30943, "upload_time": "2020-03-04T03:39:50", "upload_time_iso_8601": "2020-03-04T03:39:50.460938Z", "url": "https://files.pythonhosted.org/packages/37/45/2183ff55b3c2ea584f9a6ec13c1e1125b1a001b99378bf7fcbd14498328a/wids_datathon_2020-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2390b524b42fbcfc42d8a2efa9a87ef5", "sha256": "46d052951c9585ba24dfcf0251a78001433c6c3a17b5fa7c1f73d6e9bc126add"}, "downloads": -1, "filename": "wids-datathon-2020-0.1.3.tar.gz", "has_sig": false, "md5_digest": "2390b524b42fbcfc42d8a2efa9a87ef5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22650, "upload_time": "2020-03-04T03:39:51", "upload_time_iso_8601": "2020-03-04T03:39:51.675673Z", "url": "https://files.pythonhosted.org/packages/00/fd/91dbc8b03020833ec017ef7060468e4c9b0fc83109ffd507b2993a7bd82e/wids-datathon-2020-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "4ba3dd5032a8fb24b65aae8f11a88bb2", "sha256": "e46afe051939b5e633350c2c557a3a0b23fd3dd389a2900fcbecf313d5acba44"}, "downloads": -1, "filename": "wids_datathon_2020-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4ba3dd5032a8fb24b65aae8f11a88bb2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 30965, "upload_time": "2020-03-09T00:11:35", "upload_time_iso_8601": "2020-03-09T00:11:35.083188Z", "url": "https://files.pythonhosted.org/packages/ac/13/b1f1c1901f48be0eea3ea83584fb6fee72a71f00374925dc08a85a436967/wids_datathon_2020-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ff1a751d87e033799f40e9ac35fc2af", "sha256": "93af3a6e28d8be9418a0951840cf8b9d7d568a63ca7541f5139009d34f57dad0"}, "downloads": -1, "filename": "wids-datathon-2020-0.1.4.tar.gz", "has_sig": false, "md5_digest": "9ff1a751d87e033799f40e9ac35fc2af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22675, "upload_time": "2020-03-09T00:11:36", "upload_time_iso_8601": "2020-03-09T00:11:36.451380Z", "url": "https://files.pythonhosted.org/packages/8e/bf/61579aefefb73bb65bb292104add845a05cbcc260e1c8b1aa33c7cd4eae1/wids-datathon-2020-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "2ff75146b65f6907586c294853add77e", "sha256": "1989d35312a3cfb972e5f6aa78c3259185050e5189ee49867bb0417a6f13b315"}, "downloads": -1, "filename": "wids_datathon_2020-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "2ff75146b65f6907586c294853add77e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 30965, "upload_time": "2020-03-09T00:52:16", "upload_time_iso_8601": "2020-03-09T00:52:16.100162Z", "url": "https://files.pythonhosted.org/packages/03/fa/447112c2394572270d3811922ecea32246d4b24202ab8fcd901893fa326c/wids_datathon_2020-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b516f4557de11122f59dd32797a6de6", "sha256": "fd4c00c8609273336b85c60e32271d6ffe6323d8f852a3ba89bc25004eb96a24"}, "downloads": -1, "filename": "wids-datathon-2020-0.1.5.tar.gz", "has_sig": false, "md5_digest": "1b516f4557de11122f59dd32797a6de6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22672, "upload_time": "2020-03-09T00:52:17", "upload_time_iso_8601": "2020-03-09T00:52:17.133306Z", "url": "https://files.pythonhosted.org/packages/ec/4b/161b63fb4ca14a3bfd3b9cb9cfa74aa9c03b8112ae3b6436499061e54813/wids-datathon-2020-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2ff75146b65f6907586c294853add77e", "sha256": "1989d35312a3cfb972e5f6aa78c3259185050e5189ee49867bb0417a6f13b315"}, "downloads": -1, "filename": "wids_datathon_2020-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "2ff75146b65f6907586c294853add77e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 30965, "upload_time": "2020-03-09T00:52:16", "upload_time_iso_8601": "2020-03-09T00:52:16.100162Z", "url": "https://files.pythonhosted.org/packages/03/fa/447112c2394572270d3811922ecea32246d4b24202ab8fcd901893fa326c/wids_datathon_2020-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b516f4557de11122f59dd32797a6de6", "sha256": "fd4c00c8609273336b85c60e32271d6ffe6323d8f852a3ba89bc25004eb96a24"}, "downloads": -1, "filename": "wids-datathon-2020-0.1.5.tar.gz", "has_sig": false, "md5_digest": "1b516f4557de11122f59dd32797a6de6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22672, "upload_time": "2020-03-09T00:52:17", "upload_time_iso_8601": "2020-03-09T00:52:17.133306Z", "url": "https://files.pythonhosted.org/packages/ec/4b/161b63fb4ca14a3bfd3b9cb9cfa74aa9c03b8112ae3b6436499061e54813/wids-datathon-2020-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:29:24 2020"}