{"info": {"author": "Virantha N. Ekanayake", "author_email": "virantha@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Scan PDF - Easy scans in Linux with a document scanner like the Fujitsu ScanSnap\n################################################################################\n\n.. image:: http://badge.fury.io/py/scanpdf.png\n    :target: http://badge.fury.io/py/scanpdf\n\n.. image:: http://pypip.in/d/scanpdf/badge.png\n    :target: https://crate.io/packages/scanpdf?version=latest\n\n\nIf you're looking for a simple way to use a multi-page scanner and get your\ndocument into a PDF in Linux without any proprietary or commercial software,\nthen ScanPDF might be the solution.  I wrote it to quickly take the Linux SANE\nscanner system output image files, and process them into usable PDFs.  By\nusable, I mean PDFs that maintain their original scanned resolution, omit blank\npages (if you're scanning in duplex mode, for example), preserve color unless\nthe original is greyscale/black and white, in which case they are intelligently\ndown-converted to B/W PDFs to save space.\n\n* Free and open-source software: ASL2 license\n* Documentation: http://virantha.github.io/scanpdf/html\n* Source: https://github.com/virantha/scanpdf\n\nFeatures\n--------\n* Uses SANE/scanadf to automatically scan to multi-page compressed PDFs\n* `Integrates with ScanBd <http://virantha.github.io/scanpdf/html>`_ to respond to hardware button presses\n* Automatically removes blank pages.\n* Scans in color, and automatically down-converts into 1-bit B/W image for text/greyscale images\n* Auto-crops to the proper page size.\n\nUsage:\n------\nThe simplest way to use this is:\n\n::\n\n    scanpdf scan pdf <pdffile>\n\nThis will first perform the scan, and then the conversion to PDF.  If you want\nto split up the scan and the PDF conversion into two separate invocations (for\nreasons clarified below), then you can do:\n\n::\n\n    scanpdf --tmpdir=tmp scan\n    scanpdf --tmpdir=tmp pdf <pdffile>\n  \nOne reason for the separation might be if you want to keep scanning documents\n(very quick) while the post-processing (slower) for the PDF conversion is\ntaking place in the background.   For instance, if you're using the hardware\nbutton on the scanner to initiate scans (as detailed in this_ document), then\nyou want to return immediately after the scan instead of waiting for the full\nconversion to PDF has taken place.\n\n.. _this: http://virantha.com/2014/03/17/one-touch-scanning-with-fujitsu-scansnap-in-linux/\n\nYou can optionally use the following switches to control if you're putting pages face up or face down in the auto\ndocument feeder, if you want to skip the blank page processing, adjust the blank page detection threshold, or add \nadditional post-processing using unpaper_:\n\n.. _unpaper: http://unpaper.berlios.de\n\n::\n\n        --dpi=<dpi>                 DPI to scan in [default: 300]\n        --face-up=<true/false>      Face-up scanning [default: True]\n        --keep-blanks               Don't check for and remove blank pages\n        --blank-threshold=<ths>     Percentage of white to be marked as blank [default: 0.97] \n        --post-process              Run unpaper to deskew/clean up\n\n\nRight now, I'm assuming this is getting called via ScanBD, so I don't have the option to manually specify the \nscanner.  If you really want to use this standalone, for now, please just set the ``SCANBD_DEVICE`` environment \nvariable to your scanner device name before running this script.\n\n\nInstallation\n------------\n::\n\n    $ pip install scanpdf\n\nRequires ImageMagick and SANE to be installed, for the command line tools:\n\n* ``convert``\n* ``identify``\n* ``ps2pdf``\n* ``scanadf``\n\nAlso requires epstopdf.\n\nDisclaimer\n----------\nThe software is distributed on an \"AS IS\" BASIS, WITHOUT\nWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "ASL 2.0", "maintainer": null, "maintainer_email": null, "name": "scanpdf", "package_url": "https://pypi.org/project/scanpdf/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/scanpdf/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/scanpdf/0.3.1/", "requires_dist": null, "requires_python": null, "summary": "Utility to use SANE/scanadf to scan to PDF", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://badge.fury.io/py/scanpdf\" rel=\"nofollow\"><img alt=\"http://badge.fury.io/py/scanpdf.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f894bb5fbcd47e0b8b09aaff30c0a6652f08d6b6/687474703a2f2f62616467652e667572792e696f2f70792f7363616e7064662e706e67\"></a>\n<a href=\"https://crate.io/packages/scanpdf?version=latest\" rel=\"nofollow\"><img alt=\"http://pypip.in/d/scanpdf/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3815ccc1371da3b84d99bf4f1a1604a3560c1f86/687474703a2f2f70797069702e696e2f642f7363616e7064662f62616467652e706e67\"></a>\n<p>If you\u2019re looking for a simple way to use a multi-page scanner and get your\ndocument into a PDF in Linux without any proprietary or commercial software,\nthen ScanPDF might be the solution.  I wrote it to quickly take the Linux SANE\nscanner system output image files, and process them into usable PDFs.  By\nusable, I mean PDFs that maintain their original scanned resolution, omit blank\npages (if you\u2019re scanning in duplex mode, for example), preserve color unless\nthe original is greyscale/black and white, in which case they are intelligently\ndown-converted to B/W PDFs to save space.</p>\n<ul>\n<li>Free and open-source software: ASL2 license</li>\n<li>Documentation: <a href=\"http://virantha.github.io/scanpdf/html\" rel=\"nofollow\">http://virantha.github.io/scanpdf/html</a></li>\n<li>Source: <a href=\"https://github.com/virantha/scanpdf\" rel=\"nofollow\">https://github.com/virantha/scanpdf</a></li>\n</ul>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Uses SANE/scanadf to automatically scan to multi-page compressed PDFs</li>\n<li><a href=\"http://virantha.github.io/scanpdf/html\" rel=\"nofollow\">Integrates with ScanBd</a> to respond to hardware button presses</li>\n<li>Automatically removes blank pages.</li>\n<li>Scans in color, and automatically down-converts into 1-bit B/W image for text/greyscale images</li>\n<li>Auto-crops to the proper page size.</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage:</h2>\n<p>The simplest way to use this is:</p>\n<pre>scanpdf scan pdf &lt;pdffile&gt;\n</pre>\n<p>This will first perform the scan, and then the conversion to PDF.  If you want\nto split up the scan and the PDF conversion into two separate invocations (for\nreasons clarified below), then you can do:</p>\n<pre>scanpdf --tmpdir=tmp scan\nscanpdf --tmpdir=tmp pdf &lt;pdffile&gt;\n</pre>\n<p>One reason for the separation might be if you want to keep scanning documents\n(very quick) while the post-processing (slower) for the PDF conversion is\ntaking place in the background.   For instance, if you\u2019re using the hardware\nbutton on the scanner to initiate scans (as detailed in <a href=\"http://virantha.com/2014/03/17/one-touch-scanning-with-fujitsu-scansnap-in-linux/\" rel=\"nofollow\">this</a> document), then\nyou want to return immediately after the scan instead of waiting for the full\nconversion to PDF has taken place.</p>\n<p>You can optionally use the following switches to control if you\u2019re putting pages face up or face down in the auto\ndocument feeder, if you want to skip the blank page processing, adjust the blank page detection threshold, or add\nadditional post-processing using <a href=\"http://unpaper.berlios.de\" rel=\"nofollow\">unpaper</a>:</p>\n<pre>--dpi=&lt;dpi&gt;                 DPI to scan in [default: 300]\n--face-up=&lt;true/false&gt;      Face-up scanning [default: True]\n--keep-blanks               Don't check for and remove blank pages\n--blank-threshold=&lt;ths&gt;     Percentage of white to be marked as blank [default: 0.97]\n--post-process              Run unpaper to deskew/clean up\n</pre>\n<p>Right now, I\u2019m assuming this is getting called via ScanBD, so I don\u2019t have the option to manually specify the\nscanner.  If you really want to use this standalone, for now, please just set the <tt>SCANBD_DEVICE</tt> environment\nvariable to your scanner device name before running this script.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install scanpdf\n</pre>\n<p>Requires ImageMagick and SANE to be installed, for the command line tools:</p>\n<ul>\n<li><tt>convert</tt></li>\n<li><tt>identify</tt></li>\n<li><tt>ps2pdf</tt></li>\n<li><tt>scanadf</tt></li>\n</ul>\n<p>Also requires epstopdf.</p>\n</div>\n<div id=\"disclaimer\">\n<h2>Disclaimer</h2>\n<p>The software is distributed on an \u201cAS IS\u201d BASIS, WITHOUT\nWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</p>\n</div>\n\n          </div>"}, "last_serial": 1428946, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "449b06a4932a1428b4940ea40331fb03", "sha256": "4e73ba0ba388bb7fcc1b5a6ec41f2d5ed0fdc5eaa092974f2897bb8fd47b6a2e"}, "downloads": -1, "filename": "scanpdf-0.1.0.tar.gz", "has_sig": false, "md5_digest": "449b06a4932a1428b4940ea40331fb03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10703, "upload_time": "2014-03-19T18:22:58", "upload_time_iso_8601": "2014-03-19T18:22:58.868779Z", "url": "https://files.pythonhosted.org/packages/a1/78/5a0713cc585a47f41ab63557f70a4d0823a7f2b836b4bf63e8d1e26328fc/scanpdf-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2c1a0dcaa9db8017fbdc75c58364db66", "sha256": "70489a802d8575edfdf23b66395bd41a8ad4a6e4c9d6b18def9f6d375a351156"}, "downloads": -1, "filename": "scanpdf-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2c1a0dcaa9db8017fbdc75c58364db66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12758, "upload_time": "2014-03-31T03:35:21", "upload_time_iso_8601": "2014-03-31T03:35:21.373602Z", "url": "https://files.pythonhosted.org/packages/98/1f/d3e32dc44785ba1c531d1d19233ea9376e57f703a7461f020c16ef7a4e89/scanpdf-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "fd3e99079152918ce4eea965ba67103e", "sha256": "4f5e9710c5b56f15ad608ed830f8dc35cac37e46789a84bd663559e277dac418"}, "downloads": -1, "filename": "scanpdf-0.3.0.tar.gz", "has_sig": false, "md5_digest": "fd3e99079152918ce4eea965ba67103e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12963, "upload_time": "2014-08-25T20:00:23", "upload_time_iso_8601": "2014-08-25T20:00:23.541088Z", "url": "https://files.pythonhosted.org/packages/a1/b8/a8e5fe7b21420694511693a85bb295e36bb614e3eb44a2479dad40e811b7/scanpdf-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "ed704427225c8d4ddb4da5f0742d1013", "sha256": "2f7d64d4a9ea0bffbe0946bc03011d2305904e74658f4987723eaac08bd1bf20"}, "downloads": -1, "filename": "scanpdf-0.3.1.tar.gz", "has_sig": false, "md5_digest": "ed704427225c8d4ddb4da5f0742d1013", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13031, "upload_time": "2015-02-18T19:57:51", "upload_time_iso_8601": "2015-02-18T19:57:51.090447Z", "url": "https://files.pythonhosted.org/packages/c0/ce/7aa617a7a6c4a11a8f80ff4d73f47b8e3720f0203ed62bb19a0a32386c8a/scanpdf-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ed704427225c8d4ddb4da5f0742d1013", "sha256": "2f7d64d4a9ea0bffbe0946bc03011d2305904e74658f4987723eaac08bd1bf20"}, "downloads": -1, "filename": "scanpdf-0.3.1.tar.gz", "has_sig": false, "md5_digest": "ed704427225c8d4ddb4da5f0742d1013", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13031, "upload_time": "2015-02-18T19:57:51", "upload_time_iso_8601": "2015-02-18T19:57:51.090447Z", "url": "https://files.pythonhosted.org/packages/c0/ce/7aa617a7a6c4a11a8f80ff4d73f47b8e3720f0203ed62bb19a0a32386c8a/scanpdf-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:04 2020"}