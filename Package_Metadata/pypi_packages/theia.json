{"info": {"author": "Pavle Jonoski", "author_email": "jonoski.pavle@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Topic :: Internet :: Log Analysis", "Topic :: Software Development :: Libraries", "Topic :: System :: Logging", "Topic :: Utilities"], "description": "# theia\n\n[![Build Status](https://travis-ci.org/theia-log/theia.svg?branch=master)](https://travis-ci.org/theia-log/theia)\n[![Maintainability](https://api.codeclimate.com/v1/badges/ff2ef675417026a05721/maintainability)](https://codeclimate.com/github/theia-log/theia/maintainability)\n[![Test Coverage](https://api.codeclimate.com/v1/badges/ff2ef675417026a05721/test_coverage)](https://codeclimate.com/github/theia-log/theia/test_coverage)\n[![PyPI version](https://badge.fury.io/py/theia.svg)](https://badge.fury.io/py/theia)\n[![Documentation Status](https://readthedocs.org/projects/theia/badge/?version=latest)](https://theia.readthedocs.io/en/latest/?badge=latest)\n\nSimple and lightweight log aggregator\n\n\n\n\n# Introduction\nTheia is a log aggregator that collects logs from multiple log files usually on multiple machines and provides the log entries on a single endpoint. \nEach recorded entry comes from a single source (log file) and can be tagged with multiple tags. This way you can query an filter by the source (for example /var/log/apache or /var/log/reds) and tags (for example \"production1\", \"cache-server\", \"testing\" etc), or you can just simply match a pattern against the content of the entry.\n\nTheia has three parts:\n * watcher - this is the agent process running on the machine where you have your logs. You will have multiple watchers, but usually a single watcher per node\n * collector - this is the master process, usually running on a sperate node where you're going to collect the logs. Provides the interface for pushing the log events and an interface for querying the aggregated logs.\n * client - client for querying and watching live events. This connects to the collector via websocket and\nqueries the collected events or registers a filter for live events.\n\n# Installation\n\nTheia comes as a single python package (only python3 is supported). \n\nWith ```pip```:\n```bash\npip install theia\n```\n\n# Running the collector\n\nThis process collects and stores the events. The built-in database uses text files to store the events.\n\nCreate a directory where you want to keep the events, and run the collector server:\n\n```bash\nmkdir data\n\npython -m theia.cli collect -d ./data\n\n```\n\nThis will run the server listening on port ```6433```.\n\n# Running a watcher\n\nMake sure you have the collector running.\n\nThen, run the watcher:\n\n```bash\npython -m theia.cli watch -c localhost -f /var/log/httpd/access.log -t web-access\n```\n\nThis would watch for changes in ```access.log``` and send events to the collector \ntagged with ```web-access```\n\n# Run a query\n\nTo query for all log events with tag ```web-access```:\n\n```bash\npython -m theia.cli query -c localhost -t web-access\n```\n\n# Run a live filter\n\nTo watch the events with tag ```web-access``` as they arrive in real-time:\n\n```bash\npython -m theia.cli query -l -c localhost -t web-access\n```\n\n# Note\n**This is still  work in progress and is far from production ready**", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/theia-log/theia", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "theia", "package_url": "https://pypi.org/project/theia/", "platform": "", "project_url": "https://pypi.org/project/theia/", "project_urls": {"Homepage": "https://github.com/theia-log/theia"}, "release_url": "https://pypi.org/project/theia/0.9.2/", "requires_dist": null, "requires_python": "", "summary": "Theia is a lightweight log aggregator.", "version": "0.9.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>theia</h1>\n<p><a href=\"https://travis-ci.org/theia-log/theia\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68b8cd249e840998ab4088be1739b67ed625e5b0/68747470733a2f2f7472617669732d63692e6f72672f74686569612d6c6f672f74686569612e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codeclimate.com/github/theia-log/theia/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f2c251085f8cc55cc6ba332263f42980f9e60b9e/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f66663265663637353431373032366130353732312f6d61696e7461696e6162696c697479\"></a>\n<a href=\"https://codeclimate.com/github/theia-log/theia/test_coverage\" rel=\"nofollow\"><img alt=\"Test Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f1e46bdd072ee9eee88a035820a2c34fb0b6b784/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f66663265663637353431373032366130353732312f746573745f636f766572616765\"></a>\n<a href=\"https://badge.fury.io/py/theia\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4cc9d65188edd038f6e6aa7d3874848a16067dc1/68747470733a2f2f62616467652e667572792e696f2f70792f74686569612e737667\"></a>\n<a href=\"https://theia.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ef638d00ad6c7ada0c9f38a4c6c622b634005a6/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f74686569612f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p>Simple and lightweight log aggregator</p>\n<h1>Introduction</h1>\n<p>Theia is a log aggregator that collects logs from multiple log files usually on multiple machines and provides the log entries on a single endpoint.\nEach recorded entry comes from a single source (log file) and can be tagged with multiple tags. This way you can query an filter by the source (for example /var/log/apache or /var/log/reds) and tags (for example \"production1\", \"cache-server\", \"testing\" etc), or you can just simply match a pattern against the content of the entry.</p>\n<p>Theia has three parts:</p>\n<ul>\n<li>watcher - this is the agent process running on the machine where you have your logs. You will have multiple watchers, but usually a single watcher per node</li>\n<li>collector - this is the master process, usually running on a sperate node where you're going to collect the logs. Provides the interface for pushing the log events and an interface for querying the aggregated logs.</li>\n<li>client - client for querying and watching live events. This connects to the collector via websocket and\nqueries the collected events or registers a filter for live events.</li>\n</ul>\n<h1>Installation</h1>\n<p>Theia comes as a single python package (only python3 is supported).</p>\n<p>With <code>pip</code>:</p>\n<pre>pip install theia\n</pre>\n<h1>Running the collector</h1>\n<p>This process collects and stores the events. The built-in database uses text files to store the events.</p>\n<p>Create a directory where you want to keep the events, and run the collector server:</p>\n<pre>mkdir data\n\npython -m theia.cli collect -d ./data\n</pre>\n<p>This will run the server listening on port <code>6433</code>.</p>\n<h1>Running a watcher</h1>\n<p>Make sure you have the collector running.</p>\n<p>Then, run the watcher:</p>\n<pre>python -m theia.cli watch -c localhost -f /var/log/httpd/access.log -t web-access\n</pre>\n<p>This would watch for changes in <code>access.log</code> and send events to the collector\ntagged with <code>web-access</code></p>\n<h1>Run a query</h1>\n<p>To query for all log events with tag <code>web-access</code>:</p>\n<pre>python -m theia.cli query -c localhost -t web-access\n</pre>\n<h1>Run a live filter</h1>\n<p>To watch the events with tag <code>web-access</code> as they arrive in real-time:</p>\n<pre>python -m theia.cli query -l -c localhost -t web-access\n</pre>\n<h1>Note</h1>\n<p><strong>This is still  work in progress and is far from production ready</strong></p>\n\n          </div>"}, "last_serial": 3975207, "releases": {"0.9.1": [{"comment_text": "", "digests": {"md5": "26df4e77586da363971b05011d265aa7", "sha256": "15fbcc63c5fccd76b1788070e4b15e95c938f54a0067233750cc7437b3f240f2"}, "downloads": -1, "filename": "theia-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "26df4e77586da363971b05011d265aa7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19517, "upload_time": "2018-05-21T20:41:26", "upload_time_iso_8601": "2018-05-21T20:41:26.249702Z", "url": "https://files.pythonhosted.org/packages/26/47/0bd068ab34ea99e507427dbfb8dd13ab56183229c792c21240ec2089c197/theia-0.9.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58e8851ef3beec61e85b9dec09eb07ed", "sha256": "363a9c5223e8341f5591177141fc3ca1f316fca9d9761ef6f70fc60c92e18b5c"}, "downloads": -1, "filename": "theia-0.9.1.tar.gz", "has_sig": false, "md5_digest": "58e8851ef3beec61e85b9dec09eb07ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16023, "upload_time": "2018-05-21T20:41:27", "upload_time_iso_8601": "2018-05-21T20:41:27.764778Z", "url": "https://files.pythonhosted.org/packages/7e/50/09ec6f63136909a32fdbab373d2dacdd9069e74643c42fce67d5a8ba5d7c/theia-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "5dbe76c554db24f3ccd22f315b55b5cb", "sha256": "93e2d07e993e2f552a2a57f9d037c2989286cba93526b30131c05de4c6006497"}, "downloads": -1, "filename": "theia-0.9.2.tar.gz", "has_sig": false, "md5_digest": "5dbe76c554db24f3ccd22f315b55b5cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30590, "upload_time": "2018-06-18T23:45:27", "upload_time_iso_8601": "2018-06-18T23:45:27.741672Z", "url": "https://files.pythonhosted.org/packages/dd/da/c5844d3d99e31348e0e43e3a2d1508634c29b283bb5ff122d21fee69bc20/theia-0.9.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5dbe76c554db24f3ccd22f315b55b5cb", "sha256": "93e2d07e993e2f552a2a57f9d037c2989286cba93526b30131c05de4c6006497"}, "downloads": -1, "filename": "theia-0.9.2.tar.gz", "has_sig": false, "md5_digest": "5dbe76c554db24f3ccd22f315b55b5cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30590, "upload_time": "2018-06-18T23:45:27", "upload_time_iso_8601": "2018-06-18T23:45:27.741672Z", "url": "https://files.pythonhosted.org/packages/dd/da/c5844d3d99e31348e0e43e3a2d1508634c29b283bb5ff122d21fee69bc20/theia-0.9.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:05 2020"}