{"info": {"author": "Henry Chang", "author_email": "mr.changyuheng@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# aioserial\n\n* [Quick start](#quick-start)\n    + [A simple serial port reader](#a-simple-serial-port-reader)\n* [API](#api)\n    + [AioSerial](#aioserial)\n        - [Constructor](#constructor)\n        - [Methods](#methods)\n            * [read_async](#read-async)\n            * [read_until_async](#read-until-async)\n            * [readinto_async](#readinto-async)\n            * [readline_async](#readline-async)\n            * [readlines_async](#readlines-async)\n            * [write_async](#write-async)\n            * [writelines_async](#writelines-async)\n    + [Other APIs](#other-apis)\n* [Why aioserial?](#why-aioserial-)\n\nA Python package that combines [asyncio](https://docs.python.org/3/library/asyncio.html) and [pySerial](https://github.com/pyserial/pyserial).\n\n## Quick start\n\n### A simple serial port reader\n\n```py\nimport aioserial\nimport asyncio\n\n\nasync def read_and_print(aioserial_instance: aioserial.AioSerial):\n    while True:\n        print((await aioserial_instance.read_async()).decode(errors='ignore'), end='', flush=True)\n\nasyncio.run(read_and_print(aioserial.AioSerial(port='COM1')))\n```\n\n## API\n\n### AioSerial\n\n```py\n>>> import aioserial\n>>> import serial\n\n>>> isinstance(aioserial.AioSerial(), serial.Serial)\nTrue\n\n>>> issubclass(aioserial.AioSerial, serial.Serial)\nTrue\n\n>>> aioserial.Serial is serial.Serial\nTrue\n```\n\n#### Constructor\n\n```py\naioserial_instance: aioserial.AioSerial = aioserial.AioSerial(\n    # ... same with what can be passed to serial.Serial ...,\n    loop: Optional[asyncio.AbstractEventLoop] = None)\n```\n\n#### Methods\n\n\n##### read_async\n\n```py\nbytes_read: bytes = \\\n    await aioserial_instance.read_async(size: int = 1)\n```\n\n##### read_until_async\n\n```py\nat_most_certain_size_of_bytes_read: bytes = \\\n    await aioserial_instance.read_until_async(\n        expected: bytes = aioserial.LF, size: Optional[int] = None)\n```\n\n##### readinto_async\n\n```py\nnumber_of_byte_read: int = \\\n    await aioserial_instance.readinto_async(b: Union[array.array, bytearray])\n```\n\n##### readline_async\n\n```py\na_line_of_at_most_certain_size_of_bytes_read: bytes = \\\n    await aioserial_instance.readline_async(size: int = -1)\n```\n\n##### readlines_async\n\n```py\nlines_of_at_most_certain_size_of_bytes_read: bytes = \\\n    await aioserial_instance.readlines_async(hint: int = -1)\n```\n\n##### write_async\n\n```py\nnumber_of_byte_like_data_written: int = \\\n    await aioserial_instance.write_async(bytes_like_data)\n```\n\n##### writelines_async\n\n```py\nnumber_of_byte_like_data_in_the_given_list_written: int = \\\n    await aioserial_instance.writelines_async(list_of_bytes_like_data)\n```\n\n### Other APIs\n\nAll the other APIs in package [pySerial](https://github.com/pyserial/pyserial) are supported in [aioserial](https://github.com/changyuheng/aioserial) as [original](https://pyserial.readthedocs.io/).\n\n## Why aioserial?\n\n* Want to use an asyncio-based but not a (self-built) thread-based serial library.\n* [pySerial-asyncio](https://github.com/pyserial/pyserial-asyncio) does [not support Windows](https://github.com/pyserial/pyserial-asyncio/issues/3).\n* APIs in all the other packages ([pySerial-asyncio](https://github.com/pyserial/pyserial-asyncio), [asyncserial](https://github.com/xvzf/asyncserial-py)) that target the same goal are not designed in high level.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/changyuheng/aioserial", "keywords": "", "license": "MPL-2.0", "maintainer": "", "maintainer_email": "", "name": "aioserial", "package_url": "https://pypi.org/project/aioserial/", "platform": "", "project_url": "https://pypi.org/project/aioserial/", "project_urls": {"Homepage": "https://github.com/changyuheng/aioserial"}, "release_url": "https://pypi.org/project/aioserial/1.2.3/", "requires_dist": ["pyserial"], "requires_python": ">=3.6,<4.0", "summary": "An asynchronous serial port library of Python", "version": "1.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aioserial</h1>\n<ul>\n<li><a href=\"#quick-start\" rel=\"nofollow\">Quick start</a>\n<ul>\n<li><a href=\"#a-simple-serial-port-reader\" rel=\"nofollow\">A simple serial port reader</a></li>\n</ul>\n</li>\n<li><a href=\"#api\" rel=\"nofollow\">API</a>\n<ul>\n<li><a href=\"#aioserial\" rel=\"nofollow\">AioSerial</a>\n<ul>\n<li><a href=\"#constructor\" rel=\"nofollow\">Constructor</a></li>\n<li><a href=\"#methods\" rel=\"nofollow\">Methods</a>\n<ul>\n<li><a href=\"#read-async\" rel=\"nofollow\">read_async</a></li>\n<li><a href=\"#read-until-async\" rel=\"nofollow\">read_until_async</a></li>\n<li><a href=\"#readinto-async\" rel=\"nofollow\">readinto_async</a></li>\n<li><a href=\"#readline-async\" rel=\"nofollow\">readline_async</a></li>\n<li><a href=\"#readlines-async\" rel=\"nofollow\">readlines_async</a></li>\n<li><a href=\"#write-async\" rel=\"nofollow\">write_async</a></li>\n<li><a href=\"#writelines-async\" rel=\"nofollow\">writelines_async</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#other-apis\" rel=\"nofollow\">Other APIs</a></li>\n</ul>\n</li>\n<li><a href=\"#why-aioserial-\" rel=\"nofollow\">Why aioserial?</a></li>\n</ul>\n<p>A Python package that combines <a href=\"https://docs.python.org/3/library/asyncio.html\" rel=\"nofollow\">asyncio</a> and <a href=\"https://github.com/pyserial/pyserial\" rel=\"nofollow\">pySerial</a>.</p>\n<h2>Quick start</h2>\n<h3>A simple serial port reader</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">aioserial</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">read_and_print</span><span class=\"p\">(</span><span class=\"n\">aioserial_instance</span><span class=\"p\">:</span> <span class=\"n\">aioserial</span><span class=\"o\">.</span><span class=\"n\">AioSerial</span><span class=\"p\">):</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">((</span><span class=\"k\">await</span> <span class=\"n\">aioserial_instance</span><span class=\"o\">.</span><span class=\"n\">read_async</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"n\">errors</span><span class=\"o\">=</span><span class=\"s1\">'ignore'</span><span class=\"p\">),</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">flush</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">read_and_print</span><span class=\"p\">(</span><span class=\"n\">aioserial</span><span class=\"o\">.</span><span class=\"n\">AioSerial</span><span class=\"p\">(</span><span class=\"n\">port</span><span class=\"o\">=</span><span class=\"s1\">'COM1'</span><span class=\"p\">)))</span>\n</pre>\n<h2>API</h2>\n<h3>AioSerial</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">aioserial</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">serial</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">aioserial</span><span class=\"o\">.</span><span class=\"n\">AioSerial</span><span class=\"p\">(),</span> <span class=\"n\">serial</span><span class=\"o\">.</span><span class=\"n\">Serial</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">issubclass</span><span class=\"p\">(</span><span class=\"n\">aioserial</span><span class=\"o\">.</span><span class=\"n\">AioSerial</span><span class=\"p\">,</span> <span class=\"n\">serial</span><span class=\"o\">.</span><span class=\"n\">Serial</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">aioserial</span><span class=\"o\">.</span><span class=\"n\">Serial</span> <span class=\"ow\">is</span> <span class=\"n\">serial</span><span class=\"o\">.</span><span class=\"n\">Serial</span>\n<span class=\"kc\">True</span>\n</pre>\n<h4>Constructor</h4>\n<pre><span class=\"n\">aioserial_instance</span><span class=\"p\">:</span> <span class=\"n\">aioserial</span><span class=\"o\">.</span><span class=\"n\">AioSerial</span> <span class=\"o\">=</span> <span class=\"n\">aioserial</span><span class=\"o\">.</span><span class=\"n\">AioSerial</span><span class=\"p\">(</span>\n    <span class=\"c1\"># ... same with what can be passed to serial.Serial ...,</span>\n    <span class=\"n\">loop</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">AbstractEventLoop</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<h4>Methods</h4>\n<h5>read_async</h5>\n<pre><span class=\"n\">bytes_read</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">=</span> \\\n    <span class=\"k\">await</span> <span class=\"n\">aioserial_instance</span><span class=\"o\">.</span><span class=\"n\">read_async</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<h5>read_until_async</h5>\n<pre><span class=\"n\">at_most_certain_size_of_bytes_read</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">=</span> \\\n    <span class=\"k\">await</span> <span class=\"n\">aioserial_instance</span><span class=\"o\">.</span><span class=\"n\">read_until_async</span><span class=\"p\">(</span>\n        <span class=\"n\">expected</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">=</span> <span class=\"n\">aioserial</span><span class=\"o\">.</span><span class=\"n\">LF</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<h5>readinto_async</h5>\n<pre><span class=\"n\">number_of_byte_read</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> \\\n    <span class=\"k\">await</span> <span class=\"n\">aioserial_instance</span><span class=\"o\">.</span><span class=\"n\">readinto_async</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">,</span> <span class=\"nb\">bytearray</span><span class=\"p\">])</span>\n</pre>\n<h5>readline_async</h5>\n<pre><span class=\"n\">a_line_of_at_most_certain_size_of_bytes_read</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">=</span> \\\n    <span class=\"k\">await</span> <span class=\"n\">aioserial_instance</span><span class=\"o\">.</span><span class=\"n\">readline_async</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<h5>readlines_async</h5>\n<pre><span class=\"n\">lines_of_at_most_certain_size_of_bytes_read</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">=</span> \\\n    <span class=\"k\">await</span> <span class=\"n\">aioserial_instance</span><span class=\"o\">.</span><span class=\"n\">readlines_async</span><span class=\"p\">(</span><span class=\"n\">hint</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<h5>write_async</h5>\n<pre><span class=\"n\">number_of_byte_like_data_written</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> \\\n    <span class=\"k\">await</span> <span class=\"n\">aioserial_instance</span><span class=\"o\">.</span><span class=\"n\">write_async</span><span class=\"p\">(</span><span class=\"n\">bytes_like_data</span><span class=\"p\">)</span>\n</pre>\n<h5>writelines_async</h5>\n<pre><span class=\"n\">number_of_byte_like_data_in_the_given_list_written</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> \\\n    <span class=\"k\">await</span> <span class=\"n\">aioserial_instance</span><span class=\"o\">.</span><span class=\"n\">writelines_async</span><span class=\"p\">(</span><span class=\"n\">list_of_bytes_like_data</span><span class=\"p\">)</span>\n</pre>\n<h3>Other APIs</h3>\n<p>All the other APIs in package <a href=\"https://github.com/pyserial/pyserial\" rel=\"nofollow\">pySerial</a> are supported in <a href=\"https://github.com/changyuheng/aioserial\" rel=\"nofollow\">aioserial</a> as <a href=\"https://pyserial.readthedocs.io/\" rel=\"nofollow\">original</a>.</p>\n<h2>Why aioserial?</h2>\n<ul>\n<li>Want to use an asyncio-based but not a (self-built) thread-based serial library.</li>\n<li><a href=\"https://github.com/pyserial/pyserial-asyncio\" rel=\"nofollow\">pySerial-asyncio</a> does <a href=\"https://github.com/pyserial/pyserial-asyncio/issues/3\" rel=\"nofollow\">not support Windows</a>.</li>\n<li>APIs in all the other packages (<a href=\"https://github.com/pyserial/pyserial-asyncio\" rel=\"nofollow\">pySerial-asyncio</a>, <a href=\"https://github.com/xvzf/asyncserial-py\" rel=\"nofollow\">asyncserial</a>) that target the same goal are not designed in high level.</li>\n</ul>\n\n          </div>"}, "last_serial": 6443508, "releases": {"1.0.10": [{"comment_text": "", "digests": {"md5": "50a337c92e71ea6f110c3a5fac1476e3", "sha256": "9916196af3e3ee6173531f2397ef0b0ca334c5c42f707ec5898790b3fa9cfca7"}, "downloads": -1, "filename": "aioserial-1.0.10.tar.gz", "has_sig": false, "md5_digest": "50a337c92e71ea6f110c3a5fac1476e3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4508, "upload_time": "2018-10-08T17:12:28", "upload_time_iso_8601": "2018-10-08T17:12:28.979721Z", "url": "https://files.pythonhosted.org/packages/ba/35/0990e159396a67b1da5f851ca7f542514a894429c30b2a848e4dff86c412/aioserial-1.0.10.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "5431847f5c19c066ca08d48f81ef6dd4", "sha256": "6c4421ab64b1010d3d51ef7cb096db150133ba0c52f8ae0b3a37746772dad08b"}, "downloads": -1, "filename": "aioserial-1.1.0.tar.gz", "has_sig": false, "md5_digest": "5431847f5c19c066ca08d48f81ef6dd4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4520, "upload_time": "2018-11-13T03:36:24", "upload_time_iso_8601": "2018-11-13T03:36:24.964502Z", "url": "https://files.pythonhosted.org/packages/df/6f/7e91993bab5763c7ad07bdd0fc76e64a7a152dfa0fc26edb5397f20168ae/aioserial-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "2d42f95b5a565c96c1cb84fddcd0053b", "sha256": "7ee09ae3e274b85d5597c390da30913fbd346eeeeb289d13ebfff1e458e28e38"}, "downloads": -1, "filename": "aioserial-1.1.1.tar.gz", "has_sig": false, "md5_digest": "2d42f95b5a565c96c1cb84fddcd0053b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4503, "upload_time": "2018-11-13T06:56:57", "upload_time_iso_8601": "2018-11-13T06:56:57.776294Z", "url": "https://files.pythonhosted.org/packages/42/21/c4d100fb803645fd670e9ddf6a13162adc92a66f38d562e15c2f3cd053fb/aioserial-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "f2bb8ea606828e3f582d70c28dde4dd9", "sha256": "e4099b264a3b3b29a82e8e4532964f29660d78ede480eb68275d4d579e7664d9"}, "downloads": -1, "filename": "aioserial-1.1.2.tar.gz", "has_sig": false, "md5_digest": "f2bb8ea606828e3f582d70c28dde4dd9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4509, "upload_time": "2019-02-19T15:04:39", "upload_time_iso_8601": "2019-02-19T15:04:39.183943Z", "url": "https://files.pythonhosted.org/packages/43/bb/8cd2217e0d105638ed83b796b2f5d279341f7a789d1af366a3c335f6f81a/aioserial-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "ff97c75d2aed76d314e7f21726acad15", "sha256": "291357a062d537d2122cdc95fe2be2b74eaf310b385b067b70da3cf8b316ae7e"}, "downloads": -1, "filename": "aioserial-1.1.3.tar.gz", "has_sig": false, "md5_digest": "ff97c75d2aed76d314e7f21726acad15", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4721, "upload_time": "2019-04-25T06:47:17", "upload_time_iso_8601": "2019-04-25T06:47:17.382779Z", "url": "https://files.pythonhosted.org/packages/97/55/40dcb75c1edc827e0ce9c7238862c8b9822ee6679247e7a45bfabe34b6fa/aioserial-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "ea25e5c8a3e714dd02853c89e85d5dc1", "sha256": "c705368cf5660721b05e75150488f7647f9888925f48a6af14a738a0e3958152"}, "downloads": -1, "filename": "aioserial-1.1.4.tar.gz", "has_sig": false, "md5_digest": "ea25e5c8a3e714dd02853c89e85d5dc1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4773, "upload_time": "2019-11-04T10:34:33", "upload_time_iso_8601": "2019-11-04T10:34:33.516003Z", "url": "https://files.pythonhosted.org/packages/94/6e/f5d8cd97d4dc19fa0e563f7ca443c8ab223d21475d8ce2b9ef43b123d342/aioserial-1.1.4.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "c6712f262a4d521dde6c311c97b1b595", "sha256": "ea5d7a69181f6fe6f8e04bb3bda7c5d42643152d6e64141b3579ec25ceb4b850"}, "downloads": -1, "filename": "aioserial-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c6712f262a4d521dde6c311c97b1b595", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 9113, "upload_time": "2020-01-02T08:59:49", "upload_time_iso_8601": "2020-01-02T08:59:49.506257Z", "url": "https://files.pythonhosted.org/packages/25/ea/faa63b8f0516e70b00c03e0fbe5a7af1858b3698908de9d251d727471e83/aioserial-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce239d244ea7592cf2d7e3bb7705bce1", "sha256": "549bfaa810ea698e1748fd6dd6651197ec095758636a76b1c5d1f340cd04c8d3"}, "downloads": -1, "filename": "aioserial-1.2.1.tar.gz", "has_sig": false, "md5_digest": "ce239d244ea7592cf2d7e3bb7705bce1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 8788, "upload_time": "2020-01-02T08:59:51", "upload_time_iso_8601": "2020-01-02T08:59:51.367460Z", "url": "https://files.pythonhosted.org/packages/d3/5b/0ad283e7c61401c86c4c02568eea9a747c7518d1153057e5339cd200bd1d/aioserial-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "17f0d12b9bb5fc691e1e11c4eb630e76", "sha256": "f6eef9e3c4a793c25ebd6af8b2bbf1b5b7e08449618fcba3c4c6ada83fd89e1e"}, "downloads": -1, "filename": "aioserial-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "17f0d12b9bb5fc691e1e11c4eb630e76", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 9116, "upload_time": "2020-01-02T11:23:02", "upload_time_iso_8601": "2020-01-02T11:23:02.367569Z", "url": "https://files.pythonhosted.org/packages/45/61/4c3ba236f42b1d57adc1bf90ea8c97f203648c84db7a890aec7b4e6ca634/aioserial-1.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e55f1f7976411d1fc29d0f63fea0e9fb", "sha256": "214e4dd8977bfaa08e52325d52a131bfc8875feb5329c14f8604883f11d08f7f"}, "downloads": -1, "filename": "aioserial-1.2.2.tar.gz", "has_sig": false, "md5_digest": "e55f1f7976411d1fc29d0f63fea0e9fb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 8763, "upload_time": "2020-01-02T11:23:04", "upload_time_iso_8601": "2020-01-02T11:23:04.182780Z", "url": "https://files.pythonhosted.org/packages/5f/0c/4681726772b05118dfa939f46c2bc527df5701c6b98932964f36ceb687af/aioserial-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "3c64e091141d35fa979731594120c4b7", "sha256": "1cd545fd9fa9015b9c4971e4e640f5ea92c70eac06cc23328c8aa4677558ac3d"}, "downloads": -1, "filename": "aioserial-1.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3c64e091141d35fa979731594120c4b7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 9117, "upload_time": "2020-01-13T09:40:54", "upload_time_iso_8601": "2020-01-13T09:40:54.296946Z", "url": "https://files.pythonhosted.org/packages/74/e6/6a8685407cd7b2f97b8d995fe56d50dd0ef8be1b492e16aa6a8cea848e3e/aioserial-1.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65ef17d01d26b5a6f8fb351e3c2606cc", "sha256": "2f396da8549721c8e76204a13286db83a4e5f195a046867b669ebad0929c1847"}, "downloads": -1, "filename": "aioserial-1.2.3.tar.gz", "has_sig": false, "md5_digest": "65ef17d01d26b5a6f8fb351e3c2606cc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 8775, "upload_time": "2020-01-13T09:40:56", "upload_time_iso_8601": "2020-01-13T09:40:56.207796Z", "url": "https://files.pythonhosted.org/packages/e4/dc/9bd5a9d3baf7dd7334dc66625deae5e7f9a53826e7d9042152629e86847c/aioserial-1.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3c64e091141d35fa979731594120c4b7", "sha256": "1cd545fd9fa9015b9c4971e4e640f5ea92c70eac06cc23328c8aa4677558ac3d"}, "downloads": -1, "filename": "aioserial-1.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3c64e091141d35fa979731594120c4b7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 9117, "upload_time": "2020-01-13T09:40:54", "upload_time_iso_8601": "2020-01-13T09:40:54.296946Z", "url": "https://files.pythonhosted.org/packages/74/e6/6a8685407cd7b2f97b8d995fe56d50dd0ef8be1b492e16aa6a8cea848e3e/aioserial-1.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65ef17d01d26b5a6f8fb351e3c2606cc", "sha256": "2f396da8549721c8e76204a13286db83a4e5f195a046867b669ebad0929c1847"}, "downloads": -1, "filename": "aioserial-1.2.3.tar.gz", "has_sig": false, "md5_digest": "65ef17d01d26b5a6f8fb351e3c2606cc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 8775, "upload_time": "2020-01-13T09:40:56", "upload_time_iso_8601": "2020-01-13T09:40:56.207796Z", "url": "https://files.pythonhosted.org/packages/e4/dc/9bd5a9d3baf7dd7334dc66625deae5e7f9a53826e7d9042152629e86847c/aioserial-1.2.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:47 2020"}