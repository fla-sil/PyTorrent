{"info": {"author": "Storm Developers", "author_email": "storm@lists.canonical.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Database", "Topic :: Database :: Front-Ends", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Storm is an Object Relational Mapper for Python developed at\nCanonical.  API docs, a manual, and a tutorial are available from:\n\nhttps://storm.canonical.com/\n\n\nIntroduction\n============\n\nThe project was in development for more than a year for use in\nCanonical projects such as Launchpad and Landscape before being\nreleased as free software on July 9th, 2007.\n\nDesign:\n\n * Clean and lightweight API offers a short learning curve and\n   long-term maintainability.\n * Storm is developed in a test-driven manner. An untested line of\n   code is considered a bug.\n * Storm needs no special class constructors, nor imperative base\n   classes.\n * Storm is well designed (different classes have very clear\n   boundaries, with small and clean public APIs).\n * Designed from day one to work both with thin relational\n   databases, such as SQLite, and big iron systems like PostgreSQL.\n * Storm is easy to debug, since its code is written with a KISS\n   principle, and thus is easy to understand.\n * Designed from day one to work both at the low end, with trivial\n   small databases, and the high end, with applications accessing\n   billion row tables and committing to multiple database backends.\n * It's very easy to write and support backends for Storm (current\n   backends have around 100 lines of code).\n\nFeatures:\n\n * Storm is fast.\n * Storm lets you efficiently access and update large datasets by\n   allowing you to formulate complex queries spanning multiple\n   tables using Python.\n * Storm allows you to fallback to SQL if needed (or if you just\n   prefer), allowing you to mix \"old school\" code and ORM code\n * Storm handles composed primary keys with ease (no need for\n   surrogate keys).\n * Storm doesn't do schema management, and as a result you're free\n   to manage the schema as wanted, and creating classes that work\n   with Storm is clean and simple.\n * Storm works very well connecting to several databases and using\n   the same Python types (or different ones) with all of them.\n * Storm can handle obj.attr = <A SQL expression> assignments, when\n   that's really needed (the expression is executed at INSERT/UPDATE\n   time).\n * Storm handles relationships between objects even before they were\n   added to a database.\n * Storm works well with existing database schemas.\n * Storm will flush changes to the database automatically when\n   needed, so that queries made affect recently modified objects.\n\n\nLicense\n=======\n\nCopyright (C) 2006-2009 Canonical, Ltd.  All contributions must have\ncopyright assigned to Canonical.\n\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with this library; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n02110-1301 USA\n\nOn Ubuntu systems, the complete text of the GNU Lesser General\nPublic Version 2.1 License is in /usr/share/common-licenses/LGPL-2.1\n\n\nDeveloping Storm\n================\n\nSHORT VERSION:  If you are running ubuntu, or probably debian, the\nfollowing should work.  If not, and for reference, the long version\nis below.\n\n $ dev/ubuntu-deps\n $ make develop\n $ make check\n\nLONG VERSION:\n\nThe following instructions describe the procedure for setting up a\ndevelopment environment and running the test suite.\n\nInstalling dependencies\n-----------------------\n\nThe following instructions assume that you're using Ubuntu.  The same procedure\nwill probably work without changes on a Debian system and with minimal changes\non a non-Debian-based linux distribution.  In order to run the test suite, and\nexercise all supported backends, you will need to install PostgreSQL, along\nwith the related Python database drivers:\n\n $ sudo apt-get install \\\n       postgresql pgbouncer \\\n       build-essential\n\nThese will take a few minutes to download (its a bit under 200MB all\ntogether).\n\nThe Python dependencies for running tests can mostly be installed with\napt-get:\n\n $ apt-get install \\\n       python-fixtures python-psycopg2 \\\n       python-testresources python-transaction python-twisted \\\n       python-zope.component python-zope.security\n\nTwo modules - pgbouncer and timeline - are not yet packaged in\nUbuntu. These can be installed from PyPI:\n\n  http://pypi.python.org/pypi/pgbouncer\n  http://pypi.python.org/pypi/timeline\n\nAlternatively, dependencies can be downloaded as eggs into the current\ndirectory with:\n\n $ make develop\n\nThis ensures that all dependencies are available, downloading from\nPyPI as appropriate.\n\nSetting up database users and access security\n---------------------------------------------\n\nPostgreSQL needs to be setup to allow TCP/IP connections from\nlocalhost.  Edit /etc/postgresql/8.3/main/pg_hba.conf and make sure\nthe following line is present:\n\n host all all 127.0.0.1/32 trust\n\nThis will probably (with PostgresSQL 8.4) entail changing 'md5' to\n'trust'.\n\nIn order to run the two-phase commit tests, you will also need to\nchange the max_prepared_transactions value in postgres.conf to\nsomething like\n\n  max_prepared_transactions = 200\n\nNow save and close, then restart the server:\n\n $ sudo /etc/init.d/postgresql-8.4 restart\n\nLets create our PostgreSQL user now.  As noted in the Ubuntu PostgreSQL\ndocumentation, the easiest thing is to create a user with the same name as your\nusername.  Run the following command to create a user for yourself (if prompted\nfor a password, leave it blank):\n\n $ sudo -u postgres createuser --superuser $USER\n\nCreating test databases\n-----------------------\n\nThe test suite needs some local databases in place to exercise PostgreSQL\nfunctionality. Run:\n\n $ createdb storm_test\n\nRunning the tests\n-----------------\n\nFinally, its time to run the tests!  Go into the base directory of\nthe storm branch you want to test, and run:\n\n $ make check\n\nThey'll take a while to run.  All tests should pass: failures mean\nthere's a problem with your environment or a bug in Storm.", "description_content_type": "", "docs_url": null, "download_url": "https://launchpad.net/storm/+download", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://storm.canonical.com", "keywords": "", "license": "LGPL", "maintainer": "", "maintainer_email": "", "name": "storm", "package_url": "https://pypi.org/project/storm/", "platform": "", "project_url": "https://pypi.org/project/storm/", "project_urls": {"Download": "https://launchpad.net/storm/+download", "Homepage": "https://storm.canonical.com"}, "release_url": "https://pypi.org/project/storm/0.23/", "requires_dist": null, "requires_python": "", "summary": "Storm is an object-relational mapper (ORM) for Python developed at Canonical.", "version": "0.23", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Storm is an Object Relational Mapper for Python developed at\nCanonical.  API docs, a manual, and a tutorial are available from:</p>\n<p><a href=\"https://storm.canonical.com/\" rel=\"nofollow\">https://storm.canonical.com/</a></p>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>The project was in development for more than a year for use in\nCanonical projects such as Launchpad and Landscape before being\nreleased as free software on July 9th, 2007.</p>\n<p>Design:</p>\n<blockquote>\n<ul>\n<li>Clean and lightweight API offers a short learning curve and\nlong-term maintainability.</li>\n<li>Storm is developed in a test-driven manner. An untested line of\ncode is considered a bug.</li>\n<li>Storm needs no special class constructors, nor imperative base\nclasses.</li>\n<li>Storm is well designed (different classes have very clear\nboundaries, with small and clean public APIs).</li>\n<li>Designed from day one to work both with thin relational\ndatabases, such as SQLite, and big iron systems like PostgreSQL.</li>\n<li>Storm is easy to debug, since its code is written with a KISS\nprinciple, and thus is easy to understand.</li>\n<li>Designed from day one to work both at the low end, with trivial\nsmall databases, and the high end, with applications accessing\nbillion row tables and committing to multiple database backends.</li>\n<li>It\u2019s very easy to write and support backends for Storm (current\nbackends have around 100 lines of code).</li>\n</ul>\n</blockquote>\n<p>Features:</p>\n<blockquote>\n<ul>\n<li>Storm is fast.</li>\n<li>Storm lets you efficiently access and update large datasets by\nallowing you to formulate complex queries spanning multiple\ntables using Python.</li>\n<li>Storm allows you to fallback to SQL if needed (or if you just\nprefer), allowing you to mix \u201cold school\u201d code and ORM code</li>\n<li>Storm handles composed primary keys with ease (no need for\nsurrogate keys).</li>\n<li>Storm doesn\u2019t do schema management, and as a result you\u2019re free\nto manage the schema as wanted, and creating classes that work\nwith Storm is clean and simple.</li>\n<li>Storm works very well connecting to several databases and using\nthe same Python types (or different ones) with all of them.</li>\n<li>Storm can handle obj.attr = &lt;A SQL expression&gt; assignments, when\nthat\u2019s really needed (the expression is executed at INSERT/UPDATE\ntime).</li>\n<li>Storm handles relationships between objects even before they were\nadded to a database.</li>\n<li>Storm works well with existing database schemas.</li>\n<li>Storm will flush changes to the database automatically when\nneeded, so that queries made affect recently modified objects.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright (C) 2006-2009 Canonical, Ltd.  All contributions must have\ncopyright assigned to Canonical.</p>\n<p>This library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.</p>\n<p>This library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.</p>\n<p>You should have received a copy of the GNU Lesser General Public\nLicense along with this library; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n02110-1301 USA</p>\n<p>On Ubuntu systems, the complete text of the GNU Lesser General\nPublic Version 2.1 License is in /usr/share/common-licenses/LGPL-2.1</p>\n</div>\n<div id=\"developing-storm\">\n<h2>Developing Storm</h2>\n<p>SHORT VERSION:  If you are running ubuntu, or probably debian, the\nfollowing should work.  If not, and for reference, the long version\nis below.</p>\n<blockquote>\n$ dev/ubuntu-deps\n$ make develop\n$ make check</blockquote>\n<p>LONG VERSION:</p>\n<p>The following instructions describe the procedure for setting up a\ndevelopment environment and running the test suite.</p>\n<div id=\"installing-dependencies\">\n<h3>Installing dependencies</h3>\n<p>The following instructions assume that you\u2019re using Ubuntu.  The same procedure\nwill probably work without changes on a Debian system and with minimal changes\non a non-Debian-based linux distribution.  In order to run the test suite, and\nexercise all supported backends, you will need to install PostgreSQL, along\nwith the related Python database drivers:</p>\n<blockquote>\n<dl>\n<dt>$ sudo apt-get install </dt>\n<dd>postgresql pgbouncer build-essential</dd>\n</dl>\n</blockquote>\n<p>These will take a few minutes to download (its a bit under 200MB all\ntogether).</p>\n<p>The Python dependencies for running tests can mostly be installed with\napt-get:</p>\n<blockquote>\n<dl>\n<dt>$ apt-get install </dt>\n<dd>python-fixtures python-psycopg2 python-testresources python-transaction python-twisted python-zope.component python-zope.security</dd>\n</dl>\n</blockquote>\n<p>Two modules - pgbouncer and timeline - are not yet packaged in\nUbuntu. These can be installed from PyPI:</p>\n<blockquote>\n<a href=\"http://pypi.python.org/pypi/pgbouncer\" rel=\"nofollow\">http://pypi.python.org/pypi/pgbouncer</a>\n<a href=\"http://pypi.python.org/pypi/timeline\" rel=\"nofollow\">http://pypi.python.org/pypi/timeline</a></blockquote>\n<p>Alternatively, dependencies can be downloaded as eggs into the current\ndirectory with:</p>\n<blockquote>\n$ make develop</blockquote>\n<p>This ensures that all dependencies are available, downloading from\nPyPI as appropriate.</p>\n</div>\n<div id=\"setting-up-database-users-and-access-security\">\n<h3>Setting up database users and access security</h3>\n<p>PostgreSQL needs to be setup to allow TCP/IP connections from\nlocalhost.  Edit /etc/postgresql/8.3/main/pg_hba.conf and make sure\nthe following line is present:</p>\n<blockquote>\nhost all all 127.0.0.1/32 trust</blockquote>\n<p>This will probably (with PostgresSQL 8.4) entail changing \u2018md5\u2019 to\n\u2018trust\u2019.</p>\n<p>In order to run the two-phase commit tests, you will also need to\nchange the max_prepared_transactions value in postgres.conf to\nsomething like</p>\n<blockquote>\nmax_prepared_transactions = 200</blockquote>\n<p>Now save and close, then restart the server:</p>\n<blockquote>\n$ sudo /etc/init.d/postgresql-8.4 restart</blockquote>\n<p>Lets create our PostgreSQL user now.  As noted in the Ubuntu PostgreSQL\ndocumentation, the easiest thing is to create a user with the same name as your\nusername.  Run the following command to create a user for yourself (if prompted\nfor a password, leave it blank):</p>\n<blockquote>\n$ sudo -u postgres createuser \u2013superuser $USER</blockquote>\n</div>\n<div id=\"creating-test-databases\">\n<h3>Creating test databases</h3>\n<p>The test suite needs some local databases in place to exercise PostgreSQL\nfunctionality. Run:</p>\n<blockquote>\n$ createdb storm_test</blockquote>\n</div>\n<div id=\"running-the-tests\">\n<h3>Running the tests</h3>\n<p>Finally, its time to run the tests!  Go into the base directory of\nthe storm branch you want to test, and run:</p>\n<blockquote>\n$ make check</blockquote>\n<p>They\u2019ll take a while to run.  All tests should pass: failures mean\nthere\u2019s a problem with your environment or a bug in Storm.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6837564, "releases": {"0.10": [], "0.11": [], "0.12": [], "0.13": [], "0.14": [], "0.15": [{"comment_text": "", "digests": {"md5": "65ef57156e129ab09b2237dad76cdffe", "sha256": "512396787c4361927bdab223e959486150e20a258c1f713b20373dd0ca6cf713"}, "downloads": -1, "filename": "storm-0.15.tar.bz2", "has_sig": true, "md5_digest": "65ef57156e129ab09b2237dad76cdffe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 173020, "upload_time": "2009-08-13T22:41:14", "upload_time_iso_8601": "2009-08-13T22:41:14.790691Z", "url": "https://files.pythonhosted.org/packages/39/e4/098a9ec4b0248bcef15996ad48f8bab9ef427f1b6af96f33001314563abd/storm-0.15.tar.bz2", "yanked": false}], "0.16.0": [{"comment_text": "", "digests": {"md5": "6627d2a01b7feaedb20b35e557ccdee5", "sha256": "62540d279833bcf52da2258fe4bfa46d90b15f47076c35739da25fb5206264c8"}, "downloads": -1, "filename": "storm-0.16.0.tar.bz2", "has_sig": true, "md5_digest": "6627d2a01b7feaedb20b35e557ccdee5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 177684, "upload_time": "2009-11-30T08:37:12", "upload_time_iso_8601": "2009-11-30T08:37:12.652011Z", "url": "https://files.pythonhosted.org/packages/16/90/e09808e06b8ca04a006d5b6cb634e564b4827a4c75c46101cb8a9fe2ef27/storm-0.16.0.tar.bz2", "yanked": false}], "0.18": [], "0.19": [{"comment_text": "", "digests": {"md5": "5735fafe31ac89f9fb203a92bfc1d4f8", "sha256": "4cfba23256d143e23f7646d30ca83d9e56f228036634824b12854a7dfd8ce429"}, "downloads": -1, "filename": "storm-0.19.tar.bz2", "has_sig": true, "md5_digest": "5735fafe31ac89f9fb203a92bfc1d4f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 198190, "upload_time": "2011-10-05T15:11:26", "upload_time_iso_8601": "2011-10-05T15:11:26.361809Z", "url": "https://files.pythonhosted.org/packages/99/eb/1e5e59292b79d66236b4078b2d90e2801ec9b70677fbe3ae53fffacfbe58/storm-0.19.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "61d1ee4cd2a08639ab917e43fa2c9265", "sha256": "200e77a424c8306a2cec7e24cbd9fab079314d0d020f08eefd8374839844e4aa"}, "downloads": -1, "filename": "storm-0.19.tar.gz", "has_sig": true, "md5_digest": "61d1ee4cd2a08639ab917e43fa2c9265", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 249159, "upload_time": "2011-10-05T15:11:27", "upload_time_iso_8601": "2011-10-05T15:11:27.752021Z", "url": "https://files.pythonhosted.org/packages/3d/78/521271eaf986040d23117ac4356103fcf2963c4f586b6befbb299e1dd182/storm-0.19.tar.gz", "yanked": false}], "0.20": [{"comment_text": "", "digests": {"md5": "4a9048fed9d1ec472ce73fbe54387054", "sha256": "fbc2edaf784405252de8af9a4868d1d2bdf7acfc4cf4443906c98165da236130"}, "downloads": -1, "filename": "storm-0.20.tar.bz2", "has_sig": true, "md5_digest": "4a9048fed9d1ec472ce73fbe54387054", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 213127, "upload_time": "2013-06-28T14:02:14", "upload_time_iso_8601": "2013-06-28T14:02:14.168800Z", "url": "https://files.pythonhosted.org/packages/a7/4c/e5dbc818c432cd80d2e1aa1576f911eda49a3c206c6697db4070f402cda9/storm-0.20.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "43c160b65f927601e0e5cf8431e5aca7", "sha256": "35f5883e93a262002ca59dbb39645c67434a182d758543c4a2467ff690ac23a5"}, "downloads": -1, "filename": "storm-0.20.tar.gz", "has_sig": true, "md5_digest": "43c160b65f927601e0e5cf8431e5aca7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 266808, "upload_time": "2013-06-28T14:02:27", "upload_time_iso_8601": "2013-06-28T14:02:27.807188Z", "url": "https://files.pythonhosted.org/packages/ea/95/2e0dad606e2470c027f865f9259eb138bb2dda0397fce4f7729c951de544/storm-0.20.tar.gz", "yanked": false}], "0.21": [{"comment_text": "", "digests": {"md5": "26f8179daed04d062ebba1fbb0c7e797", "sha256": "512bdfd5854d5268f7dd87a714cbf4e236b2053768649c8cf25a66ee91863095"}, "downloads": -1, "filename": "storm-0.21.tar.bz2", "has_sig": false, "md5_digest": "26f8179daed04d062ebba1fbb0c7e797", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 210388, "upload_time": "2019-09-20T07:45:47", "upload_time_iso_8601": "2019-09-20T07:45:47.921216Z", "url": "https://files.pythonhosted.org/packages/20/0c/8803b4a99b5db612b88eff7976789213cb33df680af0c509bb216310c1c4/storm-0.21.tar.bz2", "yanked": false}], "0.22": [{"comment_text": "", "digests": {"md5": "3dd0070e72b75829fbc8d89f11cf85fd", "sha256": "73aceb4c3ab9fb4967b109af7a3f5fe3cde5be379776475a96113b0ee6187de6"}, "downloads": -1, "filename": "storm-0.22.tar.bz2", "has_sig": true, "md5_digest": "3dd0070e72b75829fbc8d89f11cf85fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 213386, "upload_time": "2019-11-21T11:14:14", "upload_time_iso_8601": "2019-11-21T11:14:14.338629Z", "url": "https://files.pythonhosted.org/packages/ba/4f/55ea93c45ed7de8f34b89af75a6f1376d60a2614c60193f95c81d1bec019/storm-0.22.tar.bz2", "yanked": false}], "0.23": [{"comment_text": "", "digests": {"md5": "90a06a795f98557b4a8b97122c4bc871", "sha256": "01c59f1c898fb9891333abd65519ba2dd5f68623ac8e67b54932e99ce52593d3"}, "downloads": -1, "filename": "storm-0.23.tar.bz2", "has_sig": true, "md5_digest": "90a06a795f98557b4a8b97122c4bc871", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 215042, "upload_time": "2020-03-18T17:30:58", "upload_time_iso_8601": "2020-03-18T17:30:58.038783Z", "url": "https://files.pythonhosted.org/packages/ec/88/5dfdcb5948606487da14b8423daf71a861f598a3f823e870e8cf2bf2e5e9/storm-0.23.tar.bz2", "yanked": false}], "0.9": []}, "urls": [{"comment_text": "", "digests": {"md5": "90a06a795f98557b4a8b97122c4bc871", "sha256": "01c59f1c898fb9891333abd65519ba2dd5f68623ac8e67b54932e99ce52593d3"}, "downloads": -1, "filename": "storm-0.23.tar.bz2", "has_sig": true, "md5_digest": "90a06a795f98557b4a8b97122c4bc871", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 215042, "upload_time": "2020-03-18T17:30:58", "upload_time_iso_8601": "2020-03-18T17:30:58.038783Z", "url": "https://files.pythonhosted.org/packages/ec/88/5dfdcb5948606487da14b8423daf71a861f598a3f823e870e8cf2bf2e5e9/storm-0.23.tar.bz2", "yanked": false}], "timestamp": "Fri May  8 03:01:36 2020"}