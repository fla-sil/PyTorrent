{"info": {"author": "Jason Myers", "author_email": "jason.myers@juiceanalytics.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "flapjack_stack\n==============\n\nThis provides a simple way to handle settings in a multi-layer fashion, which\nallows you to composing settings by add in different configuration components.\nIt will read from files, objects, and environment variables.\n\nExample Usage::\n\n    from flapjack_stack import FlapjackStack\n    settings = FlapjackStack()\n    settings.add_layer_from_file('/path/to/our_file')\n    settings.add_layer(thing)\n    settings.add_layer_from_env()\n\nWhich will create a new FlapjackStack instance, then read settings in from\na file, then the thing object and finally from the environment. This would\nresult in a group of settings like:\n\n===== ======\nLayer Source\n===== ======\n3     loaded from env\n2     loaded from thing object\n1     loaded from '/path/to/our_file'\nBase  Empty created during init\n===== ======\n\nAnd settings would be returned from the top to the bottom.  For example if we\nhad a setting called COOKIES in both the thing object and our_file, the one from\nthe thing object would be returned.\n\n**NOTE**\n``add_layer_from_env()`` only searchs for environment variables already in the\nsettings object regardless of their layer that are prefixed with an ``FJS_`` at\nthe moment it is called.  So if you add the variable later, it will not be seen.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/juiceinc/flapjack_stack", "keywords": "settings flapjack_stack", "license": "License :: OSI Approved :: MIT License", "maintainer": "", "maintainer_email": "", "name": "flapjack-stack", "package_url": "https://pypi.org/project/flapjack-stack/", "platform": "", "project_url": "https://pypi.org/project/flapjack-stack/", "project_urls": {"Homepage": "https://github.com/juiceinc/flapjack_stack"}, "release_url": "https://pypi.org/project/flapjack-stack/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "A multi-layered approach to settings", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This provides a simple way to handle settings in a multi-layer fashion, which\nallows you to composing settings by add in different configuration components.\nIt will read from files, objects, and environment variables.</p>\n<p>Example Usage:</p>\n<pre>from flapjack_stack import FlapjackStack\nsettings = FlapjackStack()\nsettings.add_layer_from_file('/path/to/our_file')\nsettings.add_layer(thing)\nsettings.add_layer_from_env()\n</pre>\n<p>Which will create a new FlapjackStack instance, then read settings in from\na file, then the thing object and finally from the environment. This would\nresult in a group of settings like:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Layer</th>\n<th>Source</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>3</td>\n<td>loaded from env</td>\n</tr>\n<tr><td>2</td>\n<td>loaded from thing object</td>\n</tr>\n<tr><td>1</td>\n<td>loaded from \u2018/path/to/our_file\u2019</td>\n</tr>\n<tr><td>Base</td>\n<td>Empty created during init</td>\n</tr>\n</tbody>\n</table>\n<p>And settings would be returned from the top to the bottom.  For example if we\nhad a setting called COOKIES in both the thing object and our_file, the one from\nthe thing object would be returned.</p>\n<p><strong>NOTE</strong>\n<tt>add_layer_from_env()</tt> only searchs for environment variables already in the\nsettings object regardless of their layer that are prefixed with an <tt>FJS_</tt> at\nthe moment it is called.  So if you add the variable later, it will not be seen.</p>\n\n          </div>"}, "last_serial": 3297045, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "c18efc35e23c2961893078af1d4114a3", "sha256": "e4244164da5b525accbe29184923f2b1f6e1179cdcc48e9dc952a192e8efb191"}, "downloads": -1, "filename": "flapjack_stack-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c18efc35e23c2961893078af1d4114a3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5400, "upload_time": "2017-10-16T23:04:01", "upload_time_iso_8601": "2017-10-16T23:04:01.308192Z", "url": "https://files.pythonhosted.org/packages/50/d4/bb9adf03289abeccfbdd81c9a94cc53cf31ba835e1eca5c4276fc1981c27/flapjack_stack-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f178d3c49b61d7cfac436fdcd8810a8c", "sha256": "a460166b3b8b71e584ea7efd046bc2c445de70f8290ea75b068e31741437213c"}, "downloads": -1, "filename": "flapjack_stack-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f178d3c49b61d7cfac436fdcd8810a8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3794, "upload_time": "2017-11-01T12:58:16", "upload_time_iso_8601": "2017-11-01T12:58:16.048816Z", "url": "https://files.pythonhosted.org/packages/15/2a/527bc85c26082489dae50546414e0e3d541850c3399188c8443469480ea7/flapjack_stack-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c18efc35e23c2961893078af1d4114a3", "sha256": "e4244164da5b525accbe29184923f2b1f6e1179cdcc48e9dc952a192e8efb191"}, "downloads": -1, "filename": "flapjack_stack-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c18efc35e23c2961893078af1d4114a3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5400, "upload_time": "2017-10-16T23:04:01", "upload_time_iso_8601": "2017-10-16T23:04:01.308192Z", "url": "https://files.pythonhosted.org/packages/50/d4/bb9adf03289abeccfbdd81c9a94cc53cf31ba835e1eca5c4276fc1981c27/flapjack_stack-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f178d3c49b61d7cfac436fdcd8810a8c", "sha256": "a460166b3b8b71e584ea7efd046bc2c445de70f8290ea75b068e31741437213c"}, "downloads": -1, "filename": "flapjack_stack-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f178d3c49b61d7cfac436fdcd8810a8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3794, "upload_time": "2017-11-01T12:58:16", "upload_time_iso_8601": "2017-11-01T12:58:16.048816Z", "url": "https://files.pythonhosted.org/packages/15/2a/527bc85c26082489dae50546414e0e3d541850c3399188c8443469480ea7/flapjack_stack-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:03:16 2020"}