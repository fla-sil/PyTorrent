{"info": {"author": "Oliver Bristow", "author_email": "github+pypi@oliverbristow.co.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Database", "Topic :: Software Development"], "description": "|PyPi Package| |Build Status| |Codacy Rating|\n\njsonstore\n=========\n\nThis module provides a class that maps keys and values from a JSON file\nonto its attributes.\n\nThe goal was to provide a convenient way of loading and saving\nconfiguration in a familiar human readable format. This is a bit more\nflexible than the\n`configparser <https://docs.python.org/3/library/configparser.html>`__\nmodule which is included with Python.\n\nThis works is tested and working on Python 2.7+ and Python 3.3+. It will\nnot work on 2.6 or lower, but is expected to work on 3.0-3.2. The tests\ndo not work in 3.2.6 due to\n`mistreating <https://travis-ci.org/Code0x58/python-jsonstore/jobs/198150401>`__\nthe \ud83d\udca9 when parsing the test code. This is also tested on pypy and pypy3.\n\nExamples\n--------\n\nBasics\n~~~~~~\n\n.. code:: python\n\n    # by default JsonStore commits on every change unless in a transaction\n    store = JsonStore('config.json')\n    store.a_string = \"something\"\n    store.a_list = [1, 2, 3]\n    store.a_dictionary = {\n      'dict-list': [{}],\n      'ln(2)': 0.69314718056,\n      'for-you': u\"\ud83d\udc90\",\n    }\n\n    # you can use [\u2026] to set/get/delete string keys\n    store['some_key'] = \"a value\"\n    # the key is split on '.'s and works on dictionaries\n    del store['a_dictionary.dict-list']\n    store['a_dictionary.new_value'] = \"old value\"\n    #  you can also use the syntactic sugar for tuple keys (explicit lists work too)\n    assert store['a_dictionary', 'new_value'] == \"old value\"\n    # you can traverse lists too\n    assert store['a_list', -1] == 3\n    # you can use slices in lists\n    assert len(store['a_list', 1:]) == 2\n\n    # deep copies are made when assigning values\n    my_list = ['fun']\n    store.a_list = my_list\n    assert store.a_list is not my_list\n    assert 'a_list' in store\n\n    # deep copies are also returned to avoid unsanitary changes being made\n    store.a_dictionary['new_value'] = \"new value\"  # won't update the store!\n    assert store.a_dictionary['new_value'] == \"old value\"\n    assert store.a_dictionary is not store.a_dictionary\n\nTransactions\n~~~~~~~~~~~~\n\n``JsonStore`` objects can be used as `context\nmanagers <https://www.python.org/dev/peps/pep-0343/>`__ to provide\ntransactions which are rolled back in the event of an exception. The\ntransaction model is primitive; you can only nest transactions.\n\nWhile a store is put into a transaction, it will not save changes to\nfile until all of the transactions have been closed.\n\n.. code:: python\n\n    from jsonstore import JsonStore\n\n    # even with auto_commit=True, the file won't be saved until the last contexts has been closed\n    with JsonStore('config.json', indent=None, auto_commit=False) as store:\n      self.value = 1\n\n    # the context manager will roll back changes made if an exception is raised\n    store = JsonStore('config.json', indent=None)\n    try:\n      with store:\n        store.value = \"new\"\n        raise Exception\n    except Exception:\n      pass\n    # here we see the value that was saved previously\n    assert store.value == 1\n\n.. |Build Status| image:: https://travis-ci.org/Code0x58/python-jsonstore.svg?branch=master\n   :target: https://travis-ci.org/Code0x58/python-jsonstore\n.. |Codacy Rating| image:: https://api.codacy.com/project/badge/Grade/37ea488773444de59469a3775be83faf\n   :target: https://www.codacy.com/app/evilumbrella-github/python-jsonstore?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Code0x58/python-jsonstore&amp;utm_campaign=Badge_Grade\n.. |PyPi Package| image:: https://badge.fury.io/py/python-jsonstore.svg\n   :target: https://pypi.org/project/python-jsonstore/\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Code0x58/python-jsonstore/", "keywords": "json key value store", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "python-jsonstore", "package_url": "https://pypi.org/project/python-jsonstore/", "platform": "", "project_url": "https://pypi.org/project/python-jsonstore/", "project_urls": {"Homepage": "https://github.com/Code0x58/python-jsonstore/"}, "release_url": "https://pypi.org/project/python-jsonstore/1.2.0/", "requires_dist": null, "requires_python": "", "summary": "", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/python-jsonstore/\" rel=\"nofollow\"><img alt=\"PyPi Package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d8be3b71c977832e250281b9a880caf03dafcb0/68747470733a2f2f62616467652e667572792e696f2f70792f707974686f6e2d6a736f6e73746f72652e737667\"></a> <a href=\"https://travis-ci.org/Code0x58/python-jsonstore\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/600d51be58672f3af6b076a28de83b79f40bbc3b/68747470733a2f2f7472617669732d63692e6f72672f436f6465307835382f707974686f6e2d6a736f6e73746f72652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://www.codacy.com/app/evilumbrella-github/python-jsonstore?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=Code0x58/python-jsonstore&amp;amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Rating\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/31a11db211bbbd29300bb45aa30e532d8a767221/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3337656134383837373334343464653539343639613337373562653833666166\"></a></p>\n<div id=\"jsonstore\">\n<h2>jsonstore</h2>\n<p>This module provides a class that maps keys and values from a JSON file\nonto its attributes.</p>\n<p>The goal was to provide a convenient way of loading and saving\nconfiguration in a familiar human readable format. This is a bit more\nflexible than the\n<a href=\"https://docs.python.org/3/library/configparser.html\" rel=\"nofollow\">configparser</a>\nmodule which is included with Python.</p>\n<p>This works is tested and working on Python 2.7+ and Python 3.3+. It will\nnot work on 2.6 or lower, but is expected to work on 3.0-3.2. The tests\ndo not work in 3.2.6 due to\n<a href=\"https://travis-ci.org/Code0x58/python-jsonstore/jobs/198150401\" rel=\"nofollow\">mistreating</a>\nthe \ud83d\udca9 when parsing the test code. This is also tested on pypy and pypy3.</p>\n<div id=\"examples\">\n<h3>Examples</h3>\n<div id=\"basics\">\n<h4>Basics</h4>\n<pre><span class=\"c1\"># by default JsonStore commits on every change unless in a transaction</span>\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">JsonStore</span><span class=\"p\">(</span><span class=\"s1\">'config.json'</span><span class=\"p\">)</span>\n<span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">a_string</span> <span class=\"o\">=</span> <span class=\"s2\">\"something\"</span>\n<span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">a_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">a_dictionary</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s1\">'dict-list'</span><span class=\"p\">:</span> <span class=\"p\">[{}],</span>\n  <span class=\"s1\">'ln(2)'</span><span class=\"p\">:</span> <span class=\"mf\">0.69314718056</span><span class=\"p\">,</span>\n  <span class=\"s1\">'for-you'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s2\">\"\ud83d\udc90\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># you can use [\u2026] to set/get/delete string keys</span>\n<span class=\"n\">store</span><span class=\"p\">[</span><span class=\"s1\">'some_key'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"a value\"</span>\n<span class=\"c1\"># the key is split on '.'s and works on dictionaries</span>\n<span class=\"k\">del</span> <span class=\"n\">store</span><span class=\"p\">[</span><span class=\"s1\">'a_dictionary.dict-list'</span><span class=\"p\">]</span>\n<span class=\"n\">store</span><span class=\"p\">[</span><span class=\"s1\">'a_dictionary.new_value'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"old value\"</span>\n<span class=\"c1\">#  you can also use the syntactic sugar for tuple keys (explicit lists work too)</span>\n<span class=\"k\">assert</span> <span class=\"n\">store</span><span class=\"p\">[</span><span class=\"s1\">'a_dictionary'</span><span class=\"p\">,</span> <span class=\"s1\">'new_value'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">\"old value\"</span>\n<span class=\"c1\"># you can traverse lists too</span>\n<span class=\"k\">assert</span> <span class=\"n\">store</span><span class=\"p\">[</span><span class=\"s1\">'a_list'</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n<span class=\"c1\"># you can use slices in lists</span>\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">[</span><span class=\"s1\">'a_list'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">:])</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n\n<span class=\"c1\"># deep copies are made when assigning values</span>\n<span class=\"n\">my_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'fun'</span><span class=\"p\">]</span>\n<span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">a_list</span> <span class=\"o\">=</span> <span class=\"n\">my_list</span>\n<span class=\"k\">assert</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">a_list</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"n\">my_list</span>\n<span class=\"k\">assert</span> <span class=\"s1\">'a_list'</span> <span class=\"ow\">in</span> <span class=\"n\">store</span>\n\n<span class=\"c1\"># deep copies are also returned to avoid unsanitary changes being made</span>\n<span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">a_dictionary</span><span class=\"p\">[</span><span class=\"s1\">'new_value'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"new value\"</span>  <span class=\"c1\"># won't update the store!</span>\n<span class=\"k\">assert</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">a_dictionary</span><span class=\"p\">[</span><span class=\"s1\">'new_value'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">\"old value\"</span>\n<span class=\"k\">assert</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">a_dictionary</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">a_dictionary</span>\n</pre>\n</div>\n<div id=\"transactions\">\n<h4>Transactions</h4>\n<p><tt>JsonStore</tt> objects can be used as <a href=\"https://www.python.org/dev/peps/pep-0343/\" rel=\"nofollow\">context\nmanagers</a> to provide\ntransactions which are rolled back in the event of an exception. The\ntransaction model is primitive; you can only nest transactions.</p>\n<p>While a store is put into a transaction, it will not save changes to\nfile until all of the transactions have been closed.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">jsonstore</span> <span class=\"kn\">import</span> <span class=\"n\">JsonStore</span>\n\n<span class=\"c1\"># even with auto_commit=True, the file won't be saved until the last contexts has been closed</span>\n<span class=\"k\">with</span> <span class=\"n\">JsonStore</span><span class=\"p\">(</span><span class=\"s1\">'config.json'</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">auto_commit</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">store</span><span class=\"p\">:</span>\n  <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n\n<span class=\"c1\"># the context manager will roll back changes made if an exception is raised</span>\n<span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">JsonStore</span><span class=\"p\">(</span><span class=\"s1\">'config.json'</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n  <span class=\"k\">with</span> <span class=\"n\">store</span><span class=\"p\">:</span>\n    <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s2\">\"new\"</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">Exception</span>\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n  <span class=\"k\">pass</span>\n<span class=\"c1\"># here we see the value that was saved previously</span>\n<span class=\"k\">assert</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n</pre>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7181840, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "b0e12612cabdd03b59ed8a82ab09e4c3", "sha256": "e387c56edb5273708ea5b6831bf91db014b67b154592f82dc9a3a7b4275df38a"}, "downloads": -1, "filename": "python_jsonstore-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b0e12612cabdd03b59ed8a82ab09e4c3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8188, "upload_time": "2017-04-12T19:03:50", "upload_time_iso_8601": "2017-04-12T19:03:50.208475Z", "url": "https://files.pythonhosted.org/packages/3b/9d/1753acc65d091c9459915b7490b7b81399f97de833ab73b4e6f753d58bf2/python_jsonstore-1.0.0-py2.py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "63dd44b9e23b415859193e59ccc2e7ad", "sha256": "e1b53f6cf182f5f27f41edff6ef8cf5a9f9fd9118790829472999c127ada20df"}, "downloads": -1, "filename": "python_jsonstore-1.1.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "63dd44b9e23b415859193e59ccc2e7ad", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 6190, "upload_time": "2018-09-05T20:51:50", "upload_time_iso_8601": "2018-09-05T20:51:50.079368Z", "url": "https://files.pythonhosted.org/packages/52/78/eeb1f352b69b3ba66f9d69ff0fae3a90cc0a2a62c811e037c37bcc311d34/python_jsonstore-1.1.0-py2.py3-none-any.whl", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "c06cbdd9ab747e5de4a83b5dc3ad6ce0", "sha256": "9bde540cd63a45be9434bfe040cc4791909f81f4a35e3dbd306c004eede4c809"}, "downloads": -1, "filename": "python_jsonstore-1.1.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "c06cbdd9ab747e5de4a83b5dc3ad6ce0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4540, "upload_time": "2018-12-15T02:06:49", "upload_time_iso_8601": "2018-12-15T02:06:49.167630Z", "url": "https://files.pythonhosted.org/packages/a5/71/e52996f7de137d5024c14c687c0cab5e4166181aa974706c205db497b9bf/python_jsonstore-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1aeee884286fa00c0c50686445621df6", "sha256": "836e42ca1ced1532918137a30ced61cf2bd4213af82134894c07c094623482e6"}, "downloads": -1, "filename": "python-jsonstore-1.1.1.tar.gz", "has_sig": true, "md5_digest": "1aeee884286fa00c0c50686445621df6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7081, "upload_time": "2018-12-15T02:06:51", "upload_time_iso_8601": "2018-12-15T02:06:51.318575Z", "url": "https://files.pythonhosted.org/packages/29/18/cd1404e6c465c99f101314ad1b2a5bece3a586f2d451626ec08a7086e5d6/python-jsonstore-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "856b6dcb70696cea5bfcf9daf41744a4", "sha256": "15c31ad1accfff7c0679511f34a2e78662cd987616cf3210774060e57ed1d65b"}, "downloads": -1, "filename": "python_jsonstore-1.1.2-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "856b6dcb70696cea5bfcf9daf41744a4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4539, "upload_time": "2018-12-15T02:11:14", "upload_time_iso_8601": "2018-12-15T02:11:14.794167Z", "url": "https://files.pythonhosted.org/packages/f8/e9/9901f96b42255aa8faf49c2588b5fbfeb4bc0b02d54a06e7087c9225d573/python_jsonstore-1.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a057584be7ed60ca82f38737040f2197", "sha256": "8191cd73aa019409daa9747d918cba01630993c3354fb067e28b6190ee854d51"}, "downloads": -1, "filename": "python-jsonstore-1.1.2.tar.gz", "has_sig": true, "md5_digest": "a057584be7ed60ca82f38737040f2197", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7071, "upload_time": "2018-12-15T02:11:16", "upload_time_iso_8601": "2018-12-15T02:11:16.528134Z", "url": "https://files.pythonhosted.org/packages/68/e0/7d0aa02650ddd80e75ab343fe1dc265fe1db7efb153406247f223572b54d/python-jsonstore-1.1.2.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "5fc092f475fd3dc0c8cfecf47914720f", "sha256": "ddde8d6825c6b9b41708fe9b17c8097747b1192e9ff635edf1ffd9a0891a270e"}, "downloads": -1, "filename": "python_jsonstore-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5fc092f475fd3dc0c8cfecf47914720f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5432, "upload_time": "2020-05-06T17:30:01", "upload_time_iso_8601": "2020-05-06T17:30:01.871810Z", "url": "https://files.pythonhosted.org/packages/6d/f6/8ca42c757bcbbce631b6565c108b6aa036938aa7950381fa7fc64a742e2b/python_jsonstore-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec9c9f4375f823e5f6df439a1971d5fd", "sha256": "f420f20524325adf8832bd8a38eec704b8d930dbf30f1b499ae84dc7c69b786f"}, "downloads": -1, "filename": "python-jsonstore-1.2.0.tar.gz", "has_sig": false, "md5_digest": "ec9c9f4375f823e5f6df439a1971d5fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7537, "upload_time": "2020-05-06T17:30:03", "upload_time_iso_8601": "2020-05-06T17:30:03.473549Z", "url": "https://files.pythonhosted.org/packages/65/97/3f4808013d171adc2b1010f83557ed70869e204a31e186eefa457f889673/python-jsonstore-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5fc092f475fd3dc0c8cfecf47914720f", "sha256": "ddde8d6825c6b9b41708fe9b17c8097747b1192e9ff635edf1ffd9a0891a270e"}, "downloads": -1, "filename": "python_jsonstore-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5fc092f475fd3dc0c8cfecf47914720f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5432, "upload_time": "2020-05-06T17:30:01", "upload_time_iso_8601": "2020-05-06T17:30:01.871810Z", "url": "https://files.pythonhosted.org/packages/6d/f6/8ca42c757bcbbce631b6565c108b6aa036938aa7950381fa7fc64a742e2b/python_jsonstore-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec9c9f4375f823e5f6df439a1971d5fd", "sha256": "f420f20524325adf8832bd8a38eec704b8d930dbf30f1b499ae84dc7c69b786f"}, "downloads": -1, "filename": "python-jsonstore-1.2.0.tar.gz", "has_sig": false, "md5_digest": "ec9c9f4375f823e5f6df439a1971d5fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7537, "upload_time": "2020-05-06T17:30:03", "upload_time_iso_8601": "2020-05-06T17:30:03.473549Z", "url": "https://files.pythonhosted.org/packages/65/97/3f4808013d171adc2b1010f83557ed70869e204a31e186eefa457f889673/python-jsonstore-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:04 2020"}