{"info": {"author": "yaoguai", "author_email": "lapislazulitexts@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Religion", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Text Processing :: Linguistic", "Topic :: Utilities"], "description": "pinyin-dec\n==========\n\npinyin-dec (\"Pinyin Decorate\") is a small command-line utility program for\nconverting numbered Pinyin text to its proper form with diacritics. The basic\nform is the following::\n\n    Usage: pinyin-dec [options] [string ...]\n\n    Decorate Pinyin text with its proper diacritics.\n\n    Options:\n      -h, --help       print this help message and exit\n      -v, --verbose    include information useful for debugging\n\nA simple way to use it is like this::\n\n    $ pinyin-dec han4 yu3 pin1 yin1\n    h\u00e0n y\u01d4 p\u012bn y\u012bn\n\nAnother example::\n\n    $ pinyin-dec chai2 mi3 you2 yan2 jiang4 cu4 cha2\n    ch\u00e1i m\u01d0 y\u00f3u y\u00e1n ji\u00e0ng c\u00f9 ch\u00e1\n\nIt can also handle capitalized and conjoined Pinyin automatically::\n\n    $ pinyin-dec Han4yu3 Pin1yin1\n    H\u00e0ny\u01d4 P\u012bny\u012bn\n\nIt knows about the \"v\" and \"u:\" conventions, and converts them accordingly::\n\n    $ pinyin-dec NV3 nv3 NU:3 nu:3 LV4 lv4 LU:4 lu:4\n    N\u01d9 n\u01da N\u01d9 n\u01da L\u01db l\u01dc L\u01db l\u01dc\n\nIt ignores English words and other things that don't look like Pinyin::\n\n    $ pinyin-dec \"She is a nv3han4zi.\"\n    She is a n\u01dah\u00e0nzi.\n\nIt leaves punctuation alone too, as you can see::\n\n    $ pinyin-dec 'Confucius is \"Kong3fu1zi3.\" Mencius is \"Meng4zi3.\"'\n    Confucius is \"K\u01d2ngf\u016bz\u01d0.\" Mencius is \"M\u00e8ngz\u01d0.\"\n\nIf no arguments are given, it just reads text from the standard input::\n\n    $ echo 'Sha1 ji1 xia4 hou2.' | pinyin-dec\n    Sh\u0101 j\u012b xi\u00e0 h\u00f3u.\n\nIt also allows you to enter text and get the results one line at a time::\n\n    $ pinyin-dec\n    chi1 bu4 dao4 pu2 tao5 shuo1 pu2 tao5 suan1\n    ch\u012b b\u00f9 d\u00e0o p\u00fa tao shu\u014d p\u00fa tao su\u0101n\n\npinyin-dec is written as a traditional Unix-style command-line utility.\nAdditionally, the main program module can be fully imported into Python so its\ninternals are accessible to other programs.\n\npinyin-dec is written in Python 3 and available under the MIT License.\n\nInstallation\n------------\n\nTo install these programs the \"Python way,\" you can use setup.py::\n\n    # python3 setup.py install\n\nIf you have pip installed, that is the best way.\n\nDocumentation\n-------------\n\npinyin-dec includes a Unix manual page (\"manpage\"), which is installed with the\nsoftware. You can type \"man pinyin-dec\" to review the functions provided by the\nsoftware, how to use it, and other program information.", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yaoguai/pinyin-dec", "keywords": "hanyu pinyin chinese cjk asia language", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "pinyin-dec", "package_url": "https://pypi.org/project/pinyin-dec/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pinyin-dec/", "project_urls": {"Homepage": "https://github.com/yaoguai/pinyin-dec"}, "release_url": "https://pypi.org/project/pinyin-dec/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "Decorate Pinyin text with its proper diacritics.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>pinyin-dec (\u201cPinyin Decorate\u201d) is a small command-line utility program for\nconverting numbered Pinyin text to its proper form with diacritics. The basic\nform is the following:</p>\n<pre>Usage: pinyin-dec [options] [string ...]\n\nDecorate Pinyin text with its proper diacritics.\n\nOptions:\n  -h, --help       print this help message and exit\n  -v, --verbose    include information useful for debugging\n</pre>\n<p>A simple way to use it is like this:</p>\n<pre>$ pinyin-dec han4 yu3 pin1 yin1\nh\u00e0n y\u01d4 p\u012bn y\u012bn\n</pre>\n<p>Another example:</p>\n<pre>$ pinyin-dec chai2 mi3 you2 yan2 jiang4 cu4 cha2\nch\u00e1i m\u01d0 y\u00f3u y\u00e1n ji\u00e0ng c\u00f9 ch\u00e1\n</pre>\n<p>It can also handle capitalized and conjoined Pinyin automatically:</p>\n<pre>$ pinyin-dec Han4yu3 Pin1yin1\nH\u00e0ny\u01d4 P\u012bny\u012bn\n</pre>\n<p>It knows about the \u201cv\u201d and \u201cu:\u201d conventions, and converts them accordingly:</p>\n<pre>$ pinyin-dec NV3 nv3 NU:3 nu:3 LV4 lv4 LU:4 lu:4\nN\u01d9 n\u01da N\u01d9 n\u01da L\u01db l\u01dc L\u01db l\u01dc\n</pre>\n<p>It ignores English words and other things that don\u2019t look like Pinyin:</p>\n<pre>$ pinyin-dec \"She is a nv3han4zi.\"\nShe is a n\u01dah\u00e0nzi.\n</pre>\n<p>It leaves punctuation alone too, as you can see:</p>\n<pre>$ pinyin-dec 'Confucius is \"Kong3fu1zi3.\" Mencius is \"Meng4zi3.\"'\nConfucius is \"K\u01d2ngf\u016bz\u01d0.\" Mencius is \"M\u00e8ngz\u01d0.\"\n</pre>\n<p>If no arguments are given, it just reads text from the standard input:</p>\n<pre>$ echo 'Sha1 ji1 xia4 hou2.' | pinyin-dec\nSh\u0101 j\u012b xi\u00e0 h\u00f3u.\n</pre>\n<p>It also allows you to enter text and get the results one line at a time:</p>\n<pre>$ pinyin-dec\nchi1 bu4 dao4 pu2 tao5 shuo1 pu2 tao5 suan1\nch\u012b b\u00f9 d\u00e0o p\u00fa tao shu\u014d p\u00fa tao su\u0101n\n</pre>\n<p>pinyin-dec is written as a traditional Unix-style command-line utility.\nAdditionally, the main program module can be fully imported into Python so its\ninternals are accessible to other programs.</p>\n<p>pinyin-dec is written in Python 3 and available under the MIT License.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install these programs the \u201cPython way,\u201d you can use setup.py:</p>\n<pre># python3 setup.py install\n</pre>\n<p>If you have pip installed, that is the best way.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>pinyin-dec includes a Unix manual page (\u201cmanpage\u201d), which is installed with the\nsoftware. You can type \u201cman pinyin-dec\u201d to review the functions provided by the\nsoftware, how to use it, and other program information.</p>\n</div>\n\n          </div>"}, "last_serial": 1450948, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "7d8180497d41b7a37161e8eb3f7ba2f3", "sha256": "49eb80d486b62fba26c36630f5bd645d1beadca2801aec92905c47f3d88f1738"}, "downloads": -1, "filename": "pinyin-dec-1.0.1.tar.gz", "has_sig": false, "md5_digest": "7d8180497d41b7a37161e8eb3f7ba2f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6542, "upload_time": "2015-03-06T15:24:13", "upload_time_iso_8601": "2015-03-06T15:24:13.065533Z", "url": "https://files.pythonhosted.org/packages/b8/79/34f03f02bc2878c223d2249711db917b2a7f1b63bf2d6ad27ca9b476f56d/pinyin-dec-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7d8180497d41b7a37161e8eb3f7ba2f3", "sha256": "49eb80d486b62fba26c36630f5bd645d1beadca2801aec92905c47f3d88f1738"}, "downloads": -1, "filename": "pinyin-dec-1.0.1.tar.gz", "has_sig": false, "md5_digest": "7d8180497d41b7a37161e8eb3f7ba2f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6542, "upload_time": "2015-03-06T15:24:13", "upload_time_iso_8601": "2015-03-06T15:24:13.065533Z", "url": "https://files.pythonhosted.org/packages/b8/79/34f03f02bc2878c223d2249711db917b2a7f1b63bf2d6ad27ca9b476f56d/pinyin-dec-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:26 2020"}