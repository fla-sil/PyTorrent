{"info": {"author": "Sidorov A.B.", "author_email": "sidan93@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Build Tools"], "description": "# About\nA small module for working quickly with the PostgreSQL\n\n# Simple Start for home project\n\n1. Install package from pip\n```\npip install postgresqlconnector\n```\n2. Use connector\n```\nfrom postgresqlconnector import DB\nprint(DB.query('''select * from pg_stat_activity'''))\n```\n\n## API\n\n### query \nGet all rows from your sql query\n#### Param:\n* sql: str - Your query\n* params: dict - Params for query\n#### Result:\n* Array of Record\n```\nresult = DB.query('''select * from pg_stat_activity''')\nprint(result[0])\nprint(result[0].pid)\n```\n\n### row\nGet first row from your sql query\n#### Param:\n* sql: str - Your query\n* params: dict - Params for query \n#### Result:\n* Record\n```\nresult = DB.row('''select * from pg_stat_activity''')\nprint(result.pid)\n```\n\n### scalar\nGet first column from first row from you sql query\n#### Param:\n* sql: str - Your query\n* params: dict - Params for query \n#### Result:\n* Scalar\n```\nresult = DB.scalar('''select pid, * from pg_stat_activity''')\nprint(result)\n```\n\n### set_connection_info\nSet database connections\n#### Param:\n* host: str = 'localhose' - Host\n* port: str = '5432' - Port\n* dbname: str = 'postgres' - Database name\n* user: str = 'postgres' - User\n* password: str = 'postgres' - Password\n\n### create_transaction\nWork with transaction.\n\nIf an exception occurs in your code, the transaction will rollback\n```\nwith DB.create_transaction():\n    # block for your code\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/sidan93/postgresql_connector/archive/v0.6.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sidan93/postgresql_connector", "keywords": "Postgre,PostgreSQL,connector,postgresqlconnection,postgresql connector", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "postgresqlconnector", "package_url": "https://pypi.org/project/postgresqlconnector/", "platform": "", "project_url": "https://pypi.org/project/postgresqlconnector/", "project_urls": {"Download": "https://github.com/sidan93/postgresql_connector/archive/v0.6.tar.gz", "Homepage": "https://github.com/sidan93/postgresql_connector"}, "release_url": "https://pypi.org/project/postgresqlconnector/0.6/", "requires_dist": null, "requires_python": "", "summary": "A small module for working quickly with the PostgreSQL", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>About</h1>\n<p>A small module for working quickly with the PostgreSQL</p>\n<h1>Simple Start for home project</h1>\n<ol>\n<li>Install package from pip</li>\n</ol>\n<pre><code>pip install postgresqlconnector\n</code></pre>\n<ol>\n<li>Use connector</li>\n</ol>\n<pre><code>from postgresqlconnector import DB\nprint(DB.query('''select * from pg_stat_activity'''))\n</code></pre>\n<h2>API</h2>\n<h3>query</h3>\n<p>Get all rows from your sql query</p>\n<h4>Param:</h4>\n<ul>\n<li>sql: str - Your query</li>\n<li>params: dict - Params for query</li>\n</ul>\n<h4>Result:</h4>\n<ul>\n<li>Array of Record</li>\n</ul>\n<pre><code>result = DB.query('''select * from pg_stat_activity''')\nprint(result[0])\nprint(result[0].pid)\n</code></pre>\n<h3>row</h3>\n<p>Get first row from your sql query</p>\n<h4>Param:</h4>\n<ul>\n<li>sql: str - Your query</li>\n<li>params: dict - Params for query</li>\n</ul>\n<h4>Result:</h4>\n<ul>\n<li>Record</li>\n</ul>\n<pre><code>result = DB.row('''select * from pg_stat_activity''')\nprint(result.pid)\n</code></pre>\n<h3>scalar</h3>\n<p>Get first column from first row from you sql query</p>\n<h4>Param:</h4>\n<ul>\n<li>sql: str - Your query</li>\n<li>params: dict - Params for query</li>\n</ul>\n<h4>Result:</h4>\n<ul>\n<li>Scalar</li>\n</ul>\n<pre><code>result = DB.scalar('''select pid, * from pg_stat_activity''')\nprint(result)\n</code></pre>\n<h3>set_connection_info</h3>\n<p>Set database connections</p>\n<h4>Param:</h4>\n<ul>\n<li>host: str = 'localhose' - Host</li>\n<li>port: str = '5432' - Port</li>\n<li>dbname: str = 'postgres' - Database name</li>\n<li>user: str = 'postgres' - User</li>\n<li>password: str = 'postgres' - Password</li>\n</ul>\n<h3>create_transaction</h3>\n<p>Work with transaction.</p>\n<p>If an exception occurs in your code, the transaction will rollback</p>\n<pre><code>with DB.create_transaction():\n    # block for your code\n</code></pre>\n\n          </div>"}, "last_serial": 5952769, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "3f9d504c794ae1b0214eb69cded27972", "sha256": "53f9ff40c9df84f662420dbe591535fd067e48695605964acbdb3ed63158e6e7"}, "downloads": -1, "filename": "postgresqlconnector-0.3.tar.gz", "has_sig": false, "md5_digest": "3f9d504c794ae1b0214eb69cded27972", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1922, "upload_time": "2019-10-09T04:37:09", "upload_time_iso_8601": "2019-10-09T04:37:09.502168Z", "url": "https://files.pythonhosted.org/packages/0d/e4/8a0ef980071e33f79a3172a6a22ebc76ea3dbf8fc51d420a37f59b60b61b/postgresqlconnector-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "9759e7857c82a382bd310e6e9c9c186b", "sha256": "ce37529e3975ea5951b3bb91e0d080906436d2bd832c406a4d59dd045a1a3d54"}, "downloads": -1, "filename": "postgresqlconnector-0.4.tar.gz", "has_sig": false, "md5_digest": "9759e7857c82a382bd310e6e9c9c186b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2102, "upload_time": "2019-10-09T05:20:36", "upload_time_iso_8601": "2019-10-09T05:20:36.653187Z", "url": "https://files.pythonhosted.org/packages/5f/14/d1d8439f8cd406fcdfac1c99a8aeca2c0f5f23906ebe66b7e1c8806d6724/postgresqlconnector-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "885ae43c9b07c6138a89ef9e0b93b087", "sha256": "0a7f5816fc615ae3ee4295b48d174943ea7453a797d7ad156603d2623e867c49"}, "downloads": -1, "filename": "postgresqlconnector-0.5.tar.gz", "has_sig": false, "md5_digest": "885ae43c9b07c6138a89ef9e0b93b087", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2628, "upload_time": "2019-10-09T06:07:35", "upload_time_iso_8601": "2019-10-09T06:07:35.924437Z", "url": "https://files.pythonhosted.org/packages/f7/c1/ad3f36ed56fe50d8376c51961780496215d04bf256f0632390b3861fa4c7/postgresqlconnector-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "d9bb9b3bee915f7ac7d838199c6910d7", "sha256": "798450aa98ded759bcab4a3569ebb094ed664935cc9bc0b7acee726ef89d7049"}, "downloads": -1, "filename": "postgresqlconnector-0.6.tar.gz", "has_sig": false, "md5_digest": "d9bb9b3bee915f7ac7d838199c6910d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2974, "upload_time": "2019-10-10T02:21:32", "upload_time_iso_8601": "2019-10-10T02:21:32.107553Z", "url": "https://files.pythonhosted.org/packages/dd/64/e77ca2244336476c40a7943fb48c6d1bae8ddcb0c905f4b4ff6672656203/postgresqlconnector-0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d9bb9b3bee915f7ac7d838199c6910d7", "sha256": "798450aa98ded759bcab4a3569ebb094ed664935cc9bc0b7acee726ef89d7049"}, "downloads": -1, "filename": "postgresqlconnector-0.6.tar.gz", "has_sig": false, "md5_digest": "d9bb9b3bee915f7ac7d838199c6910d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2974, "upload_time": "2019-10-10T02:21:32", "upload_time_iso_8601": "2019-10-10T02:21:32.107553Z", "url": "https://files.pythonhosted.org/packages/dd/64/e77ca2244336476c40a7943fb48c6d1bae8ddcb0c905f4b4ff6672656203/postgresqlconnector-0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:51:20 2020"}