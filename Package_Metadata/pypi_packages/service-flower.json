{"info": {"author": "puntonim", "author_email": "foo@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP"], "description": "[![Build Status](https://travis-ci.org/puntonim/service-flower.svg?branch=master)](https://travis-ci.org/puntonim/service-flower)\n\n# Flower service client\n\nThis package is service client for Flower API used to monitor Celery.\n\n## Client usage\n\n```python\n# Configure settings.\nimport service_flower.conf\nd = dict(\n    BASE_URL='https://inspire-qa-worker3-task1.cern.ch/api',\n    REQUEST_TIMEOUT=30,\n    HTTP_AUTH_USERNAME='user',\n    HTTP_AUTH_PASSWORD='pass',\n)\nservice_flower.conf.settings.configure(**d)\n\n# Use the client.\nfrom service_flower.client import FlowerClient\nclient = FlowerClient()\nresponse = client.get_workers(workername='celery@inspire-qa-worker3-task5.cern.ch')\nresponse.raise_for_result()\nqueues = response.get_active_queues_names('celery@inspire-qa-worker3-task5.cern.ch')\n```\n\n## Development\n\n```bash\n# Create a venv and install the requirements:\n$ make venv\n\n# Run isort and lint:\n$ make isort\n$ make lint\n\n# Run all the tests:\n$ make test  # tox against Python27 and Python36.\n$ tox -e py27  # tox against a specific Python version.\n$ pytest  # pytest against the active venv.\n\n# Run a specific test:\n$ make test/tests/test_client.py  # tox against Python27 and Python36.\n$ tox -e py27 -- tests/test_client.py  # tox against a specific Python version.\n$ pytest tests/test_client.py  # pytest against the active venv.\n```\n\nTo publish on PyPi, first set the PyPi credentials:\n\n```bash\n# Edit .pypirc:\n$ cat $HOME/.pypirc\n[pypi]\nusername: myuser\npassword: mypass\n```\n\n```bash\n# Edit the version in `setup_gen.py`.\n# ... version=pep440_version('1.1.1'),\n# Then generate setup.py with:\n$ make setup.py\n# Commit, tag, push:\n$ git commit -m '1.1.1 release'\n$ git tag 1.1.1\n$ git push origin master --tags\n\n# Finally publish:\n$ make publish\n```", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/puntonim/service-flower", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "service-flower", "package_url": "https://pypi.org/project/service-flower/", "platform": "", "project_url": "https://pypi.org/project/service-flower/", "project_urls": {"Homepage": "https://github.com/puntonim/service-flower"}, "release_url": "https://pypi.org/project/service-flower/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Flower service client", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            [![Build Status](https://travis-ci.org/puntonim/service-flower.svg?branch=master)](https://travis-ci.org/puntonim/service-flower)<br><br># Flower service client<br><br>This package is service client for Flower API used to monitor Celery.<br><br>## Client usage<br><br>```python<br># Configure settings.<br>import service_flower.conf<br>d = dict(<br>    BASE_URL='https://inspire-qa-worker3-task1.cern.ch/api',<br>    REQUEST_TIMEOUT=30,<br>    HTTP_AUTH_USERNAME='user',<br>    HTTP_AUTH_PASSWORD='pass',<br>)<br>service_flower.conf.settings.configure(**d)<br><br># Use the client.<br>from service_flower.client import FlowerClient<br>client = FlowerClient()<br>response = client.get_workers(workername='celery@inspire-qa-worker3-task5.cern.ch')<br>response.raise_for_result()<br>queues = response.get_active_queues_names('celery@inspire-qa-worker3-task5.cern.ch')<br>```<br><br>## Development<br><br>```bash<br># Create a venv and install the requirements:<br>$ make venv<br><br># Run isort and lint:<br>$ make isort<br>$ make lint<br><br># Run all the tests:<br>$ make test  # tox against Python27 and Python36.<br>$ tox -e py27  # tox against a specific Python version.<br>$ pytest  # pytest against the active venv.<br><br># Run a specific test:<br>$ make test/tests/test_client.py  # tox against Python27 and Python36.<br>$ tox -e py27 -- tests/test_client.py  # tox against a specific Python version.<br>$ pytest tests/test_client.py  # pytest against the active venv.<br>```<br><br>To publish on PyPi, first set the PyPi credentials:<br><br>```bash<br># Edit .pypirc:<br>$ cat $HOME/.pypirc<br>[pypi]<br>username: myuser<br>password: mypass<br>```<br><br>```bash<br># Edit the version in `setup_gen.py`.<br># ... version=pep440_version('1.1.1'),<br># Then generate setup.py with:<br>$ make setup.py<br># Commit, tag, push:<br>$ git commit -m '1.1.1 release'<br>$ git tag 1.1.1<br>$ git push origin master --tags<br><br># Finally publish:<br>$ make publish<br>```\n          </div>"}, "last_serial": 4385691, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "6d3c092a22fc670c30a1e3ab1b9aa5f9", "sha256": "d78273d55863997caab5d4d937231221de13a642d37667732b0b9596a00808ea"}, "downloads": -1, "filename": "service-flower-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6d3c092a22fc670c30a1e3ab1b9aa5f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5906, "upload_time": "2018-10-16T13:42:54", "upload_time_iso_8601": "2018-10-16T13:42:54.551946Z", "url": "https://files.pythonhosted.org/packages/74/bd/0f4eac7dddb2238509c796f8d1d17a144d0dd10f0b611afe61ff01e24a8f/service-flower-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "39007cd1417c54930f4a0460dcf447c0", "sha256": "31c65d33a325d1e03b6a06de787580e786239aa982cc22974f13a290a6053166"}, "downloads": -1, "filename": "service-flower-1.0.1.tar.gz", "has_sig": false, "md5_digest": "39007cd1417c54930f4a0460dcf447c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5903, "upload_time": "2018-10-17T09:30:54", "upload_time_iso_8601": "2018-10-17T09:30:54.687114Z", "url": "https://files.pythonhosted.org/packages/2a/a3/8c40bfb17a6df781dcfd2d08e5ad91ad526f1cec52b55d05d29f8c6ce099/service-flower-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "39007cd1417c54930f4a0460dcf447c0", "sha256": "31c65d33a325d1e03b6a06de787580e786239aa982cc22974f13a290a6053166"}, "downloads": -1, "filename": "service-flower-1.0.1.tar.gz", "has_sig": false, "md5_digest": "39007cd1417c54930f4a0460dcf447c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5903, "upload_time": "2018-10-17T09:30:54", "upload_time_iso_8601": "2018-10-17T09:30:54.687114Z", "url": "https://files.pythonhosted.org/packages/2a/a3/8c40bfb17a6df781dcfd2d08e5ad91ad526f1cec52b55d05d29f8c6ce099/service-flower-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:57 2020"}