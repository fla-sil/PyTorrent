{"info": {"author": "Roberto Agromayor", "author_email": "rober.agro@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: Unix", "Programming Language :: Python :: 3"], "description": "# nurbspy\n\n\n## Description\n`nurbspy` is a Python package for Non-Uniform Rational Basis Spline (NURBS) curves and surfaces.\nThe classes and methods were inspired by the algorithms presented in [The NURBS Book](https://doi.org/10.1007/978-3-642-59223-2) and the code was implemented using vectorized [Numpy](https://numpy.org/) functions and [Numba's](http://numba.pydata.org/) just-in-time compilation decorators to achieve C-like speed.\n\n`nurbspy` aims to be a simple NURBS library, not a fully fledged CAD kernel. If you need a powerful, open source CAD kernel we recommend you to check out the C++ [OpenCascade](https://www.opencascade.com/doc/occt-7.4.0/overview/html/index.html) library. If you feel that OpenCascade is too complex or you are not sure how to start using it, [this repository](https://github.com/RoberAgro/primer_open_cascade) might be useful for you!\n\n\n<p style=\"margin-top:1cm;\"> </p>\n<p align=\"center\">\n        <img src=\"./docs/images/python_logo.svg\" height=\"120\" width=\"400\"/>\n<p style=\"margin-bottom:0cm;\"> </p>\n\n<p style=\"margin-top:0cm;\"> </p>\n<p align=\"center\">\n\t<img src=\"./docs/images/numpy_logo.svg\" height=\"100\" width=\"250\"/>\n\t&emsp; &emsp; &emsp;\n\t<img src=\"./docs/images/numba_logo.svg\" height=\"100\" width=\"300\"/>\n</p>\n<p style=\"margin-bottom:1cm;\"> </p>\n\n## Capabilities\n\n`nurbspy` has the following features for NURBS curves:\n\n- Constructors for rational and non-rational B\u00e9zier and B-Spline curves\n- Methods to evaluate curve coordinates\n- Methods to evaluate arbitrary-order derivatives analytically\n- Methods to evaluate the tangent, normal, and binormal unitary vectors (Frenet-Serret frame of reference)\n- Methods to compute the curvature and torsion\n- Methods to compute the arc-length of the curve by numerical quadrature\n- Methods to for point projection / point inversion\n- Methods to visualize the curve using the Matplotlib library\n\n\nIn addition, `nurbspy` provides the following capabilities for NURBS surfaces:\n\n\n- Constructors for rational and non-rational B\u00e9zier and B-Spline surfaces\n- Additional constructors for some common special surfaces:\n\t- Bilinear surfaces\n\t- Ruled surfaces\n\t- Extruded surfaces\n\t- Revolution surfaces\n\t- Coons surfaces\n- Methods to evaluate surface coordinates\n- Methods to evaluate arbitrary-order derivatives analytically\n- Methods to evaluate the unitary normal vectors\n- Methods to evaluate the mean and Gaussian curvatures\n- Methods to compute u- and v-isoparametic curves\n- Methods to for point projection / point inversion\n- Methods to visualize the surface using the Matplotlib library\n\nIn addition,  `nurbspy` can work with real and complex data types natively. This allows to compute accurate (down to [machine epsilon!](https://en.wikipedia.org/wiki/Machine_epsilon)) shape derivatives using the [complex step method](https://blogs.mathworks.com/cleve/2013/10/14/complex-step-differentiation/) and avoid the numerical error incurred by finite-difference derivative approximations. This shape sensitivity information is necessary to solve shape optimization problems with many design variables using gradient based-optimization algorithms. To our knowledge, `nurbspy` is the only Python package that provides the flexibility to work with complex numbers right away.\n\n\n## Installation\n\n`nurbspy` has the following mandatory runtime dependencies:\n\n - [numpy](https://numpy.org/) (multidimensional array library)\n - [scipy](https://www.scipy.org/) (scientific computing library)\n - [numba](http://numba.pydata.org/) (just-in-time Python compiler)\n - [pygmo](https://github.com/esa/pagmo2) (optimization library)\n - [matplotlib](https://matplotlib.org/) (visualization library)\n\nIn addition, `nurbspy` uses [pytest](https://docs.pytest.org/en/latest/) for local tests.\n\n\n`nurbspy` is available on Linux via the [pip](https://pip.pypa.io/en/stable/) package manager. The installation with pip is straightfoward:\n\n```bash\npip install nurbspy\n```\n\n\n`nurbspy` is also available on Linux, Windows, and macOS via the [conda](https://docs.conda.io/en/latest/) installer. In order to install `nurbspy` via conda you need to add `conda-forge` and `roberagro` to the list of available channels:\n\n```shell\nconda install nurbspy --channel conda-forge --channel roberagro\n```\n\nYou can verify that `nurbspy` was installed successfully with this minimal Python script:\n\n```python\n# Nurbspy minimal working example\nimport nurbspy\nnurbspy.minimal_example.run()\n```\n\nor by typing this one-liner on your terminal:\n\n```python\npython3 -c \"import nurbspy; nurbspy.minimal_example.run()\"\n```\n\n## Minimal working examples\n\n### NURBS curves\n\n`nurbspy` can  be used to create B\u00e9zier, B-Spline and NURBS curves. The type of curve depends on the arguments used to initialize the curve class. As an example, the following piece of code can be used to generate a degree four B\u00e9zier curve in two dimensions:\n\n```python\n# Import packages\nimport numpy as np\nimport nurbspy as nrb\nimport matplotlib.pyplot as plt\n\n# Define the array of control points\nP = np.zeros((2,5))\nP[:, 0] = [0.20, 0.50]\nP[:, 1] = [0.40, 0.70]\nP[:, 2] = [0.80, 0.60]\nP[:, 3] = [0.80, 0.40]\nP[:, 4] = [0.40, 0.20]\n\n# Create and plot the Bezier curve\nbezierCurve = nrb.NurbsCurve(control_points=P)\nbezierCurve.plot()\nplt.show()\n```\n\nIf the installation was succesful, you should be able to see the B\u00e9zier curve when you execute the previous code snippet.\n\n<p style=\"margin-bottom:0.5cm;\"> </p>\n<p align=\"center\">\n        <img src=\"./docs/images/curve_example.svg\" height=\"400\" width=\"400\"/>\n</p>\n<p style=\"margin-bottom:0.5cm;\"> </p>\n\nCheck out the [curve demos](./demos/demos_curves) directory to see more examples showing the capabilities of the library and how to use them.\n\n\n### NURBS surfaces\n\nSimilarly, `nurbspy` can  be used to create B\u00e9zier, B-Spline and NURBS surfaces. The type of surface depends on the arguments used to initialize the surface class. As an example, the following code snippet can be used to generate a simple B\u00e9zier surface of degree 3 in the u-direction and degree 2 in the v-direction:\n\n```python\n# Import packages\nimport numpy as np\nimport nurbspy as nrb\nimport matplotlib.pyplot as plt\n\n# Define the array of control points\nn_dim, n, m = 3, 4, 3\nP = np.zeros((n_dim, n, m))\n\n# First row\nP[:, 0, 0] = [0.00, 0.00, 0.00]\nP[:, 1, 0] = [1.00, 0.00, 1.00]\nP[:, 2, 0] = [2.00, 0.00, 1.00]\nP[:, 3, 0] = [3.00, 0.00, 0.00]\n\n# Second row\nP[:, 0, 1] = [0.00, 1.00, 1.00]\nP[:, 1, 1] = [1.00, 1.00, 2.00]\nP[:, 2, 1] = [2.00, 1.00, 2.00]\nP[:, 3, 1] = [3.00, 1.00, 1.00]\n\n# Third row\nP[:, 0, 2] = [0.00, 2.00, 0.00]\nP[:, 1, 2] = [1.00, 2.00, 1.00]\nP[:, 2, 2] = [2.00, 2.00, 1.00]\nP[:, 3, 2] = [3.00, 2.00, 0.00]\n\n# Create and plot the Bezier surface\nbezierSurface = nrb.NurbsSurface(control_points=P)\nbezierSurface.plot(control_points=True, isocurves_u=6, isocurves_v=6)\nplt.show()\n```\n\nIf the installation was successful, you should be able to see the B\u00e9zier surface when you execute the previous script.\n\n<p style=\"margin-top:0.0cm;\"> </p>\n<p align=\"center\">\n        <img src=\"./docs/images/surface_example.svg\" height=\"500\" width=\"500\"/>\n<p style=\"margin-bottom:0.0cm;\"> </p>\n\n\nCheck out the [surface demos](./demos/demos_surfaces) directory to see more examples showing the capabilities of the library and how to use them.\n\n## Mathematical background\n\nCheck out the [B\u00e9zier](./docs/A_Briefing_on_Bezier_Curves_and_Surfaces.pdf), [B-Spline](./docs/A_Briefing_on_B_Spline_Curves_and_Surfaces.pdf), and [NURBS](./docs/A_Briefing_on_NURBS_Curves_and_Surfaces.pdf) notes if you want to learn more about the definition and mathematical properties of these curves and surfaces\n\n\n## Contact information\n\n`nurbspy` was developed by [Roberto Agromayor](https://www.ntnu.edu/employees/roberto.agromayor) under the supervision of Associate Professor [Lars O. Nord](https://www.ntnu.edu/employees/lars.nord) at the [Norwegian University of Science and Technology (NTNU)](https://www.ntnu.no/) as part of his PhD on turbomachinery shape optimization. Please, drop us an email to [roberto.agromayor@ntnu.no](mailto:roberto.agromayor@ntnu.no) if you have questions about the code or you have a bug to report!\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/RoberAgro/nurbspy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "nurbspy", "package_url": "https://pypi.org/project/nurbspy/", "platform": "", "project_url": "https://pypi.org/project/nurbspy/", "project_urls": {"Homepage": "https://github.com/RoberAgro/nurbspy"}, "release_url": "https://pypi.org/project/nurbspy/1.1.0/", "requires_dist": ["numpy", "scipy", "pygmo", "matplotlib", "numba"], "requires_python": ">=3", "summary": "A lightweight library for NURBS curves and surfaces", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>nurbspy</h1>\n<h2>Description</h2>\n<p><code>nurbspy</code> is a Python package for Non-Uniform Rational Basis Spline (NURBS) curves and surfaces.\nThe classes and methods were inspired by the algorithms presented in <a href=\"https://doi.org/10.1007/978-3-642-59223-2\" rel=\"nofollow\">The NURBS Book</a> and the code was implemented using vectorized <a href=\"https://numpy.org/\" rel=\"nofollow\">Numpy</a> functions and <a href=\"http://numba.pydata.org/\" rel=\"nofollow\">Numba's</a> just-in-time compilation decorators to achieve C-like speed.</p>\n<p><code>nurbspy</code> aims to be a simple NURBS library, not a fully fledged CAD kernel. If you need a powerful, open source CAD kernel we recommend you to check out the C++ <a href=\"https://www.opencascade.com/doc/occt-7.4.0/overview/html/index.html\" rel=\"nofollow\">OpenCascade</a> library. If you feel that OpenCascade is too complex or you are not sure how to start using it, <a href=\"https://github.com/RoberAgro/primer_open_cascade\" rel=\"nofollow\">this repository</a> might be useful for you!</p>\n<p> </p>\n<p align=\"center\">\n        <img height=\"120\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9d66eca4d90835f2825f02a002a861f15719cdf4/2e2f646f63732f696d616765732f707974686f6e5f6c6f676f2e737667\" width=\"400\">\n</p><p> </p>\n<p> </p>\n<p align=\"center\">\n\t<img height=\"100\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e351a90a33e887052807c854d7c569cc4b6e96f4/2e2f646f63732f696d616765732f6e756d70795f6c6f676f2e737667\" width=\"250\">\n\t\u2003 \u2003 \u2003\n\t<img height=\"100\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/27ab7daba44015da516ce2b2cfc5df9eb7c1c9fb/2e2f646f63732f696d616765732f6e756d62615f6c6f676f2e737667\" width=\"300\">\n</p>\n<p> </p>\n<h2>Capabilities</h2>\n<p><code>nurbspy</code> has the following features for NURBS curves:</p>\n<ul>\n<li>Constructors for rational and non-rational B\u00e9zier and B-Spline curves</li>\n<li>Methods to evaluate curve coordinates</li>\n<li>Methods to evaluate arbitrary-order derivatives analytically</li>\n<li>Methods to evaluate the tangent, normal, and binormal unitary vectors (Frenet-Serret frame of reference)</li>\n<li>Methods to compute the curvature and torsion</li>\n<li>Methods to compute the arc-length of the curve by numerical quadrature</li>\n<li>Methods to for point projection / point inversion</li>\n<li>Methods to visualize the curve using the Matplotlib library</li>\n</ul>\n<p>In addition, <code>nurbspy</code> provides the following capabilities for NURBS surfaces:</p>\n<ul>\n<li>Constructors for rational and non-rational B\u00e9zier and B-Spline surfaces</li>\n<li>Additional constructors for some common special surfaces:\n<ul>\n<li>Bilinear surfaces</li>\n<li>Ruled surfaces</li>\n<li>Extruded surfaces</li>\n<li>Revolution surfaces</li>\n<li>Coons surfaces</li>\n</ul>\n</li>\n<li>Methods to evaluate surface coordinates</li>\n<li>Methods to evaluate arbitrary-order derivatives analytically</li>\n<li>Methods to evaluate the unitary normal vectors</li>\n<li>Methods to evaluate the mean and Gaussian curvatures</li>\n<li>Methods to compute u- and v-isoparametic curves</li>\n<li>Methods to for point projection / point inversion</li>\n<li>Methods to visualize the surface using the Matplotlib library</li>\n</ul>\n<p>In addition,  <code>nurbspy</code> can work with real and complex data types natively. This allows to compute accurate (down to <a href=\"https://en.wikipedia.org/wiki/Machine_epsilon\" rel=\"nofollow\">machine epsilon!</a>) shape derivatives using the <a href=\"https://blogs.mathworks.com/cleve/2013/10/14/complex-step-differentiation/\" rel=\"nofollow\">complex step method</a> and avoid the numerical error incurred by finite-difference derivative approximations. This shape sensitivity information is necessary to solve shape optimization problems with many design variables using gradient based-optimization algorithms. To our knowledge, <code>nurbspy</code> is the only Python package that provides the flexibility to work with complex numbers right away.</p>\n<h2>Installation</h2>\n<p><code>nurbspy</code> has the following mandatory runtime dependencies:</p>\n<ul>\n<li><a href=\"https://numpy.org/\" rel=\"nofollow\">numpy</a> (multidimensional array library)</li>\n<li><a href=\"https://www.scipy.org/\" rel=\"nofollow\">scipy</a> (scientific computing library)</li>\n<li><a href=\"http://numba.pydata.org/\" rel=\"nofollow\">numba</a> (just-in-time Python compiler)</li>\n<li><a href=\"https://github.com/esa/pagmo2\" rel=\"nofollow\">pygmo</a> (optimization library)</li>\n<li><a href=\"https://matplotlib.org/\" rel=\"nofollow\">matplotlib</a> (visualization library)</li>\n</ul>\n<p>In addition, <code>nurbspy</code> uses <a href=\"https://docs.pytest.org/en/latest/\" rel=\"nofollow\">pytest</a> for local tests.</p>\n<p><code>nurbspy</code> is available on Linux via the <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> package manager. The installation with pip is straightfoward:</p>\n<pre>pip install nurbspy\n</pre>\n<p><code>nurbspy</code> is also available on Linux, Windows, and macOS via the <a href=\"https://docs.conda.io/en/latest/\" rel=\"nofollow\">conda</a> installer. In order to install <code>nurbspy</code> via conda you need to add <code>conda-forge</code> and <code>roberagro</code> to the list of available channels:</p>\n<pre>conda install nurbspy --channel conda-forge --channel roberagro\n</pre>\n<p>You can verify that <code>nurbspy</code> was installed successfully with this minimal Python script:</p>\n<pre><span class=\"c1\"># Nurbspy minimal working example</span>\n<span class=\"kn\">import</span> <span class=\"nn\">nurbspy</span>\n<span class=\"n\">nurbspy</span><span class=\"o\">.</span><span class=\"n\">minimal_example</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>or by typing this one-liner on your terminal:</p>\n<pre><span class=\"n\">python3</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"s2\">\"import nurbspy; nurbspy.minimal_example.run()\"</span>\n</pre>\n<h2>Minimal working examples</h2>\n<h3>NURBS curves</h3>\n<p><code>nurbspy</code> can  be used to create B\u00e9zier, B-Spline and NURBS curves. The type of curve depends on the arguments used to initialize the curve class. As an example, the following piece of code can be used to generate a degree four B\u00e9zier curve in two dimensions:</p>\n<pre><span class=\"c1\"># Import packages</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">nurbspy</span> <span class=\"k\">as</span> <span class=\"nn\">nrb</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"c1\"># Define the array of control points</span>\n<span class=\"n\">P</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"n\">P</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.20</span><span class=\"p\">,</span> <span class=\"mf\">0.50</span><span class=\"p\">]</span>\n<span class=\"n\">P</span><span class=\"p\">[:,</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.40</span><span class=\"p\">,</span> <span class=\"mf\">0.70</span><span class=\"p\">]</span>\n<span class=\"n\">P</span><span class=\"p\">[:,</span> <span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.80</span><span class=\"p\">,</span> <span class=\"mf\">0.60</span><span class=\"p\">]</span>\n<span class=\"n\">P</span><span class=\"p\">[:,</span> <span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.80</span><span class=\"p\">,</span> <span class=\"mf\">0.40</span><span class=\"p\">]</span>\n<span class=\"n\">P</span><span class=\"p\">[:,</span> <span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.40</span><span class=\"p\">,</span> <span class=\"mf\">0.20</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Create and plot the Bezier curve</span>\n<span class=\"n\">bezierCurve</span> <span class=\"o\">=</span> <span class=\"n\">nrb</span><span class=\"o\">.</span><span class=\"n\">NurbsCurve</span><span class=\"p\">(</span><span class=\"n\">control_points</span><span class=\"o\">=</span><span class=\"n\">P</span><span class=\"p\">)</span>\n<span class=\"n\">bezierCurve</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p>If the installation was succesful, you should be able to see the B\u00e9zier curve when you execute the previous code snippet.</p>\n<p> </p>\n<p align=\"center\">\n        <img height=\"400\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8c673b8146a2d68c0e9a8adab839bca9d20f55b9/2e2f646f63732f696d616765732f63757276655f6578616d706c652e737667\" width=\"400\">\n</p>\n<p> </p>\n<p>Check out the <a href=\"./demos/demos_curves\" rel=\"nofollow\">curve demos</a> directory to see more examples showing the capabilities of the library and how to use them.</p>\n<h3>NURBS surfaces</h3>\n<p>Similarly, <code>nurbspy</code> can  be used to create B\u00e9zier, B-Spline and NURBS surfaces. The type of surface depends on the arguments used to initialize the surface class. As an example, the following code snippet can be used to generate a simple B\u00e9zier surface of degree 3 in the u-direction and degree 2 in the v-direction:</p>\n<pre><span class=\"c1\"># Import packages</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">nurbspy</span> <span class=\"k\">as</span> <span class=\"nn\">nrb</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"c1\"># Define the array of control points</span>\n<span class=\"n\">n_dim</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span>\n<span class=\"n\">P</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"n\">n_dim</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">m</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># First row</span>\n<span class=\"n\">P</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.00</span><span class=\"p\">,</span> <span class=\"mf\">0.00</span><span class=\"p\">,</span> <span class=\"mf\">0.00</span><span class=\"p\">]</span>\n<span class=\"n\">P</span><span class=\"p\">[:,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">1.00</span><span class=\"p\">,</span> <span class=\"mf\">0.00</span><span class=\"p\">,</span> <span class=\"mf\">1.00</span><span class=\"p\">]</span>\n<span class=\"n\">P</span><span class=\"p\">[:,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">2.00</span><span class=\"p\">,</span> <span class=\"mf\">0.00</span><span class=\"p\">,</span> <span class=\"mf\">1.00</span><span class=\"p\">]</span>\n<span class=\"n\">P</span><span class=\"p\">[:,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">3.00</span><span class=\"p\">,</span> <span class=\"mf\">0.00</span><span class=\"p\">,</span> <span class=\"mf\">0.00</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Second row</span>\n<span class=\"n\">P</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.00</span><span class=\"p\">,</span> <span class=\"mf\">1.00</span><span class=\"p\">,</span> <span class=\"mf\">1.00</span><span class=\"p\">]</span>\n<span class=\"n\">P</span><span class=\"p\">[:,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">1.00</span><span class=\"p\">,</span> <span class=\"mf\">1.00</span><span class=\"p\">,</span> <span class=\"mf\">2.00</span><span class=\"p\">]</span>\n<span class=\"n\">P</span><span class=\"p\">[:,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">2.00</span><span class=\"p\">,</span> <span class=\"mf\">1.00</span><span class=\"p\">,</span> <span class=\"mf\">2.00</span><span class=\"p\">]</span>\n<span class=\"n\">P</span><span class=\"p\">[:,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">3.00</span><span class=\"p\">,</span> <span class=\"mf\">1.00</span><span class=\"p\">,</span> <span class=\"mf\">1.00</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Third row</span>\n<span class=\"n\">P</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.00</span><span class=\"p\">,</span> <span class=\"mf\">2.00</span><span class=\"p\">,</span> <span class=\"mf\">0.00</span><span class=\"p\">]</span>\n<span class=\"n\">P</span><span class=\"p\">[:,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">1.00</span><span class=\"p\">,</span> <span class=\"mf\">2.00</span><span class=\"p\">,</span> <span class=\"mf\">1.00</span><span class=\"p\">]</span>\n<span class=\"n\">P</span><span class=\"p\">[:,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">2.00</span><span class=\"p\">,</span> <span class=\"mf\">2.00</span><span class=\"p\">,</span> <span class=\"mf\">1.00</span><span class=\"p\">]</span>\n<span class=\"n\">P</span><span class=\"p\">[:,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">3.00</span><span class=\"p\">,</span> <span class=\"mf\">2.00</span><span class=\"p\">,</span> <span class=\"mf\">0.00</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Create and plot the Bezier surface</span>\n<span class=\"n\">bezierSurface</span> <span class=\"o\">=</span> <span class=\"n\">nrb</span><span class=\"o\">.</span><span class=\"n\">NurbsSurface</span><span class=\"p\">(</span><span class=\"n\">control_points</span><span class=\"o\">=</span><span class=\"n\">P</span><span class=\"p\">)</span>\n<span class=\"n\">bezierSurface</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">control_points</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">isocurves_u</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">isocurves_v</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p>If the installation was successful, you should be able to see the B\u00e9zier surface when you execute the previous script.</p>\n<p> </p>\n<p align=\"center\">\n        <img height=\"500\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b8d60ae13589dc7e30696bb73624dbd2fee7f347/2e2f646f63732f696d616765732f737572666163655f6578616d706c652e737667\" width=\"500\">\n</p><p> </p>\n<p>Check out the <a href=\"./demos/demos_surfaces\" rel=\"nofollow\">surface demos</a> directory to see more examples showing the capabilities of the library and how to use them.</p>\n<h2>Mathematical background</h2>\n<p>Check out the <a href=\"./docs/A_Briefing_on_Bezier_Curves_and_Surfaces.pdf\" rel=\"nofollow\">B\u00e9zier</a>, <a href=\"./docs/A_Briefing_on_B_Spline_Curves_and_Surfaces.pdf\" rel=\"nofollow\">B-Spline</a>, and <a href=\"./docs/A_Briefing_on_NURBS_Curves_and_Surfaces.pdf\" rel=\"nofollow\">NURBS</a> notes if you want to learn more about the definition and mathematical properties of these curves and surfaces</p>\n<h2>Contact information</h2>\n<p><code>nurbspy</code> was developed by <a href=\"https://www.ntnu.edu/employees/roberto.agromayor\" rel=\"nofollow\">Roberto Agromayor</a> under the supervision of Associate Professor <a href=\"https://www.ntnu.edu/employees/lars.nord\" rel=\"nofollow\">Lars O. Nord</a> at the <a href=\"https://www.ntnu.no/\" rel=\"nofollow\">Norwegian University of Science and Technology (NTNU)</a> as part of his PhD on turbomachinery shape optimization. Please, drop us an email to <a href=\"mailto:roberto.agromayor@ntnu.no\">roberto.agromayor@ntnu.no</a> if you have questions about the code or you have a bug to report!</p>\n\n          </div>"}, "last_serial": 7145087, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "43ff791a0fdad57c250656f6c8505e29", "sha256": "29d298e0f59fa6556478dff8ca2df1f5e6413c39c095337bf81c95eb9c09282c"}, "downloads": -1, "filename": "nurbspy-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "43ff791a0fdad57c250656f6c8505e29", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32381, "upload_time": "2020-03-10T07:29:44", "upload_time_iso_8601": "2020-03-10T07:29:44.946987Z", "url": "https://files.pythonhosted.org/packages/97/b3/d809743b9dbe96c309f82e099c03815064afe1cf4fe5c057449147cea027/nurbspy-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a039424cfc1b12b35753fdd1bb4a564", "sha256": "a56bd670d03b1f8bc3ec72a6151b52df64b91731e0ce61f5a569d17047642e6b"}, "downloads": -1, "filename": "nurbspy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5a039424cfc1b12b35753fdd1bb4a564", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28658, "upload_time": "2020-03-10T07:29:47", "upload_time_iso_8601": "2020-03-10T07:29:47.432659Z", "url": "https://files.pythonhosted.org/packages/93/5c/f64050ad64f0d162ab75e5e303bcd6eb728ed5b28aa3999f6ae7b776b637/nurbspy-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "b454025e9eaef97abfcbca2bb0bd7624", "sha256": "45d391eac9ecd630f27fc58186f2ad68221f8fbfe2059c7bb499c7b1ff00aee5"}, "downloads": -1, "filename": "nurbspy-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b454025e9eaef97abfcbca2bb0bd7624", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32405, "upload_time": "2020-03-10T08:36:15", "upload_time_iso_8601": "2020-03-10T08:36:15.684292Z", "url": "https://files.pythonhosted.org/packages/22/69/835cd25216cb754d76447f13d6c9bdfd442a3e431875c2214e96889f480c/nurbspy-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "932d8a9c07caf0ba8675d3e565472903", "sha256": "0a1baa0d444900144e74ee5cffa72be72b272500c4ef2fede903b1e1c1cc1bb5"}, "downloads": -1, "filename": "nurbspy-0.0.2.tar.gz", "has_sig": false, "md5_digest": "932d8a9c07caf0ba8675d3e565472903", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28722, "upload_time": "2020-03-10T08:36:16", "upload_time_iso_8601": "2020-03-10T08:36:16.918191Z", "url": "https://files.pythonhosted.org/packages/64/02/e545ff96034746762a8c1a37a2b2b7bfe25c625493a69c48a2f7ceeb4b62/nurbspy-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ae6b8152f7339e82c20ab82dbe8d4d37", "sha256": "4dc6efaf11ffe71b83fa757773353d140fd3a3d580d31b170ffbde3f4208daf1"}, "downloads": -1, "filename": "nurbspy-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ae6b8152f7339e82c20ab82dbe8d4d37", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32828, "upload_time": "2020-03-10T16:29:15", "upload_time_iso_8601": "2020-03-10T16:29:15.815977Z", "url": "https://files.pythonhosted.org/packages/cc/94/a3b0c1b054cfed72588854a43a3f3690e84758e3d76fa334578a65ee9277/nurbspy-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c04ba227c05540968d6bb856943fafe7", "sha256": "ba250397c7a54ffae95bd2f8b4b24a679e15d8c36f93895480d25ad07e109fcd"}, "downloads": -1, "filename": "nurbspy-0.0.3.tar.gz", "has_sig": false, "md5_digest": "c04ba227c05540968d6bb856943fafe7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 29380, "upload_time": "2020-03-10T16:29:17", "upload_time_iso_8601": "2020-03-10T16:29:17.460236Z", "url": "https://files.pythonhosted.org/packages/26/57/49dbc12258975cc9113d113573ed665a810311af7e8a92cedfcdefbc1c66/nurbspy-0.0.3.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "39c907622fa55104863814af72f37072", "sha256": "0403e82d217f7d791eb5fb4c15aa519bc082fbe57bee6edf8845f89be6ff3cf0"}, "downloads": -1, "filename": "nurbspy-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "39c907622fa55104863814af72f37072", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32865, "upload_time": "2020-03-10T16:56:00", "upload_time_iso_8601": "2020-03-10T16:56:00.563072Z", "url": "https://files.pythonhosted.org/packages/0a/15/ade47d7cc06239f59bb3525dc73fcddfdf8fc571767904bf8be27488e33b/nurbspy-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d80d390cbb368c484cefe4fd12e5496", "sha256": "e1796af9b584baf266b9dd71f5f08ed3a7724af79e2cb7111a21b3b0ab18b26b"}, "downloads": -1, "filename": "nurbspy-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3d80d390cbb368c484cefe4fd12e5496", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28829, "upload_time": "2020-03-10T16:56:01", "upload_time_iso_8601": "2020-03-10T16:56:01.859071Z", "url": "https://files.pythonhosted.org/packages/5b/2a/107462c3d6058a70cd13739f0c3c4572f8282d4bc9949b2a3d70556bff84/nurbspy-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "ce768bf70e1baa0ce61f321382a488a1", "sha256": "4543edb8d075c46defcd53dabff54e3a1476feba51c3c570ce6373bf6db946ee"}, "downloads": -1, "filename": "nurbspy-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ce768bf70e1baa0ce61f321382a488a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32866, "upload_time": "2020-03-10T17:08:55", "upload_time_iso_8601": "2020-03-10T17:08:55.580464Z", "url": "https://files.pythonhosted.org/packages/87/93/ee0b4859bf9e1a8799ed3eb48045dc93deeb7d0e4e5018fa3e3eaee60ee1/nurbspy-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a93b9244932077694ee930af46089137", "sha256": "505e15f6de7ec056d0b5c9caf67b7ee89f49512dcf4bc2b70be86ab1946be067"}, "downloads": -1, "filename": "nurbspy-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a93b9244932077694ee930af46089137", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28824, "upload_time": "2020-03-10T17:08:56", "upload_time_iso_8601": "2020-03-10T17:08:56.926782Z", "url": "https://files.pythonhosted.org/packages/48/b6/64ff2807708fd7525045d7e3a0bad32ecd87aede7c0520037187572d0135/nurbspy-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "1d7fbfddac7d41279f304f160fdf7a97", "sha256": "e7ae8a9c38f9756b74fe47b25a3f0ee2b60a6908eeb58ce648662da8f635399b"}, "downloads": -1, "filename": "nurbspy-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1d7fbfddac7d41279f304f160fdf7a97", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32880, "upload_time": "2020-03-11T13:07:59", "upload_time_iso_8601": "2020-03-11T13:07:59.076789Z", "url": "https://files.pythonhosted.org/packages/87/db/ac2051b61d09e61b79c0851afb6caf91561a59a27e92ccc23fb83fd18338/nurbspy-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1ef590ee673cc7f5474eef4efc7b4ed", "sha256": "f7996906613b3c63b26b766873fafc5858d8ced364933d9e4d41db601ecfe6d0"}, "downloads": -1, "filename": "nurbspy-1.0.2.tar.gz", "has_sig": false, "md5_digest": "c1ef590ee673cc7f5474eef4efc7b4ed", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28311, "upload_time": "2020-03-11T13:08:00", "upload_time_iso_8601": "2020-03-11T13:08:00.777372Z", "url": "https://files.pythonhosted.org/packages/1e/67/8ce0516faec1b6b439b82b4554914d4f3cad05c2d14cf82e5b8e1744e077/nurbspy-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "5b5c5a6a9638e433690d98d047132635", "sha256": "510a7f21745bf86ee9d38aebbda9f20f8eba1745d51998377708e82f243cfa23"}, "downloads": -1, "filename": "nurbspy-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5b5c5a6a9638e433690d98d047132635", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32887, "upload_time": "2020-03-11T13:21:14", "upload_time_iso_8601": "2020-03-11T13:21:14.314778Z", "url": "https://files.pythonhosted.org/packages/f4/66/0e7ea8725fdb783facf2c6ef07c99e32889c4dc15fab83f38a814ab9faec/nurbspy-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff4b968322258a20fc9412e4aff0da7b", "sha256": "100bede73138ad5703db48c02fb051febb95e452ef4ace225ecf9df991be39e0"}, "downloads": -1, "filename": "nurbspy-1.0.3.tar.gz", "has_sig": false, "md5_digest": "ff4b968322258a20fc9412e4aff0da7b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28310, "upload_time": "2020-03-11T13:21:16", "upload_time_iso_8601": "2020-03-11T13:21:16.158748Z", "url": "https://files.pythonhosted.org/packages/c3/5c/8aa21f165b402aa88045a65abfdc6d6df1c1b48de6dc8f1c1ebeddb9778b/nurbspy-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "29777dc52abc30b3ae09f99a2ac6423c", "sha256": "ea98327ec913ffa55e3b480958637174a2e47c3a9589854ecb94fda701f00710"}, "downloads": -1, "filename": "nurbspy-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "29777dc52abc30b3ae09f99a2ac6423c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 32925, "upload_time": "2020-03-25T11:46:18", "upload_time_iso_8601": "2020-03-25T11:46:18.383189Z", "url": "https://files.pythonhosted.org/packages/e2/a5/57973df53e294c2e58b6c7dc888fea677358f083ce25e7cf49109351aaea/nurbspy-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd4c88d79b380cb6eeef57b05704676f", "sha256": "b8db8222756c6a60bf9c5db6e75cd25fcbbe09bd8cda7bc2efb1a885a3e6a247"}, "downloads": -1, "filename": "nurbspy-1.0.4.tar.gz", "has_sig": false, "md5_digest": "cd4c88d79b380cb6eeef57b05704676f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 28934, "upload_time": "2020-03-25T11:46:19", "upload_time_iso_8601": "2020-03-25T11:46:19.720679Z", "url": "https://files.pythonhosted.org/packages/80/ab/a6f320409ba4fe045dad7ff55834aa74051562faf7c11fc3139a85ef98eb/nurbspy-1.0.4.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "8db3cf43d9f35f60c3f05efaf70ebdc6", "sha256": "2fa966529a2567a186068899ad2425653102966dadaccaacc787e753c228b227"}, "downloads": -1, "filename": "nurbspy-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8db3cf43d9f35f60c3f05efaf70ebdc6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 35222, "upload_time": "2020-05-01T13:51:35", "upload_time_iso_8601": "2020-05-01T13:51:35.595797Z", "url": "https://files.pythonhosted.org/packages/94/db/a7e9e01995d5b4c0645b1a66e01f0dd4f4b73d8ad08d14eadbb43a935dc3/nurbspy-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ddc5c492e3a089d3b8cf2b59e586584", "sha256": "32d0f41ced4adc30bd1f9976700eaa0f4ca2578dba858105dc7a1c15fb18f4f0"}, "downloads": -1, "filename": "nurbspy-1.1.0.tar.gz", "has_sig": false, "md5_digest": "4ddc5c492e3a089d3b8cf2b59e586584", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 31541, "upload_time": "2020-05-01T13:51:37", "upload_time_iso_8601": "2020-05-01T13:51:37.033522Z", "url": "https://files.pythonhosted.org/packages/f5/36/f67951ca20ff7171d6c7664f2c5ddc13409ef2d493a54eec5f25bf37435d/nurbspy-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8db3cf43d9f35f60c3f05efaf70ebdc6", "sha256": "2fa966529a2567a186068899ad2425653102966dadaccaacc787e753c228b227"}, "downloads": -1, "filename": "nurbspy-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8db3cf43d9f35f60c3f05efaf70ebdc6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 35222, "upload_time": "2020-05-01T13:51:35", "upload_time_iso_8601": "2020-05-01T13:51:35.595797Z", "url": "https://files.pythonhosted.org/packages/94/db/a7e9e01995d5b4c0645b1a66e01f0dd4f4b73d8ad08d14eadbb43a935dc3/nurbspy-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ddc5c492e3a089d3b8cf2b59e586584", "sha256": "32d0f41ced4adc30bd1f9976700eaa0f4ca2578dba858105dc7a1c15fb18f4f0"}, "downloads": -1, "filename": "nurbspy-1.1.0.tar.gz", "has_sig": false, "md5_digest": "4ddc5c492e3a089d3b8cf2b59e586584", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 31541, "upload_time": "2020-05-01T13:51:37", "upload_time_iso_8601": "2020-05-01T13:51:37.033522Z", "url": "https://files.pythonhosted.org/packages/f5/36/f67951ca20ff7171d6c7664f2c5ddc13409ef2d493a54eec5f25bf37435d/nurbspy-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:07 2020"}