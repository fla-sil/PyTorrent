{"info": {"author": "Luca Cappelletti", "author_email": "cappelletti.luca94@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Information Analysis"], "description": "====\nZIPF\n====\n\n|travis| |coveralls| |sonar_quality| |sonar_maintainability| |code_climate_maintainability| |pip|\n\n--------------------------------------\nWhat does it do?\n--------------------------------------\nThe zipf package was realized to simplify creations and operations with zipf distributions, like sum, subtraction, multiplications, divisions, statical operations such as mean, variance and much more.\n\n--------------------------------------\nHow do I get it?\n--------------------------------------\nJust type into your terminal:\n\n.. code:: shell\n\n    pip install zipf\n\n\n--------------------------------------\nCalculating distances and divergence\n--------------------------------------\nI wrote another package called `dictances`_ which calculates various distances and divergences between discrete distributions such as zipf. Here's an example:\n\n.. code:: python\n\n    from zipf import Zipf\n    from dictances import *\n\n    a = zipf.load(\"my_first_zipf.json\")\n    b = zipf.load(\"my_second_zipf.json\")\n\n    euclidean(a, b)\n    chebyshev(a, b)\n    hamming(a, b)\n    kullback_leibler(a, b)\n    jensen_shannon(a, b)\n\n\n--------------------------------------\nCreating a zipf using a zipf_factory\n--------------------------------------\nHere's a couple of examples:\n\nZipf from a list\n-------------------------\n.. code:: python\n\n    from zipf.factories import ZipfFromList\n\n    my_factory = ZipfFromList()\n    my_zipf = my_factory.run([\"one\", \"one\", \"two\", \"my\", \"oh\", \"my\", 1, 2, 3])\n\n    print(my_zipf)\n\n    '''\n    {\n      \"one\": 0.22222222222222215,\n      \"my\": 0.22222222222222215,\n      \"two\": 0.11111111111111108,\n      \"oh\": 0.11111111111111108,\n      \"1\": 0.11111111111111108,\n      \"2\": 0.11111111111111108,\n      \"3\": 0.11111111111111108\n    }\n    '''\n\n\nZipf from a text\n-------------------------\n.. code:: python\n\n    from zipf.factories import ZipfFromText\n\n    my_factory = ZipfFromText()\n    my_factory.set_word_filter(lambda w: len(w) > 3)\n    my_zipf = my_factory.run(\n        \"\"\"You've got to find what you love.\n           And that is as true for your work as it is for your lovers.\n           Keep looking. Don't settle.\"\"\")\n\n    print(my_zipf)\n\n    '''\n    {\n      \"your\": 0.16666666666666666,\n      \"find\": 0.08333333333333333,\n      \"what\": 0.08333333333333333,\n      \"love\": 0.08333333333333333,\n      \"that\": 0.08333333333333333,\n      \"true\": 0.08333333333333333,\n      \"work\": 0.08333333333333333,\n      \"lovers\": 0.08333333333333333,\n      \"Keep\": 0.08333333333333333,\n      \"looking\": 0.08333333333333333,\n      \"settle\": 0.08333333333333333\n    }\n    '''\n\n\nZipf from a k-sequence\n-------------------------\n.. code:: python\n\n    from zipf.factories import ZipfFromKSequence\n\n    sequence_fraction_len = 5\n    my_factory = ZipfFromKSequence(sequence_fraction_len)\n    my_zipf = my_factory.run(\n        \"ACTGGAAATGATGGDTGATDGATGAGTDGATGGGGGAAAGDTGATDGATDGATGDTGGGGADDDGATAGDTAGTDGAGAGAGDTGATDGAAAGDTG\")\n\n    print(my_zipf)\n\n    '''\n    {\n      \"TGGGG\": 0.1,\n      \"ACTGG\": 0.05,\n      \"AAATG\": 0.05,\n      \"ATGGD\": 0.05,\n      \"TGATD\": 0.05,\n      \"GATGA\": 0.05,\n      \"GTDGA\": 0.05,\n      \"GAAAG\": 0.05,\n      \"DTGAT\": 0.05,\n      \"DGATD\": 0.05,\n      \"GATGD\": 0.05,\n      \"ADDDG\": 0.05,\n      \"ATAGD\": 0.05,\n      \"TAGTD\": 0.05,\n      \"GAGAG\": 0.05,\n      \"AGDTG\": 0.05,\n      \"ATDGA\": 0.05,\n      \"AAGDT\": 0.05,\n      \"G\": 0.05\n    }\n    '''\n\n\n\nZipf from a text file\n-------------------------\n.. code:: python\n\n    from zipf.factories import ZipfFromFile\n\n    my_factory = ZipfFromFile()\n    my_factory.set_word_filter(lambda w: w != \"brown\")\n    my_zipf = my_factory.run()\n\n    print(my_zipf)\n\n    '''\n    {\n      \"The\": 0.125,\n      \"quick\": 0.125,\n      \"fox\": 0.125,\n      \"jumps\": 0.125,\n      \"over\": 0.125,\n      \"the\": 0.125,\n      \"lazy\": 0.125,\n      \"dog\": 0.125\n    }\n    '''\n\n\n\nZipf from webpage\n-------------------------\n.. code:: python\n\n    from zipf.factories import ZipfFromUrl\n    import json\n\n    my_factory = ZipfFromUrl()\n    my_factory.set_word_filter(lambda w: int(w) > 100)\n    my_factory.set_interface(lambda r: json.loads(r.text)[\"ip\"])\n    my_zipf = my_factory.run(\"https://api.ipify.org/?format=json\")\n\n    print(my_zipf)\n\n    '''\n    {\n      \"134\": 0.5,\n      \"165\": 0.5\n    }\n    '''\n\n\n\nZipf from directory\n-------------------------\n.. code:: python\n\n    from zipf.factories import ZipfFromDir\n    import json\n\n    my_factory = ZipfFromDir(use_cli=True)\n    my_factory.set_word_filter(lambda w: len(w) > 4)\n    my_zipf = my_factory.run(\"path/to/my/directory\", [\"txt\"])\n\n    '''\n    My directory contains 2 files with the following texts:\n\n    - You must not lose faith in humanity.\n      Humanity is an ocean; if a few drops of the ocean are dirty,\n      the ocean does not become dirty.\n    - Try not to become a man of success,\n      but rather try to become a man of value.\n    '''\n\n    print(my_zipf)\n\n    '''\n    {\n      \"ocean\": 0.20000000000000004,\n      \"become\": 0.20000000000000004,\n      \"dirty\": 0.13333333333333336,\n      \"faith\": 0.06666666666666668,\n      \"humanity\": 0.06666666666666668,\n      \"Humanity\": 0.06666666666666668,\n      \"drops\": 0.06666666666666668,\n      \"success\": 0.06666666666666668,\n      \"rather\": 0.06666666666666668,\n      \"value\": 0.06666666666666668\n    }\n    '''\n\n\n--------------------------------------\nOptions in creating a zipf\n--------------------------------------\n\nSome built in options are available, and you can read the options of any factory object by printing it:\n\n.. code:: python\n\n    from zipf.zipf.factories import ZipfFromList\n    print(ZipfFromList())\n\n    '''\n    {\n      \"remove_stop_words\": false, # Removes stop words (currently only Italian's)\n      \"minimum_count\": 0, # Removes words that appear less than 'minimum_count'\n      \"chain_min_len\": 1, # Chains up words, starting by a min of 'chain_min_len'\n      \"chain_max_len\": 1, # and ending to a maximum of 'chain_max_len'\n      \"chaining_character\": \" \", # The character to interpose between words\n      \"chain_after_filter\": false, # The chaining is done after filtering\n      \"chain_after_clean\": false # The chaining is done after cleaning\n    }\n    '''\n\n--------------------------------------\nLicense\n--------------------------------------\nThis library is released under MIT license.\n\n.. |travis| image:: https://travis-ci.org/LucaCappelletti94/zipf.png\n   :target: https://travis-ci.org/LucaCappelletti94/zipf\n\n.. |coveralls| image:: https://coveralls.io/repos/github/LucaCappelletti94/zipf/badge.svg?branch=master\n    :target: https://coveralls.io/github/LucaCappelletti94/zipf\n\n.. |sonar_quality| image:: https://sonarcloud.io/api/project_badges/measure?project=zipf.lucacappelletti&metric=alert_status\n    :target: https://sonarcloud.io/dashboard/index/zipf.lucacappelletti\n\n.. |sonar_maintainability| image:: https://sonarcloud.io/api/project_badges/measure?project=zipf.lucacappelletti&metric=sqale_rating\n    :target: https://sonarcloud.io/dashboard/index/zipf.lucacappelletti\n\n.. |pip| image:: https://badge.fury.io/py/zipf.svg\n    :target: https://badge.fury.io/py/zipf\n\n.. |code_climate_maintainability| image:: https://api.codeclimate.com/v1/badges/c758496736a2c9cecbff/maintainability\n   :target: https://codeclimate.com/github/LucaCappelletti94/zipf/maintainability\n   :alt: Maintainability\n\n.. _dictances: https://github.com/LucaCappelletti94/dictances", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LucaCappelletti94/zipf", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "zipf", "package_url": "https://pypi.org/project/zipf/", "platform": "", "project_url": "https://pypi.org/project/zipf/", "project_urls": {"Homepage": "https://github.com/LucaCappelletti94/zipf"}, "release_url": "https://pypi.org/project/zipf/1.6.0/", "requires_dist": null, "requires_python": "", "summary": "A package to create and work with zipf distributions", "version": "1.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/LucaCappelletti94/zipf\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/74d601ebe41f38f920bbcd86b9a7f8202159e6fa/68747470733a2f2f7472617669732d63692e6f72672f4c75636143617070656c6c6574746939342f7a6970662e706e67\"></a> <a href=\"https://coveralls.io/github/LucaCappelletti94/zipf\" rel=\"nofollow\"><img alt=\"coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9ce52577f6ae45303daa19b482091a205668f8dc/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4c75636143617070656c6c6574746939342f7a6970662f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://sonarcloud.io/dashboard/index/zipf.lucacappelletti\" rel=\"nofollow\"><img alt=\"sonar_quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3c63609a71b1105a0eddf35a31147c973908d0c7/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d7a6970662e6c75636163617070656c6c65747469266d65747269633d616c6572745f737461747573\"></a> <a href=\"https://sonarcloud.io/dashboard/index/zipf.lucacappelletti\" rel=\"nofollow\"><img alt=\"sonar_maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/960099e081d2407ab7d4b88f0c3831c96cba21d0/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d7a6970662e6c75636163617070656c6c65747469266d65747269633d7371616c655f726174696e67\"></a> <a href=\"https://codeclimate.com/github/LucaCappelletti94/zipf/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bfcf78f905b72643f3ab1afb55e39c8e7b72b04f/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f63373538343936373336613263396365636266662f6d61696e7461696e6162696c697479\"></a> <a href=\"https://badge.fury.io/py/zipf\" rel=\"nofollow\"><img alt=\"pip\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c16422228fead82069164ad48386fe8ae750c596/68747470733a2f2f62616467652e667572792e696f2f70792f7a6970662e737667\"></a></p>\n<div id=\"what-does-it-do\">\n<h2>What does it do?</h2>\n<p>The zipf package was realized to simplify creations and operations with zipf distributions, like sum, subtraction, multiplications, divisions, statical operations such as mean, variance and much more.</p>\n</div>\n<div id=\"how-do-i-get-it\">\n<h2>How do I get it?</h2>\n<p>Just type into your terminal:</p>\n<pre>pip install zipf\n</pre>\n</div>\n<div id=\"calculating-distances-and-divergence\">\n<h2>Calculating distances and divergence</h2>\n<p>I wrote another package called <a href=\"https://github.com/LucaCappelletti94/dictances\" rel=\"nofollow\">dictances</a> which calculates various distances and divergences between discrete distributions such as zipf. Here\u2019s an example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">zipf</span> <span class=\"kn\">import</span> <span class=\"n\">Zipf</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dictances</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">zipf</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"my_first_zipf.json\"</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">zipf</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"my_second_zipf.json\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">euclidean</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"n\">chebyshev</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"n\">hamming</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"n\">kullback_leibler</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"n\">jensen_shannon</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"creating-a-zipf-using-a-zipf-factory\">\n<h2>Creating a zipf using a zipf_factory</h2>\n<p>Here\u2019s a couple of examples:</p>\n<div id=\"zipf-from-a-list\">\n<h3>Zipf from a list</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">zipf.factories</span> <span class=\"kn\">import</span> <span class=\"n\">ZipfFromList</span>\n\n<span class=\"n\">my_factory</span> <span class=\"o\">=</span> <span class=\"n\">ZipfFromList</span><span class=\"p\">()</span>\n<span class=\"n\">my_zipf</span> <span class=\"o\">=</span> <span class=\"n\">my_factory</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span><span class=\"s2\">\"one\"</span><span class=\"p\">,</span> <span class=\"s2\">\"one\"</span><span class=\"p\">,</span> <span class=\"s2\">\"two\"</span><span class=\"p\">,</span> <span class=\"s2\">\"my\"</span><span class=\"p\">,</span> <span class=\"s2\">\"oh\"</span><span class=\"p\">,</span> <span class=\"s2\">\"my\"</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_zipf</span><span class=\"p\">)</span>\n\n<span class=\"sd\">'''\n{\n  \"one\": 0.22222222222222215,\n  \"my\": 0.22222222222222215,\n  \"two\": 0.11111111111111108,\n  \"oh\": 0.11111111111111108,\n  \"1\": 0.11111111111111108,\n  \"2\": 0.11111111111111108,\n  \"3\": 0.11111111111111108\n}\n'''</span>\n</pre>\n</div>\n<div id=\"zipf-from-a-text\">\n<h3>Zipf from a text</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">zipf.factories</span> <span class=\"kn\">import</span> <span class=\"n\">ZipfFromText</span>\n\n<span class=\"n\">my_factory</span> <span class=\"o\">=</span> <span class=\"n\">ZipfFromText</span><span class=\"p\">()</span>\n<span class=\"n\">my_factory</span><span class=\"o\">.</span><span class=\"n\">set_word_filter</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">my_zipf</span> <span class=\"o\">=</span> <span class=\"n\">my_factory</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span>\n    <span class=\"sd\">\"\"\"You've got to find what you love.\n       And that is as true for your work as it is for your lovers.\n       Keep looking. Don't settle.\"\"\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_zipf</span><span class=\"p\">)</span>\n\n<span class=\"sd\">'''\n{\n  \"your\": 0.16666666666666666,\n  \"find\": 0.08333333333333333,\n  \"what\": 0.08333333333333333,\n  \"love\": 0.08333333333333333,\n  \"that\": 0.08333333333333333,\n  \"true\": 0.08333333333333333,\n  \"work\": 0.08333333333333333,\n  \"lovers\": 0.08333333333333333,\n  \"Keep\": 0.08333333333333333,\n  \"looking\": 0.08333333333333333,\n  \"settle\": 0.08333333333333333\n}\n'''</span>\n</pre>\n</div>\n<div id=\"zipf-from-a-k-sequence\">\n<h3>Zipf from a k-sequence</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">zipf.factories</span> <span class=\"kn\">import</span> <span class=\"n\">ZipfFromKSequence</span>\n\n<span class=\"n\">sequence_fraction_len</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"n\">my_factory</span> <span class=\"o\">=</span> <span class=\"n\">ZipfFromKSequence</span><span class=\"p\">(</span><span class=\"n\">sequence_fraction_len</span><span class=\"p\">)</span>\n<span class=\"n\">my_zipf</span> <span class=\"o\">=</span> <span class=\"n\">my_factory</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"ACTGGAAATGATGGDTGATDGATGAGTDGATGGGGGAAAGDTGATDGATDGATGDTGGGGADDDGATAGDTAGTDGAGAGAGDTGATDGAAAGDTG\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_zipf</span><span class=\"p\">)</span>\n\n<span class=\"sd\">'''\n{\n  \"TGGGG\": 0.1,\n  \"ACTGG\": 0.05,\n  \"AAATG\": 0.05,\n  \"ATGGD\": 0.05,\n  \"TGATD\": 0.05,\n  \"GATGA\": 0.05,\n  \"GTDGA\": 0.05,\n  \"GAAAG\": 0.05,\n  \"DTGAT\": 0.05,\n  \"DGATD\": 0.05,\n  \"GATGD\": 0.05,\n  \"ADDDG\": 0.05,\n  \"ATAGD\": 0.05,\n  \"TAGTD\": 0.05,\n  \"GAGAG\": 0.05,\n  \"AGDTG\": 0.05,\n  \"ATDGA\": 0.05,\n  \"AAGDT\": 0.05,\n  \"G\": 0.05\n}\n'''</span>\n</pre>\n</div>\n<div id=\"zipf-from-a-text-file\">\n<h3>Zipf from a text file</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">zipf.factories</span> <span class=\"kn\">import</span> <span class=\"n\">ZipfFromFile</span>\n\n<span class=\"n\">my_factory</span> <span class=\"o\">=</span> <span class=\"n\">ZipfFromFile</span><span class=\"p\">()</span>\n<span class=\"n\">my_factory</span><span class=\"o\">.</span><span class=\"n\">set_word_filter</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"n\">w</span> <span class=\"o\">!=</span> <span class=\"s2\">\"brown\"</span><span class=\"p\">)</span>\n<span class=\"n\">my_zipf</span> <span class=\"o\">=</span> <span class=\"n\">my_factory</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_zipf</span><span class=\"p\">)</span>\n\n<span class=\"sd\">'''\n{\n  \"The\": 0.125,\n  \"quick\": 0.125,\n  \"fox\": 0.125,\n  \"jumps\": 0.125,\n  \"over\": 0.125,\n  \"the\": 0.125,\n  \"lazy\": 0.125,\n  \"dog\": 0.125\n}\n'''</span>\n</pre>\n</div>\n<div id=\"zipf-from-webpage\">\n<h3>Zipf from webpage</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">zipf.factories</span> <span class=\"kn\">import</span> <span class=\"n\">ZipfFromUrl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"n\">my_factory</span> <span class=\"o\">=</span> <span class=\"n\">ZipfFromUrl</span><span class=\"p\">()</span>\n<span class=\"n\">my_factory</span><span class=\"o\">.</span><span class=\"n\">set_word_filter</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">my_factory</span><span class=\"o\">.</span><span class=\"n\">set_interface</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">r</span><span class=\"p\">:</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)[</span><span class=\"s2\">\"ip\"</span><span class=\"p\">])</span>\n<span class=\"n\">my_zipf</span> <span class=\"o\">=</span> <span class=\"n\">my_factory</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s2\">\"https://api.ipify.org/?format=json\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_zipf</span><span class=\"p\">)</span>\n\n<span class=\"sd\">'''\n{\n  \"134\": 0.5,\n  \"165\": 0.5\n}\n'''</span>\n</pre>\n</div>\n<div id=\"zipf-from-directory\">\n<h3>Zipf from directory</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">zipf.factories</span> <span class=\"kn\">import</span> <span class=\"n\">ZipfFromDir</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"n\">my_factory</span> <span class=\"o\">=</span> <span class=\"n\">ZipfFromDir</span><span class=\"p\">(</span><span class=\"n\">use_cli</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">my_factory</span><span class=\"o\">.</span><span class=\"n\">set_word_filter</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">my_zipf</span> <span class=\"o\">=</span> <span class=\"n\">my_factory</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s2\">\"path/to/my/directory\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"txt\"</span><span class=\"p\">])</span>\n\n<span class=\"sd\">'''\nMy directory contains 2 files with the following texts:\n\n- You must not lose faith in humanity.\n  Humanity is an ocean; if a few drops of the ocean are dirty,\n  the ocean does not become dirty.\n- Try not to become a man of success,\n  but rather try to become a man of value.\n'''</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_zipf</span><span class=\"p\">)</span>\n\n<span class=\"sd\">'''\n{\n  \"ocean\": 0.20000000000000004,\n  \"become\": 0.20000000000000004,\n  \"dirty\": 0.13333333333333336,\n  \"faith\": 0.06666666666666668,\n  \"humanity\": 0.06666666666666668,\n  \"Humanity\": 0.06666666666666668,\n  \"drops\": 0.06666666666666668,\n  \"success\": 0.06666666666666668,\n  \"rather\": 0.06666666666666668,\n  \"value\": 0.06666666666666668\n}\n'''</span>\n</pre>\n</div>\n</div>\n<div id=\"options-in-creating-a-zipf\">\n<h2>Options in creating a zipf</h2>\n<p>Some built in options are available, and you can read the options of any factory object by printing it:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">zipf.zipf.factories</span> <span class=\"kn\">import</span> <span class=\"n\">ZipfFromList</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ZipfFromList</span><span class=\"p\">())</span>\n\n<span class=\"sd\">'''\n{\n  \"remove_stop_words\": false, # Removes stop words (currently only Italian's)\n  \"minimum_count\": 0, # Removes words that appear less than 'minimum_count'\n  \"chain_min_len\": 1, # Chains up words, starting by a min of 'chain_min_len'\n  \"chain_max_len\": 1, # and ending to a maximum of 'chain_max_len'\n  \"chaining_character\": \" \", # The character to interpose between words\n  \"chain_after_filter\": false, # The chaining is done after filtering\n  \"chain_after_clean\": false # The chaining is done after cleaning\n}\n'''</span>\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This library is released under MIT license.</p>\n</div>\n\n          </div>"}, "last_serial": 3938422, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "5e14a732bb25411a31f932a9894ee369", "sha256": "6e85e7cdce4fd635b69617b327169f91886ee8df31272c4e0226697f170a1907"}, "downloads": -1, "filename": "zipf-1.0.0.tar.gz", "has_sig": false, "md5_digest": "5e14a732bb25411a31f932a9894ee369", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10233, "upload_time": "2018-04-22T20:03:43", "upload_time_iso_8601": "2018-04-22T20:03:43.770301Z", "url": "https://files.pythonhosted.org/packages/08/ac/109763be5c14ff68d19adc09bd96e5e3a8aa6b0a6b4f1b4611ceeb725f9a/zipf-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "d5e4e825719e357f71c6f700c13a7258", "sha256": "c4e94df8ed94806dc1c91813692bdd7b02a90083470fb3f5a1e8b0fac20feafc"}, "downloads": -1, "filename": "zipf-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d5e4e825719e357f71c6f700c13a7258", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10228, "upload_time": "2018-04-22T20:15:02", "upload_time_iso_8601": "2018-04-22T20:15:02.448343Z", "url": "https://files.pythonhosted.org/packages/92/d7/0e3d0ce7bd7ff9e8ed98ded0a6586b63be168066b63cbfbf28be132caf18/zipf-1.0.1.tar.gz", "yanked": false}], "1.0.10": [{"comment_text": "", "digests": {"md5": "ea4305c9fcc4bdf404a945e4b81aced7", "sha256": "22b2c26ec62c627738515f459f3886226f9acb4d497867f99c34529f2a466c61"}, "downloads": -1, "filename": "zipf-1.0.10.tar.gz", "has_sig": false, "md5_digest": "ea4305c9fcc4bdf404a945e4b81aced7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11282, "upload_time": "2018-04-26T20:36:42", "upload_time_iso_8601": "2018-04-26T20:36:42.748489Z", "url": "https://files.pythonhosted.org/packages/e6/31/bb4c33aa95d28fd41e948b28986386c8cc7a7f33c8c20f563cabba575fb7/zipf-1.0.10.tar.gz", "yanked": false}], "1.0.11": [{"comment_text": "", "digests": {"md5": "3f6a94491b4682000bc517833cb911f1", "sha256": "d38836239d3c6a1faac8e46cec4db009774bc183c47977a579272f2490295184"}, "downloads": -1, "filename": "zipf-1.0.11.tar.gz", "has_sig": false, "md5_digest": "3f6a94491b4682000bc517833cb911f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11303, "upload_time": "2018-04-26T20:50:54", "upload_time_iso_8601": "2018-04-26T20:50:54.692158Z", "url": "https://files.pythonhosted.org/packages/c9/c2/c2028271772e6e2e2e0e91ff4dcc1056b5c3a8066bf388deff3c0ab42c8c/zipf-1.0.11.tar.gz", "yanked": false}], "1.0.12": [{"comment_text": "", "digests": {"md5": "2303c45b8fa3b8027e46e694c6cdfc8b", "sha256": "b3d047f5081453faab6f5a38f32c123b24fe47947025e8636322ead01249374b"}, "downloads": -1, "filename": "zipf-1.0.12.tar.gz", "has_sig": false, "md5_digest": "2303c45b8fa3b8027e46e694c6cdfc8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11347, "upload_time": "2018-04-28T06:52:29", "upload_time_iso_8601": "2018-04-28T06:52:29.710601Z", "url": "https://files.pythonhosted.org/packages/7e/7c/5ba9da0ac3bef1ee2a94eeebee8e6a1a2e1143100b893e514f23cc28e7b1/zipf-1.0.12.tar.gz", "yanked": false}], "1.0.13": [{"comment_text": "", "digests": {"md5": "e897cb9458f385be1f19e6c5670ef409", "sha256": "5629d80c0d2de222f1fb24188333011ba7944b110e09059b402554f9f4fe807e"}, "downloads": -1, "filename": "zipf-1.0.13.tar.gz", "has_sig": false, "md5_digest": "e897cb9458f385be1f19e6c5670ef409", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11385, "upload_time": "2018-04-28T07:17:37", "upload_time_iso_8601": "2018-04-28T07:17:37.240626Z", "url": "https://files.pythonhosted.org/packages/f9/65/ed26eec3354cacd4e6a4e0a431ee3258a6b0137ff9698dcb0108b4c745b7/zipf-1.0.13.tar.gz", "yanked": false}], "1.0.14": [{"comment_text": "", "digests": {"md5": "658596f15c5c3599f58b9f03fd41c6f0", "sha256": "3b8e7e60660f5338b23280cdbe638f11455b90e277e3fc554f3ffb5803a1ead8"}, "downloads": -1, "filename": "zipf-1.0.14.tar.gz", "has_sig": false, "md5_digest": "658596f15c5c3599f58b9f03fd41c6f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11755, "upload_time": "2018-05-02T08:54:53", "upload_time_iso_8601": "2018-05-02T08:54:53.134145Z", "url": "https://files.pythonhosted.org/packages/32/5c/c7c2760d61f218bd42c007ed6ffcfa6669b6e44db12bdf2b496d1bf452d6/zipf-1.0.14.tar.gz", "yanked": false}], "1.0.15": [{"comment_text": "", "digests": {"md5": "f65723c7e0d59b6d94c611598f055593", "sha256": "1d3043c653f80c3364f091e975edf9b77c6f1cab9aa2df07183baab22f93257b"}, "downloads": -1, "filename": "zipf-1.0.15.tar.gz", "has_sig": false, "md5_digest": "f65723c7e0d59b6d94c611598f055593", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11761, "upload_time": "2018-05-02T19:21:47", "upload_time_iso_8601": "2018-05-02T19:21:47.254578Z", "url": "https://files.pythonhosted.org/packages/02/8a/64b94e4c9c8ceb92ce301ab3f9d2ec3f1713d45e81e17ed955028c9eeaef/zipf-1.0.15.tar.gz", "yanked": false}], "1.0.16": [{"comment_text": "", "digests": {"md5": "a0bcb4fb76cbb39a8a116fa8873ce361", "sha256": "3dc737e5ed58faec82eed8a4f846ef4778922a884f7ec009683e00583bcad45f"}, "downloads": -1, "filename": "zipf-1.0.16.tar.gz", "has_sig": false, "md5_digest": "a0bcb4fb76cbb39a8a116fa8873ce361", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11758, "upload_time": "2018-05-02T20:34:00", "upload_time_iso_8601": "2018-05-02T20:34:00.429778Z", "url": "https://files.pythonhosted.org/packages/73/94/b56a4917c1f0a738cf8ea5dd8564ef7d3ab469c6b8cd4a803a33979f6997/zipf-1.0.16.tar.gz", "yanked": false}], "1.0.17": [{"comment_text": "", "digests": {"md5": "2657dd3f4bfd08c1c6724fcaf63b6b0a", "sha256": "2cbef0e79adbc5629bce2c62e9bcd9936c4aa6eb2388b4b121bdb7dd12438ef0"}, "downloads": -1, "filename": "zipf-1.0.17.tar.gz", "has_sig": false, "md5_digest": "2657dd3f4bfd08c1c6724fcaf63b6b0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11783, "upload_time": "2018-05-02T20:54:02", "upload_time_iso_8601": "2018-05-02T20:54:02.284822Z", "url": "https://files.pythonhosted.org/packages/88/33/47570ac864802ebb0458b265e70bd0df7927d27f99a972e8037f191898a3/zipf-1.0.17.tar.gz", "yanked": false}], "1.0.18": [{"comment_text": "", "digests": {"md5": "91c62e5903baccc879fb85fb9f939d13", "sha256": "827b039dd6b8c3e2aeaf3fcb12bf3086e599926af8f71b2b27fb721097a5ec15"}, "downloads": -1, "filename": "zipf-1.0.18.tar.gz", "has_sig": false, "md5_digest": "91c62e5903baccc879fb85fb9f939d13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14010, "upload_time": "2018-05-02T21:07:25", "upload_time_iso_8601": "2018-05-02T21:07:25.162728Z", "url": "https://files.pythonhosted.org/packages/a2/c4/3d628d6c60e1e18398bafa308db1c65615a7f4f7d538cb0e837827f18c6e/zipf-1.0.18.tar.gz", "yanked": false}], "1.0.19": [{"comment_text": "", "digests": {"md5": "6cc669a33a0edbeb72552cb44bc5f3c5", "sha256": "5aac4e104569ed0e0714a7fe56b3cc41fda8782685d1f443805779269ed45cb9"}, "downloads": -1, "filename": "zipf-1.0.19.tar.gz", "has_sig": false, "md5_digest": "6cc669a33a0edbeb72552cb44bc5f3c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14005, "upload_time": "2018-05-02T21:14:24", "upload_time_iso_8601": "2018-05-02T21:14:24.510499Z", "url": "https://files.pythonhosted.org/packages/f3/1b/bd981b3922af6dba9dbcd863263c029b85a774b783bb3cd27dc13657fa6f/zipf-1.0.19.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "e8ae834656ff12f261a0b47c77703cfc", "sha256": "8dc71da3af8fda29e047d9f1b0958efd41b7b414eef66952247834c1064f7ae7"}, "downloads": -1, "filename": "zipf-1.0.2.tar.gz", "has_sig": false, "md5_digest": "e8ae834656ff12f261a0b47c77703cfc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10219, "upload_time": "2018-04-23T05:21:32", "upload_time_iso_8601": "2018-04-23T05:21:32.054542Z", "url": "https://files.pythonhosted.org/packages/13/bf/10bd3c08bca3ad70de19ee0369d4ba34182f59e5a730f52b6d4bff8e2c1e/zipf-1.0.2.tar.gz", "yanked": false}], "1.0.20": [{"comment_text": "", "digests": {"md5": "6f8893a488dff91e8010d202cf25101e", "sha256": "5c06f2f87fec3f558afe91afb60c70412fea18ee53d605bde0c6a5eb1a72e060"}, "downloads": -1, "filename": "zipf-1.0.20.tar.gz", "has_sig": false, "md5_digest": "6f8893a488dff91e8010d202cf25101e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13983, "upload_time": "2018-05-03T08:29:16", "upload_time_iso_8601": "2018-05-03T08:29:16.740570Z", "url": "https://files.pythonhosted.org/packages/3a/29/d62c6e85cf059839e182502e1a4ec707d99f4240036010f080d62a42ae94/zipf-1.0.20.tar.gz", "yanked": false}], "1.0.21": [{"comment_text": "", "digests": {"md5": "f88659118ce2d58a7a6f624e120c68ab", "sha256": "15345a93da73183385e0caf908d0edca9f35312ce9dcdd7929c6d1679357225f"}, "downloads": -1, "filename": "zipf-1.0.21.tar.gz", "has_sig": false, "md5_digest": "f88659118ce2d58a7a6f624e120c68ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13982, "upload_time": "2018-05-03T08:34:38", "upload_time_iso_8601": "2018-05-03T08:34:38.330383Z", "url": "https://files.pythonhosted.org/packages/0b/45/4f0abec21440c0c72f64086875fb7ad9eab03ab2ea80329f2d71efb775d9/zipf-1.0.21.tar.gz", "yanked": false}], "1.0.22": [{"comment_text": "", "digests": {"md5": "ec85a2c6ef559c47e81770f8f2466538", "sha256": "517f9d8f38fd7d3b487a3e49c094461d5c2d90d17a627ce98f7191de3693b349"}, "downloads": -1, "filename": "zipf-1.0.22.tar.gz", "has_sig": false, "md5_digest": "ec85a2c6ef559c47e81770f8f2466538", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13982, "upload_time": "2018-05-03T08:56:22", "upload_time_iso_8601": "2018-05-03T08:56:22.924424Z", "url": "https://files.pythonhosted.org/packages/08/ca/61a010e23d74ee2e0c936ca847368f54add99dda35921ad3aad4738a5484/zipf-1.0.22.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "e64876eb5b2b81fb95b4724dbaf0a1b9", "sha256": "677d601648c95d43b84264d725c13ca05366854a1ca0f08a60f6976523843a46"}, "downloads": -1, "filename": "zipf-1.0.4.tar.gz", "has_sig": false, "md5_digest": "e64876eb5b2b81fb95b4724dbaf0a1b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10473, "upload_time": "2018-04-23T05:38:34", "upload_time_iso_8601": "2018-04-23T05:38:34.386168Z", "url": "https://files.pythonhosted.org/packages/f6/2f/8f6644c6c0181ba6bf3d364a84ade96a000c7108c0cf0125ab046b5799f4/zipf-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "d72675fa0f85a823c1fe7686e39fb436", "sha256": "cc97a41e96b95ba389ba1988940350429dbf04446f7e55f485c59d3d8a730e87"}, "downloads": -1, "filename": "zipf-1.0.5.tar.gz", "has_sig": false, "md5_digest": "d72675fa0f85a823c1fe7686e39fb436", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10499, "upload_time": "2018-04-23T05:39:57", "upload_time_iso_8601": "2018-04-23T05:39:57.431868Z", "url": "https://files.pythonhosted.org/packages/af/1b/c30ae2e8efaf30c8657dc5e34cac8f4131db5dcc490fa229617a7204dd16/zipf-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "734cc9adb058e86ec9465cc9f77eb4fb", "sha256": "6208a9734c8affdca0e6353289f393ea5960f87321e930363b6c7b2a242ddf6b"}, "downloads": -1, "filename": "zipf-1.0.6.tar.gz", "has_sig": false, "md5_digest": "734cc9adb058e86ec9465cc9f77eb4fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10500, "upload_time": "2018-04-23T05:40:12", "upload_time_iso_8601": "2018-04-23T05:40:12.577853Z", "url": "https://files.pythonhosted.org/packages/a6/e4/71aa944f9606640f9d061e2c350d0e5063ca817301c990525f2e8e093bf7/zipf-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "87e398603203f7f7c73131c1218ebc25", "sha256": "30f97035fd6571ef1578113bf02af15a92e307b1c34669908f9911791631e657"}, "downloads": -1, "filename": "zipf-1.0.7.tar.gz", "has_sig": false, "md5_digest": "87e398603203f7f7c73131c1218ebc25", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10611, "upload_time": "2018-04-23T05:51:53", "upload_time_iso_8601": "2018-04-23T05:51:53.070562Z", "url": "https://files.pythonhosted.org/packages/09/94/fc5f843d1ec092e8d72326f89b8820f172b802a3b3178b36f83367cc906c/zipf-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "a846627f62c06a2780a15c06015308ed", "sha256": "794948e1bd1704d6454759c01c3284b3dd30f6566b9a2876905831a02cf04567"}, "downloads": -1, "filename": "zipf-1.0.8.tar.gz", "has_sig": false, "md5_digest": "a846627f62c06a2780a15c06015308ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11203, "upload_time": "2018-04-24T06:14:38", "upload_time_iso_8601": "2018-04-24T06:14:38.720803Z", "url": "https://files.pythonhosted.org/packages/8d/92/803ec40af82bef63fef7fcdcaa56a22f44d5593c6445c809576ee7f54990/zipf-1.0.8.tar.gz", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "2aaf1ea727c814af85fb926c324de880", "sha256": "ae684638a34cc4d30bd6b791fc187fedef3c2050f413cc47174673b1ef842fa1"}, "downloads": -1, "filename": "zipf-1.0.9.tar.gz", "has_sig": false, "md5_digest": "2aaf1ea727c814af85fb926c324de880", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11189, "upload_time": "2018-04-24T06:15:23", "upload_time_iso_8601": "2018-04-24T06:15:23.321014Z", "url": "https://files.pythonhosted.org/packages/28/dd/e69bfc1516ae71d8b8602016526ffba7acf4e0f3eb5e1a7ee1709f4438de/zipf-1.0.9.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "9ebb3d1fc772635e9fbaae3315b38313", "sha256": "ee00fcd1655924c288f63f696b7e2169d174e9067a0915face749d56d5d776b5"}, "downloads": -1, "filename": "zipf-1.1.0.tar.gz", "has_sig": false, "md5_digest": "9ebb3d1fc772635e9fbaae3315b38313", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15636, "upload_time": "2018-05-17T17:32:42", "upload_time_iso_8601": "2018-05-17T17:32:42.581047Z", "url": "https://files.pythonhosted.org/packages/4d/e7/30149181f58060c12dd133b94d6b9365a2d13f382f9edd4c38c6af2d28dc/zipf-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "be00b01cf4eee4c47ae527dbe8538d34", "sha256": "4746015cb4ba6d0e65a8f6e2331503ba81beeefcc91a266b3bd6e90b6b42186f"}, "downloads": -1, "filename": "zipf-1.2.0.tar.gz", "has_sig": false, "md5_digest": "be00b01cf4eee4c47ae527dbe8538d34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15824, "upload_time": "2018-05-18T16:23:02", "upload_time_iso_8601": "2018-05-18T16:23:02.793546Z", "url": "https://files.pythonhosted.org/packages/80/e0/49f0f916056a8b543a6c40940e6ce6f005171b560f48ac0ae734fe9f85ee/zipf-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "0b7b7177a11699a095dd5802d607127b", "sha256": "59337853a5344a82e0e6f2cd499fd3dfbb06e327e2822911ec478f6ff12ccbb3"}, "downloads": -1, "filename": "zipf-1.2.1.tar.gz", "has_sig": false, "md5_digest": "0b7b7177a11699a095dd5802d607127b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15827, "upload_time": "2018-05-18T16:47:13", "upload_time_iso_8601": "2018-05-18T16:47:13.886975Z", "url": "https://files.pythonhosted.org/packages/48/27/90ff83beb404f122d3f042e5c4296dfe886ead8542542d5709d3cb064257/zipf-1.2.1.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "6a31ff999bfe5e7796aa15698efcbf2d", "sha256": "063f23d74614b5a664acde7d3cf43da00f8511a48edd855602d815996bba2a66"}, "downloads": -1, "filename": "zipf-1.4.0.tar.gz", "has_sig": false, "md5_digest": "6a31ff999bfe5e7796aa15698efcbf2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15630, "upload_time": "2018-05-23T10:01:00", "upload_time_iso_8601": "2018-05-23T10:01:00.855057Z", "url": "https://files.pythonhosted.org/packages/ec/2d/0bed5fe44d6f23bd0415e3e934d768a8f0c43309c7813dee717fa1798bb6/zipf-1.4.0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "610deb64152a31194cffb5a149dd7cc9", "sha256": "755d1b6ed21886726ea039c7ef41d197eda7176cc39d7130101b35a1b2b15531"}, "downloads": -1, "filename": "zipf-1.5.0.tar.gz", "has_sig": false, "md5_digest": "610deb64152a31194cffb5a149dd7cc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15628, "upload_time": "2018-05-31T09:31:51", "upload_time_iso_8601": "2018-05-31T09:31:51.250926Z", "url": "https://files.pythonhosted.org/packages/c0/61/f36f067013b326ee400513dc541ea13da43c7f0898255ebdc7f5838b712a/zipf-1.5.0.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "c17e3b037b2a19615028c0da2810c91f", "sha256": "a25e464c1bbcb38679c0eaccf2f99f7cfbd694da8f0dced8b712fac25b319a60"}, "downloads": -1, "filename": "zipf-1.6.0.tar.gz", "has_sig": false, "md5_digest": "c17e3b037b2a19615028c0da2810c91f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20364, "upload_time": "2018-06-07T06:13:13", "upload_time_iso_8601": "2018-06-07T06:13:13.326986Z", "url": "https://files.pythonhosted.org/packages/c9/24/bc2552f5b69386a2067b924564575b2150759ca46cf8689157f8b906e049/zipf-1.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c17e3b037b2a19615028c0da2810c91f", "sha256": "a25e464c1bbcb38679c0eaccf2f99f7cfbd694da8f0dced8b712fac25b319a60"}, "downloads": -1, "filename": "zipf-1.6.0.tar.gz", "has_sig": false, "md5_digest": "c17e3b037b2a19615028c0da2810c91f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20364, "upload_time": "2018-06-07T06:13:13", "upload_time_iso_8601": "2018-06-07T06:13:13.326986Z", "url": "https://files.pythonhosted.org/packages/c9/24/bc2552f5b69386a2067b924564575b2150759ca46cf8689157f8b906e049/zipf-1.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:03 2020"}