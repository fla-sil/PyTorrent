{"info": {"author": "Tom De Smedt, Frederik De Bleser", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: MacOS X", "Environment :: Win32 (MS Windows)", "Environment :: X11 Applications", "Intended Audience :: Developers", "Intended Audience :: Education", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Topic :: Artistic Software", "Topic :: Games/Entertainment", "Topic :: Multimedia :: Graphics", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "NodeBox for OpenGL\n==================\n\nNodeBox for OpenGL is a Python module for creating 2D interactive visuals using OpenGL. It is based on the command set of the classic NodeBox for Mac OS X (http://nodebox.net). It has support for Bezier paths, text, image filters (blur, bloom, ...), offscreen rendering, animation & motion tweening, and simple 2D physics. Its purpose is to implement a small game engine for \"City In A Bottle\" (http://cityinabottle.org).\n\nVERSION\n=======\n\n1.7\n\nLICENSE\n=======\n\nBSD, see LICENSE.txt for further details.\n\nREQUIREMENTS\n============\n\nNodeBox for OpenGL is built on the excellent Pyglet module. It works on all platforms if you have Python and Pyglet installed. Note: on Mac OS 10.5, Python is already installed. On Mac OS X 10.6+ (Snow Leopard), you need to install a 32-bit version of Python (Pyglet won't work as expected with the preinstalled 64-bit version).\n\n- Python 2.5-6 : an installer can be downloaded from http://www.python.org/download/\n- Pyglet 1.4+  : an installer can be downloaded from http://www.pyglet.org/\n\nYour video hardware needs support for OpenGL 2.0.\nIf this is not the case, try updating to a new driver.\n\nINSTALLATION\n============\n\nTo be able to import NodeBox in your scripts, Python needs to know where the module is located. \nThere are three basic ways to accomplish this:\n\n- Put the nodebox/ folder in the same folder as your script.\n- Put the nodebox/ folder in the standard location for modules so it is available to all scripts.\n  The standard location depends on your operating system, for example:\n  /Library/Python/2.5/site-packages/ on Mac,\n  /usr/lib/python2.5/site-packages/ on Unix,\n  c:\\python25\\Lib\\site-packages\\ on Windows.\n- In your script, add the location of NodeBox to sys.path, before importing it:\n  >>> MODULE = '/users/tom/python/nodebox'\n  >>> import sys; if MODULE not in sys.path: sys.path.append(MODULE)\n  >>> import nodebox\n\nIf you get an \"import pyglet\" error, make sure that Pyglet is installed in site-packages/ too.\n\nBinaries:\nNodeBox contains C extensions for faster mathematics. \nThese are precompiled for Mac, on other systems you need to execute \"python setup.py\" in nodebox/ext/ manually.\nPsyco (http://psyco.sourceforge.net/) can boost performance as well (if you use a 32-bit Python).\nA version precompiled for Mac is included in nodebox/ext/.\n\nUSAGE\n=====\n\n- For users coming from NodeBox for Mac OS X, or NodeBox 2: this NodeBox for OpenGL does not have a built-in code editor. You can use the IDLE editor bundled with Python. On Mac OS X, we prefer TextMate (http://macromates.com).\n- From the command line, you can run a script with: python example.py (or command-R in TextMate)\n- This will open an application window with the output of your script.\n\nHere is a simple NodeBox script:\n\n>>> from nodebox.graphics import *\n>>> def draw(canvas):\n>>>     canvas.clear()\n>>>     translate(250, 250)\n>>>     rotate(canvas.frame)\n>>>     rect(x=-50, y=-50, width=100, height=100)\n>>> canvas.size = 500, 500\n>>> canvas.run(draw)\n\nIt imports the nodebox.graphics module with the standard set of drawing commands. It defines a draw() function and attaches it to the canvas, so that it will be drawn each animation frame. It opens the main application window with canvas.run().\n\nDOCUMENTATION\n=============\n\nhttp://cityinabottle.org/nodebox\n\nACKNOWLEDGEMENTS\n================\n\nAuthors: \n- Tom De Smedt (tom@organisms.be)\n- Frederik De Bleser (frederik@burocrazy.com)\n\nContributing authors:\n- Lieven Menschaert\n- Giorgio Olivero\n\nCity In A Bottle:\n- Nicolas Marinus\n- Ludivine Lechat\n- Tim Vets\n- Frederik De Bleser\n- Tom De Smedt\n\nCopyright (c) 2008 City In A Bottle", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.cityinabottle.org/nodebox/", "keywords": "2d graphics sound physics games multimedia", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "nodebox-opengl", "package_url": "https://pypi.org/project/nodebox-opengl/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/nodebox-opengl/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.cityinabottle.org/nodebox/"}, "release_url": "https://pypi.org/project/nodebox-opengl/1.6.1/", "requires_dist": null, "requires_python": null, "summary": "NodeBox for OpenGL is a free, cross-platform library for generating 2D animations with Python programming code.", "version": "1.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"nodebox-for-opengl\">\n<h2>NodeBox for OpenGL</h2>\n<p>NodeBox for OpenGL is a Python module for creating 2D interactive visuals using OpenGL. It is based on the command set of the classic NodeBox for Mac OS X (<a href=\"http://nodebox.net\" rel=\"nofollow\">http://nodebox.net</a>). It has support for Bezier paths, text, image filters (blur, bloom, \u2026), offscreen rendering, animation &amp; motion tweening, and simple 2D physics. Its purpose is to implement a small game engine for \u201cCity In A Bottle\u201d (<a href=\"http://cityinabottle.org\" rel=\"nofollow\">http://cityinabottle.org</a>).</p>\n</div>\n<div id=\"version\">\n<h2>VERSION</h2>\n<p>1.7</p>\n</div>\n<div id=\"license\">\n<h2>LICENSE</h2>\n<p>BSD, see LICENSE.txt for further details.</p>\n</div>\n<div id=\"requirements\">\n<h2>REQUIREMENTS</h2>\n<p>NodeBox for OpenGL is built on the excellent Pyglet module. It works on all platforms if you have Python and Pyglet installed. Note: on Mac OS 10.5, Python is already installed. On Mac OS X 10.6+ (Snow Leopard), you need to install a 32-bit version of Python (Pyglet won\u2019t work as expected with the preinstalled 64-bit version).</p>\n<ul>\n<li>Python 2.5-6 : an installer can be downloaded from <a href=\"http://www.python.org/download/\" rel=\"nofollow\">http://www.python.org/download/</a></li>\n<li>Pyglet 1.4+  : an installer can be downloaded from <a href=\"http://www.pyglet.org/\" rel=\"nofollow\">http://www.pyglet.org/</a></li>\n</ul>\n<p>Your video hardware needs support for OpenGL 2.0.\nIf this is not the case, try updating to a new driver.</p>\n</div>\n<div id=\"installation\">\n<h2>INSTALLATION</h2>\n<p>To be able to import NodeBox in your scripts, Python needs to know where the module is located.\nThere are three basic ways to accomplish this:</p>\n<ul>\n<li>Put the nodebox/ folder in the same folder as your script.</li>\n<li>Put the nodebox/ folder in the standard location for modules so it is available to all scripts.\nThe standard location depends on your operating system, for example:\n/Library/Python/2.5/site-packages/ on Mac,\n/usr/lib/python2.5/site-packages/ on Unix,\nc:python25Libsite-packageson Windows.</li>\n<li>In your script, add the location of NodeBox to sys.path, before importing it:\n&gt;&gt;&gt; MODULE = \u2018/users/tom/python/nodebox\u2019\n&gt;&gt;&gt; import sys; if MODULE not in sys.path: sys.path.append(MODULE)\n&gt;&gt;&gt; import nodebox</li>\n</ul>\n<p>If you get an \u201cimport pyglet\u201d error, make sure that Pyglet is installed in site-packages/ too.</p>\n<p>Binaries:\nNodeBox contains C extensions for faster mathematics.\nThese are precompiled for Mac, on other systems you need to execute \u201cpython setup.py\u201d in nodebox/ext/ manually.\nPsyco (<a href=\"http://psyco.sourceforge.net/\" rel=\"nofollow\">http://psyco.sourceforge.net/</a>) can boost performance as well (if you use a 32-bit Python).\nA version precompiled for Mac is included in nodebox/ext/.</p>\n</div>\n<div id=\"usage\">\n<h2>USAGE</h2>\n<ul>\n<li>For users coming from NodeBox for Mac OS X, or NodeBox 2: this NodeBox for OpenGL does not have a built-in code editor. You can use the IDLE editor bundled with Python. On Mac OS X, we prefer TextMate (<a href=\"http://macromates.com\" rel=\"nofollow\">http://macromates.com</a>).</li>\n<li>From the command line, you can run a script with: python example.py (or command-R in TextMate)</li>\n<li>This will open an application window with the output of your script.</li>\n</ul>\n<p>Here is a simple NodeBox script:</p>\n<pre>&gt;&gt;&gt; from nodebox.graphics import *\n&gt;&gt;&gt; def draw(canvas):\n&gt;&gt;&gt;     canvas.clear()\n&gt;&gt;&gt;     translate(250, 250)\n&gt;&gt;&gt;     rotate(canvas.frame)\n&gt;&gt;&gt;     rect(x=-50, y=-50, width=100, height=100)\n&gt;&gt;&gt; canvas.size = 500, 500\n&gt;&gt;&gt; canvas.run(draw)\n</pre>\n<p>It imports the nodebox.graphics module with the standard set of drawing commands. It defines a draw() function and attaches it to the canvas, so that it will be drawn each animation frame. It opens the main application window with canvas.run().</p>\n</div>\n<div id=\"documentation\">\n<h2>DOCUMENTATION</h2>\n<p><a href=\"http://cityinabottle.org/nodebox\" rel=\"nofollow\">http://cityinabottle.org/nodebox</a></p>\n</div>\n<div id=\"acknowledgements\">\n<h2>ACKNOWLEDGEMENTS</h2>\n<p>Authors:\n- Tom De Smedt (<a href=\"mailto:tom%40organisms.be\">tom<span>@</span>organisms<span>.</span>be</a>)\n- Frederik De Bleser (<a href=\"mailto:frederik%40burocrazy.com\">frederik<span>@</span>burocrazy<span>.</span>com</a>)</p>\n<p>Contributing authors:\n- Lieven Menschaert\n- Giorgio Olivero</p>\n<p>City In A Bottle:\n- Nicolas Marinus\n- Ludivine Lechat\n- Tim Vets\n- Frederik De Bleser\n- Tom De Smedt</p>\n<p>Copyright (c) 2008 City In A Bottle</p>\n</div>\n\n          </div>"}, "last_serial": 795480, "releases": {"1.6": [{"comment_text": "", "digests": {"md5": "ef9fd62f04d5b190a8b616a8f4e1c84d", "sha256": "af66509d633b9b3a38f39ff2de53ac34709a95d8d6cbe574287f05477114e77a"}, "downloads": -1, "filename": "nodebox-opengl-1.6.tar.gz", "has_sig": false, "md5_digest": "ef9fd62f04d5b190a8b616a8f4e1c84d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 118097, "upload_time": "2012-05-05T10:58:23", "upload_time_iso_8601": "2012-05-05T10:58:23.596668Z", "url": "https://files.pythonhosted.org/packages/82/b6/bb9b1f40dcfc9a519049bada10edf25fc9d8518e794bc887aa83f5555842/nodebox-opengl-1.6.tar.gz", "yanked": false}], "1.6.1": [{"comment_text": "", "digests": {"md5": "bf0691284088961ae7b73c3aa9332120", "sha256": "2dbc4594b126d3c10be06c47c391fc8f9eb0d9873dc36c3a7d497ca4a415cc11"}, "downloads": -1, "filename": "nodebox-opengl-1.6.1.tar.gz", "has_sig": false, "md5_digest": "bf0691284088961ae7b73c3aa9332120", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119666, "upload_time": "2012-05-05T12:47:01", "upload_time_iso_8601": "2012-05-05T12:47:01.186336Z", "url": "https://files.pythonhosted.org/packages/97/6a/5e0c88e3e245123f5bbea448728437001edb4210e2d2bf351e5b2ff1f4e7/nodebox-opengl-1.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bf0691284088961ae7b73c3aa9332120", "sha256": "2dbc4594b126d3c10be06c47c391fc8f9eb0d9873dc36c3a7d497ca4a415cc11"}, "downloads": -1, "filename": "nodebox-opengl-1.6.1.tar.gz", "has_sig": false, "md5_digest": "bf0691284088961ae7b73c3aa9332120", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119666, "upload_time": "2012-05-05T12:47:01", "upload_time_iso_8601": "2012-05-05T12:47:01.186336Z", "url": "https://files.pythonhosted.org/packages/97/6a/5e0c88e3e245123f5bbea448728437001edb4210e2d2bf351e5b2ff1f4e7/nodebox-opengl-1.6.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:00 2020"}