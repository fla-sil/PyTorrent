{"info": {"author": "Christian Bianciotto", "author_email": "info@ci8.it", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7"], "description": "# django-static-sites\n\n*django-static-sites* is an easy to use *Django* app that allow you to create a static sites with the power of Django\ntemplate system. You can render an existing *Django* view by adding a decorator or you can create an empty project\noptimized for *django-static-sites* use. You can specify multiple configuration for multiple deploy type.\n\n[GitHub](https://github.com/ciotto/django-static-sites)\n\n\n## How to start\n\n1. install *django-static-sites* in your python path or in your *virtualenv* path\n(`pip install django-static-sites`) or (`pip install https://github.com/ciotto/django-static-sites/archive/master.zip`)\n2. create an empty optimized project by `django-static-admin startproject PROJECT_NAME` command\n3. move to the `PROJECT_NAME` folder and create site by `python manage.py startsite SITE_NAME` command\n4. migrate `python manage.py migrate`\n5. deploy `python manage.py deploy`\n6. start server `python manage.py runserver`\n7. enjoy it at [http://127.0.0.1:8000](http://127.0.0.1:8000) **:-)**\n\n\n## How to use\n\nIf you want to use the *Django* template system, you must to add a function in your `views.py` file and add the\n`@staticview` decorator:\n\n```python\n@staticview\ndef index(request):\n    ctx = {'title': 'Hello world!'}\n\n    return render_to_response('index.html', ctx, context_instance=RequestContext(request))\n```\n\nand the `index.html` template file in your templates folder:\n\n```html\n<!DOCTYPE html>\n<html lang=\"it\">\n<head>\n    <meta charset=\"UTF-8\">\n\n    <title>{{ title }}</title>\n</head>\n<body>\n    <h1>{{ title }}</h1>\n</body>\n</html>\n```\nWhen you deploy (`python manage.py deploy` or *autodeploy*), *django-static-sites* create the `index.html` using\n`index.html` template.\n\nIf you want to add an rendered javascript file, you can create a view:\n\n```python\n@staticview(path={'demo': 'asd/test.js', '': 'js/test.js'})\ndef js__test(request):\n\n    ctx = {'title': 'Hello world!'}\n\n    return render_to_response('test.js', ctx, context_instance=RequestContext(request))\n```\n\nand the relatine `test.js` template:\n\n```javascript\nvar text = '{{ title }}';\n\nalert(text);\n```\n\nThe `test.js` destination path are specified in `@staticview` decorator and is different for different deploy type so\nwe must add `'js_path': js__test.path.get(deploy_type=deploy_type)` in the `index.html` context. `deploy_type` are passed to the view\nfunctions if is declared. Now we can add the import line in the `index.html` file:\n\n```html\n<script type=\"text/javascript\" src=\"{{ js_path }}\"></script>\n```\n\nYou can see this and more samples in `staticsites/tests/samples` folder; you can launch the deploy server for this \nsamples by `manage.py runserver --settings staticsites.tests.samples.SAMPLE_NAME.settings` command.\n\n###### Other samples\n\n1. [Hello world](https://github.com/ciotto/django-static-sites/tree/master/staticsites/tests/samples/01_hello_world)\n2. [Hello world (with static)](https://github.com/ciotto/django-static-sites/tree/master/staticsites/tests/samples/02_hello_world)\n3. [AWS S3/CloudFront](https://github.com/ciotto/django-static-sites/tree/master/staticsites/tests/samples/03_aws)\n4. [AWS S3/CloudFront (multiple remote)](https://github.com/ciotto/django-static-sites/tree/master/staticsites/tests/samples/04_aws_multiple_deploy_type)\n5. [FTP](https://github.com/ciotto/django-static-sites/tree/master/staticsites/tests/samples/05_ftp)\n\n### Add to an existing project\n\nIf you want to integrate `django-static-sites` in existing project you must to:\n\n1. add `staticsites` in your INSTALLED_APPS (replace django.contrib.staticfiles)\n\nIf you want to use Django development server to serve the deployed static site:\n\n1. add this lines at your `url.py`\n\n```python\n# Serve default deploy folder as site root\nif settings.DEBUG:\n    urlpatterns += [\n        url(\n            r'^(?:%s)?$' % get_default_index(deploy_type='dev'),\n            serve,\n            {\n                'document_root': get_deploy_root(deploy_type='dev'), 'path': get_default_index(deploy_type='dev')\n            }\n        ),\n        url(\n            r'^(?P<path>.*)$',\n            serve,\n            {\n                'document_root': get_deploy_root(deploy_type='dev')\n            }\n        ),\n    ]\n```\n\n\n## Remote deploy\n\n*django-static-sites* use the *Django* `Storage` system during the deploy procedure; by default the file are deployed \nlocally using `FileSystemStorage`, but you can use any other `Storage` with the correct settings. In the \n[AWS S3/CloudFront](https://github.com/ciotto/django-static-sites/tree/master/staticsites/tests/samples/03_aws) samples \nI use the [django-storages](https://django-storages.readthedocs.org/) AWS storage for deploying on Amazon S3 bucket. \n\n\n## ToDo\n\n*django-static-sites* is work-in-progres:\n\n* add automatic url pattern\n* ~~autodeploy~~\n* ~~static file optimization~~\n* revert deploy if fail\n* ~~GZip deployed files~~\n* ~~minify deployed files~~\n* ~~custom header for deployed files~~\n* ~~singe configuration constant as dictionary~~\n* ~~deploy on multiple remote~~\n* add param check and raise Exception\n* update tests\n* ~~dedicated *settings* module for sample~~\n* ~~add tutorials~~\n* ~~deploy admin console~~\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ciotto/django-static-sites", "keywords": "", "license": "GNU GENERAL PUBLIC LICENSE", "maintainer": "", "maintainer_email": "", "name": "django-static-sites", "package_url": "https://pypi.org/project/django-static-sites/", "platform": "", "project_url": "https://pypi.org/project/django-static-sites/", "project_urls": {"Homepage": "https://github.com/ciotto/django-static-sites"}, "release_url": "https://pypi.org/project/django-static-sites/0.0.8/", "requires_dist": ["Django (<1.10,>=1.9)", "htmlmin (==0.1.6)", "slimit (==0.8.1)", "ply (==3.4)", "csscompressor (==0.9.4)"], "requires_python": "", "summary": "An easy to use Django app to make static site.", "version": "0.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django-static-sites</h1>\n<p><em>django-static-sites</em> is an easy to use <em>Django</em> app that allow you to create a static sites with the power of Django\ntemplate system. You can render an existing <em>Django</em> view by adding a decorator or you can create an empty project\noptimized for <em>django-static-sites</em> use. You can specify multiple configuration for multiple deploy type.</p>\n<p><a href=\"https://github.com/ciotto/django-static-sites\" rel=\"nofollow\">GitHub</a></p>\n<h2>How to start</h2>\n<ol>\n<li>install <em>django-static-sites</em> in your python path or in your <em>virtualenv</em> path\n(<code>pip install django-static-sites</code>) or (<code>pip install https://github.com/ciotto/django-static-sites/archive/master.zip</code>)</li>\n<li>create an empty optimized project by <code>django-static-admin startproject PROJECT_NAME</code> command</li>\n<li>move to the <code>PROJECT_NAME</code> folder and create site by <code>python manage.py startsite SITE_NAME</code> command</li>\n<li>migrate <code>python manage.py migrate</code></li>\n<li>deploy <code>python manage.py deploy</code></li>\n<li>start server <code>python manage.py runserver</code></li>\n<li>enjoy it at <a href=\"http://127.0.0.1:8000\" rel=\"nofollow\">http://127.0.0.1:8000</a> <strong>:-)</strong></li>\n</ol>\n<h2>How to use</h2>\n<p>If you want to use the <em>Django</em> template system, you must to add a function in your <code>views.py</code> file and add the\n<code>@staticview</code> decorator:</p>\n<pre><span class=\"nd\">@staticview</span>\n<span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Hello world!'</span><span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">render_to_response</span><span class=\"p\">(</span><span class=\"s1\">'index.html'</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"n\">context_instance</span><span class=\"o\">=</span><span class=\"n\">RequestContext</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">))</span>\n</pre>\n<p>and the <code>index.html</code> template file in your templates folder:</p>\n<pre><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span> <span class=\"na\">lang</span><span class=\"o\">=</span><span class=\"s\">\"it\"</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">charset</span><span class=\"o\">=</span><span class=\"s\">\"UTF-8\"</span><span class=\"p\">&gt;</span>\n\n    <span class=\"p\">&lt;</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>{{ title }}<span class=\"p\">&lt;/</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>{{ title }}<span class=\"p\">&lt;/</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<p>When you deploy (<code>python manage.py deploy</code> or <em>autodeploy</em>), <em>django-static-sites</em> create the <code>index.html</code> using\n<code>index.html</code> template.</p>\n<p>If you want to add an rendered javascript file, you can create a view:</p>\n<pre><span class=\"nd\">@staticview</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'demo'</span><span class=\"p\">:</span> <span class=\"s1\">'asd/test.js'</span><span class=\"p\">,</span> <span class=\"s1\">''</span><span class=\"p\">:</span> <span class=\"s1\">'js/test.js'</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">js__test</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n\n    <span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Hello world!'</span><span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">render_to_response</span><span class=\"p\">(</span><span class=\"s1\">'test.js'</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"n\">context_instance</span><span class=\"o\">=</span><span class=\"n\">RequestContext</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">))</span>\n</pre>\n<p>and the relatine <code>test.js</code> template:</p>\n<pre><span class=\"kd\">var</span> <span class=\"nx\">text</span> <span class=\"o\">=</span> <span class=\"s1\">'{{ title }}'</span><span class=\"p\">;</span>\n\n<span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"nx\">text</span><span class=\"p\">);</span>\n</pre>\n<p>The <code>test.js</code> destination path are specified in <code>@staticview</code> decorator and is different for different deploy type so\nwe must add <code>'js_path': js__test.path.get(deploy_type=deploy_type)</code> in the <code>index.html</code> context. <code>deploy_type</code> are passed to the view\nfunctions if is declared. Now we can add the import line in the <code>index.html</code> file:</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"text/javascript\"</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"{{ js_path }}\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n</pre>\n<p>You can see this and more samples in <code>staticsites/tests/samples</code> folder; you can launch the deploy server for this\nsamples by <code>manage.py runserver --settings staticsites.tests.samples.SAMPLE_NAME.settings</code> command.</p>\n<h6>Other samples</h6>\n<ol>\n<li><a href=\"https://github.com/ciotto/django-static-sites/tree/master/staticsites/tests/samples/01_hello_world\" rel=\"nofollow\">Hello world</a></li>\n<li><a href=\"https://github.com/ciotto/django-static-sites/tree/master/staticsites/tests/samples/02_hello_world\" rel=\"nofollow\">Hello world (with static)</a></li>\n<li><a href=\"https://github.com/ciotto/django-static-sites/tree/master/staticsites/tests/samples/03_aws\" rel=\"nofollow\">AWS S3/CloudFront</a></li>\n<li><a href=\"https://github.com/ciotto/django-static-sites/tree/master/staticsites/tests/samples/04_aws_multiple_deploy_type\" rel=\"nofollow\">AWS S3/CloudFront (multiple remote)</a></li>\n<li><a href=\"https://github.com/ciotto/django-static-sites/tree/master/staticsites/tests/samples/05_ftp\" rel=\"nofollow\">FTP</a></li>\n</ol>\n<h3>Add to an existing project</h3>\n<p>If you want to integrate <code>django-static-sites</code> in existing project you must to:</p>\n<ol>\n<li>add <code>staticsites</code> in your INSTALLED_APPS (replace django.contrib.staticfiles)</li>\n</ol>\n<p>If you want to use Django development server to serve the deployed static site:</p>\n<ol>\n<li>add this lines at your <code>url.py</code></li>\n</ol>\n<pre><span class=\"c1\"># Serve default deploy folder as site root</span>\n<span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">:</span>\n    <span class=\"n\">urlpatterns</span> <span class=\"o\">+=</span> <span class=\"p\">[</span>\n        <span class=\"n\">url</span><span class=\"p\">(</span>\n            <span class=\"sa\">r</span><span class=\"s1\">'^(?:</span><span class=\"si\">%s</span><span class=\"s1\">)?$'</span> <span class=\"o\">%</span> <span class=\"n\">get_default_index</span><span class=\"p\">(</span><span class=\"n\">deploy_type</span><span class=\"o\">=</span><span class=\"s1\">'dev'</span><span class=\"p\">),</span>\n            <span class=\"n\">serve</span><span class=\"p\">,</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">'document_root'</span><span class=\"p\">:</span> <span class=\"n\">get_deploy_root</span><span class=\"p\">(</span><span class=\"n\">deploy_type</span><span class=\"o\">=</span><span class=\"s1\">'dev'</span><span class=\"p\">),</span> <span class=\"s1\">'path'</span><span class=\"p\">:</span> <span class=\"n\">get_default_index</span><span class=\"p\">(</span><span class=\"n\">deploy_type</span><span class=\"o\">=</span><span class=\"s1\">'dev'</span><span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">url</span><span class=\"p\">(</span>\n            <span class=\"sa\">r</span><span class=\"s1\">'^(?P&lt;path&gt;.*)$'</span><span class=\"p\">,</span>\n            <span class=\"n\">serve</span><span class=\"p\">,</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">'document_root'</span><span class=\"p\">:</span> <span class=\"n\">get_deploy_root</span><span class=\"p\">(</span><span class=\"n\">deploy_type</span><span class=\"o\">=</span><span class=\"s1\">'dev'</span><span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n</pre>\n<h2>Remote deploy</h2>\n<p><em>django-static-sites</em> use the <em>Django</em> <code>Storage</code> system during the deploy procedure; by default the file are deployed\nlocally using <code>FileSystemStorage</code>, but you can use any other <code>Storage</code> with the correct settings. In the\n<a href=\"https://github.com/ciotto/django-static-sites/tree/master/staticsites/tests/samples/03_aws\" rel=\"nofollow\">AWS S3/CloudFront</a> samples\nI use the <a href=\"https://django-storages.readthedocs.org/\" rel=\"nofollow\">django-storages</a> AWS storage for deploying on Amazon S3 bucket.</p>\n<h2>ToDo</h2>\n<p><em>django-static-sites</em> is work-in-progres:</p>\n<ul>\n<li>add automatic url pattern</li>\n<li><del>autodeploy</del></li>\n<li><del>static file optimization</del></li>\n<li>revert deploy if fail</li>\n<li><del>GZip deployed files</del></li>\n<li><del>minify deployed files</del></li>\n<li><del>custom header for deployed files</del></li>\n<li><del>singe configuration constant as dictionary</del></li>\n<li><del>deploy on multiple remote</del></li>\n<li>add param check and raise Exception</li>\n<li>update tests</li>\n<li><del>dedicated <em>settings</em> module for sample</del></li>\n<li><del>add tutorials</del></li>\n<li><del>deploy admin console</del></li>\n</ul>\n\n          </div>"}, "last_serial": 6586959, "releases": {"0.0.6": [{"comment_text": "", "digests": {"md5": "386da050f52668c2991b0fdde163a324", "sha256": "8892bdf5883a05136e5fd075bc079598b22616303e2d191eda0c1a9d20ea7298"}, "downloads": -1, "filename": "django-static-sites-0.0.6.tar.gz", "has_sig": false, "md5_digest": "386da050f52668c2991b0fdde163a324", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31591, "upload_time": "2018-10-04T06:56:14", "upload_time_iso_8601": "2018-10-04T06:56:14.512225Z", "url": "https://files.pythonhosted.org/packages/c8/ad/c6ee3184a45970f3cddc7a11b3ff1a907fd21a018c87b0c46b9a986e293d/django-static-sites-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "7bd0ce3d681460fd37e856495e1b71f4", "sha256": "bb0ee8c856807734f42e2e5df0e0f0a84af5ba75b0c6231a4f22faff824a60b9"}, "downloads": -1, "filename": "django-static-sites-0.0.7.tar.gz", "has_sig": false, "md5_digest": "7bd0ce3d681460fd37e856495e1b71f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31599, "upload_time": "2018-10-04T06:59:41", "upload_time_iso_8601": "2018-10-04T06:59:41.961140Z", "url": "https://files.pythonhosted.org/packages/21/8b/17054347b805046aae7a37411c9f17d10e4c3c30132327c8e105ce33a86e/django-static-sites-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "46678e5dd41776db9e079bb0c70d7ae2", "sha256": "1862a97f2fc1a66975b6cef56d22020f9ae5a07e6df2b59b89bff0030240b3d8"}, "downloads": -1, "filename": "django_static_sites-0.0.8-py2-none-any.whl", "has_sig": false, "md5_digest": "46678e5dd41776db9e079bb0c70d7ae2", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 50503, "upload_time": "2020-02-07T06:33:01", "upload_time_iso_8601": "2020-02-07T06:33:01.398076Z", "url": "https://files.pythonhosted.org/packages/a7/99/88394bdaba3a2a053e98e4716c6138c7173b4162dcb8c2182b9768de16af/django_static_sites-0.0.8-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "473bd3b780a29b1975a957d43e18b1dd", "sha256": "00bb187ede68bcb8fe35f16d9422788fe1e23daf662ba7d5d79097de5f716ed4"}, "downloads": -1, "filename": "django-static-sites-0.0.8.tar.gz", "has_sig": false, "md5_digest": "473bd3b780a29b1975a957d43e18b1dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31728, "upload_time": "2020-02-07T06:33:03", "upload_time_iso_8601": "2020-02-07T06:33:03.637585Z", "url": "https://files.pythonhosted.org/packages/e9/0c/bd86c9679a285e7d8ce2da1fc240f18a2bef4f603215759e9059af82343d/django-static-sites-0.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "46678e5dd41776db9e079bb0c70d7ae2", "sha256": "1862a97f2fc1a66975b6cef56d22020f9ae5a07e6df2b59b89bff0030240b3d8"}, "downloads": -1, "filename": "django_static_sites-0.0.8-py2-none-any.whl", "has_sig": false, "md5_digest": "46678e5dd41776db9e079bb0c70d7ae2", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 50503, "upload_time": "2020-02-07T06:33:01", "upload_time_iso_8601": "2020-02-07T06:33:01.398076Z", "url": "https://files.pythonhosted.org/packages/a7/99/88394bdaba3a2a053e98e4716c6138c7173b4162dcb8c2182b9768de16af/django_static_sites-0.0.8-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "473bd3b780a29b1975a957d43e18b1dd", "sha256": "00bb187ede68bcb8fe35f16d9422788fe1e23daf662ba7d5d79097de5f716ed4"}, "downloads": -1, "filename": "django-static-sites-0.0.8.tar.gz", "has_sig": false, "md5_digest": "473bd3b780a29b1975a957d43e18b1dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31728, "upload_time": "2020-02-07T06:33:03", "upload_time_iso_8601": "2020-02-07T06:33:03.637585Z", "url": "https://files.pythonhosted.org/packages/e9/0c/bd86c9679a285e7d8ce2da1fc240f18a2bef4f603215759e9059af82343d/django-static-sites-0.0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:55 2020"}