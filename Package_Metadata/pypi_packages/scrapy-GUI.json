{"info": {"author": "Roy Healy", "author_email": "roy.healy87@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "Requires Python 3.6+\n\n# Scrapy GUI\nA simple, Qt-Webengine powered web browser with built in functionality for testing scrapy spider code.\n\nAlso includes an addon to enable a GUI for use with the scrapy shell.\n\n\n**Table of Contents**\n\n- [Installation](#installation)\n- [Standalone UI](#standalone-ui)\n    - [Browser Tab](#browser-tab)\n    - [Tools Tab](#tools-tab)\n        - [Query Box](#query-box)\n        - [Regex Box](#regex-box)\n        - [Function Box](#function-box)\n        - [Results Box](#results-box)\n    - [Source Tab](#source-tab)\n    - [Notes Tab](#notes-tab)\n- [Integration with Scrapy Shell](#integration-with-scrapy-shell)\n    - [Activation](#activation)\n\n# Installation\n\nYou can import the package from PyPi using\n\n> pip install scrapy_gui\n\nThen you can import it to a shell using `import scrapy_gui`.\n\n# Standalone UI\nThe standlaone UI can be opened by using `scrapy_gui.open_browser()` from a python shell. This consists of a web browser and a set of tools to analyse its contents.\n\n## Browser Tab\nEnter any url into search bar and hit return or press the Go button. When the loading animation finishes it will be ready to parse in the Tools tab.\n\n![Browser tab](https://raw.githubusercontent.com/further-reading/scraping-browser/master/readme_images/browser.png \"Browser Example\")\n\n## Tools Tab\nThe tools tab contains various sections for parsing content of the page. The purpose of this tab is to make it easy to test queries and code for use in a scrapy spider.\n> **NOTE:** This will use the **initial** html response. If additional requests, javascript, etc alter the page later this will not be taken into account.\n\nIt will load the initial html with an additional request using the `requests` package. When running a query it will create a selector object using `Selection` from the parsel package.\n\n![Tools tab](https://raw.githubusercontent.com/further-reading/scraping-browser/master/readme_images/tools.png \"Tools Example\")\n\n### Query Box\nThe query box lets you use [parsel](https://github.com/scrapy/parsel) compatible CSS queries to extract data from the page.\n\nIt returns results as though `selection.css('YOUR QUERY').getall()` was called.\n\nIf there are no results or there is an error in the query a dialogue will pop up informing you of the issue.\n\n### Regex Box\nThis box lets you add a regular expression pattern to be used in addition to the previous css query. \n\nIt returns results as though `selection.css('YOUR QUERY').re(r'YOUR REGEX')'` was called. This means that if you use groups it will only return the content within parenthesis.\n\n### Function Box\nThis box lets you define additional python code that can run on the results of your query and regex. The code can be as long and complex as you want, including adding additional functions, classes, imports etc.\n\nThe only requirement is you must include a function called `user_fun(results, selector)` that returns a `list`. \n\n### Results Box\n\nThis table will list all the results, passed through the regex and function if defined.\n\n## Source Tab\n\nThis tab contains the html source that is used in the Tools tab. You can use the text box to search for specific content. All searches are not case sensitive.\n\n![Source Tab](https://raw.githubusercontent.com/further-reading/scraping-browser/master/readme_images/source.png \"Source Example\")\n\n## Notes Tab\n\nThis is just a plain text box. Content in here is not saved when you exit the app.\n\n# Integration with Scrapy Shell\n\nIt is possible to integrate this tool with the scrapy shell. This will allow you to use it on responses that have been passed through your middlewares, access more complex requests and more specific selectors.\n\n## Activation\n\nTo use it in your shell import the load_selector method using:\n\n`from scrapy_gui import load_selector`\n\nThen you can write load_selector(YOUR_SELECTOR) to open a window with your selector loaded into it.\n\n> For example `load_selector(response)` will load your response into the UI.\n\nWhen you run the code a window named `Shell UI` will open that contains the `Tools`, `Source` and `Notes` tabs from the standalone window mentioned above.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/further-reading/scraping-browser", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "scrapy-GUI", "package_url": "https://pypi.org/project/scrapy-GUI/", "platform": "", "project_url": "https://pypi.org/project/scrapy-GUI/", "project_urls": {"Homepage": "https://github.com/further-reading/scraping-browser"}, "release_url": "https://pypi.org/project/scrapy-GUI/1.1.1/", "requires_dist": ["requests (>=2.22.0)", "PyQtWebEngine (>=5.14.0)", "parsel (>=1.5.2)", "cssselect (>=1.1.0)", "beautifulsoup4 (>=4.8.2)", "PyQt5 (>=5.14.0)"], "requires_python": ">=3.6", "summary": "A package for offering UI tools for building scrapy queries", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Requires Python 3.6+</p>\n<h1>Scrapy GUI</h1>\n<p>A simple, Qt-Webengine powered web browser with built in functionality for testing scrapy spider code.</p>\n<p>Also includes an addon to enable a GUI for use with the scrapy shell.</p>\n<p><strong>Table of Contents</strong></p>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#standalone-ui\" rel=\"nofollow\">Standalone UI</a>\n<ul>\n<li><a href=\"#browser-tab\" rel=\"nofollow\">Browser Tab</a></li>\n<li><a href=\"#tools-tab\" rel=\"nofollow\">Tools Tab</a>\n<ul>\n<li><a href=\"#query-box\" rel=\"nofollow\">Query Box</a></li>\n<li><a href=\"#regex-box\" rel=\"nofollow\">Regex Box</a></li>\n<li><a href=\"#function-box\" rel=\"nofollow\">Function Box</a></li>\n<li><a href=\"#results-box\" rel=\"nofollow\">Results Box</a></li>\n</ul>\n</li>\n<li><a href=\"#source-tab\" rel=\"nofollow\">Source Tab</a></li>\n<li><a href=\"#notes-tab\" rel=\"nofollow\">Notes Tab</a></li>\n</ul>\n</li>\n<li><a href=\"#integration-with-scrapy-shell\" rel=\"nofollow\">Integration with Scrapy Shell</a>\n<ul>\n<li><a href=\"#activation\" rel=\"nofollow\">Activation</a></li>\n</ul>\n</li>\n</ul>\n<h1>Installation</h1>\n<p>You can import the package from PyPi using</p>\n<blockquote>\n<p>pip install scrapy_gui</p>\n</blockquote>\n<p>Then you can import it to a shell using <code>import scrapy_gui</code>.</p>\n<h1>Standalone UI</h1>\n<p>The standlaone UI can be opened by using <code>scrapy_gui.open_browser()</code> from a python shell. This consists of a web browser and a set of tools to analyse its contents.</p>\n<h2>Browser Tab</h2>\n<p>Enter any url into search bar and hit return or press the Go button. When the loading animation finishes it will be ready to parse in the Tools tab.</p>\n<p><img alt=\"Browser tab\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c625fd0e5e33adc8f0db8704efb0eefdcf031054/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f667572746865722d72656164696e672f7363726170696e672d62726f777365722f6d61737465722f726561646d655f696d616765732f62726f777365722e706e67\"></p>\n<h2>Tools Tab</h2>\n<p>The tools tab contains various sections for parsing content of the page. The purpose of this tab is to make it easy to test queries and code for use in a scrapy spider.</p>\n<blockquote>\n<p><strong>NOTE:</strong> This will use the <strong>initial</strong> html response. If additional requests, javascript, etc alter the page later this will not be taken into account.</p>\n</blockquote>\n<p>It will load the initial html with an additional request using the <code>requests</code> package. When running a query it will create a selector object using <code>Selection</code> from the parsel package.</p>\n<p><img alt=\"Tools tab\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1ee387fca249a5a95ff20b8b1fdaf240b5a89132/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f667572746865722d72656164696e672f7363726170696e672d62726f777365722f6d61737465722f726561646d655f696d616765732f746f6f6c732e706e67\"></p>\n<h3>Query Box</h3>\n<p>The query box lets you use <a href=\"https://github.com/scrapy/parsel\" rel=\"nofollow\">parsel</a> compatible CSS queries to extract data from the page.</p>\n<p>It returns results as though <code>selection.css('YOUR QUERY').getall()</code> was called.</p>\n<p>If there are no results or there is an error in the query a dialogue will pop up informing you of the issue.</p>\n<h3>Regex Box</h3>\n<p>This box lets you add a regular expression pattern to be used in addition to the previous css query.</p>\n<p>It returns results as though <code>selection.css('YOUR QUERY').re(r'YOUR REGEX')'</code> was called. This means that if you use groups it will only return the content within parenthesis.</p>\n<h3>Function Box</h3>\n<p>This box lets you define additional python code that can run on the results of your query and regex. The code can be as long and complex as you want, including adding additional functions, classes, imports etc.</p>\n<p>The only requirement is you must include a function called <code>user_fun(results, selector)</code> that returns a <code>list</code>.</p>\n<h3>Results Box</h3>\n<p>This table will list all the results, passed through the regex and function if defined.</p>\n<h2>Source Tab</h2>\n<p>This tab contains the html source that is used in the Tools tab. You can use the text box to search for specific content. All searches are not case sensitive.</p>\n<p><img alt=\"Source Tab\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a2d3f9ca5da8a72f6b7e90013130389e78034c3/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f667572746865722d72656164696e672f7363726170696e672d62726f777365722f6d61737465722f726561646d655f696d616765732f736f757263652e706e67\"></p>\n<h2>Notes Tab</h2>\n<p>This is just a plain text box. Content in here is not saved when you exit the app.</p>\n<h1>Integration with Scrapy Shell</h1>\n<p>It is possible to integrate this tool with the scrapy shell. This will allow you to use it on responses that have been passed through your middlewares, access more complex requests and more specific selectors.</p>\n<h2>Activation</h2>\n<p>To use it in your shell import the load_selector method using:</p>\n<p><code>from scrapy_gui import load_selector</code></p>\n<p>Then you can write load_selector(YOUR_SELECTOR) to open a window with your selector loaded into it.</p>\n<blockquote>\n<p>For example <code>load_selector(response)</code> will load your response into the UI.</p>\n</blockquote>\n<p>When you run the code a window named <code>Shell UI</code> will open that contains the <code>Tools</code>, <code>Source</code> and <code>Notes</code> tabs from the standalone window mentioned above.</p>\n\n          </div>"}, "last_serial": 7012179, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "297cbd9cc467a932f214a33edb71154d", "sha256": "8c3163d221ee5c43ce8741e9e714d74689bb00361c2315e7b7dec86a41789608"}, "downloads": -1, "filename": "scrapy_GUI-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "297cbd9cc467a932f214a33edb71154d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 72306, "upload_time": "2020-01-11T18:41:14", "upload_time_iso_8601": "2020-01-11T18:41:14.895254Z", "url": "https://files.pythonhosted.org/packages/87/32/1dfd930a98d8eb7df60ee49f0d3fb78463863dcd2af44ccd8aecff4a970c/scrapy_GUI-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "221e8590459df19f40f28be717243db8", "sha256": "a683180ae7d21d4369fe3701432517c9c65bd1dd4d942ee327f29d9f0dd77e06"}, "downloads": -1, "filename": "scrapy-GUI-1.0.0.tar.gz", "has_sig": false, "md5_digest": "221e8590459df19f40f28be717243db8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 71657, "upload_time": "2020-01-11T18:41:17", "upload_time_iso_8601": "2020-01-11T18:41:17.370515Z", "url": "https://files.pythonhosted.org/packages/50/4e/a5b8f0670661a60adfd737a9f2c36c133d8402b4b170f92f5a356ea7332e/scrapy-GUI-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "353075f7bbc4cc3a43d639cdc96ee2c2", "sha256": "71289400844ce42a575b4ee1da07ce97afa66d25a00e03b4e002498ddea7fc5b"}, "downloads": -1, "filename": "scrapy_GUI-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "353075f7bbc4cc3a43d639cdc96ee2c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10858, "upload_time": "2020-01-11T18:43:52", "upload_time_iso_8601": "2020-01-11T18:43:52.495978Z", "url": "https://files.pythonhosted.org/packages/76/42/2e51dbe508094ac314efbf9c024fb35a99ea5d4b42fb8644b81b8ed93529/scrapy_GUI-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de4bc5be3f5392628e4895eb84972233", "sha256": "eacfd2935b4121a7eee579717d133f49e4fa8cf35d5f4c4b4763c5635f5706de"}, "downloads": -1, "filename": "scrapy-GUI-1.0.1.tar.gz", "has_sig": false, "md5_digest": "de4bc5be3f5392628e4895eb84972233", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9209, "upload_time": "2020-01-11T18:43:54", "upload_time_iso_8601": "2020-01-11T18:43:54.085320Z", "url": "https://files.pythonhosted.org/packages/76/74/dee97147a2b8912e7d629f79db7f09db84f7d4bdf5f17468d3f8ec8ac36c/scrapy-GUI-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "0485ba914c9a1d4c98b66fb7a0accb5c", "sha256": "c99262bf43129aa4fcbb61d49b8f67d75cee0ef25d581b80a50dd00b3b3d9f73"}, "downloads": -1, "filename": "scrapy_GUI-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0485ba914c9a1d4c98b66fb7a0accb5c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 72188, "upload_time": "2020-01-11T18:48:14", "upload_time_iso_8601": "2020-01-11T18:48:14.746797Z", "url": "https://files.pythonhosted.org/packages/93/48/96a21e794c9fbf848d894f59539d2b8306f013a9c011906e643766e7d71f/scrapy_GUI-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f24e108364019d1e0c9984c8a134cceb", "sha256": "9b5e09319229105dd33e54fede937728c9801133582c75b6ed978a42a490f571"}, "downloads": -1, "filename": "scrapy-GUI-1.0.2.tar.gz", "has_sig": false, "md5_digest": "f24e108364019d1e0c9984c8a134cceb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 71987, "upload_time": "2020-01-11T18:48:16", "upload_time_iso_8601": "2020-01-11T18:48:16.977882Z", "url": "https://files.pythonhosted.org/packages/85/6b/8308db49f5c0d978726741611a6307ef46a18b4352aef62f61c75ebd4348/scrapy-GUI-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "27d934fe0ccefe67aee89d4ad8b1194c", "sha256": "e0d8ad652294f5da52bc0436607b39baf38e0f822cdca5360b08a9f05aae1ec9"}, "downloads": -1, "filename": "scrapy_GUI-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "27d934fe0ccefe67aee89d4ad8b1194c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 72278, "upload_time": "2020-01-11T22:23:11", "upload_time_iso_8601": "2020-01-11T22:23:11.653594Z", "url": "https://files.pythonhosted.org/packages/4f/c1/0ac5abbc157e1c23337125a95f5c6d33eba153d8effb41bd75ae96a6d47f/scrapy_GUI-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be7b2654ce452dde3ed30416419f1fb9", "sha256": "ef777932df6235b2034bd5a671e4ea9dad4e7de27f5a1a509e0516d85eaee885"}, "downloads": -1, "filename": "scrapy-GUI-1.0.3.tar.gz", "has_sig": false, "md5_digest": "be7b2654ce452dde3ed30416419f1fb9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 72163, "upload_time": "2020-01-11T22:23:14", "upload_time_iso_8601": "2020-01-11T22:23:14.725353Z", "url": "https://files.pythonhosted.org/packages/21/ea/5949ff1d52c122c05d7ad8e18a22f241978ecce0dc755fad5b0a5672dd92/scrapy-GUI-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "b124d04c3b6e95112cee49a72158132a", "sha256": "8667c6470b444f5828fb8ad671b14849382e172896f5577c31e94f5e59526fe2"}, "downloads": -1, "filename": "scrapy_GUI-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "b124d04c3b6e95112cee49a72158132a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 72274, "upload_time": "2020-01-11T22:28:16", "upload_time_iso_8601": "2020-01-11T22:28:16.055115Z", "url": "https://files.pythonhosted.org/packages/36/80/4fc393c447dd5eab925ec9df2b51a5522d1f9cd77ca6ab2eac87c51a7608/scrapy_GUI-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "688a7ad701cde9294157b0515b38eb8a", "sha256": "90cebc792971fd6ac1926cea44df9f7c8f45d4b0a83f967013fbc8d29658508b"}, "downloads": -1, "filename": "scrapy-GUI-1.0.4.tar.gz", "has_sig": false, "md5_digest": "688a7ad701cde9294157b0515b38eb8a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 72164, "upload_time": "2020-01-11T22:28:19", "upload_time_iso_8601": "2020-01-11T22:28:19.608390Z", "url": "https://files.pythonhosted.org/packages/a6/96/0e5707d065b79863c9cb5efc5fd455551eae342f049251312b3ded91dd94/scrapy-GUI-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "6eb9411b0275691c04e81b2e5bb8e287", "sha256": "1643eb715944ad86734382a8fbaa4a921f1c4d07a35785bbe4c541eb5dcef57c"}, "downloads": -1, "filename": "scrapy_GUI-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "6eb9411b0275691c04e81b2e5bb8e287", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 72246, "upload_time": "2020-02-02T17:09:20", "upload_time_iso_8601": "2020-02-02T17:09:20.146416Z", "url": "https://files.pythonhosted.org/packages/11/4a/1b876ff89cd1c95dbe1702012f8a1877b29b7f0e56cd5b0216c6002c3927/scrapy_GUI-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9cacb5a9dd072ec9d09b81eb1379e13c", "sha256": "0226526109343984de3c089b1f8f0a98e85d60d866c1193835dd74411f0bcae3"}, "downloads": -1, "filename": "scrapy-GUI-1.0.5.tar.gz", "has_sig": false, "md5_digest": "9cacb5a9dd072ec9d09b81eb1379e13c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 72127, "upload_time": "2020-02-02T17:09:22", "upload_time_iso_8601": "2020-02-02T17:09:22.054250Z", "url": "https://files.pythonhosted.org/packages/57/90/a166973c665d8f401750d58f6826aa9398f55a8b2ab6ca500b0664a11529/scrapy-GUI-1.0.5.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "39505549550ec3f9a0ccd44da2bbbc0c", "sha256": "ac189a659eec548f89ae926a256c4af11b93a75bcc295b2464673d2ab8849577"}, "downloads": -1, "filename": "scrapy_GUI-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "39505549550ec3f9a0ccd44da2bbbc0c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 72412, "upload_time": "2020-04-13T19:02:56", "upload_time_iso_8601": "2020-04-13T19:02:56.470013Z", "url": "https://files.pythonhosted.org/packages/1d/7a/f5e3f091c5a9adf347099563a9a46770eb0e47d65835c1aba722c71e131e/scrapy_GUI-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74e7604dd06fd224ec937b304fc2bf99", "sha256": "78f99326e36e8f2353b6119f36aaecac9c0522e6c80bb806136e04781ff9883b"}, "downloads": -1, "filename": "scrapy-GUI-1.1.tar.gz", "has_sig": false, "md5_digest": "74e7604dd06fd224ec937b304fc2bf99", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 72303, "upload_time": "2020-04-13T19:02:57", "upload_time_iso_8601": "2020-04-13T19:02:57.777680Z", "url": "https://files.pythonhosted.org/packages/30/99/bce9badbb0671ec4d3cf9d4b12fb18b12d4b59ef6b11ff6d19e92e48d39a/scrapy-GUI-1.1.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "2e4d38fef5858c47dccc75ce24f5448c", "sha256": "7ee136bc10584da1e10bb2088ca09536e3c6e60a161dd1b2097e84f3dda7d8dc"}, "downloads": -1, "filename": "scrapy_GUI-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2e4d38fef5858c47dccc75ce24f5448c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 72453, "upload_time": "2020-04-13T19:10:09", "upload_time_iso_8601": "2020-04-13T19:10:09.322852Z", "url": "https://files.pythonhosted.org/packages/bb/74/0b8b7dfea36c73c6759419c679ae5ca060b87bb5dd60adf1622c0c429da9/scrapy_GUI-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87c257858f5c273f139dcc9ca8528afe", "sha256": "7fbb1e8f700a5aae30b6b5d5dbac9b84d86a55ef3e6977a2ea03cc007781f8c2"}, "downloads": -1, "filename": "scrapy-GUI-1.1.1.tar.gz", "has_sig": false, "md5_digest": "87c257858f5c273f139dcc9ca8528afe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 72323, "upload_time": "2020-04-13T19:10:10", "upload_time_iso_8601": "2020-04-13T19:10:10.957659Z", "url": "https://files.pythonhosted.org/packages/44/a7/6dd2c35e33a18170a01bd83756ec4d7184817189cc7ba667bd62654debe8/scrapy-GUI-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2e4d38fef5858c47dccc75ce24f5448c", "sha256": "7ee136bc10584da1e10bb2088ca09536e3c6e60a161dd1b2097e84f3dda7d8dc"}, "downloads": -1, "filename": "scrapy_GUI-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2e4d38fef5858c47dccc75ce24f5448c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 72453, "upload_time": "2020-04-13T19:10:09", "upload_time_iso_8601": "2020-04-13T19:10:09.322852Z", "url": "https://files.pythonhosted.org/packages/bb/74/0b8b7dfea36c73c6759419c679ae5ca060b87bb5dd60adf1622c0c429da9/scrapy_GUI-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87c257858f5c273f139dcc9ca8528afe", "sha256": "7fbb1e8f700a5aae30b6b5d5dbac9b84d86a55ef3e6977a2ea03cc007781f8c2"}, "downloads": -1, "filename": "scrapy-GUI-1.1.1.tar.gz", "has_sig": false, "md5_digest": "87c257858f5c273f139dcc9ca8528afe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 72323, "upload_time": "2020-04-13T19:10:10", "upload_time_iso_8601": "2020-04-13T19:10:10.957659Z", "url": "https://files.pythonhosted.org/packages/44/a7/6dd2c35e33a18170a01bd83756ec4d7184817189cc7ba667bd62654debe8/scrapy-GUI-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:46 2020"}