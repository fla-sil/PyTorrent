{"info": {"author": "Dylan Jay", "author_email": "software@pretaweb.com", "bugtrack_url": null, "classifiers": [], "description": "XMLSource\n=========\n\nA simple transmogrifier blueprint to read xml files of the form ::\n\n    <container>\n      <item>\n        <field1>value</field1>\n        <field2>value</field2>\n        ...\n      </item>\n      ...\n    </container>\n\n\nExample\n-------\n\nThe following example uses `funnelweb` and `ploneremote` to upload\ncontent in an xml file from the commandline\n\nFirst create a custom `pipeline.cfg` ::\n\n    [transmogrifier]\n    pipeline =\n        xmlsource\n        ploneupload\n        ploneupdate\n\n    [xmlsource]\n    blueprint = transmogrify.xmlsource\n    xmlfile = items.xml\n    pathtag = field1\n    itemtag = item\n    type = MyCustomType\n\n    [ploneupload]\n    blueprint = transmogrify.ploneremote.remoteconstructor\n    target = http://admin:admin@localhost/Plone/mycontent\n\n    [ploneupdate]\n    blueprint = transmogrify.ploneremote.remoteschemaupdater\n    target = ${ploneupload:target}\n\nNow install `funnelweb` using a `buildout.cfg` ::\n\n    [buildout]\n    parts = convertxml\n\n    [convertxml]\n    recipe = funnelweb\n    pipeline=wynhotels.cfg\n    eggs = transmogrify.xmlsource\n\nbootstrap ::\n\n    $> easy_install zc.buildout\n    $> buildout init\n    $> bin/buildout\n\nand now run your custom converter\n\n    $> bin/convertxml\n\nThe converter parses the xml and uploads to plone via xmlrpc. or\nconstruct your own pipeline to transform the content into whatever or whereever.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/transmogrify.xmlsource", "keywords": "transmogrifier xml plone", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "transmogrify.xmlsource", "package_url": "https://pypi.org/project/transmogrify.xmlsource/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/transmogrify.xmlsource/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/collective/transmogrify.xmlsource"}, "release_url": "https://pypi.org/project/transmogrify.xmlsource/1.0/", "requires_dist": null, "requires_python": null, "summary": "Simple xml reader for a transmogrifier pipeline", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A simple transmogrifier blueprint to read xml files of the form</p>\n<pre>&lt;container&gt;\n  &lt;item&gt;\n    &lt;field1&gt;value&lt;/field1&gt;\n    &lt;field2&gt;value&lt;/field2&gt;\n    ...\n  &lt;/item&gt;\n  ...\n&lt;/container&gt;\n</pre>\n<div id=\"example\">\n<h2>Example</h2>\n<p>The following example uses <cite>funnelweb</cite> and <cite>ploneremote</cite> to upload\ncontent in an xml file from the commandline</p>\n<p>First create a custom <cite>pipeline.cfg</cite></p>\n<pre>[transmogrifier]\npipeline =\n    xmlsource\n    ploneupload\n    ploneupdate\n\n[xmlsource]\nblueprint = transmogrify.xmlsource\nxmlfile = items.xml\npathtag = field1\nitemtag = item\ntype = MyCustomType\n\n[ploneupload]\nblueprint = transmogrify.ploneremote.remoteconstructor\ntarget = http://admin:admin@localhost/Plone/mycontent\n\n[ploneupdate]\nblueprint = transmogrify.ploneremote.remoteschemaupdater\ntarget = ${ploneupload:target}\n</pre>\n<p>Now install <cite>funnelweb</cite> using a <cite>buildout.cfg</cite></p>\n<pre>[buildout]\nparts = convertxml\n\n[convertxml]\nrecipe = funnelweb\npipeline=wynhotels.cfg\neggs = transmogrify.xmlsource\n</pre>\n<p>bootstrap</p>\n<pre>$&gt; easy_install zc.buildout\n$&gt; buildout init\n$&gt; bin/buildout\n</pre>\n<p>and now run your custom converter</p>\n<blockquote>\n$&gt; bin/convertxml</blockquote>\n<p>The converter parses the xml and uploads to plone via xmlrpc. or\nconstruct your own pipeline to transform the content into whatever or whereever.</p>\n</div>\n\n          </div>"}, "last_serial": 800898, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "4254a0457603068bd42d1b0968a28a2b", "sha256": "4e47307ca587520e3ba2fe2fb4b8d004211d9fb0c886199730b3a8808c245a62"}, "downloads": -1, "filename": "transmogrify.xmlsource-1.0.zip", "has_sig": false, "md5_digest": "4254a0457603068bd42d1b0968a28a2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6180, "upload_time": "2011-02-24T15:42:03", "upload_time_iso_8601": "2011-02-24T15:42:03.720981Z", "url": "https://files.pythonhosted.org/packages/f9/fb/9babfd16224f49594cfef280218f310378caaa9565f8fc494b792972ddb4/transmogrify.xmlsource-1.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4254a0457603068bd42d1b0968a28a2b", "sha256": "4e47307ca587520e3ba2fe2fb4b8d004211d9fb0c886199730b3a8808c245a62"}, "downloads": -1, "filename": "transmogrify.xmlsource-1.0.zip", "has_sig": false, "md5_digest": "4254a0457603068bd42d1b0968a28a2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6180, "upload_time": "2011-02-24T15:42:03", "upload_time_iso_8601": "2011-02-24T15:42:03.720981Z", "url": "https://files.pythonhosted.org/packages/f9/fb/9babfd16224f49594cfef280218f310378caaa9565f8fc494b792972ddb4/transmogrify.xmlsource-1.0.zip", "yanked": false}], "timestamp": "Fri May  8 03:48:00 2020"}