{"info": {"author": "Jan Seifert (Seznam.cz, a.s.)", "author_email": "jan.seifert@firma.seznam.cz", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Other Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "===============\ntornado-fastrpc\n===============\n\nNon-blocking XML-RPC and FastRPC (see https://github.com/seznam/fastrpc)\nclient for Python's Tornado. If FastRPC is not available, only XML-RPC\nprotocol will be supported. Python 2.7 and Python 3.4 (or higher) are\nsupported.\n\nInstalation\n-----------\n\nRequirements:\n\n+ *pycurl*\n+ *Tornado* 3.2 or higher\n\nOptional requirements:\n\n+ *fastrpc* (*libfastrpc* + *fastrpc* Python's module)\n\nInstalation and tests:\n\n::\n\n    python setup.py install\n    python setup.py test\n\nBuild Debian Jessie package (requires ``dpkg-buildpackage`` + ``lintian``\nand dependencies in ``Build-Depends`` option in ``debian/control`` file.\n\n::\n\n    python setup.py bdist_deb\n\nUssage\n------\n\n::\n\n    proxy = ServerProxy('http://example.com/RPC2:8000',\n                        connect_timeout=5.0,\n                        timeout=5.0,\n                        use_binary=True)\n\n\n    class BazHandler(tornado.web.RequestHandler):\n\n        @tornado.gen.coroutine\n        def get(self):\n            try:\n                res = yield proxy.getData(123)\n            except Exception as e:\n                self.write('Error: {}'.format(e))\n            else:\n                self.write('Data: {}'.format(res.value))\n\n\n    class BarHandler(tornado.web.RequestHandler):\n\n        @tornado.gen.coroutine\n        def get(self):\n            res = yield proxy.getData(123, quiet=True)\n            if res.success:\n                self.write('Data: {}'.format(res.value))\n            else:\n                self.write('Error: {}'.format(res.exception))\n\nDocumentation\n-------------\n\nServerProxy class\n`````````````````\n\n*class* tornado_fastrpc.client.\\ **ServerProxy**\\(*uri,\nconnect_timeout=5.0, timeout=5.0, use_binary=False, user_agent=None,\nkeep_alive=False, use_http10=True, http_proxy=None, max_clients=10*)\n\n    Async FastRPC client for Tornado, tt uses ``pycurl`` backend.\n    Manages communication with a remote RPC server.\n\n    - **url** *<string>*\n          URL address\n    - **connect_timeout** *<float>*\n          Timeout for initial connection in seconds\n    - **request_timeout** *<float>*\n          Timeout for entire request in seconds\n    - **use_binary** *<bool>*\n          Force binary protocol\n    - **user_agent** *<string>*\n          User-Agent string\n    - **keep_alive** *<bool>*\n          Allow keep-alive connection\n    - **use_http10** *<bool>*\n          Force HTTP/1.0 protocol instead of HTTP/1.1\n    - **http_proxy** *<string>*\n          HTTP proxy, eg. http://user:pass@example.com:80\n    - **max_clients** *<int>*\n          Size of the Curl's connection pool\n\nResult object\n`````````````\n\n*class* tornado_fastrpc.client.\\ **Result**\\(*success, value, exception*)\n\nReturn type for FastRPC call. Contains attributes:\n\n    - **success** *<bool>*\n          ``True`` if operation succeeded, else ``False``\n    - **value**\n          contains returning value if operation succeeded, else ``None``\n    - **exception** *<bool>*\n          contains instance of the exception if operation failed, else ``None``\n\nFault object\n````````````\n\n*class* tornado_fastrpc.client.\\ **Fault**\\(*faultCode, faultString*)\n\n    Exception, indicates an XML-RPC error.\n\n    - **faultCode** *<string>*\n          Error code\n    - **faultString** *<string>*\n          Error message\n\nLicense\n-------\n\n3-clause BSD", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/seznam/tornado-fastrpc", "keywords": null, "license": "commercial", "maintainer": null, "maintainer_email": null, "name": "tornado-fastrpc", "package_url": "https://pypi.org/project/tornado-fastrpc/", "platform": "any", "project_url": "https://pypi.org/project/tornado-fastrpc/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/seznam/tornado-fastrpc"}, "release_url": "https://pypi.org/project/tornado-fastrpc/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Asynchronous XML-RPC and FastPRC client for Python's Tornado", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Non-blocking XML-RPC and FastRPC (see <a href=\"https://github.com/seznam/fastrpc\" rel=\"nofollow\">https://github.com/seznam/fastrpc</a>)\nclient for Python\u2019s Tornado. If FastRPC is not available, only XML-RPC\nprotocol will be supported. Python 2.7 and Python 3.4 (or higher) are\nsupported.</p>\n<div id=\"instalation\">\n<h2>Instalation</h2>\n<p>Requirements:</p>\n<ul>\n<li><em>pycurl</em></li>\n<li><em>Tornado</em> 3.2 or higher</li>\n</ul>\n<p>Optional requirements:</p>\n<ul>\n<li><em>fastrpc</em> (<em>libfastrpc</em> + <em>fastrpc</em> Python\u2019s module)</li>\n</ul>\n<p>Instalation and tests:</p>\n<pre>python setup.py install\npython setup.py test\n</pre>\n<p>Build Debian Jessie package (requires <tt><span class=\"pre\">dpkg-buildpackage</span></tt> + <tt>lintian</tt>\nand dependencies in <tt><span class=\"pre\">Build-Depends</span></tt> option in <tt>debian/control</tt> file.</p>\n<pre>python setup.py bdist_deb\n</pre>\n</div>\n<div id=\"ussage\">\n<h2>Ussage</h2>\n<pre>proxy = ServerProxy('http://example.com/RPC2:8000',\n                    connect_timeout=5.0,\n                    timeout=5.0,\n                    use_binary=True)\n\n\nclass BazHandler(tornado.web.RequestHandler):\n\n    @tornado.gen.coroutine\n    def get(self):\n        try:\n            res = yield proxy.getData(123)\n        except Exception as e:\n            self.write('Error: {}'.format(e))\n        else:\n            self.write('Data: {}'.format(res.value))\n\n\nclass BarHandler(tornado.web.RequestHandler):\n\n    @tornado.gen.coroutine\n    def get(self):\n        res = yield proxy.getData(123, quiet=True)\n        if res.success:\n            self.write('Data: {}'.format(res.value))\n        else:\n            self.write('Error: {}'.format(res.exception))\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<div id=\"serverproxy-class\">\n<h3>ServerProxy class</h3>\n<p><em>class</em> tornado_fastrpc.client.<strong>ServerProxy</strong>(<em>uri,\nconnect_timeout=5.0, timeout=5.0, use_binary=False, user_agent=None,\nkeep_alive=False, use_http10=True, http_proxy=None, max_clients=10</em>)</p>\n<blockquote>\n<p>Async FastRPC client for Tornado, tt uses <tt>pycurl</tt> backend.\nManages communication with a remote RPC server.</p>\n<ul>\n<li><dl>\n<dt><strong>url</strong> <em>&lt;string&gt;</em></dt>\n<dd>URL address</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>connect_timeout</strong> <em>&lt;float&gt;</em></dt>\n<dd>Timeout for initial connection in seconds</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>request_timeout</strong> <em>&lt;float&gt;</em></dt>\n<dd>Timeout for entire request in seconds</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>use_binary</strong> <em>&lt;bool&gt;</em></dt>\n<dd>Force binary protocol</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>user_agent</strong> <em>&lt;string&gt;</em></dt>\n<dd>User-Agent string</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>keep_alive</strong> <em>&lt;bool&gt;</em></dt>\n<dd>Allow keep-alive connection</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>use_http10</strong> <em>&lt;bool&gt;</em></dt>\n<dd>Force HTTP/1.0 protocol instead of HTTP/1.1</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>http_proxy</strong> <em>&lt;string&gt;</em></dt>\n<dd>HTTP proxy, eg. <a href=\"http://user:pass@example.com:80\" rel=\"nofollow\">http://user:pass@example.com:80</a></dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>max_clients</strong> <em>&lt;int&gt;</em></dt>\n<dd>Size of the Curl\u2019s connection pool</dd>\n</dl>\n</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"result-object\">\n<h3>Result object</h3>\n<p><em>class</em> tornado_fastrpc.client.<strong>Result</strong>(<em>success, value, exception</em>)</p>\n<p>Return type for FastRPC call. Contains attributes:</p>\n<blockquote>\n<ul>\n<li><dl>\n<dt><strong>success</strong> <em>&lt;bool&gt;</em></dt>\n<dd><tt>True</tt> if operation succeeded, else <tt>False</tt></dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>value</strong></dt>\n<dd>contains returning value if operation succeeded, else <tt>None</tt></dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>exception</strong> <em>&lt;bool&gt;</em></dt>\n<dd>contains instance of the exception if operation failed, else <tt>None</tt></dd>\n</dl>\n</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"fault-object\">\n<h3>Fault object</h3>\n<p><em>class</em> tornado_fastrpc.client.<strong>Fault</strong>(<em>faultCode, faultString</em>)</p>\n<blockquote>\n<p>Exception, indicates an XML-RPC error.</p>\n<ul>\n<li><dl>\n<dt><strong>faultCode</strong> <em>&lt;string&gt;</em></dt>\n<dd>Error code</dd>\n</dl>\n</li>\n<li><dl>\n<dt><strong>faultString</strong> <em>&lt;string&gt;</em></dt>\n<dd>Error message</dd>\n</dl>\n</li>\n</ul>\n</blockquote>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>3-clause BSD</p>\n</div>\n\n          </div>"}, "last_serial": 2260001, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "529ff3ac21a5fd1d83dde59a3c55a2f6", "sha256": "69803c708ea7b29b10a8217fa73b1214e8489890f07da2920729fab9f7a039aa"}, "downloads": -1, "filename": "tornado-fastrpc-1.0.0.tar.gz", "has_sig": false, "md5_digest": "529ff3ac21a5fd1d83dde59a3c55a2f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5868, "upload_time": "2016-08-03T13:45:19", "upload_time_iso_8601": "2016-08-03T13:45:19.443324Z", "url": "https://files.pythonhosted.org/packages/5b/da/1114b54f751a6e691d008f4e41958645c843855b77fdbd0d8e73709805ec/tornado-fastrpc-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "529ff3ac21a5fd1d83dde59a3c55a2f6", "sha256": "69803c708ea7b29b10a8217fa73b1214e8489890f07da2920729fab9f7a039aa"}, "downloads": -1, "filename": "tornado-fastrpc-1.0.0.tar.gz", "has_sig": false, "md5_digest": "529ff3ac21a5fd1d83dde59a3c55a2f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5868, "upload_time": "2016-08-03T13:45:19", "upload_time_iso_8601": "2016-08-03T13:45:19.443324Z", "url": "https://files.pythonhosted.org/packages/5b/da/1114b54f751a6e691d008f4e41958645c843855b77fdbd0d8e73709805ec/tornado-fastrpc-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:49:53 2020"}