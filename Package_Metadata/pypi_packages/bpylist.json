{"info": {"author": "Marketcircle Inc.", "author_email": "cloud@marketcircle.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries"], "description": "\nbpylist |pypi version| |Build Status|\n=====================================\n\nImplementation of the `Apple's Binary\nPlist <https://developer.apple.com/legacy/library/documentation/Darwin/Reference/ManPages/man5/plist.5.html>`__\nand the NSKeyedArchiver format\n\nUsage\n-----\n\nBinary Plists\n~~~~~~~~~~~~~\n\nGenerating bplist is easy, and similar to the ``plistlib`` module in\nPython's Standard Library\n\n.. code:: python\n\n    from bpylist import bplist\n\n    bpylist.generate(my_object)\n\nReading is easy as well. The ``generate`` function takes a bytes object\nand returns the top-level object of the binary plist.\n\n.. code:: python\n\n    from bpylist import bplist\n\n    with open('myplist.plist', 'rb') as f:\n        bpylist.parse(f.read())\n\nKeyedArchives\n~~~~~~~~~~~~~\n\n``NSKeyedArchiver`` is an Apple proprietary serialization format for\nCocoa objects. ``bpylist`` supports reading and writing\n``NSKeyedArchiver`` compatible archives. The API is similar to the\nbinary plist API.\n\n**Unarchiving an object**\n\n.. code:: python\n\n    from bpylist import archiver\n\n    with open('my_archived_object', 'rb') as f:\n        archiver.unarchive(f.read())\n\n**Archiving an object**\n\n.. code:: python\n\n    from bpylist import archiver\n\n    my_object = { 'foo':'bar', 'some_array': [1,2,3,4] }\n    archiver.archive(my_object)\n\nCustom objects\n^^^^^^^^^^^^^^\n\nIf you archive includes classes that are not \"standard\" Cocoa classes\n(``NSString``, ``NSNumber``, ``NSDate``, ``NSNull``, ``NSDictionary`` or\n``NSArray``), you register a Python class that the Cocoa class maps to.\nThe Python class needs to implement the ``encode_archive`` and\n``decode_archive`` methods.\n\n.. code:: python\n\n    ## Define a Python Class\n\n    from bpylist import archiver\n\n    class MyClass:\n        first_property = None\n        second_property = None\n\n        def __init__(self, first_property, second_property):\n            self.first_property = first_property\n            self.second_property = second_property\n\n        def encode_archive(self, archive):\n            archive.encode('first_property', self.first_property)\n            archive.encode('second_property', self.second_property)\n\n        def decode_archive(archive):\n            first = archive.decode('first_property')\n            second = archive.decode('second_property')\n            return MyClass(first, second)\n\n    ## Register the class for the Cocoa class 'MyCocoaClass'\n\n    archiver.update_class_map({ 'MyCocoaClass': FooArchive })\n\nLicense\n-------\n\nMIT License\n\nCopyright (c) 2017 Marketcircle Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n.. |pypi version| image:: https://img.shields.io/pypi/v/bpylist.svg\n   :target: https://pypi.org/project/bpylist/\n.. |Build Status| image:: https://travis-ci.org/Marketcircle/bpylist.svg?branch=master\n   :target: https://travis-ci.org/Marketcircle/bpylist\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/marketcircle/bpylist", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "bpylist", "package_url": "https://pypi.org/project/bpylist/", "platform": "", "project_url": "https://pypi.org/project/bpylist/", "project_urls": {"Homepage": "https://github.com/marketcircle/bpylist"}, "release_url": "https://pypi.org/project/bpylist/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "parse and generate binary plists and NSKeyedArchiver archives", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Implementation of the <a href=\"https://developer.apple.com/legacy/library/documentation/Darwin/Reference/ManPages/man5/plist.5.html\" rel=\"nofollow\">Apple\u2019s Binary\nPlist</a>\nand the NSKeyedArchiver format</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"binary-plists\">\n<h3>Binary Plists</h3>\n<p>Generating bplist is easy, and similar to the <tt>plistlib</tt> module in\nPython\u2019s Standard Library</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bpylist</span> <span class=\"kn\">import</span> <span class=\"n\">bplist</span>\n\n<span class=\"n\">bpylist</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">my_object</span><span class=\"p\">)</span>\n</pre>\n<p>Reading is easy as well. The <tt>generate</tt> function takes a bytes object\nand returns the top-level object of the binary plist.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bpylist</span> <span class=\"kn\">import</span> <span class=\"n\">bplist</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'myplist.plist'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">bpylist</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n</pre>\n</div>\n<div id=\"keyedarchives\">\n<h3>KeyedArchives</h3>\n<p><tt>NSKeyedArchiver</tt> is an Apple proprietary serialization format for\nCocoa objects. <tt>bpylist</tt> supports reading and writing\n<tt>NSKeyedArchiver</tt> compatible archives. The API is similar to the\nbinary plist API.</p>\n<p><strong>Unarchiving an object</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bpylist</span> <span class=\"kn\">import</span> <span class=\"n\">archiver</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'my_archived_object'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">archiver</span><span class=\"o\">.</span><span class=\"n\">unarchive</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n</pre>\n<p><strong>Archiving an object</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bpylist</span> <span class=\"kn\">import</span> <span class=\"n\">archiver</span>\n\n<span class=\"n\">my_object</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'foo'</span><span class=\"p\">:</span><span class=\"s1\">'bar'</span><span class=\"p\">,</span> <span class=\"s1\">'some_array'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"p\">}</span>\n<span class=\"n\">archiver</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"p\">(</span><span class=\"n\">my_object</span><span class=\"p\">)</span>\n</pre>\n<div id=\"custom-objects\">\n<h4>Custom objects</h4>\n<p>If you archive includes classes that are not \u201cstandard\u201d Cocoa classes\n(<tt>NSString</tt>, <tt>NSNumber</tt>, <tt>NSDate</tt>, <tt>NSNull</tt>, <tt>NSDictionary</tt> or\n<tt>NSArray</tt>), you register a Python class that the Cocoa class maps to.\nThe Python class needs to implement the <tt>encode_archive</tt> and\n<tt>decode_archive</tt> methods.</p>\n<pre><span class=\"c1\">## Define a Python Class</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">bpylist</span> <span class=\"kn\">import</span> <span class=\"n\">archiver</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyClass</span><span class=\"p\">:</span>\n    <span class=\"n\">first_property</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">second_property</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">first_property</span><span class=\"p\">,</span> <span class=\"n\">second_property</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">first_property</span> <span class=\"o\">=</span> <span class=\"n\">first_property</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">second_property</span> <span class=\"o\">=</span> <span class=\"n\">second_property</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">encode_archive</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">archive</span><span class=\"p\">):</span>\n        <span class=\"n\">archive</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s1\">'first_property'</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">first_property</span><span class=\"p\">)</span>\n        <span class=\"n\">archive</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s1\">'second_property'</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">second_property</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">decode_archive</span><span class=\"p\">(</span><span class=\"n\">archive</span><span class=\"p\">):</span>\n        <span class=\"n\">first</span> <span class=\"o\">=</span> <span class=\"n\">archive</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">'first_property'</span><span class=\"p\">)</span>\n        <span class=\"n\">second</span> <span class=\"o\">=</span> <span class=\"n\">archive</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">'second_property'</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">MyClass</span><span class=\"p\">(</span><span class=\"n\">first</span><span class=\"p\">,</span> <span class=\"n\">second</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## Register the class for the Cocoa class 'MyCocoaClass'</span>\n\n<span class=\"n\">archiver</span><span class=\"o\">.</span><span class=\"n\">update_class_map</span><span class=\"p\">({</span> <span class=\"s1\">'MyCocoaClass'</span><span class=\"p\">:</span> <span class=\"n\">FooArchive</span> <span class=\"p\">})</span>\n</pre>\n</div>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT License</p>\n<p>Copyright (c) 2017 Marketcircle Inc.</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\u201cSoftware\u201d), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n</div>\n\n          </div>"}, "last_serial": 3168815, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0339a4427ba11e29508840e5fb2a33d2", "sha256": "0149e9adcdd88d732c999cd912c51de96e451eed1aa04f2ece5b5c6d5f56c4ea"}, "downloads": -1, "filename": "bpylist-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0339a4427ba11e29508840e5fb2a33d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13627, "upload_time": "2017-09-12T16:27:43", "upload_time_iso_8601": "2017-09-12T16:27:43.101927Z", "url": "https://files.pythonhosted.org/packages/ff/01/9fcdb6e35978ec84d171f0883321f79889613175ff56d7e3a8825ba3ba08/bpylist-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "03bcdbd34d9f89d8ab755a5c97f4c35d", "sha256": "708df5c37c59fac2ba4f394cf87c3655e767dd729f10d06d4ab48519514467cd"}, "downloads": -1, "filename": "bpylist-0.1.1.tar.gz", "has_sig": false, "md5_digest": "03bcdbd34d9f89d8ab755a5c97f4c35d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13751, "upload_time": "2017-09-12T16:32:33", "upload_time_iso_8601": "2017-09-12T16:32:33.276837Z", "url": "https://files.pythonhosted.org/packages/40/4b/9e7075587f95ef7b867bd4c5ecbe08c1a90471a992bbdb7b9c5a2e7b8a2f/bpylist-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "fe8f9ea66940b3519db7aafed43f5b7b", "sha256": "0e1e3e24fe4d39c5714897f4dfc655f170230fc99007b90e97180dde07f27d40"}, "downloads": -1, "filename": "bpylist-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fe8f9ea66940b3519db7aafed43f5b7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15208, "upload_time": "2017-09-12T19:29:36", "upload_time_iso_8601": "2017-09-12T19:29:36.649158Z", "url": "https://files.pythonhosted.org/packages/99/b0/d7af851a518c8572b9c7d3fe3f881acf6305c28015ad9aa5ca143fbe9907/bpylist-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "83984c768b58b2d2fa6f6afeccef9a29", "sha256": "7b065fbfc4ef2d2fad4c5cde00ef79d55f441d86fb91a3caba2fbdf1bc50e962"}, "downloads": -1, "filename": "bpylist-0.1.3.tar.gz", "has_sig": false, "md5_digest": "83984c768b58b2d2fa6f6afeccef9a29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15659, "upload_time": "2017-09-12T19:41:27", "upload_time_iso_8601": "2017-09-12T19:41:27.905369Z", "url": "https://files.pythonhosted.org/packages/13/9d/990d72aef7d27744b38d69222ddd2fb827deac47675824b6815a6ed7a11c/bpylist-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "e783257480030c60508bd7ae12c706cf", "sha256": "ac065c9f7b804a201999ebbc31b02df18e0fc29e03bcb1eac3e63696599b88ce"}, "downloads": -1, "filename": "bpylist-0.1.4.tar.gz", "has_sig": false, "md5_digest": "e783257480030c60508bd7ae12c706cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15812, "upload_time": "2017-09-12T19:49:14", "upload_time_iso_8601": "2017-09-12T19:49:14.053148Z", "url": "https://files.pythonhosted.org/packages/74/b8/d7f422d514c0a3ed714614477063bbc2bd9bdda2d6b86df0172d77ff9e95/bpylist-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e783257480030c60508bd7ae12c706cf", "sha256": "ac065c9f7b804a201999ebbc31b02df18e0fc29e03bcb1eac3e63696599b88ce"}, "downloads": -1, "filename": "bpylist-0.1.4.tar.gz", "has_sig": false, "md5_digest": "e783257480030c60508bd7ae12c706cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15812, "upload_time": "2017-09-12T19:49:14", "upload_time_iso_8601": "2017-09-12T19:49:14.053148Z", "url": "https://files.pythonhosted.org/packages/74/b8/d7f422d514c0a3ed714614477063bbc2bd9bdda2d6b86df0172d77ff9e95/bpylist-0.1.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:27 2020"}