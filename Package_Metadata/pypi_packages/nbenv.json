{"info": {"author": "Andrea Zonca", "author_email": "code@andreazonca.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "=====\nnbenv\n=====\n\n\n.. image:: https://img.shields.io/pypi/v/nbenv.svg\n        :target: https://pypi.python.org/pypi/nbenv\n\n.. image:: https://img.shields.io/travis/zonca/nbenv.svg\n        :target: https://travis-ci.org/zonca/nbenv\n\nStore conda environment package list inside Notebook documents\n\nThis package provides a hook for the Jupyter Notebook that saves metadata about the\nconda environment (equivalent of `conda env export`) inside the Notebook `.ipynb` file\neverytime that the Notebook is saved.\nIt also supports packages installed inside the conda environment with `pip`.\n\nOnce such Jupyter Notebook is shared, another user can inspect the environment where\nit ran:\n\n.. code-block:: bash\n\n    $ nbenv --extract my_notebook.ipynb\n\n    name: test_input_env\n    channels:\n    - defaults\n    - conda-forge\n    dependencies:\n    - ca-certificates=2017.08.26=h1d4fec5_0\n    - certifi=2017.7.27.1=py35h19f42a1_0\n    - decorator=4.1.2=py35h3a268aa_0\n    - ipykernel=4.6.1=py35h29d130c_0\n    - ipython=6.1.0=py35h1b71439_1\n    - ipython_genutils=0.2.0=py35hc9e07d0_0\n    - jupyter_client=5.1.0=py35h2bff583_0\n    - pip:\n      - ipython-genutils==0.2.0\n      - jupyter-client==5.1.0\n\nAnd re-create the same environment (includes install of IPython Kernel):\n\n.. code-block:: bash\n\n    $ nbenv my_notebook.ipynb --name reconstructed_env\n    $ source activate reconstructed_env\n    $ jupyter notebook\n\nThe environment metadata will be preserved if the Notebook file is modified by a Jupyter Notebook session\nwith no ``nbenv`` installed.\n\nInstall\n--------\n\nInstall the package with `pip install nbenv`\n\nInstall the Jupyter Notebook hook in your `.jupyter/jupyter_notebook_config.py`:\n\n.. code-block:: python\n\n    try:\n        from nbenv import save_conda_environment\n        c.FileContentsManager.pre_save_hook = save_conda_environment\n    except ImportError:\n        print(\"nbenv package not found: automatic saving of conda environment disabled\")\n\nImplementation details\n----------------------\n\nThe `pre_save_hook` is automatically triggered by the Jupyter Notebook before saving the Notebook\nto disk.\nIt identifies the conda environment being run checking the KernelSpec and then calls ``conda env export``\nand saves the output in ``[\"content\"][\"metadata\"][\"conda_environment\"]`` in the ``.ipynb`` JSON.\n\nThe ``nbenv`` command line tool can then extract that and use ``conda create`` to a new environment.\n\nCredits\n---------\n\nDesign of this package was conceived during discussion at the `Container Analysis Environments Workshop`_\nheld at NCSA in August 2017.\n\n.. _`Container Analysis Environments Workshop`: https://nationaldataservice.atlassian.net/wiki/spaces/NDSC/pages/37284774/Container+Analysis+Environments+Workshop\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zonca/nbenv", "keywords": "nbenv", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "nbenv", "package_url": "https://pypi.org/project/nbenv/", "platform": "", "project_url": "https://pypi.org/project/nbenv/", "project_urls": {"Homepage": "https://github.com/zonca/nbenv"}, "release_url": "https://pypi.org/project/nbenv/0.1.4/", "requires_dist": ["nbformat", "jupyter-client"], "requires_python": "", "summary": "Store conda environment package list inside Notebook documents", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/nbenv\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/nbenv.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a712bbd787a65e908d4b2a24550020c0077ec484/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6e62656e762e737667\"></a>\n<a href=\"https://travis-ci.org/zonca/nbenv\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/zonca/nbenv.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dffbc73ae253d8d26c6242ebb056893731921984/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f7a6f6e63612f6e62656e762e737667\"></a>\n<p>Store conda environment package list inside Notebook documents</p>\n<p>This package provides a hook for the Jupyter Notebook that saves metadata about the\nconda environment (equivalent of <cite>conda env export</cite>) inside the Notebook <cite>.ipynb</cite> file\neverytime that the Notebook is saved.\nIt also supports packages installed inside the conda environment with <cite>pip</cite>.</p>\n<p>Once such Jupyter Notebook is shared, another user can inspect the environment where\nit ran:</p>\n<pre>$ nbenv --extract my_notebook.ipynb\n\nname: test_input_env\nchannels:\n- defaults\n- conda-forge\ndependencies:\n- ca-certificates<span class=\"o\">=</span><span class=\"m\">2017</span>.08.26<span class=\"o\">=</span>h1d4fec5_0\n- <span class=\"nv\">certifi</span><span class=\"o\">=</span><span class=\"m\">2017</span>.7.27.1<span class=\"o\">=</span>py35h19f42a1_0\n- <span class=\"nv\">decorator</span><span class=\"o\">=</span><span class=\"m\">4</span>.1.2<span class=\"o\">=</span>py35h3a268aa_0\n- <span class=\"nv\">ipykernel</span><span class=\"o\">=</span><span class=\"m\">4</span>.6.1<span class=\"o\">=</span>py35h29d130c_0\n- <span class=\"nv\">ipython</span><span class=\"o\">=</span><span class=\"m\">6</span>.1.0<span class=\"o\">=</span>py35h1b71439_1\n- <span class=\"nv\">ipython_genutils</span><span class=\"o\">=</span><span class=\"m\">0</span>.2.0<span class=\"o\">=</span>py35hc9e07d0_0\n- <span class=\"nv\">jupyter_client</span><span class=\"o\">=</span><span class=\"m\">5</span>.1.0<span class=\"o\">=</span>py35h2bff583_0\n- pip:\n  - ipython-genutils<span class=\"o\">==</span><span class=\"m\">0</span>.2.0\n  - jupyter-client<span class=\"o\">==</span><span class=\"m\">5</span>.1.0\n</pre>\n<p>And re-create the same environment (includes install of IPython Kernel):</p>\n<pre>$ nbenv my_notebook.ipynb --name reconstructed_env\n$ <span class=\"nb\">source</span> activate reconstructed_env\n$ jupyter notebook\n</pre>\n<p>The environment metadata will be preserved if the Notebook file is modified by a Jupyter Notebook session\nwith no <tt>nbenv</tt> installed.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Install the package with <cite>pip install nbenv</cite></p>\n<p>Install the Jupyter Notebook hook in your <cite>.jupyter/jupyter_notebook_config.py</cite>:</p>\n<pre><span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">nbenv</span> <span class=\"kn\">import</span> <span class=\"n\">save_conda_environment</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">FileContentsManager</span><span class=\"o\">.</span><span class=\"n\">pre_save_hook</span> <span class=\"o\">=</span> <span class=\"n\">save_conda_environment</span>\n<span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"nbenv package not found: automatic saving of conda environment disabled\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"implementation-details\">\n<h2>Implementation details</h2>\n<p>The <cite>pre_save_hook</cite> is automatically triggered by the Jupyter Notebook before saving the Notebook\nto disk.\nIt identifies the conda environment being run checking the KernelSpec and then calls <tt>conda env export</tt>\nand saves the output in <tt><span class=\"pre\">[\"content\"][\"metadata\"][\"conda_environment\"]</span></tt> in the <tt>.ipynb</tt> JSON.</p>\n<p>The <tt>nbenv</tt> command line tool can then extract that and use <tt>conda create</tt> to a new environment.</p>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Design of this package was conceived during discussion at the <a href=\"https://nationaldataservice.atlassian.net/wiki/spaces/NDSC/pages/37284774/Container+Analysis+Environments+Workshop\" rel=\"nofollow\">Container Analysis Environments Workshop</a>\nheld at NCSA in August 2017.</p>\n<p>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n</div>\n\n          </div>"}, "last_serial": 3369599, "releases": {"0.1.4": [{"comment_text": "", "digests": {"md5": "c52fb5fc58cffe7a2affc4b2a3b2f4dd", "sha256": "6bfcd770cc75bf9bb5968af692a79ce4a5042b996b89737027c118176ff8c88f"}, "downloads": -1, "filename": "nbenv-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c52fb5fc58cffe7a2affc4b2a3b2f4dd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7911, "upload_time": "2017-11-27T23:47:45", "upload_time_iso_8601": "2017-11-27T23:47:45.621027Z", "url": "https://files.pythonhosted.org/packages/8e/66/aa85ce2824db43850e9e92c97c812698feb0d735d5c48b95c146c69c5182/nbenv-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97f2d0c8a5f06956695729e429281d05", "sha256": "a6f08fcde34b7174d982eebcee0f150bc9c25a7b8a15298493900c2f2aab12b3"}, "downloads": -1, "filename": "nbenv-0.1.4.tar.gz", "has_sig": false, "md5_digest": "97f2d0c8a5f06956695729e429281d05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14488, "upload_time": "2017-11-27T23:47:51", "upload_time_iso_8601": "2017-11-27T23:47:51.664368Z", "url": "https://files.pythonhosted.org/packages/8b/0d/0d1581bd19287db3719f09eace46003745ab60f62440cbd220d760853c07/nbenv-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c52fb5fc58cffe7a2affc4b2a3b2f4dd", "sha256": "6bfcd770cc75bf9bb5968af692a79ce4a5042b996b89737027c118176ff8c88f"}, "downloads": -1, "filename": "nbenv-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c52fb5fc58cffe7a2affc4b2a3b2f4dd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7911, "upload_time": "2017-11-27T23:47:45", "upload_time_iso_8601": "2017-11-27T23:47:45.621027Z", "url": "https://files.pythonhosted.org/packages/8e/66/aa85ce2824db43850e9e92c97c812698feb0d735d5c48b95c146c69c5182/nbenv-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97f2d0c8a5f06956695729e429281d05", "sha256": "a6f08fcde34b7174d982eebcee0f150bc9c25a7b8a15298493900c2f2aab12b3"}, "downloads": -1, "filename": "nbenv-0.1.4.tar.gz", "has_sig": false, "md5_digest": "97f2d0c8a5f06956695729e429281d05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14488, "upload_time": "2017-11-27T23:47:51", "upload_time_iso_8601": "2017-11-27T23:47:51.664368Z", "url": "https://files.pythonhosted.org/packages/8b/0d/0d1581bd19287db3719f09eace46003745ab60f62440cbd220d760853c07/nbenv-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:57 2020"}