{"info": {"author": "Evgeniy Titov", "author_email": "falgore88@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Environment :: Web Environment", "Environment :: X11 Applications", "Framework :: Django", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "command_manager\n===================\n\n\nEntry point for Python scripts.\nHelps you structure additional scripts of your application within one or more Python packages and call them from one place.\n\nInstallation\n-------------\nInstall using `pip`...\n\n    pip install command_manager\n\nUsing\n-------------------\nCreate a Python package anywhere in your application.\n\nFor example, the package `commands` and the entry point `manager.py`\n\n    .\n    \u251c\u2500\u2500 commands\n    \u2502   \u251c\u2500\u2500 __init__.py\n    \u2502   \u2514\u2500\u2500 my_first_command.py\n    \u251c\u2500\u2500 src\n    \u2514\u2500\u2500 manager.py\n\nIn `manage.py` add the following:\n\n    if __name__ == '__main__':\n        import logging.config # Optional for logging\n        from command_manager import Manager\n\n        LOGGING = { # Optional for logging\n            'version': 1,\n            'disable_existing_loggers': False,\n            'formatters': {\n                'verbose': {\n                    'format': '%(levelname)s | %(asctime)s | %(module)s | %(message)s'\n                }\n            },\n            'handlers': {\n                'commands_handler': {\n                    'level': 'INFO',\n                    'class': 'logging.handlers.RotatingFileHandler',\n                    'formatter': 'verbose',\n                    'filename': os.path.join(\"logs\", 'commands.log'),\n                    'maxBytes': 100000,\n                    'backupCount': 10,\n                }\n            },\n            'loggers': {\n                'commands.my_first_command': {\n                    'handlers': ['commands_handler'],\n                    'level': 'INFO',\n                    'propagate': False\n                }\n            },\n        }\n\n        logging.config.dictConfig(LOGGING) # Optional for logging\n        manager = Manager([\"commands\"])\n        manager.run()\n\nIn `my_first_command.py` add the following:\n\n    from command_manager.commands import BaseCommand\n    \n    \n    class Command(BaseCommand):\n    \n        description = \"Simple command\"\n    \n        def add_arguments(self, parser):\n            parser.add_argument(\"--arg1\", help=\"argument arg1\")\n            parser.add_argument(\"--arg2\", help=\"argument arg2\")\n    \n        def handle(self, *args, **kwargs):\n            self.logger.info(\"START\")\n            print \"Hello Word: arg1={arg1} arg2={arg2}\".format(**kwargs)\n            self.logger.info(\"END\")\n\n> **Warning:**\n> The class must be called the `Command` and inherited from `BaseCommand`\n\nNow call `manage.py` from the console.             \n![python manage.py](/asserts/manage.png)\n\nCall our command `my_first_command.py`\n![python manage.py my_first_command](/asserts/command_call.png)\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/falgore88/command_manager/tarball/v1.2.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/falgore88/command_manager/", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "command_manager", "package_url": "https://pypi.org/project/command_manager/", "platform": "", "project_url": "https://pypi.org/project/command_manager/", "project_urls": {"Download": "https://github.com/falgore88/command_manager/tarball/v1.2.0", "Homepage": "https://github.com/falgore88/command_manager/"}, "release_url": "https://pypi.org/project/command_manager/1.2.0/", "requires_dist": null, "requires_python": "", "summary": "Entry point for Python scripts", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            command_manager<br>===================<br><br><br>Entry point for Python scripts.<br>Helps you structure additional scripts of your application within one or more Python packages and call them from one place.<br><br>Installation<br>-------------<br>Install using `pip`...<br><br>    pip install command_manager<br><br>Using<br>-------------------<br>Create a Python package anywhere in your application.<br><br>For example, the package `commands` and the entry point `manager.py`<br><br>    .<br>    \u251c\u2500\u2500 commands<br>    \u2502   \u251c\u2500\u2500 __init__.py<br>    \u2502   \u2514\u2500\u2500 my_first_command.py<br>    \u251c\u2500\u2500 src<br>    \u2514\u2500\u2500 manager.py<br><br>In `manage.py` add the following:<br><br>    if __name__ == '__main__':<br>        import logging.config # Optional for logging<br>        from command_manager import Manager<br><br>        LOGGING = { # Optional for logging<br>            'version': 1,<br>            'disable_existing_loggers': False,<br>            'formatters': {<br>                'verbose': {<br>                    'format': '%(levelname)s | %(asctime)s | %(module)s | %(message)s'<br>                }<br>            },<br>            'handlers': {<br>                'commands_handler': {<br>                    'level': 'INFO',<br>                    'class': 'logging.handlers.RotatingFileHandler',<br>                    'formatter': 'verbose',<br>                    'filename': os.path.join(\"logs\", 'commands.log'),<br>                    'maxBytes': 100000,<br>                    'backupCount': 10,<br>                }<br>            },<br>            'loggers': {<br>                'commands.my_first_command': {<br>                    'handlers': ['commands_handler'],<br>                    'level': 'INFO',<br>                    'propagate': False<br>                }<br>            },<br>        }<br><br>        logging.config.dictConfig(LOGGING) # Optional for logging<br>        manager = Manager([\"commands\"])<br>        manager.run()<br><br>In `my_first_command.py` add the following:<br><br>    from command_manager.commands import BaseCommand<br>    <br>    <br>    class Command(BaseCommand):<br>    <br>        description = \"Simple command\"<br>    <br>        def add_arguments(self, parser):<br>            parser.add_argument(\"--arg1\", help=\"argument arg1\")<br>            parser.add_argument(\"--arg2\", help=\"argument arg2\")<br>    <br>        def handle(self, *args, **kwargs):<br>            self.logger.info(\"START\")<br>            print \"Hello Word: arg1={arg1} arg2={arg2}\".format(**kwargs)<br>            self.logger.info(\"END\")<br><br>&gt; **Warning:**<br>&gt; The class must be called the `Command` and inherited from `BaseCommand`<br><br>Now call `manage.py` from the console.             <br>![python manage.py](/asserts/manage.png)<br><br>Call our command `my_first_command.py`<br>![python manage.py my_first_command](/asserts/command_call.png)<br>\n          </div>"}, "last_serial": 3425991, "releases": {"1.0.5": [{"comment_text": "", "digests": {"md5": "7082a379db9f17ab10ef5f9cf29ab2d9", "sha256": "df594fcdbd49a21d03fee9f81b8b9b38eda4c45a28ae941c46fc34217c89c38c"}, "downloads": -1, "filename": "command_manager-1.0.5.tar.gz", "has_sig": false, "md5_digest": "7082a379db9f17ab10ef5f9cf29ab2d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4181, "upload_time": "2017-10-31T14:37:56", "upload_time_iso_8601": "2017-10-31T14:37:56.298994Z", "url": "https://files.pythonhosted.org/packages/98/02/882bf7382b4978d2c7b49910d97afe9587d3fb50c9399be31db551cf636c/command_manager-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "bc837b883cc768e33176c6eb6c5d31ce", "sha256": "0142b8b621cb6569abee12120d5ec525fca3943eaac2253f244a825c02eb3e2c"}, "downloads": -1, "filename": "command_manager-1.0.6.tar.gz", "has_sig": false, "md5_digest": "bc837b883cc768e33176c6eb6c5d31ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4497, "upload_time": "2017-10-31T15:03:23", "upload_time_iso_8601": "2017-10-31T15:03:23.232772Z", "url": "https://files.pythonhosted.org/packages/a2/21/534bc3d926815ea3652e51ef29ce96d856ca1badd5d142abe9bce91648b7/command_manager-1.0.6.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "b00cd5e20a5a22be41537064ca950e59", "sha256": "a73df3b5bc81a50269354847bd59f7ba046335e5d30f4d1eabd629a67aa02db3"}, "downloads": -1, "filename": "command_manager-1.2.0.tar.gz", "has_sig": false, "md5_digest": "b00cd5e20a5a22be41537064ca950e59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4463, "upload_time": "2017-12-18T21:15:00", "upload_time_iso_8601": "2017-12-18T21:15:00.954590Z", "url": "https://files.pythonhosted.org/packages/f9/81/df3eace50a657ccf0e407632dc90ef810eea4a6b62d964819f1ef769bd47/command_manager-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b00cd5e20a5a22be41537064ca950e59", "sha256": "a73df3b5bc81a50269354847bd59f7ba046335e5d30f4d1eabd629a67aa02db3"}, "downloads": -1, "filename": "command_manager-1.2.0.tar.gz", "has_sig": false, "md5_digest": "b00cd5e20a5a22be41537064ca950e59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4463, "upload_time": "2017-12-18T21:15:00", "upload_time_iso_8601": "2017-12-18T21:15:00.954590Z", "url": "https://files.pythonhosted.org/packages/f9/81/df3eace50a657ccf0e407632dc90ef810eea4a6b62d964819f1ef769bd47/command_manager-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:24 2020"}