{"info": {"author": "Geir Arne Hjelle", "author_email": "geirarne@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Microsoft", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# \ud83d\udc0d - Write Python with Emojis\n\nWrite Python code using emojis \ud83d\udc0d\n\n\n## Inspiration\n\n[Marc Garcia](http://datapythonista.github.io/) gave a wonderful [lightning talk](https://www.youtube.com/watch?v=Wtm7Iy-wEUI&t=52m43s) at [EuroSciPy 2018 in Trento](https://www.euroscipy.org/2018/), where he pointed out some obvious [deficiencies](https://github.com/python/cpython/pull/1686) in Python's handling of unicode. For instance, code like the following is not supported:\n\n```python\nimport pandas as \ud83d\udc3c\n```\n\n\n## Installation\n\n\ud83d\udc0d is available on [PyPI](https://pypi.org/project/pythonji). Install it with `pip`:\n\n```\n$ python -m pip install pythonji\n```\n\n\n## Using \ud83d\udc0d\n\n\ud83d\udc0d installs as `pythonji`. \ud83d\udc0d code files have the suffix `.\ud83d\udc0d`. You can run a \ud83d\udc0d code file as follows:\n\n```console\n$ pythonji file.\ud83d\udc0d\n```\n\n\n## Example\n\nSave the following code to the file `\ud83d\udc3c.\ud83d\udc0d`:\n\n```python\nimport pandas as \ud83d\udc3c\n\n# Define a dataframe and print it to the console\n\ud83d\udc0d = \ud83d\udc3c.DataFrame(\n    {\n        \"animal\": [\"Panda\", \"Python\", \"Lion\"],\n        \"\ud83d\ude00\": [\"\ud83d\udc3c\", \"\ud83d\udc0d\", \"\ud83e\udd81\"],\n        \"number\": [1, 2, 3],\n    },\n).set_index(\"\ud83d\ude00\")\nprint(\ud83d\udc0d)\n\n# Do some arithmetic with the dataframe\n\ud83d\udd24 = f\" Pythonji {' '.join(\ud83d\udc0d.index)}\"\n\ud83d\udd22 = \ud83d\udc0d.loc[\"\ud83d\udc0d\"].number + \ud83d\udc0d.loc[\"\ud83d\udc3c\"].number\nprint(\ud83d\udd24 * \ud83d\udd22)\n```\n\nYou can run the code as follows:\n\n```console\n$ pythonji \ud83d\udc3c.\ud83d\udc0d \n   animal  number\n\ud83d\ude00                \n\ud83d\udc3c   Panda       1\n\ud83d\udc0d  Python       2\n\ud83e\udd81    Lion       3\n Pythonji \ud83d\udc3c \ud83d\udc0d \ud83e\udd81 Pythonji \ud83d\udc3c \ud83d\udc0d \ud83e\udd81 Pythonji \ud83d\udc3c \ud83d\udc0d \ud83e\udd81\n```\n\n\n## Limitations\n\n- \ud83d\udc0d currently only handles single script files. It can import any regular Python module, but unfortunately not \ud83d\udc0d modules.\n- Sadly, `pip` does not currently handle unicode command names. Ideally, we want the executable to be named `\ud83d\udc0d` instead of `pythonji`.\n- [Black](https://black.readthedocs.io) unfortunately can not handle \ud83d\udc0d code. Does anybody want to contribute to \u2b1b, a formatter for \ud83d\udc0d?\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gahjelle/pythonji", "keywords": "python emoji", "license": "", "maintainer": "", "maintainer_email": "", "name": "pythonji", "package_url": "https://pypi.org/project/pythonji/", "platform": "", "project_url": "https://pypi.org/project/pythonji/", "project_urls": {"Homepage": "https://github.com/gahjelle/pythonji"}, "release_url": "https://pypi.org/project/pythonji/0.1.1/", "requires_dist": ["emoji", "black; extra == \"dev\"", "bumpversion; extra == \"dev\"", "flake8; extra == \"dev\"", "flit; extra == \"dev\"", "isort; extra == \"dev\"", "mypy; extra == \"dev\"", "pre-commit; extra == \"dev\"", "mkdocs; extra == \"doc\"", "black; extra == \"test\"", "flake8; extra == \"test\"", "isort; extra == \"test\"", "mypy; extra == \"test\"", "pytest; extra == \"test\"", "pytest-cov; extra == \"test\"", "tox; extra == \"test\""], "requires_python": ">=3.6", "summary": "\ud83d\udc0d - Write Python with Emojis", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>\ud83d\udc0d - Write Python with Emojis</h1>\n<p>Write Python code using emojis \ud83d\udc0d</p>\n<h2>Inspiration</h2>\n<p><a href=\"http://datapythonista.github.io/\" rel=\"nofollow\">Marc Garcia</a> gave a wonderful <a href=\"https://www.youtube.com/watch?v=Wtm7Iy-wEUI&amp;t=52m43s\" rel=\"nofollow\">lightning talk</a> at <a href=\"https://www.euroscipy.org/2018/\" rel=\"nofollow\">EuroSciPy 2018 in Trento</a>, where he pointed out some obvious <a href=\"https://github.com/python/cpython/pull/1686\" rel=\"nofollow\">deficiencies</a> in Python's handling of unicode. For instance, code like the following is not supported:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"err\">\ud83d\udc3c</span>\n</pre>\n<h2>Installation</h2>\n<p>\ud83d\udc0d is available on <a href=\"https://pypi.org/project/pythonji\" rel=\"nofollow\">PyPI</a>. Install it with <code>pip</code>:</p>\n<pre><code>$ python -m pip install pythonji\n</code></pre>\n<h2>Using \ud83d\udc0d</h2>\n<p>\ud83d\udc0d installs as <code>pythonji</code>. \ud83d\udc0d code files have the suffix <code>.\ud83d\udc0d</code>. You can run a \ud83d\udc0d code file as follows:</p>\n<pre><span class=\"gp\">$</span> pythonji file.\ud83d\udc0d\n</pre>\n<h2>Example</h2>\n<p>Save the following code to the file <code>\ud83d\udc3c.\ud83d\udc0d</code>:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"err\">\ud83d\udc3c</span>\n\n<span class=\"c1\"># Define a dataframe and print it to the console</span>\n<span class=\"err\">\ud83d\udc0d</span> <span class=\"o\">=</span> <span class=\"err\">\ud83d\udc3c</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">\"animal\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"Panda\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Python\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Lion\"</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"\ud83d\ude00\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"\ud83d\udc3c\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\ud83d\udc0d\"</span><span class=\"p\">,</span> <span class=\"s2\">\"\ud83e\udd81\"</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"number\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set_index</span><span class=\"p\">(</span><span class=\"s2\">\"\ud83d\ude00\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"err\">\ud83d\udc0d</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Do some arithmetic with the dataframe</span>\n<span class=\"err\">\ud83d\udd24</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">\" Pythonji </span><span class=\"si\">{</span><span class=\"s1\">' '</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"err\">\ud83d\udc0d</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n<span class=\"err\">\ud83d\udd22</span> <span class=\"o\">=</span> <span class=\"err\">\ud83d\udc0d</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"s2\">\"\ud83d\udc0d\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">number</span> <span class=\"o\">+</span> <span class=\"err\">\ud83d\udc0d</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"s2\">\"\ud83d\udc3c\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">number</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"err\">\ud83d\udd24</span> <span class=\"o\">*</span> <span class=\"err\">\ud83d\udd22</span><span class=\"p\">)</span>\n</pre>\n<p>You can run the code as follows:</p>\n<pre><span class=\"gp\">$</span> pythonji \ud83d\udc3c.\ud83d\udc0d \n<span class=\"go\">   animal  number</span>\n<span class=\"go\">\ud83d\ude00                </span>\n<span class=\"go\">\ud83d\udc3c   Panda       1</span>\n<span class=\"go\">\ud83d\udc0d  Python       2</span>\n<span class=\"go\">\ud83e\udd81    Lion       3</span>\n<span class=\"go\"> Pythonji \ud83d\udc3c \ud83d\udc0d \ud83e\udd81 Pythonji \ud83d\udc3c \ud83d\udc0d \ud83e\udd81 Pythonji \ud83d\udc3c \ud83d\udc0d \ud83e\udd81</span>\n</pre>\n<h2>Limitations</h2>\n<ul>\n<li>\ud83d\udc0d currently only handles single script files. It can import any regular Python module, but unfortunately not \ud83d\udc0d modules.</li>\n<li>Sadly, <code>pip</code> does not currently handle unicode command names. Ideally, we want the executable to be named <code>\ud83d\udc0d</code> instead of <code>pythonji</code>.</li>\n<li><a href=\"https://black.readthedocs.io\" rel=\"nofollow\">Black</a> unfortunately can not handle \ud83d\udc0d code. Does anybody want to contribute to \u2b1b, a formatter for \ud83d\udc0d?</li>\n</ul>\n\n          </div>"}, "last_serial": 6149044, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "fdc49b5c86595a814c03d75a66b8fe2b", "sha256": "59eea489698881fc32afc7c0a5265f58ed22d6678661d43f2f8bd5ed2161810c"}, "downloads": -1, "filename": "pythonji-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fdc49b5c86595a814c03d75a66b8fe2b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5248, "upload_time": "2019-11-17T00:12:29", "upload_time_iso_8601": "2019-11-17T00:12:29.846615Z", "url": "https://files.pythonhosted.org/packages/ea/e8/a7e0551e034de9f7117dcdd3c6c5ec7813033ebb64b895e37c55d3732baf/pythonji-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82ae94d7c13e772e6c2ee0d078ef97aa", "sha256": "a1d9f40bfc03e64fac5a81d1d5c85ffc8369523c309a79656f97533f103e1a22"}, "downloads": -1, "filename": "pythonji-0.1.0.tar.gz", "has_sig": false, "md5_digest": "82ae94d7c13e772e6c2ee0d078ef97aa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4581, "upload_time": "2019-11-17T00:12:32", "upload_time_iso_8601": "2019-11-17T00:12:32.939581Z", "url": "https://files.pythonhosted.org/packages/f5/b5/eafaba1bad4db4262d3cb388eaea365f2ba5138ed7216f4c2c2b33479d1d/pythonji-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7b1184e4432b0d69b7dc48f075682ae1", "sha256": "eebfb17bf3a2b42f3f49b5af1c78a534e2c96e2853bbfa88da37defb4dbb6d39"}, "downloads": -1, "filename": "pythonji-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7b1184e4432b0d69b7dc48f075682ae1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5308, "upload_time": "2019-11-17T00:41:33", "upload_time_iso_8601": "2019-11-17T00:41:33.806658Z", "url": "https://files.pythonhosted.org/packages/36/3c/80ce87ef145d2beb01931636aa9be946b72cc244c0432f6bcf78e8efb10e/pythonji-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4bcade7b05127f3e9839d2565dcda8cf", "sha256": "6d757578095ace4f31019e36ebed46e657741c1d355100dfa3eaa3060b160a49"}, "downloads": -1, "filename": "pythonji-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4bcade7b05127f3e9839d2565dcda8cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4638, "upload_time": "2019-11-17T00:41:36", "upload_time_iso_8601": "2019-11-17T00:41:36.159103Z", "url": "https://files.pythonhosted.org/packages/1d/83/15582be077f6b119d166215207ce20a286d35c87e2e568b019907f932c8b/pythonji-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7b1184e4432b0d69b7dc48f075682ae1", "sha256": "eebfb17bf3a2b42f3f49b5af1c78a534e2c96e2853bbfa88da37defb4dbb6d39"}, "downloads": -1, "filename": "pythonji-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7b1184e4432b0d69b7dc48f075682ae1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5308, "upload_time": "2019-11-17T00:41:33", "upload_time_iso_8601": "2019-11-17T00:41:33.806658Z", "url": "https://files.pythonhosted.org/packages/36/3c/80ce87ef145d2beb01931636aa9be946b72cc244c0432f6bcf78e8efb10e/pythonji-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4bcade7b05127f3e9839d2565dcda8cf", "sha256": "6d757578095ace4f31019e36ebed46e657741c1d355100dfa3eaa3060b160a49"}, "downloads": -1, "filename": "pythonji-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4bcade7b05127f3e9839d2565dcda8cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4638, "upload_time": "2019-11-17T00:41:36", "upload_time_iso_8601": "2019-11-17T00:41:36.159103Z", "url": "https://files.pythonhosted.org/packages/1d/83/15582be077f6b119d166215207ce20a286d35c87e2e568b019907f932c8b/pythonji-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:07 2020"}