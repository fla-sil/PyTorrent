{"info": {"author": "Joseph L Buell V", "author_email": "jlrbuellv@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "__flaskdocs__ is a lightweight wrapper around a flask app which aims to centralize both validation and documentation of an API.  Declare the schemas you're accept/return, and flaskdocs will let you generate an openapi.json file, as well as validating incoming requests and returning errors to the client if a request doesn't match the given schema.\n\n# Example usage:\n\nDeclare a flask app and pass it to a flaskdocs API as follows:\n\n    from flask import Flask, jsonify\n\n    from flaskdocs import API\n    from flaskdocs.schema import (\n        JsonSchema,\n        QueryParameterSchema,\n        Literal,\n        Use,\n    )\n\n    app = Flask(__name__)\n\n    api = API(\n        title=\"example\",\n        version=\"0.0.1\",\n        description=\"Here's an example API\",\n        app=app,\n    )\n\n    @api.route(\n        name=\"Add Numbers\",\n        path=\"/add\",\n        methods=[\"GET\"],\n        description=\"Add two numbers together and return the sum\",\n        query_parameter_schema=QueryParameterSchema({\n            # use \"Use\" here to tell the parser try calling float, rather\n            # than doing a type check, because queryParameters always come\n            # in as strings\n            Literal(\"x\", description=\"The first number to add\"): Use(float),\n            Literal(\"y\", description=\"The second number to add\"): Use(float),\n        }),\n        response_schema={200: JsonSchema({\n            Literal(\"sum\", description=\"The sum x + y\"): float\n        })},\n    )\n    def add(x: float, y: float):\n        return jsonify({\"sum\": x + y})\n\n    api.output_openapi(\"example/openapi-spec.json\")\n\nTo run a more complete example (found in the `example` folder) run `FLASK_APP=example/server.py python -m flask run` from this directory.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mrincredibuell/flaskdocs", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "flaskdocs", "package_url": "https://pypi.org/project/flaskdocs/", "platform": "", "project_url": "https://pypi.org/project/flaskdocs/", "project_urls": {"Homepage": "https://github.com/mrincredibuell/flaskdocs"}, "release_url": "https://pypi.org/project/flaskdocs/0.0.1/", "requires_dist": ["Flask", "schema"], "requires_python": "", "summary": "A packed to help generate documentation automatically for flask endpoints.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>flaskdocs</strong> is a lightweight wrapper around a flask app which aims to centralize both validation and documentation of an API.  Declare the schemas you're accept/return, and flaskdocs will let you generate an openapi.json file, as well as validating incoming requests and returning errors to the client if a request doesn't match the given schema.</p>\n<h1>Example usage:</h1>\n<p>Declare a flask app and pass it to a flaskdocs API as follows:</p>\n<pre><code>from flask import Flask, jsonify\n\nfrom flaskdocs import API\nfrom flaskdocs.schema import (\n    JsonSchema,\n    QueryParameterSchema,\n    Literal,\n    Use,\n)\n\napp = Flask(__name__)\n\napi = API(\n    title=\"example\",\n    version=\"0.0.1\",\n    description=\"Here's an example API\",\n    app=app,\n)\n\n@api.route(\n    name=\"Add Numbers\",\n    path=\"/add\",\n    methods=[\"GET\"],\n    description=\"Add two numbers together and return the sum\",\n    query_parameter_schema=QueryParameterSchema({\n        # use \"Use\" here to tell the parser try calling float, rather\n        # than doing a type check, because queryParameters always come\n        # in as strings\n        Literal(\"x\", description=\"The first number to add\"): Use(float),\n        Literal(\"y\", description=\"The second number to add\"): Use(float),\n    }),\n    response_schema={200: JsonSchema({\n        Literal(\"sum\", description=\"The sum x + y\"): float\n    })},\n)\ndef add(x: float, y: float):\n    return jsonify({\"sum\": x + y})\n\napi.output_openapi(\"example/openapi-spec.json\")\n</code></pre>\n<p>To run a more complete example (found in the <code>example</code> folder) run <code>FLASK_APP=example/server.py python -m flask run</code> from this directory.</p>\n\n          </div>"}, "last_serial": 6599720, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7eab85633712438d6ac12583c0dd47e8", "sha256": "7b0c04580060df32f05645a265750ae4dea664f9e1f42210062010ccece6ab25"}, "downloads": -1, "filename": "flaskdocs-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7eab85633712438d6ac12583c0dd47e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6066, "upload_time": "2020-02-10T00:31:02", "upload_time_iso_8601": "2020-02-10T00:31:02.247169Z", "url": "https://files.pythonhosted.org/packages/91/e8/1c44043c810f61bf84358a8367edbc81ac8f905cd7aaa143a672d35dd01b/flaskdocs-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6c25400b4aae59a7cc8befbac854bd7", "sha256": "c23da7f1f7371dcc403461d00be52b520a2b6932a7ac55fee3d6bde8c86dbf97"}, "downloads": -1, "filename": "flaskdocs-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f6c25400b4aae59a7cc8befbac854bd7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5260, "upload_time": "2020-02-10T00:31:04", "upload_time_iso_8601": "2020-02-10T00:31:04.401870Z", "url": "https://files.pythonhosted.org/packages/80/44/afb08bcb9df3e39032031fac8cd32f01ab6a0e3e74c9ffb9e3c27f52e0e2/flaskdocs-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7eab85633712438d6ac12583c0dd47e8", "sha256": "7b0c04580060df32f05645a265750ae4dea664f9e1f42210062010ccece6ab25"}, "downloads": -1, "filename": "flaskdocs-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7eab85633712438d6ac12583c0dd47e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6066, "upload_time": "2020-02-10T00:31:02", "upload_time_iso_8601": "2020-02-10T00:31:02.247169Z", "url": "https://files.pythonhosted.org/packages/91/e8/1c44043c810f61bf84358a8367edbc81ac8f905cd7aaa143a672d35dd01b/flaskdocs-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6c25400b4aae59a7cc8befbac854bd7", "sha256": "c23da7f1f7371dcc403461d00be52b520a2b6932a7ac55fee3d6bde8c86dbf97"}, "downloads": -1, "filename": "flaskdocs-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f6c25400b4aae59a7cc8befbac854bd7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5260, "upload_time": "2020-02-10T00:31:04", "upload_time_iso_8601": "2020-02-10T00:31:04.401870Z", "url": "https://files.pythonhosted.org/packages/80/44/afb08bcb9df3e39032031fac8cd32f01ab6a0e3e74c9ffb9e3c27f52e0e2/flaskdocs-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:57 2020"}