{"info": {"author": "Chad Befus", "author_email": "crbefus@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: OS Independent", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Software Development :: Libraries :: Application Frameworks"], "description": "[![Build Status](https://img.shields.io/pypi/v/eynnyd.svg)](https://pypi.org/project/eynnyd/)\n[![Build Status](https://travis-ci.com/cbefus/eynnyd.svg?branch=master)](https://travis-ci.com/cbefus/eynnyd)\n[![Coverage Status](https://coveralls.io/repos/github/cbefus/Eynnyd/badge.svg?branch=master)](https://coveralls.io/github/cbefus/Eynnyd?branch=master)\n[![PyPI - License](https://img.shields.io/pypi/l/eynnyd)](https://pypi.org/project/eynnyd/)\n[![Python Versions](https://img.shields.io/pypi/pyversions/eynnyd.svg)](https://pypi.org/project/eynnyd/)\n[![Open Source Love](https://badges.frapsoft.com/os/v2/open-source.png?v=103)](https://github.com/open-source)\n[![Documentation Status](https://readthedocs.org/projects/eynnyd/badge/?version=latest)](https://eynnyd.readthedocs.io/en/latest/?badge=latest)\n\n<div align=\"center\" style=\"margin-top: -32px!important;margin-bottom: -70px!important;\">\n    <img\n        src=\"https://raw.githubusercontent.com/cbefus/eynnyd/master/logo/banner.png\"\n        alt=\"Eynnyd web framework logo\"\n        style=\"width:100%\"\n    >\n</div>\n\n# Eynnyd Web Framework\nEynnyd (pronounced [Ey-nahyd]) is an acronym for **Everything You Need, Nothing\nYou Don't**. It is a light-weight WSGI compliant python 3 web framework.\nEynnyd was designed with the primary goal to not impose bad engineering decisions\non it's users. It is also designed to not overstep or assume the wants of it's user.\n\n#### Simplicity and Freedom is the Design\nThis is the framework for you if the following sound good:\n* You are permitted but not coerced into following REST.\n* A `request handler` takes a `request` and returns a `response`.\n* A `request interceptor` takes a `request` and returns a `request`.\n* A `response interceptor` takes a `request` and a `response` and returns a `response`.\n* You can have any number of `request interceptors`, `request handlers`, or `response interceptors`.\n* You can name your handler methods anything you want.\n* You can limit the scope (paths it applies to) of any interceptor.\n* We do not provide extraneous dependencies or opinions (like database connection libraries or templating engines)\n* There is no _Eynnyd way_ to do things.\n* There is nothing _clever_ or _magic_. (like global singletons or special decorators)\n* You can see your entire routing layout, succinctly, in your main.\n\nIf this at all sounds good we recommend you keep reading and see what else Eynnyd\ncan provide for you.\n\n## Documents\nRead the documents at [eynnyd.readthedocs.io](https://eynnyd.readthedocs.io/en/latest)\n\n## How to install it\nEynnyd is published to pypi and can be installed using:\n```bash\npip install eynnyd\n```\n\n## How to use it\nEynnyd does not come with a built in WSGI HTTP server. We recommend\n[gunicorn](https://gunicorn.org/) for running your application.\n\nA simple hello world example looks like:\n```python\n# hello_world_app.py\nfrom eynnyd import RoutesBuilder\nfrom eynnyd import EynnydWebappBuilder\nfrom eynnyd import ResponseBuilder\nfrom http import HTTPStatus\n\ndef hello_world(request):\n    return ResponseBuilder()\\\n        .set_status(HTTPStatus.OK)\\\n        .set_utf8_body(\"Hello World\")\\\n        .build()\n\n\ndef build_application():\n    routes = \\\n        RoutesBuilder()\\\n            .add_handler(\"GET\", \"/hello\", hello_world)\\\n            .build()\n\n    return EynnydWebappBuilder()\\\n            .set_routes(routes)\\\n            .build()\n\napplication = build_application()\n```\nUsing gunicorn this can now be run `gunicorn hello_world_app`.\n\n### An example with interceptors\n\n```python\n# hello_world_app.py\nimport logging\n\nfrom eynnyd import RoutesBuilder\nfrom eynnyd import EynnydWebappBuilder\nfrom eynnyd import ResponseBuilder\nfrom http import HTTPStatus\n\nLOG = logging.getLogger(\"hello_world_app\")\n\ndef hello_world(request):\n    return ResponseBuilder()\\\n        .set_status(HTTPStatus.OK)\\\n        .set_utf8_body(\"Hello World\")\\\n        .build()\n\ndef log_request(request):\n    LOG.info(\"Got Request: {r}\".format(r=request))\n    return request\n\ndef log_response(request, response):\n    LOG.info(\"Built Response: {s} for Request: {r}\".format(s=response, r=request))\n    return response\n\ndef build_application():\n    routes = \\\n        RoutesBuilder()\\\n            .add_request_interceptor(\"/hello\", log_request)\\\n            .add_handler(\"GET\", \"/hello\", hello_world)\\\n            .add_response_interceptor(\"/hello\", log_response)\\\n            .build()\n\n    return EynnydWebappBuilder()\\\n            .set_routes(routes)\\\n            .build()\n\napplication = build_application()\n```\n\n# For Developers / Contributors\n\n## Installing requirements\nrun:\n```bash\npip install -r test_requirements.txt\n```\n\n## Running the tests\nAfter installing the requirements run:\n```bash\npython -m unittest discover tests\n```\n\n## Checking coverage\nAfter installing the requirements run:\n```bash\ncoverage run --source eynnyd/ -m unittest discover tests/\ncoverage report\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://eynnyd.readthedocs.io/en/latest/", "keywords": "wsgi web framework api rest http", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "eynnyd", "package_url": "https://pypi.org/project/eynnyd/", "platform": "", "project_url": "https://pypi.org/project/eynnyd/", "project_urls": {"Homepage": "https://eynnyd.readthedocs.io/en/latest/"}, "release_url": "https://pypi.org/project/eynnyd/0.4.0/", "requires_dist": ["arrow (==0.14.4)", "optional.py (==1.0.0)"], "requires_python": ">=3.5", "summary": "A light-weight wsgi web framework", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/eynnyd/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ad3357aab471f2f34177bc2938eeab6ae78d80b5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f65796e6e79642e737667\"></a>\n<a href=\"https://travis-ci.com/cbefus/eynnyd\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d8ac92a5a039ad6fe61e947fba29232b450ee233/68747470733a2f2f7472617669732d63692e636f6d2f6362656675732f65796e6e79642e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/cbefus/Eynnyd?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01addd2b5da1593d63fd32e4ea3e344273e0c557/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6362656675732f45796e6e79642f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/eynnyd/\" rel=\"nofollow\"><img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca723aae61619102765b47fc56d5dcbd06ee32ce/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f65796e6e7964\"></a>\n<a href=\"https://pypi.org/project/eynnyd/\" rel=\"nofollow\"><img alt=\"Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a5e7c7d7e4653ce3faf71e49a9a16803473a5a07/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f65796e6e79642e737667\"></a>\n<a href=\"https://github.com/open-source\" rel=\"nofollow\"><img alt=\"Open Source Love\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e029b9b092d3298de36cbe74b1518e11fb62cdbc/68747470733a2f2f6261646765732e66726170736f66742e636f6d2f6f732f76322f6f70656e2d736f757263652e706e673f763d313033\"></a>\n<a href=\"https://eynnyd.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b2b52cb15c355123ec954c5db006bc22e294aff4/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f65796e6e79642f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<div>\n    <img alt=\"Eynnyd web framework logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb57c05bb065ca09cf207614371c2304c9202710/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6362656675732f65796e6e79642f6d61737465722f6c6f676f2f62616e6e65722e706e67\">\n</div>\n<h1>Eynnyd Web Framework</h1>\n<p>Eynnyd (pronounced [Ey-nahyd]) is an acronym for <strong>Everything You Need, Nothing\nYou Don't</strong>. It is a light-weight WSGI compliant python 3 web framework.\nEynnyd was designed with the primary goal to not impose bad engineering decisions\non it's users. It is also designed to not overstep or assume the wants of it's user.</p>\n<h4>Simplicity and Freedom is the Design</h4>\n<p>This is the framework for you if the following sound good:</p>\n<ul>\n<li>You are permitted but not coerced into following REST.</li>\n<li>A <code>request handler</code> takes a <code>request</code> and returns a <code>response</code>.</li>\n<li>A <code>request interceptor</code> takes a <code>request</code> and returns a <code>request</code>.</li>\n<li>A <code>response interceptor</code> takes a <code>request</code> and a <code>response</code> and returns a <code>response</code>.</li>\n<li>You can have any number of <code>request interceptors</code>, <code>request handlers</code>, or <code>response interceptors</code>.</li>\n<li>You can name your handler methods anything you want.</li>\n<li>You can limit the scope (paths it applies to) of any interceptor.</li>\n<li>We do not provide extraneous dependencies or opinions (like database connection libraries or templating engines)</li>\n<li>There is no <em>Eynnyd way</em> to do things.</li>\n<li>There is nothing <em>clever</em> or <em>magic</em>. (like global singletons or special decorators)</li>\n<li>You can see your entire routing layout, succinctly, in your main.</li>\n</ul>\n<p>If this at all sounds good we recommend you keep reading and see what else Eynnyd\ncan provide for you.</p>\n<h2>Documents</h2>\n<p>Read the documents at <a href=\"https://eynnyd.readthedocs.io/en/latest\" rel=\"nofollow\">eynnyd.readthedocs.io</a></p>\n<h2>How to install it</h2>\n<p>Eynnyd is published to pypi and can be installed using:</p>\n<pre>pip install eynnyd\n</pre>\n<h2>How to use it</h2>\n<p>Eynnyd does not come with a built in WSGI HTTP server. We recommend\n<a href=\"https://gunicorn.org/\" rel=\"nofollow\">gunicorn</a> for running your application.</p>\n<p>A simple hello world example looks like:</p>\n<pre><span class=\"c1\"># hello_world_app.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">eynnyd</span> <span class=\"kn\">import</span> <span class=\"n\">RoutesBuilder</span>\n<span class=\"kn\">from</span> <span class=\"nn\">eynnyd</span> <span class=\"kn\">import</span> <span class=\"n\">EynnydWebappBuilder</span>\n<span class=\"kn\">from</span> <span class=\"nn\">eynnyd</span> <span class=\"kn\">import</span> <span class=\"n\">ResponseBuilder</span>\n<span class=\"kn\">from</span> <span class=\"nn\">http</span> <span class=\"kn\">import</span> <span class=\"n\">HTTPStatus</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">ResponseBuilder</span><span class=\"p\">()</span>\\\n        <span class=\"o\">.</span><span class=\"n\">set_status</span><span class=\"p\">(</span><span class=\"n\">HTTPStatus</span><span class=\"o\">.</span><span class=\"n\">OK</span><span class=\"p\">)</span>\\\n        <span class=\"o\">.</span><span class=\"n\">set_utf8_body</span><span class=\"p\">(</span><span class=\"s2\">\"Hello World\"</span><span class=\"p\">)</span>\\\n        <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">build_application</span><span class=\"p\">():</span>\n    <span class=\"n\">routes</span> <span class=\"o\">=</span> \\\n        <span class=\"n\">RoutesBuilder</span><span class=\"p\">()</span>\\\n            <span class=\"o\">.</span><span class=\"n\">add_handler</span><span class=\"p\">(</span><span class=\"s2\">\"GET\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/hello\"</span><span class=\"p\">,</span> <span class=\"n\">hello_world</span><span class=\"p\">)</span>\\\n            <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">EynnydWebappBuilder</span><span class=\"p\">()</span>\\\n            <span class=\"o\">.</span><span class=\"n\">set_routes</span><span class=\"p\">(</span><span class=\"n\">routes</span><span class=\"p\">)</span>\\\n            <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n\n<span class=\"n\">application</span> <span class=\"o\">=</span> <span class=\"n\">build_application</span><span class=\"p\">()</span>\n</pre>\n<p>Using gunicorn this can now be run <code>gunicorn hello_world_app</code>.</p>\n<h3>An example with interceptors</h3>\n<pre><span class=\"c1\"># hello_world_app.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">eynnyd</span> <span class=\"kn\">import</span> <span class=\"n\">RoutesBuilder</span>\n<span class=\"kn\">from</span> <span class=\"nn\">eynnyd</span> <span class=\"kn\">import</span> <span class=\"n\">EynnydWebappBuilder</span>\n<span class=\"kn\">from</span> <span class=\"nn\">eynnyd</span> <span class=\"kn\">import</span> <span class=\"n\">ResponseBuilder</span>\n<span class=\"kn\">from</span> <span class=\"nn\">http</span> <span class=\"kn\">import</span> <span class=\"n\">HTTPStatus</span>\n\n<span class=\"n\">LOG</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s2\">\"hello_world_app\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">ResponseBuilder</span><span class=\"p\">()</span>\\\n        <span class=\"o\">.</span><span class=\"n\">set_status</span><span class=\"p\">(</span><span class=\"n\">HTTPStatus</span><span class=\"o\">.</span><span class=\"n\">OK</span><span class=\"p\">)</span>\\\n        <span class=\"o\">.</span><span class=\"n\">set_utf8_body</span><span class=\"p\">(</span><span class=\"s2\">\"Hello World\"</span><span class=\"p\">)</span>\\\n        <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">log_request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">LOG</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Got Request: </span><span class=\"si\">{r}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">request</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">log_response</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">):</span>\n    <span class=\"n\">LOG</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Built Response: </span><span class=\"si\">{s}</span><span class=\"s2\"> for Request: </span><span class=\"si\">{r}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">=</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">response</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">build_application</span><span class=\"p\">():</span>\n    <span class=\"n\">routes</span> <span class=\"o\">=</span> \\\n        <span class=\"n\">RoutesBuilder</span><span class=\"p\">()</span>\\\n            <span class=\"o\">.</span><span class=\"n\">add_request_interceptor</span><span class=\"p\">(</span><span class=\"s2\">\"/hello\"</span><span class=\"p\">,</span> <span class=\"n\">log_request</span><span class=\"p\">)</span>\\\n            <span class=\"o\">.</span><span class=\"n\">add_handler</span><span class=\"p\">(</span><span class=\"s2\">\"GET\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/hello\"</span><span class=\"p\">,</span> <span class=\"n\">hello_world</span><span class=\"p\">)</span>\\\n            <span class=\"o\">.</span><span class=\"n\">add_response_interceptor</span><span class=\"p\">(</span><span class=\"s2\">\"/hello\"</span><span class=\"p\">,</span> <span class=\"n\">log_response</span><span class=\"p\">)</span>\\\n            <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">EynnydWebappBuilder</span><span class=\"p\">()</span>\\\n            <span class=\"o\">.</span><span class=\"n\">set_routes</span><span class=\"p\">(</span><span class=\"n\">routes</span><span class=\"p\">)</span>\\\n            <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n\n<span class=\"n\">application</span> <span class=\"o\">=</span> <span class=\"n\">build_application</span><span class=\"p\">()</span>\n</pre>\n<h1>For Developers / Contributors</h1>\n<h2>Installing requirements</h2>\n<p>run:</p>\n<pre>pip install -r test_requirements.txt\n</pre>\n<h2>Running the tests</h2>\n<p>After installing the requirements run:</p>\n<pre>python -m unittest discover tests\n</pre>\n<h2>Checking coverage</h2>\n<p>After installing the requirements run:</p>\n<pre>coverage run --source eynnyd/ -m unittest discover tests/\ncoverage report\n</pre>\n\n          </div>"}, "last_serial": 6491096, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "cbc2fa12f53c44e0584cdb8edd6ffa1d", "sha256": "c9eddb9ebe1bb45300f6f1b77a666451cf9cdf088305b0670e8c799d6c210c91"}, "downloads": -1, "filename": "eynnyd-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cbc2fa12f53c44e0584cdb8edd6ffa1d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 62227, "upload_time": "2019-11-11T22:50:33", "upload_time_iso_8601": "2019-11-11T22:50:33.753578Z", "url": "https://files.pythonhosted.org/packages/97/c3/cb7e2b00013fdcac16239e475ac75bb2f1e7c92b060d98e6b0f8bffd6f74/eynnyd-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4429a06f555de79632a269d5caa50676", "sha256": "883b68361d8e0657930e21f35ad691de4c21e5c72f29b51c808d90974e697b3c"}, "downloads": -1, "filename": "eynnyd-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4429a06f555de79632a269d5caa50676", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 36720, "upload_time": "2019-11-11T22:50:36", "upload_time_iso_8601": "2019-11-11T22:50:36.676320Z", "url": "https://files.pythonhosted.org/packages/b1/02/0c42a9718e8f0bea8ed51e7aaa8eff46404e6709c268ff5d2b7f41a5e1a9/eynnyd-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "56ff34e3c79823e1e35d7ebe3ca7e7e3", "sha256": "adfc5ebe7ea6fa79dea08e333d5336ee87bfb9d24d2beb3c1606f521bcd5d402"}, "downloads": -1, "filename": "eynnyd-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "56ff34e3c79823e1e35d7ebe3ca7e7e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 62379, "upload_time": "2019-12-13T01:40:43", "upload_time_iso_8601": "2019-12-13T01:40:43.684326Z", "url": "https://files.pythonhosted.org/packages/60/fd/53bde2c88f15ddcc0d87d5b71fdbd9a25176a6d64ee785d8e6af4ea4109b/eynnyd-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fad43101b0ddd464ce18d27609b02133", "sha256": "5b379660856f824a372276cff1c2f20a0253171e61ef8ffb4710c8997f791fcb"}, "downloads": -1, "filename": "eynnyd-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fad43101b0ddd464ce18d27609b02133", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 36962, "upload_time": "2019-12-13T01:40:45", "upload_time_iso_8601": "2019-12-13T01:40:45.302343Z", "url": "https://files.pythonhosted.org/packages/17/e5/09bc551cae6cba74c1e6160ccebc78d4d64b5648913d7257f64099a6f422/eynnyd-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "caf0808f364959f7a703ecac160cb158", "sha256": "846196856b1e45a5c162a370193434ba1931bd990b0d98dd149d6de4040d7cc7"}, "downloads": -1, "filename": "eynnyd-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "caf0808f364959f7a703ecac160cb158", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 62781, "upload_time": "2020-01-07T14:22:50", "upload_time_iso_8601": "2020-01-07T14:22:50.989568Z", "url": "https://files.pythonhosted.org/packages/42/c2/e6a1b6035bf17eee73e9e708d62c448972fb0fe19cf42e516335eb2c6e48/eynnyd-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e55531c707e497bf7bd9f590bcbe57c", "sha256": "d3904e1c181caca7cae4a3e5258cc3e1e037d73d68d7ddab4003f485a430de24"}, "downloads": -1, "filename": "eynnyd-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8e55531c707e497bf7bd9f590bcbe57c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 38643, "upload_time": "2020-01-07T14:22:52", "upload_time_iso_8601": "2020-01-07T14:22:52.420510Z", "url": "https://files.pythonhosted.org/packages/cc/ab/e0e40b0edbb738a0c5c1f352c02845db1fc91078ba673e03f81b8e635384/eynnyd-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "ae33b12cc5e90ac03fc502fe1eea7e05", "sha256": "0c58cb16530658d8061bcfe4f2a0b3f0ef9d62bd1a24b88225f3142400b3055f"}, "downloads": -1, "filename": "eynnyd-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ae33b12cc5e90ac03fc502fe1eea7e05", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 62815, "upload_time": "2020-01-07T14:30:03", "upload_time_iso_8601": "2020-01-07T14:30:03.716295Z", "url": "https://files.pythonhosted.org/packages/79/e2/b4e3337f2417be3c884b3cf82f5c201070ff694374003305d0774671d5c2/eynnyd-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd335bf86a35e3b949d3d74e37fc5be8", "sha256": "8f1e296152af1c553721affb2c519be30f4efed2d3a2b8be5bd40dfd15594663"}, "downloads": -1, "filename": "eynnyd-0.3.0.tar.gz", "has_sig": false, "md5_digest": "dd335bf86a35e3b949d3d74e37fc5be8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 38676, "upload_time": "2020-01-07T14:30:05", "upload_time_iso_8601": "2020-01-07T14:30:05.363413Z", "url": "https://files.pythonhosted.org/packages/59/4b/baa84a87dd3ebd51a89826e03f056b28411a0b08d9b8afe7a566a680c1d7/eynnyd-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "31b6945b295486b415d663094c865e7f", "sha256": "442e15d88fea9e006bb83618a3b3fbbe30f6a76382b0398c6b540572c1ed072e"}, "downloads": -1, "filename": "eynnyd-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "31b6945b295486b415d663094c865e7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 62820, "upload_time": "2020-01-20T22:46:42", "upload_time_iso_8601": "2020-01-20T22:46:42.831880Z", "url": "https://files.pythonhosted.org/packages/19/e2/e78e922ab31780f81d961a1d901b76d97acd48d7655566a12e5726947430/eynnyd-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "537c4594a3caf7e86e6e687887575882", "sha256": "2f121e71f26ecd3950e678735814d5a1dc37f36b78793733fc112ac2be4b2ce8"}, "downloads": -1, "filename": "eynnyd-0.4.0.tar.gz", "has_sig": false, "md5_digest": "537c4594a3caf7e86e6e687887575882", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 38721, "upload_time": "2020-01-20T22:46:44", "upload_time_iso_8601": "2020-01-20T22:46:44.503965Z", "url": "https://files.pythonhosted.org/packages/e3/bf/e200a09fb45faab5930210a292d0cb665e002dafd3e7394ef96c80f14099/eynnyd-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "31b6945b295486b415d663094c865e7f", "sha256": "442e15d88fea9e006bb83618a3b3fbbe30f6a76382b0398c6b540572c1ed072e"}, "downloads": -1, "filename": "eynnyd-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "31b6945b295486b415d663094c865e7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 62820, "upload_time": "2020-01-20T22:46:42", "upload_time_iso_8601": "2020-01-20T22:46:42.831880Z", "url": "https://files.pythonhosted.org/packages/19/e2/e78e922ab31780f81d961a1d901b76d97acd48d7655566a12e5726947430/eynnyd-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "537c4594a3caf7e86e6e687887575882", "sha256": "2f121e71f26ecd3950e678735814d5a1dc37f36b78793733fc112ac2be4b2ce8"}, "downloads": -1, "filename": "eynnyd-0.4.0.tar.gz", "has_sig": false, "md5_digest": "537c4594a3caf7e86e6e687887575882", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 38721, "upload_time": "2020-01-20T22:46:44", "upload_time_iso_8601": "2020-01-20T22:46:44.503965Z", "url": "https://files.pythonhosted.org/packages/e3/bf/e200a09fb45faab5930210a292d0cb665e002dafd3e7394ef96c80f14099/eynnyd-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:26 2020"}