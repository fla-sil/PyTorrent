{"info": {"author": "Martin Virtel", "author_email": "mv@datenfreunde.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: Unix", "Programming Language :: Python :: 3.6", "Topic :: Utilities"], "description": "========\nOverview\n========\n\nNetcat for MQTT\n\n* Free software: BSD 2-Clause License\n\n============\nInstallation\n============\n\nThis needs Python 3.6. At the command line::\n\n    pip3 install mqttcat\n\nIf your system does not provide python 3.6, a more comfortable way is to use the mqtttool Docker \ncontainer. Please see the `Github repo`_.\n\n\n=============\nDocumentation\n=============\n\n\n\n::\n\n\n    Usage: mqttcat [OPTIONS] URL\n\n      A MQTT Message filter inspired by netcat and other Unix tools.\n\n      Publishes Messages from STDIN to a MQTT Topic\n\n        -or-\n\n      Subscribes to MQTT Topic and writes messages to STDOUT\n\n      URL - Examples:\n\n          mqtt://hostname/topic     tcp://hostname:1883/topic\n          ws://hostname/topic\n\n      Usage Examples:\n\n          mqttcat --echo mqtt://localhost/%23 >/dev/null\n\n          ... will subscribe to all topics (\"%23\" is urlencoded #), and echo\n          them to STDERR for control\n\n          echo \"Heart ... beat\" | mqttcat --echo --loop --wait=3.3\n          mqtt://localhost/heartbeat-topic\n\n          ... will publish \"Heart ... beat\" every 3.3 seconds to the topic\n          \"heartbeat-topic\"\n\n          mqttcat mqtt://source/ticktock | rq 'filter (a) => { a.payload=\"tock\"\n          }' | mqttcat mqtt://destination/tock\n\n          ... subscribe to ticktock topic on host source, filter out the\n          messages whose payload is tock,     and forward those to the tock\n          topic (using the rq tool https://github.com/dflemstr/rq)\n\n    Options:\n      --loglevel TEXT             Python loglevel, one of\n                                  DEBUG,INFO,WARNING,ERROR,CRITICAL\n      --echo / --no-echo          Echo MQTT Messages to STDERR\n      --source TEXT               File to read MQTT messages to be published (use\n                                  '-' for STDIN)\n      --wait FLOAT                Wait time between publishing messages read from\n                                  --source in seconds (can be float)\n      --loop / --no-loop          Loop message publishing (starting at beginning\n                                  of file after the end is reached\n      --follow / --no-follow      Wait for additional in file after reaching the\n                                  end (like Unix 'tail -f')\n      --destination TEXT          Append JSON-encoded MQTT messages to this file\n                                  (use '-' for STDOUT)\n      --snapshot / --no-snapshot  Keep only the last JSON-encoded message in the\n                                  file specified with --destination\n      --help                      Show this message and exit.\n\n\n\n=======\nAuthors\n=======\n\n* Martin Virtel - https://twitter.com/mvtango\n\nThis module is part of the `Smart Orchestra Project`_, co-financed by the \n`Federal Ministery of Economics and Technology`_.\n\n\n.. _Smart Orchestra Project: http://smartorchestra.de\n\n.. _Github repo: https://github.com/martinvirtel/docker-mqtttool\n\n.. _Federal Ministery of Economics and Technology: https://www.bmwi.de/\n\n\nChangelog\n=========\n\n0.1.0 (2018-03-20)\n------------------\n\n* First release on PyPI.\n\n0.1.1 (2018-04-13)\n------------------\n\n* Flak8-compliant\n\n0.1.2 (2018-04-14)\n------------------\n\n* added --source and --destination options to the command line\n* source file can be followed (like 'tail -f ') with --follow\n* destination file can contain only the last messaget (with --snapshot)\n* destinations abstracted in emittargets.py\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/martinvirtel/python-mqttcat", "keywords": "mqtt", "license": "BSD 2-Clause License", "maintainer": "", "maintainer_email": "", "name": "mqttcat", "package_url": "https://pypi.org/project/mqttcat/", "platform": "", "project_url": "https://pypi.org/project/mqttcat/", "project_urls": {"Homepage": "https://github.com/martinvirtel/python-mqttcat"}, "release_url": "https://pypi.org/project/mqttcat/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "Netcat for MQTT", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>Netcat for MQTT</p>\n<ul>\n<li>Free software: BSD 2-Clause License</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>This needs Python 3.6. At the command line:</p>\n<pre>pip3 install mqttcat\n</pre>\n<p>If your system does not provide python 3.6, a more comfortable way is to use the mqtttool Docker\ncontainer. Please see the <a href=\"https://github.com/martinvirtel/docker-mqtttool\" rel=\"nofollow\">Github repo</a>.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<pre>Usage: mqttcat [OPTIONS] URL\n\n  A MQTT Message filter inspired by netcat and other Unix tools.\n\n  Publishes Messages from STDIN to a MQTT Topic\n\n    -or-\n\n  Subscribes to MQTT Topic and writes messages to STDOUT\n\n  URL - Examples:\n\n      mqtt://hostname/topic     tcp://hostname:1883/topic\n      ws://hostname/topic\n\n  Usage Examples:\n\n      mqttcat --echo mqtt://localhost/%23 &gt;/dev/null\n\n      ... will subscribe to all topics (\"%23\" is urlencoded #), and echo\n      them to STDERR for control\n\n      echo \"Heart ... beat\" | mqttcat --echo --loop --wait=3.3\n      mqtt://localhost/heartbeat-topic\n\n      ... will publish \"Heart ... beat\" every 3.3 seconds to the topic\n      \"heartbeat-topic\"\n\n      mqttcat mqtt://source/ticktock | rq 'filter (a) =&gt; { a.payload=\"tock\"\n      }' | mqttcat mqtt://destination/tock\n\n      ... subscribe to ticktock topic on host source, filter out the\n      messages whose payload is tock,     and forward those to the tock\n      topic (using the rq tool https://github.com/dflemstr/rq)\n\nOptions:\n  --loglevel TEXT             Python loglevel, one of\n                              DEBUG,INFO,WARNING,ERROR,CRITICAL\n  --echo / --no-echo          Echo MQTT Messages to STDERR\n  --source TEXT               File to read MQTT messages to be published (use\n                              '-' for STDIN)\n  --wait FLOAT                Wait time between publishing messages read from\n                              --source in seconds (can be float)\n  --loop / --no-loop          Loop message publishing (starting at beginning\n                              of file after the end is reached\n  --follow / --no-follow      Wait for additional in file after reaching the\n                              end (like Unix 'tail -f')\n  --destination TEXT          Append JSON-encoded MQTT messages to this file\n                              (use '-' for STDOUT)\n  --snapshot / --no-snapshot  Keep only the last JSON-encoded message in the\n                              file specified with --destination\n  --help                      Show this message and exit.\n</pre>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<ul>\n<li>Martin Virtel - <a href=\"https://twitter.com/mvtango\" rel=\"nofollow\">https://twitter.com/mvtango</a></li>\n</ul>\n<p>This module is part of the <a href=\"http://smartorchestra.de\" rel=\"nofollow\">Smart Orchestra Project</a>, co-financed by the\n<a href=\"https://www.bmwi.de/\" rel=\"nofollow\">Federal Ministery of Economics and Technology</a>.</p>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n<div id=\"id1\">\n<h4>0.1.0 (2018-03-20)</h4>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h4>0.1.1 (2018-04-13)</h4>\n<ul>\n<li>Flak8-compliant</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h4>0.1.2 (2018-04-14)</h4>\n<ul>\n<li>added \u2013source and \u2013destination options to the command line</li>\n<li>source file can be followed (like \u2018tail -f \u2018) with \u2013follow</li>\n<li>destination file can contain only the last messaget (with \u2013snapshot)</li>\n<li>destinations abstracted in emittargets.py</li>\n</ul>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3764447, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d6605368a71b6272dd1c6aff12e1978f", "sha256": "2ef52c2debb5a039d96a94248357281cf9a6366ceed7743eb5e3eeeeeb30b2b8"}, "downloads": -1, "filename": "mqttcat-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d6605368a71b6272dd1c6aff12e1978f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12753, "upload_time": "2018-04-13T00:43:24", "upload_time_iso_8601": "2018-04-13T00:43:24.848496Z", "url": "https://files.pythonhosted.org/packages/5a/7f/28858aaaa9a576b6f62fb524bfc504bf97a9a12e147ba847f12c056daf8c/mqttcat-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "f60b3deceeb1fdf9e1d3c03a39845cf2", "sha256": "8dada9df79ac6440bde1fab64cc37a67b1d3f83ee11dec4fd59a8b96bd6495cb"}, "downloads": -1, "filename": "mqttcat-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f60b3deceeb1fdf9e1d3c03a39845cf2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12819, "upload_time": "2018-04-13T06:34:42", "upload_time_iso_8601": "2018-04-13T06:34:42.601830Z", "url": "https://files.pythonhosted.org/packages/87/da/9274a3cb81c9ea795da255078ff6b43c8572932898aea4b59fabeac9c8b8/mqttcat-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "19aa9f83c2f335a5b2b787d2f0fe48ce", "sha256": "17a63089c8c4c35db84f64d03995dbe3dd8625adfd357f231cecb4764c4b7b3c"}, "downloads": -1, "filename": "mqttcat-0.1.2.tar.gz", "has_sig": false, "md5_digest": "19aa9f83c2f335a5b2b787d2f0fe48ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12839, "upload_time": "2018-04-14T14:19:40", "upload_time_iso_8601": "2018-04-14T14:19:40.271023Z", "url": "https://files.pythonhosted.org/packages/b3/d4/5002e326458ba930168337086a9fe665d8eca400e2ba82c00182abdb0f19/mqttcat-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "19aa9f83c2f335a5b2b787d2f0fe48ce", "sha256": "17a63089c8c4c35db84f64d03995dbe3dd8625adfd357f231cecb4764c4b7b3c"}, "downloads": -1, "filename": "mqttcat-0.1.2.tar.gz", "has_sig": false, "md5_digest": "19aa9f83c2f335a5b2b787d2f0fe48ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12839, "upload_time": "2018-04-14T14:19:40", "upload_time_iso_8601": "2018-04-14T14:19:40.271023Z", "url": "https://files.pythonhosted.org/packages/b3/d4/5002e326458ba930168337086a9fe665d8eca400e2ba82c00182abdb0f19/mqttcat-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:06 2020"}