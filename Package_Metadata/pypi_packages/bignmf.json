{"info": {"author": "Haran Rajkumar, Vaibhav Kulshrestha", "author_email": "haranrajkumar97@gmail.com, vaibhav1kulshrestha@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# BigNmf\n[![Build Status](https://travis-ci.org/thenmf/bignmf.svg?branch=master)](https://travis-ci.org/thenmf/bignmf)\n[![Read the Docs](https://readthedocs.org/projects/bignmf/badge/?version=latest)](https://bignmf.readthedocs.io/en/latest/?badge=latest)\n[![PyPI version](https://badge.fury.io/py/bignmf.svg)](https://badge.fury.io/py/bignmf)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nBigNmf (Big Data NMF) is a python 3 package for conducting analysis using NMF algorithms.\n\n## NMF Introduction \n[NMF](https://en.wikipedia.org/wiki/Non-negative_matrix_factorization)   (Non-negative matrix factorization) factorizes a non-negative input matrix into non-negative factors. The algorithm has an inherent clustering property and has been gaining attention in various fields especially in biological data analysis. \n\n_Brunet et al_ in their [paper](http://www.pnas.org/content/101/12/4164) demonstrated NMF's superior capability in clustering the [leukemia dataset](https://www.kaggle.com/crawford/gene-expression) compared to standard clustering algorithms like Hierarchial clustering and Self-organizeing maps.\n\n## Available algorithms\nThe following are the algorithms currently available. If you would like to know more about the algorithm, the links below lead to their papers of origin.\n* Single NMF\n    1. [Standard Single NMF](https://www.nature.com/articles/44565)\n    1. [Sparse NMF](https://www.merl.com/publications/docs/TR2015-023.pdf)\n* Joint NMF\n    1. [Standard Joint NMF](https://www.ncbi.nlm.nih.gov/pubmed/25411328)\n    2. [Integrative NMF](https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0176278)\n\n## Installation\n\nThis package is available on the PyPi repository. Therefore you can install, by running the following.\n\n```bash\npip3 install bignmf\n```\n\n## Usage\nThe following examples illustrate typical usage of the algorithm.\n\n### 1. Single NMF\n\n```python\nfrom bignmf.datasets.datasets import Datasets\nfrom bignmf.models.snmf.standard import StandardNmf\n\nDatasets.list_all()\ndata=Datasets.read(\"SimulatedX1\")\nk = 3\niter =100\ntrials = 50\n\nmodel = StandardNmf(data,k)\n\n# Runs the model\nmodel.run(trials, iter, verbose=0)\nprint(model.error)\n\n# Clusters the data\nmodel.cluster_data()\nprint(model.h_cluster)\n\n#Calculates the consensus matrices\nmodel.calc_consensus_matrices() \nprint(model.consensus_matrix_w)\n```\n\n### 2. Joint NMF\n\n```python\nfrom bignmf.models.jnmf.integrative import IntegrativeJnmf\nfrom bignmf.datasets.datasets import Datasets\n\nDatasets.list_all()\ndata_dict = {}\ndata_dict[\"sim1\"] = Datasets.read(\"SimulatedX1\")\ndata_dict[\"sim2\"] = Datasets.read(\"SimulatedX2\")\n\nk = 3\niter =100\ntrials = 50\nlamb = 0.1\n\nmodel = IntegrativeJnmf(data_dict, k, lamb)\n# Runs the model\nmodel.run(trials, iter, verbose=0)\nprint(model.error)\n\n# Clusters the data\nmodel.cluster_data()\nprint(model.h_cluster)\n\n#Calculates the consensus matrices\nmodel.calc_consensus_matrices() \nprint(model.consensus_matrix_w)\n```\n\n[Here](https://bignmf.readthedocs.io/en/latest/) is the extensive documentation for more details.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/thenmf/bignmf", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "bignmf", "package_url": "https://pypi.org/project/bignmf/", "platform": "", "project_url": "https://pypi.org/project/bignmf/", "project_urls": {"Homepage": "https://github.com/thenmf/bignmf"}, "release_url": "https://pypi.org/project/bignmf/1.0.5/", "requires_dist": ["numpy", "pandas", "fastcluster", "scipy"], "requires_python": "", "summary": "Non-negative matrix factorization", "version": "1.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>BigNmf</h1>\n<p><a href=\"https://travis-ci.org/thenmf/bignmf\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8aa142e1d5de4dfc984e3e39af19ab3a9149994f/68747470733a2f2f7472617669732d63692e6f72672f7468656e6d662f6269676e6d662e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://bignmf.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Read the Docs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a04f6454dd8ca77cf469b5c49d2cf3295008e25b/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6269676e6d662f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://badge.fury.io/py/bignmf\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dbd9988ed530e52f2a7d9a561acee6655c08db34/68747470733a2f2f62616467652e667572792e696f2f70792f6269676e6d662e737667\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a></p>\n<p>BigNmf (Big Data NMF) is a python 3 package for conducting analysis using NMF algorithms.</p>\n<h2>NMF Introduction</h2>\n<p><a href=\"https://en.wikipedia.org/wiki/Non-negative_matrix_factorization\" rel=\"nofollow\">NMF</a>   (Non-negative matrix factorization) factorizes a non-negative input matrix into non-negative factors. The algorithm has an inherent clustering property and has been gaining attention in various fields especially in biological data analysis.</p>\n<p><em>Brunet et al</em> in their <a href=\"http://www.pnas.org/content/101/12/4164\" rel=\"nofollow\">paper</a> demonstrated NMF's superior capability in clustering the <a href=\"https://www.kaggle.com/crawford/gene-expression\" rel=\"nofollow\">leukemia dataset</a> compared to standard clustering algorithms like Hierarchial clustering and Self-organizeing maps.</p>\n<h2>Available algorithms</h2>\n<p>The following are the algorithms currently available. If you would like to know more about the algorithm, the links below lead to their papers of origin.</p>\n<ul>\n<li>Single NMF\n<ol>\n<li><a href=\"https://www.nature.com/articles/44565\" rel=\"nofollow\">Standard Single NMF</a></li>\n<li><a href=\"https://www.merl.com/publications/docs/TR2015-023.pdf\" rel=\"nofollow\">Sparse NMF</a></li>\n</ol>\n</li>\n<li>Joint NMF\n<ol>\n<li><a href=\"https://www.ncbi.nlm.nih.gov/pubmed/25411328\" rel=\"nofollow\">Standard Joint NMF</a></li>\n<li><a href=\"https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0176278\" rel=\"nofollow\">Integrative NMF</a></li>\n</ol>\n</li>\n</ul>\n<h2>Installation</h2>\n<p>This package is available on the PyPi repository. Therefore you can install, by running the following.</p>\n<pre>pip3 install bignmf\n</pre>\n<h2>Usage</h2>\n<p>The following examples illustrate typical usage of the algorithm.</p>\n<h3>1. Single NMF</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bignmf.datasets.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">Datasets</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bignmf.models.snmf.standard</span> <span class=\"kn\">import</span> <span class=\"n\">StandardNmf</span>\n\n<span class=\"n\">Datasets</span><span class=\"o\">.</span><span class=\"n\">list_all</span><span class=\"p\">()</span>\n<span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">Datasets</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"s2\">\"SimulatedX1\"</span><span class=\"p\">)</span>\n<span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"nb\">iter</span> <span class=\"o\">=</span><span class=\"mi\">100</span>\n<span class=\"n\">trials</span> <span class=\"o\">=</span> <span class=\"mi\">50</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">StandardNmf</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"n\">k</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Runs the model</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">trials</span><span class=\"p\">,</span> <span class=\"nb\">iter</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Clusters the data</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">cluster_data</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">h_cluster</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#Calculates the consensus matrices</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">calc_consensus_matrices</span><span class=\"p\">()</span> \n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">consensus_matrix_w</span><span class=\"p\">)</span>\n</pre>\n<h3>2. Joint NMF</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bignmf.models.jnmf.integrative</span> <span class=\"kn\">import</span> <span class=\"n\">IntegrativeJnmf</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bignmf.datasets.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">Datasets</span>\n\n<span class=\"n\">Datasets</span><span class=\"o\">.</span><span class=\"n\">list_all</span><span class=\"p\">()</span>\n<span class=\"n\">data_dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"n\">data_dict</span><span class=\"p\">[</span><span class=\"s2\">\"sim1\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Datasets</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"s2\">\"SimulatedX1\"</span><span class=\"p\">)</span>\n<span class=\"n\">data_dict</span><span class=\"p\">[</span><span class=\"s2\">\"sim2\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Datasets</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"s2\">\"SimulatedX2\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"nb\">iter</span> <span class=\"o\">=</span><span class=\"mi\">100</span>\n<span class=\"n\">trials</span> <span class=\"o\">=</span> <span class=\"mi\">50</span>\n<span class=\"n\">lamb</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">IntegrativeJnmf</span><span class=\"p\">(</span><span class=\"n\">data_dict</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">lamb</span><span class=\"p\">)</span>\n<span class=\"c1\"># Runs the model</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">trials</span><span class=\"p\">,</span> <span class=\"nb\">iter</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Clusters the data</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">cluster_data</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">h_cluster</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#Calculates the consensus matrices</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">calc_consensus_matrices</span><span class=\"p\">()</span> \n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">consensus_matrix_w</span><span class=\"p\">)</span>\n</pre>\n<p><a href=\"https://bignmf.readthedocs.io/en/latest/\" rel=\"nofollow\">Here</a> is the extensive documentation for more details.</p>\n\n          </div>"}, "last_serial": 4240590, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "941e23ca3c5a1df965be75cf3e579076", "sha256": "5dd407d1233e9f409f918d840c8f71bee74c739458b0b2b8da677a324687679f"}, "downloads": -1, "filename": "bignmf-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "941e23ca3c5a1df965be75cf3e579076", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19494, "upload_time": "2018-07-07T06:46:12", "upload_time_iso_8601": "2018-07-07T06:46:12.027530Z", "url": "https://files.pythonhosted.org/packages/47/de/8f3f7adad856ad2586ba4ec4a9e28fea90af2589529aa1abab5966747e5c/bignmf-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6eba8b3cef53104e17bfde05e7273ef", "sha256": "9fe1a89909656164497ad02f106c27416e4d4a8577aa1feba50ac46f8cb7d214"}, "downloads": -1, "filename": "bignmf-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d6eba8b3cef53104e17bfde05e7273ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6833, "upload_time": "2018-07-07T06:46:13", "upload_time_iso_8601": "2018-07-07T06:46:13.312052Z", "url": "https://files.pythonhosted.org/packages/ef/21/e2efd536702ad653ded8bca03f0ec2e28c6650c0c893de9170b97ad69aab/bignmf-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "815cae7fdf5fc38b5e7b46f99b429c3e", "sha256": "1fbd76061c7f4fd7573b236eebd7ed1c0b646dfa3a79376cc16ad0ae4cd6214e"}, "downloads": -1, "filename": "bignmf-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "815cae7fdf5fc38b5e7b46f99b429c3e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19499, "upload_time": "2018-07-07T07:22:51", "upload_time_iso_8601": "2018-07-07T07:22:51.193968Z", "url": "https://files.pythonhosted.org/packages/e4/35/52ba1ac1b5f9b8c5c970f7baced1fe87d8cc26495c8d023bde3b64eadc13/bignmf-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54675534ec1f9f672a3d68ee4e8868e4", "sha256": "42b33b7ed2553ff417c5d19e2609d85f098f3025977771b2a22efcdbd822a6d4"}, "downloads": -1, "filename": "bignmf-1.0.2.tar.gz", "has_sig": false, "md5_digest": "54675534ec1f9f672a3d68ee4e8868e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6836, "upload_time": "2018-07-07T07:22:52", "upload_time_iso_8601": "2018-07-07T07:22:52.429202Z", "url": "https://files.pythonhosted.org/packages/50/29/094ef3064c19dfe2cd88517022cc1ad2ab988d6bb21a9e0cbbc479340482/bignmf-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "8a0353877aa888f84f554875e0d0035e", "sha256": "3754a5e6adf90658f4a2d60956d3523f5a2e2b8d9fa83c0bc340ba2e284f7a18"}, "downloads": -1, "filename": "bignmf-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8a0353877aa888f84f554875e0d0035e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19493, "upload_time": "2018-07-07T07:34:21", "upload_time_iso_8601": "2018-07-07T07:34:21.427193Z", "url": "https://files.pythonhosted.org/packages/a3/73/52761f6c22bf10ad39088006e60dc4511d3bb8a26bac454244bde5171430/bignmf-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ac319735327ed4f720bd4e65555f0d5", "sha256": "c9539e9a729ccc2ae08579232f0521eb24bcba758927bdae1ca660dca382dcb3"}, "downloads": -1, "filename": "bignmf-1.0.3.tar.gz", "has_sig": false, "md5_digest": "8ac319735327ed4f720bd4e65555f0d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6818, "upload_time": "2018-07-07T07:34:22", "upload_time_iso_8601": "2018-07-07T07:34:22.640379Z", "url": "https://files.pythonhosted.org/packages/13/aa/0fef013afe69119fa2e974db613f550b7cd997f37e49811aa591c6390d7e/bignmf-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "2e658f07e1a9fd36b63a50db04830903", "sha256": "56375e80de1adf68cd2c3806d319be537a9328b0d285398280cdceedccdde2df"}, "downloads": -1, "filename": "bignmf-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "2e658f07e1a9fd36b63a50db04830903", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 98892, "upload_time": "2018-08-05T17:13:19", "upload_time_iso_8601": "2018-08-05T17:13:19.999320Z", "url": "https://files.pythonhosted.org/packages/42/3b/3182330fb1a86b5d9dd6c262e8af12f83c52838204fed9e940b7aa576910/bignmf-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d5f071110d390dd4e872d8d471d237b5", "sha256": "924bc25d02d5b6bd2d0241be0460543c0506817209b23f6adeccb8012be7a130"}, "downloads": -1, "filename": "bignmf-1.0.4.tar.gz", "has_sig": false, "md5_digest": "d5f071110d390dd4e872d8d471d237b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94409, "upload_time": "2018-08-05T17:14:10", "upload_time_iso_8601": "2018-08-05T17:14:10.923743Z", "url": "https://files.pythonhosted.org/packages/70/6a/61745bf4fa0773b88804b6553c59ff2c8b1d2305849a37dd1d6aab2ba063/bignmf-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "5d2240afc6a0ae76cde15bc49059e365", "sha256": "0ffc85ca9e85df0bda52947fdf3604b3e10fdd1c4ee7e89bbe023d529a1d27fa"}, "downloads": -1, "filename": "bignmf-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "5d2240afc6a0ae76cde15bc49059e365", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 99583, "upload_time": "2018-09-05T10:26:39", "upload_time_iso_8601": "2018-09-05T10:26:39.070746Z", "url": "https://files.pythonhosted.org/packages/3e/c3/18178ae33fdbe4311f5b80259491a52fc9f77c79740a787c1fef13f76510/bignmf-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ada1ea56548ec58667a8c3572442ba84", "sha256": "b03e3316cdc402e07f8906ca9f969505ee7045a54acf1580fe357d3353f64756"}, "downloads": -1, "filename": "bignmf-1.0.5.tar.gz", "has_sig": false, "md5_digest": "ada1ea56548ec58667a8c3572442ba84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95545, "upload_time": "2018-09-05T10:26:40", "upload_time_iso_8601": "2018-09-05T10:26:40.958266Z", "url": "https://files.pythonhosted.org/packages/cb/59/1c440b30762fa24409ca427ba220de29196708c5c0d3cb2189c1469a20de/bignmf-1.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5d2240afc6a0ae76cde15bc49059e365", "sha256": "0ffc85ca9e85df0bda52947fdf3604b3e10fdd1c4ee7e89bbe023d529a1d27fa"}, "downloads": -1, "filename": "bignmf-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "5d2240afc6a0ae76cde15bc49059e365", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 99583, "upload_time": "2018-09-05T10:26:39", "upload_time_iso_8601": "2018-09-05T10:26:39.070746Z", "url": "https://files.pythonhosted.org/packages/3e/c3/18178ae33fdbe4311f5b80259491a52fc9f77c79740a787c1fef13f76510/bignmf-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ada1ea56548ec58667a8c3572442ba84", "sha256": "b03e3316cdc402e07f8906ca9f969505ee7045a54acf1580fe357d3353f64756"}, "downloads": -1, "filename": "bignmf-1.0.5.tar.gz", "has_sig": false, "md5_digest": "ada1ea56548ec58667a8c3572442ba84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95545, "upload_time": "2018-09-05T10:26:40", "upload_time_iso_8601": "2018-09-05T10:26:40.958266Z", "url": "https://files.pythonhosted.org/packages/cb/59/1c440b30762fa24409ca427ba220de29196708c5c0d3cb2189c1469a20de/bignmf-1.0.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:34 2020"}