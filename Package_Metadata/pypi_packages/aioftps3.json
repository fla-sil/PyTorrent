{"info": {"author": "Department for International Trade - WebOps", "author_email": "webops@digital.trade.gov.uk", "bugtrack_url": null, "classifiers": ["Framework :: AsyncIO", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Internet :: File Transfer Protocol (FTP)"], "description": "# aioftps3 [![CircleCI](https://circleci.com/gh/uktrade/aioftps3.svg?style=svg)](https://circleci.com/gh/uktrade/aioftps3) [![Maintainability](https://api.codeclimate.com/v1/badges/4a9332f4782f6b4bf35a/maintainability)](https://codeclimate.com/github/uktrade/aioftps3/maintainability) [![Test Coverage](https://api.codeclimate.com/v1/badges/4a9332f4782f6b4bf35a/test_coverage)](https://codeclimate.com/github/uktrade/aioftps3/test_coverage)\n\nFTP in front of AWS S3, using [asyncio](https://docs.python.org/3/library/asyncio.html), and [aiohttp](https://github.com/aio-libs/aiohttp). Only a subset of the FTP protocol is supported, with implicit TLS and PASV mode; connections will fail otherwise.\n\n## Installation\n\n```bash\npip install aioftps3\n```\n\nAn SSL key and certificate must be present `$HOME/ssl.key` and `$HOME/ssl.crt` respectively. To create a self-signed certificate, you can use openssl.\n\n```bash\nopenssl req -new -newkey rsa:2048 -days 3650 -nodes -x509 -subj /CN=selfsigned \\\n    -keyout $HOME/ssl.key \\\n    -out $HOME/ssl.crt\n```\n\n## Running\n\n```bash\npython -m aioftps3.server_main\n```\n\n## Configuration\n\nConfiguration is through environment variables\n\n| Varaiable | Description | Example |\n| --- | --- | --- |\n| `AWS_AUTH_MECHANISM` | How requests to AWS are authenticated. Can be `secret_access_key` or `ecs_role`. If `ecs_role` it is expected that the server runs in an ECS container. | `secret_access_key` |\n| `AWS_ACCESS_KEY_ID` | The ID of the  AWS access key, if `AWS_AUTH_MECHANISM` is `secret_access_key`. | _ommitted_ |\n| `AWS_SECRET_ACCESS_KEY` | The secret part of the  AWS access key, if `AWS_AUTH_MECHANISM` is `secret_access_key` | _ommitted_ |\n| `AWS_S3_BUCKET_REGION` | The region of the S3 bucket that stores the files. | `eu-west-1` |\n| `AWS_S3_BUCKET_HOST` | The hostname used to communicate with S3. | `s3-eu-west-1.amazonaws.com` |\n| `AWS_S3_BUCKET_NAME` | The name of the bucket files are stored in. | `my-bucket-name` |\n| `AWS_S3_BUCKET_DIR_SUFFIX` | The suffix of the keys created in order to simulate a directory. Must start with a forward slash, but does not need to be longer.  | `/` |\n| `FTP_USERS__i__LOGIN` | For `i` any integer, the username of an FTP user that can login. | `my-user` |\n| `FTP_USERS__i__PASSWORD_HASHED` | For `i` any integer, the hash, as generated by [create_password.py](https://github.com/uktrade/aioftps3/blob/master/create_password.py), of the password of an FTP user that can login, using the salt in `FTP_USERS__i__PASSWORD_SALT` | _ommitted_ |\n| `FTP_USERS__i__PASSWORD_SALT` | See `FTP_USERS__i__PASSWORD_HASHED` | _ommitted_ |\n| `FTP_COMMAND_PORT` | The port that the server listens on for command connections. | `8021` |\n| `FTP_DATA_PORTS_FIRST` | The first data port in the range for PASV mode data transfers. | `4001` |\n| `FTP_DATA_PORTS_COUNT` | The number of ports used after `FTP_DATA_PORTS_FIRST`. | `30` |\n| `FTP_DATA_CIDR_TO_DOMAINS__i__CIDR` | For `i` any integer, a CIDR range used to match the IP of incoming command connections. If a match is found, the IP of the corresponding domain or IP address in `FTP_DATA_CIDR_TO_DOMAINS__i__DOMAIN` is returned to the client in response to PASV mode requests. Some clients will respond to `FTP_DATA_CIDR_TO_DOMAINS__i__DOMAIN` being `0.0.0.0` by making PASV mode data connections to the same IP as the original command connection, but not all. | `0.0.0.0/0` |\n| `FTP_DATA_CIDR_TO_DOMAINS__i__DOMAIN` | See `FTP_DATA_CIDR_TO_DOMAINS__i__CIDR`. | `ftp.my-domain.com` |\n| `HEALTHCHECK_PORT` | The port the server listens on for healthcheck requests, such as from an AWS network load balancer. | `8022` |\n\n\n## Advanced usage\n\nThe code in [aioftps3.server_main](https://github.com/uktrade/aioftps3/blob/master/aioftps3/server_main.py) satisfies a very particular use case, which may not be useful to most. However, the bulk of the code can be used for other cases: you will have to write your own aioftps3.server_main-equivalent, using the functions [aioftps3.server.on_client_connect](https://github.com/uktrade/aioftps3/blob/master/aioftps3/server.py) and [aioftps3.server_socket.server](https://github.com/uktrade/aioftps3/blob/master/aioftps3/server_socket.py). For example, you could\n\n- Store credentials, appropriately hashed, differently, .e.g. in a database.\n- Have the credentials hashed differently.\n- Allow/deny PASV mode data connections based on some condition.\n\nSee the source of [aioftps3.server_main](https://github.com/uktrade/aioftps3/blob/master/aioftps3/server_main.py) for how these functions can be used.\n\n\n## Creating a password and salt\n\n```bash\npython ./create_password.py\n```\n\n## Running tests\n\nCertificates must be created, and Minio, which emulates S3 locally, must be started\n\n```bash\n./certificates-create.sh && ./minio-start.sh\n```\n\nand then to run the tests themselves.\n\n```bash\n./tests.sh\n```\n\n\n## Features / Design / Limitations\n\n- Can upload files bigger than 2G: uses [multipart upload](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingRESTAPImpUpload.html) under the hood.\n\n- Does not store uploading files in memory before uploading them to S3: i.e. it is effectively a streaming upload. However, it's not completely streaming: each part of multipart upload is stored in memory before it begins to transfer to S3, in order to be able to hash its content and determine its length.\n\n- For uploading files, hashes are computed incrementally as data comes in in order to not block the event loop just before uploads to S3.\n\n- As few dependencies as is reasonable: aiohttp and its dependencies. Boto 3 is _not_ used.\n\n- May not behave well if upload to the server is faster than its upload to S3.\n\n- There is some locking to deal with the same files being operated on concurrently. However...\n\n- .... it does nothing to deal with [eventual consistency of S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/Introduction.html#ConsistencyModel), and so some operations may appear to not have an immediate effect.\n\n\n## Building and running locally\n\n```bash\ndocker build -t ftps-s3 . && \\\ndocker run --rm -p 8021-8042:8021-8042 \\\n  -e AWS_AUTH_MECHANISM=secret_access_key \\\n  -e AWS_ACCESS_KEY_ID=ommitted \\\n  -e AWS_SECRET_ACCESS_KEY=ommitted \\\n  -e AWS_S3_BUCKET_REGION=eu-west-1 \\\n  -e AWS_S3_BUCKET_HOST=s3-eu-west-1.amazonaws.com \\\n  -e AWS_S3_BUCKET_NAME=my-bucket-name \\\n  -e AWS_S3_BUCKET_DIR_SUFFIX=/ \\\n  -e FTP_USERS__1__LOGIN=user \\\n  -e FTP_USERS__1__PASSWORD_HASHED=ommitted \\\n  -e FTP_USERS__1__PASSWORD_SALT=ommitted \\\n  -e FTP_COMMAND_PORT=8021 \\\n  -e FTP_DATA_PORTS_FIRST=4001 \\\n  -e FTP_DATA_PORTS_COUNT=2 \\\n  -e FTP_DATA_CIDR_TO_DOMAINS__1__CIDR=0.0.0.0/0 \\\n  -e FTP_DATA_CIDR_TO_DOMAINS__1__DOMAIN=0.0.0.0 \\\n  -e HEALTHCHECK_PORT=8022\n  ftps-s3\n```\n\n\n## Building and pushing to Quay\n\n```bash\ndocker build -t ftps-s3 . && \\\ndocker tag ftps-s3:latest quay.io/uktrade/ftps-s3:latest && \\\ndocker push quay.io/uktrade/ftps-s3:latest\n```\n\n\n## Building and pushing healthcheck application to Quay\n\n```bash\ndocker build -t ftps-s3-healthcheck . -f Dockerfile-healthcheck && \\\ndocker tag ftps-s3-healthcheck:latest quay.io/uktrade/ftps-s3-healthcheck:latest && \\\ndocker push quay.io/uktrade/ftps-s3-healthcheck:latest\n```\n\n## Building and pushing Minio, used for testing, to Quay\n\n```bash\ndocker build -t ftps-s3-minio . -f Dockerfile-minio && \\\ndocker tag ftps-s3-minio:latest quay.io/uktrade/ftps-s3-minio:latest && \\\ndocker push quay.io/uktrade/ftps-s3-minio:latest\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/uktrade/aioftps3", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aioftps3", "package_url": "https://pypi.org/project/aioftps3/", "platform": "", "project_url": "https://pypi.org/project/aioftps3/", "project_urls": {"Homepage": "https://github.com/uktrade/aioftps3"}, "release_url": "https://pypi.org/project/aioftps3/0.0.6/", "requires_dist": ["aiohttp"], "requires_python": "", "summary": "FTP in front of AWS S3, powered by asyncio and aiohttp", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aioftps3 <a href=\"https://circleci.com/gh/uktrade/aioftps3\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3206c790cd72cedd1c66ef9e3b837cf9427f867f/68747470733a2f2f636972636c6563692e636f6d2f67682f756b74726164652f61696f66747073332e7376673f7374796c653d737667\"></a> <a href=\"https://codeclimate.com/github/uktrade/aioftps3/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae47942dcab2d693ab29c4475402b55f241d557a/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f34613933333266343738326636623462663335612f6d61696e7461696e6162696c697479\"></a> <a href=\"https://codeclimate.com/github/uktrade/aioftps3/test_coverage\" rel=\"nofollow\"><img alt=\"Test Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/919f0b71751d7947e9008d20d169148989bc6327/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f34613933333266343738326636623462663335612f746573745f636f766572616765\"></a></h1>\n<p>FTP in front of AWS S3, using <a href=\"https://docs.python.org/3/library/asyncio.html\" rel=\"nofollow\">asyncio</a>, and <a href=\"https://github.com/aio-libs/aiohttp\" rel=\"nofollow\">aiohttp</a>. Only a subset of the FTP protocol is supported, with implicit TLS and PASV mode; connections will fail otherwise.</p>\n<h2>Installation</h2>\n<pre>pip install aioftps3\n</pre>\n<p>An SSL key and certificate must be present <code>$HOME/ssl.key</code> and <code>$HOME/ssl.crt</code> respectively. To create a self-signed certificate, you can use openssl.</p>\n<pre>openssl req -new -newkey rsa:2048 -days <span class=\"m\">3650</span> -nodes -x509 -subj /CN<span class=\"o\">=</span>selfsigned <span class=\"se\">\\</span>\n    -keyout <span class=\"nv\">$HOME</span>/ssl.key <span class=\"se\">\\</span>\n    -out <span class=\"nv\">$HOME</span>/ssl.crt\n</pre>\n<h2>Running</h2>\n<pre>python -m aioftps3.server_main\n</pre>\n<h2>Configuration</h2>\n<p>Configuration is through environment variables</p>\n<table>\n<thead>\n<tr>\n<th>Varaiable</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>AWS_AUTH_MECHANISM</code></td>\n<td>How requests to AWS are authenticated. Can be <code>secret_access_key</code> or <code>ecs_role</code>. If <code>ecs_role</code> it is expected that the server runs in an ECS container.</td>\n<td><code>secret_access_key</code></td>\n</tr>\n<tr>\n<td><code>AWS_ACCESS_KEY_ID</code></td>\n<td>The ID of the  AWS access key, if <code>AWS_AUTH_MECHANISM</code> is <code>secret_access_key</code>.</td>\n<td><em>ommitted</em></td>\n</tr>\n<tr>\n<td><code>AWS_SECRET_ACCESS_KEY</code></td>\n<td>The secret part of the  AWS access key, if <code>AWS_AUTH_MECHANISM</code> is <code>secret_access_key</code></td>\n<td><em>ommitted</em></td>\n</tr>\n<tr>\n<td><code>AWS_S3_BUCKET_REGION</code></td>\n<td>The region of the S3 bucket that stores the files.</td>\n<td><code>eu-west-1</code></td>\n</tr>\n<tr>\n<td><code>AWS_S3_BUCKET_HOST</code></td>\n<td>The hostname used to communicate with S3.</td>\n<td><code>s3-eu-west-1.amazonaws.com</code></td>\n</tr>\n<tr>\n<td><code>AWS_S3_BUCKET_NAME</code></td>\n<td>The name of the bucket files are stored in.</td>\n<td><code>my-bucket-name</code></td>\n</tr>\n<tr>\n<td><code>AWS_S3_BUCKET_DIR_SUFFIX</code></td>\n<td>The suffix of the keys created in order to simulate a directory. Must start with a forward slash, but does not need to be longer.</td>\n<td><code>/</code></td>\n</tr>\n<tr>\n<td><code>FTP_USERS__i__LOGIN</code></td>\n<td>For <code>i</code> any integer, the username of an FTP user that can login.</td>\n<td><code>my-user</code></td>\n</tr>\n<tr>\n<td><code>FTP_USERS__i__PASSWORD_HASHED</code></td>\n<td>For <code>i</code> any integer, the hash, as generated by <a href=\"https://github.com/uktrade/aioftps3/blob/master/create_password.py\" rel=\"nofollow\">create_password.py</a>, of the password of an FTP user that can login, using the salt in <code>FTP_USERS__i__PASSWORD_SALT</code></td>\n<td><em>ommitted</em></td>\n</tr>\n<tr>\n<td><code>FTP_USERS__i__PASSWORD_SALT</code></td>\n<td>See <code>FTP_USERS__i__PASSWORD_HASHED</code></td>\n<td><em>ommitted</em></td>\n</tr>\n<tr>\n<td><code>FTP_COMMAND_PORT</code></td>\n<td>The port that the server listens on for command connections.</td>\n<td><code>8021</code></td>\n</tr>\n<tr>\n<td><code>FTP_DATA_PORTS_FIRST</code></td>\n<td>The first data port in the range for PASV mode data transfers.</td>\n<td><code>4001</code></td>\n</tr>\n<tr>\n<td><code>FTP_DATA_PORTS_COUNT</code></td>\n<td>The number of ports used after <code>FTP_DATA_PORTS_FIRST</code>.</td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td><code>FTP_DATA_CIDR_TO_DOMAINS__i__CIDR</code></td>\n<td>For <code>i</code> any integer, a CIDR range used to match the IP of incoming command connections. If a match is found, the IP of the corresponding domain or IP address in <code>FTP_DATA_CIDR_TO_DOMAINS__i__DOMAIN</code> is returned to the client in response to PASV mode requests. Some clients will respond to <code>FTP_DATA_CIDR_TO_DOMAINS__i__DOMAIN</code> being <code>0.0.0.0</code> by making PASV mode data connections to the same IP as the original command connection, but not all.</td>\n<td><code>0.0.0.0/0</code></td>\n</tr>\n<tr>\n<td><code>FTP_DATA_CIDR_TO_DOMAINS__i__DOMAIN</code></td>\n<td>See <code>FTP_DATA_CIDR_TO_DOMAINS__i__CIDR</code>.</td>\n<td><code>ftp.my-domain.com</code></td>\n</tr>\n<tr>\n<td><code>HEALTHCHECK_PORT</code></td>\n<td>The port the server listens on for healthcheck requests, such as from an AWS network load balancer.</td>\n<td><code>8022</code></td>\n</tr></tbody></table>\n<h2>Advanced usage</h2>\n<p>The code in <a href=\"https://github.com/uktrade/aioftps3/blob/master/aioftps3/server_main.py\" rel=\"nofollow\">aioftps3.server_main</a> satisfies a very particular use case, which may not be useful to most. However, the bulk of the code can be used for other cases: you will have to write your own aioftps3.server_main-equivalent, using the functions <a href=\"https://github.com/uktrade/aioftps3/blob/master/aioftps3/server.py\" rel=\"nofollow\">aioftps3.server.on_client_connect</a> and <a href=\"https://github.com/uktrade/aioftps3/blob/master/aioftps3/server_socket.py\" rel=\"nofollow\">aioftps3.server_socket.server</a>. For example, you could</p>\n<ul>\n<li>Store credentials, appropriately hashed, differently, .e.g. in a database.</li>\n<li>Have the credentials hashed differently.</li>\n<li>Allow/deny PASV mode data connections based on some condition.</li>\n</ul>\n<p>See the source of <a href=\"https://github.com/uktrade/aioftps3/blob/master/aioftps3/server_main.py\" rel=\"nofollow\">aioftps3.server_main</a> for how these functions can be used.</p>\n<h2>Creating a password and salt</h2>\n<pre>python ./create_password.py\n</pre>\n<h2>Running tests</h2>\n<p>Certificates must be created, and Minio, which emulates S3 locally, must be started</p>\n<pre>./certificates-create.sh <span class=\"o\">&amp;&amp;</span> ./minio-start.sh\n</pre>\n<p>and then to run the tests themselves.</p>\n<pre>./tests.sh\n</pre>\n<h2>Features / Design / Limitations</h2>\n<ul>\n<li>\n<p>Can upload files bigger than 2G: uses <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingRESTAPImpUpload.html\" rel=\"nofollow\">multipart upload</a> under the hood.</p>\n</li>\n<li>\n<p>Does not store uploading files in memory before uploading them to S3: i.e. it is effectively a streaming upload. However, it's not completely streaming: each part of multipart upload is stored in memory before it begins to transfer to S3, in order to be able to hash its content and determine its length.</p>\n</li>\n<li>\n<p>For uploading files, hashes are computed incrementally as data comes in in order to not block the event loop just before uploads to S3.</p>\n</li>\n<li>\n<p>As few dependencies as is reasonable: aiohttp and its dependencies. Boto 3 is <em>not</em> used.</p>\n</li>\n<li>\n<p>May not behave well if upload to the server is faster than its upload to S3.</p>\n</li>\n<li>\n<p>There is some locking to deal with the same files being operated on concurrently. However...</p>\n</li>\n<li>\n<p>.... it does nothing to deal with <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/Introduction.html#ConsistencyModel\" rel=\"nofollow\">eventual consistency of S3</a>, and so some operations may appear to not have an immediate effect.</p>\n</li>\n</ul>\n<h2>Building and running locally</h2>\n<pre>docker build -t ftps-s3 . <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\</span>\ndocker run --rm -p <span class=\"m\">8021</span>-8042:8021-8042 <span class=\"se\">\\</span>\n  -e <span class=\"nv\">AWS_AUTH_MECHANISM</span><span class=\"o\">=</span>secret_access_key <span class=\"se\">\\</span>\n  -e <span class=\"nv\">AWS_ACCESS_KEY_ID</span><span class=\"o\">=</span>ommitted <span class=\"se\">\\</span>\n  -e <span class=\"nv\">AWS_SECRET_ACCESS_KEY</span><span class=\"o\">=</span>ommitted <span class=\"se\">\\</span>\n  -e <span class=\"nv\">AWS_S3_BUCKET_REGION</span><span class=\"o\">=</span>eu-west-1 <span class=\"se\">\\</span>\n  -e <span class=\"nv\">AWS_S3_BUCKET_HOST</span><span class=\"o\">=</span>s3-eu-west-1.amazonaws.com <span class=\"se\">\\</span>\n  -e <span class=\"nv\">AWS_S3_BUCKET_NAME</span><span class=\"o\">=</span>my-bucket-name <span class=\"se\">\\</span>\n  -e <span class=\"nv\">AWS_S3_BUCKET_DIR_SUFFIX</span><span class=\"o\">=</span>/ <span class=\"se\">\\</span>\n  -e <span class=\"nv\">FTP_USERS__1__LOGIN</span><span class=\"o\">=</span>user <span class=\"se\">\\</span>\n  -e <span class=\"nv\">FTP_USERS__1__PASSWORD_HASHED</span><span class=\"o\">=</span>ommitted <span class=\"se\">\\</span>\n  -e <span class=\"nv\">FTP_USERS__1__PASSWORD_SALT</span><span class=\"o\">=</span>ommitted <span class=\"se\">\\</span>\n  -e <span class=\"nv\">FTP_COMMAND_PORT</span><span class=\"o\">=</span><span class=\"m\">8021</span> <span class=\"se\">\\</span>\n  -e <span class=\"nv\">FTP_DATA_PORTS_FIRST</span><span class=\"o\">=</span><span class=\"m\">4001</span> <span class=\"se\">\\</span>\n  -e <span class=\"nv\">FTP_DATA_PORTS_COUNT</span><span class=\"o\">=</span><span class=\"m\">2</span> <span class=\"se\">\\</span>\n  -e <span class=\"nv\">FTP_DATA_CIDR_TO_DOMAINS__1__CIDR</span><span class=\"o\">=</span><span class=\"m\">0</span>.0.0.0/0 <span class=\"se\">\\</span>\n  -e <span class=\"nv\">FTP_DATA_CIDR_TO_DOMAINS__1__DOMAIN</span><span class=\"o\">=</span><span class=\"m\">0</span>.0.0.0 <span class=\"se\">\\</span>\n  -e <span class=\"nv\">HEALTHCHECK_PORT</span><span class=\"o\">=</span><span class=\"m\">8022</span>\n  ftps-s3\n</pre>\n<h2>Building and pushing to Quay</h2>\n<pre>docker build -t ftps-s3 . <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\</span>\ndocker tag ftps-s3:latest quay.io/uktrade/ftps-s3:latest <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\</span>\ndocker push quay.io/uktrade/ftps-s3:latest\n</pre>\n<h2>Building and pushing healthcheck application to Quay</h2>\n<pre>docker build -t ftps-s3-healthcheck . -f Dockerfile-healthcheck <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\</span>\ndocker tag ftps-s3-healthcheck:latest quay.io/uktrade/ftps-s3-healthcheck:latest <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\</span>\ndocker push quay.io/uktrade/ftps-s3-healthcheck:latest\n</pre>\n<h2>Building and pushing Minio, used for testing, to Quay</h2>\n<pre>docker build -t ftps-s3-minio . -f Dockerfile-minio <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\</span>\ndocker tag ftps-s3-minio:latest quay.io/uktrade/ftps-s3-minio:latest <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\</span>\ndocker push quay.io/uktrade/ftps-s3-minio:latest\n</pre>\n\n          </div>"}, "last_serial": 4520149, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c9085b9525e77beee91f813ebc405543", "sha256": "eeb77919190a45602aebe7dd0f02ba416d9430ad24aa3d3e430dedc9dbacad64"}, "downloads": -1, "filename": "aioftps3-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c9085b9525e77beee91f813ebc405543", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7832, "upload_time": "2018-10-27T12:05:29", "upload_time_iso_8601": "2018-10-27T12:05:29.461112Z", "url": "https://files.pythonhosted.org/packages/3f/9c/4f5de823413484c5e3923c0c189eea55f4b94575bd167c0ecd8fb190c731/aioftps3-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8074aa7f8a117caa147b7fba50d209f", "sha256": "2f2a2a3d412d1144d02eebe984f8914ec66536fa3667e93640b36f5607fc4657"}, "downloads": -1, "filename": "aioftps3-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a8074aa7f8a117caa147b7fba50d209f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6792, "upload_time": "2018-10-27T12:05:30", "upload_time_iso_8601": "2018-10-27T12:05:30.464526Z", "url": "https://files.pythonhosted.org/packages/4a/01/cc823a6c8048a7e1c1678c6d655e9b84c66354669645d3ee90e20c2acf83/aioftps3-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d337f344864c1fe2e28b34fa16b55540", "sha256": "33749100e005e46896de24796a930291889de57cde163ab1e89bc99b4d71e2d6"}, "downloads": -1, "filename": "aioftps3-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d337f344864c1fe2e28b34fa16b55540", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9526, "upload_time": "2018-10-29T14:07:18", "upload_time_iso_8601": "2018-10-29T14:07:18.897808Z", "url": "https://files.pythonhosted.org/packages/32/75/28b3ca3d7e52333362ac65f3c6ca5f1e9c98da5480fca0ee18d81d6cb9f2/aioftps3-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44c0f25d04c087739f787004ff91d332", "sha256": "e958d3b06e165e56b9316d08593b1e5c8b8ae206a4066a224d3137957d29a494"}, "downloads": -1, "filename": "aioftps3-0.0.2.tar.gz", "has_sig": false, "md5_digest": "44c0f25d04c087739f787004ff91d332", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8598, "upload_time": "2018-10-29T14:07:20", "upload_time_iso_8601": "2018-10-29T14:07:20.249744Z", "url": "https://files.pythonhosted.org/packages/19/69/0ae5a72941c27c3e4dda61306dd7609cf7fb46ca05fb4b936b8e1b8febce/aioftps3-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "e3827b36f41d51aac0f7a12ff9690f75", "sha256": "05beb938e3225f63c9ae076566cd343baaac5e049099b5e9547a4c1f08fc5d63"}, "downloads": -1, "filename": "aioftps3-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e3827b36f41d51aac0f7a12ff9690f75", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9800, "upload_time": "2018-10-30T09:43:59", "upload_time_iso_8601": "2018-10-30T09:43:59.588196Z", "url": "https://files.pythonhosted.org/packages/fe/2b/92a6c1b84a27e669b83bea3a666fbd90f5dadc994ccc382903c32df5f7fe/aioftps3-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0cb2eabb9f9160a526416aededf3a0b", "sha256": "0921b355146e1a2fe79fb9cec2bdad8e9bf1839b76e84dce491bc2ca2be893d0"}, "downloads": -1, "filename": "aioftps3-0.0.3.tar.gz", "has_sig": false, "md5_digest": "e0cb2eabb9f9160a526416aededf3a0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8867, "upload_time": "2018-10-30T09:44:00", "upload_time_iso_8601": "2018-10-30T09:44:00.825710Z", "url": "https://files.pythonhosted.org/packages/42/de/88ce0f8b3581330e904c0e834e1efbca7c099448ac0b5f3df6a43988eb41/aioftps3-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "d2ed1973122f92705ea263c711795fb8", "sha256": "85264127c67ae4ce27521b9890f7fdf9461c7a4a23684b61ffb8a065fd85a774"}, "downloads": -1, "filename": "aioftps3-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "d2ed1973122f92705ea263c711795fb8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10967, "upload_time": "2018-11-13T11:04:10", "upload_time_iso_8601": "2018-11-13T11:04:10.030020Z", "url": "https://files.pythonhosted.org/packages/74/df/5feaff8b63f596273e41a495b4da520a2c90d3c08331f23d30cd16c9e23d/aioftps3-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aca6650909cc8a0893359c345595514d", "sha256": "758b91083c10c12c2f6dd9a5c32c93960aa57d3eacb009a9c3719846e01ba07d"}, "downloads": -1, "filename": "aioftps3-0.0.4.tar.gz", "has_sig": false, "md5_digest": "aca6650909cc8a0893359c345595514d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3578, "upload_time": "2018-11-13T11:04:11", "upload_time_iso_8601": "2018-11-13T11:04:11.778587Z", "url": "https://files.pythonhosted.org/packages/e2/33/44ec9e4134046d5081aa6fa9462d02897150788c502805d2046d161ffd6f/aioftps3-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "065347fac885b354b885084212950499", "sha256": "11d104d0a7fc596fac3eb30878f685634124d4ba68d3679ea55fb51947f0942c"}, "downloads": -1, "filename": "aioftps3-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "065347fac885b354b885084212950499", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11115, "upload_time": "2018-11-13T11:13:00", "upload_time_iso_8601": "2018-11-13T11:13:00.576964Z", "url": "https://files.pythonhosted.org/packages/63/b5/1149d787aa96c805996ba3c2bf647eac3452c99ad41f7c03dd81e141ba56/aioftps3-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4062c35206e41d1902fef13981b4cad8", "sha256": "d078d4c69815c266be4020afba31038fd74d8aa7693a25ffca9513baa624d796"}, "downloads": -1, "filename": "aioftps3-0.0.5.tar.gz", "has_sig": false, "md5_digest": "4062c35206e41d1902fef13981b4cad8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3787, "upload_time": "2018-11-13T11:13:01", "upload_time_iso_8601": "2018-11-13T11:13:01.895674Z", "url": "https://files.pythonhosted.org/packages/b7/42/9e1fc77e13ebfcfa0aa11148dde61ef7139dfda45036d1ec574a5b02e510/aioftps3-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "5d6a3b25c114e1bc81b2f2bc3295493f", "sha256": "762a63a56dc7335d04d2ad74df920b757d7bd48494d6567a21264b4fd1bf1b43"}, "downloads": -1, "filename": "aioftps3-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "5d6a3b25c114e1bc81b2f2bc3295493f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11523, "upload_time": "2018-11-23T10:46:43", "upload_time_iso_8601": "2018-11-23T10:46:43.844332Z", "url": "https://files.pythonhosted.org/packages/e8/27/9f54a0b0dbf66b217840b2f4e85563d7ba611600cddd05e50ba3a0035712/aioftps3-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "041eac2ab3c43be314fedc6e902823e4", "sha256": "e40d731f24d3b176e45bad94e4dbe6813b34e21310ce645a843869fc138bb4e0"}, "downloads": -1, "filename": "aioftps3-0.0.6.tar.gz", "has_sig": false, "md5_digest": "041eac2ab3c43be314fedc6e902823e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4494, "upload_time": "2018-11-23T10:46:45", "upload_time_iso_8601": "2018-11-23T10:46:45.043162Z", "url": "https://files.pythonhosted.org/packages/52/bc/c481fe2ecf1ece0363f4311e6c5abe7760f90788d52662e3e55e9a742ecc/aioftps3-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5d6a3b25c114e1bc81b2f2bc3295493f", "sha256": "762a63a56dc7335d04d2ad74df920b757d7bd48494d6567a21264b4fd1bf1b43"}, "downloads": -1, "filename": "aioftps3-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "5d6a3b25c114e1bc81b2f2bc3295493f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11523, "upload_time": "2018-11-23T10:46:43", "upload_time_iso_8601": "2018-11-23T10:46:43.844332Z", "url": "https://files.pythonhosted.org/packages/e8/27/9f54a0b0dbf66b217840b2f4e85563d7ba611600cddd05e50ba3a0035712/aioftps3-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "041eac2ab3c43be314fedc6e902823e4", "sha256": "e40d731f24d3b176e45bad94e4dbe6813b34e21310ce645a843869fc138bb4e0"}, "downloads": -1, "filename": "aioftps3-0.0.6.tar.gz", "has_sig": false, "md5_digest": "041eac2ab3c43be314fedc6e902823e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4494, "upload_time": "2018-11-23T10:46:45", "upload_time_iso_8601": "2018-11-23T10:46:45.043162Z", "url": "https://files.pythonhosted.org/packages/52/bc/c481fe2ecf1ece0363f4311e6c5abe7760f90788d52662e3e55e9a742ecc/aioftps3-0.0.6.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:34 2020"}