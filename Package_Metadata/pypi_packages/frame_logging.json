{"info": {"author": "Romain DA COSTA VIEIRA", "author_email": "romain.da-costa-vieira@itsfactory.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Framework :: Django :: 1.10", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "=============================\nFrame Logging\n=============================\n\n.. image:: https://badge.fury.io/py/frame_logging.svg\n    :target: https://badge.fury.io/py/frame_logging\n\n.. image:: https://travis-ci.org/ItsfBisounours/frame_logging.svg?branch=master\n    :target: https://travis-ci.org/ItsfBisounours/frame_logging\n\n.. image:: https://codecov.io/gh/ItsfBisounours/frame_logging/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/ItsfBisounours/frame_logging\n\nYour project description goes here\n\nDocumentation\n-------------\n\nThe full documentation is at https://frame_logging.readthedocs.io.\n\nQuickstart\n----------\n\n1. Install Frame Logging::\n\n    pip install frame_logging\n\n2. Add it to your `INSTALLED_APPS`:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        'frame_logging.apps.FrameLoggingConfig',\n        ...\n    )\n\n3. Create a class to format your extra logging kwargs \n\n.. code-block:: python\n\n    # \n\n    class FrameFormatterExample(FrameFormatter):\n    \n        # format methods\n    \n        @classmethod\n        def get_format_behaviour(cls):\n            return OrderedDict([\n                ('customer_id', cls.format_customer_id),\n            ])\n    \n        @classmethod\n        def format_customer_id(cls, customer_id):\n            return \"customer_id={}\".format(customer_id)\n    \n        # then if you need to, you can add new method to transform extra kwargs\n        # transform methods\n    \n        @classmethod\n        def get_transform_kwargs_methods(cls):\n            return   {\n                'order': cls.transform_order,\n            }\n    \n        @classmethod\n        def transform_order(cls, order, **kwargs):\n            kwargs['customer_id'] = order.customer['id']\n            return kwargs\n\n\n4. Configure frame loggin in your settings.py\n\n.. code-block:: python\n\n    # mandatory, if you do not priovide a formatter the app will crash\n    FRAME_FORMATTER=FrameFormatterExample()\n\n    # optionnal, default = ' - '\n    FRAME_SEPARATOR='+'\n\n\n5. Use it:\n\n.. code-block:: python\n\n    import frame_logging.log as log\n\n    class Order(object):\n        def __init__(self):\n            self.customer = {'id': 1}\n\n    log.info('Renewed contract %s', 'test', order=order)\n    # 'Renewed contract test - customer_id=1'))\n\n\n\nFeatures\n--------\n\n* TODO\n\nRunning Tests\n-------------\n\nDoes the code actually work?\n\n::\n\n    source <YOURVIRTUALENV>/bin/activate\n    (myenv) $ pip install tox\n    (myenv) $ tox\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n0.1.0 (2017-10-26)\n++++++++++++++++++\n\n* First release on PyPI.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ItsfBisounours/frame_logging", "keywords": "frame_logging", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "frame_logging", "package_url": "https://pypi.org/project/frame_logging/", "platform": "", "project_url": "https://pypi.org/project/frame_logging/", "project_urls": {"Homepage": "https://github.com/ItsfBisounours/frame_logging"}, "release_url": "https://pypi.org/project/frame_logging/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Your project description goes here", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/frame_logging\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/frame_logging.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91aeadf7037dd2b96ba14f6a55e92af048c4d9bc/68747470733a2f2f62616467652e667572792e696f2f70792f6672616d655f6c6f6767696e672e737667\"></a>\n<a href=\"https://travis-ci.org/ItsfBisounours/frame_logging\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/ItsfBisounours/frame_logging.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/37ccb1a5566d4185cd8386468d4729b3774e9440/68747470733a2f2f7472617669732d63692e6f72672f497473664269736f756e6f7572732f6672616d655f6c6f6767696e672e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/ItsfBisounours/frame_logging\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/ItsfBisounours/frame_logging/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f2276cd2fcd2bbe45148d1fc81d59499b88f1084/68747470733a2f2f636f6465636f762e696f2f67682f497473664269736f756e6f7572732f6672616d655f6c6f6767696e672f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<p>Your project description goes here</p>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The full documentation is at <a href=\"https://frame_logging.readthedocs.io\" rel=\"nofollow\">https://frame_logging.readthedocs.io</a>.</p>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<ol>\n<li><p>Install Frame Logging:</p>\n<pre>pip install frame_logging\n</pre>\n</li>\n<li><p>Add it to your <cite>INSTALLED_APPS</cite>:</p>\n</li>\n</ol>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'frame_logging.apps.FrameLoggingConfig'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n<ol>\n<li>Create a class to format your extra logging kwargs</li>\n</ol>\n<pre><span class=\"c1\">#</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">FrameFormatterExample</span><span class=\"p\">(</span><span class=\"n\">FrameFormatter</span><span class=\"p\">):</span>\n\n    <span class=\"c1\"># format methods</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_format_behaviour</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">OrderedDict</span><span class=\"p\">([</span>\n            <span class=\"p\">(</span><span class=\"s1\">'customer_id'</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">format_customer_id</span><span class=\"p\">),</span>\n        <span class=\"p\">])</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">format_customer_id</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">customer_id</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">\"customer_id=</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">customer_id</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># then if you need to, you can add new method to transform extra kwargs</span>\n    <span class=\"c1\"># transform methods</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_transform_kwargs_methods</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span>   <span class=\"p\">{</span>\n            <span class=\"s1\">'order'</span><span class=\"p\">:</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">transform_order</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">transform_order</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s1\">'customer_id'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">order</span><span class=\"o\">.</span><span class=\"n\">customer</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">kwargs</span>\n</pre>\n<ol>\n<li>Configure frame loggin in your settings.py</li>\n</ol>\n<pre><span class=\"c1\"># mandatory, if you do not priovide a formatter the app will crash</span>\n<span class=\"n\">FRAME_FORMATTER</span><span class=\"o\">=</span><span class=\"n\">FrameFormatterExample</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># optionnal, default = ' - '</span>\n<span class=\"n\">FRAME_SEPARATOR</span><span class=\"o\">=</span><span class=\"s1\">'+'</span>\n</pre>\n<ol>\n<li>Use it:</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">frame_logging.log</span> <span class=\"k\">as</span> <span class=\"nn\">log</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Order</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">customer</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}</span>\n\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Renewed contract </span><span class=\"si\">%s</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"s1\">'test'</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"n\">order</span><span class=\"p\">)</span>\n<span class=\"c1\"># 'Renewed contract test - customer_id=1'))</span>\n</pre>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>TODO</li>\n</ul>\n</div>\n<div id=\"running-tests\">\n<h2>Running Tests</h2>\n<p>Does the code actually work?</p>\n<pre>source &lt;YOURVIRTUALENV&gt;/bin/activate\n(myenv) $ pip install tox\n(myenv) $ tox\n</pre>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Tools used in rendering this package:</p>\n<ul>\n<li><a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a></li>\n<li><a href=\"https://github.com/pydanny/cookiecutter-djangopackage\" rel=\"nofollow\">cookiecutter-djangopackage</a></li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1.0 (2017-10-26)</span></h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3283745, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "0dcc695b08fe46be568e90eacf8c2efb", "sha256": "70324040a5ca0f2216616dc792d2c0190ed718e2e7efd1c4a465895ce64daac1"}, "downloads": -1, "filename": "frame_logging-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0dcc695b08fe46be568e90eacf8c2efb", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7086, "upload_time": "2017-10-27T13:29:23", "upload_time_iso_8601": "2017-10-27T13:29:23.252457Z", "url": "https://files.pythonhosted.org/packages/c9/df/7f4555cebfbcb369b0e55b37bdb8730748cfd075ab573455645f9478c129/frame_logging-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e78d19de2364462bc785080e4993c36c", "sha256": "cbdc081e9110dc3ad93e89a9d5ba4420a1ba19392f5b68d1d98244708706a81b"}, "downloads": -1, "filename": "frame_logging-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e78d19de2364462bc785080e4993c36c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6923, "upload_time": "2017-10-27T13:29:18", "upload_time_iso_8601": "2017-10-27T13:29:18.356178Z", "url": "https://files.pythonhosted.org/packages/cd/25/aa8b559054f72f19d7e12a7373108e8de149fe08eb0f3a792fcef088a4d8/frame_logging-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "89be9097f66812e317924818edf3814d", "sha256": "69c701e8862be9d9977cfe9eefa7020795791360605ad7906fe7389c65f5a3ae"}, "downloads": -1, "filename": "frame_logging-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "89be9097f66812e317924818edf3814d", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7087, "upload_time": "2017-10-27T13:36:57", "upload_time_iso_8601": "2017-10-27T13:36:57.832406Z", "url": "https://files.pythonhosted.org/packages/38/7d/43e6a00e443e0595609562a7dcf689450371ae0d76a2fdc15d8723a7c3fe/frame_logging-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "556391696e5a0a08f76e4cdb4ae30be7", "sha256": "7bb97faf0da1535a44dcd6ae29d5a4e91177642b0d673da11904f6ea442ec97f"}, "downloads": -1, "filename": "frame_logging-0.2.1.tar.gz", "has_sig": false, "md5_digest": "556391696e5a0a08f76e4cdb4ae30be7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6936, "upload_time": "2017-10-27T13:36:55", "upload_time_iso_8601": "2017-10-27T13:36:55.918702Z", "url": "https://files.pythonhosted.org/packages/4b/8b/e60c1c7aaa8475ee33227c02f472500e739bc5a9bbe60978e70d511de90b/frame_logging-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "89be9097f66812e317924818edf3814d", "sha256": "69c701e8862be9d9977cfe9eefa7020795791360605ad7906fe7389c65f5a3ae"}, "downloads": -1, "filename": "frame_logging-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "89be9097f66812e317924818edf3814d", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7087, "upload_time": "2017-10-27T13:36:57", "upload_time_iso_8601": "2017-10-27T13:36:57.832406Z", "url": "https://files.pythonhosted.org/packages/38/7d/43e6a00e443e0595609562a7dcf689450371ae0d76a2fdc15d8723a7c3fe/frame_logging-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "556391696e5a0a08f76e4cdb4ae30be7", "sha256": "7bb97faf0da1535a44dcd6ae29d5a4e91177642b0d673da11904f6ea442ec97f"}, "downloads": -1, "filename": "frame_logging-0.2.1.tar.gz", "has_sig": false, "md5_digest": "556391696e5a0a08f76e4cdb4ae30be7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6936, "upload_time": "2017-10-27T13:36:55", "upload_time_iso_8601": "2017-10-27T13:36:55.918702Z", "url": "https://files.pythonhosted.org/packages/4b/8b/e60c1c7aaa8475ee33227c02f472500e739bc5a9bbe60978e70d511de90b/frame_logging-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:34 2020"}