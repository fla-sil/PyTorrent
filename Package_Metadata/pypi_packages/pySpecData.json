{"info": {"author": "J. M. Franck", "author_email": "jmfranck@notgiven.com", "bugtrack_url": null, "classifiers": [], "description": "If you already know that you want to install -- you can skip to the quick-start_.\r\n\r\n===========\r\npySpecData\r\n===========\r\n\r\nObject-oriented Python package for processing spectral data -- or in general, *n*-dimensional data with labeled axes (i.e. *N*-dimensional gridded data or \"nddata\").\r\nIt depends on numpy, which provides very fast manipulations of *N*-dimensional gridded arrays (\"ndarray\").\r\n\r\nIf you are working in a lab developing new spectroscopic methodologies, then this package is definitely for you.\r\nIf you deal with multi-dimensional data of some other form, then it's likely for you.\r\nFeatures include:\r\n\r\nFeatures\r\n========\r\n\r\n* Labeled axes allow one to manipulate datasets (potentially with different dimensions) without having to explicitly keep track of what the different dimensions correspond to.  Code becomes more legible.  Also, tiling, direct product, and gridding functions become obsolete.\r\n\r\n* Fourier transformation with automatic manipulation of axes.\r\n\r\n* Automatic error propagation.\r\n\r\n* Commands like ``plot(data)`` will generate a plot with automatically labeled\r\n  axes, errors, and units.\r\n  All of this information is also written to HDF5 when the data is saved.\r\n\r\n* Simplified curve fitting that takes advantage of labeled axes and Python's symbolic algebra package (sympy).\r\n\r\n* The code is written so that it can be integrated into a nicely formatted PDF lab notebook.\r\n\r\n    * The same code can be run on the command line (to generate pop-up plot windows) and embedded into a LaTeX document.\r\n\r\n    * Extension to other output formats, such as HTML or markdown, should be relatively straightforward.\r\n\r\n* In a multimedia environment like jupyter, you don't need a separate plot\r\n  command.  The code can automatically choose a plotting style appropriate to\r\n  the code (eventually, the general preferences for this can just be configured\r\n  at the beginning of the jupyter notebook).\r\n\r\nMore detailed web documentation will be coming soon.\r\n\r\nNMR/ESR specific\r\n================\r\n\r\nBecause it was written primarily for NMR and ESR data, it also includes:\r\n\r\n* Routines for reading commercial raw data (*e.g.* Bruker, Kea) into nddata\r\n  objects with all relevant information.\r\n\r\n* The object-oriented features make it much easier to process raw phase-cycled\r\n  data and to simultaneously view multiple (potentially interfering) coherence\r\n  pathways.\r\n\r\n* Contains functions for baseline correction, peak integration, *etc.*\r\n\r\n* (Not yet in packaged version) A basic compiled routine for propagating\r\n  density matrices that can be used to predict the response to shaped pulses.\r\n\r\nVersion Notes\r\n=============\r\n\r\nNote that the current version is intended just for collaborators, *etc.*\r\n(Though, if you do really want to use it for interesting science,\r\nwe are happy to work with you to make it work for your purposes.)\r\nA public-use version 1.0.0, to be accompanied by useful demonstrations, is planned within a year.\r\n*(Note that the email currently linked to the PyPI account is infrequently checked --if you have interest in this software, please find J. Franck's website and contact by that email.)*\r\n\r\nHistory/Roadmap\r\n---------------\r\n\r\n(Current version in bold) \r\n\r\n0.9.5\r\n    First version distributed on pypi.python.org.\r\n\r\n0.9.5.1\r\n    - 0.9.5.1.1\r\n      Some important debugging, and also added `pyspecdata.ipy` \u2192 executing the following at the top of a jupyter notebook:\r\n\r\n        .. code-block:: python\r\n\r\n            %pylab inline\r\n            %load_ext pyspecdata.ipy\r\n\r\n      will cause nddata to \"display\" as labeled plots.\r\n\r\n    - 0.9.5.1.2\r\n      added ability to load power saturation 2D data from Bruker\r\n\r\n    - 0.9.5.1.3\r\n      XEpr data loaded with dBm units rather than W units\r\n\r\n      added ``to_ppm`` function for Bruker files\r\n\r\n    - 0.9.5.1.4\r\n      Improved internal logging, and started to remove gratuitous dependencies,\r\n      ``%load_ext pyspecdata.ipy`` includes\r\n      ``%pylab inline``, so that only\r\n\r\n        .. code-block:: python\r\n\r\n            %load_ext pyspecdata.ipy\r\n\r\n        is required for jupyter.\r\n\r\n    - **0.9.5.1.6**\r\n\r\n        - Removed several legacy modules, and added docstrings for the remaining modules.\r\n\r\n        - Begin phasing out earlier `CustomError` class.\r\n\r\n        - Make `numpy` pretty printing available from the `general_functions` module.\r\n\r\n        - Add xelatex support to the notebook wrapper.\r\n\r\n        - Start to move file search routines away from demanding a single \"data directory.\"\r\n\r\n        - Improved support for 2D Bruker XEPR\r\n\r\n    - 0.9.5.1.7\r\n      ``to_ppm`` should only be a method of inherited class\r\n\r\n0.9.5.2\r\n    Comma-separated indexing to work correctly with all indexing types.\r\n    (0.9.5 requires sequential brackets rather than comma-separated indexing for some combined range selections.)\r\n\r\n0.9.5.4\r\n    GUI for setting configuration directories.\r\n\r\n    Means for dealing with non-linearly spaced data in image plots\r\n    (0.9.5 auto-detects log spacing in 1D plots,\r\n    but pretends that image plots are linear -- we will implement linear spline\r\n    interpolation algorithm)\r\n\r\n0.9.5.5\r\n    Bruker DSP phase correction for raw data from newer versions of Topspin that is in sync with the code from nmrglue.\r\n\r\n0.9.5.8\r\n    Package a make-less copy of lapack to allow a cross-platform build of density matrix propagation routines.\r\n\r\n1.1.0\r\n    Integrate with ACERT NLSL Python package for simulation and fitting of ESR spectra.\r\n\r\n1.2.0\r\n    Implement a version of figure list that can be interfaced with Qt.\r\n\r\n\r\nInstallation Notes\r\n==================\r\n\r\n*Highly Recommended:* \r\nInstall the following packages using a good package-management system (conda or linux package manager), rather than relying on `pip` or `setuptools` to install them:\r\n\r\n* numpy\r\n\r\n* scipy\r\n\r\n* sympy\r\n\r\n* pyqt\r\n\r\n* pytables\r\n\r\n* matplotlib\r\n\r\n* h5py\r\n\r\nFor example, on Windows with `Anaconda 2.7`_.\r\n-- just run\r\n``conda install numpy scipy sympy pyqt pytables matplotlib h5py``.\r\n\r\n(If you don't install these packages with your system `pip` will try to install them, and there is a good chance it will fail -- it's known not to work great with several of these; `setuptools` should error out and tell you to install the packages.)\r\n\r\n*mayavi*: Mayavi can be used (and gives very nice graphics), but frequently lags behind common Python distros.\r\nTherefore, this package was written so that it doesn't depend on mayavi.\r\nRather, you can just import ``mayavi.mlab`` and pass it to any figure list that you initialize:\r\n``figlist_var(mlab = mayavi.mlab)``\r\n\r\nFor compiled extensions\r\n-----------------------\r\n\r\nAll compiled extensions are currently stripped out, but will be slowly\r\n    added back in.\r\n\r\nIf you are installing from github (or generally using setuptools -- *i.e.* ``python setup.py install``\r\nor ``python setup.py develop``).\r\n\r\nIf you are on windows, you will need some additional packages to enable compilation:\r\n\r\n* libpython\r\n\r\n* unxutils\r\n\r\n* mingw\r\n\r\nThe last two are specific to Windows, and provide things like the ``gcc`` and ``gfortran`` compiler, as well as ``make``.\r\n\r\nInstallation for developers\r\n---------------------------\r\n\r\n(Once these are installed,\r\nto install from github, just ``git clone https://github.com/jmfranck/pyspecdata.git`` then move to the directory where setup.py lives,\r\nand do\r\n``python setup_paramset.py develop``\r\nfollowed by\r\n``python setup.py develop``)\r\n\r\nQuick-Start\r\n===========\r\n\r\nTo get started with this code:\r\n\r\n1. Install a good Python 2.7 distribution\r\n\r\n   * On Windows or MacOS: `Anaconda 2.7 <https://www.continuum.io/downloads>`_.  When installing select \"install for all users.\"\r\n\r\n2. Install libraries that pyspecdata depends on. (If you're interested in why you need to do this first, see installation notes below.)\r\n\r\n   * On Windows or MacOS: in the Anaconda Prompt, run ``conda install numpy scipy sympy pyqt pytables matplotlib h5py``.\r\n\r\n   * For Mac, you can also use homebrew.\r\n     Note that, in the current version python is renamed to `python2`,\r\n     and `pip` to `pip2`.\r\n     Most packages can just be installed with `pip2` under homebrew.\r\n     If you want HDF5 functionality, you will need to run `brew tap homebrew/science` followed by `brew install hdf5`.\r\n\r\n   * On Linux, just use your package manager (``aptitude``, ``yum``, *etc.*) to install these libraries.\r\n\r\n3. Install `pyspecdata`: ``pip install pyspecdata``\r\n\r\n4. Set up directories -- create a file in your home directory\r\n   called ``_pyspecdata`` (Windows  -- note the underscore)\r\n   or ``.pyspecdata`` (Mac or Linux).\r\n   Here is an example -- you can copy and paste it as a starting point:\r\n\r\n   ::\r\n\r\n        [General]\r\n        data_directory = c:/Users/yourusername/exp_data\r\n        notebook_directory = c:/Users/yourusername/notebook\r\n\r\n   Note that any backslashes are substituted with forward slashes.\r\n   Also note that you will\r\n   need to change the directories to refer to real directories that already\r\n   exist or that you create on your hard drive (see below).\r\n   Note that on Windows, you can use notebook, *etc.* to create this file,\r\n   but it cannot have a .txt, *etc.* `extension <http://www.wikihow.com/Change-a-File-Extension>`_.\r\n\r\n   * Where is my \"home directory\"? (Where do I put the `_pyspecdata` file?)\r\n\r\n       * On Windows, your home directory is likely something like\r\n         ``C:\\Users\\yourusername``.\r\n         You can access your home directory by opening any file folder window, and\r\n         starting to type your name in the address bar -- it's the first folder that shows up\r\n         underneath.\r\n\r\n       * On MacOS and Linux, it's the directory indicated by ``~``.  On Linux,\r\n         this typically expands to ``/home/yourusername``.\r\n\r\n   * What are these directories? \u2192 You can either create them or point to existing directories.\r\n\r\n       * ``data_directory`` must be set.  It is a directory, anywhere on the\r\n         hard drive, where you store all your raw experimental data.  It must\r\n         contain at least one subdirectory -- each subdirectory stores\r\n         different \"experiment types,\" typically acquired on different instruments\r\n         (*e.g.* you might have subdirectories named ``400MHz_NMR``,\r\n         ``500MHz_NMR``, ``95GHz_ESR``, and ``Xband_ESR``).\r\n\r\n           * Data is assumed to be **unpacked** (*i.e.* as it is on the spectrometer -- not in .zip or .tgz files)\r\n\r\n           * If you're setting up a lab, you might want to separately sync each different\r\n             experiment type folders using `seafile <https://www.seafile.com/en/home/>`_.\r\n\r\n             Or you can sync the whole data directory with dropbox.\r\n\r\n       * If set, the ``notebook_directory`` is intended to contain latex\r\n         files with embedded python code, as well as some processed\r\n         output.\r\n\r\n   * *Do not* use quotes to surround the directory name.  Even if it contains\r\n     spaces, do not use quotes, and do not escape spaces with backslashes.\r\n\r\n   * Note that on Windows, your desktop folder is typically in ``C:\\Users\\yourusername\\Desktop``\r\n\r\n   * Why do I need to do this?\r\n\r\n       * Setting this configuration allows you to move code between different\r\n         computers (*e.g.* a spectrometer computer, a desktop, and a laptop),\r\n         and re-use the same code, even though the locations of the files are\r\n         changing.  This should work even across different operating systems.\r\n\r\n       * It specifically enables functions like ``find_file(...)``,\r\n         ``get_datadir(...)``, *etc.* that can search the data directory for a\r\n         file name matching some basic criteria.\r\n         You should always use these to load your data,\r\n         and *never* use the absolute path.\r\n\r\n       * The GUI tool that will allow you to set up ``_pyspecdata`` by pointing\r\n         and clicking has not yet been set up.\r\n\r\n\r\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/jmfranck/pyspecdata", "keywords": "", "license": "LICENSE.md", "maintainer": "", "maintainer_email": "", "name": "pySpecData", "package_url": "https://pypi.org/project/pySpecData/", "platform": "", "project_url": "https://pypi.org/project/pySpecData/", "project_urls": {"Homepage": "http://github.com/jmfranck/pyspecdata"}, "release_url": "https://pypi.org/project/pySpecData/0.9.5.1.6/", "requires_dist": ["h5py", "matplotlib", "numpy", "paramset-pyspecdata", "scipy", "sympy", "tables"], "requires_python": "", "summary": "object-oriented N-dimensional data processing with notebook functionality", "version": "0.9.5.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>If you already know that you want to install \u2013 you can skip to the <a href=\"#quick-start\" rel=\"nofollow\">quick-start</a>.</p>\n<div id=\"pyspecdata\">\n<h2>pySpecData</h2>\n<p>Object-oriented Python package for processing spectral data \u2013 or in general, <em>n</em>-dimensional data with labeled axes (i.e. <em>N</em>-dimensional gridded data or \u201cnddata\u201d).\nIt depends on numpy, which provides very fast manipulations of <em>N</em>-dimensional gridded arrays (\u201cndarray\u201d).</p>\n<p>If you are working in a lab developing new spectroscopic methodologies, then this package is definitely for you.\nIf you deal with multi-dimensional data of some other form, then it\u2019s likely for you.\nFeatures include:</p>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li><p>Labeled axes allow one to manipulate datasets (potentially with different dimensions) without having to explicitly keep track of what the different dimensions correspond to.  Code becomes more legible.  Also, tiling, direct product, and gridding functions become obsolete.</p>\n</li>\n<li><p>Fourier transformation with automatic manipulation of axes.</p>\n</li>\n<li><p>Automatic error propagation.</p>\n</li>\n<li><p>Commands like <tt>plot(data)</tt> will generate a plot with automatically labeled\naxes, errors, and units.\nAll of this information is also written to HDF5 when the data is saved.</p>\n</li>\n<li><p>Simplified curve fitting that takes advantage of labeled axes and Python\u2019s symbolic algebra package (sympy).</p>\n</li>\n<li><p>The code is written so that it can be integrated into a nicely formatted PDF lab notebook.</p>\n<blockquote>\n<ul>\n<li>The same code can be run on the command line (to generate pop-up plot windows) and embedded into a LaTeX document.</li>\n<li>Extension to other output formats, such as HTML or markdown, should be relatively straightforward.</li>\n</ul>\n</blockquote>\n</li>\n<li><p>In a multimedia environment like jupyter, you don\u2019t need a separate plot\ncommand.  The code can automatically choose a plotting style appropriate to\nthe code (eventually, the general preferences for this can just be configured\nat the beginning of the jupyter notebook).</p>\n</li>\n</ul>\n<p>More detailed web documentation will be coming soon.</p>\n</div>\n<div id=\"nmr-esr-specific\">\n<h3>NMR/ESR specific</h3>\n<p>Because it was written primarily for NMR and ESR data, it also includes:</p>\n<ul>\n<li>Routines for reading commercial raw data (<em>e.g.</em> Bruker, Kea) into nddata\nobjects with all relevant information.</li>\n<li>The object-oriented features make it much easier to process raw phase-cycled\ndata and to simultaneously view multiple (potentially interfering) coherence\npathways.</li>\n<li>Contains functions for baseline correction, peak integration, <em>etc.</em></li>\n<li>(Not yet in packaged version) A basic compiled routine for propagating\ndensity matrices that can be used to predict the response to shaped pulses.</li>\n</ul>\n</div>\n<div id=\"version-notes\">\n<h3>Version Notes</h3>\n<p>Note that the current version is intended just for collaborators, <em>etc.</em>\n(Though, if you do really want to use it for interesting science,\nwe are happy to work with you to make it work for your purposes.)\nA public-use version 1.0.0, to be accompanied by useful demonstrations, is planned within a year.\n<em>(Note that the email currently linked to the PyPI account is infrequently checked \u2013if you have interest in this software, please find J. Franck\u2019s website and contact by that email.)</em></p>\n<div id=\"history-roadmap\">\n<h4>History/Roadmap</h4>\n<p>(Current version in bold)</p>\n<dl>\n<dt>0.9.5</dt>\n<dd>First version distributed on pypi.python.org.</dd>\n<dt>0.9.5.1</dt>\n<dd><ul>\n<li><p>0.9.5.1.1\nSome important debugging, and also added <cite>pyspecdata.ipy</cite> \u2192 executing the following at the top of a jupyter notebook:</p>\n<blockquote>\n<pre><span class=\"o\">%</span><span class=\"n\">pylab</span> <span class=\"n\">inline</span>\n<span class=\"o\">%</span><span class=\"n\">load_ext</span> <span class=\"n\">pyspecdata</span><span class=\"o\">.</span><span class=\"n\">ipy</span>\n</pre>\n</blockquote>\n<p>will cause nddata to \u201cdisplay\u201d as labeled plots.</p>\n</li>\n<li><p>0.9.5.1.2\nadded ability to load power saturation 2D data from Bruker</p>\n</li>\n<li><p>0.9.5.1.3\nXEpr data loaded with dBm units rather than W units</p>\n<p>added <tt>to_ppm</tt> function for Bruker files</p>\n</li>\n<li><p>0.9.5.1.4\nImproved internal logging, and started to remove gratuitous dependencies,\n<tt>%load_ext pyspecdata.ipy</tt> includes\n<tt>%pylab inline</tt>, so that only</p>\n<blockquote>\n<pre><span class=\"o\">%</span><span class=\"n\">load_ext</span> <span class=\"n\">pyspecdata</span><span class=\"o\">.</span><span class=\"n\">ipy</span>\n</pre>\n<p>is required for jupyter.</p>\n</blockquote>\n</li>\n<li><p><strong>0.9.5.1.6</strong></p>\n<blockquote>\n<ul>\n<li>Removed several legacy modules, and added docstrings for the remaining modules.</li>\n<li>Begin phasing out earlier <cite>CustomError</cite> class.</li>\n<li>Make <cite>numpy</cite> pretty printing available from the <cite>general_functions</cite> module.</li>\n<li>Add xelatex support to the notebook wrapper.</li>\n<li>Start to move file search routines away from demanding a single \u201cdata directory.\u201d</li>\n<li>Improved support for 2D Bruker XEPR</li>\n</ul>\n</blockquote>\n</li>\n<li><p>0.9.5.1.7\n<tt>to_ppm</tt> should only be a method of inherited class</p>\n</li>\n</ul>\n</dd>\n<dt>0.9.5.2</dt>\n<dd>Comma-separated indexing to work correctly with all indexing types.\n(0.9.5 requires sequential brackets rather than comma-separated indexing for some combined range selections.)</dd>\n<dt>0.9.5.4</dt>\n<dd><p>GUI for setting configuration directories.</p>\n<p>Means for dealing with non-linearly spaced data in image plots\n(0.9.5 auto-detects log spacing in 1D plots,\nbut pretends that image plots are linear \u2013 we will implement linear spline\ninterpolation algorithm)</p>\n</dd>\n<dt>0.9.5.5</dt>\n<dd>Bruker DSP phase correction for raw data from newer versions of Topspin that is in sync with the code from nmrglue.</dd>\n<dt>0.9.5.8</dt>\n<dd>Package a make-less copy of lapack to allow a cross-platform build of density matrix propagation routines.</dd>\n<dt>1.1.0</dt>\n<dd>Integrate with ACERT NLSL Python package for simulation and fitting of ESR spectra.</dd>\n<dt>1.2.0</dt>\n<dd>Implement a version of figure list that can be interfaced with Qt.</dd>\n</dl>\n</div>\n</div>\n<div id=\"installation-notes\">\n<h3>Installation Notes</h3>\n<p><em>Highly Recommended:</em>\nInstall the following packages using a good package-management system (conda or linux package manager), rather than relying on <cite>pip</cite> or <cite>setuptools</cite> to install them:</p>\n<ul>\n<li>numpy</li>\n<li>scipy</li>\n<li>sympy</li>\n<li>pyqt</li>\n<li>pytables</li>\n<li>matplotlib</li>\n<li>h5py</li>\n</ul>\n<p>For example, on Windows with <a href=\"https://www.continuum.io/downloads\" rel=\"nofollow\">Anaconda 2.7</a>.\n\u2013 just run\n<tt>conda install numpy scipy sympy pyqt pytables matplotlib h5py</tt>.</p>\n<p>(If you don\u2019t install these packages with your system <cite>pip</cite> will try to install them, and there is a good chance it will fail \u2013 it\u2019s known not to work great with several of these; <cite>setuptools</cite> should error out and tell you to install the packages.)</p>\n<p><em>mayavi</em>: Mayavi can be used (and gives very nice graphics), but frequently lags behind common Python distros.\nTherefore, this package was written so that it doesn\u2019t depend on mayavi.\nRather, you can just import <tt>mayavi.mlab</tt> and pass it to any figure list that you initialize:\n<tt>figlist_var(mlab = mayavi.mlab)</tt></p>\n<div id=\"for-compiled-extensions\">\n<h4>For compiled extensions</h4>\n<dl>\n<dt>All compiled extensions are currently stripped out, but will be slowly</dt>\n<dd>added back in.</dd>\n</dl>\n<p>If you are installing from github (or generally using setuptools \u2013 <em>i.e.</em> <tt>python setup.py install</tt>\nor <tt>python setup.py develop</tt>).</p>\n<p>If you are on windows, you will need some additional packages to enable compilation:</p>\n<ul>\n<li>libpython</li>\n<li>unxutils</li>\n<li>mingw</li>\n</ul>\n<p>The last two are specific to Windows, and provide things like the <tt>gcc</tt> and <tt>gfortran</tt> compiler, as well as <tt>make</tt>.</p>\n</div>\n<div id=\"installation-for-developers\">\n<h4>Installation for developers</h4>\n<p>(Once these are installed,\nto install from github, just <tt>git clone <span class=\"pre\">https://github.com/jmfranck/pyspecdata.git</span></tt> then move to the directory where setup.py lives,\nand do\n<tt>python setup_paramset.py develop</tt>\nfollowed by\n<tt>python setup.py develop</tt>)</p>\n</div>\n</div>\n<div id=\"quick-start\">\n<h3>Quick-Start</h3>\n<p>To get started with this code:</p>\n<ol>\n<li><p>Install a good Python 2.7 distribution</p>\n<ul>\n<li>On Windows or MacOS: <a href=\"https://www.continuum.io/downloads\" rel=\"nofollow\">Anaconda 2.7</a>.  When installing select \u201cinstall for all users.\u201d</li>\n</ul>\n</li>\n<li><p>Install libraries that pyspecdata depends on. (If you\u2019re interested in why you need to do this first, see installation notes below.)</p>\n<ul>\n<li>On Windows or MacOS: in the Anaconda Prompt, run <tt>conda install numpy scipy sympy pyqt pytables matplotlib h5py</tt>.</li>\n<li>For Mac, you can also use homebrew.\nNote that, in the current version python is renamed to <cite>python2</cite>,\nand <cite>pip</cite> to <cite>pip2</cite>.\nMost packages can just be installed with <cite>pip2</cite> under homebrew.\nIf you want HDF5 functionality, you will need to run <cite>brew tap homebrew/science</cite> followed by <cite>brew install hdf5</cite>.</li>\n<li>On Linux, just use your package manager (<tt>aptitude</tt>, <tt>yum</tt>, <em>etc.</em>) to install these libraries.</li>\n</ul>\n</li>\n<li><p>Install <cite>pyspecdata</cite>: <tt>pip install pyspecdata</tt></p>\n</li>\n<li><p>Set up directories \u2013 create a file in your home directory\ncalled <tt>_pyspecdata</tt> (Windows  \u2013 note the underscore)\nor <tt>.pyspecdata</tt> (Mac or Linux).\nHere is an example \u2013 you can copy and paste it as a starting point:</p>\n<pre>[General]\ndata_directory = c:/Users/yourusername/exp_data\nnotebook_directory = c:/Users/yourusername/notebook\n</pre>\n<p>Note that any backslashes are substituted with forward slashes.\nAlso note that you will\nneed to change the directories to refer to real directories that already\nexist or that you create on your hard drive (see below).\nNote that on Windows, you can use notebook, <em>etc.</em> to create this file,\nbut it cannot have a .txt, <em>etc.</em> <a href=\"http://www.wikihow.com/Change-a-File-Extension\" rel=\"nofollow\">extension</a>.</p>\n<ul>\n<li><p>Where is my \u201chome directory\u201d? (Where do I put the <cite>_pyspecdata</cite> file?)</p>\n<blockquote>\n<ul>\n<li>On Windows, your home directory is likely something like\n<tt><span class=\"pre\">C:\\Users\\yourusername</span></tt>.\nYou can access your home directory by opening any file folder window, and\nstarting to type your name in the address bar \u2013 it\u2019s the first folder that shows up\nunderneath.</li>\n<li>On MacOS and Linux, it\u2019s the directory indicated by <tt>~</tt>.  On Linux,\nthis typically expands to <tt>/home/yourusername</tt>.</li>\n</ul>\n</blockquote>\n</li>\n<li><p>What are these directories? \u2192 You can either create them or point to existing directories.</p>\n<blockquote>\n<ul>\n<li><p><tt>data_directory</tt> must be set.  It is a directory, anywhere on the\nhard drive, where you store all your raw experimental data.  It must\ncontain at least one subdirectory \u2013 each subdirectory stores\ndifferent \u201cexperiment types,\u201d typically acquired on different instruments\n(<em>e.g.</em> you might have subdirectories named <tt>400MHz_NMR</tt>,\n<tt>500MHz_NMR</tt>, <tt>95GHz_ESR</tt>, and <tt>Xband_ESR</tt>).</p>\n<blockquote>\n<ul>\n<li><p>Data is assumed to be <strong>unpacked</strong> (<em>i.e.</em> as it is on the spectrometer \u2013 not in .zip or .tgz files)</p>\n</li>\n<li><p>If you\u2019re setting up a lab, you might want to separately sync each different\nexperiment type folders using <a href=\"https://www.seafile.com/en/home/\" rel=\"nofollow\">seafile</a>.</p>\n<p>Or you can sync the whole data directory with dropbox.</p>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p>If set, the <tt>notebook_directory</tt> is intended to contain latex\nfiles with embedded python code, as well as some processed\noutput.</p>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p><em>Do not</em> use quotes to surround the directory name.  Even if it contains\nspaces, do not use quotes, and do not escape spaces with backslashes.</p>\n</li>\n<li><p>Note that on Windows, your desktop folder is typically in <tt><span class=\"pre\">C:\\Users\\yourusername\\Desktop</span></tt></p>\n</li>\n<li><p>Why do I need to do this?</p>\n<blockquote>\n<ul>\n<li>Setting this configuration allows you to move code between different\ncomputers (<em>e.g.</em> a spectrometer computer, a desktop, and a laptop),\nand re-use the same code, even though the locations of the files are\nchanging.  This should work even across different operating systems.</li>\n<li>It specifically enables functions like <tt><span class=\"pre\">find_file(...)</span></tt>,\n<tt><span class=\"pre\">get_datadir(...)</span></tt>, <em>etc.</em> that can search the data directory for a\nfile name matching some basic criteria.\nYou should always use these to load your data,\nand <em>never</em> use the absolute path.</li>\n<li>The GUI tool that will allow you to set up <tt>_pyspecdata</tt> by pointing\nand clicking has not yet been set up.</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3336106, "releases": {"0.9.2": [{"comment_text": "", "digests": {"md5": "6eb6f684baf11dfe98d987e64b45d18d", "sha256": "eb809d14728541386ee9e19b86f6e8ab6bd722a8ac0abd70c6ac0262f866be83"}, "downloads": -1, "filename": "pySpecData-0.9.2-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "6eb6f684baf11dfe98d987e64b45d18d", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 290897, "upload_time": "2017-07-12T01:47:06", "upload_time_iso_8601": "2017-07-12T01:47:06.513037Z", "url": "https://files.pythonhosted.org/packages/b0/e1/468bcd014d612b6c57dc2583b3424915f21307f1158072cab8db3d3352b1/pySpecData-0.9.2-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b04e34040c96fbd76370772226d104b5", "sha256": "3c0c5ce3e0dfdd69fb8af7913f7199c9422343c77eb68c868bc22bc85df8175a"}, "downloads": -1, "filename": "pySpecData-0.9.2.tar.gz", "has_sig": false, "md5_digest": "b04e34040c96fbd76370772226d104b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 181389, "upload_time": "2017-07-12T01:47:08", "upload_time_iso_8601": "2017-07-12T01:47:08.650404Z", "url": "https://files.pythonhosted.org/packages/a7/47/c77c8dccc6e9775e4a0a9b56b5aebb20493d3c0b81b2258039bcffb77b96/pySpecData-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "f1b36911a6fd574e21e3a2237aa59cc5", "sha256": "6ce8423bb0332969bff114d71de7c1d5cf0df0df09f5fd8d38658de72120bc05"}, "downloads": -1, "filename": "pySpecData-0.9.3-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "f1b36911a6fd574e21e3a2237aa59cc5", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 346543, "upload_time": "2017-07-13T00:18:34", "upload_time_iso_8601": "2017-07-13T00:18:34.274669Z", "url": "https://files.pythonhosted.org/packages/a2/aa/5679ab2581df7e3f84d2c78ccd9949d381f1519f51a5224e01cc492918c0/pySpecData-0.9.3-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd7ed62fe7040b617b0f56155acddae8", "sha256": "c8724045dca141365fc14a5628760c4e3ea4c46e285f08fe6504866f65fd286e"}, "downloads": -1, "filename": "pySpecData-0.9.3.tar.gz", "has_sig": false, "md5_digest": "dd7ed62fe7040b617b0f56155acddae8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 215409, "upload_time": "2017-07-13T00:18:37", "upload_time_iso_8601": "2017-07-13T00:18:37.241923Z", "url": "https://files.pythonhosted.org/packages/91/8e/e2f80948128e8b69d825dc2445c0447bff02eb449e2f6ca8b17eb9b23d32/pySpecData-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "257eebdbb7a296ed867b6a8429fb2eef", "sha256": "e55db37cd72a3fec40cce19ec38022bf1ce4219826bd56d7e5464ec5b228fce0"}, "downloads": -1, "filename": "pySpecData-0.9.4-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "257eebdbb7a296ed867b6a8429fb2eef", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 346538, "upload_time": "2017-07-13T00:22:12", "upload_time_iso_8601": "2017-07-13T00:22:12.892938Z", "url": "https://files.pythonhosted.org/packages/3d/d6/bd50dcc60e60acaec81ef6b378d8bd869f03de65890c7505f3046d509ca1/pySpecData-0.9.4-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc3cde4a33dd748afc3dbba9862703f5", "sha256": "82f2602f32b11e016268f20412ec553693dd84292c1dc8500153f4884d9bd01e"}, "downloads": -1, "filename": "pySpecData-0.9.4.tar.gz", "has_sig": false, "md5_digest": "cc3cde4a33dd748afc3dbba9862703f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 215397, "upload_time": "2017-07-13T00:22:15", "upload_time_iso_8601": "2017-07-13T00:22:15.428964Z", "url": "https://files.pythonhosted.org/packages/80/e9/9ef5f15d3c71149b81d09287da8e18efad646cc3ecffef027e4b1693299a/pySpecData-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "f1446bcc9273ecdc213b0511b63307e1", "sha256": "75be4d7d9b9a3fc30efd3e2528f1d47ad34fbe806f781ac33c00229279da88ad"}, "downloads": -1, "filename": "pySpecData-0.9.5-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "f1446bcc9273ecdc213b0511b63307e1", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 346526, "upload_time": "2017-07-13T00:40:56", "upload_time_iso_8601": "2017-07-13T00:40:56.549486Z", "url": "https://files.pythonhosted.org/packages/b5/ee/e653dddc34c94c4008ce4a5aa7783616fcc3ee71104335f2c2e3a0f0580b/pySpecData-0.9.5-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27e59b5057d9804f944ec85608a7da42", "sha256": "c2f1b20aaf34d4de1ea158a2db9e62a9433e165ae33bf6c322b61c094ceab213"}, "downloads": -1, "filename": "pySpecData-0.9.5.tar.gz", "has_sig": false, "md5_digest": "27e59b5057d9804f944ec85608a7da42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 215377, "upload_time": "2017-07-13T00:40:59", "upload_time_iso_8601": "2017-07-13T00:40:59.017744Z", "url": "https://files.pythonhosted.org/packages/3c/e3/c4305633881ebf32b87b452eb7255327a5cb9ebe8d58ef6bb372ac5b1048/pySpecData-0.9.5.tar.gz", "yanked": false}], "0.9.5.1": [{"comment_text": "", "digests": {"md5": "b08a6d5626ed5a3c6ae50bbd10bbbdca", "sha256": "4943435162d12c7dad031937b51a4708e4c156dd7736a9044b8c1a19b0527723"}, "downloads": -1, "filename": "pySpecData-0.9.5.1-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "b08a6d5626ed5a3c6ae50bbd10bbbdca", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 355676, "upload_time": "2017-07-20T16:51:27", "upload_time_iso_8601": "2017-07-20T16:51:27.885342Z", "url": "https://files.pythonhosted.org/packages/65/e1/6c3239dfb0136dbc9b4a1db81d00b12c8c1a8cfba42a79939aeb962ea0b1/pySpecData-0.9.5.1-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d14a2f1b1d192477a72c2bb16c5289d", "sha256": "66d7bf13d106e941aa8a4927bc133d809de03764a754fed2a6fe42e6e06d26d6"}, "downloads": -1, "filename": "pySpecData-0.9.5.1.tar.gz", "has_sig": false, "md5_digest": "0d14a2f1b1d192477a72c2bb16c5289d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 224518, "upload_time": "2017-07-20T16:51:33", "upload_time_iso_8601": "2017-07-20T16:51:33.495563Z", "url": "https://files.pythonhosted.org/packages/46/5b/3e45a6a6a6b273d299aca23ea79bae57972eceddde8b65dc77478225f448/pySpecData-0.9.5.1.tar.gz", "yanked": false}], "0.9.5.1.1": [{"comment_text": "", "digests": {"md5": "78c7929b16b86bae7174fa59666cf1a1", "sha256": "754f2cd9120478066716bfb8b34ebe2a26d9d3a7e759a1da976c122233dd4292"}, "downloads": -1, "filename": "pySpecData-0.9.5.1.1-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "78c7929b16b86bae7174fa59666cf1a1", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 366941, "upload_time": "2017-07-21T15:40:44", "upload_time_iso_8601": "2017-07-21T15:40:44.017205Z", "url": "https://files.pythonhosted.org/packages/7a/c6/821f227269cc4372e68e379dd24b872f9f0c78441bb5211edf9857948cdc/pySpecData-0.9.5.1.1-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b691fc9656ff2b6cb76c88bc4cd959e7", "sha256": "cda95d907a225b5fef35a4a9feb3bc4d9f3a52077456f0b46e0c41a42602dd41"}, "downloads": -1, "filename": "pySpecData-0.9.5.1.1.tar.gz", "has_sig": false, "md5_digest": "b691fc9656ff2b6cb76c88bc4cd959e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 224590, "upload_time": "2017-07-21T15:40:46", "upload_time_iso_8601": "2017-07-21T15:40:46.193214Z", "url": "https://files.pythonhosted.org/packages/f8/8e/911945c9af3c5dec8cdf30c58205682629a524d9b52fa53aafe52e684441/pySpecData-0.9.5.1.1.tar.gz", "yanked": false}], "0.9.5.1.2": [{"comment_text": "", "digests": {"md5": "0b289a7fc1f936c82e8a088d946b19c5", "sha256": "8ba24ded1e2e0427cdcb6439b7a2d994e9d08f69fce138e2841b87d92e732d71"}, "downloads": -1, "filename": "pySpecData-0.9.5.1.2-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "0b289a7fc1f936c82e8a088d946b19c5", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 345744, "upload_time": "2017-08-03T15:57:30", "upload_time_iso_8601": "2017-08-03T15:57:30.489666Z", "url": "https://files.pythonhosted.org/packages/cf/e0/6d3791263a9e80c545b1773f1b407e5b1457ca92079af445acd8d55579ba/pySpecData-0.9.5.1.2-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4cd2e995844c6217eded5a7cc9b017a4", "sha256": "f323a3a6c07156668bf5ffed06e4427a599cfab5a974b79270de0d30a774a7b6"}, "downloads": -1, "filename": "pySpecData-0.9.5.1.2.tar.gz", "has_sig": false, "md5_digest": "4cd2e995844c6217eded5a7cc9b017a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 225215, "upload_time": "2017-08-03T15:57:32", "upload_time_iso_8601": "2017-08-03T15:57:32.295972Z", "url": "https://files.pythonhosted.org/packages/68/70/75b6122498f70fad23570aa8782991af2b463465c202c728ff6172328029/pySpecData-0.9.5.1.2.tar.gz", "yanked": false}], "0.9.5.1.3": [{"comment_text": "", "digests": {"md5": "747fd0a9e13127c1a1e495ad1ce03b5a", "sha256": "c337e7a0e716ee33ab5b51175beadc865d3b5d2ec4c1859b620be4f62d17aac3"}, "downloads": -1, "filename": "pySpecData-0.9.5.1.3-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "747fd0a9e13127c1a1e495ad1ce03b5a", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 347123, "upload_time": "2017-08-09T21:25:31", "upload_time_iso_8601": "2017-08-09T21:25:31.922501Z", "url": "https://files.pythonhosted.org/packages/2d/ee/6496a8ffd4cf4bf03b9f54d9a7cd8c91cf3e8e4782c3262b25d00f316c96/pySpecData-0.9.5.1.3-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b955d68d55d62b57f67150d738892818", "sha256": "1ca5f0aa58c5e428b2463cf03dc0367733fc96477b0fce20de2dd58f61bd8669"}, "downloads": -1, "filename": "pySpecData-0.9.5.1.3.tar.gz", "has_sig": false, "md5_digest": "b955d68d55d62b57f67150d738892818", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 226684, "upload_time": "2017-08-09T21:25:33", "upload_time_iso_8601": "2017-08-09T21:25:33.999281Z", "url": "https://files.pythonhosted.org/packages/28/69/abc64b0403ea490356ad041ff406b5f23b8c87ff96c4707cd4ec49421df5/pySpecData-0.9.5.1.3.tar.gz", "yanked": false}], "0.9.5.1.4": [{"comment_text": "", "digests": {"md5": "327b49b5a221f007fd5d5ae8ea5f75f3", "sha256": "f220e3d595d6a2fa70b288b16dfc605db0ea1b095fb8b5906eb2e278e74ba8b5"}, "downloads": -1, "filename": "pySpecData-0.9.5.1.4-py2-none-any.whl", "has_sig": false, "md5_digest": "327b49b5a221f007fd5d5ae8ea5f75f3", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 240862, "upload_time": "2017-09-14T21:47:12", "upload_time_iso_8601": "2017-09-14T21:47:12.709187Z", "url": "https://files.pythonhosted.org/packages/bb/34/9c84b55b49174e4e3820d15ac74a0fd346612ef463d79ff8e8ccfc2822c3/pySpecData-0.9.5.1.4-py2-none-any.whl", "yanked": false}], "0.9.5.1.6": [{"comment_text": "", "digests": {"md5": "561d92efc776d3a1f480a8dc104d05a4", "sha256": "11b515709b36f03964935ba955409f845724816133c143e527358423f8c7e2cc"}, "downloads": -1, "filename": "pySpecData-0.9.5.1.6-py2-none-any.whl", "has_sig": false, "md5_digest": "561d92efc776d3a1f480a8dc104d05a4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 247439, "upload_time": "2017-11-15T17:23:29", "upload_time_iso_8601": "2017-11-15T17:23:29.608961Z", "url": "https://files.pythonhosted.org/packages/97/f0/f8597b40ec77ccc16bc51cb020699ab94373de6a7af0f0edfbf3c1f25bf1/pySpecData-0.9.5.1.6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85f4a3e244610a2b83c17626666cee8b", "sha256": "29f14a40b925e0fb4dceef802ed032750b1c241234ac772d6349d2c0d67c094d"}, "downloads": -1, "filename": "pySpecData-0.9.5.1.6.tar.gz", "has_sig": false, "md5_digest": "85f4a3e244610a2b83c17626666cee8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 160519, "upload_time": "2017-11-15T17:23:30", "upload_time_iso_8601": "2017-11-15T17:23:30.968922Z", "url": "https://files.pythonhosted.org/packages/6e/66/f6ce4f6a5e61b4849dfebc7f9b9a8dc9b3991333b981acedaa1f3475b4a9/pySpecData-0.9.5.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "561d92efc776d3a1f480a8dc104d05a4", "sha256": "11b515709b36f03964935ba955409f845724816133c143e527358423f8c7e2cc"}, "downloads": -1, "filename": "pySpecData-0.9.5.1.6-py2-none-any.whl", "has_sig": false, "md5_digest": "561d92efc776d3a1f480a8dc104d05a4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 247439, "upload_time": "2017-11-15T17:23:29", "upload_time_iso_8601": "2017-11-15T17:23:29.608961Z", "url": "https://files.pythonhosted.org/packages/97/f0/f8597b40ec77ccc16bc51cb020699ab94373de6a7af0f0edfbf3c1f25bf1/pySpecData-0.9.5.1.6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85f4a3e244610a2b83c17626666cee8b", "sha256": "29f14a40b925e0fb4dceef802ed032750b1c241234ac772d6349d2c0d67c094d"}, "downloads": -1, "filename": "pySpecData-0.9.5.1.6.tar.gz", "has_sig": false, "md5_digest": "85f4a3e244610a2b83c17626666cee8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 160519, "upload_time": "2017-11-15T17:23:30", "upload_time_iso_8601": "2017-11-15T17:23:30.968922Z", "url": "https://files.pythonhosted.org/packages/6e/66/f6ce4f6a5e61b4849dfebc7f9b9a8dc9b3991333b981acedaa1f3475b4a9/pySpecData-0.9.5.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:17 2020"}