{"info": {"author": "Painor", "author_email": "topcode.softwares@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": ".. image:: https://img.shields.io/pypi/v/wolframalpha-asyncio.svg\n   :target: https://pypi.org/project/wolframalpha-asyncio\n\n.. image:: https://img.shields.io/pypi/pyversions/wolframalpha-asyncio.svg\n\n.. image:: https://readthedocs.org/projects/wolframalpha/badge/?version=latest\n   :target: https://wolframalpha.readthedocs.io/en/latest/?badge=latest\n\nAsync Python Client built against the `Wolfram|Alpha <http://wolframalpha.com>`_\nv2.0 API.\n\nUsage\n=====\n\nBasic usage is pretty simple. Create the client with your App ID (request from\nWolfram Alpha)::\n\n    import wolframalpha\n    client = wolframalpha.Client(app_id)\n\nThen, you can send queries, which return Result objects::\n\n    res = await client.query('temperature in Washington, DC on October 3, 2012')\n\nResult objects have `pods` (a Pod is an answer group from Wolfram Alpha)::\n\n    for pod in res.pods:\n        do_something_with(pod)\n\nPod objects have ``subpods`` (a Subpod is a specific response with the plaintext\nreply and some additional info)::\n\n    for pod in res.pods:\n        for sub in pod.subpods:\n            print(sub.text)\n\nYou may also query for simply the pods which have 'Result' titles or are\nmarked as 'primary' using ``Result.results``::\n\n    print(next(res.results).text)\n\nAll objects returned are dictionary subclasses, so to find out which attributes\nWolfram|Alpha has supplied, simply invoke ``.keys()`` on the object.\nAttributes formed from XML attributes can be accessed with or without their\n\"@\" prefix (added by xmltodict).\n\nFor more information, read the source.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/painor/wolframalpha-asyncio", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "wolframalpha-asyncio", "package_url": "https://pypi.org/project/wolframalpha-asyncio/", "platform": "", "project_url": "https://pypi.org/project/wolframalpha-asyncio/", "project_urls": {"Homepage": "https://github.com/painor/wolframalpha-asyncio"}, "release_url": "https://pypi.org/project/wolframalpha-asyncio/4.0.1/", "requires_dist": null, "requires_python": ">=3.5.3", "summary": "Wolfram|Alpha 2.0 API Async client", "version": "4.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/wolframalpha-asyncio\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/wolframalpha-asyncio.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7975787f41ee0523222d00043439a76c9de9433a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f776f6c6672616d616c7068612d6173796e63696f2e737667\"></a>\n<img alt=\"https://img.shields.io/pypi/pyversions/wolframalpha-asyncio.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7f68e3f83e2142e143702799afae4113b1e158ed/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f776f6c6672616d616c7068612d6173796e63696f2e737667\">\n<a href=\"https://wolframalpha.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"https://readthedocs.org/projects/wolframalpha/badge/?version=latest\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/396e1d47a68ff91045bb1a0ff3ed58a6133d949a/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f776f6c6672616d616c7068612f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<p>Async Python Client built against the <a href=\"http://wolframalpha.com\" rel=\"nofollow\">Wolfram|Alpha</a>\nv2.0 API.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Basic usage is pretty simple. Create the client with your App ID (request from\nWolfram Alpha):</p>\n<pre>import wolframalpha\nclient = wolframalpha.Client(app_id)\n</pre>\n<p>Then, you can send queries, which return Result objects:</p>\n<pre>res = await client.query('temperature in Washington, DC on October 3, 2012')\n</pre>\n<p>Result objects have <cite>pods</cite> (a Pod is an answer group from Wolfram Alpha):</p>\n<pre>for pod in res.pods:\n    do_something_with(pod)\n</pre>\n<p>Pod objects have <tt>subpods</tt> (a Subpod is a specific response with the plaintext\nreply and some additional info):</p>\n<pre>for pod in res.pods:\n    for sub in pod.subpods:\n        print(sub.text)\n</pre>\n<p>You may also query for simply the pods which have \u2018Result\u2019 titles or are\nmarked as \u2018primary\u2019 using <tt>Result.results</tt>:</p>\n<pre>print(next(res.results).text)\n</pre>\n<p>All objects returned are dictionary subclasses, so to find out which attributes\nWolfram|Alpha has supplied, simply invoke <tt>.keys()</tt> on the object.\nAttributes formed from XML attributes can be accessed with or without their\n\u201c@\u201d prefix (added by xmltodict).</p>\n<p>For more information, read the source.</p>\n</div>\n\n          </div>"}, "last_serial": 5823018, "releases": {"4.0": [{"comment_text": "", "digests": {"md5": "20cafb274d516fab4b799fc61c5a4e0f", "sha256": "153cde3e878841269e696e09751ec40f94c41951b81f8fa26a8f23f893bf1cdf"}, "downloads": -1, "filename": "wolframalpha-asyncio-4.0.tar.gz", "has_sig": false, "md5_digest": "20cafb274d516fab4b799fc61c5a4e0f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 5503, "upload_time": "2019-09-12T23:03:22", "upload_time_iso_8601": "2019-09-12T23:03:22.605361Z", "url": "https://files.pythonhosted.org/packages/fe/10/d106c382c5de2adfe32f92f98ea18c29992a46b79720626637615f5d80ee/wolframalpha-asyncio-4.0.tar.gz", "yanked": false}], "4.0.1": [{"comment_text": "", "digests": {"md5": "b92ca934dfb67a1c2702f2658938c13a", "sha256": "c5fb80321c573a7df46aaf14b7cc076d38ba0b52b3decbddeda8848759c41274"}, "downloads": -1, "filename": "wolframalpha-asyncio-4.0.1.tar.gz", "has_sig": false, "md5_digest": "b92ca934dfb67a1c2702f2658938c13a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 5501, "upload_time": "2019-09-12T23:10:38", "upload_time_iso_8601": "2019-09-12T23:10:38.176050Z", "url": "https://files.pythonhosted.org/packages/2e/98/14de08c19694a0f19923a1eac68b80fbf1bc1499bb9a4de0f12b4e32dbe2/wolframalpha-asyncio-4.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b92ca934dfb67a1c2702f2658938c13a", "sha256": "c5fb80321c573a7df46aaf14b7cc076d38ba0b52b3decbddeda8848759c41274"}, "downloads": -1, "filename": "wolframalpha-asyncio-4.0.1.tar.gz", "has_sig": false, "md5_digest": "b92ca934dfb67a1c2702f2658938c13a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 5501, "upload_time": "2019-09-12T23:10:38", "upload_time_iso_8601": "2019-09-12T23:10:38.176050Z", "url": "https://files.pythonhosted.org/packages/2e/98/14de08c19694a0f19923a1eac68b80fbf1bc1499bb9a4de0f12b4e32dbe2/wolframalpha-asyncio-4.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:28:16 2020"}