{"info": {"author": "GamingGeek (Jake Ward)", "author_email": "geek@gaminggeek.dev", "bugtrack_url": null, "classifiers": [], "description": "# discordbio\n\nAn asynchronous Python wrapper for the [discord.bio API](https://api.discord.bio/v1)\n\n### Installing\n\n```\npip install discordbio\n```\n\n### Usage\n\n* Setting up the client\n> This will be used to make requests to the API\n\n```py\nfrom discordbio import DBioClient\n\nclient = DBioClient()\n```\n\n* Exceptions\n\n| Error | Description |\n| ----- | ----------- |\n| discordbio.errors.BaseDBioException | Exception others subclass from, can be used to catch any error thrown from the wrapper |\n| discordbio.errors.DBioError | Raised when discord.bio doesn't return a successful response |\n| discordbio.errors.HTTPException | Raised when the request to discord.bio itself fails |\n\n* Getting a user's details, via username or Discord ID\n> All methods of DBioClient are typed meaning your IDE should auto complete the attributes\n> If not, you can import the types (UserDetails and UserConnections) and manually set the type\n\n```py\ndetails = await client.details(\"geek\")\n```\n\n```py\n# With Type\nfrom discordbio import UserDetails\n\ndetails: UserDetails = await client.details(\"geek\")\n```\n\n* Getting a specific value from a user's details, e.g. description or a users flags\n\n```py\ndescription = (await client.details(\"geek\")).settings.description\n\nflags = (await client.details(\"geek\")).discord.flags\n# Flags can be used to determine a user's badges\n```\n\n* Getting a user's connections\n\n```py\nconnections = await client.connections(\"geek\")\n\n# With Discord connections\nconnections = await client.connections(\"geek\", with_discord=True)\n```\n\n```py\n# With Type\nfrom discordbio import UserConnections\n\n\nconnections: UserConnections = await client.connections(\"geek\", with_discord=True)\n```\n\n* Miscellaneous Endpoints\n\n```py\nusers: int = await client.total_users()  # Returns total user count\n```\n\n```py\nfrom discordbio import PartialUser\nfrom typing import List\n\n\nupvoted: List[PartialUser] = await client.top_upvoted() \n```\n\n### Attributes\n\n* UserDetails (from client.details)\n```py\nsettings: Settings\ndiscord: Discord\n```\n\n* Settings\n```py\nuser_id: int\nname: str\nstatus: Optional[str]\ndescription: Optional[str]\nverified: bool\nupvotes: int\npremium: bool\nlocation: Optional[str]\ngender: Optional[str]\nbirthday: Optional[datetime]\nemail: Optional[str]\noccupation: Optional[str]\ncreated_at: datetime\nbanner: Optional[str]\n```\n\n* Discord\n```py\nid: int\nusername: str\navatar: Optional[str]\navatar_url: str\nis_avatar_animated: bool\ndiscriminator: str\nflags: int\n```\n\n* Partial User (from client.top_upvoted)\n```py\nuser_id: int\nname: str\ndescription: Optional[str]\nverified: bool\nupvotes: int\npremium: bool\ndiscord: Discord\n```\n\n* Connections (from client.connections)\n```py\ngithub: Optional[str]\nwebsite: Optional[str]\ninstagram: Optional[str]\nsnapchat: Optional[str]\nlinkedin: Optional[str]\ndiscord: List[DiscordConnection]\n```\n\n* Discord Connections\n```py\nconnection_type: str\nname: str\nurl: str\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/GamingGeek/discordbio", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "discordbio", "package_url": "https://pypi.org/project/discordbio/", "platform": "", "project_url": "https://pypi.org/project/discordbio/", "project_urls": {"Homepage": "https://github.com/GamingGeek/discordbio"}, "release_url": "https://pypi.org/project/discordbio/1.3.0/", "requires_dist": null, "requires_python": "", "summary": "An asynchronous wrapper for the discord.bio api", "version": "1.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>discordbio</h1>\n<p>An asynchronous Python wrapper for the <a href=\"https://api.discord.bio/v1\" rel=\"nofollow\">discord.bio API</a></p>\n<h3>Installing</h3>\n<pre><code>pip install discordbio\n</code></pre>\n<h3>Usage</h3>\n<ul>\n<li>Setting up the client</li>\n</ul>\n<blockquote>\n<p>This will be used to make requests to the API</p>\n</blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">discordbio</span> <span class=\"kn\">import</span> <span class=\"n\">DBioClient</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">DBioClient</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li>Exceptions</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Error</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>discordbio.errors.BaseDBioException</td>\n<td>Exception others subclass from, can be used to catch any error thrown from the wrapper</td>\n</tr>\n<tr>\n<td>discordbio.errors.DBioError</td>\n<td>Raised when discord.bio doesn't return a successful response</td>\n</tr>\n<tr>\n<td>discordbio.errors.HTTPException</td>\n<td>Raised when the request to discord.bio itself fails</td>\n</tr></tbody></table>\n<ul>\n<li>Getting a user's details, via username or Discord ID</li>\n</ul>\n<blockquote>\n<p>All methods of DBioClient are typed meaning your IDE should auto complete the attributes\nIf not, you can import the types (UserDetails and UserConnections) and manually set the type</p>\n</blockquote>\n<pre><span class=\"n\">details</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"p\">(</span><span class=\"s2\">\"geek\"</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># With Type</span>\n<span class=\"kn\">from</span> <span class=\"nn\">discordbio</span> <span class=\"kn\">import</span> <span class=\"n\">UserDetails</span>\n\n<span class=\"n\">details</span><span class=\"p\">:</span> <span class=\"n\">UserDetails</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"p\">(</span><span class=\"s2\">\"geek\"</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Getting a specific value from a user's details, e.g. description or a users flags</li>\n</ul>\n<pre><span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"p\">(</span><span class=\"s2\">\"geek\"</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">description</span>\n\n<span class=\"n\">flags</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"p\">(</span><span class=\"s2\">\"geek\"</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">discord</span><span class=\"o\">.</span><span class=\"n\">flags</span>\n<span class=\"c1\"># Flags can be used to determine a user's badges</span>\n</pre>\n<ul>\n<li>Getting a user's connections</li>\n</ul>\n<pre><span class=\"n\">connections</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"p\">(</span><span class=\"s2\">\"geek\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># With Discord connections</span>\n<span class=\"n\">connections</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"p\">(</span><span class=\"s2\">\"geek\"</span><span class=\"p\">,</span> <span class=\"n\">with_discord</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># With Type</span>\n<span class=\"kn\">from</span> <span class=\"nn\">discordbio</span> <span class=\"kn\">import</span> <span class=\"n\">UserConnections</span>\n\n\n<span class=\"n\">connections</span><span class=\"p\">:</span> <span class=\"n\">UserConnections</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"p\">(</span><span class=\"s2\">\"geek\"</span><span class=\"p\">,</span> <span class=\"n\">with_discord</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Miscellaneous Endpoints</li>\n</ul>\n<pre><span class=\"n\">users</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">total_users</span><span class=\"p\">()</span>  <span class=\"c1\"># Returns total user count</span>\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">discordbio</span> <span class=\"kn\">import</span> <span class=\"n\">PartialUser</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">List</span>\n\n\n<span class=\"n\">upvoted</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">PartialUser</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">top_upvoted</span><span class=\"p\">()</span> \n</pre>\n<h3>Attributes</h3>\n<ul>\n<li>UserDetails (from client.details)</li>\n</ul>\n<pre><span class=\"n\">settings</span><span class=\"p\">:</span> <span class=\"n\">Settings</span>\n<span class=\"n\">discord</span><span class=\"p\">:</span> <span class=\"n\">Discord</span>\n</pre>\n<ul>\n<li>Settings</li>\n</ul>\n<pre><span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n<span class=\"n\">status</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>\n<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>\n<span class=\"n\">verified</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>\n<span class=\"n\">upvotes</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n<span class=\"n\">premium</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>\n<span class=\"n\">location</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>\n<span class=\"n\">gender</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>\n<span class=\"n\">birthday</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">datetime</span><span class=\"p\">]</span>\n<span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>\n<span class=\"n\">occupation</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>\n<span class=\"n\">created_at</span><span class=\"p\">:</span> <span class=\"n\">datetime</span>\n<span class=\"n\">banner</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>\n</pre>\n<ul>\n<li>Discord</li>\n</ul>\n<pre><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n<span class=\"n\">username</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n<span class=\"n\">avatar</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>\n<span class=\"n\">avatar_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n<span class=\"n\">is_avatar_animated</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>\n<span class=\"n\">discriminator</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n<span class=\"n\">flags</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n</pre>\n<ul>\n<li>Partial User (from client.top_upvoted)</li>\n</ul>\n<pre><span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>\n<span class=\"n\">verified</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>\n<span class=\"n\">upvotes</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n<span class=\"n\">premium</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>\n<span class=\"n\">discord</span><span class=\"p\">:</span> <span class=\"n\">Discord</span>\n</pre>\n<ul>\n<li>Connections (from client.connections)</li>\n</ul>\n<pre><span class=\"n\">github</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>\n<span class=\"n\">website</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>\n<span class=\"n\">instagram</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>\n<span class=\"n\">snapchat</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>\n<span class=\"n\">linkedin</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>\n<span class=\"n\">discord</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">DiscordConnection</span><span class=\"p\">]</span>\n</pre>\n<ul>\n<li>Discord Connections</li>\n</ul>\n<pre><span class=\"n\">connection_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n</pre>\n\n          </div>"}, "last_serial": 7013126, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "e9e9466eb8e462131b5a3e20978441ec", "sha256": "4b59632c92c07fdcb2c2b7b91b9119d0110d37420856de293ea532336345ca59"}, "downloads": -1, "filename": "discordbio-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e9e9466eb8e462131b5a3e20978441ec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9671, "upload_time": "2020-02-21T03:18:02", "upload_time_iso_8601": "2020-02-21T03:18:02.187910Z", "url": "https://files.pythonhosted.org/packages/c5/25/7f327ab4e4493043bfa6bb02dd2442945dd8f10cc0b354b385b8c69182b3/discordbio-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c78aea5f1c00a4ab3c3fb288b617ecb8", "sha256": "e95f82a1e7a5f58769155e55e25070985d299f6ce8203a3fdf9641371ebc763c"}, "downloads": -1, "filename": "discordbio-1.1.0.tar.gz", "has_sig": false, "md5_digest": "c78aea5f1c00a4ab3c3fb288b617ecb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4671, "upload_time": "2020-02-21T03:18:03", "upload_time_iso_8601": "2020-02-21T03:18:03.502778Z", "url": "https://files.pythonhosted.org/packages/a0/b6/b7a2c14c8f8805b8e67e0c206c620a3e0495c402d095e3f4d961bd55a976/discordbio-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "a9857a4a976ef05b7a6871b72396308d", "sha256": "e569137cdcad33569e8ecaf48a292c1e6774d319acf3581d9236e4d5e76e54ca"}, "downloads": -1, "filename": "discordbio-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a9857a4a976ef05b7a6871b72396308d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10735, "upload_time": "2020-02-23T07:59:57", "upload_time_iso_8601": "2020-02-23T07:59:57.516524Z", "url": "https://files.pythonhosted.org/packages/0d/20/9930b7c68fd9c578f56266bba34ba3e7bf1ac3ef0edf71f1e02107fd7608/discordbio-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a8a0512fd5e5445d446c1f352b7a232", "sha256": "1f10e222fe25f4d94562831b50f99382b6c717ea4b16226ff7c3ec8ff5b36c82"}, "downloads": -1, "filename": "discordbio-1.2.0.tar.gz", "has_sig": false, "md5_digest": "3a8a0512fd5e5445d446c1f352b7a232", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5712, "upload_time": "2020-02-23T07:59:58", "upload_time_iso_8601": "2020-02-23T07:59:58.889573Z", "url": "https://files.pythonhosted.org/packages/51/d6/ef2ff76f202465be4e7b1e40d1b01fa206679c2764cce0cb1b997aaaea6f/discordbio-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "7212b0ea5bc28f198b91a3deefd0400d", "sha256": "4513ad84728c6d16cc9ee0296519c6421dc44a2c45c1371d5b83909310371b42"}, "downloads": -1, "filename": "discordbio-1.3.0.tar.gz", "has_sig": false, "md5_digest": "7212b0ea5bc28f198b91a3deefd0400d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6026, "upload_time": "2020-04-13T22:09:21", "upload_time_iso_8601": "2020-04-13T22:09:21.214173Z", "url": "https://files.pythonhosted.org/packages/2f/d4/99932ec4aa3a6661d8691c1ff2cc01fff0ac963461d76570b1c75530f0a5/discordbio-1.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7212b0ea5bc28f198b91a3deefd0400d", "sha256": "4513ad84728c6d16cc9ee0296519c6421dc44a2c45c1371d5b83909310371b42"}, "downloads": -1, "filename": "discordbio-1.3.0.tar.gz", "has_sig": false, "md5_digest": "7212b0ea5bc28f198b91a3deefd0400d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6026, "upload_time": "2020-04-13T22:09:21", "upload_time_iso_8601": "2020-04-13T22:09:21.214173Z", "url": "https://files.pythonhosted.org/packages/2f/d4/99932ec4aa3a6661d8691c1ff2cc01fff0ac963461d76570b1c75530f0a5/discordbio-1.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:13 2020"}