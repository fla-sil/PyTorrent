{"info": {"author": "Azlux", "author_email": "github@azlux.fr", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# PYMUMBLE python library\n\n## Description\nThis library acts as a mumble client, connecting to a murmur server, exchanging states and audio.\n\nThe wiki/API explanation is [HERE](https://github.com/azlux/pymumble/blob/pymumble_py3/API.md).\n\n## Installing/Getting started\n\n### Requirements\n\n**`libopus` is a mandatory OS library**. Please refer to your package manager to install it.\n\n### With pip\n\n- `pip install pymumble_py3`\n- `pip3 install -r requirements.txt`\n- You need to `import pymumble_py3 as pymumble` into your code.\n\n### With git\n\n- `git clone https://github.com/azlux/pymumble.git`\n- You need to `import pymumble.pymumble_py3 as pymumble` into your code.\n- It's will be the same if you use a git sub-module\n\n## CHANGELOG\n\nThe changelog is available on the release note.\n\n## Applications list using `pymumble`\n\nFor client application examples, you can check this list :\n- [Botamusique](https://github.com/azlux/botamusique)\n- [MumbleRadioPlayer](https://github.com/azlux/MumbleRadioPlayer) (archived)\n- [Abot](https://github.com/ranomier/pymumble-abot)\n- [MumbleRecbot](https://github.com/Robert904/mumblerecbot) (deprecated)\n\n## Features\n\n### Currently implemented:\n- Compatible with Mumble 1.3 and normally until 1.2.2\n- Support OPUS. Speex is not supported\n- Receive and send audio, get users and channels status\n- Set properties for users (mute, comments, etc.) and go to a specific channel\n- Callback mechanism to react on server events\n- Manage the blobs (images, long comments, etc.)\n- Can send text messages to user and channel\n- Ping statistics\n- Audio targets (whisper, etc.)\n\n### What is missing:\n\n>  I don't need these features, so if you want one, open an issue and I will work on it.\n\n- UDP media. Currently it works only in TCP tunneling mode (the standard fallback of Mumble when UDP is not working)\n- Server management (user creation and registration, ACLs, groups, bans, etc.)\n- Positioning is not managed, but it should be easy to add\n- Probably a lot of other small features\n- **WONTFIX** The **Python 2** version is available in the [master branch](https://github.com/azlux/pymumble/tree/master). It's working! But since we have moved on to Python 3, the Python 2 version will not receive future improvements.\n\n## Architecture\n\nThe library is based on the Mumble object, which a thread. When started, it will try\nto connect to the server and start exchanging the connection messages.\nThis thread implements a loop which takes care of the pings, sends commands to the server,\nchecks for incoming messages including audio, and checks for audio to be sent out.\nThe rate of this loop is controlled by how long it will wait for an incoming message before continuing.\n\nYou can check if the thread is alive with `mumble_object.isAlive()`.\nThe Mumble thread will stop if it disconnects from the server.\nThis can be useful if you need to restart the thread when using a supervisor.\n\n\n## Thanks\n\n- [@raylu](https://github.com/raylu) for making `pymumble` speak into channels\n- [@schlarpc](https://github.com/schlarpc) for fixes on buffer\n- [@Robert904](https://github.com/Robert904) for the inital pymumble implementation\n\nThis library is a fork of a fork of a fork (initial from https://github.com/Robert904/pymumble).\nBut we will try to make `pymumble` better.\nSo I consider this fork (the [@Azlux](https://github.com/azlux/pymumble) one) the current live fork of `pymumble`.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/azlux/pymumble", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "pymumble", "package_url": "https://pypi.org/project/pymumble/", "platform": "", "project_url": "https://pypi.org/project/pymumble/", "project_urls": {"Homepage": "https://github.com/azlux/pymumble"}, "release_url": "https://pypi.org/project/pymumble/1.0/", "requires_dist": ["opuslib (==2.0.0)", "protobuf (==3.4.0)"], "requires_python": ">=3.6", "summary": "Mumble library used for multiple uses like making mumble bot.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PYMUMBLE python library</h1>\n<h2>Description</h2>\n<p>This library acts as a mumble client, connecting to a murmur server, exchanging states and audio.</p>\n<p>The wiki/API explanation is <a href=\"https://github.com/azlux/pymumble/blob/pymumble_py3/API.md\" rel=\"nofollow\">HERE</a>.</p>\n<h2>Installing/Getting started</h2>\n<h3>Requirements</h3>\n<p><strong><code>libopus</code> is a mandatory OS library</strong>. Please refer to your package manager to install it.</p>\n<h3>With pip</h3>\n<ul>\n<li><code>pip install pymumble_py3</code></li>\n<li><code>pip3 install -r requirements.txt</code></li>\n<li>You need to <code>import pymumble_py3 as pymumble</code> into your code.</li>\n</ul>\n<h3>With git</h3>\n<ul>\n<li><code>git clone https://github.com/azlux/pymumble.git</code></li>\n<li>You need to <code>import pymumble.pymumble_py3 as pymumble</code> into your code.</li>\n<li>It's will be the same if you use a git sub-module</li>\n</ul>\n<h2>CHANGELOG</h2>\n<p>The changelog is available on the release note.</p>\n<h2>Applications list using <code>pymumble</code></h2>\n<p>For client application examples, you can check this list :</p>\n<ul>\n<li><a href=\"https://github.com/azlux/botamusique\" rel=\"nofollow\">Botamusique</a></li>\n<li><a href=\"https://github.com/azlux/MumbleRadioPlayer\" rel=\"nofollow\">MumbleRadioPlayer</a> (archived)</li>\n<li><a href=\"https://github.com/ranomier/pymumble-abot\" rel=\"nofollow\">Abot</a></li>\n<li><a href=\"https://github.com/Robert904/mumblerecbot\" rel=\"nofollow\">MumbleRecbot</a> (deprecated)</li>\n</ul>\n<h2>Features</h2>\n<h3>Currently implemented:</h3>\n<ul>\n<li>Compatible with Mumble 1.3 and normally until 1.2.2</li>\n<li>Support OPUS. Speex is not supported</li>\n<li>Receive and send audio, get users and channels status</li>\n<li>Set properties for users (mute, comments, etc.) and go to a specific channel</li>\n<li>Callback mechanism to react on server events</li>\n<li>Manage the blobs (images, long comments, etc.)</li>\n<li>Can send text messages to user and channel</li>\n<li>Ping statistics</li>\n<li>Audio targets (whisper, etc.)</li>\n</ul>\n<h3>What is missing:</h3>\n<blockquote>\n<p>I don't need these features, so if you want one, open an issue and I will work on it.</p>\n</blockquote>\n<ul>\n<li>UDP media. Currently it works only in TCP tunneling mode (the standard fallback of Mumble when UDP is not working)</li>\n<li>Server management (user creation and registration, ACLs, groups, bans, etc.)</li>\n<li>Positioning is not managed, but it should be easy to add</li>\n<li>Probably a lot of other small features</li>\n<li><strong>WONTFIX</strong> The <strong>Python 2</strong> version is available in the <a href=\"https://github.com/azlux/pymumble/tree/master\" rel=\"nofollow\">master branch</a>. It's working! But since we have moved on to Python 3, the Python 2 version will not receive future improvements.</li>\n</ul>\n<h2>Architecture</h2>\n<p>The library is based on the Mumble object, which a thread. When started, it will try\nto connect to the server and start exchanging the connection messages.\nThis thread implements a loop which takes care of the pings, sends commands to the server,\nchecks for incoming messages including audio, and checks for audio to be sent out.\nThe rate of this loop is controlled by how long it will wait for an incoming message before continuing.</p>\n<p>You can check if the thread is alive with <code>mumble_object.isAlive()</code>.\nThe Mumble thread will stop if it disconnects from the server.\nThis can be useful if you need to restart the thread when using a supervisor.</p>\n<h2>Thanks</h2>\n<ul>\n<li><a href=\"https://github.com/raylu\" rel=\"nofollow\">@raylu</a> for making <code>pymumble</code> speak into channels</li>\n<li><a href=\"https://github.com/schlarpc\" rel=\"nofollow\">@schlarpc</a> for fixes on buffer</li>\n<li><a href=\"https://github.com/Robert904\" rel=\"nofollow\">@Robert904</a> for the inital pymumble implementation</li>\n</ul>\n<p>This library is a fork of a fork of a fork (initial from <a href=\"https://github.com/Robert904/pymumble\" rel=\"nofollow\">https://github.com/Robert904/pymumble</a>).\nBut we will try to make <code>pymumble</code> better.\nSo I consider this fork (the <a href=\"https://github.com/azlux/pymumble\" rel=\"nofollow\">@Azlux</a> one) the current live fork of <code>pymumble</code>.</p>\n\n          </div>"}, "last_serial": 7061876, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "81f7de318f217bd4b1acc127c05892d7", "sha256": "04076969b096ac68f416a0575d72d0923f150a239fdb9f190d3691521ec42f12"}, "downloads": -1, "filename": "pymumble-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "81f7de318f217bd4b1acc127c05892d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 44392, "upload_time": "2020-04-20T18:24:38", "upload_time_iso_8601": "2020-04-20T18:24:38.079967Z", "url": "https://files.pythonhosted.org/packages/e3/ae/09f7c397e147cf7addc94531797e9827eeb4560abe6d240470ff836e8113/pymumble-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "295756003726c0d96997af7c0ae47ed2", "sha256": "2db93000db05e8777106f7fca1b12e034871773ed9f9d612629fc353a01e25f9"}, "downloads": -1, "filename": "pymumble-1.0.tar.gz", "has_sig": false, "md5_digest": "295756003726c0d96997af7c0ae47ed2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28350, "upload_time": "2020-04-20T18:24:40", "upload_time_iso_8601": "2020-04-20T18:24:40.257502Z", "url": "https://files.pythonhosted.org/packages/d4/35/c31430a3acdfc51f63b109ce55e9452cada6438c9e464e657be477c58977/pymumble-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "81f7de318f217bd4b1acc127c05892d7", "sha256": "04076969b096ac68f416a0575d72d0923f150a239fdb9f190d3691521ec42f12"}, "downloads": -1, "filename": "pymumble-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "81f7de318f217bd4b1acc127c05892d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 44392, "upload_time": "2020-04-20T18:24:38", "upload_time_iso_8601": "2020-04-20T18:24:38.079967Z", "url": "https://files.pythonhosted.org/packages/e3/ae/09f7c397e147cf7addc94531797e9827eeb4560abe6d240470ff836e8113/pymumble-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "295756003726c0d96997af7c0ae47ed2", "sha256": "2db93000db05e8777106f7fca1b12e034871773ed9f9d612629fc353a01e25f9"}, "downloads": -1, "filename": "pymumble-1.0.tar.gz", "has_sig": false, "md5_digest": "295756003726c0d96997af7c0ae47ed2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 28350, "upload_time": "2020-04-20T18:24:40", "upload_time_iso_8601": "2020-04-20T18:24:40.257502Z", "url": "https://files.pythonhosted.org/packages/d4/35/c31430a3acdfc51f63b109ce55e9452cada6438c9e464e657be477c58977/pymumble-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:32 2020"}