{"info": {"author": "Mehdi Foroozandeh, Sasan Ashrafi", "author_email": "mehdiforoozandehsh@gmail.com , sasan.ashrafi.m@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7"], "description": "README\n======\n\n'Nucleic Acid Memory Reciprocal Converter' converts any file to a DNA sequence and vice versa.\n\n>>> This package is developed to convert any type of file into DNA sequence and reversely back to the first file.\nAs nucleic acids are more stable when they have a reach \u2018G+C\u2019 content, this code attempts to set G and C as the most frequent nucleotides in the DNA output. Hence, a key is generated to address the origin of each nucleotide and this key file is requisite for the \u201csequence_to_file (name, Format)\u201d function.\n\nIt contains two separate functions. \n\n>>> First one \u201cfile_to_sequence (name, Format)\u201d gets two arguments. The name of your file and the format. For example (\u2018music\u2019,\u2019.mp3\u2019) and it generates two files, one is the DNA sequence (.nuc) and the other is the key (key.nky).\n\n>>> The second function \u201csequence_to_file (name, Format)\u201d  brings back the initial file. It gets two arguments, the name of the DNA file (.nuc) and the output format (for example \u2018.mp3\u2019). \n\n\nThanks for reading.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mehdiforoozandeh/recinam", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "recinam", "package_url": "https://pypi.org/project/recinam/", "platform": "", "project_url": "https://pypi.org/project/recinam/", "project_urls": {"Homepage": "https://github.com/mehdiforoozandeh/recinam"}, "release_url": "https://pypi.org/project/recinam/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Nucleic Acid Memory Reciprocal Converter", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>\u2018Nucleic Acid Memory Reciprocal Converter\u2019 converts any file to a DNA sequence and vice versa.</p>\n<pre>&gt;&gt;&gt; This package is developed to convert any type of file into DNA sequence and reversely back to the first file.\nAs nucleic acids are more stable when they have a reach \u2018G+C\u2019 content, this code attempts to set G and C as the most frequent nucleotides in the DNA output. Hence, a key is generated to address the origin of each nucleotide and this key file is requisite for the \u201csequence_to_file (name, Format)\u201d function.\n</pre>\n<p>It contains two separate functions.</p>\n<pre>&gt;&gt;&gt; First one \u201cfile_to_sequence (name, Format)\u201d gets two arguments. The name of your file and the format. For example (\u2018music\u2019,\u2019.mp3\u2019) and it generates two files, one is the DNA sequence (.nuc) and the other is the key (key.nky).\n</pre>\n<pre>&gt;&gt;&gt; The second function \u201csequence_to_file (name, Format)\u201d  brings back the initial file. It gets two arguments, the name of the DNA file (.nuc) and the output format (for example \u2018.mp3\u2019).\n</pre>\n<p>Thanks for reading.</p>\n\n          </div>"}, "last_serial": 4470059, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ef96ea2d9081e4f2d4d27e14d2bc216f", "sha256": "48f7f8d14c9ac2aa3ffa270e99505b5a2abcf503a0636ed8f5bb9216cb9b47a5"}, "downloads": -1, "filename": "recinam-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "ef96ea2d9081e4f2d4d27e14d2bc216f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 3990, "upload_time": "2018-11-09T16:31:33", "upload_time_iso_8601": "2018-11-09T16:31:33.280903Z", "url": "https://files.pythonhosted.org/packages/d0/b2/364c0bec57a4ca2f0bd16f0cbafd8721cf077c44f8886c8d955882c7e468/recinam-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a50a31db68b14631fe6ef4729cd4a246", "sha256": "22c3c8a7c220738a13f15b13ec58d9467c78995b65834afdfebe0d85ede3c7ae"}, "downloads": -1, "filename": "recinam-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a50a31db68b14631fe6ef4729cd4a246", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2194, "upload_time": "2018-11-09T16:31:46", "upload_time_iso_8601": "2018-11-09T16:31:46.428209Z", "url": "https://files.pythonhosted.org/packages/f5/52/68d51245877b4c356bc5d12f9c5fa8d65b60a0406ef3aa9f2b87eeb6730b/recinam-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ef96ea2d9081e4f2d4d27e14d2bc216f", "sha256": "48f7f8d14c9ac2aa3ffa270e99505b5a2abcf503a0636ed8f5bb9216cb9b47a5"}, "downloads": -1, "filename": "recinam-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "ef96ea2d9081e4f2d4d27e14d2bc216f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 3990, "upload_time": "2018-11-09T16:31:33", "upload_time_iso_8601": "2018-11-09T16:31:33.280903Z", "url": "https://files.pythonhosted.org/packages/d0/b2/364c0bec57a4ca2f0bd16f0cbafd8721cf077c44f8886c8d955882c7e468/recinam-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a50a31db68b14631fe6ef4729cd4a246", "sha256": "22c3c8a7c220738a13f15b13ec58d9467c78995b65834afdfebe0d85ede3c7ae"}, "downloads": -1, "filename": "recinam-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a50a31db68b14631fe6ef4729cd4a246", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2194, "upload_time": "2018-11-09T16:31:46", "upload_time_iso_8601": "2018-11-09T16:31:46.428209Z", "url": "https://files.pythonhosted.org/packages/f5/52/68d51245877b4c356bc5d12f9c5fa8d65b60a0406ef3aa9f2b87eeb6730b/recinam-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:13 2020"}