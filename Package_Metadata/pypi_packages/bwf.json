{"info": {"author": "Robert Truxal", "author_email": "rtruxal2020@outlook.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Console", "Framework :: AsyncIO", "Natural Language :: English", "Natural Language :: Esperanto", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: Name Service (DNS)", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Indexing/Search", "Topic :: Internet :: WWW/HTTP :: Site Management", "Topic :: Internet :: WWW/HTTP :: Site Management :: Link Checking"], "description": "Bing Website Finder\n===================\n--------------------------\n\n## Purpose:\n`bing_website_finder` (aka `bwf`) finds websites for an arbitrarily long list of company names.\n\n<br>\n\n## Requirements:\n - Python >= 3.7\n - A Bing Search API subscription\n - A CSV full of company names\n\n<br>\n\n## Installation:\n\n#### Direct download:\nFrom the commandline run:\n```sh\n$ git clone https://github.com/rtruxal/company-website-finder.git\n$ cd bing-website-finder/\n$ pip install .\n```\n\n#### Without installing (python API):\n```sh\n$ git clone https://github.com/rtruxal/company-website-finder.git\n$ cd bing-website-finder/\n$ python --version `#check your python version to make sure it's >=3.7`\nPython 3.7.2\n$ python `#start python`\nPython 3.7.2 (default, Jan  2 2119, 17:17:17) [MSC v.1111 2222 bit (DAM46)] :: Anaconda, Inc. on win3333\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n```\nAnd then:\n```py\n>>> from bing_website_finder.get_websites import init\n>>> from os import path\n>>>\n>>> infile = path.realpath('./bing_website_finder/data/example_input_website_finder.csv')\n>>> outfile = path.realpath('./results.csv')\n>>> bing_api_key = '987654321deadbeef123456789'\n>>>\n>>> init(infile, outfile, verbose=False, api_key=bing_api_key)\n\n```\n\n\n#### From pypi (NOT IMPLEMENTED YET):\n```sh\n$ pip install bing-website-finder\n```\n<br>\n\n## Configuration & Usage:\n\n#### Create a CSV input file:\nYour input CSV **must** include the following 2 columns (case sensitive):\n - Company Name\n - Website  \n\nCheck out `bing_website_finder/data/example_input_website_finder.csv` (which was gathered from [a very old SEC website](https://www.sec.gov/rules/other/4-460list.htm)) for a practical example.\n\n\n#### Permenantly store a Bing Search API Key in `config.py`:\nLocate the `bing_website_finder/config.py` file & modify this line:\n```py\nDEFAULT_SEARCH_API_V7_KEY = 'CHANGE ME'\n```\n\n#### Python usage:\nYou can find the primary interface inside of `bing_website_finder/get_websites.py`.  \nIt's called `init()`. Here is it's declaration as of v0.0.1:\n```py\ndef init(infilepth, outfilepth, verbose=False, api_key=None, num_workers=5):\n    assert os.path.exists(infilepth), \"Please check the infile path you've specified.\"\n    cache = pd.read_csv(infilepth)\n    workers = (Worker(cache, api_key) for i in range(num_workers))\n    loop = asyncio.get_event_loop()\n    try:\n        loop.run_until_complete(_execute(workers, verbose, loop=loop))\n    finally:\n        cache.to_csv(outfilepth, index=False)\n```\nIf you do not specify an `api_key` argument, the `DEFAULT_SEARCH_API_V7_KEY` variable in `bing_website_finder/config.py` will be used.\n\n**IMPORTANT NOTE: THE PROGRAM WILL FAIL SILENTLY IF YOU LEAVE `api_key=None` & DO NOT MODIFY : `DEFAULT_SEARCH_API_V7_KEY` INSIDE OF `config.py`**\n\n#### cmdline usage:\nInsallation via pip automatically creates an executable and places it in your $PYTHONPATH. \n\nIf `/YOUR/PYTHON/ENV/bin`* is in your `$PATH`**, simply type:\n```sh\n$ bwf --help\n```\nor\n```sh\n$ bing_website_finder --help\n```  \nif neither of these^ work after installation, you can always use:  \n\n```sh\n$ python -m bwf --help\n```\nor\n```sh\n$ python -m bing_website_finder --help\n```\n\\* - (`/YOUR/PYTHON/ENV/Scripts` on Windows)  \n\\** - (`%PATH%` on Windows)\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://please.buythingsfrom.us", "keywords": "", "license": "MIT-like (see LICENCE file)", "maintainer": "", "maintainer_email": "", "name": "bwf", "package_url": "https://pypi.org/project/bwf/", "platform": "", "project_url": "https://pypi.org/project/bwf/", "project_urls": {"Homepage": "https://please.buythingsfrom.us"}, "release_url": "https://pypi.org/project/bwf/0.0.1/", "requires_dist": ["aiohttp", "pandas"], "requires_python": ">=3.7.0", "summary": "Bing Website Finder (bwf) adds websites to a list of company names from the commandline.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Bing Website Finder<br>===================<br>--------------------------<br><br>## Purpose:<br>`bing_website_finder` (aka `bwf`) finds websites for an arbitrarily long list of company names.<br><br>&lt;br&gt;<br><br>## Requirements:<br> - Python &gt;= 3.7<br> - A Bing Search API subscription<br> - A CSV full of company names<br><br>&lt;br&gt;<br><br>## Installation:<br><br>#### Direct download:<br>From the commandline run:<br>```sh<br>$ git clone https://github.com/rtruxal/company-website-finder.git<br>$ cd bing-website-finder/<br>$ pip install .<br>```<br><br>#### Without installing (python API):<br>```sh<br>$ git clone https://github.com/rtruxal/company-website-finder.git<br>$ cd bing-website-finder/<br>$ python --version `#check your python version to make sure it's &gt;=3.7`<br>Python 3.7.2<br>$ python `#start python`<br>Python 3.7.2 (default, Jan  2 2119, 17:17:17) [MSC v.1111 2222 bit (DAM46)] :: Anaconda, Inc. on win3333<br>Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.<br>```<br>And then:<br>```py<br>&gt;&gt;&gt; from bing_website_finder.get_websites import init<br>&gt;&gt;&gt; from os import path<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; infile = path.realpath('./bing_website_finder/data/example_input_website_finder.csv')<br>&gt;&gt;&gt; outfile = path.realpath('./results.csv')<br>&gt;&gt;&gt; bing_api_key = '987654321deadbeef123456789'<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; init(infile, outfile, verbose=False, api_key=bing_api_key)<br><br>```<br><br><br>#### From pypi (NOT IMPLEMENTED YET):<br>```sh<br>$ pip install bing-website-finder<br>```<br>&lt;br&gt;<br><br>## Configuration &amp; Usage:<br><br>#### Create a CSV input file:<br>Your input CSV **must** include the following 2 columns (case sensitive):<br> - Company Name<br> - Website  <br><br>Check out `bing_website_finder/data/example_input_website_finder.csv` (which was gathered from [a very old SEC website](https://www.sec.gov/rules/other/4-460list.htm)) for a practical example.<br><br><br>#### Permenantly store a Bing Search API Key in `config.py`:<br>Locate the `bing_website_finder/config.py` file &amp; modify this line:<br>```py<br>DEFAULT_SEARCH_API_V7_KEY = 'CHANGE ME'<br>```<br><br>#### Python usage:<br>You can find the primary interface inside of `bing_website_finder/get_websites.py`.  <br>It's called `init()`. Here is it's declaration as of v0.0.1:<br>```py<br>def init(infilepth, outfilepth, verbose=False, api_key=None, num_workers=5):<br>    assert os.path.exists(infilepth), \"Please check the infile path you've specified.\"<br>    cache = pd.read_csv(infilepth)<br>    workers = (Worker(cache, api_key) for i in range(num_workers))<br>    loop = asyncio.get_event_loop()<br>    try:<br>        loop.run_until_complete(_execute(workers, verbose, loop=loop))<br>    finally:<br>        cache.to_csv(outfilepth, index=False)<br>```<br>If you do not specify an `api_key` argument, the `DEFAULT_SEARCH_API_V7_KEY` variable in `bing_website_finder/config.py` will be used.<br><br>**IMPORTANT NOTE: THE PROGRAM WILL FAIL SILENTLY IF YOU LEAVE `api_key=None` &amp; DO NOT MODIFY : `DEFAULT_SEARCH_API_V7_KEY` INSIDE OF `config.py`**<br><br>#### cmdline usage:<br>Insallation via pip automatically creates an executable and places it in your $PYTHONPATH. <br><br>If `/YOUR/PYTHON/ENV/bin`* is in your `$PATH`**, simply type:<br>```sh<br>$ bwf --help<br>```<br>or<br>```sh<br>$ bing_website_finder --help<br>```  <br>if neither of these^ work after installation, you can always use:  <br><br>```sh<br>$ python -m bwf --help<br>```<br>or<br>```sh<br>$ python -m bing_website_finder --help<br>```<br>\\* - (`/YOUR/PYTHON/ENV/Scripts` on Windows)  <br>\\** - (`%PATH%` on Windows)<br><br><br><br>\n          </div>"}, "last_serial": 4812624, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1b0090a09f13ef94c81d0ec331e5338b", "sha256": "f683b2d32c7c42206854700ef66304f5209812398ca0e2ab2c31dbbc9ae4650a"}, "downloads": -1, "filename": "bwf-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1b0090a09f13ef94c81d0ec331e5338b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 32043, "upload_time": "2019-02-12T20:20:14", "upload_time_iso_8601": "2019-02-12T20:20:14.221244Z", "url": "https://files.pythonhosted.org/packages/fd/d7/e5eabcb7fa79db8c9517da616eacc66507fbe108a80a643e1464d70b6eae/bwf-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa2482c15fe641a9ba3ec0e915c73f31", "sha256": "b726b2b2a981ea621a54e50cc4242f936cb5af4043abebfda577d77f7d486f5d"}, "downloads": -1, "filename": "bwf-0.0.1.tar.gz", "has_sig": false, "md5_digest": "aa2482c15fe641a9ba3ec0e915c73f31", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 30827, "upload_time": "2019-02-12T20:20:16", "upload_time_iso_8601": "2019-02-12T20:20:16.488498Z", "url": "https://files.pythonhosted.org/packages/af/93/d6252b1bb160bbbe8e43602fb0d7f16acceac5329f231602d3beaa1ebd3c/bwf-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1b0090a09f13ef94c81d0ec331e5338b", "sha256": "f683b2d32c7c42206854700ef66304f5209812398ca0e2ab2c31dbbc9ae4650a"}, "downloads": -1, "filename": "bwf-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1b0090a09f13ef94c81d0ec331e5338b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 32043, "upload_time": "2019-02-12T20:20:14", "upload_time_iso_8601": "2019-02-12T20:20:14.221244Z", "url": "https://files.pythonhosted.org/packages/fd/d7/e5eabcb7fa79db8c9517da616eacc66507fbe108a80a643e1464d70b6eae/bwf-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa2482c15fe641a9ba3ec0e915c73f31", "sha256": "b726b2b2a981ea621a54e50cc4242f936cb5af4043abebfda577d77f7d486f5d"}, "downloads": -1, "filename": "bwf-0.0.1.tar.gz", "has_sig": false, "md5_digest": "aa2482c15fe641a9ba3ec0e915c73f31", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 30827, "upload_time": "2019-02-12T20:20:16", "upload_time_iso_8601": "2019-02-12T20:20:16.488498Z", "url": "https://files.pythonhosted.org/packages/af/93/d6252b1bb160bbbe8e43602fb0d7f16acceac5329f231602d3beaa1ebd3c/bwf-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:53 2020"}