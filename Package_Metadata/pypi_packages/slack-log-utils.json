{"info": {"author": "KeltonKarboviak", "author_email": "kelton.karboviak@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: System :: Logging"], "description": "# slack_log_utils\n\n[![PyPI](https://img.shields.io/pypi/v/slack_log_utils.svg)](https://pypi.org/project/slack-log-utils/)\n[![PyPI](https://img.shields.io/pypi/l/slack_log_utils.svg)](https://pypi.org/project/slack-log-utils/)\n[![PyPI](https://img.shields.io/pypi/pyversions/slack_log_utils.svg)](https://pypi.org/project/slack-log-utils/)\n[![Build Status](https://img.shields.io/travis/KeltonKarboviak/slack_log_utils.svg?logo=travis)](https://travis-ci.org/KeltonKarboviak/slack_log_utils)\n[![Say Thanks!](https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg)](https://saythanks.io/to/KeltonKarboviak)\n\nA Python logging handler & formatter for Slack integration.\n\n### How To Install\nTo install slack-log-utils, simply:\n\n```bash\npip install slack-log-utils\n```\n\nor using [pipenv](https://docs.pipenv.org/):\n\n```bash\npipenv install slack-log-utils\n```\n\n\n### Getting Started\nGet an Incoming Webhook URL on [Slack](https://my.slack.com/services/new/incoming-webhook/).\n\nInstantiate manually:\n```python\nimport logging\nfrom slack_log_utils import SlackWebhookFormatter, SlackWebhookHandler\n\nformatter = SlackWebhookFormatter()\nhandler = SlackWebhookHandler('https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX')\nhandler.setFormatter(formatter)\nhandler.setLevel(logging.WARNING)\n\nlogger = logging.getLogger('sample_log')\nlogger.addHandler(handler)\n```\n\nInstantiate using the `logging.config.dictConfig` method:\n```python\nimport logging.config\nfrom slack_log_utils import SlackWebhookFormatter, SlackWebhookHandler\n\nlogging_config = {\n    'version': 1,\n    'formatters': {\n        'slack': {\n            '()': SlackWebhookFormatter,\n        },\n    },\n    'handlers': {\n        'slack': {\n            '()': SlackWebhookHandler,\n            'formatter': 'slack',\n            'level': logging.WARNING,\n            'url': 'https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX',\n        },\n    },\n    'loggers': {\n        'sample_log': {\n            'level': logging.DEBUG,\n            'handlers': ['slack'],        \n        },\n    },\n}\n\nlogging.config.dictConfig(logging_config)\nlogger = logging.getLogger('sample_log')\n```\n\nRead more about logging configuration in the [Python docs](https://docs.python.org/3/library/logging.config.html).\n\nYou can then use it just like any logger:\n```python\nlogger.info('This will NOT post to Slack')  # Since handler's level is set to WARNING\nlogger.error('This will post to Slack')\n\nlogger.error('[%s]: There are %s errors!', 'CRITICAL', 8)\n```\n\nBelow is the logic contained within `SlackWebhookFormatter` on how a logging.LogRecord is formatted: \n```python\nimport json \n\nformatted_msg = super(SlackWebhookFormatter, self).format(record)\n\ncolor = '#36a64f' \\ \n    if record.levelno < logging.WARNING \\\n    else '#ff0000'\n\nattachment = {\n    'author_name': record.name,\n    'title': getattr(record, 'title', ''),\n    'text': formatted_msg,\n    'fallback': formatted_msg,\n    'color': color,\n}\n\nreturn json.dumps({\n    'attachments': [attachment]\n})\n```\n\nFirst, it uses the `logging.Formatter`'s base `format()` method in order to get the %-style format string.\nThen, the color is decided based on the record's level.  If it's less than `logging.WARNING`, it will be Green, else Red.\nThe `author_name` is set from `record.name` which is the name of the logger used to log the call ('sample_log' in this case).\nThe `title` is optionally set by using the key in the `extra` dict argument for the call to the logger:\n\n```python\nlogger.error('Sample Message Attachment!', extra={'title': 'Sample Title'})\n```\n\nAn example of what this will look like can be seen in the [Slack Message Builder](https://api.slack.com/docs/messages/builder?msg=%7B%22attachments%22%3A%5B%7B%22author_name%22%3A%22sample_log%22%2C%22title%22%3A%22Sample%20Title%22%2C%22text%22%3A%22Sample%20Message%20Attachment!%22%2C%22fallback%22%3A%22Sample%20Message%20Attachment!%22%2C%22color%22%3A%22%23ff0000%22%7D%5D%7D).\n\nPlease see the [Python LogRecord docs](https://docs.python.org/3/library/logging.html#logrecord-attributes) for the exact meaning of `record.levelno`, `record.name`, and other attrtibutes.\n\nFor further details on formatting messages, refer to the following Slack API pages:\n* [Message Formatting](https://api.slack.com/docs/message-formatting)\n* [Attachments](https://api.slack.com/docs/message-attachments)\n\nCurrently, all log messages will be sent as an attachment to Slack and it is only possible to send a single attachment at a time.\nFuture releases may make this more configurable.\n\n\n# Release Notes\n\n## 0.1.5 (2018-05-19)\n* Modified .travis.yml\n    * Added skip_existing flag to deployments. This will stop parallel builds from failing (see [here](https://stackoverflow.com/questions/46387129/preventing-conflicts-when-deploying-multiple-distros-to-pypi-using-travis-ci)).\n    * Made it so all branches will be built, but keeping that only tagged commits on master branch will be deployed to PyPI.\n* Updated README with badges from shields.io.\n\n## 0.1.4 (2018-05-19)\n* Modified .travis.yml to fix issue with Travis-CI skipping deployment although the commit was tagged (see [here](https://stackoverflow.com/questions/30156581/travis-ci-skipping-deployment-although-commit-is-tagged#31282158)).\n\n## 0.1.3 (2018-05-19)\n* Small code style change in slack_webhook_formatter.py.\n\n## 0.1.2 (2018-05-19)\n* Added .travis.yml file for Travis-CI builds.\n\n## 0.1.1 (2018-05-19)\n* Bumped version for README changes to show on PyPI.\n\n## 0.1.0 (2018-05-19)\n* First release on PyPI.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ngafid/slack-log-utils", "keywords": "logging slack slack-webhook", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "slack-log-utils", "package_url": "https://pypi.org/project/slack-log-utils/", "platform": "", "project_url": "https://pypi.org/project/slack-log-utils/", "project_urls": {"Homepage": "https://github.com/ngafid/slack-log-utils", "Say Thanks!": "https://saythanks.io/to/KeltonKarboviak"}, "release_url": "https://pypi.org/project/slack-log-utils/0.1.5/", "requires_dist": ["requests (>=2.18.0)", "nose; extra == 'test'"], "requires_python": "", "summary": "A Python logging handler for Slack integration", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>slack_log_utils</h1>\n<p><a href=\"https://pypi.org/project/slack-log-utils/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6fa2b7e8f71a3e27c2400bed1886a61ea3fb487a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f736c61636b5f6c6f675f7574696c732e737667\"></a>\n<a href=\"https://pypi.org/project/slack-log-utils/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd0a23c42db04dcace8be2980af89974df957e40/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f736c61636b5f6c6f675f7574696c732e737667\"></a>\n<a href=\"https://pypi.org/project/slack-log-utils/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8eac706c5e9c127d4dc98d849ad7323d0c1d7b80/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f736c61636b5f6c6f675f7574696c732e737667\"></a>\n<a href=\"https://travis-ci.org/KeltonKarboviak/slack_log_utils\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9e96f2aaafe41139af772c503af9d01d1621fef/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f4b656c746f6e4b6172626f7669616b2f736c61636b5f6c6f675f7574696c732e7376673f6c6f676f3d747261766973\"></a>\n<a href=\"https://saythanks.io/to/KeltonKarboviak\" rel=\"nofollow\"><img alt=\"Say Thanks!\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51b7f145f134a99621f186ddcdb0af646a24c8aa/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5361792532305468616e6b732d212d3145414544422e737667\"></a></p>\n<p>A Python logging handler &amp; formatter for Slack integration.</p>\n<h3>How To Install</h3>\n<p>To install slack-log-utils, simply:</p>\n<pre>pip install slack-log-utils\n</pre>\n<p>or using <a href=\"https://docs.pipenv.org/\" rel=\"nofollow\">pipenv</a>:</p>\n<pre>pipenv install slack-log-utils\n</pre>\n<h3>Getting Started</h3>\n<p>Get an Incoming Webhook URL on <a href=\"https://my.slack.com/services/new/incoming-webhook/\" rel=\"nofollow\">Slack</a>.</p>\n<p>Instantiate manually:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">slack_log_utils</span> <span class=\"kn\">import</span> <span class=\"n\">SlackWebhookFormatter</span><span class=\"p\">,</span> <span class=\"n\">SlackWebhookHandler</span>\n\n<span class=\"n\">formatter</span> <span class=\"o\">=</span> <span class=\"n\">SlackWebhookFormatter</span><span class=\"p\">()</span>\n<span class=\"n\">handler</span> <span class=\"o\">=</span> <span class=\"n\">SlackWebhookHandler</span><span class=\"p\">(</span><span class=\"s1\">'https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX'</span><span class=\"p\">)</span>\n<span class=\"n\">handler</span><span class=\"o\">.</span><span class=\"n\">setFormatter</span><span class=\"p\">(</span><span class=\"n\">formatter</span><span class=\"p\">)</span>\n<span class=\"n\">handler</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">WARNING</span><span class=\"p\">)</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'sample_log'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">addHandler</span><span class=\"p\">(</span><span class=\"n\">handler</span><span class=\"p\">)</span>\n</pre>\n<p>Instantiate using the <code>logging.config.dictConfig</code> method:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging.config</span>\n<span class=\"kn\">from</span> <span class=\"nn\">slack_log_utils</span> <span class=\"kn\">import</span> <span class=\"n\">SlackWebhookFormatter</span><span class=\"p\">,</span> <span class=\"n\">SlackWebhookHandler</span>\n\n<span class=\"n\">logging_config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'version'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">'formatters'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'slack'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'()'</span><span class=\"p\">:</span> <span class=\"n\">SlackWebhookFormatter</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'slack'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'()'</span><span class=\"p\">:</span> <span class=\"n\">SlackWebhookHandler</span><span class=\"p\">,</span>\n            <span class=\"s1\">'formatter'</span><span class=\"p\">:</span> <span class=\"s1\">'slack'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">WARNING</span><span class=\"p\">,</span>\n            <span class=\"s1\">'url'</span><span class=\"p\">:</span> <span class=\"s1\">'https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX'</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'loggers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'sample_log'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">,</span>\n            <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'slack'</span><span class=\"p\">],</span>        \n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">dictConfig</span><span class=\"p\">(</span><span class=\"n\">logging_config</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'sample_log'</span><span class=\"p\">)</span>\n</pre>\n<p>Read more about logging configuration in the <a href=\"https://docs.python.org/3/library/logging.config.html\" rel=\"nofollow\">Python docs</a>.</p>\n<p>You can then use it just like any logger:</p>\n<pre><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'This will NOT post to Slack'</span><span class=\"p\">)</span>  <span class=\"c1\"># Since handler's level is set to WARNING</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">'This will post to Slack'</span><span class=\"p\">)</span>\n\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">'[</span><span class=\"si\">%s</span><span class=\"s1\">]: There are </span><span class=\"si\">%s</span><span class=\"s1\"> errors!'</span><span class=\"p\">,</span> <span class=\"s1\">'CRITICAL'</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span>\n</pre>\n<p>Below is the logic contained within <code>SlackWebhookFormatter</code> on how a logging.LogRecord is formatted:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">json</span> \n\n<span class=\"n\">formatted_msg</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">SlackWebhookFormatter</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"p\">)</span>\n\n<span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"s1\">'#36a64f'</span> \\ \n    <span class=\"k\">if</span> <span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">levelno</span> <span class=\"o\">&lt;</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">WARNING</span> \\\n    <span class=\"k\">else</span> <span class=\"s1\">'#ff0000'</span>\n\n<span class=\"n\">attachment</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'author_name'</span><span class=\"p\">:</span> <span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n    <span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"p\">,</span> <span class=\"s1\">'title'</span><span class=\"p\">,</span> <span class=\"s1\">''</span><span class=\"p\">),</span>\n    <span class=\"s1\">'text'</span><span class=\"p\">:</span> <span class=\"n\">formatted_msg</span><span class=\"p\">,</span>\n    <span class=\"s1\">'fallback'</span><span class=\"p\">:</span> <span class=\"n\">formatted_msg</span><span class=\"p\">,</span>\n    <span class=\"s1\">'color'</span><span class=\"p\">:</span> <span class=\"n\">color</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">return</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">({</span>\n    <span class=\"s1\">'attachments'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">attachment</span><span class=\"p\">]</span>\n<span class=\"p\">})</span>\n</pre>\n<p>First, it uses the <code>logging.Formatter</code>'s base <code>format()</code> method in order to get the %-style format string.\nThen, the color is decided based on the record's level.  If it's less than <code>logging.WARNING</code>, it will be Green, else Red.\nThe <code>author_name</code> is set from <code>record.name</code> which is the name of the logger used to log the call ('sample_log' in this case).\nThe <code>title</code> is optionally set by using the key in the <code>extra</code> dict argument for the call to the logger:</p>\n<pre><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">'Sample Message Attachment!'</span><span class=\"p\">,</span> <span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Sample Title'</span><span class=\"p\">})</span>\n</pre>\n<p>An example of what this will look like can be seen in the <a href=\"https://api.slack.com/docs/messages/builder?msg=%7B%22attachments%22%3A%5B%7B%22author_name%22%3A%22sample_log%22%2C%22title%22%3A%22Sample%20Title%22%2C%22text%22%3A%22Sample%20Message%20Attachment!%22%2C%22fallback%22%3A%22Sample%20Message%20Attachment!%22%2C%22color%22%3A%22%23ff0000%22%7D%5D%7D\" rel=\"nofollow\">Slack Message Builder</a>.</p>\n<p>Please see the <a href=\"https://docs.python.org/3/library/logging.html#logrecord-attributes\" rel=\"nofollow\">Python LogRecord docs</a> for the exact meaning of <code>record.levelno</code>, <code>record.name</code>, and other attrtibutes.</p>\n<p>For further details on formatting messages, refer to the following Slack API pages:</p>\n<ul>\n<li><a href=\"https://api.slack.com/docs/message-formatting\" rel=\"nofollow\">Message Formatting</a></li>\n<li><a href=\"https://api.slack.com/docs/message-attachments\" rel=\"nofollow\">Attachments</a></li>\n</ul>\n<p>Currently, all log messages will be sent as an attachment to Slack and it is only possible to send a single attachment at a time.\nFuture releases may make this more configurable.</p>\n<h1>Release Notes</h1>\n<h2>0.1.5 (2018-05-19)</h2>\n<ul>\n<li>Modified .travis.yml\n<ul>\n<li>Added skip_existing flag to deployments. This will stop parallel builds from failing (see <a href=\"https://stackoverflow.com/questions/46387129/preventing-conflicts-when-deploying-multiple-distros-to-pypi-using-travis-ci\" rel=\"nofollow\">here</a>).</li>\n<li>Made it so all branches will be built, but keeping that only tagged commits on master branch will be deployed to PyPI.</li>\n</ul>\n</li>\n<li>Updated README with badges from shields.io.</li>\n</ul>\n<h2>0.1.4 (2018-05-19)</h2>\n<ul>\n<li>Modified .travis.yml to fix issue with Travis-CI skipping deployment although the commit was tagged (see <a href=\"https://stackoverflow.com/questions/30156581/travis-ci-skipping-deployment-although-commit-is-tagged#31282158\" rel=\"nofollow\">here</a>).</li>\n</ul>\n<h2>0.1.3 (2018-05-19)</h2>\n<ul>\n<li>Small code style change in slack_webhook_formatter.py.</li>\n</ul>\n<h2>0.1.2 (2018-05-19)</h2>\n<ul>\n<li>Added .travis.yml file for Travis-CI builds.</li>\n</ul>\n<h2>0.1.1 (2018-05-19)</h2>\n<ul>\n<li>Bumped version for README changes to show on PyPI.</li>\n</ul>\n<h2>0.1.0 (2018-05-19)</h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n\n          </div>"}, "last_serial": 3879850, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5f58094123b4794fabd82e293c78b3be", "sha256": "3bfb1d6996f24e695474e7a8cd9f9216a25ff28c67138e1e363e726dddfb5656"}, "downloads": -1, "filename": "slack_log_utils-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5f58094123b4794fabd82e293c78b3be", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3776, "upload_time": "2018-05-19T18:37:43", "upload_time_iso_8601": "2018-05-19T18:37:43.268413Z", "url": "https://files.pythonhosted.org/packages/d9/fb/7321c44e3ca4d53b04bc352eb91ba729b93c8a776b54c75c896d90044fa4/slack_log_utils-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ead1dd584d68306b406151f1d733472f", "sha256": "211d9809e921209ddbad6ceb481045790c7cf7d3bf9af3465a39284aae3683f6"}, "downloads": -1, "filename": "slack_log_utils-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ead1dd584d68306b406151f1d733472f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2311, "upload_time": "2018-05-19T18:37:44", "upload_time_iso_8601": "2018-05-19T18:37:44.579535Z", "url": "https://files.pythonhosted.org/packages/b3/e9/4a29cda6c2c241ed7c3d3be71f823e70de7a7f06c0a3883237380cd53257/slack_log_utils-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6f43fbce8d3a74b33cdad01ff3741476", "sha256": "c0778c4b0ffc4c89438d392a53e832a9640e4b8462b16176459b74812d36f834"}, "downloads": -1, "filename": "slack_log_utils-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6f43fbce8d3a74b33cdad01ff3741476", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5230, "upload_time": "2018-05-19T18:43:12", "upload_time_iso_8601": "2018-05-19T18:43:12.400385Z", "url": "https://files.pythonhosted.org/packages/86/7a/cacc9ccbc0da2d6438ae74eacc1dde1e71dc31ad0858bff73a95478d005e/slack_log_utils-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e76851074b0f7dd3f5700e6763d75f9c", "sha256": "db88a16807248b724258a2d0989327e65f598404af26e1553437f03eb137a6ed"}, "downloads": -1, "filename": "slack_log_utils-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e76851074b0f7dd3f5700e6763d75f9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3970, "upload_time": "2018-05-19T18:43:13", "upload_time_iso_8601": "2018-05-19T18:43:13.548977Z", "url": "https://files.pythonhosted.org/packages/da/7d/8cadb36373d2e31097efc124107a7004558c37cc9e2e23aa07c7a794e2de/slack_log_utils-0.1.1.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "20af07db198aed87a855377ce752abaa", "sha256": "cb0c55859d7c7344e0c55f9bac818285cee9cbb2f08d7ee006cdd0c5d40504a1"}, "downloads": -1, "filename": "slack_log_utils-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "20af07db198aed87a855377ce752abaa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5440, "upload_time": "2018-05-19T20:41:51", "upload_time_iso_8601": "2018-05-19T20:41:51.566192Z", "url": "https://files.pythonhosted.org/packages/2c/3a/b73fb526e6745f05e0cd7e89181250b34502e528db9e3351858faeb45576/slack_log_utils-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ba8429f740776923e4db2d9d3e993bf", "sha256": "69d9d8c1de9450f1da6cc95ddbb26ad324113fc89d8778e290c1a53cd7e3496c"}, "downloads": -1, "filename": "slack_log_utils-0.1.4.tar.gz", "has_sig": false, "md5_digest": "2ba8429f740776923e4db2d9d3e993bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4185, "upload_time": "2018-05-19T20:41:52", "upload_time_iso_8601": "2018-05-19T20:41:52.574220Z", "url": "https://files.pythonhosted.org/packages/ec/b5/2869783d248c0aad476e8de761f5c74a866c9a9be485df2e7018d41cd847/slack_log_utils-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "18dbeb33d43c7200fb6b9b9301d706c3", "sha256": "af8484dc75d2db4183c0e1e58119f725443761958a1c20ac39484d88c3aa83db"}, "downloads": -1, "filename": "slack_log_utils-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "18dbeb33d43c7200fb6b9b9301d706c3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5740, "upload_time": "2018-05-19T21:06:31", "upload_time_iso_8601": "2018-05-19T21:06:31.836908Z", "url": "https://files.pythonhosted.org/packages/8d/40/577fb38069e01a6c05ff23fb166fedb2b4b3e2461b0ed8e140ea64e01871/slack_log_utils-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b24ed1d92effbd3f55591109c5a599c", "sha256": "dc003b49dde57ce1da09174cd55f9065769e1e368664e5f830404e139053195f"}, "downloads": -1, "filename": "slack_log_utils-0.1.5.tar.gz", "has_sig": false, "md5_digest": "2b24ed1d92effbd3f55591109c5a599c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4503, "upload_time": "2018-05-19T21:06:32", "upload_time_iso_8601": "2018-05-19T21:06:32.910532Z", "url": "https://files.pythonhosted.org/packages/c8/7d/24c49112b671bcf2235402314043983f495686cd8aa73172147cee5b536b/slack_log_utils-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "18dbeb33d43c7200fb6b9b9301d706c3", "sha256": "af8484dc75d2db4183c0e1e58119f725443761958a1c20ac39484d88c3aa83db"}, "downloads": -1, "filename": "slack_log_utils-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "18dbeb33d43c7200fb6b9b9301d706c3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5740, "upload_time": "2018-05-19T21:06:31", "upload_time_iso_8601": "2018-05-19T21:06:31.836908Z", "url": "https://files.pythonhosted.org/packages/8d/40/577fb38069e01a6c05ff23fb166fedb2b4b3e2461b0ed8e140ea64e01871/slack_log_utils-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b24ed1d92effbd3f55591109c5a599c", "sha256": "dc003b49dde57ce1da09174cd55f9065769e1e368664e5f830404e139053195f"}, "downloads": -1, "filename": "slack_log_utils-0.1.5.tar.gz", "has_sig": false, "md5_digest": "2b24ed1d92effbd3f55591109c5a599c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4503, "upload_time": "2018-05-19T21:06:32", "upload_time_iso_8601": "2018-05-19T21:06:32.910532Z", "url": "https://files.pythonhosted.org/packages/c8/7d/24c49112b671bcf2235402314043983f495686cd8aa73172147cee5b536b/slack_log_utils-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:40 2020"}