{"info": {"author": "Christian Bierschneider", "author_email": "christian.bierschneider@web.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: PyPy"], "description": "## CredentialDatabase\n[![Build Status](https://travis-ci.org/bierschi/CredentialDatabase.png?branch=master)](https://travis-ci.org/bierschi/CredentialDatabase) [![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://opensource.org/licenses/MIT)\n\nCreate a massive credential database with collections like **BreachCompilation** or with credentials\nfrom password files\n\n**Features** of CredentialDatabase:\n- develop awesome brute-force/credstuffer attacks which are based on CredentialDatabase\n- build up a huge hash table for SHA1, SHA256, SHA512 and md5 hashes\n- create a REST API interface similar to the [ghostproject](https://ghostproject.fr/)\n- create a massive password database\n- multithreaded database scripts\n\n**BreachCompilation** includes billion clear text credentials discovered in a single database\n(file size: ~42GB) <br>\n\n\n## Content \n\n- [Installation](https://github.com/bierschi/CredentialDatabase#installation)\n- [Usage and Examples](https://github.com/bierschi/CredentialDatabase#usage-and-examples)\n- [Postgresql Database Settings](https://github.com/bierschi/CredentialDatabase#postgresql-database-settings)\n- [Logs](https://github.com/bierschi/CredentialDatabase#logs)\n- [Troubleshooting](https://github.com/bierschi/CredentialDatabase#troubleshooting)\n- [Changelog](https://github.com/bierschi/CredentialDatabase#changelog)\n- [License](https://github.com/bierschi/CredentialDatabase#license)\n\n<br>\n\n## Installation\ninstallation with pip \n<pre><code>\npip3 install CredentialDatabase\n</code></pre>\n\nor from source\n<pre><code>\nsudo python3 setup.py install\n</code></pre>\n\nor create a wheel for installing the package with pip\n<pre><code>\nsudo python3 setup.py bdist_wheel\n</code></pre>\n\ninstall the package with pip\n<pre><code>\npip3 install CredentialDatabase-1.0.0-py3-none-any.whl\n</code></pre>\n\nuninstall the package with pip \n<pre><code>\npip3 uninstall CredentialDatabase\n</code></pre>\n\n### Usage and Examples\n\n#### BreachCompilationDatabase.py\n\nexecute the console script `BreachCompilationDatabase`\n<pre><code>\nBreachCompilationDatabase --host 192.168.1.2 --port 5432 --user john --password test1234 --dbname breachcompilation --breachpath /path/to/BreachCompilation\n</code></pre>\n\ninsert subsequent command to run the script completely in background\n<pre><code>\nnohup BreachCompilationDatabase --host 192.168.1.2 --port 5432 --user john --password test1234 --dbname breachcompilation --breachpath /path/to/BreachCompilation &>/dev/null &\n</code></pre>\nor use a tool like [screen](https://wiki.ubuntuusers.de/Screen/)\n\n#### Database structure\n\n**schemas**: 0-9, a-z, symbols (first character from email) <br>\n**tables**:  0-9, a-z, symbols (second character from email)\n\n<pre><code>\nid | email | password | username | provider | sh1 | sh256 | sh512 | md5 \n</code></pre>\n\n- script runtime about 8 days\n- needs disk space for about 569 GB \n\n#### PasswordDatabase.py \n\nexecute the console script `PasswordDatabase` with `--breachpath`\n<pre><code>\nPasswordDatabase --host 192.168.1.2 --port 5432 --user john --password test1234 --dbname passwords --breachpath /path/to/BreachCompilation\n</code></pre>\nor with `--filepath`\n<pre><code>\nPasswordDatabase --host 192.168.1.2 --port 5432 --user john --password test1234 --dbname passwords --filepath /path/to/CredentialFile --proc 10\n</code></pre>\n\ninsert subsequent command to run the script completely in background\n<pre><code>\nnohup PasswordDatabase --host 192.168.1.2 --port 5432 --user john --password test1234 --dbname breachcompilation --breachpath /path/to/BreachCompilation &>/dev/null &\n</code></pre>\nor use a tool like [screen](https://wiki.ubuntuusers.de/Screen/)\n\n#### Database structure\n\n**schemas**: 0-9, a-z, symbols (first character from password) <br>\n**tables**:  0-9, a-z, symbols (second character from password)\n\n<pre><code>\npassword | length | isnumber | issymbol | ts\n</code></pre>\n\n\n## Postgresql Database Settings\n\ninstall PostgreSQL dependencies via apt\n\n<pre><code>\nsudo apt-get install postgresql libpq-dev postgresql-client postgresql-client-common\n</code></pre>\n\nFollow this [tutorial](https://www.digitalocean.com/community/tutorials/how-to-install-and-use-postgresql-on-ubuntu-18-04) to set up a \npostgresql environment. For graphical visualization install [pgAdmin4](https://www.pgadmin.org/download/).\n<br>\n\n### Postgresql Advanced\n\ncreate an index only scan for columns `email` and `password`\n<pre><code>\nCREATE index idx_pass_email on \"a\".\"d\"(email, password);\n</code></pre>\n\nvacuum the table, so that the visibility map to be up-to-date\n<pre><code>\nVACUUM \"a\".\"d\";\n</code></pre>\n\nDelete a table completely with\n<pre><code>\ndrop table \"a\".\"d\" cascade\n</code></pre>\n\n\nSettings for tuning your postgresql server are [here](http://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server)\n\n## Logs\n\nlogs can be found in `/var/log/CredentialDatabase`\n\n## Troubleshooting\nadd your current user to group `syslog`, this allows the application/scripts to create a folder in\n`/var/log`. Replace `<user>` with your current user\n<pre><code>\nsudo adduser &lt;user&gt; syslog\n</code></pre>\nto apply this change, log out and log in again and check with the terminal command `groups`\n\n## Changelog\nAll changes and versioning information can be found in the [CHANGELOG](https://github.com/bierschi/CredentialDatabase/blob/master/CHANGELOG.rst)\n\n## License\nCopyright (c) 2019 Bierschneider Christian. See [LICENSE](https://github.com/bierschi/CredentialDatabase/blob/master/LICENSE)\nfor details\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bierschi/CredentialDatabase", "keywords": "PasswordDatabase,BreachCompilation,credentials,leaked,database,CredentialDatabase", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "CredentialDatabase", "package_url": "https://pypi.org/project/CredentialDatabase/", "platform": "", "project_url": "https://pypi.org/project/CredentialDatabase/", "project_urls": {"Homepage": "https://github.com/bierschi/CredentialDatabase"}, "release_url": "https://pypi.org/project/CredentialDatabase/1.0.2/", "requires_dist": ["flask (>=1.1.1)", "psycopg2 (>=2.8.3)"], "requires_python": ">=3", "summary": "creates a massive credential database", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>CredentialDatabase</h2>\n<p><a href=\"https://travis-ci.org/bierschi/CredentialDatabase\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a210b5786907bbd26375919e70dc537c8382348/68747470733a2f2f7472617669732d63692e6f72672f62696572736368692f43726564656e7469616c44617461626173652e706e673f6272616e63683d6d6173746572\"></a> <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5aab1d039acf22567ba072834df6bce204ac48ad/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d677265656e2e737667\"></a></p>\n<p>Create a massive credential database with collections like <strong>BreachCompilation</strong> or with credentials\nfrom password files</p>\n<p><strong>Features</strong> of CredentialDatabase:</p>\n<ul>\n<li>develop awesome brute-force/credstuffer attacks which are based on CredentialDatabase</li>\n<li>build up a huge hash table for SHA1, SHA256, SHA512 and md5 hashes</li>\n<li>create a REST API interface similar to the <a href=\"https://ghostproject.fr/\" rel=\"nofollow\">ghostproject</a></li>\n<li>create a massive password database</li>\n<li>multithreaded database scripts</li>\n</ul>\n<p><strong>BreachCompilation</strong> includes billion clear text credentials discovered in a single database\n(file size: ~42GB) <br></p>\n<h2>Content</h2>\n<ul>\n<li><a href=\"https://github.com/bierschi/CredentialDatabase#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"https://github.com/bierschi/CredentialDatabase#usage-and-examples\" rel=\"nofollow\">Usage and Examples</a></li>\n<li><a href=\"https://github.com/bierschi/CredentialDatabase#postgresql-database-settings\" rel=\"nofollow\">Postgresql Database Settings</a></li>\n<li><a href=\"https://github.com/bierschi/CredentialDatabase#logs\" rel=\"nofollow\">Logs</a></li>\n<li><a href=\"https://github.com/bierschi/CredentialDatabase#troubleshooting\" rel=\"nofollow\">Troubleshooting</a></li>\n<li><a href=\"https://github.com/bierschi/CredentialDatabase#changelog\" rel=\"nofollow\">Changelog</a></li>\n<li><a href=\"https://github.com/bierschi/CredentialDatabase#license\" rel=\"nofollow\">License</a></li>\n</ul>\n<br>\n<h2>Installation</h2>\n<p>installation with pip</p>\n<pre><code>\npip3 install CredentialDatabase\n</code></pre>\n<p>or from source</p>\n<pre><code>\nsudo python3 setup.py install\n</code></pre>\n<p>or create a wheel for installing the package with pip</p>\n<pre><code>\nsudo python3 setup.py bdist_wheel\n</code></pre>\n<p>install the package with pip</p>\n<pre><code>\npip3 install CredentialDatabase-1.0.0-py3-none-any.whl\n</code></pre>\n<p>uninstall the package with pip</p>\n<pre><code>\npip3 uninstall CredentialDatabase\n</code></pre>\n<h3>Usage and Examples</h3>\n<h4>BreachCompilationDatabase.py</h4>\n<p>execute the console script <code>BreachCompilationDatabase</code></p>\n<pre><code>\nBreachCompilationDatabase --host 192.168.1.2 --port 5432 --user john --password test1234 --dbname breachcompilation --breachpath /path/to/BreachCompilation\n</code></pre>\n<p>insert subsequent command to run the script completely in background</p>\n<pre><code>\nnohup BreachCompilationDatabase --host 192.168.1.2 --port 5432 --user john --password test1234 --dbname breachcompilation --breachpath /path/to/BreachCompilation &amp;&gt;/dev/null &amp;\n</code></pre>\n<p>or use a tool like <a href=\"https://wiki.ubuntuusers.de/Screen/\" rel=\"nofollow\">screen</a></p>\n<h4>Database structure</h4>\n<p><strong>schemas</strong>: 0-9, a-z, symbols (first character from email) <br>\n<strong>tables</strong>:  0-9, a-z, symbols (second character from email)</p>\n<pre><code>\nid | email | password | username | provider | sh1 | sh256 | sh512 | md5 \n</code></pre>\n<ul>\n<li>script runtime about 8 days</li>\n<li>needs disk space for about 569 GB</li>\n</ul>\n<h4>PasswordDatabase.py</h4>\n<p>execute the console script <code>PasswordDatabase</code> with <code>--breachpath</code></p>\n<pre><code>\nPasswordDatabase --host 192.168.1.2 --port 5432 --user john --password test1234 --dbname passwords --breachpath /path/to/BreachCompilation\n</code></pre>\n<p>or with <code>--filepath</code></p>\n<pre><code>\nPasswordDatabase --host 192.168.1.2 --port 5432 --user john --password test1234 --dbname passwords --filepath /path/to/CredentialFile --proc 10\n</code></pre>\n<p>insert subsequent command to run the script completely in background</p>\n<pre><code>\nnohup PasswordDatabase --host 192.168.1.2 --port 5432 --user john --password test1234 --dbname breachcompilation --breachpath /path/to/BreachCompilation &amp;&gt;/dev/null &amp;\n</code></pre>\n<p>or use a tool like <a href=\"https://wiki.ubuntuusers.de/Screen/\" rel=\"nofollow\">screen</a></p>\n<h4>Database structure</h4>\n<p><strong>schemas</strong>: 0-9, a-z, symbols (first character from password) <br>\n<strong>tables</strong>:  0-9, a-z, symbols (second character from password)</p>\n<pre><code>\npassword | length | isnumber | issymbol | ts\n</code></pre>\n<h2>Postgresql Database Settings</h2>\n<p>install PostgreSQL dependencies via apt</p>\n<pre><code>\nsudo apt-get install postgresql libpq-dev postgresql-client postgresql-client-common\n</code></pre>\n<p>Follow this <a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-and-use-postgresql-on-ubuntu-18-04\" rel=\"nofollow\">tutorial</a> to set up a\npostgresql environment. For graphical visualization install <a href=\"https://www.pgadmin.org/download/\" rel=\"nofollow\">pgAdmin4</a>.\n<br></p>\n<h3>Postgresql Advanced</h3>\n<p>create an index only scan for columns <code>email</code> and <code>password</code></p>\n<pre><code>\nCREATE index idx_pass_email on \"a\".\"d\"(email, password);\n</code></pre>\n<p>vacuum the table, so that the visibility map to be up-to-date</p>\n<pre><code>\nVACUUM \"a\".\"d\";\n</code></pre>\n<p>Delete a table completely with</p>\n<pre><code>\ndrop table \"a\".\"d\" cascade\n</code></pre>\n<p>Settings for tuning your postgresql server are <a href=\"http://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server\" rel=\"nofollow\">here</a></p>\n<h2>Logs</h2>\n<p>logs can be found in <code>/var/log/CredentialDatabase</code></p>\n<h2>Troubleshooting</h2>\n<p>add your current user to group <code>syslog</code>, this allows the application/scripts to create a folder in\n<code>/var/log</code>. Replace <code>&lt;user&gt;</code> with your current user</p>\n<pre><code>\nsudo adduser &lt;user&gt; syslog\n</code></pre>\n<p>to apply this change, log out and log in again and check with the terminal command <code>groups</code></p>\n<h2>Changelog</h2>\n<p>All changes and versioning information can be found in the <a href=\"https://github.com/bierschi/CredentialDatabase/blob/master/CHANGELOG.rst\" rel=\"nofollow\">CHANGELOG</a></p>\n<h2>License</h2>\n<p>Copyright (c) 2019 Bierschneider Christian. See <a href=\"https://github.com/bierschi/CredentialDatabase/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a>\nfor details</p>\n\n          </div>"}, "last_serial": 6359402, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "a5383fabb8723b520e25bb0396eda0ce", "sha256": "e995b079ca54f6de789cbe667917d25bb6871bfa88135b5f484e24adb9154dbf"}, "downloads": -1, "filename": "CredentialDatabase-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a5383fabb8723b520e25bb0396eda0ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 32610, "upload_time": "2019-12-25T19:19:14", "upload_time_iso_8601": "2019-12-25T19:19:14.776005Z", "url": "https://files.pythonhosted.org/packages/77/19/f505d458c8e5beb0be8f1eeec6d979a82e1865d4229e6f38eec1d4fcae67/CredentialDatabase-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2e9d0142b1a29703de4e8a028992781", "sha256": "3cf6e7b9cfdcb5369ae8a21e03bf08532771769007a80a1f107f994c62670eb3"}, "downloads": -1, "filename": "CredentialDatabase-1.0.2.tar.gz", "has_sig": false, "md5_digest": "d2e9d0142b1a29703de4e8a028992781", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 22441, "upload_time": "2019-12-25T19:19:17", "upload_time_iso_8601": "2019-12-25T19:19:17.369718Z", "url": "https://files.pythonhosted.org/packages/09/c1/c9434d0a120bf53c07669bfddc072967b97e5a2334176fe02f08dcb5d14e/CredentialDatabase-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a5383fabb8723b520e25bb0396eda0ce", "sha256": "e995b079ca54f6de789cbe667917d25bb6871bfa88135b5f484e24adb9154dbf"}, "downloads": -1, "filename": "CredentialDatabase-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a5383fabb8723b520e25bb0396eda0ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 32610, "upload_time": "2019-12-25T19:19:14", "upload_time_iso_8601": "2019-12-25T19:19:14.776005Z", "url": "https://files.pythonhosted.org/packages/77/19/f505d458c8e5beb0be8f1eeec6d979a82e1865d4229e6f38eec1d4fcae67/CredentialDatabase-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2e9d0142b1a29703de4e8a028992781", "sha256": "3cf6e7b9cfdcb5369ae8a21e03bf08532771769007a80a1f107f994c62670eb3"}, "downloads": -1, "filename": "CredentialDatabase-1.0.2.tar.gz", "has_sig": false, "md5_digest": "d2e9d0142b1a29703de4e8a028992781", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 22441, "upload_time": "2019-12-25T19:19:17", "upload_time_iso_8601": "2019-12-25T19:19:17.369718Z", "url": "https://files.pythonhosted.org/packages/09/c1/c9434d0a120bf53c07669bfddc072967b97e5a2334176fe02f08dcb5d14e/CredentialDatabase-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:22 2020"}