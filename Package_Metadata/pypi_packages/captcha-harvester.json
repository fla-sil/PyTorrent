{"info": {"author": "Noah Cardoza", "author_email": "noahcardoza@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Environment :: MacOS X", "Environment :: Plugins", "Environment :: Web Environment", "Environment :: Win32 (MS Windows)", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: MacOS :: MacOS 9", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft", "Operating System :: Microsoft :: Windows", "Operating System :: Microsoft :: Windows :: Windows 10", "Operating System :: OS Independent", "Operating System :: POSIX", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: Implementation", "Topic :: Internet", "Topic :: Internet :: Proxy Servers", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Browsers", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: CGI Tools/Libraries", "Topic :: Internet :: WWW/HTTP :: HTTP Servers", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities", "Typing :: Typed"], "description": "# CaptchaHarvester\n\n> Solve captchas yourself without having to pay for services like 2captcha for use in automated projects.\n\n## note\n\nAt the moment this project can be used for Google's V2 ReCaptchas and hCaptchas.\n\n## setup\n\n```bash\npip install captcha-harvester\n```\n\n## > harvester\n\nThis will setup an HTTP server at `http://127.0.0.1:5000` by default. This server is also\nconfigured to proxy requests on whichever `DOMAIN` you pass it.\n\nIf you are running MacOS/Windows and have the [Brave Browser](https://brave.com/)\nor [Google Chrome](https://www.google.com/chrome/), all you have to do is pass\nthe `-b/--browser` flag set to either `chrome` or `brave`. This will automatically open\na new instance of Brave/Chrome under a temporary profile with the proxy settings already\nconfigured and loaded at the DOMAIN that was passed to the script. If you want to use\nyour main profile, you'll need to pass the `-r/--restart-browser` flag. To reconfigue\nthe proxy settings the browser will need to be restarted if it is already running.\n\nIf you aren't running MacOS/Windows then you'll need to install a proxy extension like\n[Proxy Switcher and Manager](https://chrome.google.com/webstore/detail/proxy-switcher-and-manage/onnfghpihccifgojkpnnncpagjcdbjod?hl=en)\nthat supports **PAC Scripts**. Use a script like:\n\n```js\nfunction FindProxyForURL(url, host) {\n  if (host == 'DOMAIN')\n    return 'PROXY HOST:PORT';\n  return 'DIRECT';\n}\n```\n\nThis will make sure that all traffic sent to `DOMAIN` will be proxied by our server and it\nwill return one of the template files rather than actually contact the `DOMAIN` server.\n\n> If you would like to come up with an automated solution for your OS, I am open to PR requests.\n\n```text\n> harvester -h\nusage: harvester [-h] -k SITE_KEY -d DOMAIN [-H HOST] [-p PORT]\n                 [-b {chrome,brave}] [-r]\n                 {recaptcha,hcaptcha}\n\nCaptchaHarvester: Solve captchas yourself without having to pay for services\nlike 2captcha for use in automated projects.\n\npositional arguments:\n  {recaptcha,hcaptcha}  the type of captcha you are want to solve\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -k SITE_KEY, --site-key SITE_KEY\n                        the sitekey used by the captcha on page\n  -d DOMAIN, --domain DOMAIN\n                        the domain for which you want to solve captchas\n  -H HOST, --host HOST  defaults to 127.0.0.1\n  -p PORT, --port PORT  defaults to 5000\n  -b {chrome,brave}, --browser {chrome,brave}\n                        which browser to open on launch\n  -r, --restart-browser\n                        if this flag is not passed, a new instance of the\n                        browser willbe opened. this flag is most helpful when\n                        solving Googles ReCaptchasbecause if you restat your\n                        main profile you'll most likely be loggedinto Google\n                        and will be given an easier time on the captchas\n\nFor help contact @MacHacker#7322 (Discord)\n```\n\n## accessing the tokens\n\nYou can either access the tokens from another project/process by useing the\nhandy `fetch.token` function I included:\n\n```python\nfrom harvester import fetch\n\nserver_address = ('127.0.0.1', 5000)\ntoken = fetch.token(server_address)\nprint('token:', token)\n```\n\nOr you can check out [example.py](example.py) to see how to progamatically\nstart the server and access the tokens by integrating the harvester with\nyour existsing (or new) code.\n\n## credits\n\nInspred by [Cosmo3904/Recaptcha-Harvester-V2](https://github.com/Cosmo3904/Recaptcha-Harvester-V2).\n\nFor help contact @MacHacker#7322 (Discord)\n\nHas CaptchaHarvester saved you money on your project? Consider buying me a coffee!\n\n[![Buy Me A Coffee](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://www.buymeacoffee.com/noahcardoza)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/NoahCardoza/CaptchaHarvester", "keywords": "http,proxy,http proxy server,proxy server,http server,http web server,proxy framework,web framework,Python3,catpcha,recaptcha,hcaptcha,google,cloudflare,mitm,man in the middle,web server,web scraping,botting", "license": "", "maintainer": "", "maintainer_email": "", "name": "captcha-harvester", "package_url": "https://pypi.org/project/captcha-harvester/", "platform": "", "project_url": "https://pypi.org/project/captcha-harvester/", "project_urls": {"Homepage": "https://github.com/NoahCardoza/CaptchaHarvester"}, "release_url": "https://pypi.org/project/captcha-harvester/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Solve captchas yourself without having to pay for services like 2captcha for use in automated projects.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>CaptchaHarvester</h1>\n<blockquote>\n<p>Solve captchas yourself without having to pay for services like 2captcha for use in automated projects.</p>\n</blockquote>\n<h2>note</h2>\n<p>At the moment this project can be used for Google's V2 ReCaptchas and hCaptchas.</p>\n<h2>setup</h2>\n<pre>pip install captcha-harvester\n</pre>\n<h2>&gt; harvester</h2>\n<p>This will setup an HTTP server at <code>http://127.0.0.1:5000</code> by default. This server is also\nconfigured to proxy requests on whichever <code>DOMAIN</code> you pass it.</p>\n<p>If you are running MacOS/Windows and have the <a href=\"https://brave.com/\" rel=\"nofollow\">Brave Browser</a>\nor <a href=\"https://www.google.com/chrome/\" rel=\"nofollow\">Google Chrome</a>, all you have to do is pass\nthe <code>-b/--browser</code> flag set to either <code>chrome</code> or <code>brave</code>. This will automatically open\na new instance of Brave/Chrome under a temporary profile with the proxy settings already\nconfigured and loaded at the DOMAIN that was passed to the script. If you want to use\nyour main profile, you'll need to pass the <code>-r/--restart-browser</code> flag. To reconfigue\nthe proxy settings the browser will need to be restarted if it is already running.</p>\n<p>If you aren't running MacOS/Windows then you'll need to install a proxy extension like\n<a href=\"https://chrome.google.com/webstore/detail/proxy-switcher-and-manage/onnfghpihccifgojkpnnncpagjcdbjod?hl=en\" rel=\"nofollow\">Proxy Switcher and Manager</a>\nthat supports <strong>PAC Scripts</strong>. Use a script like:</p>\n<pre><span class=\"kd\">function</span> <span class=\"nx\">FindProxyForURL</span><span class=\"p\">(</span><span class=\"nx\">url</span><span class=\"p\">,</span> <span class=\"nx\">host</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">host</span> <span class=\"o\">==</span> <span class=\"s1\">'DOMAIN'</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'PROXY HOST:PORT'</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"s1\">'DIRECT'</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre>\n<p>This will make sure that all traffic sent to <code>DOMAIN</code> will be proxied by our server and it\nwill return one of the template files rather than actually contact the <code>DOMAIN</code> server.</p>\n<blockquote>\n<p>If you would like to come up with an automated solution for your OS, I am open to PR requests.</p>\n</blockquote>\n<pre>&gt; harvester -h\nusage: harvester [-h] -k SITE_KEY -d DOMAIN [-H HOST] [-p PORT]\n                 [-b {chrome,brave}] [-r]\n                 {recaptcha,hcaptcha}\n\nCaptchaHarvester: Solve captchas yourself without having to pay for services\nlike 2captcha for use in automated projects.\n\npositional arguments:\n  {recaptcha,hcaptcha}  the type of captcha you are want to solve\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -k SITE_KEY, --site-key SITE_KEY\n                        the sitekey used by the captcha on page\n  -d DOMAIN, --domain DOMAIN\n                        the domain for which you want to solve captchas\n  -H HOST, --host HOST  defaults to 127.0.0.1\n  -p PORT, --port PORT  defaults to 5000\n  -b {chrome,brave}, --browser {chrome,brave}\n                        which browser to open on launch\n  -r, --restart-browser\n                        if this flag is not passed, a new instance of the\n                        browser willbe opened. this flag is most helpful when\n                        solving Googles ReCaptchasbecause if you restat your\n                        main profile you'll most likely be loggedinto Google\n                        and will be given an easier time on the captchas\n\nFor help contact @MacHacker#7322 (Discord)\n</pre>\n<h2>accessing the tokens</h2>\n<p>You can either access the tokens from another project/process by useing the\nhandy <code>fetch.token</code> function I included:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">harvester</span> <span class=\"kn\">import</span> <span class=\"n\">fetch</span>\n\n<span class=\"n\">server_address</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"mi\">5000</span><span class=\"p\">)</span>\n<span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">fetch</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"p\">(</span><span class=\"n\">server_address</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'token:'</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"p\">)</span>\n</pre>\n<p>Or you can check out <a href=\"example.py\" rel=\"nofollow\">example.py</a> to see how to progamatically\nstart the server and access the tokens by integrating the harvester with\nyour existsing (or new) code.</p>\n<h2>credits</h2>\n<p>Inspred by <a href=\"https://github.com/Cosmo3904/Recaptcha-Harvester-V2\" rel=\"nofollow\">Cosmo3904/Recaptcha-Harvester-V2</a>.</p>\n<p>For help contact @MacHacker#7322 (Discord)</p>\n<p>Has CaptchaHarvester saved you money on your project? Consider buying me a coffee!</p>\n<p><a href=\"https://www.buymeacoffee.com/noahcardoza\" rel=\"nofollow\"><img alt=\"Buy Me A Coffee\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/320bf793359f29544369a3f1ecd7ec6a07a5dcd6/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f637573746f6d5f696d616765732f6f72616e67655f696d672e706e67\"></a></p>\n\n          </div>"}, "last_serial": 7176996, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "001f16a01631b2d7e9c46911a839f4a6", "sha256": "dc47eb77d09dfd06a062c592c0240e47cfacf406c259c1a2ddb08158d1146e10"}, "downloads": -1, "filename": "captcha-harvester-1.0.1.tar.gz", "has_sig": false, "md5_digest": "001f16a01631b2d7e9c46911a839f4a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8501, "upload_time": "2020-04-24T21:51:01", "upload_time_iso_8601": "2020-04-24T21:51:01.827540Z", "url": "https://files.pythonhosted.org/packages/29/2c/76e3023b5599151c3bc93bda775c24b4dbfe40ea42b634a9471ead1813d2/captcha-harvester-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "0a14475bcb74d2840f2d33919f9862c8", "sha256": "85dd99d6a7fa82cbb715a5c4ad028ccf905d39068264a7da815a297a3d59f538"}, "downloads": -1, "filename": "captcha-harvester-1.0.2.tar.gz", "has_sig": false, "md5_digest": "0a14475bcb74d2840f2d33919f9862c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8588, "upload_time": "2020-05-06T02:07:41", "upload_time_iso_8601": "2020-05-06T02:07:41.113487Z", "url": "https://files.pythonhosted.org/packages/1f/cd/e6d23b0a81073cceb45738e96505b0f1d452f0201d036f3850a64ed6e603/captcha-harvester-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a14475bcb74d2840f2d33919f9862c8", "sha256": "85dd99d6a7fa82cbb715a5c4ad028ccf905d39068264a7da815a297a3d59f538"}, "downloads": -1, "filename": "captcha-harvester-1.0.2.tar.gz", "has_sig": false, "md5_digest": "0a14475bcb74d2840f2d33919f9862c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8588, "upload_time": "2020-05-06T02:07:41", "upload_time_iso_8601": "2020-05-06T02:07:41.113487Z", "url": "https://files.pythonhosted.org/packages/1f/cd/e6d23b0a81073cceb45738e96505b0f1d452f0201d036f3850a64ed6e603/captcha-harvester-1.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:27 2020"}