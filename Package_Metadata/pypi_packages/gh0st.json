{"info": {"author": "Sabrina Held", "author_email": "pyrogue6@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Environment :: Console :: Curses", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Games/Entertainment :: Puzzle Games", "Topic :: Games/Entertainment :: Turn Based Strategy"], "description": "# `gh0st`\n\n```\n       _      ____      _\n      | |    / __ \\    | |\n  __ _| |__ | | /  |___| |_\n / _` | '_ \\| |//| / __| __|\n| (_| | | | |  /_| \\__ \\ |_\n \\__, |_| |_|\\____/|___/\\__|\n /\\_/ |\n \\___/\n```\n\nA top-down stealth and hacking game implemented in python curses  \nPlayable in 256-color terminal emulators to monochrome tty and everything in between\n\n## Files\n\n```bash\n.\n\u251c\u2500\u2500 gh0st/\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __main__.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 packages/\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 aart/ ------------------------ # ascii art wrapper\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 aart.py\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 aart.txt\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 cursed.py\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 keymap/ ---------------------- # keymap class for input\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 keymap.py\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 menu/ ------------------------ # menu classes for curses\n\u2502\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 menu.py\n\u2502\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 OLD/ --------------------- # may incorporate these as base classes\n\u2502\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 option.py\n\u251c\u2500\u2500 icons/ ------------------------------- # various icons for game\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u2514\u2500\u2500 tests/ ------------------------------- # tests of various future features \n```\n\n## Download and Play\n\n```bash\n$ pip install gh0st\n$ gh0st\n```\n\n## TODO\n\n### Key\n[**+**] feature to be added  \n[**x**] change in code  \n[**-**] bug to be removed  \n[**?**] uncertain how to proceed  \n\n### Tasks\n\n[**+**] add badges to gitlab <3  \n[**+**] upload to PyPI  \n`\u251c\u2500\u2500`   write working demo  \n`\u2514\u2500\u2500`   tag first release  \n[**+**] SE logic needs to be fuzzy, contradictable, and maybe not all revealed, but able to reveal by prodding/getting skill/familiarity?  \n`\u2514\u2500\u2500`   SE demo?  \n[**+**] Need to keep better track of window size to prevent errors from making and using windows that are larger  \n[**+**] match window size on create&resize  \n[**+**] use old option&menu as base class?  \n[**x**] keymap needs to accept any and all curses chars", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://gitlab.com/pyrogue6/gh0st/-/archive/0.0.1/gh0st-0.0.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/pyrogue6/gh0st", "keywords": "stealth hacking puzzle game", "license": "GPLV3", "maintainer": "", "maintainer_email": "", "name": "gh0st", "package_url": "https://pypi.org/project/gh0st/", "platform": "", "project_url": "https://pypi.org/project/gh0st/", "project_urls": {"Download": "https://gitlab.com/pyrogue6/gh0st/-/archive/0.0.1/gh0st-0.0.1.tar.gz", "Homepage": "https://gitlab.com/pyrogue6/gh0st"}, "release_url": "https://pypi.org/project/gh0st/0.0.1/", "requires_dist": null, "requires_python": ">=3", "summary": "Top down stealth & hacking game", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><code>gh0st</code></h1>\n<pre><code>       _      ____      _\n      | |    / __ \\    | |\n  __ _| |__ | | /  |___| |_\n / _` | '_ \\| |//| / __| __|\n| (_| | | | |  /_| \\__ \\ |_\n \\__, |_| |_|\\____/|___/\\__|\n /\\_/ |\n \\___/\n</code></pre>\n<p>A top-down stealth and hacking game implemented in python curses<br>\nPlayable in 256-color terminal emulators to monochrome tty and everything in between</p>\n<h2>Files</h2>\n<pre>.\n\u251c\u2500\u2500 gh0st/\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __main__.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 packages/\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 aart/ ------------------------ <span class=\"c1\"># ascii art wrapper</span>\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 aart.py\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 aart.txt\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 cursed.py\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 keymap/ ---------------------- <span class=\"c1\"># keymap class for input</span>\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 keymap.py\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 menu/ ------------------------ <span class=\"c1\"># menu classes for curses</span>\n\u2502\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 menu.py\n\u2502\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 OLD/ --------------------- <span class=\"c1\"># may incorporate these as base classes</span>\n\u2502\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 option.py\n\u251c\u2500\u2500 icons/ ------------------------------- <span class=\"c1\"># various icons for game</span>\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u2514\u2500\u2500 tests/ ------------------------------- <span class=\"c1\"># tests of various future features </span>\n</pre>\n<h2>Download and Play</h2>\n<pre>$ pip install gh0st\n$ gh0st\n</pre>\n<h2>TODO</h2>\n<h3>Key</h3>\n<p>[<strong>+</strong>] feature to be added<br>\n[<strong>x</strong>] change in code<br>\n[<strong>-</strong>] bug to be removed<br>\n[<strong>?</strong>] uncertain how to proceed</p>\n<h3>Tasks</h3>\n<p>[<strong>+</strong>] add badges to gitlab &lt;3<br>\n[<strong>+</strong>] upload to PyPI<br>\n<code>\u251c\u2500\u2500</code>   write working demo<br>\n<code>\u2514\u2500\u2500</code>   tag first release<br>\n[<strong>+</strong>] SE logic needs to be fuzzy, contradictable, and maybe not all revealed, but able to reveal by prodding/getting skill/familiarity?<br>\n<code>\u2514\u2500\u2500</code>   SE demo?<br>\n[<strong>+</strong>] Need to keep better track of window size to prevent errors from making and using windows that are larger<br>\n[<strong>+</strong>] match window size on create&amp;resize<br>\n[<strong>+</strong>] use old option&amp;menu as base class?<br>\n[<strong>x</strong>] keymap needs to accept any and all curses chars</p>\n\n          </div>"}, "last_serial": 6925239, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "4116b1e27cf06207cdab10e3e84d7a01", "sha256": "536b6ab66718dc401c0258fcc817a9a88662ff3166b8f8c29f5c92f9339baad7"}, "downloads": -1, "filename": "gh0st-0.0.0.tar.gz", "has_sig": false, "md5_digest": "4116b1e27cf06207cdab10e3e84d7a01", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 6801, "upload_time": "2020-04-01T04:04:27", "upload_time_iso_8601": "2020-04-01T04:04:27.645106Z", "url": "https://files.pythonhosted.org/packages/7c/60/ccf87a4921d132769ae8ae948fd2433e5ed26d5e5d5449ad9490bb82bfc3/gh0st-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "d9d8ffd2d7a4c407e0c98a636d7e802e", "sha256": "0d65858c25ffb37c7addb769ad2c96c8e33dc2f795f5fb5013f1c0378b3d5edb"}, "downloads": -1, "filename": "gh0st-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d9d8ffd2d7a4c407e0c98a636d7e802e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8285, "upload_time": "2020-04-01T05:16:41", "upload_time_iso_8601": "2020-04-01T05:16:41.296048Z", "url": "https://files.pythonhosted.org/packages/c6/26/7ef3bed79333889faaad5cafdc99fc61f3f08d871837f945316ef50d070e/gh0st-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d9d8ffd2d7a4c407e0c98a636d7e802e", "sha256": "0d65858c25ffb37c7addb769ad2c96c8e33dc2f795f5fb5013f1c0378b3d5edb"}, "downloads": -1, "filename": "gh0st-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d9d8ffd2d7a4c407e0c98a636d7e802e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8285, "upload_time": "2020-04-01T05:16:41", "upload_time_iso_8601": "2020-04-01T05:16:41.296048Z", "url": "https://files.pythonhosted.org/packages/c6/26/7ef3bed79333889faaad5cafdc99fc61f3f08d871837f945316ef50d070e/gh0st-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:34 2020"}