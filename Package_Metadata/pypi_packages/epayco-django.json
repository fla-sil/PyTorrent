{"info": {"author": "gustav0", "author_email": "tavito.286@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# ePayco Django\n\nA Django integration for ePayco's gateway.\n##Requirements\n* [Python](https://www.python.org/) (3.5, 3.6, 3.7, 3.8)\n* [Django](https://github.com/django/django)\n* [epayco-python](https://github.com/epayco/epayco-python)\n\n## Installation\nIf you want clone the repository:\n```\n$ git clone https://github.com/gustav0/epayco_django.git\n```\n\nInstall from package manager\n```\n$ pip install epayco-django\n```\n\n\nAdd `'epayco_django'` to your `INSTALLED_APPS` setting.\n```\nINSTALLED_APPS = [\n    ...\n    'epayco_django',\n    ...\n]\n```\n\nAnd set this in your settings, you can get this data from your ePayco dashboard under **Integration > API keys**.\n\n```\nEPAYCO = {\n    'PUBLIC_KEY': 'MY_PUBLIC_KEY',\n    'PRIVATE_KEY': 'MY_PRIVATE_KEY',\n    'P_KEY': 'MY_P_KEY',\n    'TEST': True, # you probably want to test it first rigth?\n\n    # Optional (ignore these if you want the default behaviour)\n    'IS_SECURE': False, # Enable this if you are in production\n    'CONFIRMATION_URL': reverse('epayco_confirmation'),\n    'RESPONSE_URL': reverse('epayco_response'),\n\n    # And you can use your own image as a payment button\n    'CHECKOUT_BUTTON_URL': 'https://mydomain.com/btns/pay_now_button.png'\n}\n```\nNow edit the `myproject/urls.py` module in your project:\n\n```\nfrom django.conf.urls import url, include\nfrom epayco_django import urls as epayco_urls\n\n# or this if you are using Django 2.0 +\nfrom django.urls import path, include\n\nurlpatterns = [\n    ...\n    url('^', include(epayco_urls)),\n\n    # or \n\n    path('', include(epayco_urls)),\n    ...\n]\n```\n## Usage\nAt the moment the usage of the library is very limited, but it can be helpful \nto receive and act upon payment confirmations.\n\nIf this is what you need then you should set the `confirmation url` under \n**Integrations > My site properties > Gateway options** in the ePayco dashboard to:\n\n```\nhttps://yourdomain.com/epayco/confirmation\n```\nIt is important to use https, and if you are working locally you can use tools \nlike [ngrok](https://ngrok.com/).\n\n### Payment Confirmation\n\nNow that you set payment confirmations to be reported to your site, we can listen \nto whatever confirmation is sent, validate it and act on it. Listen to any of the \n`epayco_django.signals` you are interested in and you should be able to acomplish \nwhat you need. Here is an example:\n```\nfrom django.dispatch import receiver\nfrom epayco_django.signals import valid_confirmation_received\n\n@receiver(valid_confirmation_received)\ndef activate_membership(sender, user=None, **kwargs):\n    ...\n    HERE SHOULD BE YOUR MEMBERSHIP ACTIVATION CODE\n    ...\n```\n\n### Validating responses\nWe provide a utility that will search for existing payments with the provided \nreference code, if it finds a payment it will retrieve its information but if \nit doesn't it will fetch the payment data and activate the payment confirmation \nprocess by itself.\n\n```\n...\n\nfrom epayco_django.utils import validate_response_code\n\nclass MyView(TemplateView):\n    ...\n\n    def get_context_data(self, request, *args, **kwargs):\n        context = super().get_context_data(request, *args, **kwargs)\n        ref_code = request.GET.get('ref_code')\n        result = validate_response_code(ref_code)\n        # You will get a dict like this as a result\n        # {'valid_ref': True, 'existed': True, 'flag': False, 'obj': <PaymentConfirmationObject>}\n\n        # INSERT CUSTOM CODE HERE\n\n        return context\n```\n\n## Contributing\nI'm always grateful for any kind of contribution including but not limited to bug \nreports, code enhancements, bug fixes, and even functionality suggestions.\n\n##### You can report any bug you find or suggest new functionality with a new \n[issue](https://github.com/gustav0/epayco_django/issues).\n\n##### If you want to add yourself some functionality to the wrapper:\n1. Fork it ( https://github.com/gustav0/epayco_django)\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Adds my new feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gustav0/epayco_django", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "epayco-django", "package_url": "https://pypi.org/project/epayco-django/", "platform": "", "project_url": "https://pypi.org/project/epayco-django/", "project_urls": {"Homepage": "https://github.com/gustav0/epayco_django"}, "release_url": "https://pypi.org/project/epayco-django/0.0.1/", "requires_dist": ["Django (>=1.11)", "pyepayco", "requests"], "requires_python": ">=3.5", "summary": "A django integration for ePayco's gateway.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ePayco Django</h1>\n<p>A Django integration for ePayco's gateway.\n##Requirements</p>\n<ul>\n<li><a href=\"https://www.python.org/\" rel=\"nofollow\">Python</a> (3.5, 3.6, 3.7, 3.8)</li>\n<li><a href=\"https://github.com/django/django\" rel=\"nofollow\">Django</a></li>\n<li><a href=\"https://github.com/epayco/epayco-python\" rel=\"nofollow\">epayco-python</a></li>\n</ul>\n<h2>Installation</h2>\n<p>If you want clone the repository:</p>\n<pre><code>$ git clone https://github.com/gustav0/epayco_django.git\n</code></pre>\n<p>Install from package manager</p>\n<pre><code>$ pip install epayco-django\n</code></pre>\n<p>Add <code>'epayco_django'</code> to your <code>INSTALLED_APPS</code> setting.</p>\n<pre><code>INSTALLED_APPS = [\n    ...\n    'epayco_django',\n    ...\n]\n</code></pre>\n<p>And set this in your settings, you can get this data from your ePayco dashboard under <strong>Integration &gt; API keys</strong>.</p>\n<pre><code>EPAYCO = {\n    'PUBLIC_KEY': 'MY_PUBLIC_KEY',\n    'PRIVATE_KEY': 'MY_PRIVATE_KEY',\n    'P_KEY': 'MY_P_KEY',\n    'TEST': True, # you probably want to test it first rigth?\n\n    # Optional (ignore these if you want the default behaviour)\n    'IS_SECURE': False, # Enable this if you are in production\n    'CONFIRMATION_URL': reverse('epayco_confirmation'),\n    'RESPONSE_URL': reverse('epayco_response'),\n\n    # And you can use your own image as a payment button\n    'CHECKOUT_BUTTON_URL': 'https://mydomain.com/btns/pay_now_button.png'\n}\n</code></pre>\n<p>Now edit the <code>myproject/urls.py</code> module in your project:</p>\n<pre><code>from django.conf.urls import url, include\nfrom epayco_django import urls as epayco_urls\n\n# or this if you are using Django 2.0 +\nfrom django.urls import path, include\n\nurlpatterns = [\n    ...\n    url('^', include(epayco_urls)),\n\n    # or \n\n    path('', include(epayco_urls)),\n    ...\n]\n</code></pre>\n<h2>Usage</h2>\n<p>At the moment the usage of the library is very limited, but it can be helpful\nto receive and act upon payment confirmations.</p>\n<p>If this is what you need then you should set the <code>confirmation url</code> under\n<strong>Integrations &gt; My site properties &gt; Gateway options</strong> in the ePayco dashboard to:</p>\n<pre><code>https://yourdomain.com/epayco/confirmation\n</code></pre>\n<p>It is important to use https, and if you are working locally you can use tools\nlike <a href=\"https://ngrok.com/\" rel=\"nofollow\">ngrok</a>.</p>\n<h3>Payment Confirmation</h3>\n<p>Now that you set payment confirmations to be reported to your site, we can listen\nto whatever confirmation is sent, validate it and act on it. Listen to any of the\n<code>epayco_django.signals</code> you are interested in and you should be able to acomplish\nwhat you need. Here is an example:</p>\n<pre><code>from django.dispatch import receiver\nfrom epayco_django.signals import valid_confirmation_received\n\n@receiver(valid_confirmation_received)\ndef activate_membership(sender, user=None, **kwargs):\n    ...\n    HERE SHOULD BE YOUR MEMBERSHIP ACTIVATION CODE\n    ...\n</code></pre>\n<h3>Validating responses</h3>\n<p>We provide a utility that will search for existing payments with the provided\nreference code, if it finds a payment it will retrieve its information but if\nit doesn't it will fetch the payment data and activate the payment confirmation\nprocess by itself.</p>\n<pre><code>...\n\nfrom epayco_django.utils import validate_response_code\n\nclass MyView(TemplateView):\n    ...\n\n    def get_context_data(self, request, *args, **kwargs):\n        context = super().get_context_data(request, *args, **kwargs)\n        ref_code = request.GET.get('ref_code')\n        result = validate_response_code(ref_code)\n        # You will get a dict like this as a result\n        # {'valid_ref': True, 'existed': True, 'flag': False, 'obj': &lt;PaymentConfirmationObject&gt;}\n\n        # INSERT CUSTOM CODE HERE\n\n        return context\n</code></pre>\n<h2>Contributing</h2>\n<p>I'm always grateful for any kind of contribution including but not limited to bug\nreports, code enhancements, bug fixes, and even functionality suggestions.</p>\n<h5>You can report any bug you find or suggest new functionality with a new</h5>\n<p><a href=\"https://github.com/gustav0/epayco_django/issues\" rel=\"nofollow\">issue</a>.</p>\n<h5>If you want to add yourself some functionality to the wrapper:</h5>\n<ol>\n<li>Fork it ( <a href=\"https://github.com/gustav0/epayco_django\" rel=\"nofollow\">https://github.com/gustav0/epayco_django</a>)</li>\n<li>Create your feature branch (git checkout -b my-new-feature)</li>\n<li>Commit your changes (git commit -am 'Adds my new feature')</li>\n<li>Push to the branch (git push origin my-new-feature)</li>\n<li>Create a new Pull Request</li>\n</ol>\n\n          </div>"}, "last_serial": 7093842, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "105a1a6746d531ee92f39d10fd4f437f", "sha256": "e1379ff362eb1f538c9edfc596c7f0c0036afa6ce6a0b2b31353b1cf020e11f4"}, "downloads": -1, "filename": "epayco_django-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "105a1a6746d531ee92f39d10fd4f437f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16569, "upload_time": "2020-04-24T15:21:32", "upload_time_iso_8601": "2020-04-24T15:21:32.960815Z", "url": "https://files.pythonhosted.org/packages/dd/d2/7ad301caf5244712e543249e2fb0d649809ecff9c615fb8a81a8ff46d6cd/epayco_django-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e34bab1a7b606387fd8d407f8b38c7db", "sha256": "3ba61700257cce4281b23940789cee5a2412bb46b9e98bb5320a349d26c80dbe"}, "downloads": -1, "filename": "epayco-django-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e34bab1a7b606387fd8d407f8b38c7db", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 14354, "upload_time": "2020-04-24T15:21:34", "upload_time_iso_8601": "2020-04-24T15:21:34.979212Z", "url": "https://files.pythonhosted.org/packages/f1/b6/d212416ade0bc34181ce2d705c2406eceed21b18f7e029df7ce2f637dd06/epayco-django-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "105a1a6746d531ee92f39d10fd4f437f", "sha256": "e1379ff362eb1f538c9edfc596c7f0c0036afa6ce6a0b2b31353b1cf020e11f4"}, "downloads": -1, "filename": "epayco_django-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "105a1a6746d531ee92f39d10fd4f437f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16569, "upload_time": "2020-04-24T15:21:32", "upload_time_iso_8601": "2020-04-24T15:21:32.960815Z", "url": "https://files.pythonhosted.org/packages/dd/d2/7ad301caf5244712e543249e2fb0d649809ecff9c615fb8a81a8ff46d6cd/epayco_django-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e34bab1a7b606387fd8d407f8b38c7db", "sha256": "3ba61700257cce4281b23940789cee5a2412bb46b9e98bb5320a349d26c80dbe"}, "downloads": -1, "filename": "epayco-django-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e34bab1a7b606387fd8d407f8b38c7db", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 14354, "upload_time": "2020-04-24T15:21:34", "upload_time_iso_8601": "2020-04-24T15:21:34.979212Z", "url": "https://files.pythonhosted.org/packages/f1/b6/d212416ade0bc34181ce2d705c2406eceed21b18f7e029df7ce2f637dd06/epayco-django-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:03 2020"}