{"info": {"author": "Shayegan Hooshyari", "author_email": "sh.hooshyari@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django :: 2.0", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "=============================\ndjango-zarinpal\n=============================\n\n.. image:: https://badge.fury.io/py/django-zarinpal.svg\n    :target: https://badge.fury.io/py/django-zarinpal\n\n.. image:: https://travis-ci.org/glyphack/django-zarinpal.svg?branch=master\n    :target: https://travis-ci.org/glyphack/django-zarinpal\n\n.. image:: https://codecov.io/gh/glyphack/django-zarinpal/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/glyphack/django-zarinpal\n\ndjango package for integrating payments with zarinpal\n\nDocumentation\n-------------\n\nThe full documentation is at https://glyphack.github.io/django-zarinpal/.\n\nQuickstart\n----------\n\nInstall django-zarinpal::\n\n    pip install django-zarinpal\n\nAdd it to your `INSTALLED_APPS`:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        'zarinpal.apps.ZarinpalConfig',\n        ...\n    )\n\nAdd django-zarinpal's URL patterns:\n\n.. code-block:: python\n\n    from zarinpal import urls as zarinpal_urls\n\n\n    urlpatterns = [\n        ...\n        url(r'^', include(zarinpal_urls)),\n        ...\n    ]\n\nFeatures\n--------\n\n- sending signal on verifying transaction to let other apps know about it\n\nHow to Use\n----------\nset these variables in your settings file:\n1.ZARINPAL_CALLBACK_URL(if you want to handle verification yourself explained here)\n\n2.ZARINPAL_SIMULATION\n\n3.ZARINPAL_MERCHANT_ID (you may leave it blank if you set the simulation to True\n\n\nyou have to use function start_transaction with a dictionary containing your transaction data like this:\n.. code-block:: python\n\n        from django-zarinpal.utils import start_transaction\n\n        data = {\n            user: user object, #optional\n\n            first_name: str, #optional\n\n            last_name: str, #optional\n\n            amount : int,\n\n            callback_url, #optional\n\n            description: str, #optional\n\n            mobile: string, #optional\n\n            email: string, #optional\n\n\n        }\n\n        start_transaction(data)\n\nIf you specify a callback_url in transaction data after completing transaction zarinpal will redirect user to the page you specified with two get arguments:\n\n1.order_number\n\n2.success: boolean\n\nIf you want to handle verifying transaction your self you can define your view and address it in settings with CALLBACK_URL you need to use function verify_transaction to check the transaction state it will return a transaction and you can check if it's successful or not.\nyou can leave it empty so package will take care of verifying transaction.\n\nTests\n--------\nRunning tests: ::\n\n    python manage.py zarinpal.tests.test_transaction\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n0.1.0 (2019-02-21)\n++++++++++++++++++\n\n* First release on PyPI.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/glyphack/django-zarinpal", "keywords": "django-zarinpal", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-zarinpal", "package_url": "https://pypi.org/project/django-zarinpal/", "platform": "", "project_url": "https://pypi.org/project/django-zarinpal/", "project_urls": {"Homepage": "https://github.com/glyphack/django-zarinpal"}, "release_url": "https://pypi.org/project/django-zarinpal/0.1.6/", "requires_dist": null, "requires_python": "", "summary": "django package for integrating payments with zarinpal", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/django-zarinpal\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/django-zarinpal.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8a573477820b855c09ccee93dfc835fc94b73e1c/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d7a6172696e70616c2e737667\"></a>\n<a href=\"https://travis-ci.org/glyphack/django-zarinpal\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/glyphack/django-zarinpal.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eb20b0de6334f509fb716e53500b1864557e5cb7/68747470733a2f2f7472617669732d63692e6f72672f676c79706861636b2f646a616e676f2d7a6172696e70616c2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/glyphack/django-zarinpal\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/glyphack/django-zarinpal/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d999680b6f5fc312e38c1576a24feac957d6473a/68747470733a2f2f636f6465636f762e696f2f67682f676c79706861636b2f646a616e676f2d7a6172696e70616c2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<p>django package for integrating payments with zarinpal</p>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The full documentation is at <a href=\"https://glyphack.github.io/django-zarinpal/\" rel=\"nofollow\">https://glyphack.github.io/django-zarinpal/</a>.</p>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Install django-zarinpal:</p>\n<pre>pip install django-zarinpal\n</pre>\n<p>Add it to your <cite>INSTALLED_APPS</cite>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'zarinpal.apps.ZarinpalConfig'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Add django-zarinpal\u2019s URL patterns:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">zarinpal</span> <span class=\"kn\">import</span> <span class=\"n\">urls</span> <span class=\"k\">as</span> <span class=\"n\">zarinpal_urls</span>\n\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"n\">zarinpal_urls</span><span class=\"p\">)),</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>sending signal on verifying transaction to let other apps know about it</li>\n</ul>\n</div>\n<div id=\"how-to-use\">\n<h2>How to Use</h2>\n<p>set these variables in your settings file:\n1.ZARINPAL_CALLBACK_URL(if you want to handle verification yourself explained here)</p>\n<p>2.ZARINPAL_SIMULATION</p>\n<p>3.ZARINPAL_MERCHANT_ID (you may leave it blank if you set the simulation to True</p>\n<p>you have to use function start_transaction with a dictionary containing your transaction data like this:\n.. code-block:: python</p>\n<blockquote>\n<p>from django-zarinpal.utils import start_transaction</p>\n<dl>\n<dt>data = {</dt>\n<dd><p>user: user object, #optional</p>\n<p>first_name: str, #optional</p>\n<p>last_name: str, #optional</p>\n<p>amount : int,</p>\n<p>callback_url, #optional</p>\n<p>description: str, #optional</p>\n<p>mobile: string, #optional</p>\n<p>email: string, #optional</p>\n</dd>\n</dl>\n<p>}</p>\n<p>start_transaction(data)</p>\n</blockquote>\n<p>If you specify a callback_url in transaction data after completing transaction zarinpal will redirect user to the page you specified with two get arguments:</p>\n<p>1.order_number</p>\n<p>2.success: boolean</p>\n<p>If you want to handle verifying transaction your self you can define your view and address it in settings with CALLBACK_URL you need to use function verify_transaction to check the transaction state it will return a transaction and you can check if it\u2019s successful or not.\nyou can leave it empty so package will take care of verifying transaction.</p>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>Running tests:</p>\n<pre>python manage.py zarinpal.tests.test_transaction\n</pre>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Tools used in rendering this package:</p>\n<ul>\n<li><a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a></li>\n<li><a href=\"https://github.com/pydanny/cookiecutter-djangopackage\" rel=\"nofollow\">cookiecutter-djangopackage</a></li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1.0 (2019-02-21)</span></h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5201922, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "cc245a8c04a71ced70f2b42cc8b6fa36", "sha256": "133963133086a85daf6bfcdaa9d5e90346d4e6b79f84cbc7ad16177de4150aca"}, "downloads": -1, "filename": "django-zarinpal-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cc245a8c04a71ced70f2b42cc8b6fa36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10723, "upload_time": "2019-04-25T14:30:55", "upload_time_iso_8601": "2019-04-25T14:30:55.590064Z", "url": "https://files.pythonhosted.org/packages/00/f4/6ff9b411aafd7af4b5d793336f7665eb534fa5062e59e905735ec456cea7/django-zarinpal-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "1f003dd17814f529d6dd8a1068ed884a", "sha256": "2df492ee7980398e7f8c3603958ac454f9e3ebf79d99164d48c92f1262b2395d"}, "downloads": -1, "filename": "django-zarinpal-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1f003dd17814f529d6dd8a1068ed884a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10700, "upload_time": "2019-04-25T14:33:47", "upload_time_iso_8601": "2019-04-25T14:33:47.293818Z", "url": "https://files.pythonhosted.org/packages/5e/52/ee9e5a2899b3e1f8e90432557adad2d2e454cee19a207367b58217540ac8/django-zarinpal-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "c78ab20bdc0491ad70ab9c406768721a", "sha256": "6aa65acc10a750b174b3482e3d865b871678e40bba1c3a6cf199f41f5984ca9f"}, "downloads": -1, "filename": "django-zarinpal-0.1.3.tar.gz", "has_sig": false, "md5_digest": "c78ab20bdc0491ad70ab9c406768721a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9398, "upload_time": "2019-04-26T14:26:57", "upload_time_iso_8601": "2019-04-26T14:26:57.398707Z", "url": "https://files.pythonhosted.org/packages/a1/41/d783611ec3f160741db0fcad3b30d04bcda80ad7e1382c3d1be05a9ced4c/django-zarinpal-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "b274927677c9d90ef10aecc373f14c60", "sha256": "c3b6321e0b511877055b3379f2a5e9f509e334db947d67c38b21a1159427c48e"}, "downloads": -1, "filename": "django-zarinpal-0.1.4.tar.gz", "has_sig": false, "md5_digest": "b274927677c9d90ef10aecc373f14c60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9392, "upload_time": "2019-04-26T14:32:45", "upload_time_iso_8601": "2019-04-26T14:32:45.695644Z", "url": "https://files.pythonhosted.org/packages/04/b5/e72fc2cceca220c357a4e0917a369a71ac2384a412b9b9b343d4fa19a5f6/django-zarinpal-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "be742abc754010eac8330695bac8ab9d", "sha256": "b54b3551d836df8978dc56dc0b2c633f1ff6f8325bbfc5681df39471551866f7"}, "downloads": -1, "filename": "django-zarinpal-0.1.5.tar.gz", "has_sig": false, "md5_digest": "be742abc754010eac8330695bac8ab9d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9536, "upload_time": "2019-04-27T16:24:04", "upload_time_iso_8601": "2019-04-27T16:24:04.838785Z", "url": "https://files.pythonhosted.org/packages/54/f0/512cd0969f70b00918535624a99fa71d2bc0057d190704e66d385658daa2/django-zarinpal-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "be211e4ed3c6c271e00ab2fa9d083959", "sha256": "c1d3d5ea282eec35ea19bb76c710a6e1fcb25b103232c039335b47c218737ce0"}, "downloads": -1, "filename": "django-zarinpal-0.1.6.tar.gz", "has_sig": false, "md5_digest": "be211e4ed3c6c271e00ab2fa9d083959", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9754, "upload_time": "2019-04-29T07:18:31", "upload_time_iso_8601": "2019-04-29T07:18:31.078777Z", "url": "https://files.pythonhosted.org/packages/97/b9/3bc089a63869de200e069208e251efd25eb23c07476f2a9e3f0e99ae4bf7/django-zarinpal-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be211e4ed3c6c271e00ab2fa9d083959", "sha256": "c1d3d5ea282eec35ea19bb76c710a6e1fcb25b103232c039335b47c218737ce0"}, "downloads": -1, "filename": "django-zarinpal-0.1.6.tar.gz", "has_sig": false, "md5_digest": "be211e4ed3c6c271e00ab2fa9d083959", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9754, "upload_time": "2019-04-29T07:18:31", "upload_time_iso_8601": "2019-04-29T07:18:31.078777Z", "url": "https://files.pythonhosted.org/packages/97/b9/3bc089a63869de200e069208e251efd25eb23c07476f2a9e3f0e99ae4bf7/django-zarinpal-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:44 2020"}