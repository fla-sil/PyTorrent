{"info": {"author": "Alessandro Molina", "author_email": "alessandro.molina@axant.it", "bugtrack_url": null, "classifiers": [], "description": "About tgext.webassets\n---------------------\n\ntgext.webassets is a TurboGears2 extension for assets management\nbased on `WebAssets <https://webassets.readthedocs.org/en/latest/index.html>`_.\n\nInstalling\n----------\n\ntgext.webassets can be installed from pypi::\n\n    pip install tgext.webassets\n\nshould just work for most of the users.\n\nUsage\n-----\n\nTo enable tgext.webassets put inside your application\n``config/app_cfg.py`` the following::\n\n    from tgext import webassets\n\n    webassets.plugme(base_config, bundles={\n        'js_all': webassets.Bundle('javascript/jquery.js', 'javascript/bootstrap.min.js',\n                                   filters='rjsmin', output='assets/js_all.js')\n    })\n\nor you can use ``tgext.pluggable`` when available::\n\n    from tgext.pluggable import plug\n    from tgext.webassets import Bundle\n\n    plug(base_config, 'tgext.webassets', bundles={\n        'js_all': Bundle('javascript/jquery.js', 'javascript/bootstrap.min.js',\n                         filters='rjsmin', output='assets/js_all.js')\n    })\n\nBy default ``tgext.webassets`` will load and save assets inside the turbogears\n``static_files`` path. Which is usually the ``public`` directory inside your\napplication.\n\n.. note::\n\n    Due to ``tgext.webassets`` writing files to the same place where it loads them,\n    it is suggested you add a subdirectory to the ``output`` option of your bundles,\n    so that the resulting files do not mix with the source files.\n\nThe webassets environment will then be available as ``tg.app_globals.webassets``, so you can\nuse it inside your templates to load the assets::\n\n    <script py:for=\"asset_url in g.webassets.js_all.urls()\" src=\"$asset_url\"></script>\n\nEach registered bundle will be available as a property of the ``g.webassets`` object\ninside templates.\n\nBundles\n-------\n\n``\u0167gext.webassets`` accepts the bundles inside the ``bundles`` dictionary. Each entry\ncan be a ``Bundle`` instance or a `webassets loader <https://webassets.readthedocs.org/en/latest/loaders.html>`_\nin case you want to load bundles from a configuration file.\n\nConfiguring\n-----------\n\nOptions available in `WebAssets Environment <https://webassets.readthedocs.org/en/latest/environment.html#configuration>`_\nare also available in tgext.webassets, pass them as arguments to the ``plug`` (inside the\n``options`` dictionary when using ``tgext.webassets.plugme``) or provide the through AppConfig\nor *.ini* file with ``webassets.`` namespace.\n\nSome have values that are inherited from your project configuration if not specified:\n\n    * debug: If webassets is running in debug mode or not, by default is ``False``.\n    * base_dir: The directory assets will be located. By default is your project ``static_files`` directory.\n    * base_url: The url static assets are served, by default ``/``. Use this option to serve them from a CDN.\n    * cache: If we should use webassets cache (if boolean), or override default path to cache directory\n      by default assets are cached inside the ``.webassets-cache`` directory inside ``base_dir``.\n\nBuiltin Filters\n---------------\n\n``tgext.webassets`` comes with builtin the ``rjsmin`` and ``cssmin`` filter,\nall `webassets filters <https://webassets.readthedocs.org/en/latest/builtin_filters.html>`_\nwork if the required tools are available.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/amol-/tgext.webassets", "keywords": "turbogears2.extension", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "tgext.webassets", "package_url": "https://pypi.org/project/tgext.webassets/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tgext.webassets/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/amol-/tgext.webassets"}, "release_url": "https://pypi.org/project/tgext.webassets/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "assets management extension for TurboGears2", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about-tgext-webassets\">\n<h2>About tgext.webassets</h2>\n<p>tgext.webassets is a TurboGears2 extension for assets management\nbased on <a href=\"https://webassets.readthedocs.org/en/latest/index.html\" rel=\"nofollow\">WebAssets</a>.</p>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>tgext.webassets can be installed from pypi:</p>\n<pre>pip install tgext.webassets\n</pre>\n<p>should just work for most of the users.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To enable tgext.webassets put inside your application\n<tt>config/app_cfg.py</tt> the following:</p>\n<pre>from tgext import webassets\n\nwebassets.plugme(base_config, bundles={\n    'js_all': webassets.Bundle('javascript/jquery.js', 'javascript/bootstrap.min.js',\n                               filters='rjsmin', output='assets/js_all.js')\n})\n</pre>\n<p>or you can use <tt>tgext.pluggable</tt> when available:</p>\n<pre>from tgext.pluggable import plug\nfrom tgext.webassets import Bundle\n\nplug(base_config, 'tgext.webassets', bundles={\n    'js_all': Bundle('javascript/jquery.js', 'javascript/bootstrap.min.js',\n                     filters='rjsmin', output='assets/js_all.js')\n})\n</pre>\n<p>By default <tt>tgext.webassets</tt> will load and save assets inside the turbogears\n<tt>static_files</tt> path. Which is usually the <tt>public</tt> directory inside your\napplication.</p>\n<div>\n<p>Note</p>\n<p>Due to <tt>tgext.webassets</tt> writing files to the same place where it loads them,\nit is suggested you add a subdirectory to the <tt>output</tt> option of your bundles,\nso that the resulting files do not mix with the source files.</p>\n</div>\n<p>The webassets environment will then be available as <tt>tg.app_globals.webassets</tt>, so you can\nuse it inside your templates to load the assets:</p>\n<pre>&lt;script py:for=\"asset_url in g.webassets.js_all.urls()\" src=\"$asset_url\"&gt;&lt;/script&gt;\n</pre>\n<p>Each registered bundle will be available as a property of the <tt>g.webassets</tt> object\ninside templates.</p>\n</div>\n<div id=\"bundles\">\n<h2>Bundles</h2>\n<p><tt>\u0167gext.webassets</tt> accepts the bundles inside the <tt>bundles</tt> dictionary. Each entry\ncan be a <tt>Bundle</tt> instance or a <a href=\"https://webassets.readthedocs.org/en/latest/loaders.html\" rel=\"nofollow\">webassets loader</a>\nin case you want to load bundles from a configuration file.</p>\n</div>\n<div id=\"configuring\">\n<h2>Configuring</h2>\n<p>Options available in <a href=\"https://webassets.readthedocs.org/en/latest/environment.html#configuration\" rel=\"nofollow\">WebAssets Environment</a>\nare also available in tgext.webassets, pass them as arguments to the <tt>plug</tt> (inside the\n<tt>options</tt> dictionary when using <tt>tgext.webassets.plugme</tt>) or provide the through AppConfig\nor <em>.ini</em> file with <tt>webassets.</tt> namespace.</p>\n<p>Some have values that are inherited from your project configuration if not specified:</p>\n<blockquote>\n<ul>\n<li>debug: If webassets is running in debug mode or not, by default is <tt>False</tt>.</li>\n<li>base_dir: The directory assets will be located. By default is your project <tt>static_files</tt> directory.</li>\n<li>base_url: The url static assets are served, by default <tt>/</tt>. Use this option to serve them from a CDN.</li>\n<li>cache: If we should use webassets cache (if boolean), or override default path to cache directory\nby default assets are cached inside the <tt><span class=\"pre\">.webassets-cache</span></tt> directory inside <tt>base_dir</tt>.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"builtin-filters\">\n<h2>Builtin Filters</h2>\n<p><tt>tgext.webassets</tt> comes with builtin the <tt>rjsmin</tt> and <tt>cssmin</tt> filter,\nall <a href=\"https://webassets.readthedocs.org/en/latest/builtin_filters.html\" rel=\"nofollow\">webassets filters</a>\nwork if the required tools are available.</p>\n</div>\n\n          </div>"}, "last_serial": 1498901, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "208a648566b596cb95298fd836ad5894", "sha256": "d071b90e35d2c071cfe83d691ee0d5c36361cc5e329c17b9c9ae079a8788936a"}, "downloads": -1, "filename": "tgext.webassets-0.0.1.tar.gz", "has_sig": false, "md5_digest": "208a648566b596cb95298fd836ad5894", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3954, "upload_time": "2015-03-07T23:35:45", "upload_time_iso_8601": "2015-03-07T23:35:45.126467Z", "url": "https://files.pythonhosted.org/packages/c9/76/476098e05cf4c56b3c30c663b59f078b2e52caa34f7ca889ff1f58c06407/tgext.webassets-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "4f4e4e18466decdc63439e8586475a0a", "sha256": "cb632cff14b957e858bb64ca680d3490284ac654e6d7c3ccac33282e4ef764d8"}, "downloads": -1, "filename": "tgext.webassets-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4f4e4e18466decdc63439e8586475a0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3988, "upload_time": "2015-04-10T10:19:59", "upload_time_iso_8601": "2015-04-10T10:19:59.981549Z", "url": "https://files.pythonhosted.org/packages/bd/8f/3b6c83c5f3c2a023a4b3903798e5dbd2188a06d7b7d53573056f724a9ba3/tgext.webassets-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4f4e4e18466decdc63439e8586475a0a", "sha256": "cb632cff14b957e858bb64ca680d3490284ac654e6d7c3ccac33282e4ef764d8"}, "downloads": -1, "filename": "tgext.webassets-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4f4e4e18466decdc63439e8586475a0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3988, "upload_time": "2015-04-10T10:19:59", "upload_time_iso_8601": "2015-04-10T10:19:59.981549Z", "url": "https://files.pythonhosted.org/packages/bd/8f/3b6c83c5f3c2a023a4b3903798e5dbd2188a06d7b7d53573056f724a9ba3/tgext.webassets-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:13 2020"}