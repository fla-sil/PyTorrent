{"info": {"author": "Vaibhav Murkute", "author_email": "vaibhavmurkute88@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# Komodo RPC API Library\n\n#### RPC API-Library for Komodo-based asset chains, for Python Developers.\n===============================================================================\n### Description:\n- #### Komodo-RPC library helps you integrate your Python Apps with Komodo asset-chains without having to setup/implement required RPC functions. Install this Python library and call Komodo-API RPCs as easily as calling a local function. Komodo-RPC library acts as a wrapper between your Python app and the Komodo-daemon running on a server.\n#####\n### Installation:\n#### Install 'komodorpc' Python Module:\n  - > ` pip install komodorpc `\n\n### Usage:\n``` {.sourceCode .python}\n>>> from komodo_rpc import KomodoRPC\n>>> import komodo.wallet as wallet\n>>> komodo_rpc = KomodoRPC(node_addr='127.0.0.1', rpc_port=98102, req_method='POST', rpc_username='user71631186',\n...                         rpc_password='pass725b1d10ae0c2217a8ffbgh30e5ca13367afvdl937bf1cbq11bd16f8a1e36d30')\n>>> result = wallet.getwalletinfo()\n>>> result\n'{\"result\":{\"walletversion\":60000,\"balance\":2000000.16063408,\"unconfirmed_balance\":0.00000000,\"immature_balance\":0.00000000,\"txcount\":15,\"keypoololdest\":1561025064,\"keypoolsize\":101,\"paytxfee\":0.00000000,\"seedfp\":\"7bd4d97c90d68f5921fee04e63168bd956d63346bf011c80d46e75b134385c\"},\"error\":null,\"id\":\"curltest\"}\\n'\n>>> \n```\n - #### Create an object of **KomodoRPC** class with following parameters to populate RPC options and authentication parameters.\n |   Argument   |                                   Description                                   |\n|:------------:|:-------------------------------------------------------------------------------:|\n|   node_addr  | IP address of the node where the Komodo-daemon is running; **Default: '127.0.0.1'** |\n|   rpc_port   |            Port number where the Komodo-daemon is listening for RPCs            |\n| rpc_username |                         Username for RPC authentication                         |\n| rpc_password |                         Password for RPC authentication                         |\n|  req_method  |                     Request Method for RPCs; Default: 'POST'                    |\n|  jsonrpc_ver |                              **Default:'1.0'**                                  |\n|  rpc_req_id  |                     ID for RPC requests **Default:'curltest'**                  |\n\n ``` {.sourceCode .python}\n >>> from komodo_rpc import KomodoRPC\n >>> komodo_rpc = KomodoRPC( node_addr='127.0.0.1',\n                         rpc_port='4524', \n                         req_method='POST', \n                         rpc_username='user32703390897', \n                         rpc_password='pass885b1d876131e0c2217a848ffbf5fe5ca34367af529a6d519abf8cbb5bd16f8a1e36d30'\n               )\n ```\n#####\n- #### API commands are segregated into different modules:\n|          Module         |                                                                                                                                                                               Description                                                                                                                                                                               |\n|:-----------------------:|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|\n|      komodo.address     |  Includes all address-related commands.<br> Example: <br> ```  import komodo.address as address ``` <br> ```  result = address.getaddressbalance(addresses=[\"RMTTgkYk6r5kCYiWGmoihdts61XZ\"]) ```                                                                                                                                                                  |\n|    komodo.blockchain    | Includes all blockchain-related commands.<br> Example: <br> ```  import komodo.blockchain as blockchain ``` <br> ```  result = blockchain.getbestblockhash() ```                                                                                                                                                                                                  |\n|      komodo.control     | Includes all Control commands.<br>  Example: <br> ```   import komodo.control as control ``` <br> ```  result = control.help(command='getwalletinfo') ```                                                                                                                                                                                    |\n|    komodo.disclosure    | Includes all disclosure-related commands. <br>  Example: <br> ```   import komodo.disclosure as disclosure``` <br> ```  result = disclosure.z_validatepaymentdisclosure(paymentdisclosure='zpd:76462047b6c204') ```                                                                                            |\n|     komodo.generate     | Includes all Generation commands. <br>  Example:<br> ```   import komodo.generate as generate``` <br> ```  result = generate.setgenerate(generate=False, genproclimit=2) ```                                                                                                                                                                 |\n|      komodo.jumblr      | Includes all Jumblr commands.<br>  Example: <br>   ``` import komodo.jumblr as jumblr``` <br> ```  result = jumblr.jumblr_deposit(depositaddress='RT4SUjG3QeGcedfpHtP5MhDeEGTA') ```                                                                                                                                                         |\n|      komodo.mining      | Includes all mining-related commands. <br>  Example: <br> ```   import komodo.mining as mining``` <br> ```  result = mining.getmininginfo() ```                                                                                                                                                                                              |\n|      komodo.network     | Includes all network-related commands. <br>  Example:<br> ```   import komodo.network as network``` <br> ``` result = network.getnetworkinfo() ```                                                                                                                                                                                                      |\n| komodo.raw_transactions | Includes all raw_transactions commands. <br>  Example: <br> ```   import komodo.raw_transactions as raw_transactions``` <br> ```  result = raw_transactions.createrawtransaction(transactions={'ff2c4c0c0d55310c9e1b7f193d7f69d7a5b662fc610':0},amounts={'R9fZXs2M6YiTNCQKqgPC4mR4cE3VQkAGzW':0.001}) ``` |\n|       komodo.util       | Includes all utility-related commands.<br>  Example: <br> ```   import komodo.util as util``` <br> ```  result = util.estimatepriority(num_blocks=2) ```                                                                                                                                                                                     |\n|      komodo.wallet      | Includes all wallet-related commands. <br>  Example:<br> ```  import komodo.wallet as wallet``` <br> ```  result = wallet.getwalletinfo() ```                                                                                                                                                                                                                     |\n#####\n### Documentation:\n- #### [Komodo API Guide](https://developers.komodoplatform.com/basic-docs/komodo-api/)\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/V413H4V/Komodo-RPC-Library-Python/", "keywords": "komodorpc,komodo", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "komodorpc", "package_url": "https://pypi.org/project/komodorpc/", "platform": "", "project_url": "https://pypi.org/project/komodorpc/", "project_urls": {"Homepage": "https://github.com/V413H4V/Komodo-RPC-Library-Python/"}, "release_url": "https://pypi.org/project/komodorpc/1.0/", "requires_dist": ["requests (>=2.22.0)"], "requires_python": "", "summary": "RPC API-Library for Komodo-based asset chains, for Python DApp Developers", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Komodo RPC API Library</h1>\n<h4>RPC API-Library for Komodo-based asset chains, for Python Developers.</h4>\n<p>===============================================================================</p>\n<h3>Description:</h3>\n<ul>\n<li>\n<h4>Komodo-RPC library helps you integrate your Python Apps with Komodo asset-chains without having to setup/implement required RPC functions. Install this Python library and call Komodo-API RPCs as easily as calling a local function. Komodo-RPC library acts as a wrapper between your Python app and the Komodo-daemon running on a server.</h4>\n</li>\n</ul>\n<h5></h5>\n<h3>Installation:</h3>\n<h4>Install 'komodorpc' Python Module:</h4>\n<ul>\n<li>\n<blockquote>\n<p><code>pip install komodorpc</code></p>\n</blockquote>\n</li>\n</ul>\n<h3>Usage:</h3>\n<pre>&gt;&gt;&gt; from komodo_rpc import KomodoRPC\n&gt;&gt;&gt; import komodo.wallet as wallet\n&gt;&gt;&gt; komodo_rpc = KomodoRPC(node_addr='127.0.0.1', rpc_port=98102, req_method='POST', rpc_username='user71631186',\n...                         rpc_password='pass725b1d10ae0c2217a8ffbgh30e5ca13367afvdl937bf1cbq11bd16f8a1e36d30')\n&gt;&gt;&gt; result = wallet.getwalletinfo()\n&gt;&gt;&gt; result\n'{\"result\":{\"walletversion\":60000,\"balance\":2000000.16063408,\"unconfirmed_balance\":0.00000000,\"immature_balance\":0.00000000,\"txcount\":15,\"keypoololdest\":1561025064,\"keypoolsize\":101,\"paytxfee\":0.00000000,\"seedfp\":\"7bd4d97c90d68f5921fee04e63168bd956d63346bf011c80d46e75b134385c\"},\"error\":null,\"id\":\"curltest\"}\\n'\n&gt;&gt;&gt; \n</pre>\n<ul>\n<li>\n<h4>Create an object of <strong>KomodoRPC</strong> class with following parameters to populate RPC options and authentication parameters.</h4>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Argument</th>\n<th align=\"center\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">node_addr</td>\n<td align=\"center\">IP address of the node where the Komodo-daemon is running; <strong>Default: '127.0.0.1'</strong></td>\n</tr>\n<tr>\n<td align=\"center\">rpc_port</td>\n<td align=\"center\">Port number where the Komodo-daemon is listening for RPCs</td>\n</tr>\n<tr>\n<td align=\"center\">rpc_username</td>\n<td align=\"center\">Username for RPC authentication</td>\n</tr>\n<tr>\n<td align=\"center\">rpc_password</td>\n<td align=\"center\">Password for RPC authentication</td>\n</tr>\n<tr>\n<td align=\"center\">req_method</td>\n<td align=\"center\">Request Method for RPCs; Default: 'POST'</td>\n</tr>\n<tr>\n<td align=\"center\">jsonrpc_ver</td>\n<td align=\"center\"><strong>Default:'1.0'</strong></td>\n</tr>\n<tr>\n<td align=\"center\">rpc_req_id</td>\n<td align=\"center\">ID for RPC requests <strong>Default:'curltest'</strong></td>\n</tr></tbody></table>\n<pre>&gt;&gt;&gt; from komodo_rpc import KomodoRPC\n&gt;&gt;&gt; komodo_rpc = KomodoRPC( node_addr='127.0.0.1',\n                        rpc_port='4524', \n                        req_method='POST', \n                        rpc_username='user32703390897', \n                        rpc_password='pass885b1d876131e0c2217a848ffbf5fe5ca34367af529a6d519abf8cbb5bd16f8a1e36d30'\n              )\n</pre>\n<h5></h5>\n<ul>\n<li>\n<h4>API commands are segregated into different modules:</h4>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Module</th>\n<th align=\"center\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">komodo.address</td>\n<td align=\"center\">Includes all address-related commands.<br> Example: <br> <code>import komodo.address as address</code> <br> <code>result = address.getaddressbalance(addresses=[\"RMTTgkYk6r5kCYiWGmoihdts61XZ\"])</code></td>\n</tr>\n<tr>\n<td align=\"center\">komodo.blockchain</td>\n<td align=\"center\">Includes all blockchain-related commands.<br> Example: <br> <code>import komodo.blockchain as blockchain</code> <br> <code>result = blockchain.getbestblockhash()</code></td>\n</tr>\n<tr>\n<td align=\"center\">komodo.control</td>\n<td align=\"center\">Includes all Control commands.<br>  Example: <br> <code>import komodo.control as control</code> <br> <code>result = control.help(command='getwalletinfo')</code></td>\n</tr>\n<tr>\n<td align=\"center\">komodo.disclosure</td>\n<td align=\"center\">Includes all disclosure-related commands. <br>  Example: <br> <code>import komodo.disclosure as disclosure</code> <br> <code>result = disclosure.z_validatepaymentdisclosure(paymentdisclosure='zpd:76462047b6c204')</code></td>\n</tr>\n<tr>\n<td align=\"center\">komodo.generate</td>\n<td align=\"center\">Includes all Generation commands. <br>  Example:<br> <code>import komodo.generate as generate</code> <br> <code>result = generate.setgenerate(generate=False, genproclimit=2)</code></td>\n</tr>\n<tr>\n<td align=\"center\">komodo.jumblr</td>\n<td align=\"center\">Includes all Jumblr commands.<br>  Example: <br>   <code>import komodo.jumblr as jumblr</code> <br> <code>result = jumblr.jumblr_deposit(depositaddress='RT4SUjG3QeGcedfpHtP5MhDeEGTA')</code></td>\n</tr>\n<tr>\n<td align=\"center\">komodo.mining</td>\n<td align=\"center\">Includes all mining-related commands. <br>  Example: <br> <code>import komodo.mining as mining</code> <br> <code>result = mining.getmininginfo()</code></td>\n</tr>\n<tr>\n<td align=\"center\">komodo.network</td>\n<td align=\"center\">Includes all network-related commands. <br>  Example:<br> <code>import komodo.network as network</code> <br> <code>result = network.getnetworkinfo()</code></td>\n</tr>\n<tr>\n<td align=\"center\">komodo.raw_transactions</td>\n<td align=\"center\">Includes all raw_transactions commands. <br>  Example: <br> <code>import komodo.raw_transactions as raw_transactions</code> <br> <code>result = raw_transactions.createrawtransaction(transactions={'ff2c4c0c0d55310c9e1b7f193d7f69d7a5b662fc610':0},amounts={'R9fZXs2M6YiTNCQKqgPC4mR4cE3VQkAGzW':0.001})</code></td>\n</tr>\n<tr>\n<td align=\"center\">komodo.util</td>\n<td align=\"center\">Includes all utility-related commands.<br>  Example: <br> <code>import komodo.util as util</code> <br> <code>result = util.estimatepriority(num_blocks=2)</code></td>\n</tr>\n<tr>\n<td align=\"center\">komodo.wallet</td>\n<td align=\"center\">Includes all wallet-related commands. <br>  Example:<br> <code>import komodo.wallet as wallet</code> <br> <code>result = wallet.getwalletinfo()</code></td>\n</tr></tbody></table>\n<h5></h5>\n<h3>Documentation:</h3>\n<ul>\n<li>\n<h4><a href=\"https://developers.komodoplatform.com/basic-docs/komodo-api/\" rel=\"nofollow\">Komodo API Guide</a></h4>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 5439234, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "e6d088a44e76ee17a96e570eabc5850d", "sha256": "a8d25f2e4da10fdac32664f8fb9b19f77d7fd6b1d9b0368a310a6a365f59d211"}, "downloads": -1, "filename": "komodorpc-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e6d088a44e76ee17a96e570eabc5850d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29534, "upload_time": "2019-06-24T06:56:07", "upload_time_iso_8601": "2019-06-24T06:56:07.432337Z", "url": "https://files.pythonhosted.org/packages/ee/28/e31e23edd8726ba85efc4762af04486168fd97ba92ecc1cde04baa6c5f3e/komodorpc-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e7a8b2e150288f5881fb8ad1cd23904", "sha256": "9f24f1ab430dfab9f5c6f1df4e1030761785e65dc1344671871587c6e9d70213"}, "downloads": -1, "filename": "komodorpc-1.0.tar.gz", "has_sig": false, "md5_digest": "7e7a8b2e150288f5881fb8ad1cd23904", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26179, "upload_time": "2019-06-24T06:56:09", "upload_time_iso_8601": "2019-06-24T06:56:09.674903Z", "url": "https://files.pythonhosted.org/packages/3c/a4/7eeb50a29c8ae0a49e8f3722563c173d7acc2749e241449baa6792c69f05/komodorpc-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e6d088a44e76ee17a96e570eabc5850d", "sha256": "a8d25f2e4da10fdac32664f8fb9b19f77d7fd6b1d9b0368a310a6a365f59d211"}, "downloads": -1, "filename": "komodorpc-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e6d088a44e76ee17a96e570eabc5850d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29534, "upload_time": "2019-06-24T06:56:07", "upload_time_iso_8601": "2019-06-24T06:56:07.432337Z", "url": "https://files.pythonhosted.org/packages/ee/28/e31e23edd8726ba85efc4762af04486168fd97ba92ecc1cde04baa6c5f3e/komodorpc-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e7a8b2e150288f5881fb8ad1cd23904", "sha256": "9f24f1ab430dfab9f5c6f1df4e1030761785e65dc1344671871587c6e9d70213"}, "downloads": -1, "filename": "komodorpc-1.0.tar.gz", "has_sig": false, "md5_digest": "7e7a8b2e150288f5881fb8ad1cd23904", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26179, "upload_time": "2019-06-24T06:56:09", "upload_time_iso_8601": "2019-06-24T06:56:09.674903Z", "url": "https://files.pythonhosted.org/packages/3c/a4/7eeb50a29c8ae0a49e8f3722563c173d7acc2749e241449baa6792c69f05/komodorpc-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:03 2020"}