{"info": {"author": "Miroslav Shubernetskiy", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4"], "description": "=============================\nImportanize (import organize)\n=============================\n\n.. image:: https://badge.fury.io/py/importanize.png\n    :target: http://badge.fury.io/py/importanize\n\n.. image:: https://travis-ci.org/miki725/importanize.png?branch=master\n    :target: https://travis-ci.org/miki725/importanize\n\n.. image:: https://coveralls.io/repos/miki725/importanize/badge.png?branch=master\n    :target: https://coveralls.io/r/miki725/importanize?branch=master\n\nUtility for organizing Python imports using PEP8 or custom rules\n\n* Free software: MIT license\n* GitHub: https://github.com/miki725/importanize\n\nInstalling\n----------\n\nYou can install ``importanize`` using pip::\n\n    $ pip install importanize\n\nWhy?\n----\n\nI think imports are important in Python. I also think PEP8 is awesome\n(if you disagree, read some PHP) and there are many tools to help\ndevelopers reformat code to match PEP8. There are however fewer tools\nfor organizing imports either by following PEP8 or custom rules.\nThere is `isort <http://isort.readthedocs.org/en/latest/>`_\n(which unfortunately I found out about after writing this lib)\nhowever it seems to do lots of magic to determine which packages\nare 3rd party, local packages, etc. I wanted the imports configuration\nto be simple and explicit.\nThis is where ``importanize`` comes in. It allows to organize\nPython imports using PEP8 or your custom rules. Read on for\nmore information.\n\nUsing\n-----\n\nUsing ``importanize`` is super easy. Just run::\n\n    $ importanize file_to_organize.py\n\nThat will re-format all imports in the given file.\nAs part of the default configuration, ``importanize`` will try\nit's best to organize imports to follow PEP8 however that is a rather\nchallenging task, since it is difficult to determine all import groups\nas suggested by `PEP8 <http://legacy.python.org/dev/peps/pep-0008/#imports>`_:\n\n1) standard library imports\n2) related third party imports\n3) local application/library specific imports\n\nTo help ``importanize`` distinguish between different import groups in most\ncases it would be recommended to use custom config file::\n\n    $ importanize file_to_organize.py config.json\n\nConfig file is simply a ``json`` file like this::\n\n    {\n        \"formatter\": \"grouped\",\n        \"groups\": [\n            {\n                \"type\": \"stdlib\"\n            },\n            {\n                \"type\": \"sitepackages\"\n            },\n            {\n                \"type\": \"remainder\"\n            },\n            {\n                \"type\": \"packages\",\n                \"packages\": [\n                    \"my_favorite_package\"\n                ]\n            },\n            {\n                \"type\": \"local\"\n            }\n        ]\n    }\n\nDefault config looks something like::\n\n    {\n        \"groups\": [\n            {\n                \"type\": \"stdlib\"\n            },\n            {\n                \"type\": \"sitepackages\"\n            },\n            {\n                \"type\": \"remainder\"\n            },\n            {\n                \"type\": \"local\"\n            }\n        ]\n    }\n\nCurrently the only required key is ``\"groups\"`` which must be an array\nof group definitions. ``importanize`` will use these group definitions\nto organize imports and will output import groups in the same order\nas defined in the config file. These are the supported group types:\n\n* ``stdlib`` - standard library imports including ``__future__``\n* ``sitepackages`` - imports coming from the ``site-packages`` directory\n* ``local`` - local imports which start with ``\".\"``. for example\n  ``from .foo import bar``\n* ``packages`` - if this group is specified, additional key ``packages``\n  is required within import group definition which should list\n  all Python packages (root level) which should be included in that group::\n\n      {\n          \"type\": \"packages\",\n          \"packages\": [\"foo\", \"bar\"]\n      }\n\n* ``remaining`` - all remaining imports which did not satisfy requirements\n  of all other groups will go to this group.\n\nYou can use the config file by specifying it in the ``importanize``\ncommand as shown above however you can also create an ``.importanizerc``\nfile and commit that to your repository. As a matter of fact,\nyou can see the\n`.importanizerc <https://github.com/miki725/importanize/blob/master/.importanizerc>`_\nconfig file used for the importanize repository itself.\nAdditionally multiple configurations are supported within a single repository\nvia sub-configurations. Simply place ``.importanizerc`` within a sub-folder\nand all imports will be reconfigured under that folder.\n\nYou can also choose the formatter used to organize long multiline imports.\nCurrently, there are two formatters available:\n\n* ``grouped`` (default)\n* ``inline-grouped``\n\nIt can be set using the formatter config value, or the formatter option, for\nexample::\n\n    $ importanize --formatter=inline-group --print tests/test_data/input.txt\n\n\nFinally, you can see all other available ``importanize`` cli options::\n\n    $ importanize --help\n\nNot all configurations can be provided via cli.\nAdditional available configurations in configuration file:\n\n* ``length`` - line length after which the formatter will split imports\n* ``exclude`` - list of glob patterns of files which should be excluded from organizing.\n  For example::\n\n        \"exclude\": [\n            \"path/to/file\",\n            \"path/to/files/ignore_*.py\"\n        ]\n\n* ``after_imports_new_lines`` - number of lines to be included after imports\n* ``add_imports`` - list of imports to add to every file.\n  For example::\n\n        \"add_imports\": [\n            \"from __future__ import absolute_import, print_function, unicode_literals\"\n        ]\n\nIt integrates with pre-commit_. You can use the following config\n\n::\n\n    repos:\n    - repo: https://github.com/miki725/importanize/\n      rev: 'master'\n      hooks:\n      - id: importanize\n        args: [--verbose]\n\nExample\n-------\n\nHere is a before and after using the default formatter(on hypothetical file):\n\nBefore\n~~~~~~\n\n::\n\n    from __future__ import unicode_literals, print_function\n    import os.path as ospath\n    import datetime\n    from package.subpackage.module.submodule import CONSTANT, Klass, foo, bar, rainbows\n    from .module import foo, bar\n    from ..othermodule import rainbows\n\nAfter\n~~~~~\n\n::\n\n    from __future__ import print_function, unicode_literals\n    import datetime\n    from os import path as ospath\n\n    from package.subpackage.module.submodule import (\n        CONSTANT,\n        Klass,\n        bar,\n        foo,\n        rainbows,\n    )\n\n    from ..othermodule import rainbows\n    from .module import bar, foo\n\nHere is what ``importanize`` did:\n\n* alphabetical sort, even inside import line (look at ``__future__``)\n* normalized ``import .. as ..`` into ``from .. import .. as ..``\n* broke long import (>80 chars) which has more than one import\n  into multiple lines\n* reordered some imports (e.g. local imports ``..`` should be before ``.``)\n\nTesting\n-------\n\nTo run the tests you need to install testing requirements first::\n\n    $ make install\n\nThen to run tests, you can use ``nosetests`` or simply use Makefile command::\n\n    $ nosetests -sv\n    # or\n    $ make test\n\n.. _pre-commit: https://pre-commit.com/\n\n\n\n\nHistory\n-------\n\n0.7.0 (2018-06-06)\n~~~~~~~~~~~~~~~~~~\n\n* Fixed removing first line in files without imports.\n* Added ``--list`` option to list all found imports grouped by same packages as in config.\n\n0.6.4 (2018-05-29)\n~~~~~~~~~~~~~~~~~~\n\n* Added support for custom line length.\n\n0.6.3 (2018-01-27)\n~~~~~~~~~~~~~~~~~~\n\n* Fixed (again) importanize hanging when provided relative file path when finding sub-configurations.\n\n0.6.2 (2018-01-08)\n~~~~~~~~~~~~~~~~~~\n\n* Fixed importanize failing on empty files.\n  Thanks `Milind <https://github.com/milin>`_.\n* Fixed importanize hanging when provided relative file path when finding sub-configurations.\n  Thanks `Milind <https://github.com/milin>`_.\n\n0.6.1 (2017-10-06)\n~~~~~~~~~~~~~~~~~~\n\n* Fixed sub-configrations. They are searched when organizing individual files now.\n\n0.6.0 (2017-10-06)\n~~~~~~~~~~~~~~~~~~\n\n* Added support for sub-configurations when ``.importanize`` is found.\n* Added support for ``add_imports`` in configuration.\n\n0.5.3 (2017-06-06)\n~~~~~~~~~~~~~~~~~~\n\n* Added support to customize number of new lines added after imports\n  via ``after_imports_new_lines`` configuration.\n  Useful when using auto formatters such as ``yapf``.\n\n0.5.2 (2017-05-18)\n~~~~~~~~~~~~~~~~~~\n\n* Skipping directories which makes skipping subfolders much faster\n* Fixed bug which incorrectly skipped files\n\n0.5.1 (2017-05-09)\n~~~~~~~~~~~~~~~~~~\n\n* Fixed bug which incorrectly removed duplicate leafless imports which had different ``as`` names\n\n0.5.0 (2017-05-03)\n~~~~~~~~~~~~~~~~~~\n\n* Added ``--ci`` flag to validate import organization in files\n* Added ``sitepackages`` import group. Thanks `Pamela <https://github.com/PamelaM>`_.\n  See ``README`` for more info\n* Added pipe handling (e.g. ``cat foo.py | importanize``)\n* Fixed bug which incorrectly sorted imports with aliases (e.g. ``import foo as bar``)\n* Files are not overridden when imports are already organized.\n  Useful in precommit hooks which detect changed files.\n* Released as Python `wheel <http://pythonwheels.com/>`_\n\n0.4.1 (2015-07-28)\n~~~~~~~~~~~~~~~~~~\n\n* Fixed a bug where ``importanize`` did not correctly detect stdlibs on Windows\n  (see `#29 <https://github.com/miki725/importanize/issues/29/>`_)\n* Removed ``future`` dependency since ``six>=1.9`` includes all the used features\n* Fixed tests to be executable on Windows\n\n0.4 (2015-04-13)\n~~~~~~~~~~~~~~~~\n\n* Added multiple formatter options. Can be used using ``--formatter``\n  flag or can be set in the configuration file.\n* Fixes a bug in parsing imports when encountering both ``\\`` and ``()``\n  (see `#26 <https://github.com/miki725/importanize/issues/26>`_ for example)\n* Fixes a bug where wildcard leaf imports were combined with other others\n  (see `#25 <https://github.com/miki725/importanize/issues/25/>`_ for example)\n\n0.3 (2015-01-18)\n~~~~~~~~~~~~~~~~\n\n* Using tokens to parse Python files. As a result this allows to\n  fix how comments are handled\n  (see `#21 <https://github.com/miki725/importanize/issues/21>`_ for example)\n\n0.2 (2014-10-30)\n~~~~~~~~~~~~~~~~\n\n* New \"exclude\" config which allows to skip files\n* Presetving origin file new line characters\n* Traversing parent paths to find importanize config file\n\n0.1.4 (2014-10-12)\n~~~~~~~~~~~~~~~~~~\n\n* Multiple imports (e.g. ``import a, b``) are normalized\n  instead of exiting\n* Multiple imports with the same stem are combined into\n  single import statement\n  (see `#17 <https://github.com/miki725/importanize/issues/17>`_ for example)\n\n0.1.3 (2014-09-15)\n~~~~~~~~~~~~~~~~~~\n\n* Fixed where single line triple-quote docstrings would cause\n  none of the imports to be recognized\n\n0.1.2 (2014-09-15)\n~~~~~~~~~~~~~~~~~~\n\n* Fixed where import leafs were not properly sorted for\n  mixed case (aka CamelCase)\n\n0.1.1 (2014-09-07)\n~~~~~~~~~~~~~~~~~~\n\n* Ignoring comment blocks when parsing for imports\n* Fixed bug when imports start on a first line,\n  extra lines were being added to the file.\n\n0.1.0 (2014-09-07)\n~~~~~~~~~~~~~~~~~~\n\n* First release on PyPI.\n\n\nCredits\n-------\n\nDevelopment Lead\n~~~~~~~~~~~~~~~~\n\n* Miroslav Shubernetskiy  - https://github.com/miki725\n\nContributors\n~~~~~~~~~~~~\n\n* Benjamin Abel  - https://github.com/benjaminabel\n* Pamela McA'Nulty - https://github.com/PamelaM\n* Milind Shakya - https://github.com/milin\n* Serkan Hosca - https://github.com/shosca\n\n\nLicense\n-------\n\nThe MIT License (MIT)\n\nCopyright (c) 2014, Miroslav Shubernetskiy\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/miki725/importanize", "keywords": "importanize", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "importanize", "package_url": "https://pypi.org/project/importanize/", "platform": "", "project_url": "https://pypi.org/project/importanize/", "project_urls": {"Homepage": "https://github.com/miki725/importanize"}, "release_url": "https://pypi.org/project/importanize/0.7.0/", "requires_dist": null, "requires_python": "", "summary": "Utility for organizing Python imports using PEP8 or custom rules", "version": "0.7.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://badge.fury.io/py/importanize\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/importanize.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d58f859653cb4ca1b338fdf41eaeeb8e8d1e0a9e/68747470733a2f2f62616467652e667572792e696f2f70792f696d706f7274616e697a652e706e67\"></a>\n<a href=\"https://travis-ci.org/miki725/importanize\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/miki725/importanize.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/969495d2657b8b36c0a1fba11fb87c6382bdd9eb/68747470733a2f2f7472617669732d63692e6f72672f6d696b693732352f696d706f7274616e697a652e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/miki725/importanize?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/miki725/importanize/badge.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/06ab660be172337eec21e474880d2741df90e295/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6d696b693732352f696d706f7274616e697a652f62616467652e706e673f6272616e63683d6d6173746572\"></a>\n<p>Utility for organizing Python imports using PEP8 or custom rules</p>\n<ul>\n<li>Free software: MIT license</li>\n<li>GitHub: <a href=\"https://github.com/miki725/importanize\" rel=\"nofollow\">https://github.com/miki725/importanize</a></li>\n</ul>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>You can install <tt>importanize</tt> using pip:</p>\n<pre>$ pip install importanize\n</pre>\n</div>\n<div id=\"why\">\n<h2>Why?</h2>\n<p>I think imports are important in Python. I also think PEP8 is awesome\n(if you disagree, read some PHP) and there are many tools to help\ndevelopers reformat code to match PEP8. There are however fewer tools\nfor organizing imports either by following PEP8 or custom rules.\nThere is <a href=\"http://isort.readthedocs.org/en/latest/\" rel=\"nofollow\">isort</a>\n(which unfortunately I found out about after writing this lib)\nhowever it seems to do lots of magic to determine which packages\nare 3rd party, local packages, etc. I wanted the imports configuration\nto be simple and explicit.\nThis is where <tt>importanize</tt> comes in. It allows to organize\nPython imports using PEP8 or your custom rules. Read on for\nmore information.</p>\n</div>\n<div id=\"using\">\n<h2>Using</h2>\n<p>Using <tt>importanize</tt> is super easy. Just run:</p>\n<pre>$ importanize file_to_organize.py\n</pre>\n<p>That will re-format all imports in the given file.\nAs part of the default configuration, <tt>importanize</tt> will try\nit\u2019s best to organize imports to follow PEP8 however that is a rather\nchallenging task, since it is difficult to determine all import groups\nas suggested by <a href=\"http://legacy.python.org/dev/peps/pep-0008/#imports\" rel=\"nofollow\">PEP8</a>:</p>\n<ol>\n<li>standard library imports</li>\n<li>related third party imports</li>\n<li>local application/library specific imports</li>\n</ol>\n<p>To help <tt>importanize</tt> distinguish between different import groups in most\ncases it would be recommended to use custom config file:</p>\n<pre>$ importanize file_to_organize.py config.json\n</pre>\n<p>Config file is simply a <tt>json</tt> file like this:</p>\n<pre>{\n    \"formatter\": \"grouped\",\n    \"groups\": [\n        {\n            \"type\": \"stdlib\"\n        },\n        {\n            \"type\": \"sitepackages\"\n        },\n        {\n            \"type\": \"remainder\"\n        },\n        {\n            \"type\": \"packages\",\n            \"packages\": [\n                \"my_favorite_package\"\n            ]\n        },\n        {\n            \"type\": \"local\"\n        }\n    ]\n}\n</pre>\n<p>Default config looks something like:</p>\n<pre>{\n    \"groups\": [\n        {\n            \"type\": \"stdlib\"\n        },\n        {\n            \"type\": \"sitepackages\"\n        },\n        {\n            \"type\": \"remainder\"\n        },\n        {\n            \"type\": \"local\"\n        }\n    ]\n}\n</pre>\n<p>Currently the only required key is <tt>\"groups\"</tt> which must be an array\nof group definitions. <tt>importanize</tt> will use these group definitions\nto organize imports and will output import groups in the same order\nas defined in the config file. These are the supported group types:</p>\n<ul>\n<li><p><tt>stdlib</tt> - standard library imports including <tt>__future__</tt></p>\n</li>\n<li><p><tt>sitepackages</tt> - imports coming from the <tt><span class=\"pre\">site-packages</span></tt> directory</p>\n</li>\n<li><p><tt>local</tt> - local imports which start with <tt>\".\"</tt>. for example\n<tt>from .foo import bar</tt></p>\n</li>\n<li><p><tt>packages</tt> - if this group is specified, additional key <tt>packages</tt>\nis required within import group definition which should list\nall Python packages (root level) which should be included in that group:</p>\n<pre>{\n    \"type\": \"packages\",\n    \"packages\": [\"foo\", \"bar\"]\n}\n</pre>\n</li>\n<li><p><tt>remaining</tt> - all remaining imports which did not satisfy requirements\nof all other groups will go to this group.</p>\n</li>\n</ul>\n<p>You can use the config file by specifying it in the <tt>importanize</tt>\ncommand as shown above however you can also create an <tt>.importanizerc</tt>\nfile and commit that to your repository. As a matter of fact,\nyou can see the\n<a href=\"https://github.com/miki725/importanize/blob/master/.importanizerc\" rel=\"nofollow\">.importanizerc</a>\nconfig file used for the importanize repository itself.\nAdditionally multiple configurations are supported within a single repository\nvia sub-configurations. Simply place <tt>.importanizerc</tt> within a sub-folder\nand all imports will be reconfigured under that folder.</p>\n<p>You can also choose the formatter used to organize long multiline imports.\nCurrently, there are two formatters available:</p>\n<ul>\n<li><tt>grouped</tt> (default)</li>\n<li><tt><span class=\"pre\">inline-grouped</span></tt></li>\n</ul>\n<p>It can be set using the formatter config value, or the formatter option, for\nexample:</p>\n<pre>$ importanize --formatter=inline-group --print tests/test_data/input.txt\n</pre>\n<p>Finally, you can see all other available <tt>importanize</tt> cli options:</p>\n<pre>$ importanize --help\n</pre>\n<p>Not all configurations can be provided via cli.\nAdditional available configurations in configuration file:</p>\n<ul>\n<li><p><tt>length</tt> - line length after which the formatter will split imports</p>\n</li>\n<li><p><tt>exclude</tt> - list of glob patterns of files which should be excluded from organizing.\nFor example:</p>\n<pre>\"exclude\": [\n    \"path/to/file\",\n    \"path/to/files/ignore_*.py\"\n]\n</pre>\n</li>\n<li><p><tt>after_imports_new_lines</tt> - number of lines to be included after imports</p>\n</li>\n<li><p><tt>add_imports</tt> - list of imports to add to every file.\nFor example:</p>\n<pre>\"add_imports\": [\n    \"from __future__ import absolute_import, print_function, unicode_literals\"\n]\n</pre>\n</li>\n</ul>\n<p>It integrates with <a href=\"https://pre-commit.com/\" rel=\"nofollow\">pre-commit</a>. You can use the following config</p>\n<pre>repos:\n- repo: https://github.com/miki725/importanize/\n  rev: 'master'\n  hooks:\n  - id: importanize\n    args: [--verbose]\n</pre>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>Here is a before and after using the default formatter(on hypothetical file):</p>\n<div id=\"before\">\n<h3>Before</h3>\n<pre>from __future__ import unicode_literals, print_function\nimport os.path as ospath\nimport datetime\nfrom package.subpackage.module.submodule import CONSTANT, Klass, foo, bar, rainbows\nfrom .module import foo, bar\nfrom ..othermodule import rainbows\n</pre>\n</div>\n<div id=\"after\">\n<h3>After</h3>\n<pre>from __future__ import print_function, unicode_literals\nimport datetime\nfrom os import path as ospath\n\nfrom package.subpackage.module.submodule import (\n    CONSTANT,\n    Klass,\n    bar,\n    foo,\n    rainbows,\n)\n\nfrom ..othermodule import rainbows\nfrom .module import bar, foo\n</pre>\n<p>Here is what <tt>importanize</tt> did:</p>\n<ul>\n<li>alphabetical sort, even inside import line (look at <tt>__future__</tt>)</li>\n<li>normalized <tt>import .. as ..</tt> into <tt>from .. import .. as ..</tt></li>\n<li>broke long import (&gt;80 chars) which has more than one import\ninto multiple lines</li>\n<li>reordered some imports (e.g. local imports <tt>..</tt> should be before <tt>.</tt>)</li>\n</ul>\n</div>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>To run the tests you need to install testing requirements first:</p>\n<pre>$ make install\n</pre>\n<p>Then to run tests, you can use <tt>nosetests</tt> or simply use Makefile command:</p>\n<pre>$ nosetests -sv\n# or\n$ make test\n</pre>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.7.0 (2018-06-06)</h3>\n<ul>\n<li>Fixed removing first line in files without imports.</li>\n<li>Added <tt><span class=\"pre\">--list</span></tt> option to list all found imports grouped by same packages as in config.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.6.4 (2018-05-29)</h3>\n<ul>\n<li>Added support for custom line length.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.6.3 (2018-01-27)</h3>\n<ul>\n<li>Fixed (again) importanize hanging when provided relative file path when finding sub-configurations.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.6.2 (2018-01-08)</h3>\n<ul>\n<li>Fixed importanize failing on empty files.\nThanks <a href=\"https://github.com/milin\" rel=\"nofollow\">Milind</a>.</li>\n<li>Fixed importanize hanging when provided relative file path when finding sub-configurations.\nThanks <a href=\"https://github.com/milin\" rel=\"nofollow\">Milind</a>.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.6.1 (2017-10-06)</h3>\n<ul>\n<li>Fixed sub-configrations. They are searched when organizing individual files now.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.6.0 (2017-10-06)</h3>\n<ul>\n<li>Added support for sub-configurations when <tt>.importanize</tt> is found.</li>\n<li>Added support for <tt>add_imports</tt> in configuration.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.5.3 (2017-06-06)</h3>\n<ul>\n<li>Added support to customize number of new lines added after imports\nvia <tt>after_imports_new_lines</tt> configuration.\nUseful when using auto formatters such as <tt>yapf</tt>.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.5.2 (2017-05-18)</h3>\n<ul>\n<li>Skipping directories which makes skipping subfolders much faster</li>\n<li>Fixed bug which incorrectly skipped files</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.5.1 (2017-05-09)</h3>\n<ul>\n<li>Fixed bug which incorrectly removed duplicate leafless imports which had different <tt>as</tt> names</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.5.0 (2017-05-03)</h3>\n<ul>\n<li>Added <tt><span class=\"pre\">--ci</span></tt> flag to validate import organization in files</li>\n<li>Added <tt>sitepackages</tt> import group. Thanks <a href=\"https://github.com/PamelaM\" rel=\"nofollow\">Pamela</a>.\nSee <tt>README</tt> for more info</li>\n<li>Added pipe handling (e.g. <tt>cat foo.py | importanize</tt>)</li>\n<li>Fixed bug which incorrectly sorted imports with aliases (e.g. <tt>import foo as bar</tt>)</li>\n<li>Files are not overridden when imports are already organized.\nUseful in precommit hooks which detect changed files.</li>\n<li>Released as Python <a href=\"http://pythonwheels.com/\" rel=\"nofollow\">wheel</a></li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.4.1 (2015-07-28)</h3>\n<ul>\n<li>Fixed a bug where <tt>importanize</tt> did not correctly detect stdlibs on Windows\n(see <a href=\"https://github.com/miki725/importanize/issues/29/\" rel=\"nofollow\">#29</a>)</li>\n<li>Removed <tt>future</tt> dependency since <tt><span class=\"pre\">six&gt;=1.9</span></tt> includes all the used features</li>\n<li>Fixed tests to be executable on Windows</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>0.4 (2015-04-13)</h3>\n<ul>\n<li>Added multiple formatter options. Can be used using <tt><span class=\"pre\">--formatter</span></tt>\nflag or can be set in the configuration file.</li>\n<li>Fixes a bug in parsing imports when encountering both <tt>\\</tt> and <tt>()</tt>\n(see <a href=\"https://github.com/miki725/importanize/issues/26\" rel=\"nofollow\">#26</a> for example)</li>\n<li>Fixes a bug where wildcard leaf imports were combined with other others\n(see <a href=\"https://github.com/miki725/importanize/issues/25/\" rel=\"nofollow\">#25</a> for example)</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>0.3 (2015-01-18)</h3>\n<ul>\n<li>Using tokens to parse Python files. As a result this allows to\nfix how comments are handled\n(see <a href=\"https://github.com/miki725/importanize/issues/21\" rel=\"nofollow\">#21</a> for example)</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3>0.2 (2014-10-30)</h3>\n<ul>\n<li>New \u201cexclude\u201d config which allows to skip files</li>\n<li>Presetving origin file new line characters</li>\n<li>Traversing parent paths to find importanize config file</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3>0.1.4 (2014-10-12)</h3>\n<ul>\n<li>Multiple imports (e.g. <tt>import a, b</tt>) are normalized\ninstead of exiting</li>\n<li>Multiple imports with the same stem are combined into\nsingle import statement\n(see <a href=\"https://github.com/miki725/importanize/issues/17\" rel=\"nofollow\">#17</a> for example)</li>\n</ul>\n</div>\n<div id=\"id22\">\n<h3>0.1.3 (2014-09-15)</h3>\n<ul>\n<li>Fixed where single line triple-quote docstrings would cause\nnone of the imports to be recognized</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h3>0.1.2 (2014-09-15)</h3>\n<ul>\n<li>Fixed where import leafs were not properly sorted for\nmixed case (aka CamelCase)</li>\n</ul>\n</div>\n<div id=\"id24\">\n<h3>0.1.1 (2014-09-07)</h3>\n<ul>\n<li>Ignoring comment blocks when parsing for imports</li>\n<li>Fixed bug when imports start on a first line,\nextra lines were being added to the file.</li>\n</ul>\n</div>\n<div id=\"id25\">\n<h3>0.1.0 (2014-09-07)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<div id=\"development-lead\">\n<h3>Development Lead</h3>\n<ul>\n<li>Miroslav Shubernetskiy  - <a href=\"https://github.com/miki725\" rel=\"nofollow\">https://github.com/miki725</a></li>\n</ul>\n</div>\n<div id=\"contributors\">\n<h3>Contributors</h3>\n<ul>\n<li>Benjamin Abel  - <a href=\"https://github.com/benjaminabel\" rel=\"nofollow\">https://github.com/benjaminabel</a></li>\n<li>Pamela McA\u2019Nulty - <a href=\"https://github.com/PamelaM\" rel=\"nofollow\">https://github.com/PamelaM</a></li>\n<li>Milind Shakya - <a href=\"https://github.com/milin\" rel=\"nofollow\">https://github.com/milin</a></li>\n<li>Serkan Hosca - <a href=\"https://github.com/shosca\" rel=\"nofollow\">https://github.com/shosca</a></li>\n</ul>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The MIT License (MIT)</p>\n<p>Copyright (c) 2014, Miroslav Shubernetskiy</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \u201cSoftware\u201d), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.</p>\n</div>\n\n          </div>"}, "last_serial": 3939712, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4b54cec6b024d6e0a2165e7657b51f15", "sha256": "5d7068335e07f7d240338c4e072c147aae25a145c0fac0aa23c127161c8c3d96"}, "downloads": -1, "filename": "importanize-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4b54cec6b024d6e0a2165e7657b51f15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17222, "upload_time": "2014-09-06T21:34:57", "upload_time_iso_8601": "2014-09-06T21:34:57.616744Z", "url": "https://files.pythonhosted.org/packages/da/b5/c8baf362b854cdc26776d62214c9dc0f7399447175657a149f92dbfd6801/importanize-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4d6336e6d895e7dfbd546bdb3f5dabe8", "sha256": "70bf4882add076fd9ee9e87183df5c5021498155b21680a2c1e30f03ecf31fea"}, "downloads": -1, "filename": "importanize-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4d6336e6d895e7dfbd546bdb3f5dabe8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15766, "upload_time": "2014-09-07T12:07:57", "upload_time_iso_8601": "2014-09-07T12:07:57.718325Z", "url": "https://files.pythonhosted.org/packages/cb/50/7ee02f7c77e8fb31c2f23036bdd737b4f0498d1a35a208093f28c992f1f3/importanize-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "4508a1c018577cbc1767e87f52aeb049", "sha256": "310c01c1ad62be053e11f746b7bb1bb3ae7ed3e636b181a54c8e1cd839d249a2"}, "downloads": -1, "filename": "importanize-0.1.2.tar.gz", "has_sig": false, "md5_digest": "4508a1c018577cbc1767e87f52aeb049", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18434, "upload_time": "2014-09-15T16:07:51", "upload_time_iso_8601": "2014-09-15T16:07:51.275663Z", "url": "https://files.pythonhosted.org/packages/cb/1a/25b18377e9f84342593512973ccf0c0f4d031cfab1f56c68e1f59fb5b602/importanize-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "fedc3765b01d501d23bf466937cd783e", "sha256": "0f91afa8015dbd4a622cccc1acf145779c5cfa56520e0914ec4eeefb52b510df"}, "downloads": -1, "filename": "importanize-0.1.3.tar.gz", "has_sig": false, "md5_digest": "fedc3765b01d501d23bf466937cd783e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18592, "upload_time": "2014-09-15T18:36:56", "upload_time_iso_8601": "2014-09-15T18:36:56.354593Z", "url": "https://files.pythonhosted.org/packages/02/3a/a1c0ee6dce49426050aadcc896ceb40fc411fdadeed69b3fca8c2b7798f3/importanize-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "d972fcdd67bb2ca906c231d698b9dd48", "sha256": "5e027c1f9b9227f99b95be98b1f54fa194d66d91314aeaaca096c84287e2e74a"}, "downloads": -1, "filename": "importanize-0.1.4.tar.gz", "has_sig": false, "md5_digest": "d972fcdd67bb2ca906c231d698b9dd48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16630, "upload_time": "2014-10-12T15:37:52", "upload_time_iso_8601": "2014-10-12T15:37:52.116469Z", "url": "https://files.pythonhosted.org/packages/af/9f/3d78e9b172519a70dc05e8c3f4bde952a83c847ec1ef402d57bbdadee7c3/importanize-0.1.4.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "cface83068c7ff91e2b6f4e3d145ce16", "sha256": "d6e7ed9bce89ea13e82ec4e79778974018bf8669398d936f27758f05d45b9c9f"}, "downloads": -1, "filename": "importanize-0.2.tar.gz", "has_sig": false, "md5_digest": "cface83068c7ff91e2b6f4e3d145ce16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21455, "upload_time": "2014-10-30T21:44:20", "upload_time_iso_8601": "2014-10-30T21:44:20.602343Z", "url": "https://files.pythonhosted.org/packages/2a/ff/0cac0aa651b73b6b60ecb4bce04bde7765d6324f846876e16bf6698ae2ec/importanize-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "4303d40f39a621768b851072be041647", "sha256": "cd5e3d2cc2db2ded8e6cdae8e60ff3a7fa3d1a51c262cd8d56aa755e216cd4f7"}, "downloads": -1, "filename": "importanize-0.3.tar.gz", "has_sig": false, "md5_digest": "4303d40f39a621768b851072be041647", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23487, "upload_time": "2015-01-20T22:41:24", "upload_time_iso_8601": "2015-01-20T22:41:24.796617Z", "url": "https://files.pythonhosted.org/packages/3f/71/9bc6cc8680bd8f2131552a2ed5311c38836cd1fba17af4bf90bc4f2ac20c/importanize-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "42deb11ac5b0d16e12bc4432b15bb8ef", "sha256": "a39a908fdce2a2ae426bcb2d480756ee9d48cd0bdbf5c889cfe4b7b8cf4a3837"}, "downloads": -1, "filename": "importanize-0.4.tar.gz", "has_sig": false, "md5_digest": "42deb11ac5b0d16e12bc4432b15bb8ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23551, "upload_time": "2015-04-14T02:52:13", "upload_time_iso_8601": "2015-04-14T02:52:13.212791Z", "url": "https://files.pythonhosted.org/packages/e2/f1/744e50a89f3677674a239a39499c72d6e53879229f57b13fc9d166653de2/importanize-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "84eb9e9087c17676f8b2e5cb2668b2dd", "sha256": "f35774b8eacc675f3b957f95d144b1b2492311a2812d58faf5cf91b7f2e7debd"}, "downloads": -1, "filename": "importanize-0.4.1.tar.gz", "has_sig": false, "md5_digest": "84eb9e9087c17676f8b2e5cb2668b2dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26614, "upload_time": "2015-07-28T14:14:20", "upload_time_iso_8601": "2015-07-28T14:14:20.846600Z", "url": "https://files.pythonhosted.org/packages/b8/7a/07578b2bdf31ea2e5521f3cd6179cd09c58dfb32d25a4f0f18473a598a43/importanize-0.4.1.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "5cc9f35f5554ee6b1802288563e3f1ea", "sha256": "f0f391c96ad55e01e5898b42e338ead3aafb2d46baa79a7d4ed95fe5ee2bacc5"}, "downloads": -1, "filename": "importanize-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "5cc9f35f5554ee6b1802288563e3f1ea", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 31922, "upload_time": "2017-05-04T14:57:19", "upload_time_iso_8601": "2017-05-04T14:57:19.844755Z", "url": "https://files.pythonhosted.org/packages/dd/8c/bd06480d2f5b6f4f8a70c5b65655033f6ad697b564699551ef600c1c21d4/importanize-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50507754fea611bc057511f93664720b", "sha256": "23b9073fce26d3e5bb1a8eb51c36799b05606038193fa46c992514496a5fa68e"}, "downloads": -1, "filename": "importanize-0.5.tar.gz", "has_sig": false, "md5_digest": "50507754fea611bc057511f93664720b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25237, "upload_time": "2017-05-04T14:57:18", "upload_time_iso_8601": "2017-05-04T14:57:18.052045Z", "url": "https://files.pythonhosted.org/packages/92/28/4d277c1425de653713bd97f7cbcb40fea9a8a5555e3f922ae960c980ca47/importanize-0.5.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "8d2c5fcab19f3f53e029a011b2fe2d7b", "sha256": "17343b248d85f946e39ad295a5cf505c3b241edb310e2a11d6c91a4d18908ec6"}, "downloads": -1, "filename": "importanize-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8d2c5fcab19f3f53e029a011b2fe2d7b", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 32067, "upload_time": "2017-05-09T17:17:14", "upload_time_iso_8601": "2017-05-09T17:17:14.968189Z", "url": "https://files.pythonhosted.org/packages/14/bf/39754375bdf241ae6b2c95e5cdaddec93b0f90a3f6bb3db8f3cdd6039e0f/importanize-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67dd7938fa3801435b242bf0ba7fae69", "sha256": "89eaeaba8d603e752e06f934f6439d0d40adb2a3bc6c53148b47e8b73a545243"}, "downloads": -1, "filename": "importanize-0.5.1.tar.gz", "has_sig": false, "md5_digest": "67dd7938fa3801435b242bf0ba7fae69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25398, "upload_time": "2017-05-09T17:17:11", "upload_time_iso_8601": "2017-05-09T17:17:11.455204Z", "url": "https://files.pythonhosted.org/packages/0e/7e/c7ab3316ad50728462e7b452b7de3533277640ec0a8f244035fb025d636d/importanize-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "20a3faa5b892724a7df756bf85204423", "sha256": "8d8dfe4eea2f720a498f2374a269b784ca0d1836f3418ba79bfb3fc4bd027b49"}, "downloads": -1, "filename": "importanize-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "20a3faa5b892724a7df756bf85204423", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 32194, "upload_time": "2017-05-18T16:55:36", "upload_time_iso_8601": "2017-05-18T16:55:36.203345Z", "url": "https://files.pythonhosted.org/packages/56/59/34cc773e9ba6c374949ed6dc01b99fe5677ef682be662dbd91de358cd761/importanize-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93d0212941f9cd734a088742ec1122a0", "sha256": "a799ca0b710b04aa097388685a58de6737fcd06824b98cff531123a64e039691"}, "downloads": -1, "filename": "importanize-0.5.2.tar.gz", "has_sig": false, "md5_digest": "93d0212941f9cd734a088742ec1122a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18389, "upload_time": "2017-05-18T16:55:34", "upload_time_iso_8601": "2017-05-18T16:55:34.813983Z", "url": "https://files.pythonhosted.org/packages/d1/65/94d46b72002678b3607380865df5ea2181730d89e23a738427b53c9890bd/importanize-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "f77664c66d827c58cd6ffabe3b04d9d6", "sha256": "ce4224ad77783413d9897d51437407f162ae6f5e9af5463a49e0ad2aaaed45a0"}, "downloads": -1, "filename": "importanize-0.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f77664c66d827c58cd6ffabe3b04d9d6", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 32363, "upload_time": "2017-06-07T02:08:28", "upload_time_iso_8601": "2017-06-07T02:08:28.616911Z", "url": "https://files.pythonhosted.org/packages/de/48/c8dac6140dfe9a1bf7c36e57aa117527fe3549af0b83aeff33df9fb92c97/importanize-0.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "950e0aeb191df70533b1fac240cdbb76", "sha256": "a4299b545e44b379d7699046ffff284af54977eaeb9fc97b9ff855a5bcbe8308"}, "downloads": -1, "filename": "importanize-0.5.3.tar.gz", "has_sig": false, "md5_digest": "950e0aeb191df70533b1fac240cdbb76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18557, "upload_time": "2017-06-07T02:08:26", "upload_time_iso_8601": "2017-06-07T02:08:26.584750Z", "url": "https://files.pythonhosted.org/packages/40/d7/f01a1bc87c83f727d7150d93c743aa58f94c77530245b3b441b450894877/importanize-0.5.3.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "633b9ecd775ab4d5105050161d3bf37b", "sha256": "cef681b4cea9794242a711fe9b49fb40a303c73542c44d702d11715467b8a213"}, "downloads": -1, "filename": "importanize-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "633b9ecd775ab4d5105050161d3bf37b", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 33315, "upload_time": "2017-10-06T16:08:06", "upload_time_iso_8601": "2017-10-06T16:08:06.839046Z", "url": "https://files.pythonhosted.org/packages/ea/d2/56923b5ef4b83e1f48ee57043594a232949cdc28c01cb5fa6d3f3ba266f3/importanize-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "664a12ef3feb642ae71f9200c7711af1", "sha256": "2da3d8b85522b0d65184b120ade68e808c019082d633771c08e3cdc2a24324cb"}, "downloads": -1, "filename": "importanize-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "664a12ef3feb642ae71f9200c7711af1", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 33312, "upload_time": "2017-10-06T16:06:29", "upload_time_iso_8601": "2017-10-06T16:06:29.855814Z", "url": "https://files.pythonhosted.org/packages/20/7d/eb4b59b8d4c07ddacea7b8c4916dd3bb31275fcc3e892f55d20d0088477a/importanize-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b22d632b62ea3c3446c9c0beef55c6fa", "sha256": "fdb8c6a44ff0e639051b58fc87a80fcb0a353ea6ab99eb58d15a0e7bbacdb40d"}, "downloads": -1, "filename": "importanize-0.6.0.tar.gz", "has_sig": false, "md5_digest": "b22d632b62ea3c3446c9c0beef55c6fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18951, "upload_time": "2017-10-06T16:06:20", "upload_time_iso_8601": "2017-10-06T16:06:20.066462Z", "url": "https://files.pythonhosted.org/packages/2f/2a/0f836700c3e25aedfa98db348bb5b0f6961dc767bc88e1be0149ce17410d/importanize-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "43615da5dec492cae1fd78c21dfeec48", "sha256": "ba5df1a5a0e998335f3aba5eece9459f8352691630a902ff48c661ef987b514d"}, "downloads": -1, "filename": "importanize-0.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "43615da5dec492cae1fd78c21dfeec48", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 33706, "upload_time": "2017-10-06T18:34:49", "upload_time_iso_8601": "2017-10-06T18:34:49.310374Z", "url": "https://files.pythonhosted.org/packages/46/e0/8aa05abd4832f10fea9f4323b3553fe871bde7d28418c3f2ef0a0aa2dbf5/importanize-0.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "102425ccb1e76f94613298561d79fc48", "sha256": "ae6f150fb81e7183f3fd70753e944962109f4748215e343b3f462067789c7b18"}, "downloads": -1, "filename": "importanize-0.6.1.tar.gz", "has_sig": false, "md5_digest": "102425ccb1e76f94613298561d79fc48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19259, "upload_time": "2017-10-06T18:34:45", "upload_time_iso_8601": "2017-10-06T18:34:45.727532Z", "url": "https://files.pythonhosted.org/packages/d8/45/55c1deedfea868497ca4670fe60b8a02320a1f891aa47bf7584997e8525d/importanize-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "cccf7b7ab9e3e318de3e0e1e3a1b59ac", "sha256": "5f8469af6f05f36b9ab324c7df1e65661a85c469de14fe414f19bdcfb2f73b8e"}, "downloads": -1, "filename": "importanize-0.6.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cccf7b7ab9e3e318de3e0e1e3a1b59ac", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 34026, "upload_time": "2018-01-08T16:37:26", "upload_time_iso_8601": "2018-01-08T16:37:26.340522Z", "url": "https://files.pythonhosted.org/packages/70/84/423632bbcb1a1b953a9dca10f336751eaad983ebdc3606b7aef05eb3913f/importanize-0.6.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc5ab0b150c637515b468bd96b099ae4", "sha256": "194bd9ae8cb3360eb032665d50b2c97fcc0e856b1a9dbf330fdc63ebf9dc929c"}, "downloads": -1, "filename": "importanize-0.6.2.tar.gz", "has_sig": false, "md5_digest": "cc5ab0b150c637515b468bd96b099ae4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19498, "upload_time": "2018-01-08T16:37:23", "upload_time_iso_8601": "2018-01-08T16:37:23.770528Z", "url": "https://files.pythonhosted.org/packages/df/ca/ea6fddc831b639530e71e75611761032b928118b4ae03b08146bde95ed8d/importanize-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "fbfce9ad15d52d6ff5129e71cbf32705", "sha256": "c8ccb7bae7bebdf8d60fa4b461b00c9892c45687d27f5306e18f47cafe6df326"}, "downloads": -1, "filename": "importanize-0.6.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fbfce9ad15d52d6ff5129e71cbf32705", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 34078, "upload_time": "2018-01-28T02:27:49", "upload_time_iso_8601": "2018-01-28T02:27:49.958626Z", "url": "https://files.pythonhosted.org/packages/55/c3/e2334beb38a514b6d8147be3531686bb8556c7aded6d74c2a83db1410665/importanize-0.6.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff8260b82f186b765799778947ef7bcc", "sha256": "b50f350e3471c39dc3df4940c5e39cf1cdc593b36076204844e87313284f88a5"}, "downloads": -1, "filename": "importanize-0.6.3.tar.gz", "has_sig": false, "md5_digest": "ff8260b82f186b765799778947ef7bcc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19552, "upload_time": "2018-01-28T02:27:47", "upload_time_iso_8601": "2018-01-28T02:27:47.722344Z", "url": "https://files.pythonhosted.org/packages/a7/6b/a467eac613f8faaa562f93ae44c92e5a943fc8365ce8411de8b1aae4c885/importanize-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "8ace57d2867778938006cbb8635a4f90", "sha256": "0e145ee4925fdc61bc851468ff63cb604eea1d14821ee129cd04b2d987c6e806"}, "downloads": -1, "filename": "importanize-0.6.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8ace57d2867778938006cbb8635a4f90", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 34534, "upload_time": "2018-05-29T16:48:13", "upload_time_iso_8601": "2018-05-29T16:48:13.702217Z", "url": "https://files.pythonhosted.org/packages/79/cb/db71848d46a241f10c36701905a595a3f968ef90f7d1eb151ce2893fb8ba/importanize-0.6.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a20cc74993239e2d58f4a5dde0d0a47b", "sha256": "5bd31662c7641a4a81e1a999b7eafdad2c2090a937613b8bf0669f60e7f5a796"}, "downloads": -1, "filename": "importanize-0.6.4.tar.gz", "has_sig": false, "md5_digest": "a20cc74993239e2d58f4a5dde0d0a47b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19910, "upload_time": "2018-05-29T16:48:11", "upload_time_iso_8601": "2018-05-29T16:48:11.651874Z", "url": "https://files.pythonhosted.org/packages/fe/7d/8c0312c7e3896d6fc71b07c39c95a565b78bee4efa01fb8e257f1bf32dc3/importanize-0.6.4.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "9e0fc3b7a2a255e26b6f917ee14b53e6", "sha256": "0ba1cc16f80b7e9cc9dadf29d4f858016263db4cb17ca0c13fcbdda10029ac1e"}, "downloads": -1, "filename": "importanize-0.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9e0fc3b7a2a255e26b6f917ee14b53e6", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 35097, "upload_time": "2018-06-07T13:43:33", "upload_time_iso_8601": "2018-06-07T13:43:33.399092Z", "url": "https://files.pythonhosted.org/packages/67/cf/67e8a0387f96e05deed9a9cdf4018bfae3463392ad6cd982d685b524b1a3/importanize-0.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a88135ce1b36f29c1be4480a14d01f31", "sha256": "1bd383aa79d594e3c4cab8722046fe6bd6baf887950531f035ae6152489876f5"}, "downloads": -1, "filename": "importanize-0.7.0.tar.gz", "has_sig": false, "md5_digest": "a88135ce1b36f29c1be4480a14d01f31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20252, "upload_time": "2018-06-07T13:43:32", "upload_time_iso_8601": "2018-06-07T13:43:32.195508Z", "url": "https://files.pythonhosted.org/packages/e0/f8/8231f11473ae94681325ce9796ec8c21f9368b337d3b3dbefc52f8d18358/importanize-0.7.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9e0fc3b7a2a255e26b6f917ee14b53e6", "sha256": "0ba1cc16f80b7e9cc9dadf29d4f858016263db4cb17ca0c13fcbdda10029ac1e"}, "downloads": -1, "filename": "importanize-0.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9e0fc3b7a2a255e26b6f917ee14b53e6", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 35097, "upload_time": "2018-06-07T13:43:33", "upload_time_iso_8601": "2018-06-07T13:43:33.399092Z", "url": "https://files.pythonhosted.org/packages/67/cf/67e8a0387f96e05deed9a9cdf4018bfae3463392ad6cd982d685b524b1a3/importanize-0.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a88135ce1b36f29c1be4480a14d01f31", "sha256": "1bd383aa79d594e3c4cab8722046fe6bd6baf887950531f035ae6152489876f5"}, "downloads": -1, "filename": "importanize-0.7.0.tar.gz", "has_sig": false, "md5_digest": "a88135ce1b36f29c1be4480a14d01f31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20252, "upload_time": "2018-06-07T13:43:32", "upload_time_iso_8601": "2018-06-07T13:43:32.195508Z", "url": "https://files.pythonhosted.org/packages/e0/f8/8231f11473ae94681325ce9796ec8c21f9368b337d3b3dbefc52f8d18358/importanize-0.7.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:33 2020"}