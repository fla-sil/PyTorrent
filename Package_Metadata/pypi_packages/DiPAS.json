{"info": {"author": "Dominik Vilsmeier", "author_email": "d.vilsmeier@gsi.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Physics"], "description": "DiPAS\n=====\n\nDiPAS is a program for differentiable simulations of particle accelerators. It acts as a framework and thus\nsupports a wide range of use cases such as particle tracking or optics calculations such as closed\norbit search or computation of Twiss parameters.\n\nThe involved computations are backed by the `PyTorch <https://pytorch.org/>`__ package which also provides the relevant\nfunctionality for differentiation of user-defined quantities as well as a variety of gradient-based optimizers that integrate\nwith the thus derived quantities.\n\nThe DiPAS package can parse MADX lattice definitions and hence allows for zero-overhead importing of existing lattices.\nIn addition it supports custom lattice definitions from provided element classes.\n\n\nRelevant links\n--------------\n\n* `Documentation <https://dipas.readthedocs.io/>`__\n* `Examples <https://gitlab.com/Dominik1123/dipas/blob/master/examples>`__\n* `PyPI Project <https://pypi.org/project/dipas/>`__\n\n\nExample usage\n-------------\n\nMinimizing loss along beamline by tuning quadrupoles:\n\n.. code:: python\n\n   import numpy\n   from dipas.build import from_file\n   from dipas.elements import Quadrupole\n   import torch\n\n   lattice = from_file('example.madx')\n\n   for quad in lattice[Quadrupole]:\n       quad.k1 = torch.nn.Parameter(quad.k1)\n\n   optimizer = torch.optim.Adam(lattice.parameters(), lr=1e-3)\n\n   particles = torch.from_numpy(numpy.load('particles.npy'))\n\n   while True:\n       tracked, loss_val = lattice.linear(particles, recloss='sum')\n       lost = 1 - tracked.shape[1] / particles.shape[1]\n       if lost < 0.01:  # Fraction of particles lost less than 1%.\n           break\n       optimizer.zero_grad()\n       loss_val.backward()\n       optimizer.step()\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/Dominik1123/dipas", "keywords": "simulation,framework,particle tracking,accelerator,optimization,differentiable", "license": "GPL-3.0", "maintainer": "", "maintainer_email": "", "name": "DiPAS", "package_url": "https://pypi.org/project/DiPAS/", "platform": "", "project_url": "https://pypi.org/project/DiPAS/", "project_urls": {"Homepage": "https://gitlab.com/Dominik1123/dipas"}, "release_url": "https://pypi.org/project/DiPAS/1.0/", "requires_dist": ["jinja2 (>=2.10.1)", "numpy (>=1.17.2)", "pandas (>=0.25.1)", "pint (>=0.9)", "scipy (>=1.2.1)", "torch (>=1.2.0)", "typing-extensions (>=3.7.4)"], "requires_python": ">=3.7", "summary": "DiPAS is a framework for differentiable simulations of particle accelerators.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>DiPAS is a program for differentiable simulations of particle accelerators. It acts as a framework and thus\nsupports a wide range of use cases such as particle tracking or optics calculations such as closed\norbit search or computation of Twiss parameters.</p>\n<p>The involved computations are backed by the <a href=\"https://pytorch.org/\" rel=\"nofollow\">PyTorch</a> package which also provides the relevant\nfunctionality for differentiation of user-defined quantities as well as a variety of gradient-based optimizers that integrate\nwith the thus derived quantities.</p>\n<p>The DiPAS package can parse MADX lattice definitions and hence allows for zero-overhead importing of existing lattices.\nIn addition it supports custom lattice definitions from provided element classes.</p>\n<div id=\"relevant-links\">\n<h2>Relevant links</h2>\n<ul>\n<li><a href=\"https://dipas.readthedocs.io/\" rel=\"nofollow\">Documentation</a></li>\n<li><a href=\"https://gitlab.com/Dominik1123/dipas/blob/master/examples\" rel=\"nofollow\">Examples</a></li>\n<li><a href=\"https://pypi.org/project/dipas/\" rel=\"nofollow\">PyPI Project</a></li>\n</ul>\n</div>\n<div id=\"example-usage\">\n<h2>Example usage</h2>\n<p>Minimizing loss along beamline by tuning quadrupoles:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipas.build</span> <span class=\"kn\">import</span> <span class=\"n\">from_file</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipas.elements</span> <span class=\"kn\">import</span> <span class=\"n\">Quadrupole</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n\n<span class=\"n\">lattice</span> <span class=\"o\">=</span> <span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"s1\">'example.madx'</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">quad</span> <span class=\"ow\">in</span> <span class=\"n\">lattice</span><span class=\"p\">[</span><span class=\"n\">Quadrupole</span><span class=\"p\">]:</span>\n    <span class=\"n\">quad</span><span class=\"o\">.</span><span class=\"n\">k1</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"n\">quad</span><span class=\"o\">.</span><span class=\"n\">k1</span><span class=\"p\">)</span>\n\n<span class=\"n\">optimizer</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">Adam</span><span class=\"p\">(</span><span class=\"n\">lattice</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">(),</span> <span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">1e-3</span><span class=\"p\">)</span>\n\n<span class=\"n\">particles</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">from_numpy</span><span class=\"p\">(</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'particles.npy'</span><span class=\"p\">))</span>\n\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"n\">tracked</span><span class=\"p\">,</span> <span class=\"n\">loss_val</span> <span class=\"o\">=</span> <span class=\"n\">lattice</span><span class=\"o\">.</span><span class=\"n\">linear</span><span class=\"p\">(</span><span class=\"n\">particles</span><span class=\"p\">,</span> <span class=\"n\">recloss</span><span class=\"o\">=</span><span class=\"s1\">'sum'</span><span class=\"p\">)</span>\n    <span class=\"n\">lost</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">tracked</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">particles</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"k\">if</span> <span class=\"n\">lost</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.01</span><span class=\"p\">:</span>  <span class=\"c1\"># Fraction of particles lost less than 1%.</span>\n        <span class=\"k\">break</span>\n    <span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">zero_grad</span><span class=\"p\">()</span>\n    <span class=\"n\">loss_val</span><span class=\"o\">.</span><span class=\"n\">backward</span><span class=\"p\">()</span>\n    <span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">()</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7035377, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "d533fc4283690a06f09aa75a55047fb2", "sha256": "010c0893d47b32b079e7476880ee4485ab50507588b237efdffdbafe7dfda707"}, "downloads": -1, "filename": "DiPAS-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d533fc4283690a06f09aa75a55047fb2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 161030, "upload_time": "2020-04-16T20:28:16", "upload_time_iso_8601": "2020-04-16T20:28:16.750943Z", "url": "https://files.pythonhosted.org/packages/a9/69/402e35e374edc434d4a4522cd0b93815c053e0cf82b85f2e7208d6aef589/DiPAS-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7defb2c80ef8e13ae684651d072d2f2d", "sha256": "80db3b26cd36aae079ad6301ef7402b90b7a6a396bec6cebf88f2001072f6075"}, "downloads": -1, "filename": "DiPAS-1.0.tar.gz", "has_sig": false, "md5_digest": "7defb2c80ef8e13ae684651d072d2f2d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 1675501, "upload_time": "2020-04-16T20:28:21", "upload_time_iso_8601": "2020-04-16T20:28:21.919605Z", "url": "https://files.pythonhosted.org/packages/18/96/e1e9264044066a1b490af1953549f83c8b4041a4be78e418e744492d25bb/DiPAS-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d533fc4283690a06f09aa75a55047fb2", "sha256": "010c0893d47b32b079e7476880ee4485ab50507588b237efdffdbafe7dfda707"}, "downloads": -1, "filename": "DiPAS-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d533fc4283690a06f09aa75a55047fb2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 161030, "upload_time": "2020-04-16T20:28:16", "upload_time_iso_8601": "2020-04-16T20:28:16.750943Z", "url": "https://files.pythonhosted.org/packages/a9/69/402e35e374edc434d4a4522cd0b93815c053e0cf82b85f2e7208d6aef589/DiPAS-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7defb2c80ef8e13ae684651d072d2f2d", "sha256": "80db3b26cd36aae079ad6301ef7402b90b7a6a396bec6cebf88f2001072f6075"}, "downloads": -1, "filename": "DiPAS-1.0.tar.gz", "has_sig": false, "md5_digest": "7defb2c80ef8e13ae684651d072d2f2d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 1675501, "upload_time": "2020-04-16T20:28:21", "upload_time_iso_8601": "2020-04-16T20:28:21.919605Z", "url": "https://files.pythonhosted.org/packages/18/96/e1e9264044066a1b490af1953549f83c8b4041a4be78e418e744492d25bb/DiPAS-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:19 2020"}