{"info": {"author": "Matthew Flanagan", "author_email": "mattimustang@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Utilities"], "description": "Wad of Stuff Django Views\n=========================\n\nA set of view functions and classes to extend the functionality of Django's\ngeneric views to support inlines.\n\nRequirements\n============\n\nDjango 1.0 or newer.\n\nFunctions\n=========\n\nwadofstuff.django.views.create_object(..., inlines=None)\n--------------------------------------------------------\nwadofstuff.django.views.update_object(..., inlines=None)\n--------------------------------------------------------\n\nThese functions are identical to the Django ones except for the addition of the\n`inlines` argument. This argument consists of a list of dictionaries that will\nbe passed as arguments after the `parent_model` argument to\n`inlineformset_factory(parent_model, ...)`.\n\nFor example, arguments to a generic view might typically look like:\n\ncrud_dict = {\n    'model':Author\n    'inlines':[{\n        'model':Book,\n        'extra':2,\n        'form':BookForm,\n    },{\n        'model':Article,\n    }],\n    # ... other generic view arguments\n}\n\nwould translate to calls to `inlineformset_factory()` like:\n\n   inlineformset_factory(Author, model=Book, extra=2, form=BookForm)\n\nand\n\n   inlineformset_factory(Author, model=Article)\n\nThe view function will create a formset for each inline model and add them to\nthe template context. In the example above the context variables would be named\n`book_formset` and `article_formset`.\n\nWhat's new\n==========\n\nVersion 1.0.1:\n\n- Added ability to import views from wadofstuff.django.views.\n\nVersion 1.0.0:\n\n- First public release.", "description_content_type": null, "docs_url": null, "download_url": "http://wadofstuff.googlecode.com/files/wadofstuff-django-views-1.0.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://code.google.com/p/wadofstuff/", "keywords": "django views inlines", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "wadofstuff-django-views", "package_url": "https://pypi.org/project/wadofstuff-django-views/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/wadofstuff-django-views/", "project_urls": {"Download": "http://wadofstuff.googlecode.com/files/wadofstuff-django-views-1.0.1.tar.gz", "Homepage": "http://code.google.com/p/wadofstuff/"}, "release_url": "https://pypi.org/project/wadofstuff-django-views/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "Inlines support for Django generic views.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Wad of Stuff Django Views<br>=========================<br><br>A set of view functions and classes to extend the functionality of Django's<br>generic views to support inlines.<br><br>Requirements<br>============<br><br>Django 1.0 or newer.<br><br>Functions<br>=========<br><br>wadofstuff.django.views.create_object(..., inlines=None)<br>--------------------------------------------------------<br>wadofstuff.django.views.update_object(..., inlines=None)<br>--------------------------------------------------------<br><br>These functions are identical to the Django ones except for the addition of the<br>`inlines` argument. This argument consists of a list of dictionaries that will<br>be passed as arguments after the `parent_model` argument to<br>`inlineformset_factory(parent_model, ...)`.<br><br>For example, arguments to a generic view might typically look like:<br><br>crud_dict = {<br>    'model':Author<br>    'inlines':[{<br>        'model':Book,<br>        'extra':2,<br>        'form':BookForm,<br>    },{<br>        'model':Article,<br>    }],<br>    # ... other generic view arguments<br>}<br><br>would translate to calls to `inlineformset_factory()` like:<br><br>   inlineformset_factory(Author, model=Book, extra=2, form=BookForm)<br><br>and<br><br>   inlineformset_factory(Author, model=Article)<br><br>The view function will create a formset for each inline model and add them to<br>the template context. In the example above the context variables would be named<br>`book_formset` and `article_formset`.<br><br>What's new<br>==========<br><br>Version 1.0.1:<br><br>- Added ability to import views from wadofstuff.django.views.<br><br>Version 1.0.0:<br><br>- First public release.\n          </div>"}, "last_serial": 118241, "releases": {"1.0.0": [], "1.0.1": []}, "urls": [], "timestamp": "Fri May  8 03:33:19 2020"}