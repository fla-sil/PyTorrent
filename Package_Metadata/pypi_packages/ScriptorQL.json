{"info": {"author": "Arne Goossens", "author_email": "FortuneCandy99@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "# Purpose\nGenerates an SQL insert script based on data.\nUseful when developing databases and an insert script should be defined as post-deploy step.\n\n\n```python\nfrom ScriptorQL.script import df_to_SQL_insert\n\n# Define a dataframe\n# Table example:\n# SchemaName.TableName\n#\n#   col1  |  col2  |  col3\n# --------------------------\n#   abc  |  val1  |  1\n#   def  |  val2  |  2\n#   hij  |  val3  |  3\n#\n# See pandas data frame\n\nsql_script = df_to_SQL_insert(df, table=\"TableName\", schema=\"SchemaName\")\nprint(sql_script)\n```\nResult:\n\n```sql\nINSERT INTO SchemaName.TableName(col1, col2, col3)\nVALUES  ('abc','val1','1'),\n        ('def','val2','2'),\n        ('hij','val3','3')\n```\n\n# To Do\n\n-   Better documentation\n-   Recognize datatypes (Always quoted right now)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FortuneCandy/ScriptorQL", "keywords": "Generate SQL insert values script", "license": "GNU GENERAL PUBLIC LICENSE Version 3", "maintainer": "", "maintainer_email": "", "name": "ScriptorQL", "package_url": "https://pypi.org/project/ScriptorQL/", "platform": "", "project_url": "https://pypi.org/project/ScriptorQL/", "project_urls": {"Homepage": "https://github.com/FortuneCandy/ScriptorQL"}, "release_url": "https://pypi.org/project/ScriptorQL/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "Generates SQL insert values script for data", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Purpose</h1>\n<p>Generates an SQL insert script based on data.\nUseful when developing databases and an insert script should be defined as post-deploy step.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ScriptorQL.script</span> <span class=\"kn\">import</span> <span class=\"n\">df_to_SQL_insert</span>\n\n<span class=\"c1\"># Define a dataframe</span>\n<span class=\"c1\"># Table example:</span>\n<span class=\"c1\"># SchemaName.TableName</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#   col1  |  col2  |  col3</span>\n<span class=\"c1\"># --------------------------</span>\n<span class=\"c1\">#   abc  |  val1  |  1</span>\n<span class=\"c1\">#   def  |  val2  |  2</span>\n<span class=\"c1\">#   hij  |  val3  |  3</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># See pandas data frame</span>\n\n<span class=\"n\">sql_script</span> <span class=\"o\">=</span> <span class=\"n\">df_to_SQL_insert</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"n\">table</span><span class=\"o\">=</span><span class=\"s2\">\"TableName\"</span><span class=\"p\">,</span> <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"s2\">\"SchemaName\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">sql_script</span><span class=\"p\">)</span>\n</pre>\n<p>Result:</p>\n<pre><span class=\"k\">INSERT</span> <span class=\"k\">INTO</span> <span class=\"n\">SchemaName</span><span class=\"p\">.</span><span class=\"n\">TableName</span><span class=\"p\">(</span><span class=\"n\">col1</span><span class=\"p\">,</span> <span class=\"n\">col2</span><span class=\"p\">,</span> <span class=\"n\">col3</span><span class=\"p\">)</span>\n<span class=\"k\">VALUES</span>  <span class=\"p\">(</span><span class=\"s1\">'abc'</span><span class=\"p\">,</span><span class=\"s1\">'val1'</span><span class=\"p\">,</span><span class=\"s1\">'1'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'def'</span><span class=\"p\">,</span><span class=\"s1\">'val2'</span><span class=\"p\">,</span><span class=\"s1\">'2'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'hij'</span><span class=\"p\">,</span><span class=\"s1\">'val3'</span><span class=\"p\">,</span><span class=\"s1\">'3'</span><span class=\"p\">)</span>\n</pre>\n<h1>To Do</h1>\n<ul>\n<li>Better documentation</li>\n<li>Recognize datatypes (Always quoted right now)</li>\n</ul>\n\n          </div>"}, "last_serial": 6698014, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "95d6d481e19361158e7f2be8dfa98ac2", "sha256": "59985713a2588a0cff5c35c788ef63164a776bca397d4345384eb237f9f15862"}, "downloads": -1, "filename": "ScriptorQL-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "95d6d481e19361158e7f2be8dfa98ac2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16261, "upload_time": "2020-02-25T18:00:42", "upload_time_iso_8601": "2020-02-25T18:00:42.299792Z", "url": "https://files.pythonhosted.org/packages/34/4b/aa76b0903576d352efd23dc314d7f9af7139ece4b02dfa8242605df564e6/ScriptorQL-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75b8547756646959d6f3131b88dc0483", "sha256": "eea83b41851db41eb64f63f5f983e8ee5ae209dd662c2b76640a9ac3cd8697ce"}, "downloads": -1, "filename": "ScriptorQL-0.0.3.tar.gz", "has_sig": false, "md5_digest": "75b8547756646959d6f3131b88dc0483", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2265, "upload_time": "2020-02-25T18:00:44", "upload_time_iso_8601": "2020-02-25T18:00:44.332750Z", "url": "https://files.pythonhosted.org/packages/71/92/5a52c6351068922dea40b6cbfd7db9ca34218ded2b9fd8feccd597c36e66/ScriptorQL-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "95d6d481e19361158e7f2be8dfa98ac2", "sha256": "59985713a2588a0cff5c35c788ef63164a776bca397d4345384eb237f9f15862"}, "downloads": -1, "filename": "ScriptorQL-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "95d6d481e19361158e7f2be8dfa98ac2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16261, "upload_time": "2020-02-25T18:00:42", "upload_time_iso_8601": "2020-02-25T18:00:42.299792Z", "url": "https://files.pythonhosted.org/packages/34/4b/aa76b0903576d352efd23dc314d7f9af7139ece4b02dfa8242605df564e6/ScriptorQL-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75b8547756646959d6f3131b88dc0483", "sha256": "eea83b41851db41eb64f63f5f983e8ee5ae209dd662c2b76640a9ac3cd8697ce"}, "downloads": -1, "filename": "ScriptorQL-0.0.3.tar.gz", "has_sig": false, "md5_digest": "75b8547756646959d6f3131b88dc0483", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2265, "upload_time": "2020-02-25T18:00:44", "upload_time_iso_8601": "2020-02-25T18:00:44.332750Z", "url": "https://files.pythonhosted.org/packages/71/92/5a52c6351068922dea40b6cbfd7db9ca34218ded2b9fd8feccd597c36e66/ScriptorQL-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:31 2020"}