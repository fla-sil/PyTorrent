{"info": {"author": "Jared Runyon", "author_email": "jared.runyon@visualvault.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# *vvrest*\nA `Python` REST client library for accessing `VisualVault`.\n\n## install\n```\npip3 install vvrest\n```\n\n## getting started\n* The `Vault` class handles `authentication`.\n* Services mapping to the different `endpoints` live in the `services` namespace.\nFor example if one wishes to interact with the `/api/v1/documents` endpoint, \nthen import `DocumentService` or for `/api/v1/files` import `FileService`, etc.\n* Now credentials need to be defined so `VisualVault` knows who one is.\n* `url` is the base url for the instance of `VisualVault` (example below).\nNOTE: do not leave a trailing '/' at the end of the `url`.\n* `customer_alias` and `database_alias` are the customer and database \none wishes to connect to.\n* `client_id` and `client_secret` can be found on the users page in the\n`central admin` section of `VisualVault`. The first `APIKEY` is `client_id`\nand the second `APIKEY` is the `client_secret`.\n* Each service class in `services` takes an instance of `Vault` as a required parameter.\n* The `code example` below demonstrates requesting `documents`.\n```\nfrom vvrest.vault import Vault\nfrom vvrest.services.document_service import DocumentService\n\n# define credentials\nurl = 'https://demo.visualvault.com'\ncustomer_alias = 'test_customer'\ndatabase_alias = 'test_database'\nclient_id = '12344b69-cd52-4444-815a-1234ec0fb5ef'\nclient_secret = 'PouE/GLZ7pjFoqRRyu9L8K3EjTXXdf56sY/FxPaaxxU='\n\n# get vault object (authenticate)\nvault = Vault(url, customer_alias, database_alias, client_id, client_secret)\n\ndocument_service = DocumentService(vault)  # instantiate a service class (DocumentService)\ndocuments = document_service.get_documents(\"folderPath='/test'\")  # request documents\n```\n\n* documentation coming soon.\n* refer to the `VVRestTestSuite` in the `tests` directory for more examples.\n\nFor more information on any of the endpoints, data types, or anything referring to the \n`VisualVault` REST API please refer to the `HTTP API` section at <http://developer.visualvault.com>\nwhere each endpoint and there parameters are covered in great detail.\n\n## unittest coverage\n```\nName                                     Stmts   Miss  Cover   Missing\n----------------------------------------------------------------------\nvvrest/__init__.py                           0      0   100%\nvvrest/constants.py                         31      0   100%\nvvrest/services/__init__.py                  0      0   100%\nvvrest/services/auth_service.py             27      0   100%\nvvrest/services/document_service.py         80      0   100%\nvvrest/services/email_service.py            11      0   100%\nvvrest/services/file_service.py             25      0   100%\nvvrest/services/folder_service.py           73     11    85%   99-104, 192-205\nvvrest/services/form_service.py            119     16    87%   178-183, 220-225, 234-238, 250, 268\nvvrest/services/group_service.py            49      1    98%   17\nvvrest/services/index_field_service.py      30      0   100%\nvvrest/services/site_service.py             35      0   100%\nvvrest/services/user_service.py             37      1    97%   17\nvvrest/token.py                              5      0   100%\nvvrest/utilities.py                          8      0   100%\nvvrest/vault.py                             34      0   100%\n----------------------------------------------------------------------\nTOTAL                                      564     29    95%\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/VisualVault/vvrest", "keywords": "", "license": "", "maintainer": "Jared Runyon", "maintainer_email": "jared.runyon@visualvault.com", "name": "vvrest", "package_url": "https://pypi.org/project/vvrest/", "platform": "", "project_url": "https://pypi.org/project/vvrest/", "project_urls": {"Homepage": "https://github.com/VisualVault/vvrest"}, "release_url": "https://pypi.org/project/vvrest/1.3.1/", "requires_dist": ["requests"], "requires_python": "", "summary": "A Python REST client library for accessing VisualVault.", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><em>vvrest</em></h1>\n<p>A <code>Python</code> REST client library for accessing <code>VisualVault</code>.</p>\n<h2>install</h2>\n<pre><code>pip3 install vvrest\n</code></pre>\n<h2>getting started</h2>\n<ul>\n<li>The <code>Vault</code> class handles <code>authentication</code>.</li>\n<li>Services mapping to the different <code>endpoints</code> live in the <code>services</code> namespace.\nFor example if one wishes to interact with the <code>/api/v1/documents</code> endpoint,\nthen import <code>DocumentService</code> or for <code>/api/v1/files</code> import <code>FileService</code>, etc.</li>\n<li>Now credentials need to be defined so <code>VisualVault</code> knows who one is.</li>\n<li><code>url</code> is the base url for the instance of <code>VisualVault</code> (example below).\nNOTE: do not leave a trailing '/' at the end of the <code>url</code>.</li>\n<li><code>customer_alias</code> and <code>database_alias</code> are the customer and database\none wishes to connect to.</li>\n<li><code>client_id</code> and <code>client_secret</code> can be found on the users page in the\n<code>central admin</code> section of <code>VisualVault</code>. The first <code>APIKEY</code> is <code>client_id</code>\nand the second <code>APIKEY</code> is the <code>client_secret</code>.</li>\n<li>Each service class in <code>services</code> takes an instance of <code>Vault</code> as a required parameter.</li>\n<li>The <code>code example</code> below demonstrates requesting <code>documents</code>.</li>\n</ul>\n<pre><code>from vvrest.vault import Vault\nfrom vvrest.services.document_service import DocumentService\n\n# define credentials\nurl = 'https://demo.visualvault.com'\ncustomer_alias = 'test_customer'\ndatabase_alias = 'test_database'\nclient_id = '12344b69-cd52-4444-815a-1234ec0fb5ef'\nclient_secret = 'PouE/GLZ7pjFoqRRyu9L8K3EjTXXdf56sY/FxPaaxxU='\n\n# get vault object (authenticate)\nvault = Vault(url, customer_alias, database_alias, client_id, client_secret)\n\ndocument_service = DocumentService(vault)  # instantiate a service class (DocumentService)\ndocuments = document_service.get_documents(\"folderPath='/test'\")  # request documents\n</code></pre>\n<ul>\n<li>documentation coming soon.</li>\n<li>refer to the <code>VVRestTestSuite</code> in the <code>tests</code> directory for more examples.</li>\n</ul>\n<p>For more information on any of the endpoints, data types, or anything referring to the\n<code>VisualVault</code> REST API please refer to the <code>HTTP API</code> section at <a href=\"http://developer.visualvault.com\" rel=\"nofollow\">http://developer.visualvault.com</a>\nwhere each endpoint and there parameters are covered in great detail.</p>\n<h2>unittest coverage</h2>\n<pre><code>Name                                     Stmts   Miss  Cover   Missing\n----------------------------------------------------------------------\nvvrest/__init__.py                           0      0   100%\nvvrest/constants.py                         31      0   100%\nvvrest/services/__init__.py                  0      0   100%\nvvrest/services/auth_service.py             27      0   100%\nvvrest/services/document_service.py         80      0   100%\nvvrest/services/email_service.py            11      0   100%\nvvrest/services/file_service.py             25      0   100%\nvvrest/services/folder_service.py           73     11    85%   99-104, 192-205\nvvrest/services/form_service.py            119     16    87%   178-183, 220-225, 234-238, 250, 268\nvvrest/services/group_service.py            49      1    98%   17\nvvrest/services/index_field_service.py      30      0   100%\nvvrest/services/site_service.py             35      0   100%\nvvrest/services/user_service.py             37      1    97%   17\nvvrest/token.py                              5      0   100%\nvvrest/utilities.py                          8      0   100%\nvvrest/vault.py                             34      0   100%\n----------------------------------------------------------------------\nTOTAL                                      564     29    95%\n</code></pre>\n\n          </div>"}, "last_serial": 5531940, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "f7ce282c020f7702a2f5f48ecf971f7a", "sha256": "ec303570f194d9d4dff9d5675aa83a5d14d5f7f9910ace6c2259a1d4e134a1e6"}, "downloads": -1, "filename": "vvrest-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f7ce282c020f7702a2f5f48ecf971f7a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14762, "upload_time": "2018-12-13T07:08:04", "upload_time_iso_8601": "2018-12-13T07:08:04.123272Z", "url": "https://files.pythonhosted.org/packages/60/17/f7cab95f1080e20ad5012495e025c9e80c52af37336ab9acce769e340687/vvrest-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc557807c99d85ecc7d4b7381c097875", "sha256": "8780d716e3abd2baa4281d45701c4de9bed0d387060fc4b03787a8827dde2150"}, "downloads": -1, "filename": "vvrest-1.0.0.tar.gz", "has_sig": false, "md5_digest": "cc557807c99d85ecc7d4b7381c097875", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8300, "upload_time": "2018-12-13T07:08:06", "upload_time_iso_8601": "2018-12-13T07:08:06.671164Z", "url": "https://files.pythonhosted.org/packages/00/5a/4e757bb228cf155a681b18f84ed3929b4068cd86bc2fc19fba9673d5a681/vvrest-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "ad43db76f7d37a3fe1313bc0ce06eeff", "sha256": "afa5cae153cbc2e7d4cae649c64d5db73cb21d029dbc71c6c951bc363c1cc917"}, "downloads": -1, "filename": "vvrest-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ad43db76f7d37a3fe1313bc0ce06eeff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15088, "upload_time": "2018-12-14T04:03:19", "upload_time_iso_8601": "2018-12-14T04:03:19.351317Z", "url": "https://files.pythonhosted.org/packages/cb/2b/f0533fcaa6a2fd19d5d635c8aa6f8214a9d55a0da2ec52582432897ee403/vvrest-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a71e28dbcecfbc852379248a8024713a", "sha256": "41fb7ff32694b1a6244daf129a2419d0ae5c7a59f0c10616f167f4516f12e831"}, "downloads": -1, "filename": "vvrest-1.1.0.tar.gz", "has_sig": false, "md5_digest": "a71e28dbcecfbc852379248a8024713a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8940, "upload_time": "2018-12-14T04:03:20", "upload_time_iso_8601": "2018-12-14T04:03:20.761099Z", "url": "https://files.pythonhosted.org/packages/1b/9a/8d1f2d42c12c624e45b530724be44c4292cf66be5c6aa68bb670be6bc2d6/vvrest-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "6d07e356d300fd8cb0f4468a1f61cf74", "sha256": "bd564f4680a087b6159dca8e522b38c976d990dc725d53ffc1617acecfe6a46c"}, "downloads": -1, "filename": "vvrest-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6d07e356d300fd8cb0f4468a1f61cf74", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15055, "upload_time": "2018-12-30T18:07:40", "upload_time_iso_8601": "2018-12-30T18:07:40.856145Z", "url": "https://files.pythonhosted.org/packages/4b/c9/cc000dbe0c6fb2ef4a183bf0c7ca98134c3510bccd749e3b88a06492c435/vvrest-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a317eabe110dba9ce2c1355b6d6beb87", "sha256": "8c747c603ece47f799438602df5ca9439f8bb3cbbfe9e269eaa0b3ccb2c8aefa"}, "downloads": -1, "filename": "vvrest-1.2.0.tar.gz", "has_sig": false, "md5_digest": "a317eabe110dba9ce2c1355b6d6beb87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8911, "upload_time": "2018-12-30T18:07:42", "upload_time_iso_8601": "2018-12-30T18:07:42.196224Z", "url": "https://files.pythonhosted.org/packages/89/11/f7cbbe0da5487d3e698dec205c9124af1cad66aa6d79bf2428e3cf309d7c/vvrest-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "cd1a52b179efbc14fb3f3626efc60486", "sha256": "1bf9d692f2963649656f6b984f77e5c45bc570e752dec2861fdfefd3a753c6b3"}, "downloads": -1, "filename": "vvrest-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cd1a52b179efbc14fb3f3626efc60486", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15152, "upload_time": "2019-01-25T03:31:01", "upload_time_iso_8601": "2019-01-25T03:31:01.001775Z", "url": "https://files.pythonhosted.org/packages/3b/3d/5646808259bc4b4b2be2c76867bd74276a5621b9158ebbe3cf6439db8721/vvrest-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d22a66d52384b33ababd778f7d302c8", "sha256": "bc57e5987d1b67479b05947e0539159f0eae42db091dae70acc921802b5f3ff5"}, "downloads": -1, "filename": "vvrest-1.2.1.tar.gz", "has_sig": false, "md5_digest": "5d22a66d52384b33ababd778f7d302c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8942, "upload_time": "2019-01-25T03:31:02", "upload_time_iso_8601": "2019-01-25T03:31:02.545803Z", "url": "https://files.pythonhosted.org/packages/fc/13/12b3b4f28a8c6f057e452563588db16877a8524516218b87fb790882c663/vvrest-1.2.1.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "0ae06717dd840ab03e43a204150fffae", "sha256": "5628f4a6018173c45fff6f9adea8bc28babc787d902048e9f81415181b30eccc"}, "downloads": -1, "filename": "vvrest-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0ae06717dd840ab03e43a204150fffae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15485, "upload_time": "2019-06-01T07:55:44", "upload_time_iso_8601": "2019-06-01T07:55:44.062458Z", "url": "https://files.pythonhosted.org/packages/a2/c8/07902e13e4a187d47c1928916f9a5ff244b605ffd35133258208c331cc53/vvrest-1.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee755e325cd96e0fb082bc60b7d45ef8", "sha256": "499c815be66a55e291703bfc0437e30b2b5e9034fb9f96d5eee573142bf00e4a"}, "downloads": -1, "filename": "vvrest-1.3.0.tar.gz", "has_sig": false, "md5_digest": "ee755e325cd96e0fb082bc60b7d45ef8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9352, "upload_time": "2019-06-01T07:55:45", "upload_time_iso_8601": "2019-06-01T07:55:45.942344Z", "url": "https://files.pythonhosted.org/packages/ca/c6/001da248b6ef999284b630ff15b4f64048a33c8c969bbda7eff7072f6051/vvrest-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "266b8883ef8fff8c81c85c8dc821645b", "sha256": "8d32476aae24dae099b9669b8e47ff3f39d5ae87bc457dcbb3f49be9e13c416e"}, "downloads": -1, "filename": "vvrest-1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "266b8883ef8fff8c81c85c8dc821645b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15574, "upload_time": "2019-07-14T20:08:18", "upload_time_iso_8601": "2019-07-14T20:08:18.049076Z", "url": "https://files.pythonhosted.org/packages/cc/03/15a3890a634d6e6e4ac73fc49cb5f72fefed06390a0053f042d047147263/vvrest-1.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "745d9fbaef87a47ee6b968dc08a1b56b", "sha256": "acff3eaf8a8beaa4242a96839e1d312114f64aebdc5c3ecb0ef49ea62f63234f"}, "downloads": -1, "filename": "vvrest-1.3.1.tar.gz", "has_sig": false, "md5_digest": "745d9fbaef87a47ee6b968dc08a1b56b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9426, "upload_time": "2019-07-14T20:08:19", "upload_time_iso_8601": "2019-07-14T20:08:19.664546Z", "url": "https://files.pythonhosted.org/packages/91/82/69f04279f22e2cea10462ecf5bf3366bfee2ed54896eb8eba9ab63b2de79/vvrest-1.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "266b8883ef8fff8c81c85c8dc821645b", "sha256": "8d32476aae24dae099b9669b8e47ff3f39d5ae87bc457dcbb3f49be9e13c416e"}, "downloads": -1, "filename": "vvrest-1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "266b8883ef8fff8c81c85c8dc821645b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15574, "upload_time": "2019-07-14T20:08:18", "upload_time_iso_8601": "2019-07-14T20:08:18.049076Z", "url": "https://files.pythonhosted.org/packages/cc/03/15a3890a634d6e6e4ac73fc49cb5f72fefed06390a0053f042d047147263/vvrest-1.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "745d9fbaef87a47ee6b968dc08a1b56b", "sha256": "acff3eaf8a8beaa4242a96839e1d312114f64aebdc5c3ecb0ef49ea62f63234f"}, "downloads": -1, "filename": "vvrest-1.3.1.tar.gz", "has_sig": false, "md5_digest": "745d9fbaef87a47ee6b968dc08a1b56b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9426, "upload_time": "2019-07-14T20:08:19", "upload_time_iso_8601": "2019-07-14T20:08:19.664546Z", "url": "https://files.pythonhosted.org/packages/91/82/69f04279f22e2cea10462ecf5bf3366bfee2ed54896eb8eba9ab63b2de79/vvrest-1.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:33:32 2020"}