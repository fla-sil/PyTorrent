{"info": {"author": "Alan Hamlett", "author_email": "alan.hamlett@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Flask-Static-Compress\n=====================\n\n.. image:: https://travis-ci.org/alanhamlett/flask-static-compress.svg?branch=master\n    :target: https://travis-ci.org/alanhamlett/flask-static-compress\n    :alt: Tests\n\n.. image:: https://codecov.io/gh/alanhamlett/flask-static-compress/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/alanhamlett/flask-static-compress\n    :alt: Coverage\n\nAuto-detects your static files for minification, combination, and versioning. Like Django-Compressor for Flask.\n\n\nInstallation\n------------\n\n::\n\n    pip install flask-static-compress\n\n\nUsage\n-----\n\nJust wrap your existing css/js with a compress block and Flask-Static-Compress handles the rest::\n\n    {% compress 'css' %}\n      <link rel=\"stylesheet\" type=\"text/sass\" href=\"file.sass\">\n    {% endcompress %}\n\n    {% compress 'js' %}\n      <script type=\"text/javascript\" src=\"file.js\"></script>\n    {% endcompress %}\n\nAlso, initialize the extension inside your Flask app::\n\n    from flask_static_compress import FlaskStaticCompress\n    app = Flask(__name__)\n    compress = FlaskStaticCompress(app)\n\nAll static assets inside a ``compress`` block are compressed into a single file, and your html is updated to the new path when rendering the template.\n\nFor example::\n\n    {% compress 'js' %}\n      <script type=\"text/javascript\" src=\"{{ STATIC_URL }}js/config.js\"></script>\n      <script type=\"text/javascript\" src=\"{{ STATIC_URL }}js/app.js\"></script>\n    {% endcompress %}\n\nIs turned into::\n\n    <script type=\"text/javascript\" src=\"/static/sdist/a041936b125a3ec4ce9bf7a83130157d.js\"></script>\n\nThe compressed ``a041936b125a3ec4ce9bf7a83130157d.js`` contains both ``app.js`` and ``config.js`` combined for faster page loading.\nThe file name is calculated based on the contents of ``app.js`` and ``config.js``.\nThis means any change to your static code is automatically reloaded, or cache-busted, in browsers.\n\nWith debug mode turned on, file names and line numbers are preserved while still running the compression flow::\n\n    <script type=\"text/javascript\" src=\"/static/sdist/93a97ef5491b84db5155916be8f8fd7f-config.js\"></script>\n    <script type=\"text/javascript\" src=\"/static/sdist/af77fa42b92bb5a1ef85d9eb773d608e-app.js\"></script>\n\nThe ``type`` attribute is used to decide which compressor to use for the asset.\n\nUse `offline compression <https://github.com/jaysonsantos/jinja-assets-compressor#offline-compression>`_ for improved performance.\n\nCreate `custom compressors <https://github.com/jaysonsantos/jinja-assets-compressor#custom-compressors>`_ to support more types of static files.\n\nFor example, to remove trailing commas with `Prettier <https://www.npmjs.com/package/prettier>`_ then compress with `jsmin <https://pypi.python.org/pypi/jsmin>`_::\n\n    import errno\n    import subprocess\n    from jac.compat import file, u, utf8_encode\n    from jac.exceptions import InvalidCompressorError\n    from rjsmin import jsmin\n\n\n    class CustomJavaScriptCompressor(object):\n        binary = 'prettier'\n\n        @classmethod\n        def compile(cls, content, mimetype='text/less', cwd=None, uri_cwd=None,\n                    debug=None):\n            if debug:\n                return content\n\n            args = ['--no-config', '--ignore-path', '--trailing-comma', 'none']\n\n            args.insert(0, cls.binary)\n\n            try:\n                handler = subprocess.Popen(args,\n                                           stdout=subprocess.PIPE,\n                                           stdin=subprocess.PIPE,\n                                           stderr=subprocess.PIPE, cwd=None)\n            except OSError as e:\n                msg = '{0} encountered an error when executing {1}: {2}'.format(\n                    cls.__name__,\n                    cls.binary,\n                    u(e),\n                )\n                if e.errno == errno.ENOENT:\n                    msg += ' Make sure {0} is in your PATH.'.format(cls.binary)\n                raise InvalidCompressorError(msg)\n\n            if isinstance(content, file):\n                content = content.read()\n            (stdout, stderr) = handler.communicate(input=utf8_encode(content))\n            stdout = u(stdout)\n\n            if handler.returncode == 0:\n                return jsmin(stdout)\n            else:\n                raise RuntimeError('Error compressing: %s' % stderr)\n\n\n    COMPRESSOR_CLASSES = {\n        'text/javascript': CustomJavaScriptCompressor,\n    }\n\n\nConfiguration\n-------------\n\n``COMPRESSOR_ENABLED`` Default: True\n\n``COMPRESSOR_OFFLINE_COMPRESS`` Default: False\n\n``COMPRESSOR_FOLLOW_SYMLINKS`` Default: False\n\n``COMPRESSOR_DEBUG`` Default: False\n\n``COMPRESSOR_OUTPUT_DIR`` Default: app.static_folder + '/sdist'\n\n``COMPRESSOR_STATIC_PREFIX`` Default: app.static_url_path + '/sdist'\n\n``COMPRESSOR_CLASSES`` Default::\n\n    [\n        'text/css': LessCompressor,\n        'text/coffeescript': CoffeeScriptCompressor,\n        'text/less': LessCompressor,\n        'text/javascript': JavaScriptCompressor,\n        'text/sass': SassCompressor,\n        'text/scss': SassCompressor,\n    ]\n\n\nThanks to Jay Santos, creator of `jac <https://github.com/jaysonsantos/jinja-assets-compressor>`_. Flask-Static-Compress is just a wrapper around jac!\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alanhamlett/flask-static-compress", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "Flask-Static-Compress", "package_url": "https://pypi.org/project/Flask-Static-Compress/", "platform": "any", "project_url": "https://pypi.org/project/Flask-Static-Compress/", "project_urls": {"Homepage": "https://github.com/alanhamlett/flask-static-compress"}, "release_url": "https://pypi.org/project/Flask-Static-Compress/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Auto-detects your static files for minification, combination, and versioning. Like Django-Compressor for Flask.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/alanhamlett/flask-static-compress\" rel=\"nofollow\"><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3689088d5063f781ef8c5ed52c0ddd6053833e6c/68747470733a2f2f7472617669732d63692e6f72672f616c616e68616d6c6574742f666c61736b2d7374617469632d636f6d70726573732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/alanhamlett/flask-static-compress\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5df507fdc0c8470e84c21ffaa9cc48e6fc6fcc84/68747470733a2f2f636f6465636f762e696f2f67682f616c616e68616d6c6574742f666c61736b2d7374617469632d636f6d70726573732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<p>Auto-detects your static files for minification, combination, and versioning. Like Django-Compressor for Flask.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install flask-static-compress\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Just wrap your existing css/js with a compress block and Flask-Static-Compress handles the rest:</p>\n<pre>{% compress 'css' %}\n  &lt;link rel=\"stylesheet\" type=\"text/sass\" href=\"file.sass\"&gt;\n{% endcompress %}\n\n{% compress 'js' %}\n  &lt;script type=\"text/javascript\" src=\"file.js\"&gt;&lt;/script&gt;\n{% endcompress %}\n</pre>\n<p>Also, initialize the extension inside your Flask app:</p>\n<pre>from flask_static_compress import FlaskStaticCompress\napp = Flask(__name__)\ncompress = FlaskStaticCompress(app)\n</pre>\n<p>All static assets inside a <tt>compress</tt> block are compressed into a single file, and your html is updated to the new path when rendering the template.</p>\n<p>For example:</p>\n<pre>{% compress 'js' %}\n  &lt;script type=\"text/javascript\" src=\"{{ STATIC_URL }}js/config.js\"&gt;&lt;/script&gt;\n  &lt;script type=\"text/javascript\" src=\"{{ STATIC_URL }}js/app.js\"&gt;&lt;/script&gt;\n{% endcompress %}\n</pre>\n<p>Is turned into:</p>\n<pre>&lt;script type=\"text/javascript\" src=\"/static/sdist/a041936b125a3ec4ce9bf7a83130157d.js\"&gt;&lt;/script&gt;\n</pre>\n<p>The compressed <tt>a041936b125a3ec4ce9bf7a83130157d.js</tt> contains both <tt>app.js</tt> and <tt>config.js</tt> combined for faster page loading.\nThe file name is calculated based on the contents of <tt>app.js</tt> and <tt>config.js</tt>.\nThis means any change to your static code is automatically reloaded, or cache-busted, in browsers.</p>\n<p>With debug mode turned on, file names and line numbers are preserved while still running the compression flow:</p>\n<pre>&lt;script type=\"text/javascript\" src=\"/static/sdist/93a97ef5491b84db5155916be8f8fd7f-config.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"/static/sdist/af77fa42b92bb5a1ef85d9eb773d608e-app.js\"&gt;&lt;/script&gt;\n</pre>\n<p>The <tt>type</tt> attribute is used to decide which compressor to use for the asset.</p>\n<p>Use <a href=\"https://github.com/jaysonsantos/jinja-assets-compressor#offline-compression\" rel=\"nofollow\">offline compression</a> for improved performance.</p>\n<p>Create <a href=\"https://github.com/jaysonsantos/jinja-assets-compressor#custom-compressors\" rel=\"nofollow\">custom compressors</a> to support more types of static files.</p>\n<p>For example, to remove trailing commas with <a href=\"https://www.npmjs.com/package/prettier\" rel=\"nofollow\">Prettier</a> then compress with <a href=\"https://pypi.python.org/pypi/jsmin\" rel=\"nofollow\">jsmin</a>:</p>\n<pre>import errno\nimport subprocess\nfrom jac.compat import file, u, utf8_encode\nfrom jac.exceptions import InvalidCompressorError\nfrom rjsmin import jsmin\n\n\nclass CustomJavaScriptCompressor(object):\n    binary = 'prettier'\n\n    @classmethod\n    def compile(cls, content, mimetype='text/less', cwd=None, uri_cwd=None,\n                debug=None):\n        if debug:\n            return content\n\n        args = ['--no-config', '--ignore-path', '--trailing-comma', 'none']\n\n        args.insert(0, cls.binary)\n\n        try:\n            handler = subprocess.Popen(args,\n                                       stdout=subprocess.PIPE,\n                                       stdin=subprocess.PIPE,\n                                       stderr=subprocess.PIPE, cwd=None)\n        except OSError as e:\n            msg = '{0} encountered an error when executing {1}: {2}'.format(\n                cls.__name__,\n                cls.binary,\n                u(e),\n            )\n            if e.errno == errno.ENOENT:\n                msg += ' Make sure {0} is in your PATH.'.format(cls.binary)\n            raise InvalidCompressorError(msg)\n\n        if isinstance(content, file):\n            content = content.read()\n        (stdout, stderr) = handler.communicate(input=utf8_encode(content))\n        stdout = u(stdout)\n\n        if handler.returncode == 0:\n            return jsmin(stdout)\n        else:\n            raise RuntimeError('Error compressing: %s' % stderr)\n\n\nCOMPRESSOR_CLASSES = {\n    'text/javascript': CustomJavaScriptCompressor,\n}\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p><tt>COMPRESSOR_ENABLED</tt> Default: True</p>\n<p><tt>COMPRESSOR_OFFLINE_COMPRESS</tt> Default: False</p>\n<p><tt>COMPRESSOR_FOLLOW_SYMLINKS</tt> Default: False</p>\n<p><tt>COMPRESSOR_DEBUG</tt> Default: False</p>\n<p><tt>COMPRESSOR_OUTPUT_DIR</tt> Default: app.static_folder + \u2018/sdist\u2019</p>\n<p><tt>COMPRESSOR_STATIC_PREFIX</tt> Default: app.static_url_path + \u2018/sdist\u2019</p>\n<p><tt>COMPRESSOR_CLASSES</tt> Default:</p>\n<pre>[\n    'text/css': LessCompressor,\n    'text/coffeescript': CoffeeScriptCompressor,\n    'text/less': LessCompressor,\n    'text/javascript': JavaScriptCompressor,\n    'text/sass': SassCompressor,\n    'text/scss': SassCompressor,\n]\n</pre>\n<p>Thanks to Jay Santos, creator of <a href=\"https://github.com/jaysonsantos/jinja-assets-compressor\" rel=\"nofollow\">jac</a>. Flask-Static-Compress is just a wrapper around jac!</p>\n</div>\n\n          </div>"}, "last_serial": 3270201, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "cf829c973e8166c72130150ed9ff2c34", "sha256": "2c284ba2b2b32c3633e1051ee382d2f6a413aa5bcf72e7ee07cc6c42232130bb"}, "downloads": -1, "filename": "Flask-Static-Compress-1.0.0.tar.gz", "has_sig": false, "md5_digest": "cf829c973e8166c72130150ed9ff2c34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3549, "upload_time": "2016-12-15T12:25:49", "upload_time_iso_8601": "2016-12-15T12:25:49.677067Z", "url": "https://files.pythonhosted.org/packages/5b/67/9ef0d5a3b9b758d49744cfb03a20884a264ce568de5ce02e1a04a17b3773/Flask-Static-Compress-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "03d9a282598ee1b5e544f45622fa7eb1", "sha256": "a5649f36fe6e75a2ee2d7cce99db7527f307f4a5756a0478a2a3b15abc9e8e70"}, "downloads": -1, "filename": "Flask-Static-Compress-1.0.1.tar.gz", "has_sig": false, "md5_digest": "03d9a282598ee1b5e544f45622fa7eb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4035, "upload_time": "2017-08-28T00:58:39", "upload_time_iso_8601": "2017-08-28T00:58:39.357233Z", "url": "https://files.pythonhosted.org/packages/0e/21/a68a4e0608d150f48fed742c5a1f10b1f5a1cf525b06a4a10ad6c255a85d/Flask-Static-Compress-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "9d1d9b7a1d5e963633b895583a96c384", "sha256": "fbe494ba840fe861614ea5ae7fa23e1f4f92dae76b33c15ac48a3a68620b18a4"}, "downloads": -1, "filename": "Flask-Static-Compress-1.0.2.tar.gz", "has_sig": false, "md5_digest": "9d1d9b7a1d5e963633b895583a96c384", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5062, "upload_time": "2017-10-22T17:33:13", "upload_time_iso_8601": "2017-10-22T17:33:13.169832Z", "url": "https://files.pythonhosted.org/packages/36/f1/421a9570be04bac2b430a65b3b0e24a08cb9867410cb77df5ed5ec2b8e0e/Flask-Static-Compress-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9d1d9b7a1d5e963633b895583a96c384", "sha256": "fbe494ba840fe861614ea5ae7fa23e1f4f92dae76b33c15ac48a3a68620b18a4"}, "downloads": -1, "filename": "Flask-Static-Compress-1.0.2.tar.gz", "has_sig": false, "md5_digest": "9d1d9b7a1d5e963633b895583a96c384", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5062, "upload_time": "2017-10-22T17:33:13", "upload_time_iso_8601": "2017-10-22T17:33:13.169832Z", "url": "https://files.pythonhosted.org/packages/36/f1/421a9570be04bac2b430a65b3b0e24a08cb9867410cb77df5ed5ec2b8e0e/Flask-Static-Compress-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:14 2020"}