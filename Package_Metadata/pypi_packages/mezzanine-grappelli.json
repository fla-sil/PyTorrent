{"info": {"author": "Sylvain Fankhauser", "author_email": "sylvain@fankhauser.name", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent"], "description": "===================\nmezzanine-grappelli\n===================\n\nMezzanine-Grappelli makes Mezzanine \u2665 Grappelli.\n\nFor compatibility reasons, Mezzanine uses forks of Grappelli and Filebrowser,\nknown as grappelli-safe and filebrowser-safe.\n\nYou want the awesomeness of Mezzanine with the sweetness of the latest\nGrappelli version? This application does exactly that: it allows you to use the\nfull power of the latest vanilla versions of both Grappelli and Filebrowser in\nyour Mezzanine projects.\n\n\n.. image:: https://github.com/sephii/mezzanine-grappelli/raw/master/docs/images/login.png\n.. image:: https://github.com/sephii/mezzanine-grappelli/raw/master/docs/images/filebrowser.png\n\nInstallation\n============\n\nFirst, install mezzanine-grappelli with pip (this will automatically install\nGrappelli and Filebrowser as well)::\n\n    pip install mezzanine-grappelli\n\nIn your ``settings.py`` file, adapt the value of\n``PACKAGE_NAME_FILEBROWSER`` and ``PACKAGE_NAME_GRAPPELLI``::\n\n    PACKAGE_NAME_FILEBROWSER = \"filebrowser\"\n    PACKAGE_NAME_GRAPPELLI = \"grappelli\"\n\nStill in your ``settings.py`` file, add mezzanine_grappelli, grappelli and\nfilebrowser to your ``INSTALLED_APPS`` (make sure they appear before any\nmezzanine app)::\n\n    INSTALLED_APPS = (\n        \"mezzanine_grappelli\",\n        PACKAGE_NAME_GRAPPELLI,\n        PACKAGE_NAME_FILEBROWSER,\n        ...\n    )\n\nAdd Grappelli URLs to your ``urls.py`` file::\n\n    urlpatterns += patterns(\"\",\n        ...\n        (\"^grappelli/\", include(\"grappelli.urls\")),\n        ...\n    )\n\nYou're done!\n\nRough edges\n===========\n\nThe project still being in its early days, it has a few rough edges you should\nbe aware of.\n\nTabularDynamicInlineAdmin doesn't work\n--------------------------------------\n\nUse classic Django ``TabularInline`` instead.\n\nFilebrowser error: \"Error finding Upload-Folder (site.storage.location + site.directory). Maybe it does not exist?\"\n-------------------------------------------------------------------------------------------------------------------\n\nThat's because Filebrowser doesn't automatically create the uploads directory,\nso just create the ``MEDIA_ROOT + 'uploads/'`` directory\n\nFileField doesn't work\n----------------------\n\nWhen using ``FileField`` fields you need to put the ``format`` in lowercase\n(ie.  \"image\" instead of \"Image\") otherwise you'll get a Filebrowser exception.\nThat's especially true for already defined Mezzanine models (such as the\n``BlogPost`` model). To fix the issue for already-defined Mezzanine models, you\ncan add the following to your settings file::\n\n    FILEBROWSER_SELECT_FORMATS = {\n        'File': ['Folder', 'Image', 'Document', 'Video', 'Audio'],\n        'Document': ['Document'],\n        'Media': ['Video', 'Audio'],\n        'Image': ['Image'],\n        'image': ['Image'],\n    }\n\nTODO\n====\n\n* Make ``TabularDynamicInlineAdmin`` work or at least fall back to a usable\n  solution\n\nBugs, contributing\n==================\n\nIf you find bugs, you're very welcome to report them using the Github issue\ntracker.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sephii/mezzanine-grappelli/", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "mezzanine-grappelli", "package_url": "https://pypi.org/project/mezzanine-grappelli/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mezzanine-grappelli/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/sephii/mezzanine-grappelli/"}, "release_url": "https://pypi.org/project/mezzanine-grappelli/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "mezzanine-grappelli makes Mezzanine \u2665 Grappelli", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Mezzanine-Grappelli makes Mezzanine \u2665 Grappelli.</p>\n<p>For compatibility reasons, Mezzanine uses forks of Grappelli and Filebrowser,\nknown as grappelli-safe and filebrowser-safe.</p>\n<p>You want the awesomeness of Mezzanine with the sweetness of the latest\nGrappelli version? This application does exactly that: it allows you to use the\nfull power of the latest vanilla versions of both Grappelli and Filebrowser in\nyour Mezzanine projects.</p>\n<img alt=\"https://github.com/sephii/mezzanine-grappelli/raw/master/docs/images/login.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/19c5aac21d1d70d81166f3f866597dd16c5cc6a9/68747470733a2f2f6769746875622e636f6d2f7365706869692f6d657a7a616e696e652d6772617070656c6c692f7261772f6d61737465722f646f63732f696d616765732f6c6f67696e2e706e67\">\n<img alt=\"https://github.com/sephii/mezzanine-grappelli/raw/master/docs/images/filebrowser.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/32f9e198a17f14eb67fe001f83d577109f450c33/68747470733a2f2f6769746875622e636f6d2f7365706869692f6d657a7a616e696e652d6772617070656c6c692f7261772f6d61737465722f646f63732f696d616765732f66696c6562726f777365722e706e67\">\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>First, install mezzanine-grappelli with pip (this will automatically install\nGrappelli and Filebrowser as well):</p>\n<pre>pip install mezzanine-grappelli\n</pre>\n<p>In your <tt>settings.py</tt> file, adapt the value of\n<tt>PACKAGE_NAME_FILEBROWSER</tt> and <tt>PACKAGE_NAME_GRAPPELLI</tt>:</p>\n<pre>PACKAGE_NAME_FILEBROWSER = \"filebrowser\"\nPACKAGE_NAME_GRAPPELLI = \"grappelli\"\n</pre>\n<p>Still in your <tt>settings.py</tt> file, add mezzanine_grappelli, grappelli and\nfilebrowser to your <tt>INSTALLED_APPS</tt> (make sure they appear before any\nmezzanine app):</p>\n<pre>INSTALLED_APPS = (\n    \"mezzanine_grappelli\",\n    PACKAGE_NAME_GRAPPELLI,\n    PACKAGE_NAME_FILEBROWSER,\n    ...\n)\n</pre>\n<p>Add Grappelli URLs to your <tt>urls.py</tt> file:</p>\n<pre>urlpatterns += patterns(\"\",\n    ...\n    (\"^grappelli/\", include(\"grappelli.urls\")),\n    ...\n)\n</pre>\n<p>You\u2019re done!</p>\n</div>\n<div id=\"rough-edges\">\n<h2>Rough edges</h2>\n<p>The project still being in its early days, it has a few rough edges you should\nbe aware of.</p>\n<div id=\"tabulardynamicinlineadmin-doesn-t-work\">\n<h3>TabularDynamicInlineAdmin doesn\u2019t work</h3>\n<p>Use classic Django <tt>TabularInline</tt> instead.</p>\n</div>\n<div id=\"filebrowser-error-error-finding-upload-folder-site-storage-location-site-directory-maybe-it-does-not-exist\">\n<h3>Filebrowser error: \u201cError finding Upload-Folder (site.storage.location + site.directory). Maybe it does not exist?\u201d</h3>\n<p>That\u2019s because Filebrowser doesn\u2019t automatically create the uploads directory,\nso just create the <tt>MEDIA_ROOT + 'uploads/'</tt> directory</p>\n</div>\n<div id=\"filefield-doesn-t-work\">\n<h3>FileField doesn\u2019t work</h3>\n<p>When using <tt>FileField</tt> fields you need to put the <tt>format</tt> in lowercase\n(ie.  \u201cimage\u201d instead of \u201cImage\u201d) otherwise you\u2019ll get a Filebrowser exception.\nThat\u2019s especially true for already defined Mezzanine models (such as the\n<tt>BlogPost</tt> model). To fix the issue for already-defined Mezzanine models, you\ncan add the following to your settings file:</p>\n<pre>FILEBROWSER_SELECT_FORMATS = {\n    'File': ['Folder', 'Image', 'Document', 'Video', 'Audio'],\n    'Document': ['Document'],\n    'Media': ['Video', 'Audio'],\n    'Image': ['Image'],\n    'image': ['Image'],\n}\n</pre>\n</div>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Make <tt>TabularDynamicInlineAdmin</tt> work or at least fall back to a usable\nsolution</li>\n</ul>\n</div>\n<div id=\"bugs-contributing\">\n<h2>Bugs, contributing</h2>\n<p>If you find bugs, you\u2019re very welcome to report them using the Github issue\ntracker.</p>\n</div>\n\n          </div>"}, "last_serial": 992080, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "843fc2f0668c4cb89dcd628a8c9e1fe6", "sha256": "f0f69cab1c42bf24bf2e6c013430625d575d76affc5818380a62e147a2b78d4d"}, "downloads": -1, "filename": "mezzanine-grappelli-0.1.0.tar.gz", "has_sig": false, "md5_digest": "843fc2f0668c4cb89dcd628a8c9e1fe6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11794, "upload_time": "2014-02-06T07:40:11", "upload_time_iso_8601": "2014-02-06T07:40:11.606112Z", "url": "https://files.pythonhosted.org/packages/04/c0/cbe278a4ec616f14d65bb7800d569e4895cb663f9f477f13120b341817d0/mezzanine-grappelli-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "843fc2f0668c4cb89dcd628a8c9e1fe6", "sha256": "f0f69cab1c42bf24bf2e6c013430625d575d76affc5818380a62e147a2b78d4d"}, "downloads": -1, "filename": "mezzanine-grappelli-0.1.0.tar.gz", "has_sig": false, "md5_digest": "843fc2f0668c4cb89dcd628a8c9e1fe6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11794, "upload_time": "2014-02-06T07:40:11", "upload_time_iso_8601": "2014-02-06T07:40:11.606112Z", "url": "https://files.pythonhosted.org/packages/04/c0/cbe278a4ec616f14d65bb7800d569e4895cb663f9f477f13120b341817d0/mezzanine-grappelli-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:33 2020"}