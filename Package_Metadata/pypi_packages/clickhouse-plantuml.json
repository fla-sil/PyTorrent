{"info": {"author": "Mikhail f. Shiryaev", "author_email": "mr.felixoid@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "Intended Audience :: System Administrators", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Database", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Visualization", "Topic :: Software Development :: Documentation", "Topic :: Software Development :: Libraries"], "description": "![Python package](https://github.com/Felixoid/clickhouse-plantuml/workflows/Python%20package/badge.svg)\n\n# PlantUML generator for ClickHouse tables\n\nThis is a very early version of diagrams generator. It parses `system.tables` table and produces [PlantUML](https://plantuml.com) diagrams source. Here's example of produced diagram:\n\n```plantuml\n@startuml\n!define Table(x) class x << (T,mistyrose) >>\n!define View(x) class x << (V,lightblue) >>\n!define MaterializedView(x) class x << (m,orange) >>\n!define Distributed(x) class x << (D,violet) >>\n\nhide empty methods\nhide stereotypes\nskinparam classarrowcolor gray\n\nDistributed(graphite.data) {\nENGINE=**Distributed**\n..engine config..\ncluster: graphite_data\ndatabase: graphite\ntable: data_lr\nsharding_key: cityHash64(Path)\n==columns==\nPath: String\nValue: Float64\nTime: UInt32\nDate: Date\nTimestamp: UInt32\n}\ngraphite.data_lr -|> graphite.data\n\nTable(graphite.data_lr) {\nENGINE=**ReplicatedGraphiteMergeTree**\n..engine config..\nrollup_config: graphite_rollup\n..replication..\nzoo_path: /clickhouse/tables/graphite.data_lr/{shard}\nreplica: {replica}\n==columns==\nPath: String <size:15><&signal></size>\nValue: Float64\nTime: UInt32 <size:15><&signal></size>\nDate: Date <size:15><&list-rich></size>\nTimestamp: UInt32\n..<size:15><&list-rich></size>partition key..\ntoYYYYMMDD(toStartOfInterval(Date, toIntervalDay(3)))\n..<size:15><&signal></size>sorting key..\nPath, Time\n}\n\nTable(graphite.index) {\nENGINE=**ReplicatedReplacingMergeTree**\n..engine config..\nversion: Version\n..replication..\nzoo_path: /clickhouse/tables/graphite.index/1\nreplica: {replica}\n==columns==\nDate: Date <size:15><&list-rich></size> <size:15><&signal></size>\nLevel: UInt32 <size:15><&signal></size>\nPath: String <size:15><&signal></size>\nVersion: UInt32\n..<size:15><&list-rich></size>partition key..\ntoYYYYMM(Date)\n..<size:15><&signal></size>sorting key..\nLevel, Path, Date\n}\n\nTable(graphite.tagged) {\nENGINE=**ReplicatedReplacingMergeTree**\n..engine config..\nversion: Version\n..replication..\nzoo_path: /clickhouse/tables/graphite.tagged/1\nreplica: {replica}\n==columns==\nDate: Date <size:15><&list-rich></size> <size:15><&signal></size>\nTag1: String <size:15><&signal></size>\nPath: String <size:15><&signal></size>\nTags: Array(String)\nVersion: UInt32\n..<size:15><&list-rich></size>partition key..\ntoYYYYMM(Date)\n..<size:15><&signal></size>sorting key..\nTag1, Path, Date\n}\n\n@enduml\n```\n\nAnd how it looks after running PlantUML:  \n![example](./example.png)\n\n## Usage\n\n```bash\npython setup.py install\nclickhouse-plantuml\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/Felixoid/clickhouse-plantuml", "keywords": "", "license": "License :: OSI Approved :: Apache Software License", "maintainer": "", "maintainer_email": "", "name": "clickhouse-plantuml", "package_url": "https://pypi.org/project/clickhouse-plantuml/", "platform": "", "project_url": "https://pypi.org/project/clickhouse-plantuml/", "project_urls": {"Homepage": "http://github.com/Felixoid/clickhouse-plantuml"}, "release_url": "https://pypi.org/project/clickhouse-plantuml/0.1.1/", "requires_dist": ["clickhouse-driver"], "requires_python": "~=3.5", "summary": "Generates PlantUML diagrams for clickhouse databases", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Python package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60930901db622668b49efcc2679408e09b962537/68747470733a2f2f6769746875622e636f6d2f46656c69786f69642f636c69636b686f7573652d706c616e74756d6c2f776f726b666c6f77732f507974686f6e2532307061636b6167652f62616467652e737667\"></p>\n<h1>PlantUML generator for ClickHouse tables</h1>\n<p>This is a very early version of diagrams generator. It parses <code>system.tables</code> table and produces <a href=\"https://plantuml.com\" rel=\"nofollow\">PlantUML</a> diagrams source. Here's example of produced diagram:</p>\n<pre>@startuml\n!define Table(x) class x &lt;&lt; (T,mistyrose) &gt;&gt;\n!define View(x) class x &lt;&lt; (V,lightblue) &gt;&gt;\n!define MaterializedView(x) class x &lt;&lt; (m,orange) &gt;&gt;\n!define Distributed(x) class x &lt;&lt; (D,violet) &gt;&gt;\n\nhide empty methods\nhide stereotypes\nskinparam classarrowcolor gray\n\nDistributed(graphite.data) {\nENGINE=**Distributed**\n..engine config..\ncluster: graphite_data\ndatabase: graphite\ntable: data_lr\nsharding_key: cityHash64(Path)\n==columns==\nPath: String\nValue: Float64\nTime: UInt32\nDate: Date\nTimestamp: UInt32\n}\ngraphite.data_lr -|&gt; graphite.data\n\nTable(graphite.data_lr) {\nENGINE=**ReplicatedGraphiteMergeTree**\n..engine config..\nrollup_config: graphite_rollup\n..replication..\nzoo_path: /clickhouse/tables/graphite.data_lr/{shard}\nreplica: {replica}\n==columns==\nPath: String &lt;size:15&gt;&lt;&amp;signal&gt;&lt;/size&gt;\nValue: Float64\nTime: UInt32 &lt;size:15&gt;&lt;&amp;signal&gt;&lt;/size&gt;\nDate: Date &lt;size:15&gt;&lt;&amp;list-rich&gt;&lt;/size&gt;\nTimestamp: UInt32\n..&lt;size:15&gt;&lt;&amp;list-rich&gt;&lt;/size&gt;partition key..\ntoYYYYMMDD(toStartOfInterval(Date, toIntervalDay(3)))\n..&lt;size:15&gt;&lt;&amp;signal&gt;&lt;/size&gt;sorting key..\nPath, Time\n}\n\nTable(graphite.index) {\nENGINE=**ReplicatedReplacingMergeTree**\n..engine config..\nversion: Version\n..replication..\nzoo_path: /clickhouse/tables/graphite.index/1\nreplica: {replica}\n==columns==\nDate: Date &lt;size:15&gt;&lt;&amp;list-rich&gt;&lt;/size&gt; &lt;size:15&gt;&lt;&amp;signal&gt;&lt;/size&gt;\nLevel: UInt32 &lt;size:15&gt;&lt;&amp;signal&gt;&lt;/size&gt;\nPath: String &lt;size:15&gt;&lt;&amp;signal&gt;&lt;/size&gt;\nVersion: UInt32\n..&lt;size:15&gt;&lt;&amp;list-rich&gt;&lt;/size&gt;partition key..\ntoYYYYMM(Date)\n..&lt;size:15&gt;&lt;&amp;signal&gt;&lt;/size&gt;sorting key..\nLevel, Path, Date\n}\n\nTable(graphite.tagged) {\nENGINE=**ReplicatedReplacingMergeTree**\n..engine config..\nversion: Version\n..replication..\nzoo_path: /clickhouse/tables/graphite.tagged/1\nreplica: {replica}\n==columns==\nDate: Date &lt;size:15&gt;&lt;&amp;list-rich&gt;&lt;/size&gt; &lt;size:15&gt;&lt;&amp;signal&gt;&lt;/size&gt;\nTag1: String &lt;size:15&gt;&lt;&amp;signal&gt;&lt;/size&gt;\nPath: String &lt;size:15&gt;&lt;&amp;signal&gt;&lt;/size&gt;\nTags: Array(String)\nVersion: UInt32\n..&lt;size:15&gt;&lt;&amp;list-rich&gt;&lt;/size&gt;partition key..\ntoYYYYMM(Date)\n..&lt;size:15&gt;&lt;&amp;signal&gt;&lt;/size&gt;sorting key..\nTag1, Path, Date\n}\n\n@enduml\n</pre>\n<p>And how it looks after running PlantUML:<br>\n<img alt=\"example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c8b07438d2a72f61c3f435901372a19f6856d0d3/2e2f6578616d706c652e706e67\"></p>\n<h2>Usage</h2>\n<pre>python setup.py install\nclickhouse-plantuml\n</pre>\n\n          </div>"}, "last_serial": 7110322, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6cb09483903e88dfbd4226f4fdb64db7", "sha256": "f872120f602266ae00602814f8dd61e57fe3313bfd5a973e01a95265b190e98d"}, "downloads": -1, "filename": "clickhouse_plantuml-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6cb09483903e88dfbd4226f4fdb64db7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 101222, "upload_time": "2020-04-25T00:43:23", "upload_time_iso_8601": "2020-04-25T00:43:23.001904Z", "url": "https://files.pythonhosted.org/packages/16/65/9a8d56f3d213cf5bace442eed8e9c9b099c68a5b15503fa18a534ebdbc1b/clickhouse_plantuml-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d0b2337649e48d00ba9691be6e14a8c", "sha256": "73a06c5cf981df13f78b9fec7aa26981358de656e5803ddfce4726f25837f27e"}, "downloads": -1, "filename": "clickhouse_plantuml-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1d0b2337649e48d00ba9691be6e14a8c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 49548, "upload_time": "2020-04-25T00:43:25", "upload_time_iso_8601": "2020-04-25T00:43:25.396988Z", "url": "https://files.pythonhosted.org/packages/3d/ff/359dc1ecc9f26b0b0934f7a2133ff36354e70a270d9d45d1e82f0b2afd0e/clickhouse_plantuml-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "98b33745762efc825df7832c9a38d7d3", "sha256": "09faf05848b1b6ed172dc9f4cf98c2ba16894e118fd5a9fa9b3864fa9df218c8"}, "downloads": -1, "filename": "clickhouse_plantuml-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "98b33745762efc825df7832c9a38d7d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 53791, "upload_time": "2020-04-27T09:40:51", "upload_time_iso_8601": "2020-04-27T09:40:51.376344Z", "url": "https://files.pythonhosted.org/packages/a3/a8/65a8f1c92017c7d4290c66453696c0acfe71bcd857587567377019ac1d1b/clickhouse_plantuml-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d08350d0cae3b2e3504353a1e148fc7", "sha256": "4f4b1cfc206f6f57ae500c4a9856186d90e1fd27ffa57e4b7c8ffd4325be113d"}, "downloads": -1, "filename": "clickhouse_plantuml-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5d08350d0cae3b2e3504353a1e148fc7", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 49856, "upload_time": "2020-04-27T09:40:52", "upload_time_iso_8601": "2020-04-27T09:40:52.165445Z", "url": "https://files.pythonhosted.org/packages/20/f2/f6aacf9a7d0a612bf8be7b4568b423d84e97df02ee8417d03aa57a53b6a5/clickhouse_plantuml-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "98b33745762efc825df7832c9a38d7d3", "sha256": "09faf05848b1b6ed172dc9f4cf98c2ba16894e118fd5a9fa9b3864fa9df218c8"}, "downloads": -1, "filename": "clickhouse_plantuml-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "98b33745762efc825df7832c9a38d7d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 53791, "upload_time": "2020-04-27T09:40:51", "upload_time_iso_8601": "2020-04-27T09:40:51.376344Z", "url": "https://files.pythonhosted.org/packages/a3/a8/65a8f1c92017c7d4290c66453696c0acfe71bcd857587567377019ac1d1b/clickhouse_plantuml-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d08350d0cae3b2e3504353a1e148fc7", "sha256": "4f4b1cfc206f6f57ae500c4a9856186d90e1fd27ffa57e4b7c8ffd4325be113d"}, "downloads": -1, "filename": "clickhouse_plantuml-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5d08350d0cae3b2e3504353a1e148fc7", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 49856, "upload_time": "2020-04-27T09:40:52", "upload_time_iso_8601": "2020-04-27T09:40:52.165445Z", "url": "https://files.pythonhosted.org/packages/20/f2/f6aacf9a7d0a612bf8be7b4568b423d84e97df02ee8417d03aa57a53b6a5/clickhouse_plantuml-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:02 2020"}