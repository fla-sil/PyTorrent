{"info": {"author": "Simone Deponti", "author_email": "simone.deponti@abstract.it", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Plone", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License"], "description": "This package allows you to use the Django_ ORM within Plone_.\n\nIt takes care to merge Django transaction management within Zope's own\ntransaction manager.\n\nBasic usage\n===========\n\nIn order to use this package you must have a setup that looks like the following:\n\n 1. Your settings module must be within buildout's \"adjusted\"\n    ``sys.path``. This means it should be importable from within Plone, hence\n    that it should be an egg (either released or more commonly in development).\n    Jacob Kaplan-Moss explains how to do this for a `Django buildout`_.\n\n 2. Your buildout should contain both the Plone parts and the Django parts\n    together, hence the standard Plone buildouts plus the bits you see in\n    Jacob's tutorial. Make sure that your plone instance has, within its eggs,\n    the project one (``shorturls`` in Jacob's example) either derived from\n    buildout's ones or local to the instance.\n\nThe second step is to make sure that your Plone instance has a special\nenvironment variable that Django needs to know where its settings are. Hence\nput, under your instance buildout section, something like this::\n\n    [buildout]\n    ...\n    [instance]\n    recipe = plone.recipe.zope2instance\n    ...\n    environment-vars =\n        DJANGO_SETTINGS_MODULE shorturls.testsettings\n\nAgain values are borrowed from Jacob's post.\n\n.. note:: Please note that this environment variable will be set only if you\n          run ``bin/instance``. Therefore when using supervisord, make sure you\n          have it run ``bin/instance console`` and not any ``run.py`` script\n          directly which would completely bypass setting the environment\n          variable and leave you in the mud.\n\nThen just add the egg to your buildout, like this::\n\n    [buildout]\n    ...\n    eggs =\n        ...\n        collective.django\n\nThe package itself relies on ``z3c.autoinclude`` to load its ZCML when Plone is\npulled up. In case this does not work, include a::\n\n    <include package=\"collective.django\" />\n\nWithin your package ZCML.\n\nAnd whenever you will import your Django models from Plone, the transaction\nwill be managed by Zope.\n\nTesting\n=======\n\nTo run the tests, a minimal buildout is included. After checking out the source\ncode, run the following::\n\n    $ python bootstrap.py\n    $ bin/buildout\n    $ bin/test\n\nAnd the tests should be ran.\n\n.. _Django: http://www.djangoproject.com/\n.. _Plone: http://www.plone.org/\n.. _`Django buildout`: http://jacobian.org/writing/django-apps-with-buildout/\n\nChangelog\n=========\n\n1.0 (2014-08-29)\n----------------\n\n- fix to work with Django 1.6\n  [vangheem]\n\n0.2 (2011-09-28)\n----------------\n\n - fix bad release\n\n0.1 (2011-09-16)\n----------------\n\n - Django 1.3 compatibility and initialization fixes [vangheem]\n - Initial public version [shywolf9982]\n\nContributors\n============\n\n- Simone Deponti <simone.deponti@abstract.it>\n- Nathan Van Gheem\n\nA big thanks to the developers of `zope.sqlalchemy`_ for providing a good\n\"template\".\n\nInitial developement supported by `Abstract Open Solutions`_\n\n.. _`zope.sqlalchemy`: http://pypi.python.org/pypi/zope.sqlalchemy/\n.. _`Abstract Open Solutions`: http://www.abstract.it/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/collective/collective.django", "keywords": "", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "collective.django", "package_url": "https://pypi.org/project/collective.django/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.django/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/collective/collective.django"}, "release_url": "https://pypi.org/project/collective.django/1.0/", "requires_dist": null, "requires_python": null, "summary": "Django transaction integration for Plone", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package allows you to use the <a href=\"http://www.djangoproject.com/\" rel=\"nofollow\">Django</a> ORM within <a href=\"http://www.plone.org/\" rel=\"nofollow\">Plone</a>.</p>\n<p>It takes care to merge Django transaction management within Zope\u2019s own\ntransaction manager.</p>\n<div id=\"basic-usage\">\n<h2>Basic usage</h2>\n<p>In order to use this package you must have a setup that looks like the following:</p>\n<blockquote>\n<ol>\n<li>Your settings module must be within buildout\u2019s \u201cadjusted\u201d\n<tt>sys.path</tt>. This means it should be importable from within Plone, hence\nthat it should be an egg (either released or more commonly in development).\nJacob Kaplan-Moss explains how to do this for a <a href=\"http://jacobian.org/writing/django-apps-with-buildout/\" rel=\"nofollow\">Django buildout</a>.</li>\n<li>Your buildout should contain both the Plone parts and the Django parts\ntogether, hence the standard Plone buildouts plus the bits you see in\nJacob\u2019s tutorial. Make sure that your plone instance has, within its eggs,\nthe project one (<tt>shorturls</tt> in Jacob\u2019s example) either derived from\nbuildout\u2019s ones or local to the instance.</li>\n</ol>\n</blockquote>\n<p>The second step is to make sure that your Plone instance has a special\nenvironment variable that Django needs to know where its settings are. Hence\nput, under your instance buildout section, something like this:</p>\n<pre>[buildout]\n...\n[instance]\nrecipe = plone.recipe.zope2instance\n...\nenvironment-vars =\n    DJANGO_SETTINGS_MODULE shorturls.testsettings\n</pre>\n<p>Again values are borrowed from Jacob\u2019s post.</p>\n<div>\n<p>Note</p>\n<p>Please note that this environment variable will be set only if you\nrun <tt>bin/instance</tt>. Therefore when using supervisord, make sure you\nhave it run <tt>bin/instance console</tt> and not any <tt>run.py</tt> script\ndirectly which would completely bypass setting the environment\nvariable and leave you in the mud.</p>\n</div>\n<p>Then just add the egg to your buildout, like this:</p>\n<pre>[buildout]\n...\neggs =\n    ...\n    collective.django\n</pre>\n<p>The package itself relies on <tt>z3c.autoinclude</tt> to load its ZCML when Plone is\npulled up. In case this does not work, include a:</p>\n<pre>&lt;include package=\"collective.django\" /&gt;\n</pre>\n<p>Within your package ZCML.</p>\n<p>And whenever you will import your Django models from Plone, the transaction\nwill be managed by Zope.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>To run the tests, a minimal buildout is included. After checking out the source\ncode, run the following:</p>\n<pre>$ python bootstrap.py\n$ bin/buildout\n$ bin/test\n</pre>\n<p>And the tests should be ran.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.0 (2014-08-29)</h3>\n<ul>\n<li>fix to work with Django 1.6\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.2 (2011-09-28)</h3>\n<blockquote>\n<ul>\n<li>fix bad release</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id3\">\n<h3>0.1 (2011-09-16)</h3>\n<blockquote>\n<ul>\n<li>Django 1.3 compatibility and initialization fixes [vangheem]</li>\n<li>Initial public version [shywolf9982]</li>\n</ul>\n</blockquote>\n</div>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<ul>\n<li>Simone Deponti &lt;<a href=\"mailto:simone.deponti%40abstract.it\">simone<span>.</span>deponti<span>@</span>abstract<span>.</span>it</a>&gt;</li>\n<li>Nathan Van Gheem</li>\n</ul>\n<p>A big thanks to the developers of <a href=\"http://pypi.python.org/pypi/zope.sqlalchemy/\" rel=\"nofollow\">zope.sqlalchemy</a> for providing a good\n\u201ctemplate\u201d.</p>\n<p>Initial developement supported by <a href=\"http://www.abstract.it/\" rel=\"nofollow\">Abstract Open Solutions</a></p>\n</div>\n\n          </div>"}, "last_serial": 1206894, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "738e5f9036738b101a820215f5461170", "sha256": "88447c93d6c0c4d3d16db5d94270398feb876400ebf3f85516737cb68197f4e6"}, "downloads": -1, "filename": "collective.django-0.1.tar.gz", "has_sig": false, "md5_digest": "738e5f9036738b101a820215f5461170", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5182, "upload_time": "2011-09-16T01:06:40", "upload_time_iso_8601": "2011-09-16T01:06:40.529590Z", "url": "https://files.pythonhosted.org/packages/ad/3e/93daf9a43b7f2eaf5c70a3b12ef95f64b976185d05f5273629fe29a9ffb6/collective.django-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "42f2860a38c5b8a66ce6d8d58bc080f2", "sha256": "dbb08487599d827785d5d1244689f58c7b253749a73f621524ee6ec5c0a635e9"}, "downloads": -1, "filename": "collective.django-0.2.zip", "has_sig": false, "md5_digest": "42f2860a38c5b8a66ce6d8d58bc080f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22106, "upload_time": "2011-09-28T21:20:18", "upload_time_iso_8601": "2011-09-28T21:20:18.181634Z", "url": "https://files.pythonhosted.org/packages/69/ab/0b86cefb01f778fbfd83d28b885b54c66bf26618202254eb1e2756bbf754/collective.django-0.2.zip", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "20cb83d2ad850e87afcdd8924462ec6c", "sha256": "f3af0697e726d56846eb400b6b83af578c507937fad4d0f862915230cd1a4716"}, "downloads": -1, "filename": "collective.django-1.0.zip", "has_sig": false, "md5_digest": "20cb83d2ad850e87afcdd8924462ec6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22181, "upload_time": "2014-08-29T19:24:00", "upload_time_iso_8601": "2014-08-29T19:24:00.743387Z", "url": "https://files.pythonhosted.org/packages/18/9a/7b714dd7c779842bdb6c68916989a32fcac20748b78787e1bc8ecd13919f/collective.django-1.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "20cb83d2ad850e87afcdd8924462ec6c", "sha256": "f3af0697e726d56846eb400b6b83af578c507937fad4d0f862915230cd1a4716"}, "downloads": -1, "filename": "collective.django-1.0.zip", "has_sig": false, "md5_digest": "20cb83d2ad850e87afcdd8924462ec6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22181, "upload_time": "2014-08-29T19:24:00", "upload_time_iso_8601": "2014-08-29T19:24:00.743387Z", "url": "https://files.pythonhosted.org/packages/18/9a/7b714dd7c779842bdb6c68916989a32fcac20748b78787e1bc8ecd13919f/collective.django-1.0.zip", "yanked": false}], "timestamp": "Thu May  7 22:17:56 2020"}