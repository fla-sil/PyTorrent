{"info": {"author": "Jeff Pittman", "author_email": "geojeff@me.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Pyramid", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "==============\nkotti_software\n==============\n\nThis is an extension to the Kotti CMS that adds a system for presenting\na list of software projects on your site.\n\n`Find out more about Kotti`_\n\nSetting up kotti_software\n=========================\n\nThis Addon adds two new Content Types to your Kotti site.\nTo set up the content types add ``kotti_software.kotti_configure``\nto the ``kotti.configurators`` setting in your ini file::\n\n    kotti.configurators = kotti_software.kotti_configure\n\nNow you can create a software collection and add software projects.\n\nThere are different settings to adjust the behavior of the\nsoftware.\n\nYou can select if the software projects in the collection overview\nshould be batched. If you set \n``kotti_software.collection_settings.use_batching`` to ``true``\n(the default value) the software projects will be shown on separate\npages. If you set it to ``false`` all software projects are shown\nall together on one page::\n\n    kotti_software.collection_settings.use_batching = false\n\nIf you use batching you can choose how many software projects are\nshown on one page. The default value for \n``kotti_software.collection_settings.pagesize`` is 5::\n\n    kotti_software.collection_settings.pagesize = 10\n\nYou can use auto batching where the next page of the software projects\nis automatically loaded when scrolling down the overview page instead\nof showing links to switch the pages. The default for\n``kotti_software.collection_settings.use_auto_batching`` is ``true``::\n\n    kotti_software.collection_settings.use_auto_batching = false\n\nWith ``kotti_software.collection_settings.link_headline_overview`` you\ncan control whether the headline of a software project in the\ncollection overview is linked to the software project or not. This\nsetting defaults to ``true``::\n\n    kotti_software.collection_settings.link_headline_overview = false\n\nParts of kotti_software can be overridden with the setting\n``kotti_software.asset_overrides``. Have a look to the \n`Kotti documentation about the asset_overrides setting`_, which is the\nsame as in ``kotti_software``.\n\nBe warned: This addon is in alpha state. Use it at your own risk.\n\nUsing kotti_software\n====================\n\nAdd a software collection to your site, then to that add software projects.\nHere are ways to enter software projects:\n\n    1) Enter the PyPI JSON URL only\n\n    2) Enter the PyPI JSON URL, along with the GitHub repo info for fetching\n       the GitHub repo information, such as most recent push date and time, or\n       do the same for a Bitbucket repo (You could do both, for a project with\n       both GitHub and Bitbucket repos.\n\n    3) Enter only the GitHub repo info, or the Bitbucket info, for a repo-only\n       software project.\n\n    4) Enter the title, description, date and any of: home_page, docs_url,\n       package_url, bugtrack_url (manual entry), and specify that these values\n       are not to be overwritten from values on PyPI, if they exist.\n\n    5) Enter the date only (bare-bones entry, with just date and\n       title, description, and whatever you wish in body -- useful for defunct\n       projects). Set the date-handling choice to use the entered value.\n\nThe date-handling and description-handling select properties should be set\naccording to the usage above, and whether the entered values are to be used, or\nif values are to be fetched from PyPI or GitHub or Bitbucket.\n\nThere are also boolean override properties for using a combination of manually\nentered values for home_page, docs_url, package_url, and bugtrack_url and the\nfetching of these values from PyPI.\n\n**Instructions for JSON sources:**\n\nPyPI\n----\n\nEnter the url of the form \"http://pypi.python.org/pypi/{project name}/json\",\nwhere {project name} is the case-sensitive name of the project on PyPI. For\nexample, for Kotti the url is \"http://pypi.python.org/pypi/Kotti/json\".\n\nSee http://pypi.python.org/pypi/Kotti/json to see the JSON that is parsed.\n\nGitHub\n------\n\nEnter the GitHub owner and repo, which will be used to build a GitHub API call\nof the form: https://api.github.com/repos/{owner}/{repo}, as in\nhttps://api.github.com/repos/geojeff/kotti_software. You may enter this GitHub\ninfo along with the PyPI URL, or use the GitHub info only.\n\nBitbucket\n---------\n\nEnter the Bitbucket owner and repo, which will be used to build a Bitbucket API\ncall of the form: https://api.bitbucket.org/repostories/{owner}/{repo}.\n\nWork in progress\n================\n\n``kotti_software`` is considered alpha software, not yet suitable for use in\nproduction environments.  The current state of the project is in no way feature\ncomplete nor API stable.  If you really want to use it in your project(s), make\nsure to pin the exact version in your requirements.  Not doing so will likely\nbreak your project when future releases become available.\n\nDevelopment\n===========\n\nContributions to ``kotti_software`` are very welcome.\nJust clone its `GitHub repository`_ and submit your contributions as pull requests.\n\nNote that all development is done on the ``develop`` branch. ``master`` is reserved\nfor \"production-ready state\".  Therefore, make sure to always base development work\non the current state of the ``develop`` branch.\n\nThis follows the highly recommended `A successful Git branching model`_ pattern,\nwhich is implemented by the excellent `gitflow`_ git extension.\n\nTesting\n-------\n\n|build status|_\n\n``kotti_software`` has 100% test coverage.\nPlease make sure that you add tests for new features and that all tests pass before\nsubmitting pull requests.  Running the test suite is as easy as running ``py.test``\nfrom the source directory (you might need to run ``python setup.py dev`` to have all\nthe test requirements installed in your virtualenv).\n\n\n.. _Find out more about Kotti: http://pypi.python.org/pypi/Kotti\n.. _Kotti documentation about the asset_overrides setting: http://kotti.readthedocs.org/en/latest/configuration.html?highlight=asset#adjust-the-look-feel-kotti-asset-overrides\n.. _GitHub repository: https://github.com/geojeff/kotti_software\n.. _gitflow: https://github.com/nvie/gitflow\n.. _A successful Git branching model: http://nvie.com/posts/a-successful-git-branching-model/\n.. |build status| image:: https://secure.travis-ci.org/geojeff/kotti_software.png?branch=master\n.. _build status: http://travis-ci.org/geojeff/kotti_software\n\n\nTODO\n====\n\n- Add i18n\n- Add navpill-style and table-style list views for projects; make list style\n  selectable in edit menu [Can/should this be punted to Kotti folder view?]\n- Sort out and document metadata items available in setup.py vs. those\n  requiring manual entry on pypi or in kotti_software. See what happens when\n  bugtrack_url, home_page, and download_url are added to setup.py. What is\n  download_url vs. package_url? Does url in setup.py map to home_page?\n  [Home page, Download URL, and Bugtrack URL are editable on pypi. If they\n  are not available in setup.py, then if set manually on pypi, are they\n  overwritten by new release pushes to pypi, or do they stick?]\n- Check on need for required testing dependencies copied from kotti_media\n- Add support for using tags to categorize by group with an example,\n  or add a \"sub-collection\" property if the tags route is not workable.\n- Presently, the view for SoftwareCollection does a site-wide search for all\n  SoftwareProject items. Should this be changed to context.children? [Ties in\n  with tags and/or categorization question.]\n- Change use of all-jambed-up softwarecollection to software-collection and\n  software_collection; same for softwareproject. Or, OK as is?\n- Add better visual separation between items in default list view (the only\n  list view style available now; see above todo item)\n- Are on-load refreshes from pypi and github too expensive? What are\n  alternatives? Nightly cron job? More frequent cron job? Refreshing on a\n  timer? Every 5 minutes? Every hour? Manual trigger by admin?\n\n\nAuthors\n=======\n\nJeff Pittman [geojeff]\n\nkotti_software started as a copy of kotti_blog, and also follows some design\nand layout features of kotti_media.\n\nfor kotti_media:\n\nAndreas Kaiser [disko]\n\nfor kotti_blog:\n\nMarco Scheidhuber [j23d]\nMike Orr [mikeorr]\n\n\nCHANGES\n=======\n\n0.1.4\n-----\n\n - Updated readme for revised usage instructions.\n\n0.1.3\n-----\n\n - Renamed user to owner for github and bitbucket.\n - In property descriptions, now using PyPI, GitHub, and Bitbucket spellings.\n - Added bitbucket as JSON source.\n - Removed generic JSON source option, and made all references explicit for\n   PyPI.\n\n0.1.2\n-----\n\n - Added support for sorting in either ascending or descending order (default\n   is still descending).\n - Added github repo API call as an alternate or sole JSON source.\n - Cleaned up sorting code.\n\n0.1.1\n-----\n\n - Added missing TODO.txt.\n - Changed test urls to hit pypi/Kotti/json.\n - Prepared MANIFEST.in.\n - Updated README following pattern of kotti_media.\n\n0.1\n---\n\n- Initial release.\n- Started with copy of kotti_blog.\n- During development referred to kotti_media for adding url properties,\n  for setting up view classes, and for preparation of tests and use of\n  travis-ci.org.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/geojeff/kotti_software", "keywords": "kotti software", "license": "BSD-derived (http://www.repoze.org/LICENSE.txt)", "maintainer": null, "maintainer_email": null, "name": "kotti_software", "package_url": "https://pypi.org/project/kotti_software/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/kotti_software/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/geojeff/kotti_software"}, "release_url": "https://pypi.org/project/kotti_software/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "Kotti software -- adds a software project listing to your site", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is an extension to the Kotti CMS that adds a system for presenting\na list of software projects on your site.</p>\n<p><a href=\"http://pypi.python.org/pypi/Kotti\" rel=\"nofollow\">Find out more about Kotti</a></p>\n<div id=\"setting-up-kotti-software\">\n<h2>Setting up kotti_software</h2>\n<p>This Addon adds two new Content Types to your Kotti site.\nTo set up the content types add <tt>kotti_software.kotti_configure</tt>\nto the <tt>kotti.configurators</tt> setting in your ini file:</p>\n<pre>kotti.configurators = kotti_software.kotti_configure\n</pre>\n<p>Now you can create a software collection and add software projects.</p>\n<p>There are different settings to adjust the behavior of the\nsoftware.</p>\n<p>You can select if the software projects in the collection overview\nshould be batched. If you set\n<tt>kotti_software.collection_settings.use_batching</tt> to <tt>true</tt>\n(the default value) the software projects will be shown on separate\npages. If you set it to <tt>false</tt> all software projects are shown\nall together on one page:</p>\n<pre>kotti_software.collection_settings.use_batching = false\n</pre>\n<p>If you use batching you can choose how many software projects are\nshown on one page. The default value for\n<tt>kotti_software.collection_settings.pagesize</tt> is 5:</p>\n<pre>kotti_software.collection_settings.pagesize = 10\n</pre>\n<p>You can use auto batching where the next page of the software projects\nis automatically loaded when scrolling down the overview page instead\nof showing links to switch the pages. The default for\n<tt>kotti_software.collection_settings.use_auto_batching</tt> is <tt>true</tt>:</p>\n<pre>kotti_software.collection_settings.use_auto_batching = false\n</pre>\n<p>With <tt>kotti_software.collection_settings.link_headline_overview</tt> you\ncan control whether the headline of a software project in the\ncollection overview is linked to the software project or not. This\nsetting defaults to <tt>true</tt>:</p>\n<pre>kotti_software.collection_settings.link_headline_overview = false\n</pre>\n<p>Parts of kotti_software can be overridden with the setting\n<tt>kotti_software.asset_overrides</tt>. Have a look to the\n<a href=\"http://kotti.readthedocs.org/en/latest/configuration.html?highlight=asset#adjust-the-look-feel-kotti-asset-overrides\" rel=\"nofollow\">Kotti documentation about the asset_overrides setting</a>, which is the\nsame as in <tt>kotti_software</tt>.</p>\n<p>Be warned: This addon is in alpha state. Use it at your own risk.</p>\n</div>\n<div id=\"using-kotti-software\">\n<h2>Using kotti_software</h2>\n<p>Add a software collection to your site, then to that add software projects.\nHere are ways to enter software projects:</p>\n<blockquote>\n<ol>\n<li>Enter the PyPI JSON URL only</li>\n<li>Enter the PyPI JSON URL, along with the GitHub repo info for fetching\nthe GitHub repo information, such as most recent push date and time, or\ndo the same for a Bitbucket repo (You could do both, for a project with\nboth GitHub and Bitbucket repos.</li>\n<li>Enter only the GitHub repo info, or the Bitbucket info, for a repo-only\nsoftware project.</li>\n<li>Enter the title, description, date and any of: home_page, docs_url,\npackage_url, bugtrack_url (manual entry), and specify that these values\nare not to be overwritten from values on PyPI, if they exist.</li>\n<li>Enter the date only (bare-bones entry, with just date and\ntitle, description, and whatever you wish in body \u2013 useful for defunct\nprojects). Set the date-handling choice to use the entered value.</li>\n</ol>\n</blockquote>\n<p>The date-handling and description-handling select properties should be set\naccording to the usage above, and whether the entered values are to be used, or\nif values are to be fetched from PyPI or GitHub or Bitbucket.</p>\n<p>There are also boolean override properties for using a combination of manually\nentered values for home_page, docs_url, package_url, and bugtrack_url and the\nfetching of these values from PyPI.</p>\n<p><strong>Instructions for JSON sources:</strong></p>\n<div id=\"pypi\">\n<h3>PyPI</h3>\n<p>Enter the url of the form \u201c<a href=\"http://pypi.python.org/pypi\" rel=\"nofollow\">http://pypi.python.org/pypi</a>/{project name}/json\u201d,\nwhere {project name} is the case-sensitive name of the project on PyPI. For\nexample, for Kotti the url is \u201c<a href=\"http://pypi.python.org/pypi/Kotti/json\" rel=\"nofollow\">http://pypi.python.org/pypi/Kotti/json</a>\u201d.</p>\n<p>See <a href=\"http://pypi.python.org/pypi/Kotti/json\" rel=\"nofollow\">http://pypi.python.org/pypi/Kotti/json</a> to see the JSON that is parsed.</p>\n</div>\n<div id=\"github\">\n<h3>GitHub</h3>\n<p>Enter the GitHub owner and repo, which will be used to build a GitHub API call\nof the form: <a href=\"https://api.github.com/repos\" rel=\"nofollow\">https://api.github.com/repos</a>/{owner}/{repo}, as in\n<a href=\"https://api.github.com/repos/geojeff/kotti_software\" rel=\"nofollow\">https://api.github.com/repos/geojeff/kotti_software</a>. You may enter this GitHub\ninfo along with the PyPI URL, or use the GitHub info only.</p>\n</div>\n<div id=\"bitbucket\">\n<h3>Bitbucket</h3>\n<p>Enter the Bitbucket owner and repo, which will be used to build a Bitbucket API\ncall of the form: <a href=\"https://api.bitbucket.org/repostories\" rel=\"nofollow\">https://api.bitbucket.org/repostories</a>/{owner}/{repo}.</p>\n</div>\n</div>\n<div id=\"work-in-progress\">\n<h2>Work in progress</h2>\n<p><tt>kotti_software</tt> is considered alpha software, not yet suitable for use in\nproduction environments.  The current state of the project is in no way feature\ncomplete nor API stable.  If you really want to use it in your project(s), make\nsure to pin the exact version in your requirements.  Not doing so will likely\nbreak your project when future releases become available.</p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>Contributions to <tt>kotti_software</tt> are very welcome.\nJust clone its <a href=\"https://github.com/geojeff/kotti_software\" rel=\"nofollow\">GitHub repository</a> and submit your contributions as pull requests.</p>\n<p>Note that all development is done on the <tt>develop</tt> branch. <tt>master</tt> is reserved\nfor \u201cproduction-ready state\u201d.  Therefore, make sure to always base development work\non the current state of the <tt>develop</tt> branch.</p>\n<p>This follows the highly recommended <a href=\"http://nvie.com/posts/a-successful-git-branching-model/\" rel=\"nofollow\">A successful Git branching model</a> pattern,\nwhich is implemented by the excellent <a href=\"https://github.com/nvie/gitflow\" rel=\"nofollow\">gitflow</a> git extension.</p>\n<div id=\"testing\">\n<h3>Testing</h3>\n<p><a href=\"http://travis-ci.org/geojeff/kotti_software\" rel=\"nofollow\"><img alt=\"build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/edc9a622aab7770a0d1a9e3341297dff77df31cb/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f67656f6a6566662f6b6f7474695f736f6674776172652e706e673f6272616e63683d6d6173746572\"></a></p>\n<p><tt>kotti_software</tt> has 100% test coverage.\nPlease make sure that you add tests for new features and that all tests pass before\nsubmitting pull requests.  Running the test suite is as easy as running <tt>py.test</tt>\nfrom the source directory (you might need to run <tt>python setup.py dev</tt> to have all\nthe test requirements installed in your virtualenv).</p>\n</div>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Add i18n</li>\n<li>Add navpill-style and table-style list views for projects; make list style\nselectable in edit menu [Can/should this be punted to Kotti folder view?]</li>\n<li>Sort out and document metadata items available in setup.py vs. those\nrequiring manual entry on pypi or in kotti_software. See what happens when\nbugtrack_url, home_page, and download_url are added to setup.py. What is\ndownload_url vs. package_url? Does url in setup.py map to home_page?\n[Home page, Download URL, and Bugtrack URL are editable on pypi. If they\nare not available in setup.py, then if set manually on pypi, are they\noverwritten by new release pushes to pypi, or do they stick?]</li>\n<li>Check on need for required testing dependencies copied from kotti_media</li>\n<li>Add support for using tags to categorize by group with an example,\nor add a \u201csub-collection\u201d property if the tags route is not workable.</li>\n<li>Presently, the view for SoftwareCollection does a site-wide search for all\nSoftwareProject items. Should this be changed to context.children? [Ties in\nwith tags and/or categorization question.]</li>\n<li>Change use of all-jambed-up softwarecollection to software-collection and\nsoftware_collection; same for softwareproject. Or, OK as is?</li>\n<li>Add better visual separation between items in default list view (the only\nlist view style available now; see above todo item)</li>\n<li>Are on-load refreshes from pypi and github too expensive? What are\nalternatives? Nightly cron job? More frequent cron job? Refreshing on a\ntimer? Every 5 minutes? Every hour? Manual trigger by admin?</li>\n</ul>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>Jeff Pittman [geojeff]</p>\n<p>kotti_software started as a copy of kotti_blog, and also follows some design\nand layout features of kotti_media.</p>\n<p>for kotti_media:</p>\n<p>Andreas Kaiser [disko]</p>\n<p>for kotti_blog:</p>\n<p>Marco Scheidhuber [j23d]\nMike Orr [mikeorr]</p>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<div id=\"id1\">\n<h3>0.1.4</h3>\n<blockquote>\n<ul>\n<li>Updated readme for revised usage instructions.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id2\">\n<h3>0.1.3</h3>\n<blockquote>\n<ul>\n<li>Renamed user to owner for github and bitbucket.</li>\n<li>In property descriptions, now using PyPI, GitHub, and Bitbucket spellings.</li>\n<li>Added bitbucket as JSON source.</li>\n<li>Removed generic JSON source option, and made all references explicit for\nPyPI.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id3\">\n<h3>0.1.2</h3>\n<blockquote>\n<ul>\n<li>Added support for sorting in either ascending or descending order (default\nis still descending).</li>\n<li>Added github repo API call as an alternate or sole JSON source.</li>\n<li>Cleaned up sorting code.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id4\">\n<h3>0.1.1</h3>\n<blockquote>\n<ul>\n<li>Added missing TODO.txt.</li>\n<li>Changed test urls to hit pypi/Kotti/json.</li>\n<li>Prepared MANIFEST.in.</li>\n<li>Updated README following pattern of kotti_media.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id5\">\n<h3>0.1</h3>\n<ul>\n<li>Initial release.</li>\n<li>Started with copy of kotti_blog.</li>\n<li>During development referred to kotti_media for adding url properties,\nfor setting up view classes, and for preparation of tests and use of\ntravis-ci.org.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 793992, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "8bcb409bfddcb8eb713535f58ef78c1b", "sha256": "89a6e94c1ba7458a9f0c67f17c99e4bda76b08b8f2f6e4419a9d81c701070d22"}, "downloads": -1, "filename": "kotti_software-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8bcb409bfddcb8eb713535f58ef78c1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15567, "upload_time": "2012-10-05T19:44:16", "upload_time_iso_8601": "2012-10-05T19:44:16.977574Z", "url": "https://files.pythonhosted.org/packages/3c/00/278204d6295fd29269779e4086f1847d5679e9ab7cb87c4e557aaca8613e/kotti_software-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "e4b2ea68a82ba1b3509c4cc59b04904b", "sha256": "f4a3f39fb27f30eb8d12f26dc86fa226f30fb824e3af8905805176215340d1eb"}, "downloads": -1, "filename": "kotti_software-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e4b2ea68a82ba1b3509c4cc59b04904b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17282, "upload_time": "2012-10-09T02:58:12", "upload_time_iso_8601": "2012-10-09T02:58:12.942558Z", "url": "https://files.pythonhosted.org/packages/5a/3f/71907a30452fc53107bc4801d7ebc5dc18da59a1bebeaca0651383223c4e/kotti_software-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "12e00636e59f190e7618ba7b90ace564", "sha256": "66e91c683818b19633ad912aa90013d7d1c9ee94b7aaaf418f072b52ef477f5a"}, "downloads": -1, "filename": "kotti_software-0.1.3.tar.gz", "has_sig": false, "md5_digest": "12e00636e59f190e7618ba7b90ace564", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17699, "upload_time": "2012-10-09T17:40:12", "upload_time_iso_8601": "2012-10-09T17:40:12.710392Z", "url": "https://files.pythonhosted.org/packages/38/e7/aaffb93c880528acafa9e5e96cf369077f2751667a6f735df64c04f87049/kotti_software-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "798b819cab3b2ff4997b93567b0a174e", "sha256": "a34b3ae41086b510c00c40f92e351209e48afebdf0d9fc3b247650457f143ea6"}, "downloads": -1, "filename": "kotti_software-0.1.4.tar.gz", "has_sig": false, "md5_digest": "798b819cab3b2ff4997b93567b0a174e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17894, "upload_time": "2012-10-09T17:57:15", "upload_time_iso_8601": "2012-10-09T17:57:15.728578Z", "url": "https://files.pythonhosted.org/packages/d0/29/48e6d033156fbde21890651dce715cd764027191ec2710d01756c42f79ca/kotti_software-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "798b819cab3b2ff4997b93567b0a174e", "sha256": "a34b3ae41086b510c00c40f92e351209e48afebdf0d9fc3b247650457f143ea6"}, "downloads": -1, "filename": "kotti_software-0.1.4.tar.gz", "has_sig": false, "md5_digest": "798b819cab3b2ff4997b93567b0a174e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17894, "upload_time": "2012-10-09T17:57:15", "upload_time_iso_8601": "2012-10-09T17:57:15.728578Z", "url": "https://files.pythonhosted.org/packages/d0/29/48e6d033156fbde21890651dce715cd764027191ec2710d01756c42f79ca/kotti_software-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:53 2020"}