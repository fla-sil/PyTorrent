{"info": {"author": "Ben Mather", "author_email": "bwhmather@bwhmather.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Printing", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Hardware :: Hardware Drivers"], "description": "Python Linemode Printing\n========================\n\n|build-status| |coverage|\n\nPython library for communicating with line-mode thermal printers.\nCurrently works only with printers that support the star line mode protocol but adding support for other similar printers should be possible.\n\nAlso provides a module for compiling an xml description of a page to a list of commands.\n\nDeveloped at `Newman Online Ltd`_ and open sourced with permission.\n\nExamples\n--------\n\nBasic, without template system:\n\n.. code:: python\n\n    from linemode import open_printer\n\n    printer = open_printer('star+lpt:///dev/usb/lp0')\n\n    printer.run_commands([\n        ('fontsize-large'),\n        ('select-bold'),\n        ('write', \"Hello world\\n\"),\n        ('cut-through'),\n    ])\n\nRunning templates:\n\n.. code:: python\n\n    from linemode import open_printer\n    from linemode.renderers import xml\n\n    printer = open_printer('star+lpt:///dev/usb/lp0')\n\n    printer.run_commands(xml.render(\"\"\"\n    <document>\n      <line>\n        <bold>Hello world</bold>\n      </line>\n    </document>\n    \"\"\"))\n\nWith jinja:\n\n.. code:: python\n\n    from jinja2 import Template\n\n    from linemode import open_printer\n    from linemode.renderers import xml\n\n    printer = open_printer('star+lpt:///dev/usb/lp0')\n\n    # jinja2 template\n    template = \"\"\"\n    <document>\n      {% for potatoes in [1, 2, 3, 4] %}\n      <line>\n        {{ potatoes }} potato\n      </line>\n      {% endfor %}\n    </document>\n    \"\"\"\n    # line mode printer document\n    document = Template(template).render()\n\n    # iterator of generic printer instructions\n    commands = xml.render(document)\n\n    # printer specific compiled representation\n    program = printer.compile(commands)\n\n    printer.execute(program)\n\nCommand Language\n----------------\n\nPrinter drivers accept an iterable of command tuples.\nTuples should contain a command name followed by any number of primitive arguments.\nFor convenience, a tuple containing just a command name can be replaced with the command name.\n\nThe following commands are supported:\n\n``reset``\n  Reset everything to it's initial state.\n\n``select-bold``/``cancel-bold``\n  Toggle printing bold text.\n\n``select-highlight``/``cancel-highlight``\n  Toggle printing white on black instead of black on white.\n\n``fontsize-small``/``fontsize-medium``/``fontsize-large``\n  Set the line height for the current line and all following lines.\n  If not sent at the beginning of a new line then behaviour is undefined.\n  Characters should remain the same width.\n\n  Default: ``fontsize-small``\n\n``write <string>``\n  Print the contents of a unicode string.\n  If any characters are unsupported, they will be replaced with '?'.\n\n``barcode <style> <data>``\n  TODO\n\n``newline``\n  Flush the line buffer and start a new line.\n\n``cut-through``\n  Create a cut at the next mark\n\n``cut-partial``\n  Create a perforated cut at the next mark\n\n``cut-through-immediate``\n  Create a cut at the current cursor position\n\n``cut-partial-immediate``\n  Create a perforated cut at the current cursor position\n\nBugs\n----\n\nPlease post any problems or feature requests using the `issue tracker`_.\nPull requests welcome.\nNew drivers would be greatly appreciated.\n\n\n.. |build-status| image:: https://travis-ci.org/bwhmather/python-linemode.png?branch=develop\n    :target: https://travis-ci.org/bwhmather/python-linemode\n    :alt: Build Status\n.. |coverage| image:: https://coveralls.io/repos/bwhmather/python-linemode/badge.png?branch=develop\n    :target: https://coveralls.io/r/bwhmather/python-linemode?branch=develop\n    :alt: Coverage\n.. _Newman Online Ltd: http://newmanonline.org.uk\n.. _issue tracker: https://github.com/bwhmather/python-linemode/issues\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "github.com/bwhmather/python-linemode", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "linemode", "package_url": "https://pypi.org/project/linemode/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/linemode/", "project_urls": {"Download": "UNKNOWN", "Homepage": "github.com/bwhmather/python-linemode"}, "release_url": "https://pypi.org/project/linemode/0.4.0/", "requires_dist": null, "requires_python": null, "summary": "Drivers and templates for thermal printers", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/bwhmather/python-linemode\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0f96fffc7eb0cdf2f1ae14bf0af24db55e2a5ad1/68747470733a2f2f7472617669732d63692e6f72672f6277686d61746865722f707974686f6e2d6c696e656d6f64652e706e673f6272616e63683d646576656c6f70\"></a> <a href=\"https://coveralls.io/r/bwhmather/python-linemode?branch=develop\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3026e70395ee7dc5db00cedac1df81f9859d868e/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6277686d61746865722f707974686f6e2d6c696e656d6f64652f62616467652e706e673f6272616e63683d646576656c6f70\"></a></p>\n<p>Python library for communicating with line-mode thermal printers.\nCurrently works only with printers that support the star line mode protocol but adding support for other similar printers should be possible.</p>\n<p>Also provides a module for compiling an xml description of a page to a list of commands.</p>\n<p>Developed at <a href=\"http://newmanonline.org.uk\" rel=\"nofollow\">Newman Online Ltd</a> and open sourced with permission.</p>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Basic, without template system:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">linemode</span> <span class=\"kn\">import</span> <span class=\"n\">open_printer</span>\n\n<span class=\"n\">printer</span> <span class=\"o\">=</span> <span class=\"n\">open_printer</span><span class=\"p\">(</span><span class=\"s1\">'star+lpt:///dev/usb/lp0'</span><span class=\"p\">)</span>\n\n<span class=\"n\">printer</span><span class=\"o\">.</span><span class=\"n\">run_commands</span><span class=\"p\">([</span>\n    <span class=\"p\">(</span><span class=\"s1\">'fontsize-large'</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s1\">'select-bold'</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s1\">'write'</span><span class=\"p\">,</span> <span class=\"s2\">\"Hello world</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s1\">'cut-through'</span><span class=\"p\">),</span>\n<span class=\"p\">])</span>\n</pre>\n<p>Running templates:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">linemode</span> <span class=\"kn\">import</span> <span class=\"n\">open_printer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">linemode.renderers</span> <span class=\"kn\">import</span> <span class=\"n\">xml</span>\n\n<span class=\"n\">printer</span> <span class=\"o\">=</span> <span class=\"n\">open_printer</span><span class=\"p\">(</span><span class=\"s1\">'star+lpt:///dev/usb/lp0'</span><span class=\"p\">)</span>\n\n<span class=\"n\">printer</span><span class=\"o\">.</span><span class=\"n\">run_commands</span><span class=\"p\">(</span><span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"\n&lt;document&gt;\n  &lt;line&gt;\n    &lt;bold&gt;Hello world&lt;/bold&gt;\n  &lt;/line&gt;\n&lt;/document&gt;\n\"\"\"</span><span class=\"p\">))</span>\n</pre>\n<p>With jinja:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">jinja2</span> <span class=\"kn\">import</span> <span class=\"n\">Template</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">linemode</span> <span class=\"kn\">import</span> <span class=\"n\">open_printer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">linemode.renderers</span> <span class=\"kn\">import</span> <span class=\"n\">xml</span>\n\n<span class=\"n\">printer</span> <span class=\"o\">=</span> <span class=\"n\">open_printer</span><span class=\"p\">(</span><span class=\"s1\">'star+lpt:///dev/usb/lp0'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># jinja2 template</span>\n<span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"\n&lt;document&gt;\n  {</span><span class=\"si\">% f</span><span class=\"s2\">or potatoes in [1, 2, 3, 4] %}\n  &lt;line&gt;\n    {{ potatoes }} potato\n  &lt;/line&gt;\n  {</span><span class=\"si\">% e</span><span class=\"s2\">ndfor %}\n&lt;/document&gt;\n\"\"\"</span>\n<span class=\"c1\"># line mode printer document</span>\n<span class=\"n\">document</span> <span class=\"o\">=</span> <span class=\"n\">Template</span><span class=\"p\">(</span><span class=\"n\">template</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># iterator of generic printer instructions</span>\n<span class=\"n\">commands</span> <span class=\"o\">=</span> <span class=\"n\">xml</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">document</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># printer specific compiled representation</span>\n<span class=\"n\">program</span> <span class=\"o\">=</span> <span class=\"n\">printer</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"n\">commands</span><span class=\"p\">)</span>\n\n<span class=\"n\">printer</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">program</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"command-language\">\n<h2>Command Language</h2>\n<p>Printer drivers accept an iterable of command tuples.\nTuples should contain a command name followed by any number of primitive arguments.\nFor convenience, a tuple containing just a command name can be replaced with the command name.</p>\n<p>The following commands are supported:</p>\n<dl>\n<dt><tt>reset</tt></dt>\n<dd>Reset everything to it\u2019s initial state.</dd>\n<dt><tt><span class=\"pre\">select-bold</span></tt>/<tt><span class=\"pre\">cancel-bold</span></tt></dt>\n<dd>Toggle printing bold text.</dd>\n<dt><tt><span class=\"pre\">select-highlight</span></tt>/<tt><span class=\"pre\">cancel-highlight</span></tt></dt>\n<dd>Toggle printing white on black instead of black on white.</dd>\n<dt><tt><span class=\"pre\">fontsize-small</span></tt>/<tt><span class=\"pre\">fontsize-medium</span></tt>/<tt><span class=\"pre\">fontsize-large</span></tt></dt>\n<dd><p>Set the line height for the current line and all following lines.\nIf not sent at the beginning of a new line then behaviour is undefined.\nCharacters should remain the same width.</p>\n<p>Default: <tt><span class=\"pre\">fontsize-small</span></tt></p>\n</dd>\n<dt><tt>write &lt;string&gt;</tt></dt>\n<dd>Print the contents of a unicode string.\nIf any characters are unsupported, they will be replaced with \u2018?\u2019.</dd>\n<dt><tt>barcode &lt;style&gt; &lt;data&gt;</tt></dt>\n<dd>TODO</dd>\n<dt><tt>newline</tt></dt>\n<dd>Flush the line buffer and start a new line.</dd>\n<dt><tt><span class=\"pre\">cut-through</span></tt></dt>\n<dd>Create a cut at the next mark</dd>\n<dt><tt><span class=\"pre\">cut-partial</span></tt></dt>\n<dd>Create a perforated cut at the next mark</dd>\n<dt><tt><span class=\"pre\">cut-through-immediate</span></tt></dt>\n<dd>Create a cut at the current cursor position</dd>\n<dt><tt><span class=\"pre\">cut-partial-immediate</span></tt></dt>\n<dd>Create a perforated cut at the current cursor position</dd>\n</dl>\n</div>\n<div id=\"bugs\">\n<h2>Bugs</h2>\n<p>Please post any problems or feature requests using the <a href=\"https://github.com/bwhmather/python-linemode/issues\" rel=\"nofollow\">issue tracker</a>.\nPull requests welcome.\nNew drivers would be greatly appreciated.</p>\n</div>\n\n          </div>"}, "last_serial": 1462894, "releases": {"0.0.1": [], "0.1.0": [{"comment_text": "", "digests": {"md5": "4a075f76411cb65efac5c4443d5be451", "sha256": "192ec94e726540aee83f2525336e47e748d6353f717e5368dac3708097084e0d"}, "downloads": -1, "filename": "linemode-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4a075f76411cb65efac5c4443d5be451", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7215, "upload_time": "2014-12-20T15:58:31", "upload_time_iso_8601": "2014-12-20T15:58:31.021184Z", "url": "https://files.pythonhosted.org/packages/09/78/cd2dc2a9d1c2774c975af589cc5deda04f908a639069612a3e323bacdf54/linemode-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "95a9c23da3052c2a667756562177b3db", "sha256": "b0b127e76a167f21d5a9da4a307672f573a833230ad9f400bba38a6a371bf14a"}, "downloads": -1, "filename": "linemode-0.2.0.tar.gz", "has_sig": false, "md5_digest": "95a9c23da3052c2a667756562177b3db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8330, "upload_time": "2014-12-20T15:57:42", "upload_time_iso_8601": "2014-12-20T15:57:42.085826Z", "url": "https://files.pythonhosted.org/packages/e9/3e/60ac5c552d7a6b316ab9c0e840df0fa158033b9521a478fec98af1063b30/linemode-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "0535d9425b6eba2de4fa7bd56e21b019", "sha256": "04a171f4f0dee674cd6208e4496ee2c3ce04afae3cb893eb4f45e181503c37cf"}, "downloads": -1, "filename": "linemode-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0535d9425b6eba2de4fa7bd56e21b019", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9488, "upload_time": "2014-12-20T15:56:31", "upload_time_iso_8601": "2014-12-20T15:56:31.066041Z", "url": "https://files.pythonhosted.org/packages/a7/54/bca2270225e5f226a51079393cb6fc8b15e9086bc25a23b98a7f60e5a27f/linemode-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "6ada163d6878ef20bf8b9c19dc09cb8e", "sha256": "aed54ceae83531bd8f110c04d0f031572083026e5f0adef17c86a25d5c5d0262"}, "downloads": -1, "filename": "linemode-0.3.0.tar.gz", "has_sig": false, "md5_digest": "6ada163d6878ef20bf8b9c19dc09cb8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10218, "upload_time": "2015-01-22T19:15:52", "upload_time_iso_8601": "2015-01-22T19:15:52.032578Z", "url": "https://files.pythonhosted.org/packages/3a/f7/66fbc0b2b93b95c47fe3491807498b4c6703be4e552c3392e6b5896ae2b0/linemode-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "b818644bfcc7ebe850888e4f632f95a7", "sha256": "a8375c8694fa96f919b32b33029d22f98ba1685cc64310e85b771fa1dfce8084"}, "downloads": -1, "filename": "linemode-0.4.0.tar.gz", "has_sig": false, "md5_digest": "b818644bfcc7ebe850888e4f632f95a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10528, "upload_time": "2015-03-16T15:09:49", "upload_time_iso_8601": "2015-03-16T15:09:49.959375Z", "url": "https://files.pythonhosted.org/packages/1d/db/5b4e327cbeee1d6c91b1763306912a2cb7995c370d39cf6c9dc6f72aec02/linemode-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b818644bfcc7ebe850888e4f632f95a7", "sha256": "a8375c8694fa96f919b32b33029d22f98ba1685cc64310e85b771fa1dfce8084"}, "downloads": -1, "filename": "linemode-0.4.0.tar.gz", "has_sig": false, "md5_digest": "b818644bfcc7ebe850888e4f632f95a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10528, "upload_time": "2015-03-16T15:09:49", "upload_time_iso_8601": "2015-03-16T15:09:49.959375Z", "url": "https://files.pythonhosted.org/packages/1d/db/5b4e327cbeee1d6c91b1763306912a2cb7995c370d39cf6c9dc6f72aec02/linemode-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:45 2020"}