{"info": {"author": "Omar Sandoval", "author_email": "osandov@osandov.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Topic :: Software Development :: Debuggers"], "description": "drgn\n====\n\n.. image:: https://img.shields.io/pypi/v/drgn\n    :target: https://pypi.org/project/drgn/\n    :alt: PyPI\n\n.. image:: https://travis-ci.org/osandov/drgn.svg?branch=master\n    :target: https://travis-ci.org/osandov/drgn\n    :alt: Build Status\n\n.. image:: https://readthedocs.org/projects/drgn/badge/?version=latest\n    :target: https://drgn.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n\n.. start-introduction\n\ndrgn (pronounced \"dragon\") is a debugger with an emphasis on programmability.\ndrgn exposes the types and variables in a program for easy, expressive\nscripting in Python. For example, you can debug the Linux kernel:\n\n.. code-block:: pycon\n\n    >>> from drgn.helpers.linux import list_for_each_entry\n    >>> for mod in list_for_each_entry('struct module',\n    ...                                prog['modules'].address_of_(),\n    ...                                'list'):\n    ...    if mod.refcnt.counter > 10:\n    ...        print(mod.name)\n    ...\n    (char [56])\"snd\"\n    (char [56])\"evdev\"\n    (char [56])\"i915\"\n\nAlthough other debuggers like `GDB <https://www.gnu.org/software/gdb/>`_ have\nscripting support, drgn aims to make scripting as natural as possible so that\ndebugging feels like coding. This makes it well-suited for introspecting the\ncomplex, inter-connected state in large programs. It is also designed as a\nlibrary that can be used to build debugging and introspection tools; see the\nofficial `tools <https://github.com/osandov/drgn/tree/master/tools>`_.\n\ndrgn was developed for debugging the Linux kernel (as an alternative to the\n`crash <http://people.redhat.com/anderson/>`_ utility), but it can also debug\nuserspace programs written in C. C++ support is in progress.\n\n.. end-introduction\n\nDocumentation can be found at `drgn.readthedocs.io\n<https://drgn.readthedocs.io>`_.\n\nInstallation\n------------\n\n.. start-install-dependencies\n\nInstall dependencies:\n\nArch Linux::\n\n    $ sudo pacman -S --needed autoconf automake bison bzip2 flex gawk gcc libtool make pkgconf python python-setuptools xz zlib\n\nDebian/Ubuntu::\n\n    $ sudo apt-get install autoconf automake bison flex gawk gcc libbz2-dev liblzma-dev libtool make pkgconf python3 python3-dev python3-setuptools zlib1g-dev\n\nNote that Debian Stretch, Ubuntu Trusty, and Ubuntu Xenial (and older) ship\nPython versions which are too old. Python 3.6 or newer must be installed\nmanually.\n\nFedora::\n\n    $ sudo dnf install autoconf automake bison bzip2-devel flex gawk gcc libtool make pkgconf python3 python3-devel python3-setuptools xz-devel zlib-devel\n\nOptionally, install:\n\n* `libkdumpfile <https://github.com/ptesarik/libkdumpfile>`_ if you want\n  support for kdump-compressed kernel core dumps\n\n.. end-install-dependencies\n\nThen, run:\n\n.. code-block:: console\n\n    $ sudo pip3 install drgn\n\nSee the `installation documentation\n<https://drgn.readthedocs.io/en/latest/installation.html>`_ for more options.\n\nQuick Start\n-----------\n\n.. start-quick-start\n\ndrgn debugs the running kernel by default; run ``sudo drgn``. To debug a\nrunning program, run ``sudo drgn -p $PID``. To debug a core dump (either a\nkernel vmcore or a userspace core dump), run ``drgn -c $PATH``. The program\nmust have debugging symbols available.\n\nThen, you can access variables in the program with ``prog['name']``, access\nstructure members with ``.``, use various predefined helpers, and more:\n\n.. code-block:: pycon\n\n    $ sudo drgn\n    >>> prog['init_task'].comm\n    (char [16])\"swapper/0\"\n    >>> d_path(fget(find_task(prog, 1), 0).f_path.address_of_())\n    b'/dev/null'\n    >>> max(task.stime for task in for_each_task(prog))\n    (u64)4192109975952\n    >>> sum(disk.gendisk.part0.nr_sects for disk in for_each_disk(prog))\n    (sector_t)999705952\n\n.. end-quick-start\n\nSee the `user guide <https://drgn.readthedocs.io/en/latest/user_guide.html>`_\nfor more information.\n\nLicense\n-------\n\n.. start-license\n\nCopyright 2018-2020 Omar Sandoval\n\ndrgn is licensed under the `GPLv3\n<https://www.gnu.org/licenses/gpl-3.0.en.html>`_ or later.\n\n.. end-license", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/osandov/drgn", "keywords": "", "license": "GPL-3.0+", "maintainer": "", "maintainer_email": "", "name": "drgn", "package_url": "https://pypi.org/project/drgn/", "platform": "", "project_url": "https://pypi.org/project/drgn/", "project_urls": {"Bug Tracker": "https://github.com/osandov/drgn/issues", "Documentation": "https://drgn.readthedocs.io", "Homepage": "https://github.com/osandov/drgn"}, "release_url": "https://pypi.org/project/drgn/0.0.4/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Scriptable debugger library", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/drgn/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/378fc55b6f011554000dd218d962f6f8b568dcb3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6472676e\"></a>\n<a href=\"https://travis-ci.org/osandov/drgn\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/063031fd361e11325c136a35883c50a4fe1bed17/68747470733a2f2f7472617669732d63692e6f72672f6f73616e646f762f6472676e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://drgn.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/223770bc10775f567838bac52058243aacc516bb/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6472676e2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/code%20style-black-000000.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<p>drgn (pronounced \u201cdragon\u201d) is a debugger with an emphasis on programmability.\ndrgn exposes the types and variables in a program for easy, expressive\nscripting in Python. For example, you can debug the Linux kernel:</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">drgn.helpers.linux</span> <span class=\"kn\">import</span> <span class=\"n\">list_for_each_entry</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">mod</span> <span class=\"ow\">in</span> <span class=\"n\">list_for_each_entry</span><span class=\"p\">(</span><span class=\"s1\">'struct module'</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                               <span class=\"n\">prog</span><span class=\"p\">[</span><span class=\"s1\">'modules'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">address_of_</span><span class=\"p\">(),</span>\n<span class=\"gp\">... </span>                               <span class=\"s1\">'list'</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>   <span class=\"k\">if</span> <span class=\"n\">mod</span><span class=\"o\">.</span><span class=\"n\">refcnt</span><span class=\"o\">.</span><span class=\"n\">counter</span> <span class=\"o\">&gt;</span> <span class=\"mi\">10</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>       <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">mod</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">(char [56])\"snd\"\n(char [56])\"evdev\"\n(char [56])\"i915\"</span>\n</pre>\n<p>Although other debuggers like <a href=\"https://www.gnu.org/software/gdb/\" rel=\"nofollow\">GDB</a> have\nscripting support, drgn aims to make scripting as natural as possible so that\ndebugging feels like coding. This makes it well-suited for introspecting the\ncomplex, inter-connected state in large programs. It is also designed as a\nlibrary that can be used to build debugging and introspection tools; see the\nofficial <a href=\"https://github.com/osandov/drgn/tree/master/tools\" rel=\"nofollow\">tools</a>.</p>\n<p>drgn was developed for debugging the Linux kernel (as an alternative to the\n<a href=\"http://people.redhat.com/anderson/\" rel=\"nofollow\">crash</a> utility), but it can also debug\nuserspace programs written in C. C++ support is in progress.</p>\n<p>Documentation can be found at <a href=\"https://drgn.readthedocs.io\" rel=\"nofollow\">drgn.readthedocs.io</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install dependencies:</p>\n<p>Arch Linux:</p>\n<pre>$ sudo pacman -S --needed autoconf automake bison bzip2 flex gawk gcc libtool make pkgconf python python-setuptools xz zlib\n</pre>\n<p>Debian/Ubuntu:</p>\n<pre>$ sudo apt-get install autoconf automake bison flex gawk gcc libbz2-dev liblzma-dev libtool make pkgconf python3 python3-dev python3-setuptools zlib1g-dev\n</pre>\n<p>Note that Debian Stretch, Ubuntu Trusty, and Ubuntu Xenial (and older) ship\nPython versions which are too old. Python 3.6 or newer must be installed\nmanually.</p>\n<p>Fedora:</p>\n<pre>$ sudo dnf install autoconf automake bison bzip2-devel flex gawk gcc libtool make pkgconf python3 python3-devel python3-setuptools xz-devel zlib-devel\n</pre>\n<p>Optionally, install:</p>\n<ul>\n<li><a href=\"https://github.com/ptesarik/libkdumpfile\" rel=\"nofollow\">libkdumpfile</a> if you want\nsupport for kdump-compressed kernel core dumps</li>\n</ul>\n<p>Then, run:</p>\n<pre><span class=\"gp\">$</span> sudo pip3 install drgn\n</pre>\n<p>See the <a href=\"https://drgn.readthedocs.io/en/latest/installation.html\" rel=\"nofollow\">installation documentation</a> for more options.</p>\n</div>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<p>drgn debugs the running kernel by default; run <tt>sudo drgn</tt>. To debug a\nrunning program, run <tt>sudo drgn <span class=\"pre\">-p</span> $PID</tt>. To debug a core dump (either a\nkernel vmcore or a userspace core dump), run <tt>drgn <span class=\"pre\">-c</span> $PATH</tt>. The program\nmust have debugging symbols available.</p>\n<p>Then, you can access variables in the program with <tt><span class=\"pre\">prog['name']</span></tt>, access\nstructure members with <tt>.</tt>, use various predefined helpers, and more:</p>\n<pre><span class=\"go\">$ sudo drgn\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">prog</span><span class=\"p\">[</span><span class=\"s1\">'init_task'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">comm</span>\n<span class=\"go\">(char [16])\"swapper/0\"\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d_path</span><span class=\"p\">(</span><span class=\"n\">fget</span><span class=\"p\">(</span><span class=\"n\">find_task</span><span class=\"p\">(</span><span class=\"n\">prog</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">f_path</span><span class=\"o\">.</span><span class=\"n\">address_of_</span><span class=\"p\">())</span>\n<span class=\"go\">b'/dev/null'\n</span><span class=\"nb\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">stime</span> <span class=\"k\">for</span> <span class=\"n\">task</span> <span class=\"ow\">in</span> <span class=\"n\">for_each_task</span><span class=\"p\">(</span><span class=\"n\">prog</span><span class=\"p\">))</span>\n<span class=\"go\">(u64)4192109975952\n</span><span class=\"nb\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">disk</span><span class=\"o\">.</span><span class=\"n\">gendisk</span><span class=\"o\">.</span><span class=\"n\">part0</span><span class=\"o\">.</span><span class=\"n\">nr_sects</span> <span class=\"k\">for</span> <span class=\"n\">disk</span> <span class=\"ow\">in</span> <span class=\"n\">for_each_disk</span><span class=\"p\">(</span><span class=\"n\">prog</span><span class=\"p\">))</span>\n<span class=\"go\">(sector_t)999705952</span>\n</pre>\n<p>See the <a href=\"https://drgn.readthedocs.io/en/latest/user_guide.html\" rel=\"nofollow\">user guide</a>\nfor more information.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright 2018-2020 Omar Sandoval</p>\n<p>drgn is licensed under the <a href=\"https://www.gnu.org/licenses/gpl-3.0.en.html\" rel=\"nofollow\">GPLv3</a> or later.</p>\n</div>\n\n          </div>"}, "last_serial": 7072226, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "e97423abd9b46098a9719d70fbadad52", "sha256": "3b8306c8bf379e43d903bdf9c285d1f9c9169816093d553413d4d74100ca77dd"}, "downloads": -1, "filename": "drgn-0.0.0.tar.gz", "has_sig": false, "md5_digest": "e97423abd9b46098a9719d70fbadad52", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1229, "upload_time": "2020-01-11T01:27:51", "upload_time_iso_8601": "2020-01-11T01:27:51.045825Z", "url": "https://files.pythonhosted.org/packages/24/c6/ca25d442f3359bd10ea5034a2674a7d8c2ed2e75060dfd674f11389935a0/drgn-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "97caf30829ec5f67e1d570f9874c014d", "sha256": "134fba405b8507f4da399737b12702f5c9ea629dba3e8b35a8d453bf787a66c5"}, "downloads": -1, "filename": "drgn-0.0.1.tar.gz", "has_sig": false, "md5_digest": "97caf30829ec5f67e1d570f9874c014d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9204211, "upload_time": "2020-01-23T22:28:08", "upload_time_iso_8601": "2020-01-23T22:28:08.006442Z", "url": "https://files.pythonhosted.org/packages/ee/a9/b3f785b3ccf1e976fbc0e8cfbe93dae4d061379c203ff19e0c21427d5c05/drgn-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "296655c940bd3575c171ff9a758fce51", "sha256": "45f1f7ce698a4095240a0e1274014aef822fc6af6fa98f1c7116f53029026fa5"}, "downloads": -1, "filename": "drgn-0.0.2.tar.gz", "has_sig": false, "md5_digest": "296655c940bd3575c171ff9a758fce51", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9205150, "upload_time": "2020-01-31T21:35:15", "upload_time_iso_8601": "2020-01-31T21:35:15.662705Z", "url": "https://files.pythonhosted.org/packages/74/ca/ecee396df6fe97fd4d75ce0f8d00e9d20830796fd429750e9b651e4a385f/drgn-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "fe38d78805712ca70e1265e8f9b55a80", "sha256": "986477ee3d381ee8280e018644c8c3874e49e716f1487557f9fd28c30f78793b"}, "downloads": -1, "filename": "drgn-0.0.3.tar.gz", "has_sig": false, "md5_digest": "fe38d78805712ca70e1265e8f9b55a80", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9245184, "upload_time": "2020-02-21T19:07:05", "upload_time_iso_8601": "2020-02-21T19:07:05.057976Z", "url": "https://files.pythonhosted.org/packages/a7/c0/a6a0dd9d8d14378bf82f81e4645eaefdbcaf2babea57d321b1e3af8023ea/drgn-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "336f2039ebb93f9192a49bf621597b96", "sha256": "845d30a8944f367f3277f55ae3c9058ef42d8146dc5a105410dd81481f968797"}, "downloads": -1, "filename": "drgn-0.0.4.tar.gz", "has_sig": false, "md5_digest": "336f2039ebb93f9192a49bf621597b96", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9301706, "upload_time": "2020-04-21T23:12:21", "upload_time_iso_8601": "2020-04-21T23:12:21.954037Z", "url": "https://files.pythonhosted.org/packages/06/fc/5e0158c1a52cc770e18b929a74bc07ba53bf829df8e5f7dc07220846a2e5/drgn-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "336f2039ebb93f9192a49bf621597b96", "sha256": "845d30a8944f367f3277f55ae3c9058ef42d8146dc5a105410dd81481f968797"}, "downloads": -1, "filename": "drgn-0.0.4.tar.gz", "has_sig": false, "md5_digest": "336f2039ebb93f9192a49bf621597b96", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9301706, "upload_time": "2020-04-21T23:12:21", "upload_time_iso_8601": "2020-04-21T23:12:21.954037Z", "url": "https://files.pythonhosted.org/packages/06/fc/5e0158c1a52cc770e18b929a74bc07ba53bf829df8e5f7dc07220846a2e5/drgn-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:37 2020"}