{"info": {"author": "Kenneth Reitz, Jacobi Petrucciani", "author_email": "jacobi@mimirhq.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "BucketStore: A simple Amazon S3 Client, for Python.\n===================================================\n\n.. image:: https://travis-ci.org/jpetrucciani/bucketstore.svg?branch=master\n    :target: https://travis-ci.org/jpetrucciani/bucketstore\n\n\n.. image:: https://badge.fury.io/py/bucketstore.svg\n   :target: https://badge.fury.io/py/bucketstore\n   :alt: PyPI version\n\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/ambv/black\n   :alt: Code style: black\n\n\n.. image:: https://img.shields.io/badge/python-3.5+-blue.svg\n   :target: https://www.python.org/downloads/release/python-350/\n   :alt: Python 3.5+ supported\n\n\n**BucketStore** is a very simple Amazon S3 client, written in Python. It\naims to be much more straight-forward to use than boto3, and specializes\nonly in Amazon S3, ignoring the rest of the AWS ecosystem.\n\n\nFeatures\n--------\n\n- Treats S3 Buckets as Key/Value stores.\n- Automatic support for ``AWS_ACCESS_KEY_ID``, ``AWS_SECRET_ACCESS_KEY``, and ``AWS_DEFAULT_REGION`` environment variables.\n- Easily make keys (or entire buckets) publically accessable.\n- Easily get the public URL for a given key.\n- Generates temporary URLs for a given key.\n- Use S3 in a pythonic way!\n\nUsage\n-----\n\nInstallation\n^^^^^^^^^^^^\n\n::\n\n    $ pip install bucketstore\n\nGet (or create) a bucket, easily:\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    import bucketstore\n\n    # Create the bucket if it doesn't exist.\n    bucket = bucketstore.get('bucketstore-playground', create=True)\n\n\nTreat the bucket like a key/value store:\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: pycon\n\n    >>> bucket\n    <S3Bucket name='bucketstore-playground'>\n\n    # get/set using array syntax\n    >>> bucket['foo'] = 'bar'\n    >>> bucket['foo']\n    bar\n\n    # get/set using methods\n    >>> bucket.set('foo2', 'bar2')\n    >>> bucket.get('foo2')\n    bar2\n\n    # list keys\n    >>> bucket.list()\n    [u'foo', u'foo2']\n\n    # all keys\n    >>> bucket.all()\n    [<S3Key name=u'foo' bucket='bucketstore-playground'>, <S3Key name=u'foo2' bucket='bucketstore-playground'>]\n\n    # check if a key exists in the bucket\n    >>> 'foo' in bucket\n    True\n\n    # delete keys in the bucket\n    >>> del bucket['foo2']\n    {}\n\n\nInteract with S3 keys:\n^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: pycon\n\n    >>> bucket.key('foo')\n    <S3Key bucket='bucketstore-playground' name=u'foo'>\n\n    >>> foo = _\n    >>> foo.set('new value')\n\n    # Generate a temporary share URL.\n    >>> foo.temp_url(duration=1200)\n    u'https://bucketstore-playground.s3.amazonaws.com/foo?AWSAccessKeyId=AKIAI2RVFNXIW7WS66QQ&Expires=1485493909&Signature=L3gD9avwQZQO1i11dIJXUiZ7Nx8%3D'\n\n    # Make key publically accessable.\n    >>> foo.make_public()\n    >>> foo.url\n    'https://s3.amazonaws.com/bucketstore-playground/foo'\n\n    # Get / set metadata for key.\n    >>> foo.meta = {'foo': 'bar'}\n    >>> foo.meta\n    {'foo': 'bar}\n\n    # Rename key to 'foo3'.\n    >>> foo.rename('foo3')\n\n    # Delete the key.\n    >>> foo.delete()\n\n    # Create a key with a content type\n    >>> foo = bucket.key('foo.html')\n    >>> foo.set('<h1>bar</h1>', content_type='text/html')\n\n    # upload to key\n    >>> bucket.key('test.py').upload('/tmp/test.py')\n\n    # or upload with a file-like object! (make sure it's open in binary mode)\n    >>> with open('/tmp/test.py', 'rb') as file:\n    >>>     bucket.key('test.py').upload(file)\n\n    # download to file\n    >>> bucket.key('test.py').download('/tmp/test.py')\n\n    # or download to a file-like object! (make sure it's open in binary mode)\n    >>> with open('/tmp/test.py', 'wb') as file:\n    >>>     bucket.key('test.py').download(file)\n\n    # size of key\n    >>> bucket.key('test.py').size()\n    >>> len(bucket.key('test.py'))\n    15\n\n\nOther methods include ``bucketstore.login(access_key_id, secret_access_key)``, ``bucketstore.list()``, and ``bucketstore.get(bucket_name, create=False)``.\n\nTests\n-----\n\nTests are run through Tox_.\n\n.. code-block:: shell\n\n    # Run tests against all environments.\n    $ tox\n    # Run against a specific version.\n    $ tox -e py36\n    # Run with pytest arguments.\n    $ tox -- --pdb\n\n.. _Tox: https://tox.readthedocs.io/en/latest/\n\n\n\u2728\ud83c\udf70\u2728", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jpetrucciani/bucketstore", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "bucketstore", "package_url": "https://pypi.org/project/bucketstore/", "platform": "", "project_url": "https://pypi.org/project/bucketstore/", "project_urls": {"Homepage": "https://github.com/jpetrucciani/bucketstore"}, "release_url": "https://pypi.org/project/bucketstore/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "A simple library for interacting with Amazon S3.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/jpetrucciani/bucketstore\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/jpetrucciani/bucketstore.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bbb57870bf557775f5eacae2ba68b25d23d4007b/68747470733a2f2f7472617669732d63692e6f72672f6a7065747275636369616e692f6275636b657473746f72652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/bucketstore\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a003c1314928efe0e2bae13505e7ba017a88bbd1/68747470733a2f2f62616467652e667572792e696f2f70792f6275636b657473746f72652e737667\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://www.python.org/downloads/release/python-350/\" rel=\"nofollow\"><img alt=\"Python 3.5+ supported\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e71b641456c2ede46c078ff79bdaba51e51edc4b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e352b2d626c75652e737667\"></a>\n<p><strong>BucketStore</strong> is a very simple Amazon S3 client, written in Python. It\naims to be much more straight-forward to use than boto3, and specializes\nonly in Amazon S3, ignoring the rest of the AWS ecosystem.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Treats S3 Buckets as Key/Value stores.</li>\n<li>Automatic support for <tt>AWS_ACCESS_KEY_ID</tt>, <tt>AWS_SECRET_ACCESS_KEY</tt>, and <tt>AWS_DEFAULT_REGION</tt> environment variables.</li>\n<li>Easily make keys (or entire buckets) publically accessable.</li>\n<li>Easily get the public URL for a given key.</li>\n<li>Generates temporary URLs for a given key.</li>\n<li>Use S3 in a pythonic way!</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>$ pip install bucketstore\n</pre>\n</div>\n<div id=\"get-or-create-a-bucket-easily\">\n<h3>Get (or create) a bucket, easily:</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">bucketstore</span>\n\n<span class=\"c1\"># Create the bucket if it doesn't exist.</span>\n<span class=\"n\">bucket</span> <span class=\"o\">=</span> <span class=\"n\">bucketstore</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'bucketstore-playground'</span><span class=\"p\">,</span> <span class=\"n\">create</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"treat-the-bucket-like-a-key-value-store\">\n<h3>Treat the bucket like a key/value store:</h3>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bucket</span>\n<span class=\"go\">&lt;S3Bucket name='bucketstore-playground'&gt;\n\n# get/set using array syntax\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bucket</span><span class=\"p\">[</span><span class=\"s1\">'foo'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'bar'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bucket</span><span class=\"p\">[</span><span class=\"s1\">'foo'</span><span class=\"p\">]</span>\n<span class=\"go\">bar\n\n# get/set using methods\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'foo2'</span><span class=\"p\">,</span> <span class=\"s1\">'bar2'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'foo2'</span><span class=\"p\">)</span>\n<span class=\"go\">bar2\n\n# list keys\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n<span class=\"go\">[u'foo', u'foo2']\n\n# all keys\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n<span class=\"go\">[&lt;S3Key name=u'foo' bucket='bucketstore-playground'&gt;, &lt;S3Key name=u'foo2' bucket='bucketstore-playground'&gt;]\n\n# check if a key exists in the bucket\n</span><span class=\"s1\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'foo'</span> <span class=\"ow\">in</span> <span class=\"n\">bucket</span>\n<span class=\"go\">True\n\n# delete keys in the bucket\n</span><span class=\"k\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">del</span> <span class=\"n\">bucket</span><span class=\"p\">[</span><span class=\"s1\">'foo2'</span><span class=\"p\">]</span>\n<span class=\"go\">{}</span>\n</pre>\n</div>\n<div id=\"interact-with-s3-keys\">\n<h3>Interact with S3 keys:</h3>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">(</span><span class=\"s1\">'foo'</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;S3Key bucket='bucketstore-playground' name=u'foo'&gt;\n\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">_</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'new value'</span><span class=\"p\">)</span>\n<span class=\"go\">\n# Generate a temporary share URL.\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">temp_url</span><span class=\"p\">(</span><span class=\"n\">duration</span><span class=\"o\">=</span><span class=\"mi\">1200</span><span class=\"p\">)</span>\n<span class=\"go\">u'https://bucketstore-playground.s3.amazonaws.com/foo?AWSAccessKeyId=AKIAI2RVFNXIW7WS66QQ&amp;Expires=1485493909&amp;Signature=L3gD9avwQZQO1i11dIJXUiZ7Nx8%3D'\n\n# Make key publically accessable.\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">make_public</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">url</span>\n<span class=\"go\">'https://s3.amazonaws.com/bucketstore-playground/foo'\n\n# Get / set metadata for key.\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">meta</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'foo'</span><span class=\"p\">:</span> <span class=\"s1\">'bar'</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">meta</span>\n<span class=\"go\">{'foo': 'bar}\n\n# Rename key to 'foo3'.\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">rename</span><span class=\"p\">(</span><span class=\"s1\">'foo3'</span><span class=\"p\">)</span>\n<span class=\"go\">\n# Delete the key.\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n<span class=\"go\">\n# Create a key with a content type\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">(</span><span class=\"s1\">'foo.html'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'&lt;h1&gt;bar&lt;/h1&gt;'</span><span class=\"p\">,</span> <span class=\"n\">content_type</span><span class=\"o\">=</span><span class=\"s1\">'text/html'</span><span class=\"p\">)</span>\n<span class=\"go\">\n# upload to key\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">(</span><span class=\"s1\">'test.py'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">upload</span><span class=\"p\">(</span><span class=\"s1\">'/tmp/test.py'</span><span class=\"p\">)</span>\n<span class=\"go\">\n# or upload with a file-like object! (make sure it's open in binary mode)\n</span><span class=\"k\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'/tmp/test.py'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">file</span><span class=\"p\">:</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">(</span><span class=\"s1\">'test.py'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">upload</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">)</span>\n<span class=\"go\">\n# download to file\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">(</span><span class=\"s1\">'test.py'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"s1\">'/tmp/test.py'</span><span class=\"p\">)</span>\n<span class=\"go\">\n# or download to a file-like object! (make sure it's open in binary mode)\n</span><span class=\"k\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'/tmp/test.py'</span><span class=\"p\">,</span> <span class=\"s1\">'wb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">file</span><span class=\"p\">:</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">(</span><span class=\"s1\">'test.py'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">)</span>\n<span class=\"go\">\n# size of key\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">(</span><span class=\"s1\">'test.py'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">(</span><span class=\"s1\">'test.py'</span><span class=\"p\">))</span>\n<span class=\"go\">15</span>\n</pre>\n<p>Other methods include <tt>bucketstore.login(access_key_id, secret_access_key)</tt>, <tt>bucketstore.list()</tt>, and <tt>bucketstore.get(bucket_name, create=False)</tt>.</p>\n</div>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>Tests are run through <a href=\"https://tox.readthedocs.io/en/latest/\" rel=\"nofollow\">Tox</a>.</p>\n<pre><span class=\"c1\"># Run tests against all environments.\n</span>$ tox\n<span class=\"c1\"># Run against a specific version.\n</span>$ tox -e py36\n<span class=\"c1\"># Run with pytest arguments.\n</span>$ tox -- --pdb\n</pre>\n<p>\u2728\ud83c\udf70\u2728</p>\n</div>\n\n          </div>"}, "last_serial": 5914266, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5b79c7e5179638964794e2e351c22d4c", "sha256": "05d3847b1115c6316cb377913bc1ecfdc087ce7eb1cc29b6a29719bc5d2bc836"}, "downloads": -1, "filename": "bucketstore-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "5b79c7e5179638964794e2e351c22d4c", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 4621, "upload_time": "2017-01-27T18:11:22", "upload_time_iso_8601": "2017-01-27T18:11:22.439937Z", "url": "https://files.pythonhosted.org/packages/d6/91/638617358d0ac49343eb71d3615ba29feb7b2e225ed11cc4c275c35d03ba/bucketstore-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5a7488ea52961bec4ec0d0bfaa9dd80", "sha256": "51b3dba38697e4296796a1397c59d12924b77701a63cd7415233b1ab862d80e1"}, "downloads": -1, "filename": "bucketstore-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b5a7488ea52961bec4ec0d0bfaa9dd80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3097, "upload_time": "2017-01-27T18:11:20", "upload_time_iso_8601": "2017-01-27T18:11:20.672064Z", "url": "https://files.pythonhosted.org/packages/10/4c/e13cd018780486f93817d6dbea4c58a184da1b09f128f078fdc6a0233e27/bucketstore-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a9597a3577aca07f73df4cc3c4260427", "sha256": "f9088fe789a782d8a506b794f4df91312a124c61980abc14b9bd0d231c95515e"}, "downloads": -1, "filename": "bucketstore-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "a9597a3577aca07f73df4cc3c4260427", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 5176, "upload_time": "2017-01-27T21:04:03", "upload_time_iso_8601": "2017-01-27T21:04:03.457563Z", "url": "https://files.pythonhosted.org/packages/f5/85/b1923fa4cda204fdbb6bd9b6c8e6d73876383b837f2c65c11a33e4d7fce9/bucketstore-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6707a18c50f217b19d99ee95b8d380f6", "sha256": "4d5f06f8a18af9928b1be141b43f8158aa7679782bea0cce9f5059f56ac0d765"}, "downloads": -1, "filename": "bucketstore-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6707a18c50f217b19d99ee95b8d380f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3444, "upload_time": "2017-01-27T21:04:01", "upload_time_iso_8601": "2017-01-27T21:04:01.579799Z", "url": "https://files.pythonhosted.org/packages/3c/ef/abc8f1a2deb38c5ed643aad0471b5b581bfe545bf4832c7d34b9c259062d/bucketstore-0.1.1.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "0a675d543c4fcd7ddf5697407dde01ed", "sha256": "b1fd20adb3c1e09b64872fc7571d955b49b8a5868118c0ec0789d0935114b490"}, "downloads": -1, "filename": "bucketstore-0.1.3-py2-none-any.whl", "has_sig": false, "md5_digest": "0a675d543c4fcd7ddf5697407dde01ed", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 5703, "upload_time": "2017-04-19T15:52:51", "upload_time_iso_8601": "2017-04-19T15:52:51.529661Z", "url": "https://files.pythonhosted.org/packages/4e/1f/5f0bb1595b5319ff2cac11beeb80c49a29ca01c642398d4ec4c5eb1687d7/bucketstore-0.1.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e70fbb388bfe931389b60e80110bd7b", "sha256": "3fc2721ca91b3d6cd16b9214c6d3be7bd97b12201e936a9475ba0320fdd72f00"}, "downloads": -1, "filename": "bucketstore-0.1.3.tar.gz", "has_sig": false, "md5_digest": "8e70fbb388bfe931389b60e80110bd7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3865, "upload_time": "2017-04-19T15:52:50", "upload_time_iso_8601": "2017-04-19T15:52:50.567646Z", "url": "https://files.pythonhosted.org/packages/ae/fb/da126368bcc1bf8a74d3abf73da5f6b720d6bef1e0d1b1409d24bd61e90b/bucketstore-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2e6250a8bdbe2632f97acf0207c37020", "sha256": "ce3f26d5cf7637d56c735c51f3d50bbaa8bc6114d1958b21388797ab3128bfbb"}, "downloads": -1, "filename": "bucketstore-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2e6250a8bdbe2632f97acf0207c37020", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5189, "upload_time": "2019-07-19T19:44:18", "upload_time_iso_8601": "2019-07-19T19:44:18.352473Z", "url": "https://files.pythonhosted.org/packages/2e/ca/26664e56b6a7cae5ce30ee98c2cce73ed87b7c4df4c9f1e6e82388e3ab51/bucketstore-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "0d5d8ab52415ad558a6f26058de7e0f3", "sha256": "36c05bfce26eeaea24a8b6a9900de695c2f0f2654594a047ebf3a8f5062d91fa"}, "downloads": -1, "filename": "bucketstore-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0d5d8ab52415ad558a6f26058de7e0f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5747, "upload_time": "2019-10-01T18:59:23", "upload_time_iso_8601": "2019-10-01T18:59:23.651809Z", "url": "https://files.pythonhosted.org/packages/bd/c5/d88b08fe93bd54a9821295adf4a32cd188b2951354569e406ba673b01d7f/bucketstore-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0d5d8ab52415ad558a6f26058de7e0f3", "sha256": "36c05bfce26eeaea24a8b6a9900de695c2f0f2654594a047ebf3a8f5062d91fa"}, "downloads": -1, "filename": "bucketstore-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0d5d8ab52415ad558a6f26058de7e0f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5747, "upload_time": "2019-10-01T18:59:23", "upload_time_iso_8601": "2019-10-01T18:59:23.651809Z", "url": "https://files.pythonhosted.org/packages/bd/c5/d88b08fe93bd54a9821295adf4a32cd188b2951354569e406ba673b01d7f/bucketstore-0.2.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:07 2020"}