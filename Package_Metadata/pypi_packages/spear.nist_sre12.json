{"info": {"author": "Elie Khoury", "author_email": "Elie.Khoury@idiap.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "Toolchain for speaker recognition evaluation on NIST SRE 2012\n=============================================================\n\nThis package contains scripts that show how to use Idiap speaker recognition tool\nto reproduce Idiap results for NIST SRE 2012.\n\nIf you use this package and/or its results, please cite the following\npublications:\n\n1. The Spear paper published at ICASSP 2014::\n\n    @inproceedings{spear,\n      author = {Khoury, E. and El Shafey, L. and Marcel, S.},\n      title = {Spear: An open source toolbox for speaker recognition based on {B}ob},\n      booktitle = {IEEE Intl. Conf. on Acoustics, Speech and Signal Processing (ICASSP)},\n      year = {2014},\n      url = {http://publications.idiap.ch/downloads/papers/2014/Khoury_ICASSP_2014.pdf},\n    }\n\n\n2. The paper that describes the development set used by the I4U consortium::\n\n    @inproceedings{Saedi_INTERSPEECH_2013,\n       author = {Saeidi, Rahim and others},\n       month = {aug},\n       title = {I4U Submission to NIST SRE 2012: a large-scale collaborative effort for noise-robust speaker verification},\n       booktitle = {INTERSPEECH},\n       year = {2013},\n       location = {Lyon, France},\n       pdf = {http://publications.idiap.ch/downloads/papers/2013/Saedi_INTERSPEECH_2013.pdf}\n    }\n\n    \n3. Bob as the core framework used to run the experiments::\n\n    @inproceedings{Anjos_ACMMM_2012,\n      author = {A. Anjos and L. El Shafey and R. Wallace and M. G\\\"unther and C. McCool and S. Marcel},\n      title = {Bob: a free signal processing and machine learning toolbox for researchers},\n      year = {2012},\n      month = oct,\n      booktitle = {20th ACM Conference on Multimedia Systems (ACMMM), Nara, Japan},\n      publisher = {ACM Press},\n      url = {http://publications.idiap.ch/downloads/papers/2012/Anjos_Bob_ACMMM12.pdf},\n    }\n\n\n\nInstallation\n------------\n\nJust download this package and decompress it locally::\n\n  $ wget http://pypi.python.org/packages/source/x/spear.nist_sre12/spear.nist_sre12-1.0.0.zip\n  $ unzip spear.nist_sre12-1.0.0.zip\n  $ cd spear.nist_sre12-1.0.0.zip\n\nUse buildout to bootstrap and have a working environment ready for\nexperiments::\n\n  $ python bootstrap\n  $ ./bin/buildout\n\nThis also requires that bob (>= 1.2.0) is installed.\n\n\nReproducing NIST-SRE 2012 experiments\n-------------------------------------\n\nGetting the data\n~~~~~~~~~~~~~~~~\n\nYou first need to order the NIST SRE databases (Fisher, Switchboard, MIXER)::\n\n  http://www.ldc.upenn.edu/Catalog/CatalogEntry.jsp?catalogId=LDC2013S03\n\nPlease follow the instructions and the evaluation plan given by NIST::\n\n  http://www.nist.gov/itl/iad/mig/sre12.cfm\n\nGetting the file lists\n~~~~~~~~~~~~~~~~~~~~~~\n\nThe file lists of the development and evaluation sets are automatically downloaded from this pypi package::\n\n  https://pypi.python.org/pypi/xbob.db.nist_sre12\n  \nThe file list of the development set were prepared by the I4U consortium. Special thanks to Rahim Saeidi for the good work (original link of the lists: http://cls.ru.nl/~saeidi/file_library/I4U.tgz). The file names were then normalized following the PRISM definition. Please follow the instructions in `xbob.db.nist_sre12`_\n\nSetting the database configuration file\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nOnce the sphere data are preprocessed, and possibly downsampled to 8KHz, you should set the paths in the configuration file to the data according to your own environment for both **Male** and **Female**::\n\n  - config/database/nist_sre12/male.py\n  - config/database/nist_sre12/female.py\n\n\nRunning the experiments\n~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following command is intended to run the entire experiment on both the development and the evaluation sets using ISV (Inter-Session Variability Modeling) and for both Male and Female::\n\n  $  bin/spkverif_isv.py -d config/database/nist_sre12/male.py -T PATH/TO/TEMP_DIR/  -U PATH/TO/RESULTS_DIR/ -p config/preprocessing/energy.py -f config/features/mfcc_60.py -t config/tools/isv/isv_512g_u200.py -b male\n\n  $  bin/spkverif_isv.py -d config/database/nist_sre12/female.py -T PATH/TO/TEMP_DIR/  -U PATH/TO/RESULTS_DIR/ -p config/preprocessing/energy.py -f config/features/mfcc_60.py -t config/tools/isv/isv_512g_u200.py -b female\n  \nFor more details and options, please type::\n\n  $ bin/spkverif_isv.py --help\n\nYou may want to change the parameters in the configuration files for VAD (Energy, 4Hz Modulation energy), Features (MFCC, LFCC), and Tools (UBM-GMM, ISV, I-Vector). Please look to the different configuration settings in::\n\n  - src/spkrec/config/\n  \nRunning on the grid\n~~~~~~~~~~~~~~~~~~~\n\nIn order to run the experiment on the grid, you need to have gridtk installed on your local network. Details can be found here::\n\n  https://pypi.python.org/pypi/gridtk\n\n\nEvaluation on the Development set\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe EER on the Development sets can be obtained using the evaluation script from the bob library.\n\nFor Male, without any score normalization::\n\n  $ ./bin/bob_compute_perf.py -d PATH/TO/RESULTS_DIR/male/scores/nonorm/scores-dev -t PATH/TO/RESULTS_DIR/male/scores/nonorm/scores-dev -x\n\n* ``EER = 4.68%``\n  \nFor Male, with ZT score normalization::\n\n  $ ./bin/bob_compute_perf.py -d PATH/TO/RESULTS_DIR/male/scores/ztnorm/scores-dev -t PATH/TO/RESULTS_DIR/male/scores/ztnorm/scores-dev -x\n\n* ``EER = 3.98%``\n\nFor Female, without any score normalization::\n\n  $ ./bin/bob_compute_perf.py -d PATH/TO/RESULTS_DIR/female/scores/nonorm/scores-dev -t PATH/TO/RESULTS_DIR/female/scores/nonorm/scores-dev -x\n\n* ``EER = 6.28%``  \n\nFor Female, with ZT score normalization::\n\n  $ ./bin/bob_compute_perf.py -d PATH/TO/RESULTS_DIR/female/scores/ztnorm/scores-dev -t PATH/TO/RESULTS_DIR/female/scores/ztnorm/scores-dev -x\n\n* ``EER = 5.16%``  \n\nNotice that there are different implementations for EER. For example, the default one in Bob is different from the implementation in Bosaris.\n\nPlease check the NIST evaluation guidlines to see how to evaluate on SRE 2012 Evaluation set. \nFurther, the simple scores should be converted to compound scores. Please find more details given by Niko Brummer on the webpage of Bosaris toolkit::\n\n  https://sites.google.com/site/bosaristoolkit/sre12\n\n.. _xbob.db.nist_sre12: https://pypi.python.org/pypi/xbob.db.nist_sre12", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/spear.nist_sre12", "keywords": "bob,xbob,xbob.db,speaker recognition", "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "spear.nist_sre12", "package_url": "https://pypi.org/project/spear.nist_sre12/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/spear.nist_sre12/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/spear.nist_sre12"}, "release_url": "https://pypi.org/project/spear.nist_sre12/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Speaker recognition toolchain for NIST SRE 2012", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package contains scripts that show how to use Idiap speaker recognition tool\nto reproduce Idiap results for NIST SRE 2012.</p>\n<p>If you use this package and/or its results, please cite the following\npublications:</p>\n<ol>\n<li><p>The Spear paper published at ICASSP 2014:</p>\n<pre>@inproceedings{spear,\n  author = {Khoury, E. and El Shafey, L. and Marcel, S.},\n  title = {Spear: An open source toolbox for speaker recognition based on {B}ob},\n  booktitle = {IEEE Intl. Conf. on Acoustics, Speech and Signal Processing (ICASSP)},\n  year = {2014},\n  url = {http://publications.idiap.ch/downloads/papers/2014/Khoury_ICASSP_2014.pdf},\n}\n</pre>\n</li>\n<li><p>The paper that describes the development set used by the I4U consortium:</p>\n<pre>@inproceedings{Saedi_INTERSPEECH_2013,\n   author = {Saeidi, Rahim and others},\n   month = {aug},\n   title = {I4U Submission to NIST SRE 2012: a large-scale collaborative effort for noise-robust speaker verification},\n   booktitle = {INTERSPEECH},\n   year = {2013},\n   location = {Lyon, France},\n   pdf = {http://publications.idiap.ch/downloads/papers/2013/Saedi_INTERSPEECH_2013.pdf}\n}\n</pre>\n</li>\n<li><p>Bob as the core framework used to run the experiments:</p>\n<pre>@inproceedings{Anjos_ACMMM_2012,\n  author = {A. Anjos and L. El Shafey and R. Wallace and M. G\\\"unther and C. McCool and S. Marcel},\n  title = {Bob: a free signal processing and machine learning toolbox for researchers},\n  year = {2012},\n  month = oct,\n  booktitle = {20th ACM Conference on Multimedia Systems (ACMMM), Nara, Japan},\n  publisher = {ACM Press},\n  url = {http://publications.idiap.ch/downloads/papers/2012/Anjos_Bob_ACMMM12.pdf},\n}\n</pre>\n</li>\n</ol>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Just download this package and decompress it locally:</p>\n<pre>$ wget http://pypi.python.org/packages/source/x/spear.nist_sre12/spear.nist_sre12-1.0.0.zip\n$ unzip spear.nist_sre12-1.0.0.zip\n$ cd spear.nist_sre12-1.0.0.zip\n</pre>\n<p>Use buildout to bootstrap and have a working environment ready for\nexperiments:</p>\n<pre>$ python bootstrap\n$ ./bin/buildout\n</pre>\n<p>This also requires that bob (&gt;= 1.2.0) is installed.</p>\n</div>\n<div id=\"reproducing-nist-sre-2012-experiments\">\n<h2>Reproducing NIST-SRE 2012 experiments</h2>\n<div id=\"getting-the-data\">\n<h3>Getting the data</h3>\n<p>You first need to order the NIST SRE databases (Fisher, Switchboard, MIXER):</p>\n<pre>http://www.ldc.upenn.edu/Catalog/CatalogEntry.jsp?catalogId=LDC2013S03\n</pre>\n<p>Please follow the instructions and the evaluation plan given by NIST:</p>\n<pre>http://www.nist.gov/itl/iad/mig/sre12.cfm\n</pre>\n</div>\n<div id=\"getting-the-file-lists\">\n<h3>Getting the file lists</h3>\n<p>The file lists of the development and evaluation sets are automatically downloaded from this pypi package:</p>\n<pre>https://pypi.python.org/pypi/xbob.db.nist_sre12\n</pre>\n<p>The file list of the development set were prepared by the I4U consortium. Special thanks to Rahim Saeidi for the good work (original link of the lists: <a href=\"http://cls.ru.nl/~saeidi/file_library/I4U.tgz\" rel=\"nofollow\">http://cls.ru.nl/~saeidi/file_library/I4U.tgz</a>). The file names were then normalized following the PRISM definition. Please follow the instructions in <a href=\"https://pypi.python.org/pypi/xbob.db.nist_sre12\" rel=\"nofollow\">xbob.db.nist_sre12</a></p>\n</div>\n<div id=\"setting-the-database-configuration-file\">\n<h3>Setting the database configuration file</h3>\n<p>Once the sphere data are preprocessed, and possibly downsampled to 8KHz, you should set the paths in the configuration file to the data according to your own environment for both <strong>Male</strong> and <strong>Female</strong>:</p>\n<pre>- config/database/nist_sre12/male.py\n- config/database/nist_sre12/female.py\n</pre>\n</div>\n<div id=\"running-the-experiments\">\n<h3>Running the experiments</h3>\n<p>The following command is intended to run the entire experiment on both the development and the evaluation sets using ISV (Inter-Session Variability Modeling) and for both Male and Female:</p>\n<pre>$  bin/spkverif_isv.py -d config/database/nist_sre12/male.py -T PATH/TO/TEMP_DIR/  -U PATH/TO/RESULTS_DIR/ -p config/preprocessing/energy.py -f config/features/mfcc_60.py -t config/tools/isv/isv_512g_u200.py -b male\n\n$  bin/spkverif_isv.py -d config/database/nist_sre12/female.py -T PATH/TO/TEMP_DIR/  -U PATH/TO/RESULTS_DIR/ -p config/preprocessing/energy.py -f config/features/mfcc_60.py -t config/tools/isv/isv_512g_u200.py -b female\n</pre>\n<p>For more details and options, please type:</p>\n<pre>$ bin/spkverif_isv.py --help\n</pre>\n<p>You may want to change the parameters in the configuration files for VAD (Energy, 4Hz Modulation energy), Features (MFCC, LFCC), and Tools (UBM-GMM, ISV, I-Vector). Please look to the different configuration settings in:</p>\n<pre>- src/spkrec/config/\n</pre>\n</div>\n<div id=\"running-on-the-grid\">\n<h3>Running on the grid</h3>\n<p>In order to run the experiment on the grid, you need to have gridtk installed on your local network. Details can be found here:</p>\n<pre>https://pypi.python.org/pypi/gridtk\n</pre>\n</div>\n<div id=\"evaluation-on-the-development-set\">\n<h3>Evaluation on the Development set</h3>\n<p>The EER on the Development sets can be obtained using the evaluation script from the bob library.</p>\n<p>For Male, without any score normalization:</p>\n<pre>$ ./bin/bob_compute_perf.py -d PATH/TO/RESULTS_DIR/male/scores/nonorm/scores-dev -t PATH/TO/RESULTS_DIR/male/scores/nonorm/scores-dev -x\n</pre>\n<ul>\n<li><tt>EER = 4.68%</tt></li>\n</ul>\n<p>For Male, with ZT score normalization:</p>\n<pre>$ ./bin/bob_compute_perf.py -d PATH/TO/RESULTS_DIR/male/scores/ztnorm/scores-dev -t PATH/TO/RESULTS_DIR/male/scores/ztnorm/scores-dev -x\n</pre>\n<ul>\n<li><tt>EER = 3.98%</tt></li>\n</ul>\n<p>For Female, without any score normalization:</p>\n<pre>$ ./bin/bob_compute_perf.py -d PATH/TO/RESULTS_DIR/female/scores/nonorm/scores-dev -t PATH/TO/RESULTS_DIR/female/scores/nonorm/scores-dev -x\n</pre>\n<ul>\n<li><tt>EER = 6.28%</tt></li>\n</ul>\n<p>For Female, with ZT score normalization:</p>\n<pre>$ ./bin/bob_compute_perf.py -d PATH/TO/RESULTS_DIR/female/scores/ztnorm/scores-dev -t PATH/TO/RESULTS_DIR/female/scores/ztnorm/scores-dev -x\n</pre>\n<ul>\n<li><tt>EER = 5.16%</tt></li>\n</ul>\n<p>Notice that there are different implementations for EER. For example, the default one in Bob is different from the implementation in Bosaris.</p>\n<p>Please check the NIST evaluation guidlines to see how to evaluate on SRE 2012 Evaluation set.\nFurther, the simple scores should be converted to compound scores. Please find more details given by Niko Brummer on the webpage of Bosaris toolkit:</p>\n<pre>https://sites.google.com/site/bosaristoolkit/sre12\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1635793, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "68feb504666905934c4bfe40e3bce1a7", "sha256": "e7a09ade87a23b8ae60a6275df77259622b752af60383878d5fcef3714906415"}, "downloads": -1, "filename": "spear.nist_sre12-1.0.0.zip", "has_sig": false, "md5_digest": "68feb504666905934c4bfe40e3bce1a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39468, "upload_time": "2014-03-04T07:30:29", "upload_time_iso_8601": "2014-03-04T07:30:29.858915Z", "url": "https://files.pythonhosted.org/packages/e3/9f/fd0f25fe538472a07d5417b8738a1249f2ba5d2a77c22c450db1c4ba2bc6/spear.nist_sre12-1.0.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "68feb504666905934c4bfe40e3bce1a7", "sha256": "e7a09ade87a23b8ae60a6275df77259622b752af60383878d5fcef3714906415"}, "downloads": -1, "filename": "spear.nist_sre12-1.0.0.zip", "has_sig": false, "md5_digest": "68feb504666905934c4bfe40e3bce1a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39468, "upload_time": "2014-03-04T07:30:29", "upload_time_iso_8601": "2014-03-04T07:30:29.858915Z", "url": "https://files.pythonhosted.org/packages/e3/9f/fd0f25fe538472a07d5417b8738a1249f2ba5d2a77c22c450db1c4ba2bc6/spear.nist_sre12-1.0.0.zip", "yanked": false}], "timestamp": "Fri May  8 03:05:42 2020"}