{"info": {"author": "Lucas Jin", "author_email": "jinfagang19@163.com", "bugtrack_url": null, "classifiers": [], "description": "# Alfred\n\n*Alfred* is command line tool for deep-learning usage. if you want split an video into image frames or combine frames into a single video, then **alfred** is what you want.\n\n\n\n## Install\n\nTo install **alfred**, it is very simple:\n\n```shell\nsudo pip3 install alfred-py\n```\n\n**alfred is both a lib and a tool, you can import it's APIs, or you can directly call it inside your terminal**.\n\nA glance of alfred, after you installed above package, you will have `alfred`:\n\n- **`data`** module:\n  \n  ```shell\n  # show VOC annotations\n  alfred data vocview -i JPEGImages/ -l Annotations/\n  # show coco anntations\n  alfred data cocoview -j annotations/instance_2017.json -i images/\n  # show detection label with txt format\n  alfred data txtview -i images/ -l txts/\n  # show more of data\n  alfred data -h\n  \n  # eval tools\n  alfred data evalvoc -h\n  ```\n  \n- **`cab`** module:\n  \n  ```shell\n  # count files number of a type\n  alfred cab count -d ./images -t jpg\n  # split a txt file into train and test\n  alfred cab split -f all.txt -r 0.9,0.1 -n train,val\n  ```\n  \n- **`vision`** module;\n  \n  ```shell\n  # extract video to images\n  alfred vision extract -v video.mp4\n  # combine images to video\n  alfred vision 2video -d images/\n  ```\n  \n- **`-h`** to see more:\n\n  ```shell\n  usage: alfred [-h] [--version] {vision,text,scrap,cab,data} ...\n  \n  positional arguments:\n    {vision,text,scrap,cab,data}\n      vision              vision related commands.\n      text                text related commands.\n      scrap               scrap related commands.\n      cab                 cabinet related commands.\n      data                data related commands.\n  \n  optional arguments:\n    -h, --help            show this help message and exit\n    --version, -v         show version info.\n  ```\n\n  **inside every child module, you can call it's `-h` as well: `alfred text -h`.**\n\n  \n\n> if you are on windows, you can install pycocotools via: `pip  install \"git+https://github.com/philferriere/cocoapi.git#egg=pycocotools&subdirectory=PythonAPI\"`, we have made pycocotools as an dependencies since we need pycoco API.\n\n\n\n## Updates\n\n\n- 2050-: *to be continue*;\n\n- 2020-03-08\uff1aSeveral new files added in **alfred**:\n\n    ```\n    alfred.utils.file_io: Provide file io utils for common purpose\n    alfred.dl.torch.env: Provide seed or env setup in pytorch (same API as detectron2)\n    alfred.dl.torch.distribute: utils used for distribute training when using pytorch\n    ```\n\n- 2020-03-04: We have added some **evaluation tool** to calculate mAP for object detection model performance evaluation, it's useful and can visualize result:\n    ![](https://ae01.alicdn.com/kf/H991e578435fe492d9df966fb18c74b1fT.png)\n    ![](https://s2.ax1x.com/2020/03/04/3INr01.png)\n\n    this usage is also quite simple:\n    \n    ```\n    alfred data evalvoc -g ground-truth -d detection-results -im images\n    ```\n\n    where `-g` is your ground truth dir (contains xmls or txts), `-d` is your detection result files dir, `-im` is your images fodler. You only need save all your detected results into txts, one image one txt, and format like this:\n    \n    ```shell\n    bottle 0.14981 80 1 295 500  \n    bus 0.12601 36 13 404 316  \n    horse 0.12526 430 117 500 307  \n    pottedplant 0.14585 212 78 292 118  \n    tvmonitor 0.070565 388 89 500 196 \n    ```\n\n\n- 2020-02-27: We just update a `license` module inside alfred, say you want apply license to your project or update license, simple:\n\n    ```shell script\n     alfred cab license -o 'MANA' -n 'YoloV3' -u 'manaai.cn'\n    ```\n    you can found more detail usage with `alfred cab license -h`\n\n- 2020-02-11: open3d has changed their API. we have updated new open3d inside alfred, you can simply using latest open3d and run `python3 examples/draw_3d_pointcloud.py` you will see this:\n\n    ![](https://s2.ax1x.com/2020/02/11/1o9VhV.png)\n\n- 2020-02-10: **alfred** now support windows (experimental);\n\n- 2020-02-01: **\u6b66\u6c49\u52a0\u6cb9**! *alfred*  fix windows pip install problem related to encoding 'gbk';\n\n- 2020-01-14: Added cabinet module, also add some utils under data module;\n\n- 2019-07-18: 1000 classes imagenet labelmap added. Call it from:\n\n    ```python\n    from alfred.vis.image.get_dataset_label_map import imagenet_labelmap\n\n    # also, coco, voc, cityscapes labelmap were all added in\n    from alfred.vis.image.get_dataset_label_map import coco_labelmap\n    from alfred.vis.image.get_dataset_label_map import voc_labelmap\n    from alfred.vis.image.get_dataset_label_map import cityscapes_labelmap\n    ```\n\n- 2019-07-13: We add a VOC check module in command line usage, you can now visualize your VOC format detection data like this:\n\n    ```\n    alfred data voc_view -i ./images -l labels/\n    ```\n\n- 2019-05-17: We adding **open3d** as a lib to visual 3d point cloud in python. Now you can do some simple preparation and visual 3d box right on lidar points and show like opencv!!\n\n    ![](https://user-images.githubusercontent.com/21303438/57909386-44313500-78b5-11e9-8146-c74c53038c9b.png)\n\n    You can achieve this by only using **alfred-py** and **open3d**!\n\n    example code can be seen under  `examples/draw_3d_pointcloud.py`. **code updated with latest open3d API**!.\n\n- 2019-05-10: A minor updates but **really useful** which we called **mute_tf**, do you want to disable tensorflow ignoring log? simply do this!!\n\n    ```python\n    from alfred.dl.tf.common import mute_tf\n    mute_tf()\n    import tensorflow as tf\n    ```\n    Then, the logging message were gone....\n\n- 2019-05-07: Adding some protos, now you can parsing tensorflow coco labelmap by using alfred:\n    ```python\n    from alfred.protos.labelmap_pb2 import LabelMap\n    from google.protobuf import text_format\n\n    with open('coco.prototxt', 'r') as f:\n        lm = LabelMap()\n        lm = text_format.Merge(str(f.read()), lm)\n        names_list = [i.display_name for i in lm.item]\n        print(names_list)\n    ```\n\n- 2019-04-25: Adding KITTI fusion, now you can get projection from 3D label to image like this:\n  we will also add more fusion utils such as for *nuScene* dataset.\n\n  We providing kitti fusion kitti for convert `camera link 3d points` to image pixel, and convert `lidar link 3d points` to image pixel. Roughly going through of APIs like this:\n\n  ```python\n  # convert lidar prediction to image pixel\n  from alfred.fusion.kitti_fusion import LidarCamCalibData, \\\n      load_pc_from_file, lidar_pts_to_cam0_frame, lidar_pt_to_cam0_frame\n  from alfred.fusion.common import draw_3d_box, compute_3d_box_lidar_coords\n\n  # consit of prediction of lidar\n  # which is x,y,z,h,w,l,rotation_y\n  res = [[4.481686, 5.147319, -1.0229858, 1.5728549, 3.646751, 1.5121397, 1.5486346],\n         [-2.5172017, 5.0262384, -1.0679419, 1.6241353, 4.0445814, 1.4938312, 1.620804],\n         [1.1783253, -2.9209857, -0.9852259, 1.5852798, 3.7360613, 1.4671413, 1.5811548]]\n\n  for p in res:\n      xyz = np.array([p[: 3]])\n      c2d = lidar_pt_to_cam0_frame(xyz, frame_calib)\n      if c2d is not None:\n          cv2.circle(img, (int(c2d[0]), int(c2d[1])), 3, (0, 255, 255), -1)\n      hwl = np.array([p[3: 6]])\n      r_y = [p[6]]\n      pts3d = compute_3d_box_lidar_coords(xyz, hwl, angles=r_y, origin=(0.5, 0.5, 0.5), axis=2)\n\n      pts2d = []\n      for pt in pts3d[0]:\n          coords = lidar_pt_to_cam0_frame(pt, frame_calib)\n          if coords is not None:\n              pts2d.append(coords[:2])\n      pts2d = np.array(pts2d)\n      draw_3d_box(pts2d, img)\n  ```\n\n  And you can see something like this:\n\n  **note**:\n\n  `compute_3d_box_lidar_coords` for lidar prediction, `compute_3d_box_cam_coords` for KITTI label, **cause KITTI label is based on camera coordinates!**.\n  <p align=\"center\">\n  <img src=\"https://s2.ax1x.com/2019/04/24/EVrU0O.md.png\" />\n  </p>\n\n  **since many users ask me how to reproduces this result, you can checkout demo file under `examples/draw_3d_box.py`**;\n\n\n\n\n\n- 2019-01-25: We just adding network visualization tool for **pytorch** now!! How does it look? Simply print out *every layer network with output shape*,  I believe this is really helpful for people to visualize their models!\n\n  ```\n  \u279c  mask_yolo3 git:(master) \u2717 python3 tests.py\n  ----------------------------------------------------------------\n          Layer (type)               Output Shape         Param #\n  ================================================================\n              Conv2d-1         [-1, 64, 224, 224]           1,792\n                ReLU-2         [-1, 64, 224, 224]               0\n                .........\n             Linear-35                 [-1, 4096]      16,781,312\n               ReLU-36                 [-1, 4096]               0\n            Dropout-37                 [-1, 4096]               0\n             Linear-38                 [-1, 1000]       4,097,000\n  ================================================================\n  Total params: 138,357,544\n  Trainable params: 138,357,544\n  Non-trainable params: 0\n  ----------------------------------------------------------------\n  Input size (MB): 0.19\n  Forward/backward pass size (MB): 218.59\n  Params size (MB): 527.79\n  Estimated Total Size (MB): 746.57\n  ----------------------------------------------------------------\n  \n  ```\n\n  Ok, that is all. what you simply need to do is:\n\n  ```python\n  from alfred.dl.torch.model_summary import summary\n  from alfred.dl.torch.common import device\n  \n  from torchvision.models import vgg16\n  \n  vgg = vgg16(pretrained=True)\n  vgg.to(device)\n  summary(vgg, input_size=[224, 224])\n  ```\n\n  Support you input (224, 224) image, you will got this output, or you can change any other size to see how output changes. (currently not support for 1 channel image)\n\n- 2018-12-7: Now, we adding a extensible class for quickly write an image detection or segmentation demo.\n\n  If you want write a demo which **do inference on an image or an video or right from webcam**, now you can do this in standared alfred way:\n\n  ```python\n  class ENetDemo(ImageInferEngine):\n  \n      def __init__(self, f, model_path):\n          super(ENetDemo, self).__init__(f=f)\n  \n          self.target_size = (512, 1024)\n          self.model_path = model_path\n          self.num_classes = 20\n  \n          self.image_transform = transforms.Compose(\n              [transforms.Resize(self.target_size),\n               transforms.ToTensor()])\n  \n          self._init_model()\n  \n      def _init_model(self):\n          self.model = ENet(self.num_classes).to(device)\n          checkpoint = torch.load(self.model_path)\n          self.model.load_state_dict(checkpoint['state_dict'])\n          print('Model loaded!')\n  \n      def solve_a_image(self, img):\n          images = Variable(self.image_transform(Image.fromarray(img)).to(device).unsqueeze(0))\n          predictions = self.model(images)\n          _, predictions = torch.max(predictions.data, 1)\n          prediction = predictions.cpu().numpy()[0] - 1\n          return prediction\n  \n      def vis_result(self, img, net_out):\n          mask_color = np.asarray(label_to_color_image(net_out, 'cityscapes'), dtype=np.uint8)\n          frame = cv2.resize(img, (self.target_size[1], self.target_size[0]))\n          # mask_color = cv2.resize(mask_color, (frame.shape[1], frame.shape[0]))\n          res = cv2.addWeighted(frame, 0.5, mask_color, 0.7, 1)\n          return res\n  \n  \n  if __name__ == '__main__':\n      v_f = ''\n      enet_seg = ENetDemo(f=v_f, model_path='save/ENet_cityscapes_mine.pth')\n      enet_seg.run()\n  ```\n\n  After that, you can directly inference from video. This usage can be found at git repo: \n\n  <p align=\"center\"><img src=\"https://s1.ax1x.com/2018/12/07/F1OKLF.gif\"/></p>\nThe repo using **alfred**: http://github.com/jinfagang/pt_enet\n  \n- 2018-11-6: I am so glad to announce that alfred 2.0 released\uff01\ud83d\ude04\u26fd\ufe0f\ud83d\udc4f\ud83d\udc4f  Let's have a quick look what have been updated:\n\n  ```\n  # 2 new modules, fusion and vis\n  from alred.fusion import fusion_utils\n  ```\n\n  For the module `fusion` contains many useful sensor fusion helper functions you may use, such as project lidar point cloud onto image.\n\n- 2018-08-01:  Fix the video combined function not work well with sequence. Add a order algorithm to ensure video sequence right.\n  also add some draw bbox functions into package.\n\n  can be called like this:\n\n- 2018-03-16: Slightly update **alfred**, now we can using this tool to combine a video sequence back original video!\n  Simply do:\n\n  ```shell\n  # alfred binary exectuable program\n  alfred vision 2video -d ./video_images\n  ```\n\n\n## Capable\n\n**alfred** is both a library and a command line tool. It can do those things:\n\n```angular2html\n# extract images from video\nalfred vision extract -v video.mp4\n# combine image sequences into a video\nalfred vision 2video -d /path/to/images\n# get faces from images\nalfred vision getface -d /path/contains/images/\n\n```\n\nJust try it out!!\n\n## Copyright\n\n**Alfred** build by *Lucas Jin* with \u2764\ufe0f\uff0c welcome star and send PR. If you got any question, you can ask me via wechat: `jintianiloveu`, this code released under MIT license.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jinfagang/alfred", "keywords": "deep learning,script helper,tools", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "alfred-py", "package_url": "https://pypi.org/project/alfred-py/", "platform": "any", "project_url": "https://pypi.org/project/alfred-py/", "project_urls": {"Homepage": "https://github.com/jinfagang/alfred"}, "release_url": "https://pypi.org/project/alfred-py/2.7.5/", "requires_dist": null, "requires_python": "", "summary": " Alfred is a DeepLearning utility library. ", "version": "2.7.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Alfred</h1>\n<p><em>Alfred</em> is command line tool for deep-learning usage. if you want split an video into image frames or combine frames into a single video, then <strong>alfred</strong> is what you want.</p>\n<h2>Install</h2>\n<p>To install <strong>alfred</strong>, it is very simple:</p>\n<pre>sudo pip3 install alfred-py\n</pre>\n<p><strong>alfred is both a lib and a tool, you can import it's APIs, or you can directly call it inside your terminal</strong>.</p>\n<p>A glance of alfred, after you installed above package, you will have <code>alfred</code>:</p>\n<ul>\n<li>\n<p><strong><code>data</code></strong> module:</p>\n<pre><span class=\"c1\"># show VOC annotations</span>\nalfred data vocview -i JPEGImages/ -l Annotations/\n<span class=\"c1\"># show coco anntations</span>\nalfred data cocoview -j annotations/instance_2017.json -i images/\n<span class=\"c1\"># show detection label with txt format</span>\nalfred data txtview -i images/ -l txts/\n<span class=\"c1\"># show more of data</span>\nalfred data -h\n\n<span class=\"c1\"># eval tools</span>\nalfred data evalvoc -h\n</pre>\n</li>\n<li>\n<p><strong><code>cab</code></strong> module:</p>\n<pre><span class=\"c1\"># count files number of a type</span>\nalfred cab count -d ./images -t jpg\n<span class=\"c1\"># split a txt file into train and test</span>\nalfred cab split -f all.txt -r <span class=\"m\">0</span>.9,0.1 -n train,val\n</pre>\n</li>\n<li>\n<p><strong><code>vision</code></strong> module;</p>\n<pre><span class=\"c1\"># extract video to images</span>\nalfred vision extract -v video.mp4\n<span class=\"c1\"># combine images to video</span>\nalfred vision 2video -d images/\n</pre>\n</li>\n<li>\n<p><strong><code>-h</code></strong> to see more:</p>\n<pre>usage: alfred <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--version<span class=\"o\">]</span> <span class=\"o\">{</span>vision,text,scrap,cab,data<span class=\"o\">}</span> ...\n\npositional arguments:\n  <span class=\"o\">{</span>vision,text,scrap,cab,data<span class=\"o\">}</span>\n    vision              vision related commands.\n    text                text related commands.\n    scrap               scrap related commands.\n    cab                 cabinet related commands.\n    data                data related commands.\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --version, -v         show version info.\n</pre>\n<p><strong>inside every child module, you can call it's <code>-h</code> as well: <code>alfred text -h</code>.</strong></p>\n</li>\n</ul>\n<blockquote>\n<p>if you are on windows, you can install pycocotools via: <code>pip install \"git+https://github.com/philferriere/cocoapi.git#egg=pycocotools&amp;subdirectory=PythonAPI\"</code>, we have made pycocotools as an dependencies since we need pycoco API.</p>\n</blockquote>\n<h2>Updates</h2>\n<ul>\n<li>\n<p>2050-: <em>to be continue</em>;</p>\n</li>\n<li>\n<p>2020-03-08\uff1aSeveral new files added in <strong>alfred</strong>:</p>\n<pre><code>alfred.utils.file_io: Provide file io utils for common purpose\nalfred.dl.torch.env: Provide seed or env setup in pytorch (same API as detectron2)\nalfred.dl.torch.distribute: utils used for distribute training when using pytorch\n</code></pre>\n</li>\n<li>\n<p>2020-03-04: We have added some <strong>evaluation tool</strong> to calculate mAP for object detection model performance evaluation, it's useful and can visualize result:\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fde4fd91d3237f52f832553b3d5350327ed85ad9/68747470733a2f2f616530312e616c6963646e2e636f6d2f6b662f483939316535373834333566653439326439646639363666623138633734623166542e706e67\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e41fd241cae993bb48c9c536608a7fe32131ff2e/68747470733a2f2f73322e617831782e636f6d2f323032302f30332f30342f33494e7230312e706e67\"></p>\n<p>this usage is also quite simple:</p>\n<pre><code>alfred data evalvoc -g ground-truth -d detection-results -im images\n</code></pre>\n<p>where <code>-g</code> is your ground truth dir (contains xmls or txts), <code>-d</code> is your detection result files dir, <code>-im</code> is your images fodler. You only need save all your detected results into txts, one image one txt, and format like this:</p>\n<pre>bottle <span class=\"m\">0</span>.14981 <span class=\"m\">80</span> <span class=\"m\">1</span> <span class=\"m\">295</span> <span class=\"m\">500</span>  \nbus <span class=\"m\">0</span>.12601 <span class=\"m\">36</span> <span class=\"m\">13</span> <span class=\"m\">404</span> <span class=\"m\">316</span>  \nhorse <span class=\"m\">0</span>.12526 <span class=\"m\">430</span> <span class=\"m\">117</span> <span class=\"m\">500</span> <span class=\"m\">307</span>  \npottedplant <span class=\"m\">0</span>.14585 <span class=\"m\">212</span> <span class=\"m\">78</span> <span class=\"m\">292</span> <span class=\"m\">118</span>  \ntvmonitor <span class=\"m\">0</span>.070565 <span class=\"m\">388</span> <span class=\"m\">89</span> <span class=\"m\">500</span> <span class=\"m\">196</span> \n</pre>\n</li>\n<li>\n<p>2020-02-27: We just update a <code>license</code> module inside alfred, say you want apply license to your project or update license, simple:</p>\n<pre> alfred cab license -o <span class=\"s1\">'MANA'</span> -n <span class=\"s1\">'YoloV3'</span> -u <span class=\"s1\">'manaai.cn'</span>\n</pre>\n<p>you can found more detail usage with <code>alfred cab license -h</code></p>\n</li>\n<li>\n<p>2020-02-11: open3d has changed their API. we have updated new open3d inside alfred, you can simply using latest open3d and run <code>python3 examples/draw_3d_pointcloud.py</code> you will see this:</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7bf5f491111b3d5c001b78ef74f0c34a00c97c41/68747470733a2f2f73322e617831782e636f6d2f323032302f30322f31312f316f395668562e706e67\"></p>\n</li>\n<li>\n<p>2020-02-10: <strong>alfred</strong> now support windows (experimental);</p>\n</li>\n<li>\n<p>2020-02-01: <strong>\u6b66\u6c49\u52a0\u6cb9</strong>! <em>alfred</em>  fix windows pip install problem related to encoding 'gbk';</p>\n</li>\n<li>\n<p>2020-01-14: Added cabinet module, also add some utils under data module;</p>\n</li>\n<li>\n<p>2019-07-18: 1000 classes imagenet labelmap added. Call it from:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">alfred.vis.image.get_dataset_label_map</span> <span class=\"kn\">import</span> <span class=\"n\">imagenet_labelmap</span>\n\n<span class=\"c1\"># also, coco, voc, cityscapes labelmap were all added in</span>\n<span class=\"kn\">from</span> <span class=\"nn\">alfred.vis.image.get_dataset_label_map</span> <span class=\"kn\">import</span> <span class=\"n\">coco_labelmap</span>\n<span class=\"kn\">from</span> <span class=\"nn\">alfred.vis.image.get_dataset_label_map</span> <span class=\"kn\">import</span> <span class=\"n\">voc_labelmap</span>\n<span class=\"kn\">from</span> <span class=\"nn\">alfred.vis.image.get_dataset_label_map</span> <span class=\"kn\">import</span> <span class=\"n\">cityscapes_labelmap</span>\n</pre>\n</li>\n<li>\n<p>2019-07-13: We add a VOC check module in command line usage, you can now visualize your VOC format detection data like this:</p>\n<pre><code>alfred data voc_view -i ./images -l labels/\n</code></pre>\n</li>\n<li>\n<p>2019-05-17: We adding <strong>open3d</strong> as a lib to visual 3d point cloud in python. Now you can do some simple preparation and visual 3d box right on lidar points and show like opencv!!</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fcb2fd1f618d1b43d04f2caa3c79ca2baa8d0df9/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f32313330333433382f35373930393338362d34343331333530302d373862352d313165392d383134362d6337346335333033386339622e706e67\"></p>\n<p>You can achieve this by only using <strong>alfred-py</strong> and <strong>open3d</strong>!</p>\n<p>example code can be seen under  <code>examples/draw_3d_pointcloud.py</code>. <strong>code updated with latest open3d API</strong>!.</p>\n</li>\n<li>\n<p>2019-05-10: A minor updates but <strong>really useful</strong> which we called <strong>mute_tf</strong>, do you want to disable tensorflow ignoring log? simply do this!!</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">alfred.dl.tf.common</span> <span class=\"kn\">import</span> <span class=\"n\">mute_tf</span>\n<span class=\"n\">mute_tf</span><span class=\"p\">()</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tensorflow</span> <span class=\"k\">as</span> <span class=\"nn\">tf</span>\n</pre>\n<p>Then, the logging message were gone....</p>\n</li>\n<li>\n<p>2019-05-07: Adding some protos, now you can parsing tensorflow coco labelmap by using alfred:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">alfred.protos.labelmap_pb2</span> <span class=\"kn\">import</span> <span class=\"n\">LabelMap</span>\n<span class=\"kn\">from</span> <span class=\"nn\">google.protobuf</span> <span class=\"kn\">import</span> <span class=\"n\">text_format</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'coco.prototxt'</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">lm</span> <span class=\"o\">=</span> <span class=\"n\">LabelMap</span><span class=\"p\">()</span>\n    <span class=\"n\">lm</span> <span class=\"o\">=</span> <span class=\"n\">text_format</span><span class=\"o\">.</span><span class=\"n\">Merge</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()),</span> <span class=\"n\">lm</span><span class=\"p\">)</span>\n    <span class=\"n\">names_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">display_name</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">lm</span><span class=\"o\">.</span><span class=\"n\">item</span><span class=\"p\">]</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">names_list</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>2019-04-25: Adding KITTI fusion, now you can get projection from 3D label to image like this:\nwe will also add more fusion utils such as for <em>nuScene</em> dataset.</p>\n<p>We providing kitti fusion kitti for convert <code>camera link 3d points</code> to image pixel, and convert <code>lidar link 3d points</code> to image pixel. Roughly going through of APIs like this:</p>\n<pre><span class=\"c1\"># convert lidar prediction to image pixel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">alfred.fusion.kitti_fusion</span> <span class=\"kn\">import</span> <span class=\"n\">LidarCamCalibData</span><span class=\"p\">,</span> \\\n    <span class=\"n\">load_pc_from_file</span><span class=\"p\">,</span> <span class=\"n\">lidar_pts_to_cam0_frame</span><span class=\"p\">,</span> <span class=\"n\">lidar_pt_to_cam0_frame</span>\n<span class=\"kn\">from</span> <span class=\"nn\">alfred.fusion.common</span> <span class=\"kn\">import</span> <span class=\"n\">draw_3d_box</span><span class=\"p\">,</span> <span class=\"n\">compute_3d_box_lidar_coords</span>\n\n<span class=\"c1\"># consit of prediction of lidar</span>\n<span class=\"c1\"># which is x,y,z,h,w,l,rotation_y</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mf\">4.481686</span><span class=\"p\">,</span> <span class=\"mf\">5.147319</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.0229858</span><span class=\"p\">,</span> <span class=\"mf\">1.5728549</span><span class=\"p\">,</span> <span class=\"mf\">3.646751</span><span class=\"p\">,</span> <span class=\"mf\">1.5121397</span><span class=\"p\">,</span> <span class=\"mf\">1.5486346</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">2.5172017</span><span class=\"p\">,</span> <span class=\"mf\">5.0262384</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.0679419</span><span class=\"p\">,</span> <span class=\"mf\">1.6241353</span><span class=\"p\">,</span> <span class=\"mf\">4.0445814</span><span class=\"p\">,</span> <span class=\"mf\">1.4938312</span><span class=\"p\">,</span> <span class=\"mf\">1.620804</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"mf\">1.1783253</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">2.9209857</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.9852259</span><span class=\"p\">,</span> <span class=\"mf\">1.5852798</span><span class=\"p\">,</span> <span class=\"mf\">3.7360613</span><span class=\"p\">,</span> <span class=\"mf\">1.4671413</span><span class=\"p\">,</span> <span class=\"mf\">1.5811548</span><span class=\"p\">]]</span>\n\n<span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">res</span><span class=\"p\">:</span>\n    <span class=\"n\">xyz</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">p</span><span class=\"p\">[:</span> <span class=\"mi\">3</span><span class=\"p\">]])</span>\n    <span class=\"n\">c2d</span> <span class=\"o\">=</span> <span class=\"n\">lidar_pt_to_cam0_frame</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">,</span> <span class=\"n\">frame_calib</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">c2d</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">circle</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">c2d</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">c2d</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])),</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">hwl</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">]])</span>\n    <span class=\"n\">r_y</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]]</span>\n    <span class=\"n\">pts3d</span> <span class=\"o\">=</span> <span class=\"n\">compute_3d_box_lidar_coords</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">,</span> <span class=\"n\">hwl</span><span class=\"p\">,</span> <span class=\"n\">angles</span><span class=\"o\">=</span><span class=\"n\">r_y</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">),</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n    <span class=\"n\">pts2d</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">pt</span> <span class=\"ow\">in</span> <span class=\"n\">pts3d</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n        <span class=\"n\">coords</span> <span class=\"o\">=</span> <span class=\"n\">lidar_pt_to_cam0_frame</span><span class=\"p\">(</span><span class=\"n\">pt</span><span class=\"p\">,</span> <span class=\"n\">frame_calib</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">coords</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">pts2d</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">coords</span><span class=\"p\">[:</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n    <span class=\"n\">pts2d</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">pts2d</span><span class=\"p\">)</span>\n    <span class=\"n\">draw_3d_box</span><span class=\"p\">(</span><span class=\"n\">pts2d</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"p\">)</span>\n</pre>\n<p>And you can see something like this:</p>\n<p><strong>note</strong>:</p>\n<p><code>compute_3d_box_lidar_coords</code> for lidar prediction, <code>compute_3d_box_cam_coords</code> for KITTI label, <strong>cause KITTI label is based on camera coordinates!</strong>.</p>\n<p align=\"center\">\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3b5dace47d60ad4ea9a8c4acbc13756758d45f2f/68747470733a2f2f73322e617831782e636f6d2f323031392f30342f32342f45567255304f2e6d642e706e67\">\n</p>\n<p><strong>since many users ask me how to reproduces this result, you can checkout demo file under <code>examples/draw_3d_box.py</code></strong>;</p>\n</li>\n<li>\n<p>2019-01-25: We just adding network visualization tool for <strong>pytorch</strong> now!! How does it look? Simply print out <em>every layer network with output shape</em>,  I believe this is really helpful for people to visualize their models!</p>\n<pre><code>\u279c  mask_yolo3 git:(master) \u2717 python3 tests.py\n----------------------------------------------------------------\n        Layer (type)               Output Shape         Param #\n================================================================\n            Conv2d-1         [-1, 64, 224, 224]           1,792\n              ReLU-2         [-1, 64, 224, 224]               0\n              .........\n           Linear-35                 [-1, 4096]      16,781,312\n             ReLU-36                 [-1, 4096]               0\n          Dropout-37                 [-1, 4096]               0\n           Linear-38                 [-1, 1000]       4,097,000\n================================================================\nTotal params: 138,357,544\nTrainable params: 138,357,544\nNon-trainable params: 0\n----------------------------------------------------------------\nInput size (MB): 0.19\nForward/backward pass size (MB): 218.59\nParams size (MB): 527.79\nEstimated Total Size (MB): 746.57\n----------------------------------------------------------------\n\n</code></pre>\n<p>Ok, that is all. what you simply need to do is:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">alfred.dl.torch.model_summary</span> <span class=\"kn\">import</span> <span class=\"n\">summary</span>\n<span class=\"kn\">from</span> <span class=\"nn\">alfred.dl.torch.common</span> <span class=\"kn\">import</span> <span class=\"n\">device</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">torchvision.models</span> <span class=\"kn\">import</span> <span class=\"n\">vgg16</span>\n\n<span class=\"n\">vgg</span> <span class=\"o\">=</span> <span class=\"n\">vgg16</span><span class=\"p\">(</span><span class=\"n\">pretrained</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">vgg</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"p\">)</span>\n<span class=\"n\">summary</span><span class=\"p\">(</span><span class=\"n\">vgg</span><span class=\"p\">,</span> <span class=\"n\">input_size</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">224</span><span class=\"p\">,</span> <span class=\"mi\">224</span><span class=\"p\">])</span>\n</pre>\n<p>Support you input (224, 224) image, you will got this output, or you can change any other size to see how output changes. (currently not support for 1 channel image)</p>\n</li>\n<li>\n<p>2018-12-7: Now, we adding a extensible class for quickly write an image detection or segmentation demo.</p>\n<p>If you want write a demo which <strong>do inference on an image or an video or right from webcam</strong>, now you can do this in standared alfred way:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">ENetDemo</span><span class=\"p\">(</span><span class=\"n\">ImageInferEngine</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">ENetDemo</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">=</span><span class=\"n\">f</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">target_size</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">512</span><span class=\"p\">,</span> <span class=\"mi\">1024</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"n\">model_path</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_classes</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">image_transform</span> <span class=\"o\">=</span> <span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">Compose</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">Resize</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">target_size</span><span class=\"p\">),</span>\n             <span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">ToTensor</span><span class=\"p\">()])</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_init_model</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_init_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">ENet</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">num_classes</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"p\">)</span>\n        <span class=\"n\">checkpoint</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_path</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">load_state_dict</span><span class=\"p\">(</span><span class=\"n\">checkpoint</span><span class=\"p\">[</span><span class=\"s1\">'state_dict'</span><span class=\"p\">])</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Model loaded!'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">solve_a_image</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"p\">):</span>\n        <span class=\"n\">images</span> <span class=\"o\">=</span> <span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">image_transform</span><span class=\"p\">(</span><span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">fromarray</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">unsqueeze</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n        <span class=\"n\">predictions</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">images</span><span class=\"p\">)</span>\n        <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">predictions</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">predictions</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">prediction</span> <span class=\"o\">=</span> <span class=\"n\">predictions</span><span class=\"o\">.</span><span class=\"n\">cpu</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">numpy</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span>\n        <span class=\"k\">return</span> <span class=\"n\">prediction</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">vis_result</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"n\">net_out</span><span class=\"p\">):</span>\n        <span class=\"n\">mask_color</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">asarray</span><span class=\"p\">(</span><span class=\"n\">label_to_color_image</span><span class=\"p\">(</span><span class=\"n\">net_out</span><span class=\"p\">,</span> <span class=\"s1\">'cityscapes'</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">uint8</span><span class=\"p\">)</span>\n        <span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">resize</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">target_size</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">target_size</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n        <span class=\"c1\"># mask_color = cv2.resize(mask_color, (frame.shape[1], frame.shape[0]))</span>\n        <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">addWeighted</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">mask_color</span><span class=\"p\">,</span> <span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">res</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">v_f</span> <span class=\"o\">=</span> <span class=\"s1\">''</span>\n    <span class=\"n\">enet_seg</span> <span class=\"o\">=</span> <span class=\"n\">ENetDemo</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">=</span><span class=\"n\">v_f</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"o\">=</span><span class=\"s1\">'save/ENet_cityscapes_mine.pth'</span><span class=\"p\">)</span>\n    <span class=\"n\">enet_seg</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>After that, you can directly inference from video. This usage can be found at git repo:</p>\n<p align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/961cf88a5f5e809f5332f0dd189be4b7d41449d8/68747470733a2f2f73312e617831782e636f6d2f323031382f31322f30372f46314f4b4c462e676966\"></p>\n</li>\n</ul>\n<p>The repo using <strong>alfred</strong>: <a href=\"http://github.com/jinfagang/pt_enet\" rel=\"nofollow\">http://github.com/jinfagang/pt_enet</a></p>\n<ul>\n<li>\n<p>2018-11-6: I am so glad to announce that alfred 2.0 released\uff01\ud83d\ude04\u26fd\ufe0f\ud83d\udc4f\ud83d\udc4f  Let's have a quick look what have been updated:</p>\n<pre><code># 2 new modules, fusion and vis\nfrom alred.fusion import fusion_utils\n</code></pre>\n<p>For the module <code>fusion</code> contains many useful sensor fusion helper functions you may use, such as project lidar point cloud onto image.</p>\n</li>\n<li>\n<p>2018-08-01:  Fix the video combined function not work well with sequence. Add a order algorithm to ensure video sequence right.\nalso add some draw bbox functions into package.</p>\n<p>can be called like this:</p>\n</li>\n<li>\n<p>2018-03-16: Slightly update <strong>alfred</strong>, now we can using this tool to combine a video sequence back original video!\nSimply do:</p>\n<pre><span class=\"c1\"># alfred binary exectuable program</span>\nalfred vision 2video -d ./video_images\n</pre>\n</li>\n</ul>\n<h2>Capable</h2>\n<p><strong>alfred</strong> is both a library and a command line tool. It can do those things:</p>\n<pre># extract images from video\nalfred vision extract -v video.mp4\n# combine image sequences into a video\nalfred vision 2video -d /path/to/images\n# get faces from images\nalfred vision getface -d /path/contains/images/\n</pre>\n<p>Just try it out!!</p>\n<h2>Copyright</h2>\n<p><strong>Alfred</strong> build by <em>Lucas Jin</em> with \u2764\ufe0f\uff0c welcome star and send PR. If you got any question, you can ask me via wechat: <code>jintianiloveu</code>, this code released under MIT license.</p>\n\n          </div>"}, "last_serial": 7015089, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "7bbe254c98f76b3e95d0de5a7f32a3cc", "sha256": "e738c24bb65dd3abcaf8bd6c6484e37befcaa9020ff8beeae151a83b4d1fae4e"}, "downloads": -1, "filename": "alfred_py-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7bbe254c98f76b3e95d0de5a7f32a3cc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12357, "upload_time": "2018-03-16T06:59:45", "upload_time_iso_8601": "2018-03-16T06:59:45.797538Z", "url": "https://files.pythonhosted.org/packages/9a/92/1fe74d81a33ffc5c5404626386e67fe4c1c33de3ede00807bf48e7d05f53/alfred_py-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59f34c58575079e20371e5650e61cd73", "sha256": "2c4946b984c2f7b735fa01d4fcd585f8a2092f6c500c283d4ad9bcc742ecf4bf"}, "downloads": -1, "filename": "alfred-py-0.1.1.tar.gz", "has_sig": false, "md5_digest": "59f34c58575079e20371e5650e61cd73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5364, "upload_time": "2018-02-11T03:26:56", "upload_time_iso_8601": "2018-02-11T03:26:56.424998Z", "url": "https://files.pythonhosted.org/packages/94/60/b9f6efc4068446cff51bd47518a349b887f6e0d3cab0f3a622b22b19b902/alfred-py-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "322dc19b6b5acc769f215869125400ce", "sha256": "a06d4c47d6102c2f9dff2f32e38573db88d35bf93d1f15d76e1e1491c233143f"}, "downloads": -1, "filename": "alfred-py-0.1.2.tar.gz", "has_sig": false, "md5_digest": "322dc19b6b5acc769f215869125400ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5380, "upload_time": "2018-02-11T03:51:12", "upload_time_iso_8601": "2018-02-11T03:51:12.456715Z", "url": "https://files.pythonhosted.org/packages/07/6d/b682193c29376716cfd12af6462ae02c8730413db489a80f8488b9eed059/alfred-py-0.1.2.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "7ceb8045c330a236b8eaa7cdf4aea6f3", "sha256": "a0e7e5a8a184fc00195a63cb1499e4d12559b6b395260752094f420a41bcf351"}, "downloads": -1, "filename": "alfred-py-1.0.2.tar.gz", "has_sig": false, "md5_digest": "7ceb8045c330a236b8eaa7cdf4aea6f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5817, "upload_time": "2018-03-16T07:00:50", "upload_time_iso_8601": "2018-03-16T07:00:50.133895Z", "url": "https://files.pythonhosted.org/packages/1d/81/1c8fceca9659cc88c3b2097e7c583f62146193c9a524069efe01fe4fec64/alfred-py-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "ee2b93811d3403b1cbff8d546dddef31", "sha256": "7ea6a9013816e8f59e789fa9da468a466428b604cb130404081cf394494db1ae"}, "downloads": -1, "filename": "alfred-py-1.0.3.tar.gz", "has_sig": false, "md5_digest": "ee2b93811d3403b1cbff8d546dddef31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5851, "upload_time": "2018-03-16T07:20:59", "upload_time_iso_8601": "2018-03-16T07:20:59.891864Z", "url": "https://files.pythonhosted.org/packages/20/ba/a98a76ec1ca78703d49009b3d7e3d313bbd95cca87537731e9120ef04daf/alfred-py-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "bcc4517b2bb8ed990e8652a5a49e5b09", "sha256": "fdd65e2702224dab97273a654d400b232be3e1b545cb21d76e08cd68378cdb53"}, "downloads": -1, "filename": "alfred-py-1.0.4.tar.gz", "has_sig": false, "md5_digest": "bcc4517b2bb8ed990e8652a5a49e5b09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5968, "upload_time": "2018-03-16T07:38:13", "upload_time_iso_8601": "2018-03-16T07:38:13.949971Z", "url": "https://files.pythonhosted.org/packages/19/e2/eb375e548455c1d795b764c70d0f60a61978d49eefd7c48fadbad085175c/alfred-py-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "bec967cc6ad3109df3834b4fa00b4231", "sha256": "df4a929b2f950c948fdc5ea623c4b28ccb7230dcd74b411d347fd69991682f1d"}, "downloads": -1, "filename": "alfred_py-1.0.5-py3.6.egg", "has_sig": false, "md5_digest": "bec967cc6ad3109df3834b4fa00b4231", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 24315, "upload_time": "2018-04-09T09:22:04", "upload_time_iso_8601": "2018-04-09T09:22:04.136915Z", "url": "https://files.pythonhosted.org/packages/5c/a0/9b5590d5ede7ccd6dfb06192ae10c5cd1cfa1f9577162f7ff61b34bb0e18/alfred_py-1.0.5-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9e833475343c567aa58a2e0c4f73473", "sha256": "fe1ca2cd296596be955e1fc3ebff279415e5122998724f23ee64f699c7950857"}, "downloads": -1, "filename": "alfred-py-1.0.5.tar.gz", "has_sig": false, "md5_digest": "b9e833475343c567aa58a2e0c4f73473", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6018, "upload_time": "2018-04-09T09:22:02", "upload_time_iso_8601": "2018-04-09T09:22:02.410039Z", "url": "https://files.pythonhosted.org/packages/28/5b/e68001b00e2797cde6afe00cc606842b4d24c04b8147f050813b687b006b/alfred-py-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "bb4847249ca8d1fd717001c5a8e5a5d6", "sha256": "9ed7d4d294cea938ae840d2daeaa29b8494aa1bf389e7faeea05cf6076875668"}, "downloads": -1, "filename": "alfred-py-1.0.6.tar.gz", "has_sig": false, "md5_digest": "bb4847249ca8d1fd717001c5a8e5a5d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6004, "upload_time": "2018-07-18T13:32:32", "upload_time_iso_8601": "2018-07-18T13:32:32.784433Z", "url": "https://files.pythonhosted.org/packages/c3/26/939d030f6e54a6e2e424e271d26bff44f0b159fb257db750cbd84c9b0d98/alfred-py-1.0.6.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "37ea65d2dbd279e5c5b95a56cd68ab6d", "sha256": "cc228c7eea489a49ff2e558d0acbf4d0829b82df91cc84c8aad3c892ac9b3f0f"}, "downloads": -1, "filename": "alfred-py-2.0.tar.gz", "has_sig": false, "md5_digest": "37ea65d2dbd279e5c5b95a56cd68ab6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3450, "upload_time": "2018-11-07T14:28:13", "upload_time_iso_8601": "2018-11-07T14:28:13.625691Z", "url": "https://files.pythonhosted.org/packages/84/31/4020fcd20c30a1c391119ad43a7ca314ac342a992acf776369c1db9dd06d/alfred-py-2.0.tar.gz", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "e5d82da63e72805bb5722536985a2dbc", "sha256": "4b8f97a542ba95a8ab89c0bfce9adc8a7a2c79020d520ac012a1171158bdf711"}, "downloads": -1, "filename": "alfred-py-2.1.tar.gz", "has_sig": false, "md5_digest": "e5d82da63e72805bb5722536985a2dbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10953, "upload_time": "2018-11-07T15:30:50", "upload_time_iso_8601": "2018-11-07T15:30:50.422488Z", "url": "https://files.pythonhosted.org/packages/0d/d4/3fa441dbf609c735be560a15f1abf3df5e0be2faa8839c8f134bbd035231/alfred-py-2.1.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "4b77aa40dd03379f8d589b1d8c25caa7", "sha256": "0b5385463eb49bd0d102d8a5d49429cda2e1d8d383c96710e0031252151e9b0e"}, "downloads": -1, "filename": "alfred-py-2.2.1.tar.gz", "has_sig": false, "md5_digest": "4b77aa40dd03379f8d589b1d8c25caa7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15504, "upload_time": "2018-11-09T01:55:59", "upload_time_iso_8601": "2018-11-09T01:55:59.259449Z", "url": "https://files.pythonhosted.org/packages/49/8c/c85aebeaa0b0b8dc4d3a14fecdab1163b2158da0b2efded9673b9b5d043f/alfred-py-2.2.1.tar.gz", "yanked": false}], "2.3": [{"comment_text": "", "digests": {"md5": "3f0cc642c594712c5ba5c8750cd3a01a", "sha256": "c109b2d0f120abe2edfec0ff265c6d84211cc236711b22d2e44c5bf025e55f84"}, "downloads": -1, "filename": "alfred-py-2.3.tar.gz", "has_sig": false, "md5_digest": "3f0cc642c594712c5ba5c8750cd3a01a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19202, "upload_time": "2018-11-12T11:28:19", "upload_time_iso_8601": "2018-11-12T11:28:19.832940Z", "url": "https://files.pythonhosted.org/packages/72/f3/e7f420f801151cddd915ce4f41cbcf33972d87ede15b0b2ec1da13bc7dc5/alfred-py-2.3.tar.gz", "yanked": false}], "2.3.1": [{"comment_text": "", "digests": {"md5": "2e92662ed1123d92ac6f3819c8b5ea1e", "sha256": "380db42fa265b75c2bebabcd1722423578d57876afccccc5c7affc9ec6ba6dd3"}, "downloads": -1, "filename": "alfred-py-2.3.1.tar.gz", "has_sig": false, "md5_digest": "2e92662ed1123d92ac6f3819c8b5ea1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22927, "upload_time": "2018-11-14T07:50:21", "upload_time_iso_8601": "2018-11-14T07:50:21.611015Z", "url": "https://files.pythonhosted.org/packages/dd/6a/f083ca4d5d55198c05b216043a5fa166a302674dfa9474831a30ecf93304/alfred-py-2.3.1.tar.gz", "yanked": false}], "2.3.2": [{"comment_text": "", "digests": {"md5": "92ac794473aa122b00e8d9fe710ef41d", "sha256": "2a807a95c00561b4c5f4186e857c2f0fc4c26092dc65ff20d652a1678cece966"}, "downloads": -1, "filename": "alfred-py-2.3.2.tar.gz", "has_sig": false, "md5_digest": "92ac794473aa122b00e8d9fe710ef41d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24179, "upload_time": "2018-11-21T10:08:58", "upload_time_iso_8601": "2018-11-21T10:08:58.537234Z", "url": "https://files.pythonhosted.org/packages/ad/41/eb59e62b004e32b082890eada89feac64d24330e8303a716c849ba46413c/alfred-py-2.3.2.tar.gz", "yanked": false}], "2.3.3": [{"comment_text": "", "digests": {"md5": "887405fecc3f9b4dfaa43dc3391342ff", "sha256": "93bb311d75a96c5d2c4aead2dfb7a146ef52d75df5f12e5cb1fdb9671cd836d0"}, "downloads": -1, "filename": "alfred-py-2.3.3.tar.gz", "has_sig": false, "md5_digest": "887405fecc3f9b4dfaa43dc3391342ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24309, "upload_time": "2018-11-22T02:17:24", "upload_time_iso_8601": "2018-11-22T02:17:24.536513Z", "url": "https://files.pythonhosted.org/packages/46/e6/3ed732f9a2f374d9ef1c527bdd612616cb0118d60d39aada21f46f6c69e1/alfred-py-2.3.3.tar.gz", "yanked": false}], "2.3.4": [{"comment_text": "", "digests": {"md5": "e6cfc68b01d815328ca46dce73de11f2", "sha256": "8bb9f49e08c8b0e7cf0ab8383ea31324eac3de36def2ec6e5d4172be9e14ca8f"}, "downloads": -1, "filename": "alfred-py-2.3.4.tar.gz", "has_sig": false, "md5_digest": "e6cfc68b01d815328ca46dce73de11f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23878, "upload_time": "2018-12-04T03:50:57", "upload_time_iso_8601": "2018-12-04T03:50:57.348116Z", "url": "https://files.pythonhosted.org/packages/c3/d5/33930329ef5ba855ebc1b9d79d4023fbc5285c1c712ac8dd24c8184e244e/alfred-py-2.3.4.tar.gz", "yanked": false}], "2.3.5": [{"comment_text": "", "digests": {"md5": "13de74aa70b91b231c0103ae6cefb3ea", "sha256": "fea4fe77765e9aa98ef8cc6a100a56cb4a5327cade37deed5cd9a89f0c13b007"}, "downloads": -1, "filename": "alfred-py-2.3.5.tar.gz", "has_sig": false, "md5_digest": "13de74aa70b91b231c0103ae6cefb3ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21816, "upload_time": "2018-12-06T04:53:36", "upload_time_iso_8601": "2018-12-06T04:53:36.443369Z", "url": "https://files.pythonhosted.org/packages/63/56/4f1805cbaf4d969cb38821ca69f7cc6974dc03134abe221e754d9189a4c0/alfred-py-2.3.5.tar.gz", "yanked": false}], "2.3.6": [{"comment_text": "", "digests": {"md5": "01d6507b156fa5d7f8cd9c32ea2eb33a", "sha256": "e7130070aad0db70f23bc0e09f0484bbb8b1df1c1405157ac690c5c45de3c466"}, "downloads": -1, "filename": "alfred-py-2.3.6.tar.gz", "has_sig": false, "md5_digest": "01d6507b156fa5d7f8cd9c32ea2eb33a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21852, "upload_time": "2018-12-06T11:53:20", "upload_time_iso_8601": "2018-12-06T11:53:20.429475Z", "url": "https://files.pythonhosted.org/packages/0e/46/48f768f6c2754889d13117539bb0e696f9ebf3ba33bd558d066c74c3013e/alfred-py-2.3.6.tar.gz", "yanked": false}], "2.3.8": [{"comment_text": "", "digests": {"md5": "e3a28db8e4b9a9fbf55396b9c3ee0ac8", "sha256": "04d25a72f6d8bbb292bb6e0bd6ee5d875f747c26801a273a82c8e9774c9af204"}, "downloads": -1, "filename": "alfred-py-2.3.8.tar.gz", "has_sig": false, "md5_digest": "e3a28db8e4b9a9fbf55396b9c3ee0ac8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21910, "upload_time": "2018-12-25T03:52:50", "upload_time_iso_8601": "2018-12-25T03:52:50.021400Z", "url": "https://files.pythonhosted.org/packages/d5/0c/001eb61d396e4f95778f784365812d2eb31d8c053b634b008df9683979cd/alfred-py-2.3.8.tar.gz", "yanked": false}], "2.3.9": [{"comment_text": "", "digests": {"md5": "d003fd2ba9284308fbcd939850b729f6", "sha256": "55e6c5e57804da7c8d6ee9335e164ca0b91b5181e7034bad34267b9e0965afaa"}, "downloads": -1, "filename": "alfred-py-2.3.9.tar.gz", "has_sig": false, "md5_digest": "d003fd2ba9284308fbcd939850b729f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21959, "upload_time": "2018-12-25T11:45:55", "upload_time_iso_8601": "2018-12-25T11:45:55.909920Z", "url": "https://files.pythonhosted.org/packages/b4/bd/e85c0deb62fb8d54ee2ee90b6dbb5cf9e659d6d00cc03b97af34b7aaa177/alfred-py-2.3.9.tar.gz", "yanked": false}], "2.4.0": [{"comment_text": "", "digests": {"md5": "0274b836d2d3964221229da55a60aa87", "sha256": "ca6dff42e4e42eaaae6705e6b2fd6cac838545ce0851e4512c81caf8fe57a06c"}, "downloads": -1, "filename": "alfred-py-2.4.0.tar.gz", "has_sig": false, "md5_digest": "0274b836d2d3964221229da55a60aa87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23440, "upload_time": "2019-01-25T08:17:37", "upload_time_iso_8601": "2019-01-25T08:17:37.761255Z", "url": "https://files.pythonhosted.org/packages/e3/fd/5f609985ab7c4fe63588fd53f08361060eb6ff187467a0705b29e554696f/alfred-py-2.4.0.tar.gz", "yanked": false}], "2.4.1": [{"comment_text": "", "digests": {"md5": "3735899feaeecd472afbbc14da1e8ca9", "sha256": "c7d10a64fa642aa7c9a2634c9791db81129ac791241278ddd4cbbf22d6a27efc"}, "downloads": -1, "filename": "alfred-py-2.4.1.tar.gz", "has_sig": false, "md5_digest": "3735899feaeecd472afbbc14da1e8ca9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23462, "upload_time": "2019-01-29T07:10:15", "upload_time_iso_8601": "2019-01-29T07:10:15.097659Z", "url": "https://files.pythonhosted.org/packages/18/9d/d33aebdf61f31ec6a9ef7ff40fefe5cae947982f7feb935367722aa6c42c/alfred-py-2.4.1.tar.gz", "yanked": false}], "2.4.10": [{"comment_text": "", "digests": {"md5": "1cac15550d1cfb1d15670d8438221635", "sha256": "5d8e6ae53f84ecfa31cfb0d99d8bb8301a3e212f002d9928b7ce8b757141fb3b"}, "downloads": -1, "filename": "alfred-py-2.4.10.tar.gz", "has_sig": false, "md5_digest": "1cac15550d1cfb1d15670d8438221635", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22697, "upload_time": "2019-03-18T07:43:34", "upload_time_iso_8601": "2019-03-18T07:43:34.805609Z", "url": "https://files.pythonhosted.org/packages/69/7d/eddc34d1509a17390231638987b470275336e15f41f4fcc40984abb3a51d/alfred-py-2.4.10.tar.gz", "yanked": false}], "2.4.2": [{"comment_text": "", "digests": {"md5": "9ca0d67063f9eb41d1f84a7254193a3d", "sha256": "28907b1371975deba19c5be8e9aa7fa29f74dd54d6babec57fc3eefff654da5e"}, "downloads": -1, "filename": "alfred-py-2.4.2.tar.gz", "has_sig": false, "md5_digest": "9ca0d67063f9eb41d1f84a7254193a3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23453, "upload_time": "2019-01-29T13:03:35", "upload_time_iso_8601": "2019-01-29T13:03:35.549591Z", "url": "https://files.pythonhosted.org/packages/85/a0/5ed63976b6d090146809d75c1e50859928a0b1418eafacc20d368ce29700/alfred-py-2.4.2.tar.gz", "yanked": false}], "2.4.3": [{"comment_text": "", "digests": {"md5": "408c0cf652dd763391d83fa74c982679", "sha256": "5ee1327abf7a4062ea90d12d46623259c3ca7ed8f32e70d4252e35056859af3e"}, "downloads": -1, "filename": "alfred-py-2.4.3.tar.gz", "has_sig": false, "md5_digest": "408c0cf652dd763391d83fa74c982679", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23472, "upload_time": "2019-01-31T03:52:59", "upload_time_iso_8601": "2019-01-31T03:52:59.364599Z", "url": "https://files.pythonhosted.org/packages/c6/71/05e549003736c2400187430f6389198a3dc25553a2e15a53060caad833a3/alfred-py-2.4.3.tar.gz", "yanked": false}], "2.4.4": [{"comment_text": "", "digests": {"md5": "89036c4a23ae8d8468129e3e6e47e226", "sha256": "88ab689f70aae8907d07e9d7d237086fefcbb2b952f4d422baa170c2e83a6265"}, "downloads": -1, "filename": "alfred-py-2.4.4.tar.gz", "has_sig": false, "md5_digest": "89036c4a23ae8d8468129e3e6e47e226", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23799, "upload_time": "2019-01-31T06:42:28", "upload_time_iso_8601": "2019-01-31T06:42:28.233814Z", "url": "https://files.pythonhosted.org/packages/8f/2e/8d2e2791b2ee023336adbf099ed32819b0851db899280d1e4f56220aeec7/alfred-py-2.4.4.tar.gz", "yanked": false}], "2.4.5": [{"comment_text": "", "digests": {"md5": "a90a1d5c5855f2af9eb642436c67c03e", "sha256": "74d3740fff65fc5663edb5d49abe6301a4acb2adbdef3d9339f259ba0e4f340c"}, "downloads": -1, "filename": "alfred-py-2.4.5.tar.gz", "has_sig": false, "md5_digest": "a90a1d5c5855f2af9eb642436c67c03e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23875, "upload_time": "2019-01-31T07:58:21", "upload_time_iso_8601": "2019-01-31T07:58:21.788708Z", "url": "https://files.pythonhosted.org/packages/a7/a4/fd30182c820b86a73fe1656c7cb268a73b934c4dd546a194bdb638fafaf8/alfred-py-2.4.5.tar.gz", "yanked": false}], "2.4.6": [{"comment_text": "", "digests": {"md5": "5e748804f862fe3db0438e4692781464", "sha256": "9c6a97e45d9697dedaa101e17078f09715d5224715c2cd90806778f629930ad8"}, "downloads": -1, "filename": "alfred-py-2.4.6.tar.gz", "has_sig": false, "md5_digest": "5e748804f862fe3db0438e4692781464", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23882, "upload_time": "2019-01-31T08:27:07", "upload_time_iso_8601": "2019-01-31T08:27:07.823686Z", "url": "https://files.pythonhosted.org/packages/e9/de/c840638a522b759b451305f6f03ba2fc7c11cfa5e0037ac8c0f1f3544fea/alfred-py-2.4.6.tar.gz", "yanked": false}], "2.4.7": [{"comment_text": "", "digests": {"md5": "6a7084fb94dd1e940940bff5fc48c1a3", "sha256": "aa80afbddd8df5fba26a500f1e8d88a8dcf5642db5d5cf00b8f927c7548ae3e1"}, "downloads": -1, "filename": "alfred-py-2.4.7.tar.gz", "has_sig": false, "md5_digest": "6a7084fb94dd1e940940bff5fc48c1a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24171, "upload_time": "2019-02-01T10:53:57", "upload_time_iso_8601": "2019-02-01T10:53:57.949159Z", "url": "https://files.pythonhosted.org/packages/ec/0f/e0fa667e3606d233746e5dcef4c71358fd34632da28296c064e09cb4156d/alfred-py-2.4.7.tar.gz", "yanked": false}], "2.4.8": [{"comment_text": "", "digests": {"md5": "fd244bfcf515b8ccb404fb650535758c", "sha256": "f04b00135d2378758afa9c36361e5024e002dac1268e265a664d16052bf72e3b"}, "downloads": -1, "filename": "alfred-py-2.4.8.tar.gz", "has_sig": false, "md5_digest": "fd244bfcf515b8ccb404fb650535758c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22517, "upload_time": "2019-02-26T03:00:24", "upload_time_iso_8601": "2019-02-26T03:00:24.883386Z", "url": "https://files.pythonhosted.org/packages/7f/d3/fb2714f80d0dda68cee9165fc8021508fbf663267fb97835c44eb59a18ef/alfred-py-2.4.8.tar.gz", "yanked": false}], "2.4.9": [{"comment_text": "", "digests": {"md5": "b2972316bb9de662bf029c09850d9496", "sha256": "decb117f87bea668b76ebae7521933d7789f8e2ae9d2be788dfb35bb83d7ab26"}, "downloads": -1, "filename": "alfred-py-2.4.9.tar.gz", "has_sig": false, "md5_digest": "b2972316bb9de662bf029c09850d9496", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22666, "upload_time": "2019-03-18T07:06:28", "upload_time_iso_8601": "2019-03-18T07:06:28.562792Z", "url": "https://files.pythonhosted.org/packages/7c/4b/3efd81bb259ad8c4a0fb3d5ee07cba716665514488fe11134dc88473d8bf/alfred-py-2.4.9.tar.gz", "yanked": false}], "2.5": [{"comment_text": "", "digests": {"md5": "deac6d9b8c2c8d5cef0bf7126f2f0cbb", "sha256": "0222703d280a839bf7a72b37de32659e311d02f1cc99390726a44a586e5b2514"}, "downloads": -1, "filename": "alfred-py-2.5.tar.gz", "has_sig": false, "md5_digest": "deac6d9b8c2c8d5cef0bf7126f2f0cbb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24777, "upload_time": "2019-04-23T04:45:31", "upload_time_iso_8601": "2019-04-23T04:45:31.966789Z", "url": "https://files.pythonhosted.org/packages/79/9f/bbc215caab6d54f4719acd25c9c1453d3c921db90a9bcca10eb9a2678e16/alfred-py-2.5.tar.gz", "yanked": false}], "2.5.1": [{"comment_text": "", "digests": {"md5": "b9f8e8cf6ac41d6f554631f640ba4bc1", "sha256": "265235039a88dec1a9ba3898b38ac0056c73543f16253c7731135566516633b0"}, "downloads": -1, "filename": "alfred-py-2.5.1.tar.gz", "has_sig": false, "md5_digest": "b9f8e8cf6ac41d6f554631f640ba4bc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33601, "upload_time": "2019-04-23T06:20:02", "upload_time_iso_8601": "2019-04-23T06:20:02.735959Z", "url": "https://files.pythonhosted.org/packages/ee/6f/4bab4c3dac136fd3c6c383aed53a63de2f292e1311c00edcb4c918cb7c91/alfred-py-2.5.1.tar.gz", "yanked": false}], "2.5.10": [{"comment_text": "", "digests": {"md5": "15b15252322066809b9cadce5cdd6d9a", "sha256": "a9539819ea307cf4b021f5a816f7da1c5566d75683416c9b49148d100fd51186"}, "downloads": -1, "filename": "alfred-py-2.5.10.tar.gz", "has_sig": false, "md5_digest": "15b15252322066809b9cadce5cdd6d9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37645, "upload_time": "2019-05-17T06:29:33", "upload_time_iso_8601": "2019-05-17T06:29:33.346778Z", "url": "https://files.pythonhosted.org/packages/4d/b0/e47fec131182902f9f4cbab49d598b27624797afa9cd8e9d21dccb8afbe3/alfred-py-2.5.10.tar.gz", "yanked": false}], "2.5.13": [{"comment_text": "", "digests": {"md5": "b95ce9a3c0383146e0823475a812367a", "sha256": "acd6a1f158927eaf8f4c8132be568dab840eac0ca780c8f52d558ef14f4125c7"}, "downloads": -1, "filename": "alfred-py-2.5.13.tar.gz", "has_sig": false, "md5_digest": "b95ce9a3c0383146e0823475a812367a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37560, "upload_time": "2019-05-31T09:01:37", "upload_time_iso_8601": "2019-05-31T09:01:37.330787Z", "url": "https://files.pythonhosted.org/packages/2e/92/6915215ef9a0842871b3dfb61c3e915463fc0ceac597f23896e09561bee4/alfred-py-2.5.13.tar.gz", "yanked": false}], "2.5.14": [{"comment_text": "", "digests": {"md5": "a818429d8f13087a89841a2512714567", "sha256": "bb515922be35da87161353a0c1c2ce8963500e139846852acaaea4e70f9734e9"}, "downloads": -1, "filename": "alfred-py-2.5.14.tar.gz", "has_sig": false, "md5_digest": "a818429d8f13087a89841a2512714567", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38441, "upload_time": "2019-07-13T07:48:30", "upload_time_iso_8601": "2019-07-13T07:48:30.096866Z", "url": "https://files.pythonhosted.org/packages/cf/99/68ebb3ca081b137c5579a1b2105444400e93dd118ded9ca5544557013e12/alfred-py-2.5.14.tar.gz", "yanked": false}], "2.5.15": [{"comment_text": "", "digests": {"md5": "ee7574799df02a2379104cff0ca55a1d", "sha256": "25c98ac8d2c242f3a097ef9002d0241325cd2e7781d31c7feb8336ffd729e0be"}, "downloads": -1, "filename": "alfred-py-2.5.15.tar.gz", "has_sig": false, "md5_digest": "ee7574799df02a2379104cff0ca55a1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54662, "upload_time": "2019-07-25T13:56:09", "upload_time_iso_8601": "2019-07-25T13:56:09.388670Z", "url": "https://files.pythonhosted.org/packages/b8/9d/5aa87c51f49b0e887fa6322f4e65117b816f36224f2326ba7e56899d08fe/alfred-py-2.5.15.tar.gz", "yanked": false}], "2.5.16": [{"comment_text": "", "digests": {"md5": "16746d9bc02a35f6a286f7afb0245e43", "sha256": "25ff16aebdae7357667cbc873f234177cd322dde9d4361ebe69cf833d6d97bb8"}, "downloads": -1, "filename": "alfred-py-2.5.16.tar.gz", "has_sig": false, "md5_digest": "16746d9bc02a35f6a286f7afb0245e43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55366, "upload_time": "2019-07-25T14:20:43", "upload_time_iso_8601": "2019-07-25T14:20:43.548264Z", "url": "https://files.pythonhosted.org/packages/94/3e/78064683357046cef3fa46575ab39c34c108c7fbbe23a9b8e6750f68f0ba/alfred-py-2.5.16.tar.gz", "yanked": false}], "2.5.17": [{"comment_text": "", "digests": {"md5": "09374a0c4cf857f5868ee1650c6d86af", "sha256": "2af0a5fd047476f270c8685e916853a90d8e38681e673a7b8850d19e12446965"}, "downloads": -1, "filename": "alfred-py-2.5.17.tar.gz", "has_sig": false, "md5_digest": "09374a0c4cf857f5868ee1650c6d86af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55334, "upload_time": "2019-07-27T04:56:06", "upload_time_iso_8601": "2019-07-27T04:56:06.873600Z", "url": "https://files.pythonhosted.org/packages/1a/dc/f2f4061a728d52c1b766501ec1da8c75c0206e444dbde64ca6502271592b/alfred-py-2.5.17.tar.gz", "yanked": false}], "2.5.18": [{"comment_text": "", "digests": {"md5": "216e12ff306dfdf995be6075e8b42178", "sha256": "ed4c19ff25b2b17adbb6c198d13408f3928c842e5b1dfd226c81f699b0395827"}, "downloads": -1, "filename": "alfred-py-2.5.18.tar.gz", "has_sig": false, "md5_digest": "216e12ff306dfdf995be6075e8b42178", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55631, "upload_time": "2019-07-27T05:38:13", "upload_time_iso_8601": "2019-07-27T05:38:13.720144Z", "url": "https://files.pythonhosted.org/packages/9b/78/7995dd669f3dcf566eb99c05564fe8b650866fff135c4a43c8a358ee51a9/alfred-py-2.5.18.tar.gz", "yanked": false}], "2.5.19": [{"comment_text": "", "digests": {"md5": "82056d5bf30b778012f093e1201b6ce4", "sha256": "32e3806a7492ef5f976f2038c233619bca38b5c0bbaa2d2a2239c1b06b578782"}, "downloads": -1, "filename": "alfred-py-2.5.19.tar.gz", "has_sig": false, "md5_digest": "82056d5bf30b778012f093e1201b6ce4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57467, "upload_time": "2019-08-18T11:27:25", "upload_time_iso_8601": "2019-08-18T11:27:25.365281Z", "url": "https://files.pythonhosted.org/packages/44/5e/1d332ace162a2d92ae21ebc72319284291a7e0a991ea667c7218f69ab3d7/alfred-py-2.5.19.tar.gz", "yanked": false}], "2.5.2": [{"comment_text": "", "digests": {"md5": "c9ca63f153414626dc865e871abf3342", "sha256": "2820fd7dba01b723c43c9dfbe0ea37b04a8924fbdbc49d645ba366d557c03874"}, "downloads": -1, "filename": "alfred-py-2.5.2.tar.gz", "has_sig": false, "md5_digest": "c9ca63f153414626dc865e871abf3342", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34503, "upload_time": "2019-04-23T08:33:34", "upload_time_iso_8601": "2019-04-23T08:33:34.623328Z", "url": "https://files.pythonhosted.org/packages/31/84/f1cf0f2d0aa24ed2e2d3195a52a9e9c816f8c05feddb390ddf9d00b89f69/alfred-py-2.5.2.tar.gz", "yanked": false}], "2.5.20": [{"comment_text": "", "digests": {"md5": "82c5a08bbcadef217200f9c739991db7", "sha256": "811bf36d587e9016067ac7a46c8d3ac5020bf5ac8d426ec548fb31141e55324f"}, "downloads": -1, "filename": "alfred-py-2.5.20.tar.gz", "has_sig": false, "md5_digest": "82c5a08bbcadef217200f9c739991db7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57486, "upload_time": "2019-09-02T04:58:11", "upload_time_iso_8601": "2019-09-02T04:58:11.676511Z", "url": "https://files.pythonhosted.org/packages/e6/36/7d07b8d0614ea22288cdd08ba4a013eb62e5c7ba34b24b0eb0f6aa2dd1b6/alfred-py-2.5.20.tar.gz", "yanked": false}], "2.5.21": [{"comment_text": "", "digests": {"md5": "febc92049b0b07a69b35b32c3f362728", "sha256": "075b499e8d3e0b0c3e1d19d4e7ddb0f1a4a5e131dcab293d0e85d0a3d52de047"}, "downloads": -1, "filename": "alfred-py-2.5.21.tar.gz", "has_sig": false, "md5_digest": "febc92049b0b07a69b35b32c3f362728", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57516, "upload_time": "2019-09-04T06:56:20", "upload_time_iso_8601": "2019-09-04T06:56:20.875056Z", "url": "https://files.pythonhosted.org/packages/14/06/22789e703af1c65d762fb5cd4be849a95df959be3c717fa2d4fbac6c0665/alfred-py-2.5.21.tar.gz", "yanked": false}], "2.5.3": [{"comment_text": "", "digests": {"md5": "fc2aedb8ebbc0b3a15e845c6b22eed5c", "sha256": "ce637ddadb780557190eceabd1bd691749c154c0e62ed72fdf060ff920ac25e8"}, "downloads": -1, "filename": "alfred-py-2.5.3.tar.gz", "has_sig": false, "md5_digest": "fc2aedb8ebbc0b3a15e845c6b22eed5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35343, "upload_time": "2019-04-24T11:33:24", "upload_time_iso_8601": "2019-04-24T11:33:24.056511Z", "url": "https://files.pythonhosted.org/packages/cf/f2/ed9b85d7835777f12a6fea5aa40e4baa33f05f91282e00a992b0d9204119/alfred-py-2.5.3.tar.gz", "yanked": false}], "2.5.4": [{"comment_text": "", "digests": {"md5": "3e310eb4d264f0ef856da29494d0e2bf", "sha256": "6d4591f5e3fc29715df63a3d964ee039eae1bac1a1368d9f674c6c55e6d34729"}, "downloads": -1, "filename": "alfred-py-2.5.4.tar.gz", "has_sig": false, "md5_digest": "3e310eb4d264f0ef856da29494d0e2bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35381, "upload_time": "2019-04-24T12:02:16", "upload_time_iso_8601": "2019-04-24T12:02:16.436766Z", "url": "https://files.pythonhosted.org/packages/eb/66/446a44ce2db31ba69ca4371e5c069967130a9d1793e6c0e2afba85a68b3e/alfred-py-2.5.4.tar.gz", "yanked": false}], "2.5.5": [{"comment_text": "", "digests": {"md5": "d0a090109147a343c07a4fd47121f3c4", "sha256": "b448d319bc3c72fd75fe86b5398aef42b765165a778732b1466045bad65522b8"}, "downloads": -1, "filename": "alfred-py-2.5.5.tar.gz", "has_sig": false, "md5_digest": "d0a090109147a343c07a4fd47121f3c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36086, "upload_time": "2019-05-07T05:02:06", "upload_time_iso_8601": "2019-05-07T05:02:06.291800Z", "url": "https://files.pythonhosted.org/packages/c3/45/291141169cad18ebfc24b418699f8b885b3e6b40651896d36c3491fda2f1/alfred-py-2.5.5.tar.gz", "yanked": false}], "2.5.6": [{"comment_text": "", "digests": {"md5": "249fb70b5757688a5454185f9af79992", "sha256": "beb6ef914a693f766da1c7f1083371380a0771154c389ba66b2a6e96bef1ae72"}, "downloads": -1, "filename": "alfred-py-2.5.6.tar.gz", "has_sig": false, "md5_digest": "249fb70b5757688a5454185f9af79992", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37024, "upload_time": "2019-05-07T06:47:10", "upload_time_iso_8601": "2019-05-07T06:47:10.644844Z", "url": "https://files.pythonhosted.org/packages/b7/22/8ddc99a814dd443328c15ea8c319baca1f1ec6560c137e3ce3703483f7bd/alfred-py-2.5.6.tar.gz", "yanked": false}], "2.5.7": [{"comment_text": "", "digests": {"md5": "4e4c6c5aa3ac11d5da650171a090cab7", "sha256": "9c9333fa2d2785ded4151ba8bbe7d82792b4906499a8ac6cc1e31356bcd5d737"}, "downloads": -1, "filename": "alfred-py-2.5.7.tar.gz", "has_sig": false, "md5_digest": "4e4c6c5aa3ac11d5da650171a090cab7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37375, "upload_time": "2019-05-07T09:34:11", "upload_time_iso_8601": "2019-05-07T09:34:11.943482Z", "url": "https://files.pythonhosted.org/packages/15/2c/283cba5bfff7bf9a7f4bae54740e9e66debc95a7656c41888870aa42b271/alfred-py-2.5.7.tar.gz", "yanked": false}], "2.5.8": [{"comment_text": "", "digests": {"md5": "adb50424fb88e27c2ac5ecdb98441d34", "sha256": "41cf4d09f1f91e7d78b27d06db1762b090c345b2186802ceb605c60ead87c1dd"}, "downloads": -1, "filename": "alfred-py-2.5.8.tar.gz", "has_sig": false, "md5_digest": "adb50424fb88e27c2ac5ecdb98441d34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37308, "upload_time": "2019-05-10T09:10:43", "upload_time_iso_8601": "2019-05-10T09:10:43.862780Z", "url": "https://files.pythonhosted.org/packages/37/cd/3eb6a2b41540c879887c16fc8d0a8894e11f4f773935ebdce6324d87a433/alfred-py-2.5.8.tar.gz", "yanked": false}], "2.5.9": [{"comment_text": "", "digests": {"md5": "b3a8d7daddad0ee1b6e78ad8348f6df6", "sha256": "662faed31a8ca9367f918e2351f205567e1eef8c5c12384fb22b0690f8850a3d"}, "downloads": -1, "filename": "alfred-py-2.5.9.tar.gz", "has_sig": false, "md5_digest": "b3a8d7daddad0ee1b6e78ad8348f6df6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37613, "upload_time": "2019-05-17T06:16:32", "upload_time_iso_8601": "2019-05-17T06:16:32.132391Z", "url": "https://files.pythonhosted.org/packages/5e/2a/a85ef21515a3175efcf4a127d889e5bd4f9e073e9539030402b3ba9589fd/alfred-py-2.5.9.tar.gz", "yanked": false}], "2.6.0": [{"comment_text": "", "digests": {"md5": "e45206ba0779063ba1b683efe0f70632", "sha256": "3fbebbb6fc0c7f7390f132c2c96ae0d9ead89405b4158cadbd328b6357b0dad3"}, "downloads": -1, "filename": "alfred-py-2.6.0.tar.gz", "has_sig": false, "md5_digest": "e45206ba0779063ba1b683efe0f70632", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56018, "upload_time": "2019-12-02T15:27:55", "upload_time_iso_8601": "2019-12-02T15:27:55.996442Z", "url": "https://files.pythonhosted.org/packages/a7/82/d2583f6e9b5c3a66003c944d283095e3d5bf0e44a3fb0d473622e8f26283/alfred-py-2.6.0.tar.gz", "yanked": false}], "2.6.1": [{"comment_text": "", "digests": {"md5": "64cf96e9e903dcada423bd532c71f0d9", "sha256": "a00a55255d9e08f7a0f3936ea12a22205701d2ff77bd6a04ba98887d3697a57c"}, "downloads": -1, "filename": "alfred-py-2.6.1.tar.gz", "has_sig": false, "md5_digest": "64cf96e9e903dcada423bd532c71f0d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56419, "upload_time": "2019-12-21T07:16:55", "upload_time_iso_8601": "2019-12-21T07:16:55.245426Z", "url": "https://files.pythonhosted.org/packages/2a/76/f226002cdcb2feb3342196b1f85d8e8fa343d98b5c20278b4d0fd65a90cc/alfred-py-2.6.1.tar.gz", "yanked": false}], "2.6.10": [{"comment_text": "", "digests": {"md5": "804c5b2d4416b55ac3ee12bcecfda4da", "sha256": "6d57f6e80842f17deb5c86e83765f12f23748ea77463637b52e96b4f3ca06c6b"}, "downloads": -1, "filename": "alfred-py-2.6.10.tar.gz", "has_sig": false, "md5_digest": "804c5b2d4416b55ac3ee12bcecfda4da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68288, "upload_time": "2020-01-19T09:42:16", "upload_time_iso_8601": "2020-01-19T09:42:16.540656Z", "url": "https://files.pythonhosted.org/packages/0d/cb/e1c51aca8bbe6045e08ed43ee6753da78ccfe893d4865692fb0910900c1c/alfred-py-2.6.10.tar.gz", "yanked": false}], "2.6.11": [{"comment_text": "", "digests": {"md5": "60f5911f3a4073a15e5961646d8a1a72", "sha256": "2e1b2b1c87a37004057494d9077cc8669c6f0225d1f842bc5f61f0e3365cd27d"}, "downloads": -1, "filename": "alfred-py-2.6.11.tar.gz", "has_sig": false, "md5_digest": "60f5911f3a4073a15e5961646d8a1a72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68972, "upload_time": "2020-02-01T08:29:59", "upload_time_iso_8601": "2020-02-01T08:29:59.654381Z", "url": "https://files.pythonhosted.org/packages/55/6f/a50d11dea643dc054f96d672bf08a47511598615e6c72f596b9a09efb34c/alfred-py-2.6.11.tar.gz", "yanked": false}], "2.6.12": [{"comment_text": "", "digests": {"md5": "062025e8b066c3c2ad1dfe990e4b42a8", "sha256": "d40f4ae44994079ec314dd10b3356010df0ff133dc137ffd660b2d91abbd916c"}, "downloads": -1, "filename": "alfred_py-2.6.12-py3.7.egg", "has_sig": false, "md5_digest": "062025e8b066c3c2ad1dfe990e4b42a8", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 203807, "upload_time": "2020-02-08T08:36:35", "upload_time_iso_8601": "2020-02-08T08:36:35.546351Z", "url": "https://files.pythonhosted.org/packages/51/99/5bd4beeb721ca76104daed5bd4cee3d9496da13e341e7cdfb685aae2a8b8/alfred_py-2.6.12-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "2665f189bd2c7822df2c8e2a8b53bd90", "sha256": "8ba627bd4a297a11abed5ff3068cbda4b2aa5eaaba69dc57108003d50720089f"}, "downloads": -1, "filename": "alfred-py-2.6.12.tar.gz", "has_sig": false, "md5_digest": "2665f189bd2c7822df2c8e2a8b53bd90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73099, "upload_time": "2020-02-08T08:36:33", "upload_time_iso_8601": "2020-02-08T08:36:33.102992Z", "url": "https://files.pythonhosted.org/packages/48/e5/688f0b4057123bb6a4e0248a9fb6821ca054f106fa1c3f42352cd0e44d67/alfred-py-2.6.12.tar.gz", "yanked": false}], "2.6.13": [{"comment_text": "", "digests": {"md5": "5c98f8995769780070ebf19d8fe00cfa", "sha256": "2a967ab3833ca855054d23bce18e479157bda69ea10bf3145951e6dcf7aa9eea"}, "downloads": -1, "filename": "alfred-py-2.6.13.tar.gz", "has_sig": false, "md5_digest": "5c98f8995769780070ebf19d8fe00cfa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68597, "upload_time": "2020-02-11T03:10:17", "upload_time_iso_8601": "2020-02-11T03:10:17.875361Z", "url": "https://files.pythonhosted.org/packages/8b/6f/5898350acb7406c92ff06e713a725137a3753dbf3eaa62300e6e63ce2103/alfred-py-2.6.13.tar.gz", "yanked": false}], "2.6.14": [{"comment_text": "", "digests": {"md5": "3a024e8ae5ed3758983744d52cf8b45e", "sha256": "6be8c4a366b54ee7d72825c53a024b7fe0d0bdd7e42bab133e5aec5af47e54ca"}, "downloads": -1, "filename": "alfred_py-2.6.14-py3.7.egg", "has_sig": false, "md5_digest": "3a024e8ae5ed3758983744d52cf8b45e", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 225074, "upload_time": "2020-02-26T08:39:30", "upload_time_iso_8601": "2020-02-26T08:39:30.800145Z", "url": "https://files.pythonhosted.org/packages/3e/eb/3b017c470c417096301800197667263adb4638575237b35fefec84ea84e4/alfred_py-2.6.14-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "456edab4a80b82fe6ca78568db4ed3d5", "sha256": "b799217d6702c7b2dd1594551632cf5b5200e3109c7fd8983c88bfada03f3b48"}, "downloads": -1, "filename": "alfred-py-2.6.14.tar.gz", "has_sig": false, "md5_digest": "456edab4a80b82fe6ca78568db4ed3d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69795, "upload_time": "2020-02-17T14:05:39", "upload_time_iso_8601": "2020-02-17T14:05:39.610527Z", "url": "https://files.pythonhosted.org/packages/c7/b1/f57f5ee11d00c20b37c985dd3cc4a21e9c1575d122527001d248f478ac13/alfred-py-2.6.14.tar.gz", "yanked": false}], "2.6.15": [{"comment_text": "", "digests": {"md5": "f70da57970834738a37a02f2924e7c27", "sha256": "df6b6faf725ce9b4eccd0ea885da2f42f3dc19d627268aced80fee0a7c89bfbb"}, "downloads": -1, "filename": "alfred-py-2.6.15.tar.gz", "has_sig": false, "md5_digest": "f70da57970834738a37a02f2924e7c27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69806, "upload_time": "2020-02-18T09:04:01", "upload_time_iso_8601": "2020-02-18T09:04:01.623197Z", "url": "https://files.pythonhosted.org/packages/53/b1/9f56059d02268d62c2c1fb3fa3df6e8c0bc4267993d6c46e982f9c632a93/alfred-py-2.6.15.tar.gz", "yanked": false}], "2.6.16": [{"comment_text": "", "digests": {"md5": "448e29956eac7991f42300faa4bdb272", "sha256": "e8d43199c3ca2b54863a02939a8599c19f67cacd3f59be8161aaefeb8f8f25ee"}, "downloads": -1, "filename": "alfred-py-2.6.16.tar.gz", "has_sig": false, "md5_digest": "448e29956eac7991f42300faa4bdb272", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 86307, "upload_time": "2020-02-26T08:58:40", "upload_time_iso_8601": "2020-02-26T08:58:40.754187Z", "url": "https://files.pythonhosted.org/packages/b7/96/08b4b1b7b13b92576a95ae4cdcf06605ce345c2ad4ead5fa8c7d441bf497/alfred-py-2.6.16.tar.gz", "yanked": false}], "2.6.2": [{"comment_text": "", "digests": {"md5": "d6013cc84e1b256faae486ace3d84c61", "sha256": "1bf81b7a1c2ded60a8aa2768b9b8c05be15bcaf7ead6b5d9cbb46e35c7e231e7"}, "downloads": -1, "filename": "alfred-py-2.6.2.tar.gz", "has_sig": false, "md5_digest": "d6013cc84e1b256faae486ace3d84c61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57509, "upload_time": "2019-12-21T07:20:26", "upload_time_iso_8601": "2019-12-21T07:20:26.354909Z", "url": "https://files.pythonhosted.org/packages/93/4f/ddd69f0c57201ed217d7b91192a7986a28df58bb614653e604fcec483017/alfred-py-2.6.2.tar.gz", "yanked": false}], "2.6.3": [{"comment_text": "", "digests": {"md5": "46999881da3efdb72124b041ed0cd17c", "sha256": "3bf1b7c3574b77dd5078f9f506616d703e5fe0f5de2a86a06b7d15be14b317c1"}, "downloads": -1, "filename": "alfred-py-2.6.3.tar.gz", "has_sig": false, "md5_digest": "46999881da3efdb72124b041ed0cd17c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57585, "upload_time": "2019-12-26T08:04:11", "upload_time_iso_8601": "2019-12-26T08:04:11.055131Z", "url": "https://files.pythonhosted.org/packages/d9/83/4cfeb25d0a70b787ce0652ec897e85c4dae086db307d5e187da37dbbda10/alfred-py-2.6.3.tar.gz", "yanked": false}], "2.6.4": [{"comment_text": "", "digests": {"md5": "d8ec94588ff3c428bb9bad718a5aba37", "sha256": "c3683b078dfafa92c7e62458efe435c20d3a1c9f8efd71cd906a9c72013015ee"}, "downloads": -1, "filename": "alfred-py-2.6.4.tar.gz", "has_sig": false, "md5_digest": "d8ec94588ff3c428bb9bad718a5aba37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60835, "upload_time": "2020-01-05T12:13:11", "upload_time_iso_8601": "2020-01-05T12:13:11.057524Z", "url": "https://files.pythonhosted.org/packages/53/06/97fbb7da0da507f26753360ffcb1646572be08f26a7aa43a75e1f15de2a3/alfred-py-2.6.4.tar.gz", "yanked": false}], "2.6.5": [{"comment_text": "", "digests": {"md5": "0257a3e67bbdfaa7ef9b83bbe1d3f17f", "sha256": "a5dd39abdb64339ff80ede318aa42102b934defa66eb745641adba3a241c7dad"}, "downloads": -1, "filename": "alfred-py-2.6.5.tar.gz", "has_sig": false, "md5_digest": "0257a3e67bbdfaa7ef9b83bbe1d3f17f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61188, "upload_time": "2020-01-09T08:49:54", "upload_time_iso_8601": "2020-01-09T08:49:54.687394Z", "url": "https://files.pythonhosted.org/packages/bf/c9/b475f586ac1154ad419d9bd9bbf478c9aa2325e4d5e80d23638305b7ae1c/alfred-py-2.6.5.tar.gz", "yanked": false}], "2.6.6": [{"comment_text": "", "digests": {"md5": "36e899026126087d54f51f03a0533204", "sha256": "aed38cd503a6d7fc564c2cf740efcff2b3307c059c59f97d57bf5c0323ac962b"}, "downloads": -1, "filename": "alfred-py-2.6.6.tar.gz", "has_sig": false, "md5_digest": "36e899026126087d54f51f03a0533204", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62228, "upload_time": "2020-01-10T06:55:33", "upload_time_iso_8601": "2020-01-10T06:55:33.380378Z", "url": "https://files.pythonhosted.org/packages/50/93/e3a7acfa00e1f990d03aa60d7af77150b0dfd1031a068e0c435cabf9ae28/alfred-py-2.6.6.tar.gz", "yanked": false}], "2.6.7": [{"comment_text": "", "digests": {"md5": "cdc11d4b9e07d08ae404aba2f32020d9", "sha256": "196c768b35367f25d4a197e1e1414aed3dadfe7d4f171493c009a1158a05ad91"}, "downloads": -1, "filename": "alfred-py-2.6.7.tar.gz", "has_sig": false, "md5_digest": "cdc11d4b9e07d08ae404aba2f32020d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66556, "upload_time": "2020-01-10T07:11:05", "upload_time_iso_8601": "2020-01-10T07:11:05.486656Z", "url": "https://files.pythonhosted.org/packages/67/14/e7a84eebdd8c7b117ba208ceab306fa521f0fc57b25147f8141d8343e725/alfred-py-2.6.7.tar.gz", "yanked": false}], "2.6.8": [{"comment_text": "", "digests": {"md5": "b2a21c8bffe3044e94bd08cb0f94fa98", "sha256": "803a3a113e1bdd732d0358f0644828ba15b034c614220892c76b65778d13d318"}, "downloads": -1, "filename": "alfred-py-2.6.8.tar.gz", "has_sig": false, "md5_digest": "b2a21c8bffe3044e94bd08cb0f94fa98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67336, "upload_time": "2020-01-13T03:05:46", "upload_time_iso_8601": "2020-01-13T03:05:46.444141Z", "url": "https://files.pythonhosted.org/packages/17/75/136edc7306a7cfe968e9ea71c6bae630818d90993fdb4f17b2b2007d5c35/alfred-py-2.6.8.tar.gz", "yanked": false}], "2.6.9": [{"comment_text": "", "digests": {"md5": "72c6f74386eba4108aa263d28a332128", "sha256": "024de7f763c585c150d526514c488e3d019bc41878c94ffd3d1d6409c4a87770"}, "downloads": -1, "filename": "alfred-py-2.6.9.tar.gz", "has_sig": false, "md5_digest": "72c6f74386eba4108aa263d28a332128", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68292, "upload_time": "2020-01-14T06:03:04", "upload_time_iso_8601": "2020-01-14T06:03:04.732034Z", "url": "https://files.pythonhosted.org/packages/d0/53/cd0ad8cf418695aa4c5787454643d0a9afac0e04430cab86191c95547a7a/alfred-py-2.6.9.tar.gz", "yanked": false}], "2.7.0": [{"comment_text": "", "digests": {"md5": "5a8e0bdcd56c01bbc2db193ef1ec45c6", "sha256": "6438e99308a7f9938fe6b7e5774af23850e02a4f53404f4eb404e945c76220ca"}, "downloads": -1, "filename": "alfred-py-2.7.0.tar.gz", "has_sig": false, "md5_digest": "5a8e0bdcd56c01bbc2db193ef1ec45c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100566, "upload_time": "2020-03-08T02:51:19", "upload_time_iso_8601": "2020-03-08T02:51:19.742570Z", "url": "https://files.pythonhosted.org/packages/b1/43/c1379a78ea26d7cca94b4152690353951ca740fba60ed062fd693631e683/alfred-py-2.7.0.tar.gz", "yanked": false}], "2.7.1": [{"comment_text": "", "digests": {"md5": "ada70cc7d5abab107d0636ccf996dfee", "sha256": "fabccfbe069a2438381cb077d40593f2ffdf1e2adfac560c3fb65f91d1a81ee1"}, "downloads": -1, "filename": "alfred-py-2.7.1.tar.gz", "has_sig": false, "md5_digest": "ada70cc7d5abab107d0636ccf996dfee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102616, "upload_time": "2020-03-16T07:39:37", "upload_time_iso_8601": "2020-03-16T07:39:37.159910Z", "url": "https://files.pythonhosted.org/packages/29/67/db3e1c59b735e573a6b0e22c8131e357a37e8e689e36010c260bb2244e9c/alfred-py-2.7.1.tar.gz", "yanked": false}], "2.7.3": [{"comment_text": "", "digests": {"md5": "1e80f8e27a30cd81ecd2e80bdfa319bf", "sha256": "91a2653552be1638f0d9a3b69d206061e0bd39699da440a657dbc3d6501c1125"}, "downloads": -1, "filename": "alfred-py-2.7.3.tar.gz", "has_sig": false, "md5_digest": "1e80f8e27a30cd81ecd2e80bdfa319bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102831, "upload_time": "2020-03-18T06:09:57", "upload_time_iso_8601": "2020-03-18T06:09:57.028056Z", "url": "https://files.pythonhosted.org/packages/22/39/9be6534217f8712b168b36d57553a143bb544183182af94e4932aeeafd85/alfred-py-2.7.3.tar.gz", "yanked": false}], "2.7.4": [{"comment_text": "", "digests": {"md5": "b0867459e76753d4034bcfb3c7427ff1", "sha256": "d77ab340c911e81c56bfc4e0bf0cd8d3c43d6e2d054a446e7bf1249fa5da86a0"}, "downloads": -1, "filename": "alfred-py-2.7.4.tar.gz", "has_sig": false, "md5_digest": "b0867459e76753d4034bcfb3c7427ff1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 112388, "upload_time": "2020-04-11T07:32:24", "upload_time_iso_8601": "2020-04-11T07:32:24.295163Z", "url": "https://files.pythonhosted.org/packages/6d/84/ff45de7432887ce9ab2a92f5dec6b7a4a509d7d211976489325ac3fb3028/alfred-py-2.7.4.tar.gz", "yanked": false}], "2.7.5": [{"comment_text": "", "digests": {"md5": "eca053d0041ce5519d7250177acf37f5", "sha256": "d5ff049914c1bcea8661f089122204d0f90d6be4661e13cffad10e50545554fb"}, "downloads": -1, "filename": "alfred-py-2.7.5.tar.gz", "has_sig": false, "md5_digest": "eca053d0041ce5519d7250177acf37f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 103509, "upload_time": "2020-04-14T06:50:52", "upload_time_iso_8601": "2020-04-14T06:50:52.384531Z", "url": "https://files.pythonhosted.org/packages/87/9c/dd52b56ba8fced8bc0bb4948bd7180bac81608265de7fe5b4e1804a34e50/alfred-py-2.7.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eca053d0041ce5519d7250177acf37f5", "sha256": "d5ff049914c1bcea8661f089122204d0f90d6be4661e13cffad10e50545554fb"}, "downloads": -1, "filename": "alfred-py-2.7.5.tar.gz", "has_sig": false, "md5_digest": "eca053d0041ce5519d7250177acf37f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 103509, "upload_time": "2020-04-14T06:50:52", "upload_time_iso_8601": "2020-04-14T06:50:52.384531Z", "url": "https://files.pythonhosted.org/packages/87/9c/dd52b56ba8fced8bc0bb4948bd7180bac81608265de7fe5b4e1804a34e50/alfred-py-2.7.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:19:53 2020"}