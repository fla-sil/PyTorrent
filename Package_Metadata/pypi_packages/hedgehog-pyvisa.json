{"info": {"author": "lordoftheflies", "author_email": "laszlo.hegedus@cherubits.hu", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "PyVISA\n======\n\nA Python package for support of the \"Virtual Instrument Software\nArchitecture\" (VISA), in order to control measurement devices and\ntest equipment via GPIB, RS232, Ethernet or USB.\n\n\nDescription\n-----------\n\nThe programming of measurement instruments can be real pain. There are many\ndifferent protocols, sent over many different interfaces and bus systems\n(GPIB, RS232, USB). For every programming language you want to use, you have to\nfind libraries that support both your device and its bus system.\n\nIn order to ease this unfortunate situation, the Virtual Instrument Software Architecture\n(VISA_) specification was defined in the middle of the 90'. Today VISA is implemented on\nall significant operating systems. A couple of vendors offer VISA libraries, partly\nwith free download. These libraries work together with arbitrary peripherical devices,\nalthough they may be limited to certain interface devices, such as the vendor\u2019s GPIB card.\n\nThe VISA specification has explicit bindings to Visual Basic, C, and G (LabVIEW\u2019s graphical\nlanguage. However, you can use VISA with any language capable of calling functions in a DLL.\nPython is such a language.\n\n.. _VISA: http://www.ivifoundation.org/specifications/default.aspx\n\n\nVISA and Python\n---------------\n\nPython has a couple of features that make it very interesting for measurement controlling:\n\n- Python is an easy-to-learn scripting language with short development cycles.\n- It represents a high abstraction level [2], which perfectly blends with the abstraction\n  level of measurement programs.\n- It has a very rich set of native libraries, including numerical and plotting modules for\n  data analysis and visualisation.\n- A large set of books (in many languages) and on-line publications is available.\n\n\nRequirements\n------------\n\n- VISA (tested with NI-VISA 3.2, WinXP, from www.ni.com/visa)\n- Python (tested with 2.6 and 3.2+)\n\n\nInstallation\n--------------\n\nUsing pip:\n\n    $ pip install pyvisa\n\nor easy_install:\n\n    $ easy_install pyvisa\n\nor download and unzip the source distribution file and:\n\n    $ python setup.py install\n\n\nDocumentation\n--------------\n\nThe documentation can be read online at https://pyvisa.readthedocs.org\n\n\nPyVISA was originally programmed by Torsten Bronger and Gregor Thalhammer, Innsbruck, Austria. It is based on earlier experiences by Thalhammer.\n\nIt was maintained from March 2012 to August 2013 by Florian Bauer.\nIt is currently maintained by Hernan E. Grecco <hernan.grecco@gmail.com>.\n\nOther contributors, listed alphabetically, are:\n\n* bauflo3 <bauflo3@516c0664-e049-0410-bc6e-8f9a6051a51d>\n* bkstein <Bernd.Krietenstein@rohde-schwarz.com>\n* bronger>\n* Christian Lupien <christian.lupien@usherbrooke.ca>\n* Colin Marquardt <github@marquardt-home.de>\n* crazyfermions <brain-stormer@web.de>\n* gnbl <l@eleif.net>\n* Gregor Thalhammer <gregor.thalhammer@gmail.com>\n* HummingBrid\n* kcsaff\n* lordoftheflies <laszlo.hegedus@cherubits.hu>\n* Martin Ritter <ritter@mpp.mpg.de>\n* Matthew94 <matthewlove94@gmail.com>\n* Matthieu Dartiailh <marul@laposte.net>\n* mordoror <mordoror@gmail.com>\n* Tobias M\u00fcller <Tobias_Mueller@twam.info>\n* Yves Delley <hack@delley.net>\n\nIf you think your name should be here, please let me know.\n\n\nPyVISA Changelog\n================\n\n\n1.9 (unreleased)\n----------------\n\n- Nothing changed yet.\n\n\n1.8 (2015-08-24)\n----------------\n\n- Fixed error reporting with Unicode filenames.\n  (Issue #136)\n- Improved documentation.\n- Clarify timeout getter and setter.\n  (Issue #167)\n- In open_resource, return a Resource object and warns if resource class not registered.\n- Register resource class for empty resource class.\n- Allow registering parent resource classes.\n- Changed types in wrapper to be platform independent (viStatus is always 32 bit).\n  (Issue #134)\n- Fix a not a invalid EventType bug.\n  (Thanks lupien)\n- Added optional resource_pyclass to open_resource.\n- Fixed bug in serial flush.\n  (Thanks bkstein)\n- Implemented resource name parsing in pure python.\n\n\n1.7 (2015-05-16)\n----------------\n\n- Removed find_next and find_resources from VisaLibraryBase.\n  (Issue also #135, thanks)\n- Implemented parse_resource and parse_resource_extended.\n- Created rname module to parse Resource Names.\n- Properly cleanup visa handlers upon resource close.\n  (thanks lupien)\n- Improved gpib classes\n  (thanks lupien)\n- Fixed bug in binary data writing.\n  (Issue #140, thanks burnpack)\n- Fix reseting of line termination for serial.\n  (Issue #147, thanks lupien)\n- Added property to resource name returning the InterfaceType value.\n- Added backend information to logging.\n- Added the flow_control attribute to ASRL resources.\n  (Issue #144, thanks lupien)\n- Remove empty entry in resources caused by attribute registration.\n  (Issue #144, thanks lupien)\n- Make container=numpy.array work consistently.\n  (Issue #142, thanks Martin Ritter)\n- Create compact/struct.py for python2/3 compatibility.\n  (thanks Martin Ritter)\n- Improve install and uninstall handlers\n  (Issue #138, #139, #151 thanks lupien)\n- Prevents cygwin segfaults.\n  (Issue #131)\n- Better error reporting when a resource cannot be found.\n  (Issue #129)\n- Suppress VI_SUCCESS_MAX_CNT warning on read raw.\n  (Issue #116)\n- Implemented smarter query values based on looking how many bytes are expected.\n  (Issue #118)\n- Fix UnicodeDecodeError on wrong file for library load\n  (Issue #136, thanks lupien)\n\n\n1.6.3 (2015-02-08)\n------------------\n\n- Added support to Rhode and Schwartz Passport driver.\n  (Issue #115)\n- Fixed access to the interface_type property.\n  (Issue #114, thanks mordoror)\n- Imported constants module in visa module.\n  (Issue #72)\n\n\n1.6.2 (2014-12-29)\n------------------\n\n- Proper handling of VI_ERROR_RSRC_NFOUND.\n- Added conditional dependency for unittest2 in Python2.6\n  (Issue #107)\n- Fixed Shell on Windows.\n  (Issue #101)\n- Moved Lantz Shell to PyVISA.\n- Easier way to get debug information.\n- Better debug info for backends.\n\n\n1.6.1 (2014-10-28)\n------------------\n\n- Add ignore_warning methods to Resource and ResourceManager.\n- Added more formats to binary values.\n  (Issue #92)\n- Fixed exception raising in legacy read_values.\n  (Issue #91)\n- Provide a backend hook to display debug info.\n- Better debug info for binary libraries.\n- Fixed exceptions formatting\n  (thanks Matthew94)\n  \n\n\n1.6 (2014-09-28)\n----------------\n\n- 13 Resource Classes covering all resource types.\n- Attributes classes provided introspection to VISA attributes.\n- Many VISA attributes added to Resource Classes.\n- Use of IntEnum for common constants.\n- Better documentation.\n- Implementation of discoverable backends.\n- New functions to encode and decode of IEEE blocks.\n- New functions to encode and decode of ASCII blocks.\n- New API to transfer values from the instrument.\n- Renamed ask/ask_delay/ask_for_values to ask/query_delay/query_values.\n  Old names still available for backwards compatibility.\n- Implemented Group Execute Trigger for GPIBInterface.\n  (Issue #67)\n- Make setuptools a requirement.\n  (Issue #64 and 68)\n- Simplified testing.\n- Removed legacy subpackage.\n- Removed string handling wrappers.\n- Removed Instrument class in favour of Resource.\n- Removed status and implemented thread-safe, per instrument, last_status.\n- Refactored warning ignoring mechanisms to a thread-safe one.\n- Added enum34 requirement for Python < 3.4.\n- Removed deprecated term_chars.\n\n\n1.5 (2014-06-24)\n----------------\n\n- Python 3.2+ compatibility.\n  (Issue #32)\n- Change source encoding to utf-8.\n- Reorganized package structure.\n  (Issue #13)\n- Improved installation.\n- Moved tests inside the package.\n- Added CI using Travis.\n- Created new wrapper for the underlying library.\n- Moved vpp43 code to legacy subpackage.\n- Moved documentation to readthedocs.\n- Make documentation mobile-friendly.\n  (Issue #2)\n- Removed latex documentation.\n- ResourceManager is no longer a singleton.\n  (Issue #8)\n- VisaLibrary is no longer a singleton.\n  (Issue #7)\n- VISA functions are VisaLibrary methods.\n  (Issue #11)\n- Improved detection of VISA library path in all OS.\n- Added diagnostics functions to help debugging.\n- Added extensive logging to help debugging.\n  (Issue #12)\n- Improved error messages.\n- Added encoding parameter to read and write.\n  (Issue #38)\n- Added termination parameter to read and write.\n  (Issue #38)\n- Added size to read_raw.\n  (Issue #37)\n- Removed delay parameter in favor of ask_delay\n  (Issue #34)\n- Added 64 bits VISA library methods.\n- Cleaned up code.\n\n\n1.4 (2012-05-13)\n----------------\n\n- add coverage\n- add tox testing\n\n\n1.3 (2008-03-26)\n----------------\n\n- Changed licence to MIT.\n- Made determination of resource class even more careful.\n\n\n1.2 (2007-09-19)\n----------------\n\n- Changed some __getattr__ to getattr in order to have working exceptions again\n  (e.g. timeouts) in vpp43\n- Softened the test for \"INSTR\" even further.  Introduced the \"stb\" property for\n  GPIB instruments.\n- Changed \"is not an INSTR\" error to a warning.\n- Added correct prefix for RPM in setup.cfg.\n\n\n1.1 (2006-11-21)\n----------------\n\n- Mentioned possible AttributeError with viParseRsrcEx.\n- Made secure against missing viParseRsrcEx.\n- Removed superfluous calls to parse_resource_extended.\n- setup.py Script can now handle installation with or without setuptools.\n- setup.py: Switched to new distutils version.\n\n1.0 (2006-01-23)\n----------------\n\n- New properties of SerialInstrument explained.\n- Added many further properties to SerialInstrument.\n\n\n0.9.7 (2005-09-21)\n------------------\n\n- Renamed timeout parameter in open() to open_timeout.\n- Renamed Timeout parameter in open() to open_timeout.\n- Added section about SerialInstrument.\n- Added class SerialInstrument. Made termination characters even more robust.\n\n\n0.9.6 (2005-08-31)\n------------------\n\n- Renamed TypeError to VisaTypeError.\n- Added InvalidBinaryFormat. Renamed TypeError to VisaTypeError.\n- Added a lot of docstrings. Fixed bug with ValueError exception raising.\n- Eliminated string exceptions. A little bit of code clean-up.\n- Added old distutils inclusion for RPM that cause trouble with my setuptools\n  installation.\n- Set default for term_chars to None and implemented it in write() method.\n- Described new default for term_chars.\n- Added instrument(). Fixed bugs in __repr()__.\n- Improved documentation.\n- Switched from distutils to setuptools.\n\n\n0.9.5 (2005-08-27)\n------------------\n\n- Changed package name to \"PyVISA\".\n- visa_attributes.py: 0xFFFFFFFF -> 0xFFFFFFFFL.\n- Switched from distutils to setuptools.\n\n\n0.9.4 (2005-08-12)\n------------------\n\n- Added filename selection for VISA DLL with Windows in vpp43.py.\n- Added code to skip over header before binary data.\n- Cleaned up whitespace.\n- Added support for endianess in case of binary transfers.\n- Improved binary reading; now it also accepts things like \"#267...\".\n\n\n0.9.3 (2005-07-21)\n------------------\n\n- Changed default termination characters to \"\" for GPIB instruments. LF and CR\n  are completely stripped from the end of read string, no matter how the\n  termination characters are set.\n\n\n0.9.2 (2005-07-19)\n------------------\n\n- Added remaining keyword arguments for Instrument constructor.  Added CR and LF.\n  Added working support for reading binary data.\n- Added ask() and ask_for_values().\n- Partially implemented binary reading.\n- Split the old term_chars in term_chars, delay, and send_end.\n- Implemented warning system for invalid keyword arguments.  Added test for valid\n  float values in read_floats(). Added full term_char string in __get_term_char().\n- Standard timeout increased from 2 to 5 seconds.\n- read_floats() returns *always* a list.\n- Moved trigger() method to Instrument class.\n- Fixed bug in regular expression for termination characters.\n- Fixed bug with ignored term_char attribute for GPIB instruments.\n- Increased chunk_size's default value and added it to the keyword arguments of the constructor.\n\n\n0.9.1 (2005-07-03)\n------------------\n\n- Added properties resource_name and resource_class to ResourceTemplate.  Used\n  both to simplify code.\n\n\n0.9 (2005-06-29)\n----------------\n\n- First usable release. See ChangeLog for more information.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lordoftheflies/hedgehog-pyvisa", "keywords": "VISA GPIB USB serial RS232 measurement acquisition", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "hedgehog-pyvisa", "package_url": "https://pypi.org/project/hedgehog-pyvisa/", "platform": "Linux,Windows,Mac", "project_url": "https://pypi.org/project/hedgehog-pyvisa/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/lordoftheflies/hedgehog-pyvisa"}, "release_url": "https://pypi.org/project/hedgehog-pyvisa/2.0.0/", "requires_dist": null, "requires_python": null, "summary": "Python VISA bindings for GPIB, RS232, and USB instruments", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pyvisa\">\n<h2>PyVISA</h2>\n<p>A Python package for support of the \u201cVirtual Instrument Software\nArchitecture\u201d (VISA), in order to control measurement devices and\ntest equipment via GPIB, RS232, Ethernet or USB.</p>\n<div id=\"description\">\n<h3>Description</h3>\n<p>The programming of measurement instruments can be real pain. There are many\ndifferent protocols, sent over many different interfaces and bus systems\n(GPIB, RS232, USB). For every programming language you want to use, you have to\nfind libraries that support both your device and its bus system.</p>\n<p>In order to ease this unfortunate situation, the Virtual Instrument Software Architecture\n(<a href=\"http://www.ivifoundation.org/specifications/default.aspx\" rel=\"nofollow\">VISA</a>) specification was defined in the middle of the 90\u2019. Today VISA is implemented on\nall significant operating systems. A couple of vendors offer VISA libraries, partly\nwith free download. These libraries work together with arbitrary peripherical devices,\nalthough they may be limited to certain interface devices, such as the vendor\u2019s GPIB card.</p>\n<p>The VISA specification has explicit bindings to Visual Basic, C, and G (LabVIEW\u2019s graphical\nlanguage. However, you can use VISA with any language capable of calling functions in a DLL.\nPython is such a language.</p>\n</div>\n<div id=\"visa-and-python\">\n<h3>VISA and Python</h3>\n<p>Python has a couple of features that make it very interesting for measurement controlling:</p>\n<ul>\n<li>Python is an easy-to-learn scripting language with short development cycles.</li>\n<li>It represents a high abstraction level [2], which perfectly blends with the abstraction\nlevel of measurement programs.</li>\n<li>It has a very rich set of native libraries, including numerical and plotting modules for\ndata analysis and visualisation.</li>\n<li>A large set of books (in many languages) and on-line publications is available.</li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li>VISA (tested with NI-VISA 3.2, WinXP, from www.ni.com/visa)</li>\n<li>Python (tested with 2.6 and 3.2+)</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Using pip:</p>\n<blockquote>\n$ pip install pyvisa</blockquote>\n<p>or easy_install:</p>\n<blockquote>\n$ easy_install pyvisa</blockquote>\n<p>or download and unzip the source distribution file and:</p>\n<blockquote>\n$ python setup.py install</blockquote>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>The documentation can be read online at <a href=\"https://pyvisa.readthedocs.org\" rel=\"nofollow\">https://pyvisa.readthedocs.org</a></p>\n<p>PyVISA was originally programmed by Torsten Bronger and Gregor Thalhammer, Innsbruck, Austria. It is based on earlier experiences by Thalhammer.</p>\n<p>It was maintained from March 2012 to August 2013 by Florian Bauer.\nIt is currently maintained by Hernan E. Grecco &lt;<a href=\"mailto:hernan.grecco%40gmail.com\">hernan<span>.</span>grecco<span>@</span>gmail<span>.</span>com</a>&gt;.</p>\n<p>Other contributors, listed alphabetically, are:</p>\n<ul>\n<li>bauflo3 &lt;<a href=\"mailto:bauflo3%40516c0664-e049-0410-bc6e-8f9a6051a51d\">bauflo3<span>@</span>516c0664-e049-0410-bc6e-8f9a6051a51d</a>&gt;</li>\n<li>bkstein &lt;<a href=\"mailto:Bernd.Krietenstein%40rohde-schwarz.com\">Bernd<span>.</span>Krietenstein<span>@</span>rohde-schwarz<span>.</span>com</a>&gt;</li>\n<li>bronger&gt;</li>\n<li>Christian Lupien &lt;<a href=\"mailto:christian.lupien%40usherbrooke.ca\">christian<span>.</span>lupien<span>@</span>usherbrooke<span>.</span>ca</a>&gt;</li>\n<li>Colin Marquardt &lt;<a href=\"mailto:github%40marquardt-home.de\">github<span>@</span>marquardt-home<span>.</span>de</a>&gt;</li>\n<li>crazyfermions &lt;<a href=\"mailto:brain-stormer%40web.de\">brain-stormer<span>@</span>web<span>.</span>de</a>&gt;</li>\n<li>gnbl &lt;<a href=\"mailto:l%40eleif.net\">l<span>@</span>eleif<span>.</span>net</a>&gt;</li>\n<li>Gregor Thalhammer &lt;<a href=\"mailto:gregor.thalhammer%40gmail.com\">gregor<span>.</span>thalhammer<span>@</span>gmail<span>.</span>com</a>&gt;</li>\n<li>HummingBrid</li>\n<li>kcsaff</li>\n<li>lordoftheflies &lt;<a href=\"mailto:laszlo.hegedus%40cherubits.hu\">laszlo<span>.</span>hegedus<span>@</span>cherubits<span>.</span>hu</a>&gt;</li>\n<li>Martin Ritter &lt;<a href=\"mailto:ritter%40mpp.mpg.de\">ritter<span>@</span>mpp<span>.</span>mpg<span>.</span>de</a>&gt;</li>\n<li>Matthew94 &lt;<a href=\"mailto:matthewlove94%40gmail.com\">matthewlove94<span>@</span>gmail<span>.</span>com</a>&gt;</li>\n<li>Matthieu Dartiailh &lt;<a href=\"mailto:marul%40laposte.net\">marul<span>@</span>laposte<span>.</span>net</a>&gt;</li>\n<li>mordoror &lt;<a href=\"mailto:mordoror%40gmail.com\">mordoror<span>@</span>gmail<span>.</span>com</a>&gt;</li>\n<li>Tobias M\u00fcller &lt;<a href=\"mailto:Tobias_Mueller%40twam.info\">Tobias_Mueller<span>@</span>twam<span>.</span>info</a>&gt;</li>\n<li>Yves Delley &lt;<a href=\"mailto:hack%40delley.net\">hack<span>@</span>delley<span>.</span>net</a>&gt;</li>\n</ul>\n<p>If you think your name should be here, please let me know.</p>\n</div>\n</div>\n<div id=\"pyvisa-changelog\">\n<h2>PyVISA Changelog</h2>\n<div id=\"unreleased\">\n<h3>1.9 (unreleased)</h3>\n<ul>\n<li>Nothing changed yet.</li>\n</ul>\n</div>\n<div id=\"id1\">\n<h3>1.8 (2015-08-24)</h3>\n<ul>\n<li>Fixed error reporting with Unicode filenames.\n(Issue #136)</li>\n<li>Improved documentation.</li>\n<li>Clarify timeout getter and setter.\n(Issue #167)</li>\n<li>In open_resource, return a Resource object and warns if resource class not registered.</li>\n<li>Register resource class for empty resource class.</li>\n<li>Allow registering parent resource classes.</li>\n<li>Changed types in wrapper to be platform independent (viStatus is always 32 bit).\n(Issue #134)</li>\n<li>Fix a not a invalid EventType bug.\n(Thanks lupien)</li>\n<li>Added optional resource_pyclass to open_resource.</li>\n<li>Fixed bug in serial flush.\n(Thanks bkstein)</li>\n<li>Implemented resource name parsing in pure python.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.7 (2015-05-16)</h3>\n<ul>\n<li>Removed find_next and find_resources from VisaLibraryBase.\n(Issue also #135, thanks)</li>\n<li>Implemented parse_resource and parse_resource_extended.</li>\n<li>Created rname module to parse Resource Names.</li>\n<li>Properly cleanup visa handlers upon resource close.\n(thanks lupien)</li>\n<li>Improved gpib classes\n(thanks lupien)</li>\n<li>Fixed bug in binary data writing.\n(Issue #140, thanks burnpack)</li>\n<li>Fix reseting of line termination for serial.\n(Issue #147, thanks lupien)</li>\n<li>Added property to resource name returning the InterfaceType value.</li>\n<li>Added backend information to logging.</li>\n<li>Added the flow_control attribute to ASRL resources.\n(Issue #144, thanks lupien)</li>\n<li>Remove empty entry in resources caused by attribute registration.\n(Issue #144, thanks lupien)</li>\n<li>Make container=numpy.array work consistently.\n(Issue #142, thanks Martin Ritter)</li>\n<li>Create compact/struct.py for python2/3 compatibility.\n(thanks Martin Ritter)</li>\n<li>Improve install and uninstall handlers\n(Issue #138, #139, #151 thanks lupien)</li>\n<li>Prevents cygwin segfaults.\n(Issue #131)</li>\n<li>Better error reporting when a resource cannot be found.\n(Issue #129)</li>\n<li>Suppress VI_SUCCESS_MAX_CNT warning on read raw.\n(Issue #116)</li>\n<li>Implemented smarter query values based on looking how many bytes are expected.\n(Issue #118)</li>\n<li>Fix UnicodeDecodeError on wrong file for library load\n(Issue #136, thanks lupien)</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.6.3 (2015-02-08)</h3>\n<ul>\n<li>Added support to Rhode and Schwartz Passport driver.\n(Issue #115)</li>\n<li>Fixed access to the interface_type property.\n(Issue #114, thanks mordoror)</li>\n<li>Imported constants module in visa module.\n(Issue #72)</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.6.2 (2014-12-29)</h3>\n<ul>\n<li>Proper handling of VI_ERROR_RSRC_NFOUND.</li>\n<li>Added conditional dependency for unittest2 in Python2.6\n(Issue #107)</li>\n<li>Fixed Shell on Windows.\n(Issue #101)</li>\n<li>Moved Lantz Shell to PyVISA.</li>\n<li>Easier way to get debug information.</li>\n<li>Better debug info for backends.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.6.1 (2014-10-28)</h3>\n<ul>\n<li>Add ignore_warning methods to Resource and ResourceManager.</li>\n<li>Added more formats to binary values.\n(Issue #92)</li>\n<li>Fixed exception raising in legacy read_values.\n(Issue #91)</li>\n<li>Provide a backend hook to display debug info.</li>\n<li>Better debug info for binary libraries.</li>\n<li>Fixed exceptions formatting\n(thanks Matthew94)</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.6 (2014-09-28)</h3>\n<ul>\n<li>13 Resource Classes covering all resource types.</li>\n<li>Attributes classes provided introspection to VISA attributes.</li>\n<li>Many VISA attributes added to Resource Classes.</li>\n<li>Use of IntEnum for common constants.</li>\n<li>Better documentation.</li>\n<li>Implementation of discoverable backends.</li>\n<li>New functions to encode and decode of IEEE blocks.</li>\n<li>New functions to encode and decode of ASCII blocks.</li>\n<li>New API to transfer values from the instrument.</li>\n<li>Renamed ask/ask_delay/ask_for_values to ask/query_delay/query_values.\nOld names still available for backwards compatibility.</li>\n<li>Implemented Group Execute Trigger for GPIBInterface.\n(Issue #67)</li>\n<li>Make setuptools a requirement.\n(Issue #64 and 68)</li>\n<li>Simplified testing.</li>\n<li>Removed legacy subpackage.</li>\n<li>Removed string handling wrappers.</li>\n<li>Removed Instrument class in favour of Resource.</li>\n<li>Removed status and implemented thread-safe, per instrument, last_status.</li>\n<li>Refactored warning ignoring mechanisms to a thread-safe one.</li>\n<li>Added enum34 requirement for Python &lt; 3.4.</li>\n<li>Removed deprecated term_chars.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.5 (2014-06-24)</h3>\n<ul>\n<li>Python 3.2+ compatibility.\n(Issue #32)</li>\n<li>Change source encoding to utf-8.</li>\n<li>Reorganized package structure.\n(Issue #13)</li>\n<li>Improved installation.</li>\n<li>Moved tests inside the package.</li>\n<li>Added CI using Travis.</li>\n<li>Created new wrapper for the underlying library.</li>\n<li>Moved vpp43 code to legacy subpackage.</li>\n<li>Moved documentation to readthedocs.</li>\n<li>Make documentation mobile-friendly.\n(Issue #2)</li>\n<li>Removed latex documentation.</li>\n<li>ResourceManager is no longer a singleton.\n(Issue #8)</li>\n<li>VisaLibrary is no longer a singleton.\n(Issue #7)</li>\n<li>VISA functions are VisaLibrary methods.\n(Issue #11)</li>\n<li>Improved detection of VISA library path in all OS.</li>\n<li>Added diagnostics functions to help debugging.</li>\n<li>Added extensive logging to help debugging.\n(Issue #12)</li>\n<li>Improved error messages.</li>\n<li>Added encoding parameter to read and write.\n(Issue #38)</li>\n<li>Added termination parameter to read and write.\n(Issue #38)</li>\n<li>Added size to read_raw.\n(Issue #37)</li>\n<li>Removed delay parameter in favor of ask_delay\n(Issue #34)</li>\n<li>Added 64 bits VISA library methods.</li>\n<li>Cleaned up code.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>1.4 (2012-05-13)</h3>\n<ul>\n<li>add coverage</li>\n<li>add tox testing</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>1.3 (2008-03-26)</h3>\n<ul>\n<li>Changed licence to MIT.</li>\n<li>Made determination of resource class even more careful.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>1.2 (2007-09-19)</h3>\n<ul>\n<li>Changed some __getattr__ to getattr in order to have working exceptions again\n(e.g. timeouts) in vpp43</li>\n<li>Softened the test for \u201cINSTR\u201d even further.  Introduced the \u201cstb\u201d property for\nGPIB instruments.</li>\n<li>Changed \u201cis not an INSTR\u201d error to a warning.</li>\n<li>Added correct prefix for RPM in setup.cfg.</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>1.1 (2006-11-21)</h3>\n<ul>\n<li>Mentioned possible AttributeError with viParseRsrcEx.</li>\n<li>Made secure against missing viParseRsrcEx.</li>\n<li>Removed superfluous calls to parse_resource_extended.</li>\n<li>setup.py Script can now handle installation with or without setuptools.</li>\n<li>setup.py: Switched to new distutils version.</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>1.0 (2006-01-23)</h3>\n<ul>\n<li>New properties of SerialInstrument explained.</li>\n<li>Added many further properties to SerialInstrument.</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.9.7 (2005-09-21)</h3>\n<ul>\n<li>Renamed timeout parameter in open() to open_timeout.</li>\n<li>Renamed Timeout parameter in open() to open_timeout.</li>\n<li>Added section about SerialInstrument.</li>\n<li>Added class SerialInstrument. Made termination characters even more robust.</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>0.9.6 (2005-08-31)</h3>\n<ul>\n<li>Renamed TypeError to VisaTypeError.</li>\n<li>Added InvalidBinaryFormat. Renamed TypeError to VisaTypeError.</li>\n<li>Added a lot of docstrings. Fixed bug with ValueError exception raising.</li>\n<li>Eliminated string exceptions. A little bit of code clean-up.</li>\n<li>Added old distutils inclusion for RPM that cause trouble with my setuptools\ninstallation.</li>\n<li>Set default for term_chars to None and implemented it in write() method.</li>\n<li>Described new default for term_chars.</li>\n<li>Added instrument(). Fixed bugs in __repr()__.</li>\n<li>Improved documentation.</li>\n<li>Switched from distutils to setuptools.</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>0.9.5 (2005-08-27)</h3>\n<ul>\n<li>Changed package name to \u201cPyVISA\u201d.</li>\n<li>visa_attributes.py: 0xFFFFFFFF -&gt; 0xFFFFFFFFL.</li>\n<li>Switched from distutils to setuptools.</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>0.9.4 (2005-08-12)</h3>\n<ul>\n<li>Added filename selection for VISA DLL with Windows in vpp43.py.</li>\n<li>Added code to skip over header before binary data.</li>\n<li>Cleaned up whitespace.</li>\n<li>Added support for endianess in case of binary transfers.</li>\n<li>Improved binary reading; now it also accepts things like \u201c#267\u2026\u201d.</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>0.9.3 (2005-07-21)</h3>\n<ul>\n<li>Changed default termination characters to \u201c\u201d for GPIB instruments. LF and CR\nare completely stripped from the end of read string, no matter how the\ntermination characters are set.</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>0.9.2 (2005-07-19)</h3>\n<ul>\n<li>Added remaining keyword arguments for Instrument constructor.  Added CR and LF.\nAdded working support for reading binary data.</li>\n<li>Added ask() and ask_for_values().</li>\n<li>Partially implemented binary reading.</li>\n<li>Split the old term_chars in term_chars, delay, and send_end.</li>\n<li>Implemented warning system for invalid keyword arguments.  Added test for valid\nfloat values in read_floats(). Added full term_char string in __get_term_char().</li>\n<li>Standard timeout increased from 2 to 5 seconds.</li>\n<li>read_floats() returns <em>always</em> a list.</li>\n<li>Moved trigger() method to Instrument class.</li>\n<li>Fixed bug in regular expression for termination characters.</li>\n<li>Fixed bug with ignored term_char attribute for GPIB instruments.</li>\n<li>Increased chunk_size\u2019s default value and added it to the keyword arguments of the constructor.</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3>0.9.1 (2005-07-03)</h3>\n<ul>\n<li>Added properties resource_name and resource_class to ResourceTemplate.  Used\nboth to simplify code.</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3>0.9 (2005-06-29)</h3>\n<ul>\n<li>First usable release. See ChangeLog for more information.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2714810, "releases": {"1.9.6": [{"comment_text": "", "digests": {"md5": "156484f3efe0de57fbc3cf32d43d68ee", "sha256": "e925fddd93427c3d3939bbe42022730504d49b97119fda61f627e4a8fab2e70e"}, "downloads": -1, "filename": "hedgehog-pyvisa-1.9.6.tar.gz", "has_sig": false, "md5_digest": "156484f3efe0de57fbc3cf32d43d68ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 426821, "upload_time": "2017-03-18T13:09:04", "upload_time_iso_8601": "2017-03-18T13:09:04.523001Z", "url": "https://files.pythonhosted.org/packages/dd/22/e93eb2b7b9391ea353d5359bdb01969f48214a1bb640ad973a2a8f93dfe5/hedgehog-pyvisa-1.9.6.tar.gz", "yanked": false}], "1.9.7": [{"comment_text": "", "digests": {"md5": "c4d9dbda35ebe7d2b4c972670d7a0137", "sha256": "c157e748c242d875ad995b6162247b2d0c4e57a6cea724283d1ed13cef728a90"}, "downloads": -1, "filename": "hedgehog-pyvisa-1.9.7.tar.gz", "has_sig": false, "md5_digest": "c4d9dbda35ebe7d2b4c972670d7a0137", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 426812, "upload_time": "2017-03-18T15:10:59", "upload_time_iso_8601": "2017-03-18T15:10:59.568434Z", "url": "https://files.pythonhosted.org/packages/90/00/031f4b96e1230d99f4a1d34375fcbeed85c73f6e210e7904acf4209b790c/hedgehog-pyvisa-1.9.7.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "4596e0ee5b02456a767a4986f9a79e35", "sha256": "20fbb9d2a26ebceb8fe1b3fcf58f8bd8a71538834253263060bc77227b35ecb9"}, "downloads": -1, "filename": "hedgehog-pyvisa-2.0.0.tar.gz", "has_sig": false, "md5_digest": "4596e0ee5b02456a767a4986f9a79e35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 426853, "upload_time": "2017-03-18T17:55:59", "upload_time_iso_8601": "2017-03-18T17:55:59.628794Z", "url": "https://files.pythonhosted.org/packages/0e/a0/8b0590238605c9c4a6b838d575149996856ccc579590eb982dbec3648e59/hedgehog-pyvisa-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4596e0ee5b02456a767a4986f9a79e35", "sha256": "20fbb9d2a26ebceb8fe1b3fcf58f8bd8a71538834253263060bc77227b35ecb9"}, "downloads": -1, "filename": "hedgehog-pyvisa-2.0.0.tar.gz", "has_sig": false, "md5_digest": "4596e0ee5b02456a767a4986f9a79e35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 426853, "upload_time": "2017-03-18T17:55:59", "upload_time_iso_8601": "2017-03-18T17:55:59.628794Z", "url": "https://files.pythonhosted.org/packages/0e/a0/8b0590238605c9c4a6b838d575149996856ccc579590eb982dbec3648e59/hedgehog-pyvisa-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:52 2020"}