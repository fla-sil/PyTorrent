{"info": {"author": "Oleksandr Lysenko", "author_email": "sashkolysenko@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# simobility\n\n**simobility** is a light-weight mobility simulation framework. Best for quick prototyping\n\n**simobility** is a human-friendly Python framework that helps scientists and engineers to prototype and compare fleet optimization algorithms (autonomous and human-driven vehicles). It provides a set of building blocks that can be used to design different simulation scenarious, run simulations and calculate metrics. It is easy to plug in custom demand models, customer behavior models, fleet types, spatio-temporal models (for example, use [OSRM](http://project-osrm.org/) for routing vehicles and machine learning models trained on historical data to predict [ETA](https://en.wikipedia.org/wiki/Estimated_time_of_arrival)).\n\n### Motivation\n\nCreate an environment for experiments with machine learning algorithms for decision-making problems in mobility services and compare them to classical solutions.\n\n<img src=\"./examples/moving_vehicles.gif\" width=\"35%\" align=\"right\">\n\nSome examples:\n* [Deep Reinforcement Learning with Applications in Transportation](https://outreach.didichuxing.com/tutorial/AAAI2019/)\n\n* [T. Oda and C. Joe-Wong, \"Movi: A model-free approach to dynamic fleet management\". 2018](https://arxiv.org/pdf/1804.04758.pdf)\n\n* [A. Alabbasi, A. Ghosh, and V. Aggarwal, \"DeepPool: Distributed model-free algorithm for ride-sharing using deep reinforcement learning\", IEEETrans. Intelligent Transportation Systems (to appear). 2019](https://arxiv.org/pdf/1903.03882)\n\n* [C Wang,Y Hou, M Barth, \"Data-Driven Multi-step Demand Prediction for Ride-hailing Services Using Convolutional Neural Network\". 2019](https://arxiv.org/pdf/1911.03441.pdf)\n\n* [J. Ke, F. Xiao, H. Yang, and J. Ye. Optimizing online matching for ride-sourcing services with multi-agent deep reinforcement learning. 2019](https://arxiv.org/abs/1902.06228)\n\n### Installation\n\n`pip install simobility`\n\n### Contributions and thanks\n\nThanks to all who contributed to the concept/code:\n\n* [Steffen H\u00e4u\u00dfler](https://www.linkedin.com/in/steffenhaeussler/)\n* [Stephen Privitera](https://www.linkedin.com/in/stephen-privitera/)\n* [Sultan Imanhodjaev](https://www.linkedin.com/in/imanhodjaev/)\n* [Y\u00e1bir Benchakhtir](https://www.linkedin.com/in/yabirgb/)\n\n### Simulation example\n\n[Simple simulation example](./examples/simple_simulation.py)\n\n[Log example](./examples/simulation_output_example.csv)\n\n\n### Metrics example\n\n```json\n{\n    \"avg_paid_utilization\": 63.98,\n    \"avg_utilization\": 96.87,\n    \"avg_waiting_time\": 292.92,\n    \"created\": 3998,\n    \"dropoffs\": 589,\n    \"empty_distance\": 640.37,\n    \"empty_distance_pcnt\": 33.67,\n    \"fleet_paid_utilization\": 63.98,\n    \"fleet_utilization\": 96.87,\n    \"num_vehicles\": 50,\n    \"pickup_rate\": 15.48,\n    \"pickups\": 619,\n    \"total_distance\": 1902.04,\n}\n```\n\n### Simulation logs\n\nRead logs with pandas\n\n```python\nimport pandas as pd\n\ndata = pd.read_csv(\n    \"simulation_output.csv\",\n    sep=\";\",\n    converters={\"details\": lambda v: eval(v)},\n)\n\ndetails = data.details.apply(pd.Series)\n```\n\n### Run OSRM\n\n```bash\nwget http://download.geofabrik.de/north-america/us/new-york-latest.osm.pbf\ndocker run -t -v \"${PWD}:/data\" osrm/osrm-backend osrm-extract -p /opt/car.lua /data/new-york-latest.osm.pbf\ndocker run -t -v \"${PWD}:/data\" osrm/osrm-backend osrm-partition /data/new-york-latest.osrm\ndocker run -t -v \"${PWD}:/data\" osrm/osrm-backend osrm-customize /data/new-york-latest.osrm\ndocker run -d -t -i -p 5010:5000 -v \"${PWD}:/data\" osrm/osrm-backend osrm-routed --algorithm mld /data/new-york-latest.osrm\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/sash-ko/simobility/archive/v0.3.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sash-ko/simobility", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "simobility", "package_url": "https://pypi.org/project/simobility/", "platform": "", "project_url": "https://pypi.org/project/simobility/", "project_urls": {"Download": "https://github.com/sash-ko/simobility/archive/v0.3.0.tar.gz", "Homepage": "https://github.com/sash-ko/simobility"}, "release_url": "https://pypi.org/project/simobility/0.3.0/", "requires_dist": null, "requires_python": ">=3.7.*", "summary": "Lightweight mobility simulation for quick algorithm prototyping", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>simobility</h1>\n<p><strong>simobility</strong> is a light-weight mobility simulation framework. Best for quick prototyping</p>\n<p><strong>simobility</strong> is a human-friendly Python framework that helps scientists and engineers to prototype and compare fleet optimization algorithms (autonomous and human-driven vehicles). It provides a set of building blocks that can be used to design different simulation scenarious, run simulations and calculate metrics. It is easy to plug in custom demand models, customer behavior models, fleet types, spatio-temporal models (for example, use <a href=\"http://project-osrm.org/\" rel=\"nofollow\">OSRM</a> for routing vehicles and machine learning models trained on historical data to predict <a href=\"https://en.wikipedia.org/wiki/Estimated_time_of_arrival\" rel=\"nofollow\">ETA</a>).</p>\n<h3>Motivation</h3>\n<p>Create an environment for experiments with machine learning algorithms for decision-making problems in mobility services and compare them to classical solutions.</p>\n<img align=\"right\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/908cb4903cdcf5a464b8109d6025ff7ac2ffd8cb/2e2f6578616d706c65732f6d6f76696e675f76656869636c65732e676966\" width=\"35%\">\n<p>Some examples:</p>\n<ul>\n<li>\n<p><a href=\"https://outreach.didichuxing.com/tutorial/AAAI2019/\" rel=\"nofollow\">Deep Reinforcement Learning with Applications in Transportation</a></p>\n</li>\n<li>\n<p><a href=\"https://arxiv.org/pdf/1804.04758.pdf\" rel=\"nofollow\">T. Oda and C. Joe-Wong, \"Movi: A model-free approach to dynamic fleet management\". 2018</a></p>\n</li>\n<li>\n<p><a href=\"https://arxiv.org/pdf/1903.03882\" rel=\"nofollow\">A. Alabbasi, A. Ghosh, and V. Aggarwal, \"DeepPool: Distributed model-free algorithm for ride-sharing using deep reinforcement learning\", IEEETrans. Intelligent Transportation Systems (to appear). 2019</a></p>\n</li>\n<li>\n<p><a href=\"https://arxiv.org/pdf/1911.03441.pdf\" rel=\"nofollow\">C Wang,Y Hou, M Barth, \"Data-Driven Multi-step Demand Prediction for Ride-hailing Services Using Convolutional Neural Network\". 2019</a></p>\n</li>\n<li>\n<p><a href=\"https://arxiv.org/abs/1902.06228\" rel=\"nofollow\">J. Ke, F. Xiao, H. Yang, and J. Ye. Optimizing online matching for ride-sourcing services with multi-agent deep reinforcement learning. 2019</a></p>\n</li>\n</ul>\n<h3>Installation</h3>\n<p><code>pip install simobility</code></p>\n<h3>Contributions and thanks</h3>\n<p>Thanks to all who contributed to the concept/code:</p>\n<ul>\n<li><a href=\"https://www.linkedin.com/in/steffenhaeussler/\" rel=\"nofollow\">Steffen H\u00e4u\u00dfler</a></li>\n<li><a href=\"https://www.linkedin.com/in/stephen-privitera/\" rel=\"nofollow\">Stephen Privitera</a></li>\n<li><a href=\"https://www.linkedin.com/in/imanhodjaev/\" rel=\"nofollow\">Sultan Imanhodjaev</a></li>\n<li><a href=\"https://www.linkedin.com/in/yabirgb/\" rel=\"nofollow\">Y\u00e1bir Benchakhtir</a></li>\n</ul>\n<h3>Simulation example</h3>\n<p><a href=\"./examples/simple_simulation.py\" rel=\"nofollow\">Simple simulation example</a></p>\n<p><a href=\"./examples/simulation_output_example.csv\" rel=\"nofollow\">Log example</a></p>\n<h3>Metrics example</h3>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"avg_paid_utilization\"</span><span class=\"p\">:</span> <span class=\"mf\">63.98</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"avg_utilization\"</span><span class=\"p\">:</span> <span class=\"mf\">96.87</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"avg_waiting_time\"</span><span class=\"p\">:</span> <span class=\"mf\">292.92</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"created\"</span><span class=\"p\">:</span> <span class=\"mi\">3998</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"dropoffs\"</span><span class=\"p\">:</span> <span class=\"mi\">589</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"empty_distance\"</span><span class=\"p\">:</span> <span class=\"mf\">640.37</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"empty_distance_pcnt\"</span><span class=\"p\">:</span> <span class=\"mf\">33.67</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"fleet_paid_utilization\"</span><span class=\"p\">:</span> <span class=\"mf\">63.98</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"fleet_utilization\"</span><span class=\"p\">:</span> <span class=\"mf\">96.87</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"num_vehicles\"</span><span class=\"p\">:</span> <span class=\"mi\">50</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"pickup_rate\"</span><span class=\"p\">:</span> <span class=\"mf\">15.48</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"pickups\"</span><span class=\"p\">:</span> <span class=\"mi\">619</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"total_distance\"</span><span class=\"p\">:</span> <span class=\"mf\">1902.04</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Simulation logs</h3>\n<p>Read logs with pandas</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"simulation_output.csv\"</span><span class=\"p\">,</span>\n    <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s2\">\";\"</span><span class=\"p\">,</span>\n    <span class=\"n\">converters</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"details\"</span><span class=\"p\">:</span> <span class=\"k\">lambda</span> <span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"nb\">eval</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)},</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">details</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">)</span>\n</pre>\n<h3>Run OSRM</h3>\n<pre>wget http://download.geofabrik.de/north-america/us/new-york-latest.osm.pbf\ndocker run -t -v <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">PWD</span><span class=\"si\">}</span><span class=\"s2\">:/data\"</span> osrm/osrm-backend osrm-extract -p /opt/car.lua /data/new-york-latest.osm.pbf\ndocker run -t -v <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">PWD</span><span class=\"si\">}</span><span class=\"s2\">:/data\"</span> osrm/osrm-backend osrm-partition /data/new-york-latest.osrm\ndocker run -t -v <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">PWD</span><span class=\"si\">}</span><span class=\"s2\">:/data\"</span> osrm/osrm-backend osrm-customize /data/new-york-latest.osrm\ndocker run -d -t -i -p <span class=\"m\">5010</span>:5000 -v <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">PWD</span><span class=\"si\">}</span><span class=\"s2\">:/data\"</span> osrm/osrm-backend osrm-routed --algorithm mld /data/new-york-latest.osrm\n</pre>\n\n          </div>"}, "last_serial": 6728124, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c8c689e1a47cbceef7b45cc2d8c80cc4", "sha256": "e7d1c862b5df8870b2b5f01c9fd36c077e2c8ede08bf913765fab382da3843af"}, "downloads": -1, "filename": "simobility-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c8c689e1a47cbceef7b45cc2d8c80cc4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.*", "size": 21309, "upload_time": "2020-02-23T14:54:13", "upload_time_iso_8601": "2020-02-23T14:54:13.126322Z", "url": "https://files.pythonhosted.org/packages/7b/a8/c2953a8a4f264bb35e76579151e219e771e740447359055ec499968a722b/simobility-0.1.0.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "c72cd251767a592b6873e5c6bc22bd94", "sha256": "115bfe0cb5c82fa6be8bf2169165cab039609764a057f7fba4f70055ba79c28f"}, "downloads": -1, "filename": "simobility-0.2.3.tar.gz", "has_sig": false, "md5_digest": "c72cd251767a592b6873e5c6bc22bd94", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.*", "size": 21361, "upload_time": "2020-02-24T09:09:57", "upload_time_iso_8601": "2020-02-24T09:09:57.493779Z", "url": "https://files.pythonhosted.org/packages/b4/31/28e68b33b8cf5c9979d96e832c4f167d66c948e8132152235ce04b643926/simobility-0.2.3.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "4fd909fc33101e3fac79e5e3ec63d4cf", "sha256": "8758755a14d3172b8065fb32b78bef279c2a62b5fc51552bd152470ab8fa2043"}, "downloads": -1, "filename": "simobility-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4fd909fc33101e3fac79e5e3ec63d4cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.*", "size": 22559, "upload_time": "2020-03-01T11:53:36", "upload_time_iso_8601": "2020-03-01T11:53:36.635218Z", "url": "https://files.pythonhosted.org/packages/3d/0b/3773e134cb075aca724a2612ca2fe68edf1827b1814e1c1884672a63c16b/simobility-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4fd909fc33101e3fac79e5e3ec63d4cf", "sha256": "8758755a14d3172b8065fb32b78bef279c2a62b5fc51552bd152470ab8fa2043"}, "downloads": -1, "filename": "simobility-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4fd909fc33101e3fac79e5e3ec63d4cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.*", "size": 22559, "upload_time": "2020-03-01T11:53:36", "upload_time_iso_8601": "2020-03-01T11:53:36.635218Z", "url": "https://files.pythonhosted.org/packages/3d/0b/3773e134cb075aca724a2612ca2fe68edf1827b1814e1c1884672a63c16b/simobility-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:09 2020"}