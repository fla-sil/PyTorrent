{"info": {"author": "Jeremy Ephron", "author_email": "jeremyephron@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "# styled-str\nStyledStr is a module for creating strings styled with ANSI escape sequences.\nThe motivation for writing this package was that many existing string-styling \nmodules do not implement logical string behavior, like properly formatting the \nstring, indexing, containment, all of which are useless if they don't ignore\nthe styling.\n\nStyledStr ignores styling and acts on just its content for the following \noperations:\n\nFor an example StyledStr `s = StyledStr('Hello!', fg='red', style='italic')`\n\n- length, e.g. `len(s) => 6`\n- formatting, e.g. `f'{s:.3}' => 'Hel'`\n- indexing, e.g. `s[1] => 'e'`\n- iteration, e.g. `for c in s: => H, e, l, l, o, !`\n- reversed, e.g. `for c in reversed(s): => !, o, l, l, e, H`\n- containment, e.g. only characters of \"Hello!\" are True for `c in s`\n\nWe would like to have a strings with the same content viewed as distinct though,\nand so StyledStr includes styling for the following operations:\n\nFor example StyledStrs `a = StyledStr('Hello!', fg='red'); b = StyledStr('Hello!', bg='blue')`\n\n- equality, e.g. `a == b => False`\n- comparison, e.g. `a < b => True`\n- hashing, e.g. `hash(a)` not necessarily `hash(b)`\n\n## Installation\n\nInstall using pip (Python3):\n\n```bash\npip3 install styled-str\n```\n\n## Usage\n\nImport the module and create a string with your desired styles:\n\n```python\nfrom styledstr import Styled\n\ns = Styled('Hello World!', fg='cyan', bg='white', style=['bold', 'underlined'])\n\n# Print it out\nprint(s)\n\n# Use it in a larger string\nprint(\"He said, '\" + str(s) + \"'\")\n\n# Format it worry-free!\nprint(f'Title: {s:>20}')\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jeremyephron/styled-str", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "styled-str", "package_url": "https://pypi.org/project/styled-str/", "platform": "", "project_url": "https://pypi.org/project/styled-str/", "project_urls": {"Homepage": "https://github.com/jeremyephron/styled-str"}, "release_url": "https://pypi.org/project/styled-str/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Colored text output in Python using ANSI escape sequences.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>styled-str</h1>\n<p>StyledStr is a module for creating strings styled with ANSI escape sequences.\nThe motivation for writing this package was that many existing string-styling\nmodules do not implement logical string behavior, like properly formatting the\nstring, indexing, containment, all of which are useless if they don't ignore\nthe styling.</p>\n<p>StyledStr ignores styling and acts on just its content for the following\noperations:</p>\n<p>For an example StyledStr <code>s = StyledStr('Hello!', fg='red', style='italic')</code></p>\n<ul>\n<li>length, e.g. <code>len(s) =&gt; 6</code></li>\n<li>formatting, e.g. <code>f'{s:.3}' =&gt; 'Hel'</code></li>\n<li>indexing, e.g. <code>s[1] =&gt; 'e'</code></li>\n<li>iteration, e.g. <code>for c in s: =&gt; H, e, l, l, o, !</code></li>\n<li>reversed, e.g. <code>for c in reversed(s): =&gt; !, o, l, l, e, H</code></li>\n<li>containment, e.g. only characters of \"Hello!\" are True for <code>c in s</code></li>\n</ul>\n<p>We would like to have a strings with the same content viewed as distinct though,\nand so StyledStr includes styling for the following operations:</p>\n<p>For example StyledStrs <code>a = StyledStr('Hello!', fg='red'); b = StyledStr('Hello!', bg='blue')</code></p>\n<ul>\n<li>equality, e.g. <code>a == b =&gt; False</code></li>\n<li>comparison, e.g. <code>a &lt; b =&gt; True</code></li>\n<li>hashing, e.g. <code>hash(a)</code> not necessarily <code>hash(b)</code></li>\n</ul>\n<h2>Installation</h2>\n<p>Install using pip (Python3):</p>\n<pre>pip3 install styled-str\n</pre>\n<h2>Usage</h2>\n<p>Import the module and create a string with your desired styles:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">styledstr</span> <span class=\"kn\">import</span> <span class=\"n\">Styled</span>\n\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">Styled</span><span class=\"p\">(</span><span class=\"s1\">'Hello World!'</span><span class=\"p\">,</span> <span class=\"n\">fg</span><span class=\"o\">=</span><span class=\"s1\">'cyan'</span><span class=\"p\">,</span> <span class=\"n\">bg</span><span class=\"o\">=</span><span class=\"s1\">'white'</span><span class=\"p\">,</span> <span class=\"n\">style</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'bold'</span><span class=\"p\">,</span> <span class=\"s1\">'underlined'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Print it out</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Use it in a larger string</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"He said, '\"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">\"'\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Format it worry-free!</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Title: </span><span class=\"si\">{</span><span class=\"n\">s</span><span class=\"si\">:</span><span class=\"s1\">&gt;20</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6349531, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d8b9ceed10fb5f19574c74f659384e1f", "sha256": "c553a3d033a5de8a4aae45e8ea886fbe70d8cf19e8f9e2436009d8a3633d3289"}, "downloads": -1, "filename": "styled_str-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d8b9ceed10fb5f19574c74f659384e1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2774, "upload_time": "2019-12-20T15:06:25", "upload_time_iso_8601": "2019-12-20T15:06:25.270226Z", "url": "https://files.pythonhosted.org/packages/78/d7/5a959d94f4d0c343ec29a77ac287049e0106df622c1116dedbad184c2b3e/styled_str-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a497eaa2e838807c6f9addafc18a5ef", "sha256": "7e053e254a65cc24e741bd36867386e6810e77568aaf6f1fcd6f36ee02e0dc35"}, "downloads": -1, "filename": "styled-str-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2a497eaa2e838807c6f9addafc18a5ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1894, "upload_time": "2019-12-20T15:06:27", "upload_time_iso_8601": "2019-12-20T15:06:27.192307Z", "url": "https://files.pythonhosted.org/packages/07/86/425054fb655c4a6197851df74e2920056d0424402d218f9d50047ca9dce7/styled-str-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "121694057b1919b8b8dde0a7d67e0b34", "sha256": "d620430fabf1605589692409e34ba071203d73f1d75e1639d8fffbc34a343c1a"}, "downloads": -1, "filename": "styled_str-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "121694057b1919b8b8dde0a7d67e0b34", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2767, "upload_time": "2019-12-23T05:43:18", "upload_time_iso_8601": "2019-12-23T05:43:18.238631Z", "url": "https://files.pythonhosted.org/packages/93/13/cbeac248ca2c556d81a406bbfb699f48f1046da22006e1cdc6b9551f3a05/styled_str-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50cc722b8bb3247888947882d631cbff", "sha256": "6dbb098c13090ddece7aaadfae4b5048427558e75eb7b85fc1752ea9c06b77d9"}, "downloads": -1, "filename": "styled-str-0.0.2.tar.gz", "has_sig": false, "md5_digest": "50cc722b8bb3247888947882d631cbff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1891, "upload_time": "2019-12-23T05:43:19", "upload_time_iso_8601": "2019-12-23T05:43:19.919330Z", "url": "https://files.pythonhosted.org/packages/c3/64/3a3bb6d97b7bf6d7e9635876b0f8aa81e615f9861933f07288279c53a6ec/styled-str-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "121694057b1919b8b8dde0a7d67e0b34", "sha256": "d620430fabf1605589692409e34ba071203d73f1d75e1639d8fffbc34a343c1a"}, "downloads": -1, "filename": "styled_str-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "121694057b1919b8b8dde0a7d67e0b34", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2767, "upload_time": "2019-12-23T05:43:18", "upload_time_iso_8601": "2019-12-23T05:43:18.238631Z", "url": "https://files.pythonhosted.org/packages/93/13/cbeac248ca2c556d81a406bbfb699f48f1046da22006e1cdc6b9551f3a05/styled_str-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50cc722b8bb3247888947882d631cbff", "sha256": "6dbb098c13090ddece7aaadfae4b5048427558e75eb7b85fc1752ea9c06b77d9"}, "downloads": -1, "filename": "styled-str-0.0.2.tar.gz", "has_sig": false, "md5_digest": "50cc722b8bb3247888947882d631cbff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1891, "upload_time": "2019-12-23T05:43:19", "upload_time_iso_8601": "2019-12-23T05:43:19.919330Z", "url": "https://files.pythonhosted.org/packages/c3/64/3a3bb6d97b7bf6d7e9635876b0f8aa81e615f9861933f07288279c53a6ec/styled-str-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:51 2020"}