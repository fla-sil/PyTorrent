{"info": {"author": "Chris Ward", "author_email": "cward@redhat.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 2 :: Only", "Topic :: Database", "Topic :: Office/Business", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Visualization", "Topic :: Utilities"], "description": ".. image:: metrique/server/static/img/metrique_logo.png\n\nMetrique\n========\n\nPython/MongoDB Information Platform and Data Warehouse\n\n*Metrique help bring data into an intuitive, indexable \ndata object collection that supports quick snapshotting, \nadvanced ad-hoc querying, including (mongodb) aggregations\nand mapreduce, along with python, ipython, pandas,\nnumpy, matplotlib, and so on, is fully integrated \nwith the scientific python computing stack. I hope\nso anyway. :)*\n\n**Author:** \"Chris Ward\" <cward@redhat.com>\n\n**Sources:** https://github.com/drpoovilleorg/metrique\n\n\nInstallation\n------------\n\nYou must first install MongoDB. Then, to continue, \nmake sure it's started.\n\n\n**Metrique**\n(suggested) Install virtualenv and create a new virtual \nenvironment for metrique. Activate it. \n\nInstall metrique::\n\n    python-pip install metrique -r requirements.txt\n\n.. note::\n     Make sure you have gcc and python-devel libraries installed\n\n.. note::\n     If you see 'Connection reset by peer' error, try option: --use-mirrors\n\n.. note::\n     If you see any other error, Google.\n\nYou should now be ready to go. \n\nRun metrique-server-config.py if you changed any defaults.\n\nTo start metrique, run::\n    \n    $[/metrique/server/bin] metrique-server start [2|1|0] [1|0]\n\nWhere argv are debug on+/on/off and async on/off respectively.\n\nIt's suggested to run :mod:metrique-server-setup after install\nas well, especially if you changed any default values of your\nmongo or metrique servers, they're hosted on a different\nip than `localhost`. \n\n\n**Client**\nIf the metrique server is running on anything other than \n`http://127.0.0.1`, run `metrique-client-setup`.\n\nThen,  launch a python shell. We suggest ipython notebook. \n\nAs of this time, :mod:cubes can be found in global\nmetrique namespace or local to the running user. \n\nDefault: `~/.metrique/cubes`\n\nTo quickly make those cubes available in sys.path::\n\n    IN  [] from metrique.client.cubes import set_cube_path\n    IN  [] set_cube_path()  # defaults to '~/.metrique/cubes'\n\nThen, to load a cube for extraction, query or administration,\nimport::\n\n    IN  [] from git_repo.gitrepo import Commit\n    IN  [] g = Commit(config_file=None, uri=None)\n\nPing the server to ensure your connected. If all \nis well, metriqe server should pong your ping!::\n\n    IN  [] g.ping()\n    OUT [] pong!\n\nTry running an example ::mod:git_commit etl job, for example::\n\n    IN  [4] g.extract(\"git_commit\")\n\nThen, analyse away::\n\n    IN  [5] q = c.query.fetch('git_commit', 'author, committer_ts') \n    IN  [6] q.groupby(['author']).size().plot(kind='barh')\n    OUT [6] <matplotlib.axes.AxesSubplot at 0x6f77ad0>", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/drpoovilleorg/metrique/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/drpoovilleorg/metrique", "keywords": "data,mining,information,mongo,etl,analysis,search,query", "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "metrique-server", "package_url": "https://pypi.org/project/metrique-server/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/metrique-server/", "project_urls": {"Download": "https://github.com/drpoovilleorg/metrique/archive/master.zip", "Homepage": "https://github.com/drpoovilleorg/metrique"}, "release_url": "https://pypi.org/project/metrique-server/0.1.3-alpha27/", "requires_dist": null, "requires_python": null, "summary": "Python/MongoDB Information Platform - Server", "version": "0.1.3-alpha27", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"metrique/server/static/img/metrique_logo.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a0f2eba932f6cc4b843258976b0ba11b6542a21/6d657472697175652f7365727665722f7374617469632f696d672f6d657472697175655f6c6f676f2e706e67\">\n<div id=\"metrique\">\n<h2>Metrique</h2>\n<p>Python/MongoDB Information Platform and Data Warehouse</p>\n<p><em>Metrique help bring data into an intuitive, indexable\ndata object collection that supports quick snapshotting,\nadvanced ad-hoc querying, including (mongodb) aggregations\nand mapreduce, along with python, ipython, pandas,\nnumpy, matplotlib, and so on, is fully integrated\nwith the scientific python computing stack. I hope\nso anyway. :)</em></p>\n<p><strong>Author:</strong> \u201cChris Ward\u201d &lt;<a href=\"mailto:cward%40redhat.com\">cward<span>@</span>redhat<span>.</span>com</a>&gt;</p>\n<p><strong>Sources:</strong> <a href=\"https://github.com/drpoovilleorg/metrique\" rel=\"nofollow\">https://github.com/drpoovilleorg/metrique</a></p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>You must first install MongoDB. Then, to continue,\nmake sure it\u2019s started.</p>\n<p><strong>Metrique</strong>\n(suggested) Install virtualenv and create a new virtual\nenvironment for metrique. Activate it.</p>\n<p>Install metrique:</p>\n<pre>python-pip install metrique -r requirements.txt\n</pre>\n<div>\n<p>Note</p>\n<p>Make sure you have gcc and python-devel libraries installed</p>\n</div>\n<div>\n<p>Note</p>\n<p>If you see \u2018Connection reset by peer\u2019 error, try option: \u2013use-mirrors</p>\n</div>\n<div>\n<p>Note</p>\n<p>If you see any other error, Google.</p>\n</div>\n<p>You should now be ready to go.</p>\n<p>Run metrique-server-config.py if you changed any defaults.</p>\n<p>To start metrique, run:</p>\n<pre>$[/metrique/server/bin] metrique-server start [2|1|0] [1|0]\n</pre>\n<p>Where argv are debug on+/on/off and async on/off respectively.</p>\n<p>It\u2019s suggested to run :mod:metrique-server-setup after install\nas well, especially if you changed any default values of your\nmongo or metrique servers, they\u2019re hosted on a different\nip than <cite>localhost</cite>.</p>\n<p><strong>Client</strong>\nIf the metrique server is running on anything other than\n<cite>http://127.0.0.1</cite>, run <cite>metrique-client-setup</cite>.</p>\n<p>Then,  launch a python shell. We suggest ipython notebook.</p>\n<p>As of this time, :mod:cubes can be found in global\nmetrique namespace or local to the running user.</p>\n<p>Default: <cite>~/.metrique/cubes</cite></p>\n<p>To quickly make those cubes available in sys.path:</p>\n<pre>IN  [] from metrique.client.cubes import set_cube_path\nIN  [] set_cube_path()  # defaults to '~/.metrique/cubes'\n</pre>\n<p>Then, to load a cube for extraction, query or administration,\nimport:</p>\n<pre>IN  [] from git_repo.gitrepo import Commit\nIN  [] g = Commit(config_file=None, uri=None)\n</pre>\n<p>Ping the server to ensure your connected. If all\nis well, metriqe server should pong your ping!:</p>\n<pre>IN  [] g.ping()\nOUT [] pong!\n</pre>\n<p>Try running an example ::mod:git_commit etl job, for example:</p>\n<pre>IN  [4] g.extract(\"git_commit\")\n</pre>\n<p>Then, analyse away:</p>\n<pre>IN  [5] q = c.query.fetch('git_commit', 'author, committer_ts')\nIN  [6] q.groupby(['author']).size().plot(kind='barh')\nOUT [6] &lt;matplotlib.axes.AxesSubplot at 0x6f77ad0&gt;\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 850300, "releases": {"0.1.3-alpha": [{"comment_text": "", "digests": {"md5": "af001c2811fa897bffa7dc3d85ab4831", "sha256": "e29dd03f449d3ce7a146fe6e72446dab26776de7bb63e52a8b4ed45ae23c4537"}, "downloads": -1, "filename": "metrique-server-0.1.3-alpha.tar.gz", "has_sig": false, "md5_digest": "af001c2811fa897bffa7dc3d85ab4831", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15189, "upload_time": "2013-08-26T13:24:04", "upload_time_iso_8601": "2013-08-26T13:24:04.851913Z", "url": "https://files.pythonhosted.org/packages/07/fd/d80e6c39930d7e9a4d0f2351f2e19c0fa5229545077cf99a5a37c6fa5fcd/metrique-server-0.1.3-alpha.tar.gz", "yanked": false}], "0.1.3-alpha14": [{"comment_text": "", "digests": {"md5": "7dfb563f0ba7dc8203eb41b6ba52fa56", "sha256": "a0cce8a143bd6465cdd880db4d4c1be3276fc576f1c853ea8b1f637078eb6d67"}, "downloads": -1, "filename": "metrique-server-0.1.3-alpha14.tar.gz", "has_sig": false, "md5_digest": "7dfb563f0ba7dc8203eb41b6ba52fa56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15726, "upload_time": "2013-08-26T19:22:28", "upload_time_iso_8601": "2013-08-26T19:22:28.633870Z", "url": "https://files.pythonhosted.org/packages/92/d8/27b3e46ace23fc16ed7eef59a0c1f84042c9ef7e1555ab4fb36774da893e/metrique-server-0.1.3-alpha14.tar.gz", "yanked": false}], "0.1.3-alpha27": [{"comment_text": "", "digests": {"md5": "0e0d7ce5f3ee0a216a0f12333db92235", "sha256": "df0218e20f50328d7bcc76cafae747300f6074b6372f39d1d74923796d0af92c"}, "downloads": -1, "filename": "metrique-server-0.1.3-alpha27.tar.gz", "has_sig": false, "md5_digest": "0e0d7ce5f3ee0a216a0f12333db92235", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21049, "upload_time": "2013-08-27T13:22:38", "upload_time_iso_8601": "2013-08-27T13:22:38.138501Z", "url": "https://files.pythonhosted.org/packages/d5/12/cfb793c6edbb0e947b413c3c44dd175b90712bcb913af116737f11c26c57/metrique-server-0.1.3-alpha27.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0e0d7ce5f3ee0a216a0f12333db92235", "sha256": "df0218e20f50328d7bcc76cafae747300f6074b6372f39d1d74923796d0af92c"}, "downloads": -1, "filename": "metrique-server-0.1.3-alpha27.tar.gz", "has_sig": false, "md5_digest": "0e0d7ce5f3ee0a216a0f12333db92235", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21049, "upload_time": "2013-08-27T13:22:38", "upload_time_iso_8601": "2013-08-27T13:22:38.138501Z", "url": "https://files.pythonhosted.org/packages/d5/12/cfb793c6edbb0e947b413c3c44dd175b90712bcb913af116737f11c26c57/metrique-server-0.1.3-alpha27.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:38 2020"}