{"info": {"author": "Martin Aspeli, Laurence Rowe", "author_email": "optilude@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Plone", "Framework :: Plone :: 4.3", "Framework :: Plone :: 5.0", "Framework :: Plone :: 5.1", "Framework :: Plone :: 5.2", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "======================\nIntroduction to Blocks\n======================\n\n.. image:: https://secure.travis-ci.org/plone/plone.app.blocks.png?branch=master\n    :alt: Travis CI badge\n    :target: http://travis-ci.org/plone/plone.app.blocks\n\n.. image:: https://coveralls.io/repos/plone/plone.app.blocks/badge.png?branch=master\n    :alt: Coveralls badge\n    :target: https://coveralls.io/r/plone/plone.app.blocks\n\nThis package implements the 'blocks' rendering model,\nby providing several transform stages that hook into ``plone.transformchain``.\n\nThe rendering stages are:\n\n``plone.app.blocks.parsexml`` (order 8000)\n    Turns the response in a ``repoze.xmliter`` ``XMLSerializer`` object.\n    This is then used by the subsequent stages.\n    If the input is not HTML, the transformation is aborted.\n\n``plone.app.blocks.mergepanels`` (order 8100)\n    Looks up the site layout and executes the panel merge algorithm.\n    Sets a request variable ('plone.app.blocks.merged') to indicate that it has done its job.\n\n``plone.app.blocks.tiles`` (order 8500)\n    Resolve tiles and place them directly into the merged layout.\n    This is the fallback for views that do not opt into ``ITilePageRendered``.\n\n``plone.app.blocks.esirender`` (order 9900)\n    Only executed if the request key ``plone.app.blocks.esi`` is set and its value is true,\n    as would be the case if any ESI-rendered tiles are included and ESI rendering is enabled globally.\n    This step will serialise the response down to a string and perform some substitution to make ESI rendering work.\n\n\nSite layouts\n============\n\nThe package also registers the ``sitelayout`` ``plone.resource`` resource type,\nallowing site layouts to be created easily as static HTML files served from resource directories.\nThe URL to a site layout is typically something like::\n\n    /++sitelayout++my.layout/site.html\n\nSee ``plone.resource`` for more information about how to register resource directories.\nFor site layouts, the ``type`` of the resource directory is ``sitelayout``.\n\nIt is possible to provide a manifest file that gives a title, description and alternative default file for a site layout HTML file in a resource directory.\nTo create such a manifest, put a ``manifest.cfg`` file in the layout directory with the following structure:\n\n.. code-block:: ini\n\n    [sitelayout]\n    title = My layout title\n    description = Some description\n    file = some-html-file.html\n\n* All keys are optional.\n* The file defaults to ``site.html``.\n* Single manifest may contain multiple ``[sitelayout]`` sections.\n\nA vocabulary factory called ``plone.availableSiteLayouts`` is registered to allow lookup of all registered site layouts.\nThe terms in this vocabulary use the URL as a value,\nthe resource directory name as a token,\nand the title from the manifest (falling back on a sanitised version of the resource directory name) as the title.\n\nThe current default site layout can be identified by the ``plone.registry`` key ``plone.defaultSiteLayout``,\nwhich is set to ``None`` by default.\nTo always use the current site default, use:\n\n.. code-block:: html\n\n    <html data-layout=\"./@@default-site-layout\">\n\nThe ``@@default-site-layout`` view will render the current default site layout.\n\n\nContent layouts\n===============\n\nThe package also registers the ``contentlayout`` ``plone.resource`` resource type,\nallowing shared content area layouts to be created easily as static HTML files served from resource directories.\nThe URL to a content layout is typically something like::\n\n    /++contentlayout++my.layout/content.html\n\nSee ``plone.resource`` for more information about how to register resource directories.\nFor site layouts, the ``type`` of the resource directory is ``contentlayout``.\n\nIt is possible to provide a manifest file that gives a title, description and alternative default file for a site layout HTML file in a resource directory.\nTo create such a manifest, put a ``manifest.cfg`` file in the layout directory with the following structure:\n\n.. code-block:: ini\n\n    [contentlayout]\n    title = My layout title\n    description = Some description\n    file = some-html-file.html\n    screenshot = mylayout.png\n    for = Document,Folder\n    permission = cmf.ModifyPortalContent\n\n* All keys are optional.\n* Value for key ``file`` defaults to ``content.html``.\n* Single manifest may contain multiple ``[contentlayout]`` sections.\n* Values for keys ``for`` and ``permission`` are only for advisory and may not\n  be enforced.\n\nA vocabulary factory called ``plone.availableContentLayouts`` is registered to allow lookup of all registered content layouts.\nThe terms in this vocabulary use the URL as a value,\nthe resource directory name as a token,\nand the title from the manifest (falling back on a sanitised version of the resource directory name) as the title.\n\nThe default content layout can be identified by the ``plone.registry`` key ``plone.app.blocks.default_layout``,\nand the default content layout for some specific content type with key ``plone.app.blocks.default_layout.my_type``.\nThe default content layout is supported by the built-in ``layout_view`` browser view for content with ``ILayoutAware`` behavior.\n\n\nILayoutAware behavior\n=====================\n\nIt is possible for the default site layout to be overridden per section,\nby having parent objects provide or be adaptable to ``plone.app.blocks.layoutbehavior.ILayoutAware``.\nAs the module name implies, this interface can be used as a ``plone.behavior`` behavior,\nbut it can also be implemented directly or used as a standard adapter.\n\nThe ``ILayoutAware`` interface defines three properties:\n\n``content``\n    which contains the body of the page to be rendered.\n``contentLayout``\n    which contains the path to the selected static content layout,\n    which is used instead of ``content`` when set.\n``pageSiteLayout``\n    which contains the path to the site layout to be used for the given page.\n    It can be ``None`` if the default is to be used.\n``sectionSiteLayout``\n    which contains the path to the site layout to be used for pages *underneath* the given page (but not for the page itself).\n    Again, it can be ``None`` if the default is to be used.\n\nTo make use of the page site layout, use the following:\n\n.. code-block:: html\n\n    <html data-layout=\"./@@default-site-layout\">\n\nSee ``rendering.rst`` for detailed examples of how the processing is applied,\nand ``esi.rst`` for details about how Edge Side Includes can be supported.\n\nBlocks rendering in detail\n==========================\n\nThis doctest illustrates the blocks rendering process.\nAt a high level, it consists of the following steps:\n\n0. Obtain the content page, an HTML document.\n1. Look for a site layout link in the content page.\n\n   This takes the form of an attribute on the html tag like ``<html data-layout=\"...\" />``.\n\n   Usually, the site layout URL will refer to a resource in a resource  directory of type ``sitelayout``,\n   e.g. ``/++sitelayout++foo/site.html``,\n   although the layout can be any URL.\n   An absolute path like this will be adjusted so that it is always relative to the Plone site root.\n2. Resolve and obtain the site layout.\n\n   This is another HTML document.\n3. Extract panels from the site layout.\n\n   A panel is an element (usually a ``<div />``) in the layout page with a data-panel attribute,\n   for example: ``<div data-panel=\"panel1\" />``.\n   The attribute specifies an id which *may* be used in the content page.\n4. Merge panels.\n\n   This is the process which applies the layout to the unstyled page.\n   All panels in the layout page that have a matching element in the content page are replaced by the content page element.\n   The rest of the content page is discarded.\n5. Resolve and obtain tiles.\n\n   A tile is a placeholder element in the page which will be replaced by the contents of a document referenced by a URL.\n\n   A tile is identified by a placeholder element with a ``data-tile`` attribute containing the tile URL.\n\n   Note that at this point, panel merging has taken place,\n   so if a panel in the content page contains tiles, they will be carried over into the merge page.\n   Also note that it is possible to have tiles outside of panels - the two concepts are not directly related.\n\n   The ``plone.tiles`` package provides a framework for writing tiles,\n   although in reality a tile can be any HTML page.\n6. Place tiles into the page.\n\n   The tile should resolve to a full HTML document.\n   Any content found in the ``<head />`` of the tile content will be merged into the ``<head />`` of the rendered content.\n   The contents of the ``<body />`` of the tile content are put into the rendered document at the tile placeholder.\n\nRendering step-by-step\n----------------------\n\nLet us now illustrate the rendering process.\nWe'll need a few variables defined first:\n\n.. code-block:: python\n\n    >>> from plone.testing.z2 import Browser\n    >>> import transaction\n\n    >>> app = layer['app']\n    >>> portal = layer['portal']\n\n    >>> browser = Browser(app)\n    >>> browser.handleErrors = False\n\nCreating a site layout\n~~~~~~~~~~~~~~~~~~~~~~\n\nThe most common approach for managing site layouts is to use a resource registered using a ``plone.resource`` directory of type ``sitelayout``,\nand then use the ``@@default-site-layout`` view to reference the content.\nWe will illustrate this below, but it is important to realise that ``plone.app.blocks`` works by post-processing responses rendered by Zope.\nThe content and layout pages could just as easily be created by views of content objects, or even resources external to Zope/Plone.\n\nFirst, we will create a resource representing the site layout and its panels.\nThis includes some resources and other elements in the ``<head />``,\n``<link />`` tags which identify tile placeholders and panels,\nas well as content inside and outside panels.\nThe tiles in this case are managed by ``plone.tiles``, and are both of the same type.\n\n.. code-block:: python\n\n    >>> layoutHTML = \"\"\"\\\n    ... <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n    ... <html>\n    ...     <head>\n    ...         <title>Layout title</title>\n    ...         <link rel=\"stylesheet\" href=\"/layout/style.css\" />\n    ...         <script type=\"text/javascript\">alert('layout');</script>\n    ...\n    ...         <style type=\"text/css\">\n    ...         div {\n    ...             margin: 5px;\n    ...             border: dotted black 1px;\n    ...             padding: 5px;\n    ...         }\n    ...         </style>\n    ...\n    ...         <link rel=\"stylesheet\" data-tile=\"./@@test.tile_nobody/tile_css\" />\n    ...     </head>\n    ...     <body>\n    ...         <h1>Welcome!</h1>\n    ...         <div data-panel=\"panel1\">Layout panel 1</div>\n    ...         <div data-panel=\"panel2\">\n    ...             Layout panel 2\n    ...             <div id=\"layout-tile1\" data-tile=\"./@@test.tile1/tile1\">Layout tile 1 placeholder</div>\n    ...         </div>\n    ...         <div data-panel=\"panel3\">\n    ...             Layout panel 3\n    ...             <div id=\"layout-tile2\" data-tile=\"./@@test.tile1/tile2\">Layout tile 2 placeholder</div>\n    ...         </div>\n    ...     </body>\n    ... </html>\n    ... \"\"\"\n\nWe can create an in-ZODB resource directory of type ``sitelayout`` that contains this layout.\nAnother way would be to register a resource directory in a package using ZCML, or use a global resource directory.\nSee ``plone.resource`` for more details.\n\n.. code-block:: python\n\n    >>> from Products.CMFCore.utils import getToolByName\n    >>> from Products.BTreeFolder2.BTreeFolder2 import BTreeFolder2\n    >>> from OFS.Image import File\n    >>> import six\n\n    >>> resources = getToolByName(portal, 'portal_resources')\n    >>> resources._setOb('sitelayout', BTreeFolder2('sitelayout'))\n    >>> resources['sitelayout']._setOb('mylayout', BTreeFolder2('mylayout'))\n    >>> resources['sitelayout']['mylayout']._setOb('site.html', File('site.html', 'site.html', six.b(layoutHTML)))\n\n    >>> transaction.commit()\n\nThis resource can now be accessed using the path ``/++sitelayout++mylayout/site.html``.\nLet's render it on its own to verify that.\n\n.. code-block:: python\n\n    >>> browser.open(portal.absolute_url() + '/++sitelayout++mylayout/site.html')\n    >>> print(browser.contents)\n    <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n    <html>\n        <head>\n            <title>Layout title</title>\n            <link rel=\"stylesheet\" href=\"/layout/style.css\" />\n            <script type=\"text/javascript\">alert('layout');</script>\n    <BLANKLINE>\n            <style type=\"text/css\">\n            div {\n                margin: 5px;\n                border: dotted black 1px;\n                padding: 5px;\n            }\n            </style>\n    <BLANKLINE>\n            <link rel=\"stylesheet\" data-tile=\"./@@test.tile_nobody/tile_css\" />\n        </head>\n        <body>\n            <h1>Welcome!</h1>\n            <div data-panel=\"panel1\">Layout panel 1</div>\n            <div data-panel=\"panel2\">\n                Layout panel 2\n                <div id=\"layout-tile1\" data-tile=\"./@@test.tile1/tile1\">Layout tile 1 placeholder</div>\n            </div>\n            <div data-panel=\"panel3\">\n                Layout panel 3\n                <div id=\"layout-tile2\" data-tile=\"./@@test.tile1/tile2\">Layout tile 2 placeholder</div>\n            </div>\n        </body>\n    </html>\n\nWe can now set this as the site-wide default layout by setting the registry key ``plone.defaultSiteLayout``.\nThere are two indirection views, ``@@default-site-layout`` and ``@@page-site-layout``, that respect this registry setting.\nBy using one of these views to reference the layout of a given page, we can manage the default site layout centrally.\n\n.. code-block:: python\n\n    >>> from zope.component import getUtility\n    >>> from plone.registry.interfaces import IRegistry\n    >>> registry = getUtility(IRegistry)\n    >>> registry['plone.defaultSiteLayout'] = b'/++sitelayout++mylayout/site.html'\n    >>> transaction.commit()\n\nCreating a page layout and tiles\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nNext, we will define the markup of a content page that uses this layout via the ``@@default-site-layout`` indirection view:\n\n.. code-block:: python\n\n    >>> pageHTML = \"\"\"\\\n    ... <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n    ... <html data-layout=\"./@@default-site-layout\">\n    ...     <body>\n    ...         <h1>Welcome!</h1>\n    ...         <div data-panel=\"panel1\">\n    ...             Page panel 1\n    ...             <div id=\"page-tile2\" data-tile=\"./@@test.tile1/tile2?magicNumber:int=2\">Page tile 2 placeholder</div>\n    ...         </div>\n    ...         <div data-panel=\"panel2\">\n    ...             Page panel 2\n    ...             <div id=\"page-tile3\" data-tile=\"./@@test.tile1/tile3\">Page tile 3 placeholder</div>\n    ...         </div>\n    ...         <div data-panel=\"panel4\">\n    ...             Page panel 4 (ignored)\n    ...             <div id=\"page-tile4\" data-tile=\"./@@test.tile1/tile4\">Page tile 4 placeholder</div>\n    ...         </div>\n    ...     </body>\n    ... </html>\n    ... \"\"\"\n\nWe then register a view that simply return this HTML,\nand a tile type which we can use to test tile rendering.\n\nWe do this in code for the purposes of the test,\nand we have to apply security because we will shortly render those pages using the test publisher.\nIn real life, these could be registered using the standard ``<browser:page />`` and ``<plone:tile />`` directives.\n\n.. code-block:: python\n\n    >>> from zope.publisher.browser import BrowserView\n    >>> from zope.interface import Interface, implementer\n    >>> from zope import schema\n    >>> from plone.tiles import Tile\n    >>> from plone.app.blocks.interfaces import IBlocksTransformEnabled\n\n    >>> @implementer(IBlocksTransformEnabled)\n    ... class Page(BrowserView):\n    ...     __name__ = 'test-page'\n    ...     def __call__(self):\n    ...         return pageHTML\n\n    >>> class ITestTile(Interface):\n    ...     magicNumber = schema.Int(title=u\"Magic number\", required=False)\n\n    >>> class TestTile(Tile):\n    ...     __name__ = 'test.tile1' # normally set by ZCML handler\n    ...\n    ...     def __call__(self):\n    ...         # fake a page template to keep things simple in the test\n    ...         return \"\"\"\\\n    ... <html>\n    ...     <head>\n    ...         <meta name=\"tile-name\" content=\"%(name)s\" />\n    ...     </head>\n    ...     <body>\n    ...         <p>\n    ...             This is a demo tile with id %(name)s\n    ...         </p>\n    ...         <p>\n    ...             Magic number: %(number)d; Form: %(form)s; Query string: %(queryString)s; URL: %(url)s\n    ...         </p>\n    ...     </body>\n    ... </html>\"\"\" % dict(name=self.id, number=self.data['magicNumber'] or -1,\n    ...                   form=sorted(self.request.form.items()), queryString=self.request['QUERY_STRING'], url=self.request.getURL())\n\nLet's add another tile, this time only a head part.\nThis could for example be a tile that only needs to insert some CSS.\n\n.. code-block:: python\n\n    >>> class TestTileNoBody(Tile):\n    ...     __name__ = 'test.tile_nobody'\n    ...\n    ...     def __call__(self):\n    ...         return \"\"\"\\\n    ... <html>\n    ...     <head>\n    ...         <link rel=\"stylesheet\" type=\"text/css\" href=\"tiled.css\" />\n    ...     </head>\n    ... </html>\"\"\"\n\nWe register these views and tiles in the same way the ZCML handlers for ``<browser:page />`` and ``<plone:tile />`` would:\n\n.. code-block:: python\n\n    >>> from plone.tiles.type import TileType\n    >>> from AccessControl.security import protectClass\n    >>> from App.class_init import InitializeClass\n    >>> from zope.component import provideAdapter, provideUtility\n    >>> from zope.interface import Interface\n\n    >>> testTileType = TileType(\n    ...     name=u'test.tile1',\n    ...     title=u\"Test tile\",\n    ...     description=u\"A tile used for testing\",\n    ...     add_permission=\"cmf.ManagePortal\",\n    ...     view_permission=\"zope2.View\",\n    ...     schema=ITestTile)\n\n    >>> testTileTypeNoBody = TileType(\n    ...     name=u'test.tile_nobody',\n    ...     title=u\"Test tile using only a header\",\n    ...     description=u\"Another tile used for testing\",\n    ...     add_permission=\"cmf.ManagePortal\",\n    ...     view_permission=\"zope2.View\")\n\n    >>> protectClass(Page, 'zope2.View')\n    >>> protectClass(TestTile, 'zope2.View')\n\n    >>> InitializeClass(Page)\n    >>> InitializeClass(TestTile)\n\n    >>> provideAdapter(Page, (Interface, Interface,), Interface, u'test-page')\n    >>> provideAdapter(TestTile, (Interface, Interface,), Interface, u'test.tile1',)\n    >>> provideAdapter(TestTileNoBody, (Interface, Interface,), Interface, u'test.tile_nobody',)\n    >>> provideUtility(testTileType, name=u'test.tile1')\n    >>> provideUtility(testTileTypeNoBody, name=u'test.tile_nobody')\n\nRendering the page\n~~~~~~~~~~~~~~~~~~\n\nWe can now render the page.\nProvided ``plone.app.blocks`` is installed and working, it should perform its magic.\nWe make sure that Zope is in \"development mode\" to get pretty-printed output.\n\n.. code-block:: python\n\n    >>> browser.open(portal.absolute_url() + '/@@test-page')\n    >>> print(browser.contents.replace('<head><meta', '<head>\\n\\t<meta'))\n    <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n    <html xmlns=\"http://www.w3.org/1999/xhtml\">\n      <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=ASCII\" />\n        <title>Layout title</title>\n        <link rel=\"stylesheet\" href=\"/layout/style.css\" />\n        <script type=\"text/javascript\">alert('layout');</script>\n        <style type=\"text/css\">\n            div {\n                margin: 5px;\n                border: dotted black 1px;\n                padding: 5px;\n            }\n            </style>\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"tiled.css\" />\n        <meta name=\"tile-name\" content=\"tile2\" />\n        <meta name=\"tile-name\" content=\"tile3\" />\n        <meta name=\"tile-name\" content=\"tile2\" />\n      </head>\n      <body>\n            <h1>Welcome!</h1>\n            <div data-panel=\"panel1\">\n                Page panel 1\n            <p>\n                This is a demo tile with id tile2\n            </p>\n            <p>\n                Magic number: 2; Form: [('magicNumber', 2)]; Query string: magicNumber:int=2; URL: http://nohost/plone/@@test.tile1/tile2\n            </p>\n            </div>\n            <div data-panel=\"panel2\">\n                Page panel 2\n            <p>\n                This is a demo tile with id tile3\n            </p>\n            <p>\n                Magic number: -1; Form: []; Query string: ; URL: http://nohost/plone/@@test.tile1/tile3\n            </p>\n            </div>\n            <div data-panel=\"panel3\">\n                Layout panel 3\n            <p>\n                This is a demo tile with id tile2\n            </p>\n            <p>\n                Magic number: -1; Form: []; Query string: ; URL: http://nohost/plone/@@test.tile1/tile2\n            </p>\n            </div>\n        </body>\n    </html>\n    <BLANKLINE>\n\nNotice how:\n\n* Panels from the page have been merged into the layout, replacing the corresponding panels there.\n* The ``<head />`` sections of the two documents have been merged\n* The rest of the layout page is intact\n* The rest of the content page is discarded\n* The tiles have been rendered, replacing the relevant placeholders\n* The ``<head />`` section from the rendered tiles has been merged into the ``<head />`` of the output page.\n\nUsing VHM\n~~~~~~~~~\n\nMake sure to have a clean browser:\n\n.. code-block:: python\n\n    >>> browser = Browser(app)\n    >>> browser.handleErrors = False\n\nUsing Virtual Host Monster we rewrite the url to consider all content being under ``/``:\n\n.. code-block:: python\n\n    >>> vhm_url = 'http://nohost/VirtualHostBase/http/nohost:80/plone/VirtualHostRoot/'\n    >>> browser.open(vhm_url + '/@@test-page')\n\nTiles should return an url according to this:\n\n.. code-block:: python\n\n    >>> 'Magic number: -1; Form: []; Query string: ; URL: http://nohost/@@test.tile1/tile2' in browser.contents\n    True\n\nNow we deal with _vh_* arguments. We expect our site to be under a subdir with id *subplone*:\n\n.. code-block:: python\n\n    >>> vhm_url = 'http://nohost/VirtualHostBase/http/nohost:80/plone/VirtualHostRoot/_vh_subplone'\n    >>> browser.open(vhm_url + '/@@test-page')\n\nTiles should return an url according to this:\n\n.. code-block:: python\n\n    >>> 'Magic number: -1; Form: []; Query string: ; URL: http://nohost/subplone/@@test.tile1/tile2' in browser.contents\n    True\n\n\nESI rendering\n=============\n\nBlocks supports rendering of tiles for Edge Side Includes (ESI).\nA tile will be rendered to ESI provided that:\n\n* The tile itself is marked with the ``IESIRendered`` marker interface.\n  See `plone.tiles`_ for more details.\n* The ``plone.app.blocks.interfaces.IBlocksSettings.esi`` record in the registry is set to True.\n  It is False by default.\n  To switch this through-the-web, you can visit the configuration registry control panel in Plone.\n\nNote that if a tile is rendered using ESI, it's <head /> contents are ignored, instead of being merged into the final page.\nThat is, only the ``@@esi-body`` view form `plone.tiles`_ is used by default.\n\nAn ESI link looks like this:\n\n.. code-block:: xml\n\n    <esi:include src=\"http://example.com/plone/@@some.tile/tile-1/@@esi-body?param1=value1\" />\n\nA fronting server such as Varnish will be able to load this on demand and\ncompose the page from fragments that may be cached individually.\n\nTest setup\n----------\n\nLet's first register a two very simple tiles. One uses ESI, one does not.\n\n.. code-block:: python\n\n    >>> from plone.tiles.esi import ESITile\n    >>> from plone.tiles import Tile\n    >>> from plone.tiles.type import TileType\n\n    >>> class NonESITile(Tile):\n    ...     __name__ = 'test.tile2' # normally set by ZCML handler\n    ...\n    ...     def __call__(self):\n    ...         return \"\"\"\\\n    ... <html>\n    ...     <head>\n    ...         <meta name=\"tile-name\" content=\"%(name)s\" />\n    ...     </head>\n    ...     <body>\n    ...         <p>\n    ...             Non-ESI tile with query string %(queryString)s\n    ...         </p>\n    ...     </body>\n    ... </html>\"\"\" % dict(name=self.id, queryString=self.request['QUERY_STRING'])\n\n    >>> testTile2Type = TileType(\n    ...     name=u'test.tile2',\n    ...     title=u\"Test tile 2\",\n    ...     description=u\"A tile used for testing\",\n    ...     add_permission=\"cmf.ManagePortal\",\n    ...     view_permission=\"zope2.View\")\n\n    >>> class SimpleESITile(ESITile):\n    ...     __name__ = 'test.tile3' # normally set by ZCML handler\n    ...\n    ...     def render(self):\n    ...         return \"\"\"\\\n    ... <html>\n    ...     <head>\n    ...         <meta name=\"tile-name\" content=\"%(name)s\" />\n    ...     </head>\n    ...     <body>\n    ...         <p>\n    ...             ESI tile with query string %(queryString)s\n    ...         </p>\n    ...     </body>\n    ... </html>\"\"\" % dict(name=self.id, queryString=self.request['QUERY_STRING'])\n\n    >>> testTile3Type = TileType(\n    ...     name=u'test.tile3',\n    ...     title=u\"Test tile 3\",\n    ...     description=u\"A tile used for testing\",\n    ...     add_permission=\"cmf.ManagePortal\",\n    ...     view_permission=\"zope2.View\")\n\nRegister these in the same way that the ZCML handlers would, more or less.\n\n.. code-block:: python\n\n    >>> from AccessControl.security import protectClass\n    >>> protectClass(NonESITile, 'zope2.View')\n    >>> protectClass(SimpleESITile, 'zope2.View')\n\n    >>> from App.class_init import InitializeClass\n    >>> InitializeClass(NonESITile)\n    >>> InitializeClass(SimpleESITile)\n\n    >>> from zope.component import provideAdapter, provideUtility\n    >>> from zope.interface import Interface\n    >>> provideAdapter(NonESITile, (Interface, Interface,), Interface, u'test.tile2',)\n    >>> provideUtility(testTile2Type, name=u'test.tile2')\n    >>> provideAdapter(SimpleESITile, (Interface, Interface,), Interface, u'test.tile3',)\n    >>> provideUtility(testTile3Type, name=u'test.tile3')\n\nWe will also register a simple layout and a simple page using these tiles.\n\n.. code-block:: python\n\n    >>> layoutHTML = u\"\"\"\\\n    ... <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n    ... <html>\n    ...     <head>\n    ...         <title>Layout title</title>\n    ...     </head>\n    ...     <body>\n    ...         <h1>Welcome!</h1>\n    ...         <div data-panel=\"panel1\">Content goes here</div>\n    ...         <div id=\"layout-non-esi-tile\" data-tile=\"./@@test.tile2/tile1\">Layout tile 1 placeholder</div>\n    ...         <div id=\"layout-esi-tile\" data-tile=\"./@@test.tile3/tile2\">Layout tile 2 placeholder</div>\n    ...     </body>\n    ... </html>\n    ... \"\"\"\n\nTo keep things simple, we'll skip the resource directory and layout indirection view,\ninstead just referencing a view containing the layout directly.\n\n.. code-block:: python\n\n    >>> from zope.publisher.browser import BrowserView\n    >>> class Layout(BrowserView):\n    ...     __name__ = 'test-layout'\n    ...     def __call__(self):\n    ...         return layoutHTML\n\n    >>> protectClass(Layout, 'zope2.View')\n    >>> InitializeClass(Layout)\n    >>> provideAdapter(Layout, (Interface, Interface,), Interface, u'test-layout',)\n\n    >>> pageHTML = u\"\"\"\\\n    ... <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n    ... <html data-layout=\"./@@test-layout\">\n    ...     <body>\n    ...         <div data-panel=\"panel1\">\n    ...             <div id=\"page-non-esi-tile\" data-tile=\"./@@test.tile2/tile3?foo=bar\">Page tile 3 placeholder</div>\n    ...             <div id=\"page-esi-tile\" data-tile=\"./@@test.tile3/tile4?foo=bar\">Page tile 4 placeholder</div>\n    ...         </div>\n    ...     </body>\n    ... </html>\n    ... \"\"\"\n\n    >>> from zope.interface import implementer\n    >>> from plone.app.blocks.interfaces import IBlocksTransformEnabled\n    >>> @implementer(IBlocksTransformEnabled)\n    ... class Page(BrowserView):\n    ...     __name__ = 'test-page'\n    ...     def __call__(self):\n    ...         return pageHTML\n\n    >>> protectClass(Page, 'zope2.View')\n    >>> InitializeClass(Page)\n    >>> provideAdapter(Page, (Interface, Interface,), Interface, u'test-page',)\n\nESI disabled\n------------\n\nWe first render the page without enabling ESI.\nThe ESI-capable tiles should be rendered as normal.\n\n.. code-block:: python\n\n    >>> from plone.testing.z2 import Browser\n    >>> app = layer['app']\n    >>> browser = Browser(app)\n    >>> browser.handleErrors = False\n\n    >>> portal = layer['portal']\n    >>> browser.open(portal.absolute_url() + '/@@test-page')\n\nSome cleanup is needed to cover lxml platform discrepancies...\n\n.. code-block:: python\n\n    >>> print(browser.contents.replace('<head><meta', '<head>\\n\\t<meta'))\n    <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n    <html xmlns=\"http://www.w3.org/1999/xhtml\">\n        <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=ASCII\" />\n        <title>Layout title</title>\n        <meta name=\"tile-name\" content=\"tile3\" />\n        <meta name=\"tile-name\" content=\"tile4\" />\n        <meta name=\"tile-name\" content=\"tile1\" />\n        <meta name=\"tile-name\" content=\"tile2\" />\n        </head>\n        <body>\n            <h1>Welcome!</h1>\n            <div data-panel=\"panel1\">\n            <p>\n                Non-ESI tile with query string foo=bar\n            </p>\n            <p>\n                ESI tile with query string foo=bar\n            </p>\n            </div>\n            <p>\n                Non-ESI tile with query string\n            </p>\n            <p>\n                ESI tile with query string\n            </p>\n        </body>\n    </html>\n    <BLANKLINE>\n\nESI enabled\n-----------\n\nWe can now enable ESI. This could be done using GenericSetup (with the\n``registry.xml`` import step), or through the configuration registry\ncontrol panel. In code, it is done like so:\n\n.. code-block:: python\n\n    >>> from zope.component import getUtility\n    >>> from plone.registry.interfaces import IRegistry\n    >>> from plone.app.blocks.interfaces import IBlocksSettings\n    >>> registry = getUtility(IRegistry)\n    >>> registry.forInterface(IBlocksSettings).esi = True\n    >>> import transaction\n    >>> transaction.commit()\n\nWe can now perform the same rendering again. This time, the ESI-capable\ntiles should be rendered as ESI links. See `plone.tiles`_ for more details.\n\n.. code-block:: python\n\n    >>> browser.open(portal.absolute_url() + '/@@test-page')\n    >>> print(browser.contents.replace('<head><meta', '<head>\\n\\t<meta'))\n    <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n    <html xmlns:esi=\"http://www.edge-delivery.org/esi/1.0\" xmlns=\"http://www.w3.org/1999/xhtml\">\n        <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=ASCII\" />\n        <title>Layout title</title>\n        <meta name=\"tile-name\" content=\"tile3\" />\n        <meta name=\"tile-name\" content=\"tile1\" />\n        </head>\n        <body>\n            <h1>Welcome!</h1>\n            <div data-panel=\"panel1\">\n            <p>\n                Non-ESI tile with query string foo=bar\n            </p>\n            <esi:include src=\"/plone/@@test.tile3/tile4/@@esi-body?foo=bar\" />\n            </div>\n            <p>\n                Non-ESI tile with query string\n            </p>\n            <esi:include src=\"/plone/@@test.tile3/tile2/@@esi-body?\" />\n        </body>\n    </html>\n    <BLANKLINE>\n\nESI links are substituted by ``ESIRender``-transform, which should always be\nafter all transforms registered ``plone.transformchain`` with DOM-manipulation\nusing ``lxml``. That's because ``lxml`` does not support ESI-namespace in HTML\nand ESI substitution can only be done once ``lxml`` tree is serialized into\npublishable byte string.\n\nIf ``ESIRender``-transform transforms any ESI-links, an additional HTML header\n``X-Esi`` being is set on the response. The existence of this header can be\nused to enable ESI-support in Varnish:\n\n.. code-block:: python\n\n    >>> browser.headers.get('X-Esi')\n    '1'\n\nWhen ESI rendering takes place, the following URLs will be called:\n\n.. code-block:: python\n\n    >>> browser.open(\"http://nohost/plone/@@test.tile3/tile4/@@esi-body?foo=bar\")\n    >>> print(browser.contents)\n    <p>\n        ESI tile with query string foo=bar\n    </p>\n\n    >>> browser.open(\"http://nohost/plone/@@test.tile3/tile2/@@esi-body?\")\n    >>> print(browser.contents)\n    <p>\n        ESI tile with query string\n    </p>\n\n.. _plone.tiles: http://pypi.python.org/pypi/plone.tiles\n\nChangelog\n=========\n\n4.3.2 (2019-10-18)\n------------------\n\nBug fixes:\n\n- Catch errors on resolving tiles and return an error message instead of breaking the whole UI\n  [MrTango]\n\n- Fix issue where layout aware tile data storage read cache was not purged when\n  data was updated programmatically [fixes #75]\n  [datakurre]\n\n- Fix issue where resolveResource would break when url html content param contains other ++-url's\n  [MrTango]\n\n4.3.1 (2019-02-20)\n------------------\n\nBug fixes:\n\n- fix multidict feature for python 3\n  [petschki]\n\n\n4.3.0 (2019-02-10)\n------------------\n\nBug fixes:\n\n- Enforce usage of plone.subrequest >= 1.7.0;\n  this avoids ``TypeError`` on package upgrades (refs. `#62 <https://github.com/plone/plone.app.blocks/issues/62>`_).\n  [hvelarde]\n\nNew features:\n\n- python3 compatibility\n  [petschki]\n\n4.2.0 (2018-07-02)\n------------------\n\nNew features:\n\n- Allow rendering of subtiles.\n  Now it's possible to reference and resolve tiles in tiles.\n  [thet]\n\n- Added events to notify before/after tile rendering.\n  [thet]\n\nBug fixes:\n\n- Allow head tiles without a html/head structure.\n  [thet]\n\n- Fix issue where resolving layout url with ajax_load parameter caused fail\n  on direct resolve directory lookup\n  [datakurre]\n\n- Fix issue where failed resource lookup into filesystem resource directory\n  raised IOError\n  [datakurre]\n\n- Fix deprecated `import Globals`. This adds Zope 4 compatibility.\n  [petschki]\n\n\n4.1.2 (2018-07-02)\n------------------\n\nBug fixes:\n\n- remove `pretty_print` when loading the tile data.\n  This fixes `forced_root_block` problems in TinyMCE (#63)\n  [petschki]\n\n\n4.1.1 (2017-10-20)\n------------------\n\nBug fixes:\n\n- Fix to properly store primary rich text field values through layout aware\n  tile data storage adapter\n  [datakurre]\n\n- Fix diazo tile rules cache key to require less memory by using hexdigest\n  [datakurre]\n\n\n4.1.0 (2017-08-17)\n------------------\n\nNew Features:\n\n- ESITransforms add a new header ``X-Esi: 1`` when any ESI tiles have\n  been transformed. This allows e.g. Varnish to enable ESI only when\n  it's really required.\n  [datakurre]\n\n- Add to allow ``permission`` key in ``[contentlayout]``-sections of content\n  layout manifests (``manifest.cfg``)\n  [datakurre]\n\n\n4.0.6 (2017-02-09)\n------------------\n\nFixes:\n\n- Fix issue where layout related fields could have been acquired\n  (only sectionSiteLayout can be allowed to be acquired)\n  [datakurre]\n\n\n4.0.5 (2017-02-08)\n------------------\n\nFixes:\n\n- Fix issue where page site layout could have been accidentally acquired\n  (page site layout should never be acquired)\n  [datakurre]\n\n- Fix transforms to comply with\n  plone.transformchain.interfaces.ITransform\n  [datakurre]\n\n\n4.0.4 (2017-01-30)\n------------------\n\nFixes:\n\n- Fix issue where ESIRender has been broken since plone.protect's\n  ProtectTransform was introduced, because of protect transform breaking\n  ESI-tags; Change ESIRender transform order from 8900 to 9900\n  [datakurre]\n\n4.0.3 (2017-01-15)\n------------------\n\nFixes:\n\n- Fix issue where default layouts paths were not found if they were stored\n  unicode (TextLine) instead of str (ASCIILine or BytesLine)\n  [datakurre]\n\n- Fix issue where tiles merge failed for addresses with space, because\n  subrequest was called with quoted ('%20') paths\n  [datakurre]\n\n\n4.0.2 (2017-01-03)\n------------------\n\nFixes:\n\n- Fix issue where error in diazo transform for a single tile aborted tile\n  merge as whole\n  [datakurre]\n\n\n4.0.1 (2016-12-28)\n------------------\n\nFixes:\n\n- Fix issue where tile data storage decoded HTML primary fields\n  using ASCII instead of utf-8 causing broken broken latin\n  characters in attribute values\n  [datakurre]\n\n\n4.0.0 (2016-12-13)\n------------------\n\nIncompatibilities:\n\n- Remove grid transform, because it did not serve its purpose as as well\n  expected and required HTML-syntax not editable by humans; Instead using\n  grid framework agnostic CSS class names and building CSS grid against\n  those class names is recommended\n  [agitator]\n\n- Remove ``IOmittedField`` marker from layout behavior fields not meant to be\n  displayed on legacy Deco UIs\n  [jensens]\n\n- Rename ``ILayoutAware.content`` to ``ILayoutAware.customContentLayout``\n  [datakurre]\n\n- Move functions ``getDefaultAjaxLayout``, ``getDefaultSiteLayout``,\n  ``getLayout`` and ``getLayoutAwareSiteLayout`` to ``.layoutbehavior`` in\n  order to avoid circular imports (all deprecated now, see section New).\n  [jensens]\n\n- Move views from ``.layoutbehavior`` to new module ``.layoutviews`` in order\n  to avoid circular imports.  Deprecated deferred imports are in place.\n  [jensens]\n\nNew:\n\n- Add ``ILayoutAware.content`` as layout independent \"layout like\" tile\n  configuration and data storage for all serializable tile configurations\n  [datakurre]\n\n- Add ``@@layout_preview`` view for previewing currently drafted layout aware\n  content\n  [datakurre]\n\n- ``ILayoutAware`` is now also responsible to lookup the behaviors.\n  [jensens]\n\n- Get layouts always by adapting with ``ILayoutAware``.  This introduces a\n  generic adapter and a behavior adapter.  Deprecated the formerly used functions\n  ``getLayout`` ``getDefaultSiteLayout`` just calls\n  ``ILayoutAware().site_layout`` and is deprected.  ``getLayout`` just calls\n  ``ILayoutAware().content_layout`` and is deprecated.\n  [jensens]\n\n- Behavior shortname ``plone.layoutaware`` added.\n  [jensens]\n\nFixes:\n\n- Handle missing content layouts so they do not cause an error\n  [vangheem]\n\n- A tile raising an 401 Unauthorized on traversal,\n  results in a status rewriting to a 302 which results in 200 login form.\n  The whole login form page then is rendered as the tile contents.\n  This patch catches the 401 by providing a custom exception handler.\n  The 401 is catched and ignored. This is not pefect yet and need some work,\n  but it at least does not break design and intended behavior of tiles.\n  [jensens]\n\nRefactoring:\n\n- Housekeeping: ZCA decorators, sorted imports, line-lengths and related.\n  [jensens]\n\n- Reformat documentation.\n  [gforcada]\n\n- Update travis configuration.\n  [gforcada]\n\n\n3.1.0 (2016-03-28)\n------------------\n\nNew:\n\n- Don't make a tile exception break other tiles (closes `#27`_).\n  [rodfersou, datakurre]\n\n- Provide new getLayoutsFromDirectory utility to get layouts from any\n  plone.resource directory, not just the base resource directory\n  [vangheem]\n\n- Index layout data; When collective.dexteritytextindexer is present,\n  its *Dynamic SearchableText indexer behavior* must be enabled for content\n  type\n  [vangheem, datakurre]\n\n- Cleanup tile data on save/edit\n  [vangheem]\n\n\n3.0.1 (2015-09-23)\n------------------\n\n- Remove the default 'Custom layout' display menu registration for\n  'layout_view', because it was not possible to customize it with more exact\n  registration\n  [datakurre]\n\n- Fix the default view to report template name as 'template-layout'\n  [datakurre]\n\n\n3.0.0 (2015-09-16)\n------------------\n\n- Change layout behavior default view name from ``view`` to ``layout_view``\n  [datakurre]\n\n- Add to be able to set default grid system in registry settings\n  [vangheem]\n\n- Add support for provide more than one layout with a layout directory\n  and manifest (replaces removed layout variants)\n  [vangheem]\n\n- Add ``contentlayout`` resource type with ``plone.availableContentLayouts``\n  vocabulary and ``++contentlayout++`` traverser\n  [vangheem]\n\n- Add ``contentLayout`` field to layoutbehavior to select the rendered layout\n  from centrally managed content layouts\n  [vangheem]\n\n- Add content type specific registry configuration with key\n  ``plone.app.blocks.default_layout.portal_type`` for used default content\n  layout when custom layout is not defined\n  [vangheem]\n\n- Add to check ``plone.app.blocks.default_layout`` registry key for a default\n  content layout path when content type specific default content layout path is\n  not set\n  [datakurre]\n\n- Fixed layout behavior to apply Plone outputfilters for rendered content\n  [datakurre]\n\n- Add default grid system registry setting\n  [vangheem]\n\n- Restore support for Plone 4.2.x\n  [datakurre]\n\n- Remove layout variants introduced in 2.0.0, in favor of ability to\n  provide more than one layout with a layout directory and manifest by\n  using multiple ``[...layout]`` directive in the same manifest\n  [vangheem]\n\n\n2.1.2 (2015-06-10)\n------------------\n\n- Fix issue where grid transform did replaced class names instead of appending\n  to them\n  [datakurre]\n\n\n2.1.1 (2015-06-10)\n------------------\n\n- Fix BS3 grid transform to only introduce offset when the tile position is\n  greater than the current position in the current row\n  [datakurre]\n\n- Fix issue where tiles with empty response or syntax error broke tiles\n  transform (add to log syntax errors instead)\n  [datakurre]\n\n\n2.1.0 (2015-05-25)\n------------------\n\n- Add support for indexing layout field into SearchableText index when\n  collective.dexteritytextindexer is installed and its Dynamic SearchableText\n  indexer behavior is enabled for the indexed content type with Layout support\n  behavior\n  [datakurre]\n\n\n2.0.0 (2015-04-21)\n------------------\n\n- Fix package dependencies; remove dependency on unittest2.\n  [hvelarde]\n\n- Change blocks transforms to be opt-in for only published objects e.g. views\n  or requests with IBlocksTransformEnabled (marker) interface [fixes #11]\n  [datakurre]\n\n- Change tags with data-tiles-attrs to be completely replaced (by\n  replace_with_children instad of replace_content) to restore original\n  design and support for site layout tiles in HTML document head tag\n  [datakurre]\n\n- Change default site layout to be optional by adding an implicit\n  main_template-based site layout when the default site layout is not set\n  [datakurre]\n\n- Change to retry resolveResources with 301 or 302 response when redirect\n  location is for the same site\n  [datakurre]\n\n- Add support for AJAX site layout for requests with ``ajax_load`` parameter\n  either by getting a layout from a reqistry key ``plone.defaultAjaxLayout``\n  or by using an implicit main_template-based AJAX layout\n  [simahawk, datakurre]\n\n- Add extensible CSS grid transform with built-in transforms for Deco\n  and Bootstrap 3 grid systems\n  [bloodbare, ACatila]\n\n  .. code:: xml\n\n     <utility\n         provides=\".gridsystem.IGridSystem\"\n         component=\".gridsystem.DecoGridSystem\"\n         name=\"deco\"\n         />\n\n  .. code:: html\n\n     <html data-gridsystem=\"deco\">\n       ...\n       <div data-grid='{\"type\": \"row\"}'>\n         <div data-grid='{\"type\": \"cell\",\n                          \"info\": {\"xs\": \"false\",\n                                   \"sm\": \"False\",\n                                   \"lg\": \"True\",\n                          \"pos\": {\"x\":1,\n                                  \"width\": 12}}}'>\n          </div>\n       </div>\n     </html>\n\n  .. code:: html\n\n     <div class=\"row\">\n        <div class=\"cell position-1 width-12\">\n        </div>\n     </div>\n\n- Add default view for ILayoutAware content and register a localizable display\n  menu item called *Custom layout* for it when *plone.app.contentmenu* is\n  present\n  [datakurre]\n\n- Add Layout-fieldset for ILayoutAware behavior\n  [datakurre]\n\n- Add support to use the whole tile as its body when both head and body tags\n  are missing (add support for using Dexterithy display widgets as tiles)\n  [datakurre]\n\n- Add support for layout variants (for supporting multiple layouts in a single\n  resource folder)\n  [datakurre]\n\n  .. code:: ini\n\n     [sitelayout]\n     ...\n\n     [sitelayout:variants]\n     document_layout = document.html\n\n- Add experimental support for tile-specific Diazo-rules\n  with data-attribute ``data-rules=\"/++sitelayout++name/rules.xml\"``.\n  [datakurre]\n\n- Fix issue with tile without body-tag breaking the tile composition (fixes\n  issues with some p.a.standardtiles returning only <html/> in some conditions)\n  [datakurre]\n\n- Fix issue where <![CDATA[...]]> block was quoted (and therefore broken) by\n  lxml serializer\n  [datakurre]\n\n- Fix issue where XML parser dropped head for layout with CRLF-endings\n  [datakurre]\n\n- Fix plone.app.blocks re-install to not reset existing plone.defaultSiteLayout\n  and plone.defaultAjaxLayout settings (by setting the values in a custom\n  setuphandler)\n  [datakurre]\n\n- Fix and update tests, PEP8\n  [gyst, datakurre, gforcada]\n\n- Fix to set the merging request flag before testing the merge results to allow\n  staticly placed tiles in content templates to be rendered properly.\n  [cewing]\n\n- Solve issue with VHM and tile rendering. Fixes\n  https://dev.plone.org/ticket/13581 [ericof]\n\n- Add z3c.autoinclude support\n  [cdw9, calvinhp]\n\n\n1.1 (2012-12-17)\n----------------\n\n- make sure to use correct url of tile\n  [vangheem]\n\n- handle not found errors while rendering tiles so layout\n  isn't borked\n  [vangheem]\n\n\n1.0 (2012-06-23)\n----------------\n\n- initial release.\n  [garbas]\n\n.. _`#27`: https://github.com/plone/plone.app.blocks/issues/27", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/plone/plone.app.blocks", "keywords": "plone blocks deco", "license": "GPLv2", "maintainer": "", "maintainer_email": "", "name": "plone.app.blocks", "package_url": "https://pypi.org/project/plone.app.blocks/", "platform": "", "project_url": "https://pypi.org/project/plone.app.blocks/", "project_urls": {"Homepage": "https://github.com/plone/plone.app.blocks"}, "release_url": "https://pypi.org/project/plone.app.blocks/4.3.2/", "requires_dist": null, "requires_python": "", "summary": "Implements the in-Plone blocks rendering process", "version": "4.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://travis-ci.org/plone/plone.app.blocks\" rel=\"nofollow\"><img alt=\"Travis CI badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bd34dfb93a6eb41cc076ce0282ec13f11e8fbb93/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f706c6f6e652f706c6f6e652e6170702e626c6f636b732e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/plone/plone.app.blocks\" rel=\"nofollow\"><img alt=\"Coveralls badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fdf011c3bb3cedee44543ac73feda90668bbe955/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f706c6f6e652f706c6f6e652e6170702e626c6f636b732f62616467652e706e673f6272616e63683d6d6173746572\"></a>\n<p>This package implements the \u2018blocks\u2019 rendering model,\nby providing several transform stages that hook into <tt>plone.transformchain</tt>.</p>\n<p>The rendering stages are:</p>\n<dl>\n<dt><tt>plone.app.blocks.parsexml</tt> (order 8000)</dt>\n<dd>Turns the response in a <tt>repoze.xmliter</tt> <tt>XMLSerializer</tt> object.\nThis is then used by the subsequent stages.\nIf the input is not HTML, the transformation is aborted.</dd>\n<dt><tt>plone.app.blocks.mergepanels</tt> (order 8100)</dt>\n<dd>Looks up the site layout and executes the panel merge algorithm.\nSets a request variable (\u2018plone.app.blocks.merged\u2019) to indicate that it has done its job.</dd>\n<dt><tt>plone.app.blocks.tiles</tt> (order 8500)</dt>\n<dd>Resolve tiles and place them directly into the merged layout.\nThis is the fallback for views that do not opt into <tt>ITilePageRendered</tt>.</dd>\n<dt><tt>plone.app.blocks.esirender</tt> (order 9900)</dt>\n<dd>Only executed if the request key <tt>plone.app.blocks.esi</tt> is set and its value is true,\nas would be the case if any ESI-rendered tiles are included and ESI rendering is enabled globally.\nThis step will serialise the response down to a string and perform some substitution to make ESI rendering work.</dd>\n</dl>\n<div id=\"site-layouts\">\n<h2>Site layouts</h2>\n<p>The package also registers the <tt>sitelayout</tt> <tt>plone.resource</tt> resource type,\nallowing site layouts to be created easily as static HTML files served from resource directories.\nThe URL to a site layout is typically something like:</p>\n<pre>/++sitelayout++my.layout/site.html\n</pre>\n<p>See <tt>plone.resource</tt> for more information about how to register resource directories.\nFor site layouts, the <tt>type</tt> of the resource directory is <tt>sitelayout</tt>.</p>\n<p>It is possible to provide a manifest file that gives a title, description and alternative default file for a site layout HTML file in a resource directory.\nTo create such a manifest, put a <tt>manifest.cfg</tt> file in the layout directory with the following structure:</p>\n<pre><span class=\"k\">[sitelayout]</span>\n<span class=\"na\">title</span> <span class=\"o\">=</span> <span class=\"s\">My layout title</span>\n<span class=\"na\">description</span> <span class=\"o\">=</span> <span class=\"s\">Some description</span>\n<span class=\"na\">file</span> <span class=\"o\">=</span> <span class=\"s\">some-html-file.html</span>\n</pre>\n<ul>\n<li>All keys are optional.</li>\n<li>The file defaults to <tt>site.html</tt>.</li>\n<li>Single manifest may contain multiple <tt>[sitelayout]</tt> sections.</li>\n</ul>\n<p>A vocabulary factory called <tt>plone.availableSiteLayouts</tt> is registered to allow lookup of all registered site layouts.\nThe terms in this vocabulary use the URL as a value,\nthe resource directory name as a token,\nand the title from the manifest (falling back on a sanitised version of the resource directory name) as the title.</p>\n<p>The current default site layout can be identified by the <tt>plone.registry</tt> key <tt>plone.defaultSiteLayout</tt>,\nwhich is set to <tt>None</tt> by default.\nTo always use the current site default, use:</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">html</span> <span class=\"na\">data-layout</span><span class=\"o\">=</span><span class=\"s\">\"./@@default-site-layout\"</span><span class=\"p\">&gt;</span>\n</pre>\n<p>The <tt><span class=\"pre\">@@default-site-layout</span></tt> view will render the current default site layout.</p>\n</div>\n<div id=\"content-layouts\">\n<h2>Content layouts</h2>\n<p>The package also registers the <tt>contentlayout</tt> <tt>plone.resource</tt> resource type,\nallowing shared content area layouts to be created easily as static HTML files served from resource directories.\nThe URL to a content layout is typically something like:</p>\n<pre>/++contentlayout++my.layout/content.html\n</pre>\n<p>See <tt>plone.resource</tt> for more information about how to register resource directories.\nFor site layouts, the <tt>type</tt> of the resource directory is <tt>contentlayout</tt>.</p>\n<p>It is possible to provide a manifest file that gives a title, description and alternative default file for a site layout HTML file in a resource directory.\nTo create such a manifest, put a <tt>manifest.cfg</tt> file in the layout directory with the following structure:</p>\n<pre><span class=\"k\">[contentlayout]</span>\n<span class=\"na\">title</span> <span class=\"o\">=</span> <span class=\"s\">My layout title</span>\n<span class=\"na\">description</span> <span class=\"o\">=</span> <span class=\"s\">Some description</span>\n<span class=\"na\">file</span> <span class=\"o\">=</span> <span class=\"s\">some-html-file.html</span>\n<span class=\"na\">screenshot</span> <span class=\"o\">=</span> <span class=\"s\">mylayout.png</span>\n<span class=\"na\">for</span> <span class=\"o\">=</span> <span class=\"s\">Document,Folder</span>\n<span class=\"na\">permission</span> <span class=\"o\">=</span> <span class=\"s\">cmf.ModifyPortalContent</span>\n</pre>\n<ul>\n<li>All keys are optional.</li>\n<li>Value for key <tt>file</tt> defaults to <tt>content.html</tt>.</li>\n<li>Single manifest may contain multiple <tt>[contentlayout]</tt> sections.</li>\n<li>Values for keys <tt>for</tt> and <tt>permission</tt> are only for advisory and may not\nbe enforced.</li>\n</ul>\n<p>A vocabulary factory called <tt>plone.availableContentLayouts</tt> is registered to allow lookup of all registered content layouts.\nThe terms in this vocabulary use the URL as a value,\nthe resource directory name as a token,\nand the title from the manifest (falling back on a sanitised version of the resource directory name) as the title.</p>\n<p>The default content layout can be identified by the <tt>plone.registry</tt> key <tt>plone.app.blocks.default_layout</tt>,\nand the default content layout for some specific content type with key <tt>plone.app.blocks.default_layout.my_type</tt>.\nThe default content layout is supported by the built-in <tt>layout_view</tt> browser view for content with <tt>ILayoutAware</tt> behavior.</p>\n</div>\n<div id=\"ilayoutaware-behavior\">\n<h2>ILayoutAware behavior</h2>\n<p>It is possible for the default site layout to be overridden per section,\nby having parent objects provide or be adaptable to <tt>plone.app.blocks.layoutbehavior.ILayoutAware</tt>.\nAs the module name implies, this interface can be used as a <tt>plone.behavior</tt> behavior,\nbut it can also be implemented directly or used as a standard adapter.</p>\n<p>The <tt>ILayoutAware</tt> interface defines three properties:</p>\n<dl>\n<dt><tt>content</tt></dt>\n<dd>which contains the body of the page to be rendered.</dd>\n<dt><tt>contentLayout</tt></dt>\n<dd>which contains the path to the selected static content layout,\nwhich is used instead of <tt>content</tt> when set.</dd>\n<dt><tt>pageSiteLayout</tt></dt>\n<dd>which contains the path to the site layout to be used for the given page.\nIt can be <tt>None</tt> if the default is to be used.</dd>\n<dt><tt>sectionSiteLayout</tt></dt>\n<dd>which contains the path to the site layout to be used for pages <em>underneath</em> the given page (but not for the page itself).\nAgain, it can be <tt>None</tt> if the default is to be used.</dd>\n</dl>\n<p>To make use of the page site layout, use the following:</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">html</span> <span class=\"na\">data-layout</span><span class=\"o\">=</span><span class=\"s\">\"./@@default-site-layout\"</span><span class=\"p\">&gt;</span>\n</pre>\n<p>See <tt>rendering.rst</tt> for detailed examples of how the processing is applied,\nand <tt>esi.rst</tt> for details about how Edge Side Includes can be supported.</p>\n</div>\n<div id=\"blocks-rendering-in-detail\">\n<h2>Blocks rendering in detail</h2>\n<p>This doctest illustrates the blocks rendering process.\nAt a high level, it consists of the following steps:</p>\n<ol>\n<li><p>Obtain the content page, an HTML document.</p>\n</li>\n<li><p>Look for a site layout link in the content page.</p>\n<p>This takes the form of an attribute on the html tag like <tt>&lt;html <span class=\"pre\">data-layout=\"...\"</span> /&gt;</tt>.</p>\n<p>Usually, the site layout URL will refer to a resource in a resource  directory of type <tt>sitelayout</tt>,\ne.g. <tt><span class=\"pre\">/++sitelayout++foo/site.html</span></tt>,\nalthough the layout can be any URL.\nAn absolute path like this will be adjusted so that it is always relative to the Plone site root.</p>\n</li>\n<li><p>Resolve and obtain the site layout.</p>\n<p>This is another HTML document.</p>\n</li>\n<li><p>Extract panels from the site layout.</p>\n<p>A panel is an element (usually a <tt>&lt;div /&gt;</tt>) in the layout page with a data-panel attribute,\nfor example: <tt>&lt;div <span class=\"pre\">data-panel=\"panel1\"</span> /&gt;</tt>.\nThe attribute specifies an id which <em>may</em> be used in the content page.</p>\n</li>\n<li><p>Merge panels.</p>\n<p>This is the process which applies the layout to the unstyled page.\nAll panels in the layout page that have a matching element in the content page are replaced by the content page element.\nThe rest of the content page is discarded.</p>\n</li>\n<li><p>Resolve and obtain tiles.</p>\n<p>A tile is a placeholder element in the page which will be replaced by the contents of a document referenced by a URL.</p>\n<p>A tile is identified by a placeholder element with a <tt><span class=\"pre\">data-tile</span></tt> attribute containing the tile URL.</p>\n<p>Note that at this point, panel merging has taken place,\nso if a panel in the content page contains tiles, they will be carried over into the merge page.\nAlso note that it is possible to have tiles outside of panels - the two concepts are not directly related.</p>\n<p>The <tt>plone.tiles</tt> package provides a framework for writing tiles,\nalthough in reality a tile can be any HTML page.</p>\n</li>\n<li><p>Place tiles into the page.</p>\n<p>The tile should resolve to a full HTML document.\nAny content found in the <tt>&lt;head /&gt;</tt> of the tile content will be merged into the <tt>&lt;head /&gt;</tt> of the rendered content.\nThe contents of the <tt>&lt;body /&gt;</tt> of the tile content are put into the rendered document at the tile placeholder.</p>\n</li>\n</ol>\n<div id=\"rendering-step-by-step\">\n<h3>Rendering step-by-step</h3>\n<p>Let us now illustrate the rendering process.\nWe\u2019ll need a few variables defined first:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">plone.testing.z2</span> <span class=\"kn\">import</span> <span class=\"n\">Browser</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">transaction</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">layer</span><span class=\"p\">[</span><span class=\"s1\">'app'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">portal</span> <span class=\"o\">=</span> <span class=\"n\">layer</span><span class=\"p\">[</span><span class=\"s1\">'portal'</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">browser</span> <span class=\"o\">=</span> <span class=\"n\">Browser</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">handleErrors</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n</pre>\n<div id=\"creating-a-site-layout\">\n<h4>Creating a site layout</h4>\n<p>The most common approach for managing site layouts is to use a resource registered using a <tt>plone.resource</tt> directory of type <tt>sitelayout</tt>,\nand then use the <tt><span class=\"pre\">@@default-site-layout</span></tt> view to reference the content.\nWe will illustrate this below, but it is important to realise that <tt>plone.app.blocks</tt> works by post-processing responses rendered by Zope.\nThe content and layout pages could just as easily be created by views of content objects, or even resources external to Zope/Plone.</p>\n<p>First, we will create a resource representing the site layout and its panels.\nThis includes some resources and other elements in the <tt>&lt;head /&gt;</tt>,\n<tt>&lt;link /&gt;</tt> tags which identify tile placeholders and panels,\nas well as content inside and outside panels.\nThe tiles in this case are managed by <tt>plone.tiles</tt>, and are both of the same type.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">layoutHTML</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span><span class=\"se\">\\\n</span><span class=\"s2\">... &lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n... &lt;html&gt;\n...     &lt;head&gt;\n...         &lt;title&gt;Layout title&lt;/title&gt;\n...         &lt;link rel=\"stylesheet\" href=\"/layout/style.css\" /&gt;\n...         &lt;script type=\"text/javascript\"&gt;alert('layout');&lt;/script&gt;\n...\n...         &lt;style type=\"text/css\"&gt;\n...         div {\n...             margin: 5px;\n...             border: dotted black 1px;\n...             padding: 5px;\n...         }\n...         &lt;/style&gt;\n...\n...         &lt;link rel=\"stylesheet\" data-tile=\"./@@test.tile_nobody/tile_css\" /&gt;\n...     &lt;/head&gt;\n...     &lt;body&gt;\n...         &lt;h1&gt;Welcome!&lt;/h1&gt;\n...         &lt;div data-panel=\"panel1\"&gt;Layout panel 1&lt;/div&gt;\n...         &lt;div data-panel=\"panel2\"&gt;\n...             Layout panel 2\n...             &lt;div id=\"layout-tile1\" data-tile=\"./@@test.tile1/tile1\"&gt;Layout tile 1 placeholder&lt;/div&gt;\n...         &lt;/div&gt;\n...         &lt;div data-panel=\"panel3\"&gt;\n...             Layout panel 3\n...             &lt;div id=\"layout-tile2\" data-tile=\"./@@test.tile1/tile2\"&gt;Layout tile 2 placeholder&lt;/div&gt;\n...         &lt;/div&gt;\n...     &lt;/body&gt;\n... &lt;/html&gt;\n... \"\"\"</span>\n</pre>\n<p>We can create an in-ZODB resource directory of type <tt>sitelayout</tt> that contains this layout.\nAnother way would be to register a resource directory in a package using ZCML, or use a global resource directory.\nSee <tt>plone.resource</tt> for more details.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">Products.CMFCore.utils</span> <span class=\"kn\">import</span> <span class=\"n\">getToolByName</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">Products.BTreeFolder2.BTreeFolder2</span> <span class=\"kn\">import</span> <span class=\"n\">BTreeFolder2</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">OFS.Image</span> <span class=\"kn\">import</span> <span class=\"n\">File</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">six</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">resources</span> <span class=\"o\">=</span> <span class=\"n\">getToolByName</span><span class=\"p\">(</span><span class=\"n\">portal</span><span class=\"p\">,</span> <span class=\"s1\">'portal_resources'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">_setOb</span><span class=\"p\">(</span><span class=\"s1\">'sitelayout'</span><span class=\"p\">,</span> <span class=\"n\">BTreeFolder2</span><span class=\"p\">(</span><span class=\"s1\">'sitelayout'</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">resources</span><span class=\"p\">[</span><span class=\"s1\">'sitelayout'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_setOb</span><span class=\"p\">(</span><span class=\"s1\">'mylayout'</span><span class=\"p\">,</span> <span class=\"n\">BTreeFolder2</span><span class=\"p\">(</span><span class=\"s1\">'mylayout'</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">resources</span><span class=\"p\">[</span><span class=\"s1\">'sitelayout'</span><span class=\"p\">][</span><span class=\"s1\">'mylayout'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_setOb</span><span class=\"p\">(</span><span class=\"s1\">'site.html'</span><span class=\"p\">,</span> <span class=\"n\">File</span><span class=\"p\">(</span><span class=\"s1\">'site.html'</span><span class=\"p\">,</span> <span class=\"s1\">'site.html'</span><span class=\"p\">,</span> <span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">b</span><span class=\"p\">(</span><span class=\"n\">layoutHTML</span><span class=\"p\">)))</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">transaction</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n</pre>\n<p>This resource can now be accessed using the path <tt><span class=\"pre\">/++sitelayout++mylayout/site.html</span></tt>.\nLet\u2019s render it on its own to verify that.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">portal</span><span class=\"o\">.</span><span class=\"n\">absolute_url</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"s1\">'/++sitelayout++mylayout/site.html'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">contents</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"err\">!</span><span class=\"n\">DOCTYPE</span> <span class=\"n\">html</span> <span class=\"n\">PUBLIC</span> <span class=\"s2\">\"-//W3C//DTD XHTML 1.0 Transitional//EN\"</span> <span class=\"s2\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;</span><span class=\"n\">html</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">head</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">title</span><span class=\"o\">&gt;</span><span class=\"n\">Layout</span> <span class=\"n\">title</span><span class=\"o\">&lt;/</span><span class=\"n\">title</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">link</span> <span class=\"n\">rel</span><span class=\"o\">=</span><span class=\"s2\">\"stylesheet\"</span> <span class=\"n\">href</span><span class=\"o\">=</span><span class=\"s2\">\"/layout/style.css\"</span> <span class=\"o\">/&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">script</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"text/javascript\"</span><span class=\"o\">&gt;</span><span class=\"n\">alert</span><span class=\"p\">(</span><span class=\"s1\">'layout'</span><span class=\"p\">);</span><span class=\"o\">&lt;/</span><span class=\"n\">script</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;</span><span class=\"n\">BLANKLINE</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">style</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"text/css\"</span><span class=\"o\">&gt;</span>\n        <span class=\"n\">div</span> <span class=\"p\">{</span>\n            <span class=\"n\">margin</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"n\">px</span><span class=\"p\">;</span>\n            <span class=\"n\">border</span><span class=\"p\">:</span> <span class=\"n\">dotted</span> <span class=\"n\">black</span> <span class=\"mi\">1</span><span class=\"n\">px</span><span class=\"p\">;</span>\n            <span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"n\">px</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">style</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;</span><span class=\"n\">BLANKLINE</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">link</span> <span class=\"n\">rel</span><span class=\"o\">=</span><span class=\"s2\">\"stylesheet\"</span> <span class=\"n\">data</span><span class=\"o\">-</span><span class=\"n\">tile</span><span class=\"o\">=</span><span class=\"s2\">\"./@@test.tile_nobody/tile_css\"</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;/</span><span class=\"n\">head</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">body</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">h1</span><span class=\"o\">&gt;</span><span class=\"n\">Welcome</span><span class=\"err\">!</span><span class=\"o\">&lt;/</span><span class=\"n\">h1</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">div</span> <span class=\"n\">data</span><span class=\"o\">-</span><span class=\"n\">panel</span><span class=\"o\">=</span><span class=\"s2\">\"panel1\"</span><span class=\"o\">&gt;</span><span class=\"n\">Layout</span> <span class=\"n\">panel</span> <span class=\"mi\">1</span><span class=\"o\">&lt;/</span><span class=\"n\">div</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">div</span> <span class=\"n\">data</span><span class=\"o\">-</span><span class=\"n\">panel</span><span class=\"o\">=</span><span class=\"s2\">\"panel2\"</span><span class=\"o\">&gt;</span>\n            <span class=\"n\">Layout</span> <span class=\"n\">panel</span> <span class=\"mi\">2</span>\n            <span class=\"o\">&lt;</span><span class=\"n\">div</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"layout-tile1\"</span> <span class=\"n\">data</span><span class=\"o\">-</span><span class=\"n\">tile</span><span class=\"o\">=</span><span class=\"s2\">\"./@@test.tile1/tile1\"</span><span class=\"o\">&gt;</span><span class=\"n\">Layout</span> <span class=\"n\">tile</span> <span class=\"mi\">1</span> <span class=\"n\">placeholder</span><span class=\"o\">&lt;/</span><span class=\"n\">div</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">div</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">div</span> <span class=\"n\">data</span><span class=\"o\">-</span><span class=\"n\">panel</span><span class=\"o\">=</span><span class=\"s2\">\"panel3\"</span><span class=\"o\">&gt;</span>\n            <span class=\"n\">Layout</span> <span class=\"n\">panel</span> <span class=\"mi\">3</span>\n            <span class=\"o\">&lt;</span><span class=\"n\">div</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"layout-tile2\"</span> <span class=\"n\">data</span><span class=\"o\">-</span><span class=\"n\">tile</span><span class=\"o\">=</span><span class=\"s2\">\"./@@test.tile1/tile2\"</span><span class=\"o\">&gt;</span><span class=\"n\">Layout</span> <span class=\"n\">tile</span> <span class=\"mi\">2</span> <span class=\"n\">placeholder</span><span class=\"o\">&lt;/</span><span class=\"n\">div</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">div</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;/</span><span class=\"n\">body</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">html</span><span class=\"o\">&gt;</span>\n</pre>\n<p>We can now set this as the site-wide default layout by setting the registry key <tt>plone.defaultSiteLayout</tt>.\nThere are two indirection views, <tt><span class=\"pre\">@@default-site-layout</span></tt> and <tt><span class=\"pre\">@@page-site-layout</span></tt>, that respect this registry setting.\nBy using one of these views to reference the layout of a given page, we can manage the default site layout centrally.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zope.component</span> <span class=\"kn\">import</span> <span class=\"n\">getUtility</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">plone.registry.interfaces</span> <span class=\"kn\">import</span> <span class=\"n\">IRegistry</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">registry</span> <span class=\"o\">=</span> <span class=\"n\">getUtility</span><span class=\"p\">(</span><span class=\"n\">IRegistry</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">registry</span><span class=\"p\">[</span><span class=\"s1\">'plone.defaultSiteLayout'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">'/++sitelayout++mylayout/site.html'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">transaction</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"creating-a-page-layout-and-tiles\">\n<h4>Creating a page layout and tiles</h4>\n<p>Next, we will define the markup of a content page that uses this layout via the <tt><span class=\"pre\">@@default-site-layout</span></tt> indirection view:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pageHTML</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span><span class=\"se\">\\\n</span><span class=\"s2\">... &lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n... &lt;html data-layout=\"./@@default-site-layout\"&gt;\n...     &lt;body&gt;\n...         &lt;h1&gt;Welcome!&lt;/h1&gt;\n...         &lt;div data-panel=\"panel1\"&gt;\n...             Page panel 1\n...             &lt;div id=\"page-tile2\" data-tile=\"./@@test.tile1/tile2?magicNumber:int=2\"&gt;Page tile 2 placeholder&lt;/div&gt;\n...         &lt;/div&gt;\n...         &lt;div data-panel=\"panel2\"&gt;\n...             Page panel 2\n...             &lt;div id=\"page-tile3\" data-tile=\"./@@test.tile1/tile3\"&gt;Page tile 3 placeholder&lt;/div&gt;\n...         &lt;/div&gt;\n...         &lt;div data-panel=\"panel4\"&gt;\n...             Page panel 4 (ignored)\n...             &lt;div id=\"page-tile4\" data-tile=\"./@@test.tile1/tile4\"&gt;Page tile 4 placeholder&lt;/div&gt;\n...         &lt;/div&gt;\n...     &lt;/body&gt;\n... &lt;/html&gt;\n... \"\"\"</span>\n</pre>\n<p>We then register a view that simply return this HTML,\nand a tile type which we can use to test tile rendering.</p>\n<p>We do this in code for the purposes of the test,\nand we have to apply security because we will shortly render those pages using the test publisher.\nIn real life, these could be registered using the standard <tt>&lt;browser:page /&gt;</tt> and <tt>&lt;plone:tile /&gt;</tt> directives.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zope.publisher.browser</span> <span class=\"kn\">import</span> <span class=\"n\">BrowserView</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zope.interface</span> <span class=\"kn\">import</span> <span class=\"n\">Interface</span><span class=\"p\">,</span> <span class=\"n\">implementer</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zope</span> <span class=\"kn\">import</span> <span class=\"n\">schema</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">plone.tiles</span> <span class=\"kn\">import</span> <span class=\"n\">Tile</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">plone.app.blocks.interfaces</span> <span class=\"kn\">import</span> <span class=\"n\">IBlocksTransformEnabled</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nd\">@implementer</span><span class=\"p\">(</span><span class=\"n\">IBlocksTransformEnabled</span><span class=\"p\">)</span>\n<span class=\"o\">...</span> <span class=\"k\">class</span> <span class=\"nc\">Page</span><span class=\"p\">(</span><span class=\"n\">BrowserView</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"vm\">__name__</span> <span class=\"o\">=</span> <span class=\"s1\">'test-page'</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"k\">return</span> <span class=\"n\">pageHTML</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">ITestTile</span><span class=\"p\">(</span><span class=\"n\">Interface</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"n\">magicNumber</span> <span class=\"o\">=</span> <span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">Int</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"Magic number\"</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">TestTile</span><span class=\"p\">(</span><span class=\"n\">Tile</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"vm\">__name__</span> <span class=\"o\">=</span> <span class=\"s1\">'test.tile1'</span> <span class=\"c1\"># normally set by ZCML handler</span>\n<span class=\"o\">...</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"c1\"># fake a page template to keep things simple in the test</span>\n<span class=\"o\">...</span>         <span class=\"k\">return</span> <span class=\"s2\">\"\"\"</span><span class=\"se\">\\\n</span><span class=\"s2\">... &lt;html&gt;\n...     &lt;head&gt;\n...         &lt;meta name=\"tile-name\" content=\"</span><span class=\"si\">%(name)s</span><span class=\"s2\">\" /&gt;\n...     &lt;/head&gt;\n...     &lt;body&gt;\n...         &lt;p&gt;\n...             This is a demo tile with id </span><span class=\"si\">%(name)s</span><span class=\"s2\">\n...         &lt;/p&gt;\n...         &lt;p&gt;\n...             Magic number: </span><span class=\"si\">%(number)d</span><span class=\"s2\">; Form: </span><span class=\"si\">%(form)s</span><span class=\"s2\">; Query string: </span><span class=\"si\">%(queryString)s</span><span class=\"s2\">; URL: </span><span class=\"si\">%(url)s</span><span class=\"s2\">\n...         &lt;/p&gt;\n...     &lt;/body&gt;\n... &lt;/html&gt;\"\"\"</span> <span class=\"o\">%</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'magicNumber'</span><span class=\"p\">]</span> <span class=\"ow\">or</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                   <span class=\"n\">form</span><span class=\"o\">=</span><span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()),</span> <span class=\"n\">queryString</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">[</span><span class=\"s1\">'QUERY_STRING'</span><span class=\"p\">],</span> <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">getURL</span><span class=\"p\">())</span>\n</pre>\n<p>Let\u2019s add another tile, this time only a head part.\nThis could for example be a tile that only needs to insert some CSS.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">TestTileNoBody</span><span class=\"p\">(</span><span class=\"n\">Tile</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"vm\">__name__</span> <span class=\"o\">=</span> <span class=\"s1\">'test.tile_nobody'</span>\n<span class=\"o\">...</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"k\">return</span> <span class=\"s2\">\"\"\"</span><span class=\"se\">\\\n</span><span class=\"s2\">... &lt;html&gt;\n...     &lt;head&gt;\n...         &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"tiled.css\" /&gt;\n...     &lt;/head&gt;\n... &lt;/html&gt;\"\"\"</span>\n</pre>\n<p>We register these views and tiles in the same way the ZCML handlers for <tt>&lt;browser:page /&gt;</tt> and <tt>&lt;plone:tile /&gt;</tt> would:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">plone.tiles.type</span> <span class=\"kn\">import</span> <span class=\"n\">TileType</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">AccessControl.security</span> <span class=\"kn\">import</span> <span class=\"n\">protectClass</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">App.class_init</span> <span class=\"kn\">import</span> <span class=\"n\">InitializeClass</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zope.component</span> <span class=\"kn\">import</span> <span class=\"n\">provideAdapter</span><span class=\"p\">,</span> <span class=\"n\">provideUtility</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zope.interface</span> <span class=\"kn\">import</span> <span class=\"n\">Interface</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">testTileType</span> <span class=\"o\">=</span> <span class=\"n\">TileType</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s1\">'test.tile1'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"Test tile\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"A tile used for testing\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">add_permission</span><span class=\"o\">=</span><span class=\"s2\">\"cmf.ManagePortal\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">view_permission</span><span class=\"o\">=</span><span class=\"s2\">\"zope2.View\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"n\">ITestTile</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">testTileTypeNoBody</span> <span class=\"o\">=</span> <span class=\"n\">TileType</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s1\">'test.tile_nobody'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"Test tile using only a header\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"Another tile used for testing\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">add_permission</span><span class=\"o\">=</span><span class=\"s2\">\"cmf.ManagePortal\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">view_permission</span><span class=\"o\">=</span><span class=\"s2\">\"zope2.View\"</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">protectClass</span><span class=\"p\">(</span><span class=\"n\">Page</span><span class=\"p\">,</span> <span class=\"s1\">'zope2.View'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">protectClass</span><span class=\"p\">(</span><span class=\"n\">TestTile</span><span class=\"p\">,</span> <span class=\"s1\">'zope2.View'</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">InitializeClass</span><span class=\"p\">(</span><span class=\"n\">Page</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">InitializeClass</span><span class=\"p\">(</span><span class=\"n\">TestTile</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">provideAdapter</span><span class=\"p\">(</span><span class=\"n\">Page</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">Interface</span><span class=\"p\">,</span> <span class=\"n\">Interface</span><span class=\"p\">,),</span> <span class=\"n\">Interface</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'test-page'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">provideAdapter</span><span class=\"p\">(</span><span class=\"n\">TestTile</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">Interface</span><span class=\"p\">,</span> <span class=\"n\">Interface</span><span class=\"p\">,),</span> <span class=\"n\">Interface</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'test.tile1'</span><span class=\"p\">,)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">provideAdapter</span><span class=\"p\">(</span><span class=\"n\">TestTileNoBody</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">Interface</span><span class=\"p\">,</span> <span class=\"n\">Interface</span><span class=\"p\">,),</span> <span class=\"n\">Interface</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'test.tile_nobody'</span><span class=\"p\">,)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">provideUtility</span><span class=\"p\">(</span><span class=\"n\">testTileType</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s1\">'test.tile1'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">provideUtility</span><span class=\"p\">(</span><span class=\"n\">testTileTypeNoBody</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s1\">'test.tile_nobody'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"rendering-the-page\">\n<h4>Rendering the page</h4>\n<p>We can now render the page.\nProvided <tt>plone.app.blocks</tt> is installed and working, it should perform its magic.\nWe make sure that Zope is in \u201cdevelopment mode\u201d to get pretty-printed output.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">portal</span><span class=\"o\">.</span><span class=\"n\">absolute_url</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"s1\">'/@@test-page'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">contents</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">'&lt;head&gt;&lt;meta'</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;head&gt;</span><span class=\"se\">\\n\\t</span><span class=\"s1\">&lt;meta'</span><span class=\"p\">))</span>\n<span class=\"o\">&lt;</span><span class=\"err\">!</span><span class=\"n\">DOCTYPE</span> <span class=\"n\">html</span> <span class=\"n\">PUBLIC</span> <span class=\"s2\">\"-//W3C//DTD XHTML 1.0 Transitional//EN\"</span> <span class=\"s2\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;</span><span class=\"n\">html</span> <span class=\"n\">xmlns</span><span class=\"o\">=</span><span class=\"s2\">\"http://www.w3.org/1999/xhtml\"</span><span class=\"o\">&gt;</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">head</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">meta</span> <span class=\"n\">http</span><span class=\"o\">-</span><span class=\"n\">equiv</span><span class=\"o\">=</span><span class=\"s2\">\"Content-Type\"</span> <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"s2\">\"text/html; charset=ASCII\"</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">title</span><span class=\"o\">&gt;</span><span class=\"n\">Layout</span> <span class=\"n\">title</span><span class=\"o\">&lt;/</span><span class=\"n\">title</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">link</span> <span class=\"n\">rel</span><span class=\"o\">=</span><span class=\"s2\">\"stylesheet\"</span> <span class=\"n\">href</span><span class=\"o\">=</span><span class=\"s2\">\"/layout/style.css\"</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">script</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"text/javascript\"</span><span class=\"o\">&gt;</span><span class=\"n\">alert</span><span class=\"p\">(</span><span class=\"s1\">'layout'</span><span class=\"p\">);</span><span class=\"o\">&lt;/</span><span class=\"n\">script</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">style</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"text/css\"</span><span class=\"o\">&gt;</span>\n        <span class=\"n\">div</span> <span class=\"p\">{</span>\n            <span class=\"n\">margin</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"n\">px</span><span class=\"p\">;</span>\n            <span class=\"n\">border</span><span class=\"p\">:</span> <span class=\"n\">dotted</span> <span class=\"n\">black</span> <span class=\"mi\">1</span><span class=\"n\">px</span><span class=\"p\">;</span>\n            <span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"n\">px</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">style</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">link</span> <span class=\"n\">rel</span><span class=\"o\">=</span><span class=\"s2\">\"stylesheet\"</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">\"text/css\"</span> <span class=\"n\">href</span><span class=\"o\">=</span><span class=\"s2\">\"tiled.css\"</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">meta</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"tile-name\"</span> <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"s2\">\"tile2\"</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">meta</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"tile-name\"</span> <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"s2\">\"tile3\"</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">meta</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"tile-name\"</span> <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"s2\">\"tile2\"</span> <span class=\"o\">/&gt;</span>\n  <span class=\"o\">&lt;/</span><span class=\"n\">head</span><span class=\"o\">&gt;</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">body</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">h1</span><span class=\"o\">&gt;</span><span class=\"n\">Welcome</span><span class=\"err\">!</span><span class=\"o\">&lt;/</span><span class=\"n\">h1</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">div</span> <span class=\"n\">data</span><span class=\"o\">-</span><span class=\"n\">panel</span><span class=\"o\">=</span><span class=\"s2\">\"panel1\"</span><span class=\"o\">&gt;</span>\n            <span class=\"n\">Page</span> <span class=\"n\">panel</span> <span class=\"mi\">1</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n            <span class=\"n\">This</span> <span class=\"ow\">is</span> <span class=\"n\">a</span> <span class=\"n\">demo</span> <span class=\"n\">tile</span> <span class=\"k\">with</span> <span class=\"nb\">id</span> <span class=\"n\">tile2</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n            <span class=\"n\">Magic</span> <span class=\"n\">number</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">;</span> <span class=\"n\">Form</span><span class=\"p\">:</span> <span class=\"p\">[(</span><span class=\"s1\">'magicNumber'</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)];</span> <span class=\"n\">Query</span> <span class=\"n\">string</span><span class=\"p\">:</span> <span class=\"n\">magicNumber</span><span class=\"p\">:</span><span class=\"nb\">int</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">;</span> <span class=\"n\">URL</span><span class=\"p\">:</span> <span class=\"n\">http</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">nohost</span><span class=\"o\">/</span><span class=\"n\">plone</span><span class=\"o\">/@</span><span class=\"nd\">@test</span><span class=\"o\">.</span><span class=\"n\">tile1</span><span class=\"o\">/</span><span class=\"n\">tile2</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">div</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">div</span> <span class=\"n\">data</span><span class=\"o\">-</span><span class=\"n\">panel</span><span class=\"o\">=</span><span class=\"s2\">\"panel2\"</span><span class=\"o\">&gt;</span>\n            <span class=\"n\">Page</span> <span class=\"n\">panel</span> <span class=\"mi\">2</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n            <span class=\"n\">This</span> <span class=\"ow\">is</span> <span class=\"n\">a</span> <span class=\"n\">demo</span> <span class=\"n\">tile</span> <span class=\"k\">with</span> <span class=\"nb\">id</span> <span class=\"n\">tile3</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n            <span class=\"n\">Magic</span> <span class=\"n\">number</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"n\">Form</span><span class=\"p\">:</span> <span class=\"p\">[];</span> <span class=\"n\">Query</span> <span class=\"n\">string</span><span class=\"p\">:</span> <span class=\"p\">;</span> <span class=\"n\">URL</span><span class=\"p\">:</span> <span class=\"n\">http</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">nohost</span><span class=\"o\">/</span><span class=\"n\">plone</span><span class=\"o\">/@</span><span class=\"nd\">@test</span><span class=\"o\">.</span><span class=\"n\">tile1</span><span class=\"o\">/</span><span class=\"n\">tile3</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">div</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">div</span> <span class=\"n\">data</span><span class=\"o\">-</span><span class=\"n\">panel</span><span class=\"o\">=</span><span class=\"s2\">\"panel3\"</span><span class=\"o\">&gt;</span>\n            <span class=\"n\">Layout</span> <span class=\"n\">panel</span> <span class=\"mi\">3</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n            <span class=\"n\">This</span> <span class=\"ow\">is</span> <span class=\"n\">a</span> <span class=\"n\">demo</span> <span class=\"n\">tile</span> <span class=\"k\">with</span> <span class=\"nb\">id</span> <span class=\"n\">tile2</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n            <span class=\"n\">Magic</span> <span class=\"n\">number</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"n\">Form</span><span class=\"p\">:</span> <span class=\"p\">[];</span> <span class=\"n\">Query</span> <span class=\"n\">string</span><span class=\"p\">:</span> <span class=\"p\">;</span> <span class=\"n\">URL</span><span class=\"p\">:</span> <span class=\"n\">http</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">nohost</span><span class=\"o\">/</span><span class=\"n\">plone</span><span class=\"o\">/@</span><span class=\"nd\">@test</span><span class=\"o\">.</span><span class=\"n\">tile1</span><span class=\"o\">/</span><span class=\"n\">tile2</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">div</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;/</span><span class=\"n\">body</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">html</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;</span><span class=\"n\">BLANKLINE</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Notice how:</p>\n<ul>\n<li>Panels from the page have been merged into the layout, replacing the corresponding panels there.</li>\n<li>The <tt>&lt;head /&gt;</tt> sections of the two documents have been merged</li>\n<li>The rest of the layout page is intact</li>\n<li>The rest of the content page is discarded</li>\n<li>The tiles have been rendered, replacing the relevant placeholders</li>\n<li>The <tt>&lt;head /&gt;</tt> section from the rendered tiles has been merged into the <tt>&lt;head /&gt;</tt> of the output page.</li>\n</ul>\n</div>\n<div id=\"using-vhm\">\n<h4>Using VHM</h4>\n<p>Make sure to have a clean browser:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">browser</span> <span class=\"o\">=</span> <span class=\"n\">Browser</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">handleErrors</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n</pre>\n<p>Using Virtual Host Monster we rewrite the url to consider all content being under <tt>/</tt>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">vhm_url</span> <span class=\"o\">=</span> <span class=\"s1\">'http://nohost/VirtualHostBase/http/nohost:80/plone/VirtualHostRoot/'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">vhm_url</span> <span class=\"o\">+</span> <span class=\"s1\">'/@@test-page'</span><span class=\"p\">)</span>\n</pre>\n<p>Tiles should return an url according to this:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'Magic number: -1; Form: []; Query string: ; URL: http://nohost/@@test.tile1/tile2'</span> <span class=\"ow\">in</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">contents</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>Now we deal with _vh_* arguments. We expect our site to be under a subdir with id <em>subplone</em>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">vhm_url</span> <span class=\"o\">=</span> <span class=\"s1\">'http://nohost/VirtualHostBase/http/nohost:80/plone/VirtualHostRoot/_vh_subplone'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">vhm_url</span> <span class=\"o\">+</span> <span class=\"s1\">'/@@test-page'</span><span class=\"p\">)</span>\n</pre>\n<p>Tiles should return an url according to this:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'Magic number: -1; Form: []; Query string: ; URL: http://nohost/subplone/@@test.tile1/tile2'</span> <span class=\"ow\">in</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">contents</span>\n<span class=\"kc\">True</span>\n</pre>\n</div>\n</div>\n</div>\n<div id=\"esi-rendering\">\n<h2>ESI rendering</h2>\n<p>Blocks supports rendering of tiles for Edge Side Includes (ESI).\nA tile will be rendered to ESI provided that:</p>\n<ul>\n<li>The tile itself is marked with the <tt>IESIRendered</tt> marker interface.\nSee <a href=\"http://pypi.python.org/pypi/plone.tiles\" rel=\"nofollow\">plone.tiles</a> for more details.</li>\n<li>The <tt>plone.app.blocks.interfaces.IBlocksSettings.esi</tt> record in the registry is set to True.\nIt is False by default.\nTo switch this through-the-web, you can visit the configuration registry control panel in Plone.</li>\n</ul>\n<p>Note that if a tile is rendered using ESI, it\u2019s &lt;head /&gt; contents are ignored, instead of being merged into the final page.\nThat is, only the <tt><span class=\"pre\">@@esi-body</span></tt> view form <a href=\"http://pypi.python.org/pypi/plone.tiles\" rel=\"nofollow\">plone.tiles</a> is used by default.</p>\n<p>An ESI link looks like this:</p>\n<pre><span class=\"nt\">&lt;esi:include</span> <span class=\"na\">src=</span><span class=\"s\">\"http://example.com/plone/@@some.tile/tile-1/@@esi-body?param1=value1\"</span> <span class=\"nt\">/&gt;</span>\n</pre>\n<p>A fronting server such as Varnish will be able to load this on demand and\ncompose the page from fragments that may be cached individually.</p>\n<div id=\"test-setup\">\n<h3>Test setup</h3>\n<p>Let\u2019s first register a two very simple tiles. One uses ESI, one does not.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">plone.tiles.esi</span> <span class=\"kn\">import</span> <span class=\"n\">ESITile</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">plone.tiles</span> <span class=\"kn\">import</span> <span class=\"n\">Tile</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">plone.tiles.type</span> <span class=\"kn\">import</span> <span class=\"n\">TileType</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">NonESITile</span><span class=\"p\">(</span><span class=\"n\">Tile</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"vm\">__name__</span> <span class=\"o\">=</span> <span class=\"s1\">'test.tile2'</span> <span class=\"c1\"># normally set by ZCML handler</span>\n<span class=\"o\">...</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"k\">return</span> <span class=\"s2\">\"\"\"</span><span class=\"se\">\\\n</span><span class=\"s2\">... &lt;html&gt;\n...     &lt;head&gt;\n...         &lt;meta name=\"tile-name\" content=\"</span><span class=\"si\">%(name)s</span><span class=\"s2\">\" /&gt;\n...     &lt;/head&gt;\n...     &lt;body&gt;\n...         &lt;p&gt;\n...             Non-ESI tile with query string </span><span class=\"si\">%(queryString)s</span><span class=\"s2\">\n...         &lt;/p&gt;\n...     &lt;/body&gt;\n... &lt;/html&gt;\"\"\"</span> <span class=\"o\">%</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">queryString</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">[</span><span class=\"s1\">'QUERY_STRING'</span><span class=\"p\">])</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">testTile2Type</span> <span class=\"o\">=</span> <span class=\"n\">TileType</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s1\">'test.tile2'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"Test tile 2\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"A tile used for testing\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">add_permission</span><span class=\"o\">=</span><span class=\"s2\">\"cmf.ManagePortal\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">view_permission</span><span class=\"o\">=</span><span class=\"s2\">\"zope2.View\"</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">SimpleESITile</span><span class=\"p\">(</span><span class=\"n\">ESITile</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"vm\">__name__</span> <span class=\"o\">=</span> <span class=\"s1\">'test.tile3'</span> <span class=\"c1\"># normally set by ZCML handler</span>\n<span class=\"o\">...</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"nf\">render</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"k\">return</span> <span class=\"s2\">\"\"\"</span><span class=\"se\">\\\n</span><span class=\"s2\">... &lt;html&gt;\n...     &lt;head&gt;\n...         &lt;meta name=\"tile-name\" content=\"</span><span class=\"si\">%(name)s</span><span class=\"s2\">\" /&gt;\n...     &lt;/head&gt;\n...     &lt;body&gt;\n...         &lt;p&gt;\n...             ESI tile with query string </span><span class=\"si\">%(queryString)s</span><span class=\"s2\">\n...         &lt;/p&gt;\n...     &lt;/body&gt;\n... &lt;/html&gt;\"\"\"</span> <span class=\"o\">%</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">queryString</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">[</span><span class=\"s1\">'QUERY_STRING'</span><span class=\"p\">])</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">testTile3Type</span> <span class=\"o\">=</span> <span class=\"n\">TileType</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s1\">'test.tile3'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"Test tile 3\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s2\">\"A tile used for testing\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">add_permission</span><span class=\"o\">=</span><span class=\"s2\">\"cmf.ManagePortal\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">view_permission</span><span class=\"o\">=</span><span class=\"s2\">\"zope2.View\"</span><span class=\"p\">)</span>\n</pre>\n<p>Register these in the same way that the ZCML handlers would, more or less.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">AccessControl.security</span> <span class=\"kn\">import</span> <span class=\"n\">protectClass</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">protectClass</span><span class=\"p\">(</span><span class=\"n\">NonESITile</span><span class=\"p\">,</span> <span class=\"s1\">'zope2.View'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">protectClass</span><span class=\"p\">(</span><span class=\"n\">SimpleESITile</span><span class=\"p\">,</span> <span class=\"s1\">'zope2.View'</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">App.class_init</span> <span class=\"kn\">import</span> <span class=\"n\">InitializeClass</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">InitializeClass</span><span class=\"p\">(</span><span class=\"n\">NonESITile</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">InitializeClass</span><span class=\"p\">(</span><span class=\"n\">SimpleESITile</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zope.component</span> <span class=\"kn\">import</span> <span class=\"n\">provideAdapter</span><span class=\"p\">,</span> <span class=\"n\">provideUtility</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zope.interface</span> <span class=\"kn\">import</span> <span class=\"n\">Interface</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">provideAdapter</span><span class=\"p\">(</span><span class=\"n\">NonESITile</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">Interface</span><span class=\"p\">,</span> <span class=\"n\">Interface</span><span class=\"p\">,),</span> <span class=\"n\">Interface</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'test.tile2'</span><span class=\"p\">,)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">provideUtility</span><span class=\"p\">(</span><span class=\"n\">testTile2Type</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s1\">'test.tile2'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">provideAdapter</span><span class=\"p\">(</span><span class=\"n\">SimpleESITile</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">Interface</span><span class=\"p\">,</span> <span class=\"n\">Interface</span><span class=\"p\">,),</span> <span class=\"n\">Interface</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'test.tile3'</span><span class=\"p\">,)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">provideUtility</span><span class=\"p\">(</span><span class=\"n\">testTile3Type</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"sa\">u</span><span class=\"s1\">'test.tile3'</span><span class=\"p\">)</span>\n</pre>\n<p>We will also register a simple layout and a simple page using these tiles.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">layoutHTML</span> <span class=\"o\">=</span> <span class=\"sa\">u</span><span class=\"s2\">\"\"\"</span><span class=\"se\">\\\n</span><span class=\"s2\">... &lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n... &lt;html&gt;\n...     &lt;head&gt;\n...         &lt;title&gt;Layout title&lt;/title&gt;\n...     &lt;/head&gt;\n...     &lt;body&gt;\n...         &lt;h1&gt;Welcome!&lt;/h1&gt;\n...         &lt;div data-panel=\"panel1\"&gt;Content goes here&lt;/div&gt;\n...         &lt;div id=\"layout-non-esi-tile\" data-tile=\"./@@test.tile2/tile1\"&gt;Layout tile 1 placeholder&lt;/div&gt;\n...         &lt;div id=\"layout-esi-tile\" data-tile=\"./@@test.tile3/tile2\"&gt;Layout tile 2 placeholder&lt;/div&gt;\n...     &lt;/body&gt;\n... &lt;/html&gt;\n... \"\"\"</span>\n</pre>\n<p>To keep things simple, we\u2019ll skip the resource directory and layout indirection view,\ninstead just referencing a view containing the layout directly.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zope.publisher.browser</span> <span class=\"kn\">import</span> <span class=\"n\">BrowserView</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">Layout</span><span class=\"p\">(</span><span class=\"n\">BrowserView</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"vm\">__name__</span> <span class=\"o\">=</span> <span class=\"s1\">'test-layout'</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"k\">return</span> <span class=\"n\">layoutHTML</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">protectClass</span><span class=\"p\">(</span><span class=\"n\">Layout</span><span class=\"p\">,</span> <span class=\"s1\">'zope2.View'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">InitializeClass</span><span class=\"p\">(</span><span class=\"n\">Layout</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">provideAdapter</span><span class=\"p\">(</span><span class=\"n\">Layout</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">Interface</span><span class=\"p\">,</span> <span class=\"n\">Interface</span><span class=\"p\">,),</span> <span class=\"n\">Interface</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'test-layout'</span><span class=\"p\">,)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pageHTML</span> <span class=\"o\">=</span> <span class=\"sa\">u</span><span class=\"s2\">\"\"\"</span><span class=\"se\">\\\n</span><span class=\"s2\">... &lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n... &lt;html data-layout=\"./@@test-layout\"&gt;\n...     &lt;body&gt;\n...         &lt;div data-panel=\"panel1\"&gt;\n...             &lt;div id=\"page-non-esi-tile\" data-tile=\"./@@test.tile2/tile3?foo=bar\"&gt;Page tile 3 placeholder&lt;/div&gt;\n...             &lt;div id=\"page-esi-tile\" data-tile=\"./@@test.tile3/tile4?foo=bar\"&gt;Page tile 4 placeholder&lt;/div&gt;\n...         &lt;/div&gt;\n...     &lt;/body&gt;\n... &lt;/html&gt;\n... \"\"\"</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zope.interface</span> <span class=\"kn\">import</span> <span class=\"n\">implementer</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">plone.app.blocks.interfaces</span> <span class=\"kn\">import</span> <span class=\"n\">IBlocksTransformEnabled</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nd\">@implementer</span><span class=\"p\">(</span><span class=\"n\">IBlocksTransformEnabled</span><span class=\"p\">)</span>\n<span class=\"o\">...</span> <span class=\"k\">class</span> <span class=\"nc\">Page</span><span class=\"p\">(</span><span class=\"n\">BrowserView</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"vm\">__name__</span> <span class=\"o\">=</span> <span class=\"s1\">'test-page'</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"k\">return</span> <span class=\"n\">pageHTML</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">protectClass</span><span class=\"p\">(</span><span class=\"n\">Page</span><span class=\"p\">,</span> <span class=\"s1\">'zope2.View'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">InitializeClass</span><span class=\"p\">(</span><span class=\"n\">Page</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">provideAdapter</span><span class=\"p\">(</span><span class=\"n\">Page</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">Interface</span><span class=\"p\">,</span> <span class=\"n\">Interface</span><span class=\"p\">,),</span> <span class=\"n\">Interface</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'test-page'</span><span class=\"p\">,)</span>\n</pre>\n</div>\n<div id=\"esi-disabled\">\n<h3>ESI disabled</h3>\n<p>We first render the page without enabling ESI.\nThe ESI-capable tiles should be rendered as normal.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">plone.testing.z2</span> <span class=\"kn\">import</span> <span class=\"n\">Browser</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">layer</span><span class=\"p\">[</span><span class=\"s1\">'app'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">browser</span> <span class=\"o\">=</span> <span class=\"n\">Browser</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">handleErrors</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">portal</span> <span class=\"o\">=</span> <span class=\"n\">layer</span><span class=\"p\">[</span><span class=\"s1\">'portal'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">portal</span><span class=\"o\">.</span><span class=\"n\">absolute_url</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"s1\">'/@@test-page'</span><span class=\"p\">)</span>\n</pre>\n<p>Some cleanup is needed to cover lxml platform discrepancies\u2026</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">contents</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">'&lt;head&gt;&lt;meta'</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;head&gt;</span><span class=\"se\">\\n\\t</span><span class=\"s1\">&lt;meta'</span><span class=\"p\">))</span>\n<span class=\"o\">&lt;</span><span class=\"err\">!</span><span class=\"n\">DOCTYPE</span> <span class=\"n\">html</span> <span class=\"n\">PUBLIC</span> <span class=\"s2\">\"-//W3C//DTD XHTML 1.0 Transitional//EN\"</span> <span class=\"s2\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;</span><span class=\"n\">html</span> <span class=\"n\">xmlns</span><span class=\"o\">=</span><span class=\"s2\">\"http://www.w3.org/1999/xhtml\"</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">head</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">meta</span> <span class=\"n\">http</span><span class=\"o\">-</span><span class=\"n\">equiv</span><span class=\"o\">=</span><span class=\"s2\">\"Content-Type\"</span> <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"s2\">\"text/html; charset=ASCII\"</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">title</span><span class=\"o\">&gt;</span><span class=\"n\">Layout</span> <span class=\"n\">title</span><span class=\"o\">&lt;/</span><span class=\"n\">title</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">meta</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"tile-name\"</span> <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"s2\">\"tile3\"</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">meta</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"tile-name\"</span> <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"s2\">\"tile4\"</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">meta</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"tile-name\"</span> <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"s2\">\"tile1\"</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">meta</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"tile-name\"</span> <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"s2\">\"tile2\"</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;/</span><span class=\"n\">head</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">body</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">h1</span><span class=\"o\">&gt;</span><span class=\"n\">Welcome</span><span class=\"err\">!</span><span class=\"o\">&lt;/</span><span class=\"n\">h1</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">div</span> <span class=\"n\">data</span><span class=\"o\">-</span><span class=\"n\">panel</span><span class=\"o\">=</span><span class=\"s2\">\"panel1\"</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n            <span class=\"n\">Non</span><span class=\"o\">-</span><span class=\"n\">ESI</span> <span class=\"n\">tile</span> <span class=\"k\">with</span> <span class=\"n\">query</span> <span class=\"n\">string</span> <span class=\"n\">foo</span><span class=\"o\">=</span><span class=\"n\">bar</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n            <span class=\"n\">ESI</span> <span class=\"n\">tile</span> <span class=\"k\">with</span> <span class=\"n\">query</span> <span class=\"n\">string</span> <span class=\"n\">foo</span><span class=\"o\">=</span><span class=\"n\">bar</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">div</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n            <span class=\"n\">Non</span><span class=\"o\">-</span><span class=\"n\">ESI</span> <span class=\"n\">tile</span> <span class=\"k\">with</span> <span class=\"n\">query</span> <span class=\"n\">string</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n            <span class=\"n\">ESI</span> <span class=\"n\">tile</span> <span class=\"k\">with</span> <span class=\"n\">query</span> <span class=\"n\">string</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;/</span><span class=\"n\">body</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">html</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;</span><span class=\"n\">BLANKLINE</span><span class=\"o\">&gt;</span>\n</pre>\n</div>\n<div id=\"esi-enabled\">\n<h3>ESI enabled</h3>\n<p>We can now enable ESI. This could be done using GenericSetup (with the\n<tt>registry.xml</tt> import step), or through the configuration registry\ncontrol panel. In code, it is done like so:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zope.component</span> <span class=\"kn\">import</span> <span class=\"n\">getUtility</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">plone.registry.interfaces</span> <span class=\"kn\">import</span> <span class=\"n\">IRegistry</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">plone.app.blocks.interfaces</span> <span class=\"kn\">import</span> <span class=\"n\">IBlocksSettings</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">registry</span> <span class=\"o\">=</span> <span class=\"n\">getUtility</span><span class=\"p\">(</span><span class=\"n\">IRegistry</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">registry</span><span class=\"o\">.</span><span class=\"n\">forInterface</span><span class=\"p\">(</span><span class=\"n\">IBlocksSettings</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">esi</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">transaction</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">transaction</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n</pre>\n<p>We can now perform the same rendering again. This time, the ESI-capable\ntiles should be rendered as ESI links. See <a href=\"http://pypi.python.org/pypi/plone.tiles\" rel=\"nofollow\">plone.tiles</a> for more details.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">portal</span><span class=\"o\">.</span><span class=\"n\">absolute_url</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"s1\">'/@@test-page'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">contents</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">'&lt;head&gt;&lt;meta'</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;head&gt;</span><span class=\"se\">\\n\\t</span><span class=\"s1\">&lt;meta'</span><span class=\"p\">))</span>\n<span class=\"o\">&lt;</span><span class=\"err\">!</span><span class=\"n\">DOCTYPE</span> <span class=\"n\">html</span> <span class=\"n\">PUBLIC</span> <span class=\"s2\">\"-//W3C//DTD XHTML 1.0 Transitional//EN\"</span> <span class=\"s2\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;</span><span class=\"n\">html</span> <span class=\"n\">xmlns</span><span class=\"p\">:</span><span class=\"n\">esi</span><span class=\"o\">=</span><span class=\"s2\">\"http://www.edge-delivery.org/esi/1.0\"</span> <span class=\"n\">xmlns</span><span class=\"o\">=</span><span class=\"s2\">\"http://www.w3.org/1999/xhtml\"</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">head</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">meta</span> <span class=\"n\">http</span><span class=\"o\">-</span><span class=\"n\">equiv</span><span class=\"o\">=</span><span class=\"s2\">\"Content-Type\"</span> <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"s2\">\"text/html; charset=ASCII\"</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">title</span><span class=\"o\">&gt;</span><span class=\"n\">Layout</span> <span class=\"n\">title</span><span class=\"o\">&lt;/</span><span class=\"n\">title</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">meta</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"tile-name\"</span> <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"s2\">\"tile3\"</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">meta</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"tile-name\"</span> <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"s2\">\"tile1\"</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;/</span><span class=\"n\">head</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">body</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">h1</span><span class=\"o\">&gt;</span><span class=\"n\">Welcome</span><span class=\"err\">!</span><span class=\"o\">&lt;/</span><span class=\"n\">h1</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">div</span> <span class=\"n\">data</span><span class=\"o\">-</span><span class=\"n\">panel</span><span class=\"o\">=</span><span class=\"s2\">\"panel1\"</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n            <span class=\"n\">Non</span><span class=\"o\">-</span><span class=\"n\">ESI</span> <span class=\"n\">tile</span> <span class=\"k\">with</span> <span class=\"n\">query</span> <span class=\"n\">string</span> <span class=\"n\">foo</span><span class=\"o\">=</span><span class=\"n\">bar</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">esi</span><span class=\"p\">:</span><span class=\"n\">include</span> <span class=\"n\">src</span><span class=\"o\">=</span><span class=\"s2\">\"/plone/@@test.tile3/tile4/@@esi-body?foo=bar\"</span> <span class=\"o\">/&gt;</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">div</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n            <span class=\"n\">Non</span><span class=\"o\">-</span><span class=\"n\">ESI</span> <span class=\"n\">tile</span> <span class=\"k\">with</span> <span class=\"n\">query</span> <span class=\"n\">string</span>\n        <span class=\"o\">&lt;/</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">esi</span><span class=\"p\">:</span><span class=\"n\">include</span> <span class=\"n\">src</span><span class=\"o\">=</span><span class=\"s2\">\"/plone/@@test.tile3/tile2/@@esi-body?\"</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;/</span><span class=\"n\">body</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">html</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;</span><span class=\"n\">BLANKLINE</span><span class=\"o\">&gt;</span>\n</pre>\n<p>ESI links are substituted by <tt>ESIRender</tt>-transform, which should always be\nafter all transforms registered <tt>plone.transformchain</tt> with DOM-manipulation\nusing <tt>lxml</tt>. That\u2019s because <tt>lxml</tt> does not support ESI-namespace in HTML\nand ESI substitution can only be done once <tt>lxml</tt> tree is serialized into\npublishable byte string.</p>\n<p>If <tt>ESIRender</tt>-transform transforms any ESI-links, an additional HTML header\n<tt><span class=\"pre\">X-Esi</span></tt> being is set on the response. The existence of this header can be\nused to enable ESI-support in Varnish:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'X-Esi'</span><span class=\"p\">)</span>\n<span class=\"s1\">'1'</span>\n</pre>\n<p>When ESI rendering takes place, the following URLs will be called:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">\"http://nohost/plone/@@test.tile3/tile4/@@esi-body?foo=bar\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">contents</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">ESI</span> <span class=\"n\">tile</span> <span class=\"k\">with</span> <span class=\"n\">query</span> <span class=\"n\">string</span> <span class=\"n\">foo</span><span class=\"o\">=</span><span class=\"n\">bar</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">\"http://nohost/plone/@@test.tile3/tile2/@@esi-body?\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">browser</span><span class=\"o\">.</span><span class=\"n\">contents</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n    <span class=\"n\">ESI</span> <span class=\"n\">tile</span> <span class=\"k\">with</span> <span class=\"n\">query</span> <span class=\"n\">string</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">p</span><span class=\"o\">&gt;</span>\n</pre>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>4.3.2 (2019-10-18)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Catch errors on resolving tiles and return an error message instead of breaking the whole UI\n[MrTango]</li>\n<li>Fix issue where layout aware tile data storage read cache was not purged when\ndata was updated programmatically [fixes #75]\n[datakurre]</li>\n<li>Fix issue where resolveResource would break when url html content param contains other ++-url\u2019s\n[MrTango]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>4.3.1 (2019-02-20)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>fix multidict feature for python 3\n[petschki]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>4.3.0 (2019-02-10)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Enforce usage of plone.subrequest &gt;= 1.7.0;\nthis avoids <tt>TypeError</tt> on package upgrades (refs. <a href=\"https://github.com/plone/plone.app.blocks/issues/62\" rel=\"nofollow\">#62</a>).\n[hvelarde]</li>\n</ul>\n<p>New features:</p>\n<ul>\n<li>python3 compatibility\n[petschki]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>4.2.0 (2018-07-02)</h3>\n<p>New features:</p>\n<ul>\n<li>Allow rendering of subtiles.\nNow it\u2019s possible to reference and resolve tiles in tiles.\n[thet]</li>\n<li>Added events to notify before/after tile rendering.\n[thet]</li>\n</ul>\n<p>Bug fixes:</p>\n<ul>\n<li>Allow head tiles without a html/head structure.\n[thet]</li>\n<li>Fix issue where resolving layout url with ajax_load parameter caused fail\non direct resolve directory lookup\n[datakurre]</li>\n<li>Fix issue where failed resource lookup into filesystem resource directory\nraised IOError\n[datakurre]</li>\n<li>Fix deprecated <cite>import Globals</cite>. This adds Zope 4 compatibility.\n[petschki]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>4.1.2 (2018-07-02)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>remove <cite>pretty_print</cite> when loading the tile data.\nThis fixes <cite>forced_root_block</cite> problems in TinyMCE (#63)\n[petschki]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>4.1.1 (2017-10-20)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Fix to properly store primary rich text field values through layout aware\ntile data storage adapter\n[datakurre]</li>\n<li>Fix diazo tile rules cache key to require less memory by using hexdigest\n[datakurre]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>4.1.0 (2017-08-17)</h3>\n<p>New Features:</p>\n<ul>\n<li>ESITransforms add a new header <tt><span class=\"pre\">X-Esi:</span> 1</tt> when any ESI tiles have\nbeen transformed. This allows e.g. Varnish to enable ESI only when\nit\u2019s really required.\n[datakurre]</li>\n<li>Add to allow <tt>permission</tt> key in <tt>[contentlayout]</tt>-sections of content\nlayout manifests (<tt>manifest.cfg</tt>)\n[datakurre]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>4.0.6 (2017-02-09)</h3>\n<p>Fixes:</p>\n<ul>\n<li>Fix issue where layout related fields could have been acquired\n(only sectionSiteLayout can be allowed to be acquired)\n[datakurre]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>4.0.5 (2017-02-08)</h3>\n<p>Fixes:</p>\n<ul>\n<li>Fix issue where page site layout could have been accidentally acquired\n(page site layout should never be acquired)\n[datakurre]</li>\n<li>Fix transforms to comply with\nplone.transformchain.interfaces.ITransform\n[datakurre]</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>4.0.4 (2017-01-30)</h3>\n<p>Fixes:</p>\n<ul>\n<li>Fix issue where ESIRender has been broken since plone.protect\u2019s\nProtectTransform was introduced, because of protect transform breaking\nESI-tags; Change ESIRender transform order from 8900 to 9900\n[datakurre]</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>4.0.3 (2017-01-15)</h3>\n<p>Fixes:</p>\n<ul>\n<li>Fix issue where default layouts paths were not found if they were stored\nunicode (TextLine) instead of str (ASCIILine or BytesLine)\n[datakurre]</li>\n<li>Fix issue where tiles merge failed for addresses with space, because\nsubrequest was called with quoted (\u2018%20\u2019) paths\n[datakurre]</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>4.0.2 (2017-01-03)</h3>\n<p>Fixes:</p>\n<ul>\n<li>Fix issue where error in diazo transform for a single tile aborted tile\nmerge as whole\n[datakurre]</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>4.0.1 (2016-12-28)</h3>\n<p>Fixes:</p>\n<ul>\n<li>Fix issue where tile data storage decoded HTML primary fields\nusing ASCII instead of utf-8 causing broken broken latin\ncharacters in attribute values\n[datakurre]</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>4.0.0 (2016-12-13)</h3>\n<p>Incompatibilities:</p>\n<ul>\n<li>Remove grid transform, because it did not serve its purpose as as well\nexpected and required HTML-syntax not editable by humans; Instead using\ngrid framework agnostic CSS class names and building CSS grid against\nthose class names is recommended\n[agitator]</li>\n<li>Remove <tt>IOmittedField</tt> marker from layout behavior fields not meant to be\ndisplayed on legacy Deco UIs\n[jensens]</li>\n<li>Rename <tt>ILayoutAware.content</tt> to <tt>ILayoutAware.customContentLayout</tt>\n[datakurre]</li>\n<li>Move functions <tt>getDefaultAjaxLayout</tt>, <tt>getDefaultSiteLayout</tt>,\n<tt>getLayout</tt> and <tt>getLayoutAwareSiteLayout</tt> to <tt>.layoutbehavior</tt> in\norder to avoid circular imports (all deprecated now, see section New).\n[jensens]</li>\n<li>Move views from <tt>.layoutbehavior</tt> to new module <tt>.layoutviews</tt> in order\nto avoid circular imports.  Deprecated deferred imports are in place.\n[jensens]</li>\n</ul>\n<p>New:</p>\n<ul>\n<li>Add <tt>ILayoutAware.content</tt> as layout independent \u201clayout like\u201d tile\nconfiguration and data storage for all serializable tile configurations\n[datakurre]</li>\n<li>Add <tt>@@layout_preview</tt> view for previewing currently drafted layout aware\ncontent\n[datakurre]</li>\n<li><tt>ILayoutAware</tt> is now also responsible to lookup the behaviors.\n[jensens]</li>\n<li>Get layouts always by adapting with <tt>ILayoutAware</tt>.  This introduces a\ngeneric adapter and a behavior adapter.  Deprecated the formerly used functions\n<tt>getLayout</tt> <tt>getDefaultSiteLayout</tt> just calls\n<tt><span class=\"pre\">ILayoutAware().site_layout</span></tt> and is deprected.  <tt>getLayout</tt> just calls\n<tt><span class=\"pre\">ILayoutAware().content_layout</span></tt> and is deprecated.\n[jensens]</li>\n<li>Behavior shortname <tt>plone.layoutaware</tt> added.\n[jensens]</li>\n</ul>\n<p>Fixes:</p>\n<ul>\n<li>Handle missing content layouts so they do not cause an error\n[vangheem]</li>\n<li>A tile raising an 401 Unauthorized on traversal,\nresults in a status rewriting to a 302 which results in 200 login form.\nThe whole login form page then is rendered as the tile contents.\nThis patch catches the 401 by providing a custom exception handler.\nThe 401 is catched and ignored. This is not pefect yet and need some work,\nbut it at least does not break design and intended behavior of tiles.\n[jensens]</li>\n</ul>\n<p>Refactoring:</p>\n<ul>\n<li>Housekeeping: ZCA decorators, sorted imports, line-lengths and related.\n[jensens]</li>\n<li>Reformat documentation.\n[gforcada]</li>\n<li>Update travis configuration.\n[gforcada]</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>3.1.0 (2016-03-28)</h3>\n<p>New:</p>\n<ul>\n<li>Don\u2019t make a tile exception break other tiles (closes <a href=\"https://github.com/plone/plone.app.blocks/issues/27\" rel=\"nofollow\">#27</a>).\n[rodfersou, datakurre]</li>\n<li>Provide new getLayoutsFromDirectory utility to get layouts from any\nplone.resource directory, not just the base resource directory\n[vangheem]</li>\n<li>Index layout data; When collective.dexteritytextindexer is present,\nits <em>Dynamic SearchableText indexer behavior</em> must be enabled for content\ntype\n[vangheem, datakurre]</li>\n<li>Cleanup tile data on save/edit\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>3.0.1 (2015-09-23)</h3>\n<ul>\n<li>Remove the default \u2018Custom layout\u2019 display menu registration for\n\u2018layout_view\u2019, because it was not possible to customize it with more exact\nregistration\n[datakurre]</li>\n<li>Fix the default view to report template name as \u2018template-layout\u2019\n[datakurre]</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>3.0.0 (2015-09-16)</h3>\n<ul>\n<li>Change layout behavior default view name from <tt>view</tt> to <tt>layout_view</tt>\n[datakurre]</li>\n<li>Add to be able to set default grid system in registry settings\n[vangheem]</li>\n<li>Add support for provide more than one layout with a layout directory\nand manifest (replaces removed layout variants)\n[vangheem]</li>\n<li>Add <tt>contentlayout</tt> resource type with <tt>plone.availableContentLayouts</tt>\nvocabulary and <tt>++contentlayout++</tt> traverser\n[vangheem]</li>\n<li>Add <tt>contentLayout</tt> field to layoutbehavior to select the rendered layout\nfrom centrally managed content layouts\n[vangheem]</li>\n<li>Add content type specific registry configuration with key\n<tt>plone.app.blocks.default_layout.portal_type</tt> for used default content\nlayout when custom layout is not defined\n[vangheem]</li>\n<li>Add to check <tt>plone.app.blocks.default_layout</tt> registry key for a default\ncontent layout path when content type specific default content layout path is\nnot set\n[datakurre]</li>\n<li>Fixed layout behavior to apply Plone outputfilters for rendered content\n[datakurre]</li>\n<li>Add default grid system registry setting\n[vangheem]</li>\n<li>Restore support for Plone 4.2.x\n[datakurre]</li>\n<li>Remove layout variants introduced in 2.0.0, in favor of ability to\nprovide more than one layout with a layout directory and manifest by\nusing multiple <tt><span class=\"pre\">[...layout]</span></tt> directive in the same manifest\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3>2.1.2 (2015-06-10)</h3>\n<ul>\n<li>Fix issue where grid transform did replaced class names instead of appending\nto them\n[datakurre]</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3>2.1.1 (2015-06-10)</h3>\n<ul>\n<li>Fix BS3 grid transform to only introduce offset when the tile position is\ngreater than the current position in the current row\n[datakurre]</li>\n<li>Fix issue where tiles with empty response or syntax error broke tiles\ntransform (add to log syntax errors instead)\n[datakurre]</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3>2.1.0 (2015-05-25)</h3>\n<ul>\n<li>Add support for indexing layout field into SearchableText index when\ncollective.dexteritytextindexer is installed and its Dynamic SearchableText\nindexer behavior is enabled for the indexed content type with Layout support\nbehavior\n[datakurre]</li>\n</ul>\n</div>\n<div id=\"id22\">\n<h3>2.0.0 (2015-04-21)</h3>\n<ul>\n<li><p>Fix package dependencies; remove dependency on unittest2.\n[hvelarde]</p>\n</li>\n<li><p>Change blocks transforms to be opt-in for only published objects e.g. views\nor requests with IBlocksTransformEnabled (marker) interface [fixes #11]\n[datakurre]</p>\n</li>\n<li><p>Change tags with data-tiles-attrs to be completely replaced (by\nreplace_with_children instad of replace_content) to restore original\ndesign and support for site layout tiles in HTML document head tag\n[datakurre]</p>\n</li>\n<li><p>Change default site layout to be optional by adding an implicit\nmain_template-based site layout when the default site layout is not set\n[datakurre]</p>\n</li>\n<li><p>Change to retry resolveResources with 301 or 302 response when redirect\nlocation is for the same site\n[datakurre]</p>\n</li>\n<li><p>Add support for AJAX site layout for requests with <tt>ajax_load</tt> parameter\neither by getting a layout from a reqistry key <tt>plone.defaultAjaxLayout</tt>\nor by using an implicit main_template-based AJAX layout\n[simahawk, datakurre]</p>\n</li>\n<li><p>Add extensible CSS grid transform with built-in transforms for Deco\nand Bootstrap 3 grid systems\n[bloodbare, ACatila]</p>\n<pre><span class=\"nt\">&lt;utility</span>\n    <span class=\"na\">provides=</span><span class=\"s\">\".gridsystem.IGridSystem\"</span>\n    <span class=\"na\">component=</span><span class=\"s\">\".gridsystem.DecoGridSystem\"</span>\n    <span class=\"na\">name=</span><span class=\"s\">\"deco\"</span>\n    <span class=\"nt\">/&gt;</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">html</span> <span class=\"na\">data-gridsystem</span><span class=\"o\">=</span><span class=\"s\">\"deco\"</span><span class=\"p\">&gt;</span>\n  ...\n  <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">data-grid</span><span class=\"o\">=</span><span class=\"s\">'{\"type\": \"row\"}'</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">data-grid</span><span class=\"o\">=</span><span class=\"s\">'{\"type\": \"cell\",\n                     \"info\": {\"xs\": \"false\",\n                              \"sm\": \"False\",\n                              \"lg\": \"True\",\n                     \"pos\": {\"x\":1,\n                             \"width\": 12}}}'</span><span class=\"p\">&gt;</span>\n     <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"row\"</span><span class=\"p\">&gt;</span>\n   <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"cell position-1 width-12\"</span><span class=\"p\">&gt;</span>\n   <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n</li>\n<li><p>Add default view for ILayoutAware content and register a localizable display\nmenu item called <em>Custom layout</em> for it when <em>plone.app.contentmenu</em> is\npresent\n[datakurre]</p>\n</li>\n<li><p>Add Layout-fieldset for ILayoutAware behavior\n[datakurre]</p>\n</li>\n<li><p>Add support to use the whole tile as its body when both head and body tags\nare missing (add support for using Dexterithy display widgets as tiles)\n[datakurre]</p>\n</li>\n<li><p>Add support for layout variants (for supporting multiple layouts in a single\nresource folder)\n[datakurre]</p>\n<pre><span class=\"k\">[sitelayout]</span>\n<span class=\"na\">...</span>\n\n<span class=\"k\">[sitelayout:variants]</span>\n<span class=\"na\">document_layout</span> <span class=\"o\">=</span> <span class=\"s\">document.html</span>\n</pre>\n</li>\n<li><p>Add experimental support for tile-specific Diazo-rules\nwith data-attribute <tt><span class=\"pre\">data-rules=\"/++sitelayout++name/rules.xml\"</span></tt>.\n[datakurre]</p>\n</li>\n<li><p>Fix issue with tile without body-tag breaking the tile composition (fixes\nissues with some p.a.standardtiles returning only &lt;html/&gt; in some conditions)\n[datakurre]</p>\n</li>\n<li><p>Fix issue where &lt;![CDATA[\u2026]]&gt; block was quoted (and therefore broken) by\nlxml serializer\n[datakurre]</p>\n</li>\n<li><p>Fix issue where XML parser dropped head for layout with CRLF-endings\n[datakurre]</p>\n</li>\n<li><p>Fix plone.app.blocks re-install to not reset existing plone.defaultSiteLayout\nand plone.defaultAjaxLayout settings (by setting the values in a custom\nsetuphandler)\n[datakurre]</p>\n</li>\n<li><p>Fix and update tests, PEP8\n[gyst, datakurre, gforcada]</p>\n</li>\n<li><p>Fix to set the merging request flag before testing the merge results to allow\nstaticly placed tiles in content templates to be rendered properly.\n[cewing]</p>\n</li>\n<li><p>Solve issue with VHM and tile rendering. Fixes\n<a href=\"https://dev.plone.org/ticket/13581\" rel=\"nofollow\">https://dev.plone.org/ticket/13581</a> [ericof]</p>\n</li>\n<li><p>Add z3c.autoinclude support\n[cdw9, calvinhp]</p>\n</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h3>1.1 (2012-12-17)</h3>\n<ul>\n<li>make sure to use correct url of tile\n[vangheem]</li>\n<li>handle not found errors while rendering tiles so layout\nisn\u2019t borked\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id24\">\n<h3>1.0 (2012-06-23)</h3>\n<ul>\n<li>initial release.\n[garbas]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6121920, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "6b8d9d02bc2d45855d2679f8af799385", "sha256": "5324bb528668c8d9cc800bcb2866373ac88a3b85b40a7968a9e22052ff01f1bb"}, "downloads": -1, "filename": "plone.app.blocks-1.0.tar.gz", "has_sig": false, "md5_digest": "6b8d9d02bc2d45855d2679f8af799385", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31591, "upload_time": "2012-06-23T08:27:23", "upload_time_iso_8601": "2012-06-23T08:27:23.004046Z", "url": "https://files.pythonhosted.org/packages/bb/6d/afb92a97a9cc3ea3fd6438a2b9a2860512d39382f9aa3ee307205d7e2c79/plone.app.blocks-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "5fc92f635fac20a14ac64e78c9a834aa", "sha256": "4bb00470ab121229934c045131b28e6a14697b778d6de484261f6194d9d4708a"}, "downloads": -1, "filename": "plone.app.blocks-1.1.tar.gz", "has_sig": false, "md5_digest": "5fc92f635fac20a14ac64e78c9a834aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39333, "upload_time": "2012-12-17T14:18:44", "upload_time_iso_8601": "2012-12-17T14:18:44.199110Z", "url": "https://files.pythonhosted.org/packages/bf/da/145d48275269b7fc174387f2538c86c0402d4e73a7997509055c09231497/plone.app.blocks-1.1.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "70786497124646b40112164289154495", "sha256": "b580897aebf6832f440c4aae861ebff9ca8adfe93070784b165bc84099a6760a"}, "downloads": -1, "filename": "plone.app.blocks-1.1.1.zip", "has_sig": false, "md5_digest": "70786497124646b40112164289154495", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55309, "upload_time": "2013-05-16T12:48:16", "upload_time_iso_8601": "2013-05-16T12:48:16.701881Z", "url": "https://files.pythonhosted.org/packages/cb/4e/b754a3abb8c05329c4b227d5325380cf6b10772cef6eecdc891086fb3757/plone.app.blocks-1.1.1.zip", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "6d5364ae8f9e72cdd32368eb81ec5491", "sha256": "79f9f0b47848762c76ceb6f129972f0b68b009d200093cdd1d8082cead012a4e"}, "downloads": -1, "filename": "plone.app.blocks-2.0.0.zip", "has_sig": false, "md5_digest": "6d5364ae8f9e72cdd32368eb81ec5491", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73486, "upload_time": "2015-04-21T13:06:30", "upload_time_iso_8601": "2015-04-21T13:06:30.245914Z", "url": "https://files.pythonhosted.org/packages/34/ff/c38cae9f49c6138b431029904941ec902a3200e94cb97ebbf4f4d6245d76/plone.app.blocks-2.0.0.zip", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "fad6aad15c47184b2e904c09043b2adb", "sha256": "f6109b2f18a353f9c529a0d12ae316abc4e4f3a946edfd7997a970aeab5da129"}, "downloads": -1, "filename": "plone.app.blocks-2.1.0.tar.gz", "has_sig": false, "md5_digest": "fad6aad15c47184b2e904c09043b2adb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55142, "upload_time": "2015-05-25T14:06:04", "upload_time_iso_8601": "2015-05-25T14:06:04.921474Z", "url": "https://files.pythonhosted.org/packages/6f/06/4c8c6f3aa434a9b3a725b6e33a66bf14e884f70916c5a712ac8812e58105/plone.app.blocks-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "89c9de6d3ece58d93d99334733b42fe4", "sha256": "12530f4527058f9bd7cbfb848ae1bbd466660c52c78ca1a161dc907602f81b56"}, "downloads": -1, "filename": "plone.app.blocks-2.1.1.tar.gz", "has_sig": false, "md5_digest": "89c9de6d3ece58d93d99334733b42fe4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52740, "upload_time": "2015-06-10T08:30:17", "upload_time_iso_8601": "2015-06-10T08:30:17.725146Z", "url": "https://files.pythonhosted.org/packages/65/cf/c1750bb02c0d074a47626bb1676b2f35046ae10ac106bbac81baa2906527/plone.app.blocks-2.1.1.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "0e0cd071effcf1e06db4c0988b80c058", "sha256": "1590177ac73e71172ae187ced80f749de0ae1fe2ce772b295bfd70b9a9b5754b"}, "downloads": -1, "filename": "plone.app.blocks-2.1.2.tar.gz", "has_sig": false, "md5_digest": "0e0cd071effcf1e06db4c0988b80c058", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52834, "upload_time": "2015-06-10T14:42:58", "upload_time_iso_8601": "2015-06-10T14:42:58.346480Z", "url": "https://files.pythonhosted.org/packages/3d/06/a281da5d2fd58d495c516d33f3a5509e360c55e9bd52f9cc4329622934a4/plone.app.blocks-2.1.2.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "bc60961a38056f05e4382ba939bca846", "sha256": "399f5da64cb2fbedd9ae7a9d40f7c5d665c7d168c23bf77ff82dac91c7393b53"}, "downloads": -1, "filename": "plone.app.blocks-2.2.0.tar.gz", "has_sig": false, "md5_digest": "bc60961a38056f05e4382ba939bca846", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53363, "upload_time": "2015-10-02T06:21:55", "upload_time_iso_8601": "2015-10-02T06:21:55.508240Z", "url": "https://files.pythonhosted.org/packages/ef/35/fb4246b3a92fabc543fb6debd859c75252ea97729c76d9a517cd754f0264/plone.app.blocks-2.2.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "c8ea4578573bc0e74e86909254a5a775", "sha256": "49e8d0ff81237c752089e906d5f1e8bba57fc3f01305534a8fffda99a09c0db3"}, "downloads": -1, "filename": "plone.app.blocks-2.2.1.tar.gz", "has_sig": false, "md5_digest": "c8ea4578573bc0e74e86909254a5a775", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54756, "upload_time": "2016-03-28T19:16:19", "upload_time_iso_8601": "2016-03-28T19:16:19.607233Z", "url": "https://files.pythonhosted.org/packages/55/25/82e85996f935928212ad968a51a2a7f12d16bfc005f2d9fb09798cd8d10a/plone.app.blocks-2.2.1.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "821e19cbd52e4f96de39b030084c77b2", "sha256": "129fd25c672e1ad8fc5d1add95222d971cdd2fd4aea2006a2c9e6e78208b3224"}, "downloads": -1, "filename": "plone.app.blocks-3.0.0.tar.gz", "has_sig": false, "md5_digest": "821e19cbd52e4f96de39b030084c77b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59210, "upload_time": "2015-09-16T06:59:29", "upload_time_iso_8601": "2015-09-16T06:59:29.311113Z", "url": "https://files.pythonhosted.org/packages/e7/b5/a673017f5da87450f87623b4f06164921e875ff816d3861373a26549616f/plone.app.blocks-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "6465d99520b03409c78f928537dda43b", "sha256": "4a92cd3836caf420f3f1f7ec338cea27ce4929c08148998cd62cd9a4d08bdb8c"}, "downloads": -1, "filename": "plone.app.blocks-3.0.1.tar.gz", "has_sig": false, "md5_digest": "6465d99520b03409c78f928537dda43b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59513, "upload_time": "2015-09-23T11:53:36", "upload_time_iso_8601": "2015-09-23T11:53:36.836678Z", "url": "https://files.pythonhosted.org/packages/fe/8c/839328a24ab3fe21f94595d4161ae6663fc410d6c2b97958ce084263090f/plone.app.blocks-3.0.1.tar.gz", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "3ca2f3f59841a45832f6b5402d4f4d7d", "sha256": "ee6a7ad4b9a14867e1706b62b419a8cdc86741da53823397ec04aab9972ec722"}, "downloads": -1, "filename": "plone.app.blocks-3.1.0.tar.gz", "has_sig": false, "md5_digest": "3ca2f3f59841a45832f6b5402d4f4d7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62773, "upload_time": "2016-03-28T18:01:41", "upload_time_iso_8601": "2016-03-28T18:01:41.457056Z", "url": "https://files.pythonhosted.org/packages/e5/da/8143f63c67277e03efac211837c07308762896f51ed2b09def03b632cd25/plone.app.blocks-3.1.0.tar.gz", "yanked": false}], "4.0.0": [{"comment_text": "", "digests": {"md5": "c2c4c8b65008cc2e7be3d645c56f2273", "sha256": "3a50046f98964ac2fdec858d8cf442e80e735ad10833d3256d501aabc423d3e9"}, "downloads": -1, "filename": "plone.app.blocks-4.0.0.tar.gz", "has_sig": false, "md5_digest": "c2c4c8b65008cc2e7be3d645c56f2273", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66422, "upload_time": "2016-12-13T17:02:10", "upload_time_iso_8601": "2016-12-13T17:02:10.389757Z", "url": "https://files.pythonhosted.org/packages/2e/a3/6ecec68ca9890786e878f0faf64a3316e307480cbc00a47baa38c4c34702/plone.app.blocks-4.0.0.tar.gz", "yanked": false}], "4.0.0rc1": [{"comment_text": "", "digests": {"md5": "814dc446d8933762ddbc16b18912a209", "sha256": "774be1f6c1d79ab7deb2dfed8f3d46265c8b320b5a9f19cf490bcbef7c96e8a0"}, "downloads": -1, "filename": "plone.app.blocks-4.0.0rc1.tar.gz", "has_sig": false, "md5_digest": "814dc446d8933762ddbc16b18912a209", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66200, "upload_time": "2016-09-15T17:23:30", "upload_time_iso_8601": "2016-09-15T17:23:30.021375Z", "url": "https://files.pythonhosted.org/packages/32/77/daf91acd677e2c6c93ba6ea74b7cde7659c11d9c58feb615a6013cb5c936/plone.app.blocks-4.0.0rc1.tar.gz", "yanked": false}], "4.0.0rc2": [{"comment_text": "", "digests": {"md5": "b8fb74f8558dabf52ea0b33cb37d9d6c", "sha256": "4e115457c8fe9ff37314326dd11628f04f73fb23c647312ef78a13ab8890dc07"}, "downloads": -1, "filename": "plone.app.blocks-4.0.0rc2.tar.gz", "has_sig": false, "md5_digest": "b8fb74f8558dabf52ea0b33cb37d9d6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66371, "upload_time": "2016-11-24T05:44:57", "upload_time_iso_8601": "2016-11-24T05:44:57.107289Z", "url": "https://files.pythonhosted.org/packages/0d/3f/879c0804994dddc61b0d68b87ebe1f95525fed167ddd58a7fe760e21bbb9/plone.app.blocks-4.0.0rc2.tar.gz", "yanked": false}], "4.0.0rc3": [{"comment_text": "", "digests": {"md5": "a503267a9931a7c5450e9171fed76780", "sha256": "ba735130cb3bdd413429593d75e40e29859eab3db99d15239a35a2558654eb29"}, "downloads": -1, "filename": "plone.app.blocks-4.0.0rc3.tar.gz", "has_sig": false, "md5_digest": "a503267a9931a7c5450e9171fed76780", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65049, "upload_time": "2016-11-27T12:43:21", "upload_time_iso_8601": "2016-11-27T12:43:21.674412Z", "url": "https://files.pythonhosted.org/packages/14/fd/387c7ead65a405b7dfefa826e562b35791a4918931fd7c6640a8d597adc2/plone.app.blocks-4.0.0rc3.tar.gz", "yanked": false}], "4.0.1": [{"comment_text": "", "digests": {"md5": "6d3eac2ac4d38da7a55df4cb1a5dd1bd", "sha256": "c06d1e58d60292ffcd77ef4e1703009fe1b35535f86dfb31b6f4dc175d845b12"}, "downloads": -1, "filename": "plone.app.blocks-4.0.1.tar.gz", "has_sig": false, "md5_digest": "6d3eac2ac4d38da7a55df4cb1a5dd1bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66606, "upload_time": "2016-12-28T21:07:12", "upload_time_iso_8601": "2016-12-28T21:07:12.662799Z", "url": "https://files.pythonhosted.org/packages/6e/cc/7c5fdca948bf9bbf81a395eff63cebb9a49b875b36d1432187e18f1144d7/plone.app.blocks-4.0.1.tar.gz", "yanked": false}], "4.0.2": [{"comment_text": "", "digests": {"md5": "af1a96062352b7d48a777c0814ac4cb9", "sha256": "76b7b394344d0b9fc97db1ac6a70dc6e7e7b9a5ae1c51de5b10540516ee10f1c"}, "downloads": -1, "filename": "plone.app.blocks-4.0.2.tar.gz", "has_sig": false, "md5_digest": "af1a96062352b7d48a777c0814ac4cb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65141, "upload_time": "2017-01-03T08:39:43", "upload_time_iso_8601": "2017-01-03T08:39:43.991843Z", "url": "https://files.pythonhosted.org/packages/23/5f/493e90eeacefd8c8a240aac65bfb2219b9e0b699789a45de13770bdcf067/plone.app.blocks-4.0.2.tar.gz", "yanked": false}], "4.0.3": [{"comment_text": "", "digests": {"md5": "68ac86304a9289a143a79fe265cfbfee", "sha256": "3dbe60ed678543cb18ea822b7a21f434688f3a919911d07c3b89168a6a4e36ca"}, "downloads": -1, "filename": "plone.app.blocks-4.0.3.tar.gz", "has_sig": false, "md5_digest": "68ac86304a9289a143a79fe265cfbfee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65388, "upload_time": "2017-01-15T20:53:40", "upload_time_iso_8601": "2017-01-15T20:53:40.573897Z", "url": "https://files.pythonhosted.org/packages/73/f6/ccce9eb562de7b498ca9b905b6e2bb1d66931b3735c92e7ee8d2f0bec1c3/plone.app.blocks-4.0.3.tar.gz", "yanked": false}], "4.0.4": [{"comment_text": "", "digests": {"md5": "15331205b37675d062614a77cda7cccc", "sha256": "e13041e7af9a40d876a6b047787949d547310b3102d4bd979265779a138dc400"}, "downloads": -1, "filename": "plone.app.blocks-4.0.4.tar.gz", "has_sig": false, "md5_digest": "15331205b37675d062614a77cda7cccc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65657, "upload_time": "2017-01-30T13:22:50", "upload_time_iso_8601": "2017-01-30T13:22:50.086941Z", "url": "https://files.pythonhosted.org/packages/65/7b/cfe1f22ceb338f197874f36778ac328fd389278fe3d8ecbbe1ab572e4b1c/plone.app.blocks-4.0.4.tar.gz", "yanked": false}], "4.0.5": [{"comment_text": "", "digests": {"md5": "532488e043c934b6caaf1d86c13ccad3", "sha256": "072c2b885bee10b3c8b8ff5b20d44fa93cf345c2a4791938e047945c6123b206"}, "downloads": -1, "filename": "plone.app.blocks-4.0.5.tar.gz", "has_sig": false, "md5_digest": "532488e043c934b6caaf1d86c13ccad3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66046, "upload_time": "2017-02-08T08:24:37", "upload_time_iso_8601": "2017-02-08T08:24:37.989882Z", "url": "https://files.pythonhosted.org/packages/90/47/cf3e309abce10e1e6ee0f8d252575f4c4319159412c270e1480f61acd795/plone.app.blocks-4.0.5.tar.gz", "yanked": false}], "4.0.6": [{"comment_text": "", "digests": {"md5": "fc2ff211fd0dd67e1b59583a66fef539", "sha256": "f1b3b307e3bee4ccea335789e197f10b257e2f6ef56c9e6dacc27e91bf9314a7"}, "downloads": -1, "filename": "plone.app.blocks-4.0.6.tar.gz", "has_sig": false, "md5_digest": "fc2ff211fd0dd67e1b59583a66fef539", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66161, "upload_time": "2017-02-09T12:33:53", "upload_time_iso_8601": "2017-02-09T12:33:53.719088Z", "url": "https://files.pythonhosted.org/packages/5a/0e/30ba47f01584ec09f2baf32c260b422217bb4a804960af7bc7ae0ee23b0f/plone.app.blocks-4.0.6.tar.gz", "yanked": false}], "4.1.0": [{"comment_text": "", "digests": {"md5": "6c4841aa47275df67a505b7b79469b1c", "sha256": "d6bd3d9782f57c55f80c12e2304f221672a037a554c4ecd1fc232485b0aa8844"}, "downloads": -1, "filename": "plone.app.blocks-4.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "6c4841aa47275df67a505b7b79469b1c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 78363, "upload_time": "2017-08-17T10:44:23", "upload_time_iso_8601": "2017-08-17T10:44:23.373020Z", "url": "https://files.pythonhosted.org/packages/ba/9d/3311f68172156cfb86cd081c8aeed88cce65afece87f34b3827722c07d21/plone.app.blocks-4.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b54d200a5f10aeedd3c9f9921bf81192", "sha256": "79887d455f37e959393472abf2bc2b7c3601ecb2ac03fcb4307b54cc897c86d3"}, "downloads": -1, "filename": "plone.app.blocks-4.1.0.tar.gz", "has_sig": false, "md5_digest": "b54d200a5f10aeedd3c9f9921bf81192", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65492, "upload_time": "2017-08-17T10:44:21", "upload_time_iso_8601": "2017-08-17T10:44:21.615463Z", "url": "https://files.pythonhosted.org/packages/29/57/90637648334bb11defe813d3cf7cf8755ec0ce13125fbf78985a029d21c0/plone.app.blocks-4.1.0.tar.gz", "yanked": false}], "4.1.1": [{"comment_text": "", "digests": {"md5": "4bc02c09e829d147ee702f17aa7864ba", "sha256": "99a9a5503cf316033b4ec0f9e5343d2f205c6238a6c20f4f8456638ae6a4cfea"}, "downloads": -1, "filename": "plone.app.blocks-4.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "4bc02c09e829d147ee702f17aa7864ba", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 79337, "upload_time": "2017-10-20T11:29:12", "upload_time_iso_8601": "2017-10-20T11:29:12.699155Z", "url": "https://files.pythonhosted.org/packages/1d/16/f65c5ae15a4a97227d2457f31c4081020075d59f69cbae86b0385796f286/plone.app.blocks-4.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "209ccb45cd2d9855eac7c0ae4c6d3fbc", "sha256": "edc39e74a95cd001a853c9c03012e5be5309beb05fe5e653ea0722523d0b6ce6"}, "downloads": -1, "filename": "plone.app.blocks-4.1.1.tar.gz", "has_sig": false, "md5_digest": "209ccb45cd2d9855eac7c0ae4c6d3fbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66479, "upload_time": "2017-10-20T11:29:11", "upload_time_iso_8601": "2017-10-20T11:29:11.091247Z", "url": "https://files.pythonhosted.org/packages/5d/47/4c926abf93bd4e6091da5836154c8796bcb9c5e899ec43dcd299c1c3d3a9/plone.app.blocks-4.1.1.tar.gz", "yanked": false}], "4.1.2": [{"comment_text": "", "digests": {"md5": "f5d40853bba923c01c96b8b18114bb4c", "sha256": "07d0be6a841ee094373d439cee9c2d732684fb22044959247123c9bdce29d4be"}, "downloads": -1, "filename": "plone.app.blocks-4.1.2-py2-none-any.whl", "has_sig": false, "md5_digest": "f5d40853bba923c01c96b8b18114bb4c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 79571, "upload_time": "2018-07-02T13:24:55", "upload_time_iso_8601": "2018-07-02T13:24:55.966192Z", "url": "https://files.pythonhosted.org/packages/d5/5a/4cef94b92855b6c59cc51373ecc41e652b746106516f47fccbc3c3f8bb88/plone.app.blocks-4.1.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2dbbf95e59dac3a1122222f735af917", "sha256": "d319e6698168d7824a1c0dab94d9f45ca7fb86359b72115798911d14344cc601"}, "downloads": -1, "filename": "plone.app.blocks-4.1.2.tar.gz", "has_sig": false, "md5_digest": "c2dbbf95e59dac3a1122222f735af917", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66630, "upload_time": "2018-07-02T13:24:57", "upload_time_iso_8601": "2018-07-02T13:24:57.436676Z", "url": "https://files.pythonhosted.org/packages/e1/96/3cad97471b4fb90018d85b894b00bc838c04ef22be4be154d132de2f2a8b/plone.app.blocks-4.1.2.tar.gz", "yanked": false}], "4.1.2.post5": [{"comment_text": "", "digests": {"md5": "1d237622b4bc0907773905302b23babc", "sha256": "45a01069c6d3f62d2b5e6feded608ca1aad5d6f1c8bae106ec4fb4a0c6ba95ad"}, "downloads": -1, "filename": "plone.app.blocks-4.1.2.post5-py2-none-any.whl", "has_sig": false, "md5_digest": "1d237622b4bc0907773905302b23babc", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 75024, "upload_time": "2019-11-12T07:09:38", "upload_time_iso_8601": "2019-11-12T07:09:38.801548Z", "url": "https://files.pythonhosted.org/packages/2f/a4/ac34e518eb272f45a96cf5574a928dc74f0801aba6565e3e1eddcd7b3585/plone.app.blocks-4.1.2.post5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a54b5c7ffb505bf0a3197b555f19c65", "sha256": "2ed79840ef8c17ef1d07eb8ca9c1fb509ce2f60a82258515bd7c1577cfa4f063"}, "downloads": -1, "filename": "plone.app.blocks-4.1.2.post5.tar.gz", "has_sig": false, "md5_digest": "4a54b5c7ffb505bf0a3197b555f19c65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67546, "upload_time": "2019-11-12T07:09:42", "upload_time_iso_8601": "2019-11-12T07:09:42.650166Z", "url": "https://files.pythonhosted.org/packages/e2/82/6912494067039734fa0aceaf9a16d5c38d71792e78586092fcb233d08858/plone.app.blocks-4.1.2.post5.tar.gz", "yanked": false}], "4.2.0": [{"comment_text": "", "digests": {"md5": "ffbf96abd4ea77befeb1be6c17890ab3", "sha256": "5256c3703620c6825cd6107aa90669ea89a63dbc03bc8ec08bf4f4fd97653aaf"}, "downloads": -1, "filename": "plone.app.blocks-4.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "ffbf96abd4ea77befeb1be6c17890ab3", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 81176, "upload_time": "2018-07-02T13:27:17", "upload_time_iso_8601": "2018-07-02T13:27:17.524179Z", "url": "https://files.pythonhosted.org/packages/1a/3f/f4143675657263521ef514316b3c9ff5f82ac91eaa181392bbdb1f16c0c6/plone.app.blocks-4.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "820af1d5f6a71c2f6499178355430e2b", "sha256": "080102d467ca52aee0e3ab39a75bcedab8860c0a6ae93ed7ea374ebf1c945cd5"}, "downloads": -1, "filename": "plone.app.blocks-4.2.0.tar.gz", "has_sig": false, "md5_digest": "820af1d5f6a71c2f6499178355430e2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68090, "upload_time": "2018-07-02T13:27:19", "upload_time_iso_8601": "2018-07-02T13:27:19.577181Z", "url": "https://files.pythonhosted.org/packages/4d/70/31df4ec89bce1c33cd579d312590e839347a4dc03c11d30a6047c3b74364/plone.app.blocks-4.2.0.tar.gz", "yanked": false}], "4.3.0": [{"comment_text": "", "digests": {"md5": "f410bb18b4b2cdd6a3202097be4210ba", "sha256": "801379a5610e759f2d19c0f30045780ef164ba7dba63d6e6a20067ffd1cf28b6"}, "downloads": -1, "filename": "plone.app.blocks-4.3.0.tar.gz", "has_sig": false, "md5_digest": "f410bb18b4b2cdd6a3202097be4210ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72759, "upload_time": "2019-02-09T23:14:00", "upload_time_iso_8601": "2019-02-09T23:14:00.719388Z", "url": "https://files.pythonhosted.org/packages/cb/ea/5b67a23669361f18d9430b91a55f51821f1dce862647014d892909652237/plone.app.blocks-4.3.0.tar.gz", "yanked": false}], "4.3.1": [{"comment_text": "", "digests": {"md5": "5ed474cb60d60e0d30c6c872bd8183ef", "sha256": "3a5b95f59454a11462046dfd7a0d1fbe42e032cb2151b1fe8d11c24d8137dc16"}, "downloads": -1, "filename": "plone.app.blocks-4.3.1.tar.gz", "has_sig": false, "md5_digest": "5ed474cb60d60e0d30c6c872bd8183ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73080, "upload_time": "2019-02-20T11:43:31", "upload_time_iso_8601": "2019-02-20T11:43:31.122329Z", "url": "https://files.pythonhosted.org/packages/41/82/d6bc09b6618047411a53863f802e2188f1e53a560b627e66f942b1dd9794/plone.app.blocks-4.3.1.tar.gz", "yanked": false}], "4.3.2": [{"comment_text": "", "digests": {"md5": "3c2586399c55180503a6818a57c36f3e", "sha256": "bd96f14e14b59579dcec4ff8a662045987edca059e35f7fc3d429dbb6a556bce"}, "downloads": -1, "filename": "plone.app.blocks-4.3.2.tar.gz", "has_sig": false, "md5_digest": "3c2586399c55180503a6818a57c36f3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71361, "upload_time": "2019-10-18T10:31:33", "upload_time_iso_8601": "2019-10-18T10:31:33.562149Z", "url": "https://files.pythonhosted.org/packages/36/2d/b43ae09dae87416028ec2be7447602fe32c6245760ae16d09b1731b69ba2/plone.app.blocks-4.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3c2586399c55180503a6818a57c36f3e", "sha256": "bd96f14e14b59579dcec4ff8a662045987edca059e35f7fc3d429dbb6a556bce"}, "downloads": -1, "filename": "plone.app.blocks-4.3.2.tar.gz", "has_sig": false, "md5_digest": "3c2586399c55180503a6818a57c36f3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71361, "upload_time": "2019-10-18T10:31:33", "upload_time_iso_8601": "2019-10-18T10:31:33.562149Z", "url": "https://files.pythonhosted.org/packages/36/2d/b43ae09dae87416028ec2be7447602fe32c6245760ae16d09b1731b69ba2/plone.app.blocks-4.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:21 2020"}