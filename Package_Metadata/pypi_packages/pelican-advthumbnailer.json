{"info": {"author": "Alexandre Fonseca", "author_email": "alexandrejorgefonseca@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "######################\npelican-advthumbnailer\n######################\n\nA thumbnail generator for `Pelican\n<http://pelican.readthedocs.org/en/latest/>`_ that automatically scans\nall image tags looking for missing images and creates the thumbnails\nbased on the filename.\n\nBased on the existing `thumbnailer plugin\n<https://github.com/getpelican/pelican-plugins/tree/master/thumbnailer>`_.\n\nInstall\n=======\n\nTo install the library, you can use\n`pip\n<http://www.pip-installer.org/en/latest/>`_\n\n.. code-block:: bash\n\n    $ pip install pelican-advthumbnailer\n\n\nUsage\n=====\n\n1. Update ``pelicanconf.py``:\n\n   1. Add ``advthumbnailer`` to ``PLUGINS``.\n\n      You should add it before any image optimization plugins.\n\n      .. code-block:: python\n          \n          PLUGINS = [..., 'advthumbnailer']\n\n2. Creating a thumbnail:\n\n   1. Ensure original image is copied to the output folder (add to \n      ``STATIC_PATHS`` or use the `autostatic plugin\n      <https://github.com/AlexJF/pelican-autostatic>`_).\n\n      E.g: ``output/images/example.png``\n\n   2. Add an ``<img>`` (or a ``<source>`` tag) containing as source (or scrset): ::\n      \n          images/thumbnails/<spec>/example.png\n\n      Where ``<spec>`` is one of the following:\n\n      - ``<number>``: Perform a square resize of the image to ``<number>x<number>`` pixels.\n      - ``<number1>x<number2>``: Perform a scale and crop resize of the image to ``<number1>x<number2>`` pixels.\n      - ``<number1>x_`` or ``_x<number2>``: Perform an aspect-preserving resize of the image enforcing the specified with or height, respectively, in pixels.\n\n      ``<spec>`` can also be terminated with a `!` in which case upscales (e.g:\n      resize 100px to 200px) will also be allowed. By default this is not the\n      case.\n\n      Example:\n\n      .. code-block:: html\n\n          <img src=\"images/thumbnails/100x_/example.png\" />\n\n\n   3. Upon output generation, all files are scanned for image sources and those\n      matching the ``.*thumbnails/<spec>/.+`` regex are thumbnailed\n      according to the ``<spec>``.\n\n\nOptions\n=======\n\n- ``ADVTHUMB_SEARCH_IMAGES_IN_ANCHORS`` (default: ``False``): Boolean option\n  that determines if advthumbnailer should consider the ``href`` attribute of \n  ``<a>`` elements as thumbnail paths.\n\n\nIntegrations\n============\n\npelican-autostatic\n------------------\nIntegration with `pelican-autostatic\n<https://github.com/AlexJF/pelican-autostatic>`_ is achieved by adding\nan option to the ``{static ...}`` replacement.\n\n::\n\n    {static images/example.png thumb=\"100x_\"}\n\nJinja2\n------\nIntegration with Jinja2 is achieved via the ``thumbnail`` function.\n\n::\n\n    <img src=\"{{ SITEURL + \"images/example.png\" | thumbnail(\"100x_\") }}\" />\n\nExample usage\n=============\nFor a working example check `my site\n<http://www.alexjf.net>`_ and `my site's source code\n<https://github.com/AlexJF/alexjf.net>`_.\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/AlexJF/pelican-advthumbnailer/archive/v0.7.0.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AlexJF/pelican-advthumbnailer", "keywords": "pelican blog static thumbnail generation", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "pelican-advthumbnailer", "package_url": "https://pypi.org/project/pelican-advthumbnailer/", "platform": "", "project_url": "https://pypi.org/project/pelican-advthumbnailer/", "project_urls": {"Download": "https://github.com/AlexJF/pelican-advthumbnailer/archive/v0.7.0.zip", "Homepage": "https://github.com/AlexJF/pelican-advthumbnailer"}, "release_url": "https://pypi.org/project/pelican-advthumbnailer/0.7.0/", "requires_dist": null, "requires_python": "", "summary": "A thumbnail generator for Pelican that operates by looking at the filename of missing files to determine thumb format.", "version": "0.7.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A thumbnail generator for <a href=\"http://pelican.readthedocs.org/en/latest/\" rel=\"nofollow\">Pelican</a> that automatically scans\nall image tags looking for missing images and creates the thumbnails\nbased on the filename.</p>\n<p>Based on the existing <a href=\"https://github.com/getpelican/pelican-plugins/tree/master/thumbnailer\" rel=\"nofollow\">thumbnailer plugin</a>.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<p>To install the library, you can use\n<a href=\"http://www.pip-installer.org/en/latest/\" rel=\"nofollow\">pip</a></p>\n<pre>$ pip install pelican-advthumbnailer\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<ol>\n<li><p>Update <tt>pelicanconf.py</tt>:</p>\n<ol>\n<li><p>Add <tt>advthumbnailer</tt> to <tt>PLUGINS</tt>.</p>\n<p>You should add it before any image optimization plugins.</p>\n<pre><span class=\"n\">PLUGINS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"s1\">'advthumbnailer'</span><span class=\"p\">]</span>\n</pre>\n</li>\n</ol>\n</li>\n<li><p>Creating a thumbnail:</p>\n<ol>\n<li><p>Ensure original image is copied to the output folder (add to\n<tt>STATIC_PATHS</tt> or use the <a href=\"https://github.com/AlexJF/pelican-autostatic\" rel=\"nofollow\">autostatic plugin</a>).</p>\n<p>E.g: <tt>output/images/example.png</tt></p>\n</li>\n<li><p>Add an <tt>&lt;img&gt;</tt> (or a <tt>&lt;source&gt;</tt> tag) containing as source (or scrset):</p>\n<pre>images/thumbnails/&lt;spec&gt;/example.png\n</pre>\n<p>Where <tt>&lt;spec&gt;</tt> is one of the following:</p>\n<ul>\n<li><tt>&lt;number&gt;</tt>: Perform a square resize of the image to <tt>&lt;number&gt;x&lt;number&gt;</tt> pixels.</li>\n<li><tt>&lt;number1&gt;x&lt;number2&gt;</tt>: Perform a scale and crop resize of the image to <tt>&lt;number1&gt;x&lt;number2&gt;</tt> pixels.</li>\n<li><tt>&lt;number1&gt;x_</tt> or <tt>_x&lt;number2&gt;</tt>: Perform an aspect-preserving resize of the image enforcing the specified with or height, respectively, in pixels.</li>\n</ul>\n<p><tt>&lt;spec&gt;</tt> can also be terminated with a <cite>!</cite> in which case upscales (e.g:\nresize 100px to 200px) will also be allowed. By default this is not the\ncase.</p>\n<p>Example:</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">img</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"images/thumbnails/100x_/example.png\"</span> <span class=\"p\">/&gt;</span>\n</pre>\n</li>\n<li><p>Upon output generation, all files are scanned for image sources and those\nmatching the <tt><span class=\"pre\">.*thumbnails/&lt;spec&gt;/.+</span></tt> regex are thumbnailed\naccording to the <tt>&lt;spec&gt;</tt>.</p>\n</li>\n</ol>\n</li>\n</ol>\n</div>\n<div id=\"options\">\n<h2>Options</h2>\n<ul>\n<li><tt>ADVTHUMB_SEARCH_IMAGES_IN_ANCHORS</tt> (default: <tt>False</tt>): Boolean option\nthat determines if advthumbnailer should consider the <tt>href</tt> attribute of\n<tt>&lt;a&gt;</tt> elements as thumbnail paths.</li>\n</ul>\n</div>\n<div id=\"integrations\">\n<h2>Integrations</h2>\n<div id=\"pelican-autostatic\">\n<h3>pelican-autostatic</h3>\n<p>Integration with <a href=\"https://github.com/AlexJF/pelican-autostatic\" rel=\"nofollow\">pelican-autostatic</a> is achieved by adding\nan option to the <tt>{static <span class=\"pre\">...}</span></tt> replacement.</p>\n<pre>{static images/example.png thumb=\"100x_\"}\n</pre>\n</div>\n<div id=\"jinja2\">\n<h3>Jinja2</h3>\n<p>Integration with Jinja2 is achieved via the <tt>thumbnail</tt> function.</p>\n<pre>&lt;img src=\"{{ SITEURL + \"images/example.png\" | thumbnail(\"100x_\") }}\" /&gt;\n</pre>\n</div>\n</div>\n<div id=\"example-usage\">\n<h2>Example usage</h2>\n<p>For a working example check <a href=\"http://www.alexjf.net\" rel=\"nofollow\">my site</a> and <a href=\"https://github.com/AlexJF/alexjf.net\" rel=\"nofollow\">my site\u2019s source code</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 2857030, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e97972e4599e504c89fcd7688a259789", "sha256": "79c941d7fd34a10deb18520f8345c4ac9fba249b68a564ee7f95b05016fe8b32"}, "downloads": -1, "filename": "pelican-advthumbnailer-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e97972e4599e504c89fcd7688a259789", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8728, "upload_time": "2014-08-26T23:12:57", "upload_time_iso_8601": "2014-08-26T23:12:57.737761Z", "url": "https://files.pythonhosted.org/packages/77/d9/0eaf10d713ff62bb64101de21968169cb60802e57a4077b1774643bf2f8c/pelican-advthumbnailer-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "65b220a206ca647334df72b5083de93e", "sha256": "787d70d9e54d939d9e0e29e01e29a7c22f45010319774b5fd2e9c04f3de73486"}, "downloads": -1, "filename": "pelican-advthumbnailer-0.2.0.tar.gz", "has_sig": false, "md5_digest": "65b220a206ca647334df72b5083de93e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9086, "upload_time": "2014-09-12T10:28:48", "upload_time_iso_8601": "2014-09-12T10:28:48.871550Z", "url": "https://files.pythonhosted.org/packages/e7/2c/95ad09ab15f3ad723a3191767d6ec522dbb0469761f4faa18b60729fd2e4/pelican-advthumbnailer-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "a57068bfa0971519fae06a55f3867378", "sha256": "7f07b7a00a46c68c1afb834907d472dcab132bbb612164eae4758a1694492a6a"}, "downloads": -1, "filename": "pelican-advthumbnailer-0.3.0.tar.gz", "has_sig": false, "md5_digest": "a57068bfa0971519fae06a55f3867378", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9229, "upload_time": "2014-09-21T12:08:47", "upload_time_iso_8601": "2014-09-21T12:08:47.437162Z", "url": "https://files.pythonhosted.org/packages/c5/dd/cbe7cba3b9ed8c4b29507bcf9d3519abdcd17f7385e84f23ecd2c97d39eb/pelican-advthumbnailer-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "79d6aafe4a7fe0018521fbc8ac6c162d", "sha256": "ee843dca5245fb568f8ce139c929cdba7238ee2b2ece27f0074877d222ace0e8"}, "downloads": -1, "filename": "pelican-advthumbnailer-0.4.0.zip", "has_sig": false, "md5_digest": "79d6aafe4a7fe0018521fbc8ac6c162d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14316, "upload_time": "2015-01-10T15:31:36", "upload_time_iso_8601": "2015-01-10T15:31:36.543182Z", "url": "https://files.pythonhosted.org/packages/b8/49/964a464972217bca7a7e2dfb3cbe07f2ec7438b0267eb81ca972a1ef465b/pelican-advthumbnailer-0.4.0.zip", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "dd696b8d02ebf880aaeec0a7721ba5d1", "sha256": "5555fd56928aeb3b456b4535f7ce40ac2dc7d0681fc2aeeb9968ed1feef318a0"}, "downloads": -1, "filename": "pelican-advthumbnailer-0.5.0.zip", "has_sig": false, "md5_digest": "dd696b8d02ebf880aaeec0a7721ba5d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14322, "upload_time": "2016-07-29T11:39:23", "upload_time_iso_8601": "2016-07-29T11:39:23.041132Z", "url": "https://files.pythonhosted.org/packages/48/84/824db1944b6d98824ae82775a26bc0957aec9a75e8fe412a9595e1c66f3c/pelican-advthumbnailer-0.5.0.zip", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "2c08ef0bf49a9070fab1e596964105dc", "sha256": "507786d33429efbbd428a3c10541251ecf6cfcbb0ccd8bdb4cfdecc31fdc3ec3"}, "downloads": -1, "filename": "pelican-advthumbnailer-0.6.0.zip", "has_sig": false, "md5_digest": "2c08ef0bf49a9070fab1e596964105dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14444, "upload_time": "2016-09-24T10:34:12", "upload_time_iso_8601": "2016-09-24T10:34:12.783584Z", "url": "https://files.pythonhosted.org/packages/c5/85/171cc664d0eab79fac55f34325bdf29b4ff174559fdfae8e146d8446fed7/pelican-advthumbnailer-0.6.0.zip", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "3f1fb5ee8bfceafbc45832c78027f9c0", "sha256": "36ecd86edea1f57d3bd3d3b1e760d22026ecd23e4ba569025fe6c474f50d896c"}, "downloads": -1, "filename": "pelican-advthumbnailer-0.7.0.tar.gz", "has_sig": false, "md5_digest": "3f1fb5ee8bfceafbc45832c78027f9c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9770, "upload_time": "2017-05-07T12:23:13", "upload_time_iso_8601": "2017-05-07T12:23:13.751979Z", "url": "https://files.pythonhosted.org/packages/48/03/e877bf5f4c7b7d7e327603f1a460a35a3fbef570dead9a3a700cadaadd91/pelican-advthumbnailer-0.7.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3f1fb5ee8bfceafbc45832c78027f9c0", "sha256": "36ecd86edea1f57d3bd3d3b1e760d22026ecd23e4ba569025fe6c474f50d896c"}, "downloads": -1, "filename": "pelican-advthumbnailer-0.7.0.tar.gz", "has_sig": false, "md5_digest": "3f1fb5ee8bfceafbc45832c78027f9c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9770, "upload_time": "2017-05-07T12:23:13", "upload_time_iso_8601": "2017-05-07T12:23:13.751979Z", "url": "https://files.pythonhosted.org/packages/48/03/e877bf5f4c7b7d7e327603f1a460a35a3fbef570dead9a3a700cadaadd91/pelican-advthumbnailer-0.7.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:42 2020"}