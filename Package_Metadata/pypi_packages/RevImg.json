{"info": {"author": "Christophe Rimann", "author_email": "infobiac1@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# RevImg\n\n## Motivation\nRevImg is a lightweight package to interact with Google Reverse Image Search. I created this package as an adequate other solution did not exist. Although [MRISA](https://github.com/vivithemage/mrisa) is quite good, there are three major shortcomings:\n\n* It only allows returns the first page of Google Reverse Image results\n* It adds unnecessary overhead in that you need to run a flask server\n* Individual results are not intuitively grouped (i.e. MRISA returns a list of links, a list of titles, and a list of descriptions. I think it makes more intuitive sense for each individual result to be grouped, with the result containing its link, description, and title together as one logical grouping).\n\nThis library attempts to fix these issues. For the most part, this library is very similar to MRISA: in fact, much of the BS4 code is lifted directly from it. As a minor update, I switched out the use of pycurl for requests. While this could theoretically slow down the package somewhat, in experimentation, the major bottleneck is the Google response, not the difference in library. I think that the gain in simplicity (and thus user customization) is worth the minor performance hit.\n\n## Usage\nInitialization is simple:\n\n```\nfrom RevImg import RevImg\nri = RevImg()\n```\nYou then have access to three methods. \n#### get\\_best_guess()\nTo retrieve Google's best guess:\n\n```\nri.get_best_guess(\"https://via.placeholder.com/350x150\")\n```\nThis returns a string for what Google believes the image to be.\n\n#### get_similar()\nTo get a list of similar images:\n\n```\nri.get_similar(\"https://via.placeholder.com/350x150\")\n```\nThis returns a list of urls, with each url being a string.\n\n#### get\\_related_results()\nTo get a list of sites that have images similar to the one searched for:\n\n```\nri.get_related_results(\"https://via.placeholder.com/350x150\")\n```\n\nThis creates a generator, with each next element being a dictionary of the form: \n\n```\n{\n\t\"title\": \"title here\",\n\t\"link\": \"link.com\",\n\t\"description\": \"description...\"\n}\n```\n\nWe utilize a generator in order to decrease the need for useless page loads (given that this is the most expensive cost). As a result, should a list be necessary, we recommend simply processing it as a list comprehension:\n\n```\nresults = [ret for ret in ri.get_reelated_results(\"https://via.placeholder.com/350x150\")\n```\n\n### Disclaimer\nPlease note that this library is provided AS IS. Do NOT utilize it in a way that would be against Google's ToS.\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/infobiac/RevImg", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "RevImg", "package_url": "https://pypi.org/project/RevImg/", "platform": "", "project_url": "https://pypi.org/project/RevImg/", "project_urls": {"Homepage": "https://github.com/infobiac/RevImg"}, "release_url": "https://pypi.org/project/RevImg/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "A package to interact with the google reverse image search service", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            # RevImg<br><br>## Motivation<br>RevImg is a lightweight package to interact with Google Reverse Image Search. I created this package as an adequate other solution did not exist. Although [MRISA](https://github.com/vivithemage/mrisa) is quite good, there are three major shortcomings:<br><br>* It only allows returns the first page of Google Reverse Image results<br>* It adds unnecessary overhead in that you need to run a flask server<br>* Individual results are not intuitively grouped (i.e. MRISA returns a list of links, a list of titles, and a list of descriptions. I think it makes more intuitive sense for each individual result to be grouped, with the result containing its link, description, and title together as one logical grouping).<br><br>This library attempts to fix these issues. For the most part, this library is very similar to MRISA: in fact, much of the BS4 code is lifted directly from it. As a minor update, I switched out the use of pycurl for requests. While this could theoretically slow down the package somewhat, in experimentation, the major bottleneck is the Google response, not the difference in library. I think that the gain in simplicity (and thus user customization) is worth the minor performance hit.<br><br>## Usage<br>Initialization is simple:<br><br>```<br>from RevImg import RevImg<br>ri = RevImg()<br>```<br>You then have access to three methods. <br>#### get\\_best_guess()<br>To retrieve Google's best guess:<br><br>```<br>ri.get_best_guess(\"https://via.placeholder.com/350x150\")<br>```<br>This returns a string for what Google believes the image to be.<br><br>#### get_similar()<br>To get a list of similar images:<br><br>```<br>ri.get_similar(\"https://via.placeholder.com/350x150\")<br>```<br>This returns a list of urls, with each url being a string.<br><br>#### get\\_related_results()<br>To get a list of sites that have images similar to the one searched for:<br><br>```<br>ri.get_related_results(\"https://via.placeholder.com/350x150\")<br>```<br><br>This creates a generator, with each next element being a dictionary of the form: <br><br>```<br>{<br>\t\"title\": \"title here\",<br>\t\"link\": \"link.com\",<br>\t\"description\": \"description...\"<br>}<br>```<br><br>We utilize a generator in order to decrease the need for useless page loads (given that this is the most expensive cost). As a result, should a list be necessary, we recommend simply processing it as a list comprehension:<br><br>```<br>results = [ret for ret in ri.get_reelated_results(\"https://via.placeholder.com/350x150\")<br>```<br><br>### Disclaimer<br>Please note that this library is provided AS IS. Do NOT utilize it in a way that would be against Google's ToS.<br><br>\n          </div>"}, "last_serial": 5001644, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5421637441e903f0752f1ce0aaa736d1", "sha256": "d7ee6495f7b1dc0fc56e4527fef61110ca6299c2c25a6194d54dddb6f0765dc7"}, "downloads": -1, "filename": "RevImg-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5421637441e903f0752f1ce0aaa736d1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4223, "upload_time": "2019-03-29T05:03:29", "upload_time_iso_8601": "2019-03-29T05:03:29.737046Z", "url": "https://files.pythonhosted.org/packages/1e/48/3294e8a99515ca1efaa3518115b23dae5e523012761f907b538b06da7f65/RevImg-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1ce7573e681c81409131fd5f6ef61de", "sha256": "917155dac187bbf593dcef11f5f57b9025073c02e0fb0c4da811d0141089db1b"}, "downloads": -1, "filename": "RevImg-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a1ce7573e681c81409131fd5f6ef61de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3134, "upload_time": "2019-03-29T05:03:31", "upload_time_iso_8601": "2019-03-29T05:03:31.693735Z", "url": "https://files.pythonhosted.org/packages/ce/9f/ab7990596394cc3a2cd0c12a1d47837940df4975585bcce840f44bb5709f/RevImg-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "6c03729ede445cdd1366fa4b33312e85", "sha256": "39fa67267cd855cce40a768d05c81a41c360105e2246a3b3eb138522bdf4d3ba"}, "downloads": -1, "filename": "RevImg-0.0.2.tar.gz", "has_sig": false, "md5_digest": "6c03729ede445cdd1366fa4b33312e85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3135, "upload_time": "2019-03-29T05:16:32", "upload_time_iso_8601": "2019-03-29T05:16:32.945378Z", "url": "https://files.pythonhosted.org/packages/b8/cb/8f7ee79d7775a230b948f3d2c846a03d74415f372f54f9e1abae5fce44f6/RevImg-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "86c10882328134d8418d2913a9598d24", "sha256": "fc665a9f1ba633536821774ab909785c224190d0a756c9e5be9e78a81f284af5"}, "downloads": -1, "filename": "RevImg-0.0.3.tar.gz", "has_sig": false, "md5_digest": "86c10882328134d8418d2913a9598d24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3137, "upload_time": "2019-03-29T05:21:53", "upload_time_iso_8601": "2019-03-29T05:21:53.859616Z", "url": "https://files.pythonhosted.org/packages/97/be/e7d6c3c0b27684040e23f7a04c0e01a56d2a5315d3e2887bc9ba14d64f2a/RevImg-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "881695f10a0a1d37f1eefabbb202a3e2", "sha256": "6bc686650a066efcf3b1a2031f270973d424d348f375aa6a7c5d7d7022a7d198"}, "downloads": -1, "filename": "RevImg-0.0.4.tar.gz", "has_sig": false, "md5_digest": "881695f10a0a1d37f1eefabbb202a3e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3141, "upload_time": "2019-03-29T05:23:16", "upload_time_iso_8601": "2019-03-29T05:23:16.300487Z", "url": "https://files.pythonhosted.org/packages/60/d3/17137dffcca0f105458518fcf22bcfe2a109bed9418b82d811a24168ec33/RevImg-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "881695f10a0a1d37f1eefabbb202a3e2", "sha256": "6bc686650a066efcf3b1a2031f270973d424d348f375aa6a7c5d7d7022a7d198"}, "downloads": -1, "filename": "RevImg-0.0.4.tar.gz", "has_sig": false, "md5_digest": "881695f10a0a1d37f1eefabbb202a3e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3141, "upload_time": "2019-03-29T05:23:16", "upload_time_iso_8601": "2019-03-29T05:23:16.300487Z", "url": "https://files.pythonhosted.org/packages/60/d3/17137dffcca0f105458518fcf22bcfe2a109bed9418b82d811a24168ec33/RevImg-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:16 2020"}