{"info": {"author": "Scott Staniewicz", "author_email": "scott.stanie@utexas.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: C", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering"], "description": "[![Build Status](https://travis-ci.org/scottstanie/apertools.svg?branch=master)](https://travis-ci.org/scottstanie/apertools)\n\n# Apertools: tools for InSAR (Interferometric Synthetic Aperture Radar)\n\n\nOther helping tools: [sentineleof](https://github.com/scottstanie/sentineleof) for downloading Sentinel 1 EOF precise orbit files.\n\n\n## Setup and installation\n\n```bash\npip install apertools\n```\n\n\n#### sario.py\n\nInput/Output functions for SAR data.\nContains methods to load Sentinel, UAVSAR and DEM files\n\nMain function: \n\n```python\nimport apertools.sario\nmy_slc = apertools.sario.load('/file/path/radar.slc')\ngeocoded_slc = apertools.sario.load('/file/path/myslc.geo')\nmy_int = apertools.sario.load('/file/path/interferogram.int')\nunwrapped_int = apertools.sario.load('/file/path/igram.unw')\nmy_dem = apertools.sario.load('/file/path/elevation.dem')\nmy_hgt = apertools.sario.load('/file/path/N20W100.hgt')\n```\n\n#### latlon.py\nContains LatlonImage class, which loads metadata about an image and acts as a smart numpy array.\nIncludes functionality for slicing/selecting pixels by latitude/longitude, among other things.\n\nAlso contains helper functions for maniuplating lat/lon data.\n\n#### plotting.py\nUseful plotting functions, including center-shifted colormap (to make 0 values a neutral color), and 3D stack viewing function\n\n\n#### los.py\nLine of sight utilities\n\n\n#### gps.py\nSeveral functions for using GPS data in conjunction with InSAR stacks\n\n\n#### parsers.py\n\nClasses to deal with extracting relevant data from SAR filenames.\nExample:\n\n```python\nfrom apertools.parsers import Sentinel\n\nparser = Sentinel('S1A_IW_SLC__1SDV_20180408T043025_20180408T043053_021371_024C9B_1B70.zip')\nparser.start_time\n    datetime.datetime(2018, 4, 8, 4, 30, 25)\n\nparser.mission\n    'S1A'\n\nparser.polarization\n    'DV'\nparser.full_parse\n('S1A',\n 'IW',\n 'SLC',\n '_',\n '1',\n 'S',\n 'DV',\n '20180408T043025',\n '20180408T043053',\n '021371',\n '024C9B',\n '1B70')\n\n\nparser.field_meanings\n('Mission',\n 'Beam',\n 'Product type',\n 'Resolution class',\n 'Product level',\n 'Product class',\n 'Polarization',\n 'Start datetime',\n 'Stop datetime',\n 'Orbit number',\n 'data-take identified',\n 'product unique id')\n\n```\n\nUAVSAR parser also exists.\n\n\n#### log.py\n\nModule to make logging pretty with times and module names.\n\nIf you also `pip install colorlog`, it will become colored (didn't require this in case people like non-color logs.)\n\n```python\nfrom apertools.log import get_log\nlogger = get_log()\nlogger.info(\"Better than printing\")\n```\n\n```\n[05/29 16:28:19] [INFO log.py] Better than printing\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scottstanie/apertools", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "apertools", "package_url": "https://pypi.org/project/apertools/", "platform": "", "project_url": "https://pypi.org/project/apertools/", "project_urls": {"Homepage": "https://github.com/scottstanie/apertools"}, "release_url": "https://pypi.org/project/apertools/0.5.2/", "requires_dist": null, "requires_python": "", "summary": "Tools for gathering and processing InSAR data", "version": "0.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/scottstanie/apertools\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51cd750158fc017ad88a92773fcbc2ed429808d5/68747470733a2f2f7472617669732d63692e6f72672f73636f74747374616e69652f61706572746f6f6c732e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>Apertools: tools for InSAR (Interferometric Synthetic Aperture Radar)</h1>\n<p>Other helping tools: <a href=\"https://github.com/scottstanie/sentineleof\" rel=\"nofollow\">sentineleof</a> for downloading Sentinel 1 EOF precise orbit files.</p>\n<h2>Setup and installation</h2>\n<pre>pip install apertools\n</pre>\n<h4>sario.py</h4>\n<p>Input/Output functions for SAR data.\nContains methods to load Sentinel, UAVSAR and DEM files</p>\n<p>Main function:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">apertools.sario</span>\n<span class=\"n\">my_slc</span> <span class=\"o\">=</span> <span class=\"n\">apertools</span><span class=\"o\">.</span><span class=\"n\">sario</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'/file/path/radar.slc'</span><span class=\"p\">)</span>\n<span class=\"n\">geocoded_slc</span> <span class=\"o\">=</span> <span class=\"n\">apertools</span><span class=\"o\">.</span><span class=\"n\">sario</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'/file/path/myslc.geo'</span><span class=\"p\">)</span>\n<span class=\"n\">my_int</span> <span class=\"o\">=</span> <span class=\"n\">apertools</span><span class=\"o\">.</span><span class=\"n\">sario</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'/file/path/interferogram.int'</span><span class=\"p\">)</span>\n<span class=\"n\">unwrapped_int</span> <span class=\"o\">=</span> <span class=\"n\">apertools</span><span class=\"o\">.</span><span class=\"n\">sario</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'/file/path/igram.unw'</span><span class=\"p\">)</span>\n<span class=\"n\">my_dem</span> <span class=\"o\">=</span> <span class=\"n\">apertools</span><span class=\"o\">.</span><span class=\"n\">sario</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'/file/path/elevation.dem'</span><span class=\"p\">)</span>\n<span class=\"n\">my_hgt</span> <span class=\"o\">=</span> <span class=\"n\">apertools</span><span class=\"o\">.</span><span class=\"n\">sario</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'/file/path/N20W100.hgt'</span><span class=\"p\">)</span>\n</pre>\n<h4>latlon.py</h4>\n<p>Contains LatlonImage class, which loads metadata about an image and acts as a smart numpy array.\nIncludes functionality for slicing/selecting pixels by latitude/longitude, among other things.</p>\n<p>Also contains helper functions for maniuplating lat/lon data.</p>\n<h4>plotting.py</h4>\n<p>Useful plotting functions, including center-shifted colormap (to make 0 values a neutral color), and 3D stack viewing function</p>\n<h4>los.py</h4>\n<p>Line of sight utilities</p>\n<h4>gps.py</h4>\n<p>Several functions for using GPS data in conjunction with InSAR stacks</p>\n<h4>parsers.py</h4>\n<p>Classes to deal with extracting relevant data from SAR filenames.\nExample:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">apertools.parsers</span> <span class=\"kn\">import</span> <span class=\"n\">Sentinel</span>\n\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">Sentinel</span><span class=\"p\">(</span><span class=\"s1\">'S1A_IW_SLC__1SDV_20180408T043025_20180408T043053_021371_024C9B_1B70.zip'</span><span class=\"p\">)</span>\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">start_time</span>\n    <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">)</span>\n\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">mission</span>\n    <span class=\"s1\">'S1A'</span>\n\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">polarization</span>\n    <span class=\"s1\">'DV'</span>\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">full_parse</span>\n<span class=\"p\">(</span><span class=\"s1\">'S1A'</span><span class=\"p\">,</span>\n <span class=\"s1\">'IW'</span><span class=\"p\">,</span>\n <span class=\"s1\">'SLC'</span><span class=\"p\">,</span>\n <span class=\"s1\">'_'</span><span class=\"p\">,</span>\n <span class=\"s1\">'1'</span><span class=\"p\">,</span>\n <span class=\"s1\">'S'</span><span class=\"p\">,</span>\n <span class=\"s1\">'DV'</span><span class=\"p\">,</span>\n <span class=\"s1\">'20180408T043025'</span><span class=\"p\">,</span>\n <span class=\"s1\">'20180408T043053'</span><span class=\"p\">,</span>\n <span class=\"s1\">'021371'</span><span class=\"p\">,</span>\n <span class=\"s1\">'024C9B'</span><span class=\"p\">,</span>\n <span class=\"s1\">'1B70'</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">field_meanings</span>\n<span class=\"p\">(</span><span class=\"s1\">'Mission'</span><span class=\"p\">,</span>\n <span class=\"s1\">'Beam'</span><span class=\"p\">,</span>\n <span class=\"s1\">'Product type'</span><span class=\"p\">,</span>\n <span class=\"s1\">'Resolution class'</span><span class=\"p\">,</span>\n <span class=\"s1\">'Product level'</span><span class=\"p\">,</span>\n <span class=\"s1\">'Product class'</span><span class=\"p\">,</span>\n <span class=\"s1\">'Polarization'</span><span class=\"p\">,</span>\n <span class=\"s1\">'Start datetime'</span><span class=\"p\">,</span>\n <span class=\"s1\">'Stop datetime'</span><span class=\"p\">,</span>\n <span class=\"s1\">'Orbit number'</span><span class=\"p\">,</span>\n <span class=\"s1\">'data-take identified'</span><span class=\"p\">,</span>\n <span class=\"s1\">'product unique id'</span><span class=\"p\">)</span>\n</pre>\n<p>UAVSAR parser also exists.</p>\n<h4>log.py</h4>\n<p>Module to make logging pretty with times and module names.</p>\n<p>If you also <code>pip install colorlog</code>, it will become colored (didn't require this in case people like non-color logs.)</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">apertools.log</span> <span class=\"kn\">import</span> <span class=\"n\">get_log</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">get_log</span><span class=\"p\">()</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Better than printing\"</span><span class=\"p\">)</span>\n</pre>\n<pre><code>[05/29 16:28:19] [INFO log.py] Better than printing\n</code></pre>\n\n          </div>"}, "last_serial": 6966004, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "be2baddf9ce361471be80fd0b57bc140", "sha256": "2f6a3f5fb7c8fe931bd04bc869763f9276501abfcac93b370ad5aaf540338af5"}, "downloads": -1, "filename": "apertools-0.1.0.tar.gz", "has_sig": false, "md5_digest": "be2baddf9ce361471be80fd0b57bc140", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50382, "upload_time": "2019-06-18T21:30:07", "upload_time_iso_8601": "2019-06-18T21:30:07.638780Z", "url": "https://files.pythonhosted.org/packages/cd/45/83b0a52209236f074655fe3e8739223f4e6f0215dbf2890444a67d59930b/apertools-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "628775d0e558bc5651a36c92b8b6dbcb", "sha256": "1cd9b8b333075944ff75938349bd6e6451b7eeafb67b9849dd2b416cba324f07"}, "downloads": -1, "filename": "apertools-0.2.0.tar.gz", "has_sig": false, "md5_digest": "628775d0e558bc5651a36c92b8b6dbcb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50397, "upload_time": "2019-06-18T21:33:04", "upload_time_iso_8601": "2019-06-18T21:33:04.905134Z", "url": "https://files.pythonhosted.org/packages/c2/08/57f4adc4019be95c65bfffd4d91736025a8e63668557085d4fd8fd8fe063/apertools-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "948fe29fa0737cd2a174fccb69c34b1f", "sha256": "023ef7c7eeeca2c48befcf8f24e97a118ee214b85c99bfa4638df272475911c6"}, "downloads": -1, "filename": "apertools-0.3.0.tar.gz", "has_sig": false, "md5_digest": "948fe29fa0737cd2a174fccb69c34b1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53797, "upload_time": "2019-06-18T22:09:48", "upload_time_iso_8601": "2019-06-18T22:09:48.791717Z", "url": "https://files.pythonhosted.org/packages/1e/c8/95364e83e27f0fdc7d5a2b8213f0c390757a7024faa792d06abd0b94a4be/apertools-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "880eaba203cf47820cf5a8f495b3fd18", "sha256": "de5f3d224c9469b1d4e947f71c59bb70d6a532ca0bd6e1a299bc8fb44e44427e"}, "downloads": -1, "filename": "apertools-0.4.0.tar.gz", "has_sig": false, "md5_digest": "880eaba203cf47820cf5a8f495b3fd18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83136, "upload_time": "2020-04-06T21:36:40", "upload_time_iso_8601": "2020-04-06T21:36:40.145741Z", "url": "https://files.pythonhosted.org/packages/bd/14/eadcdaf93304967e04ed217c41ba6d63d1fddd89fae61e0da78c0754e65b/apertools-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "22a5952f3dccde1f942c3203aa5e79ca", "sha256": "fcdf7cb4a4973ce48d627d0d4354bb140e2ab42bc72bbb4fb5e543451eaaa9c2"}, "downloads": -1, "filename": "apertools-0.5.0.tar.gz", "has_sig": false, "md5_digest": "22a5952f3dccde1f942c3203aa5e79ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 84977, "upload_time": "2020-04-07T01:48:41", "upload_time_iso_8601": "2020-04-07T01:48:41.586470Z", "url": "https://files.pythonhosted.org/packages/0b/67/98f0fd8ad15a05d55d217c71b18ad03748088ba21b557083e08b125a553f/apertools-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "83f6950055376c27e9e70dfa84252641", "sha256": "59ae62c64d6a1578afb616fdd0909072109f4a2739674c9f3fcd49604c963e70"}, "downloads": -1, "filename": "apertools-0.5.1.tar.gz", "has_sig": false, "md5_digest": "83f6950055376c27e9e70dfa84252641", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 85170, "upload_time": "2020-04-07T02:07:37", "upload_time_iso_8601": "2020-04-07T02:07:37.338839Z", "url": "https://files.pythonhosted.org/packages/90/18/b87c8eac9be876d0ff9b1245949cac2e9c4225f3e268e0e024aaa2fac72e/apertools-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "51c66905d6ef09ad339986090d794875", "sha256": "051a6a55b07870ccdd65d1ac578bca027a38cfbdc9bafbe451666994a2b7d7fd"}, "downloads": -1, "filename": "apertools-0.5.2.tar.gz", "has_sig": false, "md5_digest": "51c66905d6ef09ad339986090d794875", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 85192, "upload_time": "2020-04-07T02:12:22", "upload_time_iso_8601": "2020-04-07T02:12:22.253356Z", "url": "https://files.pythonhosted.org/packages/0b/b9/cdd508667a3b7c11e2903ecc3d67de9cb844ea4ea088a76864682931fb5b/apertools-0.5.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "51c66905d6ef09ad339986090d794875", "sha256": "051a6a55b07870ccdd65d1ac578bca027a38cfbdc9bafbe451666994a2b7d7fd"}, "downloads": -1, "filename": "apertools-0.5.2.tar.gz", "has_sig": false, "md5_digest": "51c66905d6ef09ad339986090d794875", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 85192, "upload_time": "2020-04-07T02:12:22", "upload_time_iso_8601": "2020-04-07T02:12:22.253356Z", "url": "https://files.pythonhosted.org/packages/0b/b9/cdd508667a3b7c11e2903ecc3d67de9cb844ea4ea088a76864682931fb5b/apertools-0.5.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:51 2020"}