{"info": {"author": "Kees Hink", "author_email": "hink@gw20e.com", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Programming Language :: Python"], "description": "Introduction\n============\n\nThe goal for this package is:\n\n- to make SQL storage from PloneFormGen easy\n- to be usable with collective.megaphone\n\nTo achieve this, we create a new PloneFormGen action-adapter_. \nThis uses SQLAlchemy_ (collective.lead_) to save the form data to the database.\n(SQLAlchemy should work on most SQL dialects.)\n\nYou could also save PFG data in SQL by using a Z SQL Method as an\nafter-validation script, as described in the SQL-CRUD-tutorial_.  \nThis works, but: \n\n- it's a lot of manual work, and quite cumbersome for ordinary users\n- it doesn't work with collective.megaphone_ (see mailinglist-discussion_)\n\n\nInstalling\n==========\n\nDevelopers\n----------\n\nTo install a complete development setup::\n\n    svn co https://svn.plone.org/svn/collective/Products.PloneFormGen/adapters/Products.sqlpfgadapter/buildout/plone4 sqlpfg-plone4\n    cd sqlpfg-plone4\n    python2.6 bootstrap.py\n    ./bin/buildout -c buildout-dvl.cfg\n\nOr, for Plone 3::\n\n    svn co https://svn.plone.org/svn/collective/Products.PloneFormGen/adapters/Products.sqlpfgadapter/buildout/plone3 sqlpfg-plone3\n    cd sqlpfg-plone3\n    python2.4 bootstrap.py\n    ./bin/buildout -c buildout-dvl.cfg\n\nIf you use another buildout configuration, be sure to include the \"Known good\nset\" for plone.app.registry for your version of Plone. In the case of Plone 3,\nyou'll also want to pin `z3c.form` to `1.9.0`.\n\n\nConfiguration\n=============\n\nAs a site admin, go to the \"SQL Settings\" in Plone's control panel. You'll be\ntaken to \"@@sqlpfg-controlpanel\". Here you can set your database connection\nsettings.\n\n\nUsage\n=====\n\nTo save a form's data in the database, add an \"SQL Storage\" from the \"Add\nnew...\" menu in the Form Folder. Give it a title and save it.\n\n    A database table will be created. Its name is generated (from the Form\n    Folder's id, among others), you can see it by viewing the adapter object.\n    The table has an 'id' column, and a column for each form field.\n\nThat's it! From now on, succesfully submitted forms will be stored in the\ndatabase.\n\nUsage with collective.megaphone\n-------------------------------\n\nThe product will work just as well with collective.megaphone. However, to be\nable to add the action adapter to an Action Letter or Megaphone Action, you\nhave to add \"SQLPFGAdapter\" to the \"Allowed content types\" via the ZMI.\n\nThe product collective.megaphonesql_ can do this for you.\n\n\nLimitations\n===========\n\nThis product is under development. For now, we have major limitations:\n\n- Not all PloneFormGen fields work, notably:\n\n  - file field\n  - rating-scale field\n\n- Adding and removing fields, or changing their names, doesn't change the\n  database table. Field names for which there is no column will just be\n  discarded.\n\n\nCompatibility / Dependencies\n============================\n\nTested with: \n\n- Plone: 3.3.5, 4.0 \n- PloneFormGen: 1.6.0b4, 1.6.0b5\n- megaphone: 1.4.1, 2.0b1\n- collective.lead 1.0, SQLAlchemy 0.4.8\n- SQL: MySQL 5.1.41\n\nThis product uses plone.app.registry for its controlpanel. In order for it to\nwork, use its \"Known good set\" (see section \"Developers\" above).\n\n.. _PloneFormGen: http://plone.org/products/ploneformgen\n.. _collective.megaphone: http://plone.org/products/megaphone\n.. _SQL-CRUD-tutorial: http://plone.org/products/ploneformgen/documentation/tutorial/sql-crud \n.. _mailinglist-discussion: http://plone.293351.n2.nabble.com/plan-for-easy-MySQL-storage-for-collective-megaphone-td5481845.html#a5481845\n.. _action-adapter: http://plone.org/products/ploneformgen/documentation/reference/fields-and-objects/adapters\n.. _SQLAlchemy: http://www.sqlalchemy.org\n.. _collective.lead: http://pypi.python.org/pypi/collective.lead\n..  _collective.megaphonesql: http://svn.plone.org/svn/collective/collective.megaphonesql \n\nChangelog\n=========\n\n1.0.1 (2011-01-10)\n------------------\n\nRe-release as source dist.\n\n1.0.0 (2010-11-10)\n------------------\n\nPython 2.4 binary release.\n\n0.1b2 (2010-09-26)\n------------------\n\n- typo in sqlApadapter.py \n\n0.1b1 (2010-09-26)\n------------------\n\n- Updated doc (tested and works on Plone 4)\n- Add handling for decimal form field \n\n0.1a2 (2010-09-22)\n------------------\n\n- Renamed all \"MySQL\" to \"SQL\", including content types. No upgrade provided! \n- Added documentation about usage with collective.megaphone.\n\n0.1a1 (2010-09-20)\n------------------\n\n- Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://plone.org/products/sqlpfgadapter", "keywords": "web plone sql", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "Products.sqlpfgadapter", "package_url": "https://pypi.org/project/Products.sqlpfgadapter/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Products.sqlpfgadapter/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://plone.org/products/sqlpfgadapter"}, "release_url": "https://pypi.org/project/Products.sqlpfgadapter/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "A PloneFormGen Action Adapter for SQL storage", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>The goal for this package is:</p>\n<ul>\n<li>to make SQL storage from PloneFormGen easy</li>\n<li>to be usable with collective.megaphone</li>\n</ul>\n<p>To achieve this, we create a new PloneFormGen <a href=\"http://plone.org/products/ploneformgen/documentation/reference/fields-and-objects/adapters\" rel=\"nofollow\">action-adapter</a>.\nThis uses <a href=\"http://www.sqlalchemy.org\" rel=\"nofollow\">SQLAlchemy</a> (<a href=\"http://pypi.python.org/pypi/collective.lead\" rel=\"nofollow\">collective.lead</a>) to save the form data to the database.\n(SQLAlchemy should work on most SQL dialects.)</p>\n<p>You could also save PFG data in SQL by using a Z SQL Method as an\nafter-validation script, as described in the <a href=\"http://plone.org/products/ploneformgen/documentation/tutorial/sql-crud\" rel=\"nofollow\">SQL-CRUD-tutorial</a>.\nThis works, but:</p>\n<ul>\n<li>it\u2019s a lot of manual work, and quite cumbersome for ordinary users</li>\n<li>it doesn\u2019t work with <a href=\"http://plone.org/products/megaphone\" rel=\"nofollow\">collective.megaphone</a> (see <a href=\"http://plone.293351.n2.nabble.com/plan-for-easy-MySQL-storage-for-collective-megaphone-td5481845.html#a5481845\" rel=\"nofollow\">mailinglist-discussion</a>)</li>\n</ul>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<h2 id=\"developers\"><span class=\"section-subtitle\">Developers</span></h2>\n<p>To install a complete development setup:</p>\n<pre>svn co https://svn.plone.org/svn/collective/Products.PloneFormGen/adapters/Products.sqlpfgadapter/buildout/plone4 sqlpfg-plone4\ncd sqlpfg-plone4\npython2.6 bootstrap.py\n./bin/buildout -c buildout-dvl.cfg\n</pre>\n<p>Or, for Plone 3:</p>\n<pre>svn co https://svn.plone.org/svn/collective/Products.PloneFormGen/adapters/Products.sqlpfgadapter/buildout/plone3 sqlpfg-plone3\ncd sqlpfg-plone3\npython2.4 bootstrap.py\n./bin/buildout -c buildout-dvl.cfg\n</pre>\n<p>If you use another buildout configuration, be sure to include the \u201cKnown good\nset\u201d for plone.app.registry for your version of Plone. In the case of Plone 3,\nyou\u2019ll also want to pin <cite>z3c.form</cite> to <cite>1.9.0</cite>.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>As a site admin, go to the \u201cSQL Settings\u201d in Plone\u2019s control panel. You\u2019ll be\ntaken to \u201c@@sqlpfg-controlpanel\u201d. Here you can set your database connection\nsettings.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To save a form\u2019s data in the database, add an \u201cSQL Storage\u201d from the \u201cAdd\nnew\u2026\u201d menu in the Form Folder. Give it a title and save it.</p>\n<blockquote>\nA database table will be created. Its name is generated (from the Form\nFolder\u2019s id, among others), you can see it by viewing the adapter object.\nThe table has an \u2018id\u2019 column, and a column for each form field.</blockquote>\n<p>That\u2019s it! From now on, succesfully submitted forms will be stored in the\ndatabase.</p>\n<div id=\"usage-with-collective-megaphone\">\n<h3>Usage with collective.megaphone</h3>\n<p>The product will work just as well with collective.megaphone. However, to be\nable to add the action adapter to an Action Letter or Megaphone Action, you\nhave to add \u201cSQLPFGAdapter\u201d to the \u201cAllowed content types\u201d via the ZMI.</p>\n<p>The product <a href=\"http://svn.plone.org/svn/collective/collective.megaphonesql\" rel=\"nofollow\">collective.megaphonesql</a> can do this for you.</p>\n</div>\n</div>\n<div id=\"limitations\">\n<h2>Limitations</h2>\n<p>This product is under development. For now, we have major limitations:</p>\n<ul>\n<li>Not all PloneFormGen fields work, notably:<ul>\n<li>file field</li>\n<li>rating-scale field</li>\n</ul>\n</li>\n<li>Adding and removing fields, or changing their names, doesn\u2019t change the\ndatabase table. Field names for which there is no column will just be\ndiscarded.</li>\n</ul>\n</div>\n<div id=\"compatibility-dependencies\">\n<h2>Compatibility / Dependencies</h2>\n<p>Tested with:</p>\n<ul>\n<li>Plone: 3.3.5, 4.0</li>\n<li>PloneFormGen: 1.6.0b4, 1.6.0b5</li>\n<li>megaphone: 1.4.1, 2.0b1</li>\n<li>collective.lead 1.0, SQLAlchemy 0.4.8</li>\n<li>SQL: MySQL 5.1.41</li>\n</ul>\n<p>This product uses plone.app.registry for its controlpanel. In order for it to\nwork, use its \u201cKnown good set\u201d (see section \u201cDevelopers\u201d above).</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.0.1 (2011-01-10)</h3>\n<p>Re-release as source dist.</p>\n</div>\n<div id=\"id2\">\n<h3>1.0.0 (2010-11-10)</h3>\n<p>Python 2.4 binary release.</p>\n</div>\n<div id=\"b2-2010-09-26\">\n<h3>0.1b2 (2010-09-26)</h3>\n<ul>\n<li>typo in sqlApadapter.py</li>\n</ul>\n</div>\n<div id=\"b1-2010-09-26\">\n<h3>0.1b1 (2010-09-26)</h3>\n<ul>\n<li>Updated doc (tested and works on Plone 4)</li>\n<li>Add handling for decimal form field</li>\n</ul>\n</div>\n<div id=\"a2-2010-09-22\">\n<h3>0.1a2 (2010-09-22)</h3>\n<ul>\n<li>Renamed all \u201cMySQL\u201d to \u201cSQL\u201d, including content types. No upgrade provided!</li>\n<li>Added documentation about usage with collective.megaphone.</li>\n</ul>\n</div>\n<div id=\"a1-2010-09-20\">\n<h3>0.1a1 (2010-09-20)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 238711, "releases": {"0.1a1": [{"comment_text": "", "digests": {"md5": "daae8fceffd159badccbae33bbbbf14c", "sha256": "6282fbda94857f282c4dfb792eaa1b0e40b2ca54c45728bd4d93d5f1e14688ad"}, "downloads": -1, "filename": "Products.sqlpfgadapter-0.1a1.tar.gz", "has_sig": false, "md5_digest": "daae8fceffd159badccbae33bbbbf14c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19547, "upload_time": "2010-09-20T09:10:18", "upload_time_iso_8601": "2010-09-20T09:10:18.434307Z", "url": "https://files.pythonhosted.org/packages/fc/34/cdc2782f2d30ef41aef1deb09d9a8e670760aa01b3712874daf778fbb3bf/Products.sqlpfgadapter-0.1a1.tar.gz", "yanked": false}], "0.1a2": [{"comment_text": "", "digests": {"md5": "a5f42993ecc64c34ed8837bec1a18c62", "sha256": "63f045a75e0fdfadc3d36945b92d82cff3e12c25e835b3400b0e62e25139ad04"}, "downloads": -1, "filename": "Products.sqlpfgadapter-0.1a2.tar.gz", "has_sig": false, "md5_digest": "a5f42993ecc64c34ed8837bec1a18c62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19991, "upload_time": "2010-09-22T10:23:17", "upload_time_iso_8601": "2010-09-22T10:23:17.906711Z", "url": "https://files.pythonhosted.org/packages/31/5b/31cff4cefc8aac6099b34eb040c69ca78e940f10bc84743dd5d0e20d5750/Products.sqlpfgadapter-0.1a2.tar.gz", "yanked": false}], "0.1b1": [{"comment_text": "", "digests": {"md5": "06eb9a718bce5948f17105f3651126f7", "sha256": "4ea3dfb7f80b5e86e7f18ca9b8c10ba1d923015f8307a683d6d4bc154b8ab911"}, "downloads": -1, "filename": "Products.sqlpfgadapter-0.1b1.tar.gz", "has_sig": false, "md5_digest": "06eb9a718bce5948f17105f3651126f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20113, "upload_time": "2010-09-26T02:35:25", "upload_time_iso_8601": "2010-09-26T02:35:25.698709Z", "url": "https://files.pythonhosted.org/packages/1b/6e/6713612513965cb5b334a479d64735efbdf6dada18f240996a9e2a5e5d31/Products.sqlpfgadapter-0.1b1.tar.gz", "yanked": false}], "0.1b2": [{"comment_text": "", "digests": {"md5": "2a6d206f45ecfbcf458c32953a37ccb7", "sha256": "6600160b7a132c4e706bdc6fd5076bac360b8a6832fedd3cd75bec3fe7953085"}, "downloads": -1, "filename": "Products.sqlpfgadapter-0.1b2.tar.gz", "has_sig": false, "md5_digest": "2a6d206f45ecfbcf458c32953a37ccb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20196, "upload_time": "2010-09-26T02:49:37", "upload_time_iso_8601": "2010-09-26T02:49:37.525419Z", "url": "https://files.pythonhosted.org/packages/34/38/38d1a9606e548be7eec9bc25370137c5cc64ca1d6c102c97939f8339779a/Products.sqlpfgadapter-0.1b2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "07d37090fe5e78f1191419ca28595cbc", "sha256": "16b486e5d4b7bf4072ab3b8f82283c4102d7ffe753da17e84721e65461d86a36"}, "downloads": -1, "filename": "Products.sqlpfgadapter-1.0.0-py2.4.egg", "has_sig": false, "md5_digest": "07d37090fe5e78f1191419ca28595cbc", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 25734, "upload_time": "2010-11-10T11:57:40", "upload_time_iso_8601": "2010-11-10T11:57:40.565431Z", "url": "https://files.pythonhosted.org/packages/bb/36/417197fc86e0a460ce1795073b009bb9e2ee43542e61a8fed64d1265e813/Products.sqlpfgadapter-1.0.0-py2.4.egg", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "28e3b7c2854408ff4b3a57e1fcceb3e8", "sha256": "ab642ec5ca0c36e5163751ec9a0b180dbd2a1f7f968f2475d49acac909e3c7b5"}, "downloads": -1, "filename": "Products.sqlpfgadapter-1.0.1.tar.gz", "has_sig": false, "md5_digest": "28e3b7c2854408ff4b3a57e1fcceb3e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20125, "upload_time": "2011-01-10T16:06:20", "upload_time_iso_8601": "2011-01-10T16:06:20.281270Z", "url": "https://files.pythonhosted.org/packages/e0/59/c533052dd49648fc6bee8a2c8524160828bae7b10527668f0f418be01d01/Products.sqlpfgadapter-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "28e3b7c2854408ff4b3a57e1fcceb3e8", "sha256": "ab642ec5ca0c36e5163751ec9a0b180dbd2a1f7f968f2475d49acac909e3c7b5"}, "downloads": -1, "filename": "Products.sqlpfgadapter-1.0.1.tar.gz", "has_sig": false, "md5_digest": "28e3b7c2854408ff4b3a57e1fcceb3e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20125, "upload_time": "2011-01-10T16:06:20", "upload_time_iso_8601": "2011-01-10T16:06:20.281270Z", "url": "https://files.pythonhosted.org/packages/e0/59/c533052dd49648fc6bee8a2c8524160828bae7b10527668f0f418be01d01/Products.sqlpfgadapter-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:40 2020"}