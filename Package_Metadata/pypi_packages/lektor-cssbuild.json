{"info": {"author": "H. Turgut Uyar", "author_email": "uyar@tekir.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Plugins", "Environment :: Web Environment", "Framework :: Lektor", "License :: OSI Approved :: BSD License"], "description": "|pypi| |license|\n\n.. |pypi| image:: https://img.shields.io/pypi/v/lektor-cssbuild.svg?style=flat-square\n    :target: https://pypi.org/project/lektor-cssbuild/\n    :alt: PyPI version.\n\n.. |license| image:: https://img.shields.io/pypi/l/lektor-cssbuild.svg?style=flat-square\n    :target: https://github.com/uyar/lektor-cssbuild/blob/master/LICENSE.txt\n    :alt: Project license.\n\nlektor-cssbuild is a plugin for the `Lektor <https://www.getlektor.com>`_\nstatic site generator that integrates CSS manipulation tools\ninto the build process. The tools that it uses are:\n\n- `libsass-python <https://github.com/sass/libsass-python>`_ is run\n  before the Lektor build to generate a CSS file.\n\n- `uncss <https://github.com/uncss/uncss>`_ is run\n  after the Lektor build to remove unused CSS.\n\n- `rcssmin <https://github.com/ndparker/rcssmin/>`_ is run\n  as the last step to minify the CSS.\n\nTo use the plugin, add it to your project::\n\n  lektor plugin add lektor-cssbuild\n\nCreate a ``package.json`` file (the name and version aren't significant\nfor the plugin)::\n\n  {\n    \"name\": \"my-project-cssbuild\",\n    \"version\": \"1.0.0\",\n    \"private\": true\n  }\n\nInstall uncss::\n\n  npm install --save-dev uncss\n\nCreate a configuration file ``configs/cssbuild.ini`` and set the tool paths\n(assuming that your source sass file is ``style/sass/main.scss``)::\n\n  [sass]\n  source = src:style/sass/\n  output = src:assets/static/\n\n  [uncss]\n  output = dst:static/main.nested.css\n\n  [cssmin]\n  source = dst:static/main.nested.css\n  output = dst:static/main.css\n\nWhen writing a path, the ``src`` prefix refers to a path\nin the source folders and the ``dst`` prefix refers\nto the build folders.\n\nIf any tool section is missing, that tool will be skipped.\n\nTo enable the plugin during Lektor build, the ``cssbuild`` flag\nhas to be included (same for the ``server`` command):: \n\n  lektor build -f cssbuild\n\nUsing the above configuration, the build process will run as follows:\n\n- The ``style/sass/main.scss`` file is read\n  and the file ``assets/static/main.css`` is generated.\n\n- Lektor generates the site artifacts.\n\n- Based on the generated HTML pages, the unused CSS rules are removed\n  and the result is written into the ``static/main.nested.css`` file\n  *in the build directory*.\n\n- The generated ``static/main.nested.css`` file is minified\n  and the result is written into the ``main.css`` file\n  in the same directory.\n\nDuring uncss, the ``ignore`` option can be used to make sure\nto keep some selectors::\n\n  [uncss]\n  output = src:style/css/main.css\n  ignore = \"/\\.selector1.*/\"\n\n\n0.3.1 (2019-08-10)\n------------------\n\n- Fix npm install bug.\n\n0.3 (2019-08-09)\n----------------\n\n- Replace node-sass with libsass-python.\n- Replace node-cssmin with python rcssmin.\n\n0.2 (2019-08-06)\n----------------\n\n- Add ignore option to uncss stage.\n\n0.1 (2019-08-06)\n----------------\n\n- Initial release on PyPI.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/uyar/lektor-cssbuild", "keywords": "lektor plugin static-site CMS sass uncss cssmin", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "lektor-cssbuild", "package_url": "https://pypi.org/project/lektor-cssbuild/", "platform": "", "project_url": "https://pypi.org/project/lektor-cssbuild/", "project_urls": {"Homepage": "https://github.com/uyar/lektor-cssbuild"}, "release_url": "https://pypi.org/project/lektor-cssbuild/0.3.1/", "requires_dist": null, "requires_python": "", "summary": "A Lektor plugin for building CSS files", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/lektor-cssbuild/\" rel=\"nofollow\"><img alt=\"PyPI version.\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c7e319c467b58d8e414ee61058beee7b5a79b50/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c656b746f722d6373736275696c642e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://github.com/uyar/lektor-cssbuild/blob/master/LICENSE.txt\" rel=\"nofollow\"><img alt=\"Project license.\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8a22f1cc8c7496f0024373e332e2424d0ea8314e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6c656b746f722d6373736275696c642e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<p>lektor-cssbuild is a plugin for the <a href=\"https://www.getlektor.com\" rel=\"nofollow\">Lektor</a>\nstatic site generator that integrates CSS manipulation tools\ninto the build process. The tools that it uses are:</p>\n<ul>\n<li><a href=\"https://github.com/sass/libsass-python\" rel=\"nofollow\">libsass-python</a> is run\nbefore the Lektor build to generate a CSS file.</li>\n<li><a href=\"https://github.com/uncss/uncss\" rel=\"nofollow\">uncss</a> is run\nafter the Lektor build to remove unused CSS.</li>\n<li><a href=\"https://github.com/ndparker/rcssmin/\" rel=\"nofollow\">rcssmin</a> is run\nas the last step to minify the CSS.</li>\n</ul>\n<p>To use the plugin, add it to your project:</p>\n<pre>lektor plugin add lektor-cssbuild\n</pre>\n<p>Create a <tt>package.json</tt> file (the name and version aren\u2019t significant\nfor the plugin):</p>\n<pre>{\n  \"name\": \"my-project-cssbuild\",\n  \"version\": \"1.0.0\",\n  \"private\": true\n}\n</pre>\n<p>Install uncss:</p>\n<pre>npm install --save-dev uncss\n</pre>\n<p>Create a configuration file <tt>configs/cssbuild.ini</tt> and set the tool paths\n(assuming that your source sass file is <tt>style/sass/main.scss</tt>):</p>\n<pre>[sass]\nsource = src:style/sass/\noutput = src:assets/static/\n\n[uncss]\noutput = dst:static/main.nested.css\n\n[cssmin]\nsource = dst:static/main.nested.css\noutput = dst:static/main.css\n</pre>\n<p>When writing a path, the <tt>src</tt> prefix refers to a path\nin the source folders and the <tt>dst</tt> prefix refers\nto the build folders.</p>\n<p>If any tool section is missing, that tool will be skipped.</p>\n<p>To enable the plugin during Lektor build, the <tt>cssbuild</tt> flag\nhas to be included (same for the <tt>server</tt> command):</p>\n<pre>lektor build -f cssbuild\n</pre>\n<p>Using the above configuration, the build process will run as follows:</p>\n<ul>\n<li>The <tt>style/sass/main.scss</tt> file is read\nand the file <tt>assets/static/main.css</tt> is generated.</li>\n<li>Lektor generates the site artifacts.</li>\n<li>Based on the generated HTML pages, the unused CSS rules are removed\nand the result is written into the <tt>static/main.nested.css</tt> file\n<em>in the build directory</em>.</li>\n<li>The generated <tt>static/main.nested.css</tt> file is minified\nand the result is written into the <tt>main.css</tt> file\nin the same directory.</li>\n</ul>\n<p>During uncss, the <tt>ignore</tt> option can be used to make sure\nto keep some selectors:</p>\n<pre>[uncss]\noutput = src:style/css/main.css\nignore = \"/\\.selector1.*/\"\n</pre>\n<div id=\"id1\">\n<h2>0.3.1 (2019-08-10)</h2>\n<ul>\n<li>Fix npm install bug.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>0.3 (2019-08-09)</h2>\n<ul>\n<li>Replace node-sass with libsass-python.</li>\n<li>Replace node-cssmin with python rcssmin.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h2>0.2 (2019-08-06)</h2>\n<ul>\n<li>Add ignore option to uncss stage.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h2>0.1 (2019-08-06)</h2>\n<ul>\n<li>Initial release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5660034, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "20a011a400c7d4755294c69999804650", "sha256": "64edb2d892602e932b9002c9b660b533e5c199cb24bb70a3245991be9687bfd0"}, "downloads": -1, "filename": "lektor-cssbuild-0.1.tar.gz", "has_sig": false, "md5_digest": "20a011a400c7d4755294c69999804650", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4254, "upload_time": "2019-08-05T23:19:00", "upload_time_iso_8601": "2019-08-05T23:19:00.638930Z", "url": "https://files.pythonhosted.org/packages/59/e5/c1426d64b0703ab677db9187b02921b5751981f54d634ac6d6f7668b4417/lektor-cssbuild-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "33eb3b53ea6630b6047cdc4e440513ca", "sha256": "9d803cd373eb4ad0262166f17319b17b1823c03bf3968ae431f4c4711b5eac01"}, "downloads": -1, "filename": "lektor-cssbuild-0.2.tar.gz", "has_sig": false, "md5_digest": "33eb3b53ea6630b6047cdc4e440513ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4434, "upload_time": "2019-08-06T16:51:01", "upload_time_iso_8601": "2019-08-06T16:51:01.965748Z", "url": "https://files.pythonhosted.org/packages/4d/b3/d65815a85a8e507aa2083c02af8017b5eba662a12f2ada9bddf493edb358/lektor-cssbuild-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "1ff6ab356cc92178980f2cc3f0a09d32", "sha256": "a66f6304d1ef913eeaf425212a166e547d6d1853273048d86c2ca92211055c5c"}, "downloads": -1, "filename": "lektor-cssbuild-0.3.tar.gz", "has_sig": false, "md5_digest": "1ff6ab356cc92178980f2cc3f0a09d32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4494, "upload_time": "2019-08-09T15:31:30", "upload_time_iso_8601": "2019-08-09T15:31:30.560164Z", "url": "https://files.pythonhosted.org/packages/bd/8d/c8be3183a62ddb49bc300fb0dbf54a05c4947aea9486ac576079c68a7faf/lektor-cssbuild-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "97ef7bcfafac440e76f81116625092fe", "sha256": "19407431a501a20dad6a7083d26ba5a1a4e0484487064f0c1a6e9fe9ab0e04ac"}, "downloads": -1, "filename": "lektor-cssbuild-0.3.1.tar.gz", "has_sig": false, "md5_digest": "97ef7bcfafac440e76f81116625092fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4667, "upload_time": "2019-08-10T18:45:11", "upload_time_iso_8601": "2019-08-10T18:45:11.166859Z", "url": "https://files.pythonhosted.org/packages/5c/d6/6ea6d3f3548cbbe2e12c3830d6ff93808d7f44019d6f4a95cb26756de372/lektor-cssbuild-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "97ef7bcfafac440e76f81116625092fe", "sha256": "19407431a501a20dad6a7083d26ba5a1a4e0484487064f0c1a6e9fe9ab0e04ac"}, "downloads": -1, "filename": "lektor-cssbuild-0.3.1.tar.gz", "has_sig": false, "md5_digest": "97ef7bcfafac440e76f81116625092fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4667, "upload_time": "2019-08-10T18:45:11", "upload_time_iso_8601": "2019-08-10T18:45:11.166859Z", "url": "https://files.pythonhosted.org/packages/5c/d6/6ea6d3f3548cbbe2e12c3830d6ff93808d7f44019d6f4a95cb26756de372/lektor-cssbuild-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:09 2020"}