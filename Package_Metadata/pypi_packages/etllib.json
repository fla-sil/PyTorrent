{"info": {"author": "Chris Mattmann", "author_email": "chris.a.mttmnn@nasa.gov", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Database :: Front-Ends", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "**********\netllib\n***************\n\n.. contents::\n\nETLlib provides functionality for munging through and repackaging\nJSON, TSV and other data for preparation and submission (ETL) to Apache Solr. The \nlibrary takes advantage of Apache Tika, and is callable from Apache OODT.\n\nUsing ETLlib\n****************\n\nInstalling the ETLlib package makes available four things on your\ncomputer:\n\n``repackage`` command\n    The ``repackage`` command takes an original paged JSON file, strips\n    off the paging information, isolates the identified object type (e.g., \"teams\"\n    or \"journal_entries\", etc.), and may perform some basic cleaning and metadata\n    addition using Apache Tika on the fields within the JSON document.\n``poster`` command\n    The ``poster`` command lets post individual reformulated  JSON documents\n    to Apache Solr.\n``repackageandpost`` command\n    The repackageandpost command combines repackage, and poster, and\n    obviates the need to store the repackaged JSON doc as an intermediate file, and\n    then repackages (keeps docs in memory) and then posts directly to Apache Solr.\n``tsvtojson`` command\n    Takes an input TSV file and parses it with a set of column headers and outputs a \n    JSON file.\n``translatejson`` command\n    Takes an input JSON file and a column header file and cred file and translates from \n    source lang to dest lang using Bing's API and Apache Tika.\n``imagesimilarity`` command\n    Computes the similarity between a directory full of image files using a feature-based \n    approach based on Jaccard's algorithm. Clusters scores. Uses Tika.\n    \n    \nETLlib Library\n    The ETLlib Library is a Python-based API for munging  data and\n    doing ETL. The library was originally developed as a set of Python scripts \n    to be integrated into an Apache OODT ETL process through parsing/Apache Tika \n    cleanup and then on to Apache Solr for analytics.\n    \nThis document describes how to use the above three items, with special\nattention to the ETLlib library.\n\nCommands\n========\n\nAfter installing the ETLlib package,  new commands are made available on\nyour system, ``repackage`` and ``poster`` and ``repackageandpost`` and \n``tsvtojson`` and ``translatejson`` and ``imagesimiliarity``..  \nThese commands enable you to reformulate \naggregate  JSON documents, cleanse their fields (which may contain UTF-8 or other \nweird encodings), convert from different formats (e.g., TSV to JSON), translate \nfields within the documents using Apache Tika, and then to post those documents to Apache Solr. \nThese were developed initially independently as python scripts that are wrapped using \nApache OODT ETL workflows, but later Chris Mattmann <mattmann@apache.org>\ndecided they would be useful as a installable python library.\n\nTo use these commands from your interactive prompt, you just need to make sure\nyour shell's PATH environment variable includes the directory where the\ncommands are installed.  On most systems, these two commands are installed in::\n\n    /usr/bin\n\nHowever, on Mac OS X, the installation location may be::\n\n    /Library/Frameworks/Python.framework/Versions/Current/bin\n    \nAnd on Windows, it may be::\n\n    c:\\Program Files\\Python\n    \nNote also that some interactive shells create a cache of commands in order to\nexecute your requests more quickly.  You may need to force your shell to\nre-build that cache.  The csh and tcsh shells are two such examples; you can\nmake these shells rebuild their caches by running the ``rehash`` command.\n\n\nUse from Shell Scripts\n----------------------\n\nThe ``repackage`` and ``poster`` and ``repackageandpost`` and ``tsvtojson`` and\n``translatejson`` and ``imagesimilarity`` commands  may be used \nfrom shell scripts as well.  The only \nrequirement for making these  commands available to shell scripts is the same as \nfor interactive sessions:  the shell's PATH environment variable must include the \ndirectory that contains the commands.\n\nHere is a sample shell script that repackages a  Teams JSON file of 20 aggregate\nrecords, and outputs 20 individual Teams JSON files ::\n\n    #!/bin/bash\n\n    for ag in $(ls /data/xdata/Kiva/raw/RAW__json_teams_9Feb2013); do \n        repackage -j $ag -o teams\n    done\n\n    \nThe above shell script assumes that ``repackage`` will be found in\n``/usr/local/bin``, ``/usr/bin``, or ``/bin``.  It then loops through\nthe aggregate teams JSON files from the Kiva raw dataset and then hands\neach aggregate JSON file to the repackage script, which unravels those\n1234 teams JSON data files into 1234 * 20 = 24680 individual team JSON files.\n\nThe rest of the commands may also be used from a shell script.  \n\nSome example working commands are:\n\nPipe a single  JSON journal entries file into the repackageandpost script::\n\necho \"/data/xdata/Kiva/raw/RAW__json_journalEntries_04Mar2013/365/191677_journalentries_pg1_retreived-2013_03_04_21_56.json\" \\\n| repackageandpost -u \"http://localhost:8080/solr/journalentries/update/json?commit=true\" -o journal_entries -v\n\nTake in an input TSV file named computrabajo-ve-20121108.tsv and turn it into a JSON file with a root object named employmentjobs using the provided colheaders.txt file::\n\ntsvtojson -t data/staging/computrabajo-ve-20121108.tsv -j data/jobs/tsvtojson/1/output/computrabajo-ve-20121108.json -c conf/colheaders.txt -o employmentjobs\n\nExtract out the ~9000 or so jobs present in computrabajo-ve-20121108.json under the \"employmentjobs\" key:\n\nrepackage -j ../../../../../data/jobs/tsvtojson/1/output/computrabajo-ve-20121108.json -o employmentjobs\n\nTranslate the fields defined in translate.cols in the JSON file named 648c3a4a-22d1-4a43-b0da-9c8e45716e40.json from spanish (\"es\") to english (\"en\") and output the translated JSON named 648c3a4a-22d1-4a43-b0da-9c8e45716e40-t.json, using Bing and Apache Tika and the provided credentials:: \n\ntranslatejson -i data/jobs/repackager/1/output/648c3a4a-22d1-4a43-b0da-9c8e45716e40.json -j data/jobs/translate/1/output/648c3a4a-22d1-4a43-b0da-9c8e45716e40-t.json -c src/tika-python/lib/translate.cols -p src/tika-python/lib/translator.creds -f es -t en -v\n\nCompute the similarity of images in your $HOME/Pictures directory on Mac:\n\ncd $HOME/Pictures && imagesimilarity -m -f . > similarity-scores.txt\n\n\nETLlib Library\n===========\n\nThe ETLlib Library is a Python-based application programming interface (API) for\nmunging and processing  JSON data for ETL and analytics. In fact, the commands \n``poster`` and ``repackage`` and ``repackageandpost`` and ``tsvtojson`` and ``translatejson`` \nand ``imagesimilarity`` are implemented using the ETLlib Library.  If \nshell-script programming is not to your taste, and you\nknow Python, then using the ETLlib Library may be right for you.\n\n\n\nChangelog\n*********\n\n0.0.2 - Refactor to use new Python-Tika lib\n===========================================\n\nCurrent Development.\n\n\n0.0.1 - Updated to include ClusterScores and Image Similarity\n=============================================================\n\nIncludes tools to handle image similarity.\n\n0.0.0 - Initial\n===============\n\nThis is an initial release of etllib supporting capability for\nreformulating JSON data using Tika_ and JSON read/write in prep\nfor ETL using OODT_ into Solr_.\n\n\n.. References:\n.. _OODT: http://oodt.apache.org/\n.. _Tika: http://tika.apache.org/\n.. _Solr: http://lucene.apache.org/solr/", "description_content_type": null, "docs_url": null, "download_url": "http://github.com/chrismattmann/etllib", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/chrismattmann/etllib", "keywords": "xdata darpa etl tika solr oodt jpl", "license": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.", "maintainer": null, "maintainer_email": null, "name": "etllib", "package_url": "https://pypi.org/project/etllib/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/etllib/", "project_urls": {"Download": "http://github.com/chrismattmann/etllib", "Homepage": "http://github.com/chrismattmann/etllib"}, "release_url": "https://pypi.org/project/etllib/1.1/", "requires_dist": null, "requires_python": null, "summary": "Extract, Transform and Load library.", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            **********<br>etllib<br>***************<br><br>.. contents::<br><br>ETLlib provides functionality for munging through and repackaging<br>JSON, TSV and other data for preparation and submission (ETL) to Apache Solr. The <br>library takes advantage of Apache Tika, and is callable from Apache OODT.<br><br>Using ETLlib<br>****************<br><br>Installing the ETLlib package makes available four things on your<br>computer:<br><br>``repackage`` command<br>    The ``repackage`` command takes an original paged JSON file, strips<br>    off the paging information, isolates the identified object type (e.g., \"teams\"<br>    or \"journal_entries\", etc.), and may perform some basic cleaning and metadata<br>    addition using Apache Tika on the fields within the JSON document.<br>``poster`` command<br>    The ``poster`` command lets post individual reformulated  JSON documents<br>    to Apache Solr.<br>``repackageandpost`` command<br>    The repackageandpost command combines repackage, and poster, and<br>    obviates the need to store the repackaged JSON doc as an intermediate file, and<br>    then repackages (keeps docs in memory) and then posts directly to Apache Solr.<br>``tsvtojson`` command<br>    Takes an input TSV file and parses it with a set of column headers and outputs a <br>    JSON file.<br>``translatejson`` command<br>    Takes an input JSON file and a column header file and cred file and translates from <br>    source lang to dest lang using Bing's API and Apache Tika.<br>``imagesimilarity`` command<br>    Computes the similarity between a directory full of image files using a feature-based <br>    approach based on Jaccard's algorithm. Clusters scores. Uses Tika.<br>    <br>    <br>ETLlib Library<br>    The ETLlib Library is a Python-based API for munging  data and<br>    doing ETL. The library was originally developed as a set of Python scripts <br>    to be integrated into an Apache OODT ETL process through parsing/Apache Tika <br>    cleanup and then on to Apache Solr for analytics.<br>    <br>This document describes how to use the above three items, with special<br>attention to the ETLlib library.<br><br>Commands<br>========<br><br>After installing the ETLlib package,  new commands are made available on<br>your system, ``repackage`` and ``poster`` and ``repackageandpost`` and <br>``tsvtojson`` and ``translatejson`` and ``imagesimiliarity``..  <br>These commands enable you to reformulate <br>aggregate  JSON documents, cleanse their fields (which may contain UTF-8 or other <br>weird encodings), convert from different formats (e.g., TSV to JSON), translate <br>fields within the documents using Apache Tika, and then to post those documents to Apache Solr. <br>These were developed initially independently as python scripts that are wrapped using <br>Apache OODT ETL workflows, but later Chris Mattmann &lt;mattmann@apache.org&gt;<br>decided they would be useful as a installable python library.<br><br>To use these commands from your interactive prompt, you just need to make sure<br>your shell's PATH environment variable includes the directory where the<br>commands are installed.  On most systems, these two commands are installed in::<br><br>    /usr/bin<br><br>However, on Mac OS X, the installation location may be::<br><br>    /Library/Frameworks/Python.framework/Versions/Current/bin<br>    <br>And on Windows, it may be::<br><br>    c:\\Program Files\\Python<br>    <br>Note also that some interactive shells create a cache of commands in order to<br>execute your requests more quickly.  You may need to force your shell to<br>re-build that cache.  The csh and tcsh shells are two such examples; you can<br>make these shells rebuild their caches by running the ``rehash`` command.<br><br><br>Use from Shell Scripts<br>----------------------<br><br>The ``repackage`` and ``poster`` and ``repackageandpost`` and ``tsvtojson`` and<br>``translatejson`` and ``imagesimilarity`` commands  may be used <br>from shell scripts as well.  The only <br>requirement for making these  commands available to shell scripts is the same as <br>for interactive sessions:  the shell's PATH environment variable must include the <br>directory that contains the commands.<br><br>Here is a sample shell script that repackages a  Teams JSON file of 20 aggregate<br>records, and outputs 20 individual Teams JSON files ::<br><br>    #!/bin/bash<br><br>    for ag in $(ls /data/xdata/Kiva/raw/RAW__json_teams_9Feb2013); do <br>        repackage -j $ag -o teams<br>    done<br><br>    <br>The above shell script assumes that ``repackage`` will be found in<br>``/usr/local/bin``, ``/usr/bin``, or ``/bin``.  It then loops through<br>the aggregate teams JSON files from the Kiva raw dataset and then hands<br>each aggregate JSON file to the repackage script, which unravels those<br>1234 teams JSON data files into 1234 * 20 = 24680 individual team JSON files.<br><br>The rest of the commands may also be used from a shell script.  <br><br>Some example working commands are:<br><br>Pipe a single  JSON journal entries file into the repackageandpost script::<br><br>echo \"/data/xdata/Kiva/raw/RAW__json_journalEntries_04Mar2013/365/191677_journalentries_pg1_retreived-2013_03_04_21_56.json\" \\<br>| repackageandpost -u \"http://localhost:8080/solr/journalentries/update/json?commit=true\" -o journal_entries -v<br><br>Take in an input TSV file named computrabajo-ve-20121108.tsv and turn it into a JSON file with a root object named employmentjobs using the provided colheaders.txt file::<br><br>tsvtojson -t data/staging/computrabajo-ve-20121108.tsv -j data/jobs/tsvtojson/1/output/computrabajo-ve-20121108.json -c conf/colheaders.txt -o employmentjobs<br><br>Extract out the ~9000 or so jobs present in computrabajo-ve-20121108.json under the \"employmentjobs\" key:<br><br>repackage -j ../../../../../data/jobs/tsvtojson/1/output/computrabajo-ve-20121108.json -o employmentjobs<br><br>Translate the fields defined in translate.cols in the JSON file named 648c3a4a-22d1-4a43-b0da-9c8e45716e40.json from spanish (\"es\") to english (\"en\") and output the translated JSON named 648c3a4a-22d1-4a43-b0da-9c8e45716e40-t.json, using Bing and Apache Tika and the provided credentials:: <br><br>translatejson -i data/jobs/repackager/1/output/648c3a4a-22d1-4a43-b0da-9c8e45716e40.json -j data/jobs/translate/1/output/648c3a4a-22d1-4a43-b0da-9c8e45716e40-t.json -c src/tika-python/lib/translate.cols -p src/tika-python/lib/translator.creds -f es -t en -v<br><br>Compute the similarity of images in your $HOME/Pictures directory on Mac:<br><br>cd $HOME/Pictures &amp;&amp; imagesimilarity -m -f . &gt; similarity-scores.txt<br><br><br>ETLlib Library<br>===========<br><br>The ETLlib Library is a Python-based application programming interface (API) for<br>munging and processing  JSON data for ETL and analytics. In fact, the commands <br>``poster`` and ``repackage`` and ``repackageandpost`` and ``tsvtojson`` and ``translatejson`` <br>and ``imagesimilarity`` are implemented using the ETLlib Library.  If <br>shell-script programming is not to your taste, and you<br>know Python, then using the ETLlib Library may be right for you.<br><br><br><br>Changelog<br>*********<br><br>0.0.2 - Refactor to use new Python-Tika lib<br>===========================================<br><br>Current Development.<br><br><br>0.0.1 - Updated to include ClusterScores and Image Similarity<br>=============================================================<br><br>Includes tools to handle image similarity.<br><br>0.0.0 - Initial<br>===============<br><br>This is an initial release of etllib supporting capability for<br>reformulating JSON data using Tika_ and JSON read/write in prep<br>for ETL using OODT_ into Solr_.<br><br><br>.. References:<br>.. _OODT: http://oodt.apache.org/<br>.. _Tika: http://tika.apache.org/<br>.. _Solr: http://lucene.apache.org/solr/\n          </div>"}, "last_serial": 2200002, "releases": {"1.0": [], "1.1": [{"comment_text": "", "digests": {"md5": "4d87c971b3467ec0a23874392450d907", "sha256": "e93381efd95b11d370b1d734252d246febc944e73d388aac616870ffe1495c8d"}, "downloads": -1, "filename": "etllib-1.1-py2.7.egg", "has_sig": false, "md5_digest": "4d87c971b3467ec0a23874392450d907", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 49550, "upload_time": "2016-07-03T01:23:12", "upload_time_iso_8601": "2016-07-03T01:23:12.919424Z", "url": "https://files.pythonhosted.org/packages/75/bc/167688587ec93b3cb54a76c692ae3d6b896865ea1b63b69523d706b31a47/etllib-1.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "947b4b5356fd106434a3498983d4bcaa", "sha256": "21fc3857f04e626c5a3d2d0dc7caf5755cdba9a6c762f9d3b5b60d00837fb205"}, "downloads": -1, "filename": "etllib-1.1.tar.gz", "has_sig": false, "md5_digest": "947b4b5356fd106434a3498983d4bcaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24707, "upload_time": "2016-07-03T01:23:17", "upload_time_iso_8601": "2016-07-03T01:23:17.492930Z", "url": "https://files.pythonhosted.org/packages/e8/6a/8f017bfd3a9c8857302330407f10b861ddb12ee0ae64a289d75aa4d2256f/etllib-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4d87c971b3467ec0a23874392450d907", "sha256": "e93381efd95b11d370b1d734252d246febc944e73d388aac616870ffe1495c8d"}, "downloads": -1, "filename": "etllib-1.1-py2.7.egg", "has_sig": false, "md5_digest": "4d87c971b3467ec0a23874392450d907", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 49550, "upload_time": "2016-07-03T01:23:12", "upload_time_iso_8601": "2016-07-03T01:23:12.919424Z", "url": "https://files.pythonhosted.org/packages/75/bc/167688587ec93b3cb54a76c692ae3d6b896865ea1b63b69523d706b31a47/etllib-1.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "947b4b5356fd106434a3498983d4bcaa", "sha256": "21fc3857f04e626c5a3d2d0dc7caf5755cdba9a6c762f9d3b5b60d00837fb205"}, "downloads": -1, "filename": "etllib-1.1.tar.gz", "has_sig": false, "md5_digest": "947b4b5356fd106434a3498983d4bcaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24707, "upload_time": "2016-07-03T01:23:17", "upload_time_iso_8601": "2016-07-03T01:23:17.492930Z", "url": "https://files.pythonhosted.org/packages/e8/6a/8f017bfd3a9c8857302330407f10b861ddb12ee0ae64a289d75aa4d2256f/etllib-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:24 2020"}