{"info": {"author": "Evan W. Patton", "author_email": "ewpatton@mit.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: JavaScript", "Programming Language :: Python :: 3", "Topic :: Education", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Software Development", "Topic :: Software Development :: Code Generators"], "description": "# MIT App Inventor TFJS Extension Generator\n\nThe aim of this tool is to make it easier to generate the scaffolding needed to use a Tensorflow.js model in App Inventor.\n\n## Quickstart\n\nInstall dependencies:\n\n* java 8\n* ant 1.10\n* python 3\n* node\n* npm\n* git\n\nInstall the App Inventor TFJS extension generator using pip:\n\n```\npip install appinventor-tfjs\n```\n\nCreate an extension prototype for Posenet:\n\n```\npython -m appinventor.tfjs posenet edu.mit.appinventor.ai.posenet.PosenetExtension\n```\n\nThe output of this command will be a new directory called PosenetExtension. Within this directory, you will find a fresh git clone of the App Inventor extension template repository. The directory will have the following structure:\n\n```\nbuild.xml\nlib\n \u251c\u2500 android\n \u2502   \u251c\u2500 android.jar\n \u2502   \u251c\u2500 appcompat-v7-28.0.0.jar\n \u2502   \u2514\u2500 dx.jar\n \u251c\u2500 ant-contrib\n \u2502   \u2514\u2500 ant-contrib-1.0b3.jar\n \u251c\u2500 appinventor\n \u2502   \u2514\u2500 AndroidRuntime.jar\n \u2502   \u2514\u2500 AnnotationProcessors.jar\n \u2514\u2500 deps\nREADME.md\nsrc\n \u2514\u2500 edu\n     \u2514\u2500 mit\n         \u2514\u2500 appinventor\n             \u2514\u2500 ai\n                 \u2514\u2500 posenet\n                     \u251c\u2500 assets\n                     \u2502   \u251c\u2500 app.js\n                     \u2502   \u251c\u2500 group1-shard1of2.bin\n                     \u2502   \u251c\u2500 group1-shard2of2.bin\n                     \u2502   \u251c\u2500 index.html\n                     \u2502   \u251c\u2500 model-stride16.json\n                     \u2502   \u251c\u2500 posenet.min.js\n                     \u2502   \u251c\u2500 tf-converter.min.js\n                     \u2502   \u251c\u2500 tf-core.min.js\n                     \u2502   \u2514\u2500 VERSIONS\n                     \u2514\u2500 PosenetExtension.java\n```\n\nOf those files, the ones under `src` are most interesting. Briefly:\n\n* `PosenetExtension.java` - Boilerplate extension code for a TFJS extneion in App Inventor. You will want to customize it to provide model-specific behavior, such as interpreting the results before passing information back to the blocks layer.\n* `app.js` - Boilerplate Javascript code to load the model and interact with the Java code in the App Inventor extension. You will need to modify this to interact correctly with the TFJS model, such as calling the correct method to start the model and interpret its output for App Inventor.\n* `group-*.bin` - These are the weights at each level of the model, pulled from the TFJS model repository. The number of files will vary based on the size of the model.\n* `index.html` - The index.html file loads all of the prerequisite Javascript files. It generally does not need to be modified.\n* `*.min.js` - Minified Javascript code for the model and any dependencies, such as tfjs-core and tfjs-converter.\n* `VERSIONS` - The VERSIONS file contains a key-value mapping the different npm modules to the versions that were retrieved. There should be one entry per min.js file.\n\n## Usage\n\n```\nusage: python -m appinventor.tfjs [-h] [--scope SCOPE] model_name class_name\n\nCreate a TensorFlow.js-based extension for MIT App Inventor.\n\npositional arguments:\n  model_name\n  class_name\n\noptional arguments:\n  -h, --help     show this help message and exit\n  --scope SCOPE\n```\n\nThe `model_name` argument names the Tensorflow.js model of interest. A list of pretrained models is available on [GitHub](https://github.com/tensorflow/tfjs-models). For example, if you are interested in trying the MobileNet model, you would specify `mobilenet` as the `model_name`.\n\nThe `class_name` argument specifies a fully qualified Java class name that will be used for the extension. For example, a MobileNet extension for App Inventor might have the fully qualified class name `com.example.tfjs.mobile.MobileNetExtension`. The extension generator will create this class and any intermediate packages for you.\n\nThe optional `--scope SCOPE` argument allows you to import models from npm packages that are not under the `@tensorflow-models` namespace (effectively, if `--scope` is not specified it is the same as `--scope @tensorflow-models`).\n\n## Development\n\n### Dependencies\n\nYou will need to create a virtual environment and install the dependencies by running. We provide instructions for macOS below.\n\n### Create a virtualenv\n\n#### macOS\n\n1. Install Homebrew\n2. Install pyenv\n\n   ```shell\n   brew install pyenv\n   echo \"eval \\\"\\$(pyenv init -)\\\"\" >> ~/.bash_profile\n   echo \"eval \\\"\\$(pyenv virtualenv-init -)\\\"\" >> ~/.bash_profile\n   source ~/.bash_profile\n   ```\n\n3. Create a python environment using pyenv and activate it\n\n   ```shell\n   pyenv install 3.6\n   pyenv virtualenv 3.6 appinventor3\n   pyenv activate appinventor3\n   ```\n\n### Install dependencies\n\n```shell\npip install -r requirements.txt\npip install .\n```\n\n## Contributing\n\nThis software is made available under the Apache Software License 2.0. You are welcome to contribute pull requests to this project via GitHub.\n\n## License\n\nCopyright 2020 Massachusetts Institute of Technology\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mit-cml/tfjs-extension-tool", "keywords": "", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "appinventor-tfjs", "package_url": "https://pypi.org/project/appinventor-tfjs/", "platform": "", "project_url": "https://pypi.org/project/appinventor-tfjs/", "project_urls": {"Homepage": "https://github.com/mit-cml/tfjs-extension-tool"}, "release_url": "https://pypi.org/project/appinventor-tfjs/0.1.4/", "requires_dist": ["certifi"], "requires_python": ">=3.0", "summary": "Tool for generating App Inventor extension skeletons from Tensorflow.js models", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>MIT App Inventor TFJS Extension Generator</h1>\n<p>The aim of this tool is to make it easier to generate the scaffolding needed to use a Tensorflow.js model in App Inventor.</p>\n<h2>Quickstart</h2>\n<p>Install dependencies:</p>\n<ul>\n<li>java 8</li>\n<li>ant 1.10</li>\n<li>python 3</li>\n<li>node</li>\n<li>npm</li>\n<li>git</li>\n</ul>\n<p>Install the App Inventor TFJS extension generator using pip:</p>\n<pre><code>pip install appinventor-tfjs\n</code></pre>\n<p>Create an extension prototype for Posenet:</p>\n<pre><code>python -m appinventor.tfjs posenet edu.mit.appinventor.ai.posenet.PosenetExtension\n</code></pre>\n<p>The output of this command will be a new directory called PosenetExtension. Within this directory, you will find a fresh git clone of the App Inventor extension template repository. The directory will have the following structure:</p>\n<pre><code>build.xml\nlib\n \u251c\u2500 android\n \u2502   \u251c\u2500 android.jar\n \u2502   \u251c\u2500 appcompat-v7-28.0.0.jar\n \u2502   \u2514\u2500 dx.jar\n \u251c\u2500 ant-contrib\n \u2502   \u2514\u2500 ant-contrib-1.0b3.jar\n \u251c\u2500 appinventor\n \u2502   \u2514\u2500 AndroidRuntime.jar\n \u2502   \u2514\u2500 AnnotationProcessors.jar\n \u2514\u2500 deps\nREADME.md\nsrc\n \u2514\u2500 edu\n     \u2514\u2500 mit\n         \u2514\u2500 appinventor\n             \u2514\u2500 ai\n                 \u2514\u2500 posenet\n                     \u251c\u2500 assets\n                     \u2502   \u251c\u2500 app.js\n                     \u2502   \u251c\u2500 group1-shard1of2.bin\n                     \u2502   \u251c\u2500 group1-shard2of2.bin\n                     \u2502   \u251c\u2500 index.html\n                     \u2502   \u251c\u2500 model-stride16.json\n                     \u2502   \u251c\u2500 posenet.min.js\n                     \u2502   \u251c\u2500 tf-converter.min.js\n                     \u2502   \u251c\u2500 tf-core.min.js\n                     \u2502   \u2514\u2500 VERSIONS\n                     \u2514\u2500 PosenetExtension.java\n</code></pre>\n<p>Of those files, the ones under <code>src</code> are most interesting. Briefly:</p>\n<ul>\n<li><code>PosenetExtension.java</code> - Boilerplate extension code for a TFJS extneion in App Inventor. You will want to customize it to provide model-specific behavior, such as interpreting the results before passing information back to the blocks layer.</li>\n<li><code>app.js</code> - Boilerplate Javascript code to load the model and interact with the Java code in the App Inventor extension. You will need to modify this to interact correctly with the TFJS model, such as calling the correct method to start the model and interpret its output for App Inventor.</li>\n<li><code>group-*.bin</code> - These are the weights at each level of the model, pulled from the TFJS model repository. The number of files will vary based on the size of the model.</li>\n<li><code>index.html</code> - The index.html file loads all of the prerequisite Javascript files. It generally does not need to be modified.</li>\n<li><code>*.min.js</code> - Minified Javascript code for the model and any dependencies, such as tfjs-core and tfjs-converter.</li>\n<li><code>VERSIONS</code> - The VERSIONS file contains a key-value mapping the different npm modules to the versions that were retrieved. There should be one entry per min.js file.</li>\n</ul>\n<h2>Usage</h2>\n<pre><code>usage: python -m appinventor.tfjs [-h] [--scope SCOPE] model_name class_name\n\nCreate a TensorFlow.js-based extension for MIT App Inventor.\n\npositional arguments:\n  model_name\n  class_name\n\noptional arguments:\n  -h, --help     show this help message and exit\n  --scope SCOPE\n</code></pre>\n<p>The <code>model_name</code> argument names the Tensorflow.js model of interest. A list of pretrained models is available on <a href=\"https://github.com/tensorflow/tfjs-models\" rel=\"nofollow\">GitHub</a>. For example, if you are interested in trying the MobileNet model, you would specify <code>mobilenet</code> as the <code>model_name</code>.</p>\n<p>The <code>class_name</code> argument specifies a fully qualified Java class name that will be used for the extension. For example, a MobileNet extension for App Inventor might have the fully qualified class name <code>com.example.tfjs.mobile.MobileNetExtension</code>. The extension generator will create this class and any intermediate packages for you.</p>\n<p>The optional <code>--scope SCOPE</code> argument allows you to import models from npm packages that are not under the <code>@tensorflow-models</code> namespace (effectively, if <code>--scope</code> is not specified it is the same as <code>--scope @tensorflow-models</code>).</p>\n<h2>Development</h2>\n<h3>Dependencies</h3>\n<p>You will need to create a virtual environment and install the dependencies by running. We provide instructions for macOS below.</p>\n<h3>Create a virtualenv</h3>\n<h4>macOS</h4>\n<ol>\n<li>\n<p>Install Homebrew</p>\n</li>\n<li>\n<p>Install pyenv</p>\n<pre>brew install pyenv\n<span class=\"nb\">echo</span> <span class=\"s2\">\"eval \\\"\\$(pyenv init -)\\\"\"</span> &gt;&gt; ~/.bash_profile\n<span class=\"nb\">echo</span> <span class=\"s2\">\"eval \\\"\\$(pyenv virtualenv-init -)\\\"\"</span> &gt;&gt; ~/.bash_profile\n<span class=\"nb\">source</span> ~/.bash_profile\n</pre>\n</li>\n<li>\n<p>Create a python environment using pyenv and activate it</p>\n<pre>pyenv install <span class=\"m\">3</span>.6\npyenv virtualenv <span class=\"m\">3</span>.6 appinventor3\npyenv activate appinventor3\n</pre>\n</li>\n</ol>\n<h3>Install dependencies</h3>\n<pre>pip install -r requirements.txt\npip install .\n</pre>\n<h2>Contributing</h2>\n<p>This software is made available under the Apache Software License 2.0. You are welcome to contribute pull requests to this project via GitHub.</p>\n<h2>License</h2>\n<p>Copyright 2020 Massachusetts Institute of Technology</p>\n<p>Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n<p><a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0</a></p>\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n\n          </div>"}, "last_serial": 7036525, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f2a79ddf10801724d8f99817c5e47645", "sha256": "19bb7849a6fbdd5d1dbde9e71a2c6b0450366f3a2db9ef466b366e95df2518c1"}, "downloads": -1, "filename": "appinventor_tfjs-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f2a79ddf10801724d8f99817c5e47645", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 16349, "upload_time": "2020-03-24T14:41:01", "upload_time_iso_8601": "2020-03-24T14:41:01.000649Z", "url": "https://files.pythonhosted.org/packages/62/b1/e98229a82a3c81c5bee45bb5304b714ebbd1f329f1768da62f4f2e8e44a9/appinventor_tfjs-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c08ac5201cc6e7a171c40b1a28fdd9ca", "sha256": "f872071add7d866397b90cf91c6de5e58458c3891f0843e73e5d71568c57dc20"}, "downloads": -1, "filename": "appinventor-tfjs-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c08ac5201cc6e7a171c40b1a28fdd9ca", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 13102, "upload_time": "2020-03-24T14:41:03", "upload_time_iso_8601": "2020-03-24T14:41:03.183014Z", "url": "https://files.pythonhosted.org/packages/dd/cc/8923a0a6e87945c0966eeb52a05fbf757eb43aa211b3ba46e12103dbd137/appinventor-tfjs-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "05466d831941c4a4a897438dec7d8966", "sha256": "a0d1200efa40c7bb0fbf511e0b7fda3b153e1522f00e5c819c9033d51484bcc8"}, "downloads": -1, "filename": "appinventor_tfjs-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "05466d831941c4a4a897438dec7d8966", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 16361, "upload_time": "2020-03-27T22:22:47", "upload_time_iso_8601": "2020-03-27T22:22:47.691027Z", "url": "https://files.pythonhosted.org/packages/f2/dc/e61dcb042d1259903967208a922f7e797d98bee0e51a3ad481e3f8146077/appinventor_tfjs-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b376d6b858e32c38c7eb2d3e4175d0a", "sha256": "983588ff9670e35ded2473da1fa2a8aeedf68193e930fa08c7e419a4c34a92fd"}, "downloads": -1, "filename": "appinventor-tfjs-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2b376d6b858e32c38c7eb2d3e4175d0a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 13118, "upload_time": "2020-03-27T22:22:48", "upload_time_iso_8601": "2020-03-27T22:22:48.573491Z", "url": "https://files.pythonhosted.org/packages/6c/52/0b4cec9d9cae4096f8816189b4f17fcbbfdc1db6bf1f0b5ddb5541e8f4bc/appinventor-tfjs-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "1c18e7aa695c718d46a159840c542852", "sha256": "f2dc31769d555f91f03babf5a8c576b87cad7fcc67e52e477b6f65dcb3d9dbda"}, "downloads": -1, "filename": "appinventor_tfjs-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1c18e7aa695c718d46a159840c542852", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 16956, "upload_time": "2020-04-09T16:09:07", "upload_time_iso_8601": "2020-04-09T16:09:07.493672Z", "url": "https://files.pythonhosted.org/packages/df/ab/5477695341fcb4be5dbdbf0a19025575f36c3a970f6d199063443dd45d83/appinventor_tfjs-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d3022b30535a561e6ee27879cd917f4", "sha256": "9d5f160ad205999004e597320fbf93407783a598f98bbea2aa37c29ff52a960d"}, "downloads": -1, "filename": "appinventor-tfjs-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1d3022b30535a561e6ee27879cd917f4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 13694, "upload_time": "2020-04-09T16:09:08", "upload_time_iso_8601": "2020-04-09T16:09:08.608048Z", "url": "https://files.pythonhosted.org/packages/59/ea/041f0c022fc7b5f07787dd1c190ac350df9cc263929cff5f533ddac11121/appinventor-tfjs-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "faa2d02d18b22d12cd7408febc755e5d", "sha256": "68ba6b513e86927a81e1af522462ebd3cf352baab053494ba90bed022af09397"}, "downloads": -1, "filename": "appinventor_tfjs-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "faa2d02d18b22d12cd7408febc755e5d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 17008, "upload_time": "2020-04-15T03:51:59", "upload_time_iso_8601": "2020-04-15T03:51:59.117020Z", "url": "https://files.pythonhosted.org/packages/75/c5/a33771828fdb1a7c3b28ddec0c9608cfecb3da6873caed2ed7d900eea9ac/appinventor_tfjs-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "47a7fbf3b9c2c096ea10c9d2de853e81", "sha256": "47d1c0dd8e5a41fa26f49a0cb2a8e20c574fd58172413365e4c6284f2c8b70d5"}, "downloads": -1, "filename": "appinventor-tfjs-0.1.3.tar.gz", "has_sig": false, "md5_digest": "47a7fbf3b9c2c096ea10c9d2de853e81", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 13720, "upload_time": "2020-04-15T03:51:59", "upload_time_iso_8601": "2020-04-15T03:51:59.890912Z", "url": "https://files.pythonhosted.org/packages/db/e7/92a7cb3e780ddbd605958dd55059679d22ba7f60d61aa336b4d32dad6a5e/appinventor-tfjs-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "04c51689fb8265cdede14e01d6534145", "sha256": "581fbabfb836c377e4ef553da52b975a0ba790033f77699e053dc3cb80f7e3dc"}, "downloads": -1, "filename": "appinventor_tfjs-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "04c51689fb8265cdede14e01d6534145", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 17070, "upload_time": "2020-04-17T01:01:38", "upload_time_iso_8601": "2020-04-17T01:01:38.046325Z", "url": "https://files.pythonhosted.org/packages/51/e9/463446c500e57398c61f686bf2488c4b949d3ac2f8d658b3c5d719f9d16c/appinventor_tfjs-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ac95a6bddaec2ccb7e04a56110ee5b4", "sha256": "c0ceb1e898a0c4d134b970f125c988fb65021b104b98fe12a362f5240425126a"}, "downloads": -1, "filename": "appinventor-tfjs-0.1.4.tar.gz", "has_sig": false, "md5_digest": "8ac95a6bddaec2ccb7e04a56110ee5b4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 13769, "upload_time": "2020-04-17T01:01:39", "upload_time_iso_8601": "2020-04-17T01:01:39.114198Z", "url": "https://files.pythonhosted.org/packages/2d/77/110aa33089b8cd0edc529500e10ecf217a869e919a0a52bcf38c0e62b111/appinventor-tfjs-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "04c51689fb8265cdede14e01d6534145", "sha256": "581fbabfb836c377e4ef553da52b975a0ba790033f77699e053dc3cb80f7e3dc"}, "downloads": -1, "filename": "appinventor_tfjs-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "04c51689fb8265cdede14e01d6534145", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 17070, "upload_time": "2020-04-17T01:01:38", "upload_time_iso_8601": "2020-04-17T01:01:38.046325Z", "url": "https://files.pythonhosted.org/packages/51/e9/463446c500e57398c61f686bf2488c4b949d3ac2f8d658b3c5d719f9d16c/appinventor_tfjs-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ac95a6bddaec2ccb7e04a56110ee5b4", "sha256": "c0ceb1e898a0c4d134b970f125c988fb65021b104b98fe12a362f5240425126a"}, "downloads": -1, "filename": "appinventor-tfjs-0.1.4.tar.gz", "has_sig": false, "md5_digest": "8ac95a6bddaec2ccb7e04a56110ee5b4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 13769, "upload_time": "2020-04-17T01:01:39", "upload_time_iso_8601": "2020-04-17T01:01:39.114198Z", "url": "https://files.pythonhosted.org/packages/2d/77/110aa33089b8cd0edc529500e10ecf217a869e919a0a52bcf38c0e62b111/appinventor-tfjs-0.1.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:38 2020"}