{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering :: Information Analysis"], "description": "Trunklucator is a python module for data scientists and ML practitioners for quick creating annotation projects and testing your ideas. It acts like a python's native input() function, but support displaying rich content and advance interaction with the user (using a web browser). Trunklucator lets you easily plug interaction with a human to your model prototype.\n\n## Example\n```python\nfrom trunklucator import WebUI\n\nwith WebUI() as webui: # start http server in background\n    for item in data: \n        y = webui.ask(item) #<- wait for user action on web page\n        print(y) \n```\n\nFor full examples see `examples/quickstart` directory\n\n\n| Task | Screenshot | Example code |\n| :---         |     :---:      |          :--- |\n| binary classification   | <a href=\"/screenshots/images_classification.png?raw=true\"><img src=\"/screenshots/images_classification.png?raw=true\" align=\"left\" height=\"48\" width=\"48\"></a><br><a href=\"/screenshots/binary_class_text.png?raw=true\"><img src=\"/screenshots/binary_class_text.png?raw=true\" align=\"left\" height=\"48\" width=\"48\"></a>    | For images - [examples/quickstart/binary_class_image.py](examples/quickstart/binary_class_image.py)<br>For text - [examples/quickstart/binary_class_text.py](examples/quickstart/binary_class_text.py)    |\n| multiclass classification  | <a href=\"/screenshots/multi_class_text.png?raw=true\"><img src=\"/screenshots/multi_class_text.png?raw=true\" align=\"left\" height=\"48\" width=\"48\"></a>       | [examples/quickstart/multi_class_text.py](examples/quickstart/multi_class_text.py)      |\n| multilabel classification  | <a href=\"/screenshots/multi_label_text2.png?raw=true\"><img src=\"/screenshots/multi_label_text2.png?raw=true\" align=\"left\" height=\"48\" width=\"48\"></a>       | [examples/quickstart/multi_label_text.py](examples/quickstart/multi_label_text.py)      |\n| Named Entity Recognition (NER)  | <a href=\"/screenshots/ner_text.png?raw=true\"><img src=\"/screenshots/ner_text.png?raw=true\" align=\"left\" height=\"48\" width=\"48\"></a>       | [examples/quickstart/ner_text.py](examples/quickstart/ner_text.py)      |\n| HTML page annotation | <a href=\"/screenshots/ner_html.png?raw=true\"><img src=\"/screenshots/ner_html.png?raw=true\" align=\"left\" height=\"48\" width=\"48\"></a>       | [examples/quickstart/ner_html.py](examples/quickstart/ner_html.py)      |\n\n\nTrunklucator is the best when you need to represent complex data like image, formatted text, video or sound to the user and ask the user to label/annotate this data. After a user's action, you immediately are able to use this data in your pipeline.  Trunklucator works well together with active learning (see example [https://github.com/Dumbris/pytorch_active_learning/active_learning_basics.py](https://github.com/Dumbris/pytorch_active_learning/blob/fb01780cc45de71fa2476db7b3ece3e333768ab4/active_learning_basics.py#L144)).\n\n## Installation\n\n```\npip install trunklucator\n```\n\n## Settings\n\nYou can use environmet variable to change default parameters\n* HOST - bind to host (default 127.0.0.1)\n* PORT - use port number (default 8086)\n* DATA_DIR - directory will be available through HTTP by path /data \n* FRONTEND_DIR - directory path to your custom frontend\n\n```bash\nPORT=8080 python3 main.py\n```\n\nAlso, you can use similar parameters in code then instanciate trunklucator.WebUI class.\n\n```bash\nwith WebUI(host='0.0.0.0', port=8080, data_dir='./data', frontend_dir='./myfront')\n```\n\n## API methods\n\nFor instance of WebUI class:\n\n* `.ask(data, meta(optional))` - by calling this method you will stop the execution of your code until the user action in a web browser. \n* `.update(data)` - asynchronously publish information to the frontend part.\n\n## Running examples\n\n1. clone github repo\n1. cd to examples/\n1. run python3 filename.py, open browser on http://localhost:8086\n\n\n## How to display complex data\n\nTrunklucator contains two parts: python module which runs a small HTTP server in the background thread and frontend - it could be any javascript single page application that supports simple protocol for fetching task data. \nThese parts interact with each other using HTTP  or WebSocket. You don't need to change the python part it's ready to use abstraction. \nYou can select which frontend part to use by setting `frontend_dir` WebUI init parameter or using environment variable FRONTEND_DIR\nYou can set path to your custom frontend directory or use predefined names for frontends integrated into python package.\n\nIn the current version there are two frontend integrated:\n\n1. Default `WebUI(frontend_dir='html_field')` designed like hackable part, you can adjust it for your specific data format. The default implementation is able to load arbitrary HTML text. UI controls can be configured in python code.\n1. `WebUI(frontend_dir='label_studio')` - advanced frontend with a support a lot of data types. For more information check the official site https://labelstud.io/ and example/quickstart/ner_text.py\n\n\nTo customize default frontend part: \n\n1. clone github repo\n1. Make a copy of trunklucator/frontend/html_field directory. Implementation is simple and doesn't use tools like npm, webpack, etc.\n1. You can edit it on disk and after refreshing web page, you will see the results. Use FRONTEND_DIR environment variable to setup path to your custom frontend.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Dumbris/trunklucator", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "trunklucator", "package_url": "https://pypi.org/project/trunklucator/", "platform": "any", "project_url": "https://pypi.org/project/trunklucator/", "project_urls": {"Homepage": "https://github.com/Dumbris/trunklucator"}, "release_url": "https://pypi.org/project/trunklucator/1.1.4/", "requires_dist": null, "requires_python": ">3.6.0", "summary": "Easy plugable UI for your experiments with data and machine learning", "version": "1.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Trunklucator is a python module for data scientists and ML practitioners for quick creating annotation projects and testing your ideas. It acts like a python's native input() function, but support displaying rich content and advance interaction with the user (using a web browser). Trunklucator lets you easily plug interaction with a human to your model prototype.</p>\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">trunklucator</span> <span class=\"kn\">import</span> <span class=\"n\">WebUI</span>\n\n<span class=\"k\">with</span> <span class=\"n\">WebUI</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">webui</span><span class=\"p\">:</span> <span class=\"c1\"># start http server in background</span>\n    <span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"p\">:</span> \n        <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">webui</span><span class=\"o\">.</span><span class=\"n\">ask</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">)</span> <span class=\"c1\">#&lt;- wait for user action on web page</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span> \n</pre>\n<p>For full examples see <code>examples/quickstart</code> directory</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Task</th>\n<th align=\"center\">Screenshot</th>\n<th align=\"left\">Example code</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">binary classification</td>\n<td align=\"center\"><a href=\"/screenshots/images_classification.png?raw=true\" rel=\"nofollow\"><img align=\"left\" height=\"48\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be352d8d7844d4d9565044d52de202216bc9a6c2/2f73637265656e73686f74732f696d616765735f636c617373696669636174696f6e2e706e673f7261773d74727565\" width=\"48\"></a><br><a href=\"/screenshots/binary_class_text.png?raw=true\" rel=\"nofollow\"><img align=\"left\" height=\"48\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b097121f9f97a7c58f72600473e0a24ece5637ba/2f73637265656e73686f74732f62696e6172795f636c6173735f746578742e706e673f7261773d74727565\" width=\"48\"></a></td>\n<td align=\"left\">For images - <a href=\"examples/quickstart/binary_class_image.py\" rel=\"nofollow\">examples/quickstart/binary_class_image.py</a><br>For text - <a href=\"examples/quickstart/binary_class_text.py\" rel=\"nofollow\">examples/quickstart/binary_class_text.py</a></td>\n</tr>\n<tr>\n<td align=\"left\">multiclass classification</td>\n<td align=\"center\"><a href=\"/screenshots/multi_class_text.png?raw=true\" rel=\"nofollow\"><img align=\"left\" height=\"48\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fe8a8fca01906288a72ac1aef041517a5bb84526/2f73637265656e73686f74732f6d756c74695f636c6173735f746578742e706e673f7261773d74727565\" width=\"48\"></a></td>\n<td align=\"left\"><a href=\"examples/quickstart/multi_class_text.py\" rel=\"nofollow\">examples/quickstart/multi_class_text.py</a></td>\n</tr>\n<tr>\n<td align=\"left\">multilabel classification</td>\n<td align=\"center\"><a href=\"/screenshots/multi_label_text2.png?raw=true\" rel=\"nofollow\"><img align=\"left\" height=\"48\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/457a7cce872a4c25ade69c9d2f3be0cb2b49e898/2f73637265656e73686f74732f6d756c74695f6c6162656c5f74657874322e706e673f7261773d74727565\" width=\"48\"></a></td>\n<td align=\"left\"><a href=\"examples/quickstart/multi_label_text.py\" rel=\"nofollow\">examples/quickstart/multi_label_text.py</a></td>\n</tr>\n<tr>\n<td align=\"left\">Named Entity Recognition (NER)</td>\n<td align=\"center\"><a href=\"/screenshots/ner_text.png?raw=true\" rel=\"nofollow\"><img align=\"left\" height=\"48\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f5a8467173193b64e78ec73256d5796e28c5301e/2f73637265656e73686f74732f6e65725f746578742e706e673f7261773d74727565\" width=\"48\"></a></td>\n<td align=\"left\"><a href=\"examples/quickstart/ner_text.py\" rel=\"nofollow\">examples/quickstart/ner_text.py</a></td>\n</tr>\n<tr>\n<td align=\"left\">HTML page annotation</td>\n<td align=\"center\"><a href=\"/screenshots/ner_html.png?raw=true\" rel=\"nofollow\"><img align=\"left\" height=\"48\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4734efef1fddf7ced26dca5e2e0c13be6590b9e8/2f73637265656e73686f74732f6e65725f68746d6c2e706e673f7261773d74727565\" width=\"48\"></a></td>\n<td align=\"left\"><a href=\"examples/quickstart/ner_html.py\" rel=\"nofollow\">examples/quickstart/ner_html.py</a></td>\n</tr></tbody></table>\n<p>Trunklucator is the best when you need to represent complex data like image, formatted text, video or sound to the user and ask the user to label/annotate this data. After a user's action, you immediately are able to use this data in your pipeline.  Trunklucator works well together with active learning (see example <a href=\"https://github.com/Dumbris/pytorch_active_learning/blob/fb01780cc45de71fa2476db7b3ece3e333768ab4/active_learning_basics.py#L144\" rel=\"nofollow\">https://github.com/Dumbris/pytorch_active_learning/active_learning_basics.py</a>).</p>\n<h2>Installation</h2>\n<pre><code>pip install trunklucator\n</code></pre>\n<h2>Settings</h2>\n<p>You can use environmet variable to change default parameters</p>\n<ul>\n<li>HOST - bind to host (default 127.0.0.1)</li>\n<li>PORT - use port number (default 8086)</li>\n<li>DATA_DIR - directory will be available through HTTP by path /data</li>\n<li>FRONTEND_DIR - directory path to your custom frontend</li>\n</ul>\n<pre><span class=\"nv\">PORT</span><span class=\"o\">=</span><span class=\"m\">8080</span> python3 main.py\n</pre>\n<p>Also, you can use similar parameters in code then instanciate trunklucator.WebUI class.</p>\n<pre>with WebUI<span class=\"o\">(</span><span class=\"nv\">host</span><span class=\"o\">=</span><span class=\"s1\">'0.0.0.0'</span>, <span class=\"nv\">port</span><span class=\"o\">=</span><span class=\"m\">8080</span>, <span class=\"nv\">data_dir</span><span class=\"o\">=</span><span class=\"s1\">'./data'</span>, <span class=\"nv\">frontend_dir</span><span class=\"o\">=</span><span class=\"s1\">'./myfront'</span><span class=\"o\">)</span>\n</pre>\n<h2>API methods</h2>\n<p>For instance of WebUI class:</p>\n<ul>\n<li><code>.ask(data, meta(optional))</code> - by calling this method you will stop the execution of your code until the user action in a web browser.</li>\n<li><code>.update(data)</code> - asynchronously publish information to the frontend part.</li>\n</ul>\n<h2>Running examples</h2>\n<ol>\n<li>clone github repo</li>\n<li>cd to examples/</li>\n<li>run python3 filename.py, open browser on <a href=\"http://localhost:8086\" rel=\"nofollow\">http://localhost:8086</a></li>\n</ol>\n<h2>How to display complex data</h2>\n<p>Trunklucator contains two parts: python module which runs a small HTTP server in the background thread and frontend - it could be any javascript single page application that supports simple protocol for fetching task data.\nThese parts interact with each other using HTTP  or WebSocket. You don't need to change the python part it's ready to use abstraction.\nYou can select which frontend part to use by setting <code>frontend_dir</code> WebUI init parameter or using environment variable FRONTEND_DIR\nYou can set path to your custom frontend directory or use predefined names for frontends integrated into python package.</p>\n<p>In the current version there are two frontend integrated:</p>\n<ol>\n<li>Default <code>WebUI(frontend_dir='html_field')</code> designed like hackable part, you can adjust it for your specific data format. The default implementation is able to load arbitrary HTML text. UI controls can be configured in python code.</li>\n<li><code>WebUI(frontend_dir='label_studio')</code> - advanced frontend with a support a lot of data types. For more information check the official site <a href=\"https://labelstud.io/\" rel=\"nofollow\">https://labelstud.io/</a> and example/quickstart/ner_text.py</li>\n</ol>\n<p>To customize default frontend part:</p>\n<ol>\n<li>clone github repo</li>\n<li>Make a copy of trunklucator/frontend/html_field directory. Implementation is simple and doesn't use tools like npm, webpack, etc.</li>\n<li>You can edit it on disk and after refreshing web page, you will see the results. Use FRONTEND_DIR environment variable to setup path to your custom frontend.</li>\n</ol>\n\n          </div>"}, "last_serial": 6485002, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "25771cd3764d66110c686f9fba28b249", "sha256": "db49c10165d6277942ffb4db7eb543ecc65565d2e2fde62d2a67f42e8af17d62"}, "downloads": -1, "filename": "trunklucator-1.0.1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "25771cd3764d66110c686f9fba28b249", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 5550, "upload_time": "2019-03-26T15:13:43", "upload_time_iso_8601": "2019-03-26T15:13:43.551394Z", "url": "https://files.pythonhosted.org/packages/87/92/6f96dbb35d1092375e123e16209cc5aafe51ffd6a8ef400641e579098c1b/trunklucator-1.0.1.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe3169500aecb000a299167d50517b5a", "sha256": "efeef4501278a1f917936c733169fa8d44e506ab2259e5c3ffd36798262ce6f6"}, "downloads": -1, "filename": "trunklucator-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fe3169500aecb000a299167d50517b5a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.6.0", "size": 10824, "upload_time": "2019-03-27T06:15:11", "upload_time_iso_8601": "2019-03-27T06:15:11.874995Z", "url": "https://files.pythonhosted.org/packages/36/8b/69a54d1a9083ca8d1261da564936ea4b285a43818d0750541448d72f2cc9/trunklucator-1.0.1-py3-none-any.whl", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "066404667a255c28f7a0a04704973068", "sha256": "8b4f5f695ff56929ecef7f8adc71fed8736aa5f5338f5822b23b55cfc5e60478"}, "downloads": -1, "filename": "trunklucator-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "066404667a255c28f7a0a04704973068", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.6.0", "size": 10823, "upload_time": "2019-03-27T06:17:58", "upload_time_iso_8601": "2019-03-27T06:17:58.185891Z", "url": "https://files.pythonhosted.org/packages/8a/a0/b4be83b0b418f595e4d01e9928a9ab479d236876ee697896a93c5e178dff/trunklucator-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df3b7ea0ba4014144486dbd61d03f011", "sha256": "7cb3aa32c53c215c6e49db98a76e27f90ec058f7fc4d0fae0ea1c2ff71b503ad"}, "downloads": -1, "filename": "trunklucator-1.0.2.tar.gz", "has_sig": false, "md5_digest": "df3b7ea0ba4014144486dbd61d03f011", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 7113, "upload_time": "2019-03-27T06:17:59", "upload_time_iso_8601": "2019-03-27T06:17:59.787184Z", "url": "https://files.pythonhosted.org/packages/93/f2/e4266be9886fe5acf376c815d166172c0423afbd37e1ee6220e1d28a65a2/trunklucator-1.0.2.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "59de3ff4d9b9ac1df07a83203f29be4a", "sha256": "8f0cc4aa832b749aae7e70000bf91f8931c3d52aa732df74391a4b838a282bab"}, "downloads": -1, "filename": "trunklucator-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "59de3ff4d9b9ac1df07a83203f29be4a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.6.0", "size": 14277, "upload_time": "2019-03-27T06:33:21", "upload_time_iso_8601": "2019-03-27T06:33:21.078025Z", "url": "https://files.pythonhosted.org/packages/73/4e/c12bbc10757de57f31f50a205ab10fe74971c8d6b8ca3f3879740b812059/trunklucator-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "174130401fd0fa19e75cee5ae9615ed1", "sha256": "32080e18a1809333bb8c81bdc73c954426bd5ddf7c7b8d5ee2eaa3a9fc5f85c3"}, "downloads": -1, "filename": "trunklucator-1.0.4.tar.gz", "has_sig": false, "md5_digest": "174130401fd0fa19e75cee5ae9615ed1", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 9844, "upload_time": "2019-03-27T06:33:22", "upload_time_iso_8601": "2019-03-27T06:33:22.449848Z", "url": "https://files.pythonhosted.org/packages/ae/39/7ce665002c41f512051157c8d974f9bbb8c7108907d44422cd93598b1ab7/trunklucator-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "23d3b6696f1be7fb197535852e239bfe", "sha256": "6a78bf0c9dc9a668769dac388d0b698ff6ce319653ac815320724d9f15a2dc7d"}, "downloads": -1, "filename": "trunklucator-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "23d3b6696f1be7fb197535852e239bfe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.6.0", "size": 18829, "upload_time": "2019-03-27T06:43:46", "upload_time_iso_8601": "2019-03-27T06:43:46.994441Z", "url": "https://files.pythonhosted.org/packages/61/f5/a0ea28d08d5c3135ccc93cf3bf6d9ee17b89375546e01f9935cf6e48beca/trunklucator-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6463b781c3785615f9a985df8815e7d4", "sha256": "4136dbfff1fc47369a213a02fbfcca0394f9af240b2de63d67599328a6d1abbf"}, "downloads": -1, "filename": "trunklucator-1.0.5.tar.gz", "has_sig": false, "md5_digest": "6463b781c3785615f9a985df8815e7d4", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 9875, "upload_time": "2019-03-27T06:43:48", "upload_time_iso_8601": "2019-03-27T06:43:48.744465Z", "url": "https://files.pythonhosted.org/packages/45/cf/1d921f6b36f3b98271c66de800f527de04ccd9b7e5dd6265ab00693f18c3/trunklucator-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "1407eddcb2a22844c0c80a3a696eef41", "sha256": "92bdb1ddcc2a42b4a60320869dd4d38942d558e006b253aa83727db1c5e925f3"}, "downloads": -1, "filename": "trunklucator-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "1407eddcb2a22844c0c80a3a696eef41", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.6.0", "size": 18884, "upload_time": "2019-03-27T06:59:29", "upload_time_iso_8601": "2019-03-27T06:59:29.024065Z", "url": "https://files.pythonhosted.org/packages/41/53/3c3fec57a4e6bf22953056ac671b05797161c9b4dcac0ce0b1408acc4c01/trunklucator-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acb85e32623e3eb2acf158561416f6cc", "sha256": "eaca60b58066a016bdc307e52ebbf7fb38c0cc0cc417e960a9ef5315c5f28953"}, "downloads": -1, "filename": "trunklucator-1.0.6.tar.gz", "has_sig": false, "md5_digest": "acb85e32623e3eb2acf158561416f6cc", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 10010, "upload_time": "2019-03-27T06:59:30", "upload_time_iso_8601": "2019-03-27T06:59:30.746093Z", "url": "https://files.pythonhosted.org/packages/21/80/058d78cb19e8407ac37144b75d7bdc94691fde996944d3d78b93f913ffbe/trunklucator-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "0e51a4160943ada616e9b14dd8099ec7", "sha256": "a17568bdbea7e10d6705d6aa4f1538ed3a9ed47ca7dc917a0295960e13d2af0c"}, "downloads": -1, "filename": "trunklucator-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "0e51a4160943ada616e9b14dd8099ec7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.6.0", "size": 20192, "upload_time": "2019-03-27T08:26:18", "upload_time_iso_8601": "2019-03-27T08:26:18.271876Z", "url": "https://files.pythonhosted.org/packages/76/b6/6060689e5c75a7ce31e835402960869323ad4fe7fd60756a53470df598bc/trunklucator-1.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30ed94977d074735a725f1e0ce578fb7", "sha256": "6779d9329a9b2631a2c5539afbc96108728e7bb70dc7405e7ae4d70c70c070e8"}, "downloads": -1, "filename": "trunklucator-1.0.7.tar.gz", "has_sig": false, "md5_digest": "30ed94977d074735a725f1e0ce578fb7", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 12558, "upload_time": "2019-03-27T08:26:19", "upload_time_iso_8601": "2019-03-27T08:26:19.986049Z", "url": "https://files.pythonhosted.org/packages/62/b3/c9270e6db8828ee6835559ec15a016b7d5055bb9b21397fe9153560b5473/trunklucator-1.0.7.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "2fb8c10736c512d479255f76e6d88c87", "sha256": "250bc2d98aa3cb96d3838e77dcd762a28705631478c36215d6d23e2ec119cc1f"}, "downloads": -1, "filename": "trunklucator-1.1.3.tar.gz", "has_sig": false, "md5_digest": "2fb8c10736c512d479255f76e6d88c87", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 806974, "upload_time": "2020-01-09T15:08:48", "upload_time_iso_8601": "2020-01-09T15:08:48.490159Z", "url": "https://files.pythonhosted.org/packages/06/5f/5baaac350ac70ab283f640f476cb3256ffffc615d3d83722452d36136020/trunklucator-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "81b361bff13a3be5966745d63229dfdc", "sha256": "24347f9d061b290fc6ac25aae67bf254d3310163c2c4ceb0983376a56a55876e"}, "downloads": -1, "filename": "trunklucator-1.1.4.tar.gz", "has_sig": false, "md5_digest": "81b361bff13a3be5966745d63229dfdc", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 807123, "upload_time": "2020-01-20T06:24:51", "upload_time_iso_8601": "2020-01-20T06:24:51.734558Z", "url": "https://files.pythonhosted.org/packages/7a/0d/e0e22090aa91a53800e66785c5d01acc858e9c0e4acc2029ed7aeb093d12/trunklucator-1.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "81b361bff13a3be5966745d63229dfdc", "sha256": "24347f9d061b290fc6ac25aae67bf254d3310163c2c4ceb0983376a56a55876e"}, "downloads": -1, "filename": "trunklucator-1.1.4.tar.gz", "has_sig": false, "md5_digest": "81b361bff13a3be5966745d63229dfdc", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.0", "size": 807123, "upload_time": "2020-01-20T06:24:51", "upload_time_iso_8601": "2020-01-20T06:24:51.734558Z", "url": "https://files.pythonhosted.org/packages/7a/0d/e0e22090aa91a53800e66785c5d01acc858e9c0e4acc2029ed7aeb093d12/trunklucator-1.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:46:35 2020"}