{"info": {"author": "Takumi Ando", "author_email": "takumi.ando826@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "<img src=\"https://raw.githubusercontent.com/tand826/wsiprocess/master/images/wsiprocess.svg\" style=\"width: 50%\">\n\n![Downloads](https://pepy.tech/badge/wsiprocess)\n![PyPI](https://img.shields.io/pypi/v/wsiprocess)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/wsiprocess)\n![GitHub](https://img.shields.io/github/license/tand826/wsiprocess)\n![Documentation](https://readthedocs.org/projects/wsiprocess/badge/?version=latest)\n![Conda - Version](https://img.shields.io/conda/v/tand826/wsiprocess)\n\nConvert Helper for Histopathological / Cytopathological Machine Learning Tasks\n\n# Main Flow\n\n<div style=\"text-align: center\"><img src=\"https://raw.githubusercontent.com/tand826/wsiprocess/master/images/description.png\" style=\"max-width: 80%; margin: 0 auto;\"></div>\n\n1. Scan some WSIs.\n2. Make some annotations with WSI annotation tools\n3. Then wsiprocess helps converting WSI + Annotation data into patches and easy-to-use annotation data.\n\n[WSIPatcher](https://github.com/tand826/WSIPatcher) will give you GUI.\n[Command Helper](https://tand826.github.io/wsiprocess_command_line_helper) will recommend commands to run.\n\n# Installation\n\n1. Install [libvips](https://libvips.github.io/libvips/)\n\n   - Linux - `apt install libvips`\n   - MacOS - `brew install vips`\n   - Windows - Install tarball from [here](https://github.com/libvips/build-win64)\n\n2. Install wsiprocess\n\n   ```\n   pip install wsiprocess\n   ```\n\n### Anaconda User\n\n```\n# Only for python 3.6 or higher\nconda install -c tand826 wsiprocess\n```\n\n# Documentation\n\n- [Documentation](https://wsiprocess.readthedocs.io)\n\n# Example\n\n### As a python module\n\n#### Basic Usage\n\n```python\nimport wsiprocess as wp\nslide = wp.slide(\"xxx.tiff\")\nannotation = wp.annotation(\"xxx.xml\")\nrule = wp.rule(\"xxx.json\")\n\nannotation.make_masks(slide, rule, foreground=True)\n\npatcher = wp.patcher(slide, \"classification\", annotation)\npatcher.get_patch_parallel(\"benign\")\n```\n\n#### Export annotaton xml of one class as mask image\n\n```python\nimport wsiprocess as wp\nslide = wp.slide(\"xxx.tiff\")\nannotation = wp.annotation(\"xxx.xml\")\nannotation.make_masks(slide)\nannotation.export_mask(\"xxx/masks\", \"benign\")\n```\n\n#### Export annotation xml with inclusion definition as mask images, and save their thumbs\n\n```python\nimport wsiprocess as wp\nslide = wp.slide(\"xxx.tiff\")\nannotation = wp.annotation(\"xxx.xml\")\nrule = wp.rule(\"xxx.json\")\nannotation.make_masks(slide, rule)\nannotation.export_thumb_masks(\"xxx/masks\")\n```\n\n### As a command line tool\n\n```bash\nwsiprocess xxx.tiff method --annotation xxx.xml\n```\n\n- Need recommendation for choice of arguments? -> [Command Helper](https://tand826.github.io/wsiprocess_command_line_helper)\n\n### As a docker command line tool\n\n```bash\n# build the image\ndocker build . -t wsiprocess_image\n\n# run the container\ndocker run --name wsiprocess_container -v [your files directory]:/data -it -d wsiprocess_image [commands] etc.\n```\n\nsee Command Helper for commands\n\n### Convert to VOC / COCO style format (experimental)\n\n\n```bash\n# If already extracted patches...\n# to COCO format\npython wsiprocess/converters/wsiprocess_to_coco.py [root of wsiprocess] -s [directory to save to] -r [ratio of train, val and test]\n\n# to VOC foramt\npython wsiprocess/converters/wsiprocess_to_voc.py [root of wsiprocess] -s [directory to save to] -r [ratio of train, val and test]\n```\n\n```bash\n# If not extracted patches yet...\n# convert to both VOC and COCO\nwsiprocess xxx.tiff method --annotation xxx.xml -vo -co\n```\n\n\n# Available WSIs\n\n<details>\n    <summary>Test ongoing</summary>\n    <div>\n\n- From below we tested wsi data.\n\n  - :smile: => worked well.\n  - :umbrella: => did not work well.\n  - otherwise => did not check\n\n### Classification\n\n- Aperio\n\n  - CMU-1-JP2K-33005.svs\n  - :smile: CMU-1-Small-Region.svs\n  - :smile: CMU-1.svs\n  - CMU-2.svs\n  - CMU-3.svs\n  - JP2K-33003-1.svs\n  - JP2K-33003-2.svs\n\n- Generic-TIFF\n\n  - :umbrella:CMU-1.tiff\n    - Can not set magnification.\n\n- Hamamatsu-vms\n\n  - :smile:CMU-1.zip\n  - CMU-2.zip\n  - CMU-3.zip\n    - Could not DOWNLOAD from http://openslide.cs.cmu.edu/download/openslide-testdata/Hamamatsu-vms/\n\n- Hamamatsu\n\n  - :smile:CMU-1.ndpi\n  - CMU-2.ndpi\n  - CMU-3.ndpi\n  - OS-1.ndpi\n  - OS-2.ndpi\n  - OS-3.ndpi\n\n- Leica\n\n  - :smile:Leica-1.scn\n  - Leica-2.scn\n  - Leica-3.scn\n  - Leica-Fluorescence-1.scn\n\n- Mirax\n\n  - CMU-1-Exported.zip\n  - CMU-1-Saved-1_16.zip\n  - CMU-1-Saved-1_2.zip\n  - :umbrella:CMU-1.zip\n    - Can not make the foreground mask.\n  - CMU-2.zip\n  - CMU-3.zip\n  - Mirax2-Fluorescence-1.zip\n  - Mirax2-Fluorescence-2.zip\n  - Mirax2.2-1.zip\n  - Mirax2.2-2.zip\n  - Mirax2.2-3.zip\n  - Mirax2.2-4-BMP.zip\n  - Mirax2.2-4-PNG.zip\n\n- Olympus\n\n  - OS-1.zip\n  - OS-2.zip\n  - OS-3.zip\n\n- Trestle\n\n  - :umbrella:CMU-1.zip\n    - ASAP can not show the image properly, and it's hard to annotate.\n  - CMU-2.zip\n  - CMU-3.zip\n\n- Ventana\n\n  - OS-1.bif\n  - OS-2.bif\n\n- :umbrella:Zeiss : Can not load slide - :umbrella:Zeiss-1-Merged.zvi - :umbrella:Zeiss-1-Stacked.zvi - :umbrella:Zeiss-2-Merged.zvi - :umbrella:Zeiss-2-Stacked.zvi - :umbrella:Zeiss-3-Mosaic.zvi - :umbrella:Zeiss-4-Mosaic.zvi\n</div>\n</details>\n\n# Test\n\n### Download sample WSI\n\n```\ncurl -O -C - http://openslide.cs.cmu.edu/download/openslide-testdata/CMU-1.ndpi\n```\n\n### Make random annotation\n\n- Install ASAP ( Linux / Windows ) - https://github.com/computationalpathologygroup/ASAP/releases\n- Open CMU-1.ndpi and make some random annotation. - Save the annotation xml as \"CMU-1.xml\".\n\n### Run test.py\n\n```\ncd tests\npytest tests.py\n```\n\n# Citation\n\n```\n@article{wsiprocess,\n    Author = {Takumi Ando},\n    Title = {WSIPROCESS - Whole Slide Image Processing Library for Histopathological / Cytopathological Machine Learning Tasks},\n    Journal = {github.com/tand826/wsiprocess},\n    Year = {2019}\n}\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tand826/wsiprocess", "keywords": "histopathology,cytopathology,medical-imaging,whole-slide-imaging,machine-learning", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "wsiprocess", "package_url": "https://pypi.org/project/wsiprocess/", "platform": "any", "project_url": "https://pypi.org/project/wsiprocess/", "project_urls": {"Homepage": "https://github.com/tand826/wsiprocess"}, "release_url": "https://pypi.org/project/wsiprocess/0.11/", "requires_dist": ["joblib", "lxml", "numpy", "opencv-python", "pyvips"], "requires_python": ">= 3.6", "summary": "Whole Slide Image (WSI) Processing Library", "version": "0.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9c33540f755d332485b23d457ae77bdcb26eca60/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f74616e643832362f77736970726f636573732f6d61737465722f696d616765732f77736970726f636573732e737667\">\n<p><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0e93e5314e7329544644386d92a779fdbd969687/68747470733a2f2f706570792e746563682f62616467652f77736970726f63657373\">\n<img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7b590c81578f4a4ea895930f5ffc9ee1850261b7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f77736970726f63657373\">\n<img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1dc6d1e62d6e9159951223871fc8646ccb84ca76/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f77736970726f63657373\">\n<img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4c747f5450e1eb79186357f1f60ffaab68571a72/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f74616e643832362f77736970726f63657373\">\n<img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aa4155442aa2a416053c480d0ebc3161c265f166/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f77736970726f636573732f62616467652f3f76657273696f6e3d6c6174657374\">\n<img alt=\"Conda - Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d9868a383531b5844404e7216cc383088a9e4357/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f762f74616e643832362f77736970726f63657373\"></p>\n<p>Convert Helper for Histopathological / Cytopathological Machine Learning Tasks</p>\n<h1>Main Flow</h1>\n<div><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/342b1391a0adce1b3a484e231179bd5617de0606/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f74616e643832362f77736970726f636573732f6d61737465722f696d616765732f6465736372697074696f6e2e706e67\"></div>\n<ol>\n<li>Scan some WSIs.</li>\n<li>Make some annotations with WSI annotation tools</li>\n<li>Then wsiprocess helps converting WSI + Annotation data into patches and easy-to-use annotation data.</li>\n</ol>\n<p><a href=\"https://github.com/tand826/WSIPatcher\" rel=\"nofollow\">WSIPatcher</a> will give you GUI.\n<a href=\"https://tand826.github.io/wsiprocess_command_line_helper\" rel=\"nofollow\">Command Helper</a> will recommend commands to run.</p>\n<h1>Installation</h1>\n<ol>\n<li>\n<p>Install <a href=\"https://libvips.github.io/libvips/\" rel=\"nofollow\">libvips</a></p>\n<ul>\n<li>Linux - <code>apt install libvips</code></li>\n<li>MacOS - <code>brew install vips</code></li>\n<li>Windows - Install tarball from <a href=\"https://github.com/libvips/build-win64\" rel=\"nofollow\">here</a></li>\n</ul>\n</li>\n<li>\n<p>Install wsiprocess</p>\n<pre><code>pip install wsiprocess\n</code></pre>\n</li>\n</ol>\n<h3>Anaconda User</h3>\n<pre><code># Only for python 3.6 or higher\nconda install -c tand826 wsiprocess\n</code></pre>\n<h1>Documentation</h1>\n<ul>\n<li><a href=\"https://wsiprocess.readthedocs.io\" rel=\"nofollow\">Documentation</a></li>\n</ul>\n<h1>Example</h1>\n<h3>As a python module</h3>\n<h4>Basic Usage</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">wsiprocess</span> <span class=\"k\">as</span> <span class=\"nn\">wp</span>\n<span class=\"n\">slide</span> <span class=\"o\">=</span> <span class=\"n\">wp</span><span class=\"o\">.</span><span class=\"n\">slide</span><span class=\"p\">(</span><span class=\"s2\">\"xxx.tiff\"</span><span class=\"p\">)</span>\n<span class=\"n\">annotation</span> <span class=\"o\">=</span> <span class=\"n\">wp</span><span class=\"o\">.</span><span class=\"n\">annotation</span><span class=\"p\">(</span><span class=\"s2\">\"xxx.xml\"</span><span class=\"p\">)</span>\n<span class=\"n\">rule</span> <span class=\"o\">=</span> <span class=\"n\">wp</span><span class=\"o\">.</span><span class=\"n\">rule</span><span class=\"p\">(</span><span class=\"s2\">\"xxx.json\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">annotation</span><span class=\"o\">.</span><span class=\"n\">make_masks</span><span class=\"p\">(</span><span class=\"n\">slide</span><span class=\"p\">,</span> <span class=\"n\">rule</span><span class=\"p\">,</span> <span class=\"n\">foreground</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">patcher</span> <span class=\"o\">=</span> <span class=\"n\">wp</span><span class=\"o\">.</span><span class=\"n\">patcher</span><span class=\"p\">(</span><span class=\"n\">slide</span><span class=\"p\">,</span> <span class=\"s2\">\"classification\"</span><span class=\"p\">,</span> <span class=\"n\">annotation</span><span class=\"p\">)</span>\n<span class=\"n\">patcher</span><span class=\"o\">.</span><span class=\"n\">get_patch_parallel</span><span class=\"p\">(</span><span class=\"s2\">\"benign\"</span><span class=\"p\">)</span>\n</pre>\n<h4>Export annotaton xml of one class as mask image</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">wsiprocess</span> <span class=\"k\">as</span> <span class=\"nn\">wp</span>\n<span class=\"n\">slide</span> <span class=\"o\">=</span> <span class=\"n\">wp</span><span class=\"o\">.</span><span class=\"n\">slide</span><span class=\"p\">(</span><span class=\"s2\">\"xxx.tiff\"</span><span class=\"p\">)</span>\n<span class=\"n\">annotation</span> <span class=\"o\">=</span> <span class=\"n\">wp</span><span class=\"o\">.</span><span class=\"n\">annotation</span><span class=\"p\">(</span><span class=\"s2\">\"xxx.xml\"</span><span class=\"p\">)</span>\n<span class=\"n\">annotation</span><span class=\"o\">.</span><span class=\"n\">make_masks</span><span class=\"p\">(</span><span class=\"n\">slide</span><span class=\"p\">)</span>\n<span class=\"n\">annotation</span><span class=\"o\">.</span><span class=\"n\">export_mask</span><span class=\"p\">(</span><span class=\"s2\">\"xxx/masks\"</span><span class=\"p\">,</span> <span class=\"s2\">\"benign\"</span><span class=\"p\">)</span>\n</pre>\n<h4>Export annotation xml with inclusion definition as mask images, and save their thumbs</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">wsiprocess</span> <span class=\"k\">as</span> <span class=\"nn\">wp</span>\n<span class=\"n\">slide</span> <span class=\"o\">=</span> <span class=\"n\">wp</span><span class=\"o\">.</span><span class=\"n\">slide</span><span class=\"p\">(</span><span class=\"s2\">\"xxx.tiff\"</span><span class=\"p\">)</span>\n<span class=\"n\">annotation</span> <span class=\"o\">=</span> <span class=\"n\">wp</span><span class=\"o\">.</span><span class=\"n\">annotation</span><span class=\"p\">(</span><span class=\"s2\">\"xxx.xml\"</span><span class=\"p\">)</span>\n<span class=\"n\">rule</span> <span class=\"o\">=</span> <span class=\"n\">wp</span><span class=\"o\">.</span><span class=\"n\">rule</span><span class=\"p\">(</span><span class=\"s2\">\"xxx.json\"</span><span class=\"p\">)</span>\n<span class=\"n\">annotation</span><span class=\"o\">.</span><span class=\"n\">make_masks</span><span class=\"p\">(</span><span class=\"n\">slide</span><span class=\"p\">,</span> <span class=\"n\">rule</span><span class=\"p\">)</span>\n<span class=\"n\">annotation</span><span class=\"o\">.</span><span class=\"n\">export_thumb_masks</span><span class=\"p\">(</span><span class=\"s2\">\"xxx/masks\"</span><span class=\"p\">)</span>\n</pre>\n<h3>As a command line tool</h3>\n<pre>wsiprocess xxx.tiff method --annotation xxx.xml\n</pre>\n<ul>\n<li>Need recommendation for choice of arguments? -&gt; <a href=\"https://tand826.github.io/wsiprocess_command_line_helper\" rel=\"nofollow\">Command Helper</a></li>\n</ul>\n<h3>As a docker command line tool</h3>\n<pre><span class=\"c1\"># build the image</span>\ndocker build . -t wsiprocess_image\n\n<span class=\"c1\"># run the container</span>\ndocker run --name wsiprocess_container -v <span class=\"o\">[</span>your files directory<span class=\"o\">]</span>:/data -it -d wsiprocess_image <span class=\"o\">[</span>commands<span class=\"o\">]</span> etc.\n</pre>\n<p>see Command Helper for commands</p>\n<h3>Convert to VOC / COCO style format (experimental)</h3>\n<pre><span class=\"c1\"># If already extracted patches...</span>\n<span class=\"c1\"># to COCO format</span>\npython wsiprocess/converters/wsiprocess_to_coco.py <span class=\"o\">[</span>root of wsiprocess<span class=\"o\">]</span> -s <span class=\"o\">[</span>directory to save to<span class=\"o\">]</span> -r <span class=\"o\">[</span>ratio of train, val and test<span class=\"o\">]</span>\n\n<span class=\"c1\"># to VOC foramt</span>\npython wsiprocess/converters/wsiprocess_to_voc.py <span class=\"o\">[</span>root of wsiprocess<span class=\"o\">]</span> -s <span class=\"o\">[</span>directory to save to<span class=\"o\">]</span> -r <span class=\"o\">[</span>ratio of train, val and test<span class=\"o\">]</span>\n</pre>\n<pre><span class=\"c1\"># If not extracted patches yet...</span>\n<span class=\"c1\"># convert to both VOC and COCO</span>\nwsiprocess xxx.tiff method --annotation xxx.xml -vo -co\n</pre>\n<h1>Available WSIs</h1>\n<details>\n    <summary>Test ongoing</summary>\n    <div>\n<ul>\n<li>\n<p>From below we tested wsi data.</p>\n<ul>\n<li>:smile: =&gt; worked well.</li>\n<li>:umbrella: =&gt; did not work well.</li>\n<li>otherwise =&gt; did not check</li>\n</ul>\n</li>\n</ul>\n<h3>Classification</h3>\n<ul>\n<li>\n<p>Aperio</p>\n<ul>\n<li>CMU-1-JP2K-33005.svs</li>\n<li>:smile: CMU-1-Small-Region.svs</li>\n<li>:smile: CMU-1.svs</li>\n<li>CMU-2.svs</li>\n<li>CMU-3.svs</li>\n<li>JP2K-33003-1.svs</li>\n<li>JP2K-33003-2.svs</li>\n</ul>\n</li>\n<li>\n<p>Generic-TIFF</p>\n<ul>\n<li>:umbrella:CMU-1.tiff\n<ul>\n<li>Can not set magnification.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Hamamatsu-vms</p>\n<ul>\n<li>:smile:CMU-1.zip</li>\n<li>CMU-2.zip</li>\n<li>CMU-3.zip\n<ul>\n<li>Could not DOWNLOAD from <a href=\"http://openslide.cs.cmu.edu/download/openslide-testdata/Hamamatsu-vms/\" rel=\"nofollow\">http://openslide.cs.cmu.edu/download/openslide-testdata/Hamamatsu-vms/</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Hamamatsu</p>\n<ul>\n<li>:smile:CMU-1.ndpi</li>\n<li>CMU-2.ndpi</li>\n<li>CMU-3.ndpi</li>\n<li>OS-1.ndpi</li>\n<li>OS-2.ndpi</li>\n<li>OS-3.ndpi</li>\n</ul>\n</li>\n<li>\n<p>Leica</p>\n<ul>\n<li>:smile:Leica-1.scn</li>\n<li>Leica-2.scn</li>\n<li>Leica-3.scn</li>\n<li>Leica-Fluorescence-1.scn</li>\n</ul>\n</li>\n<li>\n<p>Mirax</p>\n<ul>\n<li>CMU-1-Exported.zip</li>\n<li>CMU-1-Saved-1_16.zip</li>\n<li>CMU-1-Saved-1_2.zip</li>\n<li>:umbrella:CMU-1.zip\n<ul>\n<li>Can not make the foreground mask.</li>\n</ul>\n</li>\n<li>CMU-2.zip</li>\n<li>CMU-3.zip</li>\n<li>Mirax2-Fluorescence-1.zip</li>\n<li>Mirax2-Fluorescence-2.zip</li>\n<li>Mirax2.2-1.zip</li>\n<li>Mirax2.2-2.zip</li>\n<li>Mirax2.2-3.zip</li>\n<li>Mirax2.2-4-BMP.zip</li>\n<li>Mirax2.2-4-PNG.zip</li>\n</ul>\n</li>\n<li>\n<p>Olympus</p>\n<ul>\n<li>OS-1.zip</li>\n<li>OS-2.zip</li>\n<li>OS-3.zip</li>\n</ul>\n</li>\n<li>\n<p>Trestle</p>\n<ul>\n<li>:umbrella:CMU-1.zip\n<ul>\n<li>ASAP can not show the image properly, and it's hard to annotate.</li>\n</ul>\n</li>\n<li>CMU-2.zip</li>\n<li>CMU-3.zip</li>\n</ul>\n</li>\n<li>\n<p>Ventana</p>\n<ul>\n<li>OS-1.bif</li>\n<li>OS-2.bif</li>\n</ul>\n</li>\n<li>\n<p>:umbrella:Zeiss : Can not load slide - :umbrella:Zeiss-1-Merged.zvi - :umbrella:Zeiss-1-Stacked.zvi - :umbrella:Zeiss-2-Merged.zvi - :umbrella:Zeiss-2-Stacked.zvi - :umbrella:Zeiss-3-Mosaic.zvi - :umbrella:Zeiss-4-Mosaic.zvi</p>\n</li>\n</ul>\n</div>\n</details>\n<h1>Test</h1>\n<h3>Download sample WSI</h3>\n<pre><code>curl -O -C - http://openslide.cs.cmu.edu/download/openslide-testdata/CMU-1.ndpi\n</code></pre>\n<h3>Make random annotation</h3>\n<ul>\n<li>Install ASAP ( Linux / Windows ) - <a href=\"https://github.com/computationalpathologygroup/ASAP/releases\" rel=\"nofollow\">https://github.com/computationalpathologygroup/ASAP/releases</a></li>\n<li>Open CMU-1.ndpi and make some random annotation. - Save the annotation xml as \"CMU-1.xml\".</li>\n</ul>\n<h3>Run test.py</h3>\n<pre><code>cd tests\npytest tests.py\n</code></pre>\n<h1>Citation</h1>\n<pre><code>@article{wsiprocess,\n    Author = {Takumi Ando},\n    Title = {WSIPROCESS - Whole Slide Image Processing Library for Histopathological / Cytopathological Machine Learning Tasks},\n    Journal = {github.com/tand826/wsiprocess},\n    Year = {2019}\n}\n</code></pre>\n\n          </div>"}, "last_serial": 7188025, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b0c18709a10b003ebbf69325e253e1f6", "sha256": "4b074d1a63cb8b4e09e9e118a37df708916ce2e1e4efc31d0fe15dbad6dc6567"}, "downloads": -1, "filename": "wsiprocess-0.0.1-py3.7.egg", "has_sig": false, "md5_digest": "b0c18709a10b003ebbf69325e253e1f6", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.4", "size": 31973, "upload_time": "2020-04-08T06:52:06", "upload_time_iso_8601": "2020-04-08T06:52:06.530306Z", "url": "https://files.pythonhosted.org/packages/1c/b8/7e12e6e8eef0017c0874d63ad005c8e4b58bacf259c2ce94b03ea85b2636/wsiprocess-0.0.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "613b77acf5bba9856e0d3a494338787a", "sha256": "96d62166282703e11fbcec55cfcdedd583f15c16dbd47f35c887fd9a0965ec9f"}, "downloads": -1, "filename": "wsiprocess-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "613b77acf5bba9856e0d3a494338787a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 21672, "upload_time": "2020-04-08T06:52:04", "upload_time_iso_8601": "2020-04-08T06:52:04.411688Z", "url": "https://files.pythonhosted.org/packages/ce/57/e7017ad6cd79e38522c94cdeba71d7bd0b1959a5255724d659579b9f7103/wsiprocess-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59de49c3d5cacafa099e323647912e61", "sha256": "d0161890a14d835201e953cfd700bd861701c9ecc2e2a17bc236d4ee7d2f1c53"}, "downloads": -1, "filename": "wsiprocess-0.0.1.tar.gz", "has_sig": false, "md5_digest": "59de49c3d5cacafa099e323647912e61", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 13348, "upload_time": "2020-04-08T06:52:08", "upload_time_iso_8601": "2020-04-08T06:52:08.833562Z", "url": "https://files.pythonhosted.org/packages/34/4e/6888c89488bcac0bc5b61c599d426ae93547c8eea3a356a795df38193cb5/wsiprocess-0.0.1.tar.gz", "yanked": false}], "0.1": [{"comment_text": "", "digests": {"md5": "9d89ef824af560111f62a3d9c8900f5c", "sha256": "4a379bd5bc080f8a030c37af6eafaab63f42bd1b1887df1b26d410c475b0310a"}, "downloads": -1, "filename": "wsiprocess-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9d89ef824af560111f62a3d9c8900f5c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 24982, "upload_time": "2020-05-07T08:21:18", "upload_time_iso_8601": "2020-05-07T08:21:18.480842Z", "url": "https://files.pythonhosted.org/packages/d2/3a/0f940a9ce2f88b79dc33450b73351297521d26649c6bd1653c6456da350b/wsiprocess-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2c019b328a0a595693b84d12e3fdd12", "sha256": "3a6ff5aebd7724db96cb4b3b3fa53136eaeec881413d5dda01ecff5000e45abb"}, "downloads": -1, "filename": "wsiprocess-0.1.tar.gz", "has_sig": false, "md5_digest": "c2c019b328a0a595693b84d12e3fdd12", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 15354, "upload_time": "2020-05-07T08:21:19", "upload_time_iso_8601": "2020-05-07T08:21:19.665868Z", "url": "https://files.pythonhosted.org/packages/8a/1a/7f8d26eabc905bf1d9993bd977f7a80067b3f57ee716e5c6c01733074993/wsiprocess-0.1.tar.gz", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "be525aee231315e3a1706616b205ec6b", "sha256": "142a8fb938cde512ad050f0d741fa3d608562e7881efda16a996fe0c682cb55d"}, "downloads": -1, "filename": "wsiprocess-0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "be525aee231315e3a1706616b205ec6b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 26174, "upload_time": "2020-05-07T12:21:53", "upload_time_iso_8601": "2020-05-07T12:21:53.779446Z", "url": "https://files.pythonhosted.org/packages/7f/67/1cd13d6b5a6804edd5c4160170f64048a7957382e7064a6c5736321c7e97/wsiprocess-0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc8fdb3de9754b8f8654e06d5fcc3fb6", "sha256": "c49d66af22114ad334e13fab87d04526404d509d76c1857556de5cfd39f5f95c"}, "downloads": -1, "filename": "wsiprocess-0.11.tar.gz", "has_sig": false, "md5_digest": "bc8fdb3de9754b8f8654e06d5fcc3fb6", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 16384, "upload_time": "2020-05-07T12:21:56", "upload_time_iso_8601": "2020-05-07T12:21:56.559002Z", "url": "https://files.pythonhosted.org/packages/5a/94/1a625d77c7c22caad0a3b495bc727b57a43866693abf39c55db2916c52a2/wsiprocess-0.11.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be525aee231315e3a1706616b205ec6b", "sha256": "142a8fb938cde512ad050f0d741fa3d608562e7881efda16a996fe0c682cb55d"}, "downloads": -1, "filename": "wsiprocess-0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "be525aee231315e3a1706616b205ec6b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 26174, "upload_time": "2020-05-07T12:21:53", "upload_time_iso_8601": "2020-05-07T12:21:53.779446Z", "url": "https://files.pythonhosted.org/packages/7f/67/1cd13d6b5a6804edd5c4160170f64048a7957382e7064a6c5736321c7e97/wsiprocess-0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc8fdb3de9754b8f8654e06d5fcc3fb6", "sha256": "c49d66af22114ad334e13fab87d04526404d509d76c1857556de5cfd39f5f95c"}, "downloads": -1, "filename": "wsiprocess-0.11.tar.gz", "has_sig": false, "md5_digest": "bc8fdb3de9754b8f8654e06d5fcc3fb6", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 16384, "upload_time": "2020-05-07T12:21:56", "upload_time_iso_8601": "2020-05-07T12:21:56.559002Z", "url": "https://files.pythonhosted.org/packages/5a/94/1a625d77c7c22caad0a3b495bc727b57a43866693abf39c55db2916c52a2/wsiprocess-0.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:01 2020"}