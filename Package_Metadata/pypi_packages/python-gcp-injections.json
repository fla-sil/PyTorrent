{"info": {"author": "Tommy Strand", "author_email": "github-projects@ireality.no", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "> pip install python-gcp-injections\n\nIf you want single line logging you can use standard logging with `logging.info(\"This is my log text\")`. But if you \nwould like to have som more context you use.\n\n```python\nfrom gcpi.stackdriverlog import get_logger\nLOG = get_logger()\n\nmy_dict_data = {'test':1, 'debug':2}\n\nLOG.info(\"This is my log\")\nLOG.info(my_dict_data, param1='true', message=\"Invoice render timing\")\n``` \nmessage is the text that will show up as summary in the log. My dict_data in this case \nwill show up under jsonPayload event, while the param1 will show up on the same level\nas event. \n\n### Django\nin settings.py add\n```python\nfrom gcpi.stackdriverlog import stackdriver_init_logging\nstackdriver_init_logging()\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/injectedreality/python-gcp-injections", "keywords": "stackdriver django gcp logging gke", "license": "", "maintainer": "", "maintainer_email": "", "name": "python-gcp-injections", "package_url": "https://pypi.org/project/python-gcp-injections/", "platform": "", "project_url": "https://pypi.org/project/python-gcp-injections/", "project_urls": {"Homepage": "https://github.com/injectedreality/python-gcp-injections"}, "release_url": "https://pypi.org/project/python-gcp-injections/1.5.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Tools and libraries for python to better run services on GCP", "version": "1.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <blockquote>\n<p>pip install python-gcp-injections</p>\n</blockquote>\n<p>If you want single line logging you can use standard logging with <code>logging.info(\"This is my log text\")</code>. But if you\nwould like to have som more context you use.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gcpi.stackdriverlog</span> <span class=\"kn\">import</span> <span class=\"n\">get_logger</span>\n<span class=\"n\">LOG</span> <span class=\"o\">=</span> <span class=\"n\">get_logger</span><span class=\"p\">()</span>\n\n<span class=\"n\">my_dict_data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'test'</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'debug'</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">}</span>\n\n<span class=\"n\">LOG</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"This is my log\"</span><span class=\"p\">)</span>\n<span class=\"n\">LOG</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"n\">my_dict_data</span><span class=\"p\">,</span> <span class=\"n\">param1</span><span class=\"o\">=</span><span class=\"s1\">'true'</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s2\">\"Invoice render timing\"</span><span class=\"p\">)</span>\n</pre>\n<p>message is the text that will show up as summary in the log. My dict_data in this case\nwill show up under jsonPayload event, while the param1 will show up on the same level\nas event.</p>\n<h3>Django</h3>\n<p>in settings.py add</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gcpi.stackdriverlog</span> <span class=\"kn\">import</span> <span class=\"n\">stackdriver_init_logging</span>\n<span class=\"n\">stackdriver_init_logging</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6499355, "releases": {"1.3": [{"comment_text": "", "digests": {"md5": "07b719aee02844aff12b4a7af42656a4", "sha256": "e9bb2610438883f8368ce83f597b3693fe68533728977af689c981d6163976b2"}, "downloads": -1, "filename": "python-gcp-injections-1.3.tar.gz", "has_sig": false, "md5_digest": "07b719aee02844aff12b4a7af42656a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6996, "upload_time": "2019-11-11T14:01:23", "upload_time_iso_8601": "2019-11-11T14:01:23.481791Z", "url": "https://files.pythonhosted.org/packages/1e/11/fec6651da5722fe351e0607799c0d7738f4a17d3b527d783112d6a510e7c/python-gcp-injections-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "aa0708ed94696be1e627c314976d43bb", "sha256": "45da99218afa13f2d4ef0443985df5b594e6a437b443dea71684f68c6ae6a06a"}, "downloads": -1, "filename": "python-gcp-injections-1.4.tar.gz", "has_sig": false, "md5_digest": "aa0708ed94696be1e627c314976d43bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6964, "upload_time": "2019-11-11T15:02:06", "upload_time_iso_8601": "2019-11-11T15:02:06.528759Z", "url": "https://files.pythonhosted.org/packages/99/54/34f33c1e3d5f165504178a7c3735089b2f647e6ee76f219e28b4f116e621/python-gcp-injections-1.4.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "a3699848cfad7bdfbaa6b64427ff1ad9", "sha256": "bf86e976a41e975be58491d0225a96c0010813fbdb7b2d73364a44c7b032394d"}, "downloads": -1, "filename": "python-gcp-injections-1.5.tar.gz", "has_sig": false, "md5_digest": "a3699848cfad7bdfbaa6b64427ff1ad9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6982, "upload_time": "2019-11-11T16:42:42", "upload_time_iso_8601": "2019-11-11T16:42:42.758786Z", "url": "https://files.pythonhosted.org/packages/98/be/3a0fdf4af546d90f1a469dcd75c4e30b76f0f86a29e8f324490bc13dea5a/python-gcp-injections-1.5.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "87d3f5776316a0ce9fcdc9b18610838a", "sha256": "f5e6cdc5fb9c5ef902b4a2c73e05b5ec7699d84111488a3d6727138022dff6df"}, "downloads": -1, "filename": "python-gcp-injections-1.5.1.tar.gz", "has_sig": false, "md5_digest": "87d3f5776316a0ce9fcdc9b18610838a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7306, "upload_time": "2020-01-22T09:40:41", "upload_time_iso_8601": "2020-01-22T09:40:41.351757Z", "url": "https://files.pythonhosted.org/packages/d8/4a/da5f68e7bbf9099011a090ebc6ad064e731767341d7801521ce831d2a08e/python-gcp-injections-1.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "87d3f5776316a0ce9fcdc9b18610838a", "sha256": "f5e6cdc5fb9c5ef902b4a2c73e05b5ec7699d84111488a3d6727138022dff6df"}, "downloads": -1, "filename": "python-gcp-injections-1.5.1.tar.gz", "has_sig": false, "md5_digest": "87d3f5776316a0ce9fcdc9b18610838a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7306, "upload_time": "2020-01-22T09:40:41", "upload_time_iso_8601": "2020-01-22T09:40:41.351757Z", "url": "https://files.pythonhosted.org/packages/d8/4a/da5f68e7bbf9099011a090ebc6ad064e731767341d7801521ce831d2a08e/python-gcp-injections-1.5.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:32 2020"}