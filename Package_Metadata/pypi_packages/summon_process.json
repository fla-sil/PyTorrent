{"info": {"author": "Mateusz Lenik", "author_email": "mlen@mlen.pl", "bugtrack_url": null, "classifiers": [], "description": "summon_process\n==============\n\n**Current status:** work in progress. The code is lacking proper documentation\nand is broken on Python 3.3.\n\n.. image:: https://travis-ci.org/mlen/summon_process.png?branch=master\n    :target: https://travis-ci.org/mlen/summon_process\n\nPython process orchestration library.\n\nAbout\n-----\n\nAs developers we have to work on project that rely on multiple processes to run\ntheir tests suites. Sometimes these processes need some time to boot.\n\nThe simple (and wrong) solution is to add ``time.sleep`` and pretend that it\nworks. Unfortunately there is no way the estimate the amount of time to sleep\nand not loose too much time.\n\n``summon_process`` is an attempt to solve this problem. What you can see below\nis an example test that waits for a HTTP server to boot, and then it checks\nwhether the returned status is OK.\n\n.. sourcecode:: python\n\n    from unittest import TestCase\n    from summon_process.executors import HTTPCoordinatedExecutor\n    from summon_process.utils import orchestrated\n    from httplib import HTTPConnection, OK\n\n\n    class TestServer(TestCase):\n        def test_it_works(self):\n            executor = HTTPCoordinatedExecutor(\"./server\",\n                                               url=\"http://localhost:8000/\")\n\n            with orchestrated(executor):\n                conn = HTTPConnection(\"localhost\", 8000)\n                conn.request('GET', '/')\n                assert conn.getresponse().status is OK\n\nThe ``server`` command in this case is just a bash script that sleeps for some\ntime and then launches the builtin SimpleHTTPServer on port 8000.\n\nAuthor\n------\n\nThe project was developed by `Mateusz Lenik <http://mlen.pl>`_.\n\nLicense\n-------\n\n``summon_process`` is licensed under LGPL license, version 3.\n\nContributing and reporting bugs\n-------------------------------\n\nSource code is available at: `mlen/summon_process <https://github.com/mlen/summon_process>`_.\nIssue tracker is located at `GitHub Issues <https://github.com/mlen/summon_process/issues>`_.\nProjects `PyPi page <https://pypi.python.org/pypi/summon_process>`_.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mlen/summon_process", "keywords": null, "license": "LGPL", "maintainer": null, "maintainer_email": null, "name": "summon_process", "package_url": "https://pypi.org/project/summon_process/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/summon_process/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mlen/summon_process"}, "release_url": "https://pypi.org/project/summon_process/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "Process coordinator for tests", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Current status:</strong> work in progress. The code is lacking proper documentation\nand is broken on Python 3.3.</p>\n<a href=\"https://travis-ci.org/mlen/summon_process\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/mlen/summon_process.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35a5b3660c5bcba1c99ef128e9e63ccf456891f7/68747470733a2f2f7472617669732d63692e6f72672f6d6c656e2f73756d6d6f6e5f70726f636573732e706e673f6272616e63683d6d6173746572\"></a>\n<p>Python process orchestration library.</p>\n<div id=\"about\">\n<h2>About</h2>\n<p>As developers we have to work on project that rely on multiple processes to run\ntheir tests suites. Sometimes these processes need some time to boot.</p>\n<p>The simple (and wrong) solution is to add <tt>time.sleep</tt> and pretend that it\nworks. Unfortunately there is no way the estimate the amount of time to sleep\nand not loose too much time.</p>\n<p><tt>summon_process</tt> is an attempt to solve this problem. What you can see below\nis an example test that waits for a HTTP server to boot, and then it checks\nwhether the returned status is OK.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">unittest</span> <span class=\"kn\">import</span> <span class=\"n\">TestCase</span>\n<span class=\"kn\">from</span> <span class=\"nn\">summon_process.executors</span> <span class=\"kn\">import</span> <span class=\"n\">HTTPCoordinatedExecutor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">summon_process.utils</span> <span class=\"kn\">import</span> <span class=\"n\">orchestrated</span>\n<span class=\"kn\">from</span> <span class=\"nn\">httplib</span> <span class=\"kn\">import</span> <span class=\"n\">HTTPConnection</span><span class=\"p\">,</span> <span class=\"n\">OK</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TestServer</span><span class=\"p\">(</span><span class=\"n\">TestCase</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test_it_works</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">executor</span> <span class=\"o\">=</span> <span class=\"n\">HTTPCoordinatedExecutor</span><span class=\"p\">(</span><span class=\"s2\">\"./server\"</span><span class=\"p\">,</span>\n                                           <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">\"http://localhost:8000/\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">orchestrated</span><span class=\"p\">(</span><span class=\"n\">executor</span><span class=\"p\">):</span>\n            <span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"n\">HTTPConnection</span><span class=\"p\">(</span><span class=\"s2\">\"localhost\"</span><span class=\"p\">,</span> <span class=\"mi\">8000</span><span class=\"p\">)</span>\n            <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"s1\">'GET'</span><span class=\"p\">,</span> <span class=\"s1\">'/'</span><span class=\"p\">)</span>\n            <span class=\"k\">assert</span> <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">getresponse</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"ow\">is</span> <span class=\"n\">OK</span>\n</pre>\n<p>The <tt>server</tt> command in this case is just a bash script that sleeps for some\ntime and then launches the builtin SimpleHTTPServer on port 8000.</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>The project was developed by <a href=\"http://mlen.pl\" rel=\"nofollow\">Mateusz Lenik</a>.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><tt>summon_process</tt> is licensed under LGPL license, version 3.</p>\n</div>\n<div id=\"contributing-and-reporting-bugs\">\n<h2>Contributing and reporting bugs</h2>\n<p>Source code is available at: <a href=\"https://github.com/mlen/summon_process\" rel=\"nofollow\">mlen/summon_process</a>.\nIssue tracker is located at <a href=\"https://github.com/mlen/summon_process/issues\" rel=\"nofollow\">GitHub Issues</a>.\nProjects <a href=\"https://pypi.python.org/pypi/summon_process\" rel=\"nofollow\">PyPi page</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 1004880, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "970ab9397aecb260fd217b446defd71b", "sha256": "a395c00f2f1ac44916b499a81085bea819a7cc4714fe0d60b3a2f7e310d9e0e2"}, "downloads": -1, "filename": "summon_process-0.1.0.tar.gz", "has_sig": false, "md5_digest": "970ab9397aecb260fd217b446defd71b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2288, "upload_time": "2013-08-05T19:25:28", "upload_time_iso_8601": "2013-08-05T19:25:28.852593Z", "url": "https://files.pythonhosted.org/packages/5a/a1/5971d49c2f21f7f2fe8927ceb5ecb2c5fd7605ffa44b8e32e6728076cf65/summon_process-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7c8fbcf9241e549d5e341cddb6267019", "sha256": "7fe4d4f8836581f57683a107c981e61e92a8290a091717eea47cda5d677e7e71"}, "downloads": -1, "filename": "summon_process-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7c8fbcf9241e549d5e341cddb6267019", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3176, "upload_time": "2013-08-09T19:54:36", "upload_time_iso_8601": "2013-08-09T19:54:36.444819Z", "url": "https://files.pythonhosted.org/packages/10/e3/a4dbba68f0e3e975bed92007052ae61a2c540f6dc742880f49c627892457/summon_process-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "1e968c542c62d8f9c22edf4c8f22000b", "sha256": "7daa9be534cc1c7d0f0b8bffcf50819429dcc49d12472579d03a96dedf82b2ca"}, "downloads": -1, "filename": "summon_process-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1e968c542c62d8f9c22edf4c8f22000b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5818, "upload_time": "2013-08-09T20:11:25", "upload_time_iso_8601": "2013-08-09T20:11:25.364824Z", "url": "https://files.pythonhosted.org/packages/90/02/b40d7261495525f9c37969033326bf0c085d40583af0f2be911d6e173c29/summon_process-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "9ab484b3eae6f48cc4f4cab9247ff9a1", "sha256": "64b82a3ca89ccbaf4a1c193805fdeba266ed50246c267a68d42ed9305c056088"}, "downloads": -1, "filename": "summon_process-0.1.3.tar.gz", "has_sig": false, "md5_digest": "9ab484b3eae6f48cc4f4cab9247ff9a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6623, "upload_time": "2014-02-19T13:56:33", "upload_time_iso_8601": "2014-02-19T13:56:33.923487Z", "url": "https://files.pythonhosted.org/packages/9f/3c/9d10604d810ea544d82d624083cde58cf16aee783d7050e581e95d3fd0a9/summon_process-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9ab484b3eae6f48cc4f4cab9247ff9a1", "sha256": "64b82a3ca89ccbaf4a1c193805fdeba266ed50246c267a68d42ed9305c056088"}, "downloads": -1, "filename": "summon_process-0.1.3.tar.gz", "has_sig": false, "md5_digest": "9ab484b3eae6f48cc4f4cab9247ff9a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6623, "upload_time": "2014-02-19T13:56:33", "upload_time_iso_8601": "2014-02-19T13:56:33.923487Z", "url": "https://files.pythonhosted.org/packages/9f/3c/9d10604d810ea544d82d624083cde58cf16aee783d7050e581e95d3fd0a9/summon_process-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:26 2020"}