{"info": {"author": "Arup Malakar", "author_email": "amalakar@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "pyflix2: python module for accessing Netflix webservice\n=======================================================\n\n|VersionLink|_ |NumDownloadLink|_\n\n.. |VersionLink| image:: https://pypip.in/v/pyflix2/badge.png\n.. _VersionLink: https://crate.io/packages/pyflix2/\n\n.. |NumDownloadLink| image:: https://pypip.in/d/pyflix2/badge.png\n.. _NumDownloadLink: https://crate.io/packages/pyflix2/\n\n\n\nIntroduction\n------------\n\n*pyflix2* is a `BSD licensed` python module for accessing netflix API (both v1 and v2)\nNetflix provides REST interfaces to access it's catalog and various user data.\nThis module exposes easy to use object oriented interfaces that is inteded to make it even easier\nfor python programmers to use.\n\nInstall\n-------\nInstalling requests is simple with `pip <http://www.pip-installer.org/>`_::\n\n    $ pip install pyflix2\n\nor, with `easy_install <http://pypi.python.org/pypi/setuptools>`_::\n\n    $ easy_install pyflix2\n\n\nExample\n-------\n\n::\n\n    from pyflix2 import *\n\n    netflix = NetflixAPIV2( 'appname', 'key', 'shared_secret')\n    movies = netflix.title_autocomplete('Terminator', filter='instant')\n    for title in movies['autocomplete']['title']:\n        print title\n\n    user = netflix.get_user('use_id', 'access_token', 'access_token_secret')\n    reco = user.get_reccomendations()\n    for movie in reco['recommendations']:\n        print movie['title']['regular']\n\nNote\n    - Here ``appname``, ``key`` and ``shared_secret`` needs to be obtained from: http://developer.netflix.com/apps/mykeys.\n    - The ``user_id``, ``access_token``, ``access_token_secret`` needs to be obtained programmatically using ``get_request_token``\n      and ``get_access_token``\n\n\nCommandline\n-----------\n::\n\n    $ python -mpyflix2 -s 'the matrix' -x \n\nOr see help::\n\n    $ python -mpyflix2 -h\n\n\nFeatures\n--------\n\n- Supports both V1 and V2 of netflix REST API\n- Supports both out-of-bound (oauth 1.0a) and  vanila three legged oauth auhentication\n- Provides easy to use and well documented functional interface for all the API exposed by netflix\n- Throws Exception for all kinds of error situation making it easier to integrate with other program\n- V1 and V2 APIs are exposed using different classes, so version specific features can be used easily\n- Internally uses `Requests <https://github.com/kennethreitz/requests>`_ for making HTTP calls\n- Want any new feature? please `file a feature request <https://github.com/amalakar/pyflix2/issues/new>`_\n\nDocumentation: http://pyflix2.readthedocs.org/en/latest/index.html\n\nNote: I would like to thank Kirsten Jones for the library http://code.google.com/p/pyflix/\nAs pyflix2 was initially inspired by pyflix.\n\n.. _`the repository`: https://github.com/amalakar/pyflix2\n\nRequirements\n------------\n- Requires ``requests`` module minimum ``v1.1.0``\n- Install latest version of requests-oauthlib: ``pip install -U git+git://github.com/requests/requests-oauthlib.git``\n\n\n.. :changelog:\n\nHistory\n-------\n0.2.1 (2014-04-29)\n++++++++++++++++++\n- Adding a new method to download the entire catalog into a file.\n\n0.2.0 (2013-01-26)\n++++++++++++++++++\n- Issue #6: Add support for downloading full catalog in lib as well as in command line \n- Issue #8: Incorporate netflix api change to api-public.netflix.com\n- Issue #9: Update codebase to work with requests v1.1.0\n\nBackward incompatible changes\n-----------------------------\n- ``get_user`` api signature has changed (require one more parameter ``user_id``)\n- Addition of ``user_id`` in ``~/.pyflix.cfg``\n- ``get_access_token`` returns additional ``user_id``\n\n0.1.3 (2012-07-09)\n++++++++++++++++++\n- Fixed access token retrival code in __main__.py\n- Fixed typo in sample config file\n\n0.1.2 (2012-07-06)\n+++++++++++++++++++\n- Issue #5: Fixed circular dependency in setup.py\n\n0.1.1 (2012-07-04)\n+++++++++++++++++++\n\n- Initial version", "description_content_type": null, "docs_url": "https://pythonhosted.org/pyflix2/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pyflix2.readthedocs.org/", "keywords": null, "license": "Copyright (c) 2012, Arup Malakar \n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n  1. Redistributions of source code must retain the above copyright\n     notice, this list of conditions and the following disclaimer.\n\n  2. Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n     distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL INFRAE OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.", "maintainer": null, "maintainer_email": null, "name": "pyflix2", "package_url": "https://pypi.org/project/pyflix2/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyflix2/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pyflix2.readthedocs.org/"}, "release_url": "https://pypi.org/project/pyflix2/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "A python module for accessing Netflix REST webservice, both V1 and V2 supports oauth and oob.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://crate.io/packages/pyflix2/\" rel=\"nofollow\"><img alt=\"VersionLink\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9d5fece75d07c5851ad6e761fbc41910cc18c635/68747470733a2f2f70797069702e696e2f762f7079666c6978322f62616467652e706e67\"></a> <a href=\"https://crate.io/packages/pyflix2/\" rel=\"nofollow\"><img alt=\"NumDownloadLink\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b0046969132ff46bf4464a39abcea4d28b47e86/68747470733a2f2f70797069702e696e2f642f7079666c6978322f62616467652e706e67\"></a></p>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p><em>pyflix2</em> is a <cite>BSD licensed</cite> python module for accessing netflix API (both v1 and v2)\nNetflix provides REST interfaces to access it\u2019s catalog and various user data.\nThis module exposes easy to use object oriented interfaces that is inteded to make it even easier\nfor python programmers to use.</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Installing requests is simple with <a href=\"http://www.pip-installer.org/\" rel=\"nofollow\">pip</a>:</p>\n<pre>$ pip install pyflix2\n</pre>\n<p>or, with <a href=\"http://pypi.python.org/pypi/setuptools\" rel=\"nofollow\">easy_install</a>:</p>\n<pre>$ easy_install pyflix2\n</pre>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre>from pyflix2 import *\n\nnetflix = NetflixAPIV2( 'appname', 'key', 'shared_secret')\nmovies = netflix.title_autocomplete('Terminator', filter='instant')\nfor title in movies['autocomplete']['title']:\n    print title\n\nuser = netflix.get_user('use_id', 'access_token', 'access_token_secret')\nreco = user.get_reccomendations()\nfor movie in reco['recommendations']:\n    print movie['title']['regular']\n</pre>\n<dl>\n<dt>Note</dt>\n<dd><ul>\n<li>Here <tt>appname</tt>, <tt>key</tt> and <tt>shared_secret</tt> needs to be obtained from: <a href=\"http://developer.netflix.com/apps/mykeys\" rel=\"nofollow\">http://developer.netflix.com/apps/mykeys</a>.</li>\n<li>The <tt>user_id</tt>, <tt>access_token</tt>, <tt>access_token_secret</tt> needs to be obtained programmatically using <tt>get_request_token</tt>\nand <tt>get_access_token</tt></li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"commandline\">\n<h2>Commandline</h2>\n<pre>$ python -mpyflix2 -s 'the matrix' -x\n</pre>\n<p>Or see help:</p>\n<pre>$ python -mpyflix2 -h\n</pre>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Supports both V1 and V2 of netflix REST API</li>\n<li>Supports both out-of-bound (oauth 1.0a) and  vanila three legged oauth auhentication</li>\n<li>Provides easy to use and well documented functional interface for all the API exposed by netflix</li>\n<li>Throws Exception for all kinds of error situation making it easier to integrate with other program</li>\n<li>V1 and V2 APIs are exposed using different classes, so version specific features can be used easily</li>\n<li>Internally uses <a href=\"https://github.com/kennethreitz/requests\" rel=\"nofollow\">Requests</a> for making HTTP calls</li>\n<li>Want any new feature? please <a href=\"https://github.com/amalakar/pyflix2/issues/new\" rel=\"nofollow\">file a feature request</a></li>\n</ul>\n<p>Documentation: <a href=\"http://pyflix2.readthedocs.org/en/latest/index.html\" rel=\"nofollow\">http://pyflix2.readthedocs.org/en/latest/index.html</a></p>\n<p>Note: I would like to thank Kirsten Jones for the library <a href=\"http://code.google.com/p/pyflix/\" rel=\"nofollow\">http://code.google.com/p/pyflix/</a>\nAs pyflix2 was initially inspired by pyflix.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Requires <tt>requests</tt> module minimum <tt>v1.1.0</tt></li>\n<li>Install latest version of requests-oauthlib: <tt>pip install <span class=\"pre\">-U</span> <span class=\"pre\">git+git://github.com/requests/requests-oauthlib.git</span></tt></li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.2.1 (2014-04-29)</h3>\n<ul>\n<li>Adding a new method to download the entire catalog into a file.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.2.0 (2013-01-26)</h3>\n<ul>\n<li>Issue #6: Add support for downloading full catalog in lib as well as in command line</li>\n<li>Issue #8: Incorporate netflix api change to api-public.netflix.com</li>\n<li>Issue #9: Update codebase to work with requests v1.1.0</li>\n</ul>\n</div>\n</div>\n<div id=\"backward-incompatible-changes\">\n<h2>Backward incompatible changes</h2>\n<ul>\n<li><tt>get_user</tt> api signature has changed (require one more parameter <tt>user_id</tt>)</li>\n<li>Addition of <tt>user_id</tt> in <tt><span class=\"pre\">~/.pyflix.cfg</span></tt></li>\n<li><tt>get_access_token</tt> returns additional <tt>user_id</tt></li>\n</ul>\n<div id=\"id3\">\n<h3>0.1.3 (2012-07-09)</h3>\n<ul>\n<li>Fixed access token retrival code in __main__.py</li>\n<li>Fixed typo in sample config file</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1.2 (2012-07-06)</h3>\n<ul>\n<li>Issue #5: Fixed circular dependency in setup.py</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.1.1 (2012-07-04)</h3>\n<ul>\n<li>Initial version</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1958141, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "e4bd0050d7535220dd6cc79802785b71", "sha256": "599c2b1a73dfe796889cf01625a9c0ec730ec61dc12adba2dffc79fee5f05ca8"}, "downloads": -1, "filename": "pyflix2-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e4bd0050d7535220dd6cc79802785b71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16137, "upload_time": "2012-07-05T19:59:00", "upload_time_iso_8601": "2012-07-05T19:59:00.348398Z", "url": "https://files.pythonhosted.org/packages/68/58/d667c48d25b57bacd34a812b5cadb0635e6c659b20b7de5c37089ffd6363/pyflix2-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a6db156ea0b3d0ae664b7a9663944a25", "sha256": "abc121e5aa5954f243eaca8bf50cb2e7c19ce15abb710d65ad183dcc9b02c5f9"}, "downloads": -1, "filename": "pyflix2-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a6db156ea0b3d0ae664b7a9663944a25", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16238, "upload_time": "2012-07-06T19:15:40", "upload_time_iso_8601": "2012-07-06T19:15:40.680097Z", "url": "https://files.pythonhosted.org/packages/89/44/4bad2a1344c979a041d9e91659dddb781f157b345d4f00ee5b0c62c8308a/pyflix2-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "d339d0a203d0727c6548e288316752a4", "sha256": "3568bc2d332dcba831a962c4a5d60149de57bc6ec3fa37a49a22b7c238452eac"}, "downloads": -1, "filename": "pyflix2-0.1.3.tar.gz", "has_sig": false, "md5_digest": "d339d0a203d0727c6548e288316752a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16459, "upload_time": "2012-07-10T05:37:51", "upload_time_iso_8601": "2012-07-10T05:37:51.008160Z", "url": "https://files.pythonhosted.org/packages/09/2e/31c42687279c4e83327fe332f45d19b3cb332fe927f163f0045f1192f66c/pyflix2-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "49a68b10a15e1adf0adcfa0421abf662", "sha256": "e9ded62e3e579aeb304caa71276d5334d8cd1d88cccd73b3e6ccb5360f58c141"}, "downloads": -1, "filename": "pyflix2-0.2.0.tar.gz", "has_sig": false, "md5_digest": "49a68b10a15e1adf0adcfa0421abf662", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16950, "upload_time": "2013-01-27T08:25:48", "upload_time_iso_8601": "2013-01-27T08:25:48.262287Z", "url": "https://files.pythonhosted.org/packages/1c/48/115a1f2aa13c2d7f2d436a1d525c76d2fd8fdc7905b521f545cfc1439fd2/pyflix2-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "4d2fb4b377e576d570fbf1400d7ae986", "sha256": "5bb9e752a16b3677b3fd6329d4c27f9b429bb667becc572c4b4221ae2b2bf32b"}, "downloads": -1, "filename": "pyflix2-0.2.1.tar.gz", "has_sig": false, "md5_digest": "4d2fb4b377e576d570fbf1400d7ae986", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17858, "upload_time": "2016-02-15T22:32:00", "upload_time_iso_8601": "2016-02-15T22:32:00.709132Z", "url": "https://files.pythonhosted.org/packages/b5/e3/e98076fc73ae56d3adaf81acbcdc6d1f47c1560ac0492943cebf26a918fa/pyflix2-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4d2fb4b377e576d570fbf1400d7ae986", "sha256": "5bb9e752a16b3677b3fd6329d4c27f9b429bb667becc572c4b4221ae2b2bf32b"}, "downloads": -1, "filename": "pyflix2-0.2.1.tar.gz", "has_sig": false, "md5_digest": "4d2fb4b377e576d570fbf1400d7ae986", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17858, "upload_time": "2016-02-15T22:32:00", "upload_time_iso_8601": "2016-02-15T22:32:00.709132Z", "url": "https://files.pythonhosted.org/packages/b5/e3/e98076fc73ae56d3adaf81acbcdc6d1f47c1560ac0492943cebf26a918fa/pyflix2-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:43 2020"}