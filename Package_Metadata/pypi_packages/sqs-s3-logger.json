{"info": {"author": "Mateusz Kaczy\u0144ski", "author_email": "contact@ellimilial.com", "bugtrack_url": null, "classifiers": [], "description": "sqs-s3-logger\n=============\n\nA library to persist messages on S3 using serverless architecture. It is\nmainly targeted at cheaply archiving low-volume, sporadic events from\napplications without a need to spin additional infrastructure.\n\n|Overall idea|\n\nWhat it\u2019s not\n-------------\n\nNot a replacement for general logging systems or libraries. Provides no\nfiltering or aggregation.\n\nAWS Alternatives\n----------------\n\n- `Cloudwach Logs`_\n- `Kinesis Firehose`_\n\nUsage\n=====\n\nConfigure ``boto3``\\ \u2019s credentials as per:\nhttp://boto3.readthedocs.io/en/latest/guide/quickstart.html#configuration\n\nMake sure you setup:\n\n-  ``AWS_ACCESS_KEY_ID``\n-  ``AWS_SECRET_ACCESS_KEY``\n-  ``AWS_DEFAULT_REGION`` (optionally)\n\nTake a look at ``main.py``.\n\nFor help: ``python3 main.py -h``\n\nFor example (backup at midnight each Saturday from ``app-logs`` queue to\n``app-logs-archive`` bucket):\n\n::\n\n    sqs-s3-logger create -b app-logs-archive -q app-logs -f app-logs-backup -s 'cron(0 0 ? * SAT *)'\n\nSending messages to a queue\n---------------------------\n\nIdeally you should use another AWS IAM user with permissions restricted\nto getting SQS queues and writing messages.\n\n::\n\n    import boto3\n    sqs = boto3.resource('sqs')\n    queue = sqs.get_queue_by_name(QueueName='<QUEUE_NAME>')\n    queue.send_message(MessageBody='<MSG_BODY_NOT_EXCEEDING_256KB>')\n\nLimitations\n===========\n\n-  Maximum SQS message size is limited to 256 KB\n-  There could be no more than 120,000 messages in a queue at a time.\n-  SQS messages cannot persist for longer than 14 days.\n-  Lambda environment has up to 512MB of ephemeral disk capacity.\n-  By default it does not guarantee correct time-based ordering\n\nYou may need to adjust your CRON settings depending on your volume.\n\nTesting\n=======\n\n``python3 setup.py test``\n\nThese will use your AWS account to instantiate a temporary integration\nenvironment.\n\n.. |Overall idea| image:: assets/graph-overview.png?raw=true :\n.. _Kinesis Firehose: https://aws.amazon.com/kinesis/firehose/\n.. _Cloudwach logs: https://aws.amazon.com/cloudwatch/details/#log-monitoring\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ellimilial/sqs-s3-logger", "keywords": "logging sqs s3 archive storage", "license": "", "maintainer": "", "maintainer_email": "", "name": "sqs-s3-logger", "package_url": "https://pypi.org/project/sqs-s3-logger/", "platform": "", "project_url": "https://pypi.org/project/sqs-s3-logger/", "project_urls": {"Homepage": "https://github.com/ellimilial/sqs-s3-logger"}, "release_url": "https://pypi.org/project/sqs-s3-logger/1.0.7/", "requires_dist": null, "requires_python": "", "summary": "Automated serverless logging to S3 via SQS.", "version": "1.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"sqs-s3-logger\">\n<h2>sqs-s3-logger</h2>\n<p>A library to persist messages on S3 using serverless architecture. It is\nmainly targeted at cheaply archiving low-volume, sporadic events from\napplications without a need to spin additional infrastructure.</p>\n<p><img alt=\"Overall idea\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/00deed5893835ee9939cdc5fdb5af3ed17785e1d/6173736574732f67726170682d6f766572766965772e706e673f7261773d747275653a\"></p>\n<div id=\"what-its-not\">\n<h3>What it\u2019s not</h3>\n<p>Not a replacement for general logging systems or libraries. Provides no\nfiltering or aggregation.</p>\n</div>\n<div id=\"aws-alternatives\">\n<h3>AWS Alternatives</h3>\n<ul>\n<li><a href=\"https://aws.amazon.com/cloudwatch/details/#log-monitoring\" rel=\"nofollow\">Cloudwach Logs</a></li>\n<li><a href=\"https://aws.amazon.com/kinesis/firehose/\" rel=\"nofollow\">Kinesis Firehose</a></li>\n</ul>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Configure <tt>boto3</tt>\u2019s credentials as per:\n<a href=\"http://boto3.readthedocs.io/en/latest/guide/quickstart.html#configuration\" rel=\"nofollow\">http://boto3.readthedocs.io/en/latest/guide/quickstart.html#configuration</a></p>\n<p>Make sure you setup:</p>\n<ul>\n<li><tt>AWS_ACCESS_KEY_ID</tt></li>\n<li><tt>AWS_SECRET_ACCESS_KEY</tt></li>\n<li><tt>AWS_DEFAULT_REGION</tt> (optionally)</li>\n</ul>\n<p>Take a look at <tt>main.py</tt>.</p>\n<p>For help: <tt>python3 main.py <span class=\"pre\">-h</span></tt></p>\n<p>For example (backup at midnight each Saturday from <tt><span class=\"pre\">app-logs</span></tt> queue to\n<tt><span class=\"pre\">app-logs-archive</span></tt> bucket):</p>\n<pre>sqs-s3-logger create -b app-logs-archive -q app-logs -f app-logs-backup -s 'cron(0 0 ? * SAT *)'\n</pre>\n<div id=\"sending-messages-to-a-queue\">\n<h3>Sending messages to a queue</h3>\n<p>Ideally you should use another AWS IAM user with permissions restricted\nto getting SQS queues and writing messages.</p>\n<pre>import boto3\nsqs = boto3.resource('sqs')\nqueue = sqs.get_queue_by_name(QueueName='&lt;QUEUE_NAME&gt;')\nqueue.send_message(MessageBody='&lt;MSG_BODY_NOT_EXCEEDING_256KB&gt;')\n</pre>\n</div>\n</div>\n<div id=\"limitations\">\n<h2>Limitations</h2>\n<ul>\n<li>Maximum SQS message size is limited to 256 KB</li>\n<li>There could be no more than 120,000 messages in a queue at a time.</li>\n<li>SQS messages cannot persist for longer than 14 days.</li>\n<li>Lambda environment has up to 512MB of ephemeral disk capacity.</li>\n<li>By default it does not guarantee correct time-based ordering</li>\n</ul>\n<p>You may need to adjust your CRON settings depending on your volume.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p><tt>python3 setup.py test</tt></p>\n<p>These will use your AWS account to instantiate a temporary integration\nenvironment.</p>\n</div>\n\n          </div>"}, "last_serial": 3326626, "releases": {"1.0.5": [{"comment_text": "", "digests": {"md5": "69cf89f9f55fd5f5fb47433de50ad082", "sha256": "4f57ce1806b1dbb0ecec3e0821b3f807ebfd30dcc320e1c44241ecd4ef9e400b"}, "downloads": -1, "filename": "sqs-s3-logger-1.0.5.tar.gz", "has_sig": false, "md5_digest": "69cf89f9f55fd5f5fb47433de50ad082", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7204, "upload_time": "2017-11-07T00:17:16", "upload_time_iso_8601": "2017-11-07T00:17:16.396763Z", "url": "https://files.pythonhosted.org/packages/6f/33/202de20f0d2c8efc4c2b2b40d52d38951b0ee925a2fe7b47500e65618688/sqs-s3-logger-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "9a978b62253400d60fc94be7b0ccbf7c", "sha256": "f4d3a941ba04e06c9de21e88ef6d2a5d61b9ee6af1331d47a02ec400e083d840"}, "downloads": -1, "filename": "sqs-s3-logger-1.0.6.tar.gz", "has_sig": false, "md5_digest": "9a978b62253400d60fc94be7b0ccbf7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11599, "upload_time": "2017-11-12T16:49:50", "upload_time_iso_8601": "2017-11-12T16:49:50.982185Z", "url": "https://files.pythonhosted.org/packages/9f/b4/2b98a00f7d51ab7220ec4257ac2eb5d064f359728a2cd80c6bf85c1b7c0d/sqs-s3-logger-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "984408ae0bb5ba523d3d8145e44e53ae", "sha256": "2023729a28a554c1820bd0484f44b86754a3566dfb5753bb8571598e28e81b33"}, "downloads": -1, "filename": "sqs-s3-logger-1.0.7.tar.gz", "has_sig": false, "md5_digest": "984408ae0bb5ba523d3d8145e44e53ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11593, "upload_time": "2017-11-12T16:59:38", "upload_time_iso_8601": "2017-11-12T16:59:38.170308Z", "url": "https://files.pythonhosted.org/packages/c0/09/0bc569ee0378b834a7d2a264a43762927d9b0e6918260a872cf183c919b0/sqs-s3-logger-1.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "984408ae0bb5ba523d3d8145e44e53ae", "sha256": "2023729a28a554c1820bd0484f44b86754a3566dfb5753bb8571598e28e81b33"}, "downloads": -1, "filename": "sqs-s3-logger-1.0.7.tar.gz", "has_sig": false, "md5_digest": "984408ae0bb5ba523d3d8145e44e53ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11593, "upload_time": "2017-11-12T16:59:38", "upload_time_iso_8601": "2017-11-12T16:59:38.170308Z", "url": "https://files.pythonhosted.org/packages/c0/09/0bc569ee0378b834a7d2a264a43762927d9b0e6918260a872cf183c919b0/sqs-s3-logger-1.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:28 2020"}