{"info": {"author": "Daniil Minukhin", "author_email": "ddddsa@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Documentation", "Topic :: Utilities"], "description": "![](https://img.shields.io/pypi/v/foliantcontrib.project_graph.svg)\n\n# ProjectGraph\n\nFoliant Meta Command which draws a scheme of project sections. This extension uses meta-information, collected by folinatcontrib.meta extension.\n\n[Graphviz](http://graphviz.org) is used to build a scheme.\n\n`libgraphviz-dev` is required to be installed on your machine.\n\n## Installation\n\n```bash\n$ pip install foliantcontrib.project_graph\n```\n\n## Usage\n\nFirst you need to specify all relations between the documents in your project. To do this add the `relates` section to your document's meta-data:\n\n```yaml\n---\nrelates:\n    - tests/test1.md\n    - specs/spec.md\n---\n```\n\nin `relates` section you need to specify a list of documents to which current document relates. You can specify either a relative path to connected document or its ID (if the corresponding document has an ID assigned in its meta section):\n\n\n```yaml\n# index.md\n---\nid: index\n---\n```\n\n```yaml\n# glossary.md\n---\nrelates:\n    - index\n---\n```\n\nAfter you specified all relations, run the draw command:\n\n```bash\n$ foliant draw\n```\n\nScheme will appear in the file `project_graph.png`\n\n## Config\n\nProjectGraph has a number of options:\n\n```yaml\nproject_graph:\n    directed: false\n    filename: project_graph.png\n    gv_attributes:\n        node:\n            shape: rect\n            color: green\n        edge:\n            arrowhead: open\n        graph:\n            ranksep: 1\n        main_relation:\n            penwidth: 2\n```\n\n`directed`\n:   Specifies graph to be directed or not. Default: `false`\n\n`filename`\n:   Graph output filename. Default: `project_graph.png`\n\n`gv_attributes`\n:   A dictionary with global attributes of the graph. Each dictionary should be stored under the Graphviz Entity key (`node`, `edge`, or `graph`), or under type key. All sections or relations which have this type will get these attributes.\n\nIf you want to adjust the look of just one node, add a `gv_attributes` option into the meta of the document:\n\n```yaml\n---\nid: index\nrelates:\n    - glossary\ngv_attributes:\n    color: green\n    shape: circle\n---\n```\n\nYou can also change the look of the edges, which connect nodes. To do this you can use a detailed syntax of relations.\n\n## Relations detailed syntax\n\nAs stated in the beginning, to specify relations you need to add a `relates` param and include a list of related documents IDs\\\\file paths:\n\n```yaml\n---\nrelates:\n    - doc1.md\n    - MAIN_SPEC\n---\n```\n\nBut there's also a detailed syntax for specifying relations, it looks like this:\n\n```yaml\n---\nrelates:\n    - rel_path: doc1.md\n      type: details\n    - rel_id: MAIN_SPEC\n      gv_attributes:\n        color: #CCCCCC\n        arrowhead: none\n---\n```\n\nIn the detailed syntax each relation is not a string, but a mapping. This time you have to explicitly use either `rel_path` key, if you are pointing to a document by path, or `rel_id` if you do it by ID.\n\nAlso you can specify relation type by adding a `type` key. Right now the value of this key just goes to the edge label, but soon you'll be able to change the appearance of all edges with one type.\n\nFinally you can override this specific edge's appearance by adjusting Graphviz attributes in the `gv_attributes` key.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/foliant-docs/foliantcontrib.project_graph", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "foliantcontrib.project-graph", "package_url": "https://pypi.org/project/foliantcontrib.project-graph/", "platform": "any", "project_url": "https://pypi.org/project/foliantcontrib.project-graph/", "project_urls": {"Homepage": "https://github.com/foliant-docs/foliantcontrib.project_graph"}, "release_url": "https://pypi.org/project/foliantcontrib.project-graph/1.0.1/", "requires_dist": ["foliant (>=1.0.4)", "pygraphviz", "foliantcontrib.meta"], "requires_python": "", "summary": "Foliant Meta Command which draws a scheme of project sections.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd6687af32c78421c10cbb77b43a547464a0db31/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f666f6c69616e74636f6e747269622e70726f6a6563745f67726170682e737667\"></p>\n<h1>ProjectGraph</h1>\n<p>Foliant Meta Command which draws a scheme of project sections. This extension uses meta-information, collected by folinatcontrib.meta extension.</p>\n<p><a href=\"http://graphviz.org\" rel=\"nofollow\">Graphviz</a> is used to build a scheme.</p>\n<p><code>libgraphviz-dev</code> is required to be installed on your machine.</p>\n<h2>Installation</h2>\n<pre>$ pip install foliantcontrib.project_graph\n</pre>\n<h2>Usage</h2>\n<p>First you need to specify all relations between the documents in your project. To do this add the <code>relates</code> section to your document's meta-data:</p>\n<pre><span class=\"nn\">---</span>\n<span class=\"nt\">relates</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">tests/test1.md</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">specs/spec.md</span>\n<span class=\"nn\">---</span>\n</pre>\n<p>in <code>relates</code> section you need to specify a list of documents to which current document relates. You can specify either a relative path to connected document or its ID (if the corresponding document has an ID assigned in its meta section):</p>\n<pre><span class=\"c1\"># index.md</span>\n<span class=\"nn\">---</span>\n<span class=\"nt\">id</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">index</span>\n<span class=\"nn\">---</span>\n</pre>\n<pre><span class=\"c1\"># glossary.md</span>\n<span class=\"nn\">---</span>\n<span class=\"nt\">relates</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">index</span>\n<span class=\"nn\">---</span>\n</pre>\n<p>After you specified all relations, run the draw command:</p>\n<pre>$ foliant draw\n</pre>\n<p>Scheme will appear in the file <code>project_graph.png</code></p>\n<h2>Config</h2>\n<p>ProjectGraph has a number of options:</p>\n<pre><span class=\"nt\">project_graph</span><span class=\"p\">:</span>\n    <span class=\"nt\">directed</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">false</span>\n    <span class=\"nt\">filename</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">project_graph.png</span>\n    <span class=\"nt\">gv_attributes</span><span class=\"p\">:</span>\n        <span class=\"nt\">node</span><span class=\"p\">:</span>\n            <span class=\"nt\">shape</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">rect</span>\n            <span class=\"nt\">color</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">green</span>\n        <span class=\"nt\">edge</span><span class=\"p\">:</span>\n            <span class=\"nt\">arrowhead</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">open</span>\n        <span class=\"nt\">graph</span><span class=\"p\">:</span>\n            <span class=\"nt\">ranksep</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">1</span>\n        <span class=\"nt\">main_relation</span><span class=\"p\">:</span>\n            <span class=\"nt\">penwidth</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">2</span>\n</pre>\n<p><code>directed</code>\n:   Specifies graph to be directed or not. Default: <code>false</code></p>\n<p><code>filename</code>\n:   Graph output filename. Default: <code>project_graph.png</code></p>\n<p><code>gv_attributes</code>\n:   A dictionary with global attributes of the graph. Each dictionary should be stored under the Graphviz Entity key (<code>node</code>, <code>edge</code>, or <code>graph</code>), or under type key. All sections or relations which have this type will get these attributes.</p>\n<p>If you want to adjust the look of just one node, add a <code>gv_attributes</code> option into the meta of the document:</p>\n<pre><span class=\"nn\">---</span>\n<span class=\"nt\">id</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">index</span>\n<span class=\"nt\">relates</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">glossary</span>\n<span class=\"nt\">gv_attributes</span><span class=\"p\">:</span>\n    <span class=\"nt\">color</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">green</span>\n    <span class=\"nt\">shape</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">circle</span>\n<span class=\"nn\">---</span>\n</pre>\n<p>You can also change the look of the edges, which connect nodes. To do this you can use a detailed syntax of relations.</p>\n<h2>Relations detailed syntax</h2>\n<p>As stated in the beginning, to specify relations you need to add a <code>relates</code> param and include a list of related documents IDs\\file paths:</p>\n<pre><span class=\"nn\">---</span>\n<span class=\"nt\">relates</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">doc1.md</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">MAIN_SPEC</span>\n<span class=\"nn\">---</span>\n</pre>\n<p>But there's also a detailed syntax for specifying relations, it looks like this:</p>\n<pre><span class=\"nn\">---</span>\n<span class=\"nt\">relates</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"nt\">rel_path</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">doc1.md</span>\n      <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">details</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"nt\">rel_id</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">MAIN_SPEC</span>\n      <span class=\"nt\">gv_attributes</span><span class=\"p\">:</span>\n        <span class=\"nt\">color</span><span class=\"p\">:</span> <span class=\"c1\">#CCCCCC</span>\n        <span class=\"nt\">arrowhead</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">none</span>\n<span class=\"nn\">---</span>\n</pre>\n<p>In the detailed syntax each relation is not a string, but a mapping. This time you have to explicitly use either <code>rel_path</code> key, if you are pointing to a document by path, or <code>rel_id</code> if you do it by ID.</p>\n<p>Also you can specify relation type by adding a <code>type</code> key. Right now the value of this key just goes to the edge label, but soon you'll be able to change the appearance of all edges with one type.</p>\n<p>Finally you can override this specific edge's appearance by adjusting Graphviz attributes in the <code>gv_attributes</code> key.</p>\n\n          </div>"}, "last_serial": 5790250, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "c3e41d836562bd19e3b9300eafcfc363", "sha256": "cd262a58ecce70824e076e0551090303c3e4c882f7aaa8d0c4697db9f2006724"}, "downloads": -1, "filename": "foliantcontrib.project_graph-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c3e41d836562bd19e3b9300eafcfc363", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6859, "upload_time": "2019-06-28T14:45:37", "upload_time_iso_8601": "2019-06-28T14:45:37.560153Z", "url": "https://files.pythonhosted.org/packages/ad/68/4f8eb2f0f00b51387fea2dd6b2b1b2a878a22e4b3718430339199ccab8b8/foliantcontrib.project_graph-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "539396e2c55bc7229f909057a1e928f5", "sha256": "c1be5fe0a8fdcabdeba0052ae7268c94afd188ad6bbe8bc003f26bdc5b665c5b"}, "downloads": -1, "filename": "foliantcontrib.project_graph-1.0.0.tar.gz", "has_sig": false, "md5_digest": "539396e2c55bc7229f909057a1e928f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5496, "upload_time": "2019-06-28T14:45:39", "upload_time_iso_8601": "2019-06-28T14:45:39.693580Z", "url": "https://files.pythonhosted.org/packages/8e/3b/31e0fbea1e7d280fb7ff70dff8eca567ca566647140f4fd385358ba6ecd0/foliantcontrib.project_graph-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "3b76969b6bec731da7967a51cf32e53e", "sha256": "89cf6cadf9f9d2ac69e3db0ff61adae53b3bd489005919cc14082969a45281e3"}, "downloads": -1, "filename": "foliantcontrib.project_graph-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3b76969b6bec731da7967a51cf32e53e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6856, "upload_time": "2019-07-01T15:55:56", "upload_time_iso_8601": "2019-07-01T15:55:56.977590Z", "url": "https://files.pythonhosted.org/packages/13/ae/03f8a29c2512ed4e24ab50f70636e15f67fa36fb38fdd092a7344ea06fb0/foliantcontrib.project_graph-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "05949c38639e615e1f0953802e00afd1", "sha256": "c7892ab8df5216a4410941493150181510ff9514e76c89b00ce8c9deecf78ef5"}, "downloads": -1, "filename": "foliantcontrib.project_graph-1.0.1.tar.gz", "has_sig": false, "md5_digest": "05949c38639e615e1f0953802e00afd1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5492, "upload_time": "2019-07-01T15:55:58", "upload_time_iso_8601": "2019-07-01T15:55:58.304329Z", "url": "https://files.pythonhosted.org/packages/3f/31/5083cd37dde376f296dfb2ef58aa17ad4c908994a5d2504f19108db01450/foliantcontrib.project_graph-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3b76969b6bec731da7967a51cf32e53e", "sha256": "89cf6cadf9f9d2ac69e3db0ff61adae53b3bd489005919cc14082969a45281e3"}, "downloads": -1, "filename": "foliantcontrib.project_graph-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3b76969b6bec731da7967a51cf32e53e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6856, "upload_time": "2019-07-01T15:55:56", "upload_time_iso_8601": "2019-07-01T15:55:56.977590Z", "url": "https://files.pythonhosted.org/packages/13/ae/03f8a29c2512ed4e24ab50f70636e15f67fa36fb38fdd092a7344ea06fb0/foliantcontrib.project_graph-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "05949c38639e615e1f0953802e00afd1", "sha256": "c7892ab8df5216a4410941493150181510ff9514e76c89b00ce8c9deecf78ef5"}, "downloads": -1, "filename": "foliantcontrib.project_graph-1.0.1.tar.gz", "has_sig": false, "md5_digest": "05949c38639e615e1f0953802e00afd1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5492, "upload_time": "2019-07-01T15:55:58", "upload_time_iso_8601": "2019-07-01T15:55:58.304329Z", "url": "https://files.pythonhosted.org/packages/3f/31/5083cd37dde376f296dfb2ef58aa17ad4c908994a5d2504f19108db01450/foliantcontrib.project_graph-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:01:08 2020"}