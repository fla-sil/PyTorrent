{"info": {"author": "zktuong", "author_email": "kt16@sanger.ac.uk", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7"], "description": "# kelvinnypy\nIt is pronounced 'kelvinny-pee'\n\n## Intro\nHi there! I've put together the following python script/package for some work stuff!\n\n## Requirements\npython 3.7\n\n## Installation instructions\n```bash\n# using pip\npip install kelvinnypy\n\n# or using conda\nconda install -c kt16 kelvinnypy\n```\n\n## Main function (well, only function)\n### h5totxt\nTogether with another R function in zktuong/kelvinny (kelvinny::mtx_to_h5, or in a combined wrapper - kelvinny::mtx_to_h5totxt), this python script helps to parse large matrices in R to .h5 to .txt format. This packages are extremely light weight and should be relatively quick and easy to install and use. Have fun!\n\n## Usage\nI've created this as an executable that you can use directly via the terminal/console\n```bash\n# bash\nh5totxt counts.h5\n\n# for help,\nh5totxt -h\n```\n\nYou can also download the file called h5convert.py and call it in terminal via python\n```bash\n# bash\npython ./path/to/kelvinnypy.py counts.h5\n```\n\nOr use in R via reticulate\n```R\n# R\nreticulate::repl_python()\n```\n```python\n# python\nimport kelvinnypy as kp\nkp.h5totxt(\"counts.h5\")\n# or\nkp.h5totxt(\"counts.h5\", \"new_counts.txt\")\n```\nor\n```R\n# R\nlibrary(reticulate)\nkp <- import(\"kelvinnypy\")\nkp$h5totxt(\"counts.h5\")\n```\n\nor even as a complete workflow with the the R function\n```R\n# devtools::install_github('zktuong/kelvinny', dependencies = TRUE)\nmat <- matrix(rexp(2e8, rate=.1), ncol=20000, dimnames = list(paste0(\"gene\", 1:10000), paste0(\"cell\", 1:20000)))\ndim(mat)\n# [1] 10000 20000\n\n# try this!\nmtx_to_h5totxt(mat, \"mat\")\n\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zktuong/kelvinnnpy/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "kelvinnypy", "package_url": "https://pypi.org/project/kelvinnypy/", "platform": "", "project_url": "https://pypi.org/project/kelvinnypy/", "project_urls": {"Homepage": "https://github.com/zktuong/kelvinnnpy/"}, "release_url": "https://pypi.org/project/kelvinnypy/1.0.16/", "requires_dist": ["numpy (>=1.17.2)", "h5py (>=2.10.0)"], "requires_python": "", "summary": "A python script to convert large matrices stored as .h5 to .txt", "version": "1.0.16", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>kelvinnypy</h1>\n<p>It is pronounced 'kelvinny-pee'</p>\n<h2>Intro</h2>\n<p>Hi there! I've put together the following python script/package for some work stuff!</p>\n<h2>Requirements</h2>\n<p>python 3.7</p>\n<h2>Installation instructions</h2>\n<pre><span class=\"c1\"># using pip</span>\npip install kelvinnypy\n\n<span class=\"c1\"># or using conda</span>\nconda install -c kt16 kelvinnypy\n</pre>\n<h2>Main function (well, only function)</h2>\n<h3>h5totxt</h3>\n<p>Together with another R function in zktuong/kelvinny (kelvinny::mtx_to_h5, or in a combined wrapper - kelvinny::mtx_to_h5totxt), this python script helps to parse large matrices in R to .h5 to .txt format. This packages are extremely light weight and should be relatively quick and easy to install and use. Have fun!</p>\n<h2>Usage</h2>\n<p>I've created this as an executable that you can use directly via the terminal/console</p>\n<pre><span class=\"c1\"># bash</span>\nh5totxt counts.h5\n\n<span class=\"c1\"># for help,</span>\nh5totxt -h\n</pre>\n<p>You can also download the file called h5convert.py and call it in terminal via python</p>\n<pre><span class=\"c1\"># bash</span>\npython ./path/to/kelvinnypy.py counts.h5\n</pre>\n<p>Or use in R via reticulate</p>\n<pre><span class=\"c1\"># R</span>\n<span class=\"n\">reticulate</span><span class=\"o\">::</span><span class=\"nf\">repl_python</span><span class=\"p\">()</span>\n</pre>\n<pre><span class=\"c1\"># python</span>\n<span class=\"kn\">import</span> <span class=\"nn\">kelvinnypy</span> <span class=\"k\">as</span> <span class=\"nn\">kp</span>\n<span class=\"n\">kp</span><span class=\"o\">.</span><span class=\"n\">h5totxt</span><span class=\"p\">(</span><span class=\"s2\">\"counts.h5\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># or</span>\n<span class=\"n\">kp</span><span class=\"o\">.</span><span class=\"n\">h5totxt</span><span class=\"p\">(</span><span class=\"s2\">\"counts.h5\"</span><span class=\"p\">,</span> <span class=\"s2\">\"new_counts.txt\"</span><span class=\"p\">)</span>\n</pre>\n<p>or</p>\n<pre><span class=\"c1\"># R</span>\n<span class=\"nf\">library</span><span class=\"p\">(</span><span class=\"n\">reticulate</span><span class=\"p\">)</span>\n<span class=\"n\">kp</span> <span class=\"o\">&lt;-</span> <span class=\"nf\">import</span><span class=\"p\">(</span><span class=\"s\">\"kelvinnypy\"</span><span class=\"p\">)</span>\n<span class=\"n\">kp</span><span class=\"o\">$</span><span class=\"nf\">h5totxt</span><span class=\"p\">(</span><span class=\"s\">\"counts.h5\"</span><span class=\"p\">)</span>\n</pre>\n<p>or even as a complete workflow with the the R function</p>\n<pre><span class=\"c1\"># devtools::install_github('zktuong/kelvinny', dependencies = TRUE)</span>\n<span class=\"n\">mat</span> <span class=\"o\">&lt;-</span> <span class=\"nf\">matrix</span><span class=\"p\">(</span><span class=\"nf\">rexp</span><span class=\"p\">(</span><span class=\"m\">2e8</span><span class=\"p\">,</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"n\">.</span><span class=\"m\">1</span><span class=\"p\">),</span> <span class=\"n\">ncol</span><span class=\"o\">=</span><span class=\"m\">20000</span><span class=\"p\">,</span> <span class=\"n\">dimnames</span> <span class=\"o\">=</span> <span class=\"nf\">list</span><span class=\"p\">(</span><span class=\"nf\">paste0</span><span class=\"p\">(</span><span class=\"s\">\"gene\"</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"o\">:</span><span class=\"m\">10000</span><span class=\"p\">),</span> <span class=\"nf\">paste0</span><span class=\"p\">(</span><span class=\"s\">\"cell\"</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"o\">:</span><span class=\"m\">20000</span><span class=\"p\">)))</span>\n<span class=\"nf\">dim</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">)</span>\n<span class=\"c1\"># [1] 10000 20000</span>\n\n<span class=\"c1\"># try this!</span>\n<span class=\"nf\">mtx_to_h5totxt</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">,</span> <span class=\"s\">\"mat\"</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5893518, "releases": {"1.0.16": [{"comment_text": "", "digests": {"md5": "b0989d4c624a2e0b1e85c1e1515bdc44", "sha256": "4441194fd949c3054ef6ffd669c2fa6d34995de9587a78935702af87957ad658"}, "downloads": -1, "filename": "kelvinnypy-1.0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "b0989d4c624a2e0b1e85c1e1515bdc44", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5055, "upload_time": "2019-09-27T00:54:46", "upload_time_iso_8601": "2019-09-27T00:54:46.845666Z", "url": "https://files.pythonhosted.org/packages/b3/ec/0e4a523a1345814461fd288ccd95d6b22b3eff80acaef0492bdff1c62add/kelvinnypy-1.0.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf30f419acf12fd8cf2549a88dfcff62", "sha256": "3f2023dc778b7487e6ef7cf59e392d9ac1467d41ce480f00f6a9602380850d4b"}, "downloads": -1, "filename": "kelvinnypy-1.0.16.tar.gz", "has_sig": false, "md5_digest": "cf30f419acf12fd8cf2549a88dfcff62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2684, "upload_time": "2019-09-27T00:54:48", "upload_time_iso_8601": "2019-09-27T00:54:48.181479Z", "url": "https://files.pythonhosted.org/packages/6b/3f/b0506b734d46aac75b23edaf5e42fdfb205ed40a6e72493c2d16cd77ce2c/kelvinnypy-1.0.16.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b0989d4c624a2e0b1e85c1e1515bdc44", "sha256": "4441194fd949c3054ef6ffd669c2fa6d34995de9587a78935702af87957ad658"}, "downloads": -1, "filename": "kelvinnypy-1.0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "b0989d4c624a2e0b1e85c1e1515bdc44", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5055, "upload_time": "2019-09-27T00:54:46", "upload_time_iso_8601": "2019-09-27T00:54:46.845666Z", "url": "https://files.pythonhosted.org/packages/b3/ec/0e4a523a1345814461fd288ccd95d6b22b3eff80acaef0492bdff1c62add/kelvinnypy-1.0.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf30f419acf12fd8cf2549a88dfcff62", "sha256": "3f2023dc778b7487e6ef7cf59e392d9ac1467d41ce480f00f6a9602380850d4b"}, "downloads": -1, "filename": "kelvinnypy-1.0.16.tar.gz", "has_sig": false, "md5_digest": "cf30f419acf12fd8cf2549a88dfcff62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2684, "upload_time": "2019-09-27T00:54:48", "upload_time_iso_8601": "2019-09-27T00:54:48.181479Z", "url": "https://files.pythonhosted.org/packages/6b/3f/b0506b734d46aac75b23edaf5e42fdfb205ed40a6e72493c2d16cd77ce2c/kelvinnypy-1.0.16.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:17 2020"}