{"info": {"author": "David Bennett", "author_email": "david@db-init.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "================\nDjango-CherryDev\n================\n\n\nDescription\n===========\n\nThis utility is a substitute for Django's ``runserver`` command. It was\ninspired by Gunicorn_'s ``gunicorn_django`` command which makes it so easy\nto serve Django projects without having to create extra WSGI scripts.\n\n.. _Gunicorn: http://www.gunicorn.org/\n\nI chose to use CherryPy as it is pure Python (thus cross-platform) and quite\nefficient in its own right. It also had the functionality I desired to be able\nto serve static media without fuss while developing Django applications.\n\n**To be clear, this utility will automatically serve your static media (as well\nas admin media) without needing to modify your settings.py or maintain a\ndevelopment version of your settings.**\n\nTo do this, it modifies your settings.MEDIA_URL and settings.ADMIN_MEDIA_PREFIX\non the fly before loading Django, which is also the reason that it is not\nprovided as a custom management command.\n\n\nRequirements and Installation\n=============================\n\nIn its present incarnation, this utility requires Python 2.7 and CherryPy 3.1\nor above. Also, it is assumed you have Django installed.\n\nInstallation is as simple as ``pip install django-cherrydev``. This will\nalso install CherryPy if it isn't already available.\n\nSource\n------\nYou can install the latest development version from the `hg repository`_ with\n``pip install -e hg+http://code.db-init.com/django-cherrydev`` or from a\ntarball_ with ``pip install django-cherrydev==dev``.\n\n.. _hg repository: http://code.db-init.com/django-cherrydev/\n.. _tarball:\n    http://code.db-init.com/django-cherrydev/get/tip.gz#egg=django-cherrydev-dev\n\n\nUsage\n=====\n\nDjango-CherryDev provides a single script, ``cherrydev``, which uses CherryPy\nto serve your Django project and media files. To use it, simply CD into your\nDjango project directory and run ``cherrydev``::\n\n    $ cd myproject\n    $ cherrydev\n\nArguments\n---------\nusage: cherrydev [-h] [--noreload] [-b ADDRESS] [--nomedia] [-m MEDIA_ADDR]\n                 [--noadmin] [-a ADMIN_ADDR] [-l LINK_DIR]\n                 [SETTINGS_PATH]\n\npositional arguments:\n  SETTINGS_PATH         By default SETTINGS_PATH will look for settings.py in\n                        the current directory.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --noreload            Tells CherryPy to NOT use the auto-reloader.\n  -b ADDRESS, --bind ADDRESS\n                        The socket to bind. A string of the form: 'HOST',\n                        'HOST:PORT'. An IP is a valid HOST. (default:\n                        '127.0.0.1:8000')\n\nMedia:\n  By default, CherryPy will be used to serve your media. If your MEDIA_URL\n  includes a host component, it will be changed to an alternate port on\n  localhost. If your ADMIN_MEDIA_PREFIX includes a host component that does\n  not match that of MEDIA_URL, it will also be changed to its own alternate\n  port.\n\n  --nomedia             Tells CherryPy to NOT host media.\n  -m MEDIA_ADDR, --media MEDIA_ADDR\n                        The socket to bind media. A string of the form:\n                        'HOST', 'HOST:PORT'. An IP is a valid HOST. (default:\n                        '127.0.0.1:8001')\n  --noadmin             Tells CherryPy to NOT host admin media.\n  -a ADMIN_ADDR, --admin ADMIN_ADDR\n                        The socket to bind admin. A string of the form:\n                        'HOST', 'HOST:PORT'. An IP is a valid HOST. (default:\n                        '127.0.0.1:8002')\n  -l LINK_DIR, --link LINK_DIR\n                        An additional directory to be linked to MEDIA_URL. May\n                        be used multiple times. A string of the form:\n                        'PATH=DIRECTORY'. (e.g. 'app=../myapp/media')", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://code.db-init.com/django-cherrydev/", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-cherrydev", "package_url": "https://pypi.org/project/django-cherrydev/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-cherrydev/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://code.db-init.com/django-cherrydev/"}, "release_url": "https://pypi.org/project/django-cherrydev/0.1/", "requires_dist": null, "requires_python": null, "summary": "CherryPy Web server for Django development.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"description\">\n<h2>Description</h2>\n<p>This utility is a substitute for Django\u2019s <tt>runserver</tt> command. It was\ninspired by <a href=\"http://www.gunicorn.org/\" rel=\"nofollow\">Gunicorn</a>\u2019s <tt>gunicorn_django</tt> command which makes it so easy\nto serve Django projects without having to create extra WSGI scripts.</p>\n<p>I chose to use CherryPy as it is pure Python (thus cross-platform) and quite\nefficient in its own right. It also had the functionality I desired to be able\nto serve static media without fuss while developing Django applications.</p>\n<p><strong>To be clear, this utility will automatically serve your static media (as well\nas admin media) without needing to modify your settings.py or maintain a\ndevelopment version of your settings.</strong></p>\n<p>To do this, it modifies your settings.MEDIA_URL and settings.ADMIN_MEDIA_PREFIX\non the fly before loading Django, which is also the reason that it is not\nprovided as a custom management command.</p>\n</div>\n<div id=\"requirements-and-installation\">\n<h2>Requirements and Installation</h2>\n<p>In its present incarnation, this utility requires Python 2.7 and CherryPy 3.1\nor above. Also, it is assumed you have Django installed.</p>\n<p>Installation is as simple as <tt>pip install <span class=\"pre\">django-cherrydev</span></tt>. This will\nalso install CherryPy if it isn\u2019t already available.</p>\n<div id=\"source\">\n<h3>Source</h3>\n<p>You can install the latest development version from the <a href=\"http://code.db-init.com/django-cherrydev/\" rel=\"nofollow\">hg repository</a> with\n<tt>pip install <span class=\"pre\">-e</span> <span class=\"pre\">hg+http://code.db-init.com/django-cherrydev</span></tt> or from a\n<a href=\"http://code.db-init.com/django-cherrydev/get/tip.gz#egg=django-cherrydev-dev\" rel=\"nofollow\">tarball</a> with <tt>pip install <span class=\"pre\">django-cherrydev==dev</span></tt>.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Django-CherryDev provides a single script, <tt>cherrydev</tt>, which uses CherryPy\nto serve your Django project and media files. To use it, simply CD into your\nDjango project directory and run <tt>cherrydev</tt>:</p>\n<pre>$ cd myproject\n$ cherrydev\n</pre>\n<div id=\"arguments\">\n<h3>Arguments</h3>\n<dl>\n<dt>usage: cherrydev [-h] [\u2013noreload] [-b ADDRESS] [\u2013nomedia] [-m MEDIA_ADDR]</dt>\n<dd>[\u2013noadmin] [-a ADMIN_ADDR] [-l LINK_DIR]\n[SETTINGS_PATH]</dd>\n<dt>positional arguments:</dt>\n<dd><dl>\n<dt>SETTINGS_PATH         By default SETTINGS_PATH will look for settings.py in</dt>\n<dd>the current directory.</dd>\n</dl>\n</dd>\n<dt>optional arguments:</dt>\n<dd><table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">-h</span>, <span class=\"option\">--help</span></kbd></td>\n<td>show this help message and exit</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--noreload</span></kbd></td>\n<td>Tells CherryPy to NOT use the auto-reloader.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-b <var>ADDRESS</var></span>, <span class=\"option\">--bind <var>ADDRESS</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The socket to bind. A string of the form: \u2018HOST\u2019,\n\u2018HOST:PORT\u2019. An IP is a valid HOST. (default:\n\u2018127.0.0.1:8000\u2019)</td></tr>\n</tbody>\n</table>\n</dd>\n<dt>Media:</dt>\n<dd><p>By default, CherryPy will be used to serve your media. If your MEDIA_URL\nincludes a host component, it will be changed to an alternate port on\nlocalhost. If your ADMIN_MEDIA_PREFIX includes a host component that does\nnot match that of MEDIA_URL, it will also be changed to its own alternate\nport.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">--nomedia</span></kbd></td>\n<td>Tells CherryPy to NOT host media.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-m <var>MEDIA_ADDR</var></span>, <span class=\"option\">--media <var>MEDIA_ADDR</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The socket to bind media. A string of the form:\n\u2018HOST\u2019, \u2018HOST:PORT\u2019. An IP is a valid HOST. (default:\n\u2018127.0.0.1:8001\u2019)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--noadmin</span></kbd></td>\n<td>Tells CherryPy to NOT host admin media.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-a <var>ADMIN_ADDR</var></span>, <span class=\"option\">--admin <var>ADMIN_ADDR</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The socket to bind admin. A string of the form:\n\u2018HOST\u2019, \u2018HOST:PORT\u2019. An IP is a valid HOST. (default:\n\u2018127.0.0.1:8002\u2019)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-l <var>LINK_DIR</var></span>, <span class=\"option\">--link <var>LINK_DIR</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>An additional directory to be linked to MEDIA_URL. May\nbe used multiple times. A string of the form:\n\u2018PATH=DIRECTORY\u2019. (e.g. \u2018app=../myapp/media\u2019)</td></tr>\n</tbody>\n</table>\n</dd>\n</dl>\n</div>\n</div>\n\n          </div>"}, "last_serial": 802900, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "6bca8da4138097100c2a5a8bfd7d79c2", "sha256": "f53c1871c7f713a4bff3c66927eaaacc10e4ad416e13e96c55c832553b0a3bdc"}, "downloads": -1, "filename": "django-cherrydev-0.1.zip", "has_sig": false, "md5_digest": "6bca8da4138097100c2a5a8bfd7d79c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11175, "upload_time": "2010-10-20T07:03:26", "upload_time_iso_8601": "2010-10-20T07:03:26.491972Z", "url": "https://files.pythonhosted.org/packages/e8/65/ee6b6128c6583739badb07c59cd35b53f90fc2bb8af285ab78944ba3f924/django-cherrydev-0.1.zip", "yanked": false}], "0.1b": [{"comment_text": "", "digests": {"md5": "d979651e6686ed082728ee8d57d886e7", "sha256": "76081a6df467680e76a9844d8839d6af1393238fa91a4b5ee6ddbdcb81d631ee"}, "downloads": -1, "filename": "django-cherrydev-0.1b.zip", "has_sig": false, "md5_digest": "d979651e6686ed082728ee8d57d886e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11032, "upload_time": "2010-10-20T20:07:32", "upload_time_iso_8601": "2010-10-20T20:07:32.885271Z", "url": "https://files.pythonhosted.org/packages/05/bc/cf9881b8c80591499ca65eacfff1d405b3c1ea3ac1d825b1fbff83d54ce8/django-cherrydev-0.1b.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6bca8da4138097100c2a5a8bfd7d79c2", "sha256": "f53c1871c7f713a4bff3c66927eaaacc10e4ad416e13e96c55c832553b0a3bdc"}, "downloads": -1, "filename": "django-cherrydev-0.1.zip", "has_sig": false, "md5_digest": "6bca8da4138097100c2a5a8bfd7d79c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11175, "upload_time": "2010-10-20T07:03:26", "upload_time_iso_8601": "2010-10-20T07:03:26.491972Z", "url": "https://files.pythonhosted.org/packages/e8/65/ee6b6128c6583739badb07c59cd35b53f90fc2bb8af285ab78944ba3f924/django-cherrydev-0.1.zip", "yanked": false}], "timestamp": "Fri May  8 00:37:10 2020"}