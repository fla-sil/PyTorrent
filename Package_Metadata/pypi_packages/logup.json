{"info": {"author": "LogUp Inc.", "author_email": "it@logup.co", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Build Tools"], "description": "====================\nLogUp SDK for Python\n====================\n\nThe LogUp SDK for Python enables Python developers to easily integrate LogUp service in their projects.\n\nGetting Started\n---------------\n\nSign up for LogUp\n:::::::::::::::::\n\nBefore you begin, you need a LogUp account. Please see the `Getting started <https://docs.logup.co/getting_started.html>`_\nsection of the developer guide for information about how to create a LogUp account and create your first `gate\n<https://docs.logup.co/gate.html>`_.\n\nInstall the SDK\n:::::::::::::::\n\nInstall the SDK library using `pip <https://pypi.python.org/pypi/pip>`_\n\n.. code-block:: bash\n\n    pip install logup\n\nInitialize the LogUp Client Object\n::::::::::::::::::::::::::::::::::\n\n.. code-block:: python\n\n    id_gate = \"{your-id-gate}\"\n    gate_secret_key = \"{your-gate-secret-key}\"\n    # Create an instance of LogupClient using the default API Version\n    logup_client = LogupClient(\n        id_gate,\n        gate_secret_key\n    )\n\n    # Create an instance of LogupClient specifying the API version\n\n    api_version = \"v1_1\"\n    logup_client_1 = LogupClient(\n        id_gate,\n        gate_secret_key,\n        api_version\n    )\n\nNow you're ready to verify the token received. On the redirect page where the user is sent to after the LogUp, get from\nthe URL those parameters:\n\n- **logupToken** : the unique token to verify user identity\n\n- **isNewUser** : true if the user is new for your website, false if the user said he has already an account on your website. `More about this parameter <https://docs.logup.co/access.html#response-parameters>`_\n\nVerify user identity\n::::::::::::::::::::\n\nThis code is how you can verify that the **token received** is correct and see **who the user is**.\n\n.. code-block:: python\n\n    logup_token = \"{very-long-token-received-as-URL-query-parameter}\"\n    is_new_user = True or False\n\n    if logup_client.is_logup_verified(logup_token, is_new_user):\n        # user was successfully logged in!\n        # get the subscription object\n        subscription = logup_client.subscription\n    else:\n        print(\"Ops, the user did not log in\")\n\nSubscription\n------------\n\nWith the subscription object you can get more information about the actor who logged in, as well as access to its saved\nDB. A DB is a key-value store of parameters you can associated to your user. `Read mode about DB <https://docs.logup.co/subscription.html>`_.\n\nRead the values\n:::::::::::::::\n\nThis is how a Subscription object is made:\n\n.. code-block:: python\n\n    subscription.id_subscription # the id of the subscription\n    subscription.id_actor # the id of the actor that access the subscription\n    subscription.is_new_user # true if it is a new user, false otherwise\n\nFor difference explanation between id actor and id subscription `see our documentation <https://docs.logup.co/access.html#subscription-and-actor-difference>`_.\n\nGet subscription DB values\n::::::::::::::::::::::::::\n\nTo read DB values of that subscription.\n\n.. code-block:: python\n\n    db = subscription.db\n    print(\"idSubscription retrieved: \" + subscription.id_subscription)\n    print(\"With this DB associated: \")\n    print(db)\n\nAdd / Update DB values\n::::::::::::::::::::::\n\nAdd or update a DB value.\n\n.. code-block:: python\n\n    data = {\n        \"key-test\": \"\",\n        \"second-key-test\": 1,\n        \"third-key-test\": True\n    }\n    db = subscription.update_db(data)\n    print(\"Db values updated: \")\n    print(db)\n\nSome **limitations** may apply to the values you want to add to a DB: read them in our\n`documentation <https://docs.logup.co/subscription.html>`_.\nWhen you update or add values, you do not need to give all the previous values, but **just those you need to update / add**.\nThe db in response will have all the values currently stored in the DB.\n\n\nDelete DB values\n::::::::::::::::\n\n.. code-block:: python\n\n    keys = [\"third-key-test\"]\n    db = subscription.delete_db_value(keys)\n    print(\"New db values: \")\n    print(db)\n\nEnter an array with one or more strings representing the **keys you want to remove** from the DB. The **response** will have\nthe **current db** without the removed values.\n\nOperate on custom object\n::::::::::::::::::::::::\n\nIf you want to operate on a subscription that is not the one retrieved during login, you need to create a new\nSubscription object with **the subscription id you are looking for.** This is an example:\n\n.. code-block:: python\n\n    id_subscription = \"sub_XXXXXXXXXXX\"\n    subscription = logup_client.subscription_custom(id_subscription)\n    # on subscription now you can perform all the operation mentioned above\n\nRemember that if you create a custom new subscription, *you won't have the values of*\n\n- idActor\n- isNewUser\n\nSince they are related to the user trying to access your website, and not to a generic loaded subscription.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.logup.co", "keywords": "logup logup-sdk-python logup-python logup-sdk", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "logup", "package_url": "https://pypi.org/project/logup/", "platform": "", "project_url": "https://pypi.org/project/logup/", "project_urls": {"Homepage": "https://www.logup.co"}, "release_url": "https://pypi.org/project/logup/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "The LogUp SDK for Python", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The LogUp SDK for Python enables Python developers to easily integrate LogUp service in their projects.</p>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<div id=\"sign-up-for-logup\">\n<h3>Sign up for LogUp</h3>\n<p>Before you begin, you need a LogUp account. Please see the <a href=\"https://docs.logup.co/getting_started.html\" rel=\"nofollow\">Getting started</a>\nsection of the developer guide for information about how to create a LogUp account and create your first <a href=\"https://docs.logup.co/gate.html\" rel=\"nofollow\">gate</a>.</p>\n</div>\n<div id=\"install-the-sdk\">\n<h3>Install the SDK</h3>\n<p>Install the SDK library using <a href=\"https://pypi.python.org/pypi/pip\" rel=\"nofollow\">pip</a></p>\n<pre>pip install logup\n</pre>\n</div>\n<div id=\"initialize-the-logup-client-object\">\n<h3>Initialize the LogUp Client Object</h3>\n<pre><span class=\"n\">id_gate</span> <span class=\"o\">=</span> <span class=\"s2\">\"{your-id-gate}\"</span>\n<span class=\"n\">gate_secret_key</span> <span class=\"o\">=</span> <span class=\"s2\">\"{your-gate-secret-key}\"</span>\n<span class=\"c1\"># Create an instance of LogupClient using the default API Version</span>\n<span class=\"n\">logup_client</span> <span class=\"o\">=</span> <span class=\"n\">LogupClient</span><span class=\"p\">(</span>\n    <span class=\"n\">id_gate</span><span class=\"p\">,</span>\n    <span class=\"n\">gate_secret_key</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Create an instance of LogupClient specifying the API version</span>\n\n<span class=\"n\">api_version</span> <span class=\"o\">=</span> <span class=\"s2\">\"v1_1\"</span>\n<span class=\"n\">logup_client_1</span> <span class=\"o\">=</span> <span class=\"n\">LogupClient</span><span class=\"p\">(</span>\n    <span class=\"n\">id_gate</span><span class=\"p\">,</span>\n    <span class=\"n\">gate_secret_key</span><span class=\"p\">,</span>\n    <span class=\"n\">api_version</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Now you\u2019re ready to verify the token received. On the redirect page where the user is sent to after the LogUp, get from\nthe URL those parameters:</p>\n<ul>\n<li><strong>logupToken</strong> : the unique token to verify user identity</li>\n<li><strong>isNewUser</strong> : true if the user is new for your website, false if the user said he has already an account on your website. <a href=\"https://docs.logup.co/access.html#response-parameters\" rel=\"nofollow\">More about this parameter</a></li>\n</ul>\n</div>\n<div id=\"verify-user-identity\">\n<h3>Verify user identity</h3>\n<p>This code is how you can verify that the <strong>token received</strong> is correct and see <strong>who the user is</strong>.</p>\n<pre><span class=\"n\">logup_token</span> <span class=\"o\">=</span> <span class=\"s2\">\"{very-long-token-received-as-URL-query-parameter}\"</span>\n<span class=\"n\">is_new_user</span> <span class=\"o\">=</span> <span class=\"kc\">True</span> <span class=\"ow\">or</span> <span class=\"kc\">False</span>\n\n<span class=\"k\">if</span> <span class=\"n\">logup_client</span><span class=\"o\">.</span><span class=\"n\">is_logup_verified</span><span class=\"p\">(</span><span class=\"n\">logup_token</span><span class=\"p\">,</span> <span class=\"n\">is_new_user</span><span class=\"p\">):</span>\n    <span class=\"c1\"># user was successfully logged in!</span>\n    <span class=\"c1\"># get the subscription object</span>\n    <span class=\"n\">subscription</span> <span class=\"o\">=</span> <span class=\"n\">logup_client</span><span class=\"o\">.</span><span class=\"n\">subscription</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Ops, the user did not log in\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"subscription\">\n<h2>Subscription</h2>\n<p>With the subscription object you can get more information about the actor who logged in, as well as access to its saved\nDB. A DB is a key-value store of parameters you can associated to your user. <a href=\"https://docs.logup.co/subscription.html\" rel=\"nofollow\">Read mode about DB</a>.</p>\n<div id=\"read-the-values\">\n<h3>Read the values</h3>\n<p>This is how a Subscription object is made:</p>\n<pre><span class=\"n\">subscription</span><span class=\"o\">.</span><span class=\"n\">id_subscription</span> <span class=\"c1\"># the id of the subscription</span>\n<span class=\"n\">subscription</span><span class=\"o\">.</span><span class=\"n\">id_actor</span> <span class=\"c1\"># the id of the actor that access the subscription</span>\n<span class=\"n\">subscription</span><span class=\"o\">.</span><span class=\"n\">is_new_user</span> <span class=\"c1\"># true if it is a new user, false otherwise</span>\n</pre>\n<p>For difference explanation between id actor and id subscription <a href=\"https://docs.logup.co/access.html#subscription-and-actor-difference\" rel=\"nofollow\">see our documentation</a>.</p>\n</div>\n<div id=\"get-subscription-db-values\">\n<h3>Get subscription DB values</h3>\n<p>To read DB values of that subscription.</p>\n<pre><span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">subscription</span><span class=\"o\">.</span><span class=\"n\">db</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"idSubscription retrieved: \"</span> <span class=\"o\">+</span> <span class=\"n\">subscription</span><span class=\"o\">.</span><span class=\"n\">id_subscription</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"With this DB associated: \"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"add-update-db-values\">\n<h3>Add / Update DB values</h3>\n<p>Add or update a DB value.</p>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"key-test\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"second-key-test\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"third-key-test\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span>\n<span class=\"p\">}</span>\n<span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">subscription</span><span class=\"o\">.</span><span class=\"n\">update_db</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Db values updated: \"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">)</span>\n</pre>\n<p>Some <strong>limitations</strong> may apply to the values you want to add to a DB: read them in our\n<a href=\"https://docs.logup.co/subscription.html\" rel=\"nofollow\">documentation</a>.\nWhen you update or add values, you do not need to give all the previous values, but <strong>just those you need to update / add</strong>.\nThe db in response will have all the values currently stored in the DB.</p>\n</div>\n<div id=\"delete-db-values\">\n<h3>Delete DB values</h3>\n<pre><span class=\"n\">keys</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"third-key-test\"</span><span class=\"p\">]</span>\n<span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">subscription</span><span class=\"o\">.</span><span class=\"n\">delete_db_value</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"New db values: \"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">)</span>\n</pre>\n<p>Enter an array with one or more strings representing the <strong>keys you want to remove</strong> from the DB. The <strong>response</strong> will have\nthe <strong>current db</strong> without the removed values.</p>\n</div>\n<div id=\"operate-on-custom-object\">\n<h3>Operate on custom object</h3>\n<p>If you want to operate on a subscription that is not the one retrieved during login, you need to create a new\nSubscription object with <strong>the subscription id you are looking for.</strong> This is an example:</p>\n<pre><span class=\"n\">id_subscription</span> <span class=\"o\">=</span> <span class=\"s2\">\"sub_XXXXXXXXXXX\"</span>\n<span class=\"n\">subscription</span> <span class=\"o\">=</span> <span class=\"n\">logup_client</span><span class=\"o\">.</span><span class=\"n\">subscription_custom</span><span class=\"p\">(</span><span class=\"n\">id_subscription</span><span class=\"p\">)</span>\n<span class=\"c1\"># on subscription now you can perform all the operation mentioned above</span>\n</pre>\n<p>Remember that if you create a custom new subscription, <em>you won\u2019t have the values of</em></p>\n<ul>\n<li>idActor</li>\n<li>isNewUser</li>\n</ul>\n<p>Since they are related to the user trying to access your website, and not to a generic loaded subscription.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3683535, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "2fbcc2ff453cfe54f56fb0126e701184", "sha256": "08be9888fe0254f84918ecd7b70183493b188790ba1639cb6bdaa4e792ee5158"}, "downloads": -1, "filename": "logup-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2fbcc2ff453cfe54f56fb0126e701184", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10663, "upload_time": "2018-03-05T14:21:42", "upload_time_iso_8601": "2018-03-05T14:21:42.748745Z", "url": "https://files.pythonhosted.org/packages/4f/cd/af45432d7484b8c385a11a464b41775825f46b718f843639ae3ed66f667b/logup-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf2e6a1dc61d4b4649738409ac002627", "sha256": "cb415af413aa3cd0615c52f316d3063cb0846edbd2db912a5472e1d0f88b8638"}, "downloads": -1, "filename": "logup-1.0.0.tar.gz", "has_sig": false, "md5_digest": "cf2e6a1dc61d4b4649738409ac002627", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10704, "upload_time": "2018-03-05T14:21:44", "upload_time_iso_8601": "2018-03-05T14:21:44.310638Z", "url": "https://files.pythonhosted.org/packages/61/40/9ac83ca453633e54b4be8f8f5e4119adac229ef50b4c3678bf7a9c0e7cf8/logup-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "6058b63149bb6ae0c387d77466865f04", "sha256": "27152676ffaebb4f6a80b1d5cbd97f961cb8f1425cbb854c8e961f8c0834ff4e"}, "downloads": -1, "filename": "logup-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6058b63149bb6ae0c387d77466865f04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10530, "upload_time": "2018-03-19T11:53:32", "upload_time_iso_8601": "2018-03-19T11:53:32.790369Z", "url": "https://files.pythonhosted.org/packages/71/1f/6959687964ba9d82dee89c378f1ae496336c64a4126940560e0aa2ded1b0/logup-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6058b63149bb6ae0c387d77466865f04", "sha256": "27152676ffaebb4f6a80b1d5cbd97f961cb8f1425cbb854c8e961f8c0834ff4e"}, "downloads": -1, "filename": "logup-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6058b63149bb6ae0c387d77466865f04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10530, "upload_time": "2018-03-19T11:53:32", "upload_time_iso_8601": "2018-03-19T11:53:32.790369Z", "url": "https://files.pythonhosted.org/packages/71/1f/6959687964ba9d82dee89c378f1ae496336c64a4126940560e0aa2ded1b0/logup-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:05 2020"}