{"info": {"author": "Ajeet Grewal", "author_email": "asgrewal@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "bottle_renderer\n===============\n\nThis plugin allows you to specify a renderer for per route. Here is an example\n\n::\n\n    from bottle import Bottle\n    from bottle_renderer import RendererPlugin\n\n    app = Bottle()\n    renderer = RendererPlugin(template_context = {'FB_APP_ID': 1234}) # This will be available in templates\n\n    # You can override the renderers by specifying your own.\n    # renderer.add_renderer('json', your_json_renderer)\n\n    app.install(renderer)\n    app.uninstall('json') # no autojson\n\n    # to use in a route, just specify the \"renderer\" attribute\n    @app.get('/main', name='main', renderer='main.jinja2')\n    def get_main():\n        # do something\n        return ret_value\n\n\nIn your templates (jinja2, mako, etc.)  you can access the following by default:\n\n:R: return value of the function\n:app:  The current app\n:request: The current request\n:response: The current response\n\nThe following renderers are available:\n\n::\n\n    @app.get(renderer='json', ..) # Renders return value as json\n    @app.get(renderer='string', ..) # Renders return value as text/plain\n    @app.get(renderer='<template_filename>.stpl', ..) # simple \n    @app.get(renderer='<template_filename>.mako', ..) \n    @app.get(renderer='<template_filename>.jinja2', ..) \n    @app.get(renderer='<template_filename>.cheetah', ..) \n    @app.get(renderer='<template_filename>.simpletal', ..)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/agreatjewel/bottle_plugins/tree/master/bottle_renderer", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "bottle-renderer", "package_url": "https://pypi.org/project/bottle-renderer/", "platform": "any", "project_url": "https://pypi.org/project/bottle-renderer/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/agreatjewel/bottle_plugins/tree/master/bottle_renderer"}, "release_url": "https://pypi.org/project/bottle-renderer/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Renderer plugin for bottle", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This plugin allows you to specify a renderer for per route. Here is an example</p>\n<pre>from bottle import Bottle\nfrom bottle_renderer import RendererPlugin\n\napp = Bottle()\nrenderer = RendererPlugin(template_context = {'FB_APP_ID': 1234}) # This will be available in templates\n\n# You can override the renderers by specifying your own.\n# renderer.add_renderer('json', your_json_renderer)\n\napp.install(renderer)\napp.uninstall('json') # no autojson\n\n# to use in a route, just specify the \"renderer\" attribute\n@app.get('/main', name='main', renderer='main.jinja2')\ndef get_main():\n    # do something\n    return ret_value\n</pre>\n<p>In your templates (jinja2, mako, etc.)  you can access the following by default:</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>R:</th><td>return value of the function</td>\n</tr>\n<tr><th>app:</th><td>The current app</td>\n</tr>\n<tr><th>request:</th><td>The current request</td>\n</tr>\n<tr><th>response:</th><td>The current response</td>\n</tr>\n</tbody>\n</table>\n<p>The following renderers are available:</p>\n<pre>@app.get(renderer='json', ..) # Renders return value as json\n@app.get(renderer='string', ..) # Renders return value as text/plain\n@app.get(renderer='&lt;template_filename&gt;.stpl', ..) # simple\n@app.get(renderer='&lt;template_filename&gt;.mako', ..)\n@app.get(renderer='&lt;template_filename&gt;.jinja2', ..)\n@app.get(renderer='&lt;template_filename&gt;.cheetah', ..)\n@app.get(renderer='&lt;template_filename&gt;.simpletal', ..)\n</pre>\n\n          </div>"}, "last_serial": 787003, "releases": {"0.1": [{"comment_text": "built for Darwin-10.7.0", "digests": {"md5": "1096b853df7c1906ebdbe264aabb4d4d", "sha256": "15f03a51cb571db9f6f98a8f2ac546db806595ed31d5e2e1ddd1cc845b8e6f29"}, "downloads": -1, "filename": "bottle-renderer-0.1.macosx-10.6-universal.tar.gz", "has_sig": false, "md5_digest": "1096b853df7c1906ebdbe264aabb4d4d", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 3302, "upload_time": "2011-09-16T07:44:44", "upload_time_iso_8601": "2011-09-16T07:44:44.179178Z", "url": "https://files.pythonhosted.org/packages/43/be/c20388b60eab4147c6d2cf29ceba1c8c1183a8394a5fb21b532a3a1fa7ae/bottle-renderer-0.1.macosx-10.6-universal.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7c8e061957ef27ec223a9007a5ef926", "sha256": "5bf2ad07719a07dbc0f2403260e254425b474625a1617e999392ce0639f3b87a"}, "downloads": -1, "filename": "bottle-renderer-0.1.tar.gz", "has_sig": false, "md5_digest": "f7c8e061957ef27ec223a9007a5ef926", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2095, "upload_time": "2011-09-16T07:45:13", "upload_time_iso_8601": "2011-09-16T07:45:13.505856Z", "url": "https://files.pythonhosted.org/packages/5c/b0/768e3826067a7ec0ef2583d9cecd1f647381d6feaaded4f22d55761a97a4/bottle-renderer-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d188c368d4b0544808cb7d625522ad15", "sha256": "fbe2809750f33e254169f7a55824a72e2c7bb367c1cb624ed9d56bc8ebc196cc"}, "downloads": -1, "filename": "bottle-renderer-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d188c368d4b0544808cb7d625522ad15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2290, "upload_time": "2012-10-09T05:17:35", "upload_time_iso_8601": "2012-10-09T05:17:35.235924Z", "url": "https://files.pythonhosted.org/packages/eb/9a/24e27f8eabc7c3837ec599edb242c341a2837dfbc17ff9f7a78dd95485aa/bottle-renderer-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d188c368d4b0544808cb7d625522ad15", "sha256": "fbe2809750f33e254169f7a55824a72e2c7bb367c1cb624ed9d56bc8ebc196cc"}, "downloads": -1, "filename": "bottle-renderer-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d188c368d4b0544808cb7d625522ad15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2290, "upload_time": "2012-10-09T05:17:35", "upload_time_iso_8601": "2012-10-09T05:17:35.235924Z", "url": "https://files.pythonhosted.org/packages/eb/9a/24e27f8eabc7c3837ec599edb242c341a2837dfbc17ff9f7a78dd95485aa/bottle-renderer-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:33 2020"}