{"info": {"author": "Ibon", "author_email": "ibonescartin@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Database", "Topic :: Software Development :: Testing", "Topic :: Software Development :: Testing :: Mocking", "Topic :: Utilities"], "description": "# dammy\n\n![GitHub top language](https://img.shields.io/github/languages/top/ibonn/dammy)\n[![Documentation Status](https://readthedocs.org/projects/dammy/badge/?version=latest)](https://dammy.readthedocs.io/en/latest/?badge=latest)\n![Travis (.org)](https://img.shields.io/travis/ibonn/dammy)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/c321b2ee18234712aff9ce2ca69ae6eb)](https://www.codacy.com/manual/ibonn/dammy?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=ibonn/dammy&amp;utm_campaign=Badge_Grade)\n[![Maintainability](https://api.codeclimate.com/v1/badges/141299ec4d7519f889d6/maintainability)](https://codeclimate.com/github/ibonn/dammy/maintainability)\n[![PyPI download month](https://img.shields.io/pypi/dm/dammy.svg)](https://pypi.python.org/pypi/dammy/)\n[![PyPI download week](https://img.shields.io/pypi/dw/dammy.svg)](https://pypi.python.org/pypi/dammy/)\n[![PyPI download day](https://img.shields.io/pypi/dd/dammy.svg)](https://pypi.python.org/pypi/dammy/)\n\nGenerate fake/dummy data for any purpose\n\n## Table of contents\n\n* [Introduction](#introduction)\n* [Features](#features)\n* [Example](#example)\n* [Installation](#installation)\n* [Release history](#release-history)\n\n## Introduction\n\ndammy is a powerful and simple tool to generate fake data. You can use it to mock classes, populate databases and and much more.\nYou can check the full documentation [here](https://dammy.readthedocs.io/en/latest/).\n\n## Features\n* Generate anything within the set of prebuilt objects (Person names, country names, car manufacturers and models, random dates...)\n* Compose more complex data easily (Full profiles, complete databases, )\n* The possibility to expand the previous set with little to no code\n* Completely intuitive, you will learn to use it in less than 10 minutes\n* Export the generated data to SQL\n\n## Example\n\nIf you wanted to generate 1000 random people, just define what a person looks like and dammy will handle the rest\n\n``` python\nfrom dammy import EntityGenerator\nfrom dammy.functions import cast\nfrom dammy.stdlib import RandomName, RandomString, RandomDateTime, RandomInteger, CountryName\n\nclass Person(EntityGenerator):\n    first_name = RandomName().upper()\n    password = RandomString(5)\n    birthday = RandomDateTime(start=datetime(1980, 1, 1), end=datetime(2000, 12, 31), date_format='%d/%m/%Y')\n    favorite_number = RandomInteger(0, 10)\n    age = cast((datetime.now() - birthday).days / 365.25, int)\n    country = CountryName()\n\n# Generate 1000 random people\nfor i in range(0, 1000):\n    print(Person())\n```\n\nWhich will output:\n```\n{'identifier': 1, 'uid': '9XCha', 'first_name': 'ZAYN', 'blood': 'A+', 'birthday': '24/01/1982', 'favorite_number': 5, 'age': 38, 'country': 'Denmark'}\n{'identifier': 2, 'uid': 'bbYbw', 'first_name': 'MALIHA', 'blood': 'AB+', 'birthday': '01/12/1981', 'favorite_number': 1, 'age': 38, 'country': 'Syrian Arab Republic'}\n{'identifier': 3, 'uid': 'aGF49', 'first_name': 'ANGEL', 'blood': 'AB+', 'birthday': '18/08/1992', 'favorite_number': 1, 'age': 27, 'country': 'Macedonia, the Former Yugoslav Republic of'}\n{'identifier': 4, 'uid': 'Lcr0J', 'first_name': 'REUBEN', 'blood': '0-', 'birthday': '07/11/1997', 'favorite_number': 4, 'age': 22, 'country': 'Dominican Republic'}\n{'identifier': 5, 'uid': 'P7mD4', 'first_name': 'MAMADOU', 'blood': 'A+', 'birthday': '02/01/1987', 'favorite_number': 7, 'age': 33, 'country': 'Palau'}\n{'identifier': 6, 'uid': 'ykdeL', 'first_name': 'BATSHEVA', 'blood': 'A+', 'birthday': '11/01/1983', 'favorite_number': 5, 'age': 37, 'country': 'Seychelles'}\n{'identifier': 7, 'uid': 'h9HjQ', 'first_name': 'JIMENA', 'blood': 'A-', 'birthday': '23/10/1985', 'favorite_number': 0, 'age': 34, 'country': 'China'}\n{'identifier': 8, 'uid': 'rjt92', 'first_name': 'YERIK', 'blood': 'AB+', 'birthday': '29/10/1991', 'favorite_number': 5, 'age': 28, 'country': 'Libya'}\n{'identifier': 9, 'uid': 'vL0DE', 'first_name': 'YISRAEL', 'blood': 'AB+', 'birthday': '25/03/1989', 'favorite_number': 8, 'age': 30, 'country': 'Spain'}\n{'identifier': 10, 'uid': 'CsrhX', 'first_name': 'JOSHUA', 'blood': 'AB+', 'birthday': '20/09/1999', 'favorite_number': 1, 'age': 20, 'country': 'Svalbard and Jan Mayen'}\n...\n```\n\nIt also supports relationships between tables, so you can generate data to populate databases\n``` python\nfrom dammy import EntityGenerator\nfrom dammy.db import AutoIncrement, PrimaryKey, ForeignKey\nfrom dammy.stdlib import RandomName, RandomString, RandomDateTime, RandomInteger, CountryName\n\n# Define what a person looks like\nclass Person(EntityGenerator):\n    id_pk = PrimaryKey(id=AutoIncrement())\n    first_name = RandomName().upper()\n    password = RandomString(5)\n    birthday = RandomDateTime(start=datetime(1980, 1, 1), end=datetime(2000, 12, 31), date_format='%d/%m/%Y')\n    favorite_number = RandomInteger(0, 10)\n    age = cast((datetime.now() - birthday).days / 365.25, int)\n    country = CountryName()\n\n# Define what a car looks like\nclass Car(EntityGenerator):\n    id_pk = PrimaryKey(id=AutoIncrement())\n    manufacturer_name = CarBrand()\n    model = CarModel(car_brand=manufacturer_name)\n    owner = ForeignKey(Person, 'identifier')\n```\n\nAnd the data can be exported to SQL\n``` python\nfrom dammy import DatasetGenerator\n\n# Generate a dataset with 20000 cars and 94234 people\ndataset = DatasetGenerator((Car, 20000), (Person, 94234)).generate()\ndataset.get_sql(save_to='cars_with_owners.sql')\n```\n## Installation\nTo install the latest stable release of dammy using pip\n```\npip install dammy\n```\n\nYou can also install the latest development release by cloning the repository and installing it with pip\n```\ngit clone https://github.com/ibonn/dammy.git dammy\ncd dammy\npip install -e .\n```\n\n## Release history\n* 1.1.0\n    * Iterators added\n* 1.0.0\n    * Semantic versioning used from now on\n    * Documentation fixed\n    * Minor code changes (duplicated code removed...)\n\n* 0.1.3\n    * Code refactored\n    * All binary operations made possible between BaseGenerator objects\n    * BaseDammy renamed to BaseGenerator\n    * EntityGenerator renamed to OperationResult\n    * DammyEntity renamed to EntityGenerator\n    * Everything inherits from BaseGenerator\n    * Removed DatabaseConstraint\n    * Added UNIQUE constraint support\n    * Datasets can now be exported to JSON\n    * Entities can now be exported to JSON and CSV\n    * dammy.stdlib expanded with new built-in generators\n\n* 0.1.2\n    * Documentation improved\n    * DatasetGenerator moved from main to db\n    * Minor bugs fixed\n\n* 0.1.1\n    * Can get attributes of entities\n    * Can call methods on entities\n    * Ability to perform operations added\n    * Code improved\n    * Docstrings added\n\n* 0.0.3\n    * Fixed import bug in stdlib\n\n* 0.0.1\n    * First release\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://pypi.org/project/dammy/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ibonn/dammy", "keywords": "dummy-data,fake,mock,database,sql,dummy,test,data,population", "license": "GPL-3.0", "maintainer": "", "maintainer_email": "", "name": "dammy", "package_url": "https://pypi.org/project/dammy/", "platform": "", "project_url": "https://pypi.org/project/dammy/", "project_urls": {"Documentation": "https://readthedocs.org/projects/dammy/", "Download": "https://pypi.org/project/dammy/", "Homepage": "https://github.com/ibonn/dammy", "Source Code": "https://github.com/ibonn/dammy"}, "release_url": "https://pypi.org/project/dammy/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Generate fake data for any purpose", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>dammy</h1>\n<p><img alt=\"GitHub top language\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/977fdbb450394775d99aeaca50377e374c68ec3e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f746f702f69626f6e6e2f64616d6d79\">\n<a href=\"https://dammy.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4acee214e658fe991c0e232fa069f7cb070c15b8/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f64616d6d792f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<img alt=\"Travis (.org)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12c918b3f68de716231f676fff735e4e7cfbf503/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f69626f6e6e2f64616d6d79\">\n<a href=\"https://www.codacy.com/manual/ibonn/dammy?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=ibonn/dammy&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eebe665974b6b830946c36e68b91256c1e744c07/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6333323162326565313832333437313261666639636532636136396165366562\"></a>\n<a href=\"https://codeclimate.com/github/ibonn/dammy/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/faf57a74c4ca3137e9182875336c950753d301cd/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f31343132393965633464373531396638383964362f6d61696e7461696e6162696c697479\"></a>\n<a href=\"https://pypi.python.org/pypi/dammy/\" rel=\"nofollow\"><img alt=\"PyPI download month\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a520c8a2273947f7beff43c77521a97519ea2c87/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f64616d6d792e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/dammy/\" rel=\"nofollow\"><img alt=\"PyPI download week\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cdfe0fb1c842a6ac4157c8ffd80cc83399593ccf/68747470733a2f2f696d672e736869656c64732e696f2f707970692f64772f64616d6d792e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/dammy/\" rel=\"nofollow\"><img alt=\"PyPI download day\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0b340c52a372738e5238e37895d7df4c26021fe/68747470733a2f2f696d672e736869656c64732e696f2f707970692f64642f64616d6d792e737667\"></a></p>\n<p>Generate fake/dummy data for any purpose</p>\n<h2>Table of contents</h2>\n<ul>\n<li><a href=\"#introduction\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#features\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#example\" rel=\"nofollow\">Example</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#release-history\" rel=\"nofollow\">Release history</a></li>\n</ul>\n<h2>Introduction</h2>\n<p>dammy is a powerful and simple tool to generate fake data. You can use it to mock classes, populate databases and and much more.\nYou can check the full documentation <a href=\"https://dammy.readthedocs.io/en/latest/\" rel=\"nofollow\">here</a>.</p>\n<h2>Features</h2>\n<ul>\n<li>Generate anything within the set of prebuilt objects (Person names, country names, car manufacturers and models, random dates...)</li>\n<li>Compose more complex data easily (Full profiles, complete databases, )</li>\n<li>The possibility to expand the previous set with little to no code</li>\n<li>Completely intuitive, you will learn to use it in less than 10 minutes</li>\n<li>Export the generated data to SQL</li>\n</ul>\n<h2>Example</h2>\n<p>If you wanted to generate 1000 random people, just define what a person looks like and dammy will handle the rest</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dammy</span> <span class=\"kn\">import</span> <span class=\"n\">EntityGenerator</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dammy.functions</span> <span class=\"kn\">import</span> <span class=\"n\">cast</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dammy.stdlib</span> <span class=\"kn\">import</span> <span class=\"n\">RandomName</span><span class=\"p\">,</span> <span class=\"n\">RandomString</span><span class=\"p\">,</span> <span class=\"n\">RandomDateTime</span><span class=\"p\">,</span> <span class=\"n\">RandomInteger</span><span class=\"p\">,</span> <span class=\"n\">CountryName</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">EntityGenerator</span><span class=\"p\">):</span>\n    <span class=\"n\">first_name</span> <span class=\"o\">=</span> <span class=\"n\">RandomName</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n    <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">RandomString</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"n\">birthday</span> <span class=\"o\">=</span> <span class=\"n\">RandomDateTime</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">1980</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2000</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">),</span> <span class=\"n\">date_format</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"si\">%d</span><span class=\"s1\">/%m/%Y'</span><span class=\"p\">)</span>\n    <span class=\"n\">favorite_number</span> <span class=\"o\">=</span> <span class=\"n\">RandomInteger</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">cast</span><span class=\"p\">((</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">birthday</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">days</span> <span class=\"o\">/</span> <span class=\"mf\">365.25</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">)</span>\n    <span class=\"n\">country</span> <span class=\"o\">=</span> <span class=\"n\">CountryName</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Generate 1000 random people</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">())</span>\n</pre>\n<p>Which will output:</p>\n<pre><code>{'identifier': 1, 'uid': '9XCha', 'first_name': 'ZAYN', 'blood': 'A+', 'birthday': '24/01/1982', 'favorite_number': 5, 'age': 38, 'country': 'Denmark'}\n{'identifier': 2, 'uid': 'bbYbw', 'first_name': 'MALIHA', 'blood': 'AB+', 'birthday': '01/12/1981', 'favorite_number': 1, 'age': 38, 'country': 'Syrian Arab Republic'}\n{'identifier': 3, 'uid': 'aGF49', 'first_name': 'ANGEL', 'blood': 'AB+', 'birthday': '18/08/1992', 'favorite_number': 1, 'age': 27, 'country': 'Macedonia, the Former Yugoslav Republic of'}\n{'identifier': 4, 'uid': 'Lcr0J', 'first_name': 'REUBEN', 'blood': '0-', 'birthday': '07/11/1997', 'favorite_number': 4, 'age': 22, 'country': 'Dominican Republic'}\n{'identifier': 5, 'uid': 'P7mD4', 'first_name': 'MAMADOU', 'blood': 'A+', 'birthday': '02/01/1987', 'favorite_number': 7, 'age': 33, 'country': 'Palau'}\n{'identifier': 6, 'uid': 'ykdeL', 'first_name': 'BATSHEVA', 'blood': 'A+', 'birthday': '11/01/1983', 'favorite_number': 5, 'age': 37, 'country': 'Seychelles'}\n{'identifier': 7, 'uid': 'h9HjQ', 'first_name': 'JIMENA', 'blood': 'A-', 'birthday': '23/10/1985', 'favorite_number': 0, 'age': 34, 'country': 'China'}\n{'identifier': 8, 'uid': 'rjt92', 'first_name': 'YERIK', 'blood': 'AB+', 'birthday': '29/10/1991', 'favorite_number': 5, 'age': 28, 'country': 'Libya'}\n{'identifier': 9, 'uid': 'vL0DE', 'first_name': 'YISRAEL', 'blood': 'AB+', 'birthday': '25/03/1989', 'favorite_number': 8, 'age': 30, 'country': 'Spain'}\n{'identifier': 10, 'uid': 'CsrhX', 'first_name': 'JOSHUA', 'blood': 'AB+', 'birthday': '20/09/1999', 'favorite_number': 1, 'age': 20, 'country': 'Svalbard and Jan Mayen'}\n...\n</code></pre>\n<p>It also supports relationships between tables, so you can generate data to populate databases</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dammy</span> <span class=\"kn\">import</span> <span class=\"n\">EntityGenerator</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dammy.db</span> <span class=\"kn\">import</span> <span class=\"n\">AutoIncrement</span><span class=\"p\">,</span> <span class=\"n\">PrimaryKey</span><span class=\"p\">,</span> <span class=\"n\">ForeignKey</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dammy.stdlib</span> <span class=\"kn\">import</span> <span class=\"n\">RandomName</span><span class=\"p\">,</span> <span class=\"n\">RandomString</span><span class=\"p\">,</span> <span class=\"n\">RandomDateTime</span><span class=\"p\">,</span> <span class=\"n\">RandomInteger</span><span class=\"p\">,</span> <span class=\"n\">CountryName</span>\n\n<span class=\"c1\"># Define what a person looks like</span>\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">EntityGenerator</span><span class=\"p\">):</span>\n    <span class=\"n\">id_pk</span> <span class=\"o\">=</span> <span class=\"n\">PrimaryKey</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">AutoIncrement</span><span class=\"p\">())</span>\n    <span class=\"n\">first_name</span> <span class=\"o\">=</span> <span class=\"n\">RandomName</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n    <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">RandomString</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"n\">birthday</span> <span class=\"o\">=</span> <span class=\"n\">RandomDateTime</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">1980</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2000</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">),</span> <span class=\"n\">date_format</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"si\">%d</span><span class=\"s1\">/%m/%Y'</span><span class=\"p\">)</span>\n    <span class=\"n\">favorite_number</span> <span class=\"o\">=</span> <span class=\"n\">RandomInteger</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">cast</span><span class=\"p\">((</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">birthday</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">days</span> <span class=\"o\">/</span> <span class=\"mf\">365.25</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">)</span>\n    <span class=\"n\">country</span> <span class=\"o\">=</span> <span class=\"n\">CountryName</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Define what a car looks like</span>\n<span class=\"k\">class</span> <span class=\"nc\">Car</span><span class=\"p\">(</span><span class=\"n\">EntityGenerator</span><span class=\"p\">):</span>\n    <span class=\"n\">id_pk</span> <span class=\"o\">=</span> <span class=\"n\">PrimaryKey</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">AutoIncrement</span><span class=\"p\">())</span>\n    <span class=\"n\">manufacturer_name</span> <span class=\"o\">=</span> <span class=\"n\">CarBrand</span><span class=\"p\">()</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">CarModel</span><span class=\"p\">(</span><span class=\"n\">car_brand</span><span class=\"o\">=</span><span class=\"n\">manufacturer_name</span><span class=\"p\">)</span>\n    <span class=\"n\">owner</span> <span class=\"o\">=</span> <span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">,</span> <span class=\"s1\">'identifier'</span><span class=\"p\">)</span>\n</pre>\n<p>And the data can be exported to SQL</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dammy</span> <span class=\"kn\">import</span> <span class=\"n\">DatasetGenerator</span>\n\n<span class=\"c1\"># Generate a dataset with 20000 cars and 94234 people</span>\n<span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">DatasetGenerator</span><span class=\"p\">((</span><span class=\"n\">Car</span><span class=\"p\">,</span> <span class=\"mi\">20000</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">,</span> <span class=\"mi\">94234</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">()</span>\n<span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">get_sql</span><span class=\"p\">(</span><span class=\"n\">save_to</span><span class=\"o\">=</span><span class=\"s1\">'cars_with_owners.sql'</span><span class=\"p\">)</span>\n</pre>\n<h2>Installation</h2>\n<p>To install the latest stable release of dammy using pip</p>\n<pre><code>pip install dammy\n</code></pre>\n<p>You can also install the latest development release by cloning the repository and installing it with pip</p>\n<pre><code>git clone https://github.com/ibonn/dammy.git dammy\ncd dammy\npip install -e .\n</code></pre>\n<h2>Release history</h2>\n<ul>\n<li>\n<p>1.1.0</p>\n<ul>\n<li>Iterators added</li>\n</ul>\n</li>\n<li>\n<p>1.0.0</p>\n<ul>\n<li>Semantic versioning used from now on</li>\n<li>Documentation fixed</li>\n<li>Minor code changes (duplicated code removed...)</li>\n</ul>\n</li>\n<li>\n<p>0.1.3</p>\n<ul>\n<li>Code refactored</li>\n<li>All binary operations made possible between BaseGenerator objects</li>\n<li>BaseDammy renamed to BaseGenerator</li>\n<li>EntityGenerator renamed to OperationResult</li>\n<li>DammyEntity renamed to EntityGenerator</li>\n<li>Everything inherits from BaseGenerator</li>\n<li>Removed DatabaseConstraint</li>\n<li>Added UNIQUE constraint support</li>\n<li>Datasets can now be exported to JSON</li>\n<li>Entities can now be exported to JSON and CSV</li>\n<li>dammy.stdlib expanded with new built-in generators</li>\n</ul>\n</li>\n<li>\n<p>0.1.2</p>\n<ul>\n<li>Documentation improved</li>\n<li>DatasetGenerator moved from main to db</li>\n<li>Minor bugs fixed</li>\n</ul>\n</li>\n<li>\n<p>0.1.1</p>\n<ul>\n<li>Can get attributes of entities</li>\n<li>Can call methods on entities</li>\n<li>Ability to perform operations added</li>\n<li>Code improved</li>\n<li>Docstrings added</li>\n</ul>\n</li>\n<li>\n<p>0.0.3</p>\n<ul>\n<li>Fixed import bug in stdlib</li>\n</ul>\n</li>\n<li>\n<p>0.0.1</p>\n<ul>\n<li>First release</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6701921, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "2849c48c9c44720571c07d5a4f7af50c", "sha256": "e9108ea9d7a566c37b31f4c1e35bf0e09536e3f5f5da04eab204c0f4b6f35fc7"}, "downloads": -1, "filename": "dammy-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2849c48c9c44720571c07d5a4f7af50c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17030, "upload_time": "2020-01-13T14:58:19", "upload_time_iso_8601": "2020-01-13T14:58:19.461986Z", "url": "https://files.pythonhosted.org/packages/72/66/fa9585af8cf0f73f82b8f201513697aa67559eb212f919d60db68c2a7c70/dammy-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c7342c97cc5ec22e60c05acbb4d335c", "sha256": "0607080464408ee1d53f20b1e0fae0b813ae0da837a5b930c00252affece4fa2"}, "downloads": -1, "filename": "dammy-0.0.3.tar.gz", "has_sig": false, "md5_digest": "6c7342c97cc5ec22e60c05acbb4d335c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6627, "upload_time": "2020-01-13T14:58:21", "upload_time_iso_8601": "2020-01-13T14:58:21.235176Z", "url": "https://files.pythonhosted.org/packages/3b/57/5b60fdeea1c16701539d1ec1d6a5dbbdd826dad304f8ab1681aa7c6de1f1/dammy-0.0.3.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9bfa1f7babd7c2af20e6bb3d881505c0", "sha256": "40a2b11acbe7e810e61433330855cf91833f0f721bf0a1f7f443bfb21a711056"}, "downloads": -1, "filename": "dammy-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9bfa1f7babd7c2af20e6bb3d881505c0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32278, "upload_time": "2020-01-16T18:02:19", "upload_time_iso_8601": "2020-01-16T18:02:19.015205Z", "url": "https://files.pythonhosted.org/packages/02/d5/3363183526856a09918b0818fcf3d17c83244e1eb8c13df849f44e7bad8e/dammy-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2740292386cbad7bb14b55003efcdbe0", "sha256": "611789d9ca581df63ff6179c00a2cb42b429ca7cc010aeed830d361cc326bda3"}, "downloads": -1, "filename": "dammy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2740292386cbad7bb14b55003efcdbe0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10149, "upload_time": "2020-01-16T18:02:21", "upload_time_iso_8601": "2020-01-16T18:02:21.024830Z", "url": "https://files.pythonhosted.org/packages/45/42/362a6473d80e018a6c19991fa949e8e069b1f74f1d3a690bc04596f8baad/dammy-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "cfa4ba3e5b43a971af2b2b10d18a9d62", "sha256": "9b130e20944b427228e0690043e96d8cd4f18f350de85c6e0f6503f099692233"}, "downloads": -1, "filename": "dammy-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "cfa4ba3e5b43a971af2b2b10d18a9d62", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34443, "upload_time": "2020-01-18T16:23:55", "upload_time_iso_8601": "2020-01-18T16:23:55.946611Z", "url": "https://files.pythonhosted.org/packages/d0/ab/9d0090e50e42efe33157718914fd35e74d74406baad70c23a4ea55780a18/dammy-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "52c11082a26fdb74d3ba339c71257eaf", "sha256": "950e30e72ac068bb57a521ef38c994a46203e242215c8db9130cdcd889af06a5"}, "downloads": -1, "filename": "dammy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "52c11082a26fdb74d3ba339c71257eaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12259, "upload_time": "2020-01-18T16:23:57", "upload_time_iso_8601": "2020-01-18T16:23:57.416919Z", "url": "https://files.pythonhosted.org/packages/20/11/e8c5b4172cf742ef61c552c8b691b5bfa413bbaf7ba64e2e3aa6060c93eb/dammy-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "49241fa81fbd55785757a2b7903bf1f6", "sha256": "2628aec8169169525bb82bc952066142e8853349653ee1e710ba44cd368ccac4"}, "downloads": -1, "filename": "dammy-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "49241fa81fbd55785757a2b7903bf1f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36593, "upload_time": "2020-01-19T22:20:48", "upload_time_iso_8601": "2020-01-19T22:20:48.643445Z", "url": "https://files.pythonhosted.org/packages/c8/76/076e6a0d74f7a9c776719eeca907b1db369a2071248c3ef578d46a416022/dammy-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dce94ab2de954925276a8154ca915abf", "sha256": "89f6c636e2d46fbcf3c04bc80f7a14d3125eeea5e299341ea06caa6d2b13788f"}, "downloads": -1, "filename": "dammy-0.1.3.tar.gz", "has_sig": false, "md5_digest": "dce94ab2de954925276a8154ca915abf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14981, "upload_time": "2020-01-19T22:20:50", "upload_time_iso_8601": "2020-01-19T22:20:50.675254Z", "url": "https://files.pythonhosted.org/packages/d5/e4/ea136a694611d08ee33e531413d42cf07b8f0d0b2b8d8a11d5a02ea2b7bd/dammy-0.1.3.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "81d0533e3370aabab4fc273d1e729dc2", "sha256": "e0446b955b5e158bb6d1d07a6bee8b448b4db4b0640322b2a03bddc05fa76a05"}, "downloads": -1, "filename": "dammy-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "81d0533e3370aabab4fc273d1e729dc2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36980, "upload_time": "2020-01-20T11:57:37", "upload_time_iso_8601": "2020-01-20T11:57:37.939673Z", "url": "https://files.pythonhosted.org/packages/44/de/ed238970c24be64c5e063353e864d74cd339128f470911616a065bdfaa46/dammy-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8f33b3bc4a4fbec6fd722a2f2efcb5b", "sha256": "b987a8631b2b4f1fd6ef22668360ee9b5dea420a951b9d0dcf2abcf4e26154ad"}, "downloads": -1, "filename": "dammy-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e8f33b3bc4a4fbec6fd722a2f2efcb5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15436, "upload_time": "2020-01-20T11:57:39", "upload_time_iso_8601": "2020-01-20T11:57:39.370595Z", "url": "https://files.pythonhosted.org/packages/72/c4/fbc9b808f69c67175d0d9b69ade65656df6652b2d98c0b9e84d203aa6d19/dammy-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "eec5412f94559fd15c8dc886a594982a", "sha256": "306be5e51f0dcb9ac5e519e8941493ce79254527ca2a93bc0bf52b43d1bb786e"}, "downloads": -1, "filename": "dammy-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eec5412f94559fd15c8dc886a594982a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38332, "upload_time": "2020-02-26T09:20:20", "upload_time_iso_8601": "2020-02-26T09:20:20.509544Z", "url": "https://files.pythonhosted.org/packages/b6/42/a1b7a0be2b1491615150780e186be2473f3deb5159815e84efd263060274/dammy-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "925d368fac13b0af1b6a620abc597469", "sha256": "256261766d02031a21d82d2ced40b67f4be984b847e4fdedd0324d01fba83240"}, "downloads": -1, "filename": "dammy-1.1.0.tar.gz", "has_sig": false, "md5_digest": "925d368fac13b0af1b6a620abc597469", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17052, "upload_time": "2020-02-26T09:20:22", "upload_time_iso_8601": "2020-02-26T09:20:22.306734Z", "url": "https://files.pythonhosted.org/packages/17/c4/e1a31cb923dc540fe471a89716ea67fdb394a8e4a55346f486d894cd0ef9/dammy-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eec5412f94559fd15c8dc886a594982a", "sha256": "306be5e51f0dcb9ac5e519e8941493ce79254527ca2a93bc0bf52b43d1bb786e"}, "downloads": -1, "filename": "dammy-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eec5412f94559fd15c8dc886a594982a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38332, "upload_time": "2020-02-26T09:20:20", "upload_time_iso_8601": "2020-02-26T09:20:20.509544Z", "url": "https://files.pythonhosted.org/packages/b6/42/a1b7a0be2b1491615150780e186be2473f3deb5159815e84efd263060274/dammy-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "925d368fac13b0af1b6a620abc597469", "sha256": "256261766d02031a21d82d2ced40b67f4be984b847e4fdedd0324d01fba83240"}, "downloads": -1, "filename": "dammy-1.1.0.tar.gz", "has_sig": false, "md5_digest": "925d368fac13b0af1b6a620abc597469", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17052, "upload_time": "2020-02-26T09:20:22", "upload_time_iso_8601": "2020-02-26T09:20:22.306734Z", "url": "https://files.pythonhosted.org/packages/17/c4/e1a31cb923dc540fe471a89716ea67fdb394a8e4a55346f486d894cd0ef9/dammy-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:45 2020"}