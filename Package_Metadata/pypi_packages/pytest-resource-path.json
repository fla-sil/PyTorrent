{"info": {"author": "Yukihiko Shinoda", "author_email": "yuk.hik.future@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Pytest", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Testing", "Topic :: System :: Filesystems", "Typing :: Typed"], "description": "# pytest-resource-path\n\n[![Test](https://github.com/yukihiko-shinoda/pytest-resource-path/workflows/Test/badge.svg)](https://github.com/yukihiko-shinoda/pytest-resource-path/actions?query=workflow%3ATest)\n[![See Build Status on Travis CI](https://travis-ci.org/yukihiko-shinoda/pytest-resource-path.svg?branch=master)](https://travis-ci.org/yukihiko-shinoda/pytest-resource-path)\n[![See Build Status on AppVeyor](https://ci.appveyor.com/api/projects/status/github/yukihiko-shinoda/pytest-resource-path?branch=master)](https://ci.appveyor.com/project/yukihiko-shinoda/pytest-resource-path/branch/master)\n[![codecov](https://codecov.io/gh/yukihiko-shinoda/pytest-resource-path/branch/master/graph/badge.svg)](https://codecov.io/gh/yukihiko-shinoda/pytest-resource-path)\n[![Python versions](https://img.shields.io/pypi/pyversions/pytest-resource-path.svg)](https://pypi.org/project/pytest-resource-path)\n[![Twitter URL](https://img.shields.io/twitter/url?style=social&url=https%3A%2F%2Fgithub.com%2Fyukihiko-shinoda%2Fpytest-resource-path)](http://twitter.com/share?text=pytest-resource-path&url=https://pypi.org/project/pytest-resource-path/&hashtags=python)\n\nProvides path for uniform access to test resources in isolated directory\n\nThis [pytest] plugin was generated with [Cookiecutter] along with [@hackebrot]'s [cookiecutter-pytest-plugin] template.\n\n## Features\n\n### Let's isolate test resources from test code\n\nThe test which use test resource is not so many.\nIf we place test resource with test code, these resources will fill the display area of explorer. Wouldn't it be more productive if the files or directories which is not related with almost tests wasn't usually displayed?\n\n**pytest-resource-path** provides path for uniform access to test resources in isolated directory.\n\nThis pytest plugin assumes that test resource is placed under `testresources` directory directly under `tests`. (Don't worry, you can customize these directory names by `pytest.ini`)\n\n```bash\ntests/\n+-- some_test_package/\n|   +-- some_test_module.py\n+-- testresources/\n    +-- some_test_package/\n        +-- some_test_module/\n```\n\n## Installation\n\nYou can install \"pytest-resource-path\" via [pip] from [PyPI]:\n\n```console\npip install pytest-resource-path\n```\n\n## Usage\n\n### Basic\n\nYou can use fixture `resource_path` which is pathlib.Path instance (**absolte path**).\n\n```python\ndef test_method(resource_path):\n    text_test_resource = (resource_path / 'test_resource.txt').get_text()\n```\n\nWhen assume that above `test_method` is in `tests/some_tests_package_some_test_module.py`, you have to place `test_resource.txt` following directory:\n\n```bash\ntests/\n+-- some_test_package/\n|   +-- some_test_module.py\n+-- testresources/\n    +-- some_test_package/\n        +-- some_test_module/\n            +-- test_method/\n                +-- test_resource.txt\n```\n\nIf you want to omit directory per method, you can do:\n\n```python\ndef test_method(resource_path):\n    text_test_resource = Path(f'{resource_path}.txt').get_text()\n```\n\nNote that the class name is not used in the path since It felt redundant in design.\n\n### Get path to test resources root directory\n\nYou can use fixture `resource_path_root` which is pathlib.Path instance (**absolte path**) pointing to `testresources`.\n\n```python\ndef test_method(resource_path_root):\n    text_test_resource = (resource_path_root / 'test_resource.txt').get_text()\n```\n\n```bash\ntests/\n+-- some_test_package/\n|   +-- some_test_module.py\n+-- testresources/\n    +-- test_resource.txt\n```\n\nThis fixture may be your help duaring migration period of directory structure.\nOr, may be usiful to preapare common directory with some of tests.\n\n```python\ndef test_method(resource_path_root):\n    text_test_resource = (resource_path_root / 'common/test_resource.txt').get_text()\n```\n\n```bash\ntests/\n+-- some_test_package/\n|   +-- some_test_module.py\n+-- testresources/\n    +-- common/\n        +-- test_resource.txt\n```\n\n### How to customize directory names\n\nTo traverse directory structure, this plugin requires to fix directory names.\n\nBy default:\n\ndirectory|requires to be named\n---|---\nRoot directory of tests|`tests`\nRoot directory of test resources|`testresources`\n\nYou can customize these required names by `pytest.ini`\n\nEx:\n\n```ini\n[pytest]\nresource-path.directory-name-tests = integrationtests\nresource-path.directory-name-test-resources = data\n```\n\nAbove customize fits following directory strucure:\n\n```bash\nintegrationtests/\n+-- some_test_package/\n|   +-- some_test_module.py\n+-- data/\n    +-- some_test_package/\n        +-- some_test_module/\n```\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [MIT] license, \"pytest-resource-path\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@hackebrot]: https://github.com/hackebrot\n[MIT]: http://opensource.org/licenses/MIT\n[cookiecutter-pytest-plugin]: https://github.com/pytest-dev/cookiecutter-pytest-plugin\n[file an issue]: https://github.com/yukihiko-shinoda/pytest-resource-path/issues\n[pytest]: https://github.com/pytest-dev/pytest\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/project\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yukihiko-shinoda/pytest-resource-path", "keywords": "", "license": "MIT", "maintainer": "Yukihiko Shinoda", "maintainer_email": "yuk.hik.future@gmail.com", "name": "pytest-resource-path", "package_url": "https://pypi.org/project/pytest-resource-path/", "platform": "", "project_url": "https://pypi.org/project/pytest-resource-path/", "project_urls": {"Homepage": "https://github.com/yukihiko-shinoda/pytest-resource-path"}, "release_url": "https://pypi.org/project/pytest-resource-path/1.0.0/", "requires_dist": ["pytest (>=3.5.0)", "colorama"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "summary": "Provides path for uniform access to test resources in isolated directory", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pytest-resource-path</h1>\n<p><a href=\"https://github.com/yukihiko-shinoda/pytest-resource-path/actions?query=workflow%3ATest\" rel=\"nofollow\"><img alt=\"Test\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d71fad96b91f2b76cf83b9b86bbb3606e1219296/68747470733a2f2f6769746875622e636f6d2f79756b6968696b6f2d7368696e6f64612f7079746573742d7265736f757263652d706174682f776f726b666c6f77732f546573742f62616467652e737667\"></a>\n<a href=\"https://travis-ci.org/yukihiko-shinoda/pytest-resource-path\" rel=\"nofollow\"><img alt=\"See Build Status on Travis CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e4805a574a052049884aace07a7c62d0614f00b/68747470733a2f2f7472617669732d63692e6f72672f79756b6968696b6f2d7368696e6f64612f7079746573742d7265736f757263652d706174682e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/yukihiko-shinoda/pytest-resource-path/branch/master\" rel=\"nofollow\"><img alt=\"See Build Status on AppVeyor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aff80a81766128807356e2be3c1255dce3b178e1/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f79756b6968696b6f2d7368696e6f64612f7079746573742d7265736f757263652d706174683f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/yukihiko-shinoda/pytest-resource-path\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3fe0e3fca393556193b67a1a84fad43de7e65db6/68747470733a2f2f636f6465636f762e696f2f67682f79756b6968696b6f2d7368696e6f64612f7079746573742d7265736f757263652d706174682f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/pytest-resource-path\" rel=\"nofollow\"><img alt=\"Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a07e71adbba7b4a116377d0cf535c6ab8f6665c9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7079746573742d7265736f757263652d706174682e737667\"></a>\n<a href=\"http://twitter.com/share?text=pytest-resource-path&amp;url=https://pypi.org/project/pytest-resource-path/&amp;hashtags=python\" rel=\"nofollow\"><img alt=\"Twitter URL\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ffc1461cd855834aa823f488bb17cf3cc245931/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c3f7374796c653d736f6369616c2675726c3d68747470732533412532462532466769746875622e636f6d25324679756b6968696b6f2d7368696e6f64612532467079746573742d7265736f757263652d70617468\"></a></p>\n<p>Provides path for uniform access to test resources in isolated directory</p>\n<p>This <a href=\"https://github.com/pytest-dev/pytest\" rel=\"nofollow\">pytest</a> plugin was generated with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> along with <a href=\"https://github.com/hackebrot\" rel=\"nofollow\">@hackebrot</a>'s <a href=\"https://github.com/pytest-dev/cookiecutter-pytest-plugin\" rel=\"nofollow\">cookiecutter-pytest-plugin</a> template.</p>\n<h2>Features</h2>\n<h3>Let's isolate test resources from test code</h3>\n<p>The test which use test resource is not so many.\nIf we place test resource with test code, these resources will fill the display area of explorer. Wouldn't it be more productive if the files or directories which is not related with almost tests wasn't usually displayed?</p>\n<p><strong>pytest-resource-path</strong> provides path for uniform access to test resources in isolated directory.</p>\n<p>This pytest plugin assumes that test resource is placed under <code>testresources</code> directory directly under <code>tests</code>. (Don't worry, you can customize these directory names by <code>pytest.ini</code>)</p>\n<pre>tests/\n+-- some_test_package/\n<span class=\"p\">|</span>   +-- some_test_module.py\n+-- testresources/\n    +-- some_test_package/\n        +-- some_test_module/\n</pre>\n<h2>Installation</h2>\n<p>You can install \"pytest-resource-path\" via <a href=\"https://pypi.org/project/pip/\" rel=\"nofollow\">pip</a> from <a href=\"https://pypi.org/project\" rel=\"nofollow\">PyPI</a>:</p>\n<pre><span class=\"go\">pip install pytest-resource-path</span>\n</pre>\n<h2>Usage</h2>\n<h3>Basic</h3>\n<p>You can use fixture <code>resource_path</code> which is pathlib.Path instance (<strong>absolte path</strong>).</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">test_method</span><span class=\"p\">(</span><span class=\"n\">resource_path</span><span class=\"p\">):</span>\n    <span class=\"n\">text_test_resource</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">resource_path</span> <span class=\"o\">/</span> <span class=\"s1\">'test_resource.txt'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_text</span><span class=\"p\">()</span>\n</pre>\n<p>When assume that above <code>test_method</code> is in <code>tests/some_tests_package_some_test_module.py</code>, you have to place <code>test_resource.txt</code> following directory:</p>\n<pre>tests/\n+-- some_test_package/\n<span class=\"p\">|</span>   +-- some_test_module.py\n+-- testresources/\n    +-- some_test_package/\n        +-- some_test_module/\n            +-- test_method/\n                +-- test_resource.txt\n</pre>\n<p>If you want to omit directory per method, you can do:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">test_method</span><span class=\"p\">(</span><span class=\"n\">resource_path</span><span class=\"p\">):</span>\n    <span class=\"n\">text_test_resource</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"n\">resource_path</span><span class=\"si\">}</span><span class=\"s1\">.txt'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_text</span><span class=\"p\">()</span>\n</pre>\n<p>Note that the class name is not used in the path since It felt redundant in design.</p>\n<h3>Get path to test resources root directory</h3>\n<p>You can use fixture <code>resource_path_root</code> which is pathlib.Path instance (<strong>absolte path</strong>) pointing to <code>testresources</code>.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">test_method</span><span class=\"p\">(</span><span class=\"n\">resource_path_root</span><span class=\"p\">):</span>\n    <span class=\"n\">text_test_resource</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">resource_path_root</span> <span class=\"o\">/</span> <span class=\"s1\">'test_resource.txt'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_text</span><span class=\"p\">()</span>\n</pre>\n<pre>tests/\n+-- some_test_package/\n<span class=\"p\">|</span>   +-- some_test_module.py\n+-- testresources/\n    +-- test_resource.txt\n</pre>\n<p>This fixture may be your help duaring migration period of directory structure.\nOr, may be usiful to preapare common directory with some of tests.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">test_method</span><span class=\"p\">(</span><span class=\"n\">resource_path_root</span><span class=\"p\">):</span>\n    <span class=\"n\">text_test_resource</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">resource_path_root</span> <span class=\"o\">/</span> <span class=\"s1\">'common/test_resource.txt'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_text</span><span class=\"p\">()</span>\n</pre>\n<pre>tests/\n+-- some_test_package/\n<span class=\"p\">|</span>   +-- some_test_module.py\n+-- testresources/\n    +-- common/\n        +-- test_resource.txt\n</pre>\n<h3>How to customize directory names</h3>\n<p>To traverse directory structure, this plugin requires to fix directory names.</p>\n<p>By default:</p>\n<table>\n<thead>\n<tr>\n<th>directory</th>\n<th>requires to be named</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Root directory of tests</td>\n<td><code>tests</code></td>\n</tr>\n<tr>\n<td>Root directory of test resources</td>\n<td><code>testresources</code></td>\n</tr></tbody></table>\n<p>You can customize these required names by <code>pytest.ini</code></p>\n<p>Ex:</p>\n<pre><span class=\"k\">[pytest]</span>\n<span class=\"na\">resource-path.directory-name-tests</span> <span class=\"o\">=</span> <span class=\"s\">integrationtests</span>\n<span class=\"na\">resource-path.directory-name-test-resources</span> <span class=\"o\">=</span> <span class=\"s\">data</span>\n</pre>\n<p>Above customize fits following directory strucure:</p>\n<pre>integrationtests/\n+-- some_test_package/\n<span class=\"p\">|</span>   +-- some_test_module.py\n+-- data/\n    +-- some_test_package/\n        +-- some_test_module/\n</pre>\n<h2>Contributing</h2>\n<p>Contributions are very welcome. Tests can be run with <a href=\"https://tox.readthedocs.io/en/latest/\" rel=\"nofollow\">tox</a>, please ensure\nthe coverage at least stays the same before you submit a pull request.</p>\n<h2>License</h2>\n<p>Distributed under the terms of the <a href=\"http://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT</a> license, \"pytest-resource-path\" is free and open source software</p>\n<h2>Issues</h2>\n<p>If you encounter any problems, please <a href=\"https://github.com/yukihiko-shinoda/pytest-resource-path/issues\" rel=\"nofollow\">file an issue</a> along with a detailed description.</p>\n\n          </div>"}, "last_serial": 7178022, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c1bd6530bffa22d73a2d7453b3d0cd23", "sha256": "6734d6eeadebf72978bb0860e109dd8b74b1ceb63933a96b7decc477cef75d06"}, "downloads": -1, "filename": "pytest_resource_path-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c1bd6530bffa22d73a2d7453b3d0cd23", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 6182, "upload_time": "2020-05-05T19:17:31", "upload_time_iso_8601": "2020-05-05T19:17:31.645177Z", "url": "https://files.pythonhosted.org/packages/f5/d7/e0ff8bff69275b67713deaff555a07c807e81bd03ab2aa8f891dc4ff33cb/pytest_resource_path-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31c1ea7021bf14a71cd01b0249b9877e", "sha256": "f0cf5606c23c7f9e5755395213e5f39ecf211e1b41114e4a6727c50c218e506b"}, "downloads": -1, "filename": "pytest-resource-path-0.1.0.tar.gz", "has_sig": false, "md5_digest": "31c1ea7021bf14a71cd01b0249b9877e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 5556, "upload_time": "2020-05-05T19:17:33", "upload_time_iso_8601": "2020-05-05T19:17:33.532936Z", "url": "https://files.pythonhosted.org/packages/48/93/bd140b347d04270f35558225d21443286bd302e0c354caeb97410ee69680/pytest-resource-path-0.1.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "2bb68a070fb5929697f31b2008a5f603", "sha256": "d7a9c3dac589fddeed883a1d1dcfd2c649290cc84546e4e9c53f5ba712c78f0f"}, "downloads": -1, "filename": "pytest_resource_path-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2bb68a070fb5929697f31b2008a5f603", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 6401, "upload_time": "2020-05-06T06:34:27", "upload_time_iso_8601": "2020-05-06T06:34:27.495642Z", "url": "https://files.pythonhosted.org/packages/b6/3d/093d0b88877bd796f47c7bff70af378fc3aee6db3395967b6a9e286ba859/pytest_resource_path-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1143ca2f421a1522274c257c44b64b4e", "sha256": "202f3a17684ac8aee9f229900b9c6891eeb3e4d8b5d4f86ed132841070f6ec8e"}, "downloads": -1, "filename": "pytest-resource-path-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1143ca2f421a1522274c257c44b64b4e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 5879, "upload_time": "2020-05-06T06:34:28", "upload_time_iso_8601": "2020-05-06T06:34:28.299372Z", "url": "https://files.pythonhosted.org/packages/c0/86/c40b8c6814bf5622f0cbaca8778edb49a0086997f74262a49e6858b74954/pytest-resource-path-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2bb68a070fb5929697f31b2008a5f603", "sha256": "d7a9c3dac589fddeed883a1d1dcfd2c649290cc84546e4e9c53f5ba712c78f0f"}, "downloads": -1, "filename": "pytest_resource_path-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2bb68a070fb5929697f31b2008a5f603", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 6401, "upload_time": "2020-05-06T06:34:27", "upload_time_iso_8601": "2020-05-06T06:34:27.495642Z", "url": "https://files.pythonhosted.org/packages/b6/3d/093d0b88877bd796f47c7bff70af378fc3aee6db3395967b6a9e286ba859/pytest_resource_path-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1143ca2f421a1522274c257c44b64b4e", "sha256": "202f3a17684ac8aee9f229900b9c6891eeb3e4d8b5d4f86ed132841070f6ec8e"}, "downloads": -1, "filename": "pytest-resource-path-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1143ca2f421a1522274c257c44b64b4e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 5879, "upload_time": "2020-05-06T06:34:28", "upload_time_iso_8601": "2020-05-06T06:34:28.299372Z", "url": "https://files.pythonhosted.org/packages/c0/86/c40b8c6814bf5622f0cbaca8778edb49a0086997f74262a49e6858b74954/pytest-resource-path-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:46 2020"}