{"info": {"author": "Jim Washington", "author_email": "jwashin@users.sourceforge.net", "bugtrack_url": null, "classifiers": [], "description": "****************\nzif.jsmin\n****************\n\nSee 'src/zif/jsmin/README.txt' for more information.\n\n\nReleases\n********\n\n================\n0.1 (2007/04/13)\n================\n\nInitial release.\n\n\nDetailed Documentation\n**********************\n\n=========\nzif.jsmin\n=========\n\nThis is a wsgi middleware application intended for use with paste.deploy,\nzope.paste, and zope3.\n\nIt serves as a wsgi filter to \"minimize\" javascript for a zope3 application.\n\n*This can be slow.*  You probably do not want to run this in production unless\nyou have (small) dynamically-generated scripts and css.  But it can be useful\nfor generating minimized javascript or css for resources.  Those larger files\ncan then be excluded from on-the-fly minimization.\n\n\nDependencies\n------------\n\nFor zope3, jsmin requires Sidnei da Silva's zope.paste.\n\nzope.paste is available at http://svn.zope.org/zope.paste/trunk/\n\n::\n\n    cd [path.to.zope3.src.directory]/zope\n    svn co http://svn.zope.org/zope.paste/trunk/ paste\n\nInstructions for zope.paste are at  http://awkly.org/\n\nzope.paste requires paste.deploy.  paste.deploy can be obtained from the cheese\nshop.  Presuming you have setuptools installed,\n\n::\n\n    sudo easy_install.py PasteDeploy\n\nThis (zif.jsmin) package can be unzipped and installed anywhere on the Python path.\n\n\nSetup\n-----\n\nFollow Sidnei's instructions for setting up zope.paste.  It involves putting the\nusual zope.paste-configure.zcml file in [zope3 instance]/etc/site-packages.\nThere is also a parameter to change in [zope3 instance]/etc/zope.conf.\nThe new twist is a paste.ini file in [zope3 instance]/etc\n\nAn example paste.ini file looks like:\n\n::\n\n    [pipeline:Paste.Main]\n    pipeline = gzipper jsmin main\n\n    [app:main]\n    paste.app_factory = zope.paste.application:zope_publisher_app_factory\n\n    [filter:gzipper]\n    paste.filter_factory=gzipper.gzipper:filter_factory\n    compress_level=6\n    nocompress=jp gz zip\n    tempfile=0\n\n    [filter:jsmin]\n    paste.filter_factory=jsmin.jsmin:filter_factory\n    compress_level=safe\n    compress_types=js css\n    exclude=MochiKit\n\nConfiguration\n\nThe paste.ini file above shows examples of the configuration options for jsmin.\n\n- **compress_level** is the degree of minimization desired.  \"safe\" is often good\n  enough; it mainly removes spaces.  \"full\" will additionally munge variable\n  names in javascript to make a more compact (and even less readable) module.\n  Default is \"safe\"\n\n- **compress_types** determines whether to compress javascript or css or both.\n  For both, use \"css js\", which is the default.  For just one, specify \"css\" or\n  \"js\"\n\n- **exclude** is for excluding large files that presumably are already compressed.\n  You may exclude on several matches; just put a space between them.  The module\n  looks for consecutive characters in the url, and is case-sensitive.  \"K\" would\n  exclude MochiKit.js or any file with \"K\" in its name.  \"big_scripts\" would\n  exclude any file in the big_scripts url/folder.\n\n\nDownload\n**********************", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://zif.svn.sourceforge.net/viewvc/zif/zif.jsmin", "keywords": "jsmin wsgi middleware zope3", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "zif.jsmin", "package_url": "https://pypi.org/project/zif.jsmin/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/zif.jsmin/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://zif.svn.sourceforge.net/viewvc/zif/zif.jsmin"}, "release_url": "https://pypi.org/project/zif.jsmin/0.2/", "requires_dist": null, "requires_python": null, "summary": "WSGI middleware for javascript compression.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>See \u2018src/zif/jsmin/README.txt\u2019 for more information.</p>\n<div id=\"releases\">\n<h2>Releases</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1 (2007/04/13)</span></h2>\n<p>Initial release.</p>\n</div>\n<div id=\"detailed-documentation\">\n<h2>Detailed Documentation</h2>\n<h2 id=\"id2\"><span class=\"section-subtitle\">zif.jsmin</span></h2>\n<p>This is a wsgi middleware application intended for use with paste.deploy,\nzope.paste, and zope3.</p>\n<p>It serves as a wsgi filter to \u201cminimize\u201d javascript for a zope3 application.</p>\n<p><em>This can be slow.</em>  You probably do not want to run this in production unless\nyou have (small) dynamically-generated scripts and css.  But it can be useful\nfor generating minimized javascript or css for resources.  Those larger files\ncan then be excluded from on-the-fly minimization.</p>\n<div id=\"dependencies\">\n<h3>Dependencies</h3>\n<p>For zope3, jsmin requires Sidnei da Silva\u2019s zope.paste.</p>\n<p>zope.paste is available at <a href=\"http://svn.zope.org/zope.paste/trunk/\" rel=\"nofollow\">http://svn.zope.org/zope.paste/trunk/</a></p>\n<pre>cd [path.to.zope3.src.directory]/zope\nsvn co http://svn.zope.org/zope.paste/trunk/ paste\n</pre>\n<p>Instructions for zope.paste are at  <a href=\"http://awkly.org/\" rel=\"nofollow\">http://awkly.org/</a></p>\n<p>zope.paste requires paste.deploy.  paste.deploy can be obtained from the cheese\nshop.  Presuming you have setuptools installed,</p>\n<pre>sudo easy_install.py PasteDeploy\n</pre>\n<p>This (zif.jsmin) package can be unzipped and installed anywhere on the Python path.</p>\n</div>\n<div id=\"setup\">\n<h3>Setup</h3>\n<p>Follow Sidnei\u2019s instructions for setting up zope.paste.  It involves putting the\nusual zope.paste-configure.zcml file in [zope3 instance]/etc/site-packages.\nThere is also a parameter to change in [zope3 instance]/etc/zope.conf.\nThe new twist is a paste.ini file in [zope3 instance]/etc</p>\n<p>An example paste.ini file looks like:</p>\n<pre>[pipeline:Paste.Main]\npipeline = gzipper jsmin main\n\n[app:main]\npaste.app_factory = zope.paste.application:zope_publisher_app_factory\n\n[filter:gzipper]\npaste.filter_factory=gzipper.gzipper:filter_factory\ncompress_level=6\nnocompress=jp gz zip\ntempfile=0\n\n[filter:jsmin]\npaste.filter_factory=jsmin.jsmin:filter_factory\ncompress_level=safe\ncompress_types=js css\nexclude=MochiKit\n</pre>\n<p>Configuration</p>\n<p>The paste.ini file above shows examples of the configuration options for jsmin.</p>\n<ul>\n<li><strong>compress_level</strong> is the degree of minimization desired.  \u201csafe\u201d is often good\nenough; it mainly removes spaces.  \u201cfull\u201d will additionally munge variable\nnames in javascript to make a more compact (and even less readable) module.\nDefault is \u201csafe\u201d</li>\n<li><strong>compress_types</strong> determines whether to compress javascript or css or both.\nFor both, use \u201ccss js\u201d, which is the default.  For just one, specify \u201ccss\u201d or\n\u201cjs\u201d</li>\n<li><strong>exclude</strong> is for excluding large files that presumably are already compressed.\nYou may exclude on several matches; just put a space between them.  The module\nlooks for consecutive characters in the url, and is case-sensitive.  \u201cK\u201d would\nexclude MochiKit.js or any file with \u201cK\u201d in its name.  \u201cbig_scripts\u201d would\nexclude any file in the big_scripts url/folder.</li>\n</ul>\n</div>\n</div>\n<div id=\"download\">\n<h2>Download</h2>\n</div>\n\n          </div>"}, "last_serial": 802287, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "b7b4ccbb8ffc43b53674b6d05e7055fe", "sha256": "c84c08dddc5c9929659d4d379fd6682b23246f96fb0f56db7c52b695726626c7"}, "downloads": -1, "filename": "zif.jsmin-0.2-py2.4.egg", "has_sig": false, "md5_digest": "b7b4ccbb8ffc43b53674b6d05e7055fe", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 19576, "upload_time": "2007-04-14T01:42:27", "upload_time_iso_8601": "2007-04-14T01:42:27Z", "url": "https://files.pythonhosted.org/packages/95/02/a49fd4929920ece600b7602ec0b9bf6eaf246d8d37ba7b9ead2398d00606/zif.jsmin-0.2-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "dfa170d79767a52821424e223d8f6230", "sha256": "5928b62371bf33081b3d7f8f44d8cb4f18049a98f0e753fe3337b22af39b69e5"}, "downloads": -1, "filename": "zif.jsmin-0.2.tar.gz", "has_sig": false, "md5_digest": "dfa170d79767a52821424e223d8f6230", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10832, "upload_time": "2007-04-14T01:42:28", "upload_time_iso_8601": "2007-04-14T01:42:28Z", "url": "https://files.pythonhosted.org/packages/50/c1/c698e94c2eab314e495f426cf74b4999fb31eb633e4a98df07b73495e44e/zif.jsmin-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b7b4ccbb8ffc43b53674b6d05e7055fe", "sha256": "c84c08dddc5c9929659d4d379fd6682b23246f96fb0f56db7c52b695726626c7"}, "downloads": -1, "filename": "zif.jsmin-0.2-py2.4.egg", "has_sig": false, "md5_digest": "b7b4ccbb8ffc43b53674b6d05e7055fe", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 19576, "upload_time": "2007-04-14T01:42:27", "upload_time_iso_8601": "2007-04-14T01:42:27Z", "url": "https://files.pythonhosted.org/packages/95/02/a49fd4929920ece600b7602ec0b9bf6eaf246d8d37ba7b9ead2398d00606/zif.jsmin-0.2-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "dfa170d79767a52821424e223d8f6230", "sha256": "5928b62371bf33081b3d7f8f44d8cb4f18049a98f0e753fe3337b22af39b69e5"}, "downloads": -1, "filename": "zif.jsmin-0.2.tar.gz", "has_sig": false, "md5_digest": "dfa170d79767a52821424e223d8f6230", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10832, "upload_time": "2007-04-14T01:42:28", "upload_time_iso_8601": "2007-04-14T01:42:28Z", "url": "https://files.pythonhosted.org/packages/50/c1/c698e94c2eab314e495f426cf74b4999fb31eb633e4a98df07b73495e44e/zif.jsmin-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:32 2020"}