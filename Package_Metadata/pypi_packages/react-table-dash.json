{"info": {"author": "Mauri Larikka <mauri.larikka@gmail.com>", "author_email": "", "bugtrack_url": null, "classifiers": ["Framework :: Dash"], "description": "\n# ReactTableDash\n\n## Installation\n\n```\npip install react-table-dash\n```\n\n## Usage\n\nExample app\n\n```\nimport dash\nfrom dash.dependencies import Input, Output, State\nimport dash_html_components as html\nimport numpy as np\nimport pandas as pd\nimport dash_bootstrap_components as dbc\nimport dash_core_components as dcc\nfrom react_table_dash import ReactTableDash\nfrom datetime import datetime\n\napp = dash.Dash(__name__, external_stylesheets=[dbc.themes.BOOTSTRAP])\napp.config.suppress_callback_exceptions = True\n\nN_COLS, N_ROWS = 3, 1000\n\ndef random_data(n_cols, n_rows):\n    # Generate dummy data\n    alphabets = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    df = pd.DataFrame({alphabets[i]: np.random.rand(n_rows).tolist() for i in range(n_cols)})\n    if n_cols > 1:\n        df.loc[:, 'B'] = df.B - 0.5\n\n    data = df.to_dict(orient='records')\n    columns = [{'Header': 'Column {}'.format(c), 'accessor': c} for c in alphabets[:n_cols]]\n\n    # Add custom column\n    columns.append({\n        'Header': 'Progress A',\n        'accessor': 'A',\n        'customType': {\n            'type': 'progressBar',\n            'thresholds': [0.2, 0.4, 0.6, 0.8],\n            'colors': ['#2dc937', '#99c140', '#e7b416', '#db7b2b', '#cc3232']\n        }\n    })\n\n    columns.append({\n        'Header': 'Decimal A',\n        'accessor': 'A',\n        'customType': {\n            'type': 'decimal',\n            'decimalPlaces': 2\n        }\n    })\n\n    columns.insert(0, {\n        'Header': 'Details',\n        'width': 80,\n        'customType': {'type': 'button', 'label': 'Details'}\n    })\n\n    return data, columns\n\ncol_slider = dbc.FormGroup([\n    dbc.Label(\"Columns\", html_for=\"cols\"),\n    dcc.Slider(id=\"n_cols\", min=1, max=10, step=1, value=N_COLS),\n])\n\nrow_slider = dbc.FormGroup([\n    dbc.Label(\"Rows\", html_for=\"rows\"),\n    dcc.Slider(id=\"n_rows\", min=100, max=10000, step=100, value=N_ROWS),\n])\n\nrefresh_btn = dbc.Button('Refresh', id='refresh-btn', size='sm')\ndev_btn = dbc.Button('Dev', id='dev-btn', size='sm')\n\n\ndata, columns = random_data(N_COLS, N_ROWS)\ntext = 'columns = {}, rows = {}'.format(N_COLS, N_ROWS)\ntbl = ReactTableDash(\n    id='tbl',\n    data=data,\n    columns=columns,\n    defaultPageSize=100,\n    className=\"-striped -highlight\",\n    showPagination=True,\n    showPaginationTop=False,\n    showPaginationBottom=True,\n    showPageSizeOptions=True,\n    pageSizeOptions=[10, 20, 25, 50, 100, 500],\n    style={'height': '400px'},\n    filterable=True\n)\n\napp.layout = html.Div([\n        dbc.CardDeck([\n            dbc.Card([\n                dbc.CardBody([\n                    col_slider,\n                    row_slider,\n                    refresh_btn\n                ])\n            ]),\n            dbc.Card([\n                dbc.CardHeader([\n                    'Info'\n                ]),\n                dbc.CardBody([\n                    html.Div(text, id='output'),\n                    html.Div(id='output2')\n                ])\n            ])\n        ]),\n    dbc.Row([\n        dbc.Col([\n            html.Div(tbl, id='tbl-container')\n        ], width=12),\n    ], id='main-container'),\n])\n\n@app.callback(Output('output2', 'children'),\n            [Input('tbl', 'click')])\ndef output2(tbl_value):\n    return 'Clicked row index: {}'.format(tbl_value)\n\n@app.callback([Output('tbl', 'data'), Output('tbl', 'columns'), Output('output', 'children')],\n            [Input('refresh-btn', 'n_clicks')],\n            [State('n_cols', 'value'),\n             State('n_rows', 'value')])\ndef load_data(n_clicks, n_cols, n_rows):\n    data, columns = random_data(n_cols, n_rows)\n    return data, columns, 'columns = {}, rows = {}'.format(n_cols, n_rows)\n\nif __name__ == '__main__':\n    app.run_server(debug=True)\n\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "react-table-dash", "package_url": "https://pypi.org/project/react-table-dash/", "platform": "", "project_url": "https://pypi.org/project/react-table-dash/", "project_urls": null, "release_url": "https://pypi.org/project/react-table-dash/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "Dash component based on React Table v6", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ReactTableDash</h1>\n<h2>Installation</h2>\n<pre><code>pip install react-table-dash\n</code></pre>\n<h2>Usage</h2>\n<p>Example app</p>\n<pre><code>import dash\nfrom dash.dependencies import Input, Output, State\nimport dash_html_components as html\nimport numpy as np\nimport pandas as pd\nimport dash_bootstrap_components as dbc\nimport dash_core_components as dcc\nfrom react_table_dash import ReactTableDash\nfrom datetime import datetime\n\napp = dash.Dash(__name__, external_stylesheets=[dbc.themes.BOOTSTRAP])\napp.config.suppress_callback_exceptions = True\n\nN_COLS, N_ROWS = 3, 1000\n\ndef random_data(n_cols, n_rows):\n    # Generate dummy data\n    alphabets = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    df = pd.DataFrame({alphabets[i]: np.random.rand(n_rows).tolist() for i in range(n_cols)})\n    if n_cols &gt; 1:\n        df.loc[:, 'B'] = df.B - 0.5\n\n    data = df.to_dict(orient='records')\n    columns = [{'Header': 'Column {}'.format(c), 'accessor': c} for c in alphabets[:n_cols]]\n\n    # Add custom column\n    columns.append({\n        'Header': 'Progress A',\n        'accessor': 'A',\n        'customType': {\n            'type': 'progressBar',\n            'thresholds': [0.2, 0.4, 0.6, 0.8],\n            'colors': ['#2dc937', '#99c140', '#e7b416', '#db7b2b', '#cc3232']\n        }\n    })\n\n    columns.append({\n        'Header': 'Decimal A',\n        'accessor': 'A',\n        'customType': {\n            'type': 'decimal',\n            'decimalPlaces': 2\n        }\n    })\n\n    columns.insert(0, {\n        'Header': 'Details',\n        'width': 80,\n        'customType': {'type': 'button', 'label': 'Details'}\n    })\n\n    return data, columns\n\ncol_slider = dbc.FormGroup([\n    dbc.Label(\"Columns\", html_for=\"cols\"),\n    dcc.Slider(id=\"n_cols\", min=1, max=10, step=1, value=N_COLS),\n])\n\nrow_slider = dbc.FormGroup([\n    dbc.Label(\"Rows\", html_for=\"rows\"),\n    dcc.Slider(id=\"n_rows\", min=100, max=10000, step=100, value=N_ROWS),\n])\n\nrefresh_btn = dbc.Button('Refresh', id='refresh-btn', size='sm')\ndev_btn = dbc.Button('Dev', id='dev-btn', size='sm')\n\n\ndata, columns = random_data(N_COLS, N_ROWS)\ntext = 'columns = {}, rows = {}'.format(N_COLS, N_ROWS)\ntbl = ReactTableDash(\n    id='tbl',\n    data=data,\n    columns=columns,\n    defaultPageSize=100,\n    className=\"-striped -highlight\",\n    showPagination=True,\n    showPaginationTop=False,\n    showPaginationBottom=True,\n    showPageSizeOptions=True,\n    pageSizeOptions=[10, 20, 25, 50, 100, 500],\n    style={'height': '400px'},\n    filterable=True\n)\n\napp.layout = html.Div([\n        dbc.CardDeck([\n            dbc.Card([\n                dbc.CardBody([\n                    col_slider,\n                    row_slider,\n                    refresh_btn\n                ])\n            ]),\n            dbc.Card([\n                dbc.CardHeader([\n                    'Info'\n                ]),\n                dbc.CardBody([\n                    html.Div(text, id='output'),\n                    html.Div(id='output2')\n                ])\n            ])\n        ]),\n    dbc.Row([\n        dbc.Col([\n            html.Div(tbl, id='tbl-container')\n        ], width=12),\n    ], id='main-container'),\n])\n\n@app.callback(Output('output2', 'children'),\n            [Input('tbl', 'click')])\ndef output2(tbl_value):\n    return 'Clicked row index: {}'.format(tbl_value)\n\n@app.callback([Output('tbl', 'data'), Output('tbl', 'columns'), Output('output', 'children')],\n            [Input('refresh-btn', 'n_clicks')],\n            [State('n_cols', 'value'),\n             State('n_rows', 'value')])\ndef load_data(n_clicks, n_cols, n_rows):\n    data, columns = random_data(n_cols, n_rows)\n    return data, columns, 'columns = {}, rows = {}'.format(n_cols, n_rows)\n\nif __name__ == '__main__':\n    app.run_server(debug=True)\n\n</code></pre>\n\n          </div>"}, "last_serial": 6690178, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7b4f2128e9218e5e77f00f289c3be3d9", "sha256": "971f9a448c154f56fa00a0c8b9b5cd47c1c022a1e20c655e1eae2d3024401a34"}, "downloads": -1, "filename": "react_table_dash-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7b4f2128e9218e5e77f00f289c3be3d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 147415, "upload_time": "2020-02-23T16:22:59", "upload_time_iso_8601": "2020-02-23T16:22:59.088213Z", "url": "https://files.pythonhosted.org/packages/1e/21/6c343806d00e19558d74e819d93e3cc1f397a58d06b865f905f8be7fa587/react_table_dash-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e352acceb9cc6afc224f1c2dd618581", "sha256": "39ca7f9d4671e955b0f2066b4217b23b06fd9c1ae84df5636b6d9efb3eea7449"}, "downloads": -1, "filename": "react_table_dash-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5e352acceb9cc6afc224f1c2dd618581", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 146961, "upload_time": "2020-02-23T16:23:01", "upload_time_iso_8601": "2020-02-23T16:23:01.361364Z", "url": "https://files.pythonhosted.org/packages/b6/87/163fb3b7f1d463a90d20a02522d644e36807912a23757d0c4ce4198c19bd/react_table_dash-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "39655e540ba67b7bc8c4a8b3ce0a645f", "sha256": "f109f700b8c302ce334a2f0880d025c156203f5202ce8059cda6f0c7bfe0d6b5"}, "downloads": -1, "filename": "react_table_dash-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "39655e540ba67b7bc8c4a8b3ce0a645f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 148845, "upload_time": "2020-02-23T16:35:02", "upload_time_iso_8601": "2020-02-23T16:35:02.250033Z", "url": "https://files.pythonhosted.org/packages/fd/a9/64fd3cce9a287fafea5acdab88512956a3f50e53f9099071484522f1a4a2/react_table_dash-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5684958dd18c7ca60b33fcab04e77d5c", "sha256": "b9d6bdf5e9e5cb742254e7de3b51d42a96e710a506f8eca56603b25925c41fe6"}, "downloads": -1, "filename": "react_table_dash-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5684958dd18c7ca60b33fcab04e77d5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 148946, "upload_time": "2020-02-23T16:35:03", "upload_time_iso_8601": "2020-02-23T16:35:03.494129Z", "url": "https://files.pythonhosted.org/packages/94/55/f83fc5fb00e306897ec30f302e8e5ba8eba77d12428841218ebdc3801510/react_table_dash-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "b9731e136a71f69f9b5474b12cda1ba9", "sha256": "c9bf56249f4756e8c2217e2284d6e3359d989d435b7336d078b9a7725ffd3baf"}, "downloads": -1, "filename": "react_table_dash-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b9731e136a71f69f9b5474b12cda1ba9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 148756, "upload_time": "2020-02-24T18:16:34", "upload_time_iso_8601": "2020-02-24T18:16:34.131408Z", "url": "https://files.pythonhosted.org/packages/30/b4/b80f1b91130109ae4c87589c6fb165f932d23d6ce235ec77052d38c5d4a4/react_table_dash-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "beb6560880ecb167eb080876f9d95064", "sha256": "013309add132fc038b25c8891d6dd702fc017d9fdcf05c2ba3894388fd13dfd1"}, "downloads": -1, "filename": "react_table_dash-0.0.3.tar.gz", "has_sig": false, "md5_digest": "beb6560880ecb167eb080876f9d95064", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 148850, "upload_time": "2020-02-24T18:16:35", "upload_time_iso_8601": "2020-02-24T18:16:35.683060Z", "url": "https://files.pythonhosted.org/packages/0d/47/0756835cc51cbb07e892f7f7839955a62f4a0aa2db4be545c4186a32e795/react_table_dash-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b9731e136a71f69f9b5474b12cda1ba9", "sha256": "c9bf56249f4756e8c2217e2284d6e3359d989d435b7336d078b9a7725ffd3baf"}, "downloads": -1, "filename": "react_table_dash-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b9731e136a71f69f9b5474b12cda1ba9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 148756, "upload_time": "2020-02-24T18:16:34", "upload_time_iso_8601": "2020-02-24T18:16:34.131408Z", "url": "https://files.pythonhosted.org/packages/30/b4/b80f1b91130109ae4c87589c6fb165f932d23d6ce235ec77052d38c5d4a4/react_table_dash-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "beb6560880ecb167eb080876f9d95064", "sha256": "013309add132fc038b25c8891d6dd702fc017d9fdcf05c2ba3894388fd13dfd1"}, "downloads": -1, "filename": "react_table_dash-0.0.3.tar.gz", "has_sig": false, "md5_digest": "beb6560880ecb167eb080876f9d95064", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 148850, "upload_time": "2020-02-24T18:16:35", "upload_time_iso_8601": "2020-02-24T18:16:35.683060Z", "url": "https://files.pythonhosted.org/packages/0d/47/0756835cc51cbb07e892f7f7839955a62f4a0aa2db4be545c4186a32e795/react_table_dash-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:30 2020"}