{"info": {"author": "Adam Bishop", "author_email": "adam@omega.org.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.6"], "description": "A script to generate SNMPv3 keys as detailed by rfc3414 (passphrases\nexpanded with a kdf, then hashed with the engine id). All key generation\nis done using the new cryptographically secure *secrets* library.\n\nAs I wrote this with ESXi in mind, it also emits a string suitable for\nconfiguring the SNMP daemon via esxcli/PowerCLI, but the hashes are\nstandard and compatible with other SNMPv3 implementations.\n\nWith no arguments, it will generate an authentication and privacy\npassphrase with associated random engine ID in text form. *--json* will\nformat the output as json.\n\nThe script is fully idempotent; if you take the parameters it generates\nrandomly and re-enter them, you will get the same output a second time.\n\nDependencies\n============\n\nRuntime: Python 3.6 or greater.\n\nSample Output\n=============\n\nStandard\n--------\n\n::\n\n    User: observium\n    Auth: gaYA82XVtNaf3WLwRgoIs544ghP6f80S / f78359764ca382922fa382cf884e588031de575a\n    Priv: H5XEtRpxXVaGzXU5i2rFwPnYGr8SEzTp / 31a001a56a225fdfc1916bd60190405a1aa22ff0\n    Engine: 7ae1b0ff0aa2f3950566d3de2274d05a\n    ESXi USM String: observium/f78359764ca382922fa382cf884e588031de575a/31a001a56a225fdfc1916bd60190405a1aa22ff0/authpriv\n\nJSON\n----\n\n::\n\n    {\n      \"user\": \"observium\",\n      \"engine\": \"b2a50167b7c8512ddfc9d5765a3490af\",\n      \"phrases\": {\n        \"auth\": \"71rOhjfj6QVSy2mw5tBo7PueZ8KWSv60\",\n        \"priv\": \"xwsvzht8NEcuwAlEpUKzMxKFWeH72sK9\"\n      },\n      \"hashes\": {\n        \"auth\": \"fa0d5249293404502f9953b9514d0636a96c2cbc\",\n        \"priv\": \"cccbdcfa603817df340514ecc22dfae8c4c412e8\"\n      },\n      \"esxi\": \"observium/fa0d5249293404502f9953b9514d0636a96c2cbc/cccbdcfa603817df340514ecc22dfae8c4c412e8/authpriv\"}\n\nIt should go without saying, but **DO NOT** use the engine id or\npassphrases in the samples.\n\nUsage\n=====\n\n::\n\n    usage: snmpv3-hashgen [-h] [--auth AUTH] [--priv PRIV] [--engine ENGINE]\n                          [--user USER] [--mode {authpriv,auth,priv,none}]\n                          [--hash {md5,sha1}] [--json]\n\n    Convert an SNMPv3 auth or priv passphrase to sha1 or md5 hashes\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --auth AUTH           Authentication passphrase to be derived as a string\n      --priv PRIV           Privacy passphrase to be derived as a string\n      --engine ENGINE       Engine ID as hex string\n      --user USER           SNMPv3 USM username (default \"observium\")\n      --mode {authpriv,auth,priv,none}\n                            SNMPv3 mode (default \"authpriv\")\n      --hash {md5,sha1}     Hash algorithm to use (default \"sha1\")\n      --json                Emit output as json", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TheMysteriousX/SNMPv3-Hash-Generator", "keywords": "", "license": "Apache Software License", "maintainer": "", "maintainer_email": "", "name": "SNMPv3-Hash-Generator", "package_url": "https://pypi.org/project/SNMPv3-Hash-Generator/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/SNMPv3-Hash-Generator/", "project_urls": {"Homepage": "https://github.com/TheMysteriousX/SNMPv3-Hash-Generator"}, "release_url": "https://pypi.org/project/SNMPv3-Hash-Generator/0.2/", "requires_dist": null, "requires_python": "", "summary": "Generates SNMPv3 hashes as described in rfc3414 suitable for use with ESXi and other SNMP daemons", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A script to generate SNMPv3 keys as detailed by rfc3414 (passphrases\nexpanded with a kdf, then hashed with the engine id). All key generation\nis done using the new cryptographically secure <em>secrets</em> library.</p>\n<p>As I wrote this with ESXi in mind, it also emits a string suitable for\nconfiguring the SNMP daemon via esxcli/PowerCLI, but the hashes are\nstandard and compatible with other SNMPv3 implementations.</p>\n<p>With no arguments, it will generate an authentication and privacy\npassphrase with associated random engine ID in text form. <em>\u2013json</em> will\nformat the output as json.</p>\n<p>The script is fully idempotent; if you take the parameters it generates\nrandomly and re-enter them, you will get the same output a second time.</p>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>Runtime: Python 3.6 or greater.</p>\n</div>\n<div id=\"sample-output\">\n<h2>Sample Output</h2>\n<div id=\"standard\">\n<h3>Standard</h3>\n<pre>User: observium\nAuth: gaYA82XVtNaf3WLwRgoIs544ghP6f80S / f78359764ca382922fa382cf884e588031de575a\nPriv: H5XEtRpxXVaGzXU5i2rFwPnYGr8SEzTp / 31a001a56a225fdfc1916bd60190405a1aa22ff0\nEngine: 7ae1b0ff0aa2f3950566d3de2274d05a\nESXi USM String: observium/f78359764ca382922fa382cf884e588031de575a/31a001a56a225fdfc1916bd60190405a1aa22ff0/authpriv\n</pre>\n</div>\n<div id=\"json\">\n<h3>JSON</h3>\n<pre>{\n  \"user\": \"observium\",\n  \"engine\": \"b2a50167b7c8512ddfc9d5765a3490af\",\n  \"phrases\": {\n    \"auth\": \"71rOhjfj6QVSy2mw5tBo7PueZ8KWSv60\",\n    \"priv\": \"xwsvzht8NEcuwAlEpUKzMxKFWeH72sK9\"\n  },\n  \"hashes\": {\n    \"auth\": \"fa0d5249293404502f9953b9514d0636a96c2cbc\",\n    \"priv\": \"cccbdcfa603817df340514ecc22dfae8c4c412e8\"\n  },\n  \"esxi\": \"observium/fa0d5249293404502f9953b9514d0636a96c2cbc/cccbdcfa603817df340514ecc22dfae8c4c412e8/authpriv\"}\n</pre>\n<p>It should go without saying, but <strong>DO NOT</strong> use the engine id or\npassphrases in the samples.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>usage: snmpv3-hashgen [-h] [--auth AUTH] [--priv PRIV] [--engine ENGINE]\n                      [--user USER] [--mode {authpriv,auth,priv,none}]\n                      [--hash {md5,sha1}] [--json]\n\nConvert an SNMPv3 auth or priv passphrase to sha1 or md5 hashes\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --auth AUTH           Authentication passphrase to be derived as a string\n  --priv PRIV           Privacy passphrase to be derived as a string\n  --engine ENGINE       Engine ID as hex string\n  --user USER           SNMPv3 USM username (default \"observium\")\n  --mode {authpriv,auth,priv,none}\n                        SNMPv3 mode (default \"authpriv\")\n  --hash {md5,sha1}     Hash algorithm to use (default \"sha1\")\n  --json                Emit output as json\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2802292, "releases": {"0.1": [], "0.2": [{"comment_text": "", "digests": {"md5": "6447b203df549d882d3dbec6e74f8db2", "sha256": "738edc90bac237d1030f456656044f58082bf618a57376c8329f5652a7e6f06e"}, "downloads": -1, "filename": "SNMPv3_Hash_Generator-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6447b203df549d882d3dbec6e74f8db2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7381, "upload_time": "2017-04-13T20:42:25", "upload_time_iso_8601": "2017-04-13T20:42:25.273773Z", "url": "https://files.pythonhosted.org/packages/ea/c1/a8e935bb777f0bc40095ec40e537aaa17bfa34ec1ff444ecb69ec8ed5f2b/SNMPv3_Hash_Generator-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d65eb680e1a07c8e934a86214b03600", "sha256": "11ea3433993923ace28e0cff42cd7f242ac357892aac914345590343aea599b0"}, "downloads": -1, "filename": "SNMPv3 Hash Generator-0.2.tar.gz", "has_sig": false, "md5_digest": "9d65eb680e1a07c8e934a86214b03600", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4198, "upload_time": "2017-04-13T20:44:25", "upload_time_iso_8601": "2017-04-13T20:44:25.984397Z", "url": "https://files.pythonhosted.org/packages/74/59/9f60d2fb7027efc70306649acd8524b19b30125f90f2180e027936878a8f/SNMPv3%20Hash%20Generator-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6447b203df549d882d3dbec6e74f8db2", "sha256": "738edc90bac237d1030f456656044f58082bf618a57376c8329f5652a7e6f06e"}, "downloads": -1, "filename": "SNMPv3_Hash_Generator-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6447b203df549d882d3dbec6e74f8db2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7381, "upload_time": "2017-04-13T20:42:25", "upload_time_iso_8601": "2017-04-13T20:42:25.273773Z", "url": "https://files.pythonhosted.org/packages/ea/c1/a8e935bb777f0bc40095ec40e537aaa17bfa34ec1ff444ecb69ec8ed5f2b/SNMPv3_Hash_Generator-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d65eb680e1a07c8e934a86214b03600", "sha256": "11ea3433993923ace28e0cff42cd7f242ac357892aac914345590343aea599b0"}, "downloads": -1, "filename": "SNMPv3 Hash Generator-0.2.tar.gz", "has_sig": false, "md5_digest": "9d65eb680e1a07c8e934a86214b03600", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4198, "upload_time": "2017-04-13T20:44:25", "upload_time_iso_8601": "2017-04-13T20:44:25.984397Z", "url": "https://files.pythonhosted.org/packages/74/59/9f60d2fb7027efc70306649acd8524b19b30125f90f2180e027936878a8f/SNMPv3%20Hash%20Generator-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:19 2020"}