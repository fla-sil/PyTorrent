{"info": {"author": "Zenobius Jiricek", "author_email": "airtonix@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP"], "description": "## djangoCMS/Shop Configurable Products Extension\r\n\r\nThis simple extension provides some plugins to display things about your\r\n[django-shop configurable products](https://bitbucket.org/zeus/django-shop-configurableproduct).\r\n\r\n\r\n## Requirements\r\n\r\n* django-shop\r\n* django-cms\r\n* django-shop-configurableproduct\r\n* And all the requirements the above three projects depend on.\r\n\r\n\r\n## Installation\r\n\r\n1. make sure you are using a python virtual environment\r\n\r\n    virtualenv ~/Dev/virtualenv/projectname\r\n    . ~/Dev/virtualenv/projectname/bin/activate\r\n    cd ~/Dev/projects/projectname/\r\n\r\n2. install it from pypi\r\n\r\n    pip install cmsplugin-configurableproduct\r\n\r\n3. or, install it from github\r\n\r\n    pip install git+https://github.com/airtonix/cmsplugin-configurableproduct\r\n\r\n\r\n## Override Template\r\n\r\nChoosing a template in the administration interface means that you\r\npopulate the following two relative paths (to any of your app template dirs)\r\nwith templates you desire to be made available.\r\n\r\n* cmsplugin_configurableproduct/product-types\r\n* cmsplugin_configurableproduct/product-list\r\n\r\nAny .html file that doesn't contain the word 'base' will be presented in\r\nthe template selector combo dropdown in the admin interface.\r\n\r\nFor example, if your django project was at :\r\n\r\n    ~/Dev/Django/MyProjectName/\r\n\r\nAnd you had a django application named `SomethingSomethingSomething` at :\r\n\r\n    ~/Dev/Django/MyProjectName/SomethingSomethingSomething/\r\n\r\nThen templates for this plugin could be found at :\r\n\r\n    ~/Dev/Django/MyProjectName/SomethingSomethingSomething/templates/cmsplugin_configurableproduct/product-types/*.html\r\n    ~/Dev/Django/MyProjectName/SomethingSomethingSomething/templates/cmsplugin_configurableproduct/product-list/*.html\r\n\r\nIn fact, anywhere django looks for templates, you can place the following tree :\r\n\r\n    /cmsplugin_configurableproduct\r\n        /product-types\r\n            /*.html\r\n        /product-list\r\n            /*.html\r\n\r\n\r\n### Customising Templates\r\n\r\nTemplates in all groups are provided the context :\r\n\r\na CMSPlugin has many useful attributes for you to use, the main one\r\nis `plugin.instance` a reference to the settings model.\r\n\r\n>     plugin' :\r\n>         An instance of CMSPlugin, which itself provides reference to either\r\n>         of the settings models as outlined below.\r\n\r\n#### base.html\r\n\r\nbase.html in the `cmsplugin_configurableproduct` directory is used to load the\r\nselected template chosen in the administration interface.\r\n\r\n\r\n#### ./product-types/*.html\r\n\r\ntemplates here are provided the context :\r\n\r\n>     plugin.instance\r\n>          categories\r\n>               Chosen categories for this instance,\r\n>\r\n>          show_category_icon\r\n>               For when configurable_product.ProductType stores an image.\r\n>\r\n>          hide_empty_categories\r\n>               Self explanitory, effected in the cms_plugin.\r\n>\r\n>          template\r\n>               Chosen template.\r\n>\r\n>     Types\r\n>        A list of configurable_product.ProductType(s)\r\n\r\n\r\n#### ./product-list/*.html\r\n\r\ntemplates here are provided the context :\r\n\r\n\r\n>     plugin.instance\r\n>          categories\r\n>               Chosen categories for this instance,\r\n>\r\n>          hide_empty_categories\r\n>               Self explanitory, effected in the cms_plugin.\r\n>\r\n>          template\r\n>               Chosen template.\r\n>\r\n>          filter_product_attributes\r\n>               Comma separated list of CProductField names on which to\r\n>               effect a filter action of either Filter, or Exclude.\r\n>\r\n>          filter_action\r\n>               The action to take on the filter attributes listed above.\r\n>\r\n>     Products\r\n>        A list of configurable_product.CProduct(s)\r\n\r\n\r\n\r\n## Contributions\r\n\r\nanyone is free to contribute, simply submit a merge request at\r\ngithub : http://github.com/airtonix/cmsplugin-configurableproduct\r\n\r\n\r\n## Todo\r\n\r\nprovide option to manipulate menu choices:\r\n\r\n* Refine the product filter.\r\n* Provide better default templates.\r\n* Allow selecting/use of snippets for menu templates?", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/airtonix/cmsplugin-configurableproduct", "keywords": "django-cms,plugin,django-shop,product", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "cmsplugin-configurableproduct", "package_url": "https://pypi.org/project/cmsplugin-configurableproduct/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cmsplugin-configurableproduct/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/airtonix/cmsplugin-configurableproduct"}, "release_url": "https://pypi.org/project/cmsplugin-configurableproduct/0.0.11/", "requires_dist": null, "requires_python": null, "summary": "DjangoCMS plugin for django-shop-configurableproduct", "version": "0.0.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            ## djangoCMS/Shop Configurable Products Extension\n<br>\n<br>This simple extension provides some plugins to display things about your\n<br>[django-shop configurable products](https://bitbucket.org/zeus/django-shop-configurableproduct).\n<br>\n<br>\n<br>## Requirements\n<br>\n<br>* django-shop\n<br>* django-cms\n<br>* django-shop-configurableproduct\n<br>* And all the requirements the above three projects depend on.\n<br>\n<br>\n<br>## Installation\n<br>\n<br>1. make sure you are using a python virtual environment\n<br>\n<br>    virtualenv ~/Dev/virtualenv/projectname\n<br>    . ~/Dev/virtualenv/projectname/bin/activate\n<br>    cd ~/Dev/projects/projectname/\n<br>\n<br>2. install it from pypi\n<br>\n<br>    pip install cmsplugin-configurableproduct\n<br>\n<br>3. or, install it from github\n<br>\n<br>    pip install git+https://github.com/airtonix/cmsplugin-configurableproduct\n<br>\n<br>\n<br>## Override Template\n<br>\n<br>Choosing a template in the administration interface means that you\n<br>populate the following two relative paths (to any of your app template dirs)\n<br>with templates you desire to be made available.\n<br>\n<br>* cmsplugin_configurableproduct/product-types\n<br>* cmsplugin_configurableproduct/product-list\n<br>\n<br>Any .html file that doesn't contain the word 'base' will be presented in\n<br>the template selector combo dropdown in the admin interface.\n<br>\n<br>For example, if your django project was at :\n<br>\n<br>    ~/Dev/Django/MyProjectName/\n<br>\n<br>And you had a django application named `SomethingSomethingSomething` at :\n<br>\n<br>    ~/Dev/Django/MyProjectName/SomethingSomethingSomething/\n<br>\n<br>Then templates for this plugin could be found at :\n<br>\n<br>    ~/Dev/Django/MyProjectName/SomethingSomethingSomething/templates/cmsplugin_configurableproduct/product-types/*.html\n<br>    ~/Dev/Django/MyProjectName/SomethingSomethingSomething/templates/cmsplugin_configurableproduct/product-list/*.html\n<br>\n<br>In fact, anywhere django looks for templates, you can place the following tree :\n<br>\n<br>    /cmsplugin_configurableproduct\n<br>        /product-types\n<br>            /*.html\n<br>        /product-list\n<br>            /*.html\n<br>\n<br>\n<br>### Customising Templates\n<br>\n<br>Templates in all groups are provided the context :\n<br>\n<br>a CMSPlugin has many useful attributes for you to use, the main one\n<br>is `plugin.instance` a reference to the settings model.\n<br>\n<br>&gt;     plugin' :\n<br>&gt;         An instance of CMSPlugin, which itself provides reference to either\n<br>&gt;         of the settings models as outlined below.\n<br>\n<br>#### base.html\n<br>\n<br>base.html in the `cmsplugin_configurableproduct` directory is used to load the\n<br>selected template chosen in the administration interface.\n<br>\n<br>\n<br>#### ./product-types/*.html\n<br>\n<br>templates here are provided the context :\n<br>\n<br>&gt;     plugin.instance\n<br>&gt;          categories\n<br>&gt;               Chosen categories for this instance,\n<br>&gt;\n<br>&gt;          show_category_icon\n<br>&gt;               For when configurable_product.ProductType stores an image.\n<br>&gt;\n<br>&gt;          hide_empty_categories\n<br>&gt;               Self explanitory, effected in the cms_plugin.\n<br>&gt;\n<br>&gt;          template\n<br>&gt;               Chosen template.\n<br>&gt;\n<br>&gt;     Types\n<br>&gt;        A list of configurable_product.ProductType(s)\n<br>\n<br>\n<br>#### ./product-list/*.html\n<br>\n<br>templates here are provided the context :\n<br>\n<br>\n<br>&gt;     plugin.instance\n<br>&gt;          categories\n<br>&gt;               Chosen categories for this instance,\n<br>&gt;\n<br>&gt;          hide_empty_categories\n<br>&gt;               Self explanitory, effected in the cms_plugin.\n<br>&gt;\n<br>&gt;          template\n<br>&gt;               Chosen template.\n<br>&gt;\n<br>&gt;          filter_product_attributes\n<br>&gt;               Comma separated list of CProductField names on which to\n<br>&gt;               effect a filter action of either Filter, or Exclude.\n<br>&gt;\n<br>&gt;          filter_action\n<br>&gt;               The action to take on the filter attributes listed above.\n<br>&gt;\n<br>&gt;     Products\n<br>&gt;        A list of configurable_product.CProduct(s)\n<br>\n<br>\n<br>\n<br>## Contributions\n<br>\n<br>anyone is free to contribute, simply submit a merge request at\n<br>github : http://github.com/airtonix/cmsplugin-configurableproduct\n<br>\n<br>\n<br>## Todo\n<br>\n<br>provide option to manipulate menu choices:\n<br>\n<br>* Refine the product filter.\n<br>* Provide better default templates.\n<br>* Allow selecting/use of snippets for menu templates?\n          </div>"}, "last_serial": 787544, "releases": {"0.0.10": [], "0.0.11": [{"comment_text": "", "digests": {"md5": "768fdd4f18a4f6489d7b101da72208cd", "sha256": "28b2ef6e2cd2250aa4195b7895986f51eabd1516aa3312a3666d94900ac9428b"}, "downloads": -1, "filename": "cmsplugin-configurableproduct-0.0.11.tar.gz", "has_sig": false, "md5_digest": "768fdd4f18a4f6489d7b101da72208cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9951, "upload_time": "2011-12-31T15:14:08", "upload_time_iso_8601": "2011-12-31T15:14:08.166265Z", "url": "https://files.pythonhosted.org/packages/c0/69/4eccce3c3a6b69714ce055ac2a907ec5d16eb21d7486a96f893f8182b66a/cmsplugin-configurableproduct-0.0.11.tar.gz", "yanked": false}], "0.0.4": [], "0.0.5": [], "0.0.6": [], "0.0.7": [], "0.0.8": [], "0.0.9": []}, "urls": [{"comment_text": "", "digests": {"md5": "768fdd4f18a4f6489d7b101da72208cd", "sha256": "28b2ef6e2cd2250aa4195b7895986f51eabd1516aa3312a3666d94900ac9428b"}, "downloads": -1, "filename": "cmsplugin-configurableproduct-0.0.11.tar.gz", "has_sig": false, "md5_digest": "768fdd4f18a4f6489d7b101da72208cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9951, "upload_time": "2011-12-31T15:14:08", "upload_time_iso_8601": "2011-12-31T15:14:08.166265Z", "url": "https://files.pythonhosted.org/packages/c0/69/4eccce3c3a6b69714ce055ac2a907ec5d16eb21d7486a96f893f8182b66a/cmsplugin-configurableproduct-0.0.11.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:32 2020"}