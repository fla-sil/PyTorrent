{"info": {"author": "Julian Hammer", "author_email": "julian.hammer@fau.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Topic :: Scientific/Engineering", "Topic :: Software Development", "Topic :: Utilities"], "description": "pycachesim\n==========\n\nA single-core cache hierarchy simulator written in python.\n\n.. image:: https://travis-ci.org/RRZE-HPC/pycachesim.svg?branch=master\n    :target: https://travis-ci.org/RRZE-HPC/pycachesim?branch=master\n\nThe goal is to accurately simulate the caching (allocation/hit/miss/replace/evict) behavior of all cache levels found in modern processors. It is developed as a backend to `kerncraft <https://github.com/RRZE-HPC/kerncraft>`_, but is also planned to introduce a command line interface to replay LOAD/STORE instructions.\n\nCurrently supported features:\n * Inclusive cache hierarchies\n * LRU, MRU, RR and FIFO policies \n * N-way cache associativity\n * Write-allocate with write-back caches\n * Non-write-allocate with write-through caches\n * Write-combining with sub-blocking\n * Tracking of cacheline states (e.g., using dirty bits)\n * Speed (core is implemented in C)\n * Python 2.7+ and 3.4+ support, with no other dependencies\n\nPlanned features:\n * Report cachelines on all levels (preliminary support through ``backend.verbosity > 0``)\n * Report timeline of cache events (preliminary support through ``backend.verbosity > 0``)\n * Visualize events (html file?)\n * Interface to Valgrind Infrastructure (see `Lackey <http://valgrind.org/docs/manual/lk-manual.html>`_) for access history replay.\n * (uncertain) instruction cache\n * Optional classification into compulsory/capacity and conflict misses (by simulating other cache configurations in parallel)\n * (uncertain) multi-core support\n \nLicense\n-------\n\npycachesim is licensed under AGPLv3.\n\nUsage\n-----\n\n.. code-block:: python\n\n    from cachesim import CacheSimulator, Cache, MainMemory\n    \n    mem = MainMemory()\n    l3 = Cache(\"L3\", 20480, 16, 64, \"LRU\")  # 20MB: 20480 sets, 16-ways with cacheline size of 64 bytes\n    mem.load_to(l3)\n    mem.store_from(l3)\n    l2 = Cache(\"L2\", 512, 8, 64, \"LRU\", store_to=l3, load_from=l3)  # 256KB\n    l1 = Cache(\"L1\", 64, 8, 64, \"LRU\", store_to=l2, load_from=l2)  # 32KB\n    cs = CacheSimulator(l1, mem)\n    \n    cs.load(2342)  # Loads one byte from address 2342, should be a miss in all cache-levels\n    cs.store(512, length=8)  # Stores 8 bytes to addresses 512-519,\n                             # will also be a load miss (due to write-allocate)\n    cs.load(512, length=8)  # Loads from address 512 until (exclusive) 520 (eight bytes)\n    \n    cs.force_write_back()\n    cs.print_stats()\n    \nThis should return:\n\n.. code-block:: python\n\n    CACHE *******HIT******** *******MISS******* *******LOAD******* ******STORE*******\n       L1      1 (       8B)      2 (      65B)      3 (      73B)      1 (       8B)\n       L2      0 (       0B)      2 (     128B)      2 (     128B)      1 (      64B)\n       L3      0 (       0B)      2 (     128B)      2 (     128B)      1 (      64B)\n      MEM      2 (     128B)      0 (       0B)      2 (     128B)      1 (      64B)\n\nEach row refers to one memory-level, starting with L1 and ending with main memory. The 3 loads in L1 are the sum of all individual accesses to the cache-hierarchy. 1 (from first load) + 1 (from store with write-allocate) + 1 (from second load) = 3.\n\nThe 1 hit, is for bytes which were cached already. Internally the pycachesim operates on cache-lines, which all addresses get transformed to. Thus, the two misses throughout all cache-levels are actually two complete cache-lines and after the cache-line had been loaded the consecutive access to the same cache-line are handled as hits. That is also the reason why data sizes increase from L1 to L2. L1 is accessed byte-wise and L2 only with cache-line granularity.\n\nSo: hits, misses, stores and loads in L1 are byte-wise. Every other statistical information are based on cache-lines.\n\nWhen using victim caches, setting `victims_to` to the victim cache level, will cause pycachesim to forward unmodified cache-lines to this level on replacement. During a miss, victims_to is checked for availability and only hit if it the cache-line is found. This means, that load stats will equal hit stats in victim caches and misses should always be zero.\n\nComparison to other Cache Simulators\n====================================\n\nWhile searching for more versatile cache simulator for kerncraft, I stumbled across the following:\n\n * gem5_:\n   Very fully-featured full system simulator. Complex to extract only the memory subsystem\n * dineroIV_:\n   Nice and simple code, but does not support exclusive caches and not available under open source license.\n * cachegrind_:\n   Maintained and stable code of a well established open source project, but only supports inclusive first and last level caches.\n * callgrind_:\n   see cachegrind\n * SMPcache_:\n   Only supports one single cache and runs on Windows with GUI. Also not freely available.\n * CMPsim_:\n   Was only academically published and source code never made available.\n * CASPER_:\n   Was only academically published and source code never made available.\n\n=========== ================= =========== =============== ================= ======== ======== ========= ======= ======== ============== ============== =========== =============== ================= ===================================\nPackage     instructions [0]_ blocks [1]_ sub-blocks [2]_ associtivity [3]_ LRU [4]_ MRU [4]_ FIFO [4]_ RR [4]_ CCC [5]_ 3+ levels [6]_ exclusive [7]_ victim [8]_ multi-core [9]_ API [10]_         open source [11]_\n=========== ================= =========== =============== ================= ======== ======== ========= ======= ======== ============== ============== =========== =============== ================= ===================================\ngem5_              x              x             ?                x             x       x         x        ?       ?            x             ?             ?             ?         python, ruby, c++  yes, BSD-style    \ndineroIV_          x              x             x                x             x                 x        x       x            x                                                   c                  no, free for non-comercial use    \ncachegrind_        x              x                              x             x                                                                                                   cli                yes, GPLv2       \ncallgrind_         x              x                              x             x                                                                                                   cli                yes, GPLv2          \nSMPcache_                         x                              x             x                 x        x       ?                                                                Windows GUI       no, free for education und research        \nCMPsim_                           x                              x             x       x         x        x                    x             ?             ?             x         ?                  no, source not public         \nCASPER_            x              x             x                x             x       x         x        x       x            x                                         x         perl, c            no, source not public        \npycachesim                        x             x                x             x       x         x        x                    x           x               x                       python, C backend  yes, AGPLv3          \n=========== ================= =========== =============== ================= ======== ======== ========= ======= ======== ============== ============== =========== =============== ================= ===================================\n\n.. _gem5: http://gem5.org/Main_Page\n.. _dineroIV: http://pages.cs.wisc.edu/~markhill/DineroIV/\n.. _cachegrind: http://valgrind.org/docs/manual/cg-manual.html\n.. _callgrind: http://valgrind.org/docs/manual/cl-manual.html\n.. _SMPcache: http://arco.unex.es/smpcache/\n.. _CMPsim: http://eng.umd.edu/~blj/papers/mobs2008.pdf\n.. _CASPER: http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1240655\n\n.. [0] Instruction cache support (typically L1I)\n.. [1] Cacheline/block granular caching\n.. [2] Sub-blocking/sectoring for in cache-storage\n.. [3] Support for n-way associativity\n.. [4] Support least-recently-used (LRU), most-recently-used (MRU), first-in-last-out (FIFO), random (RR) replacement policy\n.. [5] Classification of misses into: compulsory (first time access), capacity (access after replacement), conflict (would have been a hit with full-associativity)\n.. [6] Combining of at least three cache levels\n.. [7] Exclusive cache relations (two levels may not share the same cacheline)\n.. [8] Victim caches, where only evicted lines endup(e.g., AMD Bulldozer L3)\n.. [9] Multi-core cache hierarchies with private and shared caches and cache coherency protocol\n.. [10] Supported interfaces (cli = command-line-interface)\n.. [11] Published under an Open Source Initiative approved license?", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/RRZE-HPC/pycachesim", "keywords": "hpc performance benchmark analysis", "license": "AGPLv3", "maintainer": "", "maintainer_email": "", "name": "pycachesim", "package_url": "https://pypi.org/project/pycachesim/", "platform": "", "project_url": "https://pypi.org/project/pycachesim/", "project_urls": {"Homepage": "https://github.com/RRZE-HPC/pycachesim"}, "release_url": "https://pypi.org/project/pycachesim/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Python Cache Hierarchy Simulator", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pycachesim\">\n<h2>pycachesim</h2>\n<p>A single-core cache hierarchy simulator written in python.</p>\n<a href=\"https://travis-ci.org/RRZE-HPC/pycachesim?branch=master\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/RRZE-HPC/pycachesim.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fdb0e63fd3905b53ef09c845f0b7713d33fa5197/68747470733a2f2f7472617669732d63692e6f72672f52525a452d4850432f7079636163686573696d2e7376673f6272616e63683d6d6173746572\"></a>\n<p>The goal is to accurately simulate the caching (allocation/hit/miss/replace/evict) behavior of all cache levels found in modern processors. It is developed as a backend to <a href=\"https://github.com/RRZE-HPC/kerncraft\" rel=\"nofollow\">kerncraft</a>, but is also planned to introduce a command line interface to replay LOAD/STORE instructions.</p>\n<dl>\n<dt>Currently supported features:</dt>\n<dd><ul>\n<li>Inclusive cache hierarchies</li>\n<li>LRU, MRU, RR and FIFO policies</li>\n<li>N-way cache associativity</li>\n<li>Write-allocate with write-back caches</li>\n<li>Non-write-allocate with write-through caches</li>\n<li>Write-combining with sub-blocking</li>\n<li>Tracking of cacheline states (e.g., using dirty bits)</li>\n<li>Speed (core is implemented in C)</li>\n<li>Python 2.7+ and 3.4+ support, with no other dependencies</li>\n</ul>\n</dd>\n<dt>Planned features:</dt>\n<dd><ul>\n<li>Report cachelines on all levels (preliminary support through <tt>backend.verbosity &gt; 0</tt>)</li>\n<li>Report timeline of cache events (preliminary support through <tt>backend.verbosity &gt; 0</tt>)</li>\n<li>Visualize events (html file?)</li>\n<li>Interface to Valgrind Infrastructure (see <a href=\"http://valgrind.org/docs/manual/lk-manual.html\" rel=\"nofollow\">Lackey</a>) for access history replay.</li>\n<li>(uncertain) instruction cache</li>\n<li>Optional classification into compulsory/capacity and conflict misses (by simulating other cache configurations in parallel)</li>\n<li>(uncertain) multi-core support</li>\n</ul>\n</dd>\n</dl>\n<div id=\"license\">\n<h3>License</h3>\n<p>pycachesim is licensed under AGPLv3.</p>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cachesim</span> <span class=\"kn\">import</span> <span class=\"n\">CacheSimulator</span><span class=\"p\">,</span> <span class=\"n\">Cache</span><span class=\"p\">,</span> <span class=\"n\">MainMemory</span>\n\n<span class=\"n\">mem</span> <span class=\"o\">=</span> <span class=\"n\">MainMemory</span><span class=\"p\">()</span>\n<span class=\"n\">l3</span> <span class=\"o\">=</span> <span class=\"n\">Cache</span><span class=\"p\">(</span><span class=\"s2\">\"L3\"</span><span class=\"p\">,</span> <span class=\"mi\">20480</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"s2\">\"LRU\"</span><span class=\"p\">)</span>  <span class=\"c1\"># 20MB: 20480 sets, 16-ways with cacheline size of 64 bytes</span>\n<span class=\"n\">mem</span><span class=\"o\">.</span><span class=\"n\">load_to</span><span class=\"p\">(</span><span class=\"n\">l3</span><span class=\"p\">)</span>\n<span class=\"n\">mem</span><span class=\"o\">.</span><span class=\"n\">store_from</span><span class=\"p\">(</span><span class=\"n\">l3</span><span class=\"p\">)</span>\n<span class=\"n\">l2</span> <span class=\"o\">=</span> <span class=\"n\">Cache</span><span class=\"p\">(</span><span class=\"s2\">\"L2\"</span><span class=\"p\">,</span> <span class=\"mi\">512</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"s2\">\"LRU\"</span><span class=\"p\">,</span> <span class=\"n\">store_to</span><span class=\"o\">=</span><span class=\"n\">l3</span><span class=\"p\">,</span> <span class=\"n\">load_from</span><span class=\"o\">=</span><span class=\"n\">l3</span><span class=\"p\">)</span>  <span class=\"c1\"># 256KB</span>\n<span class=\"n\">l1</span> <span class=\"o\">=</span> <span class=\"n\">Cache</span><span class=\"p\">(</span><span class=\"s2\">\"L1\"</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"s2\">\"LRU\"</span><span class=\"p\">,</span> <span class=\"n\">store_to</span><span class=\"o\">=</span><span class=\"n\">l2</span><span class=\"p\">,</span> <span class=\"n\">load_from</span><span class=\"o\">=</span><span class=\"n\">l2</span><span class=\"p\">)</span>  <span class=\"c1\"># 32KB</span>\n<span class=\"n\">cs</span> <span class=\"o\">=</span> <span class=\"n\">CacheSimulator</span><span class=\"p\">(</span><span class=\"n\">l1</span><span class=\"p\">,</span> <span class=\"n\">mem</span><span class=\"p\">)</span>\n\n<span class=\"n\">cs</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"mi\">2342</span><span class=\"p\">)</span>  <span class=\"c1\"># Loads one byte from address 2342, should be a miss in all cache-levels</span>\n<span class=\"n\">cs</span><span class=\"o\">.</span><span class=\"n\">store</span><span class=\"p\">(</span><span class=\"mi\">512</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">)</span>  <span class=\"c1\"># Stores 8 bytes to addresses 512-519,</span>\n                         <span class=\"c1\"># will also be a load miss (due to write-allocate)</span>\n<span class=\"n\">cs</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"mi\">512</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">)</span>  <span class=\"c1\"># Loads from address 512 until (exclusive) 520 (eight bytes)</span>\n\n<span class=\"n\">cs</span><span class=\"o\">.</span><span class=\"n\">force_write_back</span><span class=\"p\">()</span>\n<span class=\"n\">cs</span><span class=\"o\">.</span><span class=\"n\">print_stats</span><span class=\"p\">()</span>\n</pre>\n<p>This should return:</p>\n<pre><span class=\"n\">CACHE</span> <span class=\"o\">*******</span><span class=\"n\">HIT</span><span class=\"o\">********</span> <span class=\"o\">*******</span><span class=\"n\">MISS</span><span class=\"o\">*******</span> <span class=\"o\">*******</span><span class=\"n\">LOAD</span><span class=\"o\">*******</span> <span class=\"o\">******</span><span class=\"n\">STORE</span><span class=\"o\">*******</span>\n   <span class=\"n\">L1</span>      <span class=\"mi\">1</span> <span class=\"p\">(</span>       <span class=\"mi\">8</span><span class=\"n\">B</span><span class=\"p\">)</span>      <span class=\"mi\">2</span> <span class=\"p\">(</span>      <span class=\"mi\">65</span><span class=\"n\">B</span><span class=\"p\">)</span>      <span class=\"mi\">3</span> <span class=\"p\">(</span>      <span class=\"mi\">73</span><span class=\"n\">B</span><span class=\"p\">)</span>      <span class=\"mi\">1</span> <span class=\"p\">(</span>       <span class=\"mi\">8</span><span class=\"n\">B</span><span class=\"p\">)</span>\n   <span class=\"n\">L2</span>      <span class=\"mi\">0</span> <span class=\"p\">(</span>       <span class=\"mi\">0</span><span class=\"n\">B</span><span class=\"p\">)</span>      <span class=\"mi\">2</span> <span class=\"p\">(</span>     <span class=\"mi\">128</span><span class=\"n\">B</span><span class=\"p\">)</span>      <span class=\"mi\">2</span> <span class=\"p\">(</span>     <span class=\"mi\">128</span><span class=\"n\">B</span><span class=\"p\">)</span>      <span class=\"mi\">1</span> <span class=\"p\">(</span>      <span class=\"mi\">64</span><span class=\"n\">B</span><span class=\"p\">)</span>\n   <span class=\"n\">L3</span>      <span class=\"mi\">0</span> <span class=\"p\">(</span>       <span class=\"mi\">0</span><span class=\"n\">B</span><span class=\"p\">)</span>      <span class=\"mi\">2</span> <span class=\"p\">(</span>     <span class=\"mi\">128</span><span class=\"n\">B</span><span class=\"p\">)</span>      <span class=\"mi\">2</span> <span class=\"p\">(</span>     <span class=\"mi\">128</span><span class=\"n\">B</span><span class=\"p\">)</span>      <span class=\"mi\">1</span> <span class=\"p\">(</span>      <span class=\"mi\">64</span><span class=\"n\">B</span><span class=\"p\">)</span>\n  <span class=\"n\">MEM</span>      <span class=\"mi\">2</span> <span class=\"p\">(</span>     <span class=\"mi\">128</span><span class=\"n\">B</span><span class=\"p\">)</span>      <span class=\"mi\">0</span> <span class=\"p\">(</span>       <span class=\"mi\">0</span><span class=\"n\">B</span><span class=\"p\">)</span>      <span class=\"mi\">2</span> <span class=\"p\">(</span>     <span class=\"mi\">128</span><span class=\"n\">B</span><span class=\"p\">)</span>      <span class=\"mi\">1</span> <span class=\"p\">(</span>      <span class=\"mi\">64</span><span class=\"n\">B</span><span class=\"p\">)</span>\n</pre>\n<p>Each row refers to one memory-level, starting with L1 and ending with main memory. The 3 loads in L1 are the sum of all individual accesses to the cache-hierarchy. 1 (from first load) + 1 (from store with write-allocate) + 1 (from second load) = 3.</p>\n<p>The 1 hit, is for bytes which were cached already. Internally the pycachesim operates on cache-lines, which all addresses get transformed to. Thus, the two misses throughout all cache-levels are actually two complete cache-lines and after the cache-line had been loaded the consecutive access to the same cache-line are handled as hits. That is also the reason why data sizes increase from L1 to L2. L1 is accessed byte-wise and L2 only with cache-line granularity.</p>\n<p>So: hits, misses, stores and loads in L1 are byte-wise. Every other statistical information are based on cache-lines.</p>\n<p>When using victim caches, setting <cite>victims_to</cite> to the victim cache level, will cause pycachesim to forward unmodified cache-lines to this level on replacement. During a miss, victims_to is checked for availability and only hit if it the cache-line is found. This means, that load stats will equal hit stats in victim caches and misses should always be zero.</p>\n</div>\n</div>\n<div id=\"comparison-to-other-cache-simulators\">\n<h2>Comparison to other Cache Simulators</h2>\n<p>While searching for more versatile cache simulator for kerncraft, I stumbled across the following:</p>\n<blockquote>\n<ul>\n<li><a href=\"http://gem5.org/Main_Page\" rel=\"nofollow\">gem5</a>:\nVery fully-featured full system simulator. Complex to extract only the memory subsystem</li>\n<li><a href=\"http://pages.cs.wisc.edu/~markhill/DineroIV/\" rel=\"nofollow\">dineroIV</a>:\nNice and simple code, but does not support exclusive caches and not available under open source license.</li>\n<li><a href=\"http://valgrind.org/docs/manual/cg-manual.html\" rel=\"nofollow\">cachegrind</a>:\nMaintained and stable code of a well established open source project, but only supports inclusive first and last level caches.</li>\n<li><a href=\"http://valgrind.org/docs/manual/cl-manual.html\" rel=\"nofollow\">callgrind</a>:\nsee cachegrind</li>\n<li><a href=\"http://arco.unex.es/smpcache/\" rel=\"nofollow\">SMPcache</a>:\nOnly supports one single cache and runs on Windows with GUI. Also not freely available.</li>\n<li><a href=\"http://eng.umd.edu/~blj/papers/mobs2008.pdf\" rel=\"nofollow\">CMPsim</a>:\nWas only academically published and source code never made available.</li>\n<li><a href=\"http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1240655\" rel=\"nofollow\">CASPER</a>:\nWas only academically published and source code never made available.</li>\n</ul>\n</blockquote>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Package</th>\n<th>instructions <a href=\"#id16\" id=\"id1\" rel=\"nofollow\">[0]</a></th>\n<th>blocks <a href=\"#id17\" id=\"id2\" rel=\"nofollow\">[1]</a></th>\n<th>sub-blocks <a href=\"#id18\" id=\"id3\" rel=\"nofollow\">[2]</a></th>\n<th>associtivity <a href=\"#id19\" id=\"id4\" rel=\"nofollow\">[3]</a></th>\n<th>LRU <a href=\"#id20\" id=\"id5\" rel=\"nofollow\">[4]</a></th>\n<th>MRU <a href=\"#id20\" id=\"id6\" rel=\"nofollow\">[4]</a></th>\n<th>FIFO <a href=\"#id20\" id=\"id7\" rel=\"nofollow\">[4]</a></th>\n<th>RR <a href=\"#id20\" id=\"id8\" rel=\"nofollow\">[4]</a></th>\n<th>CCC <a href=\"#id21\" id=\"id9\" rel=\"nofollow\">[5]</a></th>\n<th>3+ levels <a href=\"#id22\" id=\"id10\" rel=\"nofollow\">[6]</a></th>\n<th>exclusive <a href=\"#id23\" id=\"id11\" rel=\"nofollow\">[7]</a></th>\n<th>victim <a href=\"#id24\" id=\"id12\" rel=\"nofollow\">[8]</a></th>\n<th>multi-core <a href=\"#id25\" id=\"id13\" rel=\"nofollow\">[9]</a></th>\n<th>API <a href=\"#id26\" id=\"id14\" rel=\"nofollow\">[10]</a></th>\n<th>open source <a href=\"#id27\" id=\"id15\" rel=\"nofollow\">[11]</a></th>\n</tr>\n</thead>\n<tbody>\n<tr><td><a href=\"http://gem5.org/Main_Page\" rel=\"nofollow\">gem5</a></td>\n<td>x</td>\n<td>x</td>\n<td>?</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>?</td>\n<td>?</td>\n<td>x</td>\n<td>?</td>\n<td>?</td>\n<td>?</td>\n<td>python, ruby, c++</td>\n<td>yes, BSD-style</td>\n</tr>\n<tr><td><a href=\"http://pages.cs.wisc.edu/~markhill/DineroIV/\" rel=\"nofollow\">dineroIV</a></td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>\u00a0</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>c</td>\n<td>no, free for non-comercial use</td>\n</tr>\n<tr><td><a href=\"http://valgrind.org/docs/manual/cg-manual.html\" rel=\"nofollow\">cachegrind</a></td>\n<td>x</td>\n<td>x</td>\n<td>\u00a0</td>\n<td>x</td>\n<td>x</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>cli</td>\n<td>yes, GPLv2</td>\n</tr>\n<tr><td><a href=\"http://valgrind.org/docs/manual/cl-manual.html\" rel=\"nofollow\">callgrind</a></td>\n<td>x</td>\n<td>x</td>\n<td>\u00a0</td>\n<td>x</td>\n<td>x</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>cli</td>\n<td>yes, GPLv2</td>\n</tr>\n<tr><td><a href=\"http://arco.unex.es/smpcache/\" rel=\"nofollow\">SMPcache</a></td>\n<td>\u00a0</td>\n<td>x</td>\n<td>\u00a0</td>\n<td>x</td>\n<td>x</td>\n<td>\u00a0</td>\n<td>x</td>\n<td>x</td>\n<td>?</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>Windows GUI</td>\n<td>no, free for education und research</td>\n</tr>\n<tr><td><a href=\"http://eng.umd.edu/~blj/papers/mobs2008.pdf\" rel=\"nofollow\">CMPsim</a></td>\n<td>\u00a0</td>\n<td>x</td>\n<td>\u00a0</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>\u00a0</td>\n<td>x</td>\n<td>?</td>\n<td>?</td>\n<td>x</td>\n<td>?</td>\n<td>no, source not public</td>\n</tr>\n<tr><td><a href=\"http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1240655\" rel=\"nofollow\">CASPER</a></td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>x</td>\n<td>perl, c</td>\n<td>no, source not public</td>\n</tr>\n<tr><td>pycachesim</td>\n<td>\u00a0</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>\u00a0</td>\n<td>x</td>\n<td>x</td>\n<td>x</td>\n<td>\u00a0</td>\n<td>python, C backend</td>\n<td>yes, AGPLv3</td>\n</tr>\n</tbody>\n</table>\n<table id=\"id16\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[0]</a></td><td>Instruction cache support (typically L1I)</td></tr>\n</tbody>\n</table>\n<table id=\"id17\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id2\" rel=\"nofollow\">[1]</a></td><td>Cacheline/block granular caching</td></tr>\n</tbody>\n</table>\n<table id=\"id18\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id3\" rel=\"nofollow\">[2]</a></td><td>Sub-blocking/sectoring for in cache-storage</td></tr>\n</tbody>\n</table>\n<table id=\"id19\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id4\" rel=\"nofollow\">[3]</a></td><td>Support for n-way associativity</td></tr>\n</tbody>\n</table>\n<table id=\"id20\">\n<col><col>\n<tbody>\n<tr><td>[4]</td><td><em>(<a href=\"#id5\" rel=\"nofollow\">1</a>, <a href=\"#id6\" rel=\"nofollow\">2</a>, <a href=\"#id7\" rel=\"nofollow\">3</a>, <a href=\"#id8\" rel=\"nofollow\">4</a>)</em> Support least-recently-used (LRU), most-recently-used (MRU), first-in-last-out (FIFO), random (RR) replacement policy</td></tr>\n</tbody>\n</table>\n<table id=\"id21\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id9\" rel=\"nofollow\">[5]</a></td><td>Classification of misses into: compulsory (first time access), capacity (access after replacement), conflict (would have been a hit with full-associativity)</td></tr>\n</tbody>\n</table>\n<table id=\"id22\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id10\" rel=\"nofollow\">[6]</a></td><td>Combining of at least three cache levels</td></tr>\n</tbody>\n</table>\n<table id=\"id23\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id11\" rel=\"nofollow\">[7]</a></td><td>Exclusive cache relations (two levels may not share the same cacheline)</td></tr>\n</tbody>\n</table>\n<table id=\"id24\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id12\" rel=\"nofollow\">[8]</a></td><td>Victim caches, where only evicted lines endup(e.g., AMD Bulldozer L3)</td></tr>\n</tbody>\n</table>\n<table id=\"id25\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id13\" rel=\"nofollow\">[9]</a></td><td>Multi-core cache hierarchies with private and shared caches and cache coherency protocol</td></tr>\n</tbody>\n</table>\n<table id=\"id26\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id14\" rel=\"nofollow\">[10]</a></td><td>Supported interfaces (cli = command-line-interface)</td></tr>\n</tbody>\n</table>\n<table id=\"id27\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id15\" rel=\"nofollow\">[11]</a></td><td>Published under an Open Source Initiative approved license?</td></tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 5155719, "releases": {"0": [], "0.0.1": [{"comment_text": "built for Darwin-15.2.0", "digests": {"md5": "f2699be9682daf4923626132688b13d0", "sha256": "190a2e69efab07a5cadc1f835904e4ef2d214fe634afec3ec40fc4a0e2c326d0"}, "downloads": -1, "filename": "pycachesim-0.0.1.macosx-10.11-x86_64.tar.gz", "has_sig": false, "md5_digest": "f2699be9682daf4923626132688b13d0", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 7144, "upload_time": "2015-12-09T13:57:47", "upload_time_iso_8601": "2015-12-09T13:57:47.068439Z", "url": "https://files.pythonhosted.org/packages/ec/4e/33c28d43a7aece25eecf0dfb5040c90abbf5006ceca45bbb4748871012c9/pycachesim-0.0.1.macosx-10.11-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "3485f88ad207a56dd6f82850f18fadc6", "sha256": "6962cd26a21add37752cf31a58e74f71a873b57f5a944922c873c4de1d14d6a7"}, "downloads": -1, "filename": "pycachesim-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3485f88ad207a56dd6f82850f18fadc6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18820, "upload_time": "2015-12-09T13:57:51", "upload_time_iso_8601": "2015-12-09T13:57:51.987235Z", "url": "https://files.pythonhosted.org/packages/95/50/1d3e4f62554c21674a3777ad4743b3973bea2d3d0565e760b8c113f1c9a7/pycachesim-0.0.1.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "f293f6576fb1924a766b1d7bf3ee02a9", "sha256": "960ae9b2077aed9bfdeb1b50bf54f54d111400e9e5ae4e67ecc84aae1b93cf51"}, "downloads": -1, "filename": "pycachesim-0.0.3.tar.gz", "has_sig": false, "md5_digest": "f293f6576fb1924a766b1d7bf3ee02a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7568, "upload_time": "2015-12-16T08:30:09", "upload_time_iso_8601": "2015-12-16T08:30:09.544454Z", "url": "https://files.pythonhosted.org/packages/f7/f1/c4ffa2aac129f9842e4af99cd5c5c5040551552c4394d4a4f734e6b8d946/pycachesim-0.0.3.tar.gz", "yanked": false}], "0.1.1": [], "0.1.1.1": [], "0.1.2": [{"comment_text": "", "digests": {"md5": "21b348e05fe1f0df6b75a23934360ba8", "sha256": "98878fc4bb904b282ba7f45018acbd8ee8270f87df7d571be1de173cfecc9a8c"}, "downloads": -1, "filename": "pycachesim-0.1.2-cp27-none-macosx_10_11_x86_64.whl", "has_sig": false, "md5_digest": "21b348e05fe1f0df6b75a23934360ba8", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 18314, "upload_time": "2016-01-11T12:20:57", "upload_time_iso_8601": "2016-01-11T12:20:57.839328Z", "url": "https://files.pythonhosted.org/packages/32/30/99b18847fcc8b5fc4cfb2e89f47aa4b2bd0349f42f3ab7ef603ae545c35c/pycachesim-0.1.2-cp27-none-macosx_10_11_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "793aeac8c4790d2b76256ffd97df8049", "sha256": "4b07089f5caaad93a6cb803a6aeb32b5884764b2e8cc6a10b13debe63a42c894"}, "downloads": -1, "filename": "pycachesim-0.1.2.tar.gz", "has_sig": false, "md5_digest": "793aeac8c4790d2b76256ffd97df8049", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24339, "upload_time": "2016-01-11T12:20:39", "upload_time_iso_8601": "2016-01-11T12:20:39.824423Z", "url": "https://files.pythonhosted.org/packages/02/1c/a639e1157c40863cbeb57557d684228396e807d125e12e063ffd7ffe3a41/pycachesim-0.1.2.tar.gz", "yanked": false}], "0.1.2.1": [], "0.1.2.2": [{"comment_text": "", "digests": {"md5": "189a87c829aa6449b415051aefd9e529", "sha256": "cb9404fe6a5e9a600be366d7ede7c9575cccbb12f2d03975de349ea16defcfa3"}, "downloads": -1, "filename": "pycachesim-0.1.2.2-cp27-none-macosx_10_11_x86_64.whl", "has_sig": false, "md5_digest": "189a87c829aa6449b415051aefd9e529", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 18834, "upload_time": "2016-01-14T14:43:16", "upload_time_iso_8601": "2016-01-14T14:43:16.795468Z", "url": "https://files.pythonhosted.org/packages/89/d6/5fa257cb3ba7bc548a8dc281b97d5e8eba5b651bf0972ffac54432d7ba84/pycachesim-0.1.2.2-cp27-none-macosx_10_11_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ecc65e7b67c2bf40672b093c49f53779", "sha256": "e6c6686492b438f4ba4c6da79e4a071daece82a1536e368af26acae422f08027"}, "downloads": -1, "filename": "pycachesim-0.1.2.2.tar.gz", "has_sig": false, "md5_digest": "ecc65e7b67c2bf40672b093c49f53779", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24816, "upload_time": "2016-01-14T14:42:49", "upload_time_iso_8601": "2016-01-14T14:42:49.774109Z", "url": "https://files.pythonhosted.org/packages/8f/24/64effeb746a7d8cc6349af6f466e7e4bc64722d3e19af659a46f15cbb640/pycachesim-0.1.2.2.tar.gz", "yanked": false}], "0.1.2.3": [{"comment_text": "", "digests": {"md5": "2d8f1c18b5e0e103e6f49fbc30379a74", "sha256": "de56c31884d3f32a98b08097caff835979de666a1f4700d304451bc5614d33c9"}, "downloads": -1, "filename": "pycachesim-0.1.2.3.tar.gz", "has_sig": false, "md5_digest": "2d8f1c18b5e0e103e6f49fbc30379a74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24799, "upload_time": "2016-01-15T09:09:41", "upload_time_iso_8601": "2016-01-15T09:09:41.686953Z", "url": "https://files.pythonhosted.org/packages/4b/cf/44c19f28f78adc4a3c6ede146398b2b600c9ce45fb955142d59e4d16cd37/pycachesim-0.1.2.3.tar.gz", "yanked": false}], "0.1.2.4": [{"comment_text": "", "digests": {"md5": "51a70b3253b487ad079aa1c2cfe283cd", "sha256": "f0a17c91600dea0481a388d97674e53e6277747ffe64e419818605f3cb2de983"}, "downloads": -1, "filename": "pycachesim-0.1.2.4.tar.gz", "has_sig": false, "md5_digest": "51a70b3253b487ad079aa1c2cfe283cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10162, "upload_time": "2016-01-15T11:32:33", "upload_time_iso_8601": "2016-01-15T11:32:33.736475Z", "url": "https://files.pythonhosted.org/packages/0c/1e/f9b748af47521bee0a7efa7b1cc82aa443c31b86cad5ce1cdddbe8432a94/pycachesim-0.1.2.4.tar.gz", "yanked": false}], "0.1.2.5": [{"comment_text": "", "digests": {"md5": "3cbd7fa4b5124b983d8e58735762650d", "sha256": "342cab2c2a080f1d29768105160f58e3b0df2b25defc08914aae8f91c49aea08"}, "downloads": -1, "filename": "pycachesim-0.1.2.5.tar.gz", "has_sig": false, "md5_digest": "3cbd7fa4b5124b983d8e58735762650d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10163, "upload_time": "2016-01-15T12:09:52", "upload_time_iso_8601": "2016-01-15T12:09:52.605993Z", "url": "https://files.pythonhosted.org/packages/27/e2/aace4ef3a34d62ccf429aa8c93b75d99ef920fbfb6c02a90288b9e7ef3fd/pycachesim-0.1.2.5.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "1a983e4195545f44cbc101ef935fe50e", "sha256": "bb32e0eeb54e1a736c027edee8831ff164cdec0832a3e44994ed73a0d4f1bf77"}, "downloads": -1, "filename": "pycachesim-0.1.3.tar.gz", "has_sig": false, "md5_digest": "1a983e4195545f44cbc101ef935fe50e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10456, "upload_time": "2016-01-27T08:55:07", "upload_time_iso_8601": "2016-01-27T08:55:07.805424Z", "url": "https://files.pythonhosted.org/packages/9e/99/7257f7c206b6b42ef6e72ef242223f08faa37837d3081a478b0857cb2f40/pycachesim-0.1.3.tar.gz", "yanked": false}], "0.1.3.1": [{"comment_text": "", "digests": {"md5": "656a56dd01b2132c16437f75b5f22797", "sha256": "b3afc652a3be9d4498bb2d61eff3a99fd72455967d50e3fd41519499e85beab6"}, "downloads": -1, "filename": "pycachesim-0.1.3.1.tar.gz", "has_sig": false, "md5_digest": "656a56dd01b2132c16437f75b5f22797", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10498, "upload_time": "2016-01-29T10:01:24", "upload_time_iso_8601": "2016-01-29T10:01:24.065677Z", "url": "https://files.pythonhosted.org/packages/8d/ac/b6bfdf8d52f9e9d82680426525c58cc19345649260d0c0c908c63657a618/pycachesim-0.1.3.1.tar.gz", "yanked": false}], "0.1.3.2": [{"comment_text": "", "digests": {"md5": "77dfe5b8a3d3546d8cd48c99a38a8855", "sha256": "ebc00b15f7ad85a8c0f9c5e702a3024621069fe2ff8510c478b5de477d684ccd"}, "downloads": -1, "filename": "pycachesim-0.1.3.2.tar.gz", "has_sig": false, "md5_digest": "77dfe5b8a3d3546d8cd48c99a38a8855", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10498, "upload_time": "2016-02-02T11:36:56", "upload_time_iso_8601": "2016-02-02T11:36:56.401567Z", "url": "https://files.pythonhosted.org/packages/ba/c8/7b2cdc7b6410359f02a9820a6f63a4420777244e98f8c7f4cbfe2ac3a010/pycachesim-0.1.3.2.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "2ce10f5695919d8c8fd079ec55e6c2d3", "sha256": "e461130ebe9e59b2557720fd645fe3cf1c7536bc4ef0c2f7046ed21a0dcc1800"}, "downloads": -1, "filename": "pycachesim-0.1.4.tar.gz", "has_sig": false, "md5_digest": "2ce10f5695919d8c8fd079ec55e6c2d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17682, "upload_time": "2016-03-31T08:31:44", "upload_time_iso_8601": "2016-03-31T08:31:44.048452Z", "url": "https://files.pythonhosted.org/packages/8d/31/a570ec0eb3794c24521b41b14a8f7d453b5ac624f7a5dfe2a52d58a283b7/pycachesim-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "c0baab9267cc269e2ff900c80652cd01", "sha256": "a6e707ba201e92536a36a332b214eef0836ec7cb01a767470020b40a95cc3b70"}, "downloads": -1, "filename": "pycachesim-0.1.5.tar.gz", "has_sig": false, "md5_digest": "c0baab9267cc269e2ff900c80652cd01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17965, "upload_time": "2017-07-19T11:33:45", "upload_time_iso_8601": "2017-07-19T11:33:45.050994Z", "url": "https://files.pythonhosted.org/packages/d9/8a/d956e248263299835e8e7d5edf7e7e037489b0a2b04941de283e2f840611/pycachesim-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "54c387c25c6f52311fbf2f435bb88814", "sha256": "1a44c9d2259721ff9d59cf19d9285f2b0e6fabc8aaff800188ee8f4e23b0acd1"}, "downloads": -1, "filename": "pycachesim-0.1.6.tar.gz", "has_sig": false, "md5_digest": "54c387c25c6f52311fbf2f435bb88814", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19185, "upload_time": "2018-03-26T15:55:03", "upload_time_iso_8601": "2018-03-26T15:55:03.260131Z", "url": "https://files.pythonhosted.org/packages/32/3d/5ae809af2e4f69b6be5709134bd923b74c31bc30cc7e15e529d5dc5f9bb4/pycachesim-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "93b32b77480d3230f2afc4bd7bd11740", "sha256": "6004829a06466c510437fba5952f30cdd6a7a973812d7dc18755ce20a9c454c6"}, "downloads": -1, "filename": "pycachesim-0.1.7.tar.gz", "has_sig": false, "md5_digest": "93b32b77480d3230f2afc4bd7bd11740", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19183, "upload_time": "2018-03-27T07:57:18", "upload_time_iso_8601": "2018-03-27T07:57:18.953519Z", "url": "https://files.pythonhosted.org/packages/7e/7a/5a5e44422f66b454c8ac781e7257768baa8630928448cea5709d8ab1ac12/pycachesim-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "147b5250d59d44a790dc512a8e33c44a", "sha256": "8e24b946d95f9148d4af51e25404a1a53f255a07c91a8a5b8b3273942f0282c6"}, "downloads": -1, "filename": "pycachesim-0.1.8.tar.gz", "has_sig": false, "md5_digest": "147b5250d59d44a790dc512a8e33c44a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20499, "upload_time": "2018-10-23T13:43:55", "upload_time_iso_8601": "2018-10-23T13:43:55.984808Z", "url": "https://files.pythonhosted.org/packages/65/e3/54e6eb42a2a4b4fedadbd745432367adb69cc9edcc4775b58bc73afe6f1e/pycachesim-0.1.8.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "857d9aa88f1d986d7ce0427ff930d40c", "sha256": "8380ff9048a2856f8dc8fe723e8ec6a1d6c8baf814ad90d33234028e9e57a17c"}, "downloads": -1, "filename": "pycachesim-0.2.0.tar.gz", "has_sig": false, "md5_digest": "857d9aa88f1d986d7ce0427ff930d40c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20518, "upload_time": "2019-04-17T12:59:15", "upload_time_iso_8601": "2019-04-17T12:59:15.018000Z", "url": "https://files.pythonhosted.org/packages/65/41/cd4bb17874ca70f5e4a7658955742070e337c7e44e3057041cb0c24210ae/pycachesim-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "e8a19f333851d10990ecca52d36f362f", "sha256": "82a840c3058041bafe9b5f38e27c05a216d112719ca017e619324e41f2e6e8f1"}, "downloads": -1, "filename": "pycachesim-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e8a19f333851d10990ecca52d36f362f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20497, "upload_time": "2019-04-17T15:21:13", "upload_time_iso_8601": "2019-04-17T15:21:13.742137Z", "url": "https://files.pythonhosted.org/packages/80/64/c8d9dfd7d0c01d2ba302549816fe689f5fd5362f5a1536e6ff4462699fa1/pycachesim-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e8a19f333851d10990ecca52d36f362f", "sha256": "82a840c3058041bafe9b5f38e27c05a216d112719ca017e619324e41f2e6e8f1"}, "downloads": -1, "filename": "pycachesim-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e8a19f333851d10990ecca52d36f362f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20497, "upload_time": "2019-04-17T15:21:13", "upload_time_iso_8601": "2019-04-17T15:21:13.742137Z", "url": "https://files.pythonhosted.org/packages/80/64/c8d9dfd7d0c01d2ba302549816fe689f5fd5362f5a1536e6ff4462699fa1/pycachesim-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:51 2020"}