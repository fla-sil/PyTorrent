{"info": {"author": "Fabio Moreno", "author_email": "fabio.moreno@cuemby.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# python-cygrpc\n\nMicro-Framwork for gRPC with REST expose support.\n\n## installation\n\n- Using pip\n```\npip install cygrpc\n```\n- Using git repository\n```\ngit+https://github.com/cuemby/python-cygrpc.git#egg=cygrpc\n```\n\n## Usage\n\n### Server\nParams:\n\n* host : str =  server host, by default is '0.0.0.0'\n* port : int = server port for listen. by default is 50051\n* max_threads : int =  set threads workers for server, by default is 10\n* interceptors: tuple(InterceptorImplementation) = server interceptors middlewares. by default is None.\n* http_port: int = port for http gateway \n\nif you decide used all values by default, you can setup the server in less lines\n```python\nfrom cygrpc.server import Server\nserver = Server()\nserver.add_service(calculator_api_pb2_grpc, ServiceImpl)\nserver.start()\n```\n\nExample using all params:\n```python\nfrom cygrpc.server import Server\n# Initialization of server definition, 'host', 'port', 'max_threads' has be optionals.\n# By default the __init__ function set the same values. if don't you wanna set interceptors only remove the param\nserver = Server(host=\"0.0.0.0\", port=50051, max_threads=10, interceptors=(MyAuthInterceptor(),))\n\n# attach service to server, repeat for multiple services\nserver.add_service(calculator_api_pb2_grpc, ServiceImpl)\n\n# finally start server.\nserver.start()\n```\n\n\n### Implement service \nThe implementation is the same.\n\n```python\n# import  rest decorator\nfrom cygrpc.gateway.http import rest\n\nclass ServiceImpl(calculator_api_pb2_grpc.CalculatorAPIServicer):\n    \"\"\"\n    Service logic implementation.\n    \"\"\"\n\n    def Sum(self, request, context):\n        total = 0\n        for addend in request.addends:\n            total += addend\n\n        response = pb.SumResponse(sum=total)\n        return response\n```\n\n#### rest route\n\nfor add rest route add the decorator @rest to method definition:\n\n```python\n# import rest decorator\nfrom cygrpc.gateway.http import rest\n\n\nclass ServiceImpl(calculator_api_pb2_grpc.CalculatorAPIServicer):\n    \"\"\"\n    Service logic implementation.\n    \"\"\"\n    @rest(\"/v1/calculator/sum\", method=\"POST\")\n    def Sum(self, request, context):\n        total = 0\n        for addend in request.addends:\n            total += addend\n\n        response = pb.SumResponse(sum=total)\n        return response\n```\n\n\n### Interceptors\n\n- Base Interceptor : Base interceptor implementation for create your custom interceptor\n\n```python\nfrom cygrpc.middleware import CyGrpcInterceptor\n\nclass CustomInterceptor(CyGrpcInterceptor):\n    def intercept_service(self, continuation, handler_call_details):\n        # for continue to method implementation  \n        return self.on_success(continuation, handler_call_details)\n        # for terminate request\n        return self.on_failed(grpc.StatusCode.UNAUTHENTICATED, \"Validate authentication failed.\")\n\n```\n\n- Authentication interceptor: provider a base for authentication middleware interceptor\n\n```python\nfrom cygrpc.middleware.auth import CyGrpcAuthInterceptor\n\nclass MyAuthInterceptor(CyGrpcAuthInterceptor):\n    def auth_process(self, continuation, handler_call_details):\n       \"\"\"\"\n       ..... my auth validation process ....\n       \"\"\"\n       return True\n``` \n\n\n## Authors:\n- Fabio Moreno <fabio.moreno@cuemby.com>\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cuemby/python-cygrpc", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cygrpc", "package_url": "https://pypi.org/project/cygrpc/", "platform": "", "project_url": "https://pypi.org/project/cygrpc/", "project_urls": {"Homepage": "https://github.com/cuemby/python-cygrpc"}, "release_url": "https://pypi.org/project/cygrpc/1.0.1.post1/", "requires_dist": ["wheel", "twine", "bottle", "Paste", "grpcio (>=1.23.0)", "grpcio-tools (>=1.23.0)"], "requires_python": ">=3.6", "summary": "gRPC Micro framework", "version": "1.0.1.post1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>python-cygrpc</h1>\n<p>Micro-Framwork for gRPC with REST expose support.</p>\n<h2>installation</h2>\n<ul>\n<li>Using pip</li>\n</ul>\n<pre><code>pip install cygrpc\n</code></pre>\n<ul>\n<li>Using git repository</li>\n</ul>\n<pre><code>git+https://github.com/cuemby/python-cygrpc.git#egg=cygrpc\n</code></pre>\n<h2>Usage</h2>\n<h3>Server</h3>\n<p>Params:</p>\n<ul>\n<li>host : str =  server host, by default is '0.0.0.0'</li>\n<li>port : int = server port for listen. by default is 50051</li>\n<li>max_threads : int =  set threads workers for server, by default is 10</li>\n<li>interceptors: tuple(InterceptorImplementation) = server interceptors middlewares. by default is None.</li>\n<li>http_port: int = port for http gateway</li>\n</ul>\n<p>if you decide used all values by default, you can setup the server in less lines</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cygrpc.server</span> <span class=\"kn\">import</span> <span class=\"n\">Server</span>\n<span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">Server</span><span class=\"p\">()</span>\n<span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">add_service</span><span class=\"p\">(</span><span class=\"n\">calculator_api_pb2_grpc</span><span class=\"p\">,</span> <span class=\"n\">ServiceImpl</span><span class=\"p\">)</span>\n<span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre>\n<p>Example using all params:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cygrpc.server</span> <span class=\"kn\">import</span> <span class=\"n\">Server</span>\n<span class=\"c1\"># Initialization of server definition, 'host', 'port', 'max_threads' has be optionals.</span>\n<span class=\"c1\"># By default the __init__ function set the same values. if don't you wanna set interceptors only remove the param</span>\n<span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">Server</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"0.0.0.0\"</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">50051</span><span class=\"p\">,</span> <span class=\"n\">max_threads</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">interceptors</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">MyAuthInterceptor</span><span class=\"p\">(),))</span>\n\n<span class=\"c1\"># attach service to server, repeat for multiple services</span>\n<span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">add_service</span><span class=\"p\">(</span><span class=\"n\">calculator_api_pb2_grpc</span><span class=\"p\">,</span> <span class=\"n\">ServiceImpl</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># finally start server.</span>\n<span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre>\n<h3>Implement service</h3>\n<p>The implementation is the same.</p>\n<pre><span class=\"c1\"># import  rest decorator</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cygrpc.gateway.http</span> <span class=\"kn\">import</span> <span class=\"n\">rest</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ServiceImpl</span><span class=\"p\">(</span><span class=\"n\">calculator_api_pb2_grpc</span><span class=\"o\">.</span><span class=\"n\">CalculatorAPIServicer</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Service logic implementation.</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">Sum</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">):</span>\n        <span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">addend</span> <span class=\"ow\">in</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">addends</span><span class=\"p\">:</span>\n            <span class=\"n\">total</span> <span class=\"o\">+=</span> <span class=\"n\">addend</span>\n\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">SumResponse</span><span class=\"p\">(</span><span class=\"nb\">sum</span><span class=\"o\">=</span><span class=\"n\">total</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">response</span>\n</pre>\n<h4>rest route</h4>\n<p>for add rest route add the decorator @rest to method definition:</p>\n<pre><span class=\"c1\"># import rest decorator</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cygrpc.gateway.http</span> <span class=\"kn\">import</span> <span class=\"n\">rest</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ServiceImpl</span><span class=\"p\">(</span><span class=\"n\">calculator_api_pb2_grpc</span><span class=\"o\">.</span><span class=\"n\">CalculatorAPIServicer</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Service logic implementation.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"nd\">@rest</span><span class=\"p\">(</span><span class=\"s2\">\"/v1/calculator/sum\"</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">\"POST\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">Sum</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">):</span>\n        <span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">addend</span> <span class=\"ow\">in</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">addends</span><span class=\"p\">:</span>\n            <span class=\"n\">total</span> <span class=\"o\">+=</span> <span class=\"n\">addend</span>\n\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">pb</span><span class=\"o\">.</span><span class=\"n\">SumResponse</span><span class=\"p\">(</span><span class=\"nb\">sum</span><span class=\"o\">=</span><span class=\"n\">total</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">response</span>\n</pre>\n<h3>Interceptors</h3>\n<ul>\n<li>Base Interceptor : Base interceptor implementation for create your custom interceptor</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cygrpc.middleware</span> <span class=\"kn\">import</span> <span class=\"n\">CyGrpcInterceptor</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomInterceptor</span><span class=\"p\">(</span><span class=\"n\">CyGrpcInterceptor</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">intercept_service</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">continuation</span><span class=\"p\">,</span> <span class=\"n\">handler_call_details</span><span class=\"p\">):</span>\n        <span class=\"c1\"># for continue to method implementation  </span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">on_success</span><span class=\"p\">(</span><span class=\"n\">continuation</span><span class=\"p\">,</span> <span class=\"n\">handler_call_details</span><span class=\"p\">)</span>\n        <span class=\"c1\"># for terminate request</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">on_failed</span><span class=\"p\">(</span><span class=\"n\">grpc</span><span class=\"o\">.</span><span class=\"n\">StatusCode</span><span class=\"o\">.</span><span class=\"n\">UNAUTHENTICATED</span><span class=\"p\">,</span> <span class=\"s2\">\"Validate authentication failed.\"</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Authentication interceptor: provider a base for authentication middleware interceptor</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cygrpc.middleware.auth</span> <span class=\"kn\">import</span> <span class=\"n\">CyGrpcAuthInterceptor</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyAuthInterceptor</span><span class=\"p\">(</span><span class=\"n\">CyGrpcAuthInterceptor</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">auth_process</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">continuation</span><span class=\"p\">,</span> <span class=\"n\">handler_call_details</span><span class=\"p\">):</span>\n       <span class=\"sd\">\"\"\"\"</span>\n<span class=\"sd\">       ..... my auth validation process ....</span>\n<span class=\"sd\">       \"\"\"</span>\n       <span class=\"k\">return</span> <span class=\"kc\">True</span>\n</pre>\n<h2>Authors:</h2>\n<ul>\n<li>Fabio Moreno <a href=\"mailto:fabio.moreno@cuemby.com\">fabio.moreno@cuemby.com</a></li>\n</ul>\n\n          </div>"}, "last_serial": 7018885, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "300607b167dfede1910692678a0ab68a", "sha256": "15c9c2c81cde21997918710e5c3b0300ec436340ff9b1fb9583f31f3eeba32a5"}, "downloads": -1, "filename": "cygrpc-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "300607b167dfede1910692678a0ab68a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20842, "upload_time": "2020-04-14T17:33:25", "upload_time_iso_8601": "2020-04-14T17:33:25.853700Z", "url": "https://files.pythonhosted.org/packages/51/54/6ff12940894dc9b5b4108af48d357621750a648fecf1153ee668871f0c0f/cygrpc-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f719f976fb2292731e9037c8755e6f36", "sha256": "06d8b7d7c5c027c03e3f850c1b8f102176304911128dc59222db3f2145402a21"}, "downloads": -1, "filename": "cygrpc-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f719f976fb2292731e9037c8755e6f36", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15822, "upload_time": "2020-04-14T17:33:27", "upload_time_iso_8601": "2020-04-14T17:33:27.161847Z", "url": "https://files.pythonhosted.org/packages/a3/8b/ba9df2e8bf574184635a91deffe144c112aa36722eedfd31bea5d5fbada2/cygrpc-1.0.1.tar.gz", "yanked": false}], "1.0.1.post1": [{"comment_text": "", "digests": {"md5": "0abf1d30e2f3b89b42e20ebe5b1d57ed", "sha256": "d231303922dcd3c6bbc4a3e83fb25759fa64e11e9d94bf383c349a9a9332b080"}, "downloads": -1, "filename": "cygrpc-1.0.1.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "0abf1d30e2f3b89b42e20ebe5b1d57ed", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20876, "upload_time": "2020-04-14T17:45:35", "upload_time_iso_8601": "2020-04-14T17:45:35.704883Z", "url": "https://files.pythonhosted.org/packages/83/25/7713c0ab8906401b45589600cc3816746ebb649465f8eea61e438714d86d/cygrpc-1.0.1.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "606bd99eb895366cf7aeb24c8ceb60ee", "sha256": "608c9b9a6f17faf49c318832ffdc5c5bbeb66b771524babae482717450d0f8c4"}, "downloads": -1, "filename": "cygrpc-1.0.1.post1.tar.gz", "has_sig": false, "md5_digest": "606bd99eb895366cf7aeb24c8ceb60ee", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15776, "upload_time": "2020-04-14T17:45:37", "upload_time_iso_8601": "2020-04-14T17:45:37.129405Z", "url": "https://files.pythonhosted.org/packages/cb/95/87eafb6ed693446176aaee9990a39f46e5885e6dbdb60d637eda81921c09/cygrpc-1.0.1.post1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0abf1d30e2f3b89b42e20ebe5b1d57ed", "sha256": "d231303922dcd3c6bbc4a3e83fb25759fa64e11e9d94bf383c349a9a9332b080"}, "downloads": -1, "filename": "cygrpc-1.0.1.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "0abf1d30e2f3b89b42e20ebe5b1d57ed", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20876, "upload_time": "2020-04-14T17:45:35", "upload_time_iso_8601": "2020-04-14T17:45:35.704883Z", "url": "https://files.pythonhosted.org/packages/83/25/7713c0ab8906401b45589600cc3816746ebb649465f8eea61e438714d86d/cygrpc-1.0.1.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "606bd99eb895366cf7aeb24c8ceb60ee", "sha256": "608c9b9a6f17faf49c318832ffdc5c5bbeb66b771524babae482717450d0f8c4"}, "downloads": -1, "filename": "cygrpc-1.0.1.post1.tar.gz", "has_sig": false, "md5_digest": "606bd99eb895366cf7aeb24c8ceb60ee", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15776, "upload_time": "2020-04-14T17:45:37", "upload_time_iso_8601": "2020-04-14T17:45:37.129405Z", "url": "https://files.pythonhosted.org/packages/cb/95/87eafb6ed693446176aaee9990a39f46e5885e6dbdb60d637eda81921c09/cygrpc-1.0.1.post1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:06 2020"}