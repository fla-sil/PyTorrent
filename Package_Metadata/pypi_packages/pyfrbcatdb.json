{"info": {"author": "Ronald van Haren, Oscar Martinez-Rubi", "author_email": "r.vanharen@esciencecenter.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: Apache Software License", "Topic :: Scientific/Engineering :: Astronomy"], "description": "# frbcatdb\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n[![Build Status](https://travis-ci.org/AA-ALERT/frbcatdb.svg?branch=master)](https://travis-ci.org/AA-ALERT/frbcatdb)[![codecov](https://codecov.io/gh/AA-ALERT/frbcatdb/branch/master/graph/badge.svg)](https://codecov.io/gh/AA-ALERT/frbcatdb)[![Codacy Badge](https://api.codacy.com/project/badge/Grade/de13488f778e4843a8922ee2417a3416)](https://www.codacy.com/app/omrubi/frbcatdb?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=AA-ALERT/frbcatdb&amp;utm_campaign=Badge_Grade)[![Readthedocs badge](https://readthedocs.org/projects/frbcatdb/badge/)](http://frbcatdb.readthedocs.io/en/latest/?badge=latest)[![PyPI version](https://badge.fury.io/py/pyfrbcatdb.svg)](https://badge.fury.io/py/pyfrbcatdb)[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.1203579.svg)](https://doi.org/10.5281/zenodo.1203579)\n\nThe frbcatdb is a database to store a catalog of Fast Radio Bursts (FRBs).\nThe DB is intended to contain old FRB events as well as new FRBs detected by the\nAA-ALERT FRB detection pipeline from Apertif observations and also possible follow-up observations or others FRBs detected by other telescopes.\nThe frbcatdb is attached to the VOEvent backbone and uses this infrastructure as its source.\n\nThe `db` folder contains scripts to create an empty frbcat DB (`create_db.csh`),\nto import it from an existing dump file (`import_db.sh`) and\nto dump an existing DB to a dump file (`dump_db.csh`).\nIt also contains the model (Entity-Relationship diagram) to be opened with mysql-workbench. ![frbcatdb ER diagram](db/relationships.real.compact.png)\n\nThe `pyfrbcatdb` is Python package for manipulating the frbcatdb and its linking\nwith the VOEvent backbone.\n\n# pyfrbcatdb usage\nA default configuration file is installed in /etc/pyfrbcatdb/dbase.config. In this file the FRBCat database configuration can be defined. Alternatively, a user may supply their own configuration file with a command line argument of the executable, or define the database configuration via argument switches, or, alternatively via environment variables.\n\nFor inserting a VOEvent XML file into the FRBCat database, the decode_VOEvent executable is used:\n```\nusage: decode_VOEvent [-h] [-c MY_CONFIG] --dbName DBNAME [--dbHost DBHOST]\n                      [--dbPort DBPORT] --dbUser DBUSER\n                      [--dbPassword DBPASSWORD] [--CSV CSV] [--log LOG]\n                      [VOEvent [VOEvent ...]]\n\nProcess VOEvent XML file and add it to FRB database Args that start with '--'\n(eg. --dbName) can also be set in a config file\n(/etc/pyfrbcatdb/dbase.config or specified via -c). Config file syntax\nallows: key=value, flag=true, stuff=[a,b,c] (for details, see syntax at\nhttps://goo.gl/R74nmi). If an arg is specified in more than one place, then\ncommandline values override environment variables which override config file\nvalues which override defaults.\n\npositional arguments:\n  VOEvent               List of VOEvent XML files\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c MY_CONFIG, --my-config MY_CONFIG\n                        config file path\n  --dbName DBNAME       name postgres database [env var: dbNameFRBCat]\n  --dbHost DBHOST       name postgres database [env var: dbHostFRBCat]\n  --dbPort DBPORT       name postgres database [env var: dbPortFRBCat]\n  --dbUser DBUSER       user postgres database [env var: dbUserFRBCat]\n  --dbPassword DBPASSWORD\n                        user postgres database password [env var:\n                        dbPasswordFRBCat]\n  --CSV CSV             CSV filename to dump database to [env var: CSVFRBCat]\n  --log LOG             log file, default=[HOME]/pyfrbcatdb_decode.log\n  --zenodo ZENODO       upload CSV to Zenodo, access token [env var: zenodoFRBCat]\n```\nFor inserting an image into the database, the frbcatdb-image executable is used. Apart from the database configuration, the tool takes two positional arguments. The first is the filename of the image to be added, the second is the 'id' in the 'radio measurement params' table that the image should be connected to:\n```\nusage: frbcatdb-image [-h] [-c MY_CONFIG] --dbName DBNAME [--dbHost DBHOST]\n                      [--dbPort DBPORT] --dbUser DBUSER\n                      [--dbPassword DBPASSWORD] [--caption CAPTION]\n                      [--title TITLE]\n                      filename rmpid\n\nCreate VOEvent XML file from FRB database Args that start with '--' (eg.\n--dbName) can also be set in a config file (/data/github/venv-\naa/etc/pyfrbcatdb/dbase.config or specified via -c). Config file syntax\nallows: key=value, flag=true, stuff=[a,b,c] (for details, see syntax at\nhttps://goo.gl/R74nmi). If an arg is specified in more than one place, then\ncommandline values override environment variables which override config file\nvalues which override defaults.\n\npositional arguments:\n  filename              Name of file to fetch from\n  rmpid                 rmp_id\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c MY_CONFIG, --my-config MY_CONFIG\n                        config file path\n  --dbName DBNAME       name postgres database [env var: dbNameFRBCat]\n  --dbHost DBHOST       name postgres database [env var: dbHostFRBCat]\n  --dbPort DBPORT       name postgres database [env var: dbPortFRBCat]\n  --dbUser DBUSER       user postgres database [env var: dbUserFRBCat]\n  --dbPassword DBPASSWORD\n                        user postgres database password [env var:\n                        dbPasswordFRBCat]\n  --caption CAPTION     figure caption\n  --title TITLE         figure title\n```\n\nFor extracting a VOEvent from the FRBCat database, the create_VOEvent executable is used. Note that some features might still be missing for the current release from this utility.\n```\nusage: create_VOEvent [-h] [-c MY_CONFIG] --dbName DBNAME [--dbHost DBHOST]\n                      [--dbPort DBPORT] --dbUser DBUSER\n                      [--dbPassword DBPASSWORD] [--log LOG]\n                      frb_ids [frb_ids ...]\n\nCreate VOEvent XML file from FRB database Args that start with '--' (eg.\n--dbName) can also be set in a config file\n(/etc/pyfrbcatdb/dbase.config or specified via -c). Config\nfile syntax allows: key=value, flag=true, stuff=[a,b,c] (for details, see\nsyntax at https://goo.gl/R74nmi). If an arg is specified in more than one\nplace, then commandline values override environment variables which override\nconfig file values which override defaults.\n\npositional arguments:\n  frb_ids               List of frbs ids\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c MY_CONFIG, --my-config MY_CONFIG\n                        config file path\n  --dbName DBNAME       name postgres database [env var: dbNameFRBCat]\n  --dbHost DBHOST       name postgres database [env var: dbHostFRBCat]\n  --dbPort DBPORT       name postgres database [env var: dbPortFRBCat]\n  --dbUser DBUSER       user postgres database [env var: dbUserFRBCat]\n  --dbPassword DBPASSWORD\n                        user postgres database password [env var:\n                        dbPasswordFRBCat]\n  --log LOG             log file, default=[HOME]/pyfrbcatdb_create.log\n```\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AA-ALERT/frbcatdb", "keywords": "VOEvent", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "pyfrbcatdb", "package_url": "https://pypi.org/project/pyfrbcatdb/", "platform": "", "project_url": "https://pypi.org/project/pyfrbcatdb/", "project_urls": {"Homepage": "https://github.com/AA-ALERT/frbcatdb"}, "release_url": "https://pypi.org/project/pyfrbcatdb/2.0.0/", "requires_dist": null, "requires_python": "", "summary": "A package for manipulating the frbcatdb and its linking with the VOEvent backbone.", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # frbcatdb<br>[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)<br>[![Build Status](https://travis-ci.org/AA-ALERT/frbcatdb.svg?branch=master)](https://travis-ci.org/AA-ALERT/frbcatdb)[![codecov](https://codecov.io/gh/AA-ALERT/frbcatdb/branch/master/graph/badge.svg)](https://codecov.io/gh/AA-ALERT/frbcatdb)[![Codacy Badge](https://api.codacy.com/project/badge/Grade/de13488f778e4843a8922ee2417a3416)](https://www.codacy.com/app/omrubi/frbcatdb?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=AA-ALERT/frbcatdb&amp;amp;utm_campaign=Badge_Grade)[![Readthedocs badge](https://readthedocs.org/projects/frbcatdb/badge/)](http://frbcatdb.readthedocs.io/en/latest/?badge=latest)[![PyPI version](https://badge.fury.io/py/pyfrbcatdb.svg)](https://badge.fury.io/py/pyfrbcatdb)[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.1203579.svg)](https://doi.org/10.5281/zenodo.1203579)<br><br>The frbcatdb is a database to store a catalog of Fast Radio Bursts (FRBs).<br>The DB is intended to contain old FRB events as well as new FRBs detected by the<br>AA-ALERT FRB detection pipeline from Apertif observations and also possible follow-up observations or others FRBs detected by other telescopes.<br>The frbcatdb is attached to the VOEvent backbone and uses this infrastructure as its source.<br><br>The `db` folder contains scripts to create an empty frbcat DB (`create_db.csh`),<br>to import it from an existing dump file (`import_db.sh`) and<br>to dump an existing DB to a dump file (`dump_db.csh`).<br>It also contains the model (Entity-Relationship diagram) to be opened with mysql-workbench. ![frbcatdb ER diagram](db/relationships.real.compact.png)<br><br>The `pyfrbcatdb` is Python package for manipulating the frbcatdb and its linking<br>with the VOEvent backbone.<br><br># pyfrbcatdb usage<br>A default configuration file is installed in /etc/pyfrbcatdb/dbase.config. In this file the FRBCat database configuration can be defined. Alternatively, a user may supply their own configuration file with a command line argument of the executable, or define the database configuration via argument switches, or, alternatively via environment variables.<br><br>For inserting a VOEvent XML file into the FRBCat database, the decode_VOEvent executable is used:<br>```<br>usage: decode_VOEvent [-h] [-c MY_CONFIG] --dbName DBNAME [--dbHost DBHOST]<br>                      [--dbPort DBPORT] --dbUser DBUSER<br>                      [--dbPassword DBPASSWORD] [--CSV CSV] [--log LOG]<br>                      [VOEvent [VOEvent ...]]<br><br>Process VOEvent XML file and add it to FRB database Args that start with '--'<br>(eg. --dbName) can also be set in a config file<br>(/etc/pyfrbcatdb/dbase.config or specified via -c). Config file syntax<br>allows: key=value, flag=true, stuff=[a,b,c] (for details, see syntax at<br>https://goo.gl/R74nmi). If an arg is specified in more than one place, then<br>commandline values override environment variables which override config file<br>values which override defaults.<br><br>positional arguments:<br>  VOEvent               List of VOEvent XML files<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  -c MY_CONFIG, --my-config MY_CONFIG<br>                        config file path<br>  --dbName DBNAME       name postgres database [env var: dbNameFRBCat]<br>  --dbHost DBHOST       name postgres database [env var: dbHostFRBCat]<br>  --dbPort DBPORT       name postgres database [env var: dbPortFRBCat]<br>  --dbUser DBUSER       user postgres database [env var: dbUserFRBCat]<br>  --dbPassword DBPASSWORD<br>                        user postgres database password [env var:<br>                        dbPasswordFRBCat]<br>  --CSV CSV             CSV filename to dump database to [env var: CSVFRBCat]<br>  --log LOG             log file, default=[HOME]/pyfrbcatdb_decode.log<br>  --zenodo ZENODO       upload CSV to Zenodo, access token [env var: zenodoFRBCat]<br>```<br>For inserting an image into the database, the frbcatdb-image executable is used. Apart from the database configuration, the tool takes two positional arguments. The first is the filename of the image to be added, the second is the 'id' in the 'radio measurement params' table that the image should be connected to:<br>```<br>usage: frbcatdb-image [-h] [-c MY_CONFIG] --dbName DBNAME [--dbHost DBHOST]<br>                      [--dbPort DBPORT] --dbUser DBUSER<br>                      [--dbPassword DBPASSWORD] [--caption CAPTION]<br>                      [--title TITLE]<br>                      filename rmpid<br><br>Create VOEvent XML file from FRB database Args that start with '--' (eg.<br>--dbName) can also be set in a config file (/data/github/venv-<br>aa/etc/pyfrbcatdb/dbase.config or specified via -c). Config file syntax<br>allows: key=value, flag=true, stuff=[a,b,c] (for details, see syntax at<br>https://goo.gl/R74nmi). If an arg is specified in more than one place, then<br>commandline values override environment variables which override config file<br>values which override defaults.<br><br>positional arguments:<br>  filename              Name of file to fetch from<br>  rmpid                 rmp_id<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  -c MY_CONFIG, --my-config MY_CONFIG<br>                        config file path<br>  --dbName DBNAME       name postgres database [env var: dbNameFRBCat]<br>  --dbHost DBHOST       name postgres database [env var: dbHostFRBCat]<br>  --dbPort DBPORT       name postgres database [env var: dbPortFRBCat]<br>  --dbUser DBUSER       user postgres database [env var: dbUserFRBCat]<br>  --dbPassword DBPASSWORD<br>                        user postgres database password [env var:<br>                        dbPasswordFRBCat]<br>  --caption CAPTION     figure caption<br>  --title TITLE         figure title<br>```<br><br>For extracting a VOEvent from the FRBCat database, the create_VOEvent executable is used. Note that some features might still be missing for the current release from this utility.<br>```<br>usage: create_VOEvent [-h] [-c MY_CONFIG] --dbName DBNAME [--dbHost DBHOST]<br>                      [--dbPort DBPORT] --dbUser DBUSER<br>                      [--dbPassword DBPASSWORD] [--log LOG]<br>                      frb_ids [frb_ids ...]<br><br>Create VOEvent XML file from FRB database Args that start with '--' (eg.<br>--dbName) can also be set in a config file<br>(/etc/pyfrbcatdb/dbase.config or specified via -c). Config<br>file syntax allows: key=value, flag=true, stuff=[a,b,c] (for details, see<br>syntax at https://goo.gl/R74nmi). If an arg is specified in more than one<br>place, then commandline values override environment variables which override<br>config file values which override defaults.<br><br>positional arguments:<br>  frb_ids               List of frbs ids<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  -c MY_CONFIG, --my-config MY_CONFIG<br>                        config file path<br>  --dbName DBNAME       name postgres database [env var: dbNameFRBCat]<br>  --dbHost DBHOST       name postgres database [env var: dbHostFRBCat]<br>  --dbPort DBPORT       name postgres database [env var: dbPortFRBCat]<br>  --dbUser DBUSER       user postgres database [env var: dbUserFRBCat]<br>  --dbPassword DBPASSWORD<br>                        user postgres database password [env var:<br>                        dbPasswordFRBCat]<br>  --log LOG             log file, default=[HOME]/pyfrbcatdb_create.log<br>```<br>\n          </div>"}, "last_serial": 4128081, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "716944b8b45ebb7dc625845c15343d3d", "sha256": "069d15f8ddc7ebade41f0bae4426b7a37b93a81417e1e5800364d7f1c349ceb7"}, "downloads": -1, "filename": "pyfrbcatdb-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "716944b8b45ebb7dc625845c15343d3d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22489, "upload_time": "2017-11-16T13:47:31", "upload_time_iso_8601": "2017-11-16T13:47:31.496162Z", "url": "https://files.pythonhosted.org/packages/4e/56/b664618fa54f2e162872eae00f4a502755146d5e0fccc40d245146055723/pyfrbcatdb-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9614a9ddcc24d907904aa51b72c7b9bd", "sha256": "3f01f57dbabed8090e42e964e6a2721496fbfff925684e25f94bc3c24fa543e4"}, "downloads": -1, "filename": "pyfrbcatdb-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9614a9ddcc24d907904aa51b72c7b9bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16505, "upload_time": "2017-11-16T13:47:33", "upload_time_iso_8601": "2017-11-16T13:47:33.576818Z", "url": "https://files.pythonhosted.org/packages/6c/9e/69872ed5255201d9b9218b86b75c142ffc95af399a7d22110c08f30d2565/pyfrbcatdb-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "afaffafc93a46a70cdbda47845b7e933", "sha256": "6671d2bcca95f4d4770c7cbf510a5c6c7c9c4639b833813488caf3c4aacda51b"}, "downloads": -1, "filename": "pyfrbcatdb-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "afaffafc93a46a70cdbda47845b7e933", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26700, "upload_time": "2018-03-19T14:31:23", "upload_time_iso_8601": "2018-03-19T14:31:23.362643Z", "url": "https://files.pythonhosted.org/packages/a0/5e/21be89be2fca9d8abd1aad2cf3ba629ae2ad24ae11b5ffa0b4df520314f6/pyfrbcatdb-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfc5334fbbf0271e7961b113a2dc647d", "sha256": "52aff8c21131b1be09af724da8d9f5eaa68fa85602b7e97bea6cbd01ff73b23c"}, "downloads": -1, "filename": "pyfrbcatdb-1.1.0.tar.gz", "has_sig": false, "md5_digest": "bfc5334fbbf0271e7961b113a2dc647d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23645, "upload_time": "2018-03-19T14:31:25", "upload_time_iso_8601": "2018-03-19T14:31:25.104031Z", "url": "https://files.pythonhosted.org/packages/ee/47/3b2f82bbd0ca2a48756b15fa6f1dd0f87f87f56f233986586a4dc2ab3950/pyfrbcatdb-1.1.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "0515463ff2b313ce7603032a66119a39", "sha256": "39ba9458751e5c4f1bdcd5ed291851b46a014f52e1fc5bff59769ce3219c8688"}, "downloads": -1, "filename": "pyfrbcatdb-2.0.0.tar.gz", "has_sig": false, "md5_digest": "0515463ff2b313ce7603032a66119a39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27462, "upload_time": "2018-08-02T10:41:21", "upload_time_iso_8601": "2018-08-02T10:41:21.206665Z", "url": "https://files.pythonhosted.org/packages/a2/c8/7c550bd5d8a1a76eab1a746af67f7676257bcd58b99ff2980722b6866b49/pyfrbcatdb-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0515463ff2b313ce7603032a66119a39", "sha256": "39ba9458751e5c4f1bdcd5ed291851b46a014f52e1fc5bff59769ce3219c8688"}, "downloads": -1, "filename": "pyfrbcatdb-2.0.0.tar.gz", "has_sig": false, "md5_digest": "0515463ff2b313ce7603032a66119a39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27462, "upload_time": "2018-08-02T10:41:21", "upload_time_iso_8601": "2018-08-02T10:41:21.206665Z", "url": "https://files.pythonhosted.org/packages/a2/c8/7c550bd5d8a1a76eab1a746af67f7676257bcd58b99ff2980722b6866b49/pyfrbcatdb-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:33 2020"}