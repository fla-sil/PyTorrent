{"info": {"author": "Yicheng Luo", "author_email": "ethanluoyc@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "===================\nstatsnba-playbyplay\n===================\n\n.. image:: https://img.shields.io/pypi/v/statsnba-playbyplay.svg?maxAge=2592000\n   :target: https://pypi.python.org/pypi?name=statsnba-playbyplay&version=0.1.0&:action=display\n   :alt: PyPi Version\n\n.. image:: https://readthedocs.org/projects/statsnba-playbyplay/badge/?version=latest\n   :target: http://statsnba-playbyplay.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\nNOTE: This project is still pretty much work in progress so it might\nintroduce many breaking changes.\n\n- `Introduction`_\n- `Use the data`_\n- `Benefits of this package`_\n- `Installation`_\n- `TODOs`_\n\nIntroduction\n------------\n\nBasketball analytics using play-by-play data have been an shared\ninterest for many people. However, the lack of processed play-by-play\nhas prohibited such analysis by many.\n\nThis project is intended to provide parsing functionality for the\nplay-by-play data from http://stats.nba.com into more a comprehensive\nformat like that on\n`NBAStuffer <https://downloads.nbastuffer.com/nba-play-by-play-data-sets>`__.\nIt is intended to accompany our research: `Adversarial Synergy Graph\nModel for Predicting Game Outcomes in Human\nBasketball <http://www.somchaya.org/papers/2015_ALA_Liemhetcharat.pdf>`__.\nto prepare the data. If you are interested in more general statistics or\nplayer information, you should definitely check out\n`py-Goldsberry <https://github.com/bradleyfay/py-Goldsberry>`__.\n\nWhile there are still limitations with the current parsing strategy, it\ndoes not affect the tabulation of APM and other play-by-play based\nmetrics.\n\nUse the data\n------------\n\nIf you just want to use the data that is processed with the package\nwithout touching it, you can find a copy of the data\n`from S3 <http://statsnba.s3-website-us-east-1.amazonaws.com/>`__. Under\n``data/zip/`` you will find the gamelog and game files in JSON format.\nYou may introspect into the JSONs for the fields that are included in\nthem.\n\nBenefits of this package\n------------------------\n\n-  The data is obtained directly from http://stats.nba.com, the parsed\n   play-by-plays can be verified against the official boxscores.\n\n\nInstallation\n------------\n\nAt the command line\n\n  .. code:: shell                \n            \n    $ pip install statsnba-playbyplay\n\n\nTODOs\n-----\n\n-  Documentation.\n-  Parse subtypes of events. (e.g. when there is a shot, is it a layup\n   or jumpshot? the raw data provides different codes for these subtypes\n   but I have not yet figured out a way to easily decrypt all of them.)\n-  More tests at all levels of the package.\n-  A Github Pages website for showcasing the package.\n-  Wiki pages on the schema of the parsed data on my S3 bucket.\n-  Daily updates of the data feed (cronjob or Lambda function on an EC2\n   instance to track the gamelogs daily and make updates on S3?)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ethanluoyc/statsnba-playbyplay", "keywords": "statsnba", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "statsnba-playbyplay", "package_url": "https://pypi.org/project/statsnba-playbyplay/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/statsnba-playbyplay/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ethanluoyc/statsnba-playbyplay"}, "release_url": "https://pypi.org/project/statsnba-playbyplay/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "Package for parsing play-by-play data from stats.nba.com", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi?name=statsnba-playbyplay&amp;version=0.1.0&amp;:action=display\" rel=\"nofollow\"><img alt=\"PyPi Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9704ad7523fb8c872f55243079f409bce386124c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73746174736e62612d706c61796279706c61792e7376673f6d61784167653d32353932303030\"></a>\n<a href=\"http://statsnba-playbyplay.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d13721092bb9cbe62319d1b2c2328722bee124a4/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f73746174736e62612d706c61796279706c61792f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<p>NOTE: This project is still pretty much work in progress so it might\nintroduce many breaking changes.</p>\n<ul>\n<li><a href=\"#introduction\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#use-the-data\" rel=\"nofollow\">Use the data</a></li>\n<li><a href=\"#benefits-of-this-package\" rel=\"nofollow\">Benefits of this package</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#todos\" rel=\"nofollow\">TODOs</a></li>\n</ul>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Basketball analytics using play-by-play data have been an shared\ninterest for many people. However, the lack of processed play-by-play\nhas prohibited such analysis by many.</p>\n<p>This project is intended to provide parsing functionality for the\nplay-by-play data from <a href=\"http://stats.nba.com\" rel=\"nofollow\">http://stats.nba.com</a> into more a comprehensive\nformat like that on\n<a href=\"https://downloads.nbastuffer.com/nba-play-by-play-data-sets\" rel=\"nofollow\">NBAStuffer</a>.\nIt is intended to accompany our research: <a href=\"http://www.somchaya.org/papers/2015_ALA_Liemhetcharat.pdf\" rel=\"nofollow\">Adversarial Synergy Graph\nModel for Predicting Game Outcomes in Human\nBasketball</a>.\nto prepare the data. If you are interested in more general statistics or\nplayer information, you should definitely check out\n<a href=\"https://github.com/bradleyfay/py-Goldsberry\" rel=\"nofollow\">py-Goldsberry</a>.</p>\n<p>While there are still limitations with the current parsing strategy, it\ndoes not affect the tabulation of APM and other play-by-play based\nmetrics.</p>\n</div>\n<div id=\"use-the-data\">\n<h2>Use the data</h2>\n<p>If you just want to use the data that is processed with the package\nwithout touching it, you can find a copy of the data\n<a href=\"http://statsnba.s3-website-us-east-1.amazonaws.com/\" rel=\"nofollow\">from S3</a>. Under\n<tt>data/zip/</tt> you will find the gamelog and game files in JSON format.\nYou may introspect into the JSONs for the fields that are included in\nthem.</p>\n</div>\n<div id=\"benefits-of-this-package\">\n<h2>Benefits of this package</h2>\n<ul>\n<li>The data is obtained directly from <a href=\"http://stats.nba.com\" rel=\"nofollow\">http://stats.nba.com</a>, the parsed\nplay-by-plays can be verified against the official boxscores.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>At the command line</p>\n<blockquote>\n<pre>$ pip install statsnba-playbyplay\n</pre>\n</blockquote>\n</div>\n<div id=\"todos\">\n<h2>TODOs</h2>\n<ul>\n<li>Documentation.</li>\n<li>Parse subtypes of events. (e.g. when there is a shot, is it a layup\nor jumpshot? the raw data provides different codes for these subtypes\nbut I have not yet figured out a way to easily decrypt all of them.)</li>\n<li>More tests at all levels of the package.</li>\n<li>A Github Pages website for showcasing the package.</li>\n<li>Wiki pages on the schema of the parsed data on my S3 bucket.</li>\n<li>Daily updates of the data feed (cronjob or Lambda function on an EC2\ninstance to track the gamelogs daily and make updates on S3?)</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2840921, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0a870475b025112a21612cbcf6c96f37", "sha256": "528b7c66b448f1ff93107d796711a51bb1b82a014c7cce883121fbb512b003d2"}, "downloads": -1, "filename": "statsnba_playbyplay-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "0a870475b025112a21612cbcf6c96f37", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 10703, "upload_time": "2016-07-10T15:41:34", "upload_time_iso_8601": "2016-07-10T15:41:34.334945Z", "url": "https://files.pythonhosted.org/packages/7a/ae/c318e5df98181bf8c41926bec0ae36ca5555e8cae5a78dbf131232fa5ad0/statsnba_playbyplay-0.1.0-py2-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a77bc6b9472adbb55425c72ca476c2f1", "sha256": "d368d951294c1a9e094056995d8f783427432125e055fef00c779b823a3540e5"}, "downloads": -1, "filename": "statsnba-playbyplay-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a77bc6b9472adbb55425c72ca476c2f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 417161, "upload_time": "2016-08-02T14:54:14", "upload_time_iso_8601": "2016-08-02T14:54:14.485498Z", "url": "https://files.pythonhosted.org/packages/0b/a4/d78475b5c1ad2e984208b5bc9a8ab5d91d206c5c8e52045df47ace7e6389/statsnba-playbyplay-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8088251f403b3f5da7a29caf1a283003", "sha256": "d94fd2eb4c9ee444b16c8db36b959e8a4f4d7b307116744ebe197d15c6ad6cc6"}, "downloads": -1, "filename": "statsnba-playbyplay-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8088251f403b3f5da7a29caf1a283003", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 417369, "upload_time": "2016-08-04T16:08:38", "upload_time_iso_8601": "2016-08-04T16:08:38.111595Z", "url": "https://files.pythonhosted.org/packages/07/10/9abdf84a6c94bb4e2054ad417e74b3bd26eca8e0acb79511ce3c4e7363fe/statsnba-playbyplay-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "0014e5696aa551ad40d931bedfa105bb", "sha256": "a3381d4c6a8f634aff84e1995bdbb2e81b59efb6d1f54082f15ff3bef7b3c927"}, "downloads": -1, "filename": "statsnba-playbyplay-0.3.0.tar.gz", "has_sig": false, "md5_digest": "0014e5696aa551ad40d931bedfa105bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 413215, "upload_time": "2017-04-30T21:10:08", "upload_time_iso_8601": "2017-04-30T21:10:08.946387Z", "url": "https://files.pythonhosted.org/packages/5f/bd/d2e0866cd6f627c943a3382d2787aefec1e41788c5e5d68a05e4d4988ed8/statsnba-playbyplay-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0014e5696aa551ad40d931bedfa105bb", "sha256": "a3381d4c6a8f634aff84e1995bdbb2e81b59efb6d1f54082f15ff3bef7b3c927"}, "downloads": -1, "filename": "statsnba-playbyplay-0.3.0.tar.gz", "has_sig": false, "md5_digest": "0014e5696aa551ad40d931bedfa105bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 413215, "upload_time": "2017-04-30T21:10:08", "upload_time_iso_8601": "2017-04-30T21:10:08.946387Z", "url": "https://files.pythonhosted.org/packages/5f/bd/d2e0866cd6f627c943a3382d2787aefec1e41788c5e5d68a05e4d4988ed8/statsnba-playbyplay-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:20 2020"}