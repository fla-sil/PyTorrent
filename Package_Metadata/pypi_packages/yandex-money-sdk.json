{"info": {"author": "Anton Ermak", "author_email": "ermak@yamoney.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4"], "description": "|Build Status| |Coverage Status|\n\nPython Yandex.Money API SDK\n===========================\n\nRequirements\n------------\n\n1. Python 2.7 or Python 3.x\n2. pip\n\nLinks\n-----\n\n1. Yandex.Money API page: `Ru <http://api.yandex.ru/money/>`__,\n   `En <http://api.yandex.com/money/>`__\n\nGetting started\n---------------\n\nInstallation\n~~~~~~~~~~~~\n\n1. Install it with ``pip install yandex-money-sdk``\n2. Paste ``from yandex_money.api import Wallet, ExternalPayment`` to\n   your source code\n\nPayments from the Yandex.Money wallet\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nUsing Yandex.Money API requires following steps\n\n1. Obtain token URL and redirect user's browser to Yandex.Money service.\n   Note: ``client_id``, ``redirect_uri``, ``client_secret`` are\n   constants that you get, when\n   `register <https://sp-money.yandex.ru/myservices/new.xml>`__ app in\n   Yandex.Money API.\n\n   .. code:: python\n\n       scope = ['account-info', 'operation-history'] # etc..\n       auth_url = Wallet.build_obtain_token_url(client_id,\n           redirect_uri, scope)\n\n2. After that, user fills Yandex.Money HTML form and user is redirected\n   back to ``REDIRECT_URI?code=CODE``.\n\n3. You should immediately exchange ``CODE`` with ``ACCESS_TOKEN``.\n\n   .. code:: python\n\n       access_token = Wallet.get_access_token(client_id, code, redirect_uri,\n           client_secret=None)\n\n4. Now you can use Yandex.Money API.\n\n   .. code:: python\n\n       account_info = api.account_info()\n       balance = account_info['balance'] # and so on\n\n       request_options = {\n           \"pattern_id\": \"p2p\",\n           \"to\": \"410011161616877\",\n           \"amount_due\": \"0.02\",\n           \"comment\": \"test payment comment from yandex-money-python\",\n           \"message\": \"test payment message from yandex-money-python\",\n           \"label\": \"testPayment\",\n           \"test_payment\": true,\n           \"test_result\": \"success\"\n       };\n       request_result = api.request(request_options)\n       # check status\n\n       process_payment = api.process({\n           \"request_id\": request_result['request_id'],\n       })\n       # check result\n       if process_payment['status'] == \"success\":\n           # show success page\n       else:\n           # something went wrong\n\nPayments from bank cards without authorization\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n1. Fetch instantce-id(ussually only once for every client. You can store\n   result in DB).\n\n   .. code:: python\n\n       response = ExternalPayment.get_instance_id(client_id)\n       if reponse.status == \"success\":\n           instance_id = response.instance_id;\n       else:\n           # throw exception with reponse->error message\n\n2. Make request payment\n\n   .. code:: python\n\n       # make instance\n       external_payment = ExternalPayment(instance_id);\n\n       payment_options = {\n           # pattern_id, etc..\n       }\n       response = external_payment.request(payment_options)\n       if response.status == \"success\":\n           request_id = response.request_id\n       else: \n           # throw exception with response->message\n\n3. Process the request with process-payment.\n\n   .. code:: python\n\n       process_options = {\n           \"request_id\": request_id\n           # other params..\n       }\n       result = external_payment.process(process_options)\n       # process result according to docs\n\nRunning tests\n-------------\n\n1. Clone this repo.\n2. Create ``tests/constants.python`` file with ``ACCESS_TOKEN`` and\n   ``CLIENT_ID`` constants.\n3. Install ``tox``\n4. Run ``tox`` in repo root directory\n\n.. |Build Status| image:: https://travis-ci.org/yandex-money/yandex-money-sdk-python.svg?branch=master\n   :target: https://travis-ci.org/yandex-money/yandex-money-sdk-python\n.. |Coverage Status| image:: https://coveralls.io/repos/yandex-money/yandex-money-sdk-python/badge.png?branch=master\n   :target: https://coveralls.io/r/yandex-money/yandex-money-sdk-python?branch=master", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "sdk yandex money", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "yandex-money-sdk", "package_url": "https://pypi.org/project/yandex-money-sdk/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/yandex-money-sdk/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/yandex-money-sdk/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "SDK yandex money API", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/yandex-money/yandex-money-sdk-python\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/db10190f0ef5fe1cdf219e15783e0bb94731faee/68747470733a2f2f7472617669732d63692e6f72672f79616e6465782d6d6f6e65792f79616e6465782d6d6f6e65792d73646b2d707974686f6e2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/r/yandex-money/yandex-money-sdk-python?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/567f20079e2da830d5de6890330eaef3db2d7b6a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f79616e6465782d6d6f6e65792f79616e6465782d6d6f6e65792d73646b2d707974686f6e2f62616467652e706e673f6272616e63683d6d6173746572\"></a></p>\n<div id=\"python-yandex-money-api-sdk\">\n<h2>Python Yandex.Money API SDK</h2>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ol>\n<li>Python 2.7 or Python 3.x</li>\n<li>pip</li>\n</ol>\n</div>\n<div id=\"links\">\n<h3>Links</h3>\n<ol>\n<li>Yandex.Money API page: <a href=\"http://api.yandex.ru/money/\" rel=\"nofollow\">Ru</a>,\n<a href=\"http://api.yandex.com/money/\" rel=\"nofollow\">En</a></li>\n</ol>\n</div>\n<div id=\"getting-started\">\n<h3>Getting started</h3>\n<div id=\"installation\">\n<h4>Installation</h4>\n<ol>\n<li>Install it with <tt>pip install <span class=\"pre\">yandex-money-sdk</span></tt></li>\n<li>Paste <tt>from yandex_money.api import Wallet, ExternalPayment</tt> to\nyour source code</li>\n</ol>\n</div>\n<div id=\"payments-from-the-yandex-money-wallet\">\n<h4>Payments from the Yandex.Money wallet</h4>\n<p>Using Yandex.Money API requires following steps</p>\n<ol>\n<li><p>Obtain token URL and redirect user\u2019s browser to Yandex.Money service.\nNote: <tt>client_id</tt>, <tt>redirect_uri</tt>, <tt>client_secret</tt> are\nconstants that you get, when\n<a href=\"https://sp-money.yandex.ru/myservices/new.xml\" rel=\"nofollow\">register</a> app in\nYandex.Money API.</p>\n<pre><span class=\"n\">scope</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'account-info'</span><span class=\"p\">,</span> <span class=\"s1\">'operation-history'</span><span class=\"p\">]</span> <span class=\"c1\"># etc..</span>\n<span class=\"n\">auth_url</span> <span class=\"o\">=</span> <span class=\"n\">Wallet</span><span class=\"o\">.</span><span class=\"n\">build_obtain_token_url</span><span class=\"p\">(</span><span class=\"n\">client_id</span><span class=\"p\">,</span>\n    <span class=\"n\">redirect_uri</span><span class=\"p\">,</span> <span class=\"n\">scope</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li><p>After that, user fills Yandex.Money HTML form and user is redirected\nback to <tt><span class=\"pre\">REDIRECT_URI?code=CODE</span></tt>.</p>\n</li>\n<li><p>You should immediately exchange <tt>CODE</tt> with <tt>ACCESS_TOKEN</tt>.</p>\n<pre><span class=\"n\">access_token</span> <span class=\"o\">=</span> <span class=\"n\">Wallet</span><span class=\"o\">.</span><span class=\"n\">get_access_token</span><span class=\"p\">(</span><span class=\"n\">client_id</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"p\">,</span> <span class=\"n\">redirect_uri</span><span class=\"p\">,</span>\n    <span class=\"n\">client_secret</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li><p>Now you can use Yandex.Money API.</p>\n<pre><span class=\"n\">account_info</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">account_info</span><span class=\"p\">()</span>\n<span class=\"n\">balance</span> <span class=\"o\">=</span> <span class=\"n\">account_info</span><span class=\"p\">[</span><span class=\"s1\">'balance'</span><span class=\"p\">]</span> <span class=\"c1\"># and so on</span>\n\n<span class=\"n\">request_options</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"pattern_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"p2p\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"to\"</span><span class=\"p\">:</span> <span class=\"s2\">\"410011161616877\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"amount_due\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0.02\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"comment\"</span><span class=\"p\">:</span> <span class=\"s2\">\"test payment comment from yandex-money-python\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"test payment message from yandex-money-python\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"label\"</span><span class=\"p\">:</span> <span class=\"s2\">\"testPayment\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"test_payment\"</span><span class=\"p\">:</span> <span class=\"n\">true</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"test_result\"</span><span class=\"p\">:</span> <span class=\"s2\">\"success\"</span>\n<span class=\"p\">};</span>\n<span class=\"n\">request_result</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"n\">request_options</span><span class=\"p\">)</span>\n<span class=\"c1\"># check status</span>\n\n<span class=\"n\">process_payment</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"request_id\"</span><span class=\"p\">:</span> <span class=\"n\">request_result</span><span class=\"p\">[</span><span class=\"s1\">'request_id'</span><span class=\"p\">],</span>\n<span class=\"p\">})</span>\n<span class=\"c1\"># check result</span>\n<span class=\"k\">if</span> <span class=\"n\">process_payment</span><span class=\"p\">[</span><span class=\"s1\">'status'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">\"success\"</span><span class=\"p\">:</span>\n    <span class=\"c1\"># show success page</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"c1\"># something went wrong</span>\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"payments-from-bank-cards-without-authorization\">\n<h4>Payments from bank cards without authorization</h4>\n<ol>\n<li><p>Fetch instantce-id(ussually only once for every client. You can store\nresult in DB).</p>\n<pre><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">ExternalPayment</span><span class=\"o\">.</span><span class=\"n\">get_instance_id</span><span class=\"p\">(</span><span class=\"n\">client_id</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">reponse</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">==</span> <span class=\"s2\">\"success\"</span><span class=\"p\">:</span>\n    <span class=\"n\">instance_id</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">instance_id</span><span class=\"p\">;</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"c1\"># throw exception with reponse-&gt;error message</span>\n</pre>\n</li>\n<li><p>Make request payment</p>\n<pre><span class=\"c1\"># make instance</span>\n<span class=\"n\">external_payment</span> <span class=\"o\">=</span> <span class=\"n\">ExternalPayment</span><span class=\"p\">(</span><span class=\"n\">instance_id</span><span class=\"p\">);</span>\n\n<span class=\"n\">payment_options</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># pattern_id, etc..</span>\n<span class=\"p\">}</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">external_payment</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"n\">payment_options</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">==</span> <span class=\"s2\">\"success\"</span><span class=\"p\">:</span>\n    <span class=\"n\">request_id</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">request_id</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"c1\"># throw exception with response-&gt;message</span>\n</pre>\n</li>\n<li><p>Process the request with process-payment.</p>\n<pre><span class=\"n\">process_options</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"request_id\"</span><span class=\"p\">:</span> <span class=\"n\">request_id</span>\n    <span class=\"c1\"># other params..</span>\n<span class=\"p\">}</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">external_payment</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">process_options</span><span class=\"p\">)</span>\n<span class=\"c1\"># process result according to docs</span>\n</pre>\n</li>\n</ol>\n</div>\n</div>\n<div id=\"running-tests\">\n<h3>Running tests</h3>\n<ol>\n<li>Clone this repo.</li>\n<li>Create <tt>tests/constants.python</tt> file with <tt>ACCESS_TOKEN</tt> and\n<tt>CLIENT_ID</tt> constants.</li>\n<li>Install <tt>tox</tt></li>\n<li>Run <tt>tox</tt> in repo root directory</li>\n</ol>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1407571, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b012f72b8ee5915b291afaa2cb026b36", "sha256": "f5eae7f2f52cec9abf3665c80e197f94c260381412e2cd7e0c3de5ea6eabadc7"}, "downloads": -1, "filename": "yandex-money-sdk-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b012f72b8ee5915b291afaa2cb026b36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4144, "upload_time": "2014-10-05T15:41:09", "upload_time_iso_8601": "2014-10-05T15:41:09.302449Z", "url": "https://files.pythonhosted.org/packages/2b/89/02d698680dcee7e99f16cf320e8e7ad75e42c73767c81228ced5d6986a8d/yandex-money-sdk-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "47ce43ae93a1a023760934724c402bca", "sha256": "f8f6be2b1e1815c77b1e356d6fcc0948f30e51a2b8b07a1e59fc211570e5e69f"}, "downloads": -1, "filename": "yandex-money-sdk-0.1.1.tar.gz", "has_sig": false, "md5_digest": "47ce43ae93a1a023760934724c402bca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4352, "upload_time": "2014-10-06T14:39:21", "upload_time_iso_8601": "2014-10-06T14:39:21.222001Z", "url": "https://files.pythonhosted.org/packages/c6/c3/b12587c6dc4adb6cc4f28711e3bf664cf61122669ca5f3b8ee189eef5d4a/yandex-money-sdk-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "e845992617293689882ffda558dc0b8c", "sha256": "e59c19de2315040e5dd54bf18509e693762bbdc15a92d026a2633416140ae1aa"}, "downloads": -1, "filename": "yandex-money-sdk-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e845992617293689882ffda558dc0b8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5294, "upload_time": "2015-01-27T14:54:39", "upload_time_iso_8601": "2015-01-27T14:54:39.459122Z", "url": "https://files.pythonhosted.org/packages/be/8f/4fdc45d5c8e7d8606b705fb56887eb87c6d24b4cc1432ad1dfe8ec0ab8db/yandex-money-sdk-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "86c470490c817112c9dfe93e356e8bb8", "sha256": "be15d5a733e1c92038e40ca789e85aa103e0e3123f5127d0ce071fd97c692d25"}, "downloads": -1, "filename": "yandex-money-sdk-0.1.3.tar.gz", "has_sig": false, "md5_digest": "86c470490c817112c9dfe93e356e8bb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5283, "upload_time": "2015-02-03T10:34:23", "upload_time_iso_8601": "2015-02-03T10:34:23.529519Z", "url": "https://files.pythonhosted.org/packages/1d/1d/4a55bd569e64702e1c26a6b91517470fa498bef436232fcf99fa4f3b5a98/yandex-money-sdk-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "86c470490c817112c9dfe93e356e8bb8", "sha256": "be15d5a733e1c92038e40ca789e85aa103e0e3123f5127d0ce071fd97c692d25"}, "downloads": -1, "filename": "yandex-money-sdk-0.1.3.tar.gz", "has_sig": false, "md5_digest": "86c470490c817112c9dfe93e356e8bb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5283, "upload_time": "2015-02-03T10:34:23", "upload_time_iso_8601": "2015-02-03T10:34:23.529519Z", "url": "https://files.pythonhosted.org/packages/1d/1d/4a55bd569e64702e1c26a6b91517470fa498bef436232fcf99fa4f3b5a98/yandex-money-sdk-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:23:12 2020"}