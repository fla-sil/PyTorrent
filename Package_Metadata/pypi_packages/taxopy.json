{"info": {"author": "Antonio Pedro Camargo", "author_email": "antoniop.camargo@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Software Development :: Libraries"], "description": "# taxopy\n\nA Python package for obtaining complete lineages and the lowest common ancestor (LCA) from a set of taxonomic identifiers.\n\n## Installation\n\nThere are two ways to install taxopy:\n\n  - Using pip:\n\n```\npip install taxopy\n```\n\n  - Using conda:\n\n```\nconda install -c conda-forge -c bioconda taxopy\n```\n\n## Usage\n\n```python\nimport taxopy\n```\n\nFirst you need to download taxonomic information from NCBI's servers and put this data into a `TaxDb` object:\n\n\n```python\ntaxdb = taxopy.TaxDb()\n# You can also use your own set of taxonomy files:\ntaxdb = taxopy.TaxDb(nodes_dmp=\"taxdb/nodes.dmp\", names_dmp=\"taxdb/names.dmp\", keep_files=True)\n```\n\nThe `TaxDb` object stores the name, rank and parent-child relationships of each taxonomic identifier:\n\n\n```python\nprint(taxdb.taxid2name['2'])\nprint(taxdb.taxid2parent['2'])\nprint(taxdb.taxid2rank['2'])\n```\n\n    Bacteria\n    131567\n    superkingdom\n\n\nTo get information of a given taxon you can create a `Taxon` object using its taxonomic identifier:\n\n\n```python\nhuman = taxopy.Taxon('9606', taxdb)\ngorilla = taxopy.Taxon('9593', taxdb)\nlagomorpha = taxopy.Taxon('9975', taxdb)\n```\n\nEach `Taxon` object stores a variety of information, such as the rank, identifier and name of the input taxon, and the identifiers and names of all the parent taxa:\n\n\n```python\nprint(lagomorpha.rank)\nprint(lagomorpha.name)\nprint(lagomorpha.name_lineage)\n```\n\n    order\n    Lagomorpha\n    ['Lagomorpha', 'Glires', 'Euarchontoglires', 'Boreoeutheria', 'Eutheria', 'Theria', 'Mammalia', 'Amniota', 'Tetrapoda', 'Dipnotetrapodomorpha', 'Sarcopterygii', 'Euteleostomi', 'Teleostomi', 'Gnathostomata', 'Vertebrata', 'Craniata', 'Chordata', 'Deuterostomia', 'Bilateria', 'Eumetazoa', 'Metazoa', 'Opisthokonta', 'Eukaryota', 'cellular organisms', 'root']\n\n\nYou can get the lowest common ancestor of a list of taxa using the `find_lca` function:\n\n\n```python\nhuman_lagomorpha_lca = taxopy.find_lca([human, lagomorpha], taxdb)\nprint(human_lagomorpha_lca.name)\n```\n\n    Euarchontoglires\n\n\nYou may also use the `find_majority_vote` to discover the most specific taxon that is shared by more than half of the lineages of a list of taxa:\n\n\n```python\nmajority_vote = taxopy.find_majority_vote([human, gorilla, lagomorpha], taxdb)\nprint(majority_vote.name)\n```\n\n    Homininae\n\nThe `find_majority_vote` allows you to control its stringency via the `fraction` parameter. For instance, if you would set `fraction` to 0.75 the resulting taxon would be shared by more than 75% of the input lineages. By default, `fraction` is 0.5.\n\n## Acknowledgements\n\nSome of the code used in taxopy was taken from the [CAT/BAT tool for taxonomic classification of contigs and metagenome-assembled genomes](https://github.com/dutilh/CAT).\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://apcamargo.github.io/taxopy/", "keywords": "bioinformatics,taxonomy", "license": "GNU General Public License v3.0", "maintainer": "", "maintainer_email": "", "name": "taxopy", "package_url": "https://pypi.org/project/taxopy/", "platform": "", "project_url": "https://pypi.org/project/taxopy/", "project_urls": {"Homepage": "https://apcamargo.github.io/taxopy/"}, "release_url": "https://pypi.org/project/taxopy/0.3.0/", "requires_dist": null, "requires_python": ">=3.5", "summary": "A Python package for obtaining complete lineages and the lowest common ancestor (LCA) from a set of taxonomic identifiers.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>taxopy</h1>\n<p>A Python package for obtaining complete lineages and the lowest common ancestor (LCA) from a set of taxonomic identifiers.</p>\n<h2>Installation</h2>\n<p>There are two ways to install taxopy:</p>\n<ul>\n<li>Using pip:</li>\n</ul>\n<pre><code>pip install taxopy\n</code></pre>\n<ul>\n<li>Using conda:</li>\n</ul>\n<pre><code>conda install -c conda-forge -c bioconda taxopy\n</code></pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">taxopy</span>\n</pre>\n<p>First you need to download taxonomic information from NCBI's servers and put this data into a <code>TaxDb</code> object:</p>\n<pre><span class=\"n\">taxdb</span> <span class=\"o\">=</span> <span class=\"n\">taxopy</span><span class=\"o\">.</span><span class=\"n\">TaxDb</span><span class=\"p\">()</span>\n<span class=\"c1\"># You can also use your own set of taxonomy files:</span>\n<span class=\"n\">taxdb</span> <span class=\"o\">=</span> <span class=\"n\">taxopy</span><span class=\"o\">.</span><span class=\"n\">TaxDb</span><span class=\"p\">(</span><span class=\"n\">nodes_dmp</span><span class=\"o\">=</span><span class=\"s2\">\"taxdb/nodes.dmp\"</span><span class=\"p\">,</span> <span class=\"n\">names_dmp</span><span class=\"o\">=</span><span class=\"s2\">\"taxdb/names.dmp\"</span><span class=\"p\">,</span> <span class=\"n\">keep_files</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>The <code>TaxDb</code> object stores the name, rank and parent-child relationships of each taxonomic identifier:</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">taxdb</span><span class=\"o\">.</span><span class=\"n\">taxid2name</span><span class=\"p\">[</span><span class=\"s1\">'2'</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">taxdb</span><span class=\"o\">.</span><span class=\"n\">taxid2parent</span><span class=\"p\">[</span><span class=\"s1\">'2'</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">taxdb</span><span class=\"o\">.</span><span class=\"n\">taxid2rank</span><span class=\"p\">[</span><span class=\"s1\">'2'</span><span class=\"p\">])</span>\n</pre>\n<pre><code>Bacteria\n131567\nsuperkingdom\n</code></pre>\n<p>To get information of a given taxon you can create a <code>Taxon</code> object using its taxonomic identifier:</p>\n<pre><span class=\"n\">human</span> <span class=\"o\">=</span> <span class=\"n\">taxopy</span><span class=\"o\">.</span><span class=\"n\">Taxon</span><span class=\"p\">(</span><span class=\"s1\">'9606'</span><span class=\"p\">,</span> <span class=\"n\">taxdb</span><span class=\"p\">)</span>\n<span class=\"n\">gorilla</span> <span class=\"o\">=</span> <span class=\"n\">taxopy</span><span class=\"o\">.</span><span class=\"n\">Taxon</span><span class=\"p\">(</span><span class=\"s1\">'9593'</span><span class=\"p\">,</span> <span class=\"n\">taxdb</span><span class=\"p\">)</span>\n<span class=\"n\">lagomorpha</span> <span class=\"o\">=</span> <span class=\"n\">taxopy</span><span class=\"o\">.</span><span class=\"n\">Taxon</span><span class=\"p\">(</span><span class=\"s1\">'9975'</span><span class=\"p\">,</span> <span class=\"n\">taxdb</span><span class=\"p\">)</span>\n</pre>\n<p>Each <code>Taxon</code> object stores a variety of information, such as the rank, identifier and name of the input taxon, and the identifiers and names of all the parent taxa:</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lagomorpha</span><span class=\"o\">.</span><span class=\"n\">rank</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lagomorpha</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lagomorpha</span><span class=\"o\">.</span><span class=\"n\">name_lineage</span><span class=\"p\">)</span>\n</pre>\n<pre><code>order\nLagomorpha\n['Lagomorpha', 'Glires', 'Euarchontoglires', 'Boreoeutheria', 'Eutheria', 'Theria', 'Mammalia', 'Amniota', 'Tetrapoda', 'Dipnotetrapodomorpha', 'Sarcopterygii', 'Euteleostomi', 'Teleostomi', 'Gnathostomata', 'Vertebrata', 'Craniata', 'Chordata', 'Deuterostomia', 'Bilateria', 'Eumetazoa', 'Metazoa', 'Opisthokonta', 'Eukaryota', 'cellular organisms', 'root']\n</code></pre>\n<p>You can get the lowest common ancestor of a list of taxa using the <code>find_lca</code> function:</p>\n<pre><span class=\"n\">human_lagomorpha_lca</span> <span class=\"o\">=</span> <span class=\"n\">taxopy</span><span class=\"o\">.</span><span class=\"n\">find_lca</span><span class=\"p\">([</span><span class=\"n\">human</span><span class=\"p\">,</span> <span class=\"n\">lagomorpha</span><span class=\"p\">],</span> <span class=\"n\">taxdb</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">human_lagomorpha_lca</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre>\n<pre><code>Euarchontoglires\n</code></pre>\n<p>You may also use the <code>find_majority_vote</code> to discover the most specific taxon that is shared by more than half of the lineages of a list of taxa:</p>\n<pre><span class=\"n\">majority_vote</span> <span class=\"o\">=</span> <span class=\"n\">taxopy</span><span class=\"o\">.</span><span class=\"n\">find_majority_vote</span><span class=\"p\">([</span><span class=\"n\">human</span><span class=\"p\">,</span> <span class=\"n\">gorilla</span><span class=\"p\">,</span> <span class=\"n\">lagomorpha</span><span class=\"p\">],</span> <span class=\"n\">taxdb</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">majority_vote</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre>\n<pre><code>Homininae\n</code></pre>\n<p>The <code>find_majority_vote</code> allows you to control its stringency via the <code>fraction</code> parameter. For instance, if you would set <code>fraction</code> to 0.75 the resulting taxon would be shared by more than 75% of the input lineages. By default, <code>fraction</code> is 0.5.</p>\n<h2>Acknowledgements</h2>\n<p>Some of the code used in taxopy was taken from the <a href=\"https://github.com/dutilh/CAT\" rel=\"nofollow\">CAT/BAT tool for taxonomic classification of contigs and metagenome-assembled genomes</a>.</p>\n\n          </div>"}, "last_serial": 6931241, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "dcb40a9ecae17155ceae9e5d1cc7a248", "sha256": "2d42f121da29d9e61ea60dfe8920410cd85b7facb5e42ef68b79f8044400c674"}, "downloads": -1, "filename": "taxopy-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dcb40a9ecae17155ceae9e5d1cc7a248", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 19279, "upload_time": "2020-03-06T19:28:55", "upload_time_iso_8601": "2020-03-06T19:28:55.593767Z", "url": "https://files.pythonhosted.org/packages/bf/6f/e557c9fe5972f0f5683efa5649bde8aee1fd4135f6d71aa4f2cb4a9a8a2c/taxopy-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14d799d897a42fceaf4dc5248e9c07ee", "sha256": "9acbfc47678e8811ab22e762c96a0c75727f5babfce475b1611c76d3c764add2"}, "downloads": -1, "filename": "taxopy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "14d799d897a42fceaf4dc5248e9c07ee", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 16822, "upload_time": "2020-03-06T19:28:57", "upload_time_iso_8601": "2020-03-06T19:28:57.820767Z", "url": "https://files.pythonhosted.org/packages/6f/cd/c4fd35ca2c75d4a78b33a682441cf1bd7d92197dbc8a4099f064c2242621/taxopy-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b1b0251250c2be3171e1b4b68c5417be", "sha256": "d75fd200996532655c15453a0dc914f82fab5d57304050743015fe5ab8960a02"}, "downloads": -1, "filename": "taxopy-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b1b0251250c2be3171e1b4b68c5417be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 19632, "upload_time": "2020-03-14T23:30:58", "upload_time_iso_8601": "2020-03-14T23:30:58.096987Z", "url": "https://files.pythonhosted.org/packages/2a/0e/5cd2c2105c449681b8e13d4d02bf93c00f7e09b81db1e128d8e25493c3d0/taxopy-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "073396fcf6ac09ba404fd1e645361535", "sha256": "c6f636f3ce5f3b56b17183cee1a522b192aa9b94f0d1e1635ebe53fb6cac1588"}, "downloads": -1, "filename": "taxopy-0.2.0.tar.gz", "has_sig": false, "md5_digest": "073396fcf6ac09ba404fd1e645361535", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 17094, "upload_time": "2020-03-14T23:30:59", "upload_time_iso_8601": "2020-03-14T23:30:59.872202Z", "url": "https://files.pythonhosted.org/packages/4e/94/6eaac9424c81713a3a55c380b8da11eb17632cde64ae54f2c2797b914abf/taxopy-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "731956756f72c384cbe1b0c3338c4287", "sha256": "cdddcf96b510b306adcec7fc11b552e29be2b735076e9b17512158f556c76a94"}, "downloads": -1, "filename": "taxopy-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "731956756f72c384cbe1b0c3338c4287", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 19622, "upload_time": "2020-03-15T08:23:53", "upload_time_iso_8601": "2020-03-15T08:23:53.583785Z", "url": "https://files.pythonhosted.org/packages/51/b6/9a39b385ff3683b3f3ff635d3c01cf30e410f6fc6c6328b53b9663104a16/taxopy-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e205354a2ca77e36ea99849c607058e8", "sha256": "c1b38b18cf8c243feeaea4fb1c2a21cf2551709026ea72f33a250c018aca5810"}, "downloads": -1, "filename": "taxopy-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e205354a2ca77e36ea99849c607058e8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 17083, "upload_time": "2020-03-15T08:23:55", "upload_time_iso_8601": "2020-03-15T08:23:55.226775Z", "url": "https://files.pythonhosted.org/packages/54/25/d1514835a85373c2c293340ac6894a96a5319f966b48d6200d4ffe26942e/taxopy-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "9447da0e73dde5ec16bf59c9ea97793f", "sha256": "d657acb5bda4af2588c46bf3465050358209cce09ef16268312c86a1248c3700"}, "downloads": -1, "filename": "taxopy-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9447da0e73dde5ec16bf59c9ea97793f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 19908, "upload_time": "2020-04-01T21:10:16", "upload_time_iso_8601": "2020-04-01T21:10:16.204976Z", "url": "https://files.pythonhosted.org/packages/da/07/ccf306921ce1d6aa5cc290660cfde95943102201d6e51820f0c073c87225/taxopy-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0248c8bb1a7475e9445852ddae434fc5", "sha256": "8e2d88d36f88ebae284f68450f88a48ab66c8a0c368bb0dcd3ecbbbdd597f20a"}, "downloads": -1, "filename": "taxopy-0.3.0.tar.gz", "has_sig": false, "md5_digest": "0248c8bb1a7475e9445852ddae434fc5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 17348, "upload_time": "2020-04-01T21:10:17", "upload_time_iso_8601": "2020-04-01T21:10:17.667984Z", "url": "https://files.pythonhosted.org/packages/8a/93/90f7da9c3a7aaca85d5fe34403f961a44d89f3210cfdb15f847f50994c17/taxopy-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9447da0e73dde5ec16bf59c9ea97793f", "sha256": "d657acb5bda4af2588c46bf3465050358209cce09ef16268312c86a1248c3700"}, "downloads": -1, "filename": "taxopy-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9447da0e73dde5ec16bf59c9ea97793f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 19908, "upload_time": "2020-04-01T21:10:16", "upload_time_iso_8601": "2020-04-01T21:10:16.204976Z", "url": "https://files.pythonhosted.org/packages/da/07/ccf306921ce1d6aa5cc290660cfde95943102201d6e51820f0c073c87225/taxopy-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0248c8bb1a7475e9445852ddae434fc5", "sha256": "8e2d88d36f88ebae284f68450f88a48ab66c8a0c368bb0dcd3ecbbbdd597f20a"}, "downloads": -1, "filename": "taxopy-0.3.0.tar.gz", "has_sig": false, "md5_digest": "0248c8bb1a7475e9445852ddae434fc5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 17348, "upload_time": "2020-04-01T21:10:17", "upload_time_iso_8601": "2020-04-01T21:10:17.667984Z", "url": "https://files.pythonhosted.org/packages/8a/93/90f7da9c3a7aaca85d5fe34403f961a44d89f3210cfdb15f847f50994c17/taxopy-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:35 2020"}