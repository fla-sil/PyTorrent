{"info": {"author": "Benjamin Margolis", "author_email": "ben@sixpearls.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "=========\nndsplines\n=========\n\n.. image:: https://img.shields.io/pypi/v/ndsplines.svg\n    :alt: PyPI Package latest release\n    :target: https://pypi.python.org/pypi/ndsplines\n\n.. image:: https://dev.azure.com/kb-press/ndsplines/_apis/build/status/kb-press.ndsplines?branchName=master\n    :target: https://dev.azure.com/kb-press/ndsplines/_build/latest?definitionId=1&branchName=master\n    :alt: Azure Pipelines build status\n\n.. image:: https://readthedocs.org/projects/ndsplines/badge/?version=latest\n    :target: https://ndsplines.readthedocs.io/en/v0.1.1/?badge=latest\n    :alt: Documentation status\n\n.. image:: https://codecov.io/gh/kb-press/ndsplines/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/kb-press/ndsplines\n    :alt: Codecov test coverage\n\nThis is a Python package for multivariate B-splines with performant NumPy and C\n(via Cython) implementations. For a mathematical overview of tensor product \nB-splines, see the |Splines| page of the documentation.\n\nThe primary goal of this package is to provide a unified API for tensor product \nsplines of arbitrary input and output dimension. For a list of related packages \nsee the |Comparisons| page.\n\nInstallation\n------------\n\nInstall ndsplines with pip::\n\n    $ pip install ndsplines\n\nor from source::\n\n    $ git clone https://github.com/kb-press/ndsplines\n    $ cd ndsplines\n    $ pip install .\n\nNote: If installing from source, to use the C implementation, install with the \n``build_ext`` feature (i.e., ``$ pip install .[build_ext]``) or install Cython \n(i.e., ``$ pip install cython``) before installing ``ndsplines``. The system \nmust have a C compiler configured before installing.\n\n.. |Splines| replace:: `Splines`_\n.. _Splines: https://ndsplines.readthedocs.io/en/v0.1.1/math.html\n\n.. |Comparisons| replace:: `Comparisons`_\n.. _Comparisons: https://ndsplines.readthedocs.io/en/v0.1.1/compare.html\n\nUsage\n-----\n\nThe easiest way to use ``ndsplines`` is to use one of the ``make_*`` \nfunctions: ``make_interp_spline``, ``make_interp_spline_from_tidy``, or \n``make_lsq_spline``, which return an ``NDSpline`` object which can be used to\nevaluate the spline. For example, suppose we have data over a two-dimensional\nmesh.\n\n.. code:: python\n\n    import ndsplines\n    import numpy as np\n\n    # generate grid of independent variables\n    x = np.array([-1, -7/8, -3/4, -1/2, -1/4, -1/8, 0, 1/8, 1/4, 1/2, 3/4, 7/8, 1])*np.pi\n    y = np.array([-1, -1/2, 0, 1/2, 1])\n    meshx, meshy = np.meshgrid(x, y, indexing='ij')\n    gridxy = np.stack((meshx, meshy), axis=-1)\n\n    # evaluate a function to interpolate over input grid\n    meshf = np.sin(meshx) * (meshy-3/8)**2 + 2\n\n\nWe can then use ``make_interp_spline`` to create an interpolating spline and\nevaluate it over a denser mesh.\n\n.. code:: python\n\n    # create the interpolating splane\n    interp = ndsplines.make_interp_spline(gridxy, meshf)\n\n    # generate denser grid of independent variables to interpolate\n    sparse_dense = 2**7\n    xx = np.concatenate([np.linspace(x[i], x[i+1], sparse_dense) for i in range(x.size-1)])\n    yy = np.concatenate([np.linspace(y[i], y[i+1], sparse_dense) for i in range(y.size-1)])\n    gridxxyy = np.stack(np.meshgrid(xx, yy, indexing='ij'), axis=-1)\n\n    # evaluate spline over denser grid\n    meshff = interp(gridxxyy)\n\n\nGenerally, we construct data so that the first ``ndim`` axes index the\nindependent variables and the remaining axes index output. This is\na generalization of using rows to index time and columns to index output\nvariables for time-series data. \n\nWe can also create an interpolating spline from a `tidy data`_ format:\n\n.. code:: python\n\n    tidy_data = np.dstack((gridxy, meshf)).reshape((-1,3))\n    tidy_interp = ndsplines.make_interp_spline_from_tidy(\n        tidy_data,\n        [0,1], # columns to use as independent variable data\n        [2]    # columns to use as dependent variable data\n    )\n\n    print(\"\\nCoefficients all same?\",\n          np.all(tidy_interp.coefficients == interp.coefficients))\n    print(\"Knots all same?\",\n          np.all([np.all(k0 == k1) for k0, k1 in zip(tidy_interp.knots, interp.knots)]))\n\nNote however, that the tidy dataset must be over a structured rectangular grid\nequivalent to the N-dimensional tensor product representation. Also note that\nPandas dataframes can be used, in which case lists of column names can be used\ninstead of lists of column indices. \n\nTo see examples for creating least-squares regression splines \nwith ``make_lsq_spline``, see the |1D example| and |2D example|. \n\nDerivatives of constructed splines can be evaluated in two ways: (1) by using\nthe ``nus`` parameter while calling the interpolator or (2) by creating a new spline \nwith the ``derivative`` method. In this codeblock, we show both ways of \nevaluating derivatives in each direction.\n\n.. code:: python\n\n    # two ways to evaluate derivatives x-direction: create a derivative spline or call with nus:\n    deriv_interp = interp.derivative(0)\n    deriv1 = deriv_interp(gridxxy)\n    deriv2 = interp(gridxy, nus=np.array([1,0]))\n\n    # two ways to evaluate derivative - y direction\n    deriv_interp = interp.derivative(1)\n    deriv1 = deriv_interp(gridxy)\n    deriv2 = interp(gridxxyy, nus=np.array([0,1]))\n\nThe ``NDSpline`` class also has an ``antiderivative`` method for creating a \nspline representative of the anti-derivative in the specified direction.\n\n.. code:: python\n\n    # Calculus demonstration\n    interp1 = deriv_interp.antiderivative(0)\n    coeff_diff = interp1.coefficients - interp.coefficients\n    print(\"\\nAntiderivative of derivative:\\n\",\"Coefficients differ by constant?\",\n          np.allclose(interp1.coefficients+2.0, interp.coefficients))\n    print(\"Knots all same?\",\n          np.all([np.all(k0 == k1) for k0, k1 in zip(interp1.knots, interp.knots)]))\n\n    antideriv_interp = interp.antiderivative(0)\n    interp2 = antideriv_interp.derivative(0)\n    print(\"\\nDerivative of antiderivative:\\n\",\"Coefficients the same?\",\n          np.allclose(interp2.coefficients, interp.coefficients))\n    print(\"Knots all same?\",\n          np.all([np.all(k0 == k1) for k0, k1 in zip(interp2.knots, interp.knots)]))\n\n.. _tidy data: https://www.jstatsoft.org/article/view/v059i10\n\n.. |1D example| replace:: `1D example`_\n.. _1D example: https://ndsplines.readthedocs.io/en/v0.1.1/auto_examples/1d-lsq.html\n\n.. |2D example| replace:: `2D example`_\n.. _2D example: https://ndsplines.readthedocs.io/en/v0.1.1/auto_examples/2d-lsq.html\n\n\nContributing\n------------\n\nPlease feel free to share any thoughts or opinions about the design and\nimplementation of this software by `opening an issue on GitHub\n<https://github.com/kb-press/ndsplines/issues/new>`_. Constructive feedback is\nwelcomed and appreciated.\n\nBug fix pull requests are always welcome. For feature additions, breaking \nchanges, etc. check if there is an open issue discussing the change and \nreference it in the pull request. If there isn't one, it is recommended to open \none with your rationale for the change before spending significant time \npreparing the pull request.\n\nIdeally, new/changed functionality should come with tests and documentation. If\nyou are new to contributing, it is perfectly fine to open a work-in-progress\npull request and have it iteratively reviewed.\n\nTesting\n=======\n\nTo test, install the developer requirements and use ``pytest``::\n\n    $ pip install -r requirements-dev.txt\n    $ pip install -e .\n    $ pytest\n\nDocumentation\n=============\n\nTo build the docs, install the ``docs`` feature requirements (a subset of\nthe developer requirements above)::\n\n    $ pip install -e .[docs]\n    $ cd docs\n    $ make html\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kb-press/ndsplines", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "ndsplines", "package_url": "https://pypi.org/project/ndsplines/", "platform": "", "project_url": "https://pypi.org/project/ndsplines/", "project_urls": {"Homepage": "https://github.com/kb-press/ndsplines"}, "release_url": "https://pypi.org/project/ndsplines/0.1.1/", "requires_dist": ["numpy", "scipy", "cython ; extra == 'build_ext'", "sphinx ; extra == 'docs'", "sphinx-gallery ; extra == 'docs'", "matplotlib ; extra == 'examples'"], "requires_python": "", "summary": "Multi-dimensional splines", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/ndsplines\" rel=\"nofollow\"><img alt=\"PyPI Package latest release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea5b05e097c00934f1e1a4dc72fa2e7c3165887f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6e6473706c696e65732e737667\"></a>\n<a href=\"https://dev.azure.com/kb-press/ndsplines/_build/latest?definitionId=1&amp;branchName=master\" rel=\"nofollow\"><img alt=\"Azure Pipelines build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a6bfcead9f404ebc9c6126db6508947939010887/68747470733a2f2f6465762e617a7572652e636f6d2f6b622d70726573732f6e6473706c696e65732f5f617069732f6275696c642f7374617475732f6b622d70726573732e6e6473706c696e65733f6272616e63684e616d653d6d6173746572\"></a>\n<a href=\"https://ndsplines.readthedocs.io/en/v0.1.1/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/73c3e7a336851423c9c56caa56a53e66e1a6e38c/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6e6473706c696e65732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codecov.io/gh/kb-press/ndsplines\" rel=\"nofollow\"><img alt=\"Codecov test coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01f8e43ffce6443846a1d7ecb92761fa268db5f5/68747470733a2f2f636f6465636f762e696f2f67682f6b622d70726573732f6e6473706c696e65732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<p>This is a Python package for multivariate B-splines with performant NumPy and C\n(via Cython) implementations. For a mathematical overview of tensor product\nB-splines, see the <a href=\"https://ndsplines.readthedocs.io/en/v0.1.1/math.html\" rel=\"nofollow\">Splines</a> page of the documentation.</p>\n<p>The primary goal of this package is to provide a unified API for tensor product\nsplines of arbitrary input and output dimension. For a list of related packages\nsee the <a href=\"https://ndsplines.readthedocs.io/en/v0.1.1/compare.html\" rel=\"nofollow\">Comparisons</a> page.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install ndsplines with pip:</p>\n<pre>$ pip install ndsplines\n</pre>\n<p>or from source:</p>\n<pre>$ git clone https://github.com/kb-press/ndsplines\n$ cd ndsplines\n$ pip install .\n</pre>\n<p>Note: If installing from source, to use the C implementation, install with the\n<tt>build_ext</tt> feature (i.e., <tt>$ pip install .[build_ext]</tt>) or install Cython\n(i.e., <tt>$ pip install cython</tt>) before installing <tt>ndsplines</tt>. The system\nmust have a C compiler configured before installing.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The easiest way to use <tt>ndsplines</tt> is to use one of the <tt>make_*</tt>\nfunctions: <tt>make_interp_spline</tt>, <tt>make_interp_spline_from_tidy</tt>, or\n<tt>make_lsq_spline</tt>, which return an <tt>NDSpline</tt> object which can be used to\nevaluate the spline. For example, suppose we have data over a two-dimensional\nmesh.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ndsplines</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"c1\"># generate grid of independent variables</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"n\">meshx</span><span class=\"p\">,</span> <span class=\"n\">meshy</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">meshgrid</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">indexing</span><span class=\"o\">=</span><span class=\"s1\">'ij'</span><span class=\"p\">)</span>\n<span class=\"n\">gridxy</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">stack</span><span class=\"p\">((</span><span class=\"n\">meshx</span><span class=\"p\">,</span> <span class=\"n\">meshy</span><span class=\"p\">),</span> <span class=\"n\">axis</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># evaluate a function to interpolate over input grid</span>\n<span class=\"n\">meshf</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">meshx</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">meshy</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"mi\">8</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"mi\">2</span>\n</pre>\n<p>We can then use <tt>make_interp_spline</tt> to create an interpolating spline and\nevaluate it over a denser mesh.</p>\n<pre><span class=\"c1\"># create the interpolating splane</span>\n<span class=\"n\">interp</span> <span class=\"o\">=</span> <span class=\"n\">ndsplines</span><span class=\"o\">.</span><span class=\"n\">make_interp_spline</span><span class=\"p\">(</span><span class=\"n\">gridxy</span><span class=\"p\">,</span> <span class=\"n\">meshf</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># generate denser grid of independent variables to interpolate</span>\n<span class=\"n\">sparse_dense</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">7</span>\n<span class=\"n\">xx</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">([</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">sparse_dense</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)])</span>\n<span class=\"n\">yy</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">([</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">sparse_dense</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)])</span>\n<span class=\"n\">gridxxyy</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">stack</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">meshgrid</span><span class=\"p\">(</span><span class=\"n\">xx</span><span class=\"p\">,</span> <span class=\"n\">yy</span><span class=\"p\">,</span> <span class=\"n\">indexing</span><span class=\"o\">=</span><span class=\"s1\">'ij'</span><span class=\"p\">),</span> <span class=\"n\">axis</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># evaluate spline over denser grid</span>\n<span class=\"n\">meshff</span> <span class=\"o\">=</span> <span class=\"n\">interp</span><span class=\"p\">(</span><span class=\"n\">gridxxyy</span><span class=\"p\">)</span>\n</pre>\n<p>Generally, we construct data so that the first <tt>ndim</tt> axes index the\nindependent variables and the remaining axes index output. This is\na generalization of using rows to index time and columns to index output\nvariables for time-series data.</p>\n<p>We can also create an interpolating spline from a <a href=\"https://www.jstatsoft.org/article/view/v059i10\" rel=\"nofollow\">tidy data</a> format:</p>\n<pre><span class=\"n\">tidy_data</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dstack</span><span class=\"p\">((</span><span class=\"n\">gridxy</span><span class=\"p\">,</span> <span class=\"n\">meshf</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"n\">tidy_interp</span> <span class=\"o\">=</span> <span class=\"n\">ndsplines</span><span class=\"o\">.</span><span class=\"n\">make_interp_spline_from_tidy</span><span class=\"p\">(</span>\n    <span class=\"n\">tidy_data</span><span class=\"p\">,</span>\n    <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"c1\"># columns to use as independent variable data</span>\n    <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>    <span class=\"c1\"># columns to use as dependent variable data</span>\n<span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">Coefficients all same?\"</span><span class=\"p\">,</span>\n      <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">tidy_interp</span><span class=\"o\">.</span><span class=\"n\">coefficients</span> <span class=\"o\">==</span> <span class=\"n\">interp</span><span class=\"o\">.</span><span class=\"n\">coefficients</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Knots all same?\"</span><span class=\"p\">,</span>\n      <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">([</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">k0</span> <span class=\"o\">==</span> <span class=\"n\">k1</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">k0</span><span class=\"p\">,</span> <span class=\"n\">k1</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">tidy_interp</span><span class=\"o\">.</span><span class=\"n\">knots</span><span class=\"p\">,</span> <span class=\"n\">interp</span><span class=\"o\">.</span><span class=\"n\">knots</span><span class=\"p\">)]))</span>\n</pre>\n<p>Note however, that the tidy dataset must be over a structured rectangular grid\nequivalent to the N-dimensional tensor product representation. Also note that\nPandas dataframes can be used, in which case lists of column names can be used\ninstead of lists of column indices.</p>\n<p>To see examples for creating least-squares regression splines\nwith <tt>make_lsq_spline</tt>, see the <a href=\"https://ndsplines.readthedocs.io/en/v0.1.1/auto_examples/1d-lsq.html\" rel=\"nofollow\">1D example</a> and <a href=\"https://ndsplines.readthedocs.io/en/v0.1.1/auto_examples/2d-lsq.html\" rel=\"nofollow\">2D example</a>.</p>\n<p>Derivatives of constructed splines can be evaluated in two ways: (1) by using\nthe <tt>nus</tt> parameter while calling the interpolator or (2) by creating a new spline\nwith the <tt>derivative</tt> method. In this codeblock, we show both ways of\nevaluating derivatives in each direction.</p>\n<pre><span class=\"c1\"># two ways to evaluate derivatives x-direction: create a derivative spline or call with nus:</span>\n<span class=\"n\">deriv_interp</span> <span class=\"o\">=</span> <span class=\"n\">interp</span><span class=\"o\">.</span><span class=\"n\">derivative</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">deriv1</span> <span class=\"o\">=</span> <span class=\"n\">deriv_interp</span><span class=\"p\">(</span><span class=\"n\">gridxxy</span><span class=\"p\">)</span>\n<span class=\"n\">deriv2</span> <span class=\"o\">=</span> <span class=\"n\">interp</span><span class=\"p\">(</span><span class=\"n\">gridxy</span><span class=\"p\">,</span> <span class=\"n\">nus</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># two ways to evaluate derivative - y direction</span>\n<span class=\"n\">deriv_interp</span> <span class=\"o\">=</span> <span class=\"n\">interp</span><span class=\"o\">.</span><span class=\"n\">derivative</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">deriv1</span> <span class=\"o\">=</span> <span class=\"n\">deriv_interp</span><span class=\"p\">(</span><span class=\"n\">gridxy</span><span class=\"p\">)</span>\n<span class=\"n\">deriv2</span> <span class=\"o\">=</span> <span class=\"n\">interp</span><span class=\"p\">(</span><span class=\"n\">gridxxyy</span><span class=\"p\">,</span> <span class=\"n\">nus</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]))</span>\n</pre>\n<p>The <tt>NDSpline</tt> class also has an <tt>antiderivative</tt> method for creating a\nspline representative of the anti-derivative in the specified direction.</p>\n<pre><span class=\"c1\"># Calculus demonstration</span>\n<span class=\"n\">interp1</span> <span class=\"o\">=</span> <span class=\"n\">deriv_interp</span><span class=\"o\">.</span><span class=\"n\">antiderivative</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">coeff_diff</span> <span class=\"o\">=</span> <span class=\"n\">interp1</span><span class=\"o\">.</span><span class=\"n\">coefficients</span> <span class=\"o\">-</span> <span class=\"n\">interp</span><span class=\"o\">.</span><span class=\"n\">coefficients</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">Antiderivative of derivative:</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">,</span><span class=\"s2\">\"Coefficients differ by constant?\"</span><span class=\"p\">,</span>\n      <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">(</span><span class=\"n\">interp1</span><span class=\"o\">.</span><span class=\"n\">coefficients</span><span class=\"o\">+</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"n\">interp</span><span class=\"o\">.</span><span class=\"n\">coefficients</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Knots all same?\"</span><span class=\"p\">,</span>\n      <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">([</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">k0</span> <span class=\"o\">==</span> <span class=\"n\">k1</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">k0</span><span class=\"p\">,</span> <span class=\"n\">k1</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">interp1</span><span class=\"o\">.</span><span class=\"n\">knots</span><span class=\"p\">,</span> <span class=\"n\">interp</span><span class=\"o\">.</span><span class=\"n\">knots</span><span class=\"p\">)]))</span>\n\n<span class=\"n\">antideriv_interp</span> <span class=\"o\">=</span> <span class=\"n\">interp</span><span class=\"o\">.</span><span class=\"n\">antiderivative</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">interp2</span> <span class=\"o\">=</span> <span class=\"n\">antideriv_interp</span><span class=\"o\">.</span><span class=\"n\">derivative</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">Derivative of antiderivative:</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">,</span><span class=\"s2\">\"Coefficients the same?\"</span><span class=\"p\">,</span>\n      <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">(</span><span class=\"n\">interp2</span><span class=\"o\">.</span><span class=\"n\">coefficients</span><span class=\"p\">,</span> <span class=\"n\">interp</span><span class=\"o\">.</span><span class=\"n\">coefficients</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Knots all same?\"</span><span class=\"p\">,</span>\n      <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">([</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">k0</span> <span class=\"o\">==</span> <span class=\"n\">k1</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">k0</span><span class=\"p\">,</span> <span class=\"n\">k1</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">interp2</span><span class=\"o\">.</span><span class=\"n\">knots</span><span class=\"p\">,</span> <span class=\"n\">interp</span><span class=\"o\">.</span><span class=\"n\">knots</span><span class=\"p\">)]))</span>\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Please feel free to share any thoughts or opinions about the design and\nimplementation of this software by <a href=\"https://github.com/kb-press/ndsplines/issues/new\" rel=\"nofollow\">opening an issue on GitHub</a>. Constructive feedback is\nwelcomed and appreciated.</p>\n<p>Bug fix pull requests are always welcome. For feature additions, breaking\nchanges, etc. check if there is an open issue discussing the change and\nreference it in the pull request. If there isn\u2019t one, it is recommended to open\none with your rationale for the change before spending significant time\npreparing the pull request.</p>\n<p>Ideally, new/changed functionality should come with tests and documentation. If\nyou are new to contributing, it is perfectly fine to open a work-in-progress\npull request and have it iteratively reviewed.</p>\n<div id=\"testing\">\n<h3>Testing</h3>\n<p>To test, install the developer requirements and use <tt>pytest</tt>:</p>\n<pre>$ pip install -r requirements-dev.txt\n$ pip install -e .\n$ pytest\n</pre>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>To build the docs, install the <tt>docs</tt> feature requirements (a subset of\nthe developer requirements above):</p>\n<pre>$ pip install -e .[docs]\n$ cd docs\n$ make html\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6016407, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "29ea46e7d253252daca9350b9e0546a0", "sha256": "bf5f9ddd0340c113f2fe54b8bf61c4baff3358853328b744ba07ebcb1c6ebc9c"}, "downloads": -1, "filename": "ndsplines-0.1.0-cp36-cp36m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "29ea46e7d253252daca9350b9e0546a0", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 85683, "upload_time": "2019-08-31T21:13:32", "upload_time_iso_8601": "2019-08-31T21:13:32.705360Z", "url": "https://files.pythonhosted.org/packages/06/b8/c13d87fbccd3418e4b1679d279504263724b1d75a00ad08c9dee9ddf0fab/ndsplines-0.1.0-cp36-cp36m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bb5d76042570cca61457c9c2e5a98fc2", "sha256": "918af504156d28965a3a00fdedb7c727145b9b619c05e4c8027c1ed0677b94a3"}, "downloads": -1, "filename": "ndsplines-0.1.0-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "bb5d76042570cca61457c9c2e5a98fc2", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 339110, "upload_time": "2019-08-31T21:13:35", "upload_time_iso_8601": "2019-08-31T21:13:35.212153Z", "url": "https://files.pythonhosted.org/packages/51/0b/d23d610d15aae4931b1cec220c7c9c0bd1279216f0a9861baf69b7a5e6ea/ndsplines-0.1.0-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bbfc53750f8739f834c79113d4677f18", "sha256": "5ef921591d3be3d27689b49489d8637b3a5f768c724d7a7dc5187a8e94552b8e"}, "downloads": -1, "filename": "ndsplines-0.1.0-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "bbfc53750f8739f834c79113d4677f18", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 84535, "upload_time": "2019-08-31T21:13:37", "upload_time_iso_8601": "2019-08-31T21:13:37.697789Z", "url": "https://files.pythonhosted.org/packages/11/53/4b333400ac6bd8784b6c17ed24733ed8713c18a22a1742314e361f844563/ndsplines-0.1.0-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "629f22e30809d1f862a320a012b5f809", "sha256": "4ceb8a63d718f57daebf3853c3e8622ccba0779dd8205ba51d8263ef9ccfd68b"}, "downloads": -1, "filename": "ndsplines-0.1.0-cp37-cp37m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "629f22e30809d1f862a320a012b5f809", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 85963, "upload_time": "2019-08-31T21:13:39", "upload_time_iso_8601": "2019-08-31T21:13:39.868591Z", "url": "https://files.pythonhosted.org/packages/28/fd/6ca6a78c852b5003c3ff97c8214b4478c06d7d4322cdd3a7bc673e5bb8d1/ndsplines-0.1.0-cp37-cp37m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b3be293cf6e839e6b2b05cfa8889978", "sha256": "48890d3ce30b9433c8afe99baa07af758ab4f133f10c3d622e7f23a9ea9a9ba7"}, "downloads": -1, "filename": "ndsplines-0.1.0-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "2b3be293cf6e839e6b2b05cfa8889978", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 339285, "upload_time": "2019-08-31T21:13:42", "upload_time_iso_8601": "2019-08-31T21:13:42.280766Z", "url": "https://files.pythonhosted.org/packages/8e/e6/2b049449cc1aefb12ea285866cd47c6406c32990a45f36e0136669ab2498/ndsplines-0.1.0-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3cc892b5f33fde9d2f9fac8523c4d91d", "sha256": "ee049282c1c315e7e4b3d5f320f545c84402c6987338bec0aa0914ffebade99d"}, "downloads": -1, "filename": "ndsplines-0.1.0-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "3cc892b5f33fde9d2f9fac8523c4d91d", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 84560, "upload_time": "2019-08-31T21:13:44", "upload_time_iso_8601": "2019-08-31T21:13:44.592103Z", "url": "https://files.pythonhosted.org/packages/03/8b/52e3d06a4bf051e364c0fb55eeef153abd4d90fea36b2085b88497981ac1/ndsplines-0.1.0-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee67b5d2d8459bc13c73bf256c1ab956", "sha256": "129dec821a4726df3e19b5a975eb71dfccdd81afb07ad8be5b1e48fe55ac9a6c"}, "downloads": -1, "filename": "ndsplines-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ee67b5d2d8459bc13c73bf256c1ab956", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 134078, "upload_time": "2019-08-31T21:06:43", "upload_time_iso_8601": "2019-08-31T21:06:43.214201Z", "url": "https://files.pythonhosted.org/packages/27/b6/f963da9a07945218a5c2a11c4cdb3e77ff4ff1845370ece94a5e93cb7101/ndsplines-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e14395834feb6ef074c67dc9de845bc9", "sha256": "98433e82492c265b15da23bfb28a832af7a91fda6c2b3c811e0b25165090092f"}, "downloads": -1, "filename": "ndsplines-0.1.1-cp36-cp36m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "e14395834feb6ef074c67dc9de845bc9", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 85696, "upload_time": "2019-10-23T03:44:27", "upload_time_iso_8601": "2019-10-23T03:44:27.634387Z", "url": "https://files.pythonhosted.org/packages/5c/eb/d09ac624ba55b84879fb9facded1937718dfeae4e610a5366cbb4eed0149/ndsplines-0.1.1-cp36-cp36m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f4f6091ca932b1350fe7aa717c4388e", "sha256": "3415b78e8a541c788cec86d08e8a79de20aca60c5db658e5074cb0f834ee7aa2"}, "downloads": -1, "filename": "ndsplines-0.1.1-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "9f4f6091ca932b1350fe7aa717c4388e", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 339097, "upload_time": "2019-10-23T03:44:30", "upload_time_iso_8601": "2019-10-23T03:44:30.098933Z", "url": "https://files.pythonhosted.org/packages/d3/25/f3b9721acbb093db668017c0a28b289937ce057f4e3f6fe0254642c1617b/ndsplines-0.1.1-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45a2f234522be034f6844730c72be9b6", "sha256": "5eeee13f5bd247053172b339d455726429ff9db3b6744e5353869e82c06d6444"}, "downloads": -1, "filename": "ndsplines-0.1.1-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "45a2f234522be034f6844730c72be9b6", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 84536, "upload_time": "2019-10-23T03:44:31", "upload_time_iso_8601": "2019-10-23T03:44:31.886505Z", "url": "https://files.pythonhosted.org/packages/b7/2d/df2908a41615fa9d0e4aa9b4fdcb10ccab4d5f9cc877845bacc775adef04/ndsplines-0.1.1-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "120488a2021704317630f57656b9a6c2", "sha256": "a742593221d72171fdedff1960377f8ffb4e942be3aee5f16e82146b99c4b737"}, "downloads": -1, "filename": "ndsplines-0.1.1-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "120488a2021704317630f57656b9a6c2", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 85976, "upload_time": "2019-10-23T03:44:34", "upload_time_iso_8601": "2019-10-23T03:44:34.032458Z", "url": "https://files.pythonhosted.org/packages/f6/df/4449bade26b06a3cc7d35acd8c50061e115e577601cdc1c001f60040fa3d/ndsplines-0.1.1-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76de4f08f9b864ebc2b1ffaad6d2cb97", "sha256": "e7568b3063da6c1942b33c53fd98968533ec2fda8b47e2f3bbd4b37729707c96"}, "downloads": -1, "filename": "ndsplines-0.1.1-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "76de4f08f9b864ebc2b1ffaad6d2cb97", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 339274, "upload_time": "2019-10-23T03:44:36", "upload_time_iso_8601": "2019-10-23T03:44:36.244325Z", "url": "https://files.pythonhosted.org/packages/24/b5/5cdfdcc89997e9917f8c15ebae2682e9a0eeacf9eeae6229a767d30c4e7a/ndsplines-0.1.1-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6e3eae0b24064dfadb7637c8e078e37", "sha256": "be527dc8ee8e713cdc319e1c64e31ad84ddf46c3146fc48a896c47dc9899492f"}, "downloads": -1, "filename": "ndsplines-0.1.1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "d6e3eae0b24064dfadb7637c8e078e37", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 84559, "upload_time": "2019-10-23T03:44:38", "upload_time_iso_8601": "2019-10-23T03:44:38.178781Z", "url": "https://files.pythonhosted.org/packages/57/39/49974b4f0ff78b1fe32dbeb6c62dd5f5221dfbb5c2d52516057ab95d7adf/ndsplines-0.1.1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f79c935987644317ba287e81ccc6a2df", "sha256": "25ba524287cc60f41a7b5476fcbda6d9afffca6a454bd32dd4e1679e5f29ffed"}, "downloads": -1, "filename": "ndsplines-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f79c935987644317ba287e81ccc6a2df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 137577, "upload_time": "2019-10-23T03:44:40", "upload_time_iso_8601": "2019-10-23T03:44:40.100880Z", "url": "https://files.pythonhosted.org/packages/8d/13/2d781c6a1b8f1cd008e1d7159102769b16f6e83bd3c52891cd279f3043cc/ndsplines-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e14395834feb6ef074c67dc9de845bc9", "sha256": "98433e82492c265b15da23bfb28a832af7a91fda6c2b3c811e0b25165090092f"}, "downloads": -1, "filename": "ndsplines-0.1.1-cp36-cp36m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "e14395834feb6ef074c67dc9de845bc9", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 85696, "upload_time": "2019-10-23T03:44:27", "upload_time_iso_8601": "2019-10-23T03:44:27.634387Z", "url": "https://files.pythonhosted.org/packages/5c/eb/d09ac624ba55b84879fb9facded1937718dfeae4e610a5366cbb4eed0149/ndsplines-0.1.1-cp36-cp36m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f4f6091ca932b1350fe7aa717c4388e", "sha256": "3415b78e8a541c788cec86d08e8a79de20aca60c5db658e5074cb0f834ee7aa2"}, "downloads": -1, "filename": "ndsplines-0.1.1-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "9f4f6091ca932b1350fe7aa717c4388e", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 339097, "upload_time": "2019-10-23T03:44:30", "upload_time_iso_8601": "2019-10-23T03:44:30.098933Z", "url": "https://files.pythonhosted.org/packages/d3/25/f3b9721acbb093db668017c0a28b289937ce057f4e3f6fe0254642c1617b/ndsplines-0.1.1-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45a2f234522be034f6844730c72be9b6", "sha256": "5eeee13f5bd247053172b339d455726429ff9db3b6744e5353869e82c06d6444"}, "downloads": -1, "filename": "ndsplines-0.1.1-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "45a2f234522be034f6844730c72be9b6", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 84536, "upload_time": "2019-10-23T03:44:31", "upload_time_iso_8601": "2019-10-23T03:44:31.886505Z", "url": "https://files.pythonhosted.org/packages/b7/2d/df2908a41615fa9d0e4aa9b4fdcb10ccab4d5f9cc877845bacc775adef04/ndsplines-0.1.1-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "120488a2021704317630f57656b9a6c2", "sha256": "a742593221d72171fdedff1960377f8ffb4e942be3aee5f16e82146b99c4b737"}, "downloads": -1, "filename": "ndsplines-0.1.1-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "120488a2021704317630f57656b9a6c2", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 85976, "upload_time": "2019-10-23T03:44:34", "upload_time_iso_8601": "2019-10-23T03:44:34.032458Z", "url": "https://files.pythonhosted.org/packages/f6/df/4449bade26b06a3cc7d35acd8c50061e115e577601cdc1c001f60040fa3d/ndsplines-0.1.1-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76de4f08f9b864ebc2b1ffaad6d2cb97", "sha256": "e7568b3063da6c1942b33c53fd98968533ec2fda8b47e2f3bbd4b37729707c96"}, "downloads": -1, "filename": "ndsplines-0.1.1-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "76de4f08f9b864ebc2b1ffaad6d2cb97", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 339274, "upload_time": "2019-10-23T03:44:36", "upload_time_iso_8601": "2019-10-23T03:44:36.244325Z", "url": "https://files.pythonhosted.org/packages/24/b5/5cdfdcc89997e9917f8c15ebae2682e9a0eeacf9eeae6229a767d30c4e7a/ndsplines-0.1.1-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6e3eae0b24064dfadb7637c8e078e37", "sha256": "be527dc8ee8e713cdc319e1c64e31ad84ddf46c3146fc48a896c47dc9899492f"}, "downloads": -1, "filename": "ndsplines-0.1.1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "d6e3eae0b24064dfadb7637c8e078e37", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 84559, "upload_time": "2019-10-23T03:44:38", "upload_time_iso_8601": "2019-10-23T03:44:38.178781Z", "url": "https://files.pythonhosted.org/packages/57/39/49974b4f0ff78b1fe32dbeb6c62dd5f5221dfbb5c2d52516057ab95d7adf/ndsplines-0.1.1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f79c935987644317ba287e81ccc6a2df", "sha256": "25ba524287cc60f41a7b5476fcbda6d9afffca6a454bd32dd4e1679e5f29ffed"}, "downloads": -1, "filename": "ndsplines-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f79c935987644317ba287e81ccc6a2df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 137577, "upload_time": "2019-10-23T03:44:40", "upload_time_iso_8601": "2019-10-23T03:44:40.100880Z", "url": "https://files.pythonhosted.org/packages/8d/13/2d781c6a1b8f1cd008e1d7159102769b16f6e83bd3c52891cd279f3043cc/ndsplines-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:40 2020"}