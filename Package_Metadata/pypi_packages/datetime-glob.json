{"info": {"author": "Marko Ristin", "author_email": "marko@parquery.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5"], "description": "datetime-glob\n=============\n\nParses date/times from a path given a glob pattern intertwined with date/time format akin to strptime/strftime format.\n\ndatetime.datetime.strptime suffices for simple date/time parsing. However, as soon as you need to handle wildcards,\nit becomes tricky and you need to resort to regular expressions.\n\nWe found the glob patterns and strptime format to be far easier to read and write than regular expressions, and\nencapsulated the logic involving regular expressions in this module.\n\nInstallation\n============\n\n* Create a virtual environment:\n\n.. code-block:: bash\n\n    python3 -m venv venv3\n\n* Activate it:\n\n.. code-block:: bash\n\n    source venv3/bin/activate\n\n* Install datetime-glob with pip:\n\n.. code-block:: bash\n\n    pip3 install datetime-glob\n\nUsage\n=====\nTo match a path:\n\n.. code-block:: python\n\n    >>> import datetime_glob\n    >>> matcher = datetime_glob.Matcher(pattern='/some/path/*%Y-%m-%dT%H-%M-%SZ.jpg')\n    >>> matcher.match(path='/some/path/some-text2016-07-03T21-22-23Z.jpg')\n    datetime_glob.Match(year = 2016, month = 7, day = 3, hour = 21, minute = 22, second = 23, microsecond = None)\n\n    >>> match.as_datetime()\n    datetime.datetime(2016, 7, 3, 21, 22, 23)\n    >>> match.as_date()\n    datetime.date(2016, 7, 3)\n    >>> match.as_time()\n    datetime.time(21, 22, 23)\n\nIf you specify a directive for the same field twice, the matcher will make sure that the field has the same semantical\nvalue in order to match:\n\n.. code-block:: python\n\n    >>> import datetime_glob\n    >>> matcher = datetime_glob.Matcher(pattern='/some/path/%y/%Y-%m-%d.txt')\n\n    >>> match = matcher.match(path='/some/path/16/2016-07-03.txt')\n    >>> match\n    datetime_glob.Match(year = 2016, month = 7, day = 3, hour = None, minute = None, second = None, microsecond = None)\n\n    >>> match = matcher.match(path='/some/path/19/2016-07-03.txt')\n    >>> type(match)\n    <class 'NoneType'>\n\nYou can walk the pattern on the file system:\n\n.. code-block:: python\n\n    >>> import datetime_glob\n    >>> for match, path in datetime_glob.walk(pattern='/some/path/*%Y/%m/%d/%H-%M-%SZ.jpg'):\n    ...     dtime = match.as_datetime()\n    ...     print(dtime, path)\n    2016-03-04 12:13:14 /some/path/saved-2016/03/04/12-13-14Z.jpg\n    2017-11-23 22:23:24 /some/path/restored-2017/11/23/22-23-24Z.jpg\n\nTo iterate manually over a tree, and match incrementally each path segment by yourself:\n\n.. code-block:: python\n\n    >>> import datetime_glob\n    >>> pattern_segments = datetime_glob.parse_pattern(pattern='/some/path/*%Y/%m/%d/%H-%M-%SZ.jpg')\n    >>> match = datetime_glob.Match()\n\n    >>> match=datetime_glob.match_segment(segment='some', pattern_segment=pattern_segments[0], match=match)\n    >>> match\n    datetime_glob.Match(year = None, month = None, day = None, hour = None, minute = None, second = None,\n                        microsecond = None)\n\n    >>> match=datetime_glob.match_segment(segment='path', pattern_segment=pattern_segments[1], match=match)\n    >>> match\n    datetime_glob.Match(year = None, month = None, day = None, hour = None, minute = None, second = None,\n                        microsecond = None)\n\n    >>> match=datetime_glob.match_segment(segment='some-text2016', pattern_segment=pattern_segments[2], match=match)\n    >>> match\n    datetime_glob.Match(year = 2016, month = None, day = None, hour = None, minute = None, second = None,\n                        microsecond = None)\n\n    >>> match=datetime_glob.match_segment(segment='07', pattern_segment=pattern_segments[3], match=match)\n    >>> match\n    datetime_glob.Match(year = 2016, month = 7, day = None, hour = None, minute = None, second = None,\n                        microsecond = None)\n\n    >>> match=datetime_glob.match_segment(segment='03', pattern_segment=pattern_segments[4], match=match)\n    >>> match\n    datetime_glob.Match(year = 2016, month = 7, day = 3, hour = None, minute = None, second = None, microsecond = None)\n\n    >>> match=datetime_glob.match_segment(segment='21-22-23Z.jpg', pattern_segment=pattern_segments[5], match=match)\n    >>> match\n    datetime_glob.Match(year = 2016, month = 7, day = 3, hour = 21, minute = 22, second = 23, microsecond = None)\n\n\nSupported strftime directives\n=============================\n(subset from https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior)\n\n=========   =========================================================   ==========================\nDirective   Meaning                                                     Example\n=========   =========================================================   ==========================\n%d          Day of the month as a zero-padded decimal number.           01, 02, \u2026, 31\n%-d         Day of the month as a decimal number.                       1, 2, \u2026, 31\n%m          Month as a zero-padded decimal number.                      01, 02, \u2026, 12\n%-m         Month as a  decimal number.                                 1, 2, \u2026, 12\n%y          Year without century as a zero-padded decimal number.       00, 01, \u2026, 99\n%Y          Year with century as a decimal number.                      1970, 1988, 2001, 2013\n%H          Hour (24-hour clock) as a zero-padded decimal number.       00, 01, \u2026, 23\n%-H         Hour (24-hour clock) as a decimal number.                   0, 1, \u2026, 23\n%M          Minute as a zero-padded decimal number.                     00, 01, \u2026, 59\n%-M         Minute as a decimal number.                                 0, 1, \u2026, 59\n%S          Second as a zero-padded decimal number.                     00, 01, \u2026, 59\n%-S         Second as a decimal number.                                 0, 1, \u2026, 59\n%f          Microsecond as a decimal number, zero-padded on the left.   000000, 000001, \u2026, 999999\n%%          A literal '%' character.                                    %\n=========   =========================================================   ==========================\n\nDevelopment\n===========\n\n* Check out the repository.\n\n* In the repository root, create the virtual environment:\n\n.. code-block:: bash\n\n    python3 -m venv venv3\n\n* Activate the virtual environment:\n\n.. code-block:: bash\n\n    source venv3/bin/activate\n\n* Install the development dependencies:\n\n.. code-block:: bash\n\n    pip3 install -e .[dev]\n\n* Run `precommit.py` to execute pre-commit checks locally.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/parqueryopen/datetime-glob", "keywords": "date time datetime parse glob pattern strptime wildcards", "license": "", "maintainer": "", "maintainer_email": "", "name": "datetime-glob", "package_url": "https://pypi.org/project/datetime-glob/", "platform": "", "project_url": "https://pypi.org/project/datetime-glob/", "project_urls": {"Homepage": "https://bitbucket.org/parqueryopen/datetime-glob"}, "release_url": "https://pypi.org/project/datetime-glob/1.0.7/", "requires_dist": null, "requires_python": "", "summary": "Parses date/time from paths using glob wildcard pattern intertwined with date/time format", "version": "1.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"datetime-glob\">\n<h2>datetime-glob</h2>\n<p>Parses date/times from a path given a glob pattern intertwined with date/time format akin to strptime/strftime format.</p>\n<p>datetime.datetime.strptime suffices for simple date/time parsing. However, as soon as you need to handle wildcards,\nit becomes tricky and you need to resort to regular expressions.</p>\n<p>We found the glob patterns and strptime format to be far easier to read and write than regular expressions, and\nencapsulated the logic involving regular expressions in this module.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ul>\n<li>Create a virtual environment:</li>\n</ul>\n<pre>python3 -m venv venv3\n</pre>\n<ul>\n<li>Activate it:</li>\n</ul>\n<pre><span class=\"nb\">source</span> venv3/bin/activate\n</pre>\n<ul>\n<li>Install datetime-glob with pip:</li>\n</ul>\n<pre>pip3 install datetime-glob\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To match a path:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">datetime_glob</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">matcher</span> <span class=\"o\">=</span> <span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">Matcher</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"o\">=</span><span class=\"s1\">'/some/path/*%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\">T%H-%M-%SZ.jpg'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">matcher</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">'/some/path/some-text2016-07-03T21-22-23Z.jpg'</span><span class=\"p\">)</span>\n<span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">Match</span><span class=\"p\">(</span><span class=\"n\">year</span> <span class=\"o\">=</span> <span class=\"mi\">2016</span><span class=\"p\">,</span> <span class=\"n\">month</span> <span class=\"o\">=</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"n\">day</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">hour</span> <span class=\"o\">=</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"n\">minute</span> <span class=\"o\">=</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"n\">second</span> <span class=\"o\">=</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"n\">microsecond</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span><span class=\"o\">.</span><span class=\"n\">as_datetime</span><span class=\"p\">()</span>\n<span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2016</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span><span class=\"o\">.</span><span class=\"n\">as_date</span><span class=\"p\">()</span>\n<span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2016</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span><span class=\"o\">.</span><span class=\"n\">as_time</span><span class=\"p\">()</span>\n<span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">)</span>\n</pre>\n<p>If you specify a directive for the same field twice, the matcher will make sure that the field has the same semantical\nvalue in order to match:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">datetime_glob</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">matcher</span> <span class=\"o\">=</span> <span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">Matcher</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"o\">=</span><span class=\"s1\">'/some/path/%y/%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\">.txt'</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span> <span class=\"o\">=</span> <span class=\"n\">matcher</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">'/some/path/16/2016-07-03.txt'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span>\n<span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">Match</span><span class=\"p\">(</span><span class=\"n\">year</span> <span class=\"o\">=</span> <span class=\"mi\">2016</span><span class=\"p\">,</span> <span class=\"n\">month</span> <span class=\"o\">=</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"n\">day</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">hour</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">minute</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">second</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">microsecond</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span> <span class=\"o\">=</span> <span class=\"n\">matcher</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">'/some/path/19/2016-07-03.txt'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">match</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"err\">'</span><span class=\"nc\">NoneType</span><span class=\"s1\">'&gt;</span>\n</pre>\n<p>You can walk the pattern on the file system:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">datetime_glob</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">match</span><span class=\"p\">,</span> <span class=\"n\">path</span> <span class=\"ow\">in</span> <span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">walk</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"o\">=</span><span class=\"s1\">'/some/path/*%Y/%m/</span><span class=\"si\">%d</span><span class=\"s1\">/%H-%M-%SZ.jpg'</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"n\">dtime</span> <span class=\"o\">=</span> <span class=\"n\">match</span><span class=\"o\">.</span><span class=\"n\">as_datetime</span><span class=\"p\">()</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">dtime</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">)</span>\n<span class=\"mi\">2016</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">04</span> <span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">13</span><span class=\"p\">:</span><span class=\"mi\">14</span> <span class=\"o\">/</span><span class=\"n\">some</span><span class=\"o\">/</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">saved</span><span class=\"o\">-</span><span class=\"mi\">2016</span><span class=\"o\">/</span><span class=\"mi\">03</span><span class=\"o\">/</span><span class=\"mi\">04</span><span class=\"o\">/</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">13</span><span class=\"o\">-</span><span class=\"mi\">14</span><span class=\"n\">Z</span><span class=\"o\">.</span><span class=\"n\">jpg</span>\n<span class=\"mi\">2017</span><span class=\"o\">-</span><span class=\"mi\">11</span><span class=\"o\">-</span><span class=\"mi\">23</span> <span class=\"mi\">22</span><span class=\"p\">:</span><span class=\"mi\">23</span><span class=\"p\">:</span><span class=\"mi\">24</span> <span class=\"o\">/</span><span class=\"n\">some</span><span class=\"o\">/</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">restored</span><span class=\"o\">-</span><span class=\"mi\">2017</span><span class=\"o\">/</span><span class=\"mi\">11</span><span class=\"o\">/</span><span class=\"mi\">23</span><span class=\"o\">/</span><span class=\"mi\">22</span><span class=\"o\">-</span><span class=\"mi\">23</span><span class=\"o\">-</span><span class=\"mi\">24</span><span class=\"n\">Z</span><span class=\"o\">.</span><span class=\"n\">jpg</span>\n</pre>\n<p>To iterate manually over a tree, and match incrementally each path segment by yourself:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">datetime_glob</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pattern_segments</span> <span class=\"o\">=</span> <span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">parse_pattern</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"o\">=</span><span class=\"s1\">'/some/path/*%Y/%m/</span><span class=\"si\">%d</span><span class=\"s1\">/%H-%M-%SZ.jpg'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span> <span class=\"o\">=</span> <span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">Match</span><span class=\"p\">()</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span><span class=\"o\">=</span><span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">match_segment</span><span class=\"p\">(</span><span class=\"n\">segment</span><span class=\"o\">=</span><span class=\"s1\">'some'</span><span class=\"p\">,</span> <span class=\"n\">pattern_segment</span><span class=\"o\">=</span><span class=\"n\">pattern_segments</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">match</span><span class=\"o\">=</span><span class=\"n\">match</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span>\n<span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">Match</span><span class=\"p\">(</span><span class=\"n\">year</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">month</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">day</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">hour</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">minute</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">second</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n                    <span class=\"n\">microsecond</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span><span class=\"o\">=</span><span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">match_segment</span><span class=\"p\">(</span><span class=\"n\">segment</span><span class=\"o\">=</span><span class=\"s1\">'path'</span><span class=\"p\">,</span> <span class=\"n\">pattern_segment</span><span class=\"o\">=</span><span class=\"n\">pattern_segments</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">match</span><span class=\"o\">=</span><span class=\"n\">match</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span>\n<span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">Match</span><span class=\"p\">(</span><span class=\"n\">year</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">month</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">day</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">hour</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">minute</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">second</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n                    <span class=\"n\">microsecond</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span><span class=\"o\">=</span><span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">match_segment</span><span class=\"p\">(</span><span class=\"n\">segment</span><span class=\"o\">=</span><span class=\"s1\">'some-text2016'</span><span class=\"p\">,</span> <span class=\"n\">pattern_segment</span><span class=\"o\">=</span><span class=\"n\">pattern_segments</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">match</span><span class=\"o\">=</span><span class=\"n\">match</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span>\n<span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">Match</span><span class=\"p\">(</span><span class=\"n\">year</span> <span class=\"o\">=</span> <span class=\"mi\">2016</span><span class=\"p\">,</span> <span class=\"n\">month</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">day</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">hour</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">minute</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">second</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n                    <span class=\"n\">microsecond</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span><span class=\"o\">=</span><span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">match_segment</span><span class=\"p\">(</span><span class=\"n\">segment</span><span class=\"o\">=</span><span class=\"s1\">'07'</span><span class=\"p\">,</span> <span class=\"n\">pattern_segment</span><span class=\"o\">=</span><span class=\"n\">pattern_segments</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">match</span><span class=\"o\">=</span><span class=\"n\">match</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span>\n<span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">Match</span><span class=\"p\">(</span><span class=\"n\">year</span> <span class=\"o\">=</span> <span class=\"mi\">2016</span><span class=\"p\">,</span> <span class=\"n\">month</span> <span class=\"o\">=</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"n\">day</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">hour</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">minute</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">second</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n                    <span class=\"n\">microsecond</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span><span class=\"o\">=</span><span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">match_segment</span><span class=\"p\">(</span><span class=\"n\">segment</span><span class=\"o\">=</span><span class=\"s1\">'03'</span><span class=\"p\">,</span> <span class=\"n\">pattern_segment</span><span class=\"o\">=</span><span class=\"n\">pattern_segments</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">match</span><span class=\"o\">=</span><span class=\"n\">match</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span>\n<span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">Match</span><span class=\"p\">(</span><span class=\"n\">year</span> <span class=\"o\">=</span> <span class=\"mi\">2016</span><span class=\"p\">,</span> <span class=\"n\">month</span> <span class=\"o\">=</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"n\">day</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">hour</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">minute</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">second</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">microsecond</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span><span class=\"o\">=</span><span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">match_segment</span><span class=\"p\">(</span><span class=\"n\">segment</span><span class=\"o\">=</span><span class=\"s1\">'21-22-23Z.jpg'</span><span class=\"p\">,</span> <span class=\"n\">pattern_segment</span><span class=\"o\">=</span><span class=\"n\">pattern_segments</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">],</span> <span class=\"n\">match</span><span class=\"o\">=</span><span class=\"n\">match</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">match</span>\n<span class=\"n\">datetime_glob</span><span class=\"o\">.</span><span class=\"n\">Match</span><span class=\"p\">(</span><span class=\"n\">year</span> <span class=\"o\">=</span> <span class=\"mi\">2016</span><span class=\"p\">,</span> <span class=\"n\">month</span> <span class=\"o\">=</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"n\">day</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">hour</span> <span class=\"o\">=</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"n\">minute</span> <span class=\"o\">=</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"n\">second</span> <span class=\"o\">=</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"n\">microsecond</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"supported-strftime-directives\">\n<h2>Supported strftime directives</h2>\n<p>(subset from <a href=\"https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior\" rel=\"nofollow\">https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior</a>)</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Directive</th>\n<th>Meaning</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>%d</td>\n<td>Day of the month as a zero-padded decimal number.</td>\n<td>01, 02, \u2026, 31</td>\n</tr>\n<tr><td>%-d</td>\n<td>Day of the month as a decimal number.</td>\n<td>1, 2, \u2026, 31</td>\n</tr>\n<tr><td>%m</td>\n<td>Month as a zero-padded decimal number.</td>\n<td>01, 02, \u2026, 12</td>\n</tr>\n<tr><td>%-m</td>\n<td>Month as a  decimal number.</td>\n<td>1, 2, \u2026, 12</td>\n</tr>\n<tr><td>%y</td>\n<td>Year without century as a zero-padded decimal number.</td>\n<td>00, 01, \u2026, 99</td>\n</tr>\n<tr><td>%Y</td>\n<td>Year with century as a decimal number.</td>\n<td>1970, 1988, 2001, 2013</td>\n</tr>\n<tr><td>%H</td>\n<td>Hour (24-hour clock) as a zero-padded decimal number.</td>\n<td>00, 01, \u2026, 23</td>\n</tr>\n<tr><td>%-H</td>\n<td>Hour (24-hour clock) as a decimal number.</td>\n<td>0, 1, \u2026, 23</td>\n</tr>\n<tr><td>%M</td>\n<td>Minute as a zero-padded decimal number.</td>\n<td>00, 01, \u2026, 59</td>\n</tr>\n<tr><td>%-M</td>\n<td>Minute as a decimal number.</td>\n<td>0, 1, \u2026, 59</td>\n</tr>\n<tr><td>%S</td>\n<td>Second as a zero-padded decimal number.</td>\n<td>00, 01, \u2026, 59</td>\n</tr>\n<tr><td>%-S</td>\n<td>Second as a decimal number.</td>\n<td>0, 1, \u2026, 59</td>\n</tr>\n<tr><td>%f</td>\n<td>Microsecond as a decimal number, zero-padded on the left.</td>\n<td>000000, 000001, \u2026, 999999</td>\n</tr>\n<tr><td>%%</td>\n<td>A literal \u2018%\u2019 character.</td>\n<td>%</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<ul>\n<li>Check out the repository.</li>\n<li>In the repository root, create the virtual environment:</li>\n</ul>\n<pre>python3 -m venv venv3\n</pre>\n<ul>\n<li>Activate the virtual environment:</li>\n</ul>\n<pre><span class=\"nb\">source</span> venv3/bin/activate\n</pre>\n<ul>\n<li>Install the development dependencies:</li>\n</ul>\n<pre>pip3 install -e .<span class=\"o\">[</span>dev<span class=\"o\">]</span>\n</pre>\n<ul>\n<li>Run <cite>precommit.py</cite> to execute pre-commit checks locally.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6548219, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "3f225ab5338997a8e1e1d27a44163182", "sha256": "9f486c06258001c566fd33c206bcd7e928bb5de9d2519768f20322cbd6006c5c"}, "downloads": -1, "filename": "datetime-glob-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3f225ab5338997a8e1e1d27a44163182", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5725, "upload_time": "2018-03-25T06:37:41", "upload_time_iso_8601": "2018-03-25T06:37:41.194598Z", "url": "https://files.pythonhosted.org/packages/8b/eb/703eadac0da2cf315bfad4574469eb52f4244b89f52bcc8b76d1d8824864/datetime-glob-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "5b3409f1cf0719236b8a86edcf243a3b", "sha256": "7901321b07b49e3b7ee8b3b1d0a917259fb01f0071740c3543f020205f97ba75"}, "downloads": -1, "filename": "datetime-glob-1.0.1.tar.gz", "has_sig": false, "md5_digest": "5b3409f1cf0719236b8a86edcf243a3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6043, "upload_time": "2018-03-25T12:45:06", "upload_time_iso_8601": "2018-03-25T12:45:06.112136Z", "url": "https://files.pythonhosted.org/packages/a2/64/23b08a830152946e6134f2912d792afe8e899ed3f0013b3bf0d3ee0b8045/datetime-glob-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "a96bab7a2632edcfa911572957354af2", "sha256": "388e3058e24a607d391edd15c38e19d2b3a2ab438b2cb54679d83bb255a1ec4c"}, "downloads": -1, "filename": "datetime-glob-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a96bab7a2632edcfa911572957354af2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6023, "upload_time": "2018-03-25T13:28:31", "upload_time_iso_8601": "2018-03-25T13:28:31.326039Z", "url": "https://files.pythonhosted.org/packages/1c/eb/7c8b9eb11199f5c3bceaa7a66afc38247cf7872efa0d68283dcda61392aa/datetime-glob-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "3e16e55ce703285379e411a613ba89a4", "sha256": "560ad4218ed7200345dbd03712881cfef10164599293af086064d5251a8048cf"}, "downloads": -1, "filename": "datetime-glob-1.0.3.tar.gz", "has_sig": false, "md5_digest": "3e16e55ce703285379e411a613ba89a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6046, "upload_time": "2018-03-25T15:59:11", "upload_time_iso_8601": "2018-03-25T15:59:11.526808Z", "url": "https://files.pythonhosted.org/packages/cb/61/6010da4182b973307330198d18fe9c78e5c4a185f52512b7d4705a573b50/datetime-glob-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "2249ea1100f4141724e5eef9a2864385", "sha256": "d78ad703d05211be574ef038276ade443fe155fbfb2fc69b330fe382d7b3e9af"}, "downloads": -1, "filename": "datetime-glob-1.0.4.tar.gz", "has_sig": false, "md5_digest": "2249ea1100f4141724e5eef9a2864385", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6701, "upload_time": "2018-03-26T06:11:51", "upload_time_iso_8601": "2018-03-26T06:11:51.715849Z", "url": "https://files.pythonhosted.org/packages/ec/07/7fb2a15666af797eb7c29f29cf2c60feb1ecc7932208346f8ee7aa40421c/datetime-glob-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "0aa69bce5ffeb9436e26738afd07719a", "sha256": "3fe0f5b077867c997acbfffe43a11df67b7b01d8af21e27d5fe102df7a6a3ed7"}, "downloads": -1, "filename": "datetime-glob-1.0.5.tar.gz", "has_sig": false, "md5_digest": "0aa69bce5ffeb9436e26738afd07719a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6761, "upload_time": "2018-03-26T06:57:18", "upload_time_iso_8601": "2018-03-26T06:57:18.799268Z", "url": "https://files.pythonhosted.org/packages/f1/fa/db604da55b25037f99a3cadbc1ca06bf5d8977443d18a0c8e3f9186b0841/datetime-glob-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "0f1268b7bb33433f86ba41578ee27b17", "sha256": "5b05b4d754b10d679d8038eadca96cb778bef231b128f958b9c1ad935f12448f"}, "downloads": -1, "filename": "datetime-glob-1.0.6.tar.gz", "has_sig": false, "md5_digest": "0f1268b7bb33433f86ba41578ee27b17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7289, "upload_time": "2018-04-04T13:44:09", "upload_time_iso_8601": "2018-04-04T13:44:09.672000Z", "url": "https://files.pythonhosted.org/packages/8c/79/b55ea8b2b89b1da76d1e0d3f418980f65c37a0d7e176aa1b67fb47cadc47/datetime-glob-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "6fdd626d90289d1048866f4307fb212c", "sha256": "d8f16b87c010c922adc88c2ccce223121310a69ade55d62ba566b2507bf6a174"}, "downloads": -1, "filename": "datetime-glob-1.0.7.tar.gz", "has_sig": false, "md5_digest": "6fdd626d90289d1048866f4307fb212c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8564, "upload_time": "2018-08-03T15:35:12", "upload_time_iso_8601": "2018-08-03T15:35:12.175423Z", "url": "https://files.pythonhosted.org/packages/ac/97/59f581d4a3c4af2f3348ad2b4e16e3168bc9537afd3e9f00d43a45cbdf24/datetime-glob-1.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6fdd626d90289d1048866f4307fb212c", "sha256": "d8f16b87c010c922adc88c2ccce223121310a69ade55d62ba566b2507bf6a174"}, "downloads": -1, "filename": "datetime-glob-1.0.7.tar.gz", "has_sig": false, "md5_digest": "6fdd626d90289d1048866f4307fb212c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8564, "upload_time": "2018-08-03T15:35:12", "upload_time_iso_8601": "2018-08-03T15:35:12.175423Z", "url": "https://files.pythonhosted.org/packages/ac/97/59f581d4a3c4af2f3348ad2b4e16e3168bc9537afd3e9f00d43a45cbdf24/datetime-glob-1.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:04 2020"}