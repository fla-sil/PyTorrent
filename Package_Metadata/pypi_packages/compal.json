{"info": {"author": "Ties de Kock", "author_email": "ties@tiesdekock.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Topic :: Software Development :: Libraries"], "description": "Compal CH7465LG (Ziggo Connect Box) tools\n=============================================\n\nThis repository contains a simple api to wrap the web interface of the Ziggo Connect Box (i.e. the\nCompal CH7465LG). It is implemented in **Python >= 3.7**.\n\nAt the moment it *only* contains the functionality that I needed while I was investigating my\ndevice, but pull requests that improve the documentation or add features are welcome.\n\nAbout the hardware\n------------------\nCompal does not provide information about the hardware. The modem has no FCC registration.\nHowever, the related Arris TG2492 modem was submitted to the FCC. The FCC documents for this\nmodem are [available][0]. Some interesting documents (internal photos) have been mirrored to\n`docs/fcc`.\n\nThe modem seems to be based on the Intel Puma 6 chipset. There is a long thead on (perceived)\nperformance problems caused by jitter on DSLReports. See [[ALL] SB6190 is a terrible modem - Intel Puma 6 / MaxLinear mistake][1]\n\n\nThe modem *most likely* contains open source components. Requests to Compal requesting source\ncode of these components, to an e-mail address on the Compal site, have not been answered yet.\n\n[0]: https://fccid.io/UIDTG2492\n[1]: https://www.dslreports.com/forum/r31079834-ALL-SB6190-is-a-terrible-modem-Intel-Puma-6-MaxLinear-mistake\n\nSecurity\n--------\nA security evaluation of the Connect Box was [posted](https://packetstormsecurity.com/files/137996/compalch7465lglc-bypassexec.txt)\non-line. This report is included in the `docs` folder.\n\nHow to use it?\n--------------\nThe `examples` directory contains some example scripts. My main use case is re-provisioning the\nmodem. An example script for this task is included.\n\nWant to get started really quickly?\n```python\nimport os\nimport time\nfrom compal import *\n\nmodem = Compal('192.168.178.1', os.environ['ROUTER_CODE'])\nmodem.login()\n\nfw = PortForwards(modem)\n\ndef toggle_all_rules(fw, goal):\n\trules = list(fw.rules)\n\tfor idx, r in enumerate(rules):\n\t  rules[idx] = r._replace(enabled=goal)\n\n\tfw.update_rules(rules)\n\tprint(list(fw.rules))\n\n# Disable all rules\ntoggle_all_rules(fw, False)\ntime.sleep(5)\n# And re-enable\ntoggle_all_rules(fw, True)\n\n# Or find all possible functions of the modem:\nscan = FuncScanner(modem, 0, os.environ['ROUTER_CODE'])\nwhile scan.current_pos < 101:\n\tprint(scan.scan().text)\n\n# And/or change wifi settings\nwifi = WifiSettings(modem)\nsettings = wifi.wifi_settings\nprint(settings)\n\nnew_settings = settings._replace(radio_2g=settings.radio_2g._replace(ssid='api_works'))\nwifi.update_wifi_settings(new_settings)\n\nprint(wifi.wifi_settings)\n\n# And/or DHCPSettings\n\n# If you want to go back to 'normal':\n# modem.reboot() # or\n# modem.factory_reset()\n\n# And logout\nmodem.logout()\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ties/compal_CH7465LG_py", "keywords": "compal CH7465LG connect box cablemodem", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "compal", "package_url": "https://pypi.org/project/compal/", "platform": "", "project_url": "https://pypi.org/project/compal/", "project_urls": {"Homepage": "https://github.com/ties/compal_CH7465LG_py"}, "release_url": "https://pypi.org/project/compal/0.2.0/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Compal CH7465LG/Ziggo Connect Box client", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Compal CH7465LG (Ziggo Connect Box) tools</h1>\n<p>This repository contains a simple api to wrap the web interface of the Ziggo Connect Box (i.e. the\nCompal CH7465LG). It is implemented in <strong>Python &gt;= 3.7</strong>.</p>\n<p>At the moment it <em>only</em> contains the functionality that I needed while I was investigating my\ndevice, but pull requests that improve the documentation or add features are welcome.</p>\n<h2>About the hardware</h2>\n<p>Compal does not provide information about the hardware. The modem has no FCC registration.\nHowever, the related Arris TG2492 modem was submitted to the FCC. The FCC documents for this\nmodem are <a href=\"https://fccid.io/UIDTG2492\" rel=\"nofollow\">available</a>. Some interesting documents (internal photos) have been mirrored to\n<code>docs/fcc</code>.</p>\n<p>The modem seems to be based on the Intel Puma 6 chipset. There is a long thead on (perceived)\nperformance problems caused by jitter on DSLReports. See <a href=\"https://www.dslreports.com/forum/r31079834-ALL-SB6190-is-a-terrible-modem-Intel-Puma-6-MaxLinear-mistake\" rel=\"nofollow\">[ALL] SB6190 is a terrible modem - Intel Puma 6 / MaxLinear mistake</a></p>\n<p>The modem <em>most likely</em> contains open source components. Requests to Compal requesting source\ncode of these components, to an e-mail address on the Compal site, have not been answered yet.</p>\n<h2>Security</h2>\n<p>A security evaluation of the Connect Box was <a href=\"https://packetstormsecurity.com/files/137996/compalch7465lglc-bypassexec.txt\" rel=\"nofollow\">posted</a>\non-line. This report is included in the <code>docs</code> folder.</p>\n<h2>How to use it?</h2>\n<p>The <code>examples</code> directory contains some example scripts. My main use case is re-provisioning the\nmodem. An example script for this task is included.</p>\n<p>Want to get started really quickly?</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">compal</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">modem</span> <span class=\"o\">=</span> <span class=\"n\">Compal</span><span class=\"p\">(</span><span class=\"s1\">'192.168.178.1'</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">'ROUTER_CODE'</span><span class=\"p\">])</span>\n<span class=\"n\">modem</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">()</span>\n\n<span class=\"n\">fw</span> <span class=\"o\">=</span> <span class=\"n\">PortForwards</span><span class=\"p\">(</span><span class=\"n\">modem</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">toggle_all_rules</span><span class=\"p\">(</span><span class=\"n\">fw</span><span class=\"p\">,</span> <span class=\"n\">goal</span><span class=\"p\">):</span>\n\t<span class=\"n\">rules</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">fw</span><span class=\"o\">.</span><span class=\"n\">rules</span><span class=\"p\">)</span>\n\t<span class=\"k\">for</span> <span class=\"n\">idx</span><span class=\"p\">,</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">rules</span><span class=\"p\">):</span>\n\t  <span class=\"n\">rules</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">_replace</span><span class=\"p\">(</span><span class=\"n\">enabled</span><span class=\"o\">=</span><span class=\"n\">goal</span><span class=\"p\">)</span>\n\n\t<span class=\"n\">fw</span><span class=\"o\">.</span><span class=\"n\">update_rules</span><span class=\"p\">(</span><span class=\"n\">rules</span><span class=\"p\">)</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">fw</span><span class=\"o\">.</span><span class=\"n\">rules</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Disable all rules</span>\n<span class=\"n\">toggle_all_rules</span><span class=\"p\">(</span><span class=\"n\">fw</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"c1\"># And re-enable</span>\n<span class=\"n\">toggle_all_rules</span><span class=\"p\">(</span><span class=\"n\">fw</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Or find all possible functions of the modem:</span>\n<span class=\"n\">scan</span> <span class=\"o\">=</span> <span class=\"n\">FuncScanner</span><span class=\"p\">(</span><span class=\"n\">modem</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">'ROUTER_CODE'</span><span class=\"p\">])</span>\n<span class=\"k\">while</span> <span class=\"n\">scan</span><span class=\"o\">.</span><span class=\"n\">current_pos</span> <span class=\"o\">&lt;</span> <span class=\"mi\">101</span><span class=\"p\">:</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">scan</span><span class=\"o\">.</span><span class=\"n\">scan</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># And/or change wifi settings</span>\n<span class=\"n\">wifi</span> <span class=\"o\">=</span> <span class=\"n\">WifiSettings</span><span class=\"p\">(</span><span class=\"n\">modem</span><span class=\"p\">)</span>\n<span class=\"n\">settings</span> <span class=\"o\">=</span> <span class=\"n\">wifi</span><span class=\"o\">.</span><span class=\"n\">wifi_settings</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">)</span>\n\n<span class=\"n\">new_settings</span> <span class=\"o\">=</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">_replace</span><span class=\"p\">(</span><span class=\"n\">radio_2g</span><span class=\"o\">=</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">radio_2g</span><span class=\"o\">.</span><span class=\"n\">_replace</span><span class=\"p\">(</span><span class=\"n\">ssid</span><span class=\"o\">=</span><span class=\"s1\">'api_works'</span><span class=\"p\">))</span>\n<span class=\"n\">wifi</span><span class=\"o\">.</span><span class=\"n\">update_wifi_settings</span><span class=\"p\">(</span><span class=\"n\">new_settings</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">wifi</span><span class=\"o\">.</span><span class=\"n\">wifi_settings</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># And/or DHCPSettings</span>\n\n<span class=\"c1\"># If you want to go back to 'normal':</span>\n<span class=\"c1\"># modem.reboot() # or</span>\n<span class=\"c1\"># modem.factory_reset()</span>\n\n<span class=\"c1\"># And logout</span>\n<span class=\"n\">modem</span><span class=\"o\">.</span><span class=\"n\">logout</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 7079078, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "9f8793eed97af2a462f4dab32760bc15", "sha256": "f4b7991907f96561f739fcf6608e03943df95427740f85c9c2d8520dd9d9585f"}, "downloads": -1, "filename": "compal-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9f8793eed97af2a462f4dab32760bc15", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3789424, "upload_time": "2020-04-10T13:07:08", "upload_time_iso_8601": "2020-04-10T13:07:08.134500Z", "url": "https://files.pythonhosted.org/packages/94/dc/fa764c87fa9349b00d2d61cf2a3e06b640bcb155b3a253963b3bde8ec8d0/compal-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c6bfaead46930e6952a10eb350979410", "sha256": "4d12767dc7284ba1e74d2d3c1b22967c9f61d83f3cc4fca9ae03fa2cd842ce6f"}, "downloads": -1, "filename": "compal-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c6bfaead46930e6952a10eb350979410", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3859776, "upload_time": "2020-04-22T19:46:01", "upload_time_iso_8601": "2020-04-22T19:46:01.777048Z", "url": "https://files.pythonhosted.org/packages/59/e8/e767319eeb81d6b27a8dd2620f8287f7c23d13ee9851edc9f7a79c4a99b2/compal-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c6bfaead46930e6952a10eb350979410", "sha256": "4d12767dc7284ba1e74d2d3c1b22967c9f61d83f3cc4fca9ae03fa2cd842ce6f"}, "downloads": -1, "filename": "compal-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c6bfaead46930e6952a10eb350979410", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3859776, "upload_time": "2020-04-22T19:46:01", "upload_time_iso_8601": "2020-04-22T19:46:01.777048Z", "url": "https://files.pythonhosted.org/packages/59/e8/e767319eeb81d6b27a8dd2620f8287f7c23d13ee9851edc9f7a79c4a99b2/compal-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:18 2020"}