{"info": {"author": "Vladimir Mihailenco", "author_email": "vlad@airbrake.io", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development"], "description": "# Python exception notifier for Airbrake\n\n[![Build Status](https://travis-ci.org/airbrake/pybrake.svg?branch=master)](https://travis-ci.org/airbrake/pybrake)\n\n## Installation\n\npybrake requires Python 3.4+.\n\n``` shell\npip install -U pybrake\n```\n\n## Configuration\n\nTo configure the pybrake notifier you will need your Airbrake project's `id` and\n`api_key`, these are available from your project's settings page.\n\n```python\nimport pybrake\n\n\nnotifier = pybrake.Notifier(project_id=123,\n                            project_key='FIXME',\n                            environment='production')\n```\n\n## Sending errors to Airbrake\n\n```python\ntry:\n    raise ValueError('hello')\nexcept Exception as err:\n    notifier.notify(err)\n```\n\n### Sending errors synchronously\n\nBy default, the `notify` function sends errors asynchronously using\n`ThreadPoolExecutor` and returns a `concurrent.futures.Future`, a synchronous\nAPI is also made available with the `notify_sync` function:\n\n```python\nnotice = notifier.notify_sync(err)\nif 'id' in notice:\n    print(notice['id'])\nelse:\n    print(notice['error'])\n```\n\n## Adding custom params\n\nTo set custom params you can build and send notice in separate steps:\n\n```python\nnotice = notifier.build_notice(err)\nnotice['params']['myparam'] = 'myvalue'\nnotifier.send_notice(notice)\n```\n\nYou can also add custom params to every error notice before it's sent to Airbrake\nwith the `add_filter` function.\n\n```python\ndef my_filter(notice):\n    notice['params']['myparam'] = 'myvalue'\n    return notice\n\nnotifier.add_filter(my_filter)\n```\n\n## Ignoring notices\n\nThere may be some notices/errors thrown in your application that you're not\ninterested in sending to Airbrake, you can ignore these using the `add_filter`\nfunction.\n\n```python\ndef my_filter(notice):\n    if notice['context']['environment'] == 'development':\n        # Ignore notices in development environment.\n        return None\n    return notice\n\nnotifier.add_filter(my_filter)\n```\n\n## Filtering keys\n\nWith `keys_blacklist` option you can specify list of keys containing sensitive information that must be filtered out, e.g.:\n\n```python\nnotifier = pybrake.Notifier(\n    ...\n    keys_blacklist=[\n        'password',           # exact match\n        re.compile('secret'), # regexp match\n    ],\n)\n```\n\n## Logging integration\n\npybrake provides a logging handler that sends your logs to Airbrake.\n\n```python\nimport logging\nimport pybrake\n\n\nairbrake_handler = pybrake.LoggingHandler(notifier=notifier,\n                                          level=logging.ERROR)\n\nlogger = logging.getLogger('test')\nlogger.addHandler(airbrake_handler)\n\nlogger.error('something bad happened')\n```\n\n## Django integration\n\nFirst you need to add your pybrake config to your Django `settings.py` file\nusing your project's `id` and `api_key`.\n\n```python\nAIRBRAKE = dict(\n    project_id=123,\n    project_key='FIXME',\n)\n```\n\nThe next step is activating the Airbrake middleware.\n\n```python\nMIDDLEWARE = [\n    ...\n    'pybrake.django.AirbrakeMiddleware',\n]\n```\n\nThe last step is configuring the airbrake logging handler. After that you are\nready to start reporting errors to Airbrake from your Django app.\n\n```python\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'handlers': {\n        'airbrake': {\n            'level': 'ERROR',\n            'class': 'pybrake.LoggingHandler',\n        },\n    },\n    'loggers': {\n        'app': {\n            'handlers': ['airbrake'],\n            'level': 'ERROR',\n            'propagate': True,\n        },\n    },\n}\n```\n\n## Flask integration\n\nThe Flask integration leverages Flask signals and therefore requires the blinker\nlibrary.\n\n```python\nfrom flask import Flask\nimport pybrake.flask\n\n\n\napp = Flask(__name__)\n\napp.config['PYBRAKE'] = dict(\n    project_id=123,\n    project_key='FIXME',\n)\napp = pybrake.flask.init_app(app)\n```\n\n## aiohttp integration (python 3.5+)\n\nSetup airbrake's middleware and config for your web application:\n\n```python\n# app.py\n\nfrom aiohttp import web\nfrom pybrake.aiohttp import create_airbrake_middleware\n\nairbrake_middleware = create_airbrake_middleware()\n\napp = web.Application(middlewares=[airbrake_middleware])\n\napp['airbrake_config'] = dict(\n  project_id=123,\n  project_key='FIXME',\n  environment='production'  # optional\n)\n```\n\nAlso, you can pass custom handlers to `create_airbrake_middleware`:\n\n```python\n# middlewares.py\n\nimport aiohttp_jinja2\nfrom pybrake.aiohttp import create_airbrake_middleware\n\n\nasync def handle_404(request):\n    return aiohttp_jinja2.render_template('404.html', request, {})\n\n\nasync def handle_500(request):\n    return aiohttp_jinja2.render_template('500.html', request, {})\n\n\ndef setup_middlewares(app):\n    airbrake_middleware = create_airbrake_middleware({\n        404: handle_404,\n        500: handle_500\n    })\n\n    app.middlewares.append(airbrake_middleware)\n```\n\n## Disabling pybrake logs\n\nThe pybrake logger can be silenced by setting the logging level to\n`logging.CRITICAL`.\n\n``` python\nimport logging\n\n\nlogging.getLogger(\"pybrake\").setLevel(logging.CRITICAL)\n```\n\n## Sending route stats\n\n`notifier.routes.notify` allows sending route stats to Airbrake. The library\nprovides integrations with Django and Flask. (your routes are tracked\nautomatically). You can also use this API manually:\n\n```py\nimport pybrake.RouteMetric as RouteMetric\n\nmetric = RouteMetric(method=request.method, route=route)\nmetric.status_code = response.status_code\nmetric.content_type = response.headers.get(\"Content-Type\")\nmetric.end_time = time.time()\n\nnotifier.routes.notify(metric)\n```\n\n## Sending route breakdowns\n\n`notifier.routes.breakdowns.notify` allows sending performance breakdown stats\nto Airbrake. You can use this API manually:\n\n```py\nimport pybrake.RouteBreakdowns as RouteBreakdowns\n\nmetric = RouteBreakdowns(method=request.method, route=route)\nmetric.response_type = response.headers.get(\"Content-Type\")\nmetric.end_time = time.time()\n\nnotifier.routes.notify(metric)\n```\n\n## Sending query stats\n\n`notifier.queries.notify` allows sending SQL query stats to Airbrake. The\nlibrary provides integration with Django (your queries are tracked\nautomatically). You can also use this API manually:\n\n```py\nimport pybrake.QueryStat as QueryStat\n\nmetric = QueryStat(\n  method=request.method,\n  route=route,\n  query=\"SELECT * FROM foos\"\n)\nmetric.end_time = time.time()\n\nnotifier.queries.notify(metric)\n```\n\n## Sending queue stats\n\n`notifier.queues.notify` allows sending queue (job) stats to Airbrake. The\nlibrary provides integration with Celery (your queues are tracked\nautomatically). You can also use this API manually:\n\n```py\nimport pybrake.QueueMetric as QueueMetric\n\nmetric = QueryMetric(queue=\"foo_queue\")\nnotifier.queues.notify(metric)\n```\n\n## Development\n\n### Running the tests\n\n```shell\npip install -r test-requirements.txt\npytest\n```\n\n### Uploading to PyPI\n\n```shell\npython setup.py sdist upload\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/airbrake/pybrake", "keywords": "airbrake exception error notifier", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pybrake", "package_url": "https://pypi.org/project/pybrake/", "platform": "", "project_url": "https://pypi.org/project/pybrake/", "project_urls": {"Homepage": "http://github.com/airbrake/pybrake"}, "release_url": "https://pypi.org/project/pybrake/0.4.6/", "requires_dist": null, "requires_python": "", "summary": "Python exception notifier for Airbrake", "version": "0.4.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python exception notifier for Airbrake</h1>\n<p><a href=\"https://travis-ci.org/airbrake/pybrake\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c2052fcff0c24ec00d1fcf7d5ef0b469d3ec6582/68747470733a2f2f7472617669732d63692e6f72672f6169726272616b652f70796272616b652e7376673f6272616e63683d6d6173746572\"></a></p>\n<h2>Installation</h2>\n<p>pybrake requires Python 3.4+.</p>\n<pre>pip install -U pybrake\n</pre>\n<h2>Configuration</h2>\n<p>To configure the pybrake notifier you will need your Airbrake project's <code>id</code> and\n<code>api_key</code>, these are available from your project's settings page.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pybrake</span>\n\n\n<span class=\"n\">notifier</span> <span class=\"o\">=</span> <span class=\"n\">pybrake</span><span class=\"o\">.</span><span class=\"n\">Notifier</span><span class=\"p\">(</span><span class=\"n\">project_id</span><span class=\"o\">=</span><span class=\"mi\">123</span><span class=\"p\">,</span>\n                            <span class=\"n\">project_key</span><span class=\"o\">=</span><span class=\"s1\">'FIXME'</span><span class=\"p\">,</span>\n                            <span class=\"n\">environment</span><span class=\"o\">=</span><span class=\"s1\">'production'</span><span class=\"p\">)</span>\n</pre>\n<h2>Sending errors to Airbrake</h2>\n<pre><span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">'hello'</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">err</span><span class=\"p\">:</span>\n    <span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">notify</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n</pre>\n<h3>Sending errors synchronously</h3>\n<p>By default, the <code>notify</code> function sends errors asynchronously using\n<code>ThreadPoolExecutor</code> and returns a <code>concurrent.futures.Future</code>, a synchronous\nAPI is also made available with the <code>notify_sync</code> function:</p>\n<pre><span class=\"n\">notice</span> <span class=\"o\">=</span> <span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">notify_sync</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"s1\">'id'</span> <span class=\"ow\">in</span> <span class=\"n\">notice</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">notice</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">])</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">notice</span><span class=\"p\">[</span><span class=\"s1\">'error'</span><span class=\"p\">])</span>\n</pre>\n<h2>Adding custom params</h2>\n<p>To set custom params you can build and send notice in separate steps:</p>\n<pre><span class=\"n\">notice</span> <span class=\"o\">=</span> <span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">build_notice</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n<span class=\"n\">notice</span><span class=\"p\">[</span><span class=\"s1\">'params'</span><span class=\"p\">][</span><span class=\"s1\">'myparam'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'myvalue'</span>\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">send_notice</span><span class=\"p\">(</span><span class=\"n\">notice</span><span class=\"p\">)</span>\n</pre>\n<p>You can also add custom params to every error notice before it's sent to Airbrake\nwith the <code>add_filter</code> function.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">my_filter</span><span class=\"p\">(</span><span class=\"n\">notice</span><span class=\"p\">):</span>\n    <span class=\"n\">notice</span><span class=\"p\">[</span><span class=\"s1\">'params'</span><span class=\"p\">][</span><span class=\"s1\">'myparam'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'myvalue'</span>\n    <span class=\"k\">return</span> <span class=\"n\">notice</span>\n\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">add_filter</span><span class=\"p\">(</span><span class=\"n\">my_filter</span><span class=\"p\">)</span>\n</pre>\n<h2>Ignoring notices</h2>\n<p>There may be some notices/errors thrown in your application that you're not\ninterested in sending to Airbrake, you can ignore these using the <code>add_filter</code>\nfunction.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">my_filter</span><span class=\"p\">(</span><span class=\"n\">notice</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">notice</span><span class=\"p\">[</span><span class=\"s1\">'context'</span><span class=\"p\">][</span><span class=\"s1\">'environment'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'development'</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Ignore notices in development environment.</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n    <span class=\"k\">return</span> <span class=\"n\">notice</span>\n\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">add_filter</span><span class=\"p\">(</span><span class=\"n\">my_filter</span><span class=\"p\">)</span>\n</pre>\n<h2>Filtering keys</h2>\n<p>With <code>keys_blacklist</code> option you can specify list of keys containing sensitive information that must be filtered out, e.g.:</p>\n<pre><span class=\"n\">notifier</span> <span class=\"o\">=</span> <span class=\"n\">pybrake</span><span class=\"o\">.</span><span class=\"n\">Notifier</span><span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">keys_blacklist</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"s1\">'password'</span><span class=\"p\">,</span>           <span class=\"c1\"># exact match</span>\n        <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"s1\">'secret'</span><span class=\"p\">),</span> <span class=\"c1\"># regexp match</span>\n    <span class=\"p\">],</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Logging integration</h2>\n<p>pybrake provides a logging handler that sends your logs to Airbrake.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pybrake</span>\n\n\n<span class=\"n\">airbrake_handler</span> <span class=\"o\">=</span> <span class=\"n\">pybrake</span><span class=\"o\">.</span><span class=\"n\">LoggingHandler</span><span class=\"p\">(</span><span class=\"n\">notifier</span><span class=\"o\">=</span><span class=\"n\">notifier</span><span class=\"p\">,</span>\n                                          <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">ERROR</span><span class=\"p\">)</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">addHandler</span><span class=\"p\">(</span><span class=\"n\">airbrake_handler</span><span class=\"p\">)</span>\n\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">'something bad happened'</span><span class=\"p\">)</span>\n</pre>\n<h2>Django integration</h2>\n<p>First you need to add your pybrake config to your Django <code>settings.py</code> file\nusing your project's <code>id</code> and <code>api_key</code>.</p>\n<pre><span class=\"n\">AIRBRAKE</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n    <span class=\"n\">project_id</span><span class=\"o\">=</span><span class=\"mi\">123</span><span class=\"p\">,</span>\n    <span class=\"n\">project_key</span><span class=\"o\">=</span><span class=\"s1\">'FIXME'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>The next step is activating the Airbrake middleware.</p>\n<pre><span class=\"n\">MIDDLEWARE</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'pybrake.django.AirbrakeMiddleware'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<p>The last step is configuring the airbrake logging handler. After that you are\nready to start reporting errors to Airbrake from your Django app.</p>\n<pre><span class=\"n\">LOGGING</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'version'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">'disable_existing_loggers'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'airbrake'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'ERROR'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'class'</span><span class=\"p\">:</span> <span class=\"s1\">'pybrake.LoggingHandler'</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'loggers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'app'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'airbrake'</span><span class=\"p\">],</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'ERROR'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'propagate'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>Flask integration</h2>\n<p>The Flask integration leverages Flask signals and therefore requires the blinker\nlibrary.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pybrake.flask</span>\n\n\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'PYBRAKE'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n    <span class=\"n\">project_id</span><span class=\"o\">=</span><span class=\"mi\">123</span><span class=\"p\">,</span>\n    <span class=\"n\">project_key</span><span class=\"o\">=</span><span class=\"s1\">'FIXME'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">pybrake</span><span class=\"o\">.</span><span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">init_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n<h2>aiohttp integration (python 3.5+)</h2>\n<p>Setup airbrake's middleware and config for your web application:</p>\n<pre><span class=\"c1\"># app.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">web</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pybrake.aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">create_airbrake_middleware</span>\n\n<span class=\"n\">airbrake_middleware</span> <span class=\"o\">=</span> <span class=\"n\">create_airbrake_middleware</span><span class=\"p\">()</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">(</span><span class=\"n\">middlewares</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">airbrake_middleware</span><span class=\"p\">])</span>\n\n<span class=\"n\">app</span><span class=\"p\">[</span><span class=\"s1\">'airbrake_config'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n  <span class=\"n\">project_id</span><span class=\"o\">=</span><span class=\"mi\">123</span><span class=\"p\">,</span>\n  <span class=\"n\">project_key</span><span class=\"o\">=</span><span class=\"s1\">'FIXME'</span><span class=\"p\">,</span>\n  <span class=\"n\">environment</span><span class=\"o\">=</span><span class=\"s1\">'production'</span>  <span class=\"c1\"># optional</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Also, you can pass custom handlers to <code>create_airbrake_middleware</code>:</p>\n<pre><span class=\"c1\"># middlewares.py</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">aiohttp_jinja2</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pybrake.aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">create_airbrake_middleware</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">handle_404</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">aiohttp_jinja2</span><span class=\"o\">.</span><span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"s1\">'404.html'</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"p\">{})</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">handle_500</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">aiohttp_jinja2</span><span class=\"o\">.</span><span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"s1\">'500.html'</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"p\">{})</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">setup_middlewares</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">):</span>\n    <span class=\"n\">airbrake_middleware</span> <span class=\"o\">=</span> <span class=\"n\">create_airbrake_middleware</span><span class=\"p\">({</span>\n        <span class=\"mi\">404</span><span class=\"p\">:</span> <span class=\"n\">handle_404</span><span class=\"p\">,</span>\n        <span class=\"mi\">500</span><span class=\"p\">:</span> <span class=\"n\">handle_500</span>\n    <span class=\"p\">})</span>\n\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">middlewares</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">airbrake_middleware</span><span class=\"p\">)</span>\n</pre>\n<h2>Disabling pybrake logs</h2>\n<p>The pybrake logger can be silenced by setting the logging level to\n<code>logging.CRITICAL</code>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s2\">\"pybrake\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">CRITICAL</span><span class=\"p\">)</span>\n</pre>\n<h2>Sending route stats</h2>\n<p><code>notifier.routes.notify</code> allows sending route stats to Airbrake. The library\nprovides integrations with Django and Flask. (your routes are tracked\nautomatically). You can also use this API manually:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pybrake.RouteMetric</span> <span class=\"k\">as</span> <span class=\"nn\">RouteMetric</span>\n\n<span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">RouteMetric</span><span class=\"p\">(</span><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">method</span><span class=\"p\">,</span> <span class=\"n\">route</span><span class=\"o\">=</span><span class=\"n\">route</span><span class=\"p\">)</span>\n<span class=\"n\">metric</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status_code</span>\n<span class=\"n\">metric</span><span class=\"o\">.</span><span class=\"n\">content_type</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"Content-Type\"</span><span class=\"p\">)</span>\n<span class=\"n\">metric</span><span class=\"o\">.</span><span class=\"n\">end_time</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">routes</span><span class=\"o\">.</span><span class=\"n\">notify</span><span class=\"p\">(</span><span class=\"n\">metric</span><span class=\"p\">)</span>\n</pre>\n<h2>Sending route breakdowns</h2>\n<p><code>notifier.routes.breakdowns.notify</code> allows sending performance breakdown stats\nto Airbrake. You can use this API manually:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pybrake.RouteBreakdowns</span> <span class=\"k\">as</span> <span class=\"nn\">RouteBreakdowns</span>\n\n<span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">RouteBreakdowns</span><span class=\"p\">(</span><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">method</span><span class=\"p\">,</span> <span class=\"n\">route</span><span class=\"o\">=</span><span class=\"n\">route</span><span class=\"p\">)</span>\n<span class=\"n\">metric</span><span class=\"o\">.</span><span class=\"n\">response_type</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"Content-Type\"</span><span class=\"p\">)</span>\n<span class=\"n\">metric</span><span class=\"o\">.</span><span class=\"n\">end_time</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">routes</span><span class=\"o\">.</span><span class=\"n\">notify</span><span class=\"p\">(</span><span class=\"n\">metric</span><span class=\"p\">)</span>\n</pre>\n<h2>Sending query stats</h2>\n<p><code>notifier.queries.notify</code> allows sending SQL query stats to Airbrake. The\nlibrary provides integration with Django (your queries are tracked\nautomatically). You can also use this API manually:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pybrake.QueryStat</span> <span class=\"k\">as</span> <span class=\"nn\">QueryStat</span>\n\n<span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">QueryStat</span><span class=\"p\">(</span>\n  <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">method</span><span class=\"p\">,</span>\n  <span class=\"n\">route</span><span class=\"o\">=</span><span class=\"n\">route</span><span class=\"p\">,</span>\n  <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"s2\">\"SELECT * FROM foos\"</span>\n<span class=\"p\">)</span>\n<span class=\"n\">metric</span><span class=\"o\">.</span><span class=\"n\">end_time</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">queries</span><span class=\"o\">.</span><span class=\"n\">notify</span><span class=\"p\">(</span><span class=\"n\">metric</span><span class=\"p\">)</span>\n</pre>\n<h2>Sending queue stats</h2>\n<p><code>notifier.queues.notify</code> allows sending queue (job) stats to Airbrake. The\nlibrary provides integration with Celery (your queues are tracked\nautomatically). You can also use this API manually:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pybrake.QueueMetric</span> <span class=\"k\">as</span> <span class=\"nn\">QueueMetric</span>\n\n<span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">QueryMetric</span><span class=\"p\">(</span><span class=\"n\">queue</span><span class=\"o\">=</span><span class=\"s2\">\"foo_queue\"</span><span class=\"p\">)</span>\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">queues</span><span class=\"o\">.</span><span class=\"n\">notify</span><span class=\"p\">(</span><span class=\"n\">metric</span><span class=\"p\">)</span>\n</pre>\n<h2>Development</h2>\n<h3>Running the tests</h3>\n<pre>pip install -r test-requirements.txt\npytest\n</pre>\n<h3>Uploading to PyPI</h3>\n<pre>python setup.py sdist upload\n</pre>\n\n          </div>"}, "last_serial": 7077834, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "40f9836fe7f07bd061a4918a70dd94a2", "sha256": "63ff86667c12779787de816b7acdafeb8927a9155b0fdb06e2698e2b27f972f2"}, "downloads": -1, "filename": "pybrake-0.1.tar.gz", "has_sig": false, "md5_digest": "40f9836fe7f07bd061a4918a70dd94a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7434, "upload_time": "2018-03-21T11:27:43", "upload_time_iso_8601": "2018-03-21T11:27:43.883833Z", "url": "https://files.pythonhosted.org/packages/c6/08/193ec23acb8e7aae79f118826c29c127387013be9d747683a32e01b0e139/pybrake-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "8a6e9a3ea83bd86e5b6c953f49a0ac22", "sha256": "69976ebda1961d1355e0ef980ccb3801350c38a7420ca7f6cfd264aa98a9e405"}, "downloads": -1, "filename": "pybrake-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8a6e9a3ea83bd86e5b6c953f49a0ac22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7504, "upload_time": "2018-03-21T11:27:39", "upload_time_iso_8601": "2018-03-21T11:27:39.109954Z", "url": "https://files.pythonhosted.org/packages/2c/37/e2ef3b0fdc0647d4e88ad20cf0758fe02c0f2a773ac9d993dd3babab6cbb/pybrake-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a91b55c5cf0f663a3fd2c778207a3e42", "sha256": "a4ad148c24805939df5d147efca3a64903c6e0e084d69c122bae6ba33cc0a638"}, "downloads": -1, "filename": "pybrake-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a91b55c5cf0f663a3fd2c778207a3e42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7501, "upload_time": "2018-03-21T11:27:40", "upload_time_iso_8601": "2018-03-21T11:27:40.627363Z", "url": "https://files.pythonhosted.org/packages/2c/66/89d4acd72f83d485d25244ff5cb67a64b33e6d6d48af2407ebbe71b48483/pybrake-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "5aa96e72d088c64dee4de0805d1b4853", "sha256": "8559b114590f24af7c7d14db4692c99a817158685cf40854e249f987c291e0cb"}, "downloads": -1, "filename": "pybrake-0.1.3.tar.gz", "has_sig": false, "md5_digest": "5aa96e72d088c64dee4de0805d1b4853", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9852, "upload_time": "2018-03-21T11:27:42", "upload_time_iso_8601": "2018-03-21T11:27:42.168836Z", "url": "https://files.pythonhosted.org/packages/01/61/cdd9b93555e39808891f299485ac2746bb459c5682a1f30098d6ec3db587/pybrake-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "906cb4250b79ef638abf23531fb2d2d3", "sha256": "5bb656f29239d77fda365a214b27ea1c7813d01f1270365aa0981a426853d0d5"}, "downloads": -1, "filename": "pybrake-0.2.0.tar.gz", "has_sig": false, "md5_digest": "906cb4250b79ef638abf23531fb2d2d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9848, "upload_time": "2018-03-05T13:05:19", "upload_time_iso_8601": "2018-03-05T13:05:19.539678Z", "url": "https://files.pythonhosted.org/packages/60/4b/cfb0517ded1be1fd5b7c0c6685d6fcd0972e6c9a1a8525c3728126bd2098/pybrake-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "df2456faff94b73d256318d28f52b2ca", "sha256": "2db8f3a67a7cab017c913ac30850e2244150d45374e356a0f86ba6c00b9b05c6"}, "downloads": -1, "filename": "pybrake-0.3.0.tar.gz", "has_sig": false, "md5_digest": "df2456faff94b73d256318d28f52b2ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10795, "upload_time": "2018-03-12T11:33:57", "upload_time_iso_8601": "2018-03-12T11:33:57.659057Z", "url": "https://files.pythonhosted.org/packages/2d/8e/11e7b7255b3267d6492be97795aee0d34da84f49f8ca71d2b0c1b6fe31ae/pybrake-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "136a7b249efebce9a4c22992b0392c79", "sha256": "828df7b2d25769ad24c98036e74cf1e96a62d0fbb5e255c5abebe79e178ccec7"}, "downloads": -1, "filename": "pybrake-0.3.1.tar.gz", "has_sig": false, "md5_digest": "136a7b249efebce9a4c22992b0392c79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11156, "upload_time": "2018-03-21T11:27:46", "upload_time_iso_8601": "2018-03-21T11:27:46.853087Z", "url": "https://files.pythonhosted.org/packages/1c/9a/2c3520ad746f23719fa82db3431863b3bd069d4834bccdf0413f5dd1d705/pybrake-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "b8640ba5aa1a9ff8ca84973030eb1b8b", "sha256": "cdcc9cb84b08b93dd428758b74af8fa56235ff8e0813630cb0ee1872cb8d9049"}, "downloads": -1, "filename": "pybrake-0.3.2.tar.gz", "has_sig": false, "md5_digest": "b8640ba5aa1a9ff8ca84973030eb1b8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11377, "upload_time": "2018-04-24T07:26:58", "upload_time_iso_8601": "2018-04-24T07:26:58.391244Z", "url": "https://files.pythonhosted.org/packages/f5/be/0fc0d23c6592e0cb22d300de53e08b6fef1d0c626962ea9dcbb9ab159199/pybrake-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "b4a5ccd908e8ecc37c58220f19937543", "sha256": "3930e6f346fe95129fb3484988f470c8bfdb42fc0d7c7d3057e321308bb86468"}, "downloads": -1, "filename": "pybrake-0.3.3.tar.gz", "has_sig": false, "md5_digest": "b4a5ccd908e8ecc37c58220f19937543", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11385, "upload_time": "2018-05-25T10:59:40", "upload_time_iso_8601": "2018-05-25T10:59:40.254415Z", "url": "https://files.pythonhosted.org/packages/14/0d/383172089294df679b70e3c51718b76c032ae1d3c597562dbcc78a4b0675/pybrake-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "35a1408f5a5e66d651d9f2108e89dfa2", "sha256": "32068d0315fa1d3b793ddc71424aafdcd1553e55f200fb7616968290539ad7cb"}, "downloads": -1, "filename": "pybrake-0.3.4.tar.gz", "has_sig": false, "md5_digest": "35a1408f5a5e66d651d9f2108e89dfa2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12205, "upload_time": "2018-07-03T11:22:13", "upload_time_iso_8601": "2018-07-03T11:22:13.272432Z", "url": "https://files.pythonhosted.org/packages/8c/50/340ac06429089faa68298570c9ac14233df2d19d402c19ee3779ef4d3e7b/pybrake-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "a24516268c6322c3d9f8d45b3ead3d42", "sha256": "c63c308e8e3fcfd5daacffb52c9c9672943dc692a10957f8abf9658fdd5e9735"}, "downloads": -1, "filename": "pybrake-0.3.5.tar.gz", "has_sig": false, "md5_digest": "a24516268c6322c3d9f8d45b3ead3d42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12279, "upload_time": "2018-08-11T06:11:18", "upload_time_iso_8601": "2018-08-11T06:11:18.714917Z", "url": "https://files.pythonhosted.org/packages/a2/4f/33445fb44d642b605b5e4a30d37ff7b2749134433a4b20182a2714a3bd0e/pybrake-0.3.5.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "f379fa94c21c50311b1a9cf2953f3232", "sha256": "0116bceceb94157f51b9af961e7b23e0dfecc6ea85f567bd2533ab24186ea0cd"}, "downloads": -1, "filename": "pybrake-0.4.0.tar.gz", "has_sig": false, "md5_digest": "f379fa94c21c50311b1a9cf2953f3232", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26866, "upload_time": "2019-06-20T12:50:14", "upload_time_iso_8601": "2019-06-20T12:50:14.013438Z", "url": "https://files.pythonhosted.org/packages/d8/a5/e04a19105bcf7a3cfb5fdc499c51d7794b5a28dd0c6f708396b8681cf61a/pybrake-0.4.0.tar.gz", "yanked": false}], "0.4.0b0": [{"comment_text": "", "digests": {"md5": "bbebc0519e20aef067f17cbcbb817ad1", "sha256": "e822ebcfcd2561b64ae80fe3cd3982a14a9adf88ad7c90c85d87c2bf9fbe0d23"}, "downloads": -1, "filename": "pybrake-0.4.0b0.tar.gz", "has_sig": false, "md5_digest": "bbebc0519e20aef067f17cbcbb817ad1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19870, "upload_time": "2018-10-18T10:24:35", "upload_time_iso_8601": "2018-10-18T10:24:35.060526Z", "url": "https://files.pythonhosted.org/packages/31/ba/5cdbde4432a957f0d064f223f76375c97631b58a505338bff68c9600329e/pybrake-0.4.0b0.tar.gz", "yanked": false}], "0.4.0b2": [{"comment_text": "", "digests": {"md5": "946e0ff3ce730d3961d2ab9c0734015e", "sha256": "10489940759fd0aa04e53adbcef5fdb4b2a66b0dcd53297c8c67677cc2440fa3"}, "downloads": -1, "filename": "pybrake-0.4.0b2.tar.gz", "has_sig": false, "md5_digest": "946e0ff3ce730d3961d2ab9c0734015e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23104, "upload_time": "2019-03-03T12:18:46", "upload_time_iso_8601": "2019-03-03T12:18:46.560580Z", "url": "https://files.pythonhosted.org/packages/2a/44/575199a2ca7f88f22b4214cb59fa485bc8499f8a627465ac0986d5ca3446/pybrake-0.4.0b2.tar.gz", "yanked": false}], "0.4.0b3": [{"comment_text": "", "digests": {"md5": "a7be81f0a6ab65356572bb8812b22299", "sha256": "3afded7a9c4cfa6939c8e61e608c0937faf8a65c2f0ce2e8cd980001268e9064"}, "downloads": -1, "filename": "pybrake-0.4.0b3.tar.gz", "has_sig": false, "md5_digest": "a7be81f0a6ab65356572bb8812b22299", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23113, "upload_time": "2019-03-08T13:27:47", "upload_time_iso_8601": "2019-03-08T13:27:47.934783Z", "url": "https://files.pythonhosted.org/packages/fb/53/5ee56b7bec2bad780e4abb25c1b756bee1273b0a80d998deaf98dd2d98b1/pybrake-0.4.0b3.tar.gz", "yanked": false}], "0.4.0b4": [{"comment_text": "", "digests": {"md5": "bd5bcfdb753ec741bfe3ed62c73208f8", "sha256": "9b059feea62fb4acfdba016a9107228512605c761f4ed0cfd8af18785483ca48"}, "downloads": -1, "filename": "pybrake-0.4.0b4.tar.gz", "has_sig": false, "md5_digest": "bd5bcfdb753ec741bfe3ed62c73208f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23137, "upload_time": "2019-03-08T13:36:19", "upload_time_iso_8601": "2019-03-08T13:36:19.799814Z", "url": "https://files.pythonhosted.org/packages/09/11/d007f8dfede74e2dfb13b21b1ee5ce23d5f9c3d5f19fd06b53331b5d9bf8/pybrake-0.4.0b4.tar.gz", "yanked": false}], "0.4.0b5": [{"comment_text": "", "digests": {"md5": "4b2187c99a66ad8c38d1aa6c7e988512", "sha256": "ac55df0b97880596f9b190e88531a16c7bc34295b92298ec448d5ef27e73209d"}, "downloads": -1, "filename": "pybrake-0.4.0b5.tar.gz", "has_sig": false, "md5_digest": "4b2187c99a66ad8c38d1aa6c7e988512", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23144, "upload_time": "2019-03-13T14:22:31", "upload_time_iso_8601": "2019-03-13T14:22:31.610715Z", "url": "https://files.pythonhosted.org/packages/21/2b/ca2d5c71b4cc36b761365740730ebe330e596f097376207a70433103fa6e/pybrake-0.4.0b5.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "e9ca68de24242e1c3af51aa1bd80599f", "sha256": "adf7bf6fa19116581695e224c3425305aae033cdba622c02d475f8442f3c7827"}, "downloads": -1, "filename": "pybrake-0.4.1.tar.gz", "has_sig": false, "md5_digest": "e9ca68de24242e1c3af51aa1bd80599f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24898, "upload_time": "2019-07-16T10:24:40", "upload_time_iso_8601": "2019-07-16T10:24:40.005106Z", "url": "https://files.pythonhosted.org/packages/1a/1f/eccf26372d00c468b597881a7088f6d5387b18c19b5126669a55efde1f5d/pybrake-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "888f543988ef63bcd030d9aeb03cb976", "sha256": "6a2a150a1fab83d7004acee78fceb9e546fc1fcb425fc4e4bf535c0fe44b2932"}, "downloads": -1, "filename": "pybrake-0.4.2.tar.gz", "has_sig": false, "md5_digest": "888f543988ef63bcd030d9aeb03cb976", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27286, "upload_time": "2019-09-17T12:21:49", "upload_time_iso_8601": "2019-09-17T12:21:49.916499Z", "url": "https://files.pythonhosted.org/packages/02/11/001d4beb1863b3bb84cb0fd5c8009ac05b6dc78aa3b8d88ed7cd7547d417/pybrake-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "0fcccc8971a12e88e114be7676deccba", "sha256": "edb4f18b36c6cc6fb6f71db7b521d13c1bc37f454413f58d8557ebda1e965ee2"}, "downloads": -1, "filename": "pybrake-0.4.3.tar.gz", "has_sig": false, "md5_digest": "0fcccc8971a12e88e114be7676deccba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27599, "upload_time": "2019-11-05T10:02:54", "upload_time_iso_8601": "2019-11-05T10:02:54.342783Z", "url": "https://files.pythonhosted.org/packages/de/b2/0d0793403e3179abe2219c5e114a56de384417b1aa62d8cdbdba62043328/pybrake-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "74319ec2a00086143ea4afca5a6e12cc", "sha256": "1212f8ef1cdb87368d58764be14b18f674ee2ccfe31c97f22b821882bca315ac"}, "downloads": -1, "filename": "pybrake-0.4.4.tar.gz", "has_sig": false, "md5_digest": "74319ec2a00086143ea4afca5a6e12cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27632, "upload_time": "2019-11-20T13:35:23", "upload_time_iso_8601": "2019-11-20T13:35:23.931665Z", "url": "https://files.pythonhosted.org/packages/7b/90/ae060e9e7ca79388217b1268624bf81eff3bfbe2f0797fd0c728709fe34f/pybrake-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "31afdf8f53338f0a636cff005332f118", "sha256": "d697acbe1e8fbec917ff2b1475a8500d8449a8561be1d6fb7c7801f96d308d80"}, "downloads": -1, "filename": "pybrake-0.4.5-py3.7.egg", "has_sig": false, "md5_digest": "31afdf8f53338f0a636cff005332f118", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 89104, "upload_time": "2020-04-22T16:31:54", "upload_time_iso_8601": "2020-04-22T16:31:54.527274Z", "url": "https://files.pythonhosted.org/packages/64/8f/902f6f6ef15eeabf2d3833a4b0348bd25956b679f12b35bf4704a6cf778b/pybrake-0.4.5-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c7df21ed1f9cd0c7a35d3b6fe6188cd", "sha256": "c3cde01dbc9a60aa5d525c22d056794ab58280dbe31351ce91c44e60302fbd96"}, "downloads": -1, "filename": "pybrake-0.4.5.tar.gz", "has_sig": false, "md5_digest": "3c7df21ed1f9cd0c7a35d3b6fe6188cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27898, "upload_time": "2020-02-03T15:02:52", "upload_time_iso_8601": "2020-02-03T15:02:52.015973Z", "url": "https://files.pythonhosted.org/packages/e4/45/1d7b3894e5459572524e3eec9e4877ac03f139838133610ed30f0f180354/pybrake-0.4.5.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "2d43d338864870ac200ffc4f4159ab90", "sha256": "1e8f68199469044f8fc90dd3432cf5eca861c4221abb080c6959e75ab358b2e1"}, "downloads": -1, "filename": "pybrake-0.4.6.tar.gz", "has_sig": false, "md5_digest": "2d43d338864870ac200ffc4f4159ab90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29581, "upload_time": "2020-04-22T16:31:55", "upload_time_iso_8601": "2020-04-22T16:31:55.768936Z", "url": "https://files.pythonhosted.org/packages/45/13/2283079ef5be9f0eeb12d7e82869497e4ed65aded9a593bc4e420c68ffd8/pybrake-0.4.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2d43d338864870ac200ffc4f4159ab90", "sha256": "1e8f68199469044f8fc90dd3432cf5eca861c4221abb080c6959e75ab358b2e1"}, "downloads": -1, "filename": "pybrake-0.4.6.tar.gz", "has_sig": false, "md5_digest": "2d43d338864870ac200ffc4f4159ab90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29581, "upload_time": "2020-04-22T16:31:55", "upload_time_iso_8601": "2020-04-22T16:31:55.768936Z", "url": "https://files.pythonhosted.org/packages/45/13/2283079ef5be9f0eeb12d7e82869497e4ed65aded9a593bc4e420c68ffd8/pybrake-0.4.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:02 2020"}