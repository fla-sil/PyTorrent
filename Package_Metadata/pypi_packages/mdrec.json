{"info": {"author": "knknkn1162", "author_email": "knknkn1162@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: IPython", "Programming Language :: Python :: 3 :: Only"], "description": "# MDRec : Markdown Recorder from python\n\n[![Current version on PyPI](http://img.shields.io/pypi/v/mdrec.svg)](PyPI)\n[![MIT License](http://img.shields.io/badge/license-MIT-blue.svg?style=flat)](LICENSE)\n\nMDRec creates markdown file easily from python object.\nYou can also convert this to html file at once.\n\n\n## Installation\n\n```bash\npip install mdrec\n```\n\n## Example\n\nHere is example code, output result and raw_file respectively.\n\n### Code\n\n```python\nfrom mdrec import MDRec\n\nsave_file = \"./out/test_txt.md\"\n# set markdown file. (You may also try not to set this option.)\nr = MDRec(save_file=save_file)\n\n# suppoort header. write \"#### testtest\\n\\n\" in designated save_file.\nr.rec(\"testtest\", h=4)\n\n# plain txt\nr.rec(\"this is example below\")\n\n# express itemization via Iterable object\nr.rec([1,2,3])\n\n# draw vertical line\nr.line()\n\n# support ja\nr.rec([\"\u3042\", \"\u3044\", \"\u3046\", {\"\u3048\" : \"\u304a\"}])\n\n# you should draw a vertical line explicitly\nr.line()\n\n# support nested list, dict or Iterable. \nr.rec([1,[1,2],[2,[3],4], [{\"a\": 100, \"b\": 234}], {\"c\" : [3,4,5]}])\n\n## support quote\nr.increase_quote_level()\n## If you set raw option to be False, suppress markdown output in jupyter notebook.\nr.rec(\"testtest\", h=2, raw=False)\n\nr.increase_quote_level()\nr.rec([\"z\", 'x'])\n\nr.reset_quote_level()\n\nfrom pandas import DataFrame\n# support DataFrame or Series ((NOT support list of list)\ndf = DataFrame([[12, 2, 4, 3], [3, 3, 3, 4]], columns=list(\"abcd\"), index=[\"AB\", \"BB\"])\n\n# display table with title\nr.rec(df, title=\"test\", h=3)\n\n# set link. support both url and local file path.\nr.link(src=\"./test01.png\", title=\"test\", text=\"sample\")\n\n# image link with markdown syntax. To display image in jupyter notebook syncronously, set copy_sync=True\nr.img(src=\"./test01.png\", title=\"test\", text=\"sample\", copy_sync=True)\n\n# export markdown file to html via github API. (You can set your username and password in ~/.grip/settings.py.)\nr.to_html()\n```\n\n### Output\n\n`<start>`\n\n#### testtest\n\nthis is example below\n\n- 1\n- 2\n- 3\n\n---\n\n- \u3042\n- \u3044\n- \u3046\n- \u3048: \u304a\n\n---\n\n- 1\n- - 1\n  - 2\n- - 2\n  - - 3\n  - 4\n- - a: 100\n    b: 234\n- c:\n  - 3\n  - 4\n  - 5\n\n> ## testtest\n> \n>> - z\n>> - x\n>> \n### test\n|   |  a  |  b  |  c  |  d  |\n|---|----:|----:|----:|----:|\n|AB |   12|    2|    4|    3|\n|BB |    3|    3|    3|    4|\n\n\n[sample](../test01.png \"test\")\n\n![sample](img/test01.png \"test\")\n\n\n\n`<end>`\n\n### Raw \n\n```markdown\n#### testtest\n\nthis is example below\n\n- 1\n- 2\n- 3\n\n---\n\n- \u3042\n- \u3044\n- \u3046\n- \u3048: \u304a\n\n---\n\n- 1\n- - 1\n  - 2\n- - 2\n  - - 3\n  - 4\n- - a: 100\n    b: 234\n- c:\n  - 3\n  - 4\n  - 5\n\n> ## testtest\n> \n>> - z\n>> - x\n>> \n### test\n|   |  a  |  b  |  c  |  d  |\n|---|----:|----:|----:|----:|\n|AB |   12|    2|    4|    3|\n|BB |    3|    3|    3|    4|\n\n\n[sample](../test01.png \"test\")\n\n![sample](img/test01.png \"test\")\n```\n\n## Usage\n\n+ By default, results are also displayed in jupyter notebook, so if you switch off the option, let `r.rec(obj, raw=False)`.\n\n## Configuration\n\n+ If you use `MDRec.to_html`, note that this call [Grip](https://github.com/joeyespo/grip) and github API implicitly. To set github username and password, see the link, https://github.com/joeyespo/grip#configuration.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/knknkn1162/mdrec", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mdrec", "package_url": "https://pypi.org/project/mdrec/", "platform": "", "project_url": "https://pypi.org/project/mdrec/", "project_urls": {"Homepage": "https://github.com/knknkn1162/mdrec"}, "release_url": "https://pypi.org/project/mdrec/0.1.1/", "requires_dist": ["pandas", "grip", "pytablewriter", "ipython", "pyyaml"], "requires_python": "", "summary": "record python object to markdown file & convert to html.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # MDRec : Markdown Recorder from python<br><br>[![Current version on PyPI](http://img.shields.io/pypi/v/mdrec.svg)](PyPI)<br>[![MIT License](http://img.shields.io/badge/license-MIT-blue.svg?style=flat)](LICENSE)<br><br>MDRec creates markdown file easily from python object.<br>You can also convert this to html file at once.<br><br><br>## Installation<br><br>```bash<br>pip install mdrec<br>```<br><br>## Example<br><br>Here is example code, output result and raw_file respectively.<br><br>### Code<br><br>```python<br>from mdrec import MDRec<br><br>save_file = \"./out/test_txt.md\"<br># set markdown file. (You may also try not to set this option.)<br>r = MDRec(save_file=save_file)<br><br># suppoort header. write \"#### testtest\\n\\n\" in designated save_file.<br>r.rec(\"testtest\", h=4)<br><br># plain txt<br>r.rec(\"this is example below\")<br><br># express itemization via Iterable object<br>r.rec([1,2,3])<br><br># draw vertical line<br>r.line()<br><br># support ja<br>r.rec([\"\u3042\", \"\u3044\", \"\u3046\", {\"\u3048\" : \"\u304a\"}])<br><br># you should draw a vertical line explicitly<br>r.line()<br><br># support nested list, dict or Iterable. <br>r.rec([1,[1,2],[2,[3],4], [{\"a\": 100, \"b\": 234}], {\"c\" : [3,4,5]}])<br><br>## support quote<br>r.increase_quote_level()<br>## If you set raw option to be False, suppress markdown output in jupyter notebook.<br>r.rec(\"testtest\", h=2, raw=False)<br><br>r.increase_quote_level()<br>r.rec([\"z\", 'x'])<br><br>r.reset_quote_level()<br><br>from pandas import DataFrame<br># support DataFrame or Series ((NOT support list of list)<br>df = DataFrame([[12, 2, 4, 3], [3, 3, 3, 4]], columns=list(\"abcd\"), index=[\"AB\", \"BB\"])<br><br># display table with title<br>r.rec(df, title=\"test\", h=3)<br><br># set link. support both url and local file path.<br>r.link(src=\"./test01.png\", title=\"test\", text=\"sample\")<br><br># image link with markdown syntax. To display image in jupyter notebook syncronously, set copy_sync=True<br>r.img(src=\"./test01.png\", title=\"test\", text=\"sample\", copy_sync=True)<br><br># export markdown file to html via github API. (You can set your username and password in ~/.grip/settings.py.)<br>r.to_html()<br>```<br><br>### Output<br><br>`&lt;start&gt;`<br><br>#### testtest<br><br>this is example below<br><br>- 1<br>- 2<br>- 3<br><br>---<br><br>- \u3042<br>- \u3044<br>- \u3046<br>- \u3048: \u304a<br><br>---<br><br>- 1<br>- - 1<br>  - 2<br>- - 2<br>  - - 3<br>  - 4<br>- - a: 100<br>    b: 234<br>- c:<br>  - 3<br>  - 4<br>  - 5<br><br>&gt; ## testtest<br>&gt; <br>&gt;&gt; - z<br>&gt;&gt; - x<br>&gt;&gt; <br>### test<br>|   |  a  |  b  |  c  |  d  |<br>|---|----:|----:|----:|----:|<br>|AB |   12|    2|    4|    3|<br>|BB |    3|    3|    3|    4|<br><br><br>[sample](../test01.png \"test\")<br><br>![sample](img/test01.png \"test\")<br><br><br><br>`&lt;end&gt;`<br><br>### Raw <br><br>```markdown<br>#### testtest<br><br>this is example below<br><br>- 1<br>- 2<br>- 3<br><br>---<br><br>- \u3042<br>- \u3044<br>- \u3046<br>- \u3048: \u304a<br><br>---<br><br>- 1<br>- - 1<br>  - 2<br>- - 2<br>  - - 3<br>  - 4<br>- - a: 100<br>    b: 234<br>- c:<br>  - 3<br>  - 4<br>  - 5<br><br>&gt; ## testtest<br>&gt; <br>&gt;&gt; - z<br>&gt;&gt; - x<br>&gt;&gt; <br>### test<br>|   |  a  |  b  |  c  |  d  |<br>|---|----:|----:|----:|----:|<br>|AB |   12|    2|    4|    3|<br>|BB |    3|    3|    3|    4|<br><br><br>[sample](../test01.png \"test\")<br><br>![sample](img/test01.png \"test\")<br>```<br><br>## Usage<br><br>+ By default, results are also displayed in jupyter notebook, so if you switch off the option, let `r.rec(obj, raw=False)`.<br><br>## Configuration<br><br>+ If you use `MDRec.to_html`, note that this call [Grip](https://github.com/joeyespo/grip) and github API implicitly. To set github username and password, see the link, https://github.com/joeyespo/grip#configuration.<br><br><br>\n          </div>"}, "last_serial": 3216696, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "096a93e4889db7efe4e0f26ee1bbf0e0", "sha256": "f299a095ce2d2ea3ae8a8d455f64d911280e8e8e78644a5975875d625edaf33a"}, "downloads": -1, "filename": "mdrec-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "096a93e4889db7efe4e0f26ee1bbf0e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4597, "upload_time": "2017-10-01T08:12:23", "upload_time_iso_8601": "2017-10-01T08:12:23.838073Z", "url": "https://files.pythonhosted.org/packages/74/58/8e57b13a19601073e3213f7b16f10f4512b9b2f04bd3cf6167b9f21af58e/mdrec-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec246a3d60a7852fd9cdd102d0ea2068", "sha256": "deec986cc2afd7626a1372f1159e1dccd3d8e5ccbc6c1cfa3e0d2bc8aa326f1c"}, "downloads": -1, "filename": "mdrec-0.1.tar.gz", "has_sig": false, "md5_digest": "ec246a3d60a7852fd9cdd102d0ea2068", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2866, "upload_time": "2017-10-01T08:12:25", "upload_time_iso_8601": "2017-10-01T08:12:25.033657Z", "url": "https://files.pythonhosted.org/packages/dc/b4/66e7b2821ab6dcab54c743bffaa8c7d42a71a8e3281e7cd462c098577511/mdrec-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e37605d7bada269a49244332462f32a3", "sha256": "689eb4dcb95bbac655f7fdf3b9a85f12043379f947b548497cece4081e0cb7a4"}, "downloads": -1, "filename": "mdrec-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e37605d7bada269a49244332462f32a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7608, "upload_time": "2017-10-01T14:14:02", "upload_time_iso_8601": "2017-10-01T14:14:02.288174Z", "url": "https://files.pythonhosted.org/packages/93/04/f818508dafd50cf6c0a9f74f8c36e7e16c67f8d66d94b2810acc9f643ce8/mdrec-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75eb9a09394822f31750c9ad2a1ef247", "sha256": "3875091cb54c44755eb2f610a3248581d903d05e528f3ac5e500e208b245a8c7"}, "downloads": -1, "filename": "mdrec-0.1.1.tar.gz", "has_sig": false, "md5_digest": "75eb9a09394822f31750c9ad2a1ef247", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4640, "upload_time": "2017-10-01T14:14:05", "upload_time_iso_8601": "2017-10-01T14:14:05.083198Z", "url": "https://files.pythonhosted.org/packages/27/c5/a81856b5d0f20b0f7f2c7fe7d6661c05e137e2d054fd19207f736a3f7b8b/mdrec-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e37605d7bada269a49244332462f32a3", "sha256": "689eb4dcb95bbac655f7fdf3b9a85f12043379f947b548497cece4081e0cb7a4"}, "downloads": -1, "filename": "mdrec-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e37605d7bada269a49244332462f32a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7608, "upload_time": "2017-10-01T14:14:02", "upload_time_iso_8601": "2017-10-01T14:14:02.288174Z", "url": "https://files.pythonhosted.org/packages/93/04/f818508dafd50cf6c0a9f74f8c36e7e16c67f8d66d94b2810acc9f643ce8/mdrec-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75eb9a09394822f31750c9ad2a1ef247", "sha256": "3875091cb54c44755eb2f610a3248581d903d05e528f3ac5e500e208b245a8c7"}, "downloads": -1, "filename": "mdrec-0.1.1.tar.gz", "has_sig": false, "md5_digest": "75eb9a09394822f31750c9ad2a1ef247", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4640, "upload_time": "2017-10-01T14:14:05", "upload_time_iso_8601": "2017-10-01T14:14:05.083198Z", "url": "https://files.pythonhosted.org/packages/27/c5/a81856b5d0f20b0f7f2c7fe7d6661c05e137e2d054fd19207f736a3f7b8b/mdrec-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:48 2020"}