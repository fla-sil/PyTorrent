{"info": {"author": "Mathieu Pasquet", "author_email": "kiorky@cryptelium.net", "bugtrack_url": null, "classifiers": ["Framework :: Buildout", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "******************************************************************************\nRecipe for compiling and installing software with or without minitage\n******************************************************************************\n\n.. contents::\n\n=======================\nIntroduction\n=======================\n\nThe egg has those entry point:\n\n    - *wsgi*: Make a Python paste configuration file eatable by mod_wsgi with\n      all the eggs dependencies you need.\n\nYou can browse the code on minitage's following resources:\n\n    - http://git.minitage.org/git/minitage/eggs/minitage.recipe.wsgi/\n    - http://www.minitage.org/trac/browser/minitage/eggs/minitage.recipe.wsgi\n\n======================================\nMakina Corpus sponsored software\n======================================\n|makinacom|_\n\n* `Planet Makina Corpus <http://www.makina-corpus.org>`_\n* `Contact us <mailto:python@makina-corpus.org>`_\n\n  .. |makinacom| image:: http://depot.makina-corpus.org/public/logo.gif\n  .. _makinacom:  http://www.makina-corpus.com\n\n\n\n\n\n===============================================\nminitage.recipe.wsgi\n===============================================\n\nAbstract\n-----------------\n\n    - This recipe is inspired by collective.recipe.modwsgi but use\n      minitage code to generate  a wrapper to launch a paste configuration file, suitable for mod_mwsgi.\n    - This recipe inherit from minitage;recipe:egg.\n    - I recommend Spawning to be the WSGI server, but in the wonderful world of system administration, you\n      don't have always the choice of the final technology to use. This will help to to use mod_wsgi with\n      buildout based installations.\n\nSpecific options\n-----------------\n\n    * All the shared options and the options from minitage.recipe:egg +\n    * config-file\n        full path to the paste configuration file to use\n\n\nDetailled documentation\n-------------------------\n\nLet's create a buildout configuration file::\n\n    >>> rmdir(tempdir)\n    >>> mkdir(tempdir)\n    >>> cd(tempdir)\n    >>> a = [mkdir(d) for d in ('eggs', 'develop-eggs', 'bin', 'src')]\n    >>> install_develop_eggs(['minitage.recipe.wsgi'])\n    >>> install_eggs_from_pathes(['zc.buildout'], sys.path)\n    >>> touch('buildout.cfg')\n    >>> sh('buildout -o bootstrap')\n    buildout -o bootstrap...\n    >>> index_url = start_server(os.path.sep.join(tempdir))\n\nInitializing test env.\n+++++++++++++++++++++++\n::\n\n    >>> if os.path.exists('foo'): rmdir(foo)\n    >>> mkdir('foo')\n    >>> mkdir('foo/src/toto')\n    >>> touch('foo/setup.py', data=\"\"\"\n    ... from setuptools import setup, find_packages\n    ... setup(name='foo', version='1.0',\n    ...     packages=find_packages('src'),\n    ...     package_dir = {'': 'src'},\n    ...     include_package_data=True,\n    ...     scripts=['src/toto/toto.py'],\n    ...     entry_points={'console_scripts': ['s=toto.toto:f']},\n    ...     )\n    ... \"\"\")\n    >>> touch('foo/src/toto/__init__.py')\n    >>> touch('toto.cfg')\n    >>> touch('foo/src/toto/toto.py', data=\"\"\"\n    ... def f():\n    ...     print \"foo\"\n    ... if __name__ == '__main__' :\n    ...     print 'called'\n    ...\n    ... \"\"\")\n    >>> noecho = [os.remove(d) for d in os.listdir('.') if '.tar.gz' in d]\n    >>> os.chdir('foo')\n    >>> sh('python setup.py sdist')\n    p...\n    >>> noecho = [shutil.copy(os.path.join('dist', d), os.path.join('..', d)) for d in os.listdir('dist')]\n    >>> os.chdir('..')\n\nGenerating a mod_mwsgi friendly configuration\n+++++++++++++++++++++++++++++++++++++++++++++++++++\nDo not specify the file option.\n\n    >>> data = \"\"\"\n    ... [buildout]\n    ... download-cache=${buildout:directory}\n    ... parts = part\n    ... [part]\n    ... recipe=minitage.recipe.wsgi\n    ... config-file = toto.cfg\n    ... find-links=%(index)s\n    ... eggs=foo\n    ... \"\"\"%{'index': index_url}\n    >>> touch('buildout.cfg', data=data)\n    >>> sh('bin/buildout -vvvvv install')\n    b...\n    minitage.recipe: Generated script: '/tmp/buildout.test/parts/part/wsgi'...\n\n    >>> cat('parts', 'part', 'wsgi')\n    #!...\n    #!!! #GENERATED VIA MINITAGE.recipe !!!...\n    import sys\n    sys.path[0:0] = [ '/tmp/buildout.test/eggs/foo-1.0-py....egg', ]...\n    from paste.deploy import loadapp\n    application = loadapp(\"config:toto.cfg\")...\n\n\n=======================\nCHANGELOG\n=======================\n\n1.37 - \n------------------------\n\n        - fix dependencies (#1)\n\n1.35\n-----\n\n    - splitted out from minitage.recipe", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://cheeseshop.python.org/pypi/minitage.recipe.wsgi", "keywords": "development buildout recipe", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "minitage.recipe.wsgi", "package_url": "https://pypi.org/project/minitage.recipe.wsgi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/minitage.recipe.wsgi/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://cheeseshop.python.org/pypi/minitage.recipe.wsgi"}, "release_url": "https://pypi.org/project/minitage.recipe.wsgi/1.37/", "requires_dist": null, "requires_python": null, "summary": "zc.buildout recipes to compile and install software or python packages and generate scripts or configuration files sponsored by Makina Corpus.", "version": "1.37", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#introduction\" id=\"id3\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#makina-corpus-sponsored-software\" id=\"id4\" rel=\"nofollow\">Makina Corpus sponsored software</a></li>\n<li><a href=\"#minitage-recipe-wsgi\" id=\"id5\" rel=\"nofollow\">minitage.recipe.wsgi</a><ul>\n<li><a href=\"#abstract\" id=\"id6\" rel=\"nofollow\">Abstract</a></li>\n<li><a href=\"#specific-options\" id=\"id7\" rel=\"nofollow\">Specific options</a></li>\n<li><a href=\"#detailled-documentation\" id=\"id8\" rel=\"nofollow\">Detailled documentation</a><ul>\n<li><a href=\"#initializing-test-env\" id=\"id9\" rel=\"nofollow\">Initializing test env.</a></li>\n<li><a href=\"#generating-a-mod-mwsgi-friendly-configuration\" id=\"id10\" rel=\"nofollow\">Generating a mod_mwsgi friendly configuration</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#changelog\" id=\"id11\" rel=\"nofollow\">CHANGELOG</a><ul>\n<li><a href=\"#id1\" id=\"id12\" rel=\"nofollow\">1.37 -</a></li>\n<li><a href=\"#id2\" id=\"id13\" rel=\"nofollow\">1.35</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"introduction\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Introduction</a></h2>\n<p>The egg has those entry point:</p>\n<blockquote>\n<ul>\n<li><em>wsgi</em>: Make a Python paste configuration file eatable by mod_wsgi with\nall the eggs dependencies you need.</li>\n</ul>\n</blockquote>\n<p>You can browse the code on minitage\u2019s following resources:</p>\n<blockquote>\n<ul>\n<li><a href=\"http://git.minitage.org/git/minitage/eggs/minitage.recipe.wsgi/\" rel=\"nofollow\">http://git.minitage.org/git/minitage/eggs/minitage.recipe.wsgi/</a></li>\n<li><a href=\"http://www.minitage.org/trac/browser/minitage/eggs/minitage.recipe.wsgi\" rel=\"nofollow\">http://www.minitage.org/trac/browser/minitage/eggs/minitage.recipe.wsgi</a></li>\n</ul>\n</blockquote>\n</div>\n<div id=\"makina-corpus-sponsored-software\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Makina Corpus sponsored software</a></h2>\n<p><a href=\"http://www.makina-corpus.com\" rel=\"nofollow\"><img alt=\"makinacom\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2a7ff2c6fc5ab8cd2f425946f19dbfbf0aa4c1d7/687474703a2f2f6465706f742e6d616b696e612d636f727075732e6f72672f7075626c69632f6c6f676f2e676966\"></a></p>\n<ul>\n<li><a href=\"http://www.makina-corpus.org\" rel=\"nofollow\">Planet Makina Corpus</a></li>\n<li><a href=\"mailto:python%40makina-corpus.org\">Contact us</a></li>\n</ul>\n</div>\n<div id=\"minitage-recipe-wsgi\">\n<h2><a href=\"#id5\" rel=\"nofollow\">minitage.recipe.wsgi</a></h2>\n<div id=\"abstract\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Abstract</a></h3>\n<blockquote>\n<ul>\n<li>This recipe is inspired by collective.recipe.modwsgi but use\nminitage code to generate  a wrapper to launch a paste configuration file, suitable for mod_mwsgi.</li>\n<li>This recipe inherit from minitage;recipe:egg.</li>\n<li>I recommend Spawning to be the WSGI server, but in the wonderful world of system administration, you\ndon\u2019t have always the choice of the final technology to use. This will help to to use mod_wsgi with\nbuildout based installations.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"specific-options\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Specific options</a></h3>\n<blockquote>\n<ul>\n<li>All the shared options and the options from minitage.recipe:egg +</li>\n<li><dl>\n<dt>config-file</dt>\n<dd>full path to the paste configuration file to use</dd>\n</dl>\n</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"detailled-documentation\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Detailled documentation</a></h3>\n<p>Let\u2019s create a buildout configuration file:</p>\n<pre>&gt;&gt;&gt; rmdir(tempdir)\n&gt;&gt;&gt; mkdir(tempdir)\n&gt;&gt;&gt; cd(tempdir)\n&gt;&gt;&gt; a = [mkdir(d) for d in ('eggs', 'develop-eggs', 'bin', 'src')]\n&gt;&gt;&gt; install_develop_eggs(['minitage.recipe.wsgi'])\n&gt;&gt;&gt; install_eggs_from_pathes(['zc.buildout'], sys.path)\n&gt;&gt;&gt; touch('buildout.cfg')\n&gt;&gt;&gt; sh('buildout -o bootstrap')\nbuildout -o bootstrap...\n&gt;&gt;&gt; index_url = start_server(os.path.sep.join(tempdir))\n</pre>\n<div id=\"initializing-test-env\">\n<h4><a href=\"#id9\" rel=\"nofollow\">Initializing test env.</a></h4>\n<pre>&gt;&gt;&gt; if os.path.exists('foo'): rmdir(foo)\n&gt;&gt;&gt; mkdir('foo')\n&gt;&gt;&gt; mkdir('foo/src/toto')\n&gt;&gt;&gt; touch('foo/setup.py', data=\"\"\"\n... from setuptools import setup, find_packages\n... setup(name='foo', version='1.0',\n...     packages=find_packages('src'),\n...     package_dir = {'': 'src'},\n...     include_package_data=True,\n...     scripts=['src/toto/toto.py'],\n...     entry_points={'console_scripts': ['s=toto.toto:f']},\n...     )\n... \"\"\")\n&gt;&gt;&gt; touch('foo/src/toto/__init__.py')\n&gt;&gt;&gt; touch('toto.cfg')\n&gt;&gt;&gt; touch('foo/src/toto/toto.py', data=\"\"\"\n... def f():\n...     print \"foo\"\n... if __name__ == '__main__' :\n...     print 'called'\n...\n... \"\"\")\n&gt;&gt;&gt; noecho = [os.remove(d) for d in os.listdir('.') if '.tar.gz' in d]\n&gt;&gt;&gt; os.chdir('foo')\n&gt;&gt;&gt; sh('python setup.py sdist')\np...\n&gt;&gt;&gt; noecho = [shutil.copy(os.path.join('dist', d), os.path.join('..', d)) for d in os.listdir('dist')]\n&gt;&gt;&gt; os.chdir('..')\n</pre>\n</div>\n<div id=\"generating-a-mod-mwsgi-friendly-configuration\">\n<h4><a href=\"#id10\" rel=\"nofollow\">Generating a mod_mwsgi friendly configuration</a></h4>\n<p>Do not specify the file option.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; data = \"\"\"\n... [buildout]\n... download-cache=${buildout:directory}\n... parts = part\n... [part]\n... recipe=minitage.recipe.wsgi\n... config-file = toto.cfg\n... find-links=%(index)s\n... eggs=foo\n... \"\"\"%{'index': index_url}\n&gt;&gt;&gt; touch('buildout.cfg', data=data)\n&gt;&gt;&gt; sh('bin/buildout -vvvvv install')\nb...\nminitage.recipe: Generated script: '/tmp/buildout.test/parts/part/wsgi'...\n</pre>\n<pre>&gt;&gt;&gt; cat('parts', 'part', 'wsgi')\n#!...\n#!!! #GENERATED VIA MINITAGE.recipe !!!...\nimport sys\nsys.path[0:0] = [ '/tmp/buildout.test/eggs/foo-1.0-py....egg', ]...\nfrom paste.deploy import loadapp\napplication = loadapp(\"config:toto.cfg\")...\n</pre>\n</blockquote>\n</div>\n</div>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id11\" rel=\"nofollow\">CHANGELOG</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id12\" rel=\"nofollow\">1.37 -</a></h3>\n<blockquote>\n<ul>\n<li>fix dependencies (#1)</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id13\" rel=\"nofollow\">1.35</a></h3>\n<blockquote>\n<ul>\n<li>splitted out from minitage.recipe</li>\n</ul>\n</blockquote>\n</div>\n</div>\n\n          </div>"}, "last_serial": 794821, "releases": {"1.35": [{"comment_text": "", "digests": {"md5": "70fea71dfc4deb495b5665aae8a1e69a", "sha256": "9fe13f94d3c64deb6493006a484d9249b5c7ef33e503d0cfce85052e3e1775a0"}, "downloads": -1, "filename": "minitage.recipe.wsgi-1.35.zip", "has_sig": false, "md5_digest": "70fea71dfc4deb495b5665aae8a1e69a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16912, "upload_time": "2009-08-27T21:11:05", "upload_time_iso_8601": "2009-08-27T21:11:05.053359Z", "url": "https://files.pythonhosted.org/packages/06/d8/a03845359cb57f460f1588b32203e74f7834fe7bb388328180bd8cd06ad9/minitage.recipe.wsgi-1.35.zip", "yanked": false}], "1.36": [{"comment_text": "", "digests": {"md5": "d81d2068ee46f4905c61946065f3e5e6", "sha256": "445dc40a4b52f07743ac4bdc975ffba41e5bbe0ec65d4c05391c8a9f15c64611"}, "downloads": -1, "filename": "minitage.recipe.wsgi-1.36.zip", "has_sig": false, "md5_digest": "d81d2068ee46f4905c61946065f3e5e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18656, "upload_time": "2009-11-20T09:24:37", "upload_time_iso_8601": "2009-11-20T09:24:37.902659Z", "url": "https://files.pythonhosted.org/packages/61/8e/9355b7715de39fb1c030ace6b69028c7f514c64dd3c559466666e40c72bb/minitage.recipe.wsgi-1.36.zip", "yanked": false}], "1.37": [{"comment_text": "", "digests": {"md5": "ea717e0114f9e2e92a8368db8cbb9691", "sha256": "4d5d8708c6fd2a06c6952bdd927211b2956cc402a6cc1ce698f7d0d891aa6b1a"}, "downloads": -1, "filename": "minitage.recipe.wsgi-1.37.tar.gz", "has_sig": false, "md5_digest": "ea717e0114f9e2e92a8368db8cbb9691", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10534, "upload_time": "2011-02-21T16:47:44", "upload_time_iso_8601": "2011-02-21T16:47:44.774435Z", "url": "https://files.pythonhosted.org/packages/2b/d9/61335bc8b4e339f1aa27a2d3ca2858b0ea68dba1b0fd135b21537e6a85c7/minitage.recipe.wsgi-1.37.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ea717e0114f9e2e92a8368db8cbb9691", "sha256": "4d5d8708c6fd2a06c6952bdd927211b2956cc402a6cc1ce698f7d0d891aa6b1a"}, "downloads": -1, "filename": "minitage.recipe.wsgi-1.37.tar.gz", "has_sig": false, "md5_digest": "ea717e0114f9e2e92a8368db8cbb9691", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10534, "upload_time": "2011-02-21T16:47:44", "upload_time_iso_8601": "2011-02-21T16:47:44.774435Z", "url": "https://files.pythonhosted.org/packages/2b/d9/61335bc8b4e339f1aa27a2d3ca2858b0ea68dba1b0fd135b21537e6a85c7/minitage.recipe.wsgi-1.37.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:17 2020"}