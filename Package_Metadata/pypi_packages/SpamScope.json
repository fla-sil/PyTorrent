{"info": {"author": "Fedele Mantuano", "author_email": "mantuano.fedele@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "`PyPI version <https://badge.fury.io/py/SpamScope>`__ `Build\nStatus <https://travis-ci.org/SpamScope/spamscope>`__ `Coverage\nStatus <https://coveralls.io/github/SpamScope/spamscope?branch=develop>`__\n`BCH compliance <https://bettercodehub.com/>`__\n\n.. figure:: https://raw.githubusercontent.com/SpamScope/spamscope/develop/docs/logo/spamscope.png\n   :alt: SpamScope\n\n   SpamScope\n\nOverview\n========\n\nSpamScope is an advanced spam analysis tool that use `Apache\nStorm <http://storm.apache.org/>`__ with\n`streamparse <https://github.com/Parsely/streamparse>`__ to process a\nstream of mails. To understand how SpamScope works, I suggest to read\nthese overviews: - `Apache Storm\nConcepts <http://storm.apache.org/releases/1.2.1/Concepts.html>`__ -\n`Streamparse\nQuickstart <http://streamparse.readthedocs.io/en/stable/quickstart.html>`__\n\nIn general the first step is run Apache Storm, then you can run the\ntopologies on it. SpamScope has some topologies in `topologies\nfolder <./topologies/>`__, but you can make others topologies.\n\n.. figure:: docs/images/schema_topology.png?raw=true\n   :alt: Schema topology\n\n   Schema topology\n\nWhat Does SpamScope do?\n=======================\n\nSpamScope gets the raw emails (both RFC822 and Outlook formats) in input\nand returns an JSON object. Then it extracts urls and attachments (if\nthey are zipped extracts the content files). All informations are saved\nin JSON objects. This is the first analysis. After that SpamScope runs a\n*phishing* module, that gives a *phishing score* to the emails.\n\nThen you can enable/disable post processing modules, that connect\nSpamScope with third party tools. There are three main categories: - raw\nemails analysis - attachments analysis - sender emails analysis\n\nIt\u2019s possible to add new modules in these three categories, if you want\nconnect SpamScope with others tools.\n\nRaw emails analysis\n-------------------\n\nThese modules (see `here <./src/modules/mails>`__) analyze the raw\nemails: - SMTP dialect - SpamAssassin\n\nAttachments analysis\n--------------------\n\nThese modules (see `here <./src/modules/attachments>`__) analyze the\nattachments of emails: - Apache Tika - Store sample on disk (as default\nSpamScope saves samples in JSON objects) - Thug - VirusTotal - Zemana\n\nSender emails analysis\n----------------------\n\nSpamScope can detects the exact sender IP and then it can analyze it\n(see `here <./src/modules/networks>`__): - Shodan - VirusTotal\n\nWhy should I use SpamScope\n==========================\n\n-  It\u2019s very fast: the job is splitted in functionalities that work in\n   parallel.\n-  It\u2019s flexible: you can choose what SpamScope has to do.\n-  It\u2019s distributed: SpamScope uses Apache Storm, free and open source\n   distributed realtime computation system.\n-  It makes JSON output that you can save where you want.\n-  It\u2019s easy to setup: there are docker images and docker-compose ready\n   for use.\n-  It\u2019s integrated with Apache Tika, VirusTotal, Thug, Shodan and\n   SpamAssassin (for now).\n-  It\u2019s free and open source (for special functions you can contact me).\n-  It can analyze Outlook msg.\n\nDistributed\n-----------\n\nSpamScope uses Apache Storm that allows you to start small and scale\nhorizontally as you grow. Simply add more workers.\n\nFlexibility\n-----------\n\nYou can choose your mails input sources (with **spouts**) and your\nfunctionalities (with **bolts**).\n\nSpamScope comes with the following bolts: - **tokenizer** splits mail in\ntoken like headers, body, attachments and it can filter emails,\nattachments and ip addresses already seen - **phishing** looks for your\nkeywords in email and connects email to targets (bank, your customers,\netc.) - **raw_mail** is for all third party tools that analyze raw mails\nlike SpamAssassin - **attachments** analyzes all mail attachments and\nuses third party tools like VirusTotal - **network** analyzes all sender\nip addresses with third party tools like Shodan - **urls** extracts all\nurls in email and attachments - **json_maker** and **outputs** make the\njson report and save it\n\nStore where you want\n--------------------\n\nYou can build your custom output bolts and store your data in\nElasticsearch, MongoDB, filesystem, etc.\n\nBuild your topology\n-------------------\n\nWith streamparse tecnology you can build your topology in Python, add\nand/or remove spouts and bolts.\n\nAPI\n---\n\nFor now SpamScope doesn\u2019t have its own API, because it isn\u2019t tied to any\ntecnology. If you use ``Redis`` as spout (input), you\u2019ll use Redis API\nto put mails in topology. If you use ``Elasticsearch`` as output, you\u2019ll\nuse Elasticsearch API to get results.\n\nIt\u2019s possible to develop a middleware API that it talks with input,\noutput and changes the configuration, but now there isn\u2019t.\n\nApache 2 Open Source License\n============================\n\nSpamScope can be downloaded, used, and modified free of charge. It is\navailable under the Apache 2 license.\n\n`Donate <https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=VEPXYP745KJF2>`__\n\nSpamScope on Web\n================\n\n-  `Shodan Applications &\n   Integrations <https://developer.shodan.io/apps>`__\n-  `The Honeynet Project <http://honeynet.org/node/1329>`__\n-  `securityonline.info <http://securityonline.info/pcileech-direct-memory-access-dma-attack-software/>`__\n-  `jekil/awesome-hacking <https://github.com/jekil/awesome-hacking>`__\n-  `Linux Security\n   Expert <https://linuxsecurity.expert/tools/spamscope/>`__\n\nAuthors\n=======\n\nMain Author\n-----------\n\nFedele Mantuano (**LinkedIn**: `Fedele\nMantuano <https://www.linkedin.com/in/fmantuano/>`__)\n\nRequirements\n============\n\nFor operating system requirements you can read `Ansible\nplaybooks <./ansible>`__, that go into details.\n\nFor Python requirements you can read: \\* `mandatory\nrequirements <./requirements.txt>`__ \\* `optional\nrequirements <./requirements_optional.txt>`__\n\n*Thug* is another optional requirement, that it\u2019s not in requirements.\nSee `Thug section <#thug-optional>`__ for more details.\n\nApache Storm\n------------\n\n`Apache Storm <http://storm.apache.org/>`__ is a free and open source\ndistributed realtime computation system.\n\nstreamparse\n-----------\n\n`streamparse <https://github.com/Parsely/streamparse>`__ lets you run\nPython code against real-time streams of data via Apache Storm.\n\nmail-parser\n-----------\n\n`mail-parser <https://github.com/SpamScope/mail-parser>`__ is the\nparsing for raw email of SpamScope.\n\nFaup\n----\n\n`Faup <https://github.com/stricaud/faup>`__ stands for Finally An Url\nParser and is a library and command line tool to parse URLs and\nnormalize fields.\n\nrarlinux (optional)\n-------------------\n\n`rarlinux <https://www.rarlab.com/>`__ unarchives rar file.\n\nSpamAssassin (optional)\n-----------------------\n\nSpamScope can use `SpamAssassin <http://spamassassin.apache.org/>`__ an\nopen source anti-spam to analyze every mails.\n\nApache Tika (optional)\n----------------------\n\nSpamScope can use `Apache Tika <https://tika.apache.org/>`__ to parse\nevery attachments. The Apache Tika toolkit detects and extracts metadata\nand text from over a thousand different file types (such as PPT, XLS,\nand PDF). To use Apache Tika in SpamScope you must install\n`tika-app-python <https://github.com/fedelemantuano/tika-app-python>`__\nwith ``pip`` and `Apache\nTika <https://tika.apache.org/download.html>`__.\n\nThug (optional)\n---------------\n\nFrom release v1.3 SpamScope can analyze Javascript and HTML attachments\nwith `Thug <https://github.com/buffer/thug>`__. If you want to analyze\nthe attachments with Thug, follow `these\ninstructions <http://buffer.github.io/thug/doc/build.html>`__ to install\nit. Enable it in ``attachments`` section of `main configuration\nfile <./conf/spamscope.example.yml>`__.\n\nWhat is Thug? From README project: > Thug is a Python low-interaction\nhoneyclient aimed at mimicing the behavior of a web browser in order to\ndetect and emulate malicious contents.\n\nYou can see a complete SpamScope report with Thug analysis\n`here <https://goo.gl/Y4kWCv>`__.\n\nThug analysis can be very slow and you can have ``heartbeat timeout``\nerrors in Apache Storm. To avoid any issue set\n``supervisor.worker.timeout.secs``:\n\n::\n\n   nr. user agents * timeout_thug < supervisor.worker.timeout.secs\n\nThe best value for ``threshold`` is 1.\n\nVirusTotal (optional)\n---------------------\n\nIt\u2019s possible add to results (for mail attachments and sender ip\naddress) the VirusTotal report. You need a private API key.\n\nShodan (optional)\n-----------------\n\nIt\u2019s possible add to results the Shodan report for sender ip address.\nYou need a private API key.\n\nElasticsearch (optional)\n------------------------\n\nIt\u2019s possible to store the results in Elasticsearch. In this case you\nshould install ``elasticsearch`` package.\n\nRedis (optional)\n----------------\n\nIt\u2019s possible to store the results in Redis. In this case you should\ninstall ``redis`` package.\n\nConfiguration\n=============\n\nRead the `example of main configuration\nfile <./conf/spamscope.example.yml>`__. The default value where\nSpamScope will search the configuration file is\n``/etc/spamscope/spamscope.yml``, but it\u2019s possible to set the\nenvironment variable ``SPAMSCOPE_CONF_FILE``:\n\n::\n\n   $ export SPAMSCOPE_CONF_FILE=/etc/spamscope/spamscope.yml\n\nWhen you change the configuration file, SpamScope automatically reloads\nthe new changes.\n\nInstallation\n============\n\nYou can use: \\* `Docker images <./docker/README.md>`__ to run SpamScope\nwith docker engine \\* `Ansible <./ansible/README.md>`__: to install and\nrun SpamScope on server\n\nTopologies\n==========\n\nSpamScope comes with six topologies: -\n`spamscope_debug <./topologies/spamscope_debug.py>`__: the output are\nJSON files on file system. -\n`spamscope_elasticsearch <./topologies/spamscope_elasticsearch.py>`__:\nthe output are stored in Elasticsearch indexes. -\n`spamscope_redis <./topologies/spamscope_redis.py>`__: the output are\nstored in Redis. -\n`spamscope_debug_iter <./topologies/spamscope_debug_iter.py>`__: It uses\ngenerator to send mails in topology. The output are JSON files on file\nsystem. -\n`spamscope_elasticsearch_iter <./topologies/spamscope_elasticsearch_iter.py>`__:\nIt uses generator to send mails in topology. The output are stored in\nElasticsearch indexes. -\n`spamscope_redis_iter <./topologies/spamscope_redis_iter.py>`__: It uses\ngenerator to send mails in topology. The output are stored in Redis.\n\nIf you want submit SpamScope topology use ``spamscope-topology submit``\ntool. For more details `see SpamScope cli tools <src/cli/README.md>`__:\n\n::\n\n   $ spamscope-topology submit --topology {spamscope_debug,spamscope_elasticsearch,spamscope_redis}\n\nIt\u2019s possible to change the default settings for all Apache Storm\noptions. I suggest to change these options:\n\n-  **topology.tick.tuple.freq.secs**: reload configuration of all bolts\n-  **topology.max.spout.pending**: Apache Storm framework will then\n   throttle your spout as needed to meet the\n   ``topology.max.spout.pending`` requirement\n-  **topology.sleep.spout.wait.strategy.time.ms**: max sleep for emit\n   new tuple (mail)\n\nYou can use ``spamscope-topology submit`` to do these changes.\n\nImportant\n=========\n\nIf you are using Elasticsearch output, I suggest you to use\n`Elasticsearch templates <./conf/templates>`__ that comes with\nSpamScope.\n\nUnittest\n========\n\nSpamScope comes with unittests for each modules. In bolts and spouts\nthere are no special features, all intelligence is in external modules.\nAll unittests are in `tests folder <tests/>`__.\n\nTo have complete tests you should set the followings enviroment\nvariables:\n\n::\n\n   $ export THUG_ENABLED=True\n   $ export VIRUSTOTAL_ENABLED=True\n   $ export VIRUSTOTAL_APIKEY=\"your key\"\n   $ export ZEMANA_ENABLED=True\n   $ export ZEMANA_APIKEY=\"your key\"\n   $ export ZEMANA_PARTNERID=\"your partner id\"\n   $ export ZEMANA_USERID=\"your userid\"\n   $ export SHODAN_ENABLED=True\n   $ export SHODAN_APIKEY=\"your key\"\n   $ export SPAMASSASSIN_ENABLED=True\n\nOutput example\n==============\n\nThis is a `raw email <https://goo.gl/wMBfbF>`__ that I analyzed with\nSpamScope: - `SpamScope output <https://goo.gl/fr4i7C>`__.\n\nThis is another example with `Thug analysis <https://goo.gl/Y4kWCv>`__.\n\nScreenshots\n===========\n\n.. figure:: docs/images/Docker00.png?raw=true\n   :alt: Apache Storm\n\n   Apache Storm\n\n.. figure:: docs/images/Docker01.png?raw=true\n   :alt: SpamScope\n\n   SpamScope\n\n.. figure:: docs/images/Docker02.png?raw=true\n   :alt: SpamScope Topology\n\n   SpamScope Topology\n\n.. figure:: docs/images/map.png?raw=true\n   :alt: SpamScope Map\n\n   SpamScope Map\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SpamScope/spamscope", "keywords": "spam,email,mail,apache,apache-storm", "license": "Apache License, Version 2.0", "maintainer": "Fedele Mantuano", "maintainer_email": "mantuano.fedele@gmail.com", "name": "SpamScope", "package_url": "https://pypi.org/project/SpamScope/", "platform": "Linux", "project_url": "https://pypi.org/project/SpamScope/", "project_urls": {"Homepage": "https://github.com/SpamScope/spamscope"}, "release_url": "https://pypi.org/project/SpamScope/2.8.1/", "requires_dist": ["PyYAML", "astropy (==1.3.3)", "backports.functools-lru-cache (>=1.3)", "chainmap", "lxml", "mail-parser (>=3.9.0)", "patool", "pyparsing", "python-magic", "simplejson", "six", "ssdeep", "streamparse (==3.15.1)"], "requires_python": "", "summary": "Fast Advanced Spam Analysis tool", "version": "2.8.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://badge.fury.io/py/SpamScope\" rel=\"nofollow\">PyPI version</a> <a href=\"https://travis-ci.org/SpamScope/spamscope\" rel=\"nofollow\">Build\nStatus</a> <a href=\"https://coveralls.io/github/SpamScope/spamscope?branch=develop\" rel=\"nofollow\">Coverage\nStatus</a>\n<a href=\"https://bettercodehub.com/\" rel=\"nofollow\">BCH compliance</a></p>\n<div>\n<img alt=\"SpamScope\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/da0d21ba0a05c638f00a234d2eb2185e7576db17/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f5370616d53636f70652f7370616d73636f70652f646576656c6f702f646f63732f6c6f676f2f7370616d73636f70652e706e67\">\n<p>SpamScope</p>\n</div>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>SpamScope is an advanced spam analysis tool that use <a href=\"http://storm.apache.org/\" rel=\"nofollow\">Apache\nStorm</a> with\n<a href=\"https://github.com/Parsely/streamparse\" rel=\"nofollow\">streamparse</a> to process a\nstream of mails. To understand how SpamScope works, I suggest to read\nthese overviews: - <a href=\"http://storm.apache.org/releases/1.2.1/Concepts.html\" rel=\"nofollow\">Apache Storm\nConcepts</a> -\n<a href=\"http://streamparse.readthedocs.io/en/stable/quickstart.html\" rel=\"nofollow\">Streamparse\nQuickstart</a></p>\n<p>In general the first step is run Apache Storm, then you can run the\ntopologies on it. SpamScope has some topologies in <a href=\"./topologies/\" rel=\"nofollow\">topologies\nfolder</a>, but you can make others topologies.</p>\n<div>\n<img alt=\"Schema topology\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/240cb1dfd3f923a83bb7f257f1bfaf79af584c9f/646f63732f696d616765732f736368656d615f746f706f6c6f67792e706e673f7261773d74727565\">\n<p>Schema topology</p>\n</div>\n</div>\n<div id=\"what-does-spamscope-do\">\n<h2>What Does SpamScope do?</h2>\n<p>SpamScope gets the raw emails (both RFC822 and Outlook formats) in input\nand returns an JSON object. Then it extracts urls and attachments (if\nthey are zipped extracts the content files). All informations are saved\nin JSON objects. This is the first analysis. After that SpamScope runs a\n<em>phishing</em> module, that gives a <em>phishing score</em> to the emails.</p>\n<p>Then you can enable/disable post processing modules, that connect\nSpamScope with third party tools. There are three main categories: - raw\nemails analysis - attachments analysis - sender emails analysis</p>\n<p>It\u2019s possible to add new modules in these three categories, if you want\nconnect SpamScope with others tools.</p>\n<div id=\"raw-emails-analysis\">\n<h3>Raw emails analysis</h3>\n<p>These modules (see <a href=\"./src/modules/mails\" rel=\"nofollow\">here</a>) analyze the raw\nemails: - SMTP dialect - SpamAssassin</p>\n</div>\n<div id=\"attachments-analysis\">\n<h3>Attachments analysis</h3>\n<p>These modules (see <a href=\"./src/modules/attachments\" rel=\"nofollow\">here</a>) analyze the\nattachments of emails: - Apache Tika - Store sample on disk (as default\nSpamScope saves samples in JSON objects) - Thug - VirusTotal - Zemana</p>\n</div>\n<div id=\"sender-emails-analysis\">\n<h3>Sender emails analysis</h3>\n<p>SpamScope can detects the exact sender IP and then it can analyze it\n(see <a href=\"./src/modules/networks\" rel=\"nofollow\">here</a>): - Shodan - VirusTotal</p>\n</div>\n</div>\n<div id=\"why-should-i-use-spamscope\">\n<h2>Why should I use SpamScope</h2>\n<ul>\n<li>It\u2019s very fast: the job is splitted in functionalities that work in\nparallel.</li>\n<li>It\u2019s flexible: you can choose what SpamScope has to do.</li>\n<li>It\u2019s distributed: SpamScope uses Apache Storm, free and open source\ndistributed realtime computation system.</li>\n<li>It makes JSON output that you can save where you want.</li>\n<li>It\u2019s easy to setup: there are docker images and docker-compose ready\nfor use.</li>\n<li>It\u2019s integrated with Apache Tika, VirusTotal, Thug, Shodan and\nSpamAssassin (for now).</li>\n<li>It\u2019s free and open source (for special functions you can contact me).</li>\n<li>It can analyze Outlook msg.</li>\n</ul>\n<div id=\"distributed\">\n<h3>Distributed</h3>\n<p>SpamScope uses Apache Storm that allows you to start small and scale\nhorizontally as you grow. Simply add more workers.</p>\n</div>\n<div id=\"flexibility\">\n<h3>Flexibility</h3>\n<p>You can choose your mails input sources (with <strong>spouts</strong>) and your\nfunctionalities (with <strong>bolts</strong>).</p>\n<p>SpamScope comes with the following bolts: - <strong>tokenizer</strong> splits mail in\ntoken like headers, body, attachments and it can filter emails,\nattachments and ip addresses already seen - <strong>phishing</strong> looks for your\nkeywords in email and connects email to targets (bank, your customers,\netc.) - <strong>raw_mail</strong> is for all third party tools that analyze raw mails\nlike SpamAssassin - <strong>attachments</strong> analyzes all mail attachments and\nuses third party tools like VirusTotal - <strong>network</strong> analyzes all sender\nip addresses with third party tools like Shodan - <strong>urls</strong> extracts all\nurls in email and attachments - <strong>json_maker</strong> and <strong>outputs</strong> make the\njson report and save it</p>\n</div>\n<div id=\"store-where-you-want\">\n<h3>Store where you want</h3>\n<p>You can build your custom output bolts and store your data in\nElasticsearch, MongoDB, filesystem, etc.</p>\n</div>\n<div id=\"build-your-topology\">\n<h3>Build your topology</h3>\n<p>With streamparse tecnology you can build your topology in Python, add\nand/or remove spouts and bolts.</p>\n</div>\n<div id=\"api\">\n<h3>API</h3>\n<p>For now SpamScope doesn\u2019t have its own API, because it isn\u2019t tied to any\ntecnology. If you use <tt>Redis</tt> as spout (input), you\u2019ll use Redis API\nto put mails in topology. If you use <tt>Elasticsearch</tt> as output, you\u2019ll\nuse Elasticsearch API to get results.</p>\n<p>It\u2019s possible to develop a middleware API that it talks with input,\noutput and changes the configuration, but now there isn\u2019t.</p>\n</div>\n</div>\n<div id=\"apache-2-open-source-license\">\n<h2>Apache 2 Open Source License</h2>\n<p>SpamScope can be downloaded, used, and modified free of charge. It is\navailable under the Apache 2 license.</p>\n<p><a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=VEPXYP745KJF2\" rel=\"nofollow\">Donate</a></p>\n</div>\n<div id=\"spamscope-on-web\">\n<h2>SpamScope on Web</h2>\n<ul>\n<li><a href=\"https://developer.shodan.io/apps\" rel=\"nofollow\">Shodan Applications &amp;\nIntegrations</a></li>\n<li><a href=\"http://honeynet.org/node/1329\" rel=\"nofollow\">The Honeynet Project</a></li>\n<li><a href=\"http://securityonline.info/pcileech-direct-memory-access-dma-attack-software/\" rel=\"nofollow\">securityonline.info</a></li>\n<li><a href=\"https://github.com/jekil/awesome-hacking\" rel=\"nofollow\">jekil/awesome-hacking</a></li>\n<li><a href=\"https://linuxsecurity.expert/tools/spamscope/\" rel=\"nofollow\">Linux Security\nExpert</a></li>\n</ul>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<h2 id=\"main-author\"><span class=\"section-subtitle\">Main Author</span></h2>\n<p>Fedele Mantuano (<strong>LinkedIn</strong>: <a href=\"https://www.linkedin.com/in/fmantuano/\" rel=\"nofollow\">Fedele\nMantuano</a>)</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>For operating system requirements you can read <a href=\"./ansible\" rel=\"nofollow\">Ansible\nplaybooks</a>, that go into details.</p>\n<p>For Python requirements you can read: * <a href=\"./requirements.txt\" rel=\"nofollow\">mandatory\nrequirements</a> * <a href=\"./requirements_optional.txt\" rel=\"nofollow\">optional\nrequirements</a></p>\n<p><em>Thug</em> is another optional requirement, that it\u2019s not in requirements.\nSee <a href=\"#thug-optional\" rel=\"nofollow\">Thug section</a> for more details.</p>\n<div id=\"apache-storm\">\n<h3>Apache Storm</h3>\n<p><a href=\"http://storm.apache.org/\" rel=\"nofollow\">Apache Storm</a> is a free and open source\ndistributed realtime computation system.</p>\n</div>\n<div id=\"streamparse\">\n<h3>streamparse</h3>\n<p><a href=\"https://github.com/Parsely/streamparse\" rel=\"nofollow\">streamparse</a> lets you run\nPython code against real-time streams of data via Apache Storm.</p>\n</div>\n<div id=\"mail-parser\">\n<h3>mail-parser</h3>\n<p><a href=\"https://github.com/SpamScope/mail-parser\" rel=\"nofollow\">mail-parser</a> is the\nparsing for raw email of SpamScope.</p>\n</div>\n<div id=\"faup\">\n<h3>Faup</h3>\n<p><a href=\"https://github.com/stricaud/faup\" rel=\"nofollow\">Faup</a> stands for Finally An Url\nParser and is a library and command line tool to parse URLs and\nnormalize fields.</p>\n</div>\n<div id=\"rarlinux-optional\">\n<h3>rarlinux (optional)</h3>\n<p><a href=\"https://www.rarlab.com/\" rel=\"nofollow\">rarlinux</a> unarchives rar file.</p>\n</div>\n<div id=\"spamassassin-optional\">\n<h3>SpamAssassin (optional)</h3>\n<p>SpamScope can use <a href=\"http://spamassassin.apache.org/\" rel=\"nofollow\">SpamAssassin</a> an\nopen source anti-spam to analyze every mails.</p>\n</div>\n<div id=\"apache-tika-optional\">\n<h3>Apache Tika (optional)</h3>\n<p>SpamScope can use <a href=\"https://tika.apache.org/\" rel=\"nofollow\">Apache Tika</a> to parse\nevery attachments. The Apache Tika toolkit detects and extracts metadata\nand text from over a thousand different file types (such as PPT, XLS,\nand PDF). To use Apache Tika in SpamScope you must install\n<a href=\"https://github.com/fedelemantuano/tika-app-python\" rel=\"nofollow\">tika-app-python</a>\nwith <tt>pip</tt> and <a href=\"https://tika.apache.org/download.html\" rel=\"nofollow\">Apache\nTika</a>.</p>\n</div>\n<div id=\"thug-optional\">\n<h3>Thug (optional)</h3>\n<p>From release v1.3 SpamScope can analyze Javascript and HTML attachments\nwith <a href=\"https://github.com/buffer/thug\" rel=\"nofollow\">Thug</a>. If you want to analyze\nthe attachments with Thug, follow <a href=\"http://buffer.github.io/thug/doc/build.html\" rel=\"nofollow\">these\ninstructions</a> to install\nit. Enable it in <tt>attachments</tt> section of <a href=\"./conf/spamscope.example.yml\" rel=\"nofollow\">main configuration\nfile</a>.</p>\n<p>What is Thug? From README project: &gt; Thug is a Python low-interaction\nhoneyclient aimed at mimicing the behavior of a web browser in order to\ndetect and emulate malicious contents.</p>\n<p>You can see a complete SpamScope report with Thug analysis\n<a href=\"https://goo.gl/Y4kWCv\" rel=\"nofollow\">here</a>.</p>\n<p>Thug analysis can be very slow and you can have <tt>heartbeat timeout</tt>\nerrors in Apache Storm. To avoid any issue set\n<tt>supervisor.worker.timeout.secs</tt>:</p>\n<pre>nr. user agents * timeout_thug &lt; supervisor.worker.timeout.secs\n</pre>\n<p>The best value for <tt>threshold</tt> is 1.</p>\n</div>\n<div id=\"virustotal-optional\">\n<h3>VirusTotal (optional)</h3>\n<p>It\u2019s possible add to results (for mail attachments and sender ip\naddress) the VirusTotal report. You need a private API key.</p>\n</div>\n<div id=\"shodan-optional\">\n<h3>Shodan (optional)</h3>\n<p>It\u2019s possible add to results the Shodan report for sender ip address.\nYou need a private API key.</p>\n</div>\n<div id=\"elasticsearch-optional\">\n<h3>Elasticsearch (optional)</h3>\n<p>It\u2019s possible to store the results in Elasticsearch. In this case you\nshould install <tt>elasticsearch</tt> package.</p>\n</div>\n<div id=\"redis-optional\">\n<h3>Redis (optional)</h3>\n<p>It\u2019s possible to store the results in Redis. In this case you should\ninstall <tt>redis</tt> package.</p>\n</div>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Read the <a href=\"./conf/spamscope.example.yml\" rel=\"nofollow\">example of main configuration\nfile</a>. The default value where\nSpamScope will search the configuration file is\n<tt>/etc/spamscope/spamscope.yml</tt>, but it\u2019s possible to set the\nenvironment variable <tt>SPAMSCOPE_CONF_FILE</tt>:</p>\n<pre>$ export SPAMSCOPE_CONF_FILE=/etc/spamscope/spamscope.yml\n</pre>\n<p>When you change the configuration file, SpamScope automatically reloads\nthe new changes.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can use: * <a href=\"./docker/README.md\" rel=\"nofollow\">Docker images</a> to run SpamScope\nwith docker engine * <a href=\"./ansible/README.md\" rel=\"nofollow\">Ansible</a>: to install and\nrun SpamScope on server</p>\n</div>\n<div id=\"topologies\">\n<h2>Topologies</h2>\n<p>SpamScope comes with six topologies: -\n<a href=\"./topologies/spamscope_debug.py\" rel=\"nofollow\">spamscope_debug</a>: the output are\nJSON files on file system. -\n<a href=\"./topologies/spamscope_elasticsearch.py\" rel=\"nofollow\">spamscope_elasticsearch</a>:\nthe output are stored in Elasticsearch indexes. -\n<a href=\"./topologies/spamscope_redis.py\" rel=\"nofollow\">spamscope_redis</a>: the output are\nstored in Redis. -\n<a href=\"./topologies/spamscope_debug_iter.py\" rel=\"nofollow\">spamscope_debug_iter</a>: It uses\ngenerator to send mails in topology. The output are JSON files on file\nsystem. -\n<a href=\"./topologies/spamscope_elasticsearch_iter.py\" rel=\"nofollow\">spamscope_elasticsearch_iter</a>:\nIt uses generator to send mails in topology. The output are stored in\nElasticsearch indexes. -\n<a href=\"./topologies/spamscope_redis_iter.py\" rel=\"nofollow\">spamscope_redis_iter</a>: It uses\ngenerator to send mails in topology. The output are stored in Redis.</p>\n<p>If you want submit SpamScope topology use <tt><span class=\"pre\">spamscope-topology</span> submit</tt>\ntool. For more details <a href=\"src/cli/README.md\" rel=\"nofollow\">see SpamScope cli tools</a>:</p>\n<pre>$ spamscope-topology submit --topology {spamscope_debug,spamscope_elasticsearch,spamscope_redis}\n</pre>\n<p>It\u2019s possible to change the default settings for all Apache Storm\noptions. I suggest to change these options:</p>\n<ul>\n<li><strong>topology.tick.tuple.freq.secs</strong>: reload configuration of all bolts</li>\n<li><strong>topology.max.spout.pending</strong>: Apache Storm framework will then\nthrottle your spout as needed to meet the\n<tt>topology.max.spout.pending</tt> requirement</li>\n<li><strong>topology.sleep.spout.wait.strategy.time.ms</strong>: max sleep for emit\nnew tuple (mail)</li>\n</ul>\n<p>You can use <tt><span class=\"pre\">spamscope-topology</span> submit</tt> to do these changes.</p>\n</div>\n<div id=\"important\">\n<h2>Important</h2>\n<p>If you are using Elasticsearch output, I suggest you to use\n<a href=\"./conf/templates\" rel=\"nofollow\">Elasticsearch templates</a> that comes with\nSpamScope.</p>\n</div>\n<div id=\"unittest\">\n<h2>Unittest</h2>\n<p>SpamScope comes with unittests for each modules. In bolts and spouts\nthere are no special features, all intelligence is in external modules.\nAll unittests are in <a href=\"tests/\" rel=\"nofollow\">tests folder</a>.</p>\n<p>To have complete tests you should set the followings enviroment\nvariables:</p>\n<pre>$ export THUG_ENABLED=True\n$ export VIRUSTOTAL_ENABLED=True\n$ export VIRUSTOTAL_APIKEY=\"your key\"\n$ export ZEMANA_ENABLED=True\n$ export ZEMANA_APIKEY=\"your key\"\n$ export ZEMANA_PARTNERID=\"your partner id\"\n$ export ZEMANA_USERID=\"your userid\"\n$ export SHODAN_ENABLED=True\n$ export SHODAN_APIKEY=\"your key\"\n$ export SPAMASSASSIN_ENABLED=True\n</pre>\n</div>\n<div id=\"output-example\">\n<h2>Output example</h2>\n<p>This is a <a href=\"https://goo.gl/wMBfbF\" rel=\"nofollow\">raw email</a> that I analyzed with\nSpamScope: - <a href=\"https://goo.gl/fr4i7C\" rel=\"nofollow\">SpamScope output</a>.</p>\n<p>This is another example with <a href=\"https://goo.gl/Y4kWCv\" rel=\"nofollow\">Thug analysis</a>.</p>\n</div>\n<div id=\"screenshots\">\n<h2>Screenshots</h2>\n<div>\n<img alt=\"Apache Storm\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5484d46253e4c2bb62b1338b4128ec93463957c8/646f63732f696d616765732f446f636b657230302e706e673f7261773d74727565\">\n<p>Apache Storm</p>\n</div>\n<div>\n<img alt=\"SpamScope\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c08a51cc2fc0fd15e2fef19f97579660ebb1f1b0/646f63732f696d616765732f446f636b657230312e706e673f7261773d74727565\">\n<p>SpamScope</p>\n</div>\n<div>\n<img alt=\"SpamScope Topology\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec24ec753188374f5a72e461282fef73dba7d741/646f63732f696d616765732f446f636b657230322e706e673f7261773d74727565\">\n<p>SpamScope Topology</p>\n</div>\n<div>\n<img alt=\"SpamScope Map\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6d7c3e4cf21200f1fb08b017221d1adea13b293/646f63732f696d616765732f6d61702e706e673f7261773d74727565\">\n<p>SpamScope Map</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4947855, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "ae9f6e125c85497fc93d61ad13c9343b", "sha256": "b8323972ddd90aa63aa3078ac8b656f84a837eb53366f8f0866093f97e55b8f8"}, "downloads": -1, "filename": "SpamScope-2.0.0.zip", "has_sig": false, "md5_digest": "ae9f6e125c85497fc93d61ad13c9343b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71298, "upload_time": "2017-12-05T00:32:33", "upload_time_iso_8601": "2017-12-05T00:32:33.111154Z", "url": "https://files.pythonhosted.org/packages/9f/8b/56fb63f3fef22eae3031c9f6cbdba505d14eb500eaf34dba15521cfe5c6a/SpamScope-2.0.0.zip", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "7cee3fbd6dc6717fb9bc73e91428a313", "sha256": "7a051f1ec03aec9fb7ad1be4841486e5e6a46641172afaef6f67218604db6a33"}, "downloads": -1, "filename": "SpamScope-2.1.0.tar.gz", "has_sig": false, "md5_digest": "7cee3fbd6dc6717fb9bc73e91428a313", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36296, "upload_time": "2017-12-08T17:14:33", "upload_time_iso_8601": "2017-12-08T17:14:33.790085Z", "url": "https://files.pythonhosted.org/packages/a3/e7/030bc4221cb1f5ed06c43b030b54ce102f3297672c851e79f38a2d764202/SpamScope-2.1.0.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "fb72217bc2ba38eecb7252b94d32efbd", "sha256": "0a22846a879a5eef0ea847736601c86a72106f3d7aeea7208f0e556f797dd3c8"}, "downloads": -1, "filename": "SpamScope-2.1.2.tar.gz", "has_sig": false, "md5_digest": "fb72217bc2ba38eecb7252b94d32efbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36301, "upload_time": "2017-12-09T08:30:14", "upload_time_iso_8601": "2017-12-09T08:30:14.144363Z", "url": "https://files.pythonhosted.org/packages/c2/4c/a2c56ad4a64b83a743f501bec9f3a7f7607fe00e3e0ee4030f21bf3267c9/SpamScope-2.1.2.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "128bfa5448baa7cba7585b32bf0f9624", "sha256": "9f157674068833ae4e827a0b2672d3333b761e9bcad25a71c57376812fc9733b"}, "downloads": -1, "filename": "SpamScope-2.2.0.tar.gz", "has_sig": false, "md5_digest": "128bfa5448baa7cba7585b32bf0f9624", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36624, "upload_time": "2018-01-13T16:39:21", "upload_time_iso_8601": "2018-01-13T16:39:21.680694Z", "url": "https://files.pythonhosted.org/packages/3b/78/15ff39f972e054a026b3796d25888cb5a4b191838fa04b49b94bd3efcf5e/SpamScope-2.2.0.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "090514bb70bf0837ff58257784f5908d", "sha256": "4a2c8835abc8ede2baa3adfa506c4ed0f580c61fd286744545e298578e8f9745"}, "downloads": -1, "filename": "SpamScope-2.3.0.tar.gz", "has_sig": false, "md5_digest": "090514bb70bf0837ff58257784f5908d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33315, "upload_time": "2018-03-07T22:53:56", "upload_time_iso_8601": "2018-03-07T22:53:56.602988Z", "url": "https://files.pythonhosted.org/packages/9f/8a/dcd7c833eb88e920ac245c5c510ddac0b6bf4b9fb03c85098417b4a6093b/SpamScope-2.3.0.tar.gz", "yanked": false}], "2.4.0": [{"comment_text": "", "digests": {"md5": "2baeea19526402ed05b774062d9c5934", "sha256": "299533fd16cebf60d5a94daf4dd1efe0ddf28f5d387065d52ddafe6322c35ceb"}, "downloads": -1, "filename": "SpamScope-2.4.0.tar.gz", "has_sig": false, "md5_digest": "2baeea19526402ed05b774062d9c5934", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33673, "upload_time": "2018-04-05T12:53:21", "upload_time_iso_8601": "2018-04-05T12:53:21.970756Z", "url": "https://files.pythonhosted.org/packages/8e/81/28b222f47ffb21c94409580d2e906b5551a0217932134711286f316a6036/SpamScope-2.4.0.tar.gz", "yanked": false}], "2.5.0": [{"comment_text": "", "digests": {"md5": "b48988841dcb3e0d68e7c739b3c5cdc3", "sha256": "4030948cb97b8b5f63fa68e2af1d2d977443eac99afda07c2630f4d01d7022a9"}, "downloads": -1, "filename": "SpamScope-2.5.0.tar.gz", "has_sig": false, "md5_digest": "b48988841dcb3e0d68e7c739b3c5cdc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34721, "upload_time": "2018-07-14T08:12:12", "upload_time_iso_8601": "2018-07-14T08:12:12.026449Z", "url": "https://files.pythonhosted.org/packages/da/61/d07c04661927f36673d8ddc9b4ffd3ed9b03a8d9bc8cd12756f8a7ed2dbf/SpamScope-2.5.0.tar.gz", "yanked": false}], "2.6.0": [{"comment_text": "", "digests": {"md5": "0180e9f646167d35c8db76e270c38880", "sha256": "174a4f13be50ca42cc7b2d567092e38b180751b1fd534c9896179fbf1961e6fa"}, "downloads": -1, "filename": "SpamScope-2.6.0.tar.gz", "has_sig": false, "md5_digest": "0180e9f646167d35c8db76e270c38880", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37757, "upload_time": "2018-09-15T17:14:41", "upload_time_iso_8601": "2018-09-15T17:14:41.758847Z", "url": "https://files.pythonhosted.org/packages/08/11/83099f930a2b5c76fc7e281c2a685d9d0787e0b1c116efffeeb51a85bef0/SpamScope-2.6.0.tar.gz", "yanked": false}], "2.7.0": [{"comment_text": "", "digests": {"md5": "da24aa1fb608f00644e3da7c3892c9bf", "sha256": "532557c8188e82155222e7e7c48ed03281cd0ad2afe2974e5c68eb3d866f51c6"}, "downloads": -1, "filename": "SpamScope-2.7.0.tar.gz", "has_sig": false, "md5_digest": "da24aa1fb608f00644e3da7c3892c9bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37920, "upload_time": "2019-02-09T10:51:10", "upload_time_iso_8601": "2019-02-09T10:51:10.236608Z", "url": "https://files.pythonhosted.org/packages/bd/0a/029b5b1255d32ff57899405be1650433d4f40a6006ea2db1d93c63e98690/SpamScope-2.7.0.tar.gz", "yanked": false}], "2.8.0": [{"comment_text": "", "digests": {"md5": "a35aed441a6ba4598759e6a385e60e65", "sha256": "e45c22be933dc9721c0b5f3e6761167dee6bdf421644a6e875703c93ecff0540"}, "downloads": -1, "filename": "SpamScope-2.8.0-py2-none-any.whl", "has_sig": false, "md5_digest": "a35aed441a6ba4598759e6a385e60e65", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 72041, "upload_time": "2019-03-16T14:12:58", "upload_time_iso_8601": "2019-03-16T14:12:58.103279Z", "url": "https://files.pythonhosted.org/packages/b4/d7/a07e01cc88e9ec8d7155d396e80267cae19052a3da78f6600545cd71fd12/SpamScope-2.8.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cfb59b94a1c3afdb45efa8eab0a428f1", "sha256": "cc9224503c4d10f62378bf0ae56b256c5068a73242bb6b8b2b8b46947bbfbc63"}, "downloads": -1, "filename": "SpamScope-2.8.0.tar.gz", "has_sig": false, "md5_digest": "cfb59b94a1c3afdb45efa8eab0a428f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43339, "upload_time": "2019-03-16T14:13:00", "upload_time_iso_8601": "2019-03-16T14:13:00.294844Z", "url": "https://files.pythonhosted.org/packages/38/2c/78dbb8e45d65ea081b32b23b22f9bffa3911e1a60e26010d21e1e9ba5023/SpamScope-2.8.0.tar.gz", "yanked": false}], "2.8.1": [{"comment_text": "", "digests": {"md5": "4535e11319752edcd219abdc5c7ae515", "sha256": "cbc61ed8278c8ee59d4c20acc3231a724f21dd307434223d51c0823f790f4406"}, "downloads": -1, "filename": "SpamScope-2.8.1-py2-none-any.whl", "has_sig": false, "md5_digest": "4535e11319752edcd219abdc5c7ae515", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 72097, "upload_time": "2019-03-16T14:55:28", "upload_time_iso_8601": "2019-03-16T14:55:28.636298Z", "url": "https://files.pythonhosted.org/packages/4d/f1/2e67a47256bf3311a6d907973d0519d9b09f12f9b4bfe712d9797eee287c/SpamScope-2.8.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0ae267f32ef936219c01f88cc2538e5", "sha256": "f5170f4b5f21a0d4befafd16333087cab2b6e064c98074aaf8c958fdc7eccb32"}, "downloads": -1, "filename": "SpamScope-2.8.1.tar.gz", "has_sig": false, "md5_digest": "c0ae267f32ef936219c01f88cc2538e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43387, "upload_time": "2019-03-16T14:55:30", "upload_time_iso_8601": "2019-03-16T14:55:30.692199Z", "url": "https://files.pythonhosted.org/packages/9f/38/2e9bc66245653647b99d43975370672f325da3d3868ac952f011e6d25064/SpamScope-2.8.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4535e11319752edcd219abdc5c7ae515", "sha256": "cbc61ed8278c8ee59d4c20acc3231a724f21dd307434223d51c0823f790f4406"}, "downloads": -1, "filename": "SpamScope-2.8.1-py2-none-any.whl", "has_sig": false, "md5_digest": "4535e11319752edcd219abdc5c7ae515", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 72097, "upload_time": "2019-03-16T14:55:28", "upload_time_iso_8601": "2019-03-16T14:55:28.636298Z", "url": "https://files.pythonhosted.org/packages/4d/f1/2e67a47256bf3311a6d907973d0519d9b09f12f9b4bfe712d9797eee287c/SpamScope-2.8.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0ae267f32ef936219c01f88cc2538e5", "sha256": "f5170f4b5f21a0d4befafd16333087cab2b6e064c98074aaf8c958fdc7eccb32"}, "downloads": -1, "filename": "SpamScope-2.8.1.tar.gz", "has_sig": false, "md5_digest": "c0ae267f32ef936219c01f88cc2538e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43387, "upload_time": "2019-03-16T14:55:30", "upload_time_iso_8601": "2019-03-16T14:55:30.692199Z", "url": "https://files.pythonhosted.org/packages/9f/38/2e9bc66245653647b99d43975370672f325da3d3868ac952f011e6d25064/SpamScope-2.8.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:00 2020"}