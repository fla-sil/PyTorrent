{"info": {"author": "Konstantinos", "author_email": "k.lampridis@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Visualization", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Green Magic - Python Library\n================================\n\nGreen Magic is a library containing class models allowing users to train machine learning models as well as visualize cannabis strain data. It has functionality for encoding raw cannabis strain data into features usefull for visualization and cluster analysis. It contains implementations for model evaluation and methods for data exploration.\n\nKey features of the Library:\n\n* Data cleaning\n* Seemless dataset creation\n* Extendable feature extraction system\n* Usage of the Somoclu library [1] as the backend, which allows for 'fast execution of Self-Organizing Maps by parallelization: OpenMP and CUDA are supported'.\n* Visualization of maps\n* Kmeans and Affinity-propagation based clustering\n* Formatted print of statistics and distributions\n\n\nUsage\n-----\nA simple example is below.\n\n::\n\n    from green_magic import WeedMaster\n    from green_magic.clustering import ClusteringFactory, DistroReporter, get_model_quality_reporter\n    all_vars = ['type', 'effects', 'medical', 'negatives', 'flavors']\n    active_vars = ['type', 'effects', 'medical', 'negatives', 'flavors']\n    wd = 'pd'\n    wm = WeedMaster()\n    dt = wm.create_weedataset(dt_path, wd)\n    dt.use_variables(active_vars)\n    dt.clean()\n    vectors = wm.get_feature_vectors(dt)\n    print(dt)\n    wm.save_dataset(wd)\n    som = wm.map_manager.get_som('toroid.rectangular.30.30.pca')\n    wm.map_manager.show_mmap(som)\n    clf = ClusteringFactory(wm)\n    cls = clf.create_clusters(som, 'kmeans', nb_clusters=10, vars=all_vars, ngrams=1)\n    print(cls)\n    cls.print_map()\n    r = DistroReporter()\n    r.print_distros(cls0, 'type', prec=3)\n    qr = get_model_quality_reporter(wm, wd)\n    print(qr.measure(cls, metric='silhouette'))\n    print(qr.measure(cls, metric='cali-hara'))\n\n\nInstallation\n------------\nThe code is available on PyPI, hence it can be installed by\n\n::\n\n    $ pip install green_magic\n\nCitation\n--------\n\n1. Peter Wittek, Shi Chao Gao, Ik Soo Lim, Li Zhao (2017). Somoclu: An Efficient Parallel Library for Self-Organizing Maps.  Journal of Statistical Software, 78(9), pp.1--21. DOI:`10.18637/jss.v078.i09 <https://doi.org/10.18637/jss.v078.i09>`_. arXiv:`1305.1422 <https://arxiv.org/abs/1305.1422>`_.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/boromir674/green-magic", "keywords": "cannabis strain self-organizing maps visualization", "license": "GNU GPLv3", "maintainer": "", "maintainer_email": "", "name": "green-magic", "package_url": "https://pypi.org/project/green-magic/", "platform": "", "project_url": "https://pypi.org/project/green-magic/", "project_urls": {"Homepage": "https://github.com/boromir674/green-magic"}, "release_url": "https://pypi.org/project/green-magic/0.5.6/", "requires_dist": null, "requires_python": "", "summary": "The Green Magic library of the Green-Machine", "version": "0.5.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Green Magic is a library containing class models allowing users to train machine learning models as well as visualize cannabis strain data. It has functionality for encoding raw cannabis strain data into features usefull for visualization and cluster analysis. It contains implementations for model evaluation and methods for data exploration.</p>\n<p>Key features of the Library:</p>\n<ul>\n<li>Data cleaning</li>\n<li>Seemless dataset creation</li>\n<li>Extendable feature extraction system</li>\n<li>Usage of the Somoclu library [1] as the backend, which allows for \u2018fast execution of Self-Organizing Maps by parallelization: OpenMP and CUDA are supported\u2019.</li>\n<li>Visualization of maps</li>\n<li>Kmeans and Affinity-propagation based clustering</li>\n<li>Formatted print of statistics and distributions</li>\n</ul>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>A simple example is below.</p>\n<pre>from green_magic import WeedMaster\nfrom green_magic.clustering import ClusteringFactory, DistroReporter, get_model_quality_reporter\nall_vars = ['type', 'effects', 'medical', 'negatives', 'flavors']\nactive_vars = ['type', 'effects', 'medical', 'negatives', 'flavors']\nwd = 'pd'\nwm = WeedMaster()\ndt = wm.create_weedataset(dt_path, wd)\ndt.use_variables(active_vars)\ndt.clean()\nvectors = wm.get_feature_vectors(dt)\nprint(dt)\nwm.save_dataset(wd)\nsom = wm.map_manager.get_som('toroid.rectangular.30.30.pca')\nwm.map_manager.show_mmap(som)\nclf = ClusteringFactory(wm)\ncls = clf.create_clusters(som, 'kmeans', nb_clusters=10, vars=all_vars, ngrams=1)\nprint(cls)\ncls.print_map()\nr = DistroReporter()\nr.print_distros(cls0, 'type', prec=3)\nqr = get_model_quality_reporter(wm, wd)\nprint(qr.measure(cls, metric='silhouette'))\nprint(qr.measure(cls, metric='cali-hara'))\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The code is available on PyPI, hence it can be installed by</p>\n<pre>$ pip install green_magic\n</pre>\n</div>\n<div id=\"citation\">\n<h2>Citation</h2>\n<ol>\n<li>Peter Wittek, Shi Chao Gao, Ik Soo Lim, Li Zhao (2017). Somoclu: An Efficient Parallel Library for Self-Organizing Maps.  Journal of Statistical Software, 78(9), pp.1\u201321. DOI:<a href=\"https://doi.org/10.18637/jss.v078.i09\" rel=\"nofollow\">10.18637/jss.v078.i09</a>. arXiv:<a href=\"https://arxiv.org/abs/1305.1422\" rel=\"nofollow\">1305.1422</a>.</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 3817607, "releases": {"0.5": [{"comment_text": "", "digests": {"md5": "51ab0e1f8cdddd5db71bd1b6f2436ecd", "sha256": "60a5b67746a9f69db8baee5d11b5a813000527f9bde6ec9b03fd70602d537c6a"}, "downloads": -1, "filename": "green_magic-0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "51ab0e1f8cdddd5db71bd1b6f2436ecd", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 20294, "upload_time": "2018-03-04T03:36:18", "upload_time_iso_8601": "2018-03-04T03:36:18.830034Z", "url": "https://files.pythonhosted.org/packages/d5/bb/f855665c2487c69e9f4f4c90899c8cd6d8bb6912b07da81529a5350124e8/green_magic-0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be1c42f68fde8d40fb808a58680a2c50", "sha256": "55df7e397769035b96aa82d7ab9a3253964bfa71609999ead53b756a5e5979de"}, "downloads": -1, "filename": "green_magic-0.5.tar.gz", "has_sig": false, "md5_digest": "be1c42f68fde8d40fb808a58680a2c50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27755, "upload_time": "2018-03-04T03:36:20", "upload_time_iso_8601": "2018-03-04T03:36:20.053851Z", "url": "https://files.pythonhosted.org/packages/88/a6/fd2d9fa13770bb02c7107ca265bfb3c6014d0f86359dfd25ea05ada26c30/green_magic-0.5.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "2130b3b9788354417e33d9147a0570c9", "sha256": "878a4c23c930f978a86e1d5cc22070941dc442f31eb3f9de72b91bcf707f9399"}, "downloads": -1, "filename": "green_magic-0.5.1.tar.gz", "has_sig": false, "md5_digest": "2130b3b9788354417e33d9147a0570c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27792, "upload_time": "2018-03-04T12:02:28", "upload_time_iso_8601": "2018-03-04T12:02:28.688075Z", "url": "https://files.pythonhosted.org/packages/09/cc/3f24dd84097543d16a47e48e7143abe8c8503e3a1bc86580e070756bc2f4/green_magic-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "64d2d23d855be64689c150c829624fc2", "sha256": "7e971fca4b7c5f02c90560e2f03cdb2b3949517f8433c49c2b21fa3ec267fd48"}, "downloads": -1, "filename": "green_magic-0.5.2-py2-none-any.whl", "has_sig": false, "md5_digest": "64d2d23d855be64689c150c829624fc2", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 20420, "upload_time": "2018-03-04T13:13:24", "upload_time_iso_8601": "2018-03-04T13:13:24.646978Z", "url": "https://files.pythonhosted.org/packages/04/c9/d9101acb33b9994ec812ea3b375589f52d29278137d740a1378bda5dc577/green_magic-0.5.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17f10e410aad08d29d5b7d1d11d1c646", "sha256": "286d2e05ee281c06cbfb12af738cac992c7a4d722f590643a81c7d1fd7622909"}, "downloads": -1, "filename": "green_magic-0.5.2.tar.gz", "has_sig": false, "md5_digest": "17f10e410aad08d29d5b7d1d11d1c646", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27806, "upload_time": "2018-03-04T13:11:29", "upload_time_iso_8601": "2018-03-04T13:11:29.851797Z", "url": "https://files.pythonhosted.org/packages/23/3c/0e19fd9e5d72d1d05d28ebca943cab237da9f17851d1085c657f02d36618/green_magic-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "880b878a7abc422d0fd544738850d8fb", "sha256": "9a4d3c2172fdc6bc3bc16c6431ecbbedebd40dc8623d72d737d9c70180e33d97"}, "downloads": -1, "filename": "green_magic-0.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "880b878a7abc422d0fd544738850d8fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20295, "upload_time": "2018-03-04T18:34:26", "upload_time_iso_8601": "2018-03-04T18:34:26.869940Z", "url": "https://files.pythonhosted.org/packages/43/0d/ae3a7d6a7c5d910ce5ef76e7c017657e14356eda796434755a9b1268b3a9/green_magic-0.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd333cba3afed0a5ec774af0b5ca83f6", "sha256": "1902aa8fcecce41145e61310cab99b8cab1c0d286aeaddb175ce2f9049426623"}, "downloads": -1, "filename": "green_magic-0.5.3.tar.gz", "has_sig": false, "md5_digest": "cd333cba3afed0a5ec774af0b5ca83f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27669, "upload_time": "2018-03-04T18:34:28", "upload_time_iso_8601": "2018-03-04T18:34:28.748150Z", "url": "https://files.pythonhosted.org/packages/c7/51/a22b54114bbce6a6a090c5460699585abe9a6664f5f5d51adcc6e0ad2bb5/green_magic-0.5.3.tar.gz", "yanked": false}], "0.5.6": [{"comment_text": "", "digests": {"md5": "f41c840678c1adc5ff17911c88459cab", "sha256": "87de63eafff96da100b9ee1fd585b05bc0c3c8d5cb2b641db172b21b2cbf7884"}, "downloads": -1, "filename": "green_magic-0.5.6.tar.gz", "has_sig": false, "md5_digest": "f41c840678c1adc5ff17911c88459cab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27992, "upload_time": "2018-04-28T20:48:39", "upload_time_iso_8601": "2018-04-28T20:48:39.544126Z", "url": "https://files.pythonhosted.org/packages/e2/39/dfde853020070b4db2b16265bdcaf915da744b58eb4f8418a8a7d8b64a68/green_magic-0.5.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f41c840678c1adc5ff17911c88459cab", "sha256": "87de63eafff96da100b9ee1fd585b05bc0c3c8d5cb2b641db172b21b2cbf7884"}, "downloads": -1, "filename": "green_magic-0.5.6.tar.gz", "has_sig": false, "md5_digest": "f41c840678c1adc5ff17911c88459cab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27992, "upload_time": "2018-04-28T20:48:39", "upload_time_iso_8601": "2018-04-28T20:48:39.544126Z", "url": "https://files.pythonhosted.org/packages/e2/39/dfde853020070b4db2b16265bdcaf915da744b58eb4f8418a8a7d8b64a68/green_magic-0.5.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:19 2020"}