{"info": {"author": "Lester James V. Miranda", "author_email": "ljvmiranda@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Artificial Life", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development :: Libraries :: Python Modules", "Typing :: Typed"], "description": "<p align=\"center\">\n    <img src=\"https://imgur.com/Vgt6a5y.png\" width=\"200\">\n</p>\n\n<p align=\"center\">\n    <a href=\"https://pypi.org/project/pyseagull/\"><img src=\"https://img.shields.io/pypi/v/pyseagull.svg?color=brightgreen&logo=python&logoColor=white\"></img></a>\n    <a href=\"https://dev.azure.com/ljvmiranda/ljvmiranda/_build/latest?definitionId=3&branchName=master\"><img src=\"https://dev.azure.com/ljvmiranda/ljvmiranda/_apis/build/status/ljvmiranda921.seagull?branchName=master\"></img></a>\n    <a href=\"https://pyseagull.readthedocs.io/en/latest/?badge=latest\"><img src=\"https://readthedocs.org/projects/pyseagull/badge/?version=latest\"></img></a>\n    <a href=\"https://opensource.org/licenses/MIT\"><img src=\"https://img.shields.io/github/license/ljvmiranda921/seagull.svg?color=blue\"></img></a>\n    <a href=\"https://mybinder.org/v2/gh/ljvmiranda921/seagull/master?filepath=docs%2Fnotebooks\"><img src=\"https://mybinder.org/badge_logo.svg\"></img></a>\n</p>\n\n\nA Python library for Conway's Game of Life\n\nThis framework allows you to create and simulate various artificial lifeforms\nand cellular automata easily: simply define your board, add your lifeforms,\nand execute the `run` command! It also provides a myriad of pre-made\nlifeforms while allowing you to create your own.\n\n**Why name it Seagull?** Conway's Game of Life is quite a mouthful, so I just refer to\nits acronym, CGoL. The word \"seagull\" is just a pun of that.\n\nSimulate your first lifeforms in few lines of code:\n\n```python\nimport seagull as sg\nfrom seagull.lifeforms import Pulsar\n\n# Initialize board\nboard = sg.Board(size=(19,60))  \n\n# Add three Pulsar lifeforms in various locations\nboard.add(Pulsar(), loc=(1,1))\nboard.add(Pulsar(), loc=(1,22))\nboard.add(Pulsar(), loc=(1,42))\n\n# Simulate board\nsim = sg.Simulator(board)      \nsim.run(sg.rules.conway_classic, iters=1000)\n```\n\nOptionally, you can animate the simulation by running `sim.animate()`:\n\n<p align=\"center\">\n  <img src=\"https://imgur.com/sgCrP9f.gif\" width=\"720\">\n</p>\n\nAside from `Pulsar`, we have a [nice collection of\nlifeforms](https://pyseagull.readthedocs.io/en/latest/api/seagull.lifeforms.html)\nfor you to choose from!\n\n## Installation\n\nTo install Seagull, run this command in your terminal:\n\n```shell\npip install pyseagull\n```\n\nThis is the preferred method to install Seagull, as it will always install\nthe most recent stable release.\n\nIn case you want to install the bleeding-edge version, clone this repo:\n\n```shell\ngit clone https://github.com/ljvmiranda921/seagull.git\n```\n\nand then run\n\n```shell\ncd seagull\npython setup.py install\n```\n\n## Usage\n\nThere are three main components for an artificial life simulation:\n\n* The `Board` or the environment in which the lifeforms will move around\n* The `Lifeform` that will interact with the environment, and  \n* The `rules` that dictate if a particular cell will survive or not\n\nIn Seagull, you simply define your `Board`, add your `Lifeform`/s, and run the\n`Simulator` given a `rule`. You can add multiple lifeforms as you want:\n\n```python\nimport seagull as sg\nfrom seagull import lifeforms as lf\n\nboard = sg.Board(size=(30,30))\nboard.add(lf.Blinker(length=3), loc=(4,4))\nboard.add(lf.Glider(), loc=(10,4))\nboard.add(lf.Glider(), loc=(15,4))\nboard.add(lf.Pulsar(), loc=(5,12))\nboard.view()  # View the current state of the board\n```\n\nThen you can simply run the simulation, and animate it when needed:\n\n```python\nsim = sg.Simulator(board)\nhist = sim.run(sg.rules.conway_classic, iters=1000)  # Save simulation history\nsim.animate()\n```\n\n### Adding custom lifeforms\n\nYou can manually create your lifeforms by using the `Custom` class:\n\n```python\nimport seagull as sg\nfrom seagull.lifeforms import Custom\n\nboard = sg.Board(size=(30,30))\nboard.add(Custom([[0,1,1,0], [0,0,1,1]]), loc=(0,0))\n```\n\n### Obtaining simulation statistics and history \n\nBy default, the simulation statistics will always be returned after calling the\n`run()` method. In addition, you can also obtain the history by calling the\n`get_history()` method.\n\n```python\n# The run() command returns the run statistics\nstats = sim.run(sg.rules.conway_classic, iters=1000)\n# You can also get it using get_history()\nhist = sim.get_history()\n```\n\n## Examples\n\nYou can find more examples in the\n[documentation](https://pyseagull.readthedocs.io/en/latest/examples.html)\n\n## Contributing\n\nThis project is open for contributors! Contibutions can come in the form of\nfeature requests, bug fixes, documentation, tutorials and the like! We highly\nrecommend to file an Issue first before submitting a [Pull\nRequest](https://help.github.com/en/articles/creating-a-pull-request).\n\nSimply fork this repository and make a Pull Request! We'd definitely\nappreciate:\n\n* Implementation of new features\n* Bug Reports\n* Documentation\n* Testing\n\n\n## License\n\nMIT License (c) 2019, Lester James V. Miranda\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ljvmiranda921/seagull", "keywords": "conway game of lifemathematics,cellular automata", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "pyseagull", "package_url": "https://pypi.org/project/pyseagull/", "platform": "", "project_url": "https://pypi.org/project/pyseagull/", "project_urls": {"Homepage": "https://github.com/ljvmiranda921/seagull"}, "release_url": "https://pypi.org/project/pyseagull/1.0.0b3/", "requires_dist": ["scipy", "numpy", "matplotlib", "loguru"], "requires_python": "", "summary": "Python library for simulating Conway's Game of Life", "version": "1.0.0b3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n    <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ce2a710347d83eab97f15495e3dd835fa596a419/68747470733a2f2f696d6775722e636f6d2f566774366135792e706e67\" width=\"200\">\n</p>\n<p align=\"center\">\n    <a href=\"https://pypi.org/project/pyseagull/\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/32dc061b6d182e0ce1da6236f7f092680961b1d7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707973656167756c6c2e7376673f636f6c6f723d627269676874677265656e266c6f676f3d707974686f6e266c6f676f436f6c6f723d7768697465\"></a>\n    <a href=\"https://dev.azure.com/ljvmiranda/ljvmiranda/_build/latest?definitionId=3&amp;branchName=master\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4319b81eb324a9a10ae358bf011bf0be659093f8/68747470733a2f2f6465762e617a7572652e636f6d2f6c6a766d6972616e64612f6c6a766d6972616e64612f5f617069732f6275696c642f7374617475732f6c6a766d6972616e64613932312e73656167756c6c3f6272616e63684e616d653d6d6173746572\"></a>\n    <a href=\"https://pyseagull.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae17b3b0851a841fc8e839b2d72b3d4c6cb7d95c/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707973656167756c6c2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n    <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/177cc77dcf822d7d1172faafa3abd433dc5e33f7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6c6a766d6972616e64613932312f73656167756c6c2e7376673f636f6c6f723d626c7565\"></a>\n    <a href=\"https://mybinder.org/v2/gh/ljvmiranda921/seagull/master?filepath=docs%2Fnotebooks\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85e91bbb928104e4ce317951541520c6b9c170e1/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\"></a>\n</p>\n<p>A Python library for Conway's Game of Life</p>\n<p>This framework allows you to create and simulate various artificial lifeforms\nand cellular automata easily: simply define your board, add your lifeforms,\nand execute the <code>run</code> command! It also provides a myriad of pre-made\nlifeforms while allowing you to create your own.</p>\n<p><strong>Why name it Seagull?</strong> Conway's Game of Life is quite a mouthful, so I just refer to\nits acronym, CGoL. The word \"seagull\" is just a pun of that.</p>\n<p>Simulate your first lifeforms in few lines of code:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">seagull</span> <span class=\"k\">as</span> <span class=\"nn\">sg</span>\n<span class=\"kn\">from</span> <span class=\"nn\">seagull.lifeforms</span> <span class=\"kn\">import</span> <span class=\"n\">Pulsar</span>\n\n<span class=\"c1\"># Initialize board</span>\n<span class=\"n\">board</span> <span class=\"o\">=</span> <span class=\"n\">sg</span><span class=\"o\">.</span><span class=\"n\">Board</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"mi\">60</span><span class=\"p\">))</span>  \n\n<span class=\"c1\"># Add three Pulsar lifeforms in various locations</span>\n<span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Pulsar</span><span class=\"p\">(),</span> <span class=\"n\">loc</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Pulsar</span><span class=\"p\">(),</span> <span class=\"n\">loc</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">22</span><span class=\"p\">))</span>\n<span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Pulsar</span><span class=\"p\">(),</span> <span class=\"n\">loc</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">42</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Simulate board</span>\n<span class=\"n\">sim</span> <span class=\"o\">=</span> <span class=\"n\">sg</span><span class=\"o\">.</span><span class=\"n\">Simulator</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"p\">)</span>      \n<span class=\"n\">sim</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">sg</span><span class=\"o\">.</span><span class=\"n\">rules</span><span class=\"o\">.</span><span class=\"n\">conway_classic</span><span class=\"p\">,</span> <span class=\"n\">iters</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n</pre>\n<p>Optionally, you can animate the simulation by running <code>sim.animate()</code>:</p>\n<p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b016b789c4556ee573b9f62e63aeba5a7c1d3c3e/68747470733a2f2f696d6775722e636f6d2f736743725039662e676966\" width=\"720\">\n</p>\n<p>Aside from <code>Pulsar</code>, we have a <a href=\"https://pyseagull.readthedocs.io/en/latest/api/seagull.lifeforms.html\" rel=\"nofollow\">nice collection of\nlifeforms</a>\nfor you to choose from!</p>\n<h2>Installation</h2>\n<p>To install Seagull, run this command in your terminal:</p>\n<pre>pip install pyseagull\n</pre>\n<p>This is the preferred method to install Seagull, as it will always install\nthe most recent stable release.</p>\n<p>In case you want to install the bleeding-edge version, clone this repo:</p>\n<pre>git clone https://github.com/ljvmiranda921/seagull.git\n</pre>\n<p>and then run</p>\n<pre><span class=\"nb\">cd</span> seagull\npython setup.py install\n</pre>\n<h2>Usage</h2>\n<p>There are three main components for an artificial life simulation:</p>\n<ul>\n<li>The <code>Board</code> or the environment in which the lifeforms will move around</li>\n<li>The <code>Lifeform</code> that will interact with the environment, and</li>\n<li>The <code>rules</code> that dictate if a particular cell will survive or not</li>\n</ul>\n<p>In Seagull, you simply define your <code>Board</code>, add your <code>Lifeform</code>/s, and run the\n<code>Simulator</code> given a <code>rule</code>. You can add multiple lifeforms as you want:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">seagull</span> <span class=\"k\">as</span> <span class=\"nn\">sg</span>\n<span class=\"kn\">from</span> <span class=\"nn\">seagull</span> <span class=\"kn\">import</span> <span class=\"n\">lifeforms</span> <span class=\"k\">as</span> <span class=\"n\">lf</span>\n\n<span class=\"n\">board</span> <span class=\"o\">=</span> <span class=\"n\">sg</span><span class=\"o\">.</span><span class=\"n\">Board</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">,</span><span class=\"mi\">30</span><span class=\"p\">))</span>\n<span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">lf</span><span class=\"o\">.</span><span class=\"n\">Blinker</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"n\">loc</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">lf</span><span class=\"o\">.</span><span class=\"n\">Glider</span><span class=\"p\">(),</span> <span class=\"n\">loc</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">lf</span><span class=\"o\">.</span><span class=\"n\">Glider</span><span class=\"p\">(),</span> <span class=\"n\">loc</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">lf</span><span class=\"o\">.</span><span class=\"n\">Pulsar</span><span class=\"p\">(),</span> <span class=\"n\">loc</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">12</span><span class=\"p\">))</span>\n<span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">()</span>  <span class=\"c1\"># View the current state of the board</span>\n</pre>\n<p>Then you can simply run the simulation, and animate it when needed:</p>\n<pre><span class=\"n\">sim</span> <span class=\"o\">=</span> <span class=\"n\">sg</span><span class=\"o\">.</span><span class=\"n\">Simulator</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"p\">)</span>\n<span class=\"n\">hist</span> <span class=\"o\">=</span> <span class=\"n\">sim</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">sg</span><span class=\"o\">.</span><span class=\"n\">rules</span><span class=\"o\">.</span><span class=\"n\">conway_classic</span><span class=\"p\">,</span> <span class=\"n\">iters</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>  <span class=\"c1\"># Save simulation history</span>\n<span class=\"n\">sim</span><span class=\"o\">.</span><span class=\"n\">animate</span><span class=\"p\">()</span>\n</pre>\n<h3>Adding custom lifeforms</h3>\n<p>You can manually create your lifeforms by using the <code>Custom</code> class:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">seagull</span> <span class=\"k\">as</span> <span class=\"nn\">sg</span>\n<span class=\"kn\">from</span> <span class=\"nn\">seagull.lifeforms</span> <span class=\"kn\">import</span> <span class=\"n\">Custom</span>\n\n<span class=\"n\">board</span> <span class=\"o\">=</span> <span class=\"n\">sg</span><span class=\"o\">.</span><span class=\"n\">Board</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">,</span><span class=\"mi\">30</span><span class=\"p\">))</span>\n<span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">Custom</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]]),</span> <span class=\"n\">loc</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n</pre>\n<h3>Obtaining simulation statistics and history</h3>\n<p>By default, the simulation statistics will always be returned after calling the\n<code>run()</code> method. In addition, you can also obtain the history by calling the\n<code>get_history()</code> method.</p>\n<pre><span class=\"c1\"># The run() command returns the run statistics</span>\n<span class=\"n\">stats</span> <span class=\"o\">=</span> <span class=\"n\">sim</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">sg</span><span class=\"o\">.</span><span class=\"n\">rules</span><span class=\"o\">.</span><span class=\"n\">conway_classic</span><span class=\"p\">,</span> <span class=\"n\">iters</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n<span class=\"c1\"># You can also get it using get_history()</span>\n<span class=\"n\">hist</span> <span class=\"o\">=</span> <span class=\"n\">sim</span><span class=\"o\">.</span><span class=\"n\">get_history</span><span class=\"p\">()</span>\n</pre>\n<h2>Examples</h2>\n<p>You can find more examples in the\n<a href=\"https://pyseagull.readthedocs.io/en/latest/examples.html\" rel=\"nofollow\">documentation</a></p>\n<h2>Contributing</h2>\n<p>This project is open for contributors! Contibutions can come in the form of\nfeature requests, bug fixes, documentation, tutorials and the like! We highly\nrecommend to file an Issue first before submitting a <a href=\"https://help.github.com/en/articles/creating-a-pull-request\" rel=\"nofollow\">Pull\nRequest</a>.</p>\n<p>Simply fork this repository and make a Pull Request! We'd definitely\nappreciate:</p>\n<ul>\n<li>Implementation of new features</li>\n<li>Bug Reports</li>\n<li>Documentation</li>\n<li>Testing</li>\n</ul>\n<h2>License</h2>\n<p>MIT License (c) 2019, Lester James V. Miranda</p>\n\n          </div>"}, "last_serial": 6859822, "releases": {"1.0.0a1": [{"comment_text": "", "digests": {"md5": "a537efec7476ca244a90dd8d86e57787", "sha256": "1a53db19a9558f73bec03b4658ecc75c0590d595882dc0482d2ab6d35be4b794"}, "downloads": -1, "filename": "pyseagull-1.0.0a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a537efec7476ca244a90dd8d86e57787", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3444, "upload_time": "2019-05-03T00:11:48", "upload_time_iso_8601": "2019-05-03T00:11:48.570058Z", "url": "https://files.pythonhosted.org/packages/bd/0a/27b2b6b81e411ffcaf92ea4dda8e264ed520715c76b7760979ab6707fdbc/pyseagull-1.0.0a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4140c0b1f6cf696d46305559daf647c", "sha256": "cdb098f83a72c6b7e3335f45ae7a79dda952cced8c76ada89f88cc455f8ccd3a"}, "downloads": -1, "filename": "pyseagull-1.0.0a1.tar.gz", "has_sig": false, "md5_digest": "c4140c0b1f6cf696d46305559daf647c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3609, "upload_time": "2019-05-03T00:11:50", "upload_time_iso_8601": "2019-05-03T00:11:50.948882Z", "url": "https://files.pythonhosted.org/packages/3f/45/0658acea2a6ffcf8ae0736ed19001283594bf4757e5dc2a2a5fcb070efef/pyseagull-1.0.0a1.tar.gz", "yanked": false}], "1.0.0b0": [{"comment_text": "", "digests": {"md5": "b45ee9b1344cd8a0b7ea3fd4b0784cd4", "sha256": "3e2fc178a034cfe0c28f4ebb90c70a422aab50f3258e3913068135e99f5bbc49"}, "downloads": -1, "filename": "pyseagull-1.0.0b0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b45ee9b1344cd8a0b7ea3fd4b0784cd4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15148, "upload_time": "2019-05-11T10:44:54", "upload_time_iso_8601": "2019-05-11T10:44:54.782500Z", "url": "https://files.pythonhosted.org/packages/bb/32/ff164243276c377d6f55064a8cb074b4f3ca1d58c1837e9cdbd98e4b6c70/pyseagull-1.0.0b0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "68f978623bbd6fa36bda47a1e07dbeff", "sha256": "208baf624dd153977f3f28f1b0328e186ba6ac7b42f05d7934ef90143292a028"}, "downloads": -1, "filename": "pyseagull-1.0.0b0.tar.gz", "has_sig": false, "md5_digest": "68f978623bbd6fa36bda47a1e07dbeff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98793, "upload_time": "2019-05-11T10:44:57", "upload_time_iso_8601": "2019-05-11T10:44:57.510024Z", "url": "https://files.pythonhosted.org/packages/05/f9/4864bffaae4c66a9a36c4141213baafd9790ba8bb364151e4d2e2b3dc4bd/pyseagull-1.0.0b0.tar.gz", "yanked": false}], "1.0.0b1": [{"comment_text": "", "digests": {"md5": "f6ed94ea2fd22a539adad191664933dd", "sha256": "237d1dc81efab5d1fdca78f8b7a97c0d27a264acec967f7e68effbecdaff2bba"}, "downloads": -1, "filename": "pyseagull-1.0.0b1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f6ed94ea2fd22a539adad191664933dd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15504, "upload_time": "2019-05-13T10:48:57", "upload_time_iso_8601": "2019-05-13T10:48:57.088457Z", "url": "https://files.pythonhosted.org/packages/2b/f3/10bbf9e8e444f5163db37439a1373044c8795afd61afc9c9a488bfead736/pyseagull-1.0.0b1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b939b8c95856eefe57af836bc60cadd3", "sha256": "3ca0de7203ba47d4f303b5a24711ddd76686898ff9bdef2f8d23e35bd74d47a1"}, "downloads": -1, "filename": "pyseagull-1.0.0b1.tar.gz", "has_sig": false, "md5_digest": "b939b8c95856eefe57af836bc60cadd3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101618, "upload_time": "2019-05-13T10:48:59", "upload_time_iso_8601": "2019-05-13T10:48:59.682867Z", "url": "https://files.pythonhosted.org/packages/46/0c/2142741c4381db51035700bd2e58b538d30f77e04cf30b334310a0b9d73d/pyseagull-1.0.0b1.tar.gz", "yanked": false}], "1.0.0b2": [{"comment_text": "", "digests": {"md5": "cbbe827684297f8ed6226b7bbf71af4e", "sha256": "daa96f243dc647b18a7cf1e681d347fdd0941e1d4b7670933f57434ce70b70c4"}, "downloads": -1, "filename": "pyseagull-1.0.0b2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cbbe827684297f8ed6226b7bbf71af4e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15076, "upload_time": "2020-03-21T17:55:52", "upload_time_iso_8601": "2020-03-21T17:55:52.718596Z", "url": "https://files.pythonhosted.org/packages/78/4f/1ae74d5a5ae5b4363d72c61e54046896e7a05ed793674fba7f5fae33c924/pyseagull-1.0.0b2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7298ed9602dcad453871d976e127a3a9", "sha256": "9e86d046cbf279428fb22a3ff40c52f9d1a7033ce383dad21afc91b7aa6db679"}, "downloads": -1, "filename": "pyseagull-1.0.0b2.tar.gz", "has_sig": false, "md5_digest": "7298ed9602dcad453871d976e127a3a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60091, "upload_time": "2020-03-21T17:55:54", "upload_time_iso_8601": "2020-03-21T17:55:54.458260Z", "url": "https://files.pythonhosted.org/packages/9d/ab/24ed72bc75ad465a18a978ee94a5f9bc50c8149a46c833b7b0022d999178/pyseagull-1.0.0b2.tar.gz", "yanked": false}], "1.0.0b3": [{"comment_text": "", "digests": {"md5": "8c5fede8540c80f01f2bfd68e20e7fa8", "sha256": "1ff5fe705d1c112a4aad71a2314e4b28e1824433d14ba2ed6896d4718674edb2"}, "downloads": -1, "filename": "pyseagull-1.0.0b3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8c5fede8540c80f01f2bfd68e20e7fa8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15086, "upload_time": "2020-03-22T13:03:05", "upload_time_iso_8601": "2020-03-22T13:03:05.134512Z", "url": "https://files.pythonhosted.org/packages/93/c4/04d5794747a5e075acba16b8f9d818559dd0d4f92c27035d8e167a244702/pyseagull-1.0.0b3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f011331e2dfcbe253546adbf2d8f92b", "sha256": "cc54939ac84af5536ede123bbb7d6bb255e71d41620fd7c3680931ba01708c48"}, "downloads": -1, "filename": "pyseagull-1.0.0b3.tar.gz", "has_sig": false, "md5_digest": "4f011331e2dfcbe253546adbf2d8f92b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60093, "upload_time": "2020-03-22T13:03:07", "upload_time_iso_8601": "2020-03-22T13:03:07.157258Z", "url": "https://files.pythonhosted.org/packages/eb/06/b28b9c3690e290407b5b479e9ab6d751a332a0b9aad4326eb7a3cb12a792/pyseagull-1.0.0b3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8c5fede8540c80f01f2bfd68e20e7fa8", "sha256": "1ff5fe705d1c112a4aad71a2314e4b28e1824433d14ba2ed6896d4718674edb2"}, "downloads": -1, "filename": "pyseagull-1.0.0b3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8c5fede8540c80f01f2bfd68e20e7fa8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15086, "upload_time": "2020-03-22T13:03:05", "upload_time_iso_8601": "2020-03-22T13:03:05.134512Z", "url": "https://files.pythonhosted.org/packages/93/c4/04d5794747a5e075acba16b8f9d818559dd0d4f92c27035d8e167a244702/pyseagull-1.0.0b3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f011331e2dfcbe253546adbf2d8f92b", "sha256": "cc54939ac84af5536ede123bbb7d6bb255e71d41620fd7c3680931ba01708c48"}, "downloads": -1, "filename": "pyseagull-1.0.0b3.tar.gz", "has_sig": false, "md5_digest": "4f011331e2dfcbe253546adbf2d8f92b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60093, "upload_time": "2020-03-22T13:03:07", "upload_time_iso_8601": "2020-03-22T13:03:07.157258Z", "url": "https://files.pythonhosted.org/packages/eb/06/b28b9c3690e290407b5b479e9ab6d751a332a0b9aad4326eb7a3cb12a792/pyseagull-1.0.0b3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:11 2020"}