{"info": {"author": "Leonidas Poulopoulos", "author_email": "dev@noc.grnet.gr", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 2"], "description": "# nxpy: Network XML Python Proxy\n\n`nxpy` maps exported XML configuration (from Juniper network devices) to python\nclasses. It is compatible only with Junipers' xml configuration and is developed\nto work alongside [ncclient](https://github.com/ncclient/ncclient).\n\nnxpy allows for retrieving the device configuration in xml format (using either\nnetconf or \"show configuration | display xml\" via an expect script), transform\nthe configuration to python classes in order to manipulate them (view, edit,\ndelete).  After editing, the configuration can be applied back to the device via\nnetconf or cli expect.\n\nFurthermore, it allows for building configuration via python classes, and apply\nit to the device(s) via netconf or cli expect.  For the time, it supports\nlimited configuration changes.\n\n## Installing\n\nRequirements:\n\n* Python 2.6 <= version < 3.0\n* lxml (tested with 2.2.6)\n\nTo install:\n\n```\npython setup.py install\n```\n\n## Examples\n\n* Grab the configuration in xml format\n\nLet's say that you have grabbed your Juniper device configuration in xml format\n(This is STRICT!!!). You can use either \"show configuration | display xml\" (and\ncopy paste the output to a file), or use an automated cli excpect script or\ninvoke netconf.  nxpy is developed as a companion to\n[ncclient](https://github.com/ncclient/ncclient).\n\n* Feed the configuration to nxpy\n\n```\nimport nxpy as np\nconf = np.Parser(<configuration_file_OR_configuration_text>)\nconf = conf.export()\n```\n\nTo check if it worked:\n\n```\nconf.interfaces\n```\n\n(...you should get the list of device interfaces)\n\n## Changelog\n\n* v0.4.3:\n  * Python packaging changes (README,setup.py)\n  * Change license to GPLv3\n* v0.4.2:\n  * Preliminary support for L2VPNS\n  * Ethernet OAM support\n* v0.4.1:\n  * Fix version in setup.py\n* v0.4:\n  * Added full support for bgp flowspec (routing-options flow) configuration\n* v0.3:\n  * Support for basic interface configuration (name, description, vlan)\n  * Support for basic vlan configuration\n\n## License\n\nThis project is licensed under the GPL License - see the [LICENSE](LICENSE) file\nfor details.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/grnet/juniper-nxpy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "juniper-nxpy", "package_url": "https://pypi.org/project/juniper-nxpy/", "platform": "", "project_url": "https://pypi.org/project/juniper-nxpy/", "project_urls": {"Homepage": "https://github.com/grnet/juniper-nxpy"}, "release_url": "https://pypi.org/project/juniper-nxpy/0.4.2/", "requires_dist": ["lxml (>=3.4.0)"], "requires_python": "", "summary": "nxpy: Network XML Python Proxy", "version": "0.4.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>nxpy: Network XML Python Proxy</h1>\n<p><code>nxpy</code> maps exported XML configuration (from Juniper network devices) to python\nclasses. It is compatible only with Junipers' xml configuration and is developed\nto work alongside <a href=\"https://github.com/ncclient/ncclient\" rel=\"nofollow\">ncclient</a>.</p>\n<p>nxpy allows for retrieving the device configuration in xml format (using either\nnetconf or \"show configuration | display xml\" via an expect script), transform\nthe configuration to python classes in order to manipulate them (view, edit,\ndelete).  After editing, the configuration can be applied back to the device via\nnetconf or cli expect.</p>\n<p>Furthermore, it allows for building configuration via python classes, and apply\nit to the device(s) via netconf or cli expect.  For the time, it supports\nlimited configuration changes.</p>\n<h2>Installing</h2>\n<p>Requirements:</p>\n<ul>\n<li>Python 2.6 &lt;= version &lt; 3.0</li>\n<li>lxml (tested with 2.2.6)</li>\n</ul>\n<p>To install:</p>\n<pre><code>python setup.py install\n</code></pre>\n<h2>Examples</h2>\n<ul>\n<li>Grab the configuration in xml format</li>\n</ul>\n<p>Let's say that you have grabbed your Juniper device configuration in xml format\n(This is STRICT!!!). You can use either \"show configuration | display xml\" (and\ncopy paste the output to a file), or use an automated cli excpect script or\ninvoke netconf.  nxpy is developed as a companion to\n<a href=\"https://github.com/ncclient/ncclient\" rel=\"nofollow\">ncclient</a>.</p>\n<ul>\n<li>Feed the configuration to nxpy</li>\n</ul>\n<pre><code>import nxpy as np\nconf = np.Parser(&lt;configuration_file_OR_configuration_text&gt;)\nconf = conf.export()\n</code></pre>\n<p>To check if it worked:</p>\n<pre><code>conf.interfaces\n</code></pre>\n<p>(...you should get the list of device interfaces)</p>\n<h2>Changelog</h2>\n<ul>\n<li>v0.4.3:\n<ul>\n<li>Python packaging changes (README,setup.py)</li>\n<li>Change license to GPLv3</li>\n</ul>\n</li>\n<li>v0.4.2:\n<ul>\n<li>Preliminary support for L2VPNS</li>\n<li>Ethernet OAM support</li>\n</ul>\n</li>\n<li>v0.4.1:\n<ul>\n<li>Fix version in setup.py</li>\n</ul>\n</li>\n<li>v0.4:\n<ul>\n<li>Added full support for bgp flowspec (routing-options flow) configuration</li>\n</ul>\n</li>\n<li>v0.3:\n<ul>\n<li>Support for basic interface configuration (name, description, vlan)</li>\n<li>Support for basic vlan configuration</li>\n</ul>\n</li>\n</ul>\n<h2>License</h2>\n<p>This project is licensed under the GPL License - see the <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> file\nfor details.</p>\n\n          </div>"}, "last_serial": 5221398, "releases": {"0.4.2": [{"comment_text": "", "digests": {"md5": "ad4b0699102eed7345644389201ecb37", "sha256": "1e58057ec997d37c54e1e617519dbc2a541ab64c9de0b22f2f50253a00714428"}, "downloads": -1, "filename": "juniper_nxpy-0.4.2-py2-none-any.whl", "has_sig": false, "md5_digest": "ad4b0699102eed7345644389201ecb37", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21217, "upload_time": "2019-05-03T11:16:41", "upload_time_iso_8601": "2019-05-03T11:16:41.313682Z", "url": "https://files.pythonhosted.org/packages/0b/e7/ec827a5313567b2a59d27a4f97f2baa4060256a00af165964bc63ee2d180/juniper_nxpy-0.4.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ecb6d117926298669f900b1808fcacf7", "sha256": "63003fa1456530fd8dce4ce04f8e26d05692604fac53e89a600c33320100ee93"}, "downloads": -1, "filename": "juniper-nxpy-0.4.2.tar.gz", "has_sig": false, "md5_digest": "ecb6d117926298669f900b1808fcacf7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9489, "upload_time": "2019-05-03T11:16:43", "upload_time_iso_8601": "2019-05-03T11:16:43.648617Z", "url": "https://files.pythonhosted.org/packages/ad/82/a808ff5708b74aedcfeb3f693c2e736a217db884e516766d8ecd5f2f3d3c/juniper-nxpy-0.4.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ad4b0699102eed7345644389201ecb37", "sha256": "1e58057ec997d37c54e1e617519dbc2a541ab64c9de0b22f2f50253a00714428"}, "downloads": -1, "filename": "juniper_nxpy-0.4.2-py2-none-any.whl", "has_sig": false, "md5_digest": "ad4b0699102eed7345644389201ecb37", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21217, "upload_time": "2019-05-03T11:16:41", "upload_time_iso_8601": "2019-05-03T11:16:41.313682Z", "url": "https://files.pythonhosted.org/packages/0b/e7/ec827a5313567b2a59d27a4f97f2baa4060256a00af165964bc63ee2d180/juniper_nxpy-0.4.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ecb6d117926298669f900b1808fcacf7", "sha256": "63003fa1456530fd8dce4ce04f8e26d05692604fac53e89a600c33320100ee93"}, "downloads": -1, "filename": "juniper-nxpy-0.4.2.tar.gz", "has_sig": false, "md5_digest": "ecb6d117926298669f900b1808fcacf7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9489, "upload_time": "2019-05-03T11:16:43", "upload_time_iso_8601": "2019-05-03T11:16:43.648617Z", "url": "https://files.pythonhosted.org/packages/ad/82/a808ff5708b74aedcfeb3f693c2e736a217db884e516766d8ecd5f2f3d3c/juniper-nxpy-0.4.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:22 2020"}