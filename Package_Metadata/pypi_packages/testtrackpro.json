{"info": {"author": "Doug Napoleone", "author_email": "doug.napoleone+testtrackpro@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "TestTrack SOAP Python Interface\n===================================\n\nTestTrack Pro is the Issue Management software from Seapine Software\n\nTestTrack is a registered trademark of Seapine Software.\nhttp://www.seapine.com/testtrack.html\n\nThis library uses the suds library to talk to the TestTrack SDK SOAP API\nand includes some helpful extensions for managing your client code and\ninteractions. There are a number of issues (and crashes) when talking to the\nlatest TestTrack SOAP API using suds, and this library addresses those.\n\nWhile this module is named ``testtrackpro`` it will work with TestTrack RM\n(Requirement Management) and TestTrack TCM (Test Case Management).\n\nThe TestTrack SOAP API uses a client cookie for managing login sessions.\nThis cookie must be supplied on (almost) every API call. This library\nprovides a client wrapper object which will manage the session cookie, and\neven releasing the cookie (logging off) as part of a context exit.\n\nThe TestTrack SOAP API includes entity edit locking where a write lock is\nimplicit in every edit API call. The client must release the lock with either\na save or cancelSave API call. The lock will remain for 15 minuites, making\nother attepts to edit fail on the entity.\n\nPython contexts allow for dealing with safely releasing locks on success or\nerror. All objects returned form API calls which start with the string 'edit'\nwill return a context object that can be used with the 'with' statement.\nAt the end of the statement block the appropriate 'save' API call will be\nmade. If an exception occurs in the block, the appropriate 'cancelSave' API\ncall will be made. In either situation the lock will be released.\n\n.. code:: python\n\n    import testtrackpro\n    with testtrackpro.TTP('http://hostname/', 'Project', 'username', 'password') as ttp:\n        with ttp.editDefect(11, bDownloadAttachments=False) as defect:\n            defect.priority = \"Immediate\"\n        ## ttp.saveDefect(defect) is called, or ttp.cancelSave(defect.recordid) on exception.\n    ## ttp.DatabaseLogoff() is called, even if an exception occured.\n\n\nAdditionally there is a new special edit context API extension when using\npython contexts for ignoring the edit lock error, when someone else has the\nedit lock on an entity. This is very useful when you do not want your script\nor service to error out on a failed edit lock, but instead want to continue\nprocessing.\n\n\n.. code:: python\n\n    import testtrackpro\n    with testtrackpro.TTP('http://hostname/', 'Project', 'username', 'password') as ttp:\n        with ttp.editDefect(11, bDownloadAttachments=False, ignoreEditLockError=True) as defect:\n            defect.priority = \"Immediate\"\n        ## ttp.saveDefect(defect) is called, or ttp.cancelSave(defect.recordid) on exception.\n        \n        assert not testtrackpro.have_edit_lock(defect)\n        \n        if testtrackpro.was_saved(defect):\n            # The priority was changed\n            pass\n        elif testtrackpro.has_errored(defect):\n            # It was not saved due to an error\n            pass\n            if testtrackpro.edit_lock_failed(defect):\n                # because the edit lock failed\n                pass\n            else:\n                # because of some other error\n                # NOTE: unless there was other code to catch and ignore the\n                #       error, this code is unreachable.\n                pass\n    ## ttp.DatabaseLogoff() is called, even if an exception occured.\n\n\nReferences\n----------\n\nProject:\n\n* `Documentation <http://pythonhosted.org/testtrackpro/>`_\n* `PyPi <https://pypi.python.org/pypi/testtrackpro>`_\n* `GitHub <https://github.com/dougn/python-testtrackpro>`_\n\nExternal:\n\n* `suds <https://fedorahosted.org/suds/>`_\n* `Seapine Software <http://www.seapine.com/>`_\n* `TestTrack <http://www.seapine.com/testtrack.html>`_\n* `TestTrack Pro <http://www.seapine.com/ttpro.html>`_\n* `TestTrack SOAP API <http://labs.seapine.com/TestTrackSDK.php>`_\n* `TestTrack Python Tutorial <http://labs.seapine.com/wiki/index.php/TestTrack_SOAP_SDK_Tutorial_-_Python>`_", "description_content_type": null, "docs_url": "https://pythonhosted.org/testtrackpro/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dougn/python-testtrackpro/", "keywords": "testtrack,testtrackpro,soap,suds", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "testtrackpro", "package_url": "https://pypi.org/project/testtrackpro/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/testtrackpro/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/dougn/python-testtrackpro/"}, "release_url": "https://pypi.org/project/testtrackpro/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "Python interface to TestTrackPro SOAP API", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>TestTrack Pro is the Issue Management software from Seapine Software</p>\n<p>TestTrack is a registered trademark of Seapine Software.\n<a href=\"http://www.seapine.com/testtrack.html\" rel=\"nofollow\">http://www.seapine.com/testtrack.html</a></p>\n<p>This library uses the suds library to talk to the TestTrack SDK SOAP API\nand includes some helpful extensions for managing your client code and\ninteractions. There are a number of issues (and crashes) when talking to the\nlatest TestTrack SOAP API using suds, and this library addresses those.</p>\n<p>While this module is named <tt>testtrackpro</tt> it will work with TestTrack RM\n(Requirement Management) and TestTrack TCM (Test Case Management).</p>\n<p>The TestTrack SOAP API uses a client cookie for managing login sessions.\nThis cookie must be supplied on (almost) every API call. This library\nprovides a client wrapper object which will manage the session cookie, and\neven releasing the cookie (logging off) as part of a context exit.</p>\n<p>The TestTrack SOAP API includes entity edit locking where a write lock is\nimplicit in every edit API call. The client must release the lock with either\na save or cancelSave API call. The lock will remain for 15 minuites, making\nother attepts to edit fail on the entity.</p>\n<p>Python contexts allow for dealing with safely releasing locks on success or\nerror. All objects returned form API calls which start with the string \u2018edit\u2019\nwill return a context object that can be used with the \u2018with\u2019 statement.\nAt the end of the statement block the appropriate \u2018save\u2019 API call will be\nmade. If an exception occurs in the block, the appropriate \u2018cancelSave\u2019 API\ncall will be made. In either situation the lock will be released.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">testtrackpro</span>\n<span class=\"k\">with</span> <span class=\"n\">testtrackpro</span><span class=\"o\">.</span><span class=\"n\">TTP</span><span class=\"p\">(</span><span class=\"s1\">'http://hostname/'</span><span class=\"p\">,</span> <span class=\"s1\">'Project'</span><span class=\"p\">,</span> <span class=\"s1\">'username'</span><span class=\"p\">,</span> <span class=\"s1\">'password'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">ttp</span><span class=\"p\">:</span>\n    <span class=\"k\">with</span> <span class=\"n\">ttp</span><span class=\"o\">.</span><span class=\"n\">editDefect</span><span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"n\">bDownloadAttachments</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">defect</span><span class=\"p\">:</span>\n        <span class=\"n\">defect</span><span class=\"o\">.</span><span class=\"n\">priority</span> <span class=\"o\">=</span> <span class=\"s2\">\"Immediate\"</span>\n    <span class=\"c1\">## ttp.saveDefect(defect) is called, or ttp.cancelSave(defect.recordid) on exception.</span>\n<span class=\"c1\">## ttp.DatabaseLogoff() is called, even if an exception occured.</span>\n</pre>\n<p>Additionally there is a new special edit context API extension when using\npython contexts for ignoring the edit lock error, when someone else has the\nedit lock on an entity. This is very useful when you do not want your script\nor service to error out on a failed edit lock, but instead want to continue\nprocessing.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">testtrackpro</span>\n<span class=\"k\">with</span> <span class=\"n\">testtrackpro</span><span class=\"o\">.</span><span class=\"n\">TTP</span><span class=\"p\">(</span><span class=\"s1\">'http://hostname/'</span><span class=\"p\">,</span> <span class=\"s1\">'Project'</span><span class=\"p\">,</span> <span class=\"s1\">'username'</span><span class=\"p\">,</span> <span class=\"s1\">'password'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">ttp</span><span class=\"p\">:</span>\n    <span class=\"k\">with</span> <span class=\"n\">ttp</span><span class=\"o\">.</span><span class=\"n\">editDefect</span><span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"n\">bDownloadAttachments</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">ignoreEditLockError</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">defect</span><span class=\"p\">:</span>\n        <span class=\"n\">defect</span><span class=\"o\">.</span><span class=\"n\">priority</span> <span class=\"o\">=</span> <span class=\"s2\">\"Immediate\"</span>\n    <span class=\"c1\">## ttp.saveDefect(defect) is called, or ttp.cancelSave(defect.recordid) on exception.</span>\n\n    <span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"n\">testtrackpro</span><span class=\"o\">.</span><span class=\"n\">have_edit_lock</span><span class=\"p\">(</span><span class=\"n\">defect</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">testtrackpro</span><span class=\"o\">.</span><span class=\"n\">was_saved</span><span class=\"p\">(</span><span class=\"n\">defect</span><span class=\"p\">):</span>\n        <span class=\"c1\"># The priority was changed</span>\n        <span class=\"k\">pass</span>\n    <span class=\"k\">elif</span> <span class=\"n\">testtrackpro</span><span class=\"o\">.</span><span class=\"n\">has_errored</span><span class=\"p\">(</span><span class=\"n\">defect</span><span class=\"p\">):</span>\n        <span class=\"c1\"># It was not saved due to an error</span>\n        <span class=\"k\">pass</span>\n        <span class=\"k\">if</span> <span class=\"n\">testtrackpro</span><span class=\"o\">.</span><span class=\"n\">edit_lock_failed</span><span class=\"p\">(</span><span class=\"n\">defect</span><span class=\"p\">):</span>\n            <span class=\"c1\"># because the edit lock failed</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># because of some other error</span>\n            <span class=\"c1\"># NOTE: unless there was other code to catch and ignore the</span>\n            <span class=\"c1\">#       error, this code is unreachable.</span>\n            <span class=\"k\">pass</span>\n<span class=\"c1\">## ttp.DatabaseLogoff() is called, even if an exception occured.</span>\n</pre>\n<div id=\"references\">\n<h2>References</h2>\n<p>Project:</p>\n<ul>\n<li><a href=\"http://pythonhosted.org/testtrackpro/\" rel=\"nofollow\">Documentation</a></li>\n<li><a href=\"https://pypi.python.org/pypi/testtrackpro\" rel=\"nofollow\">PyPi</a></li>\n<li><a href=\"https://github.com/dougn/python-testtrackpro\" rel=\"nofollow\">GitHub</a></li>\n</ul>\n<p>External:</p>\n<ul>\n<li><a href=\"https://fedorahosted.org/suds/\" rel=\"nofollow\">suds</a></li>\n<li><a href=\"http://www.seapine.com/\" rel=\"nofollow\">Seapine Software</a></li>\n<li><a href=\"http://www.seapine.com/testtrack.html\" rel=\"nofollow\">TestTrack</a></li>\n<li><a href=\"http://www.seapine.com/ttpro.html\" rel=\"nofollow\">TestTrack Pro</a></li>\n<li><a href=\"http://labs.seapine.com/TestTrackSDK.php\" rel=\"nofollow\">TestTrack SOAP API</a></li>\n<li><a href=\"http://labs.seapine.com/wiki/index.php/TestTrack_SOAP_SDK_Tutorial_-_Python\" rel=\"nofollow\">TestTrack Python Tutorial</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 800496, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0d1a3be46b00e886c1bb89a2f0153e12", "sha256": "6ad8c0cc73fc3d06685df0ad782d86564c51ddd4dbbcf01c3beef28157ff165e"}, "downloads": -1, "filename": "testtrackpro-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0d1a3be46b00e886c1bb89a2f0153e12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15057, "upload_time": "2013-05-13T05:52:00", "upload_time_iso_8601": "2013-05-13T05:52:00.109722Z", "url": "https://files.pythonhosted.org/packages/9e/11/faed702e46b50c7ad9833200d2f8ee8019353bf6802f038f8f5a5dc43cf8/testtrackpro-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "37fc847eb733396664d4c478de5323dc", "sha256": "9f49dfe59aacff865c1322e2a69f635373f972715dfe234ddf57b922bf037e71"}, "downloads": -1, "filename": "testtrackpro-0.1.1.tar.gz", "has_sig": false, "md5_digest": "37fc847eb733396664d4c478de5323dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15225, "upload_time": "2013-05-13T16:55:42", "upload_time_iso_8601": "2013-05-13T16:55:42.685614Z", "url": "https://files.pythonhosted.org/packages/61/b2/56886893572a61b8c84eff846bfc56fbb6203cfd43b58124d6e5bd866167/testtrackpro-0.1.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "26fb505db99b73b51fd8f69f0b50e42b", "sha256": "8249fd7672daf3ef80cfe7c08293169b5fe1a85269a5c3e63b639898d9f3ed7d"}, "downloads": -1, "filename": "testtrackpro-1.0.0.tar.gz", "has_sig": false, "md5_digest": "26fb505db99b73b51fd8f69f0b50e42b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17730, "upload_time": "2013-05-30T22:37:19", "upload_time_iso_8601": "2013-05-30T22:37:19.456742Z", "url": "https://files.pythonhosted.org/packages/73/51/c31e784024d7bb56f51b4d7855b82b358ed58c43ac1f249024f59da6d132/testtrackpro-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "82b8eb23b66fec16fbf72a6705e7e660", "sha256": "7bdfaa9998de7a706c9fb099dfff2fc184315126f56f5649d6ab79e50e5eaf3d"}, "downloads": -1, "filename": "testtrackpro-1.0.1.tar.gz", "has_sig": false, "md5_digest": "82b8eb23b66fec16fbf72a6705e7e660", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17754, "upload_time": "2013-06-23T22:37:41", "upload_time_iso_8601": "2013-06-23T22:37:41.710391Z", "url": "https://files.pythonhosted.org/packages/bc/cf/9f4f2c360ab51690db7572078265196bb4db6f73623b56b1768b93480a05/testtrackpro-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "82b8eb23b66fec16fbf72a6705e7e660", "sha256": "7bdfaa9998de7a706c9fb099dfff2fc184315126f56f5649d6ab79e50e5eaf3d"}, "downloads": -1, "filename": "testtrackpro-1.0.1.tar.gz", "has_sig": false, "md5_digest": "82b8eb23b66fec16fbf72a6705e7e660", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17754, "upload_time": "2013-06-23T22:37:41", "upload_time_iso_8601": "2013-06-23T22:37:41.710391Z", "url": "https://files.pythonhosted.org/packages/bc/cf/9f4f2c360ab51690db7572078265196bb4db6f73623b56b1768b93480a05/testtrackpro-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:16 2020"}