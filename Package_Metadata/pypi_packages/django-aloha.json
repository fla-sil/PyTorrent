{"info": {"author": "Igor Katson", "author_email": "igor.katson@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "============\ndjango-aloha\n============\n\nWhat is django-aloha\n--------------------\n\ndjango-aloha is a django app to easily integrate editing with Aloha\nWYSIWIG editor in django apps.\n\nYou just edit the blocks of text on your pages, no admin needed.\n\n\nHow it works\n------------\n\ndjango-aloha wraps editable text fields into separate forms. See how\nto do it in the \"Usage\" section.\n\n\nInstallation\n------------\n\n1. download aloha-editor from GitHub https://github.com/alohaeditor/Aloha-Editor\n\n   my version was commit 787859e2313337f171f32b7574cec23393fa6a77\n\n2. For existing JS and CSS to work (this is optional, you can create your own ones)\n   place the aloha files into your {{MEDIA_URL}}js/aloha/, so that the\n   \"lib\" directory is in {{MEDIA_URL}}js/aloha/lib/.\n\n3. Install django-aloha into your python::\n\n       easy_install django-aloha\n\n4. Add \"django-aloha\" to INSTALLED_APPS in settings.py\n\n5. Make sure you have jquery enabled.\n\n6. (Optional) add existing JS and CSS to your templates, where you usually place JS and CSS::\n\n       {% include 'aloha/includes/js.html' %}\n       {% include 'aloha/includes/css.html' %}\n\n   Or you can just copy these files into your TEMPLATES dir, and edit\n   according to your needs.\n\n\nUsage\n-----\nUse in your templates like this.\n\n1. Option one - you want to edit a certain field on a model instance::\n\n       {% load aloha_tags %}\n\n       {% aloha my_object_from_the_database 'fieldname_where_text_is' [url_to_save] %}\n          {{ my_object_from_the_database.fieldname_where_text_is|safe }}\n       {% endaloha %}\n\n   If you want, you can add an optional \"url\" parameter to do custom\n   POST processing. If not provided, aloha.views.save will be used.\n\n2. Option two - you want to edit arbitrary text, and optionally, provide and url to save it::\n\n       {% load aloha_tags %}\n\n       {% aloha [url_to_save_to] %}\n          <p>Place here what you want to edit</p>\n       {% endaloha %}\n\nThe custom save URL should process POST requests, and accepts following parameters:\n\n- object_name\n- field_name\n- object_pk\n- content \n\nAll of these are generated by the tag, no need to worry about them.\n\nTODO\n----\n\n- Add more strict permission processing (not it just uses\n  request.user.is_staff to check for permissions)\n\n- Process thourgh AJAX instead of raw POSTS (to protect data loss on\n  errors)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/descent/django-aloha", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-aloha", "package_url": "https://pypi.org/project/django-aloha/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-aloha/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/descent/django-aloha"}, "release_url": "https://pypi.org/project/django-aloha/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "django app to easily integrate editing with Aloha WYSIWIG editor in django apps.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"what-is-django-aloha\">\n<h2>What is django-aloha</h2>\n<p>django-aloha is a django app to easily integrate editing with Aloha\nWYSIWIG editor in django apps.</p>\n<p>You just edit the blocks of text on your pages, no admin needed.</p>\n</div>\n<div id=\"how-it-works\">\n<h2>How it works</h2>\n<p>django-aloha wraps editable text fields into separate forms. See how\nto do it in the \u201cUsage\u201d section.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li><p>download aloha-editor from GitHub <a href=\"https://github.com/alohaeditor/Aloha-Editor\" rel=\"nofollow\">https://github.com/alohaeditor/Aloha-Editor</a></p>\n<p>my version was commit 787859e2313337f171f32b7574cec23393fa6a77</p>\n</li>\n<li><p>For existing JS and CSS to work (this is optional, you can create your own ones)\nplace the aloha files into your {{MEDIA_URL}}js/aloha/, so that the\n\u201clib\u201d directory is in {{MEDIA_URL}}js/aloha/lib/.</p>\n</li>\n<li><p>Install django-aloha into your python:</p>\n<pre>easy_install django-aloha\n</pre>\n</li>\n<li><p>Add \u201cdjango-aloha\u201d to INSTALLED_APPS in settings.py</p>\n</li>\n<li><p>Make sure you have jquery enabled.</p>\n</li>\n<li><p>(Optional) add existing JS and CSS to your templates, where you usually place JS and CSS:</p>\n<pre>{% include 'aloha/includes/js.html' %}\n{% include 'aloha/includes/css.html' %}\n</pre>\n<p>Or you can just copy these files into your TEMPLATES dir, and edit\naccording to your needs.</p>\n</li>\n</ol>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Use in your templates like this.</p>\n<ol>\n<li><p>Option one - you want to edit a certain field on a model instance:</p>\n<pre>{% load aloha_tags %}\n\n{% aloha my_object_from_the_database 'fieldname_where_text_is' [url_to_save] %}\n   {{ my_object_from_the_database.fieldname_where_text_is|safe }}\n{% endaloha %}\n</pre>\n<p>If you want, you can add an optional \u201curl\u201d parameter to do custom\nPOST processing. If not provided, aloha.views.save will be used.</p>\n</li>\n<li><p>Option two - you want to edit arbitrary text, and optionally, provide and url to save it:</p>\n<pre>{% load aloha_tags %}\n\n{% aloha [url_to_save_to] %}\n   &lt;p&gt;Place here what you want to edit&lt;/p&gt;\n{% endaloha %}\n</pre>\n</li>\n</ol>\n<p>The custom save URL should process POST requests, and accepts following parameters:</p>\n<ul>\n<li>object_name</li>\n<li>field_name</li>\n<li>object_pk</li>\n<li>content</li>\n</ul>\n<p>All of these are generated by the tag, no need to worry about them.</p>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Add more strict permission processing (not it just uses\nrequest.user.is_staff to check for permissions)</li>\n<li>Process thourgh AJAX instead of raw POSTS (to protect data loss on\nerrors)</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 789085, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "82794148856c935a115c538771a123c6", "sha256": "41ed580d2b6261e49ccdb98b2034850ddf8d75d24ddef6fd0600d15a1d4f34df"}, "downloads": -1, "filename": "django-aloha-0.0.1.tar.gz", "has_sig": false, "md5_digest": "82794148856c935a115c538771a123c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5001, "upload_time": "2012-01-25T15:34:39", "upload_time_iso_8601": "2012-01-25T15:34:39.454714Z", "url": "https://files.pythonhosted.org/packages/98/54/59f6cceb562cde71d0e3d8eb3b6bf9077e4e4578eb72ba0cb214672ed76f/django-aloha-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "82794148856c935a115c538771a123c6", "sha256": "41ed580d2b6261e49ccdb98b2034850ddf8d75d24ddef6fd0600d15a1d4f34df"}, "downloads": -1, "filename": "django-aloha-0.0.1.tar.gz", "has_sig": false, "md5_digest": "82794148856c935a115c538771a123c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5001, "upload_time": "2012-01-25T15:34:39", "upload_time_iso_8601": "2012-01-25T15:34:39.454714Z", "url": "https://files.pythonhosted.org/packages/98/54/59f6cceb562cde71d0e3d8eb3b6bf9077e4e4578eb72ba0cb214672ed76f/django-aloha-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:42 2020"}