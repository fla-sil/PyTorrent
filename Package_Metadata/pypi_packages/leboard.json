{"info": {"author": "GSchutz", "author_email": "guilherme@gschutz.com", "bugtrack_url": null, "classifiers": [], "description": "Le Board (beta)\n===============\n\nLe Board, a simple leaderboard generator for ranking your\nalgorithms experiments.\n\nInstall\n=======\n\nInstall with ``pip`` and configure with ``init``, linking a Google\naccount is the recommended choice.\n\n.. code-block:: bash\n\n    $ pip install leboard\n    $ leboard init\n\nsketch of ``leboard init``\n------------------------------\n\n..\n\nChoose an option for Data Handler (1):\n\n1) Google Firebase (recommended)\n2) Local file system (no shared options)\n\n\nif option 1)\n------------\n\n..\n\n* Create a Firebase project at https://console.firebase.google.com/\n* Get the gcloud credential at https://console.cloud.google.com/iam-admin/serviceaccounts/project\n* Access the page Database -> activate the Firestore database\n\n\nif option 2)\n------------\n\n..\n\n* Choose a path to store your boards (~/.leboard):\n\n\nUsage\n=====\n\n.. code-block:: python\n\n    import leboard\n    \n    letask = leboard.TaskBoard(\"MNIST\")\n    \n    # other members will have access to the MNIST task too\n    # (restrict a members definition only when a task is set)\n    letask.members([\"rob@gmail.com\", \"jane@mail.com\"])\n    \n    # do your stuff\n    # ...\n    \n    experiment = letask.Entry()\n    \n    experiment.set(\"accuracy\", accuracy)\n    experiment.set(\"loss\", loss)\n    experiment.set(\"parameters\", params, hide=True)\n    experiment.set(\"confusion_image\", confusion_image)\n    \n    # commit will save to DataHandler available/configured\n    # (proposed is local simple file storage, and shared google firebase)\n    experiment.commit()\n    \nLeaderboard\n-----------\n\nShow all experiments with links to detailed resources,\nthis can open a page hosted in firebase.\n\n\n* keep experiment data in order of creation\n\n.. code-block:: python\n\n    letask.leaderboard(\"MNIST\", \"accuracy\")\n\nAdvanced?\n=========\n\nResource Typing?\n----------------\n\nEntry can have different types, this can be usefull for\nhandling resources like image, or HTML pages, to show and\ninteract with them.\n\n.. code-block:: python\n\n    from leboard import types as lbt\n    \n    experiment.set(\"accuracy\", accuracy)\n    experiment.set(\"loss\", loss)\n    experiment.set(\"confusion_image\", lbt.Image(confusion_image))\n    experiment.set(\"notebook_html\", lbt.HTML(notebook_html))\n    \n\nCommitting an ``Entry`` could automatically save a copy of\nthe current notebook state to the ``DataHandler``.\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/GSchutz/leboard/archive/0.1.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/GSchutz/leboard", "keywords": "leaderboard", "license": "", "maintainer": "", "maintainer_email": "", "name": "leboard", "package_url": "https://pypi.org/project/leboard/", "platform": "", "project_url": "https://pypi.org/project/leboard/", "project_urls": {"Download": "https://github.com/GSchutz/leboard/archive/0.1.1.tar.gz", "Homepage": "https://github.com/GSchutz/leboard"}, "release_url": "https://pypi.org/project/leboard/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Le Board, a simple leaderboard generator for ranking your algorithms experiments", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"le-board-beta\">\n<h2>Le Board (beta)</h2>\n<p>Le Board, a simple leaderboard generator for ranking your\nalgorithms experiments.</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Install with <tt>pip</tt> and configure with <tt>init</tt>, linking a Google\naccount is the recommended choice.</p>\n<pre>$ pip install leboard\n$ leboard init\n</pre>\n<div id=\"sketch-of-leboard-init\">\n<h3>sketch of <tt>leboard init</tt></h3>\n<p>Choose an option for Data Handler (1):</p>\n<ol>\n<li>Google Firebase (recommended)</li>\n<li>Local file system (no shared options)</li>\n</ol>\n</div>\n<div id=\"if-option-1\">\n<h3>if option 1)</h3>\n<ul>\n<li>Create a Firebase project at <a href=\"https://console.firebase.google.com/\" rel=\"nofollow\">https://console.firebase.google.com/</a></li>\n<li>Get the gcloud credential at <a href=\"https://console.cloud.google.com/iam-admin/serviceaccounts/project\" rel=\"nofollow\">https://console.cloud.google.com/iam-admin/serviceaccounts/project</a></li>\n<li>Access the page Database -&gt; activate the Firestore database</li>\n</ul>\n</div>\n<div id=\"if-option-2\">\n<h3>if option 2)</h3>\n<ul>\n<li>Choose a path to store your boards (~/.leboard):</li>\n</ul>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">leboard</span>\n\n<span class=\"n\">letask</span> <span class=\"o\">=</span> <span class=\"n\">leboard</span><span class=\"o\">.</span><span class=\"n\">TaskBoard</span><span class=\"p\">(</span><span class=\"s2\">\"MNIST\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># other members will have access to the MNIST task too</span>\n<span class=\"c1\"># (restrict a members definition only when a task is set)</span>\n<span class=\"n\">letask</span><span class=\"o\">.</span><span class=\"n\">members</span><span class=\"p\">([</span><span class=\"s2\">\"rob@gmail.com\"</span><span class=\"p\">,</span> <span class=\"s2\">\"jane@mail.com\"</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># do your stuff</span>\n<span class=\"c1\"># ...</span>\n\n<span class=\"n\">experiment</span> <span class=\"o\">=</span> <span class=\"n\">letask</span><span class=\"o\">.</span><span class=\"n\">Entry</span><span class=\"p\">()</span>\n\n<span class=\"n\">experiment</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">\"accuracy\"</span><span class=\"p\">,</span> <span class=\"n\">accuracy</span><span class=\"p\">)</span>\n<span class=\"n\">experiment</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">\"loss\"</span><span class=\"p\">,</span> <span class=\"n\">loss</span><span class=\"p\">)</span>\n<span class=\"n\">experiment</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">\"parameters\"</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">hide</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">experiment</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">\"confusion_image\"</span><span class=\"p\">,</span> <span class=\"n\">confusion_image</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># commit will save to DataHandler available/configured</span>\n<span class=\"c1\"># (proposed is local simple file storage, and shared google firebase)</span>\n<span class=\"n\">experiment</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n</pre>\n<div id=\"leaderboard\">\n<h3>Leaderboard</h3>\n<p>Show all experiments with links to detailed resources,\nthis can open a page hosted in firebase.</p>\n<ul>\n<li>keep experiment data in order of creation</li>\n</ul>\n<pre><span class=\"n\">letask</span><span class=\"o\">.</span><span class=\"n\">leaderboard</span><span class=\"p\">(</span><span class=\"s2\">\"MNIST\"</span><span class=\"p\">,</span> <span class=\"s2\">\"accuracy\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"advanced\">\n<h2>Advanced?</h2>\n<h2 id=\"resource-typing\"><span class=\"section-subtitle\">Resource Typing?</span></h2>\n<p>Entry can have different types, this can be usefull for\nhandling resources like image, or HTML pages, to show and\ninteract with them.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">leboard</span> <span class=\"kn\">import</span> <span class=\"n\">types</span> <span class=\"k\">as</span> <span class=\"n\">lbt</span>\n\n<span class=\"n\">experiment</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">\"accuracy\"</span><span class=\"p\">,</span> <span class=\"n\">accuracy</span><span class=\"p\">)</span>\n<span class=\"n\">experiment</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">\"loss\"</span><span class=\"p\">,</span> <span class=\"n\">loss</span><span class=\"p\">)</span>\n<span class=\"n\">experiment</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">\"confusion_image\"</span><span class=\"p\">,</span> <span class=\"n\">lbt</span><span class=\"o\">.</span><span class=\"n\">Image</span><span class=\"p\">(</span><span class=\"n\">confusion_image</span><span class=\"p\">))</span>\n<span class=\"n\">experiment</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">\"notebook_html\"</span><span class=\"p\">,</span> <span class=\"n\">lbt</span><span class=\"o\">.</span><span class=\"n\">HTML</span><span class=\"p\">(</span><span class=\"n\">notebook_html</span><span class=\"p\">))</span>\n</pre>\n<p>Committing an <tt>Entry</tt> could automatically save a copy of\nthe current notebook state to the <tt>DataHandler</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 3762583, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "7280781f2402b46723dfa9a32a93fc75", "sha256": "918ae91a9eb53523964f6f023a3473adcfdaf69775ebb0f954fb4c7fc6ff78a6"}, "downloads": -1, "filename": "leboard-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7280781f2402b46723dfa9a32a93fc75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5874, "upload_time": "2018-04-13T17:31:45", "upload_time_iso_8601": "2018-04-13T17:31:45.489521Z", "url": "https://files.pythonhosted.org/packages/42/61/e0d9db908096c46a900b45adafd315dbbd61a3068eb2f5f10124b79ecc91/leboard-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7280781f2402b46723dfa9a32a93fc75", "sha256": "918ae91a9eb53523964f6f023a3473adcfdaf69775ebb0f954fb4c7fc6ff78a6"}, "downloads": -1, "filename": "leboard-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7280781f2402b46723dfa9a32a93fc75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5874, "upload_time": "2018-04-13T17:31:45", "upload_time_iso_8601": "2018-04-13T17:31:45.489521Z", "url": "https://files.pythonhosted.org/packages/42/61/e0d9db908096c46a900b45adafd315dbbd61a3068eb2f5f10124b79ecc91/leboard-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:16 2020"}