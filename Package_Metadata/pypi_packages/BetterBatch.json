{"info": {"author": "Mark Mc Mahon", "author_email": "mark.m.mcmahon@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Programming Language :: Python", "Topic :: Software Development", "Topic :: Utilities"], "description": "BetterBatch scripts are designed as a middle ground \nbetween shell/batch scripts and more complete programming languages \n(Python, Perl, etc.). \n\nIt is designed to make it very easy to call shell commands but to also do so \nsafely, in that an error will make the script stop immediately.\n\nAs such you can generally provide scripts that do not have to perform much\nerror checking while still being very safe.\n\nAlso scripts are validated as much as possible before executation starts, so \nthis should avoid simple errors only being found after some steps have been \nexecuted.\n\nBetterBatch has been designed as a very simple process automation script (e.g.\nbuild script, and could be used for processes that are not required to track\nbuild dependencies (waf, scons are more suitable for those kinds of projects).\n\n\nHere is an example script::\n\n\n    # or user specific configuration\n    - if exist <shell.username>.bb:\n        - include <shell.username>.bb\n\n    # you can define your own variables\n    - set project_root=<__script_dir__>\n    \n    - copy <project_root>\\*.xyz <shell.tmp>\\backup\n\nTested with python 2.7.1\n\nTest coverage for most releases is over 90%", "description_content_type": null, "docs_url": "https://pythonhosted.org/BetterBatch/", "download_url": "http://betterbatch.googlecode.com/files/betterbatch-1.3.2.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://code.google.com/p/betterbatch/", "keywords": "python batch script automation", "license": "LGPL", "maintainer": null, "maintainer_email": null, "name": "BetterBatch", "package_url": "https://pypi.org/project/BetterBatch/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/BetterBatch/", "project_urls": {"Download": "http://betterbatch.googlecode.com/files/betterbatch-1.3.2.zip", "Homepage": "http://code.google.com/p/betterbatch/"}, "release_url": "https://pypi.org/project/BetterBatch/1.3.2/", "requires_dist": null, "requires_python": null, "summary": "Powerful batch file/script replacement", "version": "1.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>BetterBatch scripts are designed as a middle ground\nbetween shell/batch scripts and more complete programming languages\n(Python, Perl, etc.).</p>\n<p>It is designed to make it very easy to call shell commands but to also do so\nsafely, in that an error will make the script stop immediately.</p>\n<p>As such you can generally provide scripts that do not have to perform much\nerror checking while still being very safe.</p>\n<p>Also scripts are validated as much as possible before executation starts, so\nthis should avoid simple errors only being found after some steps have been\nexecuted.</p>\n<p>BetterBatch has been designed as a very simple process automation script (e.g.\nbuild script, and could be used for processes that are not required to track\nbuild dependencies (waf, scons are more suitable for those kinds of projects).</p>\n<p>Here is an example script:</p>\n<pre># or user specific configuration\n- if exist &lt;shell.username&gt;.bb:\n    - include &lt;shell.username&gt;.bb\n\n# you can define your own variables\n- set project_root=&lt;__script_dir__&gt;\n\n- copy &lt;project_root&gt;\\*.xyz &lt;shell.tmp&gt;\\backup\n</pre>\n<p>Tested with python 2.7.1</p>\n<p>Test coverage for most releases is over 90%</p>\n\n          </div>"}, "last_serial": 335344, "releases": {"0.9.4": [], "0.9.5": [], "0.9.6": [], "0.9.7": [], "0.9.8": [], "0.9.9": [], "1.0.0": [], "1.1.0": [], "1.1.1": [], "1.1.2": [], "1.1.3": [], "1.1.4": [], "1.2.0": [], "1.2.1": [], "1.2.2": [], "1.2.3": [], "1.3.0": [], "1.3.1": [], "1.3.2": []}, "urls": [], "timestamp": "Thu May  7 22:37:42 2020"}