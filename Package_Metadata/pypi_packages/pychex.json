{"info": {"author": "Brad Pitcher", "author_email": "bradpitcher@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: PyPy"], "description": "Pychex\n======\n\n.. image:: https://travis-ci.org/brad/pychex.svg?branch=master\n   :target: https://travis-ci.org/brad/pychex\n\n.. image:: https://coveralls.io/repos/brad/pychex/badge.png?branch=master\n   :target: https://coveralls.io/r/brad/pychex?branch=master\n\n.. image:: https://requires.io/github/brad/pychex/requirements.svg?branch=master\n   :target: https://requires.io/github/brad/pychex/requirements/?branch=master\n   :alt: Requirements Status\n\nPaychex Benefits OnLine access library and client\n\nThis library and command line client can be used to authorize and retrieve the\naccount summary data from Paychex Benefits OnLine. Note that this is only for\nthose who login using https://mypaychex.com. If you login to Paychex via\nhttps://paychexonline.com this application will not currently work, but with\nyour help we should be able to support it as well.\n\nRequirements\n============\n\n* Python >= 2.6, Python >= 3.x, or PyPy. You can download it from `here <https://www.python.org/>`_\n* Pip. If you have Python >= 2.7.9 or >= 3.4 then you already have ``pip``. Otherwise, please follow `these instructions <https://pip.pypa.io/en/latest/installing.html>`_\n\nInstall\n=======\n\nOnce you have satisfied the requirements listed above, install by running the\nfollowing command from the\n`terminal <http://cli.learncodethehardway.org/book/ex1.html>`_: ::\n\n    pip install pychex\n\nQuick start\n===========\n\nAfter installing you will have use of a command line ``pychex`` client\napplication. Run ``pychex authorize <username>`` to confirm your security\nimage and login. This will save your encrypted credentials to a\n``pychex.cfg`` file. NOTE: The encryption does very little to protect your\ncredentials from a determined and malicious intruder, and the ultimate\nresponsibility in protecting your credentials is yours. After you have\nauthorized the client, you can get a printout of your account summary by\nrunning ``pychex account_summary``. Full usage instructions below: ::\n\n    Pychex command-line interface\n\n    Usage:\n      pychex authorize <username> [--config=<config_file>]\n      pychex account_summary [--config=<config_file>]\n\n    Options:\n      -h --help               Show this screen.\n      --version               Show version.\n      --config=<config_file>  The config file to use [default: ./pychex.cfg]\n\nRunning ``pychex account_summary`` will result in output similar to the\nfollowing fake data: ::\n\n    Current balance: $67,872.49\n    Vested balance: $67,872.49\n    Personal RoR: 8.9%\n\n      percent  symbol    fund               shares  balance     prospectus\n    ---------  --------  ---------------  --------  ----------  ------------\n         9.79  FNAMW     FAKE NAME W [1]   103.572  $6,644.72   [2]\n        10.21  FNAMX     FAKE NAME X [3]   214.321  $6,929.78   [4]\n        31.58  FNAMY     FAKE NAME Y [5]    13.179  $21,434.13  [6]\n        48.42  FNAMZ     FAKE NAME Z [7]    26.624  $32,863.86  [8]\n\n    [1] http://www.example.com/?product=FUNDS&custno=1&FUNDID=1\n    [2] http://www.example.com/?product=PROSP&custno=1&FUNDID=1\n    [3] http://www.example.com/?product=FUNDS&custno=1&FUNDID=2\n    [4] http://www.example.com/?product=PROSP&custno=1&FUNDID=2\n    [5] http://www.example.com/?product=FUNDS&custno=1&FUNDID=3\n    [6] http://www.example.com/?product=PROSP&custno=1&FUNDID=3\n    [7] http://www.example.com/?product=FUNDS&custno=1&FUNDID=4\n    [8] http://www.example.com/?product=PROSP&custno=1&FUNDID=4\n\nSlow start\n==========\n\nAnd here are some examples for how to use it programmatically: ::\n\n    >>> from pychex import Paychex\n    >>> paychex = Paychex(username)\n    >>> paychex.post_username()\n    >>> paychex.get_security_image()\n    u'https://landing.paychex.com/ssologin/Media/Images/Security/Butterfly.gif'\n    >>> paychex.login(password)\n    True\n    >>> paychex.get_account_summary()\n    True\n    >>> paychex.current_balance\n    '$XX,XXX.XX'\n    >>> paychex.vested_balance\n    '$XX,XXX.XX'\n    >>> paychex.personal_ror\n    'X.XX%'\n    >>> for symbol, row in paychex.balance_tab_info.items():\n    ...     for label, cell in row.items():\n    ...         print('%s: %s' % (label, cell))\n    ...\n    symbol: XXXX1\n    percent: XX.XX\n    shares: XXX.XXX\n    fund: {'url': 'http://www.sponsorportal.com/content/content.cfm?product=FUNDS&custno=XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXXXX&FUNDID=XXXXXXXXX&cusip=XXXXXXXXX', 'name': 'XXXX XXXXXXX1'}\n    balance: $X,XXX.XX\n    prospectus: http://www.sponsorportal.com/content/content.cfm?product=PROSP&custno=XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXXXX&FUNDID=XXXXXXXXX&cusip=XXXXXXXXX]\n    symbol: XXXX2\n    percent: XX.XX\n    shares: XXX.XXXX\n    fund: {'url': 'http://www.sponsorportal.com/content/content.cfm?product=FUNDS&custno=XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXXXX&FUNDID=XXXXXXXXX&cusip=XXXXXXXXX', 'name': 'XXXX XXXXXXX2'}\n    balance: $XX,XXX.XX\n    prospectus: http://www.sponsorportal.com/content/content.cfm?product=PROSP&custno=XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXXXX&FUNDID=XXXXXXXXX&cusip=XXXXXXXXX\n\nDevelopment\n===========\n\nYou can also use the CLI from a git checkout. First, install all the\ndependencies by running ``pip install -r requirements/dev.txt``. Then you can run\nthe CLI like so: ::\n\n    $ python -m pychex.cli <args>\n\nYou can run the tests simply by running the ``behave`` command", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brad/pychex", "keywords": null, "license": "Apache 2.0", "maintainer": null, "maintainer_email": null, "name": "pychex", "package_url": "https://pypi.org/project/pychex/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pychex/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/brad/pychex"}, "release_url": "https://pypi.org/project/pychex/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Paychex library", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pychex\">\n<h2>Pychex</h2>\n<a href=\"https://travis-ci.org/brad/pychex\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/brad/pychex.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/110073f8f5b695d7e424ebb35dbf21b78f988a1a/68747470733a2f2f7472617669732d63692e6f72672f627261642f7079636865782e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/brad/pychex?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/brad/pychex/badge.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/964ae726a618b8f61fb4dc3eaaefcf783e28dd1f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f627261642f7079636865782f62616467652e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://requires.io/github/brad/pychex/requirements/?branch=master\" rel=\"nofollow\"><img alt=\"Requirements Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c2c3c20d43b77fd3fc11f63bc63fcd9f3e9223fd/68747470733a2f2f72657175697265732e696f2f6769746875622f627261642f7079636865782f726571756972656d656e74732e7376673f6272616e63683d6d6173746572\"></a>\n<p>Paychex Benefits OnLine access library and client</p>\n<p>This library and command line client can be used to authorize and retrieve the\naccount summary data from Paychex Benefits OnLine. Note that this is only for\nthose who login using <a href=\"https://mypaychex.com\" rel=\"nofollow\">https://mypaychex.com</a>. If you login to Paychex via\n<a href=\"https://paychexonline.com\" rel=\"nofollow\">https://paychexonline.com</a> this application will not currently work, but with\nyour help we should be able to support it as well.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python &gt;= 2.6, Python &gt;= 3.x, or PyPy. You can download it from <a href=\"https://www.python.org/\" rel=\"nofollow\">here</a></li>\n<li>Pip. If you have Python &gt;= 2.7.9 or &gt;= 3.4 then you already have <tt>pip</tt>. Otherwise, please follow <a href=\"https://pip.pypa.io/en/latest/installing.html\" rel=\"nofollow\">these instructions</a></li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Once you have satisfied the requirements listed above, install by running the\nfollowing command from the\n<a href=\"http://cli.learncodethehardway.org/book/ex1.html\" rel=\"nofollow\">terminal</a>:</p>\n<pre>pip install pychex\n</pre>\n</div>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<p>After installing you will have use of a command line <tt>pychex</tt> client\napplication. Run <tt>pychex authorize &lt;username&gt;</tt> to confirm your security\nimage and login. This will save your encrypted credentials to a\n<tt>pychex.cfg</tt> file. NOTE: The encryption does very little to protect your\ncredentials from a determined and malicious intruder, and the ultimate\nresponsibility in protecting your credentials is yours. After you have\nauthorized the client, you can get a printout of your account summary by\nrunning <tt>pychex account_summary</tt>. Full usage instructions below:</p>\n<pre>Pychex command-line interface\n\nUsage:\n  pychex authorize &lt;username&gt; [--config=&lt;config_file&gt;]\n  pychex account_summary [--config=&lt;config_file&gt;]\n\nOptions:\n  -h --help               Show this screen.\n  --version               Show version.\n  --config=&lt;config_file&gt;  The config file to use [default: ./pychex.cfg]\n</pre>\n<p>Running <tt>pychex account_summary</tt> will result in output similar to the\nfollowing fake data:</p>\n<pre>Current balance: $67,872.49\nVested balance: $67,872.49\nPersonal RoR: 8.9%\n\n  percent  symbol    fund               shares  balance     prospectus\n---------  --------  ---------------  --------  ----------  ------------\n     9.79  FNAMW     FAKE NAME W [1]   103.572  $6,644.72   [2]\n    10.21  FNAMX     FAKE NAME X [3]   214.321  $6,929.78   [4]\n    31.58  FNAMY     FAKE NAME Y [5]    13.179  $21,434.13  [6]\n    48.42  FNAMZ     FAKE NAME Z [7]    26.624  $32,863.86  [8]\n\n[1] http://www.example.com/?product=FUNDS&amp;custno=1&amp;FUNDID=1\n[2] http://www.example.com/?product=PROSP&amp;custno=1&amp;FUNDID=1\n[3] http://www.example.com/?product=FUNDS&amp;custno=1&amp;FUNDID=2\n[4] http://www.example.com/?product=PROSP&amp;custno=1&amp;FUNDID=2\n[5] http://www.example.com/?product=FUNDS&amp;custno=1&amp;FUNDID=3\n[6] http://www.example.com/?product=PROSP&amp;custno=1&amp;FUNDID=3\n[7] http://www.example.com/?product=FUNDS&amp;custno=1&amp;FUNDID=4\n[8] http://www.example.com/?product=PROSP&amp;custno=1&amp;FUNDID=4\n</pre>\n</div>\n<div id=\"slow-start\">\n<h2>Slow start</h2>\n<p>And here are some examples for how to use it programmatically:</p>\n<pre>&gt;&gt;&gt; from pychex import Paychex\n&gt;&gt;&gt; paychex = Paychex(username)\n&gt;&gt;&gt; paychex.post_username()\n&gt;&gt;&gt; paychex.get_security_image()\nu'https://landing.paychex.com/ssologin/Media/Images/Security/Butterfly.gif'\n&gt;&gt;&gt; paychex.login(password)\nTrue\n&gt;&gt;&gt; paychex.get_account_summary()\nTrue\n&gt;&gt;&gt; paychex.current_balance\n'$XX,XXX.XX'\n&gt;&gt;&gt; paychex.vested_balance\n'$XX,XXX.XX'\n&gt;&gt;&gt; paychex.personal_ror\n'X.XX%'\n&gt;&gt;&gt; for symbol, row in paychex.balance_tab_info.items():\n...     for label, cell in row.items():\n...         print('%s: %s' % (label, cell))\n...\nsymbol: XXXX1\npercent: XX.XX\nshares: XXX.XXX\nfund: {'url': 'http://www.sponsorportal.com/content/content.cfm?product=FUNDS&amp;custno=XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXXXX&amp;FUNDID=XXXXXXXXX&amp;cusip=XXXXXXXXX', 'name': 'XXXX XXXXXXX1'}\nbalance: $X,XXX.XX\nprospectus: http://www.sponsorportal.com/content/content.cfm?product=PROSP&amp;custno=XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXXXX&amp;FUNDID=XXXXXXXXX&amp;cusip=XXXXXXXXX]\nsymbol: XXXX2\npercent: XX.XX\nshares: XXX.XXXX\nfund: {'url': 'http://www.sponsorportal.com/content/content.cfm?product=FUNDS&amp;custno=XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXXXX&amp;FUNDID=XXXXXXXXX&amp;cusip=XXXXXXXXX', 'name': 'XXXX XXXXXXX2'}\nbalance: $XX,XXX.XX\nprospectus: http://www.sponsorportal.com/content/content.cfm?product=PROSP&amp;custno=XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXXXX&amp;FUNDID=XXXXXXXXX&amp;cusip=XXXXXXXXX\n</pre>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>You can also use the CLI from a git checkout. First, install all the\ndependencies by running <tt>pip install <span class=\"pre\">-r</span> requirements/dev.txt</tt>. Then you can run\nthe CLI like so:</p>\n<pre>$ python -m pychex.cli &lt;args&gt;\n</pre>\n<p>You can run the tests simply by running the <tt>behave</tt> command</p>\n</div>\n\n          </div>"}, "last_serial": 1355055, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "9b0a89d42ee5f99b88c9944e1bb03485", "sha256": "130a0898d36691aae59c14f9a7e8a6cd0ac5a96cf23265777b18b69e4ab1dd5b"}, "downloads": -1, "filename": "pychex-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9b0a89d42ee5f99b88c9944e1bb03485", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16953, "upload_time": "2014-12-19T06:20:07", "upload_time_iso_8601": "2014-12-19T06:20:07.550300Z", "url": "https://files.pythonhosted.org/packages/ae/de/361337e6dfb085354488d15645cdee93dfc10580ca663f4e9554b0985e1f/pychex-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9b0a89d42ee5f99b88c9944e1bb03485", "sha256": "130a0898d36691aae59c14f9a7e8a6cd0ac5a96cf23265777b18b69e4ab1dd5b"}, "downloads": -1, "filename": "pychex-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9b0a89d42ee5f99b88c9944e1bb03485", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16953, "upload_time": "2014-12-19T06:20:07", "upload_time_iso_8601": "2014-12-19T06:20:07.550300Z", "url": "https://files.pythonhosted.org/packages/ae/de/361337e6dfb085354488d15645cdee93dfc10580ca663f4e9554b0985e1f/pychex-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:32 2020"}