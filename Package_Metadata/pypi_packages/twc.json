{"info": {"author": "Micha\u0142 G\u00f3ral", "author_email": "dev@mgoral.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Operating System :: POSIX", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Utilities"], "description": "twc\n===\n\n**TWC - TaskWarrior Controller** (previously TaskWarrior Curses) is interactive\nterminal frontend for task and TODO manager - TaskWarrior.\n\n.. image:: https://gitlab.com/mgoral/twc/raw/master/docs/img/screenshot.png\n    :align: center\n\nFor full documentation please refer to the `User Manual\n<https://mgoral.gitlab.io/twc/>`_. There's also built-in help available\nafter pressing ``F1``.\n\nFeatures\n~~~~~~~~\n\n* agendas - display several filters on a single screen simultaneously\n  (influenced by `org-mode <https:orgmode.org>`_)\n* create, modify, delete, annotate tasks\n* bulk edits: select arbitrary tasks and modify them all at the same time\n* autocomplete and tab-complete writing task descriptions, annotations, tags\n  etc.\n* styling and task formatting\n* tasks and sub-tasks grouping (influenced by\n  `taskwiki <https://github.com/tbabej/taskwiki>`_)\n* synchronize tasks with task server\n* status line showing arbitrary informations\n* configurable key bindings\n* search and incremental search of tasks - search can be case-sensitive,\n  case-insensitive or smart-case (case sensitivite only when there are upper\n  case characters in searched term)\n* on-demand filtering of displayed tasks\n* history of commands (scrolled with up and down arrows)\n\nIntroduction\n~~~~~~~~~~~~\n\nTWC works with a concept of \"agendas\" influenced and borrowed from the mighty\norg-mode. Agenda is basically a view of several TaskWarrior filters (called\nblocks) displayed on a single screen simultaneously. You can jump between\nblocks and single tasks.\n\nTo add agenda, first create a configuration file inside\n``~/.config/twc/config.py``. It is a regular Python file with exposed variable\n``c`` which references a configuration object. You can add new blocks like that:\n\n.. code:: python\n\n    c.add_block(\n        agenda='My Agenda',\n        title='Next Tasks',\n        filter='status:pending',\n        sort='priority+,urgency-')\n\n    c.add_block(\n        agenda='My Agenda',\n        title='Projects',\n        filter='-WAITING and (+BLOCKING or +BLOCKED) and -INSTANCE',\n        sort='project-,priority-,order+,urgency-',\n        items='* description,tags:info:')\n\nStyle and colors\n~~~~~~~~~~~~~~~~\n\nTWC can be styled in any way you want. To change its colors use `c.set_style()`:\n\n.. code:: python\n\n    c.set_style('highlight', 'bg:ansiblue bold')\n    c.set_style('error', 'fg:white bg:red')\n\nStyle examples:\n\n- ``fg:white`` (white foreground, named color)\n- ``bg:#000000`` (black background, hexadecimal notation)\n- ``bold italic underline blink reverse hidden`` (supported style flags)\n\nAny style name can be used in task formatting. Some interface elements however\nuse specific style names.\n\nFormatting\n~~~~~~~~~~\n\nBlock's ``items`` and ``statusleft`` and ``statusright`` parameters are\ncomposed of lists of displayed items; they can be separated by comma, which\nwill produce space between items, or by \"+\" sign, which will concatenate items\nto each other without leaving space between them.\n\nEach item can be optionally followed by a name of style which should be applied\nto this item and item-specific string formatting. When style or formatting are\nadded, they must be separated and ended by a colon \":\": ``name:style:format:``.\n\nAll TaskWarrior's attribute names work as item names and there are some\nadditional names defined for either blocks and status line.\n\nExample format strings are:\n\n.. code:: python\n\n    items = '[priority:warning:],(due:comment:%Y-%m-%d:),description'\n    items = '[flags::%a%s%d:]+id,description,tags:info:\n\nItems will be only displayed when they are present. For example if there are no\ntags defined for a task, ``tags`` item will not produce any output.\n\nItems might contain additional characters in place of their names and TWC will\ntry to intelligently/magically (with regular expressions ;)) guess name. These\nadditional charactes will be printed only when item is present so they can be\nused e.g. to visually delimit some items from the others (e.g. surround tags\nwith braces, delimit items with \"|\" etc.)\n\nKey bindings\n~~~~~~~~~~~~\n\nBy default you can navigate with arrows or vim-style ``j`` and ``k``. Exit TWC\nwith ``q``.\n\nYou can bind and unbind keys with ``c.bind(key, command)`` and\n``c.unbind(key)``. Refer to `User Manual <https://mgoral.gitlab.io/twc/>`_ for\na list of commands and other default key bindings.\n\nStatus line\n~~~~~~~~~~~\n\nBottom status line displays arbitrary informations and is configurable by\ntwo variables: ``statusleft`` and ``statusright``. They describe format similar\nto the one described in `Formatting`_ The main difference is that task\nattributes are referenced by ``task.<attribute>`` placeholder and that there\nadditional placeholders available.\n\n.. code:: python\n\n    c.set('statusleft', 'COMMAND,task.id')\n    c.set('statusright', 'flags::%a:')\n\nStatus line items also include: ``taskrc``, ``command``, ``COMMAND``,\n``agenda.pos``, ``agenda.size``, ``agenda.ppos``, ``flags``.\n\nInstallation\n~~~~~~~~~~~~\n\nFirst, make sure that TaskWarrior is installed on your system. TaskWarrior is\npackaged for most of Linux distributions. Please refer to TaskWarrior's\n`documentation <https://taskwarrior.org/download/>`_ for details.\n\nTWC is distributed via `pypi <https://pypi.org/project/twc/>`_. You can\ninstall it with pip:\n\n.. code::\n\n    $ pip3 install --user twc\n\nor with pip wrapper like `pipsi <https://github.com/mitsuhiko/pipsi>`_:\n\n.. code::\n\n    $ pipsi install --python python3 twc\n\nTWC reads your ``taskrc``. It'll use the default one, which is usually located\nin ``~/.taskrc``, but you can change it with ``-t`` switch:\n\n.. code::\n\n    $ twc -t ~/dotfiles/my_taskrc\n\nTermux\n~~~~~~\n\nTWC works on `Termux <https://termux.com/>`_, although there's currently a `bug\n<https://github.com/regebro/tzlocal/pull/55>`_ in tzlocal - a library\nindirectly used by TWC to get local timezone information.\n\nBefore running TWC on Termux you have to export the following environment\nvariable:\n\n.. code:: shell\n\n    export TZ=$(getprop persist.sys.timezone)\n\nTermux emulates scroll events as key presses. You can bind them for easier\nnavigation:\n\n.. code:: python\n\n    c.bind('right', 'next-agenda')\n    c.bind('left', 'prev-agenda')\n\nLicense\n~~~~~~~\n\nTWC was created by Micha\u0142 G\u00f3ral.\n\nTWC is free software, published under the terms of GNU GPL3 or any later\nversion. See LICENSE file for details.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/mgoral/twc", "keywords": "", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "twc", "package_url": "https://pypi.org/project/twc/", "platform": "linux", "project_url": "https://pypi.org/project/twc/", "project_urls": {"Homepage": "https://gitlab.com/mgoral/twc"}, "release_url": "https://pypi.org/project/twc/0.10.1/", "requires_dist": ["prompt-toolkit (==3.0.5)", "tasklib (==1.1.0)", "attrs (==19.1.0)", "mgcomm (>=0.2.0)"], "requires_python": ">=3.6,<3.9", "summary": "TaskWarrior's interactive terminal frontend", "version": "0.10.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>TWC - TaskWarrior Controller</strong> (previously TaskWarrior Curses) is interactive\nterminal frontend for task and TODO manager - TaskWarrior.</p>\n<img alt=\"https://gitlab.com/mgoral/twc/raw/master/docs/img/screenshot.png\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/73f1e9bee8c955411ec1dc964a0f1598d20387fe/68747470733a2f2f6769746c61622e636f6d2f6d676f72616c2f7477632f7261772f6d61737465722f646f63732f696d672f73637265656e73686f742e706e67\">\n<p>For full documentation please refer to the <a href=\"https://mgoral.gitlab.io/twc/\" rel=\"nofollow\">User Manual</a>. There\u2019s also built-in help available\nafter pressing <tt>F1</tt>.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>agendas - display several filters on a single screen simultaneously\n(influenced by <a href=\"https:orgmode.org\" rel=\"nofollow\">org-mode</a>)</li>\n<li>create, modify, delete, annotate tasks</li>\n<li>bulk edits: select arbitrary tasks and modify them all at the same time</li>\n<li>autocomplete and tab-complete writing task descriptions, annotations, tags\netc.</li>\n<li>styling and task formatting</li>\n<li>tasks and sub-tasks grouping (influenced by\n<a href=\"https://github.com/tbabej/taskwiki\" rel=\"nofollow\">taskwiki</a>)</li>\n<li>synchronize tasks with task server</li>\n<li>status line showing arbitrary informations</li>\n<li>configurable key bindings</li>\n<li>search and incremental search of tasks - search can be case-sensitive,\ncase-insensitive or smart-case (case sensitivite only when there are upper\ncase characters in searched term)</li>\n<li>on-demand filtering of displayed tasks</li>\n<li>history of commands (scrolled with up and down arrows)</li>\n</ul>\n</div>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>TWC works with a concept of \u201cagendas\u201d influenced and borrowed from the mighty\norg-mode. Agenda is basically a view of several TaskWarrior filters (called\nblocks) displayed on a single screen simultaneously. You can jump between\nblocks and single tasks.</p>\n<p>To add agenda, first create a configuration file inside\n<tt><span class=\"pre\">~/.config/twc/config.py</span></tt>. It is a regular Python file with exposed variable\n<tt>c</tt> which references a configuration object. You can add new blocks like that:</p>\n<pre><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">add_block</span><span class=\"p\">(</span>\n    <span class=\"n\">agenda</span><span class=\"o\">=</span><span class=\"s1\">'My Agenda'</span><span class=\"p\">,</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'Next Tasks'</span><span class=\"p\">,</span>\n    <span class=\"nb\">filter</span><span class=\"o\">=</span><span class=\"s1\">'status:pending'</span><span class=\"p\">,</span>\n    <span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"s1\">'priority+,urgency-'</span><span class=\"p\">)</span>\n\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">add_block</span><span class=\"p\">(</span>\n    <span class=\"n\">agenda</span><span class=\"o\">=</span><span class=\"s1\">'My Agenda'</span><span class=\"p\">,</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'Projects'</span><span class=\"p\">,</span>\n    <span class=\"nb\">filter</span><span class=\"o\">=</span><span class=\"s1\">'-WAITING and (+BLOCKING or +BLOCKED) and -INSTANCE'</span><span class=\"p\">,</span>\n    <span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"s1\">'project-,priority-,order+,urgency-'</span><span class=\"p\">,</span>\n    <span class=\"n\">items</span><span class=\"o\">=</span><span class=\"s1\">'* description,tags:info:'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"style-and-colors\">\n<h2>Style and colors</h2>\n<p>TWC can be styled in any way you want. To change its colors use <cite>c.set_style()</cite>:</p>\n<pre><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">set_style</span><span class=\"p\">(</span><span class=\"s1\">'highlight'</span><span class=\"p\">,</span> <span class=\"s1\">'bg:ansiblue bold'</span><span class=\"p\">)</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">set_style</span><span class=\"p\">(</span><span class=\"s1\">'error'</span><span class=\"p\">,</span> <span class=\"s1\">'fg:white bg:red'</span><span class=\"p\">)</span>\n</pre>\n<p>Style examples:</p>\n<ul>\n<li><tt>fg:white</tt> (white foreground, named color)</li>\n<li><tt><span class=\"pre\">bg:#000000</span></tt> (black background, hexadecimal notation)</li>\n<li><tt>bold italic underline blink reverse hidden</tt> (supported style flags)</li>\n</ul>\n<p>Any style name can be used in task formatting. Some interface elements however\nuse specific style names.</p>\n</div>\n<div id=\"formatting\">\n<h2>Formatting</h2>\n<p>Block\u2019s <tt>items</tt> and <tt>statusleft</tt> and <tt>statusright</tt> parameters are\ncomposed of lists of displayed items; they can be separated by comma, which\nwill produce space between items, or by \u201c+\u201d sign, which will concatenate items\nto each other without leaving space between them.</p>\n<p>Each item can be optionally followed by a name of style which should be applied\nto this item and item-specific string formatting. When style or formatting are\nadded, they must be separated and ended by a colon \u201c:\u201d: <tt>name:style:format:</tt>.</p>\n<p>All TaskWarrior\u2019s attribute names work as item names and there are some\nadditional names defined for either blocks and status line.</p>\n<p>Example format strings are:</p>\n<pre><span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"s1\">'[priority:warning:],(due:comment:%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\">:),description'</span>\n<span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"s1\">'[flags::</span><span class=\"si\">%a%s%d</span><span class=\"s1\">:]+id,description,tags:info:</span>\n</pre>\n<p>Items will be only displayed when they are present. For example if there are no\ntags defined for a task, <tt>tags</tt> item will not produce any output.</p>\n<p>Items might contain additional characters in place of their names and TWC will\ntry to intelligently/magically (with regular expressions ;)) guess name. These\nadditional charactes will be printed only when item is present so they can be\nused e.g. to visually delimit some items from the others (e.g. surround tags\nwith braces, delimit items with \u201c|\u201d etc.)</p>\n</div>\n<div id=\"key-bindings\">\n<h2>Key bindings</h2>\n<p>By default you can navigate with arrows or vim-style <tt>j</tt> and <tt>k</tt>. Exit TWC\nwith <tt>q</tt>.</p>\n<p>You can bind and unbind keys with <tt>c.bind(key, command)</tt> and\n<tt>c.unbind(key)</tt>. Refer to <a href=\"https://mgoral.gitlab.io/twc/\" rel=\"nofollow\">User Manual</a> for\na list of commands and other default key bindings.</p>\n</div>\n<div id=\"status-line\">\n<h2>Status line</h2>\n<p>Bottom status line displays arbitrary informations and is configurable by\ntwo variables: <tt>statusleft</tt> and <tt>statusright</tt>. They describe format similar\nto the one described in <a href=\"#formatting\" rel=\"nofollow\">Formatting</a> The main difference is that task\nattributes are referenced by <tt><span class=\"pre\">task.&lt;attribute&gt;</span></tt> placeholder and that there\nadditional placeholders available.</p>\n<pre><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'statusleft'</span><span class=\"p\">,</span> <span class=\"s1\">'COMMAND,task.id'</span><span class=\"p\">)</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'statusright'</span><span class=\"p\">,</span> <span class=\"s1\">'flags::</span><span class=\"si\">%a</span><span class=\"s1\">:'</span><span class=\"p\">)</span>\n</pre>\n<p>Status line items also include: <tt>taskrc</tt>, <tt>command</tt>, <tt>COMMAND</tt>,\n<tt>agenda.pos</tt>, <tt>agenda.size</tt>, <tt>agenda.ppos</tt>, <tt>flags</tt>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>First, make sure that TaskWarrior is installed on your system. TaskWarrior is\npackaged for most of Linux distributions. Please refer to TaskWarrior\u2019s\n<a href=\"https://taskwarrior.org/download/\" rel=\"nofollow\">documentation</a> for details.</p>\n<p>TWC is distributed via <a href=\"https://pypi.org/project/twc/\" rel=\"nofollow\">pypi</a>. You can\ninstall it with pip:</p>\n<pre>$ pip3 install --user twc\n</pre>\n<p>or with pip wrapper like <a href=\"https://github.com/mitsuhiko/pipsi\" rel=\"nofollow\">pipsi</a>:</p>\n<pre>$ pipsi install --python python3 twc\n</pre>\n<p>TWC reads your <tt>taskrc</tt>. It\u2019ll use the default one, which is usually located\nin <tt><span class=\"pre\">~/.taskrc</span></tt>, but you can change it with <tt><span class=\"pre\">-t</span></tt> switch:</p>\n<pre>$ twc -t ~/dotfiles/my_taskrc\n</pre>\n</div>\n<div id=\"termux\">\n<h2>Termux</h2>\n<p>TWC works on <a href=\"https://termux.com/\" rel=\"nofollow\">Termux</a>, although there\u2019s currently a <a href=\"https://github.com/regebro/tzlocal/pull/55\" rel=\"nofollow\">bug</a> in tzlocal - a library\nindirectly used by TWC to get local timezone information.</p>\n<p>Before running TWC on Termux you have to export the following environment\nvariable:</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">TZ</span><span class=\"o\">=</span><span class=\"k\">$(</span>getprop persist.sys.timezone<span class=\"k\">)</span>\n</pre>\n<p>Termux emulates scroll events as key presses. You can bind them for easier\nnavigation:</p>\n<pre><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"s1\">'right'</span><span class=\"p\">,</span> <span class=\"s1\">'next-agenda'</span><span class=\"p\">)</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"s1\">'left'</span><span class=\"p\">,</span> <span class=\"s1\">'prev-agenda'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>TWC was created by Micha\u0142 G\u00f3ral.</p>\n<p>TWC is free software, published under the terms of GNU GPL3 or any later\nversion. See LICENSE file for details.</p>\n</div>\n\n          </div>"}, "last_serial": 7148663, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "762d9702f1b6f69e35f87ac543042bed", "sha256": "81e398616fe1792b169734e7efba9dae87663ee09ab01464137efb8ab085c098"}, "downloads": -1, "filename": "twc-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "762d9702f1b6f69e35f87ac543042bed", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40764, "upload_time": "2019-05-05T22:02:48", "upload_time_iso_8601": "2019-05-05T22:02:48.244275Z", "url": "https://files.pythonhosted.org/packages/02/03/728ab6a6d2e457539c3343343700a04f4ff85db86e055b98f2ec0d3e3521/twc-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "088a7a71c45fe5b6ac0ec51b83c69af3", "sha256": "f08984c31ddf57775255ec3cb7f0e117fe9edf4560f063edee98ba4498d51d83"}, "downloads": -1, "filename": "twc-0.1.0.tar.gz", "has_sig": false, "md5_digest": "088a7a71c45fe5b6ac0ec51b83c69af3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79139, "upload_time": "2019-05-05T22:02:51", "upload_time_iso_8601": "2019-05-05T22:02:51.256861Z", "url": "https://files.pythonhosted.org/packages/bf/e3/a27d70a141578962156eb9af9a15bf69ca9c32312059fa1c7ce17dc9a554/twc-0.1.0.tar.gz", "yanked": false}], "0.10.1": [{"comment_text": "", "digests": {"md5": "b0038f2e72ffbb19e717f77bc177b0e2", "sha256": "dd2e9f22079a4df2b59081cc29da49852d135676b2c8b6a5d9c4137bfa071823"}, "downloads": -1, "filename": "twc-0.10.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b0038f2e72ffbb19e717f77bc177b0e2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<3.9", "size": 63317, "upload_time": "2020-05-01T22:32:47", "upload_time_iso_8601": "2020-05-01T22:32:47.116067Z", "url": "https://files.pythonhosted.org/packages/b2/43/4029c218720ed92a0d783278f3d09eb198045105bb4e759cbb0857068786/twc-0.10.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "929ac9e7eba44742db6e75258349b3f4", "sha256": "90fd5e22d501ee3c001d9f9c0580bbebd2abf2bc6567748d4132ff83aabe3e4b"}, "downloads": -1, "filename": "twc-0.10.1.tar.gz", "has_sig": false, "md5_digest": "929ac9e7eba44742db6e75258349b3f4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<3.9", "size": 121132, "upload_time": "2020-05-01T22:32:48", "upload_time_iso_8601": "2020-05-01T22:32:48.306953Z", "url": "https://files.pythonhosted.org/packages/7a/62/4ea55cd399273e4344b334cd1c9120a648b6d5496e15b38222cc1ca10af6/twc-0.10.1.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "4607a5c0f5cf199381e0cd4e5bf753d7", "sha256": "18c72d83297995deaef77ae816a2e44d2af492ef4dfbfcfe89740226897ded8d"}, "downloads": -1, "filename": "twc-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4607a5c0f5cf199381e0cd4e5bf753d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 45417, "upload_time": "2019-05-09T06:33:02", "upload_time_iso_8601": "2019-05-09T06:33:02.796002Z", "url": "https://files.pythonhosted.org/packages/23/15/3d0a9da951297e499576ac6b4fd3d58db421b9b3502c39da35b0e3b4a95d/twc-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e45a96841b3f2ba97686d98a4a25f89e", "sha256": "e8282247b4fe0bbdd77eafc3d358ea975cff57e382ee123a70c1d9974ae57032"}, "downloads": -1, "filename": "twc-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e45a96841b3f2ba97686d98a4a25f89e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92315, "upload_time": "2019-05-09T06:33:04", "upload_time_iso_8601": "2019-05-09T06:33:04.514652Z", "url": "https://files.pythonhosted.org/packages/df/3b/c82553044f2bc4fb1ca37b40ee1487efe2172b616efd4f7e91b2d940be52/twc-0.2.1.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "fdc357104155d52f3fe1bccd1b9d2032", "sha256": "8625da4eaf49d9914d3c69414ca986c5e8389c4faf502ab687bbb1a3dfabbb29"}, "downloads": -1, "filename": "twc-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fdc357104155d52f3fe1bccd1b9d2032", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 45798, "upload_time": "2019-05-12T20:49:47", "upload_time_iso_8601": "2019-05-12T20:49:47.165768Z", "url": "https://files.pythonhosted.org/packages/03/0d/8c73fe56a112e213d8f2def42e813a404e49a563d4adcbe24016094cc3e8/twc-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e36527e704ce2370fc2758956074f7aa", "sha256": "9ae846f13fd471f9c65eb2a3681378e96a6e6930503d7083345c99c21ae92ab7"}, "downloads": -1, "filename": "twc-0.3.1.tar.gz", "has_sig": false, "md5_digest": "e36527e704ce2370fc2758956074f7aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93558, "upload_time": "2019-05-12T20:49:49", "upload_time_iso_8601": "2019-05-12T20:49:49.090467Z", "url": "https://files.pythonhosted.org/packages/3e/50/76b6dc04de039fa54cb534525de71c0365225f0a1094cee8727e05146165/twc-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "61bd8a97ecf0cd18c7fa78c7b89a0c9c", "sha256": "f942a04d61637fc4bab3def2b01350f8cd48229101844cb479a09e17db2a5c9d"}, "downloads": -1, "filename": "twc-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "61bd8a97ecf0cd18c7fa78c7b89a0c9c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 44927, "upload_time": "2019-05-20T22:05:45", "upload_time_iso_8601": "2019-05-20T22:05:45.393343Z", "url": "https://files.pythonhosted.org/packages/08/3c/4cc53005e2a42395aa5ec669688093f9837dc90effa3046b009b9329c47d/twc-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e82ab0f2e32feb26c085a743010767d4", "sha256": "e4e099b117f4c75bf96398cc1c99dead5e027b55d38a1ab99fce5739f945efae"}, "downloads": -1, "filename": "twc-0.4.0.tar.gz", "has_sig": false, "md5_digest": "e82ab0f2e32feb26c085a743010767d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 99530, "upload_time": "2019-05-20T22:05:47", "upload_time_iso_8601": "2019-05-20T22:05:47.206873Z", "url": "https://files.pythonhosted.org/packages/17/2a/d11865198b078e1c90d8bd2885144eb4eb9c8ca3bf7252b269983c371276/twc-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "aaaacfe3e4a7487073e4eb47e60f60d6", "sha256": "d285c72652995cbdec1a22f119c3e344399d3508253a903c9e237113ac97a2b4"}, "downloads": -1, "filename": "twc-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "aaaacfe3e4a7487073e4eb47e60f60d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<3.8", "size": 45635, "upload_time": "2019-05-30T06:07:53", "upload_time_iso_8601": "2019-05-30T06:07:53.295581Z", "url": "https://files.pythonhosted.org/packages/b2/ba/4afab0bda264420d1d947a52b2908c554d4f934ccabf253b87ed8b7fa765/twc-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be6f1daef1f22d8efb25f664ee6892b6", "sha256": "76a9e5e7b0bf21360c1031c6b66a8ccc97e3f0a68500f8a3fa5fcca14e9792e9"}, "downloads": -1, "filename": "twc-0.5.0.tar.gz", "has_sig": false, "md5_digest": "be6f1daef1f22d8efb25f664ee6892b6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<3.8", "size": 138324, "upload_time": "2019-05-30T06:07:55", "upload_time_iso_8601": "2019-05-30T06:07:55.638237Z", "url": "https://files.pythonhosted.org/packages/85/f8/61ab095da6346747c51857a6142d64921cc3a70b1e8e59d192aa400a14cd/twc-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "faede624180b4d6931d1b6de781c88af", "sha256": "5165388ea61f56808073bacd4963dfb9d24c8276e2a61f5dacb9084fafb98fac"}, "downloads": -1, "filename": "twc-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "faede624180b4d6931d1b6de781c88af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<3.8", "size": 54604, "upload_time": "2019-07-15T07:58:06", "upload_time_iso_8601": "2019-07-15T07:58:06.712195Z", "url": "https://files.pythonhosted.org/packages/7f/ee/b8d573098a8796f1d9c53c5e78bc96d912b62222ffa4515466511613b755/twc-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e466a8d519dae80ba155e84657607d02", "sha256": "2a914963df12f3312f99f82c0367a5619f08f5f176d6f776eb271b52516ed232"}, "downloads": -1, "filename": "twc-0.6.0.tar.gz", "has_sig": false, "md5_digest": "e466a8d519dae80ba155e84657607d02", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<3.8", "size": 111742, "upload_time": "2019-07-15T07:58:08", "upload_time_iso_8601": "2019-07-15T07:58:08.631259Z", "url": "https://files.pythonhosted.org/packages/d2/53/d9704480e6df51e72a1676552138353775a1c254edeaf3eec6874fb1633e/twc-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "511b0e76713d189c7b0478e85e5bfc09", "sha256": "3b0c51013c27ec662791c605a4e5e07c4416988b17711c2d251f43257af9fd53"}, "downloads": -1, "filename": "twc-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "511b0e76713d189c7b0478e85e5bfc09", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<3.8", "size": 56003, "upload_time": "2019-10-12T11:24:33", "upload_time_iso_8601": "2019-10-12T11:24:33.651176Z", "url": "https://files.pythonhosted.org/packages/a3/36/fc6fcea75b0f3abafb91e28799b9d1e5f447579d5128779b1c7ff2ec5d7f/twc-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0fb664eec0549c4334ebb90e8419eca7", "sha256": "6c95d757141e73fbc93be96ce4a472703fce2c069d8e410de71aaed2beed6bbf"}, "downloads": -1, "filename": "twc-0.7.0.tar.gz", "has_sig": false, "md5_digest": "0fb664eec0549c4334ebb90e8419eca7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<3.8", "size": 112601, "upload_time": "2019-10-12T11:24:35", "upload_time_iso_8601": "2019-10-12T11:24:35.714491Z", "url": "https://files.pythonhosted.org/packages/4a/09/20d751bc7badc0db30cd66376233d074cae897af976d30c0c755af24a733/twc-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "b4f35f7c29c3c20ff10cdaa2390ae682", "sha256": "5f8344b8164b903e0746b2caf78eaa3ecd2a194a5c4930c6aaa7108da3221a26"}, "downloads": -1, "filename": "twc-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b4f35f7c29c3c20ff10cdaa2390ae682", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<3.9", "size": 56399, "upload_time": "2020-01-17T09:42:08", "upload_time_iso_8601": "2020-01-17T09:42:08.736923Z", "url": "https://files.pythonhosted.org/packages/7b/36/bad81605b939a07e002281a9ac4d6ee9b4030b954775ad12b1cfd11914fd/twc-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f32cc5c7539889978f8497ee77aba36d", "sha256": "aa158597b2a98bfbfb6e7abe6d0b9c11c8e6ae37cb0b7642d492d35b092242ef"}, "downloads": -1, "filename": "twc-0.8.0.tar.gz", "has_sig": false, "md5_digest": "f32cc5c7539889978f8497ee77aba36d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<3.9", "size": 114118, "upload_time": "2020-01-17T09:42:10", "upload_time_iso_8601": "2020-01-17T09:42:10.138800Z", "url": "https://files.pythonhosted.org/packages/8c/2e/c97ef08614ee1446decf32598608703128c6422b14a24abe2b14131d1629/twc-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "99d249d4c1dddb4c0c0ea03f679a85f9", "sha256": "64c1c0fd3c3685092cada1bd1a7ddee1404a114876525845d30bb54d634d8ab3"}, "downloads": -1, "filename": "twc-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "99d249d4c1dddb4c0c0ea03f679a85f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<3.9", "size": 62065, "upload_time": "2020-03-28T15:35:41", "upload_time_iso_8601": "2020-03-28T15:35:41.760153Z", "url": "https://files.pythonhosted.org/packages/6b/a3/68a1ea528c890ebee5285d5d6fa3d87694aa4c71334d3480c9509455732f/twc-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d281cfdbcdf293e14180ee428fa76451", "sha256": "40623558a315732ae7c354c74078cc5a1ba14218c4bf68d3afc20a2cb3c0ccd7"}, "downloads": -1, "filename": "twc-0.9.0.tar.gz", "has_sig": false, "md5_digest": "d281cfdbcdf293e14180ee428fa76451", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<3.9", "size": 119612, "upload_time": "2020-03-28T15:35:43", "upload_time_iso_8601": "2020-03-28T15:35:43.429940Z", "url": "https://files.pythonhosted.org/packages/18/46/86a19081a11483c5a9a4d207526309b4798a4bff3d412a0075f142322638/twc-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b0038f2e72ffbb19e717f77bc177b0e2", "sha256": "dd2e9f22079a4df2b59081cc29da49852d135676b2c8b6a5d9c4137bfa071823"}, "downloads": -1, "filename": "twc-0.10.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b0038f2e72ffbb19e717f77bc177b0e2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<3.9", "size": 63317, "upload_time": "2020-05-01T22:32:47", "upload_time_iso_8601": "2020-05-01T22:32:47.116067Z", "url": "https://files.pythonhosted.org/packages/b2/43/4029c218720ed92a0d783278f3d09eb198045105bb4e759cbb0857068786/twc-0.10.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "929ac9e7eba44742db6e75258349b3f4", "sha256": "90fd5e22d501ee3c001d9f9c0580bbebd2abf2bc6567748d4132ff83aabe3e4b"}, "downloads": -1, "filename": "twc-0.10.1.tar.gz", "has_sig": false, "md5_digest": "929ac9e7eba44742db6e75258349b3f4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<3.9", "size": 121132, "upload_time": "2020-05-01T22:32:48", "upload_time_iso_8601": "2020-05-01T22:32:48.306953Z", "url": "https://files.pythonhosted.org/packages/7a/62/4ea55cd399273e4344b334cd1c9120a648b6d5496e15b38222cc1ca10af6/twc-0.10.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:44:12 2020"}