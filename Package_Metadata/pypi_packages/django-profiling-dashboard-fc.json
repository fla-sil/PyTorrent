{"info": {"author": "Mikhail Korobov", "author_email": "kmike84@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "==========================\ndjango-profiling-dashboard\n==========================\n\ndjango-profiling-dashboard provides a dashboard with various profiling tools suitable\nfor use in live servers.\n\nRequirements\n============\n\n* `yappi <http://code.google.com/p/yappi/>`_ for thread-aware live server profiling\n  that can be enabled and disabled at run time;\n* `Pympler <http://code.google.com/p/pympler/>`_ for memory debugging;\n* `psutil <http://code.google.com/p/psutil/>`_ for system resource usage investigation;\n* `django-query-exchange <https://github.com/daevaorn/django-query-exchange>`_.\n\nDashboard remplates are based on `Bootstrap <http://twitter.github.com/bootstrap/>`_ toolkit.\n\ndjango-profiling-dashboard requires django >= 1.3 and python >= 2.6.\n\nInstallation\n============\n\nMake sure the requirements are installed::\n\n    pip install yappi pympler psutil\n    pip install git+https://github.com/daevaorn/django-query-exchange.git#egg=django-query-exchange\n\nand install django-profiling-dashboard using pip::\n\n    pip install django-profiling-dashboard\n\nUsage\n=====\n\n1. Add ``'profiling_dashboard'`` and ``'query_exchange'`` to ``INSTALLED_APPS``::\n\n       INSTALLED_APPS = (\n           # ...\n           'query_exchange',\n           'profiling_dashboard',\n           # ...\n       )\n\n2. include 'profiling_dashboard.urls' in your urls.py::\n\n      urlpatterns = patterns('',\n          # ...\n          url(r'^profiling-dashboard/', include('profiling_dashboard.urls')),\n          # ...\n      )\n\n3. visit /profiling-dashboard/\n\nScreenshots\n===========\n\nTODO\n\n\nNotes on CPU profiling in multi-process environment\n===================================================\n\nIf there are several server processes then the profiler have to be started and stopped for each process,\nand the profiling stats will be different for different processes.\n\nIn some deployment schemas (e.g. apache proxied by nginx) there is no way to make sure subsequent requests\nwill be handled by the same server process so take this in account while using django-profiling-dashboard.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/kmike/django-profiling-dashboard/zipball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kmike/django-profiling-dashboard", "keywords": null, "license": "MIT license", "maintainer": null, "maintainer_email": null, "name": "django-profiling-dashboard-fc", "package_url": "https://pypi.org/project/django-profiling-dashboard-fc/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-profiling-dashboard-fc/", "project_urls": {"Download": "https://github.com/kmike/django-profiling-dashboard/zipball/master", "Homepage": "https://github.com/kmike/django-profiling-dashboard"}, "release_url": "https://pypi.org/project/django-profiling-dashboard-fc/1.0/", "requires_dist": null, "requires_python": null, "summary": "Django profiling dashboard for debugging CPU, memory and other resources usage in live servers", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>django-profiling-dashboard provides a dashboard with various profiling tools suitable\nfor use in live servers.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li><a href=\"http://code.google.com/p/yappi/\" rel=\"nofollow\">yappi</a> for thread-aware live server profiling\nthat can be enabled and disabled at run time;</li>\n<li><a href=\"http://code.google.com/p/pympler/\" rel=\"nofollow\">Pympler</a> for memory debugging;</li>\n<li><a href=\"http://code.google.com/p/psutil/\" rel=\"nofollow\">psutil</a> for system resource usage investigation;</li>\n<li><a href=\"https://github.com/daevaorn/django-query-exchange\" rel=\"nofollow\">django-query-exchange</a>.</li>\n</ul>\n<p>Dashboard remplates are based on <a href=\"http://twitter.github.com/bootstrap/\" rel=\"nofollow\">Bootstrap</a> toolkit.</p>\n<p>django-profiling-dashboard requires django &gt;= 1.3 and python &gt;= 2.6.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Make sure the requirements are installed:</p>\n<pre>pip install yappi pympler psutil\npip install git+https://github.com/daevaorn/django-query-exchange.git#egg=django-query-exchange\n</pre>\n<p>and install django-profiling-dashboard using pip:</p>\n<pre>pip install django-profiling-dashboard\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<ol>\n<li><p>Add <tt>'profiling_dashboard'</tt> and <tt>'query_exchange'</tt> to <tt>INSTALLED_APPS</tt>:</p>\n<pre>INSTALLED_APPS = (\n    # ...\n    'query_exchange',\n    'profiling_dashboard',\n    # ...\n)\n</pre>\n</li>\n<li><p>include \u2018profiling_dashboard.urls\u2019 in your urls.py:</p>\n<pre>urlpatterns = patterns('',\n    # ...\n    url(r'^profiling-dashboard/', include('profiling_dashboard.urls')),\n    # ...\n)\n</pre>\n</li>\n<li><p>visit /profiling-dashboard/</p>\n</li>\n</ol>\n</div>\n<div id=\"screenshots\">\n<h2>Screenshots</h2>\n<p>TODO</p>\n</div>\n<div id=\"notes-on-cpu-profiling-in-multi-process-environment\">\n<h2>Notes on CPU profiling in multi-process environment</h2>\n<p>If there are several server processes then the profiler have to be started and stopped for each process,\nand the profiling stats will be different for different processes.</p>\n<p>In some deployment schemas (e.g. apache proxied by nginx) there is no way to make sure subsequent requests\nwill be handled by the same server process so take this in account while using django-profiling-dashboard.</p>\n</div>\n\n          </div>"}, "last_serial": 819207, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "4aac27526ceadb6f2a9caabb26451a1b", "sha256": "37afc3fa405de2edc6d234a98d6d16baab7fd1c43fdd198adddf0a9232c691ee"}, "downloads": -1, "filename": "django-profiling-dashboard-fc-1.0.zip", "has_sig": false, "md5_digest": "4aac27526ceadb6f2a9caabb26451a1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16702, "upload_time": "2013-05-13T11:53:01", "upload_time_iso_8601": "2013-05-13T11:53:01.784386Z", "url": "https://files.pythonhosted.org/packages/d1/1a/0d5b8757e82efc4753c215ef6bc00c64fa793842499b540853ff6bf4c999/django-profiling-dashboard-fc-1.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4aac27526ceadb6f2a9caabb26451a1b", "sha256": "37afc3fa405de2edc6d234a98d6d16baab7fd1c43fdd198adddf0a9232c691ee"}, "downloads": -1, "filename": "django-profiling-dashboard-fc-1.0.zip", "has_sig": false, "md5_digest": "4aac27526ceadb6f2a9caabb26451a1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16702, "upload_time": "2013-05-13T11:53:01", "upload_time_iso_8601": "2013-05-13T11:53:01.784386Z", "url": "https://files.pythonhosted.org/packages/d1/1a/0d5b8757e82efc4753c215ef6bc00c64fa793842499b540853ff6bf4c999/django-profiling-dashboard-fc-1.0.zip", "yanked": false}], "timestamp": "Fri May  8 00:54:42 2020"}