{"info": {"author": "Andr\u00e9 Althaus", "author_email": "andre.althaus@tu-dortmund.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering"], "description": "Channel Access client library\n=============================\nThis library contains the low-level bindings to the *libca* library and an\nhigh-level thread-safe interface for ease of use.\n\nFor the server implementation see `channel_access.server`_.\n\n.. _channel_access.server: https://pypi.org/project/channel_access.server\n\nInstallation\n------------\nBefore installing the library, the environment variables ``EPICS_BASE``\nand ``EPICS_HOST_ARCH`` must be set.\n\nThen the library can be installed with pip::\n\n    pip install channel_access.client\n\nExamples\n--------\nExamples are located in the ``examples`` directory.\n\nThe ``simple.py`` example monitors a single process value and outputs the\ncontents of the data dictionary::\n\n    python examples/simple.py test-pv\n\nGet the source\n--------------\nThe source code is available in a `Github repository`_::\n\n    git clone https://github.com/delta-accelerator/channel_access.client\n\n.. _Github repository: https://github.com/delta-accelerator/channel_access.client\n\nDocumentation\n-------------\nThe documentation for the last version is available `online`_.\n\nThe documentation can also be generated from the source code with *sphinx*.\nThe package must be installed prior to building the documentation::\n\n    cd /path/to/repository\n    pip install .\n    python setup.py build_sphinx\n\nThen open ``build/sphinx/html/index.html``.\n\n.. _online: https://delta-accelerator.github.io/channel_access.client\n\nTests\n-----\nTests are run with *pytest*::\n\n    cd /path/to/repository\n    pytest -v\n\nTo run the tests for all supported version use *tox*::\n\n    cd /path/to/repository\n    tox", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "epics ca channel_access", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "channel-access.client", "package_url": "https://pypi.org/project/channel-access.client/", "platform": "", "project_url": "https://pypi.org/project/channel-access.client/", "project_urls": null, "release_url": "https://pypi.org/project/channel-access.client/0.1.0/", "requires_dist": null, "requires_python": ">= 3.5", "summary": "Channel Access client library", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This library contains the low-level bindings to the <em>libca</em> library and an\nhigh-level thread-safe interface for ease of use.</p>\n<p>For the server implementation see <a href=\"https://pypi.org/project/channel_access.server\" rel=\"nofollow\">channel_access.server</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Before installing the library, the environment variables <tt>EPICS_BASE</tt>\nand <tt>EPICS_HOST_ARCH</tt> must be set.</p>\n<p>Then the library can be installed with pip:</p>\n<pre>pip install channel_access.client\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Examples are located in the <tt>examples</tt> directory.</p>\n<p>The <tt>simple.py</tt> example monitors a single process value and outputs the\ncontents of the data dictionary:</p>\n<pre>python examples/simple.py test-pv\n</pre>\n</div>\n<div id=\"get-the-source\">\n<h2>Get the source</h2>\n<p>The source code is available in a <a href=\"https://github.com/delta-accelerator/channel_access.client\" rel=\"nofollow\">Github repository</a>:</p>\n<pre>git clone https://github.com/delta-accelerator/channel_access.client\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The documentation for the last version is available <a href=\"https://delta-accelerator.github.io/channel_access.client\" rel=\"nofollow\">online</a>.</p>\n<p>The documentation can also be generated from the source code with <em>sphinx</em>.\nThe package must be installed prior to building the documentation:</p>\n<pre>cd /path/to/repository\npip install .\npython setup.py build_sphinx\n</pre>\n<p>Then open <tt>build/sphinx/html/index.html</tt>.</p>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>Tests are run with <em>pytest</em>:</p>\n<pre>cd /path/to/repository\npytest -v\n</pre>\n<p>To run the tests for all supported version use <em>tox</em>:</p>\n<pre>cd /path/to/repository\ntox\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5440084, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "3ffdc6982dccbf61fddd284b4d6113fc", "sha256": "0e4988cc72a118c81490e205f889a14e53eaba2d9a4af0c8fce1f5262408f386"}, "downloads": -1, "filename": "channel_access.client-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3ffdc6982dccbf61fddd284b4d6113fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 21886, "upload_time": "2019-06-24T10:44:15", "upload_time_iso_8601": "2019-06-24T10:44:15.110367Z", "url": "https://files.pythonhosted.org/packages/0c/bf/566a66850bbfd9f0bb25e416824b8df1ec920b1205ed4695c51c21e8cede/channel_access.client-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3ffdc6982dccbf61fddd284b4d6113fc", "sha256": "0e4988cc72a118c81490e205f889a14e53eaba2d9a4af0c8fce1f5262408f386"}, "downloads": -1, "filename": "channel_access.client-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3ffdc6982dccbf61fddd284b4d6113fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 21886, "upload_time": "2019-06-24T10:44:15", "upload_time_iso_8601": "2019-06-24T10:44:15.110367Z", "url": "https://files.pythonhosted.org/packages/0c/bf/566a66850bbfd9f0bb25e416824b8df1ec920b1205ed4695c51c21e8cede/channel_access.client-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:29 2020"}