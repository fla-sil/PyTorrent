{"info": {"author": "JM Fern\u00e1ndez", "author_email": "fernandez.cuesta@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "License :: OSI Approved :: GNU Affero General Public License v3", "Operating System :: OS Independent", "Programming Language :: Python :: 2 :: Only", "Topic :: System :: Systems Administration"], "description": "**fabric_vms** - An addon for managing OpenVMS hosts with fabric_\n###############################################################################\n\nAn addon for managing OpenVMS hosts with fabric_.\nIt wraps some of the methods available in Fabric enabling a user to execute\ncommands on an OpenVMS (tested with OVMS 7.3 and 8.x releases) host.\n\nInstall\n*******************************************************************************\n``fabric_vms`` is on PyPI, so run:\n\n.. code-block:: bash\n\n    pip install fabric_vms\n\nCompatibility\n===============================================================================\n\nThere are no special requirements for the managed hosts, in particular\nGNV_, vmspython_ are **not required**.\n\nOnly a subset of fabric_'s commands are ported, pull requests are more than\nwelcome.\n\nAs an additional feature, an extra module allows to run arbitrary commands on\n`Xura <http://www.xura.com/>`__'s v5 SMSC platform `PML` interpreter if\nimported as follows:\n\n.. code-block:: py\n\n    from fabric_vms import pml\n\n\nUsage examples\n*******************************************************************************\nAn example of ``fabfile`` using ``fabric_vms.safe_run()`` wrapper:\n\nfabfile.py\n===============================================================================\n\n.. code-block:: py\n\n    from fabric.api import env, task\n    from fabric.utils import puts\n\n    from fabric_vms import *\n    from fabric_vms import safe_run as run  # override fabric_vms.run\n\n    # Environmental settings\n    env.use_ssh_config = True\n    env.colorize_errors = True\n    env.hosts = ['menta']\n    env.user = 'SYSTEM'\n\n    @task(default=True)\n    def test():\n        run('show device dsa /size /units=bytes')\n        with cd('DSA0:[DELIVERABLES]'):\n            run('md5sum packed_file.zip')\n\n    @task\n    def restart_snmp():\n        run_clusterwide(['@SYS$STARTUP:TCPIP$SNMP_SHUTDOWN',\n                         '@SYS$STARTUP:TCPIP$SNMP_STARTUP'])\n\n    @task\n    def stop_custom_services():\n        run_clusterwide(['@SYS$STARTUP:STOP_SERVICES'])\n        run('@T4$SYS:T4$STOP ALL')\n        my_job = queue_job('HOUSEKEEPER')\n        watchdog = queue_job('WATCHDOG')\n\n        my_job.stop_queued_job()\n        watchdog.stop_queued_job()\n\n        # Check open files in DSA2, DSA3:\n        for shadow_set in ['DSA2', 'DSA3']:\n            open_files = lsof(shadow_set)\n            if open_files:\n                for _file in open_files:\n                    puts(_file)\n\n\n.. _fabric: http://www.fabfile.org\n.. _GNV: http://gnv.sourceforge.net\n.. _vmspython: http://www.vmspython.org\n\n- 0.2.4 - Fixes for get and put, add ls\n- 0.2.3 - Add some minor methods and refactor\n- 0.2.2 - Add documentation example\n- 0.2.1 - Add safe_run, get_shadowset_members\n- 0.2.0 - Add PML addon, refactor\n- 0.1.3 - Add queue job stop/start\n- 0.1.2 - Add lsof wrapper\n- 0.1.1 - Add put, get wrappers\n- 0.1.0 - Initial version", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fernandezcuesta/fabric_vms", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "fabric_vms", "package_url": "https://pypi.org/project/fabric_vms/", "platform": "all", "project_url": "https://pypi.org/project/fabric_vms/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/fernandezcuesta/fabric_vms"}, "release_url": "https://pypi.org/project/fabric_vms/0.2.4.2/", "requires_dist": null, "requires_python": null, "summary": "An addon for managing OpenVMS hosts with fabric", "version": "0.2.4.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>An addon for managing OpenVMS hosts with <a href=\"http://www.fabfile.org\" rel=\"nofollow\">fabric</a>.\nIt wraps some of the methods available in Fabric enabling a user to execute\ncommands on an OpenVMS (tested with OVMS 7.3 and 8.x releases) host.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<p><tt>fabric_vms</tt> is on PyPI, so run:</p>\n<pre>pip install fabric_vms\n</pre>\n<div id=\"compatibility\">\n<h3>Compatibility</h3>\n<p>There are no special requirements for the managed hosts, in particular\n<a href=\"http://gnv.sourceforge.net\" rel=\"nofollow\">GNV</a>, <a href=\"http://www.vmspython.org\" rel=\"nofollow\">vmspython</a> are <strong>not required</strong>.</p>\n<p>Only a subset of <a href=\"http://www.fabfile.org\" rel=\"nofollow\">fabric</a>\u2019s commands are ported, pull requests are more than\nwelcome.</p>\n<p>As an additional feature, an extra module allows to run arbitrary commands on\n<a href=\"http://www.xura.com/\" rel=\"nofollow\">Xura</a>\u2019s v5 SMSC platform <cite>PML</cite> interpreter if\nimported as follows:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fabric_vms</span> <span class=\"kn\">import</span> <span class=\"n\">pml</span>\n</pre>\n</div>\n</div>\n<div id=\"usage-examples\">\n<h2>Usage examples</h2>\n<p>An example of <tt>fabfile</tt> using <tt>fabric_vms.safe_run()</tt> wrapper:</p>\n<div id=\"fabfile-py\">\n<h3>fabfile.py</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fabric.api</span> <span class=\"kn\">import</span> <span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">task</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fabric.utils</span> <span class=\"kn\">import</span> <span class=\"n\">puts</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">fabric_vms</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fabric_vms</span> <span class=\"kn\">import</span> <span class=\"n\">safe_run</span> <span class=\"k\">as</span> <span class=\"n\">run</span>  <span class=\"c1\"># override fabric_vms.run</span>\n\n<span class=\"c1\"># Environmental settings</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">use_ssh_config</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">colorize_errors</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">hosts</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'menta'</span><span class=\"p\">]</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"s1\">'SYSTEM'</span>\n\n<span class=\"nd\">@task</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">test</span><span class=\"p\">():</span>\n    <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'show device dsa /size /units=bytes'</span><span class=\"p\">)</span>\n    <span class=\"k\">with</span> <span class=\"n\">cd</span><span class=\"p\">(</span><span class=\"s1\">'DSA0:[DELIVERABLES]'</span><span class=\"p\">):</span>\n        <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'md5sum packed_file.zip'</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@task</span>\n<span class=\"k\">def</span> <span class=\"nf\">restart_snmp</span><span class=\"p\">():</span>\n    <span class=\"n\">run_clusterwide</span><span class=\"p\">([</span><span class=\"s1\">'@SYS$STARTUP:TCPIP$SNMP_SHUTDOWN'</span><span class=\"p\">,</span>\n                     <span class=\"s1\">'@SYS$STARTUP:TCPIP$SNMP_STARTUP'</span><span class=\"p\">])</span>\n\n<span class=\"nd\">@task</span>\n<span class=\"k\">def</span> <span class=\"nf\">stop_custom_services</span><span class=\"p\">():</span>\n    <span class=\"n\">run_clusterwide</span><span class=\"p\">([</span><span class=\"s1\">'@SYS$STARTUP:STOP_SERVICES'</span><span class=\"p\">])</span>\n    <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'@T4$SYS:T4$STOP ALL'</span><span class=\"p\">)</span>\n    <span class=\"n\">my_job</span> <span class=\"o\">=</span> <span class=\"n\">queue_job</span><span class=\"p\">(</span><span class=\"s1\">'HOUSEKEEPER'</span><span class=\"p\">)</span>\n    <span class=\"n\">watchdog</span> <span class=\"o\">=</span> <span class=\"n\">queue_job</span><span class=\"p\">(</span><span class=\"s1\">'WATCHDOG'</span><span class=\"p\">)</span>\n\n    <span class=\"n\">my_job</span><span class=\"o\">.</span><span class=\"n\">stop_queued_job</span><span class=\"p\">()</span>\n    <span class=\"n\">watchdog</span><span class=\"o\">.</span><span class=\"n\">stop_queued_job</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Check open files in DSA2, DSA3:</span>\n    <span class=\"k\">for</span> <span class=\"n\">shadow_set</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">'DSA2'</span><span class=\"p\">,</span> <span class=\"s1\">'DSA3'</span><span class=\"p\">]:</span>\n        <span class=\"n\">open_files</span> <span class=\"o\">=</span> <span class=\"n\">lsof</span><span class=\"p\">(</span><span class=\"n\">shadow_set</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">open_files</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">_file</span> <span class=\"ow\">in</span> <span class=\"n\">open_files</span><span class=\"p\">:</span>\n                <span class=\"n\">puts</span><span class=\"p\">(</span><span class=\"n\">_file</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>0.2.4 - Fixes for get and put, add ls</li>\n<li>0.2.3 - Add some minor methods and refactor</li>\n<li>0.2.2 - Add documentation example</li>\n<li>0.2.1 - Add safe_run, get_shadowset_members</li>\n<li>0.2.0 - Add PML addon, refactor</li>\n<li>0.1.3 - Add queue job stop/start</li>\n<li>0.1.2 - Add lsof wrapper</li>\n<li>0.1.1 - Add put, get wrappers</li>\n<li>0.1.0 - Initial version</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2144583, "releases": {"0.2.4": [], "0.2.4.0": [{"comment_text": "", "digests": {"md5": "84acb68456e0a5e509cec491d434fcb9", "sha256": "dc6a520f7a8ff9573a6373ebf94f331a7cd63a998d9a13e93b99b0857afc4aee"}, "downloads": -1, "filename": "fabric_vms-0.2.4.0.tar.gz", "has_sig": false, "md5_digest": "84acb68456e0a5e509cec491d434fcb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10228, "upload_time": "2015-12-14T10:27:24", "upload_time_iso_8601": "2015-12-14T10:27:24.721970Z", "url": "https://files.pythonhosted.org/packages/80/b5/72b67383324df1827a5962b09b329d54e8110b6d882c11b2ae1a67ceee77/fabric_vms-0.2.4.0.tar.gz", "yanked": false}], "0.2.4.1": [{"comment_text": "", "digests": {"md5": "fea3a8075e9f77f8a21ff64a686d978c", "sha256": "3c846547529fc2256b02b6fc029714654a655b3a0e0d1d1e7a1e706bfc5de253"}, "downloads": -1, "filename": "fabric_vms-0.2.4.1.tar.gz", "has_sig": false, "md5_digest": "fea3a8075e9f77f8a21ff64a686d978c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10397, "upload_time": "2015-12-14T10:38:11", "upload_time_iso_8601": "2015-12-14T10:38:11.118720Z", "url": "https://files.pythonhosted.org/packages/33/89/75d04ab8c6c2c8503b1cf4b8fe690c5123704e82e9d1bbc88718675ceadf/fabric_vms-0.2.4.1.tar.gz", "yanked": false}], "0.2.4.2": []}, "urls": [], "timestamp": "Fri May  8 00:44:11 2020"}