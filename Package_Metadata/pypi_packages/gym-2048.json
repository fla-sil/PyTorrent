{"info": {"author": "Sanyam Kapoor", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "Gym 2048\n=========\n\n.. image:: https://travis-ci.com/activatedgeek/gym-2048.svg?branch=master\n    :target: https://travis-ci.com/activatedgeek/gym-2048\n\n.. image:: https://badge.fury.io/py/gym-2048.svg\n    :target: https://pypi.org/project/gym-2048/\n\nThis package implements the classic grid game 2048\nfor OpenAI gym environment.\n\nInstall\n--------\n\n.. code:: shell\n\n    pip install gym-2048\n\nEnvironment(s)\n---------------\n\nThe package currently contains two environments\n\n- ``Tiny2048-v0``: A ``2 x 2`` grid game.\n- ``2048-v0``: The standard ``4 x 4`` grid game.\n\n\nAttributes\n^^^^^^^^^^^\n\n- **Observation**: All observations are ``n x n`` numpy arrays\n  representing the grid. The array is ``0`` for empty locations\n  and numbered ``2, 4, 8, ...`` wherever the tiles are placed.\n\n- **Actions**: There are four actions defined by integers.\n    - ``LEFT = 0``\n    - ``UP = 1``\n    - ``RIGHT = 2``\n    - ``DOWN = 3``\n\n- **Reward**: Reward is the total score obtained by merging any\n  potential tiles for a given action. Score obtained by merging\n  two tiles is simply the sum of values of those two tiles.\n\nRendering\n^^^^^^^^^^\n\nCurrently only basic print rendering (``mode='human'``) is supported.\nGraphic rendering support is coming soon.\n\nUsage\n------\n\nHere is a sample rollout of the game which follows the same API as\nOpenAI ``gym.Env``.\n\n.. code:: python\n\n    import gym_2048\n    import gym\n\n\n    if __name__ == '__main__':\n      env = gym.make('2048-v0')\n      env.seed(42)\n\n      env.reset()\n      env.render()\n\n      done = False\n      moves = 0\n      while not done:\n        action = env.np_random.choice(range(4), 1).item()\n        next_state, reward, done, info = env.step(action)\n        moves += 1\n\n        print('Next Action: \"{}\"\\n\\nReward: {}'.format(\n          gym_2048.Base2048Env.ACTION_STRING[action], reward))\n        env.render()\n\n      print('\\nTotal Moves: {}'.format(moves))\n\n\n**NOTE**: Top level ``import gym_2048`` is needed to ensure registration with\n``Gym``.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.github.com/activatedgeek/gym-2048", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gym-2048", "package_url": "https://pypi.org/project/gym-2048/", "platform": "", "project_url": "https://pypi.org/project/gym-2048/", "project_urls": {"Homepage": "https://www.github.com/activatedgeek/gym-2048"}, "release_url": "https://pypi.org/project/gym-2048/0.2.6/", "requires_dist": null, "requires_python": "", "summary": "OpenAI Gym Environment for 2048", "version": "0.2.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.com/activatedgeek/gym-2048\" rel=\"nofollow\"><img alt=\"https://travis-ci.com/activatedgeek/gym-2048.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a53e3fa46fe23e7ab1e153581868d73dc300a690/68747470733a2f2f7472617669732d63692e636f6d2f6163746976617465646765656b2f67796d2d323034382e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/gym-2048/\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/gym-2048.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/855001ce642a02d566f6a7c2a3862187adf753bb/68747470733a2f2f62616467652e667572792e696f2f70792f67796d2d323034382e737667\"></a>\n<p>This package implements the classic grid game 2048\nfor OpenAI gym environment.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip install gym-2048\n</pre>\n</div>\n<div id=\"environment-s\">\n<h2>Environment(s)</h2>\n<p>The package currently contains two environments</p>\n<ul>\n<li><tt><span class=\"pre\">Tiny2048-v0</span></tt>: A <tt>2 x 2</tt> grid game.</li>\n<li><tt><span class=\"pre\">2048-v0</span></tt>: The standard <tt>4 x 4</tt> grid game.</li>\n</ul>\n<div id=\"attributes\">\n<h3>Attributes</h3>\n<ul>\n<li><strong>Observation</strong>: All observations are <tt>n x n</tt> numpy arrays\nrepresenting the grid. The array is <tt>0</tt> for empty locations\nand numbered <tt>2, 4, 8, ...</tt> wherever the tiles are placed.</li>\n<li><dl>\n<dt><strong>Actions</strong>: There are four actions defined by integers.</dt>\n<dd><ul>\n<li><tt>LEFT = 0</tt></li>\n<li><tt>UP = 1</tt></li>\n<li><tt>RIGHT = 2</tt></li>\n<li><tt>DOWN = 3</tt></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><strong>Reward</strong>: Reward is the total score obtained by merging any\npotential tiles for a given action. Score obtained by merging\ntwo tiles is simply the sum of values of those two tiles.</li>\n</ul>\n</div>\n<div id=\"rendering\">\n<h3>Rendering</h3>\n<p>Currently only basic print rendering (<tt><span class=\"pre\">mode='human'</span></tt>) is supported.\nGraphic rendering support is coming soon.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Here is a sample rollout of the game which follows the same API as\nOpenAI <tt>gym.Env</tt>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">gym_2048</span>\n<span class=\"kn\">import</span> <span class=\"nn\">gym</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n  <span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">gym</span><span class=\"o\">.</span><span class=\"n\">make</span><span class=\"p\">(</span><span class=\"s1\">'2048-v0'</span><span class=\"p\">)</span>\n  <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n\n  <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n  <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">()</span>\n\n  <span class=\"n\">done</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n  <span class=\"n\">moves</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n  <span class=\"k\">while</span> <span class=\"ow\">not</span> <span class=\"n\">done</span><span class=\"p\">:</span>\n    <span class=\"n\">action</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">np_random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">item</span><span class=\"p\">()</span>\n    <span class=\"n\">next_state</span><span class=\"p\">,</span> <span class=\"n\">reward</span><span class=\"p\">,</span> <span class=\"n\">done</span><span class=\"p\">,</span> <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">)</span>\n    <span class=\"n\">moves</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Next Action: \"</span><span class=\"si\">{}</span><span class=\"s1\">\"</span><span class=\"se\">\\n\\n</span><span class=\"s1\">Reward: </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n      <span class=\"n\">gym_2048</span><span class=\"o\">.</span><span class=\"n\">Base2048Env</span><span class=\"o\">.</span><span class=\"n\">ACTION_STRING</span><span class=\"p\">[</span><span class=\"n\">action</span><span class=\"p\">],</span> <span class=\"n\">reward</span><span class=\"p\">))</span>\n    <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">()</span>\n\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">Total Moves: </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">moves</span><span class=\"p\">))</span>\n</pre>\n<p><strong>NOTE</strong>: Top level <tt>import gym_2048</tt> is needed to ensure registration with\n<tt>Gym</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 4832371, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "e2c185898f8aa5bdbb20a5ff4f306381", "sha256": "8077af1ab22b4c6ddb9d39e523334a039785d50e0efacd85a6d86ac56a0e54f1"}, "downloads": -1, "filename": "gym-2048-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e2c185898f8aa5bdbb20a5ff4f306381", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4211, "upload_time": "2018-07-05T23:09:08", "upload_time_iso_8601": "2018-07-05T23:09:08.097472Z", "url": "https://files.pythonhosted.org/packages/0e/6a/49c3fb30e9b281ea04c8f416563c0cf1f81692c3e5ba3d6b9ff986a3cb57/gym-2048-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "1e28455aa6275e694b340bf1447b4aff", "sha256": "36d802b58d70ad8903915c0da2eadcb3633808b574a0d8229d7bd690d0ad769c"}, "downloads": -1, "filename": "gym-2048-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1e28455aa6275e694b340bf1447b4aff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4464, "upload_time": "2018-07-07T20:57:07", "upload_time_iso_8601": "2018-07-07T20:57:07.553161Z", "url": "https://files.pythonhosted.org/packages/ae/88/b3e8e5cc08a4029bcb300064bb285c4fb8d50317e68eb239bb3144183b56/gym-2048-0.2.0.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "710db56253212cbd81d32ae58a85d03a", "sha256": "e90730d70a73ba5117fa5190f6d17516359aa07e29eebbb5afbe50858846412e"}, "downloads": -1, "filename": "gym-2048-0.2.4.tar.gz", "has_sig": false, "md5_digest": "710db56253212cbd81d32ae58a85d03a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4487, "upload_time": "2018-07-09T23:44:40", "upload_time_iso_8601": "2018-07-09T23:44:40.913763Z", "url": "https://files.pythonhosted.org/packages/93/f8/de5b06ccf0d1d520d94daa120ac6fc70f4a15dfbec246fccd024b81264be/gym-2048-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "b6a2c631ab179d3f2a3e110916012ebd", "sha256": "b33481b9a30a78f0579eb4eab8f15f3619ee1177ec3677f184b2705ec59e26ee"}, "downloads": -1, "filename": "gym-2048-0.2.5.tar.gz", "has_sig": false, "md5_digest": "b6a2c631ab179d3f2a3e110916012ebd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4519, "upload_time": "2018-07-09T23:46:59", "upload_time_iso_8601": "2018-07-09T23:46:59.959340Z", "url": "https://files.pythonhosted.org/packages/5f/dc/fc4aeb9b02542b772af2dad991ec3be703a63f03062a1c00ca309a525c0d/gym-2048-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "75c53e794d6d77db06bb90009b597b2a", "sha256": "13b15d0cd5ee556df33eab6861bfa94ae88aeb063fc1fd6d3e7fee230a0fa662"}, "downloads": -1, "filename": "gym-2048-0.2.6.tar.gz", "has_sig": false, "md5_digest": "75c53e794d6d77db06bb90009b597b2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4599, "upload_time": "2019-02-17T21:23:05", "upload_time_iso_8601": "2019-02-17T21:23:05.229432Z", "url": "https://files.pythonhosted.org/packages/47/47/a1f06f3a6a05b78ffee842a7cd6f6734f97b0c3600f69df7654c232f0adc/gym-2048-0.2.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "75c53e794d6d77db06bb90009b597b2a", "sha256": "13b15d0cd5ee556df33eab6861bfa94ae88aeb063fc1fd6d3e7fee230a0fa662"}, "downloads": -1, "filename": "gym-2048-0.2.6.tar.gz", "has_sig": false, "md5_digest": "75c53e794d6d77db06bb90009b597b2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4599, "upload_time": "2019-02-17T21:23:05", "upload_time_iso_8601": "2019-02-17T21:23:05.229432Z", "url": "https://files.pythonhosted.org/packages/47/47/a1f06f3a6a05b78ffee842a7cd6f6734f97b0c3600f69df7654c232f0adc/gym-2048-0.2.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:03 2020"}