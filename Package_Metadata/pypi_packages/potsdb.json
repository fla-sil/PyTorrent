{"info": {"author": "Alex Sharp, Chris McClymont", "author_email": "alex.sharp@orionvm.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "Operating System :: Unix", "Topic :: Utilities"], "description": "potsdb\n======\n\nPython client to OpenTSDB\n\nThis was designed with a long running parent program in mind, where sending metrics was something that happens on the side.\nImplemented such that sending the metric \"put\" message to the Time Series Database API does not block the calling application. This is achieved by creating a background worker thread which takes metrics off the Queue, then sending them on a TCP socket to HOST. The client.log method simply sets up and puts the metric on the Queue, then returns.\n\nWhen the client object is instantiated, a temporary socket is created to the target HOST, PORT combination to check for connectivity. This may fail with a timeout error. However if the background thread encounters socket communication problems like timeout further down the line (in the sending metrics loop) then it will silently keep trying to reconnect forever.\n\nKeep in mind that if you send a bunch of metrics through .log then immediately quit, the background thread will also terminate, without having had enough time to send your metrics properly.\n\nRate limiting for sending metrics over TCP is by default set to 100 Metrics Per Second. This can be overwritten upon instantiation.\n\nInstallation\n===\nClone this repo, then \n```\ncd potsdb\npython setup.py install\n```\nor\n```\npip install potsdb\n```\n\nUsage\n===\n```\nimport potsdb\n\n# minimum is hostname. port is defaulted to 4242:\nmetrics = potsdb.Client('hostname.local')\n# all options:\nmetrics = potsdb.Client('hostname.local', port=4242, qsize=1000, host_tag=True, mps=100, check_host=True)\n\n# qsize: Max Size of Queue. Note: if Queue reaches qsize, old metrics will be dropped. 0 = unlimited. Default is 100k\n# host_tag: True for automatic, string value for override, None for nothing\n# mps: Metrics Per Second rate limiting. Default is 0 (unlimited)\n# check_host: change to false to skip startup connectivity checking\n\n# Bare minimum is metric name, metric value\nmetrics.send('test.metric2', 100)\n# tags can also be specified\nmetrics.send('test.metric5', 100, extratag1='tagvalue', extratag2='tagvalue')\n# host tag is set automatically, but can be overwritten\nmetrics.send('test.metric6', 34, host='app1.local')\n\n# waits for all outstanding metrics to be sent and background thread closes\nmetrics.wait()\n\n```\n\nContributers\n===\n\nPotsdb was created by OrionVM as an internal project which was subsequently open sourced. Current contributors:\n\n1. Alex Sharp (alex.sharp@orionvm.com) who originally developed the project\n2. Chris McClymont (chris.mcclymont@orionvm.com), current developer and maintainer\n3. Sam Marks (http://linkedin.com/in/samuelmarks)\n4. You! Pull requests and comments welcome.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/orionvm/potsdb", "keywords": "opentsdb,tsdb,time series", "license": "GNU GPL", "maintainer": null, "maintainer_email": null, "name": "potsdb", "package_url": "https://pypi.org/project/potsdb/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/potsdb/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/orionvm/potsdb"}, "release_url": "https://pypi.org/project/potsdb/1.0.3/", "requires_dist": null, "requires_python": null, "summary": "A Python client for OpenTSDB which creates a separate thread for TCP communication.", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            potsdb<br>======<br><br>Python client to OpenTSDB<br><br>This was designed with a long running parent program in mind, where sending metrics was something that happens on the side.<br>Implemented such that sending the metric \"put\" message to the Time Series Database API does not block the calling application. This is achieved by creating a background worker thread which takes metrics off the Queue, then sending them on a TCP socket to HOST. The client.log method simply sets up and puts the metric on the Queue, then returns.<br><br>When the client object is instantiated, a temporary socket is created to the target HOST, PORT combination to check for connectivity. This may fail with a timeout error. However if the background thread encounters socket communication problems like timeout further down the line (in the sending metrics loop) then it will silently keep trying to reconnect forever.<br><br>Keep in mind that if you send a bunch of metrics through .log then immediately quit, the background thread will also terminate, without having had enough time to send your metrics properly.<br><br>Rate limiting for sending metrics over TCP is by default set to 100 Metrics Per Second. This can be overwritten upon instantiation.<br><br>Installation<br>===<br>Clone this repo, then <br>```<br>cd potsdb<br>python setup.py install<br>```<br>or<br>```<br>pip install potsdb<br>```<br><br>Usage<br>===<br>```<br>import potsdb<br><br># minimum is hostname. port is defaulted to 4242:<br>metrics = potsdb.Client('hostname.local')<br># all options:<br>metrics = potsdb.Client('hostname.local', port=4242, qsize=1000, host_tag=True, mps=100, check_host=True)<br><br># qsize: Max Size of Queue. Note: if Queue reaches qsize, old metrics will be dropped. 0 = unlimited. Default is 100k<br># host_tag: True for automatic, string value for override, None for nothing<br># mps: Metrics Per Second rate limiting. Default is 0 (unlimited)<br># check_host: change to false to skip startup connectivity checking<br><br># Bare minimum is metric name, metric value<br>metrics.send('test.metric2', 100)<br># tags can also be specified<br>metrics.send('test.metric5', 100, extratag1='tagvalue', extratag2='tagvalue')<br># host tag is set automatically, but can be overwritten<br>metrics.send('test.metric6', 34, host='app1.local')<br><br># waits for all outstanding metrics to be sent and background thread closes<br>metrics.wait()<br><br>```<br><br>Contributers<br>===<br><br>Potsdb was created by OrionVM as an internal project which was subsequently open sourced. Current contributors:<br><br>1. Alex Sharp (alex.sharp@orionvm.com) who originally developed the project<br>2. Chris McClymont (chris.mcclymont@orionvm.com), current developer and maintainer<br>3. Sam Marks (http://linkedin.com/in/samuelmarks)<br>4. You! Pull requests and comments welcome.\n          </div>"}, "last_serial": 1920852, "releases": {"0.0.1": [], "0.0.6": [{"comment_text": "", "digests": {"md5": "dc03ca0686fc7875e316457effa2eb7a", "sha256": "f5181ed5fd0d921d4fd81537dec724ea4c0aaa2f6f8328b6072d5b7cb05ebbdb"}, "downloads": -1, "filename": "potsdb-0.0.6.tar.gz", "has_sig": false, "md5_digest": "dc03ca0686fc7875e316457effa2eb7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11104, "upload_time": "2014-05-06T04:31:13", "upload_time_iso_8601": "2014-05-06T04:31:13.665056Z", "url": "https://files.pythonhosted.org/packages/b0/8e/d3160349743787e84ef1f70a3c9a03ede5e6321f24cbb3cc0be3cd710e09/potsdb-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "c64c98b7c22144c789cb58fa0642e076", "sha256": "f7f0e5160d45baadd2e6e58302a2d04881c2dbdb43d4eeb09d11c2f0828d6d2a"}, "downloads": -1, "filename": "potsdb-0.0.7.tar.gz", "has_sig": false, "md5_digest": "c64c98b7c22144c789cb58fa0642e076", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11925, "upload_time": "2014-05-07T08:05:10", "upload_time_iso_8601": "2014-05-07T08:05:10.155525Z", "url": "https://files.pythonhosted.org/packages/b6/d8/e7fdec6a09dc868c4f437bca641108f3e1f484505987f2c4e27d8755737e/potsdb-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "6c77057873e0c897843abeb12385f9c9", "sha256": "74418e12afaefda34b7e99e9716e044adfc5a8597ed558f72ac23d774596bf44"}, "downloads": -1, "filename": "potsdb-0.0.8.tar.gz", "has_sig": false, "md5_digest": "6c77057873e0c897843abeb12385f9c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12058, "upload_time": "2015-03-27T03:32:53", "upload_time_iso_8601": "2015-03-27T03:32:53.030849Z", "url": "https://files.pythonhosted.org/packages/b2/b0/76a62b675e7cbb1412cfb94088cf2b8d7820902b7871606aadf266ed3109/potsdb-0.0.8.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "b4cfa09735334e3378fabab861a4d984", "sha256": "a42342d92e48594857e3ae7509fe7f7b5dc06fcb4ade066b1b4771988c08058f"}, "downloads": -1, "filename": "potsdb-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b4cfa09735334e3378fabab861a4d984", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12215, "upload_time": "2015-04-20T02:46:26", "upload_time_iso_8601": "2015-04-20T02:46:26.478540Z", "url": "https://files.pythonhosted.org/packages/7b/1b/c85ce2f452d0eb704fe01f3d1af68ec2fc8814656cc95522f0c521c63945/potsdb-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "9ec6ac3c2547af64065d302910aaffcb", "sha256": "97453092bde2166bf33e4dce6fc8ae155c01b766ef92d51f8b37eb6c4a9e21ba"}, "downloads": -1, "filename": "potsdb-1.0.1.tar.gz", "has_sig": false, "md5_digest": "9ec6ac3c2547af64065d302910aaffcb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12292, "upload_time": "2015-07-21T07:06:03", "upload_time_iso_8601": "2015-07-21T07:06:03.010553Z", "url": "https://files.pythonhosted.org/packages/bc/a8/e141c108ad2bb9a0a6dbdc7d4f2924879968f77cd646c46cacdd3b9ad745/potsdb-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "596b3ed4f385fb5f2075f24b7079f888", "sha256": "3eb2472d04a5a34df0db6aa984d8d970d0ec942dd0df867cd93209ed96e47af2"}, "downloads": -1, "filename": "potsdb-1.0.2.tar.gz", "has_sig": false, "md5_digest": "596b3ed4f385fb5f2075f24b7079f888", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12353, "upload_time": "2015-07-21T07:22:24", "upload_time_iso_8601": "2015-07-21T07:22:24.115942Z", "url": "https://files.pythonhosted.org/packages/30/56/8974e35f8e5911d386da3533682a6f4be831d0d3b44bc299e0a9ba4efd3c/potsdb-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "ae7b71095dca0e9316f6f483662adbd1", "sha256": "ef8317e45758552c6fe15a5246f93afee6f40c1c7e08dc0469e70adf463ed447"}, "downloads": -1, "filename": "potsdb-1.0.3.tar.gz", "has_sig": false, "md5_digest": "ae7b71095dca0e9316f6f483662adbd1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12703, "upload_time": "2016-01-25T00:22:22", "upload_time_iso_8601": "2016-01-25T00:22:22.046915Z", "url": "https://files.pythonhosted.org/packages/14/dd/c7c618f87cb6005adf86eafa08e33f2e807dbd2128d992e53d5ee1a87cbc/potsdb-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ae7b71095dca0e9316f6f483662adbd1", "sha256": "ef8317e45758552c6fe15a5246f93afee6f40c1c7e08dc0469e70adf463ed447"}, "downloads": -1, "filename": "potsdb-1.0.3.tar.gz", "has_sig": false, "md5_digest": "ae7b71095dca0e9316f6f483662adbd1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12703, "upload_time": "2016-01-25T00:22:22", "upload_time_iso_8601": "2016-01-25T00:22:22.046915Z", "url": "https://files.pythonhosted.org/packages/14/dd/c7c618f87cb6005adf86eafa08e33f2e807dbd2128d992e53d5ee1a87cbc/potsdb-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:20:49 2020"}