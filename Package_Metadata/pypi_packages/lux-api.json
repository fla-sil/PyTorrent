{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Intended Audience :: Developers", "Intended Audience :: Other Audience", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Visualization"], "description": "<p align=\"center\"><a href=\"#\"><img width=77% alt=\"\" src=\"https://github.com/lux-org/lux/blob/master/examples/img/logo.png?raw=true\"></a></p>\n<h2 align=\"center\">A Python API for Intelligent Visual Discovery</h2>\n\n<p align=\"center\">\n    <a href=\"https://travis-ci.org/lux-org/lux\">\n        <img alt=\"Build Status\" src=\"https://travis-ci.org/lux-org/lux.svg?branch=master\" align=\"center\">\n    </a>\n    <a href=\"https://badge.fury.io/py/lux-api\">\n        <img src=\"https://badge.fury.io/py/lux-api.svg\" alt=\"PyPI version\" height=\"18\" align=\"center\">\n    </a>\n    <a href='https://lux-api.readthedocs.io/en/latest/?badge=latest'>\n        <img src='https://readthedocs.org/projects/lux-api/badge/?version=latest' alt='Documentation Status'  align=\"center\"/>\n    </a>\n</p>\n\nLux is a Python library that makes data science easier by automating certain aspects of the data exploration process. Lux is designed to facilitate faster experimentation with data, even when the user does not have a clear idea of what they are looking for.\n\n## Features\n<p align=\"center\">\n    <img src=\"https://github.com/lux-org/lux/blob/master/examples/img/capabilities.png?raw=true\"\n        alt=\"Lux capabilities\"\n        width=\"400px\"\n        height=\"200px\" />\n</p>\nLux provides a suite of capabilities as outlined in the hierarchy above from the most basic (automatic encoding) to the most complex (predictive recommendations).\n\n### Automatic Encoding: \nLux is built on the principle that users should always be able to visualize anything they specify, without having to think about *how* the visualization should look like. Lux automatically determines the mark and channel mappings based on a set of [best practices](http://hosteddocs.ittoolbox.com/fourshowmeautomaticpresentations.pdf) from [Tableau](https://www.tableau.com). The visualizations are rendered via [Altair](https://github.com/altair-viz/altair/tree/master/altair) into [Vega-Lite](https://github.com/vega/vega-lite) specifications.\n\n```python    \n    import lux\n    # Load a dataset into Lux\n    dataset = lux.Dataset(\"data/car.csv\")\n\n    dobj = lux.DataObj(dataset,[lux.Column(\"Acceleration\"),\n                                lux.Column(\"Horsepower\")])\n```    \n<img src=\"https://github.com/lux-org/lux/blob/master/examples/img/specifiedVis.png?raw=true\"\n     alt=\"Specified Visualization\"\n     style=\"width:200px\" />\n\n### Search Space Enumeration: \n\nLux implements a set of enumeration logic that generates a visualization collection based on a partially specified query. Users can provide a list or a wildcard to iterate over combinations of filter or attribute values and quickly browse through large numbers of visualizations. The partial specification is inspired by existing work on query languages for visualization languages, including [ZQL](https://github.com/vega/compassql) and [CompassQL](https://github.com/vega/compassql).\n\nHere, we want to look at how the attributes `Weight` and `Displacement` depend on all other dimension variables.\n\n```python\ndobj = lux.DataObj(dataset,[lux.Column([\"Weight\",\"Displacement\"]),lux.Column(\"?\",dataModel=\"dimension\")])\n```\n\n<img src=\"https://github.com/lux-org/lux/blob/master/examples/img/PartialSpecificationDemo.gif?raw=true\"\n     alt=\"Specified Visualization\"\n     style=\"width:600px\" />\n\n### Analytics Modules: \n\nLux comes with a set of analytics capabilities. We can compose multiple DataObjects or DataObjectCollections to perform a specified task. \n\nFor example, we can ask which car brands have a time series of Displacement similar to that of Pontiac cars. \n```python\n    query = lux.DataObj(dataset,[lux.Column(\"Year\",channel=\"x\"),\n                            lux.Column(\"Displacement\",channel=\"y\"),\n                            lux.Row(\"Brand\",\"pontiac\")])\n\n    dobj = lux.DataObj(dataset,[lux.Column(\"Year\",channel=\"x\"),\n                                lux.Column(\"Displacement\",channel=\"y\"),\n                                lux.Row(\"Brand\",\"?\")])\n\n    result = dobj.similarPattern(query,topK=5)\n```\n<img src=\"https://github.com/lux-org/lux/blob/master/examples/img/SimilarityDemo.gif?raw=true\"\n     alt=\"Similar Patterns\"\n     style=\"width:600px\" />\n\n### Predictive Recommendation: \n\nLux has an extensible logic that determines the appropriate analytics modules to call based on the user\u2019s current state (i.e., the attributes and values they\u2019re interested in). By calling the `showMore` command, Lux guides users to potential next-steps in their exploration.\n\nIn this example, the user is interested in `Acceleration` and `Horsepower`, Lux generates three sets of recommendations, organized as separate tabs on the widget.\n\n```python\n    dobj = lux.DataObj(dataset,[lux.Column(\"Acceleration\",dataModel=\"measure\"),\n                                lux.Column(\"Horsepower\",dataModel=\"measure\")])\n    result = dobj.showMore()\n```\n<img src=\"https://github.com/lux-org/lux/blob/master/examples/img/ShowMore.gif?raw=true\"\n     alt=\"Show More Recommendations\"\n     style=\"width:600px\" />\n\n The left-hand side of the widget shows the Current View, which corresponds to the attributes that have been selected. On the right, Lux recommends:\n\n - Enhance: Adds an additional attribute to the current selection\n - Filter: Adds a filter to the current selection, while keeping X and Y fixed\n - Generalize: Removes an attribute to display a more general trend\n\n# Quick Start Installation\n\nInstall the Python Lux API through [PyPI](https://pypi.org/project/lux-api/): \n\n```bash\npip install lux-api\n```\n\nInstall the Lux Jupyter widget through [npm](https://www.npmjs.com/package/lux-widget): \n\n```bash\nnpm i lux-widget\n```\n\n# Manual Installation (dev)\n\nThere are two components of Lux: 1) Python Lux API (inside `lux/`)and 2) the jupyter widget frontend (inside `widget/`). \n\nTo install the Python Lux API: \n```bash\npip install --user -r requirements.txt\ncd lux/\npython setup.py install\n```\nTo install the widget, we need to install webpack:  \n```bash\nnpm install --save-dev webpack webpack-cli\n```\nThen, we can install the jupyter widget using the custom installation script: \n```bash\ncd widget/\nnpm install\nsh install.sh\n```\n\nFor more detailed examples of how to use Lux, check out this demo [notebook](https://github.com/lux-org/lux/blob/master/examples/demo.ipynb). \n\nLux is undergoing active development. Please report any bugs, issues, or requests through [Github Issues](https://github.com/lux-org/lux/issues).\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lux-org/lux", "keywords": "visualization analytics data-science insight discovery", "license": "", "maintainer": "Doris Jung-Lin Lee", "maintainer_email": "dorisjunglinlee@gmail.com", "name": "lux-api", "package_url": "https://pypi.org/project/lux-api/", "platform": "", "project_url": "https://pypi.org/project/lux-api/", "project_urls": {"Homepage": "https://github.com/lux-org/lux"}, "release_url": "https://pypi.org/project/lux-api/0.1.2/", "requires_dist": ["pandas", "altair", "pytest ; extra == 'test'"], "requires_python": ">=3.5", "summary": "A Python API for Intelligent Data Discovery", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\"><a href=\"#\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3bf3eabb7b4da7b1c85fca623982cfd51a827a9a/68747470733a2f2f6769746875622e636f6d2f6c75782d6f72672f6c75782f626c6f622f6d61737465722f6578616d706c65732f696d672f6c6f676f2e706e673f7261773d74727565\" width=\"77%\"></a></p>\n<h2>A Python API for Intelligent Visual Discovery</h2>\n<p align=\"center\">\n    <a href=\"https://travis-ci.org/lux-org/lux\" rel=\"nofollow\">\n        <img align=\"center\" alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/54964f4ebd5aa6d9a5a92f43b043687974791c42/68747470733a2f2f7472617669732d63692e6f72672f6c75782d6f72672f6c75782e7376673f6272616e63683d6d6173746572\">\n    </a>\n    <a href=\"https://badge.fury.io/py/lux-api\" rel=\"nofollow\">\n        <img align=\"center\" alt=\"PyPI version\" height=\"18\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/98ea14afa5e826661321e2a1e3cb7f742b991bf3/68747470733a2f2f62616467652e667572792e696f2f70792f6c75782d6170692e737667\">\n    </a>\n    <a href=\"https://lux-api.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\">\n        <img align=\"center\" alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/374234d37677b62b272eb055ecd84527ff3827bd/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6c75782d6170692f62616467652f3f76657273696f6e3d6c6174657374\">\n    </a>\n</p>\n<p>Lux is a Python library that makes data science easier by automating certain aspects of the data exploration process. Lux is designed to facilitate faster experimentation with data, even when the user does not have a clear idea of what they are looking for.</p>\n<h2>Features</h2>\n<p align=\"center\">\n    <img alt=\"Lux capabilities\" height=\"200px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/379816056a563544e33035505cff19d99b57aebc/68747470733a2f2f6769746875622e636f6d2f6c75782d6f72672f6c75782f626c6f622f6d61737465722f6578616d706c65732f696d672f6361706162696c69746965732e706e673f7261773d74727565\" width=\"400px\">\n</p>\nLux provides a suite of capabilities as outlined in the hierarchy above from the most basic (automatic encoding) to the most complex (predictive recommendations).\n<h3>Automatic Encoding:</h3>\n<p>Lux is built on the principle that users should always be able to visualize anything they specify, without having to think about <em>how</em> the visualization should look like. Lux automatically determines the mark and channel mappings based on a set of <a href=\"http://hosteddocs.ittoolbox.com/fourshowmeautomaticpresentations.pdf\" rel=\"nofollow\">best practices</a> from <a href=\"https://www.tableau.com\" rel=\"nofollow\">Tableau</a>. The visualizations are rendered via <a href=\"https://github.com/altair-viz/altair/tree/master/altair\" rel=\"nofollow\">Altair</a> into <a href=\"https://github.com/vega/vega-lite\" rel=\"nofollow\">Vega-Lite</a> specifications.</p>\n<pre>    <span class=\"kn\">import</span> <span class=\"nn\">lux</span>\n    <span class=\"c1\"># Load a dataset into Lux</span>\n    <span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">lux</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">(</span><span class=\"s2\">\"data/car.csv\"</span><span class=\"p\">)</span>\n\n    <span class=\"n\">dobj</span> <span class=\"o\">=</span> <span class=\"n\">lux</span><span class=\"o\">.</span><span class=\"n\">DataObj</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">,[</span><span class=\"n\">lux</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"s2\">\"Acceleration\"</span><span class=\"p\">),</span>\n                                <span class=\"n\">lux</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"s2\">\"Horsepower\"</span><span class=\"p\">)])</span>\n</pre>\n<p><img alt=\"Specified Visualization\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/703bd10aa08b06ad29d068b624b8d53db4ca7fec/68747470733a2f2f6769746875622e636f6d2f6c75782d6f72672f6c75782f626c6f622f6d61737465722f6578616d706c65732f696d672f7370656369666965645669732e706e673f7261773d74727565\"></p>\n<h3>Search Space Enumeration:</h3>\n<p>Lux implements a set of enumeration logic that generates a visualization collection based on a partially specified query. Users can provide a list or a wildcard to iterate over combinations of filter or attribute values and quickly browse through large numbers of visualizations. The partial specification is inspired by existing work on query languages for visualization languages, including <a href=\"https://github.com/vega/compassql\" rel=\"nofollow\">ZQL</a> and <a href=\"https://github.com/vega/compassql\" rel=\"nofollow\">CompassQL</a>.</p>\n<p>Here, we want to look at how the attributes <code>Weight</code> and <code>Displacement</code> depend on all other dimension variables.</p>\n<pre><span class=\"n\">dobj</span> <span class=\"o\">=</span> <span class=\"n\">lux</span><span class=\"o\">.</span><span class=\"n\">DataObj</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">,[</span><span class=\"n\">lux</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">([</span><span class=\"s2\">\"Weight\"</span><span class=\"p\">,</span><span class=\"s2\">\"Displacement\"</span><span class=\"p\">]),</span><span class=\"n\">lux</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"s2\">\"?\"</span><span class=\"p\">,</span><span class=\"n\">dataModel</span><span class=\"o\">=</span><span class=\"s2\">\"dimension\"</span><span class=\"p\">)])</span>\n</pre>\n<p><img alt=\"Specified Visualization\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cfad8bdd648f8e57549f1037002a24f508431644/68747470733a2f2f6769746875622e636f6d2f6c75782d6f72672f6c75782f626c6f622f6d61737465722f6578616d706c65732f696d672f5061727469616c53706563696669636174696f6e44656d6f2e6769663f7261773d74727565\"></p>\n<h3>Analytics Modules:</h3>\n<p>Lux comes with a set of analytics capabilities. We can compose multiple DataObjects or DataObjectCollections to perform a specified task.</p>\n<p>For example, we can ask which car brands have a time series of Displacement similar to that of Pontiac cars.</p>\n<pre>    <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">lux</span><span class=\"o\">.</span><span class=\"n\">DataObj</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">,[</span><span class=\"n\">lux</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"s2\">\"Year\"</span><span class=\"p\">,</span><span class=\"n\">channel</span><span class=\"o\">=</span><span class=\"s2\">\"x\"</span><span class=\"p\">),</span>\n                            <span class=\"n\">lux</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"s2\">\"Displacement\"</span><span class=\"p\">,</span><span class=\"n\">channel</span><span class=\"o\">=</span><span class=\"s2\">\"y\"</span><span class=\"p\">),</span>\n                            <span class=\"n\">lux</span><span class=\"o\">.</span><span class=\"n\">Row</span><span class=\"p\">(</span><span class=\"s2\">\"Brand\"</span><span class=\"p\">,</span><span class=\"s2\">\"pontiac\"</span><span class=\"p\">)])</span>\n\n    <span class=\"n\">dobj</span> <span class=\"o\">=</span> <span class=\"n\">lux</span><span class=\"o\">.</span><span class=\"n\">DataObj</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">,[</span><span class=\"n\">lux</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"s2\">\"Year\"</span><span class=\"p\">,</span><span class=\"n\">channel</span><span class=\"o\">=</span><span class=\"s2\">\"x\"</span><span class=\"p\">),</span>\n                                <span class=\"n\">lux</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"s2\">\"Displacement\"</span><span class=\"p\">,</span><span class=\"n\">channel</span><span class=\"o\">=</span><span class=\"s2\">\"y\"</span><span class=\"p\">),</span>\n                                <span class=\"n\">lux</span><span class=\"o\">.</span><span class=\"n\">Row</span><span class=\"p\">(</span><span class=\"s2\">\"Brand\"</span><span class=\"p\">,</span><span class=\"s2\">\"?\"</span><span class=\"p\">)])</span>\n\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">dobj</span><span class=\"o\">.</span><span class=\"n\">similarPattern</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">,</span><span class=\"n\">topK</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"Similar Patterns\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0df1a29f46609312e1239411d62f234d4b6f186e/68747470733a2f2f6769746875622e636f6d2f6c75782d6f72672f6c75782f626c6f622f6d61737465722f6578616d706c65732f696d672f53696d696c617269747944656d6f2e6769663f7261773d74727565\"></p>\n<h3>Predictive Recommendation:</h3>\n<p>Lux has an extensible logic that determines the appropriate analytics modules to call based on the user\u2019s current state (i.e., the attributes and values they\u2019re interested in). By calling the <code>showMore</code> command, Lux guides users to potential next-steps in their exploration.</p>\n<p>In this example, the user is interested in <code>Acceleration</code> and <code>Horsepower</code>, Lux generates three sets of recommendations, organized as separate tabs on the widget.</p>\n<pre>    <span class=\"n\">dobj</span> <span class=\"o\">=</span> <span class=\"n\">lux</span><span class=\"o\">.</span><span class=\"n\">DataObj</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">,[</span><span class=\"n\">lux</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"s2\">\"Acceleration\"</span><span class=\"p\">,</span><span class=\"n\">dataModel</span><span class=\"o\">=</span><span class=\"s2\">\"measure\"</span><span class=\"p\">),</span>\n                                <span class=\"n\">lux</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"s2\">\"Horsepower\"</span><span class=\"p\">,</span><span class=\"n\">dataModel</span><span class=\"o\">=</span><span class=\"s2\">\"measure\"</span><span class=\"p\">)])</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">dobj</span><span class=\"o\">.</span><span class=\"n\">showMore</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"Show More Recommendations\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c24dffe2911f2b5491044735ae8b7a42f08f11b/68747470733a2f2f6769746875622e636f6d2f6c75782d6f72672f6c75782f626c6f622f6d61737465722f6578616d706c65732f696d672f53686f774d6f72652e6769663f7261773d74727565\"></p>\n<p>The left-hand side of the widget shows the Current View, which corresponds to the attributes that have been selected. On the right, Lux recommends:</p>\n<ul>\n<li>Enhance: Adds an additional attribute to the current selection</li>\n<li>Filter: Adds a filter to the current selection, while keeping X and Y fixed</li>\n<li>Generalize: Removes an attribute to display a more general trend</li>\n</ul>\n<h1>Quick Start Installation</h1>\n<p>Install the Python Lux API through <a href=\"https://pypi.org/project/lux-api/\" rel=\"nofollow\">PyPI</a>:</p>\n<pre>pip install lux-api\n</pre>\n<p>Install the Lux Jupyter widget through <a href=\"https://www.npmjs.com/package/lux-widget\" rel=\"nofollow\">npm</a>:</p>\n<pre>npm i lux-widget\n</pre>\n<h1>Manual Installation (dev)</h1>\n<p>There are two components of Lux: 1) Python Lux API (inside <code>lux/</code>)and 2) the jupyter widget frontend (inside <code>widget/</code>).</p>\n<p>To install the Python Lux API:</p>\n<pre>pip install --user -r requirements.txt\n<span class=\"nb\">cd</span> lux/\npython setup.py install\n</pre>\n<p>To install the widget, we need to install webpack:</p>\n<pre>npm install --save-dev webpack webpack-cli\n</pre>\n<p>Then, we can install the jupyter widget using the custom installation script:</p>\n<pre><span class=\"nb\">cd</span> widget/\nnpm install\nsh install.sh\n</pre>\n<p>For more detailed examples of how to use Lux, check out this demo <a href=\"https://github.com/lux-org/lux/blob/master/examples/demo.ipynb\" rel=\"nofollow\">notebook</a>.</p>\n<p>Lux is undergoing active development. Please report any bugs, issues, or requests through <a href=\"https://github.com/lux-org/lux/issues\" rel=\"nofollow\">Github Issues</a>.</p>\n\n          </div>"}, "last_serial": 6570367, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6cbb694dd167973d3ef6dacf7e7ac5c2", "sha256": "ef74a36439ba6a5b545450f753734969bab20b6efa49f1be7f3ae97dd9117074"}, "downloads": -1, "filename": "lux_api-0.0.1-py3.7.egg", "has_sig": false, "md5_digest": "6cbb694dd167973d3ef6dacf7e7ac5c2", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.5", "size": 3540, "upload_time": "2020-01-31T15:05:27", "upload_time_iso_8601": "2020-01-31T15:05:27.098877Z", "url": "https://files.pythonhosted.org/packages/47/ec/1b7cdc3787141dd13379a0b03b8c40c2105b9b9c88f8b989e0c39f9c1718/lux_api-0.0.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "752a080d718db891e847c3bd758c3648", "sha256": "efd76e0105abf6df44bae79283bb1ed879209fe9ef81d5d6ef70033fab720534"}, "downloads": -1, "filename": "lux_api-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "752a080d718db891e847c3bd758c3648", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7659, "upload_time": "2020-01-31T15:05:12", "upload_time_iso_8601": "2020-01-31T15:05:12.187035Z", "url": "https://files.pythonhosted.org/packages/37/19/2d6dab9dd88f8d1fd861806c1a720f8ac6c3584ae0fe906a28d535ad676f/lux_api-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33660bc1c3468b18dd708c8dbd6a3e2f", "sha256": "ebf273eb5d679e7261b27ddfb40a1386ecd7b7e24f1abab5fd8a2089dea95057"}, "downloads": -1, "filename": "lux-api-0.0.1.tar.gz", "has_sig": false, "md5_digest": "33660bc1c3468b18dd708c8dbd6a3e2f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4379, "upload_time": "2020-01-31T15:05:21", "upload_time_iso_8601": "2020-01-31T15:05:21.530962Z", "url": "https://files.pythonhosted.org/packages/f1/df/7b4268b377a6eef9abc502ae3566295a711a6b6081e65f799b01039a4f89/lux-api-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "ac7c12f81a7518b791742d77437ea8b4", "sha256": "43cf307f05425b0795f15c6a3b3d64925472e147898a31a3d6e9bc7b904011c9"}, "downloads": -1, "filename": "lux_api-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ac7c12f81a7518b791742d77437ea8b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7656, "upload_time": "2020-01-31T15:05:14", "upload_time_iso_8601": "2020-01-31T15:05:14.818200Z", "url": "https://files.pythonhosted.org/packages/2f/32/f9db11f6b3fcfc4f3072b40ddf07af0abe3b08a484d8f28e0bbc9ae880f8/lux_api-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ecf04c5604a3af86b924e71a15e0b92c", "sha256": "61eea34d5815e99436a1eeef0010ee884c6b605ed0e97b3db0736932d6a56cc5"}, "downloads": -1, "filename": "lux-api-0.0.2.tar.gz", "has_sig": false, "md5_digest": "ecf04c5604a3af86b924e71a15e0b92c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4375, "upload_time": "2020-01-31T15:05:23", "upload_time_iso_8601": "2020-01-31T15:05:23.250777Z", "url": "https://files.pythonhosted.org/packages/1b/c6/d98e5434eed0a87f5d885745e5b25a0baf9707ee35b7899bca8fc63bda4d/lux-api-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "6e136489d3277e87dea93862d4d39991", "sha256": "167ef79de356f250fa2dde0befc5807d0013817eef54b6c2da2151d30b61f00f"}, "downloads": -1, "filename": "lux_api-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6e136489d3277e87dea93862d4d39991", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7657, "upload_time": "2020-01-31T15:05:16", "upload_time_iso_8601": "2020-01-31T15:05:16.625243Z", "url": "https://files.pythonhosted.org/packages/38/f9/48ce3571e2cc88452828c924426c697abdfb7e41d74a57763712a5519654/lux_api-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd3b0c6f1add81bb3907a688c154bbaa", "sha256": "cda25af132b2900f845c40e822e1c7483ace78ebfc7f2d4a4f5a8483a226384b"}, "downloads": -1, "filename": "lux-api-0.1.0.tar.gz", "has_sig": false, "md5_digest": "dd3b0c6f1add81bb3907a688c154bbaa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4376, "upload_time": "2020-01-31T15:05:24", "upload_time_iso_8601": "2020-01-31T15:05:24.704875Z", "url": "https://files.pythonhosted.org/packages/8c/cd/2fa25aebe036f8d09ccccc0dd35f3106ef90dceef396060f368854f778d8/lux-api-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "146f69a40dd0b20236f7ef5c1db308c7", "sha256": "99eaef075d9e26ab2c46f75bab1531666125ebec042a5211ef74a6d466635ed2"}, "downloads": -1, "filename": "lux_api-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "146f69a40dd0b20236f7ef5c1db308c7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 58568, "upload_time": "2020-01-31T20:54:59", "upload_time_iso_8601": "2020-01-31T20:54:59.466108Z", "url": "https://files.pythonhosted.org/packages/d7/9f/b33ecd45348905d62615d505d57e687f198a76e842c35dff1c3a12da0f12/lux_api-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f6095bd838106779b5245906b68b483", "sha256": "e1d2ba1d6798ed2469a9a1da164f4ecb846ba57bdaa17785b49544ce16c71271"}, "downloads": -1, "filename": "lux-api-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7f6095bd838106779b5245906b68b483", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 24645, "upload_time": "2020-01-31T20:55:00", "upload_time_iso_8601": "2020-01-31T20:55:00.840537Z", "url": "https://files.pythonhosted.org/packages/41/b3/87d8ebf0400035977e3103fd4af24f3eaddc1ecde60172465aa0d1863c54/lux-api-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "112eed05d9fb735087e664dd34bd5868", "sha256": "ae2ef44ff270c16b08794ea9ece69d98505503a3a327b400b274f28e233ee3e2"}, "downloads": -1, "filename": "lux_api-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "112eed05d9fb735087e664dd34bd5868", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 58919, "upload_time": "2020-02-04T18:15:43", "upload_time_iso_8601": "2020-02-04T18:15:43.677199Z", "url": "https://files.pythonhosted.org/packages/ea/fe/ef7fc69f8674bff94b9a78c864ef3531854d5545d9a66c35c4d05cf2bb05/lux_api-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6d61769b32a24e6bfd4b7578ccb0c9d", "sha256": "2c4b36a320a7565f2e883970cc21e2ecf92e6d3145d62cb1f1e1dc36c4af87ce"}, "downloads": -1, "filename": "lux-api-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e6d61769b32a24e6bfd4b7578ccb0c9d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 25169, "upload_time": "2020-02-04T18:15:45", "upload_time_iso_8601": "2020-02-04T18:15:45.608582Z", "url": "https://files.pythonhosted.org/packages/b7/1e/f35d875a3f8e6d3d0d3d50b4c5dd891b90161ee0d617d5ac7e910e4dcba1/lux-api-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "112eed05d9fb735087e664dd34bd5868", "sha256": "ae2ef44ff270c16b08794ea9ece69d98505503a3a327b400b274f28e233ee3e2"}, "downloads": -1, "filename": "lux_api-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "112eed05d9fb735087e664dd34bd5868", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 58919, "upload_time": "2020-02-04T18:15:43", "upload_time_iso_8601": "2020-02-04T18:15:43.677199Z", "url": "https://files.pythonhosted.org/packages/ea/fe/ef7fc69f8674bff94b9a78c864ef3531854d5545d9a66c35c4d05cf2bb05/lux_api-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6d61769b32a24e6bfd4b7578ccb0c9d", "sha256": "2c4b36a320a7565f2e883970cc21e2ecf92e6d3145d62cb1f1e1dc36c4af87ce"}, "downloads": -1, "filename": "lux-api-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e6d61769b32a24e6bfd4b7578ccb0c9d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 25169, "upload_time": "2020-02-04T18:15:45", "upload_time_iso_8601": "2020-02-04T18:15:45.608582Z", "url": "https://files.pythonhosted.org/packages/b7/1e/f35d875a3f8e6d3d0d3d50b4c5dd891b90161ee0d617d5ac7e910e4dcba1/lux-api-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:53 2020"}