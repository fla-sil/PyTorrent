{"info": {"author": "Diffeo, Inc.", "author_email": "support@diffeo.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Topic :: Utilities"], "description": "Coordinate\n==========\n\nCoordinate is a standalone server process and client library for\nmultiple-system coordination and synchronization capabilities. It\nmanages work specifications and work units, weighted scheduling,\npriority scheduling, and dependency graph.\n\nConfiguration and execution\n---------------------------\n\nIn a global yakonfig config.yaml configuration file, add ``coordinate``\nat the top level:\n\n::\n\n    coordinate:\n      server:\n        host: 0.0.0.0\n        port: 5932\n      namespace: *namespace\n      registry_addresses: ['10.0.1.x:5932']\n\nRun ``coordinated`` with this configuration, or manually specify\n``--host`` and ``--port``. The default configuration is to only listen\non the localhost interface on port 5932.\n\nThe main interface is through the ``TaskMaster`` object. This\nimplementation makes RPC calls to the coordinated server.\n\nThe server is pluggable and additional functionality can be through\nother server objects similar to the JobQueue class.\n\nRPC system\n----------\n\nCoordinated uses a simple RPC system based on CBOR messages. Client\nprocesses initiate a TCP connection as indicated in the configuration\nand send CBOR messages like (JSON syntax):\n\n::\n\n    {\"id\": 1,\n     \"method\": \"lock\",\n     \"params\": [...]}\n\nwhere ``id`` is a sequential number per client object, starting at 1.\nThere is one TCP connection per client object, but this connection is\nheld open until explicitly closed.\n\nThe responses look like:\n\n::\n\n    {\"id\": 1,\n     \"result\": \"value\"}\n\nOr:\n\n::\n\n    {\"id\": 2,\n     \"error\": {\"message\": \"No such method\"}}\n\nIf the server-side call raised an exception, the formatted traceback is\nincluded as the error message.\n\nThe server supports a CBOR list of request messages, and will return a\nCBOR list of responses.\n\nClient classes subclass ``coordinated._cbor_rpc_client.CborRpcClient``\nand call ``_rpc()`` to perform a call. This method blocks on the\nconnection and response. If the server returned the error form, this is\nraised as an exception.\n\nThe server is run with a proxy object, presently\n``coordinated.lockd.MultiBackendProxyObject``, and calls the requested\nmethods on that object with the requested parameters.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/diffeo/coordinate", "keywords": null, "license": "MIT/X11 license http://opensource.org/licenses/MIT", "maintainer": null, "maintainer_email": null, "name": "coordinate", "package_url": "https://pypi.org/project/coordinate/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/coordinate/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/diffeo/coordinate"}, "release_url": "https://pypi.org/project/coordinate/0.1.5/", "requires_dist": null, "requires_python": null, "summary": "Tools for large scale data clustering.", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Coordinate is a standalone server process and client library for\nmultiple-system coordination and synchronization capabilities. It\nmanages work specifications and work units, weighted scheduling,\npriority scheduling, and dependency graph.</p>\n<div id=\"configuration-and-execution\">\n<h2>Configuration and execution</h2>\n<p>In a global yakonfig config.yaml configuration file, add <tt>coordinate</tt>\nat the top level:</p>\n<pre>coordinate:\n  server:\n    host: 0.0.0.0\n    port: 5932\n  namespace: *namespace\n  registry_addresses: ['10.0.1.x:5932']\n</pre>\n<p>Run <tt>coordinated</tt> with this configuration, or manually specify\n<tt><span class=\"pre\">--host</span></tt> and <tt><span class=\"pre\">--port</span></tt>. The default configuration is to only listen\non the localhost interface on port 5932.</p>\n<p>The main interface is through the <tt>TaskMaster</tt> object. This\nimplementation makes RPC calls to the coordinated server.</p>\n<p>The server is pluggable and additional functionality can be through\nother server objects similar to the JobQueue class.</p>\n</div>\n<div id=\"rpc-system\">\n<h2>RPC system</h2>\n<p>Coordinated uses a simple RPC system based on CBOR messages. Client\nprocesses initiate a TCP connection as indicated in the configuration\nand send CBOR messages like (JSON syntax):</p>\n<pre>{\"id\": 1,\n \"method\": \"lock\",\n \"params\": [...]}\n</pre>\n<p>where <tt>id</tt> is a sequential number per client object, starting at 1.\nThere is one TCP connection per client object, but this connection is\nheld open until explicitly closed.</p>\n<p>The responses look like:</p>\n<pre>{\"id\": 1,\n \"result\": \"value\"}\n</pre>\n<p>Or:</p>\n<pre>{\"id\": 2,\n \"error\": {\"message\": \"No such method\"}}\n</pre>\n<p>If the server-side call raised an exception, the formatted traceback is\nincluded as the error message.</p>\n<p>The server supports a CBOR list of request messages, and will return a\nCBOR list of responses.</p>\n<p>Client classes subclass <tt>coordinated._cbor_rpc_client.CborRpcClient</tt>\nand call <tt>_rpc()</tt> to perform a call. This method blocks on the\nconnection and response. If the server returned the error form, this is\nraised as an exception.</p>\n<p>The server is run with a proxy object, presently\n<tt>coordinated.lockd.MultiBackendProxyObject</tt>, and calls the requested\nmethods on that object with the requested parameters.</p>\n</div>\n\n          </div>"}, "last_serial": 1679960, "releases": {"0.1.5": [{"comment_text": "", "digests": {"md5": "82815c26729280276ca7e743ae943818", "sha256": "49b07ef576ff98061c404b08edce9559786c795f0af95780e7b3a3302a7b8264"}, "downloads": -1, "filename": "coordinate-0.1.5.tar.gz", "has_sig": false, "md5_digest": "82815c26729280276ca7e743ae943818", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95790, "upload_time": "2015-08-17T02:37:22", "upload_time_iso_8601": "2015-08-17T02:37:22.009098Z", "url": "https://files.pythonhosted.org/packages/cc/f1/d140e9c050e36a32df8cd9f50c0b939307ff211ed3b0e5a54ffc55bb2eee/coordinate-0.1.5.tar.gz", "yanked": false}], "0.8.9.dev2": [{"comment_text": "", "digests": {"md5": "d46a2b426bbc240948d5b42c2d5ab93c", "sha256": "17bddecb16e8e015c3bc226fce9aa217ae26ca83fe0ef453fcb69b536265f569"}, "downloads": -1, "filename": "coordinate-0.8.9.dev2.tar.gz", "has_sig": false, "md5_digest": "d46a2b426bbc240948d5b42c2d5ab93c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73665, "upload_time": "2015-06-16T18:55:18", "upload_time_iso_8601": "2015-06-16T18:55:18.240305Z", "url": "https://files.pythonhosted.org/packages/64/b9/8957c15791fd8dc86246836b3a692f77d0b0769a27ef8bcce4b9f6956eb5/coordinate-0.8.9.dev2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "82815c26729280276ca7e743ae943818", "sha256": "49b07ef576ff98061c404b08edce9559786c795f0af95780e7b3a3302a7b8264"}, "downloads": -1, "filename": "coordinate-0.1.5.tar.gz", "has_sig": false, "md5_digest": "82815c26729280276ca7e743ae943818", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95790, "upload_time": "2015-08-17T02:37:22", "upload_time_iso_8601": "2015-08-17T02:37:22.009098Z", "url": "https://files.pythonhosted.org/packages/cc/f1/d140e9c050e36a32df8cd9f50c0b939307ff211ed3b0e5a54ffc55bb2eee/coordinate-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:19 2020"}