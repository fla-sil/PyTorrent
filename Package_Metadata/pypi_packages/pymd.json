{"info": {"author": "AQuinzi", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Topic :: Documentation", "Topic :: Software Development :: Documentation", "Topic :: Text Processing", "Topic :: Text Processing :: Markup :: HTML", "Topic :: Utilities"], "description": "pymd\r\n====\r\n\r\nDescription\r\n-----------\r\n\r\npymd is a command line wrapper for `Python\r\nMarkdown <http://pythonhosted.org/Markdown/>`__ library but having a\r\nfull HTML file instead of only what it's originally parsed.\r\n\r\npymd can parse a file, a folder or a list of files (in a .list) in their\r\nfolder or to a specific one using ``-o``. If the folder doesn't exist,\r\nit will be created.\r\n\r\nIt includes all the extensions (extra (abbreviations, attributes lists,\r\ndefinition lists, fenced code blocks, footnotes, tables, smart strong),\r\nadmonition, codehilite, headerid, meta, nl2br, sane\\_lists, toc,\r\nwikilinks) and you can add your own with ``--extension``.\r\n\r\nYou can merge the files with the ``--merge`` or ``merge`` flag. This is\r\nwhere the .list is useful because it parses the files in order. If you\r\nmerge the files but don't specify an ``-o``, the script will take the\r\nheader parent folder as the filename or where the script runs.\r\n\r\nBy default, the script embeds the css file in each document, but by\r\nusing the ``--css``, the documents will link to the specified css. You\r\ncan switch between sans (default) or serif fonts with the ``--serif``\r\ncommand\r\n\r\nThe header file is just a normal (markdown) file that is shared among\r\nthe \"project\" or is the header/title of the merged file. Thus it can\r\nhave, for example, metadata (title, author, date...), the TOC of the\r\nmerged files (using [TOC\\_HERE] placeholder), etc. The TOC's depth can\r\nbe modified using ``--toc`` (by default it shows all the headings).\r\n\r\nThe header can be specified with the ``--header`` or using a file named\r\n``_header`` in the folder or .list.\r\n\r\nYou can create a \"book\" using ``--book`` or ``book``; it just add\r\nnavigational links in the documents and creates an index files which\r\nlinks to them. There two \"styles\" of navigation links: \"prev & next\"\r\n(default) and using the titles of the files with ``--nav``. You can also\r\ncreate a custom index file and name it ``_index`` in the folder or\r\n.list, or specify one with ``--index``\r\n\r\nUsage examples\r\n--------------\r\n\r\nIn same folder:\r\n\r\n::\r\n\r\n    pymd.py nicefile.md\r\n\r\nProcess files in folder and create a book with serif font:\r\n\r\n::\r\n\r\n    pymd.py /myfolder book -o /output --serif\r\n\r\nProcess files in .list, merge them:\r\n\r\n::\r\n\r\n    pymd.py nice.list merge -o /output --header im_a_header.md\r\n\r\nMore examples and explanation (with images, yay!) in this `blog\r\npost <http://blog.aquinzi.com/pymd/>`__\r\n\r\nFeatures\r\n--------\r\n\r\n-  Batch process files (in folder or in a .list) with .md, .txt or\r\n   .markdown extensions\r\n-  Specify an output folder (with automatic creation)\r\n-  Includes all the extensions installed by `Python\r\n   Markdown <http://pythonhosted.org/Markdown/>`__ and you can even\r\n   specify your own!\r\n-  Merge files into one big HTML or create a little book with navigation\r\n   links (NEW! create your own index file)\r\n-  CSSed: leave the no-so-ugly embeded CSS (you can even switch between\r\n   sans and serif fonts) or link to one of your own if you prefer.\r\n-  Headers for files! So you can share the same metadata (like your\r\n   beautiful name and the creative title of your work) in all the files\r\n   or when you merge the files and forgot to include the main title of\r\n   your project.\r\n-  Wiki links: ``[](path) -> [title linked file](file|output_path)``\r\n-  Made with love <3\r\n\r\n\r\n\r\nChangelog\r\n===========\r\n\r\n0.5.5 \r\n--------\r\n\r\n-  Modified configuration: now global\r\n-  fix relatives paths (book)\r\n-  Wiki links to local files must use [](file|nice_file.md) syntax\r\n\r\n\r\n0.5.4 \r\n--------\r\n\r\n-  code refactoring: to classes, def changes, vars...\r\n-  fix bug when using a .list & output folder (not having name)\r\n-  python 3.3 compatibility \r\n\r\n0.5.3\r\n---------\r\n\r\n-  check book pages for navigation (if only one file, disallow)\r\n-  fix book navigation bug (having 2 files, and linking next with the 2nd, when shouldn't)\r\n-  fix: output path with one file \r\n-  fix: finding <h1>\r\n-  files are saved according to source dir tree\r\n-  option to save files in one depth dir \r\n-  relative links for book \r\n-  wiki links parsing ( [](path) -> [title linked file](output_path) )\r\n-  custom index for book\r\n-  minor python 3 compatibility \r\n-  toc depth filtering\r\n-  navbar: change css, style links, titles for navbar (option)\r\n-  better handling for merge/book options\r\n-  fix: command line options\r\n\r\n0.5\r\n------------\r\n\r\n-  fix bug in output folder (merged files)\r\n-  book support (resulting html files will have navigational links)\r\n-  User can specify installed extensions\r\n-  output folder support, with folder creation \r\n-  fixed bugs\r\n-  html5fying\r\n\r\n0.3\r\n------------\r\n\r\n-  .list support (convert & merge files according order)\r\n-  filter files to parse by extensions\r\n\r\n0.2\r\n------------\r\n\r\n-  add merge option\r\n-  add embeded CSS\r\n\r\n0.1\r\n------------\r\n\r\n-  Created", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aquinzi/pymd", "keywords": "markdown,html", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pymd", "package_url": "https://pypi.org/project/pymd/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pymd/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/aquinzi/pymd"}, "release_url": "https://pypi.org/project/pymd/0.5.5/", "requires_dist": null, "requires_python": null, "summary": "wrapper for python markdown but having a full HTML for the output (and nice things)", "version": "0.5.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pymd\">\n<h2>pymd</h2>\n<div id=\"description\">\n<h3>Description</h3>\n<p>pymd is a command line wrapper for <a href=\"http://pythonhosted.org/Markdown/\" rel=\"nofollow\">Python\nMarkdown</a> library but having a\nfull HTML file instead of only what it\u2019s originally parsed.</p>\n<p>pymd can parse a file, a folder or a list of files (in a .list) in their\nfolder or to a specific one using <tt><span class=\"pre\">-o</span></tt>. If the folder doesn\u2019t exist,\nit will be created.</p>\n<p>It includes all the extensions (extra (abbreviations, attributes lists,\ndefinition lists, fenced code blocks, footnotes, tables, smart strong),\nadmonition, codehilite, headerid, meta, nl2br, sane_lists, toc,\nwikilinks) and you can add your own with <tt><span class=\"pre\">--extension</span></tt>.</p>\n<p>You can merge the files with the <tt><span class=\"pre\">--merge</span></tt> or <tt>merge</tt> flag. This is\nwhere the .list is useful because it parses the files in order. If you\nmerge the files but don\u2019t specify an <tt><span class=\"pre\">-o</span></tt>, the script will take the\nheader parent folder as the filename or where the script runs.</p>\n<p>By default, the script embeds the css file in each document, but by\nusing the <tt><span class=\"pre\">--css</span></tt>, the documents will link to the specified css. You\ncan switch between sans (default) or serif fonts with the <tt><span class=\"pre\">--serif</span></tt>\ncommand</p>\n<p>The header file is just a normal (markdown) file that is shared among\nthe \u201cproject\u201d or is the header/title of the merged file. Thus it can\nhave, for example, metadata (title, author, date\u2026), the TOC of the\nmerged files (using [TOC_HERE] placeholder), etc. The TOC\u2019s depth can\nbe modified using <tt><span class=\"pre\">--toc</span></tt> (by default it shows all the headings).</p>\n<p>The header can be specified with the <tt><span class=\"pre\">--header</span></tt> or using a file named\n<tt>_header</tt> in the folder or .list.</p>\n<p>You can create a \u201cbook\u201d using <tt><span class=\"pre\">--book</span></tt> or <tt>book</tt>; it just add\nnavigational links in the documents and creates an index files which\nlinks to them. There two \u201cstyles\u201d of navigation links: \u201cprev &amp; next\u201d\n(default) and using the titles of the files with <tt><span class=\"pre\">--nav</span></tt>. You can also\ncreate a custom index file and name it <tt>_index</tt> in the folder or\n.list, or specify one with <tt><span class=\"pre\">--index</span></tt></p>\n</div>\n<div id=\"usage-examples\">\n<h3>Usage examples</h3>\n<p>In same folder:</p>\n<pre>pymd.py nicefile.md\n</pre>\n<p>Process files in folder and create a book with serif font:</p>\n<pre>pymd.py /myfolder book -o /output --serif\n</pre>\n<p>Process files in .list, merge them:</p>\n<pre>pymd.py nice.list merge -o /output --header im_a_header.md\n</pre>\n<p>More examples and explanation (with images, yay!) in this <a href=\"http://blog.aquinzi.com/pymd/\" rel=\"nofollow\">blog\npost</a></p>\n</div>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Batch process files (in folder or in a .list) with .md, .txt or\n.markdown extensions</li>\n<li>Specify an output folder (with automatic creation)</li>\n<li>Includes all the extensions installed by <a href=\"http://pythonhosted.org/Markdown/\" rel=\"nofollow\">Python\nMarkdown</a> and you can even\nspecify your own!</li>\n<li>Merge files into one big HTML or create a little book with navigation\nlinks (NEW! create your own index file)</li>\n<li>CSSed: leave the no-so-ugly embeded CSS (you can even switch between\nsans and serif fonts) or link to one of your own if you prefer.</li>\n<li>Headers for files! So you can share the same metadata (like your\nbeautiful name and the creative title of your work) in all the files\nor when you merge the files and forgot to include the main title of\nyour project.</li>\n<li>Wiki links: <tt><span class=\"pre\">[](path)</span> <span class=\"pre\">-&gt;</span> [title linked <span class=\"pre\">file](file|output_path)</span></tt></li>\n<li>Made with love &lt;3</li>\n</ul>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.5.5</h3>\n<ul>\n<li>Modified configuration: now global</li>\n<li>fix relatives paths (book)</li>\n<li>Wiki links to local files must use [](file|nice_file.md) syntax</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.5.4</h3>\n<ul>\n<li>code refactoring: to classes, def changes, vars\u2026</li>\n<li>fix bug when using a .list &amp; output folder (not having name)</li>\n<li>python 3.3 compatibility</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.5.3</h3>\n<ul>\n<li>check book pages for navigation (if only one file, disallow)</li>\n<li>fix book navigation bug (having 2 files, and linking next with the 2nd, when shouldn\u2019t)</li>\n<li>fix: output path with one file</li>\n<li>fix: finding &lt;h1&gt;</li>\n<li>files are saved according to source dir tree</li>\n<li>option to save files in one depth dir</li>\n<li>relative links for book</li>\n<li>wiki links parsing ( [](path) -&gt; [title linked file](output_path) )</li>\n<li>custom index for book</li>\n<li>minor python 3 compatibility</li>\n<li>toc depth filtering</li>\n<li>navbar: change css, style links, titles for navbar (option)</li>\n<li>better handling for merge/book options</li>\n<li>fix: command line options</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.5</h3>\n<ul>\n<li>fix bug in output folder (merged files)</li>\n<li>book support (resulting html files will have navigational links)</li>\n<li>User can specify installed extensions</li>\n<li>output folder support, with folder creation</li>\n<li>fixed bugs</li>\n<li>html5fying</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.3</h3>\n<ul>\n<li>.list support (convert &amp; merge files according order)</li>\n<li>filter files to parse by extensions</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.2</h3>\n<ul>\n<li>add merge option</li>\n<li>add embeded CSS</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.1</h3>\n<ul>\n<li>Created</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2340206, "releases": {"0.5.5": [{"comment_text": "", "digests": {"md5": "9833a5d714087a712e6ffea2d2518115", "sha256": "969922900c9bcd1be9ad1c8bdf5f1828d4d2c322fd92dd7701e6b9564f7c2a2c"}, "downloads": -1, "filename": "pymd-0.5.5.zip", "has_sig": false, "md5_digest": "9833a5d714087a712e6ffea2d2518115", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22795, "upload_time": "2013-12-09T16:59:22", "upload_time_iso_8601": "2013-12-09T16:59:22.553572Z", "url": "https://files.pythonhosted.org/packages/df/62/bee3afc4fc860a67548d4786f4943ecf6fa24cb123f41888cdde1049a15f/pymd-0.5.5.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9833a5d714087a712e6ffea2d2518115", "sha256": "969922900c9bcd1be9ad1c8bdf5f1828d4d2c322fd92dd7701e6b9564f7c2a2c"}, "downloads": -1, "filename": "pymd-0.5.5.zip", "has_sig": false, "md5_digest": "9833a5d714087a712e6ffea2d2518115", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22795, "upload_time": "2013-12-09T16:59:22", "upload_time_iso_8601": "2013-12-09T16:59:22.553572Z", "url": "https://files.pythonhosted.org/packages/df/62/bee3afc4fc860a67548d4786f4943ecf6fa24cb123f41888cdde1049a15f/pymd-0.5.5.zip", "yanked": false}], "timestamp": "Fri May  8 03:02:21 2020"}