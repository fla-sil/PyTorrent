{"info": {"author": "Dohoon Lee", "author_email": "dohlee.bioinfo@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Utilities"], "description": "<p align=\"center\"><img src=\"images/logo_bgwhite.png\" /></p>\n<p align=\"center\">Methylation <b>P</b>attern-based, <b>R</b>eference-free <b>I</b>nference of <b>S</b>ubclonal <b>M</b>akeup. (v1.0.1)</p>\n<p align=\"center\">\n  <a href=\"https://subclone-prism.readthedocs.io/en/latest/\"><img src=\"https://readthedocs.org/projects/subclone-prism/badge/?style=flat\" /></a>\n  <a href=\"https://pypi.python.org/pypi/\"><img src=\"https://img.shields.io/pypi/v/subclone-prism.svg\" /></a>\n  <a href=\"https://travis-ci.org/dohlee/prism\"><img src=\"https://travis-ci.org/dohlee/prism.svg?branch=master\" /></a>\n</p>\n\n\n<h2 align=\"center\">Prerequisites</h2>\n\n- **BAM file of RRBS reads, aligned by Bismark.**\n\nPRISM requires the mapping result of [Bismark](https://www.bioinformatics.babraham.ac.uk/projects/bismark/), a bisulfite read mapping tool. Also note that PRISM only applies to RRBS data, and unfortunately, the feasibility of PRISM to the data from other methylation profiling techniques such as whole genome bisulfite sequencing (WGBS), methylated DNA immunoprecipitation sequencing (MeDIP-Seq), or methyl-CpG binding domain-based capture sequencing (MBDCap-Seq) has not been verified.\n\n<h2 align=\"center\">Installation</h2>\n\nPRISM can be installed via PyPI.\n\n```bash\npip install subclone-prism\n```\n\n<h2 align=\"center\">Documentation</h2>\n\nSimple quick-start usage can be found below. If your are interested, please refer to the [full documentation](https://subclone-prism.readthedocs.io/en/latest/).\n\n<h2 align=\"center\">Usage</h2>\n\n![](images/workflow.png)\n\nThe PRISM analysis is done in three steps: `extract` - `preprocess` - `deconvolute`.\n\n## Quickstart\n\n```bash\n# Extract epiloci from BAM file.\nprism extract -i sample.bam -o sample.met\n\n# Preprocess epiloci to get finer estimates of epigenetic subclones\n# and to increase the number of fingerprint epiloci.\nprism preprocess -i sample.met -o sample.corrected.met\n\n# Infer the subclonal composition of the sample.\n# 1-sample deconvolution.\nprism deconvolute -i sample.corrected.met -o sample.prism.result\n# 2-sample deconvolution.\nprism deconvolute -i sample1.corrected.met sample2.corrected.met -o sample.prism.result\n\n# Scatterplot for visualization of the result.\nprism scatter -i sample.prism.result -o sample.png\n\n# Annotation of fingerprint epiloci for functional characterization of\n# discovered epigenetic subclones.\nprism annotate -i sample.prism.result -o sample.prism.annotated.result \\\n--beds annotation_a.bed annotation_b.bed \\\n--annotation-names ANNOTATION-A ANNOTATION-B\n```\n\n## extract\n\n`prism extract` command extracts viable epiloci from a BAM file.\nIn other words, it extracts genomic regions harboring a sufficient number of mapped reads (>= d) with a sufficient number of CpGs (>= c).\nA resulting file with those epiloci information is generated, whose file extension will be `.met` afterwards.\nTo extract epiloci with default settings (d = 20, c = 4), simply run the command below:\n\n```bash\nprism extract -i sample.bam -o sample.met\n```\n\nIf you want to specify your own cutoffs for the required sequencing depth and the number of CpGs, say, d = 15 and c = 3, run as follows:\n\n```bash\nprism extract -i sample.bam -o sample.met -d 15 -c 3\n```\n\nNote that depending on the reference genome used, you may have to specify `-u/--prepend-chr` option.\nAlso, you should use `-x/--paired` option to inform PRISM that you are using paired-end sequencing data.\nFor a more detailed description about all options, run `prism extract -h`.\n\n## preprocess\n\n`prism preprocess` command corrects for the errors in methylation patterns in order to amplify the number of *fingerprint epiloci* and calibrate for the subclone size estimates.\n\n```bash\nprism preprocess -i sample.met -o sample.corrected.met\n```\n\nYou may benefit from multithreading with `-t/--threads` option.\n\n```bash\nprism preprocess -i sample.met -o sample.corrected.met -t 30\n```\n\nThis step is resource intensive, so by default PRISM tries to pre-filters the epilocus that is not likely to be a fingerprint epilocus.\nThis pre-filtering of course can be turned off by `-f/--no-prefilter` option and this indeed gives a better estimates of subclones.\nHowever, please be warned, depending on your data size, this step will last long.\nTo help you deciding whether or not to apply prefiltering, with 30 threads (`-t 30`) ~200M met file took about 5 hours to be preprocessed without prefiltering.\n\n```bash\nprism preprocess -i sample.met -o sample.corrected.met --no-prefilter -t 30\n```\n\nFor a more detailed description about all options, run `prism preprocess -h`.\n\n## deconvolute\n\n`prism deconvolute` command infers the subclonal composition of the sample. Simply give methylation pattern-corrected epiloci file.\n\n```bash\nprism deconvolute -i sample.corrected.met -o sample.prism.result\n```\n\nAnother feature of PRISM is that it can utilize two or more samples from a single tumor at the same time, and jointly infer subclonal composition. To provoke joint-analysis, specify a list of `corrected.met` files.\n\n```bash\nprism deconvolute -i sample1.corrected.met sample2.corrected.met -o sample.prism.result\n```\n\nFor a more detailed description about all options, run `prism deconvolute -h`.\n\n\n## scatter\n\n`prism scatter` command generates a scatterplot of the PRISM analysis result. \nYou need a result of `prism deconvolute`.\nThe dimension of anlaysis (i.e., the number of samples you gave to `prism deconvolute` command) should not be more than three to visualize it.\nNote that the file extension of output file should be a general one for image files such as png, jpg, or pdf.\n\n```bash\nprism scatter -i sample.prism.result -o sample.png\n```\n\n<p align=\"center\"><img src=\"images/scatter.png\" width=\"66%\" height=\"66%\"></p>\n\n## annotate\n\n`prism annotate` command does functional annotation of the PRISM analysis result.\nIt requires collections of genomic intervals as BED files. Give one or more BED file to `prism annotate`, with representative annotation term for each BED file.\nBasically it generates annotated result, with an additional column having comma-separated terms that the epiloci is annotated to.\n\n```bash\nprism annotate -i sample.prism.result -o sample.prism.annotated.result --beds annotation_a.bed annotation_b.bed --annotation-names ANNOTATION-A ANNOTATION-B\n```\n\nTo extract epiloci with specific annotation term, use the command below.\n\n```bash\ncat sample.prism.annotated.result | grep 'ANNOTATION-A'\n```\n\nAlso, scatterplots with annotation can be generated with `--figure` option.\n\n```bash\nprism annotate -i sample.prism.reslt -o sample.prism.annotated.result --beds annotation_a.bed annotation_b.bed --annotation-names ANNOTATION-A ANNOTATION-B --figure sample.prism.annotated.png\n```\n\n<p align=\"center\"><img src=\"images/annotate.png\" width=\"66%\" height=\"66%\"></p>", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dohlee/prism", "keywords": "", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "subclone-prism", "package_url": "https://pypi.org/project/subclone-prism/", "platform": "", "project_url": "https://pypi.org/project/subclone-prism/", "project_urls": {"Homepage": "https://github.com/dohlee/prism"}, "release_url": "https://pypi.org/project/subclone-prism/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Methylation Pattern-based, Reference-free Inference of Subclonal Makeup", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f25adfc39e67edb24a6038db71fdb0a065d40a66/696d616765732f6c6f676f5f626777686974652e706e67\"></p>\n<p align=\"center\">Methylation <b>P</b>attern-based, <b>R</b>eference-free <b>I</b>nference of <b>S</b>ubclonal <b>M</b>akeup. (v1.0.1)</p>\n<p align=\"center\">\n  <a href=\"https://subclone-prism.readthedocs.io/en/latest/\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df9988a71078bf71a0b38bb6da044f5350528c49/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f737562636c6f6e652d707269736d2f62616467652f3f7374796c653d666c6174\"></a>\n  <a href=\"https://pypi.python.org/pypi/\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/de8403792995ae7f7584c5acaa437d50e2b6b003/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f737562636c6f6e652d707269736d2e737667\"></a>\n  <a href=\"https://travis-ci.org/dohlee/prism\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/984680e121540e91dd200ea0b93447d3678f0ad5/68747470733a2f2f7472617669732d63692e6f72672f646f686c65652f707269736d2e7376673f6272616e63683d6d6173746572\"></a>\n</p>\n<h2>Prerequisites</h2>\n<ul>\n<li><strong>BAM file of RRBS reads, aligned by Bismark.</strong></li>\n</ul>\n<p>PRISM requires the mapping result of <a href=\"https://www.bioinformatics.babraham.ac.uk/projects/bismark/\" rel=\"nofollow\">Bismark</a>, a bisulfite read mapping tool. Also note that PRISM only applies to RRBS data, and unfortunately, the feasibility of PRISM to the data from other methylation profiling techniques such as whole genome bisulfite sequencing (WGBS), methylated DNA immunoprecipitation sequencing (MeDIP-Seq), or methyl-CpG binding domain-based capture sequencing (MBDCap-Seq) has not been verified.</p>\n<h2>Installation</h2>\n<p>PRISM can be installed via PyPI.</p>\n<pre>pip install subclone-prism\n</pre>\n<h2>Documentation</h2>\n<p>Simple quick-start usage can be found below. If your are interested, please refer to the <a href=\"https://subclone-prism.readthedocs.io/en/latest/\" rel=\"nofollow\">full documentation</a>.</p>\n<h2>Usage</h2>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1e02db42f6bd4322104679477daf2fdd9cb6f794/696d616765732f776f726b666c6f772e706e67\"></p>\n<p>The PRISM analysis is done in three steps: <code>extract</code> - <code>preprocess</code> - <code>deconvolute</code>.</p>\n<h2>Quickstart</h2>\n<pre><span class=\"c1\"># Extract epiloci from BAM file.</span>\nprism extract -i sample.bam -o sample.met\n\n<span class=\"c1\"># Preprocess epiloci to get finer estimates of epigenetic subclones</span>\n<span class=\"c1\"># and to increase the number of fingerprint epiloci.</span>\nprism preprocess -i sample.met -o sample.corrected.met\n\n<span class=\"c1\"># Infer the subclonal composition of the sample.</span>\n<span class=\"c1\"># 1-sample deconvolution.</span>\nprism deconvolute -i sample.corrected.met -o sample.prism.result\n<span class=\"c1\"># 2-sample deconvolution.</span>\nprism deconvolute -i sample1.corrected.met sample2.corrected.met -o sample.prism.result\n\n<span class=\"c1\"># Scatterplot for visualization of the result.</span>\nprism scatter -i sample.prism.result -o sample.png\n\n<span class=\"c1\"># Annotation of fingerprint epiloci for functional characterization of</span>\n<span class=\"c1\"># discovered epigenetic subclones.</span>\nprism annotate -i sample.prism.result -o sample.prism.annotated.result <span class=\"se\">\\</span>\n--beds annotation_a.bed annotation_b.bed <span class=\"se\">\\</span>\n--annotation-names ANNOTATION-A ANNOTATION-B\n</pre>\n<h2>extract</h2>\n<p><code>prism extract</code> command extracts viable epiloci from a BAM file.\nIn other words, it extracts genomic regions harboring a sufficient number of mapped reads (&gt;= d) with a sufficient number of CpGs (&gt;= c).\nA resulting file with those epiloci information is generated, whose file extension will be <code>.met</code> afterwards.\nTo extract epiloci with default settings (d = 20, c = 4), simply run the command below:</p>\n<pre>prism extract -i sample.bam -o sample.met\n</pre>\n<p>If you want to specify your own cutoffs for the required sequencing depth and the number of CpGs, say, d = 15 and c = 3, run as follows:</p>\n<pre>prism extract -i sample.bam -o sample.met -d <span class=\"m\">15</span> -c <span class=\"m\">3</span>\n</pre>\n<p>Note that depending on the reference genome used, you may have to specify <code>-u/--prepend-chr</code> option.\nAlso, you should use <code>-x/--paired</code> option to inform PRISM that you are using paired-end sequencing data.\nFor a more detailed description about all options, run <code>prism extract -h</code>.</p>\n<h2>preprocess</h2>\n<p><code>prism preprocess</code> command corrects for the errors in methylation patterns in order to amplify the number of <em>fingerprint epiloci</em> and calibrate for the subclone size estimates.</p>\n<pre>prism preprocess -i sample.met -o sample.corrected.met\n</pre>\n<p>You may benefit from multithreading with <code>-t/--threads</code> option.</p>\n<pre>prism preprocess -i sample.met -o sample.corrected.met -t <span class=\"m\">30</span>\n</pre>\n<p>This step is resource intensive, so by default PRISM tries to pre-filters the epilocus that is not likely to be a fingerprint epilocus.\nThis pre-filtering of course can be turned off by <code>-f/--no-prefilter</code> option and this indeed gives a better estimates of subclones.\nHowever, please be warned, depending on your data size, this step will last long.\nTo help you deciding whether or not to apply prefiltering, with 30 threads (<code>-t 30</code>) ~200M met file took about 5 hours to be preprocessed without prefiltering.</p>\n<pre>prism preprocess -i sample.met -o sample.corrected.met --no-prefilter -t <span class=\"m\">30</span>\n</pre>\n<p>For a more detailed description about all options, run <code>prism preprocess -h</code>.</p>\n<h2>deconvolute</h2>\n<p><code>prism deconvolute</code> command infers the subclonal composition of the sample. Simply give methylation pattern-corrected epiloci file.</p>\n<pre>prism deconvolute -i sample.corrected.met -o sample.prism.result\n</pre>\n<p>Another feature of PRISM is that it can utilize two or more samples from a single tumor at the same time, and jointly infer subclonal composition. To provoke joint-analysis, specify a list of <code>corrected.met</code> files.</p>\n<pre>prism deconvolute -i sample1.corrected.met sample2.corrected.met -o sample.prism.result\n</pre>\n<p>For a more detailed description about all options, run <code>prism deconvolute -h</code>.</p>\n<h2>scatter</h2>\n<p><code>prism scatter</code> command generates a scatterplot of the PRISM analysis result.\nYou need a result of <code>prism deconvolute</code>.\nThe dimension of anlaysis (i.e., the number of samples you gave to <code>prism deconvolute</code> command) should not be more than three to visualize it.\nNote that the file extension of output file should be a general one for image files such as png, jpg, or pdf.</p>\n<pre>prism scatter -i sample.prism.result -o sample.png\n</pre>\n<p align=\"center\"><img height=\"66%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6943bd29d2e04f768004d3d93a623bf84b5458e8/696d616765732f736361747465722e706e67\" width=\"66%\"></p>\n<h2>annotate</h2>\n<p><code>prism annotate</code> command does functional annotation of the PRISM analysis result.\nIt requires collections of genomic intervals as BED files. Give one or more BED file to <code>prism annotate</code>, with representative annotation term for each BED file.\nBasically it generates annotated result, with an additional column having comma-separated terms that the epiloci is annotated to.</p>\n<pre>prism annotate -i sample.prism.result -o sample.prism.annotated.result --beds annotation_a.bed annotation_b.bed --annotation-names ANNOTATION-A ANNOTATION-B\n</pre>\n<p>To extract epiloci with specific annotation term, use the command below.</p>\n<pre>cat sample.prism.annotated.result <span class=\"p\">|</span> grep <span class=\"s1\">'ANNOTATION-A'</span>\n</pre>\n<p>Also, scatterplots with annotation can be generated with <code>--figure</code> option.</p>\n<pre>prism annotate -i sample.prism.reslt -o sample.prism.annotated.result --beds annotation_a.bed annotation_b.bed --annotation-names ANNOTATION-A ANNOTATION-B --figure sample.prism.annotated.png\n</pre>\n<p align=\"center\"><img height=\"66%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/993f97249fea3e1f41a71b3b061b289e6709322a/696d616765732f616e6e6f746174652e706e67\" width=\"66%\"></p>\n\n          </div>"}, "last_serial": 5280716, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a5789a787d085b3864736830596fc528", "sha256": "660548f43abcadb97a902976f6da00eede14c7e0b98eebd65e965362165f7f8b"}, "downloads": -1, "filename": "subclone-prism-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a5789a787d085b3864736830596fc528", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1769453, "upload_time": "2019-01-26T17:41:02", "upload_time_iso_8601": "2019-01-26T17:41:02.460096Z", "url": "https://files.pythonhosted.org/packages/b0/c0/6c0becb776fc45c60329e76a7d377ee061bc08c38f36d3666a68abd23836/subclone-prism-0.1.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "3ddae6fb844190279afc54116520c7b2", "sha256": "afd37562811c3c3450efd110f1237bba9e15510b4c75e5a24c1f22caf9598c34"}, "downloads": -1, "filename": "subclone-prism-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3ddae6fb844190279afc54116520c7b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 668388, "upload_time": "2019-05-17T06:09:26", "upload_time_iso_8601": "2019-05-17T06:09:26.712397Z", "url": "https://files.pythonhosted.org/packages/32/66/20349b5b9f34869012e075ee919a952b539181c12ebd3a69522ce6e52269/subclone-prism-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "7b83db9df78e1be3c691f9ed9011dd7e", "sha256": "f2710091069d568a029afa74b189154edbcd7bc2701358448e7e5e867da0b7ce"}, "downloads": -1, "filename": "subclone-prism-1.0.1.tar.gz", "has_sig": false, "md5_digest": "7b83db9df78e1be3c691f9ed9011dd7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 668388, "upload_time": "2019-05-17T06:15:18", "upload_time_iso_8601": "2019-05-17T06:15:18.836271Z", "url": "https://files.pythonhosted.org/packages/bd/b8/ea790f55517d6cf99b81503a10a48a80ed3ed3293ca7832b1d34b7dd50db/subclone-prism-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7b83db9df78e1be3c691f9ed9011dd7e", "sha256": "f2710091069d568a029afa74b189154edbcd7bc2701358448e7e5e867da0b7ce"}, "downloads": -1, "filename": "subclone-prism-1.0.1.tar.gz", "has_sig": false, "md5_digest": "7b83db9df78e1be3c691f9ed9011dd7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 668388, "upload_time": "2019-05-17T06:15:18", "upload_time_iso_8601": "2019-05-17T06:15:18.836271Z", "url": "https://files.pythonhosted.org/packages/bd/b8/ea790f55517d6cf99b81503a10a48a80ed3ed3293ca7832b1d34b7dd50db/subclone-prism-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:47 2020"}