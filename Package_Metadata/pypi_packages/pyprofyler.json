{"info": {"author": "Aly Shmahell", "author_email": "aly.shmahell@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# PyProfyler\na simple memory profiler for python programs.\n\n## Installation:\n```sh\nsudo pip3 install git+https://github.com/AlyShmahell/PyProfyler\n```\nor  \n```sh\nsudo pip3 install pyprofyler\n```\n## Example:\n```python\nfrom pyprofyler import PyProfyler\n\ndef wrapped_function():\n    array = []\n    for i in range(1,1000000):\n        array.append(i)\n    return array\n\n@PyProfyler\ndef decorated_function():\n    a_list = []\n    for i in range(1,1000000):\n        a_list.append(i)\n    return a_list\n\nif __name__ == '__main__':\n    ##############################################\n    #    Profiling a function by wrapping it     #\n    ##############################################\n    wrapped_profile = PyProfyler(wrapped_function)\n    # \"Not Profiled Yet\" Message\n    print(wrapped_profile)\n    result = wrapped_profile()\n    # Profile Message, through __str__\n    print(wrapped_profile)\n    # Function Execution Result\n    print(f\"execution result: {result[10]}\")\n    # Profile Message, through __getitem__\n    print(wrapped_profile['profile'])\n    ##############################################\n    #      Profiling a decorated function        #\n    ##############################################\n    # \"Not Profiled Yet\" Message\n    print(decorated_function)\n    result = decorated_function()\n    # Profile Message, through __str__\n    print(decorated_function)\n    # Function Execution Result\n    print(f\"execution result: {result[10]}\")\n    # Profile Message, through __getitem__\n    print(decorated_function['profile'])\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AlyShmahell/PyProfyler", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyprofyler", "package_url": "https://pypi.org/project/pyprofyler/", "platform": "", "project_url": "https://pypi.org/project/pyprofyler/", "project_urls": {"Homepage": "https://github.com/AlyShmahell/PyProfyler"}, "release_url": "https://pypi.org/project/pyprofyler/1.0.4/", "requires_dist": ["psutil (==5.6.1)", "cython (==0.29.6)", "numpy (==1.16.2)"], "requires_python": "", "summary": "a simple memory profiler for python programs.", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyProfyler</h1>\n<p>a simple memory profiler for python programs.</p>\n<h2>Installation:</h2>\n<pre>sudo pip3 install git+https://github.com/AlyShmahell/PyProfyler\n</pre>\n<p>or</p>\n<pre>sudo pip3 install pyprofyler\n</pre>\n<h2>Example:</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyprofyler</span> <span class=\"kn\">import</span> <span class=\"n\">PyProfyler</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">wrapped_function</span><span class=\"p\">():</span>\n    <span class=\"n\">array</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1000000</span><span class=\"p\">):</span>\n        <span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">array</span>\n\n<span class=\"nd\">@PyProfyler</span>\n<span class=\"k\">def</span> <span class=\"nf\">decorated_function</span><span class=\"p\">():</span>\n    <span class=\"n\">a_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1000000</span><span class=\"p\">):</span>\n        <span class=\"n\">a_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">a_list</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"c1\">##############################################</span>\n    <span class=\"c1\">#    Profiling a function by wrapping it     #</span>\n    <span class=\"c1\">##############################################</span>\n    <span class=\"n\">wrapped_profile</span> <span class=\"o\">=</span> <span class=\"n\">PyProfyler</span><span class=\"p\">(</span><span class=\"n\">wrapped_function</span><span class=\"p\">)</span>\n    <span class=\"c1\"># \"Not Profiled Yet\" Message</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">wrapped_profile</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">wrapped_profile</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Profile Message, through __str__</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">wrapped_profile</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Function Execution Result</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"execution result: </span><span class=\"si\">{</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Profile Message, through __getitem__</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">wrapped_profile</span><span class=\"p\">[</span><span class=\"s1\">'profile'</span><span class=\"p\">])</span>\n    <span class=\"c1\">##############################################</span>\n    <span class=\"c1\">#      Profiling a decorated function        #</span>\n    <span class=\"c1\">##############################################</span>\n    <span class=\"c1\"># \"Not Profiled Yet\" Message</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">decorated_function</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">decorated_function</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Profile Message, through __str__</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">decorated_function</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Function Execution Result</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"execution result: </span><span class=\"si\">{</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Profile Message, through __getitem__</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">decorated_function</span><span class=\"p\">[</span><span class=\"s1\">'profile'</span><span class=\"p\">])</span>\n</pre>\n\n          </div>"}, "last_serial": 5086196, "releases": {"1.0.4": [{"comment_text": "", "digests": {"md5": "ea40a352e77f1f30c0c2d1eb153eb2d6", "sha256": "faef36ec0f82b876f18d980395030bd5b21626fb68514848bd33d55c90c62fb8"}, "downloads": -1, "filename": "pyprofyler-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "ea40a352e77f1f30c0c2d1eb153eb2d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3916, "upload_time": "2019-04-03T06:03:05", "upload_time_iso_8601": "2019-04-03T06:03:05.788088Z", "url": "https://files.pythonhosted.org/packages/39/00/7b29268ba1a4d1e491bd10186a87fb0319e1dae528790a8db7a37a454e9d/pyprofyler-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1eec8ff6ff2a72f009c59020d73c4aab", "sha256": "e2263b3252ce92d48635e3e830388bf041390d9917b7a1ae1647a0a81b00cfce"}, "downloads": -1, "filename": "pyprofyler-1.0.4.tar.gz", "has_sig": false, "md5_digest": "1eec8ff6ff2a72f009c59020d73c4aab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2958, "upload_time": "2019-04-03T06:03:07", "upload_time_iso_8601": "2019-04-03T06:03:07.848013Z", "url": "https://files.pythonhosted.org/packages/5a/c1/c4b192ec198c749bb1c8be00e8407993d19283f73004a80155fc1b483afe/pyprofyler-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ea40a352e77f1f30c0c2d1eb153eb2d6", "sha256": "faef36ec0f82b876f18d980395030bd5b21626fb68514848bd33d55c90c62fb8"}, "downloads": -1, "filename": "pyprofyler-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "ea40a352e77f1f30c0c2d1eb153eb2d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3916, "upload_time": "2019-04-03T06:03:05", "upload_time_iso_8601": "2019-04-03T06:03:05.788088Z", "url": "https://files.pythonhosted.org/packages/39/00/7b29268ba1a4d1e491bd10186a87fb0319e1dae528790a8db7a37a454e9d/pyprofyler-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1eec8ff6ff2a72f009c59020d73c4aab", "sha256": "e2263b3252ce92d48635e3e830388bf041390d9917b7a1ae1647a0a81b00cfce"}, "downloads": -1, "filename": "pyprofyler-1.0.4.tar.gz", "has_sig": false, "md5_digest": "1eec8ff6ff2a72f009c59020d73c4aab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2958, "upload_time": "2019-04-03T06:03:07", "upload_time_iso_8601": "2019-04-03T06:03:07.848013Z", "url": "https://files.pythonhosted.org/packages/5a/c1/c4b192ec198c749bb1c8be00e8407993d19283f73004a80155fc1b483afe/pyprofyler-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:06 2020"}