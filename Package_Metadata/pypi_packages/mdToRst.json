{"info": {"author": "Tim Savannah", "author_email": "kata198@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Documentation", "Topic :: Software Development :: Documentation", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing", "Topic :: Text Processing :: Markup", "Topic :: Utilities"], "description": "mdToRst\n=======\n\nTool and library to convert markdown to restructed text (md to rst).\n\n\nThis tool performs some basic conversions to attempt to generate a restructed text document (RST) which renders the same, or as close as possible to a provided markdown (md).\n\nThis tool is not perfect, and may require that you write your markdown in a certain way that is apt toward conversion, but it does save a lot of time and prevent error.\n\n\nWhy?\n====\n\nIt does not make sense and is very error prone to manage two different copies of the same documentation.\n\nI really like markdown, and I absolutely despise restructed text.\n\nUnfortunately, github prefers markdown and pypi will only use RST, so all of my python projects need to have a distinct MD and RST.\n\nThe goal here is to simplify things to where you only have to write and maintain a markdown copy (README.md), and after changes you simply run README.md through mdToRst in order to output README.rst .\n\nUsage\n=====\n\n\tUsage: mdToRst [filename]\n\n\t\tConverts a provided markdown file (.md) to restructed text (.rst)\n\n\tIf \"filename\" is provided as \"\\-\\-\", the markdown will be read from stdin.\n\n\tExample Usage:\n\n\t\tmdToRst README.md | tee README.rst  # Read in README.md, convert to rst, \n\n\t\t\t\t\t\t\t\t\t\t\t#  and output both to stdout and \"README.rst\"\n\n\n\t\tcat README.md | mdToRst         # Pipe in the contents of \"README.md\", and\n\n\t\t\t\t\t\t\t\t\t\t#  output the converted document to stdout\n\n\n\nModification\n------------\n\nIf you have a usage scenario where mdToRst generates incorrect or suboptimal results, please submit an issue detailing:\n\n* How to reproduce the issue\n\n* What the expected result is\n\n* Why this makes sense\n\n* How to achieve the equivilant in RST\n\n\nand optionally submit a patch as well.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kata198/mdToRst", "keywords": "markdown,md,restructed,text,rst,convert,mdToRst,documentation,readme,README.md,README.rst", "license": "LGPLv3", "maintainer": "", "maintainer_email": "", "name": "mdToRst", "package_url": "https://pypi.org/project/mdToRst/", "platform": "", "project_url": "https://pypi.org/project/mdToRst/", "project_urls": {"Homepage": "https://github.com/kata198/mdToRst"}, "release_url": "https://pypi.org/project/mdToRst/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Tool and library to convert markdown to restructed text (md to rst)", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"mdtorst\">\n<h2>mdToRst</h2>\n<p>Tool and library to convert markdown to restructed text (md to rst).</p>\n<p>This tool performs some basic conversions to attempt to generate a restructed text document (RST) which renders the same, or as close as possible to a provided markdown (md).</p>\n<p>This tool is not perfect, and may require that you write your markdown in a certain way that is apt toward conversion, but it does save a lot of time and prevent error.</p>\n</div>\n<div id=\"why\">\n<h2>Why?</h2>\n<p>It does not make sense and is very error prone to manage two different copies of the same documentation.</p>\n<p>I really like markdown, and I absolutely despise restructed text.</p>\n<p>Unfortunately, github prefers markdown and pypi will only use RST, so all of my python projects need to have a distinct MD and RST.</p>\n<p>The goal here is to simplify things to where you only have to write and maintain a markdown copy (README.md), and after changes you simply run README.md through mdToRst in order to output README.rst .</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<blockquote>\n<p>Usage: mdToRst [filename]</p>\n<blockquote>\nConverts a provided markdown file (.md) to restructed text (.rst)</blockquote>\n<p>If \u201cfilename\u201d is provided as \u201c\u2013\u201d, the markdown will be read from stdin.</p>\n<p>Example Usage:</p>\n<blockquote>\n<p>mdToRst README.md | tee README.rst  # Read in README.md, convert to rst,</p>\n<blockquote>\n#  and output both to stdout and \u201cREADME.rst\u201d</blockquote>\n<p>cat README.md | mdToRst         # Pipe in the contents of \u201cREADME.md\u201d, and</p>\n<blockquote>\n#  output the converted document to stdout</blockquote>\n</blockquote>\n</blockquote>\n<div id=\"modification\">\n<h3>Modification</h3>\n<p>If you have a usage scenario where mdToRst generates incorrect or suboptimal results, please submit an issue detailing:</p>\n<ul>\n<li>How to reproduce the issue</li>\n<li>What the expected result is</li>\n<li>Why this makes sense</li>\n<li>How to achieve the equivilant in RST</li>\n</ul>\n<p>and optionally submit a patch as well.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3088446, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "e31afb2e8af2986d17ded1628d128d5f", "sha256": "3028dbce68e605da846a31c7dd552623ef4243702f26ecf0d903dcc38ec45d8b"}, "downloads": -1, "filename": "mdToRst-1.1.0.tar.gz", "has_sig": false, "md5_digest": "e31afb2e8af2986d17ded1628d128d5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24482, "upload_time": "2017-08-10T23:57:18", "upload_time_iso_8601": "2017-08-10T23:57:18.137068Z", "url": "https://files.pythonhosted.org/packages/71/d0/2aa79f1c646b203f79ba3cc832106ecba14e3921098baadb1acebb1eddc6/mdToRst-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e31afb2e8af2986d17ded1628d128d5f", "sha256": "3028dbce68e605da846a31c7dd552623ef4243702f26ecf0d903dcc38ec45d8b"}, "downloads": -1, "filename": "mdToRst-1.1.0.tar.gz", "has_sig": false, "md5_digest": "e31afb2e8af2986d17ded1628d128d5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24482, "upload_time": "2017-08-10T23:57:18", "upload_time_iso_8601": "2017-08-10T23:57:18.137068Z", "url": "https://files.pythonhosted.org/packages/71/d0/2aa79f1c646b203f79ba3cc832106ecba14e3921098baadb1acebb1eddc6/mdToRst-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:45 2020"}