{"info": {"author": "nielstron", "author_email": "n.muendler@web.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Object Brokering"], "description": "# Pyernluefter - a very basic python Bayernluefter bridge\n[![Build Status](https://travis-ci.com/nielstron/pyernluefter.svg?branch=master)](https://travis-ci.com/nielstron/pyernluefter)\n[![Coverage Status](https://coveralls.io/repos/github/nielstron/pyernluefter/badge.svg?branch=master)](https://coveralls.io/github/nielstron/pyernluefter?branch=master)\n[![Package Version](https://img.shields.io/pypi/v/pyernluefter)](https://pypi.org/project/PySyncThru/)\n[![Python Versions](https://img.shields.io/pypi/pyversions/pyernluefter.svg)](https://pypi.org/project/PySyncThru/)\n\nA package that connects to the Bayernluefter WiFi-Module.\nIt controls the module via the simple web-based access provided by the Bayernluft software.\nAny templates module should be supported as the tool first fetches the uploaded template and then parses\nthe exported data based on the template.\n\n## Usage\n\n```python\nimport asyncio\n\nimport aiohttp\n\nfrom pyernluefter import Bayernluefter\n\nIP_Bayernluft = '192.168.0.25'\n\n\nasync def main():\n    async with aiohttp.ClientSession() as session:\n        luefter = Bayernluefter(IP_Bayernluft, session)\n        await luefter.update()\n\n        # Show the luefter status\n        print(\"Bayernluft status:\", luefter.raw_converted())\n\n        # turn on\n        await luefter.power_on()\n\n        # set fan speed\n        await luefter.set_speed(5)\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nielstron/pyernluefter/", "keywords": "python api iot async bayernluft bayernluefter", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyernluefter", "package_url": "https://pypi.org/project/pyernluefter/", "platform": "", "project_url": "https://pypi.org/project/pyernluefter/", "project_urls": {"Homepage": "https://github.com/nielstron/pyernluefter/"}, "release_url": "https://pypi.org/project/pyernluefter/0.0.2/", "requires_dist": null, "requires_python": ">=3", "summary": "Automated async web-based communication with the Bayernluefter", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pyernluefter - a very basic python Bayernluefter bridge</h1>\n<p><a href=\"https://travis-ci.com/nielstron/pyernluefter\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b953ee095e3d9a79664bafcd6d3832bf643d9d0/68747470733a2f2f7472617669732d63692e636f6d2f6e69656c7374726f6e2f707965726e6c7565667465722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/nielstron/pyernluefter?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2bfc7297484edf6fe65481a373e619a284e94a2c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6e69656c7374726f6e2f707965726e6c7565667465722f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/PySyncThru/\" rel=\"nofollow\"><img alt=\"Package Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d3c7ec74d9dc6002d490062470f26865c5897ca9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707965726e6c756566746572\"></a>\n<a href=\"https://pypi.org/project/PySyncThru/\" rel=\"nofollow\"><img alt=\"Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51e69166dca0edf3d28713d25b06c2c0a06b0d4f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f707965726e6c7565667465722e737667\"></a></p>\n<p>A package that connects to the Bayernluefter WiFi-Module.\nIt controls the module via the simple web-based access provided by the Bayernluft software.\nAny templates module should be supported as the tool first fetches the uploaded template and then parses\nthe exported data based on the template.</p>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">aiohttp</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyernluefter</span> <span class=\"kn\">import</span> <span class=\"n\">Bayernluefter</span>\n\n<span class=\"n\">IP_Bayernluft</span> <span class=\"o\">=</span> <span class=\"s1\">'192.168.0.25'</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n        <span class=\"n\">luefter</span> <span class=\"o\">=</span> <span class=\"n\">Bayernluefter</span><span class=\"p\">(</span><span class=\"n\">IP_Bayernluft</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"p\">)</span>\n        <span class=\"k\">await</span> <span class=\"n\">luefter</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># Show the luefter status</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Bayernluft status:\"</span><span class=\"p\">,</span> <span class=\"n\">luefter</span><span class=\"o\">.</span><span class=\"n\">raw_converted</span><span class=\"p\">())</span>\n\n        <span class=\"c1\"># turn on</span>\n        <span class=\"k\">await</span> <span class=\"n\">luefter</span><span class=\"o\">.</span><span class=\"n\">power_on</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># set fan speed</span>\n        <span class=\"k\">await</span> <span class=\"n\">luefter</span><span class=\"o\">.</span><span class=\"n\">set_speed</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n\n          </div>"}, "last_serial": 7160212, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "56a8673e8bd3d2d454a92b59a27fbb80", "sha256": "d1299ad6c12444801b4ccfb0d5ec5fa0f8049a3ff5b08280ba803e4043c15f75"}, "downloads": -1, "filename": "pyernluefter-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "56a8673e8bd3d2d454a92b59a27fbb80", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 12243, "upload_time": "2020-05-03T22:41:11", "upload_time_iso_8601": "2020-05-03T22:41:11.388089Z", "url": "https://files.pythonhosted.org/packages/7f/d8/8b7aa52e0747f0705dd8053d0756ff34fe66e6fac8fc1c2175105934faec/pyernluefter-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff75ba2a0d17deb35a7feb47a5fce541", "sha256": "62291f4ced7e2434be594918ecdba2accb872557c3668d5b5e44e8433e6341da"}, "downloads": -1, "filename": "pyernluefter-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ff75ba2a0d17deb35a7feb47a5fce541", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8378, "upload_time": "2020-05-03T22:41:13", "upload_time_iso_8601": "2020-05-03T22:41:13.638624Z", "url": "https://files.pythonhosted.org/packages/de/70/d075de1a07b95bbfef1c58fd0fd58f7396b6f69ca146b13679415ff025eb/pyernluefter-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "4bc9fcc937857836134ac74ec097f241", "sha256": "57b871cf2bf912fba5a292112bc43a6af714f41ba14561f121bd2849df815827"}, "downloads": -1, "filename": "pyernluefter-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4bc9fcc937857836134ac74ec097f241", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8305, "upload_time": "2020-05-03T22:45:57", "upload_time_iso_8601": "2020-05-03T22:45:57.376806Z", "url": "https://files.pythonhosted.org/packages/3d/22/b3f7d80e989e2f3916a4b42e06c4580638b68d88e0573ebd9ca977ee2dc1/pyernluefter-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4bc9fcc937857836134ac74ec097f241", "sha256": "57b871cf2bf912fba5a292112bc43a6af714f41ba14561f121bd2849df815827"}, "downloads": -1, "filename": "pyernluefter-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4bc9fcc937857836134ac74ec097f241", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8305, "upload_time": "2020-05-03T22:45:57", "upload_time_iso_8601": "2020-05-03T22:45:57.376806Z", "url": "https://files.pythonhosted.org/packages/3d/22/b3f7d80e989e2f3916a4b42e06c4580638b68d88e0573ebd9ca977ee2dc1/pyernluefter-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:18 2020"}