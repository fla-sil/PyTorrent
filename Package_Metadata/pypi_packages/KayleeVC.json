{"info": {"author": "Clayton G. Hobbs", "author_email": "clay@lakeserv.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: X11 Applications :: GTK", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3 :: Only", "Topic :: Home Automation"], "description": "Kaylee\n======\n\nKaylee is a somewhat fancy speech recognizer that will run commands and\nperform other functions when a user speaks loosely preset sentences. It\nis based on `Blather <https://gitlab.com/jezra/blather>`__ by\n`Jezra <http://www.jezra.net/>`__, but adds a lot of features that go\nbeyond the original purpose of Blather.\n\nRequirements\n------------\n\n1. Python 3 (tested with 3.5, may work with older versions)\n2. pocketsphinx 5prealpha\n3. gstreamer-1.0 (and what ever plugin has pocketsphinx support)\n4. gstreamer-1.0 base plugins (required for ALSA)\n5. python-gobject (required for GStreamer and the GTK-based UI)\n6. python-requests (required for automatic language updating)\n\n**Note:** it may also be required to install\n``pocketsphinx-hmm-en-hub4wsj``\n\nUsage\n-----\n\n1. Copy options.json.tmp to ~/.config/kaylee/options.json and fill the\n   \"commands\" section of the file with sentences to speak and commands\n   to run.\n2. Run kaylee.py. This will generate\n   ~/.local/share/kaylee/sentences.corpus based on sentences in the\n   \"commands\" section of options.json, then use the `Sphinx Knowledge\n   Base Tool <http://www.speech.cs.cmu.edu/tools/lmtool.html>`__ to\n   create and save a new language model and dictionary.\n\n   -  For GTK UI, run kaylee.py -i g\n   -  To start a UI in 'continuous' listen mode, use the -c flag\n   -  To use a microphone other than the system default, use the -m flag\n\n3. Start talking!\n\n**Note:** default values for command-line arguments may be specified in\nthe options.json file.\n\nExamples\n~~~~~~~~\n\n-  To run Kaylee with the GTK UI, starting in continuous listen mode:\n   ``./kaylee.py -i g -c``\n\n-  To run Kaylee with no UI and using a USB microphone recognized as\n   device 2: ``./kaylee.py -m 2``\n\n-  To have Kaylee pass each word of the matched sentence as a separate\n   argument to the executed command: ``./kaylee.py -p``\n\n-  To run a command when a valid sentence has been detected:\n   ``./kaylee.py --valid-sentence-command=/path/to/command``\n\n-  To run a command when a invalid sentence has been detected:\n   ``./kaylee.py --invalid-sentence-command=/path/to/command``\n\nFinding the Device Number of a USB microphone\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThere are a few ways to find the device number of a USB microphone.\n\n-  ``cat /proc/asound/cards``\n-  ``arecord -l``", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Ratfink/kaylee", "keywords": "voice speech command control", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "KayleeVC", "package_url": "https://pypi.org/project/KayleeVC/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/KayleeVC/", "project_urls": {"Homepage": "https://github.com/Ratfink/kaylee"}, "release_url": "https://pypi.org/project/KayleeVC/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Somewhat fancy voice command recognition software", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Kaylee is a somewhat fancy speech recognizer that will run commands and\nperform other functions when a user speaks loosely preset sentences. It\nis based on <a href=\"https://gitlab.com/jezra/blather\" rel=\"nofollow\">Blather</a> by\n<a href=\"http://www.jezra.net/\" rel=\"nofollow\">Jezra</a>, but adds a lot of features that go\nbeyond the original purpose of Blather.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ol>\n<li>Python 3 (tested with 3.5, may work with older versions)</li>\n<li>pocketsphinx 5prealpha</li>\n<li>gstreamer-1.0 (and what ever plugin has pocketsphinx support)</li>\n<li>gstreamer-1.0 base plugins (required for ALSA)</li>\n<li>python-gobject (required for GStreamer and the GTK-based UI)</li>\n<li>python-requests (required for automatic language updating)</li>\n</ol>\n<p><strong>Note:</strong> it may also be required to install\n<tt><span class=\"pre\">pocketsphinx-hmm-en-hub4wsj</span></tt></p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<ol>\n<li>Copy options.json.tmp to ~/.config/kaylee/options.json and fill the\n\u201ccommands\u201d section of the file with sentences to speak and commands\nto run.</li>\n<li>Run kaylee.py. This will generate\n~/.local/share/kaylee/sentences.corpus based on sentences in the\n\u201ccommands\u201d section of options.json, then use the <a href=\"http://www.speech.cs.cmu.edu/tools/lmtool.html\" rel=\"nofollow\">Sphinx Knowledge\nBase Tool</a> to\ncreate and save a new language model and dictionary.<ul>\n<li>For GTK UI, run kaylee.py -i g</li>\n<li>To start a UI in \u2018continuous\u2019 listen mode, use the -c flag</li>\n<li>To use a microphone other than the system default, use the -m flag</li>\n</ul>\n</li>\n<li>Start talking!</li>\n</ol>\n<p><strong>Note:</strong> default values for command-line arguments may be specified in\nthe options.json file.</p>\n<div id=\"examples\">\n<h3>Examples</h3>\n<ul>\n<li>To run Kaylee with the GTK UI, starting in continuous listen mode:\n<tt>./kaylee.py <span class=\"pre\">-i</span> g <span class=\"pre\">-c</span></tt></li>\n<li>To run Kaylee with no UI and using a USB microphone recognized as\ndevice 2: <tt>./kaylee.py <span class=\"pre\">-m</span> 2</tt></li>\n<li>To have Kaylee pass each word of the matched sentence as a separate\nargument to the executed command: <tt>./kaylee.py <span class=\"pre\">-p</span></tt></li>\n<li>To run a command when a valid sentence has been detected:\n<tt>./kaylee.py <span class=\"pre\">--valid-sentence-command=/path/to/command</span></tt></li>\n<li>To run a command when a invalid sentence has been detected:\n<tt>./kaylee.py <span class=\"pre\">--invalid-sentence-command=/path/to/command</span></tt></li>\n</ul>\n</div>\n<div id=\"finding-the-device-number-of-a-usb-microphone\">\n<h3>Finding the Device Number of a USB microphone</h3>\n<p>There are a few ways to find the device number of a USB microphone.</p>\n<ul>\n<li><tt>cat /proc/asound/cards</tt></li>\n<li><tt>arecord <span class=\"pre\">-l</span></tt></li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2093124, "releases": {"0.1.0": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "086ec6ec332e8ccf2f8fbf6bcb70df1c", "sha256": "8ecc39d9f4beb92953135666f29608b3e24d1cb410a2451044250191d59b5270"}, "downloads": -1, "filename": "KayleeVC-0.1.1-py3.5.egg", "has_sig": false, "md5_digest": "086ec6ec332e8ccf2f8fbf6bcb70df1c", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 24366, "upload_time": "2016-05-01T04:41:34", "upload_time_iso_8601": "2016-05-01T04:41:34.483821Z", "url": "https://files.pythonhosted.org/packages/c6/a0/4aca10ccc16142de3636d2521de8e8ca17d43b993c518cc396e0f353e1d4/KayleeVC-0.1.1-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a67c550d3bd0dcff8eb85ca8c59bc45", "sha256": "76226cfdbe28dec01c0d81c6f8b393108e8622aa5f2f957e3a3b9552e7392eb3"}, "downloads": -1, "filename": "KayleeVC-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1a67c550d3bd0dcff8eb85ca8c59bc45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10877, "upload_time": "2016-05-01T04:29:28", "upload_time_iso_8601": "2016-05-01T04:29:28.372102Z", "url": "https://files.pythonhosted.org/packages/0b/54/3bd0ae6c9e488931eb870462c490c4b28f015a776aaf93f71a74dffe1793/KayleeVC-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "086ec6ec332e8ccf2f8fbf6bcb70df1c", "sha256": "8ecc39d9f4beb92953135666f29608b3e24d1cb410a2451044250191d59b5270"}, "downloads": -1, "filename": "KayleeVC-0.1.1-py3.5.egg", "has_sig": false, "md5_digest": "086ec6ec332e8ccf2f8fbf6bcb70df1c", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 24366, "upload_time": "2016-05-01T04:41:34", "upload_time_iso_8601": "2016-05-01T04:41:34.483821Z", "url": "https://files.pythonhosted.org/packages/c6/a0/4aca10ccc16142de3636d2521de8e8ca17d43b993c518cc396e0f353e1d4/KayleeVC-0.1.1-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a67c550d3bd0dcff8eb85ca8c59bc45", "sha256": "76226cfdbe28dec01c0d81c6f8b393108e8622aa5f2f957e3a3b9552e7392eb3"}, "downloads": -1, "filename": "KayleeVC-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1a67c550d3bd0dcff8eb85ca8c59bc45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10877, "upload_time": "2016-05-01T04:29:28", "upload_time_iso_8601": "2016-05-01T04:29:28.372102Z", "url": "https://files.pythonhosted.org/packages/0b/54/3bd0ae6c9e488931eb870462c490c4b28f015a776aaf93f71a74dffe1793/KayleeVC-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:32 2020"}