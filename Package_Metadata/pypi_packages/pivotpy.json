{"info": {"author": "Abdul Saboor", "author_email": "mass_qau@outlook.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# pivotpy\n> Python Processing Tool for Vasp Input/Output.\n\n\nThis file will become your README and also the index of your documentation.\n\n## Install\n\n`pip install pivotpy`\n\n## How to use\n\n```\nfrom pivotpy import vr_parser as vp\nxml_data=vp.read_asxml(path='../vasprun.xml')\nvr=vp.export_vasprun(path='../vasprun.xml',elim=[-5,5])\nvr.keys()\n```\n\n\n\n\n    dict_keys(['sys_info', 'dim_info', 'kpoints', 'kpath', 'bands', 'tdos', 'pro_bands', 'pro_dos', 'poscar', 'xml'])\n\n\n\n```\nprint(vp.exclude_kpts(xml_data=xml_data))\nvp.get_summary(xml_data=xml_data)\n```\n\n    10\n\n\n\n\n\n    {'SYSTEM': 'AlAs',\n     'NION': 2,\n     'TypeION': 2,\n     'ElemName': ['Al', 'As'],\n     'ElemIndex': [0, 1, 2],\n     'ISPIN': 1}\n\n\n\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\nen=vr.tdos.dos[:,0]\ndos=vr.tdos.dos[:,1]\ndplot=plt.plot(en,dos)\n```\n\n\n![png](docs/images/output_6_0.png)\n\n\n```\nfrom pivotpy import g_utils as gu\nk=vr.kpath\nef=vr.bands.E_Fermi\nevals=vr.bands.evals-ef\n#Let's interpolate our graph to see effect. It is useful for colored graphs.\nknew,enew=gu.interpolate_data(x=k,y=evals,n=10,k=3)\nplot=plt.plot(k,evals,'k',lw=5,label='real data')\nplot=plt.plot(k,evals,'w',lw=1,label='interpolated',ls='dashed')\n```\n\n\n![png](docs/images/output_7_0.png)\n\n\n## Running powershell commands from python.\nSome tasks are very tideious in python while just a click way in powershell. See below, and try to list processes in python yourself to see the difference!\n\n```\ngu.ps_to_std(ps_command='(Get-Process)[0..4]')\n```\n\n    Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName\n    -------  ------    -----      -----     ------     --  -- -----------\n    563      49    39564      75820      17.41  16184   1 AltC\n    271      17     6072      24916       1.67   6776   1 ApplicationFrameHost\n    147       9     1360       5832              5320   0 armsvc\n    413      22   300208      39312       7.42   3556   0 audiodg\n    331      17     4724       6628       2.38  14560   1 CastSrv\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/massgh/pivotpy/tree/master/", "keywords": "dft vasp visualization", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "pivotpy", "package_url": "https://pypi.org/project/pivotpy/", "platform": "", "project_url": "https://pypi.org/project/pivotpy/", "project_urls": {"Homepage": "https://github.com/massgh/pivotpy/tree/master/"}, "release_url": "https://pypi.org/project/pivotpy/0.1.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A description of your project", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pivotpy</h1>\n<blockquote>\n<p>Python Processing Tool for Vasp Input/Output.</p>\n</blockquote>\n<p>This file will become your README and also the index of your documentation.</p>\n<h2>Install</h2>\n<p><code>pip install pivotpy</code></p>\n<h2>How to use</h2>\n<pre><code>from pivotpy import vr_parser as vp\nxml_data=vp.read_asxml(path='../vasprun.xml')\nvr=vp.export_vasprun(path='../vasprun.xml',elim=[-5,5])\nvr.keys()\n</code></pre>\n<pre><code>dict_keys(['sys_info', 'dim_info', 'kpoints', 'kpath', 'bands', 'tdos', 'pro_bands', 'pro_dos', 'poscar', 'xml'])\n</code></pre>\n<pre><code>print(vp.exclude_kpts(xml_data=xml_data))\nvp.get_summary(xml_data=xml_data)\n</code></pre>\n<pre><code>10\n\n\n\n\n\n{'SYSTEM': 'AlAs',\n 'NION': 2,\n 'TypeION': 2,\n 'ElemName': ['Al', 'As'],\n 'ElemIndex': [0, 1, 2],\n 'ISPIN': 1}\n</code></pre>\n<pre><code>import matplotlib.pyplot as plt\nimport numpy as np\nen=vr.tdos.dos[:,0]\ndos=vr.tdos.dos[:,1]\ndplot=plt.plot(en,dos)\n</code></pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/405b9f4aa6ede09fcad319d5643535aa8b0f63ea/646f63732f696d616765732f6f75747075745f365f302e706e67\"></p>\n<pre><code>from pivotpy import g_utils as gu\nk=vr.kpath\nef=vr.bands.E_Fermi\nevals=vr.bands.evals-ef\n#Let's interpolate our graph to see effect. It is useful for colored graphs.\nknew,enew=gu.interpolate_data(x=k,y=evals,n=10,k=3)\nplot=plt.plot(k,evals,'k',lw=5,label='real data')\nplot=plt.plot(k,evals,'w',lw=1,label='interpolated',ls='dashed')\n</code></pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/190df2bd295d0d1a02b89f476e96e2e0cf80be39/646f63732f696d616765732f6f75747075745f375f302e706e67\"></p>\n<h2>Running powershell commands from python.</h2>\n<p>Some tasks are very tideious in python while just a click way in powershell. See below, and try to list processes in python yourself to see the difference!</p>\n<pre><code>gu.ps_to_std(ps_command='(Get-Process)[0..4]')\n</code></pre>\n<pre><code>Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName\n-------  ------    -----      -----     ------     --  -- -----------\n563      49    39564      75820      17.41  16184   1 AltC\n271      17     6072      24916       1.67   6776   1 ApplicationFrameHost\n147       9     1360       5832              5320   0 armsvc\n413      22   300208      39312       7.42   3556   0 audiodg\n331      17     4724       6628       2.38  14560   1 CastSrv\n</code></pre>\n\n          </div>"}, "last_serial": 7134301, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "fe0983339e6c2b0f1f141db1ab5d97ae", "sha256": "08bffe4bb7c5d71cd2ba5ed714d8ad15a9c034524da8fe19fa8fd67301cc4a82"}, "downloads": -1, "filename": "pivotpy-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fe0983339e6c2b0f1f141db1ab5d97ae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20757, "upload_time": "2020-04-29T18:58:51", "upload_time_iso_8601": "2020-04-29T18:58:51.855796Z", "url": "https://files.pythonhosted.org/packages/45/3d/b09a2696d6d0aa29cef4fbd344cf00065f08c1a7a7fca3989d0e3c3b4edf/pivotpy-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1759fedac675412d2432bb29083c3ae", "sha256": "8ea65dfc62bb82e839ff4713b2f04e243c4f41dbc56d31b0e92621813aa09069"}, "downloads": -1, "filename": "pivotpy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e1759fedac675412d2432bb29083c3ae", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21775, "upload_time": "2020-04-29T18:58:52", "upload_time_iso_8601": "2020-04-29T18:58:52.819779Z", "url": "https://files.pythonhosted.org/packages/89/94/70892517a1486ff96845e2121f6a485661b0f6c205e620d2e1235e97de65/pivotpy-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e34a217890874eca3968a1490df000dc", "sha256": "f53c7e4ae95d7d19ccd711f55c52de89940a54b6b57dc6443266846d1ba67a07"}, "downloads": -1, "filename": "pivotpy-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e34a217890874eca3968a1490df000dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20807, "upload_time": "2020-04-30T01:55:48", "upload_time_iso_8601": "2020-04-30T01:55:48.350123Z", "url": "https://files.pythonhosted.org/packages/04/ff/1b72772bd0570dcdb699fb927f8d26123d285e04e4e3f4f5e3c08dc92e09/pivotpy-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b82c40960ccf48308e0fadf7f9b8457", "sha256": "45dd08a2d1c85820f70a61e99fec12fd794f71e933627f7cd15e6174f6ceacde"}, "downloads": -1, "filename": "pivotpy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0b82c40960ccf48308e0fadf7f9b8457", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21808, "upload_time": "2020-04-30T01:55:49", "upload_time_iso_8601": "2020-04-30T01:55:49.122165Z", "url": "https://files.pythonhosted.org/packages/ec/86/d0f57755f949b71a7c0890d7b49c02e8a563fcd240fec34e35d0cc00be92/pivotpy-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e34a217890874eca3968a1490df000dc", "sha256": "f53c7e4ae95d7d19ccd711f55c52de89940a54b6b57dc6443266846d1ba67a07"}, "downloads": -1, "filename": "pivotpy-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e34a217890874eca3968a1490df000dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20807, "upload_time": "2020-04-30T01:55:48", "upload_time_iso_8601": "2020-04-30T01:55:48.350123Z", "url": "https://files.pythonhosted.org/packages/04/ff/1b72772bd0570dcdb699fb927f8d26123d285e04e4e3f4f5e3c08dc92e09/pivotpy-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b82c40960ccf48308e0fadf7f9b8457", "sha256": "45dd08a2d1c85820f70a61e99fec12fd794f71e933627f7cd15e6174f6ceacde"}, "downloads": -1, "filename": "pivotpy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0b82c40960ccf48308e0fadf7f9b8457", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21808, "upload_time": "2020-04-30T01:55:49", "upload_time_iso_8601": "2020-04-30T01:55:49.122165Z", "url": "https://files.pythonhosted.org/packages/ec/86/d0f57755f949b71a7c0890d7b49c02e8a563fcd240fec34e35d0cc00be92/pivotpy-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:58 2020"}