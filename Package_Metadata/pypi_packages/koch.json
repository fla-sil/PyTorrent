{"info": {"author": "Christopher H. Casebeer", "author_email": "christopher@chc.name", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Programming Language :: Python :: 2.7", "Topic :: Communications :: Ham Radio", "Topic :: Multimedia :: Sound/Audio"], "description": "Koch method Morse code trainer\n==============================\n\nCommand line `Koch method <http://www.qsl.net/n1irz/finley.morse.html>`__\nMorse code audio generation and training program.\n\nImplements:\n\n- Morse code audio playback and file generation\n- with configurable `Farnsworth timing [PDF] <http://www.arrl.org/files/file/Technology/x9004008.pdf>`_\n  (defaults to a minimum of 20 WPM characters at any WPM less than 20 WPM)\n- and filters to limit the code's audio bandwith\n- supporting a \n  `Koch method <http://web.archive.org/web/20130208133414/http://www.codepractice.com/learning.html>`__\n  CLI training program\n\nInstallation\n------------\n\n::\n\n    $ pip install koch\n\nRequires:\n\n- `audiogen <https://pypi.python.org/pypi/audiogen>`_ \n- `PyAudio <http://people.csail.mit.edu/hubert/pyaudio/>`_ for audio playback (as opposed to file generation) \n\nTested with Python 2.7.9 on Mac OS X.\n\nNote that to install the PyAudio dependency on Mac OS X, you'll need to first\ninstall ``portaudio`` with Homebrew::\n\n    $ brew install portaudio\n\nExamples\n--------\n\nPlay back strings in Morse by passing them as command line arguments::\n\n    $ koch hello world\n\nSave the generated code to a WAV file::\n\n    $ koch -f hello.wav hello world\n\nChange the code speed from the default 20 WPM to 30 WPM::\n\n    $ koch -c 30 hello world\n\nAnd the tone frequency from the default 770 Hz to 440 Hz::\n\n    $ koch -H 440 hello world\n\nTry a slower speed, which will default to Farnsworth timing with each character played\nat 20 WPM (default) but the inter-character spacings slowed to 10 WPM::\n\n    $ koch -w 10 hello world\n\nKeep the inter-character speed at 10 WPM, but increase the Farnsworth character speed to \n30 WPM::\n\n    $ koch -w 10 --cwpm 30 hello world\n\nStart a Koch method training sequence, which begins by teaching only the letter 'K' \n(default 20 WPM, 10 characters generated per training run, random word lengths)::\n\n    $ koch\n\nMove up to learning the first two characters in the Koch method (i.e. 'K' and 'M')::\n\n    $ koch -c 2\n\nThis will randomly play 10 'K' or 'M' characters in words of random lengths, then pause\nand wait for the user to hit the <Enter> key before printing the actual test sequence\nplayed. \n\nYou can also try a custom Koch alphabet, e.g. to learn in a different character order::\n\n    $ koch -a ABCDE -c 3\n\n\nSeveral options together to generate a WAV file with a 30 WPM, 440 Hz Koch training session\nthat's 20 characters long teaching letters 'K,', 'M,' and 'R'::\n\n    $ koch -w 30 -H 440 -c 20 -f koch.wav \n\nGet help with CLI options::\n\n    $ koch -h\n\nSee also\n--------\n\n- `audiogen`_ (`Github project <https://github.com/casebeer/audiogen>`_),\n  a Python generator-based audio generation and processing library\n\nContributing\n------------\n\nGet the source and report any bugs on Github:\n\n    https://github.com/casebeer/koch\n\nVersion history\n---------------\n\n- 0.0.3 - Band pass filter bug fix. Add CLI option to override default 200 Hz \n  band pass filter bandwidth. \n- 0.0.2 - Limit code audio bandwidth to 200 Hz using bandpass filters. Improved \n  file output behavior for easier scripting.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/casebeer/koch", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "koch", "package_url": "https://pypi.org/project/koch/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/koch/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/casebeer/koch"}, "release_url": "https://pypi.org/project/koch/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "Koch method Morse code training program", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Command line <a href=\"http://www.qsl.net/n1irz/finley.morse.html\" rel=\"nofollow\">Koch method</a>\nMorse code audio generation and training program.</p>\n<p>Implements:</p>\n<ul>\n<li>Morse code audio playback and file generation</li>\n<li>with configurable <a href=\"http://www.arrl.org/files/file/Technology/x9004008.pdf\" rel=\"nofollow\">Farnsworth timing [PDF]</a>\n(defaults to a minimum of 20 WPM characters at any WPM less than 20 WPM)</li>\n<li>and filters to limit the code\u2019s audio bandwith</li>\n<li>supporting a\n<a href=\"http://web.archive.org/web/20130208133414/http://www.codepractice.com/learning.html\" rel=\"nofollow\">Koch method</a>\nCLI training program</li>\n</ul>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install koch\n</pre>\n<p>Requires:</p>\n<ul>\n<li><a href=\"https://pypi.python.org/pypi/audiogen\" rel=\"nofollow\">audiogen</a></li>\n<li><a href=\"http://people.csail.mit.edu/hubert/pyaudio/\" rel=\"nofollow\">PyAudio</a> for audio playback (as opposed to file generation)</li>\n</ul>\n<p>Tested with Python 2.7.9 on Mac OS X.</p>\n<p>Note that to install the PyAudio dependency on Mac OS X, you\u2019ll need to first\ninstall <tt>portaudio</tt> with Homebrew:</p>\n<pre>$ brew install portaudio\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Play back strings in Morse by passing them as command line arguments:</p>\n<pre>$ koch hello world\n</pre>\n<p>Save the generated code to a WAV file:</p>\n<pre>$ koch -f hello.wav hello world\n</pre>\n<p>Change the code speed from the default 20 WPM to 30 WPM:</p>\n<pre>$ koch -c 30 hello world\n</pre>\n<p>And the tone frequency from the default 770 Hz to 440 Hz:</p>\n<pre>$ koch -H 440 hello world\n</pre>\n<p>Try a slower speed, which will default to Farnsworth timing with each character played\nat 20 WPM (default) but the inter-character spacings slowed to 10 WPM:</p>\n<pre>$ koch -w 10 hello world\n</pre>\n<p>Keep the inter-character speed at 10 WPM, but increase the Farnsworth character speed to\n30 WPM:</p>\n<pre>$ koch -w 10 --cwpm 30 hello world\n</pre>\n<p>Start a Koch method training sequence, which begins by teaching only the letter \u2018K\u2019\n(default 20 WPM, 10 characters generated per training run, random word lengths):</p>\n<pre>$ koch\n</pre>\n<p>Move up to learning the first two characters in the Koch method (i.e. \u2018K\u2019 and \u2018M\u2019):</p>\n<pre>$ koch -c 2\n</pre>\n<p>This will randomly play 10 \u2018K\u2019 or \u2018M\u2019 characters in words of random lengths, then pause\nand wait for the user to hit the &lt;Enter&gt; key before printing the actual test sequence\nplayed.</p>\n<p>You can also try a custom Koch alphabet, e.g. to learn in a different character order:</p>\n<pre>$ koch -a ABCDE -c 3\n</pre>\n<p>Several options together to generate a WAV file with a 30 WPM, 440 Hz Koch training session\nthat\u2019s 20 characters long teaching letters \u2018K,\u2019, \u2018M,\u2019 and \u2018R\u2019:</p>\n<pre>$ koch -w 30 -H 440 -c 20 -f koch.wav\n</pre>\n<p>Get help with CLI options:</p>\n<pre>$ koch -h\n</pre>\n</div>\n<div id=\"see-also\">\n<h2>See also</h2>\n<ul>\n<li><a href=\"https://pypi.python.org/pypi/audiogen\" rel=\"nofollow\">audiogen</a> (<a href=\"https://github.com/casebeer/audiogen\" rel=\"nofollow\">Github project</a>),\na Python generator-based audio generation and processing library</li>\n</ul>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Get the source and report any bugs on Github:</p>\n<blockquote>\n<a href=\"https://github.com/casebeer/koch\" rel=\"nofollow\">https://github.com/casebeer/koch</a></blockquote>\n</div>\n<div id=\"version-history\">\n<h2>Version history</h2>\n<ul>\n<li>0.0.3 - Band pass filter bug fix. Add CLI option to override default 200 Hz\nband pass filter bandwidth.</li>\n<li>0.0.2 - Limit code audio bandwidth to 200 Hz using bandpass filters. Improved\nfile output behavior for easier scripting.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2138880, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "a59d21ed28642077960fe4e5e2faaeec", "sha256": "a627ff9581cf4960676031cbbe5e226b51e46dafa597dbbdedbff2729bffd539"}, "downloads": -1, "filename": "koch-0.0.2.tar.gz", "has_sig": true, "md5_digest": "a59d21ed28642077960fe4e5e2faaeec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6311, "upload_time": "2016-05-28T19:55:19", "upload_time_iso_8601": "2016-05-28T19:55:19.787540Z", "url": "https://files.pythonhosted.org/packages/20/44/1e2fd391c18216d9c11cee9a166a5a34cbb57a5edf565907767df9211be0/koch-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ee1f8287061d0622e88567dcf3468194", "sha256": "f56693d903cbddc1dbecc3b774479315a2649568168676634f7e47c26f162ece"}, "downloads": -1, "filename": "koch-0.0.3.tar.gz", "has_sig": true, "md5_digest": "ee1f8287061d0622e88567dcf3468194", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6568, "upload_time": "2016-05-28T21:06:05", "upload_time_iso_8601": "2016-05-28T21:06:05.067678Z", "url": "https://files.pythonhosted.org/packages/55/67/0bc336c4d3e4b0263d15a52e262dcf42a0b1febb7ee39d4f3544c8acd990/koch-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ee1f8287061d0622e88567dcf3468194", "sha256": "f56693d903cbddc1dbecc3b774479315a2649568168676634f7e47c26f162ece"}, "downloads": -1, "filename": "koch-0.0.3.tar.gz", "has_sig": true, "md5_digest": "ee1f8287061d0622e88567dcf3468194", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6568, "upload_time": "2016-05-28T21:06:05", "upload_time_iso_8601": "2016-05-28T21:06:05.067678Z", "url": "https://files.pythonhosted.org/packages/55/67/0bc336c4d3e4b0263d15a52e262dcf42a0b1febb7ee39d4f3544c8acd990/koch-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:09 2020"}