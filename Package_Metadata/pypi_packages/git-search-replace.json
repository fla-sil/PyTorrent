{"info": {"author": "Dan Aloni", "author_email": "alonid@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 2.7"], "description": "About\n-----\n*git-search-replace* is a small utility on top of plain `git` for performing project-wide search-and-replace only on git-controlled files. It applies its searches to filenames as well as their content. The underlying syntax for the search regex is Python's.\n\nIt is designed to be a bit more instructive to the developer, compared to hackish `bash` scripts around `sed`.\n\nKey features are:\n\n* By default, only act as grep to show what is going to change.\n* Dry run mode '--diff' shows a unidiff of the changes that the search-and-replace would do, so that the developer can review for correctness. No working directory files are modified.\n* Fix mode '--fix' performs the actual changes and associated 'git mv'.\n\nSyntax\n------\n    Usage: gsr [options] (FROM-SEPARATOR-TO...)\n\n    Options:\n      -h, --help            show this help message and exit\n      -s STRING, --separator=STRING\n                        The separator string which separates FROM regex and TO expression\n      -f, --fix             Perform changes in-place\n      -d, --diff            Use 'diff' util to show differences\n\nThe expressions are tuples in the form of FROM-SEPARATOR-TO, with SEPARATOR defaults to '///'.\n\nExamples\n--------\n\nShell escaping needs to be taken into consideration. The examples below should work with the major UNIX shells.\n\n    gsr old_name///new_name --diff\n\nThis shows a diff that represents the replacement of 'old_name' with 'new_name'.\n\n    gsr \\\\bold_name\\\\b///new_name --fix\n\nThis uses Python regex expression \\b for matching at word boundaries for whole identifiers. This invocation will perform changes in-place because of '--fix'.\n\n    gsr 'things with space///with other stuff' --diff\n\nNote that shells properly de-escape the commas from the expression above.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/da-x/git-search-replace", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "git-search-replace", "package_url": "https://pypi.org/project/git-search-replace/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/git-search-replace/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/da-x/git-search-replace"}, "release_url": "https://pypi.org/project/git-search-replace/1.0.2/", "requires_dist": null, "requires_python": null, "summary": "a utility on top of git for project-wide search-and-replace that includes filenames too", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about\">\n<h2>About</h2>\n<p><em>git-search-replace</em> is a small utility on top of plain <cite>git</cite> for performing project-wide search-and-replace only on git-controlled files. It applies its searches to filenames as well as their content. The underlying syntax for the search regex is Python\u2019s.</p>\n<p>It is designed to be a bit more instructive to the developer, compared to hackish <cite>bash</cite> scripts around <cite>sed</cite>.</p>\n<p>Key features are:</p>\n<ul>\n<li>By default, only act as grep to show what is going to change.</li>\n<li>Dry run mode \u2018\u2013diff\u2019 shows a unidiff of the changes that the search-and-replace would do, so that the developer can review for correctness. No working directory files are modified.</li>\n<li>Fix mode \u2018\u2013fix\u2019 performs the actual changes and associated \u2018git mv\u2019.</li>\n</ul>\n</div>\n<div id=\"syntax\">\n<h2>Syntax</h2>\n<blockquote>\n<p>Usage: gsr [options] (FROM-SEPARATOR-TO\u2026)</p>\n<dl>\n<dt>Options:</dt>\n<dd><table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">-h</span>, <span class=\"option\">--help</span></kbd></td>\n<td>show this help message and exit</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-s <var>STRING</var></span>, <span class=\"option\">--separator=<var>STRING</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The separator string which separates FROM regex and TO expression</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-f</span>, <span class=\"option\">--fix</span></kbd></td>\n<td>Perform changes in-place</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-d</span>, <span class=\"option\">--diff</span></kbd></td>\n<td>Use \u2018diff\u2019 util to show differences</td></tr>\n</tbody>\n</table>\n</dd>\n</dl>\n</blockquote>\n<p>The expressions are tuples in the form of FROM-SEPARATOR-TO, with SEPARATOR defaults to \u2018///\u2019.</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Shell escaping needs to be taken into consideration. The examples below should work with the major UNIX shells.</p>\n<blockquote>\ngsr old_name///new_name \u2013diff</blockquote>\n<p>This shows a diff that represents the replacement of \u2018old_name\u2019 with \u2018new_name\u2019.</p>\n<blockquote>\ngsr \\bold_name\\b///new_name \u2013fix</blockquote>\n<p>This uses Python regex expression b for matching at word boundaries for whole identifiers. This invocation will perform changes in-place because of \u2018\u2013fix\u2019.</p>\n<blockquote>\ngsr \u2018things with space///with other stuff\u2019 \u2013diff</blockquote>\n<p>Note that shells properly de-escape the commas from the expression above.</p>\n</div>\n\n          </div>"}, "last_serial": 1459661, "releases": {"1.0.0": [], "1.0.1": [{"comment_text": "", "digests": {"md5": "5be1b30d72b91aee62b70429ff283568", "sha256": "f559c51ec9455fc5e9a2ad2fc0ac60cb04ed27a1871c58d81ed1d5b4344f2333"}, "downloads": -1, "filename": "git-search-replace-1.0.1.tar.gz", "has_sig": false, "md5_digest": "5be1b30d72b91aee62b70429ff283568", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3394, "upload_time": "2015-03-01T21:13:33", "upload_time_iso_8601": "2015-03-01T21:13:33.929272Z", "url": "https://files.pythonhosted.org/packages/e3/e8/288c4b24c71f580c94bce09ab93df5f7b42429eb981e1fee6092ffb8a3fc/git-search-replace-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "586673242715d2aec43eea199fd7e2ec", "sha256": "60496cb68edc9f551796ab6cdd372d8c422b404a423bcd9f1139600bf60ed04c"}, "downloads": -1, "filename": "git-search-replace-1.0.2.tar.gz", "has_sig": false, "md5_digest": "586673242715d2aec43eea199fd7e2ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3701, "upload_time": "2015-03-13T07:16:51", "upload_time_iso_8601": "2015-03-13T07:16:51.717977Z", "url": "https://files.pythonhosted.org/packages/90/7d/39e56594d583cc7dd4021f686797519730fa77f2fe40531dbca1c0354ee6/git-search-replace-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "586673242715d2aec43eea199fd7e2ec", "sha256": "60496cb68edc9f551796ab6cdd372d8c422b404a423bcd9f1139600bf60ed04c"}, "downloads": -1, "filename": "git-search-replace-1.0.2.tar.gz", "has_sig": false, "md5_digest": "586673242715d2aec43eea199fd7e2ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3701, "upload_time": "2015-03-13T07:16:51", "upload_time_iso_8601": "2015-03-13T07:16:51.717977Z", "url": "https://files.pythonhosted.org/packages/90/7d/39e56594d583cc7dd4021f686797519730fa77f2fe40531dbca1c0354ee6/git-search-replace-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:47 2020"}