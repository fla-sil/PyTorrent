{"info": {"author": "Jonathan Moss", "author_email": "jmoss@commoncode.io", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Programming Language :: Python :: 3.6", "Topic :: Utilities"], "description": "Rind\n====\n\nRind (Run in Docker) is a simple command line tool for executing things inside docker containers.\n\n\nInstallation\n------------\n\nWhilst Rind is a Python package and can be installed with `pip`, the preferred method of installed is to download the latest binary release and place it somewhere on the system ``PATH``\n\n\nConfiguration\n-------------\n\nTo `rind` enable a container a  ``app.rind`` label needs to be added. Do do this in a ``docker-compose.yml`` you would do the following:\n\n.. code-block:: yaml\n\n    services:\n        a_service:\n            image: an_image\n            labels:\n                - app.rind\n\n\nRind also has the ability to run pre-steps when executing inside the container. For example activating a Python virtualenv.\n\nTo enable a pre-step you need to add it as a value to your label.\n\n.. code-block:: yaml\n\n    services:\n        a_service:\n            image: an_image\n            labels:\n                app.rind: \"source /venv/bin/activate\"\n\n\nThis assumes you virtualenv is at ``/venv`` within your docker container. It will be combined with the actual command passed in. e.g.: ``rind /bin/sh``  would be run in your container as ``source /venv/bin/activate && /bin/sh``\n\n\nRunning\n-------\n\nEffectively anything passed as a command line argument is executed directly within the rind enabled container. e.g.\n\n.. code-block:: bash\n\n    rind ./manage.py migration\n\n\nWould run the ``manage.py`` script in the containers working directory, passing it the ``migrate`` argument\n\nIf no parameters are passed to ``rind`` then the default ``/bin/sh`` is used which will give you and interactive terminal.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/a-musing-moose/rind", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "rind", "package_url": "https://pypi.org/project/rind/", "platform": "", "project_url": "https://pypi.org/project/rind/", "project_urls": {"Homepage": "https://github.com/a-musing-moose/rind"}, "release_url": "https://pypi.org/project/rind/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Run in Docker", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Rind (Run in Docker) is a simple command line tool for executing things inside docker containers.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Whilst Rind is a Python package and can be installed with <cite>pip</cite>, the preferred method of installed is to download the latest binary release and place it somewhere on the system <tt>PATH</tt></p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>To <cite>rind</cite> enable a container a  <tt>app.rind</tt> label needs to be added. Do do this in a <tt><span class=\"pre\">docker-compose.yml</span></tt> you would do the following:</p>\n<pre><span class=\"nt\">services</span><span class=\"p\">:</span>\n    <span class=\"nt\">a_service</span><span class=\"p\">:</span>\n        <span class=\"nt\">image</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">an_image</span>\n        <span class=\"nt\">labels</span><span class=\"p\">:</span>\n            <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">app.rind</span>\n</pre>\n<p>Rind also has the ability to run pre-steps when executing inside the container. For example activating a Python virtualenv.</p>\n<p>To enable a pre-step you need to add it as a value to your label.</p>\n<pre><span class=\"nt\">services</span><span class=\"p\">:</span>\n    <span class=\"nt\">a_service</span><span class=\"p\">:</span>\n        <span class=\"nt\">image</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">an_image</span>\n        <span class=\"nt\">labels</span><span class=\"p\">:</span>\n            <span class=\"nt\">app.rind</span><span class=\"p\">:</span> <span class=\"s\">\"source</span><span class=\"nv\"> </span><span class=\"s\">/venv/bin/activate\"</span>\n</pre>\n<p>This assumes you virtualenv is at <tt>/venv</tt> within your docker container. It will be combined with the actual command passed in. e.g.: <tt>rind /bin/sh</tt>  would be run in your container as <tt>source /venv/bin/activate &amp;&amp; /bin/sh</tt></p>\n</div>\n<div id=\"running\">\n<h2>Running</h2>\n<p>Effectively anything passed as a command line argument is executed directly within the rind enabled container. e.g.</p>\n<pre>rind ./manage.py migration\n</pre>\n<p>Would run the <tt>manage.py</tt> script in the containers working directory, passing it the <tt>migrate</tt> argument</p>\n<p>If no parameters are passed to <tt>rind</tt> then the default <tt>/bin/sh</tt> is used which will give you and interactive terminal.</p>\n</div>\n\n          </div>"}, "last_serial": 3583318, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "61654cc239dbd83285912d2f65d705a7", "sha256": "ba3376db157670d6ee1266ae9746469e3cc32b6a45d10f0345655bbea5a3d5f0"}, "downloads": -1, "filename": "rind-0.1.0.tar.gz", "has_sig": false, "md5_digest": "61654cc239dbd83285912d2f65d705a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3310, "upload_time": "2018-01-27T10:05:24", "upload_time_iso_8601": "2018-01-27T10:05:24.855154Z", "url": "https://files.pythonhosted.org/packages/e0/f6/d21d4206d6a3f49a78262b80d5bf6768ab6d15bf1ea3bcb2182b44385f44/rind-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "327a4e7d3311fe0d7ecfcf58c6f91400", "sha256": "02fcf907c7afa8856641c23b451a8ab93ee494a4dffc3dde5da2e1240262a31d"}, "downloads": -1, "filename": "rind-0.2.0.tar.gz", "has_sig": false, "md5_digest": "327a4e7d3311fe0d7ecfcf58c6f91400", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3270, "upload_time": "2018-02-15T04:47:13", "upload_time_iso_8601": "2018-02-15T04:47:13.086874Z", "url": "https://files.pythonhosted.org/packages/76/56/7158c1498863c1b414b8fba3dc2bca6517b6ad1b5111155554366be1c625/rind-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "327a4e7d3311fe0d7ecfcf58c6f91400", "sha256": "02fcf907c7afa8856641c23b451a8ab93ee494a4dffc3dde5da2e1240262a31d"}, "downloads": -1, "filename": "rind-0.2.0.tar.gz", "has_sig": false, "md5_digest": "327a4e7d3311fe0d7ecfcf58c6f91400", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3270, "upload_time": "2018-02-15T04:47:13", "upload_time_iso_8601": "2018-02-15T04:47:13.086874Z", "url": "https://files.pythonhosted.org/packages/76/56/7158c1498863c1b414b8fba3dc2bca6517b6ad1b5111155554366be1c625/rind-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:38 2020"}