{"info": {"author": "Mario C\u00e9sar Se\u00f1oranis Ayala", "author_email": "mariocesar@creat1va.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Use configtool from the shell to validate, pretty-print, get or set config values::\n\nWith no arguments you will output the same config file, you can use this feature\nto validate the file.\n\n    $ config.ini > python -m configtool\n    [app]\n    name = rocket\n    description = A app to launch a Space Rocket\n    [uwsgi]\n    socket = /var/run/spacerocket.socket\n\n-get argument will print the value of the key on the section you want, you can\nalso do -section and -get will use that for section.\n\n    $ cat config.ini | python -m configtool -get app.name\n    rocket\n    $ cat config.ini | python -m configtool -section app -get description\n    A app to launch a Space Rocket\n\nSpecify just the section, and it will output the config syntax for just that\nsection\n\n    $ cat config.ini | python -m configtool -get app\n    [app]    \n    name = rocket\n    description = A app to launch a Space Rocket\n\nEasily update values, just by using set\n\n    $ python -m configtool -set app.name \"spacerocket\" > config.ini\n    $ cat config.ini\n    [app]\n    name = spacerocket\n    description = A app to launch a Space Rocket\n    \nYou can also convert syntax if you had json or yaml python modules available::\n\n    $ cat config.ini | python -m configtool -o yaml\n    app:\n      name: spacerocket\n      description: A app to launch a Space Rocket\n      \n    $ config.ini > python -m configtool -o json\n    {\"app\":{\"name\":\"spacerocket\",\"description\":\"A app to launch a Space Rocket\"}}", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/mariocesar/configtool", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "configtool", "package_url": "https://pypi.org/project/configtool/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/configtool/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://bitbucket.org/mariocesar/configtool"}, "release_url": "https://pypi.org/project/configtool/0.1a/", "requires_dist": null, "requires_python": null, "summary": "Use configtool from the shell to validate, pretty-print, get or set config values::", "version": "0.1a", "yanked": false, "html_description": "<div class=\"project-description\">\n            Use configtool from the shell to validate, pretty-print, get or set config values::<br><br>With no arguments you will output the same config file, you can use this feature<br>to validate the file.<br><br>    $ config.ini &gt; python -m configtool<br>    [app]<br>    name = rocket<br>    description = A app to launch a Space Rocket<br>    [uwsgi]<br>    socket = /var/run/spacerocket.socket<br><br>-get argument will print the value of the key on the section you want, you can<br>also do -section and -get will use that for section.<br><br>    $ cat config.ini | python -m configtool -get app.name<br>    rocket<br>    $ cat config.ini | python -m configtool -section app -get description<br>    A app to launch a Space Rocket<br><br>Specify just the section, and it will output the config syntax for just that<br>section<br><br>    $ cat config.ini | python -m configtool -get app<br>    [app]    <br>    name = rocket<br>    description = A app to launch a Space Rocket<br><br>Easily update values, just by using set<br><br>    $ python -m configtool -set app.name \"spacerocket\" &gt; config.ini<br>    $ cat config.ini<br>    [app]<br>    name = spacerocket<br>    description = A app to launch a Space Rocket<br>    <br>You can also convert syntax if you had json or yaml python modules available::<br><br>    $ cat config.ini | python -m configtool -o yaml<br>    app:<br>      name: spacerocket<br>      description: A app to launch a Space Rocket<br>      <br>    $ config.ini &gt; python -m configtool -o json<br>    {\"app\":{\"name\":\"spacerocket\",\"description\":\"A app to launch a Space Rocket\"}}\n          </div>"}, "last_serial": 580849, "releases": {"0.1a": []}, "urls": [], "timestamp": "Fri May  8 00:43:53 2020"}