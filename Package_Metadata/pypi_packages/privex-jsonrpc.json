{"info": {"author": "Chris (Someguy123) @ Privex", "author_email": "chris@privex.io", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "[![PyPi Version](https://img.shields.io/pypi/v/privex-jsonrpc.svg)](https://pypi.org/project/privex-jsonrpc/)\n![License Button](https://img.shields.io/pypi/l/privex-jsonrpc) ![PyPI - Downloads](https://img.shields.io/pypi/dm/privex-jsonrpc)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/privex-jsonrpc) \n![GitHub last commit](https://img.shields.io/github/last-commit/Privex/python-jsonrpc)\n\n# Simple Python JsonRPC\n### A small library for interacting with JsonRPC services\n### Includes some helper classes for various cryptocurrency daemons inc. `bitcoind` and `litecoind`\n\n**Official Repo:** https://github.com/privex/python-jsonrpc\n\n### Quick Install / Usage\n\n```sh\npip3 install privex-jsonrpc\n```\n\n```python\nfrom privex.jsonrpc import JsonRPC, RPCException\ntry:\n    j = JsonRPC(hostname='api.example.com', port=443, ssl=True)\n    # call JsonRPC methods as if they're part of the class. they return 'result' as dict/list/int/float/str\n    j.list_all('first', 'second')    # 'params' as a list ['first', 'second']\n    j.find(name='john')              # 'params' as a dict {name: 'john'}\nexcept RPCException as e:   # raised when the result contains the key 'error' and it is not null/false\n    log.exception('the rpc server returned an error: %s', str(e))\nexcept:   # Any other exceptions (generally from the `requests` library) mean something is wrong with the server\n    log.exception('something went wrong while communicating with the RPC server...')   \n```\n\n# Information\n\nThis Python JsonRPC library has been developed at [Privex Inc.](https://www.privex.io) by @someguy123 for interacting\nwith various JsonRPC services, including cryptocurrency daemons such as `bitcoind`.\n\nIt uses the [Python Requests](http://docs.python-requests.org/en/master/) library, including a singleton requests session\nensuring that HTTP Keep-alive is always used, cookies are retained, among other things improving performance.\n\n\n\nThe main classes included are:\n\n```\n    JsonRPC        - The main universally-compatible class, works with most JsonRPC services without any modification.\n\n    BitcoinRPC     - Constructor connects to 127.0.0.1:8332 by default. \n                     Includes a few pre-defined methods for interacting with `bitcoind` and similar daemons.\n\n    LitecoinRPC    - Same as BitcoinRPC, except uses 127.0.0.1:9332 by default\n\n    SteemEngineRPC - For interacting with SteemSmartContracts RPC (https://github.com/harpagon210/steemsmartcontracts)\n                     Includes pre-defined methods for interacting with SSC RPC. \n                     Default host: https://api.steem-engine.com\n\n    MoneroRPC      - For interacting with Monero Wallet RPC, includes various pre-defined methods to make things easier.\n\n    ElectrumRPC    - For interacting with Electrum Wallet RPC, includes various pre-defined methods to make things easier.\n                     Should work with Bitcoin Electrum, Electrum LTC, and others.\n\n```\n\n\n    +===================================================+\n    |                 \u00a9 2019 Privex Inc.                |\n    |               https://www.privex.io               |\n    +===================================================+\n    |                                                   |\n    |        Python Simple JSON RPC library             |\n    |        License: X11/MIT                           |\n    |                                                   |\n    |        Core Developer(s):                         |\n    |                                                   |\n    |          (+)  Chris (@someguy123) [Privex]        |\n    |                                                   |\n    +===================================================+\n\n    Python JSON RPC - A simple library for interacting with JsonRPC services\n    Copyright (c) 2019    Privex Inc. ( https://www.privex.io )\n\n# Install\n\nWe recommend that you use at least Python 3.4+ due to the usage of parameter and return type hinting.\n\n### Install from PyPi using `pip`\n\nYou can install this package via pip:\n\n```sh\npip3 install privex-jsonrpc\n```\n\n### (Alternative) Manual install from Git\n\nIf you don't want to PyPi (e.g. for development versions not on PyPi yet), you can install the \nproject directly from our Git repo.\n\nUnless you have a specific reason to manually install it, you **should install it using pip3 normally**\nas shown above.\n\n**Option 1 - Use pip to install straight from Github**\n\n```sh\npip3 install git+https://github.com/Privex/python-jsonrpc\n```\n\n**Option 2 - Clone and install manually**\n\n```bash\n# Clone the repository from Github\ngit clone https://github.com/Privex/python-jsonrpc\ncd python-jsonrpc\n\n# RECOMMENDED MANUAL INSTALL METHOD\n# Use pip to install the source code\npip3 install .\n\n# ALTERNATIVE INSTALL METHOD\n# If you don't have pip, or have issues with installing using it, then you can use setuptools instead.\npython3 setup.py install\n```\n\n# Usage\n\nImport the class that you need from `privex.jsonrpc` - all are exported using the __init__.py\n\nBasic usage:\n\n```python\n    from privex.jsonrpc import JsonRPC, RPCException\n    try:\n        j = JsonRPC(hostname='api.example.com', port=443, ssl=True)\n\n        # Sends a POST request to https://api.example.com with the following data:\n        # {id: 1, jsonrpc: '2.0', method: 'list_all', params: ['my first parameter']}\n        data = j.list_all('my first parameter')    # returns: ['some', 'result', 'data', 'returned']\n        print(data[0])    # prints 'some'\n\n        # Sends a POST request to https://api.example.com with the following data:\n        # {id: 2, jsonrpc: '2.0', method: 'find', params: {name: 'john'}}\n        data = j.find(name='john')    # returns: {name: 'john', username: 'john123', created_at: '2019-01-01 00:00:00'}\n        print(data['username'])       # prints 'john123'\n\n        # If your JsonRPC call is not valid as a method name, use .call(method, *params, **args)\n        # positional params are converted to a list, keyworg args are converted to a dict\n        j.call('invalid-python.methodname', '1st param', '2nd param')\n        j.call('some.find.func', name='john', user='john123')\n\n    except RPCException as e:\n        # RPCException is raised when the result contains the key 'error' and it is not null/false\n        log.exception('the rpc server returned an error: %s', str(e))\n    except:\n        # Any other exceptions (generally from the `requests` library) mean something is wrong with the server\n        log.exception('something went wrong while communicating with the RPC server...')    \n```\n\n**If a method is not defined, you can still use it! You just won't get any IDE hints with the parameters.**\n\nFor full parameter documentation, IDEs such as PyCharm and even Visual Studio Code should show our PyDoc\ncomments when you try to use the class.\n\nFor PyCharm, press F1 with your keyboard cursor over the class to see full function documentation, including\nreturn types, parameters, and general usage information. You can also press CMD-P with your cursor inside of \na method's brackets (including the constructor brackets) to see the parameters you can use.\n\nAlternatively, just view the files inside of `privex/jsonrpc/` - most methods and constructors\nare adequently commented with PyDoc.\n\n# Logging\n\nBy default, this package will log anything >=WARNING to the console. You can override this by adjusting the\n`privex.jsonrpc` logger instance. \n\nWe recommend checking out our Python package [Python Loghelper](https://github.com/Privex/python-loghelper) which\nmakes it easy to manage your logging configuration, and copy it to other logging instances such as this one.\n\n```python\n# Without LogHelper\nimport logging\nl = logging.getLogger('privex.jsonrpc')\nl.setLevel(logging.ERROR)\n\n# With LogHelper (pip3 install privex-loghelper)\nfrom privex.loghelper import LogHelper\n# Set up logging for **your entire app**. In this case, log only messages >=error\nlh = LogHelper('myapp', handler_level=logging.ERROR)\nlh.add_file_handler('test.log')      # Log messages to the file `test.log` in the current directory\nlh.copy_logger('privex.jsonrpc')     # Easily copy your logging settings to any other module loggers\nlog = lh.get_logger()                # Grab your app's logging instance, or use logging.getLogger('myapp')\nlog.error('Hello World')\n```\n\n# Contributing\n\nWe're very happy to accept pull requests, and work on any issues reported to us. \n\nHere's some important information:\n\n**Reporting Issues:**\n\n - For bug reports, you should include the following information:\n     - Version of `privex-jsonrpc` and `requests` tested on - use `pip3 freeze`\n        - If not installed via a PyPi release, git revision number that the issue was tested on - `git log -n1`\n     - Your python3 version - `python3 -V`\n     - Your operating system and OS version (e.g. Ubuntu 18.04, Debian 7)\n - For feature requests / changes\n     - Please avoid suggestions that require new dependencies. This tool is designed to be lightweight, not filled with\n       external dependencies.\n     - Clearly explain the feature/change that you would like to be added\n     - Explain why the feature/change would be useful to us, or other users of the tool\n     - Be aware that features/changes that are complicated to add, or we simply find un-necessary for our use of the tool may not be added (but we may accept PRs)\n\n**Pull Requests:**\n\n - We'll happily accept PRs that only add code comments or README changes\n - Use 4 spaces, not tabs when contributing to the code\n - You can use features from Python 3.4+ (we run Python 3.7+ for our projects)\n    - Features that require a Python version that has not yet been released for the latest stable release\n      of Ubuntu Server LTS (at this time, Ubuntu 18.04 Bionic) will not be accepted. \n - Clearly explain the purpose of your pull request in the title and description\n     - What changes have you made?\n     - Why have you made these changes?\n - Please make sure that code contributions are appropriately commented - we won't accept changes that involve uncommented, highly terse one-liners.\n\n**Legal Disclaimer for Contributions**\n\nNobody wants to read a long document filled with legal text, so we've summed up the important parts here.\n\nIf you contribute content that you've created/own to projects that are created/owned by Privex, such as code or documentation, then you might automatically grant us unrestricted usage of your content, regardless of the open source license that applies to our project.\n\nIf you don't want to grant us unlimited usage of your content, you should make sure to place your content\nin a separate file, making sure that the license of your content is clearly displayed at the start of the file (e.g. code comments), or inside of it's containing folder (e.g. a file named LICENSE). \n\nYou should let us know in your pull request or issue that you've included files which are licensed\nseparately, so that we can make sure there's no license conflicts that might stop us being able\nto accept your contribution.\n\nIf you'd rather read the whole legal text, it should be included as `privex_contribution_agreement.txt`.\n\n# License\n\nThis project is licensed under the **X11 / MIT** license. See the file **LICENSE** for full details.\n\nHere's the important bits:\n\n - You must include/display the license & copyright notice (`LICENSE`) if you modify/distribute/copy\n   some or all of this project.\n - You can't use our name to promote / endorse your product without asking us for permission.\n   You can however, state that your product uses some/all of this project.\n\n\n\n# Thanks for reading!\n\n**If this project has helped you, consider [grabbing a VPS or Dedicated Server from Privex](https://www.privex.io) - prices start at as little as US$8/mo (we take cryptocurrency!)**\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Privex/python-jsonrpc", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "privex-jsonrpc", "package_url": "https://pypi.org/project/privex-jsonrpc/", "platform": "", "project_url": "https://pypi.org/project/privex-jsonrpc/", "project_urls": {"Homepage": "https://github.com/Privex/python-jsonrpc"}, "release_url": "https://pypi.org/project/privex-jsonrpc/1.2.0/", "requires_dist": ["requests (>=2.20.1)"], "requires_python": "", "summary": "A simple library for easy querying of JsonRPC services", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/privex-jsonrpc/\" rel=\"nofollow\"><img alt=\"PyPi Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fde3d9eaad55a85eedc6aa36c6749dadec77e9e3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7072697665782d6a736f6e7270632e737667\"></a>\n<img alt=\"License Button\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12454c08cc13a2d3b937ad9eec0d4e7d4f2805a5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7072697665782d6a736f6e727063\"> <img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/94191b5831e7f4a9a7dc3555febbff6d0efbce8d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f7072697665782d6a736f6e727063\">\n<img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7788a32ad41783c60f7ef08a3c4614091e2ddf6b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7072697665782d6a736f6e727063\">\n<img alt=\"GitHub last commit\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ef3bba10f896deb1dc6f044c5212fe4256232c84/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f5072697665782f707974686f6e2d6a736f6e727063\"></p>\n<h1>Simple Python JsonRPC</h1>\n<h3>A small library for interacting with JsonRPC services</h3>\n<h3>Includes some helper classes for various cryptocurrency daemons inc. <code>bitcoind</code> and <code>litecoind</code></h3>\n<p><strong>Official Repo:</strong> <a href=\"https://github.com/privex/python-jsonrpc\" rel=\"nofollow\">https://github.com/privex/python-jsonrpc</a></p>\n<h3>Quick Install / Usage</h3>\n<pre>pip3 install privex-jsonrpc\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">privex.jsonrpc</span> <span class=\"kn\">import</span> <span class=\"n\">JsonRPC</span><span class=\"p\">,</span> <span class=\"n\">RPCException</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"n\">JsonRPC</span><span class=\"p\">(</span><span class=\"n\">hostname</span><span class=\"o\">=</span><span class=\"s1\">'api.example.com'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">443</span><span class=\"p\">,</span> <span class=\"n\">ssl</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"c1\"># call JsonRPC methods as if they're part of the class. they return 'result' as dict/list/int/float/str</span>\n    <span class=\"n\">j</span><span class=\"o\">.</span><span class=\"n\">list_all</span><span class=\"p\">(</span><span class=\"s1\">'first'</span><span class=\"p\">,</span> <span class=\"s1\">'second'</span><span class=\"p\">)</span>    <span class=\"c1\"># 'params' as a list ['first', 'second']</span>\n    <span class=\"n\">j</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'john'</span><span class=\"p\">)</span>              <span class=\"c1\"># 'params' as a dict {name: 'john'}</span>\n<span class=\"k\">except</span> <span class=\"n\">RPCException</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>   <span class=\"c1\"># raised when the result contains the key 'error' and it is not null/false</span>\n    <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">exception</span><span class=\"p\">(</span><span class=\"s1\">'the rpc server returned an error: </span><span class=\"si\">%s</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">))</span>\n<span class=\"k\">except</span><span class=\"p\">:</span>   <span class=\"c1\"># Any other exceptions (generally from the `requests` library) mean something is wrong with the server</span>\n    <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">exception</span><span class=\"p\">(</span><span class=\"s1\">'something went wrong while communicating with the RPC server...'</span><span class=\"p\">)</span>   \n</pre>\n<h1>Information</h1>\n<p>This Python JsonRPC library has been developed at <a href=\"https://www.privex.io\" rel=\"nofollow\">Privex Inc.</a> by @someguy123 for interacting\nwith various JsonRPC services, including cryptocurrency daemons such as <code>bitcoind</code>.</p>\n<p>It uses the <a href=\"http://docs.python-requests.org/en/master/\" rel=\"nofollow\">Python Requests</a> library, including a singleton requests session\nensuring that HTTP Keep-alive is always used, cookies are retained, among other things improving performance.</p>\n<p>The main classes included are:</p>\n<pre><code>    JsonRPC        - The main universally-compatible class, works with most JsonRPC services without any modification.\n\n    BitcoinRPC     - Constructor connects to 127.0.0.1:8332 by default. \n                     Includes a few pre-defined methods for interacting with `bitcoind` and similar daemons.\n\n    LitecoinRPC    - Same as BitcoinRPC, except uses 127.0.0.1:9332 by default\n\n    SteemEngineRPC - For interacting with SteemSmartContracts RPC (https://github.com/harpagon210/steemsmartcontracts)\n                     Includes pre-defined methods for interacting with SSC RPC. \n                     Default host: https://api.steem-engine.com\n\n    MoneroRPC      - For interacting with Monero Wallet RPC, includes various pre-defined methods to make things easier.\n\n    ElectrumRPC    - For interacting with Electrum Wallet RPC, includes various pre-defined methods to make things easier.\n                     Should work with Bitcoin Electrum, Electrum LTC, and others.\n\n</code></pre>\n<pre><code>+===================================================+\n|                 \u00a9 2019 Privex Inc.                |\n|               https://www.privex.io               |\n+===================================================+\n|                                                   |\n|        Python Simple JSON RPC library             |\n|        License: X11/MIT                           |\n|                                                   |\n|        Core Developer(s):                         |\n|                                                   |\n|          (+)  Chris (@someguy123) [Privex]        |\n|                                                   |\n+===================================================+\n\nPython JSON RPC - A simple library for interacting with JsonRPC services\nCopyright (c) 2019    Privex Inc. ( https://www.privex.io )\n</code></pre>\n<h1>Install</h1>\n<p>We recommend that you use at least Python 3.4+ due to the usage of parameter and return type hinting.</p>\n<h3>Install from PyPi using <code>pip</code></h3>\n<p>You can install this package via pip:</p>\n<pre>pip3 install privex-jsonrpc\n</pre>\n<h3>(Alternative) Manual install from Git</h3>\n<p>If you don't want to PyPi (e.g. for development versions not on PyPi yet), you can install the\nproject directly from our Git repo.</p>\n<p>Unless you have a specific reason to manually install it, you <strong>should install it using pip3 normally</strong>\nas shown above.</p>\n<p><strong>Option 1 - Use pip to install straight from Github</strong></p>\n<pre>pip3 install git+https://github.com/Privex/python-jsonrpc\n</pre>\n<p><strong>Option 2 - Clone and install manually</strong></p>\n<pre><span class=\"c1\"># Clone the repository from Github</span>\ngit clone https://github.com/Privex/python-jsonrpc\n<span class=\"nb\">cd</span> python-jsonrpc\n\n<span class=\"c1\"># RECOMMENDED MANUAL INSTALL METHOD</span>\n<span class=\"c1\"># Use pip to install the source code</span>\npip3 install .\n\n<span class=\"c1\"># ALTERNATIVE INSTALL METHOD</span>\n<span class=\"c1\"># If you don't have pip, or have issues with installing using it, then you can use setuptools instead.</span>\npython3 setup.py install\n</pre>\n<h1>Usage</h1>\n<p>Import the class that you need from <code>privex.jsonrpc</code> - all are exported using the <strong>init</strong>.py</p>\n<p>Basic usage:</p>\n<pre>    <span class=\"kn\">from</span> <span class=\"nn\">privex.jsonrpc</span> <span class=\"kn\">import</span> <span class=\"n\">JsonRPC</span><span class=\"p\">,</span> <span class=\"n\">RPCException</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"n\">JsonRPC</span><span class=\"p\">(</span><span class=\"n\">hostname</span><span class=\"o\">=</span><span class=\"s1\">'api.example.com'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">443</span><span class=\"p\">,</span> <span class=\"n\">ssl</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Sends a POST request to https://api.example.com with the following data:</span>\n        <span class=\"c1\"># {id: 1, jsonrpc: '2.0', method: 'list_all', params: ['my first parameter']}</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">j</span><span class=\"o\">.</span><span class=\"n\">list_all</span><span class=\"p\">(</span><span class=\"s1\">'my first parameter'</span><span class=\"p\">)</span>    <span class=\"c1\"># returns: ['some', 'result', 'data', 'returned']</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>    <span class=\"c1\"># prints 'some'</span>\n\n        <span class=\"c1\"># Sends a POST request to https://api.example.com with the following data:</span>\n        <span class=\"c1\"># {id: 2, jsonrpc: '2.0', method: 'find', params: {name: 'john'}}</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">j</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'john'</span><span class=\"p\">)</span>    <span class=\"c1\"># returns: {name: 'john', username: 'john123', created_at: '2019-01-01 00:00:00'}</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'username'</span><span class=\"p\">])</span>       <span class=\"c1\"># prints 'john123'</span>\n\n        <span class=\"c1\"># If your JsonRPC call is not valid as a method name, use .call(method, *params, **args)</span>\n        <span class=\"c1\"># positional params are converted to a list, keyworg args are converted to a dict</span>\n        <span class=\"n\">j</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"s1\">'invalid-python.methodname'</span><span class=\"p\">,</span> <span class=\"s1\">'1st param'</span><span class=\"p\">,</span> <span class=\"s1\">'2nd param'</span><span class=\"p\">)</span>\n        <span class=\"n\">j</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"s1\">'some.find.func'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'john'</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"s1\">'john123'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">except</span> <span class=\"n\">RPCException</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"c1\"># RPCException is raised when the result contains the key 'error' and it is not null/false</span>\n        <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">exception</span><span class=\"p\">(</span><span class=\"s1\">'the rpc server returned an error: </span><span class=\"si\">%s</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">))</span>\n    <span class=\"k\">except</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Any other exceptions (generally from the `requests` library) mean something is wrong with the server</span>\n        <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">exception</span><span class=\"p\">(</span><span class=\"s1\">'something went wrong while communicating with the RPC server...'</span><span class=\"p\">)</span>    \n</pre>\n<p><strong>If a method is not defined, you can still use it! You just won't get any IDE hints with the parameters.</strong></p>\n<p>For full parameter documentation, IDEs such as PyCharm and even Visual Studio Code should show our PyDoc\ncomments when you try to use the class.</p>\n<p>For PyCharm, press F1 with your keyboard cursor over the class to see full function documentation, including\nreturn types, parameters, and general usage information. You can also press CMD-P with your cursor inside of\na method's brackets (including the constructor brackets) to see the parameters you can use.</p>\n<p>Alternatively, just view the files inside of <code>privex/jsonrpc/</code> - most methods and constructors\nare adequently commented with PyDoc.</p>\n<h1>Logging</h1>\n<p>By default, this package will log anything &gt;=WARNING to the console. You can override this by adjusting the\n<code>privex.jsonrpc</code> logger instance.</p>\n<p>We recommend checking out our Python package <a href=\"https://github.com/Privex/python-loghelper\" rel=\"nofollow\">Python Loghelper</a> which\nmakes it easy to manage your logging configuration, and copy it to other logging instances such as this one.</p>\n<pre><span class=\"c1\"># Without LogHelper</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"n\">l</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'privex.jsonrpc'</span><span class=\"p\">)</span>\n<span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">ERROR</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># With LogHelper (pip3 install privex-loghelper)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">privex.loghelper</span> <span class=\"kn\">import</span> <span class=\"n\">LogHelper</span>\n<span class=\"c1\"># Set up logging for **your entire app**. In this case, log only messages &gt;=error</span>\n<span class=\"n\">lh</span> <span class=\"o\">=</span> <span class=\"n\">LogHelper</span><span class=\"p\">(</span><span class=\"s1\">'myapp'</span><span class=\"p\">,</span> <span class=\"n\">handler_level</span><span class=\"o\">=</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">ERROR</span><span class=\"p\">)</span>\n<span class=\"n\">lh</span><span class=\"o\">.</span><span class=\"n\">add_file_handler</span><span class=\"p\">(</span><span class=\"s1\">'test.log'</span><span class=\"p\">)</span>      <span class=\"c1\"># Log messages to the file `test.log` in the current directory</span>\n<span class=\"n\">lh</span><span class=\"o\">.</span><span class=\"n\">copy_logger</span><span class=\"p\">(</span><span class=\"s1\">'privex.jsonrpc'</span><span class=\"p\">)</span>     <span class=\"c1\"># Easily copy your logging settings to any other module loggers</span>\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">lh</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">()</span>                <span class=\"c1\"># Grab your app's logging instance, or use logging.getLogger('myapp')</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">'Hello World'</span><span class=\"p\">)</span>\n</pre>\n<h1>Contributing</h1>\n<p>We're very happy to accept pull requests, and work on any issues reported to us.</p>\n<p>Here's some important information:</p>\n<p><strong>Reporting Issues:</strong></p>\n<ul>\n<li>For bug reports, you should include the following information:\n<ul>\n<li>Version of <code>privex-jsonrpc</code> and <code>requests</code> tested on - use <code>pip3 freeze</code>\n<ul>\n<li>If not installed via a PyPi release, git revision number that the issue was tested on - <code>git log -n1</code></li>\n</ul>\n</li>\n<li>Your python3 version - <code>python3 -V</code></li>\n<li>Your operating system and OS version (e.g. Ubuntu 18.04, Debian 7)</li>\n</ul>\n</li>\n<li>For feature requests / changes\n<ul>\n<li>Please avoid suggestions that require new dependencies. This tool is designed to be lightweight, not filled with\nexternal dependencies.</li>\n<li>Clearly explain the feature/change that you would like to be added</li>\n<li>Explain why the feature/change would be useful to us, or other users of the tool</li>\n<li>Be aware that features/changes that are complicated to add, or we simply find un-necessary for our use of the tool may not be added (but we may accept PRs)</li>\n</ul>\n</li>\n</ul>\n<p><strong>Pull Requests:</strong></p>\n<ul>\n<li>We'll happily accept PRs that only add code comments or README changes</li>\n<li>Use 4 spaces, not tabs when contributing to the code</li>\n<li>You can use features from Python 3.4+ (we run Python 3.7+ for our projects)\n<ul>\n<li>Features that require a Python version that has not yet been released for the latest stable release\nof Ubuntu Server LTS (at this time, Ubuntu 18.04 Bionic) will not be accepted.</li>\n</ul>\n</li>\n<li>Clearly explain the purpose of your pull request in the title and description\n<ul>\n<li>What changes have you made?</li>\n<li>Why have you made these changes?</li>\n</ul>\n</li>\n<li>Please make sure that code contributions are appropriately commented - we won't accept changes that involve uncommented, highly terse one-liners.</li>\n</ul>\n<p><strong>Legal Disclaimer for Contributions</strong></p>\n<p>Nobody wants to read a long document filled with legal text, so we've summed up the important parts here.</p>\n<p>If you contribute content that you've created/own to projects that are created/owned by Privex, such as code or documentation, then you might automatically grant us unrestricted usage of your content, regardless of the open source license that applies to our project.</p>\n<p>If you don't want to grant us unlimited usage of your content, you should make sure to place your content\nin a separate file, making sure that the license of your content is clearly displayed at the start of the file (e.g. code comments), or inside of it's containing folder (e.g. a file named LICENSE).</p>\n<p>You should let us know in your pull request or issue that you've included files which are licensed\nseparately, so that we can make sure there's no license conflicts that might stop us being able\nto accept your contribution.</p>\n<p>If you'd rather read the whole legal text, it should be included as <code>privex_contribution_agreement.txt</code>.</p>\n<h1>License</h1>\n<p>This project is licensed under the <strong>X11 / MIT</strong> license. See the file <strong>LICENSE</strong> for full details.</p>\n<p>Here's the important bits:</p>\n<ul>\n<li>You must include/display the license &amp; copyright notice (<code>LICENSE</code>) if you modify/distribute/copy\nsome or all of this project.</li>\n<li>You can't use our name to promote / endorse your product without asking us for permission.\nYou can however, state that your product uses some/all of this project.</li>\n</ul>\n<h1>Thanks for reading!</h1>\n<p><strong>If this project has helped you, consider <a href=\"https://www.privex.io\" rel=\"nofollow\">grabbing a VPS or Dedicated Server from Privex</a> - prices start at as little as US$8/mo (we take cryptocurrency!)</strong></p>\n\n          </div>"}, "last_serial": 6913043, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9f4044a243f1267cff59da85d7efbb42", "sha256": "d7d097ab1117fa7028137cf824d4e7529a4afe3d2a883ddef832d570c0c825bb"}, "downloads": -1, "filename": "privex_jsonrpc-1.0.0-py3.7.egg", "has_sig": false, "md5_digest": "9f4044a243f1267cff59da85d7efbb42", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 21188, "upload_time": "2019-03-18T01:06:22", "upload_time_iso_8601": "2019-03-18T01:06:22.704344Z", "url": "https://files.pythonhosted.org/packages/91/ac/2c02daa4fe37f9e5826947babbd666cf7c9f338ba7091194eabc81639377/privex_jsonrpc-1.0.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8047327ae42e3e0feaffd65ff006c8f", "sha256": "cf21ce594e3ef49f1f6ee1ad5bf3e6284a2c8335c1f9043f39cc99edd94caaf2"}, "downloads": -1, "filename": "privex_jsonrpc-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d8047327ae42e3e0feaffd65ff006c8f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15245, "upload_time": "2019-03-18T01:06:20", "upload_time_iso_8601": "2019-03-18T01:06:20.462386Z", "url": "https://files.pythonhosted.org/packages/bc/bd/a105cbb4c0e91c75c7d4293a074f6774770fa53d255ed29402b9d24afa92/privex_jsonrpc-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56ceb965b38b521369b3688aa896defa", "sha256": "8768d120a0154a758d1a423d3f65401ab1ae44997b878c3ee33751394bf0cc3c"}, "downloads": -1, "filename": "privex_jsonrpc-1.0.0.tar.gz", "has_sig": false, "md5_digest": "56ceb965b38b521369b3688aa896defa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14439, "upload_time": "2019-03-18T01:06:24", "upload_time_iso_8601": "2019-03-18T01:06:24.012445Z", "url": "https://files.pythonhosted.org/packages/88/54/9af931df1aa0a0b9f3dd4cf0267afa9653fb92f6b1399f84172de1dc727d/privex_jsonrpc-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "b74bc51018607515c0decd528a551654", "sha256": "86e69c5980d79093be2fccee57b915b05764fa9950cd50554949f4b283539dfb"}, "downloads": -1, "filename": "privex_jsonrpc-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b74bc51018607515c0decd528a551654", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15251, "upload_time": "2019-03-20T01:21:51", "upload_time_iso_8601": "2019-03-20T01:21:51.988255Z", "url": "https://files.pythonhosted.org/packages/2e/39/ff1bbc7398833a5252d3abde6dbbbab486597f1291bbd71344b890652363/privex_jsonrpc-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "122735c2c14fe6e61c0a3ac98059e030", "sha256": "888cbb59a65ec90671128f38d8f83beffd2cc1403ece593311e2cc521fbb087d"}, "downloads": -1, "filename": "privex_jsonrpc-1.0.1.tar.gz", "has_sig": false, "md5_digest": "122735c2c14fe6e61c0a3ac98059e030", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14450, "upload_time": "2019-03-20T01:21:54", "upload_time_iso_8601": "2019-03-20T01:21:54.852788Z", "url": "https://files.pythonhosted.org/packages/47/6d/4ad3b8a43e6454d540f961f9b6b92e6e841516d5f887828b19cac3e7b1f5/privex_jsonrpc-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "4eb29aad198351593eacf70a2f690ddd", "sha256": "26d07ecec358ea16dcc61ff09be9ea4b9ace05d75864d74169a59645ae7caaec"}, "downloads": -1, "filename": "privex_jsonrpc-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4eb29aad198351593eacf70a2f690ddd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16344, "upload_time": "2019-04-08T02:28:38", "upload_time_iso_8601": "2019-04-08T02:28:38.982098Z", "url": "https://files.pythonhosted.org/packages/6d/a1/9f78648221d744a404c518c56f04d26f241bda59482b60aa5e871bcf9455/privex_jsonrpc-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c818ec44ae209f07315bfb959a101a39", "sha256": "ae4b36c01f40fe202dcd2854fec81c9e925f025a16137ba9b25d524c720111df"}, "downloads": -1, "filename": "privex_jsonrpc-1.0.2.tar.gz", "has_sig": false, "md5_digest": "c818ec44ae209f07315bfb959a101a39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15506, "upload_time": "2019-04-08T02:28:42", "upload_time_iso_8601": "2019-04-08T02:28:42.841286Z", "url": "https://files.pythonhosted.org/packages/6c/0e/764794bbc2a49eaa27dc8c7acc3ef6f379f13ce19342754bd29d3b28fdb8/privex_jsonrpc-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "b323f4ad3131a58bf6d2c11fa5af1af9", "sha256": "0f498a7cec46945759443b43ab865889ce5dd179f9a35403f1ea8c2789265ea5"}, "downloads": -1, "filename": "privex_jsonrpc-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b323f4ad3131a58bf6d2c11fa5af1af9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22173, "upload_time": "2019-09-17T01:41:17", "upload_time_iso_8601": "2019-09-17T01:41:17.013066Z", "url": "https://files.pythonhosted.org/packages/6a/22/ffd1bb50c53ddac084aa4a3c28b58eaa0b114e335cc12219f4a9bd822319/privex_jsonrpc-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ef1d5c8d2580cd5201c17608def3b71", "sha256": "f450219055657bd83aac478cc4a437c2a168d70be5f740b3710588601d42188f"}, "downloads": -1, "filename": "privex_jsonrpc-1.1.0.tar.gz", "has_sig": false, "md5_digest": "3ef1d5c8d2580cd5201c17608def3b71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20094, "upload_time": "2019-09-17T01:41:18", "upload_time_iso_8601": "2019-09-17T01:41:18.880845Z", "url": "https://files.pythonhosted.org/packages/43/0c/2c0adb0d9871f1989a0d651e98a73cc45a38bcf73d9124ec88d6eda00c18/privex_jsonrpc-1.1.0.tar.gz", "yanked": false}], "1.1.0.post1": [{"comment_text": "", "digests": {"md5": "2afc45c964b99287222cd9722cd5ece0", "sha256": "fc86954176808dcbe49bec0bbacd3118c7256f00000af671731d234a38617803"}, "downloads": -1, "filename": "privex_jsonrpc-1.1.0.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "2afc45c964b99287222cd9722cd5ece0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22335, "upload_time": "2019-09-17T03:32:27", "upload_time_iso_8601": "2019-09-17T03:32:27.678782Z", "url": "https://files.pythonhosted.org/packages/48/87/229032a91138ce412e22694a8986abfb2b0c5f4d1042dd48a2fd3dacd972/privex_jsonrpc-1.1.0.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "18b8721f10a8841e50e47eaf8eaac01e", "sha256": "b85656f508a783c1eec239d706f6cfdd2be91435838fa2798a250f7d4e3e9759"}, "downloads": -1, "filename": "privex_jsonrpc-1.1.0.post1.tar.gz", "has_sig": false, "md5_digest": "18b8721f10a8841e50e47eaf8eaac01e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20282, "upload_time": "2019-09-17T03:32:33", "upload_time_iso_8601": "2019-09-17T03:32:33.519236Z", "url": "https://files.pythonhosted.org/packages/ee/5c/827a5515e7a5d6d3273ca34b133533c99df847f197f2dde460397902a211/privex_jsonrpc-1.1.0.post1.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "25ceb85eb21a70c35d4d5c555765990e", "sha256": "e01fe2a09e6a1f720a4249d86d3406458ff47631ca1d6f70b6a3ec193c8da754"}, "downloads": -1, "filename": "privex_jsonrpc-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "25ceb85eb21a70c35d4d5c555765990e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22290, "upload_time": "2019-09-18T18:29:41", "upload_time_iso_8601": "2019-09-18T18:29:41.338231Z", "url": "https://files.pythonhosted.org/packages/7a/2d/69375c9d3da1d8d6dd33979c74fb21c1736aea66cb3006a5651cc6befb8b/privex_jsonrpc-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "828051c384b8ae166652999005967cc7", "sha256": "7089724dcc5ee238361e8ade5d73fccd81bb7c318fc19a5cd7961c2b030e2083"}, "downloads": -1, "filename": "privex_jsonrpc-1.1.1.tar.gz", "has_sig": false, "md5_digest": "828051c384b8ae166652999005967cc7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20298, "upload_time": "2019-09-18T18:29:48", "upload_time_iso_8601": "2019-09-18T18:29:48.511429Z", "url": "https://files.pythonhosted.org/packages/63/ae/cbbff1634465721d02477002b7d34173a1778133d9069a80a90565bbdbd8/privex_jsonrpc-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "b726746a698b2e71e700325d8d60b321", "sha256": "f09614272ffafdfe459da85c7cd43588ea5912a664edb0607e90219d36b8d027"}, "downloads": -1, "filename": "privex_jsonrpc-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b726746a698b2e71e700325d8d60b321", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23444, "upload_time": "2019-09-18T19:51:36", "upload_time_iso_8601": "2019-09-18T19:51:36.110778Z", "url": "https://files.pythonhosted.org/packages/d4/76/a1e9ddfd1ef73d55a53a3f539042838389cf0fa0233a557de90f2854c8d4/privex_jsonrpc-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f372fa3d0e7d3eded291b387a426187", "sha256": "147abee4ef6bf8d79de5126b37cb1484fa36638fb802f94f3426b3f4de450834"}, "downloads": -1, "filename": "privex_jsonrpc-1.1.2.tar.gz", "has_sig": false, "md5_digest": "7f372fa3d0e7d3eded291b387a426187", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21434, "upload_time": "2019-09-18T19:51:38", "upload_time_iso_8601": "2019-09-18T19:51:38.018890Z", "url": "https://files.pythonhosted.org/packages/d4/e6/a0200e8125e82f96e0fa0423ac3e66ef2fab2b5a808bb48f2de1de3fd4e0/privex_jsonrpc-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "614d03e9c477d00e6fb693a7455afb5f", "sha256": "300740106e4759a15966c7fcc1564dc04d8b9e3a740c8b80f896d28476c42d13"}, "downloads": -1, "filename": "privex_jsonrpc-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "614d03e9c477d00e6fb693a7455afb5f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23442, "upload_time": "2019-09-18T21:17:05", "upload_time_iso_8601": "2019-09-18T21:17:05.627115Z", "url": "https://files.pythonhosted.org/packages/c0/e5/0ec7355fad031ddd1fa2f928aa8fb1c324aecbe437d57eb93cb51510bcd7/privex_jsonrpc-1.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fa7f7c46c8e497262e06ab0bd6d2992", "sha256": "fdeb14fa1873c7402b5831552e3b27678dc77e257ba9cbaf4a55abe77b53e129"}, "downloads": -1, "filename": "privex_jsonrpc-1.1.3.tar.gz", "has_sig": false, "md5_digest": "4fa7f7c46c8e497262e06ab0bd6d2992", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21434, "upload_time": "2019-09-18T21:17:07", "upload_time_iso_8601": "2019-09-18T21:17:07.559846Z", "url": "https://files.pythonhosted.org/packages/92/9b/2d9951b8db28ee4bfd6ee1d68a2c0ce47a99ef62f811ed4d632e6c282b27/privex_jsonrpc-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "211707332756ff3d4c3300f3e7b39b7d", "sha256": "0811ebf0246a46ac228fd5dcdf1450ad0f87bfdb9b7aa345da764da9b6247168"}, "downloads": -1, "filename": "privex_jsonrpc-1.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "211707332756ff3d4c3300f3e7b39b7d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23659, "upload_time": "2019-09-18T22:24:58", "upload_time_iso_8601": "2019-09-18T22:24:58.050080Z", "url": "https://files.pythonhosted.org/packages/8b/72/cba3700d75d33ed84aac21ef5d46a289d19f58ee9174a72850b996963e62/privex_jsonrpc-1.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2acaef0403fd18b6031f7e46f882c87", "sha256": "eafefd5c3bad21d55c87bc7f9b84d7121d866d4e04bd827e639b3cea768159e9"}, "downloads": -1, "filename": "privex_jsonrpc-1.1.4.tar.gz", "has_sig": false, "md5_digest": "f2acaef0403fd18b6031f7e46f882c87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21650, "upload_time": "2019-09-18T22:24:59", "upload_time_iso_8601": "2019-09-18T22:24:59.647869Z", "url": "https://files.pythonhosted.org/packages/88/ff/637a7c04455d7b6699fa1506e5174ed641c294f1758850f674f53b14c2e7/privex_jsonrpc-1.1.4.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "839f5bc5e3f195dc11e77ce066f96896", "sha256": "51578384a5937361d0582d66a4154aabd97bb7a87aabee4fb1fee29eaa3089d7"}, "downloads": -1, "filename": "privex_jsonrpc-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "839f5bc5e3f195dc11e77ce066f96896", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26930, "upload_time": "2020-03-30T13:52:43", "upload_time_iso_8601": "2020-03-30T13:52:43.178317Z", "url": "https://files.pythonhosted.org/packages/23/37/4acaa7a3c529afa5dfbfaf554935de9e8992115d68cf2c13179fe0862ab6/privex_jsonrpc-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44ad6a469b5e3e0331f248e02df4dd01", "sha256": "df041f6c4c4cf82a7f51e11e707f23910bca2ec1c82fff1307a7f39ff1092e8a"}, "downloads": -1, "filename": "privex_jsonrpc-1.2.0.tar.gz", "has_sig": false, "md5_digest": "44ad6a469b5e3e0331f248e02df4dd01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25532, "upload_time": "2020-03-30T13:52:44", "upload_time_iso_8601": "2020-03-30T13:52:44.580616Z", "url": "https://files.pythonhosted.org/packages/38/34/b4a49663e571adb1ccada84918b263cb3761f7b522bc13ec7de69ed90d65/privex_jsonrpc-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "839f5bc5e3f195dc11e77ce066f96896", "sha256": "51578384a5937361d0582d66a4154aabd97bb7a87aabee4fb1fee29eaa3089d7"}, "downloads": -1, "filename": "privex_jsonrpc-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "839f5bc5e3f195dc11e77ce066f96896", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26930, "upload_time": "2020-03-30T13:52:43", "upload_time_iso_8601": "2020-03-30T13:52:43.178317Z", "url": "https://files.pythonhosted.org/packages/23/37/4acaa7a3c529afa5dfbfaf554935de9e8992115d68cf2c13179fe0862ab6/privex_jsonrpc-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44ad6a469b5e3e0331f248e02df4dd01", "sha256": "df041f6c4c4cf82a7f51e11e707f23910bca2ec1c82fff1307a7f39ff1092e8a"}, "downloads": -1, "filename": "privex_jsonrpc-1.2.0.tar.gz", "has_sig": false, "md5_digest": "44ad6a469b5e3e0331f248e02df4dd01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25532, "upload_time": "2020-03-30T13:52:44", "upload_time_iso_8601": "2020-03-30T13:52:44.580616Z", "url": "https://files.pythonhosted.org/packages/38/34/b4a49663e571adb1ccada84918b263cb3761f7b522bc13ec7de69ed90d65/privex_jsonrpc-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:19:07 2020"}