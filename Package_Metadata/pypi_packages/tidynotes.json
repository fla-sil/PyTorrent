{"info": {"author": "Joe McGrath", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: Microsoft :: Windows", "Operating System :: Microsoft :: Windows :: Windows 10", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Office/Business :: News/Diary"], "description": "# Tidynotes\n\nA script to generate a notebook in Markdown. The basic setup is designed around how I take digital notes but should be fairly hackable. I use it to make a single file per day that can then be merged into a single hmtl export or an export for each project I'm working on.\n\nInside each note:\n\n* There's a single level 1 heading that is the name of the note (generally the day it covers),\n* Each project goes under a level 2 heading,\n* Tasks within those projects have a level 3 heading,\n* Level 4 & 5 headings are optional sub-divisions within those tasks,\n\nThe script is designed to be called from the command-line. It takes a directory passed as a positional argument and a number of flags:\n\n* ```-g```/```--generate_note``` generates a note for the current day,\n* ```-s```/```--make_series``` generates notes for n days in the future,\n* ```-d```/```--make_day``` generates notes a day specified as a text value,\n* ```-i```/```--initialise_notebook``` generates a blank notebook in the directory,\n* ```-r```/```--render_all``` merges all markdown files and renders them into a single html output,\n* ```-c```/```--clean_headings``` runs a simple heading cleanup routine and runs user-set regex over all notes,\n* ```-e```/```--extract_project``` extracts and renders the notes for a specific project,\n* ```-a```/```--extract_all``` extracts and renders the notes for all projects,\n\nThe script also allows for a few additional features (mainly during cleanup):\n\n* Storing a list of all projects / tasks. This is mainly to allow corrections of misspellings etc.\n* A list of regex corrections. The default set:\n    * Standardises newlines between tasks,\n    * Newline at the end of each file,\n    * Homogenises quote marks (e.g. \u2019 to '),\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JosephMcGrath/tidynotes", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tidynotes", "package_url": "https://pypi.org/project/tidynotes/", "platform": "", "project_url": "https://pypi.org/project/tidynotes/", "project_urls": {"Homepage": "https://github.com/JosephMcGrath/tidynotes"}, "release_url": "https://pypi.org/project/tidynotes/20.1.8/", "requires_dist": ["jinja2", "markdown"], "requires_python": "", "summary": "A simple digital notebook using Markdown.", "version": "20.1.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Tidynotes</h1>\n<p>A script to generate a notebook in Markdown. The basic setup is designed around how I take digital notes but should be fairly hackable. I use it to make a single file per day that can then be merged into a single hmtl export or an export for each project I'm working on.</p>\n<p>Inside each note:</p>\n<ul>\n<li>There's a single level 1 heading that is the name of the note (generally the day it covers),</li>\n<li>Each project goes under a level 2 heading,</li>\n<li>Tasks within those projects have a level 3 heading,</li>\n<li>Level 4 &amp; 5 headings are optional sub-divisions within those tasks,</li>\n</ul>\n<p>The script is designed to be called from the command-line. It takes a directory passed as a positional argument and a number of flags:</p>\n<ul>\n<li><code>-g</code>/<code>--generate_note</code> generates a note for the current day,</li>\n<li><code>-s</code>/<code>--make_series</code> generates notes for n days in the future,</li>\n<li><code>-d</code>/<code>--make_day</code> generates notes a day specified as a text value,</li>\n<li><code>-i</code>/<code>--initialise_notebook</code> generates a blank notebook in the directory,</li>\n<li><code>-r</code>/<code>--render_all</code> merges all markdown files and renders them into a single html output,</li>\n<li><code>-c</code>/<code>--clean_headings</code> runs a simple heading cleanup routine and runs user-set regex over all notes,</li>\n<li><code>-e</code>/<code>--extract_project</code> extracts and renders the notes for a specific project,</li>\n<li><code>-a</code>/<code>--extract_all</code> extracts and renders the notes for all projects,</li>\n</ul>\n<p>The script also allows for a few additional features (mainly during cleanup):</p>\n<ul>\n<li>Storing a list of all projects / tasks. This is mainly to allow corrections of misspellings etc.</li>\n<li>A list of regex corrections. The default set:\n<ul>\n<li>Standardises newlines between tasks,</li>\n<li>Newline at the end of each file,</li>\n<li>Homogenises quote marks (e.g. \u2019 to '),</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6487256, "releases": {"20.1.8": [{"comment_text": "", "digests": {"md5": "cecf7a0763887304296569578a59042e", "sha256": "965fb8f27db9465ed60729320377286c1fad8bc50a42a5bb46372db074854017"}, "downloads": -1, "filename": "tidynotes-20.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "cecf7a0763887304296569578a59042e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26610, "upload_time": "2020-01-20T14:16:58", "upload_time_iso_8601": "2020-01-20T14:16:58.286670Z", "url": "https://files.pythonhosted.org/packages/eb/dc/fc7b983f4407b2c6a11d2574372e6f54fc9f3a6b3329475bf8417827c526/tidynotes-20.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "261dad91cd7267eaa066da8039f38a45", "sha256": "391da9a5e351ff22dd9f03375e7e194153f70f1385527e7a90ba9c6173790561"}, "downloads": -1, "filename": "tidynotes-20.1.8.tar.gz", "has_sig": false, "md5_digest": "261dad91cd7267eaa066da8039f38a45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19968, "upload_time": "2020-01-20T14:17:00", "upload_time_iso_8601": "2020-01-20T14:17:00.234548Z", "url": "https://files.pythonhosted.org/packages/cc/eb/8265d5a580d2c250423448fff8df21db985b8ef3938623a1162d1d3f8861/tidynotes-20.1.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cecf7a0763887304296569578a59042e", "sha256": "965fb8f27db9465ed60729320377286c1fad8bc50a42a5bb46372db074854017"}, "downloads": -1, "filename": "tidynotes-20.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "cecf7a0763887304296569578a59042e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26610, "upload_time": "2020-01-20T14:16:58", "upload_time_iso_8601": "2020-01-20T14:16:58.286670Z", "url": "https://files.pythonhosted.org/packages/eb/dc/fc7b983f4407b2c6a11d2574372e6f54fc9f3a6b3329475bf8417827c526/tidynotes-20.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "261dad91cd7267eaa066da8039f38a45", "sha256": "391da9a5e351ff22dd9f03375e7e194153f70f1385527e7a90ba9c6173790561"}, "downloads": -1, "filename": "tidynotes-20.1.8.tar.gz", "has_sig": false, "md5_digest": "261dad91cd7267eaa066da8039f38a45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19968, "upload_time": "2020-01-20T14:17:00", "upload_time_iso_8601": "2020-01-20T14:17:00.234548Z", "url": "https://files.pythonhosted.org/packages/cc/eb/8265d5a580d2c250423448fff8df21db985b8ef3938623a1162d1d3f8861/tidynotes-20.1.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:22 2020"}