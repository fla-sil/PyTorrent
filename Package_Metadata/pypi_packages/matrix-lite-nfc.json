{"info": {"author": "MATRIX", "author_email": "devel@matrixlabs.ai", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.7"], "description": "# MATRIX-Lite-NFC-Py\n\n![](https://github.com/matrix-io/matrix-lite-nfc-py/workflows/PyPi%20Deployment/badge.svg)\n\nMATRIX Lite NFC Py is a package that allows users of varying skill levels to easily program NFC with their MATRIX Creator.\n\n# Smartphone Apps For Debugging\n- [IOS App](https://apps.apple.com/us/app/nfc-taginfo-by-nxp/id1246143596)\n- [Android App](https://play.google.com/store/apps/details?id=com.nxp.nfc.tagwriter&hl=en_US)\n\n# Roadmap\n- [x] Reading Info  (All tags)\n- [x] Reading Pages (MIFARE Ultralight & NTAG)\n- [x] Writing Page  (MIFARE Ultralight & NTAG)\n- [x] Reading NDEF  (MIFARE Ultralight & NTAG)\n- [x] Writing NDEF  (MIFARE Ultralight & NTAG)\n\n# Installation\n\n## 1. Install MATRIX HAL NFC\nhttps://github.com/matrix-io/matrix-hal-nfc\n\n## 2. Install PIP3\n> To call your scripts with python 3, use `python3 YOUR_SCRIPT.py`\n```\nsudo apt-get install python3-pip\n```\n## 3. Upgrade PIP\n```\npython3 -m pip install --upgrade pip\n```\n\n## 4. Install matrix-lite-nfc-py\n```\nsudo python3 -m pip install matrix-lite-nfc\n```\n\n# Reference\n\n## Import Statement\n```py\nimport matrix_lite_nfc as nfc\n```\n\n## nfc.status\nWhen a read or write function completes, it will contain a status code to indicate the result. nfc.Status returns a string of what that number means.\n```py\nnfc.status(/*number*/)\n```\n\n## nfc.read\n> There can only be one instance of NFC reading. This is a hardware limitation that will not change.\n\n### Synchronous Read\nA simple read that returns an object with tag data.\n```py\nnfc.read.scan({\n    # At least 1 read options is required. Less options -> faster reading!\n    \"info\": True,  # Generic information for any NFC tag\n    \"pages\": True, # All page data\n    \"ndef\": True,  # A single page(faster than pages)\n    \"page\": 0,     # All NDEF data\n})\n```\n\n### Starting Read Loop\nA non-blocking loop that passes tag data to a callback.\n```py\ndef read_callback(tag):\n    if(tag.status == 256):\n        print(\"NFC Tag Scanned!\")\n        print(tag)\n    elif(tag.status == 1024):\n        print(\"Nothing Scanned!\")\n\n# Configure what you want to read\nnfc.read.start({\n    \"rate\": 0.5, # Read loop speed (Seconds)\n    \"info\": True,\n    \"pages\": True,\n    \"ndef\": True,\n    \"page\": 0,\n}, read_callback)\n```\n\n### Stopping Read Loop\n```py\nnfc.read.stop()\n```\n\n## nfc.Message\n\n### 1. Creating a new NDEF Message \n```py\n# Create an empty NDEF message\nmsg = nfc.Message()\n\n# Add NDEF Records to message\nmsg.addUriRecord(\"https://community.matrix.one\")\nmsg.addUriRecord(\"tel:+14085551212\")\nmsg.addTextRecord(\"Hello World\")\nmsg.addTextRecord(\"Hola Mundo\", \"es\")\nmsg.addMimeMediaRecord(\"text/json\", '{\"answer\": 42}')\n\n# You then pass msg into nfc.write.message(msg)\n```\n\n### 2. Reading a new NDEF Message \n```py\n# Get NDEF data from scanned tag\ntag = nfc.read.scan({\"ndef\": True})\n\n# Create & print NDEF message\nmsg = nfc.Message(tag.ndef.content)\nprint(msg.getRecords())\n```\n\n## nfc.write\nWriting to an NFC tag should normally be done inside the read loop.\n\n### Writing an NDEF message\n```py\n# Create new message\nmsg = nfc.Message()\nmsg.addUriRecord(\"https://community.matrix.one\")\n\n# Write and then Print status codes for activation & writing\nprint(nfc.write.message(msg))\n```\n\n### Erasing an NDEF message\n```py\nprint(nfc.write.erase())\n```\n\n### Writing to a tag's page (WARNING)\nBe careful when writing to a page. You can accidentally lock your NFC tag!\n```py\n# arg1: page you want to overwrite\n# arg2: Array of numbers that represents a byte\nprint(nfc.write.page(25, [48,45,59,21]))\n```\n\n# Building Locally For Development\nDownload the repository.\n```\ngit clone https://github.com/matrix-io/matrix-lite-nfc-py\n```\n\nInstall pybind11.\n```\nsudo python3 -m pip install pybind11\n```\n\nCompile and install library.\n```\nsudo python3 -m pip install ./matrix-lite-nfc-py\n```\n\nTest your changes by importing any of the following libraries into a `.py` file.\n```py\n# Direct C++ bindings\nimport _matrix_hal_nfc as hal_nfc\n\n# Abstractions to _matrix_hal_nfc\nimport matrix_lite_nfc as nfc\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/matrix-io/matrix-lite-nfc-py", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "matrix-lite-nfc", "package_url": "https://pypi.org/project/matrix-lite-nfc/", "platform": "", "project_url": "https://pypi.org/project/matrix-lite-nfc/", "project_urls": {"Homepage": "https://github.com/matrix-io/matrix-lite-nfc-py"}, "release_url": "https://pypi.org/project/matrix-lite-nfc/0.0.2/", "requires_dist": ["pybind11 (>=2.4)"], "requires_python": "", "summary": "A Python wrapper for MATRIX HAL NFC", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>MATRIX-Lite-NFC-Py</h1>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e00e94f49b8ee01961b6136c526475e62d279ad3/68747470733a2f2f6769746875622e636f6d2f6d61747269782d696f2f6d61747269782d6c6974652d6e66632d70792f776f726b666c6f77732f507950692532304465706c6f796d656e742f62616467652e737667\"></p>\n<p>MATRIX Lite NFC Py is a package that allows users of varying skill levels to easily program NFC with their MATRIX Creator.</p>\n<h1>Smartphone Apps For Debugging</h1>\n<ul>\n<li><a href=\"https://apps.apple.com/us/app/nfc-taginfo-by-nxp/id1246143596\" rel=\"nofollow\">IOS App</a></li>\n<li><a href=\"https://play.google.com/store/apps/details?id=com.nxp.nfc.tagwriter&amp;hl=en_US\" rel=\"nofollow\">Android App</a></li>\n</ul>\n<h1>Roadmap</h1>\n<ul>\n<li>[x] Reading Info  (All tags)</li>\n<li>[x] Reading Pages (MIFARE Ultralight &amp; NTAG)</li>\n<li>[x] Writing Page  (MIFARE Ultralight &amp; NTAG)</li>\n<li>[x] Reading NDEF  (MIFARE Ultralight &amp; NTAG)</li>\n<li>[x] Writing NDEF  (MIFARE Ultralight &amp; NTAG)</li>\n</ul>\n<h1>Installation</h1>\n<h2>1. Install MATRIX HAL NFC</h2>\n<p><a href=\"https://github.com/matrix-io/matrix-hal-nfc\" rel=\"nofollow\">https://github.com/matrix-io/matrix-hal-nfc</a></p>\n<h2>2. Install PIP3</h2>\n<blockquote>\n<p>To call your scripts with python 3, use <code>python3 YOUR_SCRIPT.py</code></p>\n</blockquote>\n<pre><code>sudo apt-get install python3-pip\n</code></pre>\n<h2>3. Upgrade PIP</h2>\n<pre><code>python3 -m pip install --upgrade pip\n</code></pre>\n<h2>4. Install matrix-lite-nfc-py</h2>\n<pre><code>sudo python3 -m pip install matrix-lite-nfc\n</code></pre>\n<h1>Reference</h1>\n<h2>Import Statement</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matrix_lite_nfc</span> <span class=\"k\">as</span> <span class=\"nn\">nfc</span>\n</pre>\n<h2>nfc.status</h2>\n<p>When a read or write function completes, it will contain a status code to indicate the result. nfc.Status returns a string of what that number means.</p>\n<pre><span class=\"n\">nfc</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">(</span><span class=\"o\">/*</span><span class=\"n\">number</span><span class=\"o\">*/</span><span class=\"p\">)</span>\n</pre>\n<h2>nfc.read</h2>\n<blockquote>\n<p>There can only be one instance of NFC reading. This is a hardware limitation that will not change.</p>\n</blockquote>\n<h3>Synchronous Read</h3>\n<p>A simple read that returns an object with tag data.</p>\n<pre><span class=\"n\">nfc</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"o\">.</span><span class=\"n\">scan</span><span class=\"p\">({</span>\n    <span class=\"c1\"># At least 1 read options is required. Less options -&gt; faster reading!</span>\n    <span class=\"s2\">\"info\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>  <span class=\"c1\"># Generic information for any NFC tag</span>\n    <span class=\"s2\">\"pages\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"c1\"># All page data</span>\n    <span class=\"s2\">\"ndef\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>  <span class=\"c1\"># A single page(faster than pages)</span>\n    <span class=\"s2\">\"page\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>     <span class=\"c1\"># All NDEF data</span>\n<span class=\"p\">})</span>\n</pre>\n<h3>Starting Read Loop</h3>\n<p>A non-blocking loop that passes tag data to a callback.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">read_callback</span><span class=\"p\">(</span><span class=\"n\">tag</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">tag</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">==</span> <span class=\"mi\">256</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"NFC Tag Scanned!\"</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tag</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span><span class=\"p\">(</span><span class=\"n\">tag</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">==</span> <span class=\"mi\">1024</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Nothing Scanned!\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Configure what you want to read</span>\n<span class=\"n\">nfc</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"rate\"</span><span class=\"p\">:</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"c1\"># Read loop speed (Seconds)</span>\n    <span class=\"s2\">\"info\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"pages\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"ndef\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"page\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"p\">},</span> <span class=\"n\">read_callback</span><span class=\"p\">)</span>\n</pre>\n<h3>Stopping Read Loop</h3>\n<pre><span class=\"n\">nfc</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n<h2>nfc.Message</h2>\n<h3>1. Creating a new NDEF Message</h3>\n<pre><span class=\"c1\"># Create an empty NDEF message</span>\n<span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"n\">nfc</span><span class=\"o\">.</span><span class=\"n\">Message</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Add NDEF Records to message</span>\n<span class=\"n\">msg</span><span class=\"o\">.</span><span class=\"n\">addUriRecord</span><span class=\"p\">(</span><span class=\"s2\">\"https://community.matrix.one\"</span><span class=\"p\">)</span>\n<span class=\"n\">msg</span><span class=\"o\">.</span><span class=\"n\">addUriRecord</span><span class=\"p\">(</span><span class=\"s2\">\"tel:+14085551212\"</span><span class=\"p\">)</span>\n<span class=\"n\">msg</span><span class=\"o\">.</span><span class=\"n\">addTextRecord</span><span class=\"p\">(</span><span class=\"s2\">\"Hello World\"</span><span class=\"p\">)</span>\n<span class=\"n\">msg</span><span class=\"o\">.</span><span class=\"n\">addTextRecord</span><span class=\"p\">(</span><span class=\"s2\">\"Hola Mundo\"</span><span class=\"p\">,</span> <span class=\"s2\">\"es\"</span><span class=\"p\">)</span>\n<span class=\"n\">msg</span><span class=\"o\">.</span><span class=\"n\">addMimeMediaRecord</span><span class=\"p\">(</span><span class=\"s2\">\"text/json\"</span><span class=\"p\">,</span> <span class=\"s1\">'{\"answer\": 42}'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># You then pass msg into nfc.write.message(msg)</span>\n</pre>\n<h3>2. Reading a new NDEF Message</h3>\n<pre><span class=\"c1\"># Get NDEF data from scanned tag</span>\n<span class=\"n\">tag</span> <span class=\"o\">=</span> <span class=\"n\">nfc</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"o\">.</span><span class=\"n\">scan</span><span class=\"p\">({</span><span class=\"s2\">\"ndef\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Create &amp; print NDEF message</span>\n<span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"n\">nfc</span><span class=\"o\">.</span><span class=\"n\">Message</span><span class=\"p\">(</span><span class=\"n\">tag</span><span class=\"o\">.</span><span class=\"n\">ndef</span><span class=\"o\">.</span><span class=\"n\">content</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"o\">.</span><span class=\"n\">getRecords</span><span class=\"p\">())</span>\n</pre>\n<h2>nfc.write</h2>\n<p>Writing to an NFC tag should normally be done inside the read loop.</p>\n<h3>Writing an NDEF message</h3>\n<pre><span class=\"c1\"># Create new message</span>\n<span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"n\">nfc</span><span class=\"o\">.</span><span class=\"n\">Message</span><span class=\"p\">()</span>\n<span class=\"n\">msg</span><span class=\"o\">.</span><span class=\"n\">addUriRecord</span><span class=\"p\">(</span><span class=\"s2\">\"https://community.matrix.one\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Write and then Print status codes for activation &amp; writing</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">nfc</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">))</span>\n</pre>\n<h3>Erasing an NDEF message</h3>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">nfc</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"o\">.</span><span class=\"n\">erase</span><span class=\"p\">())</span>\n</pre>\n<h3>Writing to a tag's page (WARNING)</h3>\n<p>Be careful when writing to a page. You can accidentally lock your NFC tag!</p>\n<pre><span class=\"c1\"># arg1: page you want to overwrite</span>\n<span class=\"c1\"># arg2: Array of numbers that represents a byte</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">nfc</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"o\">.</span><span class=\"n\">page</span><span class=\"p\">(</span><span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">48</span><span class=\"p\">,</span><span class=\"mi\">45</span><span class=\"p\">,</span><span class=\"mi\">59</span><span class=\"p\">,</span><span class=\"mi\">21</span><span class=\"p\">]))</span>\n</pre>\n<h1>Building Locally For Development</h1>\n<p>Download the repository.</p>\n<pre><code>git clone https://github.com/matrix-io/matrix-lite-nfc-py\n</code></pre>\n<p>Install pybind11.</p>\n<pre><code>sudo python3 -m pip install pybind11\n</code></pre>\n<p>Compile and install library.</p>\n<pre><code>sudo python3 -m pip install ./matrix-lite-nfc-py\n</code></pre>\n<p>Test your changes by importing any of the following libraries into a <code>.py</code> file.</p>\n<pre><span class=\"c1\"># Direct C++ bindings</span>\n<span class=\"kn\">import</span> <span class=\"nn\">_matrix_hal_nfc</span> <span class=\"k\">as</span> <span class=\"nn\">hal_nfc</span>\n\n<span class=\"c1\"># Abstractions to _matrix_hal_nfc</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matrix_lite_nfc</span> <span class=\"k\">as</span> <span class=\"nn\">nfc</span>\n</pre>\n\n          </div>"}, "last_serial": 6172309, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4a6988eff2ffffd98cd57228448e8e61", "sha256": "36ba1878b028f5ff28edd4185e26fe17f764e28a5c18e45702dd83dd91271eec"}, "downloads": -1, "filename": "matrix_lite_nfc-0.0.1-cp35-cp35m-linux_armv6l.whl", "has_sig": false, "md5_digest": "4a6988eff2ffffd98cd57228448e8e61", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 3678081, "upload_time": "2019-11-01T16:08:40", "upload_time_iso_8601": "2019-11-01T16:08:40.876185Z", "url": "https://files.pythonhosted.org/packages/05/e1/b146f3171b586271280c31de08ce20df64f2a179ab504981709fca8e39e1/matrix_lite_nfc-0.0.1-cp35-cp35m-linux_armv6l.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7583aefd20660288469a74bedf2d866", "sha256": "e6daf3fcc27bb8d97a8e5e240ff838d1695f2e39f9498475100b9f2d3c68fdf9"}, "downloads": -1, "filename": "matrix_lite_nfc-0.0.1-cp35-cp35m-linux_armv7l.whl", "has_sig": false, "md5_digest": "f7583aefd20660288469a74bedf2d866", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 3674161, "upload_time": "2019-11-01T15:37:45", "upload_time_iso_8601": "2019-11-01T15:37:45.561962Z", "url": "https://files.pythonhosted.org/packages/ca/85/b672bd46ef05702336c96579ad356cba9448feb581a90e45ca4bbd1a5c37/matrix_lite_nfc-0.0.1-cp35-cp35m-linux_armv7l.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "90e3c6c8b4be388265b9d95bbd349035", "sha256": "9b29eaab6e2e28b7256368a1cfc481c7a5e08c5204e96230c97dd0b08762f50e"}, "downloads": -1, "filename": "matrix_lite_nfc-0.0.1-cp37-cp37m-linux_armv6l.whl", "has_sig": false, "md5_digest": "90e3c6c8b4be388265b9d95bbd349035", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3664126, "upload_time": "2019-11-01T16:08:37", "upload_time_iso_8601": "2019-11-01T16:08:37.991556Z", "url": "https://files.pythonhosted.org/packages/4e/a0/26947540962a5ac955dc6f03b1f066f117fc7f0b5baa3facb84bb6957c97/matrix_lite_nfc-0.0.1-cp37-cp37m-linux_armv6l.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d640a06dfaf1b846bf13da9c1ec515b", "sha256": "a7cb957ebcae9940cda120877d0bc156bb793b8eeeda7494f2cff60e960bc80e"}, "downloads": -1, "filename": "matrix_lite_nfc-0.0.1-cp37-cp37m-linux_armv7l.whl", "has_sig": false, "md5_digest": "8d640a06dfaf1b846bf13da9c1ec515b", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3657167, "upload_time": "2019-11-01T15:43:51", "upload_time_iso_8601": "2019-11-01T15:43:51.662785Z", "url": "https://files.pythonhosted.org/packages/8b/0c/05972ca0293a568daaee6d8e1b239289df5bfb89bdccc8ecb0df59b9e2d8/matrix_lite_nfc-0.0.1-cp37-cp37m-linux_armv7l.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7090edf217f82c7d5884eda4e8fb1ee7", "sha256": "066ec1a42b9d6787649410945fb35e076aff2e9c14b07d975ee61761552811d5"}, "downloads": -1, "filename": "matrix_lite_nfc-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7090edf217f82c7d5884eda4e8fb1ee7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10516, "upload_time": "2019-11-06T04:32:17", "upload_time_iso_8601": "2019-11-06T04:32:17.350222Z", "url": "https://files.pythonhosted.org/packages/99/96/3ffc0b9939ff3d4f926651f58f70c34b9356b7a2f92bdc02794e7ecfee26/matrix_lite_nfc-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "349685ae7e791c780191be0a12427f35", "sha256": "a876561425980e6adc0849d3b609d34f2425674347f55dba5c91ce3a99758421"}, "downloads": -1, "filename": "matrix_lite_nfc-0.0.2-cp35-cp35m-linux_armv6l.whl", "has_sig": false, "md5_digest": "349685ae7e791c780191be0a12427f35", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 3670486, "upload_time": "2019-11-21T00:32:41", "upload_time_iso_8601": "2019-11-21T00:32:41.691459Z", "url": "https://files.pythonhosted.org/packages/80/9b/0effc4cb5506f4aeb05f7bf2c392d4c66be13bef6d8b74edf328ff067eec/matrix_lite_nfc-0.0.2-cp35-cp35m-linux_armv6l.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "548b2b36d63ffbbc9edddad95d71e46c", "sha256": "931b5aa4c141443335123a87a01d19ee15ea8a69d8e74fb901474421b8a4fa0c"}, "downloads": -1, "filename": "matrix_lite_nfc-0.0.2-cp35-cp35m-linux_armv7l.whl", "has_sig": false, "md5_digest": "548b2b36d63ffbbc9edddad95d71e46c", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 3668758, "upload_time": "2019-11-21T00:32:43", "upload_time_iso_8601": "2019-11-21T00:32:43.883423Z", "url": "https://files.pythonhosted.org/packages/8a/e6/e5a59da5de86cf99c33bcf28ba6b9f1d4b0df7e0c952d6c89465498c4379/matrix_lite_nfc-0.0.2-cp35-cp35m-linux_armv7l.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd0d447db59dfb8b280e328275fcf1b3", "sha256": "11fae9fc8efa33e699e453ef6b5075a2f9e79677a6769302da0471dfe0164f86"}, "downloads": -1, "filename": "matrix_lite_nfc-0.0.2-cp37-cp37m-linux_armv6l.whl", "has_sig": false, "md5_digest": "cd0d447db59dfb8b280e328275fcf1b3", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3656698, "upload_time": "2019-11-21T00:32:46", "upload_time_iso_8601": "2019-11-21T00:32:46.117394Z", "url": "https://files.pythonhosted.org/packages/82/a2/47643d19699e8e1d3e8fcb16c17a7c62cb21b2d5f613d4f41bb49fdf2531/matrix_lite_nfc-0.0.2-cp37-cp37m-linux_armv6l.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "073f449334759c4837aa96e9e07cb5c4", "sha256": "ea5327a22e9e26a68102c1fd4558c20cbfca58e1865829b5b28f8e0d2d5df469"}, "downloads": -1, "filename": "matrix_lite_nfc-0.0.2-cp37-cp37m-linux_armv7l.whl", "has_sig": false, "md5_digest": "073f449334759c4837aa96e9e07cb5c4", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3654934, "upload_time": "2019-11-21T00:32:48", "upload_time_iso_8601": "2019-11-21T00:32:48.084271Z", "url": "https://files.pythonhosted.org/packages/a1/2a/2f28a2732bd07f622b03cbea3e44942529d9e3de81079e8af1afcc7a43f9/matrix_lite_nfc-0.0.2-cp37-cp37m-linux_armv7l.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2628cfcc8efd7e4ed404baf64d48c648", "sha256": "ada29587661a07e51f3094d6cae081979502133eee35de21903ecb75dd17bd73"}, "downloads": -1, "filename": "matrix_lite_nfc-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2628cfcc8efd7e4ed404baf64d48c648", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10749, "upload_time": "2019-11-21T00:32:50", "upload_time_iso_8601": "2019-11-21T00:32:50.115404Z", "url": "https://files.pythonhosted.org/packages/48/9e/eac4ae5ddf3d5c73c8b8ac131b32e0ae4a9791a88104dc47d1143eb6a68b/matrix_lite_nfc-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "349685ae7e791c780191be0a12427f35", "sha256": "a876561425980e6adc0849d3b609d34f2425674347f55dba5c91ce3a99758421"}, "downloads": -1, "filename": "matrix_lite_nfc-0.0.2-cp35-cp35m-linux_armv6l.whl", "has_sig": false, "md5_digest": "349685ae7e791c780191be0a12427f35", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 3670486, "upload_time": "2019-11-21T00:32:41", "upload_time_iso_8601": "2019-11-21T00:32:41.691459Z", "url": "https://files.pythonhosted.org/packages/80/9b/0effc4cb5506f4aeb05f7bf2c392d4c66be13bef6d8b74edf328ff067eec/matrix_lite_nfc-0.0.2-cp35-cp35m-linux_armv6l.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "548b2b36d63ffbbc9edddad95d71e46c", "sha256": "931b5aa4c141443335123a87a01d19ee15ea8a69d8e74fb901474421b8a4fa0c"}, "downloads": -1, "filename": "matrix_lite_nfc-0.0.2-cp35-cp35m-linux_armv7l.whl", "has_sig": false, "md5_digest": "548b2b36d63ffbbc9edddad95d71e46c", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 3668758, "upload_time": "2019-11-21T00:32:43", "upload_time_iso_8601": "2019-11-21T00:32:43.883423Z", "url": "https://files.pythonhosted.org/packages/8a/e6/e5a59da5de86cf99c33bcf28ba6b9f1d4b0df7e0c952d6c89465498c4379/matrix_lite_nfc-0.0.2-cp35-cp35m-linux_armv7l.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd0d447db59dfb8b280e328275fcf1b3", "sha256": "11fae9fc8efa33e699e453ef6b5075a2f9e79677a6769302da0471dfe0164f86"}, "downloads": -1, "filename": "matrix_lite_nfc-0.0.2-cp37-cp37m-linux_armv6l.whl", "has_sig": false, "md5_digest": "cd0d447db59dfb8b280e328275fcf1b3", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3656698, "upload_time": "2019-11-21T00:32:46", "upload_time_iso_8601": "2019-11-21T00:32:46.117394Z", "url": "https://files.pythonhosted.org/packages/82/a2/47643d19699e8e1d3e8fcb16c17a7c62cb21b2d5f613d4f41bb49fdf2531/matrix_lite_nfc-0.0.2-cp37-cp37m-linux_armv6l.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "073f449334759c4837aa96e9e07cb5c4", "sha256": "ea5327a22e9e26a68102c1fd4558c20cbfca58e1865829b5b28f8e0d2d5df469"}, "downloads": -1, "filename": "matrix_lite_nfc-0.0.2-cp37-cp37m-linux_armv7l.whl", "has_sig": false, "md5_digest": "073f449334759c4837aa96e9e07cb5c4", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3654934, "upload_time": "2019-11-21T00:32:48", "upload_time_iso_8601": "2019-11-21T00:32:48.084271Z", "url": "https://files.pythonhosted.org/packages/a1/2a/2f28a2732bd07f622b03cbea3e44942529d9e3de81079e8af1afcc7a43f9/matrix_lite_nfc-0.0.2-cp37-cp37m-linux_armv7l.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2628cfcc8efd7e4ed404baf64d48c648", "sha256": "ada29587661a07e51f3094d6cae081979502133eee35de21903ecb75dd17bd73"}, "downloads": -1, "filename": "matrix_lite_nfc-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2628cfcc8efd7e4ed404baf64d48c648", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10749, "upload_time": "2019-11-21T00:32:50", "upload_time_iso_8601": "2019-11-21T00:32:50.115404Z", "url": "https://files.pythonhosted.org/packages/48/9e/eac4ae5ddf3d5c73c8b8ac131b32e0ae4a9791a88104dc47d1143eb6a68b/matrix_lite_nfc-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:15 2020"}