{"info": {"author": "Xiangkui Li", "author_email": "1749498702@qq.com", "bugtrack_url": null, "classifiers": [], "description": "# recorder\nA simple audio recorder which is Based on PyAudio\n# Usage\n### install\n```\npip install recorder\n```\n### get device info\nget all device info\n```python\nfrom recorder import Recorder\nr = Recorder()\nprint(r.get_device_info())  \n```\nget specified device info\n```python\nfrom recorder import Recorder\nr = Recorder()\nprint(r.get_device_info(index=0))  \n```\n### record\nrecord for 5 seconds and return the data as numpy array\n```python\nfrom recorder import Recorder\nr = Recorder()\nnp_data = r.record(5)  \nprint(np_data) \n```\n\nrecord for 5 seconds and save the data to file `out.wav` \n```python\nfrom recorder import Recorder\nr = Recorder()\nr.record(5, output='out.wav')  \n```\n\n### get wave data with queue\nget wave data from queue and print data\n```python\nfrom recorder import Recorder\nr = Recorder()\nq = r.get_wave_queue()\nwhile True:\n    print(q.get())\n```\n\n\n### play\nplay a piece of sound\n```python\nfrom recorder import Recorder\nRecorder.play('out.wav')\n```\n### close\nclose the recorder\n```python\nfrom recorder import Recorder\nr = Recorder()\nr.close()\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lixk/recorder", "keywords": "pip,recorder", "license": "MIT Licence", "maintainer": "", "maintainer_email": "", "name": "recorder", "package_url": "https://pypi.org/project/recorder/", "platform": "any", "project_url": "https://pypi.org/project/recorder/", "project_urls": {"Homepage": "https://github.com/lixk/recorder"}, "release_url": "https://pypi.org/project/recorder/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "a simple audio recorder", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>recorder</h1>\n<p>A simple audio recorder which is Based on PyAudio</p>\n<h1>Usage</h1>\n<h3>install</h3>\n<pre><code>pip install recorder\n</code></pre>\n<h3>get device info</h3>\n<p>get all device info</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">recorder</span> <span class=\"kn\">import</span> <span class=\"n\">Recorder</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Recorder</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">get_device_info</span><span class=\"p\">())</span>  \n</pre>\n<p>get specified device info</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">recorder</span> <span class=\"kn\">import</span> <span class=\"n\">Recorder</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Recorder</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">get_device_info</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">))</span>  \n</pre>\n<h3>record</h3>\n<p>record for 5 seconds and return the data as numpy array</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">recorder</span> <span class=\"kn\">import</span> <span class=\"n\">Recorder</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Recorder</span><span class=\"p\">()</span>\n<span class=\"n\">np_data</span> <span class=\"o\">=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>  \n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">np_data</span><span class=\"p\">)</span> \n</pre>\n<p>record for 5 seconds and save the data to file <code>out.wav</code></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">recorder</span> <span class=\"kn\">import</span> <span class=\"n\">Recorder</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Recorder</span><span class=\"p\">()</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">output</span><span class=\"o\">=</span><span class=\"s1\">'out.wav'</span><span class=\"p\">)</span>  \n</pre>\n<h3>get wave data with queue</h3>\n<p>get wave data from queue and print data</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">recorder</span> <span class=\"kn\">import</span> <span class=\"n\">Recorder</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Recorder</span><span class=\"p\">()</span>\n<span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">get_wave_queue</span><span class=\"p\">()</span>\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">())</span>\n</pre>\n<h3>play</h3>\n<p>play a piece of sound</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">recorder</span> <span class=\"kn\">import</span> <span class=\"n\">Recorder</span>\n<span class=\"n\">Recorder</span><span class=\"o\">.</span><span class=\"n\">play</span><span class=\"p\">(</span><span class=\"s1\">'out.wav'</span><span class=\"p\">)</span>\n</pre>\n<h3>close</h3>\n<p>close the recorder</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">recorder</span> <span class=\"kn\">import</span> <span class=\"n\">Recorder</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Recorder</span><span class=\"p\">()</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6394291, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5ad448e47b19e2232387c168e598f959", "sha256": "9825396ddd026aba0d32a26d1bb4f0443c3957c4d9698f21fe10fab3d44e4776"}, "downloads": -1, "filename": "recorder-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5ad448e47b19e2232387c168e598f959", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3169, "upload_time": "2020-01-04T06:47:50", "upload_time_iso_8601": "2020-01-04T06:47:50.703554Z", "url": "https://files.pythonhosted.org/packages/f1/19/d8142639fceefe74f4cc54c5c0ed5a7319a1e481fec1b5e738282878d0ee/recorder-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "9b5b320d087a78758a54441cff7d4173", "sha256": "311ded36a517c30b20102c904f9a50eb86ef7a32431ed0077f4d195d276221ee"}, "downloads": -1, "filename": "recorder-0.0.2.tar.gz", "has_sig": false, "md5_digest": "9b5b320d087a78758a54441cff7d4173", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3160, "upload_time": "2020-01-04T08:11:24", "upload_time_iso_8601": "2020-01-04T08:11:24.895564Z", "url": "https://files.pythonhosted.org/packages/57/5c/72796223b369af88cfe697d2ac1d8afb2d3c2fac89515d36edf5e573c21d/recorder-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9b5b320d087a78758a54441cff7d4173", "sha256": "311ded36a517c30b20102c904f9a50eb86ef7a32431ed0077f4d195d276221ee"}, "downloads": -1, "filename": "recorder-0.0.2.tar.gz", "has_sig": false, "md5_digest": "9b5b320d087a78758a54441cff7d4173", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3160, "upload_time": "2020-01-04T08:11:24", "upload_time_iso_8601": "2020-01-04T08:11:24.895564Z", "url": "https://files.pythonhosted.org/packages/57/5c/72796223b369af88cfe697d2ac1d8afb2d3c2fac89515d36edf5e573c21d/recorder-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:07 2020"}