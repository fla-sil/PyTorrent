{"info": {"author": "Alessandro Molina", "author_email": "alessandro.molina@axant.it", "bugtrack_url": null, "classifiers": [], "description": "About flatpages\n-------------------------\n\nflatpages is a Pluggable application for TurboGears2 meant\nto simply management of simple static pages inside your\nTurboGears application.\n\nInstead of creating a controller and template for \"About\",\n\"Contacts\" and similar pages, just plug flatpages and\nedit them directly from the administration interface.\n\nInstalling\n-------------------------------\n\nflatpages can be installed both from pypi or from bitbucket::\n\n    pip install tgapp-flatpages\n\nshould just work for most of the users\n\nPlugging flatpages\n----------------------------\n\nIn your application *config/app_cfg.py* import **plug**::\n\n    from tgext.pluggable import plug\n\nThen at the *end of the file* call plug with flatpages::\n\n    plug(base_config, 'flatpages')\n\nYou will be able to access the plugged application\nmanagement interface at *http://localhost:8080/pages/manage*\nwhile all the pages you create will be served at\n*http://localhost:8080/pages/PAGENAME*.\n\nRestricting access to pages\n-----------------------------\n\nflatpages supports restricting access to pages only to users\nthat has a specific permission. When creating the page\nset it to *Public*, *Only Registered Users* or any of\nthe ``Permission`` your application provides.\n\nLoading pages from file\n-----------------------------\n\nWhen working with static pages it's often easier to include\nthe starting version or new versions into the source code itself\ninstead of providing a database migration each time the content\nhas to be changed.\n\nTo allow this, flatpages permits to load the page content\nfrom a file local to the application itself. To do so\nit's sufficient to set ``file://path/relative/to/application/package``\nas the content of the static page.\n\nOptions\n-----------------------------\n\nflatpages exposes some options to control the behavior when\nrendering a page, pass this to the plug call to set them:\n\n  * ``format`` -> This is the format used to render the page content,\n    can be **html** or **rst** if you store pages in RST or HTML format. from version 0.4.0 defaults to **html**\n\n  * ``templates`` -> This is a list of the templates available to render\n    the pages. Each entry is in the form: ``(\"engine:package.templates.path\", \"Template Description\")``.\n\nExample of plugin using genshi as template engine::\n\n    plug(base_config, 'flatpages', format='html',\n     templates=[(\"genshi:yourproject.templates.flatpages.page\", \"default\")],\n    global_models = True)\n\nOverriding crud templates\n-------------------------\n\nyou can find tgext.admin templates here: https://github.com/TurboGears/tgext.admin/tree/master/tgext/admin/templates/bootstrap_crud\nand override them in your app_cfg.py with something like::\n\n    replace_template(base_config,\n                     'tgext.admin.templates.bootstrap_crud.get_all',\n                     'myproject.templates.crud.get_all')\n\n\n\nHooks\n-----\n\nflatpages exposes some hooks to control the behavior when\nrendering a page:\n\n  * ``flatpages.before_override_template`` -> This is the hook called before the template gets overrided by the info, passed as args an object with page slug and self.\n\n  * ``flatpages.after_override_template`` ->  This is the hook called after the template gets overrided by the info, passed as args an object of FlatPage and self .\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/axant/tgapp-flatpages", "keywords": "turbogears2.application", "license": "", "maintainer": "", "maintainer_email": "", "name": "tgapp-flatpages", "package_url": "https://pypi.org/project/tgapp-flatpages/", "platform": "", "project_url": "https://pypi.org/project/tgapp-flatpages/", "project_urls": {"Homepage": "https://github.com/axant/tgapp-flatpages"}, "release_url": "https://pypi.org/project/tgapp-flatpages/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "Pluggable application to manage static pages (/about) on DB (sqlalchemy or ming) with RST or HTML", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about-flatpages\">\n<h2>About flatpages</h2>\n<p>flatpages is a Pluggable application for TurboGears2 meant\nto simply management of simple static pages inside your\nTurboGears application.</p>\n<p>Instead of creating a controller and template for \u201cAbout\u201d,\n\u201cContacts\u201d and similar pages, just plug flatpages and\nedit them directly from the administration interface.</p>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>flatpages can be installed both from pypi or from bitbucket:</p>\n<pre>pip install tgapp-flatpages\n</pre>\n<p>should just work for most of the users</p>\n</div>\n<div id=\"plugging-flatpages\">\n<h2>Plugging flatpages</h2>\n<p>In your application <em>config/app_cfg.py</em> import <strong>plug</strong>:</p>\n<pre>from tgext.pluggable import plug\n</pre>\n<p>Then at the <em>end of the file</em> call plug with flatpages:</p>\n<pre>plug(base_config, 'flatpages')\n</pre>\n<p>You will be able to access the plugged application\nmanagement interface at <em>http://localhost:8080/pages/manage</em>\nwhile all the pages you create will be served at\n<em>http://localhost:8080/pages/PAGENAME</em>.</p>\n</div>\n<div id=\"restricting-access-to-pages\">\n<h2>Restricting access to pages</h2>\n<p>flatpages supports restricting access to pages only to users\nthat has a specific permission. When creating the page\nset it to <em>Public</em>, <em>Only Registered Users</em> or any of\nthe <tt>Permission</tt> your application provides.</p>\n</div>\n<div id=\"loading-pages-from-file\">\n<h2>Loading pages from file</h2>\n<p>When working with static pages it\u2019s often easier to include\nthe starting version or new versions into the source code itself\ninstead of providing a database migration each time the content\nhas to be changed.</p>\n<p>To allow this, flatpages permits to load the page content\nfrom a file local to the application itself. To do so\nit\u2019s sufficient to set <tt><span class=\"pre\">file://path/relative/to/application/package</span></tt>\nas the content of the static page.</p>\n</div>\n<div id=\"options\">\n<h2>Options</h2>\n<p>flatpages exposes some options to control the behavior when\nrendering a page, pass this to the plug call to set them:</p>\n<blockquote>\n<ul>\n<li><tt>format</tt> -&gt; This is the format used to render the page content,\ncan be <strong>html</strong> or <strong>rst</strong> if you store pages in RST or HTML format. from version 0.4.0 defaults to <strong>html</strong></li>\n<li><tt>templates</tt> -&gt; This is a list of the templates available to render\nthe pages. Each entry is in the form: <tt>(\"engine:package.templates.path\", \"Template Description\")</tt>.</li>\n</ul>\n</blockquote>\n<p>Example of plugin using genshi as template engine:</p>\n<pre>plug(base_config, 'flatpages', format='html',\n templates=[(\"genshi:yourproject.templates.flatpages.page\", \"default\")],\nglobal_models = True)\n</pre>\n</div>\n<div id=\"overriding-crud-templates\">\n<h2>Overriding crud templates</h2>\n<p>you can find tgext.admin templates here: <a href=\"https://github.com/TurboGears/tgext.admin/tree/master/tgext/admin/templates/bootstrap_crud\" rel=\"nofollow\">https://github.com/TurboGears/tgext.admin/tree/master/tgext/admin/templates/bootstrap_crud</a>\nand override them in your app_cfg.py with something like:</p>\n<pre>replace_template(base_config,\n                 'tgext.admin.templates.bootstrap_crud.get_all',\n                 'myproject.templates.crud.get_all')\n</pre>\n</div>\n<div id=\"hooks\">\n<h2>Hooks</h2>\n<p>flatpages exposes some hooks to control the behavior when\nrendering a page:</p>\n<blockquote>\n<ul>\n<li><tt>flatpages.before_override_template</tt> -&gt; This is the hook called before the template gets overrided by the info, passed as args an object with page slug and self.</li>\n<li><tt>flatpages.after_override_template</tt> -&gt;  This is the hook called after the template gets overrided by the info, passed as args an object of FlatPage and self .</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 3872875, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d4ab1e8257e7590433315b52c5d948a7", "sha256": "958b35b684964f3144f818ec61e6e713d48814cca177f713d73928361bc9e8f9"}, "downloads": -1, "filename": "tgapp-flatpages-0.1.tar.gz", "has_sig": false, "md5_digest": "d4ab1e8257e7590433315b52c5d948a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6687, "upload_time": "2014-03-12T12:04:01", "upload_time_iso_8601": "2014-03-12T12:04:01.587260Z", "url": "https://files.pythonhosted.org/packages/c4/32/0a6996d5e872829e518c085a1af33266fb68558423887e7a25fff04ac7cf/tgapp-flatpages-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "280b3647e64daa6833836d835ba4a7eb", "sha256": "22d817bd775d8ae9d49f1898014ffe61cd86465935fd8889e98047f38fe166d6"}, "downloads": -1, "filename": "tgapp-flatpages-0.1.1.tar.gz", "has_sig": false, "md5_digest": "280b3647e64daa6833836d835ba4a7eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6820, "upload_time": "2015-04-23T21:48:09", "upload_time_iso_8601": "2015-04-23T21:48:09.312694Z", "url": "https://files.pythonhosted.org/packages/af/5e/4fb29d66f362b4fa6c719994d0ad192a506ce1658bc3e8031cac5867ea14/tgapp-flatpages-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "9ce63a435fa17461934289fa8b80008f", "sha256": "4f5d633f9b8ae4f3b9989047b5b9ccfb3c28428352c823cff0e68e1d1f639317"}, "downloads": -1, "filename": "tgapp-flatpages-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9ce63a435fa17461934289fa8b80008f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93721, "upload_time": "2015-11-20T11:46:44", "upload_time_iso_8601": "2015-11-20T11:46:44.640785Z", "url": "https://files.pythonhosted.org/packages/99/e0/385de1a668b8f7a2eb256c8ae820bdf48e523c52b78903473a74ff4b27a6/tgapp-flatpages-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "243287846442d7a427cb3d73f596ca36", "sha256": "b12bca43a4b3d2a329505db47b9fabef3f8a391e4ebb369036f7ea2ef800272d"}, "downloads": -1, "filename": "tgapp-flatpages-0.2.1.tar.gz", "has_sig": false, "md5_digest": "243287846442d7a427cb3d73f596ca36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93731, "upload_time": "2015-11-20T13:01:14", "upload_time_iso_8601": "2015-11-20T13:01:14.284344Z", "url": "https://files.pythonhosted.org/packages/59/70/5f0717822a4d3e833229168ed5db87f5a188c8e85c4bd53e2154e9e270f4/tgapp-flatpages-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "99d48741fefb6a482a9b658fc25f38aa", "sha256": "da47ce670c0f9462b730eec1203704e2e156d24901372e2f9fabb6c344558df5"}, "downloads": -1, "filename": "tgapp-flatpages-0.2.2.tar.gz", "has_sig": false, "md5_digest": "99d48741fefb6a482a9b658fc25f38aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93802, "upload_time": "2015-11-27T18:25:57", "upload_time_iso_8601": "2015-11-27T18:25:57.297711Z", "url": "https://files.pythonhosted.org/packages/f5/94/16c1b0d7947282bf5ba240bc143692fa334a5da8453f5a10cc4c2c658ba9/tgapp-flatpages-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "8eea42ebd53926f85467db4a768f56b9", "sha256": "c74c8e0cb5eebe79b56aa522579bdadff3207217f444c039a44cafd2ce2c7f22"}, "downloads": -1, "filename": "tgapp-flatpages-0.3.0.tar.gz", "has_sig": false, "md5_digest": "8eea42ebd53926f85467db4a768f56b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96097, "upload_time": "2018-02-19T16:22:18", "upload_time_iso_8601": "2018-02-19T16:22:18.897601Z", "url": "https://files.pythonhosted.org/packages/5a/db/fcbfbfdb8d2cdc05261d67880ba9b3f6505ea6e9ed0250c5004098bf1ab6/tgapp-flatpages-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "84267356ff9edb73f9cf9731d6ce8d88", "sha256": "2fdbcc5a3342d09f945abd5fa0fbc3a47f38b6d89cd66a381f9c9d9432df5186"}, "downloads": -1, "filename": "tgapp-flatpages-0.3.1.tar.gz", "has_sig": false, "md5_digest": "84267356ff9edb73f9cf9731d6ce8d88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95183, "upload_time": "2018-02-19T17:50:46", "upload_time_iso_8601": "2018-02-19T17:50:46.860188Z", "url": "https://files.pythonhosted.org/packages/30/b3/3a927bc7f68c3cca44421f83cf1b181dd84299b1f55c9d5233aa9468e3db/tgapp-flatpages-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "3f009396ef0dcd8d4c956e1660f2031d", "sha256": "b3434cdf2692a3fc099848549572b5c5233935dfaf173270a194fec14eb891dd"}, "downloads": -1, "filename": "tgapp-flatpages-0.3.2.tar.gz", "has_sig": false, "md5_digest": "3f009396ef0dcd8d4c956e1660f2031d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94131, "upload_time": "2018-05-03T13:27:41", "upload_time_iso_8601": "2018-05-03T13:27:41.165039Z", "url": "https://files.pythonhosted.org/packages/a4/73/8e3c55b95a3cb748713c448b56aba1c4e1e5b4e1f46adc49950d62a5b972/tgapp-flatpages-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "b1a20fec69e4fe9fca49fcb2718ac59e", "sha256": "5abc6cdc63b6c295658d1ef448d927fd594e4ca1036e1ec9baae8a48e0b61d8e"}, "downloads": -1, "filename": "tgapp-flatpages-0.3.3.tar.gz", "has_sig": false, "md5_digest": "b1a20fec69e4fe9fca49fcb2718ac59e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95852, "upload_time": "2018-05-15T12:40:08", "upload_time_iso_8601": "2018-05-15T12:40:08.829767Z", "url": "https://files.pythonhosted.org/packages/bd/ec/789ecfa71d7c21d5cb555bd0a30c3707f16106bf2bc1b0052f89f74374e8/tgapp-flatpages-0.3.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "09062bd44411ee0fe902cacf952d64f9", "sha256": "aea9131f878daf53b0fba042d09fdfbd35a67bc4da552fe7ed01b708ef6cda2b"}, "downloads": -1, "filename": "tgapp-flatpages-0.4.0.tar.gz", "has_sig": false, "md5_digest": "09062bd44411ee0fe902cacf952d64f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95872, "upload_time": "2018-05-17T15:45:25", "upload_time_iso_8601": "2018-05-17T15:45:25.153641Z", "url": "https://files.pythonhosted.org/packages/29/ab/a8df6100cb0380d00c3ecef2a05dcb6b54d4f317893b84ec1959ed1060c8/tgapp-flatpages-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "09062bd44411ee0fe902cacf952d64f9", "sha256": "aea9131f878daf53b0fba042d09fdfbd35a67bc4da552fe7ed01b708ef6cda2b"}, "downloads": -1, "filename": "tgapp-flatpages-0.4.0.tar.gz", "has_sig": false, "md5_digest": "09062bd44411ee0fe902cacf952d64f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95872, "upload_time": "2018-05-17T15:45:25", "upload_time_iso_8601": "2018-05-17T15:45:25.153641Z", "url": "https://files.pythonhosted.org/packages/29/ab/a8df6100cb0380d00c3ecef2a05dcb6b54d4f317893b84ec1959ed1060c8/tgapp-flatpages-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:17 2020"}