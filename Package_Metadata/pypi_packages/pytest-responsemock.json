{"info": {"author": "Igor `idle sign` Starikov", "author_email": "idlesign@yandex.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Pytest", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Testing"], "description": "pytest-responsemock\n===================\nhttps://github.com/idlesign/pytest-responsemock\n\n|release| |lic| |ci| |coverage|\n\n.. |release| image:: https://img.shields.io/pypi/v/pytest-responsemock.svg\n    :target: https://pypi.python.org/pypi/pytest-responsemock\n\n.. |lic| image:: https://img.shields.io/pypi/l/pytest-responsemock.svg\n    :target: https://pypi.python.org/pypi/pytest-responsemock\n\n.. |ci| image:: https://img.shields.io/travis/idlesign/pytest-responsemock/master.svg\n    :target: https://travis-ci.org/idlesign/pytest-responsemock\n\n.. |coverage| image:: https://img.shields.io/coveralls/idlesign/pytest-responsemock/master.svg\n    :target: https://coveralls.io/r/idlesign/pytest-responsemock\n\n\nDescription\n-----------\n\n*Simplified requests calls mocking for pytest*\n\nProvides ``response_mock`` fixture, exposing simple context manager.\n\nAny request under that manager will be intercepted and mocked according\nto one or more ``rules`` passed to the manager. If actual request won't fall\nunder any of given rules then an exception is raised (by default).\n\nRules are simple strings, of the pattern: ``HTTP_METHOD URL -> STATUS_CODE :BODY``.\n\n\nRequirements\n------------\n\n* Python 3.6+\n\n\nUsage\n-----\n\nWhen this package is installed ``response_mock`` is available for ``pytest`` test functions.\n\n.. code-block:: python\n\n    def for_test():\n        return requests.get('http://some.domain')\n\n\n    def test_me(response_mock):\n\n        # Pass response rule as a string,\n        # or many rules (to mock consequent requests) as a list of strings.\n        # Use optional `bypass` argument to disable mock conditionally.\n\n        with response_mock('GET http://some.domain -> 200 :Nice', bypass=False):\n\n            result = for_test()\n\n            assert result.ok\n            assert result.content == b'Nice'\n\n\nDescribe response header fields using multiline strings:\n\n.. code-block:: python\n\n    with response_mock(\n        '''\n        GET http://some.domain\n\n        Allow: GET, HEAD\n        Content-Language: ru\n\n        -> 200 :OK\n        '''\n    ):\n        ...\n\nTest json response:\n\n.. code-block:: python\n\n    response = json.dumps({'key': 'value', 'another': 'yes'})\n\n    with response_mock(f'POST http://some.domain -> 400 :{response}'):\n        ...\n\n\nAccess underlying RequestsMock (from ``responses`` package) as ``mock``:\n\n.. code-block:: python\n\n    with response_mock('HEAD http://some.domain -> 200 :Nope') as mock:\n\n        mock.add_passthru('http://other.domain')\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/idlesign/pytest-responsemock", "keywords": "", "license": "BSD 3-Clause License", "maintainer": "", "maintainer_email": "", "name": "pytest-responsemock", "package_url": "https://pypi.org/project/pytest-responsemock/", "platform": "", "project_url": "https://pypi.org/project/pytest-responsemock/", "project_urls": {"Homepage": "https://github.com/idlesign/pytest-responsemock"}, "release_url": "https://pypi.org/project/pytest-responsemock/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Simplified requests calls mocking for pytest", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/idlesign/pytest-responsemock\" rel=\"nofollow\">https://github.com/idlesign/pytest-responsemock</a></p>\n<p><a href=\"https://pypi.python.org/pypi/pytest-responsemock\" rel=\"nofollow\"><img alt=\"release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d960d6fa31e03fffacf4acf3a031cf9e39c04e60/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079746573742d726573706f6e73656d6f636b2e737667\"></a> <a href=\"https://pypi.python.org/pypi/pytest-responsemock\" rel=\"nofollow\"><img alt=\"lic\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/25488c01de2d2fc2f72719f4e0483b040a37632f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7079746573742d726573706f6e73656d6f636b2e737667\"></a> <a href=\"https://travis-ci.org/idlesign/pytest-responsemock\" rel=\"nofollow\"><img alt=\"ci\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4c41343a36aa4fa1102c2af3b18612d433b59d69/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f69646c657369676e2f7079746573742d726573706f6e73656d6f636b2f6d61737465722e737667\"></a> <a href=\"https://coveralls.io/r/idlesign/pytest-responsemock\" rel=\"nofollow\"><img alt=\"coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fa6bb5493e88347a39f7216d68de16b8756dc091/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f69646c657369676e2f7079746573742d726573706f6e73656d6f636b2f6d61737465722e737667\"></a></p>\n<div id=\"description\">\n<h2>Description</h2>\n<p><em>Simplified requests calls mocking for pytest</em></p>\n<p>Provides <tt>response_mock</tt> fixture, exposing simple context manager.</p>\n<p>Any request under that manager will be intercepted and mocked according\nto one or more <tt>rules</tt> passed to the manager. If actual request won\u2019t fall\nunder any of given rules then an exception is raised (by default).</p>\n<p>Rules are simple strings, of the pattern: <tt>HTTP_METHOD URL <span class=\"pre\">-&gt;</span> STATUS_CODE :BODY</tt>.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.6+</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>When this package is installed <tt>response_mock</tt> is available for <tt>pytest</tt> test functions.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">for_test</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://some.domain'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">test_me</span><span class=\"p\">(</span><span class=\"n\">response_mock</span><span class=\"p\">):</span>\n\n    <span class=\"c1\"># Pass response rule as a string,</span>\n    <span class=\"c1\"># or many rules (to mock consequent requests) as a list of strings.</span>\n    <span class=\"c1\"># Use optional `bypass` argument to disable mock conditionally.</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">response_mock</span><span class=\"p\">(</span><span class=\"s1\">'GET http://some.domain -&gt; 200 :Nice'</span><span class=\"p\">,</span> <span class=\"n\">bypass</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">for_test</span><span class=\"p\">()</span>\n\n        <span class=\"k\">assert</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">ok</span>\n        <span class=\"k\">assert</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">content</span> <span class=\"o\">==</span> <span class=\"sa\">b</span><span class=\"s1\">'Nice'</span>\n</pre>\n<p>Describe response header fields using multiline strings:</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">response_mock</span><span class=\"p\">(</span>\n    <span class=\"sd\">'''\n    GET http://some.domain\n\n    Allow: GET, HEAD\n    Content-Language: ru\n\n    -&gt; 200 :OK\n    '''</span>\n<span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre>\n<p>Test json response:</p>\n<pre><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">({</span><span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"s1\">'value'</span><span class=\"p\">,</span> <span class=\"s1\">'another'</span><span class=\"p\">:</span> <span class=\"s1\">'yes'</span><span class=\"p\">})</span>\n\n<span class=\"k\">with</span> <span class=\"n\">response_mock</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'POST http://some.domain -&gt; 400 :</span><span class=\"si\">{</span><span class=\"n\">response</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre>\n<p>Access underlying RequestsMock (from <tt>responses</tt> package) as <tt>mock</tt>:</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">response_mock</span><span class=\"p\">(</span><span class=\"s1\">'HEAD http://some.domain -&gt; 200 :Nope'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">mock</span><span class=\"p\">:</span>\n\n    <span class=\"n\">mock</span><span class=\"o\">.</span><span class=\"n\">add_passthru</span><span class=\"p\">(</span><span class=\"s1\">'http://other.domain'</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6918986, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b05b9a4db3fca2c71426145dd5181a80", "sha256": "e2d0d16bdfcbad41eceedd83225a8d7c1dd5ccaf704842ef27084a815255fa97"}, "downloads": -1, "filename": "pytest_responsemock-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b05b9a4db3fca2c71426145dd5181a80", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6392, "upload_time": "2020-03-05T13:27:19", "upload_time_iso_8601": "2020-03-05T13:27:19.742780Z", "url": "https://files.pythonhosted.org/packages/bf/21/1d04c32e860baf9652015167fc8e28a9f3476b535c84460ec21bc6605818/pytest_responsemock-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "055c5ef1b959d3d9b69751894b767fde", "sha256": "ff7905fbbe4b1ff7212ff8fb311b80764dd143d4b4ce6edd51afe4082cd0e583"}, "downloads": -1, "filename": "pytest-responsemock-0.1.0.tar.gz", "has_sig": false, "md5_digest": "055c5ef1b959d3d9b69751894b767fde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5152, "upload_time": "2020-03-05T13:27:16", "upload_time_iso_8601": "2020-03-05T13:27:16.399176Z", "url": "https://files.pythonhosted.org/packages/c8/67/29bf091648e7485746e655441f1e1cdbb3d559a2213ad7520905391efe5f/pytest-responsemock-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e99b5708a0ffef5e100f3f38a6d4de93", "sha256": "ca0120fc4b02b8cc44ab95607db0048028ea8aea9ab9deb9804b51f276db5f2a"}, "downloads": -1, "filename": "pytest_responsemock-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e99b5708a0ffef5e100f3f38a6d4de93", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 5858, "upload_time": "2020-03-18T07:20:41", "upload_time_iso_8601": "2020-03-18T07:20:41.315085Z", "url": "https://files.pythonhosted.org/packages/f8/98/4aede5c5e375e2d14c93401a1edd0cc05331041749abd923191a1ff52f1a/pytest_responsemock-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4316bf9bbd97f6267e5edb91a71b79ea", "sha256": "c3737658a1c0a5058047557e6c8cf54e5abd6c889fcd9d7759a08e416f108cae"}, "downloads": -1, "filename": "pytest-responsemock-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4316bf9bbd97f6267e5edb91a71b79ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5233, "upload_time": "2020-03-18T07:20:39", "upload_time_iso_8601": "2020-03-18T07:20:39.279531Z", "url": "https://files.pythonhosted.org/packages/f7/0e/0941b16bc6ba5a233b5398c7d30373eece09e7041ba6ce92dbdc568eeaf1/pytest-responsemock-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2e5796d43f4173b8d4d975d851da6b31", "sha256": "90a1b7df454e11fdbbbff99fe67245e988974186e9ce7ac621f418bb6d5b3c8c"}, "downloads": -1, "filename": "pytest_responsemock-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2e5796d43f4173b8d4d975d851da6b31", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 6186, "upload_time": "2020-03-31T09:47:39", "upload_time_iso_8601": "2020-03-31T09:47:39.002622Z", "url": "https://files.pythonhosted.org/packages/f2/89/d65ceb0498ddd395786eab1e4cdf9442060b4805301d88d926f7b82feb76/pytest_responsemock-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "feae4c0fe788b2d0600b2a021be2b01e", "sha256": "c7583d7685f8795da2dd82181bed71b628b41cc09d23e4d7e442d766610621cb"}, "downloads": -1, "filename": "pytest-responsemock-0.2.0.tar.gz", "has_sig": false, "md5_digest": "feae4c0fe788b2d0600b2a021be2b01e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5750, "upload_time": "2020-03-31T09:47:36", "upload_time_iso_8601": "2020-03-31T09:47:36.869099Z", "url": "https://files.pythonhosted.org/packages/d6/d5/029414f68e70bfbf56fe9e7ac0a4c15a3b7106d6de55623bf999f6ece1af/pytest-responsemock-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2e5796d43f4173b8d4d975d851da6b31", "sha256": "90a1b7df454e11fdbbbff99fe67245e988974186e9ce7ac621f418bb6d5b3c8c"}, "downloads": -1, "filename": "pytest_responsemock-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2e5796d43f4173b8d4d975d851da6b31", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 6186, "upload_time": "2020-03-31T09:47:39", "upload_time_iso_8601": "2020-03-31T09:47:39.002622Z", "url": "https://files.pythonhosted.org/packages/f2/89/d65ceb0498ddd395786eab1e4cdf9442060b4805301d88d926f7b82feb76/pytest_responsemock-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "feae4c0fe788b2d0600b2a021be2b01e", "sha256": "c7583d7685f8795da2dd82181bed71b628b41cc09d23e4d7e442d766610621cb"}, "downloads": -1, "filename": "pytest-responsemock-0.2.0.tar.gz", "has_sig": false, "md5_digest": "feae4c0fe788b2d0600b2a021be2b01e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5750, "upload_time": "2020-03-31T09:47:36", "upload_time_iso_8601": "2020-03-31T09:47:36.869099Z", "url": "https://files.pythonhosted.org/packages/d6/d5/029414f68e70bfbf56fe9e7ac0a4c15a3b7106d6de55623bf999f6ece1af/pytest-responsemock-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:46 2020"}