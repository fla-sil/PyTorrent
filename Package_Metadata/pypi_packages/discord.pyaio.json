{"info": {"author": "org. from Rapptz", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "# discord.py\n\n[![PyPI](https://img.shields.io/pypi/v/discord.py.svg)](https://pypi.python.org/pypi/discord.py/)\n[![PyPI](https://img.shields.io/pypi/pyversions/discord.py.svg)](https://pypi.python.org/pypi/discord.py/)\n\ndiscord.py is an API wrapper for Discord written in Python.\n\nThis was written to allow easier writing of bots or chat logs. Make sure to familiarise yourself with the API using the [documentation][doc].\n\n[doc]: http://discordpy.rtfd.org/en/latest\n\n### Breaking Changes\n\nThe discord API is constantly changing and the wrapper API is as well. There will be no effort to keep backwards compatibility in versions before `v1.0.0`.\n\nI recommend that you follow the discussion in the [unofficial Discord API discord channel][ch] and update your installation periodically. I will attempt to make note of breaking changes in the API channel so make sure to subscribe to library news by typing `?sub news` in the channel.\n\n[ch]: https://discord.gg/0SBTUU1wZTUzBx2q\n\n## Installing\n\nTo install the library without full voice support, you can just run the following command:\n\n```\npython3 -m pip install -U discord.py\n```\n\nOtherwise to get voice support you should run the following command:\n\n```\npython3 -m pip install -U discord.py[voice]\n```\n\nTo install the development version, do the following:\n\n```\npython3 -m pip install -U https://github.com/Rapptz/discord.py/archive/master.zip#egg=discord.py[voice]\n```\n\nor the more long winded from cloned source:\n\n```\n$ git clone https://github.com/Rapptz/discord.py\n$ cd discord.py\n$ python3 -m pip install -U .[voice]\n```\n\nPlease note that on Linux installing voice you must install the following packages via your favourite package manager (e.g. `apt`, `yum`, etc) before running the above command:\n\n- libffi-dev (or `libffi-devel` on some systems)\n- python<version>-dev (e.g. `python3.5-dev` for Python 3.5)\n\n## Quick Example\n\n```py\nimport discord\nimport asyncio\n\nclient = discord.Client()\n\n@client.event\nasync def on_ready():\n    print('Logged in as')\n    print(client.user.name)\n    print(client.user.id)\n    print('------')\n\n@client.event\nasync def on_message(message):\n    if message.content.startswith('!test'):\n        counter = 0\n        tmp = await client.send_message(message.channel, 'Calculating messages...')\n        async for log in client.logs_from(message.channel, limit=100):\n            if log.author == message.author:\n                counter += 1\n\n        await client.edit_message(tmp, 'You have {} messages.'.format(counter))\n    elif message.content.startswith('!sleep'):\n        await asyncio.sleep(5)\n        await client.send_message(message.channel, 'Done sleeping')\n\nclient.run('token')\n```\n\nNote that in Python 3.4 you use `@asyncio.coroutine` instead of `async def` and `yield from` instead of `await`.\n\nYou can find examples in the examples directory.\n\n## Requirements\n\n- Python 3.4.2+\n- `aiohttp` library\n- `websockets` library\n- `PyNaCl` library (optional, for voice only)\n    - On Linux systems this requires the `libffi` library. You can install in\n      debian based systems by doing `sudo apt-get install libffi-dev`.\n\nUsually `pip` will handle these for you.\n\n## Related Projects\n\n- [discord.js](https://github.com/discord-js/discord.js)\n- [discord.io](https://github.com/izy521/discord.io)\n- [Discord.NET](https://github.com/RogueException/Discord.Net)\n- [DiscordSharp](https://github.com/Luigifan/DiscordSharp)\n- [Discord4J](https://github.com/knobody/Discord4J)\n- [discordrb](https://github.com/meew0/discordrb)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Rapptz/discord.py", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "discord.pyaio", "package_url": "https://pypi.org/project/discord.pyaio/", "platform": "", "project_url": "https://pypi.org/project/discord.pyaio/", "project_urls": {"Homepage": "https://github.com/Rapptz/discord.py"}, "release_url": "https://pypi.org/project/discord.pyaio/0.16.12/", "requires_dist": ["aiohttp (>=1.0.0,<3.1.0)", "websockets (<4.0,>=3.1)", "PyNaCl (==1.0.1); extra == 'voice'"], "requires_python": "", "summary": "A python wrapper for the Discord API", "version": "0.16.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            # discord.py<br><br>[![PyPI](https://img.shields.io/pypi/v/discord.py.svg)](https://pypi.python.org/pypi/discord.py/)<br>[![PyPI](https://img.shields.io/pypi/pyversions/discord.py.svg)](https://pypi.python.org/pypi/discord.py/)<br><br>discord.py is an API wrapper for Discord written in Python.<br><br>This was written to allow easier writing of bots or chat logs. Make sure to familiarise yourself with the API using the [documentation][doc].<br><br>[doc]: http://discordpy.rtfd.org/en/latest<br><br>### Breaking Changes<br><br>The discord API is constantly changing and the wrapper API is as well. There will be no effort to keep backwards compatibility in versions before `v1.0.0`.<br><br>I recommend that you follow the discussion in the [unofficial Discord API discord channel][ch] and update your installation periodically. I will attempt to make note of breaking changes in the API channel so make sure to subscribe to library news by typing `?sub news` in the channel.<br><br>[ch]: https://discord.gg/0SBTUU1wZTUzBx2q<br><br>## Installing<br><br>To install the library without full voice support, you can just run the following command:<br><br>```<br>python3 -m pip install -U discord.py<br>```<br><br>Otherwise to get voice support you should run the following command:<br><br>```<br>python3 -m pip install -U discord.py[voice]<br>```<br><br>To install the development version, do the following:<br><br>```<br>python3 -m pip install -U https://github.com/Rapptz/discord.py/archive/master.zip#egg=discord.py[voice]<br>```<br><br>or the more long winded from cloned source:<br><br>```<br>$ git clone https://github.com/Rapptz/discord.py<br>$ cd discord.py<br>$ python3 -m pip install -U .[voice]<br>```<br><br>Please note that on Linux installing voice you must install the following packages via your favourite package manager (e.g. `apt`, `yum`, etc) before running the above command:<br><br>- libffi-dev (or `libffi-devel` on some systems)<br>- python&lt;version&gt;-dev (e.g. `python3.5-dev` for Python 3.5)<br><br>## Quick Example<br><br>```py<br>import discord<br>import asyncio<br><br>client = discord.Client()<br><br>@client.event<br>async def on_ready():<br>    print('Logged in as')<br>    print(client.user.name)<br>    print(client.user.id)<br>    print('------')<br><br>@client.event<br>async def on_message(message):<br>    if message.content.startswith('!test'):<br>        counter = 0<br>        tmp = await client.send_message(message.channel, 'Calculating messages...')<br>        async for log in client.logs_from(message.channel, limit=100):<br>            if log.author == message.author:<br>                counter += 1<br><br>        await client.edit_message(tmp, 'You have {} messages.'.format(counter))<br>    elif message.content.startswith('!sleep'):<br>        await asyncio.sleep(5)<br>        await client.send_message(message.channel, 'Done sleeping')<br><br>client.run('token')<br>```<br><br>Note that in Python 3.4 you use `@asyncio.coroutine` instead of `async def` and `yield from` instead of `await`.<br><br>You can find examples in the examples directory.<br><br>## Requirements<br><br>- Python 3.4.2+<br>- `aiohttp` library<br>- `websockets` library<br>- `PyNaCl` library (optional, for voice only)<br>    - On Linux systems this requires the `libffi` library. You can install in<br>      debian based systems by doing `sudo apt-get install libffi-dev`.<br><br>Usually `pip` will handle these for you.<br><br>## Related Projects<br><br>- [discord.js](https://github.com/discord-js/discord.js)<br>- [discord.io](https://github.com/izy521/discord.io)<br>- [Discord.NET](https://github.com/RogueException/Discord.Net)<br>- [DiscordSharp](https://github.com/Luigifan/DiscordSharp)<br>- [Discord4J](https://github.com/knobody/Discord4J)<br>- [discordrb](https://github.com/meew0/discordrb)<br><br><br>\n          </div>"}, "last_serial": 3955593, "releases": {"0.16.12": [{"comment_text": "", "digests": {"md5": "ac96a3acfc9df721052fa942d33853d0", "sha256": "5a68870f2f7bccb0674038e93a02f2bcafda2d0a9f841b5d01a00dd06cba94b5"}, "downloads": -1, "filename": "discord.pyaio-0.16.12-py3-none-any.whl", "has_sig": false, "md5_digest": "ac96a3acfc9df721052fa942d33853d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 457421, "upload_time": "2018-06-12T22:12:30", "upload_time_iso_8601": "2018-06-12T22:12:30.290547Z", "url": "https://files.pythonhosted.org/packages/67/27/b7a4b4bc7a85a1cd74351c956b28f1195c4f42598782164ad0909749919f/discord.pyaio-0.16.12-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ac96a3acfc9df721052fa942d33853d0", "sha256": "5a68870f2f7bccb0674038e93a02f2bcafda2d0a9f841b5d01a00dd06cba94b5"}, "downloads": -1, "filename": "discord.pyaio-0.16.12-py3-none-any.whl", "has_sig": false, "md5_digest": "ac96a3acfc9df721052fa942d33853d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 457421, "upload_time": "2018-06-12T22:12:30", "upload_time_iso_8601": "2018-06-12T22:12:30.290547Z", "url": "https://files.pythonhosted.org/packages/67/27/b7a4b4bc7a85a1cd74351c956b28f1195c4f42598782164ad0909749919f/discord.pyaio-0.16.12-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:38:12 2020"}