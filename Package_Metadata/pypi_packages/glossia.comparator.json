{"info": {"author": "Phil Weir (NUMA Engineering Services Ltd.)", "author_email": "phil.weir@numa.ie", "bugtrack_url": null, "classifiers": [], "description": "Glossia\n=======\n\nGo-Smart Simulation Architecture (aka. GSSA)\n--------------------------------------------\n\nGlossia is a standalone set of tools for simulation orchestration, allowing remote control of\ncomputational numerics software in Docker containers. It is administrated via WAMP and\nsimulations are configured using [GSSA-XML](reference/gssa-xml.rst), a conceptual description\nformat facilitating easy interchange of physical model components around a numerical model.\n\nThe framework is used to provide a simulation backend for the [Go-Smart](http://smart-mict.eu/)\nweb-based Minimally Invasive Cancer Treatment (MICT) platform. Using this technology, researchers\nand technicians can dynamically alter simulation strategies and equipment/physical parameters\nthrough the web-interface.\n\nWhile existing technologies allow hypermodel modification through\ntools such as [Apache Taverna](http://incubator.apache.org/projects/taverna.html), Go-Smart, through\nGlossia, is unusual in that it provides interactive support for collaborative simulation at a\nhypomodel level. At present, this is tested within a small number of frameworks (corresponding\nto container images) including Python/Numpy/[FEniCS](https://fenicsproject.org) and\n[Elmer](https://www.csc.fi/web/elmer).\n\n- **Primary authors** : [NUMA Engineering Services Ltd](http://www.numa.ie>) (NUMA), Dundalk, Ireland\n- **Project website** : [http://www.gosmart-project.eu/](http://www.gosmart-project.eu/)\n\nThis project is co-funded by the European Commission under grant agreement no. 600641.\n\nDocumentation\n-------------\n\nDocumentation for this component is available at\n<https://go-smart.github.io/gssa>\n\nInstallation\n------------\n\nCMake installation is recommended from an out-of-source build directory.\n\nUsage\n-----\n\nThe simulation server (GSSA) may be launched by the command\n\n``` {.sourceCode .sh}\ncrossbar --debug start --cbdir path/to/directory(web)[default gssf-release/web]\ngo-smart-simulation-server --host HOSTADDRESS/localhost --websocket-port PORTNUMBER\ngo-smart-simulation-client --gssa-file XMLFILE --websocket-port PORTNUMBER --host HOSTADDRESS/localhost --definitions path/to/file.py --skip-clean --output Lesion.vtp\n```\n\nAdding --help will show documentation of command line arguments. You\nshould start Crossbar.io in the gssf/web directory of the build folder\nbefore launching this script. Ensure that the configuration in the web\ndirectory matches the port and host to which go-smart-simulation-server\nwill connect for WAMP interaction.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://gosmart-project.eu/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "glossia.comparator", "package_url": "https://pypi.org/project/glossia.comparator/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/glossia.comparator/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://gosmart-project.eu/"}, "release_url": "https://pypi.org/project/glossia.comparator/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "Go-Smart Simulation Architecture XML interpretation", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"go-smart-simulation-architecture-aka-gssa\">\n<h2>Go-Smart Simulation Architecture (aka. GSSA)</h2>\n<p>Glossia is a standalone set of tools for simulation orchestration, allowing remote control of\ncomputational numerics software in Docker containers. It is administrated via WAMP and\nsimulations are configured using [GSSA-XML](reference/gssa-xml.rst), a conceptual description\nformat facilitating easy interchange of physical model components around a numerical model.</p>\n<p>The framework is used to provide a simulation backend for the [Go-Smart](<a href=\"http://smart-mict.eu/\" rel=\"nofollow\">http://smart-mict.eu/</a>)\nweb-based Minimally Invasive Cancer Treatment (MICT) platform. Using this technology, researchers\nand technicians can dynamically alter simulation strategies and equipment/physical parameters\nthrough the web-interface.</p>\n<p>While existing technologies allow hypermodel modification through\ntools such as [Apache Taverna](<a href=\"http://incubator.apache.org/projects/taverna.html\" rel=\"nofollow\">http://incubator.apache.org/projects/taverna.html</a>), Go-Smart, through\nGlossia, is unusual in that it provides interactive support for collaborative simulation at a\nhypomodel level. At present, this is tested within a small number of frameworks (corresponding\nto container images) including Python/Numpy/[FEniCS](<a href=\"https://fenicsproject.org\" rel=\"nofollow\">https://fenicsproject.org</a>) and\n[Elmer](<a href=\"https://www.csc.fi/web/elmer\" rel=\"nofollow\">https://www.csc.fi/web/elmer</a>).</p>\n<ul>\n<li><strong>Primary authors</strong> : [NUMA Engineering Services Ltd](<a href=\"http://www.numa.ie\" rel=\"nofollow\">http://www.numa.ie</a>&gt;) (NUMA), Dundalk, Ireland</li>\n<li><strong>Project website</strong> : [<a href=\"http://www.gosmart-project.eu/%5D(http://www.gosmart-project.eu/\" rel=\"nofollow\">http://www.gosmart-project.eu/](http://www.gosmart-project.eu/</a>)</li>\n</ul>\n<p>This project is co-funded by the European Commission under grant agreement no. 600641.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Documentation for this component is available at\n&lt;<a href=\"https://go-smart.github.io/gssa\" rel=\"nofollow\">https://go-smart.github.io/gssa</a>&gt;</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>CMake installation is recommended from an out-of-source build directory.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The simulation server (GSSA) may be launched by the command</p>\n<p><tt>` {.sourceCode .sh}\ncrossbar <span class=\"pre\">--debug</span> start <span class=\"pre\">--cbdir</span> <span class=\"pre\">path/to/directory(web)[default</span> <span class=\"pre\">gssf-release/web]</span>\n<span class=\"pre\">go-smart-simulation-server</span> <span class=\"pre\">--host</span> HOSTADDRESS/localhost <span class=\"pre\">--websocket-port</span> PORTNUMBER\n<span class=\"pre\">go-smart-simulation-client</span> <span class=\"pre\">--gssa-file</span> XMLFILE <span class=\"pre\">--websocket-port</span> PORTNUMBER <span class=\"pre\">--host</span> HOSTADDRESS/localhost <span class=\"pre\">--definitions</span> path/to/file.py <span class=\"pre\">--skip-clean</span> <span class=\"pre\">--output</span> Lesion.vtp\n`</tt></p>\n<p>Adding \u2013help will show documentation of command line arguments. You\nshould start Crossbar.io in the gssf/web directory of the build folder\nbefore launching this script. Ensure that the configuration in the web\ndirectory matches the port and host to which go-smart-simulation-server\nwill connect for WAMP interaction.</p>\n</div>\n\n          </div>"}, "last_serial": 2082930, "releases": {"0.1": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "c34bfb5543450c5e2499eebcb7ccf9a4", "sha256": "f86b57768c3a6647a2343744f394dd33978a5e0784598b5fb76c5048697d3985"}, "downloads": -1, "filename": "glossia.comparator-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c34bfb5543450c5e2499eebcb7ccf9a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8962, "upload_time": "2016-04-19T11:33:54", "upload_time_iso_8601": "2016-04-19T11:33:54.398364Z", "url": "https://files.pythonhosted.org/packages/16/76/915fa6fd1e5606379cdfe68490bcef0c5f8490d9ced650f44f8a01a7ab7c/glossia.comparator-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a0cf791fda56dc159c9bee13f602523c", "sha256": "aa8936e37879231830b9177600dd802c805224b0b93743396c194110753990a2"}, "downloads": -1, "filename": "glossia.comparator-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a0cf791fda56dc159c9bee13f602523c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9190, "upload_time": "2016-04-25T15:12:06", "upload_time_iso_8601": "2016-04-25T15:12:06.148432Z", "url": "https://files.pythonhosted.org/packages/d0/f2/b20bc559b796bb3347a74104ab574b4dbe2a266528689a41153b3373b99d/glossia.comparator-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a0cf791fda56dc159c9bee13f602523c", "sha256": "aa8936e37879231830b9177600dd802c805224b0b93743396c194110753990a2"}, "downloads": -1, "filename": "glossia.comparator-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a0cf791fda56dc159c9bee13f602523c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9190, "upload_time": "2016-04-25T15:12:06", "upload_time_iso_8601": "2016-04-25T15:12:06.148432Z", "url": "https://files.pythonhosted.org/packages/d0/f2/b20bc559b796bb3347a74104ab574b4dbe2a266528689a41153b3373b99d/glossia.comparator-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:30 2020"}