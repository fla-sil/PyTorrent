{"info": {"author": "Kolijn Wolfaardt", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Artistic Software", "Topic :: Multimedia :: Graphics :: 3D Modeling"], "description": "# Procedural Tree Generation\n\nThis script generates semi-realistic trees. It is based on the algorithm described in [this blog](http://www.jgallant.com/procedurally-generating-trees-with-space-colonization-algorithm-in-xna/). To see it in action, run the runner.py script in the src folder.\n\nAt the moment the script can generate the branches, but no leaves are generated as yet. The tree can be saved as an image or as a 3d object\n\n\n# Examples\n\n<img src=\"https://github.com/KolijnWolfaardt/TreeGen/raw/master/images/tree1.png\" width=\"480\" alt=\"Demo Tree 1\">\n<img src=\"https://github.com/KolijnWolfaardt/TreeGen/raw/master/images/tree2.png\" width=\"480\" alt=\"Demo Tree 2\">\n<img src=\"https://github.com/KolijnWolfaardt/TreeGen/raw/master/images/tree_gif_1.gif\" width=\"480\" alt=\"Rotating Tree\">\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/KolijnWolfaardt/GenProcTrees", "keywords": "procedural generation tree", "license": "", "maintainer": "", "maintainer_email": "", "name": "GenProcTrees", "package_url": "https://pypi.org/project/GenProcTrees/", "platform": "", "project_url": "https://pypi.org/project/GenProcTrees/", "project_urls": {"Homepage": "https://github.com/KolijnWolfaardt/GenProcTrees"}, "release_url": "https://pypi.org/project/GenProcTrees/0.0.1.dev1/", "requires_dist": ["numpy", "scipy", "Pillow"], "requires_python": "", "summary": "Procedurally generate semi-realistic trees", "version": "0.0.1.dev1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Procedural Tree Generation</h1>\n<p>This script generates semi-realistic trees. It is based on the algorithm described in <a href=\"http://www.jgallant.com/procedurally-generating-trees-with-space-colonization-algorithm-in-xna/\" rel=\"nofollow\">this blog</a>. To see it in action, run the runner.py script in the src folder.</p>\n<p>At the moment the script can generate the branches, but no leaves are generated as yet. The tree can be saved as an image or as a 3d object</p>\n<h1>Examples</h1>\n<img alt=\"Demo Tree 1\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/574ba66d3a780d77f2cbbaf325ec1ea4a079fad5/68747470733a2f2f6769746875622e636f6d2f4b6f6c696a6e576f6c6661617264742f5472656547656e2f7261772f6d61737465722f696d616765732f74726565312e706e67\" width=\"480\">\n<img alt=\"Demo Tree 2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/55ca4554a542b4fdf6800e85a37d8e18b833a906/68747470733a2f2f6769746875622e636f6d2f4b6f6c696a6e576f6c6661617264742f5472656547656e2f7261772f6d61737465722f696d616765732f74726565322e706e67\" width=\"480\">\n<img alt=\"Rotating Tree\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c5e79329c3b611d49eba942405e2c5ae2081cb1f/68747470733a2f2f6769746875622e636f6d2f4b6f6c696a6e576f6c6661617264742f5472656547656e2f7261772f6d61737465722f696d616765732f747265655f6769665f312e676966\" width=\"480\">\n\n          </div>"}, "last_serial": 3788934, "releases": {"0.0.1.dev1": [{"comment_text": "", "digests": {"md5": "c8117f24bcb59c0389ecf8b5ce72e417", "sha256": "394f03b3ab32a37d6ff59f290d98d69ea0e7e91f534cac15c457faaf81c41085"}, "downloads": -1, "filename": "GenProcTrees-0.0.1.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "c8117f24bcb59c0389ecf8b5ce72e417", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10033, "upload_time": "2018-04-22T13:25:56", "upload_time_iso_8601": "2018-04-22T13:25:56.881529Z", "url": "https://files.pythonhosted.org/packages/c7/19/eb0408397046a11c52f34917c7b020766b2169e5d9102e28da0a70eb0a6f/GenProcTrees-0.0.1.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4181b931494fdaedb3f964c6e9cc4bc5", "sha256": "75159052c586244e36e310667367bac3f4885a081fe0eafe904f96ff6e629ac6"}, "downloads": -1, "filename": "GenProcTrees-0.0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "4181b931494fdaedb3f964c6e9cc4bc5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7593, "upload_time": "2018-04-22T13:25:58", "upload_time_iso_8601": "2018-04-22T13:25:58.532016Z", "url": "https://files.pythonhosted.org/packages/02/dc/f105a610496c260e09cb778e9fa8fa28c91b3fa896edc9cce21e88de0d84/GenProcTrees-0.0.1.dev1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c8117f24bcb59c0389ecf8b5ce72e417", "sha256": "394f03b3ab32a37d6ff59f290d98d69ea0e7e91f534cac15c457faaf81c41085"}, "downloads": -1, "filename": "GenProcTrees-0.0.1.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "c8117f24bcb59c0389ecf8b5ce72e417", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10033, "upload_time": "2018-04-22T13:25:56", "upload_time_iso_8601": "2018-04-22T13:25:56.881529Z", "url": "https://files.pythonhosted.org/packages/c7/19/eb0408397046a11c52f34917c7b020766b2169e5d9102e28da0a70eb0a6f/GenProcTrees-0.0.1.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4181b931494fdaedb3f964c6e9cc4bc5", "sha256": "75159052c586244e36e310667367bac3f4885a081fe0eafe904f96ff6e629ac6"}, "downloads": -1, "filename": "GenProcTrees-0.0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "4181b931494fdaedb3f964c6e9cc4bc5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7593, "upload_time": "2018-04-22T13:25:58", "upload_time_iso_8601": "2018-04-22T13:25:58.532016Z", "url": "https://files.pythonhosted.org/packages/02/dc/f105a610496c260e09cb778e9fa8fa28c91b3fa896edc9cce21e88de0d84/GenProcTrees-0.0.1.dev1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:14 2020"}