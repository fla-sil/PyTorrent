{"info": {"author": "Takahide Nojima", "author_email": "nozzy123nozzy@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: Unix", "Programming Language :: Python :: 3", "Topic :: Software Development :: Debuggers"], "description": "Overview\n========\n\nTrace function call , and generate call tree graph which is sutable for\nusing vim.\n\nUsing this module, understanding large python module is more easier.\n\nInstalation\n===========\n\n::\n\n        pip install tinycalltracer\n\nUsage\n=====\n\nSimply add following code in the file defined \u2018**main**\u2019,\n\n::\n\n   from tinycalltrace import TinyCallTrace\n\n   if __name__ == '__main__':\n            TinyCallTrace()\n\nAnd run your scripts, call tree graphs generate in trace-0xXXXXXXX.txt\nfile in your current directory. Thease files are call tree graph of each\nthreads.\n\nThis call tree graphs are sutable for examination using vim fold mode.\nYou can open thease file with vim, and simply type\n\n::\n\n   :set foldmethod=marker\n\nthen you can see folded call tree graph. It is so helpful to understand\ncall graph, easy to search specified function call/caller.\n\nAnd also with vim \u2018goto file command\u2019 on a line of call tree graph, you\ncan easily examin source code of call/caller.\n\nEnjoy!\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nozzy123nozzy/tinycalltrace", "keywords": "call tree tracer vim fold", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tinycalltrace", "package_url": "https://pypi.org/project/tinycalltrace/", "platform": "", "project_url": "https://pypi.org/project/tinycalltrace/", "project_urls": {"Homepage": "https://github.com/nozzy123nozzy/tinycalltrace"}, "release_url": "https://pypi.org/project/tinycalltrace/1.0.2/", "requires_dist": null, "requires_python": ">3", "summary": "Simple call tree graph generator suitable for viewing with vim fold", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>Trace function call , and generate call tree graph which is sutable for\nusing vim.</p>\n<p>Using this module, understanding large python module is more easier.</p>\n</div>\n<div id=\"instalation\">\n<h2>Instalation</h2>\n<pre>pip install tinycalltracer\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Simply add following code in the file defined \u2018<strong>main</strong>\u2019,</p>\n<pre>from tinycalltrace import TinyCallTrace\n\nif __name__ == '__main__':\n         TinyCallTrace()\n</pre>\n<p>And run your scripts, call tree graphs generate in trace-0xXXXXXXX.txt\nfile in your current directory. Thease files are call tree graph of each\nthreads.</p>\n<p>This call tree graphs are sutable for examination using vim fold mode.\nYou can open thease file with vim, and simply type</p>\n<pre>:set foldmethod=marker\n</pre>\n<p>then you can see folded call tree graph. It is so helpful to understand\ncall graph, easy to search specified function call/caller.</p>\n<p>And also with vim \u2018goto file command\u2019 on a line of call tree graph, you\ncan easily examin source code of call/caller.</p>\n<p>Enjoy!</p>\n</div>\n\n          </div>"}, "last_serial": 3969049, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "229b0c26e22d88b2843751ba3eeb8327", "sha256": "cd7cfcc4e302509123f5e5d1de924d0666451eb3f792972ddfd69d898139c9a6"}, "downloads": -1, "filename": "tinycalltrace-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "229b0c26e22d88b2843751ba3eeb8327", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3", "size": 5458, "upload_time": "2018-06-16T07:21:16", "upload_time_iso_8601": "2018-06-16T07:21:16.656161Z", "url": "https://files.pythonhosted.org/packages/3b/85/c1202e5d9d3e226c0e5c032d10a0cc85fe40a94678ac9e99c89cf5fc23df/tinycalltrace-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eea196111ea0035a1ef9ffa7f075ed5b", "sha256": "79d6cb700a5e531039f81a1a05ad83a26657ea4e6c8746dd3f4cfa1cbabcce15"}, "downloads": -1, "filename": "tinycalltrace-1.0.1.tar.gz", "has_sig": false, "md5_digest": "eea196111ea0035a1ef9ffa7f075ed5b", "packagetype": "sdist", "python_version": "source", "requires_python": ">3", "size": 3448, "upload_time": "2018-06-16T07:21:17", "upload_time_iso_8601": "2018-06-16T07:21:17.921122Z", "url": "https://files.pythonhosted.org/packages/f1/48/d4ff8ff4e9c9301cb115fe58609d8abc367b039b47d63846ad64b2eaaa43/tinycalltrace-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "462b62956efa6457ee02a993fdc6e588", "sha256": "a0a62898c40a62bf7591f48bfe2135a492ec981d6b0801ce92a8b43c70cbf143"}, "downloads": -1, "filename": "tinycalltrace-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "462b62956efa6457ee02a993fdc6e588", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3", "size": 5461, "upload_time": "2018-06-16T07:49:59", "upload_time_iso_8601": "2018-06-16T07:49:59.853676Z", "url": "https://files.pythonhosted.org/packages/12/fa/fb9b604a1e36a999e9bd46fea16692ae61eef1ba9ca83cedd2033eedde57/tinycalltrace-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26e47b923e88ba83beb4f8e7d98ab59c", "sha256": "fa2e48c7f82a07fcd237948cb97f3dd523a8893a1b68415db35dd82861adacb1"}, "downloads": -1, "filename": "tinycalltrace-1.0.2.tar.gz", "has_sig": false, "md5_digest": "26e47b923e88ba83beb4f8e7d98ab59c", "packagetype": "sdist", "python_version": "source", "requires_python": ">3", "size": 3469, "upload_time": "2018-06-16T07:50:01", "upload_time_iso_8601": "2018-06-16T07:50:01.031929Z", "url": "https://files.pythonhosted.org/packages/a8/4d/80bb4a8a79f5303b32323ce424e6cd5475c218416fdb9796a2881a29a517/tinycalltrace-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "462b62956efa6457ee02a993fdc6e588", "sha256": "a0a62898c40a62bf7591f48bfe2135a492ec981d6b0801ce92a8b43c70cbf143"}, "downloads": -1, "filename": "tinycalltrace-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "462b62956efa6457ee02a993fdc6e588", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3", "size": 5461, "upload_time": "2018-06-16T07:49:59", "upload_time_iso_8601": "2018-06-16T07:49:59.853676Z", "url": "https://files.pythonhosted.org/packages/12/fa/fb9b604a1e36a999e9bd46fea16692ae61eef1ba9ca83cedd2033eedde57/tinycalltrace-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26e47b923e88ba83beb4f8e7d98ab59c", "sha256": "fa2e48c7f82a07fcd237948cb97f3dd523a8893a1b68415db35dd82861adacb1"}, "downloads": -1, "filename": "tinycalltrace-1.0.2.tar.gz", "has_sig": false, "md5_digest": "26e47b923e88ba83beb4f8e7d98ab59c", "packagetype": "sdist", "python_version": "source", "requires_python": ">3", "size": 3469, "upload_time": "2018-06-16T07:50:01", "upload_time_iso_8601": "2018-06-16T07:50:01.031929Z", "url": "https://files.pythonhosted.org/packages/a8/4d/80bb4a8a79f5303b32323ce424e6cd5475c218416fdb9796a2881a29a517/tinycalltrace-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:53:07 2020"}