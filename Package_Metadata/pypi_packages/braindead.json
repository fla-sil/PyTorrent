{"info": {"author": "Olaf G\u00f3rski", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8"], "description": "# Braindead\nBraindead is a braindead simple static site generator for minimalists, that has support for markdown and code highlighting.\nI created this package simply to have a bit of fun and because I'm tired of bloated software.\n\nYou can read more about the idea behind it on [medium](https://medium.com/thirty3hq/how-i-created-my-blogging-system-in-less-than-100-lines-of-code-to-save-the-environment-dd848cc29c02) or [my blog](https://grski.pl/posts/python/creating-braindead.html)\n\nCan't we just have [simple software nowadays](https://tonsky.me/blog/disenchantment/) that does what it needs to do and nothing more?\nExisting solutions felt like they are too much for my needs. So I built this thing. It's still under active development.\n\nLive example: [grski.pl](https://grski.pl/)\n\nOne of my main ideals here is to create template that is as fast as it gets. Generated pages take around 10-15 KB in total.\nNo JavaScript used here, at least in the base template. Just css/html.\n\nYou are free to change that though by creating your own templates. More on that below.\n\nBenefits of simple approach:\n\n![Google PageSpeed Insights withh 100 score](https://imgur.com/7IwldRE.png)\n![requests made if loading this template](https://imgur.com/GmYcP08.png)\n \nDefault template scores 100/100 on Google PageSpeed Insights and has very fast load times.\n\nDefault template design looks like this:\n\n![Default template of braindead](https://imgur.com/oPdgdvW.png)\nIt's based on: [Kiss template](https://github.com/ribice), slightly modified - with minimized styles. In the future I'll probably slim them down even more.\n\nIt's also eco friendly - it uses less power by not being a bloatware. [CarbonReport of the demo](https://www.websitecarbon.com/website/grski-pl/)\n![Carbon report of the grski.pl blog](https://imgur.com/cfQJqQgl.png)\n# Installation\n```\npip install braindead\n```\n[PyPi page](https://pypi.org/project/braindead/)\n\n# Usage\nCreate `index.md` and run `braindead` that's it. You'll find your generated site in `dist` directory.\nIt can be empty or not - your choice. If you want index  to contain just the posts - leave it empty.\n\nThat's the minimal setup you need. That'll generate index.html for you, but well, it's not enough, right?\nMore robust structure you can use is:\n```bash\npages/\n  page.md\nposts/\n  post.md\nindex.md\npyproject.toml\n```\n\nThe url for generated html will be `{DIR_LOCATION}/{FILENAME}.html`,\n so url generated will be `{config.base_url}/{DIR_LOCATION}/{FILENAME}.html` in order to change that, add\n```markdown\nSlug: custom-location\n```\nTo your post/page header - then the location will be `{BASE_URL}/{SLUG}.html`\n\n## Example post/page structure:\n\n```markdown\nTitle: Title of the post or of the page \nDate: 2018-03-22\nAuthors: Olaf G\u00f3rski\nDescription: Description of the post/page. If not provided it'll default to first 140 chars of the content. \n\nCONTENT GOES HERE...\n```\n\nAll of the metadata used here will be available during given page rendering. You can add more keys and metadata if you'd like. \n\n## Config\n\nAll of the variables that are used to generate the page can be overwritten by creating `pyproject.toml` file, but it's not required to get started.\nExample of your `pyproject` `tool.braindead.site` section (these are also the defaults):\n\n```toml\n[tool.braindead.site]\nbase_url = \"\" # give full url ending with slash here - eg. if you host your blog on https://grski.pl/ enter it there.\nauthor = \"Olaf G\u00f3rski\"  # author/owner of the site <- will be appended to the title\ntitle = \"Site generated with braindead\"  # base title of the website\ndescription = \"Just a description of site generated in braindead\"  # description used in the meta tags\ncontent = \"\"  # this will display under heading\nname = \"braindeadsite\" # og tags\nlogo = \"logo_url\"  # url to the logo for og tags\nheading = \"Braindead Example\"  # heading at the top of the site\ngithub = \"https://github.com/grski\"  # link to your github\nlinkedin = \"https://linkedin.com/in/olafgorski\"  # link to your li\ncopy_text = \"Olaf G\u00f3rski\"  # copy text in the footer\ncopy_link = \"https://grski.pl\"  # and copy link of the footer\nlanguage = \"en\"  # default language set in the top level html lang property\n```\n\nNone of these are required. You can overwrite none, one or more. Your choice.\n\n# Code higlighting\nJust do\n<pre>\n```python\nYour code here\n```</pre>\n\n[List of languages supported by pygments can be found here.](https://pygments.org/languages/)\n\n# Creating your own templates\nTODO\n\n# Technology\nThis bases on \n[toml](https://github.com/uiri/toml), \n[markdown](https://github.com/Python-Markdown/markdown) and [jinja2](https://github.com/pallets/jinja).\n\nToml is used for configuration.\nMarkdown to render all the .md and .markdows into proper html.\nLastly jinja2 to add some contexts here and there.\n\nFormatting of the code is done using [black](https://github.com/psf/black), [isort](https://github.com/timothycrosley/isort).\n[flake8](https://gitlab.com/pycqa/flake8), [autoflake](https://github.com/myint/autoflake) and [bandit](https://github.com/PyCQA/bandit/) to check for potential vulns. \n\nVersioning is done with [bumpversion](https://github.com/peritus/bumpversion).\nPatch for merges to develop, minor for merged to master. Merge to master means release to pypi.\n\nAnd wonderful [poetry](https://github.com/python-poetry/poetry) as dependency manager. BTW pipenv should die.\n\nCode highligthing is done with [pygments](https://github.com/pygments/pygments).\n\nI use type hinting where it's possible.\n\nTo start developing you need to install poetry\n`pip install poetry==0.1.0` and then just `poetry install`. \n\n# Known make commands\n```bash\nflake\nisort\nisort-inplace\nbandit\nblack\nlinters\nbumpversion\nblack-inplace\nautoflake-inplace\nformat-inplace\n```\nMost important ones are `make linters` and `make format-inplace`. Before each commit it's required to run these checks.\n\n# License\nMIT\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://grski.pl/", "keywords": "ssg,static site generator,braindead", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "braindead", "package_url": "https://pypi.org/project/braindead/", "platform": "", "project_url": "https://pypi.org/project/braindead/", "project_urls": {"Documentation": "https://github.com/grski/braindead", "Homepage": "https://grski.pl/", "Repository": "https://github.com/grski/braindead"}, "release_url": "https://pypi.org/project/braindead/0.2.6/", "requires_dist": ["jinja2 (>=2.11.1,<3.0.0)", "markdown (>=3.2.1,<4.0.0)", "pygments (>=2.6.1,<3.0.0)", "toml (>=0.10.0,<0.11.0)"], "requires_python": ">=3.8,<4.0", "summary": "Braindead is a braindead simple static site generator for minimalists, that has support for markdown and code highlighting.", "version": "0.2.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Braindead</h1>\n<p>Braindead is a braindead simple static site generator for minimalists, that has support for markdown and code highlighting.\nI created this package simply to have a bit of fun and because I'm tired of bloated software.</p>\n<p>You can read more about the idea behind it on <a href=\"https://medium.com/thirty3hq/how-i-created-my-blogging-system-in-less-than-100-lines-of-code-to-save-the-environment-dd848cc29c02\" rel=\"nofollow\">medium</a> or <a href=\"https://grski.pl/posts/python/creating-braindead.html\" rel=\"nofollow\">my blog</a></p>\n<p>Can't we just have <a href=\"https://tonsky.me/blog/disenchantment/\" rel=\"nofollow\">simple software nowadays</a> that does what it needs to do and nothing more?\nExisting solutions felt like they are too much for my needs. So I built this thing. It's still under active development.</p>\n<p>Live example: <a href=\"https://grski.pl/\" rel=\"nofollow\">grski.pl</a></p>\n<p>One of my main ideals here is to create template that is as fast as it gets. Generated pages take around 10-15 KB in total.\nNo JavaScript used here, at least in the base template. Just css/html.</p>\n<p>You are free to change that though by creating your own templates. More on that below.</p>\n<p>Benefits of simple approach:</p>\n<p><img alt=\"Google PageSpeed Insights withh 100 score\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/377536883e4f09cfc00c1135936860f9515a79cd/68747470733a2f2f696d6775722e636f6d2f3749776c6452452e706e67\">\n<img alt=\"requests made if loading this template\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e11a8539be41515c7adddf0fc20f62c6441721b4/68747470733a2f2f696d6775722e636f6d2f476d59635030382e706e67\"></p>\n<p>Default template scores 100/100 on Google PageSpeed Insights and has very fast load times.</p>\n<p>Default template design looks like this:</p>\n<p><img alt=\"Default template of braindead\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/50f66b6dc8a2f2a156b9465f4965c91e5b736af6/68747470733a2f2f696d6775722e636f6d2f6f5064676476572e706e67\">\nIt's based on: <a href=\"https://github.com/ribice\" rel=\"nofollow\">Kiss template</a>, slightly modified - with minimized styles. In the future I'll probably slim them down even more.</p>\n<p>It's also eco friendly - it uses less power by not being a bloatware. <a href=\"https://www.websitecarbon.com/website/grski-pl/\" rel=\"nofollow\">CarbonReport of the demo</a>\n<img alt=\"Carbon report of the grski.pl blog\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/340cbb61cdfa15accf26ed50db347c3f511a178a/68747470733a2f2f696d6775722e636f6d2f6366514a7151676c2e706e67\"></p>\n<h1>Installation</h1>\n<pre><code>pip install braindead\n</code></pre>\n<p><a href=\"https://pypi.org/project/braindead/\" rel=\"nofollow\">PyPi page</a></p>\n<h1>Usage</h1>\n<p>Create <code>index.md</code> and run <code>braindead</code> that's it. You'll find your generated site in <code>dist</code> directory.\nIt can be empty or not - your choice. If you want index  to contain just the posts - leave it empty.</p>\n<p>That's the minimal setup you need. That'll generate index.html for you, but well, it's not enough, right?\nMore robust structure you can use is:</p>\n<pre>pages/\n  page.md\nposts/\n  post.md\nindex.md\npyproject.toml\n</pre>\n<p>The url for generated html will be <code>{DIR_LOCATION}/{FILENAME}.html</code>,\nso url generated will be <code>{config.base_url}/{DIR_LOCATION}/{FILENAME}.html</code> in order to change that, add</p>\n<pre>Slug: custom-location\n</pre>\n<p>To your post/page header - then the location will be <code>{BASE_URL}/{SLUG}.html</code></p>\n<h2>Example post/page structure:</h2>\n<pre>Title: Title of the post or of the page \nDate: 2018-03-22\nAuthors: Olaf G\u00f3rski\nDescription: Description of the post/page. If not provided it'll default to first 140 chars of the content. \n\nCONTENT GOES HERE...\n</pre>\n<p>All of the metadata used here will be available during given page rendering. You can add more keys and metadata if you'd like.</p>\n<h2>Config</h2>\n<p>All of the variables that are used to generate the page can be overwritten by creating <code>pyproject.toml</code> file, but it's not required to get started.\nExample of your <code>pyproject</code> <code>tool.braindead.site</code> section (these are also the defaults):</p>\n<pre><span class=\"k\">[tool.braindead.site]</span>\n<span class=\"n\">base_url</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span> <span class=\"c1\"># give full url ending with slash here - eg. if you host your blog on https://grski.pl/ enter it there.</span>\n<span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"s\">\"Olaf G\u00f3rski\"</span>  <span class=\"c1\"># author/owner of the site &lt;- will be appended to the title</span>\n<span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s\">\"Site generated with braindead\"</span>  <span class=\"c1\"># base title of the website</span>\n<span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"s\">\"Just a description of site generated in braindead\"</span>  <span class=\"c1\"># description used in the meta tags</span>\n<span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span>  <span class=\"c1\"># this will display under heading</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"braindeadsite\"</span> <span class=\"c1\"># og tags</span>\n<span class=\"n\">logo</span> <span class=\"o\">=</span> <span class=\"s\">\"logo_url\"</span>  <span class=\"c1\"># url to the logo for og tags</span>\n<span class=\"n\">heading</span> <span class=\"o\">=</span> <span class=\"s\">\"Braindead Example\"</span>  <span class=\"c1\"># heading at the top of the site</span>\n<span class=\"n\">github</span> <span class=\"o\">=</span> <span class=\"s\">\"https://github.com/grski\"</span>  <span class=\"c1\"># link to your github</span>\n<span class=\"n\">linkedin</span> <span class=\"o\">=</span> <span class=\"s\">\"https://linkedin.com/in/olafgorski\"</span>  <span class=\"c1\"># link to your li</span>\n<span class=\"n\">copy_text</span> <span class=\"o\">=</span> <span class=\"s\">\"Olaf G\u00f3rski\"</span>  <span class=\"c1\"># copy text in the footer</span>\n<span class=\"n\">copy_link</span> <span class=\"o\">=</span> <span class=\"s\">\"https://grski.pl\"</span>  <span class=\"c1\"># and copy link of the footer</span>\n<span class=\"n\">language</span> <span class=\"o\">=</span> <span class=\"s\">\"en\"</span>  <span class=\"c1\"># default language set in the top level html lang property</span>\n</pre>\n<p>None of these are required. You can overwrite none, one or more. Your choice.</p>\n<h1>Code higlighting</h1>\n<p>Just do</p>\n<pre>```python\nYour code here\n```</pre>\n<p><a href=\"https://pygments.org/languages/\" rel=\"nofollow\">List of languages supported by pygments can be found here.</a></p>\n<h1>Creating your own templates</h1>\n<p>TODO</p>\n<h1>Technology</h1>\n<p>This bases on\n<a href=\"https://github.com/uiri/toml\" rel=\"nofollow\">toml</a>,\n<a href=\"https://github.com/Python-Markdown/markdown\" rel=\"nofollow\">markdown</a> and <a href=\"https://github.com/pallets/jinja\" rel=\"nofollow\">jinja2</a>.</p>\n<p>Toml is used for configuration.\nMarkdown to render all the .md and .markdows into proper html.\nLastly jinja2 to add some contexts here and there.</p>\n<p>Formatting of the code is done using <a href=\"https://github.com/psf/black\" rel=\"nofollow\">black</a>, <a href=\"https://github.com/timothycrosley/isort\" rel=\"nofollow\">isort</a>.\n<a href=\"https://gitlab.com/pycqa/flake8\" rel=\"nofollow\">flake8</a>, <a href=\"https://github.com/myint/autoflake\" rel=\"nofollow\">autoflake</a> and <a href=\"https://github.com/PyCQA/bandit/\" rel=\"nofollow\">bandit</a> to check for potential vulns.</p>\n<p>Versioning is done with <a href=\"https://github.com/peritus/bumpversion\" rel=\"nofollow\">bumpversion</a>.\nPatch for merges to develop, minor for merged to master. Merge to master means release to pypi.</p>\n<p>And wonderful <a href=\"https://github.com/python-poetry/poetry\" rel=\"nofollow\">poetry</a> as dependency manager. BTW pipenv should die.</p>\n<p>Code highligthing is done with <a href=\"https://github.com/pygments/pygments\" rel=\"nofollow\">pygments</a>.</p>\n<p>I use type hinting where it's possible.</p>\n<p>To start developing you need to install poetry\n<code>pip install poetry==0.1.0</code> and then just <code>poetry install</code>.</p>\n<h1>Known make commands</h1>\n<pre>flake\nisort\nisort-inplace\nbandit\nblack\nlinters\nbumpversion\nblack-inplace\nautoflake-inplace\nformat-inplace\n</pre>\n<p>Most important ones are <code>make linters</code> and <code>make format-inplace</code>. Before each commit it's required to run these checks.</p>\n<h1>License</h1>\n<p>MIT</p>\n\n          </div>"}, "last_serial": 7040664, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "55bc5c8d803b0055b3dd6390bca590ac", "sha256": "e49c007c741b4c4ee9f34baaa8ed9988070fbf88f654e2c4f70eab4705bf568c"}, "downloads": -1, "filename": "braindead-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "55bc5c8d803b0055b3dd6390bca590ac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 35341, "upload_time": "2020-04-10T23:29:22", "upload_time_iso_8601": "2020-04-10T23:29:22.862021Z", "url": "https://files.pythonhosted.org/packages/76/59/5e12f4d5758a2e3cfe8f8042dc917c5b67d869654e1a8ee0dd00c7bd3383/braindead-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "393fea9aff413b6b5faf35f7c0a2e481", "sha256": "07505397e7c1cc4f1a09de1473b5c59fb51bff6781b9a974d7348e4c1d9da79a"}, "downloads": -1, "filename": "braindead-0.1.0.tar.gz", "has_sig": false, "md5_digest": "393fea9aff413b6b5faf35f7c0a2e481", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 31991, "upload_time": "2020-04-10T23:29:25", "upload_time_iso_8601": "2020-04-10T23:29:25.079633Z", "url": "https://files.pythonhosted.org/packages/3a/2d/b44db5017e510862516fb003cb2c46ba0c3316501a63fa742231dab5cd4e/braindead-0.1.0.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "90c8ea1c72b062293ae220556b3f6cf4", "sha256": "8e3bbab555f03c8c6b1b080af1ffa029a5d34426ac07cccc7cf9a8a97cca6aa9"}, "downloads": -1, "filename": "braindead-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "90c8ea1c72b062293ae220556b3f6cf4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 37579, "upload_time": "2020-04-11T18:35:35", "upload_time_iso_8601": "2020-04-11T18:35:35.578171Z", "url": "https://files.pythonhosted.org/packages/e3/f4/87cd3e8db684a1b049a56abf40bcbb338142e323a5481d26e81a8c03e8ef/braindead-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9974a94d4cf7696168bd279d89f7b995", "sha256": "6ca6d147705f9b48326def315a6f94c1b8bf3d89665812a00f75ae8e2a8df1fd"}, "downloads": -1, "filename": "braindead-0.1.3.tar.gz", "has_sig": false, "md5_digest": "9974a94d4cf7696168bd279d89f7b995", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 36910, "upload_time": "2020-04-11T18:35:36", "upload_time_iso_8601": "2020-04-11T18:35:36.370936Z", "url": "https://files.pythonhosted.org/packages/76/b6/6baf3adecef06ce92c25b4a119aeb6ba7d99104184c09f15d9a16eec2816/braindead-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "cb892247c247ed1686193be4dfb4af67", "sha256": "6e8bc66eb337d79242c2e25537511a25e3413aaa2eb7866deb8fabe104877466"}, "downloads": -1, "filename": "braindead-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "cb892247c247ed1686193be4dfb4af67", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 37579, "upload_time": "2020-04-11T20:09:49", "upload_time_iso_8601": "2020-04-11T20:09:49.200155Z", "url": "https://files.pythonhosted.org/packages/a3/11/3e1888de23a82fcb01707a0c90f20bceb62d704eff53ea85fbff49a50c1a/braindead-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9fd100501ad806208fbeaa0ce27206e6", "sha256": "94ca372699579a96db10cc06b3805910acf519accb8d7816bfc2640b27092375"}, "downloads": -1, "filename": "braindead-0.1.4.tar.gz", "has_sig": false, "md5_digest": "9fd100501ad806208fbeaa0ce27206e6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 36922, "upload_time": "2020-04-11T20:09:50", "upload_time_iso_8601": "2020-04-11T20:09:50.237019Z", "url": "https://files.pythonhosted.org/packages/67/ac/2ae799788193288446f8cc9baece45cf4b33d1672b7aa14e029aad457ff8/braindead-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "b6b5580793e3aa0c207b30a8ca53276b", "sha256": "1e71aecc98524706cbc3efb4657331b522313c469b01f2110b4ae1aa5846864b"}, "downloads": -1, "filename": "braindead-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "b6b5580793e3aa0c207b30a8ca53276b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 37615, "upload_time": "2020-04-11T21:23:37", "upload_time_iso_8601": "2020-04-11T21:23:37.758764Z", "url": "https://files.pythonhosted.org/packages/d7/88/88170246bbbf0684a79e618473c3c040b5d7d63e3367fbf3523315f8116a/braindead-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "25ccc5a32d9d2c5dc4ce7af89c1ced50", "sha256": "e9bfacaab44052edd69bdab15046da92961af551ca55dd1b98b0b2553f57f9bd"}, "downloads": -1, "filename": "braindead-0.1.5.tar.gz", "has_sig": false, "md5_digest": "25ccc5a32d9d2c5dc4ce7af89c1ced50", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 36971, "upload_time": "2020-04-11T21:23:38", "upload_time_iso_8601": "2020-04-11T21:23:38.445571Z", "url": "https://files.pythonhosted.org/packages/60/e8/5b562ccc8b34efb3c63318928af5e41a09a23991b8e518a2b85015caad33/braindead-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "3ad23571acd51ccecc9ff41bbf94aad9", "sha256": "00732f386c7fb525689101f53ab21ab2251cc28b2053a6fdcb94d9cfe86240b9"}, "downloads": -1, "filename": "braindead-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "3ad23571acd51ccecc9ff41bbf94aad9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 37629, "upload_time": "2020-04-12T11:45:54", "upload_time_iso_8601": "2020-04-12T11:45:54.601288Z", "url": "https://files.pythonhosted.org/packages/1c/5d/bb2a166a62c84c6ba7d31c2a01986c081efddaf995e2d737a329b0d39f78/braindead-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72817319766e20f96727f493a578315c", "sha256": "a9d36a7b4b94a2c7b8ca78bf1acc50e1fdc8796f9881c12cb19ea51cb278eb01"}, "downloads": -1, "filename": "braindead-0.1.6.tar.gz", "has_sig": false, "md5_digest": "72817319766e20f96727f493a578315c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 36994, "upload_time": "2020-04-12T11:45:55", "upload_time_iso_8601": "2020-04-12T11:45:55.606243Z", "url": "https://files.pythonhosted.org/packages/50/94/98b4903f8767fcea9b284522d8ab3b0d5a0e9522fe8b688705407c20bf35/braindead-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "c1f959e3db1c2830573b8df8484a9b65", "sha256": "21ba1c1f7985013b2db8c222d9c1376cc73941c3e3b0d6568a598a44f4512b74"}, "downloads": -1, "filename": "braindead-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "c1f959e3db1c2830573b8df8484a9b65", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 38029, "upload_time": "2020-04-12T14:42:00", "upload_time_iso_8601": "2020-04-12T14:42:00.117171Z", "url": "https://files.pythonhosted.org/packages/d2/f8/f462162e09033ebedc001c3a1e4a22d90c36c6a1955ff0eb2437e30b8608/braindead-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7bc1625980d501b3141f1ebad7ac5a5b", "sha256": "0b4bc9bbdd580ab6d924b3b48bbe6966ab63c171b81fe40407b2468938679ed1"}, "downloads": -1, "filename": "braindead-0.1.7.tar.gz", "has_sig": false, "md5_digest": "7bc1625980d501b3141f1ebad7ac5a5b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 37366, "upload_time": "2020-04-12T14:42:01", "upload_time_iso_8601": "2020-04-12T14:42:01.218440Z", "url": "https://files.pythonhosted.org/packages/4c/8a/0cbc8449537b4a871488b243670df4d88d636da0abb0abb1b8ed7a649302/braindead-0.1.7.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "97dbb679598fe4bc053ef5638dc514cc", "sha256": "627ed5cc2eba66f00bbafb0a4a78fe8aebb8a74f49acc3884a6378e6c48e0a4e"}, "downloads": -1, "filename": "braindead-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "97dbb679598fe4bc053ef5638dc514cc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 38229, "upload_time": "2020-04-15T13:58:39", "upload_time_iso_8601": "2020-04-15T13:58:39.544643Z", "url": "https://files.pythonhosted.org/packages/1e/ed/f4b33992621e86d5468c5c803a7dc531793a03db87cd67055d48644c8445/braindead-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "355f0e38497f4b64f1f4efcad1517c50", "sha256": "73142ac051d3a9f40c9378b673546613ec72ee5e58de4d4fda60b171cbd95b73"}, "downloads": -1, "filename": "braindead-0.2.0.tar.gz", "has_sig": false, "md5_digest": "355f0e38497f4b64f1f4efcad1517c50", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 37768, "upload_time": "2020-04-15T13:58:40", "upload_time_iso_8601": "2020-04-15T13:58:40.689261Z", "url": "https://files.pythonhosted.org/packages/9e/7a/54259ef023272a08f82a82bf426285670ad5994ce4b8e1addf558b8012ae/braindead-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "adfcfd88ff454b6735fec847bc322268", "sha256": "baa98d5b357ac4d09a59a279e2aa175fb318072d3f97f9bf83943b5801dec098"}, "downloads": -1, "filename": "braindead-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "adfcfd88ff454b6735fec847bc322268", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 38580, "upload_time": "2020-04-16T21:33:12", "upload_time_iso_8601": "2020-04-16T21:33:12.873481Z", "url": "https://files.pythonhosted.org/packages/de/7a/1713bc3de5052313e4c77083bdc476468a20b2a0a72de9b8b35eb51f2e68/braindead-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "32db1ae22e9cf76eea136e6e5a5bab83", "sha256": "370da30f38204cae0eb0e9d6dafacfc185c676f5678b5ae0d043f5862d38af7e"}, "downloads": -1, "filename": "braindead-0.2.1.tar.gz", "has_sig": false, "md5_digest": "32db1ae22e9cf76eea136e6e5a5bab83", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 38192, "upload_time": "2020-04-16T21:33:13", "upload_time_iso_8601": "2020-04-16T21:33:13.925927Z", "url": "https://files.pythonhosted.org/packages/db/e3/5567b0596f7c2bbead91f78295e2024265ed28663dfa49828c76d088e98a/braindead-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "531e559260f93d6c375c254dc870bde8", "sha256": "843ab608f11489b178aea184cf64739596631ad1611ee5ebb0a460d10a242ead"}, "downloads": -1, "filename": "braindead-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "531e559260f93d6c375c254dc870bde8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 38525, "upload_time": "2020-04-16T21:50:01", "upload_time_iso_8601": "2020-04-16T21:50:01.048153Z", "url": "https://files.pythonhosted.org/packages/5d/6f/3c844808d76f077e637fa29f5f7ad5b642c59852dc228d49649ebd53951a/braindead-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "264b0fda4a8323a64df7e1993408dd39", "sha256": "367f2cbef2167c9bf2499795f0bf9b8e2627f537fba9098b7dab2ccee18d9202"}, "downloads": -1, "filename": "braindead-0.2.2.tar.gz", "has_sig": false, "md5_digest": "264b0fda4a8323a64df7e1993408dd39", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 38117, "upload_time": "2020-04-16T21:50:02", "upload_time_iso_8601": "2020-04-16T21:50:02.159359Z", "url": "https://files.pythonhosted.org/packages/31/27/02e5938692c5926112a05facc41dd02c9474005a96952d3318357c7e6580/braindead-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "9e5c27baa2f9c91a1e813815525f780c", "sha256": "7ca500f89540ed666c56381f9cd2793b719f0e4a272257994ca6ab3bf081033f"}, "downloads": -1, "filename": "braindead-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9e5c27baa2f9c91a1e813815525f780c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 38521, "upload_time": "2020-04-16T21:54:00", "upload_time_iso_8601": "2020-04-16T21:54:00.082562Z", "url": "https://files.pythonhosted.org/packages/cc/e2/97d808931734d791305c9f8c2dbfd0501652ac6650d4379de9534a6c5a19/braindead-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3b625592bdf30277df447edb5b09602", "sha256": "1a9331ba8aa40252d589fc3cf92b46fa1ac15708a34e077a1f8848620ac0d37f"}, "downloads": -1, "filename": "braindead-0.2.3.tar.gz", "has_sig": false, "md5_digest": "b3b625592bdf30277df447edb5b09602", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 38130, "upload_time": "2020-04-16T21:54:01", "upload_time_iso_8601": "2020-04-16T21:54:01.253996Z", "url": "https://files.pythonhosted.org/packages/14/af/bd37d7fb013e01e1b83efaf954884b1f943540dd5001e32a20bb56accc53/braindead-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "096e53ddf95eef3b03e01c37e75fd48a", "sha256": "ab0854c3015971a681643e190245d72b85265c2017032c4d85028f4f0980ee4e"}, "downloads": -1, "filename": "braindead-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "096e53ddf95eef3b03e01c37e75fd48a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 38589, "upload_time": "2020-04-16T22:10:36", "upload_time_iso_8601": "2020-04-16T22:10:36.085222Z", "url": "https://files.pythonhosted.org/packages/01/3b/e317e5f9d457d4ef7e050f5c840bba445d803f350f2c8199e644b1b66d6b/braindead-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14983b53a7317efd6ffba8ffd6b1d7f7", "sha256": "14b07859488847f6df5e3f2588ac0e429611d94c4dffb2a838b144c05eff0bc3"}, "downloads": -1, "filename": "braindead-0.2.4.tar.gz", "has_sig": false, "md5_digest": "14983b53a7317efd6ffba8ffd6b1d7f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 38194, "upload_time": "2020-04-16T22:10:37", "upload_time_iso_8601": "2020-04-16T22:10:37.198884Z", "url": "https://files.pythonhosted.org/packages/c0/4c/26b1ddec10cd90b5514785f2dfc37df74361f54ecab37ed77ba13a3c62e7/braindead-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "2d520b840caaac3894b5210e6f1b9cd9", "sha256": "17e25bcc9f1208d681224505312ca9e9acd3b8448145e47ac62868c48700176d"}, "downloads": -1, "filename": "braindead-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "2d520b840caaac3894b5210e6f1b9cd9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 38593, "upload_time": "2020-04-17T07:24:18", "upload_time_iso_8601": "2020-04-17T07:24:18.969219Z", "url": "https://files.pythonhosted.org/packages/50/c6/a7fa3cddeae2424100ee65499720b9a811a50883781cc75705326da6c232/braindead-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80bba9a6d21361955154b9a35a78947e", "sha256": "8e43f21aba0f64227e8ef710863558db064c60b37664daac3068e6c8ef25cc9c"}, "downloads": -1, "filename": "braindead-0.2.5.tar.gz", "has_sig": false, "md5_digest": "80bba9a6d21361955154b9a35a78947e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 38174, "upload_time": "2020-04-17T07:24:19", "upload_time_iso_8601": "2020-04-17T07:24:19.802924Z", "url": "https://files.pythonhosted.org/packages/bf/13/3b21fe42f0695c8041513c9ed8277497a1d4f753ec72cb419fdd0f73a825/braindead-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "e51a40895d36a3875fc10f6b74ebe9d2", "sha256": "22394cd6779b51c5da61a507e7b6cd7a98c9dacddb4f4f205329a3942f0bbb6b"}, "downloads": -1, "filename": "braindead-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "e51a40895d36a3875fc10f6b74ebe9d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 38729, "upload_time": "2020-04-17T14:33:47", "upload_time_iso_8601": "2020-04-17T14:33:47.584031Z", "url": "https://files.pythonhosted.org/packages/9a/51/cc2f89dd2bd7e17ef74237b7a1d06779f048ecf32d29e76fded548747c57/braindead-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15376e026b761299dcffe96f199fd394", "sha256": "19eda08f1e75ff6efe1456677aa3207eba5a13b65a9c601949ee19d0ef71c1c3"}, "downloads": -1, "filename": "braindead-0.2.6.tar.gz", "has_sig": false, "md5_digest": "15376e026b761299dcffe96f199fd394", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 38309, "upload_time": "2020-04-17T14:33:49", "upload_time_iso_8601": "2020-04-17T14:33:49.035233Z", "url": "https://files.pythonhosted.org/packages/6c/5d/b9d733eeea5d63fd891a05b21774313fa209e8671a11b48beda351947b90/braindead-0.2.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e51a40895d36a3875fc10f6b74ebe9d2", "sha256": "22394cd6779b51c5da61a507e7b6cd7a98c9dacddb4f4f205329a3942f0bbb6b"}, "downloads": -1, "filename": "braindead-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "e51a40895d36a3875fc10f6b74ebe9d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 38729, "upload_time": "2020-04-17T14:33:47", "upload_time_iso_8601": "2020-04-17T14:33:47.584031Z", "url": "https://files.pythonhosted.org/packages/9a/51/cc2f89dd2bd7e17ef74237b7a1d06779f048ecf32d29e76fded548747c57/braindead-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15376e026b761299dcffe96f199fd394", "sha256": "19eda08f1e75ff6efe1456677aa3207eba5a13b65a9c601949ee19d0ef71c1c3"}, "downloads": -1, "filename": "braindead-0.2.6.tar.gz", "has_sig": false, "md5_digest": "15376e026b761299dcffe96f199fd394", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 38309, "upload_time": "2020-04-17T14:33:49", "upload_time_iso_8601": "2020-04-17T14:33:49.035233Z", "url": "https://files.pythonhosted.org/packages/6c/5d/b9d733eeea5d63fd891a05b21774313fa209e8671a11b48beda351947b90/braindead-0.2.6.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:25 2020"}