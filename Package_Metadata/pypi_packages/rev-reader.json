{"info": {"author": "Patrick", "author_email": "patrickschultz@utexas.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "\n## rev-reader\n\nParse Json of transcriptions from rev into FAVE-align format and write to CSV.\n\n### TOC\n1. [Install](#install)\n2. [How to use](#how-to-use)\n3. [Notes](#notes)\n\n### Install\n\nPip install as outlined above. \n\n### How to use\nBuilt in Python 3.6.5, should work with Python 2 as well. \n\n\n1. Run from the command line, option I\n\n    `python -m rev_reader.rev_reader $INPUT_FOLDER $ADDITIONAL_OFFSET`\n\n    where \n\n    - `$INPUT_FOLDER` is a path to a directory containing some JSON files of rev annotations. The output CSVs will be written to the same directory. This is a required argument.\n\n    - `$ADDITIONAL_OFFSET` is a number that will be added to / subtracted from the timestamps before the data is output as CSV. This is an optional argument. \n\n    For example, the command below will convert all the JSON files in the folder _annotated_files_ and subtract 0.01 from each time stamp. It will write CSV files  to folder _annotated_files_. \n\n    `python -m rev_reader.rev_reader /home/patrick/Documents/annotated_files -.01`\n\n2. Run from the command line, option II\n\n    You can run the _rev\\_reader.py_ file directly by executing:\n\n    `python $PATH_TO_REV_READER.PY $INPUT_FOLDER $ADDITIONAL_OFFSET`\n\n    For example, the command below will convert all the JSON files in the folder _annotated_files_ . It will write CSV files to folder _annotated_files_. \n\n    e.g. `python rev_reader.py /home/patrick/Documents/annotated_files -.01`\n\n3. Import into Python \n\n    You can access the functions directly from Python by doing \n\n    `import rev_reader`\n\n    Refer to the Github [docs](https://github.com/patrickschu/rev-reader/tree/master/rev_reader) for info. \n\n### Notes\n\n1. The naming scheme for CSVs is $LOWERCASE_NAME_OF_INPUT_JSON + $TIMESTAMP + \"_faved.csv\"\n\n    For example, for input file _BE.TO.017.json_, the CSV file will be _be.to.017\\_20181124-1819\\_faved.csv_\n\n2. Dependencies: pandas\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/patrickschu/rev-reader", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "rev-reader", "package_url": "https://pypi.org/project/rev-reader/", "platform": "", "project_url": "https://pypi.org/project/rev-reader/", "project_urls": {"Homepage": "https://github.com/patrickschu/rev-reader"}, "release_url": "https://pypi.org/project/rev-reader/0.0.3/", "requires_dist": ["pandas (>=0.22.1)"], "requires_python": ">=2.7.11", "summary": "Convert transcriptions from rev into FAVE format.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>rev-reader</h2>\n<p>Parse Json of transcriptions from rev into FAVE-align format and write to CSV.</p>\n<h3>TOC</h3>\n<ol>\n<li><a href=\"#install\" rel=\"nofollow\">Install</a></li>\n<li><a href=\"#how-to-use\" rel=\"nofollow\">How to use</a></li>\n<li><a href=\"#notes\" rel=\"nofollow\">Notes</a></li>\n</ol>\n<h3>Install</h3>\n<p>Pip install as outlined above.</p>\n<h3>How to use</h3>\n<p>Built in Python 3.6.5, should work with Python 2 as well.</p>\n<ol>\n<li>\n<p>Run from the command line, option I</p>\n<p><code>python -m rev_reader.rev_reader $INPUT_FOLDER $ADDITIONAL_OFFSET</code></p>\n<p>where</p>\n<ul>\n<li>\n<p><code>$INPUT_FOLDER</code> is a path to a directory containing some JSON files of rev annotations. The output CSVs will be written to the same directory. This is a required argument.</p>\n</li>\n<li>\n<p><code>$ADDITIONAL_OFFSET</code> is a number that will be added to / subtracted from the timestamps before the data is output as CSV. This is an optional argument.</p>\n</li>\n</ul>\n<p>For example, the command below will convert all the JSON files in the folder <em>annotated_files</em> and subtract 0.01 from each time stamp. It will write CSV files  to folder <em>annotated_files</em>.</p>\n<p><code>python -m rev_reader.rev_reader /home/patrick/Documents/annotated_files -.01</code></p>\n</li>\n<li>\n<p>Run from the command line, option II</p>\n<p>You can run the <em>rev_reader.py</em> file directly by executing:</p>\n<p><code>python $PATH_TO_REV_READER.PY $INPUT_FOLDER $ADDITIONAL_OFFSET</code></p>\n<p>For example, the command below will convert all the JSON files in the folder <em>annotated_files</em> . It will write CSV files to folder <em>annotated_files</em>.</p>\n<p>e.g. <code>python rev_reader.py /home/patrick/Documents/annotated_files -.01</code></p>\n</li>\n<li>\n<p>Import into Python</p>\n<p>You can access the functions directly from Python by doing</p>\n<p><code>import rev_reader</code></p>\n<p>Refer to the Github <a href=\"https://github.com/patrickschu/rev-reader/tree/master/rev_reader\" rel=\"nofollow\">docs</a> for info.</p>\n</li>\n</ol>\n<h3>Notes</h3>\n<ol>\n<li>\n<p>The naming scheme for CSVs is $LOWERCASE_NAME_OF_INPUT_JSON + $TIMESTAMP + \"_faved.csv\"</p>\n<p>For example, for input file <em>BE.TO.017.json</em>, the CSV file will be <em>be.to.017_20181124-1819_faved.csv</em></p>\n</li>\n<li>\n<p>Dependencies: pandas</p>\n</li>\n</ol>\n\n          </div>"}, "last_serial": 4524809, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "c813e18bdc9104af06ff7f47bbf9fe53", "sha256": "bf0602dfc0bba1503dd58c63a9f5b22b95e96dd2e56cd86a52df07111475edd1"}, "downloads": -1, "filename": "rev_reader-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c813e18bdc9104af06ff7f47bbf9fe53", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7.11", "size": 9404, "upload_time": "2018-11-24T23:39:03", "upload_time_iso_8601": "2018-11-24T23:39:03.384945Z", "url": "https://files.pythonhosted.org/packages/68/45/c80c9beda45ce2218e45a08652841ce3708a2f6062d0a4c247ea2edd61f9/rev_reader-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04110f5ecbb249a6c971e5c4e49f1c90", "sha256": "8df2b24d896538c971a5700ab4cab2437f6028968f124695f7ed0b4b1f7af419"}, "downloads": -1, "filename": "rev-reader-0.0.3.tar.gz", "has_sig": false, "md5_digest": "04110f5ecbb249a6c971e5c4e49f1c90", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.11", "size": 4649, "upload_time": "2018-11-24T23:39:05", "upload_time_iso_8601": "2018-11-24T23:39:05.420967Z", "url": "https://files.pythonhosted.org/packages/1d/e5/a0fa7b62170bdfc201ca315f1deaec5c7d20b70232cb78d4258773d5a73c/rev-reader-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c813e18bdc9104af06ff7f47bbf9fe53", "sha256": "bf0602dfc0bba1503dd58c63a9f5b22b95e96dd2e56cd86a52df07111475edd1"}, "downloads": -1, "filename": "rev_reader-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c813e18bdc9104af06ff7f47bbf9fe53", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7.11", "size": 9404, "upload_time": "2018-11-24T23:39:03", "upload_time_iso_8601": "2018-11-24T23:39:03.384945Z", "url": "https://files.pythonhosted.org/packages/68/45/c80c9beda45ce2218e45a08652841ce3708a2f6062d0a4c247ea2edd61f9/rev_reader-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04110f5ecbb249a6c971e5c4e49f1c90", "sha256": "8df2b24d896538c971a5700ab4cab2437f6028968f124695f7ed0b4b1f7af419"}, "downloads": -1, "filename": "rev-reader-0.0.3.tar.gz", "has_sig": false, "md5_digest": "04110f5ecbb249a6c971e5c4e49f1c90", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.11", "size": 4649, "upload_time": "2018-11-24T23:39:05", "upload_time_iso_8601": "2018-11-24T23:39:05.420967Z", "url": "https://files.pythonhosted.org/packages/1d/e5/a0fa7b62170bdfc201ca315f1deaec5c7d20b70232cb78d4258773d5a73c/rev-reader-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:15 2020"}