{"info": {"author": "Brett Beatty", "author_email": "brettbeatty@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Wraptitude: wrap the results of your Python functions\n=====================================================\n\n.. image:: https://img.shields.io/circleci/project/github/brettbeatty/wraptitude.svg\n    :target: https://circleci.com/gh/brettbeatty/wraptitude\n\n.. image:: https://img.shields.io/github/license/brettbeatty/wraptitude.svg\n    :target: https://github.com/brettbeatty/wraptitude/blob/master/LICENSE\n\n.. image:: https://img.shields.io/codecov/c/github/brettbeatty/wraptitude.svg\n    :target: https://codecov.io/gh/brettbeatty/wraptitude\n\n.. image:: https://img.shields.io/pypi/v/wraptitude.svg\n    :target: https://pypi.org/project/wraptitude/\n\nWraptitude provides a decorator that wraps result of a function call in a call to another function.\n\n.. code-block:: python\n\n    >>> from wraptitude import Wrapper\n    >>> @Wrapper(dict)\n    ... def f(x):\n    ...     for i in range(x):\n    ...         yield i, i ** 2\n    ...\n    >>> f(3)\n    {0: 0, 1: 1, 2: 4}\n    >>> @Wrapper(lambda x, y: x + y, 4)\n    ... def g(x):\n    ...     return x * 5\n    ...\n    >>> g(2)\n    14\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brettbeatty/wraptitude", "keywords": "wrapper", "license": "", "maintainer": "", "maintainer_email": "", "name": "wraptitude", "package_url": "https://pypi.org/project/wraptitude/", "platform": "", "project_url": "https://pypi.org/project/wraptitude/", "project_urls": {"Homepage": "https://github.com/brettbeatty/wraptitude"}, "release_url": "https://pypi.org/project/wraptitude/0.0.0/", "requires_dist": null, "requires_python": "", "summary": "Wrap the results of your Python functions", "version": "0.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://circleci.com/gh/brettbeatty/wraptitude\" rel=\"nofollow\"><img alt=\"https://img.shields.io/circleci/project/github/brettbeatty/wraptitude.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/babef33b8bc3307f55c323dc639a0d23ee433533/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f62726574746265617474792f777261707469747564652e737667\"></a>\n<a href=\"https://github.com/brettbeatty/wraptitude/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"https://img.shields.io/github/license/brettbeatty/wraptitude.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fe129e74a968e9a29dcbe6a105c4cec5a3b37021/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f62726574746265617474792f777261707469747564652e737667\"></a>\n<a href=\"https://codecov.io/gh/brettbeatty/wraptitude\" rel=\"nofollow\"><img alt=\"https://img.shields.io/codecov/c/github/brettbeatty/wraptitude.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd6ca6f6ab317595e6a184f5f545bc6fb000acdb/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f62726574746265617474792f777261707469747564652e737667\"></a>\n<a href=\"https://pypi.org/project/wraptitude/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/wraptitude.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d1950c51b38ebb42ee842c9d10307b2037573bd2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f777261707469747564652e737667\"></a>\n<p>Wraptitude provides a decorator that wraps result of a function call in a call to another function.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">wraptitude</span> <span class=\"kn\">import</span> <span class=\"n\">Wrapper</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nd\">@Wrapper</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">)</span>\n<span class=\"o\">...</span> <span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"k\">yield</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">i</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"mi\">0</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nd\">@Wrapper</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"o\">...</span> <span class=\"k\">def</span> <span class=\"nf\">g</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"mi\">5</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">g</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"mi\">14</span>\n</pre>\n\n          </div>"}, "last_serial": 3496461, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "99108cdaa3e81b793789aa187b047f87", "sha256": "6ce3985769ac0020af07fe9fb793c9643bddfee024334ed93e5cace7be867715"}, "downloads": -1, "filename": "wraptitude-0.0.0.tar.gz", "has_sig": false, "md5_digest": "99108cdaa3e81b793789aa187b047f87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2179, "upload_time": "2018-01-17T08:17:55", "upload_time_iso_8601": "2018-01-17T08:17:55.094318Z", "url": "https://files.pythonhosted.org/packages/67/a7/253a0a9c9661834bebd363f2c4f50b6093f258032f978e268c0041002eca/wraptitude-0.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "99108cdaa3e81b793789aa187b047f87", "sha256": "6ce3985769ac0020af07fe9fb793c9643bddfee024334ed93e5cace7be867715"}, "downloads": -1, "filename": "wraptitude-0.0.0.tar.gz", "has_sig": false, "md5_digest": "99108cdaa3e81b793789aa187b047f87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2179, "upload_time": "2018-01-17T08:17:55", "upload_time_iso_8601": "2018-01-17T08:17:55.094318Z", "url": "https://files.pythonhosted.org/packages/67/a7/253a0a9c9661834bebd363f2c4f50b6093f258032f978e268c0041002eca/wraptitude-0.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:20 2020"}