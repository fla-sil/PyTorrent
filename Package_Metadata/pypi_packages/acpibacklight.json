{"info": {"author": "Aaron Abbott", "author_email": "aabmass@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "acpibacklight\n=============\n\n|PyPI version|\n\nA python library and script for changing brightness on Linux via acpi.\nAllows for easing animations too!\n\n.. code:: bash\n\n    pip install acpibacklight\n\nYou can use the script ``acpi-ease-backlight`` to adjust the backlight\nwith easing via acpi on your device. See ``acpi-ease-backlight --help``\nfor options.\n\nCLI Usage\n---------\n\nAfter installing via pip, use the script ``acpi-ease-backlight``. Here\nis how you might use it:\n\n.. code:: bash\n\n    $ acpi-ease-backlight -h        # see help\n    ...\n\n    $ acpi-ease-backlight show      # show the current backlight value\n    4000\n\n    $ acpi-ease-backlight max       # show the your display's max backlight value\n    4882\n\n    $ acpi-ease-backlight set 2000  # set the backlight to 2000, over the default\n                                    # duration of 0.25 seconds and using the default\n                                    # easing function 'easeOutCubic'\n\n    $ acpi-ease-backlight -d 1 -e easeInOutQuad set 3000\n                                    # set the backlight to 3000 over duration of\n                                    # 1 second, using the easing function 'easeInOutQuad'\n\n    $ acpi-ease-backlight -d 0.5 dec 1000\n                                    # decrease the current backlight value by\n                                    # 1000 over a duration of 0.5 seconds\n\nLibrary Usage\n-------------\n\nInstantiating\n^^^^^^^^^^^^^\n\nUse the class ``acpibacklight.AcpiBacklightControl`` for changing the\nbacklight level in various ways. ``AcpiBacklightControl`` is designed to\nuse python *with* statements similarly to file objects and python's\n``open`` builtin:\n\n.. code:: python\n\n    from acpibacklight import AcpiBacklightControl\n\n    with AcpiBacklightControl() as ctrl:\n        # set the brightness without animating\n        ctrl.brightness = 2000\n\n        # get max brightness on this device\n        new_brightness = ctrl.max\n\n        # You can also use the animate function on the AcpiBacklightControl.\n        # See the docstring for kwargs\n        ctrl.animate(new_brightness, duration=0.75)\n\nAlternatively, you can construct, then open, then close the\n``AcpiBacklightControl``:\n\n.. code:: python\n\n    ctrl = AcpiBacklightControl()\n    ctrl.open()\n    ctrl.animate(ctrl.brightness - 1000)\n    ctrl.close()\n\nIf you have multiple ACPI backlight devices, specify the name when\nconstructing the ``AcpiBacklightControl``. Otherwise, the default is the\nfirst device directory found.\n\n.. code:: python\n\n    ctrl = AcpiBacklightControl(device_dir='intel_backlight')\n\nEasing Functions\n^^^^^^^^^^^^^^^^\n\nYou can pass an easing function to be used in ``animate()`` by the\n``easing_func`` keyword arg. This package uses\n`PyTweening <https://github.com/asweigart/pytweening>`__ for its default\nanimation and the CLI, so you can easily pass one of those:\n\n.. code:: python\n\n    import pytweening\n    ctrl.animate(2345, easing_func=pytweening.easeInOutBounce)\n\nFinally, if you want to create and pass your own easing function, it\nshould take one paramater (time) between 0 and 1, and return a value\nbetween 0 and 1. For instance, a linear easing function would look like:\n\n.. code:: python\n\n    def linear_easing(t):\n      # t is always in the range [0, 1]\n      return t\n\n    # ...\n    ctrl.animate(1234, easing_func=linear_easing)\n\n.. |PyPI version| image:: https://badge.fury.io/py/acpibacklight.svg\n   :target: https://badge.fury.io/py/acpibacklight\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "acpi brightness backlight easing animation", "license": "", "maintainer": "", "maintainer_email": "", "name": "acpibacklight", "package_url": "https://pypi.org/project/acpibacklight/", "platform": "", "project_url": "https://pypi.org/project/acpibacklight/", "project_urls": null, "release_url": "https://pypi.org/project/acpibacklight/0.2.0/", "requires_dist": ["PyTweening (==1.0.3)"], "requires_python": "", "summary": "Library and script for changing brightness on Linux via acpi. Allows for easing animations too!", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://badge.fury.io/py/acpibacklight\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f1d15402fcdfcdc1d2ef15bbadabdf5a1ddcda29/68747470733a2f2f62616467652e667572792e696f2f70792f616370696261636b6c696768742e737667\"></a></p>\n<p>A python library and script for changing brightness on Linux via acpi.\nAllows for easing animations too!</p>\n<pre>pip install acpibacklight\n</pre>\n<p>You can use the script <tt><span class=\"pre\">acpi-ease-backlight</span></tt> to adjust the backlight\nwith easing via acpi on your device. See <tt><span class=\"pre\">acpi-ease-backlight</span> <span class=\"pre\">--help</span></tt>\nfor options.</p>\n<div id=\"cli-usage\">\n<h2>CLI Usage</h2>\n<p>After installing via pip, use the script <tt><span class=\"pre\">acpi-ease-backlight</span></tt>. Here\nis how you might use it:</p>\n<pre>$ acpi-ease-backlight -h        <span class=\"c1\"># see help\n</span>...\n\n$ acpi-ease-backlight show      <span class=\"c1\"># show the current backlight value\n</span><span class=\"m\">4000</span>\n\n$ acpi-ease-backlight max       <span class=\"c1\"># show the your display's max backlight value\n</span><span class=\"m\">4882</span>\n\n$ acpi-ease-backlight <span class=\"nb\">set</span> <span class=\"m\">2000</span>  <span class=\"c1\"># set the backlight to 2000, over the default\n</span>                                <span class=\"c1\"># duration of 0.25 seconds and using the default\n</span>                                <span class=\"c1\"># easing function 'easeOutCubic'\n</span>\n$ acpi-ease-backlight -d <span class=\"m\">1</span> -e easeInOutQuad <span class=\"nb\">set</span> <span class=\"m\">3000</span>\n                                <span class=\"c1\"># set the backlight to 3000 over duration of\n</span>                                <span class=\"c1\"># 1 second, using the easing function 'easeInOutQuad'\n</span>\n$ acpi-ease-backlight -d <span class=\"m\">0</span>.5 dec <span class=\"m\">1000</span>\n                                <span class=\"c1\"># decrease the current backlight value by\n</span>                                <span class=\"c1\"># 1000 over a duration of 0.5 seconds</span>\n</pre>\n</div>\n<div id=\"library-usage\">\n<h2>Library Usage</h2>\n<div id=\"instantiating\">\n<h3>Instantiating</h3>\n<p>Use the class <tt>acpibacklight.AcpiBacklightControl</tt> for changing the\nbacklight level in various ways. <tt>AcpiBacklightControl</tt> is designed to\nuse python <em>with</em> statements similarly to file objects and python\u2019s\n<tt>open</tt> builtin:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">acpibacklight</span> <span class=\"kn\">import</span> <span class=\"n\">AcpiBacklightControl</span>\n\n<span class=\"k\">with</span> <span class=\"n\">AcpiBacklightControl</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">ctrl</span><span class=\"p\">:</span>\n    <span class=\"c1\"># set the brightness without animating</span>\n    <span class=\"n\">ctrl</span><span class=\"o\">.</span><span class=\"n\">brightness</span> <span class=\"o\">=</span> <span class=\"mi\">2000</span>\n\n    <span class=\"c1\"># get max brightness on this device</span>\n    <span class=\"n\">new_brightness</span> <span class=\"o\">=</span> <span class=\"n\">ctrl</span><span class=\"o\">.</span><span class=\"n\">max</span>\n\n    <span class=\"c1\"># You can also use the animate function on the AcpiBacklightControl.</span>\n    <span class=\"c1\"># See the docstring for kwargs</span>\n    <span class=\"n\">ctrl</span><span class=\"o\">.</span><span class=\"n\">animate</span><span class=\"p\">(</span><span class=\"n\">new_brightness</span><span class=\"p\">,</span> <span class=\"n\">duration</span><span class=\"o\">=</span><span class=\"mf\">0.75</span><span class=\"p\">)</span>\n</pre>\n<p>Alternatively, you can construct, then open, then close the\n<tt>AcpiBacklightControl</tt>:</p>\n<pre><span class=\"n\">ctrl</span> <span class=\"o\">=</span> <span class=\"n\">AcpiBacklightControl</span><span class=\"p\">()</span>\n<span class=\"n\">ctrl</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">()</span>\n<span class=\"n\">ctrl</span><span class=\"o\">.</span><span class=\"n\">animate</span><span class=\"p\">(</span><span class=\"n\">ctrl</span><span class=\"o\">.</span><span class=\"n\">brightness</span> <span class=\"o\">-</span> <span class=\"mi\">1000</span><span class=\"p\">)</span>\n<span class=\"n\">ctrl</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<p>If you have multiple ACPI backlight devices, specify the name when\nconstructing the <tt>AcpiBacklightControl</tt>. Otherwise, the default is the\nfirst device directory found.</p>\n<pre><span class=\"n\">ctrl</span> <span class=\"o\">=</span> <span class=\"n\">AcpiBacklightControl</span><span class=\"p\">(</span><span class=\"n\">device_dir</span><span class=\"o\">=</span><span class=\"s1\">'intel_backlight'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"easing-functions\">\n<h3>Easing Functions</h3>\n<p>You can pass an easing function to be used in <tt>animate()</tt> by the\n<tt>easing_func</tt> keyword arg. This package uses\n<a href=\"https://github.com/asweigart/pytweening\" rel=\"nofollow\">PyTweening</a> for its default\nanimation and the CLI, so you can easily pass one of those:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytweening</span>\n<span class=\"n\">ctrl</span><span class=\"o\">.</span><span class=\"n\">animate</span><span class=\"p\">(</span><span class=\"mi\">2345</span><span class=\"p\">,</span> <span class=\"n\">easing_func</span><span class=\"o\">=</span><span class=\"n\">pytweening</span><span class=\"o\">.</span><span class=\"n\">easeInOutBounce</span><span class=\"p\">)</span>\n</pre>\n<p>Finally, if you want to create and pass your own easing function, it\nshould take one paramater (time) between 0 and 1, and return a value\nbetween 0 and 1. For instance, a linear easing function would look like:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">linear_easing</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">):</span>\n  <span class=\"c1\"># t is always in the range [0, 1]</span>\n  <span class=\"k\">return</span> <span class=\"n\">t</span>\n\n<span class=\"c1\"># ...</span>\n<span class=\"n\">ctrl</span><span class=\"o\">.</span><span class=\"n\">animate</span><span class=\"p\">(</span><span class=\"mi\">1234</span><span class=\"p\">,</span> <span class=\"n\">easing_func</span><span class=\"o\">=</span><span class=\"n\">linear_easing</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2763426, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "0abdbb574ca586c5a90a7dc09fc5088d", "sha256": "f9274d2a00c4886659f4ba978df438a3308e6bb37f8ecdac9c480fcd29f4b42b"}, "downloads": -1, "filename": "acpibacklight-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0abdbb574ca586c5a90a7dc09fc5088d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7048, "upload_time": "2017-04-08T21:39:00", "upload_time_iso_8601": "2017-04-08T21:39:00.828406Z", "url": "https://files.pythonhosted.org/packages/30/9b/c90263500d64f61297590cb4fe4cc8af77106bd892fae8521f0a467f0f05/acpibacklight-0.1.2-py3-none-any.whl", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "367a34eea15fe0f35351b2686c3831a3", "sha256": "ffabfd3caf4f9a6c6885fcb13d69f389617c70bd4c9eadc3226d4ddc982a9497"}, "downloads": -1, "filename": "acpibacklight-0.1.3-py3-none-any.whl", "has_sig": true, "md5_digest": "367a34eea15fe0f35351b2686c3831a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7039, "upload_time": "2017-04-08T21:44:23", "upload_time_iso_8601": "2017-04-08T21:44:23.368205Z", "url": "https://files.pythonhosted.org/packages/22/0a/573792357984c0516036746dd2087867da36ef846dc355df821290b7246e/acpibacklight-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09e63ab288ac5aa350cbfb8307006ee0", "sha256": "cda3637569aac8dbcd163325aae6156be4aefb9d7c99d716fc852005831edf6e"}, "downloads": -1, "filename": "acpibacklight-0.1.3.tar.gz", "has_sig": true, "md5_digest": "09e63ab288ac5aa350cbfb8307006ee0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4318, "upload_time": "2017-04-08T21:44:25", "upload_time_iso_8601": "2017-04-08T21:44:25.059264Z", "url": "https://files.pythonhosted.org/packages/94/62/4dbc25ebe628a9e081f420ac6e5e957a0cc7c4deecccf64411aabcb97e03/acpibacklight-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d6d21d23b29bc49403de8ced957d97c4", "sha256": "389f756b1db35c1e6d5d75b343e594b5fbba701da5485fa1067cff64ba0aa570"}, "downloads": -1, "filename": "acpibacklight-0.2.0-py3-none-any.whl", "has_sig": true, "md5_digest": "d6d21d23b29bc49403de8ced957d97c4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7548, "upload_time": "2017-04-09T02:09:45", "upload_time_iso_8601": "2017-04-09T02:09:45.379219Z", "url": "https://files.pythonhosted.org/packages/c3/0d/407c9869af9b8783cb9d9d1f38dc7d11a227ba25ac3a49ac7877151ed4a1/acpibacklight-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "68d6da0f36acac3dad352104bdecb80b", "sha256": "dc7b080f03dd29356d27f8b2240a7a6ca9cfff56e0c0294c8e50f993ac7e360a"}, "downloads": -1, "filename": "acpibacklight-0.2.0.tar.gz", "has_sig": true, "md5_digest": "68d6da0f36acac3dad352104bdecb80b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4699, "upload_time": "2017-04-09T02:09:47", "upload_time_iso_8601": "2017-04-09T02:09:47.228231Z", "url": "https://files.pythonhosted.org/packages/96/6b/b61f70e9324a1e7a237eec5eeb0f56855afc01f102082c1a113bc48a64c7/acpibacklight-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d6d21d23b29bc49403de8ced957d97c4", "sha256": "389f756b1db35c1e6d5d75b343e594b5fbba701da5485fa1067cff64ba0aa570"}, "downloads": -1, "filename": "acpibacklight-0.2.0-py3-none-any.whl", "has_sig": true, "md5_digest": "d6d21d23b29bc49403de8ced957d97c4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7548, "upload_time": "2017-04-09T02:09:45", "upload_time_iso_8601": "2017-04-09T02:09:45.379219Z", "url": "https://files.pythonhosted.org/packages/c3/0d/407c9869af9b8783cb9d9d1f38dc7d11a227ba25ac3a49ac7877151ed4a1/acpibacklight-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "68d6da0f36acac3dad352104bdecb80b", "sha256": "dc7b080f03dd29356d27f8b2240a7a6ca9cfff56e0c0294c8e50f993ac7e360a"}, "downloads": -1, "filename": "acpibacklight-0.2.0.tar.gz", "has_sig": true, "md5_digest": "68d6da0f36acac3dad352104bdecb80b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4699, "upload_time": "2017-04-09T02:09:47", "upload_time_iso_8601": "2017-04-09T02:09:47.228231Z", "url": "https://files.pythonhosted.org/packages/96/6b/b61f70e9324a1e7a237eec5eeb0f56855afc01f102082c1a113bc48a64c7/acpibacklight-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:24:32 2020"}