{"info": {"author": "Matthias Endler <matthias-endler@gmx.net>", "author_email": "Matthias Endler <matthias-endler@gmx.net>", "bugtrack_url": null, "classifiers": [], "description": "![hyperjson](assets/logo.gif)\n\n![Build Status](https://github.com/mre/hyperjson/workflows/CI/badge.svg)\n\nA hyper-fast, safe Python module to read and write JSON data. Works as a\ndrop-in replacement for Python's built-in\n[json](https://docs.python.org/3/library/json.html) module.\nThis is alpha software and there will be bugs, so maybe don't deploy to production _just_ yet. :wink:\n\n## Installation\n\n```\npip install hyperjson\n```\n\n## Usage\n\nhyperjson is meant as a drop-in replacement for Python's [json\nmodule](https://docs.python.org/3/library/json.html):\n\n```python\n>>> import hyperjson\n>>> hyperjson.dumps([{\"key\": \"value\"}, 81, True])\n'[{\"key\":\"value\"},81,true]'\n>>> hyperjson.loads(\"\"\"[{\"key\": \"value\"}, 81, true]\"\"\")\n[{u'key': u'value'}, 81, True]\n```\n\n## Motivation\n\nParsing JSON is a solved problem; so, no need to reinvent the wheel, right?  \nWell, unless you care about **performance and safety**.\n\nTurns out, parsing JSON _correctly_ is a [hard problem](http://seriot.ch/parsing_json.php). Thanks to Rust however, we can minimize the risk of running into [stack overflows or segmentation faults](https://github.com/esnme/ultrajson/issues) however.\n\nhyperjson is a thin wrapper around Rust's [serde-json](https://github.com/serde-rs/json) and [pyo3](https://github.com/PyO3/pyo3). It is compatible with Python 3 (and 2 on a best-effort basis).\n\nFor a more in-depth discussion, [watch the talk about this project recorded at the Rust Cologne Meetup in August 2018.](https://media.ccc.de/v/rustcologne.2018.08.hyperjson)\n\n## Goals\n\n- **Compatibility**: Support the full feature-set of Python's `json` module.\n- **Safety**: No segfaults, panics, or overflows.\n- **Performance**: Significantly faster than `json` and as fast as `ujson` (both written in C).\n\n## Non-goals\n\n- **Support ujson and simplejson extensions**:  \n  Custom extensions like `encode()`, `__json__()`, or `toDict()` are not\n  supported. The reason is, that they go against PEP8 (e.g. `dunder` methods\n  are restricted to the standard library, camelCase is not Pythonic) and are not\n  available in Python's `json` module.\n- **Whitespace preservation**: Whitespace in JSON strings is not preserved.\n  Mainly because JSON is a whitespace-agnostic format and `serde-json` strips\n  them out by default. In practice this should not be a problem, since your\n  application must not depend on whitespace padding, but it's something to be\n  aware of.\n\n## Benchmark\n\nWe are _not_ fast yet. That said, we haven't done any big optimizations.\nIn the long-term we might explore features of newer CPUs like multi-core and SIMD.\nThat's one area other (C-based) JSON extensions haven't touched yet, because it might\nmake code harder to debug and prone to race-conditions. In Rust, this is feasible due to crates like\n[faster](https://github.com/AdamNiederer/faster) or\n[rayon](https://github.com/nikomatsakis/rayon).\n\nSo there's a chance that the following measurements might improve soon.  \nIf you want to help, check the instructions in the _Development Environment_ section below.\n\n**Test machine:**  \nMacBook Pro 15 inch, Mid 2015 (2,2 GHz Intel Core i7, 16 GB RAM) Darwin 17.6.18\n\n![Serialization benchmarks](assets/serialize.png)\n![Deserialization benchmarks](assets/deserialize.png)\n\n## Contributions welcome!\n\nIf you would like to hack on hyperjson, here's what needs to be done:\n\n- [x] Implement [`loads()`](https://docs.python.org/3/library/json.html#json.loads)\n- [x] Implement [`load()`](https://docs.python.org/3/library/json.html#json.load)\n- [x] Implement [`dumps()`](https://docs.python.org/3/library/json.html#json.dumps)\n- [x] Implement [`dump()`](https://docs.python.org/3/library/json.html#json.dump)\n- [x] Benchmark against [json](https://docs.python.org/3/library/json.html) and\n      [ujson](https://github.com/esnme/ultrajson/) (see [#1](https://github.com/mre/hyperjson/issues/1))\n- [x] Add a CI/CD pipeline for easier testing (see [#2](https://github.com/mre/hyperjson/issues/2))\n- [x] Create a proper pip package from it, to make installing easier (see [#3](https://github.com/mre/hyperjson/issues/3)).\n- [ ] Profile and optimize performance (see [#16](https://github.com/mre/hyperjson/issues/16))\n- [ ] Add remaining [keyword-only arguments](https://docs.python.org/3/library/json.html#basic-usage) to methods\n\nJust pick one of the open tickets. We can provide mentorship if you like. :smiley:\n\n## Developer guide\n\nThis project uses [pipenv](https://docs.pipenv.org/) for managing the development environment. If you don't have it installed, run\n\n```\npip install poetry\n```\n\nThe project requires the `nightly` version of Rust.\n\nInstall it via `rustup`:\n\n```\nrustup install nightly\n```\n\nIf you have already installed the `nightly` version, make sure it is up-to-date:\n\n```\nrustup update nightly\n```\n\nAfter that, you can compile the current version of hyperjson and execute all tests and benchmarks with the following commands:\n\n```\nmake install\nmake test\nmake bench\n```\n\n\ud83e\udd2b Pssst!... run `make help` to learn more.\n\n## Drawing pretty diagrams\n\nIn order to recreate the benchmark histograms, you first need a few additional prerequisites:\n\n- [Matplotlib](https://matplotlib.org/)\n- [Numpy](http://www.numpy.org/)\n\nOn macOS, please also add the following to your `~/.matplotlib/matplotlibrc` ([reference](https://markhneedham.com/blog/2018/05/04/python-runtime-error-osx-matplotlib-not-installed-as-framework-mac/)):\n\n```\nbackend: TkAgg\n```\n\nAfter that, run the following:\n\n```\nmake plot\n```\n\n## License\n\nhyperjson is licensed under either of\n\n- Apache License, Version 2.0, (LICENSE-APACHE or\n  http://www.apache.org/licenses/LICENSE-2.0)\n- MIT license (LICENSE-MIT or http://opensource.org/licenses/MIT)\n\nat your option.\n\n## Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally submitted\nfor inclusion in hyperjson by you, as defined in the Apache-2.0 license, shall\nbe dual licensed as above, without any additional terms or conditions.\n", "description_content_type": "text/markdown; charset=UTF-8; variant=GFM", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mre/hyperjson", "keywords": "fast json python", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "hyperjson", "package_url": "https://pypi.org/project/hyperjson/", "platform": "", "project_url": "https://pypi.org/project/hyperjson/", "project_urls": {"Homepage": "https://github.com/mre/hyperjson"}, "release_url": "https://pypi.org/project/hyperjson/0.2.4/", "requires_dist": null, "requires_python": "", "summary": "A hyper-fast Python module for reading/writing JSON data", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"hyperjson\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1ca837cfe93fc26bfba182aa06ce5917cb152307/6173736574732f6c6f676f2e676966\"></p>\n<p><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88c4cb80f96c9ede53b93c56507909d0ae25f5d2/68747470733a2f2f6769746875622e636f6d2f6d72652f68797065726a736f6e2f776f726b666c6f77732f43492f62616467652e737667\"></p>\n<p>A hyper-fast, safe Python module to read and write JSON data. Works as a\ndrop-in replacement for Python's built-in\n<a href=\"https://docs.python.org/3/library/json.html\" rel=\"nofollow\">json</a> module.\nThis is alpha software and there will be bugs, so maybe don't deploy to production <em>just</em> yet. :wink:</p>\n<h2>Installation</h2>\n<pre><code>pip install hyperjson\n</code></pre>\n<h2>Usage</h2>\n<p>hyperjson is meant as a drop-in replacement for Python's <a href=\"https://docs.python.org/3/library/json.html\" rel=\"nofollow\">json\nmodule</a>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">hyperjson</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">hyperjson</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">([{</span><span class=\"s2\">\"key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value\"</span><span class=\"p\">},</span> <span class=\"mi\">81</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">])</span>\n<span class=\"s1\">'[{\"key\":\"value\"},81,true]'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">hyperjson</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"[{\"key\": \"value\"}, 81, true]\"\"\"</span><span class=\"p\">)</span>\n<span class=\"p\">[{</span><span class=\"sa\">u</span><span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'value'</span><span class=\"p\">},</span> <span class=\"mi\">81</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">]</span>\n</pre>\n<h2>Motivation</h2>\n<p>Parsing JSON is a solved problem; so, no need to reinvent the wheel, right?<br>\nWell, unless you care about <strong>performance and safety</strong>.</p>\n<p>Turns out, parsing JSON <em>correctly</em> is a <a href=\"http://seriot.ch/parsing_json.php\" rel=\"nofollow\">hard problem</a>. Thanks to Rust however, we can minimize the risk of running into <a href=\"https://github.com/esnme/ultrajson/issues\" rel=\"nofollow\">stack overflows or segmentation faults</a> however.</p>\n<p>hyperjson is a thin wrapper around Rust's <a href=\"https://github.com/serde-rs/json\" rel=\"nofollow\">serde-json</a> and <a href=\"https://github.com/PyO3/pyo3\" rel=\"nofollow\">pyo3</a>. It is compatible with Python 3 (and 2 on a best-effort basis).</p>\n<p>For a more in-depth discussion, <a href=\"https://media.ccc.de/v/rustcologne.2018.08.hyperjson\" rel=\"nofollow\">watch the talk about this project recorded at the Rust Cologne Meetup in August 2018.</a></p>\n<h2>Goals</h2>\n<ul>\n<li><strong>Compatibility</strong>: Support the full feature-set of Python's <code>json</code> module.</li>\n<li><strong>Safety</strong>: No segfaults, panics, or overflows.</li>\n<li><strong>Performance</strong>: Significantly faster than <code>json</code> and as fast as <code>ujson</code> (both written in C).</li>\n</ul>\n<h2>Non-goals</h2>\n<ul>\n<li><strong>Support ujson and simplejson extensions</strong>:<br>\nCustom extensions like <code>encode()</code>, <code>__json__()</code>, or <code>toDict()</code> are not\nsupported. The reason is, that they go against PEP8 (e.g. <code>dunder</code> methods\nare restricted to the standard library, camelCase is not Pythonic) and are not\navailable in Python's <code>json</code> module.</li>\n<li><strong>Whitespace preservation</strong>: Whitespace in JSON strings is not preserved.\nMainly because JSON is a whitespace-agnostic format and <code>serde-json</code> strips\nthem out by default. In practice this should not be a problem, since your\napplication must not depend on whitespace padding, but it's something to be\naware of.</li>\n</ul>\n<h2>Benchmark</h2>\n<p>We are <em>not</em> fast yet. That said, we haven't done any big optimizations.\nIn the long-term we might explore features of newer CPUs like multi-core and SIMD.\nThat's one area other (C-based) JSON extensions haven't touched yet, because it might\nmake code harder to debug and prone to race-conditions. In Rust, this is feasible due to crates like\n<a href=\"https://github.com/AdamNiederer/faster\" rel=\"nofollow\">faster</a> or\n<a href=\"https://github.com/nikomatsakis/rayon\" rel=\"nofollow\">rayon</a>.</p>\n<p>So there's a chance that the following measurements might improve soon.<br>\nIf you want to help, check the instructions in the <em>Development Environment</em> section below.</p>\n<p><strong>Test machine:</strong><br>\nMacBook Pro 15 inch, Mid 2015 (2,2 GHz Intel Core i7, 16 GB RAM) Darwin 17.6.18</p>\n<p><img alt=\"Serialization benchmarks\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/83d03761e4f21c7a89018e3c9aa197c70898de3f/6173736574732f73657269616c697a652e706e67\">\n<img alt=\"Deserialization benchmarks\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b42add99b22a0987bcdc1abdaecdc417d27d619a/6173736574732f646573657269616c697a652e706e67\"></p>\n<h2>Contributions welcome!</h2>\n<p>If you would like to hack on hyperjson, here's what needs to be done:</p>\n<ul>\n<li>[x] Implement <a href=\"https://docs.python.org/3/library/json.html#json.loads\" rel=\"nofollow\"><code>loads()</code></a></li>\n<li>[x] Implement <a href=\"https://docs.python.org/3/library/json.html#json.load\" rel=\"nofollow\"><code>load()</code></a></li>\n<li>[x] Implement <a href=\"https://docs.python.org/3/library/json.html#json.dumps\" rel=\"nofollow\"><code>dumps()</code></a></li>\n<li>[x] Implement <a href=\"https://docs.python.org/3/library/json.html#json.dump\" rel=\"nofollow\"><code>dump()</code></a></li>\n<li>[x] Benchmark against <a href=\"https://docs.python.org/3/library/json.html\" rel=\"nofollow\">json</a> and\n<a href=\"https://github.com/esnme/ultrajson/\" rel=\"nofollow\">ujson</a> (see <a href=\"https://github.com/mre/hyperjson/issues/1\" rel=\"nofollow\">#1</a>)</li>\n<li>[x] Add a CI/CD pipeline for easier testing (see <a href=\"https://github.com/mre/hyperjson/issues/2\" rel=\"nofollow\">#2</a>)</li>\n<li>[x] Create a proper pip package from it, to make installing easier (see <a href=\"https://github.com/mre/hyperjson/issues/3\" rel=\"nofollow\">#3</a>).</li>\n<li>[ ] Profile and optimize performance (see <a href=\"https://github.com/mre/hyperjson/issues/16\" rel=\"nofollow\">#16</a>)</li>\n<li>[ ] Add remaining <a href=\"https://docs.python.org/3/library/json.html#basic-usage\" rel=\"nofollow\">keyword-only arguments</a> to methods</li>\n</ul>\n<p>Just pick one of the open tickets. We can provide mentorship if you like. :smiley:</p>\n<h2>Developer guide</h2>\n<p>This project uses <a href=\"https://docs.pipenv.org/\" rel=\"nofollow\">pipenv</a> for managing the development environment. If you don't have it installed, run</p>\n<pre><code>pip install poetry\n</code></pre>\n<p>The project requires the <code>nightly</code> version of Rust.</p>\n<p>Install it via <code>rustup</code>:</p>\n<pre><code>rustup install nightly\n</code></pre>\n<p>If you have already installed the <code>nightly</code> version, make sure it is up-to-date:</p>\n<pre><code>rustup update nightly\n</code></pre>\n<p>After that, you can compile the current version of hyperjson and execute all tests and benchmarks with the following commands:</p>\n<pre><code>make install\nmake test\nmake bench\n</code></pre>\n<p>\ud83e\udd2b Pssst!... run <code>make help</code> to learn more.</p>\n<h2>Drawing pretty diagrams</h2>\n<p>In order to recreate the benchmark histograms, you first need a few additional prerequisites:</p>\n<ul>\n<li><a href=\"https://matplotlib.org/\" rel=\"nofollow\">Matplotlib</a></li>\n<li><a href=\"http://www.numpy.org/\" rel=\"nofollow\">Numpy</a></li>\n</ul>\n<p>On macOS, please also add the following to your <code>~/.matplotlib/matplotlibrc</code> (<a href=\"https://markhneedham.com/blog/2018/05/04/python-runtime-error-osx-matplotlib-not-installed-as-framework-mac/\" rel=\"nofollow\">reference</a>):</p>\n<pre><code>backend: TkAgg\n</code></pre>\n<p>After that, run the following:</p>\n<pre><code>make plot\n</code></pre>\n<h2>License</h2>\n<p>hyperjson is licensed under either of</p>\n<ul>\n<li>Apache License, Version 2.0, (LICENSE-APACHE or\n<a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0</a>)</li>\n<li>MIT license (LICENSE-MIT or <a href=\"http://opensource.org/licenses/MIT\" rel=\"nofollow\">http://opensource.org/licenses/MIT</a>)</li>\n</ul>\n<p>at your option.</p>\n<h2>Contribution</h2>\n<p>Unless you explicitly state otherwise, any contribution intentionally submitted\nfor inclusion in hyperjson by you, as defined in the Apache-2.0 license, shall\nbe dual licensed as above, without any additional terms or conditions.</p>\n\n          </div>"}, "last_serial": 6581133, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "bb19e267d6285b04e431303e4fa2a719", "sha256": "4b0e560acee2ba1dc68980c0f32852120a97827761600ccba7cc50166a050aaa"}, "downloads": -1, "filename": "hyperjson-0.2.0-cp27-cp27m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "bb19e267d6285b04e431303e4fa2a719", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 496223, "upload_time": "2018-11-19T23:47:43", "upload_time_iso_8601": "2018-11-19T23:47:43.216517Z", "url": "https://files.pythonhosted.org/packages/88/a7/52605a48fac8ef36b6f48d62b70df7f18a9e9cd9c70311ad9c8173964fb8/hyperjson-0.2.0-cp27-cp27m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab42780d78c704b938c8a76d262ce8af", "sha256": "a3c40d45108da846d29ff71cbc5e618ee34b2dcc66761aeafca00b2598ef5cb6"}, "downloads": -1, "filename": "hyperjson-0.2.0-cp36-cp36m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "ab42780d78c704b938c8a76d262ce8af", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 491493, "upload_time": "2018-11-19T23:47:50", "upload_time_iso_8601": "2018-11-19T23:47:50.929566Z", "url": "https://files.pythonhosted.org/packages/c4/da/7674d2d7827c40c486bc21aa5e0f8e5ed2c3b35f202655f3a064d0fdf6c4/hyperjson-0.2.0-cp36-cp36m-macosx_10_7_x86_64.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "fb2e9176c45877caa9df4aadd5f6fd8a", "sha256": "dec9903786177890d3d6eeadf45cb05d1643761dd8c73259b95b1c24f01f8651"}, "downloads": -1, "filename": "hyperjson-0.2.1-cp37-cp37m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "fb2e9176c45877caa9df4aadd5f6fd8a", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 163792, "upload_time": "2019-09-19T22:51:49", "upload_time_iso_8601": "2019-09-19T22:51:49.298909Z", "url": "https://files.pythonhosted.org/packages/53/27/fe14a603485bb300a5fa35973b9fa740a098c6a688c0cddf2ecdf1761f07/hyperjson-0.2.1-cp37-cp37m-macosx_10_7_x86_64.whl", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "0907741c6e01a89f00a97628699b80a3", "sha256": "c222f8f613ad729336e1f01108f242cbd1cf8ef361a3cd2b69a21a470b5adff1"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp35-cp35m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "0907741c6e01a89f00a97628699b80a3", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 167760, "upload_time": "2020-01-31T16:01:00", "upload_time_iso_8601": "2020-01-31T16:01:00.058795Z", "url": "https://files.pythonhosted.org/packages/a4/34/6d19f99d9871fcc5fd01b97a7ddb33cbf7a20b98929d3d23f64286e6b8e1/hyperjson-0.2.4-cp35-cp35m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a26cc628c690959b34876dbb78a5ecc", "sha256": "95a411e6460307fd51f51e387522ff1e0387a9dae7d1a4b5cdaa07fce7cd5e6f"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "4a26cc628c690959b34876dbb78a5ecc", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 191235, "upload_time": "2020-01-31T15:55:10", "upload_time_iso_8601": "2020-01-31T15:55:10.799017Z", "url": "https://files.pythonhosted.org/packages/91/ce/ca2f48d4c31d31386719f30ea536d3a4308453e8dcb49079e87423b4a6a0/hyperjson-0.2.4-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af224b09c00ad836e5459260a91fbcfa", "sha256": "6dff1448fd69378703f50cfdacc8e5de36a9b0da3d8c4016add80dc9b6f8cc3b"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp35-none-win_amd64.whl", "has_sig": false, "md5_digest": "af224b09c00ad836e5459260a91fbcfa", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 164418, "upload_time": "2020-01-31T15:56:58", "upload_time_iso_8601": "2020-01-31T15:56:58.417344Z", "url": "https://files.pythonhosted.org/packages/e7/37/e3cf269bd0fe3a19978f826cb68e131bf6918592a044019a0a264c08caa2/hyperjson-0.2.4-cp35-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "115b1e8ba4e574f6be187b5a44ba623b", "sha256": "005dee52ee0646ecc2173199223e73a5a7a85cbfb9b888b0f4bc9e07906dd0ca"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp36-cp36m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "115b1e8ba4e574f6be187b5a44ba623b", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 167759, "upload_time": "2020-01-31T16:00:48", "upload_time_iso_8601": "2020-01-31T16:00:48.026694Z", "url": "https://files.pythonhosted.org/packages/82/3a/c4b490b9e68fb899fca4e4071cfab5f7486b4056e298f630db7ec25905de/hyperjson-0.2.4-cp36-cp36m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efd889486a6b2ff28a2ac532eacc97ed", "sha256": "3342dd9296035d8f0670f09e246ab36fea1017c4dae73c24a418960ed1eb8beb"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "efd889486a6b2ff28a2ac532eacc97ed", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 191199, "upload_time": "2020-01-31T15:54:26", "upload_time_iso_8601": "2020-01-31T15:54:26.296230Z", "url": "https://files.pythonhosted.org/packages/46/25/cc2b3f1dfd4c7b2e559e671472775a126a8a5044d49dc942bfde5c6e34eb/hyperjson-0.2.4-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "722e3609b88246959abb7bc95a6d387a", "sha256": "fc70be6d7e0f4cef9e79e965400b8e6167caaa14305016e1226e92b3a6ec52ec"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp36-none-win_amd64.whl", "has_sig": false, "md5_digest": "722e3609b88246959abb7bc95a6d387a", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 164419, "upload_time": "2020-01-31T15:56:57", "upload_time_iso_8601": "2020-01-31T15:56:57.183844Z", "url": "https://files.pythonhosted.org/packages/c7/09/b9dc6e67228236100df442e92ea38e2d28f7fe76c553aa9b492381540231/hyperjson-0.2.4-cp36-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6dec929d46eee09c6ea6d1961ffc9ecb", "sha256": "31b7287c8973ec92a14ced88f29b075568d884ec63a03a3bd18046ff445e085f"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp37-cp37m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "6dec929d46eee09c6ea6d1961ffc9ecb", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 167636, "upload_time": "2020-01-31T16:00:49", "upload_time_iso_8601": "2020-01-31T16:00:49.382717Z", "url": "https://files.pythonhosted.org/packages/e3/ce/23dc13114354b496ed6680599a169790af2717281d9c2bb9204683944bb3/hyperjson-0.2.4-cp37-cp37m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41af9935603f052c3d1301a5e98b3590", "sha256": "a9b6f33593729c1ba5990c46f8d34e61d63670d15622c228663fe3528e4149ad"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "41af9935603f052c3d1301a5e98b3590", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 191064, "upload_time": "2020-01-31T15:55:12", "upload_time_iso_8601": "2020-01-31T15:55:12.901800Z", "url": "https://files.pythonhosted.org/packages/ad/51/008a732d3e92d44e9b358ab668df6a95303088f9374ae72a73f158f842ad/hyperjson-0.2.4-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19d100cc24fae66b3e54678a13b06077", "sha256": "e4ab23d72c3646a3053db049a14b1fdf79521e04d2db98b18dc0dc858de242e2"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp37-none-win_amd64.whl", "has_sig": false, "md5_digest": "19d100cc24fae66b3e54678a13b06077", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 164200, "upload_time": "2020-01-31T15:56:55", "upload_time_iso_8601": "2020-01-31T15:56:55.981501Z", "url": "https://files.pythonhosted.org/packages/a6/4f/1392ef06faec75b80726816d9ca52d5ef0163f4f495f32201ba489ce38aa/hyperjson-0.2.4-cp37-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a368556e9a571fb371c1f64f72aeeb2", "sha256": "59ebe0e4b8f1a97c078cc5a7d214c59eda24acc1e530ae9f26a4148e26cca9e6"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp38-cp38-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "5a368556e9a571fb371c1f64f72aeeb2", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 167633, "upload_time": "2020-01-31T16:02:21", "upload_time_iso_8601": "2020-01-31T16:02:21.864865Z", "url": "https://files.pythonhosted.org/packages/fb/82/718296dd66b194984e5e182d5646e096d0c4cc41ec13db2f7053ca7f8715/hyperjson-0.2.4-cp38-cp38-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d9f3061a97cdd3b53e6612474adcac9", "sha256": "4451c5b85471a14d5d8ee1764e2622301979bf41da9be95472fb279f0c5db4b6"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "1d9f3061a97cdd3b53e6612474adcac9", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 191056, "upload_time": "2020-01-31T15:54:27", "upload_time_iso_8601": "2020-01-31T15:54:27.524898Z", "url": "https://files.pythonhosted.org/packages/14/dc/746513b710a32f7e3529ad26d4d0133107f3bed9096c0a3d96920775868a/hyperjson-0.2.4-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a2508d0977d0de6a0b321f43e71fb6e", "sha256": "cf70d244f0bce0db4a6d0cb2958dcf14283045f17098831f5e8ef34b3d4a67a8"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp38-none-win_amd64.whl", "has_sig": false, "md5_digest": "5a2508d0977d0de6a0b321f43e71fb6e", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 164201, "upload_time": "2020-01-31T15:56:54", "upload_time_iso_8601": "2020-01-31T15:56:54.795716Z", "url": "https://files.pythonhosted.org/packages/d1/ee/32eff3ee2754b1713409478052b01bfac7020cff45fa56417fa6451c0d56/hyperjson-0.2.4-cp38-none-win_amd64.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0907741c6e01a89f00a97628699b80a3", "sha256": "c222f8f613ad729336e1f01108f242cbd1cf8ef361a3cd2b69a21a470b5adff1"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp35-cp35m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "0907741c6e01a89f00a97628699b80a3", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 167760, "upload_time": "2020-01-31T16:01:00", "upload_time_iso_8601": "2020-01-31T16:01:00.058795Z", "url": "https://files.pythonhosted.org/packages/a4/34/6d19f99d9871fcc5fd01b97a7ddb33cbf7a20b98929d3d23f64286e6b8e1/hyperjson-0.2.4-cp35-cp35m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a26cc628c690959b34876dbb78a5ecc", "sha256": "95a411e6460307fd51f51e387522ff1e0387a9dae7d1a4b5cdaa07fce7cd5e6f"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "4a26cc628c690959b34876dbb78a5ecc", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 191235, "upload_time": "2020-01-31T15:55:10", "upload_time_iso_8601": "2020-01-31T15:55:10.799017Z", "url": "https://files.pythonhosted.org/packages/91/ce/ca2f48d4c31d31386719f30ea536d3a4308453e8dcb49079e87423b4a6a0/hyperjson-0.2.4-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af224b09c00ad836e5459260a91fbcfa", "sha256": "6dff1448fd69378703f50cfdacc8e5de36a9b0da3d8c4016add80dc9b6f8cc3b"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp35-none-win_amd64.whl", "has_sig": false, "md5_digest": "af224b09c00ad836e5459260a91fbcfa", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 164418, "upload_time": "2020-01-31T15:56:58", "upload_time_iso_8601": "2020-01-31T15:56:58.417344Z", "url": "https://files.pythonhosted.org/packages/e7/37/e3cf269bd0fe3a19978f826cb68e131bf6918592a044019a0a264c08caa2/hyperjson-0.2.4-cp35-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "115b1e8ba4e574f6be187b5a44ba623b", "sha256": "005dee52ee0646ecc2173199223e73a5a7a85cbfb9b888b0f4bc9e07906dd0ca"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp36-cp36m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "115b1e8ba4e574f6be187b5a44ba623b", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 167759, "upload_time": "2020-01-31T16:00:48", "upload_time_iso_8601": "2020-01-31T16:00:48.026694Z", "url": "https://files.pythonhosted.org/packages/82/3a/c4b490b9e68fb899fca4e4071cfab5f7486b4056e298f630db7ec25905de/hyperjson-0.2.4-cp36-cp36m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efd889486a6b2ff28a2ac532eacc97ed", "sha256": "3342dd9296035d8f0670f09e246ab36fea1017c4dae73c24a418960ed1eb8beb"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "efd889486a6b2ff28a2ac532eacc97ed", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 191199, "upload_time": "2020-01-31T15:54:26", "upload_time_iso_8601": "2020-01-31T15:54:26.296230Z", "url": "https://files.pythonhosted.org/packages/46/25/cc2b3f1dfd4c7b2e559e671472775a126a8a5044d49dc942bfde5c6e34eb/hyperjson-0.2.4-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "722e3609b88246959abb7bc95a6d387a", "sha256": "fc70be6d7e0f4cef9e79e965400b8e6167caaa14305016e1226e92b3a6ec52ec"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp36-none-win_amd64.whl", "has_sig": false, "md5_digest": "722e3609b88246959abb7bc95a6d387a", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 164419, "upload_time": "2020-01-31T15:56:57", "upload_time_iso_8601": "2020-01-31T15:56:57.183844Z", "url": "https://files.pythonhosted.org/packages/c7/09/b9dc6e67228236100df442e92ea38e2d28f7fe76c553aa9b492381540231/hyperjson-0.2.4-cp36-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6dec929d46eee09c6ea6d1961ffc9ecb", "sha256": "31b7287c8973ec92a14ced88f29b075568d884ec63a03a3bd18046ff445e085f"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp37-cp37m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "6dec929d46eee09c6ea6d1961ffc9ecb", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 167636, "upload_time": "2020-01-31T16:00:49", "upload_time_iso_8601": "2020-01-31T16:00:49.382717Z", "url": "https://files.pythonhosted.org/packages/e3/ce/23dc13114354b496ed6680599a169790af2717281d9c2bb9204683944bb3/hyperjson-0.2.4-cp37-cp37m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41af9935603f052c3d1301a5e98b3590", "sha256": "a9b6f33593729c1ba5990c46f8d34e61d63670d15622c228663fe3528e4149ad"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "41af9935603f052c3d1301a5e98b3590", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 191064, "upload_time": "2020-01-31T15:55:12", "upload_time_iso_8601": "2020-01-31T15:55:12.901800Z", "url": "https://files.pythonhosted.org/packages/ad/51/008a732d3e92d44e9b358ab668df6a95303088f9374ae72a73f158f842ad/hyperjson-0.2.4-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19d100cc24fae66b3e54678a13b06077", "sha256": "e4ab23d72c3646a3053db049a14b1fdf79521e04d2db98b18dc0dc858de242e2"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp37-none-win_amd64.whl", "has_sig": false, "md5_digest": "19d100cc24fae66b3e54678a13b06077", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 164200, "upload_time": "2020-01-31T15:56:55", "upload_time_iso_8601": "2020-01-31T15:56:55.981501Z", "url": "https://files.pythonhosted.org/packages/a6/4f/1392ef06faec75b80726816d9ca52d5ef0163f4f495f32201ba489ce38aa/hyperjson-0.2.4-cp37-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a368556e9a571fb371c1f64f72aeeb2", "sha256": "59ebe0e4b8f1a97c078cc5a7d214c59eda24acc1e530ae9f26a4148e26cca9e6"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp38-cp38-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "5a368556e9a571fb371c1f64f72aeeb2", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 167633, "upload_time": "2020-01-31T16:02:21", "upload_time_iso_8601": "2020-01-31T16:02:21.864865Z", "url": "https://files.pythonhosted.org/packages/fb/82/718296dd66b194984e5e182d5646e096d0c4cc41ec13db2f7053ca7f8715/hyperjson-0.2.4-cp38-cp38-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d9f3061a97cdd3b53e6612474adcac9", "sha256": "4451c5b85471a14d5d8ee1764e2622301979bf41da9be95472fb279f0c5db4b6"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "1d9f3061a97cdd3b53e6612474adcac9", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 191056, "upload_time": "2020-01-31T15:54:27", "upload_time_iso_8601": "2020-01-31T15:54:27.524898Z", "url": "https://files.pythonhosted.org/packages/14/dc/746513b710a32f7e3529ad26d4d0133107f3bed9096c0a3d96920775868a/hyperjson-0.2.4-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a2508d0977d0de6a0b321f43e71fb6e", "sha256": "cf70d244f0bce0db4a6d0cb2958dcf14283045f17098831f5e8ef34b3d4a67a8"}, "downloads": -1, "filename": "hyperjson-0.2.4-cp38-none-win_amd64.whl", "has_sig": false, "md5_digest": "5a2508d0977d0de6a0b321f43e71fb6e", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 164201, "upload_time": "2020-01-31T15:56:54", "upload_time_iso_8601": "2020-01-31T15:56:54.795716Z", "url": "https://files.pythonhosted.org/packages/d1/ee/32eff3ee2754b1713409478052b01bfac7020cff45fa56417fa6451c0d56/hyperjson-0.2.4-cp38-none-win_amd64.whl", "yanked": false}], "timestamp": "Fri May  8 00:49:33 2020"}