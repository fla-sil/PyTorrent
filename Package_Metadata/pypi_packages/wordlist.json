{"info": {"author": "Rexos", "author_email": "alex.pellegrini@live.com", "bugtrack_url": null, "classifiers": [], "description": "Wordlist\r\nBuild Status Coverage Status Requirements Status\r\n\r\nGenerates all possible permutations of a given charset.\r\n\r\nDeveloped by Alex Pellegrini.\r\n\r\nCode and performance optimisation by Daniele Bonadiman.\r\n\r\nInstalling:\r\n\r\n$ pip install wordlist\r\nUsage:\r\n\r\nThere are two ways to use wordlist (command line, python)\r\n\r\nCommand-line\r\n\r\nGenerate all the possible words with a given charset:\r\n\r\n$ wordlist [charset]\r\nGenerate all the possible words with length within a given interval (e.g. from 2 to 5):\r\n\r\n$ wordlist [charset] -m 2 -M 5\r\nGenerate following a given pattern:\r\n\r\n$ wordlist [charset] @@q@@er@t@y\r\nSave a list to file:\r\n\r\n$ wordlist [charset] -o list.txt\r\nor:\r\n\r\n$ wordlist [charset] > list.txt\r\nPython\r\n\r\nGenerate all the possible words with length within a given interval (e.g. from 2 to 5):\r\n\r\nimport wordlist\r\ngenerator = wordlist.Generator('charset')\r\nfor each in generator.generate(2, 5):\r\n    print(each)\r\nGenerate following a given pattern:\r\n\r\nimport wordlist\r\ngenerator = wordlist.Generator('charset')\r\nfor each in generator.generate_with_pattern('@@q@@er@t@y'):\r\n    print(each)\r\n[charset]\r\n\r\nThere are to ways to pass the charset to the script:\r\n\r\nA simple list of characters\r\n\r\n$ wordlist abcxyz987\r\n\r\nA list of ranges following the simple regex (\\w-\\w)\r\n\r\n$ wordlist a-z0-9A-Z\r\n\r\nPattern\r\n\r\nThe pattern should be like:\r\n\r\n@@q@@er@t@y\r\n\r\nThe script will replace every @ symbol with every letter in the charset so as to get every possible permutation. Every other symbol will be a fixed character present in every string. In this example, every generated string will contain a q at the 3rd position an e at the 6th and so on.\r\n\r\nContributing\r\n\r\n$ git clone https://github.com/rexos/wordlist.git\r\n$ cd wordlist\r\n$ pip install -r requirements.txt\r\n$ nosetests\r\nAnd open a pull request!", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/rexos/wordlist/tarball/1.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rexos/wordlist", "keywords": "words,generator,wordlist", "license": "UNKNOWN", "maintainer": "", "maintainer_email": "", "name": "wordlist", "package_url": "https://pypi.org/project/wordlist/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/wordlist/", "project_urls": {"Download": "https://github.com/rexos/wordlist/tarball/1.0", "Homepage": "https://github.com/rexos/wordlist"}, "release_url": "https://pypi.org/project/wordlist/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "Wordlist generator, creates dictionaries of words", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Wordlist\n<br>Build Status Coverage Status Requirements Status\n<br>\n<br>Generates all possible permutations of a given charset.\n<br>\n<br>Developed by Alex Pellegrini.\n<br>\n<br>Code and performance optimisation by Daniele Bonadiman.\n<br>\n<br>Installing:\n<br>\n<br>$ pip install wordlist\n<br>Usage:\n<br>\n<br>There are two ways to use wordlist (command line, python)\n<br>\n<br>Command-line\n<br>\n<br>Generate all the possible words with a given charset:\n<br>\n<br>$ wordlist [charset]\n<br>Generate all the possible words with length within a given interval (e.g. from 2 to 5):\n<br>\n<br>$ wordlist [charset] -m 2 -M 5\n<br>Generate following a given pattern:\n<br>\n<br>$ wordlist [charset] @@q@@er@t@y\n<br>Save a list to file:\n<br>\n<br>$ wordlist [charset] -o list.txt\n<br>or:\n<br>\n<br>$ wordlist [charset] &gt; list.txt\n<br>Python\n<br>\n<br>Generate all the possible words with length within a given interval (e.g. from 2 to 5):\n<br>\n<br>import wordlist\n<br>generator = wordlist.Generator('charset')\n<br>for each in generator.generate(2, 5):\n<br>    print(each)\n<br>Generate following a given pattern:\n<br>\n<br>import wordlist\n<br>generator = wordlist.Generator('charset')\n<br>for each in generator.generate_with_pattern('@@q@@er@t@y'):\n<br>    print(each)\n<br>[charset]\n<br>\n<br>There are to ways to pass the charset to the script:\n<br>\n<br>A simple list of characters\n<br>\n<br>$ wordlist abcxyz987\n<br>\n<br>A list of ranges following the simple regex (\\w-\\w)\n<br>\n<br>$ wordlist a-z0-9A-Z\n<br>\n<br>Pattern\n<br>\n<br>The pattern should be like:\n<br>\n<br>@@q@@er@t@y\n<br>\n<br>The script will replace every @ symbol with every letter in the charset so as to get every possible permutation. Every other symbol will be a fixed character present in every string. In this example, every generated string will contain a q at the 3rd position an e at the 6th and so on.\n<br>\n<br>Contributing\n<br>\n<br>$ git clone https://github.com/rexos/wordlist.git\n<br>$ cd wordlist\n<br>$ pip install -r requirements.txt\n<br>$ nosetests\n<br>And open a pull request!\n          </div>"}, "last_serial": 1093276, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "81f2c73a0879826798a1f869c0642f64", "sha256": "c1c6383943da8aed9273c2c6523573d47f1c7248df878d0c2ef7a6d658a33215"}, "downloads": -1, "filename": "wordlist-1.0.1.tar.gz", "has_sig": false, "md5_digest": "81f2c73a0879826798a1f869c0642f64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3355, "upload_time": "2014-05-15T08:47:27", "upload_time_iso_8601": "2014-05-15T08:47:27.974238Z", "url": "https://files.pythonhosted.org/packages/d2/16/ec3e0dba73d6661349a0ef8c6d99ac753ca14ac06abaa4574aca9a92b78c/wordlist-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "81f2c73a0879826798a1f869c0642f64", "sha256": "c1c6383943da8aed9273c2c6523573d47f1c7248df878d0c2ef7a6d658a33215"}, "downloads": -1, "filename": "wordlist-1.0.1.tar.gz", "has_sig": false, "md5_digest": "81f2c73a0879826798a1f869c0642f64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3355, "upload_time": "2014-05-15T08:47:27", "upload_time_iso_8601": "2014-05-15T08:47:27.974238Z", "url": "https://files.pythonhosted.org/packages/d2/16/ec3e0dba73d6661349a0ef8c6d99ac753ca14ac06abaa4574aca9a92b78c/wordlist-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:28:01 2020"}