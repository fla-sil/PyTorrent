{"info": {"author": "Luiz Tauffer, Maija Honig, Ryan Ly, Ben Dichter", "author_email": "ben.dichter@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Medical Science Apps."], "description": "# Buffalo-lab-data-to-nwb\nScripts which convert Buffalo lab data to NWB format. Currently we only support conversion for processed data.\n\nauthors: Luiz Tauffer, Maija Honig, Ryan Ly, Ben Dichter\n\n## Install\n\n```\npip install git+https://github.com/ben-dichter-consulting/buffalo-lab-data-to-nwb.git\n```\n\n# Use\nThe conversion function can be used in different forms:\n\n**1. Imported and run from a python script:** <br/>\nHere's an example: we'll grab raw data (`.ncs` files) and processed data (`.mat` and `.nex5` files) and convert them to `.nwb` files.\n```python\nfrom buffalonwb.conversion_module import conversion_function\nfrom pathlib import Path\nimport yaml\n\nbase_path = Path(BASE_PATH_TO_FILES)\n\n# Source files\nsource_paths = dict()\nsource_paths['raw Nlx'] = {'type': 'dir', 'path': base_path.joinpath(\"RawNlxCSCs\")}\nsource_paths['processed Nlx'] = {'type': 'dir', 'path': str(base_path.joinpath('ProcessedNlxData'))}\nsource_paths['processed behavior'] = {'type': 'file', 'path': str(base_path.joinpath('ProcessedBehavior/MatFile_2017-04-27_11-41-21.mat'))}\nsource_paths['sorted spikes'] = {'type': 'file', 'path': str(base_path.joinpath('SortedSpikes/2017-04-27_11-41-21_sorted.nex5'))}\n\n# Output .nwb file\nf_nwb = 'buffalo.nwb'\n\n# Load metadata from YAML file\nmetafile = 'metafile.yml'\nwith open(metafile) as f:\n    metadata = yaml.safe_load(f)\n\nkwargs_fields = {\n    'skip_raw': True,\n    'skip_processed': False,\n    'no_lfp_iterator': False,\n}\n\nconversion_function(source_paths=source_paths,\n                    f_nwb=f_nwb,\n                    metadata=metadata,\n                    **kwargs_fields)\n\n```\n<br/>\n\n**2. Command line:** <br/>\nSimilarly, the conversion function can be called from the command line in terminal:\n```\n$ python conversion_module.py [raw_nlx_dir] [lfp_mat_dir]\n  [sorted_spikes_nex5_file] [behavior_file] [output_file] [metadata_file]\n  [-skipraw] [-skipprocessed] [-lfpiterator]\n```\n\n> IMPORTANT:  <br/>\n> [raw_nlx_dir] and [lfp_mat_dir] should be paths to directories  <br/>\n> [sorted_spikes_nex5_file] [behavior_file] [output_file] [metadata_file] should be paths to files  <br/>\n>\n> optional inputs\n> add these after the positional arguments to use additional options <br/>\n> \"-skipraw\" (will skip adding raw data to nwb file) <br/>\n> \"-skipprocessed\" (will skip adding processed data to nwb file) <br/>\n> \"-lfpiterator\" (change lfp data method to dataChunkIterator (for large data)) <br/>\n\n<br/>\n\n**3. Graphical User Interface:** <br/>\nTo use the GUI, just run the auxiliary function `nwb_gui.py` from terminal:\n```\n$ python nwb_gui.py\n```\nThe GUI eases the task of editing the metadata of the resulting `.nwb` file, it is integrated with the conversion module (conversion on-click) and allows for visually exploring the data in the end file with [nwb-jupyter-widgets](https://github.com/NeurodataWithoutBorders/nwb-jupyter-widgets).\n\n![](media/gif_gui_buffalo.gif)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ben-dichter-consulting/buffalo-lab-data-to-nwb", "keywords": "python HDF HDF5 cross-platform open-data data-format open-source open-science reproducible-research neuroscience neurophysiology", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "buffalo-lab-data-to-nwb", "package_url": "https://pypi.org/project/buffalo-lab-data-to-nwb/", "platform": "", "project_url": "https://pypi.org/project/buffalo-lab-data-to-nwb/", "project_urls": {"Homepage": "https://github.com/ben-dichter-consulting/buffalo-lab-data-to-nwb"}, "release_url": "https://pypi.org/project/buffalo-lab-data-to-nwb/0.post0.dev137/", "requires_dist": ["pynwb", "scipy", "tqdm", "natsort", "colorama"], "requires_python": "", "summary": "A package for converting Buffalo Lab data to the NWB standard", "version": "0.post0.dev137", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Buffalo-lab-data-to-nwb</h1>\n<p>Scripts which convert Buffalo lab data to NWB format. Currently we only support conversion for processed data.</p>\n<p>authors: Luiz Tauffer, Maija Honig, Ryan Ly, Ben Dichter</p>\n<h2>Install</h2>\n<pre><code>pip install git+https://github.com/ben-dichter-consulting/buffalo-lab-data-to-nwb.git\n</code></pre>\n<h1>Use</h1>\n<p>The conversion function can be used in different forms:</p>\n<p><strong>1. Imported and run from a python script:</strong> <br>\nHere's an example: we'll grab raw data (<code>.ncs</code> files) and processed data (<code>.mat</code> and <code>.nex5</code> files) and convert them to <code>.nwb</code> files.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">buffalonwb.conversion_module</span> <span class=\"kn\">import</span> <span class=\"n\">conversion_function</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">import</span> <span class=\"nn\">yaml</span>\n\n<span class=\"n\">base_path</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">BASE_PATH_TO_FILES</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Source files</span>\n<span class=\"n\">source_paths</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">()</span>\n<span class=\"n\">source_paths</span><span class=\"p\">[</span><span class=\"s1\">'raw Nlx'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'dir'</span><span class=\"p\">,</span> <span class=\"s1\">'path'</span><span class=\"p\">:</span> <span class=\"n\">base_path</span><span class=\"o\">.</span><span class=\"n\">joinpath</span><span class=\"p\">(</span><span class=\"s2\">\"RawNlxCSCs\"</span><span class=\"p\">)}</span>\n<span class=\"n\">source_paths</span><span class=\"p\">[</span><span class=\"s1\">'processed Nlx'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'dir'</span><span class=\"p\">,</span> <span class=\"s1\">'path'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">base_path</span><span class=\"o\">.</span><span class=\"n\">joinpath</span><span class=\"p\">(</span><span class=\"s1\">'ProcessedNlxData'</span><span class=\"p\">))}</span>\n<span class=\"n\">source_paths</span><span class=\"p\">[</span><span class=\"s1\">'processed behavior'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'file'</span><span class=\"p\">,</span> <span class=\"s1\">'path'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">base_path</span><span class=\"o\">.</span><span class=\"n\">joinpath</span><span class=\"p\">(</span><span class=\"s1\">'ProcessedBehavior/MatFile_2017-04-27_11-41-21.mat'</span><span class=\"p\">))}</span>\n<span class=\"n\">source_paths</span><span class=\"p\">[</span><span class=\"s1\">'sorted spikes'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'file'</span><span class=\"p\">,</span> <span class=\"s1\">'path'</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">base_path</span><span class=\"o\">.</span><span class=\"n\">joinpath</span><span class=\"p\">(</span><span class=\"s1\">'SortedSpikes/2017-04-27_11-41-21_sorted.nex5'</span><span class=\"p\">))}</span>\n\n<span class=\"c1\"># Output .nwb file</span>\n<span class=\"n\">f_nwb</span> <span class=\"o\">=</span> <span class=\"s1\">'buffalo.nwb'</span>\n\n<span class=\"c1\"># Load metadata from YAML file</span>\n<span class=\"n\">metafile</span> <span class=\"o\">=</span> <span class=\"s1\">'metafile.yml'</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">metafile</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">metadata</span> <span class=\"o\">=</span> <span class=\"n\">yaml</span><span class=\"o\">.</span><span class=\"n\">safe_load</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n\n<span class=\"n\">kwargs_fields</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'skip_raw'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s1\">'skip_processed'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s1\">'no_lfp_iterator'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">conversion_function</span><span class=\"p\">(</span><span class=\"n\">source_paths</span><span class=\"o\">=</span><span class=\"n\">source_paths</span><span class=\"p\">,</span>\n                    <span class=\"n\">f_nwb</span><span class=\"o\">=</span><span class=\"n\">f_nwb</span><span class=\"p\">,</span>\n                    <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"n\">metadata</span><span class=\"p\">,</span>\n                    <span class=\"o\">**</span><span class=\"n\">kwargs_fields</span><span class=\"p\">)</span>\n</pre>\n<br>\n<p><strong>2. Command line:</strong> <br>\nSimilarly, the conversion function can be called from the command line in terminal:</p>\n<pre><code>$ python conversion_module.py [raw_nlx_dir] [lfp_mat_dir]\n  [sorted_spikes_nex5_file] [behavior_file] [output_file] [metadata_file]\n  [-skipraw] [-skipprocessed] [-lfpiterator]\n</code></pre>\n<blockquote>\n<p>IMPORTANT:  <br>\n[raw_nlx_dir] and [lfp_mat_dir] should be paths to directories  <br>\n[sorted_spikes_nex5_file] [behavior_file] [output_file] [metadata_file] should be paths to files  <br></p>\n<p>optional inputs\nadd these after the positional arguments to use additional options <br>\n\"-skipraw\" (will skip adding raw data to nwb file) <br>\n\"-skipprocessed\" (will skip adding processed data to nwb file) <br>\n\"-lfpiterator\" (change lfp data method to dataChunkIterator (for large data)) <br></p>\n</blockquote>\n<br>\n<p><strong>3. Graphical User Interface:</strong> <br>\nTo use the GUI, just run the auxiliary function <code>nwb_gui.py</code> from terminal:</p>\n<pre><code>$ python nwb_gui.py\n</code></pre>\n<p>The GUI eases the task of editing the metadata of the resulting <code>.nwb</code> file, it is integrated with the conversion module (conversion on-click) and allows for visually exploring the data in the end file with <a href=\"https://github.com/NeurodataWithoutBorders/nwb-jupyter-widgets\" rel=\"nofollow\">nwb-jupyter-widgets</a>.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/47bbd3e29d3930a4c24899486c115a1bb49875b8/6d656469612f6769665f6775695f62756666616c6f2e676966\"></p>\n\n          </div>"}, "last_serial": 6264951, "releases": {"0.post0.dev137": [{"comment_text": "", "digests": {"md5": "73cf22f17e7f6f62d7c93d5d98a00c41", "sha256": "944a7f1a319209e06b6cddf28c5630be8c765717c65a62bc34791e8dbd7d577d"}, "downloads": -1, "filename": "buffalo_lab_data_to_nwb-0.post0.dev137-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "73cf22f17e7f6f62d7c93d5d98a00c41", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 32168, "upload_time": "2019-12-09T07:04:25", "upload_time_iso_8601": "2019-12-09T07:04:25.608181Z", "url": "https://files.pythonhosted.org/packages/e6/d1/e67c7d7b8532e2d9267ba274c2a2597a2676133476db386caa89280a048d/buffalo_lab_data_to_nwb-0.post0.dev137-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cdc597f729791adcedca5839c2545bca", "sha256": "de6bca586b99193fa0540b5eefb8cedbbb7e19c7803a2fb7ccbe267028a565b3"}, "downloads": -1, "filename": "buffalo-lab-data-to-nwb-0.post0.dev137.tar.gz", "has_sig": false, "md5_digest": "cdc597f729791adcedca5839c2545bca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43407, "upload_time": "2019-12-09T07:04:28", "upload_time_iso_8601": "2019-12-09T07:04:28.521988Z", "url": "https://files.pythonhosted.org/packages/34/53/296244779c640c99cfb8d7e94e96ef2f85d1b0a3ecd6b5a059c4d02f56a0/buffalo-lab-data-to-nwb-0.post0.dev137.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "73cf22f17e7f6f62d7c93d5d98a00c41", "sha256": "944a7f1a319209e06b6cddf28c5630be8c765717c65a62bc34791e8dbd7d577d"}, "downloads": -1, "filename": "buffalo_lab_data_to_nwb-0.post0.dev137-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "73cf22f17e7f6f62d7c93d5d98a00c41", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 32168, "upload_time": "2019-12-09T07:04:25", "upload_time_iso_8601": "2019-12-09T07:04:25.608181Z", "url": "https://files.pythonhosted.org/packages/e6/d1/e67c7d7b8532e2d9267ba274c2a2597a2676133476db386caa89280a048d/buffalo_lab_data_to_nwb-0.post0.dev137-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cdc597f729791adcedca5839c2545bca", "sha256": "de6bca586b99193fa0540b5eefb8cedbbb7e19c7803a2fb7ccbe267028a565b3"}, "downloads": -1, "filename": "buffalo-lab-data-to-nwb-0.post0.dev137.tar.gz", "has_sig": false, "md5_digest": "cdc597f729791adcedca5839c2545bca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43407, "upload_time": "2019-12-09T07:04:28", "upload_time_iso_8601": "2019-12-09T07:04:28.521988Z", "url": "https://files.pythonhosted.org/packages/34/53/296244779c640c99cfb8d7e94e96ef2f85d1b0a3ecd6b5a059c4d02f56a0/buffalo-lab-data-to-nwb-0.post0.dev137.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:06 2020"}