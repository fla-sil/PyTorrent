{"info": {"author": "sinhrks", "author_email": "sinhrks@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "pyopendata\n==========\n\n.. image:: https://pypip.in/version/pyopendata/badge.svg\n    :target: https://pypi.python.org/pypi/pyopendata/\n    :alt: Latest Version\n\n.. image:: https://readthedocs.org/projects/pyopendata/badge/?version=latest\n    :target: http://pyopendata.readthedocs.org/en/latest/\n    :alt: Latest Docs\n\n.. image:: https://travis-ci.org/sinhrks/pyopendata.svg?branch=master\n    :target: https://travis-ci.org/sinhrks/pyopendata\n\nOverview\n~~~~~~~~\n\n``pyopendata`` is a Python utility to offer an unified API to read world various data sources,\nand output ``pandas.DataFrame``. Which covers:\n\n* CKAN websites ( `data.gov <http://www.data.gov/>`_ , `data.go.jp <http://www.data.go.jp>`_ , etc)\n* `Eurostat <http://epp.eurostat.ec.europa.eu/>`_\n* `OECD <http://www.oecd.org/>`_\n* `WorldBank <http://www.worldbank.org/>`_\n\nDocumentation\n~~~~~~~~~~~~~\n\nhttp://pyopendata.readthedocs.org/\n\nInstallation\n~~~~~~~~~~~~\n\n.. code-block:: sh\n\n    pip install pyopendata\n\nBasic Usage\n~~~~~~~~~~~\n\nThis section explains how to retrieve data from website which uses CKAN API.You can create ``DataStore`` instance to access CKAN website by passing CKAN URL to ``DataStore`` class.\n\nIn this example, we're going to retrieve the 'California Unemployment Statistics' data from data.gov. The target URL is:\n\n* https://catalog.data.gov/dataset/california-unemployment-statistics/resource/ffd05307-4528-4d15-a370-c16222119227\n\nWe can read above URL as:\n\n  * CKAN API URL: https://catalog.data.gov/\n  * Package ID: california-unemployment-statistics\n  * Resource ID: ffd05307-4528-4d15-a370-c16222119227\n\n.. code-block:: python\n\n    >>> import pyopendata as pyod\n\n    >>> store = pyod.DataStore('http://catalog.data.gov/')\n    >>> store\n    CKANStore (http://catalog.data.gov)\n\n``DataStore.serch`` performs search by keyword. Results will be the list of packages. You can select a target package by slicing.\n\n.. code-block:: python\n\n    >>> packages = store.search('Unemployment Statistics')\n    >>> packages\n    [annual-survey-of-school-system-finances (1 resource),\n     current-population-survey (1 resource),\n     federal-aid-to-states (1 resource),\n     current-population-survey-labor-force-statistics (2 resources),\n     dataferrett (1 resource),\n     mass-layoff-statistics (1 resource),\n     unemployment-rate (3 resources),\n     consolidated-federal-funds-report (1 resource),\n     annual-survey-of-state-and-local-government-finances (1 resource),\n     local-area-unemployment-statistics (2 resources)]\n\n    >>> packages[0]\n    annual-survey-of-school-system-finances (1 resource)\n\n\nOtherwise, specify the package name to be retrieved.\n\n.. code-block:: python\n\n    >>> package = store.get('california-unemployment-statistics')\n    >>> package\n    california-unemployment-statistics (4 resources)\n\nA package has resources (files) which contains actual data. You use `get` method to retrieve the resource.\n\n.. code-block:: python\n\n    >>> resource = package.get('ffd05307-4528-4d15-a370-c16222119227')\n    >>> resource\n    Resource ID: ffd05307-4528-4d15-a370-c16222119227\n    Resource Name: Comma Separated Values File\n    Resource URL: https://data.lacity.org/api/views/5zrb-xqhf/rows.csv?accessType=DOWNLOAD\n    Format: CSV, Size: None\n\n\nOnce you get the resource, use ``read`` method to read data as pandas ``DataFrame``.\n\n.. important:: The target file must be the correct format which can be parsed by ``pandas`` IO functions.\n\n.. code-block:: python\n\n    >>> df = resource.read()\n    >>> df.head()\n       Year Period                Area   Unemployment Rate  Labor Force  \\\n    0  2013    Jan          California               10.4%     18556500\n    1  2013    Jan  Los Angeles County               10.9%      4891500\n    2  2013    Jan    Los Angeles City                 12%      1915600\n    3  2013    Feb          California  9.699999999999999%     18648300\n    4  2013    Feb  Los Angeles County               10.3%      4924000\n\n       Employment  Unemployment Adjusted Preliminary\n    0    16631900       1924600  Not Adj  Not Prelim\n    1     4357800        533800  Not Adj  Not Prelim\n    2     1684800        230800  Not Adj  Not Prelim\n    3    16835900       1812400  Not Adj  Not Prelim\n    4     4418000        506000  Not Adj  Not Prelim\n\n\nOr you can get raw data by specifying ``raw=True``.\n\n.. code-block:: python\n\n    >>> raw = resource.read(raw=True)\n    >>> raw[:100]\n    'Year,Period,Area,Unemployment Rate,Labor Force,Employment,Unemployment,Adjusted,Preliminary\\n2013,Jan'", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pyopendata.readthedocs.org", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "pyopendata", "package_url": "https://pypi.org/project/pyopendata/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyopendata/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pyopendata.readthedocs.org"}, "release_url": "https://pypi.org/project/pyopendata/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "Python utility to get open data from some popular websites", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/pyopendata/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e4d5a3eb85ac17caf9706cfa1507f28a2826b528/68747470733a2f2f70797069702e696e2f76657273696f6e2f70796f70656e646174612f62616467652e737667\"></a>\n<a href=\"http://pyopendata.readthedocs.org/en/latest/\" rel=\"nofollow\"><img alt=\"Latest Docs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a7944c0e16deb43aeca8510ea53cbb5cbb899aac/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70796f70656e646174612f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://travis-ci.org/sinhrks/pyopendata\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/sinhrks/pyopendata.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/76d996eae66c774fe244c43566254b6e7613e560/68747470733a2f2f7472617669732d63692e6f72672f73696e68726b732f70796f70656e646174612e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p><tt>pyopendata</tt> is a Python utility to offer an unified API to read world various data sources,\nand output <tt>pandas.DataFrame</tt>. Which covers:</p>\n<ul>\n<li>CKAN websites ( <a href=\"http://www.data.gov/\" rel=\"nofollow\">data.gov</a> , <a href=\"http://www.data.go.jp\" rel=\"nofollow\">data.go.jp</a> , etc)</li>\n<li><a href=\"http://epp.eurostat.ec.europa.eu/\" rel=\"nofollow\">Eurostat</a></li>\n<li><a href=\"http://www.oecd.org/\" rel=\"nofollow\">OECD</a></li>\n<li><a href=\"http://www.worldbank.org/\" rel=\"nofollow\">WorldBank</a></li>\n</ul>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p><a href=\"http://pyopendata.readthedocs.org/\" rel=\"nofollow\">http://pyopendata.readthedocs.org/</a></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install pyopendata\n</pre>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<p>This section explains how to retrieve data from website which uses CKAN API.You can create <tt>DataStore</tt> instance to access CKAN website by passing CKAN URL to <tt>DataStore</tt> class.</p>\n<p>In this example, we\u2019re going to retrieve the \u2018California Unemployment Statistics\u2019 data from data.gov. The target URL is:</p>\n<ul>\n<li><a href=\"https://catalog.data.gov/dataset/california-unemployment-statistics/resource/ffd05307-4528-4d15-a370-c16222119227\" rel=\"nofollow\">https://catalog.data.gov/dataset/california-unemployment-statistics/resource/ffd05307-4528-4d15-a370-c16222119227</a></li>\n</ul>\n<p>We can read above URL as:</p>\n<blockquote>\n<ul>\n<li>CKAN API URL: <a href=\"https://catalog.data.gov/\" rel=\"nofollow\">https://catalog.data.gov/</a></li>\n<li>Package ID: california-unemployment-statistics</li>\n<li>Resource ID: ffd05307-4528-4d15-a370-c16222119227</li>\n</ul>\n</blockquote>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">pyopendata</span> <span class=\"k\">as</span> <span class=\"nn\">pyod</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">pyod</span><span class=\"o\">.</span><span class=\"n\">DataStore</span><span class=\"p\">(</span><span class=\"s1\">'http://catalog.data.gov/'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">store</span>\n<span class=\"n\">CKANStore</span> <span class=\"p\">(</span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">catalog</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">gov</span><span class=\"p\">)</span>\n</pre>\n<p><tt>DataStore.serch</tt> performs search by keyword. Results will be the list of packages. You can select a target package by slicing.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">packages</span> <span class=\"o\">=</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s1\">'Unemployment Statistics'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">packages</span>\n<span class=\"p\">[</span><span class=\"n\">annual</span><span class=\"o\">-</span><span class=\"n\">survey</span><span class=\"o\">-</span><span class=\"n\">of</span><span class=\"o\">-</span><span class=\"n\">school</span><span class=\"o\">-</span><span class=\"n\">system</span><span class=\"o\">-</span><span class=\"n\">finances</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"n\">resource</span><span class=\"p\">),</span>\n <span class=\"n\">current</span><span class=\"o\">-</span><span class=\"n\">population</span><span class=\"o\">-</span><span class=\"n\">survey</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"n\">resource</span><span class=\"p\">),</span>\n <span class=\"n\">federal</span><span class=\"o\">-</span><span class=\"n\">aid</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">states</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"n\">resource</span><span class=\"p\">),</span>\n <span class=\"n\">current</span><span class=\"o\">-</span><span class=\"n\">population</span><span class=\"o\">-</span><span class=\"n\">survey</span><span class=\"o\">-</span><span class=\"n\">labor</span><span class=\"o\">-</span><span class=\"n\">force</span><span class=\"o\">-</span><span class=\"n\">statistics</span> <span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"n\">resources</span><span class=\"p\">),</span>\n <span class=\"n\">dataferrett</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"n\">resource</span><span class=\"p\">),</span>\n <span class=\"n\">mass</span><span class=\"o\">-</span><span class=\"n\">layoff</span><span class=\"o\">-</span><span class=\"n\">statistics</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"n\">resource</span><span class=\"p\">),</span>\n <span class=\"n\">unemployment</span><span class=\"o\">-</span><span class=\"n\">rate</span> <span class=\"p\">(</span><span class=\"mi\">3</span> <span class=\"n\">resources</span><span class=\"p\">),</span>\n <span class=\"n\">consolidated</span><span class=\"o\">-</span><span class=\"n\">federal</span><span class=\"o\">-</span><span class=\"n\">funds</span><span class=\"o\">-</span><span class=\"n\">report</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"n\">resource</span><span class=\"p\">),</span>\n <span class=\"n\">annual</span><span class=\"o\">-</span><span class=\"n\">survey</span><span class=\"o\">-</span><span class=\"n\">of</span><span class=\"o\">-</span><span class=\"n\">state</span><span class=\"o\">-</span><span class=\"ow\">and</span><span class=\"o\">-</span><span class=\"n\">local</span><span class=\"o\">-</span><span class=\"n\">government</span><span class=\"o\">-</span><span class=\"n\">finances</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"n\">resource</span><span class=\"p\">),</span>\n <span class=\"n\">local</span><span class=\"o\">-</span><span class=\"n\">area</span><span class=\"o\">-</span><span class=\"n\">unemployment</span><span class=\"o\">-</span><span class=\"n\">statistics</span> <span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"n\">resources</span><span class=\"p\">)]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">packages</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">annual</span><span class=\"o\">-</span><span class=\"n\">survey</span><span class=\"o\">-</span><span class=\"n\">of</span><span class=\"o\">-</span><span class=\"n\">school</span><span class=\"o\">-</span><span class=\"n\">system</span><span class=\"o\">-</span><span class=\"n\">finances</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"n\">resource</span><span class=\"p\">)</span>\n</pre>\n<p>Otherwise, specify the package name to be retrieved.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'california-unemployment-statistics'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">package</span>\n<span class=\"n\">california</span><span class=\"o\">-</span><span class=\"n\">unemployment</span><span class=\"o\">-</span><span class=\"n\">statistics</span> <span class=\"p\">(</span><span class=\"mi\">4</span> <span class=\"n\">resources</span><span class=\"p\">)</span>\n</pre>\n<p>A package has resources (files) which contains actual data. You use <cite>get</cite> method to retrieve the resource.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">resource</span> <span class=\"o\">=</span> <span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'ffd05307-4528-4d15-a370-c16222119227'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">resource</span>\n<span class=\"n\">Resource</span> <span class=\"n\">ID</span><span class=\"p\">:</span> <span class=\"n\">ffd05307</span><span class=\"o\">-</span><span class=\"mi\">4528</span><span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"n\">d15</span><span class=\"o\">-</span><span class=\"n\">a370</span><span class=\"o\">-</span><span class=\"n\">c16222119227</span>\n<span class=\"n\">Resource</span> <span class=\"n\">Name</span><span class=\"p\">:</span> <span class=\"n\">Comma</span> <span class=\"n\">Separated</span> <span class=\"n\">Values</span> <span class=\"n\">File</span>\n<span class=\"n\">Resource</span> <span class=\"n\">URL</span><span class=\"p\">:</span> <span class=\"n\">https</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">lacity</span><span class=\"o\">.</span><span class=\"n\">org</span><span class=\"o\">/</span><span class=\"n\">api</span><span class=\"o\">/</span><span class=\"n\">views</span><span class=\"o\">/</span><span class=\"mi\">5</span><span class=\"n\">zrb</span><span class=\"o\">-</span><span class=\"n\">xqhf</span><span class=\"o\">/</span><span class=\"n\">rows</span><span class=\"o\">.</span><span class=\"n\">csv</span><span class=\"err\">?</span><span class=\"n\">accessType</span><span class=\"o\">=</span><span class=\"n\">DOWNLOAD</span>\n<span class=\"n\">Format</span><span class=\"p\">:</span> <span class=\"n\">CSV</span><span class=\"p\">,</span> <span class=\"n\">Size</span><span class=\"p\">:</span> <span class=\"kc\">None</span>\n</pre>\n<p>Once you get the resource, use <tt>read</tt> method to read data as pandas <tt>DataFrame</tt>.</p>\n<div>\n<p>Important</p>\n<p>The target file must be the correct format which can be parsed by <tt>pandas</tt> IO functions.</p>\n</div>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span>\n   <span class=\"n\">Year</span> <span class=\"n\">Period</span>                <span class=\"n\">Area</span>   <span class=\"n\">Unemployment</span> <span class=\"n\">Rate</span>  <span class=\"n\">Labor</span> <span class=\"n\">Force</span>  \\\n<span class=\"mi\">0</span>  <span class=\"mi\">2013</span>    <span class=\"n\">Jan</span>          <span class=\"n\">California</span>               <span class=\"mf\">10.4</span><span class=\"o\">%</span>     <span class=\"mi\">18556500</span>\n<span class=\"mi\">1</span>  <span class=\"mi\">2013</span>    <span class=\"n\">Jan</span>  <span class=\"n\">Los</span> <span class=\"n\">Angeles</span> <span class=\"n\">County</span>               <span class=\"mf\">10.9</span><span class=\"o\">%</span>      <span class=\"mi\">4891500</span>\n<span class=\"mi\">2</span>  <span class=\"mi\">2013</span>    <span class=\"n\">Jan</span>    <span class=\"n\">Los</span> <span class=\"n\">Angeles</span> <span class=\"n\">City</span>                 <span class=\"mi\">12</span><span class=\"o\">%</span>      <span class=\"mi\">1915600</span>\n<span class=\"mi\">3</span>  <span class=\"mi\">2013</span>    <span class=\"n\">Feb</span>          <span class=\"n\">California</span>  <span class=\"mf\">9.699999999999999</span><span class=\"o\">%</span>     <span class=\"mi\">18648300</span>\n<span class=\"mi\">4</span>  <span class=\"mi\">2013</span>    <span class=\"n\">Feb</span>  <span class=\"n\">Los</span> <span class=\"n\">Angeles</span> <span class=\"n\">County</span>               <span class=\"mf\">10.3</span><span class=\"o\">%</span>      <span class=\"mi\">4924000</span>\n\n   <span class=\"n\">Employment</span>  <span class=\"n\">Unemployment</span> <span class=\"n\">Adjusted</span> <span class=\"n\">Preliminary</span>\n<span class=\"mi\">0</span>    <span class=\"mi\">16631900</span>       <span class=\"mi\">1924600</span>  <span class=\"n\">Not</span> <span class=\"n\">Adj</span>  <span class=\"n\">Not</span> <span class=\"n\">Prelim</span>\n<span class=\"mi\">1</span>     <span class=\"mi\">4357800</span>        <span class=\"mi\">533800</span>  <span class=\"n\">Not</span> <span class=\"n\">Adj</span>  <span class=\"n\">Not</span> <span class=\"n\">Prelim</span>\n<span class=\"mi\">2</span>     <span class=\"mi\">1684800</span>        <span class=\"mi\">230800</span>  <span class=\"n\">Not</span> <span class=\"n\">Adj</span>  <span class=\"n\">Not</span> <span class=\"n\">Prelim</span>\n<span class=\"mi\">3</span>    <span class=\"mi\">16835900</span>       <span class=\"mi\">1812400</span>  <span class=\"n\">Not</span> <span class=\"n\">Adj</span>  <span class=\"n\">Not</span> <span class=\"n\">Prelim</span>\n<span class=\"mi\">4</span>     <span class=\"mi\">4418000</span>        <span class=\"mi\">506000</span>  <span class=\"n\">Not</span> <span class=\"n\">Adj</span>  <span class=\"n\">Not</span> <span class=\"n\">Prelim</span>\n</pre>\n<p>Or you can get raw data by specifying <tt>raw=True</tt>.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">raw</span> <span class=\"o\">=</span> <span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">raw</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">raw</span><span class=\"p\">[:</span><span class=\"mi\">100</span><span class=\"p\">]</span>\n<span class=\"s1\">'Year,Period,Area,Unemployment Rate,Labor Force,Employment,Unemployment,Adjusted,Preliminary</span><span class=\"se\">\\n</span><span class=\"s1\">2013,Jan'</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1425306, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "24c20cd12201375660556b41767fbf9b", "sha256": "288a806e4b821c0f07794076a843df143d38797ef465db4078cefae32d019fff"}, "downloads": -1, "filename": "pyopendata-0.0.1.tar.gz", "has_sig": false, "md5_digest": "24c20cd12201375660556b41767fbf9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18303, "upload_time": "2014-10-05T04:11:27", "upload_time_iso_8601": "2014-10-05T04:11:27.544389Z", "url": "https://files.pythonhosted.org/packages/b8/e4/0f10170b67e81804f6592cb5b965bd88c01903509946dfd978c64ddc2b33/pyopendata-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "5dc897984a5e7db9adb97af55c5a9c7a", "sha256": "5a2cf9f8d86273d8f443ce938b9e7c7be6c5807de11577709704ba2921f4d4cb"}, "downloads": -1, "filename": "pyopendata-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5dc897984a5e7db9adb97af55c5a9c7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28253, "upload_time": "2014-10-19T13:52:04", "upload_time_iso_8601": "2014-10-19T13:52:04.426671Z", "url": "https://files.pythonhosted.org/packages/6c/a4/5a21d96b0344987bb3ae892de15d84bc582107a1cb43c1ba18cfb1911b5f/pyopendata-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "96762a73bcc8db1329f0105b4d6409ef", "sha256": "88af960f76269ced9f1c034ecd5be90a640ae3a515a487e07fd6de82e12278f0"}, "downloads": -1, "filename": "pyopendata-0.0.3.tar.gz", "has_sig": false, "md5_digest": "96762a73bcc8db1329f0105b4d6409ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11979, "upload_time": "2015-02-16T12:32:59", "upload_time_iso_8601": "2015-02-16T12:32:59.911206Z", "url": "https://files.pythonhosted.org/packages/3f/9e/66353403e163fc1406d7ce0b1cfc02972540435d2bfd9713a4f207b982ab/pyopendata-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "96762a73bcc8db1329f0105b4d6409ef", "sha256": "88af960f76269ced9f1c034ecd5be90a640ae3a515a487e07fd6de82e12278f0"}, "downloads": -1, "filename": "pyopendata-0.0.3.tar.gz", "has_sig": false, "md5_digest": "96762a73bcc8db1329f0105b4d6409ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11979, "upload_time": "2015-02-16T12:32:59", "upload_time_iso_8601": "2015-02-16T12:32:59.911206Z", "url": "https://files.pythonhosted.org/packages/3f/9e/66353403e163fc1406d7ce0b1cfc02972540435d2bfd9713a4f207b982ab/pyopendata-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:12 2020"}