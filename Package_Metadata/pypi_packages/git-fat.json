{"info": {"author": "Alan Braithwaite", "author_email": "alan.braithwaite@cyaninc.com", "bugtrack_url": null, "classifiers": [], "description": "git-fat\n=======\n\nA tool for managing large binary files in git repositories.\n\nIntroduction\n------------\n\nGit-fat is a tool written by `jedbrown <https://github.com/jedbrown/git-fat>`_.\nThis repository / pypi package is a fork which we are\n`actively trying to resolve <https://github.com/jedbrown/git-fat/pull/19>`_.\nWith that said, the repository placeholder format is compatible with both, so\nthey should be interchangeable for now.  Please take care to check which one\nyou are using before opening issues on either repository, and include as much\ninformation as possible so that we are able to help you as best we can.\n\nNow an explanation about what (either) ``git-fat`` does:\n\nChecking large binary files into a distributed version control system is\na bad idea because repository size quickly becomes unmanageable. Numerous\noperations take longer to complete and fresh clones become something\nthat you start and wait for a bit before coming back to them.\nUsing ``git-fat`` allows you to separate the storage of large-files from\nthe source while still having them in the working directory for your project.\n\nFeatures\n--------\n\n-  Cloning the source code remains fast because binaries are not\n   included\n-  Binary files really exist in your working directory and are not\n   soft-links\n-  Only depends on Python 2.7 and a backend\n-  Supports anonymous downloads of files over http\n\nCompatibility\n-------------\n\nOS support: Linux, Mac, Windows.\n\nPython support: only 2.x\n\nInstallation\n------------\n\nYou can install ``git-fat`` using pip.\n\n::\n\n    pip install git-fat\n\nOr you can install it simply by placing it on your path.\n\n::\n\n    curl https://raw.github.com/cyaninc/git-fat/master/git_fat/git_fat.py \\\n    | sudo tee /usr/local/bin/git-fat && sudo chmod +x /usr/local/bin/git-fat\n\nInstallation on Windows\n-----------------------\n\nTo install from PyPI type:\n\n::\n\n    pip install --upgrade git-fat\n\nIt is required for the Python27/Scripts directory to be in PATH.\n\nSee also other scripts in the win32/ directory:\n\n-  install_win.py - this script ensures that a binary wheel package (.whl)\n   is installed from PyPI. If for example there is a Linux source package\n   (.tar.gz) available and its version number is higher than any of the\n   available .whl packages, then the pip tool would install the Linux\n   source package and for obvious reasons it wouldn't work.\n-  run_tests_xxx.bat - run unit tests\n-  setup.bat - install package from sources\n-  setup_wheel.bat - create a binary Python Wheel package in the dist/\n   directory and install that package\n\nUsage\n-----\n\nFirst, create a\n`git attributes <http://git-scm.com/book/en/Customizing-Git-Git-Attributes>`_\nfile in the root of your repository. This file determines which files\nget converted to ``git-fat`` files.\n\n::\n\n    cat >> .gitattributes <<EOF\n    *.deb filter=fat -crlf\n    *.gz filter=fat -crlf\n    *.zip filter=fat -crlf\n    EOF\n\nNext, create a ``.gitfat`` configuration file in the root of your repo\nthat contains the location of the remote store for the binary files.\nOptionally include the ssh user and port if non-standard. Also,\noptionally include an http remote for anonymous clones.\n\n::\n\n    [rsync]\n    remote = storage.example.com:/path/to/store\n    user = git\n    port = 2222\n    [http]\n    remote = http://storage.example.com/store\n\nCommit those files so that others will be able to use them.\n\nInitialize the repository. This adds a line to ``.git/config`` telling\ngit what command to run for the ``fat`` filter is in the\n``.gitattributes`` file.\n\n::\n\n    git fat init\n\nNow when you add a file that matches a pattern in the ``.gitattributes``\nfile, it will be converted to a fat placeholder file before getting\ncommitted to the repository. After you've added a file **remember to push\nit to the fat store**, otherwise people won't get the binary file when\nthey try to pull fat-files.\n\n::\n\n    git fat push\n\nAfter we've done a new clone of a repository using ``git-fat``, to get\nthe additional files we do a fat pull.  This will pull the default backend\nas determined by the first entry in the ``.gitfat`` file for the repo.\n\n::\n\n    git fat pull\n\nTo specify which backend to use when pulling or pushing files, then simply\nlist the backend type after the pull or push command.\n\n::\n\n    git fat pull http\n\nTo list the files managed by ``git-fat``\n\n::\n\n    git fat list\n\nTo get a summary of the orphan and stale files in the repository\n\n::\n\n    git fat status\n\nOrphans are files that exist as placeholders in the working copy. Stale\nfiles are files that are in the ``.git/fat/objects`` directory, but have\nno working copy associated with them (e.g. old versions of files).\n\nTo find files over a certain size, use git fat find. This example finds\nall objects greater than 10MB in git's database and prints them out.\n\n::\n\n    git fat find 10485760\n\nImplementation notes\n--------------------\n\nFor many commands, ``git-fat`` by default only checks the current\n``HEAD`` for placeholder files to clone. This can save on bandwidth for\nfrequently changing large files and also saves on processing time for\nvery large repositories. To force commands to search the entire history\nfor placeholders and pull all files, call ``git-fat`` with ``-a``. e.g.\n\n::\n\n    git fat -a pull\n\nIf you add ``git-fat`` to an existing repository, the default behavior\nis to not convert existing binary files to ``git-fat``. Converting a\nfile that already exists in the history for git would not save any\nspace. Once the file is changed or renamed, it will then be added to the\nfat store.\n\nTo setup an http server to accept ``git-fat`` requests, just configure a\nwebserver to have a url serve up the ``git-fat`` directory on the\nserver, and point the ``.gitfat`` http remote to that url.\n\nRetroactive Import\n------------------\n\nYou can retroactively import a repository to ``git-fat`` using a combination\nof ``find`` and ``index-filter`` used with git's ``filter-branch`` command.\n\nBefore you do this, make sure you understand the consequences of\n`rewriting history <http://git-scm.com/book/ch6-4.html>`_ and be sure to\nbackup your repository before starting.\n\nFirst, clone the repository and find all the large files with the\n``git fat find`` command.\n\n::\n\n    darthurdent at betelgeuse in /tmp/git-fat-demo (master)\n    $ git fat find 5123123\n    761a63bf287867da92eb420fca515363c4b02ad1 9437184 flowerpot.tar.gz\n    6c5d4031e03408e34ae476c5053ee497a91ac37b 10485760 whale.tar.gz\n\n\nReview the files and make sure that they're what you want to exclude from the\nrepository.  If the list looks good, put the file names into another file that\nwill be read from during ``filter-branch``.\n\n::\n\n    darthurdent at betelgeuse in /tmp/git-fat-demo (master)\n    $ git fat find 5123123 | cut -d' ' -f3- > /tmp/towel\n\n    darthurdent at betelgeuse in /tmp/git-fat-demo (master)\n    $ cat /tmp/towel\n    flowerpot.tar.gz\n    whale.tar.gz\n\n    darthurdent at betelgeuse in /tmp/git-fat-demo (master)\n    $ ll\n    total 19M\n    drwxrwxr-x 3 darthurdent darthurdent 4.0K Dec 10 13:42 .\n    drwxrwxrwt 6 root         root          76K Dec 10 13:42 ..\n    drwxrwxr-x 6 darthurdent darthurdent 4.0K Dec 10 13:42 .git\n    -rw-r--r-- 1 darthurdent darthurdent 9.0M Dec 10 13:37 flowerpot.tar.gz\n    -rw-r--r-- 1 darthurdent darthurdent  10M Dec 10 13:37 whale.tar.gz\n\nDo the ``filter-branch`` using ``git fat index-filter`` as the index filter.\nPass in the file name containing the paths to files you want to exclude.\n\n::\n\n    darthurdent at betelgeuse in /tmp/git-fat-demo (master)\n    $ git filter-branch --index-filter 'git fat index-filter /tmp/towel'\\\n        --tag-name-filter cat -- --all\n    Rewrite 28cfba441aac92992c3f80dae97cd1c19b3befad (2/2)\n    Ref 'refs/heads/master' was rewritten\n\nReview the changes made to the repository.\n\n::\n\n    darthurdent at betelgeuse in /tmp/git-fat-demo (master)\n    $ ll\n    total 19M\n    drwxrwxr-x 3 darthurdent darthurdent 4.0K Dec 10 13:42 .\n    drwxrwxrwt 6 root         root          76K Dec 10 13:42 ..\n    drwxrwxr-x 6 darthurdent darthurdent 4.0K Dec 10 13:42 .git\n    -rw-rw-r-- 1 darthurdent darthurdent   64 Dec 10 13:42 .gitattributes\n    -rw-rw-r-- 1 darthurdent darthurdent 9.0M Dec 10 13:42 flowerpot.tar.gz\n    -rw-rw-r-- 1 darthurdent darthurdent  10M Dec 10 13:42 whale.tar.gz\n\n    darthurdent at betelgeuse in /tmp/git-fat-demo (master)\n    $ cat .gitattributes\n    flowerpot.tar.gz filter=fat -text\n    whale.tar.gz filter=fat -text\n\n    darthurdent at betelgeuse in /tmp/git-fat-demo (master)\n    $ git cat-file -p $(git hash-object whale.tar.gz)\n    #$# git-fat 8c206a1a87599f532ce68675536f0b1546900d7a             10485760\n\nRemove all the old and dangling references by doing a clone of the repository\nyou just cleaned.  The ``file://`` uri is\n`important <http://git-scm.com/book/ch4-1.html>`_ here.\n\n::\n\n    darthurdent at betelgeuse in /tmp/git-fat-demo (master)\n    $ cd .. && git clone file://git-fat-demo git-fat-clean\n\nRelated projects\n----------------\n\n-  `git-annex <http://git-annex.branchable.com>`_ is a far more\n   comprehensive solution, but was designed for a more distributed use\n   case and has more dependencies.\n-  `git-media <https://github.com/schacon/git-media>`_ adopts a similar\n   approach to ``git-fat``, but with a different synchronization\n   philosophy and with many Ruby dependencies.\n\nDevelopment\n-----------\n\nTo run the tests, simply run ``python setup.py test``.\n\nTo use the development version of ``git-fat`` for manual testing, run\n``pip install -U .`` (suggest doing that in a virtualenv).\n\nMaster branch is a stable branch with the latest release at the HEAD.\n\n\nImprovements\n------------\n\n-  Better Documentation (esp. setting up a server)\n-  Improved Testing\n-  config file location argument (global)\n-  cli option to specify which backend to use for push and pull (http, rsync, etc)\n-  Python 3 compatibility (without six)\n-  Really implement pattern matching\n-  Git hooks", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cyaninc/git-fat", "keywords": null, "license": "BSD 2-Clause", "maintainer": null, "maintainer_email": null, "name": "git-fat", "package_url": "https://pypi.org/project/git-fat/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/git-fat/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/cyaninc/git-fat"}, "release_url": "https://pypi.org/project/git-fat/0.5.0/", "requires_dist": null, "requires_python": null, "summary": "Manage large binary files with git", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A tool for managing large binary files in git repositories.</p>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Git-fat is a tool written by <a href=\"https://github.com/jedbrown/git-fat\" rel=\"nofollow\">jedbrown</a>.\nThis repository / pypi package is a fork which we are\n<a href=\"https://github.com/jedbrown/git-fat/pull/19\" rel=\"nofollow\">actively trying to resolve</a>.\nWith that said, the repository placeholder format is compatible with both, so\nthey should be interchangeable for now.  Please take care to check which one\nyou are using before opening issues on either repository, and include as much\ninformation as possible so that we are able to help you as best we can.</p>\n<p>Now an explanation about what (either) <tt><span class=\"pre\">git-fat</span></tt> does:</p>\n<p>Checking large binary files into a distributed version control system is\na bad idea because repository size quickly becomes unmanageable. Numerous\noperations take longer to complete and fresh clones become something\nthat you start and wait for a bit before coming back to them.\nUsing <tt><span class=\"pre\">git-fat</span></tt> allows you to separate the storage of large-files from\nthe source while still having them in the working directory for your project.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Cloning the source code remains fast because binaries are not\nincluded</li>\n<li>Binary files really exist in your working directory and are not\nsoft-links</li>\n<li>Only depends on Python 2.7 and a backend</li>\n<li>Supports anonymous downloads of files over http</li>\n</ul>\n</div>\n<div id=\"compatibility\">\n<h2>Compatibility</h2>\n<p>OS support: Linux, Mac, Windows.</p>\n<p>Python support: only 2.x</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install <tt><span class=\"pre\">git-fat</span></tt> using pip.</p>\n<pre>pip install git-fat\n</pre>\n<p>Or you can install it simply by placing it on your path.</p>\n<pre>curl https://raw.github.com/cyaninc/git-fat/master/git_fat/git_fat.py \\\n| sudo tee /usr/local/bin/git-fat &amp;&amp; sudo chmod +x /usr/local/bin/git-fat\n</pre>\n</div>\n<div id=\"installation-on-windows\">\n<h2>Installation on Windows</h2>\n<p>To install from PyPI type:</p>\n<pre>pip install --upgrade git-fat\n</pre>\n<p>It is required for the Python27/Scripts directory to be in PATH.</p>\n<p>See also other scripts in the win32/ directory:</p>\n<ul>\n<li>install_win.py - this script ensures that a binary wheel package (.whl)\nis installed from PyPI. If for example there is a Linux source package\n(.tar.gz) available and its version number is higher than any of the\navailable .whl packages, then the pip tool would install the Linux\nsource package and for obvious reasons it wouldn\u2019t work.</li>\n<li>run_tests_xxx.bat - run unit tests</li>\n<li>setup.bat - install package from sources</li>\n<li>setup_wheel.bat - create a binary Python Wheel package in the dist/\ndirectory and install that package</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>First, create a\n<a href=\"http://git-scm.com/book/en/Customizing-Git-Git-Attributes\" rel=\"nofollow\">git attributes</a>\nfile in the root of your repository. This file determines which files\nget converted to <tt><span class=\"pre\">git-fat</span></tt> files.</p>\n<pre>cat &gt;&gt; .gitattributes &lt;&lt;EOF\n*.deb filter=fat -crlf\n*.gz filter=fat -crlf\n*.zip filter=fat -crlf\nEOF\n</pre>\n<p>Next, create a <tt>.gitfat</tt> configuration file in the root of your repo\nthat contains the location of the remote store for the binary files.\nOptionally include the ssh user and port if non-standard. Also,\noptionally include an http remote for anonymous clones.</p>\n<pre>[rsync]\nremote = storage.example.com:/path/to/store\nuser = git\nport = 2222\n[http]\nremote = http://storage.example.com/store\n</pre>\n<p>Commit those files so that others will be able to use them.</p>\n<p>Initialize the repository. This adds a line to <tt>.git/config</tt> telling\ngit what command to run for the <tt>fat</tt> filter is in the\n<tt>.gitattributes</tt> file.</p>\n<pre>git fat init\n</pre>\n<p>Now when you add a file that matches a pattern in the <tt>.gitattributes</tt>\nfile, it will be converted to a fat placeholder file before getting\ncommitted to the repository. After you\u2019ve added a file <strong>remember to push\nit to the fat store</strong>, otherwise people won\u2019t get the binary file when\nthey try to pull fat-files.</p>\n<pre>git fat push\n</pre>\n<p>After we\u2019ve done a new clone of a repository using <tt><span class=\"pre\">git-fat</span></tt>, to get\nthe additional files we do a fat pull.  This will pull the default backend\nas determined by the first entry in the <tt>.gitfat</tt> file for the repo.</p>\n<pre>git fat pull\n</pre>\n<p>To specify which backend to use when pulling or pushing files, then simply\nlist the backend type after the pull or push command.</p>\n<pre>git fat pull http\n</pre>\n<p>To list the files managed by <tt><span class=\"pre\">git-fat</span></tt></p>\n<pre>git fat list\n</pre>\n<p>To get a summary of the orphan and stale files in the repository</p>\n<pre>git fat status\n</pre>\n<p>Orphans are files that exist as placeholders in the working copy. Stale\nfiles are files that are in the <tt>.git/fat/objects</tt> directory, but have\nno working copy associated with them (e.g. old versions of files).</p>\n<p>To find files over a certain size, use git fat find. This example finds\nall objects greater than 10MB in git\u2019s database and prints them out.</p>\n<pre>git fat find 10485760\n</pre>\n</div>\n<div id=\"implementation-notes\">\n<h2>Implementation notes</h2>\n<p>For many commands, <tt><span class=\"pre\">git-fat</span></tt> by default only checks the current\n<tt>HEAD</tt> for placeholder files to clone. This can save on bandwidth for\nfrequently changing large files and also saves on processing time for\nvery large repositories. To force commands to search the entire history\nfor placeholders and pull all files, call <tt><span class=\"pre\">git-fat</span></tt> with <tt><span class=\"pre\">-a</span></tt>. e.g.</p>\n<pre>git fat -a pull\n</pre>\n<p>If you add <tt><span class=\"pre\">git-fat</span></tt> to an existing repository, the default behavior\nis to not convert existing binary files to <tt><span class=\"pre\">git-fat</span></tt>. Converting a\nfile that already exists in the history for git would not save any\nspace. Once the file is changed or renamed, it will then be added to the\nfat store.</p>\n<p>To setup an http server to accept <tt><span class=\"pre\">git-fat</span></tt> requests, just configure a\nwebserver to have a url serve up the <tt><span class=\"pre\">git-fat</span></tt> directory on the\nserver, and point the <tt>.gitfat</tt> http remote to that url.</p>\n</div>\n<div id=\"retroactive-import\">\n<h2>Retroactive Import</h2>\n<p>You can retroactively import a repository to <tt><span class=\"pre\">git-fat</span></tt> using a combination\nof <tt>find</tt> and <tt><span class=\"pre\">index-filter</span></tt> used with git\u2019s <tt><span class=\"pre\">filter-branch</span></tt> command.</p>\n<p>Before you do this, make sure you understand the consequences of\n<a href=\"http://git-scm.com/book/ch6-4.html\" rel=\"nofollow\">rewriting history</a> and be sure to\nbackup your repository before starting.</p>\n<p>First, clone the repository and find all the large files with the\n<tt>git fat find</tt> command.</p>\n<pre>darthurdent at betelgeuse in /tmp/git-fat-demo (master)\n$ git fat find 5123123\n761a63bf287867da92eb420fca515363c4b02ad1 9437184 flowerpot.tar.gz\n6c5d4031e03408e34ae476c5053ee497a91ac37b 10485760 whale.tar.gz\n</pre>\n<p>Review the files and make sure that they\u2019re what you want to exclude from the\nrepository.  If the list looks good, put the file names into another file that\nwill be read from during <tt><span class=\"pre\">filter-branch</span></tt>.</p>\n<pre>darthurdent at betelgeuse in /tmp/git-fat-demo (master)\n$ git fat find 5123123 | cut -d' ' -f3- &gt; /tmp/towel\n\ndarthurdent at betelgeuse in /tmp/git-fat-demo (master)\n$ cat /tmp/towel\nflowerpot.tar.gz\nwhale.tar.gz\n\ndarthurdent at betelgeuse in /tmp/git-fat-demo (master)\n$ ll\ntotal 19M\ndrwxrwxr-x 3 darthurdent darthurdent 4.0K Dec 10 13:42 .\ndrwxrwxrwt 6 root         root          76K Dec 10 13:42 ..\ndrwxrwxr-x 6 darthurdent darthurdent 4.0K Dec 10 13:42 .git\n-rw-r--r-- 1 darthurdent darthurdent 9.0M Dec 10 13:37 flowerpot.tar.gz\n-rw-r--r-- 1 darthurdent darthurdent  10M Dec 10 13:37 whale.tar.gz\n</pre>\n<p>Do the <tt><span class=\"pre\">filter-branch</span></tt> using <tt>git fat <span class=\"pre\">index-filter</span></tt> as the index filter.\nPass in the file name containing the paths to files you want to exclude.</p>\n<pre>darthurdent at betelgeuse in /tmp/git-fat-demo (master)\n$ git filter-branch --index-filter 'git fat index-filter /tmp/towel'\\\n    --tag-name-filter cat -- --all\nRewrite 28cfba441aac92992c3f80dae97cd1c19b3befad (2/2)\nRef 'refs/heads/master' was rewritten\n</pre>\n<p>Review the changes made to the repository.</p>\n<pre>darthurdent at betelgeuse in /tmp/git-fat-demo (master)\n$ ll\ntotal 19M\ndrwxrwxr-x 3 darthurdent darthurdent 4.0K Dec 10 13:42 .\ndrwxrwxrwt 6 root         root          76K Dec 10 13:42 ..\ndrwxrwxr-x 6 darthurdent darthurdent 4.0K Dec 10 13:42 .git\n-rw-rw-r-- 1 darthurdent darthurdent   64 Dec 10 13:42 .gitattributes\n-rw-rw-r-- 1 darthurdent darthurdent 9.0M Dec 10 13:42 flowerpot.tar.gz\n-rw-rw-r-- 1 darthurdent darthurdent  10M Dec 10 13:42 whale.tar.gz\n\ndarthurdent at betelgeuse in /tmp/git-fat-demo (master)\n$ cat .gitattributes\nflowerpot.tar.gz filter=fat -text\nwhale.tar.gz filter=fat -text\n\ndarthurdent at betelgeuse in /tmp/git-fat-demo (master)\n$ git cat-file -p $(git hash-object whale.tar.gz)\n#$# git-fat 8c206a1a87599f532ce68675536f0b1546900d7a             10485760\n</pre>\n<p>Remove all the old and dangling references by doing a clone of the repository\nyou just cleaned.  The <tt><span class=\"pre\">file://</span></tt> uri is\n<a href=\"http://git-scm.com/book/ch4-1.html\" rel=\"nofollow\">important</a> here.</p>\n<pre>darthurdent at betelgeuse in /tmp/git-fat-demo (master)\n$ cd .. &amp;&amp; git clone file://git-fat-demo git-fat-clean\n</pre>\n</div>\n<div id=\"related-projects\">\n<h2>Related projects</h2>\n<ul>\n<li><a href=\"http://git-annex.branchable.com\" rel=\"nofollow\">git-annex</a> is a far more\ncomprehensive solution, but was designed for a more distributed use\ncase and has more dependencies.</li>\n<li><a href=\"https://github.com/schacon/git-media\" rel=\"nofollow\">git-media</a> adopts a similar\napproach to <tt><span class=\"pre\">git-fat</span></tt>, but with a different synchronization\nphilosophy and with many Ruby dependencies.</li>\n</ul>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>To run the tests, simply run <tt>python setup.py test</tt>.</p>\n<p>To use the development version of <tt><span class=\"pre\">git-fat</span></tt> for manual testing, run\n<tt>pip install <span class=\"pre\">-U</span> .</tt> (suggest doing that in a virtualenv).</p>\n<p>Master branch is a stable branch with the latest release at the HEAD.</p>\n</div>\n<div id=\"improvements\">\n<h2>Improvements</h2>\n<ul>\n<li>Better Documentation (esp. setting up a server)</li>\n<li>Improved Testing</li>\n<li>config file location argument (global)</li>\n<li>cli option to specify which backend to use for push and pull (http, rsync, etc)</li>\n<li>Python 3 compatibility (without six)</li>\n<li>Really implement pattern matching</li>\n<li>Git hooks</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1536466, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4e12857a6595fc5111f871a1e42820d8", "sha256": "44884f09aace582e4437276275a160de802a52a9a583d2ca2fb5f09b51f2c17e"}, "downloads": -1, "filename": "git-fat-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4e12857a6595fc5111f871a1e42820d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12516, "upload_time": "2013-12-04T19:29:39", "upload_time_iso_8601": "2013-12-04T19:29:39.482347Z", "url": "https://files.pythonhosted.org/packages/8d/cb/ec4b60dd0d7925e15113c4ccfe9701e05e8bef089b9d637a2cea514bc449/git-fat-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4ef0123f441a016a7613de93b9c63001", "sha256": "1955d99db39f04e3e09fa250ac876a342afce58c7cf243276937aa73a158512c"}, "downloads": -1, "filename": "git-fat-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4ef0123f441a016a7613de93b9c63001", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10920, "upload_time": "2013-12-08T22:02:55", "upload_time_iso_8601": "2013-12-08T22:02:55.526244Z", "url": "https://files.pythonhosted.org/packages/db/d8/75f7548bf3d4b331e2615e74b52f44ad9ddfb2d95b078b7d5174ab9a0691/git-fat-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b00c39c718b0f9f1374e8800d5cbad78", "sha256": "b50607777cf789327fce74405c44a8ab9510949e3beb4427a93c967934b0854c"}, "downloads": -1, "filename": "git-fat-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b00c39c718b0f9f1374e8800d5cbad78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13113, "upload_time": "2013-12-10T23:39:25", "upload_time_iso_8601": "2013-12-10T23:39:25.326836Z", "url": "https://files.pythonhosted.org/packages/dd/e7/5d5a064f0a98e2329865dc25b7e7fd696158acd7a12fd8e01126d6f11047/git-fat-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "982bd0c11717b0b737952d6028e631a3", "sha256": "c6fb0bc5b77ddbb86b55edb366c49cd6cfe1fb403886a43e22a7614d2e6c0097"}, "downloads": -1, "filename": "git-fat-0.2.1.tar.gz", "has_sig": false, "md5_digest": "982bd0c11717b0b737952d6028e631a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13207, "upload_time": "2013-12-17T01:18:37", "upload_time_iso_8601": "2013-12-17T01:18:37.811402Z", "url": "https://files.pythonhosted.org/packages/20/48/54b4691fdf06e44ca835a52aa3fa4f6246da49c997cbde6f4711e303c070/git-fat-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "e94c6c0bd3747f81bca30756a9ce0b33", "sha256": "76ffbf7708316c23a8b8474b301a313b0a27b49adada32059ec18e4bd510a021"}, "downloads": -1, "filename": "git-fat-0.2.2.tar.gz", "has_sig": false, "md5_digest": "e94c6c0bd3747f81bca30756a9ce0b33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13573, "upload_time": "2013-12-17T20:26:02", "upload_time_iso_8601": "2013-12-17T20:26:02.328024Z", "url": "https://files.pythonhosted.org/packages/9b/d2/b85ed755d38543e98ebc6288be873c27ef7e53d023dbe3725199f4b91dd5/git-fat-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "592008525a9e45236ad9ae49ff41f9c6", "sha256": "9f663f9a52330a2a1f4e2f601c394b5c4b7f8db75dcdf42504c93c4313b63157"}, "downloads": -1, "filename": "git-fat-0.2.3.tar.gz", "has_sig": false, "md5_digest": "592008525a9e45236ad9ae49ff41f9c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13570, "upload_time": "2014-01-09T01:30:12", "upload_time_iso_8601": "2014-01-09T01:30:12.365915Z", "url": "https://files.pythonhosted.org/packages/44/ff/c86005a203fba13e1f14c47cd760f38e0a4ae21801ff3f5a4b3f76cfdd78/git-fat-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "6f7ae812eb7d068e6359c51dde5da29e", "sha256": "f451e79da8e9238365840b317bbc02c8f472d727d8945e4cf005f4f8df431043"}, "downloads": -1, "filename": "git-fat-0.2.4.tar.gz", "has_sig": false, "md5_digest": "6f7ae812eb7d068e6359c51dde5da29e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13608, "upload_time": "2014-01-23T04:18:59", "upload_time_iso_8601": "2014-01-23T04:18:59.659247Z", "url": "https://files.pythonhosted.org/packages/c7/70/6c9a01817c173d5fac3d019f7622e9629f59dc76bc9ef961e639b15ea720/git-fat-0.2.4.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "e884f4a84ebccf071c16118d3d8c8c89", "sha256": "f505768de54994b0f8c2e1d5cb3846bf7fe1b03c3e5061d8177e7623a446795d"}, "downloads": -1, "filename": "git-fat-0.3.0.tar.gz", "has_sig": false, "md5_digest": "e884f4a84ebccf071c16118d3d8c8c89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16114, "upload_time": "2014-07-10T21:10:47", "upload_time_iso_8601": "2014-07-10T21:10:47.471239Z", "url": "https://files.pythonhosted.org/packages/f7/6d/ac1fced4ea6ebdd87791bb5ca12f50a68aa0d80ada030936d8ab4f7b21d4/git-fat-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "a3f9a463b4894fc98e9ae3023f9b3a89", "sha256": "2214b9c251b8a78c2104179e779eb9a4f7ebe43d8d3de6d783d3dc3f6a9b7bb6"}, "downloads": -1, "filename": "git-fat-0.3.1.tar.gz", "has_sig": false, "md5_digest": "a3f9a463b4894fc98e9ae3023f9b3a89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16186, "upload_time": "2014-07-11T20:13:29", "upload_time_iso_8601": "2014-07-11T20:13:29.311821Z", "url": "https://files.pythonhosted.org/packages/e7/45/1631c81ff009157193c56f62d5b1ec1ddd06e2bd76e5da0e5a8e2fa48217/git-fat-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "2be8a4ec0b5f7165953a0ff30688aa24", "sha256": "8bbb5e7fb2c28ce433206106bbee2538c1a0a9cf7e0ded4e844df232bc5cc11c"}, "downloads": -1, "filename": "git-fat-0.3.2.tar.gz", "has_sig": false, "md5_digest": "2be8a4ec0b5f7165953a0ff30688aa24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16231, "upload_time": "2014-08-08T23:31:08", "upload_time_iso_8601": "2014-08-08T23:31:08.757458Z", "url": "https://files.pythonhosted.org/packages/98/44/32aca04e7803d52a34fac01b4ecd071ad09ca6e01c45793ee6f8283ce59b/git-fat-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "60b488f107a76cde191461db035e686f", "sha256": "6e2643a77926d3b6333b48828f482e57c42c0676b493d30d9ebfe34e346e0b6b"}, "downloads": -1, "filename": "git-fat-0.3.3.tar.gz", "has_sig": false, "md5_digest": "60b488f107a76cde191461db035e686f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16342, "upload_time": "2014-10-03T19:46:10", "upload_time_iso_8601": "2014-10-03T19:46:10.040524Z", "url": "https://files.pythonhosted.org/packages/68/92/7decf0a17119f44f44cc973adc9914d34c9a851f1e1e88e8f42b82531414/git-fat-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "846f6a4fd8ac84f34fe823c1fbad1a95", "sha256": "ab37340b75b40f57c78662a506aa2f2dea3483dfbbd028f8e6968303c70fb56d"}, "downloads": -1, "filename": "git-fat-0.3.4.tar.gz", "has_sig": false, "md5_digest": "846f6a4fd8ac84f34fe823c1fbad1a95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16634, "upload_time": "2014-10-03T20:00:06", "upload_time_iso_8601": "2014-10-03T20:00:06.735183Z", "url": "https://files.pythonhosted.org/packages/dd/65/649e09957891ac6cb8529eb0048811136ba8c3e545adc6df8165f810766e/git-fat-0.3.4.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "c2a8b578511dc1ffc2ef746aea88736f", "sha256": "b90b373d949c06494588d0811030426b07e178c684c5ffa00bf47004eac6c155"}, "downloads": -1, "filename": "git_fat-0.4.0-cp27-none-win32.whl", "has_sig": false, "md5_digest": "c2a8b578511dc1ffc2ef746aea88736f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 2582817, "upload_time": "2015-01-30T19:06:35", "upload_time_iso_8601": "2015-01-30T19:06:35.267658Z", "url": "https://files.pythonhosted.org/packages/b8/36/4d03b33e0d94696c0d937bc2ee6467bd65c9742e87ab179085151286daae/git_fat-0.4.0-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be953f321a4fb7bba065267ea0ce972c", "sha256": "18c60e3997f7188424ce96dc6d66924de2bc63179d3a0a14b8389c014e4392cf"}, "downloads": -1, "filename": "git-fat-0.4.0.tar.gz", "has_sig": false, "md5_digest": "be953f321a4fb7bba065267ea0ce972c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21255, "upload_time": "2015-01-25T06:49:15", "upload_time_iso_8601": "2015-01-25T06:49:15.229312Z", "url": "https://files.pythonhosted.org/packages/c4/3c/b46fa0cccfff02e728c1fb24fb62b0d7d2a60ce014aeba00bb726d041fce/git-fat-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "cd472831addf7892f119654ddeda2968", "sha256": "e4da67e789385d3d431bf5a92e0d5cc8e727cc83abfa3a558880afae215c6542"}, "downloads": -1, "filename": "git_fat-0.5.0-cp27-none-win32.whl", "has_sig": false, "md5_digest": "cd472831addf7892f119654ddeda2968", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 2583423, "upload_time": "2015-05-06T22:30:11", "upload_time_iso_8601": "2015-05-06T22:30:11.881643Z", "url": "https://files.pythonhosted.org/packages/63/25/f9e8084c339e52ff0b708f1c91b65fb7fc6793fdb643171ff9fd7409ca48/git_fat-0.5.0-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c96ac4144869d1a365f16f3a84efc0d0", "sha256": "52bdfe22ef4ba3e576b5778c4e012f49ee106a45bdb31cca8d47615432e1068e"}, "downloads": -1, "filename": "git-fat-0.5.0.tar.gz", "has_sig": false, "md5_digest": "c96ac4144869d1a365f16f3a84efc0d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20056, "upload_time": "2015-05-06T06:31:53", "upload_time_iso_8601": "2015-05-06T06:31:53.147715Z", "url": "https://files.pythonhosted.org/packages/d9/83/2b8fe278813c4fe32d4eda87a4981f4258da51aaaffa56e769255c95ca40/git-fat-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cd472831addf7892f119654ddeda2968", "sha256": "e4da67e789385d3d431bf5a92e0d5cc8e727cc83abfa3a558880afae215c6542"}, "downloads": -1, "filename": "git_fat-0.5.0-cp27-none-win32.whl", "has_sig": false, "md5_digest": "cd472831addf7892f119654ddeda2968", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 2583423, "upload_time": "2015-05-06T22:30:11", "upload_time_iso_8601": "2015-05-06T22:30:11.881643Z", "url": "https://files.pythonhosted.org/packages/63/25/f9e8084c339e52ff0b708f1c91b65fb7fc6793fdb643171ff9fd7409ca48/git_fat-0.5.0-cp27-none-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c96ac4144869d1a365f16f3a84efc0d0", "sha256": "52bdfe22ef4ba3e576b5778c4e012f49ee106a45bdb31cca8d47615432e1068e"}, "downloads": -1, "filename": "git-fat-0.5.0.tar.gz", "has_sig": false, "md5_digest": "c96ac4144869d1a365f16f3a84efc0d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20056, "upload_time": "2015-05-06T06:31:53", "upload_time_iso_8601": "2015-05-06T06:31:53.147715Z", "url": "https://files.pythonhosted.org/packages/d9/83/2b8fe278813c4fe32d4eda87a4981f4258da51aaaffa56e769255c95ca40/git-fat-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:05 2020"}