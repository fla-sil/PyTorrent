{"info": {"author": "Dennis Ploeger", "author_email": "develop@dieploegers.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Application Frameworks"], "description": "django-restviews\nREST-based Django CrUD-Views\n\nIntroduction\n\nDjango is a great framework for efficient, rapid, maintainable and scalable web applications. With the addition of REST frameworks like the Django REST Framework, an API-based approach to web development is also possible.\n\nThis Django application fills one specific gap: If you have an API-based approach to your development, you don't want to build a separate web UI, that is based on the Django view/template/model-framework and doesn't adhere to your own API-standards.\n\nYou want a UI, that specifically uses the API for data retrieval and manipulation. Having the API and not the web UI as a first class citizen is a primary goal of an API-based approach.\n\nThe problem is, that you loose a whole bunch of development speed if you have to leave Django's wonderful generic class based views behind and recreate the same functionality the AJAX/API-way.\n\nDjango-Restviews helps you by offering a complete CrUD-framework (Create, Update, Delete) and a data grid that all use the API for data retrieval and manipulation and in that way offers an alternative for Django's own class based generic views.\n\nFor more information, please visit https://github.com/dploeger/django-restviews", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dploeger/django-restviews", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-restviews", "package_url": "https://pypi.org/project/django-restviews/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-restviews/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/dploeger/django-restviews"}, "release_url": "https://pypi.org/project/django-restviews/1.0-rc1/", "requires_dist": null, "requires_python": null, "summary": "REST-based Django CrUD-Views", "version": "1.0-rc1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>django-restviews\nREST-based Django CrUD-Views</p>\n<p>Introduction</p>\n<p>Django is a great framework for efficient, rapid, maintainable and scalable web applications. With the addition of REST frameworks like the Django REST Framework, an API-based approach to web development is also possible.</p>\n<p>This Django application fills one specific gap: If you have an API-based approach to your development, you don\u2019t want to build a separate web UI, that is based on the Django view/template/model-framework and doesn\u2019t adhere to your own API-standards.</p>\n<p>You want a UI, that specifically uses the API for data retrieval and manipulation. Having the API and not the web UI as a first class citizen is a primary goal of an API-based approach.</p>\n<p>The problem is, that you loose a whole bunch of development speed if you have to leave Django\u2019s wonderful generic class based views behind and recreate the same functionality the AJAX/API-way.</p>\n<p>Django-Restviews helps you by offering a complete CrUD-framework (Create, Update, Delete) and a data grid that all use the API for data retrieval and manipulation and in that way offers an alternative for Django\u2019s own class based generic views.</p>\n<p>For more information, please visit <a href=\"https://github.com/dploeger/django-restviews\" rel=\"nofollow\">https://github.com/dploeger/django-restviews</a></p>\n\n          </div>"}, "last_serial": 1034892, "releases": {"1.0-rc1": [{"comment_text": "", "digests": {"md5": "5f228204d3e54b53ed31df0a355b3a39", "sha256": "b7554cfb9024eda02322b08cdc1aadfc1669621b2f8160d9b23e9a46e3b37f98"}, "downloads": -1, "filename": "django-restviews-1.0-rc1.tar.gz", "has_sig": false, "md5_digest": "5f228204d3e54b53ed31df0a355b3a39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19629, "upload_time": "2014-03-19T13:00:44", "upload_time_iso_8601": "2014-03-19T13:00:44.480335Z", "url": "https://files.pythonhosted.org/packages/68/3d/6b67134bc074e974bae42fe4303f810f74c6621cb0f8ad7f094cffd4612e/django-restviews-1.0-rc1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5f228204d3e54b53ed31df0a355b3a39", "sha256": "b7554cfb9024eda02322b08cdc1aadfc1669621b2f8160d9b23e9a46e3b37f98"}, "downloads": -1, "filename": "django-restviews-1.0-rc1.tar.gz", "has_sig": false, "md5_digest": "5f228204d3e54b53ed31df0a355b3a39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19629, "upload_time": "2014-03-19T13:00:44", "upload_time_iso_8601": "2014-03-19T13:00:44.480335Z", "url": "https://files.pythonhosted.org/packages/68/3d/6b67134bc074e974bae42fe4303f810f74c6621cb0f8ad7f094cffd4612e/django-restviews-1.0-rc1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:59 2020"}