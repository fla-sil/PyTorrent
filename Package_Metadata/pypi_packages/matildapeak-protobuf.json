{"info": {"author": "Alan Christie", "author_email": "alan.christie@matildapeak.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Other Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Cross-product protocol buffers\n==============================\n\n.. image:: https://gitlab.com/matilda.peak/protobuf/badges/master/pipeline.svg\n   :target: https://gitlab.com/matilda.peak/protobuf\n   :alt: Pipeline Status (protobuf)\n\nA library of python bindings for protocol buffer definitions used by one or\nmore products in the Matilda Peak product suite.\n\nThe protocol buffers are used across multiple components and languages.\nAt the outset we anticipate supporting Python, and Java/Scala. The root\nof all packages is ``src/main`` as required by build tools like ``Gradle``.\nFrom there the directory must be ``matildapeak`` followed by component\ndirectories or a ``common`` directory. An example protocol message\nfile might be::\n\n    src/main/matildapeak/patterncomponent/DelayMessage.proto\n\nInstallation\n============\n\nThe protocol buffers are published on `PyPI`_ and can be installed from\nthere::\n\n    pip install matildapeak-prototobuf\n\n.. _PyPI: https://pypi.org/project/matildapeak-protobuf\n\nGet in touch\n============\n\n- Report bugs, suggest features or view the source code `on GitLab`_.\n\n.. _on GitLab: https://gitlab.com/matilda.peak/protobuf\n\nFixing the Python import\n------------------------\nThe Python protocol buffer bindings use *relative* imports and do not\nfunction properly (at least this is true of Python 3.6 and\nprotobuf 3.1.0).\n\nThe issue appears to be well `documented`_ but a workaround is to adjust\nthe system path to include the directory of the component's\nsite package. In a clean virtual environment this is easily achieved\nwith the following::\n\n    import os\n    import sys\n    sys.path.append(os.path.join(sys.path[-1], 'patterncomponent'))\n\nRather than use ``[-1]`` a *safer* approach might be to locate the\n``site-packages`` directory in the system path and use that - it\nmay not be the last entry on the path.\n\n.. _documented: https://github.com/google/protobuf/issues/1491\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/matilda.peak/protobuf", "keywords": "protobuf protoc messaging", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "matildapeak-protobuf", "package_url": "https://pypi.org/project/matildapeak-protobuf/", "platform": "any", "project_url": "https://pypi.org/project/matildapeak-protobuf/", "project_urls": {"Homepage": "https://gitlab.com/matilda.peak/protobuf"}, "release_url": "https://pypi.org/project/matildapeak-protobuf/2018.2/", "requires_dist": ["protobuf (==3.3.0)"], "requires_python": "", "summary": "Cross-product protocol buffers", "version": "2018.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"cross-product-protocol-buffers\">\n<h2>Cross-product protocol buffers</h2>\n<a href=\"https://gitlab.com/matilda.peak/protobuf\" rel=\"nofollow\"><img alt=\"Pipeline Status (protobuf)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/960cba1d702b96295ca6ced158db5ea85a760e4c/68747470733a2f2f6769746c61622e636f6d2f6d6174696c64612e7065616b2f70726f746f6275662f6261646765732f6d61737465722f706970656c696e652e737667\"></a>\n<p>A library of python bindings for protocol buffer definitions used by one or\nmore products in the Matilda Peak product suite.</p>\n<p>The protocol buffers are used across multiple components and languages.\nAt the outset we anticipate supporting Python, and Java/Scala. The root\nof all packages is <tt>src/main</tt> as required by build tools like <tt>Gradle</tt>.\nFrom there the directory must be <tt>matildapeak</tt> followed by component\ndirectories or a <tt>common</tt> directory. An example protocol message\nfile might be:</p>\n<pre>src/main/matildapeak/patterncomponent/DelayMessage.proto\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The protocol buffers are published on <a href=\"https://pypi.org/project/matildapeak-protobuf\" rel=\"nofollow\">PyPI</a> and can be installed from\nthere:</p>\n<pre>pip install matildapeak-prototobuf\n</pre>\n</div>\n<div id=\"get-in-touch\">\n<h2>Get in touch</h2>\n<ul>\n<li>Report bugs, suggest features or view the source code <a href=\"https://gitlab.com/matilda.peak/protobuf\" rel=\"nofollow\">on GitLab</a>.</li>\n</ul>\n<div id=\"fixing-the-python-import\">\n<h3>Fixing the Python import</h3>\n<p>The Python protocol buffer bindings use <em>relative</em> imports and do not\nfunction properly (at least this is true of Python 3.6 and\nprotobuf 3.1.0).</p>\n<p>The issue appears to be well <a href=\"https://github.com/google/protobuf/issues/1491\" rel=\"nofollow\">documented</a> but a workaround is to adjust\nthe system path to include the directory of the component\u2019s\nsite package. In a clean virtual environment this is easily achieved\nwith the following:</p>\n<pre>import os\nimport sys\nsys.path.append(os.path.join(sys.path[-1], 'patterncomponent'))\n</pre>\n<p>Rather than use <tt><span class=\"pre\">[-1]</span></tt> a <em>safer</em> approach might be to locate the\n<tt><span class=\"pre\">site-packages</span></tt> directory in the system path and use that - it\nmay not be the last entry on the path.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4088389, "releases": {"2018.1": [{"comment_text": "", "digests": {"md5": "4657c78f73e8a44ee622515e3150c58e", "sha256": "7c00cfb009f80f3b192218eec5135312513c3ffc0d029118760f73249a168244"}, "downloads": -1, "filename": "matildapeak_protobuf-2018.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4657c78f73e8a44ee622515e3150c58e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4883, "upload_time": "2018-07-14T17:43:35", "upload_time_iso_8601": "2018-07-14T17:43:35.918969Z", "url": "https://files.pythonhosted.org/packages/ca/8d/200ac7e754dcb795c25d3d80d269a781f61aea61ee2ee27be79759324183/matildapeak_protobuf-2018.1-py3-none-any.whl", "yanked": false}], "2018.2": [{"comment_text": "", "digests": {"md5": "6197c0582f6bd145af1763fe34163989", "sha256": "a577893624a8d8bdb21e661d8235a391bce1059b73bef10d21937ee4c188a9b9"}, "downloads": -1, "filename": "matildapeak_protobuf-2018.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6197c0582f6bd145af1763fe34163989", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5047, "upload_time": "2018-07-21T11:48:37", "upload_time_iso_8601": "2018-07-21T11:48:37.519480Z", "url": "https://files.pythonhosted.org/packages/8d/8a/6773beb77b8a826a72ebd915bec1d684e7f93e0725b14eeaaef1423376b9/matildapeak_protobuf-2018.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6197c0582f6bd145af1763fe34163989", "sha256": "a577893624a8d8bdb21e661d8235a391bce1059b73bef10d21937ee4c188a9b9"}, "downloads": -1, "filename": "matildapeak_protobuf-2018.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6197c0582f6bd145af1763fe34163989", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5047, "upload_time": "2018-07-21T11:48:37", "upload_time_iso_8601": "2018-07-21T11:48:37.519480Z", "url": "https://files.pythonhosted.org/packages/8d/8a/6773beb77b8a826a72ebd915bec1d684e7f93e0725b14eeaaef1423376b9/matildapeak_protobuf-2018.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:57:20 2020"}