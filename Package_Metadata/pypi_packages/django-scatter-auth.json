{"info": {"author": "Bearle", "author_email": "tech@bearle.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "=============================\ndjango-scatter-auth\n=============================\n\n.. image:: https://badge.fury.io/py/django-scatter-auth.svg\n    :target: https://badge.fury.io/py/django-scatter-auth\n\n.. image:: https://travis-ci.org/Bearle/django-scatter-auth.svg?branch=master\n    :target: https://travis-ci.org/Bearle/django-scatter-auth\n\n.. image:: https://codecov.io/gh/Bearle/django-scatter-auth/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/Bearle/django-scatter-auth\n\ndjango-scatter-auth is a pluggable Django app that enables login/signup via Scatter (EOS extension wallet). The user authenticates themselves by digitally signing the hostname with their wallet's private key.\n\n.. image:: https://github.com/Bearle/django-scatter-auth/blob/master/docs/_static/django_scatter_auth_test2.gif?raw=true\n\nDocumentation\n-------------\n\nThe full documentation is at https://django-scatter-auth.readthedocs.io.\n\nExample project\n---------------\n\nhttps://github.com/Bearle/django-scatter-auth/tree/master/example\n\nYou can check out our example project by cloning the repo and heading into example/ directory.\nThere is a README file for you to check, also.\n\n\nFeatures\n--------\n\n* Scatter API login, signup\n* Scatter Django forms for signup, login\n* Checks signature (validation)\n* Uses hostname signing as proof of private key posession\n* Easy to set up and use (just one click)\n* Custom auth backend\n* VERY customizable - uses Django settings, allows for custom User model\n* Vanilla Javascript helpers included\n\nQuickstart\n----------\nInstall django-scatter-auth with pip::\n\n    pip install django-scatter-auth\n\nAdd it to your `INSTALLED_APPS`:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        'scatterauth.apps.scatterauthConfig',\n        ...\n    )\n\nSet `'scatterauth.backend.ScatterAuthBackend'` as your authentication backend:\n\n.. code-block:: python\n\n    AUTHENTICATION_BACKENDS = [\n    'django.contrib.auth.backends.ModelBackend',\n    'scatterauth.backend.ScatterAuthBackend'\n    ]\n\n\nSet your User model's field to use as public key storage:\n\n.. code-block:: python\n\n    SCATTERAUTH_USER_PUBKEY_FIELD = 'username'\n\nAnd if you have some other fields you want to be in the SignupForm, add them too:\n\n.. code-block:: python\n\n    SCATTERAUTH_USER_SIGNUP_FIELDS = ['email',]\n\n\nAdd django-scatter-auth's URL patterns:\n\n.. code-block:: python\n\n    from scatterauth import urls as scatterauth_urls\n\n\n    urlpatterns = [\n        ...\n        url(r'^', include(scatterauth_urls)),\n        ...\n    ]\n\nAdd some javascript to handle login:\n\n\n.. code-block:: html\n\n    <script src=\"{% static 'scatterauth/js/scatterauth.js' %}\"></script>\n\n\n.. code-block:: javascript\n\n    var login_url = '{% url 'scatterauth_login_api' %}';\n    document.addEventListener('scatterLoaded', scatterExtension => {\n      console.log('scatter loaded');\n      if (scatter.identity) {\n        console.log(\"Identity found\");\n        loginWithAuthenticate(login_url,console.log,console.log,console.log,console.log, function (resp) {\n          window.location.replace(resp.redirect_url);\n        });\n      } else {\n        console.log('identity not found, have to signup');\n      }\n    });\n\nYou can access signup using {% url 'scatterauth_signup' %} and API signup using {% url 'scatterauth_signup_api' %}.\n\nIf you have any questions left, head to the example app https://github.com/Bearle/django-scatter-auth/tree/master/example\n\n\n\nImportant details and FAQ\n-------------------------\n\n1. *If you set a custom public key field (SCATTERAUTH_USER_PUBKEY_FIELD), it MUST be unique (unique=True).*\n\nThis is needed because if it's not, the user can register a new account with the same public key as the other one,\nmeaning that the user can now login as any of those accounts (sometimes being the wrong one).\n\n2. *How do i deal with user passwords or Password is not set*\n\nThere should be some code in your project that generates a password using ``User.objects.make_random_password`` and sends it to a user email.\nOr, even better, sends them a 'restore password' link.\nAlso, it's possible to copy signup_view to your project, assign it a url, and add the corresponding lines to set some password for a user.\n\n3. *Why don't i have to sign a message? It's needed in django-web3-auth, how this app is secure?*\n\nThis app uses scatter's ``authenticate`` function to handle message signing - hostname being the signed message.\nThis means that the user & the client share knowledge of the original message and the server can verify\nclient's possession of the private key corresponding to the public key.\n\n\nRunning Tests\n-------------\n\nDoes the code actually work?\n\n::\n\n    source <YOURVIRTUALENV>/bin/activate\n    (myenv) $ pip install tox\n    (myenv) $ tox\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n0.2.0 (2020-03-14)\n++++++++++++++++++\n\n* Added support for Scatter-Desktop\n\n0.1.1 (2018-09-10)\n++++++++++++++++++\n\n* Fixed signup bug in js - added 'pubkey_field_name' param\n\n0.1.0 (2018-08-13)\n++++++++++++++++++\n\n* First release on PyPi\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Bearle/django-scatter-auth", "keywords": "django-scatter-auth", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-scatter-auth", "package_url": "https://pypi.org/project/django-scatter-auth/", "platform": "", "project_url": "https://pypi.org/project/django-scatter-auth/", "project_urls": {"Homepage": "https://github.com/Bearle/django-scatter-auth"}, "release_url": "https://pypi.org/project/django-scatter-auth/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "django-scatter-auth is a pluggable Django app that enables login/signup via Scatter (EOS). The user authenticates himself by digitally signing the session key with their wallet's private key.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/django-scatter-auth\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/django-scatter-auth.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/047b55cc290860be45ed72baad70381c46442ded/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d736361747465722d617574682e737667\"></a>\n<a href=\"https://travis-ci.org/Bearle/django-scatter-auth\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/Bearle/django-scatter-auth.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e89c39262288ebeab4d3ee68a80f20fdc9918c3e/68747470733a2f2f7472617669732d63692e6f72672f426561726c652f646a616e676f2d736361747465722d617574682e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/Bearle/django-scatter-auth\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/Bearle/django-scatter-auth/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/960c2251bf8f7ca659653c93d0169cad28b48d4a/68747470733a2f2f636f6465636f762e696f2f67682f426561726c652f646a616e676f2d736361747465722d617574682f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<p>django-scatter-auth is a pluggable Django app that enables login/signup via Scatter (EOS extension wallet). The user authenticates themselves by digitally signing the hostname with their wallet\u2019s private key.</p>\n<img alt=\"https://github.com/Bearle/django-scatter-auth/blob/master/docs/_static/django_scatter_auth_test2.gif?raw=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/44dd245e400cbb9695567517dc865a1845b5b486/68747470733a2f2f6769746875622e636f6d2f426561726c652f646a616e676f2d736361747465722d617574682f626c6f622f6d61737465722f646f63732f5f7374617469632f646a616e676f5f736361747465725f617574685f74657374322e6769663f7261773d74727565\">\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The full documentation is at <a href=\"https://django-scatter-auth.readthedocs.io\" rel=\"nofollow\">https://django-scatter-auth.readthedocs.io</a>.</p>\n</div>\n<div id=\"example-project\">\n<h2>Example project</h2>\n<p><a href=\"https://github.com/Bearle/django-scatter-auth/tree/master/example\" rel=\"nofollow\">https://github.com/Bearle/django-scatter-auth/tree/master/example</a></p>\n<p>You can check out our example project by cloning the repo and heading into example/ directory.\nThere is a README file for you to check, also.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Scatter API login, signup</li>\n<li>Scatter Django forms for signup, login</li>\n<li>Checks signature (validation)</li>\n<li>Uses hostname signing as proof of private key posession</li>\n<li>Easy to set up and use (just one click)</li>\n<li>Custom auth backend</li>\n<li>VERY customizable - uses Django settings, allows for custom User model</li>\n<li>Vanilla Javascript helpers included</li>\n</ul>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Install django-scatter-auth with pip:</p>\n<pre>pip install django-scatter-auth\n</pre>\n<p>Add it to your <cite>INSTALLED_APPS</cite>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'scatterauth.apps.scatterauthConfig'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Set <cite>\u2018scatterauth.backend.ScatterAuthBackend\u2019</cite> as your authentication backend:</p>\n<pre><span class=\"n\">AUTHENTICATION_BACKENDS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n<span class=\"s1\">'django.contrib.auth.backends.ModelBackend'</span><span class=\"p\">,</span>\n<span class=\"s1\">'scatterauth.backend.ScatterAuthBackend'</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Set your User model\u2019s field to use as public key storage:</p>\n<pre><span class=\"n\">SCATTERAUTH_USER_PUBKEY_FIELD</span> <span class=\"o\">=</span> <span class=\"s1\">'username'</span>\n</pre>\n<p>And if you have some other fields you want to be in the SignupForm, add them too:</p>\n<pre><span class=\"n\">SCATTERAUTH_USER_SIGNUP_FIELDS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'email'</span><span class=\"p\">,]</span>\n</pre>\n<p>Add django-scatter-auth\u2019s URL patterns:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">scatterauth</span> <span class=\"kn\">import</span> <span class=\"n\">urls</span> <span class=\"k\">as</span> <span class=\"n\">scatterauth_urls</span>\n\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"n\">scatterauth_urls</span><span class=\"p\">)),</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Add some javascript to handle login:</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"{% static 'scatterauth/js/scatterauth.js' %}\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n</pre>\n<pre><span class=\"kd\">var</span> <span class=\"nx\">login_url</span> <span class=\"o\">=</span> <span class=\"s1\">'{% url '</span><span class=\"nx\">scatterauth_login_api</span><span class=\"s1\">' %}'</span><span class=\"p\">;</span>\n<span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">addEventListener</span><span class=\"p\">(</span><span class=\"s1\">'scatterLoaded'</span><span class=\"p\">,</span> <span class=\"nx\">scatterExtension</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'scatter loaded'</span><span class=\"p\">);</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">scatter</span><span class=\"p\">.</span><span class=\"nx\">identity</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">\"Identity found\"</span><span class=\"p\">);</span>\n    <span class=\"nx\">loginWithAuthenticate</span><span class=\"p\">(</span><span class=\"nx\">login_url</span><span class=\"p\">,</span><span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">,</span><span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">,</span><span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">,</span><span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">resp</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nx\">location</span><span class=\"p\">.</span><span class=\"nx\">replace</span><span class=\"p\">(</span><span class=\"nx\">resp</span><span class=\"p\">.</span><span class=\"nx\">redirect_url</span><span class=\"p\">);</span>\n    <span class=\"p\">});</span>\n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'identity not found, have to signup'</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">});</span>\n</pre>\n<p>You can access signup using {% url \u2018scatterauth_signup\u2019 %} and API signup using {% url \u2018scatterauth_signup_api\u2019 %}.</p>\n<p>If you have any questions left, head to the example app <a href=\"https://github.com/Bearle/django-scatter-auth/tree/master/example\" rel=\"nofollow\">https://github.com/Bearle/django-scatter-auth/tree/master/example</a></p>\n</div>\n<div id=\"important-details-and-faq\">\n<h2>Important details and FAQ</h2>\n<ol>\n<li><em>If you set a custom public key field (SCATTERAUTH_USER_PUBKEY_FIELD), it MUST be unique (unique=True).</em></li>\n</ol>\n<p>This is needed because if it\u2019s not, the user can register a new account with the same public key as the other one,\nmeaning that the user can now login as any of those accounts (sometimes being the wrong one).</p>\n<ol>\n<li><em>How do i deal with user passwords or Password is not set</em></li>\n</ol>\n<p>There should be some code in your project that generates a password using <tt>User.objects.make_random_password</tt> and sends it to a user email.\nOr, even better, sends them a \u2018restore password\u2019 link.\nAlso, it\u2019s possible to copy signup_view to your project, assign it a url, and add the corresponding lines to set some password for a user.</p>\n<ol>\n<li><em>Why don\u2019t i have to sign a message? It\u2019s needed in django-web3-auth, how this app is secure?</em></li>\n</ol>\n<p>This app uses scatter\u2019s <tt>authenticate</tt> function to handle message signing - hostname being the signed message.\nThis means that the user &amp; the client share knowledge of the original message and the server can verify\nclient\u2019s possession of the private key corresponding to the public key.</p>\n</div>\n<div id=\"running-tests\">\n<h2>Running Tests</h2>\n<p>Does the code actually work?</p>\n<pre>source &lt;YOURVIRTUALENV&gt;/bin/activate\n(myenv) $ pip install tox\n(myenv) $ tox\n</pre>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Tools used in rendering this package:</p>\n<ul>\n<li><a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a></li>\n<li><a href=\"https://github.com/pydanny/cookiecutter-djangopackage\" rel=\"nofollow\">cookiecutter-djangopackage</a></li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.2.0 (2020-03-14)</h3>\n<ul>\n<li>Added support for Scatter-Desktop</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.1 (2018-09-10)</h3>\n<ul>\n<li>Fixed signup bug in js - added \u2018pubkey_field_name\u2019 param</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.0 (2018-08-13)</h3>\n<ul>\n<li>First release on PyPi</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6809103, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "eff5bada02df362e2255bb9996179cf9", "sha256": "b1a5cdd48f694bd3adcc0f213e98b313850f877b497e97b30cd76da77a31649d"}, "downloads": -1, "filename": "django_scatter_auth-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eff5bada02df362e2255bb9996179cf9", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 15568, "upload_time": "2018-08-13T08:04:17", "upload_time_iso_8601": "2018-08-13T08:04:17.634705Z", "url": "https://files.pythonhosted.org/packages/af/8d/7631fb227f327865e6e9a336ea24cf834acf1b170051fa609453eca718b9/django_scatter_auth-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "322f46170efcf2390407a048c9765a7b", "sha256": "7ef5c72430bdd434616b2cc5dc8b8638e172bce8261329fa8b706a6968a513ed"}, "downloads": -1, "filename": "django-scatter-auth-0.1.0.tar.gz", "has_sig": false, "md5_digest": "322f46170efcf2390407a048c9765a7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12572, "upload_time": "2018-08-13T08:03:45", "upload_time_iso_8601": "2018-08-13T08:03:45.452725Z", "url": "https://files.pythonhosted.org/packages/7f/7c/2dae60752e788347076d063ebc7ec3dd57316a3a293ddf598278cb3b79d2/django-scatter-auth-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c1f8c09d2f86522c836f6503a26f823a", "sha256": "793b5f019e0dd00e29b059fe50ee866cb097fd68123dcb5a1e9473cd7a755f2c"}, "downloads": -1, "filename": "django_scatter_auth-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c1f8c09d2f86522c836f6503a26f823a", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 15669, "upload_time": "2018-09-10T18:52:29", "upload_time_iso_8601": "2018-09-10T18:52:29.576503Z", "url": "https://files.pythonhosted.org/packages/05/54/af8f21434aed6a55a10480383bd653677911d43f4acf1d52c107599b8b1a/django_scatter_auth-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d98a9560287faf815b901a29af3c4c98", "sha256": "8beff63736fe037d524fbfe1f811034bd099bc59fa36429f74d44940037b693b"}, "downloads": -1, "filename": "django-scatter-auth-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d98a9560287faf815b901a29af3c4c98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12644, "upload_time": "2018-09-10T18:52:26", "upload_time_iso_8601": "2018-09-10T18:52:26.101828Z", "url": "https://files.pythonhosted.org/packages/2c/6e/58f3930ff19a64274b386f3ae5bba4292bcf03e95ad147c1f02df0392cd7/django-scatter-auth-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "0ca9dd98efe5202952e28391dca04417", "sha256": "8d7421166f836941f20bb971c9d6ffb8d46c470a4108d22715babbdb831230d1"}, "downloads": -1, "filename": "django_scatter_auth-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0ca9dd98efe5202952e28391dca04417", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15798, "upload_time": "2020-03-13T21:57:26", "upload_time_iso_8601": "2020-03-13T21:57:26.340496Z", "url": "https://files.pythonhosted.org/packages/98/43/d40686d8a4324630e4b431cacc5bdb9934aec656f23eec696517f7177706/django_scatter_auth-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5db7cf5d2067b9f427176fc789def736", "sha256": "9c9c6f425b9d8f804d5920631b90a83b438e38357fc4ad58de9668d4aed771f9"}, "downloads": -1, "filename": "django-scatter-auth-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5db7cf5d2067b9f427176fc789def736", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12760, "upload_time": "2020-03-13T21:57:03", "upload_time_iso_8601": "2020-03-13T21:57:03.178622Z", "url": "https://files.pythonhosted.org/packages/cd/1e/340e720b7fa0a7c3fc386802b23586a4ce8c63d206d0c9aef97484106857/django-scatter-auth-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0ca9dd98efe5202952e28391dca04417", "sha256": "8d7421166f836941f20bb971c9d6ffb8d46c470a4108d22715babbdb831230d1"}, "downloads": -1, "filename": "django_scatter_auth-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0ca9dd98efe5202952e28391dca04417", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15798, "upload_time": "2020-03-13T21:57:26", "upload_time_iso_8601": "2020-03-13T21:57:26.340496Z", "url": "https://files.pythonhosted.org/packages/98/43/d40686d8a4324630e4b431cacc5bdb9934aec656f23eec696517f7177706/django_scatter_auth-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5db7cf5d2067b9f427176fc789def736", "sha256": "9c9c6f425b9d8f804d5920631b90a83b438e38357fc4ad58de9668d4aed771f9"}, "downloads": -1, "filename": "django-scatter-auth-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5db7cf5d2067b9f427176fc789def736", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12760, "upload_time": "2020-03-13T21:57:03", "upload_time_iso_8601": "2020-03-13T21:57:03.178622Z", "url": "https://files.pythonhosted.org/packages/cd/1e/340e720b7fa0a7c3fc386802b23586a4ce8c63d206d0c9aef97484106857/django-scatter-auth-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:44 2020"}