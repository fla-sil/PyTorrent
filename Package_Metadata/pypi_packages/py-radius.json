{"info": {"author": "Ben Timby", "author_email": "btimby@gmail.com", "bugtrack_url": null, "classifiers": [], "description": ".. image:: https://travis-ci.org/btimby/py-radius.svg?branch=master\n   :alt: Travis CI Status\n   :target: https://travis-ci.org/btimby/py-radius\n\n.. image:: https://coveralls.io/repos/github/btimby/py-radius/badge.svg?branch=master\n    :target: https://coveralls.io/github/btimby/py-radius?branch=master\n    :alt: Code Coverage\n\n.. image:: https://badge.fury.io/py/py-radius.svg\n    :target: https://badge.fury.io/py/py-radius\n\npy-radius\n=========\n\nRADIUS authentication module for Python 2.7.13+\n\n\\(c) 1999 Stuart Bishop <zen@shangri-la.dropbear.id.au>\n\nThis module provides basic RADIUS client capabilities, allowing your Python\ncode to authenticate against any RFC2138 compliant RADIUS server.\n\nInstallation\n------------\n\n::\n\n    $ pip install py-radius\n\nUsage\n-----\n\nThe radius.py module can be run from the command line, providing a minimal\nRADIUS client to test out RADIUS servers:\n\n::\n\n    $ python -m radius\n    Host [default: 'radius']: radius\n    Port [default: 1812]: 1812\n    Enter RADIUS Secret: s3cr3t\n    Enter your username: foobar\n    Enter your password: qux\n    ...\n    Authentication Successful\n\nExample\n-------\n\nHere is an example of using the library.\n\n.. code:: python\n\n    import radius\n\n    radius.authenticate(username, password, secret, host='radius', port=1812)\n\n    # - OR -\n\n    r = radius.Radius(secret, host='radius', port=1812)\n    print('success' if r.authenticate(username, password) else 'failure')\n\nIf your RADIUS server requires challenge/response, the usage is a bit more\ncomplex.\n\n.. code:: python\n\n    import radius\n\n    r = radius.Radius(secret, host='radius')\n\n    try:\n        print('success' if r.authenticate(username, password) else 'failure')\n        sys.exit(0)\n    except radius.ChallengeResponse as e:\n        pass\n\n    # The ChallengeResponse exception has `messages` and `state` attributes\n    # `messages` can be displayed to the user to prompt them for their\n    # challenge response. `state` must be echoed back as a RADIUS attribute.\n\n    # Send state as an attribute _IF_ provided.\n    attrs = {'State': e.state} if e.state else {}\n\n    # Finally authenticate again using the challenge response from the user\n    # in place of the password.\n    print('success' if r.authenticate(username, response, attributes=attrs)\n                    else 'failure')\n\nThis module has extensive logging, enable it using the Python logging framework.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/btimby/py-radius/", "keywords": "", "license": "Copyright (c) 1999, Stuart Bishop <zen@shangri-la.dropbear.id.au>", "maintainer": "", "maintainer_email": "", "name": "py-radius", "package_url": "https://pypi.org/project/py-radius/", "platform": null, "project_url": "https://pypi.org/project/py-radius/", "project_urls": {"Homepage": "http://github.com/btimby/py-radius/"}, "release_url": "https://pypi.org/project/py-radius/2.0.2-1/", "requires_dist": null, "requires_python": "", "summary": "RADIUS authentication module", "version": "2.0.2-1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/btimby/py-radius\" rel=\"nofollow\"><img alt=\"Travis CI Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3944b20ffcf2054426e407f0fa4b5305c3f57635/68747470733a2f2f7472617669732d63692e6f72672f6274696d62792f70792d7261646975732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/btimby/py-radius?branch=master\" rel=\"nofollow\"><img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35464a9c1a4a1b4010ac801782d164b11d158349/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6274696d62792f70792d7261646975732f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/py-radius\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/py-radius.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c6b73c01afe9753f167cb331c66e8d1a956a9bdd/68747470733a2f2f62616467652e667572792e696f2f70792f70792d7261646975732e737667\"></a>\n<div id=\"py-radius\">\n<h2>py-radius</h2>\n<p>RADIUS authentication module for Python 2.7.13+</p>\n<p>(c) 1999 Stuart Bishop &lt;<a href=\"mailto:zen%40shangri-la.dropbear.id.au\">zen<span>@</span>shangri-la<span>.</span>dropbear<span>.</span>id<span>.</span>au</a>&gt;</p>\n<p>This module provides basic RADIUS client capabilities, allowing your Python\ncode to authenticate against any RFC2138 compliant RADIUS server.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>$ pip install py-radius\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>The radius.py module can be run from the command line, providing a minimal\nRADIUS client to test out RADIUS servers:</p>\n<pre>$ python -m radius\nHost [default: 'radius']: radius\nPort [default: 1812]: 1812\nEnter RADIUS Secret: s3cr3t\nEnter your username: foobar\nEnter your password: qux\n...\nAuthentication Successful\n</pre>\n</div>\n<div id=\"example\">\n<h3>Example</h3>\n<p>Here is an example of using the library.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">radius</span>\n\n<span class=\"n\">radius</span><span class=\"o\">.</span><span class=\"n\">authenticate</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">secret</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'radius'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">1812</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># - OR -</span>\n\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">radius</span><span class=\"o\">.</span><span class=\"n\">Radius</span><span class=\"p\">(</span><span class=\"n\">secret</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'radius'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">1812</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'success'</span> <span class=\"k\">if</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">authenticate</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"s1\">'failure'</span><span class=\"p\">)</span>\n</pre>\n<p>If your RADIUS server requires challenge/response, the usage is a bit more\ncomplex.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">radius</span>\n\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">radius</span><span class=\"o\">.</span><span class=\"n\">Radius</span><span class=\"p\">(</span><span class=\"n\">secret</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'radius'</span><span class=\"p\">)</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'success'</span> <span class=\"k\">if</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">authenticate</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"s1\">'failure'</span><span class=\"p\">)</span>\n    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">radius</span><span class=\"o\">.</span><span class=\"n\">ChallengeResponse</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"c1\"># The ChallengeResponse exception has `messages` and `state` attributes</span>\n<span class=\"c1\"># `messages` can be displayed to the user to prompt them for their</span>\n<span class=\"c1\"># challenge response. `state` must be echoed back as a RADIUS attribute.</span>\n\n<span class=\"c1\"># Send state as an attribute _IF_ provided.</span>\n<span class=\"n\">attrs</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'State'</span><span class=\"p\">:</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"p\">}</span> <span class=\"k\">if</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">state</span> <span class=\"k\">else</span> <span class=\"p\">{}</span>\n\n<span class=\"c1\"># Finally authenticate again using the challenge response from the user</span>\n<span class=\"c1\"># in place of the password.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'success'</span> <span class=\"k\">if</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">authenticate</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">attributes</span><span class=\"o\">=</span><span class=\"n\">attrs</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span> <span class=\"s1\">'failure'</span><span class=\"p\">)</span>\n</pre>\n<p>This module has extensive logging, enable it using the Python logging framework.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2883641, "releases": {"1.0.3-2": [], "2.0.2-1": [{"comment_text": "", "digests": {"md5": "d32cf96a0513f89577e66ea265a02fe7", "sha256": "70aa2175cca44403e2a3a158b8a50abe7c5b2696dc87fc34fc88d1c68095fe14"}, "downloads": -1, "filename": "py-radius-2.0.2-1.tar.gz", "has_sig": false, "md5_digest": "d32cf96a0513f89577e66ea265a02fe7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8338, "upload_time": "2017-05-18T16:47:04", "upload_time_iso_8601": "2017-05-18T16:47:04.145777Z", "url": "https://files.pythonhosted.org/packages/ca/aa/7820c5a529ab54606a78aa425ff6fedd46b807733a23c625dc8e3b0bdc4d/py-radius-2.0.2-1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d32cf96a0513f89577e66ea265a02fe7", "sha256": "70aa2175cca44403e2a3a158b8a50abe7c5b2696dc87fc34fc88d1c68095fe14"}, "downloads": -1, "filename": "py-radius-2.0.2-1.tar.gz", "has_sig": false, "md5_digest": "d32cf96a0513f89577e66ea265a02fe7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8338, "upload_time": "2017-05-18T16:47:04", "upload_time_iso_8601": "2017-05-18T16:47:04.145777Z", "url": "https://files.pythonhosted.org/packages/ca/aa/7820c5a529ab54606a78aa425ff6fedd46b807733a23c625dc8e3b0bdc4d/py-radius-2.0.2-1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:35 2020"}