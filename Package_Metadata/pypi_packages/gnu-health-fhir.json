{"info": {"author": "teffalump", "author_email": "chris@teffalump.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "# gnu_health_fhir\n\nThis package aims to provide a functional FHIR interface to GNU Health data models. With the provided classes, one should be able to work to and from the back-end data from GNU Health in a FHIR-compatible way. The module, ultimately, should provide a full interface - CRUD, type conversions, serializers, and so on.\n\n#### Design\n\nThe ultimate goal is that for every appropriate FHIR Resource there will be an adapter which interfaces with the backend data models.\n\nThere are plans to extend some of the resources to better approximate the GNU Health data schemes. The FHIR specification and GNU Health storage format rarely overlap, many times requiring significant data contortions. This is an ongoing process and there is a decided lack of motivation to do too much heavy-lifting, consequently these 'hacks' should be kept to a minimum.\n\n#### Resources\n\nCurrently, the package at least partially supports reads of these FHIR resources:\n\n- Patient\n- Practitioner\n- Immunization\n- Condition\n- Observation\n- DiagnosticReport\n- MedicationStatement\n- FamilyMemberHistory\n- Procedure\n- Encounter\n- ClinicalImpression\n- Coverage\n\nNot every resource's element is currently supported. Some of the elements have no equivalent in GNU Health, do not apply, have not reached maturity, or are undesirable in other ways. The FHIR resources are still under active development which makes them a moving target. The goal is to support all the reasonable, appropriate elements.\n\n#### Usage\n\nThe easiest example is to use Proteus with this package:\n\n    from proteus import config, Model\n    from gnu_health_fhir import Patient\n\n    #Connect to the GNU Health demo server\n    config = config.set_xmlrpc('http://admin:gnusolidario@health.gnusolidario.org:8000/health36/')\n\n    #Get the patient model\n    model = Model.get('gnuhealth.patient')\n\n    #Find the first patient\n    first_patient = model.find()[0]\n\n    #Convert to a fhir data object\n    patient = Patient.to_fhir_object(first_patient)\n\n    #Now you can use the data just like in fhirclient\n    print(patient.as_json())\n\n#### Libraries used\n\n- fhirclient (core FHIR data models)\n- pendulum (sane datetimes)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/teffalump/gnu_health_fhir", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "gnu-health-fhir", "package_url": "https://pypi.org/project/gnu-health-fhir/", "platform": "", "project_url": "https://pypi.org/project/gnu-health-fhir/", "project_urls": {"Homepage": "https://github.com/teffalump/gnu_health_fhir"}, "release_url": "https://pypi.org/project/gnu-health-fhir/2.0.0/", "requires_dist": null, "requires_python": "", "summary": "Provides FHIR interface to GNU Health.", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>gnu_health_fhir</h1>\n<p>This package aims to provide a functional FHIR interface to GNU Health data models. With the provided classes, one should be able to work to and from the back-end data from GNU Health in a FHIR-compatible way. The module, ultimately, should provide a full interface - CRUD, type conversions, serializers, and so on.</p>\n<h4>Design</h4>\n<p>The ultimate goal is that for every appropriate FHIR Resource there will be an adapter which interfaces with the backend data models.</p>\n<p>There are plans to extend some of the resources to better approximate the GNU Health data schemes. The FHIR specification and GNU Health storage format rarely overlap, many times requiring significant data contortions. This is an ongoing process and there is a decided lack of motivation to do too much heavy-lifting, consequently these 'hacks' should be kept to a minimum.</p>\n<h4>Resources</h4>\n<p>Currently, the package at least partially supports reads of these FHIR resources:</p>\n<ul>\n<li>Patient</li>\n<li>Practitioner</li>\n<li>Immunization</li>\n<li>Condition</li>\n<li>Observation</li>\n<li>DiagnosticReport</li>\n<li>MedicationStatement</li>\n<li>FamilyMemberHistory</li>\n<li>Procedure</li>\n<li>Encounter</li>\n<li>ClinicalImpression</li>\n<li>Coverage</li>\n</ul>\n<p>Not every resource's element is currently supported. Some of the elements have no equivalent in GNU Health, do not apply, have not reached maturity, or are undesirable in other ways. The FHIR resources are still under active development which makes them a moving target. The goal is to support all the reasonable, appropriate elements.</p>\n<h4>Usage</h4>\n<p>The easiest example is to use Proteus with this package:</p>\n<pre><code>from proteus import config, Model\nfrom gnu_health_fhir import Patient\n\n#Connect to the GNU Health demo server\nconfig = config.set_xmlrpc('http://admin:gnusolidario@health.gnusolidario.org:8000/health36/')\n\n#Get the patient model\nmodel = Model.get('gnuhealth.patient')\n\n#Find the first patient\nfirst_patient = model.find()[0]\n\n#Convert to a fhir data object\npatient = Patient.to_fhir_object(first_patient)\n\n#Now you can use the data just like in fhirclient\nprint(patient.as_json())\n</code></pre>\n<h4>Libraries used</h4>\n<ul>\n<li>fhirclient (core FHIR data models)</li>\n<li>pendulum (sane datetimes)</li>\n</ul>\n\n          </div>"}, "last_serial": 6632406, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "ba7f2d56b448b84130553a7c8af97789", "sha256": "956f46a40ad6c757558a9a51123da22cf39ed3ac992b1a3d65dabbcbd22be472"}, "downloads": -1, "filename": "gnu_health_fhir-2.0.0.tar.gz", "has_sig": false, "md5_digest": "ba7f2d56b448b84130553a7c8af97789", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15325, "upload_time": "2020-02-14T16:48:28", "upload_time_iso_8601": "2020-02-14T16:48:28.967197Z", "url": "https://files.pythonhosted.org/packages/e9/66/663d4444d13314831fef8e934d090e0e9a11bd3d889bb2c4d75a08036c76/gnu_health_fhir-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba7f2d56b448b84130553a7c8af97789", "sha256": "956f46a40ad6c757558a9a51123da22cf39ed3ac992b1a3d65dabbcbd22be472"}, "downloads": -1, "filename": "gnu_health_fhir-2.0.0.tar.gz", "has_sig": false, "md5_digest": "ba7f2d56b448b84130553a7c8af97789", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15325, "upload_time": "2020-02-14T16:48:28", "upload_time_iso_8601": "2020-02-14T16:48:28.967197Z", "url": "https://files.pythonhosted.org/packages/e9/66/663d4444d13314831fef8e934d090e0e9a11bd3d889bb2c4d75a08036c76/gnu_health_fhir-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:09 2020"}