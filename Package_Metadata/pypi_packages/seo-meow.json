{"info": {"author": "Maks Krasnikov", "author_email": "lamercat@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.4", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "========\r\nSeo-Meow\r\n========\r\n\r\nSeo-Meow is a very simple Django app to manage basic SEO tags.\r\nhttps://github.com/utekay/seo-meow\r\n\r\nInstallation\r\n------------\r\n\r\n::\r\n\r\n    $ pip install git+https://github.com/utekay/seo-meow.git\r\n\r\n::\r\n\r\n    # settings.py\r\n\r\n    INSTALLED_APPS = [\r\n        ...\r\n        'seomeow',\r\n    ]\r\n\r\n::\r\n\r\n    $ python manage.py migrate seomeow\r\n\r\n\r\nUsage\r\n~~~~~\r\n\r\nThe app looks for the SeoMeow object that matches the current URL.\r\nOtherwise it returns the object for \u201c/\u201d which is created automatically.\r\n\r\n::\r\n\r\n    {% load seomeow %}\r\n\r\n    <!DOCTYPE html>\r\n    <html lang=\"en\">\r\n      <head>\r\n        ...\r\n        {% put_seo_meow_tags_here %}\r\n        ...\r\n\r\n\r\nAlso you can \u2018assign\u2019 the SeoMeow object to any model instance via\r\nDjango admin interface. A hyperlink for editing or creating a related\r\nSeoMeow object will be available in the message area after mixin class\r\nis added to the admin model.\r\n\r\n::\r\n\r\n    # admin.py\r\n\r\n    from django.contrib import admin\r\n    from seomeow.admin import SeoMeowShortcut\r\n\r\n    from .models import News\r\n\r\n    @admin.register(News)\r\n    class NewsAdmin(SeoMeowShortcut, admin.ModelAdmin):\r\n        ...\r\n\r\n\r\nThe model method \u201cget\\_absolute\\_url\u201d is required in this case.\r\n\r\n::\r\n\r\n    # models.py\r\n\r\n    from django.db import models\r\n    from django.core.urlresolvers import reverse\r\n\r\n    class News(models.Model):\r\n        ...\r\n\r\n        def get_absolute_url(self):\r\n            # return \"/news/%d/\" % self.pk # or\r\n            return reverse(\"news\", args=(self.pk,))", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/utekay/seo-meow", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "seo-meow", "package_url": "https://pypi.org/project/seo-meow/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/seo-meow/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/utekay/seo-meow"}, "release_url": "https://pypi.org/project/seo-meow/0.1/", "requires_dist": null, "requires_python": null, "summary": "A simple Django app to manage basic SEO tags.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Seo-Meow is a very simple Django app to manage basic SEO tags.\n<a href=\"https://github.com/utekay/seo-meow\" rel=\"nofollow\">https://github.com/utekay/seo-meow</a></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install git+https://github.com/utekay/seo-meow.git\n</pre>\n<pre># settings.py\n\nINSTALLED_APPS = [\n    ...\n    'seomeow',\n]\n</pre>\n<pre>$ python manage.py migrate seomeow\n</pre>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>The app looks for the SeoMeow object that matches the current URL.\nOtherwise it returns the object for \u201c/\u201d which is created automatically.</p>\n<pre>{% load seomeow %}\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    ...\n    {% put_seo_meow_tags_here %}\n    ...\n</pre>\n<p>Also you can \u2018assign\u2019 the SeoMeow object to any model instance via\nDjango admin interface. A hyperlink for editing or creating a related\nSeoMeow object will be available in the message area after mixin class\nis added to the admin model.</p>\n<pre># admin.py\n\nfrom django.contrib import admin\nfrom seomeow.admin import SeoMeowShortcut\n\nfrom .models import News\n\n@admin.register(News)\nclass NewsAdmin(SeoMeowShortcut, admin.ModelAdmin):\n    ...\n</pre>\n<p>The model method \u201cget_absolute_url\u201d is required in this case.</p>\n<pre># models.py\n\nfrom django.db import models\nfrom django.core.urlresolvers import reverse\n\nclass News(models.Model):\n    ...\n\n    def get_absolute_url(self):\n        # return \"/news/%d/\" % self.pk # or\n        return reverse(\"news\", args=(self.pk,))\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2315452, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "fc2505a8e671472ab5cd83bbb04eb45e", "sha256": "d66bc0fbdfa1de257479ee47ca9869aa897a5743ca7d6440c58f3931254258b8"}, "downloads": -1, "filename": "seo-meow-0.1.zip", "has_sig": false, "md5_digest": "fc2505a8e671472ab5cd83bbb04eb45e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8898, "upload_time": "2016-08-31T11:15:44", "upload_time_iso_8601": "2016-08-31T11:15:44.181583Z", "url": "https://files.pythonhosted.org/packages/b5/11/fa17149d863103414a787960815b494cdbff09db53ad12cf3596501ae152/seo-meow-0.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fc2505a8e671472ab5cd83bbb04eb45e", "sha256": "d66bc0fbdfa1de257479ee47ca9869aa897a5743ca7d6440c58f3931254258b8"}, "downloads": -1, "filename": "seo-meow-0.1.zip", "has_sig": false, "md5_digest": "fc2505a8e671472ab5cd83bbb04eb45e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8898, "upload_time": "2016-08-31T11:15:44", "upload_time_iso_8601": "2016-08-31T11:15:44.181583Z", "url": "https://files.pythonhosted.org/packages/b5/11/fa17149d863103414a787960815b494cdbff09db53ad12cf3596501ae152/seo-meow-0.1.zip", "yanked": false}], "timestamp": "Fri May  8 02:54:56 2020"}