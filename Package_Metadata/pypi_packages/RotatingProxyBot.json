{"info": {"author": "dgisolfi", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# RotatingProxyBot\nA Bot that uses a Rotating Proxy to simulate many clients making a request to a single server\n\n**Version 0.0.3**\n\n### Author\n\n**Daniel Gisolfi** - *All current work* - [dgisolfi](https://github.com/dgisolfi)\n\n## Usage\n\n```python\n#!/usr/bin/python3\nfrom RotatingProxyBot import ProxyBot\n\n# Create new custom bot\nbot = ProxyBot(\n    address='IP OR URL',\n    method='POST'\n    desired_reqs=10,\n    reqs_per_int=2,\n    wait_time=60 # 1min\n)\n# Start Submiting and rotating proxies\nbot.enable()\n```\n\n## Building a list of Proxies\n\nThe bot will need a list of proxies to use for making requests, it can use either an API to retrieve proxies or a file to import them from.\n\n### Proxies from an API\n\nBy default, the bot will retrieve a few thousand proxies from an [API](https://www.proxy-list.download/). To use a custom API tell the bot what address to reach the API at by passing in the following argument when creating a new instance `proxy_api='http://api.com'`.\n\n### Proxies from a File\n\nTo use a custom file of proxies rather than the default API, pass in the following argument to the bot constructor `proxy_file=filename.txt`\nFor the bot to be able to import the list of proxies, the file should have the following structure:\n\n```txt\n0.0.0.0:80\n1.1.1.1:90\n2.2.2.2:20\n```\n\n## Methods\n\nThe following are some useful methods that are a part of the package\n\n### ProxyBot\n\n* **getRequest(proxy)** - if passed a specific proxy, this method will perform a`GET` request using the specified proxy to the address set in the creation of the bot. EX: `getRequest('0.0.0.0:80')`\n* **postRequest(proxy)** - if passed a specific proxy, this method will perform a `POST` request using the specified proxy to the address set in the creation of the bot. EX: `postRequest('0.0.0.0:80')`\n* **preformRotate()** - if called the bot will request a new proxy from the RotatingProxy class and perform the specified request to the specified address, returning the response element\n* **enable()** - if called will initiate the main loop of the bot, making the specified requests to the address using the set number of intervals and wait time\n* **disable()** - if called will shut down the main loop of the program and delete the bot\n\n### RotatingProxy\n\n* **buildProxyList()** - when called will contact the set API(or default one) to retrieve a list of  up to date proxies in which it can pull from to make requests\n* **importProxyList()** - will attempt to build a list of proxies from the file name provided.\n* **rotate()** - will return the 0th proxy in the list and add it to the used proxy list.\n\n## Additional Arguments for the Constructor\n\nThe following are keyword arguments that can be passed into the constructor of the ProxyBot Class.\n\n* **id** - Assigns the instance of the ProxyBot with the given numeric ID\n\n  Example: `RotatingProxyBot(id=1)`\n\n* **address** - the IP or URL for the bot to contact, will default to a tester API\n\n  Example: `RotatingProxyBot(address='0.0.0.0')`\n\n* **method** - The request method to be used. Only `GET` and `POST` supported. The default is `GET`\n  Example: `RotatingProxyBot(method='POST')`\n\n* **params** - Parameters to be passed with the request, works with all request methods \n  Example: `RotatingProxyBot(params={'example':'test'})`\n\n* **desired_reqs** - Desired number of requests to be completed\n\n  Example: `RotatingProxyBot(desired_reqs=10)`\n\n* **keep_alive** - A boolean allow the bot to continue to make requests forever\n\n  *if set to `True` dont set `desired_reqs`*\n  Example: `RotatingProxyBot(keep_alive=True)`\n\n* **reqs_per_int** - Requests Per Interval, number of requests to be completed before waiting. This will prevent the server from being DOSed\n  Example: `RotatingProxyBot(reqs_per_int=2)`\n\n* **wait_time** - Amount of time in Seconds to wait until the next interval of requests\n  Example: `RotatingProxyBot(wait_time=600)`", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dgisolfi/RotatingProxyBot", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "RotatingProxyBot", "package_url": "https://pypi.org/project/RotatingProxyBot/", "platform": "", "project_url": "https://pypi.org/project/RotatingProxyBot/", "project_urls": {"Homepage": "https://github.com/dgisolfi/RotatingProxyBot"}, "release_url": "https://pypi.org/project/RotatingProxyBot/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "A Bot that acts as a Rotating Proxy Crawler, simulating many clients to a single server", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>RotatingProxyBot</h1>\n<p>A Bot that uses a Rotating Proxy to simulate many clients making a request to a single server</p>\n<p><strong>Version 0.0.3</strong></p>\n<h3>Author</h3>\n<p><strong>Daniel Gisolfi</strong> - <em>All current work</em> - <a href=\"https://github.com/dgisolfi\" rel=\"nofollow\">dgisolfi</a></p>\n<h2>Usage</h2>\n<pre><span class=\"ch\">#!/usr/bin/python3</span>\n<span class=\"kn\">from</span> <span class=\"nn\">RotatingProxyBot</span> <span class=\"kn\">import</span> <span class=\"n\">ProxyBot</span>\n\n<span class=\"c1\"># Create new custom bot</span>\n<span class=\"n\">bot</span> <span class=\"o\">=</span> <span class=\"n\">ProxyBot</span><span class=\"p\">(</span>\n    <span class=\"n\">address</span><span class=\"o\">=</span><span class=\"s1\">'IP OR URL'</span><span class=\"p\">,</span>\n    <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'POST'</span>\n    <span class=\"n\">desired_reqs</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n    <span class=\"n\">reqs_per_int</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"n\">wait_time</span><span class=\"o\">=</span><span class=\"mi\">60</span> <span class=\"c1\"># 1min</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># Start Submiting and rotating proxies</span>\n<span class=\"n\">bot</span><span class=\"o\">.</span><span class=\"n\">enable</span><span class=\"p\">()</span>\n</pre>\n<h2>Building a list of Proxies</h2>\n<p>The bot will need a list of proxies to use for making requests, it can use either an API to retrieve proxies or a file to import them from.</p>\n<h3>Proxies from an API</h3>\n<p>By default, the bot will retrieve a few thousand proxies from an <a href=\"https://www.proxy-list.download/\" rel=\"nofollow\">API</a>. To use a custom API tell the bot what address to reach the API at by passing in the following argument when creating a new instance <code>proxy_api='http://api.com'</code>.</p>\n<h3>Proxies from a File</h3>\n<p>To use a custom file of proxies rather than the default API, pass in the following argument to the bot constructor <code>proxy_file=filename.txt</code>\nFor the bot to be able to import the list of proxies, the file should have the following structure:</p>\n<pre>0.0.0.0:80\n1.1.1.1:90\n2.2.2.2:20\n</pre>\n<h2>Methods</h2>\n<p>The following are some useful methods that are a part of the package</p>\n<h3>ProxyBot</h3>\n<ul>\n<li><strong>getRequest(proxy)</strong> - if passed a specific proxy, this method will perform a<code>GET</code> request using the specified proxy to the address set in the creation of the bot. EX: <code>getRequest('0.0.0.0:80')</code></li>\n<li><strong>postRequest(proxy)</strong> - if passed a specific proxy, this method will perform a <code>POST</code> request using the specified proxy to the address set in the creation of the bot. EX: <code>postRequest('0.0.0.0:80')</code></li>\n<li><strong>preformRotate()</strong> - if called the bot will request a new proxy from the RotatingProxy class and perform the specified request to the specified address, returning the response element</li>\n<li><strong>enable()</strong> - if called will initiate the main loop of the bot, making the specified requests to the address using the set number of intervals and wait time</li>\n<li><strong>disable()</strong> - if called will shut down the main loop of the program and delete the bot</li>\n</ul>\n<h3>RotatingProxy</h3>\n<ul>\n<li><strong>buildProxyList()</strong> - when called will contact the set API(or default one) to retrieve a list of  up to date proxies in which it can pull from to make requests</li>\n<li><strong>importProxyList()</strong> - will attempt to build a list of proxies from the file name provided.</li>\n<li><strong>rotate()</strong> - will return the 0th proxy in the list and add it to the used proxy list.</li>\n</ul>\n<h2>Additional Arguments for the Constructor</h2>\n<p>The following are keyword arguments that can be passed into the constructor of the ProxyBot Class.</p>\n<ul>\n<li>\n<p><strong>id</strong> - Assigns the instance of the ProxyBot with the given numeric ID</p>\n<p>Example: <code>RotatingProxyBot(id=1)</code></p>\n</li>\n<li>\n<p><strong>address</strong> - the IP or URL for the bot to contact, will default to a tester API</p>\n<p>Example: <code>RotatingProxyBot(address='0.0.0.0')</code></p>\n</li>\n<li>\n<p><strong>method</strong> - The request method to be used. Only <code>GET</code> and <code>POST</code> supported. The default is <code>GET</code>\nExample: <code>RotatingProxyBot(method='POST')</code></p>\n</li>\n<li>\n<p><strong>params</strong> - Parameters to be passed with the request, works with all request methods\nExample: <code>RotatingProxyBot(params={'example':'test'})</code></p>\n</li>\n<li>\n<p><strong>desired_reqs</strong> - Desired number of requests to be completed</p>\n<p>Example: <code>RotatingProxyBot(desired_reqs=10)</code></p>\n</li>\n<li>\n<p><strong>keep_alive</strong> - A boolean allow the bot to continue to make requests forever</p>\n<p><em>if set to <code>True</code> dont set <code>desired_reqs</code></em>\nExample: <code>RotatingProxyBot(keep_alive=True)</code></p>\n</li>\n<li>\n<p><strong>reqs_per_int</strong> - Requests Per Interval, number of requests to be completed before waiting. This will prevent the server from being DOSed\nExample: <code>RotatingProxyBot(reqs_per_int=2)</code></p>\n</li>\n<li>\n<p><strong>wait_time</strong> - Amount of time in Seconds to wait until the next interval of requests\nExample: <code>RotatingProxyBot(wait_time=600)</code></p>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 4692515, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "dc99e47f807581a0189c65dc6caa6f8b", "sha256": "79c04db4714e3c81f36192afd9d20cf567460b39a72862a1bc4d9c4bc81fd44c"}, "downloads": -1, "filename": "RotatingProxyBot-0.0.2.tar.gz", "has_sig": false, "md5_digest": "dc99e47f807581a0189c65dc6caa6f8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2779, "upload_time": "2019-01-09T16:44:20", "upload_time_iso_8601": "2019-01-09T16:44:20.260539Z", "url": "https://files.pythonhosted.org/packages/64/7a/26235edc65c06dbc079aec523c1e6e7bf3b6ef6b1db90a87843c304daca8/RotatingProxyBot-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "500c7a725050d24498e8552ba925bbe8", "sha256": "361b0b9e2652336b10acd85d24b6ba97b999b76b3ee186caf8aceafff26011ff"}, "downloads": -1, "filename": "RotatingProxyBot-0.0.3.tar.gz", "has_sig": false, "md5_digest": "500c7a725050d24498e8552ba925bbe8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5112, "upload_time": "2019-01-14T03:06:14", "upload_time_iso_8601": "2019-01-14T03:06:14.391662Z", "url": "https://files.pythonhosted.org/packages/18/c3/dc03074a03a8c641850d6388adde94a6feed192dbaa67885ef1b5d6b81bf/RotatingProxyBot-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "500c7a725050d24498e8552ba925bbe8", "sha256": "361b0b9e2652336b10acd85d24b6ba97b999b76b3ee186caf8aceafff26011ff"}, "downloads": -1, "filename": "RotatingProxyBot-0.0.3.tar.gz", "has_sig": false, "md5_digest": "500c7a725050d24498e8552ba925bbe8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5112, "upload_time": "2019-01-14T03:06:14", "upload_time_iso_8601": "2019-01-14T03:06:14.391662Z", "url": "https://files.pythonhosted.org/packages/18/c3/dc03074a03a8c641850d6388adde94a6feed192dbaa67885ef1b5d6b81bf/RotatingProxyBot-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:12 2020"}