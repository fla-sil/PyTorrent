{"info": {"author": "Nagarjuna G.", "author_email": "nagarjun@gnowledge.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Visualization"], "description": "GNOWSYS Studio\r\n==============\r\n\r\nA collaborative workspace (studio) for constructing and publishing\r\nsemantic knowledge networks and ontologies.\r\n\r\nFeatures\r\n--------\r\n\r\nThe application is devided into two sub-apps. Gstudio and Objectapp. The\r\nformer includes classes for organizing the network or constructing an\r\nontology. The latter includes classes for holding the instances of\r\nobject-types, process-types and system-types.\r\n\r\nGstudio Components\r\n~~~~~~~~~~~~~~~~~~\r\n\r\n-  Metatypes\r\n\r\n   To hold Classes which have other classes as its members. e.g.\r\n   \"abstract noun\", \"adjective\", \"phylem\", \"class\", \"genus\", \"species\"\r\n   etc.\r\n-  Object types\r\n\r\n   To hold Classes: e.g. \"thing\", \"being\", \"living being\", \"animals\",\r\n   \"cat\", \"place\", \"person\" etc.\r\n-  Relation types\r\n\r\nTo define binary relations (object properties) between classes and\r\nobjects. e.g., \"part of\", \"friend of\", \"composed of\", \"located in\" etc.\r\n\\* Attribute types\r\n\r\n    To define datatype properties for classes and objects. e.g.,\r\n    \"population\", \"size\", \"length\", \"height\", \"first name\", \"phone\r\n    number\" etc.\r\n\r\n-  System types\r\n\r\n   To bring together some of the classes into a system or an ontology, a\r\n   collection of the types defined above for convenience. You can bring\r\n   together the required classes, relations and attributes into\r\n-  Process types\r\n\r\n   To define a process as prior and post states of classes or objects.\r\n-  Attributes\r\n\r\n   To store attributes\r\n-  Relations\r\n\r\n   To store binary relations\r\n-  Node Specification\r\n\r\n   A node specified (described) by its relations or attributes or both.\r\n-  Relation Specification\r\n\r\n   To create an expression using a relation with a subject, e.g.,\r\n   \"friend of Tom\", \"components of a cell\" etc.\r\n\r\n-  Attribute Specification\r\n\r\n   To specify an attribute by a subject to say for example: population\r\n   of India, color of a flower etc. These do not yeild a proposition but\r\n   an expression, which can be used as a subject in another sentence.\r\n\r\n-  Expression\r\n\r\n   Expression is more like a relation between two terms, but it does not\r\n   yeild a proposition, e.g., \"Researchers in India\", \"students residing\r\n   in India\" etc. It is modelled more like relation class, except that\r\n   the result is not a proposition/triple.\r\n\r\n-  Union\r\n\r\n   To define a class by a union relation between two or more classes.\r\n\r\n-  Complement\r\n\r\n   To define a class as a compleemnt of two or more classes.\r\n\r\n-  Intersection\r\n\r\n   To define a class as an intersection between two or more classes.\r\n\r\nObjectapp Components ------------------\r\n\r\n-  Objects\r\n\r\n   To hold the instances of Object types: \"Mumbai\", \"Tom\" etc.\r\n\r\n-  Systems\r\n\r\n   To hold the instances of System types.\r\n\r\n-  Processes\r\n\r\n   To hold the instances of processes.\r\n\r\nOnline Collaborative Platform\r\n-----------------------------\r\n\r\nThe application is built as a collaborative on line platform with the\r\nfollowing features.\r\n\r\nVersion Control\r\n~~~~~~~~~~~~~~~\r\n\r\nAll the changes by the users will be recorded. This feature is\r\nimplemented using using django-reversion.\r\n\r\nUser Registration\r\n~~~~~~~~~~~~~~~~~\r\n\r\nBasic registration, authentication mechanism.\r\n\r\nNetwork Navigation using SVG graphs ==================================\r\n\r\n-  neighbourhood graphs and concept graphs\r\n\r\nOther Semantic Web features\r\n---------------------------\r\n\r\n-  data in RDF format\r\n-  rdf feed to a triple store\r\n-  sparql endpoint\r\n\r\nFeatures to be implemented\r\n--------------------------\r\n\r\n-  export and import of standard knowledge representation languages: CL,\r\n   OWL, XTM etc.\r\n\r\nFeatures adopted from Django-Blog-Zinnia\r\n----------------------------------------\r\n\r\nThe following features are adopted from django-blog-zinnia code base\r\nwith a lot of gratitude. Thanks to an excellent codebase of\r\ndjango-blog-zinnia, which taught us best software development practices\r\nas well! After reviewing each feature for the purpose of semantic\r\nblogging, we will retain or extend the following features.\r\n\r\nThe features listed here are not thourougly tested. There is a\r\nlikelyhood of misbehavior.\r\n\r\n-  Comments\r\n-  Sitemaps\r\n-  Archives views\r\n-  Related entries\r\n-  Private entries\r\n-  RSS or Atom Feeds\r\n-  Tags\r\n-  Advanced search engine\r\n-  Prepublication and expiration\r\n-  Editing in MarkDown, Textile or reStructuredText\r\n-  Widgets (Popular entries, Similar entries, ...)\r\n-  Spam protection with Akismet or TypePad\r\n-  Admin dashboard\r\n-  MetaWeblog API, xmlrpc\r\n-  Ping Directories\r\n-  Ping External links\r\n-  Bit.ly support\r\n-  Twitter support\r\n-  Gravatar support\r\n-  Django-CMS plugins\r\n-  Collaborative work\r\n-  Tags autocompletion\r\n-  Entry model extendable\r\n-  Pingback/Trackback support\r\n-  Blogger conversion utility\r\n-  WordPress conversion utility\r\n-  WYMeditor, TinyMCE and MarkItUp support\r\n-  Ready to use and extendables templates\r\n-  Windows Live Writer compatibility\r\n\r\nExamples\r\n--------\r\n\r\nA sandbox site will give you a preview of the application. Visit\r\n`http://sbox.gnowledge.org <http://sbox.gnowledge.org>`_/\r\n\r\nProject Page\r\n------------\r\n\r\nThe project management is done from Savannah:\r\n`https://savannah.gnu.org/projects/gnowsys <https://savannah.gnu.org/projects/gnowsys>`_/\r\n\r\nMailing list\r\n------------\r\n\r\nJoin this list if you are intersted in using or contributing as a\r\nhacker.\r\n\r\n`http://gnowledge.org/cgi-bin/mailman/listinfo/gnowsys-dev <http://gnowledge.org/cgi-bin/mailman/listinfo/gnowsys-dev>`_", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.gnu.org/software/gnowsys/", "keywords": "django,blog,weblog,zinnia,post,news,gnowsys,gnowledge,semantic,networks,ontolgies,knowledge,representation,concepts,graphs,gnu", "license": "AGPL 3.0", "maintainer": "", "maintainer_email": "", "name": "gnowsys-studio", "package_url": "https://pypi.org/project/gnowsys-studio/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gnowsys-studio/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.gnu.org/software/gnowsys/"}, "release_url": "https://pypi.org/project/gnowsys-studio/0.5.dev/", "requires_dist": null, "requires_python": null, "summary": "A collaborative blogspace for constructing and publishing semantic knowledge networks and ontologies", "version": "0.5.dev", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A collaborative workspace (studio) for constructing and publishing\nsemantic knowledge networks and ontologies.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<p>The application is devided into two sub-apps. Gstudio and Objectapp. The\nformer includes classes for organizing the network or constructing an\nontology. The latter includes classes for holding the instances of\nobject-types, process-types and system-types.</p>\n<div id=\"gstudio-components\">\n<h3>Gstudio Components</h3>\n<ul>\n<li><p>Metatypes</p>\n<p>To hold Classes which have other classes as its members. e.g.\n\u201cabstract noun\u201d, \u201cadjective\u201d, \u201cphylem\u201d, \u201cclass\u201d, \u201cgenus\u201d, \u201cspecies\u201d\netc.</p>\n</li>\n<li><p>Object types</p>\n<p>To hold Classes: e.g. \u201cthing\u201d, \u201cbeing\u201d, \u201cliving being\u201d, \u201canimals\u201d,\n\u201ccat\u201d, \u201cplace\u201d, \u201cperson\u201d etc.</p>\n</li>\n<li><p>Relation types</p>\n</li>\n</ul>\n<p>To define binary relations (object properties) between classes and\nobjects. e.g., \u201cpart of\u201d, \u201cfriend of\u201d, \u201ccomposed of\u201d, \u201clocated in\u201d etc.\n* Attribute types</p>\n<blockquote>\nTo define datatype properties for classes and objects. e.g.,\n\u201cpopulation\u201d, \u201csize\u201d, \u201clength\u201d, \u201cheight\u201d, \u201cfirst name\u201d, \u201cphone\nnumber\u201d etc.</blockquote>\n<ul>\n<li><p>System types</p>\n<p>To bring together some of the classes into a system or an ontology, a\ncollection of the types defined above for convenience. You can bring\ntogether the required classes, relations and attributes into</p>\n</li>\n<li><p>Process types</p>\n<p>To define a process as prior and post states of classes or objects.</p>\n</li>\n<li><p>Attributes</p>\n<p>To store attributes</p>\n</li>\n<li><p>Relations</p>\n<p>To store binary relations</p>\n</li>\n<li><p>Node Specification</p>\n<p>A node specified (described) by its relations or attributes or both.</p>\n</li>\n<li><p>Relation Specification</p>\n<p>To create an expression using a relation with a subject, e.g.,\n\u201cfriend of Tom\u201d, \u201ccomponents of a cell\u201d etc.</p>\n</li>\n<li><p>Attribute Specification</p>\n<p>To specify an attribute by a subject to say for example: population\nof India, color of a flower etc. These do not yeild a proposition but\nan expression, which can be used as a subject in another sentence.</p>\n</li>\n<li><p>Expression</p>\n<p>Expression is more like a relation between two terms, but it does not\nyeild a proposition, e.g., \u201cResearchers in India\u201d, \u201cstudents residing\nin India\u201d etc. It is modelled more like relation class, except that\nthe result is not a proposition/triple.</p>\n</li>\n<li><p>Union</p>\n<p>To define a class by a union relation between two or more classes.</p>\n</li>\n<li><p>Complement</p>\n<p>To define a class as a compleemnt of two or more classes.</p>\n</li>\n<li><p>Intersection</p>\n<p>To define a class as an intersection between two or more classes.</p>\n</li>\n</ul>\n<p>Objectapp Components \u2014\u2014\u2014\u2014\u2014\u2014</p>\n<ul>\n<li><p>Objects</p>\n<p>To hold the instances of Object types: \u201cMumbai\u201d, \u201cTom\u201d etc.</p>\n</li>\n<li><p>Systems</p>\n<p>To hold the instances of System types.</p>\n</li>\n<li><p>Processes</p>\n<p>To hold the instances of processes.</p>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"online-collaborative-platform\">\n<h2>Online Collaborative Platform</h2>\n<p>The application is built as a collaborative on line platform with the\nfollowing features.</p>\n<div id=\"version-control\">\n<h3>Version Control</h3>\n<p>All the changes by the users will be recorded. This feature is\nimplemented using using django-reversion.</p>\n</div>\n<div id=\"user-registration\">\n<h3>User Registration</h3>\n<p>Basic registration, authentication mechanism.</p>\n<p>Network Navigation using SVG graphs ==================================</p>\n<ul>\n<li>neighbourhood graphs and concept graphs</li>\n</ul>\n</div>\n</div>\n<div id=\"other-semantic-web-features\">\n<h2>Other Semantic Web features</h2>\n<ul>\n<li>data in RDF format</li>\n<li>rdf feed to a triple store</li>\n<li>sparql endpoint</li>\n</ul>\n</div>\n<div id=\"features-to-be-implemented\">\n<h2>Features to be implemented</h2>\n<ul>\n<li>export and import of standard knowledge representation languages: CL,\nOWL, XTM etc.</li>\n</ul>\n</div>\n<div id=\"features-adopted-from-django-blog-zinnia\">\n<h2>Features adopted from Django-Blog-Zinnia</h2>\n<p>The following features are adopted from django-blog-zinnia code base\nwith a lot of gratitude. Thanks to an excellent codebase of\ndjango-blog-zinnia, which taught us best software development practices\nas well! After reviewing each feature for the purpose of semantic\nblogging, we will retain or extend the following features.</p>\n<p>The features listed here are not thourougly tested. There is a\nlikelyhood of misbehavior.</p>\n<ul>\n<li>Comments</li>\n<li>Sitemaps</li>\n<li>Archives views</li>\n<li>Related entries</li>\n<li>Private entries</li>\n<li>RSS or Atom Feeds</li>\n<li>Tags</li>\n<li>Advanced search engine</li>\n<li>Prepublication and expiration</li>\n<li>Editing in MarkDown, Textile or reStructuredText</li>\n<li>Widgets (Popular entries, Similar entries, \u2026)</li>\n<li>Spam protection with Akismet or TypePad</li>\n<li>Admin dashboard</li>\n<li>MetaWeblog API, xmlrpc</li>\n<li>Ping Directories</li>\n<li>Ping External links</li>\n<li>Bit.ly support</li>\n<li>Twitter support</li>\n<li>Gravatar support</li>\n<li>Django-CMS plugins</li>\n<li>Collaborative work</li>\n<li>Tags autocompletion</li>\n<li>Entry model extendable</li>\n<li>Pingback/Trackback support</li>\n<li>Blogger conversion utility</li>\n<li>WordPress conversion utility</li>\n<li>WYMeditor, TinyMCE and MarkItUp support</li>\n<li>Ready to use and extendables templates</li>\n<li>Windows Live Writer compatibility</li>\n</ul>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>A sandbox site will give you a preview of the application. Visit\n<a href=\"http://sbox.gnowledge.org\" rel=\"nofollow\">http://sbox.gnowledge.org</a>/</p>\n</div>\n<div id=\"project-page\">\n<h2>Project Page</h2>\n<p>The project management is done from Savannah:\n<a href=\"https://savannah.gnu.org/projects/gnowsys\" rel=\"nofollow\">https://savannah.gnu.org/projects/gnowsys</a>/</p>\n</div>\n<div id=\"mailing-list\">\n<h2>Mailing list</h2>\n<p>Join this list if you are intersted in using or contributing as a\nhacker.</p>\n<p><a href=\"http://gnowledge.org/cgi-bin/mailman/listinfo/gnowsys-dev\" rel=\"nofollow\">http://gnowledge.org/cgi-bin/mailman/listinfo/gnowsys-dev</a></p>\n</div>\n\n          </div>"}, "last_serial": 725132, "releases": {"0.4.dev": [{"comment_text": "", "digests": {"md5": "d3c01132dde1c91551b051fe5d495cc0", "sha256": "b604ad3ca907fcf1f70966d4515028d2a309761c7d0263349eace5a1ec82e8b3"}, "downloads": -1, "filename": "gnowsys-studio-0.4.dev.tar.gz", "has_sig": false, "md5_digest": "d3c01132dde1c91551b051fe5d495cc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1398266, "upload_time": "2012-05-26T19:52:26", "upload_time_iso_8601": "2012-05-26T19:52:26.298118Z", "url": "https://files.pythonhosted.org/packages/3d/7f/7c1c53bcc672c8f39f83e646844b4468dc25bcffcb3bd8d88189a56ff6ea/gnowsys-studio-0.4.dev.tar.gz", "yanked": false}], "0.5.dev": [{"comment_text": "", "digests": {"md5": "63049583946c4f9782a5892d6333de14", "sha256": "04963e98b3e47780980ff33a0c432a37f0c159d0f8a328e5f451413310e10ea0"}, "downloads": -1, "filename": "gnowsys-studio-0.5.dev.tar.gz", "has_sig": false, "md5_digest": "63049583946c4f9782a5892d6333de14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2572678, "upload_time": "2012-06-23T22:04:44", "upload_time_iso_8601": "2012-06-23T22:04:44.333958Z", "url": "https://files.pythonhosted.org/packages/89/f3/60667890ffa96cc7a7cf75726c88db457ed17b86eb0ac270f986340770b8/gnowsys-studio-0.5.dev.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "63049583946c4f9782a5892d6333de14", "sha256": "04963e98b3e47780980ff33a0c432a37f0c159d0f8a328e5f451413310e10ea0"}, "downloads": -1, "filename": "gnowsys-studio-0.5.dev.tar.gz", "has_sig": false, "md5_digest": "63049583946c4f9782a5892d6333de14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2572678, "upload_time": "2012-06-23T22:04:44", "upload_time_iso_8601": "2012-06-23T22:04:44.333958Z", "url": "https://files.pythonhosted.org/packages/89/f3/60667890ffa96cc7a7cf75726c88db457ed17b86eb0ac270f986340770b8/gnowsys-studio-0.5.dev.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:11 2020"}