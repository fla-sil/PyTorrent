{"info": {"author": "Gal Ben David", "author_email": "gal@intsights.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "<p align=\"center\">\n    <a href=\"https://github.com/intsights/garrison\">\n        <img src=\"https://raw.githubusercontent.com/intsights/garrison/master/images/logo.png\" alt=\"Logo\">\n    </a>\n    <h3 align=\"center\">\n        Queue server base on RocksDB as a KV-Store backend and gRPC as an interface\n    </h3>\n</p>\n\n![license](https://img.shields.io/badge/MIT-License-blue)\n![Python](https://img.shields.io/badge/Python-3.6%20%7C%203.7%20%7C%203.8-blue)\n![Build](https://github.com/intsights/garrison/workflows/Build/badge.svg)\n[![PyPi](https://img.shields.io/pypi/v/garrison.svg)](https://pypi.org/project/garrison/)\n\n## Table of Contents\n\n- [Table of Contents](#table-of-contents)\n- [About The Project](#about-the-project)\n  - [Built With](#built-with)\n  - [Prerequisites](#prerequisites)\n  - [Installation](#installation)\n- [Usage](#usage)\n  - [Server](#server)\n  - [Client](#client)\n- [License](#license)\n- [Contact](#contact)\n\n\n## About The Project\nGarrison is a RocksDB wrapped in a gRPC service to expose some high level functionalities.\nGarrison is also implments queue functionalities on the top of RocksDB KV store functionalities.\n\n### Built With\n* [gRPC](https://grpc.io/)\n* [RocksDB](https://rocksdb.org/)\n\n\n### Prerequisites\nIn order to pip install rocksdb you will need to install the following distro packages\n\n* Ubuntu 18.04\n```sh\nsudo apt install librocksdb-dev libsnappy-dev liblz4-dev\n```\n\n### Installation\n\n```sh\npip3 install garrison-server\n```\n\n\n\n## Usage\n\n### Server\n```shell\npython3 -m garrison.server --database-path=/data/garrison_db --port=10000\n```\n\n### Client\n```python\nimport garrison.client\n\nclient = garrison.client.GarrisonClient(\n    host='127.0.0.1',\n    port=10000,\n)\n\n# Sets a key inside the database - return whether the key is new or existed\nclient.key_set(\n    key=b'key_name',\n    value=b'value',\n)\n# Retrieving a key - return None if key does not exist\nvalue = client.key_get(\n    key=b'key_name',\n)\n# Deletes a key inside the database - return whether the key is deleted or wasn't existed\ndeleted_successfuly = client.key_delete(\n    key=b'key_name',\n)\n\n\n# Push items into a queue.\n# Priority is either NORMAL or HIGH, and controls whether the items will be pushed on the top or buttom of the queue\nclient.queue_push(\n    queue_name=b'queue_name',\n    items=[\n        b'item one',\n        b'item two',\n        b'item three',\n    ],\n    priority='NORMAL',\n)\n# Get the number of items in the queue\nnumber_of_items = client.queue_length(\n    queue_name=b'queue_name',\n)\n# Pulling items from the queue - return list of items. HIGH priority first.\nitems = client.queue_pop(\n    queue_name=b'queue_name',\n    number_of_items=3,\n)\n# Deletes a key inside the database - return whether the key is deleted or wasn't existed\ndeleted_successfuly = client.queue_delete(\n    queue_name=b'queue_name',\n)\n```\n\n\n## License\n\nDistributed under the MIT License. See `LICENSE` for more information.\n\n\n## Contact\n\nGal Ben David - intsights@gmail.com\n\nProject Link: [https://github.com/intsights/garrison](https://github.com/intsights/garrison)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/intsights/garrison", "keywords": "rocksdb db database queue fastapi", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "garrison-server", "package_url": "https://pypi.org/project/garrison-server/", "platform": "", "project_url": "https://pypi.org/project/garrison-server/", "project_urls": {"Homepage": "https://github.com/intsights/garrison", "Source": "https://github.com/intsights/garrison"}, "release_url": "https://pypi.org/project/garrison-server/0.1.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Queue server base on RocksDB as a KV-Store backend and gRPC as an interface", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n    <a href=\"https://github.com/intsights/garrison\" rel=\"nofollow\">\n        <img alt=\"Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0d2895740e87fe0624ed4b388d8437e540e9d9ad/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f696e747369676874732f6761727269736f6e2f6d61737465722f696d616765732f6c6f676f2e706e67\">\n    </a>\n    </p><h3>\n        Queue server base on RocksDB as a KV-Store backend and gRPC as an interface\n    </h3>\n<p></p>\n<p><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5e2c5645ad5ed0836f6be03a610f6db5ed84dfda/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d49542d4c6963656e73652d626c7565\">\n<img alt=\"Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/16c80b942b78aa6fc24cab1c86b7c4297e527484/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d332e36253230253743253230332e37253230253743253230332e382d626c7565\">\n<img alt=\"Build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/db9b9540af20e4e326b219d0dc90120b63bbf085/68747470733a2f2f6769746875622e636f6d2f696e747369676874732f6761727269736f6e2f776f726b666c6f77732f4275696c642f62616467652e737667\">\n<a href=\"https://pypi.org/project/garrison/\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0524cc7cda2af8c35c64169fb97c9af523f73133/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6761727269736f6e2e737667\"></a></p>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#table-of-contents\" rel=\"nofollow\">Table of Contents</a></li>\n<li><a href=\"#about-the-project\" rel=\"nofollow\">About The Project</a>\n<ul>\n<li><a href=\"#built-with\" rel=\"nofollow\">Built With</a></li>\n<li><a href=\"#prerequisites\" rel=\"nofollow\">Prerequisites</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n</ul>\n</li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a>\n<ul>\n<li><a href=\"#server\" rel=\"nofollow\">Server</a></li>\n<li><a href=\"#client\" rel=\"nofollow\">Client</a></li>\n</ul>\n</li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a></li>\n<li><a href=\"#contact\" rel=\"nofollow\">Contact</a></li>\n</ul>\n<h2>About The Project</h2>\n<p>Garrison is a RocksDB wrapped in a gRPC service to expose some high level functionalities.\nGarrison is also implments queue functionalities on the top of RocksDB KV store functionalities.</p>\n<h3>Built With</h3>\n<ul>\n<li><a href=\"https://grpc.io/\" rel=\"nofollow\">gRPC</a></li>\n<li><a href=\"https://rocksdb.org/\" rel=\"nofollow\">RocksDB</a></li>\n</ul>\n<h3>Prerequisites</h3>\n<p>In order to pip install rocksdb you will need to install the following distro packages</p>\n<ul>\n<li>Ubuntu 18.04</li>\n</ul>\n<pre>sudo apt install librocksdb-dev libsnappy-dev liblz4-dev\n</pre>\n<h3>Installation</h3>\n<pre>pip3 install garrison-server\n</pre>\n<h2>Usage</h2>\n<h3>Server</h3>\n<pre>python3 -m garrison.server --database-path<span class=\"o\">=</span>/data/garrison_db --port<span class=\"o\">=</span><span class=\"m\">10000</span>\n</pre>\n<h3>Client</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">garrison.client</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">garrison</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">GarrisonClient</span><span class=\"p\">(</span>\n    <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span>\n    <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Sets a key inside the database - return whether the key is new or existed</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">key_set</span><span class=\"p\">(</span>\n    <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'key_name'</span><span class=\"p\">,</span>\n    <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'value'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># Retrieving a key - return None if key does not exist</span>\n<span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">key_get</span><span class=\"p\">(</span>\n    <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'key_name'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># Deletes a key inside the database - return whether the key is deleted or wasn't existed</span>\n<span class=\"n\">deleted_successfuly</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">key_delete</span><span class=\"p\">(</span>\n    <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'key_name'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Push items into a queue.</span>\n<span class=\"c1\"># Priority is either NORMAL or HIGH, and controls whether the items will be pushed on the top or buttom of the queue</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">queue_push</span><span class=\"p\">(</span>\n    <span class=\"n\">queue_name</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'queue_name'</span><span class=\"p\">,</span>\n    <span class=\"n\">items</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"sa\">b</span><span class=\"s1\">'item one'</span><span class=\"p\">,</span>\n        <span class=\"sa\">b</span><span class=\"s1\">'item two'</span><span class=\"p\">,</span>\n        <span class=\"sa\">b</span><span class=\"s1\">'item three'</span><span class=\"p\">,</span>\n    <span class=\"p\">],</span>\n    <span class=\"n\">priority</span><span class=\"o\">=</span><span class=\"s1\">'NORMAL'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># Get the number of items in the queue</span>\n<span class=\"n\">number_of_items</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">queue_length</span><span class=\"p\">(</span>\n    <span class=\"n\">queue_name</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'queue_name'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># Pulling items from the queue - return list of items. HIGH priority first.</span>\n<span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">queue_pop</span><span class=\"p\">(</span>\n    <span class=\"n\">queue_name</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'queue_name'</span><span class=\"p\">,</span>\n    <span class=\"n\">number_of_items</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># Deletes a key inside the database - return whether the key is deleted or wasn't existed</span>\n<span class=\"n\">deleted_successfuly</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">queue_delete</span><span class=\"p\">(</span>\n    <span class=\"n\">queue_name</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'queue_name'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>License</h2>\n<p>Distributed under the MIT License. See <code>LICENSE</code> for more information.</p>\n<h2>Contact</h2>\n<p>Gal Ben David - <a href=\"mailto:intsights@gmail.com\">intsights@gmail.com</a></p>\n<p>Project Link: <a href=\"https://github.com/intsights/garrison\" rel=\"nofollow\">https://github.com/intsights/garrison</a></p>\n\n          </div>"}, "last_serial": 6919978, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "81ce0af5efa1600146823504b7effc10", "sha256": "2bb3ad6da79c6ec04bb4cd10a06bca6bc3bca3c7416adaa774785b1987b8acaf"}, "downloads": -1, "filename": "garrison-server-0.1.0.tar.gz", "has_sig": false, "md5_digest": "81ce0af5efa1600146823504b7effc10", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21997, "upload_time": "2020-03-31T12:46:27", "upload_time_iso_8601": "2020-03-31T12:46:27.135901Z", "url": "https://files.pythonhosted.org/packages/23/ec/5343371e51ab8a9ce78064fbbc697f36cd16067bfb5024099db99987e46c/garrison-server-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "81ce0af5efa1600146823504b7effc10", "sha256": "2bb3ad6da79c6ec04bb4cd10a06bca6bc3bca3c7416adaa774785b1987b8acaf"}, "downloads": -1, "filename": "garrison-server-0.1.0.tar.gz", "has_sig": false, "md5_digest": "81ce0af5efa1600146823504b7effc10", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21997, "upload_time": "2020-03-31T12:46:27", "upload_time_iso_8601": "2020-03-31T12:46:27.135901Z", "url": "https://files.pythonhosted.org/packages/23/ec/5343371e51ab8a9ce78064fbbc697f36cd16067bfb5024099db99987e46c/garrison-server-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:02 2020"}