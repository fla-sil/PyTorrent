{"info": {"author": "Chuck McCallum", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6"], "description": "# dataframer\n\n[![PyPI version](https://badge.fury.io/py/dataframer.svg)](https://pypi.org/project/dataframer/)\n\nTries to load any file into a pandas DataFrame,\nwith a minimum of configuration,\nand a focus on bioinformatics\n\n## Examples\n\nTypically, you\u2019ll read a file from disk (`open('my-file.txt', 'rb')`),\nbut a byte stream is simpler here.\n\n```\n>>> from io import BytesIO\n>>> from dataframer import dataframer\n>>> from pandas import set_option\n\n>>> set_option('display.max_columns', None)\n\n>>> bytes = b'a,b,c,z\\n1,2,3,foo\\n4,5,6,bar'\n>>> stream = BytesIO(bytes)\n\n```\n\nDefault behavior is to strip non-numeric values after the first column.\n```\n>>> df_info = dataframer.parse(stream)\n>>> df_info.data_frame\n   b  c\na      \n1  2  3\n4  5  6\n>>> df_info.label_map is None\nTrue\n\n```\n\nAlternatively, they can be preserved in place...\n```\n>>> df_info = dataframer.parse(stream, keep_strings=True)\n>>> df_info.data_frame\n   b  c    z\na           \n1  2  3  foo\n4  5  6  bar\n>>> df_info.label_map is None\nTrue\n\n```\n\n... or they can be used to compose more meaningful row labels.\n```\n>>> df_info = dataframer.parse(stream, relabel=True)\n>>> df_info.data_frame\n   b  c\na      \n1  2  3\n4  5  6\n>>> df_info.label_map\n{1: 'foo / 1', 4: 'bar / 4'}\n\n```\n\nAlternatively, the first column can also be treated as data.\n```\n>>> df_info = dataframer.parse(stream, col_zero_index=False)\n>>> df_info.data_frame\n   a  b  c\n0  1  2  3\n1  4  5  6\n>>> df_info.label_map is None\nTrue\n\n```\n\nIf you don't need the whole file, but instead only want the first\nrow for column information:\n```\n>>> df_info = dataframer.parse(stream, first_row_only=True)\n>>> df_info.data_frame\n   b  c\na      \n1  2  3\n>>> df_info.label_map is None\nTrue\n\n```\n\nSingle column lists are given an implicit header:\n```\n>>> bytes = b'banana\\napple\\npear'\n>>> stream = BytesIO(bytes)\n>>> df_info = dataframer.parse(stream)\n>>> df_info.data_frame\n     item\n0  banana\n1   apple\n2    pear\n\n```\n\n## Release process\n\nIn your branch update `VERSION.txt`, using semantic versioning: When the PR\nis merged, the successful Travis build will push a new version to pypi.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/refinery-platform/dataframer/", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "dataframer", "package_url": "https://pypi.org/project/dataframer/", "platform": "", "project_url": "https://pypi.org/project/dataframer/", "project_urls": {"Homepage": "https://github.com/refinery-platform/dataframer/"}, "release_url": "https://pypi.org/project/dataframer/0.0.3/", "requires_dist": ["pandas"], "requires_python": "", "summary": "Load any file into a pandas DataFrame, with a minimum of configuration, and a focus on bioinformatics", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>dataframer</h1>\n<p><a href=\"https://pypi.org/project/dataframer/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a182ed5a023b2dc73b8582608e577c2045528b09/68747470733a2f2f62616467652e667572792e696f2f70792f646174616672616d65722e737667\"></a></p>\n<p>Tries to load any file into a pandas DataFrame,\nwith a minimum of configuration,\nand a focus on bioinformatics</p>\n<h2>Examples</h2>\n<p>Typically, you\u2019ll read a file from disk (<code>open('my-file.txt', 'rb')</code>),\nbut a byte stream is simpler here.</p>\n<pre><code>&gt;&gt;&gt; from io import BytesIO\n&gt;&gt;&gt; from dataframer import dataframer\n&gt;&gt;&gt; from pandas import set_option\n\n&gt;&gt;&gt; set_option('display.max_columns', None)\n\n&gt;&gt;&gt; bytes = b'a,b,c,z\\n1,2,3,foo\\n4,5,6,bar'\n&gt;&gt;&gt; stream = BytesIO(bytes)\n\n</code></pre>\n<p>Default behavior is to strip non-numeric values after the first column.</p>\n<pre><code>&gt;&gt;&gt; df_info = dataframer.parse(stream)\n&gt;&gt;&gt; df_info.data_frame\n   b  c\na      \n1  2  3\n4  5  6\n&gt;&gt;&gt; df_info.label_map is None\nTrue\n\n</code></pre>\n<p>Alternatively, they can be preserved in place...</p>\n<pre><code>&gt;&gt;&gt; df_info = dataframer.parse(stream, keep_strings=True)\n&gt;&gt;&gt; df_info.data_frame\n   b  c    z\na           \n1  2  3  foo\n4  5  6  bar\n&gt;&gt;&gt; df_info.label_map is None\nTrue\n\n</code></pre>\n<p>... or they can be used to compose more meaningful row labels.</p>\n<pre><code>&gt;&gt;&gt; df_info = dataframer.parse(stream, relabel=True)\n&gt;&gt;&gt; df_info.data_frame\n   b  c\na      \n1  2  3\n4  5  6\n&gt;&gt;&gt; df_info.label_map\n{1: 'foo / 1', 4: 'bar / 4'}\n\n</code></pre>\n<p>Alternatively, the first column can also be treated as data.</p>\n<pre><code>&gt;&gt;&gt; df_info = dataframer.parse(stream, col_zero_index=False)\n&gt;&gt;&gt; df_info.data_frame\n   a  b  c\n0  1  2  3\n1  4  5  6\n&gt;&gt;&gt; df_info.label_map is None\nTrue\n\n</code></pre>\n<p>If you don't need the whole file, but instead only want the first\nrow for column information:</p>\n<pre><code>&gt;&gt;&gt; df_info = dataframer.parse(stream, first_row_only=True)\n&gt;&gt;&gt; df_info.data_frame\n   b  c\na      \n1  2  3\n&gt;&gt;&gt; df_info.label_map is None\nTrue\n\n</code></pre>\n<p>Single column lists are given an implicit header:</p>\n<pre><code>&gt;&gt;&gt; bytes = b'banana\\napple\\npear'\n&gt;&gt;&gt; stream = BytesIO(bytes)\n&gt;&gt;&gt; df_info = dataframer.parse(stream)\n&gt;&gt;&gt; df_info.data_frame\n     item\n0  banana\n1   apple\n2    pear\n\n</code></pre>\n<h2>Release process</h2>\n<p>In your branch update <code>VERSION.txt</code>, using semantic versioning: When the PR\nis merged, the successful Travis build will push a new version to pypi.</p>\n\n          </div>"}, "last_serial": 4750787, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "466325144537a2e2b2a9059badbe6e5c", "sha256": "a641b2363832f98ccd441d19250ec57d4f6e238828c9a7c286993420f10d42e1"}, "downloads": -1, "filename": "dataframer-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "466325144537a2e2b2a9059badbe6e5c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4127, "upload_time": "2018-07-30T14:45:14", "upload_time_iso_8601": "2018-07-30T14:45:14.910779Z", "url": "https://files.pythonhosted.org/packages/64/34/3d8b9519b98ae19e6b0e32e7754766f8530c22749d3c33a760c1da91d52e/dataframer-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8882892af150dcc3eab9fdd40266b8d8", "sha256": "742b727bc8abdac978e50f4cfc60775c1a5083eee779c598fea2c16f35f8a2e6"}, "downloads": -1, "filename": "dataframer-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8882892af150dcc3eab9fdd40266b8d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3908, "upload_time": "2018-07-30T14:45:15", "upload_time_iso_8601": "2018-07-30T14:45:15.881036Z", "url": "https://files.pythonhosted.org/packages/bc/ac/63f0049ca6b0cb2999c1d1431c3d8d4873e32581dd75e1495a93996bf803/dataframer-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "8c0d994b9c1d302a41d715ec6e8c3301", "sha256": "f32bece3456a68b4c996bc056f92811a01e5699cbf3262b8da3f8a59bde02abc"}, "downloads": -1, "filename": "dataframer-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8c0d994b9c1d302a41d715ec6e8c3301", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4628, "upload_time": "2018-08-06T17:30:09", "upload_time_iso_8601": "2018-08-06T17:30:09.714679Z", "url": "https://files.pythonhosted.org/packages/bb/eb/1f4818984c463ae651099ccfda82da468f5d42cdcbeda2588f684675ffad/dataframer-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b7c25a719a3621ef9abab41f83b7896", "sha256": "e8ac5b8c17070f204f86188882a290574506b995f6430b7197b0d20cd52728b3"}, "downloads": -1, "filename": "dataframer-0.0.2.tar.gz", "has_sig": false, "md5_digest": "6b7c25a719a3621ef9abab41f83b7896", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4475, "upload_time": "2018-08-06T17:30:10", "upload_time_iso_8601": "2018-08-06T17:30:10.688138Z", "url": "https://files.pythonhosted.org/packages/34/62/0fc41543c5ac77eee55b2956bd917a79c738f4898c554b89ff8505a761b6/dataframer-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "d3dc75ae1fcdd936bb0cf49c6297805a", "sha256": "8b5efcf33d6c22db5a769c1b62fc203e7d3c44c4642870d289e7b3cb9dd4d88d"}, "downloads": -1, "filename": "dataframer-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d3dc75ae1fcdd936bb0cf49c6297805a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4920, "upload_time": "2018-09-11T16:16:47", "upload_time_iso_8601": "2018-09-11T16:16:47.511186Z", "url": "https://files.pythonhosted.org/packages/7e/46/22a27c0b8e440bceff183a3d77c7e35d777c8e2c9099b9e9134b17cdd3c5/dataframer-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d0ee5bb488e4d32900c5e0573d6d154", "sha256": "1883b531db9ef68a0b202b8ede0c0ea4d3ecd927718e4f4eaf7a18320c8cb669"}, "downloads": -1, "filename": "dataframer-0.0.3.tar.gz", "has_sig": false, "md5_digest": "2d0ee5bb488e4d32900c5e0573d6d154", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4849, "upload_time": "2018-09-11T16:16:48", "upload_time_iso_8601": "2018-09-11T16:16:48.695171Z", "url": "https://files.pythonhosted.org/packages/8c/85/9d801ec21ebd4d9bd4717d506821ce869a7dc13288a34d2cc367c7d14e18/dataframer-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d3dc75ae1fcdd936bb0cf49c6297805a", "sha256": "8b5efcf33d6c22db5a769c1b62fc203e7d3c44c4642870d289e7b3cb9dd4d88d"}, "downloads": -1, "filename": "dataframer-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d3dc75ae1fcdd936bb0cf49c6297805a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4920, "upload_time": "2018-09-11T16:16:47", "upload_time_iso_8601": "2018-09-11T16:16:47.511186Z", "url": "https://files.pythonhosted.org/packages/7e/46/22a27c0b8e440bceff183a3d77c7e35d777c8e2c9099b9e9134b17cdd3c5/dataframer-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d0ee5bb488e4d32900c5e0573d6d154", "sha256": "1883b531db9ef68a0b202b8ede0c0ea4d3ecd927718e4f4eaf7a18320c8cb669"}, "downloads": -1, "filename": "dataframer-0.0.3.tar.gz", "has_sig": false, "md5_digest": "2d0ee5bb488e4d32900c5e0573d6d154", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4849, "upload_time": "2018-09-11T16:16:48", "upload_time_iso_8601": "2018-09-11T16:16:48.695171Z", "url": "https://files.pythonhosted.org/packages/8c/85/9d801ec21ebd4d9bd4717d506821ce869a7dc13288a34d2cc367c7d14e18/dataframer-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:24 2020"}