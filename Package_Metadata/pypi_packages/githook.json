{"info": {"author": "Andraz Brodnik", "author_email": "brodul@brodul.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Topic :: Utilities"], "description": "=======\ngithook\n=======\n\nThis aplication starts a small web server, \nreads a INI config file and listens for GitHub post requests,\nthen runs a script in response of the post request.\n\n.. image:: https://secure.travis-ci.org/brodul/githook.png?branch=master\n\nInspired by:\n\nhttps://github.com/hasgeek/github-hook\n\nHow to install and use\n======================\n\n* Git clone\n\n* ``cd githook``\n\n* Create a config.ini (please refer to the example.ini)\n\n* run the following commands:\n\n    *\n        ``python bootstrap.py -d``\n\n    *\n        ``bin/buildout``\n\n    *\n        ``bin/supervisord``\n\nOR\n\n* Install the githook package via ``pip``, ``easy_install`` or ``buildout``\n\n* githook (script) will appear in you bin PATH\n\n* just run ``githook``\n\ngithook now listens on port 5000 port for for post request from github\n\nexample.ini\n===========\n\nExample\n::\n\n    [something]\n    ; This section will match if you push commit or more commits to project/repo \"test\" branch \"master\"\n\n    ; You must specify the project/repository name\n    name=test\n\n    ; You must specify your username or the name of the organization\n    owner=brodul\n\n    ; You must specify branch\n    branch=master\n\n    ; The command that will be executed on match\n    cmd=ls\n\n    ; comment\n    # comment\n\n    [willmatch]\n    ; All the sections that match will be executed\n    name=test\n    owner=brodul\n    branch=master\n    cmd=pwd\n\n\n    [tagmatch]\n    name=test\n    owner=brodul\n    ; This will match on tag move, delete, create ...\n    tag=trololo\n    cmd=pwd\n\n\nGithook command line usage\n==========================\n\nYou can access the help always with the ``-h`` or ``--help`` option\n::\n    \n    Usage: githook [options]\n\n    Options:\n      -h, --help            show this help message and exit\n      -c FILE, --config=FILE\n                            INI file config [default: ./config.ini]\n      -l ADDRESS, --listen=ADDRESS\n                            hostname to listen on [default: localhost]\n      -p PORT, --port=PORT  the port of githook [default: 5000]\n\nNginx configuration\n===================\n\nyou still need to configure nginx or apache to make a proxy pass\n\nExample\n::\n\n    server {\n            listen   80 ;\n            server_name domain.com;\n\n            access_log  /var/log/nginx/githook.access.log;\n            error_log  /var/log/nginx/githook.error.log;\n\n\n            location /githook {\n\n                    # Allow github IPs\n                    allow 207.97.227.253; \n                    allow 50.57.128.197;\n                    allow 108.171.174.178;\n                    deny all;\n\n                    rewrite /githook / break;\n\n                    proxy_pass http://localhost:5000 ;\n\n            }\n\nApache configuration\n====================\n\nTODO\n\nTests\n=====\n\nTo run tests use:\n\n``bin/test``\n\nTODO\n====\n\nSee github issues.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brodul/githook", "keywords": "", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "githook", "package_url": "https://pypi.org/project/githook/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/githook/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/brodul/githook"}, "release_url": "https://pypi.org/project/githook/0.2/", "requires_dist": null, "requires_python": null, "summary": "Simple web application that runs a script in response of GitHub post hook.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This aplication starts a small web server,\nreads a INI config file and listens for GitHub post requests,\nthen runs a script in response of the post request.</p>\n<img alt=\"https://secure.travis-ci.org/brodul/githook.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d87eccf6551dcc136905e214062642abe2b8063d/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f62726f64756c2f676974686f6f6b2e706e673f6272616e63683d6d6173746572\">\n<p>Inspired by:</p>\n<p><a href=\"https://github.com/hasgeek/github-hook\" rel=\"nofollow\">https://github.com/hasgeek/github-hook</a></p>\n<div id=\"how-to-install-and-use\">\n<h2>How to install and use</h2>\n<ul>\n<li><p>Git clone</p>\n</li>\n<li><p><tt>cd githook</tt></p>\n</li>\n<li><p>Create a config.ini (please refer to the example.ini)</p>\n</li>\n<li><p>run the following commands:</p>\n<blockquote>\n<ul>\n<li><tt>python bootstrap.py <span class=\"pre\">-d</span></tt></li>\n<li><tt>bin/buildout</tt></li>\n<li><tt>bin/supervisord</tt></li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<p>OR</p>\n<ul>\n<li>Install the githook package via <tt>pip</tt>, <tt>easy_install</tt> or <tt>buildout</tt></li>\n<li>githook (script) will appear in you bin PATH</li>\n<li>just run <tt>githook</tt></li>\n</ul>\n<p>githook now listens on port 5000 port for for post request from github</p>\n</div>\n<div id=\"example-ini\">\n<h2>example.ini</h2>\n<p>Example</p>\n<pre>[something]\n; This section will match if you push commit or more commits to project/repo \"test\" branch \"master\"\n\n; You must specify the project/repository name\nname=test\n\n; You must specify your username or the name of the organization\nowner=brodul\n\n; You must specify branch\nbranch=master\n\n; The command that will be executed on match\ncmd=ls\n\n; comment\n# comment\n\n[willmatch]\n; All the sections that match will be executed\nname=test\nowner=brodul\nbranch=master\ncmd=pwd\n\n\n[tagmatch]\nname=test\nowner=brodul\n; This will match on tag move, delete, create ...\ntag=trololo\ncmd=pwd\n</pre>\n</div>\n<div id=\"githook-command-line-usage\">\n<h2>Githook command line usage</h2>\n<p>You can access the help always with the <tt><span class=\"pre\">-h</span></tt> or <tt><span class=\"pre\">--help</span></tt> option</p>\n<pre>Usage: githook [options]\n\nOptions:\n  -h, --help            show this help message and exit\n  -c FILE, --config=FILE\n                        INI file config [default: ./config.ini]\n  -l ADDRESS, --listen=ADDRESS\n                        hostname to listen on [default: localhost]\n  -p PORT, --port=PORT  the port of githook [default: 5000]\n</pre>\n</div>\n<div id=\"nginx-configuration\">\n<h2>Nginx configuration</h2>\n<p>you still need to configure nginx or apache to make a proxy pass</p>\n<p>Example</p>\n<pre>server {\n        listen   80 ;\n        server_name domain.com;\n\n        access_log  /var/log/nginx/githook.access.log;\n        error_log  /var/log/nginx/githook.error.log;\n\n\n        location /githook {\n\n                # Allow github IPs\n                allow 207.97.227.253;\n                allow 50.57.128.197;\n                allow 108.171.174.178;\n                deny all;\n\n                rewrite /githook / break;\n\n                proxy_pass http://localhost:5000 ;\n\n        }\n</pre>\n</div>\n<div id=\"apache-configuration\">\n<h2>Apache configuration</h2>\n<p>TODO</p>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>To run tests use:</p>\n<p><tt>bin/test</tt></p>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<p>See github issues.</p>\n</div>\n\n          </div>"}, "last_serial": 1347614, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "759f2ca05eed489fc2de2cccb1a4891d", "sha256": "d33bc985fbc03fcf142c221193e3b81ff3e2c697468ec5978a5cf147e8ebeffd"}, "downloads": -1, "filename": "githook-0.2.zip", "has_sig": false, "md5_digest": "759f2ca05eed489fc2de2cccb1a4891d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9409, "upload_time": "2012-08-22T13:35:01", "upload_time_iso_8601": "2012-08-22T13:35:01.087140Z", "url": "https://files.pythonhosted.org/packages/27/62/3c280423cb0a6803ce7d09a519420bcf8ba1b87c281cd911971453d49c11/githook-0.2.zip", "yanked": false}], "0.2.1dev": [{"comment_text": "", "digests": {"md5": "e518560365db020a85b63d22716f0933", "sha256": "ba9958849b267d728922dbba1784a198bbbcfa8cda4056bd7d6a525f38cf096a"}, "downloads": -1, "filename": "githook-0.2.1dev.zip", "has_sig": false, "md5_digest": "e518560365db020a85b63d22716f0933", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9500, "upload_time": "2014-12-17T12:33:16", "upload_time_iso_8601": "2014-12-17T12:33:16.379289Z", "url": "https://files.pythonhosted.org/packages/ab/70/46482cc2d404c45c8d45a4a61860822b82708c0fb36f92fcb1281960bdd2/githook-0.2.1dev.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "759f2ca05eed489fc2de2cccb1a4891d", "sha256": "d33bc985fbc03fcf142c221193e3b81ff3e2c697468ec5978a5cf147e8ebeffd"}, "downloads": -1, "filename": "githook-0.2.zip", "has_sig": false, "md5_digest": "759f2ca05eed489fc2de2cccb1a4891d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9409, "upload_time": "2012-08-22T13:35:01", "upload_time_iso_8601": "2012-08-22T13:35:01.087140Z", "url": "https://files.pythonhosted.org/packages/27/62/3c280423cb0a6803ce7d09a519420bcf8ba1b87c281cd911971453d49c11/githook-0.2.zip", "yanked": false}], "timestamp": "Fri May  8 00:57:03 2020"}