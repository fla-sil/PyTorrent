{"info": {"author": "Hossein Ghodse", "author_email": "hossein.ghodse@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Affero General Public License v3", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# *obf* - an obfuscation tool and library\n\n*obf* is designed to obfuscate an input document, whilst ensuring that the output is still (somewhat) human-readable and \nwhile also maintaining consistency of mapping between an input plaintext and an obfuscated output, such that \nobf(plaintext) always yields the same result.\n\nThis latter characteristic means that *obf* is not really suitable for strong encryption, as frequency analysis of the \noutput ciphertext, perhaps with the assistance of a crib, could make the output comprehensible to an attacker.\n\nThe intent of *obf* is to allow the sharing of potentially sensitive data outside of a protected zone while ensuring \nit's continued consistency, and thus operability without requiring any changes to other tools and tooling.\n\n*obf* was developed as a tool to allow the copying of data (files and databases) from a protected \"green\" network to \nunprotected \"red\" zones, including developer workstations and laptops while maintaining reasonable data privacy. *obf* \nis intended to be used either as a standalone tool or as a library in an automated data-copy process.  \n\n**Installation instructions**\n-----------------------------\n*obf* is written in Python, and you can use the pip installer to install it thus:\n\n```\n$ pip install obf\n```\n\n**Usage**\n---------\n```\nobf [-h] [-b [blockedwords file]] [-w [codewords file]] [-c]\n                      [-n [N]] [-e [E]] [-a [ALGO]] [-s [SALT]] [-l] [-v]\n                      [plaintext]\n\n```\n\n#### positional arguments:\n\n  ```plaintext```       A plaintext to obfuscate. If no plaintext is provided,\n                        then obf will look at stdin instead.\n\n#### optional arguments:\n\n```-h, --help```        Show this help message and exit\n\n```-b [blockedwords file]```\n                        A file containing specific words to block. If missing\n                        the entire input is obfuscated.\n\n```-w [codewords file]```\n                        A file containing code words to use.\n\n```-c ```               Display a crib showing the mapping of blocked values\n                        to their obfuscated values. Only works when a specific\n                        blockfile is used with the -b option.\n\n```-n [N]```            An index to indicate which bytes of the generated hash\n                        to use as a lookup into the codewords file. Defaults\n                        to 0.\n\n```-e [E]```            A string of comma-separated domain name components\n                        that should be exempt from obfuscation to aid\n                        readability. Dots are not permitted/valid. Defaults to\n                        'com,co,uk,org' and any that are specified on the\n                        command line are added to this list.\n\n```-a [ALGO], --algo [ALGO]```\n                        The hash algorithm to use as a basis for indexing the\n                        codewords file; defaults to SHA256\n\n```-s [SALT], --salt [SALT]```\n                        A salt for the hash function to ensure uniqueness of\n                        encoding.\n\n```-l, --list-algos``` List available hash algorithms.\n\n```-j [JSON], --json [JSON]```\n                        Treat the input as JSON, and apply the obfuscation\n                        rules to each of the fields/keys specified in this\n                        space-delimited list\n\n\n```-v ```               Verbose mode = show key parameters, etc\n\n\n\n\n**Examples**\n------------\n\n```\n$ obf hello\nSPRIGHTFUL\n\n```\n```\n$ cat plaintext.txt | obf\nLITHARGE LUNE FELINES PROPHECY FORBORNE ANKLUNGS SPAMS VOYAGE WIVERNS. OUBLIETTES RESTRICTIONS, TRIPTYCHS DREAMING BOLETUS STIRRING THYME BURK TWINS FELINES FRETS PEMMICAN.\nSTUBBORNNESS HANKERS'BACKSWORD GIFTS ANKLUNGS RIDER PICA RECTA DREAMING@CORPULENCE.TACHOGRAMS BOLETUS STIRRING@CORPULENCE.TACHOGRAMS BLUNGER GIBUSES REPLETES WIVERNS.\nLITHARGE SLOTTERS ELUDE DIPODIES GABFESTS EXORCISM URCHIN SOLUTE UNEARTHS PRUNES, BOLETUS STRAFE GABFESTS. \"DREAMING\", \"STIRRING\". DREAMING'UPRISE ASPHALTS. STIRRING\nDREAMING STIRRING.\n\nLITHARGE SLOTTERS GAMB LODGED PICA BAWL TRANSACTORS ROUTINISTS: PIXELS.JUMBLER@CONNECTORS.TACHOGRAMS ANKLUNGS BANTENG COENZYME GIBUSES FLOCKS.\n\n\n```\n```\n$ cat plaintext.txt | obf -b blockedwords.txt \nThis is a sample file that holds some secrets. For example, both DREAMING and STIRRING are examples of a FRETS PEMMICAN.\nSimilarly you'd expect that their email addresses DREAMING@CORPULENCE.com and STIRRING@CORPULENCE.com should be considered secrets.\nThis line just confims behaviour with preceding or following punctuation, and EOL behaviour. \"DREAMING\", \"STIRRING\". DREAMING's house. STIRRING\nDREAMING STIRRING.\n\nThis line has another email address in it: PIXELS.JUMBLER@CONNECTORS.com that ought to be obfuscated.\n\n\n```\n```\n$ cat plaintext.txt | obf -b blockedwords.txt -n23\nThis is a sample file that holds some secrets. For example, both RETENE and GIBLETS are examples of a SACCHAROID CLEAVE.\nSimilarly you'd expect that their email addresses RETENE@TEMPERS.com and GIBLETS@TEMPERS.com should be considered secrets.\nThis line just confims behaviour with preceding or following punctuation, and EOL behaviour. \"RETENE\", \"GIBLETS\". RETENE's house. GIBLETS\nRETENE GIBLETS.\n\nThis line has another email address in it: UNREELS.CLEEKS@UPBEARS.com that ought to be obfuscated.\n\n\n```\n```\n$ cat plaintext.txt | obf -b blockedwords.txt -n23 -e bobandsue\nThis is a sample file that holds some secrets. For example, both RETENE and GIBLETS are examples of a SACCHAROID CLEAVE.\nSimilarly you'd expect that their email addresses RETENE@bobandsue.com and GIBLETS@bobandsue.com should be considered secrets.\nThis line just confims behaviour with preceding or following punctuation, and EOL behaviour. \"RETENE\", \"GIBLETS\". RETENE's house. GIBLETS\nRETENE GIBLETS.\n\nThis line has another email address in it: UNREELS.CLEEKS@UPBEARS.com that ought to be obfuscated.\n\n\n```\n```\n$ cat plaintext.txt | obf -b blockedwords.txt -n23 -e bobandsue -v -c\n{'blockedwords': ['secret', 'name', 'bob', 'sue'], 'hash_index': 23, 'hash_index_length': 4, \n'codewords_file': '/Users/hossein/anaconda3/lib/python3.6/site-packages/obf/codewords.txt', \n'codewords_hash': '25e011f81127ec5b07511850b3c153ce6939ff9b96bc889b2e66fb36782fbc0e', \n'excluded_domains': ['com', 'org', 'co', 'uk', 'bobandsue'], 'codewords_length': 66740}\nsecret -> SACCHAROID\nname -> CLEAVE\nbob -> RETENE\nsue -> GIBLETS\n```\n\n```\nobf -b blockedwords.txt -c -v -n23 --algo MD5 --salt examplesalt\n{'codewords_hash': '25e011f81127ec5b07511850b3c153ce6939ff9b96bc889b2e66fb36782fbc0e', 'salt': 'examplesalt',\n 'hash_index_length': 4, 'hash_algo': 'MD5', 'excluded_domains': ['com', 'org', 'co', 'uk'], 'hash_index': 12, \n 'codewords_file': '../obf/codewords.txt', 'blockedwords': ['secret', 'name', 'bob', 'sue'], \n 'codewords_length': 66740}\nsecret -> REVEALMENT\nname -> LOBATE\nbob -> ZOMBIS\nsue -> DEIL\n```\n\n**Homepage**\n------------\n\nYou can find the homepage of *obf* at https://github.com/hossg/obf\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hossg/obf", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "obf", "package_url": "https://pypi.org/project/obf/", "platform": "", "project_url": "https://pypi.org/project/obf/", "project_urls": {"Homepage": "https://github.com/hossg/obf"}, "release_url": "https://pypi.org/project/obf/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "an obfuscation tool and library", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><em>obf</em> - an obfuscation tool and library</h1>\n<p><em>obf</em> is designed to obfuscate an input document, whilst ensuring that the output is still (somewhat) human-readable and\nwhile also maintaining consistency of mapping between an input plaintext and an obfuscated output, such that\nobf(plaintext) always yields the same result.</p>\n<p>This latter characteristic means that <em>obf</em> is not really suitable for strong encryption, as frequency analysis of the\noutput ciphertext, perhaps with the assistance of a crib, could make the output comprehensible to an attacker.</p>\n<p>The intent of <em>obf</em> is to allow the sharing of potentially sensitive data outside of a protected zone while ensuring\nit's continued consistency, and thus operability without requiring any changes to other tools and tooling.</p>\n<p><em>obf</em> was developed as a tool to allow the copying of data (files and databases) from a protected \"green\" network to\nunprotected \"red\" zones, including developer workstations and laptops while maintaining reasonable data privacy. <em>obf</em>\nis intended to be used either as a standalone tool or as a library in an automated data-copy process.</p>\n<h2><strong>Installation instructions</strong></h2>\n<p><em>obf</em> is written in Python, and you can use the pip installer to install it thus:</p>\n<pre><code>$ pip install obf\n</code></pre>\n<h2><strong>Usage</strong></h2>\n<pre><code>obf [-h] [-b [blockedwords file]] [-w [codewords file]] [-c]\n                      [-n [N]] [-e [E]] [-a [ALGO]] [-s [SALT]] [-l] [-v]\n                      [plaintext]\n\n</code></pre>\n<h4>positional arguments:</h4>\n<p><code>plaintext</code>       A plaintext to obfuscate. If no plaintext is provided,\nthen obf will look at stdin instead.</p>\n<h4>optional arguments:</h4>\n<p><code>-h, --help</code>        Show this help message and exit</p>\n<p><code>-b [blockedwords file]</code>\nA file containing specific words to block. If missing\nthe entire input is obfuscated.</p>\n<p><code>-w [codewords file]</code>\nA file containing code words to use.</p>\n<p><code>-c</code>               Display a crib showing the mapping of blocked values\nto their obfuscated values. Only works when a specific\nblockfile is used with the -b option.</p>\n<p><code>-n [N]</code>            An index to indicate which bytes of the generated hash\nto use as a lookup into the codewords file. Defaults\nto 0.</p>\n<p><code>-e [E]</code>            A string of comma-separated domain name components\nthat should be exempt from obfuscation to aid\nreadability. Dots are not permitted/valid. Defaults to\n'com,co,uk,org' and any that are specified on the\ncommand line are added to this list.</p>\n<p><code>-a [ALGO], --algo [ALGO]</code>\nThe hash algorithm to use as a basis for indexing the\ncodewords file; defaults to SHA256</p>\n<p><code>-s [SALT], --salt [SALT]</code>\nA salt for the hash function to ensure uniqueness of\nencoding.</p>\n<p><code>-l, --list-algos</code> List available hash algorithms.</p>\n<p><code>-j [JSON], --json [JSON]</code>\nTreat the input as JSON, and apply the obfuscation\nrules to each of the fields/keys specified in this\nspace-delimited list</p>\n<p><code>-v</code>               Verbose mode = show key parameters, etc</p>\n<h2><strong>Examples</strong></h2>\n<pre><code>$ obf hello\nSPRIGHTFUL\n\n</code></pre>\n<pre><code>$ cat plaintext.txt | obf\nLITHARGE LUNE FELINES PROPHECY FORBORNE ANKLUNGS SPAMS VOYAGE WIVERNS. OUBLIETTES RESTRICTIONS, TRIPTYCHS DREAMING BOLETUS STIRRING THYME BURK TWINS FELINES FRETS PEMMICAN.\nSTUBBORNNESS HANKERS'BACKSWORD GIFTS ANKLUNGS RIDER PICA RECTA DREAMING@CORPULENCE.TACHOGRAMS BOLETUS STIRRING@CORPULENCE.TACHOGRAMS BLUNGER GIBUSES REPLETES WIVERNS.\nLITHARGE SLOTTERS ELUDE DIPODIES GABFESTS EXORCISM URCHIN SOLUTE UNEARTHS PRUNES, BOLETUS STRAFE GABFESTS. \"DREAMING\", \"STIRRING\". DREAMING'UPRISE ASPHALTS. STIRRING\nDREAMING STIRRING.\n\nLITHARGE SLOTTERS GAMB LODGED PICA BAWL TRANSACTORS ROUTINISTS: PIXELS.JUMBLER@CONNECTORS.TACHOGRAMS ANKLUNGS BANTENG COENZYME GIBUSES FLOCKS.\n\n\n</code></pre>\n<pre><code>$ cat plaintext.txt | obf -b blockedwords.txt \nThis is a sample file that holds some secrets. For example, both DREAMING and STIRRING are examples of a FRETS PEMMICAN.\nSimilarly you'd expect that their email addresses DREAMING@CORPULENCE.com and STIRRING@CORPULENCE.com should be considered secrets.\nThis line just confims behaviour with preceding or following punctuation, and EOL behaviour. \"DREAMING\", \"STIRRING\". DREAMING's house. STIRRING\nDREAMING STIRRING.\n\nThis line has another email address in it: PIXELS.JUMBLER@CONNECTORS.com that ought to be obfuscated.\n\n\n</code></pre>\n<pre><code>$ cat plaintext.txt | obf -b blockedwords.txt -n23\nThis is a sample file that holds some secrets. For example, both RETENE and GIBLETS are examples of a SACCHAROID CLEAVE.\nSimilarly you'd expect that their email addresses RETENE@TEMPERS.com and GIBLETS@TEMPERS.com should be considered secrets.\nThis line just confims behaviour with preceding or following punctuation, and EOL behaviour. \"RETENE\", \"GIBLETS\". RETENE's house. GIBLETS\nRETENE GIBLETS.\n\nThis line has another email address in it: UNREELS.CLEEKS@UPBEARS.com that ought to be obfuscated.\n\n\n</code></pre>\n<pre><code>$ cat plaintext.txt | obf -b blockedwords.txt -n23 -e bobandsue\nThis is a sample file that holds some secrets. For example, both RETENE and GIBLETS are examples of a SACCHAROID CLEAVE.\nSimilarly you'd expect that their email addresses RETENE@bobandsue.com and GIBLETS@bobandsue.com should be considered secrets.\nThis line just confims behaviour with preceding or following punctuation, and EOL behaviour. \"RETENE\", \"GIBLETS\". RETENE's house. GIBLETS\nRETENE GIBLETS.\n\nThis line has another email address in it: UNREELS.CLEEKS@UPBEARS.com that ought to be obfuscated.\n\n\n</code></pre>\n<pre><code>$ cat plaintext.txt | obf -b blockedwords.txt -n23 -e bobandsue -v -c\n{'blockedwords': ['secret', 'name', 'bob', 'sue'], 'hash_index': 23, 'hash_index_length': 4, \n'codewords_file': '/Users/hossein/anaconda3/lib/python3.6/site-packages/obf/codewords.txt', \n'codewords_hash': '25e011f81127ec5b07511850b3c153ce6939ff9b96bc889b2e66fb36782fbc0e', \n'excluded_domains': ['com', 'org', 'co', 'uk', 'bobandsue'], 'codewords_length': 66740}\nsecret -&gt; SACCHAROID\nname -&gt; CLEAVE\nbob -&gt; RETENE\nsue -&gt; GIBLETS\n</code></pre>\n<pre><code>obf -b blockedwords.txt -c -v -n23 --algo MD5 --salt examplesalt\n{'codewords_hash': '25e011f81127ec5b07511850b3c153ce6939ff9b96bc889b2e66fb36782fbc0e', 'salt': 'examplesalt',\n 'hash_index_length': 4, 'hash_algo': 'MD5', 'excluded_domains': ['com', 'org', 'co', 'uk'], 'hash_index': 12, \n 'codewords_file': '../obf/codewords.txt', 'blockedwords': ['secret', 'name', 'bob', 'sue'], \n 'codewords_length': 66740}\nsecret -&gt; REVEALMENT\nname -&gt; LOBATE\nbob -&gt; ZOMBIS\nsue -&gt; DEIL\n</code></pre>\n<h2><strong>Homepage</strong></h2>\n<p>You can find the homepage of <em>obf</em> at <a href=\"https://github.com/hossg/obf\" rel=\"nofollow\">https://github.com/hossg/obf</a></p>\n\n          </div>"}, "last_serial": 6978576, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a4b7d0604fce8673ef3186b645c25577", "sha256": "1bbb88f9c45e0ad514c3dacfadec34d1229557d7c5bb05de37f0051da0b01f23"}, "downloads": -1, "filename": "obf-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a4b7d0604fce8673ef3186b645c25577", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 191479, "upload_time": "2018-10-10T17:23:31", "upload_time_iso_8601": "2018-10-10T17:23:31.105508Z", "url": "https://files.pythonhosted.org/packages/47/b7/a9f54ada10366a3ac4fdc234f4dc3f3b1b7fe0b6931f3546083df55f49cf/obf-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb7f2ddc7942dcc8e5184a29a56ed3ff", "sha256": "cd62160672e33dc886c6dcaa08425f700eb9b5b89a3dc3ebdf739c0ef68cd642"}, "downloads": -1, "filename": "obf-0.0.1.tar.gz", "has_sig": false, "md5_digest": "cb7f2ddc7942dcc8e5184a29a56ed3ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 193884, "upload_time": "2018-10-10T17:23:33", "upload_time_iso_8601": "2018-10-10T17:23:33.272888Z", "url": "https://files.pythonhosted.org/packages/06/af/06f309739a4ec72ae47f1f8d93e2ff08574629600c02433c820c45ae1499/obf-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d9dc17ca76b1a71d06cd80ca5d52e651", "sha256": "1e57c4017cabc96fad86208e2e3595f1856c843ee51e4e73bce90d8fdaadda46"}, "downloads": -1, "filename": "obf-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d9dc17ca76b1a71d06cd80ca5d52e651", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 204478, "upload_time": "2018-10-11T11:33:25", "upload_time_iso_8601": "2018-10-11T11:33:25.968982Z", "url": "https://files.pythonhosted.org/packages/df/ce/cf14022a532a7a71d4085cdde289733f6f0ee77e55791f1327eb75f4a26f/obf-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ea1d47532c52be46e8c7a92f7b9ef50", "sha256": "1d6f0a6bc38e629917221ac4df46c9667d317a73da7717684d46414838bd8423"}, "downloads": -1, "filename": "obf-0.0.2.tar.gz", "has_sig": false, "md5_digest": "1ea1d47532c52be46e8c7a92f7b9ef50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 191416, "upload_time": "2018-10-11T11:33:27", "upload_time_iso_8601": "2018-10-11T11:33:27.963009Z", "url": "https://files.pythonhosted.org/packages/b5/d2/221f02ad6c09299c5ede89b32e1188e197d5912e378bfe63ec9307b775b4/obf-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "701d49f4927985d07db205bd07115c04", "sha256": "a39acb1622ba66b19715b9a62ff53ce3e5cd631d2f7953db31ba451e8f7c1b76"}, "downloads": -1, "filename": "obf-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "701d49f4927985d07db205bd07115c04", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 206440, "upload_time": "2020-04-07T10:38:36", "upload_time_iso_8601": "2020-04-07T10:38:36.973688Z", "url": "https://files.pythonhosted.org/packages/6c/fd/ef11ad5427e6507c928865a0d99e18ecc4705dea082bf739edf4a4169f91/obf-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "456d6fb1dd4d457d77db4fabcadb2011", "sha256": "56f2c96a14594c77100c167f758a815cb2046f0c83c9ed1309fdfba4a1de16f0"}, "downloads": -1, "filename": "obf-0.0.3.tar.gz", "has_sig": false, "md5_digest": "456d6fb1dd4d457d77db4fabcadb2011", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 197971, "upload_time": "2020-04-07T10:38:39", "upload_time_iso_8601": "2020-04-07T10:38:39.921271Z", "url": "https://files.pythonhosted.org/packages/b3/06/2daec1abf066fbd93ded54c74ad5bff88b43ec6da0d669212b49d02f57cc/obf-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "587e882a8420861aca55a1cc40503114", "sha256": "216dea05c32d59fa0a5ae0e47be18929c506def6f984e9063495126998287aa7"}, "downloads": -1, "filename": "obf-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "587e882a8420861aca55a1cc40503114", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 206466, "upload_time": "2020-04-07T11:43:07", "upload_time_iso_8601": "2020-04-07T11:43:07.837743Z", "url": "https://files.pythonhosted.org/packages/a3/47/d03255d087134115b7ae26359db8bed84e9c821737a4a0b160d507401de1/obf-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "655abf0adc09f761d4774ba362e5fe44", "sha256": "f037bb1272d45069b570606c646aeac155706d03502f3a42ddd5cc14dab3d865"}, "downloads": -1, "filename": "obf-0.0.4.tar.gz", "has_sig": false, "md5_digest": "655abf0adc09f761d4774ba362e5fe44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 197820, "upload_time": "2020-04-07T11:43:11", "upload_time_iso_8601": "2020-04-07T11:43:11.529483Z", "url": "https://files.pythonhosted.org/packages/4c/fc/7b9ca8df757c07301c2965d1a05aea15c5c635b78f00d976b4f6deef28a7/obf-0.0.4.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "32f6ed8b2bf8682360082bb54d813b26", "sha256": "ea7c4e069ed8bf8ec045b6309fd1f620bf8e72b3f6c1f0481070f77ad58f5706"}, "downloads": -1, "filename": "obf-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "32f6ed8b2bf8682360082bb54d813b26", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 205534, "upload_time": "2020-04-08T15:21:45", "upload_time_iso_8601": "2020-04-08T15:21:45.738038Z", "url": "https://files.pythonhosted.org/packages/69/bb/49115c5084bb12340169dd5428acc3a716f9363ed43488cd3f1ad5f0e211/obf-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "162728b22a94c2fedd7b671221448fd9", "sha256": "6818e89aa89a25df6d2ad944ba7a1182ad0cb357b848775e1e22e7b93fe1bcb5"}, "downloads": -1, "filename": "obf-1.0.0.tar.gz", "has_sig": false, "md5_digest": "162728b22a94c2fedd7b671221448fd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 197206, "upload_time": "2020-04-08T15:21:46", "upload_time_iso_8601": "2020-04-08T15:21:46.938706Z", "url": "https://files.pythonhosted.org/packages/18/07/0ef1607390393db02236c49e78a945563d8c1ebc3fa24e3f34a74bbfe34c/obf-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "32f6ed8b2bf8682360082bb54d813b26", "sha256": "ea7c4e069ed8bf8ec045b6309fd1f620bf8e72b3f6c1f0481070f77ad58f5706"}, "downloads": -1, "filename": "obf-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "32f6ed8b2bf8682360082bb54d813b26", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 205534, "upload_time": "2020-04-08T15:21:45", "upload_time_iso_8601": "2020-04-08T15:21:45.738038Z", "url": "https://files.pythonhosted.org/packages/69/bb/49115c5084bb12340169dd5428acc3a716f9363ed43488cd3f1ad5f0e211/obf-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "162728b22a94c2fedd7b671221448fd9", "sha256": "6818e89aa89a25df6d2ad944ba7a1182ad0cb357b848775e1e22e7b93fe1bcb5"}, "downloads": -1, "filename": "obf-1.0.0.tar.gz", "has_sig": false, "md5_digest": "162728b22a94c2fedd7b671221448fd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 197206, "upload_time": "2020-04-08T15:21:46", "upload_time_iso_8601": "2020-04-08T15:21:46.938706Z", "url": "https://files.pythonhosted.org/packages/18/07/0ef1607390393db02236c49e78a945563d8c1ebc3fa24e3f34a74bbfe34c/obf-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:51 2020"}