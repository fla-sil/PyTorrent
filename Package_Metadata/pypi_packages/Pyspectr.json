{"info": {"author": "Nathan Brewer", "author_email": "brewer.nathant@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Physics"], "description": "===========\nPyspectr\n===========\n\nPyspectr provides nuclear spectroscopy tools, specifically targeted\nto use with the his/drr histogram files used by the upak library. Apart from\nreading the binary input files, it provides some tools like half-life fitting,\npeak-fitting and pydamm program, mimicking the DAMM program from the upak.\nUsers are encouraged to use pydamm within ipython3 shell, as it offers a great\nadvantages over standard python3 shell, such as tab-completion with history\nsearch, input/outputs registry (as in Maxima or Mathematica), etc.  However, it\nis also possible to work with pydamm within the standard python3 shell.\n\n\nInstallation\n===========\nThis package requires the following modules:\n* numpy (http://www.numpy.org/)\n* matplotlib (http://matplotlib.org/, \n              https://github.com/matplotlib/matplotlib)\n* lmfit (https://github.com/newville/lmfit-py,\n         http://cars9.uchicago.edu/software/python/lmfit/)\n\nIt is also recommended to install the ipython shell:\n* ipython (http://ipython.org/) (make sure it links to python3 or use ipython3)\nHowever, the standard python shell will also work.\n\nIn a typical Linux distribution the numpy, matplotlib and ipython should be\nincluded in the package manager repositories (note that python3 version is\nneeded). If they are missing the github repositories include information about\nthe building and installation procedure (it is very simple). The lmfit library\non the github includes the standard pythons distutils setup script and is also\nvery easy to install.\n\n!!!\nNow on Pypi.org\n!!!\nAll you need now is:\n$ pip3 install scipy (or only matplotlib and numpy)\n$ pip3 install lmfit\n$ pip3 install Pyspectr\nand you should be good to go. \n\nor via:\nOnce the required libraries are in place, install the Pyspectr with:\n    python3 setup.py build\n    sudo python3 setup.py install\n\nUsage\n=====\nHappy New Year (1/2/2020)! New functions added for histogram adding, histogram file zeroing,\nand some other requested capability for log state persistence and count display. \n\npydamm\n------\nImportant note for use with ipython3! \nin order to have the correct interactivity functionality begin the ipython session with \nthe magic command %matplotlib.\n\nIn [1]: %matplotlib\n\nand/or use the startup script 00-pyspectr.py in the directory\n~/.ipython/profile_default/startup/ (Linux) \nor similar for other distros. This magic puts matplotlib interactivity in the correct shell loop. \nSee ipython documentation for further detail. \n\nPydamm is a DAMM-like python module, so a typical session starts with importing\nthe pydamm module:\n>>> from Pyspectr.pydamm import *\n\n\nThe main class for the data analysis is the Experiment, it requires a file\nname (.his) to be given in the constructor:\n>>> e = Experiment('data_file.his')\nor tar gzipped file (.tgz, .tar.gz):\n>>> e = Experiment('data_file.tgz')\n\nOnce the Experiment object is created follow DAMM-like syntax to display\nand analyze the data:\n>>> e.d(100)\n>>> e.dl(0, 1000)\n>>> e.gx(1000, (212, 214))\n...\n\nHowever, there are some useful things that the DAMM couldn't do easily. Check\nfunctions like Experiment.show_registry(), Experiment.gamma_gamma_spectra(),\nExperiment.fit_decay(), ...\n\nFinally remember about the python's build-in help(), that should allow you to\ninvestigate the available variables and methods. While the documentation is\nfar from being perfect, at least it should give you a hint about possibilities.\n\nspectrum_fitter\n---------------\n\nThis script fits the peaks in a .his or .txt spectrum file. The peak function\ninclude the Gaussian function, skewed Gaussian and more. The fit\nconfiguration is done via XML config file, see spectrum_fitter_example.xml\n\n\npy_grow_decay\n-------------\n\nThis script fits the grow-in/decay pattern, typical in the experiments with the\nMoving Tape Collector. Available models include 1st and 2nd isotope in the\nchain, isomeric decay, diffusion corrected decay and more. See\ngrow_decay_example.xml for XML config file structure.\n\n\n00-pyspectr.py\n--------------\n\nThis script is placed in the startup directory for proper functionality of Pyspectr/matplotlib interactivity.\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ntbrewer/Pyspectr", "keywords": "", "license": "LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "Pyspectr", "package_url": "https://pypi.org/project/Pyspectr/", "platform": "", "project_url": "https://pypi.org/project/Pyspectr/", "project_urls": {"Homepage": "https://github.com/ntbrewer/Pyspectr"}, "release_url": "https://pypi.org/project/Pyspectr/0.2.3/", "requires_dist": null, "requires_python": "", "summary": "Useful spectroscopic tools", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>===========\nPyspectr</h1>\n<p>Pyspectr provides nuclear spectroscopy tools, specifically targeted\nto use with the his/drr histogram files used by the upak library. Apart from\nreading the binary input files, it provides some tools like half-life fitting,\npeak-fitting and pydamm program, mimicking the DAMM program from the upak.\nUsers are encouraged to use pydamm within ipython3 shell, as it offers a great\nadvantages over standard python3 shell, such as tab-completion with history\nsearch, input/outputs registry (as in Maxima or Mathematica), etc.  However, it\nis also possible to work with pydamm within the standard python3 shell.</p>\n<h1>Installation</h1>\n<p>This package requires the following modules:</p>\n<ul>\n<li>numpy (<a href=\"http://www.numpy.org/\" rel=\"nofollow\">http://www.numpy.org/</a>)</li>\n<li>matplotlib (<a href=\"http://matplotlib.org/\" rel=\"nofollow\">http://matplotlib.org/</a>,\n<a href=\"https://github.com/matplotlib/matplotlib\" rel=\"nofollow\">https://github.com/matplotlib/matplotlib</a>)</li>\n<li>lmfit (<a href=\"https://github.com/newville/lmfit-py\" rel=\"nofollow\">https://github.com/newville/lmfit-py</a>,\n<a href=\"http://cars9.uchicago.edu/software/python/lmfit/\" rel=\"nofollow\">http://cars9.uchicago.edu/software/python/lmfit/</a>)</li>\n</ul>\n<p>It is also recommended to install the ipython shell:</p>\n<ul>\n<li>ipython (<a href=\"http://ipython.org/\" rel=\"nofollow\">http://ipython.org/</a>) (make sure it links to python3 or use ipython3)\nHowever, the standard python shell will also work.</li>\n</ul>\n<p>In a typical Linux distribution the numpy, matplotlib and ipython should be\nincluded in the package manager repositories (note that python3 version is\nneeded). If they are missing the github repositories include information about\nthe building and installation procedure (it is very simple). The lmfit library\non the github includes the standard pythons distutils setup script and is also\nvery easy to install.</p>\n<p>!!!\nNow on Pypi.org\n!!!\nAll you need now is:\n$ pip3 install scipy (or only matplotlib and numpy)\n$ pip3 install lmfit\n$ pip3 install Pyspectr\nand you should be good to go.</p>\n<p>or via:\nOnce the required libraries are in place, install the Pyspectr with:\npython3 setup.py build\nsudo python3 setup.py install</p>\n<h1>Usage</h1>\n<p>Happy New Year (1/2/2020)! New functions added for histogram adding, histogram file zeroing,\nand some other requested capability for log state persistence and count display.</p>\n<h2>pydamm</h2>\n<p>Important note for use with ipython3!\nin order to have the correct interactivity functionality begin the ipython session with\nthe magic command %matplotlib.</p>\n<p>In [1]: %matplotlib</p>\n<p>and/or use the startup script 00-pyspectr.py in the directory\n~/.ipython/profile_default/startup/ (Linux)\nor similar for other distros. This magic puts matplotlib interactivity in the correct shell loop.\nSee ipython documentation for further detail.</p>\n<p>Pydamm is a DAMM-like python module, so a typical session starts with importing\nthe pydamm module:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>from Pyspectr.pydamm import *</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>The main class for the data analysis is the Experiment, it requires a file\nname (.his) to be given in the constructor:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>e = Experiment('data_file.his')\nor tar gzipped file (.tgz, .tar.gz):\ne = Experiment('data_file.tgz')</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>Once the Experiment object is created follow DAMM-like syntax to display\nand analyze the data:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>e.d(100)\ne.dl(0, 1000)\ne.gx(1000, (212, 214))\n...</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>However, there are some useful things that the DAMM couldn't do easily. Check\nfunctions like Experiment.show_registry(), Experiment.gamma_gamma_spectra(),\nExperiment.fit_decay(), ...</p>\n<p>Finally remember about the python's build-in help(), that should allow you to\ninvestigate the available variables and methods. While the documentation is\nfar from being perfect, at least it should give you a hint about possibilities.</p>\n<h2>spectrum_fitter</h2>\n<p>This script fits the peaks in a .his or .txt spectrum file. The peak function\ninclude the Gaussian function, skewed Gaussian and more. The fit\nconfiguration is done via XML config file, see spectrum_fitter_example.xml</p>\n<h2>py_grow_decay</h2>\n<p>This script fits the grow-in/decay pattern, typical in the experiments with the\nMoving Tape Collector. Available models include 1st and 2nd isotope in the\nchain, isomeric decay, diffusion corrected decay and more. See\ngrow_decay_example.xml for XML config file structure.</p>\n<h2>00-pyspectr.py</h2>\n<p>This script is placed in the startup directory for proper functionality of Pyspectr/matplotlib interactivity.</p>\n\n          </div>"}, "last_serial": 6515205, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "31249effef46cb947db6921db8ebdb3b", "sha256": "aac85d9cbd359e66086bfdf4498d2f674aae55bd67f4dd69a007d920574dc1a5"}, "downloads": -1, "filename": "Pyspectr-0.2.0-py3.5.egg", "has_sig": false, "md5_digest": "31249effef46cb947db6921db8ebdb3b", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 60299, "upload_time": "2018-08-30T21:43:26", "upload_time_iso_8601": "2018-08-30T21:43:26.431455Z", "url": "https://files.pythonhosted.org/packages/62/ea/536ebdf94c4c487c995592aedab76fea0956bdbfcdbb58ce6acb36a75452/Pyspectr-0.2.0-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "130c6e6fcbfc2cb1cfd859d96701b574", "sha256": "4c96355763e3327113363b35d1b5926cc637cf0c8011c7347be9aa5bc5fd5092"}, "downloads": -1, "filename": "Pyspectr-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "130c6e6fcbfc2cb1cfd859d96701b574", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32349, "upload_time": "2018-07-25T20:17:48", "upload_time_iso_8601": "2018-07-25T20:17:48.261173Z", "url": "https://files.pythonhosted.org/packages/54/a7/f2cab7ea3ba91574d5043c92aad917cb74094cfcb8f74381db987c8988cc/Pyspectr-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "784784cac920591c38e45e18613ea6d1", "sha256": "e252fac5339d74e0584f340bc1f5f4b857d0e0046743ef8022b430e7058fdba4"}, "downloads": -1, "filename": "Pyspectr-0.2.0.tar.gz", "has_sig": false, "md5_digest": "784784cac920591c38e45e18613ea6d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38896, "upload_time": "2018-07-25T20:17:49", "upload_time_iso_8601": "2018-07-25T20:17:49.349064Z", "url": "https://files.pythonhosted.org/packages/d0/74/83bce3831b1ed726e53dd486e4a29bde3bcea941d1adac02a21a2e016974/Pyspectr-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "2ba0ffb56caec65873248ad4705a85fc", "sha256": "a072a0681b03e6b2cb05ccc1b83843859f796f5397ae80b853816f5825d97584"}, "downloads": -1, "filename": "Pyspectr-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2ba0ffb56caec65873248ad4705a85fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34346, "upload_time": "2018-08-30T21:43:45", "upload_time_iso_8601": "2018-08-30T21:43:45.010695Z", "url": "https://files.pythonhosted.org/packages/c6/12/d7942abf9f8ee48018a041636e47bc2b7c00f1d7a4692e73c36c152b4a02/Pyspectr-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1836d77a6d5d8a600501908bf9f6a215", "sha256": "393ced5b5755021c8aef22eb57f1568fee562c4f186847a36a1aa1e23ba7bfc3"}, "downloads": -1, "filename": "Pyspectr-0.2.1.tar.gz", "has_sig": false, "md5_digest": "1836d77a6d5d8a600501908bf9f6a215", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40927, "upload_time": "2018-08-30T21:43:46", "upload_time_iso_8601": "2018-08-30T21:43:46.533512Z", "url": "https://files.pythonhosted.org/packages/04/19/55af5302d65f3febab88c2c2ee3628f28d0b4d7f3c012d16f495ebb8c171/Pyspectr-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "3dd6ae63311ea919b97cf4641252ceec", "sha256": "eee9ea9af453e7dc2a9e6f3c8e6f3e2b3b3fceac5c2cb22bd4be5af088228b4f"}, "downloads": -1, "filename": "Pyspectr-0.2.2-py3.5.egg", "has_sig": false, "md5_digest": "3dd6ae63311ea919b97cf4641252ceec", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 68185, "upload_time": "2020-01-24T18:20:09", "upload_time_iso_8601": "2020-01-24T18:20:09.570945Z", "url": "https://files.pythonhosted.org/packages/6e/f4/9ea8f20c8a7d4a56306059314e160bea3e182649db22dbf669fbebab84b4/Pyspectr-0.2.2-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "28a5b5ac75d12c62725e54df00a9b2e2", "sha256": "0d8860ad57ca616ce5ca8de512e1af84dd2a661f727c1e8327026a64d3ec3755"}, "downloads": -1, "filename": "Pyspectr-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "28a5b5ac75d12c62725e54df00a9b2e2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33349, "upload_time": "2020-01-02T23:42:00", "upload_time_iso_8601": "2020-01-02T23:42:00.043731Z", "url": "https://files.pythonhosted.org/packages/84/7b/3c0214cf454c93b681761cc5270f19beaff96edb43aaa1fe9649e9052da9/Pyspectr-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71b56af03c0786ce7e4782c0b91f2f8f", "sha256": "6662d8998c24f8ea970a60895b7ff848673a09f3992b6c16973d8159b273ad0b"}, "downloads": -1, "filename": "Pyspectr-0.2.2.tar.gz", "has_sig": false, "md5_digest": "71b56af03c0786ce7e4782c0b91f2f8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42613, "upload_time": "2020-01-02T23:42:01", "upload_time_iso_8601": "2020-01-02T23:42:01.726011Z", "url": "https://files.pythonhosted.org/packages/df/4d/7954d3332f54669b3cfa80f394f91c80b04bc74a1c71df25210abde9a27d/Pyspectr-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "99aa5902d7866e9dca9a1f16b46df1f2", "sha256": "8734292b84063faffc4e7ac9949c48ce2ff0b8fbae44bcb8ae8914f47d8906e1"}, "downloads": -1, "filename": "Pyspectr-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "99aa5902d7866e9dca9a1f16b46df1f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33370, "upload_time": "2020-01-24T18:20:08", "upload_time_iso_8601": "2020-01-24T18:20:08.112842Z", "url": "https://files.pythonhosted.org/packages/d8/6c/d001a4eccf89487a1250abd5aad0b02c98d739a8cb2b132741b3a11c5abc/Pyspectr-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5fec823ece7627d0dee4cd1afa92b5df", "sha256": "147ddc7cb97fc81a4675af2b185f6fb72414ce8a8447da6bf3d856efce3aeb27"}, "downloads": -1, "filename": "Pyspectr-0.2.3.tar.gz", "has_sig": false, "md5_digest": "5fec823ece7627d0dee4cd1afa92b5df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42615, "upload_time": "2020-01-24T18:20:12", "upload_time_iso_8601": "2020-01-24T18:20:12.022259Z", "url": "https://files.pythonhosted.org/packages/d2/20/53b87d8b3ba1e9a473d62d2d230d08b72d7718ae727b7aa6fc273049b0c3/Pyspectr-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "99aa5902d7866e9dca9a1f16b46df1f2", "sha256": "8734292b84063faffc4e7ac9949c48ce2ff0b8fbae44bcb8ae8914f47d8906e1"}, "downloads": -1, "filename": "Pyspectr-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "99aa5902d7866e9dca9a1f16b46df1f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33370, "upload_time": "2020-01-24T18:20:08", "upload_time_iso_8601": "2020-01-24T18:20:08.112842Z", "url": "https://files.pythonhosted.org/packages/d8/6c/d001a4eccf89487a1250abd5aad0b02c98d739a8cb2b132741b3a11c5abc/Pyspectr-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5fec823ece7627d0dee4cd1afa92b5df", "sha256": "147ddc7cb97fc81a4675af2b185f6fb72414ce8a8447da6bf3d856efce3aeb27"}, "downloads": -1, "filename": "Pyspectr-0.2.3.tar.gz", "has_sig": false, "md5_digest": "5fec823ece7627d0dee4cd1afa92b5df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42615, "upload_time": "2020-01-24T18:20:12", "upload_time_iso_8601": "2020-01-24T18:20:12.022259Z", "url": "https://files.pythonhosted.org/packages/d2/20/53b87d8b3ba1e9a473d62d2d230d08b72d7718ae727b7aa6fc273049b0c3/Pyspectr-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:16 2020"}