{"info": {"author": "Minh Tuan Nguyen", "author_email": "ntuan221@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "cython-npm\n==========\n\nCython project management like npm in nodejs. This project is inspired\nby npm in nodejs.\n\nInstallation\n~~~~~~~~~~~~\n\nYou can easily install by:\n\n::\n\n    pip install cython-npm\n\nWhat problems does it solve ?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhen using cython, we face the problem of compile cython file. We can do\nit easily by:\n\n.. code:: python\n\n    import pyximport; pyximport.install()\n\nBut that it is not recommended to let **pyximport** build code on end\nuser side as it *hooks into their import system*. The best way to cater\nfor end users is to provide pre-built binary packages. So this project\ncompiles .pyx file and provides pre-built binary packages for easy of\nuse.\n\nQuickstart:\n~~~~~~~~~~~\n\nBasic use to Complie file or folder\n\n.. code:: python\n\n    from cython_npm.cythoncompile import export\n    export('examplefile.pyx')\n    export('./examplefolder')\n    # then import them to use\n    import examplefile\n    from examplefolder import *\n\nYou should do this code once time only.\n\nCreate install file like package.json\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can also compile many files or folders at once time. Create a file\nname ``install.py`` in the root of your project/package and write the\ncode below:\n\n.. code:: python\n\n    from cython_npm.cythoncompile import install\n    Manymodules = [\n        # put your modules list here\n        'examplefile.pyx',\n        './examplefolder'\n    ]\n    install(Manymodules)\n\nRun the file before start your project\n\n::\n\n    python install.py\n\nOr add first line ``import install`` in startup file of your project.\nUse install or export in parent folder will compile all .pyx file in\nsubdirectories. ### Using require('path') as nodejs You can also\nrelative or fullpath import in python by ``require`` function. For\nexample:\n\n.. code:: python\n\n    from cython_npm.cythoncompile import require\n\n    # import .pyx file. Will cause error if it is not compiled by export() yet. \n    # Default value of recompile is True, only apply for .py file. To import .pyx, change recompile=False\n    examplefile = require('../parentpackage', recompile=False) # import cython package from parent folder\n    examplefile.somefunction()\n\n    # it also support relative import .py file\n    examplefile = require('../parentpackage')\n    examplefile.somefunction()\n\nUsing requirepyx('path'): ``requirepyx`` is simillar to ``require``\nexcept: \\* Use for cython file ('.pyx') only \\* Equivalent to\nexport('.pyx file') and require('.pyx file') Example:\n\n.. code:: python\n\n    from cython_npm.cythoncompile import export\n    export('examplefile')\n    require('examplefile',recompile=False)\n    # The code above is the same as:\n    from cython_npm.cythoncompile import requirepyx\n    requirepyx('examplefile')\n\nUsing typecheck\n~~~~~~~~~~~~~~~\n\nAnother utils is typecheck support to raise error in typing module (from\npython 3.3):\n\n.. code:: python\n\n    from cython_npm.typecheck import typecheck\n\n    @type_check\n    def checkstr(s: Any)->(None, str):\n        return None, s\n\n    x,y = checkstr('tuan')\n    print(x,y)\n\n    try:\n        checkstr(120)\n    except Exception as error:\n        print(error)\n        traceback.print_exc()\n\n    # That will raise an error of TypeError\n    checkstr(200)\n\nExample: Cython vs speed test battle\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis example compare the speed between cython vs python, Swift, Go and\nCode differences in doing a short calculation. Cython\\_npm is used in\nthe test. This test is forked from 'marcinkliks', the original code and\ntest is here: `Swift vs Go vs Python\nbattle <http://www.marcinkliks.pl/2015/02/22/swift-vs-others/>`__. Note:\nWe use Swift and Go test results as pattern and do not retest them. Go\nto see in test folder in github for more examples\n\nTesting condition: \\* Python version: Python 3.6.3 :: Anaconda, Inc.\n\n-  About computer: MacBook Pro (13-inch, 2016, Two Thunderbolt 3 ports),\n   2 GHz Intel Core i5, 256GB SSD\n\n| Hypothesis:\n| \\* Is Cython really fast (compare to other language) ? \\* How does\n  Code differences affect performance ?\n\nTest process and results as shown below:\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n0. Recall the speed of Swift: 0m0.416s, Go: 0m0.592s and Pypy: 0m2.633s\n\n1. Test pure python code:\n\n   .. code:: python\n\n       sum = 0\n\n       for e in range(30):\n           sum = 0\n           x = []\n\n           for i in range(1000000):\n               x.append(i)\n\n           y = []\n           for i in range(1000000 - 1):\n               y.append(x[i] + x[i+1])\n\n           i = 0\n           for i in range(0, 1000000, 100):\n               sum += y[i]\n\n       print(sum)\n\n   Speed test result is same/similar to original test\n\n   ::\n\n       time python test_python.py\n       9999010000\n\n       real    0m12.825s\n       user    0m11.721s\n       sys     0m1.061s\n\n2. Test cython code: Create run.py with code:\n\n   .. code:: python\n\n       from cython_npm.cythoncompile import export\n       export('test_cython.pyx') # will do once time\n       import test_cython\n\n   Code in **test\\_cython.pyx**:\n\n   .. code:: python\n\n       cdef long sum = 0\n       cdef int i\n       cdef int e\n       for e in range(30):\n           sum = 0\n           x = []\n\n           for i in range(1000000):\n               x.append(i)\n\n           y = []\n           for i in range(1000000 - 1):\n               y.append(x[i] + x[i+1])\n\n           i = 0\n           for i in range(0, 1000000, 100):\n               sum += y[i]\n\n       print(sum)\n\n   Speed test result: time python run.py\n\n   ::\n\n       time python run.py\n       9999010000\n\n       real    0m5.803s\n       user    0m4.496s\n       sys     0m1.211s\n\n3. Test cython code with list optimization and cache: create similar\n   run.py. Code in **test\\_cythoncache.pyx**:\n\n   .. code:: python\n\n       from functools import lru_cache\n       @lru_cache(maxsize=128)\n       def dotest():\n           cdef long mysum = 0\n           cdef int i\n           cdef int e\n           for e in range(30):\n               mysum = 0\n               x = [i for i in range(1000000)]\n\n               y = [x[i] + x[i+1] for i in range(1000000-1)]\n\n               i = 0\n               for i in range(0, 1000000, 100):\n                   mysum += y[i]\n\n           print(mysum)\n       dotest()\n\n   Speed test result:\n\n   ::\n\n       time python run.py\n       9999010000\n\n       real    0m3.373s\n       user    0m2.360s\n       sys     0m1.001s\n\n4. Test cython code with cache and C array: create similar run.py. Code\n   in **test\\_cythoncache.pyx**:\n\n   .. code:: python\n\n       from functools import lru_cache\n       @lru_cache(maxsize=128)\n       def dotest():\n           cdef long mysum = 0\n           cdef int i\n           cdef int e\n           cdef int x[1000000]\n           cdef int y[1000000]\n           for e in range(30):\n               mysum = 0\n               for i in range(1000000):\n                   x[i] = i\n\n               # y = []\n               for i in range(1000000 - 1):\n                   y[i] = (x[i] + x[i+1])\n\n               i = 0\n               for i in range(0, 1000000, 100):\n                   mysum += y[i]\n\n           print(mysum)\n       dotest()\n\n   Speed test result:\n\n   ::\n\n       time python run.py\n       9999010000\n\n       real    0m0.085s\n       user    0m0.067s\n       sys     0m0.015s\n\nConclusions\n^^^^^^^^^^^\n\n-  With a slight change, Cython make pure python code faster by 2X time.\n   But it is very slow compare to Swift and Go\n-  Appling some optimal technical, Cython make python nearly 4X time\n   faster than the original code. It may be the acceptable result. Pypy\n   result seems very attractive too.\n-  Using C array, Cython make the code become very fast. It consumes\n   only 0.085s to complete as 4X time faster than Swift, 6X time faster\n   than Go. It maybe the fastest but it is unusable in real life.\n-  After all, i wish cython and cython\\_npm could give you more usefull\n   options in coding\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/minhtuan221/cython-npm", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cython-npm", "package_url": "https://pypi.org/project/cython-npm/", "platform": "POSIX", "project_url": "https://pypi.org/project/cython-npm/", "project_urls": {"Homepage": "https://github.com/minhtuan221/cython-npm"}, "release_url": "https://pypi.org/project/cython-npm/0.2.4/", "requires_dist": ["cython"], "requires_python": "", "summary": "Cython project management like npm in nodejs", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Cython project management like npm in nodejs. This project is inspired\nby npm in nodejs.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can easily install by:</p>\n<pre>pip install cython-npm\n</pre>\n</div>\n<div id=\"what-problems-does-it-solve\">\n<h2>What problems does it solve ?</h2>\n<p>When using cython, we face the problem of compile cython file. We can do\nit easily by:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyximport</span><span class=\"p\">;</span> <span class=\"n\">pyximport</span><span class=\"o\">.</span><span class=\"n\">install</span><span class=\"p\">()</span>\n</pre>\n<p>But that it is not recommended to let <strong>pyximport</strong> build code on end\nuser side as it <em>hooks into their import system</em>. The best way to cater\nfor end users is to provide pre-built binary packages. So this project\ncompiles .pyx file and provides pre-built binary packages for easy of\nuse.</p>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart:</h2>\n<p>Basic use to Complie file or folder</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cython_npm.cythoncompile</span> <span class=\"kn\">import</span> <span class=\"n\">export</span>\n<span class=\"n\">export</span><span class=\"p\">(</span><span class=\"s1\">'examplefile.pyx'</span><span class=\"p\">)</span>\n<span class=\"n\">export</span><span class=\"p\">(</span><span class=\"s1\">'./examplefolder'</span><span class=\"p\">)</span>\n<span class=\"c1\"># then import them to use</span>\n<span class=\"kn\">import</span> <span class=\"nn\">examplefile</span>\n<span class=\"kn\">from</span> <span class=\"nn\">examplefolder</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n</pre>\n<p>You should do this code once time only.</p>\n</div>\n<div id=\"create-install-file-like-package-json\">\n<h2>Create install file like package.json</h2>\n<p>You can also compile many files or folders at once time. Create a file\nname <tt>install.py</tt> in the root of your project/package and write the\ncode below:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cython_npm.cythoncompile</span> <span class=\"kn\">import</span> <span class=\"n\">install</span>\n<span class=\"n\">Manymodules</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># put your modules list here</span>\n    <span class=\"s1\">'examplefile.pyx'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'./examplefolder'</span>\n<span class=\"p\">]</span>\n<span class=\"n\">install</span><span class=\"p\">(</span><span class=\"n\">Manymodules</span><span class=\"p\">)</span>\n</pre>\n<p>Run the file before start your project</p>\n<pre>python install.py\n</pre>\n<p>Or add first line <tt>import install</tt> in startup file of your project.\nUse install or export in parent folder will compile all .pyx file in\nsubdirectories. ### Using require(\u2018path\u2019) as nodejs You can also\nrelative or fullpath import in python by <tt>require</tt> function. For\nexample:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cython_npm.cythoncompile</span> <span class=\"kn\">import</span> <span class=\"n\">require</span>\n\n<span class=\"c1\"># import .pyx file. Will cause error if it is not compiled by export() yet.</span>\n<span class=\"c1\"># Default value of recompile is True, only apply for .py file. To import .pyx, change recompile=False</span>\n<span class=\"n\">examplefile</span> <span class=\"o\">=</span> <span class=\"n\">require</span><span class=\"p\">(</span><span class=\"s1\">'../parentpackage'</span><span class=\"p\">,</span> <span class=\"n\">recompile</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"c1\"># import cython package from parent folder</span>\n<span class=\"n\">examplefile</span><span class=\"o\">.</span><span class=\"n\">somefunction</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># it also support relative import .py file</span>\n<span class=\"n\">examplefile</span> <span class=\"o\">=</span> <span class=\"n\">require</span><span class=\"p\">(</span><span class=\"s1\">'../parentpackage'</span><span class=\"p\">)</span>\n<span class=\"n\">examplefile</span><span class=\"o\">.</span><span class=\"n\">somefunction</span><span class=\"p\">()</span>\n</pre>\n<p>Using requirepyx(\u2018path\u2019): <tt>requirepyx</tt> is simillar to <tt>require</tt>\nexcept: * Use for cython file (\u2018.pyx\u2019) only * Equivalent to\nexport(\u2018.pyx file\u2019) and require(\u2018.pyx file\u2019) Example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cython_npm.cythoncompile</span> <span class=\"kn\">import</span> <span class=\"n\">export</span>\n<span class=\"n\">export</span><span class=\"p\">(</span><span class=\"s1\">'examplefile'</span><span class=\"p\">)</span>\n<span class=\"n\">require</span><span class=\"p\">(</span><span class=\"s1\">'examplefile'</span><span class=\"p\">,</span><span class=\"n\">recompile</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"c1\"># The code above is the same as:</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cython_npm.cythoncompile</span> <span class=\"kn\">import</span> <span class=\"n\">requirepyx</span>\n<span class=\"n\">requirepyx</span><span class=\"p\">(</span><span class=\"s1\">'examplefile'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"using-typecheck\">\n<h2>Using typecheck</h2>\n<p>Another utils is typecheck support to raise error in typing module (from\npython 3.3):</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cython_npm.typecheck</span> <span class=\"kn\">import</span> <span class=\"n\">typecheck</span>\n\n<span class=\"nd\">@type_check</span>\n<span class=\"k\">def</span> <span class=\"nf\">checkstr</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">s</span>\n\n<span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">checkstr</span><span class=\"p\">(</span><span class=\"s1\">'tuan'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">)</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">checkstr</span><span class=\"p\">(</span><span class=\"mi\">120</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">error</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">)</span>\n    <span class=\"n\">traceback</span><span class=\"o\">.</span><span class=\"n\">print_exc</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># That will raise an error of TypeError</span>\n<span class=\"n\">checkstr</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"example-cython-vs-speed-test-battle\">\n<h2>Example: Cython vs speed test battle</h2>\n<p>This example compare the speed between cython vs python, Swift, Go and\nCode differences in doing a short calculation. Cython_npm is used in\nthe test. This test is forked from \u2018marcinkliks\u2019, the original code and\ntest is here: <a href=\"http://www.marcinkliks.pl/2015/02/22/swift-vs-others/\" rel=\"nofollow\">Swift vs Go vs Python\nbattle</a>. Note:\nWe use Swift and Go test results as pattern and do not retest them. Go\nto see in test folder in github for more examples</p>\n<p>Testing condition: * Python version: Python 3.6.3 :: Anaconda, Inc.</p>\n<ul>\n<li>About computer: MacBook Pro (13-inch, 2016, Two Thunderbolt 3 ports),\n2 GHz Intel Core i5, 256GB SSD</li>\n</ul>\n<div>\n<div>Hypothesis:</div>\n<div>* Is Cython really fast (compare to other language) ? * How does\nCode differences affect performance ?</div>\n</div>\n<div id=\"test-process-and-results-as-shown-below\">\n<h3>Test process and results as shown below:</h3>\n<ol>\n<li><p>Recall the speed of Swift: 0m0.416s, Go: 0m0.592s and Pypy: 0m2.633s</p>\n</li>\n<li><p>Test pure python code:</p>\n<pre><span class=\"nb\">sum</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"k\">for</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">):</span>\n    <span class=\"nb\">sum</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000000</span><span class=\"p\">):</span>\n        <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n\n    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000000</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n\n    <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1000000</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">):</span>\n        <span class=\"nb\">sum</span> <span class=\"o\">+=</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">sum</span><span class=\"p\">)</span>\n</pre>\n<p>Speed test result is same/similar to original test</p>\n<pre>time python test_python.py\n9999010000\n\nreal    0m12.825s\nuser    0m11.721s\nsys     0m1.061s\n</pre>\n</li>\n<li><p>Test cython code: Create run.py with code:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cython_npm.cythoncompile</span> <span class=\"kn\">import</span> <span class=\"n\">export</span>\n<span class=\"n\">export</span><span class=\"p\">(</span><span class=\"s1\">'test_cython.pyx'</span><span class=\"p\">)</span> <span class=\"c1\"># will do once time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">test_cython</span>\n</pre>\n<p>Code in <strong>test_cython.pyx</strong>:</p>\n<pre><span class=\"n\">cdef</span> <span class=\"n\">long</span> <span class=\"nb\">sum</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">cdef</span> <span class=\"nb\">int</span> <span class=\"n\">i</span>\n<span class=\"n\">cdef</span> <span class=\"nb\">int</span> <span class=\"n\">e</span>\n<span class=\"k\">for</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">):</span>\n    <span class=\"nb\">sum</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000000</span><span class=\"p\">):</span>\n        <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n\n    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000000</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n\n    <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1000000</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">):</span>\n        <span class=\"nb\">sum</span> <span class=\"o\">+=</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">sum</span><span class=\"p\">)</span>\n</pre>\n<p>Speed test result: time python run.py</p>\n<pre>time python run.py\n9999010000\n\nreal    0m5.803s\nuser    0m4.496s\nsys     0m1.211s\n</pre>\n</li>\n<li><p>Test cython code with list optimization and cache: create similar\nrun.py. Code in <strong>test_cythoncache.pyx</strong>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"n\">lru_cache</span>\n<span class=\"nd\">@lru_cache</span><span class=\"p\">(</span><span class=\"n\">maxsize</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">dotest</span><span class=\"p\">():</span>\n    <span class=\"n\">cdef</span> <span class=\"n\">long</span> <span class=\"n\">mysum</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"n\">cdef</span> <span class=\"nb\">int</span> <span class=\"n\">i</span>\n    <span class=\"n\">cdef</span> <span class=\"nb\">int</span> <span class=\"n\">e</span>\n    <span class=\"k\">for</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">):</span>\n        <span class=\"n\">mysum</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000000</span><span class=\"p\">)]</span>\n\n        <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000000</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)]</span>\n\n        <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1000000</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">):</span>\n            <span class=\"n\">mysum</span> <span class=\"o\">+=</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">mysum</span><span class=\"p\">)</span>\n<span class=\"n\">dotest</span><span class=\"p\">()</span>\n</pre>\n<p>Speed test result:</p>\n<pre>time python run.py\n9999010000\n\nreal    0m3.373s\nuser    0m2.360s\nsys     0m1.001s\n</pre>\n</li>\n<li><p>Test cython code with cache and C array: create similar run.py. Code\nin <strong>test_cythoncache.pyx</strong>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"n\">lru_cache</span>\n<span class=\"nd\">@lru_cache</span><span class=\"p\">(</span><span class=\"n\">maxsize</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">dotest</span><span class=\"p\">():</span>\n    <span class=\"n\">cdef</span> <span class=\"n\">long</span> <span class=\"n\">mysum</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"n\">cdef</span> <span class=\"nb\">int</span> <span class=\"n\">i</span>\n    <span class=\"n\">cdef</span> <span class=\"nb\">int</span> <span class=\"n\">e</span>\n    <span class=\"n\">cdef</span> <span class=\"nb\">int</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1000000</span><span class=\"p\">]</span>\n    <span class=\"n\">cdef</span> <span class=\"nb\">int</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"mi\">1000000</span><span class=\"p\">]</span>\n    <span class=\"k\">for</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">):</span>\n        <span class=\"n\">mysum</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000000</span><span class=\"p\">):</span>\n            <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">i</span>\n\n        <span class=\"c1\"># y = []</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000000</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">):</span>\n            <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n\n        <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1000000</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">):</span>\n            <span class=\"n\">mysum</span> <span class=\"o\">+=</span> <span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">mysum</span><span class=\"p\">)</span>\n<span class=\"n\">dotest</span><span class=\"p\">()</span>\n</pre>\n<p>Speed test result:</p>\n<pre>time python run.py\n9999010000\n\nreal    0m0.085s\nuser    0m0.067s\nsys     0m0.015s\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"conclusions\">\n<h3>Conclusions</h3>\n<ul>\n<li>With a slight change, Cython make pure python code faster by 2X time.\nBut it is very slow compare to Swift and Go</li>\n<li>Appling some optimal technical, Cython make python nearly 4X time\nfaster than the original code. It may be the acceptable result. Pypy\nresult seems very attractive too.</li>\n<li>Using C array, Cython make the code become very fast. It consumes\nonly 0.085s to complete as 4X time faster than Swift, 6X time faster\nthan Go. It maybe the fastest but it is unusable in real life.</li>\n<li>After all, i wish cython and cython_npm could give you more usefull\noptions in coding</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4236262, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9685615eca69924187736a2fb0f957a6", "sha256": "62607226536e13fe0e95a1eb43bd528982a9b474dfb743b4df57227eb04ba1d2"}, "downloads": -1, "filename": "cython_npm-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9685615eca69924187736a2fb0f957a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4078, "upload_time": "2018-03-01T03:59:27", "upload_time_iso_8601": "2018-03-01T03:59:27.771449Z", "url": "https://files.pythonhosted.org/packages/f4/43/7a8aff77fe3d56faa6af385766fb0ed2c302576deeb50d4d240806ea4c66/cython_npm-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31c8bbb65e86d27ba4384d2d82398940", "sha256": "ef40bfda1089c55d6b3abf626d14ba5d3f54a05695ead9c480a6341549822743"}, "downloads": -1, "filename": "cython_npm-0.1.0.tar.gz", "has_sig": false, "md5_digest": "31c8bbb65e86d27ba4384d2d82398940", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2918, "upload_time": "2018-03-01T03:59:29", "upload_time_iso_8601": "2018-03-01T03:59:29.414350Z", "url": "https://files.pythonhosted.org/packages/14/0b/33e3396d5434e14da38007382228df6b2c4da0163abb0f9b1ec3704986c3/cython_npm-0.1.0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b60d7f244e8d6f2ca4da02f97a37ecaa", "sha256": "9f505bf3f8b834ead0abcd7ad6f69ffb492c7a4d5670c4798d27b5479f9d6a30"}, "downloads": -1, "filename": "cython_npm-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b60d7f244e8d6f2ca4da02f97a37ecaa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4123, "upload_time": "2018-03-01T07:27:05", "upload_time_iso_8601": "2018-03-01T07:27:05.141616Z", "url": "https://files.pythonhosted.org/packages/d9/eb/afc4179af2d6caf632728915c77add47b0db5b131535ed8ce3ed5ddb8e0c/cython_npm-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "484b2b00c37939decda02ced591e7e07", "sha256": "7e4347e89c11dcfef218ea614a95381d4d56022261516380b2dbbb8ac4fe1210"}, "downloads": -1, "filename": "cython_npm-0.1.2.tar.gz", "has_sig": false, "md5_digest": "484b2b00c37939decda02ced591e7e07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2702, "upload_time": "2018-03-01T07:27:06", "upload_time_iso_8601": "2018-03-01T07:27:06.739784Z", "url": "https://files.pythonhosted.org/packages/25/9a/9cff61b5b4f533261521fd460f0c24b933988af2d48a294a3c7857cd8227/cython_npm-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "1bc1ef3ca0d0180d994169e8dff5b987", "sha256": "6a2611817ff1f14ba30ddf3313cf90c98793e19b395c756ca047723c8eb49408"}, "downloads": -1, "filename": "cython_npm-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1bc1ef3ca0d0180d994169e8dff5b987", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4132, "upload_time": "2018-03-01T08:38:59", "upload_time_iso_8601": "2018-03-01T08:38:59.449135Z", "url": "https://files.pythonhosted.org/packages/c2/56/196f1228b9b424fac1cfdd397633b3dcdd960104fd70962b90d9f3a86eb0/cython_npm-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49e91feb299dbb603d9bd937ccf739fa", "sha256": "0c7166884710e3c90e37e90bd581d3654e93c48e6d53ba6b9f6b82deee293843"}, "downloads": -1, "filename": "cython_npm-0.1.3.tar.gz", "has_sig": false, "md5_digest": "49e91feb299dbb603d9bd937ccf739fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2722, "upload_time": "2018-03-01T08:39:00", "upload_time_iso_8601": "2018-03-01T08:39:00.642481Z", "url": "https://files.pythonhosted.org/packages/c1/cf/a1e9439e2b35e39558547add8ebe85019f004f1a8f0cd365440ca07d621b/cython_npm-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "4bd4c69d97948951586a07a7f7e34f0e", "sha256": "53f4758d503d422f1c55531fe6bb9b5e7aa303402dfc17eeb5f34308e936a97a"}, "downloads": -1, "filename": "cython_npm-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4bd4c69d97948951586a07a7f7e34f0e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5846, "upload_time": "2018-03-02T03:49:47", "upload_time_iso_8601": "2018-03-02T03:49:47.737679Z", "url": "https://files.pythonhosted.org/packages/8e/09/f4dc3e76197fb5d89347740030b66a7612b2416b6813215edaaa09608e4b/cython_npm-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca417f5ce205f2e1d785b120dd3d6f5e", "sha256": "1778f57da81af244212c59ffcc5f9304f00aefe0988c86bf5442c49b8211446e"}, "downloads": -1, "filename": "cython_npm-0.1.4.tar.gz", "has_sig": false, "md5_digest": "ca417f5ce205f2e1d785b120dd3d6f5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4039, "upload_time": "2018-03-02T03:49:49", "upload_time_iso_8601": "2018-03-02T03:49:49.517966Z", "url": "https://files.pythonhosted.org/packages/39/37/2b263aab199f3ba5ee973f4c0f5a7ed856fd34cdf632e9d602f3324bcaef/cython_npm-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "b950e040143ec858abbf101ed2a0f70f", "sha256": "284e064260287d9d81a25f0fc2978ca0dce0b6d1d7ee1fea47aa10e82729a47a"}, "downloads": -1, "filename": "cython_npm-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "b950e040143ec858abbf101ed2a0f70f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6126, "upload_time": "2018-03-04T14:43:34", "upload_time_iso_8601": "2018-03-04T14:43:34.047819Z", "url": "https://files.pythonhosted.org/packages/f6/0e/50eb383c36fe41f62c94a8b6c00b65e18232c5727276baf86ebaffc8739c/cython_npm-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b3504d77dc58792d5cd40623d635ff5", "sha256": "6e68d02aecef3885263920ba61c31ae3c57a288e86692a553e256fd756fdc1c8"}, "downloads": -1, "filename": "cython_npm-0.1.5.tar.gz", "has_sig": false, "md5_digest": "5b3504d77dc58792d5cd40623d635ff5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4227, "upload_time": "2018-03-04T14:43:35", "upload_time_iso_8601": "2018-03-04T14:43:35.559097Z", "url": "https://files.pythonhosted.org/packages/3b/c9/385521657bfd80776a40f4b93fdfa3b429ecd8d614a459555745117b131c/cython_npm-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "2026a7dd2a0c541a7b20f524bb5dce7b", "sha256": "59203bf3add736714800f03dd102c29e7b7b2e66d574188b80cc7b2132e3c48c"}, "downloads": -1, "filename": "cython_npm-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "2026a7dd2a0c541a7b20f524bb5dce7b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9063, "upload_time": "2018-03-08T10:55:16", "upload_time_iso_8601": "2018-03-08T10:55:16.424390Z", "url": "https://files.pythonhosted.org/packages/0d/0b/c9cfdb4962acf4b86dd43d706c372e7e3da1327110273059f8e05394ae7e/cython_npm-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c7558ef270e475d9a349b863385eb70", "sha256": "dc250a838e15d17901fa5c17d0ed693bb334513852837352da4e3d9369733d35"}, "downloads": -1, "filename": "cython_npm-0.1.6.tar.gz", "has_sig": false, "md5_digest": "4c7558ef270e475d9a349b863385eb70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6685, "upload_time": "2018-03-08T10:55:18", "upload_time_iso_8601": "2018-03-08T10:55:18.297538Z", "url": "https://files.pythonhosted.org/packages/3e/6e/2c64bf1552423779266aa5e978b4889fd6e502570025adec18828b65b386/cython_npm-0.1.6.tar.gz", "yanked": false}], "0.1.61": [{"comment_text": "", "digests": {"md5": "397869b5aaff24d44b0335d820bbf0a8", "sha256": "6848778f7f7c541ad138b179baf000d74c41fd35b2a1e6573ea14ce9fe33cc42"}, "downloads": -1, "filename": "cython_npm-0.1.61-py3-none-any.whl", "has_sig": false, "md5_digest": "397869b5aaff24d44b0335d820bbf0a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9063, "upload_time": "2018-03-09T02:25:46", "upload_time_iso_8601": "2018-03-09T02:25:46.276741Z", "url": "https://files.pythonhosted.org/packages/bd/9a/5c35e39579a2600f04143fb9605601e48686fffe32e1d29ec44059d6733f/cython_npm-0.1.61-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ccaf3c292788413caa61d157daf8ec22", "sha256": "c15908bff296e1649cb08c228e7fd487dbf3f4c050ea2207f7af0e4218c710cb"}, "downloads": -1, "filename": "cython_npm-0.1.61.tar.gz", "has_sig": false, "md5_digest": "ccaf3c292788413caa61d157daf8ec22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6661, "upload_time": "2018-03-09T02:25:48", "upload_time_iso_8601": "2018-03-09T02:25:48.335166Z", "url": "https://files.pythonhosted.org/packages/da/77/89b381c59a990fa02819cc6ff6e895e4ed3162700c9bb541dc9ab7ea9e5f/cython_npm-0.1.61.tar.gz", "yanked": false}], "0.1.62": [{"comment_text": "", "digests": {"md5": "c0953e6c07167abda74ca19e78ce16e5", "sha256": "242835c746144c9523120b29837b3ac1af0218e157452afbfe5fc5c9a0c74982"}, "downloads": -1, "filename": "cython_npm-0.1.62-py3-none-any.whl", "has_sig": false, "md5_digest": "c0953e6c07167abda74ca19e78ce16e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9258, "upload_time": "2018-03-09T02:47:53", "upload_time_iso_8601": "2018-03-09T02:47:53.587112Z", "url": "https://files.pythonhosted.org/packages/88/3d/c3f6dddd66916013bddfff02156e67e914058ecc41602dc02a8e7d07d513/cython_npm-0.1.62-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7173c5753f42836b9333a1658307843d", "sha256": "f1abfbee0ea3cb99fcfee120ed0db3099af9581932a2bc83970a21aadc4e7d4e"}, "downloads": -1, "filename": "cython_npm-0.1.62.tar.gz", "has_sig": false, "md5_digest": "7173c5753f42836b9333a1658307843d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6793, "upload_time": "2018-03-09T02:47:55", "upload_time_iso_8601": "2018-03-09T02:47:55.355761Z", "url": "https://files.pythonhosted.org/packages/4d/18/7e059bca9ac0e69e6d2221cccc09a672559a748091576f55c9195ac1ccdf/cython_npm-0.1.62.tar.gz", "yanked": false}], "0.1.63": [{"comment_text": "", "digests": {"md5": "f8d4c3161d6d71a0203ea68a1ec24541", "sha256": "6924cd08fdb48afc9d32dceb6836e9a1eb7cac8142eec7a674d8ee4782301695"}, "downloads": -1, "filename": "cython_npm-0.1.63-py3-none-any.whl", "has_sig": false, "md5_digest": "f8d4c3161d6d71a0203ea68a1ec24541", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9288, "upload_time": "2018-03-29T07:48:01", "upload_time_iso_8601": "2018-03-29T07:48:01.886730Z", "url": "https://files.pythonhosted.org/packages/01/04/8b073310c1f158c17837875fec453d708c7e1ce580e73c16a2298db4eae9/cython_npm-0.1.63-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3ce2b08d74270708d3b9fccf20150f6", "sha256": "ad7abe45cc23420578388e490f9e0f96fb2cb83cde635c4953598c60b7c004dd"}, "downloads": -1, "filename": "cython_npm-0.1.63.tar.gz", "has_sig": false, "md5_digest": "f3ce2b08d74270708d3b9fccf20150f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6819, "upload_time": "2018-03-29T07:48:09", "upload_time_iso_8601": "2018-03-29T07:48:09.431123Z", "url": "https://files.pythonhosted.org/packages/ce/7f/4cf9e462009590dacd4c12147778723547fdab6a24cb94ff8531cfc03911/cython_npm-0.1.63.tar.gz", "yanked": false}], "0.1.65": [{"comment_text": "", "digests": {"md5": "6e1332c31e1806ee0eb24cb87ebb53d3", "sha256": "0464e805e892e27bb1a3ccbe01fbe567c778fd47225d89dc87d5f6bd0cc3ccaa"}, "downloads": -1, "filename": "cython_npm-0.1.65-py3-none-any.whl", "has_sig": false, "md5_digest": "6e1332c31e1806ee0eb24cb87ebb53d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12541, "upload_time": "2018-05-08T04:09:57", "upload_time_iso_8601": "2018-05-08T04:09:57.853323Z", "url": "https://files.pythonhosted.org/packages/c0/ee/a9abed2990ead0581c2143cdec5dee8503c093a92d6a6edc490e7ed479ed/cython_npm-0.1.65-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5cd22420912585356f56498a94e879ad", "sha256": "450e048df6b9b44a83e51d06c0804262d35d459d2bc7fbb76bdee1ea20b0ad60"}, "downloads": -1, "filename": "cython_npm-0.1.65.tar.gz", "has_sig": false, "md5_digest": "5cd22420912585356f56498a94e879ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9513, "upload_time": "2018-05-08T04:10:03", "upload_time_iso_8601": "2018-05-08T04:10:03.178488Z", "url": "https://files.pythonhosted.org/packages/77/16/4605ff7cfec6737115f0c332aefa682b1ce8bce77df5463f4c109975de8f/cython_npm-0.1.65.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "7ad02d9e15e9c40c46b7411fa138feeb", "sha256": "93239deca56d0e18e938cb67e464f3042426e9f4c0b01d87a4625409a4a8cd85"}, "downloads": -1, "filename": "cython_npm-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "7ad02d9e15e9c40c46b7411fa138feeb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9272, "upload_time": "2018-03-29T07:44:16", "upload_time_iso_8601": "2018-03-29T07:44:16.677511Z", "url": "https://files.pythonhosted.org/packages/11/5c/57b5d784d50ae370b2d639d694e956b2439694f1acfd7ab08e5deb8e502e/cython_npm-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "568c1c1e673b1c9f473ccc00d0a7e10f", "sha256": "693f06ced98ed4d4c303a5d7170eed654547148e0ab90750bb2ea8b35c4c1173"}, "downloads": -1, "filename": "cython_npm-0.1.7.tar.gz", "has_sig": false, "md5_digest": "568c1c1e673b1c9f473ccc00d0a7e10f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6821, "upload_time": "2018-03-29T07:44:21", "upload_time_iso_8601": "2018-03-29T07:44:21.071862Z", "url": "https://files.pythonhosted.org/packages/8a/b9/27de42f978d82f9f201f5f10a270c6dcbeb7f56f2f9384a67d976d98217c/cython_npm-0.1.7.tar.gz", "yanked": false}], "0.1.71": [{"comment_text": "", "digests": {"md5": "9904255f086f537a7c5e040eb2ee2156", "sha256": "288882625e491dfe3d3dad0fa8c0a50f12debc97a87a3b2e76080fef0b3f881e"}, "downloads": -1, "filename": "cython_npm-0.1.71-py3-none-any.whl", "has_sig": false, "md5_digest": "9904255f086f537a7c5e040eb2ee2156", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12539, "upload_time": "2018-05-08T04:11:02", "upload_time_iso_8601": "2018-05-08T04:11:02.809505Z", "url": "https://files.pythonhosted.org/packages/b5/f0/6b9bbcc4b8ec8aa866a34afdd59cd1bcb20e2391c8b7f39a731c8fdb1ce2/cython_npm-0.1.71-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67a92da56c83237ed9743f59b527ae73", "sha256": "7639f69d4f05aaa4f397472022a8e933a08678bdb3927fc5c1c70a74c9503a79"}, "downloads": -1, "filename": "cython_npm-0.1.71.tar.gz", "has_sig": false, "md5_digest": "67a92da56c83237ed9743f59b527ae73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9525, "upload_time": "2018-05-08T04:11:11", "upload_time_iso_8601": "2018-05-08T04:11:11.899508Z", "url": "https://files.pythonhosted.org/packages/a4/a1/06891fa179d3ebbac6a329ea929ad77b200838d6aba2fcdc1ceea9de6357/cython_npm-0.1.71.tar.gz", "yanked": false}], "0.1.72": [{"comment_text": "", "digests": {"md5": "7c2d190089a66e21b89372ff3636881f", "sha256": "ea6f4aa699113b8815852ea11711dc24c4f3d68614550cebf2271d32324aef77"}, "downloads": -1, "filename": "cython_npm-0.1.72-py3-none-any.whl", "has_sig": false, "md5_digest": "7c2d190089a66e21b89372ff3636881f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12487, "upload_time": "2018-05-14T07:19:42", "upload_time_iso_8601": "2018-05-14T07:19:42.550043Z", "url": "https://files.pythonhosted.org/packages/13/6b/df09afac32b3e00b0ad557255ba16910d3a59c2ce81b88d0d178ca198851/cython_npm-0.1.72-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a028ef1688bcc56153ac759097088854", "sha256": "502ecca2a6d615c3eb53394c46706de294ead3b44fdda1394a72fa010eedf72c"}, "downloads": -1, "filename": "cython_npm-0.1.72.tar.gz", "has_sig": false, "md5_digest": "a028ef1688bcc56153ac759097088854", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9479, "upload_time": "2018-05-14T07:19:48", "upload_time_iso_8601": "2018-05-14T07:19:48.110077Z", "url": "https://files.pythonhosted.org/packages/54/7a/8917bb93d5dda33ea4e9d86d3e846ba1954830cf469d8ce8b4dd11089e55/cython_npm-0.1.72.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "967aced6b7cb5fd1ee408ec07d368cd3", "sha256": "1e890ffdd860d2be49d44de9ba8994207dc725c788c43c4d10d5be64e0a69360"}, "downloads": -1, "filename": "cython_npm-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "967aced6b7cb5fd1ee408ec07d368cd3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12681, "upload_time": "2018-06-12T09:36:33", "upload_time_iso_8601": "2018-06-12T09:36:33.962171Z", "url": "https://files.pythonhosted.org/packages/08/dc/6d0699879b9bc2f16b37aec8ae42c4b0f0abcb5908d264fa0138c7b84ce5/cython_npm-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "92f959f1cea713e21cb8af2ea6f8308b", "sha256": "10ad23d3a92b351c2995271aa01e61434db9e6ac982ea4a3b681f6f2928232d0"}, "downloads": -1, "filename": "cython_npm-0.2.1.tar.gz", "has_sig": false, "md5_digest": "92f959f1cea713e21cb8af2ea6f8308b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9730, "upload_time": "2018-06-12T09:36:38", "upload_time_iso_8601": "2018-06-12T09:36:38.599178Z", "url": "https://files.pythonhosted.org/packages/dc/f6/dab00b8a5b2acda2dcb2fb938a25e0399c7cc749b67bc1d6753a0210d987/cython_npm-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "ee198021b652d200ad90aea33b8668d5", "sha256": "946db707dbd1e57fc9877caf758265ce175ecfde7f8884bbff1c010ef29e307a"}, "downloads": -1, "filename": "cython_npm-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ee198021b652d200ad90aea33b8668d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13186, "upload_time": "2018-07-21T15:20:56", "upload_time_iso_8601": "2018-07-21T15:20:56.885749Z", "url": "https://files.pythonhosted.org/packages/5d/b6/a9a8f117c5d6434484a9a52b77c962474c2fda690aa8977b6891c10bd153/cython_npm-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "363251d8d758724585ad6d8e490ef865", "sha256": "c02d4557309ddb4e3f4ac630fea15b2e469176cf91c79d5a7737ca5a76f2810d"}, "downloads": -1, "filename": "cython_npm-0.2.2.tar.gz", "has_sig": false, "md5_digest": "363251d8d758724585ad6d8e490ef865", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7677, "upload_time": "2018-07-21T15:21:03", "upload_time_iso_8601": "2018-07-21T15:21:03.219983Z", "url": "https://files.pythonhosted.org/packages/4c/b7/c0589b4525f770bee95445b7cb340157b696274db867d797d09ad9c166bc/cython_npm-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "fc4bcd05042b6bea1a67d01ecfc7aef4", "sha256": "70e4f22cf6aac0884bb3c558e0e71c2e605e7a0a5dd864b712a7fa9ad522babc"}, "downloads": -1, "filename": "cython_npm-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "fc4bcd05042b6bea1a67d01ecfc7aef4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13212, "upload_time": "2018-09-04T02:53:33", "upload_time_iso_8601": "2018-09-04T02:53:33.074602Z", "url": "https://files.pythonhosted.org/packages/64/84/5b0f63e3d8e2def09d94f43b73a342b574004e9697c043230ee467c04677/cython_npm-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2e2c65e8261bd8e0926eb05badc150b", "sha256": "b7f8661c43ed71e2f4dd3a3f83a5b381c3db92ff49cb11dea205c882f2bb205d"}, "downloads": -1, "filename": "cython_npm-0.2.3.tar.gz", "has_sig": false, "md5_digest": "a2e2c65e8261bd8e0926eb05badc150b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7707, "upload_time": "2018-09-04T02:53:34", "upload_time_iso_8601": "2018-09-04T02:53:34.602333Z", "url": "https://files.pythonhosted.org/packages/81/22/4f0f3310b0be6da550c982a1c326b9cbcdb1691bad6d13c17cb696c493f2/cython_npm-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "aec4f2776c922bff2322fe661f9ada82", "sha256": "da477cd07ae3925e73c233ea8ddd437f5861b2d4668f2b1f587b707461514d33"}, "downloads": -1, "filename": "cython_npm-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "aec4f2776c922bff2322fe661f9ada82", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13247, "upload_time": "2018-09-04T03:40:20", "upload_time_iso_8601": "2018-09-04T03:40:20.046502Z", "url": "https://files.pythonhosted.org/packages/f1/cf/9453d47d7ce7a9ccda207f1e22feca1498ba99f641f4de6ed7e8a3fcc8d2/cython_npm-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97e9f21bcfe5a29ccc92a9447be39936", "sha256": "c10c1c11310e91ed6fff3db126f0517ee8ad8f77d1aacf8f7d4def69f683c938"}, "downloads": -1, "filename": "cython_npm-0.2.4.tar.gz", "has_sig": false, "md5_digest": "97e9f21bcfe5a29ccc92a9447be39936", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7738, "upload_time": "2018-09-04T03:40:27", "upload_time_iso_8601": "2018-09-04T03:40:27.880630Z", "url": "https://files.pythonhosted.org/packages/50/d5/1a9a4fd75bde0478b28a616749dcbb23f1bec0aac39c3981b7044c2770ec/cython_npm-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aec4f2776c922bff2322fe661f9ada82", "sha256": "da477cd07ae3925e73c233ea8ddd437f5861b2d4668f2b1f587b707461514d33"}, "downloads": -1, "filename": "cython_npm-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "aec4f2776c922bff2322fe661f9ada82", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13247, "upload_time": "2018-09-04T03:40:20", "upload_time_iso_8601": "2018-09-04T03:40:20.046502Z", "url": "https://files.pythonhosted.org/packages/f1/cf/9453d47d7ce7a9ccda207f1e22feca1498ba99f641f4de6ed7e8a3fcc8d2/cython_npm-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97e9f21bcfe5a29ccc92a9447be39936", "sha256": "c10c1c11310e91ed6fff3db126f0517ee8ad8f77d1aacf8f7d4def69f683c938"}, "downloads": -1, "filename": "cython_npm-0.2.4.tar.gz", "has_sig": false, "md5_digest": "97e9f21bcfe5a29ccc92a9447be39936", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7738, "upload_time": "2018-09-04T03:40:27", "upload_time_iso_8601": "2018-09-04T03:40:27.880630Z", "url": "https://files.pythonhosted.org/packages/50/d5/1a9a4fd75bde0478b28a616749dcbb23f1bec0aac39c3981b7044c2770ec/cython_npm-0.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:01 2020"}