{"info": {"author": "Nico Schl\u00f6mer", "author_email": "nico.schloemer@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Mathematics"], "description": "<p align=\"center\">\n  <a href=\"https://github.com/nschloe/hmf\"><img alt=\"hmf\" src=\"https://nschloe.github.io/hmf/logo.svg\" width=\"30%\"></a>\n  <p align=\"center\"><a href=\"https://en.wikipedia.org/wiki/Hierarchical_Data_Format\">HDF</a>-only <a href=\"http://xdmf.org/index.php/Main_Page\">XDMF</a>.</p>\n</p>\n\n[![gh-actions](https://img.shields.io/github/workflow/status/nschloe/hmf/ci?style=flat-square)](https://github.com/nschloe/hmf/actions)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg?style=flat-square)](https://github.com/psf/black)\n[![PyPi Version](https://img.shields.io/pypi/v/hmf.svg?style=flat-square)](https://pypi.org/project/hmftools)\n[![GitHub stars](https://img.shields.io/github/stars/nschloe/hmf.svg?style=flat-square&logo=github&label=Stars&logoColor=white)](https://github.com/nschloe/hmf)\n[![PyPi downloads](https://img.shields.io/pypi/dm/hmf.svg?style=flat-square)](https://pypistats.org/packages/hmftools)\n\n[The XDMF data and mesh format](http://xdmf.org/index.php/Main_Page) is arguably one of\nthe best mesh formats out there in terms of file size, I/O speed, and ecosystem support.\nThere is one annoyance though that has bugged me over the years: If using the binary or\nHDF data type (which you should), an XDMF archive consists of _multiple_ files. When\ncopying things over, it is easy to miss or accidentally replace one of those.\n\nAlong comes HMF. It's just like XDMF, except that it restricts itself to HDF data (which\nmost XDMF files use anyway) and puts all the meta data (which for XDMF is found in the\nXML file) into the HDF file. This way, you're only ever dealing with one file.\n\nThis repository contains a Python package that makes working with HMF files easy.\nInstall with\n```\npip install hmftools\n```\nand use the command-line tools\n```bash\nhmf-info <input-hmf>                               # print some info about the file\nhmf-convert <input-mesh-file> <output-mesh-file>   # convert to/from HMF into other formats\nhmf-compress <input-hmf>                           # compress the HMF file\nhmf-uncompress <input-hmf>                         # uncompress the HMF file\n```\nNote that compressed HMF files (which is the default) tend to be much smaller, but\nrequire a bit longer to read. Depending on how often you need to read a file, you might\nwant to `hmf-uncompress` it first.\n\n#### ParaView plugin\n\nAfter installing the hmftools, you can use a plugin to read HMF files with ParaView.\nOpen ParaView, go to\n\n> _Tools_ -> _Manage Plugins..._ -> _Load New ..._\n\nand select the file `paraview-hmf-plugin.py` (typically installed at\n`$HOME/.local/paraview-plugins/paraview-hmf-plugin.py`). Also activate _Auto Load_.\n\nAfter that, you can view any HMF file with ParaView. Note that you might have to start\nParaView with\n```\nHDF5_DISABLE_VERSION_CHECK=1 paraview out.hmf\n```\nto avoid a version warning/error.\n\n\n### License\n\nThe code in this repository is published under the [MIT\nlicense](https://en.wikipedia.org/wiki/MIT_License).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nschloe/hmf", "keywords": "", "license": "License :: OSI Approved :: MIT License", "maintainer": "", "maintainer_email": "", "name": "hmftools", "package_url": "https://pypi.org/project/hmftools/", "platform": "", "project_url": "https://pypi.org/project/hmftools/", "project_urls": {"Code": "https://github.com/nschloe/hmf", "Homepage": "https://github.com/nschloe/hmf", "Issue tracker": "https://github.com/nschloe/hmf/issues"}, "release_url": "https://pypi.org/project/hmftools/0.0.3/", "requires_dist": ["meshio", "h5py"], "requires_python": ">=3.6", "summary": "HMF mesh format", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n  <a href=\"https://github.com/nschloe/hmf\" rel=\"nofollow\"><img alt=\"hmf\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2df817bc395fe8679f989cca9a46cb7b5919760a/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f686d662f6c6f676f2e737667\" width=\"30%\"></a>\n  </p><p align=\"center\"><a href=\"https://en.wikipedia.org/wiki/Hierarchical_Data_Format\" rel=\"nofollow\">HDF</a>-only <a href=\"http://xdmf.org/index.php/Main_Page\" rel=\"nofollow\">XDMF</a>.</p>\n<p></p>\n<p><a href=\"https://github.com/nschloe/hmf/actions\" rel=\"nofollow\"><img alt=\"gh-actions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/340203b366be5f2dee0b5500bc4fabffc61af9b5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6e7363686c6f652f686d662f63693f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c326c58e924b9f3508f32a8ac6b3ee91f40b090/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://pypi.org/project/hmftools\" rel=\"nofollow\"><img alt=\"PyPi Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9337327dd0b474731240db43093f59274907182a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f686d662e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://github.com/nschloe/hmf\" rel=\"nofollow\"><img alt=\"GitHub stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fe01e8a4581a34e2c078a95f0a8a02fc2a39b3f5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6e7363686c6f652f686d662e7376673f7374796c653d666c61742d737175617265266c6f676f3d676974687562266c6162656c3d5374617273266c6f676f436f6c6f723d7768697465\"></a>\n<a href=\"https://pypistats.org/packages/hmftools\" rel=\"nofollow\"><img alt=\"PyPi downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/44ee3232697f1b7f3c01d54d41526ec74fcdb20d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f686d662e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<p><a href=\"http://xdmf.org/index.php/Main_Page\" rel=\"nofollow\">The XDMF data and mesh format</a> is arguably one of\nthe best mesh formats out there in terms of file size, I/O speed, and ecosystem support.\nThere is one annoyance though that has bugged me over the years: If using the binary or\nHDF data type (which you should), an XDMF archive consists of <em>multiple</em> files. When\ncopying things over, it is easy to miss or accidentally replace one of those.</p>\n<p>Along comes HMF. It's just like XDMF, except that it restricts itself to HDF data (which\nmost XDMF files use anyway) and puts all the meta data (which for XDMF is found in the\nXML file) into the HDF file. This way, you're only ever dealing with one file.</p>\n<p>This repository contains a Python package that makes working with HMF files easy.\nInstall with</p>\n<pre><code>pip install hmftools\n</code></pre>\n<p>and use the command-line tools</p>\n<pre>hmf-info &lt;input-hmf&gt;                               <span class=\"c1\"># print some info about the file</span>\nhmf-convert &lt;input-mesh-file&gt; &lt;output-mesh-file&gt;   <span class=\"c1\"># convert to/from HMF into other formats</span>\nhmf-compress &lt;input-hmf&gt;                           <span class=\"c1\"># compress the HMF file</span>\nhmf-uncompress &lt;input-hmf&gt;                         <span class=\"c1\"># uncompress the HMF file</span>\n</pre>\n<p>Note that compressed HMF files (which is the default) tend to be much smaller, but\nrequire a bit longer to read. Depending on how often you need to read a file, you might\nwant to <code>hmf-uncompress</code> it first.</p>\n<h4>ParaView plugin</h4>\n<p>After installing the hmftools, you can use a plugin to read HMF files with ParaView.\nOpen ParaView, go to</p>\n<blockquote>\n<p><em>Tools</em> -&gt; <em>Manage Plugins...</em> -&gt; <em>Load New ...</em></p>\n</blockquote>\n<p>and select the file <code>paraview-hmf-plugin.py</code> (typically installed at\n<code>$HOME/.local/paraview-plugins/paraview-hmf-plugin.py</code>). Also activate <em>Auto Load</em>.</p>\n<p>After that, you can view any HMF file with ParaView. Note that you might have to start\nParaView with</p>\n<pre><code>HDF5_DISABLE_VERSION_CHECK=1 paraview out.hmf\n</code></pre>\n<p>to avoid a version warning/error.</p>\n<h3>License</h3>\n<p>The code in this repository is published under the <a href=\"https://en.wikipedia.org/wiki/MIT_License\" rel=\"nofollow\">MIT\nlicense</a>.</p>\n\n          </div>"}, "last_serial": 6391231, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "f478f9c924ed6053bfbf3e04d056faa6", "sha256": "555dee174b282a254d9003a04c12d8a75e6704731a7e9d00ded059584d64b532"}, "downloads": -1, "filename": "hmftools-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f478f9c924ed6053bfbf3e04d056faa6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11683, "upload_time": "2020-01-03T14:29:20", "upload_time_iso_8601": "2020-01-03T14:29:20.554839Z", "url": "https://files.pythonhosted.org/packages/b7/37/a24e78346555852b5cfccf473bd11116c99999375c3c609d9253a65c235e/hmftools-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f16a8ee451fbc4b0d1f19dae1a5b90cc", "sha256": "2453273f2e7dc28ef1e2f1f50a6b7305b18857ab1a66ca636a21ba88fbd58b1c"}, "downloads": -1, "filename": "hmftools-0.0.3.tar.gz", "has_sig": false, "md5_digest": "f16a8ee451fbc4b0d1f19dae1a5b90cc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8347, "upload_time": "2020-01-03T14:29:23", "upload_time_iso_8601": "2020-01-03T14:29:23.199402Z", "url": "https://files.pythonhosted.org/packages/b5/69/17e39319a63395418ae572a6cd9bdba37096285da056bda1b9d0e431a332/hmftools-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f478f9c924ed6053bfbf3e04d056faa6", "sha256": "555dee174b282a254d9003a04c12d8a75e6704731a7e9d00ded059584d64b532"}, "downloads": -1, "filename": "hmftools-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f478f9c924ed6053bfbf3e04d056faa6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11683, "upload_time": "2020-01-03T14:29:20", "upload_time_iso_8601": "2020-01-03T14:29:20.554839Z", "url": "https://files.pythonhosted.org/packages/b7/37/a24e78346555852b5cfccf473bd11116c99999375c3c609d9253a65c235e/hmftools-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f16a8ee451fbc4b0d1f19dae1a5b90cc", "sha256": "2453273f2e7dc28ef1e2f1f50a6b7305b18857ab1a66ca636a21ba88fbd58b1c"}, "downloads": -1, "filename": "hmftools-0.0.3.tar.gz", "has_sig": false, "md5_digest": "f16a8ee451fbc4b0d1f19dae1a5b90cc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8347, "upload_time": "2020-01-03T14:29:23", "upload_time_iso_8601": "2020-01-03T14:29:23.199402Z", "url": "https://files.pythonhosted.org/packages/b5/69/17e39319a63395418ae572a6cd9bdba37096285da056bda1b9d0e431a332/hmftools-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:56 2020"}