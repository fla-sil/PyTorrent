{"info": {"author": "Carl Levine, Sunny Gleason, Cole Tuininga", "author_email": "clevine@dyn.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Internet :: Name Service (DNS)", "Topic :: Software Development :: Libraries"], "description": "# Dyn Python SDK - Developer Preview\n\n\nNOTE: This is a developer preview - we welcome your feedback!\nPlease reach out via pull request or GitHub issue.\n\n\nMaking DNS Updates as easy as:\n\n    from dyn.traffic import DynTraffic\n\n    # create a new instance of the API client\n    dyn = DynTraffic('customername', 'username', 'password').with_zone('example.com')\n\n    # establish an API connection\n    dyn.session.create()\n\n\n    # create an A record\n    dyn.record.create('A', 'www.example.com.', {'address':'1.2.3.4'})\n\n    # create a CNAME record\n    dyn.record.create('CNAME', 'www2.example.com.', {'cname':'www.example.com'})\n\n\n    # delete one A record\n    dyn.record.delete('A', 'www.example.com', <record_id>)\n\n    # delete all A record\n    dyn.record.delete('A', 'www.example.com')\n\n    # delete a CNAME record\n    dyn.record.delete('CNAME', 'www2.example.com')\n\n\n    # publish changes\n    dyn.zone.publish()\n\n    #Get all records from the zone\n    dyn.zone.list()\n\n    #Get all records from the node\n    dyn.zone.list('www.example.com')\n\n\n    # log out to finish session\n    dyn.session.destroy()\n\nWorking with Messaging is as easy as:\n\n    import sys\n    from dyn.messaging import DynMessaging\n    import json\n    \n    def show(message, result):\n        sys.stderr.write(message + \": \" + json.dumps(result) + '\\n\\n')\n    \n    client = DynMessaging('yourapikey')\n    client._client.verbose = False\n    \n    # accounts (create, list, list_xheaders, update, update_headers, destroy)\n    show(\"ACCOUNTS LIST\", client.accounts.list())\n    show(\"ACCOUNTS CREATE\", client.accounts.create(\"some@address.com\", \"secretword\", \"some company\", \"1234567890\", \"123 main st\", \"big city\", \"MA\", \"12345\", \"USA\", \"east\", \"bounces.com\", \"spam.com\", \"unsubscribe.com\", \"trackopens.com\", \"tracelinks.com\", \"trackunsubscribes.com\", \"generatenewapikey.com\"))\n    show(\"ACCOUNTS UPDATE\", client.accounts.update(\"some@address.com\", \"secretword\", \"some company\", \"1234567890\", \"123 main st\", \"big city\", \"MA\", \"12345\", \"USA\", \"east\", \"bounces.com\", \"spam.com\", \"unsubscribe.com\", \"trackopens.com\", \"tracelinks.com\", \"trackunsubscribes.com\", \"generatenewapikey.com\"))\n    show(\"ACCOUNTS DESTROY\", client.accounts.destroy(\"some@address.com\"))\n    show(\"XHEADERS LIST\", client.accounts.list_xheaders())\n    show(\"XHEADERS UPDATE\", client.accounts.update_xheaders('X-MyExample1','X-AnotherExample2','X-Interesting3','X-Important4'))\n    \n    # senders (list, details, status, create, update, dkim, destroy)\n    show(\"SENDERS LIST\", client.senders.list())\n    show(\"SENDERS DETAILS\", client.senders.details(\"some@address.com\"))\n    show(\"SENDERS STATUS\", client.senders.status(\"some@address.com\"))\n    show(\"SENDERS CREATE\", client.senders.create(\"some@address.com\"))\n    show(\"SENDERS UPDATE\", client.senders.update(\"some@address.com\"))\n    show(\"SENDERS DKIM\", client.senders.dkim(\"some@address.com\", \"123dkim\"))\n    show(\"SENDERS DESTROY\", client.senders.destroy(\"some@address.com\"))\n    \n    # recipients (status, activate)\n    show(\"RECIPIENTS STATUS\", client.recipients.status(\"some@address.com\"))\n    show(\"RECIPIENTS ACTIVATE\", client.recipients.activate(\"some@address.com\"))\n    \n    # suppressions (list, count, create, activate)\n    show(\"SUPPRESSIONS LIST\", client.suppressions.list())\n    show(\"SUPPRESSIONS COUNT\", client.suppressions.count())\n    show(\"SUPPRESSIONS CREATE\", client.suppressions.create(\"something@address.com\"))\n    show(\"SUPPRESSIONS ACTIVATE\", client.suppressions.activate(\"something@address.com\"))\n    \n    # send mail (send)\n    show(\"SEND MAIL\", client.send_mail.send(\"from@somedomain.com\", \"to@someotherdomain.com\", 'hello', 'from python api', \"<html><body>'hi from python api'</body></html>\", \"somecc@address.com\", \"somereply@address.com\"))\n\n    # report - delivery (list, count)\n    show(\"DELIVERY REPORT\", client.delivery.list('2014-01-01','2014-08-01'))\n    show(\"DELIVERY COUNTS\", client.delivery.count('2014-01-01','2014-08-01'))\n\n\n# Examples\n\nFor more comprehensive examples, check out the \"examples\" folder.\n\n# API Endpoints Supported\n\n* Traffic - Session API: create/destroy\n* Traffic - Record API: AAAA A CNAME DNSKEY DS KEY LOC MX NS PTR RP SOA SRV TXT\n* Traffic - Zone API: list/get/publish/freeze/thaw\n* Traffic - Http Redirect API: create/update/list/destroy\n* Messaging - All Endpoints Supported\n\n# Known Issues\n\n* None yet", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dyninc/dyn-python", "keywords": "dyn,dynect,api,dns,traffic,email,messaging", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "dyn-python", "package_url": "https://pypi.org/project/dyn-python/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dyn-python/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/dyninc/dyn-python"}, "release_url": "https://pypi.org/project/dyn-python/1.0/", "requires_dist": null, "requires_python": null, "summary": "Dyn Python SDK", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># Dyn Python SDK - Developer Preview</p>\n<p>NOTE: This is a developer preview - we welcome your feedback!\nPlease reach out via pull request or GitHub issue.</p>\n<p>Making DNS Updates as easy as:</p>\n<blockquote>\n<p>from dyn.traffic import DynTraffic</p>\n<p># create a new instance of the API client\ndyn = DynTraffic(\u2018customername\u2019, \u2018username\u2019, \u2018password\u2019).with_zone(\u2018example.com\u2019)</p>\n<p># establish an API connection\ndyn.session.create()</p>\n<p># create an A record\ndyn.record.create(\u2018A\u2019, \u2018www.example.com.\u2019, {\u2018address\u2019:\u20191.2.3.4\u2019})</p>\n<p># create a CNAME record\ndyn.record.create(\u2018CNAME\u2019, \u2018www2.example.com.\u2019, {\u2018cname\u2019:\u2019www.example.com\u2019})</p>\n<p># delete one A record\ndyn.record.delete(\u2018A\u2019, \u2018www.example.com\u2019, &lt;record_id&gt;)</p>\n<p># delete all A record\ndyn.record.delete(\u2018A\u2019, \u2018www.example.com\u2019)</p>\n<p># delete a CNAME record\ndyn.record.delete(\u2018CNAME\u2019, \u2018www2.example.com\u2019)</p>\n<p># publish changes\ndyn.zone.publish()</p>\n<p>#Get all records from the zone\ndyn.zone.list()</p>\n<p>#Get all records from the node\ndyn.zone.list(\u2018www.example.com\u2019)</p>\n<p># log out to finish session\ndyn.session.destroy()</p>\n</blockquote>\n<p>Working with Messaging is as easy as:</p>\n<blockquote>\n<p>import sys\nfrom dyn.messaging import DynMessaging\nimport json</p>\n<dl>\n<dt>def show(message, result):</dt>\n<dd>sys.stderr.write(message + \u201c: \u201d + json.dumps(result) + \u2018nn\u2019)</dd>\n</dl>\n<p>client = DynMessaging(\u2018yourapikey\u2019)\nclient._client.verbose = False</p>\n<p># accounts (create, list, list_xheaders, update, update_headers, destroy)\nshow(\u201cACCOUNTS LIST\u201d, client.accounts.list())\nshow(\u201cACCOUNTS CREATE\u201d, client.accounts.create(\u201c<a href=\"mailto:some%40address.com\">some<span>@</span>address<span>.</span>com</a>\u201d, \u201csecretword\u201d, \u201csome company\u201d, \u201c1234567890\u201d, \u201c123 main st\u201d, \u201cbig city\u201d, \u201cMA\u201d, \u201c12345\u201d, \u201cUSA\u201d, \u201ceast\u201d, \u201cbounces.com\u201d, \u201cspam.com\u201d, \u201cunsubscribe.com\u201d, \u201ctrackopens.com\u201d, \u201ctracelinks.com\u201d, \u201ctrackunsubscribes.com\u201d, \u201cgeneratenewapikey.com\u201d))\nshow(\u201cACCOUNTS UPDATE\u201d, client.accounts.update(\u201c<a href=\"mailto:some%40address.com\">some<span>@</span>address<span>.</span>com</a>\u201d, \u201csecretword\u201d, \u201csome company\u201d, \u201c1234567890\u201d, \u201c123 main st\u201d, \u201cbig city\u201d, \u201cMA\u201d, \u201c12345\u201d, \u201cUSA\u201d, \u201ceast\u201d, \u201cbounces.com\u201d, \u201cspam.com\u201d, \u201cunsubscribe.com\u201d, \u201ctrackopens.com\u201d, \u201ctracelinks.com\u201d, \u201ctrackunsubscribes.com\u201d, \u201cgeneratenewapikey.com\u201d))\nshow(\u201cACCOUNTS DESTROY\u201d, client.accounts.destroy(\u201c<a href=\"mailto:some%40address.com\">some<span>@</span>address<span>.</span>com</a>\u201d))\nshow(\u201cXHEADERS LIST\u201d, client.accounts.list_xheaders())\nshow(\u201cXHEADERS UPDATE\u201d, client.accounts.update_xheaders(\u2018X-MyExample1\u2019,\u2019X-AnotherExample2\u2019,\u2019X-Interesting3\u2019,\u2019X-Important4\u2019))</p>\n<p># senders (list, details, status, create, update, dkim, destroy)\nshow(\u201cSENDERS LIST\u201d, client.senders.list())\nshow(\u201cSENDERS DETAILS\u201d, client.senders.details(\u201c<a href=\"mailto:some%40address.com\">some<span>@</span>address<span>.</span>com</a>\u201d))\nshow(\u201cSENDERS STATUS\u201d, client.senders.status(\u201c<a href=\"mailto:some%40address.com\">some<span>@</span>address<span>.</span>com</a>\u201d))\nshow(\u201cSENDERS CREATE\u201d, client.senders.create(\u201c<a href=\"mailto:some%40address.com\">some<span>@</span>address<span>.</span>com</a>\u201d))\nshow(\u201cSENDERS UPDATE\u201d, client.senders.update(\u201c<a href=\"mailto:some%40address.com\">some<span>@</span>address<span>.</span>com</a>\u201d))\nshow(\u201cSENDERS DKIM\u201d, client.senders.dkim(\u201c<a href=\"mailto:some%40address.com\">some<span>@</span>address<span>.</span>com</a>\u201d, \u201c123dkim\u201d))\nshow(\u201cSENDERS DESTROY\u201d, client.senders.destroy(\u201c<a href=\"mailto:some%40address.com\">some<span>@</span>address<span>.</span>com</a>\u201d))</p>\n<p># recipients (status, activate)\nshow(\u201cRECIPIENTS STATUS\u201d, client.recipients.status(\u201c<a href=\"mailto:some%40address.com\">some<span>@</span>address<span>.</span>com</a>\u201d))\nshow(\u201cRECIPIENTS ACTIVATE\u201d, client.recipients.activate(\u201c<a href=\"mailto:some%40address.com\">some<span>@</span>address<span>.</span>com</a>\u201d))</p>\n<p># suppressions (list, count, create, activate)\nshow(\u201cSUPPRESSIONS LIST\u201d, client.suppressions.list())\nshow(\u201cSUPPRESSIONS COUNT\u201d, client.suppressions.count())\nshow(\u201cSUPPRESSIONS CREATE\u201d, client.suppressions.create(\u201c<a href=\"mailto:something%40address.com\">something<span>@</span>address<span>.</span>com</a>\u201d))\nshow(\u201cSUPPRESSIONS ACTIVATE\u201d, client.suppressions.activate(\u201c<a href=\"mailto:something%40address.com\">something<span>@</span>address<span>.</span>com</a>\u201d))</p>\n<p># send mail (send)\nshow(\u201cSEND MAIL\u201d, client.send_mail.send(\u201c<a href=\"mailto:from%40somedomain.com\">from<span>@</span>somedomain<span>.</span>com</a>\u201d, \u201c<a href=\"mailto:to%40someotherdomain.com\">to<span>@</span>someotherdomain<span>.</span>com</a>\u201d, \u2018hello\u2019, \u2018from python api\u2019, \u201c&lt;html&gt;&lt;body&gt;\u2019hi from python api\u2019&lt;/body&gt;&lt;/html&gt;\u201d, \u201c<a href=\"mailto:somecc%40address.com\">somecc<span>@</span>address<span>.</span>com</a>\u201d, \u201c<a href=\"mailto:somereply%40address.com\">somereply<span>@</span>address<span>.</span>com</a>\u201d))</p>\n<p># report - delivery (list, count)\nshow(\u201cDELIVERY REPORT\u201d, client.delivery.list(\u20182014-01-01\u2019,\u20192014-08-01\u2019))\nshow(\u201cDELIVERY COUNTS\u201d, client.delivery.count(\u20182014-01-01\u2019,\u20192014-08-01\u2019))</p>\n</blockquote>\n<p># Examples</p>\n<p>For more comprehensive examples, check out the \u201cexamples\u201d folder.</p>\n<p># API Endpoints Supported</p>\n<ul>\n<li>Traffic - Session API: create/destroy</li>\n<li>Traffic - Record API: AAAA A CNAME DNSKEY DS KEY LOC MX NS PTR RP SOA SRV TXT</li>\n<li>Traffic - Zone API: list/get/publish/freeze/thaw</li>\n<li>Traffic - Http Redirect API: create/update/list/destroy</li>\n<li>Messaging - All Endpoints Supported</li>\n</ul>\n<p># Known Issues</p>\n<ul>\n<li>None yet</li>\n</ul>\n\n          </div>"}, "last_serial": 1157306, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "a601c1b069694929e0d56857fc837ee5", "sha256": "c05b53ca1fb3e05860f4d49fd76534afd2f647df77db956b0525360f289d6317"}, "downloads": -1, "filename": "dyn-python-1.0.tar.gz", "has_sig": false, "md5_digest": "a601c1b069694929e0d56857fc837ee5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6771, "upload_time": "2014-07-14T16:13:41", "upload_time_iso_8601": "2014-07-14T16:13:41.107617Z", "url": "https://files.pythonhosted.org/packages/e0/81/f2874acd3d4b66af71477dc664459871bc99c41f76d7af8cac5e987882fb/dyn-python-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a601c1b069694929e0d56857fc837ee5", "sha256": "c05b53ca1fb3e05860f4d49fd76534afd2f647df77db956b0525360f289d6317"}, "downloads": -1, "filename": "dyn-python-1.0.tar.gz", "has_sig": false, "md5_digest": "a601c1b069694929e0d56857fc837ee5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6771, "upload_time": "2014-07-14T16:13:41", "upload_time_iso_8601": "2014-07-14T16:13:41.107617Z", "url": "https://files.pythonhosted.org/packages/e0/81/f2874acd3d4b66af71477dc664459871bc99c41f76d7af8cac5e987882fb/dyn-python-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:37 2020"}