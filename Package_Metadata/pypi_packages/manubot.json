{"info": {"author": "Daniel Himmelstein", "author_email": "daniel.himmelstein@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Scientific/Engineering :: Information Analysis"], "description": "# Python utilities for Manubot: Manuscripts, open and automated\n\n[![documentation](https://img.shields.io/badge/-Documentation-purple?logo=read-the-docs)](https://manubot.github.io/manubot/)\n[![Travis Linux Build Status](https://travis-ci.com/manubot/manubot.svg?branch=master)](https://travis-ci.com/manubot/manubot)\n[![AppVeyor Windows Build Status](https://ci.appveyor.com/api/projects/status/f20hvc6si5uiqd7e/branch/master?svg=true)](https://ci.appveyor.com/project/manubot/manubot/branch/master)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n[Manubot](https://manubot.org/ \"Manubot homepage\") is a workflow and set of tools for the next generation of scholarly publishing.\nThis repository contains a Python package with several Manubot-related utilities, as described in the [usage section](#usage) below.\nPackage documentation is available at <https://manubot.github.io/manubot> (auto-generated from the Python source code).\n\nThe `manubot cite` command-line interface retrieves and formats bibliographic metadata for user-supplied persistent identifiers like DOIs or PubMed IDs.\nThe `manubot process` command-line interface prepares scholarly manuscripts for Pandoc consumption.\nThe `manubot process` command is used by Manubot manuscripts, which are based off the [Rootstock template](https://github.com/manubot/rootstock), to automate several aspects of manuscript generation.\nSee Rootstock's [manuscript usage guide](https://github.com/manubot/rootstock/blob/master/USAGE.md) for more information.\n\n**Note:**\nIf you want to experience Manubot by editing an existing manuscript, see <https://github.com/manubot/try-manubot>.\nIf you want to create a new manuscript, see <https://github.com/manubot/rootstock>.\n\nTo cite the Manubot project or for more information on its design and history, see:\n\n> **Open collaborative writing with Manubot**<br>\nDaniel S. Himmelstein, Vincent Rubinetti, David R. Slochower, Dongbo Hu, Venkat S. Malladi, Casey S. Greene, Anthony Gitter<br>\n*PLOS Computational Biology* (2019-06-24) <https://doi.org/c7np><br>\nDOI: [10.1371/journal.pcbi.1007128](https://doi.org/10.1371/journal.pcbi.1007128) \u00b7 PMID: [31233491](https://www.ncbi.nlm.nih.gov/pubmed/31233491) \u00b7 PMCID: [PMC6611653](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6611653)\n\nThe Manubot version of this manuscript is available at <https://greenelab.github.io/meta-review/>.\n\n## Installation\n\nIf you are using the `manubot` Python package as part of a manuscript repository, installation of this package is handled though the Rootstock's [environment specification](https://github.com/manubot/rootstock/blob/master/build/environment.yml).\nFor other use cases, this package can be installed via `pip`.\n\nInstall the latest release version [from PyPI](https://pypi.org/project/manubot/):\n\n```sh\npip install --upgrade manubot\n```\n\nOr install from the source code on [GitHub](https://github.com/manubot/manubot), using the version specified by a commit hash:\n\n```sh\nCOMMIT=d2160151e52750895571079a6e257beb6e0b1278\npip install --upgrade git+https://github.com/manubot/manubot@$COMMIT\n```\n\nThe `--upgrade` argument ensures `pip` updates an existing `manubot` installation if present.\n\n## Usage\n\nInstalling the python package creates the `manubot` command line program.\nHere is the usage information as per `manubot --help`:\n\n<!-- test codeblock contains output of `manubot --help` -->\n```\nusage: manubot [-h] [--version] {process,cite,webpage} ...\n\nManubot: the manuscript bot for scholarly writing\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n\nsubcommands:\n  All operations are done through subcommands:\n\n  {process,cite,webpage}\n    process             process manuscript content\n    cite                citation to CSL command line utility\n    webpage             deploy Manubot outputs to a webpage directory tree\n```\n\nNote that all operations are done through the following sub-commands.\n\n### Process\n\nThe `manubot process` program is the primary interface to using Manubot.\nThere are two required arguments: `--content-directory` and `--output-directory`, which specify the respective paths to the content and output directories.\nThe content directory stores the manuscript source files.\nFiles generated by Manubot are saved to the output directory.\n\nOne common setup is to create a directory for a manuscript that contains both the `content` and `output` directory.\nUnder this setup, you can run the Manubot using:\n\n```sh\nmanubot process \\\n  --content-directory=content \\\n  --output-directory=output\n```\n\nSee `manubot process --help` for documentation of all command line arguments:\n\n<!-- test codeblock contains output of `manubot process --help` -->\n```\nusage: manubot process [-h] --content-directory CONTENT_DIRECTORY\n                       --output-directory OUTPUT_DIRECTORY\n                       [--template-variables-path TEMPLATE_VARIABLES_PATH]\n                       [--skip-citations] [--cache-directory CACHE_DIRECTORY]\n                       [--clear-requests-cache]\n                       [--log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}]\n\nProcess manuscript content to create outputs for Pandoc consumption. Performs\nbibliographic processing and templating.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --content-directory CONTENT_DIRECTORY\n                        Directory where manuscript content files are located.\n  --output-directory OUTPUT_DIRECTORY\n                        Directory to output files generated by this script.\n  --template-variables-path TEMPLATE_VARIABLES_PATH\n                        Path or URL of a file containing template variables\n                        for jinja2. Serialization format is inferred from the\n                        file extension, with support for JSON, YAML, and TOML.\n                        If the format cannot be detected, the parser assumes\n                        JSON. Specify this argument multiple times to read\n                        multiple files. Variables can be applied to a\n                        namespace (i.e. stored under a dictionary key) like\n                        `--template-variables-path=namespace=path_or_url`.\n                        Namespaces must match the regex `[a-zA-\n                        Z_][a-zA-Z0-9_]*`.\n  --skip-citations      Skip citation and reference processing. Specify when\n                        using the pandoc-manubot-cite filter. If citation-\n                        tags.tsv is found in content, these tags will be\n                        inserted in the markdown output using the reference-\n                        link syntax for citekey aliases. Appends\n                        content/manual-references*.* paths to Pandoc's\n                        metadata.bibliography field.\n  --cache-directory CACHE_DIRECTORY\n                        Custom cache directory. If not specified, caches to\n                        output-directory.\n  --clear-requests-cache\n  --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}\n                        Set the logging level for stderr logging\n```\n\n#### Manual references\n\nManubot has the ability to rely on user-provided reference metadata rather than generating it.\n`manubot process` searches the content directory for files containing manually-provided reference metadata that match the glob `manual-references*.*`.\nIf a manual reference filename ends with `.json` or `.yaml`, it's assumed to contain CSL Data (i.e. Citation Style Language JSON).\nOtherwise, the format is inferred from the extension and converted to CSL JSON using the `pandoc-citeproc --bib2json` [utility](https://github.com/jgm/pandoc-citeproc/blob/master/man/pandoc-citeproc.1.md#convert-mode).\nThe standard citation key for manual references is inferred from the CSL JSON `id` or `note` field.\nWhen no prefix is provided, such as `doi:`, `url:`, or `raw:`, a `raw:` prefix is automatically added.\nIf multiple manual reference files load metadata for the same standard citation `id`, precedence is assigned according to descending filename order.\n\n### Cite\n\n`manubot cite` is a command line utility to create [CSL JSON items](http://citeproc-js.readthedocs.io/en/latest/csl-json/markup.html#items) for one or more citation keys.\nCitation keys should be in the format `source:identifier`.\nFor example, the following example generates CSL JSON for four references:\n\n```sh\nmanubot cite doi:10.1098/rsif.2017.0387 pmid:29424689 pmcid:PMC5640425 arxiv:1806.05726\n```\n\nThe following [terminal recording](https://asciinema.org/a/205085?speed=2) demonstrates the main features of `manubot cite`:\n\n![manubot cite demonstration](media/terminal-recordings/manubot-cite-cast.gif)\n\nAdditional usage information is available from `manubot cite --help`:\n\n<!-- test codeblock contains output of `manubot cite --help` -->\n```\nusage: manubot cite [-h] [--render] [--csl CSL]\n                    [--format {plain,markdown,docx,html,jats}]\n                    [--output OUTPUT] [--allow-invalid-csl-data]\n                    [--log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}]\n                    citekeys [citekeys ...]\n\nRetrieve bibliographic metadata for one or more citation keys.\n\npositional arguments:\n  citekeys              One or more (space separated) citation keys to produce\n                        CSL for.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --render              Whether to render CSL Data into a formatted reference\n                        list using Pandoc. Pandoc version 2.0 or higher is\n                        required for complete support of available output\n                        formats.\n  --csl CSL             When --render, specify an XML CSL definition to style\n                        references (i.e. Pandoc's --csl option). Defaults to\n                        Manubot's style.\n  --format {plain,markdown,docx,html,jats}\n                        When --render, format to use for output file. If not\n                        specified, attempt to infer this from filename\n                        extension. Otherwise, default to plain.\n  --output OUTPUT       Specify a file to write output, otherwise default to\n                        stdout.\n  --allow-invalid-csl-data\n                        Allow CSL Items that do not conform to the JSON\n                        Schema. Skips CSL pruning.\n  --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}\n                        Set the logging level for stderr logging\n```\n\n### Pandoc filter\n\nThis package creates the `pandoc-manubot-cite` Pandoc filter,\nproviding access to Manubot's cite-by-ID functionality from within a Pandoc workflow.\n\nCurrently, this filter is experimental and subject to breaking changes at any point.\nAt some point in the future, we may migrate entirely from `manubot process` to `pandoc-manubot-cite` for citation processing.\n\n<!-- test codeblock contains output of `pandoc-manubot-cite --help` -->\n```\nusage: pandoc-manubot-cite [-h] [--input [INPUT]] [--output [OUTPUT]]\n                           target_format\n\nPandoc filter for citation by persistent identifier. Filters are command-line\nprograms that read and write a JSON-encoded abstract syntax tree for Pandoc.\nUnless you are debugging, run this filter as part of a pandoc command by\nspecifying --filter=pandoc-manubot-cite.\n\npositional arguments:\n  target_format      output format of the pandoc command, as per Pandoc's --to\n                     option\n\noptional arguments:\n  -h, --help         show this help message and exit\n  --input [INPUT]    path read JSON input (defaults to stdin)\n  --output [OUTPUT]  path to write JSON output (defaults to stdout)\n```\n\nOther Pandoc filters exist that do something similar:\n[`pandoc-url2cite`](https://github.com/phiresky/pandoc-url2cite) &\n[`pwcite`](https://github.com/wikicite/wcite#filter-pwcite).\nCurrently, `pandoc-manubot-cite` supports the most types of persistent identifiers.\nWe're interested in creating as much compatibility as possible between these filters and their syntaxes.\n\n### Webpage\n\nThe `manubot webpage` command populates a `webpage` directory with Manubot output files.\n\n<!-- test codeblock contains output of `manubot webpage --help` -->\n```\nusage: manubot webpage [-h] [--checkout [CHECKOUT]] [--version VERSION]\n                       [--timestamp] [--no-ots-cache | --ots-cache OTS_CACHE]\n                       [--log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}]\n\nUpdate the webpage directory tree with Manubot output files. This command\nshould be run from the root directory of a Manubot manuscript that follows the\nRootstock layout, containing `output` and `webpage` directories. HTML and PDF\noutputs are copied to the webpage directory, which is structured as static\nsource files for website hosting.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --checkout [CHECKOUT]\n                        branch to checkout /v directory contents from. For\n                        example, --checkout=upstream/gh-pages. --checkout is\n                        equivalent to --checkout=gh-pages. If --checkout is\n                        ommitted, no checkout is performed.\n  --version VERSION     Used to create webpage/v/{version} directory.\n                        Generally a commit hash, tag, or 'local'. When\n                        omitted, version defaults to the commit hash on CI\n                        builds and 'local' elsewhere.\n  --timestamp           timestamp versioned manuscripts in webpage/v using\n                        OpenTimestamps. Specify this flag to create timestamps\n                        for the current HTML and PDF outputs and upgrade any\n                        timestamps from past manuscript versions.\n  --no-ots-cache        disable the timestamp cache.\n  --ots-cache OTS_CACHE\n                        location for the timestamp cache (default:\n                        ci/cache/ots).\n  --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}\n                        Set the logging level for stderr logging\n```\n\n## Development\n\n### Environment\n\nCreate a development environment using:\n\n```shell\nconda create --name manubot-dev --channel conda-forge \\\n  python=3.7 pandoc=2.8\nconda activate manubot-dev  # assumes conda >= 4.4\npip install --editable \".[all]\"\n```\n\n### Commands\n\nBelow are some common commands used for development.\nThey assume the working directory is set to the repository's root, and the conda environment is activated.\n\n```shell\n# run the test suite\npytest\n\n# reformat Python files according to the black style rules (required to pass CI)\nblack .\n\n# detect any flake8 linting violations\nflake8\n\n# regenerate the README codeblocks for --help messages\npython manubot/tests/test_readme.py\n\n# generate the docs\nportray as_html --overwrite --output_dir=docs\n\n# process the example testing manuscript\nmanubot process \\\n  --content-directory=manubot/process/tests/manuscripts/example/content \\\n  --output-directory=manubot/process/tests/manuscripts/example/output \\\n  --log-level=DEBUG\n```\n\n### Release instructions\n\n[![PyPI](https://img.shields.io/pypi/v/manubot.svg)](https://pypi.org/project/manubot/)\n\nThis section is only relevant for project maintainers.\nTravis CI deployments are used to upload releases to [PyPI](https://pypi.org/project/manubot).\nTo create a new release, bump the `__version__` in [`manubot/__init__.py`](manubot/__init__.py).\nThen run the following commands:\n\n```sh\nTAG=v`python setup.py --version`\n# Commit updated __version__ info\ngit add manubot/__init__.py release-notes/$TAG.md\ngit commit --message=\"Prepare $TAG release\"\ngit push\n# Create & push tag (assuming upstream is the manubot organization remote)\ngit tag --annotate $TAG --file=release-notes/$TAG.md\ngit push upstream $TAG\n```\n\n## Goals & Acknowledgments\n\nOur goal is to create scholarly infrastructure that encourages open science and assists reproducibility.\nAccordingly, we hope for the Manubot software and philosophy to be adopted widely, by both academic and commercial entities.\nAs such, Manubot is free/libre and open source software (see [`LICENSE.md`](LICENSE.md)).\n\nWe would like to thank the contributors and funders whose support makes this project possible.\nSpecifically, Manubot development has been financially supported by:\n\n- the **Alfred P. Sloan Foundation** in [Grant G-2018-11163](https://sloan.org/grant-detail/8501) to [**@dhimmel**](https://github.com/dhimmel).\n- the **Gordon & Betty Moore Foundation** ([**@DDD-Moore**](https://github.com/DDD-Moore)) in [Grant GBMF4552](https://www.moore.org/grant-detail?grantId=GBMF4552) to [**@cgreene**](https://github.com/cgreene).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/manubot/manubot", "keywords": "manuscript markdown publishing references citations", "license": "BSD 3-Clause", "maintainer": "", "maintainer_email": "", "name": "manubot", "package_url": "https://pypi.org/project/manubot/", "platform": "", "project_url": "https://pypi.org/project/manubot/", "project_urls": {"Documentation": "https://manubot.github.io/manubot", "Homepage": "https://manubot.org", "Publication": "https://greenelab.github.io/meta-review/", "Source": "https://github.com/manubot/manubot", "Tracker": "https://github.com/manubot/manubot/issues"}, "release_url": "https://pypi.org/project/manubot/0.3.1/", "requires_dist": ["errorhandler", "isbnlib", "jinja2", "jsonref", "jsonschema", "packaging", "pandas", "panflute", "pybase62", "pyyaml", "ratelimiter", "requests-cache", "requests", "toml", "opentimestamps-client ; extra == 'all'", "black ; extra == 'all'", "flake8 ; extra == 'all'", "ghp-import ; extra == 'all'", "portray ; extra == 'all'", "pytest ; extra == 'all'", "black ; extra == 'dev'", "flake8 ; extra == 'dev'", "ghp-import ; extra == 'dev'", "portray ; extra == 'dev'", "pytest ; extra == 'dev'", "opentimestamps-client ; extra == 'webpage'"], "requires_python": ">=3.6", "summary": "Python utilities for Manubot: Manuscripts, open and automated", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python utilities for Manubot: Manuscripts, open and automated</h1>\n<p><a href=\"https://manubot.github.io/manubot/\" rel=\"nofollow\"><img alt=\"documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88601159eac876b0b2fac46a280188dd70e789de/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d446f63756d656e746174696f6e2d707572706c653f6c6f676f3d726561642d7468652d646f6373\"></a>\n<a href=\"https://travis-ci.com/manubot/manubot\" rel=\"nofollow\"><img alt=\"Travis Linux Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/67bf6c0f8800ad6eb9c08b979e23502b4bdda49f/68747470733a2f2f7472617669732d63692e636f6d2f6d616e75626f742f6d616e75626f742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/manubot/manubot/branch/master\" rel=\"nofollow\"><img alt=\"AppVeyor Windows Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0ebe4d297549d8685a2e0b3652b4da650db5975e/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f663230687663367369357569716437652f6272616e63682f6d61737465723f7376673d74727565\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p><a href=\"https://manubot.org/\" rel=\"nofollow\" title=\"Manubot homepage\">Manubot</a> is a workflow and set of tools for the next generation of scholarly publishing.\nThis repository contains a Python package with several Manubot-related utilities, as described in the <a href=\"#usage\" rel=\"nofollow\">usage section</a> below.\nPackage documentation is available at <a href=\"https://manubot.github.io/manubot\" rel=\"nofollow\">https://manubot.github.io/manubot</a> (auto-generated from the Python source code).</p>\n<p>The <code>manubot cite</code> command-line interface retrieves and formats bibliographic metadata for user-supplied persistent identifiers like DOIs or PubMed IDs.\nThe <code>manubot process</code> command-line interface prepares scholarly manuscripts for Pandoc consumption.\nThe <code>manubot process</code> command is used by Manubot manuscripts, which are based off the <a href=\"https://github.com/manubot/rootstock\" rel=\"nofollow\">Rootstock template</a>, to automate several aspects of manuscript generation.\nSee Rootstock's <a href=\"https://github.com/manubot/rootstock/blob/master/USAGE.md\" rel=\"nofollow\">manuscript usage guide</a> for more information.</p>\n<p><strong>Note:</strong>\nIf you want to experience Manubot by editing an existing manuscript, see <a href=\"https://github.com/manubot/try-manubot\" rel=\"nofollow\">https://github.com/manubot/try-manubot</a>.\nIf you want to create a new manuscript, see <a href=\"https://github.com/manubot/rootstock\" rel=\"nofollow\">https://github.com/manubot/rootstock</a>.</p>\n<p>To cite the Manubot project or for more information on its design and history, see:</p>\n<blockquote>\n<p><strong>Open collaborative writing with Manubot</strong><br>\nDaniel S. Himmelstein, Vincent Rubinetti, David R. Slochower, Dongbo Hu, Venkat S. Malladi, Casey S. Greene, Anthony Gitter<br>\n<em>PLOS Computational Biology</em> (2019-06-24) <a href=\"https://doi.org/c7np\" rel=\"nofollow\">https://doi.org/c7np</a><br>\nDOI: <a href=\"https://doi.org/10.1371/journal.pcbi.1007128\" rel=\"nofollow\">10.1371/journal.pcbi.1007128</a> \u00b7 PMID: <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/31233491\" rel=\"nofollow\">31233491</a> \u00b7 PMCID: <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6611653\" rel=\"nofollow\">PMC6611653</a></p>\n</blockquote>\n<p>The Manubot version of this manuscript is available at <a href=\"https://greenelab.github.io/meta-review/\" rel=\"nofollow\">https://greenelab.github.io/meta-review/</a>.</p>\n<h2>Installation</h2>\n<p>If you are using the <code>manubot</code> Python package as part of a manuscript repository, installation of this package is handled though the Rootstock's <a href=\"https://github.com/manubot/rootstock/blob/master/build/environment.yml\" rel=\"nofollow\">environment specification</a>.\nFor other use cases, this package can be installed via <code>pip</code>.</p>\n<p>Install the latest release version <a href=\"https://pypi.org/project/manubot/\" rel=\"nofollow\">from PyPI</a>:</p>\n<pre>pip install --upgrade manubot\n</pre>\n<p>Or install from the source code on <a href=\"https://github.com/manubot/manubot\" rel=\"nofollow\">GitHub</a>, using the version specified by a commit hash:</p>\n<pre><span class=\"nv\">COMMIT</span><span class=\"o\">=</span>d2160151e52750895571079a6e257beb6e0b1278\npip install --upgrade git+https://github.com/manubot/manubot@<span class=\"nv\">$COMMIT</span>\n</pre>\n<p>The <code>--upgrade</code> argument ensures <code>pip</code> updates an existing <code>manubot</code> installation if present.</p>\n<h2>Usage</h2>\n<p>Installing the python package creates the <code>manubot</code> command line program.\nHere is the usage information as per <code>manubot --help</code>:</p>\n\n<pre><code>usage: manubot [-h] [--version] {process,cite,webpage} ...\n\nManubot: the manuscript bot for scholarly writing\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n\nsubcommands:\n  All operations are done through subcommands:\n\n  {process,cite,webpage}\n    process             process manuscript content\n    cite                citation to CSL command line utility\n    webpage             deploy Manubot outputs to a webpage directory tree\n</code></pre>\n<p>Note that all operations are done through the following sub-commands.</p>\n<h3>Process</h3>\n<p>The <code>manubot process</code> program is the primary interface to using Manubot.\nThere are two required arguments: <code>--content-directory</code> and <code>--output-directory</code>, which specify the respective paths to the content and output directories.\nThe content directory stores the manuscript source files.\nFiles generated by Manubot are saved to the output directory.</p>\n<p>One common setup is to create a directory for a manuscript that contains both the <code>content</code> and <code>output</code> directory.\nUnder this setup, you can run the Manubot using:</p>\n<pre>manubot process <span class=\"se\">\\</span>\n  --content-directory<span class=\"o\">=</span>content <span class=\"se\">\\</span>\n  --output-directory<span class=\"o\">=</span>output\n</pre>\n<p>See <code>manubot process --help</code> for documentation of all command line arguments:</p>\n\n<pre><code>usage: manubot process [-h] --content-directory CONTENT_DIRECTORY\n                       --output-directory OUTPUT_DIRECTORY\n                       [--template-variables-path TEMPLATE_VARIABLES_PATH]\n                       [--skip-citations] [--cache-directory CACHE_DIRECTORY]\n                       [--clear-requests-cache]\n                       [--log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}]\n\nProcess manuscript content to create outputs for Pandoc consumption. Performs\nbibliographic processing and templating.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --content-directory CONTENT_DIRECTORY\n                        Directory where manuscript content files are located.\n  --output-directory OUTPUT_DIRECTORY\n                        Directory to output files generated by this script.\n  --template-variables-path TEMPLATE_VARIABLES_PATH\n                        Path or URL of a file containing template variables\n                        for jinja2. Serialization format is inferred from the\n                        file extension, with support for JSON, YAML, and TOML.\n                        If the format cannot be detected, the parser assumes\n                        JSON. Specify this argument multiple times to read\n                        multiple files. Variables can be applied to a\n                        namespace (i.e. stored under a dictionary key) like\n                        `--template-variables-path=namespace=path_or_url`.\n                        Namespaces must match the regex `[a-zA-\n                        Z_][a-zA-Z0-9_]*`.\n  --skip-citations      Skip citation and reference processing. Specify when\n                        using the pandoc-manubot-cite filter. If citation-\n                        tags.tsv is found in content, these tags will be\n                        inserted in the markdown output using the reference-\n                        link syntax for citekey aliases. Appends\n                        content/manual-references*.* paths to Pandoc's\n                        metadata.bibliography field.\n  --cache-directory CACHE_DIRECTORY\n                        Custom cache directory. If not specified, caches to\n                        output-directory.\n  --clear-requests-cache\n  --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}\n                        Set the logging level for stderr logging\n</code></pre>\n<h4>Manual references</h4>\n<p>Manubot has the ability to rely on user-provided reference metadata rather than generating it.\n<code>manubot process</code> searches the content directory for files containing manually-provided reference metadata that match the glob <code>manual-references*.*</code>.\nIf a manual reference filename ends with <code>.json</code> or <code>.yaml</code>, it's assumed to contain CSL Data (i.e. Citation Style Language JSON).\nOtherwise, the format is inferred from the extension and converted to CSL JSON using the <code>pandoc-citeproc --bib2json</code> <a href=\"https://github.com/jgm/pandoc-citeproc/blob/master/man/pandoc-citeproc.1.md#convert-mode\" rel=\"nofollow\">utility</a>.\nThe standard citation key for manual references is inferred from the CSL JSON <code>id</code> or <code>note</code> field.\nWhen no prefix is provided, such as <code>doi:</code>, <code>url:</code>, or <code>raw:</code>, a <code>raw:</code> prefix is automatically added.\nIf multiple manual reference files load metadata for the same standard citation <code>id</code>, precedence is assigned according to descending filename order.</p>\n<h3>Cite</h3>\n<p><code>manubot cite</code> is a command line utility to create <a href=\"http://citeproc-js.readthedocs.io/en/latest/csl-json/markup.html#items\" rel=\"nofollow\">CSL JSON items</a> for one or more citation keys.\nCitation keys should be in the format <code>source:identifier</code>.\nFor example, the following example generates CSL JSON for four references:</p>\n<pre>manubot cite doi:10.1098/rsif.2017.0387 pmid:29424689 pmcid:PMC5640425 arxiv:1806.05726\n</pre>\n<p>The following <a href=\"https://asciinema.org/a/205085?speed=2\" rel=\"nofollow\">terminal recording</a> demonstrates the main features of <code>manubot cite</code>:</p>\n<p><img alt=\"manubot cite demonstration\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4e085b21b17d3bed4ea591ed1de17c1002ed832b/6d656469612f7465726d696e616c2d7265636f7264696e67732f6d616e75626f742d636974652d636173742e676966\"></p>\n<p>Additional usage information is available from <code>manubot cite --help</code>:</p>\n\n<pre><code>usage: manubot cite [-h] [--render] [--csl CSL]\n                    [--format {plain,markdown,docx,html,jats}]\n                    [--output OUTPUT] [--allow-invalid-csl-data]\n                    [--log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}]\n                    citekeys [citekeys ...]\n\nRetrieve bibliographic metadata for one or more citation keys.\n\npositional arguments:\n  citekeys              One or more (space separated) citation keys to produce\n                        CSL for.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --render              Whether to render CSL Data into a formatted reference\n                        list using Pandoc. Pandoc version 2.0 or higher is\n                        required for complete support of available output\n                        formats.\n  --csl CSL             When --render, specify an XML CSL definition to style\n                        references (i.e. Pandoc's --csl option). Defaults to\n                        Manubot's style.\n  --format {plain,markdown,docx,html,jats}\n                        When --render, format to use for output file. If not\n                        specified, attempt to infer this from filename\n                        extension. Otherwise, default to plain.\n  --output OUTPUT       Specify a file to write output, otherwise default to\n                        stdout.\n  --allow-invalid-csl-data\n                        Allow CSL Items that do not conform to the JSON\n                        Schema. Skips CSL pruning.\n  --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}\n                        Set the logging level for stderr logging\n</code></pre>\n<h3>Pandoc filter</h3>\n<p>This package creates the <code>pandoc-manubot-cite</code> Pandoc filter,\nproviding access to Manubot's cite-by-ID functionality from within a Pandoc workflow.</p>\n<p>Currently, this filter is experimental and subject to breaking changes at any point.\nAt some point in the future, we may migrate entirely from <code>manubot process</code> to <code>pandoc-manubot-cite</code> for citation processing.</p>\n\n<pre><code>usage: pandoc-manubot-cite [-h] [--input [INPUT]] [--output [OUTPUT]]\n                           target_format\n\nPandoc filter for citation by persistent identifier. Filters are command-line\nprograms that read and write a JSON-encoded abstract syntax tree for Pandoc.\nUnless you are debugging, run this filter as part of a pandoc command by\nspecifying --filter=pandoc-manubot-cite.\n\npositional arguments:\n  target_format      output format of the pandoc command, as per Pandoc's --to\n                     option\n\noptional arguments:\n  -h, --help         show this help message and exit\n  --input [INPUT]    path read JSON input (defaults to stdin)\n  --output [OUTPUT]  path to write JSON output (defaults to stdout)\n</code></pre>\n<p>Other Pandoc filters exist that do something similar:\n<a href=\"https://github.com/phiresky/pandoc-url2cite\" rel=\"nofollow\"><code>pandoc-url2cite</code></a> &amp;\n<a href=\"https://github.com/wikicite/wcite#filter-pwcite\" rel=\"nofollow\"><code>pwcite</code></a>.\nCurrently, <code>pandoc-manubot-cite</code> supports the most types of persistent identifiers.\nWe're interested in creating as much compatibility as possible between these filters and their syntaxes.</p>\n<h3>Webpage</h3>\n<p>The <code>manubot webpage</code> command populates a <code>webpage</code> directory with Manubot output files.</p>\n\n<pre><code>usage: manubot webpage [-h] [--checkout [CHECKOUT]] [--version VERSION]\n                       [--timestamp] [--no-ots-cache | --ots-cache OTS_CACHE]\n                       [--log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}]\n\nUpdate the webpage directory tree with Manubot output files. This command\nshould be run from the root directory of a Manubot manuscript that follows the\nRootstock layout, containing `output` and `webpage` directories. HTML and PDF\noutputs are copied to the webpage directory, which is structured as static\nsource files for website hosting.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --checkout [CHECKOUT]\n                        branch to checkout /v directory contents from. For\n                        example, --checkout=upstream/gh-pages. --checkout is\n                        equivalent to --checkout=gh-pages. If --checkout is\n                        ommitted, no checkout is performed.\n  --version VERSION     Used to create webpage/v/{version} directory.\n                        Generally a commit hash, tag, or 'local'. When\n                        omitted, version defaults to the commit hash on CI\n                        builds and 'local' elsewhere.\n  --timestamp           timestamp versioned manuscripts in webpage/v using\n                        OpenTimestamps. Specify this flag to create timestamps\n                        for the current HTML and PDF outputs and upgrade any\n                        timestamps from past manuscript versions.\n  --no-ots-cache        disable the timestamp cache.\n  --ots-cache OTS_CACHE\n                        location for the timestamp cache (default:\n                        ci/cache/ots).\n  --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}\n                        Set the logging level for stderr logging\n</code></pre>\n<h2>Development</h2>\n<h3>Environment</h3>\n<p>Create a development environment using:</p>\n<pre>conda create --name manubot-dev --channel conda-forge <span class=\"se\">\\</span>\n  <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">3</span>.7 <span class=\"nv\">pandoc</span><span class=\"o\">=</span><span class=\"m\">2</span>.8\nconda activate manubot-dev  <span class=\"c1\"># assumes conda &gt;= 4.4</span>\npip install --editable <span class=\"s2\">\".[all]\"</span>\n</pre>\n<h3>Commands</h3>\n<p>Below are some common commands used for development.\nThey assume the working directory is set to the repository's root, and the conda environment is activated.</p>\n<pre><span class=\"c1\"># run the test suite</span>\npytest\n\n<span class=\"c1\"># reformat Python files according to the black style rules (required to pass CI)</span>\nblack .\n\n<span class=\"c1\"># detect any flake8 linting violations</span>\nflake8\n\n<span class=\"c1\"># regenerate the README codeblocks for --help messages</span>\npython manubot/tests/test_readme.py\n\n<span class=\"c1\"># generate the docs</span>\nportray as_html --overwrite --output_dir<span class=\"o\">=</span>docs\n\n<span class=\"c1\"># process the example testing manuscript</span>\nmanubot process <span class=\"se\">\\</span>\n  --content-directory<span class=\"o\">=</span>manubot/process/tests/manuscripts/example/content <span class=\"se\">\\</span>\n  --output-directory<span class=\"o\">=</span>manubot/process/tests/manuscripts/example/output <span class=\"se\">\\</span>\n  --log-level<span class=\"o\">=</span>DEBUG\n</pre>\n<h3>Release instructions</h3>\n<p><a href=\"https://pypi.org/project/manubot/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/300a3005b2b59d9acf1d2b24d39e778f6231c6a8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d616e75626f742e737667\"></a></p>\n<p>This section is only relevant for project maintainers.\nTravis CI deployments are used to upload releases to <a href=\"https://pypi.org/project/manubot\" rel=\"nofollow\">PyPI</a>.\nTo create a new release, bump the <code>__version__</code> in <a href=\"manubot/__init__.py\" rel=\"nofollow\"><code>manubot/__init__.py</code></a>.\nThen run the following commands:</p>\n<pre><span class=\"nv\">TAG</span><span class=\"o\">=</span>v<span class=\"sb\">`</span>python setup.py --version<span class=\"sb\">`</span>\n<span class=\"c1\"># Commit updated __version__ info</span>\ngit add manubot/__init__.py release-notes/<span class=\"nv\">$TAG</span>.md\ngit commit --message<span class=\"o\">=</span><span class=\"s2\">\"Prepare </span><span class=\"nv\">$TAG</span><span class=\"s2\"> release\"</span>\ngit push\n<span class=\"c1\"># Create &amp; push tag (assuming upstream is the manubot organization remote)</span>\ngit tag --annotate <span class=\"nv\">$TAG</span> --file<span class=\"o\">=</span>release-notes/<span class=\"nv\">$TAG</span>.md\ngit push upstream <span class=\"nv\">$TAG</span>\n</pre>\n<h2>Goals &amp; Acknowledgments</h2>\n<p>Our goal is to create scholarly infrastructure that encourages open science and assists reproducibility.\nAccordingly, we hope for the Manubot software and philosophy to be adopted widely, by both academic and commercial entities.\nAs such, Manubot is free/libre and open source software (see <a href=\"LICENSE.md\" rel=\"nofollow\"><code>LICENSE.md</code></a>).</p>\n<p>We would like to thank the contributors and funders whose support makes this project possible.\nSpecifically, Manubot development has been financially supported by:</p>\n<ul>\n<li>the <strong>Alfred P. Sloan Foundation</strong> in <a href=\"https://sloan.org/grant-detail/8501\" rel=\"nofollow\">Grant G-2018-11163</a> to <a href=\"https://github.com/dhimmel\" rel=\"nofollow\"><strong>@dhimmel</strong></a>.</li>\n<li>the <strong>Gordon &amp; Betty Moore Foundation</strong> (<a href=\"https://github.com/DDD-Moore\" rel=\"nofollow\"><strong>@DDD-Moore</strong></a>) in <a href=\"https://www.moore.org/grant-detail?grantId=GBMF4552\" rel=\"nofollow\">Grant GBMF4552</a> to <a href=\"https://github.com/cgreene\" rel=\"nofollow\"><strong>@cgreene</strong></a>.</li>\n</ul>\n\n          </div>"}, "last_serial": 6507847, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d8e571d49b0f1b0a847b0b672a55a4a3", "sha256": "83065ce6b4c302506ed092d7c50f2f1f3f57313a95eda21ebc1d52cbdf1c1101"}, "downloads": -1, "filename": "manubot-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d8e571d49b0f1b0a847b0b672a55a4a3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13861, "upload_time": "2018-08-04T18:38:59", "upload_time_iso_8601": "2018-08-04T18:38:59.556456Z", "url": "https://files.pythonhosted.org/packages/6b/9e/e9f158e25a827f844c61b624050db1e6a1ee70c90b728efdd3e75c510559/manubot-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a9cafe89caea753f0757cfe5ee41a2a1", "sha256": "c1c9aabb67705320638c2070ddd6f4a87d56c77b6180ad8c385806c25ea9d822"}, "downloads": -1, "filename": "manubot-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a9cafe89caea753f0757cfe5ee41a2a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 26334, "upload_time": "2018-10-07T12:07:38", "upload_time_iso_8601": "2018-10-07T12:07:38.243438Z", "url": "https://files.pythonhosted.org/packages/60/ec/7a784ab4e3abcaf4a9b3fc2127ab870322f14431a23f166f965964fc7c3a/manubot-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71858d1898ba7166cbe3a9311810410a", "sha256": "74711219ee92a6e0b1649172dcba97fe4361c663cf8311212bf54ebd578ea326"}, "downloads": -1, "filename": "manubot-0.2.0.tar.gz", "has_sig": false, "md5_digest": "71858d1898ba7166cbe3a9311810410a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20647, "upload_time": "2018-10-07T12:07:39", "upload_time_iso_8601": "2018-10-07T12:07:39.687780Z", "url": "https://files.pythonhosted.org/packages/a0/16/76cba109adaf5b57c494069e0fe64c4de086bc5f38f7894085efee737e85/manubot-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "aa7da2e31508d9feabd72cbed374d775", "sha256": "fb00de204c72e608ae989e5b422f4f77eeafa866930eb65e882bb0427a77a2dc"}, "downloads": -1, "filename": "manubot-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "aa7da2e31508d9feabd72cbed374d775", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 28545, "upload_time": "2018-11-15T19:01:51", "upload_time_iso_8601": "2018-11-15T19:01:51.956065Z", "url": "https://files.pythonhosted.org/packages/33/f0/13047987aeb0cb78437ac7081d32985a321219d62ce1e5ce70fdbdae0e5e/manubot-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80ab3e0b2077139b1f9d9c66326c2bc0", "sha256": "3c4e3f6eae5087d470d14884e64b88fa4a9d5e5e8d6b87a81d35b684b91fe101"}, "downloads": -1, "filename": "manubot-0.2.1.tar.gz", "has_sig": false, "md5_digest": "80ab3e0b2077139b1f9d9c66326c2bc0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22719, "upload_time": "2018-11-15T19:01:53", "upload_time_iso_8601": "2018-11-15T19:01:53.804119Z", "url": "https://files.pythonhosted.org/packages/65/bf/7d954b7fb89fdc05c0624ef5a8a244bab0b97cf8020e3a4d9b98b8b6f30f/manubot-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "ef1f2395017d89a1458b7aea6594cc24", "sha256": "0340bd97095d7502742bf5fce6f9261ab88d97454ae84747751d0c83c198e48d"}, "downloads": -1, "filename": "manubot-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ef1f2395017d89a1458b7aea6594cc24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 45615, "upload_time": "2018-12-17T22:02:43", "upload_time_iso_8601": "2018-12-17T22:02:43.820853Z", "url": "https://files.pythonhosted.org/packages/b9/a3/a23578751ceab0d73c4bf21f427e096c1fcc0f76a494392c573c23a04741/manubot-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d78c99aff1b54482efa67239cc1a3eb", "sha256": "a031fe9d5a8b8018a75cfdb1310d79caefa3a80c9098cf0b2eee8f8b88399c30"}, "downloads": -1, "filename": "manubot-0.2.2.tar.gz", "has_sig": false, "md5_digest": "6d78c99aff1b54482efa67239cc1a3eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 33060, "upload_time": "2018-12-17T22:02:45", "upload_time_iso_8601": "2018-12-17T22:02:45.159424Z", "url": "https://files.pythonhosted.org/packages/5f/0f/6abce53be873d7bdae5645c87fd41feb9203f7fa8d3b07ebc0a9d830d80e/manubot-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "b8fcebae53b3457d84456a643a6ebb10", "sha256": "14e53c61e69a7cffb5222067e41f31c065be2e19fc9532a02bdbeb0c317c0bba"}, "downloads": -1, "filename": "manubot-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b8fcebae53b3457d84456a643a6ebb10", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 48404, "upload_time": "2019-02-12T03:27:33", "upload_time_iso_8601": "2019-02-12T03:27:33.639857Z", "url": "https://files.pythonhosted.org/packages/fb/ee/c6460f8c4e1b7c40eaaec54d4a41a6f76549b16361716b87c6fda0cee127/manubot-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60b8fea34ed2d33178d03c3a06f1724e", "sha256": "e946571a92e1ce9a0aa37774cbeb2b28e59d2cd86508355e2d70fce8f25ce4ef"}, "downloads": -1, "filename": "manubot-0.2.3.tar.gz", "has_sig": false, "md5_digest": "60b8fea34ed2d33178d03c3a06f1724e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 35437, "upload_time": "2019-02-12T03:27:35", "upload_time_iso_8601": "2019-02-12T03:27:35.456245Z", "url": "https://files.pythonhosted.org/packages/7a/f6/32f7f4bfcb05e077a0291c67b06bcdda8a2a34e0946e675228dc31e61e36/manubot-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "c5dabdb8aae6223c4ea7fc0a0acdb8e1", "sha256": "5ddea1ff1049875ed5442d107c5abc79e82b355d09f1816e822a2b04b82afd72"}, "downloads": -1, "filename": "manubot-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c5dabdb8aae6223c4ea7fc0a0acdb8e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 56238, "upload_time": "2019-07-11T21:21:16", "upload_time_iso_8601": "2019-07-11T21:21:16.856765Z", "url": "https://files.pythonhosted.org/packages/62/73/da3cf069ccfd487b434f651bcf31e3477e33d57665e2ff70e64429a2863a/manubot-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6a320a8001599bd0e06a2e86d2b54ec", "sha256": "aa6407edfdfa358e01167e4f899adb79f7b5f6c1b86be1df3cfcbff511329cd2"}, "downloads": -1, "filename": "manubot-0.2.4.tar.gz", "has_sig": false, "md5_digest": "d6a320a8001599bd0e06a2e86d2b54ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 45252, "upload_time": "2019-07-11T21:21:18", "upload_time_iso_8601": "2019-07-11T21:21:18.369424Z", "url": "https://files.pythonhosted.org/packages/9a/b0/7d888d9559580bb7279732b33ed42353b8c9b3092a0ab069ca02d283ee1a/manubot-0.2.4.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "e97decbe705274eb1654646fcadfaf47", "sha256": "2e2a4fef2ea03e7f30a474143e49062c57e31cd710236bf033c18461e93c6631"}, "downloads": -1, "filename": "manubot-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e97decbe705274eb1654646fcadfaf47", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 76149, "upload_time": "2019-11-23T19:48:05", "upload_time_iso_8601": "2019-11-23T19:48:05.905342Z", "url": "https://files.pythonhosted.org/packages/67/10/50ecf91b536823efa307b83913a4746c4b4475f3c75c7e00e5ba398bc5cd/manubot-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "122626e3bc9147e917337d90853fd4b1", "sha256": "df0fba426a7913b608f3717ff98925385eab381610b7289a39fb4d09792b266b"}, "downloads": -1, "filename": "manubot-0.3.0.tar.gz", "has_sig": false, "md5_digest": "122626e3bc9147e917337d90853fd4b1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 55688, "upload_time": "2019-11-23T19:48:07", "upload_time_iso_8601": "2019-11-23T19:48:07.372150Z", "url": "https://files.pythonhosted.org/packages/14/31/53ac0d04effd3c36f84586ded491d969682e6c9aea639d9866c15f66dc50/manubot-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "0dde763965067e6e1dcc34644f8bf7c3", "sha256": "8ef34c16b6aa590ba4dc4432a9fd99b771edcd1b4acb9fdde7069cb9240d7b32"}, "downloads": -1, "filename": "manubot-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0dde763965067e6e1dcc34644f8bf7c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 91355, "upload_time": "2020-01-23T17:18:45", "upload_time_iso_8601": "2020-01-23T17:18:45.748616Z", "url": "https://files.pythonhosted.org/packages/07/0d/7684274cd6751c995a448f0fe1b553f29953affde059cf4456574b8abc5a/manubot-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3e4c5ac4baa52d2d4d1786d8a8e3c17", "sha256": "7207affcc040e17369240a883f515c240d5f3a714e27621ed34f315ae2db8880"}, "downloads": -1, "filename": "manubot-0.3.1.tar.gz", "has_sig": false, "md5_digest": "d3e4c5ac4baa52d2d4d1786d8a8e3c17", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 76439, "upload_time": "2020-01-23T17:18:47", "upload_time_iso_8601": "2020-01-23T17:18:47.067004Z", "url": "https://files.pythonhosted.org/packages/5b/8f/b3215ebca99904d43be597994cff7d2ec2ae16bccdfd70ec694e88579919/manubot-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0dde763965067e6e1dcc34644f8bf7c3", "sha256": "8ef34c16b6aa590ba4dc4432a9fd99b771edcd1b4acb9fdde7069cb9240d7b32"}, "downloads": -1, "filename": "manubot-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0dde763965067e6e1dcc34644f8bf7c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 91355, "upload_time": "2020-01-23T17:18:45", "upload_time_iso_8601": "2020-01-23T17:18:45.748616Z", "url": "https://files.pythonhosted.org/packages/07/0d/7684274cd6751c995a448f0fe1b553f29953affde059cf4456574b8abc5a/manubot-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3e4c5ac4baa52d2d4d1786d8a8e3c17", "sha256": "7207affcc040e17369240a883f515c240d5f3a714e27621ed34f315ae2db8880"}, "downloads": -1, "filename": "manubot-0.3.1.tar.gz", "has_sig": false, "md5_digest": "d3e4c5ac4baa52d2d4d1786d8a8e3c17", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 76439, "upload_time": "2020-01-23T17:18:47", "upload_time_iso_8601": "2020-01-23T17:18:47.067004Z", "url": "https://files.pythonhosted.org/packages/5b/8f/b3215ebca99904d43be597994cff7d2ec2ae16bccdfd70ec694e88579919/manubot-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:28 2020"}