{"info": {"author": "Nicholas Law", "author_email": "nicholas_law_91@hotmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# ModelStacker\nModelStacker implements the stacking of machine learning models and very often, the stacked model is able to perform better than any of its base models. This technique is said to be the most effective when there are vast differences present amongst the base models. More information on this concepts can be found at:\n\n1. [A Kaggler's Guide to Model Stacking in Practice](http://blog.kaggle.com/2016/12/27/a-kagglers-guide-to-model-stacking-in-practice/)\n\n2. [Stacking Models for Improved Predictions](https://www.kdnuggets.com/2017/02/stacking-models-imropved-predictions.html)\n\n## Dependencies\nCurrently, ModelStacker depends on:\n- numpy==1.14.0\n- pandas==0.22.0\n\n## Installation\n```\npip install -r requirements.txt\n```\n\n## Usage\n### Initalize ModelStacker\n```\nfrom ModelStacker import ModelStacker\nstacker = ModelStacker()\n```\n\n### Initialize and Add Base Models\n```\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\n\ndtclf = DecisionTreeClassifier()\nknnclf = KNeighborsClassifier()\nsvmclf = SVC()\n\nstacker.add_base_model(dtclf)\nstacker.add_base_model(knnclf)\nstacker.add_base_model(svmclf)\n```\n\n### Initalize and Add Stacked Model\n```\nfrom sklearn.linear_model import LogisticRegression\nlgclf = LogisticRegression()\nstacker.add_stacked_model(lgclf)\n```\n\n### Fitting and Predicting\n```\nstacker.fit(X_train, y_train) # X_train and y_train belongs to training set\npredictions = stacker.predict(X_test)\n```\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nicholaslaw/ModelStacker", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "MLStacker", "package_url": "https://pypi.org/project/MLStacker/", "platform": "", "project_url": "https://pypi.org/project/MLStacker/", "project_urls": {"Homepage": "https://github.com/nicholaslaw/ModelStacker"}, "release_url": "https://pypi.org/project/MLStacker/0.0.1/", "requires_dist": ["numpy (==1.14.0)", "pandas (==0.22.0)"], "requires_python": "", "summary": "A package which supports the implementation of stacking of machine learning models", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # ModelStacker<br>ModelStacker implements the stacking of machine learning models and very often, the stacked model is able to perform better than any of its base models. This technique is said to be the most effective when there are vast differences present amongst the base models. More information on this concepts can be found at:<br><br>1. [A Kaggler's Guide to Model Stacking in Practice](http://blog.kaggle.com/2016/12/27/a-kagglers-guide-to-model-stacking-in-practice/)<br><br>2. [Stacking Models for Improved Predictions](https://www.kdnuggets.com/2017/02/stacking-models-imropved-predictions.html)<br><br>## Dependencies<br>Currently, ModelStacker depends on:<br>- numpy==1.14.0<br>- pandas==0.22.0<br><br>## Installation<br>```<br>pip install -r requirements.txt<br>```<br><br>## Usage<br>### Initalize ModelStacker<br>```<br>from ModelStacker import ModelStacker<br>stacker = ModelStacker()<br>```<br><br>### Initialize and Add Base Models<br>```<br>from sklearn.tree import DecisionTreeClassifier<br>from sklearn.neighbors import KNeighborsClassifier<br>from sklearn.svm import SVC<br><br>dtclf = DecisionTreeClassifier()<br>knnclf = KNeighborsClassifier()<br>svmclf = SVC()<br><br>stacker.add_base_model(dtclf)<br>stacker.add_base_model(knnclf)<br>stacker.add_base_model(svmclf)<br>```<br><br>### Initalize and Add Stacked Model<br>```<br>from sklearn.linear_model import LogisticRegression<br>lgclf = LogisticRegression()<br>stacker.add_stacked_model(lgclf)<br>```<br><br>### Fitting and Predicting<br>```<br>stacker.fit(X_train, y_train) # X_train and y_train belongs to training set<br>predictions = stacker.predict(X_test)<br>```<br><br>\n          </div>"}, "last_serial": 4798908, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "8beac896ce4e59f3a592ac84e5cc8d19", "sha256": "332e2d2f020ccad2e3c268188232039a58dc85c664817e66c652a8ac80ced780"}, "downloads": -1, "filename": "MLStacker-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8beac896ce4e59f3a592ac84e5cc8d19", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5356, "upload_time": "2019-02-09T09:23:41", "upload_time_iso_8601": "2019-02-09T09:23:41.445841Z", "url": "https://files.pythonhosted.org/packages/62/07/1e85fa6c097530d1e037f98afa16d118db8c4182d8a5ed08e9fe9513cf54/MLStacker-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e08429d07773ffd1f8f239a8c5def07", "sha256": "18651bd26787815b7610ac80544bd21c68389fd55b1c058ae59eb83a9ba78eb0"}, "downloads": -1, "filename": "MLStacker-0.0.1.tar.gz", "has_sig": false, "md5_digest": "9e08429d07773ffd1f8f239a8c5def07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3430, "upload_time": "2019-02-09T09:23:43", "upload_time_iso_8601": "2019-02-09T09:23:43.931248Z", "url": "https://files.pythonhosted.org/packages/95/10/975daabb8e3ffd711180eb5f2a1b9bd049502097b3f24e659062cbeee6f8/MLStacker-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8beac896ce4e59f3a592ac84e5cc8d19", "sha256": "332e2d2f020ccad2e3c268188232039a58dc85c664817e66c652a8ac80ced780"}, "downloads": -1, "filename": "MLStacker-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8beac896ce4e59f3a592ac84e5cc8d19", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5356, "upload_time": "2019-02-09T09:23:41", "upload_time_iso_8601": "2019-02-09T09:23:41.445841Z", "url": "https://files.pythonhosted.org/packages/62/07/1e85fa6c097530d1e037f98afa16d118db8c4182d8a5ed08e9fe9513cf54/MLStacker-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e08429d07773ffd1f8f239a8c5def07", "sha256": "18651bd26787815b7610ac80544bd21c68389fd55b1c058ae59eb83a9ba78eb0"}, "downloads": -1, "filename": "MLStacker-0.0.1.tar.gz", "has_sig": false, "md5_digest": "9e08429d07773ffd1f8f239a8c5def07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3430, "upload_time": "2019-02-09T09:23:43", "upload_time_iso_8601": "2019-02-09T09:23:43.931248Z", "url": "https://files.pythonhosted.org/packages/95/10/975daabb8e3ffd711180eb5f2a1b9bd049502097b3f24e659062cbeee6f8/MLStacker-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:22 2020"}