{"info": {"author": "Lain Musgrove (lainproliant)", "author_email": "lain.proliant@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Build Tools"], "description": "# Panifex: A Python Build System\n## Overview\nPanifex is a Python build system that easily allows you to tie together various\nparts of a multi-stage build and to create reusable recipes.  It is a good\nreplacement for `make` and related tools.\n\n## Example Usage\nThe following example defines a `bake.py` script that builds a tetris game from\nits project root directory:\n\n```\n#!/usr/bin/env python\nfrom pathlib import Path\nfrom panifex import build, sh\n\nsh.env(CC=\"clang\", CFLAGS=(\"-g\", \"-I./include\"), LDFLAGS=(\"-lncurses\", \"-lpanel\"))\n\ndef compile(src):\n    return sh(\n        \"{CC} -c {CFLAGS} {input} -o {output}\",\n        input=src,\n        output=Path(src).with_suffix(\".o\"),\n    )\n\ndef link(executable, objects):\n    return sh(\"{CC} {LDFLAGS} {input} -o {output}\", input=objects, output=executable)\n\n@build\nclass ntetris2:\n    def sources(self):\n        return Path.cwd().glob(\"**/*.c\")\n\n    def objects(self, sources):\n        return [compile(src) for src in sources]\n\n    def executable(self, objects):\n        return link(\"ntetris2\", objects)\n```\n\nIn the above example, the following usage patterns are presented:\n\n- `build` and `sh` are imported from `panifex`.\n    - `build` is a decorator function which wraps a class that defines the\n        targets for the build.  Each named function in the class is a build\n        target that can be invoked directly from the `bake.py` script.  All\n        targets are built if none are provided.\n    - `sh` is a recipe factory for generating shell-based file recipes.\n- `CC`, `CFLAGS`, and `LDFLAGS` are defined as environment variables through\n    `sh.env`.  `sh.env` extends the environment of the `sh` recipe factory with\n    additional variables that are interpolated into the command string and added\n    to the environment of commands run with this factory.  In addition to OS\n    environment variables which are added automatically as strings, lists or\n    tuples can be specified in `sh.env` which will be interpolated correctly\n    into command format strings.\n- `compile` is defined.  It is a normal function which calls the `sh` factory to\n    generate a recipe for creating an `.o` output file for the given source\n    file.  `compile` is referred to as a \"recipe function\", because it is a\n    function that generates a recipe from arguments.  Calling this function\n    itself does not run any commands, but instead the recipe generated should be\n    returned from a build target, where it can be built in parallel with other\n    dependencies in the overall dependency tree.  The `input` and `output`\n    parameters to `sh` are special and essential:\n    - `output` specifies the name of the file that will be generated by the\n        shell recipe.  This is used to determine if the recipe actually needs\n        to be run, and identifies the file that should be cleaned up while\n        cleaning.\n    - `input` is optional, and specifies the file(s) that will be used to\n        create the output.  If the output already exists but any of the input\n        files are newer, the output will be re-created.\n- `link` is defined as another recipe function for creating the final executable\n    from a list of object files.\n- The `ntetris2` class is defined.  This is the \"build class\" and defines the\n    targets to be built.  The `@build` decorator is required, and is the\n    catalyst which starts the build process and makes the targets available for\n    building.  A build script should define only one build class, as control is\n    given over to Panifex once the class decorator is called.\n- `sources` is the first target.  This target doesn't actually generate any\n    files, rather it defines the list of source files to be built.  Since the\n    result of the target isn't a recipe, the source files won't be affected by\n    cleaning or building.  This doesn't actually need to be a target, as the\n    list of files to be compiled could be specified outside the build class, but\n    it is made a target to illustrate the previous points.\n- `objects` is the next target.  It depends on `sources` because it has a\n    parameter named `sources` which is automatically injected with the result\n    from `sources`, that being a list of source filenames.  It uses `compile` to\n    create a list of recipes and returns them.  Panifex will build these recipes\n    in parallel, spawning at maximum as many simultaneous processes as the\n    system has available processor cores.\n- `executable` is the final target.  It depends on `objects`, and as such won't\n    actually run until all of the object file recipes generated by `objects` are\n    done building.  `executable` doesn't receive the list of object recipes,\n    rather it receives a list containing all of the outputs specified by each\n    recipe, that being a list of object filenames.\n\nMore examples and usage info coming soon!\n\n## Release Notes\n### v0.1: 01/02/20\n- Initial release.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lainproliant/panifex", "keywords": "build make", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "panifex", "package_url": "https://pypi.org/project/panifex/", "platform": "", "project_url": "https://pypi.org/project/panifex/", "project_urls": {"Homepage": "https://github.com/lainproliant/panifex"}, "release_url": "https://pypi.org/project/panifex/0.7.3/", "requires_dist": null, "requires_python": "", "summary": "A make-like DI-based Python build system.", "version": "0.7.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Panifex: A Python Build System</h1>\n<h2>Overview</h2>\n<p>Panifex is a Python build system that easily allows you to tie together various\nparts of a multi-stage build and to create reusable recipes.  It is a good\nreplacement for <code>make</code> and related tools.</p>\n<h2>Example Usage</h2>\n<p>The following example defines a <code>bake.py</code> script that builds a tetris game from\nits project root directory:</p>\n<pre><code>#!/usr/bin/env python\nfrom pathlib import Path\nfrom panifex import build, sh\n\nsh.env(CC=\"clang\", CFLAGS=(\"-g\", \"-I./include\"), LDFLAGS=(\"-lncurses\", \"-lpanel\"))\n\ndef compile(src):\n    return sh(\n        \"{CC} -c {CFLAGS} {input} -o {output}\",\n        input=src,\n        output=Path(src).with_suffix(\".o\"),\n    )\n\ndef link(executable, objects):\n    return sh(\"{CC} {LDFLAGS} {input} -o {output}\", input=objects, output=executable)\n\n@build\nclass ntetris2:\n    def sources(self):\n        return Path.cwd().glob(\"**/*.c\")\n\n    def objects(self, sources):\n        return [compile(src) for src in sources]\n\n    def executable(self, objects):\n        return link(\"ntetris2\", objects)\n</code></pre>\n<p>In the above example, the following usage patterns are presented:</p>\n<ul>\n<li><code>build</code> and <code>sh</code> are imported from <code>panifex</code>.\n<ul>\n<li><code>build</code> is a decorator function which wraps a class that defines the\ntargets for the build.  Each named function in the class is a build\ntarget that can be invoked directly from the <code>bake.py</code> script.  All\ntargets are built if none are provided.</li>\n<li><code>sh</code> is a recipe factory for generating shell-based file recipes.</li>\n</ul>\n</li>\n<li><code>CC</code>, <code>CFLAGS</code>, and <code>LDFLAGS</code> are defined as environment variables through\n<code>sh.env</code>.  <code>sh.env</code> extends the environment of the <code>sh</code> recipe factory with\nadditional variables that are interpolated into the command string and added\nto the environment of commands run with this factory.  In addition to OS\nenvironment variables which are added automatically as strings, lists or\ntuples can be specified in <code>sh.env</code> which will be interpolated correctly\ninto command format strings.</li>\n<li><code>compile</code> is defined.  It is a normal function which calls the <code>sh</code> factory to\ngenerate a recipe for creating an <code>.o</code> output file for the given source\nfile.  <code>compile</code> is referred to as a \"recipe function\", because it is a\nfunction that generates a recipe from arguments.  Calling this function\nitself does not run any commands, but instead the recipe generated should be\nreturned from a build target, where it can be built in parallel with other\ndependencies in the overall dependency tree.  The <code>input</code> and <code>output</code>\nparameters to <code>sh</code> are special and essential:\n<ul>\n<li><code>output</code> specifies the name of the file that will be generated by the\nshell recipe.  This is used to determine if the recipe actually needs\nto be run, and identifies the file that should be cleaned up while\ncleaning.</li>\n<li><code>input</code> is optional, and specifies the file(s) that will be used to\ncreate the output.  If the output already exists but any of the input\nfiles are newer, the output will be re-created.</li>\n</ul>\n</li>\n<li><code>link</code> is defined as another recipe function for creating the final executable\nfrom a list of object files.</li>\n<li>The <code>ntetris2</code> class is defined.  This is the \"build class\" and defines the\ntargets to be built.  The <code>@build</code> decorator is required, and is the\ncatalyst which starts the build process and makes the targets available for\nbuilding.  A build script should define only one build class, as control is\ngiven over to Panifex once the class decorator is called.</li>\n<li><code>sources</code> is the first target.  This target doesn't actually generate any\nfiles, rather it defines the list of source files to be built.  Since the\nresult of the target isn't a recipe, the source files won't be affected by\ncleaning or building.  This doesn't actually need to be a target, as the\nlist of files to be compiled could be specified outside the build class, but\nit is made a target to illustrate the previous points.</li>\n<li><code>objects</code> is the next target.  It depends on <code>sources</code> because it has a\nparameter named <code>sources</code> which is automatically injected with the result\nfrom <code>sources</code>, that being a list of source filenames.  It uses <code>compile</code> to\ncreate a list of recipes and returns them.  Panifex will build these recipes\nin parallel, spawning at maximum as many simultaneous processes as the\nsystem has available processor cores.</li>\n<li><code>executable</code> is the final target.  It depends on <code>objects</code>, and as such won't\nactually run until all of the object file recipes generated by <code>objects</code> are\ndone building.  <code>executable</code> doesn't receive the list of object recipes,\nrather it receives a list containing all of the outputs specified by each\nrecipe, that being a list of object filenames.</li>\n</ul>\n<p>More examples and usage info coming soon!</p>\n<h2>Release Notes</h2>\n<h3>v0.1: 01/02/20</h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n\n          </div>"}, "last_serial": 7150281, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "68203bd4d3da8a449f9fa10772817e34", "sha256": "ac83267725b08f3e11e6a79c634991a55d18b305fe830435d40702054e97e985"}, "downloads": -1, "filename": "panifex-0.1.tar.gz", "has_sig": false, "md5_digest": "68203bd4d3da8a449f9fa10772817e34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12905, "upload_time": "2020-01-02T16:03:28", "upload_time_iso_8601": "2020-01-02T16:03:28.682856Z", "url": "https://files.pythonhosted.org/packages/48/11/0b5a3fa5789b0c1ba077f03bff573a57ceb11ca8bf3a639b819feef66223/panifex-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "aa5c48a8b328c25ec454a875575256f6", "sha256": "52c97b1c378450590da574645562db3a29b089028e807435d9fdac51bfdae6f7"}, "downloads": -1, "filename": "panifex-0.2.tar.gz", "has_sig": false, "md5_digest": "aa5c48a8b328c25ec454a875575256f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12900, "upload_time": "2020-01-02T16:05:34", "upload_time_iso_8601": "2020-01-02T16:05:34.273148Z", "url": "https://files.pythonhosted.org/packages/fc/15/337d9b4fdaaa2f2cabe2e6a59a1f0b6520d4e33b931ef95ff45bc465d512/panifex-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "0e63d6edacda60182b7f3c18e493c95c", "sha256": "36976cc5a41c88d38fba470c22439f6ad499816822d3f7a385e97a49b79bbb53"}, "downloads": -1, "filename": "panifex-0.3.tar.gz", "has_sig": false, "md5_digest": "0e63d6edacda60182b7f3c18e493c95c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13474, "upload_time": "2020-01-30T20:23:29", "upload_time_iso_8601": "2020-01-30T20:23:29.388026Z", "url": "https://files.pythonhosted.org/packages/10/c4/57fa1d77ac7983902806334192b57c4451a6ed8ba5a7d5546413dccdf20e/panifex-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "f8e7f8c6e1ea295f4d9e7164359e003f", "sha256": "0a8ad3c2eb1570c15fc73e1f2118d225879ef6e0774ba3b1860c2ecf5948b8d2"}, "downloads": -1, "filename": "panifex-0.4.tar.gz", "has_sig": false, "md5_digest": "f8e7f8c6e1ea295f4d9e7164359e003f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15363, "upload_time": "2020-02-03T11:15:51", "upload_time_iso_8601": "2020-02-03T11:15:51.424752Z", "url": "https://files.pythonhosted.org/packages/8d/41/bf10963682439a88582117b22091ba2d8a5d6d01a0179b8dd2d207b3fca7/panifex-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "9c52459ad7f9fa8593a2b620e367e1db", "sha256": "f89121e46e5460ecd138d6f507d30b963ded05de4b7c5cf86fe354a03a711ba2"}, "downloads": -1, "filename": "panifex-0.5.tar.gz", "has_sig": false, "md5_digest": "9c52459ad7f9fa8593a2b620e367e1db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15389, "upload_time": "2020-02-03T11:48:05", "upload_time_iso_8601": "2020-02-03T11:48:05.324307Z", "url": "https://files.pythonhosted.org/packages/1b/71/0a16fba4f8846b6f1029dc6dd8474065f9f44f0df04b7564bcafc6b8b098/panifex-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "7fb34793deb08f224ee4a9c36439c965", "sha256": "eb1313a3af08a12af8760d47f5580d3825d6780e2e967a892041c2ab7161c9b5"}, "downloads": -1, "filename": "panifex-0.6.tar.gz", "has_sig": false, "md5_digest": "7fb34793deb08f224ee4a9c36439c965", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15525, "upload_time": "2020-02-03T22:30:22", "upload_time_iso_8601": "2020-02-03T22:30:22.175842Z", "url": "https://files.pythonhosted.org/packages/b0/5e/5cb3579b41d0cfe6a3e37342af3fdb66eba3d30df04b3b71dee23de38b50/panifex-0.6.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "f82ecd38ae8b874d97c9bd9dedd78fd8", "sha256": "23fe1b467590a2b178cfd2cd2ed00e2e66b689de1677f8c033f0d179e7d6618f"}, "downloads": -1, "filename": "panifex-0.6.1.tar.gz", "has_sig": false, "md5_digest": "f82ecd38ae8b874d97c9bd9dedd78fd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15515, "upload_time": "2020-02-06T09:18:48", "upload_time_iso_8601": "2020-02-06T09:18:48.104369Z", "url": "https://files.pythonhosted.org/packages/98/a5/44d7eac80dd812646d5490f12ed86dd94b308bb59c9bf6e7142ee5d49563/panifex-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "387e77c7d0ceca85c0b8e6e2fc51f434", "sha256": "1ee80ee5d1cceacd60bf14a336a2b957638ab1ac91c50d2aca33a8dd37a4417b"}, "downloads": -1, "filename": "panifex-0.6.2.tar.gz", "has_sig": false, "md5_digest": "387e77c7d0ceca85c0b8e6e2fc51f434", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15515, "upload_time": "2020-02-22T19:14:09", "upload_time_iso_8601": "2020-02-22T19:14:09.524746Z", "url": "https://files.pythonhosted.org/packages/f9/79/b31dca4048aaa00b8416cedb00c4e386ed939e3ad9e3c3b8aee8f8cfad7e/panifex-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "10836c06c69e4f225ade18b524144fe2", "sha256": "d0408064698fa38c4d99f385ef6855c77d2224778041ea4b457953ebd1fc2562"}, "downloads": -1, "filename": "panifex-0.6.3.tar.gz", "has_sig": false, "md5_digest": "10836c06c69e4f225ade18b524144fe2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15508, "upload_time": "2020-02-22T19:28:11", "upload_time_iso_8601": "2020-02-22T19:28:11.654351Z", "url": "https://files.pythonhosted.org/packages/d1/80/eb59e7748b904e62248f1bff10fcb5ef94cb446331a75b95153937e43708/panifex-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "2b54124b3769d3169e306df53dc6344d", "sha256": "d39faebb42c720df60f3a71661433b227fc0006a91c9791d7f1cd68b8b1c503f"}, "downloads": -1, "filename": "panifex-0.6.4.tar.gz", "has_sig": false, "md5_digest": "2b54124b3769d3169e306df53dc6344d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15550, "upload_time": "2020-02-24T00:52:51", "upload_time_iso_8601": "2020-02-24T00:52:51.439625Z", "url": "https://files.pythonhosted.org/packages/ff/55/7e15d13aedb83a29c14ee1e0ef6780d6957d35638964ba9ec91d4b7a3c1a/panifex-0.6.4.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "afe9f66193b93322a3ff6e19cd1a5034", "sha256": "c3c8a55318815ee326077d1bd1649e22e5f3a48ede1046761e29bbf865eedffc"}, "downloads": -1, "filename": "panifex-0.7.0.tar.gz", "has_sig": false, "md5_digest": "afe9f66193b93322a3ff6e19cd1a5034", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15549, "upload_time": "2020-03-25T03:08:27", "upload_time_iso_8601": "2020-03-25T03:08:27.030195Z", "url": "https://files.pythonhosted.org/packages/8d/de/b47ffc05b582c650b579eb58bdd70cdbb1cc2ca6eb2b9dcd24a0220bd35e/panifex-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "29f612bf7ad0f06a33ae3d28024b0295", "sha256": "1e1a85dd540f151d632ad0b697365a7eb704dd0ab13590e7840e22129353f824"}, "downloads": -1, "filename": "panifex-0.7.1.tar.gz", "has_sig": false, "md5_digest": "29f612bf7ad0f06a33ae3d28024b0295", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15547, "upload_time": "2020-03-25T06:04:17", "upload_time_iso_8601": "2020-03-25T06:04:17.560988Z", "url": "https://files.pythonhosted.org/packages/71/06/1b77ef1882a5cf057e51301cd23a27d0097db474da7dd7524e4fc0a5b574/panifex-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "0dadadfda4716a24846e5b51849d5e48", "sha256": "e8c4f3ced7637f219fc1a685f06dcedca15b284610eed9bdc1ab53c387d5239b"}, "downloads": -1, "filename": "panifex-0.7.2.tar.gz", "has_sig": false, "md5_digest": "0dadadfda4716a24846e5b51849d5e48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14055, "upload_time": "2020-04-28T08:09:52", "upload_time_iso_8601": "2020-04-28T08:09:52.381686Z", "url": "https://files.pythonhosted.org/packages/fb/93/007f9b14a0d71230e5b620a1b2f57dfed2e65c2aeae31939fa96fd374ec8/panifex-0.7.2.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "d72eb14c51712182767c3e28cadfb06f", "sha256": "3b4a149e061b56596348f928bb94324b45dd72f2d1fd6d2f992e157d49d3f1c9"}, "downloads": -1, "filename": "panifex-0.7.3.tar.gz", "has_sig": false, "md5_digest": "d72eb14c51712182767c3e28cadfb06f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14076, "upload_time": "2020-05-02T08:19:09", "upload_time_iso_8601": "2020-05-02T08:19:09.920305Z", "url": "https://files.pythonhosted.org/packages/c6/cb/70ff32db122a6977833b84bcb2622b49fe74a68bd262a26b480e649f6205/panifex-0.7.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d72eb14c51712182767c3e28cadfb06f", "sha256": "3b4a149e061b56596348f928bb94324b45dd72f2d1fd6d2f992e157d49d3f1c9"}, "downloads": -1, "filename": "panifex-0.7.3.tar.gz", "has_sig": false, "md5_digest": "d72eb14c51712182767c3e28cadfb06f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14076, "upload_time": "2020-05-02T08:19:09", "upload_time_iso_8601": "2020-05-02T08:19:09.920305Z", "url": "https://files.pythonhosted.org/packages/c6/cb/70ff32db122a6977833b84bcb2622b49fe74a68bd262a26b480e649f6205/panifex-0.7.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:17 2020"}