{"info": {"author": "Janus Friis Nielsen", "author_email": "jfn@sepior.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: Other/Proprietary License", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Build Tools"], "description": "Pipeline CLI\n============\n\nCommand-line interface to the Sepior Pipeline.\n\nRequirements\n------------\n\nPython 3.5\n\nInstall using pyenv or pyvenv\n\nInstallation\n------------\n\n.. code-block:: bash\n\n    $ pip install pipeline_cli\n\n\nUsage\n-----\nThe tool will show a description of usage when given the \n`--help` option:\n\n.. code-block:: bash\n\n    $ pipeline --help\n\n    usage: pipeline [-h] [--version] [--host HOST_NAME] {start,enqueue} ...\n\n    The pipeline utility\n\n    positional arguments:\n      {start,enqueue}   sub-commands\n        start           start help\n        enqueue         enqueue downstream dependencies help\n\n    optional arguments:\n      -h, --help        show this help message and exit\n      --version, -v     show programs version number and exit\n      --host HOST_NAME  specify pipeline server host. Default is\n                        https://pipeline.sepior.net```\n\n\nThe tool is able to:\n1. start a pipeline\n2. enqueue downstream pipelines\n\nStarting a pipeline\n~~~~~~~~~~~~~~~~~~~\nWe assume you already have a pipeline file. If the pipeline file\nis in the current directory then simply run\n\n.. code-block:: bash\n\n    $ pipeline start <version>\n\nSee `pipeline start --help` for more advanced usecases.\n\nEnqueue downstream pipelines\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nThis command is relevant if the pipeline you have is building inside\nthe pipeline or if you manually want to (re)start downstream pipelines.\n\nSee `pipeline enqueue --help` for parameters.\n\n\nBuilding the tool\n-----------------\nMake sure you have a Python 3.5 environment with the requirements. \n\nE.g. use pyenv:\n\n.. code-block:: bash\n\n    $ pyenv virtualenv 3.5.0 pipeline-cli-venv\n    $ pyenv activate pipeline-cli-venv\n\nMake sure pip is up-to-date:\n\n.. code-block:: bash\n\n    $ pip install --upgrade pip\n\nInstall requirements:\n\n.. code-block:: bash\n\n    $ pip install --upgrade -r requirements.txt\n\nBuild the wheel:\n\n.. code-block:: bash\n\n    $ make\n\nDevelopment\n~~~~~~~~~~~\n\nUse the following command to install the package in the local \nenvironment during development.\n\n.. code-block:: bash\n\n    $ pip install -e .\n\nThis allows you to change the code and test the pipeline cli\ndirectly.\n\n\nContributing\n------------\n\nWhen contributing changes remember to update the `CHANGELOG.md`.\n\n\nLicense\n-------\nProprietary. Copyright 2016 Sepior ApS.\n\n\nReleasing\n---------\n\nDo the following to release a new version:\n\n1. Commit changes\n2. Push changes\n3. Merge with master\n4. Update local master\n5. Find the next release version, e.g. 6.6.6\n6. Create new branch with name core/release-6.6.6\n7. Bump version in __about__.py\n8. Commit\n9. Merge with master\n10. Update local master \n11. Run `./release.sh 6.6.6`\n\nUpload to Pypi\n--------------\nFirst, perform a test upload to verify everything is nice and dandy.\nThen perform the real upload.\n\nBuild the code\n\n.. code-block:: bash\n\n    $ make\n\n\nThen define the following environment variables:\n\n.. code-block:: bash\n\n    $ export PYPI_TEST_PASSWORD=\"\"\n    $ export PYPI_PASSWORD=\"\"\n\n\nTest upload to pypi\n~~~~~~~~~~~~~~~~~~~\n\nYou may need to register on the Pypi test server. This can be done here:\n\n.. code-block:: bash\n\n    $ https://testpypi.python.org/pypi\n\n\nRegister:\n\n.. code-block:: bash\n\n    $ twine register -p ${PYPI_TEST_PASSWORD} -r pypitest dist/pipeline_cli-6.6.6-py3-none-any.whl\n\nUpload\n\n.. code-block:: bash\n\n    $ make testpypi_upload\n\nGoto:\n\n.. code-block:: bash\n\n    $ https://testpypi.python.org/pypi/pipeline-cli/6.6.6\n\nA check that everything looks nice.\n\nYou can check the HTML by running:\n\n .. code-block:: bash\n\n    $ python setup.py --long-description | rst2html.py --no-raw > output.html \n\n\nTest if it installs (do it in a different environment):\n\n.. code-block:: bash\n\n    $ pip install -i https://testpypi.python.org/pypi pipeline-cli\n\nReal upload to Pypi\n~~~~~~~~~~~~~~~~~~~\n\nUpload\n\n.. code-block:: bash\n\n    $ make pypi_upload\n\nGoto:\n\n.. code-block:: bash\n\n    $ https://pypi.python.org/pypi/pipeline-cli/6.6.6\n\nAnd check that every things looks nice.\n\n\n\n\n\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Sepior/pipeline-cli", "keywords": "Sepior pipeline", "license": "Proprietary", "maintainer": "", "maintainer_email": "", "name": "pipeline-cli", "package_url": "https://pypi.org/project/pipeline-cli/", "platform": "", "project_url": "https://pypi.org/project/pipeline-cli/", "project_urls": {"Homepage": "https://github.com/Sepior/pipeline-cli"}, "release_url": "https://pypi.org/project/pipeline-cli/1.0.15/", "requires_dist": ["requests"], "requires_python": "", "summary": "Command-line interface to Sepior pipeline server.", "version": "1.0.15", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Command-line interface to the Sepior Pipeline.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Python 3.5</p>\n<p>Install using pyenv or pyvenv</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install pipeline_cli\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The tool will show a description of usage when given the\n<cite>\u2013help</cite> option:</p>\n<pre>$ pipeline --help\n\nusage: pipeline <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--version<span class=\"o\">]</span> <span class=\"o\">[</span>--host HOST_NAME<span class=\"o\">]</span> <span class=\"o\">{</span>start,enqueue<span class=\"o\">}</span> ...\n\nThe pipeline utility\n\npositional arguments:\n  <span class=\"o\">{</span>start,enqueue<span class=\"o\">}</span>   sub-commands\n    start           start <span class=\"nb\">help</span>\n    enqueue         enqueue downstream dependencies <span class=\"nb\">help</span>\n\noptional arguments:\n  -h, --help        show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --version, -v     show programs version number and <span class=\"nb\">exit</span>\n  --host HOST_NAME  specify pipeline server host. Default is\n                    https://pipeline.sepior.net<span class=\"sb\">```</span>\n</pre>\n<p>The tool is able to:\n1. start a pipeline\n2. enqueue downstream pipelines</p>\n<div id=\"starting-a-pipeline\">\n<h3>Starting a pipeline</h3>\n<p>We assume you already have a pipeline file. If the pipeline file\nis in the current directory then simply run</p>\n<pre>$ pipeline start &lt;version&gt;\n</pre>\n<p>See <cite>pipeline start \u2013help</cite> for more advanced usecases.</p>\n</div>\n<div id=\"enqueue-downstream-pipelines\">\n<h3>Enqueue downstream pipelines</h3>\n<p>This command is relevant if the pipeline you have is building inside\nthe pipeline or if you manually want to (re)start downstream pipelines.</p>\n<p>See <cite>pipeline enqueue \u2013help</cite> for parameters.</p>\n</div>\n</div>\n<div id=\"building-the-tool\">\n<h2>Building the tool</h2>\n<p>Make sure you have a Python 3.5 environment with the requirements.</p>\n<p>E.g. use pyenv:</p>\n<pre>$ pyenv virtualenv <span class=\"m\">3</span>.5.0 pipeline-cli-venv\n$ pyenv activate pipeline-cli-venv\n</pre>\n<p>Make sure pip is up-to-date:</p>\n<pre>$ pip install --upgrade pip\n</pre>\n<p>Install requirements:</p>\n<pre>$ pip install --upgrade -r requirements.txt\n</pre>\n<p>Build the wheel:</p>\n<pre>$ make\n</pre>\n<div id=\"development\">\n<h3>Development</h3>\n<p>Use the following command to install the package in the local\nenvironment during development.</p>\n<pre>$ pip install -e .\n</pre>\n<p>This allows you to change the code and test the pipeline cli\ndirectly.</p>\n</div>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>When contributing changes remember to update the <cite>CHANGELOG.md</cite>.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Proprietary. Copyright 2016 Sepior ApS.</p>\n</div>\n<div id=\"releasing\">\n<h2>Releasing</h2>\n<p>Do the following to release a new version:</p>\n<ol>\n<li>Commit changes</li>\n<li>Push changes</li>\n<li>Merge with master</li>\n<li>Update local master</li>\n<li>Find the next release version, e.g. 6.6.6</li>\n<li>Create new branch with name core/release-6.6.6</li>\n<li>Bump version in __about__.py</li>\n<li>Commit</li>\n<li>Merge with master</li>\n<li>Update local master</li>\n<li>Run <cite>./release.sh 6.6.6</cite></li>\n</ol>\n</div>\n<div id=\"upload-to-pypi\">\n<h2>Upload to Pypi</h2>\n<p>First, perform a test upload to verify everything is nice and dandy.\nThen perform the real upload.</p>\n<p>Build the code</p>\n<pre>$ make\n</pre>\n<p>Then define the following environment variables:</p>\n<pre>$ <span class=\"nb\">export</span> <span class=\"nv\">PYPI_TEST_PASSWORD</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n$ <span class=\"nb\">export</span> <span class=\"nv\">PYPI_PASSWORD</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n</pre>\n<div id=\"test-upload-to-pypi\">\n<h3>Test upload to pypi</h3>\n<p>You may need to register on the Pypi test server. This can be done here:</p>\n<pre>$ https://testpypi.python.org/pypi\n</pre>\n<p>Register:</p>\n<pre>$ twine register -p <span class=\"si\">${</span><span class=\"nv\">PYPI_TEST_PASSWORD</span><span class=\"si\">}</span> -r pypitest dist/pipeline_cli-6.6.6-py3-none-any.whl\n</pre>\n<p>Upload</p>\n<pre>$ make testpypi_upload\n</pre>\n<p>Goto:</p>\n<pre>$ https://testpypi.python.org/pypi/pipeline-cli/6.6.6\n</pre>\n<p>A check that everything looks nice.</p>\n<p>You can check the HTML by running:</p>\n<blockquote>\n<pre>$ python setup.py --long-description <span class=\"p\">|</span> rst2html.py --no-raw &gt; output.html\n</pre>\n</blockquote>\n<p>Test if it installs (do it in a different environment):</p>\n<pre>$ pip install -i https://testpypi.python.org/pypi pipeline-cli\n</pre>\n</div>\n<div id=\"real-upload-to-pypi\">\n<h3>Real upload to Pypi</h3>\n<p>Upload</p>\n<pre>$ make pypi_upload\n</pre>\n<p>Goto:</p>\n<pre>$ https://pypi.python.org/pypi/pipeline-cli/6.6.6\n</pre>\n<p>And check that every things looks nice.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2814531, "releases": {"1.0.10": [{"comment_text": "", "digests": {"md5": "2b1b725034b02207252b2dee53d37ad2", "sha256": "5ec8436ceaab1e6c0896877301f31ddc0f4d0aa7c896b0aa2e59e2acc5d1fc64"}, "downloads": -1, "filename": "pipeline_cli-1.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "2b1b725034b02207252b2dee53d37ad2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7789, "upload_time": "2016-11-28T12:38:35", "upload_time_iso_8601": "2016-11-28T12:38:35.249080Z", "url": "https://files.pythonhosted.org/packages/21/22/0449cb998ced28a9f3b9ee101ab659d61b94e8e9db277e120a1f668c36ce/pipeline_cli-1.0.10-py3-none-any.whl", "yanked": false}], "1.0.11": [{"comment_text": "", "digests": {"md5": "2f09167b7e66ff90b90a8e9a0485355a", "sha256": "5a995a48d562b671ff0a6e28289b6214ac9c0670fd3b677c115494a593bea851"}, "downloads": -1, "filename": "pipeline_cli-1.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "2f09167b7e66ff90b90a8e9a0485355a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7795, "upload_time": "2016-12-06T10:14:58", "upload_time_iso_8601": "2016-12-06T10:14:58.091273Z", "url": "https://files.pythonhosted.org/packages/77/36/603ef6a4d4e28f79d535529e559d49aea2109a03f05333fdcca81a77d4aa/pipeline_cli-1.0.11-py3-none-any.whl", "yanked": false}], "1.0.12": [{"comment_text": "", "digests": {"md5": "9511d6892de49788e15694e3ec910e3e", "sha256": "6de509d08f41953d4f6e3f0752f8714a13dbf58f477dc3f44f9ef8bd63ee558d"}, "downloads": -1, "filename": "pipeline_cli-1.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "9511d6892de49788e15694e3ec910e3e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7923, "upload_time": "2017-04-19T10:09:18", "upload_time_iso_8601": "2017-04-19T10:09:18.964017Z", "url": "https://files.pythonhosted.org/packages/1c/82/b0abf1a46f607a84b9bf5bff70b290f615ef806ad5743666bd84b4f8944c/pipeline_cli-1.0.12-py3-none-any.whl", "yanked": false}], "1.0.13": [{"comment_text": "", "digests": {"md5": "16542d83d4a6d97d615c0158dc901f1a", "sha256": "994d0ba5498b34245d4cb9786ade13d84fae62744c2629c5a1ca07162b8994b7"}, "downloads": -1, "filename": "pipeline_cli-1.0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "16542d83d4a6d97d615c0158dc901f1a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7957, "upload_time": "2017-04-19T11:00:28", "upload_time_iso_8601": "2017-04-19T11:00:28.782647Z", "url": "https://files.pythonhosted.org/packages/c6/73/dd94c3a8d8dae8d622bc98de7cd79fcc069dca475a64e4573b81014d8772/pipeline_cli-1.0.13-py3-none-any.whl", "yanked": false}], "1.0.14": [{"comment_text": "", "digests": {"md5": "0c9fb4f238772891c295a4bb8753cea9", "sha256": "5159debbb0bd30a91b3e9688e3735ee8ebc06fd528b610ed3dc85b62939ca015"}, "downloads": -1, "filename": "pipeline_cli-1.0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "0c9fb4f238772891c295a4bb8753cea9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7774, "upload_time": "2017-04-19T11:21:30", "upload_time_iso_8601": "2017-04-19T11:21:30.621237Z", "url": "https://files.pythonhosted.org/packages/1b/57/6ed9efa60a8e558108d80856e16624ac1d746825859f4bc9d2eb761659b8/pipeline_cli-1.0.14-py3-none-any.whl", "yanked": false}], "1.0.15": [{"comment_text": "", "digests": {"md5": "8a7098ce950d7996472a96c67faff262", "sha256": "c01a379672e98fb00b5074fc89e017b2cc7b85ab7149cd4404fa9307b3d18cf0"}, "downloads": -1, "filename": "pipeline_cli-1.0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "8a7098ce950d7996472a96c67faff262", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7768, "upload_time": "2017-04-19T16:28:35", "upload_time_iso_8601": "2017-04-19T16:28:35.490658Z", "url": "https://files.pythonhosted.org/packages/c4/37/e273afc3955033045f437a9e95c5230290a8f1a5d33185549224cd84c8e2/pipeline_cli-1.0.15-py3-none-any.whl", "yanked": false}], "1.0.8": []}, "urls": [{"comment_text": "", "digests": {"md5": "8a7098ce950d7996472a96c67faff262", "sha256": "c01a379672e98fb00b5074fc89e017b2cc7b85ab7149cd4404fa9307b3d18cf0"}, "downloads": -1, "filename": "pipeline_cli-1.0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "8a7098ce950d7996472a96c67faff262", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7768, "upload_time": "2017-04-19T16:28:35", "upload_time_iso_8601": "2017-04-19T16:28:35.490658Z", "url": "https://files.pythonhosted.org/packages/c4/37/e273afc3955033045f437a9e95c5230290a8f1a5d33185549224cd84c8e2/pipeline_cli-1.0.15-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:54:20 2020"}