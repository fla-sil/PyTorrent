{"info": {"author": "Ginger Payments", "author_email": "dev@gingerpayments.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "========\nlibmt94x\n========\n\n\n.. image:: https://api.travis-ci.org/gingerpayments/python-libmt94x.png?branch=develop\n    :target: https://travis-ci.org/gingerpayments/python-libmt94x\n\n.. image:: https://scrutinizer-ci.com/g/gingerpayments/python-libmt94x/badges/coverage.png?b=develop\n    :target: https://scrutinizer-ci.com/g/gingerpayments/python-libmt94x/\n\n\nMT940/MT942 is a text based data file format used in bank account statements\n(commonly used by banks in the Netherlands). A bank account statement contains\nyour account balance as well as a listing of all the transactions between a\ngiven start date and end date.\n\nThis library provides an API to define and serialize MT940/MT942 documents in\nPython. It does not provide a parser.\n\n\n\n\nInstallation\n============\n\nInstall using pip::\n\n    $ pip install python-libmt94x\n\n\n\nUsage\n=====\n\n\nCreating MT940 documents\n------------------------\n\n``libmt94x`` implements two ING-defined dialects of MT940:\n\n* Mijn ING Zakelijk (dubbed ``ming``),\n\n* Inside Business Payments (dubbed ``ibp``).\n\nNo matter which dialect your are using you first need to construct an\n``MT940Document`` and then use the appropriate method to write it out\nto the target dialect:\n\n.. code-block:: python\n\n    from libmt94x.document import Mt940Document\n    from libmt94x.fields import AccountIdentification\n    # ...snip...\n    from libmt94x.fields import TransactionReferenceNumber\n    from libmt94x.serializer import Mt94xSerializer\n    from libmt94x.writer import Mt94xWriter\n\n\n    serializer = Mt94xSerializer()\n    writer = Mt94xWriter(serializer)\n\n    doc = Mt940Document(\n        transaction_reference_number=TransactionReferenceNumber('P140220000000001'),\n        account_identification=AccountIdentification('NL69INGB0123456789', 'EUR'),\n        # ...snip...\n    )\n\n    # to write using the ``ming`` dialect\n    bytestring = writer.write_document_ming(doc)\n\n    # to write using the ``ibp`` dialect\n    bytestring = writer.write_document_ibp(doc)\n\n\nHow to find more info\n---------------------\n\n* For more details on the API and compatibility issues see docs/design.rst.\n\n* For example MT940 documents see tests/examples/.\n\n* For fully fledged code examples see the tests in\n  tests/test_writer_doc_XXX.py.\n\n\n\n\nDeveloping on libmt94x\n======================\n\n\nRunning tests\n-------------\n\nIt is recommended that you use a virtualenv when working on libmt94x. To run\ntests you will first need to install the development dependencies, which\ninclude ``tox``::\n\n    $ pip install -r dev-requirements.txt\n\nNow run the tests using tox (this will invoke py.test inside the tox-managed\nvirtual test environment)::\n\n    $ tox\n\nThis will run tests, collect test coverage and run the style checker\n``flake8``. For a more lightweight test run you can run pytest directly::\n\n    $ py.test\n\n\nContributing\n------------\n\nPlease see CONTRIBUTING.rst for guidelines on how to contribute to libmt94x.\n\nChangelog\n=========\n\n\n0.3.4 (2016-07-11)\n------------------\n\n- Updating package metadata (no code changes).\n  [numerodix]\n\n\n0.3.3 (2016-07-11)\n------------------\n\n- First release to PyPI.\n  [numerodix]\n\n\n0.3.2 (2016-06-27)\n------------------\n\n- Add README.txt and HISTORY.rst to setup.py long_description for display on\n  ginger devpi.\n  [numerodix]\n\n\n0.3.1 (2016-05-13)\n------------------\n\n- Use standard packaging and testing conventions in this package.\n  [numerodix]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gingerpayments/python-libmt94x", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "python-libmt94x", "package_url": "https://pypi.org/project/python-libmt94x/", "platform": "OS Independent", "project_url": "https://pypi.org/project/python-libmt94x/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/gingerpayments/python-libmt94x"}, "release_url": "https://pypi.org/project/python-libmt94x/0.3.4/", "requires_dist": null, "requires_python": null, "summary": "This library generates bank statements in MT940/MT942 format", "version": "0.3.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/gingerpayments/python-libmt94x\" rel=\"nofollow\"><img alt=\"https://api.travis-ci.org/gingerpayments/python-libmt94x.png?branch=develop\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/57476cb473186ca12ff0084e28a69fecaa3c0336/68747470733a2f2f6170692e7472617669732d63692e6f72672f67696e6765727061796d656e74732f707974686f6e2d6c69626d743934782e706e673f6272616e63683d646576656c6f70\"></a>\n<a href=\"https://scrutinizer-ci.com/g/gingerpayments/python-libmt94x/\" rel=\"nofollow\"><img alt=\"https://scrutinizer-ci.com/g/gingerpayments/python-libmt94x/badges/coverage.png?b=develop\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4740f865ae95fec15bfd157b7850af4e5772f187/68747470733a2f2f7363727574696e697a65722d63692e636f6d2f672f67696e6765727061796d656e74732f707974686f6e2d6c69626d743934782f6261646765732f636f7665726167652e706e673f623d646576656c6f70\"></a>\n<p>MT940/MT942 is a text based data file format used in bank account statements\n(commonly used by banks in the Netherlands). A bank account statement contains\nyour account balance as well as a listing of all the transactions between a\ngiven start date and end date.</p>\n<p>This library provides an API to define and serialize MT940/MT942 documents in\nPython. It does not provide a parser.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install using pip:</p>\n<pre>$ pip install python-libmt94x\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"creating-mt940-documents\">\n<h3>Creating MT940 documents</h3>\n<p><tt>libmt94x</tt> implements two ING-defined dialects of MT940:</p>\n<ul>\n<li>Mijn ING Zakelijk (dubbed <tt>ming</tt>),</li>\n<li>Inside Business Payments (dubbed <tt>ibp</tt>).</li>\n</ul>\n<p>No matter which dialect your are using you first need to construct an\n<tt>MT940Document</tt> and then use the appropriate method to write it out\nto the target dialect:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">libmt94x.document</span> <span class=\"kn\">import</span> <span class=\"n\">Mt940Document</span>\n<span class=\"kn\">from</span> <span class=\"nn\">libmt94x.fields</span> <span class=\"kn\">import</span> <span class=\"n\">AccountIdentification</span>\n<span class=\"c1\"># ...snip...</span>\n<span class=\"kn\">from</span> <span class=\"nn\">libmt94x.fields</span> <span class=\"kn\">import</span> <span class=\"n\">TransactionReferenceNumber</span>\n<span class=\"kn\">from</span> <span class=\"nn\">libmt94x.serializer</span> <span class=\"kn\">import</span> <span class=\"n\">Mt94xSerializer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">libmt94x.writer</span> <span class=\"kn\">import</span> <span class=\"n\">Mt94xWriter</span>\n\n\n<span class=\"n\">serializer</span> <span class=\"o\">=</span> <span class=\"n\">Mt94xSerializer</span><span class=\"p\">()</span>\n<span class=\"n\">writer</span> <span class=\"o\">=</span> <span class=\"n\">Mt94xWriter</span><span class=\"p\">(</span><span class=\"n\">serializer</span><span class=\"p\">)</span>\n\n<span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">Mt940Document</span><span class=\"p\">(</span>\n    <span class=\"n\">transaction_reference_number</span><span class=\"o\">=</span><span class=\"n\">TransactionReferenceNumber</span><span class=\"p\">(</span><span class=\"s1\">'P140220000000001'</span><span class=\"p\">),</span>\n    <span class=\"n\">account_identification</span><span class=\"o\">=</span><span class=\"n\">AccountIdentification</span><span class=\"p\">(</span><span class=\"s1\">'NL69INGB0123456789'</span><span class=\"p\">,</span> <span class=\"s1\">'EUR'</span><span class=\"p\">),</span>\n    <span class=\"c1\"># ...snip...</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># to write using the ``ming`` dialect</span>\n<span class=\"n\">bytestring</span> <span class=\"o\">=</span> <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">write_document_ming</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># to write using the ``ibp`` dialect</span>\n<span class=\"n\">bytestring</span> <span class=\"o\">=</span> <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">write_document_ibp</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"how-to-find-more-info\">\n<h3>How to find more info</h3>\n<ul>\n<li>For more details on the API and compatibility issues see docs/design.rst.</li>\n<li>For example MT940 documents see tests/examples/.</li>\n<li>For fully fledged code examples see the tests in\ntests/test_writer_doc_XXX.py.</li>\n</ul>\n</div>\n</div>\n<div id=\"developing-on-libmt94x\">\n<h2>Developing on libmt94x</h2>\n<div id=\"running-tests\">\n<h3>Running tests</h3>\n<p>It is recommended that you use a virtualenv when working on libmt94x. To run\ntests you will first need to install the development dependencies, which\ninclude <tt>tox</tt>:</p>\n<pre>$ pip install -r dev-requirements.txt\n</pre>\n<p>Now run the tests using tox (this will invoke py.test inside the tox-managed\nvirtual test environment):</p>\n<pre>$ tox\n</pre>\n<p>This will run tests, collect test coverage and run the style checker\n<tt>flake8</tt>. For a more lightweight test run you can run pytest directly:</p>\n<pre>$ py.test\n</pre>\n</div>\n<div id=\"contributing\">\n<h3>Contributing</h3>\n<p>Please see CONTRIBUTING.rst for guidelines on how to contribute to libmt94x.</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.3.4 (2016-07-11)</h3>\n<ul>\n<li>Updating package metadata (no code changes).\n[numerodix]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.3.3 (2016-07-11)</h3>\n<ul>\n<li>First release to PyPI.\n[numerodix]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.3.2 (2016-06-27)</h3>\n<ul>\n<li>Add README.txt and HISTORY.rst to setup.py long_description for display on\nginger devpi.\n[numerodix]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.3.1 (2016-05-13)</h3>\n<ul>\n<li>Use standard packaging and testing conventions in this package.\n[numerodix]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2213964, "releases": {"0.3.3": [{"comment_text": "", "digests": {"md5": "8206a5eb81de4e9427e6457074cdf8e1", "sha256": "09eeb0e3b8cb071b7ee2a79fe779ff6d6c2b1d213c18f1acef8a5a6448e24411"}, "downloads": -1, "filename": "python-libmt94x-0.3.3.tar.gz", "has_sig": false, "md5_digest": "8206a5eb81de4e9427e6457074cdf8e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23182, "upload_time": "2016-07-11T09:42:34", "upload_time_iso_8601": "2016-07-11T09:42:34.348434Z", "url": "https://files.pythonhosted.org/packages/27/60/0f4aa51a42e0cc8623e6bb80abd29fb258994eb12574e12fff897e60219d/python-libmt94x-0.3.3.tar.gz", "yanked": false}], "0.3.3.dev0": [], "0.3.4": [{"comment_text": "", "digests": {"md5": "7da309533067135268f6c1da8607c0a1", "sha256": "396dcb2ba7f53419d45c402ad3255d7cd31a1e67ce995716e0d2a2705c547100"}, "downloads": -1, "filename": "python-libmt94x-0.3.4.tar.gz", "has_sig": false, "md5_digest": "7da309533067135268f6c1da8607c0a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23599, "upload_time": "2016-07-11T10:18:17", "upload_time_iso_8601": "2016-07-11T10:18:17.991410Z", "url": "https://files.pythonhosted.org/packages/f8/97/ff3c0365d93c390b35ae700bf5ce6af3e217c42be482a0d4f103cee5a13f/python-libmt94x-0.3.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7da309533067135268f6c1da8607c0a1", "sha256": "396dcb2ba7f53419d45c402ad3255d7cd31a1e67ce995716e0d2a2705c547100"}, "downloads": -1, "filename": "python-libmt94x-0.3.4.tar.gz", "has_sig": false, "md5_digest": "7da309533067135268f6c1da8607c0a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23599, "upload_time": "2016-07-11T10:18:17", "upload_time_iso_8601": "2016-07-11T10:18:17.991410Z", "url": "https://files.pythonhosted.org/packages/f8/97/ff3c0365d93c390b35ae700bf5ce6af3e217c42be482a0d4f103cee5a13f/python-libmt94x-0.3.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:50 2020"}