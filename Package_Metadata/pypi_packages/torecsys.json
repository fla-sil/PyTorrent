{"info": {"author": "Jasper Li", "author_email": "jasper.li.wy@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "# ToR[e]cSys\n\n--------------------------------------------------------------------------------\n\nToR[e]cSys is a Python package which implementing famous recommendation system \\\nalgorithm in PyTorch, including Click-through-rate prediction, Learning-to-ranking, \\\nand Items Embedding.\n\n- [Installation](#installation)\n- [Implemented Models](#implemented-models)\n- [Documentation](#documentation)\n- [More About ToR[e]cSys](#more-about-torecsys)\n- [Getting Started](#getting-started)\n- [Examples](#examples)\n- [Authors](#authors)\n- [License](#license)\n\n## Installation\n\n### By pip package\n\n```bash\npip install torecsys\n```\n\n### From source\n\n```bash\ngit clone https://github.com/p768lwy3/torecsys.git\npython setup.py build\npython setup.py install\n```\n\n### Build Documentation\n\n```bash\ngit clone https://github.com/p768lwy3/torecsys.git\ncd ./torecsys/doc\n./make html\n```\n\n## Documentation\n\nThe complete documentation for ToR[e]cSys is avaiable via [ReadTheDocs website](https://torecsys.readthedocs.io/en/latest/).  \nThank you for ReadTheDocs!!!\n\n## Implemented Models\n\n| Model Name | Research Paper | Type |\n| ---------- | -------------- | ---- |\n| [Attentional Factorization Machine](torecsys/models/ctr/attentional_factorization_machine.py) | [Jun Xiao et al, 2017. Attentional Factorization Machines: Learning the Weight of Feature Interactions via Attention Networks](https://arxiv.org/abs/1708.04617) | Click Through Rate |\n| [Deep and Cross Network](torecsys/models/ctr/deep_and_cross_network.py) | [Ruoxi Wang et al, 2017. Deep & Cross Network for Ad Click Predictions](https://arxiv.org/abs/1708.05123) | Click Through Rate |\n| [Deep Field-Aware Factorization Machine](torecsys/models/ctr/deep_ffm.py) | [Junlin Zhang et al, 2019. FAT-DeepFFM: Field Attentive Deep Field-aware Factorization Machine](https://arxiv.org/abs/1905.06336) | Click Through Rate |\n| [Deep Factorization Machine](torecsys/models/ctr/deep_fm.py) | [Huifeng Guo et al, 2017. DeepFM: A Factorization-Machine based Neural Network for CTR Prediction](https://arxiv.org/abs/1703.04247) | Click Through Rate |\n| [Deep Matching Correlation Prediction](torecsys/models/ctr/deep_mcp.py) | [Wentao Ouyang et al, 2019. Representation Learning-Assisted Click-Through Rate Prediction](https://arxiv.org/pdf/1906.04365.pdf) | Click Through Rate |\n| [Factorization Machine](torecsys/models/ctr/factorization_machine.py) | [Steffen Rendle, 2010. Factorization Machine](https://www.csie.ntu.edu.tw/~b97053/paper/Rendle2010FM.pdf) | Click Through Rate |\n| [Factorization Machine Support Neural Network](torecsys/models/ctr/factorization_machine_supported_neural_network.py) | [Weinan Zhang et al, 2016. Deep Learning over Multi-field Categorical Data: A Case Study on User Response Prediction](https://arxiv.org/abs/1601.02376) | Click Through Rate |\n| [Field-Aware Factorization Machine](torecsys/models/ctr/field_aware_factorization_machine.py) | [Yuchin Juan et al, 2016. Field-aware Factorization Machines for CTR Prediction](https://www.csie.ntu.edu.tw/~cjlin/papers/ffm.pdf) | Click Through Rate |\n| [Field-Aware Neural Factorization Machine](torecsys/models/ctr/field_aware_neural_factorization_machine.py) | [Li Zhang et al, 2019. Field-aware Neural Factorization Machine for Click-Through Rate Prediction](https://arxiv.org/abs/1902.09096) | Click Through Rate |\n\n## More About ToR[e]cSys\n\n| Component | Description |\n| --------- | ----------- |\n| [**torecsys.data**] | download sample data, build dataloader, and other functions for convenience |\n| [**torecsys.estimators**] | models with embedding, which can be trained with ```.fit(dataloader)``` directly |\n| [**torecsys.functional**] | functions used in recommendation system |\n| [**torecsys.inputs**] | inputs' functions, including embedding, image transformations |\n| [**torecsys.layers**] | layers-level implementation of algorithms |\n| [**torecsys.losses**] | loss functions used in recommendation system |\n| [**torecsys.metrics**] | metrics to evaluate recommendation system |\n| [**torecsys.models**] | whole-architecture of models which can be trained by **torecsys.base.trainer** |\n| [**torecsys.utils**] | little tools used in torecsys |\n\n(!!! To be confirmed)\n\n### torecsys.models\n\n```torecsys.models``` is a part of model excluding embedding part, so you can choose \\\na suitable embedding method for your model with the following codes:\n\n### torecsys.estimators\n\n```torecsys.estimators``` is another type of model to be used directly if the input \\\nfields and features implemented in the papers are suitable for you:\n\n## Getting Started\n\n(!!! To be confirmed)\n\n### Load Sample data\n\nload the movielens dataset, for example:\n\n### Build Dataset and DataLoader with Sample data\n\n### Use Estimators to train a model\n\n### Make prediction with estimators\n\n## Examples\n\n## Authors\n\n- [Jasper Li](https://github.com) - Developer\n\n## License\n\nToR[e]cSys is MIT-style licensed, as found in the LICENSE file.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/p768lwy3/torecsys", "keywords": "recommendationsystem machinelearning research", "license": "", "maintainer": "", "maintainer_email": "", "name": "torecsys", "package_url": "https://pypi.org/project/torecsys/", "platform": "", "project_url": "https://pypi.org/project/torecsys/", "project_urls": {"Homepage": "https://github.com/p768lwy3/torecsys"}, "release_url": "https://pypi.org/project/torecsys/0.0.5/", "requires_dist": null, "requires_python": "", "summary": "Pure PyTorch Recommender System Module", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ToR[e]cSys</h1>\n<hr>\n<p>ToR[e]cSys is a Python package which implementing famous recommendation system <br>\nalgorithm in PyTorch, including Click-through-rate prediction, Learning-to-ranking, <br>\nand Items Embedding.</p>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#implemented-models\" rel=\"nofollow\">Implemented Models</a></li>\n<li><a href=\"#documentation\" rel=\"nofollow\">Documentation</a></li>\n<li><a href=\"#more-about-torecsys\" rel=\"nofollow\">More About ToR[e]cSys</a></li>\n<li><a href=\"#getting-started\" rel=\"nofollow\">Getting Started</a></li>\n<li><a href=\"#examples\" rel=\"nofollow\">Examples</a></li>\n<li><a href=\"#authors\" rel=\"nofollow\">Authors</a></li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a></li>\n</ul>\n<h2>Installation</h2>\n<h3>By pip package</h3>\n<pre>pip install torecsys\n</pre>\n<h3>From source</h3>\n<pre>git clone https://github.com/p768lwy3/torecsys.git\npython setup.py build\npython setup.py install\n</pre>\n<h3>Build Documentation</h3>\n<pre>git clone https://github.com/p768lwy3/torecsys.git\n<span class=\"nb\">cd</span> ./torecsys/doc\n./make html\n</pre>\n<h2>Documentation</h2>\n<p>The complete documentation for ToR[e]cSys is avaiable via <a href=\"https://torecsys.readthedocs.io/en/latest/\" rel=\"nofollow\">ReadTheDocs website</a>.<br>\nThank you for ReadTheDocs!!!</p>\n<h2>Implemented Models</h2>\n<table>\n<thead>\n<tr>\n<th>Model Name</th>\n<th>Research Paper</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"torecsys/models/ctr/attentional_factorization_machine.py\" rel=\"nofollow\">Attentional Factorization Machine</a></td>\n<td><a href=\"https://arxiv.org/abs/1708.04617\" rel=\"nofollow\">Jun Xiao et al, 2017. Attentional Factorization Machines: Learning the Weight of Feature Interactions via Attention Networks</a></td>\n<td>Click Through Rate</td>\n</tr>\n<tr>\n<td><a href=\"torecsys/models/ctr/deep_and_cross_network.py\" rel=\"nofollow\">Deep and Cross Network</a></td>\n<td><a href=\"https://arxiv.org/abs/1708.05123\" rel=\"nofollow\">Ruoxi Wang et al, 2017. Deep &amp; Cross Network for Ad Click Predictions</a></td>\n<td>Click Through Rate</td>\n</tr>\n<tr>\n<td><a href=\"torecsys/models/ctr/deep_ffm.py\" rel=\"nofollow\">Deep Field-Aware Factorization Machine</a></td>\n<td><a href=\"https://arxiv.org/abs/1905.06336\" rel=\"nofollow\">Junlin Zhang et al, 2019. FAT-DeepFFM: Field Attentive Deep Field-aware Factorization Machine</a></td>\n<td>Click Through Rate</td>\n</tr>\n<tr>\n<td><a href=\"torecsys/models/ctr/deep_fm.py\" rel=\"nofollow\">Deep Factorization Machine</a></td>\n<td><a href=\"https://arxiv.org/abs/1703.04247\" rel=\"nofollow\">Huifeng Guo et al, 2017. DeepFM: A Factorization-Machine based Neural Network for CTR Prediction</a></td>\n<td>Click Through Rate</td>\n</tr>\n<tr>\n<td><a href=\"torecsys/models/ctr/deep_mcp.py\" rel=\"nofollow\">Deep Matching Correlation Prediction</a></td>\n<td><a href=\"https://arxiv.org/pdf/1906.04365.pdf\" rel=\"nofollow\">Wentao Ouyang et al, 2019. Representation Learning-Assisted Click-Through Rate Prediction</a></td>\n<td>Click Through Rate</td>\n</tr>\n<tr>\n<td><a href=\"torecsys/models/ctr/factorization_machine.py\" rel=\"nofollow\">Factorization Machine</a></td>\n<td><a href=\"https://www.csie.ntu.edu.tw/%7Eb97053/paper/Rendle2010FM.pdf\" rel=\"nofollow\">Steffen Rendle, 2010. Factorization Machine</a></td>\n<td>Click Through Rate</td>\n</tr>\n<tr>\n<td><a href=\"torecsys/models/ctr/factorization_machine_supported_neural_network.py\" rel=\"nofollow\">Factorization Machine Support Neural Network</a></td>\n<td><a href=\"https://arxiv.org/abs/1601.02376\" rel=\"nofollow\">Weinan Zhang et al, 2016. Deep Learning over Multi-field Categorical Data: A Case Study on User Response Prediction</a></td>\n<td>Click Through Rate</td>\n</tr>\n<tr>\n<td><a href=\"torecsys/models/ctr/field_aware_factorization_machine.py\" rel=\"nofollow\">Field-Aware Factorization Machine</a></td>\n<td><a href=\"https://www.csie.ntu.edu.tw/%7Ecjlin/papers/ffm.pdf\" rel=\"nofollow\">Yuchin Juan et al, 2016. Field-aware Factorization Machines for CTR Prediction</a></td>\n<td>Click Through Rate</td>\n</tr>\n<tr>\n<td><a href=\"torecsys/models/ctr/field_aware_neural_factorization_machine.py\" rel=\"nofollow\">Field-Aware Neural Factorization Machine</a></td>\n<td><a href=\"https://arxiv.org/abs/1902.09096\" rel=\"nofollow\">Li Zhang et al, 2019. Field-aware Neural Factorization Machine for Click-Through Rate Prediction</a></td>\n<td>Click Through Rate</td>\n</tr></tbody></table>\n<h2>More About ToR[e]cSys</h2>\n<table>\n<thead>\n<tr>\n<th>Component</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[<strong>torecsys.data</strong>]</td>\n<td>download sample data, build dataloader, and other functions for convenience</td>\n</tr>\n<tr>\n<td>[<strong>torecsys.estimators</strong>]</td>\n<td>models with embedding, which can be trained with <code>.fit(dataloader)</code> directly</td>\n</tr>\n<tr>\n<td>[<strong>torecsys.functional</strong>]</td>\n<td>functions used in recommendation system</td>\n</tr>\n<tr>\n<td>[<strong>torecsys.inputs</strong>]</td>\n<td>inputs' functions, including embedding, image transformations</td>\n</tr>\n<tr>\n<td>[<strong>torecsys.layers</strong>]</td>\n<td>layers-level implementation of algorithms</td>\n</tr>\n<tr>\n<td>[<strong>torecsys.losses</strong>]</td>\n<td>loss functions used in recommendation system</td>\n</tr>\n<tr>\n<td>[<strong>torecsys.metrics</strong>]</td>\n<td>metrics to evaluate recommendation system</td>\n</tr>\n<tr>\n<td>[<strong>torecsys.models</strong>]</td>\n<td>whole-architecture of models which can be trained by <strong>torecsys.base.trainer</strong></td>\n</tr>\n<tr>\n<td>[<strong>torecsys.utils</strong>]</td>\n<td>little tools used in torecsys</td>\n</tr></tbody></table>\n<p>(!!! To be confirmed)</p>\n<h3>torecsys.models</h3>\n<p><code>torecsys.models</code> is a part of model excluding embedding part, so you can choose <br>\na suitable embedding method for your model with the following codes:</p>\n<h3>torecsys.estimators</h3>\n<p><code>torecsys.estimators</code> is another type of model to be used directly if the input <br>\nfields and features implemented in the papers are suitable for you:</p>\n<h2>Getting Started</h2>\n<p>(!!! To be confirmed)</p>\n<h3>Load Sample data</h3>\n<p>load the movielens dataset, for example:</p>\n<h3>Build Dataset and DataLoader with Sample data</h3>\n<h3>Use Estimators to train a model</h3>\n<h3>Make prediction with estimators</h3>\n<h2>Examples</h2>\n<h2>Authors</h2>\n<ul>\n<li><a href=\"https://github.com\" rel=\"nofollow\">Jasper Li</a> - Developer</li>\n</ul>\n<h2>License</h2>\n<p>ToR[e]cSys is MIT-style licensed, as found in the LICENSE file.</p>\n\n          </div>"}, "last_serial": 6472647, "releases": {"0.0.5": [{"comment_text": "", "digests": {"md5": "0b74da472b338d4d23653d372cc40f7b", "sha256": "a7f9a7dfa9e056b49e834e84560f165664eb324fef5387e7883eddb61729a561"}, "downloads": -1, "filename": "torecsys-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "0b74da472b338d4d23653d372cc40f7b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 101793, "upload_time": "2019-09-05T08:53:45", "upload_time_iso_8601": "2019-09-05T08:53:45.512166Z", "url": "https://files.pythonhosted.org/packages/f4/84/11f9cdff84184d5f6ef903e76f39b35ddba30dc1bdd05a54f2e491d4815b/torecsys-0.0.5-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0b74da472b338d4d23653d372cc40f7b", "sha256": "a7f9a7dfa9e056b49e834e84560f165664eb324fef5387e7883eddb61729a561"}, "downloads": -1, "filename": "torecsys-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "0b74da472b338d4d23653d372cc40f7b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 101793, "upload_time": "2019-09-05T08:53:45", "upload_time_iso_8601": "2019-09-05T08:53:45.512166Z", "url": "https://files.pythonhosted.org/packages/f4/84/11f9cdff84184d5f6ef903e76f39b35ddba30dc1bdd05a54f2e491d4815b/torecsys-0.0.5-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:50:01 2020"}