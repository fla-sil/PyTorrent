{"info": {"author": "Roger Hoover", "author_email": "roger.hoover@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Networking"], "description": "smpp.pdu is a Python library for parsing Protocol Data Units (PDUs) in SMPP protocol\n\nhttp://www.nowsms.com/discus/messages/1/24856.html \n\nExamples\n========\n\nDecoding (parsing) PDUs\n--------------------------\n    import binascii\n    import StringIO\n    from smpp.pdu.pdu_encoding import PDUEncoder\n\n    hex = '0000004d00000005000000009f88f12441575342440001013136353035353531323334000101313737333535353430373000000000000000000300117468657265206973206e6f2073706f6f6e'\n    binary = binascii.a2b_hex(hex)\n    file = StringIO.StringIO(binary)\n\n    pdu = PDUEncoder().decode(file)\n    print \"PDU: %s\" % pdu\n\n    # Prints the following:\n    #\n    # PDU: PDU [command: deliver_sm, sequence_number: 2676551972, command_status: ESME_ROK\n    # service_type: AWSBD\n    # source_addr_ton: INTERNATIONAL\n    # source_addr_npi: ISDN\n    # source_addr: 16505551234\n    # dest_addr_ton: INTERNATIONAL\n    # dest_addr_npi: ISDN\n    # destination_addr: 17735554070\n    # esm_class: EsmClass[mode: DEFAULT, type: DEFAULT, gsmFeatures: set([])]\n    # protocol_id: 0\n    # priority_flag: LEVEL_0\n    # schedule_delivery_time: None\n    # validity_period: None\n    # registered_delivery: RegisteredDelivery[receipt: NO_SMSC_DELIVERY_RECEIPT_REQUESTED, smeOriginatedAcks: set([]), intermediateNotification: False]\n    # replace_if_present_flag: DO_NOT_REPLACE\n    # data_coding: DataCoding[scheme: DEFAULT, schemeData: LATIN_1]\n    # sm_default_msg_id: None\n    # short_message: there is no spoon\n    # ]\n\nCreating and encoding PDUs\n--------------------------\n    import binascii\n    from smpp.pdu.pdu_types import *\n    from smpp.pdu.operations import *\n    from smpp.pdu.pdu_encoding import PDUEncoder\n\n    pdu = SubmitSM(9284,\n        service_type='',\n        source_addr_ton=AddrTon.ALPHANUMERIC,\n        source_addr_npi=AddrNpi.UNKNOWN,\n        source_addr='mobileway',\n        dest_addr_ton=AddrTon.INTERNATIONAL,\n        dest_addr_npi=AddrNpi.ISDN,\n        destination_addr='1208230',\n        esm_class=EsmClass(EsmClassMode.DEFAULT, EsmClassType.DEFAULT),\n        protocol_id=0,\n        priority_flag=PriorityFlag.LEVEL_0,\n        registered_delivery=RegisteredDelivery(RegisteredDeliveryReceipt.SMSC_DELIVERY_RECEIPT_REQUESTED),\n        replace_if_present_flag=ReplaceIfPresentFlag.DO_NOT_REPLACE,\n        data_coding=DataCoding(DataCodingScheme.GSM_MESSAGE_CLASS, DataCodingGsmMsg(DataCodingGsmMsgCoding.DEFAULT_ALPHABET, DataCodingGsmMsgClass.CLASS_2)),\n        short_message='HELLO',\n    )\n    print \"PDU: %s\" % pdu\n\n    binary = PDUEncoder().encode(pdu)\n    hexStr = binascii.b2a_hex(binary)\n    print \"HEX: %s\" % hexStr\n    \n    # Prints the following:\n    #\n    # PDU: PDU [command: submit_sm, sequence_number: 9284, command_status: ESME_ROK\n    # service_type: \n    # source_addr_ton: ALPHANUMERIC\n    # source_addr_npi: UNKNOWN\n    # source_addr: mobileway\n    # dest_addr_ton: INTERNATIONAL\n    # dest_addr_npi: ISDN\n    # destination_addr: 1208230\n    # esm_class: EsmClass[mode: DEFAULT, type: DEFAULT, gsmFeatures: set([])]\n    # protocol_id: 0\n    # priority_flag: LEVEL_0\n    # schedule_delivery_time: None\n    # validity_period: None\n    # registered_delivery: RegisteredDelivery[receipt: SMSC_DELIVERY_RECEIPT_REQUESTED, smeOriginatedAcks: set([]), intermediateNotification: False]\n    # replace_if_present_flag: DO_NOT_REPLACE\n    # data_coding: DataCoding[scheme: GSM_MESSAGE_CLASS, schemeData: DataCodingGsmMsg[msgCoding: DEFAULT_ALPHABET, msgClass: CLASS_2]]\n    # sm_default_msg_id: None\n    # short_message: HELLO\n    # ]\n    # HEX: 000000360000000400000000000024440005006d6f62696c65776179000101313230383233300000000000000100f2000548454c4c4f", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mozes/smpp.pdu", "keywords": "smpp pdu", "license": "Apache License 2.0", "maintainer": null, "maintainer_email": null, "name": "smpp.pdu", "package_url": "https://pypi.org/project/smpp.pdu/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/smpp.pdu/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mozes/smpp.pdu"}, "release_url": "https://pypi.org/project/smpp.pdu/0.3/", "requires_dist": null, "requires_python": null, "summary": "Library for parsing Protocol Data Units (PDUs) in SMPP protocol", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            smpp.pdu is a Python library for parsing Protocol Data Units (PDUs) in SMPP protocol<br><br>http://www.nowsms.com/discus/messages/1/24856.html <br><br>Examples<br>========<br><br>Decoding (parsing) PDUs<br>--------------------------<br>    import binascii<br>    import StringIO<br>    from smpp.pdu.pdu_encoding import PDUEncoder<br><br>    hex = '0000004d00000005000000009f88f12441575342440001013136353035353531323334000101313737333535353430373000000000000000000300117468657265206973206e6f2073706f6f6e'<br>    binary = binascii.a2b_hex(hex)<br>    file = StringIO.StringIO(binary)<br><br>    pdu = PDUEncoder().decode(file)<br>    print \"PDU: %s\" % pdu<br><br>    # Prints the following:<br>    #<br>    # PDU: PDU [command: deliver_sm, sequence_number: 2676551972, command_status: ESME_ROK<br>    # service_type: AWSBD<br>    # source_addr_ton: INTERNATIONAL<br>    # source_addr_npi: ISDN<br>    # source_addr: 16505551234<br>    # dest_addr_ton: INTERNATIONAL<br>    # dest_addr_npi: ISDN<br>    # destination_addr: 17735554070<br>    # esm_class: EsmClass[mode: DEFAULT, type: DEFAULT, gsmFeatures: set([])]<br>    # protocol_id: 0<br>    # priority_flag: LEVEL_0<br>    # schedule_delivery_time: None<br>    # validity_period: None<br>    # registered_delivery: RegisteredDelivery[receipt: NO_SMSC_DELIVERY_RECEIPT_REQUESTED, smeOriginatedAcks: set([]), intermediateNotification: False]<br>    # replace_if_present_flag: DO_NOT_REPLACE<br>    # data_coding: DataCoding[scheme: DEFAULT, schemeData: LATIN_1]<br>    # sm_default_msg_id: None<br>    # short_message: there is no spoon<br>    # ]<br><br>Creating and encoding PDUs<br>--------------------------<br>    import binascii<br>    from smpp.pdu.pdu_types import *<br>    from smpp.pdu.operations import *<br>    from smpp.pdu.pdu_encoding import PDUEncoder<br><br>    pdu = SubmitSM(9284,<br>        service_type='',<br>        source_addr_ton=AddrTon.ALPHANUMERIC,<br>        source_addr_npi=AddrNpi.UNKNOWN,<br>        source_addr='mobileway',<br>        dest_addr_ton=AddrTon.INTERNATIONAL,<br>        dest_addr_npi=AddrNpi.ISDN,<br>        destination_addr='1208230',<br>        esm_class=EsmClass(EsmClassMode.DEFAULT, EsmClassType.DEFAULT),<br>        protocol_id=0,<br>        priority_flag=PriorityFlag.LEVEL_0,<br>        registered_delivery=RegisteredDelivery(RegisteredDeliveryReceipt.SMSC_DELIVERY_RECEIPT_REQUESTED),<br>        replace_if_present_flag=ReplaceIfPresentFlag.DO_NOT_REPLACE,<br>        data_coding=DataCoding(DataCodingScheme.GSM_MESSAGE_CLASS, DataCodingGsmMsg(DataCodingGsmMsgCoding.DEFAULT_ALPHABET, DataCodingGsmMsgClass.CLASS_2)),<br>        short_message='HELLO',<br>    )<br>    print \"PDU: %s\" % pdu<br><br>    binary = PDUEncoder().encode(pdu)<br>    hexStr = binascii.b2a_hex(binary)<br>    print \"HEX: %s\" % hexStr<br>    <br>    # Prints the following:<br>    #<br>    # PDU: PDU [command: submit_sm, sequence_number: 9284, command_status: ESME_ROK<br>    # service_type: <br>    # source_addr_ton: ALPHANUMERIC<br>    # source_addr_npi: UNKNOWN<br>    # source_addr: mobileway<br>    # dest_addr_ton: INTERNATIONAL<br>    # dest_addr_npi: ISDN<br>    # destination_addr: 1208230<br>    # esm_class: EsmClass[mode: DEFAULT, type: DEFAULT, gsmFeatures: set([])]<br>    # protocol_id: 0<br>    # priority_flag: LEVEL_0<br>    # schedule_delivery_time: None<br>    # validity_period: None<br>    # registered_delivery: RegisteredDelivery[receipt: SMSC_DELIVERY_RECEIPT_REQUESTED, smeOriginatedAcks: set([]), intermediateNotification: False]<br>    # replace_if_present_flag: DO_NOT_REPLACE<br>    # data_coding: DataCoding[scheme: GSM_MESSAGE_CLASS, schemeData: DataCodingGsmMsg[msgCoding: DEFAULT_ALPHABET, msgClass: CLASS_2]]<br>    # sm_default_msg_id: None<br>    # short_message: HELLO<br>    # ]<br>    # HEX: 000000360000000400000000000024440005006d6f62696c65776179000101313230383233300000000000000100f2000548454c4c4f\n          </div>"}, "last_serial": 705753, "releases": {"0.1": [], "0.2": [{"comment_text": "", "digests": {"md5": "ea4d100732f8686b9aac93d5bc0a2271", "sha256": "b62e2b229edbb309e8d4c30dcffa0efb347c6c823cb9e44a0f82b25f2386c222"}, "downloads": -1, "filename": "smpp.pdu-0.2.tar.gz", "has_sig": false, "md5_digest": "ea4d100732f8686b9aac93d5bc0a2271", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31328, "upload_time": "2011-09-23T19:30:19", "upload_time_iso_8601": "2011-09-23T19:30:19.020638Z", "url": "https://files.pythonhosted.org/packages/19/6b/5a493687d2847c3e0a27d370289e0a8a512d11651ae0b9fcb1a538920c96/smpp.pdu-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "73d96673a45345c74f58de49f5795f0b", "sha256": "9a4fba688f88aaf70ace5b91ea53a1018b4f707a7ac41e73af92dd585e32d35d"}, "downloads": -1, "filename": "smpp.pdu-0.3.tar.gz", "has_sig": false, "md5_digest": "73d96673a45345c74f58de49f5795f0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31818, "upload_time": "2013-05-21T16:41:18", "upload_time_iso_8601": "2013-05-21T16:41:18.783259Z", "url": "https://files.pythonhosted.org/packages/61/ec/fa1ca23d21f03a3b6d07f23735a16f22c91cb1d725c7a8d1650bc8b908ce/smpp.pdu-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "73d96673a45345c74f58de49f5795f0b", "sha256": "9a4fba688f88aaf70ace5b91ea53a1018b4f707a7ac41e73af92dd585e32d35d"}, "downloads": -1, "filename": "smpp.pdu-0.3.tar.gz", "has_sig": false, "md5_digest": "73d96673a45345c74f58de49f5795f0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31818, "upload_time": "2013-05-21T16:41:18", "upload_time_iso_8601": "2013-05-21T16:41:18.783259Z", "url": "https://files.pythonhosted.org/packages/61/ec/fa1ca23d21f03a3b6d07f23735a16f22c91cb1d725c7a8d1650bc8b908ce/smpp.pdu-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:47 2020"}