{"info": {"author": "Arista Networks, Inc.", "author_email": "eosplus-dev@arista.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Networking"], "description": "Arista ServiceNow REST API Client |pypiver| |Build Status| |codecov|\n====================================================================\n\nTable of Contents\n-----------------\n\n1. `Overview`_\n\n   -  `Requirements`_\n\n2. `Installation`_\n3. `Getting Started`_\n\n   -  `Example`_\n\n4. `Testing`_\n\n   -  `Unit Test`_\n   -  `System Test`_\n\n5. `Coverage`_\n\n6. `License`_\n\nOverview\n========\n\nThe ServiceNowRac package provides a python REST API client for communicating\nwith a ServiceNow instance. The package contains the following classes:\n\n- SnowClient - This class is used to create a persistent client connection to a\n  ServiceNow instance.  It provides the underlying reliable connection and\n  defines the get and post methods for interacting with ServiceNow REST API.\n\n- SnowTable - Use this class to perform operations on existing tables. Provides\n  the API calls for table operations.\n\nRequirements\n------------\n\n-  Tables in the ServiceNow instance need to allow web access for the\n   user.\n-  Currently has only be tested on Centos7, should work on most Unix\n   systems.\n\nInstallation\n============\n\n- From pip (recommended): ``$ pip install ServiceNowRac``\n\n- From source: ``$ pip install git+https://github.com/aristanetworks/ServiceNowRac.git``\n\nGetting Started\n===============\n\nOnce the package has been installed you can run the following example to\nverify that everything has been installed properly.\n\nExample\n-------\n\nCreating a connection to a ServiceNow instance and creating a record in\nthe change\\_request table.\n\n::\n\n    from ServiceNowRac.snow_client import SnowClient\n    from ServiceNowRac.snow_table import SnowTable\n\n    # ServiceNow Instance information\n    hostname = 'service_now_instance_hostname'\n    username = 'service_now_username'\n    password = 'service_now_password'\n\n    # Connect to Service Now\n    snow_server = SnowClient(hostname, username, password)\n    snow_chg_reqs = SnowTable('change_request', snow_server)\n\n    # Create the change request dict\n    data = {\n        'approval'           : 'requested',\n        'assigned_to'        : username,\n        'category'           : 'Hardware',\n        'comments'           : 'Created a change request',\n        'description'        : 'Created a change request description',\n        'impact'             : '3',\n        'priority'           : '3',\n        'reason'             : 'Network Requirements',\n        'requested_by'       : username,\n        'type'               : 'Routine',\n    }\n    records = snow_chg_reqs.insert(data)\n    assert len(records) == 1\n\n    # Verify that the change request record that prints out below was created\n    # on your ServiceNow instance.\n    print records[0]\n\nTesting\n=======\n\nBoth system and unit tests are provided.\n\nUnit Test\n---------\n\nUnit tests can be executed via:\n\n.. code:: sh\n\n    $ make unittest\n\nSystem Test\n-----------\n\nIn order for system tests to be run, a valid ServiceNow instance along with\nlogin credentials is needed and test/system/config.py should be updated with\ninstance/login. Once updated, system tests can be run by issuing:\n\n.. code:: sh\n\n    $ make systest\n\nCoverage\n========\n\nContributions should maintain at the minimum +90% code coverage. You can check\nthis locally before submitting your Pull Request.\n\n- Run ``make unittest``\n- Run ``make coverage_report`` to confirm code coverage.\n\nLicense\n=======\n\nCopyright |copy| 2016, Arista Networks, Inc. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n- Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n- Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n- Neither the name of Arista Networks nor the names of its contributors may be\n  used to endorse or promote products derived from this software without\n  specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL ARISTA NETWORKS BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\nOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n.. |copy|   unicode:: U+000A9 .. COPYRIGHT SIGN\n.. _Overview: #overview\n.. _Requirements: #requirements\n.. _Installation: #installation\n.. _Getting Started: #getting-started\n.. _Example: #example\n.. _Testing: #testing\n\n.. |Build Status| image:: https://travis-ci.org/aristanetworks/ServiceNowRac.svg?branch=develop\n   :target: https://travis-ci.org/aristanetworks/ServiceNowRac\n.. |codecov| image:: https://codecov.io/gh/aristanetworks/ServiceNowRac/branch/develop/graph/badge.svg\n   :target: https://codecov.io/gh/aristanetworks/ServiceNowRac\n.. |pypiver| image:: https://badge.fury.io/py/ServiceNowRac.svg\n   :target: https://badge.fury.io/py/ServiceNowRac", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/aristanetworks/ServiceNowRac/tarball/0.5.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aristanetworks/ServiceNowRac/", "keywords": "networking servicenow development rest api", "license": "BSD-3", "maintainer": null, "maintainer_email": null, "name": "ServiceNowRac", "package_url": "https://pypi.org/project/ServiceNowRac/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ServiceNowRac/", "project_urls": {"Download": "https://github.com/aristanetworks/ServiceNowRac/tarball/0.5.0", "Homepage": "https://github.com/aristanetworks/ServiceNowRac/"}, "release_url": "https://pypi.org/project/ServiceNowRac/0.5.0/", "requires_dist": null, "requires_python": null, "summary": "ServiceNow Rest API Client written in Python", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"arista-servicenow-rest-api-client-pypiver-build-status-codecov\">\n<h2>Arista ServiceNow REST API Client <a href=\"https://badge.fury.io/py/ServiceNowRac\" rel=\"nofollow\"><img alt=\"pypiver\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6eea3723fd32ffe2f88014a0b37d81c2906766c7/68747470733a2f2f62616467652e667572792e696f2f70792f536572766963654e6f775261632e737667\"></a> <a href=\"https://travis-ci.org/aristanetworks/ServiceNowRac\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/47b983e0c359a41c29352d5b64757ecc1293a40e/68747470733a2f2f7472617669732d63692e6f72672f6172697374616e6574776f726b732f536572766963654e6f775261632e7376673f6272616e63683d646576656c6f70\"></a> <a href=\"https://codecov.io/gh/aristanetworks/ServiceNowRac\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e26df1d647b676314fbe6070b1c95d1854514756/68747470733a2f2f636f6465636f762e696f2f67682f6172697374616e6574776f726b732f536572766963654e6f775261632f6272616e63682f646576656c6f702f67726170682f62616467652e737667\"></a></h2>\n<h2 id=\"table-of-contents\"><span class=\"section-subtitle\">Table of Contents</span></h2>\n<ol>\n<li><a href=\"#overview\" rel=\"nofollow\">Overview</a><ul>\n<li><a href=\"#requirements\" rel=\"nofollow\">Requirements</a></li>\n</ul>\n</li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#getting-started\" rel=\"nofollow\">Getting Started</a><ul>\n<li><a href=\"#example\" rel=\"nofollow\">Example</a></li>\n</ul>\n</li>\n<li><a href=\"#testing\" rel=\"nofollow\">Testing</a><ul>\n<li><a href=\"#unit-test\" rel=\"nofollow\">Unit Test</a></li>\n<li><a href=\"#system-test\" rel=\"nofollow\">System Test</a></li>\n</ul>\n</li>\n<li><a href=\"#coverage\" rel=\"nofollow\">Coverage</a></li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a></li>\n</ol>\n</div>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>The ServiceNowRac package provides a python REST API client for communicating\nwith a ServiceNow instance. The package contains the following classes:</p>\n<ul>\n<li>SnowClient - This class is used to create a persistent client connection to a\nServiceNow instance.  It provides the underlying reliable connection and\ndefines the get and post methods for interacting with ServiceNow REST API.</li>\n<li>SnowTable - Use this class to perform operations on existing tables. Provides\nthe API calls for table operations.</li>\n</ul>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li>Tables in the ServiceNow instance need to allow web access for the\nuser.</li>\n<li>Currently has only be tested on Centos7, should work on most Unix\nsystems.</li>\n</ul>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ul>\n<li>From pip (recommended): <tt>$ pip install ServiceNowRac</tt></li>\n<li>From source: <tt>$ pip install <span class=\"pre\">git+https://github.com/aristanetworks/ServiceNowRac.git</span></tt></li>\n</ul>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>Once the package has been installed you can run the following example to\nverify that everything has been installed properly.</p>\n<div id=\"example\">\n<h3>Example</h3>\n<p>Creating a connection to a ServiceNow instance and creating a record in\nthe change_request table.</p>\n<pre>from ServiceNowRac.snow_client import SnowClient\nfrom ServiceNowRac.snow_table import SnowTable\n\n# ServiceNow Instance information\nhostname = 'service_now_instance_hostname'\nusername = 'service_now_username'\npassword = 'service_now_password'\n\n# Connect to Service Now\nsnow_server = SnowClient(hostname, username, password)\nsnow_chg_reqs = SnowTable('change_request', snow_server)\n\n# Create the change request dict\ndata = {\n    'approval'           : 'requested',\n    'assigned_to'        : username,\n    'category'           : 'Hardware',\n    'comments'           : 'Created a change request',\n    'description'        : 'Created a change request description',\n    'impact'             : '3',\n    'priority'           : '3',\n    'reason'             : 'Network Requirements',\n    'requested_by'       : username,\n    'type'               : 'Routine',\n}\nrecords = snow_chg_reqs.insert(data)\nassert len(records) == 1\n\n# Verify that the change request record that prints out below was created\n# on your ServiceNow instance.\nprint records[0]\n</pre>\n</div>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>Both system and unit tests are provided.</p>\n<div id=\"unit-test\">\n<h3>Unit Test</h3>\n<p>Unit tests can be executed via:</p>\n<pre>$ make unittest\n</pre>\n</div>\n<div id=\"system-test\">\n<h3>System Test</h3>\n<p>In order for system tests to be run, a valid ServiceNow instance along with\nlogin credentials is needed and test/system/config.py should be updated with\ninstance/login. Once updated, system tests can be run by issuing:</p>\n<pre>$ make systest\n</pre>\n</div>\n</div>\n<div id=\"coverage\">\n<h2>Coverage</h2>\n<p>Contributions should maintain at the minimum +90% code coverage. You can check\nthis locally before submitting your Pull Request.</p>\n<ul>\n<li>Run <tt>make unittest</tt></li>\n<li>Run <tt>make coverage_report</tt> to confirm code coverage.</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright \u00a9 2016, Arista Networks, Inc. All rights reserved.</p>\n<p>Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:</p>\n<ul>\n<li>Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.</li>\n<li>Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.</li>\n<li>Neither the name of Arista Networks nor the names of its contributors may be\nused to endorse or promote products derived from this software without\nspecific prior written permission.</li>\n</ul>\n<p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \u201cAS IS\u201d AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL ARISTA NETWORKS BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\nOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n</div>\n\n          </div>"}, "last_serial": 2529146, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "7a4526ea69391f46cc24ba630771d0a2", "sha256": "7c9aaacde709cc4ccaf23c81cfbb4ae27de080972ab72db5128b94c1b294766b"}, "downloads": -1, "filename": "ServiceNowRac-0.5.0.tar.gz", "has_sig": false, "md5_digest": "7a4526ea69391f46cc24ba630771d0a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55325, "upload_time": "2016-11-30T19:35:29", "upload_time_iso_8601": "2016-11-30T19:35:29.653054Z", "url": "https://files.pythonhosted.org/packages/06/a2/b40ccfc3f9f3d130ac3b20448c47ce477f5b9d6df44d80072a564e55ea16/ServiceNowRac-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7a4526ea69391f46cc24ba630771d0a2", "sha256": "7c9aaacde709cc4ccaf23c81cfbb4ae27de080972ab72db5128b94c1b294766b"}, "downloads": -1, "filename": "ServiceNowRac-0.5.0.tar.gz", "has_sig": false, "md5_digest": "7a4526ea69391f46cc24ba630771d0a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55325, "upload_time": "2016-11-30T19:35:29", "upload_time_iso_8601": "2016-11-30T19:35:29.653054Z", "url": "https://files.pythonhosted.org/packages/06/a2/b40ccfc3f9f3d130ac3b20448c47ce477f5b9d6df44d80072a564e55ea16/ServiceNowRac-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:56 2020"}