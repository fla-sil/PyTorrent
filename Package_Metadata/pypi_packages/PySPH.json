{"info": {"author": "PySPH Developers", "author_email": "pysph-dev@googlegroups.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Physics", "Topic :: Software Development :: Libraries"], "description": "PySPH: a Python-based SPH framework\n------------------------------------\n\n|Travis Status|  |Shippable Status|  |Appveyor Status|  |Codeship Status|\n\n**PySPH has moved here:** https://github.com/pypr/pysph\n\nPySPH is an open source framework for Smoothed Particle Hydrodynamics\n(SPH) simulations. It is implemented in\n`Python <http://www.python.org>`_ and the performance critical parts\nare implemented in `Cython <http://www.cython.org>`_ and PyOpenCL_.\n\nPySPH allows users to write their high-level code in pure Python. This Python\ncode is automatically converted to high-performance Cython or OpenCL which is\ncompiled and executed. PySPH can also be configured to work seamlessly with\nOpenMP, OpenCL, and MPI.\n\nThe latest documentation for PySPH is available at\n`pysph.readthedocs.org <http://pysph.readthedocs.org>`_.\n\n.. |Travis Status| image:: https://travis-ci.org/pypr/pysph.svg?branch=master\n    :target: https://travis-ci.org/pypr/pysph\n.. |Shippable Status| image:: https://api.shippable.com/projects/59272c73b2b3a60800b215d7/badge?branch=master\n   :target: https://app.shippable.com/github/pypr/pysph\n.. |Codeship Status| image:: https://app.codeship.com/projects/37370120-23ab-0135-b8f4-5ed227e7b019/status?branch=master\n   :target: https://codeship.com/projects/222098\n.. |Appveyor Status| image:: https://ci.appveyor.com/api/projects/status/q7ujoef1xbguk4wx\n   :target: https://ci.appveyor.com/project/prabhuramachandran/pysph-00bq8\n\nHere are `videos\n<https://www.youtube.com/playlist?list=PLH8Y2KepC2_VPLrcTiWGaYYh88gGVAuVr>`_\nof some example problems solved using PySPH.\n\n\n.. _PyOpenCL: https://documen.tician.de/pyopencl/\n\nFeatures\n--------\n\n- Flexibility to define arbitrary SPH equations operating on particles\n  in pure Python.\n- Define your own multi-step integrators in pure Python.\n- High-performance: our performance is comparable to hand-written\n  solvers implemented in FORTRAN.\n- Seamless multi-core support with OpenMP.\n- Seamless GPU support with PyOpenCL_.\n- Seamless parallel support using\n  `Zoltan <http://www.cs.sandia.gov/zoltan/>`_.\n\nSPH formulations\n-----------------\n\nPySPH ships with a variety of standard SPH formulations along with\nbasic examples.  Some of the formulations available are:\n\n-  `Weakly Compressible SPH\n   (WCSPH) <http://www.tandfonline.com/doi/abs/10.1080/00221686.2010.9641250>`_\n   for free-surface flows (Gesteira et al. 2010, Journal of Hydraulic\n   Research, 48, pp. 6--27)\n-  `Transport Velocity\n   Formulation <http://dx.doi.org/10.1016/j.jcp.2013.01.043>`_ for\n   incompressilbe fluids (Adami et al. 2013, JCP, 241, pp. 292--307)\n-  `SPH for elastic\n   dynamics <http://dx.doi.org/10.1016/S0045-7825(01)00254-7>`_ (Gray\n   et al. 2001, CMAME, Vol. 190, pp 6641--6662)\n-  `Compressible SPH <http://dx.doi.org/10.1016/j.jcp.2013.08.060>`_\n   (Puri et al. 2014, JCP, Vol. 256, pp 308--333)\n\nInstallation\n-------------\n\nUp-to-date details on how to install PySPH on Linux/OS X and Windows are\navailable from\n`here <http://pysph.readthedocs.org/en/latest/installation.html>`_.\n\nIf you wish to see a working build/test script please see our `shippable.yml\n<https://github.com/pypr/pysph/blob/master/shippable.yml>`_. For\nWindows platforms see the `appveyor.yml\n<https://github.com/pypr/pysph/blob/master/appveyor.yml>`_.\n\nRunning the examples\n--------------------\n\nYou can verify the installation by exploring some examples. A fairly\nquick running example (taking about 20 seconds) would be the\nfollowing::\n\n    $ pysph run elliptical_drop\n\nThis requires that Mayavi be installed. The saved output data can be\nviewed by running::\n\n    $ pysph view elliptical_drop_output/\n\nA more interesting example would be a 2D dam-break example (this takes about 30\nminutes in total to run)::\n\n    $ pysph run dam_break_2d\n\nThe solution can be viewed live by running (on another shell)::\n\n    $ pysph view\n\nThe generated output can also be viewed and the newly generated output files\ncan be refreshed on the viewer UI.\n\nA 3D version of the dam-break problem is also available, and may be run\nas::\n\n    $ pysph run dam_break_3d\n\nThis runs the 3D dam-break problem which is also a SPHERIC benchmark\n`Test 2 <https://wiki.manchester.ac.uk/spheric/index.php/Test2>`_\n\n.. figure:: https://github.com/pypr/pysph/raw/master/docs/Images/db3d.png\n   :width: 550px\n   :alt: Three-dimensional dam-break example\n\nPySPH is more than a tool for wave-body interactions:::\n\n    $ pysph run cavity\n\nThis runs the driven cavity problem using the transport velocity formulation of\nAdami et al. The output directory ``cavity_output`` will also contain\nstreamlines and other post-processed results after the simulation completes.\nFor example the streamlines look like the following image:\n\n.. figure:: https://github.com/pypr/pysph/raw/master/docs/Images/ldc-streamlines.png\n   :width: 550px\n   :alt: Lid-driven-cavity example\n\nIf you want to use PySPH for elastic dynamics, you can try some of the\nexamples from the ``pysph.examples.solid_mech`` package::\n\n    $ pysph run solid_mech.rings\n\nWhich runs the problem of the collision of two elastic rings:\n\n.. figure:: https://github.com/pypr/pysph/raw/master/docs/Images/rings-collision.png\n   :width: 550px\n   :alt: Collision of two steel rings\n\nThe auto-generated code for the example resides in the directory\n``~/.pysph/source``. A note of caution however, it's not for the faint\nhearted.\n\nThere are many more examples, they can be listed by simply running::\n\n    $ pysph run\n\n\nCredits\n--------\n\nPySPH is primarily developed at the `Department of Aerospace\nEngineering, IIT Bombay <http://www.aero.iitb.ac.in>`_. We are grateful\nto IIT Bombay for their support.  Our primary goal is to build a\npowerful SPH based tool for both application and research. We hope that\nthis makes it easy to perform reproducible computational research.\n\nTo see the list of contributors the see `github contributors page\n<https://github.com/pypr/pysph/graphs/contributors>`_\n\n\nSome earlier developers not listed on the above are:\n\n- Pankaj Pandey (stress solver and improved load balancing, 2011)\n- Chandrashekhar Kaushik (original parallel and serial implementation in 2009)\n\n\nSupport\n-------\n\nIf you have any questions or are running into any difficulties with PySPH,\nplease email or post your questions on the pysph-users mailing list here:\nhttps://groups.google.com/d/forum/pysph-users\n\nPlease also take a look at the `PySPH issue tracker\n<https://github.com/pypr/pysph/issues>`_.", "description_content_type": "", "docs_url": "https://pythonhosted.org/PySPH/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/pypr/pysph", "keywords": "SPH simulation computational fluid dynamics", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "PySPH", "package_url": "https://pypi.org/project/PySPH/", "platform": "Linux", "project_url": "https://pypi.org/project/PySPH/", "project_urls": {"Homepage": "http://github.com/pypr/pysph"}, "release_url": "https://pypi.org/project/PySPH/1.0a6/", "requires_dist": null, "requires_python": "", "summary": "A general purpose Smoothed Particle Hydrodynamics framework", "version": "1.0a6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pysph-a-python-based-sph-framework\">\n<h2>PySPH: a Python-based SPH framework</h2>\n<p><a href=\"https://travis-ci.org/pypr/pysph\" rel=\"nofollow\"><img alt=\"Travis Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/672adbcc17910d7cb6cb1adfed8802aff18ba460/68747470733a2f2f7472617669732d63692e6f72672f707970722f70797370682e7376673f6272616e63683d6d6173746572\"></a>  <a href=\"https://app.shippable.com/github/pypr/pysph\" rel=\"nofollow\"><img alt=\"Shippable Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4d8a90df3a45aab9eb8ca4f0f1a5ae6d6f91582d/68747470733a2f2f6170692e736869707061626c652e636f6d2f70726f6a656374732f3539323732633733623262336136303830306232313564372f62616467653f6272616e63683d6d6173746572\"></a>  <a href=\"https://ci.appveyor.com/project/prabhuramachandran/pysph-00bq8\" rel=\"nofollow\"><img alt=\"Appveyor Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d43ca729e5be9f56a97e1888420bd6ed765c4300/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7137756a6f656631786267756b347778\"></a>  <a href=\"https://codeship.com/projects/222098\" rel=\"nofollow\"><img alt=\"Codeship Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f066b319e454a60fab846f8c9c98915fcb1a696/68747470733a2f2f6170702e636f6465736869702e636f6d2f70726f6a656374732f33373337303132302d323361622d303133352d623866342d3565643232376537623031392f7374617475733f6272616e63683d6d6173746572\"></a></p>\n<p><strong>PySPH has moved here:</strong> <a href=\"https://github.com/pypr/pysph\" rel=\"nofollow\">https://github.com/pypr/pysph</a></p>\n<p>PySPH is an open source framework for Smoothed Particle Hydrodynamics\n(SPH) simulations. It is implemented in\n<a href=\"http://www.python.org\" rel=\"nofollow\">Python</a> and the performance critical parts\nare implemented in <a href=\"http://www.cython.org\" rel=\"nofollow\">Cython</a> and <a href=\"https://documen.tician.de/pyopencl/\" rel=\"nofollow\">PyOpenCL</a>.</p>\n<p>PySPH allows users to write their high-level code in pure Python. This Python\ncode is automatically converted to high-performance Cython or OpenCL which is\ncompiled and executed. PySPH can also be configured to work seamlessly with\nOpenMP, OpenCL, and MPI.</p>\n<p>The latest documentation for PySPH is available at\n<a href=\"http://pysph.readthedocs.org\" rel=\"nofollow\">pysph.readthedocs.org</a>.</p>\n<p>Here are <a href=\"https://www.youtube.com/playlist?list=PLH8Y2KepC2_VPLrcTiWGaYYh88gGVAuVr\" rel=\"nofollow\">videos</a>\nof some example problems solved using PySPH.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Flexibility to define arbitrary SPH equations operating on particles\nin pure Python.</li>\n<li>Define your own multi-step integrators in pure Python.</li>\n<li>High-performance: our performance is comparable to hand-written\nsolvers implemented in FORTRAN.</li>\n<li>Seamless multi-core support with OpenMP.</li>\n<li>Seamless GPU support with <a href=\"https://documen.tician.de/pyopencl/\" rel=\"nofollow\">PyOpenCL</a>.</li>\n<li>Seamless parallel support using\n<a href=\"http://www.cs.sandia.gov/zoltan/\" rel=\"nofollow\">Zoltan</a>.</li>\n</ul>\n</div>\n<div id=\"sph-formulations\">\n<h2>SPH formulations</h2>\n<p>PySPH ships with a variety of standard SPH formulations along with\nbasic examples.  Some of the formulations available are:</p>\n<ul>\n<li><a href=\"http://www.tandfonline.com/doi/abs/10.1080/00221686.2010.9641250\" rel=\"nofollow\">Weakly Compressible SPH\n(WCSPH)</a>\nfor free-surface flows (Gesteira et al. 2010, Journal of Hydraulic\nResearch, 48, pp. 6\u201327)</li>\n<li><a href=\"http://dx.doi.org/10.1016/j.jcp.2013.01.043\" rel=\"nofollow\">Transport Velocity\nFormulation</a> for\nincompressilbe fluids (Adami et al. 2013, JCP, 241, pp. 292\u2013307)</li>\n<li><a href=\"http://dx.doi.org/10.1016/S0045-7825(01)00254-7\" rel=\"nofollow\">SPH for elastic\ndynamics</a> (Gray\net al. 2001, CMAME, Vol. 190, pp 6641\u20136662)</li>\n<li><a href=\"http://dx.doi.org/10.1016/j.jcp.2013.08.060\" rel=\"nofollow\">Compressible SPH</a>\n(Puri et al. 2014, JCP, Vol. 256, pp 308\u2013333)</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Up-to-date details on how to install PySPH on Linux/OS X and Windows are\navailable from\n<a href=\"http://pysph.readthedocs.org/en/latest/installation.html\" rel=\"nofollow\">here</a>.</p>\n<p>If you wish to see a working build/test script please see our <a href=\"https://github.com/pypr/pysph/blob/master/shippable.yml\" rel=\"nofollow\">shippable.yml</a>. For\nWindows platforms see the <a href=\"https://github.com/pypr/pysph/blob/master/appveyor.yml\" rel=\"nofollow\">appveyor.yml</a>.</p>\n</div>\n<div id=\"running-the-examples\">\n<h2>Running the examples</h2>\n<p>You can verify the installation by exploring some examples. A fairly\nquick running example (taking about 20 seconds) would be the\nfollowing:</p>\n<pre>$ pysph run elliptical_drop\n</pre>\n<p>This requires that Mayavi be installed. The saved output data can be\nviewed by running:</p>\n<pre>$ pysph view elliptical_drop_output/\n</pre>\n<p>A more interesting example would be a 2D dam-break example (this takes about 30\nminutes in total to run):</p>\n<pre>$ pysph run dam_break_2d\n</pre>\n<p>The solution can be viewed live by running (on another shell):</p>\n<pre>$ pysph view\n</pre>\n<p>The generated output can also be viewed and the newly generated output files\ncan be refreshed on the viewer UI.</p>\n<p>A 3D version of the dam-break problem is also available, and may be run\nas:</p>\n<pre>$ pysph run dam_break_3d\n</pre>\n<p>This runs the 3D dam-break problem which is also a SPHERIC benchmark\n<a href=\"https://wiki.manchester.ac.uk/spheric/index.php/Test2\" rel=\"nofollow\">Test 2</a></p>\n<div>\n<img alt=\"Three-dimensional dam-break example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e4b5332605910ed312a704a70fb0022ed497290b/68747470733a2f2f6769746875622e636f6d2f707970722f70797370682f7261772f6d61737465722f646f63732f496d616765732f646233642e706e67\" width=\"550px\">\n</div>\n<p>PySPH is more than a tool for wave-body interactions::</p>\n<pre>$ pysph run cavity\n</pre>\n<p>This runs the driven cavity problem using the transport velocity formulation of\nAdami et al. The output directory <tt>cavity_output</tt> will also contain\nstreamlines and other post-processed results after the simulation completes.\nFor example the streamlines look like the following image:</p>\n<div>\n<img alt=\"Lid-driven-cavity example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f68263b43dfd371b682b8eea24048a0e2b75ba55/68747470733a2f2f6769746875622e636f6d2f707970722f70797370682f7261772f6d61737465722f646f63732f496d616765732f6c64632d73747265616d6c696e65732e706e67\" width=\"550px\">\n</div>\n<p>If you want to use PySPH for elastic dynamics, you can try some of the\nexamples from the <tt>pysph.examples.solid_mech</tt> package:</p>\n<pre>$ pysph run solid_mech.rings\n</pre>\n<p>Which runs the problem of the collision of two elastic rings:</p>\n<div>\n<img alt=\"Collision of two steel rings\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ba97e3535ed4059ef4c0dcfda57c489c20ab0fec/68747470733a2f2f6769746875622e636f6d2f707970722f70797370682f7261772f6d61737465722f646f63732f496d616765732f72696e67732d636f6c6c6973696f6e2e706e67\" width=\"550px\">\n</div>\n<p>The auto-generated code for the example resides in the directory\n<tt><span class=\"pre\">~/.pysph/source</span></tt>. A note of caution however, it\u2019s not for the faint\nhearted.</p>\n<p>There are many more examples, they can be listed by simply running:</p>\n<pre>$ pysph run\n</pre>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>PySPH is primarily developed at the <a href=\"http://www.aero.iitb.ac.in\" rel=\"nofollow\">Department of Aerospace\nEngineering, IIT Bombay</a>. We are grateful\nto IIT Bombay for their support.  Our primary goal is to build a\npowerful SPH based tool for both application and research. We hope that\nthis makes it easy to perform reproducible computational research.</p>\n<p>To see the list of contributors the see <a href=\"https://github.com/pypr/pysph/graphs/contributors\" rel=\"nofollow\">github contributors page</a></p>\n<p>Some earlier developers not listed on the above are:</p>\n<ul>\n<li>Pankaj Pandey (stress solver and improved load balancing, 2011)</li>\n<li>Chandrashekhar Kaushik (original parallel and serial implementation in 2009)</li>\n</ul>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>If you have any questions or are running into any difficulties with PySPH,\nplease email or post your questions on the pysph-users mailing list here:\n<a href=\"https://groups.google.com/d/forum/pysph-users\" rel=\"nofollow\">https://groups.google.com/d/forum/pysph-users</a></p>\n<p>Please also take a look at the <a href=\"https://github.com/pypr/pysph/issues\" rel=\"nofollow\">PySPH issue tracker</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 4532486, "releases": {"0.9beta": [{"comment_text": "", "digests": {"md5": "00cf196d6fefad6e5739bb22a940eba7", "sha256": "3558fe730ee3768a637ef9ff7794e829a000fe604e2f9938fedd8753f454c11f"}, "downloads": -1, "filename": "PySPH-0.9beta.tar.gz", "has_sig": false, "md5_digest": "00cf196d6fefad6e5739bb22a940eba7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3290077, "upload_time": "2011-08-27T18:13:21", "upload_time_iso_8601": "2011-08-27T18:13:21.650677Z", "url": "https://files.pythonhosted.org/packages/59/26/f1ecbcefef93ed8121eafa7b4ff4d291504a368900cd08be425d44dacd47/PySPH-0.9beta.tar.gz", "yanked": false}], "1.0a1": [{"comment_text": "", "digests": {"md5": "7a651e04608780564409d106e4dd983a", "sha256": "cc3301e790200bdbd252c636c3b1909965085fa85cc3fbdc485a9592a8794e73"}, "downloads": -1, "filename": "PySPH-1.0a1.tar.bz2", "has_sig": false, "md5_digest": "7a651e04608780564409d106e4dd983a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2258284, "upload_time": "2015-06-02T20:36:04", "upload_time_iso_8601": "2015-06-02T20:36:04.579763Z", "url": "https://files.pythonhosted.org/packages/9a/9f/b945965eb7a3cd26f7d7b875c9fe85faa87b457a0321ac7c5161b27628b8/PySPH-1.0a1.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "a35ce14a6202e709c235b3ec62da0551", "sha256": "ce5bb1eabef224c3695b1f159f74e9b3353505801f89733871cd25a35134ade6"}, "downloads": -1, "filename": "PySPH-1.0a1.tar.gz", "has_sig": false, "md5_digest": "a35ce14a6202e709c235b3ec62da0551", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2300854, "upload_time": "2015-06-02T20:31:52", "upload_time_iso_8601": "2015-06-02T20:31:52.268733Z", "url": "https://files.pythonhosted.org/packages/a6/22/012a93b9a278aa3ef884a8fbeedd4d8fb689541e9f2ae53697289d520620/PySPH-1.0a1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "e84625976b7804318fad746af2b8b7c6", "sha256": "bcd6a50abd445b2ce41d46aa713fe5760b2baeaaa5bed81d2184b45ca87d55ec"}, "downloads": -1, "filename": "PySPH-1.0a1.zip", "has_sig": false, "md5_digest": "e84625976b7804318fad746af2b8b7c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2397722, "upload_time": "2015-06-02T20:37:44", "upload_time_iso_8601": "2015-06-02T20:37:44.425641Z", "url": "https://files.pythonhosted.org/packages/1c/83/3e0b8c6ffa0b3c4f85ed9c8bdf81fd1c85ec777bd678384368f05571c50d/PySPH-1.0a1.zip", "yanked": false}], "1.0a2": [{"comment_text": "", "digests": {"md5": "2a60032bbb63bb06ab3ac07339e92402", "sha256": "2868fd157293c4a123e193471696da0e6b1ef92961a4a49ee43ff5cf289da332"}, "downloads": -1, "filename": "PySPH-1.0a2.tar.bz2", "has_sig": false, "md5_digest": "2a60032bbb63bb06ab3ac07339e92402", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2350859, "upload_time": "2015-06-12T17:34:03", "upload_time_iso_8601": "2015-06-12T17:34:03.858750Z", "url": "https://files.pythonhosted.org/packages/ea/90/a0d89b08f5f0f1bd1f438434625cb58b3614e044a524562f524cff8f4189/PySPH-1.0a2.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0e7cfc867f71f087fcbcf8e67fe4913", "sha256": "5a429f18d5bb8f086ef07dcfb1d87a83585d73c3de0b8a51df3899b08faa2e46"}, "downloads": -1, "filename": "PySPH-1.0a2.tar.gz", "has_sig": false, "md5_digest": "d0e7cfc867f71f087fcbcf8e67fe4913", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2456653, "upload_time": "2015-06-12T17:33:33", "upload_time_iso_8601": "2015-06-12T17:33:33.228253Z", "url": "https://files.pythonhosted.org/packages/4e/98/d68647e8b1354db2ff74212c8019604f6af87b4d1c0b1e4ad79e9a71ecac/PySPH-1.0a2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "d001f3d09fd952443a3e69c02113da01", "sha256": "929d339ca006fa86e2f75103af221b3bac645cf379b1457ec81c130ff1dcf0ca"}, "downloads": -1, "filename": "PySPH-1.0a2.zip", "has_sig": false, "md5_digest": "d001f3d09fd952443a3e69c02113da01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2560644, "upload_time": "2015-06-12T17:34:24", "upload_time_iso_8601": "2015-06-12T17:34:24.223936Z", "url": "https://files.pythonhosted.org/packages/0e/b0/13fd819177027bf0150d1e6b92b066e7ca5592518b508077ee00927a7792/PySPH-1.0a2.zip", "yanked": false}], "1.0a3": [{"comment_text": "", "digests": {"md5": "90642ce87eefcb7cb0e3bff030d20e8e", "sha256": "e430e0c0f0332145ad085c18455cf87603bb93e3c9ef2e5ba70e587b300e7053"}, "downloads": -1, "filename": "PySPH-1.0a3.tar.bz2", "has_sig": false, "md5_digest": "90642ce87eefcb7cb0e3bff030d20e8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2376404, "upload_time": "2015-08-28T06:56:26", "upload_time_iso_8601": "2015-08-28T06:56:26.881414Z", "url": "https://files.pythonhosted.org/packages/9f/11/176754e3490f5c215845b1fd13f0785871f53bd849963cfb40cdbc117a65/PySPH-1.0a3.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "83302f3ba575db115826fc24de9d5b51", "sha256": "ad4331812a2587e32253a9ca6772c2db6434f068d79339092c44662b61a55f6a"}, "downloads": -1, "filename": "PySPH-1.0a3.tar.gz", "has_sig": false, "md5_digest": "83302f3ba575db115826fc24de9d5b51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2449434, "upload_time": "2015-08-28T06:56:01", "upload_time_iso_8601": "2015-08-28T06:56:01.779725Z", "url": "https://files.pythonhosted.org/packages/81/68/c3bddf10a9d65a21166cffa7bfd9d127968c53a69cc62222911ade838452/PySPH-1.0a3.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d94635f680c3df9afd533e84e3db02d", "sha256": "180c4a1808e76b67e9684cb5cfc916a79e1a2cfa398fd43d186ec0e9cd08055f"}, "downloads": -1, "filename": "PySPH-1.0a3.zip", "has_sig": false, "md5_digest": "4d94635f680c3df9afd533e84e3db02d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2554994, "upload_time": "2015-08-28T06:56:15", "upload_time_iso_8601": "2015-08-28T06:56:15.471472Z", "url": "https://files.pythonhosted.org/packages/40/e8/0e2106b6367f2b2039093b760bd87596084cc2ff8f6f2eb8c6567cf419ad/PySPH-1.0a3.zip", "yanked": false}], "1.0a4": [{"comment_text": "", "digests": {"md5": "37511742ba1d27a5bc8f0fc6ca986fc3", "sha256": "c7b33307a395f8cf098d4d5f8cc75a163e8f19ff8d5b280bbe331e744129b89c"}, "downloads": -1, "filename": "PySPH-1.0a4.tar.bz2", "has_sig": false, "md5_digest": "37511742ba1d27a5bc8f0fc6ca986fc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2311137, "upload_time": "2016-07-14T06:28:17", "upload_time_iso_8601": "2016-07-14T06:28:17.252728Z", "url": "https://files.pythonhosted.org/packages/9a/aa/8b57b3d7e80e60513077963b42fb682202a3d7977a5175dc4a1cbbdd2532/PySPH-1.0a4.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "305dbb6aca7ea5f7638c7294fee4884c", "sha256": "0fbaa9516208860bc62ce3a7cb2f0f648223e5285dc1314670963ab50bd24822"}, "downloads": -1, "filename": "PySPH-1.0a4.tar.gz", "has_sig": false, "md5_digest": "305dbb6aca7ea5f7638c7294fee4884c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2329347, "upload_time": "2016-07-14T06:28:05", "upload_time_iso_8601": "2016-07-14T06:28:05.121390Z", "url": "https://files.pythonhosted.org/packages/22/80/1ddfc05058f93fe82152ab81e0515513b20ab2efa3daddf3ecb0218d010f/PySPH-1.0a4.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "98bcc75e19206c1eacdaefa97f7d97a1", "sha256": "11feaaee029a0da409e19140135258064e261bd1b8ab03f6aa46825e76195b7e"}, "downloads": -1, "filename": "PySPH-1.0a4.zip", "has_sig": false, "md5_digest": "98bcc75e19206c1eacdaefa97f7d97a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2436535, "upload_time": "2016-07-14T06:28:11", "upload_time_iso_8601": "2016-07-14T06:28:11.040317Z", "url": "https://files.pythonhosted.org/packages/7c/ea/a927c092882065e26ce290886abd3d55f52e813b17cb67665cf3219098ae/PySPH-1.0a4.zip", "yanked": false}], "1.0a5": [{"comment_text": "", "digests": {"md5": "f900063ad903ec455ca2ff620301e1b9", "sha256": "19165f124b63cd617fdc74b8483ce35e2934cb536aecf4fc112a01bb8d28741e"}, "downloads": -1, "filename": "PySPH-1.0a5.tar.gz", "has_sig": false, "md5_digest": "f900063ad903ec455ca2ff620301e1b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2401921, "upload_time": "2017-09-16T19:06:29", "upload_time_iso_8601": "2017-09-16T19:06:29.433464Z", "url": "https://files.pythonhosted.org/packages/2d/05/a951281a3e2371a76a6de3d18f085b0d75f7568629b93d7fa9db3beaed1c/PySPH-1.0a5.tar.gz", "yanked": false}], "1.0a6": [{"comment_text": "", "digests": {"md5": "6478a2c7e085881c31238711f070ea04", "sha256": "9a9768129ffe7a0e0f16fe996c73cd7cfade6f44fd9a7111521d4be4cfca627c"}, "downloads": -1, "filename": "PySPH-1.0a6.tar.gz", "has_sig": false, "md5_digest": "6478a2c7e085881c31238711f070ea04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2719553, "upload_time": "2018-11-27T03:52:19", "upload_time_iso_8601": "2018-11-27T03:52:19.431707Z", "url": "https://files.pythonhosted.org/packages/a9/a0/0d6921b06a18d8914b0b2ec6aa1736205b9c5cc715f88a9456260d96ba0d/PySPH-1.0a6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6478a2c7e085881c31238711f070ea04", "sha256": "9a9768129ffe7a0e0f16fe996c73cd7cfade6f44fd9a7111521d4be4cfca627c"}, "downloads": -1, "filename": "PySPH-1.0a6.tar.gz", "has_sig": false, "md5_digest": "6478a2c7e085881c31238711f070ea04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2719553, "upload_time": "2018-11-27T03:52:19", "upload_time_iso_8601": "2018-11-27T03:52:19.431707Z", "url": "https://files.pythonhosted.org/packages/a9/a0/0d6921b06a18d8914b0b2ec6aa1736205b9c5cc715f88a9456260d96ba0d/PySPH-1.0a6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:14 2020"}