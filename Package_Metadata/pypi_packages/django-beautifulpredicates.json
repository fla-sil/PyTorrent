{"info": {"author": "Hiroki KIYOHARA", "author_email": "hirokiky@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Environment :: Plugins", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Library to provide a predicate dispatch for Django's generic views.\n\nRequirements\n-------------\n* Python 2.7 or later (not support 3.x)\n* Django 1.4 or later\n\nFeatures\n---------\nUsing this, You can create views call method in considering of value returned by predicate.\nFor example folloing view calls method in considering of request parameter::\n\n    class PonyView(PredicateProcessView):\n        dispatch_config = (\n                              ('get_corn_1', (RequestParamPredicate('corn=1'),)),\n                              ('get_corn', (RequestParamPredicate('corn'),)),\n                          )\n        def get_corn(self, request, *args, **kwargs):\n            return HttpResponse('pony with some corn')\n    \n        def get_corn_1(self, request, *args, **kwargs):\n            return HttpResponse('pony with unicorn')\n    \n        def get_default(self, request, *args, **kwargs):\n            return HttpResponse('pony')\n\nIn this case, It used:\n\n* beautifulpredicates.views.PredicateProcessView\n* beautifulpredicates.predicates.RequestParamPredicate\n\nHistory\n--------\n0.0.1 (2012-01-13)\n~~~~~~~~~~~~~~~~~~~\n* first release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hirokiky/django-beautifulpredicates/", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "django-beautifulpredicates", "package_url": "https://pypi.org/project/django-beautifulpredicates/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-beautifulpredicates/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/hirokiky/django-beautifulpredicates/"}, "release_url": "https://pypi.org/project/django-beautifulpredicates/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Library to provide a predicate dispatch for Django's generic views.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Library to provide a predicate dispatch for Django\u2019s generic views.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 2.7 or later (not support 3.x)</li>\n<li>Django 1.4 or later</li>\n</ul>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<p>Using this, You can create views call method in considering of value returned by predicate.\nFor example folloing view calls method in considering of request parameter:</p>\n<pre>class PonyView(PredicateProcessView):\n    dispatch_config = (\n                          ('get_corn_1', (RequestParamPredicate('corn=1'),)),\n                          ('get_corn', (RequestParamPredicate('corn'),)),\n                      )\n    def get_corn(self, request, *args, **kwargs):\n        return HttpResponse('pony with some corn')\n\n    def get_corn_1(self, request, *args, **kwargs):\n        return HttpResponse('pony with unicorn')\n\n    def get_default(self, request, *args, **kwargs):\n        return HttpResponse('pony')\n</pre>\n<p>In this case, It used:</p>\n<ul>\n<li>beautifulpredicates.views.PredicateProcessView</li>\n<li>beautifulpredicates.predicates.RequestParamPredicate</li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.0.1 (2012-01-13)</span></h2>\n<ul>\n<li>first release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 722957, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "274b6b86301bc2a2c1a27c8ee9339d25", "sha256": "99bd3884beb76a85546028eb7f0c53eef57c6bd14c2d7102df17fbd6a9f7e6a1"}, "downloads": -1, "filename": "django_beautifulpredicates-0.0.1-py2.7.egg", "has_sig": false, "md5_digest": "274b6b86301bc2a2c1a27c8ee9339d25", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 8154, "upload_time": "2013-01-13T08:48:35", "upload_time_iso_8601": "2013-01-13T08:48:35.481361Z", "url": "https://files.pythonhosted.org/packages/da/98/7fd85a8f39fe776991727500937069830731958454f2f40bcf2921f477b6/django_beautifulpredicates-0.0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad029bfa7f14e59e1c3b19d2935a5db3", "sha256": "6f3edb22bcff7f5995a93187eb5ce7ffcf0fdc0b8a8b138b095674b4910a83e7"}, "downloads": -1, "filename": "django-beautifulpredicates-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ad029bfa7f14e59e1c3b19d2935a5db3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2763, "upload_time": "2013-01-13T08:48:24", "upload_time_iso_8601": "2013-01-13T08:48:24.463821Z", "url": "https://files.pythonhosted.org/packages/c3/83/eda30163c4de7a919b768280cb4f12c6b2acfa282731c7a8d7f3fdd42716/django-beautifulpredicates-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "274b6b86301bc2a2c1a27c8ee9339d25", "sha256": "99bd3884beb76a85546028eb7f0c53eef57c6bd14c2d7102df17fbd6a9f7e6a1"}, "downloads": -1, "filename": "django_beautifulpredicates-0.0.1-py2.7.egg", "has_sig": false, "md5_digest": "274b6b86301bc2a2c1a27c8ee9339d25", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 8154, "upload_time": "2013-01-13T08:48:35", "upload_time_iso_8601": "2013-01-13T08:48:35.481361Z", "url": "https://files.pythonhosted.org/packages/da/98/7fd85a8f39fe776991727500937069830731958454f2f40bcf2921f477b6/django_beautifulpredicates-0.0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad029bfa7f14e59e1c3b19d2935a5db3", "sha256": "6f3edb22bcff7f5995a93187eb5ce7ffcf0fdc0b8a8b138b095674b4910a83e7"}, "downloads": -1, "filename": "django-beautifulpredicates-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ad029bfa7f14e59e1c3b19d2935a5db3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2763, "upload_time": "2013-01-13T08:48:24", "upload_time_iso_8601": "2013-01-13T08:48:24.463821Z", "url": "https://files.pythonhosted.org/packages/c3/83/eda30163c4de7a919b768280cb4f12c6b2acfa282731c7a8d7f3fdd42716/django-beautifulpredicates-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:27 2020"}