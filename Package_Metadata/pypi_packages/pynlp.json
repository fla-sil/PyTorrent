{"info": {"author": "Sina", "author_email": "s.aleyaasin@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# pynlp\n[![Build Status](https://travis-ci.org/sina-al/pynlp.svg?branch=master)](https://travis-ci.org/sina-al/pynlp)\n[![PyPI version](https://badge.fury.io/py/pynlp.svg)](https://badge.fury.io/py/pynlp)\n\nA *pythonic* wrapper for Stanford CoreNLP.\n\n<p align=\"center\">\n        <img src=\"https://media.giphy.com/media/l2QDNvOnIK6H2CRgY/giphy.gif\" >\n</p>\n\n## Description\nThis library provides a Python interface to [Stanford CoreNLP](https://stanfordnlp.github.io/CoreNLP/) built over [`corenlp_protobuf`](https://github.com/stanfordnlp/python-corenlp-protobuf). \n\n## Installation\n1. Download Stanford CoreNLP from the official [download page](https://stanfordnlp.github.io/CoreNLP/download.html).\n2. Unzip the file and set your `CORE_NLP` environment variable to point to the directory.\n3. Install `pynlp` from pip\n```\npip3 install pynlp\n```\n\n## Quick Start\n\n### Launch the server\nLauch the `StanfordCoreNLPServer` using the instruction given [here](https://stanfordnlp.github.io/CoreNLP/corenlp-server.html). *Alternatively*, simply run the module.\n```\npython3 -m pynlp\n```\n*By default, this lauches the server on localhost using port 9000 and 4gb ram for the JVM. Use the `--help` option for instruction on custom configurations.*\n\n### Example\n\nLet's start off with an excerpt from a CNN article.\n```python\ntext = ('GOP Sen. Rand Paul was assaulted in his home in Bowling Green, Kentucky, on Friday, '\n        'according to Kentucky State Police. State troopers responded to a call to the senator\\'s '\n        'residence at 3:21 p.m. Friday. Police arrested a man named Rene Albert Boucher, who they '\n        'allege \"intentionally assaulted\" Paul, causing him \"minor injury\". Boucher, 59, of Bowling '\n        'Green was charged with one count of fourth-degree assault. As of Saturday afternoon, he '\n        'was being held in the Warren County Regional Jail on a $5,000 bond.')\n```\n### Instantiate annotator\nHere we demonstrate the following annotators:\n* **Annotoators:** *tokenize, ssplit, pos, lemma, ner, entitymentions, coref, sentiment, quote, openie*\n* **Options:** *openie.resolve_coref*\n```python\nfrom pynlp import StanfordCoreNLP\n\nannotators = 'tokenize, ssplit, pos, lemma, ner, entitymentions, coref, sentiment, quote, openie'\noptions = {'openie.resolve_coref': True}\n\nnlp = StanfordCoreNLP(annotators=annotators, options=options)\n\n```\n### Annotate text\nThe `nlp` instance is callable. Use it to annotate the text and return a `Document` object.\n```python\ndocument = nlp(text)\n\nprint(document) # prints 'text'\n```\n#### Sentence splitting\nLet's test the *ssplit* annotator. A `Document` object iterates over its `Sentence` objects.\n```python\nfor index, sentence in enumerate(document):\n    print(index, sentence, sep=' )')\n```\nOutput:\n```\n0) GOP Sen. Rand Paul was assaulted in his home in Bowling Green, Kentucky, on Friday, according to Kentucky State Police.\n1) State troopers responded to a call to the senator's residence at 3:21 p.m. Friday.\n2) Police arrested a man named Rene Albert Boucher, who they allege \"intentionally assaulted\" Paul, causing him \"minor injury\".\n3) Boucher, 59, of Bowling Green was charged with one count of fourth-degree assault.\n4) As of Saturday afternoon, he was being held in the Warren County Regional Jail on a $5,000 bond.\n```\n#### Named entity recognition\nHow about finding all the people mentioned in the document?\n```python\n[str(entity) for entity in document.entities if entity.type == 'PERSON']\n```\nOutput:\n```\nOut[2]: ['Rand Paul', 'Rene Albert Boucher', 'Paul', 'Boucher']\n```\nWe may use named entities on a sentence level too.\n```python\nfirst_sentence = document[0]\nfor entity in first_sentence.entities:\n    print(entity, '({})'.format(entity.type))\n```\nOutput:\n```\nGOP (ORGANIZATION)\nRand Paul (PERSON)\nBowling Green (LOCATION)\nKentucky (LOCATION)\nFriday (DATE)\nKentucky State Police (ORGANIZATION)\n```\n#### Part-of-speech tagging\nLet's find all the 'VB' tags in the first sentence. A `Sentence` object iterates over `Token` objects.\n```python\nfor token in first_sentence:\n    if 'VB' in token.pos:\n        print(token, token.pos)\n```\nOutput:\n```\nwas VBD\nassaulted VBN\naccording VBG\n```\n#### Lemmatization\nUsing the same words, lets see the lemmas.\n```python\nfor token in first_sentence:\n    if 'VB' in token.pos:\n       print(token, '->', token.lemma)\n```\nOutput:\n```\nwas -> be\nassaulted -> assault\naccording -> accord\n```\n#### Coreference resultion\nLet's use pynlp to find the first `CorefChain` in the text.\n```python\nchain = document.coref_chains[0]\nprint(chain)\n```\nOutput:\n```\n((GOP Sen. Rand Paul))-[id=4] was assaulted in (his)-[id=5] home in Bowling Green, Kentucky, on Friday, according to Kentucky State Police.\nState troopers responded to a call to (the senator's)-[id=10] residence at 3:21 p.m. Friday.\nPolice arrested a man named Rene Albert Boucher, who they allege \"(intentionally assaulted\" Paul)-[id=16], causing him \"minor injury.\n```\nIn the string representation, coreferences are marked with parenthesis and the referent with double parenthesis.\nEach is also labelled with a `coref_id`. Let's have a closer look at the referent.\n```python\nref = chain.referent\nprint('Coreference: {}\\n'.format(ref))\n\nfor attr in 'type', 'number', 'animacy', 'gender':\n    print(attr,  getattr(ref, attr), sep=': ')\n\n# Note that we can also index coreferences by id\nassert chain[4].is_referent\n```\nOutput:\n```\nCoreference: Police\n\ntype: PROPER\nnumber: SINGULAR\nanimacy: ANIMATE\ngender: UNKNOWN\n```\n\n#### Quotes\nExtracting quotes from the text is simple.\n```python\nprint(document.quotes)\n```\nOutput:\n```\n[<Quote: \"intentionally assaulted\">, <Quote: \"minor injury\">]\n```\n\n#### TODO (annotation wrappers):\n- [x] ssplit\n- [ ] ner\n- [x] pos\n- [x] lemma\n- [x] coref\n- [x] quote\n- [ ] quote.attribution\n- [ ] parse\n- [ ] depparse\n- [x] entitymentions\n- [ ] openie\n- [ ] sentiment\n- [ ] relation\n- [ ] kbp\n- [ ] entitylink\n- [ ] 'options' examples i.e openie.resolve_coref\n\n### Saving annotations\n#### Write\nA pynlp document can be saved as a byte string.\n```python\nwith open('annotation.dat', 'wb') as file:\n    file.write(document.to_bytes())\n```\n#### Read\nTo load a pynlp document, instantiate a `Document` with the `from_bytes` class method.\n```python\nfrom pynlp import Document\n\nwith open('annotation.dat', 'rb') as file:\n    document = Document.from_bytes(file.read())\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/sina-al/pynlp", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pynlp", "package_url": "https://pypi.org/project/pynlp/", "platform": "", "project_url": "https://pypi.org/project/pynlp/", "project_urls": {"Homepage": "http://github.com/sina-al/pynlp"}, "release_url": "https://pypi.org/project/pynlp/0.4.2/", "requires_dist": ["requests", "protobuf"], "requires_python": "", "summary": "Python wrapper for Stanford CoreNLP", "version": "0.4.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pynlp</h1>\n<p><a href=\"https://travis-ci.org/sina-al/pynlp\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a7702499087d6ec537535c9e35f4dd40b2e78b81/68747470733a2f2f7472617669732d63692e6f72672f73696e612d616c2f70796e6c702e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/pynlp\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a74a90aaa47097df459ee76a29cea39592f99913/68747470733a2f2f62616467652e667572792e696f2f70792f70796e6c702e737667\"></a></p>\n<p>A <em>pythonic</em> wrapper for Stanford CoreNLP.</p>\n<p align=\"center\">\n        <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/242d13f6186c55626224715dd74f84198e05a4dd/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f6c3251444e764f6e494b364832435267592f67697068792e676966\">\n</p>\n<h2>Description</h2>\n<p>This library provides a Python interface to <a href=\"https://stanfordnlp.github.io/CoreNLP/\" rel=\"nofollow\">Stanford CoreNLP</a> built over <a href=\"https://github.com/stanfordnlp/python-corenlp-protobuf\" rel=\"nofollow\"><code>corenlp_protobuf</code></a>.</p>\n<h2>Installation</h2>\n<ol>\n<li>Download Stanford CoreNLP from the official <a href=\"https://stanfordnlp.github.io/CoreNLP/download.html\" rel=\"nofollow\">download page</a>.</li>\n<li>Unzip the file and set your <code>CORE_NLP</code> environment variable to point to the directory.</li>\n<li>Install <code>pynlp</code> from pip</li>\n</ol>\n<pre><code>pip3 install pynlp\n</code></pre>\n<h2>Quick Start</h2>\n<h3>Launch the server</h3>\n<p>Lauch the <code>StanfordCoreNLPServer</code> using the instruction given <a href=\"https://stanfordnlp.github.io/CoreNLP/corenlp-server.html\" rel=\"nofollow\">here</a>. <em>Alternatively</em>, simply run the module.</p>\n<pre><code>python3 -m pynlp\n</code></pre>\n<p><em>By default, this lauches the server on localhost using port 9000 and 4gb ram for the JVM. Use the <code>--help</code> option for instruction on custom configurations.</em></p>\n<h3>Example</h3>\n<p>Let's start off with an excerpt from a CNN article.</p>\n<pre><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'GOP Sen. Rand Paul was assaulted in his home in Bowling Green, Kentucky, on Friday, '</span>\n        <span class=\"s1\">'according to Kentucky State Police. State troopers responded to a call to the senator</span><span class=\"se\">\\'</span><span class=\"s1\">s '</span>\n        <span class=\"s1\">'residence at 3:21 p.m. Friday. Police arrested a man named Rene Albert Boucher, who they '</span>\n        <span class=\"s1\">'allege \"intentionally assaulted\" Paul, causing him \"minor injury\". Boucher, 59, of Bowling '</span>\n        <span class=\"s1\">'Green was charged with one count of fourth-degree assault. As of Saturday afternoon, he '</span>\n        <span class=\"s1\">'was being held in the Warren County Regional Jail on a $5,000 bond.'</span><span class=\"p\">)</span>\n</pre>\n<h3>Instantiate annotator</h3>\n<p>Here we demonstrate the following annotators:</p>\n<ul>\n<li><strong>Annotoators:</strong> <em>tokenize, ssplit, pos, lemma, ner, entitymentions, coref, sentiment, quote, openie</em></li>\n<li><strong>Options:</strong> <em>openie.resolve_coref</em></li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pynlp</span> <span class=\"kn\">import</span> <span class=\"n\">StanfordCoreNLP</span>\n\n<span class=\"n\">annotators</span> <span class=\"o\">=</span> <span class=\"s1\">'tokenize, ssplit, pos, lemma, ner, entitymentions, coref, sentiment, quote, openie'</span>\n<span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'openie.resolve_coref'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n\n<span class=\"n\">nlp</span> <span class=\"o\">=</span> <span class=\"n\">StanfordCoreNLP</span><span class=\"p\">(</span><span class=\"n\">annotators</span><span class=\"o\">=</span><span class=\"n\">annotators</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"o\">=</span><span class=\"n\">options</span><span class=\"p\">)</span>\n</pre>\n<h3>Annotate text</h3>\n<p>The <code>nlp</code> instance is callable. Use it to annotate the text and return a <code>Document</code> object.</p>\n<pre><span class=\"n\">document</span> <span class=\"o\">=</span> <span class=\"n\">nlp</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">document</span><span class=\"p\">)</span> <span class=\"c1\"># prints 'text'</span>\n</pre>\n<h4>Sentence splitting</h4>\n<p>Let's test the <em>ssplit</em> annotator. A <code>Document</code> object iterates over its <code>Sentence</code> objects.</p>\n<pre><span class=\"k\">for</span> <span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">sentence</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">document</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">sentence</span><span class=\"p\">,</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s1\">' )'</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><code>0) GOP Sen. Rand Paul was assaulted in his home in Bowling Green, Kentucky, on Friday, according to Kentucky State Police.\n1) State troopers responded to a call to the senator's residence at 3:21 p.m. Friday.\n2) Police arrested a man named Rene Albert Boucher, who they allege \"intentionally assaulted\" Paul, causing him \"minor injury\".\n3) Boucher, 59, of Bowling Green was charged with one count of fourth-degree assault.\n4) As of Saturday afternoon, he was being held in the Warren County Regional Jail on a $5,000 bond.\n</code></pre>\n<h4>Named entity recognition</h4>\n<p>How about finding all the people mentioned in the document?</p>\n<pre><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">entity</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">entity</span> <span class=\"ow\">in</span> <span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">entities</span> <span class=\"k\">if</span> <span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s1\">'PERSON'</span><span class=\"p\">]</span>\n</pre>\n<p>Output:</p>\n<pre><code>Out[2]: ['Rand Paul', 'Rene Albert Boucher', 'Paul', 'Boucher']\n</code></pre>\n<p>We may use named entities on a sentence level too.</p>\n<pre><span class=\"n\">first_sentence</span> <span class=\"o\">=</span> <span class=\"n\">document</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"k\">for</span> <span class=\"n\">entity</span> <span class=\"ow\">in</span> <span class=\"n\">first_sentence</span><span class=\"o\">.</span><span class=\"n\">entities</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">entity</span><span class=\"p\">,</span> <span class=\"s1\">'(</span><span class=\"si\">{}</span><span class=\"s1\">)'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">))</span>\n</pre>\n<p>Output:</p>\n<pre><code>GOP (ORGANIZATION)\nRand Paul (PERSON)\nBowling Green (LOCATION)\nKentucky (LOCATION)\nFriday (DATE)\nKentucky State Police (ORGANIZATION)\n</code></pre>\n<h4>Part-of-speech tagging</h4>\n<p>Let's find all the 'VB' tags in the first sentence. A <code>Sentence</code> object iterates over <code>Token</code> objects.</p>\n<pre><span class=\"k\">for</span> <span class=\"n\">token</span> <span class=\"ow\">in</span> <span class=\"n\">first_sentence</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"s1\">'VB'</span> <span class=\"ow\">in</span> <span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">pos</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">pos</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><code>was VBD\nassaulted VBN\naccording VBG\n</code></pre>\n<h4>Lemmatization</h4>\n<p>Using the same words, lets see the lemmas.</p>\n<pre><span class=\"k\">for</span> <span class=\"n\">token</span> <span class=\"ow\">in</span> <span class=\"n\">first_sentence</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"s1\">'VB'</span> <span class=\"ow\">in</span> <span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">pos</span><span class=\"p\">:</span>\n       <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">,</span> <span class=\"s1\">'-&gt;'</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">lemma</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><code>was -&gt; be\nassaulted -&gt; assault\naccording -&gt; accord\n</code></pre>\n<h4>Coreference resultion</h4>\n<p>Let's use pynlp to find the first <code>CorefChain</code> in the text.</p>\n<pre><span class=\"n\">chain</span> <span class=\"o\">=</span> <span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">coref_chains</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">chain</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><code>((GOP Sen. Rand Paul))-[id=4] was assaulted in (his)-[id=5] home in Bowling Green, Kentucky, on Friday, according to Kentucky State Police.\nState troopers responded to a call to (the senator's)-[id=10] residence at 3:21 p.m. Friday.\nPolice arrested a man named Rene Albert Boucher, who they allege \"(intentionally assaulted\" Paul)-[id=16], causing him \"minor injury.\n</code></pre>\n<p>In the string representation, coreferences are marked with parenthesis and the referent with double parenthesis.\nEach is also labelled with a <code>coref_id</code>. Let's have a closer look at the referent.</p>\n<pre><span class=\"n\">ref</span> <span class=\"o\">=</span> <span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">referent</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Coreference: </span><span class=\"si\">{}</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">ref</span><span class=\"p\">))</span>\n\n<span class=\"k\">for</span> <span class=\"n\">attr</span> <span class=\"ow\">in</span> <span class=\"s1\">'type'</span><span class=\"p\">,</span> <span class=\"s1\">'number'</span><span class=\"p\">,</span> <span class=\"s1\">'animacy'</span><span class=\"p\">,</span> <span class=\"s1\">'gender'</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">attr</span><span class=\"p\">,</span>  <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">ref</span><span class=\"p\">,</span> <span class=\"n\">attr</span><span class=\"p\">),</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s1\">': '</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Note that we can also index coreferences by id</span>\n<span class=\"k\">assert</span> <span class=\"n\">chain</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">is_referent</span>\n</pre>\n<p>Output:</p>\n<pre><code>Coreference: Police\n\ntype: PROPER\nnumber: SINGULAR\nanimacy: ANIMATE\ngender: UNKNOWN\n</code></pre>\n<h4>Quotes</h4>\n<p>Extracting quotes from the text is simple.</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">quotes</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><code>[&lt;Quote: \"intentionally assaulted\"&gt;, &lt;Quote: \"minor injury\"&gt;]\n</code></pre>\n<h4>TODO (annotation wrappers):</h4>\n<ul>\n<li>[x] ssplit</li>\n<li>[ ] ner</li>\n<li>[x] pos</li>\n<li>[x] lemma</li>\n<li>[x] coref</li>\n<li>[x] quote</li>\n<li>[ ] quote.attribution</li>\n<li>[ ] parse</li>\n<li>[ ] depparse</li>\n<li>[x] entitymentions</li>\n<li>[ ] openie</li>\n<li>[ ] sentiment</li>\n<li>[ ] relation</li>\n<li>[ ] kbp</li>\n<li>[ ] entitylink</li>\n<li>[ ] 'options' examples i.e openie.resolve_coref</li>\n</ul>\n<h3>Saving annotations</h3>\n<h4>Write</h4>\n<p>A pynlp document can be saved as a byte string.</p>\n<pre><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'annotation.dat'</span><span class=\"p\">,</span> <span class=\"s1\">'wb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">file</span><span class=\"p\">:</span>\n    <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">to_bytes</span><span class=\"p\">())</span>\n</pre>\n<h4>Read</h4>\n<p>To load a pynlp document, instantiate a <code>Document</code> with the <code>from_bytes</code> class method.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pynlp</span> <span class=\"kn\">import</span> <span class=\"n\">Document</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'annotation.dat'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">file</span><span class=\"p\">:</span>\n    <span class=\"n\">document</span> <span class=\"o\">=</span> <span class=\"n\">Document</span><span class=\"o\">.</span><span class=\"n\">from_bytes</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n</pre>\n\n          </div>"}, "last_serial": 4016303, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "c1b361f0ecd70ef09b367b0d66d0feec", "sha256": "a559ee6a6f08ce55d717290f6ec406cfc406e9408fbb83d99ba9307903cea945"}, "downloads": -1, "filename": "pynlp-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c1b361f0ecd70ef09b367b0d66d0feec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4659, "upload_time": "2017-10-30T18:58:22", "upload_time_iso_8601": "2017-10-30T18:58:22.348691Z", "url": "https://files.pythonhosted.org/packages/a3/8f/f475861b81a5eba638af130f80600e67f7d3f46ebc732012ff1a7e318948/pynlp-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42dc831fdce61a8c1717e096dfc4db2a", "sha256": "343ce876bef69208609c3396b2e6af55efc815b46faf868cc0b4f8854a578b5f"}, "downloads": -1, "filename": "pynlp-0.2.tar.gz", "has_sig": false, "md5_digest": "42dc831fdce61a8c1717e096dfc4db2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2750, "upload_time": "2017-10-30T18:58:23", "upload_time_iso_8601": "2017-10-30T18:58:23.285204Z", "url": "https://files.pythonhosted.org/packages/1d/16/6d3c836fcc0779f4e42ab20133ba0ddf74dc0b826fbd2b30101875ccd9b2/pynlp-0.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d893101ee869b7b4ed7247d68f67356e", "sha256": "3ede75f107abd35b0b0bf98105603ccc5e61d9a87688581f739bc2b2a4dad200"}, "downloads": -1, "filename": "pynlp-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d893101ee869b7b4ed7247d68f67356e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4685, "upload_time": "2017-10-30T19:03:34", "upload_time_iso_8601": "2017-10-30T19:03:34.285994Z", "url": "https://files.pythonhosted.org/packages/53/97/f53614c5bbc222754b080d01b6c06b06ee1c308b8c3f7e4d7f2614ef67c5/pynlp-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30d2c4d465050b22af7eb883d94080c4", "sha256": "1b702434a715803d0ee1e70a47bf604f5d9c8fb2a96a0f87c465f7cd654db8cf"}, "downloads": -1, "filename": "pynlp-0.2.0.tar.gz", "has_sig": false, "md5_digest": "30d2c4d465050b22af7eb883d94080c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2752, "upload_time": "2017-10-30T19:03:35", "upload_time_iso_8601": "2017-10-30T19:03:35.453330Z", "url": "https://files.pythonhosted.org/packages/d8/dc/bbb42299930374511ff41cbdb3fe1e8e049e04fe7e9fd01d693c5ce2b8aa/pynlp-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "7b889d291b0e31a132cd799210a02c4e", "sha256": "dc22c59fd1c0385be4bcfa8fce904d9c10cb35d57da0d7221f1e652479f340c6"}, "downloads": -1, "filename": "pynlp-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7b889d291b0e31a132cd799210a02c4e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6506, "upload_time": "2017-11-05T11:21:24", "upload_time_iso_8601": "2017-11-05T11:21:24.182092Z", "url": "https://files.pythonhosted.org/packages/80/9b/238372b0e0fccd13c7e45345c3e640636f45772cba8ba8a3e7e74f60670f/pynlp-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "900ea0284f75d7395a81adb1ef3dcc34", "sha256": "4027c4a92ce542f05ec1ec2f521e9d78d4fc30669fbf9d330c69ee2041cec544"}, "downloads": -1, "filename": "pynlp-0.3.0.tar.gz", "has_sig": false, "md5_digest": "900ea0284f75d7395a81adb1ef3dcc34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4529, "upload_time": "2017-11-05T11:21:25", "upload_time_iso_8601": "2017-11-05T11:21:25.771914Z", "url": "https://files.pythonhosted.org/packages/ca/70/9a1a1c5fc072c0f1ffe4d021ddc6c0c3bd9be27b7a679d37675d86542c7c/pynlp-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "a4f2dc411a08e6a56bb842de2a1fb80a", "sha256": "089605d95c36aec91f75c81b06d55e022b61ea64278dfb7f7bf7c54ddcc4bba0"}, "downloads": -1, "filename": "pynlp-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a4f2dc411a08e6a56bb842de2a1fb80a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6513, "upload_time": "2017-11-05T11:26:16", "upload_time_iso_8601": "2017-11-05T11:26:16.968754Z", "url": "https://files.pythonhosted.org/packages/4b/18/7be13ae114d3b454b38fe4ba96bd06e51bc71ff3617963b40215e4eb4373/pynlp-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0787fa9beb477e76ad072cfec5bf5d4", "sha256": "658a246ad0b236a02099910af3d7e82677f422c774416a8d6ff10afaae1fd298"}, "downloads": -1, "filename": "pynlp-0.3.1.tar.gz", "has_sig": false, "md5_digest": "a0787fa9beb477e76ad072cfec5bf5d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4540, "upload_time": "2017-11-05T11:26:18", "upload_time_iso_8601": "2017-11-05T11:26:18.565285Z", "url": "https://files.pythonhosted.org/packages/0e/7a/f2b411232a12033d7d7aa2b2a293251118133b16054382f3097d5baf60cd/pynlp-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "204c2648a45174c5868b0562fdebf2d9", "sha256": "fa7e7d96c27a434b71483c1f698cc71359ba88fb8a2b7ae535079aa32981a64e"}, "downloads": -1, "filename": "pynlp-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "204c2648a45174c5868b0562fdebf2d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6269, "upload_time": "2017-11-05T16:20:47", "upload_time_iso_8601": "2017-11-05T16:20:47.010522Z", "url": "https://files.pythonhosted.org/packages/93/b2/22b6a18301a9a48d2017eb6c1f967b80846f8e10959603b352933c14b4ec/pynlp-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e6e7a7d248c58204fe3d48424f35698", "sha256": "ca7cc3cd4f69219c0c87f16f7e297f4f192246e17e739fa45d6593b8f003734d"}, "downloads": -1, "filename": "pynlp-0.3.2.tar.gz", "has_sig": false, "md5_digest": "8e6e7a7d248c58204fe3d48424f35698", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4315, "upload_time": "2017-11-05T16:20:49", "upload_time_iso_8601": "2017-11-05T16:20:49.706839Z", "url": "https://files.pythonhosted.org/packages/d3/47/1c6c0cd4dff4bf1c2b5accb33779a84e0e27f9c11fd390f2065b971fcb5a/pynlp-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "771929917b1f6ac15fc905e73a9fcca4", "sha256": "b42c0b0ea51220ef3fc4158962f311ef92f266829f1cd137c36c9929b4f9745d"}, "downloads": -1, "filename": "pynlp-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "771929917b1f6ac15fc905e73a9fcca4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6183, "upload_time": "2017-11-05T17:01:30", "upload_time_iso_8601": "2017-11-05T17:01:30.545196Z", "url": "https://files.pythonhosted.org/packages/9f/46/841461b306b8d2d884d7376557ccfb89659934c61f593d82cebc29e9daae/pynlp-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "961a68bc0ddad54b54d98ba942682c14", "sha256": "a790afc69cc2b707e15e2d72c336871d20e830187deb8d8add3634821a23bb8f"}, "downloads": -1, "filename": "pynlp-0.3.3.tar.gz", "has_sig": false, "md5_digest": "961a68bc0ddad54b54d98ba942682c14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4247, "upload_time": "2017-11-05T17:01:32", "upload_time_iso_8601": "2017-11-05T17:01:32.873720Z", "url": "https://files.pythonhosted.org/packages/a4/43/cf3d85d493d816637d4ca24b50f904cd2812b450ba308545be1f08a0ce44/pynlp-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "a460565ae76b48294f99b5ea3d77c44e", "sha256": "12ad9797a1e5ed9c2c5b0e381a413d6cfe01943d6f2fc39fc391a54d20894926"}, "downloads": -1, "filename": "pynlp-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a460565ae76b48294f99b5ea3d77c44e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6255, "upload_time": "2017-11-08T18:18:09", "upload_time_iso_8601": "2017-11-08T18:18:09.536861Z", "url": "https://files.pythonhosted.org/packages/d3/75/b197513037484d30f3fdae60ff3097852f0c080c894d74e0e8ea8e4e12f9/pynlp-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "edb6da368755ac62b212612c9f15f886", "sha256": "6c4c467ab27f1122fff439b15f7c7a39bf4af7b1a21c3ab29483c0dea1cfb7e3"}, "downloads": -1, "filename": "pynlp-0.3.4.tar.gz", "has_sig": false, "md5_digest": "edb6da368755ac62b212612c9f15f886", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4282, "upload_time": "2017-11-08T18:18:11", "upload_time_iso_8601": "2017-11-08T18:18:11.958552Z", "url": "https://files.pythonhosted.org/packages/55/c7/82f67ba9e06a1b2cd4a5d68d80ff57699fb50aa349cb995ed8db752f43ec/pynlp-0.3.4.tar.gz", "yanked": false}], "0.3.4.1": [{"comment_text": "", "digests": {"md5": "97d5492611177ae9ce595b60cc07151a", "sha256": "93a06a894eb5be12575747290cf62520598cd3bc9fdfcd3ba1ce9f528613b558"}, "downloads": -1, "filename": "pynlp-0.3.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "97d5492611177ae9ce595b60cc07151a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6280, "upload_time": "2017-11-08T19:16:41", "upload_time_iso_8601": "2017-11-08T19:16:41.223783Z", "url": "https://files.pythonhosted.org/packages/ff/78/f1754dfbd89dbad3f23e4a98c9b87c6d04c85d6573fbf86ffa9bc4dc943c/pynlp-0.3.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d37ee27a2859ef4d4d666735e7222315", "sha256": "547e5b1162688920c3127a79e4805ee960b92e64b1dcf9fba3e398e89d789724"}, "downloads": -1, "filename": "pynlp-0.3.4.1.tar.gz", "has_sig": false, "md5_digest": "d37ee27a2859ef4d4d666735e7222315", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4278, "upload_time": "2017-11-08T19:16:42", "upload_time_iso_8601": "2017-11-08T19:16:42.946041Z", "url": "https://files.pythonhosted.org/packages/20/64/231f8a295493afe0451503b3d97e7eb7cb5f6f128521d0293634a57b8a01/pynlp-0.3.4.1.tar.gz", "yanked": false}], "0.3.4.2": [{"comment_text": "", "digests": {"md5": "ed835a2f9cd051249e2b263c048507e2", "sha256": "d649850a963702397c1f7fccfae975449ff7a8eb15d78853a4ebb55183942c3e"}, "downloads": -1, "filename": "pynlp-0.3.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ed835a2f9cd051249e2b263c048507e2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6341, "upload_time": "2017-11-12T10:22:33", "upload_time_iso_8601": "2017-11-12T10:22:33.547311Z", "url": "https://files.pythonhosted.org/packages/65/8a/8add83ae1b5fcd1909ded8c488343e7828a2e78cd4ac1f5b465dfb8f596a/pynlp-0.3.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "093d0a2f5419d7d21e65d2da361e7c12", "sha256": "2dbfd8a84da421672bf1bc2745a9767467d682afa0566d52b1c379cf9b11faa7"}, "downloads": -1, "filename": "pynlp-0.3.4.2.tar.gz", "has_sig": false, "md5_digest": "093d0a2f5419d7d21e65d2da361e7c12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4334, "upload_time": "2017-11-12T10:22:34", "upload_time_iso_8601": "2017-11-12T10:22:34.841932Z", "url": "https://files.pythonhosted.org/packages/5d/c2/049111f7f09a2b5f1af2358344be4c7582066219297c5f2f7b2cf33d7d32/pynlp-0.3.4.2.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "f5c1dfd9a11eadbac04b7a15db1bfef0", "sha256": "ae3a8c9dc6955d4addb1ab9e329d23f23c0ee8d923cedad8d5c22ae8629b98fb"}, "downloads": -1, "filename": "pynlp-0.3.5-py3-none-any.whl", "has_sig": false, "md5_digest": "f5c1dfd9a11eadbac04b7a15db1bfef0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7394, "upload_time": "2017-11-26T02:20:03", "upload_time_iso_8601": "2017-11-26T02:20:03.174263Z", "url": "https://files.pythonhosted.org/packages/33/c5/4a8982ca4f970c06cc9b2a6496ffd6047e1ce4c33a3f6d8a53e891e947b2/pynlp-0.3.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a11f4f4f47e8429564cc22d97046a869", "sha256": "166e460f35f1ac70bc534dbdb8f9e78c95fb62f0bb148344ed53c26878e46ea8"}, "downloads": -1, "filename": "pynlp-0.3.5.tar.gz", "has_sig": false, "md5_digest": "a11f4f4f47e8429564cc22d97046a869", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5429, "upload_time": "2017-11-26T02:20:05", "upload_time_iso_8601": "2017-11-26T02:20:05.338389Z", "url": "https://files.pythonhosted.org/packages/06/c4/3410a58c6e6ff84676d7a7a6c5672e1aa90a3d5b4449ff7f6c2610507f12/pynlp-0.3.5.tar.gz", "yanked": false}], "0.3.9": [{"comment_text": "", "digests": {"md5": "cf9ed34bc08bb8c7fb95da2fefca0534", "sha256": "c5dff45b8b0aa06881c8f072252c2a565b889878a07d8fc3769ba303746e02d8"}, "downloads": -1, "filename": "pynlp-0.3.9.tar.gz", "has_sig": false, "md5_digest": "cf9ed34bc08bb8c7fb95da2fefca0534", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5123, "upload_time": "2018-04-14T20:22:38", "upload_time_iso_8601": "2018-04-14T20:22:38.189235Z", "url": "https://files.pythonhosted.org/packages/91/91/82c38007565432a7a1e59ab81ec4d0c25d61ebda80177ce4378e076fc3f0/pynlp-0.3.9.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "0b146384487e31927f2db5b41d449559", "sha256": "4f394f772286d0386b13180671b1d153539631526468c398c9dc414d1ac94544"}, "downloads": -1, "filename": "pynlp-0.4.0.tar.gz", "has_sig": false, "md5_digest": "0b146384487e31927f2db5b41d449559", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18622, "upload_time": "2018-04-16T21:15:52", "upload_time_iso_8601": "2018-04-16T21:15:52.797574Z", "url": "https://files.pythonhosted.org/packages/56/74/25efb0de045ed3917b225a4ae61153a1cd8288d08120cf7e55d9ba5d7130/pynlp-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "7c6751b02e154d437983f88d86f9f1be", "sha256": "7472f33f547dae77242406691c32be720669d92aa535188a5ca85c4a4d35b892"}, "downloads": -1, "filename": "pynlp-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7c6751b02e154d437983f88d86f9f1be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23053, "upload_time": "2018-06-29T18:20:29", "upload_time_iso_8601": "2018-06-29T18:20:29.184015Z", "url": "https://files.pythonhosted.org/packages/00/32/038febfbd9c7be7e904f5e6a88c78aa6cdddd4d9c4773ac524f84db45b04/pynlp-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ddae522d398c830034d51e8f35f24096", "sha256": "84fb1fc9d1b416f24d99f37b6b2929bd06cfe10f8ca0fb78823734068b429c4d"}, "downloads": -1, "filename": "pynlp-0.4.1.tar.gz", "has_sig": false, "md5_digest": "ddae522d398c830034d51e8f35f24096", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24281, "upload_time": "2018-06-29T18:20:31", "upload_time_iso_8601": "2018-06-29T18:20:31.101120Z", "url": "https://files.pythonhosted.org/packages/27/1d/817ad98b1da655f0f6b4b1e1dda30524bbd798eaed0e6514686bfb316992/pynlp-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "1a4eabf353cf3920dd475ac7daa28ff5", "sha256": "00975c420e1333460870f406b880595943dd261ad11cc6f4884598eaa59c9cc7"}, "downloads": -1, "filename": "pynlp-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1a4eabf353cf3920dd475ac7daa28ff5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23079, "upload_time": "2018-06-29T18:22:35", "upload_time_iso_8601": "2018-06-29T18:22:35.892985Z", "url": "https://files.pythonhosted.org/packages/87/9a/dcc4eccb5dddd7091314587084ac89e7979f82fce7d0ae01e44af3382fad/pynlp-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2bb77f9605e24b81aa7e1dec3d4397fa", "sha256": "4bacc56d3f0099abcf1179f5115e13329788297e83cd77664ebe045a4de4073e"}, "downloads": -1, "filename": "pynlp-0.4.2.tar.gz", "has_sig": false, "md5_digest": "2bb77f9605e24b81aa7e1dec3d4397fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24334, "upload_time": "2018-06-29T18:22:38", "upload_time_iso_8601": "2018-06-29T18:22:38.206323Z", "url": "https://files.pythonhosted.org/packages/02/1b/b60a48d9b9b2b79637044b48637a13e7e0dca776347a9a3c8e3443088544/pynlp-0.4.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1a4eabf353cf3920dd475ac7daa28ff5", "sha256": "00975c420e1333460870f406b880595943dd261ad11cc6f4884598eaa59c9cc7"}, "downloads": -1, "filename": "pynlp-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1a4eabf353cf3920dd475ac7daa28ff5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23079, "upload_time": "2018-06-29T18:22:35", "upload_time_iso_8601": "2018-06-29T18:22:35.892985Z", "url": "https://files.pythonhosted.org/packages/87/9a/dcc4eccb5dddd7091314587084ac89e7979f82fce7d0ae01e44af3382fad/pynlp-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2bb77f9605e24b81aa7e1dec3d4397fa", "sha256": "4bacc56d3f0099abcf1179f5115e13329788297e83cd77664ebe045a4de4073e"}, "downloads": -1, "filename": "pynlp-0.4.2.tar.gz", "has_sig": false, "md5_digest": "2bb77f9605e24b81aa7e1dec3d4397fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24334, "upload_time": "2018-06-29T18:22:38", "upload_time_iso_8601": "2018-06-29T18:22:38.206323Z", "url": "https://files.pythonhosted.org/packages/02/1b/b60a48d9b9b2b79637044b48637a13e7e0dca776347a9a3c8e3443088544/pynlp-0.4.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:10 2020"}