{"info": {"author": "Sid Premkumar", "author_email": "sid.premkumar@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Local Variable Manager (lvmanager)\n# What does it do?\nThis is a simple CLI script to encrypt, store, and set environmental variables such as certs, ,keys or tokens.\n```shell script\nusage: CLI for managing and maintaining tokens and key/certs.\n\noptional arguments:\n  -h, --help      show this help message and exit\n  -add ADD        Adds a file to lcm [--name required]\n  -delete DELETE  Delete a saved file [--name required]\n  -setenv SETENV  Expose a saved file as an environmental variable [--name\n                  required]\n  -name NAME      Name to be used\n  -ls             Display what currently stored\n  -cleanup        Clean up exposed keys\n  -e              Use encryption for values when storing or setting the\n                  environment [LVMANAGER_PW is needed as an environmental\n                  variable]\n  -getkey         Get a new encryption key\n```\n### View stored files \n```shell script\nlvmanager -ls\n```\n### Add\n```shell script\nlvmanager -add NAME_OF_FILE.key -name project/NAME\n```\n`lvmanager` will automatically create projects if they are already not created. \nThe `-e` flag will encrypt data and will need the environmental variable `LV_MANAGER` to be configured.\n\nNote: If you save a `.lvmanager` file, when you `setenv` the contents of the file will be exposed, not a pointer to the file.\n### Delete\n```shell script\nlvmanager -delete project/NAME\n```\n### Export single variable\n```shell script\nlvmanager -setenv project/NAME -name APP_TOKEN -e \n```\n`lvmanager` will expose the stored value NAME as APP_TOKEN and will copy the relevant commands to the clipboard to the user to manually set. \nThe `-e` flag will encrypt data and will need the environmental variable `LV_MANAGER` to be configured.\n### Export projects variables\n```shell script\nlvmanager -setenv project/ -e\n```\n`lvmanager` will expose all values under project/ as the NAME they are stored as (in uppercase).\nThe `-e` flag will encrypt data and will need the environmental variable `LV_MANAGER` to be configured.\n### Get key\n```shell script\nlvmanager -getkey\n```\nThe export command will be copied to the clipboard and will need to be set by the user. Don't lose this key!\n\n## How to Install\nYou can install `lvmanager` through the setup.py file:\n```shell script\npython3 setup.py install\n```\nPip config coming soon\n\n## Example\n0) Get and export key for encryption:\n   ```shell script\n    lvmanager -getkey\n    ```\n   And now in your clipboard you should be able to expose your key:\n   ```shell script\n    export LVMANAGER_PW=12345..\n    ```\n1) Add the key `test.key` as token under project/ with encryption enabled:\n    ```shell script\n    lvmanager -add token.lvmanager -name project/token -e\n    ```\n2) See what `lvmanager` has stored:\n    ```shell script\n    lvmanager -ls\n    ```\n   And we can see:\n   ```shell script\n    (venv) lvmanager -ls                  \n    project/\n        key.key\n    ```\n3) Expose our key and get the export command:\n    ```shell script\n    lvmanager -setenv project/key -name KEY -e\n    ```\n4) Export our environmental variable:\n    ```shell script\n    export KEY=some/path/to/.exposed/project/key.key\n    ```\n5) Delete our key from our database:\n    ```shell script\n    lvmanager -delete project/key\n    ```\n6) Clean up any un-encrypted data from the `.exposed` file:\n    ```shell script\n    lvmanager -cleanup\n    ```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://sidpremkumar.com", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "lvmanager", "package_url": "https://pypi.org/project/lvmanager/", "platform": "", "project_url": "https://pypi.org/project/lvmanager/", "project_urls": {"Homepage": "https://sidpremkumar.com"}, "release_url": "https://pypi.org/project/lvmanager/1.0/", "requires_dist": null, "requires_python": "", "summary": "CLI tool to manage local key/certs and token.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Local Variable Manager (lvmanager)</h1>\n<h1>What does it do?</h1>\n<p>This is a simple CLI script to encrypt, store, and set environmental variables such as certs, ,keys or tokens.</p>\n<pre>usage: CLI <span class=\"k\">for</span> managing and maintaining tokens and key/certs.\n\noptional arguments:\n  -h, --help      show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -add ADD        Adds a file to lcm <span class=\"o\">[</span>--name required<span class=\"o\">]</span>\n  -delete DELETE  Delete a saved file <span class=\"o\">[</span>--name required<span class=\"o\">]</span>\n  -setenv SETENV  Expose a saved file as an environmental variable <span class=\"o\">[</span>--name\n                  required<span class=\"o\">]</span>\n  -name NAME      Name to be used\n  -ls             Display what currently stored\n  -cleanup        Clean up exposed keys\n  -e              Use encryption <span class=\"k\">for</span> values when storing or setting the\n                  environment <span class=\"o\">[</span>LVMANAGER_PW is needed as an environmental\n                  variable<span class=\"o\">]</span>\n  -getkey         Get a new encryption key\n</pre>\n<h3>View stored files</h3>\n<pre>lvmanager -ls\n</pre>\n<h3>Add</h3>\n<pre>lvmanager -add NAME_OF_FILE.key -name project/NAME\n</pre>\n<p><code>lvmanager</code> will automatically create projects if they are already not created.\nThe <code>-e</code> flag will encrypt data and will need the environmental variable <code>LV_MANAGER</code> to be configured.</p>\n<p>Note: If you save a <code>.lvmanager</code> file, when you <code>setenv</code> the contents of the file will be exposed, not a pointer to the file.</p>\n<h3>Delete</h3>\n<pre>lvmanager -delete project/NAME\n</pre>\n<h3>Export single variable</h3>\n<pre>lvmanager -setenv project/NAME -name APP_TOKEN -e \n</pre>\n<p><code>lvmanager</code> will expose the stored value NAME as APP_TOKEN and will copy the relevant commands to the clipboard to the user to manually set.\nThe <code>-e</code> flag will encrypt data and will need the environmental variable <code>LV_MANAGER</code> to be configured.</p>\n<h3>Export projects variables</h3>\n<pre>lvmanager -setenv project/ -e\n</pre>\n<p><code>lvmanager</code> will expose all values under project/ as the NAME they are stored as (in uppercase).\nThe <code>-e</code> flag will encrypt data and will need the environmental variable <code>LV_MANAGER</code> to be configured.</p>\n<h3>Get key</h3>\n<pre>lvmanager -getkey\n</pre>\n<p>The export command will be copied to the clipboard and will need to be set by the user. Don't lose this key!</p>\n<h2>How to Install</h2>\n<p>You can install <code>lvmanager</code> through the setup.py file:</p>\n<pre>python3 setup.py install\n</pre>\n<p>Pip config coming soon</p>\n<h2>Example</h2>\n<ol>\n<li>Get and export key for encryption:\n<pre> lvmanager -getkey\n</pre>\nAnd now in your clipboard you should be able to expose your key:\n<pre> <span class=\"nb\">export</span> <span class=\"nv\">LVMANAGER_PW</span><span class=\"o\">=</span><span class=\"m\">12345</span>..\n</pre>\n</li>\n<li>Add the key <code>test.key</code> as token under project/ with encryption enabled:\n<pre>lvmanager -add token.lvmanager -name project/token -e\n</pre>\n</li>\n<li>See what <code>lvmanager</code> has stored:\n<pre>lvmanager -ls\n</pre>\nAnd we can see:\n<pre> <span class=\"o\">(</span>venv<span class=\"o\">)</span> lvmanager -ls                  \n project/\n     key.key\n</pre>\n</li>\n<li>Expose our key and get the export command:\n<pre>lvmanager -setenv project/key -name KEY -e\n</pre>\n</li>\n<li>Export our environmental variable:\n<pre><span class=\"nb\">export</span> <span class=\"nv\">KEY</span><span class=\"o\">=</span>some/path/to/.exposed/project/key.key\n</pre>\n</li>\n<li>Delete our key from our database:\n<pre>lvmanager -delete project/key\n</pre>\n</li>\n<li>Clean up any un-encrypted data from the <code>.exposed</code> file:\n<pre>lvmanager -cleanup\n</pre>\n</li>\n</ol>\n\n          </div>"}, "last_serial": 6638121, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "523ad5e7e6d12f46f3f89b1b48354a1f", "sha256": "7b08bac36f2d27ac62633e61556a21ab944751100684215433af77e9cadc5afa"}, "downloads": -1, "filename": "lvmanager-1.0.tar.gz", "has_sig": false, "md5_digest": "523ad5e7e6d12f46f3f89b1b48354a1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5924, "upload_time": "2020-02-15T23:50:23", "upload_time_iso_8601": "2020-02-15T23:50:23.700122Z", "url": "https://files.pythonhosted.org/packages/06/b2/a02323a56b14121c567939f8110f7c1f8e3f29534984e1565192726c9d99/lvmanager-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "523ad5e7e6d12f46f3f89b1b48354a1f", "sha256": "7b08bac36f2d27ac62633e61556a21ab944751100684215433af77e9cadc5afa"}, "downloads": -1, "filename": "lvmanager-1.0.tar.gz", "has_sig": false, "md5_digest": "523ad5e7e6d12f46f3f89b1b48354a1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5924, "upload_time": "2020-02-15T23:50:23", "upload_time_iso_8601": "2020-02-15T23:50:23.700122Z", "url": "https://files.pythonhosted.org/packages/06/b2/a02323a56b14121c567939f8110f7c1f8e3f29534984e1565192726c9d99/lvmanager-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:52 2020"}