{"info": {"author": "Stephen Hurwitz", "author_email": "ornj@stevehurwitz.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python"], "description": "# hypernova-python [![Build Status](https://travis-ci.org/ornj/hypernova-python.svg?branch=master)](https://travis-ci.org/ornj/hypernova-python)\n\n> A Python client for the Hypernova service\n\n## Getting Started\n\nInstall the python client from pypi\n\n```sh\npip install hypernova-python\n```\n\nOnce you have the client installed and an instance of the Hypernova service running, you can making requests is easy.\n\n### Example\n\n```python\nimport hypernova\n\nrenderer = hypernova.Renderer('http://localhost')\nhtml = renderer.render({'MyComponent.js': {'name': 'Foo'}})\n```\n\n## Configuration\nYou can pass configuration options to `Renderer` at initialization.\n\n* `url`: The address of the Hypernova service is listening, including port if necessary\n* `plugins`: A list of plugins to use\n* `timeout`: Number of seconds to wait for a response from the Hypernova service\n* `headers`: Dictionary of HTTP headers to override the default. You will want to include `'Content-Type': 'application/json'`\n\n\n## Plugins\nYou can implement custom events and alter requests through the [Plugin Lifecycle](https://github.com/airbnb/hypernova-node/blob/master/README.md#plugin-lifecycle-api). All lifecycle methods are optional.\n\n### Example\n\n```python\nimport hypernova\nimport random\n\nclass MyPlugin(object):\n\tdef prepare_request(self, current_jobs, original_jobs):\n\t\tjob = current_jobs.get('MyComponent.js')\n\t\tjob.update({'random_int_for_reasons': random.randint(0, 100))\n\t\treturn current_jobs\n\nrenderer = hypernova.Renderer('http://localhost', [MyPlugin()])\n```\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ornj/hypernova-python", "keywords": "hypernova react javascript client", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "hypernova", "package_url": "https://pypi.org/project/hypernova/", "platform": "", "project_url": "https://pypi.org/project/hypernova/", "project_urls": {"Homepage": "https://github.com/ornj/hypernova-python"}, "release_url": "https://pypi.org/project/hypernova/0.0.3/", "requires_dist": ["requests", "six"], "requires_python": "", "summary": "Python client for Hypernova, https://github.com/airbnb/hypernova", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # hypernova-python [![Build Status](https://travis-ci.org/ornj/hypernova-python.svg?branch=master)](https://travis-ci.org/ornj/hypernova-python)<br><br>&gt; A Python client for the Hypernova service<br><br>## Getting Started<br><br>Install the python client from pypi<br><br>```sh<br>pip install hypernova-python<br>```<br><br>Once you have the client installed and an instance of the Hypernova service running, you can making requests is easy.<br><br>### Example<br><br>```python<br>import hypernova<br><br>renderer = hypernova.Renderer('http://localhost')<br>html = renderer.render({'MyComponent.js': {'name': 'Foo'}})<br>```<br><br>## Configuration<br>You can pass configuration options to `Renderer` at initialization.<br><br>* `url`: The address of the Hypernova service is listening, including port if necessary<br>* `plugins`: A list of plugins to use<br>* `timeout`: Number of seconds to wait for a response from the Hypernova service<br>* `headers`: Dictionary of HTTP headers to override the default. You will want to include `'Content-Type': 'application/json'`<br><br><br>## Plugins<br>You can implement custom events and alter requests through the [Plugin Lifecycle](https://github.com/airbnb/hypernova-node/blob/master/README.md#plugin-lifecycle-api). All lifecycle methods are optional.<br><br>### Example<br><br>```python<br>import hypernova<br>import random<br><br>class MyPlugin(object):<br>\tdef prepare_request(self, current_jobs, original_jobs):<br>\t\tjob = current_jobs.get('MyComponent.js')<br>\t\tjob.update({'random_int_for_reasons': random.randint(0, 100))<br>\t\treturn current_jobs<br><br>renderer = hypernova.Renderer('http://localhost', [MyPlugin()])<br>```<br><br>\n          </div>"}, "last_serial": 2449605, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d5e0ce6cdf254062c5c9c870afb8baf1", "sha256": "bf02367ef690193ba8d04899b26329981c57627883c0dc992a01454d186e6307"}, "downloads": -1, "filename": "hypernova-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "d5e0ce6cdf254062c5c9c870afb8baf1", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4803, "upload_time": "2016-11-08T04:46:57", "upload_time_iso_8601": "2016-11-08T04:46:57.423492Z", "url": "https://files.pythonhosted.org/packages/b9/02/3d568a8b22ff8591dc1ef88b2eb87e13761a016074146c7e01c7d01aa7d2/hypernova-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "32b29d5084b1094439525f3b7c3633fa", "sha256": "c3fcb79d0694e3d8ee53457eadddb5c383f969c7c6838aca02e7ee9ceb7795dc"}, "downloads": -1, "filename": "hypernova-0.0.1.tar.gz", "has_sig": false, "md5_digest": "32b29d5084b1094439525f3b7c3633fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3647, "upload_time": "2016-11-08T04:46:59", "upload_time_iso_8601": "2016-11-08T04:46:59.455687Z", "url": "https://files.pythonhosted.org/packages/61/39/c712fffc1279929758fe6d59cd0b87dce759ac50f587641c101348e64081/hypernova-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "3d499d04d44b76457825ebd5e069720d", "sha256": "9f7f357e5fbe4b366fdacb801ca4208d76cf2b5550172d81314af42270c3cea7"}, "downloads": -1, "filename": "hypernova-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "3d499d04d44b76457825ebd5e069720d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5699, "upload_time": "2016-11-08T05:00:15", "upload_time_iso_8601": "2016-11-08T05:00:15.723231Z", "url": "https://files.pythonhosted.org/packages/d0/14/9a343334d2759317016014aa8b1438d8d5fe25c85079860858a0e47bf01f/hypernova-0.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a71053a8969fdf01fb1fa37af2f5bc6", "sha256": "6aa5a41207ed8c38ef84069cfc9d5899281aa672cb9425d78756bde65ae2810d"}, "downloads": -1, "filename": "hypernova-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8a71053a8969fdf01fb1fa37af2f5bc6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4102, "upload_time": "2016-11-08T05:00:17", "upload_time_iso_8601": "2016-11-08T05:00:17.662418Z", "url": "https://files.pythonhosted.org/packages/27/45/0904e63ce4615379de43f653a6a1d59972500633886774120a0740824cba/hypernova-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "130913a95a5805232943186b37948404", "sha256": "6ae20189fbd5f51512ad819cf8c43a99fdb89a2e0fbdec96bfcce8e1ed2f069b"}, "downloads": -1, "filename": "hypernova-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "130913a95a5805232943186b37948404", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5871, "upload_time": "2016-11-08T18:47:54", "upload_time_iso_8601": "2016-11-08T18:47:54.161726Z", "url": "https://files.pythonhosted.org/packages/60/04/ff8d11aae149e63707c8fec436e299ff758d691d65469f3ee5438017ee49/hypernova-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef1636dcba38e63ae4353651152e41ce", "sha256": "5b721777f86e7bc664a600b9460b1d233635ce3c0dc05bcc7391f8db26aba2d4"}, "downloads": -1, "filename": "hypernova-0.0.3.tar.gz", "has_sig": false, "md5_digest": "ef1636dcba38e63ae4353651152e41ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4244, "upload_time": "2016-11-08T18:47:56", "upload_time_iso_8601": "2016-11-08T18:47:56.879727Z", "url": "https://files.pythonhosted.org/packages/6a/81/be84db5e4d98594cf20a45f65ce4e8561d3fee5674f707533f1f825cdc06/hypernova-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "130913a95a5805232943186b37948404", "sha256": "6ae20189fbd5f51512ad819cf8c43a99fdb89a2e0fbdec96bfcce8e1ed2f069b"}, "downloads": -1, "filename": "hypernova-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "130913a95a5805232943186b37948404", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5871, "upload_time": "2016-11-08T18:47:54", "upload_time_iso_8601": "2016-11-08T18:47:54.161726Z", "url": "https://files.pythonhosted.org/packages/60/04/ff8d11aae149e63707c8fec436e299ff758d691d65469f3ee5438017ee49/hypernova-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef1636dcba38e63ae4353651152e41ce", "sha256": "5b721777f86e7bc664a600b9460b1d233635ce3c0dc05bcc7391f8db26aba2d4"}, "downloads": -1, "filename": "hypernova-0.0.3.tar.gz", "has_sig": false, "md5_digest": "ef1636dcba38e63ae4353651152e41ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4244, "upload_time": "2016-11-08T18:47:56", "upload_time_iso_8601": "2016-11-08T18:47:56.879727Z", "url": "https://files.pythonhosted.org/packages/6a/81/be84db5e4d98594cf20a45f65ce4e8561d3fee5674f707533f1f825cdc06/hypernova-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:32 2020"}