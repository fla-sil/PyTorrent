{"info": {"author": "Anthony Pizzimenti", "author_email": "pizzimentianthony@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# LinkY\n\nLinkY allows people creating command line interfaces to test their commands and packages\neasily. The program creates globally installed symlinks for specified packages and\ncommands so that you can test your package structures, specify your commands, and run tests.\n\n### configuration\nConsider a sample directory structure:\n\n    proj/\n        |__ main_package/\n        |   |__ index.py\n        |   |__ ...\n        |\n        |__ setup.py\n        |__ README.md\n        |__ LICENSE.md\n        \nTo configure LinkY, we add a `linky.json` file in the project's root directory:\n\n    proj/\n        |__ main_package/\n        |   |__ index.py\n        |   |__ ...\n        |\n        |__ setup.py\n        |__ README.md\n        |__ LICENSE.md\n        |__ linky.json\n        \nThen, we can write in the configurations:\n        \n    linky.json\n    \n    {\n        \"name\": \"main_package\",\n        \"bin\": {\n            \"any_command\" : \"index.py\"\n        }\n    }\n    \nLinkY will identify the main package and retrieve the specified entry point file.\n\n### usage\n`$ linky link` or `$linky -l` wires up an executable file and globally installs your package. In our example, running\n`$ any_command` will run the specified entry point file.\n\n`$ linky unlink` or `$ linky -u` uninstalls the your package and disables the specified command.\n\n### notes\n- unlinking does not delete your package or files\n- `linky.json` will be overwritten to save package and command locations, but the data you entered will remain intact", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/apizzimenti/LinkY.git", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "LinkY", "package_url": "https://pypi.org/project/LinkY/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/LinkY/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/apizzimenti/LinkY.git"}, "release_url": "https://pypi.org/project/LinkY/0.1/", "requires_dist": null, "requires_python": null, "summary": "Creates globally installed symlinks to test command line tools.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # LinkY<br><br>LinkY allows people creating command line interfaces to test their commands and packages<br>easily. The program creates globally installed symlinks for specified packages and<br>commands so that you can test your package structures, specify your commands, and run tests.<br><br>### configuration<br>Consider a sample directory structure:<br><br>    proj/<br>        |__ main_package/<br>        |   |__ index.py<br>        |   |__ ...<br>        |<br>        |__ setup.py<br>        |__ README.md<br>        |__ LICENSE.md<br>        <br>To configure LinkY, we add a `linky.json` file in the project's root directory:<br><br>    proj/<br>        |__ main_package/<br>        |   |__ index.py<br>        |   |__ ...<br>        |<br>        |__ setup.py<br>        |__ README.md<br>        |__ LICENSE.md<br>        |__ linky.json<br>        <br>Then, we can write in the configurations:<br>        <br>    linky.json<br>    <br>    {<br>        \"name\": \"main_package\",<br>        \"bin\": {<br>            \"any_command\" : \"index.py\"<br>        }<br>    }<br>    <br>LinkY will identify the main package and retrieve the specified entry point file.<br><br>### usage<br>`$ linky link` or `$linky -l` wires up an executable file and globally installs your package. In our example, running<br>`$ any_command` will run the specified entry point file.<br><br>`$ linky unlink` or `$ linky -u` uninstalls the your package and disables the specified command.<br><br>### notes<br>- unlinking does not delete your package or files<br>- `linky.json` will be overwritten to save package and command locations, but the data you entered will remain intact\n          </div>"}, "last_serial": 2266167, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "90eff3adf0c4ff74c526050aaa798142", "sha256": "4b5989312fbdb002031aa1a0cb7544835cc37dbcd82777b3621fd0a78500cac0"}, "downloads": -1, "filename": "LinkY-0.1.tar.gz", "has_sig": false, "md5_digest": "90eff3adf0c4ff74c526050aaa798142", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3026, "upload_time": "2016-08-06T23:31:55", "upload_time_iso_8601": "2016-08-06T23:31:55.835749Z", "url": "https://files.pythonhosted.org/packages/c0/a6/ba2eb8b22ef96f6d4d400bd437a82ecb76ad8b9542c30686cbf4dfbb0937/LinkY-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "90eff3adf0c4ff74c526050aaa798142", "sha256": "4b5989312fbdb002031aa1a0cb7544835cc37dbcd82777b3621fd0a78500cac0"}, "downloads": -1, "filename": "LinkY-0.1.tar.gz", "has_sig": false, "md5_digest": "90eff3adf0c4ff74c526050aaa798142", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3026, "upload_time": "2016-08-06T23:31:55", "upload_time_iso_8601": "2016-08-06T23:31:55.835749Z", "url": "https://files.pythonhosted.org/packages/c0/a6/ba2eb8b22ef96f6d4d400bd437a82ecb76ad8b9542c30686cbf4dfbb0937/LinkY-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:34 2020"}