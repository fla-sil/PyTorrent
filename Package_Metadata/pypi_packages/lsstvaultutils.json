{"info": {"author": "Adam Thornton", "author_email": "athornton@lsst.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5"], "description": "# LSST Vault Utilities\n\nThis package is a set of Vault utilities useful for the LSST use case.\n\n## LSST Vault Hierarchy\n\nThese tools are intended to work with a specific taxonomic hierarchy,\ndetailed below.\n\n### Secrets\n\nThe current plan is for the LSST vault to be organized with secrets\nunder `secret` as follows:\n\n`secret/:subsystem:/:team:/:category:/:instance:`\n\nAs an example, secrets for the `nublado.lsst.codes` instance of\nthe LSST Science Platform Notebook Aspect are stored in\n`secret/dm/square/nublado/nublado.lsst.codes`.  Underneath that\nthere are `hub`, `proxy`, and `tls` secret folders, each of which has a\nnumber of individual secrets,\ne.g. `secret/dm/square/nublado/nublado.lsst.codes/hub/oauth_secret`.\n\nNote that these secrets are *not* accessible to the administrative user\nthat created the token pair and policies.  They are accessed through one\nof those tokens.\n\nWe assume that each secret has its own folder, whose name is the secret\nkey, inside of which the keyname is `value`.  This makes translating\nback and forth between Vault secrets and Kubernetes secrets (which have\nmultiple key-value pairs) much easier.\n\n### Tokens\n\nThe first thing to do, with an administrative token, is to create a\ndelegator token which will be the token used to run the Vault token\nprovisioning tools.  Use [delegator.hcl](delegator.hcl) as the input to\ncreate a policy for this.  Then create a token with that new delegator\npolicy attached.\n\nToken IDs and accessors are stored under\n`secret/delegated/:subsystem:/:team:/:category:/:instance:/:role:/:type:`\nwhere `role` is one of `read` or `write` and `type` is one of `id` or\n`accessor`.  These secrets are only accessible to an administrative user\n(such as the one that created the token pair in the first place, which\nshould be the token attached to the `delegator` policy created\nabove).\n\nThere are two tokens for each path, comprising the \"token pair\".  These\nare `read` and `write`.\n\nIt is our intention that a runtime system have access to the `read`\ntoken to be able to read (but not update) secrets, and that the\nadministrators of such a system have access to the `write` token to\ncreate, update, and remove secrets.  We have provided a tool that allows\neasy copying of Kubernetes secrets to and from Vault.\n\n### Policies\n\nPolicies are stored as\n`delegated/:subsystem:/:team:/:category:/:instance:/:role:` where role\nis one of `read` or `write`.  The administrative user that\ncreates or revokes the token pair is also responsible for creating and\ndestroying these policies.\n\n## Classes\n\nThe package name is `lsstvaultutils`.  Its functional classes are:\n\n1. `SecretCopier` -- this copies secrets between the current Kubernetes\n   context and a Vault instance.\n\n2. `AdminTool` -- this highly LSST-specific class allows you to specify a\n   path under the Vault secret store, and it will generate two tokens\n   (read and write) for manipulating secrets under the path.  It\n   stores those under secret/delegated, so that an admin can find (and,\n   if need be, revoke) them later.  It also manages revoking those\n   tokens and removing them from the secret/delegated path.  Options\n   exist to, if manipulating tokens on a path that already exist, revoke\n   the old tokens and overwrite with new ones, or to remove the secret\n   data at the same time as the tokens are revoked.  There is also a\n   function to display the IDs and accessors of the token pair\n   associated with the path.\n\n3. `RecursiveDeleter` -- this adds a recursive deletion feature to Vault\n   for removing a whole secret tree at a time.\n\nThere is also a TimeFormatter class that exists only to add milliseconds\nto the debugging logs.  There is a convenience function, `getLogger`,\nthat provides an interface to get a standardized logger for these tools and\nclasses.\n\n## Programs\n\nThe major functionality of these classes is also exposed as standalone\nprograms.\n\n1. `copyk2v` -- copy the contents of a  Kubernetes secret to a Vault\n   secret path.\n\n2. `copyv2k` -- copy a set of Vault secrets at a specified path to a\n   Kubernetes secret.\n\n3. `tokenadmin` -- Create or revoke token sets for a given Vault secret\n   path, or display the token IDs and accessors for that path.\n\n4. `vaultrmrf` -- Remove a Vault secret path and everything underneath\n   it.  As is implied by the name, this is a fairly dangerous operation.\n\n## Example Workflow\n\nWe will go through a workflow that exercises all of the standalone\nprograms, by creating a token pair, creating some secrets, copying the\nsecrets from Vault to Kubernetes and back again, deleting a secret tree,\nand finally deleting the token pair.\n\n### Create a token pair.\n\nFirst we'll create a token pair for a hierarchy at `dm/test`.  (Note\nthat we have omitted a level of hierarchy to make the output slightly\nmore readable; `dm/square/test` would be more realistic.)  We ensure\nthat `VAULT_ADDR` and `VAULT_CAPATH` are set correctly, and that\n`VAULT_TOKEN` is set to an appropriate administrative token.  We're\ngoing to use `debug` to get an idea of what's going on during the\nprocess, and we will use the `display` option to print JSON representing\nthe tokens.\n\nI am using a `vaultutils` virtualenv with the `lsstvaultutils` package\ninstalled, and the `vault` CLI is on my path.\n\n    (vaultutils) adam@ixitxachitl:~$ tokenadmin create --debug --display dm/test\n    2019-03-04 14:45:52.625 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Debug logging started.\n    2019-03-04 14:45:52.625 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Getting Vault client for 'https://35.184.246.111'.\n    2019-03-04 14:45:52.939 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Vault Client is authenticated.\n    2019-03-04 14:45:52.939 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Creating policies and tokens for 'dm/test'.\n    2019-03-04 14:45:52.939 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Creating policies for 'dm/test'.\n    2019-03-04 14:45:52.939 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Checking for existence of policy 'delegated/dm/test'.\n    2019-03-04 14:45:53.109 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Creating policy for 'dm/test/read'.\n    2019-03-04 14:45:53.109 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Policy string:  path \"secret/data/dm/test/*\" {\n       capabilities = [\"read\"]\n     }\n     path \"secret/metadata/dm/test/*\" {\n       capabilities = [\"read\",\"list\"]\n     }\n\n    2019-03-04 14:45:53.109 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Policy path: delegated/dm/test/read\n    2019-03-04 14:45:53.535 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Creating policy for 'dm/test/write'.\n    2019-03-04 14:45:53.535 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Policy string:  path \"secret/data/dm/test\" {\n       capabilities = [\"read\", \"create\", \"update\", \"delete\"]\n     }\n     path \"secret/data/dm/test/*\" {\n       capabilities = [\"read\", \"create\", \"update\", \"delete\"]\n     }\n     path \"secret/metadata/dm/test/*\" {\n       capabilities = [\"list\", \"read\", \"update\",\"delete\"]\n     }\n     path \"secret/metadata/dm/test\" {\n       capabilities = [\"list\", \"read\", \"update\",\"delete\"]\n     }\n     path \"secret/delete/dm/test/*\" {\n       capabilities = [\"update\"]\n     }\n     path \"secret/undelete/dm/test/*\" {\n       capabilities = [\"update\"]\n     }\n     path \"secret/destroy/dm/test/*\" {\n       capabilities = [\"update\"]\n     }\n\n    2019-03-04 14:45:53.535 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Policy path: delegated/dm/test/write\n    2019-03-04 14:45:54.217 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Creating token for 'dm/test/read'.\n    2019-03-04 14:45:54.217 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin |  - policies '['delegated/dm/test/read']'.\n    2019-03-04 14:45:55.630 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Writing token store for 'dm/test/read'.\n    2019-03-04 14:45:55.630 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin |  'delegated/dm/test/read' -> 's.3nyTeqdWiINKIKNtuoIDtD9D'.\n    2019-03-04 14:45:56.840 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Creating token for 'dm/test/write'.\n    2019-03-04 14:45:56.840 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin |  - policies '['delegated/dm/test/write']'.\n    2019-03-04 14:45:58.171 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Writing token store for 'dm/test/write'.\n    2019-03-04 14:45:58.171 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin |  'delegated/dm/test/write' -> 's.4l4eDdLMyD436RsjRqlI11cD'.\n    2019-03-04 14:45:59.335 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Getting tokens for 'dm/test'.\n    {\n        \"dm/test\": {\n            \"read\": {\n                \"accessor\": \"1WRccTQEebkqx78t37EyVztK\",\n                \"id\": \"s.3nyTeqdWiINKIKNtuoIDtD9D\"\n            },\n            \"write\": {\n                \"accessor\": \"8LvOhKiGFJf9qYNIgOXrb8Ik\",\n                \"id\": \"s.4l4eDdLMyD436RsjRqlI11cD\"\n            }\n        }\n    }\n\n\n### Add some secrets\n\nFirst, set Vault to use the `write` token:\n\n`export VAULT_TOKEN=\"s.4l4eDdLMyD436RsjRqlI11cD\"`\n\nI like JSON output, so I'm going to set:\n\n`export VAULT_FORMAT=json`\n\nThen use the vault client to add some secrets:\n\n\n\t(vaultutils) adam@ixitxachitl:~$ vault kv put secret/dm/test/group1/foo value=bar\n    {\n      \"request_id\": \"0a814bd2-e95d-cf1c-9018-c00173668e3d\",\n      \"lease_id\": \"\",\n      \"lease_duration\": 0,\n      \"renewable\": false,\n      \"data\": {\n        \"created_time\": \"2019-03-04T21:51:07.616034224Z\",\n        \"deletion_time\": \"\",\n        \"destroyed\": false,\n        \"version\": 1\n      },\n      \"warnings\": null\n    }\n    (vaultutils) adam@ixitxachitl:~$ vault kv put secret/dm/test/group1/baz value=quux\n    {\n      \"request_id\": \"38c65e0d-735d-db9a-c2d6-840bdd4dff65\",\n      \"lease_id\": \"\",\n      \"lease_duration\": 0,\n      \"renewable\": false,\n      \"data\": {\n        \"created_time\": \"2019-03-04T21:51:34.991913644Z\",\n        \"deletion_time\": \"\",\n        \"destroyed\": false,\n        \"version\": 1\n      },\n      \"warnings\": null\n    }\n    (vaultutils) adam@ixitxachitl:~$ vault kv put secret/dm/test/group2/king value=fink\n    {\n      \"request_id\": \"12753857-25f2-a27a-3d65-badc18805d07\",\n      \"lease_id\": \"\",\n      \"lease_duration\": 0,\n      \"renewable\": false,\n      \"data\": {\n        \"created_time\": \"2019-03-04T21:51:45.645224365Z\",\n        \"deletion_time\": \"\",\n        \"destroyed\": false,\n        \"version\": 1\n      },\n      \"warnings\": null\n    }\n\nRead one back:\n\n    (vaultutils) adam@ixitxachitl:~$ vault kv get secret/dm/test/group1/baz\n    {\n      \"request_id\": \"03ef8ba1-3eb2-2962-d4c6-ebaf595e3387\",\n      \"lease_id\": \"\",\n      \"lease_duration\": 0,\n      \"renewable\": false,\n      \"data\": {\n        \"data\": {\n          \"value\": \"quux\"\n        },\n        \"metadata\": {\n          \"created_time\": \"2019-03-04T21:51:34.991913644Z\",\n          \"deletion_time\": \"\",\n          \"destroyed\": false,\n          \"version\": 1\n        }\n      },\n      \"warnings\": null\n    }\n\n### Copy secrets to Kubernetes\n\nNow let's create Kubernetes secrets from these.  Do whatever you need to\ndo in order to get a current authenticated Kubernetes context.\n\nSwitch to the `read` token--we don't need to use a `write` token to copy\nfrom Vault to Kubernetes.  The Kubernetes user must be able to create\nsecrets, of course, but that's got nothing to do with Vault tokens.\n\n`export VAULT_TOKEN=\"s.3nyTeqdWiINKIKNtuoIDtD9D\"`\n\nThen we'll copy a set of secrets from Vault to Kubernetes:\n\n    (vaultutils) adam@ixitxachitl:~$ copyv2k --debug dm/test/group1 testg1\n    2019-03-04 14:54:52.855 MST(-0700) [DEBUG] lsstvaultutils.secretcopier | Debug logging started.\n    2019-03-04 14:54:52.855 MST(-0700) [DEBUG] lsstvaultutils.secretcopier | Acquiring Vault client for 'https://35.184.246.111'.\n    2019-03-04 14:54:53.117 MST(-0700) [DEBUG] lsstvaultutils.secretcopier | Acquiring k8s client.\n    2019-03-04 14:54:53.249 MST(-0700) [DEBUG] lsstvaultutils.secretcopier | Reading secret from 'dm/test/group1'.\n    2019-03-04 14:54:53.378 MST(-0700) [DEBUG] lsstvaultutils.secretcopier | 'dm/test/group1' is a set of values.\n    2019-03-04 14:54:53.692 MST(-0700) [DEBUG] lsstvaultutils.secretcopier | Determining whether secret 'testg1'exists in namespace 'nublado'.\n    2019-03-04 14:54:53.971 MST(-0700) [DEBUG] lsstvaultutils.secretcopier | Secret found.\n    2019-03-04 14:54:53.971 MST(-0700) [DEBUG] lsstvaultutils.secretcopier | Base64-encoding secret data\n    2019-03-04 14:54:53.971 MST(-0700) [DEBUG] lsstvaultutils.secretcopier | Updating secret.\n\nRepeat the process for the second group; we'll omit --debug this time.\n\n    (vaultutils) adam@ixitxachitl:~$ copyv2k dm/test/group2 testg2\n    (vaultutils) adam@ixitxachitl:~$\n\nNow let's see if the copy worked.\n\n    (vaultutils) adam@ixitxachitl:~$ kubectl get secret -o yaml testg2\n    apiVersion: v1\n    data:\n      king: Zmluaw==\n    kind: Secret\n    metadata:\n      creationTimestamp: 2019-03-04T21:55:47Z\n      name: testg2\n      namespace: nublado\n      resourceVersion: \"10389477\"\n      selfLink: /api/v1/namespaces/nublado/secrets/testg2\n      uid: 445509ca-3ec8-11e9-a1ce-42010a800032\n    type: Opaque\n\nDecode that secret:\n\n    (vaultutils) adam@ixitxachitl:/tmp$ echo -n Zmluaw== | base64 -D -\n    fink\n\n### Copy secret from Kubernetes to Vault\n\nGo back to the \"write\" token:\n\n    export VAULT_TOKEN=\"s.4l4eDdLMyD436RsjRqlI11cD\"\n\nCopy the secret to a new Vault path:\n\n    (vaultutils) adam@ixitxachitl:~$ copyk2v testg1 dm/test/copy1\n    (vaultutils) adam@ixitxachitl:~$\n\nRead a value (we _could_ switch to the Vault `read` token, but we don't\nhave to--`write` is also allowed to read) back:\n\n    (vaultutils) adam@ixitxachitl:/tmp$ vault kv get secret/dm/square/copy1/foo\n\t{\n      \"request_id\": \"7a509ffc-eaf6-ee43-0d6b-d6bc4fe08a8b\",\n      \"lease_id\": \"\",\n      \"lease_duration\": 0,\n      \"renewable\": false,\n      \"data\": {\n        \"data\": {\n          \"value\": \"bar\"\n        },\n        \"metadata\": {\n          \"created_time\": \"2019-03-04T22:01:57.690906156Z\",\n          \"deletion_time\": \"\",\n          \"destroyed\": false,\n          \"version\": 1\n        }\n      },\n      \"warnings\": null\n    }\n\n\n### Recursively remove a secret tree\n\nLet's say we didn't really want to do that last copy.  We can easily\nremove the tree.\n\nThen we can use the `vaultrmrf` command (and the write token) to delete\nthe tree.\n\n    (vaultutils) adam@ixitxachitl:~$ vaultrmrf --debug dm/test/copy1\n    2019-03-04 15:05:47.920 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Debug logging started.\n    2019-03-04 15:05:47.920 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Acquiring Vault client for 'https://35.184.246.111'.\n    2019-03-04 15:05:48.164 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/copy1' recursively.\n    2019-03-04 15:05:48.269 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'dm/test/copy1'\n    2019-03-04 15:05:48.269 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': 'f6774de1-cb8c-76ed-8425-7963b5d95d76', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['baz', 'foo']}, 'wrap_info': None, 'warnings': None, 'auth': None}'\n    2019-03-04 15:05:48.269 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/copy1/baz' recursively.\n    2019-03-04 15:05:48.369 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/copy1/baz' as leaf node.\n    2019-03-04 15:05:48.369 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.4l4eDdLMyD436RsjRqlI11cD'.\n    2019-03-04 15:05:48.703 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/copy1/foo' recursively.\n    2019-03-04 15:05:48.809 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/copy1/foo' as leaf node.\n    2019-03-04 15:05:48.809 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.4l4eDdLMyD436RsjRqlI11cD'.\n    2019-03-04 15:05:49.123 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/copy1' as leaf node.\n    2019-03-04 15:05:49.123 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.4l4eDdLMyD436RsjRqlI11cD'.\n\n\nTrying to read the secret now will show it's gone:\n\n    (vaultutils) adam@ixitxachitl:~$ vault kv get secret/dm/test/copy1/foo\n    No value found at secret/data/dm/test/copy1/foo\n\n### Revoke Token Pair and remove data\n\nNow we will clean up:\n\n    (vaultutils) adam@ixitxachitl:~$ kubectl delete secret testg1 testg2\n    secret \"testg1\" deleted\n    secret \"testg2\" deleted\n\nWe go back to an administrative token to revoke our token pair (by\nsetting `VAULT_TOKEN` to an appropriate value), and while we're at it we\nwill clean up the data we inserted into vault as well.\n\n    (vaultutils) adam@ixitxachitl:~$ tokenadmin revoke --delete-data --debug dm/test2019-03-04 15:08:12.888 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Debug logging started.\n    2019-03-04 15:08:12.888 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Getting Vault client for 'https://35.184.246.111'.\n    2019-03-04 15:08:13.147 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Vault Client is authenticated.\n    2019-03-04 15:08:13.147 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Revoking tokens and removing policies for 'dm/test'.\n    2019-03-04 15:08:13.147 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Getting write token for 'dm/test'.\n    2019-03-04 15:08:13.147 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Reading value from 'delegated/dm/test/write/id'.\n    2019-03-04 15:08:13.208 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Got data: {'request_id': 'e5084c92-f404-7338-f776-47f1d8ee5980', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'data': {'value': 's.4l4eDdLMyD436RsjRqlI11cD'}, 'metadata': {'created_time': '2019-03-04T21:45:58.325211493Z', 'deletion_time': '', 'destroyed': False, 'version': 1}}, 'wrap_info': None, 'warnings': None, 'auth': None}\n    2019-03-04 15:08:13.208 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Debug logging started.\n    2019-03-04 15:08:13.208 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Acquiring Vault client for 'https://35.184.246.111'.\n    2019-03-04 15:08:13.498 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Deleting data under 'dm/test'.\n    2019-03-04 15:08:13.498 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test' recursively.\n    2019-03-04 15:08:13.638 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'dm/test'\n    2019-03-04 15:08:13.638 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': '661160b2-6916-62f5-ae29-8da0d576d841', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['group1/', 'group2/']}, 'wrap_info': None, 'warnings': None, 'auth': None}'\n    2019-03-04 15:08:13.638 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group1' recursively.\n    2019-03-04 15:08:13.907 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'dm/test/group1'\n    2019-03-04 15:08:13.907 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': '02e65063-64e2-8ca9-1532-f3aaf1eaeeb5', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['baz', 'foo']}, 'wrap_info': None, 'warnings': None, 'auth': None}'\n    2019-03-04 15:08:13.908 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group1/baz' recursively.\n    2019-03-04 15:08:14.262 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group1/baz' as leaf node.\n    2019-03-04 15:08:14.262 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.4l4eDdLMyD436RsjRqlI11cD'.\n    2019-03-04 15:08:14.729 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group1/foo' recursively.\n    2019-03-04 15:08:14.906 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group1/foo' as leaf node.\n    2019-03-04 15:08:14.906 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.4l4eDdLMyD436RsjRqlI11cD'.\n    2019-03-04 15:08:15.409 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group1' as leaf node.\n    2019-03-04 15:08:15.409 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.4l4eDdLMyD436RsjRqlI11cD'.\n    2019-03-04 15:08:15.560 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group2' recursively.\n    2019-03-04 15:08:15.716 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'dm/test/group2'\n    2019-03-04 15:08:15.716 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': '9a9f23d3-f5cf-10c7-e18c-2f54a848e3e7', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['king']}, 'wrap_info': None, 'warnings': None, 'auth': None}'\n    2019-03-04 15:08:15.716 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group2/king' recursively.\n    2019-03-04 15:08:15.866 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group2/king' as leaf node.\n    2019-03-04 15:08:15.866 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.4l4eDdLMyD436RsjRqlI11cD'.\n    2019-03-04 15:08:16.480 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group2' as leaf node.\n    2019-03-04 15:08:16.480 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.4l4eDdLMyD436RsjRqlI11cD'.\n    2019-03-04 15:08:16.623 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test' as leaf node.\n    2019-03-04 15:08:16.623 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.4l4eDdLMyD436RsjRqlI11cD'.\n    2019-03-04 15:08:16.765 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Requesting ID for 'read' token for 'dm/test'.\n    2019-03-04 15:08:16.826 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Tokendata: {'request_id': '845ca454-5b0e-9518-9029-bf221c771e4f', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'data': {'value': 's.3nyTeqdWiINKIKNtuoIDtD9D'}, 'metadata': {'created_time': '2019-03-04T21:45:55.802574394Z', 'deletion_time': '', 'destroyed': False, 'version': 1}}, 'wrap_info': None, 'warnings': None, 'auth': None}\n    2019-03-04 15:08:16.827 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Deleting 'read' token for 'dm/test'.\n    2019-03-04 15:08:18.393 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Requesting ID for 'write' token for 'dm/test'.\n    2019-03-04 15:08:18.454 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Tokendata: {'request_id': '5f3aae99-59f4-618b-cf1c-cb9bc3b39478', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'data': {'value': 's.4l4eDdLMyD436RsjRqlI11cD'}, 'metadata': {'created_time': '2019-03-04T21:45:58.325211493Z', 'deletion_time': '', 'destroyed': False, 'version': 1}}, 'wrap_info': None, 'warnings': None, 'auth': None}\n    2019-03-04 15:08:18.455 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Deleting 'write' token for 'dm/test'.\n    2019-03-04 15:08:19.845 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Deleting token store for 'dm/test'.\n    2019-03-04 15:08:19.846 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Debug logging started.\n    2019-03-04 15:08:19.846 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Debug logging started.\n    2019-03-04 15:08:19.846 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Acquiring Vault client for 'https://35.184.246.111'.\n    2019-03-04 15:08:19.846 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Acquiring Vault client for 'https://35.184.246.111'.\n    2019-03-04 15:08:20.085 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Recursive delete of: 'delegated/dm/test'\n    2019-03-04 15:08:20.085 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test' recursively.\n    2019-03-04 15:08:20.085 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test' recursively.\n    2019-03-04 15:08:20.199 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'delegated/dm/test'\n    2019-03-04 15:08:20.199 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'delegated/dm/test'\n    2019-03-04 15:08:20.199 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': '5c1f33cf-8878-a5c8-a884-1f5cda607fa6', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['read/', 'write/']}, 'wrap_info': None, 'warnings': None, 'auth': None}'\n    2019-03-04 15:08:20.199 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': '5c1f33cf-8878-a5c8-a884-1f5cda607fa6', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['read/', 'write/']}, 'wrap_info': None, 'warnings': None, 'auth': None}'\n    2019-03-04 15:08:20.199 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read' recursively.\n    2019-03-04 15:08:20.199 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read' recursively.\n    2019-03-04 15:08:20.317 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'delegated/dm/test/read'\n    2019-03-04 15:08:20.317 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'delegated/dm/test/read'\n    2019-03-04 15:08:20.317 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': '4d18f739-1ee7-c413-6b9a-1766f6f300de', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['accessor', 'id']}, 'wrap_info': None, 'warnings': None, 'auth': None}'\n    2019-03-04 15:08:20.317 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': '4d18f739-1ee7-c413-6b9a-1766f6f300de', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['accessor', 'id']}, 'wrap_info': None, 'warnings': None, 'auth': None}'\n    2019-03-04 15:08:20.317 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read/accessor' recursively.\n    2019-03-04 15:08:20.317 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read/accessor' recursively.\n    2019-03-04 15:08:20.422 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read/accessor' as leaf node.\n    2019-03-04 15:08:20.422 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read/accessor' as leaf node.\n    2019-03-04 15:08:20.422 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.\n    2019-03-04 15:08:20.422 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.\n    2019-03-04 15:08:20.856 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read/id' recursively.\n    2019-03-04 15:08:20.856 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read/id' recursively.\n    2019-03-04 15:08:20.971 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read/id' as leaf node.\n    2019-03-04 15:08:20.971 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read/id' as leaf node.\n    2019-03-04 15:08:20.972 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.\n    2019-03-04 15:08:20.972 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.\n    2019-03-04 15:08:21.406 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read' as leaf node.\n    2019-03-04 15:08:21.406 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read' as leaf node.\n    2019-03-04 15:08:21.406 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.\n    2019-03-04 15:08:21.406 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.\n    2019-03-04 15:08:21.492 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write' recursively.\n    2019-03-04 15:08:21.492 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write' recursively.\n    2019-03-04 15:08:21.603 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'delegated/dm/test/write'\n    2019-03-04 15:08:21.603 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'delegated/dm/test/write'\n    2019-03-04 15:08:21.603 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': '8446aa1b-3d86-3b0d-eb55-01a9fe0e1cad', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['accessor', 'id']}, 'wrap_info': None, 'warnings': None, 'auth': None}'\n    2019-03-04 15:08:21.603 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': '8446aa1b-3d86-3b0d-eb55-01a9fe0e1cad', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['accessor', 'id']}, 'wrap_info': None, 'warnings': None, 'auth': None}'\n    2019-03-04 15:08:21.603 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write/accessor' recursively.\n    2019-03-04 15:08:21.603 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write/accessor' recursively.\n    2019-03-04 15:08:21.707 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write/accessor' as leaf node.\n    2019-03-04 15:08:21.707 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write/accessor' as leaf node.\n    2019-03-04 15:08:21.708 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.\n    2019-03-04 15:08:21.708 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.\n    2019-03-04 15:08:22.120 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write/id' recursively.\n    2019-03-04 15:08:22.120 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write/id' recursively.\n    2019-03-04 15:08:22.224 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write/id' as leaf node.\n    2019-03-04 15:08:22.224 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write/id' as leaf node.\n    2019-03-04 15:08:22.224 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.\n    2019-03-04 15:08:22.224 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.\n    2019-03-04 15:08:22.673 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write' as leaf node.\n    2019-03-04 15:08:22.673 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write' as leaf node.\n    2019-03-04 15:08:22.673 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.\n    2019-03-04 15:08:22.673 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.\n    2019-03-04 15:08:22.761 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test' as leaf node.\n    2019-03-04 15:08:22.761 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test' as leaf node.\n    2019-03-04 15:08:22.761 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.\n    2019-03-04 15:08:22.761 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.\n    2019-03-04 15:08:22.856 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Deleting policy for 'delegated/dm/test/read'.\n    2019-03-04 15:08:23.039 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Deleting policy for 'delegated/dm/test/write'.\n\nAnd now the system is back in the state in which we started.\n\n### Verifying token deletion\n\nWe can try an operation to see that the tokens have been revoked.  Set\nup the (now-revoked) read token: `export\nVAULT_TOKEN=\"s.3nyTeqdWiINKIKNtuoIDtD9D\"`.  Then try the same read we\npreviously ran again:\n\n    (vaultutils) adam@ixitxachitl:~$ vault kv get secret/dm/test/group1/baz\n    Error making API request.\n\n    URL: GET https://35.184.246.111/v1/sys/internal/ui/mounts/secret/dm/test/group1/baz\n    Code: 403. Errors:\n\n    * permission denied\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lsst-sqre/lsstvaultutils", "keywords": "lsst", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "lsstvaultutils", "package_url": "https://pypi.org/project/lsstvaultutils/", "platform": "", "project_url": "https://pypi.org/project/lsstvaultutils/", "project_urls": {"Homepage": "https://github.com/lsst-sqre/lsstvaultutils"}, "release_url": "https://pypi.org/project/lsstvaultutils/0.0.6/", "requires_dist": ["hvac (<1.0.0)", "kubernetes (<10.0.0)", "click (<8.0.0)"], "requires_python": "", "summary": "LSST SQuaRE Vault utilities", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            # LSST Vault Utilities<br><br>This package is a set of Vault utilities useful for the LSST use case.<br><br>## LSST Vault Hierarchy<br><br>These tools are intended to work with a specific taxonomic hierarchy,<br>detailed below.<br><br>### Secrets<br><br>The current plan is for the LSST vault to be organized with secrets<br>under `secret` as follows:<br><br>`secret/:subsystem:/:team:/:category:/:instance:`<br><br>As an example, secrets for the `nublado.lsst.codes` instance of<br>the LSST Science Platform Notebook Aspect are stored in<br>`secret/dm/square/nublado/nublado.lsst.codes`.  Underneath that<br>there are `hub`, `proxy`, and `tls` secret folders, each of which has a<br>number of individual secrets,<br>e.g. `secret/dm/square/nublado/nublado.lsst.codes/hub/oauth_secret`.<br><br>Note that these secrets are *not* accessible to the administrative user<br>that created the token pair and policies.  They are accessed through one<br>of those tokens.<br><br>We assume that each secret has its own folder, whose name is the secret<br>key, inside of which the keyname is `value`.  This makes translating<br>back and forth between Vault secrets and Kubernetes secrets (which have<br>multiple key-value pairs) much easier.<br><br>### Tokens<br><br>The first thing to do, with an administrative token, is to create a<br>delegator token which will be the token used to run the Vault token<br>provisioning tools.  Use [delegator.hcl](delegator.hcl) as the input to<br>create a policy for this.  Then create a token with that new delegator<br>policy attached.<br><br>Token IDs and accessors are stored under<br>`secret/delegated/:subsystem:/:team:/:category:/:instance:/:role:/:type:`<br>where `role` is one of `read` or `write` and `type` is one of `id` or<br>`accessor`.  These secrets are only accessible to an administrative user<br>(such as the one that created the token pair in the first place, which<br>should be the token attached to the `delegator` policy created<br>above).<br><br>There are two tokens for each path, comprising the \"token pair\".  These<br>are `read` and `write`.<br><br>It is our intention that a runtime system have access to the `read`<br>token to be able to read (but not update) secrets, and that the<br>administrators of such a system have access to the `write` token to<br>create, update, and remove secrets.  We have provided a tool that allows<br>easy copying of Kubernetes secrets to and from Vault.<br><br>### Policies<br><br>Policies are stored as<br>`delegated/:subsystem:/:team:/:category:/:instance:/:role:` where role<br>is one of `read` or `write`.  The administrative user that<br>creates or revokes the token pair is also responsible for creating and<br>destroying these policies.<br><br>## Classes<br><br>The package name is `lsstvaultutils`.  Its functional classes are:<br><br>1. `SecretCopier` -- this copies secrets between the current Kubernetes<br>   context and a Vault instance.<br><br>2. `AdminTool` -- this highly LSST-specific class allows you to specify a<br>   path under the Vault secret store, and it will generate two tokens<br>   (read and write) for manipulating secrets under the path.  It<br>   stores those under secret/delegated, so that an admin can find (and,<br>   if need be, revoke) them later.  It also manages revoking those<br>   tokens and removing them from the secret/delegated path.  Options<br>   exist to, if manipulating tokens on a path that already exist, revoke<br>   the old tokens and overwrite with new ones, or to remove the secret<br>   data at the same time as the tokens are revoked.  There is also a<br>   function to display the IDs and accessors of the token pair<br>   associated with the path.<br><br>3. `RecursiveDeleter` -- this adds a recursive deletion feature to Vault<br>   for removing a whole secret tree at a time.<br><br>There is also a TimeFormatter class that exists only to add milliseconds<br>to the debugging logs.  There is a convenience function, `getLogger`,<br>that provides an interface to get a standardized logger for these tools and<br>classes.<br><br>## Programs<br><br>The major functionality of these classes is also exposed as standalone<br>programs.<br><br>1. `copyk2v` -- copy the contents of a  Kubernetes secret to a Vault<br>   secret path.<br><br>2. `copyv2k` -- copy a set of Vault secrets at a specified path to a<br>   Kubernetes secret.<br><br>3. `tokenadmin` -- Create or revoke token sets for a given Vault secret<br>   path, or display the token IDs and accessors for that path.<br><br>4. `vaultrmrf` -- Remove a Vault secret path and everything underneath<br>   it.  As is implied by the name, this is a fairly dangerous operation.<br><br>## Example Workflow<br><br>We will go through a workflow that exercises all of the standalone<br>programs, by creating a token pair, creating some secrets, copying the<br>secrets from Vault to Kubernetes and back again, deleting a secret tree,<br>and finally deleting the token pair.<br><br>### Create a token pair.<br><br>First we'll create a token pair for a hierarchy at `dm/test`.  (Note<br>that we have omitted a level of hierarchy to make the output slightly<br>more readable; `dm/square/test` would be more realistic.)  We ensure<br>that `VAULT_ADDR` and `VAULT_CAPATH` are set correctly, and that<br>`VAULT_TOKEN` is set to an appropriate administrative token.  We're<br>going to use `debug` to get an idea of what's going on during the<br>process, and we will use the `display` option to print JSON representing<br>the tokens.<br><br>I am using a `vaultutils` virtualenv with the `lsstvaultutils` package<br>installed, and the `vault` CLI is on my path.<br><br>    (vaultutils) adam@ixitxachitl:~$ tokenadmin create --debug --display dm/test<br>    2019-03-04 14:45:52.625 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Debug logging started.<br>    2019-03-04 14:45:52.625 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Getting Vault client for 'https://35.184.246.111'.<br>    2019-03-04 14:45:52.939 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Vault Client is authenticated.<br>    2019-03-04 14:45:52.939 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Creating policies and tokens for 'dm/test'.<br>    2019-03-04 14:45:52.939 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Creating policies for 'dm/test'.<br>    2019-03-04 14:45:52.939 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Checking for existence of policy 'delegated/dm/test'.<br>    2019-03-04 14:45:53.109 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Creating policy for 'dm/test/read'.<br>    2019-03-04 14:45:53.109 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Policy string:  path \"secret/data/dm/test/*\" {<br>       capabilities = [\"read\"]<br>     }<br>     path \"secret/metadata/dm/test/*\" {<br>       capabilities = [\"read\",\"list\"]<br>     }<br><br>    2019-03-04 14:45:53.109 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Policy path: delegated/dm/test/read<br>    2019-03-04 14:45:53.535 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Creating policy for 'dm/test/write'.<br>    2019-03-04 14:45:53.535 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Policy string:  path \"secret/data/dm/test\" {<br>       capabilities = [\"read\", \"create\", \"update\", \"delete\"]<br>     }<br>     path \"secret/data/dm/test/*\" {<br>       capabilities = [\"read\", \"create\", \"update\", \"delete\"]<br>     }<br>     path \"secret/metadata/dm/test/*\" {<br>       capabilities = [\"list\", \"read\", \"update\",\"delete\"]<br>     }<br>     path \"secret/metadata/dm/test\" {<br>       capabilities = [\"list\", \"read\", \"update\",\"delete\"]<br>     }<br>     path \"secret/delete/dm/test/*\" {<br>       capabilities = [\"update\"]<br>     }<br>     path \"secret/undelete/dm/test/*\" {<br>       capabilities = [\"update\"]<br>     }<br>     path \"secret/destroy/dm/test/*\" {<br>       capabilities = [\"update\"]<br>     }<br><br>    2019-03-04 14:45:53.535 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Policy path: delegated/dm/test/write<br>    2019-03-04 14:45:54.217 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Creating token for 'dm/test/read'.<br>    2019-03-04 14:45:54.217 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin |  - policies '['delegated/dm/test/read']'.<br>    2019-03-04 14:45:55.630 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Writing token store for 'dm/test/read'.<br>    2019-03-04 14:45:55.630 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin |  'delegated/dm/test/read' -&gt; 's.3nyTeqdWiINKIKNtuoIDtD9D'.<br>    2019-03-04 14:45:56.840 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Creating token for 'dm/test/write'.<br>    2019-03-04 14:45:56.840 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin |  - policies '['delegated/dm/test/write']'.<br>    2019-03-04 14:45:58.171 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Writing token store for 'dm/test/write'.<br>    2019-03-04 14:45:58.171 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin |  'delegated/dm/test/write' -&gt; 's.4l4eDdLMyD436RsjRqlI11cD'.<br>    2019-03-04 14:45:59.335 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Getting tokens for 'dm/test'.<br>    {<br>        \"dm/test\": {<br>            \"read\": {<br>                \"accessor\": \"1WRccTQEebkqx78t37EyVztK\",<br>                \"id\": \"s.3nyTeqdWiINKIKNtuoIDtD9D\"<br>            },<br>            \"write\": {<br>                \"accessor\": \"8LvOhKiGFJf9qYNIgOXrb8Ik\",<br>                \"id\": \"s.4l4eDdLMyD436RsjRqlI11cD\"<br>            }<br>        }<br>    }<br><br><br>### Add some secrets<br><br>First, set Vault to use the `write` token:<br><br>`export VAULT_TOKEN=\"s.4l4eDdLMyD436RsjRqlI11cD\"`<br><br>I like JSON output, so I'm going to set:<br><br>`export VAULT_FORMAT=json`<br><br>Then use the vault client to add some secrets:<br><br><br>\t(vaultutils) adam@ixitxachitl:~$ vault kv put secret/dm/test/group1/foo value=bar<br>    {<br>      \"request_id\": \"0a814bd2-e95d-cf1c-9018-c00173668e3d\",<br>      \"lease_id\": \"\",<br>      \"lease_duration\": 0,<br>      \"renewable\": false,<br>      \"data\": {<br>        \"created_time\": \"2019-03-04T21:51:07.616034224Z\",<br>        \"deletion_time\": \"\",<br>        \"destroyed\": false,<br>        \"version\": 1<br>      },<br>      \"warnings\": null<br>    }<br>    (vaultutils) adam@ixitxachitl:~$ vault kv put secret/dm/test/group1/baz value=quux<br>    {<br>      \"request_id\": \"38c65e0d-735d-db9a-c2d6-840bdd4dff65\",<br>      \"lease_id\": \"\",<br>      \"lease_duration\": 0,<br>      \"renewable\": false,<br>      \"data\": {<br>        \"created_time\": \"2019-03-04T21:51:34.991913644Z\",<br>        \"deletion_time\": \"\",<br>        \"destroyed\": false,<br>        \"version\": 1<br>      },<br>      \"warnings\": null<br>    }<br>    (vaultutils) adam@ixitxachitl:~$ vault kv put secret/dm/test/group2/king value=fink<br>    {<br>      \"request_id\": \"12753857-25f2-a27a-3d65-badc18805d07\",<br>      \"lease_id\": \"\",<br>      \"lease_duration\": 0,<br>      \"renewable\": false,<br>      \"data\": {<br>        \"created_time\": \"2019-03-04T21:51:45.645224365Z\",<br>        \"deletion_time\": \"\",<br>        \"destroyed\": false,<br>        \"version\": 1<br>      },<br>      \"warnings\": null<br>    }<br><br>Read one back:<br><br>    (vaultutils) adam@ixitxachitl:~$ vault kv get secret/dm/test/group1/baz<br>    {<br>      \"request_id\": \"03ef8ba1-3eb2-2962-d4c6-ebaf595e3387\",<br>      \"lease_id\": \"\",<br>      \"lease_duration\": 0,<br>      \"renewable\": false,<br>      \"data\": {<br>        \"data\": {<br>          \"value\": \"quux\"<br>        },<br>        \"metadata\": {<br>          \"created_time\": \"2019-03-04T21:51:34.991913644Z\",<br>          \"deletion_time\": \"\",<br>          \"destroyed\": false,<br>          \"version\": 1<br>        }<br>      },<br>      \"warnings\": null<br>    }<br><br>### Copy secrets to Kubernetes<br><br>Now let's create Kubernetes secrets from these.  Do whatever you need to<br>do in order to get a current authenticated Kubernetes context.<br><br>Switch to the `read` token--we don't need to use a `write` token to copy<br>from Vault to Kubernetes.  The Kubernetes user must be able to create<br>secrets, of course, but that's got nothing to do with Vault tokens.<br><br>`export VAULT_TOKEN=\"s.3nyTeqdWiINKIKNtuoIDtD9D\"`<br><br>Then we'll copy a set of secrets from Vault to Kubernetes:<br><br>    (vaultutils) adam@ixitxachitl:~$ copyv2k --debug dm/test/group1 testg1<br>    2019-03-04 14:54:52.855 MST(-0700) [DEBUG] lsstvaultutils.secretcopier | Debug logging started.<br>    2019-03-04 14:54:52.855 MST(-0700) [DEBUG] lsstvaultutils.secretcopier | Acquiring Vault client for 'https://35.184.246.111'.<br>    2019-03-04 14:54:53.117 MST(-0700) [DEBUG] lsstvaultutils.secretcopier | Acquiring k8s client.<br>    2019-03-04 14:54:53.249 MST(-0700) [DEBUG] lsstvaultutils.secretcopier | Reading secret from 'dm/test/group1'.<br>    2019-03-04 14:54:53.378 MST(-0700) [DEBUG] lsstvaultutils.secretcopier | 'dm/test/group1' is a set of values.<br>    2019-03-04 14:54:53.692 MST(-0700) [DEBUG] lsstvaultutils.secretcopier | Determining whether secret 'testg1'exists in namespace 'nublado'.<br>    2019-03-04 14:54:53.971 MST(-0700) [DEBUG] lsstvaultutils.secretcopier | Secret found.<br>    2019-03-04 14:54:53.971 MST(-0700) [DEBUG] lsstvaultutils.secretcopier | Base64-encoding secret data<br>    2019-03-04 14:54:53.971 MST(-0700) [DEBUG] lsstvaultutils.secretcopier | Updating secret.<br><br>Repeat the process for the second group; we'll omit --debug this time.<br><br>    (vaultutils) adam@ixitxachitl:~$ copyv2k dm/test/group2 testg2<br>    (vaultutils) adam@ixitxachitl:~$<br><br>Now let's see if the copy worked.<br><br>    (vaultutils) adam@ixitxachitl:~$ kubectl get secret -o yaml testg2<br>    apiVersion: v1<br>    data:<br>      king: Zmluaw==<br>    kind: Secret<br>    metadata:<br>      creationTimestamp: 2019-03-04T21:55:47Z<br>      name: testg2<br>      namespace: nublado<br>      resourceVersion: \"10389477\"<br>      selfLink: /api/v1/namespaces/nublado/secrets/testg2<br>      uid: 445509ca-3ec8-11e9-a1ce-42010a800032<br>    type: Opaque<br><br>Decode that secret:<br><br>    (vaultutils) adam@ixitxachitl:/tmp$ echo -n Zmluaw== | base64 -D -<br>    fink<br><br>### Copy secret from Kubernetes to Vault<br><br>Go back to the \"write\" token:<br><br>    export VAULT_TOKEN=\"s.4l4eDdLMyD436RsjRqlI11cD\"<br><br>Copy the secret to a new Vault path:<br><br>    (vaultutils) adam@ixitxachitl:~$ copyk2v testg1 dm/test/copy1<br>    (vaultutils) adam@ixitxachitl:~$<br><br>Read a value (we _could_ switch to the Vault `read` token, but we don't<br>have to--`write` is also allowed to read) back:<br><br>    (vaultutils) adam@ixitxachitl:/tmp$ vault kv get secret/dm/square/copy1/foo<br>\t{<br>      \"request_id\": \"7a509ffc-eaf6-ee43-0d6b-d6bc4fe08a8b\",<br>      \"lease_id\": \"\",<br>      \"lease_duration\": 0,<br>      \"renewable\": false,<br>      \"data\": {<br>        \"data\": {<br>          \"value\": \"bar\"<br>        },<br>        \"metadata\": {<br>          \"created_time\": \"2019-03-04T22:01:57.690906156Z\",<br>          \"deletion_time\": \"\",<br>          \"destroyed\": false,<br>          \"version\": 1<br>        }<br>      },<br>      \"warnings\": null<br>    }<br><br><br>### Recursively remove a secret tree<br><br>Let's say we didn't really want to do that last copy.  We can easily<br>remove the tree.<br><br>Then we can use the `vaultrmrf` command (and the write token) to delete<br>the tree.<br><br>    (vaultutils) adam@ixitxachitl:~$ vaultrmrf --debug dm/test/copy1<br>    2019-03-04 15:05:47.920 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Debug logging started.<br>    2019-03-04 15:05:47.920 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Acquiring Vault client for 'https://35.184.246.111'.<br>    2019-03-04 15:05:48.164 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/copy1' recursively.<br>    2019-03-04 15:05:48.269 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'dm/test/copy1'<br>    2019-03-04 15:05:48.269 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': 'f6774de1-cb8c-76ed-8425-7963b5d95d76', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['baz', 'foo']}, 'wrap_info': None, 'warnings': None, 'auth': None}'<br>    2019-03-04 15:05:48.269 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/copy1/baz' recursively.<br>    2019-03-04 15:05:48.369 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/copy1/baz' as leaf node.<br>    2019-03-04 15:05:48.369 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.4l4eDdLMyD436RsjRqlI11cD'.<br>    2019-03-04 15:05:48.703 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/copy1/foo' recursively.<br>    2019-03-04 15:05:48.809 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/copy1/foo' as leaf node.<br>    2019-03-04 15:05:48.809 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.4l4eDdLMyD436RsjRqlI11cD'.<br>    2019-03-04 15:05:49.123 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/copy1' as leaf node.<br>    2019-03-04 15:05:49.123 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.4l4eDdLMyD436RsjRqlI11cD'.<br><br><br>Trying to read the secret now will show it's gone:<br><br>    (vaultutils) adam@ixitxachitl:~$ vault kv get secret/dm/test/copy1/foo<br>    No value found at secret/data/dm/test/copy1/foo<br><br>### Revoke Token Pair and remove data<br><br>Now we will clean up:<br><br>    (vaultutils) adam@ixitxachitl:~$ kubectl delete secret testg1 testg2<br>    secret \"testg1\" deleted<br>    secret \"testg2\" deleted<br><br>We go back to an administrative token to revoke our token pair (by<br>setting `VAULT_TOKEN` to an appropriate value), and while we're at it we<br>will clean up the data we inserted into vault as well.<br><br>    (vaultutils) adam@ixitxachitl:~$ tokenadmin revoke --delete-data --debug dm/test2019-03-04 15:08:12.888 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Debug logging started.<br>    2019-03-04 15:08:12.888 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Getting Vault client for 'https://35.184.246.111'.<br>    2019-03-04 15:08:13.147 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Vault Client is authenticated.<br>    2019-03-04 15:08:13.147 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Revoking tokens and removing policies for 'dm/test'.<br>    2019-03-04 15:08:13.147 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Getting write token for 'dm/test'.<br>    2019-03-04 15:08:13.147 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Reading value from 'delegated/dm/test/write/id'.<br>    2019-03-04 15:08:13.208 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Got data: {'request_id': 'e5084c92-f404-7338-f776-47f1d8ee5980', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'data': {'value': 's.4l4eDdLMyD436RsjRqlI11cD'}, 'metadata': {'created_time': '2019-03-04T21:45:58.325211493Z', 'deletion_time': '', 'destroyed': False, 'version': 1}}, 'wrap_info': None, 'warnings': None, 'auth': None}<br>    2019-03-04 15:08:13.208 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Debug logging started.<br>    2019-03-04 15:08:13.208 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Acquiring Vault client for 'https://35.184.246.111'.<br>    2019-03-04 15:08:13.498 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Deleting data under 'dm/test'.<br>    2019-03-04 15:08:13.498 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test' recursively.<br>    2019-03-04 15:08:13.638 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'dm/test'<br>    2019-03-04 15:08:13.638 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': '661160b2-6916-62f5-ae29-8da0d576d841', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['group1/', 'group2/']}, 'wrap_info': None, 'warnings': None, 'auth': None}'<br>    2019-03-04 15:08:13.638 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group1' recursively.<br>    2019-03-04 15:08:13.907 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'dm/test/group1'<br>    2019-03-04 15:08:13.907 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': '02e65063-64e2-8ca9-1532-f3aaf1eaeeb5', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['baz', 'foo']}, 'wrap_info': None, 'warnings': None, 'auth': None}'<br>    2019-03-04 15:08:13.908 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group1/baz' recursively.<br>    2019-03-04 15:08:14.262 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group1/baz' as leaf node.<br>    2019-03-04 15:08:14.262 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.4l4eDdLMyD436RsjRqlI11cD'.<br>    2019-03-04 15:08:14.729 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group1/foo' recursively.<br>    2019-03-04 15:08:14.906 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group1/foo' as leaf node.<br>    2019-03-04 15:08:14.906 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.4l4eDdLMyD436RsjRqlI11cD'.<br>    2019-03-04 15:08:15.409 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group1' as leaf node.<br>    2019-03-04 15:08:15.409 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.4l4eDdLMyD436RsjRqlI11cD'.<br>    2019-03-04 15:08:15.560 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group2' recursively.<br>    2019-03-04 15:08:15.716 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'dm/test/group2'<br>    2019-03-04 15:08:15.716 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': '9a9f23d3-f5cf-10c7-e18c-2f54a848e3e7', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['king']}, 'wrap_info': None, 'warnings': None, 'auth': None}'<br>    2019-03-04 15:08:15.716 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group2/king' recursively.<br>    2019-03-04 15:08:15.866 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group2/king' as leaf node.<br>    2019-03-04 15:08:15.866 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.4l4eDdLMyD436RsjRqlI11cD'.<br>    2019-03-04 15:08:16.480 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test/group2' as leaf node.<br>    2019-03-04 15:08:16.480 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.4l4eDdLMyD436RsjRqlI11cD'.<br>    2019-03-04 15:08:16.623 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'dm/test' as leaf node.<br>    2019-03-04 15:08:16.623 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.4l4eDdLMyD436RsjRqlI11cD'.<br>    2019-03-04 15:08:16.765 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Requesting ID for 'read' token for 'dm/test'.<br>    2019-03-04 15:08:16.826 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Tokendata: {'request_id': '845ca454-5b0e-9518-9029-bf221c771e4f', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'data': {'value': 's.3nyTeqdWiINKIKNtuoIDtD9D'}, 'metadata': {'created_time': '2019-03-04T21:45:55.802574394Z', 'deletion_time': '', 'destroyed': False, 'version': 1}}, 'wrap_info': None, 'warnings': None, 'auth': None}<br>    2019-03-04 15:08:16.827 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Deleting 'read' token for 'dm/test'.<br>    2019-03-04 15:08:18.393 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Requesting ID for 'write' token for 'dm/test'.<br>    2019-03-04 15:08:18.454 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Tokendata: {'request_id': '5f3aae99-59f4-618b-cf1c-cb9bc3b39478', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'data': {'value': 's.4l4eDdLMyD436RsjRqlI11cD'}, 'metadata': {'created_time': '2019-03-04T21:45:58.325211493Z', 'deletion_time': '', 'destroyed': False, 'version': 1}}, 'wrap_info': None, 'warnings': None, 'auth': None}<br>    2019-03-04 15:08:18.455 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Deleting 'write' token for 'dm/test'.<br>    2019-03-04 15:08:19.845 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Deleting token store for 'dm/test'.<br>    2019-03-04 15:08:19.846 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Debug logging started.<br>    2019-03-04 15:08:19.846 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Debug logging started.<br>    2019-03-04 15:08:19.846 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Acquiring Vault client for 'https://35.184.246.111'.<br>    2019-03-04 15:08:19.846 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Acquiring Vault client for 'https://35.184.246.111'.<br>    2019-03-04 15:08:20.085 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Recursive delete of: 'delegated/dm/test'<br>    2019-03-04 15:08:20.085 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test' recursively.<br>    2019-03-04 15:08:20.085 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test' recursively.<br>    2019-03-04 15:08:20.199 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'delegated/dm/test'<br>    2019-03-04 15:08:20.199 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'delegated/dm/test'<br>    2019-03-04 15:08:20.199 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': '5c1f33cf-8878-a5c8-a884-1f5cda607fa6', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['read/', 'write/']}, 'wrap_info': None, 'warnings': None, 'auth': None}'<br>    2019-03-04 15:08:20.199 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': '5c1f33cf-8878-a5c8-a884-1f5cda607fa6', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['read/', 'write/']}, 'wrap_info': None, 'warnings': None, 'auth': None}'<br>    2019-03-04 15:08:20.199 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read' recursively.<br>    2019-03-04 15:08:20.199 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read' recursively.<br>    2019-03-04 15:08:20.317 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'delegated/dm/test/read'<br>    2019-03-04 15:08:20.317 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'delegated/dm/test/read'<br>    2019-03-04 15:08:20.317 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': '4d18f739-1ee7-c413-6b9a-1766f6f300de', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['accessor', 'id']}, 'wrap_info': None, 'warnings': None, 'auth': None}'<br>    2019-03-04 15:08:20.317 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': '4d18f739-1ee7-c413-6b9a-1766f6f300de', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['accessor', 'id']}, 'wrap_info': None, 'warnings': None, 'auth': None}'<br>    2019-03-04 15:08:20.317 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read/accessor' recursively.<br>    2019-03-04 15:08:20.317 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read/accessor' recursively.<br>    2019-03-04 15:08:20.422 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read/accessor' as leaf node.<br>    2019-03-04 15:08:20.422 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read/accessor' as leaf node.<br>    2019-03-04 15:08:20.422 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.<br>    2019-03-04 15:08:20.422 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.<br>    2019-03-04 15:08:20.856 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read/id' recursively.<br>    2019-03-04 15:08:20.856 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read/id' recursively.<br>    2019-03-04 15:08:20.971 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read/id' as leaf node.<br>    2019-03-04 15:08:20.971 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read/id' as leaf node.<br>    2019-03-04 15:08:20.972 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.<br>    2019-03-04 15:08:20.972 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.<br>    2019-03-04 15:08:21.406 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read' as leaf node.<br>    2019-03-04 15:08:21.406 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/read' as leaf node.<br>    2019-03-04 15:08:21.406 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.<br>    2019-03-04 15:08:21.406 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.<br>    2019-03-04 15:08:21.492 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write' recursively.<br>    2019-03-04 15:08:21.492 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write' recursively.<br>    2019-03-04 15:08:21.603 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'delegated/dm/test/write'<br>    2019-03-04 15:08:21.603 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing tree rooted at 'delegated/dm/test/write'<br>    2019-03-04 15:08:21.603 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': '8446aa1b-3d86-3b0d-eb55-01a9fe0e1cad', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['accessor', 'id']}, 'wrap_info': None, 'warnings': None, 'auth': None}'<br>    2019-03-04 15:08:21.603 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | resp = '{'request_id': '8446aa1b-3d86-3b0d-eb55-01a9fe0e1cad', 'lease_id': '', 'renewable': False, 'lease_duration': 0, 'data': {'keys': ['accessor', 'id']}, 'wrap_info': None, 'warnings': None, 'auth': None}'<br>    2019-03-04 15:08:21.603 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write/accessor' recursively.<br>    2019-03-04 15:08:21.603 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write/accessor' recursively.<br>    2019-03-04 15:08:21.707 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write/accessor' as leaf node.<br>    2019-03-04 15:08:21.707 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write/accessor' as leaf node.<br>    2019-03-04 15:08:21.708 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.<br>    2019-03-04 15:08:21.708 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.<br>    2019-03-04 15:08:22.120 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write/id' recursively.<br>    2019-03-04 15:08:22.120 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write/id' recursively.<br>    2019-03-04 15:08:22.224 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write/id' as leaf node.<br>    2019-03-04 15:08:22.224 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write/id' as leaf node.<br>    2019-03-04 15:08:22.224 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.<br>    2019-03-04 15:08:22.224 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.<br>    2019-03-04 15:08:22.673 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write' as leaf node.<br>    2019-03-04 15:08:22.673 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test/write' as leaf node.<br>    2019-03-04 15:08:22.673 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.<br>    2019-03-04 15:08:22.673 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.<br>    2019-03-04 15:08:22.761 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test' as leaf node.<br>    2019-03-04 15:08:22.761 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Removing 'delegated/dm/test' as leaf node.<br>    2019-03-04 15:08:22.761 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.<br>    2019-03-04 15:08:22.761 MST(-0700) [DEBUG] lsstvaultutils.recursivedeleter | Using token 's.86o9UFmo4bbd4yxs1pWHS2Z1'.<br>    2019-03-04 15:08:22.856 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Deleting policy for 'delegated/dm/test/read'.<br>    2019-03-04 15:08:23.039 MST(-0700) [DEBUG] lsstvaultutils.tokenadmin | Deleting policy for 'delegated/dm/test/write'.<br><br>And now the system is back in the state in which we started.<br><br>### Verifying token deletion<br><br>We can try an operation to see that the tokens have been revoked.  Set<br>up the (now-revoked) read token: `export<br>VAULT_TOKEN=\"s.3nyTeqdWiINKIKNtuoIDtD9D\"`.  Then try the same read we<br>previously ran again:<br><br>    (vaultutils) adam@ixitxachitl:~$ vault kv get secret/dm/test/group1/baz<br>    Error making API request.<br><br>    URL: GET https://35.184.246.111/v1/sys/internal/ui/mounts/secret/dm/test/group1/baz<br>    Code: 403. Errors:<br><br>    * permission denied<br><br><br>\n          </div>"}, "last_serial": 6633664, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "86d9f199998f5b9c172d9f739072c591", "sha256": "d74b2058f8594812383e1e9203759008019f70257c70002bb3a8fc67b2e02ed4"}, "downloads": -1, "filename": "lsstvaultutils-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "86d9f199998f5b9c172d9f739072c591", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10250, "upload_time": "2019-02-19T23:34:03", "upload_time_iso_8601": "2019-02-19T23:34:03.733303Z", "url": "https://files.pythonhosted.org/packages/c9/41/7aa3d51ea71c0de57dca73ea7b8739515bc801cb473118e23c3df4fd7847/lsstvaultutils-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b15bc4154bbbe55b16cb7803dd4d03b", "sha256": "1cf43a2439c8f9e905bad879db842a0dd61580f27539065bc90395988a356a18"}, "downloads": -1, "filename": "lsstvaultutils-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8b15bc4154bbbe55b16cb7803dd4d03b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6880, "upload_time": "2019-02-19T23:34:06", "upload_time_iso_8601": "2019-02-19T23:34:06.089653Z", "url": "https://files.pythonhosted.org/packages/c8/cb/91d185f0a5afb48cb52ac9168ff85814fdd041bb065ed1ca51c7c8d3c8d9/lsstvaultutils-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "7c2faf7f9c4ee7fa71b28edfd9179434", "sha256": "bb6b80e2b56fcc3a814b8dfe964ddaf33c8072db4038a1464c0402c77c7e0f9f"}, "downloads": -1, "filename": "lsstvaultutils-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7c2faf7f9c4ee7fa71b28edfd9179434", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10987, "upload_time": "2019-02-20T23:52:19", "upload_time_iso_8601": "2019-02-20T23:52:19.213269Z", "url": "https://files.pythonhosted.org/packages/cb/7d/870aff3d3af503b8c21bf317c2c3a7802d7d97c0796da1c50416e2173cda/lsstvaultutils-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "677603055c46c029778f86e9b31267aa", "sha256": "89224209545558f79b68130cd8d68a6e0f4f7f69f831d2e41ab0e0da4bdd8fc5"}, "downloads": -1, "filename": "lsstvaultutils-0.0.2.tar.gz", "has_sig": false, "md5_digest": "677603055c46c029778f86e9b31267aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8481, "upload_time": "2019-02-20T23:52:20", "upload_time_iso_8601": "2019-02-20T23:52:20.578495Z", "url": "https://files.pythonhosted.org/packages/3e/ce/90875298645c64aac21ed22019f7809960b3e2c3232acc732cc1ef53a625/lsstvaultutils-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "f56d7ebb0693ca012406b33753192035", "sha256": "b2c22f62e8338bf0b430e1d5265075c09b9f7b81fd11f73f03dc1aef57e5826b"}, "downloads": -1, "filename": "lsstvaultutils-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f56d7ebb0693ca012406b33753192035", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11201, "upload_time": "2019-02-21T01:19:09", "upload_time_iso_8601": "2019-02-21T01:19:09.038640Z", "url": "https://files.pythonhosted.org/packages/dc/7d/5fcb7ff19ad75ec4ffc4e62c2d8ad3ec2d623415b54ffe942160d61fda32/lsstvaultutils-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "adf6280076f025db2806a686c06c616b", "sha256": "e978a6d74fa0176a66961e97ed4ab4a00925b91d415d943cfdf79f1348a0cd54"}, "downloads": -1, "filename": "lsstvaultutils-0.0.3.tar.gz", "has_sig": false, "md5_digest": "adf6280076f025db2806a686c06c616b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8645, "upload_time": "2019-02-21T01:19:10", "upload_time_iso_8601": "2019-02-21T01:19:10.495381Z", "url": "https://files.pythonhosted.org/packages/df/06/fa20ac7381938123c7a1d9e8e55e9bf6ea922dace8aabdf98c887dc37a2a/lsstvaultutils-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "70ea426de4a7e2409afcbfcdc243a52b", "sha256": "a6590d9b009acc548450bfe01155c7125571ca1a3047c29744bfad9387ba40a0"}, "downloads": -1, "filename": "lsstvaultutils-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "70ea426de4a7e2409afcbfcdc243a52b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16214, "upload_time": "2019-03-04T22:18:22", "upload_time_iso_8601": "2019-03-04T22:18:22.434799Z", "url": "https://files.pythonhosted.org/packages/16/f5/3453b655aa4bd51a24345777c681990d61baba2f85e46ca56570b1bb7cb2/lsstvaultutils-0.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "176c54d63d52000eb5ba7da5351954e5", "sha256": "f33eff66b1296b64d102aa82e8b1ff115c279b71e7a83db54a6e599aeadd21af"}, "downloads": -1, "filename": "lsstvaultutils-0.0.4.tar.gz", "has_sig": false, "md5_digest": "176c54d63d52000eb5ba7da5351954e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24185, "upload_time": "2019-03-04T22:18:23", "upload_time_iso_8601": "2019-03-04T22:18:23.876849Z", "url": "https://files.pythonhosted.org/packages/a8/5f/1826a3e9cabc2d79a04e9ebc62cb4bb50c7b26c74ff537484b4a78e854a5/lsstvaultutils-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "185839470c295b29e2e6f60e371eff7d", "sha256": "09fa8740268ec23676ba9b35ad77e6694754728518be490159d15dc1a26baf07"}, "downloads": -1, "filename": "lsstvaultutils-0.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "185839470c295b29e2e6f60e371eff7d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16199, "upload_time": "2019-03-20T20:53:47", "upload_time_iso_8601": "2019-03-20T20:53:47.906486Z", "url": "https://files.pythonhosted.org/packages/55/28/b542b51274eed179256350c12f6686e005e92e2f47c54b17db114d7977e7/lsstvaultutils-0.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9592f47191cb5c48124a1a426af99019", "sha256": "c3bdadebf7cef232ce5470efe37e72316b6e56684b9d28199ebe8eae6a4f432a"}, "downloads": -1, "filename": "lsstvaultutils-0.0.5.tar.gz", "has_sig": false, "md5_digest": "9592f47191cb5c48124a1a426af99019", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24142, "upload_time": "2019-03-20T20:53:49", "upload_time_iso_8601": "2019-03-20T20:53:49.122940Z", "url": "https://files.pythonhosted.org/packages/68/a5/635f8d1950a84d09b830c28e65d071035dd7bc9be2dbee502e2acdfb2994/lsstvaultutils-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "18761de06b01c0694a961f52a4c15b9b", "sha256": "1747a64f2e31a12de3fe1da01b6f1236e59d509f087dbad53ddec257f61b0ca3"}, "downloads": -1, "filename": "lsstvaultutils-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "18761de06b01c0694a961f52a4c15b9b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16338, "upload_time": "2019-03-26T23:51:14", "upload_time_iso_8601": "2019-03-26T23:51:14.567202Z", "url": "https://files.pythonhosted.org/packages/65/02/b8f29fda3e855ff690c820b13697dc22e3763bf72b8c97440501c9ca6833/lsstvaultutils-0.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26eb6882335ac46479381af4ca087f5d", "sha256": "64952c07f031e145921ffafd548e2339db4dd5d335334099fb8f31bc34b89f9b"}, "downloads": -1, "filename": "lsstvaultutils-0.0.6.tar.gz", "has_sig": false, "md5_digest": "26eb6882335ac46479381af4ca087f5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24602, "upload_time": "2019-03-26T23:51:16", "upload_time_iso_8601": "2019-03-26T23:51:16.131228Z", "url": "https://files.pythonhosted.org/packages/a0/0e/055ecff07a5a058b6a052e4fe4fdbc9c7bfaac654016abcd09ba6f434830/lsstvaultutils-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "18761de06b01c0694a961f52a4c15b9b", "sha256": "1747a64f2e31a12de3fe1da01b6f1236e59d509f087dbad53ddec257f61b0ca3"}, "downloads": -1, "filename": "lsstvaultutils-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "18761de06b01c0694a961f52a4c15b9b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16338, "upload_time": "2019-03-26T23:51:14", "upload_time_iso_8601": "2019-03-26T23:51:14.567202Z", "url": "https://files.pythonhosted.org/packages/65/02/b8f29fda3e855ff690c820b13697dc22e3763bf72b8c97440501c9ca6833/lsstvaultutils-0.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26eb6882335ac46479381af4ca087f5d", "sha256": "64952c07f031e145921ffafd548e2339db4dd5d335334099fb8f31bc34b89f9b"}, "downloads": -1, "filename": "lsstvaultutils-0.0.6.tar.gz", "has_sig": false, "md5_digest": "26eb6882335ac46479381af4ca087f5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24602, "upload_time": "2019-03-26T23:51:16", "upload_time_iso_8601": "2019-03-26T23:51:16.131228Z", "url": "https://files.pythonhosted.org/packages/a0/0e/055ecff07a5a058b6a052e4fe4fdbc9c7bfaac654016abcd09ba6f434830/lsstvaultutils-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:24 2020"}