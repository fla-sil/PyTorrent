{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython"], "description": "# batch_processor\n\n[![CircleCI](https://circleci.com/gh/leon0707/batch_processor.svg?style=svg)](https://circleci.com/gh/leon0707/batch_processor)\n[![codecov](https://codecov.io/gh/leon0707/batch_processor/branch/master/graph/badge.svg)](https://codecov.io/gh/leon0707/batch_processor)\n\n## install\n```shell\npip install batch_processor\n```\n\n## quickstart\n```python\nfrom threading import Thread\nfrom batch_processor import BatchProcessor\n\ndef batch_func(batch):\n    return [v + v for v in batch]\n\ndef create_bulk_request(n, processor):\n    print(n, processor.process(n))\n\nprocessor = BatchProcessor(batch_func, worker_num=2, batch_size=32)\n\nthreads = []\nfor i in range(200):\n    t = Thread(target=create_bulk_request, args=(i, self.processor))\n    t.start()\n    threads.append(t)\n\nfor t in threads:\n    t.join()\n```\n\nThis piece of code generates discrete 200 incomming requests that can be processed in batches whose size is 32. There are 2 workers processing these requests. They take batches and double each integers in the batch, then return results in batches.\n\n## test\n* run test cases\n  ```shell\n  python tests/test_runner.py\n  ```\n* generate coverage\n  ```shell\n  coverage run tests/test_runner.py\n  ```\n* generate coverage html\n  ```shell\n  coverage html\n  ```\n\n## build\nbuild the distribution\n```shell\npython setup.py sdist bdist_wheel\n```\nupload to registry\n```shell\npython -m twine upload dist/*\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/leon0707/batch_processor", "keywords": "batch,multiprocessing,performance", "license": "", "maintainer": "", "maintainer_email": "", "name": "batch-processor", "package_url": "https://pypi.org/project/batch-processor/", "platform": "", "project_url": "https://pypi.org/project/batch-processor/", "project_urls": {"Homepage": "https://github.com/leon0707/batch_processor"}, "release_url": "https://pypi.org/project/batch-processor/0.0.3/", "requires_dist": null, "requires_python": ">=3.5", "summary": "This library is used to enable batch processing by implementing python multiprocessing", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>batch_processor</h1>\n<p><a href=\"https://circleci.com/gh/leon0707/batch_processor\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2f0338d0caa6a32c89a2e2789774c498d9c6df52/68747470733a2f2f636972636c6563692e636f6d2f67682f6c656f6e303730372f62617463685f70726f636573736f722e7376673f7374796c653d737667\"></a>\n<a href=\"https://codecov.io/gh/leon0707/batch_processor\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/216698fc0fae1fe34681ae0423b0f73f65d7f1ca/68747470733a2f2f636f6465636f762e696f2f67682f6c656f6e303730372f62617463685f70726f636573736f722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<h2>install</h2>\n<pre>pip install batch_processor\n</pre>\n<h2>quickstart</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">threading</span> <span class=\"kn\">import</span> <span class=\"n\">Thread</span>\n<span class=\"kn\">from</span> <span class=\"nn\">batch_processor</span> <span class=\"kn\">import</span> <span class=\"n\">BatchProcessor</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">batch_func</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">v</span> <span class=\"o\">+</span> <span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">batch</span><span class=\"p\">]</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">create_bulk_request</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">processor</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">processor</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">))</span>\n\n<span class=\"n\">processor</span> <span class=\"o\">=</span> <span class=\"n\">BatchProcessor</span><span class=\"p\">(</span><span class=\"n\">batch_func</span><span class=\"p\">,</span> <span class=\"n\">worker_num</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">)</span>\n\n<span class=\"n\">threads</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">):</span>\n    <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">Thread</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">create_bulk_request</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">processor</span><span class=\"p\">))</span>\n    <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n    <span class=\"n\">threads</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">threads</span><span class=\"p\">:</span>\n    <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">()</span>\n</pre>\n<p>This piece of code generates discrete 200 incomming requests that can be processed in batches whose size is 32. There are 2 workers processing these requests. They take batches and double each integers in the batch, then return results in batches.</p>\n<h2>test</h2>\n<ul>\n<li>run test cases\n<pre>python tests/test_runner.py\n</pre>\n</li>\n<li>generate coverage\n<pre>coverage run tests/test_runner.py\n</pre>\n</li>\n<li>generate coverage html\n<pre>coverage html\n</pre>\n</li>\n</ul>\n<h2>build</h2>\n<p>build the distribution</p>\n<pre>python setup.py sdist bdist_wheel\n</pre>\n<p>upload to registry</p>\n<pre>python -m twine upload dist/*\n</pre>\n\n          </div>"}, "last_serial": 6491699, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4a9174cd5b3adc90970972e2f2345cb1", "sha256": "7dd2da9ae6dcc13defc3d09391ba79e8b6ee0eba93f159ba7fd5fb00fed0c6bd"}, "downloads": -1, "filename": "batch_processor-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4a9174cd5b3adc90970972e2f2345cb1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4373, "upload_time": "2020-01-20T23:46:29", "upload_time_iso_8601": "2020-01-20T23:46:29.381172Z", "url": "https://files.pythonhosted.org/packages/63/38/cd0b11371bb273e1e2612709c1f6795c5e5a3dfd1a676b5178a4486cd7dc/batch_processor-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60b48c67c4395f38165b9c82edb6c03b", "sha256": "b4ff9f85224ffc26b24e257065f48f92a7f37364d74d9664133a313f8ba23774"}, "downloads": -1, "filename": "batch_processor-0.0.1.tar.gz", "has_sig": false, "md5_digest": "60b48c67c4395f38165b9c82edb6c03b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4773, "upload_time": "2020-01-20T23:46:32", "upload_time_iso_8601": "2020-01-20T23:46:32.372844Z", "url": "https://files.pythonhosted.org/packages/3f/14/d1d7474001678c924dff89f44b8df07557305834e9c22dccf05e9a3439f4/batch_processor-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "ff8cb03b7fd1e48b810fa8354b7111b0", "sha256": "2e4b90de2b501e478f4b589e1a3a79fb6f488d682165f589d3be4dfebce2e3c3"}, "downloads": -1, "filename": "batch_processor-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ff8cb03b7fd1e48b810fa8354b7111b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4379, "upload_time": "2020-01-21T01:47:55", "upload_time_iso_8601": "2020-01-21T01:47:55.211288Z", "url": "https://files.pythonhosted.org/packages/42/10/5072f6f5afb54ad3dd50fefb72fd9446364347f961639c78b0ce2f3eb58d/batch_processor-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f28e3220d0452d5a6ad123b9cc7d40a", "sha256": "9341c5d5f17d2efec364dc0bb5ed2498477afac64de650f26be2e0dd06a68feb"}, "downloads": -1, "filename": "batch_processor-0.0.2.tar.gz", "has_sig": false, "md5_digest": "7f28e3220d0452d5a6ad123b9cc7d40a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4764, "upload_time": "2020-01-21T01:47:57", "upload_time_iso_8601": "2020-01-21T01:47:57.308034Z", "url": "https://files.pythonhosted.org/packages/be/03/2d417ce0c3679d53e2d2baf129f73d9e73c8d689d73b3f89f17f186d91c4/batch_processor-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "de4a9f8335b09f7684a292e0cb870739", "sha256": "f1d5b81791fb1c697ef06d5bf6c9464b8c9dccf3acf0cc297b9fe6aed5aedc12"}, "downloads": -1, "filename": "batch_processor-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "de4a9f8335b09f7684a292e0cb870739", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4657, "upload_time": "2020-01-21T02:38:05", "upload_time_iso_8601": "2020-01-21T02:38:05.356908Z", "url": "https://files.pythonhosted.org/packages/b8/d8/be86cf2aa1f4f1e32f7721dfd182e5602f09fbd9987e8b4d6dea485bc185/batch_processor-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26860b14015925182447823ca850e629", "sha256": "56f9371757a743a238083ffdb3a8f2011f62cbca5804393552360c7eab6a95d5"}, "downloads": -1, "filename": "batch_processor-0.0.3.tar.gz", "has_sig": false, "md5_digest": "26860b14015925182447823ca850e629", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5168, "upload_time": "2020-01-21T02:38:08", "upload_time_iso_8601": "2020-01-21T02:38:08.124722Z", "url": "https://files.pythonhosted.org/packages/2e/7a/fc93fc279cbe1d31bcc28c98577a1524081db060ad0f08d4d94fd88bfb51/batch_processor-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "de4a9f8335b09f7684a292e0cb870739", "sha256": "f1d5b81791fb1c697ef06d5bf6c9464b8c9dccf3acf0cc297b9fe6aed5aedc12"}, "downloads": -1, "filename": "batch_processor-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "de4a9f8335b09f7684a292e0cb870739", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4657, "upload_time": "2020-01-21T02:38:05", "upload_time_iso_8601": "2020-01-21T02:38:05.356908Z", "url": "https://files.pythonhosted.org/packages/b8/d8/be86cf2aa1f4f1e32f7721dfd182e5602f09fbd9987e8b4d6dea485bc185/batch_processor-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26860b14015925182447823ca850e629", "sha256": "56f9371757a743a238083ffdb3a8f2011f62cbca5804393552360c7eab6a95d5"}, "downloads": -1, "filename": "batch_processor-0.0.3.tar.gz", "has_sig": false, "md5_digest": "26860b14015925182447823ca850e629", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5168, "upload_time": "2020-01-21T02:38:08", "upload_time_iso_8601": "2020-01-21T02:38:08.124722Z", "url": "https://files.pythonhosted.org/packages/2e/7a/fc93fc279cbe1d31bcc28c98577a1524081db060ad0f08d4d94fd88bfb51/batch_processor-0.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:44 2020"}