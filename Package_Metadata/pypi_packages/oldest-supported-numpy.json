{"info": {"author": "Thomas Robitaille", "author_email": "thomas.robitaille@gmail.com", "bugtrack_url": null, "classifiers": [], "description": ".. image:: https://img.shields.io/pypi/v/oldest-supported-numpy\n   :target: https://pypi.org/project/oldest-supported-numpy/\n   :alt: PyPI\n\nAbout\n-----\n\nThis is a meta-package which can be used in ``pyproject.toml`` files\nto automatically provide as a build-time dependency the oldest version\nof Numpy that supports the given Python version and platform. In case\nof platforms for which Numpy has prebuilt wheels, the provided version\nalso has a prebuilt Numpy wheel.\n\nThe reason to use the oldest available Numpy version as a build-time\ndependency is because of ABI compatibility. Binaries compiled with old\nNumpy versions are binary compatible with newer Numpy versions, but\nnot vice versa. This meta-package exists to make dealing with this\nmore convenient, without having to duplicate the same list manually in\nall packages requiring it.\n\nIn other words::\n\n    [build-system]\n    requires = [\n        \"wheel\",\n        \"setuptools\",\n        \"numpy==1.13.3; python_version=='3.5',\n        \"numpy==1.13.3; python_version=='3.6',\n        \"numpy==1.14.5; python_version=='3.7',\n        \"numpy==1.17.3; python_version>='3.8'\n    ]\n\ncan be replaced by::\n\n    [build-system]\n    requires = [\"wheel\", \"setuptools\", \"oldest-supported-numpy\"]\n\nAnd as new Python versions are released, the ``pyproject.toml`` file does not\nneed to be updated.\n\nQ&A\n---\n\nWhy define the Numpy pinnings using install_requires in this repository?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe Numpy version pinnings are defined inside the ``setup.cfg`` file as\n``install_requires`` dependencies, rather than as build-time dependencies\ninside ``pyproject.toml``. This is deliberate, since Numpy is not actually\nrequired to build wheels of **oldest-supported-numpy**. What we need here\nis to make sure that when **oldest-supported-numpy** is installed into\nthe build environment of a package using it, Numpy gets installed too\nas a **runtime** dependency inside the build environment.\n\nAnother way to think about this is that since we only publish (universal)\nwheels of **oldest-supported-numpy**, the wheel contains no ``pyproject.toml``,\n``setup.cfg``, or ``setup.py`` code - it only contains metadata including\ndependencies which get installed by pip when **oldest-supported-numpy** is\ninstalled.\n\nCan I use this if my package requires a recent version of Numpy?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIn many cases, even though your package may require a version of\nNumpy that is more recent than the pinned versions here, this\nis often a runtime requirement, i.e. for running (rather than\nbuilding) your package. In many cases, unless you use recent\nfeatures of the Numpy C API, you will still be able to build your\npackage with an older version of Numpy and therefore you will still\nbe able to use **oldest-supported-numpy**. You can still impose a\nmore recent Numpy requirement in ``install_requires``\n\nWhat about having a catchier name for this package?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe current name is not very catchy as package names go, but it\nis very descriptive. This package is only meant to be used in\n``pyproject.toml`` files for defining build-time dependencies,\nso it's more important to have a descriptive than a catchy name!\n\nWhat if I think that one of the pinnings is wrong or out of date?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPlease feel free to `open an issue <https://github.com/scipy/oldest-supported-numpy/issues/new>`_\nor a pull request if you think something is wrong or could be improved!\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scipy/oldest-supported-numpy", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "oldest-supported-numpy", "package_url": "https://pypi.org/project/oldest-supported-numpy/", "platform": "", "project_url": "https://pypi.org/project/oldest-supported-numpy/", "project_urls": {"Homepage": "https://github.com/scipy/oldest-supported-numpy"}, "release_url": "https://pypi.org/project/oldest-supported-numpy/0.3/", "requires_dist": ["numpy (==1.13.3) ; python_version == \"3.5\" and platform_system != \"AIX\"", "numpy (==1.16.0) ; python_version == \"3.5\" and platform_system == \"AIX\"", "numpy (==1.13.3) ; python_version == \"3.6\" and platform_system != \"AIX\"", "numpy (==1.16.0) ; python_version == \"3.6\" and platform_system == \"AIX\"", "numpy (==1.14.5) ; python_version == \"3.7\" and platform_system != \"AIX\"", "numpy (==1.16.0) ; python_version == \"3.7\" and platform_system == \"AIX\"", "numpy (==1.17.3) ; python_version >= \"3.8\" and platform_system != \"AIX\"", "numpy (==1.17.3) ; python_version >= \"3.8\" and platform_system == \"AIX\""], "requires_python": ">=3.5", "summary": "Meta-package that provides the oldest Numpy for given Python version and platform", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/oldest-supported-numpy/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e418dd59e43e65d58906538aa469be886b237eb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6f6c646573742d737570706f727465642d6e756d7079\"></a>\n<div id=\"about\">\n<h2>About</h2>\n<p>This is a meta-package which can be used in <tt>pyproject.toml</tt> files\nto automatically provide as a build-time dependency the oldest version\nof Numpy that supports the given Python version and platform. In case\nof platforms for which Numpy has prebuilt wheels, the provided version\nalso has a prebuilt Numpy wheel.</p>\n<p>The reason to use the oldest available Numpy version as a build-time\ndependency is because of ABI compatibility. Binaries compiled with old\nNumpy versions are binary compatible with newer Numpy versions, but\nnot vice versa. This meta-package exists to make dealing with this\nmore convenient, without having to duplicate the same list manually in\nall packages requiring it.</p>\n<p>In other words:</p>\n<pre>[build-system]\nrequires = [\n    \"wheel\",\n    \"setuptools\",\n    \"numpy==1.13.3; python_version=='3.5',\n    \"numpy==1.13.3; python_version=='3.6',\n    \"numpy==1.14.5; python_version=='3.7',\n    \"numpy==1.17.3; python_version&gt;='3.8'\n]\n</pre>\n<p>can be replaced by:</p>\n<pre>[build-system]\nrequires = [\"wheel\", \"setuptools\", \"oldest-supported-numpy\"]\n</pre>\n<p>And as new Python versions are released, the <tt>pyproject.toml</tt> file does not\nneed to be updated.</p>\n</div>\n<div id=\"q-a\">\n<h2>Q&amp;A</h2>\n<div id=\"why-define-the-numpy-pinnings-using-install-requires-in-this-repository\">\n<h3>Why define the Numpy pinnings using install_requires in this repository?</h3>\n<p>The Numpy version pinnings are defined inside the <tt>setup.cfg</tt> file as\n<tt>install_requires</tt> dependencies, rather than as build-time dependencies\ninside <tt>pyproject.toml</tt>. This is deliberate, since Numpy is not actually\nrequired to build wheels of <strong>oldest-supported-numpy</strong>. What we need here\nis to make sure that when <strong>oldest-supported-numpy</strong> is installed into\nthe build environment of a package using it, Numpy gets installed too\nas a <strong>runtime</strong> dependency inside the build environment.</p>\n<p>Another way to think about this is that since we only publish (universal)\nwheels of <strong>oldest-supported-numpy</strong>, the wheel contains no <tt>pyproject.toml</tt>,\n<tt>setup.cfg</tt>, or <tt>setup.py</tt> code - it only contains metadata including\ndependencies which get installed by pip when <strong>oldest-supported-numpy</strong> is\ninstalled.</p>\n</div>\n<div id=\"can-i-use-this-if-my-package-requires-a-recent-version-of-numpy\">\n<h3>Can I use this if my package requires a recent version of Numpy?</h3>\n<p>In many cases, even though your package may require a version of\nNumpy that is more recent than the pinned versions here, this\nis often a runtime requirement, i.e. for running (rather than\nbuilding) your package. In many cases, unless you use recent\nfeatures of the Numpy C API, you will still be able to build your\npackage with an older version of Numpy and therefore you will still\nbe able to use <strong>oldest-supported-numpy</strong>. You can still impose a\nmore recent Numpy requirement in <tt>install_requires</tt></p>\n</div>\n<div id=\"what-about-having-a-catchier-name-for-this-package\">\n<h3>What about having a catchier name for this package?</h3>\n<p>The current name is not very catchy as package names go, but it\nis very descriptive. This package is only meant to be used in\n<tt>pyproject.toml</tt> files for defining build-time dependencies,\nso it\u2019s more important to have a descriptive than a catchy name!</p>\n</div>\n<div id=\"what-if-i-think-that-one-of-the-pinnings-is-wrong-or-out-of-date\">\n<h3>What if I think that one of the pinnings is wrong or out of date?</h3>\n<p>Please feel free to <a href=\"https://github.com/scipy/oldest-supported-numpy/issues/new\" rel=\"nofollow\">open an issue</a>\nor a pull request if you think something is wrong or could be improved!</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7032851, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "f9115392cdd5d48824b507f52ea1b1de", "sha256": "ebd1cfe81b19953b34ee1f2f834a1c134ee2dbaf274d13a244b910276dbfe1fc"}, "downloads": -1, "filename": "oldest_supported_numpy-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f9115392cdd5d48824b507f52ea1b1de", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 2225, "upload_time": "2019-11-26T09:27:41", "upload_time_iso_8601": "2019-11-26T09:27:41.568901Z", "url": "https://files.pythonhosted.org/packages/6d/5d/cb0794fc50825e56862ba24f9181902facc91a9b4252096a02b99502dd03/oldest_supported_numpy-0.1-py2.py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "422dc9bc00015fe73a5e75d6f679a1c4", "sha256": "4092ab1777e11d19e15affa78bcfc6dfe4dcd77cdb80ff9eca43281999cde47a"}, "downloads": -1, "filename": "oldest_supported_numpy-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "422dc9bc00015fe73a5e75d6f679a1c4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 2463, "upload_time": "2019-11-26T09:39:34", "upload_time_iso_8601": "2019-11-26T09:39:34.535753Z", "url": "https://files.pythonhosted.org/packages/58/c0/6465d606351720ffa75fdabd2a58d6cfc2504ac994542d735ea478510a6c/oldest_supported_numpy-0.2-py2.py3-none-any.whl", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "199f74be055eef93a291157ad93f9be7", "sha256": "a3e357febf84af0e0fb82d284f3b383afcfd7750d42ea91816bbb28044fe9802"}, "downloads": -1, "filename": "oldest_supported_numpy-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "199f74be055eef93a291157ad93f9be7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 3542, "upload_time": "2020-04-16T15:12:10", "upload_time_iso_8601": "2020-04-16T15:12:10.506921Z", "url": "https://files.pythonhosted.org/packages/47/4a/732d87fcf3040a974b7dc1945e36d942e63dd339097e4fed047cd415fb39/oldest_supported_numpy-0.3-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "199f74be055eef93a291157ad93f9be7", "sha256": "a3e357febf84af0e0fb82d284f3b383afcfd7750d42ea91816bbb28044fe9802"}, "downloads": -1, "filename": "oldest_supported_numpy-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "199f74be055eef93a291157ad93f9be7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 3542, "upload_time": "2020-04-16T15:12:10", "upload_time_iso_8601": "2020-04-16T15:12:10.506921Z", "url": "https://files.pythonhosted.org/packages/47/4a/732d87fcf3040a974b7dc1945e36d942e63dd339097e4fed047cd415fb39/oldest_supported_numpy-0.3-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:04:42 2020"}