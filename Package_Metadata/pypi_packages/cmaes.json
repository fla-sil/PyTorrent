{"info": {"author": "Masashi Shibata", "author_email": "shibata_masashi@cyberagent.co.jp", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only"], "description": "# CMA-ES\n\nLightweight Covariance Matrix Adaptation Evolution Strategy (CMA-ES) [1] implementation.\n\n![visualize-six-hump-camel](https://user-images.githubusercontent.com/5564044/73486622-db5cff00-43e8-11ea-98fb-8246dbacab6d.gif)\n\n<details>\n<summary>Himmelblau function.</summary>\n\n![visualize-himmelblau](https://user-images.githubusercontent.com/5564044/73486618-dac46880-43e8-11ea-8a2e-69d745f008b5.gif)\n\n</details>\n\n<details>\n<summary>Rosenbrock function.</summary>\n\n![visualize-rosenbrock](https://user-images.githubusercontent.com/5564044/73486620-dac46880-43e8-11ea-9295-ec0bfa774655.gif)\n\n</details>\n\n<details>\n<summary>Quadratic function.</summary>\n\n![visualize-quadratic](https://user-images.githubusercontent.com/5564044/73486619-dac46880-43e8-11ea-859d-5f8358ac8be9.gif)\n\n</details>\n\nThese GIF animations are generated by [visualizer.py](./visualizer/visualizer.py).\n\n\n## Installation\n\nSupported Python versions are 3.5 or later.\n\n```\n$ pip install cmaes\n```\n\nOr you can install via [conda-forge](https://anaconda.org/conda-forge/cmaes).\n\n```\n$ conda install -c conda-forge cmaes\n```\n\n## Usage\n\nThis library provides two interfaces that an Optuna's sampler interface and a low-level interface.\nI recommend you to use this library via Optuna.\n\n### Optuna's sampler interface\n\n[Optuna](https://github.com/optuna/optuna) [2] is an automatic hyperparameter optimization framework.\nA sampler based on this library is available from [Optuna v1.3.0](https://github.com/optuna/optuna/releases/tag/v1.3.0).\nUsage is like this:\n\n```python\nimport optuna\n\ndef objective(trial: optuna.Trial):\n    x1 = trial.suggest_uniform(\"x1\", -4, 4)\n    x2 = trial.suggest_uniform(\"x2\", -4, 4)\n    return (x1 - 3) ** 2 + (10 * (x2 + 2)) ** 2\n\nif __name__ == \"__main__\":\n    sampler = optuna.samplers.CmaEsSampler()\n    study = optuna.create_study(sampler=sampler)\n    study.optimize(objective, n_trials=250)\n```\n\nSee [the documentation](https://optuna.readthedocs.io/en/stable/reference/samplers.html#optuna.samplers.CmaEsSampler) for more details.\n\n<details>\n\n<summary>Monkeypatch for faster CMA-ES sampler of Optuna v1.3.x.</summary>\n\nIf you are using Optuna v1.3.x, you can make `optuna.samplers.CmaEsSampler` faster.\n\n```python\nimport optuna\nfrom cmaes.monkeypatch import patch_fast_intersection_search_space\n\npatch_fast_intersection_search_space()\n\ndef objective(trial: optuna.Trial):\n    x1 = trial.suggest_float(\"x1\", -4, 4)\n    x2 = trial.suggest_float(\"x2\", -4, 4)\n    return (x1 - 3) ** 2 + (10 * (x2 + 2)) ** 2\n\nif __name__ == \"__main__\":\n    sampler = optuna.samplers.CmaEsSampler()\n    study = optuna.create_study(sampler=sampler)\n    study.optimize(objective, n_trials=250)\n```\n\n</details>\n\n<details>\n\n<summary>For older versions (Optuna v1.2.0 or older)</summary>\n\nIf you are using older versions, please use `cmaes.samlper.CMASampler`.\n\n```python\nimport optuna\nfrom cmaes.sampler import CMASampler\n\ndef objective(trial: optuna.Trial):\n    x1 = trial.suggest_uniform(\"x1\", -4, 4)\n    x2 = trial.suggest_uniform(\"x2\", -4, 4)\n    return (x1 - 3) ** 2 + (10 * (x2 + 2)) ** 2\n\nif __name__ == \"__main__\":\n    sampler = CMASampler()\n    study = optuna.create_study(sampler=sampler)\n    study.optimize(objective, n_trials=250)\n```\n\n</details>\n\nNote that CmaEsSampler doesn't support categorical distributions.\nIf your search space contains a categorical distribution, please use [TPESampler](https://optuna.readthedocs.io/en/latest/reference/samplers.html#optuna.samplers.TPESampler).\n\n### Low-level interface\n\nThis library also provides an \"ask-and-tell\" style interface.\n\n```python\nimport numpy as np\nfrom cmaes import CMA\n\ndef quadratic(x1, x2):\n    return (x1 - 3) ** 2 + (10 * (x2 + 2)) ** 2\n\nif __name__ == \"__main__\":\n    cma_es = CMA(mean=np.zeros(2), sigma=1.3)\n\n    for generation in range(50):\n        solutions = []\n        for _ in range(cma_es.population_size):\n            x = cma_es.ask()\n            value = quadratic(x[0], x[1])\n            solutions.append((x, value))\n            print(f\"#{generation} {value} (x1={x[0]}, x2 = {x[1]})\")\n        cma_es.tell(solutions)\n```\n\n## Benchmark results\n\nOptuna officially implements [a sampler based on pycma](https://optuna.readthedocs.io/en/latest/reference/integration.html#optuna.integration.CmaEsSampler).\nIt achieves almost the same performance. But this library is faster and simple.\n\n### Algorithm's efficiency\n\n| [Rosenbrock function](https://www.sfu.ca/~ssurjano/rosen.html) | [Six-Hump Camel function](https://www.sfu.ca/~ssurjano/camel6.html) |\n| ------------------- | ----------------------- |\n| ![rosenbrock](https://user-images.githubusercontent.com/5564044/73486735-0cd5ca80-43e9-11ea-9e6e-35028edf4ee8.png) | ![six-hump-camel](https://user-images.githubusercontent.com/5564044/73486738-0e9f8e00-43e9-11ea-8e65-d60fd5853b8d.png) |\n\nThis implementation (green) stands comparison with [pycma](https://github.com/CMA-ES/pycma) (blue).\nSee [benchmark](./benchmark) for details.\n\n### Execution Speed\n\n| trials/params | storage | pycma integration sampler |       this library      |\n| ------------- | ------- | ------------------------- | ----------------------- |\n|     100 /   5 |  memory |     4.976 sec (+/- 0.596) |   0.197 sec (+/- 0.078) |\n|     500 /   5 |  memory |    71.651 sec (+/- 3.847) |   0.656 sec (+/- 0.044) |\n|     500 /  50 |  memory |   291.002 sec (+/- 5.010) |   1.981 sec (+/- 0.041) |\n|     100 /   5 |  sqlite |    16.143 sec (+/- 3.487) |  11.843 sec (+/- 1.390) |\n|     500 /   5 |  sqlite |   129.436 sec (+/- 6.279) |  43.735 sec (+/- 2.676) |\n|     500 /  50 |  sqlite |   397.084 sec (+/- 6.618) | 150.531 sec (+/- 1.113) |\n\n[This script](./benchmark/speed_test.py) was run on my laptop with `--times 4`. So the times should not be taken precisely.\nEven though, it is clear that this library is extremely faster than Optuna's pycma sampler (with Optuna v1.0.0 and pycma v2.7.0).\n\nLinks\n-----\n\n**Other libraries:**\n\nI respect all libraries involved in CMA-ES.\n\n* [pycma](https://github.com/CMA-ES/pycma) : Most famous CMA-ES implementation by Nikolaus Hansen.\n* [cma-es](https://github.com/srom/cma-es) : A Tensorflow v2 implementation.\n\n**References:**\n\n* [1] [N. Hansen, The CMA Evolution Strategy: A Tutorial. arXiv:1604.00772, 2016.](https://arxiv.org/abs/1604.00772)\n* [2] [Takuya Akiba, Shotaro Sano, Toshihiko Yanase, Takeru Ohta, Masanori Koyama. 2019. Optuna: A Next-generation Hyperparameter Optimization Framework. In The 25th ACM SIGKDD Conference on Knowledge Discovery and Data Mining (KDD \u201919), August 4\u20138, 2019.](https://dl.acm.org/citation.cfm?id=3330701)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CyberAgent/cmaes", "keywords": "cma-es evolution-strategy optuna", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "cmaes", "package_url": "https://pypi.org/project/cmaes/", "platform": "", "project_url": "https://pypi.org/project/cmaes/", "project_urls": {"Homepage": "https://github.com/CyberAgent/cmaes"}, "release_url": "https://pypi.org/project/cmaes/0.5.0/", "requires_dist": ["numpy", "kurobako ; extra == 'benchmark'", "cma ; extra == 'benchmark'", "optuna ; extra == 'benchmark'", "mypy ; extra == 'lint'", "flake8 ; extra == 'lint'", "black ; extra == 'lint'", "optuna ; extra == 'lint'", "wheel ; extra == 'release'", "twine ; extra == 'release'", "optuna ; extra == 'test'", "matplotlib ; extra == 'visualization'", "scipy ; extra == 'visualization'"], "requires_python": "", "summary": "Lightweight Covariance Matrix Adaptation Evolution Strategy (CMA-ES) implementation for Python 3.", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>CMA-ES</h1>\n<p>Lightweight Covariance Matrix Adaptation Evolution Strategy (CMA-ES) [1] implementation.</p>\n<p><img alt=\"visualize-six-hump-camel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0febe0980e7c012ff9227653c83da92b61a99184/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f353536343034342f37333438363632322d64623563666630302d343365382d313165612d393866622d3832343664626163616236642e676966\"></p>\n<details>\n<summary>Himmelblau function.</summary>\n<p><img alt=\"visualize-himmelblau\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9aa63e0ce965b67bacb3243a3a5d3899d41c26dd/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f353536343034342f37333438363631382d64616334363838302d343365382d313165612d386132652d3639643734356630303862352e676966\"></p>\n</details>\n<details>\n<summary>Rosenbrock function.</summary>\n<p><img alt=\"visualize-rosenbrock\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b72b7d439fe2d41ab943efe984b2d03ded861282/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f353536343034342f37333438363632302d64616334363838302d343365382d313165612d393239352d6563306266613737343635352e676966\"></p>\n</details>\n<details>\n<summary>Quadratic function.</summary>\n<p><img alt=\"visualize-quadratic\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/93c018a0c70bd0f28bef8c5cd327bc2a62151183/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f353536343034342f37333438363631392d64616334363838302d343365382d313165612d383539642d3566383335386163386265392e676966\"></p>\n</details>\n<p>These GIF animations are generated by <a href=\"./visualizer/visualizer.py\" rel=\"nofollow\">visualizer.py</a>.</p>\n<h2>Installation</h2>\n<p>Supported Python versions are 3.5 or later.</p>\n<pre><code>$ pip install cmaes\n</code></pre>\n<p>Or you can install via <a href=\"https://anaconda.org/conda-forge/cmaes\" rel=\"nofollow\">conda-forge</a>.</p>\n<pre><code>$ conda install -c conda-forge cmaes\n</code></pre>\n<h2>Usage</h2>\n<p>This library provides two interfaces that an Optuna's sampler interface and a low-level interface.\nI recommend you to use this library via Optuna.</p>\n<h3>Optuna's sampler interface</h3>\n<p><a href=\"https://github.com/optuna/optuna\" rel=\"nofollow\">Optuna</a> [2] is an automatic hyperparameter optimization framework.\nA sampler based on this library is available from <a href=\"https://github.com/optuna/optuna/releases/tag/v1.3.0\" rel=\"nofollow\">Optuna v1.3.0</a>.\nUsage is like this:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">optuna</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">objective</span><span class=\"p\">(</span><span class=\"n\">trial</span><span class=\"p\">:</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">Trial</span><span class=\"p\">):</span>\n    <span class=\"n\">x1</span> <span class=\"o\">=</span> <span class=\"n\">trial</span><span class=\"o\">.</span><span class=\"n\">suggest_uniform</span><span class=\"p\">(</span><span class=\"s2\">\"x1\"</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n    <span class=\"n\">x2</span> <span class=\"o\">=</span> <span class=\"n\">trial</span><span class=\"o\">.</span><span class=\"n\">suggest_uniform</span><span class=\"p\">(</span><span class=\"s2\">\"x2\"</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">x1</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">**</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">x2</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">))</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">sampler</span> <span class=\"o\">=</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">samplers</span><span class=\"o\">.</span><span class=\"n\">CmaEsSampler</span><span class=\"p\">()</span>\n    <span class=\"n\">study</span> <span class=\"o\">=</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">create_study</span><span class=\"p\">(</span><span class=\"n\">sampler</span><span class=\"o\">=</span><span class=\"n\">sampler</span><span class=\"p\">)</span>\n    <span class=\"n\">study</span><span class=\"o\">.</span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">objective</span><span class=\"p\">,</span> <span class=\"n\">n_trials</span><span class=\"o\">=</span><span class=\"mi\">250</span><span class=\"p\">)</span>\n</pre>\n<p>See <a href=\"https://optuna.readthedocs.io/en/stable/reference/samplers.html#optuna.samplers.CmaEsSampler\" rel=\"nofollow\">the documentation</a> for more details.</p>\n<details>\n<summary>Monkeypatch for faster CMA-ES sampler of Optuna v1.3.x.</summary>\n<p>If you are using Optuna v1.3.x, you can make <code>optuna.samplers.CmaEsSampler</code> faster.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">optuna</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cmaes.monkeypatch</span> <span class=\"kn\">import</span> <span class=\"n\">patch_fast_intersection_search_space</span>\n\n<span class=\"n\">patch_fast_intersection_search_space</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">objective</span><span class=\"p\">(</span><span class=\"n\">trial</span><span class=\"p\">:</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">Trial</span><span class=\"p\">):</span>\n    <span class=\"n\">x1</span> <span class=\"o\">=</span> <span class=\"n\">trial</span><span class=\"o\">.</span><span class=\"n\">suggest_float</span><span class=\"p\">(</span><span class=\"s2\">\"x1\"</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n    <span class=\"n\">x2</span> <span class=\"o\">=</span> <span class=\"n\">trial</span><span class=\"o\">.</span><span class=\"n\">suggest_float</span><span class=\"p\">(</span><span class=\"s2\">\"x2\"</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">x1</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">**</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">x2</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">))</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">sampler</span> <span class=\"o\">=</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">samplers</span><span class=\"o\">.</span><span class=\"n\">CmaEsSampler</span><span class=\"p\">()</span>\n    <span class=\"n\">study</span> <span class=\"o\">=</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">create_study</span><span class=\"p\">(</span><span class=\"n\">sampler</span><span class=\"o\">=</span><span class=\"n\">sampler</span><span class=\"p\">)</span>\n    <span class=\"n\">study</span><span class=\"o\">.</span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">objective</span><span class=\"p\">,</span> <span class=\"n\">n_trials</span><span class=\"o\">=</span><span class=\"mi\">250</span><span class=\"p\">)</span>\n</pre>\n</details>\n<details>\n<summary>For older versions (Optuna v1.2.0 or older)</summary>\n<p>If you are using older versions, please use <code>cmaes.samlper.CMASampler</code>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">optuna</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cmaes.sampler</span> <span class=\"kn\">import</span> <span class=\"n\">CMASampler</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">objective</span><span class=\"p\">(</span><span class=\"n\">trial</span><span class=\"p\">:</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">Trial</span><span class=\"p\">):</span>\n    <span class=\"n\">x1</span> <span class=\"o\">=</span> <span class=\"n\">trial</span><span class=\"o\">.</span><span class=\"n\">suggest_uniform</span><span class=\"p\">(</span><span class=\"s2\">\"x1\"</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n    <span class=\"n\">x2</span> <span class=\"o\">=</span> <span class=\"n\">trial</span><span class=\"o\">.</span><span class=\"n\">suggest_uniform</span><span class=\"p\">(</span><span class=\"s2\">\"x2\"</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">x1</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">**</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">x2</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">))</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">sampler</span> <span class=\"o\">=</span> <span class=\"n\">CMASampler</span><span class=\"p\">()</span>\n    <span class=\"n\">study</span> <span class=\"o\">=</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">create_study</span><span class=\"p\">(</span><span class=\"n\">sampler</span><span class=\"o\">=</span><span class=\"n\">sampler</span><span class=\"p\">)</span>\n    <span class=\"n\">study</span><span class=\"o\">.</span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">objective</span><span class=\"p\">,</span> <span class=\"n\">n_trials</span><span class=\"o\">=</span><span class=\"mi\">250</span><span class=\"p\">)</span>\n</pre>\n</details>\n<p>Note that CmaEsSampler doesn't support categorical distributions.\nIf your search space contains a categorical distribution, please use <a href=\"https://optuna.readthedocs.io/en/latest/reference/samplers.html#optuna.samplers.TPESampler\" rel=\"nofollow\">TPESampler</a>.</p>\n<h3>Low-level interface</h3>\n<p>This library also provides an \"ask-and-tell\" style interface.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cmaes</span> <span class=\"kn\">import</span> <span class=\"n\">CMA</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">quadratic</span><span class=\"p\">(</span><span class=\"n\">x1</span><span class=\"p\">,</span> <span class=\"n\">x2</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">x1</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">**</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">x2</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">))</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">cma_es</span> <span class=\"o\">=</span> <span class=\"n\">CMA</span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">sigma</span><span class=\"o\">=</span><span class=\"mf\">1.3</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">generation</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">):</span>\n        <span class=\"n\">solutions</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">cma_es</span><span class=\"o\">.</span><span class=\"n\">population_size</span><span class=\"p\">):</span>\n            <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">cma_es</span><span class=\"o\">.</span><span class=\"n\">ask</span><span class=\"p\">()</span>\n            <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">quadratic</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"n\">solutions</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">))</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"#</span><span class=\"si\">{</span><span class=\"n\">generation</span><span class=\"si\">}</span><span class=\"s2\"> </span><span class=\"si\">{</span><span class=\"n\">value</span><span class=\"si\">}</span><span class=\"s2\"> (x1=</span><span class=\"si\">{</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">, x2 = </span><span class=\"si\">{</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">)\"</span><span class=\"p\">)</span>\n        <span class=\"n\">cma_es</span><span class=\"o\">.</span><span class=\"n\">tell</span><span class=\"p\">(</span><span class=\"n\">solutions</span><span class=\"p\">)</span>\n</pre>\n<h2>Benchmark results</h2>\n<p>Optuna officially implements <a href=\"https://optuna.readthedocs.io/en/latest/reference/integration.html#optuna.integration.CmaEsSampler\" rel=\"nofollow\">a sampler based on pycma</a>.\nIt achieves almost the same performance. But this library is faster and simple.</p>\n<h3>Algorithm's efficiency</h3>\n<table>\n<thead>\n<tr>\n<th><a href=\"https://www.sfu.ca/%7Essurjano/rosen.html\" rel=\"nofollow\">Rosenbrock function</a></th>\n<th><a href=\"https://www.sfu.ca/%7Essurjano/camel6.html\" rel=\"nofollow\">Six-Hump Camel function</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img alt=\"rosenbrock\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/47b2c6dda65b41a0749b84ebfa832e1041743dd5/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f353536343034342f37333438363733352d30636435636138302d343365392d313165612d396536652d3335303238656466346565382e706e67\"></td>\n<td><img alt=\"six-hump-camel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7df2e3cfe6f1e2edf0915c90ad293131e5526d21/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f353536343034342f37333438363733382d30653966386530302d343365392d313165612d386536352d6436306664353835336238642e706e67\"></td>\n</tr></tbody></table>\n<p>This implementation (green) stands comparison with <a href=\"https://github.com/CMA-ES/pycma\" rel=\"nofollow\">pycma</a> (blue).\nSee <a href=\"./benchmark\" rel=\"nofollow\">benchmark</a> for details.</p>\n<h3>Execution Speed</h3>\n<table>\n<thead>\n<tr>\n<th>trials/params</th>\n<th>storage</th>\n<th>pycma integration sampler</th>\n<th>this library</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>100 /   5</td>\n<td>memory</td>\n<td>4.976 sec (+/- 0.596)</td>\n<td>0.197 sec (+/- 0.078)</td>\n</tr>\n<tr>\n<td>500 /   5</td>\n<td>memory</td>\n<td>71.651 sec (+/- 3.847)</td>\n<td>0.656 sec (+/- 0.044)</td>\n</tr>\n<tr>\n<td>500 /  50</td>\n<td>memory</td>\n<td>291.002 sec (+/- 5.010)</td>\n<td>1.981 sec (+/- 0.041)</td>\n</tr>\n<tr>\n<td>100 /   5</td>\n<td>sqlite</td>\n<td>16.143 sec (+/- 3.487)</td>\n<td>11.843 sec (+/- 1.390)</td>\n</tr>\n<tr>\n<td>500 /   5</td>\n<td>sqlite</td>\n<td>129.436 sec (+/- 6.279)</td>\n<td>43.735 sec (+/- 2.676)</td>\n</tr>\n<tr>\n<td>500 /  50</td>\n<td>sqlite</td>\n<td>397.084 sec (+/- 6.618)</td>\n<td>150.531 sec (+/- 1.113)</td>\n</tr></tbody></table>\n<p><a href=\"./benchmark/speed_test.py\" rel=\"nofollow\">This script</a> was run on my laptop with <code>--times 4</code>. So the times should not be taken precisely.\nEven though, it is clear that this library is extremely faster than Optuna's pycma sampler (with Optuna v1.0.0 and pycma v2.7.0).</p>\n<h2>Links</h2>\n<p><strong>Other libraries:</strong></p>\n<p>I respect all libraries involved in CMA-ES.</p>\n<ul>\n<li><a href=\"https://github.com/CMA-ES/pycma\" rel=\"nofollow\">pycma</a> : Most famous CMA-ES implementation by Nikolaus Hansen.</li>\n<li><a href=\"https://github.com/srom/cma-es\" rel=\"nofollow\">cma-es</a> : A Tensorflow v2 implementation.</li>\n</ul>\n<p><strong>References:</strong></p>\n<ul>\n<li>[1] <a href=\"https://arxiv.org/abs/1604.00772\" rel=\"nofollow\">N. Hansen, The CMA Evolution Strategy: A Tutorial. arXiv:1604.00772, 2016.</a></li>\n<li>[2] <a href=\"https://dl.acm.org/citation.cfm?id=3330701\" rel=\"nofollow\">Takuya Akiba, Shotaro Sano, Toshihiko Yanase, Takeru Ohta, Masanori Koyama. 2019. Optuna: A Next-generation Hyperparameter Optimization Framework. In The 25th ACM SIGKDD Conference on Knowledge Discovery and Data Mining (KDD \u201919), August 4\u20138, 2019.</a></li>\n</ul>\n\n          </div>"}, "last_serial": 7075603, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4d35dd1d7a18dc3a9874817e2378b405", "sha256": "11a406fa908c652f93c49f1452b2bc79b2d7222b6a477ef76f95d8aed9bfb402"}, "downloads": -1, "filename": "cmaes-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4d35dd1d7a18dc3a9874817e2378b405", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8930, "upload_time": "2020-01-30T13:25:46", "upload_time_iso_8601": "2020-01-30T13:25:46.416808Z", "url": "https://files.pythonhosted.org/packages/0c/57/65718a2a43850ee38313fdfda687c9ee07591746856c05b8e9b8e7bdece0/cmaes-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b157ad4b55acd36be48ca037c6422380", "sha256": "7ce16e919aed657712cad45c767290b5736448785da1efdc76e47946adcb3003"}, "downloads": -1, "filename": "cmaes-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b157ad4b55acd36be48ca037c6422380", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1100662, "upload_time": "2020-01-30T13:25:50", "upload_time_iso_8601": "2020-01-30T13:25:50.039875Z", "url": "https://files.pythonhosted.org/packages/1f/b9/0d27985942db0fc4c083c2da3edf41e56bc4d620a93963fd4b39349a1dda/cmaes-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "3991c7544d30b4653be4218d894da1e7", "sha256": "26ab86bdc815d83765461f66d5283d6ecc2f8eb164a93f38467f426aed903314"}, "downloads": -1, "filename": "cmaes-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3991c7544d30b4653be4218d894da1e7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9325, "upload_time": "2020-01-31T06:29:20", "upload_time_iso_8601": "2020-01-31T06:29:20.734895Z", "url": "https://files.pythonhosted.org/packages/5b/b4/fb8f536db87823359033e48531010d9f2adb18d5bd100241fc0d6ad2d267/cmaes-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16cd90cbc1baf541b84b81ccee9b3a26", "sha256": "57ccd3852893894c7e7da6c4afaa4d62570a6f44ca4aeaa4bc63bd5b7ef2ec9f"}, "downloads": -1, "filename": "cmaes-0.2.0.tar.gz", "has_sig": false, "md5_digest": "16cd90cbc1baf541b84b81ccee9b3a26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11551, "upload_time": "2020-01-31T06:29:22", "upload_time_iso_8601": "2020-01-31T06:29:22.536718Z", "url": "https://files.pythonhosted.org/packages/f4/46/12279fc81ce03939ac5edafcbc52768988d6b59910acbb3dcae339e2fcca/cmaes-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "76cc7d3b442276f29f9c2c0c95f1b3a0", "sha256": "00cc25d00532a7681bbb4f480c3db0db637f5025a1512eb2a57bfa8883bee24c"}, "downloads": -1, "filename": "cmaes-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "76cc7d3b442276f29f9c2c0c95f1b3a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10651, "upload_time": "2020-02-12T08:07:36", "upload_time_iso_8601": "2020-02-12T08:07:36.147287Z", "url": "https://files.pythonhosted.org/packages/3c/ec/d7623f38bf7446c0a980402b8135d138334dac3ce4b9e29684a5cc52035d/cmaes-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "363f2b6311d7477142dc0a12edb31692", "sha256": "3596baf6625174e0c3c79cd8c033c7b032f6063160462363106a19d802746e6b"}, "downloads": -1, "filename": "cmaes-0.3.0.tar.gz", "has_sig": false, "md5_digest": "363f2b6311d7477142dc0a12edb31692", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13105, "upload_time": "2020-02-12T08:07:37", "upload_time_iso_8601": "2020-02-12T08:07:37.865478Z", "url": "https://files.pythonhosted.org/packages/75/4d/2a03af7affcb2396d73dfa823ff2126c9c34b59ee0f515cb2fafab42a6a4/cmaes-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "a6263fc94a2415e142e9a98fcf8910c7", "sha256": "e9cd879efdd6e424beb36476c315730b2db2c9510f51f22e1766412f5da34e40"}, "downloads": -1, "filename": "cmaes-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a6263fc94a2415e142e9a98fcf8910c7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11718, "upload_time": "2020-02-18T17:01:16", "upload_time_iso_8601": "2020-02-18T17:01:16.691480Z", "url": "https://files.pythonhosted.org/packages/0f/11/bb470a06eaffaa03775dde0707ca0b8479cbcf7ff97272aaa3c82bd7e065/cmaes-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4f566834fb35e2f0067294745b6747c", "sha256": "ecb8bca76346b29b55de37ede37c7c9f7e7b4ff1962255f84cc9d297f0b0eecc"}, "downloads": -1, "filename": "cmaes-0.3.1.tar.gz", "has_sig": false, "md5_digest": "d4f566834fb35e2f0067294745b6747c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13858, "upload_time": "2020-02-18T17:01:18", "upload_time_iso_8601": "2020-02-18T17:01:18.537536Z", "url": "https://files.pythonhosted.org/packages/98/c5/fb8ac85b96b624756f4e18e68c65b4bbe18c1cf1600a4259af16aaeeb3e7/cmaes-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "debe99554b23ad495e06d1924ef2b799", "sha256": "d463e3b70083d502728b3d2ba2f98723a5ed431aabf94dc2524674277c6f10ab"}, "downloads": -1, "filename": "cmaes-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "debe99554b23ad495e06d1924ef2b799", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11929, "upload_time": "2020-03-12T12:44:31", "upload_time_iso_8601": "2020-03-12T12:44:31.224881Z", "url": "https://files.pythonhosted.org/packages/a6/9f/9fcd62076df5ff38ac4678e819b23f374973214d94a678d417dbf03b9dc5/cmaes-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ec8e64e036fa473b512a6532d2b8c68", "sha256": "c5529b94d6739569b635cc33649c924ce038f3519f6a2db003ce368602d40cbe"}, "downloads": -1, "filename": "cmaes-0.3.2.tar.gz", "has_sig": false, "md5_digest": "1ec8e64e036fa473b512a6532d2b8c68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14152, "upload_time": "2020-03-12T12:44:32", "upload_time_iso_8601": "2020-03-12T12:44:32.582785Z", "url": "https://files.pythonhosted.org/packages/0f/29/6441c0d6c92b60ed8524f5987b2e998c0e7cdec14e2c7824daca9d567013/cmaes-0.3.2.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "b1abd1b0c6efe70cb718c571a4c6f7c2", "sha256": "ce8914ba36fe174621ed05c4fd837301e20c742d49314dfbf42e6654f365c096"}, "downloads": -1, "filename": "cmaes-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b1abd1b0c6efe70cb718c571a4c6f7c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13014, "upload_time": "2020-04-06T03:34:22", "upload_time_iso_8601": "2020-04-06T03:34:22.175100Z", "url": "https://files.pythonhosted.org/packages/56/00/16b9a086181cd227178d5279a40f7dce4fd16d7b3f6bdbd986b38d6bd3f0/cmaes-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed7b3c31bfdbd1575a79f16dad1cc332", "sha256": "791c5fb0b2ec1a3bcd873120bcadfadd60dca1c2f75adcba1b2007f977f707cc"}, "downloads": -1, "filename": "cmaes-0.4.0.tar.gz", "has_sig": false, "md5_digest": "ed7b3c31bfdbd1575a79f16dad1cc332", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15299, "upload_time": "2020-04-06T03:34:23", "upload_time_iso_8601": "2020-04-06T03:34:23.449878Z", "url": "https://files.pythonhosted.org/packages/72/67/1a627614d62ea8bc3e4d84c558a4be861956db4007b61b98c0bb5bf7ec39/cmaes-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "d1cfdbc2560bb8ab4efc257e44179103", "sha256": "1bf0dd9d25900a6e376b3cdcb2e58a0c2789d753789cbb5e333003818d78c499"}, "downloads": -1, "filename": "cmaes-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d1cfdbc2560bb8ab4efc257e44179103", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13060, "upload_time": "2020-04-22T10:38:24", "upload_time_iso_8601": "2020-04-22T10:38:24.789777Z", "url": "https://files.pythonhosted.org/packages/03/de/6ed34ebc0e5c34ed371d898540bca36edb4afe5bb2ca382483054e573c75/cmaes-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71f87f499041b427f45c364a4af6f93f", "sha256": "213d91a41f1d75b8cebca56477b8460da0fc757f9bbd1e5767023ad12711dfb4"}, "downloads": -1, "filename": "cmaes-0.5.0.tar.gz", "has_sig": false, "md5_digest": "71f87f499041b427f45c364a4af6f93f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15249, "upload_time": "2020-04-22T10:38:26", "upload_time_iso_8601": "2020-04-22T10:38:26.210095Z", "url": "https://files.pythonhosted.org/packages/63/5e/986807e309931fb7ec82154d21b024dfa81f3eb5120a834315d06b10f6b0/cmaes-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d1cfdbc2560bb8ab4efc257e44179103", "sha256": "1bf0dd9d25900a6e376b3cdcb2e58a0c2789d753789cbb5e333003818d78c499"}, "downloads": -1, "filename": "cmaes-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d1cfdbc2560bb8ab4efc257e44179103", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13060, "upload_time": "2020-04-22T10:38:24", "upload_time_iso_8601": "2020-04-22T10:38:24.789777Z", "url": "https://files.pythonhosted.org/packages/03/de/6ed34ebc0e5c34ed371d898540bca36edb4afe5bb2ca382483054e573c75/cmaes-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71f87f499041b427f45c364a4af6f93f", "sha256": "213d91a41f1d75b8cebca56477b8460da0fc757f9bbd1e5767023ad12711dfb4"}, "downloads": -1, "filename": "cmaes-0.5.0.tar.gz", "has_sig": false, "md5_digest": "71f87f499041b427f45c364a4af6f93f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15249, "upload_time": "2020-04-22T10:38:26", "upload_time_iso_8601": "2020-04-22T10:38:26.210095Z", "url": "https://files.pythonhosted.org/packages/63/5e/986807e309931fb7ec82154d21b024dfa81f3eb5120a834315d06b10f6b0/cmaes-0.5.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:37 2020"}