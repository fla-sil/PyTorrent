{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6"], "description": "==================\nAWS Lambda Logging\n==================\n\n.. image:: https://gitlab.com/hadrien/aws_lambda_logging/badges/master/build.svg\n\n.. image:: https://gitlab.com/hadrien/aws_lambda_logging/badges/master/coverage.svg?job=Run%20py.test\n\nBetter logging for aws lambda running on python runtime environment with a\nhighly opinionated JSON formatting to ease parsing on any logging system.\n\nUsage\n=====\n\n.. code::\n\n    import aws_lambda_logging\n\n\n    def handler(event, context):\n        aws_lambda_logging.setup(level='DEBUG')\n        ...\n\nYou can separately set the logging level for Boto (defaults to the same level):\n\n.. code::\n\n    import aws_lambda_logging\n\n\n    def handler(event, context):\n        aws_lambda_logging.setup(level='DEBUG', boto_level='CRITICAL')\n        ...\n\n\n\nYou can add keyword arguments to be logged each time, such as lambda request\nid.\n\n.. code::\n\n    import aws_lambda_logging\n\n\n    def handler(event, context):\n        aws_lambda_logging.setup(level='DEBUG',\n                                 aws_request_id=context.get('aws_request_id'))\n        log.debug('Just a try!')\n        ...\n\n\nIt will output JSON formatted message:\n\n.. code::\n\n    {\n        \"level\": \"DEBUG\",\n        \"timestamp\": \"2016-10-03 13:27:57,438\",\n        \"apigw_request_id\": \"323fee86-896d-11e6-b7fd-2d914ea80962\",\n        \"location\": \"root.handler:6\",\n        \"message\": \"Just a try!\"\n    }\n\nYou can input a JSON string:\n\n.. code::\n\n    log.debug('{\"Details\": [1,2,3]}')\n\n\nIt will output JSON formatted message with the JSON string embedded properly:\n\n.. code::\n\n    {\n        \"level\": \"DEBUG\",\n        \"timestamp\": \"2016-10-03 13:27:57,438\",\n        \"apigw_request_id\": \"323fee86-896d-11e6-b7fd-2d914ea80962\",\n        \"location\": \"root.handler:6\",\n        \"message\": {\n            \"Details\": [\n                1,\n                2,\n                3\n            ]\n        }\n    }\n\n\nYou can input a dict:\n\n.. code::\n\n    log.debug({\"Details\": [1,2,3]})\n\n\nIt will output JSON formatted message with the dict values:\n\n.. code::\n\n    {\n        \"level\": \"DEBUG\",\n        \"timestamp\": \"2016-10-03 13:27:57,438\",\n        \"apigw_request_id\": \"323fee86-896d-11e6-b7fd-2d914ea80962\",\n        \"location\": \"root.handler:6\",\n        \"message\": {\n            \"Details\": [\n                1,\n                2,\n                3\n            ]\n        }\n    }\n\nAny values that can otherwise be serialisabled to JSON are coerced to\nstrings.  This behaviour can be changed by parsing a formatter\nfunction to the ``json_default`` keyword argument.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Marcin-Duszynski/aws-lambda-logger-for-python", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aws-lambda-logger-for-python", "package_url": "https://pypi.org/project/aws-lambda-logger-for-python/", "platform": "", "project_url": "https://pypi.org/project/aws-lambda-logger-for-python/", "project_urls": {"Homepage": "https://github.com/Marcin-Duszynski/aws-lambda-logger-for-python"}, "release_url": "https://pypi.org/project/aws-lambda-logger-for-python/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Nanolib to enhance logging in aws lambda", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://gitlab.com/hadrien/aws_lambda_logging/badges/master/build.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b5f2a676ec3127d84f2fc7e36cf2e20a5b5d9c3/68747470733a2f2f6769746c61622e636f6d2f6861647269656e2f6177735f6c616d6264615f6c6f6767696e672f6261646765732f6d61737465722f6275696c642e737667\">\n<img alt=\"https://gitlab.com/hadrien/aws_lambda_logging/badges/master/coverage.svg?job=Run%20py.test\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/632015ef034c53225732f1a20312a1941ffdb16e/68747470733a2f2f6769746c61622e636f6d2f6861647269656e2f6177735f6c616d6264615f6c6f6767696e672f6261646765732f6d61737465722f636f7665726167652e7376673f6a6f623d52756e25323070792e74657374\">\n<p>Better logging for aws lambda running on python runtime environment with a\nhighly opinionated JSON formatting to ease parsing on any logging system.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>import aws_lambda_logging\n\n\ndef handler(event, context):\n    aws_lambda_logging.setup(level='DEBUG')\n    ...\n</pre>\n<p>You can separately set the logging level for Boto (defaults to the same level):</p>\n<pre>import aws_lambda_logging\n\n\ndef handler(event, context):\n    aws_lambda_logging.setup(level='DEBUG', boto_level='CRITICAL')\n    ...\n</pre>\n<p>You can add keyword arguments to be logged each time, such as lambda request\nid.</p>\n<pre>import aws_lambda_logging\n\n\ndef handler(event, context):\n    aws_lambda_logging.setup(level='DEBUG',\n                             aws_request_id=context.get('aws_request_id'))\n    log.debug('Just a try!')\n    ...\n</pre>\n<p>It will output JSON formatted message:</p>\n<pre>{\n    \"level\": \"DEBUG\",\n    \"timestamp\": \"2016-10-03 13:27:57,438\",\n    \"apigw_request_id\": \"323fee86-896d-11e6-b7fd-2d914ea80962\",\n    \"location\": \"root.handler:6\",\n    \"message\": \"Just a try!\"\n}\n</pre>\n<p>You can input a JSON string:</p>\n<pre>log.debug('{\"Details\": [1,2,3]}')\n</pre>\n<p>It will output JSON formatted message with the JSON string embedded properly:</p>\n<pre>{\n    \"level\": \"DEBUG\",\n    \"timestamp\": \"2016-10-03 13:27:57,438\",\n    \"apigw_request_id\": \"323fee86-896d-11e6-b7fd-2d914ea80962\",\n    \"location\": \"root.handler:6\",\n    \"message\": {\n        \"Details\": [\n            1,\n            2,\n            3\n        ]\n    }\n}\n</pre>\n<p>You can input a dict:</p>\n<pre>log.debug({\"Details\": [1,2,3]})\n</pre>\n<p>It will output JSON formatted message with the dict values:</p>\n<pre>{\n    \"level\": \"DEBUG\",\n    \"timestamp\": \"2016-10-03 13:27:57,438\",\n    \"apigw_request_id\": \"323fee86-896d-11e6-b7fd-2d914ea80962\",\n    \"location\": \"root.handler:6\",\n    \"message\": {\n        \"Details\": [\n            1,\n            2,\n            3\n        ]\n    }\n}\n</pre>\n<p>Any values that can otherwise be serialisabled to JSON are coerced to\nstrings.  This behaviour can be changed by parsing a formatter\nfunction to the <tt>json_default</tt> keyword argument.</p>\n</div>\n\n          </div>"}, "last_serial": 5742143, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "301c8e2744e6e97dcbd6b4170f28104f", "sha256": "2af47c0b7fbe3145c9620cd7cc77101f7febc6fc146cc0f53039218a78132189"}, "downloads": -1, "filename": "aws_lambda_logger_for_python-0.1.1.tar.gz", "has_sig": false, "md5_digest": "301c8e2744e6e97dcbd6b4170f28104f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3758, "upload_time": "2019-08-28T08:21:52", "upload_time_iso_8601": "2019-08-28T08:21:52.591115Z", "url": "https://files.pythonhosted.org/packages/a8/93/5089883f3de2d6f8f7d5844b87eff881cac3c652210e38a304c960cf2b2e/aws_lambda_logger_for_python-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d695266db2a86db255ec8667289957c4", "sha256": "b659c7c614148a26452953570a936927c292f3f79665cd2b21e14fc2f45c29fd"}, "downloads": -1, "filename": "aws_lambda_logger_for_python-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d695266db2a86db255ec8667289957c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3865, "upload_time": "2019-08-28T11:12:38", "upload_time_iso_8601": "2019-08-28T11:12:38.702941Z", "url": "https://files.pythonhosted.org/packages/8f/84/76c5cce2d2f2ac7deaa7a5484fd55d611c18716720061f87edd42fb4c1e5/aws_lambda_logger_for_python-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "f647493e0d4ed1172b82056011a11c6d", "sha256": "15ae171ed8071935057fcf31ece2865abf117c3bc07622b54369059d349ff3e4"}, "downloads": -1, "filename": "aws_lambda_logger_for_python-0.2.1.tar.gz", "has_sig": false, "md5_digest": "f647493e0d4ed1172b82056011a11c6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3886, "upload_time": "2019-08-28T12:11:39", "upload_time_iso_8601": "2019-08-28T12:11:39.859208Z", "url": "https://files.pythonhosted.org/packages/9e/37/977e1beac557dfacb53eee1a1f2d32ad3d4d1e10d30ab1fa10d50d4984d3/aws_lambda_logger_for_python-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f647493e0d4ed1172b82056011a11c6d", "sha256": "15ae171ed8071935057fcf31ece2865abf117c3bc07622b54369059d349ff3e4"}, "downloads": -1, "filename": "aws_lambda_logger_for_python-0.2.1.tar.gz", "has_sig": false, "md5_digest": "f647493e0d4ed1172b82056011a11c6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3886, "upload_time": "2019-08-28T12:11:39", "upload_time_iso_8601": "2019-08-28T12:11:39.859208Z", "url": "https://files.pythonhosted.org/packages/9e/37/977e1beac557dfacb53eee1a1f2d32ad3d4d1e10d30ab1fa10d50d4984d3/aws_lambda_logger_for_python-0.2.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:38 2020"}