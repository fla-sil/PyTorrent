{"info": {"author": "Simon Weber", "author_email": "simon@venmo.com", "bugtrack_url": null, "classifiers": [], "description": "btnamespace\n===========\n\n.. image:: https://travis-ci.org/venmo/btnamespace.svg?branch=master\n    :target: https://travis-ci.org/venmo/btnamespace\n\nA Braintree namespace isolates state on the Braintree gateway:\n\n.. code-block:: python\n\n    import braintree\n    import btnamespace\n\n    with btnamespace.Namespace():\n        customer = braintree.Customer.create({\"id\": \"123\"})\n        assert customer.id == \"123\"\n        braintree.Customer.find(\"123\")  # success\n\n    braintree.Customer.find(\"123\")  # NotFound exception\n\nThis is primarily useful during integration tests:\n\n.. code-block:: python\n\n    def setUp(self):\n        self.namespace = btnamespace.Namespace()\n        self.namespace.__enter__()\n\n    def test_some_sandbox_integration(self):\n        #...\n\n    def tearDown(self):\n        self.namespace.__exit__()\n\n\nCompared to calling eg ``braintree.Customer.delete`` during ``tearDown``, this has a number of advantages:\n\n-  it's faster, since no teardown is needed\n-  it's simpler, since it doesn't require any bookkeeping\n-  it's robust, since tests can be written without any state assumptions\n\nYou can install it with ``$ pip install btnamespace``.\n\n\nWhat's supported\n----------------\n\n- Customer create, update, find, delete\n- CreditCard create, update, find, delete\n- Transaction create, find\n\nAll operations involving subresources - eg creating a CreditCard and Customer in one call - work as expected.\n\nAdding support for other operations is easy; we just haven't needed them yet.\nContributions welcome!\n\n\nHow it Works\n------------\n\nUnder the hood, a Namespace globally patches the braintree client library.\n\nDuring create operations, any provided ids are removed.\nThis forces the gateway to respond with unique ids, which are later mapped back to the originally-provided ids.\nHere's an example:\n\n- on a call to ``braintree.Customer.create({'id': '123', ...})``, ``'123'`` is stored as a Customer id and the call becomes ``braintree.Customer.create({...})``.\n- then, the server returns a unique id ``'abcde'`` for the Customer. ``'123'`` is mapped to ``'abcde'``, and the resulting Customer object's id is set to ``'123'``.\n- later, a call to ``braintree.Customer.find('123')`` becomes ``braintree.Customer.find('abcde')``.\n\n\nContributing\n------------\n\nInside your vitualenv:\n\n.. code-block:: bash\n\n    $ cd btnamespace\n    $ pip install -e .\n    $ pip install -r requirements.txt\n\n\nTo run the tests, first add your sandbox credentials:\n\n.. code-block:: bash\n\n    $ export BT_MERCHANT_ID=merchant-id\n    $ export BT_PUBLIC_KEY=public-id\n    $ export BT_PRIVATE_KEY=private-key\n\n\nThen run ``$ python tests/test_integration.py``.\n\n\nHistory\n-------\n2.0.0\n+++++\nreleased 2016-07-15\n\n- breaking: drop python 2.6 support\n- fix a bug affecting operations after exiting a namespace\n- add strict_missing and strict_missing_exception options\n\n\n1.1.1\n+++++\nreleased 2014-09-26\n\n- pin bidict to 0.1.5 to avoid breaking changes in newer versions\n\n1.1.0\n+++++\nreleased 2014-07-28\n\n- add schema for braintree.ClientToken.generate\n\n1.0.1\n+++++\nreleased 2014-04-08\n\n- use less expensive introspection\n- remove decorator dependency\n\n1.0.0\n+++++\nreleased 2014-04-07\n\n- initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/venmo/btnamespace", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "btnamespace", "package_url": "https://pypi.org/project/btnamespace/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/btnamespace/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/venmo/btnamespace"}, "release_url": "https://pypi.org/project/btnamespace/2.0.0/", "requires_dist": null, "requires_python": null, "summary": "Isolate state on the Braintree sandbox during testing.", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/venmo/btnamespace\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/venmo/btnamespace.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b8c6a36a6a6a41f6536e75c6e5e3558f5330e9af/68747470733a2f2f7472617669732d63692e6f72672f76656e6d6f2f62746e616d6573706163652e7376673f6272616e63683d6d6173746572\"></a>\n<p>A Braintree namespace isolates state on the Braintree gateway:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">braintree</span>\n<span class=\"kn\">import</span> <span class=\"nn\">btnamespace</span>\n\n<span class=\"k\">with</span> <span class=\"n\">btnamespace</span><span class=\"o\">.</span><span class=\"n\">Namespace</span><span class=\"p\">():</span>\n    <span class=\"n\">customer</span> <span class=\"o\">=</span> <span class=\"n\">braintree</span><span class=\"o\">.</span><span class=\"n\">Customer</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">({</span><span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"123\"</span><span class=\"p\">})</span>\n    <span class=\"k\">assert</span> <span class=\"n\">customer</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">==</span> <span class=\"s2\">\"123\"</span>\n    <span class=\"n\">braintree</span><span class=\"o\">.</span><span class=\"n\">Customer</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">\"123\"</span><span class=\"p\">)</span>  <span class=\"c1\"># success</span>\n\n<span class=\"n\">braintree</span><span class=\"o\">.</span><span class=\"n\">Customer</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">\"123\"</span><span class=\"p\">)</span>  <span class=\"c1\"># NotFound exception</span>\n</pre>\n<p>This is primarily useful during integration tests:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">setUp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">namespace</span> <span class=\"o\">=</span> <span class=\"n\">btnamespace</span><span class=\"o\">.</span><span class=\"n\">Namespace</span><span class=\"p\">()</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">namespace</span><span class=\"o\">.</span><span class=\"fm\">__enter__</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test_some_sandbox_integration</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"c1\">#...</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">tearDown</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">namespace</span><span class=\"o\">.</span><span class=\"fm\">__exit__</span><span class=\"p\">()</span>\n</pre>\n<p>Compared to calling eg <tt>braintree.Customer.delete</tt> during <tt>tearDown</tt>, this has a number of advantages:</p>\n<ul>\n<li>it\u2019s faster, since no teardown is needed</li>\n<li>it\u2019s simpler, since it doesn\u2019t require any bookkeeping</li>\n<li>it\u2019s robust, since tests can be written without any state assumptions</li>\n</ul>\n<p>You can install it with <tt>$ pip install btnamespace</tt>.</p>\n<div id=\"what-s-supported\">\n<h2>What\u2019s supported</h2>\n<ul>\n<li>Customer create, update, find, delete</li>\n<li>CreditCard create, update, find, delete</li>\n<li>Transaction create, find</li>\n</ul>\n<p>All operations involving subresources - eg creating a CreditCard and Customer in one call - work as expected.</p>\n<p>Adding support for other operations is easy; we just haven\u2019t needed them yet.\nContributions welcome!</p>\n</div>\n<div id=\"how-it-works\">\n<h2>How it Works</h2>\n<p>Under the hood, a Namespace globally patches the braintree client library.</p>\n<p>During create operations, any provided ids are removed.\nThis forces the gateway to respond with unique ids, which are later mapped back to the originally-provided ids.\nHere\u2019s an example:</p>\n<ul>\n<li>on a call to <tt><span class=\"pre\">braintree.Customer.create({'id':</span> '123', <span class=\"pre\">...})</span></tt>, <tt>'123'</tt> is stored as a Customer id and the call becomes <tt><span class=\"pre\">braintree.Customer.create({...})</span></tt>.</li>\n<li>then, the server returns a unique id <tt>'abcde'</tt> for the Customer. <tt>'123'</tt> is mapped to <tt>'abcde'</tt>, and the resulting Customer object\u2019s id is set to <tt>'123'</tt>.</li>\n<li>later, a call to <tt><span class=\"pre\">braintree.Customer.find('123')</span></tt> becomes <tt><span class=\"pre\">braintree.Customer.find('abcde')</span></tt>.</li>\n</ul>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Inside your vitualenv:</p>\n<pre>$ <span class=\"nb\">cd</span> btnamespace\n$ pip install -e .\n$ pip install -r requirements.txt\n</pre>\n<p>To run the tests, first add your sandbox credentials:</p>\n<pre>$ <span class=\"nb\">export</span> <span class=\"nv\">BT_MERCHANT_ID</span><span class=\"o\">=</span>merchant-id\n$ <span class=\"nb\">export</span> <span class=\"nv\">BT_PUBLIC_KEY</span><span class=\"o\">=</span>public-id\n$ <span class=\"nb\">export</span> <span class=\"nv\">BT_PRIVATE_KEY</span><span class=\"o\">=</span>private-key\n</pre>\n<p>Then run <tt>$ python tests/test_integration.py</tt>.</p>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>2.0.0</h3>\n<p>released 2016-07-15</p>\n<ul>\n<li>breaking: drop python 2.6 support</li>\n<li>fix a bug affecting operations after exiting a namespace</li>\n<li>add strict_missing and strict_missing_exception options</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.1.1</h3>\n<p>released 2014-09-26</p>\n<ul>\n<li>pin bidict to 0.1.5 to avoid breaking changes in newer versions</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.1.0</h3>\n<p>released 2014-07-28</p>\n<ul>\n<li>add schema for braintree.ClientToken.generate</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.0.1</h3>\n<p>released 2014-04-08</p>\n<ul>\n<li>use less expensive introspection</li>\n<li>remove decorator dependency</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.0.0</h3>\n<p>released 2014-04-07</p>\n<ul>\n<li>initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2225065, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "6ef3eaa73fe78fa4cda3301e8c062cb7", "sha256": "35143b4d352df7645410b3d4c8450fb00c9201fe1938e6082fb00fab5760b1e2"}, "downloads": -1, "filename": "btnamespace-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6ef3eaa73fe78fa4cda3301e8c062cb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8338, "upload_time": "2014-04-07T21:00:09", "upload_time_iso_8601": "2014-04-07T21:00:09.629029Z", "url": "https://files.pythonhosted.org/packages/80/88/deb723dbff08dde220b6b46dbe6eb29c8f3e0c9299c3ec24bac08f5343e3/btnamespace-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "c9291b55f1310d4b935fe22ef9c85a0c", "sha256": "b3058c5c3769aabddb0511bc77e61906aeee3b6ff07acc6f3cdc34a77fe564a1"}, "downloads": -1, "filename": "btnamespace-1.0.1.tar.gz", "has_sig": false, "md5_digest": "c9291b55f1310d4b935fe22ef9c85a0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9045, "upload_time": "2014-04-08T15:26:34", "upload_time_iso_8601": "2014-04-08T15:26:34.805505Z", "url": "https://files.pythonhosted.org/packages/b4/19/ab708d95d267cee92b01234ae08d977134ff211562e8e70476b74a367949/btnamespace-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "3556ca25765dcb65c5f5dcee5e962ab4", "sha256": "2f115a3e3944c99ec0c5244597d4b48d07b48b89a5327597c2494da1d86e9d95"}, "downloads": -1, "filename": "btnamespace-1.1.0.tar.gz", "has_sig": false, "md5_digest": "3556ca25765dcb65c5f5dcee5e962ab4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10394, "upload_time": "2014-07-28T23:08:08", "upload_time_iso_8601": "2014-07-28T23:08:08.112226Z", "url": "https://files.pythonhosted.org/packages/0f/16/ef960abc02aa6b40a01aba763795c527d5ee5086e4b66cdf73255a2d0593/btnamespace-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "77255b1ef48c70524619497a86a14066", "sha256": "320a0c378fa02ee6e8fcf69e25b13cf9d0517e28e96cc19452c5ff654cccb2ce"}, "downloads": -1, "filename": "btnamespace-1.1.1.tar.gz", "has_sig": false, "md5_digest": "77255b1ef48c70524619497a86a14066", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9124, "upload_time": "2014-09-26T19:40:37", "upload_time_iso_8601": "2014-09-26T19:40:37.658650Z", "url": "https://files.pythonhosted.org/packages/bd/19/daf026615159a206ccef0102b2794d89893b0b134c91e386f8c8e26ea54a/btnamespace-1.1.1.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "a0b807afed4a4756e8ff9f021af62e49", "sha256": "1ad5404c2c81bae02f72a0223225d7a5cc57092532984efd080129ec067e5880"}, "downloads": -1, "filename": "btnamespace-2.0.0.tar.gz", "has_sig": false, "md5_digest": "a0b807afed4a4756e8ff9f021af62e49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9441, "upload_time": "2016-07-15T21:11:58", "upload_time_iso_8601": "2016-07-15T21:11:58.057009Z", "url": "https://files.pythonhosted.org/packages/39/26/7b3b1fd8a242b30c32150bba65c6aec79b6366aeef720befb4461609f01e/btnamespace-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a0b807afed4a4756e8ff9f021af62e49", "sha256": "1ad5404c2c81bae02f72a0223225d7a5cc57092532984efd080129ec067e5880"}, "downloads": -1, "filename": "btnamespace-2.0.0.tar.gz", "has_sig": false, "md5_digest": "a0b807afed4a4756e8ff9f021af62e49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9441, "upload_time": "2016-07-15T21:11:58", "upload_time_iso_8601": "2016-07-15T21:11:58.057009Z", "url": "https://files.pythonhosted.org/packages/39/26/7b3b1fd8a242b30c32150bba65c6aec79b6366aeef720befb4461609f01e/btnamespace-2.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:09 2020"}