{"info": {"author": "Spencer Young", "author_email": "spencer.young@spyoung.com", "bugtrack_url": null, "classifiers": ["Environment :: Win32 (MS Windows)", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Desktop Environment"], "description": "# ahk\n\nA Python wrapper around AHK.\n\n[![Build](https://ci.appveyor.com/api/projects/status/2c53x6gglw9nxgj1/branch/master?svg=true)](https://ci.appveyor.com/project/spyoungtech/ahk/branch/master) \n[![version](https://img.shields.io/pypi/v/ahk.svg?colorB=blue)](https://pypi.org/project/ahk/) \n[![pyversion](https://img.shields.io/pypi/pyversions/ahk.svg?)](https://pypi.org/project/ahk/) \n[![Coverage](https://coveralls.io/repos/github/spyoungtech/ahk/badge.svg?branch=master)](https://coveralls.io/github/spyoungtech/ahk?branch=master)\n![PyPI - Downloads](https://img.shields.io/pypi/dm/ahk)\n\n# Installation\n\n```\npip install ahk\n```\nRequires Python 3.6+\n\nSee also [Non-Python dependencies](#deps)  \n\n\n# Usage\n\n```python\nfrom ahk import AHK\n\nahk = AHK()\n\nahk.mouse_move(x=100, y=100, blocking=True)  # Blocks until mouse finishes moving (the default)\nahk.mouse_move(x=150, y=150, speed=10, blocking=True) # Moves the mouse to x, y taking 'speed' seconds to move\nprint(ahk.mouse_position)  #  (150, 150)\n```\n\n![ahk](https://raw.githubusercontent.com/spyoungtech/ahk/master/docs/_static/ahk.gif)\n\n# Examples\n\nNon-exhaustive examples of some of the functions available with this package. Full documentation coming soon!\n\n## Mouse\n\n```python\nfrom ahk import AHK\n\nahk = AHK()\n\nahk.mouse_position  # Returns a tuple of mouse coordinates (x, y)\nahk.mouse_move(100, 100, speed=10, relative=True)  # Moves the mouse reletave to the current position\nahk.mouse_position = (100, 100)  # Moves the mouse instantly to absolute screen position\nahk.click()  # Click the primary mouse button\nahk.double_click() # Clicks the primary mouse button twice\nahk.click(200, 200)  # Moves the mouse to a particular position and clicks\nahk.right_click() # Clicks the secondary mouse button\nahk.mouse_drag(100, 100, relative=True) # Holds down primary button and moves the mouse\n```\n\n## Keyboard\n\n```python\nfrom ahk import AHK\n\nahk = AHK()\n\nahk.type('hello, world!')  # Send keys, as if typed (performs ahk string escapes)\nahk.send_input('Hello`, World{!}')  # Like AHK SendInput, must escape strings yourself!\nahk.key_state('Control')  # Return True or False based on whether Control key is pressed down\nahk.key_state('CapsLock', mode='T')  # Check toggle state of a key (like for NumLock, CapsLock, etc)\nahk.key_press('a')  # Press and release a key\nahk.key_down('Control')  # Press down (but do not release) Control key\nahk.key_up('Control')  # Release the key\nahk.key_wait('a', timeout=3)  # Wait up to 3 seconds for the \"a\" key to be pressed. NOTE: This throws \n                              # a TimeoutError if the key isn't pressed within the timeout window\n```\n\n## Windows\n\nYou can do stuff with windows, too.\n\n\n### Getting windows\n\n```python\nfrom ahk import AHK\nfrom ahk.window import Window\n\nahk = AHK()\n\nwin = ahk.active_window                        # Get the active window\nwin = ahk.win_get(title='Untitled - Notepad')  # by title\nwin = list(ahk.windows())                      # list of all windows\nwin = Window(ahk, ahk_id='0xabc123')           # by ahk_id\nwin = Window.from_mouse_position(ahk)          # the window under the mouse cursor\nwin = Window.from_pid('20366')                 # by process ID\n```\n\n### Working with windows\n\n```python\nfrom ahk import AHK\n\nahk = AHK()\n\nahk.run_script('Run Notepad') # Open notepad\nwin = ahk.find_window(title=b'Untitled - Notepad') # Find the opened window\n\nwin.send('hello')  # Send keys directly to the window (does not need focus!)\nwin.move(x=200, y=300, width=500, height=800)\n\nwin.activate()           # Give the window focus\nwin.activate_buttom()    # Give the window focus\nwin.close()              # Close the window\nwin.hide()               # Hide the windwow\nwin.kill()               # Kill the window \nwin.maximize()           # Maximize the window\nwin.minimize()           # Minimize the window\nwin.restore()            # Restore the window\nwin.show()               # Show the window\nwin.disable()            # Make the window non-interactable\nwin.enable()             # Enable it again\nwin.to_top()             # Move the window on top of other windows\nwin.to_bottom()          # Move the window to the bottom of the other windows\n\nwin.always_on_top = True # Make the window always on top\n\nfor window in ahk.windows():\n    print(window.title)\n\n    # Some more attributes\n    print(window.text)\n    print(window.rect)   # (x, y, width, height)\n    print(window.id)     # ahk_id\n    print(window.pid)\n    print(window.process)\n\n\nif window.active:        # Check if window active\n    window.minimize()\n\nif window.exist:         # Check if window exist\n    window.maximize()\n\n```\n\n## Screen\n\n```python\nfrom ahk import AHK\n\nahk = AHK()\n\nahk.image_search('C:\\\\path\\\\to\\\\image.jpg')  # Find an image on screen\n\n# Find an image within a boundary on screen\nahk.image_search('C:\\\\path\\\\to\\\\image.jpg', upper_bound=(100, 100),  # upper-left corner of search area\n                                            lower_bound=(400, 400))  # lower-right corner of search area\nahk.pixel_get_color(100, 100)  # Get color of pixel located at coords (100, 100)\nahk.pixel_search('0x9d6346')  # Get coords of the first pixel with specified color\n```\n\n## Sound\n\n```python\nfrom ahk import AHK\n\nahk = AHK()\n\nahk.sound_play('C:\\\\path\\\\to\\\\sound.wav')  # Play an audio file\nahk.sound_beep(frequency=440, duration=1000)  # Play a beep for 1 second (duration in microseconds)\nahk.get_volume(device_number=1)  # Get volume of a device\nahk.set_volume(50, device_number=1)  # Set volume of a device\nahk.sound_get(device_number=1, component_type='MASTER', control_type='VOLUME') # Get sound device property\nahk.sound_set(50, device_number=1, component_type='MASTER', control_type='VOLUME') # Set sound device property\n```\n\n## non-blocking modes\n\nFor some functions, you can also opt for a non-blocking interface, so you can do other stuff while AHK scripts run.\n\n```python\nimport time\n\nfrom ahk import AHK\n\nahk = AHK()\n\nahk.mouse_position = (200, 200)  # Moves the mouse instantly to the start position\nstart = time.time()\nahk.mouse_move(x=100, y=100, speed=30, blocking=False)\nwhile True:  #  report mouse position while it moves\n    t = round(time.time() - start, 4)\n    position = ahk.mouse_position\n    print(t, position)\n    if position == (100, 100):\n        break\n```\n\nYou should see an output something like\n\n```\n0.032 (187, 187)\n0.094 (173, 173)\n0.137 (164, 164)\n...\n0.788 (100, 103)\n0.831 (100, 101)\n0.873 (100, 100)\n```\n\n\n## Run arbitrary AutoHotkey scripts\n\n```python\nfrom ahk import AHK\n\nahk = AHK()\n\nahk_script = 'Run Notepad'\nahk.run_script(ahk_script, blocking=False)\n```\n\n\n### Communicating data from ahk to Python\n\nIf you're writing your own ahk scripts to use with this library, you can use `FileAppend` with the `*` parameter to get data from your ahk script into Python.\n\nSuppose you have a script like so\n\n```autohotkey\n#Persistent\ndata := \"Hello Data!\"\nFileAppend, %data%, * ; send data var to stdout\nExitApp\n```\n\n```py\nresult = ahk.run_script(my_script)\nprint(result)  # Hello Data!\n```\n\nIf your autohotkey returns something that can't be decoded, add the keyword argument `decode=False` in which case you'll get back a `CompletedProcess` object where stdout (and stderr) will be bytes and you can handle it however you choose.\n\n```py\nresult = ahk.run_script(my_script, decode=False)\nprint(result.stdout)  # b'Hello Data!'\n```\n\n\n## Experimental features\n\nExperimental features are things that are minimally functional, (even more) likely to have breaking changes, even \nfor minor releases. \n\nGithub issues are provided for convenience to collect feedback on these features.\n\n\n### Hotkeys\n\n[GH-9]\n\nHotkeys now have a primitive implementation. You give it a hotkey (a string the same as in an ahk script, without the `::`) \nand the body of an AHK script to execute as a response to the hotkey.\n\n\n\n```python\nfrom ahk import AHK, Hotkey\n\nahk = AHK()\n\nkey_combo = '#n' # Define an AutoHotkey key combonation\nscript = 'Run Notepad' # Define an ahk script\nhotkey = Hotkey(ahk, key_combo, script) # Create Hotkey\nhotkey.start()  #  Start listening for hotkey\n```\nAt this point, the hotkey is active. \nIf you press <kbd>![Windows Key][winlogo]</kbd> + <kbd>n</kbd>, the script `Run Notepad` will execute.\n\nThere is no need to add `return` to the provided script, as it is provided by the template.\n\nTo stop the hotkey call the `stop()` method.\n\n```python\nhotkey.stop()\n```\n\nSee also the [relevant AHK documentation](https://www.autohotkey.com/docs/Hotkeys.htm)\n\n### ActionChain\n\n[GH-25]\n\n`ActionChain`s let you define a set of actions to be performed in order at a later time.\n\nThey work just like the `AHK` class, except the actions are deferred until the `perform` method is called.\n\nAn additional method `sleep` is provided to allow for waiting between actions.\n\n```python\nfrom ahk import ActionChain\n\nac = ActionChain()\n\n# An Action Chain doesn't perform the actions until perform() is called on the chain\n\nac.mouse_move(100, 100, speed=10)  # nothing yet\nac.sleep(1)  # still nothing happening\nac.mouse_move(500, 500, speed=10)  # not yet\nac.perform()  # *now* each of the actions run in order\n```\n\nJust like anywhere else, scripts running simultaneously may conflict with one another, so using blocking interfaces is \ngenerally recommended. Currently, there is limited support for interacting with windows in actionchains, you may want to use `win_set`)\n\n\n### find_window/find_windows methods\n\n[GH-26]\n\nRight now, these are implemented by iterating over all window handles and filtering with Python.  \nThey may be optimized in the future.\n\n`AHK.find_windows` returns a generator filtering results based on attributes provided as keyword arguments.  \n`AHK.find_window` is similar, but returns the first matching window instead of all matching windows.\n\nThere are couple convenience functions, but not sure if these will stay around or maybe we'll add more, depending on feedback.\n\n* find_windows_by_title\n* find_window_by_title\n* find_windows_by_text\n* find_window_by_text\n\n## Errors and Debugging\n\nYou can enable debug logging, which will output script text before execution, and some other potentially useful \ndebugging information.\n\n```python\nimport logging\nlogging.basicConfig(level=logging.DEBUG)\n```\n(See the [logging module documentation](https://docs.python.org/3/library/logging.html) for more information)\n\nAlso note that, for now, errors with running AHK scripts will often pass silently. In the future, better error handling \nwill be added.\n\n<a name=\"deps\" />\n\n## Non-Python dependencies\n\nTo use this package, you need the [AutoHotkey executable](https://www.autohotkey.com/download/). \n\nIt's expected to be on PATH by default. You can also use the `AHK_PATH` environment variable to specify the executable location.\n\nAlternatively, you may provide the path in code\n\n```python\nfrom ahk import AHK\n\nahk = AHK(executable_path='C:\\\\path\\\\to\\\\AutoHotkey.exe')\n```\n\n\n# Contributing\n\nAll contributions are welcomed and appreciated.\n\nPlease feel free to open a GitHub issue or PR for feedback, ideas, feature requests or questions.\n\nThere's still some work to be done in the way of implementation. The ideal interfaces are still yet to be determined and \n*your* help would be invaluable.\n\n\nThe vision is to provide access to the most useful features of the AutoHotkey API in a Pythonic way.\n\n\n[winlogo]: http://i.stack.imgur.com/Rfuw7.png\n[GH-9]: https://github.com/spyoungtech/ahk/issues/9\n[GH-25]: https://github.com/spyoungtech/ahk/issues/25\n[GH-26]: https://github.com/spyoungtech/ahk/issues/26\n\n# Similar projects\n\nThese are some similar projects that are commonly used for automation with Python.\n\n* [Pyautogui](https://pyautogui.readthedocs.io) - Al Sweigart's creation for cross-platform automation\n* [Pywinauto](https://pywinauto.readthedocs.io) - Automation on Windows platforms with Python.\n* [keyboard](https://github.com/boppreh/keyboard) - Pure Python cross-platform keyboard hooks/control and hotkeys!\n* [mouse](https://github.com/boppreh/mouse) - From the creators of `keyboard`, Pure Python *mouse* control!\n* [pynput](https://github.com/moses-palmer/pynput) - Keyboard and mouse control\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/spyoungtech/ahk", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ahk", "package_url": "https://pypi.org/project/ahk/", "platform": "", "project_url": "https://pypi.org/project/ahk/", "project_urls": {"Homepage": "https://github.com/spyoungtech/ahk"}, "release_url": "https://pypi.org/project/ahk/0.8.1/", "requires_dist": ["jinja2"], "requires_python": "", "summary": "A Python wrapper for AHK", "version": "0.8.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ahk</h1>\n<p>A Python wrapper around AHK.</p>\n<p><a href=\"https://ci.appveyor.com/project/spyoungtech/ahk/branch/master\" rel=\"nofollow\"><img alt=\"Build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ad0e1b14e93a2ce8d97529de0c053ce003cb9da/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f32633533783667676c77396e78676a312f6272616e63682f6d61737465723f7376673d74727565\"></a>\n<a href=\"https://pypi.org/project/ahk/\" rel=\"nofollow\"><img alt=\"version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed7b7e2a40fe8bc753c7a7c485ff4f62f26d55cb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61686b2e7376673f636f6c6f72423d626c7565\"></a>\n<a href=\"https://pypi.org/project/ahk/\" rel=\"nofollow\"><img alt=\"pyversion\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/24278e177dbf2831a48dd8c669b5616dba51246e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f61686b2e7376673f\"></a>\n<a href=\"https://coveralls.io/github/spyoungtech/ahk?branch=master\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5458e03598ddde2625947a69784e504ec4bfb419/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7370796f756e67746563682f61686b2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8b4994be7956f26be19fc93e533fda61d049b30/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f61686b\"></p>\n<h1>Installation</h1>\n<pre><code>pip install ahk\n</code></pre>\n<p>Requires Python 3.6+</p>\n<p>See also <a href=\"#deps\" rel=\"nofollow\">Non-Python dependencies</a></p>\n<h1>Usage</h1>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ahk</span> <span class=\"kn\">import</span> <span class=\"n\">AHK</span>\n\n<span class=\"n\">ahk</span> <span class=\"o\">=</span> <span class=\"n\">AHK</span><span class=\"p\">()</span>\n\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">mouse_move</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">blocking</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>  <span class=\"c1\"># Blocks until mouse finishes moving (the default)</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">mouse_move</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">blocking</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"c1\"># Moves the mouse to x, y taking 'speed' seconds to move</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">mouse_position</span><span class=\"p\">)</span>  <span class=\"c1\">#  (150, 150)</span>\n</pre>\n<p><img alt=\"ahk\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7abc26e748e8e51ca79005dce53acdc78a813c73/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f7370796f756e67746563682f61686b2f6d61737465722f646f63732f5f7374617469632f61686b2e676966\"></p>\n<h1>Examples</h1>\n<p>Non-exhaustive examples of some of the functions available with this package. Full documentation coming soon!</p>\n<h2>Mouse</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ahk</span> <span class=\"kn\">import</span> <span class=\"n\">AHK</span>\n\n<span class=\"n\">ahk</span> <span class=\"o\">=</span> <span class=\"n\">AHK</span><span class=\"p\">()</span>\n\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">mouse_position</span>  <span class=\"c1\"># Returns a tuple of mouse coordinates (x, y)</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">mouse_move</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">relative</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>  <span class=\"c1\"># Moves the mouse reletave to the current position</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">mouse_position</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>  <span class=\"c1\"># Moves the mouse instantly to absolute screen position</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">click</span><span class=\"p\">()</span>  <span class=\"c1\"># Click the primary mouse button</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">double_click</span><span class=\"p\">()</span> <span class=\"c1\"># Clicks the primary mouse button twice</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">click</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">)</span>  <span class=\"c1\"># Moves the mouse to a particular position and clicks</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">right_click</span><span class=\"p\">()</span> <span class=\"c1\"># Clicks the secondary mouse button</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">mouse_drag</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">relative</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"c1\"># Holds down primary button and moves the mouse</span>\n</pre>\n<h2>Keyboard</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ahk</span> <span class=\"kn\">import</span> <span class=\"n\">AHK</span>\n\n<span class=\"n\">ahk</span> <span class=\"o\">=</span> <span class=\"n\">AHK</span><span class=\"p\">()</span>\n\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">(</span><span class=\"s1\">'hello, world!'</span><span class=\"p\">)</span>  <span class=\"c1\"># Send keys, as if typed (performs ahk string escapes)</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">send_input</span><span class=\"p\">(</span><span class=\"s1\">'Hello`, World{!}'</span><span class=\"p\">)</span>  <span class=\"c1\"># Like AHK SendInput, must escape strings yourself!</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">key_state</span><span class=\"p\">(</span><span class=\"s1\">'Control'</span><span class=\"p\">)</span>  <span class=\"c1\"># Return True or False based on whether Control key is pressed down</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">key_state</span><span class=\"p\">(</span><span class=\"s1\">'CapsLock'</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">'T'</span><span class=\"p\">)</span>  <span class=\"c1\"># Check toggle state of a key (like for NumLock, CapsLock, etc)</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">key_press</span><span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">)</span>  <span class=\"c1\"># Press and release a key</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">key_down</span><span class=\"p\">(</span><span class=\"s1\">'Control'</span><span class=\"p\">)</span>  <span class=\"c1\"># Press down (but do not release) Control key</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">key_up</span><span class=\"p\">(</span><span class=\"s1\">'Control'</span><span class=\"p\">)</span>  <span class=\"c1\"># Release the key</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">key_wait</span><span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>  <span class=\"c1\"># Wait up to 3 seconds for the \"a\" key to be pressed. NOTE: This throws </span>\n                              <span class=\"c1\"># a TimeoutError if the key isn't pressed within the timeout window</span>\n</pre>\n<h2>Windows</h2>\n<p>You can do stuff with windows, too.</p>\n<h3>Getting windows</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ahk</span> <span class=\"kn\">import</span> <span class=\"n\">AHK</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ahk.window</span> <span class=\"kn\">import</span> <span class=\"n\">Window</span>\n\n<span class=\"n\">ahk</span> <span class=\"o\">=</span> <span class=\"n\">AHK</span><span class=\"p\">()</span>\n\n<span class=\"n\">win</span> <span class=\"o\">=</span> <span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">active_window</span>                        <span class=\"c1\"># Get the active window</span>\n<span class=\"n\">win</span> <span class=\"o\">=</span> <span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">win_get</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'Untitled - Notepad'</span><span class=\"p\">)</span>  <span class=\"c1\"># by title</span>\n<span class=\"n\">win</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">windows</span><span class=\"p\">())</span>                      <span class=\"c1\"># list of all windows</span>\n<span class=\"n\">win</span> <span class=\"o\">=</span> <span class=\"n\">Window</span><span class=\"p\">(</span><span class=\"n\">ahk</span><span class=\"p\">,</span> <span class=\"n\">ahk_id</span><span class=\"o\">=</span><span class=\"s1\">'0xabc123'</span><span class=\"p\">)</span>           <span class=\"c1\"># by ahk_id</span>\n<span class=\"n\">win</span> <span class=\"o\">=</span> <span class=\"n\">Window</span><span class=\"o\">.</span><span class=\"n\">from_mouse_position</span><span class=\"p\">(</span><span class=\"n\">ahk</span><span class=\"p\">)</span>          <span class=\"c1\"># the window under the mouse cursor</span>\n<span class=\"n\">win</span> <span class=\"o\">=</span> <span class=\"n\">Window</span><span class=\"o\">.</span><span class=\"n\">from_pid</span><span class=\"p\">(</span><span class=\"s1\">'20366'</span><span class=\"p\">)</span>                 <span class=\"c1\"># by process ID</span>\n</pre>\n<h3>Working with windows</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ahk</span> <span class=\"kn\">import</span> <span class=\"n\">AHK</span>\n\n<span class=\"n\">ahk</span> <span class=\"o\">=</span> <span class=\"n\">AHK</span><span class=\"p\">()</span>\n\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">run_script</span><span class=\"p\">(</span><span class=\"s1\">'Run Notepad'</span><span class=\"p\">)</span> <span class=\"c1\"># Open notepad</span>\n<span class=\"n\">win</span> <span class=\"o\">=</span> <span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">find_window</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'Untitled - Notepad'</span><span class=\"p\">)</span> <span class=\"c1\"># Find the opened window</span>\n\n<span class=\"n\">win</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s1\">'hello'</span><span class=\"p\">)</span>  <span class=\"c1\"># Send keys directly to the window (does not need focus!)</span>\n<span class=\"n\">win</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">800</span><span class=\"p\">)</span>\n\n<span class=\"n\">win</span><span class=\"o\">.</span><span class=\"n\">activate</span><span class=\"p\">()</span>           <span class=\"c1\"># Give the window focus</span>\n<span class=\"n\">win</span><span class=\"o\">.</span><span class=\"n\">activate_buttom</span><span class=\"p\">()</span>    <span class=\"c1\"># Give the window focus</span>\n<span class=\"n\">win</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>              <span class=\"c1\"># Close the window</span>\n<span class=\"n\">win</span><span class=\"o\">.</span><span class=\"n\">hide</span><span class=\"p\">()</span>               <span class=\"c1\"># Hide the windwow</span>\n<span class=\"n\">win</span><span class=\"o\">.</span><span class=\"n\">kill</span><span class=\"p\">()</span>               <span class=\"c1\"># Kill the window </span>\n<span class=\"n\">win</span><span class=\"o\">.</span><span class=\"n\">maximize</span><span class=\"p\">()</span>           <span class=\"c1\"># Maximize the window</span>\n<span class=\"n\">win</span><span class=\"o\">.</span><span class=\"n\">minimize</span><span class=\"p\">()</span>           <span class=\"c1\"># Minimize the window</span>\n<span class=\"n\">win</span><span class=\"o\">.</span><span class=\"n\">restore</span><span class=\"p\">()</span>            <span class=\"c1\"># Restore the window</span>\n<span class=\"n\">win</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>               <span class=\"c1\"># Show the window</span>\n<span class=\"n\">win</span><span class=\"o\">.</span><span class=\"n\">disable</span><span class=\"p\">()</span>            <span class=\"c1\"># Make the window non-interactable</span>\n<span class=\"n\">win</span><span class=\"o\">.</span><span class=\"n\">enable</span><span class=\"p\">()</span>             <span class=\"c1\"># Enable it again</span>\n<span class=\"n\">win</span><span class=\"o\">.</span><span class=\"n\">to_top</span><span class=\"p\">()</span>             <span class=\"c1\"># Move the window on top of other windows</span>\n<span class=\"n\">win</span><span class=\"o\">.</span><span class=\"n\">to_bottom</span><span class=\"p\">()</span>          <span class=\"c1\"># Move the window to the bottom of the other windows</span>\n\n<span class=\"n\">win</span><span class=\"o\">.</span><span class=\"n\">always_on_top</span> <span class=\"o\">=</span> <span class=\"kc\">True</span> <span class=\"c1\"># Make the window always on top</span>\n\n<span class=\"k\">for</span> <span class=\"n\">window</span> <span class=\"ow\">in</span> <span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">windows</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Some more attributes</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">rect</span><span class=\"p\">)</span>   <span class=\"c1\"># (x, y, width, height)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>     <span class=\"c1\"># ahk_id</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">pid</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">active</span><span class=\"p\">:</span>        <span class=\"c1\"># Check if window active</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">minimize</span><span class=\"p\">()</span>\n\n<span class=\"k\">if</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">exist</span><span class=\"p\">:</span>         <span class=\"c1\"># Check if window exist</span>\n    <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">maximize</span><span class=\"p\">()</span>\n</pre>\n<h2>Screen</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ahk</span> <span class=\"kn\">import</span> <span class=\"n\">AHK</span>\n\n<span class=\"n\">ahk</span> <span class=\"o\">=</span> <span class=\"n\">AHK</span><span class=\"p\">()</span>\n\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">image_search</span><span class=\"p\">(</span><span class=\"s1\">'C:</span><span class=\"se\">\\\\</span><span class=\"s1\">path</span><span class=\"se\">\\\\</span><span class=\"s1\">to</span><span class=\"se\">\\\\</span><span class=\"s1\">image.jpg'</span><span class=\"p\">)</span>  <span class=\"c1\"># Find an image on screen</span>\n\n<span class=\"c1\"># Find an image within a boundary on screen</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">image_search</span><span class=\"p\">(</span><span class=\"s1\">'C:</span><span class=\"se\">\\\\</span><span class=\"s1\">path</span><span class=\"se\">\\\\</span><span class=\"s1\">to</span><span class=\"se\">\\\\</span><span class=\"s1\">image.jpg'</span><span class=\"p\">,</span> <span class=\"n\">upper_bound</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">),</span>  <span class=\"c1\"># upper-left corner of search area</span>\n                                            <span class=\"n\">lower_bound</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">400</span><span class=\"p\">,</span> <span class=\"mi\">400</span><span class=\"p\">))</span>  <span class=\"c1\"># lower-right corner of search area</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">pixel_get_color</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>  <span class=\"c1\"># Get color of pixel located at coords (100, 100)</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">pixel_search</span><span class=\"p\">(</span><span class=\"s1\">'0x9d6346'</span><span class=\"p\">)</span>  <span class=\"c1\"># Get coords of the first pixel with specified color</span>\n</pre>\n<h2>Sound</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ahk</span> <span class=\"kn\">import</span> <span class=\"n\">AHK</span>\n\n<span class=\"n\">ahk</span> <span class=\"o\">=</span> <span class=\"n\">AHK</span><span class=\"p\">()</span>\n\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">sound_play</span><span class=\"p\">(</span><span class=\"s1\">'C:</span><span class=\"se\">\\\\</span><span class=\"s1\">path</span><span class=\"se\">\\\\</span><span class=\"s1\">to</span><span class=\"se\">\\\\</span><span class=\"s1\">sound.wav'</span><span class=\"p\">)</span>  <span class=\"c1\"># Play an audio file</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">sound_beep</span><span class=\"p\">(</span><span class=\"n\">frequency</span><span class=\"o\">=</span><span class=\"mi\">440</span><span class=\"p\">,</span> <span class=\"n\">duration</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>  <span class=\"c1\"># Play a beep for 1 second (duration in microseconds)</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">get_volume</span><span class=\"p\">(</span><span class=\"n\">device_number</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># Get volume of a device</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">set_volume</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">device_number</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># Set volume of a device</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">sound_get</span><span class=\"p\">(</span><span class=\"n\">device_number</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">component_type</span><span class=\"o\">=</span><span class=\"s1\">'MASTER'</span><span class=\"p\">,</span> <span class=\"n\">control_type</span><span class=\"o\">=</span><span class=\"s1\">'VOLUME'</span><span class=\"p\">)</span> <span class=\"c1\"># Get sound device property</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">sound_set</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">device_number</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">component_type</span><span class=\"o\">=</span><span class=\"s1\">'MASTER'</span><span class=\"p\">,</span> <span class=\"n\">control_type</span><span class=\"o\">=</span><span class=\"s1\">'VOLUME'</span><span class=\"p\">)</span> <span class=\"c1\"># Set sound device property</span>\n</pre>\n<h2>non-blocking modes</h2>\n<p>For some functions, you can also opt for a non-blocking interface, so you can do other stuff while AHK scripts run.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">ahk</span> <span class=\"kn\">import</span> <span class=\"n\">AHK</span>\n\n<span class=\"n\">ahk</span> <span class=\"o\">=</span> <span class=\"n\">AHK</span><span class=\"p\">()</span>\n\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">mouse_position</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">)</span>  <span class=\"c1\"># Moves the mouse instantly to the start position</span>\n<span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">mouse_move</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"n\">blocking</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>  <span class=\"c1\">#  report mouse position while it moves</span>\n    <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n    <span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">mouse_position</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">position</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">):</span>\n        <span class=\"k\">break</span>\n</pre>\n<p>You should see an output something like</p>\n<pre><code>0.032 (187, 187)\n0.094 (173, 173)\n0.137 (164, 164)\n...\n0.788 (100, 103)\n0.831 (100, 101)\n0.873 (100, 100)\n</code></pre>\n<h2>Run arbitrary AutoHotkey scripts</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ahk</span> <span class=\"kn\">import</span> <span class=\"n\">AHK</span>\n\n<span class=\"n\">ahk</span> <span class=\"o\">=</span> <span class=\"n\">AHK</span><span class=\"p\">()</span>\n\n<span class=\"n\">ahk_script</span> <span class=\"o\">=</span> <span class=\"s1\">'Run Notepad'</span>\n<span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">run_script</span><span class=\"p\">(</span><span class=\"n\">ahk_script</span><span class=\"p\">,</span> <span class=\"n\">blocking</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<h3>Communicating data from ahk to Python</h3>\n<p>If you're writing your own ahk scripts to use with this library, you can use <code>FileAppend</code> with the <code>*</code> parameter to get data from your ahk script into Python.</p>\n<p>Suppose you have a script like so</p>\n<pre><span class=\"nb\">#Persistent</span>\n<span class=\"n\">data</span> <span class=\"o\">:=</span> <span class=\"s\">\"Hello Data!\"</span>\n<span class=\"nb\">FileAppend</span><span class=\"p\">,</span> <span class=\"nv\">%data%</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"c1\"> ; send data var to stdout</span>\n<span class=\"nb\">ExitApp</span>\n</pre>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">run_script</span><span class=\"p\">(</span><span class=\"n\">my_script</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>  <span class=\"c1\"># Hello Data!</span>\n</pre>\n<p>If your autohotkey returns something that can't be decoded, add the keyword argument <code>decode=False</code> in which case you'll get back a <code>CompletedProcess</code> object where stdout (and stderr) will be bytes and you can handle it however you choose.</p>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">ahk</span><span class=\"o\">.</span><span class=\"n\">run_script</span><span class=\"p\">(</span><span class=\"n\">my_script</span><span class=\"p\">,</span> <span class=\"n\">decode</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">)</span>  <span class=\"c1\"># b'Hello Data!'</span>\n</pre>\n<h2>Experimental features</h2>\n<p>Experimental features are things that are minimally functional, (even more) likely to have breaking changes, even\nfor minor releases.</p>\n<p>Github issues are provided for convenience to collect feedback on these features.</p>\n<h3>Hotkeys</h3>\n<p><a href=\"https://github.com/spyoungtech/ahk/issues/9\" rel=\"nofollow\">GH-9</a></p>\n<p>Hotkeys now have a primitive implementation. You give it a hotkey (a string the same as in an ahk script, without the <code>::</code>)\nand the body of an AHK script to execute as a response to the hotkey.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ahk</span> <span class=\"kn\">import</span> <span class=\"n\">AHK</span><span class=\"p\">,</span> <span class=\"n\">Hotkey</span>\n\n<span class=\"n\">ahk</span> <span class=\"o\">=</span> <span class=\"n\">AHK</span><span class=\"p\">()</span>\n\n<span class=\"n\">key_combo</span> <span class=\"o\">=</span> <span class=\"s1\">'#n'</span> <span class=\"c1\"># Define an AutoHotkey key combonation</span>\n<span class=\"n\">script</span> <span class=\"o\">=</span> <span class=\"s1\">'Run Notepad'</span> <span class=\"c1\"># Define an ahk script</span>\n<span class=\"n\">hotkey</span> <span class=\"o\">=</span> <span class=\"n\">Hotkey</span><span class=\"p\">(</span><span class=\"n\">ahk</span><span class=\"p\">,</span> <span class=\"n\">key_combo</span><span class=\"p\">,</span> <span class=\"n\">script</span><span class=\"p\">)</span> <span class=\"c1\"># Create Hotkey</span>\n<span class=\"n\">hotkey</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>  <span class=\"c1\">#  Start listening for hotkey</span>\n</pre>\n<p>At this point, the hotkey is active.\nIf you press <kbd><img alt=\"Windows Key\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6b73fb3901caaf1874509c76285e22b3ed03934c/687474703a2f2f692e737461636b2e696d6775722e636f6d2f52667577372e706e67\"></kbd> + <kbd>n</kbd>, the script <code>Run Notepad</code> will execute.</p>\n<p>There is no need to add <code>return</code> to the provided script, as it is provided by the template.</p>\n<p>To stop the hotkey call the <code>stop()</code> method.</p>\n<pre><span class=\"n\">hotkey</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n<p>See also the <a href=\"https://www.autohotkey.com/docs/Hotkeys.htm\" rel=\"nofollow\">relevant AHK documentation</a></p>\n<h3>ActionChain</h3>\n<p><a href=\"https://github.com/spyoungtech/ahk/issues/25\" rel=\"nofollow\">GH-25</a></p>\n<p><code>ActionChain</code>s let you define a set of actions to be performed in order at a later time.</p>\n<p>They work just like the <code>AHK</code> class, except the actions are deferred until the <code>perform</code> method is called.</p>\n<p>An additional method <code>sleep</code> is provided to allow for waiting between actions.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ahk</span> <span class=\"kn\">import</span> <span class=\"n\">ActionChain</span>\n\n<span class=\"n\">ac</span> <span class=\"o\">=</span> <span class=\"n\">ActionChain</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># An Action Chain doesn't perform the actions until perform() is called on the chain</span>\n\n<span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">mouse_move</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>  <span class=\"c1\"># nothing yet</span>\n<span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># still nothing happening</span>\n<span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">mouse_move</span><span class=\"p\">(</span><span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>  <span class=\"c1\"># not yet</span>\n<span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">perform</span><span class=\"p\">()</span>  <span class=\"c1\"># *now* each of the actions run in order</span>\n</pre>\n<p>Just like anywhere else, scripts running simultaneously may conflict with one another, so using blocking interfaces is\ngenerally recommended. Currently, there is limited support for interacting with windows in actionchains, you may want to use <code>win_set</code>)</p>\n<h3>find_window/find_windows methods</h3>\n<p><a href=\"https://github.com/spyoungtech/ahk/issues/26\" rel=\"nofollow\">GH-26</a></p>\n<p>Right now, these are implemented by iterating over all window handles and filtering with Python.<br>\nThey may be optimized in the future.</p>\n<p><code>AHK.find_windows</code> returns a generator filtering results based on attributes provided as keyword arguments.<br>\n<code>AHK.find_window</code> is similar, but returns the first matching window instead of all matching windows.</p>\n<p>There are couple convenience functions, but not sure if these will stay around or maybe we'll add more, depending on feedback.</p>\n<ul>\n<li>find_windows_by_title</li>\n<li>find_window_by_title</li>\n<li>find_windows_by_text</li>\n<li>find_window_by_text</li>\n</ul>\n<h2>Errors and Debugging</h2>\n<p>You can enable debug logging, which will output script text before execution, and some other potentially useful\ndebugging information.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">basicConfig</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n</pre>\n<p>(See the <a href=\"https://docs.python.org/3/library/logging.html\" rel=\"nofollow\">logging module documentation</a> for more information)</p>\n<p>Also note that, for now, errors with running AHK scripts will often pass silently. In the future, better error handling\nwill be added.</p>\n<a>\n<h2>Non-Python dependencies</h2>\n</a><p><a>To use this package, you need the </a><a href=\"https://www.autohotkey.com/download/\" rel=\"nofollow\">AutoHotkey executable</a>.</p>\n<p>It's expected to be on PATH by default. You can also use the <code>AHK_PATH</code> environment variable to specify the executable location.</p>\n<p>Alternatively, you may provide the path in code</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ahk</span> <span class=\"kn\">import</span> <span class=\"n\">AHK</span>\n\n<span class=\"n\">ahk</span> <span class=\"o\">=</span> <span class=\"n\">AHK</span><span class=\"p\">(</span><span class=\"n\">executable_path</span><span class=\"o\">=</span><span class=\"s1\">'C:</span><span class=\"se\">\\\\</span><span class=\"s1\">path</span><span class=\"se\">\\\\</span><span class=\"s1\">to</span><span class=\"se\">\\\\</span><span class=\"s1\">AutoHotkey.exe'</span><span class=\"p\">)</span>\n</pre>\n<h1>Contributing</h1>\n<p>All contributions are welcomed and appreciated.</p>\n<p>Please feel free to open a GitHub issue or PR for feedback, ideas, feature requests or questions.</p>\n<p>There's still some work to be done in the way of implementation. The ideal interfaces are still yet to be determined and\n<em>your</em> help would be invaluable.</p>\n<p>The vision is to provide access to the most useful features of the AutoHotkey API in a Pythonic way.</p>\n<h1>Similar projects</h1>\n<p>These are some similar projects that are commonly used for automation with Python.</p>\n<ul>\n<li><a href=\"https://pyautogui.readthedocs.io\" rel=\"nofollow\">Pyautogui</a> - Al Sweigart's creation for cross-platform automation</li>\n<li><a href=\"https://pywinauto.readthedocs.io\" rel=\"nofollow\">Pywinauto</a> - Automation on Windows platforms with Python.</li>\n<li><a href=\"https://github.com/boppreh/keyboard\" rel=\"nofollow\">keyboard</a> - Pure Python cross-platform keyboard hooks/control and hotkeys!</li>\n<li><a href=\"https://github.com/boppreh/mouse\" rel=\"nofollow\">mouse</a> - From the creators of <code>keyboard</code>, Pure Python <em>mouse</em> control!</li>\n<li><a href=\"https://github.com/moses-palmer/pynput\" rel=\"nofollow\">pynput</a> - Keyboard and mouse control</li>\n</ul>\n\n          </div>"}, "last_serial": 6911811, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9f1d8585fc9cdaae857183bdf634d48d", "sha256": "2a7a3c0baae01e34b4a120f2b200fd1efc577601a4eb675c0a9087ca9ae8262a"}, "downloads": -1, "filename": "ahk-0.0.1.tar.gz", "has_sig": false, "md5_digest": "9f1d8585fc9cdaae857183bdf634d48d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1958, "upload_time": "2018-11-22T06:29:19", "upload_time_iso_8601": "2018-11-22T06:29:19.334647Z", "url": "https://files.pythonhosted.org/packages/33/98/671f91e66a67744b773c05a21e500c8417339d6987ad4af20b5b8a79d920/ahk-0.0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "56f41dee260884d5b05c2d3342f3a695", "sha256": "0fd61c2aec0c72060ddc2473315b4c96cd4d82c39141c598c92b35dc60a765d5"}, "downloads": -1, "filename": "ahk-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "56f41dee260884d5b05c2d3342f3a695", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6514, "upload_time": "2018-11-27T09:40:36", "upload_time_iso_8601": "2018-11-27T09:40:36.919982Z", "url": "https://files.pythonhosted.org/packages/3d/a7/a5b0028e8fe6b85fa4209183783d25a59757bfe10f828ca77cc5da70b8e8/ahk-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bdf100f892c7c3afe5f50c59ac86f122", "sha256": "5bba3d3cbb5b943fff110d4f7c76d5ab8aef75d466ed5f0f08821f36a500933b"}, "downloads": -1, "filename": "ahk-0.1.1.tar.gz", "has_sig": false, "md5_digest": "bdf100f892c7c3afe5f50c59ac86f122", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5221, "upload_time": "2018-11-27T09:40:38", "upload_time_iso_8601": "2018-11-27T09:40:38.472664Z", "url": "https://files.pythonhosted.org/packages/b4/b0/35601db18a3ec0c028af7e1a8900708302bab661fdb05d93a1ece42492d3/ahk-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a7fdd40c7703ad42a5cd43cad30410d4", "sha256": "3ea557c26f0d69b537bf969d7a1029dd2827cbaf92617ef2fc18591c04b25914"}, "downloads": -1, "filename": "ahk-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a7fdd40c7703ad42a5cd43cad30410d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6715, "upload_time": "2018-12-12T08:28:08", "upload_time_iso_8601": "2018-12-12T08:28:08.252230Z", "url": "https://files.pythonhosted.org/packages/28/77/56194166fff7fe6a50b21dac856c67f37cd6d74760df1f6bd36ef2e9fbbc/ahk-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c716a2186dece0e3cd11e11456154a9", "sha256": "432d4278bb3a20be96ddca5e879fae57404a51233d88fe4dacfb8f6488a5e4a7"}, "downloads": -1, "filename": "ahk-0.2.0.tar.gz", "has_sig": false, "md5_digest": "7c716a2186dece0e3cd11e11456154a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5766, "upload_time": "2018-12-12T08:28:10", "upload_time_iso_8601": "2018-12-12T08:28:10.051838Z", "url": "https://files.pythonhosted.org/packages/92/32/e5e2d0988b23f749caea939bccc99489830b6e36744aad560205c7c22442/ahk-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "c12bc17519007438c63a06e85844f545", "sha256": "e8a9ccd20809f8f0c24a1d83ae6ae70b8a0546c0ee1982b7b9b22d24889467b6"}, "downloads": -1, "filename": "ahk-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c12bc17519007438c63a06e85844f545", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6549, "upload_time": "2018-12-13T03:45:17", "upload_time_iso_8601": "2018-12-13T03:45:17.931116Z", "url": "https://files.pythonhosted.org/packages/69/18/f1aea47a5ef1b4830c9da3b0fb025386538b444345790cf082c1494a211f/ahk-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3660c0df4f7873f992bb6df62a5d0302", "sha256": "9d6a15046e0449b3935a75ec50df26eb65b1519430f3318ab5b326f5bb9d5662"}, "downloads": -1, "filename": "ahk-0.2.1.tar.gz", "has_sig": false, "md5_digest": "3660c0df4f7873f992bb6df62a5d0302", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5500, "upload_time": "2018-12-13T03:45:19", "upload_time_iso_8601": "2018-12-13T03:45:19.857890Z", "url": "https://files.pythonhosted.org/packages/e6/83/3286baa1f9861cc1fd3448d8a45b0fdf2ed70a36791d02aee601c2031286/ahk-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "c7bfb0be1267d1b3c22a94d8e2c69c2b", "sha256": "67e8aff152f1ff5c7155fa9465919364821e9a20014bf09823a7e390bdb0f5ba"}, "downloads": -1, "filename": "ahk-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c7bfb0be1267d1b3c22a94d8e2c69c2b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7598, "upload_time": "2018-12-13T07:20:20", "upload_time_iso_8601": "2018-12-13T07:20:20.217405Z", "url": "https://files.pythonhosted.org/packages/fb/22/e6f4813aee913453866efffd4f6954e017373706ad0159169ddd1c322bd9/ahk-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ab5d63bd0f5492dfdaa1b34a8b2539e", "sha256": "57dde1a46ef9a72d42b49e3f4e461ee2a9d48d53c726b8c0ced3ba87522e407b"}, "downloads": -1, "filename": "ahk-0.2.2.tar.gz", "has_sig": false, "md5_digest": "8ab5d63bd0f5492dfdaa1b34a8b2539e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6138, "upload_time": "2018-12-13T07:20:21", "upload_time_iso_8601": "2018-12-13T07:20:21.557860Z", "url": "https://files.pythonhosted.org/packages/73/a5/da50ce28f9f52a427161f25c765db43e46012924adec7a8f4e74f7b098dc/ahk-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "de3f415836ede6f04eedfe14bbef327c", "sha256": "8eb974f81db95662cd17625f61f5cf2541d03c9a8b297867c9c9dff51052278e"}, "downloads": -1, "filename": "ahk-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "de3f415836ede6f04eedfe14bbef327c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10595, "upload_time": "2018-12-13T13:03:02", "upload_time_iso_8601": "2018-12-13T13:03:02.928003Z", "url": "https://files.pythonhosted.org/packages/57/da/abc92b8acd5d70f76f3756e993d5fa1e56f6b45ee6ed5e92450080a7bbfe/ahk-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5432b8bab84aa097d86992a89922b890", "sha256": "a641ab72a3f3424c35171e3b384a15c517c29214dbe15d38b3745ca505162f62"}, "downloads": -1, "filename": "ahk-0.3.0.tar.gz", "has_sig": false, "md5_digest": "5432b8bab84aa097d86992a89922b890", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8248, "upload_time": "2018-12-13T13:03:04", "upload_time_iso_8601": "2018-12-13T13:03:04.312427Z", "url": "https://files.pythonhosted.org/packages/36/80/5b08a1f74388e247e5b488267efd6238269a4a3b567462d5879173ba8a93/ahk-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "a88cafbd37573339489fd1bca50b1fa9", "sha256": "961a42a06ea720fc928e644a74b1bf39c085f82d5f3c709e522a7361ed93f5f4"}, "downloads": -1, "filename": "ahk-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a88cafbd37573339489fd1bca50b1fa9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12131, "upload_time": "2018-12-16T02:09:25", "upload_time_iso_8601": "2018-12-16T02:09:25.975274Z", "url": "https://files.pythonhosted.org/packages/35/45/75f8b7917c0da153b2c354befcad61877221fdde1566d097a25538086f35/ahk-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f800b22716ec8917056a3b4ab76f79d5", "sha256": "f835fafc8c8041b01b15573947106a22be24e4b0c81e91de47f5b37c016ae5ce"}, "downloads": -1, "filename": "ahk-0.3.1.tar.gz", "has_sig": false, "md5_digest": "f800b22716ec8917056a3b4ab76f79d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9639, "upload_time": "2018-12-16T02:09:27", "upload_time_iso_8601": "2018-12-16T02:09:27.530184Z", "url": "https://files.pythonhosted.org/packages/a2/0a/82d78a23ae27d1be35bb9f644373050e193611ad226c8f6104ac4a59745a/ahk-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "8186738aa4500ee6b6a69318f81593c4", "sha256": "9009e70559bcbfadb5caec06eb9aca20fbd5c054cde31ddbd3e9e4bf8b1a6102"}, "downloads": -1, "filename": "ahk-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8186738aa4500ee6b6a69318f81593c4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16041, "upload_time": "2018-12-18T08:58:57", "upload_time_iso_8601": "2018-12-18T08:58:57.090775Z", "url": "https://files.pythonhosted.org/packages/f8/54/ab0f3868e5eb830a1d16012f78752c4a341e52f16c443ea4499932437871/ahk-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cdaacbc1a5838204bd3bf941fd0f310a", "sha256": "50e26d960bf6899fa0ef6feb675bc6141fd0abd15128cfe704268c1b645bbe5e"}, "downloads": -1, "filename": "ahk-0.4.0.tar.gz", "has_sig": false, "md5_digest": "cdaacbc1a5838204bd3bf941fd0f310a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12139, "upload_time": "2018-12-18T08:58:58", "upload_time_iso_8601": "2018-12-18T08:58:58.473172Z", "url": "https://files.pythonhosted.org/packages/41/37/b478f5860f6cd624b85146e1d525f5cc9f2f8a61d19c9c4cc1de4faf3db4/ahk-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "c826cfa902cab6470d7eb89c5286ff79", "sha256": "3b798f9be42751b0e2ceae74b2f3c999bce14860d94791b33f072d4fef987233"}, "downloads": -1, "filename": "ahk-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c826cfa902cab6470d7eb89c5286ff79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16036, "upload_time": "2018-12-19T06:22:53", "upload_time_iso_8601": "2018-12-19T06:22:53.104667Z", "url": "https://files.pythonhosted.org/packages/df/08/5a66e3f3393880d4be88c607a3e4d0435dfe76b2c54c443eef2343cc20bc/ahk-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9da332e6d4a746a1ce6d6f89277c69c0", "sha256": "0780fb2e9547af9e6a346d0f76c77317eaa5ae80db83f3ad92d5a7773d83b5a6"}, "downloads": -1, "filename": "ahk-0.4.1.tar.gz", "has_sig": false, "md5_digest": "9da332e6d4a746a1ce6d6f89277c69c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12135, "upload_time": "2018-12-19T06:22:54", "upload_time_iso_8601": "2018-12-19T06:22:54.459288Z", "url": "https://files.pythonhosted.org/packages/e5/dd/6e04a6164a87b31c8cf851bdefe591a2dd5d2485abb850e3d739191cb56c/ahk-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "1693b5ed3e4b1cce7462028124887e61", "sha256": "9021ca1d0b6ac72bc6a96f8938f24cab22eca876a8ba44017ceb89b1079d4de1"}, "downloads": -1, "filename": "ahk-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1693b5ed3e4b1cce7462028124887e61", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18251, "upload_time": "2018-12-19T06:27:40", "upload_time_iso_8601": "2018-12-19T06:27:40.499395Z", "url": "https://files.pythonhosted.org/packages/7e/b5/8431624ac633b6ea45b6fca1d900320245be67d8cb0b74e4c84d93492630/ahk-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e19c70e03c35a4ee372329125480bdbe", "sha256": "08e036d5fa140c7ec612f1d142281375e129c7ec9161b9008859cb6e0316b4a8"}, "downloads": -1, "filename": "ahk-0.4.2.tar.gz", "has_sig": false, "md5_digest": "e19c70e03c35a4ee372329125480bdbe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15017, "upload_time": "2018-12-19T06:27:41", "upload_time_iso_8601": "2018-12-19T06:27:41.730603Z", "url": "https://files.pythonhosted.org/packages/cb/d3/9c66da447952f287aabca209bcc1d367804a4694aed47aba02572f2ecd88/ahk-0.4.2.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "bd5350a4e3d0cc5098969a8126b9affe", "sha256": "0901c34f7808dea3210bddd684c63f2c9cdf9155d73172dc500a226e81ca9c8f"}, "downloads": -1, "filename": "ahk-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bd5350a4e3d0cc5098969a8126b9affe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21682, "upload_time": "2019-01-19T06:12:54", "upload_time_iso_8601": "2019-01-19T06:12:54.450150Z", "url": "https://files.pythonhosted.org/packages/62/71/d68a008efeca2131a1a6e20f186fac57a32ad4a3cd592cfe93378c59c32f/ahk-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9801f769cbcddb8ab48fb69a5700eaa", "sha256": "cc1315eb2aa88854b332092686bcccc6cc9432c2174d587d3afd34c9bad05722"}, "downloads": -1, "filename": "ahk-0.5.0.tar.gz", "has_sig": false, "md5_digest": "d9801f769cbcddb8ab48fb69a5700eaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17988, "upload_time": "2019-01-19T06:12:55", "upload_time_iso_8601": "2019-01-19T06:12:55.721029Z", "url": "https://files.pythonhosted.org/packages/a5/47/ce7580ce254cfe2c0a61e096e4bb559bd8456c00dabb200dc1ffbfa43f67/ahk-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "b83a6fd76b53011a3f56fd33def9ca9a", "sha256": "aefea5a48a07159345eb0251eeb304dc0d2d392df28900392ee2ab74b0331bc5"}, "downloads": -1, "filename": "ahk-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b83a6fd76b53011a3f56fd33def9ca9a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28979, "upload_time": "2019-03-06T04:49:37", "upload_time_iso_8601": "2019-03-06T04:49:37.647708Z", "url": "https://files.pythonhosted.org/packages/76/ba/45411fde29d5481f9b9a75bcf4f69908fd0d2283e88f884d1d69ab25a04e/ahk-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d9b4fb7a0c9df5440c4d4bf55fc178c", "sha256": "fdde06d890f2287b8d25b3d93357507d5d16830eb1feb18f1020bb365717b9ea"}, "downloads": -1, "filename": "ahk-0.6.0.tar.gz", "has_sig": false, "md5_digest": "3d9b4fb7a0c9df5440c4d4bf55fc178c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23199, "upload_time": "2019-03-06T04:49:39", "upload_time_iso_8601": "2019-03-06T04:49:39.050434Z", "url": "https://files.pythonhosted.org/packages/20/b8/86dd83633df6879d480a0a3e0a174b6d6c141d61681103ae06607958fb76/ahk-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "bbe1c44bb6de17e0e2685c2bc6d78c2b", "sha256": "d0913f38b240a1bd92476fbf562ba01f3292bcd06ab0235a107e955f65bfc0df"}, "downloads": -1, "filename": "ahk-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bbe1c44bb6de17e0e2685c2bc6d78c2b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 31826, "upload_time": "2019-03-30T19:00:54", "upload_time_iso_8601": "2019-03-30T19:00:54.807783Z", "url": "https://files.pythonhosted.org/packages/d4/79/8acbe269384fc7a8ea135c2886211addd50f3e7d749f68bb3e16b413af43/ahk-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1dd534082d19963cc424d0a90e3bc51", "sha256": "9caff89f240c10dd1d7a4f67171f28aadb68eff478f40c1187cc488840112f19"}, "downloads": -1, "filename": "ahk-0.6.1.tar.gz", "has_sig": false, "md5_digest": "c1dd534082d19963cc424d0a90e3bc51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24760, "upload_time": "2019-03-30T19:00:56", "upload_time_iso_8601": "2019-03-30T19:00:56.470351Z", "url": "https://files.pythonhosted.org/packages/72/0d/8c99713ff8786526f03d0da1a499a04987240bb9490ddf3d8bd1c6b34bf9/ahk-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "489eefd2594fe41cb0ed212a56c60e21", "sha256": "fd6a3a20c75daebb59039a78107bfa26e3032d9ff88d31fac608d3691d94de18"}, "downloads": -1, "filename": "ahk-0.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "489eefd2594fe41cb0ed212a56c60e21", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33112, "upload_time": "2019-08-14T21:26:29", "upload_time_iso_8601": "2019-08-14T21:26:29.581096Z", "url": "https://files.pythonhosted.org/packages/93/e6/99f0e26eedb27ce158b0197818e0fb2810cb631371eb5bec86d624ed2610/ahk-0.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2cd991172e26e89e121341422eadd601", "sha256": "b20f95fad6c93be4348af70f460065ec1babeadd5a83d7771ff3b9eab88cfa9d"}, "downloads": -1, "filename": "ahk-0.6.2.tar.gz", "has_sig": false, "md5_digest": "2cd991172e26e89e121341422eadd601", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26298, "upload_time": "2019-08-14T21:26:31", "upload_time_iso_8601": "2019-08-14T21:26:31.187690Z", "url": "https://files.pythonhosted.org/packages/57/7a/aa5b5bd34dc5d3ef3c671db45e95c068412ed6666c45431475ac3ff7deab/ahk-0.6.2.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "d13ada760da42e491bade75069188f93", "sha256": "740a0fa7b00d8a6e7fe868a8aa27f07f8f11b929586be04f466b1cd2cd2eb1e4"}, "downloads": -1, "filename": "ahk-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d13ada760da42e491bade75069188f93", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33688, "upload_time": "2020-02-21T10:24:14", "upload_time_iso_8601": "2020-02-21T10:24:14.079668Z", "url": "https://files.pythonhosted.org/packages/16/ab/52ecbec3ebaa95ec5f7c6fd47850d1b0affec361bfe9c7188e62ae3e3e46/ahk-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00d4e8f96aa22fecaffef5a0f56257c0", "sha256": "a6656d9397d0f9d7206d7e174ddf2d8d57aaa0c57a7c39802fa25348c5110e0a"}, "downloads": -1, "filename": "ahk-0.7.0.tar.gz", "has_sig": false, "md5_digest": "00d4e8f96aa22fecaffef5a0f56257c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26605, "upload_time": "2020-02-21T10:24:15", "upload_time_iso_8601": "2020-02-21T10:24:15.677379Z", "url": "https://files.pythonhosted.org/packages/55/65/abb924bd7b61f44f41b27c632f7665810c436ecb1c82f4830c3cd79f8123/ahk-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "d9d40b25495c05c771780001829f87bc", "sha256": "e529127ed3dd75124b0ad14e692dc4b3e08fe9b3f14f5e396d31b5ce3da1a78a"}, "downloads": -1, "filename": "ahk-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d9d40b25495c05c771780001829f87bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35664, "upload_time": "2020-02-27T05:05:38", "upload_time_iso_8601": "2020-02-27T05:05:38.157610Z", "url": "https://files.pythonhosted.org/packages/84/3c/297f50c7f0d3b99780897c31a6ed21065fa913132f5a5449a7c410d266ee/ahk-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bed8b60d87f2869618e63734f5ff6a64", "sha256": "08e3e85c047ccca79451f7fa1c15c49aa2c1a9a63b9ae5a57f2d3a25e2afb37f"}, "downloads": -1, "filename": "ahk-0.8.0.tar.gz", "has_sig": false, "md5_digest": "bed8b60d87f2869618e63734f5ff6a64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28292, "upload_time": "2020-02-27T05:05:39", "upload_time_iso_8601": "2020-02-27T05:05:39.644558Z", "url": "https://files.pythonhosted.org/packages/36/72/abe30555915c298c84b8f511316e5b7af5a3e9eee6679ef21b4af0aef858/ahk-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "816a224bfeb93912b820dde70b06b601", "sha256": "1beccc4f537401d0414b1b79ebb4a4bfedef7fd1684a0586ef25f24b2ba9d6ac"}, "downloads": -1, "filename": "ahk-0.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "816a224bfeb93912b820dde70b06b601", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35702, "upload_time": "2020-03-30T09:52:37", "upload_time_iso_8601": "2020-03-30T09:52:37.781939Z", "url": "https://files.pythonhosted.org/packages/ef/9a/e653fdb2aefec02f7f30dcb0211b5593471a9781e5bf1bdc74aac906c195/ahk-0.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb390d1aa5db3510e6f66923cef8c52a", "sha256": "89635bdd6db987a2d864d66f334508f3a604039b1abaa7b5647fc7786061398a"}, "downloads": -1, "filename": "ahk-0.8.1.tar.gz", "has_sig": false, "md5_digest": "cb390d1aa5db3510e6f66923cef8c52a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28310, "upload_time": "2020-03-30T09:52:39", "upload_time_iso_8601": "2020-03-30T09:52:39.294014Z", "url": "https://files.pythonhosted.org/packages/4a/21/87a8eaa97ac8190fd1b88e3bc67fb0c4673af7630c107e749648165543ed/ahk-0.8.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "816a224bfeb93912b820dde70b06b601", "sha256": "1beccc4f537401d0414b1b79ebb4a4bfedef7fd1684a0586ef25f24b2ba9d6ac"}, "downloads": -1, "filename": "ahk-0.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "816a224bfeb93912b820dde70b06b601", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35702, "upload_time": "2020-03-30T09:52:37", "upload_time_iso_8601": "2020-03-30T09:52:37.781939Z", "url": "https://files.pythonhosted.org/packages/ef/9a/e653fdb2aefec02f7f30dcb0211b5593471a9781e5bf1bdc74aac906c195/ahk-0.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb390d1aa5db3510e6f66923cef8c52a", "sha256": "89635bdd6db987a2d864d66f334508f3a604039b1abaa7b5647fc7786061398a"}, "downloads": -1, "filename": "ahk-0.8.1.tar.gz", "has_sig": false, "md5_digest": "cb390d1aa5db3510e6f66923cef8c52a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28310, "upload_time": "2020-03-30T09:52:39", "upload_time_iso_8601": "2020-03-30T09:52:39.294014Z", "url": "https://files.pythonhosted.org/packages/4a/21/87a8eaa97ac8190fd1b88e3bc67fb0c4673af7630c107e749648165543ed/ahk-0.8.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:22:15 2020"}