{"info": {"author": "Jon Nordby", "author_email": "jononor@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "[![Travis CI Build Status](https://travis-ci.org/emlearn/emlearn.svg?branch=master)](https://travis-ci.org/emlearn/emlearn)\n[![Appveyor Build status](https://ci.appveyor.com/api/projects/status/myb325oc06w89flc?svg=true)](https://ci.appveyor.com/project/emlearn/emlearn)\n[![DOI](https://zenodo.org/badge/125562741.svg)](https://zenodo.org/badge/latestdoi/125562741)\n\n# emlearn\n\nMachine learning for microcontroller and embedded systems.\nTrain in Python, then do inference on any device with a C99 compiler.\n\n## Key features\n\nEmbedded-friendly Inference\n\n* Portable C99 code\n* No libc required\n* No dynamic allocations\n* Support integer/fixed-point math\n* Single header file include\n\nConvenient Training\n\n* Using Python with [scikit-learn](http://scikit-learn.org) or [Keras](https://keras.io/)\n* The generated C classifier is also accessible in Python\n\n[MIT licensed](https://github.com/emlearn/emlearn/blob/master/LICENSE.md)\n\nCan be used as an open source alternative to MATLAB Classification Trees,\nDecision Trees using MATLAB Coder for C/C++ code generation.\n`fitctree`, `fitcensemble`, `TreeBagger`, `ClassificationEnsemble`, `CompactTreeBagger`\n\n## Status\n**Minimally useful**\n\nClassifiers:\n\n* `eml_trees`: sklearn.RandomForestClassifier, sklearn.ExtraTreesClassifier, sklearn.DecisionTreeClassifier\n* `eml_net`: sklearn.MultiLayerPerceptron, Keras.Sequential with fully-connected layers\n* `eml_bayes`: sklearn.GaussianNaiveBayes\n\nFeature extraction:\n\n* `eml_audio`: Melspectrogram\n\nTested running on AVR Atmega, ESP8266, Linux and Windows.\nMac OS should also work fine, please file a bug report if it does not.\n\n## Installing\n\nInstall from PyPI\n\n    pip install --user emlearn\n\n## Usage\n\n1. Train your model in Python\n\n```python\nfrom sklearn.ensemble import RandomForestClassifier\nestimator = RandomForestClassifier(n_estimators=10, max_depth=10)\nestimator.fit(X_train, Y_train)\n...\n```\n\n2. Convert it to C code\n```python\nimport emlearn\ncmodel = emlearn.convert(estimator, method='inline')\ncmodel.save(file='sonar.h')\n```\n\n3. Use the C code\n\n```c\n#include \"sonar.h\"\n\nconst int32_t length = 60;\nint32_t values[length] = { ... };\nconst int32_t predicted_class = sonar_predict(values, length):\n```\n\n\nFor full example code, see [examples/digits.py](https://github.com/emlearn/emlearn/blob/master/examples/digits.py)\n\n## Contributors\n\n```\nJon Nordby\nMark Cooke\n```\n\n## Citations\n\nIf you use `emlearn` in an academic work, please reference it using:\n\n```tex\n@misc{emlearn,\n  author       = {Jon Nordby},\n  title        = {{emlearn: Machine Learning inference engine for \n                   Microcontrollers and Embedded Devices}},\n  month        = mar,\n  year         = 2019,\n  doi          = {10.5281/zenodo.2589394},\n  url          = {https://doi.org/10.5281/zenodo.2589394}\n}\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/emlearn/emlearn", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "emlearn", "package_url": "https://pypi.org/project/emlearn/", "platform": "", "project_url": "https://pypi.org/project/emlearn/", "project_urls": {"Homepage": "https://github.com/emlearn/emlearn"}, "release_url": "https://pypi.org/project/emlearn/0.10.1/", "requires_dist": null, "requires_python": "", "summary": "Machine learning for microcontrollers and embedded systems", "version": "0.10.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/emlearn/emlearn\" rel=\"nofollow\"><img alt=\"Travis CI Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/444c289dad604da84c56389358fe37b059742728/68747470733a2f2f7472617669732d63692e6f72672f656d6c6561726e2f656d6c6561726e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/emlearn/emlearn\" rel=\"nofollow\"><img alt=\"Appveyor Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43b0bc746bcd600468028ef364013f2423629dbb/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6d79623332356f633036773839666c633f7376673d74727565\"></a>\n<a href=\"https://zenodo.org/badge/latestdoi/125562741\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/94b8c20f88479692a75597e615b3148abcbb4db1/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3132353536323734312e737667\"></a></p>\n<h1>emlearn</h1>\n<p>Machine learning for microcontroller and embedded systems.\nTrain in Python, then do inference on any device with a C99 compiler.</p>\n<h2>Key features</h2>\n<p>Embedded-friendly Inference</p>\n<ul>\n<li>Portable C99 code</li>\n<li>No libc required</li>\n<li>No dynamic allocations</li>\n<li>Support integer/fixed-point math</li>\n<li>Single header file include</li>\n</ul>\n<p>Convenient Training</p>\n<ul>\n<li>Using Python with <a href=\"http://scikit-learn.org\" rel=\"nofollow\">scikit-learn</a> or <a href=\"https://keras.io/\" rel=\"nofollow\">Keras</a></li>\n<li>The generated C classifier is also accessible in Python</li>\n</ul>\n<p><a href=\"https://github.com/emlearn/emlearn/blob/master/LICENSE.md\" rel=\"nofollow\">MIT licensed</a></p>\n<p>Can be used as an open source alternative to MATLAB Classification Trees,\nDecision Trees using MATLAB Coder for C/C++ code generation.\n<code>fitctree</code>, <code>fitcensemble</code>, <code>TreeBagger</code>, <code>ClassificationEnsemble</code>, <code>CompactTreeBagger</code></p>\n<h2>Status</h2>\n<p><strong>Minimally useful</strong></p>\n<p>Classifiers:</p>\n<ul>\n<li><code>eml_trees</code>: sklearn.RandomForestClassifier, sklearn.ExtraTreesClassifier, sklearn.DecisionTreeClassifier</li>\n<li><code>eml_net</code>: sklearn.MultiLayerPerceptron, Keras.Sequential with fully-connected layers</li>\n<li><code>eml_bayes</code>: sklearn.GaussianNaiveBayes</li>\n</ul>\n<p>Feature extraction:</p>\n<ul>\n<li><code>eml_audio</code>: Melspectrogram</li>\n</ul>\n<p>Tested running on AVR Atmega, ESP8266, Linux and Windows.\nMac OS should also work fine, please file a bug report if it does not.</p>\n<h2>Installing</h2>\n<p>Install from PyPI</p>\n<pre><code>pip install --user emlearn\n</code></pre>\n<h2>Usage</h2>\n<ol>\n<li>Train your model in Python</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sklearn.ensemble</span> <span class=\"kn\">import</span> <span class=\"n\">RandomForestClassifier</span>\n<span class=\"n\">estimator</span> <span class=\"o\">=</span> <span class=\"n\">RandomForestClassifier</span><span class=\"p\">(</span><span class=\"n\">n_estimators</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">max_depth</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">estimator</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">Y_train</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n</pre>\n<ol>\n<li>Convert it to C code</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">emlearn</span>\n<span class=\"n\">cmodel</span> <span class=\"o\">=</span> <span class=\"n\">emlearn</span><span class=\"o\">.</span><span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"n\">estimator</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'inline'</span><span class=\"p\">)</span>\n<span class=\"n\">cmodel</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">=</span><span class=\"s1\">'sonar.h'</span><span class=\"p\">)</span>\n</pre>\n<ol>\n<li>Use the C code</li>\n</ol>\n<pre><span class=\"cp\">#include</span> <span class=\"cpf\">\"sonar.h\"</span><span class=\"cp\"></span>\n\n<span class=\"k\">const</span> <span class=\"kt\">int32_t</span> <span class=\"n\">length</span> <span class=\"o\">=</span> <span class=\"mi\">60</span><span class=\"p\">;</span>\n<span class=\"kt\">int32_t</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">length</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"p\">...</span> <span class=\"p\">};</span>\n<span class=\"k\">const</span> <span class=\"kt\">int32_t</span> <span class=\"n\">predicted_class</span> <span class=\"o\">=</span> <span class=\"n\">sonar_predict</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"p\">)</span><span class=\"o\">:</span>\n</pre>\n<p>For full example code, see <a href=\"https://github.com/emlearn/emlearn/blob/master/examples/digits.py\" rel=\"nofollow\">examples/digits.py</a></p>\n<h2>Contributors</h2>\n<pre><code>Jon Nordby\nMark Cooke\n</code></pre>\n<h2>Citations</h2>\n<p>If you use <code>emlearn</code> in an academic work, please reference it using:</p>\n<pre>@misc<span class=\"nb\">{</span>emlearn,\n  author       = <span class=\"nb\">{</span>Jon Nordby<span class=\"nb\">}</span>,\n  title        = <span class=\"nb\">{{</span>emlearn: Machine Learning inference engine for \n                   Microcontrollers and Embedded Devices<span class=\"nb\">}}</span>,\n  month        = mar,\n  year         = 2019,\n  doi          = <span class=\"nb\">{</span>10.5281/zenodo.2589394<span class=\"nb\">}</span>,\n  url          = <span class=\"nb\">{</span>https://doi.org/10.5281/zenodo.2589394<span class=\"nb\">}</span>\n<span class=\"nb\">}</span>\n</pre>\n\n          </div>"}, "last_serial": 6187086, "releases": {"0.10.1": [{"comment_text": "", "digests": {"md5": "e157531b9289afc4ca3ed7b014c3d13c", "sha256": "aa0344f188ecf038c1f6356f2aa54c4deb6f1f2c46951f960f9ebcca73459682"}, "downloads": -1, "filename": "emlearn-0.10.1.tar.gz", "has_sig": false, "md5_digest": "e157531b9289afc4ca3ed7b014c3d13c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36023, "upload_time": "2019-11-23T16:27:24", "upload_time_iso_8601": "2019-11-23T16:27:24.481563Z", "url": "https://files.pythonhosted.org/packages/01/18/8f05dbf9240d0d3cee5470456fa5c370858914b9f7885373c506d0cff398/emlearn-0.10.1.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "7ea19e57c8d8cb4c468202df6af4172a", "sha256": "b2552398e776dac4cf20943862de680201f74393fe383611fbef9cd60f013e2f"}, "downloads": -1, "filename": "emlearn-0.3.1.tar.gz", "has_sig": false, "md5_digest": "7ea19e57c8d8cb4c468202df6af4172a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23828, "upload_time": "2018-10-21T00:58:49", "upload_time_iso_8601": "2018-10-21T00:58:49.609447Z", "url": "https://files.pythonhosted.org/packages/de/02/81000da0e679274d4f599a1622fcf8d0b4a6752201f3f80b3c4bec33e239/emlearn-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "48c264880f8c1f1b86c901d8c80ee842", "sha256": "01971b328f551ed510975846014c3b1ad67313ca7e36347b5617ca2c47c7f966"}, "downloads": -1, "filename": "emlearn-0.4.0.tar.gz", "has_sig": false, "md5_digest": "48c264880f8c1f1b86c901d8c80ee842", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24994, "upload_time": "2018-10-25T18:42:10", "upload_time_iso_8601": "2018-10-25T18:42:10.894907Z", "url": "https://files.pythonhosted.org/packages/38/53/c61639dd4f20f47e9755bb9848dccd62bfaaa861d35ad28224bd496c522d/emlearn-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "5890f39039c20f2d16479c625ca0ad10", "sha256": "ff0301a8dd6a48c3645ffd73984cd5d27c4cbbe6a030382e7d30bf371b71fb92"}, "downloads": -1, "filename": "emlearn-0.4.1.tar.gz", "has_sig": false, "md5_digest": "5890f39039c20f2d16479c625ca0ad10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25182, "upload_time": "2018-11-13T15:29:20", "upload_time_iso_8601": "2018-11-13T15:29:20.862239Z", "url": "https://files.pythonhosted.org/packages/2a/c4/44387bd5440111f7dd178414e2e6b9677d947b2ee9d50a96fdd48d6e07a1/emlearn-0.4.1.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "339e05778a0d72f040e871f0d2d51a7e", "sha256": "b1d52ab7186ba83d2618fd14ccd5077e2fee5299d3e6ddca481a60ffc5b3cba9"}, "downloads": -1, "filename": "emlearn-0.5.0.tar.gz", "has_sig": false, "md5_digest": "339e05778a0d72f040e871f0d2d51a7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26301, "upload_time": "2018-11-25T13:17:34", "upload_time_iso_8601": "2018-11-25T13:17:34.295949Z", "url": "https://files.pythonhosted.org/packages/af/ad/90561072202652c4d323967df27f6bd178957cff9e67e9c128e53dd52d66/emlearn-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "e581d8b2bd6f9b68137a966414effe13", "sha256": "dae029bf372728d5184744a73e6226b603d56e0013d730ba9ecc246a19055a0c"}, "downloads": -1, "filename": "emlearn-0.5.1.tar.gz", "has_sig": false, "md5_digest": "e581d8b2bd6f9b68137a966414effe13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26301, "upload_time": "2018-11-25T14:25:39", "upload_time_iso_8601": "2018-11-25T14:25:39.708461Z", "url": "https://files.pythonhosted.org/packages/06/2a/bf89a64e0d042676a11d3c89c585f6e148781a4201b7d5f30dcfb5930e4e/emlearn-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "60ed8ce252bff05488ebe08228cc55f6", "sha256": "d3902144dfec1e1a3207191e1e9cc8443e67b95f5b9d2b5108b92aa40cd8dac6"}, "downloads": -1, "filename": "emlearn-0.6.0.tar.gz", "has_sig": false, "md5_digest": "60ed8ce252bff05488ebe08228cc55f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29528, "upload_time": "2019-02-23T10:53:02", "upload_time_iso_8601": "2019-02-23T10:53:02.838505Z", "url": "https://files.pythonhosted.org/packages/66/7d/90cf491cd4e815c341a83be3c5861eb40896bdd611922d68f9ab485bcb8e/emlearn-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "747c8af115a55c85196356d02fd22947", "sha256": "70e0a24a9da523e8a54069c3052200d40545d9d6bee7953f201c046d3a259dbd"}, "downloads": -1, "filename": "emlearn-0.7.0.tar.gz", "has_sig": false, "md5_digest": "747c8af115a55c85196356d02fd22947", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32936, "upload_time": "2019-03-01T19:37:24", "upload_time_iso_8601": "2019-03-01T19:37:24.707236Z", "url": "https://files.pythonhosted.org/packages/78/6d/2f49cae12159fd960050ff31b58a807ca0eb6bb66f9fc9c4a9bf36f34329/emlearn-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "5b9d956f5e69b4020b4e9814000e978a", "sha256": "af36fe6ee22673d89a4e2161dab53031343c8a78fbf85c9ac7c991564e407225"}, "downloads": -1, "filename": "emlearn-0.8.0.tar.gz", "has_sig": false, "md5_digest": "5b9d956f5e69b4020b4e9814000e978a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34795, "upload_time": "2019-03-02T00:29:07", "upload_time_iso_8601": "2019-03-02T00:29:07.644399Z", "url": "https://files.pythonhosted.org/packages/10/7a/bc4f241a34dfc608d1ec1259b8fe5cc5d588e58a43be06e2475cf66863c3/emlearn-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "d85113a3c697a208f9d11cff86950bf5", "sha256": "283da89ef890e6f1b3f31b66dd4332b89aecb9ff3811f0c80f989ba6ba97296c"}, "downloads": -1, "filename": "emlearn-0.8.1.tar.gz", "has_sig": false, "md5_digest": "d85113a3c697a208f9d11cff86950bf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35040, "upload_time": "2019-03-06T19:03:25", "upload_time_iso_8601": "2019-03-06T19:03:25.024653Z", "url": "https://files.pythonhosted.org/packages/db/f4/4b63b598b9744662857eba9f8486bace31054ad0f81890f8d3b94afc55e0/emlearn-0.8.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e157531b9289afc4ca3ed7b014c3d13c", "sha256": "aa0344f188ecf038c1f6356f2aa54c4deb6f1f2c46951f960f9ebcca73459682"}, "downloads": -1, "filename": "emlearn-0.10.1.tar.gz", "has_sig": false, "md5_digest": "e157531b9289afc4ca3ed7b014c3d13c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36023, "upload_time": "2019-11-23T16:27:24", "upload_time_iso_8601": "2019-11-23T16:27:24.481563Z", "url": "https://files.pythonhosted.org/packages/01/18/8f05dbf9240d0d3cee5470456fa5c370858914b9f7885373c506d0cff398/emlearn-0.10.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:36 2020"}