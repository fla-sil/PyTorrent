{"info": {"author": "Bogdan Kulynych", "author_email": "hello@bogdankulynych.me", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Database", "Topic :: Security :: Cryptography", "Topic :: Software Development :: Libraries :: Python Modules"], "description": ".. image:: https://raw.githubusercontent.com/spring-epfl/hippiepug/master/hippiepug.svg?sanitize=true\n   :width: 100px\n   :alt: Hippiepug\n\n#########\nhippiepug\n#########\n\n|pypi| |build_status| |test_cov| |docs_status| |license|\n\n\nSublinear-lookup blockchains and efficient key-value Merkle trees.\n\nCheck out the `documentation <https://hippiepug.readthedocs.io/>`_.\n\n.. |pypi| image:: https://img.shields.io/pypi/v/hippiepug.svg\n   :target: https://pypi.org/project/hippiepug/\n   :alt: PyPI version\n\n.. |license| image:: https://img.shields.io/pypi/l/hippiepug.svg\n   :target: https://pypi.org/project/hippiepug/\n   :alt: License\n\n.. |docs_status| image:: https://readthedocs.org/projects/hippiepug/badge/?version=latest\n   :target: https://hippiepug.readthedocs.io/?badge=latest\n   :alt: Documentation status\n\n.. |build_status| image:: https://api.travis-ci.org/spring-epfl/hippiepug.svg?branch=master\n   :target: https://travis-ci.org/spring-epfl/hippiepug\n   :alt: Build status\n\n.. |test_cov| image:: https://coveralls.io/repos/github/spring-epfl/hippiepug/badge.svg\n   :target: https://coveralls.io/github/spring-epfl/hippiepug\n   :alt: Test coverage\n\n--------------\n\n.. description-marker-do-not-remove\n\nThis library provides implementations of two cryptographic data structures:\n\n- Blockchains with log(n) sublinear traversal, implemented as high-integrity\n  deterministic skip-lists (skipchains). In this kind of blockchain verifying\n  that block *b* extends block *a* does not require to download and process\n  all blocks between *a* and *b*, but only a logarithmic amount of them.\n- Verifiable dictionary, implemented as a key-value Merkle tree that\n  guarantees unique resolution. A proof of inclusion of a key-value pair in\n  such a tree also proves that there does not exist another value for a given\n  key somewhere else in the tree.\n\nBoth are meant to be used with a content-addressable storage. Each data\nstructure supports logarithmic queries, and logarithmic proofs of inclusion:\n\n+-----------------------+--------------------------+----------------------+----------------+\n|                       | Retrievals per lookup    | Inclusion proof size | Append         |\n+=======================+==========================+======================+================+\n| Skipchain             | O(log(n))                | O(log(n))            | O(1)           |\n+-----------------------+--------------------------+----------------------+----------------+\n| Key-value Merkle tree | O(log(n))                | O(log(n))            | Immutable      |\n+-----------------------+--------------------------+----------------------+----------------+\n\nwith *n* being the size of the dictionary, or the number of blocks in the\ncase of a chain.\n\nThe theoretical details are in the `paper <https://arxiv.org/abs/1707.06279>`_.\n\n.. getting-started-marker-do-not-remove\n\n===============\nGetting started\n===============\n\nYou can install the library from PyPI:\n\n.. code-block::  bash\n\n   pip install hippiepug\n\nThen, the easiest way to run the tests is:\n\n.. code-block::  bash\n\n   python setup.py test\n\nBe sure to check out the `usage guide <https://hippiepug.readthedocs.org/usage.html>`_.\n\n.. acks-marker-do-not-remove\n\n================\nAcknowledgements\n================\n\n* The library is a reimplementation of G. Danezis's `hippiehug`_ (hence\n  the name).\n* This work is funded by the `NEXTLEAP project`_ within the European Union\u2019s\n  Horizon 2020 Framework Programme for Research and Innovation (H2020-ICT-2015,\n  ICT-10-2015) under grant agreement 688722.\n* The hippie pug logo kindly donated by `M. Naiem`_.\n\n.. _hippiehug:  https://github.com/gdanezis/rousseau-chain\n.. _NEXTLEAP project:  https://nextleap.eu\n.. _M. Naiem:  http://mariam.space", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/spring-epfl/hippiepug", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "hippiepug", "package_url": "https://pypi.org/project/hippiepug/", "platform": "", "project_url": "https://pypi.org/project/hippiepug/", "project_urls": {"Homepage": "https://github.com/spring-epfl/hippiepug"}, "release_url": "https://pypi.org/project/hippiepug/0.5.0/", "requires_dist": null, "requires_python": "", "summary": "Sublinear-lookup blockchains and efficient key-value Merkle trees with a flexible storage backend", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"Hippiepug\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7211358f7a3b171aa5f90eddfd1fc7e515a24cf4/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f737072696e672d6570666c2f6869707069657075672f6d61737465722f6869707069657075672e7376673f73616e6974697a653d74727565\" width=\"100px\">\n<div id=\"hippiepug\">\n<h2>hippiepug</h2>\n<p><a href=\"https://pypi.org/project/hippiepug/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b0e86f61f36f7be127324f122a0c83c7a367d2d3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6869707069657075672e737667\"></a> <a href=\"https://travis-ci.org/spring-epfl/hippiepug\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c4b269a5476307a1f855feb76fb2c13aa291a17d/68747470733a2f2f6170692e7472617669732d63692e6f72672f737072696e672d6570666c2f6869707069657075672e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/spring-epfl/hippiepug\" rel=\"nofollow\"><img alt=\"Test coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd06358781f5fa7c3bf4137894d6bb2da3b63a11/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f737072696e672d6570666c2f6869707069657075672f62616467652e737667\"></a> <a href=\"https://hippiepug.readthedocs.io/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/628efefd997c598c1f115ccf98ad2006bce4758f/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6869707069657075672f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://pypi.org/project/hippiepug/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bcae8f2247751a21c6201d7d9112bc4f0078a2b7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6869707069657075672e737667\"></a></p>\n<p>Sublinear-lookup blockchains and efficient key-value Merkle trees.</p>\n<p>Check out the <a href=\"https://hippiepug.readthedocs.io/\" rel=\"nofollow\">documentation</a>.</p>\n<hr class=\"docutils\">\n<p>This library provides implementations of two cryptographic data structures:</p>\n<ul>\n<li>Blockchains with log(n) sublinear traversal, implemented as high-integrity\ndeterministic skip-lists (skipchains). In this kind of blockchain verifying\nthat block <em>b</em> extends block <em>a</em> does not require to download and process\nall blocks between <em>a</em> and <em>b</em>, but only a logarithmic amount of them.</li>\n<li>Verifiable dictionary, implemented as a key-value Merkle tree that\nguarantees unique resolution. A proof of inclusion of a key-value pair in\nsuch a tree also proves that there does not exist another value for a given\nkey somewhere else in the tree.</li>\n</ul>\n<p>Both are meant to be used with a content-addressable storage. Each data\nstructure supports logarithmic queries, and logarithmic proofs of inclusion:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>\u00a0</th>\n<th>Retrievals per lookup</th>\n<th>Inclusion proof size</th>\n<th>Append</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Skipchain</td>\n<td>O(log(n))</td>\n<td>O(log(n))</td>\n<td>O(1)</td>\n</tr>\n<tr><td>Key-value Merkle tree</td>\n<td>O(log(n))</td>\n<td>O(log(n))</td>\n<td>Immutable</td>\n</tr>\n</tbody>\n</table>\n<p>with <em>n</em> being the size of the dictionary, or the number of blocks in the\ncase of a chain.</p>\n<p>The theoretical details are in the <a href=\"https://arxiv.org/abs/1707.06279\" rel=\"nofollow\">paper</a>.</p>\n<div id=\"getting-started\">\n<h3>Getting started</h3>\n<p>You can install the library from PyPI:</p>\n<pre>pip install hippiepug\n</pre>\n<p>Then, the easiest way to run the tests is:</p>\n<pre>python setup.py <span class=\"nb\">test</span>\n</pre>\n<p>Be sure to check out the <a href=\"https://hippiepug.readthedocs.org/usage.html\" rel=\"nofollow\">usage guide</a>.</p>\n</div>\n<div id=\"acknowledgements\">\n<h3>Acknowledgements</h3>\n<ul>\n<li>The library is a reimplementation of G. Danezis\u2019s <a href=\"https://github.com/gdanezis/rousseau-chain\" rel=\"nofollow\">hippiehug</a> (hence\nthe name).</li>\n<li>This work is funded by the <a href=\"https://nextleap.eu\" rel=\"nofollow\">NEXTLEAP project</a> within the European Union\u2019s\nHorizon 2020 Framework Programme for Research and Innovation (H2020-ICT-2015,\nICT-10-2015) under grant agreement 688722.</li>\n<li>The hippie pug logo kindly donated by <a href=\"http://mariam.space\" rel=\"nofollow\">M. Naiem</a>.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5933044, "releases": {"0.4.2": [{"comment_text": "", "digests": {"md5": "77d8e176977465bdfe17dbd129ba3592", "sha256": "64c5956e4bbdb2c42bf517cb6b1cabc6bac6d1262986d9ebd2e7551c4205b9c8"}, "downloads": -1, "filename": "hippiepug-0.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "77d8e176977465bdfe17dbd129ba3592", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12831, "upload_time": "2018-04-28T15:06:26", "upload_time_iso_8601": "2018-04-28T15:06:26.997764Z", "url": "https://files.pythonhosted.org/packages/8e/c5/2a51fa95e8da0f8a9e341bb51682a5100e4e0d4f4866102c30532794ef55/hippiepug-0.4.2-py2.py3-none-any.whl", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "e7237846c94028291d14b3b3432a457d", "sha256": "147173947fb0c98843fd3e02d694045dd0989ec6d02ce5dffd7b8b6bf5e8d7ae"}, "downloads": -1, "filename": "hippiepug-0.5.0.tar.gz", "has_sig": false, "md5_digest": "e7237846c94028291d14b3b3432a457d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 509884, "upload_time": "2019-10-05T20:27:49", "upload_time_iso_8601": "2019-10-05T20:27:49.498451Z", "url": "https://files.pythonhosted.org/packages/49/4d/376be16bb117481b6e078959b5a828e3c0cac25937cf7edb7dee00058c3e/hippiepug-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e7237846c94028291d14b3b3432a457d", "sha256": "147173947fb0c98843fd3e02d694045dd0989ec6d02ce5dffd7b8b6bf5e8d7ae"}, "downloads": -1, "filename": "hippiepug-0.5.0.tar.gz", "has_sig": false, "md5_digest": "e7237846c94028291d14b3b3432a457d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 509884, "upload_time": "2019-10-05T20:27:49", "upload_time_iso_8601": "2019-10-05T20:27:49.498451Z", "url": "https://files.pythonhosted.org/packages/49/4d/376be16bb117481b6e078959b5a828e3c0cac25937cf7edb7dee00058c3e/hippiepug-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:09 2020"}