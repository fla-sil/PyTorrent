{"info": {"author": "Mikhail Knyazev", "author_email": "hellishbot@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Telegram Odesli Bot\n\nSend a song link in any (supported) music streaming service and get back\na message with links in other services.\n\nAdd in Telegram: [@odesli\\_bot](https://t.me/odesli_bot)\n\nIt's useful but still work in progress. Some turbulence is expected.\n\n[![Azure build status](https://dev.azure.com/9dogs/tg-odesli-bot/_apis/build/status/9dogs.tg-odesli-bot?branchName=master)](https://github.com/9dogs/tg-odesli-bot)\n[![Code coverage](https://codecov.io/gh/9dogs/tg-odesli-bot/branch/master/graph/badge.svg?token=3nWZWJ3Bl3)](https://codecov.io/gh/9dogs/tg-odesli-bot)\n[![Docker build](https://img.shields.io/docker/cloud/automated/9dogs/tg-odesli-bot)](https://hub.docker.com/r/9dogs/tg-odesli-bot)\n[![Supported versions](https://img.shields.io/badge/python-3.7%20%7C%203.8-blue)](https://github.com/9dogs/tg-odesli-bot)\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n[![Codestyle: Black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n## What is it for?\n\nYou love to share music with your friends (or be shared with), but you\nsettled in different streaming services? With the help of this bot you\ncan share any song link to the Bot and get all other links back in\nreply.\n\nPowered by the great [Odesli](https://odesli.co/) (former Songlink) service.\n\nYou can message the bot directly, invite it to group chats or use an inline\nmode (type `@odesli_bot <URL>`). In group chats the bot will react only to\nmessages with music streaming links (it will also skip messages marked with\nspecial token `!skip`). You can promote the bot to a group admin and it\nwill remove original message so that the chat remains tidy.\n\nOriginal message           |  Bot's replay\n:-------------------------:|:-------------------------:\n<img alt=\"Original message\" title=\"Original message\" src=\"https://user-images.githubusercontent.com/432235/67324149-0a2b2580-f51c-11e9-8ce2-033cdf2d6628.png\" height=\"200px\">  | <img alt=\"Bot's reply\" title=\"Bot's reply\" src=\"https://user-images.githubusercontent.com/432235/67324159-0dbeac80-f51c-11e9-834a-7d4831a661d8.png\" height=\"200px\">\n\n## Features\n\n- Inline mode\n- Private chat mode\n- Group chat mode\n\n## Supported services\n\nCurrently the following services are supported:\n\n  - Deezer\n  - Google Music\n  - SoundCloud\n  - Yandex Music\n  - Spotify\n  - YouTube Music\n  - YouTube\n  - Apple Music\n\n## Privacy considerations\n\nThe bot have to have access to messages in group chats to operate (that\nis, it operates with disabled [privacy\nmode](https://core.telegram.org/bots#privacy-mode)). It does not store\nnor transfer messages anywhere. However, the only way to be completely\nprivate is to read through source code in this repository **and** run\nyour copy of the bot (see section below). Or simply create a special\ngroup only for music sharing and where no sensitive information will be\nposted.\n\n## Running your own copy\n\n### Prerequisites\n\nYou need a Telegram [bot\ntoken](https://core.telegram.org/bots/api#authorizing-your-bot) to run\nyour copy of the bot. Don't worry, it can be obtained easily. Follow the\n[instructions](https://core.telegram.org/bots#6-botfather) to create a\nnew bot (you can set a name and a username to whatever you want). All you\nneed is a string like `110201543:AAHdqTcvCH1vGWJxfSeofSAs0K5PALDsaw` -\nthis is your new bot token.\n\nAdditionally, disable privacy mode for your bot in a dialog with\n@BotFather: \"Group Privacy\" - \"Turn off\" (that is for the bot to be able\nto read group messages).\n\nBot from this repository will looks for `TG_ODESLI_BOT_TG_API_TOKEN`\nenvironment variable on start, thus you must set it either in shell or\nvia `.env` file:\n\n```console\n$ echo \"<your_token>\" > .env\n$ # OR\n$ TG_ODESLI_BOT_TG_API_TOKEN=<your_token> <bot_run_command (see below)>\n```\n\nOne you obtain a Telegram bot token, you can run bot using either Python\nor Docker.\n\n### Run with Python\n\nClone this repository, [install\npipenv](https://github.com/pypa/pipenv#installation), copy `.env` file\ninto the project's root directory and run the bot (Python 3.7 or 3.8 required):\n\n```console\n$ git clone https://github.com/9dogs/tg-odesli-bot.git\n$ cd tg-odesli-bot\n$ # If you have token in .env file\n$ cp /path/to/.env ./\n$ PYTHONPATH=. pipenv run bot\n$ # If you specify token via shell env var\n$ PYTHONPATH=. TG_ODESLI_BOT_TG_API_TOKEN=<your_token> pipenv run bot\n```\n\n### Run with Docker\n\nSet `TG_ODESLI_BOT_TG_API_TOKEN` environment variable and run the image\n`9dogs/tg-odesli-bot` (in order to use the `.env` file, mount it to\n`/opt/tg-odesli-bot/.env`):\n\n```console\n$ TG_ODESLI_BOT_TG_API_TOKEN=<your_token> docker run 9dogs/tg-odesli-bot\n$ # OR\n$ docker run --rm -it -v /path/to/.env:/opt/tg-odesli-bot/.env 9dogs/tg-odesli-bot\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/9dogs/tg-odesli-bot", "keywords": "", "license": "GPL-3.0-only", "maintainer": "", "maintainer_email": "", "name": "tg-odesli-bot", "package_url": "https://pypi.org/project/tg-odesli-bot/", "platform": "", "project_url": "https://pypi.org/project/tg-odesli-bot/", "project_urls": {"Homepage": "https://github.com/9dogs/tg-odesli-bot", "Repository": "https://github.com/9dogs/tg-odesli-bot"}, "release_url": "https://pypi.org/project/tg-odesli-bot/0.2.3/", "requires_dist": ["aiocache (>=0.11.1,<0.12.0)", "aiogram (>=2.6.1,<3.0.0)", "marshmallow (>=3.5.0,<4.0.0)", "python-dotenv (>=0.12.0,<0.13.0)", "sentry-sdk (>=0.14.2,<0.15.0)", "structlog (>=20.1.0,<21.0.0)", "structlog-sentry (>=1.2.1,<2.0.0)", "aiohttp (>=3.6.2,<4.0.0)", "ujson (>=2.0.2,<3.0.0)"], "requires_python": ">=3.7,<4", "summary": "Telegram Bot to share music with Odesli (former Songlink) service.", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Telegram Odesli Bot</h1>\n<p>Send a song link in any (supported) music streaming service and get back\na message with links in other services.</p>\n<p>Add in Telegram: <a href=\"https://t.me/odesli_bot\" rel=\"nofollow\">@odesli_bot</a></p>\n<p>It's useful but still work in progress. Some turbulence is expected.</p>\n<p><a href=\"https://github.com/9dogs/tg-odesli-bot\" rel=\"nofollow\"><img alt=\"Azure build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91d57d1ae02018918efcbcc271e2785753c2eac6/68747470733a2f2f6465762e617a7572652e636f6d2f39646f67732f74672d6f6465736c692d626f742f5f617069732f6275696c642f7374617475732f39646f67732e74672d6f6465736c692d626f743f6272616e63684e616d653d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/9dogs/tg-odesli-bot\" rel=\"nofollow\"><img alt=\"Code coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6f0b91091e5da553f6f77a02d31aef11f7ff6120/68747470733a2f2f636f6465636f762e696f2f67682f39646f67732f74672d6f6465736c692d626f742f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d336e575a574a33426c33\"></a>\n<a href=\"https://hub.docker.com/r/9dogs/tg-odesli-bot\" rel=\"nofollow\"><img alt=\"Docker build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8bb26396cb798a017acf2ce8d328782a902ed9af/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f636c6f75642f6175746f6d617465642f39646f67732f74672d6f6465736c692d626f74\"></a>\n<a href=\"https://github.com/9dogs/tg-odesli-bot\" rel=\"nofollow\"><img alt=\"Supported versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/14e252f7bf4059f963cd867124588f6efc59be2c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e37253230253743253230332e382d626c7565\"></a>\n<a href=\"https://www.gnu.org/licenses/gpl-3.0\" rel=\"nofollow\"><img alt=\"License: GPL v3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8de17537dd1659a5a076ce547de301e27c839e67/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c76332d626c75652e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Codestyle: Black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<h2>What is it for?</h2>\n<p>You love to share music with your friends (or be shared with), but you\nsettled in different streaming services? With the help of this bot you\ncan share any song link to the Bot and get all other links back in\nreply.</p>\n<p>Powered by the great <a href=\"https://odesli.co/\" rel=\"nofollow\">Odesli</a> (former Songlink) service.</p>\n<p>You can message the bot directly, invite it to group chats or use an inline\nmode (type <code>@odesli_bot &lt;URL&gt;</code>). In group chats the bot will react only to\nmessages with music streaming links (it will also skip messages marked with\nspecial token <code>!skip</code>). You can promote the bot to a group admin and it\nwill remove original message so that the chat remains tidy.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Original message</th>\n<th align=\"center\">Bot's replay</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><img alt=\"Original message\" height=\"200px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/508efbf7602e010276f0bb7d58fbf71b37230b19/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f3433323233352f36373332343134392d30613262323538302d663531632d313165392d386365322d3033336364663264363632382e706e67\"></td>\n<td align=\"center\"><img alt=\"Bot's reply\" height=\"200px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea709f94c5f59a5ae185c6ad6ddf16502976c17f/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f3433323233352f36373332343135392d30646265616338302d663531632d313165392d383334612d3764343833316136363164382e706e67\"></td>\n</tr></tbody></table>\n<h2>Features</h2>\n<ul>\n<li>Inline mode</li>\n<li>Private chat mode</li>\n<li>Group chat mode</li>\n</ul>\n<h2>Supported services</h2>\n<p>Currently the following services are supported:</p>\n<ul>\n<li>Deezer</li>\n<li>Google Music</li>\n<li>SoundCloud</li>\n<li>Yandex Music</li>\n<li>Spotify</li>\n<li>YouTube Music</li>\n<li>YouTube</li>\n<li>Apple Music</li>\n</ul>\n<h2>Privacy considerations</h2>\n<p>The bot have to have access to messages in group chats to operate (that\nis, it operates with disabled <a href=\"https://core.telegram.org/bots#privacy-mode\" rel=\"nofollow\">privacy\nmode</a>). It does not store\nnor transfer messages anywhere. However, the only way to be completely\nprivate is to read through source code in this repository <strong>and</strong> run\nyour copy of the bot (see section below). Or simply create a special\ngroup only for music sharing and where no sensitive information will be\nposted.</p>\n<h2>Running your own copy</h2>\n<h3>Prerequisites</h3>\n<p>You need a Telegram <a href=\"https://core.telegram.org/bots/api#authorizing-your-bot\" rel=\"nofollow\">bot\ntoken</a> to run\nyour copy of the bot. Don't worry, it can be obtained easily. Follow the\n<a href=\"https://core.telegram.org/bots#6-botfather\" rel=\"nofollow\">instructions</a> to create a\nnew bot (you can set a name and a username to whatever you want). All you\nneed is a string like <code>110201543:AAHdqTcvCH1vGWJxfSeofSAs0K5PALDsaw</code> -\nthis is your new bot token.</p>\n<p>Additionally, disable privacy mode for your bot in a dialog with\n@BotFather: \"Group Privacy\" - \"Turn off\" (that is for the bot to be able\nto read group messages).</p>\n<p>Bot from this repository will looks for <code>TG_ODESLI_BOT_TG_API_TOKEN</code>\nenvironment variable on start, thus you must set it either in shell or\nvia <code>.env</code> file:</p>\n<pre><span class=\"gp\">$</span> <span class=\"nb\">echo</span> <span class=\"s2\">\"&lt;your_token&gt;\"</span> &gt; .env\n<span class=\"gp\">$</span> <span class=\"c1\"># OR</span>\n<span class=\"gp\">$</span> <span class=\"nv\">TG_ODESLI_BOT_TG_API_TOKEN</span><span class=\"o\">=</span>&lt;your_token&gt; &lt;bot_run_command <span class=\"o\">(</span>see below<span class=\"o\">)</span>&gt;\n</pre>\n<p>One you obtain a Telegram bot token, you can run bot using either Python\nor Docker.</p>\n<h3>Run with Python</h3>\n<p>Clone this repository, <a href=\"https://github.com/pypa/pipenv#installation\" rel=\"nofollow\">install\npipenv</a>, copy <code>.env</code> file\ninto the project's root directory and run the bot (Python 3.7 or 3.8 required):</p>\n<pre><span class=\"gp\">$</span> git clone https://github.com/9dogs/tg-odesli-bot.git\n<span class=\"gp\">$</span> <span class=\"nb\">cd</span> tg-odesli-bot\n<span class=\"gp\">$</span> <span class=\"c1\"># If you have token in .env file</span>\n<span class=\"gp\">$</span> cp /path/to/.env ./\n<span class=\"gp\">$</span> <span class=\"nv\">PYTHONPATH</span><span class=\"o\">=</span>. pipenv run bot\n<span class=\"gp\">$</span> <span class=\"c1\"># If you specify token via shell env var</span>\n<span class=\"gp\">$</span> <span class=\"nv\">PYTHONPATH</span><span class=\"o\">=</span>. <span class=\"nv\">TG_ODESLI_BOT_TG_API_TOKEN</span><span class=\"o\">=</span>&lt;your_token&gt; pipenv run bot\n</pre>\n<h3>Run with Docker</h3>\n<p>Set <code>TG_ODESLI_BOT_TG_API_TOKEN</code> environment variable and run the image\n<code>9dogs/tg-odesli-bot</code> (in order to use the <code>.env</code> file, mount it to\n<code>/opt/tg-odesli-bot/.env</code>):</p>\n<pre><span class=\"gp\">$</span> <span class=\"nv\">TG_ODESLI_BOT_TG_API_TOKEN</span><span class=\"o\">=</span>&lt;your_token&gt; docker run 9dogs/tg-odesli-bot\n<span class=\"gp\">$</span> <span class=\"c1\"># OR</span>\n<span class=\"gp\">$</span> docker run --rm -it -v /path/to/.env:/opt/tg-odesli-bot/.env 9dogs/tg-odesli-bot\n</pre>\n\n          </div>"}, "last_serial": 6861602, "releases": {"0.2.3": [{"comment_text": "", "digests": {"md5": "f314fec4416fbaacb082a85e579bb21b", "sha256": "ee68106e1afd9d64da78ee8e300c01363fa19c225b38e2ddc7fc4641cf7b94d9"}, "downloads": -1, "filename": "tg_odesli_bot-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f314fec4416fbaacb082a85e579bb21b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4", "size": 25742, "upload_time": "2020-03-22T19:55:39", "upload_time_iso_8601": "2020-03-22T19:55:39.737055Z", "url": "https://files.pythonhosted.org/packages/5d/a7/e7f44d5ff15f950a812b6a98cbb5ba9c4c096b8f08a3014b6fb88ee7a8d4/tg_odesli_bot-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "28bbacf5b6f58d5a6a30b04dea2cfb38", "sha256": "74465cd8cb3f81ab51663ac1844bb975c3c1dde1608cad0e3e0c2213e6ed56e9"}, "downloads": -1, "filename": "tg_odesli_bot-0.2.3.tar.gz", "has_sig": false, "md5_digest": "28bbacf5b6f58d5a6a30b04dea2cfb38", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4", "size": 26867, "upload_time": "2020-03-22T19:55:41", "upload_time_iso_8601": "2020-03-22T19:55:41.902813Z", "url": "https://files.pythonhosted.org/packages/01/5c/17170fdf625e1ea81d51ab27526a330b82df20bdda822352f2e89eef2c90/tg_odesli_bot-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f314fec4416fbaacb082a85e579bb21b", "sha256": "ee68106e1afd9d64da78ee8e300c01363fa19c225b38e2ddc7fc4641cf7b94d9"}, "downloads": -1, "filename": "tg_odesli_bot-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f314fec4416fbaacb082a85e579bb21b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4", "size": 25742, "upload_time": "2020-03-22T19:55:39", "upload_time_iso_8601": "2020-03-22T19:55:39.737055Z", "url": "https://files.pythonhosted.org/packages/5d/a7/e7f44d5ff15f950a812b6a98cbb5ba9c4c096b8f08a3014b6fb88ee7a8d4/tg_odesli_bot-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "28bbacf5b6f58d5a6a30b04dea2cfb38", "sha256": "74465cd8cb3f81ab51663ac1844bb975c3c1dde1608cad0e3e0c2213e6ed56e9"}, "downloads": -1, "filename": "tg_odesli_bot-0.2.3.tar.gz", "has_sig": false, "md5_digest": "28bbacf5b6f58d5a6a30b04dea2cfb38", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4", "size": 26867, "upload_time": "2020-03-22T19:55:41", "upload_time_iso_8601": "2020-03-22T19:55:41.902813Z", "url": "https://files.pythonhosted.org/packages/01/5c/17170fdf625e1ea81d51ab27526a330b82df20bdda822352f2e89eef2c90/tg_odesli_bot-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:13 2020"}