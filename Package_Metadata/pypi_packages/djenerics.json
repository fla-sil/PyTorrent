{"info": {"author": "Nico Di Rocco", "author_email": "dirocco.nico@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "djenerics\n=========\n\n  A collection of Django 1.5+ and Django Rest Framework 3.0+ utilities\n\n\ninstallation\n------------\n\nYou can use pip to install the package::\n\n    $ pip install djenerics\n\n\nThen add it to the list of installed apps::\n\n    INSTALLED_APPS = (\n        'djenerics'\n    )\n\n\nmodel mixins\n------------\n\nThe following mixins are available for your model classes:\n\nTimestampable\n    Provides `created_at` and `updated_at` fields.\n\nOwnerable\n    Provides a `owner` field which references `settings.AUTH_USER_MODEL`\n\n\nview mixins\n-----------\n\nThe following mixins are available for your view classes:\n\nSelectRelatable\n    Provides a class variable `select_related` that allows you to provide a\n    tuple or list of related models to perform a select_related on.\n\n\ndjango-rest-framework filter backend\n------------------------------------\n\nA custom filter backend that provides a generic filter query string parameter.\n\nConvert a search query into a dictionary.\n\nA search query like this one::\n\n    party: stakker is akker category:\"hiha hoi\"\n\nWill be converted to a python dict::\n\n    {\n        'category': 'hiha hoi',\n        'party': None,\n        'search': 'stakker is akker'\n    }\n\nIt uses a regular expression to split every token on the `:`\nseparator instead of using the string.split() function. This is\nimportant to distinguish between the following use cases::\n\n    - 'party:'        => {'party': None}\n    - 'party:tester'  => {'party': 'tester'}\n    - 'party: tester' => {'search': 'party: tester'}\n\n\ndjango-rest-framework serializer mixins\n---------------------------------------\n\nThe following mixins are available for your serializer classes:\n\nProjectable\n    Gives your api consumers the ability to control what fields are included in\n    the api response using a configurable query string parameter (defaults to\n    `_fields`).\n\n    E.g. a `GET /resources?_fields=name,description,count` will only return the\n    specified 3 fields of the `resource`.\n\nOwnerable\n    Limit the related field options to only those records owned by the current\n    logged in user.", "description_content_type": null, "docs_url": null, "download_url": "http://github.com/nrocco/djenerics", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://nrocco.github.io/", "keywords": null, "license": "Copyright (c) 2013, Nico Di Rocco.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.", "maintainer": null, "maintainer_email": null, "name": "djenerics", "package_url": "https://pypi.org/project/djenerics/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/djenerics/", "project_urls": {"Download": "http://github.com/nrocco/djenerics", "Homepage": "http://nrocco.github.io/"}, "release_url": "https://pypi.org/project/djenerics/1.2.0/", "requires_dist": null, "requires_python": null, "summary": "A collection of Django 1.5+ and Django Rest Framework 3.0+ utilities", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <blockquote>\nA collection of Django 1.5+ and Django Rest Framework 3.0+ utilities</blockquote>\n<div id=\"installation\">\n<h2>installation</h2>\n<p>You can use pip to install the package:</p>\n<pre>$ pip install djenerics\n</pre>\n<p>Then add it to the list of installed apps:</p>\n<pre>INSTALLED_APPS = (\n    'djenerics'\n)\n</pre>\n</div>\n<div id=\"model-mixins\">\n<h2>model mixins</h2>\n<p>The following mixins are available for your model classes:</p>\n<dl>\n<dt>Timestampable</dt>\n<dd>Provides <cite>created_at</cite> and <cite>updated_at</cite> fields.</dd>\n<dt>Ownerable</dt>\n<dd>Provides a <cite>owner</cite> field which references <cite>settings.AUTH_USER_MODEL</cite></dd>\n</dl>\n</div>\n<div id=\"view-mixins\">\n<h2>view mixins</h2>\n<p>The following mixins are available for your view classes:</p>\n<dl>\n<dt>SelectRelatable</dt>\n<dd>Provides a class variable <cite>select_related</cite> that allows you to provide a\ntuple or list of related models to perform a select_related on.</dd>\n</dl>\n</div>\n<div id=\"django-rest-framework-filter-backend\">\n<h2>django-rest-framework filter backend</h2>\n<p>A custom filter backend that provides a generic filter query string parameter.</p>\n<p>Convert a search query into a dictionary.</p>\n<p>A search query like this one:</p>\n<pre>party: stakker is akker category:\"hiha hoi\"\n</pre>\n<p>Will be converted to a python dict:</p>\n<pre>{\n    'category': 'hiha hoi',\n    'party': None,\n    'search': 'stakker is akker'\n}\n</pre>\n<p>It uses a regular expression to split every token on the <cite>:</cite>\nseparator instead of using the string.split() function. This is\nimportant to distinguish between the following use cases:</p>\n<pre>- 'party:'        =&gt; {'party': None}\n- 'party:tester'  =&gt; {'party': 'tester'}\n- 'party: tester' =&gt; {'search': 'party: tester'}\n</pre>\n</div>\n<div id=\"django-rest-framework-serializer-mixins\">\n<h2>django-rest-framework serializer mixins</h2>\n<p>The following mixins are available for your serializer classes:</p>\n<dl>\n<dt>Projectable</dt>\n<dd><p>Gives your api consumers the ability to control what fields are included in\nthe api response using a configurable query string parameter (defaults to\n<cite>_fields</cite>).</p>\n<p>E.g. a <cite>GET /resources?_fields=name,description,count</cite> will only return the\nspecified 3 fields of the <cite>resource</cite>.</p>\n</dd>\n<dt>Ownerable</dt>\n<dd>Limit the related field options to only those records owned by the current\nlogged in user.</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 2417331, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "41f41421cae0eb2b3a60292d9caf5541", "sha256": "03eca5eac01668994cbd370b3e07985dd791bacde2784066a183bc1deed8b8a3"}, "downloads": -1, "filename": "djenerics-1.0.0.tar.gz", "has_sig": false, "md5_digest": "41f41421cae0eb2b3a60292d9caf5541", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4956, "upload_time": "2015-03-03T20:10:41", "upload_time_iso_8601": "2015-03-03T20:10:41.554844Z", "url": "https://files.pythonhosted.org/packages/49/9a/231d08f60a77d6587f36819717aefe650358c50addcf02c1d64b10da7267/djenerics-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4d2da81398414e2d6629a8b4a5bdd0ab", "sha256": "74872a2a89a6a90913f09922fb00e757807a17950458ef045e3b0e7320bd4a79"}, "downloads": -1, "filename": "djenerics-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4d2da81398414e2d6629a8b4a5bdd0ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5065, "upload_time": "2015-03-07T18:49:15", "upload_time_iso_8601": "2015-03-07T18:49:15.451158Z", "url": "https://files.pythonhosted.org/packages/16/12/78957b2fcfb797901dd1ce85816640341ffa0e64a7c45a4914a028efbb6d/djenerics-1.0.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "db0da654f695c7907b817d842aa55c6f", "sha256": "665b3bb2d849f93094e562d94e4ebed4178319a5be8e546838da92da73e1a38e"}, "downloads": -1, "filename": "djenerics-1.2.0.tar.gz", "has_sig": false, "md5_digest": "db0da654f695c7907b817d842aa55c6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5250, "upload_time": "2016-10-22T19:18:55", "upload_time_iso_8601": "2016-10-22T19:18:55.228819Z", "url": "https://files.pythonhosted.org/packages/02/7c/437a6fc2271abb0929cfdeaa72fc8ab7b4897c8e6729d3f38ae61804fddc/djenerics-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "db0da654f695c7907b817d842aa55c6f", "sha256": "665b3bb2d849f93094e562d94e4ebed4178319a5be8e546838da92da73e1a38e"}, "downloads": -1, "filename": "djenerics-1.2.0.tar.gz", "has_sig": false, "md5_digest": "db0da654f695c7907b817d842aa55c6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5250, "upload_time": "2016-10-22T19:18:55", "upload_time_iso_8601": "2016-10-22T19:18:55.228819Z", "url": "https://files.pythonhosted.org/packages/02/7c/437a6fc2271abb0929cfdeaa72fc8ab7b4897c8e6729d3f38ae61804fddc/djenerics-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:36 2020"}