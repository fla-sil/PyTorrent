{"info": {"author": "Michal Wachowski", "author_email": "wachowski.michal@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "===========\nStrict hint\n===========\n\n**Strict hint** provides a way to do runtime type checks based based on type hint annotations introduced by PEP-484_.\n\n\nUsage is quite simple, just add type annotations to a function or method and decorate it with `@strict`:\n\n.. code-block:: python\n\n    from strict_hint import strict\n\n    @strict\n    def add(a: int: b: int) -> int:\n        return a+b\n\nIf non `int` will be passed, a `TypeError` will be raised.\nSame will happen if function would return different type than expected.\n\nType checks support (for arguments and returned values):\n - all primitive type hints: `int`, `float`, `list`, `tuple`, `set`, `dict`, etc.,\n - standard interpreter types eg.: `FunctionType` and other,\n - tuples of types, eg: `(int, float)` will allow for both types to be accepted,\n - default values, also of different type than annotation: eg. `a: int = None`\n - used defined classes and class inheritance\n \n .. _PEP-484: https://www.python.org/dev/peps/pep-0484/\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/potfur/strict-hint/archive/0.3.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/potfur/strict-hint", "keywords": "type hint", "license": "", "maintainer": "", "maintainer_email": "", "name": "strict-hint", "package_url": "https://pypi.org/project/strict-hint/", "platform": "", "project_url": "https://pypi.org/project/strict-hint/", "project_urls": {"Download": "https://github.com/potfur/strict-hint/archive/0.3.0.tar.gz", "Homepage": "https://github.com/potfur/strict-hint"}, "release_url": "https://pypi.org/project/strict-hint/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "Strict type runtime checks for arguments and return types.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Strict hint</strong> provides a way to do runtime type checks based based on type hint annotations introduced by <a href=\"https://www.python.org/dev/peps/pep-0484/\" rel=\"nofollow\">PEP-484</a>.</p>\n<p>Usage is quite simple, just add type annotations to a function or method and decorate it with <cite>@strict</cite>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">strict_hint</span> <span class=\"kn\">import</span> <span class=\"n\">strict</span>\n\n<span class=\"nd\">@strict</span>\n<span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">:</span> <span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span>\n</pre>\n<p>If non <cite>int</cite> will be passed, a <cite>TypeError</cite> will be raised.\nSame will happen if function would return different type than expected.</p>\n<dl>\n<dt>Type checks support (for arguments and returned values):</dt>\n<dd><ul>\n<li>all primitive type hints: <cite>int</cite>, <cite>float</cite>, <cite>list</cite>, <cite>tuple</cite>, <cite>set</cite>, <cite>dict</cite>, etc.,</li>\n<li>standard interpreter types eg.: <cite>FunctionType</cite> and other,</li>\n<li>tuples of types, eg: <cite>(int, float)</cite> will allow for both types to be accepted,</li>\n<li>default values, also of different type than annotation: eg. <cite>a: int = None</cite></li>\n<li>used defined classes and class inheritance</li>\n</ul>\n</dd>\n</dl>\n\n          </div>"}, "last_serial": 3221784, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "59d7b858e721b18810cc5aab209b5645", "sha256": "ec8d60ee1c66f46f6a6b86f39ca7d19724358d536fa0e1b804949198bcd911f6"}, "downloads": -1, "filename": "strict-hint-0.2.1.tar.gz", "has_sig": false, "md5_digest": "59d7b858e721b18810cc5aab209b5645", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2244, "upload_time": "2017-03-01T11:32:37", "upload_time_iso_8601": "2017-03-01T11:32:37.456880Z", "url": "https://files.pythonhosted.org/packages/36/56/2f135e1988a2d0d09f75dc8b7a3b005931c230af9b2d5bf9e67a0bb756a2/strict-hint-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "7655fc74ee7aeeba5c413af205e7264c", "sha256": "8d9eb6b121c36979ac2a03691ba8df42c500e845b9bef20a67e8f0a3dce6a2d7"}, "downloads": -1, "filename": "strict-hint-0.2.2.tar.gz", "has_sig": false, "md5_digest": "7655fc74ee7aeeba5c413af205e7264c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2448, "upload_time": "2017-03-24T16:21:36", "upload_time_iso_8601": "2017-03-24T16:21:36.003521Z", "url": "https://files.pythonhosted.org/packages/8e/3b/80998a7d2820d7860a612b83262ab9e26ef06577709e105f4644ff41c691/strict-hint-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "9b8b409449b38ca4b1a751a67bed2c1f", "sha256": "4e0a7e49ea809e29ec3a7db2d11a77c9db6f85006557cf059a25ac2e42f0902a"}, "downloads": -1, "filename": "strict-hint-0.2.3.tar.gz", "has_sig": false, "md5_digest": "9b8b409449b38ca4b1a751a67bed2c1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2480, "upload_time": "2017-04-19T20:11:44", "upload_time_iso_8601": "2017-04-19T20:11:44.332021Z", "url": "https://files.pythonhosted.org/packages/b3/be/ca7f02d2ecb784d1fce0082944b207c4a641d496a2ea86ca59977f6938fa/strict-hint-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "f8b059c19cdb1060154ff5dc967b56fe", "sha256": "80a26f3137ff5711137c8c23ee4f374cf5c7b1756351f75100d5ba92344de31f"}, "downloads": -1, "filename": "strict-hint-0.2.4.tar.gz", "has_sig": false, "md5_digest": "f8b059c19cdb1060154ff5dc967b56fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4961, "upload_time": "2017-05-21T12:17:52", "upload_time_iso_8601": "2017-05-21T12:17:52.980752Z", "url": "https://files.pythonhosted.org/packages/5c/54/edbbd16dd10394210fab2067fb599b9f72025af752033e87d1635ecbc061/strict-hint-0.2.4.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "8f7f9de39cf76b24f723f835ba90ddcd", "sha256": "e26f6067514eb383a59b28627a592f36afb7a2ff19d8364fedcb15075d8096a0"}, "downloads": -1, "filename": "strict-hint-0.3.0.tar.gz", "has_sig": false, "md5_digest": "8f7f9de39cf76b24f723f835ba90ddcd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2843, "upload_time": "2017-10-03T12:09:50", "upload_time_iso_8601": "2017-10-03T12:09:50.670557Z", "url": "https://files.pythonhosted.org/packages/f0/55/b07238c96085d15acc9b91b52b7e4a641b9d5cc0384aef2da6bdb36c3930/strict-hint-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8f7f9de39cf76b24f723f835ba90ddcd", "sha256": "e26f6067514eb383a59b28627a592f36afb7a2ff19d8364fedcb15075d8096a0"}, "downloads": -1, "filename": "strict-hint-0.3.0.tar.gz", "has_sig": false, "md5_digest": "8f7f9de39cf76b24f723f835ba90ddcd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2843, "upload_time": "2017-10-03T12:09:50", "upload_time_iso_8601": "2017-10-03T12:09:50.670557Z", "url": "https://files.pythonhosted.org/packages/f0/55/b07238c96085d15acc9b91b52b7e4a641b9d5cc0384aef2da6bdb36c3930/strict-hint-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:14 2020"}