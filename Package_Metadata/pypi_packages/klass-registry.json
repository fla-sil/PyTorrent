{"info": {"author": "Igor Quintanilha", "author_email": "igormq@poli.ufrj.br", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": ".. image:: https://travis-ci.org/igormq/klass-registry.svg?branch=master\n   :target: https://travis-ci.org/igormq/klass-registry\n.. image:: https://readthedocs.org/projects/klass-registry/badge/?version=master\n   :target: https://klass-registry.readthedocs.io/\n\n\n=============\nClassRegistry\n=============\n\nAt the intersection of the Registry and Factory patterns lies the\n``ClassRegistry``:\n\n- Define global factories that generate new class instances based on\n  configurable keys.\n- Seamlessly create powerful service registries.\n- Integrate with setuptools's ``entry_points`` system to make your registries\n  infinitely extensible by 3rd-party libraries!\n- And more!\n\n\nGetting Started\n---------------\n\nCreate a registry using the ``klass_registry.ClassRegistry`` class, then\ndecorate any classes that you wish to register with its ``register`` method:\n\n.. code-block:: python\n\n   from klass_registry import ClassRegistry\n\n   pokedex = ClassRegistry()\n\n   @pokedex.register('fire')\n   class Charizard(Pokemon):\n     ...\n\n   @pokedex.register('grass')\n   class Bulbasaur(Pokemon):\n     ...\n\n   @pokedex.register('water')\n   class Squirtle(Pokemon):\n     ...\n\nTo create a class instance from a registry, use the subscript operator:\n\n.. code-block:: python\n\n   # Charizard, I choose you!\n   fighter1 = pokedex['fire']\n\n   # CHARIZARD fainted!\n   # How come my rival always picks the type that my pok\u00e9mon is weak against??\n   fighter2 = pokedex['grass']\n\n\nAdvanced Usage\n~~~~~~~~~~~~~~\n\nThere's a whole lot more you can do with ClassRegistry, including:\n\n- Provide args and kwargs to new class instances.\n- Automatically register non-abstract classes.\n- Integrate with setuptools's ``entry_points`` system so that 3rd-party\n  libraries can add their own classes to your registries.\n- Wrap your registry in an instance cache to create a service registry.\n- And more!\n\nFor more advanced usage, check out the documentation on `ReadTheDocs`_!\n\n\nRequirements\n------------\n\nClassRegistry is compatible with Python versions 3.7, 3.6, 3.5 and 2.7.\n\n\nInstallation\n------------\n\nInstall the latest stable version via pip::\n\n   pip install klass-registry\n\n\nRunning Unit Tests\n------------------\nTo run unit tests after installing from source::\n\n  python setup.py test\n\nThis project is also compatible with `tox`_, which will run the unit tests in\ndifferent virtual environments (one for each supported version of Python).\n\nTo run the unit tests, it is recommended that you use the `detox`_ library.\ndetox speeds up the tests by running them in parallel.\n\nInstall the package with the ``test-runner`` extra to set up the necessary\ndependencies, and then you can run the tests with the ``tox`` command::\n\n  pip install -e .[test-runner]\n  tox -v\n\n.. tip::\n   To run tests for multiple Python versions in parallel::\n\n    # Python 3.7 only\n    tox -p all\n\n    # Python 3.6 or earlier\n    pip install detox\n    detox\n\nDocumentation\n-------------\nDocumentation is available on `ReadTheDocs`_.\n\nIf you are installing from source (see above), you can also build the\ndocumentation locally:\n\n#. Install extra dependencies (you only have to do this once)::\n\n      pip install '.[docs-builder]'\n\n#. Switch to the ``docs`` directory::\n\n      cd docs\n\n#. Build the documentation::\n\n      make html\n\n\n.. _ReadTheDocs: https://klass-registry.readthedocs.io/\n.. _detox: https://pypi.python.org/pypi/detox\n.. _tox: https://tox.readthedocs.io/\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://klass-registry.readthedocs.io/", "keywords": "registry pattern", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "klass-registry", "package_url": "https://pypi.org/project/klass-registry/", "platform": "", "project_url": "https://pypi.org/project/klass-registry/", "project_urls": {"Homepage": "https://klass-registry.readthedocs.io/"}, "release_url": "https://pypi.org/project/klass-registry/2.2.2/", "requires_dist": ["six", "typing ; python_version < \"3.0\"", "sphinx ; extra == 'docs-builder'", "sphinx-rtd-theme ; extra == 'docs-builder'", "detox ; extra == 'test-runner'"], "requires_python": "", "summary": "Factory+Registry pattern for Python classes.", "version": "2.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/igormq/klass-registry\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/igormq/klass-registry.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b8c1593ca1524852ec8a3989a0bff4dfb485210/68747470733a2f2f7472617669732d63692e6f72672f69676f726d712f6b6c6173732d72656769737472792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://klass-registry.readthedocs.io/\" rel=\"nofollow\"><img alt=\"https://readthedocs.org/projects/klass-registry/badge/?version=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0df7608d97dead6c5954e4a75ec229692b2218eb/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6b6c6173732d72656769737472792f62616467652f3f76657273696f6e3d6d6173746572\"></a>\n<div id=\"classregistry\">\n<h2>ClassRegistry</h2>\n<p>At the intersection of the Registry and Factory patterns lies the\n<tt>ClassRegistry</tt>:</p>\n<ul>\n<li>Define global factories that generate new class instances based on\nconfigurable keys.</li>\n<li>Seamlessly create powerful service registries.</li>\n<li>Integrate with setuptools\u2019s <tt>entry_points</tt> system to make your registries\ninfinitely extensible by 3rd-party libraries!</li>\n<li>And more!</li>\n</ul>\n<div id=\"getting-started\">\n<h3>Getting Started</h3>\n<p>Create a registry using the <tt>klass_registry.ClassRegistry</tt> class, then\ndecorate any classes that you wish to register with its <tt>register</tt> method:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">klass_registry</span> <span class=\"kn\">import</span> <span class=\"n\">ClassRegistry</span>\n\n<span class=\"n\">pokedex</span> <span class=\"o\">=</span> <span class=\"n\">ClassRegistry</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@pokedex</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"s1\">'fire'</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">Charizard</span><span class=\"p\">(</span><span class=\"n\">Pokemon</span><span class=\"p\">):</span>\n  <span class=\"o\">...</span>\n\n<span class=\"nd\">@pokedex</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"s1\">'grass'</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">Bulbasaur</span><span class=\"p\">(</span><span class=\"n\">Pokemon</span><span class=\"p\">):</span>\n  <span class=\"o\">...</span>\n\n<span class=\"nd\">@pokedex</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"s1\">'water'</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">Squirtle</span><span class=\"p\">(</span><span class=\"n\">Pokemon</span><span class=\"p\">):</span>\n  <span class=\"o\">...</span>\n</pre>\n<p>To create a class instance from a registry, use the subscript operator:</p>\n<pre><span class=\"c1\"># Charizard, I choose you!</span>\n<span class=\"n\">fighter1</span> <span class=\"o\">=</span> <span class=\"n\">pokedex</span><span class=\"p\">[</span><span class=\"s1\">'fire'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># CHARIZARD fainted!</span>\n<span class=\"c1\"># How come my rival always picks the type that my pok\u00e9mon is weak against??</span>\n<span class=\"n\">fighter2</span> <span class=\"o\">=</span> <span class=\"n\">pokedex</span><span class=\"p\">[</span><span class=\"s1\">'grass'</span><span class=\"p\">]</span>\n</pre>\n<div id=\"advanced-usage\">\n<h4>Advanced Usage</h4>\n<p>There\u2019s a whole lot more you can do with ClassRegistry, including:</p>\n<ul>\n<li>Provide args and kwargs to new class instances.</li>\n<li>Automatically register non-abstract classes.</li>\n<li>Integrate with setuptools\u2019s <tt>entry_points</tt> system so that 3rd-party\nlibraries can add their own classes to your registries.</li>\n<li>Wrap your registry in an instance cache to create a service registry.</li>\n<li>And more!</li>\n</ul>\n<p>For more advanced usage, check out the documentation on <a href=\"https://klass-registry.readthedocs.io/\" rel=\"nofollow\">ReadTheDocs</a>!</p>\n</div>\n</div>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p>ClassRegistry is compatible with Python versions 3.7, 3.6, 3.5 and 2.7.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Install the latest stable version via pip:</p>\n<pre>pip install klass-registry\n</pre>\n</div>\n<div id=\"running-unit-tests\">\n<h3>Running Unit Tests</h3>\n<p>To run unit tests after installing from source:</p>\n<pre>python setup.py test\n</pre>\n<p>This project is also compatible with <a href=\"https://tox.readthedocs.io/\" rel=\"nofollow\">tox</a>, which will run the unit tests in\ndifferent virtual environments (one for each supported version of Python).</p>\n<p>To run the unit tests, it is recommended that you use the <a href=\"https://pypi.python.org/pypi/detox\" rel=\"nofollow\">detox</a> library.\ndetox speeds up the tests by running them in parallel.</p>\n<p>Install the package with the <tt><span class=\"pre\">test-runner</span></tt> extra to set up the necessary\ndependencies, and then you can run the tests with the <tt>tox</tt> command:</p>\n<pre>pip install -e .[test-runner]\ntox -v\n</pre>\n<div>\n<p>Tip</p>\n<p>To run tests for multiple Python versions in parallel:</p>\n<pre># Python 3.7 only\ntox -p all\n\n# Python 3.6 or earlier\npip install detox\ndetox\n</pre>\n</div>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>Documentation is available on <a href=\"https://klass-registry.readthedocs.io/\" rel=\"nofollow\">ReadTheDocs</a>.</p>\n<p>If you are installing from source (see above), you can also build the\ndocumentation locally:</p>\n<ol>\n<li><p>Install extra dependencies (you only have to do this once):</p>\n<pre>pip install '.[docs-builder]'\n</pre>\n</li>\n<li><p>Switch to the <tt>docs</tt> directory:</p>\n<pre>cd docs\n</pre>\n</li>\n<li><p>Build the documentation:</p>\n<pre>make html\n</pre>\n</li>\n</ol>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5178453, "releases": {"2.2.2": [{"comment_text": "", "digests": {"md5": "5daece33b60f09c4720a9ff1426ce4b7", "sha256": "0e60278235bffcc26f60ab4d0560cc48e5cc7be6c55e6d4559f60e4773d2d52b"}, "downloads": -1, "filename": "klass_registry-2.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5daece33b60f09c4720a9ff1426ce4b7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12252, "upload_time": "2019-04-23T17:17:31", "upload_time_iso_8601": "2019-04-23T17:17:31.563646Z", "url": "https://files.pythonhosted.org/packages/e3/5b/9fdda3ebbb592e54c947613fd50a422fbb32e7fef7ae1062d35270e906a9/klass_registry-2.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e211690ff314c437b6377e0ea6984559", "sha256": "45749c3f914ccd76a2fe2cad18c87958e6d7b20e1fcfdc2c93ec8ac348ee4137"}, "downloads": -1, "filename": "klass-registry-2.2.2.tar.gz", "has_sig": false, "md5_digest": "e211690ff314c437b6377e0ea6984559", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16431, "upload_time": "2019-04-23T17:17:33", "upload_time_iso_8601": "2019-04-23T17:17:33.289098Z", "url": "https://files.pythonhosted.org/packages/b5/e0/629c5fb71b434941a442267b1b6728a4c0eeb444390721b2ffd1c7c6d187/klass-registry-2.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5daece33b60f09c4720a9ff1426ce4b7", "sha256": "0e60278235bffcc26f60ab4d0560cc48e5cc7be6c55e6d4559f60e4773d2d52b"}, "downloads": -1, "filename": "klass_registry-2.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5daece33b60f09c4720a9ff1426ce4b7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12252, "upload_time": "2019-04-23T17:17:31", "upload_time_iso_8601": "2019-04-23T17:17:31.563646Z", "url": "https://files.pythonhosted.org/packages/e3/5b/9fdda3ebbb592e54c947613fd50a422fbb32e7fef7ae1062d35270e906a9/klass_registry-2.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e211690ff314c437b6377e0ea6984559", "sha256": "45749c3f914ccd76a2fe2cad18c87958e6d7b20e1fcfdc2c93ec8ac348ee4137"}, "downloads": -1, "filename": "klass-registry-2.2.2.tar.gz", "has_sig": false, "md5_digest": "e211690ff314c437b6377e0ea6984559", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16431, "upload_time": "2019-04-23T17:17:33", "upload_time_iso_8601": "2019-04-23T17:17:33.289098Z", "url": "https://files.pythonhosted.org/packages/b5/e0/629c5fb71b434941a442267b1b6728a4c0eeb444390721b2ffd1c7c6d187/klass-registry-2.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:23 2020"}