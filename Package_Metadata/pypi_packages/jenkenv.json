{"info": {"author": "jamesrobertalbert@gmail.com", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python :: 3"], "description": "# jenkenv\n\nVirtualenvs for jenkinsfile-runner\n\n```sh\nUsage:\n  jenkenv list\n  jenkenv run <jenkinsfile> [<version>]\n  jenkenv run-jenkins [<version>]\n  jenkenv use (local|global) <version>\n  jenkenv clean [<version>]\n  jenkenv install (-l|<version>)\n  jenkenv uninstall <version>\n  jenkenv (-h | --help)\n  jenkenv --version\n\nOptions:\n  -h --help     Show this screen.\n  --version     Show version.\n```\n\n## Overview\n\nThis tool uses a pre-built release of [kohsuke/jenkinsfile-runner](https://github.com/kohsuke/jenkinsfile-runner). It provides a set of commands that make it easy to test your code with Jenkins without jumping through the usual hoops. You can either set your preferred Jenkins version local to your project, or globally as a default. To get started:\n\n```\npip install jenkenv\n```\n\nOnce installed, if you don't know the version you want to use, run: `jenkenv install -l` or:\n\n```sh\njenkenv install 2.121.3\njenkenv use local 2.121.3\n```\n\nNow you'll want to install your plugins. Run: `jenkenv run-jenkins` and wait for the administrator password, go to [http://localhost:8080](http://localhost:8080), install your plugins, and then stop Jenkins.\n\nIf we have a `Jenkinsfile` like:\n\n```groovy\npipeline {\n    agent any\n    stages {\n        stage('Build') {\n            steps {\n                echo 'Hello world!'\n            }\n        }\n    }\n}\n```\n\nWe can expect the output of `jenkenv run Jenkinsfile` to be:\n\n```sh\nStarted\nRunning in Durability level: PERFORMANCE_OPTIMIZED\n[Pipeline] node\nRunning on Jenkins in /var/folders/j6/j58qnzlj5j146_0q55660q300000gn/T/jenkinsTests.tmp/jenkins4609194858906807076test/workspace/job\n[Pipeline] {\n[Pipeline] stage\n[Pipeline] { (Declarative: Checkout SCM)\n[Pipeline] checkout\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] stage\n[Pipeline] { (Build)\n[Pipeline] echo\nHello world!\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] }\n[Pipeline] // node\n[Pipeline] End of Pipeline\nFinished: SUCCESS\n```\n\nAll output pipes to stdout and `jenkenv` will exit with the build's status.\n\n## Reference\n\n\n`jenkenv list`\n\nList installed versions. => denotes the local version, * denotes global\n\n`jenkenv run <jenkinsfile> [<version>]`\n\n- `<jenkinsfile>`: path to target Jenkinsfile\n- `[<version>]`: optional version if local or global version is set; required otherwise.\n\nRun the given Jenkinsfile through jenkinsfile-runner.\n\n`jenkenv run-jenkins [<version>]`\n\n- `[<version>]`: optional version if local or global version is set; required otherwise.\n\nRun Jenkins serving at [http://localhost:8080](http://localhost:8080). You'll want to do this and install your desired plugins first before running `jenkenv run ...`.\n\n`jenkenv use (local|global) <version>`\n\n- `(local|global)`: If local is set, `.jenkins_version` will be created in your current directory. If global is set, `~/.jenkins_version` will be created and used when `./.jenkins_version` isn't present.\n- `[<version>]`: optional version if local or global version is set; required otherwise.\n\nSelect the version of Jenkins you want to use.\n\n`jenkenv clean [<version>]`\n\n- `[<version>]`: optional version if local or global version is set; required otherwise.\n\nClears out `~/.jenkenv/<version>/jenkins_home`. Useful when you want to restart the plugin process without re-installing.\n\n`jenkenv install (-l|<version>)`\n\n- `-l`: list install-able versions.\n- `<version>`: version to install\n\nEither list all install-able versions or install the specified version.\n\n`jenkenv uninstall <version>`\n\n- `<version>`: version to uninstall\n\nUninstall the specified version.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jamesalbert/jenkenv", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "jenkenv", "package_url": "https://pypi.org/project/jenkenv/", "platform": "", "project_url": "https://pypi.org/project/jenkenv/", "project_urls": {"Homepage": "https://github.com/jamesalbert/jenkenv"}, "release_url": "https://pypi.org/project/jenkenv/0.0.3/", "requires_dist": ["docopt"], "requires_python": "", "summary": "", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # jenkenv<br><br>Virtualenvs for jenkinsfile-runner<br><br>```sh<br>Usage:<br>  jenkenv list<br>  jenkenv run &lt;jenkinsfile&gt; [&lt;version&gt;]<br>  jenkenv run-jenkins [&lt;version&gt;]<br>  jenkenv use (local|global) &lt;version&gt;<br>  jenkenv clean [&lt;version&gt;]<br>  jenkenv install (-l|&lt;version&gt;)<br>  jenkenv uninstall &lt;version&gt;<br>  jenkenv (-h | --help)<br>  jenkenv --version<br><br>Options:<br>  -h --help     Show this screen.<br>  --version     Show version.<br>```<br><br>## Overview<br><br>This tool uses a pre-built release of [kohsuke/jenkinsfile-runner](https://github.com/kohsuke/jenkinsfile-runner). It provides a set of commands that make it easy to test your code with Jenkins without jumping through the usual hoops. You can either set your preferred Jenkins version local to your project, or globally as a default. To get started:<br><br>```<br>pip install jenkenv<br>```<br><br>Once installed, if you don't know the version you want to use, run: `jenkenv install -l` or:<br><br>```sh<br>jenkenv install 2.121.3<br>jenkenv use local 2.121.3<br>```<br><br>Now you'll want to install your plugins. Run: `jenkenv run-jenkins` and wait for the administrator password, go to [http://localhost:8080](http://localhost:8080), install your plugins, and then stop Jenkins.<br><br>If we have a `Jenkinsfile` like:<br><br>```groovy<br>pipeline {<br>    agent any<br>    stages {<br>        stage('Build') {<br>            steps {<br>                echo 'Hello world!'<br>            }<br>        }<br>    }<br>}<br>```<br><br>We can expect the output of `jenkenv run Jenkinsfile` to be:<br><br>```sh<br>Started<br>Running in Durability level: PERFORMANCE_OPTIMIZED<br>[Pipeline] node<br>Running on Jenkins in /var/folders/j6/j58qnzlj5j146_0q55660q300000gn/T/jenkinsTests.tmp/jenkins4609194858906807076test/workspace/job<br>[Pipeline] {<br>[Pipeline] stage<br>[Pipeline] { (Declarative: Checkout SCM)<br>[Pipeline] checkout<br>[Pipeline] }<br>[Pipeline] // stage<br>[Pipeline] stage<br>[Pipeline] { (Build)<br>[Pipeline] echo<br>Hello world!<br>[Pipeline] }<br>[Pipeline] // stage<br>[Pipeline] }<br>[Pipeline] // node<br>[Pipeline] End of Pipeline<br>Finished: SUCCESS<br>```<br><br>All output pipes to stdout and `jenkenv` will exit with the build's status.<br><br>## Reference<br><br><br>`jenkenv list`<br><br>List installed versions. =&gt; denotes the local version, * denotes global<br><br>`jenkenv run &lt;jenkinsfile&gt; [&lt;version&gt;]`<br><br>- `&lt;jenkinsfile&gt;`: path to target Jenkinsfile<br>- `[&lt;version&gt;]`: optional version if local or global version is set; required otherwise.<br><br>Run the given Jenkinsfile through jenkinsfile-runner.<br><br>`jenkenv run-jenkins [&lt;version&gt;]`<br><br>- `[&lt;version&gt;]`: optional version if local or global version is set; required otherwise.<br><br>Run Jenkins serving at [http://localhost:8080](http://localhost:8080). You'll want to do this and install your desired plugins first before running `jenkenv run ...`.<br><br>`jenkenv use (local|global) &lt;version&gt;`<br><br>- `(local|global)`: If local is set, `.jenkins_version` will be created in your current directory. If global is set, `~/.jenkins_version` will be created and used when `./.jenkins_version` isn't present.<br>- `[&lt;version&gt;]`: optional version if local or global version is set; required otherwise.<br><br>Select the version of Jenkins you want to use.<br><br>`jenkenv clean [&lt;version&gt;]`<br><br>- `[&lt;version&gt;]`: optional version if local or global version is set; required otherwise.<br><br>Clears out `~/.jenkenv/&lt;version&gt;/jenkins_home`. Useful when you want to restart the plugin process without re-installing.<br><br>`jenkenv install (-l|&lt;version&gt;)`<br><br>- `-l`: list install-able versions.<br>- `&lt;version&gt;`: version to install<br><br>Either list all install-able versions or install the specified version.<br><br>`jenkenv uninstall &lt;version&gt;`<br><br>- `&lt;version&gt;`: version to uninstall<br><br>Uninstall the specified version.<br><br><br>\n          </div>"}, "last_serial": 4491422, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "41595305df51f73ee24cb9a99b1ee473", "sha256": "736dc483bb599114d52e16608e403080d3333927eb080beba624755684af7c74"}, "downloads": -1, "filename": "jenkenv-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "41595305df51f73ee24cb9a99b1ee473", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3149, "upload_time": "2018-08-30T19:26:15", "upload_time_iso_8601": "2018-08-30T19:26:15.963272Z", "url": "https://files.pythonhosted.org/packages/4e/c6/eb4813cd886c4718535669fdc6073559ac5d3caa3c9c2a56c0cfa896bfe3/jenkenv-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1f2b29d04c52608f9535332231847e3", "sha256": "44ebb38de9746385ef68c769cc8b45d89bcf2bd02b39b04c12e59ecd08484616"}, "downloads": -1, "filename": "jenkenv-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f1f2b29d04c52608f9535332231847e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3055, "upload_time": "2018-08-30T19:26:17", "upload_time_iso_8601": "2018-08-30T19:26:17.050316Z", "url": "https://files.pythonhosted.org/packages/93/d3/14a12d6c2f9225db896d1f134423ca47a8667ae3f67e66311e73077a65e6/jenkenv-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "119f198fa19aecc8fa849e25b07fcc50", "sha256": "9782d512a3701e2a9cc5522fc4544f1b15dcfee4cec81a605bad4a34a1415d59"}, "downloads": -1, "filename": "jenkenv-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "119f198fa19aecc8fa849e25b07fcc50", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 127274169, "upload_time": "2018-08-31T20:12:44", "upload_time_iso_8601": "2018-08-31T20:12:44.407605Z", "url": "https://files.pythonhosted.org/packages/01/64/b90c02042c53a7058432cdcfaa7dd7d138c3ed7ca9fdab8f3d893faa7a9a/jenkenv-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "072e581de025a191fbf95c4a201a4ad8", "sha256": "1c1b782f1520ee443b17995ab4c52a060b4833b050fa552b39b5b805b3ea2e8b"}, "downloads": -1, "filename": "jenkenv-0.0.2.tar.gz", "has_sig": false, "md5_digest": "072e581de025a191fbf95c4a201a4ad8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 127217696, "upload_time": "2018-08-31T20:13:20", "upload_time_iso_8601": "2018-08-31T20:13:20.798563Z", "url": "https://files.pythonhosted.org/packages/ac/dd/3f330709f97541ede861d833b03da26261561401fd906ad9c9a76dde86d5/jenkenv-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "0eb44a136be483990c3b62c8b6336a93", "sha256": "2d02b2a540cb951d7d0e411b6764d9ae07bf4405ab771cca96093e9e0301844b"}, "downloads": -1, "filename": "jenkenv-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0eb44a136be483990c3b62c8b6336a93", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 128251230, "upload_time": "2018-11-15T21:50:57", "upload_time_iso_8601": "2018-11-15T21:50:57.256495Z", "url": "https://files.pythonhosted.org/packages/ff/7a/cdcc8ac92604a1f3f2994a7cc541abe73b18fd1fa39d6cca24ab32b53102/jenkenv-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c422a213ca262e6a6e18c79d169d274", "sha256": "c1640f82fc355b84f9e6ee3fd47b13ea11bebd53b1db2ab579e32b6ce83d9f12"}, "downloads": -1, "filename": "jenkenv-0.0.3.tar.gz", "has_sig": false, "md5_digest": "1c422a213ca262e6a6e18c79d169d274", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 128184815, "upload_time": "2018-11-15T21:51:33", "upload_time_iso_8601": "2018-11-15T21:51:33.486173Z", "url": "https://files.pythonhosted.org/packages/bf/2d/39c1722cd2a67756e702f9f35b29868303c121e1597a7b96c2d58367def2/jenkenv-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0eb44a136be483990c3b62c8b6336a93", "sha256": "2d02b2a540cb951d7d0e411b6764d9ae07bf4405ab771cca96093e9e0301844b"}, "downloads": -1, "filename": "jenkenv-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0eb44a136be483990c3b62c8b6336a93", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 128251230, "upload_time": "2018-11-15T21:50:57", "upload_time_iso_8601": "2018-11-15T21:50:57.256495Z", "url": "https://files.pythonhosted.org/packages/ff/7a/cdcc8ac92604a1f3f2994a7cc541abe73b18fd1fa39d6cca24ab32b53102/jenkenv-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c422a213ca262e6a6e18c79d169d274", "sha256": "c1640f82fc355b84f9e6ee3fd47b13ea11bebd53b1db2ab579e32b6ce83d9f12"}, "downloads": -1, "filename": "jenkenv-0.0.3.tar.gz", "has_sig": false, "md5_digest": "1c422a213ca262e6a6e18c79d169d274", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 128184815, "upload_time": "2018-11-15T21:51:33", "upload_time_iso_8601": "2018-11-15T21:51:33.486173Z", "url": "https://files.pythonhosted.org/packages/bf/2d/39c1722cd2a67756e702f9f35b29868303c121e1597a7b96c2d58367def2/jenkenv-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:53 2020"}