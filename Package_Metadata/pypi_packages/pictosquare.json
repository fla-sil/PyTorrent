{"info": {"author": "Mani Kumar", "author_email": "hi@manikumar.in", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "===========\nPicToSquare\n===========\n\n\n.. image:: https://img.shields.io/pypi/v/pictosquare.svg\n        :target: https://pypi.python.org/pypi/pictosquare\n\n.. image:: https://img.shields.io/travis/hithismani/pictosquare.svg\n        :target: https://travis-ci.org/hithismani/pictosquare\n\n.. image:: https://readthedocs.org/projects/pictosquare/badge/?version=latest\n        :target: https://pictosquare.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n\npicToSquare is an experimental script that makes use of Pillow to enter and make every picture in a directory \u201cInstagram Ready\u201d by framing \u2018em up into a little square. \n\nThis script was inspired by how there are multiple free/paid apps to accomplish this on the mobile app store, but none for desktop. Hope this made your social media routine a little less annoying!\n\n*Tested On Windows 10 + Python 3.6 + PILLOW 6.0* \n\nTerminal Sample:\n\n.. image:: https://i.imgur.com/An933hI.png\n\nOutput Sample: \n\n.. image:: https://i.imgur.com/SS5Vnp3.png\n\n\n* Free software: MIT license\n\nAdvantages: \n-----------\n\n- Does not compress or crop images. \n- Relatively quick. \n- Does not rename images. \n- Optionally set a background colour to either \u201cwhite\u201d or \u201cblack\u201d. (Defaults to white if not set) \n- All pictures are resized into a \u201cpicToSquare\u201d directory \n\nHow It Works: \n-------------\n\n1. pip install pictosquare\n2. run\n           \n    pictosquare -dir *Your Image Directory Path*\n\n3. visit \u201cpicToSquare\u201d folder within the directory specified for your images. \n\n\nRunning Examples: \n-----------------\n\n\n1. Basic Script Usage: \n\n\tpictosquare -dir C://UserName/FolderToBeResized\n\n2. Custom Colours: \n\n\tpictosquare -dir C://UserName/FolderToBeResized -color black\n\n\nPoints To Remember: \n-------------------\n\n\n- This script requires a **folder** and does not work on single files. *(If you require this to work on a single file, just place it in a folder. Easy!)* \n- The script will ignore all files that are not .jpeg, or .jpg. With .png files it would attempt to do an Image.alpha_compose before squaring up the image. \n- This script tends to break on RGBA (Transparent) images. Some transparent images get \u2018squared\u2019 into an image with a transparent background instead of the colour specified. It\u2019s recommended that you convert the .png image to a\u00a0.jpeg to fix this. \n- Every image in your \u201cpicToSquare\u201d folder will be overwritten if the filenames match. The script would not clean\u00a0the Resized folder before each run. (But you can add that functionality yourself, if need be) \n- The script depends on Args (for the command line prompts) and PIL/Pillow. \n\nExperimental:\n-------------\n\n- Watermark each image. \n    - Save a .png image with the name \u201cwatermark.png\u201d in the same directory you want the script to look up. The script would automatically watermark each picture with the watermarked image.\n    - Optionally set the image size of the watermark by setting its percentage at the end of the filename.\n        \n        Example \u201cwatermark**20**.png\u201d implying watermark that\u2019s sized 20% of the image. \n    - End the filename with an optional placement. \n        Positions Include: \n    \t- \u201c-bl\u201d - bottom left (default) \n    \t- \u201c-br\u201d - bottom right \n    \t- \u201c-tl\u201d - top left \n    \t- \u201c-tr\u201d - top right \n    \t    \n            Example: Save file with \u201cwatermark **-bl**.png\u201d (without spaces!) \n- Set a custom background color for specific images. \n  - Add a \u201c#hexcode\u201d at the end of the filename from your folder and watch the script add that to the specific image. Usage: \u201cimagename **#eeeeeeee**.png\u201d (without spaces!) \n- Set a custom background that is neither \u201cblack\u201d not \u201cwhite\u201d for all images. \n  - Add \u201c-color **hex-code**\u201d to the end of your request. \n  - Example: \n    \n    pictosquare -dir C://UserName/FolderToBeResized -color ***cccccc*** \n\n- Pick Dominant Colour For Every Image: `Powered by ColorThief <https://github.com/fengsp/color-thief-py>`_\n\n    - Set colour to \"thief\".\n    - Run: \n        pictosquare  -dir C://UserName/FolderToBeResized -color thief\n\nFuture Plans \n------------\n\n- Probably turn this into an installable package. (Done!)\n- Add a friendly GUI to perform the same actions. \n\nCredits\n-------\n\nFeatures & Depedencies:\n\n- `PIL(low) <https://pillow.readthedocs.io/en/stable/>`_\n- `Colorthief by @fengsp <https://github.com/fengsp/color-thief-py>`_\n- `Image Credits (For Previews Attached) @Unsplash <htps://unsplash.com>`_\n\nCode Help: \n\n- `Image Processing in Python with Pillow <https://auth0.com/blog/image-processing-in-python-with-pillow/>`_\n- `As Mackay <https://stackoverflow.com/users/7891828/as-mackay>`_ & `Joseph <https://stackoverflow.com/users/9994064/joseph>`_  snippet on this `stack overflow post   <https://stackoverflow.com/questions/44231209/resize-rectangular-image-to-square-keeping-ratio-and-fill-background-with-black/44231784>`_\n\nThis package was easily adapted into a pip installable package using Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\nChangelog\n----------\n- 30/10/2019\n    - Made script PIP Installable.\n    - Fixed many PNG file squaring issues.\n\n- 28/05/2019\n    - Added colorThief Support.\n    - Code hygiene changes.\n- 18/05/2019\n    - Added progressbar + tqdm dependency.\n    - Fixed FolderFetcher.py to reflect the above stated dependency.\n    - Fixed ReadMe file typos.\n\n\n=======\nHistory\n=======\n\n0.1.0 (2019-10-30)\n------------------\n\n* First release on PyPI.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hithismani/pictosquare", "keywords": "pictosquare", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "pictosquare", "package_url": "https://pypi.org/project/pictosquare/", "platform": "", "project_url": "https://pypi.org/project/pictosquare/", "project_urls": {"Homepage": "https://github.com/hithismani/pictosquare"}, "release_url": "https://pypi.org/project/pictosquare/0.1.1/", "requires_dist": null, "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "summary": "picToSquare (Pic To Square) is an experimental python script that 'squares up' every picture in a directory  to be Instagram ready.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pictosquare\">\n<h2>PicToSquare</h2>\n<a href=\"https://pypi.python.org/pypi/pictosquare\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/pictosquare.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/14e638b15928135f4b9fe5f474f8a3dce56c7cee/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f706963746f7371756172652e737667\"></a>\n<a href=\"https://travis-ci.org/hithismani/pictosquare\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/hithismani/pictosquare.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a6b0efb9df19a612eb8b75c1cef7896381f3262f/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6869746869736d616e692f706963746f7371756172652e737667\"></a>\n<a href=\"https://pictosquare.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ee7302693c33c1f09c80898d0070d2f500c025e1/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f706963746f7371756172652f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<p>picToSquare is an experimental script that makes use of Pillow to enter and make every picture in a directory \u201cInstagram Ready\u201d by framing \u2018em up into a little square.</p>\n<p>This script was inspired by how there are multiple free/paid apps to accomplish this on the mobile app store, but none for desktop. Hope this made your social media routine a little less annoying!</p>\n<p><em>Tested On Windows 10 + Python 3.6 + PILLOW 6.0</em></p>\n<p>Terminal Sample:</p>\n<img alt=\"https://i.imgur.com/An933hI.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a328b8ab4131fba1e4dbb1ece6ccbe5e74863337/68747470733a2f2f692e696d6775722e636f6d2f416e39333368492e706e67\">\n<p>Output Sample:</p>\n<img alt=\"https://i.imgur.com/SS5Vnp3.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d2bb7ff24b46bf85edc8c018f8cf92be2a2171e8/68747470733a2f2f692e696d6775722e636f6d2f535335566e70332e706e67\">\n<ul>\n<li>Free software: MIT license</li>\n</ul>\n<div id=\"advantages\">\n<h3>Advantages:</h3>\n<ul>\n<li>Does not compress or crop images.</li>\n<li>Relatively quick.</li>\n<li>Does not rename images.</li>\n<li>Optionally set a background colour to either \u201cwhite\u201d or \u201cblack\u201d. (Defaults to white if not set)</li>\n<li>All pictures are resized into a \u201cpicToSquare\u201d directory</li>\n</ul>\n</div>\n<div id=\"how-it-works\">\n<h3>How It Works:</h3>\n<ol>\n<li><p>pip install pictosquare</p>\n</li>\n<li><p>run</p>\n<blockquote>\n<p>pictosquare -dir <em>Your Image Directory Path</em></p>\n</blockquote>\n</li>\n<li><p>visit \u201cpicToSquare\u201d folder within the directory specified for your images.</p>\n</li>\n</ol>\n</div>\n<div id=\"running-examples\">\n<h3>Running Examples:</h3>\n<ol>\n<li><p>Basic Script Usage:</p>\n<blockquote>\n<p>pictosquare -dir C://UserName/FolderToBeResized</p>\n</blockquote>\n</li>\n<li><p>Custom Colours:</p>\n<blockquote>\n<p>pictosquare -dir C://UserName/FolderToBeResized -color black</p>\n</blockquote>\n</li>\n</ol>\n</div>\n<div id=\"points-to-remember\">\n<h3>Points To Remember:</h3>\n<ul>\n<li>This script requires a <strong>folder</strong> and does not work on single files. <em>(If you require this to work on a single file, just place it in a folder. Easy!)</em></li>\n<li>The script will ignore all files that are not .jpeg, or .jpg. With .png files it would attempt to do an Image.alpha_compose before squaring up the image.</li>\n<li>This script tends to break on RGBA (Transparent) images. Some transparent images get \u2018squared\u2019 into an image with a transparent background instead of the colour specified. It\u2019s recommended that you convert the .png image to a\u00a0.jpeg to fix this.</li>\n<li>Every image in your \u201cpicToSquare\u201d folder will be overwritten if the filenames match. The script would not clean\u00a0the Resized folder before each run. (But you can add that functionality yourself, if need be)</li>\n<li>The script depends on Args (for the command line prompts) and PIL/Pillow.</li>\n</ul>\n</div>\n<div id=\"experimental\">\n<h3>Experimental:</h3>\n<ul>\n<li><dl>\n<dt>Watermark each image.</dt>\n<dd><ul>\n<li><p>Save a .png image with the name \u201cwatermark.png\u201d in the same directory you want the script to look up. The script would automatically watermark each picture with the watermarked image.</p>\n</li>\n<li><p>Optionally set the image size of the watermark by setting its percentage at the end of the filename.</p>\n<blockquote>\n<p>Example \u201cwatermark**20**.png\u201d implying watermark that\u2019s sized 20% of the image.</p>\n</blockquote>\n</li>\n<li><dl>\n<dt>End the filename with an optional placement.</dt>\n<dd><p>Positions Include:\n- \u201c-bl\u201d - bottom left (default)\n- \u201c-br\u201d - bottom right\n- \u201c-tl\u201d - top left\n- \u201c-tr\u201d - top right</p>\n<blockquote>\n<p>Example: Save file with \u201cwatermark <strong>-bl</strong>.png\u201d (without spaces!)</p>\n</blockquote>\n</dd>\n</dl>\n</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><p>Set a custom background color for specific images.\n- Add a \u201c#hexcode\u201d at the end of the filename from your folder and watch the script add that to the specific image. Usage: \u201cimagename <strong>#eeeeeeee</strong>.png\u201d (without spaces!)</p>\n</li>\n<li><p>Set a custom background that is neither \u201cblack\u201d not \u201cwhite\u201d for all images.\n- Add \u201c-color <strong>hex-code</strong>\u201d to the end of your request.\n- Example:</p>\n<blockquote>\n<p>pictosquare -dir C://UserName/FolderToBeResized -color <strong>*cccccc*</strong></p>\n</blockquote>\n</li>\n<li><p>Pick Dominant Colour For Every Image: <a href=\"https://github.com/fengsp/color-thief-py\" rel=\"nofollow\">Powered by ColorThief</a></p>\n<blockquote>\n<ul>\n<li>Set colour to \u201cthief\u201d.</li>\n<li><dl>\n<dt>Run:</dt>\n<dd>pictosquare  -dir C://UserName/FolderToBeResized -color thief</dd>\n</dl>\n</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"future-plans\">\n<h3>Future Plans</h3>\n<ul>\n<li>Probably turn this into an installable package. (Done!)</li>\n<li>Add a friendly GUI to perform the same actions.</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>Features &amp; Depedencies:</p>\n<ul>\n<li><a href=\"https://pillow.readthedocs.io/en/stable/\" rel=\"nofollow\">PIL(low)</a></li>\n<li><a href=\"https://github.com/fengsp/color-thief-py\" rel=\"nofollow\">Colorthief by @fengsp</a></li>\n<li><a>Image Credits (For Previews Attached) @Unsplash</a></li>\n</ul>\n<p>Code Help:</p>\n<ul>\n<li><a href=\"https://auth0.com/blog/image-processing-in-python-with-pillow/\" rel=\"nofollow\">Image Processing in Python with Pillow</a></li>\n<li><a href=\"https://stackoverflow.com/users/7891828/as-mackay\" rel=\"nofollow\">As Mackay</a> &amp; <a href=\"https://stackoverflow.com/users/9994064/joseph\" rel=\"nofollow\">Joseph</a>  snippet on this <a href=\"https://stackoverflow.com/questions/44231209/resize-rectangular-image-to-square-keeping-ratio-and-fill-background-with-black/44231784\" rel=\"nofollow\">stack overflow post</a></li>\n</ul>\n<p>This package was easily adapted into a pip installable package using <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n</div>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n<ul>\n<li><dl>\n<dt>30/10/2019</dt>\n<dd><ul>\n<li>Made script PIP Installable.</li>\n<li>Fixed many PNG file squaring issues.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>28/05/2019</dt>\n<dd><ul>\n<li>Added colorThief Support.</li>\n<li>Code hygiene changes.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>18/05/2019</dt>\n<dd><ul>\n<li>Added progressbar + tqdm dependency.</li>\n<li>Fixed FolderFetcher.py to reflect the above stated dependency.</li>\n<li>Fixed ReadMe file typos.</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1.0 (2019-10-30)</span></h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6052642, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2bf036d9d640d0bcc4479e34ee6b0fb8", "sha256": "525c9acc389654742b11d284f8e6846a9c55706ba60fd06c5928ee87e1bc3c29"}, "downloads": -1, "filename": "pictosquare-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2bf036d9d640d0bcc4479e34ee6b0fb8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 19309, "upload_time": "2019-10-30T07:03:15", "upload_time_iso_8601": "2019-10-30T07:03:15.393579Z", "url": "https://files.pythonhosted.org/packages/6d/ec/9b823f0ebd67a02ab69e0b9b1c97e94b2022714e21ec6e9c1fe9afb9a4b3/pictosquare-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "03b4e334b6315ad4a7cb3f1387418b52", "sha256": "1661b0d75fcd7e2dc72117c11ef0982c7cff81ed74337631c881f0338ef2da58"}, "downloads": -1, "filename": "pictosquare-0.1.1.tar.gz", "has_sig": false, "md5_digest": "03b4e334b6315ad4a7cb3f1387418b52", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 19434, "upload_time": "2019-10-30T13:38:10", "upload_time_iso_8601": "2019-10-30T13:38:10.743931Z", "url": "https://files.pythonhosted.org/packages/58/48/1ac58105fc5d2e0529bd453cf8cf37b73b3413aa9ef79e4a4d84e2f3333a/pictosquare-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "03b4e334b6315ad4a7cb3f1387418b52", "sha256": "1661b0d75fcd7e2dc72117c11ef0982c7cff81ed74337631c881f0338ef2da58"}, "downloads": -1, "filename": "pictosquare-0.1.1.tar.gz", "has_sig": false, "md5_digest": "03b4e334b6315ad4a7cb3f1387418b52", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 19434, "upload_time": "2019-10-30T13:38:10", "upload_time_iso_8601": "2019-10-30T13:38:10.743931Z", "url": "https://files.pythonhosted.org/packages/58/48/1ac58105fc5d2e0529bd453cf8cf37b73b3413aa9ef79e4a4d84e2f3333a/pictosquare-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:59 2020"}