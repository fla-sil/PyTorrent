{"info": {"author": "jojoduquartier", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Database :: Database Engines/Servers"], "description": "# dsdbmanager\nData Science DataBase Manager\n\n[![Travis](https://travis-ci.com/jojoduquartier/dsdbmanager.svg?branch=master)](\n    https://travis-ci.com/jojoduquartier/dsdbmanager\n)\n[![Documentation Status](https://readthedocs.org/projects/dsdbmanager/badge/?version=latest)](\nhttps://dsdbmanager.readthedocs.io/en/latest/?badge=latest\n)\n[![codecov](https://codecov.io/gh/jojoduquartier/dsdbmanager/branch/master/graph/badge.svg)](\n    https://codecov.io/gh/jojoduquartier/dsdbmanager\n)\n[![Upload Python Package](https://github.com/jojoduquartier/dsdbmanager/workflows/Upload%20Python%20Package/badge.svg?branch=master)](\nhttps://pypi.org/project/dsdbmanager/\n)\n\n# Installation\n```python\npip install dsdbmanager\n```\n\n# ReadMe\n\nDo you love SqlAlchemy? Do you usually have to connect to the same databases all the time for some quick data processing and/or exploration?\n\n<ul>\n<li>You might have database address and/or credentials hardcoded in a script</li>\n<li>You might be using environment variables to store credentials or host/ports etc</li>\n</ul> \n\nWhen dealing with simple data processing (especially with different databases with relatively small tables), it does not always make sense\nto have the something like\n```python\nimport sqlalchemy\nimport cx_Oracle\n\n```\n\nin the header of each script. There are many ways of dealing with these issues but this project tries to provide an example\nfor the new data scientist. This project is not meant to be used in production; the goal is to speed up exploration by eliminating \nsome frequent database connection activities.\n\n* The examples below are based on a locally hosted [MySql](https://www.mysql.com/products/workbench/) database\n\nConsider the following database **dstest** with tables **category** and **user**. The database host, schema and/or port can be\nstored in a json file that the package uses to quickly create sqlalchemy engines. \n\n![mysql workbench](https://github.com/jojoduquartier/dsdbmanager/blob/master/source/imgs/workbench.png)\n\n## Adding databases\nAfter (or before) installation of the package, set an envionment variable `DSDBMANAGER_CONFIG` pointing to a folder where the configuration files can be stored.\nIf the environment variable is not available, `pathlib.Path.home() / \".dsdbmanager\"` is used by default.\n\nUse entry point command `dsdbmanager add-database` directly in a command shell to add a database.\n\nOr any python interactive interactive shell:\n\n![add database](https://github.com/jojoduquartier/dsdbmanager/blob/master/source/imgs/add_db.gif) \n\nThis will add the database directly to the `.host.json` file automatically created at first `import`.\n\n![host json](https://github.com/jojoduquartier/dsdbmanager/blob/master/source/imgs/host.png)\n\n## Connecting\n\n#### Manual Connection \nOnce a database is added, it is easy to connect to it using one of the following modules (each corresponding to a sql flavor/dialect) \nto establish a connection. This approach means that the user only needs to provide the username and password to create the engines.\n\n<ul>\n<li>oracle_</li>\n<li>mssql_</li>\n<li>mysql_</li>\n<li>teradata_</li>\n</ul>\n\n![mysql connect](https://github.com/jojoduquartier/dsdbmanager/blob/master/source/imgs/manualconnection.png)\n\n#### Connecting With Shortcut\nIn order to save encrypted credentials for reuse, the project comes with a shortcut for each flavor/dialect\n\n![shortcut](https://github.com/jojoduquartier/dsdbmanager/blob/master/source/imgs/using_shortcut.png)\n\nThis approach creates an object that has the name of each database as a method. The image above shows the only mysql database `dstest` as a property.\nThis property is actually a function which must be called to establish connection.\n\n![connect](https://github.com/jojoduquartier/dsdbmanager/blob/master/source/imgs/first_time.png) \n\nBecause the connection is only made when the function is called, all the databases available are just properties until the user needs them.\nWhen a connection is attempted for the first time, the user is prompted for the username and password. The credentials are used to create the\nsqlalchemy engine which is used to test for successful connection. If the connection fails, the credentials are discarded and an error is raised. If\nthe connection succeeds, the credentials are encrypted and stored in a file like this:\n\n```json\n{\n    \"mysql\": {\n        \"dstest\": {\n            \"username\": \"gAAAAABdYe_Le1rX3W5y23GlLf0dtrVVOWJhaPGVk2_CbIfpcqb_0dzu5_MFJpgTRuXF7EKk3UcLvCI5HyjP6b5daZQoMJRM2g==\",\n            \"password\": \"gAAAAABdYe_LtuwnY95B0nhsSKQbe8DEuvhbjO2Y9zo-PwC_UqsmQ1whRsGyTlZGc3RRyWc3yde6cGozxPJjcjZv77itSuyKVg==\"\n        }\n    }\n}\n```\n\nThe credentials are retrieved every other time so that the user never has to pass the host or password info when needed.\n\n#### Connect_Only = False\nWhat happens when `connect_only = False`? The object created has not only an engine but:\n\n<ol>\n<li>Attribute '_metadata': provides the metadata for each table/view in the schema\n\n![metadata](https://github.com/jojoduquartier/dsdbmanager/blob/master/source/imgs/metadata.png)\n</li>\n\n<li>Every table or view in the schema becomes an attribute that can be used to pull data into a dataframe\n\n![read data](https://github.com/jojoduquartier/dsdbmanager/blob/master/source/imgs/read_table.png)\n</li>\n\n<li>Attribute '_insert': provides a function that uses a pandas dataframe to insert records into a table\n\n![read data](https://github.com/jojoduquartier/dsdbmanager/blob/master/source/imgs/insert.png)\n\nThe picture above shows that `2` records were inserted in the `category` table of `dstest` and we can see it here\n\n![read data](https://github.com/jojoduquartier/dsdbmanager/blob/master/source/imgs/inserted.png)\n</li>\n<li>Attribute '_update': provides a function that uses a pandas dataframe to update records in a table</li>\n</ol>\n\n#### Context Manager\nIt is possible to connect to the databases with a context manager approach and this is highly suggested. Sqlachemy engines\nare disposed and properties pointing to tables etc. are all cleared\n\n![context manager](https://github.com/jojoduquartier/dsdbmanager/blob/master/source/imgs/as_context_manager.png)\n\nThe context manager approach is way cleaner anyways.\n```python\nfrom dsdbmanager import mysql\n\nwith mysql().dstest(connect_only=True, schema=None) as dbobject:\n    # anything with the engine goes here\n    pass\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jojoduquartier/dsdbmanager", "keywords": "sqlalchemy data-science database-connections pandas", "license": "", "maintainer": "", "maintainer_email": "", "name": "dsdbmanager", "package_url": "https://pypi.org/project/dsdbmanager/", "platform": "", "project_url": "https://pypi.org/project/dsdbmanager/", "project_urls": {"Bug Reports": "https://github.com/jojoduquartier/dsdbmanager/issues", "Homepage": "https://github.com/jojoduquartier/dsdbmanager", "Source": "https://github.com/jojoduquartier/dsdbmanager/"}, "release_url": "https://pypi.org/project/dsdbmanager/1.0.4/", "requires_dist": ["sqlalchemy", "numpy", "pandas", "toolz", "click", "cryptography"], "requires_python": ">=3.6, <4", "summary": "Manage your data science databases", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>dsdbmanager</h1>\n<p>Data Science DataBase Manager</p>\n<p><a href=\"https://travis-ci.com/jojoduquartier/dsdbmanager\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68ac84f627bbf1dcb5097079423494aec393e5d5/68747470733a2f2f7472617669732d63692e636f6d2f6a6f6a6f647571756172746965722f647364626d616e616765722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://dsdbmanager.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2403c42e421a6ef6465e760f0df402551a642aa6/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f647364626d616e616765722f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codecov.io/gh/jojoduquartier/dsdbmanager\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/252de9132017150cd1b727f1a2a934b657464816/68747470733a2f2f636f6465636f762e696f2f67682f6a6f6a6f647571756172746965722f647364626d616e616765722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/dsdbmanager/\" rel=\"nofollow\"><img alt=\"Upload Python Package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be2e4587cb29f2089a036f5483dd430f63777088/68747470733a2f2f6769746875622e636f6d2f6a6f6a6f647571756172746965722f647364626d616e616765722f776f726b666c6f77732f55706c6f6164253230507974686f6e2532305061636b6167652f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>Installation</h1>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">dsdbmanager</span>\n</pre>\n<h1>ReadMe</h1>\n<p>Do you love SqlAlchemy? Do you usually have to connect to the same databases all the time for some quick data processing and/or exploration?</p>\n<ul>\n<li>You might have database address and/or credentials hardcoded in a script</li>\n<li>You might be using environment variables to store credentials or host/ports etc</li>\n</ul> \n<p>When dealing with simple data processing (especially with different databases with relatively small tables), it does not always make sense\nto have the something like</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sqlalchemy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">cx_Oracle</span>\n</pre>\n<p>in the header of each script. There are many ways of dealing with these issues but this project tries to provide an example\nfor the new data scientist. This project is not meant to be used in production; the goal is to speed up exploration by eliminating\nsome frequent database connection activities.</p>\n<ul>\n<li>The examples below are based on a locally hosted <a href=\"https://www.mysql.com/products/workbench/\" rel=\"nofollow\">MySql</a> database</li>\n</ul>\n<p>Consider the following database <strong>dstest</strong> with tables <strong>category</strong> and <strong>user</strong>. The database host, schema and/or port can be\nstored in a json file that the package uses to quickly create sqlalchemy engines.</p>\n<p><img alt=\"mysql workbench\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e08489de1e754cf2eab5a00c13e2f4a2da1de068/68747470733a2f2f6769746875622e636f6d2f6a6f6a6f647571756172746965722f647364626d616e616765722f626c6f622f6d61737465722f736f757263652f696d67732f776f726b62656e63682e706e67\"></p>\n<h2>Adding databases</h2>\n<p>After (or before) installation of the package, set an envionment variable <code>DSDBMANAGER_CONFIG</code> pointing to a folder where the configuration files can be stored.\nIf the environment variable is not available, <code>pathlib.Path.home() / \".dsdbmanager\"</code> is used by default.</p>\n<p>Use entry point command <code>dsdbmanager add-database</code> directly in a command shell to add a database.</p>\n<p>Or any python interactive interactive shell:</p>\n<p><img alt=\"add database\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b00e85dfde9709e4f17b2ab7c9eacbc171095af0/68747470733a2f2f6769746875622e636f6d2f6a6f6a6f647571756172746965722f647364626d616e616765722f626c6f622f6d61737465722f736f757263652f696d67732f6164645f64622e676966\"></p>\n<p>This will add the database directly to the <code>.host.json</code> file automatically created at first <code>import</code>.</p>\n<p><img alt=\"host json\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/353add33dc16bca330eeb33031359a6377f890e4/68747470733a2f2f6769746875622e636f6d2f6a6f6a6f647571756172746965722f647364626d616e616765722f626c6f622f6d61737465722f736f757263652f696d67732f686f73742e706e67\"></p>\n<h2>Connecting</h2>\n<h4>Manual Connection</h4>\n<p>Once a database is added, it is easy to connect to it using one of the following modules (each corresponding to a sql flavor/dialect)\nto establish a connection. This approach means that the user only needs to provide the username and password to create the engines.</p>\n<ul>\n<li>oracle_</li>\n<li>mssql_</li>\n<li>mysql_</li>\n<li>teradata_</li>\n</ul>\n<p><img alt=\"mysql connect\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8c3505bbf7094ffcd3c57464133b7d65067e1705/68747470733a2f2f6769746875622e636f6d2f6a6f6a6f647571756172746965722f647364626d616e616765722f626c6f622f6d61737465722f736f757263652f696d67732f6d616e75616c636f6e6e656374696f6e2e706e67\"></p>\n<h4>Connecting With Shortcut</h4>\n<p>In order to save encrypted credentials for reuse, the project comes with a shortcut for each flavor/dialect</p>\n<p><img alt=\"shortcut\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3db398a9b1b5501c9b93252008ff7af27121c9c7/68747470733a2f2f6769746875622e636f6d2f6a6f6a6f647571756172746965722f647364626d616e616765722f626c6f622f6d61737465722f736f757263652f696d67732f7573696e675f73686f72746375742e706e67\"></p>\n<p>This approach creates an object that has the name of each database as a method. The image above shows the only mysql database <code>dstest</code> as a property.\nThis property is actually a function which must be called to establish connection.</p>\n<p><img alt=\"connect\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/590f5168293f828adaf8834b3ea6244ead9add5f/68747470733a2f2f6769746875622e636f6d2f6a6f6a6f647571756172746965722f647364626d616e616765722f626c6f622f6d61737465722f736f757263652f696d67732f66697273745f74696d652e706e67\"></p>\n<p>Because the connection is only made when the function is called, all the databases available are just properties until the user needs them.\nWhen a connection is attempted for the first time, the user is prompted for the username and password. The credentials are used to create the\nsqlalchemy engine which is used to test for successful connection. If the connection fails, the credentials are discarded and an error is raised. If\nthe connection succeeds, the credentials are encrypted and stored in a file like this:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"mysql\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"dstest\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"username\"</span><span class=\"p\">:</span> <span class=\"s2\">\"gAAAAABdYe_Le1rX3W5y23GlLf0dtrVVOWJhaPGVk2_CbIfpcqb_0dzu5_MFJpgTRuXF7EKk3UcLvCI5HyjP6b5daZQoMJRM2g==\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"password\"</span><span class=\"p\">:</span> <span class=\"s2\">\"gAAAAABdYe_LtuwnY95B0nhsSKQbe8DEuvhbjO2Y9zo-PwC_UqsmQ1whRsGyTlZGc3RRyWc3yde6cGozxPJjcjZv77itSuyKVg==\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>The credentials are retrieved every other time so that the user never has to pass the host or password info when needed.</p>\n<h4>Connect_Only = False</h4>\n<p>What happens when <code>connect_only = False</code>? The object created has not only an engine but:</p>\n<ol>\n<li>Attribute '_metadata': provides the metadata for each table/view in the schema\n<p><img alt=\"metadata\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dbccb758acae4cb4b1f25ac43f181f042a2e21f1/68747470733a2f2f6769746875622e636f6d2f6a6f6a6f647571756172746965722f647364626d616e616765722f626c6f622f6d61737465722f736f757263652f696d67732f6d657461646174612e706e67\"></p>\n</li>\n<li>Every table or view in the schema becomes an attribute that can be used to pull data into a dataframe\n<p><img alt=\"read data\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ff9ffaac19887e65b33457e1e66cc82094c91b85/68747470733a2f2f6769746875622e636f6d2f6a6f6a6f647571756172746965722f647364626d616e616765722f626c6f622f6d61737465722f736f757263652f696d67732f726561645f7461626c652e706e67\"></p>\n</li>\n<li>Attribute '_insert': provides a function that uses a pandas dataframe to insert records into a table\n<p><img alt=\"read data\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/409aa88c1ab5156261624f62d197f36ca76c8436/68747470733a2f2f6769746875622e636f6d2f6a6f6a6f647571756172746965722f647364626d616e616765722f626c6f622f6d61737465722f736f757263652f696d67732f696e736572742e706e67\"></p>\n<p>The picture above shows that <code>2</code> records were inserted in the <code>category</code> table of <code>dstest</code> and we can see it here</p>\n<p><img alt=\"read data\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7656d4d23d68e566d56e0df9c9ae3da6ada7d945/68747470733a2f2f6769746875622e636f6d2f6a6f6a6f647571756172746965722f647364626d616e616765722f626c6f622f6d61737465722f736f757263652f696d67732f696e7365727465642e706e67\"></p>\n</li>\n<li>Attribute '_update': provides a function that uses a pandas dataframe to update records in a table</li>\n</ol>\n<h4>Context Manager</h4>\n<p>It is possible to connect to the databases with a context manager approach and this is highly suggested. Sqlachemy engines\nare disposed and properties pointing to tables etc. are all cleared</p>\n<p><img alt=\"context manager\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2bdc29ad82e87df674674897f3c0965efeaeeeca/68747470733a2f2f6769746875622e636f6d2f6a6f6a6f647571756172746965722f647364626d616e616765722f626c6f622f6d61737465722f736f757263652f696d67732f61735f636f6e746578745f6d616e616765722e706e67\"></p>\n<p>The context manager approach is way cleaner anyways.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dsdbmanager</span> <span class=\"kn\">import</span> <span class=\"n\">mysql</span>\n\n<span class=\"k\">with</span> <span class=\"n\">mysql</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">dstest</span><span class=\"p\">(</span><span class=\"n\">connect_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">dbobject</span><span class=\"p\">:</span>\n    <span class=\"c1\"># anything with the engine goes here</span>\n    <span class=\"k\">pass</span>\n</pre>\n\n          </div>"}, "last_serial": 7050099, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "46c2f0b944838edafaf3225bb19fcd53", "sha256": "e6a6e788771bbfc5d4a7b173ba031a9cbff2ca7886e6de8a07b6f40574dc8a11"}, "downloads": -1, "filename": "dsdbmanager-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "46c2f0b944838edafaf3225bb19fcd53", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 25774, "upload_time": "2019-10-19T17:24:19", "upload_time_iso_8601": "2019-10-19T17:24:19.518322Z", "url": "https://files.pythonhosted.org/packages/44/73/e9a1d237c618b407cf0c4240327057780f5f08b9126d48cfdd388554231e/dsdbmanager-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "552494017a59fc0247d12fbc731ed9c5", "sha256": "741c8a4560c28dbc13d7fe40b0baabebfbf293a9b8f034b85376d14ed3910df6"}, "downloads": -1, "filename": "dsdbmanager-1.0.0.tar.gz", "has_sig": false, "md5_digest": "552494017a59fc0247d12fbc731ed9c5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 21702, "upload_time": "2019-10-19T17:24:21", "upload_time_iso_8601": "2019-10-19T17:24:21.964586Z", "url": "https://files.pythonhosted.org/packages/a3/f5/ada519232e6d9c3d4bfc10d02ee2c6801d0a1a9ffdd4291a3bf1a09735aa/dsdbmanager-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "079b5610338a575605f6801b6ce69a36", "sha256": "b07e29cef779d343a056c16065f6e3641007fab46ccb5743de5de3c39b865c5a"}, "downloads": -1, "filename": "dsdbmanager-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "079b5610338a575605f6801b6ce69a36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 25765, "upload_time": "2020-01-23T03:28:38", "upload_time_iso_8601": "2020-01-23T03:28:38.873494Z", "url": "https://files.pythonhosted.org/packages/54/8c/5d99b4aa05594342a102936e330cfbfcbd60800089a625be6c7ecf79ca51/dsdbmanager-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49770b94b831cc29fae5c07bfb10ecbe", "sha256": "27e2ec10069b3d4f993c58b5ccdcdb19dace14b6a92557d30ec545d477b8e3de"}, "downloads": -1, "filename": "dsdbmanager-1.0.1.tar.gz", "has_sig": false, "md5_digest": "49770b94b831cc29fae5c07bfb10ecbe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 21717, "upload_time": "2020-01-23T03:28:40", "upload_time_iso_8601": "2020-01-23T03:28:40.983481Z", "url": "https://files.pythonhosted.org/packages/8d/6b/181d3c1f5da8536aa5e594e02cf8a137d8a362c46e389c1670372c49ff42/dsdbmanager-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "5448472d1230ea59abcf24b4d1194b75", "sha256": "34a183412b395823d29bcfc601229d176f2d9a57aa051c07ca035ab206d0b471"}, "downloads": -1, "filename": "dsdbmanager-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5448472d1230ea59abcf24b4d1194b75", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 26804, "upload_time": "2020-02-21T03:05:19", "upload_time_iso_8601": "2020-02-21T03:05:19.697508Z", "url": "https://files.pythonhosted.org/packages/78/2c/7ccbccf47ee4f3b2d4b28454478c2ffcfc3dd6f686d841623a79a9e6d408/dsdbmanager-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f77cb7b351357afc031acdb402400189", "sha256": "5e68271c6e30ad7ae2901a6d6f35dcb74485788801d8a8093faa050fe59617d7"}, "downloads": -1, "filename": "dsdbmanager-1.0.2.tar.gz", "has_sig": false, "md5_digest": "f77cb7b351357afc031acdb402400189", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 22108, "upload_time": "2020-02-01T17:46:17", "upload_time_iso_8601": "2020-02-01T17:46:17.748127Z", "url": "https://files.pythonhosted.org/packages/31/f8/78d2dcf602426a3873275a0eaa0e3668c72abae4678e309259f7d78c3a5e/dsdbmanager-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "2b9d324a956955fbe8d93162c29cb40a", "sha256": "8607b1dbee985d9bc8430525ca4d59061b37fe7e75ad5bf01d034e5f3f8b253f"}, "downloads": -1, "filename": "dsdbmanager-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2b9d324a956955fbe8d93162c29cb40a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 26805, "upload_time": "2020-02-21T03:09:28", "upload_time_iso_8601": "2020-02-21T03:09:28.851242Z", "url": "https://files.pythonhosted.org/packages/f9/41/73ec7dabfcd6027a2d1d458bfc90812faa68113e7ad640015c6251acf25f/dsdbmanager-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a85bdb6d34e4b0e6a4f969a99597dc84", "sha256": "889552725189fe22d11e6de2e758b19ca03a4cf59a058a2ab8979d5252221d63"}, "downloads": -1, "filename": "dsdbmanager-1.0.3.tar.gz", "has_sig": false, "md5_digest": "a85bdb6d34e4b0e6a4f969a99597dc84", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 22973, "upload_time": "2020-02-21T03:32:28", "upload_time_iso_8601": "2020-02-21T03:32:28.736364Z", "url": "https://files.pythonhosted.org/packages/10/5d/bb191bc4a89f331591ff12e23ffd3e9481f528cecbd73f17ae6887558c20/dsdbmanager-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "112aa06928b6c09dd638ae4a27f18afa", "sha256": "9f76c9df1d63021c8724f51e0476c1e45224c05741305ec75dc470361dadd7a3"}, "downloads": -1, "filename": "dsdbmanager-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "112aa06928b6c09dd638ae4a27f18afa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 28077, "upload_time": "2020-04-18T21:00:27", "upload_time_iso_8601": "2020-04-18T21:00:27.255389Z", "url": "https://files.pythonhosted.org/packages/2c/c8/2d103418019f32e3d9584f1585bc74c57bfa5513ee9d298e484d3bd25930/dsdbmanager-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21af5884ffff702dad2f48ba71d7200d", "sha256": "50731467ed3a04d961a6731559f65915999445048d5f53254912ef4ef6642773"}, "downloads": -1, "filename": "dsdbmanager-1.0.4.tar.gz", "has_sig": false, "md5_digest": "21af5884ffff702dad2f48ba71d7200d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 24271, "upload_time": "2020-04-18T21:00:28", "upload_time_iso_8601": "2020-04-18T21:00:28.190171Z", "url": "https://files.pythonhosted.org/packages/34/62/b7a16960563c10ad3353c3bbebbc94f4bf7eca0457e14b659938ca269e91/dsdbmanager-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "112aa06928b6c09dd638ae4a27f18afa", "sha256": "9f76c9df1d63021c8724f51e0476c1e45224c05741305ec75dc470361dadd7a3"}, "downloads": -1, "filename": "dsdbmanager-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "112aa06928b6c09dd638ae4a27f18afa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 28077, "upload_time": "2020-04-18T21:00:27", "upload_time_iso_8601": "2020-04-18T21:00:27.255389Z", "url": "https://files.pythonhosted.org/packages/2c/c8/2d103418019f32e3d9584f1585bc74c57bfa5513ee9d298e484d3bd25930/dsdbmanager-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21af5884ffff702dad2f48ba71d7200d", "sha256": "50731467ed3a04d961a6731559f65915999445048d5f53254912ef4ef6642773"}, "downloads": -1, "filename": "dsdbmanager-1.0.4.tar.gz", "has_sig": false, "md5_digest": "21af5884ffff702dad2f48ba71d7200d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 24271, "upload_time": "2020-04-18T21:00:28", "upload_time_iso_8601": "2020-04-18T21:00:28.190171Z", "url": "https://files.pythonhosted.org/packages/34/62/b7a16960563c10ad3353c3bbebbc94f4bf7eca0457e14b659938ca269e91/dsdbmanager-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:24 2020"}