{"info": {"author": "Steven Robertson", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Programming Language :: Python :: 3"], "description": "# Usage\n\nCreate `watcherConfig.txt` that contains entries like:\n\n    [project_name]\n    local_dir = /your/local/path\n    remote_dir = /your/remote/path\n    remote_addr = username@server\n    remote_port = {port}\n\n    [project_name]\n    local_dir = /your/local/path\n    remote_dir = /app\n    remote_addr = {username@server|server}\n    languages = {c++|all}\n    ignore_filetypes = {.so*|.so*,.cpp...}\n    file_delete = {True|False}\n\nLanguage, remote_port, ignore_filetypes are optional\n\n`ignore_filetypes` is useful if you have embedded c++ code in your project and the machine you're syncing to isn't the same type of machine as the one you're developing on.\n\nThe `all` language will sync the entired directory over. By default the language is `python`\n\n`file_delete` will default to True, but if set to False will not delete files on remote if they don't exist on local. This is useful for building env-specific stuff that you don't want overwritten by a different env (or if you don't build on local because you can't or something).\n\n`server` can be an alias set in your `~/.ssh/config`\n\n`cysnc` uses `rsync` every time a change to a local_dir is made.\n\n## Installation\n\n`pip install csync`\n\n## TODO\n* Have codeSync create the config files for you\n* Extend makefile commands so that `make` isn't the only one\n* Enable force-sync\n* Sync both ways\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/s1113950/csync.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "csync", "package_url": "https://pypi.org/project/csync/", "platform": "", "project_url": "https://pypi.org/project/csync/", "project_urls": {"Homepage": "https://github.com/s1113950/csync.git"}, "release_url": "https://pypi.org/project/csync/0.1/", "requires_dist": ["configparser (==3.5.0)", "watchdog (==0.8.3)"], "requires_python": "", "summary": "Syncs code to machines on code changes", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Usage</h1>\n<p>Create <code>watcherConfig.txt</code> that contains entries like:</p>\n<pre><code>[project_name]\nlocal_dir = /your/local/path\nremote_dir = /your/remote/path\nremote_addr = username@server\nremote_port = {port}\n\n[project_name]\nlocal_dir = /your/local/path\nremote_dir = /app\nremote_addr = {username@server|server}\nlanguages = {c++|all}\nignore_filetypes = {.so*|.so*,.cpp...}\nfile_delete = {True|False}\n</code></pre>\n<p>Language, remote_port, ignore_filetypes are optional</p>\n<p><code>ignore_filetypes</code> is useful if you have embedded c++ code in your project and the machine you're syncing to isn't the same type of machine as the one you're developing on.</p>\n<p>The <code>all</code> language will sync the entired directory over. By default the language is <code>python</code></p>\n<p><code>file_delete</code> will default to True, but if set to False will not delete files on remote if they don't exist on local. This is useful for building env-specific stuff that you don't want overwritten by a different env (or if you don't build on local because you can't or something).</p>\n<p><code>server</code> can be an alias set in your <code>~/.ssh/config</code></p>\n<p><code>cysnc</code> uses <code>rsync</code> every time a change to a local_dir is made.</p>\n<h2>Installation</h2>\n<p><code>pip install csync</code></p>\n<h2>TODO</h2>\n<ul>\n<li>Have codeSync create the config files for you</li>\n<li>Extend makefile commands so that <code>make</code> isn't the only one</li>\n<li>Enable force-sync</li>\n<li>Sync both ways</li>\n</ul>\n\n          </div>"}, "last_serial": 6119152, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "e4188b616f37bb405ce470dc014bad2b", "sha256": "5f40ba6473ad035939f806192c6008b75772236d7cac6c92f57d953e7c25106a"}, "downloads": -1, "filename": "csync-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e4188b616f37bb405ce470dc014bad2b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9114, "upload_time": "2019-11-11T19:22:29", "upload_time_iso_8601": "2019-11-11T19:22:29.268110Z", "url": "https://files.pythonhosted.org/packages/ce/16/bda076d04a8de7159446066e62f77f47a8a98017b3104ef5dbd2e37cc699/csync-0.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e4188b616f37bb405ce470dc014bad2b", "sha256": "5f40ba6473ad035939f806192c6008b75772236d7cac6c92f57d953e7c25106a"}, "downloads": -1, "filename": "csync-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e4188b616f37bb405ce470dc014bad2b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9114, "upload_time": "2019-11-11T19:22:29", "upload_time_iso_8601": "2019-11-11T19:22:29.268110Z", "url": "https://files.pythonhosted.org/packages/ce/16/bda076d04a8de7159446066e62f77f47a8a98017b3104ef5dbd2e37cc699/csync-0.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:41:39 2020"}