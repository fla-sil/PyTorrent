{"info": {"author": "Victor Schmidt", "author_email": "vsch@protonmail.com", "bugtrack_url": null, "classifiers": [], "description": ".. raw:: html\n\n   <p align=\"center\">\n\n.. raw:: html\n\n   </p>\n\n.. raw:: html\n\n   <!-- TOC -->\n\n-  `About <#about>`__\n-  `Install <#install>`__\n-  `Getting Started <#getting-started>`__\n-  `Usage <#usage>`__\n\n   -  `Adding a Python project <#adding-a-python-project>`__\n   -  `Manual addition of a built\n      documentation <#manual-addition-of-a-built-documentation>`__\n   -  `Customization <#customization>`__\n\n      -  `Useful Resources <#useful-resources>`__\n\nAbout\n=====\n\n``metadocs`` allows you to integrate several ``sphinx`` documentation\nprojects into one Home Documentation listing them and allowing you to\nhave cross projects documentation with ``mkdocs``.\n\nAny ``sphinx`` module can be used as long as ``make html`` works and the\nbuilt code is in ``your_documentation/your_project/build``.\n\n``metadocs`` comes with an example project and a standalone documention\nso you can already get started!\n\nDefault settings are that the Home Documentation will use a Material\nDesign theme and Project Documentations will use Read The Docs\u2019s theme,\nto better distinguish the hierarchy. You can change that (in the global\n``mkdocs.yml`` and in individual python projects\u2019 ``conf.py``).\n\n.. figure:: https://i.imgur.com/OyYGmOL.png\n   :alt: metadocs illustration\n\n   metadocs illustration\n\nInstall\n=======\n\n``metadocs`` requires python3 and mainly uses ``sphinx``, ``mkdocs`` and\n``watchdog`` as 3rd party libraries. Check out the `full\nrequirements </requirements.txt>`__\n\n::\n\n    pip install metadocs\n\nGetting Started\n===============\n\nStart your Home Documentation with:\n\n::\n\n    metadocs init your_home_documentation\n\nStart the server with\n\n::\n\n    metadocs serve\n\nOptionnaly you can specify a port with ``metadocs serve -s your_port``\n\nYou can also manually build the documentation with ``build``:\n\n::\n\n    metadocs build [FLAGS]\n\nFlags being:\n\n::\n\n      -v, --verbose                             verbose flag (Sphinx will stay verbose)\n      -A, --all                                 Build doc for all projects\n      -F, --force                               force the build, no verification asked\n      -o, --only_index                          only build projects listed in the Documentation's Home\n      -p, --projects [PROJECTS [PROJECTS ...]]  list of projects to build\n\nUsage\n=====\n\nThe package comes with a thorough documentation by default, which you\u2019ll\nsee by running ``metadocs serve`` after a proper ``init``. A Read The\nDocs-hosted version may arrive at some point.\n\nThe built in documentation is there to help you but is in no way\nnecessary, you can overwrite or delete everything. **There are however 2\nmandatory things:**\n\n**1** You have to keep this structure:\n\n::\n\n    your_home_documentation/\n        mkdocs.yml\n        docs/ # your home documentation, listing sphinx docs\n            index.md # mandatory file -> mkdocs's index\n        site/\n        your_project_1/\n            build/ # sphinx's build directory\n            source/ # sphinx's documentation source directory\n            your_project_1/ # your documented code as a package\n                __init__.py\n                your_package_1_1/\n                your_package_1_2/\n                ...\n        your_project_2/\n            build/\n            source/\n            your_project_2/\n                __init__.py\n                your_package_2_1/\n                your_package_2_2/\n                ...\n        ...\n\n**2** ``mkdocs``\\ \u2019s ``index.md`` file must have a ``# Projects``\nsection listing them as in the example\n\nAlso, remember to run ``build`` or ``serve`` commands from your Home\nDocumenation\u2019s **root folder** (in ``your_home_documentation/`` in the\nexample above) otherwise you may get errors saying ``metadocs`` can\u2019t\nfind a file.\n\nAdding a Python project\n-----------------------\n\n``metadocs`` comes with a useful ``autodoc`` command helping you easily\nadd a new python project to your documentation.\n\nAll you have to do is put the documented (Google-style docstrings) code\nalong the documentation in ``your_home_documentation/``. Say it\u2019s called\n``your_project_3``. Then you just need to make a new directory called\n``your_project_3`` go there, copy ``your_project_3``\\ \u2019s code in there\n(as a package, meaning it should include a ``__init__.py`` and use\n``autodoc``:\n\n::\n\n    $ pwd\n    /path_to_your_documentation/\n    $ mkdir your_project_3\n    $ cd your_project_3\n    $ cp -r path/to/your_project_3 .\n    $ ls\n    your_project_3\n    $ metadocs autodoc\n    ... some prints\n    $ ls\n    Makefile    source    build    your_project_3\n\nUnder the hood, ``metadocs autodoc`` runs ``sphinx-quickstart``, updates\ndefault values in ``conf.py``, runs ``sphinx-apidoc``, rearranges the\ncreated ``.rst`` files, builds the documentation with ``metadocs build``\nand updates the Home Documentation\u2019s ``index.md`` file to list\n``your_project_3``.\n\nIf ``metadocs autodoc``\\ \u2019s default values for the ``sphinx``\ndocumentation don\u2019t suit you, do update\n``/path_to_your_documentation/your_project_3/source/conf.py``.\n\nManual addition of a built documentation\n----------------------------------------\n\nIf you don\u2019t want to ``metadocs autodoc``, you may use any sphinx\nconfiguration you want. Just keep in mind that ``metadocs`` will run\n``make html`` from your project\u2019s directory (so check that this works)\nand ``metadocs serve`` expects to find a file called ``index.html`` in a\ndirectory called ``build/`` in your project.\n\nCustomization\n-------------\n\nYou may use any other theme for instance. To use ``mkdocs-nature`` just:\n\n::\n\n    pip install mkdocs-nature\n\nThen change this in ``mkdocs.yaml`` : ``theme: nature`` and finally:\n\n::\n\n    mkdocs build\n\nEdit the global configuration in ``mkdocs.yaml`` and each project\u2019s in\n``source/conf.py``.\n\nUseful Resources\n~~~~~~~~~~~~~~~~\n\n-  `Mkdocs\u2019s Getting\n   Started <https://www.mkdocs.org/user-guide/writing-your-docs/>`__\n-  `Material for Mkdocs\u2019s customization\n   instructions <https://squidfunk.github.io/mkdocs-material/customization/>`__\n-  `Material for Mkdocs\u2019s supported extensions\n   list <https://squidfunk.github.io/mkdocs-material/extensions/admonition/>`__\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/entrepreneur-interet-general/metadocs", "keywords": "documentation doc sphinx mkdocs metadocs", "license": "AGPL", "maintainer": "", "maintainer_email": "", "name": "metadocs", "package_url": "https://pypi.org/project/metadocs/", "platform": "", "project_url": "https://pypi.org/project/metadocs/", "project_urls": {"Homepage": "https://github.com/entrepreneur-interet-general/metadocs"}, "release_url": "https://pypi.org/project/metadocs/0.4.0.1/", "requires_dist": ["watchdog", "sphinx (>=1.7.6)", "mkdocs", "sphinx-rtd-theme (>=0.4.0)", "mkdocs-material", "pexpect", "pygments"], "requires_python": "", "summary": "The docs of your docs: manage sphinx documentations with mkdocs", "version": "0.4.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            .. raw:: html<br><br>   &lt;p align=\"center\"&gt;<br><br>.. raw:: html<br><br>   &lt;/p&gt;<br><br>.. raw:: html<br><br>   &lt;!-- TOC --&gt;<br><br>-  `About &lt;#about&gt;`__<br>-  `Install &lt;#install&gt;`__<br>-  `Getting Started &lt;#getting-started&gt;`__<br>-  `Usage &lt;#usage&gt;`__<br><br>   -  `Adding a Python project &lt;#adding-a-python-project&gt;`__<br>   -  `Manual addition of a built<br>      documentation &lt;#manual-addition-of-a-built-documentation&gt;`__<br>   -  `Customization &lt;#customization&gt;`__<br><br>      -  `Useful Resources &lt;#useful-resources&gt;`__<br><br>About<br>=====<br><br>``metadocs`` allows you to integrate several ``sphinx`` documentation<br>projects into one Home Documentation listing them and allowing you to<br>have cross projects documentation with ``mkdocs``.<br><br>Any ``sphinx`` module can be used as long as ``make html`` works and the<br>built code is in ``your_documentation/your_project/build``.<br><br>``metadocs`` comes with an example project and a standalone documention<br>so you can already get started!<br><br>Default settings are that the Home Documentation will use a Material<br>Design theme and Project Documentations will use Read The Docs\u2019s theme,<br>to better distinguish the hierarchy. You can change that (in the global<br>``mkdocs.yml`` and in individual python projects\u2019 ``conf.py``).<br><br>.. figure:: https://i.imgur.com/OyYGmOL.png<br>   :alt: metadocs illustration<br><br>   metadocs illustration<br><br>Install<br>=======<br><br>``metadocs`` requires python3 and mainly uses ``sphinx``, ``mkdocs`` and<br>``watchdog`` as 3rd party libraries. Check out the `full<br>requirements &lt;/requirements.txt&gt;`__<br><br>::<br><br>    pip install metadocs<br><br>Getting Started<br>===============<br><br>Start your Home Documentation with:<br><br>::<br><br>    metadocs init your_home_documentation<br><br>Start the server with<br><br>::<br><br>    metadocs serve<br><br>Optionnaly you can specify a port with ``metadocs serve -s your_port``<br><br>You can also manually build the documentation with ``build``:<br><br>::<br><br>    metadocs build [FLAGS]<br><br>Flags being:<br><br>::<br><br>      -v, --verbose                             verbose flag (Sphinx will stay verbose)<br>      -A, --all                                 Build doc for all projects<br>      -F, --force                               force the build, no verification asked<br>      -o, --only_index                          only build projects listed in the Documentation's Home<br>      -p, --projects [PROJECTS [PROJECTS ...]]  list of projects to build<br><br>Usage<br>=====<br><br>The package comes with a thorough documentation by default, which you\u2019ll<br>see by running ``metadocs serve`` after a proper ``init``. A Read The<br>Docs-hosted version may arrive at some point.<br><br>The built in documentation is there to help you but is in no way<br>necessary, you can overwrite or delete everything. **There are however 2<br>mandatory things:**<br><br>**1** You have to keep this structure:<br><br>::<br><br>    your_home_documentation/<br>        mkdocs.yml<br>        docs/ # your home documentation, listing sphinx docs<br>            index.md # mandatory file -&gt; mkdocs's index<br>        site/<br>        your_project_1/<br>            build/ # sphinx's build directory<br>            source/ # sphinx's documentation source directory<br>            your_project_1/ # your documented code as a package<br>                __init__.py<br>                your_package_1_1/<br>                your_package_1_2/<br>                ...<br>        your_project_2/<br>            build/<br>            source/<br>            your_project_2/<br>                __init__.py<br>                your_package_2_1/<br>                your_package_2_2/<br>                ...<br>        ...<br><br>**2** ``mkdocs``\\ \u2019s ``index.md`` file must have a ``# Projects``<br>section listing them as in the example<br><br>Also, remember to run ``build`` or ``serve`` commands from your Home<br>Documenation\u2019s **root folder** (in ``your_home_documentation/`` in the<br>example above) otherwise you may get errors saying ``metadocs`` can\u2019t<br>find a file.<br><br>Adding a Python project<br>-----------------------<br><br>``metadocs`` comes with a useful ``autodoc`` command helping you easily<br>add a new python project to your documentation.<br><br>All you have to do is put the documented (Google-style docstrings) code<br>along the documentation in ``your_home_documentation/``. Say it\u2019s called<br>``your_project_3``. Then you just need to make a new directory called<br>``your_project_3`` go there, copy ``your_project_3``\\ \u2019s code in there<br>(as a package, meaning it should include a ``__init__.py`` and use<br>``autodoc``:<br><br>::<br><br>    $ pwd<br>    /path_to_your_documentation/<br>    $ mkdir your_project_3<br>    $ cd your_project_3<br>    $ cp -r path/to/your_project_3 .<br>    $ ls<br>    your_project_3<br>    $ metadocs autodoc<br>    ... some prints<br>    $ ls<br>    Makefile    source    build    your_project_3<br><br>Under the hood, ``metadocs autodoc`` runs ``sphinx-quickstart``, updates<br>default values in ``conf.py``, runs ``sphinx-apidoc``, rearranges the<br>created ``.rst`` files, builds the documentation with ``metadocs build``<br>and updates the Home Documentation\u2019s ``index.md`` file to list<br>``your_project_3``.<br><br>If ``metadocs autodoc``\\ \u2019s default values for the ``sphinx``<br>documentation don\u2019t suit you, do update<br>``/path_to_your_documentation/your_project_3/source/conf.py``.<br><br>Manual addition of a built documentation<br>----------------------------------------<br><br>If you don\u2019t want to ``metadocs autodoc``, you may use any sphinx<br>configuration you want. Just keep in mind that ``metadocs`` will run<br>``make html`` from your project\u2019s directory (so check that this works)<br>and ``metadocs serve`` expects to find a file called ``index.html`` in a<br>directory called ``build/`` in your project.<br><br>Customization<br>-------------<br><br>You may use any other theme for instance. To use ``mkdocs-nature`` just:<br><br>::<br><br>    pip install mkdocs-nature<br><br>Then change this in ``mkdocs.yaml`` : ``theme: nature`` and finally:<br><br>::<br><br>    mkdocs build<br><br>Edit the global configuration in ``mkdocs.yaml`` and each project\u2019s in<br>``source/conf.py``.<br><br>Useful Resources<br>~~~~~~~~~~~~~~~~<br><br>-  `Mkdocs\u2019s Getting<br>   Started &lt;https://www.mkdocs.org/user-guide/writing-your-docs/&gt;`__<br>-  `Material for Mkdocs\u2019s customization<br>   instructions &lt;https://squidfunk.github.io/mkdocs-material/customization/&gt;`__<br>-  `Material for Mkdocs\u2019s supported extensions<br>   list &lt;https://squidfunk.github.io/mkdocs-material/extensions/admonition/&gt;`__<br><br><br>\n          </div>"}, "last_serial": 4081429, "releases": {"0.4": [{"comment_text": "", "digests": {"md5": "4b21f6d339ab5c40d5222050b8063743", "sha256": "7fff210d64ae7ac71801da049e9538e5c23a4ace7d03675518563e279e68cf01"}, "downloads": -1, "filename": "metadocs-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4b21f6d339ab5c40d5222050b8063743", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 93223, "upload_time": "2018-07-18T07:52:50", "upload_time_iso_8601": "2018-07-18T07:52:50.811261Z", "url": "https://files.pythonhosted.org/packages/94/44/0d397a067eeb50225a2ad5a06ffc808a6381f1d1a46e6228daf8cb28d7af/metadocs-0.4-py3-none-any.whl", "yanked": false}], "0.4.0.1": [{"comment_text": "", "digests": {"md5": "c7c90c3db50f2d63946f94b3d4f42d71", "sha256": "bb053536470bbc8d3aa32f4a9774c17fe4bf15e9ae799afec0be3f2c014e497f"}, "downloads": -1, "filename": "metadocs-0.4.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c7c90c3db50f2d63946f94b3d4f42d71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 93324, "upload_time": "2018-07-19T10:08:57", "upload_time_iso_8601": "2018-07-19T10:08:57.678455Z", "url": "https://files.pythonhosted.org/packages/9f/c7/156ba855ee8a4036b87f73c8e659b15faf91b24f739e3eeb031c44e0c3b2/metadocs-0.4.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c7c90c3db50f2d63946f94b3d4f42d71", "sha256": "bb053536470bbc8d3aa32f4a9774c17fe4bf15e9ae799afec0be3f2c014e497f"}, "downloads": -1, "filename": "metadocs-0.4.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c7c90c3db50f2d63946f94b3d4f42d71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 93324, "upload_time": "2018-07-19T10:08:57", "upload_time_iso_8601": "2018-07-19T10:08:57.678455Z", "url": "https://files.pythonhosted.org/packages/9f/c7/156ba855ee8a4036b87f73c8e659b15faf91b24f739e3eeb031c44e0c3b2/metadocs-0.4.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:55:57 2020"}