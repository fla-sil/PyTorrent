{"info": {"author": "Geremy Condra", "author_email": "CTO@OpenMigration.Net", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "What Is Graphine?\r\n-----------------\r\n\r\nGraphine is a flexible, easy-to-use graph library for Python 3. It was developed\r\nwith four key goals in mind:\r\n\r\n1) No external dependencies- no graphics toolkits, no math libraries, just\r\npure Python.\r\n\r\n2) Python 3 readiness- if you\u2019re looking at moving your application to Python\r\n3, at least you won\u2019t have to port your graph library too.\r\n\r\n3) Flexibility- we aim to support many different graph use cases, from flow\r\nnetworks and planar graphs to tree walking and DAGs.\r\n\r\n4) Ease of use- no graph library, however powerful, is useful if you can\u2019t\r\nfigure it out. We try to make that as painless as possible.\r\n\r\nWho Should Use Graphine\r\n-----------------------\r\n\r\n1) Developers faced with a data set that naturally decomposes into a graph, but\r\nwho are unwilling to reinvent graph theory to properly represent it. We make it\r\neasy to inspect graphs for special properties, add data and structural elements,\r\nand extend graphs for application-specific behavior.\r\n\r\n2) Non-mathematicians who need to process complex data structures but aren\u2019t\r\nfamiliar with the formal methods for doing so in the graph context. Graphine\r\ndoesn\u2019t require a strong mathematical background to use, and is flexible enough\r\nto permit graph problems to be represented in their most natural form.\r\n\r\n3) Students and teachers looking for a clean, easy-to-understand example of\r\nhow graph algorithms are supposed to behave.\r\n\r\n4) Graph theorists looking for a tool to rapidly sketch out a complex problem\r\nwithout the hassle of manual memory management.\r\n\r\nFeatures\r\n--------\r\n\r\nGraphine is designed to be ready-to-use for most graph applications out of the\r\nbox. It supports easy node and edge addition, modification, and removal, and\r\nprovides attribute access to application-defined data. Formally, the graphs\r\nrepresented are bridge multigraphs, capable of representing both directed and\r\nundirected edges, parallel edges, identical nodes and edges, loops, and\r\narbitrary node and edge labels.\r\n\r\nIt also provides a powerful set of graph operations, including a* traversals,\r\nBFS, DFS, shortest path, edge contraction, generators for random walks, and\r\nbinary graph operations like union, intersection, and difference.\r\n\r\nAll of the above is present in the alpha package; experimental support for\r\nloading and storing graphs using GraphML and Dot is also included", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://gitorious.org/projects/graphine/pages/Home", "keywords": "Python3 Graph Tree Math", "license": "GNU GPLv3", "maintainer": "Geremy Condra", "maintainer_email": "CTO@OpenMigration.Net", "name": "Graphine", "package_url": "https://pypi.org/project/Graphine/", "platform": "Any", "project_url": "https://pypi.org/project/Graphine/", "project_urls": {"Homepage": "http://gitorious.org/projects/graphine/pages/Home"}, "release_url": "https://pypi.org/project/Graphine/0.0a1/", "requires_dist": null, "requires_python": null, "summary": "Graphine is a flexible, pure Python 3 graph library designed to be easy-to-use.", "version": "0.0a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"what-is-graphine\">\n<h2>What Is Graphine?</h2>\n<p>Graphine is a flexible, easy-to-use graph library for Python 3. It was developed\nwith four key goals in mind:</p>\n<p>1) No external dependencies- no graphics toolkits, no math libraries, just\npure Python.</p>\n<p>2) Python 3 readiness- if you\u2019re looking at moving your application to Python\n3, at least you won\u2019t have to port your graph library too.</p>\n<p>3) Flexibility- we aim to support many different graph use cases, from flow\nnetworks and planar graphs to tree walking and DAGs.</p>\n<p>4) Ease of use- no graph library, however powerful, is useful if you can\u2019t\nfigure it out. We try to make that as painless as possible.</p>\n</div>\n<div id=\"who-should-use-graphine\">\n<h2>Who Should Use Graphine</h2>\n<p>1) Developers faced with a data set that naturally decomposes into a graph, but\nwho are unwilling to reinvent graph theory to properly represent it. We make it\neasy to inspect graphs for special properties, add data and structural elements,\nand extend graphs for application-specific behavior.</p>\n<p>2) Non-mathematicians who need to process complex data structures but aren\u2019t\nfamiliar with the formal methods for doing so in the graph context. Graphine\ndoesn\u2019t require a strong mathematical background to use, and is flexible enough\nto permit graph problems to be represented in their most natural form.</p>\n<p>3) Students and teachers looking for a clean, easy-to-understand example of\nhow graph algorithms are supposed to behave.</p>\n<p>4) Graph theorists looking for a tool to rapidly sketch out a complex problem\nwithout the hassle of manual memory management.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<p>Graphine is designed to be ready-to-use for most graph applications out of the\nbox. It supports easy node and edge addition, modification, and removal, and\nprovides attribute access to application-defined data. Formally, the graphs\nrepresented are bridge multigraphs, capable of representing both directed and\nundirected edges, parallel edges, identical nodes and edges, loops, and\narbitrary node and edge labels.</p>\n<p>It also provides a powerful set of graph operations, including a* traversals,\nBFS, DFS, shortest path, edge contraction, generators for random walks, and\nbinary graph operations like union, intersection, and difference.</p>\n<p>All of the above is present in the alpha package; experimental support for\nloading and storing graphs using GraphML and Dot is also included</p>\n</div>\n\n          </div>"}, "last_serial": 784462, "releases": {"0.0a1": [{"comment_text": "Snapshot taken 22 april 2009", "digests": {"md5": "77ba892eaf3f18de6b21903e3d57fdb0", "sha256": "00b8fec9e06a80e908b34408c21c8951e55c873e94d9e83a8b3bb3eb3c761c60"}, "downloads": -1, "filename": "Graphine-0.0.tar.gz", "has_sig": false, "md5_digest": "77ba892eaf3f18de6b21903e3d57fdb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24252, "upload_time": "2009-04-22T22:48:55", "upload_time_iso_8601": "2009-04-22T22:48:55.131421Z", "url": "https://files.pythonhosted.org/packages/40/51/0517d9b359353654bdd1b61893e1027b6b4d7db32aab59a8be5996b45522/Graphine-0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "Snapshot taken 22 april 2009", "digests": {"md5": "77ba892eaf3f18de6b21903e3d57fdb0", "sha256": "00b8fec9e06a80e908b34408c21c8951e55c873e94d9e83a8b3bb3eb3c761c60"}, "downloads": -1, "filename": "Graphine-0.0.tar.gz", "has_sig": false, "md5_digest": "77ba892eaf3f18de6b21903e3d57fdb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24252, "upload_time": "2009-04-22T22:48:55", "upload_time_iso_8601": "2009-04-22T22:48:55.131421Z", "url": "https://files.pythonhosted.org/packages/40/51/0517d9b359353654bdd1b61893e1027b6b4d7db32aab59a8be5996b45522/Graphine-0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:40 2020"}