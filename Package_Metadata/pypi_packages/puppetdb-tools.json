{"info": {"author": "Tim Skirvin", "author_email": "tskirvin@fnal.gov", "bugtrack_url": null, "classifiers": [], "description": "# puppetdb-tools\n\nThis package provides tools to interact with a puppetdb via a CLI.  These\nscripts use a (configurable-via-environment-variable) json config to\ndetermine how to talk to the server.\n\nThese tools were written to be *less* general than any existing tools I've\nseen out there.  Specifically, I don't want to write the necessary JSON\ninput at the command-line every time I'm trying to do a basic query.\n\nThese scripts should support both the v3 and v4 PuppetDB APIs.\n\n## What is puppetdb?\n\n<http://docs.puppetlabs.com/puppetdb/latest/index.html>\n\n## Scripts\n\nThis is not an exhaustive list.\n\n### puppetdb-fact\n\nQueries for a given fact, and lists the hosts that have that fact (along\nwith the value of the fact).  A specific value can be specified as well.\nExample: `puppetdb-fact puppetversion`\n\n### puppetdb-failed\n\npuppetdb-failed queries the puppetdb to find out which hosts failed on\ntheir last puppet check-in.\n\n### puppetdb-failed-list\n\nQueries the puppetdb for hosts that had failures in their last run, and\nprints out all of the things failed.  This is a useful report to send out\nvia email to your team.\n\n### puppetdb-farmlet\n\nQueries the puppetdb for host names, based on zone/role/subrole (our local\nthree-level way of looking up hostnames).\n\n### puppetdb-hosts\n\nList all hosts in the puppetdb.\n\n### puppetdb-last-successful-run\n\nFor each host that failed its last puppet run, find out when it last had\na successful puppet run.  This can be useful for determining whether a\nmachine is really \"supported\" any more, especially in conjunction with\npuppetdb-tooquiet.\n\n### puppetdb-node-classes\n\nList the classes deployed on a given system.  Should match the per-host\nclasses.txt file.\n\n### puppetdb-node-events\n\nLists events that have affected a given node over the last 48 hours\n(configurable) in much the same format as you would have seen running the\n`puppet agent -t` manually.\n\n### puppetdb-node-facts\n\nLists facts on a node or set of nodes; this should be grep-able enough to\nlet you find, say, uptime across a large swath of hosts, or similar.\n\n### puppetdb-node-resources\n\nLists resources deployed on a node or set of nodes.  This is very\npowerful, and the CLI is probably not good enough for what you'd actually\nwant to do with the package.\n\n### puppetdb-report-uptime\n\nLists kernel versions and facts.\n\n### puppetdb-resources\n\nSearch for a given resource type across all hosts, e.g.\n`puppetdb-resources Class --match Mysql::Server`\n\n### puppetdb-tangled\n\npuppetdb-tangled queries the puppetdb to find hosts which are \"tangled\",\nand reports on the associated hosts/events on STDOUT.  A \"tangled\" host\nis defined as one where an event is occurring on that host and over and\nover again over the last several runs, which probably indicates that a\nchange is not successful.  For instance, Package['foo'] removes\nPackage['bar'] and then Package['bar'] is installed afterwards.\n\n### puppetdb-tooquiet\n\nLists nodes that have not checked into the server for the last 48 hours\n(configurable).  Suitable for sending as an email to your team.\n\n### puppetdb-wrapper\n\nSimple bash script to wrap curl with the values of 'key' and 'cert' that\ncome out of the central configuration file.\n\n-------------------------------------------------------------------------------\n\n## Local Scripts\n\nThese scripts may not be helpful to others, but are templates for our own\nuse and show how we interact with facts.  These may be useful to others as\ntemplates.\n\n* puppetdb-host-csv\n* puppetdb-manager\n* puppetdb-monitor\n* puppetdb-report-usage\n* puppetdb-uuid-by-host\n\n-------------------------------------------------------------------------------\n\n## Config Files\n\n### /etc/puppetdb/puppetdb.json\n\nThis should work for talking to an https port, where auth requires your own puppet cert (which will only work as root):\n\n    {\n        \"server\": \"https://{puppetdb_fqdn}:8081\",\n        \"ca\": \"/etc/puppetlabs/puppet/ssl/certs/ca.pem\",\n        \"cert\": \"/etc/puppetlabs/puppet/ssl/certs/{fqdn}.fnal.gov.pem\",\n        \"key\": \"/etc/puppetlabs/puppet/ssl/private_keys/{fqdn}.fnal.gov.pem\",\n        \"api_version\": 4\n    }\n\nIf you can make queries via http (e.g. without auth):\n\n\n    {\n        \"server\": \"http://{puppetdb_fqdn}:8080\",\n        \"api_version\": 3\n    }\n\n### Environment Variables\n\nYou can select alternate configuration files by setting `PUPPETDB_CONFIG`,\ne.g.:\n\n    export PUPPETDB_CONFIG=~/rpm/puppetdb-tools/etc/puppetdb/puppetdb3.json\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/tskirvin/puppetdb-tools", "keywords": "puppetdb,puppet", "license": "Perl Artistic", "maintainer": "Tim Skirvin", "maintainer_email": "tskirvin@fnal.gov", "name": "puppetdb-tools", "package_url": "https://pypi.org/project/puppetdb-tools/", "platform": "", "project_url": "https://pypi.org/project/puppetdb-tools/", "project_urls": {"Homepage": "http://github.com/tskirvin/puppetdb-tools"}, "release_url": "https://pypi.org/project/puppetdb-tools/2.2.2/", "requires_dist": null, "requires_python": "", "summary": "puppetdb tools and shared libraries", "version": "2.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>puppetdb-tools</h1>\n<p>This package provides tools to interact with a puppetdb via a CLI.  These\nscripts use a (configurable-via-environment-variable) json config to\ndetermine how to talk to the server.</p>\n<p>These tools were written to be <em>less</em> general than any existing tools I've\nseen out there.  Specifically, I don't want to write the necessary JSON\ninput at the command-line every time I'm trying to do a basic query.</p>\n<p>These scripts should support both the v3 and v4 PuppetDB APIs.</p>\n<h2>What is puppetdb?</h2>\n<p><a href=\"http://docs.puppetlabs.com/puppetdb/latest/index.html\" rel=\"nofollow\">http://docs.puppetlabs.com/puppetdb/latest/index.html</a></p>\n<h2>Scripts</h2>\n<p>This is not an exhaustive list.</p>\n<h3>puppetdb-fact</h3>\n<p>Queries for a given fact, and lists the hosts that have that fact (along\nwith the value of the fact).  A specific value can be specified as well.\nExample: <code>puppetdb-fact puppetversion</code></p>\n<h3>puppetdb-failed</h3>\n<p>puppetdb-failed queries the puppetdb to find out which hosts failed on\ntheir last puppet check-in.</p>\n<h3>puppetdb-failed-list</h3>\n<p>Queries the puppetdb for hosts that had failures in their last run, and\nprints out all of the things failed.  This is a useful report to send out\nvia email to your team.</p>\n<h3>puppetdb-farmlet</h3>\n<p>Queries the puppetdb for host names, based on zone/role/subrole (our local\nthree-level way of looking up hostnames).</p>\n<h3>puppetdb-hosts</h3>\n<p>List all hosts in the puppetdb.</p>\n<h3>puppetdb-last-successful-run</h3>\n<p>For each host that failed its last puppet run, find out when it last had\na successful puppet run.  This can be useful for determining whether a\nmachine is really \"supported\" any more, especially in conjunction with\npuppetdb-tooquiet.</p>\n<h3>puppetdb-node-classes</h3>\n<p>List the classes deployed on a given system.  Should match the per-host\nclasses.txt file.</p>\n<h3>puppetdb-node-events</h3>\n<p>Lists events that have affected a given node over the last 48 hours\n(configurable) in much the same format as you would have seen running the\n<code>puppet agent -t</code> manually.</p>\n<h3>puppetdb-node-facts</h3>\n<p>Lists facts on a node or set of nodes; this should be grep-able enough to\nlet you find, say, uptime across a large swath of hosts, or similar.</p>\n<h3>puppetdb-node-resources</h3>\n<p>Lists resources deployed on a node or set of nodes.  This is very\npowerful, and the CLI is probably not good enough for what you'd actually\nwant to do with the package.</p>\n<h3>puppetdb-report-uptime</h3>\n<p>Lists kernel versions and facts.</p>\n<h3>puppetdb-resources</h3>\n<p>Search for a given resource type across all hosts, e.g.\n<code>puppetdb-resources Class --match Mysql::Server</code></p>\n<h3>puppetdb-tangled</h3>\n<p>puppetdb-tangled queries the puppetdb to find hosts which are \"tangled\",\nand reports on the associated hosts/events on STDOUT.  A \"tangled\" host\nis defined as one where an event is occurring on that host and over and\nover again over the last several runs, which probably indicates that a\nchange is not successful.  For instance, Package['foo'] removes\nPackage['bar'] and then Package['bar'] is installed afterwards.</p>\n<h3>puppetdb-tooquiet</h3>\n<p>Lists nodes that have not checked into the server for the last 48 hours\n(configurable).  Suitable for sending as an email to your team.</p>\n<h3>puppetdb-wrapper</h3>\n<p>Simple bash script to wrap curl with the values of 'key' and 'cert' that\ncome out of the central configuration file.</p>\n<hr>\n<h2>Local Scripts</h2>\n<p>These scripts may not be helpful to others, but are templates for our own\nuse and show how we interact with facts.  These may be useful to others as\ntemplates.</p>\n<ul>\n<li>puppetdb-host-csv</li>\n<li>puppetdb-manager</li>\n<li>puppetdb-monitor</li>\n<li>puppetdb-report-usage</li>\n<li>puppetdb-uuid-by-host</li>\n</ul>\n<hr>\n<h2>Config Files</h2>\n<h3>/etc/puppetdb/puppetdb.json</h3>\n<p>This should work for talking to an https port, where auth requires your own puppet cert (which will only work as root):</p>\n<pre><code>{\n    \"server\": \"https://{puppetdb_fqdn}:8081\",\n    \"ca\": \"/etc/puppetlabs/puppet/ssl/certs/ca.pem\",\n    \"cert\": \"/etc/puppetlabs/puppet/ssl/certs/{fqdn}.fnal.gov.pem\",\n    \"key\": \"/etc/puppetlabs/puppet/ssl/private_keys/{fqdn}.fnal.gov.pem\",\n    \"api_version\": 4\n}\n</code></pre>\n<p>If you can make queries via http (e.g. without auth):</p>\n<pre><code>{\n    \"server\": \"http://{puppetdb_fqdn}:8080\",\n    \"api_version\": 3\n}\n</code></pre>\n<h3>Environment Variables</h3>\n<p>You can select alternate configuration files by setting <code>PUPPETDB_CONFIG</code>,\ne.g.:</p>\n<pre><code>export PUPPETDB_CONFIG=~/rpm/puppetdb-tools/etc/puppetdb/puppetdb3.json\n</code></pre>\n\n          </div>"}, "last_serial": 6696971, "releases": {"2.1.4": [{"comment_text": "", "digests": {"md5": "6ff8e891ed8610e0b0cd7e0aed1dfe3c", "sha256": "1cab8d7d21f77366c0394df81ade5d8258f9e7a56dfe2c35ca8900bfaa461852"}, "downloads": -1, "filename": "puppetdb_tools-2.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "6ff8e891ed8610e0b0cd7e0aed1dfe3c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7723, "upload_time": "2019-03-19T20:16:05", "upload_time_iso_8601": "2019-03-19T20:16:05.411466Z", "url": "https://files.pythonhosted.org/packages/7d/6a/f0ec12a82bdc9d223425e3d8cc591639ac2bec6a073ee973cc4fef2bf38a/puppetdb_tools-2.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "133a375942ce2ea5a2430fe94d28783a", "sha256": "73800b3d2dbb77c03c728ef1a773089943e67abbd4d4498c2c5c1ebd2cdf853d"}, "downloads": -1, "filename": "puppetdb-tools-2.1.4.tar.gz", "has_sig": false, "md5_digest": "133a375942ce2ea5a2430fe94d28783a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7575, "upload_time": "2019-03-19T20:16:07", "upload_time_iso_8601": "2019-03-19T20:16:07.161300Z", "url": "https://files.pythonhosted.org/packages/6f/04/e406bc153b0898ab83373832fa36c3983779133ff2a0bd84c49422b269ec/puppetdb-tools-2.1.4.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "769cf17cd15a338c1cfbded00fef8e06", "sha256": "c14731191415e0eb1193c14aaaa7583a5671285342b7cc6741feca208eda588f"}, "downloads": -1, "filename": "puppetdb_tools-2.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "769cf17cd15a338c1cfbded00fef8e06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7480, "upload_time": "2019-08-19T18:32:48", "upload_time_iso_8601": "2019-08-19T18:32:48.250792Z", "url": "https://files.pythonhosted.org/packages/53/18/7e713c515d3020f9e92c9310adf77801bb9bf92d99c7f9fc9136c4d46766/puppetdb_tools-2.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "621c938c57ac3b07f7f632faedd4b099", "sha256": "cf06d55eac16b073fe8dad0e7d0a23dba2b2decde1a1b0ea580622fbee3ca00a"}, "downloads": -1, "filename": "puppetdb-tools-2.2.1.tar.gz", "has_sig": false, "md5_digest": "621c938c57ac3b07f7f632faedd4b099", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7343, "upload_time": "2019-08-19T18:32:49", "upload_time_iso_8601": "2019-08-19T18:32:49.656656Z", "url": "https://files.pythonhosted.org/packages/db/57/c1f9e948a1a4c4be6320cd8491479a2a66be2b5db38391851c5aae014efc/puppetdb-tools-2.2.1.tar.gz", "yanked": false}], "2.2.2": [{"comment_text": "", "digests": {"md5": "b7090f6969dc7456fc8f09d06dcc2718", "sha256": "8ba46eb68154ca9a9964f6a0e37a622f1ff0557e2f68b9a4c9d57ed784f8c7d0"}, "downloads": -1, "filename": "puppetdb_tools-2.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b7090f6969dc7456fc8f09d06dcc2718", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7571, "upload_time": "2020-02-25T15:01:47", "upload_time_iso_8601": "2020-02-25T15:01:47.612937Z", "url": "https://files.pythonhosted.org/packages/58/86/4b4ed6b0b18c0450b5b3506427a3c24498d0e4b661b1460a75fb37fb09eb/puppetdb_tools-2.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcdb94f1d5d79e9ba097d95550017747", "sha256": "1e983caa18635ae5ae88ee5bfdf041b410075a85354f459e2ef42899da2c0b75"}, "downloads": -1, "filename": "puppetdb-tools-2.2.2.tar.gz", "has_sig": false, "md5_digest": "fcdb94f1d5d79e9ba097d95550017747", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7442, "upload_time": "2020-02-25T15:01:49", "upload_time_iso_8601": "2020-02-25T15:01:49.046387Z", "url": "https://files.pythonhosted.org/packages/9e/2c/405f8f2cbc45fd971bd805045d44e8ac67adaa9d50ab8e58eacc75091121/puppetdb-tools-2.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b7090f6969dc7456fc8f09d06dcc2718", "sha256": "8ba46eb68154ca9a9964f6a0e37a622f1ff0557e2f68b9a4c9d57ed784f8c7d0"}, "downloads": -1, "filename": "puppetdb_tools-2.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b7090f6969dc7456fc8f09d06dcc2718", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7571, "upload_time": "2020-02-25T15:01:47", "upload_time_iso_8601": "2020-02-25T15:01:47.612937Z", "url": "https://files.pythonhosted.org/packages/58/86/4b4ed6b0b18c0450b5b3506427a3c24498d0e4b661b1460a75fb37fb09eb/puppetdb_tools-2.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcdb94f1d5d79e9ba097d95550017747", "sha256": "1e983caa18635ae5ae88ee5bfdf041b410075a85354f459e2ef42899da2c0b75"}, "downloads": -1, "filename": "puppetdb-tools-2.2.2.tar.gz", "has_sig": false, "md5_digest": "fcdb94f1d5d79e9ba097d95550017747", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7442, "upload_time": "2020-02-25T15:01:49", "upload_time_iso_8601": "2020-02-25T15:01:49.046387Z", "url": "https://files.pythonhosted.org/packages/9e/2c/405f8f2cbc45fd971bd805045d44e8ac67adaa9d50ab8e58eacc75091121/puppetdb-tools-2.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:29 2020"}