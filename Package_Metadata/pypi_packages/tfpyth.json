{"info": {"author": "Andreas @blackhc Kirsch", "author_email": "blackhc+tfpyth@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# TfPyTh\n\n[![Build Status](https://travis-ci.com/BlackHC/tfpyth.svg?branch=master)](https://travis-ci.com/BlackHC/tfpyth) [![codecov](https://codecov.io/gh/BlackHC/tfpyth/branch/master/graph/badge.svg)](https://codecov.io/gh/BlackHC/tfpyth)\n\nPutting TensorFlow back in PyTorch, back in TensorFlow (differentiable TensorFlow PyTorch adapters).\n\n> A light-weight differentiable adapter library to make TensorFlow and PyTorch interact.\n\n## Install\n\n```\npip install tfpyth\n```\n\n### Example\n\n```python\nimport tensorflow as tf\nimport torch as th\nimport numpy as np\nimport tfpyth\n\nsession = tf.Session()\n\ndef get_torch_function():\n    a = tf.placeholder(tf.float32, name='a')\n    b = tf.placeholder(tf.float32, name='b')\n    c = 3 * a + 4 * b * b\n\n    f = tfpyth.torch_from_tensorflow(session, [a, b], c).apply\n    return f\n\nf = get_torch_function()\na = th.tensor(1, dtype=th.float32, requires_grad=True)\nb = th.tensor(3, dtype=th.float32, requires_grad=True)\nx = f(a, b)\n\nassert x == 39.\n\nx.backward()\n\nassert np.allclose((a.grad, b.grad), (3., 24.))\n```\n\n## What it's got\n\n### `torch_from_tensorflow`\n\nCreates a PyTorch function that is differentiable by evaluating a TensorFlow output tensor given input placeholders.\n\n### `eager_tensorflow_from_torch`\n\nCreates an eager Tensorflow function from a PyTorch function.\n\n### `tensorflow_from_torch`\n\nCreates a TensorFlow op/tensor from a PyTorch function.\n\n## Future work\n\n- [ ] support JAX\n- [ ] support higher-order derivatives\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/blackhc/tfpyth", "keywords": "ml machine learning", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tfpyth", "package_url": "https://pypi.org/project/tfpyth/", "platform": "", "project_url": "https://pypi.org/project/tfpyth/", "project_urls": {"Homepage": "https://github.com/blackhc/tfpyth"}, "release_url": "https://pypi.org/project/tfpyth/1.0.1/", "requires_dist": ["tensorflow (~=1.14)", "torch (~=1.1)", "check-manifest ; extra == 'dev'", "coverage ; extra == 'test'", "codecov ; extra == 'test'", "pytest ; extra == 'test'", "pytest-cov ; extra == 'test'"], "requires_python": "", "summary": "Putting TensorFlow back in PyTorch, back in Tensorflow (differentiable TensorFlow PyTorch adapters).", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TfPyTh</h1>\n<p><a href=\"https://travis-ci.com/BlackHC/tfpyth\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e58f5d76e7d643093346e8aec9cc87349c0e203b/68747470733a2f2f7472617669732d63692e636f6d2f426c61636b48432f7466707974682e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/gh/BlackHC/tfpyth\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7b2229040175502bfe8dbd228a25c4057e3784d0/68747470733a2f2f636f6465636f762e696f2f67682f426c61636b48432f7466707974682f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p>Putting TensorFlow back in PyTorch, back in TensorFlow (differentiable TensorFlow PyTorch adapters).</p>\n<blockquote>\n<p>A light-weight differentiable adapter library to make TensorFlow and PyTorch interact.</p>\n</blockquote>\n<h2>Install</h2>\n<pre><code>pip install tfpyth\n</code></pre>\n<h3>Example</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tensorflow</span> <span class=\"k\">as</span> <span class=\"nn\">tf</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torch</span> <span class=\"k\">as</span> <span class=\"nn\">th</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tfpyth</span>\n\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">get_torch_function</span><span class=\"p\">():</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">placeholder</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'a'</span><span class=\"p\">)</span>\n    <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">placeholder</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'b'</span><span class=\"p\">)</span>\n    <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"mi\">3</span> <span class=\"o\">*</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"mi\">4</span> <span class=\"o\">*</span> <span class=\"n\">b</span> <span class=\"o\">*</span> <span class=\"n\">b</span>\n\n    <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">tfpyth</span><span class=\"o\">.</span><span class=\"n\">torch_from_tensorflow</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">apply</span>\n    <span class=\"k\">return</span> <span class=\"n\">f</span>\n\n<span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">get_torch_function</span><span class=\"p\">()</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">th</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">th</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">,</span> <span class=\"n\">requires_grad</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">th</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">th</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">,</span> <span class=\"n\">requires_grad</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">x</span> <span class=\"o\">==</span> <span class=\"mf\">39.</span>\n\n<span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">backward</span><span class=\"p\">()</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">((</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">grad</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">grad</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mf\">3.</span><span class=\"p\">,</span> <span class=\"mf\">24.</span><span class=\"p\">))</span>\n</pre>\n<h2>What it's got</h2>\n<h3><code>torch_from_tensorflow</code></h3>\n<p>Creates a PyTorch function that is differentiable by evaluating a TensorFlow output tensor given input placeholders.</p>\n<h3><code>eager_tensorflow_from_torch</code></h3>\n<p>Creates an eager Tensorflow function from a PyTorch function.</p>\n<h3><code>tensorflow_from_torch</code></h3>\n<p>Creates a TensorFlow op/tensor from a PyTorch function.</p>\n<h2>Future work</h2>\n<ul>\n<li>[ ] support JAX</li>\n<li>[ ] support higher-order derivatives</li>\n</ul>\n\n          </div>"}, "last_serial": 5513099, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "2bcecc99f6ac84824b3ffb903f98a9d8", "sha256": "c007737b4479291606f5578f379cda73156db674839f63c65ac0be58cd02cbf7"}, "downloads": -1, "filename": "tfpyth-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2bcecc99f6ac84824b3ffb903f98a9d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3984, "upload_time": "2019-07-10T16:15:41", "upload_time_iso_8601": "2019-07-10T16:15:41.081607Z", "url": "https://files.pythonhosted.org/packages/3e/17/15ec62f99cb4d8118a899f4b97d2574f67e9d71db4c0c9f40866f09a0e1f/tfpyth-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9cca5447a5d146fff407dece198df2e", "sha256": "80fbf7c5e7d6664d5a6ab7f3609fbe6f497b2663586d8500bf1cbe8b2b211994"}, "downloads": -1, "filename": "tfpyth-1.0.tar.gz", "has_sig": false, "md5_digest": "d9cca5447a5d146fff407dece198df2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3742, "upload_time": "2019-07-10T16:15:43", "upload_time_iso_8601": "2019-07-10T16:15:43.011039Z", "url": "https://files.pythonhosted.org/packages/a6/24/c2b6bc8b87d8afab7bdce80ff56fc62a928fc8614b2854d0553cd3543d18/tfpyth-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "6cda0cedd9c7d32be3966d3141dff934", "sha256": "8d402bf051edfc4ac2777ff6bb88b5daafb867cf98839937b39b987b21141466"}, "downloads": -1, "filename": "tfpyth-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6cda0cedd9c7d32be3966d3141dff934", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4170, "upload_time": "2019-07-10T17:03:42", "upload_time_iso_8601": "2019-07-10T17:03:42.154471Z", "url": "https://files.pythonhosted.org/packages/6d/6c/2adef3abd6923846b6557c13a9425f838aec05779541d14bf09c2118121c/tfpyth-1.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6cda0cedd9c7d32be3966d3141dff934", "sha256": "8d402bf051edfc4ac2777ff6bb88b5daafb867cf98839937b39b987b21141466"}, "downloads": -1, "filename": "tfpyth-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6cda0cedd9c7d32be3966d3141dff934", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4170, "upload_time": "2019-07-10T17:03:42", "upload_time_iso_8601": "2019-07-10T17:03:42.154471Z", "url": "https://files.pythonhosted.org/packages/6d/6c/2adef3abd6923846b6557c13a9425f838aec05779541d14bf09c2118121c/tfpyth-1.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:54:23 2020"}