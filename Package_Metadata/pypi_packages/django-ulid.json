{"info": {"author": "Andrew Hawker", "author_email": "andrew.r.hawker@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "django-ulid\n===========\n\n|Build Status| |codecov| |Code Climate| |Issue Count|\n\n|PyPI Version| |PyPI Versions|\n\n`Universally Unique Lexicographically Sortable Identifier\n(ULID) <https://github.com/alizain/ulid>`__ support in\n`Django <https://www.djangoproject.com/>`__.\n\nStatus\n~~~~~~\n\nThis project is actively maintained.\n\nInstallation\n~~~~~~~~~~~~\n\nTo install django-ulid from `pip <https://pypi.python.org/pypi/pip>`__:\n\n.. code:: bash\n\n       $ pip install django-ulid\n\nTo install ulid from source:\n\n.. code:: bash\n\n       $ git clone git@github.com:ahawker/django-ulid.git\n       $ cd django-ulid && python setup.py install\n\nUsage\n~~~~~\n\nAdding a ULID field to your Django models is straightforward. It can be\na normal field or a primary key.\n\n.. code:: python\n\n   from django.db import models\n   from django_ulid.models import default, ULIDField\n\n   class Person(models.Model):\n       id = ULIDField(default=default, primary_key=True, editable=False)\n\nPassing in ``default`` to the ``ULIDField`` will automatically create a\ndefault value using the\n`ulid.new <https://ulid.readthedocs.io/en/latest/api.html#ulid.api.new>`__\nfunction. If you do not want a default value, ``None`` by default, feel\nfree to omit it.\n\n.. code:: python\n\n   from django.db import models\n   from django_ulid.models import ULIDField\n\n   class Person(models.Model):\n       optional_id = ULIDField()\n\nAdding a ULID field to your `Django REST\nFramework <https://www.django-rest-framework.org/>`__ serializers is\nalso straightforward.\n\nSimply importing the ``django_ulid.serializers`` module will\nautomatically register the ``ULIDField`` serializer by overriding the\n`serializer_field_mapping <https://www.django-rest-framework.org/api-guide/serializers/#customizing-field-mappings>`__\non the default\n`ModelSerializer <https://www.django-rest-framework.org/api-guide/serializers/#modelserializer>`__.\n\n.. code:: python\n\n   from django_ulid import serializers\n\nIf you are using a ULID as a primary key on a model, you need to create\na custom\n`PrimaryKeyRelatedField <https://www.django-rest-framework.org/api-guide/relations/#primarykeyrelatedfield>`__\nto automatically serialize the instance through the foreign key.\n\n.. code:: python\n\n   import functools\n   from django_ulid.serializers import ULIDField\n   from rest_framework import serializers\n\n   PersonPrimaryKeyRelatedField = functools.partial(serializers.PrimaryKeyRelatedField,\n                                                    allow_null=True,\n                                                    allow_empty=True,\n                                                    pk_field=ULIDField(),\n                                                    queryset=Person.objects.all())\n\n   class OrganizationSerializer(serializers.ModelSerializer):\n       owner = PersonPrimaryKeyRelatedField()\n\nContributing\n~~~~~~~~~~~~\n\nIf you would like to contribute, simply fork the repository, push your\nchanges and send a pull request. Pull requests will be brought into the\n``master`` branch via a rebase and fast-forward merge with the goal of\nhaving a linear branch history with no merge commits.\n\nLicense\n~~~~~~~\n\n`Apache 2.0 <LICENSE>`__\n\nDependencies\n~~~~~~~~~~~~\n\n-  `Django <https://github.com/django/django>`__\n-  `ulid-py <https://github.com/ahawker/ulid>`__\n\n.. |Build Status| image:: https://travis-ci.org/ahawker/django-ulid.svg?branch=master\n   :target: https://travis-ci.org/ahawker/django-ulid\n.. |codecov| image:: https://codecov.io/gh/ahawker/django-ulid/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/ahawker/django-ulid\n.. |Code Climate| image:: https://codeclimate.com/github/ahawker/django-ulid/badges/gpa.svg\n   :target: https://codeclimate.com/github/ahawker/django-ulid\n.. |Issue Count| image:: https://codeclimate.com/github/ahawker/django-ulid/badges/issue_count.svg\n   :target: https://codeclimate.com/github/ahawker/django-ulid\n.. |PyPI Version| image:: https://badge.fury.io/py/django-ulid.svg\n   :target: https://badge.fury.io/py/django-ulid\n.. |PyPI Versions| image:: https://img.shields.io/pypi/pyversions/django-ulid.svg\n   :target: https://pypi.python.org/pypi/django-ulid\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ahawker/django-ulid", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "django-ulid", "package_url": "https://pypi.org/project/django-ulid/", "platform": "", "project_url": "https://pypi.org/project/django-ulid/", "project_urls": {"Homepage": "https://github.com/ahawker/django-ulid"}, "release_url": "https://pypi.org/project/django-ulid/0.0.3/", "requires_dist": ["Django (>=2.1)", "ulid-py (>=0.0.9)"], "requires_python": ">=3.5", "summary": "Universally Unique Lexicographically Sortable Identifier (ULID) support in Django", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/ahawker/django-ulid\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5628631aa0705e07884ed17ead34c420980a42cc/68747470733a2f2f7472617669732d63692e6f72672f616861776b65722f646a616e676f2d756c69642e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/gh/ahawker/django-ulid\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e7c8b3f04171ce6e2b24fab5e14a11d08de3ad11/68747470733a2f2f636f6465636f762e696f2f67682f616861776b65722f646a616e676f2d756c69642f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a> <a href=\"https://codeclimate.com/github/ahawker/django-ulid\" rel=\"nofollow\"><img alt=\"Code Climate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b48bc4080e8992774dad2951d483eb37ec5bdc2d/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f616861776b65722f646a616e676f2d756c69642f6261646765732f6770612e737667\"></a> <a href=\"https://codeclimate.com/github/ahawker/django-ulid\" rel=\"nofollow\"><img alt=\"Issue Count\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/71b3535321b38cb9d4ddbb4340698d36868459e1/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f616861776b65722f646a616e676f2d756c69642f6261646765732f69737375655f636f756e742e737667\"></a></p>\n<p><a href=\"https://badge.fury.io/py/django-ulid\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ab6510986667350a933043f23b4dae4d018f058/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d756c69642e737667\"></a> <a href=\"https://pypi.python.org/pypi/django-ulid\" rel=\"nofollow\"><img alt=\"PyPI Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3375529824a193438940a7b25c0d36266f6941f5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f646a616e676f2d756c69642e737667\"></a></p>\n<p><a href=\"https://github.com/alizain/ulid\" rel=\"nofollow\">Universally Unique Lexicographically Sortable Identifier\n(ULID)</a> support in\n<a href=\"https://www.djangoproject.com/\" rel=\"nofollow\">Django</a>.</p>\n<div id=\"status\">\n<h2>Status</h2>\n<p>This project is actively maintained.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install django-ulid from <a href=\"https://pypi.python.org/pypi/pip\" rel=\"nofollow\">pip</a>:</p>\n<pre>$ pip install django-ulid\n</pre>\n<p>To install ulid from source:</p>\n<pre>$ git clone git@github.com:ahawker/django-ulid.git\n$ <span class=\"nb\">cd</span> django-ulid <span class=\"o\">&amp;&amp;</span> python setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Adding a ULID field to your Django models is straightforward. It can be\na normal field or a primary key.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_ulid.models</span> <span class=\"kn\">import</span> <span class=\"n\">default</span><span class=\"p\">,</span> <span class=\"n\">ULIDField</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">ULIDField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">default</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">editable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>Passing in <tt>default</tt> to the <tt>ULIDField</tt> will automatically create a\ndefault value using the\n<a href=\"https://ulid.readthedocs.io/en/latest/api.html#ulid.api.new\" rel=\"nofollow\">ulid.new</a>\nfunction. If you do not want a default value, <tt>None</tt> by default, feel\nfree to omit it.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_ulid.models</span> <span class=\"kn\">import</span> <span class=\"n\">ULIDField</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">optional_id</span> <span class=\"o\">=</span> <span class=\"n\">ULIDField</span><span class=\"p\">()</span>\n</pre>\n<p>Adding a ULID field to your <a href=\"https://www.django-rest-framework.org/\" rel=\"nofollow\">Django REST\nFramework</a> serializers is\nalso straightforward.</p>\n<p>Simply importing the <tt>django_ulid.serializers</tt> module will\nautomatically register the <tt>ULIDField</tt> serializer by overriding the\n<a href=\"https://www.django-rest-framework.org/api-guide/serializers/#customizing-field-mappings\" rel=\"nofollow\">serializer_field_mapping</a>\non the default\n<a href=\"https://www.django-rest-framework.org/api-guide/serializers/#modelserializer\" rel=\"nofollow\">ModelSerializer</a>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_ulid</span> <span class=\"kn\">import</span> <span class=\"n\">serializers</span>\n</pre>\n<p>If you are using a ULID as a primary key on a model, you need to create\na custom\n<a href=\"https://www.django-rest-framework.org/api-guide/relations/#primarykeyrelatedfield\" rel=\"nofollow\">PrimaryKeyRelatedField</a>\nto automatically serialize the instance through the foreign key.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">functools</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_ulid.serializers</span> <span class=\"kn\">import</span> <span class=\"n\">ULIDField</span>\n<span class=\"kn\">from</span> <span class=\"nn\">rest_framework</span> <span class=\"kn\">import</span> <span class=\"n\">serializers</span>\n\n<span class=\"n\">PersonPrimaryKeyRelatedField</span> <span class=\"o\">=</span> <span class=\"n\">functools</span><span class=\"o\">.</span><span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">PrimaryKeyRelatedField</span><span class=\"p\">,</span>\n                                                 <span class=\"n\">allow_null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                                 <span class=\"n\">allow_empty</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                                 <span class=\"n\">pk_field</span><span class=\"o\">=</span><span class=\"n\">ULIDField</span><span class=\"p\">(),</span>\n                                                 <span class=\"n\">queryset</span><span class=\"o\">=</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">())</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">OrganizationSerializer</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"n\">owner</span> <span class=\"o\">=</span> <span class=\"n\">PersonPrimaryKeyRelatedField</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>If you would like to contribute, simply fork the repository, push your\nchanges and send a pull request. Pull requests will be brought into the\n<tt>master</tt> branch via a rebase and fast-forward merge with the goal of\nhaving a linear branch history with no merge commits.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><a href=\"LICENSE\" rel=\"nofollow\">Apache 2.0</a></p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li><a href=\"https://github.com/django/django\" rel=\"nofollow\">Django</a></li>\n<li><a href=\"https://github.com/ahawker/ulid\" rel=\"nofollow\">ulid-py</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6166045, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "a823d112d4acc9b69028bd7fce7bcab5", "sha256": "8bbede606c145c43ccde9a95f62a706041c3ed214664d7933778acbbeb584663"}, "downloads": -1, "filename": "django_ulid-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a823d112d4acc9b69028bd7fce7bcab5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 9130, "upload_time": "2019-11-20T00:44:12", "upload_time_iso_8601": "2019-11-20T00:44:12.362304Z", "url": "https://files.pythonhosted.org/packages/21/ef/edbde3077466d418be330201476cf085b3d672195c333b8e76e7b1814404/django_ulid-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba0e1db3d10b5cd9ce344e470de408ca", "sha256": "c7d0f163b2e85032b5faed7de45c1e6c8b683d1f0e6320f2613e6871451db233"}, "downloads": -1, "filename": "django-ulid-0.0.2.tar.gz", "has_sig": false, "md5_digest": "ba0e1db3d10b5cd9ce344e470de408ca", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8117, "upload_time": "2019-11-20T00:44:14", "upload_time_iso_8601": "2019-11-20T00:44:14.641077Z", "url": "https://files.pythonhosted.org/packages/98/85/f32bf3361f584085a83852347497bd033952d24f1e6e8495436db43ba1f9/django-ulid-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ce765bb4527a65e53e994e64398db59e", "sha256": "7a1ffefeee41eafbdfb5c0aae2f6f36d9ebe7e061aba8b93707d087538064e59"}, "downloads": -1, "filename": "django_ulid-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ce765bb4527a65e53e994e64398db59e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 9339, "upload_time": "2019-11-20T01:29:54", "upload_time_iso_8601": "2019-11-20T01:29:54.235232Z", "url": "https://files.pythonhosted.org/packages/e6/1c/8c4b49691185696bfde3b5c0489e4e8893a2aa0ede6745f8bd3c076e99f3/django_ulid-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7566a78b29bd3b34822e5611bf2a957e", "sha256": "b77b98ff6d0e9f8ec5b78cbe9da849ba64aaa077d6dc576d8b2547e867cd09be"}, "downloads": -1, "filename": "django-ulid-0.0.3.tar.gz", "has_sig": false, "md5_digest": "7566a78b29bd3b34822e5611bf2a957e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8310, "upload_time": "2019-11-20T01:29:55", "upload_time_iso_8601": "2019-11-20T01:29:55.531266Z", "url": "https://files.pythonhosted.org/packages/ed/ee/4d483225427019f2f3396c4cae06263ed7d7c5dcc743858b676a5f78fbf8/django-ulid-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ce765bb4527a65e53e994e64398db59e", "sha256": "7a1ffefeee41eafbdfb5c0aae2f6f36d9ebe7e061aba8b93707d087538064e59"}, "downloads": -1, "filename": "django_ulid-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ce765bb4527a65e53e994e64398db59e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 9339, "upload_time": "2019-11-20T01:29:54", "upload_time_iso_8601": "2019-11-20T01:29:54.235232Z", "url": "https://files.pythonhosted.org/packages/e6/1c/8c4b49691185696bfde3b5c0489e4e8893a2aa0ede6745f8bd3c076e99f3/django_ulid-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7566a78b29bd3b34822e5611bf2a957e", "sha256": "b77b98ff6d0e9f8ec5b78cbe9da849ba64aaa077d6dc576d8b2547e867cd09be"}, "downloads": -1, "filename": "django-ulid-0.0.3.tar.gz", "has_sig": false, "md5_digest": "7566a78b29bd3b34822e5611bf2a957e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8310, "upload_time": "2019-11-20T01:29:55", "upload_time_iso_8601": "2019-11-20T01:29:55.531266Z", "url": "https://files.pythonhosted.org/packages/ed/ee/4d483225427019f2f3396c4cae06263ed7d7c5dcc743858b676a5f78fbf8/django-ulid-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:15 2020"}