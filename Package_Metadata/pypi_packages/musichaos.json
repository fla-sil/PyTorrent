{"info": {"author": "Timo Furrer", "author_email": "tuxtimo@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Other Audience", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: Microsoft :: Windows :: Windows 7", "Operating System :: Microsoft :: Windows :: Windows XP", "Operating System :: OS Independent", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation", "Topic :: Education :: Testing", "Topic :: Software Development", "Topic :: Software Development :: Testing"], "description": "Musichaos\n=========\n\n    Bring tidiness into your music chaos\n\n--------------\n\n``musichaos`` is a tool to tidy up the chaos in your local music library\non a file basis. It pulls the tags from the audio files and structures\nthe audio files like this:\n\n::\n\n    ~/music\n    \u2502   \u251c\u2500\u2500 Artist 01\n    \u2502   \u2502   \u2514\u2500\u2500 Album 01\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500 Title 01\n    \u2502   \u2502   \u2502   \u2502\u2500\u2500 Title 02\n    \u2502   \u251c\u2500\u2500 Artist 02\n    \u2502   \u2502   \u2514\u2500\u2500 Album 01\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500 Title 01\n    \u2502   \u2502   \u2502   \u2502\u2500\u2500 Title 02\n\nInstallation\n------------\n\nFrom pip:\n\n.. code:: bash\n\n    pip install musichaos\n\nFrom source:\n\n::\n\n    git clone https://github.com/timofurrer/musichaos\n    cd musichaos\n    pip install .\n\nUsage - Command Line Interface\n------------------------------\n\n``musichaos`` can be used as a CLI tool.\n\nTo use it just specify the root directory which contains your music\nchaos and a target directory where to put the clean structure. They can\npoint to the same location.\n\n::\n\n    musichaos ~/downloads ~/music\n\nThis will end up in the following structure\n\n::\n\n    ~/music\n    \u2502   \u251c\u2500\u2500 Artist 01\n    \u2502   \u2502   \u2514\u2500\u2500 Album 01\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500 Title 01\n    \u2502   \u2502   \u2502   \u2502\u2500\u2500 Title 02\n    \u2502   \u251c\u2500\u2500 Artist 02\n    \u2502   \u2502   \u2514\u2500\u2500 Album 01\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500 Title 01\n    \u2502   \u2502   \u2502   \u2502\u2500\u2500 Title 02\n\nIf you do not want to move the audio file but link them instead - run\nthe following command:\n\n::\n\n    musichaos ~/downloads ~/music --link\n\nThis will end up in the following structure\n\n::\n\n    ~/music\n    \u2502   \u251c\u2500\u2500 Artist 01\n    \u2502   \u2502   \u2514\u2500\u2500 Album 01\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500 Title 01 -> ../../../downloads/Some_weird_audio_file_01.mp3\n    \u2502   \u2502   \u2502   \u2502\u2500\u2500 Title 02 -> ../../../downloads/Some_weird_audio_file_02.mp3\n    \u2502   \u251c\u2500\u2500 Artist 02\n    \u2502   \u2502   \u2514\u2500\u2500 Album 01\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500 Title 01 -> ../../../downloads/Some_weird_audio_file_03.mp3\n    \u2502   \u2502   \u2502   \u2502\u2500\u2500 Title 02 -> ../../../downloads/Some_weird_audio_file_04.mp3\n\nIf you are not sure what ``musichaos`` will do - just do a dry run:\n\n::\n\n    musichaos ~/downloads ~/music --dry-run\n\nLet's have a look at the help message:\n\n::\n\n    Usage: __main__.py [OPTIONS] ROOTDIR TARGETDIR\n\n      Tidy up your music chaos.\n\n    Options:\n      -l, --link  Link audio files instead of move.\n      --dry-run   Run a dry run.\n      --help      Show this message and exit.\n\nUsage - Python Package\n----------------------\n\n``musichaos`` can be imported in your python project, too. Just install\nit in your python environment and ``import musichaos``:\n\n.. code:: python\n\n    from musichaos import Musichaos\n\n    chaos = Musichaos(rootdir)\n    chaos.tidy_up(targetdir, link, dry_run)\n\nSupported Audio File Formats\n----------------------------\n\nAt the moment the following file formats are supported:\n\n-  ASF (\\*.asf)\n-  FLAC (\\*.flac)\n-  M4A (\\*.m4a)\n-  Monkey's Audio (\\*.ape)\n-  MP3 (\\*.mp3)\n-  Musepack (*.mpc, *.mp+, \\*.mpp)\n-  Ogg Opus, Ogg FLAC, Ogg Speex, Ogg Theora, Ogg Vorbis (*.ogg, *.ogv,\n   *.oga, *.ogx, *.ogm, *.spx, \\*opus)\n-  True Audio (\\*.tta)\n-  WavPack (\\*.wv)\n-  OptimFROG (\\*.mp3)\n-  AIFF (*.aiff, *.aif, \\*.aifc)\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/timofurrer/musichaos", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/timofurrer/musichaos", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "musichaos", "package_url": "https://pypi.org/project/musichaos/", "platform": "Linux,Windows,MAC OS X", "project_url": "https://pypi.org/project/musichaos/", "project_urls": {"Download": "https://github.com/timofurrer/musichaos", "Homepage": "https://github.com/timofurrer/musichaos"}, "release_url": "https://pypi.org/project/musichaos/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "tool to tidy up your music chaos", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Musichaos<br>=========<br><br>    Bring tidiness into your music chaos<br><br>--------------<br><br>``musichaos`` is a tool to tidy up the chaos in your local music library<br>on a file basis. It pulls the tags from the audio files and structures<br>the audio files like this:<br><br>::<br><br>    ~/music<br>    \u2502   \u251c\u2500\u2500 Artist 01<br>    \u2502   \u2502   \u2514\u2500\u2500 Album 01<br>    \u2502   \u2502   \u2502   \u2514\u2500\u2500 Title 01<br>    \u2502   \u2502   \u2502   \u2502\u2500\u2500 Title 02<br>    \u2502   \u251c\u2500\u2500 Artist 02<br>    \u2502   \u2502   \u2514\u2500\u2500 Album 01<br>    \u2502   \u2502   \u2502   \u2514\u2500\u2500 Title 01<br>    \u2502   \u2502   \u2502   \u2502\u2500\u2500 Title 02<br><br>Installation<br>------------<br><br>From pip:<br><br>.. code:: bash<br><br>    pip install musichaos<br><br>From source:<br><br>::<br><br>    git clone https://github.com/timofurrer/musichaos<br>    cd musichaos<br>    pip install .<br><br>Usage - Command Line Interface<br>------------------------------<br><br>``musichaos`` can be used as a CLI tool.<br><br>To use it just specify the root directory which contains your music<br>chaos and a target directory where to put the clean structure. They can<br>point to the same location.<br><br>::<br><br>    musichaos ~/downloads ~/music<br><br>This will end up in the following structure<br><br>::<br><br>    ~/music<br>    \u2502   \u251c\u2500\u2500 Artist 01<br>    \u2502   \u2502   \u2514\u2500\u2500 Album 01<br>    \u2502   \u2502   \u2502   \u2514\u2500\u2500 Title 01<br>    \u2502   \u2502   \u2502   \u2502\u2500\u2500 Title 02<br>    \u2502   \u251c\u2500\u2500 Artist 02<br>    \u2502   \u2502   \u2514\u2500\u2500 Album 01<br>    \u2502   \u2502   \u2502   \u2514\u2500\u2500 Title 01<br>    \u2502   \u2502   \u2502   \u2502\u2500\u2500 Title 02<br><br>If you do not want to move the audio file but link them instead - run<br>the following command:<br><br>::<br><br>    musichaos ~/downloads ~/music --link<br><br>This will end up in the following structure<br><br>::<br><br>    ~/music<br>    \u2502   \u251c\u2500\u2500 Artist 01<br>    \u2502   \u2502   \u2514\u2500\u2500 Album 01<br>    \u2502   \u2502   \u2502   \u2514\u2500\u2500 Title 01 -&gt; ../../../downloads/Some_weird_audio_file_01.mp3<br>    \u2502   \u2502   \u2502   \u2502\u2500\u2500 Title 02 -&gt; ../../../downloads/Some_weird_audio_file_02.mp3<br>    \u2502   \u251c\u2500\u2500 Artist 02<br>    \u2502   \u2502   \u2514\u2500\u2500 Album 01<br>    \u2502   \u2502   \u2502   \u2514\u2500\u2500 Title 01 -&gt; ../../../downloads/Some_weird_audio_file_03.mp3<br>    \u2502   \u2502   \u2502   \u2502\u2500\u2500 Title 02 -&gt; ../../../downloads/Some_weird_audio_file_04.mp3<br><br>If you are not sure what ``musichaos`` will do - just do a dry run:<br><br>::<br><br>    musichaos ~/downloads ~/music --dry-run<br><br>Let's have a look at the help message:<br><br>::<br><br>    Usage: __main__.py [OPTIONS] ROOTDIR TARGETDIR<br><br>      Tidy up your music chaos.<br><br>    Options:<br>      -l, --link  Link audio files instead of move.<br>      --dry-run   Run a dry run.<br>      --help      Show this message and exit.<br><br>Usage - Python Package<br>----------------------<br><br>``musichaos`` can be imported in your python project, too. Just install<br>it in your python environment and ``import musichaos``:<br><br>.. code:: python<br><br>    from musichaos import Musichaos<br><br>    chaos = Musichaos(rootdir)<br>    chaos.tidy_up(targetdir, link, dry_run)<br><br>Supported Audio File Formats<br>----------------------------<br><br>At the moment the following file formats are supported:<br><br>-  ASF (\\*.asf)<br>-  FLAC (\\*.flac)<br>-  M4A (\\*.m4a)<br>-  Monkey's Audio (\\*.ape)<br>-  MP3 (\\*.mp3)<br>-  Musepack (*.mpc, *.mp+, \\*.mpp)<br>-  Ogg Opus, Ogg FLAC, Ogg Speex, Ogg Theora, Ogg Vorbis (*.ogg, *.ogv,<br>   *.oga, *.ogx, *.ogm, *.spx, \\*opus)<br>-  True Audio (\\*.tta)<br>-  WavPack (\\*.wv)<br>-  OptimFROG (\\*.mp3)<br>-  AIFF (*.aiff, *.aif, \\*.aifc)<br>\n          </div>"}, "last_serial": 1936864, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a2d7caaf49e699c6ad6e8590ad4fd53e", "sha256": "b536858523824c865da535958c66afd7c365ccf7095c37ca7f17a7ae90f8a741"}, "downloads": -1, "filename": "musichaos-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a2d7caaf49e699c6ad6e8590ad4fd53e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5062, "upload_time": "2016-02-03T03:39:13", "upload_time_iso_8601": "2016-02-03T03:39:13.353752Z", "url": "https://files.pythonhosted.org/packages/8e/d9/d2aaa21e0ce4ef3ed7ea0bd49619157f8c7c982ea22b66e621e569be337f/musichaos-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "9e4670d9445f1ca19f391bc31294c866", "sha256": "570cd88d4087b751cb8d26e891f3225b823ad0dc1e147f3ec66e7b7075ed0d4c"}, "downloads": -1, "filename": "musichaos-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9e4670d9445f1ca19f391bc31294c866", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5064, "upload_time": "2016-02-03T03:42:49", "upload_time_iso_8601": "2016-02-03T03:42:49.631771Z", "url": "https://files.pythonhosted.org/packages/fa/fe/bdd753bda062c8fe937f0dea64c217e23dd5d8c64ae4f3f5f1eefd654d9a/musichaos-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9e4670d9445f1ca19f391bc31294c866", "sha256": "570cd88d4087b751cb8d26e891f3225b823ad0dc1e147f3ec66e7b7075ed0d4c"}, "downloads": -1, "filename": "musichaos-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9e4670d9445f1ca19f391bc31294c866", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5064, "upload_time": "2016-02-03T03:42:49", "upload_time_iso_8601": "2016-02-03T03:42:49.631771Z", "url": "https://files.pythonhosted.org/packages/fa/fe/bdd753bda062c8fe937f0dea64c217e23dd5d8c64ae4f3f5f1eefd654d9a/musichaos-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:09 2020"}