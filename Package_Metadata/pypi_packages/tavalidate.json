{"info": {"author": "Douglas Liu", "author_email": "douglas@sohoffice.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "tavalidate, utilities to help you validate [Tavern](https://tavern.readthedocs.io/en/latest/) response.\n\nInstallation\n------------\n\nTavalidate can be installed through pip.\n\n```\npip install tavalidate\n```\n\nXML Validate\n----\n\nTavern has great built-in Json support, but things are difficult when it comes to XML.\nUse tavalidate.xmlv package to validate XML response.\n\nXML validation example:\n\n```\nresponse:\n  status_code: 200\n  verify_response_with:\n    function: tavalidate:assert_xml\n    extra_kwargs:\n      expected: |\n        <foo attr=\"!anystr\">\n          <bar attr2=\"baz\">!anyint</bar>\n        </foo>\n```\n\nSimply put, pass the expected xml as an argument to the `tavalidate.xmlv.validate` function. The\nfunction will validate the xml structure, node value and attribute value.\n\n### extra_kwargs\n\nBelow are the supported extra kwargs of `tavalidate.xmlv.validate` function.\n\n#### expected\n\nThis is the expected XML string.\n\nYou may use some (not all) of the tavern magic values to match data of your specified type:\n\n- !anything: This matches value of any type.\n- !anystr: Matches any string\n- !anyint: Matches any integer\n- !anyfloat: Matches any float\n- !anybool: Matches any boolean\n\n#### strict\n\nUse `strict: True` if you want to make sure there's no extra tag in the response.\n\nXML Save\n----\n\nUse tavalidate.xmlv package to save XML response.\n\nIt allows you to use [XPath](https://en.wikipedia.org/wiki/XPath) to specify the value to save\ninside the xml document. If the XPath somehow selects multiple nodes, tavalidate will print a\nwarning, but the first value will still be saved.\n\nXML save example:\n\n```\nresponse:\n  save:\n    $ext:\n      function: tavalidate:save_xml\n      extra_kwargs:\n        variables:\n          bar: '/foo/bar/text()'\n          at1: '/foo/@at1'\n```\n\n\nLogging\n-------\n\nConfigure the logger `tavalidate` so you can see the response body and other logs in\nDEBUG level.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sohoffice/tavalidate", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "tavalidate", "package_url": "https://pypi.org/project/tavalidate/", "platform": "", "project_url": "https://pypi.org/project/tavalidate/", "project_urls": {"Homepage": "https://github.com/sohoffice/tavalidate"}, "release_url": "https://pypi.org/project/tavalidate/0.0.5/", "requires_dist": null, "requires_python": "", "summary": "Utilities to help you validate and save Tavern response.", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>tavalidate, utilities to help you validate <a href=\"https://tavern.readthedocs.io/en/latest/\" rel=\"nofollow\">Tavern</a> response.</p>\n<h2>Installation</h2>\n<p>Tavalidate can be installed through pip.</p>\n<pre><code>pip install tavalidate\n</code></pre>\n<h2>XML Validate</h2>\n<p>Tavern has great built-in Json support, but things are difficult when it comes to XML.\nUse tavalidate.xmlv package to validate XML response.</p>\n<p>XML validation example:</p>\n<pre><code>response:\n  status_code: 200\n  verify_response_with:\n    function: tavalidate:assert_xml\n    extra_kwargs:\n      expected: |\n        &lt;foo attr=\"!anystr\"&gt;\n          &lt;bar attr2=\"baz\"&gt;!anyint&lt;/bar&gt;\n        &lt;/foo&gt;\n</code></pre>\n<p>Simply put, pass the expected xml as an argument to the <code>tavalidate.xmlv.validate</code> function. The\nfunction will validate the xml structure, node value and attribute value.</p>\n<h3>extra_kwargs</h3>\n<p>Below are the supported extra kwargs of <code>tavalidate.xmlv.validate</code> function.</p>\n<h4>expected</h4>\n<p>This is the expected XML string.</p>\n<p>You may use some (not all) of the tavern magic values to match data of your specified type:</p>\n<ul>\n<li>!anything: This matches value of any type.</li>\n<li>!anystr: Matches any string</li>\n<li>!anyint: Matches any integer</li>\n<li>!anyfloat: Matches any float</li>\n<li>!anybool: Matches any boolean</li>\n</ul>\n<h4>strict</h4>\n<p>Use <code>strict: True</code> if you want to make sure there's no extra tag in the response.</p>\n<h2>XML Save</h2>\n<p>Use tavalidate.xmlv package to save XML response.</p>\n<p>It allows you to use <a href=\"https://en.wikipedia.org/wiki/XPath\" rel=\"nofollow\">XPath</a> to specify the value to save\ninside the xml document. If the XPath somehow selects multiple nodes, tavalidate will print a\nwarning, but the first value will still be saved.</p>\n<p>XML save example:</p>\n<pre><code>response:\n  save:\n    $ext:\n      function: tavalidate:save_xml\n      extra_kwargs:\n        variables:\n          bar: '/foo/bar/text()'\n          at1: '/foo/@at1'\n</code></pre>\n<h2>Logging</h2>\n<p>Configure the logger <code>tavalidate</code> so you can see the response body and other logs in\nDEBUG level.</p>\n\n          </div>"}, "last_serial": 6734122, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "650d70ca3f91a284a60afb203fd48c5f", "sha256": "b6f0573d5e30939ff2afebe290bacb5a2deb14d64aa3d7e2144ee72778d1b84d"}, "downloads": -1, "filename": "tavalidate-0.0.1.tar.gz", "has_sig": false, "md5_digest": "650d70ca3f91a284a60afb203fd48c5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2934, "upload_time": "2020-02-09T10:48:39", "upload_time_iso_8601": "2020-02-09T10:48:39.469089Z", "url": "https://files.pythonhosted.org/packages/17/7c/a985ff0d25e682bc18002cfcf75d774fcb1d997496d1f24cb7088c060988/tavalidate-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "02e527fdb22811149cf4745b524ae100", "sha256": "00723853ac5187ee92da94dc59ac4016b2ce634f85be1e21b16450e44c58ee1f"}, "downloads": -1, "filename": "tavalidate-0.0.2.tar.gz", "has_sig": false, "md5_digest": "02e527fdb22811149cf4745b524ae100", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3026, "upload_time": "2020-02-10T02:54:58", "upload_time_iso_8601": "2020-02-10T02:54:58.070218Z", "url": "https://files.pythonhosted.org/packages/07/30/ca6d771ef25c587a0cd11aa07d647a7f5c12d586a1b0d77c01413db74749/tavalidate-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "96a256f5bd9b8abb3bde66a49efc2288", "sha256": "688456ffc1805397641237ffe6541cb70192bba8bbbebc386eb20593ae8b510d"}, "downloads": -1, "filename": "tavalidate-0.0.3.tar.gz", "has_sig": false, "md5_digest": "96a256f5bd9b8abb3bde66a49efc2288", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3134, "upload_time": "2020-02-10T05:11:30", "upload_time_iso_8601": "2020-02-10T05:11:30.868155Z", "url": "https://files.pythonhosted.org/packages/7a/d7/b30d5ba5d61751f9faa796d546bd6092fa3eb0612cef665e47cf33dc86fb/tavalidate-0.0.3.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "bd746f26e12e9dd313475a7258e109b1", "sha256": "ae38e63a5c41dfcc43fdb212ee4813dd96e061cc96605c73619e245f70a85967"}, "downloads": -1, "filename": "tavalidate-0.0.5.tar.gz", "has_sig": false, "md5_digest": "bd746f26e12e9dd313475a7258e109b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4152, "upload_time": "2020-03-02T15:25:13", "upload_time_iso_8601": "2020-03-02T15:25:13.223250Z", "url": "https://files.pythonhosted.org/packages/17/3a/c630e804d6aa453ebac7c207bad5761fd8cb6426c1a0c41d3d0ffbe67144/tavalidate-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bd746f26e12e9dd313475a7258e109b1", "sha256": "ae38e63a5c41dfcc43fdb212ee4813dd96e061cc96605c73619e245f70a85967"}, "downloads": -1, "filename": "tavalidate-0.0.5.tar.gz", "has_sig": false, "md5_digest": "bd746f26e12e9dd313475a7258e109b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4152, "upload_time": "2020-03-02T15:25:13", "upload_time_iso_8601": "2020-03-02T15:25:13.223250Z", "url": "https://files.pythonhosted.org/packages/17/3a/c630e804d6aa453ebac7c207bad5761fd8cb6426c1a0c41d3d0ffbe67144/tavalidate-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:39 2020"}