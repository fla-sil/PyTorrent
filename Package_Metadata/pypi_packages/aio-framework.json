{"info": {"author": "Kelvin Fichter", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "aio-framework\n=============\n\nA Python website bot development framework (WIP)\n\nIntroduction\n------------\n\nThis project was created to aid the development of website bots and API\nwrappers. ``aio-framework`` handles task management and execution,\nsession management, and captcha queue management (with threads!).\nCurrently, captcha queue management supports 2Captcha. ``aio-framework``\nis meant to decrease development time by providing common bot and API\nwrapper functionality.\n\nBasic Usage\n-----------\n\nThis module is available via pip:\n\n::\n\n    $ pip install aio-framework\n\nBasic ``ApiWrapper`` and ``Bot`` implementations are shown below.\n``Bot`` implementations *must* implement the ``execute_task`` method.\n\nApiWrapper\n~~~~~~~~~~\n\n.. code:: python\n\n    # exampleapiwrapper.py\n    from aio import ApiWrapper\n\n    class ExampleApiWrapper(ApiWrapper):\n        BASE_URL = 'https://example.com'\n\n        def get_product_data(self, product_url):\n            response = self.get(product_url)\n            return response.json()['data'] # Or something\n\n        def add_product_to_cart(self, product_data, captcha_token):\n            payload = {\n                'product_data': product_data,\n                'captcha': captcha_token\n            }\n            endpoint = '/add-to-cart'\n            response = self.post(endpoint, data=payload)\n            return response.json()['success'] # Or something\n\nBot\n~~~\n\n.. code:: python\n\n    # examplebot.py\n    from aio import Bot\n    from aio.captcha import CaptchaManager\n    from exampleapiwrapper import ExampleApiWrapper\n\n    class ExampleBot(Bot):\n        def execute_task(self, task):\n            example_api_wrapper = ExampleApiWrapper()\n\n            twocaptcha_api_token = '2CAPTCHA_API_TOKEN_HERE'\n            site_key = 'SITE_KEY_HERE'\n            page_url = 'PAGE_URL_HERE'\n\n            captcha_manager = CaptchaManager(twocaptcha_api_token, site_key, page_url)\n            captcha_manager.start_captcha_queue(num_threads=5)\n\n            task.status = 'STARTED'\n\n            product_url = task.data['product_url']\n\n            task.logger.info('Getting product data')\n            product_data = example_api_wrapper.get_product_data(product_url)\n            task.logger.info('Got product data!')\n\n            task.logger.info('Waiting for captcha token')\n            captcha_token = captcha_manager.wait_for_captcha_token()\n            task.logger.info('Got captcha token!')\n\n            task.logger.info('Adding product to cart')\n            added = example_api_wrapper.add_product_to_cart(product_data, captcha_token)\n            task.logger.info('Added product to cart!')\n\n            task.status = 'FINISHED'\n\nExecuting\n~~~~~~~~~\n\n.. code:: python\n\n    # main.py\n    from aio import Task\n    from examplebot import ExampleBot\n\n    example_bot = ExampleBot()\n    task_data = {\n        'product_url': 'https://example.com/product'\n    }\n    task = Task(task_data)\n    example_bot.add_task(task)\n    example_bot.start_all_tasks()\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kfichter/aio", "keywords": "sneaker bot development", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aio-framework", "package_url": "https://pypi.org/project/aio-framework/", "platform": "", "project_url": "https://pypi.org/project/aio-framework/", "project_urls": {"Homepage": "https://github.com/kfichter/aio"}, "release_url": "https://pypi.org/project/aio-framework/0.0.5.7/", "requires_dist": null, "requires_python": "", "summary": "Ayinope AIO Framework", "version": "0.0.5.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Python website bot development framework (WIP)</p>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This project was created to aid the development of website bots and API\nwrappers. <tt><span class=\"pre\">aio-framework</span></tt> handles task management and execution,\nsession management, and captcha queue management (with threads!).\nCurrently, captcha queue management supports 2Captcha. <tt><span class=\"pre\">aio-framework</span></tt>\nis meant to decrease development time by providing common bot and API\nwrapper functionality.</p>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<p>This module is available via pip:</p>\n<pre>$ pip install aio-framework\n</pre>\n<p>Basic <tt>ApiWrapper</tt> and <tt>Bot</tt> implementations are shown below.\n<tt>Bot</tt> implementations <em>must</em> implement the <tt>execute_task</tt> method.</p>\n<div id=\"apiwrapper\">\n<h3>ApiWrapper</h3>\n<pre><span class=\"c1\"># exampleapiwrapper.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aio</span> <span class=\"kn\">import</span> <span class=\"n\">ApiWrapper</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleApiWrapper</span><span class=\"p\">(</span><span class=\"n\">ApiWrapper</span><span class=\"p\">):</span>\n    <span class=\"n\">BASE_URL</span> <span class=\"o\">=</span> <span class=\"s1\">'https://example.com'</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_product_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">product_url</span><span class=\"p\">):</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">product_url</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()[</span><span class=\"s1\">'data'</span><span class=\"p\">]</span> <span class=\"c1\"># Or something</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">add_product_to_cart</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">product_data</span><span class=\"p\">,</span> <span class=\"n\">captcha_token</span><span class=\"p\">):</span>\n        <span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'product_data'</span><span class=\"p\">:</span> <span class=\"n\">product_data</span><span class=\"p\">,</span>\n            <span class=\"s1\">'captcha'</span><span class=\"p\">:</span> <span class=\"n\">captcha_token</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">endpoint</span> <span class=\"o\">=</span> <span class=\"s1\">'/add-to-cart'</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()[</span><span class=\"s1\">'success'</span><span class=\"p\">]</span> <span class=\"c1\"># Or something</span>\n</pre>\n</div>\n<div id=\"bot\">\n<h3>Bot</h3>\n<pre><span class=\"c1\"># examplebot.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aio</span> <span class=\"kn\">import</span> <span class=\"n\">Bot</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aio.captcha</span> <span class=\"kn\">import</span> <span class=\"n\">CaptchaManager</span>\n<span class=\"kn\">from</span> <span class=\"nn\">exampleapiwrapper</span> <span class=\"kn\">import</span> <span class=\"n\">ExampleApiWrapper</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleBot</span><span class=\"p\">(</span><span class=\"n\">Bot</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">execute_task</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">task</span><span class=\"p\">):</span>\n        <span class=\"n\">example_api_wrapper</span> <span class=\"o\">=</span> <span class=\"n\">ExampleApiWrapper</span><span class=\"p\">()</span>\n\n        <span class=\"n\">twocaptcha_api_token</span> <span class=\"o\">=</span> <span class=\"s1\">'2CAPTCHA_API_TOKEN_HERE'</span>\n        <span class=\"n\">site_key</span> <span class=\"o\">=</span> <span class=\"s1\">'SITE_KEY_HERE'</span>\n        <span class=\"n\">page_url</span> <span class=\"o\">=</span> <span class=\"s1\">'PAGE_URL_HERE'</span>\n\n        <span class=\"n\">captcha_manager</span> <span class=\"o\">=</span> <span class=\"n\">CaptchaManager</span><span class=\"p\">(</span><span class=\"n\">twocaptcha_api_token</span><span class=\"p\">,</span> <span class=\"n\">site_key</span><span class=\"p\">,</span> <span class=\"n\">page_url</span><span class=\"p\">)</span>\n        <span class=\"n\">captcha_manager</span><span class=\"o\">.</span><span class=\"n\">start_captcha_queue</span><span class=\"p\">(</span><span class=\"n\">num_threads</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n        <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"s1\">'STARTED'</span>\n\n        <span class=\"n\">product_url</span> <span class=\"o\">=</span> <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'product_url'</span><span class=\"p\">]</span>\n\n        <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Getting product data'</span><span class=\"p\">)</span>\n        <span class=\"n\">product_data</span> <span class=\"o\">=</span> <span class=\"n\">example_api_wrapper</span><span class=\"o\">.</span><span class=\"n\">get_product_data</span><span class=\"p\">(</span><span class=\"n\">product_url</span><span class=\"p\">)</span>\n        <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Got product data!'</span><span class=\"p\">)</span>\n\n        <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Waiting for captcha token'</span><span class=\"p\">)</span>\n        <span class=\"n\">captcha_token</span> <span class=\"o\">=</span> <span class=\"n\">captcha_manager</span><span class=\"o\">.</span><span class=\"n\">wait_for_captcha_token</span><span class=\"p\">()</span>\n        <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Got captcha token!'</span><span class=\"p\">)</span>\n\n        <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Adding product to cart'</span><span class=\"p\">)</span>\n        <span class=\"n\">added</span> <span class=\"o\">=</span> <span class=\"n\">example_api_wrapper</span><span class=\"o\">.</span><span class=\"n\">add_product_to_cart</span><span class=\"p\">(</span><span class=\"n\">product_data</span><span class=\"p\">,</span> <span class=\"n\">captcha_token</span><span class=\"p\">)</span>\n        <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Added product to cart!'</span><span class=\"p\">)</span>\n\n        <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"s1\">'FINISHED'</span>\n</pre>\n</div>\n<div id=\"executing\">\n<h3>Executing</h3>\n<pre><span class=\"c1\"># main.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aio</span> <span class=\"kn\">import</span> <span class=\"n\">Task</span>\n<span class=\"kn\">from</span> <span class=\"nn\">examplebot</span> <span class=\"kn\">import</span> <span class=\"n\">ExampleBot</span>\n\n<span class=\"n\">example_bot</span> <span class=\"o\">=</span> <span class=\"n\">ExampleBot</span><span class=\"p\">()</span>\n<span class=\"n\">task_data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'product_url'</span><span class=\"p\">:</span> <span class=\"s1\">'https://example.com/product'</span>\n<span class=\"p\">}</span>\n<span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"n\">Task</span><span class=\"p\">(</span><span class=\"n\">task_data</span><span class=\"p\">)</span>\n<span class=\"n\">example_bot</span><span class=\"o\">.</span><span class=\"n\">add_task</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"p\">)</span>\n<span class=\"n\">example_bot</span><span class=\"o\">.</span><span class=\"n\">start_all_tasks</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3485990, "releases": {"0.0.5.6": [{"comment_text": "", "digests": {"md5": "813469678b2708f75a942020b1205fde", "sha256": "8d23bb9b0a5a559955e802f0b5c847b837f87b9c39758ab11eed58876d04ddb6"}, "downloads": -1, "filename": "aio-framework-0.0.5.6.tar.gz", "has_sig": false, "md5_digest": "813469678b2708f75a942020b1205fde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5073, "upload_time": "2017-11-25T01:37:26", "upload_time_iso_8601": "2017-11-25T01:37:26.368529Z", "url": "https://files.pythonhosted.org/packages/3e/71/30a18c7f279e6c5a116eb9e1c72c33055db4eb105f3a8d49f76221d9e98a/aio-framework-0.0.5.6.tar.gz", "yanked": false}], "0.0.5.7": [{"comment_text": "", "digests": {"md5": "d3684ebed9755bfefb0586f95d8508bc", "sha256": "5a2c91ec568f34ad4cbf0868acdf025421b04ed87b0fa395ec73ee1ffa582f73"}, "downloads": -1, "filename": "aio-framework-0.0.5.7.tar.gz", "has_sig": false, "md5_digest": "d3684ebed9755bfefb0586f95d8508bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5092, "upload_time": "2018-01-13T05:07:46", "upload_time_iso_8601": "2018-01-13T05:07:46.466395Z", "url": "https://files.pythonhosted.org/packages/1d/87/c4d95b304299977a968928299866b94a65a2a30ae2ab42da0ed43fdf4faa/aio-framework-0.0.5.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d3684ebed9755bfefb0586f95d8508bc", "sha256": "5a2c91ec568f34ad4cbf0868acdf025421b04ed87b0fa395ec73ee1ffa582f73"}, "downloads": -1, "filename": "aio-framework-0.0.5.7.tar.gz", "has_sig": false, "md5_digest": "d3684ebed9755bfefb0586f95d8508bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5092, "upload_time": "2018-01-13T05:07:46", "upload_time_iso_8601": "2018-01-13T05:07:46.466395Z", "url": "https://files.pythonhosted.org/packages/1d/87/c4d95b304299977a968928299866b94a65a2a30ae2ab42da0ed43fdf4faa/aio-framework-0.0.5.7.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:34 2020"}