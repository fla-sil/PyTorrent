{"info": {"author": "Alon Titelman, Lior Goldberg", "author_email": "alon.ti@gmail.com, goldberg.lior@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Other Environment", "Intended Audience :: Developers", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python"], "description": "IdleSpork\n=========\n\nIdleSpork is an extension of python's IDLE.\n\nThe main features include:\n\n* Background jobs\n* Running shell commands directly from IdleSpork\n* Getting help by typing \"?\"\n* Printing source code by typing \"??\"\n* Persistent history (across multiple sessions)\n* Spelling and import suggestions\n\nCommands\n--------\n\nIdleSpork supports the following commands:\n\n* ``jobs``\n* ``kill``\n* ``cd``\n* ``open``\n\nTo print help for a command, type \"``<command> -h``\".\n\n\nControl-Z (background jobs)\n---------------------------\n\nAfter running a jobs that takes a lot of time, you can press Control-Z. This\nwill move your job to the background and return to the prompt immediately,\nwith the same global scope (meaning all variables and functions are there).\nThe following line will be printed::\n\n    **** [0] ....... - Background ****\n\nThe number ``[0]`` is the Job ID, you will need it to get the results of the job.\n\nWhen your job is done, you will get the message::\n\n    **** [0]  Done ****\n\nThe command ``jobs`` gives you access to all the jobs you sent.\nWithout arguments ``jobs`` will print all the running jobs.\n``jobs -a`` prints all jobs (including the dead ones).\n``jobs -o<jobid>`` prints the output of a job.\nThe output of a job can be accessed using ``Jobs[jobid].getoutput()``.\nThe return value of your job (which is normally save into '``_``') can be accessed\nusing ``Jobs[jobid].ret``.\n\nThe Jobs variable: this variable manages all jobs. Everything you can do\nusing the commands, you can also do using this variable.\nIf you lose this variable use can run: ``jobs -gJobs`` to restore it.\n\n\nShell Commands\n==============\n\nIdleSpork gives you the ability to run shell programs directly from your python\ninterpreter. For example, you can run ``ls``, ``cat``, ``sysinfo`` and so on.\nIn order to run a command, type '!' and then type your command.\nIdleSpork also allows you to store the output of a command into a variable. For\nexample::\n\n    x = !ls -l\n\nwill store the results of ``ls -l`` into the variable ``x``.\n\nNote:\n\n* DON'T use this feature to run tty commands (``vim``, ``top``, ...).\n* Currently there is no input support for shell commands.", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/idlespork/idlespork/tarball/0.1.4", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/idlespork/idlespork", "keywords": "IDLE,background,jobs", "license": "", "maintainer": "", "maintainer_email": "", "name": "idlespork", "package_url": "https://pypi.org/project/idlespork/", "platform": "", "project_url": "https://pypi.org/project/idlespork/", "project_urls": {"Download": "https://github.com/idlespork/idlespork/tarball/0.1.4", "Homepage": "https://github.com/idlespork/idlespork"}, "release_url": "https://pypi.org/project/idlespork/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "idlespork is an improved version of IDLE", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"idlespork\">\n<h2>IdleSpork</h2>\n<p>IdleSpork is an extension of python\u2019s IDLE.</p>\n<p>The main features include:</p>\n<ul>\n<li>Background jobs</li>\n<li>Running shell commands directly from IdleSpork</li>\n<li>Getting help by typing \u201c?\u201d</li>\n<li>Printing source code by typing \u201c??\u201d</li>\n<li>Persistent history (across multiple sessions)</li>\n<li>Spelling and import suggestions</li>\n</ul>\n<div id=\"commands\">\n<h3>Commands</h3>\n<p>IdleSpork supports the following commands:</p>\n<ul>\n<li><tt>jobs</tt></li>\n<li><tt>kill</tt></li>\n<li><tt>cd</tt></li>\n<li><tt>open</tt></li>\n</ul>\n<p>To print help for a command, type \u201c<tt>&lt;command&gt; <span class=\"pre\">-h</span></tt>\u201d.</p>\n</div>\n<div id=\"control-z-background-jobs\">\n<h3>Control-Z (background jobs)</h3>\n<p>After running a jobs that takes a lot of time, you can press Control-Z. This\nwill move your job to the background and return to the prompt immediately,\nwith the same global scope (meaning all variables and functions are there).\nThe following line will be printed:</p>\n<pre>**** [0] ....... - Background ****\n</pre>\n<p>The number <tt>[0]</tt> is the Job ID, you will need it to get the results of the job.</p>\n<p>When your job is done, you will get the message:</p>\n<pre>**** [0]  Done ****\n</pre>\n<p>The command <tt>jobs</tt> gives you access to all the jobs you sent.\nWithout arguments <tt>jobs</tt> will print all the running jobs.\n<tt>jobs <span class=\"pre\">-a</span></tt> prints all jobs (including the dead ones).\n<tt>jobs <span class=\"pre\">-o&lt;jobid&gt;</span></tt> prints the output of a job.\nThe output of a job can be accessed using <tt><span class=\"pre\">Jobs[jobid].getoutput()</span></tt>.\nThe return value of your job (which is normally save into \u2018<tt>_</tt>\u2019) can be accessed\nusing <tt><span class=\"pre\">Jobs[jobid].ret</span></tt>.</p>\n<p>The Jobs variable: this variable manages all jobs. Everything you can do\nusing the commands, you can also do using this variable.\nIf you lose this variable use can run: <tt>jobs <span class=\"pre\">-gJobs</span></tt> to restore it.</p>\n</div>\n</div>\n<div id=\"shell-commands\">\n<h2>Shell Commands</h2>\n<p>IdleSpork gives you the ability to run shell programs directly from your python\ninterpreter. For example, you can run <tt>ls</tt>, <tt>cat</tt>, <tt>sysinfo</tt> and so on.\nIn order to run a command, type \u2018!\u2019 and then type your command.\nIdleSpork also allows you to store the output of a command into a variable. For\nexample:</p>\n<pre>x = !ls -l\n</pre>\n<p>will store the results of <tt>ls <span class=\"pre\">-l</span></tt> into the variable <tt>x</tt>.</p>\n<p>Note:</p>\n<ul>\n<li>DON\u2019T use this feature to run tty commands (<tt>vim</tt>, <tt>top</tt>, \u2026).</li>\n<li>Currently there is no input support for shell commands.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3808103, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "a2ac9462ab2932cf0cef90ddc65af38d", "sha256": "653c87cde0fbdf5f2c863328f65a9607f08db0abf253402779a60bd77576f246"}, "downloads": -1, "filename": "idlespork-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a2ac9462ab2932cf0cef90ddc65af38d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 236166, "upload_time": "2016-05-14T19:22:48", "upload_time_iso_8601": "2016-05-14T19:22:48.343270Z", "url": "https://files.pythonhosted.org/packages/8f/2f/728f2bd6baa5603bbd51abe13af28b85c3657afd2b19119fe8e2eb98b961/idlespork-0.1.2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "4bc59eb268db66ecf0b7076109a0855f", "sha256": "541c8cbe9ff2fe45473d2327417ed5a55803d07ddfe4641cfa8fc746d1196269"}, "downloads": -1, "filename": "idlespork-0.1.2.win32-py2.7.msi", "has_sig": false, "md5_digest": "4bc59eb268db66ecf0b7076109a0855f", "packagetype": "bdist_msi", "python_version": "2.7", "requires_python": null, "size": 425984, "upload_time": "2016-06-04T14:00:35", "upload_time_iso_8601": "2016-06-04T14:00:35.212125Z", "url": "https://files.pythonhosted.org/packages/fe/86/8bb06188a94576a6ef8f49fd0ee10f93c0830fe783a84f5daa70e8b728d4/idlespork-0.1.2.win32-py2.7.msi", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "24480921b7c35b8d101b0b2a57979e9e", "sha256": "a52fd68fde54fea511c796afbe2c69f75c0d37d5652de39e794c0dfac443ee57"}, "downloads": -1, "filename": "idlespork-0.1.3.tar.gz", "has_sig": false, "md5_digest": "24480921b7c35b8d101b0b2a57979e9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 250816, "upload_time": "2017-06-03T19:45:19", "upload_time_iso_8601": "2017-06-03T19:45:19.828695Z", "url": "https://files.pythonhosted.org/packages/ec/3b/dfd003b32bd885591e6ef1b1c47335fc9386cc4a078eea3bbd48f9553d97/idlespork-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "53f392ba5106cca701239fe7851f8269", "sha256": "1f42d1dd71441a21e72a07e2eb954c3891e4e8d7e6a249d89533f9c0b8239078"}, "downloads": -1, "filename": "idlespork-0.1.4.tar.gz", "has_sig": false, "md5_digest": "53f392ba5106cca701239fe7851f8269", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 262461, "upload_time": "2018-04-25T20:53:20", "upload_time_iso_8601": "2018-04-25T20:53:20.604920Z", "url": "https://files.pythonhosted.org/packages/23/1f/2d8a197bba841a1842706192e08f9c1e2b9e7582ebdb0b63c5f9f60c4963/idlespork-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "53f392ba5106cca701239fe7851f8269", "sha256": "1f42d1dd71441a21e72a07e2eb954c3891e4e8d7e6a249d89533f9c0b8239078"}, "downloads": -1, "filename": "idlespork-0.1.4.tar.gz", "has_sig": false, "md5_digest": "53f392ba5106cca701239fe7851f8269", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 262461, "upload_time": "2018-04-25T20:53:20", "upload_time_iso_8601": "2018-04-25T20:53:20.604920Z", "url": "https://files.pythonhosted.org/packages/23/1f/2d8a197bba841a1842706192e08f9c1e2b9e7582ebdb0b63c5f9f60c4963/idlespork-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:53 2020"}