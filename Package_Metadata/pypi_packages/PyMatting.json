{"info": {"author": "The PyMatting Developers", "author_email": "pymatting@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# PyMatting: A Python Library for Alpha Matting\n[![License: MIT](https://img.shields.io/github/license/pymatting/pymatting?color=brightgreen)](https://opensource.org/licenses/MIT)\n[![Build Status](https://img.shields.io/travis/pymatting/pymatting?label=Travis%20CI)](https://travis-ci.org/pymatting/pymatting)\n[![PyPI](https://img.shields.io/pypi/v/pymatting)](https://pypi.org/project/PyMatting/)\n\nWe introduce the PyMatting package for Python which implements various methods to solve the alpha matting problem.\n\n- **Website and Documentation:** [https://pymatting.github.io/](https://pymatting.github.io)\n- **Benchmarks:**  [https://pymatting.github.io/benchmark.html](https://pymatting.github.io/benchmark.html)\n\n![Lemur](https://github.com/pymatting/pymatting/raw/master/data/lemur/lemur_at_the_beach.png)\n\nGiven an input image and a hand-drawn trimap (top row), alpha matting estimates the alpha channel of a foreground object which can then be composed onto a different background (bottom row).\n\nPyMatting provides:\n- Alpha matting implementations for:\n  - Closed Form Alpha Matting [[1]](#1)\n  - Large Kernel Matting [[2]](#2)\n  - KNN Matting [[3]](#3)\n  - Learning Based Digital Matting [[4]](#4)\n  - Random Walk Matting [[5]](#5)\n- Foreground estimation implementations for:\n  - Closed Form Foreground Estimation [[1]](#1)\n  - Multilevel Foreground Estimation (CPU, CUDA and OpenCL)\n- Fast multithreaded KNN search\n- Preconditioners to accelerate the convergence rate of conjugate gradient descent:\n  - The *incomplete thresholded Cholesky decomposition* (*Incomplete* is part of the name. The implementation is quite complete.)\n  - The V-Cycle Geometric Multigrid preconditioner\n- Readable code leveraging [NumPy](https://numpy.org/), [SciPy](https://www.scipy.org/scipylib/index.html) and [Numba](http://numba.pydata.org/)\n\n## Getting Started\n\n### Requirements\n\nMinimal requiremens\n* numpy>=1.16.0\n* pillow>=5.2.0\n* numba>=0.47.0\n* scipy>=1.1.0\n\nAdditional requirements for GPU support\n* cupy-cuda90>=6.5.0 or similar\n* pyopencl>=2019.1.2\n\nRequirements to run the tests\n* pytest>=5.3.4\n\n### Installation with PyPI\n\n```bash\npip3 install pymatting\n```\n\n### Installation from Source\n\n```bash\ngit clone https://github.com/pymatting/pymatting\ncd pymatting\npip3 install .\n```\n\n## Example\n```python\nfrom pymatting import cutout\n\ncutout(\n    # input image path\n    \"data/lemur.png\",\n    # input trimap path\n    \"data/lemur_trimap.png\",\n    # output cutout path\n    \"lemur_cutout.png\")\n```\n\n[More advanced examples](https://github.com/pymatting/pymatting/tree/master/examples)\n\n### Testing\n\nRun the tests from the main directory:\n```\n python3 tests/download_images.py\n pip3 install -r requirements_tests.txt\n pytest\n```\n\nCurrently 89% of the code is covered by tests.\n\n## Authors\n\n- **Thomas Germer**\n- **Tobias Uelwer**\n- **Stefan Conrad**\n- **Stefan Harmeling**\n\nSee also the list of [contributors](https://github.com/pymatting/pymatting/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n## References\n\n<a id=\"1\">[1]</a> \nAnat Levin, Dani Lischinski, and Yair Weiss. A closed-form solution to natural image matting. IEEE transactions on pattern analysis and machine intelligence, 30(2):228\u2013242, 2007.\n\n\n<a id=\"2\">[2]</a>\nKaiming He, Jian Sun, and Xiaoou Tang. Fast matting using large kernel matting laplacian matrices. In 2010 IEEE Computer Society Conference on Computer Vision and Pattern Recognition, 2165\u20132172. IEEE, 2010.\n\n<a id=\"3\">[3]</a>\nQifeng Chen, Dingzeyu Li, and Chi-Keung Tang. Knn matting. IEEE transactions on pattern analysis and machine intelligence, 35(9):2175\u20132188, 2013.\n\n<a id=\"4\">[4]</a>\nYuanjie Zheng and Chandra Kambhamettu. Learning based digital matting. In 2009 IEEE 12th international conference on computer vision, 889\u2013896. IEEE, 2009.\n\n<a id=\"5\">[5]</a>\nLeo Grady, Thomas Schiwietz, Shmuel Aharon, and R\u00fcdiger Westermann. Random walks for interactive alpha-matting. In Proceedings of VIIP, volume 2005, 423\u2013429. 2005.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pymatting.github.io", "keywords": "alpha matting", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "PyMatting", "package_url": "https://pypi.org/project/PyMatting/", "platform": "", "project_url": "https://pypi.org/project/PyMatting/", "project_urls": {"Homepage": "https://pymatting.github.io", "Source": "https://github.com/pymatting/pymatting"}, "release_url": "https://pypi.org/project/PyMatting/1.0.6/", "requires_dist": ["numpy (>=1.16.0)", "pillow (>=5.2.0)", "numba (>=0.47.0)", "scipy (>=1.1.0)"], "requires_python": ">=3", "summary": "Python package for alpha matting.", "version": "1.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyMatting: A Python Library for Alpha Matting</h1>\n<p><a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/77842b88a8c23408316a977512d44ed95db4e988/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f70796d617474696e672f70796d617474696e673f636f6c6f723d627269676874677265656e\"></a>\n<a href=\"https://travis-ci.org/pymatting/pymatting\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aa842c9b67b54e638e42c240eb9db3bdf1460060/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f70796d617474696e672f70796d617474696e673f6c6162656c3d5472617669732532304349\"></a>\n<a href=\"https://pypi.org/project/PyMatting/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6e34b3e3062cf78e598eb20b6e9261bc7b1b561b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796d617474696e67\"></a></p>\n<p>We introduce the PyMatting package for Python which implements various methods to solve the alpha matting problem.</p>\n<ul>\n<li><strong>Website and Documentation:</strong> <a href=\"https://pymatting.github.io\" rel=\"nofollow\">https://pymatting.github.io/</a></li>\n<li><strong>Benchmarks:</strong>  <a href=\"https://pymatting.github.io/benchmark.html\" rel=\"nofollow\">https://pymatting.github.io/benchmark.html</a></li>\n</ul>\n<p><img alt=\"Lemur\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4aaf600284d8076ca4b5dbda88668700cc60d206/68747470733a2f2f6769746875622e636f6d2f70796d617474696e672f70796d617474696e672f7261772f6d61737465722f646174612f6c656d75722f6c656d75725f61745f7468655f62656163682e706e67\"></p>\n<p>Given an input image and a hand-drawn trimap (top row), alpha matting estimates the alpha channel of a foreground object which can then be composed onto a different background (bottom row).</p>\n<p>PyMatting provides:</p>\n<ul>\n<li>Alpha matting implementations for:\n<ul>\n<li>Closed Form Alpha Matting <a href=\"#1\" rel=\"nofollow\">[1]</a></li>\n<li>Large Kernel Matting <a href=\"#2\" rel=\"nofollow\">[2]</a></li>\n<li>KNN Matting <a href=\"#3\" rel=\"nofollow\">[3]</a></li>\n<li>Learning Based Digital Matting <a href=\"#4\" rel=\"nofollow\">[4]</a></li>\n<li>Random Walk Matting <a href=\"#5\" rel=\"nofollow\">[5]</a></li>\n</ul>\n</li>\n<li>Foreground estimation implementations for:\n<ul>\n<li>Closed Form Foreground Estimation <a href=\"#1\" rel=\"nofollow\">[1]</a></li>\n<li>Multilevel Foreground Estimation (CPU, CUDA and OpenCL)</li>\n</ul>\n</li>\n<li>Fast multithreaded KNN search</li>\n<li>Preconditioners to accelerate the convergence rate of conjugate gradient descent:\n<ul>\n<li>The <em>incomplete thresholded Cholesky decomposition</em> (<em>Incomplete</em> is part of the name. The implementation is quite complete.)</li>\n<li>The V-Cycle Geometric Multigrid preconditioner</li>\n</ul>\n</li>\n<li>Readable code leveraging <a href=\"https://numpy.org/\" rel=\"nofollow\">NumPy</a>, <a href=\"https://www.scipy.org/scipylib/index.html\" rel=\"nofollow\">SciPy</a> and <a href=\"http://numba.pydata.org/\" rel=\"nofollow\">Numba</a></li>\n</ul>\n<h2>Getting Started</h2>\n<h3>Requirements</h3>\n<p>Minimal requiremens</p>\n<ul>\n<li>numpy&gt;=1.16.0</li>\n<li>pillow&gt;=5.2.0</li>\n<li>numba&gt;=0.47.0</li>\n<li>scipy&gt;=1.1.0</li>\n</ul>\n<p>Additional requirements for GPU support</p>\n<ul>\n<li>cupy-cuda90&gt;=6.5.0 or similar</li>\n<li>pyopencl&gt;=2019.1.2</li>\n</ul>\n<p>Requirements to run the tests</p>\n<ul>\n<li>pytest&gt;=5.3.4</li>\n</ul>\n<h3>Installation with PyPI</h3>\n<pre>pip3 install pymatting\n</pre>\n<h3>Installation from Source</h3>\n<pre>git clone https://github.com/pymatting/pymatting\n<span class=\"nb\">cd</span> pymatting\npip3 install .\n</pre>\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymatting</span> <span class=\"kn\">import</span> <span class=\"n\">cutout</span>\n\n<span class=\"n\">cutout</span><span class=\"p\">(</span>\n    <span class=\"c1\"># input image path</span>\n    <span class=\"s2\">\"data/lemur.png\"</span><span class=\"p\">,</span>\n    <span class=\"c1\"># input trimap path</span>\n    <span class=\"s2\">\"data/lemur_trimap.png\"</span><span class=\"p\">,</span>\n    <span class=\"c1\"># output cutout path</span>\n    <span class=\"s2\">\"lemur_cutout.png\"</span><span class=\"p\">)</span>\n</pre>\n<p><a href=\"https://github.com/pymatting/pymatting/tree/master/examples\" rel=\"nofollow\">More advanced examples</a></p>\n<h3>Testing</h3>\n<p>Run the tests from the main directory:</p>\n<pre><code> python3 tests/download_images.py\n pip3 install -r requirements_tests.txt\n pytest\n</code></pre>\n<p>Currently 89% of the code is covered by tests.</p>\n<h2>Authors</h2>\n<ul>\n<li><strong>Thomas Germer</strong></li>\n<li><strong>Tobias Uelwer</strong></li>\n<li><strong>Stefan Conrad</strong></li>\n<li><strong>Stefan Harmeling</strong></li>\n</ul>\n<p>See also the list of <a href=\"https://github.com/pymatting/pymatting/contributors\" rel=\"nofollow\">contributors</a> who participated in this project.</p>\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE.md\" rel=\"nofollow\">LICENSE.md</a> file for details</p>\n<h2>References</h2>\n<p><a id=\"1\">[1]</a>\nAnat Levin, Dani Lischinski, and Yair Weiss. A closed-form solution to natural image matting. IEEE transactions on pattern analysis and machine intelligence, 30(2):228\u2013242, 2007.</p>\n<p><a id=\"2\">[2]</a>\nKaiming He, Jian Sun, and Xiaoou Tang. Fast matting using large kernel matting laplacian matrices. In 2010 IEEE Computer Society Conference on Computer Vision and Pattern Recognition, 2165\u20132172. IEEE, 2010.</p>\n<p><a id=\"3\">[3]</a>\nQifeng Chen, Dingzeyu Li, and Chi-Keung Tang. Knn matting. IEEE transactions on pattern analysis and machine intelligence, 35(9):2175\u20132188, 2013.</p>\n<p><a id=\"4\">[4]</a>\nYuanjie Zheng and Chandra Kambhamettu. Learning based digital matting. In 2009 IEEE 12th international conference on computer vision, 889\u2013896. IEEE, 2009.</p>\n<p><a id=\"5\">[5]</a>\nLeo Grady, Thomas Schiwietz, Shmuel Aharon, and R\u00fcdiger Westermann. Random walks for interactive alpha-matting. In Proceedings of VIIP, volume 2005, 423\u2013429. 2005.</p>\n\n          </div>"}, "last_serial": 6760771, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "a386e271f95084103308044b44e10509", "sha256": "ed678e66d24259e7e72e1145c3a56370cd592aeb8f92bc5dc42cc69364273998"}, "downloads": -1, "filename": "PyMatting-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a386e271f95084103308044b44e10509", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 39359, "upload_time": "2020-01-29T14:29:11", "upload_time_iso_8601": "2020-01-29T14:29:11.190896Z", "url": "https://files.pythonhosted.org/packages/80/d2/a3d9ee578139c8ab58f21bddc5f661321562d4f38c16d0b594f8015f0966/PyMatting-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14e9af0363bb459f0949b8831b055b1c", "sha256": "7405286bdaf2cde48d035953c03646d736820e1d61df0cde0f53802225db6e13"}, "downloads": -1, "filename": "PyMatting-1.0.0.tar.gz", "has_sig": false, "md5_digest": "14e9af0363bb459f0949b8831b055b1c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 25011, "upload_time": "2020-01-29T14:29:13", "upload_time_iso_8601": "2020-01-29T14:29:13.630920Z", "url": "https://files.pythonhosted.org/packages/41/b7/18213cb7bb2e30c4f11e5a86f26afc97f00d7fd8a64919ed9ef728fb750d/PyMatting-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "84d3b3cc96e84613f24b770422c4149e", "sha256": "e80aff9ef4e39791a2c6351e269f4993c59e51b25ca50270c038c15cd6678b31"}, "downloads": -1, "filename": "PyMatting-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "84d3b3cc96e84613f24b770422c4149e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 39483, "upload_time": "2020-02-07T09:26:05", "upload_time_iso_8601": "2020-02-07T09:26:05.782631Z", "url": "https://files.pythonhosted.org/packages/9c/4d/ec6187fb5bba130602fdda5ea16f9e206c2719a47e6cff6cc3426d3de0e7/PyMatting-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce96eb11efaaa9c882bb3516e76eded1", "sha256": "a7f800146a519818b9c7a86990c5516bb05cadde83cb76bbc7b7470c5c01808f"}, "downloads": -1, "filename": "PyMatting-1.0.1.tar.gz", "has_sig": false, "md5_digest": "ce96eb11efaaa9c882bb3516e76eded1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 25113, "upload_time": "2020-02-07T09:26:07", "upload_time_iso_8601": "2020-02-07T09:26:07.068443Z", "url": "https://files.pythonhosted.org/packages/9e/c3/ad0ed3064ca5b10ad54c99118f801555c651844c998dd24690a932980b21/PyMatting-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "c6dcd604e09337a8fac476d412a889f7", "sha256": "aa0946599a8f9b748a9c0a70fec698f611985244be222350b7bea8b351440365"}, "downloads": -1, "filename": "PyMatting-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c6dcd604e09337a8fac476d412a889f7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 39863, "upload_time": "2020-02-07T10:24:50", "upload_time_iso_8601": "2020-02-07T10:24:50.976154Z", "url": "https://files.pythonhosted.org/packages/64/b2/ff9fd0a09927675de5a3f7d643f60379dcb3f4cd33df7575379a9b0b0589/PyMatting-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d51fd2bc6353c738ca47bd50515a6db8", "sha256": "23b6d3f604b10a7720a7bbf2250a32d62a76292026ed0f6e49fa87a830bfbf55"}, "downloads": -1, "filename": "PyMatting-1.0.2.tar.gz", "has_sig": false, "md5_digest": "d51fd2bc6353c738ca47bd50515a6db8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 25242, "upload_time": "2020-02-07T10:24:52", "upload_time_iso_8601": "2020-02-07T10:24:52.423844Z", "url": "https://files.pythonhosted.org/packages/82/b0/b3fc0ddee8d00db1469d89d104bb5ee327309792d995ad9336902ba5b626/PyMatting-1.0.2.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "3b570d2054c5bba287791b3d1ff1f053", "sha256": "bff2ab4872cdc6e85df620444c5647500bc07f0df3340a13060c0d5332790594"}, "downloads": -1, "filename": "PyMatting-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "3b570d2054c5bba287791b3d1ff1f053", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 39911, "upload_time": "2020-02-17T11:20:08", "upload_time_iso_8601": "2020-02-17T11:20:08.678626Z", "url": "https://files.pythonhosted.org/packages/9c/18/35b106b0bac5559fd1122d1e6b14f087e16f7f58348b2bb441aff9d6ac77/PyMatting-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d98840b01ca9c4a53d2786d221678e4", "sha256": "2785a0dcc6f898e38fff4aeb4b36c402e4b49fc519997aadb6a615a437d4d7b1"}, "downloads": -1, "filename": "PyMatting-1.0.5.tar.gz", "has_sig": false, "md5_digest": "4d98840b01ca9c4a53d2786d221678e4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 25334, "upload_time": "2020-02-17T11:20:09", "upload_time_iso_8601": "2020-02-17T11:20:09.808010Z", "url": "https://files.pythonhosted.org/packages/4a/c1/995d08326a72ae6c17f4296bac3702b573118af7cdbec05c838e445eb727/PyMatting-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "2cebb26685f481688edb3ba03225e51a", "sha256": "0c4b9bcdacdfdf151a77379791b6b679e4739f4d1b82b79bf7cc04bae1a5a3cb"}, "downloads": -1, "filename": "PyMatting-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "2cebb26685f481688edb3ba03225e51a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 40116, "upload_time": "2020-03-06T09:54:40", "upload_time_iso_8601": "2020-03-06T09:54:40.648806Z", "url": "https://files.pythonhosted.org/packages/af/88/f551467f6c435c7f2fdd80aad640c8478c72922c2c61a69d0e40c487a530/PyMatting-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b6a1339d4aab5377cbf4b8bac1f100d", "sha256": "1aed73f9821746ed42db580b1e3ff811879f3b9496fd44db1dc8d51ba04d5146"}, "downloads": -1, "filename": "PyMatting-1.0.6.tar.gz", "has_sig": false, "md5_digest": "2b6a1339d4aab5377cbf4b8bac1f100d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 25556, "upload_time": "2020-03-06T09:54:41", "upload_time_iso_8601": "2020-03-06T09:54:41.918787Z", "url": "https://files.pythonhosted.org/packages/5a/0a/18f52e1175c0e08a8dc58dfafb8e77305907d00fa14d866a0bc11538723e/PyMatting-1.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2cebb26685f481688edb3ba03225e51a", "sha256": "0c4b9bcdacdfdf151a77379791b6b679e4739f4d1b82b79bf7cc04bae1a5a3cb"}, "downloads": -1, "filename": "PyMatting-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "2cebb26685f481688edb3ba03225e51a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 40116, "upload_time": "2020-03-06T09:54:40", "upload_time_iso_8601": "2020-03-06T09:54:40.648806Z", "url": "https://files.pythonhosted.org/packages/af/88/f551467f6c435c7f2fdd80aad640c8478c72922c2c61a69d0e40c487a530/PyMatting-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b6a1339d4aab5377cbf4b8bac1f100d", "sha256": "1aed73f9821746ed42db580b1e3ff811879f3b9496fd44db1dc8d51ba04d5146"}, "downloads": -1, "filename": "PyMatting-1.0.6.tar.gz", "has_sig": false, "md5_digest": "2b6a1339d4aab5377cbf4b8bac1f100d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 25556, "upload_time": "2020-03-06T09:54:41", "upload_time_iso_8601": "2020-03-06T09:54:41.918787Z", "url": "https://files.pythonhosted.org/packages/5a/0a/18f52e1175c0e08a8dc58dfafb8e77305907d00fa14d866a0bc11538723e/PyMatting-1.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:25 2020"}