{"info": {"author": "ijl", "author_email": "ijl@mailbox.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "nahpackpy\r\n=========\r\n\r\nnahpackpy is an HTTP/2 `RFC 7541\r\nHPACK <https://www.rfc-editor.org/rfc/rfc7541.txt>`__ library. It wraps\r\nthe Rust `nahpack <https://github.com/ijl/nahpack>`__ library.\r\n\r\nUsage\r\n-----\r\n\r\n.. code:: python\r\n\r\n    >>> from nahpackpy import Decoder\r\n    >>> decoder = Decoder()\r\n    >>> headers = decoder.decode_block(\r\n            b'\\x82\\x86\\x84A\\x8c\\xf1\\xe3\\xc2\\xe5\\xf2:k\\xa0\\xab\\x90\\xf4\\xff'\r\n        )\r\n    >>> for header in headers:\r\n            print(header)\r\n    Header(name=b':method', value=b'GET')\r\n    Header(name=b':scheme', value=b'http')\r\n    Header(name=b':path', value=b'/')\r\n    Header(name=b':authority', value=b'www.example.com')\r\n\r\n.. code:: python\r\n\r\n    >>> from nahpackpy import Encoder\r\n    >>> encoder = Encoder()\r\n    >>> encoder.encode_block((\r\n            (b':method', b'GET'),\r\n            (b':scheme', b'http'),\r\n            (b':path', b'/'),\r\n            (b':authority', b'www.example.com'),\r\n        ))\r\n    b'\\x82\\x86\\x84A\\x8c\\xf1\\xe3\\xc2\\xe5\\xf2:k\\xa0\\xab\\x90\\xf4\\xff'\r\n\r\nInstallation\r\n------------\r\n\r\nInstallation from source requires the use of the Rust language for\r\ncompilation of extensions. The \"Nightly\" channel of rust is required.\r\nDownload a package from\r\n`rust-lang.org <https://www.rust-lang.org/install.html>`__.\r\n\r\nYou can then create a wheel, which will contain the compiled shared\r\nlibrary, by running ``make``. Or, run ``python setup.py install`` to\r\ninstall in your current environment.\r\n\r\nMisc\r\n----\r\n\r\nnahpackpy is licensed under the `Mozilla Public License, Version\r\n2.0 <https://www.mozilla.org/MPL/2.0/>`__.", "description_content_type": null, "docs_url": "https://pythonhosted.org/nahpackpy/", "download_url": "https://github.com/ijl/nahpackpy/archive/0.1.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ijl/nahpackpy", "keywords": "hpack http2 header compression encoding rfc 7541", "license": "Mozilla Public License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "nahpackpy", "package_url": "https://pypi.org/project/nahpackpy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/nahpackpy/", "project_urls": {"Download": "https://github.com/ijl/nahpackpy/archive/0.1.0.tar.gz", "Homepage": "https://github.com/ijl/nahpackpy"}, "release_url": "https://pypi.org/project/nahpackpy/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Python HPACK library using nahpack", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>nahpackpy is an HTTP/2 <a href=\"https://www.rfc-editor.org/rfc/rfc7541.txt\" rel=\"nofollow\">RFC 7541\nHPACK</a> library. It wraps\nthe Rust <a href=\"https://github.com/ijl/nahpack\" rel=\"nofollow\">nahpack</a> library.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">nahpackpy</span> <span class=\"kn\">import</span> <span class=\"n\">Decoder</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">decoder</span> <span class=\"o\">=</span> <span class=\"n\">Decoder</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"n\">decoder</span><span class=\"o\">.</span><span class=\"n\">decode_block</span><span class=\"p\">(</span>\n        <span class=\"sa\">b</span><span class=\"s1\">'</span><span class=\"se\">\\x82\\x86\\x84</span><span class=\"s1\">A</span><span class=\"se\">\\x8c\\xf1\\xe3\\xc2\\xe5\\xf2</span><span class=\"s1\">:k</span><span class=\"se\">\\xa0\\xab\\x90\\xf4\\xff</span><span class=\"s1\">'</span>\n    <span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">header</span> <span class=\"ow\">in</span> <span class=\"n\">headers</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">header</span><span class=\"p\">)</span>\n<span class=\"n\">Header</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">':method'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'GET'</span><span class=\"p\">)</span>\n<span class=\"n\">Header</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">':scheme'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'http'</span><span class=\"p\">)</span>\n<span class=\"n\">Header</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">':path'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'/'</span><span class=\"p\">)</span>\n<span class=\"n\">Header</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">':authority'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'www.example.com'</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">nahpackpy</span> <span class=\"kn\">import</span> <span class=\"n\">Encoder</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">encoder</span> <span class=\"o\">=</span> <span class=\"n\">Encoder</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">encoder</span><span class=\"o\">.</span><span class=\"n\">encode_block</span><span class=\"p\">((</span>\n        <span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">':method'</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s1\">'GET'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">':scheme'</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s1\">'http'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">':path'</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s1\">'/'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">':authority'</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s1\">'www.example.com'</span><span class=\"p\">),</span>\n    <span class=\"p\">))</span>\n<span class=\"sa\">b</span><span class=\"s1\">'</span><span class=\"se\">\\x82\\x86\\x84</span><span class=\"s1\">A</span><span class=\"se\">\\x8c\\xf1\\xe3\\xc2\\xe5\\xf2</span><span class=\"s1\">:k</span><span class=\"se\">\\xa0\\xab\\x90\\xf4\\xff</span><span class=\"s1\">'</span>\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Installation from source requires the use of the Rust language for\ncompilation of extensions. The \u201cNightly\u201d channel of rust is required.\nDownload a package from\n<a href=\"https://www.rust-lang.org/install.html\" rel=\"nofollow\">rust-lang.org</a>.</p>\n<p>You can then create a wheel, which will contain the compiled shared\nlibrary, by running <tt>make</tt>. Or, run <tt>python setup.py install</tt> to\ninstall in your current environment.</p>\n</div>\n<div id=\"misc\">\n<h2>Misc</h2>\n<p>nahpackpy is licensed under the <a href=\"https://www.mozilla.org/MPL/2.0/\" rel=\"nofollow\">Mozilla Public License, Version\n2.0</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 1692277, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0a477774466a1753c69ad84e8a7bb02f", "sha256": "104226e27346b016fa281cd1509da5aff8f9264e363bfec2c10198a96dcf06c0"}, "downloads": -1, "filename": "nahpackpy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0a477774466a1753c69ad84e8a7bb02f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36406, "upload_time": "2015-08-25T01:14:53", "upload_time_iso_8601": "2015-08-25T01:14:53.702151Z", "url": "https://files.pythonhosted.org/packages/74/89/41b8bf9559a75e8c02d94fe378559c8ed5a3e996ee78ddf56eb21084f4f7/nahpackpy-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a477774466a1753c69ad84e8a7bb02f", "sha256": "104226e27346b016fa281cd1509da5aff8f9264e363bfec2c10198a96dcf06c0"}, "downloads": -1, "filename": "nahpackpy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0a477774466a1753c69ad84e8a7bb02f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36406, "upload_time": "2015-08-25T01:14:53", "upload_time_iso_8601": "2015-08-25T01:14:53.702151Z", "url": "https://files.pythonhosted.org/packages/74/89/41b8bf9559a75e8c02d94fe378559c8ed5a3e996ee78ddf56eb21084f4f7/nahpackpy-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:51 2020"}