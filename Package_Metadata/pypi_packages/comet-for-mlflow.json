{"info": {"author": "Boris Feld", "author_email": "boris@comet.ml", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Comet-For-MLFlow Extension\n\n[![image](https://img.shields.io/pypi/v/comet-for-mlflow.svg)](https://pypi.org/project/comet-for-mlflow/)\n[![CI Build](https://github.com/comet-ml/comet-for-mlflow/workflows/CI%20Build/badge.svg)](https://github.com/comet-ml/comet-for-mlflow/actions) [![Updates](https://pyup.io/repos/github/comet-ml/comet-for-mlflow/shield.svg)](https://pyup.io/repos/github/comet-ml/comet-for-mlflow/)\n\n\nThe Comet-For-MLFlow extension is a CLI that maps MLFlow experiment runs to Comet experiments. This extension allows you to see your existing experiments in the Comet.ml UI which provides authenticated access to experiment results, dramatically improves the performance for high volume experiment runs, and provides richer charting and visualization options.\n\nThis extension will synchronize previous MLFlow experiment runs with all runs tracked with [Comet's Python SDK with MLFlow support](https://comet.ml/docs/python-sdk/mlflow/), for deeper experiment instrumentation and improved logging, visibility, project organization and access management.\n\nThe Comet-For-MLFlow Extension is available as free open-source software, released under GNU General Public License v3. The extension can be used with existing Comet.ml accounts or with a new, free Individual account.\n\n# Installation\n\n```bash\npip install comet-for-mlflow\n```\n\nIf you install `comet-for-mlflow` in a different Python environment than the one you used to generate mlflow runs, please ensure that you use the same mlflow version in both environments.\n\n# Basic usage\n\nFor automatically synchronizing MLFlow runs in their default storage location (`./mlruns`) with Comet.ml, run:\n\n```bash\ncomet_for_mlflow --api-key $COMET_API_KEY --rest-api-key $COMET_REST_API_KEY\n```\n\nIf you'd like to review the mapping of MLFlow runs in their default storage location without synchronizing them with Comet.ml automatically, you can run:\n\n\n```bash\ncomet_for_mlflow --no-upload\n```\n\nAfter review, you can upload the mapped MLFlow runs with:\n\n```bash\ncomet upload /path/to/archive.zip\n```\n\n# Example\n\n```\n __   __         ___ ___     ___  __   __                 ___       __\n/  ` /  \\  |\\/| |__   |  __ |__  /  \\ |__) __  |\\/| |    |__  |    /  \\ |  |\n\\__, \\__/  |  | |___  |     |    \\__/ |  \\     |  | |___ |    |___ \\__/ |/\\|\n\n\nPlease create a free Comet account with your email.\nEmail: kristen.stewart@example.com\n\nPlease enter a username for your new account.\nUsername: kstewart\n\nA Comet.ml account has been created for you and an email was sent to you to setup your password later.\nYour Comet API Key has been saved to ~/.comet.ini, it is also available on your Comet.ml dashboard.\nStarting Comet Extension for MLFlow\n\nPreparing data locally from: '/home/ks/project/mlruns'\nYou will have an opportunity to review.\n\n# Preparing experiment 1/3: Default\n\n# Preparing experiment 2/3: Keras Experiment\n## Preparing run 1/4 [2e02df92025044669701ed6e6dd300ca]\n## Preparing run 2/4 [93fb285da7cf4c4a93e279ab7ff19fc5]\n## Preparing run 3/4 [2e8a1aed22544549b2b6b6b2c5976ed9]\n## Preparing run 4/4 [82f584bad7604289af61bc505935599b]\n\n# Preparing experiment 3/3: Tensorflow Keras Experiment\n## Preparing run 1/2 [99550a7ce4c24677aeb6a1ae4e7444cb]\n## Preparing run 2/2 [88ca5c4262f44176b576b54e0b24731a]\n\n MLFlow name:   | Comet.ml name:   |   Prepared count:\n----------------+------------------+-------------------\n Experiments    | Projects         |                 3\n Runs           | Experiments      |                 6\n Tags           | Others           |                39\n Parameters     | Parameters       |                51\n Metrics        | Metrics          |                60\n Artifacts      | Assets           |                27\n\nAll prepared data has been saved to: /tmp/tmpjj74z8bf\n\nUpload prepared data to Comet.ml? [y/N] y\n\n# Start uploading data to Comet.ml\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 6/6 [01:00<00:00, 15s/it]\nExplore your experiment data on Comet.ml with the following links:\n\t- https://www.comet.ml/kstewart/mlflow-default-2bacc9?loginToken=NjKgD6f9ZuZWeudP76sDPHx9j\n\t- https://www.comet.ml/kstewart/mlflow-keras-experiment-2bacc9?loginToken=NjKgD6f9ZuZWeudP76sDPHx9j\n\t- https://www.comet.ml/kstewart/mlflow-tensorflow-keras-experiment-2bacc9?loginToken=NjKgD6f9ZuZWeudP76sDPHx9j\nGet deeper instrumentation by adding Comet SDK to your project: https://comet.ml/docs/python-sdk/mlflow/\n\n\nIf you need support, you can contact us at http://chat.comet.ml/ or https://comet.ml/docs/quick-start/#getting-support\n```\n\n\n# Advanced use\n\n## Importing MLFlow runs in a database store or in the MLFLow server store\n\nIf your MLFlow runs are not located in the default local store (`./mlruns`), you can either set the CLI flag `--mlflow-store-uri` or the environment variable `MLFLOW_TRACKING_URI` to point to the right store.\n\nFor example, with a different local store path:\n\n```bash\ncomet_for_mlflow --mlflow-store-uri /data/mlruns/\n```\n\nWith a SQL store:\n\n```bash\ncomet_for_mlflow --mlflow-store-uri sqlite:///path/to/file.db\n```\n\nOr with a MLFlow server:\n\n```bash\ncomet_for_mlflow --mlflow-store-uri http://localhost:5000\n```\n\n## Importing MLFlow artifacts stored remotely\n\nIf your MLFlow runs have artifacts stored remotely (in any of supported remote artifact stores https://www.mlflow.org/docs/latest/tracking.html#artifact-stores), you need to configure your environment the same way as when you ran those experiments. For example, with a local Minio server:\n\n```bash\nenv MLFLOW_S3_ENDPOINT_URL=http://localhost:9001 \\\n    AWS_ACCESS_KEY_ID=minio \\\n    AWS_SECRET_ACCESS_KEY=minio123 \\\n    comet_for_mlflow\n```\n\n# FAQ\n\n## How can I configure my API Key or Rest API Key?\n\nYou can either pass your Comet.ml API Key or Rest API Key as command-line flags or through the [usual configuration options](https://www.comet.ml/docs/python-sdk/advanced/#python-configuration).\n\n## How are MLFlow experiments mapped to Comet.ml projects?\n\nEach MLFlow experiment is mapped to a unique Comet.ml project ID. This way even if you rename the Comet.ml project or the MLFlow experiment, new runs will be imported in the correct Comet.ml project. The name for newly created Comet.ml is `mlflow-$MLFLOW_EXPERIMENT_NAME`. The original MLFlow experiment name is also saved as an Other field named `mlflow.experimentName`.\n\nBelow is a complete list of MLFlow experiment and run fields mapped to Comet.ml equivalent concepts:\n\n* MLFlow Experiments are mapped as Comet.ml projects\n* MLFlow Runs are mapped as Comet.ml experiments\n* MLFlow Runs fields are imported according to following table:\n\n| MLFlow Run Field \t| Comet.ml Experiment Field \t|\n|------------------\t|---------------------------\t|\n| File name        \t| File name                 \t|\n| Tags             \t| Others                    \t|\n| User             \t| Git User + System User    \t|\n| Git parent       \t| Git parent                \t|\n| Git origin       \t| Git Origin                \t|\n| Params           \t| Params                    \t|\n| Metrics          \t| Metrics                   \t|\n| Artifacts        \t| Assets                    \t|\n\n## Do I have to run this for future experiments?\n\nNo, the common pattern is to import [Comet's Python SDK with MLFlow support](https://comet.ml/docs/python-sdk/mlflow/) in your MLFlow projects, which will keep all future experiment runs synchronized.\n\n\n# Credits\n\nThis package was created with [Cookiecutter](https://github.com/audreyr/cookiecutter) and the [audreyr/cookiecutter-pypackage](https://github.com/audreyr/cookiecutter-pypackage) project template.\n\n\nRelease History\n===============\n\n0.1.2 (2020-03-12)\n------------------\n\n- Fix compatibility with Comet Python SDK v3.1.1. #2\n- Fix support for unicode project notes in Python 2. #1\n\n0.1.1 (2020-02-17)\n------------------\n\n-   Fix package URL in metadata.\n\n0.1.0 (2020-02-12)\n------------------\n\n-   First release on PyPI.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/comet-ml/comet-for-mlflow", "keywords": "comet_for_mlflow", "license": "GNU General Public License v3", "maintainer": "", "maintainer_email": "", "name": "comet-for-mlflow", "package_url": "https://pypi.org/project/comet-for-mlflow/", "platform": "", "project_url": "https://pypi.org/project/comet-for-mlflow/", "project_urls": {"Homepage": "https://github.com/comet-ml/comet-for-mlflow"}, "release_url": "https://pypi.org/project/comet-for-mlflow/0.1.2/", "requires_dist": ["mlflow", "comet-ml (>=3.1.1)", "tabulate", "tqdm", "typing"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "summary": "Extend MLFlow with Comet.ml", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Comet-For-MLFlow Extension</h1>\n<p><a href=\"https://pypi.org/project/comet-for-mlflow/\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac61ef5a47b8517b2d1e357b96d626f04ccd4ed0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636f6d65742d666f722d6d6c666c6f772e737667\"></a>\n<a href=\"https://github.com/comet-ml/comet-for-mlflow/actions\" rel=\"nofollow\"><img alt=\"CI Build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0bb4d8f3efdcebafa7b9e4ed478e95a2a1f1d9e2/68747470733a2f2f6769746875622e636f6d2f636f6d65742d6d6c2f636f6d65742d666f722d6d6c666c6f772f776f726b666c6f77732f43492532304275696c642f62616467652e737667\"></a> <a href=\"https://pyup.io/repos/github/comet-ml/comet-for-mlflow/\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2921278f7ffce9f21343af0a20b1ea53d9ba93fc/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f636f6d65742d6d6c2f636f6d65742d666f722d6d6c666c6f772f736869656c642e737667\"></a></p>\n<p>The Comet-For-MLFlow extension is a CLI that maps MLFlow experiment runs to Comet experiments. This extension allows you to see your existing experiments in the Comet.ml UI which provides authenticated access to experiment results, dramatically improves the performance for high volume experiment runs, and provides richer charting and visualization options.</p>\n<p>This extension will synchronize previous MLFlow experiment runs with all runs tracked with <a href=\"https://comet.ml/docs/python-sdk/mlflow/\" rel=\"nofollow\">Comet's Python SDK with MLFlow support</a>, for deeper experiment instrumentation and improved logging, visibility, project organization and access management.</p>\n<p>The Comet-For-MLFlow Extension is available as free open-source software, released under GNU General Public License v3. The extension can be used with existing Comet.ml accounts or with a new, free Individual account.</p>\n<h1>Installation</h1>\n<pre>pip install comet-for-mlflow\n</pre>\n<p>If you install <code>comet-for-mlflow</code> in a different Python environment than the one you used to generate mlflow runs, please ensure that you use the same mlflow version in both environments.</p>\n<h1>Basic usage</h1>\n<p>For automatically synchronizing MLFlow runs in their default storage location (<code>./mlruns</code>) with Comet.ml, run:</p>\n<pre>comet_for_mlflow --api-key <span class=\"nv\">$COMET_API_KEY</span> --rest-api-key <span class=\"nv\">$COMET_REST_API_KEY</span>\n</pre>\n<p>If you'd like to review the mapping of MLFlow runs in their default storage location without synchronizing them with Comet.ml automatically, you can run:</p>\n<pre>comet_for_mlflow --no-upload\n</pre>\n<p>After review, you can upload the mapped MLFlow runs with:</p>\n<pre>comet upload /path/to/archive.zip\n</pre>\n<h1>Example</h1>\n<pre><code> __   __         ___ ___     ___  __   __                 ___       __\n/  ` /  \\  |\\/| |__   |  __ |__  /  \\ |__) __  |\\/| |    |__  |    /  \\ |  |\n\\__, \\__/  |  | |___  |     |    \\__/ |  \\     |  | |___ |    |___ \\__/ |/\\|\n\n\nPlease create a free Comet account with your email.\nEmail: kristen.stewart@example.com\n\nPlease enter a username for your new account.\nUsername: kstewart\n\nA Comet.ml account has been created for you and an email was sent to you to setup your password later.\nYour Comet API Key has been saved to ~/.comet.ini, it is also available on your Comet.ml dashboard.\nStarting Comet Extension for MLFlow\n\nPreparing data locally from: '/home/ks/project/mlruns'\nYou will have an opportunity to review.\n\n# Preparing experiment 1/3: Default\n\n# Preparing experiment 2/3: Keras Experiment\n## Preparing run 1/4 [2e02df92025044669701ed6e6dd300ca]\n## Preparing run 2/4 [93fb285da7cf4c4a93e279ab7ff19fc5]\n## Preparing run 3/4 [2e8a1aed22544549b2b6b6b2c5976ed9]\n## Preparing run 4/4 [82f584bad7604289af61bc505935599b]\n\n# Preparing experiment 3/3: Tensorflow Keras Experiment\n## Preparing run 1/2 [99550a7ce4c24677aeb6a1ae4e7444cb]\n## Preparing run 2/2 [88ca5c4262f44176b576b54e0b24731a]\n\n MLFlow name:   | Comet.ml name:   |   Prepared count:\n----------------+------------------+-------------------\n Experiments    | Projects         |                 3\n Runs           | Experiments      |                 6\n Tags           | Others           |                39\n Parameters     | Parameters       |                51\n Metrics        | Metrics          |                60\n Artifacts      | Assets           |                27\n\nAll prepared data has been saved to: /tmp/tmpjj74z8bf\n\nUpload prepared data to Comet.ml? [y/N] y\n\n# Start uploading data to Comet.ml\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 6/6 [01:00&lt;00:00, 15s/it]\nExplore your experiment data on Comet.ml with the following links:\n\t- https://www.comet.ml/kstewart/mlflow-default-2bacc9?loginToken=NjKgD6f9ZuZWeudP76sDPHx9j\n\t- https://www.comet.ml/kstewart/mlflow-keras-experiment-2bacc9?loginToken=NjKgD6f9ZuZWeudP76sDPHx9j\n\t- https://www.comet.ml/kstewart/mlflow-tensorflow-keras-experiment-2bacc9?loginToken=NjKgD6f9ZuZWeudP76sDPHx9j\nGet deeper instrumentation by adding Comet SDK to your project: https://comet.ml/docs/python-sdk/mlflow/\n\n\nIf you need support, you can contact us at http://chat.comet.ml/ or https://comet.ml/docs/quick-start/#getting-support\n</code></pre>\n<h1>Advanced use</h1>\n<h2>Importing MLFlow runs in a database store or in the MLFLow server store</h2>\n<p>If your MLFlow runs are not located in the default local store (<code>./mlruns</code>), you can either set the CLI flag <code>--mlflow-store-uri</code> or the environment variable <code>MLFLOW_TRACKING_URI</code> to point to the right store.</p>\n<p>For example, with a different local store path:</p>\n<pre>comet_for_mlflow --mlflow-store-uri /data/mlruns/\n</pre>\n<p>With a SQL store:</p>\n<pre>comet_for_mlflow --mlflow-store-uri sqlite:///path/to/file.db\n</pre>\n<p>Or with a MLFlow server:</p>\n<pre>comet_for_mlflow --mlflow-store-uri http://localhost:5000\n</pre>\n<h2>Importing MLFlow artifacts stored remotely</h2>\n<p>If your MLFlow runs have artifacts stored remotely (in any of supported remote artifact stores <a href=\"https://www.mlflow.org/docs/latest/tracking.html#artifact-stores\" rel=\"nofollow\">https://www.mlflow.org/docs/latest/tracking.html#artifact-stores</a>), you need to configure your environment the same way as when you ran those experiments. For example, with a local Minio server:</p>\n<pre>env <span class=\"nv\">MLFLOW_S3_ENDPOINT_URL</span><span class=\"o\">=</span>http://localhost:9001 <span class=\"se\">\\</span>\n    <span class=\"nv\">AWS_ACCESS_KEY_ID</span><span class=\"o\">=</span>minio <span class=\"se\">\\</span>\n    <span class=\"nv\">AWS_SECRET_ACCESS_KEY</span><span class=\"o\">=</span>minio123 <span class=\"se\">\\</span>\n    comet_for_mlflow\n</pre>\n<h1>FAQ</h1>\n<h2>How can I configure my API Key or Rest API Key?</h2>\n<p>You can either pass your Comet.ml API Key or Rest API Key as command-line flags or through the <a href=\"https://www.comet.ml/docs/python-sdk/advanced/#python-configuration\" rel=\"nofollow\">usual configuration options</a>.</p>\n<h2>How are MLFlow experiments mapped to Comet.ml projects?</h2>\n<p>Each MLFlow experiment is mapped to a unique Comet.ml project ID. This way even if you rename the Comet.ml project or the MLFlow experiment, new runs will be imported in the correct Comet.ml project. The name for newly created Comet.ml is <code>mlflow-$MLFLOW_EXPERIMENT_NAME</code>. The original MLFlow experiment name is also saved as an Other field named <code>mlflow.experimentName</code>.</p>\n<p>Below is a complete list of MLFlow experiment and run fields mapped to Comet.ml equivalent concepts:</p>\n<ul>\n<li>MLFlow Experiments are mapped as Comet.ml projects</li>\n<li>MLFlow Runs are mapped as Comet.ml experiments</li>\n<li>MLFlow Runs fields are imported according to following table:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>MLFlow Run Field</th>\n<th>Comet.ml Experiment Field</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>File name</td>\n<td>File name</td>\n</tr>\n<tr>\n<td>Tags</td>\n<td>Others</td>\n</tr>\n<tr>\n<td>User</td>\n<td>Git User + System User</td>\n</tr>\n<tr>\n<td>Git parent</td>\n<td>Git parent</td>\n</tr>\n<tr>\n<td>Git origin</td>\n<td>Git Origin</td>\n</tr>\n<tr>\n<td>Params</td>\n<td>Params</td>\n</tr>\n<tr>\n<td>Metrics</td>\n<td>Metrics</td>\n</tr>\n<tr>\n<td>Artifacts</td>\n<td>Assets</td>\n</tr></tbody></table>\n<h2>Do I have to run this for future experiments?</h2>\n<p>No, the common pattern is to import <a href=\"https://comet.ml/docs/python-sdk/mlflow/\" rel=\"nofollow\">Comet's Python SDK with MLFlow support</a> in your MLFlow projects, which will keep all future experiment runs synchronized.</p>\n<h1>Credits</h1>\n<p>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n<h1>Release History</h1>\n<h2>0.1.2 (2020-03-12)</h2>\n<ul>\n<li>Fix compatibility with Comet Python SDK v3.1.1. #2</li>\n<li>Fix support for unicode project notes in Python 2. #1</li>\n</ul>\n<h2>0.1.1 (2020-02-17)</h2>\n<ul>\n<li>Fix package URL in metadata.</li>\n</ul>\n<h2>0.1.0 (2020-02-12)</h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n\n          </div>"}, "last_serial": 6800673, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "cbe856b1cb01599bb358f8c416292bbd", "sha256": "f1141b3d20e22f3b1936f6c9eb69b5b8c7b65de636f7685b9b7d1825f0c89267"}, "downloads": -1, "filename": "comet_for_mlflow-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cbe856b1cb01599bb358f8c416292bbd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 28508, "upload_time": "2020-02-12T15:32:01", "upload_time_iso_8601": "2020-02-12T15:32:01.076568Z", "url": "https://files.pythonhosted.org/packages/9d/1a/4f6441cb993d19b36aab1492bf58426e34df0d66f232d8c3b3d7bc3ce03c/comet_for_mlflow-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43a5ea6312ba4f00a3a9d3d61ac8290d", "sha256": "4e66e4e9a0fb2578374323cbbcfc8f987d6e0824adaae55043f16387e89697ce"}, "downloads": -1, "filename": "comet_for_mlflow-0.1.0.tar.gz", "has_sig": false, "md5_digest": "43a5ea6312ba4f00a3a9d3d61ac8290d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 30747, "upload_time": "2020-02-12T15:32:03", "upload_time_iso_8601": "2020-02-12T15:32:03.759960Z", "url": "https://files.pythonhosted.org/packages/8f/63/a059906f18c66487c0d7aaa9c9db568e26d13b21403e9eea2f28903e6ba1/comet_for_mlflow-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "31a0c6a889ccdfa089bcdc0e8ddcfecf", "sha256": "dc863f96ce5a79b96103fe71f35a19d1c3760ef5a613634dafa831db5cccc4ef"}, "downloads": -1, "filename": "comet_for_mlflow-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "31a0c6a889ccdfa089bcdc0e8ddcfecf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 28528, "upload_time": "2020-02-17T10:48:52", "upload_time_iso_8601": "2020-02-17T10:48:52.503371Z", "url": "https://files.pythonhosted.org/packages/94/6a/66de1d3bcae1f63791958f49ce41b0e6fdc507f0a6930d4666bb01d43f12/comet_for_mlflow-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "403bd5b76583feb2f84a0a96ac217027", "sha256": "7c9125c04f6ccc2fd355fd8a6ff867b2b3f471f34dc9acc075fcc47cc0eaeadd"}, "downloads": -1, "filename": "comet_for_mlflow-0.1.1.tar.gz", "has_sig": false, "md5_digest": "403bd5b76583feb2f84a0a96ac217027", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 29966, "upload_time": "2020-02-17T10:48:53", "upload_time_iso_8601": "2020-02-17T10:48:53.669469Z", "url": "https://files.pythonhosted.org/packages/cf/aa/3e6ab2f8f27c32dddd72adf02afa00832e500ade2dc6f6fec25de53bbbe9/comet_for_mlflow-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "dc6581a5d6efcedb53ed583a51fbc8a1", "sha256": "ba7b017db5495bfe8795c1477fb215346356d6a1e364186543d49118050eeac1"}, "downloads": -1, "filename": "comet_for_mlflow-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "dc6581a5d6efcedb53ed583a51fbc8a1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 28504, "upload_time": "2020-03-12T17:24:27", "upload_time_iso_8601": "2020-03-12T17:24:27.790786Z", "url": "https://files.pythonhosted.org/packages/f7/6c/438e3afa9856ba6af09148e5c5be56dacdc933cc6392ff26d20a336bfce1/comet_for_mlflow-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10d7988321a89a7221a9bcec237f767f", "sha256": "ce40e5ca8f2e3d9fefa759b35382a090b8e3e3c1fe763152880489fd18414213"}, "downloads": -1, "filename": "comet_for_mlflow-0.1.2.tar.gz", "has_sig": false, "md5_digest": "10d7988321a89a7221a9bcec237f767f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 30003, "upload_time": "2020-03-12T17:24:28", "upload_time_iso_8601": "2020-03-12T17:24:28.984774Z", "url": "https://files.pythonhosted.org/packages/b7/4a/5f0deee8ba597059d3b6d819ebe8cb232aa3276aa4888f43996213d4075e/comet_for_mlflow-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dc6581a5d6efcedb53ed583a51fbc8a1", "sha256": "ba7b017db5495bfe8795c1477fb215346356d6a1e364186543d49118050eeac1"}, "downloads": -1, "filename": "comet_for_mlflow-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "dc6581a5d6efcedb53ed583a51fbc8a1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 28504, "upload_time": "2020-03-12T17:24:27", "upload_time_iso_8601": "2020-03-12T17:24:27.790786Z", "url": "https://files.pythonhosted.org/packages/f7/6c/438e3afa9856ba6af09148e5c5be56dacdc933cc6392ff26d20a336bfce1/comet_for_mlflow-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10d7988321a89a7221a9bcec237f767f", "sha256": "ce40e5ca8f2e3d9fefa759b35382a090b8e3e3c1fe763152880489fd18414213"}, "downloads": -1, "filename": "comet_for_mlflow-0.1.2.tar.gz", "has_sig": false, "md5_digest": "10d7988321a89a7221a9bcec237f767f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 30003, "upload_time": "2020-03-12T17:24:28", "upload_time_iso_8601": "2020-03-12T17:24:28.984774Z", "url": "https://files.pythonhosted.org/packages/b7/4a/5f0deee8ba597059d3b6d819ebe8cb232aa3276aa4888f43996213d4075e/comet_for_mlflow-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:27 2020"}