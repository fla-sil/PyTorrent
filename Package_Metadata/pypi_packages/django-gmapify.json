{"info": {"author": "Javi Imbernon", "author_email": "javi@javimb.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# django-gmapify\n\nAdd a Google Map to a template with a simple tag.\n\nDjango-gmapify provides an easy way to manage the Google Maps JavaScript API v3 using a simple tag:\n\n    {% gmapify \"map-canvas\" 36.84531718210699 -2.4523544311523438 %}\n\n## Installation\n\nUsing `pip`:\n\n    $ pip install django-gmapify\n\nOr cloning the project from github:\n\n    $ git clone git@javimb/django-gmapify.git\n$ cd django-gmapify\n    $ pip install -r requirements.txt\n\n## Usage\n\nAdd `gmapify` to `INSTALLED_APPS`:\n\n    INSTALLED_APPS = (\n    ...\n    'gmapify',\n    ...)\n\nCreate a div in the template. The map will fill this div, so it has to have width and heigth:\n\n    <div id=\"map-canvas\" style=\"width:500px;height:500px;\"></div>\n\nLoad and use the provided `gmapify` tag in the template:\n\n    {% load gmapify %}\n    {% gmapify <html_id> <lat> <lng> [zoom=<zoom>] [map_type=<map_type>] [marker_title=<marker_title>] %}\n\nDjango-gmapify provides all the JavaScript stuff for Google Maps API v3, so put the `gmapify` tag at the end of the template.\n\n### Optional args\n\n - **zoom:** The initial resolution at which to display the map, where zoom 0 corresponds to a map of the Earth fully zoomed out, and higher zoom levels zoom in at a higher resolution. 15 by default.\n - **map_type:** The initial map type. ROADMAP by default. The following map types are supported:\n    - **ROADMAP:** displays the normal, default 2D tiles of Google Maps.\n    - **SATELLITE:** displays photographic tiles.\n    - **HYBRID:** displays a mix of photographic tiles and a tile layer for prominent features (roads, city names).\n    - **TERRAIN:** displays physical relief tiles for displaying elevation and water features (mountains, rivers, etc.).\n - **marker_title:** The title of the marker. If it's not provided, no marker will be displayed.\n\n##Example\n\n    {% load gmapify%}\n\n    {% block styles %}\n        {{ block.super }}\n        <style type=\"text/css\">\n            #map {\n                width: 100%;\n                height: 500px;\n            }\n        </style>\n    {% endblock style%}\n\n    {% block content %}\n        <div id=\"map\"></div>\n    {% endblock content%}\n\n    {% block js %}\n        {% gmapify \"map\" 36.84531718210699 -2.4523544311523438 zoom=18 marker_title=\"Almeria\" %}\n    {% endblock js %}", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/javimb/django-gmapify", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-gmapify", "package_url": "https://pypi.org/project/django-gmapify/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-gmapify/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/javimb/django-gmapify"}, "release_url": "https://pypi.org/project/django-gmapify/0.1/", "requires_dist": null, "requires_python": null, "summary": "Add a Google Map to a template with a simple tag.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # django-gmapify<br><br>Add a Google Map to a template with a simple tag.<br><br>Django-gmapify provides an easy way to manage the Google Maps JavaScript API v3 using a simple tag:<br><br>    {% gmapify \"map-canvas\" 36.84531718210699 -2.4523544311523438 %}<br><br>## Installation<br><br>Using `pip`:<br><br>    $ pip install django-gmapify<br><br>Or cloning the project from github:<br><br>    $ git clone git@javimb/django-gmapify.git<br>$ cd django-gmapify<br>    $ pip install -r requirements.txt<br><br>## Usage<br><br>Add `gmapify` to `INSTALLED_APPS`:<br><br>    INSTALLED_APPS = (<br>    ...<br>    'gmapify',<br>    ...)<br><br>Create a div in the template. The map will fill this div, so it has to have width and heigth:<br><br>    &lt;div id=\"map-canvas\" style=\"width:500px;height:500px;\"&gt;&lt;/div&gt;<br><br>Load and use the provided `gmapify` tag in the template:<br><br>    {% load gmapify %}<br>    {% gmapify &lt;html_id&gt; &lt;lat&gt; &lt;lng&gt; [zoom=&lt;zoom&gt;] [map_type=&lt;map_type&gt;] [marker_title=&lt;marker_title&gt;] %}<br><br>Django-gmapify provides all the JavaScript stuff for Google Maps API v3, so put the `gmapify` tag at the end of the template.<br><br>### Optional args<br><br> - **zoom:** The initial resolution at which to display the map, where zoom 0 corresponds to a map of the Earth fully zoomed out, and higher zoom levels zoom in at a higher resolution. 15 by default.<br> - **map_type:** The initial map type. ROADMAP by default. The following map types are supported:<br>    - **ROADMAP:** displays the normal, default 2D tiles of Google Maps.<br>    - **SATELLITE:** displays photographic tiles.<br>    - **HYBRID:** displays a mix of photographic tiles and a tile layer for prominent features (roads, city names).<br>    - **TERRAIN:** displays physical relief tiles for displaying elevation and water features (mountains, rivers, etc.).<br> - **marker_title:** The title of the marker. If it's not provided, no marker will be displayed.<br><br>##Example<br><br>    {% load gmapify%}<br><br>    {% block styles %}<br>        {{ block.super }}<br>        &lt;style type=\"text/css\"&gt;<br>            #map {<br>                width: 100%;<br>                height: 500px;<br>            }<br>        &lt;/style&gt;<br>    {% endblock style%}<br><br>    {% block content %}<br>        &lt;div id=\"map\"&gt;&lt;/div&gt;<br>    {% endblock content%}<br><br>    {% block js %}<br>        {% gmapify \"map\" 36.84531718210699 -2.4523544311523438 zoom=18 marker_title=\"Almeria\" %}<br>    {% endblock js %}\n          </div>"}, "last_serial": 781524, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "912d50a3bcbbe73a406a4277cd97b080", "sha256": "c93d84f4e639d5fb0573412b7dcebcfb19f555593df30946b571d0666cd6d737"}, "downloads": -1, "filename": "django-gmapify-0.1.tar.gz", "has_sig": false, "md5_digest": "912d50a3bcbbe73a406a4277cd97b080", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3152, "upload_time": "2013-06-28T00:05:26", "upload_time_iso_8601": "2013-06-28T00:05:26.860425Z", "url": "https://files.pythonhosted.org/packages/b0/5c/e0df3012f7b007723457c7967be9a08c5a0fa05c694b42f96b7309de2c80/django-gmapify-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "912d50a3bcbbe73a406a4277cd97b080", "sha256": "c93d84f4e639d5fb0573412b7dcebcfb19f555593df30946b571d0666cd6d737"}, "downloads": -1, "filename": "django-gmapify-0.1.tar.gz", "has_sig": false, "md5_digest": "912d50a3bcbbe73a406a4277cd97b080", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3152, "upload_time": "2013-06-28T00:05:26", "upload_time_iso_8601": "2013-06-28T00:05:26.860425Z", "url": "https://files.pythonhosted.org/packages/b0/5c/e0df3012f7b007723457c7967be9a08c5a0fa05c694b42f96b7309de2c80/django-gmapify-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:50 2020"}