{"info": {"author": "Soroco Americas Private Limited", "author_email": "opensource@soroco.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: Microsoft :: Windows :: Windows 10", "Operating System :: Microsoft :: Windows :: Windows Server 2008", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.7", "Topic :: Security :: Cryptography", "Topic :: Software Development :: Build Tools"], "description": "# PYCE\n\n`pyce` is a library to work with encrypted Python bytecode.  It adds\nfunctionality to a Python runtime by extending the way the builtin keyword\n`import` works.  Currently, it assumes that convergent encryption will be used,\nbut the library can be extended.  For example, functionality could be added to\ndecrypt files via [Hashicorp's Vault](https://www.vaultproject.io/) (which also\nsupports convergent encryption as a mode of operation).\n\n`pyce` enables the creation of a Trusted Computing Python environment by\nensuring each deployed file is precisely what the developer intended by\nenforcing end-to-end encryption.  Execution halts if even a single bit of an\nimported Python file is modified.\n\n## How do I use it?\n\nFirst, you'll want to encrypt a module or package.  **Note: this is a\ndestructive action.**  Do not run this on a codebase that is not saved\nelsewhere.  This can recursively operate on folders, and supports exclusion\nlists (to not encrypt certain files).\n\n`pyce` expects files to be pre-compiled Python bytecode, using a command\nsimilar to `python3 -mcompileall -b` where `-b` does an in place compilation.\n\n```python\nfrom pyce import encrypt_path\nencrypt_path('pyce/hello.pyc')\n[('pyce/hello.pyce', '443df1d5f9914d13ed27950dd81aa2dd9d3b708be416c388f3226ad398d71a14')]\n```\n\nSecond, register your keys and try importing from the encrypted module or\npackage:\n\n```python\nfrom pyce import PYCEPathFinder\nPYCEPathFinder.KEYS = {'pyce/hello.pyce' : '443df1d5f9914d13ed27950dd81aa2dd9d3b708be416c388f3226ad398d71a14'}\n\nimport sys\nsys.meta_path.insert(0, PYCEPathFinder)\nfrom pyce.hello import hello\nhello()\n```\n\nKey distribution is outside the scope of this project.  You will need to\nmaintain keys typically by using a networked key server such as [Hashicorp's\nVault](https://www.vaultproject.io/).  You could pass keys by environment\nvariable, `stdin`, or some other mechanism.\n\nTypically, you will leave (exclude) a stub file that is designed to just hook\nPython's import path parsers, setup the keys, and then execute your code.\n\n\n## What can I do with it?\n\n**File Integrity Monitoring:** You could protect your production code running\non application servers by adding in automatic cryptographic checks of imports.\n\n**Licensing:** You could publish encrypted modules to PyPI and only release\ndecryption keys to certain organizations, people, or others!  You could publish\nsuch modules anywhere!\n\n**At-rest Code Protection:** You could just protect code at rest by integrating\non-the-fly decryption with an IDE or other software.  This would be more of a\nDIY project at this point in time, but `pyce` gives you all the building blocks\nyou need!\n\n## License\n\nAll of this code is released under the [Apache v2.0\nLicense](https://www.apache.org/licenses/LICENSE-2.0).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/soroco/pyce", "keywords": "cryptography encryption import pyce", "license": "Apache Software License Version 2.0", "maintainer": "Soroco Americas Private Limited", "maintainer_email": "opensource@soroco.com", "name": "pyce", "package_url": "https://pypi.org/project/pyce/", "platform": "Windows 10", "project_url": "https://pypi.org/project/pyce/", "project_urls": {"Homepage": "https://github.com/soroco/pyce"}, "release_url": "https://pypi.org/project/pyce/2.0.0/", "requires_dist": ["cryptography (==2.3.1)"], "requires_python": ">=3.7, <3.8", "summary": "Execute encrypted Python bytecode.", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PYCE</h1>\n<p><code>pyce</code> is a library to work with encrypted Python bytecode.  It adds\nfunctionality to a Python runtime by extending the way the builtin keyword\n<code>import</code> works.  Currently, it assumes that convergent encryption will be used,\nbut the library can be extended.  For example, functionality could be added to\ndecrypt files via <a href=\"https://www.vaultproject.io/\" rel=\"nofollow\">Hashicorp's Vault</a> (which also\nsupports convergent encryption as a mode of operation).</p>\n<p><code>pyce</code> enables the creation of a Trusted Computing Python environment by\nensuring each deployed file is precisely what the developer intended by\nenforcing end-to-end encryption.  Execution halts if even a single bit of an\nimported Python file is modified.</p>\n<h2>How do I use it?</h2>\n<p>First, you'll want to encrypt a module or package.  <strong>Note: this is a\ndestructive action.</strong>  Do not run this on a codebase that is not saved\nelsewhere.  This can recursively operate on folders, and supports exclusion\nlists (to not encrypt certain files).</p>\n<p><code>pyce</code> expects files to be pre-compiled Python bytecode, using a command\nsimilar to <code>python3 -mcompileall -b</code> where <code>-b</code> does an in place compilation.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyce</span> <span class=\"kn\">import</span> <span class=\"n\">encrypt_path</span>\n<span class=\"n\">encrypt_path</span><span class=\"p\">(</span><span class=\"s1\">'pyce/hello.pyc'</span><span class=\"p\">)</span>\n<span class=\"p\">[(</span><span class=\"s1\">'pyce/hello.pyce'</span><span class=\"p\">,</span> <span class=\"s1\">'443df1d5f9914d13ed27950dd81aa2dd9d3b708be416c388f3226ad398d71a14'</span><span class=\"p\">)]</span>\n</pre>\n<p>Second, register your keys and try importing from the encrypted module or\npackage:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyce</span> <span class=\"kn\">import</span> <span class=\"n\">PYCEPathFinder</span>\n<span class=\"n\">PYCEPathFinder</span><span class=\"o\">.</span><span class=\"n\">KEYS</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'pyce/hello.pyce'</span> <span class=\"p\">:</span> <span class=\"s1\">'443df1d5f9914d13ed27950dd81aa2dd9d3b708be416c388f3226ad398d71a14'</span><span class=\"p\">}</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">meta_path</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">PYCEPathFinder</span><span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyce.hello</span> <span class=\"kn\">import</span> <span class=\"n\">hello</span>\n<span class=\"n\">hello</span><span class=\"p\">()</span>\n</pre>\n<p>Key distribution is outside the scope of this project.  You will need to\nmaintain keys typically by using a networked key server such as <a href=\"https://www.vaultproject.io/\" rel=\"nofollow\">Hashicorp's\nVault</a>.  You could pass keys by environment\nvariable, <code>stdin</code>, or some other mechanism.</p>\n<p>Typically, you will leave (exclude) a stub file that is designed to just hook\nPython's import path parsers, setup the keys, and then execute your code.</p>\n<h2>What can I do with it?</h2>\n<p><strong>File Integrity Monitoring:</strong> You could protect your production code running\non application servers by adding in automatic cryptographic checks of imports.</p>\n<p><strong>Licensing:</strong> You could publish encrypted modules to PyPI and only release\ndecryption keys to certain organizations, people, or others!  You could publish\nsuch modules anywhere!</p>\n<p><strong>At-rest Code Protection:</strong> You could just protect code at rest by integrating\non-the-fly decryption with an IDE or other software.  This would be more of a\nDIY project at this point in time, but <code>pyce</code> gives you all the building blocks\nyou need!</p>\n<h2>License</h2>\n<p>All of this code is released under the <a href=\"https://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">Apache v2.0\nLicense</a>.</p>\n\n          </div>"}, "last_serial": 4298946, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "98178c34f1a8d31f8af95727792a1560", "sha256": "33d77ebe84414bb7ae23229bea9fe3ec6a492d618e8f836a1867f5aae69712a6"}, "downloads": -1, "filename": "pyce-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "98178c34f1a8d31f8af95727792a1560", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <=3.7", "size": 8948, "upload_time": "2018-07-29T14:53:40", "upload_time_iso_8601": "2018-07-29T14:53:40.718976Z", "url": "https://files.pythonhosted.org/packages/0a/b8/4730349f86114d4ad6410e2d363855fefa42e37218886c833154cbae824d/pyce-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3789e9cb7d3fd99214e43414f015fb5", "sha256": "0eeea00d70385740d59ecbb1482101973fee2ac876203155f00f6a0e6f34426e"}, "downloads": -1, "filename": "pyce-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d3789e9cb7d3fd99214e43414f015fb5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <=3.7", "size": 7179, "upload_time": "2018-07-29T14:53:41", "upload_time_iso_8601": "2018-07-29T14:53:41.818343Z", "url": "https://files.pythonhosted.org/packages/40/cf/9e4f0a388e6bea327af5f5fcba0002c9c64bc77d6d08ba02812669008111/pyce-1.0.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "53294a9fb78b48e92f5e96909b08e3f4", "sha256": "3a679de025d444dc66250ed73a52f61ef2930ff595b69ba471d6ba438253f877"}, "downloads": -1, "filename": "pyce-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "53294a9fb78b48e92f5e96909b08e3f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7, <3.8", "size": 9055, "upload_time": "2018-09-22T06:34:42", "upload_time_iso_8601": "2018-09-22T06:34:42.575271Z", "url": "https://files.pythonhosted.org/packages/39/79/cba14351f49d92d9ece1a5d25700808304a13ba7c57c275397ff7945b894/pyce-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ddaf7ae13db5f01fd0c551874fe961f", "sha256": "edb5d4d44ebec0453f76d7930c85c92af2c036b6ecd5d1ad83f6c3213c7be758"}, "downloads": -1, "filename": "pyce-2.0.0.tar.gz", "has_sig": false, "md5_digest": "1ddaf7ae13db5f01fd0c551874fe961f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <3.8", "size": 7265, "upload_time": "2018-09-22T06:34:44", "upload_time_iso_8601": "2018-09-22T06:34:44.317540Z", "url": "https://files.pythonhosted.org/packages/4e/cd/9d8d9299e8ad81a0fa0352d242f269a2789228c3976f622c9364ef7e2723/pyce-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "53294a9fb78b48e92f5e96909b08e3f4", "sha256": "3a679de025d444dc66250ed73a52f61ef2930ff595b69ba471d6ba438253f877"}, "downloads": -1, "filename": "pyce-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "53294a9fb78b48e92f5e96909b08e3f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7, <3.8", "size": 9055, "upload_time": "2018-09-22T06:34:42", "upload_time_iso_8601": "2018-09-22T06:34:42.575271Z", "url": "https://files.pythonhosted.org/packages/39/79/cba14351f49d92d9ece1a5d25700808304a13ba7c57c275397ff7945b894/pyce-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ddaf7ae13db5f01fd0c551874fe961f", "sha256": "edb5d4d44ebec0453f76d7930c85c92af2c036b6ecd5d1ad83f6c3213c7be758"}, "downloads": -1, "filename": "pyce-2.0.0.tar.gz", "has_sig": false, "md5_digest": "1ddaf7ae13db5f01fd0c551874fe961f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <3.8", "size": 7265, "upload_time": "2018-09-22T06:34:44", "upload_time_iso_8601": "2018-09-22T06:34:44.317540Z", "url": "https://files.pythonhosted.org/packages/4e/cd/9d8d9299e8ad81a0fa0352d242f269a2789228c3976f622c9364ef7e2723/pyce-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:39 2020"}