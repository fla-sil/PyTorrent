{"info": {"author": "Timofey Kukushkin", "author_email": "tima@kukushkin.me", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Plugins", "Framework :: Pytest", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Testing"], "description": "# pytest-describe-it\n\n[![PyPI version](https://badge.fury.io/py/pytest-describe-it.svg)](https://pypi.org/project/pytest-describe-it/) ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pytest-describe-it.svg?color=green) [![Build Status](https://travis-ci.org/tkukushkin/pytest-describe-it.svg?branch=master)](https://travis-ci.org/tkukushkin/pytest-describe-it)\n\n## Example\n\nSome simple test:\n```python\nimport pytest\n\n\ndef add(x: int, y: int) -> int:\n    return x + y\n\n\n@pytest.mark.describe('add')\nclass TestAdd:\n\n    @pytest.mark.parametrize(['x', 'y', 'expected'], [\n        (1, 2, 3),\n        (3, 4, 7),\n        (5, 6, 10),\n    ])\n    @pytest.mark.it('returns {expected} for add({x}, {y})')\n    def test_add(self, x, y, expected):\n        assert add(x, y) == expected\n\n```\n\nPytest output:\n```python\ncollected 3 items\n\ntest_add.py ..F                                                                 [100%]\n\n====================================== FAILURES =======================================\n________________ TestAdd.test_add[[ add \u2014 returns 10 for add(5, 6) ]] _________________\n\nself = <test_add.TestAdd object at 0x10b740b70>, x = 5, y = 6, expected = 10\n\n    @pytest.mark.parametrize(['x', 'y', 'expected'], [\n        (1, 2, 3),\n        (3, 4, 7),\n        (5, 6, 10),\n    ])\n    @pytest.mark.it('returns {expected} for add({x}, {y})')\n    def test_add(self, x, y, expected):\n>       assert add(x, y) == expected\nE       assert 11 == 10\nE        +  where 11 = add(5, 6)\n\ntest_add.py:18: AssertionError\n========================= 1 failed, 2 passed in 0.05 seconds ==========================\n```\n\nWith pytest-sugar:\n```python\ncollecting ...\n test_add.py \u2713\u2713                                                          67% \u2588\u2588\u2588\u2588\u2588\u2588\u258b\n\n\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 TestAdd.test_add[[ add \u2014 returns 10 for add(5, 6) ]] \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\n\nself = <test_add.TestAdd object at 0x10e4e3550>, x = 5, y = 6, expected = 10\n\n    @pytest.mark.parametrize(['x', 'y', 'expected'], [\n        (1, 2, 3),\n        (3, 4, 7),\n        (5, 6, 10),\n    ])\n    @pytest.mark.it('returns {expected} for add({x}, {y})')\n    def test_add(self, x, y, expected):\n>       assert add(x, y) == expected\nE       assert 11 == 10\nE        +  where 11 = add(5, 6)\n\ntest_add.py:18: AssertionError\n\n test_add.py \u2a2f                                                          100% \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n\nResults (0.10s):\n       2 passed\n       1 failed\n         - test_add.py:11 TestAdd.test_add[[ add \u2014 returns 10 for add(5, 6) ]]\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tkukushkin/pytest-describe-it", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pytest-describe-it", "package_url": "https://pypi.org/project/pytest-describe-it/", "platform": "", "project_url": "https://pypi.org/project/pytest-describe-it/", "project_urls": {"Homepage": "https://github.com/tkukushkin/pytest-describe-it", "Source": "https://github.com/tkukushkin/pytest-describe-it"}, "release_url": "https://pypi.org/project/pytest-describe-it/0.1.0/", "requires_dist": ["pytest", "typing ; python_version < \"3\"", "pycodestyle ; extra == 'test'"], "requires_python": "", "summary": "plugin for rich text descriptions", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pytest-describe-it</h1>\n<p><a href=\"https://pypi.org/project/pytest-describe-it/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7f407482dce5b521551be6dc4da43840999efb9b/68747470733a2f2f62616467652e667572792e696f2f70792f7079746573742d64657363726962652d69742e737667\"></a> <img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5e0f528bc150c7a645926c736d5a3c72492f519f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7079746573742d64657363726962652d69742e7376673f636f6c6f723d677265656e\"> <a href=\"https://travis-ci.org/tkukushkin/pytest-describe-it\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a3edaff597bf0a9ee28724133781ba200924e5f1/68747470733a2f2f7472617669732d63692e6f72672f746b756b7573686b696e2f7079746573742d64657363726962652d69742e7376673f6272616e63683d6d6173746572\"></a></p>\n<h2>Example</h2>\n<p>Some simple test:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span>\n\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">describe</span><span class=\"p\">(</span><span class=\"s1\">'add'</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">TestAdd</span><span class=\"p\">:</span>\n\n    <span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">parametrize</span><span class=\"p\">([</span><span class=\"s1\">'x'</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">,</span> <span class=\"s1\">'expected'</span><span class=\"p\">],</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">),</span>\n    <span class=\"p\">])</span>\n    <span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">it</span><span class=\"p\">(</span><span class=\"s1\">'returns </span><span class=\"si\">{expected}</span><span class=\"s1\"> for add(</span><span class=\"si\">{x}</span><span class=\"s1\">, </span><span class=\"si\">{y}</span><span class=\"s1\">)'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test_add</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">expected</span><span class=\"p\">):</span>\n        <span class=\"k\">assert</span> <span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">expected</span>\n</pre>\n<p>Pytest output:</p>\n<pre><span class=\"n\">collected</span> <span class=\"mi\">3</span> <span class=\"n\">items</span>\n\n<span class=\"n\">test_add</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"o\">..</span><span class=\"n\">F</span>                                                                 <span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"o\">%</span><span class=\"p\">]</span>\n\n<span class=\"o\">======================================</span> <span class=\"n\">FAILURES</span> <span class=\"o\">=======================================</span>\n<span class=\"n\">________________</span> <span class=\"n\">TestAdd</span><span class=\"o\">.</span><span class=\"n\">test_add</span><span class=\"p\">[[</span> <span class=\"n\">add</span> <span class=\"err\">\u2014</span> <span class=\"n\">returns</span> <span class=\"mi\">10</span> <span class=\"k\">for</span> <span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span> <span class=\"p\">]]</span> <span class=\"n\">_________________</span>\n\n<span class=\"bp\">self</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">test_add</span><span class=\"o\">.</span><span class=\"n\">TestAdd</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x10b740b70</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">expected</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n\n    <span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">parametrize</span><span class=\"p\">([</span><span class=\"s1\">'x'</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">,</span> <span class=\"s1\">'expected'</span><span class=\"p\">],</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">),</span>\n    <span class=\"p\">])</span>\n    <span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">it</span><span class=\"p\">(</span><span class=\"s1\">'returns </span><span class=\"si\">{expected}</span><span class=\"s1\"> for add(</span><span class=\"si\">{x}</span><span class=\"s1\">, </span><span class=\"si\">{y}</span><span class=\"s1\">)'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test_add</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">expected</span><span class=\"p\">):</span>\n<span class=\"o\">&gt;</span>       <span class=\"k\">assert</span> <span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">expected</span>\n<span class=\"n\">E</span>       <span class=\"k\">assert</span> <span class=\"mi\">11</span> <span class=\"o\">==</span> <span class=\"mi\">10</span>\n<span class=\"n\">E</span>        <span class=\"o\">+</span>  <span class=\"n\">where</span> <span class=\"mi\">11</span> <span class=\"o\">=</span> <span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n\n<span class=\"n\">test_add</span><span class=\"o\">.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"mi\">18</span><span class=\"p\">:</span> <span class=\"ne\">AssertionError</span>\n<span class=\"o\">=========================</span> <span class=\"mi\">1</span> <span class=\"n\">failed</span><span class=\"p\">,</span> <span class=\"mi\">2</span> <span class=\"n\">passed</span> <span class=\"ow\">in</span> <span class=\"mf\">0.05</span> <span class=\"n\">seconds</span> <span class=\"o\">==========================</span>\n</pre>\n<p>With pytest-sugar:</p>\n<pre><span class=\"n\">collecting</span> <span class=\"o\">...</span>\n <span class=\"n\">test_add</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"err\">\u2713\u2713</span>                                                          <span class=\"mi\">67</span><span class=\"o\">%</span> <span class=\"err\">\u2588\u2588\u2588\u2588\u2588\u2588\u258b</span>\n\n<span class=\"err\">\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015</span> <span class=\"n\">TestAdd</span><span class=\"o\">.</span><span class=\"n\">test_add</span><span class=\"p\">[[</span> <span class=\"n\">add</span> <span class=\"err\">\u2014</span> <span class=\"n\">returns</span> <span class=\"mi\">10</span> <span class=\"k\">for</span> <span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span> <span class=\"p\">]]</span> <span class=\"err\">\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015</span>\n\n<span class=\"bp\">self</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">test_add</span><span class=\"o\">.</span><span class=\"n\">TestAdd</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x10e4e3550</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">expected</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n\n    <span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">parametrize</span><span class=\"p\">([</span><span class=\"s1\">'x'</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">,</span> <span class=\"s1\">'expected'</span><span class=\"p\">],</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">),</span>\n    <span class=\"p\">])</span>\n    <span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">it</span><span class=\"p\">(</span><span class=\"s1\">'returns </span><span class=\"si\">{expected}</span><span class=\"s1\"> for add(</span><span class=\"si\">{x}</span><span class=\"s1\">, </span><span class=\"si\">{y}</span><span class=\"s1\">)'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test_add</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">expected</span><span class=\"p\">):</span>\n<span class=\"o\">&gt;</span>       <span class=\"k\">assert</span> <span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">expected</span>\n<span class=\"n\">E</span>       <span class=\"k\">assert</span> <span class=\"mi\">11</span> <span class=\"o\">==</span> <span class=\"mi\">10</span>\n<span class=\"n\">E</span>        <span class=\"o\">+</span>  <span class=\"n\">where</span> <span class=\"mi\">11</span> <span class=\"o\">=</span> <span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n\n<span class=\"n\">test_add</span><span class=\"o\">.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"mi\">18</span><span class=\"p\">:</span> <span class=\"ne\">AssertionError</span>\n\n <span class=\"n\">test_add</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"err\">\u2a2f</span>                                                          <span class=\"mi\">100</span><span class=\"o\">%</span> <span class=\"err\">\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588</span>\n\n<span class=\"n\">Results</span> <span class=\"p\">(</span><span class=\"mf\">0.10</span><span class=\"n\">s</span><span class=\"p\">):</span>\n       <span class=\"mi\">2</span> <span class=\"n\">passed</span>\n       <span class=\"mi\">1</span> <span class=\"n\">failed</span>\n         <span class=\"o\">-</span> <span class=\"n\">test_add</span><span class=\"o\">.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"mi\">11</span> <span class=\"n\">TestAdd</span><span class=\"o\">.</span><span class=\"n\">test_add</span><span class=\"p\">[[</span> <span class=\"n\">add</span> <span class=\"err\">\u2014</span> <span class=\"n\">returns</span> <span class=\"mi\">10</span> <span class=\"k\">for</span> <span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span> <span class=\"p\">]]</span>\n</pre>\n\n          </div>"}, "last_serial": 5558130, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a51791f7fc8f87a26e7edd1c0f9340a8", "sha256": "102b14cdeea668eff089d706e03698b518d53174d2e1aed3c55c0e70a7ed7cf3"}, "downloads": -1, "filename": "pytest_describe_it-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a51791f7fc8f87a26e7edd1c0f9340a8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4327, "upload_time": "2019-07-19T19:41:30", "upload_time_iso_8601": "2019-07-19T19:41:30.336336Z", "url": "https://files.pythonhosted.org/packages/e2/43/a09d78e6eb9a1d469b7bcd40ca4cbecb9d1188ee7e66ca3edfb649a722bd/pytest_describe_it-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e8634d2b93fa253b78d4967ec157fcf", "sha256": "58789035ea73dce10253630c33de9b3afa2e3af320239bab137f2b7c9cb90a37"}, "downloads": -1, "filename": "pytest-describe-it-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1e8634d2b93fa253b78d4967ec157fcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3045, "upload_time": "2019-07-19T19:41:32", "upload_time_iso_8601": "2019-07-19T19:41:32.957798Z", "url": "https://files.pythonhosted.org/packages/3e/d3/3568eb89155be2917d504cba84d2d7c68e691a9b525b15d8263d9f4f6273/pytest-describe-it-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a51791f7fc8f87a26e7edd1c0f9340a8", "sha256": "102b14cdeea668eff089d706e03698b518d53174d2e1aed3c55c0e70a7ed7cf3"}, "downloads": -1, "filename": "pytest_describe_it-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a51791f7fc8f87a26e7edd1c0f9340a8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4327, "upload_time": "2019-07-19T19:41:30", "upload_time_iso_8601": "2019-07-19T19:41:30.336336Z", "url": "https://files.pythonhosted.org/packages/e2/43/a09d78e6eb9a1d469b7bcd40ca4cbecb9d1188ee7e66ca3edfb649a722bd/pytest_describe_it-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e8634d2b93fa253b78d4967ec157fcf", "sha256": "58789035ea73dce10253630c33de9b3afa2e3af320239bab137f2b7c9cb90a37"}, "downloads": -1, "filename": "pytest-describe-it-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1e8634d2b93fa253b78d4967ec157fcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3045, "upload_time": "2019-07-19T19:41:32", "upload_time_iso_8601": "2019-07-19T19:41:32.957798Z", "url": "https://files.pythonhosted.org/packages/3e/d3/3568eb89155be2917d504cba84d2d7c68e691a9b525b15d8263d9f4f6273/pytest-describe-it-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:16 2020"}