{"info": {"author": "Norman Moeschter-Schenck", "author_email": "norman.moeschter@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python"], "description": "# Monero health\n\nMonero health is supposed to provide information about the Monero daemon health.\n\nThere are two health checks at the moment:\n* Checking the Monero daemon RPC status using the `hard_fork_info` RPC.\n* Checking the Monero daemon P2P status (checks the given P2P port).\n* Checking the age of the last block on the daemon using a pre-configured offset.\n\n**_Note_**:\n\nThe Monero daemon RPC information are retrieved using the Monero daemon JSON RPC.\nThe RPC connection is established using [`python-monerorpc`](https://github.com/monero-ecosystem/python-monerorpc).\n\n## Configuration\n\n### Monero daemon RPC connection\nThe connection to the Monero daemon RPC can be configured using environment variables:\n\n| environment variable | default value |\n|----------------------|---------------|\n| `MONEROD_URL` | `\"127.0.0.1\"` |\n| `MONEROD_RPC_PORT` | `18081` |\n| `MONEROD_P2P_PORT` | `18080` |\n| `MONEROD_RPC_USER` | `\"\"` |\n| `MONEROD_RPC_PASSWORD` | `\"\"` |\n\n**_Note_**:\n\nThe RPC connection is established using [`python-monerorpc`](https://github.com/monero-ecosystem/python-monerorpc).\n\n### Last block age\n```\nfrom monero_health import daemon_last_block_check\n```\n\nThe last block's timestamp is checked against a given pre-configured offset:\n\n| environment variable | default value |\n|----------------------|---------------|\n| `OFFSET` | `12` |\n| `OFFSET_UNIT` | `\"minutes\"` |\n\nI.e that the last block is considered out-of-date as soon as it becomes older than - in the default case - `12 [minutes]`.\n\nThe Monero RPC method used is:\n* `get_last_block_header`\n\n### Daemon RPC status\n```\nfrom monero_health import daemon_rpc_status_check\n```\n\nNo additional configuration is needed.\n\nThe Monero RPC method used is:\n* `hard_fork_info`\n\n### Daemon P2P status\n```\nfrom monero_health import daemon_p2p_status_check\n```\n\nNo additional configuration is needed.\n\nA socket connection is established, which checks the connectivity to the P2P port.\n\n## Results\n\n### JSON response\nThis module is not really supposed to be run as a script, rather as a module.\n\nHowever, it is possible to directly run it as a script. it will then output the complete information:\n```python\n    MONEROD_URL=node.xmr.to python monero_health.py\n    # Last block age.\n    INFO:DaemonHealth:Checking 'node.xmr.to:18081'.\n    {'hash': 'b0f683278980ac65adfa6600c040d38f29f2299912c6c580d04f2f6704bf11d3', 'block_timestamp': '2019-12-19T15:02:16', 'check_timestamp': '2019-12-19T15:08:29', 'status': 'OK', 'block_recent': True, 'block_recent_offset': 12, 'block_recent_offset_unit': 'minutes'}\n    # Monero daemon status.\n    INFO:DaemonHealth:Checking 'node.xmr.to:18081'.\n    {'status': 'OK', 'version': 12}\n```\n\nWhen imported as a module the functions can be imported/called separately, like this:\n* Last block age:\n```python\n    from monero_health import (\n        daemon_last_block_check,\n    )\n    ...\n    result = daemon_last_block_check()\n    ...\n```\n* Monero daemaon status:\n```python\n    from monero_health import (\n        daemon_status_check,\n    )\n    ...\n    result = daemon_status_check()\n    ...\n```\n* Combined daemon status:\n```python\n    from monero_health import (\n        daemon_combined_status_check,\n    )\n    ...\n    result = daemon_combined_status_check()\n    ...\n```\n\n### Possible status values\n\nThe `status` returned can have the following values:\n* `OK`\n  - For a last block that **is not** considered old: (`daemon_last_block_check`)\n  - For a daemon with status `OK`: (`daemon_rpc_status_check`, `daemon_p2p_status_check`, `daemon_stati_check`)\n  - Every possible status is `OK`: (`daemon_combined_status_check`)\n* `ERROR`\n  - For a last block that **is** considered old: (`daemon_last_block_check`)\n  - For a daemon with status `ERROR`: (`daemon_rpc_status_check`, `daemon_p2p_status_check`, `daemon_stati_check`)\n  - At least one possible status is `ERROR`: (`daemon_combined_status_check`)\n* `UNKNOWN`\n  - In case of a connection error not initiated by the peer (mostly related to HTTP requests): (`daemon_last_block_check`, `daemon_rpc_status_check`, `daemon_p2p_status_check`, `daemon_stati_check`)\n  - At least one possible status is `UNKNOWN`: (`daemon_combined_status_check`)\n\n### Errors\n\nIn case of an error, an `error` key is added to the responses of:\n* `daemon_last_block_check`\n* `daemon_rpc_status_check`, `daemon_p2p_status_check`, `daemon_stati_check`\nbut not to `daemon_combined_status_check`.\n\nThis error key always contains the keys:\n* `error`\n* `message`\n\nExample - No Monero daemon running at `127.0.0.1:18081`:\n```\n{\n    \"block_recent\": false,\n    \"block_recent_offset\": \"12\",\n    \"block_recent_offset_unit\": \"minutes\",\n    \"block_timestamp\": \"---\",\n    \"check_timestamp\": \"2020-01-07T14:53:24\",\n    \"error\": {\n        \"error\": \"-341: could not establish a connection, original error: HTTPConnectionPool(host='127.0.0.1', port=18081): Max retries exceeded with url: /json_rpc (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fe25e449cd0>: Failed to establish a new connection: [Errno 111] Connection refused'))\",\n        \"message\": \"Cannot determine daemon status. Daemon: '127.0.0.1:18081'.\"\n    },\n    \"hash\": \"---\",\n    \"status\": \"UNKNOWN\"\n}\n```\n\n## Full example\n\nWhen run as a script (against the XMR.to public node `node.xmr.to`):\n```\nMONEROD_URL=node.xmr.to python monero_health.py\n```\n\nall health and status checks are run one after another:\n* Last block (last block's timestamp).\n* Daemon RPC status (port `18081`, RPC method `hard_fork_info`).\n* Daemon P2P status (port `18080`).\n* Both dameon stati (combined `status` key).\n* Run all checks **but do not consider** the daemon P2P status in the resulting `status` key (dameon P2P result is still returned).\n* Run all checks **and consider** the daemon P2P status in the resulting `status` key.\n\nThe result will look like this:\n```\n----Last block check----:\nINFO:DaemonHealth:Checking 'node.xmr.to:18081'.\n{'hash': '552cc36a9f0d9417876aaac61ee45b9b4582b054dd4f33e7534f79736318e002', 'block_age': '0:01:54', 'block_timestamp': '2020-02-21T16:34:08', 'check_timestamp': '2020-02-21T16:36:02', 'status': 'OK', 'block_recent': True, 'block_recent_offset': 12, 'block_recent_offset_unit': 'minutes', 'host': 'node.xmr.to:18081'}\n----Daemon rpc check----:\nINFO:DaemonHealth:Checking 'node.xmr.to:18081'.\n{'status': 'OK', 'version': 12, 'host': 'node.xmr.to:18081'}\n----Daemon p2p check----:\nINFO:DaemonHealth:Checking 'node.xmr.to:18080'.\n{'status': 'OK', 'host': 'node.xmr.to:18080'}\n----Daemon stati check----:\nINFO:DaemonHealth:Checking 'node.xmr.to:18081'.\nINFO:DaemonHealth:Checking 'node.xmr.to:18080'.\nINFO:DaemonHealth:{\"message\": \"Combined daemon status (RPC, P2P) is 'OK'.\"}\n{'rpc': {'status': 'OK', 'version': 12, 'host': 'node.xmr.to:18081'}, 'p2p': {'status': 'OK', 'host': 'node.xmr.to:18080'}, 'status': 'OK', 'host': 'node.xmr.to'}\n----Overall RPC check----:\nINFO:DaemonHealth:Checking 'node.xmr.to:18081'.\nINFO:DaemonHealth:Checking 'node.xmr.to:18081'.\nINFO:DaemonHealth:Checking 'node.xmr.to:18080'.\nINFO:DaemonHealth:{\"message\": \"Combined daemon status (RPC, P2P) is 'OK'.\"}\n--OK\nINFO:DaemonHealth:{\"message\": \"Combined status is 'OK'.\"}\n{'last_block': {'hash': '552cc36a9f0d9417876aaac61ee45b9b4582b054dd4f33e7534f79736318e002', 'block_age': '0:01:55', 'block_timestamp': '2020-02-21T16:34:08', 'check_timestamp': '2020-02-21T16:36:03', 'status': 'OK', 'block_recent': True, 'block_recent_offset': 12, 'block_recent_offset_unit': 'minutes', 'host': 'node.xmr.to:18081'}, 'monerod': {'rpc': {'status': 'OK', 'version': 12, 'host': 'node.xmr.to:18081'}, 'p2p': {'status': 'OK', 'host': 'node.xmr.to:18080'}, 'status': 'OK', 'host': 'node.xmr.to'}, 'status': 'OK', 'host': 'node.xmr.to'}\n----Overall check----:\nINFO:DaemonHealth:Checking 'node.xmr.to:18081'.\nINFO:DaemonHealth:Checking 'node.xmr.to:18081'.\nINFO:DaemonHealth:Checking 'node.xmr.to:18080'.\nINFO:DaemonHealth:{\"message\": \"Combined daemon status (RPC, P2P) is 'OK'.\"}\n--OK\nINFO:DaemonHealth:{\"message\": \"Combined status is 'OK'.\"}\n{'last_block': {'hash': '552cc36a9f0d9417876aaac61ee45b9b4582b054dd4f33e7534f79736318e002', 'block_age': '0:01:56', 'block_timestamp': '2020-02-21T16:34:08', 'check_timestamp': '2020-02-21T16:36:04', 'status': 'OK', 'block_recent': True, 'block_recent_offset': 12, 'block_recent_offset_unit': 'minutes', 'host': 'node.xmr.to:18081'}, 'monerod': {'rpc': {'status': 'OK', 'version': 12, 'host': 'node.xmr.to:18081'}, 'p2p': {'status': 'OK', 'host': 'node.xmr.to:18080'}, 'status': 'OK', 'host': 'node.xmr.to'}, 'status': 'OK', 'host': 'node.xmr.to'}\n(venv) [norman ~/git_sources/monero_health.git (master *+%=)]$\n```\n\n## Tests\n```\n# Create and activate a virtual environment.\npython -m venv venv\n. venv/bin/activate\n# Install the dependencies.\npip install --upgrade -r requirements.txt\n# Run tests.\npytest\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/normoes/monero_health/archive/v1.0.4.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/normoes/monero_health", "keywords": "", "license": "", "maintainer": "Norman Moeschter-Schenck", "maintainer_email": "<norman.moeschter@gmail.com>", "name": "monero-health", "package_url": "https://pypi.org/project/monero-health/", "platform": "", "project_url": "https://pypi.org/project/monero-health/", "project_urls": {"Download": "https://github.com/normoes/monero_health/archive/v1.0.4.tar.gz", "Homepage": "https://github.com/normoes/monero_health"}, "release_url": "https://pypi.org/project/monero-health/1.0.4/", "requires_dist": null, "requires_python": "", "summary": "Check health of monero daemons.", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Monero health</h1>\n<p>Monero health is supposed to provide information about the Monero daemon health.</p>\n<p>There are two health checks at the moment:</p>\n<ul>\n<li>Checking the Monero daemon RPC status using the <code>hard_fork_info</code> RPC.</li>\n<li>Checking the Monero daemon P2P status (checks the given P2P port).</li>\n<li>Checking the age of the last block on the daemon using a pre-configured offset.</li>\n</ul>\n<p><strong><em>Note</em></strong>:</p>\n<p>The Monero daemon RPC information are retrieved using the Monero daemon JSON RPC.\nThe RPC connection is established using <a href=\"https://github.com/monero-ecosystem/python-monerorpc\" rel=\"nofollow\"><code>python-monerorpc</code></a>.</p>\n<h2>Configuration</h2>\n<h3>Monero daemon RPC connection</h3>\n<p>The connection to the Monero daemon RPC can be configured using environment variables:</p>\n<table>\n<thead>\n<tr>\n<th>environment variable</th>\n<th>default value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>MONEROD_URL</code></td>\n<td><code>\"127.0.0.1\"</code></td>\n</tr>\n<tr>\n<td><code>MONEROD_RPC_PORT</code></td>\n<td><code>18081</code></td>\n</tr>\n<tr>\n<td><code>MONEROD_P2P_PORT</code></td>\n<td><code>18080</code></td>\n</tr>\n<tr>\n<td><code>MONEROD_RPC_USER</code></td>\n<td><code>\"\"</code></td>\n</tr>\n<tr>\n<td><code>MONEROD_RPC_PASSWORD</code></td>\n<td><code>\"\"</code></td>\n</tr></tbody></table>\n<p><strong><em>Note</em></strong>:</p>\n<p>The RPC connection is established using <a href=\"https://github.com/monero-ecosystem/python-monerorpc\" rel=\"nofollow\"><code>python-monerorpc</code></a>.</p>\n<h3>Last block age</h3>\n<pre><code>from monero_health import daemon_last_block_check\n</code></pre>\n<p>The last block's timestamp is checked against a given pre-configured offset:</p>\n<table>\n<thead>\n<tr>\n<th>environment variable</th>\n<th>default value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>OFFSET</code></td>\n<td><code>12</code></td>\n</tr>\n<tr>\n<td><code>OFFSET_UNIT</code></td>\n<td><code>\"minutes\"</code></td>\n</tr></tbody></table>\n<p>I.e that the last block is considered out-of-date as soon as it becomes older than - in the default case - <code>12 [minutes]</code>.</p>\n<p>The Monero RPC method used is:</p>\n<ul>\n<li><code>get_last_block_header</code></li>\n</ul>\n<h3>Daemon RPC status</h3>\n<pre><code>from monero_health import daemon_rpc_status_check\n</code></pre>\n<p>No additional configuration is needed.</p>\n<p>The Monero RPC method used is:</p>\n<ul>\n<li><code>hard_fork_info</code></li>\n</ul>\n<h3>Daemon P2P status</h3>\n<pre><code>from monero_health import daemon_p2p_status_check\n</code></pre>\n<p>No additional configuration is needed.</p>\n<p>A socket connection is established, which checks the connectivity to the P2P port.</p>\n<h2>Results</h2>\n<h3>JSON response</h3>\n<p>This module is not really supposed to be run as a script, rather as a module.</p>\n<p>However, it is possible to directly run it as a script. it will then output the complete information:</p>\n<pre>    <span class=\"n\">MONEROD_URL</span><span class=\"o\">=</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">xmr</span><span class=\"o\">.</span><span class=\"n\">to</span> <span class=\"n\">python</span> <span class=\"n\">monero_health</span><span class=\"o\">.</span><span class=\"n\">py</span>\n    <span class=\"c1\"># Last block age.</span>\n    <span class=\"n\">INFO</span><span class=\"p\">:</span><span class=\"n\">DaemonHealth</span><span class=\"p\">:</span><span class=\"n\">Checking</span> <span class=\"s1\">'node.xmr.to:18081'</span><span class=\"o\">.</span>\n    <span class=\"p\">{</span><span class=\"s1\">'hash'</span><span class=\"p\">:</span> <span class=\"s1\">'b0f683278980ac65adfa6600c040d38f29f2299912c6c580d04f2f6704bf11d3'</span><span class=\"p\">,</span> <span class=\"s1\">'block_timestamp'</span><span class=\"p\">:</span> <span class=\"s1\">'2019-12-19T15:02:16'</span><span class=\"p\">,</span> <span class=\"s1\">'check_timestamp'</span><span class=\"p\">:</span> <span class=\"s1\">'2019-12-19T15:08:29'</span><span class=\"p\">,</span> <span class=\"s1\">'status'</span><span class=\"p\">:</span> <span class=\"s1\">'OK'</span><span class=\"p\">,</span> <span class=\"s1\">'block_recent'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">'block_recent_offset'</span><span class=\"p\">:</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"s1\">'block_recent_offset_unit'</span><span class=\"p\">:</span> <span class=\"s1\">'minutes'</span><span class=\"p\">}</span>\n    <span class=\"c1\"># Monero daemon status.</span>\n    <span class=\"n\">INFO</span><span class=\"p\">:</span><span class=\"n\">DaemonHealth</span><span class=\"p\">:</span><span class=\"n\">Checking</span> <span class=\"s1\">'node.xmr.to:18081'</span><span class=\"o\">.</span>\n    <span class=\"p\">{</span><span class=\"s1\">'status'</span><span class=\"p\">:</span> <span class=\"s1\">'OK'</span><span class=\"p\">,</span> <span class=\"s1\">'version'</span><span class=\"p\">:</span> <span class=\"mi\">12</span><span class=\"p\">}</span>\n</pre>\n<p>When imported as a module the functions can be imported/called separately, like this:</p>\n<ul>\n<li>Last block age:</li>\n</ul>\n<pre>    <span class=\"kn\">from</span> <span class=\"nn\">monero_health</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n        <span class=\"n\">daemon_last_block_check</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">daemon_last_block_check</span><span class=\"p\">()</span>\n    <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>Monero daemaon status:</li>\n</ul>\n<pre>    <span class=\"kn\">from</span> <span class=\"nn\">monero_health</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n        <span class=\"n\">daemon_status_check</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">daemon_status_check</span><span class=\"p\">()</span>\n    <span class=\"o\">...</span>\n</pre>\n<ul>\n<li>Combined daemon status:</li>\n</ul>\n<pre>    <span class=\"kn\">from</span> <span class=\"nn\">monero_health</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n        <span class=\"n\">daemon_combined_status_check</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">daemon_combined_status_check</span><span class=\"p\">()</span>\n    <span class=\"o\">...</span>\n</pre>\n<h3>Possible status values</h3>\n<p>The <code>status</code> returned can have the following values:</p>\n<ul>\n<li><code>OK</code>\n<ul>\n<li>For a last block that <strong>is not</strong> considered old: (<code>daemon_last_block_check</code>)</li>\n<li>For a daemon with status <code>OK</code>: (<code>daemon_rpc_status_check</code>, <code>daemon_p2p_status_check</code>, <code>daemon_stati_check</code>)</li>\n<li>Every possible status is <code>OK</code>: (<code>daemon_combined_status_check</code>)</li>\n</ul>\n</li>\n<li><code>ERROR</code>\n<ul>\n<li>For a last block that <strong>is</strong> considered old: (<code>daemon_last_block_check</code>)</li>\n<li>For a daemon with status <code>ERROR</code>: (<code>daemon_rpc_status_check</code>, <code>daemon_p2p_status_check</code>, <code>daemon_stati_check</code>)</li>\n<li>At least one possible status is <code>ERROR</code>: (<code>daemon_combined_status_check</code>)</li>\n</ul>\n</li>\n<li><code>UNKNOWN</code>\n<ul>\n<li>In case of a connection error not initiated by the peer (mostly related to HTTP requests): (<code>daemon_last_block_check</code>, <code>daemon_rpc_status_check</code>, <code>daemon_p2p_status_check</code>, <code>daemon_stati_check</code>)</li>\n<li>At least one possible status is <code>UNKNOWN</code>: (<code>daemon_combined_status_check</code>)</li>\n</ul>\n</li>\n</ul>\n<h3>Errors</h3>\n<p>In case of an error, an <code>error</code> key is added to the responses of:</p>\n<ul>\n<li><code>daemon_last_block_check</code></li>\n<li><code>daemon_rpc_status_check</code>, <code>daemon_p2p_status_check</code>, <code>daemon_stati_check</code>\nbut not to <code>daemon_combined_status_check</code>.</li>\n</ul>\n<p>This error key always contains the keys:</p>\n<ul>\n<li><code>error</code></li>\n<li><code>message</code></li>\n</ul>\n<p>Example - No Monero daemon running at <code>127.0.0.1:18081</code>:</p>\n<pre><code>{\n    \"block_recent\": false,\n    \"block_recent_offset\": \"12\",\n    \"block_recent_offset_unit\": \"minutes\",\n    \"block_timestamp\": \"---\",\n    \"check_timestamp\": \"2020-01-07T14:53:24\",\n    \"error\": {\n        \"error\": \"-341: could not establish a connection, original error: HTTPConnectionPool(host='127.0.0.1', port=18081): Max retries exceeded with url: /json_rpc (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7fe25e449cd0&gt;: Failed to establish a new connection: [Errno 111] Connection refused'))\",\n        \"message\": \"Cannot determine daemon status. Daemon: '127.0.0.1:18081'.\"\n    },\n    \"hash\": \"---\",\n    \"status\": \"UNKNOWN\"\n}\n</code></pre>\n<h2>Full example</h2>\n<p>When run as a script (against the XMR.to public node <code>node.xmr.to</code>):</p>\n<pre><code>MONEROD_URL=node.xmr.to python monero_health.py\n</code></pre>\n<p>all health and status checks are run one after another:</p>\n<ul>\n<li>Last block (last block's timestamp).</li>\n<li>Daemon RPC status (port <code>18081</code>, RPC method <code>hard_fork_info</code>).</li>\n<li>Daemon P2P status (port <code>18080</code>).</li>\n<li>Both dameon stati (combined <code>status</code> key).</li>\n<li>Run all checks <strong>but do not consider</strong> the daemon P2P status in the resulting <code>status</code> key (dameon P2P result is still returned).</li>\n<li>Run all checks <strong>and consider</strong> the daemon P2P status in the resulting <code>status</code> key.</li>\n</ul>\n<p>The result will look like this:</p>\n<pre><code>----Last block check----:\nINFO:DaemonHealth:Checking 'node.xmr.to:18081'.\n{'hash': '552cc36a9f0d9417876aaac61ee45b9b4582b054dd4f33e7534f79736318e002', 'block_age': '0:01:54', 'block_timestamp': '2020-02-21T16:34:08', 'check_timestamp': '2020-02-21T16:36:02', 'status': 'OK', 'block_recent': True, 'block_recent_offset': 12, 'block_recent_offset_unit': 'minutes', 'host': 'node.xmr.to:18081'}\n----Daemon rpc check----:\nINFO:DaemonHealth:Checking 'node.xmr.to:18081'.\n{'status': 'OK', 'version': 12, 'host': 'node.xmr.to:18081'}\n----Daemon p2p check----:\nINFO:DaemonHealth:Checking 'node.xmr.to:18080'.\n{'status': 'OK', 'host': 'node.xmr.to:18080'}\n----Daemon stati check----:\nINFO:DaemonHealth:Checking 'node.xmr.to:18081'.\nINFO:DaemonHealth:Checking 'node.xmr.to:18080'.\nINFO:DaemonHealth:{\"message\": \"Combined daemon status (RPC, P2P) is 'OK'.\"}\n{'rpc': {'status': 'OK', 'version': 12, 'host': 'node.xmr.to:18081'}, 'p2p': {'status': 'OK', 'host': 'node.xmr.to:18080'}, 'status': 'OK', 'host': 'node.xmr.to'}\n----Overall RPC check----:\nINFO:DaemonHealth:Checking 'node.xmr.to:18081'.\nINFO:DaemonHealth:Checking 'node.xmr.to:18081'.\nINFO:DaemonHealth:Checking 'node.xmr.to:18080'.\nINFO:DaemonHealth:{\"message\": \"Combined daemon status (RPC, P2P) is 'OK'.\"}\n--OK\nINFO:DaemonHealth:{\"message\": \"Combined status is 'OK'.\"}\n{'last_block': {'hash': '552cc36a9f0d9417876aaac61ee45b9b4582b054dd4f33e7534f79736318e002', 'block_age': '0:01:55', 'block_timestamp': '2020-02-21T16:34:08', 'check_timestamp': '2020-02-21T16:36:03', 'status': 'OK', 'block_recent': True, 'block_recent_offset': 12, 'block_recent_offset_unit': 'minutes', 'host': 'node.xmr.to:18081'}, 'monerod': {'rpc': {'status': 'OK', 'version': 12, 'host': 'node.xmr.to:18081'}, 'p2p': {'status': 'OK', 'host': 'node.xmr.to:18080'}, 'status': 'OK', 'host': 'node.xmr.to'}, 'status': 'OK', 'host': 'node.xmr.to'}\n----Overall check----:\nINFO:DaemonHealth:Checking 'node.xmr.to:18081'.\nINFO:DaemonHealth:Checking 'node.xmr.to:18081'.\nINFO:DaemonHealth:Checking 'node.xmr.to:18080'.\nINFO:DaemonHealth:{\"message\": \"Combined daemon status (RPC, P2P) is 'OK'.\"}\n--OK\nINFO:DaemonHealth:{\"message\": \"Combined status is 'OK'.\"}\n{'last_block': {'hash': '552cc36a9f0d9417876aaac61ee45b9b4582b054dd4f33e7534f79736318e002', 'block_age': '0:01:56', 'block_timestamp': '2020-02-21T16:34:08', 'check_timestamp': '2020-02-21T16:36:04', 'status': 'OK', 'block_recent': True, 'block_recent_offset': 12, 'block_recent_offset_unit': 'minutes', 'host': 'node.xmr.to:18081'}, 'monerod': {'rpc': {'status': 'OK', 'version': 12, 'host': 'node.xmr.to:18081'}, 'p2p': {'status': 'OK', 'host': 'node.xmr.to:18080'}, 'status': 'OK', 'host': 'node.xmr.to'}, 'status': 'OK', 'host': 'node.xmr.to'}\n(venv) [norman ~/git_sources/monero_health.git (master *+%=)]$\n</code></pre>\n<h2>Tests</h2>\n<pre><code># Create and activate a virtual environment.\npython -m venv venv\n. venv/bin/activate\n# Install the dependencies.\npip install --upgrade -r requirements.txt\n# Run tests.\npytest\n</code></pre>\n\n          </div>"}, "last_serial": 6739378, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "62eeceeb0f3fb09a03fc3f7556451291", "sha256": "c93f503d77f5ce7e1a3b58bd8afd397310e88d6f214621043459ffe94fc00fe0"}, "downloads": -1, "filename": "monero_health-0.0.1.tar.gz", "has_sig": false, "md5_digest": "62eeceeb0f3fb09a03fc3f7556451291", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2394, "upload_time": "2019-12-19T15:27:55", "upload_time_iso_8601": "2019-12-19T15:27:55.515973Z", "url": "https://files.pythonhosted.org/packages/6b/39/dd08e1399b6550443b337d4ae2a2de352b13fb065b1299a03ff1f25a6f70/monero_health-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "c58d8be1d0881a9ff7c3b8b7dbb8d9bf", "sha256": "afb46759f7d9e2f631b60b7b74383dfebaf887e891035f677d36974f5fb49f0e"}, "downloads": -1, "filename": "monero_health-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c58d8be1d0881a9ff7c3b8b7dbb8d9bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3495, "upload_time": "2019-12-19T15:35:11", "upload_time_iso_8601": "2019-12-19T15:35:11.426972Z", "url": "https://files.pythonhosted.org/packages/52/6b/d94a0c60f27bedb7492e38d8796f1dffca5fdc1a25089d6318f23da6a22d/monero_health-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "616f2409293f98135cb1179c9fd83f15", "sha256": "4ca2cd11134281bb3a76b7a0537272b360538d7a4f272b7e14c9f77f18e4d285"}, "downloads": -1, "filename": "monero_health-0.0.3.tar.gz", "has_sig": false, "md5_digest": "616f2409293f98135cb1179c9fd83f15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3730, "upload_time": "2019-12-20T10:33:10", "upload_time_iso_8601": "2019-12-20T10:33:10.076735Z", "url": "https://files.pythonhosted.org/packages/74/77/de34dd038b26b389d4a0da8ae96e5c44ed494ef6c9332ae894a6c38931fd/monero_health-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "177c57f3f4c47e8bfc2c80a227b4dbb8", "sha256": "537cefaaa7b2e779900e9389d20e5de95e13cddbd298e0a51dc29b9991085a10"}, "downloads": -1, "filename": "monero_health-0.0.4.tar.gz", "has_sig": false, "md5_digest": "177c57f3f4c47e8bfc2c80a227b4dbb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3782, "upload_time": "2019-12-22T18:24:59", "upload_time_iso_8601": "2019-12-22T18:24:59.353587Z", "url": "https://files.pythonhosted.org/packages/ec/fe/64057d481544859f2de0a808a8e117b70b1fb3675829b7575904cacfa7fe/monero_health-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "d75fcac7a893abf6e8c0d8aca03bc524", "sha256": "c8baaf7157a98ee72241b5ab8dfe49f86f262c83ef8806e51b4734a4f83c779c"}, "downloads": -1, "filename": "monero_health-0.0.5.tar.gz", "has_sig": false, "md5_digest": "d75fcac7a893abf6e8c0d8aca03bc524", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3909, "upload_time": "2020-01-06T15:01:15", "upload_time_iso_8601": "2020-01-06T15:01:15.409815Z", "url": "https://files.pythonhosted.org/packages/00/ab/beda4206d480409f7426d2ac97a520d1d4ea90bf0d6d7a9fb52138d9e98a/monero_health-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "5cbbf0d48eebef571386a802f15f2931", "sha256": "af4e2da2d4c12aa125fb4fd743fd3a4a49c1d17c90fc25bc89a67b177605c6de"}, "downloads": -1, "filename": "monero_health-0.0.6.tar.gz", "has_sig": false, "md5_digest": "5cbbf0d48eebef571386a802f15f2931", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3920, "upload_time": "2020-01-07T10:59:42", "upload_time_iso_8601": "2020-01-07T10:59:42.211631Z", "url": "https://files.pythonhosted.org/packages/15/7d/d373bf1b39ce9dabf03f0c54f785bccdd1a228fe656a39b6b0c137a45010/monero_health-0.0.6.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "35e8f389dd7982aad303d72016090d32", "sha256": "833c2a4991d2d5a7b6ee030f2432f94f368cd0245de68bdb4881a794ce87257d"}, "downloads": -1, "filename": "monero_health-0.1.0.tar.gz", "has_sig": false, "md5_digest": "35e8f389dd7982aad303d72016090d32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4341, "upload_time": "2020-01-07T14:05:31", "upload_time_iso_8601": "2020-01-07T14:05:31.166674Z", "url": "https://files.pythonhosted.org/packages/29/cc/505dcadd168ff8c4dbcf56930b974e6471f956e2d18bbbdf3601b3ecdaee/monero_health-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e00f2fa78b3b94b45416260386614418", "sha256": "de92eab1b83617cb0362cb10a49771f279894ea546fd98608ca74c8154d4bc5d"}, "downloads": -1, "filename": "monero_health-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e00f2fa78b3b94b45416260386614418", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4312, "upload_time": "2020-01-07T14:25:13", "upload_time_iso_8601": "2020-01-07T14:25:13.752775Z", "url": "https://files.pythonhosted.org/packages/2a/c4/547d563942fb0f174e92f2a4add33cd99bf1a4ec2ea75d7bc94cacc3d7f8/monero_health-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d372ed0f7cc1b726a3099da04a2c0e0c", "sha256": "13c97332af03e1e45874d586b4ec66403af203b070038f124686ef16c56851ae"}, "downloads": -1, "filename": "monero_health-0.1.2.tar.gz", "has_sig": false, "md5_digest": "d372ed0f7cc1b726a3099da04a2c0e0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5106, "upload_time": "2020-01-07T15:32:47", "upload_time_iso_8601": "2020-01-07T15:32:47.866785Z", "url": "https://files.pythonhosted.org/packages/4c/ab/6c765c5645befd230ef64bf419aeea06ee07d7280c9e454c718731b8ea26/monero_health-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "6f6c4f79034f7125537d272ff32f9474", "sha256": "dcc0bdef4bdf8e16455c33e90bf17fd5a694b8700144b3755c01eca8c1dfb8b7"}, "downloads": -1, "filename": "monero_health-0.1.3.tar.gz", "has_sig": false, "md5_digest": "6f6c4f79034f7125537d272ff32f9474", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5294, "upload_time": "2020-01-09T14:39:21", "upload_time_iso_8601": "2020-01-09T14:39:21.756303Z", "url": "https://files.pythonhosted.org/packages/07/6a/606f72840a9baac448840e827031b9aebab44c36a6cfa2945828d2252984/monero_health-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "b92bf6c0d128ed0b20a4b2e719ffdd77", "sha256": "b2d8a68e470cfea70c73c645cff91c3ab392e6bab3daefdb087ee51b15e5aae2"}, "downloads": -1, "filename": "monero_health-0.1.4.tar.gz", "has_sig": false, "md5_digest": "b92bf6c0d128ed0b20a4b2e719ffdd77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5261, "upload_time": "2020-01-09T15:01:26", "upload_time_iso_8601": "2020-01-09T15:01:26.414769Z", "url": "https://files.pythonhosted.org/packages/f5/21/fcc5fe72a248ef9cf6f41f17f992c349c85824f8613e82c65e4dc075bb80/monero_health-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "c90fa0b8dd5e3597782327c343ab7746", "sha256": "4c7ebf25ef303b9e49d579c822c46cebbee5f2f08db90c0cde50d9971dcf4f39"}, "downloads": -1, "filename": "monero_health-0.1.5.tar.gz", "has_sig": false, "md5_digest": "c90fa0b8dd5e3597782327c343ab7746", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5289, "upload_time": "2020-01-13T15:14:27", "upload_time_iso_8601": "2020-01-13T15:14:27.463883Z", "url": "https://files.pythonhosted.org/packages/0a/7b/ec29cc84dcb85754679aa709ac5b6ba286101f0ddab15588ff8b8994eb7c/monero_health-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "740fc2cf63648d3612047fedbda1d98b", "sha256": "0048106b7dd91b58ae15bb9998d395454e5074bcee69863b32285f603d6279a6"}, "downloads": -1, "filename": "monero_health-0.1.6.tar.gz", "has_sig": false, "md5_digest": "740fc2cf63648d3612047fedbda1d98b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5284, "upload_time": "2020-01-13T15:25:21", "upload_time_iso_8601": "2020-01-13T15:25:21.153425Z", "url": "https://files.pythonhosted.org/packages/8d/b4/0d21c659a58d2a6d0868fc4e891f3b3ed1071cbb8a72229bc139de07f747/monero_health-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "d6ba396915a4a3b3cc4d1461547047d4", "sha256": "6d1c658179ee233d1d8cb9abdc02ebd39c1213fe07f8048d2d854d70090c80b5"}, "downloads": -1, "filename": "monero_health-0.1.7.tar.gz", "has_sig": false, "md5_digest": "d6ba396915a4a3b3cc4d1461547047d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5306, "upload_time": "2020-01-13T15:37:26", "upload_time_iso_8601": "2020-01-13T15:37:26.007323Z", "url": "https://files.pythonhosted.org/packages/0a/95/dd07d01d6eda2e2b07808fb09e1e01fe82741ef3fa42e0c22fab3c21c67e/monero_health-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "d1b1fa5361b0f8d3faed549046839d71", "sha256": "36c4058ca6bfdbc1ba61761a90259eb662653a44467ea342019938573172013c"}, "downloads": -1, "filename": "monero_health-0.1.8.tar.gz", "has_sig": false, "md5_digest": "d1b1fa5361b0f8d3faed549046839d71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5356, "upload_time": "2020-01-16T09:27:57", "upload_time_iso_8601": "2020-01-16T09:27:57.923805Z", "url": "https://files.pythonhosted.org/packages/e5/a1/215de2c2a5cf769f5c2e03a53f8605c3c1821f91de2250dfec1ce8ccf1c5/monero_health-0.1.8.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "f6c24e9d870c53264b42839a697c2c4b", "sha256": "b834ad13a77101062d4ae1e8c88dee003bf4426486c2fb6c9293297c34e26d00"}, "downloads": -1, "filename": "monero_health-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f6c24e9d870c53264b42839a697c2c4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7077, "upload_time": "2020-02-21T17:19:40", "upload_time_iso_8601": "2020-02-21T17:19:40.487465Z", "url": "https://files.pythonhosted.org/packages/18/fb/64fcd0e9725db187e1a8feae8b22f2edff376851f4cfdda904536baf6b32/monero_health-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "eea188ab8e63e46430d457ade2080398", "sha256": "9c8e5eeb7eae006721ce82c49e99bcba588679ea84756f59212338a225ece02e"}, "downloads": -1, "filename": "monero_health-1.0.1.tar.gz", "has_sig": false, "md5_digest": "eea188ab8e63e46430d457ade2080398", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7070, "upload_time": "2020-02-21T17:39:07", "upload_time_iso_8601": "2020-02-21T17:39:07.963391Z", "url": "https://files.pythonhosted.org/packages/5b/d9/a213a88cd6309176f08afa70d28527cb8eb8fe20f741c7cabeae6a705d25/monero_health-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "9ddc4221bf716b905dd3e1297db1a725", "sha256": "22900e42172b6ca8300b48aee1d51131072589ff0e0e32f07e62bd79eb0ab554"}, "downloads": -1, "filename": "monero_health-1.0.2.tar.gz", "has_sig": false, "md5_digest": "9ddc4221bf716b905dd3e1297db1a725", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7077, "upload_time": "2020-02-21T17:55:05", "upload_time_iso_8601": "2020-02-21T17:55:05.877047Z", "url": "https://files.pythonhosted.org/packages/7f/ed/19fd1e9cac5ffe56e10ec8b924d3ba8fc55836144745a4374b670e776de6/monero_health-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "3543bcfed1f169692d0eebc6051a5beb", "sha256": "ccbf1561db26843306419628e48f05ece669207b345e41d8c1da57cb1334abdf"}, "downloads": -1, "filename": "monero_health-1.0.3.tar.gz", "has_sig": false, "md5_digest": "3543bcfed1f169692d0eebc6051a5beb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6937, "upload_time": "2020-03-03T09:45:59", "upload_time_iso_8601": "2020-03-03T09:45:59.991925Z", "url": "https://files.pythonhosted.org/packages/15/52/6933ad49f4a1ec9598fe7d6a63185162ef3b46a9d7d1c29b29fdcc2f2743/monero_health-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "5c0c292cd3d87536c8156f339a967f2d", "sha256": "4e6805c428e777a30938fe39985fee5e0fbe794c7054dec1fa2b3992a4c42101"}, "downloads": -1, "filename": "monero_health-1.0.4.tar.gz", "has_sig": false, "md5_digest": "5c0c292cd3d87536c8156f339a967f2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6947, "upload_time": "2020-03-03T10:49:15", "upload_time_iso_8601": "2020-03-03T10:49:15.437043Z", "url": "https://files.pythonhosted.org/packages/d3/e4/d52e2c47a95085c2c7d071ec02a8b6f5c68ecdd7ee39ff1f51f937af0870/monero_health-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5c0c292cd3d87536c8156f339a967f2d", "sha256": "4e6805c428e777a30938fe39985fee5e0fbe794c7054dec1fa2b3992a4c42101"}, "downloads": -1, "filename": "monero_health-1.0.4.tar.gz", "has_sig": false, "md5_digest": "5c0c292cd3d87536c8156f339a967f2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6947, "upload_time": "2020-03-03T10:49:15", "upload_time_iso_8601": "2020-03-03T10:49:15.437043Z", "url": "https://files.pythonhosted.org/packages/d3/e4/d52e2c47a95085c2c7d071ec02a8b6f5c68ecdd7ee39ff1f51f937af0870/monero_health-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:24 2020"}